{"INMR01": {"INMLRECL": 80, "INMFNODE": "BVOMM", "INMFUID": "RLRICE", "INMTNODE": "BVOMM", "INMTUID": "RLRICE", "INMFTIME": "20100210213901000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 2821728, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 4000, "INMRECFM": "FB", "INMDIR": 17, "INMDSNAM": "RLRICE.OS.DISASM.CBT", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 2821728, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 2821728, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"RLRICE.OS.DISASM.CBT": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 4000, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3339, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 0}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0b\\xa0\\x00\\x04j@`'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0b\\xa0\\x00\\x04j@`'", "b'X\\xe2p\\x88\\x00\\x00\\x00\\x10\\x00\\x03\\x00\\x13\\x00\\x02\\x00-'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$TODO": {"ttr": 11013, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x008\\x01\\x10\\x00\\x7f\\x01\\x10\\x04\\x1f\\x11\\x10\\x00#\\x00\\n\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "2010-01-07T00:00:00", "modifydate": "2010-02-10T11:10:38", "lines": 35, "newlines": 10, "modlines": 0, "user": "RLRICE"}, "text": "Allow user data areas to be sorted\n\nOver-ride the DD names used by the assembler.\nOther utilities may need SYSIN, SYSPRINT, SYSLIB, SYSPUNCH\n\n\n\nadd a FIND and a select to the label display when adding a USING\n\nReverse the order of labels in DSECTs when adding a USING\n. currently the order is high to low (displacement)\n. change to low to high\n. allow labels to be sorted by name?\n\nImprove BASE register definitions\n. If begin is blank.. default to zero\n. if end is blank.. default to length of CSECT\n. if referred disp is blank.. default to zero\n\n\nGenerate a \"COPY REGEQU\" or the register equates immediately\nbefore the END statement?\n\nHow to generate code for the areas referenced in the \"pre assembled\"\ndsects (data sets supplied via option K)\n\nat times it disassembles 1 byte too much\n\nAdd more opcodes\n\nAllow object text files to be disassembled\n\nChange processing of DSNs (SYSLIBs, pre-processed macro KSDSes,\n  output data set) so they work like SPF.  That is if not quoted,\n  dd the user's TSO ID as a prefix.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISALIST": {"ttr": 5894, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00@\\x01\\t3\\x7f\\x01\\x10\\x01O\\x076\\x01\\x1a\\x01\\r\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2009-12-03T00:00:00", "modifydate": "2010-01-14T07:36:40", "lines": 282, "newlines": 269, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: DISALIST                                              *\n*                                                                     *\n*  Function:                                                          *\n*   Allow the user to enter assembler source.                         *\n*                                                                     *\n*   The disassembler allows the user to use actual assembler source   *\n*   source to define DSECTs and LABELs.                               *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISALIST CSECT\nDISALIST AMODE 31\nDISALIST RMODE ANY\n         USING DISALIST,R15\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'DISALIST'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISALIST,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR\n         A     R15,DXD_START\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        SET SAVE AREA ADDRESS\n         USING DXDALIST,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n         USING DCBE,SYSIN_DCBE\n         XC    DISCOMM_DSECT_NEXT,DISCOMM_DSECT_NEXT\n* ------------------------------------------------------------------- *\n*        Allocate SYSIN                                               *\n* ------------------------------------------------------------------- *\n         ITRACE ID=ALOC_IN\n         MVI   DAIR_FUNC,$DAIR_FREE           FREE\n         MVC   DAIR_DD,DD_SYSIN               SET DDNAME\n         LA    R1,DAIRREQ                     DAIR PARMS\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        FREE SYSIN\n         MVI   DAIR_FUNC,$DAIR_ALLOC          ALLOCATE\n         MVI   DAIR_OPTS,$DAIR_TEMP+$DAIR_USE_DD\n         LA    R1,DAIRREQ                     DAIR PARMS\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        ALLOCATE SYSIN\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0100                        NO\n* ------------------------------------------------------------------- *\n*        Copy existing source to SYSIN                                *\n* ------------------------------------------------------------------- *\n         ITRACE ID=COPY_SRC\n         OPEN  (SYSIN_DCB,OUTPUT),                                     +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_OPEN)\n         ICM   R3,15,DISCOMM_ASM_NEXT         FIRST ASSEMBLER SOURCE\n         BZ    INIT0020\n         USING ASM_DSECT,R3\nINIT0010 DS    0H\n         PUT   SYSIN_DCB,ASM_SOURCE           WRITE TO SYSIN\n         LR    R1,R3\n         ICM   R3,15,ASM_NEXT                 NEXT SOURCE\n         FREEMAIN RU,                         FREE THE ASM BLOCK       +\n               A=(1),                                                  +\n               LV=ASM_DSECT_L\n         LTR   R3,R3                          ANOTHER SOURCE STATEMENT?\n         BNZ   INIT0010                       YES\nINIT0020 DS    0H\n         XC    DISCOMM_ASM_NEXT,DISCOMM_ASM_NEXT\n         CLOSE SYSIN_DCB,                                              +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_CLOSE)\n         FREEPOOL SYSIN_DCB\n* ------------------------------------------------------------------- *\n*        Obtain data set ID                                           *\n* ------------------------------------------------------------------- *\n         ITRACE ID=LMINIT\n         LA    R0,FUNCTION_LMINIT\n         ST    R0,DXD_SPF_1\n         LA    R0,FUNCTION_DDID               DDID (RETURNED BY LMINIT)\n         ST    R0,DXD_SPF_2\n         LA    R0,COMM_BLANKS\n         ST    R0,DXD_SPF_3\n         ST    R0,DXD_SPF_4\n         ST    R0,DXD_SPF_5\n         ST    R0,DXD_SPF_6\n         ST    R0,DXD_SPF_7\n         ST    R0,DXD_SPF_8\n         ST    R0,DXD_SPF_9\n         LA    R0,DD_SYSIN                    DDNAME\n         ST    R0,DXD_SPF_10                  SET DDNAME ADDR\n         OI    DXD_SPF_10,X'80'               SET END-OF-LIST\n         LA    R1,DXD_SPF_PARMS               SPF PARMS\n         L     R15,COMM_ISPLINK               ISPLINK ENTRY POINT\n         BALR  R14,R15                        OBTAIN DDID\n         ITRACE ID=LMINITRC,                                           +\n               RDATA1=R15,                                             +\n               DATA2=SPF_DDID\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         MVC   DXD_DDID,SPF_DDID              SAVE SYSIN DATASET ID\n         ITRACE ID=IN_DDID,                                            +\n               DATA1=DXD_DDID\n* ------------------------------------------------------------------- *\n*        Call EDIT                                                    *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         ITRACE ID=CALLEDIT,                                           +\n               DATA1=DXD_DDID\n         LA    R0,FUNCTION_EDIT\n         ST    R0,DXD_SPF_1\n         LA    R0,COMM_BLANKS\n         ST    R0,DXD_SPF_2                   .. DATASET NAME\n         ST    R0,DXD_SPF_3                   .. VOLSER\n         ST    R0,DXD_SPF_4                   .. PASSWORD\n         ST    R0,DXD_SPF_5                   .. PANEL NAME\n         ST    R0,DXD_SPF_6                   .. MACRO NAME\n         ST    R0,DXD_SPF_7                   .. PROFILE NAME\n         LA    R0,DXD_DDID                    DDID\n         ST    R0,DXD_SPF_8                   SET DATA ID ADDR\n         OI    DXD_SPF_8,X'80'                FLAG END-OF-LIST\n         LA    R1,DXD_SPF_PARMS               PARMS FOR EDIT\n         L     R15,COMM_ISPLINK\n         BALR  R14,R15                        LINK TO EDIT\n* ------------------------------------------------------------------- *\n*        Save updated source                                          *\n* ------------------------------------------------------------------- *\n         LA    R1,MAIN0020                    EOD ADDRESS\n         ST    R1,DCBEEODA                    SET EOD ADDRESS\n         ITRACE ID=OPEN\n         OPEN  (SYSIN_DCB,INPUT),                                      +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_OPEN)\n         LA    R3,DISCOMM_ASM_PREV\nMAIN0010 DS    0H\n         ITRACE ID=GET\n         GET   SYSIN_DCB,DXD_IO               READ A RECORD\n         ITRACE ID=SOURCE\n         GETMAIN RU,                                                   +\n               LV=ASM_DSECT_L,                                         +\n               LOC=BELOW\nNEW      USING ASM_DSECT,R1\n         XC    NEW.ASM_DSECT(ASM_DSECT_L),NEW.ASM_DSECT\n         ST    R1,ASM_NEXT                    SET NEXT BLOCK IN PREV\n         ST    R3,NEW.ASM_PREV                SET PREV BLOCK IN NEW\n         MVC   NEW.ASM_EYE,ASM_ID             IDENTIFY THE BLOCK\n         MVC   NEW.ASM_SOURCE,DXD_IO          COPY DATA\n         LR    R3,R1\n         B     MAIN0010                       READ NEXT RECORD\n         DROP  NEW\nMAIN0020 DS    0H\n         ITRACE ID=CLOSE\n         CLOSE SYSIN_DCB,                                              +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_CLOSE)\n         FREEPOOL SYSIN_DCB\n* ------------------------------------------------------------------- *\n*        Free SYSIN                                                   *\n* ------------------------------------------------------------------- *\n         ITRACE ID=FREE\n         MVI   DAIR_FUNC,$DAIR_FREE\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15\n         OI    DISCOMM_FLAGS,$DISCOMM_ASSEMBLE_SOURCE\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=LM_ERR,                                             +\n               RDATA1=R15\n         MVI   COMM_MSG_ID+1,1\n         STH   R15,COMM_INFO_01\n         MVI   COMM_MSG_ID,0\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15                        CREATE MESSAGE(S)\n         MVC   SPF_MSG_1,COMM_MSG_1           COPY MESSAGE(S)\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\nERR0100  DS    0H\n         XC    SESS_DISP_VDATA_ADDR,SESS_DISP_VDATA_ADDR\n         MVC   SESS_DISP_PANEL,PANEL_DIS0000  SET PANEL NAME\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15                        DISPLAY PANEL\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START         DC   Q(DXDALIST)\n\nH4                DC   H'4'\n\nASM_ID            DC   CL8'ASM'\nDD_SYSIN          DC   CL8'SYSIN'\nFUNCTION_DDID     DC   CL8'DDID'\nFUNCTION_EDIT     DC   CL8'EDIT'\nFUNCTION_LMINIT   DC   CL8'LMINIT'\nPANEL_DIS0000     DC   CL8'DIS0000'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDALIST          DSECT\n                  COPY DXDPREF\n\nDXD_SPF_PARMS     DS   0A\nDXD_SPF_1         DS   A\nDXD_SPF_2         DS   A\nDXD_SPF_3         DS   A\nDXD_SPF_4         DS   A\nDXD_SPF_5         DS   A\nDXD_SPF_6         DS   A\nDXD_SPF_7         DS   A\nDXD_SPF_8         DS   A\nDXD_SPF_9         DS   A\nDXD_SPF_10        DS   A\n\nDXD_DDID          DS   CL8\nDXD_IO            DS   CL80\n\n                  DAIRREQ DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 IHADCBE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n                 END  DISALIST\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISASMU1": {"ttr": 4872, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00 \\x01\\x10\\x00\\x7f\\x01\\x10\\x01/\\x10Q\\x02D\\x02A\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2010-01-07T00:00:00", "modifydate": "2010-01-12T10:51:20", "lines": 580, "newlines": 577, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: DISASMU1                                              *\n*                                                                     *\n*  Function:                                                          *\n*                                                                     *\n*   The disassembler can use actual assembler source for label        *\n*   mapping.  The source can be supplied to the disassembler          *\n*   during a disassembly run or pre-processed by this utility.        *\n*                                                                     *\n*   The assembler output is scanned to obtain DSECT names, label      *\n*   names, and the displacements to the labels.  In order for the     *\n*   utility to find names and displacements, the PRINT options        *\n*   should be ON,GEN.                                                 *\n*                                                                     *\n*   SYSUT1   SYSPRINT file from the assembler                         *\n*   SYSPRINT Messages generated by this utility                       *\n*   SYSUT2   Output.  This information can be supplied to the         *\n*            disassembler via DSECTxx DD statements.         .        *\n*                                                                     *\n*                                                                     *\n*   The high-level assembler now allows symbolic names (labels)       *\n*   up to 63 characters in length.  A PDS or PDS/E only allows        *\n*   member names up to  8 characters in length, so I chose to         *\n*   use VSAM KSDS(s) to record pre-processed DSECT info.              *\n*                                                                     *\n*                                                                     *\n*   SYSUT2 is a VSAM KSDS with:                                       *\n*       KEYS        (67, 0)                                           *\n*       RECORDSIZE  (81 81)                                           *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISASMU1 CSECT\nDISASMU1 AMODE 24\nDISASMU1 RMODE 24\n         USING DISASMU1,R12\n         USING DSECT_DSECT,R10\n         USING LABEL_DSECT,R9\n         USING EQU_DSECT,R8\n         USING IFGRPL,WK_RPL\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R12,R15                        SET BASE REG\n         B     UTIL0000                       SKIP EYECATCHER\n         DC    CL8'DISASMU1'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nUTIL0000 DS    0H\n         LA    R15,WK_SAVEAREA\n         ST    R13,4(R15)\n         ST    R15,8(R13)\n         LR    R13,R15\n         OPEN  (SYSPRINT,OUTPUT)              OPEN SYSPRINT\n         OPEN  (SYSUT1,INPUT)                 OPEN SYSUT1\n         USING IHADCB,SYSUT1\n         OPEN  (SYSUT2,UPDAT)                 OPEN SYSTU2\n         LTR   R15,R15\n         BNZ   ERR0040\n         CLC   DCBLRECL,H125                  LRECL CORRECT?\n         BNE   ERR0200                        NO\n         MODCB RPL=WK_RPL,                                             +\n               ACB=SYSUT2,                                             +\n               AREA=PPD,                                               +\n               AREALEN=PPD_L,                                          +\n               ARG=PPD_KEY,                                            +\n               KEYLEN=67,                                              +\n               OPTCD=(KEY,DIR,SYN,MVE,UPD)\n         PUT   SYSPRINT,MSG00\n         SR    R10,R10                        NO DSECT FOUND SO FAR\n         SR    R9,R9                          NO LABEL FOUND SO FAR\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Read a record from the assembler listing                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUTIL0010 DS    0H\n         GET   SYSUT1,ASM_DATA                READ A SYSUT1 RECORD\n         CLI   ASM_LABEL,C'*'                 COMMENT STATEMENT?\n         BE    UTIL0010                       YES\n         CLC   ASM_DATA+43,SRCSTMT            ASSEMBLER HEADING LINE?\n         BE    UTIL0010                       YES, IGNORE IT\n         CLC   XREF,ASM_DATA+45               CROSS REFERENCE?\n         BNE   UTIL0020                       NO\n         OI    WK_FLAGS,$XREF                 SET CROSS REFERENCE FLAG\nUTIL0020 DS    0H\n         TM    WK_FLAGS,$XREF                 CROSS REFERENCE FOUND?\n         BO    UTIL0010                       YES\n* ------------------------------------------------------------------- *\n*        Determine if there is a LABEL                                *\n* ------------------------------------------------------------------- *\n         CLI   ASM_LABEL,C' '                 LABEL PRESENT?\n         BE    UTIL0010                       NO\n         LA    R6,ASM_LABEL                   FIRST BYTE OF LABEL\n         LA    R2,WK_LABEL                    FIRST BYTE OF WORK LABEL\n         MVC   WK_LABEL,BLANKS                CLEAR LABEL NAME\n         LA    R1,L'WK_LABEL                  MAX LOOPS\nUTIL0030 DS    0H\n         CLI   0(R6),C' '                     BLANK?\n         BE    UTIL0040                       YES\n* ------------------------------------------------------------------- *\n*        Save label                                                   *\n* ------------------------------------------------------------------- *\n         MVC   0(1,R2),0(R6)                  COPY TO WORK LABEL\n* ------------------------------------------------------------------- *\n*        Find next non-blank                                          *\n* ------------------------------------------------------------------- *\n         LA    R2,1(R2)                       NEXT\n         LA    R6,1(R6)                       NEXT\n         BCT   R1,UTIL0030                    LOOP\n         CLI   0(R6),C' '                     BLANK?\n         BE    UTIL0040                       NO... TOO LONG\n         B     UTIL0010                       READ NEXT SYSUT1 RECORD\nUTIL0040 DS    0H\n         LA    R1,L'WK_LABEL                  MAX LOOPS\nUTIL0050 DS    0H\n         CLI   0(R6),C' '                     BLANK?\n         BNE   UTIL0060                       NO\n         LA    R6,1(R6)                       NEXT\n         BCT   R1,UTIL0050                    LOOP\n         B     UTIL0130                       ASSUME IT IS A LABEL\n* ------------------------------------------------------------------- *\n*        Determine if this is a CSECT, DSECT, or EQU                  *\n* ------------------------------------------------------------------- *\nUTIL0060 DS    0H\n         CLC   OP_DSECT(6),0(R6)              DSECT?\n         BE    UTIL0090                       YES\n         CLC   OP_CSECT,0(R6)                 CSECT?  (SAME AS DSECTS)\n         BE    UTIL0090                       YES\n         CLC   OP_EQU,0(R6)                   EQUATE STATEMENT?\n         BNE   UTIL0130                       NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Process EQUATEs                                              *\n*                                                                     *\n*   Some EQUATEs are just used for defining a label like              *\n*   \"NAME    EQU  *\".                                                 *\n*                                                                     *\n*   Some bit flags or one-byte fields have EQUATEs to define their    *\n*   meanings.  If an EQUATE following a statement with a label has    *\n*   a displacment between x'00' and x'ff', assume it is defining      *\n*   bits or values for the preceding field.                           *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*   First check for the \"NAME   EQU  *\".  If not, assume it is a      *\n*   bit or one-byte value.                                            *\n*                                                                     *\n*   R6 has the address of the OPCODE (\"EQU\").                         *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LTR   R9,R9                          LABEL FOUND YET?\n         BZ    UTIL0010                       NO\n         LA    R6,L'OP_EQU(,R6)               SKIP OPCODE\n         LA    R1,20                          LOOP LIMITER\nUTIL0070 DS    0H\n         CLI   0(R6),C' '                     BLANK?\n         BNE   UTIL0080                       NO\n         LA    R6,1(,R6)                      NEXT\n         BCT   R1,UTIL0070                    LOOP\n         B     UTIL0130                       NO BLANK.. ASSUME LABEL\nUTIL0080 DS    0H\n         CLC   =C'* ',0(R6)                   ASTERISK AND A BLANK?\n         BE    UTIL0140                       YES.. TREAT LIKE A LABEL\n         CLC   =C'000',ASM_ADDR               FIRST 3 DIGITS ZEROS?\n         BNE   UTIL0010                       NO\n         GETMAIN RU,                          GETMAIN EQU BLOCK        +\n               LV=EQU_DSECT_L,                                         +\n               LOC=BELOW\n         LR    R8,R1                          COPY EQU BLOCK ADDRESS\n         XC    EQU_DSECT(EQU_DSECT_L),EQU_DSECT                         OCK\n         MVC   EQU_EYE,EQUID                  IDENTIFY THIS BLOCK\n         MVC   EQU_NEXT,LABEL_EQU_NEXT        SET CHAIN ADDRESS\n         ST    R8,LABEL_EQU_NEXT              NEW BLOCK'S ADDR\n         MVC   EQU_LABEL,WK_LABEL             SET LABEL\n         NC    ASM_ADDR+3(2),X1F1F            PREPARE FOR PACKING\n         TR    ASM_ADDR+3(2),CHXH             TRANSLATE FOR PACKING\n         PACK  WK_DISP_OUT(2),ASM_ADDR+3(3)\n         MVC   EQU_VALUE,WK_DISP_OUT          COPY EQUATE VALUE\n         B     UTIL0010\n* ------------------------------------------------------------------- *\n*        Process DSECT or CSECT statements                            *\n* ------------------------------------------------------------------- *\nUTIL0090 DS    0H\n         LA    R2,WK_DSECT_CHAIN_PREV         DSECT ANCHOR\n         ICM   R10,15,WK_DSECT_CHAIN_NEXT     FIRST DSECT BLOCK\n         BZ    UTIL0110                       NO DSECTS YET\nUTIL0100 DS    0H\n         CLC   DSECT_NAME,WK_LABEL            ALREADY ON DSECT CHAIN?\n         BE    UTIL0010                       YES.. EXIT WITH BASE SET\n         LR    R2,R10                         COPY ADDRESS\n         ICM   R10,15,DSECT_NEXT              NEXT DSECT BLOCK\n         BNZ   UTIL0100                       LOOP\nUTIL0110 DS    0H\n         GETMAIN RU,                          ACQUIRE NEW DSECT BLOCK  +\n               LV=DSECT_DSECT_L,                                       +\n               LOC=BELOW\n         XC    0(DSECT_DSECT_L,R1),0(R1)\n         ST    R1,DSECT_NEXT-DSECT_DSECT(R2)  CHAIN NEW TO PREVIOUS\n         LR    R10,R1                         SET BASE\n         MVC   DSECT_EYE,OP_DSECT             SET BLOCK ID\n         MVC   DSECT_NAME,WK_LABEL            SET DSECT'S NAME\n         SR    R9,R9                          CLEAR LABEL BLOCK ADDR\n         XC    WK_DISP_OUT,WK_DISP_OUT        SET DISP TO ZERO\n         LA    R2,DSECT_LABEL_PREV            LABEL CHAIN ANCHOR\n         B     UTIL0180                       ADD LABEL AT DISP ZERO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Determine if this statement has a valid DISP.                *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUTIL0130 DS    0H\n         LTR   R10,R10                        DSECT DETERMINED YET?\n         BZ    UTIL0010                       NO\n         CLI   ASM_DISP,C'A'                  VALID DISPLACEMENT?\n         BL    UTIL0010                       NO\n         CLI   ASM_DISP,C'F'                  VALID DISPLACEMENT?\n         BNH   UTIL0150                       YES\n         CLI   ASM_DISP,C'0'                  VALID DISPLACEMENT?\n         BL    UTIL0010                       NO\n         CLI   ASM_DISP,C'9'                  VALID DISPLACEMENT?\n         BH    UTIL0010                       NO\n         B     UTIL0150\nUTIL0140 DS    0H\n         MVI   WK_DISP_IN,C'0'                FORCE DIGIT 1 TO ZERO\n         MVC   WK_DISP_IN+1(5),ASM_ADDR       USE ADDR FOR DISP\n         B     UTIL0160\nUTIL0150 DS    0H\n         MVC   WK_DISP_IN,ASM_DISP            COPY DISPLACEMENT\nUTIL0160 DS    0H\n         NC    WK_DISP_IN,X1F1F               PREPARE FOR TRANSLATE\n         TR    WK_DISP_IN,CHXH                TRANSLATE FOR PACKING\n         PACK  WK_DISP_OUT(4),WK_DISP_IN(7)   PACK DISPLACEMENT\nUTIL0165 DS    0H\n         LA    R2,DSECT_LABEL_PREV            LABEL CHAIN ANCHOR\n         ICM   R9,15,DSECT_LABEL_NEXT         FIRST LABEL\n         BZ    UTIL0180                       NO LABELS\nUTIL0170 DS    0H\n         CLC   WK_DISP_OUT(3),LABEL_DISP+1    INSERT HERE?\n         BH    UTIL0180                       YES\n         LR    R2,R9                          COPY ADDRESS\n         ICM   R9,15,LABEL_NEXT               NEXT LABEL\n         BNZ   UTIL0170                       LOOP\nUTIL0180 DS    0H\n         GETMAIN RU,                          ACQUIRE NEW LABEL BLOCK  +\n               LV=LABEL_DSECT_L,                                       +\n               LOC=BELOW\n         XC    0(LABEL_DSECT_L,R1),0(R1)\n         ST    R1,LABEL_NEXT-LABEL_DSECT(R2)  CHAIN PREVIOUS TO NEW\n         ST    R9,LABEL_NEXT-LABEL_DSECT(R1)  CHAIN NEXT BLOCK TO NEW\n         LR    R9,R1                          SET BASE\n         MVC   LABEL_EYE,LABEL                SET BLOCK IDENTIFIER\n         MVC   LABEL_NAME,WK_LABEL            SET LABEL NAME\n         MVI   LABEL_DISP,X'00'               FORCE FIRST BYTE TO ZERO\n         MVC   LABEL_DISP+1(3),WK_DISP_OUT    SET DISPLACEMENT\n         MVI   LABEL_TYPE,$LABEL_DATA         DATA TYPE LABEL\n         B     UTIL0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n*    EOF on the assembler output has been reached.                    *\n*                                                                     *\n*    Print the info we have gathered and write it to the              *\n*    pre-processed DSECT info file (SYSUT2).                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUTIL0200 DS    0H\n         ICM   R10,15,WK_DSECT_CHAIN_NEXT     ANY DSECTS?\n         BZ    UTIL0270                       NO\n         B     UTIL0220\nUTIL0210 DS    0H\n         BAL   R11,PRT0000                    PRINT A BLANK LINE\nUTIL0220 DS    0H\n         MVC   MSG01_NAME,DSECT_NAME          COPY DSECT NAME\n         MVC   PR_DATA(MSG01L),MSG01\n         BAL   R11,PRT0000\n         MVC   PPD_NAME,DSECT_NAME            COPY NAME\n         BAL   R11,ERASE000                   ERASE OLD DATA\n         XC    PPD_SEQ,PPD_SEQ                SET SEQ TO ZERO\n         MVC   PPD_DATA(DSECT_DSECT_L),DSECT_DSECT\n         LA    R2,DSECT_DSECT_L+L'PPD_KEY\n         BAL   R11,WRITE000\n         ICM   R9,15,DSECT_LABEL_NEXT         FIRST LABEL BLOCK\n         BZ    UTIL0260                       NO LABELS\nUTIL0230 DS    0H\n         MVC   MSG02_NAME,LABEL_NAME          COPY LABEL NAME\n         UNPK  MSG02_DISP(9),LABEL_DISP(5)\n         TR    MSG02_DISP,HEXCHAR\n         MVI   MSG02_DISP+8,C' '\n         MVC   MSG02_TYPE,LABEL_TYPE          COPY LABEL TYPE\n         MVC   PR_DATA(MSG02L),MSG02\n         BAL   R11,PRT0000                    PRINT\n         MVC   PPD_DATA(LABEL_DSECT_L),LABEL_DSECT\n         LA    R2,LABEL_DSECT_L+L'PPD_KEY\n         BAL   R11,WRITE000\n         ICM   R8,15,LABEL_EQU_NEXT           FIRST EQU BLOCK\n         BZ    UTIL0250\nUTIL0240 DS    0H\n         MVC   MSG03_NAME,EQU_LABEL           COPY LABEL\n         MVC   WK_UNPACK(1),EQU_VALUE\n         UNPK  MSG03_VALUE(3),WK_UNPACK(2)\n         TR    MSG03_VALUE,HEXCHAR\n         MVI   MSG03_VALUE+2,C' '\n         MVC   PR_DATA(MSG03L),MSG03\n         BAL   R11,PRT0000\n         MVC   PPD_DATA(EQU_DSECT_L),EQU_DSECT\n         LA    R2,EQU_DSECT_L+L'PPD_KEY\n         BAL   R11,WRITE000\n         ICM   R8,15,EQU_NEXT\n         BNZ   UTIL0240\nUTIL0250 DS    0H\n         ICM   R9,15,LABEL_NEXT\n         BNZ   UTIL0230\nUTIL0260 DS    0H\n         ICM   R10,15,DSECT_NEXT\n         BNZ   UTIL0210\n         B     EXIT0000                       AND EXIT\nUTIL0270 DS    0H\n         MVC   PR_DATA(MSG04L),MSG04\n         BAL   R11,PRT0000\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nERASE000 DS    0H\n         XC    PPD_SEQ,PPD_SEQ                ZERO SEQ#\nERASE010 DS    0H\n         MODCB RPL=WK_RPL,                                             +\n               OPTCD=(KEY,DIR,SYN,MVE,UPD)\n         GET   RPL=WK_RPL\n         LTR   R15,R15\n         BNZ   ERASE020\n         ERASE RPL=WK_RPL\n         LTR   R15,R15\n         BNZ   ERR0010\n         ICM   R1,15,PPD_SEQ                  SEQUENCE NUMBER\n         LA    R1,1(,R1)                      PLUS 1\n         STCM  R1,15,PPD_SEQ                  UPDATE SEQUENCE NBR\n         B     ERASE010\nERASE020 DS    0H\n         ENDREQ RPL=WK_RPL\n         CLOSE SYSUT2,                                                 +\n               MODE=31,                                                +\n               TYPE=T\n         LTR   R15,R15                        SUCCESSFUL?\n         BZR   R11\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWRITE000 DS    0H\n         MODCB RPL=WK_RPL,                                             +\n               RECLEN=(R2),                                            +\n               OPTCD=(KEY,DIR,SYN,MVE,NUP)\n         LTR   R15,R15\n         BNZ   ERR0020\n         PUT   RPL=WK_RPL\n         LTR   R15,R15\n         BNZ   ERR0030\n         ICM   R1,15,PPD_SEQ\n         LA    R1,1(,R1)\n         STCM  R1,15,PPD_SEQ\n         BR    R11\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         CP    WK_LINE,P_65                   TIME FOR HEADING?\n         BL    PRT0010                        NO\n         PUT   SYSPRINT,MSG00\n         ZAP   WK_LINE,P_1\nPRT0010  DS    0H\n         PUT   SYSPRINT,PR_CC\n         MVC   PR_DATA,PR_CC\n         AP    WK_LINE,P_1\n         BR    R11\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVC   PR_DATA(ERROR01_L),ERROR01\n         MVC   PR_DATA+(ERROR01_FUNCTION-ERROR01)(L'ERROR01_FUNCTION),F+\n               UNCTION_GET\n         B     ERR0100\nERR0020  DS    0H\n         MVC   PR_DATA(ERROR01_L),ERROR01\n         MVC   PR_DATA+(ERROR01_FUNCTION-ERROR01)(L'ERROR01_FUNCTION),F+\n               UNCTION_MODCB\n         B     ERR0100\nERR0030  DS    0H\n         MVC   PR_DATA(ERROR01_L),ERROR01\n         MVC   PR_DATA+(ERROR01_FUNCTION-ERROR01)(L'ERROR01_FUNCTION),F+\n               UNCTION_PUT\n         B     ERR0100\nERR0040  DS    0H\n         MVC   PR_DATA(ERROR01_L),ERROR01\n         MVC   PR_DATA+(ERROR01_FUNCTION-ERROR01)(L'ERROR01_FUNCTION),F+\n               UNCTION_OPEN\nERR0100  DS    0H\n         CVD   R15,WK_DWORD                   CONVERT RC TO DECIMAL\n         ED    ERROR01_RC,WK_DWORD+6          EDIT RC\n         UNPK  ERROR01_FDBK(7),RPLFDBK(4)     UNPACK FEED BACK\n         TR    ERROR01_FDBK,HEXCHAR\n         MVI   ERROR01_FDBK+6,C' '\n         BAL   R11,PRT0000                    PRINT\n         DC    H'0'\nERR0200  DS    0H\n         MVC   PR_DATA(ERROR02_L),ERROR02\n         LH    R1,DCBLRECL\n         CVD   R1,WK_DWORD\n         ED    PR_DATA+(ERROR02_LRECL-ERROR02),WK_DWORD+6\n         BAL   R11,PRT0000\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         CLOSE SYSUT1\n         CLOSE SYSPRINT\n         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK_DWORD           DS    D\nWK_SAVEAREA        DC    18F'0'               REGISTER SAVE AREA\nWK_RPL             RPL   AM=VSAM\n\nWK_DSECT_CHAIN_PREV DC   A(0)\nWK_DSECT_CHAIN_NEXT DC   A(0)\n\nH125               DC    H'125'\n\nWK_FLAGS           DC    X'00'\n$XREF              EQU   X'80'                .. CROSS REFERENCE FOUND\n$OPEN              EQU   X'80'                .. SYSUT2 DCB IS OPEN\n\nWK_LABEL           DC    CL63' '\n\nWK_UNPACK          DC    XL8'00'\n\nXREF               DC    C' CROSS REFERENCE '\n\nHEXCHAR            EQU   *-C'0'\n                   DC    C'0123456789ABCDEF'\n\nP_1                DC    P'1'\nP_65               DC    P'65'\nWK_LINE            DC    PL3'0'\n\nX1F1F              DC    8X'1F'\n\nCHXH               DC    X'000A0B0C0D0E0F000000000000000000'  00-0F\n                   DC    X'00010203040506070809000000000000'  10-1F\n\nASMHEAD            DC    CL35'ASSEMBLER OUTPUT'\nBLANKS             DC    CL64' '\nOP_DSECT           DC    CL8'DSECT'\nOP_CSECT           DC    CL8'CSECT'\nOP_EQU             DC    C'EQU '\nSRCSTMT            DC    C'SOURCE STATEMENT'\nWK_DISP_IN         DC    CL7' '\nWK_DISP_OUT        DC    XL4'000000'\nLABEL              DC    CL8'LABEL'\nEQUID              DC    CL8'EQU'\n\nPR_CC              DC    C' '\nPR_DATA            DC    CL132' '\n\nFUNCTION_OPEN      DC    CL10'OPEN'\nFUNCTION_MODCB     DC    CL10'MODCB'\nFUNCTION_GET       DC    CL10'GET'\nFUNCTION_PUT       DC    CL10'PUT'\n\nMSG00              DC    CL132'1    DISASMUT1   Preprocessed DSECTs'\nMSG00L             EQU   *-MSG00\n\nMSG01              DS    0C\n                   DC    C'DSECT '\nMSG01_NAME         DC    CL63' '\nMSG01L             EQU   *-MSG01\n\nMSG02              DS    0C\n                   DC    C'  DISP '\nMSG02_DISP         DC    CL8' '\n                   DC    C' '\nMSG02_TYPE         DC    C' '\n                   DC    C'  LABEL '\nMSG02_NAME         DC    CL63' '\nMSG02L             EQU   *-MSG02\n\nMSG03              DS    0C\n                   DC    C'    EQUATE '\n                   DC    C'  VALUE '\nMSG03_VALUE        DC    CL2' '\n                   DC    CL2' '\nMSG03_NAME         DC    CL63' '\nMSG03L             EQU   *-MSG03\n\nMSG04              DS    0C\n                   DC    C'**  No DSECTS found'\nMSG04L             EQU   *-MSG04\n\nERROR01            DS    0C\n                   DC    C'Error during '\nERROR01_FUNCTION   DC    CL10' '\n                   DC    C', R15='\nERROR01_RC         DC    X'40202120'\n                   DC    C'  VSAM FDBK='\nERROR01_FDBK       DC    CL6' '\n                   DC    C' '\nERROR01_L          EQU   *-ERROR01\n\nERROR02            DS    0C\n                   DC    C'Assembler listing LRECL is '\nERROR02_LRECL      DC    X'40202120'\n                   DC    C', not 121.. aborting'\nERROR02_L          EQU   *-ERROR02\n*---------------------------------------------------------------------*\n*                                                                     *\n*              ASSEMBLER OUTPUT DCB                                   *\n*                                                                     *\n*---------------------------------------------------------------------*\nSYSUT1    DCB  DDNAME=SYSUT1,                                          +\n               DSORG=PS,                                               +\n               EODAD=UTIL0200,                                         +\n               MACRF=GM\nSYSUT2    ACB  AM=VSAM,                                                +\n               DDNAME=SYSUT2,                                          +\n               MACRF=(KEY,DIR,SEQ,OUT)\nSYSPRINT  DCB  DDNAME=SYSPRINT,                                        +\n               DSORG=PS,                                               +\n               RECFM=FBA,                                              +\n               LRECL=133,                                              +\n               MACRF=PM\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n               LTORG\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nASM_DATA       DC      CL125' '\nASM_DATAL      EQU     *-ASM_DATA\n               ORG     ASM_DATA+005\nASM_DISP       DS      CL6\n               ORG     ASM_DATA+027\nASM_ADDR       DS      CL5\n               ORG     ASM_DATA+039\nASM_STMT_NBR   DS      CL5\nASM_STMT_TYPE  DS      C\nASM_LABEL      DS      C\n               ORG     ASM_DATA+125\n\n               COPY    PPDDATA\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n               DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               IFGACB  AM=VSAM\nACB_L          EQU     *-IFGACB\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         IFGRPL AM=VSAM\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         DCBD   DSORG=PS\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         COPY   REGEQU\n         END    DISASMU1\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISASSEM": {"ttr": 5634, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00#\\x01\\t6O\\x01\\x10\\x01O\\x075\\x02\\xfa\\x02\\xe2\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2009-12-30T00:00:00", "modifydate": "2010-01-14T07:35:23", "lines": 762, "newlines": 738, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: DISASSEM                                             *\n*                                                                    *\n*  Function:                                                         *\n*   Dynamically invoke the assembler to assemble DSECTs.             *\n*                                                                    *\n*   The idea here is to allow the disassembler to generate labels    *\n*   rather than a \"displacement from register\". Rather than having   *\n*   to code control statements with labels and their displacements,  *\n*   the disassembler will call the assembler, then read the          *\n*   assembler listing to 'learn' DSECT and label names plus the      *\n*   displacements of labels within DSECTs.                           *\n*                                                                    *\n*                                                                    *\n*                                                                    *\n*                                                                    *\n*   Any method of defining DSECTs that are valid to the assembler    *\n*   may be used.  They may be defined inline, by macros, or COPY     *\n*   statements.  The disassembler links to the assembler to assemble *\n*   the source, then scans the assembler output to learn the DSECT   *\n*   names, label names, and displacements to the labels.  In order   *\n*   for DISASM to find the names and displacements, the PRINT option *\n*   of the assembler must be on.                                     *\n*                                                                    *\n*   Labels and DSECT names are limited to 63 characters in length.   *\n*                                                                    *\n*   Input to the assembler is delimited by ASM,START and ASM,END     *\n*   statements.  Any statements between the ASM,START and ASM,END    *\n*   are copied to SYSIN.  Assembler input statements are listed on   *\n*   the DISPRINT output, but are otherwise ignored.  Any macros not  *\n*   defined inline and any COPY elements must be available to the    *\n*   assembler in a library in the SYSLIB concatenation.              *\n*                                                                    *\n*   If the return code from the assembler is greater than 4, the     *\n*   disassembly is aborted.  The assembler output is copied to the   *\n*   DISDEBUG data set if allocated.                                  *\n*                                                                    *\n*   The DSECTs are chained from field DISCOMM_DSECT_NEXT in DISCOMM. *\n*   The labels within the DSECT are chained from field DSECT_LABEL.  *\n*   DSECT_DSECT maps the DSECT blocks, LABEL_DSECT maps the label    *\n*   control blocks.                                                  *\n*                                                                    *\n*--------------------------------------------------------------------*\nDISASSEM CSECT\nDISASSEM AMODE 31\nDISASSEM RMODE ANY\n         USING DISASSEM,R15\n         B     INIT0000                       SKIP EYECATCHER\nMODID    DC    CL8'DISASSEM'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISASSEM,R10\n         USING DISCOMM,R9\n         USING DSECT_DSECT,R3                 DEFINE BASE\n         USING LABEL_DSECT,R4                 DEFINE BASE\n         USING EQU_DSECT,R5                   DEFINE BASE\n         L     R15,SESS_DXD_ADDR              WORK AREA ADDR\n         A     R15,DXD_START                  PLUS DISP TO OUR PART\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        SET SAVE AREA ADDRESS\n         USING DXDASSEM,R13\n         MVC   DXD_CSECT,MODID\n         USING DCBE,SYSPRINT_DCBE\n         ITRACE ID=ENTRY\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n         MVC   DAIR_MEMBER,COMM_BLANKS\n         MVC   DAIR_VOLSER,COMM_BLANKS\n         MVC   DAIR_UNIT,COMM_BLANKS\n* ------------------------------------------------------------------- *\n*        ALLOCATE SYSIN                                               *\n* ------------------------------------------------------------------- *\n         ITRACE ID=ALOC_IN\n         MVI   DAIR_FUNC,$DAIR_FREE           FREE\n         MVI   DAIR_OPTS,$DAIR_NO_MSGS\n         MVC   DAIR_DD,DD_SYSIN               SET DDNAME\n         LA    R1,DAIRREQ                     DAIR PARMS\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        FREE SYSIN\n         MVI   DAIR_FUNC,$DAIR_ALLOC          ALLOCATE\n         MVI   DAIR_OPTS,$DAIR_TEMP+$DAIR_USE_DD\n         LA    R1,DAIRREQ                     DAIR PARMS\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        ALLOCATE SYSIN\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BNZ   ERR0000                        NO\n* ------------------------------------------------------------------- *\n*        ALLOCATE SYSPRINT                                            *\n* ------------------------------------------------------------------- *\n         ITRACE ID=ALOC_PRT\n         MVI   DAIR_FUNC,$DAIR_FREE           FREE\n         MVI   DAIR_OPTS,$DAIR_NO_MSGS\n         MVC   DAIR_DD,DD_SYSPRINT            SET DDNAME\n         LA    R1,DAIRREQ                     DAIR PARMS\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        FREE SYSPRINT\n         MVI   DAIR_FUNC,$DAIR_ALLOC          ALLOCATE\n         MVI   DAIR_OPTS,$DAIR_TEMP+$DAIR_USE_DD\n         MVC   DAIR_DD,DD_SYSPRINT            SET DDNAME\n         LA    R1,DAIRREQ                     DAIR PARMS\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        CALL OSDAIR\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BNZ   ERR0000                        NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Allocate SYSLIB                                              *\n*                                                                     *\n*     1) Free SYSLIB to make sure it is available                     *\n*     2) Allocate each library                                        *\n*     3) Concatenate the library to SYSLIB                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVI   DAIR_FUNC,$DAIR_FREE           FREE\n         MVI   DAIR_OPTS,$DAIR_NO_MSGS\n         MVC   DAIR_DD,DD_SYSLIB              SET DDNAME\n         ITRACE ID=FREE_SYS,                                           +\n               DATA1=DAIR_DD\n         LA    R1,DAIRREQ                     DAIR PARMS\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        FREE SYSLIB\n         ICM   R7,15,DISCOMM_SYSLIB_NEXT      FIRST SYSLIB LIBRARY\n         BZ    INIT0050\n         USING SYSLIB_DSECT,R7\n         OI    DXD_FLAGS,$FIRST_LIBRARY       SET FLAG\nINIT0010 DS    0H\n         CLC   SYSLIB_DDNAME,COMM_BLANKS      ALLOCATED?\n         BE    INIT0020                       NO\n         ITRACE ID=FREE_LIB,                                           +\n               DATA1=SYSLIB_DDNAME\n         MVI   DAIR_FUNC,$DAIR_FREE           FREE\n         MVI   DAIR_OPTS,0                    CLEAR OPTIONS\n         MVC   DAIR_DD,SYSLIB_DDNAME          COPY DDNAME\n         LA    R1,DAIRREQ                     DAIR PARMS\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        FREE LIBRARY\nINIT0020 DS    0H\n         TM    DXD_FLAGS,$FIRST_LIBRARY       FIRST LIBRARY?\n         BO    INIT0030\n         ITRACE ID=ALOC_LIB\n         MVI   DAIR_FUNC,$DAIR_ALLOC          ALLOCATE\n         MVI   DAIR_OPTS,0                    CLEAR OPTIONS\n         MVC   DAIR_DD,SYSLIB_DDNAME          COPY DDNAME\n         MVC   DAIR_DSN,SYSLIB_DSNAME         COPY DSN\n         MVI   DAIR_DISP,$DAIR_DISP_SHR       DISP=SHR\n         LA    R1,DAIRREQ                     DAIR PARMS\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        ALLOCATE LIBRARY\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BNZ   ERR0000                        NO\n         MVC   SYSLIB_DDNAME,DAIR_DD          SAVE DD NAME\n         ITRACE ID=CONCAT,                                             +\n               DATA1=SYSLIB_DDNAME\n         MVI   DAIR_FUNC,$DAIR_CONCAT         CONCATENATE\n         MVI   DAIR_OPTS,$DAIR_USE_DD         USE SPECIFIED DD NAME\n         MVC   DAIR_DD,DD_SYSLIB              COPY DDNAME\n         MVC   DAIR_DSN(L'SYSLIB_DDNAME),SYSLIB_DDNAME\n         LA    R1,DAIRREQ                     DAIR PARMS\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        CONCATENATE LIBRARIES\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BNZ   ERR0000                        NO\n         B     INIT0040\nINIT0030 DS    0H\n         ITRACE ID=FIRST\n         MVI   DAIR_FUNC,$DAIR_ALLOC          ALLOCATE\n         MVI   DAIR_OPTS,$DAIR_USE_DD         USE SPECIFIED DD NAME\n         MVC   DAIR_DD,DD_SYSLIB              COPY DDNAME\n         MVC   SYSLIB_DDNAME,DD_SYSLIB        COPY DDNAME\n         MVC   DAIR_DSN,SYSLIB_DSNAME         COPY DSN\n         MVI   DAIR_DISP,$DAIR_DISP_SHR       DISP=SHR\n         LA    R1,DAIRREQ                     DAIR PARMS\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        ALLOCATE LIBRARY\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BNZ   ERR0000                        NO\nINIT0040 DS    0H\n         NI    DXD_FLAGS,255-$FIRST_LIBRARY   RESET FLAG\n         ICM   R7,15,SYSLIB_NEXT              NEXT LIBRARY\n         BNZ   INIT0010\n         DROP  R7\n* ------------------------------------------------------------------- *\n*        OPEN  SYSIN                                                  *\n* ------------------------------------------------------------------- *\nINIT0050 DS    0H\n         OPEN  (SYSIN_DCB,OUTPUT),                                     +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_OPEN)\n* ------------------------------------------------------------------- *\n*        WRITE USER'S SOURCE                                          *\n* ------------------------------------------------------------------- *\n         ICM   R7,15,DISCOMM_ASM_NEXT         FIRST SOURCE STATEMENT\n         BZ    INIT0070                       NO SOURCE\n         USING ASM_DSECT,R7\nINIT0060 DS    0H\n         PUT   SYSIN_DCB,ASM_SOURCE           WRITE SOURCE\n         ICM   R7,15,ASM_NEXT                 ANOTHER SOURCE STATEMENT?\n         BNZ   INIT0060                       YES\n         DROP  R7\n* ------------------------------------------------------------------- *\n*        CLOSE SYSIN                                                  *\n* ------------------------------------------------------------------- *\nINIT0070 DS    0H\n         CLOSE SYSIN_DCB,                                              +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_OPEN)\n         FREEPOOL SYSIN_DCB\n* ------------------------------------------------------------------- *\n*        LOAD THE ASSEMBLER                                           *\n* ------------------------------------------------------------------- *\n         LOAD  EP=ASMA90                      LOAD THE ASSEMBLER\n         ST    R0,DXD_ASSEM_EP                SAVE ENTRY POINT\n* ------------------------------------------------------------------- *\n*        CALL THE ASSEMBLER                                           *\n* ------------------------------------------------------------------- *\n         LR    R15,R0                         COPY TO R15\n         LA    R1,AASMPARM                    ASSEMBLER PARM LIST ADDR\n         ITRACE ID=CALLASM,                   CALLING THE ASSEMBLER    +\n               RDATA1=R15,                    .. ASSEMBLER'S EP        +\n               RDATA2=R1                      .. ASSEMBLER'S PARMS\n         BASR  R14,R15                        LINK TO ASSEMBLER\n         ITRACE ID=ASSEM_RC,                  ASSEMBLER'S RETURN CODE  +\n               RDATA1=R15                     .. RETURN CODE\n         STH   R15,DISCOMM_ASSEMBLER_RC       SAVE ASSEMBLER RC\n         CH    R15,H4                         SERIOUS ERRORS?\n         BH    ASSM0300                       YES\n* ------------------------------------------------------------------- *\n*        READ ASSEMBLER OUTPUT                                        *\n* ------------------------------------------------------------------- *\n         LA    R1,ASSM0200\n         ST    R1,DCBEEODA\n         ITRACE ID=OPEN\n         OPEN  (SYSPRINT_DCB,INPUT),          OPEN SYSPRINT AS INPUT   +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_OPEN)\n* ------------------------------------------------------------------- *\n*        FREE EXISTING DSECTS, LABELS, EQUS                           *\n* ------------------------------------------------------------------- *\n         ICM   R3,15,DISCOMM_DSECT_NEXT       FIRST DSECT\n         BZ    ASSM0000                       NO DSECTS\nINIT0110 DS    0H\n         ICM   R4,15,DSECT_LABEL_NEXT         FIRST LABEL\n         BZ    INIT0150                       NO LABELS\nINIT0120 DS    0H\n         ICM   R5,15,LABEL_EQU_NEXT           FIRST EQUATE\n         BZ    INIT0140                       NO EQUATES\nINIT0130 DS    0H\n         LR    R1,R5                          COPY ADDRESS\n         ICM   R5,15,EQU_NEXT                 NEXT EQU BLOCK\n         FREEMAIN RU,                         FREE EQU BLOCK           +\n               A=(1),                                                  +\n               LV=EQU_DSECT_L\n         LTR   R5,R5                          ANOTHER EQUATE\n         BNZ   INIT0130                       LOOP\nINIT0140 DS    0H\n         LR    R1,R4                          COPY ADDRESS\n         ICM   R4,15,LABEL_NEXT               NEXT LABEL BLOCK\n         FREEMAIN RU,                         FREE LABEL BLOCK         +\n               A=(1),                                                  +\n               LV=LABEL_DSECT_L\n         LTR   R4,R4                          ANOTHER LABEL?\n         BNZ   INIT0120                       YES\nINIT0150 DS    0H\n         LR    R1,R3                          COPY ADDRESS\n         ICM   R3,15,DSECT_NEXT               NEXT DSECT\n         FREEMAIN RU,                         FREE LABEL BLOCK         +\n               A=(1),                                                  +\n               LV=DSECT_DSECT_L\n         LTR   R3,R3                          ANOTHER DSECT?\n         BNZ   INIT0110                       YES\nINIT0160 DS    0H\n         XC    DISCOMM_DSECT_NEXT,DISCOMM_DSECT_NEXT\n*--------------------------------------------------------------------*\n*                                                                    *\n*--------------------------------------------------------------------*\nASSM0000 DS    0H\n         SR    R3,R3                          NO DSECT IS ACTIVE\n         SR    R4,R4                          NO LABEL IS ACTIVE\nASSM0010 DS    0H\n         GET   SYSPRINT_DCB,DXD_IO\n         CLC   DISCOMM_ASSEMBLER_RC,H4        ASSEMBLER ERROR?\n         BH    ASSM0010                       YES\n         ITRACE ID=TEMP1,                                              +\n               DATA1=DXD_IO_LABEL,                                     +\n               DATA2=DXD_IO_DISP\n         CLI   DXD_IO_LABEL,C'*'              COMMENT STATEMENT?\n         BE    ASSM0010                       YES\n         CLC   SRCSTMT,DXD_IO+43              ASSEMBLER HEADING LINE?\n         BE    ASSM0010                       YES, IGNORE IT\n         CLC   XREF,DXD_IO+45                 START OF CROSS REFERENCE?\n         BNE   ASSM0020                       NO\n         OI    DXD_FLAGS,$XREF                SET CROSS REFERENCE FLAG\n         ITRACE ID=XREF                       CROSS REFERENCE STARTED\nASSM0020 DS    0H\n         TM    DXD_FLAGS,$XREF                CROSS REFERENCE FOUND?\n         BO    ASSM0010                       YES\n         CLI   DXD_IO_LABEL,C' '              LABEL PRESENT?\n         BE    ASSM0010                       NO\n         ITRACE ID=NEWLABEL,                                           +\n               DATA1=DXD_IO_LABEL\n         LA    R6,DXD_IO_LABEL                FIRST BYTE OF LABEL\n         LA    R2,DXD_LABEL                   FIRST BYTE OF WORK LABEL\n         MVC   DXD_LABEL,COMM_BLANKS          CLEAR LABEL NAME\n         LA    R1,L'DXD_LABEL                 MAX LOOPS\nASSM0030 DS    0H\n         CLI   0(R6),C' '                     BLANK?\n         BE    ASSM0040                       YES\n         MVC   0(1,R2),0(R6)                  COPY TO WORK LABEL\n         LA    R2,1(R2)                       NEXT\n         LA    R6,1(R6)                       NEXT\n         BCT   R1,ASSM0030                    LOOP\n         CLI   0(R6),C' '                     BLANK?\n         BE    ASSM0040                       NO.. TOO LONG FOR A LABEL\n         ITRACE ID=LONGLABL\n         B     ASSM0010                       READ NEXT SYSPRINT RECORD\nASSM0040 DS    0H\n         LA    R1,L'DXD_LABEL                 MAX LOOPS\nASSM0050 DS    0H\n         CLI   0(R6),C' '                     BLANK?\n         BNE   ASSM0060                       NO\n         LA    R6,1(R6)                       NEXT\n         BCT   R1,ASSM0050                    LOOP\n         B     ASSM0140                       ASSUME IT IS A LABEL\nASSM0060 DS    0H\n         ITRACE ID=LABLTYPE,                                           +\n               DATA1=0(R6)\n         CLC   OP_DSECT(6),0(R6)              DSECT?\n         BE    ASSM0090                       YES\n         CLC   OP_CSECT,0(R6)                 CSECT?\n         BE    ASSM0090                       YES\n         CLC   OP_EQU,0(R6)                   EQUATE STATEMENT?\n         BNE   ASSM0140                       NO\n         CLC   =C'000',DXD_IO_ADDR1           FIRST 3 DIGITS ZEROS?\n         BNE   ASSM0010                       NO\n*--------------------------------------------------------------------*\n*                                                                    *\n*     Build a new EQU block.                                         *\n*                                                                    *\n*     EQU block's are chained from LABEL blocks.                     *\n*     R4 is used to 'remember' the last LABEL block processed.       *\n*     Whenever a new CSECT or DSECT is encountered, R4 is 'cleared'. *\n*                                                                    *\n*--------------------------------------------------------------------*\n         LTR   R4,R4                          LABEL BASE SET?\n         BZ    ASSM0010                       NO\n         GETMAIN RU,                          GETMAIN EQU BLOCK        +\n               LV=EQU_DSECT_L,                                         +\n               LOC=ANY\nNEW      USING EQU_DSECT,R1\n         XC    NEW.EQU_DSECT(EQU_DSECT_L),NEW.EQU_DSECT                 OCK\n         LA    R5,LABEL_EQU_PREV              EQU ANCHOR\nASSM0070 DS    0H\n         LR    R2,R5                          COPY CURRENT TO PREV\nPREV     USING EQU_DSECT,R2\n         ICM   R5,15,EQU_NEXT                 NEXT BLOCK ON CHAIN\n         BNZ   ASSM0070                       LOOP IF PRESENT\n         ST    R1,PREV.EQU_NEXT               SET NEXT ON CHAIN\nASSM0080 DS    0H\n         ST    R2,NEW.EQU_PREV                SET 'NEXT'\n         MVC   NEW.EQU_EYE,EQU_ID             IDENTIFY THIS BLOCK\n         MVC   NEW.EQU_LABEL,DXD_LABEL        SET LABEL\n         NC    DXD_IO_ADDR1+3(2),HEX1F1F      PREPARE FOR PACKING\n         TR    DXD_IO_ADDR1+3(2),CHARHEX      TRANSLATE FOR PACKING\n         PACK  DXD_DISP_OUT(2),DXD_IO_ADDR1+3(3)\n         MVC   NEW.EQU_VALUE,DXD_DISP_OUT     COPY EQUATE VALUE\n         ITRACE ID=NEW_EQU,                   NEW EQUATE               +\n               RDATA1=R1,                                              +\n               DATA2=NEW.EQU_PREV\n         B     ASSM0010\n         DROP  NEW,PREV\n*--------------------------------------------------------------------*\n*                                                                    *\n*                                                                    *\n*                                                                    *\n*--------------------------------------------------------------------*\nASSM0090 DS    0H\n         ITRACE ID=SCANDSCT\n         LA    R3,DISCOMM_DSECT_PREV          FIRST DSECT BLOCK\n         B     ASSM0110\nASSM0100 DS    0H\n         CLC   DSECT_NAME,DXD_LABEL           ALREADY ON DSECT CHAIN?\n         BE    ASSM0130                       YES.. EXIT WITH BASE SET\nASSM0110 DS    0H\n         ICM   R2,15,DSECT_NEXT               ANOTHER ON CHAIN?\n         BZ    ASSM0120                       NO\n         LR    R3,R2                          COPY ADDRESS\n         B     ASSM0100                       CHECK FOR DUPLICATE NAME\nASSM0120 DS    0H\n         GETMAIN RU,                          ACQUIRE NEW DSECT BLOCK  +\n               LV=DSECT_DSECT_L,                                       +\n               LOC=ANY\nNEW      USING DSECT_DSECT,R1                 SET BASE\n         XC    NEW.DSECT_DSECT(DSECT_DSECT_L),NEW.DSECT_DSECT\n         ST    R1,DSECT_NEXT\n         ST    R2,NEW.DSECT_PREV\n         ITRACE ID=NEWDSECT,                  NEW DSECT BLOCK          +\n               RDATA1=R1,                     .. BLOCK'S ADDRESS       +\n               DATA2=DXD_LABEL                .. DSECT'S NAME\n         MVC   NEW.DSECT_EYE,OP_DSECT         SET BLOCK ID\n         MVC   NEW.DSECT_NAME,DXD_LABEL       SET DSECT'S NAME\n         LR    R3,R1                          \"REMEMBER\" LAST DSECT\n         B     ASSM0135\n         DROP  NEW\nASSM0130 DS    0H\n         ITRACE ID=DUPDSECT\nASSM0135 DS    0H\n         XC    DXD_DISP_OUT,DXD_DISP_OUT      FORCE DISP TO ZERO\n         B     ASSM0155                       ADD LABEL WITH SAME NAME\n*--------------------------------------------------------------------*\n*                                                                    *\n*        Process statements with LABELs                              *\n*                                                                    *\n*  Subsequent EQU's will be 'tied' back to the previous LABEL block. *\n*  R4 is used to 'remember' the address of the last label block..    *\n*                                                                    *\n*                                                                    *\n*--------------------------------------------------------------------*\nASSM0140 DS    0H\n         LTR   R3,R3                          DSECT DETERMINED YET?\n         BZ    ASSM0010                       NO\n         CLI   DXD_IO_DISP,C'A'               VALID DISPLACEMENT?\n         BL    ASSM0010                       NO\n         CLI   DXD_IO_DISP,C'F'               VALID DISPLACEMENT?\n         BNH   ASSM0150                       YES\n         CLI   DXD_IO_DISP,C'0'               VALID DISPLACEMENT?\n         BL    ASSM0010                       NO\n         CLI   DXD_IO_DISP,C'9'               VALID DISPLACEMENT?\n         BH    ASSM0010                       NO\nASSM0150 DS    0H\n         MVC   DXD_DISP_IN,DXD_IO_DISP        COPY DISPLACEMENT\n         NC    DXD_DISP_IN,HEX1F1F            PREPARE FOR TRANSLATE\n         TR    DXD_DISP_IN,CHARHEX            TRANSLATE FOR PACKING\n         PACK  DXD_DISP_OUT(4),DXD_DISP_IN(7) PACK DISPLACEMENT\nASSM0155 DS    0H\n         LA    R4,DSECT_LABEL_PREV            LABEL CHAIN ANCHOR\n         B     ASSM0170\nASSM0160 DS    0H\n         CLC   DXD_DISP_OUT(3),LABEL_DISP+1   INSERT HERE?\n         BH    ASSM0180                       YES\nASSM0170 DS    0H\n         LR    R2,R4                          COPY ADDRESS\nPREV     USING LABEL_DSECT,R2\n         ICM   R4,15,LABEL_NEXT               NEXT LABEL\n         BNZ   ASSM0160                       LOOP\nASSM0180 DS    0H\n         GETMAIN RU,                          ACQUIRE NEW LABEL BLOCK  +\n               LV=LABEL_DSECT_L,                                       +\n               LOC=ANY\n         ITRACE ID=NEWLABL,                   NEW LABEL BLOCK          +\n               RDATA1=R1,                     .. BLOCK'S ADDRESS       +\n               DATA2=DXD_LABEL                .. LABEL'S NAME\nNEW      USING LABEL_DSECT,R1\n         ST    R1,PREV.LABEL_NEXT\n         LTR   R4,R4\n         BZ    ASSM0190\n         ST    R1,LABEL_PREV\nASSM0190 DS    0H\n         XC    NEW.LABEL_DSECT(LABEL_DSECT_L),NEW.LABEL_DSECT\n         ST    R2,NEW.LABEL_PREV\n         ST    R4,NEW.LABEL_NEXT\n         MVC   NEW.LABEL_EYE,LABEL_ID           SET BLOCK IDENTIFIER\n         MVC   NEW.LABEL_NAME,DXD_LABEL         SET LABEL NAME\n         MVI   NEW.LABEL_DISP,X'00'             FORCE FIRST BYTE\n         MVC   NEW.LABEL_DISP+1(3),DXD_DISP_OUT DISPLACEMENT TO LABEL\n         MVI   NEW.LABEL_TYPE,$LABEL_DATA       DATA TYPE LABEL\n         XC    NEw.LABEL_EQU_PREV,NEW.LABEL_EQU_PREV\n         XC    NEW.LABEL_EQU_NEXT,NEW.LABEL_EQU_NEXT\n         LR    R4,R1                            SAVE ADDRESS\n         B     ASSM0010\n         DROP  PREV,NEW\n*---------------------------------------------------------------------*\n*                                                                     *\n*        EOF on SYSPRINT                                              *\n*                                                                     *\n*---------------------------------------------------------------------*\nASSM0200 DS    0H\n         ITRACE ID=EOF\n         CLOSE SYSPRINT_DCB,                                           +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_CLOSE)\n         FREEPOOL SYSPRINT_DCB\n         CLC   DISCOMM_ASSEMBLER_RC,H4        ERROR DURING ASSEMBLY?\n         BNH   ASSM0210                       NO\n         ITRACE ID=ASMERROR,                                           +\n               DATA1=DISCOMM_ASSEMBLER_RC\n*---------------------------------------------------------------------*\n*                                                                     *\n*                                                                     *\n*        MAKE SURE 1ST BLOCK'S DON'T HAVE 'PREV'                      *\n*                                                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\nASSM0210 DS    0H\n         ICM   R3,15,DISCOMM_DSECT_NEXT       FIRST DSECT\n         BZ    EXIT0000\n         XC    DSECT_PREV,DSECT_PREV          MAKE SURE 1ST HAS NO PREV\nASSM0220 DS    0H\n         ICM   R4,15,DSECT_LABEL_NEXT         FIRST LABEL IN DSECT\n         BZ    ASSM0250\n         XC    LABEL_PREV,LABEL_PREV          MAKE SURE 1ST HAS NO PREV\nASSM0230 DS    0H\n         ICM   R5,15,LABEL_EQU_NEXT           FIRST EQU\n         BZ    ASSM0240\n         XC    EQU_PREV,EQU_PREV              MAKE SURE 1ST HAS NO PREV\nASSM0240 DS    0H\n         ICM   R4,15,LABEL_NEXT               NEXT LABEL\n         BNZ   ASSM0230\nASSM0250 DS    0H\n         ICM   R3,15,DSECT_NEXT               NEXT DSECT\n         BNZ   ASSM0220\n         B     EXIT0000                       AND EXIT\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nASSM0300 DS    0H\n         ITRACE ID=ASMERR\n* ------------------------------------------------------------------- *\n*        OBTAIN DATA SET ID                                           *\n* ------------------------------------------------------------------- *\n         ITRACE ID=LMINIT,                                             +\n               DATA1=DD_SYSPRINT\n         LA    R0,LMINIT\n         ST    R0,DXD_SPF_1\n         LA    R0,DDID                        DDID (RETURNED BY LMINIT)\n         ST    R0,DXD_SPF_2\n         LA    R0,COMM_BLANKS\n         ST    R0,DXD_SPF_3\n         ST    R0,DXD_SPF_4\n         ST    R0,DXD_SPF_5\n         ST    R0,DXD_SPF_6\n         ST    R0,DXD_SPF_7\n         ST    R0,DXD_SPF_8\n         ST    R0,DXD_SPF_9\n         LA    R0,DD_SYSPRINT                 DDNAME\n         ST    R0,DXD_SPF_10                  SET DDNAME ADDR\n         OI    DXD_SPF_10,X'80'               SET END-OF-LIST\n         LA    R1,DXD_SPF_PARMS               SPF PARMS\n         L     R15,COMM_ISPLINK               ISPLINK ENTRY POINT\n         BALR  R14,R15                        OBTAIN DDID\n         ITRACE ID=LMINITRC,                                           +\n               RDATA1=R15,                                             +\n               DATA2=SPF_DDID\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         MVC   DXD_DDID,SPF_DDID              SAVE SYSIN DATASET ID\n         ITRACE ID=IN_DDID,                                            +\n               DATA1=DXD_DDID\n* ------------------------------------------------------------------- *\n*        CALL BROWSE                                                  *\n* ------------------------------------------------------------------- *\n         ITRACE ID=BROWSE,                                             +\n               DATA1=DXD_DDID\n         LA    R0,BROWSE\n         ST    R0,DXD_SPF_1\n         LA    R0,COMM_BLANKS\n         ST    R0,DXD_SPF_2\n         ST    R0,DXD_SPF_3\n         ST    R0,DXD_SPF_4\n         ST    R0,DXD_SPF_5\n         LA    R0,DXD_DDID                    DDID\n         ST    R0,DXD_SPF_6                   SET DATA ID ADDR\n         OI    DXD_SPF_6,X'80'                FLAG END-OF-LIST\n         LA    R1,DXD_SPF_PARMS               PARMS FOR BROWSE\n         L     R15,COMM_ISPLINK\n         BALR  R14,R15                        DISPLAY ASSEMBLER OUTPUT\n*---------------------------------------------------------------------*\n*        FREE SYSIN                                                   *\n*---------------------------------------------------------------------*\n         ITRACE ID=FREE_IN\n         MVI   DAIR_FUNC,$DAIR_FREE           FREE\n         MVC   DAIR_DD,DD_SYSIN               SET DDNAME\n         LA    R1,DAIRREQ                     DAIR PARMS\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        FREE SYSIN\n*---------------------------------------------------------------------*\n*        FREE SYSPRINT                                                *\n*---------------------------------------------------------------------*\n         ITRACE ID=FREE_PRT\n         MVI   DAIR_FUNC,$DAIR_FREE           FREE\n         MVC   DAIR_DD,DD_SYSPRINT            SET DDNAME\n         LA    R1,DAIRREQ                     DAIR PARMS\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        FREE SYSPRINT\n*---------------------------------------------------------------------*\n*        FREE SYSLIB                                                  *\n*---------------------------------------------------------------------*\n         ITRACE ID=FREE_SYS\n         MVI   DAIR_FUNC,$DAIR_FREE           FREE\n         MVC   DAIR_DD,DD_SYSLIB              SET DDNAME\n         LA    R1,DAIRREQ                     DAIR PARMS\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        FREE SYSLIB\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         ICM   R7,15,DISCOMM_SYSLIB_NEXT      FIRST SYSLIB LIBRARY\n         BZ    EXIT0000                       NO LIBRARY TO FREE\n         USING SYSLIB_DSECT,R7\nASSM0310 DS   0H\n         ITRACE ID=FREE_LIB,                                           +\n               DATA1=SYSLIB_DDNAME\n         MVI   DAIR_FUNC,$DAIR_FREE           FREE\n         MVC   DAIR_DD,SYSLIB_DDNAME          SET DDNAME\n         LA    R1,DAIRREQ                     DAIR PARMS\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        FREE LIBRARY\n         MVC   SYSLIB_DDNAME,COMM_BLANKS      RESET DD NAME\n         ICM   R7,15,SYSLIB_NEXT              NEXT SYSLIB\n         BNZ   ASSM0310                       FREE THIS LIBRARY\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nERR0000  DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         MVI   DISCOMM_ASSEMBLER_RC+1,16\n         B     EXIT0000\nERR0010  DS    0H\n         ITRACE ID=DDID_ERR\n         DC    H'0'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         OC    DXD_ASSEM_EP,DXD_ASSEM_EP      ASSEMBLER LOADED?\n         BZ    EXIT0010                       NO\n         ITRACE ID=DELASM                     DELETE ASSEMBLER\n         DELETE EP=ASMA90\nEXIT0010 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE REGISTERS         ASE01680\n         SR    R15,R15                        CLEAR R15                 ASE01690\n         ICM   R15,3,DISCOMM_ASSEMBLER_RC     SET RC\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*              WORK AREAS                                             *\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START  DC  Q(DXDASSEM)\nAASMPARM DC    A(ASMPARM+X'80000000')         ASSEMBLER PARM'S\nASMPARM  DC    Y(ASMPARML-2)\n         DC    C'NODECK,NOOBJECT'\nASMPARML EQU   *-ASMPARM\nH4       DC    H'4'\n\nXREF     DC    C' CROSS REFERENCE '\nHEX1F1F  DC    8X'1F'\n*                0 1 2 3 4 5 6 7 8 9 A B C D E F\nCHARHEX  DC    X'000A0B0C0D0E0F000000000000000000'  00-0F\n         DC    X'00010203040506070809000000000000'  10-1F\n\nOP_DSECT DC    CL8'DSECT'\nOP_CSECT DC    CL8'CSECT'\nOP_EQU   DC    C'EQU '\nSRCSTMT  DC    C'SOURCE STATEMENT'\nLABEL_ID DC    CL8'LABEL'\nEQU_ID   DC    CL8'EQU'\n\nLMINIT   DC    CL8'LMINIT'\nDDID     DC    CL8'DDID'\nBROWSE   DC    CL8'BROWSE'\n\nDD_SYSIN       DC   CL8'SYSIN'\nDD_SYSPRINT    DC   CL8'SYSPRINT'\nDD_SYSLIB      DC   CL8'SYSLIB'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDASSEM         DSECT\n                 COPY  DXDPREF\n\nDXD_ASSEM_EP     DS    A              ASSEMBLER'S ENTRY POINT\n\nDXD_SPF_PARMS    DS    0A\nDXD_SPF_1        DS    A\nDXD_SPF_2        DS    A\nDXD_SPF_3        DS    A\nDXD_SPF_4        DS    A\nDXD_SPF_5        DS    A\nDXD_SPF_6        DS    A\nDXD_SPF_7        DS    A\nDXD_SPF_8        DS    A\nDXD_SPF_9        DS    A\nDXD_SPF_10       DS    A\n\nDXD_LABEL        DS    CL63\nDXD_DISP_IN      DS    CL7\nDXD_DISP_OUT     DS    XL4\n\nDXD_DDID         DS    CL8\n\nDXD_FLAGS        DS    X              FLAGS\n$FIRST_LIBRARY   EQU   X'80'          .. FIRST LIBRARY IN SYSLIB\n$XREF            EQU   X'40'          .. CROSS REFERENCE HAS BEEN FOUND\n\n                 DAIRREQ  DSECT=NO\n\nDXD_IO           DC    CL133' '\n                 ORG   DXD_IO+1\nDXD_IO_DISP      DS    CL6\n                 ORG   DXD_IO+23\nDXD_IO_ADDR1     DS    CL5\n                 ORG   DXD_IO+41\nDXD_IO_LABEL     DS    CL63\n                 ORG\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         IHADCBE\n         END  DISASSEM\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISBIND": {"ttr": 1802, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00G\\x01\\t3_\\x01\\t6_\\x08\\x13\\x01!\\x01%\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2009-12-01T00:00:00", "modifydate": "2009-12-31T08:13:47", "lines": 289, "newlines": 293, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: DISBIND                                              *\n*                                                                    *\n*  Function:                                                         *\n*   Obtain the requested module's RLD, ESD, text, etc using          *\n*   a BINDER dialog.                                                 *\n*                                                                    *\n*  The function being requested is in DISCOMM_BIND_FUNC.             *\n*                                                                    *\n*--------------------------------------------------------------------*\nDISBIND  CSECT\nDISBIND  AMODE 31\nDISBIND  RMODE ANY\n         USING DISBIND,R15\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'DISBIND'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISBIND,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR              WORK AREA\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)                    CHAIN  SAVE AREA\n         ST    R15,8(,R13)                    CHAIN SAVE AREA\n         LR    R13,R15                        SET SAVE AREA ADDRESS\n         USING DXDBIND,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               DATA1=(DISCOMM_BIND_FUNC,1)\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n         CLI   DISCOMM_BIND_FUNC,$BIND_STARTD  START DIALOG?\n         BE    BIND0010                        YES\n         CLI   DISCOMM_BIND_FUNC,$BIND_NAMES   BUILD NAME CHAIN?\n         BE    BIND0020\n         CLI   DISCOMM_BIND_FUNC,$BIND_ESD_RLD BUILD ESD/RLD CHAINS?\n         BE    BIND0030\n         CLI   DISCOMM_BIND_FUNC,$BIND_TEXT    READ TEXT?\n         BE    BIND0040\n         CLI   DISCOMM_BIND_FUNC,$BIND_ENDD    END DIALOG?\n         BE    BIND0050\n         DC    H'0'\n*--------------------------------------------------------------------*\n*        Start the dialog                                            *\n*--------------------------------------------------------------------*\nBIND0010 DS    0H\n         ITRACE ID=STARTD\n         IEWBIND FUNC=STARTD,                                          +\n               VERSION=5,                                              +\n               DIALOG=DISCOMM_DIALOG_TOKEN,                            +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_IEWBIND,COMPLETE)\n         ITRACE ID=STARTDRC,                                           +\n               DATA1=(DXD_RETURN_CODE,4),                              +\n               DATA2=(DXD_REASON_CODE,4)\n         OC    DXD_RETURN_CODE,DXD_RETURN_CODE\n         BNZ   ERR0010\n*--------------------------------------------------------------------*\n*        Create a WORKMOD                                            *\n*--------------------------------------------------------------------*\n         ITRACE ID=CREATEW\n         IEWBIND FUNC=CREATEW,                                         +\n               VERSION=5,                                              +\n               DIALOG=DISCOMM_DIALOG_TOKEN,                            +\n               WORKMOD=DISCOMM_DIALOG_WORKMOD,                         +\n               INTENT=ACCESS,                                          +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_IEWBIND,COMPLETE)\n         ITRACE ID=CREATWRC,                                           +\n               DATA1=(DXD_RETURN_CODE,4),                              +\n               DATA2=(DXD_REASON_CODE,4)\n         OC    DXD_RETURN_CODE,DXD_RETURN_CODE\n         BNZ   ERR0020\n*--------------------------------------------------------------------*\n*        Set list options                                            *\n*--------------------------------------------------------------------*\n         ITRACE ID=SET_ALL\n         IEWBIND FUNC=SETO,                                            +\n               VERSION=5,                                              +\n               WORKMOD=DISCOMM_DIALOG_WORKMOD,                         +\n               OPTION=LIST,                                            +\n               OPTVAL=ALL,                                             +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_IEWBIND,COMPLETE)\n         ITRACE ID=SET_RC,                                             +\n               DATA1=(DXD_RETURN_CODE,4),                              +\n               DATA2=(DXD_REASON_CODE,4)\n         OC    DXD_RETURN_CODE,DXD_RETURN_CODE\n         BNZ   ERR0030\n*--------------------------------------------------------------------*\n*        INCLUDE the LMOD                                            *\n*--------------------------------------------------------------------*\n         ITRACE ID=INCLUDE,                                            +\n               DATA1=DISCOMM_DDNAME,                                   +\n               DATA2=DISCOMM_LMOD\n         IEWBIND FUNC=INCLUDE,                                         +\n               VERSION=5,                                              +\n               WORKMOD=DISCOMM_DIALOG_WORKMOD,                         +\n               INTYPE=NAME,                                            +\n               DDNAME=DISCOMM_DDNAME_LENGTH,                           +\n               MEMBER=DISCOMM_LMOD_NAME_LENGTH,                        +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_IEWBIND,COMPLETE)\n         ITRACE ID=INCL_RC,                                            +\n               DATA1=(DXD_RETURN_CODE,4),                              +\n               DATA2=(DXD_REASON_CODE,4)\n         OC    DXD_REASON_CODE,DXD_REASON_CODE\n         BNZ   ERR0040\n         B     EXIT0000\n*--------------------------------------------------------------------*\n*        Determine section names in module                           *\n*--------------------------------------------------------------------*\nBIND0020 DS    0H\n         ITRACE ID=CALLNAME\n         L     R15,V_DISNAME\n         BALR  R14,R15\n         B     EXIT0000\n*--------------------------------------------------------------------*\n*        Process ESD info                                            *\n*--------------------------------------------------------------------*\nBIND0030 DS    0H\n         ITRACE ID=CALLESD\n         L     R15,V_DISESD\n         BALR  R14,R15\n*--------------------------------------------------------------------*\n*        Process RLD items                                           *\n*--------------------------------------------------------------------*\n         ITRACE ID=CALLRLD\n         L     R15,V_DISRLD\n         BALR  R14,R15\n         B     EXIT0000\n*--------------------------------------------------------------------*\n*        Load the text                                               *\n*--------------------------------------------------------------------*\nBIND0040 DS    0H\n         ITRACE ID=CALLTEXT\n         L     R15,V_DISTEXT\n         BALR  R14,R15\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*        Delete the WORKMOD                                           *\n*---------------------------------------------------------------------*\nBIND0050 DS    0H\n         ITRACE ID=DELETEW,                                            +\n               DATA1=DISCOMM_DIALOG_WORKMOD\n         IEWBIND FUNC=DELETEW,                                         +\n               VERSION=5,                                              +\n               WORKMOD=DISCOMM_DIALOG_WORKMOD,                         +\n               PROTECT=NO,                                             +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_IEWBIND,COMPLETE)\n         ITRACE ID=DELETERC,                                           +\n               DATA1=DXD_RETURN_CODE,                                  +\n               DATA2=DXD_REASON_CODE\n         OC    DXD_REASON_CODE,DXD_REASON_CODE\n         BNZ   ERR0050\n*---------------------------------------------------------------------*\n*        End the DIALOG                                               *\n*---------------------------------------------------------------------*\n         ITRACE ID=ENDD,                                               +\n               DATA1=DISCOMM_DIALOG_TOKEN\n         IEWBIND FUNC=ENDD,                                            +\n               VERSION=5,                                              +\n               DIALOG=DISCOMM_DIALOG_TOKEN,                            +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_IEWBIND,COMPLETE)\n         ITRACE ID=ENDD_RC,                                            +\n               DATA1=DXD_RETURN_CODE,                                  +\n               DATA2=DXD_REASON_CODE\n         OC    DXD_REASON_CODE,DXD_REASON_CODE\n         BNZ   ERR0060\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nERR0010  DS    0H\n         MVI   COMM_MSG_ID+1,1\n         B     ERR0070\nERR0020  DS    0H\n         MVI   COMM_MSG_ID+1,2\n         B     ERR0070\nERR0030  DS    0H\n         MVI   COMM_MSG_ID+1,3\n         B     ERR0070\nERR0040  DS    0H\n         MVI   COMM_MSG_ID+1,4\n         B     ERR0070\nERR0050  DS    0H\n         MVI   COMM_MSG_ID+1,5\n         B     ERR0070\nERR0060  DS    0H\n         MVI   COMM_MSG_ID+1,6\nERR0070  DS    0H\n         MVI   COMM_MSG_ID,0\n         ITRACE ID=ERROR,                                              +\n               DATA1=(COMM_MSG_ID,2)\n         MVC   COMM_INFO_01(4),DXD_RETURN_CODE\n         MVC   COMM_INFO_02(4),DXD_REASON_CODE\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         SR    R15,R15\n         IC    R15,DXD_RC                     SET RC\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         L     R14,12(,R13)                   RESTORE R14               ASE01680\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS         ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START     DC   Q(DXDBIND)\nV_DISNAME     DC   V(DISNAME)\nV_DISESD      DC   V(DISESD)\nV_DISRLD      DC   V(DISRLD)\nV_DISTEXT     DC   V(DISTEXT)\n\nLIST          DC   H'4',C'LIST'\nALL           DC   H'3',C'ALL'\n\n              IEWBIND MF=(L,IEWBIND_I)\nIEWBIND_L     EQU  *-IEWBIND_I\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDBIND          DSECT\n                 COPY     DXDPREF\nDXD_RETURN_CODE  DS       F\nDXD_REASON_CODE  DS       F\n\nDXD_IEWBIND      DS       0F,(IEWBIND_L)X\n\nDXD_RC           DS       X\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n                 DISCOMM  TYPE=DSECT\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n                 COMMON\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n                 SESSION  TYPE=DSECT\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n                 DISASMDA\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n                 OSSPFD   TYPE=DSECT\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n                 BPXYSTAT\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n                 COPY     TRENTRY\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n                 COPY     REGEQU\n                 END      DISBIND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISBLIST": {"ttr": 4613, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x18\\x01\\t3\\x7f\\x01\\x10\\x01\\x1f\\x145\\x02\\xdc\\x02\\xd5\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "2009-12-03T00:00:00", "modifydate": "2010-01-11T14:35:18", "lines": 732, "newlines": 725, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: DISBLIST                                              *\n*                                                                     *\n*  FUNCTION:                                                          *\n*    Display/allow definition of BASE register(s)                     *\n*                                                                     *\n*                                                                     *\n*    BASE blocks are chained from DISCOMM_BASE_NEXT.                  *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISBLIST CSECT\nDISBLIST AMODE 31\nDISBLIST RMODE ANY\n         USING DISBLIST,R15\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'DISBLIST'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         DROP  R15\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISBLIST,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR              WORK AREA\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         USING DXDBLIST,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n         USING BASE_DSECT,R3\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        In order to allow the user to \"cancel\" changes,              *\n*        first \"copy\" the existing BASE chain.                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         XC    DXD_BASE_NEXT,DXD_BASE_NEXT\n         XC    DXD_FIRST_DISPLAYED,DXD_FIRST_DISPLAYED\n         LA    R2,DXD_BASE_PREV\nPREV     USING BASE_DSECT,R2\n         ICM   R3,15,DISCOMM_BASE_NEXT        FIRST BASE\n         BZ    INIT0020\nINIT0010 DS    0H\n         GETMAIN RU,                                                   +\n               LV=BASE_DSECT_L,                                        +\n               LOC=ANY\nNEW      USING BASE_DSECT,R1\n         MVC   NEW.BASE_DSECT(BASE_DSECT_L),BASE_DSECT\n         ST    R1,PREV.BASE_NEXT\n         LR    R2,R1\n         ICM   R3,15,BASE_NEXT\n         BNZ   INIT0010\n         MVC   DXD_FIRST_DISPLAYED,DXD_BASE_NEXT\n         DROP  NEW,PREV\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0020 DS    0H\n         L     R0,SPF_VDEPTH                  NBR OF LINES\n         SLL   R0,2                           MULTIPLY BY 4\n         ST    R0,DXD_BASE_TABLE_SIZE\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ST    R1,DXD_BASE_TABLE              SAVE ADDRESS\n         ITRACE ID=A_TABLE,                                            +\n               RDATA1=R1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         ITRACE ID=INIT_V\n         L     R0,DISCOMM_VDATA_ADDR\n         L     R1,DISCOMM_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                         INITIALIZE VDATA\n         L     R0,DXD_BASE_TABLE\n         L     R1,DXD_BASE_TABLE_SIZE\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                         INIT BASE TABLE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=FORMAT\n         L     R6,SPF_VWIDTH                  SCREEN WIDTH\n         SH    R6,=Y(MSG01_L)                 MINUS WIDTH IN USE\n         SRL   R6,1                           DIVIDE BY 2\n         A     R6,DISCOMM_VDATA_ADDR          PLUS VDATA ADDR\n         L     R7,SPF_VDEPTH                  NBR OF LINES\nMAIN0020 DS    0H\n         MVC   0(MSG01_L,R6),MSG01            INITIALIZE\n         A     R6,SPF_VWIDTH                  NEXT LINE\n         BCT   R7,MAIN0020                    LOOP\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R6,SPF_VWIDTH                  SCREEN WIDTH\n         SH    R6,=Y(MSG01_L)                 MINUS WIDTH IN USE\n         SRL   R6,1                           DIVIDE BY 2\n         A     R6,DISCOMM_VDATA_ADDR          PLUS VDATA ADDR\n         USING MSG01,R6\n         L     R7,SPF_VDEPTH\nMAIN0030 DS    0H\n         L     R4,DXD_BASE_TABLE              FIRST 'SLOT'\n         XC    DXD_NBR_DISPLAYED,DXD_NBR_DISPLAYED\n         ICM   R3,15,DXD_FIRST_DISPLAYED      FIRST TO DISPLAY\n         BZ    MAIN0060                       NOTHING DEFINED YET\nMAIN0040 DS    0H\n         ITRACE ID=BUILD,                                              +\n               RDATA1=R3,                                              +\n               DATA2=BASE_DISP\n         ST    R3,DXD_LAST_DISPLAYED          SAVE ADDR\n         ST    R3,0(R4)                       SAVE ADDR\n         UNPK  DXD_WORK(9),BASE_BEGIN(5)      UNPACK BEGIN DISP\n         TR    DXD_WORK(8),COMM_HEXCHAR       TRANSLATE\n         MVC   MSG01_BEGIN,DXD_WORK           COPY BEGIN\n         UNPK  DXD_WORK(9),BASE_END(5)        UNPACK BEGIN DISP\n         TR    DXD_WORK(8),COMM_HEXCHAR       TRANSLATE\n         MVC   MSG01_END,DXD_WORK             COPY BEGIN\n         UNPK  DXD_WORK(9),BASE_DISP(5)       UNPACK REF DISP\n         TR    DXD_WORK(8),COMM_HEXCHAR       TRANSLATE\n         MVC   MSG01_DISP,DXD_WORK            COPY DISP\n         MVC   MSG01_REGISTER,BASE_CHAR_REGISTER\n         LA    R1,1                           CONSTANT 1\n         AH    R1,DXD_NBR_DISPLAYED           PLUS TOTAL SO FAR\n         STH   R1,DXD_NBR_DISPLAYED           SAVE TOTAL\n         LA    R4,4(,R4)                      NEXT IN ADDR TABLE\n         A     R6,SPF_VWIDTH                  NEXT LINE\n         BCT   R7,MAIN0050\n         B     MAIN0060\nMAIN0050 DS    0H\n         ICM   R3,15,BASE_NEXT\n         BNZ   MAIN0040\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0060 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_VDATA_ADDR,DISCOMM_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DISCOMM_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         MVC   SESS_DISP_PANEL,PANEL_DISBLIST\n         L     R15,COMM_V_OSDISP              DISP ENTRY POINT\n         BALR  R14,R15                        DISPLAY\n         ITRACE ID=DISP_RC,                                            +\n               RDATA1=R15,                                             +\n               DATA2=SPF_ZVERB\n         LTR   R2,R15                         RC = 0?\n         BNZ   MAIN0500                       NO\n         CLC   ABEND,SPF_ZCMD                 ABEND?\n         BE    ABEND000                       YES\n         CLC   CANCEL,SPF_ZCMD                CANCEL?\n         BE    MAIN0550                       YES\n         CLC   CAN,SPF_ZCMD                   CAN(CEL)?\n         BE    MAIN0550                       YES\n* ------------------------------------------------------------------- *\n*        Check for new or changes to existing BASE(s)                 *\n* ------------------------------------------------------------------- *\n         L     R6,SPF_VWIDTH                  SCREEN WIDTH\n         SH    R6,=Y(MSG01_L)                 MINUS WIDTH IN USE\n         SRL   R6,1                           DIVIDE BY 2\n         A     R6,DISCOMM_VDATA_ADDR          PLUS VDATA ADDR\n         L     R7,SPF_VDEPTH                  NBR OF LINES\n         NI    DXD_FLAGS,255-$DXD_ERROR       RESET FLAG\n         XC    DXD_CONV_OUT,DXD_CONV_OUT\nMAIN0070 DS    0H\n         ITRACE ID=VERIFY,                                             +\n               DATA1=MSG01_REGISTER\n         MVC   MSG01_MSG,COMM_BLANKS\n         OC    MSG01_BEGIN,COMM_BLANKS\n         OC    MSG01_END,COMM_BLANKS\n         OC    MSG01_DISP,COMM_BLANKS\n         OC    MSG01_REGISTER,COMM_BLANKS\n         CLC   MSG01_BEGIN,COMM_BLANKS        BEGIN BLANK?\n         BE    MAIN0100                       YES\n         CLC   MSG01_END,COMM_BLANKS          END BLANK?\n         BE    MAIN0120                       YES\n         CLC   MSG01_REGISTER,COMM_BLANKS     REGISTER BLANK\n         BE    MAIN0130                       YES\n\n         ITRACE ID=VER_BEGN,                                           +\n               DATA1=MSG01_BEGIN\n         LA    R1,MSG01_BEGIN                 BEGIN DISP IN EFFECT\n         ST    R1,DXD_CONV_SOURCE             SET DISP SOURCE\n         LA    R1,DXD_CONV_PARMS              DISP CONVERTER PARMS\n         L     R15,V_DISDCONV                 DISP CONVERTER EP\n         BALR  R14,R15                        VERIFY BEGIN DISP\n         LTR   R15,R15                        VALID DISP?\n         BNZ   MAIN0090                       NO\n\n         ITRACE ID=VER_END,                                            +\n               DATA1=MSG01_END\n         LA    R1,MSG01_END                   END DISP IN EFFECT\n         ST    R1,DXD_CONV_SOURCE             SET DISP SOURCE\n         LA    R1,DXD_CONV_PARMS              DISP CONVERTER PARMS\n         L     R15,V_DISDCONV                 DISP CONVERTER EP\n         BALR  R14,R15                        VERIFY BEGIN DISP\n         LTR   R15,R15                        VALID DISP?\n         BNZ   MAIN0090                       NO\n\n         ITRACE ID=VER_DISP,                                           +\n               DATA1=MSG01_DISP\n         LA    R1,MSG01_DISP                  DISP REFERENCED\n         ST    R1,DXD_CONV_SOURCE             SET DISP SOURCE\n         LA    R1,DXD_CONV_PARMS              DISP CONVERTER PARMS\n         L     R15,V_DISDCONV                 DISP CONVERTER EP\n         BALR  R14,R15                        VERIFY BEGIN DISP\n         LTR   R15,R15                        VALID DISP?\n         BNZ   MAIN0090                       NO\n\nMAIN0080 DS    0H\n         BAL   R5,MAIN0450                    VERIFY REGISTER\n         LTR   R1,R1                          REGISTER LOCATED?\n         BZ    MAIN0140                       NO\n         MVC   DXD_WORK(8),MSG01_BEGIN        COPY BEGIN DISP\n         TR    DXD_WORK(8),CHARHEX            TRANSLATE\n         PACK  DXD_BEGIN(5),DXD_WORK(9)       PACK BEGIN DISP\n         MVC   DXD_WORK(8),MSG01_END          COPY END DISP\n         TR    DXD_WORK(8),CHARHEX            TRANSLATE\n         PACK  DXD_END(5),DXD_WORK(9)         PACK END DISP\n         CLC   DXD_BEGIN,DXD_END              END > BEGIN?\n         BNH   MAIN0160                       NO\n         MVI   COMM_MSG_ID+1,1                SET MESSAGE ID\n         B     MAIN0150\nMAIN0090 DS    0H\n         ITRACE ID=BADDIGIT\n         MVI   COMM_MSG_ID+1,2                SET MESSAGE ID\n         B     MAIN0150\nMAIN0100 DS    0H\n         CLC   MSG01_END,COMM_BLANKS          END BLANK?\n         BE    MAIN0110                       YES\n         MVI   COMM_MSG_ID+1,3                END, NO BEGIN\n         B     MAIN0150\nMAIN0110 DS    0H\n         CLC   MSG01_REGISTER,COMM_BLANKS     REGISTER BLANK?\n         BE    MAIN0160                       YES\n         MVI   COMM_MSG_ID+1,4                REG, NO BEGIN\n         B     MAIN0150\nMAIN0120 DS    0H\n         MVI   COMM_MSG_ID+1,5                BEGIN, NO END\n         B     MAIN0150\nMAIN0130 DS    0H\n         MVI   COMM_MSG_ID+1,6                BEGIN, NO REGISTER\n         B     MAIN0150\nMAIN0140 DS    0H\n         MVI   COMM_MSG_ID+1,7                BAD REGISTER\nMAIN0150 DS    0H\n         OI    DXD_FLAGS,$DXD_ERROR           ERROR HAS OCCURRED\n         BAL   R5,MSG0000                     BUILD MESSAGE\n         MVC   MSG01_MSG,COMM_MSG_1           COPY MESSAGE\nMAIN0160 DS    0H\n         A     R6,SPF_VWIDTH                  NEXT LINE\n         BCT   R7,MAIN0070                    LOOP\n         TM    DXD_FLAGS,$DXD_ERROR           ERROR(S)?\n         BO    MAIN0060                       YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        No errors have been found                                    *\n*                                                                     *\n*        Determine if any BASE(s) were                                *\n*          updated                                                    *\n*          removed                                                    *\n*          added                                                      *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R6,SPF_VWIDTH                  SCREEN WIDTH\n         SH    R6,=Y(MSG01_L)                 MINUS WIDTH IN USE\n         SRL   R6,1                           DIVIDE BY 2\n         A     R6,DISCOMM_VDATA_ADDR          PLUS VDATA ADDR\n         L     R7,SPF_VDEPTH                  NBR OF LINES\n         L     R4,DXD_BASE_TABLE              FIRST BASE\nMAIN0170 DS    0H\n         L     R3,0(,R4)                      BASE BLOCK IF USED\n         ITRACE ID=MAIN0170,                                           +\n               RDATA1=R4,                                              +\n               RDATA2=R3\n         CLC   MSG01_BEGIN,COMM_BLANKS        BLANK?\n         BE    MAIN0240                       YES\n\n         LA    R1,MSG01_BEGIN\n         ST    R1,DXD_CONV_SOURCE\n         LA    R1,DXD_BEGIN\n         ST    R1,DXD_CONV_OUT\n         LA    R1,DXD_CONV_PARMS\n         L     R15,V_DISDCONV\n         BALR  R14,R15                        CONVERT BEGIN DISP\n\n         LA    R1,MSG01_END\n         ST    R1,DXD_CONV_SOURCE\n         LA    R1,DXD_END\n         ST    R1,DXD_CONV_OUT\n         LA    R1,DXD_CONV_PARMS\n         L     R15,V_DISDCONV\n         BALR  R14,R15                        CONVERT END DISP\n\n         LA    R1,MSG01_DISP\n         ST    R1,DXD_CONV_SOURCE\n         LA    R1,DXD_DISP\n         ST    R1,DXD_CONV_OUT\n         LA    R1,DXD_CONV_PARMS\n         L     R15,V_DISDCONV\n         BALR  R14,R15                        CONVERT REFERENCED DISP\n\n         B     MAIN0190\nMAIN0180 DS    0H\n         XC    DXD_DISP,DXD_DISP              FORCE DISP=ZERO\nMAIN0190 DS    0H\n         BAL   R5,MAIN0450                    LOOKUP REGISTER\n         LTR   R3,R3                          BASE EXIST?\n         BZ    MAIN0210                       NO\n         CLC   BASE_BEGIN,DXD_BEGIN           SAME BEGIN DISP?\n         BNE   MAIN0200                       NO\n         CLC   BASE_END,DXD_END               SAME END DISP?\n         BNE   MAIN0200                       NO\n         CLC   BASE_DISP,DXD_DISP             SAME REFERENCED DISP?\n         BNE   MAIN0200                       NO\n         CLC   BASE_CHAR_REGISTER,DXD_REG_CHAR   SAME REGISTER?\n         BE    MAIN0280                       YES\nMAIN0200 DS    0H\n         ITRACE ID=UPDTBASE\n         OI    DXD_FLAGS,$DXD_UPDATE          BASE HAS BEEN UPDATED\n         MVC   BASE_BEGIN,DXD_BEGIN           CHANGE BEGIN DISP\n         MVC   BASE_END,DXD_END               CHANGE END DISP\n         MVC   BASE_DISP,DXD_DISP             CHANGE REF DISP\n         MVC   BASE_CHAR_REGISTER,DXD_REG_CHAR   CHANGE CHAR REGISTER\n         MVC   BASE_REGISTER,DXD_REG_BIN      CHANGE BINARY REGISTER\n         B     MAIN0280\nMAIN0210 DS    0H\n         ITRACE ID=NEW_BASE\n         OI    DXD_FLAGS,$DXD_UPDATE\n         GETMAIN RU,                                                   +\n               LV=BASE_DSECT_L,                                        +\n               LOC=ANY\nNEW      USING BASE_DSECT,R1\n         XC    NEW.BASE_DSECT(BASE_DSECT_L),NEW.BASE_DSECT\n         MVC   NEW.BASE_EYE,BASE_ID           IDENTIFY BLOCK\n         MVC   NEW.BASE_BEGIN,DXD_BEGIN       SET BEGIN DISP\n         MVC   NEW.BASE_END,DXD_END           SET END DISP\n         MVC   NEW.BASE_DISP,DXD_DISP         SET DISP REFERENCED\n         MVC   NEW.BASE_CHAR_REGISTER,DXD_REG_CHAR\n         MVC   NEW.BASE_REGISTER,DXD_REG_BIN  COPY BINARY REGISTER\n         LA    R3,DXD_BASE_PREV               FIRST BASE\nMAIN0220 DS    0H\n         ICM   R2,15,BASE_NEXT                ANOTHER ON CHAIN?\n         BZ    MAIN0230                       YES\n         LR    R3,R2                          COPY ADDRESS\n         B     MAIN0220\nMAIN0230 DS    0H\n         ST    R1,BASE_NEXT                   SET 'NEXT' IN PREVIOUS\n         ST    R3,NEW.BASE_PREV               SET PREV IN NEW\n         OC    DXD_FIRST_DISPLAYED,DXD_FIRST_DISPLAYED\n         BNZ   MAIN0280                       BLOCK PRESENT\n         ST    R1,DXD_FIRST_DISPLAYED         SET FIRST ON CHAIN\n         B     MAIN0280\n         DROP  NEW\nMAIN0240 DS    0H\n         LTR   R3,R3                          BASE EXIST?\n         BZ    MAIN0280                       NO\n         OI    DXD_FLAGS,$DXD_UPDATE          A BASE WAS UPDATED\n         ITRACE ID=DEL_BASE,                  DELETING A BASE          +\n               RDATA1=R3,                                              +\n               DATA2=BASE_BEGIN\n         ICM   R1,15,BASE_NEXT                NEXT BASE ON CHAIN\n         BZ    MAIN0250\nNEXT     USING BASE_DSECT,R1\n         MVC   NEXT.BASE_PREV,BASE_PREV       SET PREV IN NEXT\n         DROP  NEXT\nMAIN0250 DS    0H\n         ICM   R1,15,BASE_PREV                PREVIOUS ON CHAIN\n         BZ    MAIN0260                       NO PREVIOUS BLOCK\nPREV     USING BASE_DSECT,R1\n         MVC   PREV.BASE_NEXT,BASE_NEXT       SET NEXT IN PREVIOUS\nMAIN0260 DS    0H\n         C     R3,DXD_FIRST_DISPLAYED         FIRST BASE DISPLAYED?\n         BNE   MAIN0270                       NO\n         MVC   DXD_FIRST_DISPLAYED,BASE_NEXT  CHANGE TO NEXT BLOCK\nMAIN0270 DS    0H\n         ITRACE ID=DEL_FREE,                                           +\n               RDATA1=R3\n         FREEMAIN RU,                         FREEMAIN THE BASE        +\n               A=(R3),                                                 +\n               LV=BASE_DSECT_L\n         XC    0(4,R4),0(R4)                  CLEAR ADDR IN TABLE\nMAIN0280 DS    0H\n         ITRACE ID=NEXT\n         A     R6,SPF_VWIDTH                  NEXT LINE\n         LA    R4,4(,R4)                      NEXT IN TABLE\n         BCT   R7,MAIN0170                    LOOP\n         TM    DXD_FLAGS,$DXD_UPDATE          ANY UPDATES?\n         BO    MAIN0010                       YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLI   SPF_ZVERB,C'B'                 BOTTOM?\n         BE    MAIN0300\n         CLI   SPF_ZVERB,C'D'                 DOWN?\n         BE    MAIN0320\n         CLI   SPF_ZVERB,C'T'                 TOP?\n         BE    MAIN0330\n         CLI   SPF_ZVERB,C'U'                 UP?\n         BE    MAIN0340\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0300 DS    0H\n         ITRACE ID=BOTTOM\n         ICM   R1,15,DXD_BASE_NEXT            FIRST ON CHAIN\nTEMP     USING BASE_DSECT,R1\n         BZ    EXIT0000                       SHOULD NOT HAPPEN!\nMAIN0310 DS    0H\n         LR    R3,R1                          SAVE THIS ADDR\n         ICM   R1,15,TEMP.BASE_NEXT           NEXT BASE\n         BNZ   MAIN0310\n         B     MAIN0010                       BUILD DISPLAY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0320 DS    0H\n         ITRACE ID=DOWN\n         CLI   SPF_ZSCROLLA,C'M'              MAX?\n         BE    MAIN0300                       YES\n         L     R3,DXD_LAST_DISPLAYED          LAST ITEM DISPLAYED\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0330 DS    0H\n         ITRACE ID=TOP\n         L     R3,DXD_BASE_NEXT               FIRST DATA ITEM\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0340 DS    0H\n         ITRACE ID=UP\n         CLI   SPF_ZSCROLLA,C'M'              MAX?\n         BE    MAIN0330                       YES\n         ICM   R1,15,DXD_FIRST_DISPLAYED      FIRST ON DISPLAY\n         BZ    EXIT0000                       SHOULD NOT HAPPEN!\n         L     R7,SPF_ZSCROLLN                LINES ON DISPLAY\nMAIN0350 DS    0H\n         LR    R3,R1                          COPY ADDR\n         ICM   R1,15,TEMP.BASE_PREV           PREVIOUS BASE\n         BZ    MAIN0010\n         BCT   R7,MAIN0350                    LOOP\n         B     MAIN0010\n         DROP  TEMP\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0450 DS    0H\n         ITRACE ID=VER_REG,                                            +\n               DATA1=MSG01_REGISTER\n         LA    R1,2                           MAX LOOPS\nMAIN0460 DS    0H\n         CLI   MSG01_REGISTER,C' '            BLANK?\n         BNE   MAIN0470                       NO\n         ITRACE ID=SHIFT\n         MVC   MSG01_REGISTER(2),MSG01_REGISTER+1\n         MVI   MSG01_REGISTER+2,C' '          INSERT BLANK\n         BCT   R1,MAIN0460\nMAIN0470 DS    0H\n         LA    R1,$NBR_IN_TABLE               NBR IN REG TABLE\n         LA    R2,REG_TABLE                   REG TABLE\n         USING REG_DSECT,R2\nMAIN0480 DS    0H\n         CLC   REG_A,MSG01_REGISTER           LOCATED?\n         BE    MAIN0490                       YES\n         LA    R2,REG_DSECT_L(,R2)            NEXT\n         BCT   R1,MAIN0480                    LOOP\n         ITRACE ID=BAD_REG\n         BR    R5\nMAIN0490 DS    0H\n         ITRACE ID=GOOD_REG,                                           +\n               DATA1=REG_A\n         MVC   DXD_REG_CHAR,REG_B             COPY CHAR FORM\n         MVC   DXD_REG_BIN,REG_C              COPY BINARY FORM\n         BR    R5\n         DROP  R2\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      Replace the existing BASE chain with the updated chain         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0500 DS    0H\n         ITRACE ID=SWITCH\n         ICM   R3,15,DISCOMM_BASE_NEXT        FIRST USER BASE\n         BZ    MAIN0520\nMAIN0510 DS    0H\n         LR    R1,R3                          COPY ADDRESS\n         ICM   R3,15,BASE_NEXT                NEXT BASE\n         ITRACE ID=SWCHFREE,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                         FREEMAIN THIS BASE       +\n               A=(1),                                                  +\n               LV=BASE_DSECT_L\n         LTR   R3,R3                          ANOTHER BASE?\n         BNZ   MAIN0510                       YES\nMAIN0520 DS    0H\n         ITRACE ID=COPY_NEW,                                           +\n               DATA1=(DXD_BASE_NEXT,4)\n         MVC   DISCOMM_BASE_NEXT,DXD_BASE_NEXT\n         XC    DXD_BASE_NEXT,DXD_BASE_NEXT    RESET\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0550 DS    0H\n         ITRACE ID=CANCEL\n         MVC   SPF_ZCMD,COMM_BLANKS           RESET COMMAND\n         ICM   R3,15,DXD_BASE_NEXT            FIRST ON NEW CHAIN\n         BZ    EXIT0000                       NONE ON CHAIN\nMAIN0560 DS    0H\n         LR    R1,R3                          COPY ADDR\n         ICM   R3,15,BASE_NEXT                NEXT BASE BLOCK\n         ITRACE ID=CAN_FREE,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                         FREE THIS BLOCK          +\n               A=(1),                                                  +\n               LV=BASE_DSECT_L\n         LTR   R3,R3                          ANOTHER BLOCK?\n         BNZ   MAIN0560                       YES\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMSG0000  DS    0H\n         MVI   COMM_MSG_ID,0\n         ITRACE ID=MSG,                                                +\n               DATA1=(COMM_MSG_ID,2)\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         BR    R5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R0,DXD_BASE_TABLE_SIZE         ADDR TABLE SIZE\n         L     R1,DXD_BASE_TABLE              ADDR TABLE ADDR\n         FREEMAIN RU,                         FREEMAIN ADDR TABLE      +\n               A=(1),                                                  +\n               LV=(0)\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         L     R14,12(,R13)                   RESTORE REGISTERS         ASE01680\n         LR    R15,R2                         SET RC\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS         ASE01680\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nABEND000 DS    0H\n         ITRACE ID=ABEND\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START     DC   Q(DXDBLIST)\nV_DISDCONV    DC   V(DISDCONV)\n\nABEND         DC   C'ABEND '\nBASE_ID       DC   CL8'BASE'\nCAN           DC   C'CAN '\nCANCEL        DC   C'CANCEL '\nPANEL_DISBLIST DC  CL8'DISBLIST'\n\n              LTORG\n\nCHARHEX       DC   256X'00'\n              ORG  CHARHEX+C'A'\n              DC   X'0A0B0C0D0E0F'\n              ORG  CHARHEX+C'0'\n              DC   X'00010203040506070809'\n              ORG\n\nREG_TABLE     DS   0C\n              DC   C'0  ',C'R0 ',X'00'\n              DC   C'1  ',C'R1 ',X'01'\n              DC   C'2  ',C'R2 ',X'02'\n              DC   C'3  ',C'R3 ',X'03'\n              DC   C'4  ',C'R4 ',X'04'\n              DC   C'5  ',C'R5 ',X'05'\n              DC   C'6  ',C'R6 ',X'06'\n              DC   C'7  ',C'R7 ',X'07'\n              DC   C'8  ',C'R8 ',X'08'\n              DC   C'9  ',C'R9 ',X'09'\n              DC   C'10 ',C'R10',X'0A'\n              DC   C'11 ',C'R11',X'0B'\n              DC   C'12 ',C'R12',X'0C'\n              DC   C'13 ',C'R13',X'0D'\n              DC   C'14 ',C'R14',X'0E'\n              DC   C'15 ',C'R15',X'0F'\n              DC   C'A  ',C'R10',X'0A'\n              DC   C'B  ',C'R11',X'0B'\n              DC   C'C  ',C'R12',X'0C'\n              DC   C'D  ',C'R13',X'0D'\n              DC   C'E  ',C'R14',X'0E'\n              DC   C'F  ',C'R15',X'0F'\n              DC   C'R0 ',C'R0 ',X'00'\n              DC   C'R1 ',C'R1 ',X'01'\n              DC   C'R2 ',C'R2 ',X'02'\n              DC   C'R3 ',C'R3 ',X'03'\n              DC   C'R4 ',C'R4 ',X'04'\n              DC   C'R5 ',C'R5 ',X'05'\n              DC   C'R6 ',C'R6 ',X'06'\n              DC   C'R7 ',C'R7 ',X'07'\n              DC   C'R8 ',C'R8 ',X'08'\n              DC   C'R9 ',C'R9 ',X'09'\n              DC   C'R10',C'R10',X'0A'\n              DC   C'R11',C'R11',X'0B'\n              DC   C'R12',C'R12',X'0C'\n              DC   C'R13',C'R13',X'0D'\n              DC   C'R14',C'R14',X'0E'\n              DC   C'R15',C'R15',X'0F'\n              DC   X'000000',C'   ',X'00'    DUMMY ENTRY\nREG_TABLE_L   EQU  *-REG_TABLE\n$NBR_IN_TABLE EQU  REG_TABLE_L/REG_DSECT_L\n\n\nMSG01         DS   0C\n              DC   AL1($SCREEN_ATTR_INPUT)\nMSG01_BEGIN   DC   CL8' '\n              DC   AL1($SCREEN_ATTR_NORMAL)\n              DC   CL3' '\n              DC   AL1($SCREEN_ATTR_INPUT)\nMSG01_END     DC   CL8' '\n              DC   AL1($SCREEN_ATTR_NORMAL)\n              DC   CL3' '\n              DC   AL1($SCREEN_ATTR_INPUT)\nMSG01_DISP    DC   CL8' '\n              DC   AL1($SCREEN_ATTR_NORMAL)\n              DC   CL3' '\n              DC   AL1($SCREEN_ATTR_INPUT)\nMSG01_REGISTER DC  CL3' '\n              DC   AL1($SCREEN_ATTR_HIGH_YELLOW)\nMSG01_MSG     DC   CL30' '\nMSG01_L       EQU  *-MSG01\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDBLIST              DSECT\n                      COPY DXDPREF\n\nDXD_BASE_PREV         DS  A             DUMMY FOR 'PREV' ON CHAIN\nDXD_BASE_NEXT         DS  A             FIRST DATA ITEM ON CHAIN\n\nDXD_FIRST_DISPLAYED   DS  A             FIRST DATA ITEM DISPLAYED\nDXD_LAST_DISPLAYED    DS  A             LAST DATA ITEM DISPLAYED\n\nDXD_BASE_TABLE        DS  A\nDXD_BASE_TABLE_SIZE   DS  F\n\nDXD_CONV_PARMS        DS  0A\nDXD_CONV_SOURCE       DS  A\nDXD_CONV_OUT          DS  A\n\nDXD_BEGIN             DS  F\nDXD_END               DS  F\nDXD_DISP              DS  F\nDXD_REG_CHAR          DS  CL3\nDXD_REG_BIN           DS  X\n\nDXD_NBR_DISPLAYED     DS  H             NBR OF DATA ITEMS DISPLAYED\n\nDXD_FLAGS             DS  X             FLAGS\n$DXD_ERROR            EQU X'80'         .. SERIOUS ERROR\n$DXD_UPDATE           EQU X'40'         .. BASE(S) UPDATED\n\nDXD_WORK              DS  CL9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREG_DSECT     DSECT\nREG_A         DS      CL3\nREG_B         DS      CL3\nREG_C         DS      X                 FORM IN INSTRUCTIONS\nREG_DSECT_L   EQU     *-REG_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n              END     DISBLIST\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISCDIR": {"ttr": 6404, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x001\\x01\\x10\\x01?\\x01\\x10\\x01O\\x13B\\x01\\xe5\\x03H\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "2010-01-13T00:00:00", "modifydate": "2010-01-14T13:42:31", "lines": 485, "newlines": 840, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: DISCDIR                                               *\n*                                                                     *\n*  Find a specific member or display list of members                  *\n*  for restore config                                                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISCDIR  CSECT\nDISCDIR  AMODE 31\nDISCDIR  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISCOMM,R9\n         USING DISCDIR,R15\n         B     INIT0000\nMODID    DC    CL8'DISCDIR'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                  SAVE REGS\n         LR    R10,R15                          COPY ENTRY POINT\n         DROP  R15\n         USING DISCDIR,R10                      DEFINE BASE\n         ICM   R15,15,SESS_DXD_ADDR\n         A     R15,DXD_START                    PLUS DISPLACEMENT\n         ST    R13,4(R15)                       SAVE R13\n         ST    R15,8(R13)                       CHAIN SAVE AREA\n         LR    R13,R15                          COPY WORK AREA ADDRESS\n         USING DXDCDIR,R13                      DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n         ITRACE ID=ENTRY,                                              +\n               DATA1=SPF_CONFIG_MEMBER\n         MVI   DXD_RC,0                         INITIALIZE RC\n         MVI   DXD_FLAGS,$DXD_FIND              ASSUME 'FIND' MEMBER\n         MVC   DXD_DESERV(DESERV_L),DESERV_I\n         XC    DXD_VDATA_ADDR,DXD_VDATA_ADDR\n         XC    DXD_VDATA_LENGTH,DXD_VDATA_LENGTH\n         XC    DXD_ADDR,DXD_ADDR\n         CLC   SPF_CONFIG_MEMBER,COMM_BLANKS    MEMBER NAME GIVEN?\n         BNE   INIT0010                         YES\n         MVI   DXD_FLAGS,$DXD_DISPLAY           DISPLAY MEMBERS\n         XC    DSPCREQ_RECORD_NBR,DSPCREQ_RECORD_NBR\n         LA    R0,DXD_IO\n         ST    R0,DSPCREQ_RECORD_ADDR\n         LA    R0,CONFIG_L\n         ST    R0,DSPCREQ_RECORD_LENGTH\n         LA    R0,DATASPACE_2\n         ST    R0,DSPCREQ_DATASPACE\n         MVI   DSPCREQ_FUNC,$DSPCREQ_CREATE     SET FUNCTION\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE                OSDSPACE ENTRY POINT\n         BALR  R14,R15                          CREATE DATA SPACE\n         CLI   DSPCREQ_RC,$DSPCREQ_OK           SUCCESSFUL?\n         BNE   ERR0100                          NO\n         OI    DXD_FLAGS,$DXD_CREATED\n* ------------------------------------------------------------------- *\n*        Issue DESERV to obtain directory info for all members        *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         ITRACE ID=GET_ALL\n         DESERV FUNC=GET_ALL,                   ALL DIRECTORY ENTRIES  +\n               AREAPTR=DXD_ADDR,                .. BUFFER FOR DATA     +\n               CONN_INTENT=NONE,                .. NO CONNECTION INTENT+\n               DCB=DISCONF_DCB,                 .. DCB ADDRESS         +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_DESERV,COMPLETE)\n         ITRACE ID=DE_RC,                                              +\n               DATA1=(DXD_RETURN_CODE,4),                              +\n               DATA2=(DXD_REASON_CODE,4)\n         OC    DXD_RETURN_CODE,DXD_RETURN_CODE\n         BNZ   ERR0100\n* ------------------------------------------------------------------- *\n*        Process the data returned by DESERV                          *\n* ------------------------------------------------------------------- *\n         L     R5,DXD_ADDR                      ADDR OF RETURNED DATA\n         USING DESB,R5                          DEFINE BASE\nDIR0000  DS    0H\n         L     R7,DESB_COUNT                    NUMBER OF SMDES\n         LA    R6,DESB_DATA                     FIRST SMDE\n         USING SMDE,R6                          DEFINE BASE\nDIR0010  DS    0H\n         ITRACE ID=SMDE,                                               +\n               RDATA1=R6,                                              +\n               RDATA2=R7\n         MVC   DXD_CONFIG_MEMBER,COMM_BLANKS\n         MVC   DXD_CONFIG_DESC,COMM_BLANKS\n         SR    R14,R14\n         ICM   R14,3,SMDE_NAME_OFF              OFFSET TO NAME\n         AR    R14,R6                           PLUS BASE\n         SR    R15,R15\n         ICM   R15,3,0(R14)                     LENGTH OF NAME\n         CH    R15,=Y(L'DXD_CONFIG_MEMBER)      TOO LONG?\n         BNH   DIR0020                          NO\n         LH    R15,=Y(L'DXD_CONFIG_MEMBER)      LIMIT LENGTH\nDIR0020  DS    0H\n         BCTR  R15,0                            MINUS 1\n         EX    R15,NAME_MVC                     COPY NAME\n         CLC   SPF_CONFIG_MEMBER,COMM_BLANKS    MEMBER NAME GIVEN?\n         ICM   R15,3,SMDE_USRD_LEN              USER DATA LENGTH\n         BZ    DIR0040                          NO USER DATA\n         CH    R15,=Y(L'DXD_CONFIG_DESC)        TOO LONG?\n         BNH   DIR0030                          NO\n         LH    R15,=Y(L'DXD_CONFIG_DESC)        LIMIT LENGTH\nDIR0030  DS    0H\n         SR    R14,R14\n         ICM   R14,3,SMDE_USRD_OFF              OFFSET TO USER DATA\n         AR    R14,R6                           PLUS BASE\n         BCTR  R15,0\n         EX    R15,DESC_MVC                     COPY DESCRIPTION\nDIR0040  DS    0H\n         ITRACE ID=MEMBER,                                             +\n               DATA1=DXD_CONFIG_MEMBER\n         TM    DXD_FLAGS,$DXD_DISPLAY           CALLED TO DISPLAY LIST?\n         BO    DIR0050                          YES\n         CLC   SPF_CONFIG_MEMBER,DXD_CONFIG_MEMBER\n         BE    DIR0410                          MEMBER LOCATED\n         B     DIR0060                          GO TO NEXT MEMBER\nDIR0050  DS    0H\n         L     R1,DSPCREQ_RECORD_NBR            RECORDS STORED SO FAR\n         A     R1,F1                            PLUS 1\n         ST    R1,DSPCREQ_RECORD_NBR            SET RECORD NUMBER\n         ITRACE ID=STORE,                                              +\n               DATA1=(DSPCREQ_RECORD_NBR,4),                           +\n               DATA2=(DSPCREQ_RECORD_LENGTH,4)\n         MVI   DSPCREQ_FUNC,$DSPCREQ_STORE\n         LA    R1,DSPCREQ                       DSPCREQ BLOCK ADDRESS\n         L     R15,COMM_OSDSPACE                OSDSPACE ENTRY POINT\n         BALR  R14,R15                          STORE THE RECORD\n         CLI   DSPCREQ_RC,$DSPCREQ_OK           SUCCESSFUL?\n         BNE   ERR0100                          NO\nDIR0060  DS    0H\n         ICM   R0,15,SMDE_LEN                   LENGTH OF THIS SMDE\n         AR    R6,R0                            NEXT SMDE\n         BCT   R7,DIR0010                       LOOP\n* ------------------------------------------------------------------- *\n*        All entries in this block processed.                         *\n*        FREEMAIN this block and continue with next block.            *\n* ------------------------------------------------------------------- *\n         ICM   R0,15,DESB_LEN                   DESB LENGTH\n         ICM   R0,8,DESB_SUBPOOL                INSERT SUBPOOL\n         LR    R1,R5                            COPY DESB ADDRESS\n         ICM   R5,15,DESB_NEXT                  NEXT DESB\n         ITRACE ID=FREEDESB,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R0\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=(0)\n         LTR   R5,R5                            ADDITIONAL DESB'S?\n         BNZ   DIR0000                          YES\n* ------------------------------------------------------------------- *\n*        All data processed.                                          *\n* ------------------------------------------------------------------- *\n         ITRACE ID=EOF_DIR,                                            +\n               DATA1=(DXD_FLAGS,1)\n         TM    DXD_FLAGS,$DXD_FIND              CALLED TO FIND MEMBER?\n         BO    ERR0010                          YES.. NOT FOUND\n         MVC   DXD_DISPLAY_RECORD,F1            START WITH RECORD 1\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Display the members as a selection list                      *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDIR0100  DS    0H\n         ITRACE ID=GETVDATA,                                           +\n               DATA1=PANEL_NAME\n         LA    R1,PANEL_NAME                    PANEL NAME ADDR\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN   SET FUNCTION\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                          GETMAIN VDATA\n         ST    R0,DXD_VDATA_LENGTH              SAVE LENGTH\n         ST    R1,DXD_VDATA_ADDR                SAVE ADDRESS\n* ------------------------------------------------------------------- *\n*        initialize VDATA buffer                                      *\n* ------------------------------------------------------------------- *\nDIR0130  DS    0H\n         ITRACE ID=STRT_BLD\n         L     R0,DXD_VDATA_ADDR\n         L     R1,DXD_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                           INITIALIZE VDATA\n         XC    DXD_LINES,DXD_LINES              LINES BUILT\n         L     R7,DXD_VDATA_ADDR                VDATA BUFFER\n         L     R6,SPF_VDEPTH                    NUMBER OF LINES\n         MVI   DSPCREQ_FUNC,$DSPCREQ_RETRIEVE   SET FUNCTION\n         MVC   DSPCREQ_RECORD_NBR,DXD_DISPLAY_RECORD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDIR0140  DS    0H\n         ITRACE ID=RETRIEVE,                                           +\n               DATA1=(DSPCREQ_RECORD_NBR,4)\n         LA    R1,DSPCREQ                       DATA SPACE PARMS\n         L     R15,COMM_OSDSPACE                SPACE MANAGER\n         BALR  R14,R15                          RETRIEVE THE RECORD\n         CLI   DSPCREQ_RC,$DSPCREQ_OK           SUCCESSFUL?\n         BNE   ERR0100                          NO\n         ITRACE ID=DETAIL,                                             +\n               DATA1=DXD_CONFIG_MEMBER\n         MVC   0(MSG01_L,R7),MSG01              COPY\n         USING MSG01,R7\n         MVC   MSG01_MEMBER,DXD_CONFIG_MEMBER   COPY MEMBER NAME\n         MVC   MSG01_DESC,DXD_CONFIG_DESC       COPY DESCRIPTION\n         A     R7,SPF_VWIDTH                    NEXT LINE\n         BCT   R6,DIR0150\n         B     DIR0200                          SCREEN FULL\nDIR0150  DS    0H\n         CLC   DSPCREQ_RECORD_NBR,DATASPACE_2_LAST_RECORD\n         BE    DIR0200                          AT HIGH RECORD.. STOP\n         L     R1,DSPCREQ_RECORD_NBR            CURRENT RECORD NBR\n         LA    R1,1(,R1)                        NEXT RECORD\n         ST    R1,DSPCREQ_RECORD_NBR            UPDATE RECORD NBR\n         B     DIR0140\n* ------------------------------------------------------------------- *\n*        Display                                                      *\n* ------------------------------------------------------------------- *\nDIR0200  DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_NAME\n         MVC   SESS_DISP_VDATA_ADDR,DXD_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DXD_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP                DISPLAY ENTRY POINT\n         BALR  R14,R15                          DISPLAY DATA\n         MVC   DXD_RC,SESS_RC+1                 SET RETURN CODE\n         ITRACE ID=DISP_RC,                                            +\n               DATA1=(DXD_RC,1)\n         CLI   DXD_RC,0                         ZERO?\n         BNE   EXIT0000                         NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Check for line command(s)                                    *\n*                                                                     *\n*                                                                     *\n*     Both LMOD and non_LMOD display lines have the same format       *\n*     through the selection and member name.  This uses \"S_1\"         *\n*     for both.                                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R7,DXD_VDATA_ADDR                VDATA ADDRESS\n         LH    R6,DXD_LINES                     LINES BUILT\nDIR0250  DS    0H\n         OI    MSG01_SELECT,C' '                'TRANSLATE' TO UPPER\n         CLI   MSG01_SELECT,C' '                BLANK?\n         BNE   DIR0400                          NO\n         A     R7,SPF_VWIDTH                    NEXT LINE\n         BCT   R6,DIR0250                       LOOP\n* ------------------------------------------------------------------- *\n*        Process scrolling                                            *\n* ------------------------------------------------------------------- *\n         ITRACE ID=ZVERB,                                              +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=(SPF_ZSCROLLN,4)\n         CLI   SPF_ZVERB,C'B'                   BOTTOM?\n         BE    DIR0360                          YES\n         CLI   SPF_ZVERB,C'D'                   SCROLL DOWN?\n         BE    DIR0350                          YES\n         CLI   SPF_ZVERB,C'T'                   TOP?\n         BE    DIR0310                          YES\n         CLI   SPF_ZVERB,C'U'                   SCROLL UP?\n         BE    DIR0300                          YES\n         MVC   DSPCREQ_RECORD_NBR,DXD_DISPLAY_RECORD\n         B     DIR0130                          RE-BUILD DATA\n* ------------------------------------------------------------------- *\n*        SCROLL UP                                                    *\n* ------------------------------------------------------------------- *\nDIR0300  DS    0H\n         ITRACE ID=UP\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                MAX?\n         BE    DIR0310                          YES\n         L     R2,DXD_DISPLAY_RECORD            FIRST RECORD DISPLAYED\n         S     R2,SPF_ZSCROLLN                  MINUS SCROLL AMOUNT\n         BH    DIR0320\n* ------------------------------------------------------------------- *\n*        SCROLL TOP                                                   *\n* ------------------------------------------------------------------- *\nDIR0310  DS    0H\n         ITRACE ID=TOP\n         LA    R2,1                             DEFAULT TO 1\nDIR0320  DS    0H\n         ST    R2,DSPCREQ_RECORD_NBR            SET RECORD TO DISPLAY\n         B     DIR0130                          REBUILD EVERYTHING\n* -------------------------------------------------------------------\n*        SCROLL DOWN\n* -------------------------------------------------------------------\nDIR0350  DS    0H\n         ITRACE ID=DOWN\n         MVC   SPF_ZCMD,COMM_BLANKS             CLEAR ZCMD\n         CLI   SPF_ZSCROLLA,C'M'                MAX?\n         BE    DIR0360                          YES\n         L     R2,DXD_DISPLAY_RECORD            FIRST RECORD DISPLAYED\n         A     R2,SPF_ZSCROLLN                  PLUS RECORDS TO SCROLL\n         C     R2,DATASPACE_2_LAST_RECORD       BEYOND LAST MEMBER?\n         BH    DIR0360                          YES\n         ST    R2,DSPCREQ_RECORD_NBR            SET 1ST TO DISPLAY\n         B     DIR0130                          REBUILD EVERYTHING\n* -------------------------------------------------------------------\n*        SCROLL BOTTOM\n* -------------------------------------------------------------------\nDIR0360  DS    0H\n         ITRACE ID=BOTTOM\n         L     R2,DATASPACE_2_LAST_RECORD       HIGHEST RECORD STORED\n         B     DIR0130                          REBUILD EVERYTHING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDIR0400  DS    0H\n         ITRACE ID=SELECTED,                                           +\n               DATA1=MSG01_MEMBER               MEMBER SELECTED\n         MVC   SPF_CONFIG_MEMBER,MSG01_MEMBER   COPY MEMBER NAME\n         MVC   SPF_CONFIG_DESC,MSG01_DESC       COPY MEMBER DESCRIPTION\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDIR0410  DS    0H\n         ITRACE ID=LOCATED\n         MVC   SPF_CONFIG_DESC,DXD_CONFIG_DESC  COPY MEMBER DESCRIPTION\n         ICM   R0,15,DESB_LEN                   DESB LENGTH\n         ICM   R0,8,DESB_SUBPOOL                INSERT SUBPOOL\n         ITRACE ID=FREEDESB,                                           +\n               RDATA1=R5,                                              +\n               RDATA2=R0\n         FREEMAIN RU,                           FREEMAIN DESB          +\n               A=(R5),                                                 +\n               LV=(0)\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=NO_DATA\n         MVI   SESS_STATUS,$STATUS_NO_DATA\n         MVC   COMM_MSG_CSECT,MODID             SET OUR CSECT'S NAME\n         MVI   COMM_MSG_ID,0                    FORCE 1ST BYTE TO ZERO\n         MVI   COMM_MSG_ID+1,1                  SET MESSAGE NUMBER\n         MVC   COMM_INFO_01(4),DXD_RETURN_CODE\n         MVC   COMM_INFO_02(4),DXD_REASON_CODE\n         ITRACE ID=MESSAGE,                                            +\n               DATA1=(COMM_MSG_ID,2)\n         L     R15,COMM_V_OSMSG                 OSMSG ENTRY POINT\n         BALR  R14,R15                          CALL OSMSG\nERR0100  DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         MVI   DXD_RC,8                         SET RC\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         TM    DXD_FLAGS,$DXD_CREATED           DATASPACE CREATED?\n         BNO   EXIT0010                         NO\n         MVI   DSPCREQ_FUNC,$DSPCREQ_DELETE     DELETE THE DATA SPACE\n         LA    R1,DSPCREQ\n         L     R15,COMM_OSDSPACE\n         BALR  R14,R15                          DELETE DATA SPACE 2\nEXIT0010 DS    0H\n         ICM   R1,15,DXD_VDATA_ADDR             VDATA GETMAINED?\n         BZ    EXIT0020                         NO\n         L     R0,DXD_VDATA_LENGTH\n         MVI   COMM_VDATA_FUNC,$VDATA_FREEMAIN  SET FUNCTION\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                          FREE VDATA\nEXIT0020 DS    0H\n         SR    R2,R2\n         IC    R2,DXD_RC                        SAVE RETURN CODE\n         L     R13,4(R13)                       RESTORE R13\n         LR    R15,R2\n         L     R14,12(R13)                      RESTORE R14\n         LM    R0,R12,20(R13)                   RESTORE REGISTERS\n         BR    R14                              RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nNAME_MVC MVC   DXD_CONFIG_MEMBER(0),2(R14)      COPY MEMBER NAME\nDESC_MVC MVC   DXD_CONFIG_DESC(0),0(R14)        COPY DESCRIPTION\n* ------------------------------------------------------------------- *\n*        CONSTANTS                                                    *\n* ------------------------------------------------------------------- *\nDXD_START      DC    Q(DXDCDIR)\nDESERV_I       DESERV FUNC=GET_ALL,                                    +\n               MF=L\nDESERV_L       EQU   *-DESERV_I\n\nF1             DC    F'1'\n\nPANEL_NAME     DC    CL8'DISCDIR'\n\nMSG01          DS    0C\n               DC    AL1($SCREEN_ATTR_INPUT)\nMSG01_SELECT   DC    C' '\n               DC    AL1($SCREEN_ATTR_HIGH)\nMSG01_MEMBER   DC    CL8' '\n               DC    AL1($SCREEN_ATTR_HIGH_TURQUOISE)\nMSG01_DESC     DC    CL62' '\nMSG01_L        EQU   *-MSG01\n\n                LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDCDIR            DSECT\n                   COPY  DXDPREF\nDXD_DESERV         DS    0F,(DESERV_L)X\n\nDXD_ADDR           DS    A\nDXD_RETURN_CODE    DS    F\nDXD_REASON_CODE    DS    F\n\nDXD_VDATA_ADDR     DS    A\nDXD_VDATA_LENGTH   DS    F\nDXD_DISPLAY_RECORD DS    F                 FIRST RECORD DISPLAYED\n\nDXD_LINES          DS    H\n\nDXD_RC             DS    X\n\nDXD_FLAGS          DS    X\n$DXD_CREATED       EQU   X'80'             DATASPACE CREATED\n$DXD_DISPLAY       EQU   X'40'             DISPLAY LIST OF MEMBERS\n$DXD_FIND          EQU   X'20'             FIND A SPECIFIC MEMBER\n\nDXD_IO             DS    0C\nDXD_CONFIG_MEMBER  DS    CL8\nDXD_CONFIG_DESC    DS    CL62\nCONFIG_L           EQU   *-DXD_IO\n\n                   DSPCREQ  DSECT=NO\nDISCDIR_DXD_L      EQU      *-DXDCDIR\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IBMMAC DES=YES\n         IBMMAC SMDE=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BPXYSTAT DSECT=YES,LIST=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     SPFSTATS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY     REGEQU\n         END      DISCDIR\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISCOMM": {"ttr": 24, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00F\\x01\\t3_\\x01\\t3_\\x162\\x00\\x12\\x00\\x0e\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2009-12-01T00:00:00", "modifydate": "2009-12-01T16:32:46", "lines": 18, "newlines": 14, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  MODULE NAME: DISCOMM                                              *\n*                                                                    *\n*  Function:                                                         *\n*              Disasembler common area                               *\n*                                                                    *\n*--------------------------------------------------------------------*\nDISCOMM  DISCOMM  TYPE=CSECT\n*--------------------------------------------------------------------*\n*                                                                    *\n*--------------------------------------------------------------------*\n         DISASMDA\n*--------------------------------------------------------------------*\n*                                                                    *\n*--------------------------------------------------------------------*\n         COPY     REGEQU\n         END      DISCOMM\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISCONF": {"ttr": 6657, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x11\\x005\\x01\\t6O\\x01\\x10\\x01O\\x14W\\x05\\x04\\x04\\x9d\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.17", "flags": 0, "createdate": "2009-12-30T00:00:00", "modifydate": "2010-01-14T14:57:35", "lines": 1284, "newlines": 1181, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: DISCONF                                              *\n*                                                                    *\n*  Function:                                                         *\n*                                                                    *\n*   Save or restore saved config info                                *\n*                                                                    *\n*--------------------------------------------------------------------*\nDISCONF  CSECT\nDISCONF  AMODE 31\nDISCONF  RMODE ANY\n         USING DISCONF,R15\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'DISCONF'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         LA    R7,2048(,R10)\n         LA    R7,2048(,R7)\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISCONF,R10,R7\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR              WORK AREA\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         USING DXDCONF,R13\n         MVC   DXD_CSECT,MODID\n         USING IECSDSL1,DSINFO_DSCB\n         ITRACE ID=ENTRY\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n         MVI   SPF_FUNCTION,C' '              RESET FUNCTION\n         GETMAIN RU,                                                   +\n               LV=$BUFF_SIZE,                                          +\n               LOC=BELOW\n         ST    R1,DXD_IO_AREA                 SAVE I/O AREA ADDR\n         ITRACE ID=IO_AREA,                                            +\n               RDATA1=R1\nCONF     USING IHADCB,DISCONF_DCB\n         LA    R1,MAIN0810                    EOD POINT\nCONFDCBE USING DCBE,DISCONF_DCBE\n         ST    R1,CONFDCBE.DCBEEODA           SET EOD ADDRES\n         LA    R0,VGET\n         ST    R0,DXD_SPF_1\n         LA    R0,NAMELIST\n         ST    R0,DXD_SPF_2\n         LA    R0,PROFILE\n         ST    R0,DXD_SPF_3\n         OI    DXD_SPF_3,X'80'\n         LA    R1,DXD_SPF_PARMS\n         ITRACE ID=VGET,                                               +\n               RDATA1=R1\n         L     R15,COMM_ISPLINK\n         BALR  R14,R15                        VGET PROFILE VARIABLES\n         ITRACE ID=VGET_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0100                        NO\n         LA    R0,VPUT\n         ST    R0,DXD_SPF_1\n         LA    R0,NAMELIST\n         ST    R0,DXD_SPF_2\n         LA    R0,SHARED\n         ST    R0,DXD_SPF_3\n         OI    DXD_SPF_3,X'80'\n         LA    R1,DXD_SPF_PARMS\n         ITRACE ID=VPUTSHAR\n         L     R15,COMM_ISPLINK\n         BALR  R14,R15                        VPUT TO SHARED POOL\n         ITRACE ID=VPUT_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0120                        NO\nMAIN0010 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_DISCONF\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15                        DISPLAY CONFIG\n         MVC   SPF_MSG_1,COMM_BLANKS          CLEAR MESSAGE\n         MVC   SPF_MSG_2,COMM_BLANKS          CLEAR MESSAGE\n         MVC   SPF_MSG_3,COMM_BLANKS          CLEAR MESSAGE\n         MVC   SPF_MSG_4,COMM_BLANKS          CLEAR MESSAGE\n         MVC   SPF_MSG_5,COMM_BLANKS          CLEAR MESSAGE\n         ITRACE ID=DISP_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                        RC = 0?\n         BNZ   EXIT0000                       NO\n         OC    SPF_CONFIG_DSN,COMM_BLANKS     'TRANSLATE' NAME\n         OC    SPF_CONFIG_MEMBER,COMM_BLANKS\n         OC    SPF_CONFIG_VOLSER,COMM_BLANKS\n         CLC   SPF_CONFIG_DSN,COMM_BLANKS     BLANK?\n         BE    ERR0010                        YES\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   DSINFO_DSN,SPF_CONFIG_DSN      COPY DSN\n         MVC   DSINFO_VOLSER,SPF_CONFIG_VOLSER\n         MVI   DSINFO_OPTIONS,$DSINFO_VOLSER  USE SPECIFIED VOLSER\n         LA    R1,DSINFREQ\n         L     R15,V_DISDSINF\n         BALR  R14,R15                        DETERMINE DS INFO\n         LTR   R15,R15                        SUCCESSFUL?\n         BZ    MAIN0020                       YES\n         MVC   SPF_MSG_1,COMM_MSG_1           COPY MESSAGE\n         B     MAIN0010                       DISPLAY W/MSG\nMAIN0020 DS    0H\n         ITRACE ID=DS_TYPE,                                            +\n               DATA1=(DS1DSORG,1)\n         TM    DS1DSORG,DS1DSGPO              PDS?\n         BNO   ERR0020                        NO\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         OI    SPF_FUNCTION,C' '\n         CLI   SPF_FUNCTION,C' '              BLANK?\n         BE    ERR0030                        YES\n         CLI   SPF_FUNCTION,C'R'              RESTORE SAVED INFO?\n         BE    MAIN0030                       YES\n         CLI   SPF_FUNCTION,C'S'              SAVE INFO?\n         BE    MAIN1000                       YES\n         B     ERR0040                        FIRST ON CHAIN\n*---------------------------------------------------------------------*\n*                                                                     *\n*        Restore a config                                             *\n*                                                                     *\n*        DO NOT RESTORE                                               *\n*         Load module library                                         *\n*         LMOD                                                        *\n*         CSECT                                                       *\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0030 DS    0H\n         ITRACE ID=RESTORE\n         OI    DAIR_OPTS,$DAIR_NO_MSGS\n         BAL   R6,FREE0000\n         NI    DAIR_OPTS,255-$DAIR_NO_MSGS\n         BAL   R6,ALLOC000\n         NI    DXD_FLAGS,255-$DXD_SEARCH      RESET FLAG\n         CLC   SPF_CONFIG_MEMBER,COMM_BLANKS  MEMBER NAME BLANK?\n         BE    MAIN0040                       YES\n         OI    DXD_FLAGS,$DXD_SEARCH          SEARCH FOR NAMED MEMBER\nMAIN0040 DS    0H\n         ITRACE ID=OPEN\n         OPEN  (DISCONF_DCB,INPUT),           OPEN CONFIG DATA SET     +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_OPEN)\n         L     R15,V_DISCDIR                  CONF DIRECTORY DISP/SRCH\n         ITRACE ID=CALLCDIR,                                           +\n               DATA1=SPF_CONFIG_MEMBER,                                +\n               RDATA2=R15\n         BALR  R14,R15                        CALL DISCDIR\n         ITRACE ID=CDIR_RC,                                            +\n               RDATA1=R15\n         LTR   R2,R15                         SUCCESSFUL?\n         BZ    MAIN0050                       YES\n         CLOSE DISCONF_DCB,                   CLOSE CONFIG DCB         +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_CLOSE)\n         FREEPOOL DISCONF_DCB\n         OI    DAIR_OPTS,$DAIR_NO_MSGS\n         BAL   R6,FREE0000                    FREE CONFIG DATA SET\n         NI    DAIR_OPTS,255-$DAIR_NO_MSGS\n         TM    DXD_FLAGS,$DXD_SEARCH          SEARCH FOR NAMED MEMBER?\n         BO    ERR0060                        YES.. NOT FOUND\n         B     EXIT0000                       OTHERWISE JUST EXIT\n*---------------------------------------------------------------------*\n*        Issue FIND to position for READ                              *\n*---------------------------------------------------------------------*\nMAIN0050 DS    0H\n         FIND  DISCONF_DCB,                   FIND THE MEMBER          +\n               SPF_CONFIG_MEMBER,                                      +\n               D\n         ITRACE ID=FIND_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0060                        NO\n*---------------------------------------------------------------------*\n*        Save config DSN, member, volser in profile                   *\n*---------------------------------------------------------------------*\n         DS    0H\n         LA    R0,VPUT\n         ST    R0,DXD_SPF_1\n         LA    R0,NAMELIST\n         ST    R0,DXD_SPF_2\n         LA    R0,PROFILE\n         ST    R0,DXD_SPF_3\n         OI    DXD_SPF_3,X'80'\n         LA    R1,DXD_SPF_PARMS\n         ITRACE ID=VPUTPROF\n         L     R15,COMM_ISPLINK\n         BALR  R14,R15                        VPUT PCDSN, PCMEM, PCVOL\n         ITRACE ID=VPUT_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15\n         BNZ   ERR0110\n*---------------------------------------------------------------------*\n*        Free user defined data area(s)                               *\n*---------------------------------------------------------------------*\n         ICM   R2,15,DISCOMM_USER_AREA_NEXT_1 FIRST AREA\n         BZ    MAIN0090\n         ITRACE ID=FREEDATA\n         USING AREA_DSECT,R2\n         XC    DISCOMM_USER_AREA_NEXT_1,DISCOMM_USER_AREA_NEXT_1\nMAIN0060 DS    0H\n         ICM   R1,15,AREA_REF_LABEL1          LABEL ASSIGNED?\n         BZ    MAIN0070\n         ITRACE ID=FREEREF1\n         FREEMAIN RU,                         FREE LABEL BLOCK         +\n               A=(1),                                                  +\n               LV=LABEL_DSECT_L\nMAIN0070 DS    0H\n         ICM   R1,15,AREA_REF_LABEL2          LABEL ASSIGNED?\n         BZ    MAIN0080\n         ITRACE ID=FREEREF2\n         FREEMAIN RU,                         FREE LABEL BLOCK         +\n               A=(1),                                                  +\n               LV=LABEL_DSECT_L\nMAIN0080 DS    0H\n         LR    R1,R2\n         ICM   R2,15,AREA_NEXT\n         FREEMAIN RU,                         FREE AREA BLOCK          +\n               A=(R1),                                                 +\n               LV=AREA_DSECT_L\n         LTR   R2,R2                          ANOTHER AREA?\n         BNZ   MAIN0060                       YES\n         DROP  R2\n*---------------------------------------------------------------------*\n*        Free Base(s)                                                 *\n*---------------------------------------------------------------------*\nMAIN0090 DS    0H\n         ICM   R2,15,DISCOMM_BASE_NEXT        FIRST BASE\n         BZ    MAIN0150\n         ITRACE ID=FREEBASE\n         USING BASE_DSECT,R2\n         XC    DISCOMM_BASE_NEXT,DISCOMM_BASE_NEXT\nMAIN0100 DS    0H\n         LR    R1,R2\n         ICM   R2,15,BASE_NEXT\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=BASE_DSECT_L\n         LTR   R2,R2\n         BNZ   MAIN0100\n         DROP  R2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0150 DS    0H\n         ICM   R2,15,DISCOMM_KSDS_NEXT        FIRST KSDS BLOCK\n         BZ    MAIN0300                       NO KSDS BLOCKS\n         USING KSDS_DSECT,R2\n         XC    DISCOMM_KSDS_NEXT,DISCOMM_KSDS_NEXT\nMAIN0160 DS    0H\n         ITRACE ID=KSDS,                                               +\n               DATA1=KSDS_DDNAME\n         ICM   R3,15,KSDS_DSECT_NEXT          FIRST DSECT BLOCK\n         BZ    MAIN0220                       NO DSECT BLOCKS\n         USING DSECT_DSECT,R3\nMAIN0170 DS    0H\n         ITRACE ID=DSECT,                                              +\n               DATA1=DSECT_NAME\n         ICM   R4,15,DSECT_LABEL_NEXT         FIRST LABEL BLOCK\n         BZ    MAIN0210                       NO LABEL BLOCKS\n         USING LABEL_DSECT,R4\nMAIN0180 DS    0H\n         ICM   R5,15,LABEL_EQU_NEXT           FIRST EQU\n         BZ    MAIN0200                       NO EQU\n         USING EQU_DSECT,R5\nMAIN0190 DS    0H\n         LR    R1,R5                          COPY EQU BLOCK ADDR\n         ICM   R5,15,EQU_NEXT                 NEXT EQU BLOCK\n         ITRACE ID=FREE_EQU,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                         FREE THE EQU BLOCK       +\n               A=(1),                                                  +\n               LV=EQU_DSECT_L\n         LTR   R5,R5                          ANOTHER EQU BLOCK?\n         BNZ   MAIN0190                       YES\nMAIN0200 DS    0H\n         LR    R1,R4                          COPY LABEL BLOCK ADDR\n         ICM   R4,15,LABEL_NEXT               NEXT LABEL BLOCK\n         ITRACE ID=FREELABL,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                         FREE THE LABEL BLOCK     +\n               A=(1),                                                  +\n               LV=LABEL_DSECT_L\n         LTR   R4,R4                          ANOTHER LABEL BLOCK?\n         BNZ   MAIN0180                       YES.. CHECK FOR EQU'S\nMAIN0210 DS    0H\n         LR    R1,R3                          COPY DSECT BLOCK ADDR\n         ICM   R3,15,DSECT_NEXT               NEXT DSECT BLOCK\n         ITRACE ID=FREEDSCT,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=DSECT_DSECT_L\n         LTR   R3,R3                          ANOTHER DSECT?\n         BNZ   MAIN0170                       YES.. CHECK FOR LABELS\nMAIN0220 DS    0H\n         TM    KSDS_FLAGS,$KSDS_OPEN          KSDS OPEN?\n         BNO   MAIN0230                       NO\n         ITRACE ID=CLOSE,                                              +\n               DATA1=KSDS_DDNAME\n         CLOSE KSDS_ACB,                                               +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_CLOSE)\nMAIN0230 DS    0H\n         OI    DAIR_OPTS,$DAIR_NO_MSGS\n         MVI   DAIR_FUNC,$DAIR_FREE\n         MVC   DAIR_DD,KSDS_DDNAME\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15                        FREE THE DD\n         NI    DAIR_OPTS,255-$DAIR_NO_MSGS\n         LR    R1,R2                          COPY KSDS BLOCK ADDR\n         ICM   R2,15,KSDS_NEXT                NEXT KSDS\n         ITRACE ID=FREEKSDS,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                         FREE THE KSDS BLOCK      +\n               A=(1),                                                  +\n               LV=KSDS_DSECT_L\n         LTR   R2,R2                          ANOTHER KSDS BLOCK?\n         BNZ   MAIN0160                       YES.. CHECK FOR DSECTS\n         DROP  R2,R3,R4,R5\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0300 DS    0H\n         ICM   R2,15,DISCOMM_SYSLIB_NEXT      FIRST SYSLIB BLOCK\n         BZ    MAIN0320\n         USING SYSLIB_DSECT,R2\n         XC    DISCOMM_SYSLIB_NEXT,DISCOMM_SYSLIB_NEXT\nMAIN0310 DS    0H\n         LR    R1,R2                          COPY SYSLIB BLOCK ADDR\n         ICM   R2,15,SYSLIB_NEXT              NEXT SYSLIB\n         ITRACE ID=FREE_LIB,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                         FREE SYSLIB BLOCK        +\n               A=(1),                                                  +\n               LV=SYSLIB_DSECT_L\n         LTR   R2,R2                          ANOTHER SYSLIB BLOCK?\n         BNZ   MAIN0310                       YES\n         DROP  R2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0320 DS    0H\n         ICM   R2,15,DISCOMM_USING_NEXT       FIRST USING BLOCK\n         BZ    MAIN0340\n         ITRACE ID=FREEUSNG\n         USING USING_DSECT,R2\n         XC    DISCOMM_USING_NEXT,DISCOMM_USING_NEXT\nMAIN0330 DS    0H\n         LR    R1,R2\n         ICM   R2,15,USING_NEXT\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=USING_DSECT_L\n         LTR   R2,R2\n         BNZ   MAIN0330\n         DROP  R2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0340 DS    0H\n         ICM   R2,15,DISCOMM_ASM_NEXT         FIRST ASSEMBLER SOURCE\n         BZ    MAIN0400\n         ITRACE ID=FREE_ASM\n         USING ASM_DSECT,R2\n         XC    DISCOMM_ASM_NEXT,DISCOMM_ASM_NEXT\nMAIN0350 DS    0H\n         LR    R1,R2\n         ICM   R2,15,ASM_NEXT\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=ASM_DSECT_L\n         LTR   R2,R2\n         BNZ   MAIN0350\n         DROP  R2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0400 DS    0H\n         ITRACE ID=RESET\n         XC    DXD_FIRST_DATAAREA,DXD_FIRST_DATAAREA\n         XC    DXD_LAST_DATAAREA,DXD_LAST_DATAAREA\n         XC    DXD_FIRST_BASE,DXD_FIRST_BASE\n         XC    DXD_LAST_BASE,DXD_LAST_BASE\n         XC    DXD_FIRST_USING,DXD_FIRST_USING\n         XC    DXD_LAST_USING,DXD_LAST_USING\n         XC    DXD_FIRST_KSDS,DXD_FIRST_KSDS\n         XC    DXD_LAST_KSDS,DXD_LAST_KSDS\n         XC    DXD_FIRST_SYSLIB,DXD_FIRST_SYSLIB\n         XC    DXD_LAST_SYSLIB,DXD_LAST_SYSLIB\n         XC    DXD_FIRST_ASM,DXD_FIRST_ASM\n         XC    DXD_LAST_ASM,DXD_LAST_ASM\n*---------------------------------------------------------------------*\n*                                                                     *\n*        R5   I/O area address                                        *\n*        R4   Data length                                             *\n*                                                                     *\n*---------------------------------------------------------------------*\nMAINX140 DS    0H\n         ITRACE ID=READ\n         XC    DISCOMM_DECB(DISCOMM_DECB_L),DISCOMM_DECB\n         L     R5,DXD_IO_AREA                    I/O AREA ADDRESS\n         USING CONFIG_RECORD,R5\n         READ  DISCOMM_DECB,                     READ                  +\n               SF,                                                     +\n               DISCONF_DCB,                      .. DCB ADDR           +\n               (R5),                             .. I/O AREA ADDR      +\n               'S',                                                    +\n               MF=E\n         ITRACE ID=WAIT\n         CHECK DISCOMM_DECB\n         ITRACE ID=RUNNING\n         USING DECB,DISCOMM_DECB\n         L     R1,DECIOBPT                       IOB ADDRESS\n         USING IOBSTDRD,R1                       DEFINE IOB BASE\n         LH    R4,CONF.DCBBLKSI                  BLOCK SIZE\n         SR    R0,R0                             CLEAR R1\n         ICM   R0,3,IOBSTDRD+14                  RESIDUAL LENGTH\n         SR    R4,R0                             LENGTH READ\n*---------------------------------------------------------------------*\n*                                                                     *\n*        Determine record type                                        *\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0410 DS    0H\n         ITRACE ID=RECORD,                                             +\n               RDATA1=R5,                                              +\n               DATA2=CONFIG_TYPE\n         CLI   CONFIG_TYPE,$CONFIG_DATAAREA      DATA AREA?\n         BE    MAIN0420                          YES\n         CLI   CONFIG_TYPE,$CONFIG_BASE          BASE?\n         BE    MAIN0500                          YES\n         CLI   CONFIG_TYPE,$CONFIG_USING         USING?\n         BE    MAIN0530                          YES\n         CLI   CONFIG_TYPE,$CONFIG_DSECT_KSDS    DSECT DATA KSDS?\n         BE    MAIN0600                          YES\n         CLI   CONFIG_TYPE,$CONFIG_SYSLIB        SYSLIB?\n         BE    MAIN0650                          YES\n         CLI   CONFIG_TYPE,$CONFIG_PREFIX_LENGTH LABEL PREFIX LENGTH?\n         BE    MAIN0700                          YES\n         CLI   CONFIG_TYPE,$CONFIG_PREFIX        LABEL PREFIX?\n         BE    MAIN0710                          YES\n         CLI   CONFIG_TYPE,$CONFIG_ASM_SOURCE    ASSEMBLER SOURCE?\n         BE    MAIN0720                          YES\n         CLI   CONFIG_TYPE,$CONFIG_OUTPUT_DSN    OUTPUT DSN?\n         BE    MAIN0750                          YES\n         CLI   CONFIG_TYPE,$CONFIG_OUTPUT_MEMBER OUTPUT MEMBER?\n         BE    MAIN0760                          YES\n         CLI   CONFIG_TYPE,$CONFIG_OUTPUT_VOLSER OUTPUT VOLSER?\n         BE    MAIN0770                          YES\n         DC    H'0'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0420 DS    0H\n         ITRACE ID=DATAAREA\n         CLC   DISCOMM_CSECT_LENGTH,CONFIG_DATA+(AREA_BEGIN-AREA_EYE)\n         BL    MAIN0450\n         GETMAIN RU,                                                   +\n               LV=AREA_DSECT_L,                                        +\n               LOC=ANY\nNEW      USING AREA_DSECT,R1\n         ICM   R3,15,DXD_LAST_DATAAREA           LAST DATA AREA\n         BZ    MAIN0430\nPREV     USING AREA_DSECT,R3\n         ST    R1,PREV.AREA_NEXT                 SET NEXT\nMAIN0430 DS    0H\n         ST    R3,NEW.AREA_PREV                  SET PREV\n         XC    NEW.AREA_NEXT,NEW.AREA_NEXT\n         MVC   NEW.AREA_EYE(AREA_DSECT_L-(AREA_EYE-AREA_DSECT)),CONFIG_+\n               DATA\n         MVI   NEW.AREA_TYPE,$AREA_DATA\n         XC    NEW.AREA_OPCODE,NEW.AREA_OPCODE\n         XC    NEW.AREA_REF_LABEL1,NEW.AREA_REF_LABEL1\n         XC    NEW.AREA_REF_DISP1,NEW.AREA_REF_DISP1\n         XC    NEW.AREA_REF_LABEL2,NEW.AREA_REF_LABEL2\n         XC    NEW.AREA_REF_DISP2,NEW.AREA_REF_DISP2\n         OC    DXD_FIRST_DATAAREA,DXD_FIRST_DATAAREA\n         BNZ   MAIN0440\n         ST    R1,DXD_FIRST_DATAAREA\nMAIN0440 DS    0H\n         ST    R1,DXD_LAST_DATAAREA              SAVE ADDRESS\n         CLC   NEW.AREA_END,DISCOMM_CSECT_LENGTH BEYOND END OF CSECT?\n         BNH   MAIN0800                          NO\n         MVC   NEW.AREA_END,DISCOMM_CSECT_LENGTH LIMIT TO CSECT LENGTH\n         MVC   COMM_MSG_1(MSG06_L),MSG06\n         UNPK  COMM_INFO_01(9),CONFIG_DATA+(AREA_BEGIN-AREA_EYE)(5)\n         TR    COMM_INFO_01(8),COMM_HEXCHAR\n         MVC   COMM_MSG_1+(MSG06_B-MSG06)(8),COMM_INFO_01\n         UNPK  COMM_INFO_01(9),CONFIG_DATA+(AREA_END-AREA_EYE)(5)\n         TR    COMM_INFO_01(8),COMM_HEXCHAR\n         MVC   COMM_MSG_1+(MSG06_E-MSG06)(8),COMM_INFO_01\n         B     MAIN0800\nMAIN0450 DS    0H\n         MVC   COMM_MSG_1(MSG07_L),MSG07\n         UNPK  COMM_INFO_01(9),CONFIG_DATA+(AREA_BEGIN-AREA_EYE)(5)\n         TR    COMM_INFO_01(8),COMM_HEXCHAR\n         MVC   COMM_MSG_1+(MSG07_B-MSG07)(8),COMM_INFO_01\n         UNPK  COMM_INFO_01(9),CONFIG_DATA+(AREA_END-AREA_EYE)(5)\n         TR    COMM_INFO_01(8),COMM_HEXCHAR\n         MVC   COMM_MSG_1+(MSG07_E-MSG07)(8),COMM_INFO_01\n         BAL   R6,TPUT0000\n         B     MAIN0800\n         DROP  PREV,NEW\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0500 DS    0H\n         ITRACE ID=BASE\n         GETMAIN RU,                                                   +\n               LV=BASE_DSECT_L,                                        +\n               LOC=ANY\nNEW      USING BASE_DSECT,R1\n         ICM   R3,15,DXD_LAST_BASE               LAST BASE AREA\n         BZ    MAIN0510\nPREV     USING BASE_DSECT,R3\n         ST    R1,PREV.BASE_NEXT                 SET NEXT\nMAIN0510 DS    0H\n         ST    R3,NEW.BASE_PREV                  SET PREV\n         XC    NEW.BASE_NEXT,NEW.BASE_NEXT\n         MVC   NEW.BASE_EYE(BASE_DSECT_L-(BASE_EYE-BASE_DSECT)),CONFIG_+\n               DATA\n         MVI   NEW.BASE_FLAGS,0                  RESET FLAGS\n         OC    DXD_FIRST_BASE,DXD_FIRST_BASE     ANY ON CHAIN NOW?\n         BNZ   MAIN0520                          YES\n         ST    R1,DXD_FIRST_BASE                 SET FIRST ON CHAIN\nMAIN0520 DS    0H\n         ST    R1,DXD_LAST_BASE                  SAVE LAST ON NEW CHAIN\n         B     MAIN0800\n         DROP  PREV,NEW\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0530 DS    0H\n         ITRACE ID=USING\n         GETMAIN RU,                                                   +\n               LV=USING_DSECT_L,                                       +\n               LOC=ANY\nNEW      USING USING_DSECT,R1\n         ICM   R3,15,DXD_LAST_USING              LAST USING AREA\n         BZ    MAIN0540\nPREV     USING USING_DSECT,R3\n         ST    R1,PREV.USING_NEXT                SET NEXT\nMAIN0540 DS    0H\n         ST    R3,NEW.USING_PREV                 SET PREV\n         XC    NEW.USING_NEXT,NEW.USING_NEXT\n         MVC   NEW.USING_EYE(USING_DSECT_L-(USING_EYE-USING_DSECT)),CON+TA\n               FIG_DATA\n         MVI   NEW.USING_FLAG,0                  RESET FLAGS\n         XC    NEW.USING_DSECT_ADDR,NEW.USING_DSECT_ADDR\n         XC    NEW.USING_LABEL_ADDR,NEW.USING_LABEL_ADDR\n         OC    DXD_FIRST_USING,DXD_FIRST_USING   SOMETHING ON CHAIN?\n         BNZ   MAIN0550                          YES\n         ST    R1,DXD_FIRST_USING                SET FIRST ON CHAIN\nMAIN0550 DS    0H\n         ST    R1,DXD_LAST_USING                 SAVE LAST ON CHAIN\n         B     MAIN0800\n         DROP  PREV,NEW\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0600 DS    0H\n         ITRACE ID=KSDS\n         GETMAIN RU,                                                   +\n               LV=KSDS_DSECT_L,                                        +\n               LOC=ANY\nNEW      USING KSDS_DSECT,R1\n         ICM   R3,15,DXD_LAST_KSDS               LAST KSDS AREA\n         BZ    MAIN0610\nPREV     USING KSDS_DSECT,R3\n         ST    R1,PREV.KSDS_NEXT                 SET NEXT\nMAIN0610 DS    0H\n         ST    R3,NEW.KSDS_PREV                  SET PREV\n         XC    NEW.KSDS_NEXT,NEW.KSDS_NEXT\n         MVC   NEW.KSDS_EYE(KSDS_DSECT_L-(KSDS_EYE-KSDS_DSECT)),CONFIG_+\n               DATA\n         XC    NEW.KSDS_DSECT_NEXT,NEW.KSDS_DSECT_NEXT\n         MVC   NEW.KSDS_ACB(ACB_L),ACB_I         COPY ACB\n         MVI   NEW.KSDS_FLAGS,0\n         OC    DXD_FIRST_KSDS,DXD_FIRST_KSDS     ANY ON CHAIN NOW?\n         BNZ   MAIN0620                          NO\n         ST    R1,DXD_FIRST_KSDS                 SET 1ST ON NEW CHAIN\nMAIN0620 DS    0H\n         ST    R1,DXD_LAST_KSDS                  SAVE LAST ON NEW CHAIN\n         B     MAIN0800\n         DROP  PREV,NEW\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0650 DS    0H\n         ITRACE ID=SYSLIB\n         GETMAIN RU,                                                   +\n               LV=SYSLIB_DSECT_L,                                      +\n               LOC=ANY\nNEW      USING  SYSLIB_DSECT,R1\n         ICM   R3,15,DXD_LAST_SYSLIB             LAST SYSLIB AREA\n         BZ    MAIN0660\nPREV     USING  SYSLIB_DSECT,R3\n         ST    R1,PREV.SYSLIB_NEXT               SET NEXT\nMAIN0660 DS    0H\n         ST    R3,NEW.SYSLIB_PREV                SET PREV\n         XC    NEW.SYSLIB_NEXT,NEW.SYSLIB_NEXT\n         MVC   NEW.SYSLIB_EYE(SYSLIB_DSECT_L-(SYSLIB_EYE-SYSLIB_DSECT))+\n               ,CONFIG_DATA\n         MVC   NEW.SYSLIB_DDNAME,COMM_BLANKS\n         OC    DXD_FIRST_SYSLIB,DXD_FIRST_SYSLIB ANY ON CHAIN NOW?\n         BNZ   MAIN0670                          NO\n         ST    R1,DXD_FIRST_SYSLIB               SET 1ST ON NEW CHAIN\nMAIN0670 DS    0H\n         ST    R1,DXD_LAST_SYSLIB                SAVE LAST ON NEW CHAIN\n         B     MAIN0800\n         DROP  PREV,NEW\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0700 DS    0H\n         ITRACE ID=PRE_LEN\n         MVC   DISCOMM_PREFIX_LENGTH,CONFIG_DATA\n         B     MAIN0800\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0710 DS    0H\n         ITRACE ID=PREFIX\n         MVC   DISCOMM_PREFIX,CONFIG_DATA\n         B     MAIN0800\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0720 DS    0H\n         ITRACE ID=ASM_SRC\n         OI    DISCOMM_FLAGS,$DISCOMM_ASSEMBLE_SOURCE\n         GETMAIN RU,                                                   +\n               LV=ASM_DSECT_L,                                         +\n               LOC=ANY\nNEW      USING ASM_DSECT,R1\n         ICM   R3,15,DXD_LAST_ASM                LAST ASM AREA\n         BZ    MAIN0730\nPREV     USING ASM_DSECT,R3\n         ST    R1,PREV.ASM_NEXT                  SET NEXT\nMAIN0730 DS    0H\n         ST    R3,NEW.ASM_PREV                   SET PREV\n         XC    NEW.ASM_NEXT,NEW.ASM_NEXT\n         MVC   NEW.ASM_EYE(ASM_DSECT_L-(ASM_EYE-ASM_DSECT)),CONFIG_DATA\n         OC    DXD_FIRST_ASM,DXD_FIRST_ASM\n         BNZ   MAIN0740                          NO\n         ST    R1,DXD_FIRST_ASM                  SET 1ST ON NEW CHAIN\nMAIN0740 DS    0H\n         ST    R1,DXD_LAST_ASM                   SAVE LAST ON NEW CHAIN\n         B     MAIN0800\n         DROP  PREV,NEW\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0750 DS    0H\n         ITRACE ID=OUT_DSN\n         MVC   DISCOMM_OUTPUT_DSN,CONFIG_DATA    RESTORE OUTPUT DSN\n         B     MAIN0800\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0760 DS    0H\n         ITRACE ID=OUT_MEM\n         MVC   DISCOMM_OUTPUT_MEMBER,CONFIG_DATA RESTORE OUTPUT MEMBER\n         B     MAIN0800\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0770 DS    0H\n         ITRACE ID=OUT_VOL\n         MVC   DISCOMM_OUTPUT_VOLSER,CONFIG_DATA RESTORE OUTPUT VOLSER\n         B     MAIN0800\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0800 DS    0H\n         AH    R5,H256                           PLUS ONE RECORD\n         SH    R4,H256                           MINUS ONE RECORD\n         BH    MAIN0410\n         B     MAINX140\n*---------------------------------------------------------------------*\n*                                                                     *\n*        EOF on CONFIG file                                           *\n*         . CLOSE CONFIG                                              *\n*         . De-allocate CONFIG file                                   *\n*         . display pre-processed DSECT KSDS libraries                *\n*         . display Assembler SYSLIBs                                 *\n*         . assemble assembler source                                 *\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0810 DS    0H\n         ITRACE ID=EOF\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         CLOSE DISCONF_DCB,                      CLOSE CONFIG DCB      +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_CLOSE)\n         FREEPOOL DISCONF_DCB\n         BAL   R6,FREE0000\n         LTR   R15,R15                           SUCCESSFUL?\n         BNZ   ERR0050                           NO\n*---------------------------------------------------------------------*\n*        Display pre-processed DSECT KSDSes                           *\n*---------------------------------------------------------------------*\n         ITRACE ID=DISPKSDS,                                           +\n               RDATA1=R1\n         MVC   SPF_MSG_3(MSG02_L),MSG02\n         L     R1,DXD_FIRST_KSDS\n         L     R15,V_DISKLIST                    DISPLAY KSDS(S)\n         BALR  R14,R15\n*---------------------------------------------------------------------*\n*        Display Assembler SYSLIBs                                    *\n*---------------------------------------------------------------------*\n         ITRACE ID=SYSLIB,                                             +\n               RDATA1=R1\n         MVC   SPF_MSG_3(MSG03_L),MSG03\n         L     R1,DXD_FIRST_SYSLIB\n         L     R15,V_DISSLIST\n         BALR  R14,R15                           DISPLAY SYSLIBS\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         MVC   DISCOMM_USER_AREA_NEXT_1,DXD_FIRST_DATAAREA\n         MVC   DISCOMM_BASE_NEXT,DXD_FIRST_BASE\n         MVC   DISCOMM_USING_NEXT,DXD_FIRST_USING\n         MVC   DISCOMM_ASM_NEXT,DXD_FIRST_ASM\n         MVC   SPF_MSG_3(MSG01_L),MSG01\n         B     EXIT0000                          ALL DONE\n*---------------------------------------------------------------------*\n*                                                                     *\n*                                                                     *\n*            Save config info                                         *\n*                                                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN1000 DS    0H\n         ITRACE ID=SAVE\n         BAL   R6,FREE0000\n         OI    DAIR_OPTS,$DAIR_NO_MSGS\n         BAL   R6,ALLOC000\n         NI    DAIR_OPTS,255-$DAIR_NO_MSGS\n         ITRACE ID=OPEN\n         OPEN  (DISCONF_DCB,OUTPUT),             OPEN CONFIG DATA SET  +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_OPEN)\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN1020 DS    0H\n         L     R0,DXD_IO_AREA\n         LH    R1,=Y($BUFF_SIZE)\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\n         L     R5,DXD_IO_AREA                    I/O AREA\n         SR    R4,R4                             INIT AMOUNT OF DATA\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN1030 DS    0H\n         ICM   R2,15,DISCOMM_USER_AREA_NEXT_1    FIRST USER AREA\n         BZ    MAIN1050\n         USING AREA_DSECT,R2\nMAIN1040 DS    0H\n         ITRACE ID=DATAAREA,                                           +\n               RDATA1=R2\n         MVI   CONFIG_TYPE,$CONFIG_DATAAREA      DATA TYPE\n         MVC   CONFIG_DATA(AREA_DSECT_L-(AREA_EYE-AREA_DSECT)),AREA_EYE\n         BAL   R6,WRITE000                       WRITE TO CONFIG FILE\n         ICM   R2,15,AREA_NEXT                   NEXT AREA BLOCK\n         BNZ   MAIN1040\n         DROP  R2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN1050 DS    0H\n         ICM   R2,15,DISCOMM_BASE_NEXT           FIRST BASE\n         BZ    MAIN1070\n         USING BASE_DSECT,R2\nMAIN1060 DS    0H\n         ITRACE ID=BASE,                                               +\n               RDATA1=R2\n         MVI   CONFIG_TYPE,$CONFIG_BASE          DATA TYPE\n         MVC   CONFIG_DATA(BASE_DSECT_L-(BASE_EYE-BASE_DSECT)),BASE_EYE\n         BAL   R6,WRITE000                       WRITE TO CONFIG FILE\n         ICM   R2,15,BASE_NEXT                   NEXT BASE BLOCK\n         BNZ   MAIN1060\n         DROP  R2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN1070 DS    0H\n         ICM   R2,15,DISCOMM_USING_NEXT          FIRST USING\n         BZ    MAIN1090\n         USING USING_DSECT,R2\nMAIN1080 DS    0H\n         ITRACE ID=USING,                                              +\n               RDATA1=R2\n         MVI   CONFIG_TYPE,$CONFIG_USING         DATA TYPE\n         MVC   CONFIG_DATA(USING_DSECT_L-(USING_EYE-USING_DSECT)),USING+\n               _EYE\n         BAL   R6,WRITE000                       WRITE TO CONFIG FILE\n         ICM   R2,15,USING_NEXT                  NEXT USING BLOCK\n         BNZ   MAIN1080\n         DROP  R2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN1090 DS    0H\n         ICM   R2,15,DISCOMM_KSDS_NEXT           FIRST KSDS\n         BZ    MAIN1110\n         USING KSDS_DSECT,R2\nMAIN1100 DS    0H\n         ITRACE ID=KSDS,                                               +\n               RDATA1=R2\n         MVI   CONFIG_TYPE,$CONFIG_DSECT_KSDS    DATA TYPE\n         MVC   CONFIG_DATA(KSDS_DSECT_L-(KSDS_EYE-KSDS_DSECT)),KSDS_EYE\n         BAL   R6,WRITE000                       WRITE TO CONFIG FILE\n         ICM   R2,15,KSDS_NEXT                   NEXT KSDS BLOCK\n         BNZ   MAIN1100\n         DROP  R2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN1110 DS    0H\n         ICM   R2,15,DISCOMM_SYSLIB_NEXT         FIRST SYSLIB\n         BZ    MAIN1130\n         USING SYSLIB_DSECT,R2\nMAIN1120 DS    0H\n         ITRACE ID=SYSLIB,                                             +\n               RDATA1=R2\n         MVI   CONFIG_TYPE,$CONFIG_SYSLIB        DATA TYPE\n         MVC   CONFIG_DATA(SYSLIB_DSECT_L-(SYSLIB_EYE-SYSLIB_DSECT)),SY+\n               SLIB_EYE\n         BAL   R6,WRITE000                       WRITE TO CONFIG FILE\n         ICM   R2,15,SYSLIB_NEXT                 NEXT SYSLIB BLOCK\n         BNZ   MAIN1120\n         DROP  R2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN1130 DS    0H\n         ITRACE ID=PRFX_LEN\n         MVI   CONFIG_TYPE,$CONFIG_PREFIX_LENGTH DATA TYPE\n         MVC   CONFIG_DATA(2),DISCOMM_PREFIX_LENGTH\n         BAL   R6,WRITE000                       WRITE TO CONFIG FILE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         ITRACE ID=PREFIX\n         MVI   CONFIG_TYPE,$CONFIG_PREFIX        DATA TYPE\n         MVC   CONFIG_DATA(4),DISCOMM_PREFIX\n         BAL   R6,WRITE000                       WRITE TO CONFIG FILE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         ICM   R2,15,DISCOMM_ASM_NEXT            FIRST ASSEMBLER SOURCE\n         BZ    MAIN1150\n         USING ASM_DSECT,R2\nMAIN1140 DS    0H\n         ITRACE ID=ASM,                                                +\n               RDATA2=R2\n         MVI   CONFIG_TYPE,$CONFIG_ASM_SOURCE    DATA TYPE\n         MVC   CONFIG_DATA(ASM_DSECT_L-(ASM_EYE-ASM_DSECT)),ASM_EYE\n         BAL   R6,WRITE000                       WRITE TO CONFIG FILE\n         ICM   R2,15,ASM_NEXT                    NEXT ASM BLOCK\n         BNZ   MAIN1140\n         DROP  R2\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN1150 DS    0H\n         MVI   CONFIG_TYPE,$CONFIG_OUTPUT_DSN\n         MVC   CONFIG_DATA(44),DISCOMM_OUTPUT_DSN\n         BAL   R6,WRITE000\n         MVI   CONFIG_TYPE,$CONFIG_OUTPUT_MEMBER\n         MVC   CONFIG_DATA(8),DISCOMM_OUTPUT_MEMBER\n         BAL   R6,WRITE000\n         MVI   CONFIG_TYPE,$CONFIG_OUTPUT_VOLSER\n         MVC   CONFIG_DATA(6),DISCOMM_OUTPUT_VOLSER\n         BAL   R6,WRITE000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         ITRACE ID=LAST,                                               +\n               RDATA1=R4\n         LTR   R4,R4                             DATA IN LAST BLOCK?\n         BZ    MAIN1160                          NO\n         BAL   R6,WRITE010                       WRITE LAST BUFFER\nMAIN1160 DS    0H\n         ITRACE ID=STOW,                                               +\n               DATA1=SPF_CONFIG_MEMBER\n         GETMAIN RU,                                                   +\n               LV=STOW_DATA_L,                                         +\n               LOC=BELOW\n         LR    R5,R1\n         USING STOW_DATA,R5\n         MVC   STOW_NAME,SPF_CONFIG_MEMBER       MEMBER NAME\n         XC    STOW_TT,STOW_TT                   TRACK\n         MVI   STOW_R,0                          RECORD\n         MVI   STOW_C,31                         USER DATA LENGTH\n         MVC   STOW_DESC,SPF_CONFIG_DESC         COPY DESCRIPTION\n         ITRACE ID=STOW,                                               +\n               DATA1=SPF_CONFIG_MEMBER\n         STOW  DISCONF_DCB,                                            +\n               (R5),                                                   +\n               R\n         ITRACE ID=STOW_RC,                                            +\n               RDATA1=R15\n         LR    R2,R15                            SAVE STOW RC\n         FREEMAIN RU,                                                  +\n               A=(R5),                                                 +\n               LV=STOW_DATA_L\n         CH    R2,H8                             RC = 8?\n         BE    MAIN1170                          YES.. ACCEPTABLE\n         LTR   R2,R2                             SUCCESSFUL?\n         BNZ   ERR0070                           NO\nMAIN1170 DS    0H\n         ITRACE ID=CLOSCONF\n         CLOSE DISCONF_DCB,                      CLOSE CONFIG DCB      +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_CLOSE)\n         FREEPOOL DISCONF_DCB\n         BAL   R6,FREE0000                       FREE CONFIG DATA SET\n         LTR   R15,R15                           SUCCESSFUL?\n         BNZ   ERR0050                           NO\n         MVC   SPF_MSG_3(MSG05_L),MSG05\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nALLOC000 DS    0H\n         ITRACE ID=ALOCCONF\n         MVI   DAIR_FUNC,$DAIR_ALLOC\n         MVC   DAIR_DD,PANEL_DISCONF\n         MVC   DAIR_DSN,SPF_CONFIG_DSN\n         MVC   DAIR_MEMBER,COMM_BLANKS           ALLOC PDS, NOT MEMBER\n         MVC   DAIR_UNIT,COMM_BLANKS\n         MVC   DAIR_VOLSER,SPF_CONFIG_VOLSER\n         MVI   DAIR_DISP,$DAIR_DISP_SHR\n         MVI   DAIR_OPTS,$DAIR_USE_DD\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15                           ALLOCATE DISCONF\n         ITRACE ID=DAIR_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                           SUCCESSFUL?\n         BNZ   ERR0050                           NO\n         TM    DS1RECFM,DS1RECFV                 RECFM V OR U?\n         BO    ERR0080\n         CLC   DS1LRECL,H256                     LRECL 256?\n         BNE   ERR0090                           NO\n         BR    R6                                OTHERWIZE OK\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nFREE0000 DS    0H\n         ITRACE ID=FREECONF\n         MVI   DAIR_FUNC,$DAIR_FREE\n         MVC   DAIR_DD,PANEL_DISCONF\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15                           FREE DISCONF\n         ITRACE ID=FREE_RC,                                            +\n               RDATA1=R15\n         BR    R6\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nWRITE000 DS    0H\n         ITRACE ID=WRITE000,                                           +\n               RDATA1=R5,                                              +\n               RDATA2=R4\n         USING CONFIG_RECORD,R5\n         AH    R5,H256                           UPDATE BUFFER ADDR\n         AH    R4,H256                           UPDATE LENGTH\n         CH    R4,=Y($BUFF_SIZE)                 BUFFER FULL?\n         BNE   WRITE020                          NO\nWRITE010 DS    0H\n         L     R5,DXD_IO_AREA                    RESET R5\n         ITRACE ID=WRITE010,                                           +\n               RDATA1=R5,                                              +\n               RDATA2=R4\n         XC    DISCOMM_DECB(DISCOMM_DECB_L),DISCOMM_DECB\n         STH   R4,CONF.DCBBLKSI                  SET BLOCK SIZE\n         WRITE DISCOMM_DECB,                                           +\n               SF,                                                     +\n               DISCONF_DCB,                      .. DCB ADDR           +\n               (R5),                             .. I/O AREA ADDR      +\n               (R4),                             .. LENGTH             +\n               MF=E\n         ITRACE ID=WAIT\n         CHECK DISCOMM_DECB\n         ITRACE ID=RUNNING\n         SR    R4,R4                             RESET LENGTH\n         L     R0,DXD_IO_AREA\n         LH    R1,=Y($BUFF_SIZE)\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                            INITIALIZE I/O AREA\nWRITE020 DS    0H\n         MVC   CONFIG_RECORD(CONFIG_RECORD_L),COMM_BLANKS\n         BR    R6\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nTPUT0000 DS    0H\n         ITRACE ID=TPUT\n         TPUT  COMM_MSG_1,L'COMM_MSG_1\n         MVC   COMM_MSG_1,COMM_BLANKS\n         BR    R6\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nERR0010  DS    0H\n         MVI   COMM_MSG_ID+1,1                   DSN IS BLANK\n         B     ERR0200\nERR0020  DS    0H\n         MVI   COMM_MSG_ID+1,2                   CONFIG DATASET NOT PDS\n         B     ERR0200\nERR0030  DS    0H\n         MVI   COMM_MSG_ID+1,3                   FUNCTION IS BLANK\n         B     ERR0200\nERR0040  DS    0H\n         MVI   COMM_MSG_ID+1,4                   BAD FUNCTION\n         B     ERR0200\nERR0050  DS    0H\n         ITRACE ID=DAIR_ERR                      DAIR ERROR\n         B     ERR0210                           MESSAGES ALREADY BUILT\nERR0060  DS    0H\n         ITRACE ID=FIND_ERR\n         MVI   COMM_MSG_ID+1,6                   FIND FAILED\n         MVC   COMM_INFO_01(L'SPF_CONFIG_MEMBER),SPF_CONFIG_MEMBER\n         STH   R15,COMM_INFO_02\n         B     ERR0200\nERR0070  DS    0H\n         MVI   COMM_MSG_ID+1,7                   STOW FAILED\n         MVC   COMM_INFO_01(L'SPF_CONFIG_MEMBER),SPF_CONFIG_MEMBER\n         STC   R2,COMM_INFO_01                   STOW RC\n         B     ERR0200\nERR0080  DS    0H\n         MVI   COMM_MSG_ID+1,8                   CONFIG RECFM V OR U\n         B     ERR0200\nERR0090  DS    0H\n         MVI   COMM_MSG_ID+1,9                   CONFIG LRECL NOT 256\n         B     ERR0200\nERR0100  DS    0H\n         MVI   COMM_MSG_ID+1,10                  VGET FAILED\n         STH   R15,COMM_INFO_01\n         B     ERR0200\nERR0110  DS    0H\n         MVI   COMM_MSG_ID+1,11                  VPUT TO PROFILE FAILED\n         STH   R15,COMM_INFO_01\n         B     ERR0200\nERR0120  DS    0H\n         MVI   COMM_MSG_ID+1,12                  VPUT TO SHARED FAILED\n         STH   R15,COMM_INFO_01\nERR0200  DS    0H\n         MVI   COMM_MSG_ID,0\n         MVC   COMM_MSG_CSECT,MODID              SET CSECT ID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15                           BUILD MESSAGE\nERR0210  DS    0H\n         ITRACE ID=ERROR,                                              +\n               DATA1=(COMM_MSG_ID,2)\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     MAIN0010\nERR0300  DS    0H\n         ITRACE ID=LM_ERR,                                             +\n               RDATA1=R15\n         LA    R0,DISPLAY\n         ST    R0,DXD_SPF_1\n         LA    R1,PANEL_DIS0000\n         ST    R1,DXD_SPF_2\n         OI    DXD_SPF_2,X'80'\n         LA    R1,DXD_SPF_PARMS\n         L     R14,COMM_ISPLINK\n         BALR  R14,R15                           DISPLAY CONFIG\n         DC    H'0'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R1,DXD_IO_AREA                    I/O AREA ADDR\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=$BUFF_SIZE\n         L     R13,4(,R13)                       RESTORE REGISTER 13    ASE01670\n         L     R14,12(,R13)                      RESTORE REGISTERS      ASE01680\n         LR    R15,R2                            SET RC\n         LM    R0,R12,20(R13)                    RESTORE REGISTERS      ASE01680\n         BR    R14                               RETURN TO CALLER       ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START     DC   Q(DXDCONF)\nV_DISASSEM    DC   V(DISASSEM)\nV_DISCDIR     DC   V(DISCDIR)\nV_DISDSINF    DC   V(DISDSINF)\nV_DISKLIST    DC   V(DISKLIST)\nV_DISSLIST    DC   V(DISSLIST)\n\nHALF_SECOND   DC   F'50'\n\nH4       DC   H'4'\nH8       DC   H'8'\nH256     DC   H'256'\n\nDISPLAY  DC   CL8'DISPLAY'\nVGET     DC   CL8'VGET'\nVPUT     DC   CL8'VPUT'\nNAMELIST DC   C'(PCDSN PCMEM PCVOL)'\nPROFILE  DC   CL8'PROFILE'\nSHARED   DC   CL8'SHARED'\n\nPANEL_DISCONF DC CL8'DISCONF'\nPANEL_DIS0000 DC CL8'DIS0000'\n\nMSG01    DS   0C\n         DC   C'Configuration data restored'\nMSG01_L  EQU  *-MSG01\n\nMSG02    DS   0C\n         DC   C'Verify pre-processed DSECT KSDSes'\nMSG02_L  EQU  *-MSG02\n\nMSG03    DS   0C\n         DC   C'Verify assembler SYSLIBs'\nMSG03_L  EQU  *-MSG03\n\nMSG04    DS   0C\n         DC   C'Re-assembling DSECT(s)'\nMSG04_L  EQU  *-MSG04\n\nMSG05    DS   0C\n         DC   C'Configuration data saved'\nMSG05_L  EQU  *-MSG05\n\nMSG06    DS   0C\n         DC   C'Ending disp of data area at '\nMSG06_B  DC   CL8' '\n         DC   C' to '\nMSG06_E  DC   CL8' '\n         DC   C' limited to CSECT length'\nMSG06_L  EQU  *-MSG06\n\nMSG07    DS   0C\n         DC   C'Data area beyond end of CSECT.  Area from '\nMSG07_B  DC   CL8' '\n         DC   C' to '\nMSG07_E  DC   CL8' '\n         DC   C' ignored'\nMSG07_L  EQU  *-MSG07\n\n         LTORG\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDCONF               DSECT\n                      COPY DXDPREF\n\nDXD_SPF_PARMS         DS   0A\nDXD_SPF_1             DS   A\nDXD_SPF_2             DS   A\nDXD_SPF_3             DS   A\nDXD_SPF_4             DS   A\nDXD_SPF_5             DS   A\nDXD_SPF_6             DS   A\nDXD_SPF_7             DS   A\nDXD_SPF_8             DS   A\nDXD_SPF_9             DS   A\nDXD_SPF_10            DS   A\n\nDXD_IO_AREA           DS   A\n\nDXD_FIRST_DATAAREA    DS   A\nDXD_LAST_DATAAREA     DS   A\n\nDXD_FIRST_BASE        DS   A\nDXD_LAST_BASE         DS   A\n\nDXD_FIRST_USING       DS   A\nDXD_LAST_USING        DS   A\n\nDXD_FIRST_KSDS        DS   A\nDXD_LAST_KSDS         DS   A\n\nDXD_FIRST_SYSLIB      DS   A\nDXD_LAST_SYSLIB       DS   A\n\nDXD_FIRST_ASM         DS   A\nDXD_LAST_ASM          DS   A\n\nDXD_FLAGS             DS   X\n$DXD_SEARCH           EQU  X'80'\n\n                      DSINFREQ   DSECT=NO\n                      DAIRREQ    DSECT=NO\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDIR_DATA      DSECT\nSTOW_DATA     DS      0C\nSTOW_NAME     DS      CL8               MEMBER NAME\nSTOW_TT       DS      XL2               TRACK NBR\nSTOW_R        DS      X                 RECORD NUMBER\nSTOW_C        DS      X                 FLAGS, NBR OF USER DATA BYTES\nSTOW_DESC     DS      CL62              USER DATA\nSTOW_DATA_L   EQU     *-STOW_DATA\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY     TRENTRY\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n              DCBD     DSORG=PO\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n              IHADCBE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n              IEZIOB   DSECT=YES\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n              IHADECB  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFORMAT_1      DSECT\n              IECSDSL1 1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY     REGEQU\n$BUFF_SIZE    EQU      CONFIG_RECORD_L*16\n              END      DISCONF\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISDCONV": {"ttr": 2051, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00R\\x01\\t3\\x7f\\x01\\t6_\\x08\\x15\\x00\\x8f\\x00\\x8d\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2009-12-03T00:00:00", "modifydate": "2009-12-31T08:15:52", "lines": 143, "newlines": 141, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: DISDCONV                                             *\n*                                                                    *\n*  Function:                                                         *\n*                                                                    *\n*   Convert displacements from character to binary                   *\n*                                                                    *\n*   There are two parms:                                             *\n*     .   Address of source data (8 characters)                      *\n*     .   Address of output (fullword)                               *\n*                                                                    *\n*--------------------------------------------------------------------*\nDISDCONV CSECT\nDISDCONV AMODE 31\nDISDCONV RMODE ANY\n         USING DISDCONV,R15\n         B     MOD0000                           SKIP EYECATCHER\nMODID    DC    CL8'DISDCONV'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                   SAVE REGS\n         LR    R10,R15                           SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISDCONV,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR                 WORK AREA\n         A     R15,DXD_START                     PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         USING DXDDCONV,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R1\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         LM    R7,R8,0(R1)                       ADDR OF PARMS\n         LR    R6,R7                             SAVE SOURCE ADDR\n         MVC   DXD_IN,C_ZEROS                    INITIALIZE\n         LA    R1,L'DXD_IN                       LOOP LIMITER\nCONV0000 DS    0H                                LAST DIGIT\n         CLI   0(R7),C' '                        BLANK?\n         BE    CONV0020                          YES\n         CLI   0(R7),C'A'                        VALID DIGIT?\n         BL    ERR0010                           NO\n         CLI   0(R7),C'F'                        VALID DIGIT?\n         BNH   CONV0010                          YES\n         CLI   0(R7),C'0'                        VALID DIGIT?\n         BL    ERR0010                           NO\n         CLI   0(R7),C'9'                        VALID DIGIT?\n         BH    ERR0010                           NO\nCONV0010 DS    0H\n         MVC   DXD_IN(L'DXD_IN-1),DXD_IN+1       SHIFT LEFT 1 DIGIT\n         MVC   DXD_IN+(L'DXD_IN-1)(1),0(R7)      COPY DIGIT\n         LA    R7,1(,R7)                         NEXT DIGIT\n         BCT   R1,CONV0000                       LOOP\nCONV0020 DS    0H\n         LTR   R8,R8                             JUST VERIFYING?\n         BZ    CONV0030                          YES\n         TR    DXD_IN,CHARHEX                    PREPARE FOR CONVERSION\n         PACK  DXD_OUT(5),DXD_IN(9)              PACK\n         MVC   0(4,R8),DXD_OUT                   COPY TO OUTPUT\nCONV0030 DS    0H\n         SR    R15,R15                           SET RC\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nERR0010  DS    0H\n         ITRACE ID=BAD,                                                +\n               RDATA1=R7\n         MVI   COMM_MSG_ID+1,1\n         MVC   COMM_INFO_01(1),0(R7)             COPY OFFENDING DIGIT\n         MVI   COMM_MSG_ID,0\n         MVC   COMM_MSG_CSECT,MODID              COPY MODULE NAME\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15                           BUILD MESSAGE\n         LA    R15,4                             SET RC\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         ITRACE ID=EXIT,                                               +\n               DATA1=DXD_OUT\n         L     R13,4(,R13)                       RESTORE REGISTER 13    ASE01670\n         L     R14,12(,R13)                      RESTORE R14            ASE01680\n         LM    R0,R12,20(R13)                    RESTORE REGISTERS      ASE01680\n         BR    R14                               RETURN TO CALLER       ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START     DC   Q(DXDDCONV)\n\nC_ZEROS       DC   C'00000000'\n\nCHARHEX       DC   256X'00'\n              ORG  CHARHEX+C'A'\n              DC   X'0A0B0C0D0E0F'\n              ORG  CHARHEX+C'0'\n              DC   X'00010203040506070809'\n              ORG\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDDCONV      DSECT\n              COPY DXDPREF\n\nDXD_IN        DS   CL8\nDXD_OUT       DS   CL5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY     REGEQU\n              END     DISDCONV\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISDEBUG": {"ttr": 3589, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00\\x00\\x01\\t4\\x9f\\x01\\x10\\x00\\x8f\\x10&\\x01X\\x03\\x83\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "2009-12-15T00:00:00", "modifydate": "2010-01-08T10:26:00", "lines": 344, "newlines": 899, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: DISDEBUG                                              *\n*                                                                     *\n*  FUNCTION:                                                          *\n*    Display an AREA chain                                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISDEBUG CSECT\nDISDEBUG AMODE 31\nDISDEBUG RMODE ANY\n         USING DISDEBUG,R15\n         B     MOD0000                           SKIP EYECATCHER\nMODID    DC    CL8'DISDEBUG'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                   SAVE REGS\n         LR    R10,R15                           SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISDEBUG,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR                 WORK AREA\n         A     R15,DXD_START                     PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         USING DXDXLIST,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R1\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n         LR    R5,R1\n         USING AREA_DSECT,R5\n         ST    R5,DXD_FIRST_AREA\n         ST    R5,DXD_FIRST_DISPLAYED\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         ITRACE ID=BUILD\n         L     R0,DISCOMM_VDATA_ADDR\n         L     R1,DISCOMM_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                            INITIALIZE VDATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R6,DISCOMM_VDATA_ADDR             VDATA ADDRESS\n         L     R7,SPF_VDEPTH                     NBR OF LINES\n         ICM   R5,15,DXD_FIRST_DISPLAYED         1ST AREA DISPLAYED\n         BZ    MAIN0300\n         CLI   AREA_TYPE-AREA_DSECT(R5),X'FF'    DUMMY ENTRY?\n         BE    MAIN0300                          YES\nMAIN0020 DS    0H\n         ITRACE ID=AREA,                                               +\n               DATA1=AREA_BEGIN,                                       +\n               DATA2=(AREA_TYPE,1)\n         MVC   0(MSG01_L,R6),MSG01               INITIALIZE\n         USING MSG01,R6\n         ST    R5,DXD_LAST_DISPLAYED             SAVE LAST DISPLAYED\n         UNPK  DXD_WORK(9),DXD_LAST_DISPLAYED(5) UNPACK ADDR\n         MVC   MSG01_ADDR,DXD_WORK               COPY UNPACKED ADDR\n         TR    MSG01_ADDR,HEXCHAR                TRANSLATE ADDR\n         UNPK  DXD_WORK(9),AREA_PREV(5)          UNPACK ADDR\n         MVC   MSG01_PREV,DXD_WORK               COPY UNPACKED ADDR\n         TR    MSG01_PREV,HEXCHAR                TRANSLATE ADDR\n         UNPK  DXD_WORK(9),AREA_NEXT(5)          UNPACK ADDR\n         MVC   MSG01_NEXT,DXD_WORK               COPY UNPACKED ADDR\n         TR    MSG01_NEXT,HEXCHAR                TRANSLATE ADDR\n         UNPK  DXD_WORK(9),AREA_BEGIN(5)         UNPACK BEGIN DISP\n         MVC   MSG01_BEGIN,DXD_WORK              COPY UNPACKED DISP\n         TR    MSG01_BEGIN,HEXCHAR               TRANSLATE DISP\n         UNPK  DXD_WORK(9),AREA_END(5)           UNPACK END DISP\n         MVC   MSG01_END,DXD_WORK                COPY UNPACKED ADDR\n         TR    MSG01_END,HEXCHAR                 TRANSLATE DISP\n         UNPK  DXD_WORK(9),AREA_LENGTH(5)        UNPACK END DISP\n         MVC   MSG01_LENGTH,DXD_WORK             COPY UNPACKED ADDR\n         TR    MSG01_LENGTH,HEXCHAR              TRANSLATE DISP\n         CLI   AREA_TYPE,$AREA_DATA              DATA AREA?\n         BE    MAIN0030                          YES\n         CLI   AREA_TYPE,$AREA_INSTRUCTION       INSTRUCTION?\n         BE    MAIN0090                          YES\n         ITRACE ID=BAD_TYPE\n         DC    H'0'\nMAIN0030 DS    0H\n         MVI   MSG01_ATTR,$SCREEN_ATTR_HIGH_TURQUOISE\n         CLI   AREA_DATA_TYPE,$DATA_ACON         ADCON?\n         BE    MAIN0040                          YES\n         CLI   AREA_DATA_TYPE,$DATA_VCON         VCON?\n         BE    MAIN0050                          YES\n         CLI   AREA_DATA_TYPE,$DATA_CXD          CXD?\n         BE    MAIN0060                          YES\n         CLI   AREA_DATA_TYPE,$DATA_Q            Q?\n         BE    MAIN0070                          YES\n         CLI   AREA_DATA_TYPE,$DATA_USER         USER?\n         BE    MAIN0080                          YES\n         MVI   MSG01_ATTR,$SCREEN_ATTR_HIGH_RED\n         MVC   MSG01_TYPE,T_DATA                 DATA\n         B     MAIN0100\nMAIN0040 DS    0H\n         MVC   MSG01_TYPE,T_ADCON                ADCON\n         B     MAIN0100\nMAIN0050 DS    0H\n         MVC   MSG01_TYPE,T_VCON                 VCON\n         B     MAIN0100\nMAIN0060 DS    0H\n         MVC   MSG01_TYPE,T_CXD                  CXD\n         B     MAIN0100\nMAIN0070 DS    0H\n         MVC   MSG01_TYPE,T_Q                    Q\n         B     MAIN0100\nMAIN0080 DS    0H\n         MVC   MSG01_TYPE,T_USER                 USER\n         B     MAIN0100\nMAIN0090 DS    0H\n         MVC   MSG01_TYPE,T_INSTR\n         ICM   R1,15,AREA_OPCODE                 OPCODE ADDR\n         BZ    MAIN0100                          NOT DETERMINED\n         USING OPCODE_DSECT,R1\n         MVI   MSG01_ATTR,$SCREEN_ATTR_HIGH_YELLOW\n         MVC   MSG01_TYPE,OPCODE_MNEMONIC        COPY MNEMONIC\n         B     MAIN0100\nMAIN0100 DS    0H\n         MVC   MSG01_RLD_NAME,AREA_RLD_NAME\n         DROP  R6\n         A     R6,SPF_VWIDTH                     NEXT LINE\n         BCT   R7,MAIN0110\n         B     MAIN0120                          SCREEN IS FULL\nMAIN0110 DS    0H\n         ICM   R5,15,AREA_NEXT                   NEXT AREA\n         BNZ   MAIN0020\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0120 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_NAME        SET PANEL NAME\n         MVC   SESS_DISP_VDATA_ADDR,DISCOMM_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DISCOMM_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         OI    COMM_FLAGS,$COMM_NO_FORMAT+$COMM_NO_SESSION\n         L     R15,COMM_V_OSDISP                 DISP ENTRY POINT\n         BALR  R14,R15                           DISPLAY\n         NI    COMM_FLAGS,255-$COMM_NO_FORMAT-$COMM_NO_SESSION\n         ITRACE ID=DISP_RC,                                            +\n               RDATA1=R15,                                             +\n               DATA2=SPF_ZVERB\n         LTR   R15,R15                           RC = 0?\n         BNZ   EXIT0000                          NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=SCROLL,                                             +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=SPF_ZSCROLLA\n         CLI   SPF_ZVERB,C'B'                    BOTTOM?\n         BE    MAIN0200\n         CLI   SPF_ZVERB,C'D'                    DOWN?\n         BE    MAIN0220\n         CLI   SPF_ZVERB,C'T'                    TOP?\n         BE    MAIN0250\n         CLI   SPF_ZVERB,C'U'                    UP?\n         BE    MAIN0260\n         B     MAIN0120\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0200 DS    0H\n         ITRACE ID=BOTTOM\n         ICM   R5,15,DXD_FIRST_AREA              FIRST ON CHAIN\nMAIN0210 DS    0H\n         LR    R1,R5\n         ICM   R5,15,AREA_NEXT                   NEXT AREA\n         BNZ   MAIN0210\n         ST    R1,DXD_FIRST_DISPLAYED\n         B     MAIN0010                          BUILD DISPLAY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0220 DS    0H\n         ITRACE ID=DOWN\n         CLI   SPF_ZSCROLLA,C'M'                 MAX?\n         BE    MAIN0200                          YES\n         L     R2,SPF_ZSCROLLN                   NBR OF LINES TO SCROLL\n         L     R5,DXD_FIRST_DISPLAYED            1ST ON DISPLAY\nMAIN0230 DS    0H\n         LR    R1,R5\n         ICM   R5,15,AREA_NEXT                   NEXT ON CHAIN\n         BZ    MAIN0240                          AT END OF CHAIN\n         BCT   R2,MAIN0230\nMAIN0240 DS    0H\n         ST    R1,DXD_FIRST_DISPLAYED\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0250 DS    0H\n         ITRACE ID=TOP\n         MVC   DXD_FIRST_DISPLAYED,DXD_FIRST_AREA\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0260 DS    0H\n         ITRACE ID=UP\n         CLI   SPF_ZSCROLLA,C'M'                 MAX?\n         BE    MAIN0250                          YES\n         ICM   R5,15,DXD_FIRST_DISPLAYED         FIRST ON DISPLAY\n         BZ    EXIT0000                          SHOULD NOT HAPPEN!\n         L     R2,SPF_ZSCROLLN                   LINES ON DISPLAY\nMAIN0270 DS    0H\n         LR    R1,R5\n         ICM   R5,15,AREA_PREV                   PREVIOUS AREA\n         BZ    MAIN0280\n         BCT   R2,MAIN0270                       LOOP\nMAIN0280 DS    0H\n         ST    R1,DXD_FIRST_DISPLAYED            COPY ADDR\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0300 DS    0H\n         ITRACE ID=NOTHING\n         MVC   SPF_MSG_5(MSG02_L),MSG02\n         MVC   SESS_DISP_PANEL,DIS0000\n         XC    SESS_DISP_VDATA_ADDR,SESS_DISP_VDATA_ADDR\n         XC    SESS_DISP_VDATA_LENGTH,SESS_DISP_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         MVC   SPF_MSG_1,COMM_BLANKS\n         MVC   SPF_MSG_2,COMM_BLANKS\n         MVC   SPF_MSG_3,COMM_BLANKS\n         MVC   SPF_MSG_4,COMM_BLANKS\n         MVC   SPF_MSG_5,COMM_BLANKS\n         L     R13,4(,R13)                       RESTORE REGISTER 13    ASE01670\n         L     R14,12(,R13)                      RESTORE REGISTERS      ASE01680\n         LR    R15,R2                            SET RC\n         LM    R0,R12,20(R13)                    RESTORE REGISTERS      ASE01680\n         BR    R14                               RETURN TO CALLER       ASE01700\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START     DC   Q(DXDXLIST)\n\nDIS0000       DC   CL8'DIS0000'\nPANEL_NAME    DC   CL8'DISXLIST'\n\nT_INSTR       DC   CL5'INSTR'\nT_ADCON       DC   CL5'ADCON'\nT_VCON        DC   CL5'VCON'\nT_CXD         DC   CL5'CXD'\nT_Q           DC   CL5'Q'\nT_USER        DC   CL5'DATA'\nT_DATA        DC   CL5'DATA'\n\n              LTORG\n\nHEXCHAR       EQU  *-C'0'\n              DC   C'0123456789ABCDEF'\n\nMSG01         DS   0C\n              DC   AL1($SCREEN_ATTR_HIGH_TURQUOISE)\nMSG01_ADDR    DC   CL8' '\n              DC   AL1($SCREEN_ATTR_NORMAL)\nMSG01_PREV    DC   CL8' '\n              DC   CL1' '\nMSG01_NEXT    DC   CL8' '\n              DC   CL1' '\nMSG01_BEGIN   DC   CL8' '\n              DC   CL1' '\nMSG01_END     DC   CL8' '\n              DC   CL1' '\nMSG01_LENGTH  DC   CL8' '\nMSG01_ATTR    DC   AL1(0)\nMSG01_TYPE    DC   CL5' '\n              DC   AL1($SCREEN_ATTR_HIGH_GREEN)\nMSG01_RLD_NAME DC  CL8' '\nMSG01_L       EQU  *-MSG01\n\nMSG02         DS   0C\n              DC   C'Nothing on chain'\nMSG02_L       EQU  *-MSG02\n\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDXLIST              DSECT\n                      COPY DXDPREF\n\nDXD_FIRST_AREA        DS  A             FIRST DATA ITEM ON CHAIN\n\nDXD_FIRST_DISPLAYED   DS  A             FIRST DATA ITEM DISPLAYED\nDXD_LAST_DISPLAYED    DS  A             LAST DATA ITEM DISPLAYED\n\nDXD_WORK              DS  CL9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n              END     DISDEBUG\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISDLIST": {"ttr": 2055, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x07\\x01\\t3\\x8f\\x01\\t6_\\x08\\x17\\x02}\\x02~\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2009-12-04T00:00:00", "modifydate": "2009-12-31T08:17:07", "lines": 637, "newlines": 638, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: DISDLIST                                              *\n*                                                                     *\n*  FUNCTION:                                                          *\n*    Display/allow definition of data area(s)                         *\n*                                                                     *\n*                                                                     *\n*  The disassembler tries to 'recognize' data on its own.  Still,     *\n*  there are data areas of most programs that may be mis-intrpreted   *\n*  as instructions.  To prevent this, the user can \"tell\" us where    *\n*  data areas begin and end (by using the start and end               *\n*  displacements).                                                    *\n*                                                                     *\n*                                                                     *\n*  User defined areas are chained from COMM_USER_AREA_NEXT_1.         *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISDLIST CSECT\nDISDLIST AMODE 31\nDISDLIST RMODE ANY\n         USING DISDLIST,R15\n         B     MOD0000                           SKIP EYECATCHER\nMODID    DC    CL8'DISDLIST'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                   SAVE REGS\n         LR    R10,R15                           SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISDLIST,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR                 WORK AREA\n         A     R15,DXD_START                     PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         USING DXDDLIST,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n         USING AREA_DSECT,R5\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        In order to allow the user to \"cancel\" changes,              *\n*        first \"copy\" the existing USER area chain.                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         XC    DXD_AREA_NEXT,DXD_AREA_NEXT\n         XC    DXD_FIRST_DISPLAYED,DXD_FIRST_DISPLAYED\n         LA    R2,DXD_AREA_PREV\nPREV     USING AREA_DSECT,R2\n         ICM   R5,15,DISCOMM_USER_AREA_NEXT_1    FIRST USER AREA\n         BZ    INIT0020\nINIT0010 DS    0H\n         GETMAIN RU,                                                   +\n               LV=AREA_DSECT_L,                                        +\n               LOC=ANY\n         ITRACE ID=COPY_1,                                             +\n               RDATA1=R1\nNEW      USING AREA_DSECT,R1\n         MVC   NEW.AREA_DSECT(AREA_DSECT_L),AREA_DSECT\n         ST    R1,PREV.AREA_NEXT\n         ST    R2,NEW.AREA_PREV\n         LR    R2,R1\n         ICM   R5,15,AREA_NEXT\n         BNZ   INIT0010\n         MVC   DXD_FIRST_DISPLAYED,DXD_AREA_NEXT\n         DROP  NEW,PREV\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0020 DS    0H\n         L     R0,SPF_VDEPTH                     NBR OF LINES\n         SLL   R0,2                              MULTIPLY BY 4\n         ST    R0,DXD_AREA_TABLE_SIZE\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ST    R1,DXD_AREA_TABLE                 SAVE ADDRESS\n         ITRACE ID=A_TABLE,                                            +\n               RDATA1=R1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         ITRACE ID=BUILD\n         L     R0,DISCOMM_VDATA_ADDR\n         L     R1,DISCOMM_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                            INITIALIZE VDATA\n         L     R0,DXD_AREA_TABLE\n         L     R1,DXD_AREA_TABLE_SIZE\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                            INIT AREA TABLE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R6,SPF_VWIDTH                     SCREEN WIDTH\n         SH    R6,=Y(MSG01_L)                    MINUS WIDTH IN USE\n         SRL   R6,1                              DIVIDE BY 2\n         A     R6,DISCOMM_VDATA_ADDR             PLUS VDATA ADDR\n         L     R7,SPF_VDEPTH                     NBR OF LINES\nMAIN0020 DS    0H\n         MVC   0(MSG01_L,R6),MSG01               INITIALIZE\n         A     R6,SPF_VWIDTH                     NEXT LINE\n         BCT   R7,MAIN0020                       LOOP\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R6,SPF_VWIDTH                     SCREEN WIDTH\n         SH    R6,=Y(MSG01_L)                    MINUS WIDTH IN USE\n         SRL   R6,1                              DIVIDE BY 2\n         A     R6,DISCOMM_VDATA_ADDR             PLUS VDATA ADDR\n         USING MSG01,R6\n         L     R7,SPF_VDEPTH\nMAIN0030 DS    0H\n         L     R3,DXD_AREA_TABLE                 FIRST 'SLOT'\n         XC    DXD_NBR_DISPLAYED,DXD_NBR_DISPLAYED\n         ICM   R5,15,DXD_FIRST_DISPLAYED         FIRST TO DISPLAY\n         BZ    MAIN0060                          NOTHING DEFINED YET\nMAIN0040 DS    0H\n         ITRACE ID=AREA,                                               +\n               RDATA1=R5,                                              +\n               RDATA2=R6\n         ST    R5,DXD_LAST_DISPLAYED             SAVE ADDR\n         ST    R5,0(R3)                          SAVE ADDR\n         UNPK  DXD_WORK(9),AREA_BEGIN(5)         UNPACK BEGIN DISP\n         TR    DXD_WORK(8),COMM_HEXCHAR          TRANSLATE\n         MVC   MSG01_BEGIN,DXD_WORK              COPY BEGIN\n         UNPK  DXD_WORK(9),AREA_END(5)           UNPACK BEGIN DISP\n         TR    DXD_WORK(8),COMM_HEXCHAR          TRANSLATE\n         MVC   MSG01_END,DXD_WORK                COPY BEGIN\n         UNPK  DXD_WORK(9),AREA_LENGTH(5)        UNPACK LENGTH\n         TR    DXD_WORK(8),COMM_HEXCHAR          TRANSLATE\n         MVC   MSG01_LENGTH,DXD_WORK             COPY LENGTH\n         LA    R1,1                              CONSTANT 1\n         AH    R1,DXD_NBR_DISPLAYED              PLUS TOTAL SO FAR\n         STH   R1,DXD_NBR_DISPLAYED              SAVE TOTAL\n         LA    R3,4(,R3)                         NEXT IN ADDR TABLE\n         A     R6,SPF_VWIDTH                     NEXT LINE\n         BCT   R7,MAIN0050\n         B     MAIN0060\nMAIN0050 DS    0H\n         ICM   R5,15,AREA_NEXT\n         BNZ   MAIN0040\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0060 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_DISDLIST    SET PANEL NAME\n         MVC   SESS_DISP_VDATA_ADDR,DISCOMM_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DISCOMM_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP                 DISP ENTRY POINT\n         BALR  R14,R15                           DISPLAY\n         ITRACE ID=DISP_RC,                                            +\n               RDATA1=R15,                                             +\n               DATA2=SPF_ZVERB\n         LTR   R2,R15                            RC = 0?\n         BNZ   MAIN0500                          NO\n         CLC   ABEND,SPF_ZCMD                    ABEND?\n         BE    ABEND000                          YES\n         CLC   CANCEL,SPF_ZCMD                   CANCEL?\n         BE    MAIN0550                          YES\n         CLC   CAN,SPF_ZCMD                      CAN(CEL)?\n         BE    MAIN0550                          YES\n* ------------------------------------------------------------------- *\n*        Check new areas or changes to existing area(s)               *\n* ------------------------------------------------------------------- *\n         NI    DXD_FLAGS,255-$DXD_UPDATE         RESET FLAG\n         NI    DXD_FLAGS,255-$DXD_ERROR          RESET FLAG\n         L     R6,SPF_VWIDTH                     SCREEN WIDTH\n         SH    R6,=Y(MSG01_L)                    MINUS WIDTH IN USE\n         SRL   R6,1                              DIVIDE BY 2\n         A     R6,DISCOMM_VDATA_ADDR             PLUS VDATA ADDR\n         L     R7,SPF_VDEPTH                     NBR OF LINES\nMAIN0070 DS    0H\n         MVC   MSG01_MSG,COMM_BLANKS\n         OC    MSG01_BEGIN,COMM_BLANKS\n         CLC   MSG01_BEGIN,COMM_BLANKS           BEGIN BLANK?\n         BE    MAIN0090                          YES\n         ITRACE ID=CNV_BEGN,                                           +\n               DATA1=MSG01_BEGIN\n         LA    R1,MSG01_BEGIN                    SOURCE DISP\n         ST    R1,DXD_CONV_SOURCE\n         LA    R1,DXD_BEGIN                      OUTPUT OF CONVERSION\n         ST    R1,DXD_CONV_OUT\n         LA    R1,DXD_CONV_PARMS                 CONVERSION PARMS\n         L     R15,V_DISDCONV                    CONVERTER ENTRY POINT\n         BALR  R14,R15                           CHECK/CONV BEGIN\n         LTR   R15,R15                           VALID?\n         BNZ   MAIN0110                          NO\n         OC    MSG01_END,COMM_BLANKS\n         CLC   MSG01_END,COMM_BLANKS             END BLANK?\n         BE    MAIN0120                          YES\n         ITRACE ID=CNV_END,                                            +\n               DATA1=MSG01_END\n         LA    R1,MSG01_END                      SOURCE DISP\n         ST    R1,DXD_CONV_SOURCE\n         LA    R1,DXD_END                        OUTPUT OF CONVERSION\n         ST    R1,DXD_CONV_OUT\n         LA    R1,DXD_CONV_PARMS                 CONVERSION PARMS\n         L     R15,V_DISDCONV                    CONVERTER ENTRY POINT\n         BALR  R14,R15                           CHECK/CONV BEGIN\n         LTR   R15,R15                           VALID?\n         BNZ   MAIN0110                          NO\n         CLC   DXD_BEGIN,DXD_END                 BEGIN > END?\n         BNH   MAIN0120                          NO\n         MVI   COMM_MSG_ID+1,1                   SET MESSAGE ID\n         B     MAIN0100\nMAIN0090 DS    0H\n         CLC   MSG01_END,COMM_BLANKS             END BLANK?\n         BE    MAIN0120                          YES\n         MVI   COMM_MSG_ID+1,3                   SET MESSAGE ID\nMAIN0100 DS    0H\n         ITRACE ID=ERROR\n         BAL   R4,MSG0000                        BUILD MESSAGE\nMAIN0110 DS    0H\n         MVC   MSG01_MSG,COMM_MSG_1              COPY MESSAGE\n         OI    DXD_FLAGS,$DXD_ERROR              ERROR HAS OCCURRED\nMAIN0120 DS    0H\n         A     R6,SPF_VWIDTH                     NEXT LINE\n         BCT   R7,MAIN0070                       LOOP\n         TM    DXD_FLAGS,$DXD_ERROR              ERROR(S)?\n         BO    MAIN0060                          YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        No errors have been found                                    *\n*                                                                     *\n*        Determine if any area(s) were                                *\n*          updated                                                    *\n*          removed                                                    *\n*          added                                                      *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=NO_ERROR\n         L     R6,SPF_VWIDTH                     SCREEN WIDTH\n         SH    R6,=Y(MSG01_L)                    MINUS WIDTH IN USE\n         SRL   R6,1                              DIVIDE BY 2\n         A     R6,DISCOMM_VDATA_ADDR             PLUS VDATA ADDR\n         L     R7,SPF_VDEPTH                     NBR OF LINES\n         L     R3,DXD_AREA_TABLE                 FIRST AREA\nMAIN0130 DS    0H\n         L     R5,0(,R3)                         AREA BLOCK IF USED\n         ITRACE ID=MAIN0130,                                           +\n               RDATA1=R6,                                              +\n               RDATA2=R5\n         CLC   MSG01_BEGIN,COMM_BLANKS           BEGIN DISP BLANK?\n         BE    MAIN0200                          YES\n         LA    R1,MSG01_BEGIN                    SOURCE DISP\n         ST    R1,DXD_CONV_SOURCE\n         LA    R1,DXD_BEGIN                      OUTPUT OF CONVERSION\n         ST    R1,DXD_CONV_OUT\n         LA    R1,DXD_CONV_PARMS                 CONVERSION PARMS\n         L     R15,V_DISDCONV                    CONVERTER ENTRY POINT\n         BALR  R14,R15                           CHECK/CONV BEGIN\n         CLC   MSG01_END,COMM_BLANKS             END DISP BLANK?\n         BE    MAIN0140                          YES\n         LA    R1,MSG01_END                      SOURCE DISP\n         ST    R1,DXD_CONV_SOURCE\n         LA    R1,DXD_END                        OUTPUT OF CONVERSION\n         ST    R1,DXD_CONV_OUT\n         LA    R1,DXD_CONV_PARMS                 CONVERSION PARMS\n         L     R15,V_DISDCONV                    CONVERTER ENTRY POINT\n         BALR  R14,R15                           CHECK/CONV BEGIN\n         B     MAIN0150\nMAIN0140 DS    0H\n         MVC   DXD_END,DISCOMM_CSECT_LENGTH      USE CSECT LENGTH\n         MVI   COMM_MSG_ID+1,4                   SET MESSAGE ID\n         BAL   R4,MSG0000                        BUILD MESSAGE\n         MVC   MSG01_MSG,COMM_MSG_1              COPY MESSAGE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Verify begin and/or end are less than CSECT length           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0150 DS    0H\n         CLC   DXD_BEGIN,DISCOMM_CSECT_LENGTH    BEGIN > CSECT LENGTH?\n         BH    MAIN0270                          YES\n         CLC   DXD_END,DISCOMM_CSECT_LENGTH      END > CSECT LENGTH?\n         BNH   MAIN0155                          NO\n         MVI   COMM_MSG_ID+1,5                   SET MESSAGE ID\n         BAL   R4,MSG0000                        BUILD MESSAGE\n         MVC   MSG01_MSG,COMM_MSG_1              COPY MESSAGE\n         MVC   DXD_END,DISCOMM_CSECT_LENGTH      LIMIT TO CSECT LENGTH\nMAIN0155 DS    0H\n         L     R1,DXD_END                        END DISP\n         S     R1,DXD_BEGIN                      MINUS BEGIN\n         LA    R1,1(,R1)                         TRUE LENGTH\n         STCM  R1,15,DXD_LENGTH                  SET LENGTH\n         LTR   R5,R5                             AREA EXIST?\n         BZ    MAIN0170                          NO\n         CLC   AREA_BEGIN,DXD_BEGIN              SAME BEGIN DISP?\n         BNE   MAIN0160                          NO\n         CLC   AREA_END,DXD_END                  SAME END DISP?\n         BE    MAIN0250                          YES\nMAIN0160 DS    0H\n         ITRACE ID=UPDTAREA\n         OI    DXD_FLAGS,$DXD_UPDATE             AREA HAS BEEN UPDATED\n         MVC   AREA_BEGIN,DXD_BEGIN              CHANGE BEGIN DISP\n         MVC   AREA_END,DXD_END                  CHANGE END DISP\n         MVC   AREA_LENGTH,DXD_LENGTH            CHANGE LENGTH\n         B     MAIN0250\nMAIN0170 DS    0H\n         OI    DXD_FLAGS,$DXD_UPDATE\n         GETMAIN RU,                                                   +\n               LV=AREA_DSECT_L,                                        +\n               LOC=ANY\n         ITRACE ID=NEW_AREA,                                           +\n               RDATA1=R1\nNEW      USING AREA_DSECT,R1\n         XC    NEW.AREA_DSECT(AREA_DSECT_L),NEW.AREA_DSECT\n         MVC   NEW.AREA_EYE,AREA_ID              IDENTIFY BLOCK\n         MVC   NEW.AREA_BEGIN,DXD_BEGIN          SET BEGIN DISP\n         MVC   NEW.AREA_END,DXD_END              SET END DISP\n         MVC   NEW.AREA_LENGTH,DXD_LENGTH        SET LENGTH\n         MVI   NEW.AREA_TYPE,$AREA_DATA          SET AREA TYPE\n         MVI   NEW.AREA_DATA_TYPE,$DATA_USER     USER DEFINED AREA\n         LA    R5,DXD_AREA_PREV                  FIRST AREA\nMAIN0180 DS    0H\n         ICM   R2,15,AREA_NEXT                   ANOTHER ON CHAIN?\n         BZ    MAIN0190                          YES\n         LR    R5,R2                             COPY ADDRESS\n         B     MAIN0180\nMAIN0190 DS    0H\n         ST    R1,AREA_NEXT                      SET 'NEXT' IN PREVIOUS\n         ST    R5,NEW.AREA_PREV                  SET PREV IN NEW\n         OC    DXD_FIRST_DISPLAYED,DXD_FIRST_DISPLAYED\n         BNZ   MAIN0250                          BLOCK PRESENT\n         ST    R1,DXD_FIRST_DISPLAYED            SET FIRST ON CHAIN\n         B     MAIN0250\n         DROP  NEW\nMAIN0200 DS    0H\n         LTR   R5,R5                             AREA EXIST?\n         BZ    MAIN0250                          NO\n         OI    DXD_FLAGS,$DXD_UPDATE             AN AREA WAS UPDATED\n         ITRACE ID=DEL_AREA,                     DELETING AN AREA      +\n               RDATA1=R5,                                              +\n               DATA2=AREA_BEGIN\n         ICM   R1,15,AREA_NEXT                   NEXT AREA ON CHAIN\n         BZ    MAIN0210\nNEXT     USING AREA_DSECT,R1\n         MVC   NEXT.AREA_PREV,AREA_PREV          SET PREV IN NEXT\n         DROP  NEXT\nMAIN0210 DS    0H\n         ICM   R1,15,AREA_PREV                   PREVIOUS ON CHAIN\n         BZ    MAIN0220                          NO PREVIOUS BLOCK\nPREV     USING AREA_DSECT,R1\n         MVC   PREV.AREA_NEXT,AREA_NEXT          SET NEXT IN PREVIOUS\nMAIN0220 DS    0H\n         C     R5,DXD_FIRST_DISPLAYED            FIRST AREA DISPLAYED?\n         BNE   MAIN0230                          NO\n         MVC   DXD_FIRST_DISPLAYED,AREA_NEXT     CHANGE TO NEXT BLOCK\nMAIN0230 DS    0H\n         C     R5,DXD_AREA_NEXT                  FIRST AREA ON CHAIN?\n         BNE   MAIN0240                          NO\n         MVC   DXD_AREA_NEXT,AREA_NEXT           NEXT IS NOW FIRST\nMAIN0240 DS    0H\n         ITRACE ID=FREE_1,                                             +\n               RDATA1=R5\n         FREEMAIN RU,                            FREEMAIN THE AREA     +\n               A=(R5),                                                 +\n               LV=AREA_DSECT_L\n         XC    0(4,R3),0(R3)                     CLEAR ADDR IN TABLE\nMAIN0250 DS    0H\n         ITRACE ID=NEXT\n         A     R6,SPF_VWIDTH                     NEXT LINE\n         LA    R3,4(,R3)                         NEXT IN TABLE\n         BCT   R7,MAIN0130                       LOOP\n         ICM   R5,15,DXD_AREA_NEXT               FIRST AREA\n         BZ    MAIN0260                          NONE ON CHAIN\n         XC    AREA_PREV,AREA_PREV               NO PREV BLOCK\nMAIN0260 DS    0H\n         TM    DXD_FLAGS,$DXD_UPDATE             ANY UPDATES?\n         BO    MAIN0010                          YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0270 DS    0H\n         MVI   COMM_MSG_ID+1,6                   SET MESSAGE ID\n         BAL   R4,MSG0000                        BUILD MESSAGE\n         MVC   MSG01_MSG,COMM_MSG_1              COPY MESSAGE\n         B     MAIN0060\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=SCROLL,                                             +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=SPF_ZSCROLLA\n         CLI   SPF_ZVERB,C'B'                    BOTTOM?\n         BE    MAIN0400\n         CLI   SPF_ZVERB,C'D'                    DOWN?\n         BE    MAIN0420\n         CLI   SPF_ZVERB,C'T'                    TOP?\n         BE    MAIN0440\n         CLI   SPF_ZVERB,C'U'                    UP?\n         BE    MAIN0450\n         B     MAIN0050\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0400 DS    0H\n         ITRACE ID=BOTTOM\n         ICM   R1,15,DXD_AREA_NEXT               FIRST ON CHAIN\nTEMP     USING AREA_DSECT,R1\n         BZ    EXIT0000                          SHOULD NOT HAPPEN!\nMAIN0410 DS    0H\n         LR    R5,R1                             SAVE THIS ADDR\n         ICM   R1,15,TEMP.AREA_NEXT              NEXT AREA\n         BNZ   MAIN0410\n         B     MAIN0010                          BUILD DISPLAY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0420 DS    0H\n         ITRACE ID=DOWN\n         CLI   SPF_ZSCROLLA,C'M'                 MAX?\n         BE    MAIN0400                          YES\n         L     R2,SPF_ZSCROLLN                   NBR OF LINES TO SCROLL\n         L     R1,DXD_FIRST_DISPLAYED            1ST ON DISPLAY\nMAIN0430 DS    0H\n         ICM   R1,15,TEMP.AREA_NEXT              NEXT ON CHAIN\n         BZ    MAIN0010                          AT END OF CHAIN\n         ST    R1,DXD_FIRST_DISPLAYED\n         BCT   R2,MAIN0430\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0440 DS    0H\n         ITRACE ID=TOP\n         L     R5,DXD_AREA_NEXT                  FIRST DATA ITEM\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0450 DS    0H\n         ITRACE ID=UP\n         CLI   SPF_ZSCROLLA,C'M'                 MAX?\n         BE    MAIN0440                          YES\n         ICM   R1,15,DXD_FIRST_DISPLAYED         FIRST ON DISPLAY\n         BZ    EXIT0000                          SHOULD NOT HAPPEN!\n         L     R2,SPF_ZSCROLLN                   LINES ON DISPLAY\nMAIN0460 DS    0H\n         ST    R1,DXD_FIRST_DISPLAYED            COPY ADDR\n         ICM   R1,15,TEMP.AREA_PREV              PREVIOUS AREA\n         BZ    MAIN0010\n         BCT   R2,MAIN0460                       LOOP\n         B     MAIN0010\n         DROP  TEMP\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      Replace the existing USER area chain with the updated chain    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0500 DS    0H\n         ITRACE ID=SWITCH,                                             +\n               DATA1=DISCOMM_USER_AREA_NEXT_1,                         +\n               DATA2=DXD_AREA_NEXT\n         ICM   R5,15,DISCOMM_USER_AREA_NEXT_1    FIRST USER AREA\n         BZ    MAIN0520                          NOTHING ON CHAIN\nMAIN0510 DS    0H\n         LR    R1,R5                             COPY ADDRESS\n         ICM   R5,15,AREA_NEXT                   NEXT AREA\n         ITRACE ID=FREE_2,                                             +\n               RDATA1=R1\n         FREEMAIN RU,                            FREEMAIN THIS AREA    +\n               A=(1),                                                  +\n               LV=AREA_DSECT_L\n         LTR   R5,R5                             ANOTHER AREA?\n         BNZ   MAIN0510                          YES\nMAIN0520 DS    0H\n         MVC   DISCOMM_USER_AREA_NEXT_1,DXD_AREA_NEXT\n         XC    DXD_AREA_NEXT,DXD_AREA_NEXT       RESET WORKING CHAIN\n         ICM   R5,15,DISCOMM_USER_AREA_NEXT_1    1ST USER AREA\n         BZ    EXIT0000                          NO USER AREAS\n         XC    AREA_PREV,AREA_PREV               ZERO 'PREV' ADDR\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0550 DS    0H\n         ITRACE ID=CANCEL\n         MVC   SPF_ZCMD,COMM_BLANKS              RESET COMMAND\n         ICM   R5,15,DXD_AREA_NEXT               FIRST NEW AREA\n         BZ    EXIT0000                          NONE\nMAIN0560 DS    0H\n         LR    R1,R5                             COPY ADDRESS\n         ICM   R5,15,AREA_NEXT                   NEXT AREA\n         ITRACE ID=FREE_3,                                             +\n               RDATA1=R1\n         FREEMAIN RU,                            FREEMAIN THIS AREA    +\n               A=(1),                                                  +\n               LV=AREA_DSECT_L\n         LTR   R5,R5                             ANOTHER AREA?\n         BNZ   MAIN0560                          YES\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMSG0000  DS    0H\n         MVI   COMM_MSG_ID,0\n         ITRACE ID=MSG,                                                +\n               DATA1=COMM_MSG_ID\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         BR    R4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R0,DXD_AREA_TABLE_SIZE            ADDR TABLE SIZE\n         L     R1,DXD_AREA_TABLE                 ADDR TABLE ADDR\n         ITRACE ID=FREE_TBL,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R0\n         FREEMAIN RU,                            FREEMAIN ADDR TABLE   +\n               A=(1),                                                  +\n               LV=(0)\n         L     R13,4(,R13)                       RESTORE REGISTER 13    ASE01670\n         L     R14,12(,R13)                      RESTORE REGISTERS      ASE01680\n         LR    R15,R2                            SET RC\n         LM    R0,R12,20(R13)                    RESTORE REGISTERS      ASE01680\n         BR    R14                               RETURN TO CALLER       ASE01700\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nABEND000 DS    0H\n         ITRACE ID=ABEND\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START     DC   Q(DXDDLIST)\nV_DISDCONV    DC   V(DISDCONV)\n\nAREA_ID       DC   CL8'AREA'\nABEND         DC   C'ABEND '\nCAN           DC   C'CAN '\nCANCEL        DC   C'CANCEL '\nPANEL_DISDLIST DC  CL8'DISDLIST'\n\n              LTORG\n\nMSG01         DS   0C\n              DC   AL1($SCREEN_ATTR_INPUT)\nMSG01_BEGIN   DC   CL8' '\n              DC   AL1($SCREEN_ATTR_NORMAL)\n              DC   CL3' '\n              DC   AL1($SCREEN_ATTR_INPUT)\nMSG01_END     DC   CL8' '\n              DC   AL1($SCREEN_ATTR_NORMAL)\n              DC   CL3' '\nMSG01_LENGTH  DC   CL8' '\n              DC   AL1($SCREEN_ATTR_HIGH_YELLOW)\nMSG01_MSG     DC   CL30' '\nMSG01_L       EQU  *-MSG01\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDDLIST              DSECT\n                      COPY DXDPREF\n\nDXD_AREA_PREV         DS  A             DUMMY FOR 'PREV' ON CHAIN\nDXD_AREA_NEXT         DS  A             FIRST DATA ITEM ON CHAIN\n\nDXD_FIRST_DISPLAYED   DS  A             FIRST DATA ITEM DISPLAYED\nDXD_LAST_DISPLAYED    DS  A             LAST DATA ITEM DISPLAYED\n\nDXD_AREA_TABLE        DS  A\nDXD_AREA_TABLE_SIZE   DS  F\n\nDXD_CONV_PARMS        DS  0A\nDXD_CONV_SOURCE       DS  F\nDXD_CONV_OUT          DS  F\n\nDXD_BEGIN             DS  F\nDXD_END               DS  F\nDXD_LENGTH            DS  F\n                      DS  X\n\nDXD_NBR_DISPLAYED     DS  H             NBR OF DATA ITEMS DISPLAYED\n\nDXD_FLAGS             DS  X             FLAGS\n$DXD_ERROR            EQU X'80'         .. SERIOUS ERROR\n$DXD_UPDATE           EQU X'40'         .. AREA(S) UPDATED\n\nDXD_WORK              DS  CL9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n              END     DISDLIST\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISDMERG": {"ttr": 3597, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x16\\x01\\t4\\x8f\\x01\\x10\\x00\\x8f\\x104\\x02\\xbc\\x02\\xbb\\x00\\x03\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2009-12-14T00:00:00", "modifydate": "2010-01-08T10:34:16", "lines": 700, "newlines": 699, "modlines": 3, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*   \"Merge\" the user identified data areas with RLD data items.       *\n*                                                                     *\n*   To this point, data areas may have been identified by one         *\n*   of two ways.  One is the RLD data obtained from the binder.       *\n*   The second is areas identified by the user. The data from         *\n*   these two sources needs to be 'merged'  The end result is         *\n*   a chain of AREA blocks that                                       *\n*       1) is in ascending DISP sequence                              *\n*       2) any duplicate or overlapping areas will have been          *\n*          resolved.  That is a given displacement range              *\n*          will only be referenced by one AREA block.                 *\n*                                                                     *\n*                                                                     *\n*   The RLD items are identified by AREAs chained from                *\n*   DISCOMM_RLD_AREA_NEXT. User identified areas are chained          *\n*   DISCOMM_USER_AREA_NEXT_1. The merged data will be a chain         *\n*   of AREA blocks chained from DISCOMM_ALL_AREA_NEXT.                *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISDMERG CSECT\nDISDMERG AMODE 31\nDISDMERG RMODE ANY\n         USING DISDMERG,R15\n         B     MOD0000                             SKIP EYECATCHER\nMODID    DC    CL8'DISDMERG'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                     SAVE REGS\n         LR    R10,R15                             SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISDMERG,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR                   WORK AREA\n         A     R15,DXD_START                       PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         USING DXDDMERG,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\nI        USING AREA_DSECT,R7\nU        USING AREA_DSECT,R6\nPREV     USING AREA_DSECT,R5\n         MVI   DUMMY_AREA,X'FF'\n         MVC   DUMMY_AREA+1(AREA_DSECT_L-1),DUMMY_AREA\n* ------------------------------------------------------------------- *\n*        Free 'area 2' chain                                          *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         ITRACE ID=FREE_2,                                             +\n               DATA1=DISCOMM_USER_AREA_NEXT_2\n         ICM   R7,15,DISCOMM_USER_AREA_NEXT_2      FIRST ON CHAIN\n         BZ    INIT0030                            NONE ON CHAIN\n         XC    DISCOMM_USER_AREA_NEXT_2,DISCOMM_USER_AREA_NEXT_2\nINIT0020 DS    0H\n         CLI   I.AREA_TYPE,X'FF'                   DUMMY AREA?\n         BE    INIT0030                            YES\n         LR    R1,R7\n         L     R7,I.AREA_NEXT                      NEXT AREA ON CHAIN\n         ITRACE ID=AREA,                                               +\n               RDATA1=R1,                                              +\n               RDATA2=R7\n         FREEMAIN RU,                              FREE THIS AREA      +\n               A=(1),                                                  +\n               LV=AREA_DSECT_L\n         LTR   R7,R7                               ANOTHER BLOCK?\n         BNZ   INIT0020                            YES\n* ------------------------------------------------------------------- *\n*        Free 'ALL area' chain                                        *\n* ------------------------------------------------------------------- *\nINIT0030 DS    0H\n         ITRACE ID=FREE_ALL,                                           +\n               DATA1=DISCOMM_ALL_AREA_NEXT\n         ICM   R7,15,DISCOMM_ALL_AREA_NEXT         FIRST ON INTERNAL\n         BZ    MAIN0000                            NONE ON CHAIN\n         XC    DISCOMM_ALL_AREA_NEXT,DISCOMM_ALL_AREA_NEXT\nINIT0040 DS    0H\n         LR    R1,R7\n         L     R7,I.AREA_NEXT                      NEXT AREA ON CHAIN\n         ITRACE ID=AREA,                                               +\n               RDATA1=R1,                                              +\n               RDATA2=R7\n         FREEMAIN RU,                              FREE THIS AREA      +\n               A=(1),                                                  +\n               LV=AREA_DSECT_L\n         LTR   R7,R7                               ANOTHER BLOCK?\n         BNZ   INIT0040                            YES\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Build internal area chain                                    *\n*                                                                     *\n*   The user may identify areas of the text as data via the \"D\"       *\n*   option from the main menu.  Data areas are identified by          *\n*   giving the starting and ending displacement.  The user may        *\n*   identify multiple areas.  To make things easier for the user      *\n*   the areas may be identified any order.  Also the user may         *\n*   specify data areas that overlap.                                  *\n*                                                                     *\n*   .... this was hard to put into words (at least for me) ....       *\n*                                                                     *\n*   I wanted to preserve the data areas that were identified by       *\n*   the user in the same form and order they identified them.         *\n*   A dis-assembly is usually an iterative process.  The results      *\n*   from one 'generate' process can often lead to a better            *\n*   understanding of the code being examined.  Then data areas,       *\n*   DSECTs, etc and be refined.  If the data areas identified         *\n*   by the user were re-arranged, or otherwise updated for            *\n*   internal use, it could confuse the user.                          *\n*                                                                     *\n*   ............................................................      *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n\n\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   Step 1                                                            *\n*                                                                     *\n*   Copy the user areas to the internal chain in ascending            *\n*   order based on the starting displacement.                         *\n*                                                                     *\n*   The \"U\" quailifier is R6, chain 1                                 *\n*   The \"I\" quallifier is R7, chain 2                                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         ITRACE ID=STEP1\n         LA    R7,DUMMY_AREA                  DUMMY AREA\n         ST    R7,DISCOMM_USER_AREA_NEXT_2\n         ICM   R6,15,DISCOMM_USER_AREA_NEXT_1 FIRST ON USER\n         BZ    MAIN0040                       NO USER DEFINED AREAS\n         LA    R1,DISCOMM_USER_AREA_PREV_2\n         ST    R1,I.AREA_PREV                 SET 'PREV' IN DUMMY AREA\nMAIN0010 DS    0H\n         ICM   R7,15,DISCOMM_USER_AREA_NEXT_2 1ST ON INTERNAL CHAIN\nMAIN0020 DS    0H\n         ITRACE ID=U,                                                  +\n               RDATA1=R6,                                              +\n               DATA2=U.AREA_BEGIN\n         ITRACE ID=I,                                                  +\n               RDATA1=R7,                                              +\n               DATA2=I.AREA_BEGIN\n         CLC   U.AREA_BEGIN,I.AREA_BEGIN      USER LOWER THAN INTERNAL?\n         BH    MAIN0030                       NO\n         GETMAIN RU,                          GETMAIN AN AREA BLOCK    +\n               LOC=ANY,                                                +\n               LV=AREA_DSECT_L\nNEW      USING AREA_DSECT,R1\n         MVC   NEW.AREA_DSECT(AREA_DSECT_L),U.AREA_DSECT\n         ITRACE ID=NEW,                                                +\n               RDATA1=R1,                                              +\n               DATA2=NEW.AREA_BEGIN\n         L     R2,I.AREA_PREV\nPREV     USING AREA_DSECT,R2\n         ST    R1,PREV.AREA_NEXT\n         ST    R2,NEW.AREA_PREV\n         ST    R1,I.AREA_PREV\n         ST    R7,NEW.AREA_NEXT\n         ICM   R6,15,U.AREA_NEXT              NEXT ON USER AREA CHAIN\n         BZ    MAIN0040                       END OF CHAIN REACHED\n         B     MAIN0010                       INSERT THIS AREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Remove \"dummy\" entry from chain                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0030 DS    0H\n         ICM   R7,15,I.AREA_NEXT\n         BNZ   MAIN0020\n         DC    H'0'\n         DROP  NEW,PREV\nMAIN0040 DS    0H\n         ICM   R7,15,DISCOMM_USER_AREA_NEXT_2\n         CLI   I.AREA_BEGIN,X'FF'\n         BE    MAIN0080\nMAIN0050 DS    0H\n         ITRACE ID=USER2,                                              +\n               RDATA1=R7,                                              +\n               DATA2=I.AREA_BEGIN\n         ICM   R1,15,I.AREA_NEXT\n         BZ    MAIN0080\nNEXT     USING AREA_DSECT,R1\n         CLI   NEXT.AREA_BEGIN,X'FF'\n         BE    MAIN0060\n         LR    R7,R1\n         B     MAIN0050\nMAIN0060 DS    0H\n         XC    I.AREA_NEXT,I.AREA_NEXT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*   Step 2                                                            *\n*                                                                     *\n*   Combine areas that overlap or free areas \"spanned\" by another.    *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0080 DS    0H\nA        USING AREA_DSECT,R7\nB        USING AREA_DSECT,R6\n         ICM   R7,15,DISCOMM_USER_AREA_NEXT_2      1ST ON CHAIN\n         ITRACE ID=STEP2,                                              +\n               RDATA1=R7\n         LTR   R7,R7                               ANYTHING ON CHAIN?\n         BZ    MAIN0400                            NO.. SKIP STEP 3\n         CLI   A.AREA_TYPE,X'FF'                   DUMMY AREA?\n         BE    MAIN0400                            NO.. SKIP STEP 3\nMAIN0090 DS    0H\n         ICM   R6,15,A.AREA_NEXT                   1ST BLOCK AFTER \"A\"\n         BZ    MAIN0180                            END OF CHAIN\n         CLC   A.AREA_BEGIN,B.AREA_BEGIN           BEGIN AT SAME DISP?\n         BNE   MAIN0130                            NO\n* ------------------------------------------------------------------- *\n*   Both begin at same disp                                           *\n* ------------------------------------------------------------------- *\n         CLC   A.AREA_END,B.AREA_END               END AT SAME DISP?\n         BH    MAIN0110                            A > B\n         BL    MAIN0120                            A < B\n* ------------------------------------------------------------------- *\n*   \"A\" and \"B\" are identical                                         *\n*   FREEMAIN the \"B\" block                                            *\n* ------------------------------------------------------------------- *\n         ITRACE ID=DUP                             DUPLICATE AREAS\n         B     MAIN0160\n* ------------------------------------------------------------------- *\n*   \"A\" and \"B\" start at the same disp                                *\n*   \"A\" has a larger end disp.                                        *\n*   FREEMAIN the \"B\" block                                            *\n* ------------------------------------------------------------------- *\nMAIN0110 DS    0H\n         ITRACE ID=SPAN1\n         B     MAIN0160\n* ------------------------------------------------------------------- *\n*   \"A\" and \"B\" start at the same disp                                *\n*   \"B\" has a larger end disp                                         *\n*   Change \"A\" end disp to \"B\"s end disp                              *\n*   Calculate size of combined area                                   *\n*   FREEMAIN the \"B\" block                                            *\n* ------------------------------------------------------------------- *\nMAIN0120 DS    0H\n         ITRACE ID=SPAN2\n         B     MAIN0150\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   \"B\" block begins at a higher disp than \"A\" block.                 *\n*   If \"A\" block ends at a higher disp than \"B\" begins,               *\n*   \"A\" block overlaps part or all of \"B\" block.                      *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0130 DS    0H\n         ITRACE ID=MAIN0130,                                           +\n               DATA1=A.AREA_BEGIN,                                     +\n               DATA2=B.AREA_BEGIN\n         CLC   A.AREA_END,B.AREA_BEGIN             A END < B BEGIN?\n         BL    MAIN0180                            YES.. GOOD\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   \"A\" block ends at the same or higher disp than \"B\" block begins.  *\n*                                                                     *\n*   If \"A\" block ends at or higher than \"B\" ends                      *\n*      \"A\" block spans all of \"B\" block                               *\n*   otherwise                                                         *\n*      \"A\" block spans first portion of \"B\" block                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=A,                                                  +\n               DATA1=A.AREA_BEGIN,                                     +\n               DATA2=B.AREA_BEGIN\n         CLC   A.AREA_END,B.AREA_END               \"A\" END < \"B\" END\n         BL    MAIN0140                            YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   'A' block spans all of 'B' block                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=SPAN3,                                              +\n               DATA1=A.AREA_BEGIN,                                     +\n               DATA2=B.AREA_BEGIN\n         B     MAIN0160\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   'A' block overlaps first part of 'B' block.                       *\n*   Change end disp in 'A' block to end disp in 'B' block.            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0140 DS    0H\n         ITRACE ID=SPAN4\nMAIN0150 DS    0H\n         ITRACE ID=MAIN0150,                                           +\n               RDATA1=R6,                                              +\n               RDATA2=R7\n         MVC   A.AREA_END,B.AREA_END               COPY 'B' AREA END\n         ICM   R0,15,A.AREA_BEGIN\n         ICM   R1,15,A.AREA_END\n         SR    R1,R0\n         LA    R1,1(,R1)\n         STCM  R1,15,A.AREA_LENGTH\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   Remove 'B' block from chain                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0160 DS    0H\n         ITRACE ID=MAIN0160,                                           +\n               RDATA1=R7,                                              +\n               DATA2=B.AREA_NEXT\n         ICM   R4,15,B.AREA_NEXT                   2ND BLOCK FORWARD\n         BZ    MAIN0170\nNEXT     USING AREA_DSECT,R4\n         ST    R7,NEXT.AREA_PREV                   SET PREV IN 2ND FWD\n         DROP  NEXT\nMAIN0170 DS    0H\n         ST    R4,A.AREA_NEXT                      2ND FORWARD NOW NEXT\n         ITRACE ID=FREE_B,                                             +\n               RDATA1=R6\n         FREEMAIN RU,                                                  +\n               A=(R6),                                                 +\n               LV=AREA_DSECT_L\n         B     MAIN0090                            CHECK AGAIN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0180 DS    0H\n         ITRACE ID=MAIN0180\n         ICM   R7,15,A.AREA_NEXT                   NEXT \"A\" AREA\n         BNZ   MAIN0090\n         DROP  A,B\n\n\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*   Step 3                                                            *\n*                                                                     *\n*   Check for RLD items that overlap or duplicate user area(s)        *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nUSER     USING AREA_DSECT,R7\nRLD      USING AREA_DSECT,R6\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   Check the RLD items against the user area(s)                      *\n*                                                                     *\n*   An RLD item can be                                                *\n*                                                                     *\n*     1)  \"below\" the data item                                       *\n*                                                                     *\n*     2)  \"overlap\" the first portion of the data area                *\n*                                                                     *\n*     3)  \"overlap\" the entire data area                              *\n*                                                                     *\n*     4)  \"overlap\" the last portion of the data area                 *\n*                                                                     *\n*     5)  \"above\" the data area                                       *\n*                                                                     *\n*     6)  \"in the middle\" of a data area                              *\n*                                                                     *\n*     7)  exactly the same as a data area                             *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0190 DS    0H\n         ITRACE ID=STEP3\n         ICM   R7,15,DISCOMM_USER_AREA_NEXT_2\n         BZ    MAIN0400\nMAIN0200 DS    0H\n         ICM   R6,15,DISCOMM_RLD_AREA_NEXT\n         BZ    MAIN0400\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Case 1  RLD below user area                                     *\n*                                                                     *\n*     Action: No conflict                                             *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0220 DS    0H\n         ITRACE ID=CASE,                                               +\n               DATA1=RLD.AREA_BEGIN,                                   +\n               DATA2=USER.AREA_BEGIN\n         CLC   RLD.AREA_END,USER.AREA_BEGIN        RLD < USER BEGIN?\n         BNL   MAIN0230                            NO\n         ITRACE ID=CASE1                           RLD IS BELOW USER\n         B     MAIN0330\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     CASE 2  RLD overlaps 1st portion of user area                   *\n*                                                                     *\n*        RLD begins at or lower disp than user area begins            *\n*        RLD ends at or higher an user area begins                    *\n*        RLD ends at lower disp than user area ends                   *\n*                                                                     *\n*     Action: Change start disp in user area to \"RLD end disp + 1\"    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0230 DS    0H\n         ITRACE ID=MAIN0230                        RLD IS BELOW USER\n         CLC   RLD.AREA_BEGIN,USER.AREA_BEGIN   RLD BEGIN < USER BEGIN?\n         BH    MAIN0240                         NO\n         CLC   RLD.AREA_END,USER.AREA_BEGIN     RLD END > USER BEGIN?\n         BL    MAIN0240                         NO\n         CLC   RLD.AREA_END,USER.AREA_END       RLD END < USER END?\n         BNL   MAIN0240\n         ITRACE ID=CASE2\n         ICM   R2,15,RLD.AREA_END               RLD ITEM END DISP\n         LA    R2,1(,R2)                        PLUS 1\n         STCM  R2,15,USER.AREA_BEGIN            CHANGE USER AREA BEGIN\n         ICM   R3,15,USER.AREA_END              USER END DISP\n         SR    R3,R2                            COMPUTE LENGTH\n         LA    R3,1(,R3)                        TRUE LENGTH\n         STCM  R3,15,USER.AREA_LENGTH           SET NEW LENGTH\n         B     MAIN0330\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*     Case 3  RLD overlaps entire user area                           *\n*             or is the SAME as user area                             *\n*                                                                     *\n*        RLD begins at same disp as user area begins and              *\n*        RLD ends at same disp that user area ends                    *\n*                                                                     *\n*      or                                                             *\n*                                                                     *\n*        RLD begins at lower disp than user area begins               *\n*        RLD ends at higher disp than user area ends                  *\n*                                                                     *\n*     Action: \"delete\" the user area                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0240 DS    0H\n         ITRACE ID=MAIN0240\n         CLC   RLD.AREA_BEGIN,USER.AREA_BEGIN   SAME START DISP?\n         BNE   MAIN0250                         NO\n         CLC   RLD.AREA_BEGIN,USER.AREA_BEGIN   SAME START DISP?\n         BE    MAIN0260                         YES.. SAME AREA\nMAIN0250 DS    0H\n         ITRACE ID=MAIN0250\n         CLC   RLD.AREA_BEGIN,USER.AREA_BEGIN   RLD BEGIN < USER BEGIN?\n         BNL   MAIN0290                         NO\n         CLC   RLD.AREA_END,USER.AREA_END       RLD END > USER END?\n         BNH   MAIN0290                         NO\nMAIN0260 DS    0H\n         ITRACE ID=CASE3\n         ICM   R15,15,USER.AREA_NEXT            NEXT AREA ON CHAIN\n         BZ    MAIN0270                         NOT PRESENT\nNEXT     USING AREA_DSECT,R15\n         MVC   NEXT.AREA_PREV,USER.AREA_PREV    SET PREV IN NEXT\n         DROP  NEXT\nMAIN0270 DS    0H\n         ITRACE ID=MAIN0270\n         ICM   R15,15,USER.AREA_PREV            PREVIOUS BLOCK\n         BZ    MAIN0280                         NOT PRESENT\nPREV     USING AREA_DSECT,R15\n         MVC   PREV.AREA_NEXT,USER.AREA_NEXT    SET NEXT IN PREV BLOCK\n         DROP  PREV\nMAIN0280 DS    0H\n         ITRACE ID=MAIN0280\n         FREEMAIN RU,                                                  +\n               A=(7),                                                  +\n               LV=AREA_DSECT_L\n         B     MAIN0190                         RE-DRIVE PROCESS\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Case 4  RLD overlaps last portion of user area                  *\n*                                                                     *\n*        RLD begins at higher than user begins                        *\n*        RLD begins at or lower than user area ends                   *\n*        RLD ends at or higher than user area ends                    *\n*                                                                     *\n*     Action: Change ending disp in user area to \"RLD begin - 1)      *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0290 DS    0H\n         ITRACE ID=MAIN0290\n         CLC   RLD.AREA_BEGIN,USER.AREA_BEGIN   RLD BEGIN > USER BEGIN?\n         BNH   MAIN0300                         NO\n         CLC   RLD.AREA_BEGIN,USER.AREA_END     RLD BEGIN > USER END?\n         BH    MAIN0300                         YES..NOT LOWER OR EQUAL\n         CLC   RLD.AREA_END,USER.AREA_END       RLD END > USER END?\n         BL    MAIN0300                         NO\n         ITRACE ID=CASE4\n         ICM   R3,15,RLD.AREA_BEGIN             RLD BEGIN DISP\n         BCTR  R3,0                             MINUS 1\n         STCM  R3,15,USER.AREA_END              CHANGE USER AREA END\n         ICM   R2,15,USER.AREA_BEGIN            USER BEGIN DISP\n         SR    R3,R2                            COMPUTE NEW LENGTH\n         LA    R3,1(,R3)                        TRUE LENGTH\n         STCM  R3,15,USER.AREA_LENGTH           CHANGE LENGTH\n         B     MAIN0330\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     CASE 5  RLD is at higher disp than user area                    *\n*                                                                     *\n*        RLD begins at higher disp than user area ends                *\n*                                                                     *\n*     Action: no conflict                                             *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0300 DS    0H\n         ITRACE ID=MAIN0300\n         CLC   RLD.AREA_BEGIN,USER.AREA_END     RLD BEGIN > USER END?\n         BNH   MAIN0310                         NO\n         ITRACE ID=CASE5\n         B     MAIN0330                         GO TO NEXT RLD ITEM\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     CASE 6 (RLD is \"in the middle of\" a user area)                  *\n*                                                                     *\n*        RLD begins at higher disp than user area begins              *\n*        RLD ends at lower disp than user area ends                   *\n*                                                                     *\n*     Action: \"SPLIT\" the user area into two parts                    *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0310 DS    0H\n         ITRACE ID=MAIN0310\n         CLC   RLD.AREA_BEGIN,USER.AREA_BEGIN   RLD BEGIN > USER BEGIN?\n         BNH   MAIN0330                         NO\n         CLC   RLD.AREA_END,USER.AREA_END       RLD END < USER END?\n         BNL   MAIN0330                         NO\n         GETMAIN RU,                                                   +\n               LV=AREA_DSECT_L,                                        +\n               LOC=ANY\n         ITRACE ID=MIDDLE,                                             +\n               RDATA1=R1\nNEW      USING AREA_DSECT,R1\n         MVC   NEW.AREA_DSECT(AREA_DSECT_L),USER.AREA_DSECT\n         MVC   NEW.AREA_NEXT,USER.AREA_NEXT     CHAIN NEXT TO NEW\n         MVI   NEW.AREA_TYPE,$AREA_DATA         AREA IS DATA\n         ICM   R15,15,USER.AREA_NEXT            NEXT ON USER CHAIN\n         BZ    MAIN0320\nNEXT     USING AREA_DSECT,R15\n         ST    R1,NEXT.AREA_PREV                CHAIN NEW TO NEXT\nMAIN0320 DS    0H\n         ITRACE ID=MAIN0320\n         ST    R7,NEW.AREA_PREV                 SET PREV IN NEW\n         ST    R1,USER.AREA_NEXT                SET NEXT IN CURRENT\n         ICM   R3,15,RLD.AREA_BEGIN             RLD ITEM BEGIN\n         BCTR  R3,0                             MINUS 1\n         STCM  R3,15,USER.AREA_END              SET END DISP\n         ICM   R2,15,USER.AREA_BEGIN            BEGIN DISP\n         SR    R3,R2                            COMPUTE LENGTH\n         LA    R3,1(,R3)                        TRUE LENGTH\n         STCM  R3,15,USER.AREA_LENGTH           SET LENGTH\n         ICM   R2,15,RLD.AREA_END               RLD ITEM END\n         LA    R2,1(,R2)                        PLUS 1\n         STCM  R2,15,NEW.AREA_BEGIN             SET BEGIN DISP\n         ICM   R3,15,NEW.AREA_END               END DISP\n         SR    R3,R2                            COMPUTE LENGTH\n         LA    R3,1(,R3)                        TRUE LENGTH\n         STCM  R3,15,NEW.AREA_LENGTH            SET LENGTH\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0330 DS    0H\n         ITRACE ID=MAIN0330\n         ICM   R6,15,RLD.AREA_NEXT               NEXT RLD ITEM\n         BNZ   MAIN0220\n         ICM   R7,15,USER.AREA_NEXT              NEXT USER AREA\n         BNZ   MAIN0200\n\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*  Step 4                                                             *\n*                                                                     *\n*  Merge RLD and user data into \"ALL\" data                            *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0400 DS    0H\n         ITRACE ID=STEP4\nALL      USING AREA_DSECT,R5\n         LA    R5,DISCOMM_ALL_AREA_PREV\n         ICM   R6,15,DISCOMM_RLD_AREA_NEXT\n         BNZ   MAIN0410\n         LA    R6,DUMMY_AREA\nMAIN0410 DS    0H\n         ICM   R7,15,DISCOMM_USER_AREA_NEXT_2\n         BNZ   MAIN0420\n         LA    R7,DUMMY_AREA\nMAIN0420 DS    0H\n         CLC   RLD.AREA_BEGIN,USER.AREA_BEGIN       COMPARE DISPS\n         BL    MAIN0430                             RLD LOW\n         BH    MAIN0440\n         CLI   RLD.AREA_BEGIN,X'FF'                 AT DUMMY RECORD?\n         BE    EXIT0000                             YES\n         DC    H'0'                                 INTERNAL ERROR\nMAIN0430 DS    0H\n         GETMAIN RU,                                                   +\n               LV=AREA_DSECT_L,                                        +\n               LOC=ANY\n         ITRACE ID=COPY_RLD,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R6\n         MVC   NEW.AREA_DSECT(AREA_DSECT_L),RLD.AREA_DSECT\n         ST    R1,ALL.AREA_NEXT\n         XC    NEW.AREA_NEXT,NEW.AREA_NEXT\n         ST    R5,NEW.AREA_PREV\n         LR    R5,R1\n         ICM   R6,15,RLD.AREA_NEXT\n         BNZ   MAIN0420\n         LA    R6,DUMMY_AREA\n         B     MAIN0420\nMAIN0440 DS    0H\n         GETMAIN RU,                                                   +\n               LV=AREA_DSECT_L,                                        +\n               LOC=ANY\n         ITRACE ID=COPYUSER,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R7\n         MVC   NEW.AREA_DSECT(AREA_DSECT_L),USER.AREA_DSECT\n         ST    R1,ALL.AREA_NEXT\n         ST    R5,NEW.AREA_PREV\n         LR    R5,R1\n         ICM   R7,15,USER.AREA_NEXT\n         BNZ   MAIN0420\n         LA    R7,DUMMY_AREA\n         B     MAIN0420\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         ICM   R7,15,DISCOMM_USER_AREA_NEXT_2      FIRST ON CHAIN\n         BZ    EXIT0020                            NOTHING ON CHAIN\nEXIT0010 DS    0H\n         XC    USER.AREA_PREV,USER.AREA_PREV       NO PREV IN 1ST BLOCK\nEXIT0020 DS    0H\n         ICM   R7,15,DISCOMM_ALL_AREA_NEXT         FIRST ON CHAIN\n         BZ    EXIT0030                            NOTHING ON CHAIN\n         XC    USER.AREA_PREV,USER.AREA_PREV       NO PREV IN 1ST BLOCK\nEXIT0030 DS    0H\n         L     R13,4(,R13)                         RESTORE REGISTER 13\n         LM    R14,R12,12(R13)                     RESTORE REGISTERS\n         SR    R15,R15                             RETURN CODE\n         BR    R14                                 RETURN TO CALLER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START     DC       Q(DXDDMERG)\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDDMERG      DSECT\n              COPY     DXDPREF\n\nDUMMY_AREA    DS       (AREA_DSECT_L)X\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY     REGEQU\n         END  DISDMERG\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISDREAD": {"ttr": 26, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00E\\x01\\t4\\x1f\\x01\\t6/\\x15E\\x00\\xd6\\x00\\xd2\\x00\\x15\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2009-12-07T00:00:00", "modifydate": "2009-12-28T15:45:45", "lines": 214, "newlines": 210, "modlines": 21, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: DISDREAD                                              *\n*                                                                     *\n*  FUNCTION:                                                          *\n*    Read DSECTS (only) from a KSDS of pre-processed DSECTS/LABELS    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISDREAD CSECT\nDISDREAD AMODE 31\nDISDREAD RMODE ANY\n         USING DISDREAD,R15\n         B     MOD0000                           SKIP EYECATCHER\nMODID    DC    CL8'DISDREAD'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                   SAVE REGS\n         LR    R10,R15                           SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISDREAD,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR                 WORK AREA\n         A     R15,DXD_START                     PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         USING DXDDREAD,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               DATA1=DISCOMM_USING_KSDS\n         L     R6,DISCOMM_USING_KSDS\n         USING KSDS_DSECT,R6\n         USING DSECT_DSECT,R5\n         MVC   DXD_RPL(RPL_L),RPL_I\n         USING IFGRPL,DXD_RPL\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        READ the DSECTs in a KSDS                                    *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         TM    KSDS_FLAGS,$KSDS_OPEN             KSDS OPEN?\n         BO    MAIN0020                          YES\n         ITRACE ID=OPEN,                                               +\n               DATA1=KSDS_DDNAME\n         OPEN  (KSDS_ACB,INPUT),                 OPEN THE KSDS         +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_OPEN)\n         OI    KSDS_FLAGS,$KSDS_OPEN             SET FLAG\nMAIN0020 DS    0H\n         ITRACE ID=MODCB1\n         MVC   DXD_MODCB(MODCB1_L),MODCB1_I\n         LA    R2,DXD_RPL\n         LA    R3,KSDS_ACB\n         LA    R7,PPD\n         LA    R8,PPD_KEY\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R7),                                              +\n               AREALEN=PPD_L,                                          +\n               ARG=(R8),                                               +\n               KEYLEN=L'PPD_KEY,                                       +\n               OPTCD=(KEY,KGE,DIR,SYN,MVE),                            +\n               MF=(G,DXD_MODCB)\n         ITRACE ID=MODCB_RC,                                           +\n               RDATA1=R15,                                             +\n               RDATA2=R0\n         LTR   R15,R15\n         BNZ   ERR0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         XC    PPD_SEQ,PPD_SEQ                   INITIALIZE KEY\n         MVC   PPD_NAME,COMM_BLANKS\n         ITRACE ID=POINT,                                              +\n               DATA1=PPD_KEY+0,                                        +\n               DATA2=PPD_KEY+8\n         POINT RPL=DXD_RPL                       ISSUE POINT\n         ITRACE ID=POINT_RC,                                           +\n               RDATA1=R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=MODCB2\n         LA    R2,DXD_RPL\n         MODCB RPL=(R2),                         CHANGE TO SEQUENTIAL  +\n               OPTCD=(SEQ),                                            +\n               MF=(G,DXD_MODCB)\n         ITRACE ID=MODCB_RC,                                           +\n               RDATA1=R15,                                             +\n               RDATA2=R0\n         LTR   R15,R15\n         BNZ   ERR0010\n         LA    R5,KSDS_DSECT_PREV                \"FIRST\" ON CHAIN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0030 DS    0H\n         ITRACE ID=GET\n         GET   RPL=DXD_RPL                       READ A RECORD\n         ITRACE ID=GET_RC,                                             +\n               RDATA1=R15,                                             +\n               DATA2=RPLFDBK\n         LTR   R15,R15                           SUCCESSFUL?\n         BNZ   MAIN0040                          NO\n         ITRACE ID=PPD_DATA,                                           +\n               DATA1=PPD_DATA+0,                                       +\n               DATA2=PPD_DATA+8\n         CLC   DSECT_ID,PPD_DATA+8               DSECT?\n         BNE   MAIN0030                          NO\n         GETMAIN RU,                                                   +\n               LV=DSECT_DSECT_L,                                       +\n               LOC=ANY\nNEW      USING DSECT_DSECT,R1\nPPX      USING DSECT_DSECT,PPD_DATA\n         XC    NEW.DSECT_DSECT(DSECT_DSECT_L),NEW.DSECT_DSECT\n         ST    R1,DSECT_NEXT                     CHAIN TO PREVIOUS\n         ST    R5,NEW.DSECT_PREV                 CHAIN TO NEW\n         MVC   NEW.DSECT_EYE,PPX.DSECT_EYE       COPY EYECATCHER\n         MVC   NEW.DSECT_NAME,PPX.DSECT_NAME     COPY DSECT NAME\n         ITRACE ID=DSECT,                                              +\n               RDATA1=R1,                                              +\n               DATA2=NEW.DSECT_NAME\n         LR    R5,R1\n         B     MAIN0030                          READ NEXT RECORD\nMAIN0040 DS    0H\n         ICM   R5,15,KSDS_DSECT_NEXT             FIRST DSECT\n         BZ    EXIT0000                          NO DSECTS\n         XC    DSECT_PREV,DSECT_PREV             FORCE PREV TO ZERO\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=MOD_ERR,                                            +\n               RDATA1=R15\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                       RESTORE REGISTER 13\n         L     R14,12(,R13)                      RESTORE REGISTERS\n         SR    R15,R15                           SET RC\n         LM    R0,R12,20(R13)                    RESTORE REGISTERS\n         BR    R14                               RETURN TO CALLER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START     DC   Q(DXDDREAD)\n\nRPL_I         RPL  AM=VSAM\nRPL_L         EQU  *-RPL_I\n\nMODCB1_I MODCB RPL=*,                                                  +\n               ACB=*,                                                  +\n               AREA=*,                                                 +\n               AREALEN=PPD_L,                                          +\n               ARG=*,                                                  +\n               KEYLEN=L'PPD_KEY,                                       +\n               OPTCD=(KEY,KGE,DIR,SYN,MVE),                            +\n               MF=L\nMODCB1_L EQU  *-MODCB1_I\n\nDSECT_ID DC   CL8'DSECT'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDDREAD      DSECT\n              COPY    DXDPREF\n\nDXD_MODCB     DS      0F,(MODCB1_L)X\nDXD_RPL       DS      0F,(RPL_L)X\n\n              COPY     PPDDATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              IFGRPL   AM=VSAM\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY     REGEQU\n              END      DISDREAD\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISDSECT": {"ttr": 3333, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x16\\x01\\t4\\x8f\\x01\\x10\\x00\\x7f\\x16T\\x01\\x95\\x01\\x82\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2009-12-14T00:00:00", "modifydate": "2010-01-07T16:54:16", "lines": 405, "newlines": 386, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  FUNCTION:                                                          *\n*      Read in pre-processed DSECTs                                   *\n*      Chain USING blocks to DSECT blocks                             *\n*                                                                     *\n*                                                                     *\n*  The disassembler allows DSECTs to be 'pre-processed' by DISASMU1.  *\n*  Since the name of a DSECT can be more than 8 characters in length, *\n*  a PDS or PDS/E cannot be used.  I chose to use VSAM KSDSs.  The    *\n*  record key is \"DSECT_NAME+sequence nbr\" where DSECT_NAME is the    *\n*  DSECT's name and \"sequence nbr\" is a 4-byte binary sequence number *\n*  to make the key for each record unique.  The DSECT itself with     *\n*  always have sequence number zero (X'00000000').                    *\n*                                                                     *\n*  The program does a \"read by key\" with sequence number zero to      *\n*  determine if the DSECT is 'known', and then if found, read         *\n*  forward sequentially until the end of the file or the next         *\n*  record that has sequence number zero is found.                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISDSECT CSECT\nDISDSECT AMODE 31\nDISDSECT RMODE ANY\n         USING DISDSECT,R15\n         B     DSCT0000                          SKIP EYECATCHER\nMODID    DC    CL8'DISDSECT'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nDSCT0000 DS    0H\n         STM   R14,R12,12(R13)                   SAVE REGS\n         LR    R10,R15                           SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISDSECT,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR                 WORK AREA\n         A     R15,DXD_START                     PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         USING DXDDSECT,R13\n         USING IFGRPL,DXD_RPL\n* ------------------------------------------------------------------- *\n*        Housekeeping                                                 *\n* ------------------------------------------------------------------- *\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         MVI   DXD_RC,0\n         LA    R4,DXD_RPL\n         LA    R3,PPD_KEY\n         LA    R2,PPD\n         MVC   DXD_MODCB(MODCB1_L),MODCB1_I\n         MODCB RPL=(R4),                                               +\n               AREA=(R2),                                              +\n               AREALEN=PPD_L,                                          +\n               ARG=(R3),                                               +\n               KEYLEN=L'PPD_KEY,                                       +\n               OPTCD=(KEY,DIR,SYN,MVE),                                +\n               MF=(G,DXD_MODCB)\n* ------------------------------------------------------------------- *\n*        Determine if DSECT was in ASM,START/ASM,END                  *\n* ------------------------------------------------------------------- *\nDSCT0010 DS    0H\n         ICM   R3,15,DISCOMM_USING_NEXT          FIRST USING BLOCK\n         USING USING_DSECT,R3                    DEFINE BASE\n         BZ    EXIT0000                          NOTHING ON CHAIN\n         XC    USING_DSECT_ADDR,USING_DSECT_ADDR\n         XC    USING_LABEL_ADDR,USING_LABEL_ADDR\nDSCT0020 DS    0H\n         ITRACE ID=FINDDSCT,                     SEARCHING FOR A DSECT +\n               RDATA1=R3,                                              +\n               DATA2=USING_DSECT_NAME\n         ICM   R2,15,DISCOMM_DSECT_NEXT          FIRST DSECT ENTRY\n         USING DSECT_DSECT,R2                    DEFINE BASE\n         BZ    DSCT0040                          NO CHAIN\nDSCT0030 DS    0H\n         BZ    DSCT0040                          NOT ON EXISTING CHAIN\n         ITRACE ID=TESTDSCT,                     CHECKING A DSECT NAME +\n               DATA1=DSECT_NAME                  .. DSECT'S NAME\n         CLC   USING_DSECT_NAME,DSECT_NAME       DSECT FOUND?\n         BE    DSCT0170                          YES\n         ICM   R2,15,DSECT_NEXT                  NEXT DSECT BLOCK\n         BNZ   DSCT0030                          LOOP\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        The DSECT was not processed via ASM,START/ASM,END.           *\n*                                                                     *\n*        Search the DSECT DDs.                                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDSCT0040 DS    0H\n         ITRACE ID=SRCHKSDS                      CHECKING PRE-PROCESSED\n         XC    PPD_SEQ,PPD_SEQ                   SET SEQ NBR TO ZERO\n         MVC   PPD_NAME,USING_DSECT_NAME         COPY DSECT NAME\n         ICM   R5,15,DISCOMM_KSDS_NEXT           ANY DSECT KSDS?\n         BZ    ERR0010                           NO\n         USING KSDS_DSECT,R5                     DEFINE BASE\nDSCT0050 DS    0H\n         LA    R2,KSDS_ACB                       ACB'S ADDRESS\n         MVC   DXD_MODCB(MODCB2_L),MODCB2_I\n         MODCB RPL=(R4),                         UPDATE ACB ADDR IN RPL+\n               ACB=(R2),                                               +\n               MF=(G,DXD_MODCB)\n         LTR   R15,R15\n         BNZ   ERR0020\n         ITRACE ID=READKSDS,                                           +\n               DATA1=KSDS_DDNAME,                                      +\n               DATA2=USING_DSECT_NAME\n         GET   RPL=(R4)                          READ KSDS\n         ITRACE ID=GET_RC,                                             +\n               RDATA1=R15,                                             +\n               DATA2=RPLFDBK\n         LTR   R15,R15                           SUCCESSFUL?\n         BZ    DSCT0060                          YES..\n         ICM   R5,15,KSDS_NEXT                   NEXT\n         BNZ   DSCT0050\n         B     ERR0010                           DSECT NOT FOUND\nDSCT0060 DS    0H\n         SR    R6,R6                             NO LABEL SO FAR\n         SR    R7,R7                             NO EQUATE SO FAR\n         USING LABEL_DSECT,R6\n         USING EQU_DSECT,R7\n         B     DSCT0080\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDSCT0070 DS    0H\n         ICM   R1,15,PPD_SEQ                     SEQ NBR\n         LA    R1,1(,R1)                         PLUS 1\n         STCM  R1,15,PPD_SEQ                     UPDATE SEQ NBR\n         ITRACE ID=GET,                                                +\n               DATA1=PPD_KEY+0,                                        +\n               DATA2=PPD_SEQ\n         GET   RPL=(R4)                          READ NEXT RECORD\n         ITRACE ID=GET_RC,                                             +\n               RDATA1=R15,                                             +\n               DATA2=RPLFDBK\n         LTR   R15,R15                           SUCCESSFUL?\n         BNZ   DSCT0170                          NO\nDSCT0080 DS    0H\n         ITRACE ID=DATA,                                               +\n               DATA1=PPD_DATA+8,                                       +\n               DATA2=PPD_DATA+12\n         CLC   DSECT_ID,PPD_DATA+8               DSECT?\n         BE    DSCT0090                          YES\n         CLC   LABEL_ID,PPD_DATA+8               LABEL?\n         BE    DSCT0110                          YES\n         CLC   EQU_ID,PPD_DATA+8                 EQUATE?\n         BE    DSCT0130                          YES\n         ABEND 1,DUMP,,USER\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        New DSECT found                                              *\n*                                                                     *\n*     Add the DSECT, LABELs, EQUs to the Pre-processed DSECTs chain   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDSCT0090 DS    0H\n         ITRACE ID=DSECT,                                              +\n               DATA1=PPD_DATA+12,                                      +\n               DATA2=PPD_DATA+20\n         GETMAIN RU,                             GETMAIN DSECT BLOCK   +\n               LV=DSECT_DSECT_L,                                       +\n               LOC=ANY\n         LR    R2,R1                             COPY ADDRESS\n         ITRACE ID=NEWDSECT,                                           +\n               RDATA1=R2\nNEW      USING DSECT_DSECT,R2\n         MVC   NEW.DSECT_DSECT(DSECT_DSECT_L),PPD_DATA\n         ICM   R1,15,KSDS_DSECT_NEXT\n         BZ    DSCT0100\nNEXT     USING DSECT_DSECT,R1\n         ST    R2,NEXT.DSECT_PREV\nDSCT0100 DS    0H\n         MVC   NEW.DSECT_NEXT,KSDS_DSECT_NEXT    CHAIN EXISTING TO NEW\n         XC    NEW.DSECT_PREV,NEW.DSECT_PREV\n         ST    R2,KSDS_DSECT_NEXT\n         XC    DSECT_LABEL_PREV,DSECT_LABEL_PREV INIT LABEL BLOCK ADDR  RESS\n         XC    DSECT_LABEL_NEXT,DSECT_LABEL_NEXT INIT LABEL BLOCK ADDR  RESS\n         LA    R6,DSECT_LABEL_PREV               NO LABEL SO FAR\n         SR    R7,R7                             NO EQUATE SO FAR\n         B     DSCT0070\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        New LABEL                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDSCT0110 DS    0H\n         ITRACE ID=LABEL,                                              +\n               DATA1=PPD_DATA+12,                                      +\n               DATA2=PPD_DATA+20\n         GETMAIN RU,                                                   +\n               LV=LABEL_DSECT_L,                                       +\n               LOC=ANY\n         ITRACE ID=NEWLABEL,                                           +\n               RDATA1=R1\nNEW      USING LABEL_DSECT,R1\n         ST    R1,LABEL_NEXT\n         LR    R15,R6\n         LR    R6,R1                             COPY STORAGE ADDRESS\n         MVC   LABEL_DSECT(LABEL_DSECT_L),PPD_DATA\n         ST    R15,LABEL_PREV\n         XC    LABEL_EQU_PREV,LABEL_EQU_PREV     CLEAR EQUATE ADDRESS\n         XC    LABEL_EQU_NEXT,LABEL_EQU_NEXT     CLEAR EQUATE ADDRESS\n         LA    R7,LABEL_EQU_PREV\n         B     DSCT0070\n         DROP  NEW\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        New EQU                                                      *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDSCT0130 DS    0H\n         ITRACE ID=EQU,                                                +\n               DATA1=PPD_DATA+12,                                      +\n               DATA2=PPD_DATA+20\n         GETMAIN RU,                                                   +\n               LV=EQU_DSECT_L,                                         +\n               LOC=ANY\n         ITRACE ID=NEWEQU,                                             +\n               RDATA1=R1\nNEW      USING EQU_DSECT,R1\n         ST    R1,EQU_NEXT\n         LR    R15,R7                            SAVE PREV ADDR\n         LR    R7,R1                             COPY NEW BLOCK ADDR\n         MVC   EQU_DSECT(EQU_DSECT_L),PPD_DATA\n         ST    R15,EQU_PREV\n         XC    EQU_NEXT,EQU_NEXT\n         B     DSCT0070                          READ NEXT RECORD\n         DROP  R6,R7,NEW\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        The referenced DSECT has been found                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDSCT0170 DS    0H\n         ITRACE ID=DSCTFND,                      DSECT LOCATED         +\n               DATA1=DSECT_NAME,                 .. DSECT NAME         +\n               RDATA2=R2                         .. DSECT BLOCK ADDR\n         ST    R2,USING_DSECT_ADDR               CHAIN TO USING BLOCK\n         XC    USING_DISP,USING_DISP             SET DISP TO ZERO\n         OC    USING_DSECT_LABEL,USING_DSECT_LABEL\n         BZ    DSCT0210                          YES\n         CLC   USING_DSECT_LABEL,COMM_BLANKS     LABEL BLANK?\n         BE    DSCT0210                          YES\n         ITRACE ID=FINDLABL,                                           +\n               DATA1=USING_DSECT_LABEL+0,                              +\n               DATA2=USING_DSECT_LABEL+8\n         ICM   R8,15,DSECT_LABEL_NEXT            FIRST LABEL\n         USING LABEL_DSECT,R8                    DEFINE BASE\n         BZ    DSCT0190                          NO LABELS\nDSCT0180 DS    0H\n         ITRACE ID=CHK_LABL,                                           +\n               DATA1=LABEL_NAME+0,                                     +\n               DATA2=LABEL_NAME+8\n         CLC   LABEL_NAME,USING_DSECT_LABEL      LABEL LOCATED?\n         BE    DSCT0200                          YES\n         ICM   R8,15,LABEL_NEXT                  NEXT LABEL\n         BNZ   DSCT0180                          LOOP\nDSCT0190 DS    0H\n         ITRACE ID=NOT_FND\n         MVC   COMM_INFO_01(63),USING_DSECT_LABEL    COPY LABEL NAME\n         MVC   COMM_INFO_02(63),USING_DSECT_NAME     COPY DSECT NAME\n         MVI   COMM_MSG_ID+1,2\n         BAL   R1,MSG0000\n         MVI   DXD_RC,8                          SET RC\n         B     DSCT0210\nDSCT0200 DS    0H\n         ITRACE ID=LABLFND,                                            +\n               RDATA1=R8\n         ST    R8,USING_LABEL_ADDR               SET LABEL BLOCK ADDR\n         MVC   USING_DISP,LABEL_DISP             SET DISP TO LABEL\n         B     DSCT0210                          PROCESS NEXT USING\nDSCT0210 DS    0H\n         ITRACE ID=NEXTUSNG,                                           +\n               RDATA1=R3,                                              +\n               DATA2=USING_NEXT\n         ICM   R3,15,USING_NEXT                  NEXT USING BLOCK\n         BNZ   DSCT0020                          LOOP\n         B     EXIT0000                          ALL DONE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMSG0000  DS    0H\n         MVC   COMM_MSG_CSECT,MODID              SET CSECT NAME\n         MVI   COMM_MSG_ID,0\n         L     R15,COMM_V_OSMSG                  OSMSG ENTRY POINT\n         BALR  R14,R15                           BUILD MESSAGE(S)\n         L     R14,COMM_OSSPFD\n         USING OSSPFD,R14\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         BR    R1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVC   COMM_INFO_01(63),USING_DSECT_NAME SET DSECT'S NAME\n         MVI   COMM_MSG_ID+1,3\n         BAL   R1,MSG0000\n         MVI   DXD_RC,8                          SET RC\n         B     EXIT0000                          AND EXIT\nERR0020  DS    0H\n         ITRACE ID=MODCB1E,                                            +\n               RDATA1=R15,                                             +\n               DATA2=RPLFDBK\n         DC    H'2'\nERR0030  DS    0H\n         ITRACE ID=MODCB2E,                                            +\n               RDATA1=R15,                                             +\n               DATA2=RPLFDBK\n         DC    H'3'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         SR    R15,R15                                                  ASE01690\n         IC    R15,DXD_RC                        SET RC\n         L     R13,4(,R13)                       RESTORE REGISTER 13    ASE01670\n         L     R14,12(,R13)                      RESTORE REGISTER 14    ASE01680\n         LM    R0,R12,20(R13)                    RESTORE REGISTERS      ASE01680\n         BR    R14                               RETURN TO CALLER       ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START      DC    Q(DXDDSECT)\n\nMODCB1_I MODCB RPL=*,                                                  +\n               ACB=*,                                                  +\n               AREA=*,                                                 +\n               AREALEN=1,                                              +\n               ARG=*,                                                  +\n               KEYLEN=1,                                               +\n               OPTCD=(KEY,KGE,DIR,SYN,MVE),                            +\n               MF=L\nMODCB1_L EQU  *-MODCB1_I\n\nMODCB2_I MODCB RPL=*,                                                  +\n               ACB=*\nMODCB2_L EQU  *-MODCB2_I\n\nDSECT_ID       DC    CL8'DSECT'\nLABEL_ID       DC    CL8'LABEL'\nEQU_ID         DC    CL8'EQU'\n               LTORG\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDDSECT       DSECT\n               COPY  DXDPREF\n\nDXD_RPL        DS    (RPL_L)X\n\nDXD_MODCB      DS    (MODCB1_L)X\n\nDXD_RC         DS    X\n\n               COPY  PPDDATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               IFGRPL   AM=VSAM\nRPL_L          EQU      *-IFGRPL\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n               COPY     REGEQU\n               END      DISDSECT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISDSINF": {"ttr": 1549, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x13\\x01\\t6O\\x01\\t6O\\x16X\\x01D\\x01D\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2009-12-30T00:00:00", "modifydate": "2009-12-30T16:58:13", "lines": 324, "newlines": 324, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*   Determine data set type                                           *\n*                                                                     *\n*   If the VOLSER was not given, call catalog service using IGGCSI00. *\n*      If the data set is non-VSAM issue OBTAIN to read the FORMAT-1  *\n*      using the VOLSER returned by catalog services.                 *\n*                                                                     *\n*   If the VOLSER was given, issue OBTAIN to read the FORMAT-1 from   *\n*      the specified volume.                                          *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISDSINF CSECT\nDISDSINF AMODE 31\nDISDSINF RMODE ANY\n         USING DISDSINF,R15\n         USING DISCOMM,R12\n         B     INIT0000\nMODID    DC    CL8'DISDSINF'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\nINIT0000 DS    0H\n         DROP  R15\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R10,R15                        COPY BASE ADDRESS\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISDSINF,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR              DXD AREA BASE ADDRESS\n         A     R15,DXD_START                  PLUS OFFSET\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        COPY DXD AREA ADDRESS\n         USING DXDDSINF,R13                   DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n         LR    R7,R1                          COPY PARM ADDRESS\n         USING DSINFREQ,R7\n         ITRACE ID=ENTRY,                                              +\n               DATA1=DSINFO_DSN+00,                                    +\n               DATA2=DSINFO_DSN+08\n         ITRACE ID=+,                                                  +\n               DATA1=DSINFO_DSN+16,                                    +\n               DATA2=DSINFO_DSN+24\n         LA    R0,DXD_CSI_DATA_LENGTH\n         LA    R1,DXD_CSI_L\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                         INIT\n         LA    R1,DSINFO_ERROR_INFO\n         ST    R1,DXD_CSI_REASON_ADDRESS      SET ADDRESS\n         LA    R6,DXD_CSI_SELECTION           CATALOG SEARCH CRITERIA\n         ST    R6,DXD_CSI_SELECTION_ADDRESS   SET ADDRESS\n         USING CSIFIELD,R6\n         LA    R1,DXD_CSI_DATA_LENGTH         CSI AREA\n         ST    R1,DXD_CSI_DATA_ADDRESS        SET ADDRESS\n         MVC   DXD_CSI_DATA_LENGTH,CSI_DATA_LENGTH\n         MVC   CSIFILTK,DSINFO_DSN            COPY DATA SET NAME\n         MVC   CSICATNM,COMM_BLANKS           START WITH MASTER CATALOG\n         MVC   CSIRESNM,COMM_BLANKS           NOT RESUMING A SEARCH\n         MVC   CSIDTYPD,COMM_BLANKS           RETURN ALL ENTRY TYPES\n         MVI   CSICLDI,C'Y'                   RETURN DATA AND INDEX\n         MVI   CSIOPTNS,C'F'                  USE 4-BYTE LENGTHS\n         MVI   CSIS1CAT,C' '                  SEARCH ALL CATALOGS\n         MVI   CSIRESUM,C' '                  THIS IS INITIAL CALL\n         MVC   CSINUMEN,H1                    NUMBER OF FIELDS WANTED\n         MVC   CSIFLDNM,C_VOLSER              NAME OF FIELD\n         LOAD  EP=IGGCSI00                    LOAD THE CSI INTERFACE\n         LR    R15,R0                         COPY ENTRY POINT\n         LA    R1,DXD_CSI_PARMS               PARAMETER LIST\n         ITRACE ID=CALL_CSI,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R15\n         BALR  R14,R15                        CALL CATALOG SEARCH\n         LR    R2,R15                         SAVE RETURN CODE\n         DELETE EP=IGGCSI00                   DELETE IGGCSI00\n         ITRACE ID=CSI_RC,                                             +\n               RDATA1=R2,                                              +\n               DATA2=(DXD_CSI_CATALOG_FLAG,1)\n         LTR   R2,R2                          LOOKUP SUCCESSFUL?\n         BNZ   ERR0030                        NO\n         TM    DXD_CSI_CATALOG_FLAG,$NOT_CATALOGED\n         BO    ERR0020                        DATA SET NOT CATALOGED\n         ITRACE ID=NAME,                                               +\n               DATA1=DXD_CSI_ENTRY_NAME+00,                            +\n               DATA2=DXD_CSI_ENTRY_NAME+08\n         ITRACE ID=NAME+,                                              +\n               DATA1=DXD_CSI_ENTRY_NAME+16,                            +\n               DATA2=DXD_CSI_ENTRY_NAME+24\n         ITRACE ID=TYPE,                                               +\n               DATA1=(DXD_CSI_ENTRY_TYPE,1),                           +\n               DATA2=DXD_VOLSERS\n         CLI   DXD_CSI_ENTRY_TYPE,C'A'        NONVSAM?\n         BE    INFO0060                       YES\n         CLI   DXD_CSI_ENTRY_TYPE,C'C'        VSAM?\n         BE    INFO0020                       YES\n         CLI   DXD_CSI_ENTRY_TYPE,C'D'        DATA COMPONENT?\n         BE    INFO0030                       YES\n         CLI   DXD_CSI_ENTRY_TYPE,C'H'        GDG MEMBER?\n         BE    INFO0040                       YES\n         CLI   DXD_CSI_ENTRY_TYPE,C'I'        INDEX COMPONENT?\n         BE    INFO0050                       YES\n         ITRACE ID=OTHER\n         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_OTHER\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        For VSAM do not try to OBTAIN the DSCB.  The DATA, INDEX,    *\n*        or other components may not have the same name as the        *\n*        CLUSTER.                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINFO0020 DS    0H\n         ITRACE ID=VSAM1\n         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_VSAM\n         B     EXIT0000\nINFO0030 DS    0H\n         ITRACE ID=VSAMDATA\n         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_DATA\n         B     EXIT0000\nINFO0040 DS    0H\n         ITRACE ID=GDG\n         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_GDG\n         B     EXIT0000\nINFO0050 DS    0H\n         ITRACE ID=VSAMINDX\n         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_INDEX\n         B     EXIT0000\nINFO0060 DS    0H\n         ITRACE ID=NON_VSAM\n         MVI   DSINFO_DATASET_TYPE,$DATA_TYPE_NONVSAM\n         CLC   ASTERISK,DXD_VOLSERS           CATALOGED ON SYSRES?\n         BNE   INFO0070                       NO\n         L     R1,CVTPTR                      CVT ADDRESS\n         USING CVT,R1\n         L     R1,CVTSYSAD                    SYSRES UCB ADDRESS\n         USING UCBOB,R1\n         MVC   DXD_VOLSERS,UCBVOLI            CHANGE VOLSER\nINFO0070 DS    0H\n         CLC   MIGRAT,DXD_VOLSERS             MIGRATED?\n         BE    ERR0040                        YES\n         MVC   DXD_CAMLST(CAMLST_L),CAMLST_I  INITIALIZE CAMLST\n         MVC   DSINFO_DSCB(L'DSINFO_DSN),DSINFO_DSN\n         LA    R1,DSINFO_DSN                  DSN\n         ST    R1,DXD_CAMLST+4                SET ADDRESS\n         LA    R1,DXD_VOLSERS                 VOLSER\n         ST    R1,DXD_CAMLST+8                SET ADDRESS\n         LA    R1,DSINFO_DSCB+L'DSINFO_DSN    RETURNED INFO\n         ST    R1,DXD_CAMLST+12               SET ADDRESS\n         LA    R1,DXD_CAMLST                  CAMLST ADDRESS\n         ITRACE ID=OBTAIN,                                             +\n               RDATA1=R1\n         OBTAIN (R1)                          READ DSCB\n         ITRACE ID=OBTN_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         DC    H'0'\nERR0020  DS    0H\n         ITRACE ID=NOTCATLG\n         MVC   COMM_MSG_1,COMM_BLANKS\n         MVC   COMM_MSG_1(ERR01_L),ERR01\n         LA    R2,8\n         B     EXIT0000\nERR0030  DS    0H\n         ITRACE ID=CAT_ERR,                                            +\n               DATA1=DSINFO_ERROR_INFO\n         MVC   COMM_MSG_1(ERR02_L),ERR02\n         UNPK  COMM_MSG_1+(ERR02_INFO-ERR02)(9),DSINFO_ERROR_INFO(5)\n         TR    COMM_MSG_1+(ERR02_INFO-ERR02)(5),COMM_HEXCHAR\n         MVI   COMM_MSG_1+(ERR02_INFO-ERR02)+8,C' '\n         LA    R2,8\n         B     EXIT0000\nERR0040  DS    0H\n         ITRACE ID=NOTCATLG\n         MVC   COMM_MSG_1,COMM_BLANKS\n         MVC   COMM_MSG_1(ERR03_L),ERR03\n         LA    R2,8\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2,                                              +\n               DATA2=DSINFO_DATASET_TYPE\n         L     R13,4(,R13)\n         L     R14,12(,R13)\n         LR    R15,R2\n         LM    R0,R12,20(R13)\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START            DC    Q(DXDDSINF)\nCSI_DATA_LENGTH      DC    A($CSI_DATA_LENGTH)\n\nCAMLST_I             CAMLST SEARCH,*,*,*\nCAMLST_L             EQU   *-CAMLST_I\n\nH1                   DC    H'1'\nC_VOLSER             DC    CL8'VOLSER'\nASTERISK             DC    C'******'\nMIGRAT               DC    C'MIGRAT'\n\nERR01                DC    C'Not cataloged'\nERR01_L              EQU   *-ERR01\n\nERR02                DC    C'Catalog info error '\nERR02_INFO           DC    CL8' '\n                     DC    C' '\nERR02_L              EQU   *-ERR02\n\nERR03                DC    C'Migrated'\nERR03_L              EQU   *-ERR03\n\n                     LTORG\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDDSINF                  DSECT\n                          COPY  DXDPREF\n\nDXD_CAMLST                DS    0A,(CAMLST_L)X\n\nDXD_CSI_PARMS             DS    0A\nDXD_CSI_REASON_ADDRESS    DS    A\nDXD_CSI_SELECTION_ADDRESS DS    A\nDXD_CSI_DATA_ADDRESS      DS    A\n\nDXD_CSI_SELECTION         DS    (CSIFIELD_L)X\n\nDXD_CSI_DATA_LENGTH       DS    F           LENGTH OF WORK AREA\nDXD_CSI_DATA_AREA         DS    0A,($CSI_DATA_LENGTH)X\n                          ORG   DXD_CSI_DATA_AREA\nDXD_CSI_REQUIRED_LENGTH   DS    F\nDXD_CSI_USED_LENGTH       DS    F           LENGTH USED\nDXD_CSI_FIELD_NAMES       DS    H           NUMBER OF FIELD NAMES + 1\n\nDXD_CSI_CATALOG_FLAG      DS    X\n$NOT_CATALOGED            EQU   X'40'       .. DATA SET NOT CATALOGED\n\nDXD_CSI_CATALOG_TYPE      DS    C           ALWAYS C'0'\nDXD_CSI_CATALOG_NAME      DS    CL44        CATALOG NAME\n                          DS    CL2         MODULE ID\n                          DS    X           REASON CODE\n                          DS    X           RETURN CODE\n\nDXD_CSI_ENTRY_FLAG        DS    X\nDXD_CSI_ENTRY_TYPE        DS    C\n*                               C'A'        .. NONVSAM\n*                               C'C'        .. CLUSTER\n*                               C'D'        .. DATA COMPONENT\n*                               C'H'        .. MEMBER OF A GDG\n*                               C'I'        .. INDEX COMPONENT\n*                               C'F'        .. HFS\n*                               C'T'        .. VTOC\nDXD_CSI_ENTRY_NAME        DS    CL44        ENTRY NAME (S/B DSN)\n                          DS    CL2         MODULE NAME\n                          DS    X           REASON CODE\n                          DS    X           RETURN CODE\n\n                          DS    XL2         TOTAL LENTH OF INFO\n                          DS    XL2         RESERVED\nDXD_CSI_VOLSER_LENGTH     DS    XL4         LENGTH OF FIELD S/B 6\nDXD_VOLSERS               DS    16CL6\n                          ORG\nDXD_CSI_L                 EQU   *-DXD_CSI_DATA_LENGTH\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     IGGCSINA\nCSIFIELD_L       EQU      *-CSIFIELD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DSINFREQ DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 CVT      DSECT=YES,LIST=YES\n                 IEFUCBOB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n\n                 COPY     REGEQU\n$CSI_DATA_LENGTH EQU      1024\n                 END      DISDSINF\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISELIST": {"ttr": 257, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00U\\x01\\t3\\x7f\\x01\\t6/\\x15E\\x01\\x00\\x00\\xfb\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2009-12-03T00:00:00", "modifydate": "2009-12-28T15:45:55", "lines": 256, "newlines": 251, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: DISELIST                                             *\n*                                                                    *\n*  Function:                                                         *\n*                                                                    *\n*   Display ESD items                                                *\n*                                                                    *\n*--------------------------------------------------------------------*\nDISELIST CSECT\nDISELIST AMODE 31\nDISELIST RMODE ANY\n         USING DISELIST,R15\n         B     MOD0000                           SKIP EYECATCHER\nMODID    DC    CL8'DISELIST'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         DROP  R15\n         USING ESD_DSECT,R5\n         STM   R14,R12,12(R13)                   SAVE REGS\n         LR    R10,R15                           SET BASE REG\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISELIST,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR                 WORK AREA\n         A     R15,DXD_START                     PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         USING DXDELIST,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0020 DS    0H\n         ICM   R5,15,DISCOMM_ESD_NEXT            1ST ESD\n         BZ    MAIN0300                          NO ESD ITEMS\n*---------------------------------------------------------------------*\n*                                                                     *\n*        Build data for ESD display                                   *\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0030 DS    0H\n         L     R0,DISCOMM_VDATA_ADDR             VDATA ADDR\n         L     R1,DISCOMM_VDATA_LENGTH           VDATA LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                            INITIALIZE VDATA\n         ST    R5,DXD_FIRST_DISPLAYED            SAVE 1ST DISPLAYED\n         L     R7,SPF_VDEPTH                     SCREEN DEPTH\n         L     R6,DISCOMM_VDATA_ADDR             VDATA ADDR\nMAIN0040 DS    0H\n         ST    R5,DXD_LAST_DISPLAYED             SAVE LAST ON DISPLAY\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nP        USING MSG01,R6\n         MVI   P.MSG01_ATTR,$SCREEN_ATTR_NORMAL\n         MVC   P.MSG01_NAME,ESD_NAME\n         MVC   P.MSG01_TYPE,ESD_TYPE\n         MVC   P.MSG01_TYPE_QUAL,ESD_TYPE_QUAL\n         MVC   P.MSG01_RESIDENT,ESD_RESIDENT\n         MVC   P.MSG01_TARGET,ESD_TARGET\n         L     R0,ESD_LENGTH                     LENGTH\n         MVC   P.MSG01_LENGTH,=X'40202020202020202120'\n         CVD   R0,COMM_DWORD\n         ED    P.MSG01_LENGTH,COMM_DWORD+3       EDIT LENGTH\n         UNPK  P.MSG01_LENGTH_H(9),ESD_LENGTH(5)\n         TR    P.MSG01_LENGTH_H,COMM_HEXCHAR\n         MVI   P.MSG01_LENGTH_H-1,C'('\n         MVI   P.MSG01_LENGTH_H+8,C')'\n         UNPK  P.MSG01_ELEM_OFFSET(9),ESD_ELEM_OFFSET(5)\n         TR    P.MSG01_ELEM_OFFSET(8),COMM_HEXCHAR\n         MVI   P.MSG01_ELEM_OFFSET+8,C' '\n         UNPK  P.MSG01_CLASS_OFFSET(9),ESD_CLASS_OFFSET(5)\n         TR    P.MSG01_CLASS_OFFSET(8),COMM_HEXCHAR\n         MVI   P.MSG01_CLASS_OFFSET+8,C' '\n         CLC   P.MSG01_TYPE_QUAL,=C'PR'\n         BE    MAIN0050\n         CLC   P.MSG01_TYPE,=C'ED'\n         BNE   MAIN0060\nMAIN0050 DS    0H\n         MVI   P.MSG01_ATTR,$SCREEN_ATTR_HIGH_YELLOW\nMAIN0060 DS    0H\n         DROP  P\n         A     R6,SPF_VWIDTH                     NEXT LINE\n         BCT   R7,MAIN0070\n         B     MAIN0080\nMAIN0070 DS    0H\n         ICM   R5,15,ESD_NEXT                    NEXT ESD ITEM\n         BNZ   MAIN0040                          PROCESS THIS ESD ITEM\n*---------------------------------------------------------------------*\n*                                                                     *\n*        Display the ESD items                                        *\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0080 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_DISELIST SET PANEL NAME\n         MVC   SESS_DISP_VDATA_ADDR,DISCOMM_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DISCOMM_VDATA_LENGTH\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15                           DISPLAY ESD INFO\n         ITRACE ID=DISP_RC,                                            +\n               RDATA1=R15,                                             +\n               DATA2=SPF_ZVERB\n         LTR   R15,R15                           RC = 0?\n         BNZ   EXIT0000                          NO\n*---------------------------------------------------------------------*\n*        Process scrolling                                            *\n*---------------------------------------------------------------------*\n         CLI   SPF_ZVERB,C'B'                    BOTTOM?\n         BE    MAIN0100\n         CLI   SPF_ZVERB,C'D'                    DOWN?\n         BE    MAIN0120\n         CLI   SPF_ZVERB,C'T'                    TOP?\n         BE    MAIN0130\n         CLI   SPF_ZVERB,C'U'                    UP?\n         BE    MAIN0140\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0100 DS    0H\n         ITRACE ID=BOTTOM\n         ICM   R5,15,DISCOMM_ESD_NEXT            FIRST ON CHAIN\n         BZ    EXIT0000                          SHOULD NOT HAPPEN!\nMAIN0110 DS    0H\n         ICM   R1,15,ESD_NEXT                    NEXT ON CHAIN?\n         BZ    MAIN0030                          NO..\n         LR    R5,R1                             COPY ADDR\n         B     MAIN0110\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0120 DS    0H\n         ITRACE ID=DOWN\n         L     R5,DXD_LAST_DISPLAYED             LAST ITEM DISPLAYED\n         B     MAIN0030\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0130 DS    0H\n         ITRACE ID=TOP\n         L     R5,DISCOMM_ESD_NEXT               FIRST ESD ITEM\n         B     MAIN0030\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0140 DS    0H\n         ITRACE ID=UP\n         ICM   R5,15,DXD_FIRST_DISPLAYED         FIRST ON DISPLAY\n         BZ    EXIT0000                          SHOULD NOT HAPPEN!\n         L     R7,SPF_ZSCROLLN                   LINES ON DISPLAY\nMAIN0150 DS    0H\n         ICM   R1,15,ESD_PREV                    PREV ON CHAIN?\n         BZ    MAIN0030                          NO..\n         LR    R5,R1                             COPY ADDR\n         BCT   R7,MAIN0150                       LOOP\n         B     MAIN0030\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0300 DS    0H\n         ITRACE ID=NO_ESD\n         MVC   SPF_MSG_3(MSG_02_L),MSG_02\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                       RESTORE REGISTER 13    ASE01670\n         L     R14,12(,R13)                      RESTORE REGISTERS      ASE01680\n         LR    R15,R2                            SET RC\n         LM    R0,R12,20(R13)                    RESTORE REGISTERS      ASE01680\n         BR    R14                               RETURN TO CALLER       ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START           DC   Q(DXDELIST)\n\nPANEL_DISELIST      DC   CL8'DISELIST'\n\nMSG01               DS   0C\nMSG01_ATTR          DC   AL1($SCREEN_ATTR_NORMAL)\nMSG01_NAME          DC   CL8' '\n                    DC   CL1' '\nMSG01_TYPE          DC   CL2' '\n                    DC   C' '\nMSG01_TYPE_QUAL     DC   CL2' '\n                    DC   C' '\nMSG01_LENGTH        DC   X'40202020202020202120'\n                    DC   C' (HEX '\nMSG01_LENGTH_H      DC   CL8' '\n                    DC   C') '\nMSG01_ELEM_OFFSET   DC   CL8' '\n                    DC   C'  '\nMSG01_CLASS_OFFSET  DC   CL8' '\n                    DC   C' '\nMSG01_RESIDENT      DC   CL8' '\n                    DC   CL2' '\nMSG01_TARGET        DC   CL8' '\nMSG01_L             EQU  *-MSG01\n\nMSG_02              DC   C'No ESD items to display'\nMSG_02_L            EQU  *-MSG_02\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDELIST              DSECT\n                      COPY DXDPREF\n\nDXD_FIRST_DISPLAYED   DS   A\nDXD_LAST_DISPLAYED    DS   A\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n              END     DISELIST\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISESD": {"ttr": 264, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00X\\x01\\t3_\\x01\\t6/\\x15E\\x01\\x0f\\x01\\x08\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "2009-12-01T00:00:00", "modifydate": "2009-12-28T15:45:58", "lines": 271, "newlines": 264, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: DISESD                                               *\n*                                                                    *\n*  Function:                                                         *\n*   Obtain the requested LMOD'S ESD info                             *\n*                                                                    *\n*   DISBIND has already established a dialog                         *\n*                                                                    *\n*                                                                    *\n*--------------------------------------------------------------------*\nDISESD   CSECT\nDISESD   AMODE 31\nDISESD   RMODE ANY\n         USING DISESD,R15\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'DISESD'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         DROP  R15\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISESD,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)                    CHAIN\n         ST    R15,8(,R13)                    CHAIN\n         LR    R13,R15                        SET SAVE AREA ADDRESS\n         USING DXDESD,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n* ------------------------------------------------------------------- *\n*        OBTAIN AND INITIALIZE ESD BUFFER                             *\n* ------------------------------------------------------------------- *\n         ITRACE ID=GET_SECT\n         IEWBUFF FUNC=GETBUF,                                          +\n               PREFIX=IBMESD,                                          +\n               TYPE=ESD\n         ST    R8,DXD_BUFFER\n         ITRACE ID=INIT_ESD,                                           +\n               RDATA1=R8,                                              +\n               RDATA2=R7\n         IEWBUFF FUNC=INITBUF,                                         +\n               PREFIX=IBMESD,                                          +\n               TYPE=ESD\n         XC    DXD_CURSOR,DXD_CURSOR\n*--------------------------------------------------------------------*\n*                                                                    *\n*--------------------------------------------------------------------*\nESD0000  DS    0H\n         ITRACE ID=GETD_ESD,                                           +\n               DATA1=(DISCOMM_CSECT_NAME_LENGTH,2),                    +\n               DATA2=DISCOMM_CSECT\n         L     R8,DXD_BUFFER\n         LA    R7,IBMESD_ESDH_END\n         IEWBIND FUNC=GETD,                                            +\n               VERSION=5,                                              +\n               WORKMOD=DISCOMM_DIALOG_WORKMOD,                         +\n               CLASS=B_ESD,                                            +\n               SECTION=DISCOMM_CSECT_NAME_LENGTH,                      +\n               AREA=IBMESD_IEWBESD,                                    +\n               CURSOR=DXD_CURSOR,                                      +\n               COUNT=DXD_ESD_RETURNED,                                 +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_IEWBIND,COMPLETE)\n         ITRACE ID=GETD_RC,                                            +\n               DATA1=(DXD_RETURN_CODE,4),                              +\n               DATA2=(DXD_REASON_CODE,4)\n         CLC   DXD_RETURN_CODE,F8\n         BH    ERR0010\n         BE    ERR0020                   NO DATA\n         CLC   DXD_RETURN_CODE,F4\n         BL    ESD0020\n         CLC   DXD_REASON_CODE,X_83000800\n         BE    ESD0020\n         CLC   DXD_REASON_CODE,X_83000801\n         BE    EXIT0000\nESD0020  DS    0H\n         ICM   R6,15,DXD_ESD_RETURNED\n         LA    R7,IBMESD_ESDH_END\n         USING IBMESD_ESD_ENTRY,R7\nESD0030  DS    0H\n         ITRACE ID=ESD,                                                +\n               RDATA1=R7,                                              +\n               RDATA2=R6\n         GETMAIN RU,                                                   +\n               LV=ESD_DSECT_L,                                         +\n               LOC=ANY\n         LR    R5,R1\n         USING ESD_DSECT,R5\n         L     R1,DISCOMM_ESD_NBR\n         LA    R1,1(,R1)\n         ST    R1,DISCOMM_ESD_NBR\n         MVC   ESD_EYE,ESD_ID\n         MVC   ESD_NAME,COMM_BLANKS\n         MVC   ESD_RESIDENT,COMM_BLANKS\n         MVC   ESD_TARGET,COMM_BLANKS\n         SR    R1,R1\n         ICM   R1,3,IBMESD_ESD_NAME_CHARS\n         BZ    ESD0050\n         L     R2,IBMESD_ESD_NAME_PTR\n         C     R1,F8\n         BNH   ESD0040\n         L     R1,F8\nESD0040  DS    0H\n         BCTR  R1,0\n         EX    R1,NAME_MVC\nESD0050  DS    0H\n         MVC   ESD_TYPE,IBMESD_ESD_TYPE\n         MVC   ESD_TYPE_QUAL,IBMESD_ESD_TYPE_QUAL\n         SR    R1,R1\n         ICM   R1,3,IBMESD_ESD_RESIDENT_CHARS\n         BZ    ESD0070\n         L     R2,IBMESD_ESD_RESIDENT_PTR\n         C     R1,F8\n         BNH   ESD0060\n         L     R1,F8\nESD0060  DS    0H\n         BCTR  R1,0\n         EX    R1,RES_MVC\nESD0070  DS    0H\n         ICM   R1,3,IBMESD_ESD_TARGET_CHARS\n         BZ    ESD0090\n         C     R1,F8\n         BNH   ESD0080\n         L     R1,F8\nESD0080  DS    0H\n         BCTR  R1,0\n         L     R2,IBMESD_ESD_TARGET_PTR\n         EX    R1,TARG_MVC\nESD0090  DS    0H\n         MVC   ESD_LENGTH,IBMESD_ESD_LENG\n         MVC   ESD_ELEM_OFFSET,IBMESD_ESD_ELEM_OFFSET\n         MVC   ESD_CLASS_OFFSET,IBMESD_ESD_CLASS_OFFSET\n         CLC   ESD_NAME,B_TEXT\n         BNE   ESD0100\n         MVC   DISCOMM_CSECT_LENGTH,IBMESD_ESD_LENG\n         ITRACE ID=LENGTH,                                             +\n               DATA1=(DISCOMM_CSECT_LENGTH,4)\n         UNPK  COMM_INFO_01(9),DISCOMM_CSECT_LENGTH(5)\n         TR    COMM_INFO_01(8),COMM_HEXCHAR\n         L     R1,COMM_OSSPFD\n         USING OSSPFD,R1\n         MVC   SPF_LENGTH,COMM_INFO_01\nESD0100  DS    0H\n         CLC   DISCOMM_CSECT,ESD_NAME\n         BNE   ESD0110\n         MVC   DISCOMM_CSECT_EP,ESD_ELEM_OFFSET\nESD0110  DS    0H\n         ICM   R1,15,DISCOMM_ESD_NEXT\n         BZ    ESD0120\nPREV     USING ESD_DSECT,R1\n         ST    R5,PREV.ESD_PREV\n         DROP  PREV\nESD0120  DS    0H\n         MVC   ESD_NEXT,DISCOMM_ESD_NEXT\n         ST    R5,DISCOMM_ESD_NEXT\n         LA    R7,IBMESD_ESD_END\n         BCT   R6,ESD0030\n         CLC   DXD_REASON_CODE,X_83000800\n         BNE   ESD0000\n*--------------------------------------------------------------------*\n*                                                                    *\n*--------------------------------------------------------------------*\n         L     R8,DXD_BUFFER\n         IEWBUFF FUNC=FREEBUF,                                         +\n               PREFIX=IBMESD,                                          +\n               TYPE=ESD\n         B     EXIT0000\n*--------------------------------------------------------------------*\n*                                                                    *\n*--------------------------------------------------------------------*\nNAME_MVC MVC   ESD_NAME(0),0(R2)\nRES_MVC  MVC   ESD_RESIDENT(0),0(R2)\nTARG_MVC MVC   ESD_TARGET(0),0(R2)\n*--------------------------------------------------------------------*\n*                                                                    *\n*--------------------------------------------------------------------*\nERR0010  DS    0H\n         DC    H'1'\nERR0020  DS    0H\n         DC    H'2'\n*--------------------------------------------------------------------*\n*                                                                    *\n*--------------------------------------------------------------------*\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START     DC   Q(DXDESD)\nF4            DC   F'4'\nF8            DC   F'8'\nB_ESD         DC   XL2'5',C'B_ESD'\nB_TEXT        DC   CL8'B_TEXT'\nX_83000800    DC   X'83000800'\nX_83000801    DC   X'83000801'\nEDIT_WORD     DC   X'40202020202020202120'\nESD_ID        DC   CL8'ESD'\n\n         IEWBUFF FUNC=MAPBUF,                                          +\n               TYPE=ESD,                                               +\n               PREFIX=IBMESD,                                          +\n               HEADREG=R8,                                             +\n               ENTRYREG=R7,                                            +\n               SIZE=50,                                                +\n               VERSION=5\n\n              IEWBIND MF=(L,IEWBIND_I)\nIEWBIND_L     EQU  *-IEWBIND_I\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDESD           DSECT\n                 COPY DXDPREF\nDXD_RETURN_CODE  DS   F\nDXD_REASON_CODE  DS   F\n\nDXD_BUFFER       DS   A\n\nDXD_CURSOR       DS   F\nDXD_ESD_RETURNED DS   F\n\nDXD_IEWBIND      DS   0F,(IEWBIND_L)X\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n         END  DISESD\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISGEN": {"ttr": 9737, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x14\\x01\\x10\\x01_\\x01\\x10\\x02\\x7f\\t1\\x02`\\x02P\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2010-01-15T00:00:00", "modifydate": "2010-01-27T09:31:14", "lines": 608, "newlines": 592, "modlines": 0, "user": "RLRICE"}, "text": "* -------------------------------------------------------------------*\n*                                                                    *\n*  Module name: DISGEN                                               *\n*                                                                    *\n*  Function:                                                         *\n*   Generate source code                                             *\n*                                                                    *\n*                                                                    *\n*  Output data set name is in DISCOMM_OUTPUT_DSN.  DISMAIN will      *\n*  have already verified the data set does exist and is fixed        *\n*  or fixed blocked with LRECL=80.  The DCB is DISPUNCH_DCB.         *\n*  The DCB is already open.                                          *\n*                                                                    *\n* -------------------------------------------------------------------*\nDISGEN   CSECT\nDISGEN   AMODE 31\nDISGEN   RMODE ANY\n         USING DISGEN,R15\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'DISGEN'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISGEN,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR              WORK AREA\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        SET SAVE AREA ADDRESS\n         USING DXDGEN,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n         MVC   DISCOMM_SOURCE(DISCOMM_SOURCE_L),COMM_BLANKS\n         MVC   DXD_EDITWORD_FILL,COMM_BLANKS\n* ------------------------------------------------------------------- *\n*        RESET                                                        *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         ICM   R7,15,DISCOMM_ALL_AREA_NEXT    1ST DATA/INSTR BLOCK\n         BZ    INIT0030                       NO AREAS\n         USING AREA_DSECT,R7\n         OC    AREA_BEGIN,AREA_BEGIN          DISP ZERO?\n         BZ    INIT0020                       YES\n         DC    H'0'\nINIT0020 DS    0H\n         NI    AREA_FLAGS,255-$AREA_LABEL_GENNED\n         ICM   R7,15,AREA_NEXT                NEXT AREA\n         BNZ   INIT0020\n         DROP  R7\nINIT0030 DS    0H\n         ICM   R5,15,DISCOMM_BASE_NEXT        1ST BASE\n         BZ    INIT0050\n         USING BASE_DSECT,R5\nINIT0040 DS    0H\n         MVI   BASE_FLAGS,0                   RESET FLAGS\n         ICM   R5,15,BASE_NEXT                NEXT BASE\n         BNZ   INIT0040\n* ------------------------------------------------------------------- *\n*        Reset flags in USING blocks                                  *\n* ------------------------------------------------------------------- *\nINIT0050 DS    0H\n         ICM   R5,15,DISCOMM_USING_NEXT       FIRST USING\n         BZ    INIT0070\n         USING USING_DSECT,R5\nINIT0060 DS    0H\n         NI    USING_FLAG,255-$USING_GENNED-$DROP_GENNED\n         ICM   R5,15,USING_NEXT\n         BNZ   INIT0060\n* ------------------------------------------------------------------- *\n*        Generate CSECT statement                                     *\n* ------------------------------------------------------------------- *\nINIT0070 DS    0H\n         DS    0H\n         MVC   DISCOMM_SOURCE_LABEL(L'DISCOMM_CSECT),DISCOMM_CSECT\n         MVC   DISCOMM_SOURCE_OPCODE,OP_CSECT\n         L     R15,V_DISOUT\n         BALR  R14,R15\n* ------------------------------------------------------------------- *\n*        Generate ENTRY statements                                    *\n* ------------------------------------------------------------------- *\nGEN0010  DS    0H\n         ICM   R7,15,DISCOMM_ESD_NEXT         1ST ESD\n         BZ    GEN0040\n         USING ESD_DSECT,R7\nGEN0020  DS    0H\n         CLC   =C'LD',ESD_TYPE                'LD'?\n         BNE   GEN0030                        NO\n         MVC   DISCOMM_SOURCE_OPCODE,OP_ENTRY\n         MVC   DISCOMM_SOURCE_OPERAND1(L'ESD_NAME),ESD_NAME\n         L     R15,V_DISOUT\n         BALR  R14,R15\nGEN0030  DS    0H\n         ICM   R7,15,ESD_NEXT\n         BNZ   GEN0020\n         DROP  R7\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*        Top of generation loop                                       *\n*                                                                     *\n*   All object code will be described by AREA blocks.                 *\n*                                                                     *\n*   R7   AREA   block                                                 *\n*   R6   LABEL  block                                                 *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nGEN0040  DS    0H\n         ICM   R7,15,DISCOMM_ALL_AREA_NEXT       1ST DATA/INSTR BLOCK\n         BNZ   GEN0050\n         USING AREA_DSECT,R7\nGEN0050  DS    0H\n         ITRACE ID=GEN0050,                                            +\n               DATA1=AREA_BEGIN,                                       +\n               DATA2=AREA_END\n         ICM   R6,15,AREA_LABEL                  LABEL BLOCK ADDRESS?\n         BZ    GEN0100                           NO\n         USING LABEL_DSECT,R6\nGEN0060  DS    0H\n         TM    AREA_FLAGS,$AREA_LABEL_GENNED     LABEL GENNED?\n         BO    GEN0100                           YES\n         MVC   DISCOMM_SOURCE_LABEL,LABEL_NAME   COPY LABEL\n         MVC   DISCOMM_SOURCE_OPCODE,OP_DS       SET OPCODE\n         MVC   DISCOMM_SOURCE_OPERAND1(2),=C'0C' USE \"0C\" ON DATA AREAS\n         CLI   AREA_TYPE,$AREA_DATA              DATA LABEL?\n         BE    GEN0070                           YES\n         MVC   DISCOMM_SOURCE_OPERAND1(2),=C'0H' USE \"0H'               S\nGEN0070  DS    0H\n         UNPK  DISCOMM_SOURCE_DISP(9),AREA_BEGIN(5)\n         TR    DISCOMM_SOURCE_DISP,COMM_HEXCHAR\n         MVI   DISCOMM_SOURCE_DISP+8,C' '\n         L     R15,V_DISOUT\n         BALR  R14,R15\nGEN0080  DS    0H\n         ICM   R6,15,LABEL_NEXT                  ANOTHER LABEL HERE?\n         BNZ   GEN0060                           YES\n         OI    AREA_FLAGS,$AREA_LABEL_GENNED     SET FLAG\n* ------------------------------------------------------------------- *\n*        Generate USING or DROP statements                            *\n* ------------------------------------------------------------------- *\nGEN0100  DS    0H\n         ICM   R5,15,DISCOMM_USING_NEXT       1ST USING\n         USING USING_DSECT,R5\n         BZ    GEN0280                        NO USINGS\nGEN0110  DS    0H\n         ITRACE ID=USING,                                              +\n               DATA1=(AREA_BEGIN,4),                                   +\n               DATA2=(USING_BEGIN,4)\n         CLC   AREA_BEGIN,USING_BEGIN         AT OR ABOVE THIS AREA?\n         BL    GEN0270                        NO\n         TM    USING_FLAG,$USING_GENNED       USING ALREADY GENNED?\n         BO    GEN0220                        YES\n         ITRACE ID=GEN_USNG,                                           +\n               DATA1=(USING_BEGIN,4),                                  +\n               DATA2=(USING_REGISTER,4)\n         OI    USING_FLAG,$USING_GENNED       SET FLAG\n         CLC   USING_NAME,COMM_BLANKS         NAME BLANK?\n         BE    GEN0200                        YES\n         MVC   DISCOMM_SOURCE_LABEL,USING_NAME\n         LA    R1,DISCOMM_SOURCE_LABEL\n         BAL   R15,SCAN0000                   FIND END OF NAME\n         LA    R0,DISCOMM_SOURCE_LABEL+7\n         CR    R1,R0                          BEYOND 8 BYTE LABEL?\n         BH    GEN0210                        YES.. LEAVE ADDR ALONE\nGEN0200  DS    0H\n         LA    R1,DISCOMM_SOURCE_OPCODE       SET OUTPUT ADDRESS\nGEN0210  DS    0H\n         MVC   0(L'OP_USING,R1),OP_USING      SET OPCODE\n         LA    R1,L'OP_USING+1(,R1)           UPDATE OUTPUT ADDRESS\n         B     GEN0230\nGEN0220  DS    0H\n         ITRACE ID=DROP,                                               +\n               DATA1=(USING_END,4),                                    +\n               DATA2=(AREA_END,4)\n         CLC   AREA_END,USING_END             AT OR ABOVE END OF AREA?\n         BL    GEN0270                        NO\n         TM    USING_FLAG,$DROP_GENNED        DROP ALREADY GENNED?\n         BO    GEN0270                        YES\n         ITRACE ID=GEN_DROP\n         OI    USING_FLAG,$DROP_GENNED        SET FLAG\n         MVC   DISCOMM_SOURCE_OPCODE,OP_DROP  SET OPCODE\n         LA    R1,DISCOMM_SOURCE_OPERAND1\n         CLC   USING_NAME,COMM_BLANKS         USING NAME?\n         BE    GEN0250                        NO\n         MVC   DISCOMM_SOURCE_OPERAND1(L'USING_NAME),USING_NAME\n         B     GEN0260\nGEN0230  DS    0H\n         MVC   0(L'USING_DSECT_LABEL,R1),USING_DSECT_LABEL\n         CLC   USING_DSECT_LABEL,COMM_BLANKS  LABEL NAME?\n         BNE   GEN0240                        YES\n         MVC   0(L'USING_DSECT_NAME,R1),USING_DSECT_NAME\nGEN0240  DS    0H\n         BAL   R15,SCAN0000                   FIND END OF NAME\n         MVI   0(R1),C','                     INSERT COMMA\nGEN0250  DS    0H\n         MVC   1(3,R1),USING_CHAR_REGISTER    COPY REGISTER NUMBER\nGEN0260  DS    0H\n         L     R15,V_DISOUT\n         BALR  R14,R15\nGEN0270  DS    0H\n         ITRACE ID=NEXTUSNG\n         ICM   R5,15,USING_NEXT               NEXT USING\n         BNZ   GEN0110\n         DROP  R5\n* ------------------------------------------------------------------- *\n*        Generate USING or DROP for BASE statements                   *\n* ------------------------------------------------------------------- *\nGEN0280  DS    0H\n         ICM   R5,15,DISCOMM_BASE_NEXT        1ST BASE\n         BZ    GEN0380\n         USING BASE_DSECT,R5\nGEN0290  DS    0H\n         ITRACE ID=BASE,                                               +\n               DATA1=BASE_BEGIN,                                       +\n               DATA2=AREA_BEGIN\n         CLC   BASE_BEGIN,AREA_BEGIN          BASE BELOW THIS AREA\n         BH    GEN0370                        YES\n         TM    BASE_FLAGS,$BASE_GENNED        USING GENNED?\n         BO    GEN0360                        YES\n         ITRACE ID=BASEUSNG,                                           +\n               DATA1=BASE_BEGIN,                                       +\n               DATA2=AREA_BEGIN\n         OI    BASE_FLAGS,$BASE_GENNED        SET FLAG\n         MVC   DISCOMM_SOURCE_OPCODE,OP_USING\n         MVC   DISCOMM_SOURCE_OPERAND1(L'DISCOMM_CSECT),DISCOMM_CSECT\n         LA    R1,DISCOMM_SOURCE_OPERAND1\n         BAL   R15,SCAN0000                   BLANK?\n         ICM   R0,15,BASE_DISP                DISP BASE REFERS TO\n         BZ    GEN0350\n         MVI   0(R1),C'+'                     INSERT A PLUS\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   DXD_EDITWORD,EDITWORD          INITIALIZE EDIT WORD\n         ED    DXD_EDITWORD,COMM_DWORD+4      EDIT DISP\n         LA    R2,DXD_EDITWORD\nGEN0320  DS    0H\n         CLI   0(R2),C' '                     BLANK?\n         BNE   GEN0330                        NO\n         LA    R2,1(,R2)                      NEXT\n         B     GEN0320\nGEN0330  DS    0H\n         MVC   1(8,R1),0(R2)                  COPY DISP\n         BAL   R15,SCAN0000                   FIND BLANK\nGEN0350  DS    0H\n         MVI   0(R1),C','\n         MVI   1(R1),C'R'\n         SR    R2,R2\n         IC    R2,BASE_REGISTER               BASE\n         SLL   R2,1                           MULTIPLY BY 2\n         LA    R2,REG_NAMES(R2)\n         MVC   2(2,R1),0(R2)\n         L     R15,V_DISOUT\n         BALR  R14,R15\n         B     GEN0370\nGEN0360  DS    0H\n         CLC   BASE_END,AREA_END              ABOVE THIS AREA\n         BE    GEN0370                        NO\n         BH    GEN0370                        NO\n         TM    BASE_FLAGS,$BASE_DROPPED       DROPPED?\n         BO    GEN0370                        YES\n         ITRACE ID=BASEDROP,                                           +\n               DATA1=BASE_BEGIN,                                       +\n               DATA2=AREA_BEGIN\n         OI    BASE_FLAGS,$BASE_DROPPED       SET FLAG\n         MVC   DISCOMM_SOURCE_OPCODE,OP_DROP\n         MVI   DISCOMM_SOURCE_OPERAND1,C'R'\n         SR    R2,R2\n         IC    R2,BASE_REGISTER               BASE\n         SLL   R2,1                           MULTIPLY BY 2\n         LA    R2,REG_NAMES(R2)\n         MVC   DISCOMM_SOURCE_OPERAND1+1(2),0(R2)\n         L     R15,V_DISOUT\n         BALR  R14,R15\nGEN0370  DS    0H\n         ICM   R5,15,BASE_NEXT\n         BNZ   GEN0290\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        R7    AREA base                                              *\n*        R5    Address of instruction or data                         *\n*        R4    OPCODE base                                            *\n*        R3    FORMAT base                                            *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nGEN0380  DS    0H\n         ITRACE ID=GENAREA,                                            +\n               DATA1=AREA_BEGIN,                                       +\n               DATA2=0(R7)\n         MVC   DISCOMM_GEN_LENGTH,AREA_LENGTH SET LENGTH\n         ICM   R5,15,AREA_BEGIN               DISP TO OBJECT CODE\n         A     R5,DISCOMM_CSECT_TEXT          PLUS TEXT BASE\n         CLI   AREA_TYPE,$AREA_DATA           AT A DATA AREA?\n         BE    GEN0390                        YES\n         CLI   AREA_TYPE,$AREA_INSTRUCTION    AT AN INSTRUCTION?\n         BE    GEN0400                        YES\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nGEN0390  DS    0H\n         ITRACE ID=GEN_DC\n         L     R4,DISCOMM_OPCODE_TABLE_ADDR   OPCODE TABLE\n         L     R4,0(R4)                       DC ENTRY\n         USING OPCODE_DSECT,R4\n         L     R15,V_GENDC                    GENDC ENTRY POINT\n         BALR  R14,R15                        GENERATE DC\n         B     GEN0500\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nGEN0400  DS    0H\n         ICM   R5,15,AREA_BEGIN               INSTRUCTION DISP\n         ST    R5,DISCOMM_GEN_DISP            SET GEN DISP\n         A     R5,DISCOMM_CSECT_TEXT          PLUS TEXT BASE\n         SR    R2,R2\n         IC    R2,0(R5)                       OPCODE\n         SLL   R2,2                           MULTIPLY BY 4\n         A     R2,DISCOMM_OPCODE_TABLE_ADDR   PLUS OPCODE TABLE BASE\n         L     R4,0(R2)                       OPCODE ENTRY\n         ITRACE ID=GEN_INST,                                           +\n               RDATA1=R4,                                              +\n               DATA2=(0(R5),1)\n         ICM   R15,15,OPCODE_EXIT             MODIFICATION EXIT?\n         BZ    GEN0410                        NO\n         ST    R4,DXD_EXIT_PARM_1             OPCODE ENTRY ADDR\n         ST    R5,DXD_EXIT_PARM_2             INSTRUCTION TEXT ADDR\n         LA    R1,DXD_EXIT_PARMS\n         ITRACE ID=CALLEXIT,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R15\n         BALR  R14,R15\n         ITRACE ID=EXIT_X,                                             +\n               DATA1=(OPCODE_MNEMONIC,5)\nGEN0410  DS    0H\n         SR    R1,R1\n         ICM   R1,3,OPCODE_LENGTH             INSTRUCTION LENGTH\n         BCTR  R1,0\n         XC    COMM_INFO_01(8),COMM_INFO_01\n         EX    R1,OP_MVC                      COPY INSTRUCTION TEXT\n         ITRACE ID=OPCODE,                                             +\n               RDATA1=R4,                                              +\n               DATA2=COMM_INFO_01\n         LA    R3,FORMAT_TABLE\n         USING FORMAT_DSECT,R3\nGEN0420  DS    0H\n         CLC   FORMAT_FORMAT,OPCODE_FORMAT    LOCATED FORMAT?\n         BE    GEN0430\n         LA    R3,FORMAT_L(,R3)               NEXT FORMAT\n         CLI   0(R3),X'FF'                    END OF TABLE?\n         BNE   GEN0420                        NO\n         DC    H'0'\nGEN0430  DS    0H\n         ICM   R15,15,FORMAT_ADDR\n         ITRACE ID=FORMAT,                                             +\n               RDATA1=R3,                                              +\n               RDATA2=R15\n         BALR  R14,R15                        CALL SOURCE FORMATTER\n         ITRACE ID=FORMAT_X\nGEN0440  DS    0H\n         SR    R15,R15\n* ------------------------------------------------------------------- *\n*                                                                     *\n*       Generate the displacement, and the object text for the        *\n*       current instruction or DC.                                    *\n*                                                                     *\n*       Recompute the text address (R5)                               *\n*                                                                     *\n* ------------------------------------------------------------------- *\nGEN0500  DS    0H\n         STC   R15,DXD_GEN_RC\n         ITRACE ID=GEN_RC,                                             +\n               RDATA1=R15\n         L     R5,DISCOMM_GEN_DISP\n         A     R5,DISCOMM_CSECT_TEXT\n         ICM   R1,15,DISCOMM_GEN_LENGTH       LENGTH\n         BZ    GEN0520                        NO OBJECT AT THIS POINT\n         BCTR  R1,0\n         EX    R1,MVC_01\n         CLI   AREA_TYPE,$AREA_INSTRUCTION    AN INSTRUCTION?\n         BNE   GEN0510                        NO\n         UNPK  DXD_UNPACK_OUT_1(5),DXD_UNPACK_IN+0(3)\n         UNPK  DXD_UNPACK_OUT_2(5),DXD_UNPACK_IN+2(3)\n         UNPK  DXD_UNPACK_OUT_3(5),DXD_UNPACK_IN+4(3)\n         UNPK  DXD_UNPACK_OUT_4(5),DXD_UNPACK_IN+6(3)\n         TR    DXD_UNPACK_OUT_1,COMM_HEXCHAR\n         TR    DXD_UNPACK_OUT_2,COMM_HEXCHAR\n         TR    DXD_UNPACK_OUT_3,COMM_HEXCHAR\n         TR    DXD_UNPACK_OUT_4,COMM_HEXCHAR\n         MVI   DXD_BLANK_1,C' '\n         MVI   DXD_BLANK_2,C' '\n         MVI   DXD_BLANK_3,C' '\n         LA    R2,LENGTH_TABLE(R1)\n         IC    R1,0(R2)\n         EX    R1,MVC_02\n         B     GEN0520\nGEN0510  DS    0H\n         UNPK  DXD_UNPACK_OUT+0(9),DXD_UNPACK_IN+0(5)\n         UNPK  DXD_UNPACK_OUT+8(9),DXD_UNPACK_IN+4(5)\n         TR    DXD_UNPACK_OUT(16),COMM_HEXCHAR\n         ICM   R1,15,DISCOMM_GEN_LENGTH\n         SLL   R1,1\n         BCTR  R1,0\n         EX    R1,MVC_02\nGEN0520  DS    0H\n         TM    OPCODE_FLAGS,$OPCODE_CCA+$OPCODE_CCC+$OPCODE_CCL\n         BZ    GEN0530\n         MVC   DISCOMM_CC,OPCODE_FLAGS        SAVE CONDITION CODE TYPE\n         NI    DISCOMM_CC,$OPCODE_CCA+$OPCODE_CCC+$OPCODE_CCL\n         ITRACE ID=SAVE_CC,                                            +\n               DATA1=(DISCOMM_CC,1)\nGEN0530  DS    0H\n         UNPK  DISCOMM_SOURCE_DISP(9),DISCOMM_GEN_DISP(5)\n         TR    DISCOMM_SOURCE_DISP,COMM_HEXCHAR\n         MVI   DISCOMM_SOURCE_DISP+8,C' '\n         MVC   DISCOMM_SOURCE_OPCODE,OPCODE_MNEMONIC\n         L     R15,V_DISOUT\n         BALR  R14,R15\n         CLI   DXD_GEN_RC,0                   AREA ALL PROCESSED?\n         BNE   GEN0050                        NO\n         ITRACE ID=NEXTAREA,                                           +\n               DATA1=AREA_NEXT\n         ICM   R7,15,AREA_NEXT                NEXT AREA\n         BNZ   GEN0050                        PROCESS THIS AREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ICM   R7,15,DISCOMM_ASM_NEXT         ANY ASSEMBLER SOURCE?\n         BZ    GEN0610                        NO\n         USING ASM_DSECT,R7\nGEN0600  DS    0H\n         L     R15,V_DISOUT\n         BALR  R14,R15\n         ICM   R7,15,ASM_NEXT                 MORE ASSEMBLER SOURCE\n         BNZ   GEN0600                        YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nGEN0610  DS    0H\n         ITRACE ID=GEN_END\n         MVC   DISCOMM_SOURCE_OPCODE,OP_END\n         MVC   DISCOMM_SOURCE_OPERAND1(L'DISCOMM_CSECT),DISCOMM_CSECT\n         L     R15,V_DISOUT\n         BALR  R14,R15\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSCAN0000 DS    0H\n         CLI   0(R1),C' '\n         BER   R15\n         LA    R1,1(,R1)\n         B     SCAN0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMVC_01   MVC   DXD_UNPACK_IN(0),0(R5)\nMVC_02   MVC   DISCOMM_SOURCE_HEX_1(0),DXD_UNPACK_OUT\nOP_MVC   MVC   COMM_INFO_01(0),0(R5)          COPY INSTRUCTION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START           DC   Q(DXDGEN)\nV_DISOUT            DC   V(DISOUT)\nV_GENDC             DC   V(GENDC)\nOP_CSECT            DC   CL6'CSECT'\nOP_END              DC   CL6'END'\nOP_ENTRY            DC   CL6'ENTRY'\nOP_USING            DC   CL6'USING'\nOP_DROP             DC   CL6'DROP'\nOP_DS               DC   CL6'DS'\n\nEDITWORD            DC   X'4020202020202120'\n\nFORMAT_TABLE        DC   AL1($OPCODE_E),VL4(GENE)\n                    DC   AL1($OPCODE_RR1),VL4(GENRR1)\n                    DC   AL1($OPCODE_RR2),VL4(GENRR2)\n                    DC   AL1($OPCODE_RR3),VL4(GENRR3)\n                    DC   AL1($OPCODE_RX),VL4(GENRX)\n                    DC   AL1($OPCODE_S),VL4(GENSI)\n                    DC   AL1($OPCODE_SI),vL4(GENSI)\n                    DC   AL1($OPCODE_RS1),VL4(GENRS1)\n                    DC   AL1($OPCODE_RS2),VL4(GENRS2)\n                    DC   AL1($OPCODE_RS3),VL4(GENRS3)\n                    DC   AL1($OPCODE_SS1),VL4(GENSS1)\n                    DC   AL1($OPCODE_SS2),VL4(GENSS2)\n                    DC   AL1($OPCODE_SS3),AL4(GEN0440)\n                    DC   AL1($OPCODE_SS4),AL4(GEN0440)\n                    DC   AL1($OPCODE_B2S),VL4(GENB2S)\n                    DC   AL1($OPCODE_RRE),VL4(GENRRE)\n                    DC   AL1($OPCODE_REL1),VL4(GENREL1)\n                    DC   AL1($OPCODE_RIL),VL4(GENRIL)\n                    DC   X'FF'\n\nREG_NAMES           DC   CL2'0 '\n                    DC   CL2'1 '\n                    DC   CL2'2 '\n                    DC   CL2'3 '\n                    DC   CL2'4 '\n                    DC   CL2'5 '\n                    DC   CL2'6 '\n                    DC   CL2'7 '\n                    DC   CL2'8 '\n                    DC   CL2'9 '\n                    DC   CL2'10'\n                    DC   CL2'11'\n                    DC   CL2'12'\n                    DC   CL2'13'\n                    DC   CL2'14'\n                    DC   CL2'15'\n                    DC   X'FF'\n\nLENGTH_TABLE        DC   AL1(01)    1\n                    DC   AL1(03)    2\n                    DC   AL1(06)    3\n                    DC   AL1(08)    4\n                    DC   AL1(11)    5\n                    DC   AL1(13)    6\n                    DC   AL1(16)    7\n                    DC   AL1(18)    8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDGEN              DSECT\n                    COPY DXDPREF\n\nDXD_EXIT_PARMS      DS   0A            OPCODE modification exit parms\nDXD_EXIT_PARM_1     DS   A                 OPCODE TABLE ENTRY ADDR\nDXD_EXIT_PARM_2     DS   A                 INSTRUCTION TEXT'S ADDR\n\nDXD_DISP            DS   XL4\n\nDXD_GEN_RC          DS   X\n\nDXD_UNPACK_IN       DS   CL8\n\nDXD_UNPACK_OUT      DS   0C\nDXD_UNPACK_OUT_1    DS   XL4\nDXD_BLANK_1         DS   X\nDXD_UNPACK_OUT_2    DS   XL4\nDXD_BLANK_2         DS   X\nDXD_UNPACK_OUT_3    DS   XL4\nDXD_BLANK_3         DS   X\nDXD_UNPACK_OUT_4    DS   XL4\n                    DS   X\n\nDXD_EDITWORD        DS   CL8\nDXD_EDITWORD_FILL   DS   CL8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFORMAT_DSECT        DSECT\nFORMAT_FORMAT       DS   X\nFORMAT_ADDR         DS   XL4\nFORMAT_L            EQU  *-FORMAT_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n               END  DISGEN\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISKLIST": {"ttr": 5901, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x01\\x01\\t6O\\x01\\x10\\x01O\\x10(\\x03<\\x03<\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2009-12-30T00:00:00", "modifydate": "2010-01-14T10:28:01", "lines": 828, "newlines": 828, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: DISKLIST                                              *\n*                                                                     *\n*  FUNCTION:                                                          *\n*    Display/allow definition of libraries of pre-processed DSECTs.   *\n*                                                                     *\n*                                                                     *\n*  The disassembler allows actual assembler source to be used to      *\n*  \"map\" data areas.  DSECTs can be either processed during           *\n*  dis-assembly or pre-processed by DISASMU1.  The info obtained      *\n*  from pre-processing DSECTs is recorded in VSAM KSDSes.             *\n*                                                                     *\n*  This module displays the KSDSes currently allocated and allows     *\n*  the user to change/add/or remove a data set(s).                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISKLIST CSECT\nDISKLIST AMODE 31\nDISKLIST RMODE ANY\n         USING DISKLIST,R15\n         B     MOD0000                           SKIP EYECATCHER\nMODID    DC    CL8'DISKLIST'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                   SAVE REGS\n         LR    R10,R15                           SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISKLIST,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR                 WORK AREA\n         A     R15,DXD_START                     PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         USING DXDKLIST,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R1\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n         USING KSDS_DSECT,R7\n         USING IFGACB,KSDS_ACB\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        If R1 is zero display existing KSDS list                     *\n*        If R1 not zero, display list passed in R1                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ST    R1,DXD_KSDS_NEXT\n         ST    R1,DXD_FIRST_DISPLAYED\n         LTR   R1,R1                             R1 ZERO?\n         BNZ   INIT0030                          NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        In order to allow the user to \"cancel\" changes,              *\n*        first \"copy\" the existing KSDS chain.                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=COPYKSDS\n         LA    R2,DXD_KSDS_PREV\nPREV     USING KSDS_DSECT,R2\n         ICM   R7,15,DISCOMM_KSDS_NEXT           FIRST KSDS\n         BZ    INIT0030\nINIT0010 DS    0H\n         TM    KSDS_FLAGS,$KSDS_OPEN             IS THE KSDS OPEN\n         BNO   INIT0020                          NO\n         ITRACE ID=CLOSE,                                              +\n               DATA1=KSDS_DDNAME\n         CLOSE KSDS_ACB,                         CLOSE THE ACB         +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_CLOSE)\n         LTR   R15,R15                           SUCCESSFUL?\n         BNZ   ERR0010                           NO\n         NI    KSDS_FLAGS,255-$KSDS_OPEN         RESET FLAG\nINIT0020 DS    0H\n         MVI   DAIR_FUNC,$DAIR_FREE              SET DAIR FUNCTION\n         MVC   DAIR_DD,KSDS_DDNAME               SET DDNAME\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15                           DEALLOCATE KSDS\n         OC    DAIR_R15,DAIR_R15                 SUCCESSFUL?\n         BNZ   ERR1000                           NO\n         GETMAIN RU,                             GETMAIN NEW KSDS BLOCK+\n               LV=KSDS_DSECT_L,                                        +\n               LOC=ANY\nNEW      USING KSDS_DSECT,R1\n         ITRACE ID=COPYKSDS,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R7\n         MVC   NEW.KSDS_DSECT(KSDS_DSECT_L),KSDS_DSECT\n         ST    R1,PREV.KSDS_NEXT\n         LR    R2,R1\n         ICM   R7,15,KSDS_NEXT                   ANOTHER KSDS?\n         BNZ   INIT0010                          YES.. PROCESS IT\n         DROP  NEW,PREV\n         MVC   DXD_FIRST_DISPLAYED,DXD_KSDS_NEXT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0030 DS    0H\n         L     R0,SPF_VDEPTH                     NBR OF LINES\n         SLL   R0,2                              MULTIPLY BY 4\n         ST    R0,DXD_KSDS_TABLE_SIZE\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ST    R1,DXD_KSDS_TABLE                 SAVE ADDRESS\n         ITRACE ID=A_TABLE,                                            +\n               RDATA1=R1,                                              +\n               DATA2=(DXD_KSDS_TABLE_SIZE,4)\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         ITRACE ID=CLEAR\n         L     R0,DISCOMM_VDATA_ADDR\n         L     R1,DISCOMM_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                            INITIALIZE VDATA\n         L     R0,DXD_KSDS_TABLE\n         L     R1,DXD_KSDS_TABLE_SIZE\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                            INIT AREA TABLE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R6,SPF_VWIDTH                     SCREEN WIDTH\n         SH    R6,=Y(MSG01_L)                    MINUS WIDTH IN USE\n         SRL   R6,1                              DIVIDE BY 2\n         A     R6,DISCOMM_VDATA_ADDR             PLUS VDATA ADDR\n         L     R15,SPF_VDEPTH                    NBR OF LINES\nMAIN0020 DS    0H\n         MVC   0(MSG01_L,R6),MSG01               INITIALIZE\n         A     R6,SPF_VWIDTH                     NEXT LINE\n         BCT   R15,MAIN0020                      LOOP\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R6,SPF_VWIDTH                     SCREEN WIDTH\n         SH    R6,=Y(MSG01_L)                    MINUS WIDTH IN USE\n         SRL   R6,1                              DIVIDE BY 2\n         A     R6,DISCOMM_VDATA_ADDR             PLUS VDATA ADDR\n         USING MSG01,R6\n         MVC   DXD_LINES_REMAINING,SPF_VDEPTH\nMAIN0030 DS    0H\n         L     R4,DXD_KSDS_TABLE                 FIRST 'SLOT'\n         XC    DXD_NBR_DISPLAYED,DXD_NBR_DISPLAYED\n         ICM   R7,15,DXD_FIRST_DISPLAYED         FIRST TO DISPLAY\n         BZ    MAIN0060                          NOTHING DEFINED YET\nMAIN0040 DS    0H\n         ITRACE ID=KSDS,                                               +\n               RDATA1=R7,                                              +\n               DATA2=KSDS_DDNAME\n         ST    R7,DXD_LAST_DISPLAYED             SAVE ADDR\n         ST    R7,0(R4)                          SAVE ADDR\n         MVC   MSG01_DSN,KSDS_DSNAME             COPY DATA SET NAME\n         LA    R1,1                              CONSTANT 1\n         AH    R1,DXD_NBR_DISPLAYED              PLUS TOTAL SO FAR\n         STH   R1,DXD_NBR_DISPLAYED              SAVE TOTAL\n         LA    R4,4(,R4)                         NEXT IN ADDR TABLE\n         A     R6,SPF_VWIDTH                     NEXT LINE\n         L     R15,DXD_LINES_REMAINING\n         BCTR  R15,0\n         ST    R15,DXD_LINES_REMAINING\n         LTR   R15,R15\n         BNZ   MAIN0050\n         B     MAIN0060\nMAIN0050 DS    0H\n         ICM   R7,15,KSDS_NEXT\n         BNZ   MAIN0040\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0060 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_DISKLIST    SET PANEL NAME\n         MVC   SESS_DISP_VDATA_ADDR,DISCOMM_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DISCOMM_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP                 DISP ENTRY POINT\n         BALR  R14,R15                           DISPLAY\n         ITRACE ID=DISP_RC,                                            +\n               RDATA1=R15,                                             +\n               DATA2=SPF_ZVERB\n         LTR   R2,R15                            RC = 0?\n         BNZ   MAIN0500                          NO\n         CLC   ABEND,SPF_ZCMD                    ABEND\n         BE    ABEND000                          YES\n         CLC   CANCEL,SPF_ZCMD                   CANCEL?\n         BE    MAIN1000                          YES\n         CLC   CAN,SPF_ZCMD                      CAN(CEL)?\n         BE    MAIN1000                          YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Verify all DSNs                                              *\n*          cataloged                                                  *\n*          are KSDSes                                                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R6,SPF_VWIDTH                     SCREEN WIDTH\n         SH    R6,=Y(MSG01_L)                    MINUS WIDTH IN USE\n         SRL   R6,1                              DIVIDE BY 2\n         A     R6,DISCOMM_VDATA_ADDR             PLUS VDATA ADDR\n         MVC   DXD_LINES_REMAINING,SPF_VDEPTH    NBR OF LINES\n         NI    DXD_FLAGS,255-$DXD_ERROR          RESET FLAG\nMAIN0070 DS    0H\n         MVC   MSG01_MSG,COMM_BLANKS             RESET MSG\n         OC    MSG01_DSN,COMM_BLANKS             TRANSLATE TO UPPER\n         CLC   MSG01_DSN,COMM_BLANKS             BLANK?\n         BE    MAIN0090                          YES\n         MVC   DSINFO_DSN,MSG01_DSN              COPY DSN\n         LA    R1,DSINFREQ\n         L     R15,V_DISDSINF                    DISDSINF ENTRY POINT\n         BALR  R14,R15\n         ITRACE ID=DINFO_RC,                                           +\n               RDATA1=R15,                                             +\n               DATA2=(DSINFO_DATASET_TYPE,1)\n         LTR   R15,R15                           OK?\n         BNZ   MAIN0080                          NO\n         CLI   DSINFO_DATASET_TYPE,$DATA_TYPE_VSAM\n         BE    MAIN0090                          YES\n         ITRACE ID=NON_VSAM\n         OI    DXD_FLAGS,$DXD_ERROR              SET ERROR FLAG\n         MVC   MSG01_MSG(ERR01_L),ERR01\n         B     MAIN0090\nMAIN0080 DS    0H\n         ITRACE ID=DSINFERR\n         OI    DXD_FLAGS,$DXD_ERROR              SET ERROR FLAG\n         MVC   MSG01_MSG,COMM_MSG_1              COPY ERROR MESSAGE\nMAIN0090 DS    0H\n         A     R6,SPF_VWIDTH                     NEXT LINE\n         L     R15,DXD_LINES_REMAINING\n         BCTR  R15,0\n         ST    R15,DXD_LINES_REMAINING\n         LTR   R15,R15\n         BNZ   MAIN0070\n         TM    DXD_FLAGS,$DXD_ERROR              ANY ERRORS?\n         BO    MAIN0060                          DISPLAY W/MSG(S)\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Determine if any KSDSes were                                 *\n*          updated                                                    *\n*          removed                                                    *\n*          added                                                      *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R6,SPF_VWIDTH                     SCREEN WIDTH\n         SH    R6,=Y(MSG01_L)                    MINUS WIDTH IN USE\n         SRL   R6,1                              DIVIDE BY 2\n         A     R6,DISCOMM_VDATA_ADDR             PLUS VDATA ADDR\n         MVC   DXD_LINES_REMAINING,SPF_VDEPTH    NBR OF LINES\n         L     R4,DXD_KSDS_TABLE                 FIRST KSDS\nMAIN0130 DS    0H\n         L     R7,0(,R4)                         KSDS BLOCK IF USED\n         ITRACE ID=MAIN0130,                                           +\n               RDATA1=R4,                                              +\n               RDATA2=R7\n         OC    MSG01_DSN,COMM_BLANKS             'TRANSLATE'\n         CLC   MSG01_DSN,COMM_BLANKS             BLANK?\n         BE    MAIN0180                          YES\n         LTR   R7,R7                             KSDS BLOCK EXIST?\n         BZ    MAIN0150                          NO\n         CLC   MSG01_DSN,KSDS_DSNAME             SAME DSN?\n         BE    MAIN0220                          YES\nMAIN0140 DS    0H\n         ITRACE ID=UPDTKSDS\n         OI    DXD_FLAGS,$DXD_UPDATE             KSDS HAS BEEN UPDATED\n         MVC   KSDS_DSNAME,MSG01_DSN             CHANGE DSN\n         B     MAIN0220\nMAIN0150 DS    0H\n         ITRACE ID=NEW_KSDS\n         OI    DXD_FLAGS,$DXD_UPDATE\n         GETMAIN RU,                                                   +\n               LV=KSDS_DSECT_L,                                        +\n               LOC=ANY\nNEW      USING KSDS_DSECT,R1\n         XC    NEW.KSDS_DSECT(KSDS_DSECT_L),NEW.KSDS_DSECT\n         MVC   NEW.KSDS_EYE,KSDS_ID              IDENTIFY BLOCK\n         MVC   NEW.KSDS_DSNAME,MSG01_DSN         SET DSN\n         MVC   NEW.KSDS_ACB(ACB_L),ACB_I         INITIALIZE ACB\n         LA    R7,DXD_KSDS_PREV                  FIRST KSDS\nMAIN0160 DS    0H\n         ICM   R2,15,KSDS_NEXT                   ANOTHER ON CHAIN?\n         BZ    MAIN0170                          YES\n         LR    R7,R2                             COPY ADDRESS\n         B     MAIN0160\nMAIN0170 DS    0H\n         ST    R1,KSDS_NEXT                      SET 'NEXT' IN PREVIOUS\n         ST    R7,NEW.KSDS_PREV                  SET PREV IN NEW\n         OC    DXD_FIRST_DISPLAYED,DXD_FIRST_DISPLAYED\n         BNZ   MAIN0220                          BLOCK PRESENT\n         ST    R1,DXD_FIRST_DISPLAYED            SET FIRST ON CHAIN\n         B     MAIN0220\n         DROP  NEW\nMAIN0180 DS    0H\n         LTR   R7,R7                             KSDS EXIST?\n         BZ    MAIN0220                          NO\n         OI    DXD_FLAGS,$DXD_UPDATE             A KSDS WAS UPDATED\n         ITRACE ID=DEL_KSDS,                     DELETING A KSDS BLOCK +\n               RDATA1=R7,                                              +\n               DATA2=KSDS_DDNAME\n         ICM   R1,15,KSDS_NEXT                   NEXT KSDS ON CHAIN\n         BZ    MAIN0190\nNEXT     USING KSDS_DSECT,R1\n         MVC   NEXT.KSDS_PREV,KSDS_PREV          SET PREV IN NEXT\n         DROP  NEXT\nMAIN0190 DS    0H\n         ICM   R1,15,KSDS_PREV                   PREVIOUS ON CHAIN\n         BZ    MAIN0200                          NO PREVIOUS BLOCK\nPREV     USING KSDS_DSECT,R1\n         MVC   PREV.KSDS_NEXT,KSDS_NEXT          SET NEXT IN PREVIOUS\nMAIN0200 DS    0H\n         C     R7,DXD_FIRST_DISPLAYED            FIRST KSDS DISPLAYED?\n         BNE   MAIN0210                          NO\n         MVC   DXD_FIRST_DISPLAYED,KSDS_NEXT     CHANGE TO NEXT BLOCK\nMAIN0210 DS    0H\n         ITRACE ID=FREEKSDS,                                           +\n               RDATA1=R7\n         FREEMAIN RU,                            FREEMAIN KSDS BLOCK   +\n               A=(R7),                                                 +\n               LV=KSDS_DSECT_L\n         XC    0(4,R4),0(R4)                     CLEAR ADDR IN TABLE\nMAIN0220 DS    0H\n         ITRACE ID=NEXT\n         A     R6,SPF_VWIDTH                     NEXT LINE\n         LA    R4,4(,R4)                         NEXT IN TABLE\n         L     R15,DXD_LINES_REMAINING           LINES REMAINING\n         BCTR  R15,0                             MINUS 1\n         ST    R15,DXD_LINES_REMAINING           UPDATE NBR REMAINING\n         LTR   R15,R15                           ANY LEFT?\n         BNZ   MAIN0130                          YES.. LOOP\n         TM    DXD_FLAGS,$DXD_UPDATE             ANY UPDATES?\n         BO    MAIN0010                          YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLI   SPF_ZVERB,C'B'                    BOTTOM?\n         BE    MAIN0300\n         CLI   SPF_ZVERB,C'D'                    DOWN?\n         BE    MAIN0320\n         CLI   SPF_ZVERB,C'T'                    TOP?\n         BE    MAIN0330\n         CLI   SPF_ZVERB,C'U'                    UP?\n         BE    MAIN0340\n         B     MAIN0050\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0300 DS    0H\n         ITRACE ID=BOTTOM\n         ICM   R1,15,DXD_KSDS_NEXT               FIRST ON CHAIN\nTEMP     USING KSDS_DSECT,R1\n         BZ    EXIT0000                          SHOULD NOT HAPPEN!\nMAIN0310 DS    0H\n         LR    R7,R1                             SAVE THIS ADDR\n         ICM   R1,15,TEMP.KSDS_NEXT              NEXT KSDS\n         BNZ   MAIN0310\n         B     MAIN0010                          BUILD DISPLAY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0320 DS    0H\n         ITRACE ID=DOWN\n         CLI   SPF_ZSCROLLA,C'M'                 MAX?\n         BE    MAIN0300                          YES\n         L     R7,DXD_LAST_DISPLAYED             LAST ITEM DISPLAYED\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0330 DS    0H\n         ITRACE ID=TOP\n         L     R7,DXD_KSDS_NEXT                  FIRST DATA ITEM\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0340 DS    0H\n         ITRACE ID=UP\n         CLI   SPF_ZSCROLLA,C'M'                 MAX?\n         BE    MAIN0330                          YES\n         ICM   R1,15,DXD_FIRST_DISPLAYED         FIRST ON DISPLAY\n         BZ    EXIT0000                          SHOULD NOT HAPPEN!\n         L     R15,SPF_ZSCROLLN                  LINES TO SCROLL\nMAIN0350 DS    0H\n         LR    R7,R1                             COPY ADDR\n         ICM   R1,15,TEMP.KSDS_PREV              PREVIOUS KSDS\n         BZ    MAIN0010\n         BCT   R15,MAIN0350                      LOOP\n         B     MAIN0010\n         DROP  TEMP\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      Replace the existing KSDS chain with the updated chain         *\n*                                                                     *\n*        Run the new chain                                            *\n*                                                                     *\n*        Allocate the data sets                                       *\n*        OPEN the ACBs                                                *\n*                                                                     *\n*      If there are any errors,                                       *\n*        CLOSE and FREE all data sets on the chain                    *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0500 DS    0H\n         ITRACE ID=TERM\n         TM    DXD_FLAGS,$DXD_ERROR           ERROR FLAG ON?\n         BO    MAIN0700                       YES\n         ICM   R7,15,DXD_KSDS_NEXT            FIRST ON NEW CHAIN\n         BZ    MAIN0600                       NONE ON CHAIN\n         ZAP   DXD_DSECT_NBR,P0               RESET DSECT NBR\nMAIN0510 DS    0H\n         MVI   DAIR_FUNC,$DAIR_ALLOC          SET DAIR FUNCTION\n         MVI   DAIR_OPTS,$DAIR_USE_DD\n         MVI   DAIR_DISP,$DAIR_DISP_SHR\n         MVC   DAIR_DD,COMM_BLANKS            INIT DD NAME\n         AP    DXD_DSECT_NBR,P1               ADD 1 TO DSECT NBR\n         MVC   DAIR_DD+3(4),=X'40212020'      COPY EDIT WORD\n         ED    DAIR_DD+3(4),DXD_DSECT_NBR     EDIT DSECT NBR\n         MVC   DAIR_DD(5),=CL5'DSECT'         SET DD PREFIX\n         MVC   KSDS_DDNAME,DAIR_DD            COPY DD NAME\n         MVC   DAIR_DSN,KSDS_DSNAME           SET DSN\n         MVC   DAIR_MEMBER,COMM_BLANKS        NO MEMBER\n         MVC   DAIR_VOLSER,COMM_BLANKS        NO VOLSER\n         MVC   DAIR_UNIT,COMM_BLANKS          NO UNIT\n         ITRACE ID=ALOC_NEW,                                           +\n               DATA1=DAIR_DD\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15                        ALLOCATE THE KSDS\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BNZ   MAIN0530                       NO\n         MVC   ACBDDNM,DAIR_DD                SET DD NAME\n         ITRACE ID=OPEN_ACB,                                           +\n               DATA1=ACBDDNM\n         OPEN  (KSDS_ACB,INPUT),              OPEN THE ACB             +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_OPEN)\n         ITRACE ID=OPEN_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   MAIN0540                       NO\n         OI    KSDS_FLAGS,$KSDS_OPEN          INDICATE KSDS IS OPEN\nMAIN0520 DS    0H\n         ICM   R7,15,KSDS_NEXT                NEXT KSDS\n         BNZ   MAIN0510\n         B     MAIN0600\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0530 DS    0H\n         OI    DXD_FLAGS,$DXD_ERROR           ERROR HAS OCCURRED\n         CLC   SPF_MSG_1,COMM_BLANKS          ALREADY HAVE A MSG?\n         BNE   MAIN0550                       YES\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     MAIN0550\nMAIN0540 DS    0H\n         OI    DXD_FLAGS,$DXD_ERROR           ERROR HAS OCCURRED\n         MVC   COMM_INFO_01(8),KSDS_DDNAME    COPY DDNAME\n         MVC   COMM_INFO_02(44),KSDS_DSNAME   COPY DSNAME\n         STH   R15,COMM_INFO_03               SAVE OPEN RC\n         MVI   COMM_MSG_ID+1,3\n         BAL   R5,MSG0000                     BUILD MESSAGE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      An error occurred allocating or OPENing one of the KSDSes      *\n*      in the new list.                                               *\n*                                                                     *\n*      Run the new chain, CLOSE and de-allocate all KSDSes            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0550 DS    0H\n         ITRACE ID=RESETNEW\n         ICM   R7,15,DXD_KSDS_NEXT            FIRST KSDS\n         BZ    MAIN0550\nMAIN0560 DS    0H\n         TM    KSDS_FLAGS,$KSDS_OPEN          DATA SET OPEN?\n         BNO   MAIN0570                       NO\n         ITRACE ID=CLOSE,                                              +\n               DATA1=KSDS_DDNAME\n         CLOSE KSDS_ACB,                                               +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_CLOSE)\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0020                        NO\nMAIN0570 DS    0H\n         ITRACE ID=FREE,                                               +\n               DATA1=KSDS_DDNAME\n         MVC   DAIR_DD,KSDS_DDNAME            COPY DDNAME\n         MVI   DAIR_FUNC,$DAIR_FREE           SET FUNCTION\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR              OSDAIR ENTRY POINT\n         BALR  R14,R15                        FREE THE DD\n         LR    R1,R7                          COPY ADDRESS\n         ICM   R7,15,KSDS_NEXT                NEXT KSDS\n         BNZ   MAIN0560                       YES\n         B     MAIN0060\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        All libraries were found and are valid                       *\n*                                                                     *\n*        Replace old chain with new                                   *\n*          Make sure the KSDSes in the old list are CLOSEd            *\n*          Free the DSECTs, LABELs, EQUATEs associated                *\n*          Free the KSDS block                                        *\n*          Copy the address of first KDDS block on new chain          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0600 DS    0H\n         ITRACE ID=SWITCH,                                             +\n               DATA1=DISCOMM_KSDS_NEXT,                                +\n               DATA2=DXD_KSDS_NEXT\n         ICM   R7,15,DISCOMM_KSDS_NEXT        1ST KSDS\n         BZ    MAIN0690\nMAIN0610 DS    0H\n         TM    KSDS_FLAGS,$KSDS_OPEN          DATA SET OPEN?\n         BNO   MAIN0620                       NO\n         CLOSE KSDS_ACB,                                               +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_CLOSE)\nMAIN0620 DS    0H\n         ICM   R5,15,KSDS_DSECT_NEXT          FIRST DSECT\n         BZ    MAIN0680\n         USING DSECT_DSECT,R5\nMAIN0630 DS    0H\n         ICM   R4,15,DSECT_LABEL_NEXT         FIRST LABEL\n         BZ    MAIN0670\n         USING LABEL_DSECT,R4\nMAIN0640 DS    0H\n         ICM   R3,15,LABEL_EQU_NEXT           FIRST EQU\n         BZ    MAIN0660\n         USING EQU_DSECT,R3\nMAIN0650 DS    0H\n         LR    R1,R3                          COPY EQU BLOCK ADDR\n         ICM   R3,15,EQU_NEXT                 NEXT EQU\n         FREEMAIN RU,                         FREE THIS EQU            +\n               A=(1),                                                  +\n               LV=EQU_DSECT_L\n         LTR   R3,R3                          ANOTHER EQU?\n         BNZ   MAIN0650                       YES\nMAIN0660 DS    0H\n         LR    R1,R4\n         ICM   R4,15,LABEL_NEXT               NEXT LABEL\n         FREEMAIN RU,                         FREE THIS LABEL          +\n               A=(1),                                                  +\n               LV=LABEL_DSECT_L\n         LTR   R4,R4                          ANOTHER LABEL?\n         BNZ   MAIN0640                       YES\nMAIN0670 DS    0H\n         LR    R1,R5\n         ICM   R5,15,DSECT_NEXT               NEXT DSECT\n         FREEMAIN RU,                         FREE THIS DSECT          +\n               A=(1),                                                  +\n               LV=DSECT_DSECT_L\n         LTR   R5,R5                          ANOTHER DSECT?\n         BNZ   MAIN0630                       YES\nMAIN0680 DS    0H\n         LR    R1,R7\n         ICM   R7,15,KSDS_NEXT                NEXT KSDS\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=KSDS_DSECT_L\n         LTR   R7,R7                          ANOTHER KSDS?\n         BNZ   MAIN0610                       YES\nMAIN0690 DS    0H\n         MVC   DISCOMM_KSDS_NEXT,DXD_KSDS_NEXT CHANGE KSDS CHAIN\n         XC    DXD_KSDS_NEXT,DXD_KSDS_NEXT     RESET DXD CHAIN\n         DROP  R3,R4,R5\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*        User has requested exit with error(s) pending                *\n* ------------------------------------------------------------------- *\nMAIN0700 DS    0H\n         ITRACE ID=PURGE\n         MVI   COMM_MSG_ID+1,5\n         BAL   R5,MSG0000\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        User has requested all changes to be cancelled.              *\n*                                                                     *\n*        Free any blocks on new chain                                 *\n*        Re-allocate and OPEN KSDSes on existing chain                *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN1000 DS    0H\n         ITRACE ID=CANCEL\n         MVC   SPF_ZCMD,COMM_BLANKS           RESET COMMAND\n         ICM   R7,15,DXD_KSDS_NEXT            FIRST ON NEW CHAIN\n         BZ    MAIN1020\n         XC    DXD_KSDS_NEXT,DXD_KSDS_NEXT    CLEAR FOR NEXT TIME\nMAIN1010 DS    0H\n         LR    R1,R7                          COPY ADDRESS\n         ICM   R7,15,KSDS_NEXT                NEXT KSDS\n         ITRACE ID=FREEKSDS,                                           +\n               RDATA1=R7,                                              +\n               DATA2=KSDS_DDNAME\n         FREEMAIN RU,                         FREEMAIN THE BLOCK       +\n               A=(1),                                                  +\n               LV=KSDS_DSECT_L\n         LTR   R7,R7                          ANOTHER ON CHAIN?\n         BNZ   MAIN1010                       YES\n* ------------------------------------------------------------------- *\n*        Run existing chain, allocate and OPEN the KSDSes             *\n* ------------------------------------------------------------------- *\nMAIN1020 DS    0H\n         ITRACE ID=REDO_OLD,                                           +\n               DATA1=DISCOMM_KSDS_NEXT\n         ICM   R7,15,DISCOMM_KSDS_NEXT\n         BZ    EXIT0000\nMAIN1030 DS    0H\n         ITRACE ID=RE-ALLOC\n         MVI   DAIR_FUNC,$DAIR_ALLOC          SET DAIR FUNCTION\n         MVI   DAIR_OPTS,$DAIR_USE_DD\n         MVI   DAIR_DISP,$DAIR_DISP_SHR\n         MVC   DAIR_DD,KSDS_DDNAME            SET DD NAME\n         MVC   DAIR_DSN,KSDS_DSNAME           SET DATA SET NAME\n         MVC   DAIR_MEMBER,COMM_BLANKS        NO MEMBER\n         MVC   DAIR_VOLSER,COMM_BLANKS        NO VOLSER\n         MVC   DAIR_UNIT,COMM_BLANKS          NO UNIT\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR\n         BALR  R14,R15                        ALLOCATE KSDS\n         OC    DAIR_R15,DAIR_R15              SUCCESSFUL?\n         BNZ   ERR1000                        NO\n         ITRACE ID=RE-OPEN,                                            +\n               DATA1=KSDS_DDNAME\n         OPEN  KSDS_ACB,                      OPEN THE ACB             +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_OPEN)\n         ITRACE ID=OPEN_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0030                        NO\n         OI    KSDS_FLAGS,$KSDS_OPEN          INDICATE KSDS IS OPEN\n         ICM   R7,15,KSDS_NEXT                ANOTHER KSDS?\n         BNZ   MAIN1030                       YES\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVI   COMM_MSG_ID+1,1                INIT CLOSE FAILED\n         MVC   COMM_INFO_01,KSDS_DDNAME       DDNAME\n         MVC   COMM_INFO_02,KSDS_DSNAME       DSNAME\n         STH   R15,COMM_INFO_03               CLOSE RC\n         B     ERR0100\nERR0020  DS    0H\n         MVC   COMM_INFO_01,KSDS_DDNAME       DDNAME\n         MVC   COMM_INFO_02,KSDS_DSNAME       DSNAME\n         STH   R15,COMM_INFO_03               CLOSE RC\n         MVI   COMM_MSG_ID+1,2                CLOSING NEW ACB FAILED\n         B     ERR0100\nERR0030  DS    0H\n         MVC   COMM_INFO_01,KSDS_DDNAME       DDNAME\n         MVC   COMM_INFO_02,KSDS_DSNAME       DSNAME\n         STH   R15,COMM_INFO_03               CLOSE RC\n         MVI   COMM_MSG_ID+1,3                OPEN FAILED\nERR0100  DS    0H\n         BAL   R5,MSG0000\n         B     ERR1010\nERR1000  DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         MVC   COMM_MSG_CSECT,MODID\nERR1010  DS    0H\n         MVC   SESS_DISP_PANEL,PANEL_DIS0000  SET PANEL NAME\n         XC    SESS_DISP_VDATA_ADDR,SESS_DISP_VDATA_ADDR\n         XC    SESS_DISP_VDATA_LENGTH,SESS_DISP_VDATA_LENGTH\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15                        DISPLAY PANEL\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMSG0000  DS    0H\n         MVI   COMM_MSG_ID,0\n         ITRACE ID=MSG,                                                +\n               DATA1=(COMM_MSG_ID,2)\n         CLC   SPF_MSG_1,COMM_BLANKS          ALREADY HAVE A MSG?\n         BNER  R5                             YES\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         MVC   COMM_MSG_CSECT,MODID\n         BR    R5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R2\n         L     R0,DXD_KSDS_TABLE_SIZE         ADDR TABLE SIZE\n         L     R1,DXD_KSDS_TABLE              ADDR TABLE ADDR\n         FREEMAIN RU,                         FREEMAIN ADDR TABLE      +\n               A=(1),                                                  +\n               LV=(0)\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         L     R14,12(,R13)                   RESTORE REGISTERS         ASE01680\n         LR    R15,R2                         SET RC\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS         ASE01680\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nABEND000 DS    0H\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START      DC   Q(DXDKLIST)\nV_DISDSINF     DC   V(DISDSINF)\n\nP0             DC   P'0'\nP1             DC   P'1'\n\nKSDS_ID        DC   CL8'KSDS'\nABEND          DC   C'ABEND'\nCAN            DC   C'CAN '\nCANCEL         DC   C'CANCEL '\nPANEL_DISKLIST DC   CL8'DISKLIST'\nPANEL_DIS0000  DC   CL8'DIS0000'\n\nERR01          DC   C'NOT VSAM'\nERR01_L        EQU  *-ERR01\n\n              LTORG\n\n\nMSG01         DS   0C\n              DC   AL1($SCREEN_ATTR_INPUT)\nMSG01_DSN     DC   CL44' '\n              DC   AL1($SCREEN_ATTR_HIGH_YELLOW)\nMSG01_MSG     DC   CL30' '\nMSG01_L       EQU  *-MSG01\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDKLIST              DSECT\n                      COPY DXDPREF\n\nDXD_KSDS_PREV         DS  A             DUMMY FOR 'PREV' ON CHAIN\nDXD_KSDS_NEXT         DS  A             FIRST DATA ITEM ON CHAIN\n\nDXD_FIRST_DISPLAYED   DS  A             FIRST DATA ITEM DISPLAYED\nDXD_LAST_DISPLAYED    DS  A             LAST DATA ITEM DISPLAYED\n\nDXD_KSDS_TABLE        DS  A\nDXD_KSDS_TABLE_SIZE   DS  F\n\nDXD_LINES_REMAINING   DS  F\n\nDXD_NBR_DISPLAYED     DS  H             NBR OF DATA ITEMS DISPLAYED\n\nDXD_FLAGS             DS  X             FLAGS\n$DXD_ERROR            EQU X'80'         .. SERIOUS ERROR\n$DXD_UPDATE           EQU X'40'         .. AREA(S) UPDATED\n\nDXD_DSECT_NBR         DS  PL2\n\n                      DAIRREQ  DSECT=NO\n                      DSINFREQ DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 IFGACB   AM=VSAM\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n              END     DISKLIST\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISLREAD": {"ttr": 271, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x14\\x01\\t4\\x1f\\x01\\t6/\\x15F\\x00\\xe1\\x00\\xe0\\x00\\x03\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2009-12-07T00:00:00", "modifydate": "2009-12-28T15:46:14", "lines": 225, "newlines": 224, "modlines": 3, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: DISLREAD                                              *\n*                                                                     *\n*  FUNCTION:                                                          *\n*    Read LABELS and EQUATEs for a DSECT from a pre-processed         *\n*    data KSDS                                                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISLREAD CSECT\nDISLREAD AMODE 31\nDISLREAD RMODE ANY\n         USING DISLREAD,R15\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'DISLREAD'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISLREAD,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR              WORK AREA\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         USING DXDLREAD,R13\n         MVC   DXD_CSECT,R13\n         ITRACE ID=ENTRY,                                              +\n               DATA1=DISCOMM_USING_KSDS,                               +\n               DATA2=DISCOMM_USING_DSECT\n         L     R6,DISCOMM_USING_KSDS          KSDS BLOCK ADDR\n         L     R5,DISCOMM_USING_DSECT         DSECT BLOCK ADDR\n         USING KSDS_DSECT,R6\n         USING DSECT_DSECT,R5\n         MVC   DXD_RPL(RPL_L),RPL_I\n         USING IFGRPL,DXD_RPL\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        READ the LABELs (and EQUATES) for a DSECT from a KSDS        *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         TM    KSDS_FLAGS,$KSDS_OPEN          KSDS OPEN?\n         BO    MAIN0020                       YES\n         OPEN  (KSDS_ACB,INPUT),              OPEN THE KSDS            +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_OPEN)\n         OI    KSDS_FLAGS,$KSDS_OPEN          SET FLAG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0020 DS    0H\n         ITRACE ID=MODCB1\n         MVC   DXD_MODCB(MODCB1_L),MODCB1_I\n         LA    R2,DXD_RPL\n         LA    R3,KSDS_ACB\n         LA    R7,PPD\n         LA    R8,PPD_KEY\n         MODCB RPL=(R2),                                               +\n               ACB=(R3),                                               +\n               AREA=(R7),                                              +\n               AREALEN=PPD_L,                                          +\n               ARG=(R8),                                               +\n               KEYLEN=L'PPD_KEY,                                       +\n               OPTCD=(KEY,KEQ,DIR,SYN,MVE),                            +\n               MF=(G,DXD_MODCB)\n         ITRACE ID=MODCB_RC,                                           +\n               RDATA1=R15,                                             +\n               RDATA2=R0\n         LTR   R15,R15\n         BNZ   ERR0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         XC    PPD_SEQ,PPD_SEQ                FORCE SEQ TO ZERO\n         MVC   PPD_NAME,DSECT_NAME            SET DSECT NAME\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LA    R4,DSECT_LABEL_PREV            \"FIRST\" LABEL ON CHAIN\n         USING LABEL_DSECT,R4\n         SR    R3,R3\n         USING EQU_DSECT,R3\nMAIN0030 DS    0H\n         ITRACE ID=GET\n         GET   RPL=DXD_RPL                    READ A RECORD\n         ITRACE ID=GET_RC,                                             +\n               RDATA1=R15,                                             +\n               DATA2=RPLFDBK\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   EXIT0000                       NO\n         CLC   LABEL_ID,PPD_DATA+8            LABEL?\n         BE    MAIN0040                       YES\n         CLC   EQU_ID,PPD_DATA+8              EQUATE?\n         BE    MAIN0050                       YES\n         B     MAIN0060                       OTHERWISE\nMAIN0040 DS    0H\n         GETMAIN RU,                                                   +\n               LV=LABEL_DSECT_L,                                       +\n               LOC=ANY\nNEW      USING LABEL_DSECT,R1\n         XC    NEW.LABEL_DSECT(LABEL_DSECT_L),NEW.LABEL_DSECT\nKSDS     USING LABEL_DSECT,PPD_DATA\n         ST    R1,LABEL_NEXT\n         ST    R4,LABEL_PREV\n         MVC   NEW.LABEL_EYE,KSDS.LABEL_EYE\n         MVC   NEW.LABEL_NAME,KSDS.LABEL_NAME\n         MVC   NEW.LABEL_DISP,KSDS.LABEL_DISP\n         MVC   NEW.LABEL_TYPE,KSDS.LABEL_TYPE\n         LA    R3,LABEL_EQU_PREV\n         LR    R4,R1\n         ITRACE ID=LABEL,                                              +\n               RDATA1=R4,                                              +\n               DATA2=LABEL_NAME\n         DROP  NEW,KSDS\n         B     MAIN0060\nMAIN0050 DS    0H\n         GETMAIN RU,                                                   +\n               LV=EQU_DSECT_L,                                         +\n               LOC=ANY\nNEW      USING EQU_DSECT,R1\n         XC    NEW.EQU_DSECT(EQU_DSECT_L),NEW.EQU_DSECT\nKSDS     USING EQU_DSECT,PPD_DATA\n         ST    R1,EQU_NEXT\n         ST    R3,NEW.EQU_PREV\n         MVC   NEW.EQU_EYE,KSDS.EQU_EYE\n         MVC   NEW.EQU_LABEL,KSDS.EQU_LABEL\n         MVC   NEW.EQU_VALUE,KSDS.EQU_VALUE\n         LR    R3,R1\n         ITRACE ID=EQU,                                                +\n               RDATA1=R3,                                              +\n               DATA2=EQU_LABEL\n         DROP  NEW,KSDS\nMAIN0060 DS    0H\n         ICM   R1,15,PPD_SEQ                  CURRENT SEQ NBR\n         LA    R1,1(,R1)                      PLUS 1\n         STCM  R1,15,PPD_SEQ                  UPDATE SEQ NBR\n         B     MAIN0030                       READ NEXT RECORD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=MOD_ERR,                                            +\n               RDATA1=R15\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE REGISTER 13\n         L     R14,12(,R13)                   RESTORE REGISTERS\n         SR    R15,R15                        SET RC\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN TO CALLER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START     DC   Q(DXDLREAD)\n\nRPL_I         RPL  AM=VSAM\nRPL_L         EQU  *-RPL_I\n\nMODCB1_I MODCB RPL=*,                                                  +\n               ACB=*,                                                  +\n               AREA=*,                                                 +\n               AREALEN=PPD_L,                                          +\n               ARG=*,                                                  +\n               KEYLEN=L'PPD_KEY,                                       +\n               OPTCD=(KEY,KGE,DIR,SYN,MVE),                            +\n               MF=L\nMODCB1_L EQU  *-MODCB1_I\n\nLABEL_ID DC   CL8'LABEL'\nEQU_ID   DC   CL8'EQU  '\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDLREAD      DSECT\n              COPY    DXDPREF\n\nDXD_MODCB     DS      0F,(MODCB1_L)X\nDXD_RPL       DS      0F,(RPL_L)X\n\n              COPY    PPDDATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 IFGRPL   AM=VSAM\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n              END     DISLREAD\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISMAIN": {"ttr": 10497, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0c\\x00A\\x01\\x10\\x01_\\x01\\x10\\x02\\x7f\\tH\\x05C\\x04\\xfc\\x01]\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.12", "flags": 0, "createdate": "2010-01-15T00:00:00", "modifydate": "2010-01-27T09:48:41", "lines": 1347, "newlines": 1276, "modlines": 349, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: DISMAIN                                               *\n*                                                                     *\n*  Disassembler mainline                                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISMAIN  CSECT\nDISMAIN  AMODE 31\nDISMAIN  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISMAIN,R15\n         B     INIT0000\nMODID    DC    CL8'DISMAIN'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                  SAVE REGS\n         LR    R10,R15                          COPY ENTRY POINT\n         LA    R7,2048(,R10)\n         LA    R7,2048(,R7)\n         DROP  R15\n         USING DISMAIN,R10,R7                   DEFINE BASE\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE\n         BNE   MAIN0000                         NO\n* ------------------------------------------------------------------- *\n*        Initialization                                               *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         L     R0,DXD_LENGTH\n         ST    R0,SESS_DXD_LENGTH               SAVE WORK AREA LENGTH\n         GETMAIN RU,                                                   +\n               LV=(R0),                                                +\n               LOC=ANY\n         ST    R1,SESS_DXD_ADDR                 SET WORK AREA ADDRESS\n         LR    R2,R1\n         LR    R0,R1\n         L     R1,DXD_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                           INITIALIZE WORK AREA\n         A     R2,DXD_START\n         ST    R13,4(,R2)                       SAVE R13\n         ST    R2,8(,R13)                       CHAIN SAVE AREA\n         LR    R13,R2                           COPY WORK AREA ADDRESS\n         USING DXDMAIN,R13                      DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               DATA1=(SESS_DXD_ADDR,4),                                +\n               DATA2=(SESS_DXD_LENGTH,4)\n         LOAD  EP=DISCOMM\n         LR    R9,R0\n         ITRACE ID=DISCOMM,                                            +\n               RDATA1=R9\n         USING DISCOMM,R9\n         ST    R9,SESS_COMM                     SAVE DISCOMM ADDRESS\n         L     R8,COMM_OSSPFD                   SPF DATA AREA\n         USING OSSPFD,R8                        DEFINE BASE\n         LOAD  EP=DISMSGUS\n         ST    R0,SESS_MESSAGES\n* ------------------------------------------------------------------- *\n*        GETMAIN VDATA buffer                                         *\n* ------------------------------------------------------------------- *\n         ITRACE ID=GETVDATA\n         LA    R1,NAMELIST_PANEL\n         MVC   DISCOMM_PANEL_NAME,NAMELIST_PANEL\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                          GETMAIN VDATA STORAGE\n         ST    R0,DISCOMM_VDATA_LENGTH          SAVE LENGTH\n         ST    R1,DISCOMM_VDATA_ADDR            SAVE ADDRESS\n         ITRACE ID=VDATA,                                              +\n               RDATA1=R1,                                              +\n               RDATA2=R0\n         B     EXIT0050\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         L     R15,SESS_DXD_ADDR                WORK AREA BASE\n         A     R15,DXD_START                    PLUS DISP\n         ST    R13,4(,R15)                      SAVE R13\n         ST    R15,8(,R13)                      CHAIN SAVE AREA\n         LR    R13,R15                          COPY WORK AREA ADDRESS\n         L     R9,SESS_COMM                     RESTORE DISCOMM ADDR\n         L     R8,COMM_OSSPFD                   SPF DATA AREA\n         MVC   SPF_ZCMD,COMM_BLANKS             RESET COMMAND\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL\n         BE    EXIT0050\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         BE    EXIT0000\n* ------------------------------------------------------------------- *\n*        Start binder dialog                                          *\n* ------------------------------------------------------------------- *\n         ITRACE ID=STARTD\n         L     R9,SESS_COMM                     DISCOMM ADDRESS\n         MVC   DISCOMM_LMOD,SESS_MEMBER         LMOD NAME = MEMBER NAME\n         MVC   DISCOMM_DDNAME,SESS_DD           SET LIBARY DD NAME\n         MVI   DISCOMM_BIND_FUNC,$BIND_STARTD   SET FUNCTION\n         L     R15,V_DISBIND                    DISBIND ENTRY POINT\n         BALR  R14,R15                          LINK TO DISIND\n         ITRACE ID=START_RC,                                           +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   EXIT0050                         NO\n* ------------------------------------------------------------------- *\n*        Build section names                                          *\n* ------------------------------------------------------------------- *\n         ITRACE ID=GETN\n         MVI   DISCOMM_BIND_FUNC,$BIND_NAMES    SET FUNCTION\n         L     R15,V_DISBIND                    DISBIND ENTRY POINT\n         BALR  R14,R15                          LINK TO DISIND\n         ITRACE ID=NAMES_RC,                                           +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   EXIT0050                         NO\n         CLC   DISCOMM_NAME_NBR,F1              ONE CSECT?\n         BE    MAIN0020                         YES\n* ------------------------------------------------------------------- *\n*        List section names                                           *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         ITRACE ID=LISTNAME\n         L     R15,V_DISNLIST                   DISNLIST ENTRY POINT\n         BALR  R14,R15                          LINK TO DISIND\n         ITRACE ID=LIST_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BZ    MAIN0030                         YES\n         B     EXIT0040                         OTHERWIZE EXIT\n* ------------------------------------------------------------------- *\n*        Module has only one CSECT                                    *\n* ------------------------------------------------------------------- *\nMAIN0020 DS    0H\n         ITRACE ID=1_CSECT\n         MVC   SPF_MEMBER,SESS_MEMBER\n         L     R1,DISCOMM_NAME_NEXT             1ST (AND ONLY) NAME\n         USING NAME_DSECT,R1\n         MVC   DISCOMM_CSECT,NAME_NAME\n         MVC   SPF_CSECT,NAME_NAME\n* ------------------------------------------------------------------- *\n*        GET ESD and RLD info for selected (or only CSECT)            *\n* ------------------------------------------------------------------- *\nMAIN0030 DS    0H\n         ITRACE ID=ESD_RLD\n         MVI   DISCOMM_BIND_FUNC,$BIND_ESD_RLD\n         L     R15,V_DISBIND                    DISBIND ENTRY POINT\n         BALR  R14,R15                          LINK TO DISIND\n         ITRACE ID=ESDRLDRC,                                           +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   EXIT0050                         NO\n* ------------------------------------------------------------------- *\n*        Read text                                                    *\n* ------------------------------------------------------------------- *\n         ITRACE ID=TEXT\n         MVI   DISCOMM_BIND_FUNC,$BIND_TEXT\n         L     R15,V_DISBIND                    DISBIND ENTRY POINT\n         BALR  R14,R15                          LINK TO DISIND\n         ITRACE ID=TEXT_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   EXIT0050                         NO\n* ------------------------------------------------------------------- *\n*        End the binder dialog                                        *\n* ------------------------------------------------------------------- *\n         ITRACE ID=ENDD\n         MVI   DISCOMM_BIND_FUNC,$BIND_ENDD\n         L     R15,V_DISBIND                    DISBIND ENTRY POINT\n         BALR  R14,R15                          LINK TO DISIND\n         ITRACE ID=ENDD_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   EXIT0050                         NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        For ADCONs the text tells us which displacement is           *\n*        being referenced by the ADCON.                               *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ICM   R5,15,DISCOMM_RLD_AREA_NEXT      FIRST RLD ITEM\n         BZ    MAIN0100                         NO RLD ITEMS\n         USING AREA_DSECT,R5\nMAIN0050 DS    0H\n         ITRACE ID=AREA,                                               +\n               RDATA1=R5,                                              +\n               DATA2=(AREA_DATA_TYPE,1)\n         CLI   AREA_DATA_TYPE,$DATA_ACON        ADCON?\n         BNE   MAIN0060                         NO\n         ICM   R1,15,AREA_BEGIN                 RLD ITEM'S DISP\n         LR    R0,R1                            COPY DISP\n         A     R1,DISCOMM_CSECT_TEXT            PLUS BASE\n         ICM   R14,15,AREA_LENGTH               RLD ITEM'S LENGTH\n         BCTR  R14,0                            RELATIVE TO ZERO\n         AR    R0,R14                           PLUS LENGTH\n         STCM  R0,15,AREA_END\n         LA    R15,AREA_REF_DISP1+3             END OF OUTPUT FIELD\n         SR    R15,R14                          MINUS LENGTH\n         EX    R14,ADCONMVC                     COPY TEXT\n         ITRACE ID=ADCON,                                              +\n               DATA1=(AREA_BEGIN,4),                                   +\n               DATA2=(AREA_REF_DISP1,4)\nMAIN0060 DS    0H\n         ICM   R5,15,AREA_NEXT                  ANOTHER AREA?\n         BNZ   MAIN0050                         YES\n         B     MAIN0100\nADCONMVC MVC   0(0,R15),0(R1)                   COPY TARGET DISP\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        Display main menu                                            *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0100 DS    0H\n         ITRACE ID=MAINMENU\n         MVI   SPF_FUNCTION,C' '\n         MVC   SESS_DISP_PANEL,MENU_PANEL       SET PANEL NAME\n         XC    SESS_DISP_VDATA_ADDR,SESS_DISP_VDATA_ADDR\n         XC    SESS_DISP_VDATA_LENGTH,SESS_DISP_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\nMAIN0110 DS    0H\n         ITRACE ID=CALLDISP\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15                          DISPLAY MAIN MENU\n         ITRACE ID=MENU_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                          RC=0?\n         BNZ   MAIN0120                         NO\n         OC    SPF_FUNCTION,COMM_BLANKS         'TRANSLATE'\n         ITRACE ID=SELECT,                                             +\n               DATA1=(SPF_FUNCTION,1)\n         CLI   SPF_FUNCTION,C' '                BLANK?\n         BE    MAIN0130                         YES\n         CLI   SPF_FUNCTION,C'A'                ASSEMBLER SOURCE?\n         BE    MAIN0140                         YES\n         CLI   SPF_FUNCTION,C'B'                LIST BASEs?\n         BE    MAIN0150                         YES\n         CLI   SPF_FUNCTION,C'C'                Save/Restore config?\n         BE    MAIN0160                         YES\n         CLI   SPF_FUNCTION,C'D'                LIST DATA AREAs?\n         BE    MAIN0170                         YES\n         CLI   SPF_FUNCTION,C'E'                LIST ESD info?\n         BE    MAIN0180                         YES\n         CLI   SPF_FUNCTION,C'G'                Generate source?\n         BE    MAIN0190                         YES\n         CLI   SPF_FUNCTION,C'K'                LIST KSDSes?\n         BE    MAIN0300                         YES\n         CLI   SPF_FUNCTION,C'O'                OPTIONS?\n         BE    MAIN0310                         YES\n         CLI   SPF_FUNCTION,C'R'                LIST RLD info?\n         BE    MAIN0320                         YES\n         CLI   SPF_FUNCTION,C'S'                LIST SYSLIBs?\n         BE    MAIN0330                         YES\n         CLI   SPF_FUNCTION,C'T'                Display TEXT?\n         BE    MAIN0340                         YES\n         CLI   SPF_FUNCTION,C'U'                Display USINGs?\n         BE    MAIN0350                         YES\n         CLI   SPF_FUNCTION,C'1'                TURN DEBUGGING ON?\n         BE    MAIN0400                         YES\n         CLI   SPF_FUNCTION,C'2'                TURN DEBUGGING OFF?\n         BE    MAIN0410                         YES\n         ITRACE ID=BAD_SEL\n         MVC   SPF_MSG_1(MSG02_L),MSG02\n         B     MAIN0100                         DISPLAY MENU AGAIN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*  Clean up current CSECT's info                                      *\n*                                                                     *\n*  If there is only one CSECT, just exit                              *\n*  If there are multiple CSECTs                                       *\n*    . Start a BINDER DIALOG again                                    *\n*    . Display the list of CSECTs again                               *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0120 DS    0H\n         ITRACE ID=MAIN0120\n         BAL   R6,CLEAN000                      CLEAN UP\n         CLC   DISCOMM_NAME_NBR,F1              ONE CSECT?\n         BE    EXIT0040                         YES\n         ITRACE ID=STARTD\n         L     R9,SESS_COMM                     DISCOMM ADDRESS\n         MVC   DISCOMM_LMOD,SESS_MEMBER         LMOD NAME = MEMBER NAME\n         MVC   DISCOMM_DDNAME,SESS_DD           SET LIBARY DD NAME\n         MVI   DISCOMM_BIND_FUNC,$BIND_STARTD   SET FUNCTION\n         L     R15,V_DISBIND                    DISBIND ENTRY POINT\n         BALR  R14,R15                          LINK TO DISIND\n         ITRACE ID=START_RC,                                           +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   EXIT0050                         NO\n         B     MAIN0010                         DISPLAY NAME LIST AGAIN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0130 DS    0H\n         ITRACE ID=NO_SEL\n         MVC   SPF_MSG_1(MSG01_L),MSG01\n         B     MAIN0110\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0140 DS    0H\n         ITRACE ID=ASSEM\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         L     R15,V_DISALIST                   DISALIST ENTRY POINT\n         BALR  R14,R15                          CALL DISALIST\n         ITRACE ID=ASSEM_X\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0150 DS    0H\n         ITRACE ID=BASE\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         L     R15,V_DISBLIST                   DISBLIST ENTRY POINT\n         BALR  R14,R15                          CALL DISBLIST\n         ITRACE ID=BASE_X\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0160 DS    0H\n         ITRACE ID=CONFIG\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         L     R15,V_DISCONF                    DISCONF ENTRY POINT\n         BALR  R14,R15                          CALL DISCONF\n         ITRACE ID=CONF_X\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0170 DS    0H\n         ITRACE ID=DATA\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         L     R15,V_DISDLIST                   DISDLIST ENTRY POINT\n         BALR  R14,R15                          CALL DISDLIST\n         ITRACE ID=DATA_X\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0180 DS    0H\n         ITRACE ID=ESD\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         L     R15,V_DISELIST                   DISELIST ENTRY POINT\n         BALR  R14,R15                          CALL DISELIST\n         ITRACE ID=ESD_X\n         B     MAIN0100\n\n\n\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Generate source                                              *\n*                                                                     *\n*        1) Verify OPCODE table has been selected                     *\n*        2) Verify label prefix has been given                        *\n*        3) Verify BASE and USINGs                                    *\n*        4) Delete old \"all areas chain\"                              *\n*        5) Build new \"all areas chain\" (merge user with RLD data)    *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0190 DS    0H\n         ITRACE ID=GEN\n         MVI   SPF_FUNCTION,C' '                RESET COMMAND\n         OC    DISCOMM_ASM_NEXT,DISCOMM_ASM_NEXT\n         BZ    MAIN019A                         NO SOURCE TO ASSEMBLE\n         TM    DISCOMM_FLAGS,$DISCOMM_ASSEMBLE_SOURCE\n         BNO   MAIN019A\n         MVC   DISCOMM_TPUT_MSG(STAT_MSG_01_L),STAT_MSG_01\n         BAL   R6,TPUT0000                      ISSUE TPUT\n         ITRACE ID=ASSEM\n         L     R15,V_DISASSEM                   DISASSEM ENTRY POINT\n         BALR  R14,R15                          ASSEMBLE SOURCE\n         CH    R15,H4                           SERIOUS ERROR?\n         BH    MAIN0280                         YES\n         NI    DISCOMM_FLAGS,255-$DISCOMM_ASSEMBLE_SOURCE\nMAIN019A DS    0H\n         CLC   DISCOMM_OUTPUT_DSN,COMM_BLANKS   HAVE OUTPUT DATA SET?\n         BE    ERR0010                          NO\n         OC    DISCOMM_OPCODE_TABLE_ADDR,DISCOMM_OPCODE_TABLE_ADDR\n         BNZ   MAIN0210\n         LOAD  EPLOC=DISCOMM_OPCODE_TABLE_NAME  LOAD OPCODE TABLE\n         ST    R0,DISCOMM_OPCODE_TABLE_ADDR     SAVE ADDRESS\n         ITRACE ID=OP_TABLE,                                           +\n               RDATA1=R1\nMAIN0210 DS    0H\n         CLC   DISCOMM_PREFIX,COMM_BLANKS       LABEL PREFIX GIVEN?\n         BNE   MAIN0220                         YES\n         ITRACE ID=DFLTPRFX\n         MVC   DISCOMM_PREFIX,DEFAULT_PREFIX    SET DEFAULT PREFIX\n         MVC   DISCOMM_PREFIX_LENGTH,H4         SET LENGTH\nMAIN0220 DS    0H\n         MVC   DISCOMM_TPUT_MSG(STAT_MSG_02_L),STAT_MSG_02\n         BAL   R6,TPUT0000                      ISSUE TPUT\n         L     R15,V_DISVBU\n         ITRACE ID=VBU,                                                +\n               RDATA1=R15\n         BALR  R14,R15                          VERIFY BASES AND USINGS\n         ITRACE ID=VBU_RC,                                             +\n               RDATA1=R15\n         LTR   R15,R15                          ANY ERRORS DETECTED?\n         BNZ   MAIN0100                         YES\n* ------------------------------------------------------------------- *\n*        Connect USINGS with DSECTs                                   *\n* ------------------------------------------------------------------- *\n         MVC   DISCOMM_TPUT_MSG(STAT_MSG_03_L),STAT_MSG_03\n         BAL   R6,TPUT0000                      ISSUE TPUT\n         L     R15,V_DISDSECT\n         ITRACE ID=DSECT,                                              +\n               RDATA1=R15\n         BALR  R14,R15                          CONNECT USING TO DSECT\n         ITRACE ID=DSECT_RC,                                           +\n               RDATA1=R15\n         LTR   R15,R15                          ANY ERRORS DETECTED?\n         BNZ   MAIN0100                         YES\n* ------------------------------------------------------------------- *\n*        Delete old \"ALL areas\"                                       *\n* ------------------------------------------------------------------- *\n         MVC   DISCOMM_TPUT_MSG(STAT_MSG_04_L),STAT_MSG_04\n         BAL   R6,TPUT0000                      ISSUE TPUT\n         ICM   R5,15,DISCOMM_ALL_AREA_NEXT      1ST AREA ON ALL CHAIN\n         BZ    MAIN0240                         NOTHING ON CHAIN\n         USING AREA_DSECT,R5\n         XC    DISCOMM_ALL_AREA_NEXT,DISCOMM_ALL_AREA_NEXT\nMAIN0230 DS    0H\n         LR    R1,R5                            COPY ADDR\n         L     R5,AREA_NEXT                     NEXT AREA BLOCK\n         ITRACE ID=FREEAREA,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                           FREE THIS AREA BLOCK   +\n               A=(1),                                                  +\n               LV=AREA_DSECT_L\n         LTR   R5,R5                            ANOTHER AREA?\n         BNZ   MAIN0230                         YES\n* ------------------------------------------------------------------- *\n*        Merge RLD areas with user specified data areas               *\n* ------------------------------------------------------------------- *\nMAIN0240 DS    0H\n         MVC   DISCOMM_TPUT_MSG(STAT_MSG_05_L),STAT_MSG_05\n         BAL   R6,TPUT0000                      ISSUE TPUT\n         ITRACE ID=DISDMERG\n         L     R15,V_DISDMERG\n         BALR  R14,R15                          MERGE USER AND RLD DATA\n         ITRACE ID=MERGE_X\n         TM    DISCOMM_FLAGS,$DISCOMM_DEBUG     DEBUGGING ON?\n         BNO   MAIN0250                         NO\n         ICM   R1,15,DISCOMM_ALL_AREA_NEXT\n         ITRACE ID=DEBUG_1,                                            +\n               RDATA1=R1\n         L     R15,V_DISDEBUG\n         BALR  R14,R15\n* ------------------------------------------------------------------- *\n*        Scan text to determine where instructions occur              *\n* ------------------------------------------------------------------- *\nMAIN0250 DS    0H\n         ITRACE ID=DISSCAN\n         MVC   DISCOMM_TPUT_MSG(STAT_MSG_06_L),STAT_MSG_06\n         BAL   R6,TPUT0000                      INFORM USER OF PROGRESS\n         L     R15,V_DISSCAN\n         BALR  R14,R15                          SCAN TEXT\n         ITRACE ID=SCAN_RC,                                            +\n               RDATA1=R15\n         TM    DISCOMM_FLAGS,$DISCOMM_DEBUG     DEBUGGING ON?\n         BNO   MAIN0260                         NO\n         ICM   R1,15,DISCOMM_ALL_AREA_NEXT\n         ITRACE ID=DEBUG_1,                                            +\n               RDATA1=R1\n         L     R15,V_DISDEBUG\n         BALR  R14,R15\nMAIN0260 DS    0H\n* ------------------------------------------------------------------- *\n*        Determine data references                                    *\n* ------------------------------------------------------------------- *\n         ITRACE ID=DISREF\n         MVC   DISCOMM_TPUT_MSG(STAT_MSG_07_L),STAT_MSG_07\n         BAL   R6,TPUT0000                      INFORM USER OF PROGRESS\n         L     R15,V_DISREF\n         BALR  R14,R15                          DETERMINE REFERENCES\n         ITRACE ID=REF_X\n         TM    DISCOMM_FLAGS,$DISCOMM_DEBUG     DEBUGGING ON?\n         BNO   MAIN0270                         NO\n         ICM   R1,15,DISCOMM_ALL_AREA_NEXT\n         ITRACE ID=DEBUG_1,                                            +\n               RDATA1=R1\n         L     R15,V_DISDEBUG\n         BALR  R14,R15\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*        Generate source                                              *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0270 DS    0H\n* ------------------------------------------------------------------- *\n*        Make sure DISPUNCH and DISTEMP are free                      *\n* ------------------------------------------------------------------- *\n         MVI   DAIR_FUNC,$DAIR_FREE             SET FUNCTION\n         MVI   DAIR_OPTS,0                      RESET ALL OPTIONS\n         MVC   DAIR_DD,DD_DISPUNCH\n         LA    R1,DAIRREQ                       DAIR PARMS\n         L     R15,COMM_V_OSDAIR                OSDAIR ENTRY POINT\n         ITRACE ID=FREEPNCH,                                           +\n               RDATA1=R15,                                             +\n               RDATA2=R1\n         BALR  R14,R15                          FREE DISPUNCH\n         ITRACE ID=DAIR_RC,                                            +\n               RDATA1=R15\n         MVC   DAIR_DD,DD_DISTEMP\n         LA    R1,DAIRREQ                       DAIR PARMS\n         L     R15,COMM_V_OSDAIR                OSDAIR ENTRY POINT\n         ITRACE ID=FREETEMP,                                           +\n               RDATA1=R15,                                             +\n               RDATA2=R1\n         BALR  R14,R15                          FREE DISPUNCH\n         ITRACE ID=DAIR_RC,                                            +\n               RDATA1=R15\n* ------------------------------------------------------------------- *\n*        Allocate DISPUNCH                                            *\n* ------------------------------------------------------------------- *\n         MVI   DAIR_FUNC,$DAIR_ALLOC            SET FUNCTION\n         MVI   DAIR_OPTS,$DAIR_USE_DD           USE SPECIFIED DDNAME\n         MVC   DAIR_DSN,DISCOMM_OUTPUT_DSN      DSN\n         MVC   DAIR_DD,DD_DISPUNCH              DD NAME\n         MVC   DAIR_MEMBER,DISCOMM_OUTPUT_MEMBER\n         MVC   DAIR_VOLSER,DISCOMM_OUTPUT_VOLSER\n         MVI   DAIR_DISP,$DAIR_DISP_SHR         DISP\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR                OS DAIR ENTRY POINT\n         ITRACE ID=ALOCPNCH,                                           +\n               RDATA1=R15,                                             +\n               RDATA2=R1\n         BALR  R14,R15                          ALLOCATE DISPUNCH\n         ITRACE ID=DAIR_RC,                                            +\n               DATA1=DAIR_R15\n         OC    DAIR_R15,DAIR_R15                SUCCESSFUL?\n         BNZ   ERR0110                          NO\n* ------------------------------------------------------------------- *\n*        OPEN DISPUNCH                                                *\n* ------------------------------------------------------------------- *\n         ITRACE ID=OPENPNCH\n         OPEN  (DISPUNCH_DCB,OUTPUT),           OPEN DISPUNCH          +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_OPEN)\n* ------------------------------------------------------------------- *\n*        Allocate DISTEMP                                             *\n* ------------------------------------------------------------------- *\n         MVI   DAIR_OPTS,$DAIR_USE_DD+$DAIR_TEMP\n         MVC   DAIR_DD,DD_DISTEMP               DD NAME\n         MVC   DAIR_MEMBER,COMM_BLANKS\n         MVC   DAIR_VOLSER,COMM_BLANKS\n         MVC   DAIR_PRI,NINETY                  PRIMARY 90 TRACKS\n         MVC   DAIR_SEC,NINETY                  SECONDARY 90 TRACKS\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR                OS DAIR ENTRY POINT\n         ITRACE ID=ALOCTEMP,                                           +\n               RDATA1=R15,                                             +\n               RDATA2=R1\n         BALR  R14,R15                          ALLOCATE DISTEMP\n         ITRACE ID=DAIR_RC,                                            +\n               DATA1=DAIR_R15\n         OC    DAIR_R15,DAIR_R15                SUCCESSFUL?\n         BNZ   ERR0110                          NO\n* ------------------------------------------------------------------- *\n*        OPEN DISTEMP                                                 *\n* ------------------------------------------------------------------- *\n         ITRACE ID=OPENTEMP\n         OPEN  (DISTEMP_DCB,OUTPUT),            OPEN DISTEMP           +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_OPEN)\n* ------------------------------------------------------------------- *\n*        Generate assembler source                                    *\n* ------------------------------------------------------------------- *\n         MVC   DISCOMM_TPUT_MSG(STAT_MSG_08_L),STAT_MSG_08\n         BAL   R6,TPUT0000                      ISSUE TPUT\n         ITRACE ID=CALL_GEN\n         L     R15,V_DISGEN                     DISGEN ENTRY POINT\n         BALR  R14,R15                          CALL DISGEN\n         ITRACE ID=GEN_X\n* ------------------------------------------------------------------- *\n*        CLOSE DISPUNCH                                               *\n* ------------------------------------------------------------------- *\n         ITRACE ID=CLSEPNCH\n         CLOSE DISPUNCH_DCB,                    CLOSE DISPUNCH         +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_CLOSE)\n         FREEPOOL DISPUNCH_DCB\n* ------------------------------------------------------------------- *\n*        FREE DISPUNCH                                                *\n* ------------------------------------------------------------------- *\n         MVI   DAIR_FUNC,$DAIR_FREE             SET FUNCTION\n         MVC   DAIR_DD,DD_DISPUNCH\n         LA    R1,DAIRREQ                       DAIR PARMS\n         L     R15,COMM_V_OSDAIR                OSDAIR ENTRY POINT\n         ITRACE ID=FREEPNCH,                                           +\n               RDATA1=R15,                                             +\n               RDATA2=R1\n         BALR  R14,R15                          FREE DISPUNCH\n         ITRACE ID=DAIR_RC,                                            +\n               RDATA1=R15\n         OC    DAIR_R15,DAIR_R15                SUCCESSFUL?\n         BNZ   ERR0110                          NO\n* ------------------------------------------------------------------- *\n*        CLOSE DISTEMP                                                *\n* ------------------------------------------------------------------- *\n         ITRACE ID=CLSETEMP\n         CLOSE DISTEMP_DCB,                     CLOSE DISTEMP          +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_CLOSE)\n         FREEPOOL DISTEMP_DCB\n* ------------------------------------------------------------------- *\n*        Inform the user of success                                   *\n* ------------------------------------------------------------------- *\n         MVC   DISCOMM_TPUT_MSG(STAT_MSG_09_L),STAT_MSG_09\n         BAL   R6,TPUT0000                      ISSUE TPUT\n* ------------------------------------------------------------------- *\n*        Get DDID for DISTEMP                                         *\n* ------------------------------------------------------------------- *\n         ITRACE ID=LMINIT\n         LA    R0,FUNCTION_LMINIT\n         ST    R0,DXD_SPF_1\n         LA    R0,FUNCTION_DDID               DDID (RETURNED BY LMINIT)\n         ST    R0,DXD_SPF_2\n         LA    R0,COMM_BLANKS\n         ST    R0,DXD_SPF_3\n         ST    R0,DXD_SPF_4\n         ST    R0,DXD_SPF_5\n         ST    R0,DXD_SPF_6\n         ST    R0,DXD_SPF_7\n         ST    R0,DXD_SPF_8\n         ST    R0,DXD_SPF_9\n         LA    R0,DD_DISTEMP                  DDNAME\n         ST    R0,DXD_SPF_10                  SET DDNAME ADDR\n         OI    DXD_SPF_10,X'80'               SET END-OF-LIST\n         LA    R1,DXD_SPF_PARMS               SPF PARMS\n         L     R15,COMM_ISPLINK               ISPLINK ENTRY POINT\n         BALR  R14,R15                        OBTAIN DDID\n         ITRACE ID=LMINITRC,                                           +\n               RDATA1=R15,                                             +\n               DATA2=SPF_DDID\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         ITRACE ID=DDID,                                               +\n               DATA1=SPF_DDID\n*---------------------------------------------------------------------*\n*        INVOKE EDIT                                                  *\n*---------------------------------------------------------------------*\n         LA    R0,FUNCTION_EDIT\n         ST    R0,DXD_SPF_1\n         LA    R0,COMM_BLANKS\n         ST    R0,DXD_SPF_2\n         ST    R0,DXD_SPF_3\n         ST    R0,DXD_SPF_4\n         ST    R0,DXD_SPF_5\n         ST    R0,DXD_SPF_6\n         ST    R0,DXD_SPF_7\n         LA    R0,SPF_DDID\n         ST    R0,DXD_SPF_8\n         OI    DXD_SPF_8,X'80'\n         LA    R1,DXD_SPF_PARMS\n         ITRACE ID=EDIT,                                               +\n               DATA1=SPF_DDID\n         L     R15,COMM_ISPLINK\n         BALR  R14,R15                          INVOKE EDIT\n         ITRACE ID=EDIT_RC,                                            +\n               RDATA1=R15\n         CH    R15,H4                           RC > 4?\n         BH    ERR0020                          YES\n* ------------------------------------------------------------------- *\n*        FREE DISTEMP                                                 *\n* ------------------------------------------------------------------- *\n         MVI   DAIR_FUNC,$DAIR_FREE             SET FUNCTION\n         MVC   DAIR_DD,DD_DISTEMP\n         LA    R1,DAIRREQ                       DAIR PARMS\n         L     R15,COMM_V_OSDAIR                OSDAIR ENTRY POINT\n         ITRACE ID=FREETEMP,                                           +\n               RDATA1=R15,                                             +\n               RDATA2=R1\n         BALR  R14,R15                          FREE DISTEMP\n         ITRACE ID=DAIR_RC,                                            +\n               RDATA1=R15\n         OC    DAIR_R15,DAIR_R15                SUCCESSFUL?\n         BNZ   ERR0110                          NO\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0280 DS    0H\n         ITRACE ID=ASMERROR\n         CLC   SPF_MSG_1,COMM_BLANKS            ALREADY HAVE MESSAGE?\n         BNE   MAIN0100                         YES\n         MVC   SPF_MSG_1(MSG05_L),MSG05\n         MVC   SPF_MSG_2(MSG06_L),MSG06\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0300 DS    0H\n         ITRACE ID=KSDS\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         SR    R1,R1                            DISPLAY EXISTING KSDSes\n         L     R15,V_DISKLIST                   DISKLIST ENTRY POINT\n         BALR  R14,R15                          CALL DISKLIST\n         ITRACE ID=KSDS_X\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0310 DS    0H\n         ITRACE ID=OPTIONS\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         L     R15,V_DISOPTS                    DISOPTS ENTRY POINT\n         BALR  R14,R15                          CALL DISOPTS\n         ITRACE ID=OPTS_X\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0320 DS    0H\n         ITRACE ID=RLD\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         L     R15,V_DISRLIST                   DISRLIST ENTRY POINT\n         BALR  R14,R15                          CALL DISRLIST\n         ITRACE ID=RLD_X\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0330 DS    0H\n         ITRACE ID=SYSLIB\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         SR    R1,R1                            DISPLAY EXISTING LIBs\n         L     R15,V_DISSLIST                   DISSLIST ENTRY POINT\n         BALR  R14,R15                          CALL DISSLIST\n         ITRACE ID=SYSLIB_X\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0340 DS    0H\n         ITRACE ID=TEXT\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         L     R15,V_DISTLIST                   DISTLIST ENTRY POINT\n         BALR  R14,R15                          CALL DISTLIST\n         ITRACE ID=TEXT_X\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0350 DS    0H\n         ITRACE ID=USINGS\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         L     R15,V_DISULIST                   DISULIST ENTRY POINT\n         BALR  R14,R15                          CALL DISULIST\n         ITRACE ID=ULIST_X\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0400 DS    0H\n         ITRACE ID=DEBUGON\n         OI    DISCOMM_FLAGS,$DISCOMM_DEBUG     SET DEBUG FLAG\n         MVC   SPF_MSG_2(MSG03_L),MSG03\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0410 DS    0H\n         ITRACE ID=DEBUGOFF\n         NI    DISCOMM_FLAGS,255-$DISCOMM_DEBUG  RESET DEBUG FLAG\n         MVC   SPF_MSG_2(MSG04_L),MSG04\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTPUT0000 DS    0H\n         TPUT  DISCOMM_TPUT_MSG,80\n         MVC   DISCOMM_TPUT_MSG,COMM_BLANKS\n         BR    R6\n         DROP  R5\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         ITRACE ID=CLEAN\n         ICM   R2,15,DISCOMM_ESD_NEXT           ANY ESD BLOCKS?\n         BZ    CLEAN020                         NO\n         XC    DISCOMM_ESD_NEXT,DISCOMM_ESD_NEXT\n         USING ESD_DSECT,R2\nCLEAN010 DS    0H\n         LR    R1,R2\n         ICM   R2,15,ESD_NEXT                   NEXT ESD BLOCK\n         ITRACE ID=FREE_ESD,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=ESD_DSECT_L\n         LTR   R2,R2\n         BNZ   CLEAN010\nCLEAN020 DS    0H\n         DROP  R2\n         ICM   R2,15,DISCOMM_RLD_AREA_NEXT      ANY RLD BLOCKS?\n         BZ    CLEAN040                         NO\n         XC    DISCOMM_RLD_AREA_NEXT,DISCOMM_RLD_AREA_NEXT\n         USING AREA_DSECT,R2\nCLEAN030 DS    0H\n         LR    R1,R2\n         ICM   R2,15,AREA_NEXT                  NEXT RLD BLOCK\n         ITRACE ID=FREE_RLD,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=AREA_DSECT_L\n         LTR   R2,R2\n         BNZ   CLEAN030\nCLEAN040 DS    0H\n         ICM   R2,15,DISCOMM_USER_AREA_NEXT_1   ANY USER AREA BLOCKS?\n         BZ    CLEAN060                         NO\n         XC    DISCOMM_USER_AREA_NEXT_1,DISCOMM_USER_AREA_NEXT_1\n         USING AREA_DSECT,R2\nCLEAN050 DS    0H\n         LR    R1,R2\n         ICM   R2,15,AREA_NEXT                  NEXT USER BLOCK\n         ITRACE ID=FREEUSR1,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=AREA_DSECT_L\n         LTR   R2,R2\n         BNZ   CLEAN050\nCLEAN060 DS    0H\n         ICM   R2,15,DISCOMM_ALL_AREA_NEXT      ANY ALL AREA BLOCKS?\n         BZ    CLEAN080                         NO\n         XC    DISCOMM_ALL_AREA_NEXT,DISCOMM_ALL_AREA_NEXT\n         USING AREA_DSECT,R2\nCLEAN070 DS    0H\n         ICM   R3,15,AREA_LABEL                 ANY LABELS?\n         BZ    CLEAN07B                         NO\n         USING LABEL_DSECT,R3\nCLEAN07A DS    0H\n         LR    R1,R3                            COPY LABEL BLOCK ADDR\n         ICM   R3,15,LABEL_NEXT\n         ITRACE ID=FREELABL,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=LABEL_DSECT_L\n         LTR   R3,R3                            ANOTHER LABEL?\n         BNZ   CLEAN07A                         YES\n         DROP  R3\nCLEAN07B DS    0H\n         LR    R1,R2                            COPY AREA BLOCK ADDR\n         ICM   R2,15,AREA_NEXT                  NEXT ALL AREA BLOCK\n         ITRACE ID=FREE_ALL,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=AREA_DSECT_L\n         LTR   R2,R2\n         BNZ   CLEAN070\nCLEAN080 DS    0H\n         DROP  R2\n         ICM   R2,15,DISCOMM_BASE_NEXT          ANY BASE BLOCKS?\n         BZ    CLEAN100                         NO\n         XC    DISCOMM_BASE_NEXT,DISCOMM_BASE_NEXT\nCLEAN090 DS    0H\n         USING BASE_DSECT,R2\n         LR    R1,R2\n         ICM   R2,15,BASE_NEXT                  NEXT BASE BLOCK\n         ITRACE ID=FREEBASE,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=BASE_DSECT_L\n         LTR   R2,R2                            ANOTHER BASE BLOCK?\n         BNZ   CLEAN090                         YES\nCLEAN100 DS    0H\n         DROP  R2\n         ICM   R2,15,DISCOMM_DSECT_NEXT         ANY DSECT BLOCKS?\n         BZ    CLEAN160                         NO\n         XC    DISCOMM_DSECT_NEXT,DISCOMM_DSECT_NEXT\nCLEAN110 DS    0H\n         USING DSECT_DSECT,R2\n         ICM   R3,15,DSECT_LABEL_NEXT           ANY LABELS?\n         BNZ   CLEAN150                         NO\n         USING LABEL_DSECT,R3\nCLEAN120 DS    0H\n         ICM   R4,15,LABEL_EQU_NEXT             ANY EQUATES?\n         BZ    CLEAN140                         NO\n         USING EQU_DSECT,R4\nCLEAN130 DS    0H\n         LR    R1,R4                            COPY EQU BLOCK ADDR\n         ICM   R4,15,EQU_NEXT                   NEXT EQU BLOCK\n         ITRACE ID=FREEEQU1,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                           FREE EQU BLOCK         +\n               A=(1),                                                  +\n               LV=EQU_DSECT_L\n         LTR   R4,R4                            ANOTHER EQU BLOCK\n         BNZ   CLEAN130                         YES\n         DROP  R4\nCLEAN140 DS    0H\n         LR    R1,R3                            COPY LABEL BLOCK ADDR\n         ICM   R3,15,LABEL_NEXT                 NEXT LABEL\n         ITRACE ID=FREELBL1,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                           FREE LABEL BLOCK       +\n               A=(1),                                                  +\n               LV=LABEL_DSECT_L\n         LTR   R3,R3                            ANOTHER LABEL BLOCK?\n         BNZ   CLEAN120                         YES\n         DROP  R3\nCLEAN150 DS    0H\n         LR    R1,R2                            COPY DSECT BLOCK ADDR\n         ICM   R2,15,DSECT_NEXT                 NEXT DSECT BLOCK\n         ITRACE ID=FREEDSC1,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                           FREE DSECT BLOCK       +\n               A=(1),                                                  +\n               LV=DSECT_DSECT_L\n         LTR   R2,R2                            ANOTHER DSECT BLOCK?\n         BNZ   CLEAN110                         YES\nCLEAN160 DS    0H\n         DROP  R2\n         ICM   R2,15,DISCOMM_USING_NEXT         ANY USING BLOCKS?\n         BZ    CLEAN180                         NO\n         USING USING_DSECT,R2\n         XC    DISCOMM_USING_NEXT,DISCOMM_USING_NEXT\nCLEAN170 DS    0H\n         LR    R1,R2                            COPY USING BLOCK ADDR\n         ICM   R2,15,USING_NEXT                 NEXT USING BLOCK\n         ITRACE ID=FREEUSNG,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                           FREE USING BLOCK       +\n               A=(1),                                                  +\n               LV=USING_DSECT_L\n         LTR   R2,R2                            ANOTHER USING BLOCK?\n         BNZ   CLEAN170                         YES\n         DROP  R2\nCLEAN180 DS    0H\n         ICM   R2,15,DISCOMM_KSDS_NEXT          ANY DSECT KSDS?\n         BZ    CLEAN270                         NO\n         XC    DISCOMM_KSDS_NEXT,DISCOMM_KSDS_NEXT\n         USING KSDS_DSECT,R2\nCLEAN190 DS    0H\n         ICM   R3,15,KSDS_DSECT_NEXT            ANY DSECT BLOCKS?\n         BZ    CLEAN250                         NO\n         USING DSECT_DSECT,R3\nCLEAN200 DS    0H\n         ITRACE ID=DSECT,                                              +\n               DATA1=DSECT_NAME+0,                                     +\n               DATA2=DSECT_NAME+8\n         ICM   R4,15,DSECT_LABEL_NEXT           ANY LABELS?\n         BZ    CLEAN240                         NO\n         USING LABEL_DSECT,R4\nCLEAN210 DS    0H\n         ITRACE ID=LABEL,                                              +\n               DATA1=LABEL_NAME+0,                                     +\n               DATA2=LABEL_NAME+8\n         ICM   R5,15,LABEL_EQU_NEXT             ANY EQUATES?\n         BZ    CLEAN230                         NO\n         USING EQU_DSECT,R5\nCLEAN220 DS    0H\n         ITRACE ID=EQU,                                                +\n               DATA1=EQU_LABEL+0,                                      +\n               DATA2=EQU_LABEL+8\n         LR    R1,R5                            COPY EQU BLOCK ADDR\n         ICM   R5,15,EQU_NEXT                   NEXT EQU BLOCK\n         ITRACE ID=FREEEQU2,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                           FREE EQU BLOCK         +\n               A=(1),                                                  +\n               LV=EQU_DSECT_L\n         LTR   R5,R5                            ANOTHER EQU BLOCK\n         BNZ   CLEAN220                         YES\n         DROP  R5\nCLEAN230 DS    0H\n         LR    R1,R4                            COPY LABEL BLOCK ADDR\n         ICM   R4,15,LABEL_NEXT                 NEXT LABEL\n         ITRACE ID=FREELBL2,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                           FREE LABEL BLOCK       +\n               A=(1),                                                  +\n               LV=LABEL_DSECT_L\n         LTR   R4,R4                            ANOTHER LABEL BLOCK?\n         BNZ   CLEAN210                         YES\n         DROP  R4\nCLEAN240 DS    0H\n         LR    R1,R3                            COPY DSECT BLOCK ADDR\n         ICM   R3,15,DSECT_NEXT                 NEXT DSECT BLOCK\n         ITRACE ID=FREEDSC2,                                           +\n               DATA1=DSECT_NAME,                                       +\n               RDATA2=R1\n         FREEMAIN RU,                           FREE DSECT BLOCK       +\n               A=(1),                                                  +\n               LV=DSECT_DSECT_L\n         LTR   R3,R3                            ANOTHER DSECT BLOCK?\n         BNZ   CLEAN200                         YES\n         DROP  R3\nCLEAN250 DS    0H\n         TM    KSDS_FLAGS,$KSDS_OPEN            KSDS OPEN?\n         BNO   CLEAN260                         NO\n         ITRACE ID=CLOSE,                                              +\n               DATA1=KSDS_DDNAME\n         CLOSE KSDS_ACB,                                               +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_CLOSE)\nCLEAN260 DS    0H\n         ITRACE ID=FREE_DD,                                            +\n               DATA1=KSDS_DDNAME\n         MVI   DAIR_FUNC,$DAIR_FREE             SET COMMAND\n         MVI   DAIR_OPTS,$DAIR_NO_MSGS          SET OPTIONS\n         MVC   DAIR_DD,KSDS_DDNAME              COPY DDNAME\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR                OSDAIR ENTRY POINT\n         BALR  R14,R15                          CALL OSDAIR\n         LR    R1,R2                            COPY DSECT BLOCK ADDR\n         ICM   R2,15,KSDS_NEXT                  NEXT DSECT BLOCK\n         ITRACE ID=FREEKSDS,                                           +\n               DATA1=KSDS_DDNAME,                                      +\n               RDATA2=R1\n         FREEMAIN RU,                           FREE DSECT BLOCK       +\n               A=(1),                                                  +\n               LV=KSDS_DSECT_L\n         LTR   R2,R2                            ANOTHER KSDS BLOCK?\n         BNZ   CLEAN190                         YES\nCLEAN270 DS    0H\n         ICM   R2,15,DISCOMM_SYSLIB_NEXT        ANY SYSLIB BLOCKS?\n         BZ    CLEAN290                         NO\n         XC    DISCOMM_SYSLIB_NEXT,DISCOMM_SYSLIB_NEXT\n         USING SYSLIB_DSECT,R2\nCLEAN280 DS    0H\n         LR    R1,R2                            COPY SYSLIB BLOCK\n         ICM   R2,15,SYSLIB_NEXT\n         ITRACE ID=FREESLIB,                                           +\n               DATA1=SYSLIB_DDNAME,                                    +\n               RDATA2=R1\n         FREEMAIN RU,                           FREE SYSLIB BLOCK      +\n               A=(1),                                                  +\n               LV=SYSLIB_DSECT_L\n         LTR   R2,R2                            ANOTHER DSECT BLOCK?\n         BNZ   CLEAN280                         YES\nCLEAN290 DS    0H\n         DROP  R2\n         ICM   R2,15,DISCOMM_ASM_NEXT           ANY ASM BLOCKS?\n         BZ    CLEAN310                         NO\n         XC    DISCOMM_ASM_NEXT,DISCOMM_ASM_NEXT\n         USING ASM_DSECT,R2\nCLEAN300 DS    0H\n         LR    R1,R2                            COPY ASM BLOCK\n         ICM   R2,15,ASM_NEXT\n         ITRACE ID=FREE_ASM,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                           FREE ASM BLOCK         +\n               A=(1),                                                  +\n               LV=ASM_DSECT_L\n         LTR   R2,R2                            ANOTHER ASM BLOCK?\n         BNZ   CLEAN300                         YES\nCLEAN310 DS    0H\n         DROP  R2\n         L     R0,DISCOMM_CSECT_LENGTH\n         ICM   R1,15,DISCOMM_CSECT_TEXT\n         BZ    CLEAN320\n         XC    DISCOMM_CSECT_TEXT,DISCOMM_CSECT_TEXT\n         XC    DISCOMM_CSECT_LENGTH,DISCOMM_CSECT_LENGTH\n         ITRACE ID=FREETEXT,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R0\n         FREEMAIN RU,                           FREE CSECT TEXT        +\n               A=(1),                                                  +\n               LV=(0)\nCLEAN320 DS    0H\n         BR    R6\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVI   COMM_MSG_ID+1,1\n         B     ERR0100\nERR0020  DS    0H\n         MVI   COMM_MSG_ID+1,2\n         STH   R15,COMM_INFO_01\n         B     ERR0100\nERR0100  DS    0H\n         MVI   COMM_MSG_ID,0\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\nERR0110  DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1             COPY MESSAGE\n         MVC   SPF_MSG_2,COMM_MSG_2             COPY MESSAGE\n         MVC   SPF_MSG_3,COMM_MSG_3             COPY MESSAGE\n         MVC   SPF_MSG_4,COMM_MSG_4             COPY MESSAGE\n         MVC   SPF_MSG_5,COMM_MSG_5             COPY MESSAGE\n         B     MAIN0100                         DISPLAY WITH MSG\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Assuming that I ever get this thing to work....                 *\n*       Free all the AREA blocks (RLD, ESD, DATA,.. )                 *\n*       Free all the ASM blocks                                       *\n*       Free all the BASE blocks                                      *\n*       Free all the DSECT blocks (and LABELs, EQU's chained)         *\n*       Free all the KSDS  blocks                                     *\n*       Free all the NAME  blocks                                     *\n*       Free all the SYSLIB blocks                                    *\n*       Free all the USING blocks                                     *\n*       Free the text                                                 *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=CLEANUP\n         ICM   R2,15,DISCOMM_NAME_NEXT          ANY NAME BLOCKS?\n         BZ    EXIT0020\n         USING NAME_DSECT,R2\nEXIT0010 DS    0H\n         LR    R1,R2\n         ICM   R2,15,NAME_NEXT                  NEXT NAME BLOCK\n         USING NAME_DSECT,R2\n         ITRACE ID=FREENAME,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=NAME_DSECT_L\n         LTR   R2,R2\n         BNZ   EXIT0010\nEXIT0020 DS    0H\n         L     R1,SESS_FUNCTION_DATA\n         ITRACE ID=DEL_DATA,                    FREE DIRECTORY DATA    +\n               RDATA1=R1\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=DIR_RECORD_L\n         XC    SESS_FUNCTION_DATA,SESS_FUNCTION_DATA\n         ITRACE ID=DELMSGS\n         DELETE EP=DISMSGUS                     DELETE MESSAGES\n         XC    SESS_MESSAGES,SESS_MESSAGES\n         ITRACE ID=DELCOMM\n         DELETE EP=DISCOMM                      DELETE COMMON AREA\n         ICM   R1,15,SESS_DXD_ADDR              COPY WORK AREA ADDR\n         BZ    EXIT0030\n         L     R0,SESS_DXD_LENGTH\n         ITRACE ID=FREE_DXD,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R0\n         L     R13,4(,R13)                      RESTORE R13\n         FREEMAIN RU,                           FREEMAIN WORK AREA     +\n               A=(R1),                                                 +\n               LV=(0)\n         XC    SESS_DXD_ADDR,SESS_DXD_ADDR      RESET ADDRESS\n         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH  RESET LENGTH\nEXIT0030 DS    0H\n         LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\nEXIT0040 DS    0H\n         ITRACE ID=ENDING\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE      SET FUNCTION\nEXIT0050 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                      RESTORE R13\n         LM    R14,R12,12(R13)                  RESTORE REGISTERS\n         SR    R15,R15                          SET RC\n         BR    R14                              RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_LENGTH     CXD\nDXD_START      DC       Q(DXDMAIN)\nV_DISALIST     DC       V(DISALIST)\nV_DISASSEM     DC       V(DISASSEM)\nV_DISBLIST     DC       V(DISBLIST)\nV_DISBIND      DC       V(DISBIND)\nV_DISCONF      DC       V(DISCONF)\nV_DISDEBUG     DC       V(DISDEBUG)\nV_DISDLIST     DC       V(DISDLIST)\nV_DISDMERG     DC       V(DISDMERG)\nV_DISDSECT     DC       V(DISDSECT)\nV_DISELIST     DC       V(DISELIST)\nV_DISGEN       DC       V(DISGEN)\nV_DISKLIST     DC       V(DISKLIST)\nV_DISNLIST     DC       V(DISNLIST)\nV_DISOPTS      DC       V(DISOPTS)\nV_DISREF       DC       V(DISREF)\nV_DISRLIST     DC       V(DISRLIST)\nV_DISSCAN      DC       V(DISSCAN)\nV_DISSLIST     DC       V(DISSLIST)\nV_DISTLIST     DC       V(DISTLIST)\nV_DISULIST     DC       V(DISULIST)\nV_DISVBU       DC       V(DISVBU)\n\nF1             DC       F'1'\nH4             DC       H'4'\n\nDD_DISPUNCH    DC       CL8'DISPUNCH'\nDD_DISTEMP     DC       CL8'DISTEMP'\nDEFAULT_PREFIX DC       C'LABL'\nFUNCTION_EDIT   DC      CL8'EDIT'\nFUNCTION_DDID   DC      CL8'DDID'\nFUNCTION_LMINIT DC      CL8'LMINIT'\nMENU_PANEL     DC       CL8'DISMENU'\nNAMELIST_PANEL DC       CL8'DISNLIST'\nNINETY         DC       AL3(90)\n\nMSG01          DS       0C\n               DC       C'DISMAIN01I '\n               DC       C' Enter a selection'\nMSG01_L        EQU      *-MSG01\n\nMSG02          DS       0C\n               DC       C'DISMAIN02E '\n               DC       C' Invalid function code'\nMSG02_L        EQU      *-MSG02\n\nMSG03          DS       0C\n               DC       C'DISMAIN03I '\n               DC       C' Debugging activated'\nMSG03_L        EQU      *-MSG03\n\nMSG04          DS       0C\n               DC       C'DISMAIN04I '\n               DC       C' Debugging de-activated'\nMSG04_L        EQU      *-MSG04\n\nMSG05          DS       0C\n               DC       C'DISMAIN05E '\n               DC       C'Error(s) assembling source'\nMSG05_L        EQU      *-MSG05\n\nMSG06          DS       0C\n               DC       C'DISMAIN06E '\n               DC       C'Correct source or SYSLIBs (option A or S)'\nMSG06_L        EQU      *-MSG06\n\nSTAT_MSG_01    DS       0C\n               DC       C'Assembling source from option A'\nSTAT_MSG_01_L  EQU      *-STAT_MSG_01\n\nSTAT_MSG_02    DS       0C\n               DC       C'Verifying BASEs and USINGs'\nSTAT_MSG_02_L  EQU      *-STAT_MSG_02\n\nSTAT_MSG_03    DS       0C\n               DC       C'Connecting USINGs to DSECTs'\nSTAT_MSG_03_L  EQU      *-STAT_MSG_03\n\nSTAT_MSG_04    DS       0C\n               DC       C'Deleting old ALL areas chain'\nSTAT_MSG_04_L  EQU      *-STAT_MSG_04\n\nSTAT_MSG_05    DS       0C\n               DC       C'Building new ALL areas chain'\nSTAT_MSG_05_L  EQU      *-STAT_MSG_05\n\nSTAT_MSG_06    DS       0C\n               DC       C'Scanning text to determine where instructions+\n                occur'\nSTAT_MSG_06_L  EQU      *-STAT_MSG_06\n\nSTAT_MSG_07    DS       0C\n               DC       C'Determining data references'\nSTAT_MSG_07_L  EQU      *-STAT_MSG_07\n\nSTAT_MSG_08    DS       0C\n               DC       C'Generating source'\nSTAT_MSG_08_L  EQU      *-STAT_MSG_08\n\nSTAT_MSG_09    DS       0C\n               DC       C'Source generation complete'\nSTAT_MSG_09_L  EQU      *-STAT_MSG_09\n\n\n               LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDMAIN          DSECT\n                 COPY     DXDPREF\n\nDXD_SPF_PARMS    DS       0A\nDXD_SPF_1        DS       A\nDXD_SPF_2        DS       A\nDXD_SPF_3        DS       A\nDXD_SPF_4        DS       A\nDXD_SPF_5        DS       A\nDXD_SPF_6        DS       A\nDXD_SPF_7        DS       A\nDXD_SPF_8        DS       A\nDXD_SPF_9        DS       A\nDXD_SPF_10       DS       A\n\nDXD_RC           DS       H\n\n                 DAIRREQ  DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDIR_DSECT        DSECT\n                 COPY     DIR\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n                 END      DISMAIN\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISMAINO": {"ttr": 8963, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00S\\x01\\x10\\x02o\\x01\\x10\\x02o\\x08\\x03\\x05\\x0c\\x05\\x0c\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2010-01-26T00:00:00", "modifydate": "2010-01-26T08:03:53", "lines": 1292, "newlines": 1292, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: DISMAIN                                               *\n*                                                                     *\n*  Disassembler mainline                                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISMAIN  CSECT\nDISMAIN  AMODE 31\nDISMAIN  RMODE ANY\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISMAIN,R15\n         B     INIT0000\nMODID    DC    CL8'DISMAIN'\n         DC    CL8'&SYSDATE'\n         DC    CL7'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                  SAVE REGS\n         LR    R10,R15                          COPY ENTRY POINT\n         LA    R7,2048(,R10)\n         LA    R7,2048(,R7)\n         DROP  R15\n         USING DISMAIN,R10,R7                   DEFINE BASE\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_INITIALIZE\n         BNE   MAIN0000                         NO\n* ------------------------------------------------------------------- *\n*        Initialization                                               *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         L     R0,DXD_LENGTH\n         ST    R0,SESS_DXD_LENGTH               SAVE WORK AREA LENGTH\n         GETMAIN RU,                                                   +\n               LV=(R0),                                                +\n               LOC=ANY\n         ST    R1,SESS_DXD_ADDR                 SET WORK AREA ADDRESS\n         LR    R2,R1\n         LR    R0,R1\n         L     R1,DXD_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                           INITIALIZE WORK AREA\n         A     R2,DXD_START\n         ST    R13,4(,R2)                       SAVE R13\n         ST    R2,8(,R13)                       CHAIN SAVE AREA\n         LR    R13,R2                           COPY WORK AREA ADDRESS\n         USING DXDMAIN,R13                      DEFINE WORK AREA BASE\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               DATA1=(SESS_DXD_ADDR,4),                                +\n               DATA2=(SESS_DXD_LENGTH,4)\n         LOAD  EP=DISCOMM\n         LR    R9,R0\n         ITRACE ID=DISCOMM,                                            +\n               RDATA1=R9\n         USING DISCOMM,R9\n         ST    R9,SESS_COMM                     SAVE DISCOMM ADDRESS\n         L     R8,COMM_OSSPFD                   SPF DATA AREA\n         USING OSSPFD,R8                        DEFINE BASE\n         LOAD  EP=DISMSGUS\n         ST    R0,SESS_MESSAGES\n* ------------------------------------------------------------------- *\n*        GETMAIN VDATA buffer                                         *\n* ------------------------------------------------------------------- *\n         ITRACE ID=GETVDATA\n         LA    R1,NAMELIST_PANEL\n         MVC   DISCOMM_PANEL_NAME,NAMELIST_PANEL\n         MVI   COMM_VDATA_FUNC,$VDATA_GETMAIN\n         L     R15,COMM_V_OSVDATA\n         BALR  R14,R15                          GETMAIN VDATA STORAGE\n         ST    R0,DISCOMM_VDATA_LENGTH          SAVE LENGTH\n         ST    R1,DISCOMM_VDATA_ADDR            SAVE ADDRESS\n         ITRACE ID=VDATA,                                              +\n               RDATA1=R1,                                              +\n               RDATA2=R0\n         B     EXIT0420\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         L     R15,SESS_DXD_ADDR                WORK AREA BASE\n         A     R15,DXD_START                    PLUS DISP\n         ST    R13,4(,R15)                      SAVE R13\n         ST    R15,8(,R13)                      CHAIN SAVE AREA\n         LR    R13,R15                          COPY WORK AREA ADDRESS\n         L     R9,SESS_COMM                     RESTORE DISCOMM ADDR\n         L     R8,COMM_OSSPFD                   SPF DATA AREA\n         MVC   SPF_ZCMD,COMM_BLANKS             RESET COMMAND\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CONTROL\n         BE    EXIT0420\n         CLI   SESS_FORMAT_FLAGS,$FORMAT_CLEANUP\n         BE    EXIT0000\n* ------------------------------------------------------------------- *\n*        Start binder dialog                                          *\n* ------------------------------------------------------------------- *\n         ITRACE ID=STARTD\n         L     R9,SESS_COMM                     DISCOMM ADDRESS\n         MVC   DISCOMM_LMOD,SESS_MEMBER         LMOD NAME = MEMBER NAME\n         MVC   DISCOMM_DDNAME,SESS_DD           SET LIBARY DD NAME\n         MVI   DISCOMM_BIND_FUNC,$BIND_STARTD   SET FUNCTION\n         L     R15,V_DISBIND                    DISBIND ENTRY POINT\n         BALR  R14,R15                          LINK TO DISIND\n         ITRACE ID=START_RC,                                           +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   EXIT0420                         NO\n* ------------------------------------------------------------------- *\n*        Build section names                                          *\n* ------------------------------------------------------------------- *\n         ITRACE ID=GETN\n         MVI   DISCOMM_BIND_FUNC,$BIND_NAMES    SET FUNCTION\n         L     R15,V_DISBIND                    DISBIND ENTRY POINT\n         BALR  R14,R15                          LINK TO DISIND\n         ITRACE ID=NAMES_RC,                                           +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   EXIT0420                         NO\n         CLC   DISCOMM_NAME_NBR,F1              MORE THAN ONE CSECT?\n         BE    MAIN0010                         NO\n* ------------------------------------------------------------------- *\n*        List section names                                           *\n* ------------------------------------------------------------------- *\n         ITRACE ID=LISTNAME\n         L     R15,V_DISNLIST                   DISNLIST ENTRY POINT\n         BALR  R14,R15                          LINK TO DISIND\n         ITRACE ID=LIST_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BZ    MAIN0020                         YES\n         B     EXIT0410                         OTHERWIZE EXIT\n* ------------------------------------------------------------------- *\n*        Module has only one CSECT                                    *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         ITRACE ID=1_CSECT\n         MVC   SPF_MEMBER,SESS_MEMBER\n         L     R1,DISCOMM_NAME_NEXT             1ST (AND ONLY) NAME\n         USING NAME_DSECT,R1\n         MVC   DISCOMM_CSECT,NAME_NAME\n         MVC   SPF_CSECT,NAME_NAME\n* ------------------------------------------------------------------- *\n*        GET ESD and RLD info for selected (or only CSECT)            *\n* ------------------------------------------------------------------- *\nMAIN0020 DS    0H\n         ITRACE ID=ESD_RLD\n         MVI   DISCOMM_BIND_FUNC,$BIND_ESD_RLD\n         L     R15,V_DISBIND                    DISBIND ENTRY POINT\n         BALR  R14,R15                          LINK TO DISIND\n         ITRACE ID=ESDRLDRC,                                           +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   EXIT0420                         NO\n* ------------------------------------------------------------------- *\n*        Read text                                                    *\n* ------------------------------------------------------------------- *\n         ITRACE ID=TEXT\n         MVI   DISCOMM_BIND_FUNC,$BIND_TEXT\n         L     R15,V_DISBIND                    DISBIND ENTRY POINT\n         BALR  R14,R15                          LINK TO DISIND\n         ITRACE ID=TEXT_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   EXIT0420                         NO\n* ------------------------------------------------------------------- *\n*        End the binder dialog                                        *\n* ------------------------------------------------------------------- *\n         ITRACE ID=ENDD\n         MVI   DISCOMM_BIND_FUNC,$BIND_ENDD\n         L     R15,V_DISBIND                    DISBIND ENTRY POINT\n         BALR  R14,R15                          LINK TO DISIND\n         ITRACE ID=ENDD_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                          SUCCESSFUL?\n         BNZ   EXIT0420                         NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        For ADCONs the text tells us which displacement is           *\n*        being referenced by the ADCON.                               *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ICM   R5,15,DISCOMM_RLD_AREA_NEXT      FIRST RLD ITEM\n         BZ    MAIN0100                         NO RLD ITEMS\n         USING AREA_DSECT,R5\nMAIN0050 DS    0H\n         ITRACE ID=AREA,                                               +\n               RDATA1=R5,                                              +\n               DATA2=(AREA_DATA_TYPE,1)\n         CLI   AREA_DATA_TYPE,$DATA_ACON        ADCON?\n         BNE   MAIN0060                         NO\n         ICM   R1,15,AREA_BEGIN                 RLD ITEM'S DISP\n         LR    R0,R1                            COPY DISP\n         A     R1,DISCOMM_CSECT_TEXT            PLUS BASE\n         ICM   R14,15,AREA_LENGTH               RLD ITEM'S LENGTH\n         BCTR  R14,0                            RELATIVE TO ZERO\n         AR    R0,R14                           PLUS LENGTH\n         STCM  R0,15,AREA_END\n         LA    R15,AREA_REF_DISP1+3             END OF OUTPUT FIELD\n         SR    R15,R14                          MINUS LENGTH\n         EX    R14,ADCONMVC                     COPY TEXT\n         ITRACE ID=ADCON,                                              +\n               DATA1=(AREA_BEGIN,4),                                   +\n               DATA2=(AREA_REF_DISP1,4)\nMAIN0060 DS    0H\n         ICM   R5,15,AREA_NEXT                  ANOTHER AREA?\n         BNZ   MAIN0050                         YES\n         B     MAIN0100\nADCONMVC MVC   0(0,R15),0(R1)                   COPY TARGET DISP\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        Display main menu                                            *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0100 DS    0H\n         ITRACE ID=MAINMENU\n         MVI   SPF_FUNCTION,C' '\n         MVC   SESS_DISP_PANEL,MENU_PANEL       SET PANEL NAME\n         XC    SESS_DISP_VDATA_ADDR,SESS_DISP_VDATA_ADDR\n         XC    SESS_DISP_VDATA_LENGTH,SESS_DISP_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\nMAIN0110 DS    0H\n         ITRACE ID=CALLDISP\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15                          DISPLAY MAIN MENU\n         ITRACE ID=MENU_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                          RC=0?\n         BNZ   EXIT0410                         NO\n         OC    SPF_FUNCTION,COMM_BLANKS         'TRANSLATE'\n         ITRACE ID=SELECT,                                             +\n               DATA1=(SPF_FUNCTION,1)\n         CLI   SPF_FUNCTION,C' '                BLANK?\n         BE    MAIN0130                         YES\n         CLI   SPF_FUNCTION,C'A'                ASSEMBLER SOURCE?\n         BE    MAIN0140                         YES\n         CLI   SPF_FUNCTION,C'B'                LIST BASEs?\n         BE    MAIN0150                         YES\n         CLI   SPF_FUNCTION,C'C'                Save/Restore config?\n         BE    MAIN0160                         YES\n         CLI   SPF_FUNCTION,C'D'                LIST DATA AREAs?\n         BE    MAIN0170                         YES\n         CLI   SPF_FUNCTION,C'E'                LIST ESD info?\n         BE    MAIN0180                         YES\n         CLI   SPF_FUNCTION,C'G'                Generate source?\n         BE    MAIN0190                         YES\n         CLI   SPF_FUNCTION,C'K'                LIST KSDSes?\n         BE    MAIN0300                         YES\n         CLI   SPF_FUNCTION,C'O'                OPTIONS?\n         BE    MAIN0310                         YES\n         CLI   SPF_FUNCTION,C'R'                LIST RLD info?\n         BE    MAIN0320                         YES\n         CLI   SPF_FUNCTION,C'S'                LIST SYSLIBs?\n         BE    MAIN0330                         YES\n         CLI   SPF_FUNCTION,C'T'                Display TEXT?\n         BE    MAIN0340                         YES\n         CLI   SPF_FUNCTION,C'U'                Display USINGs?\n         BE    MAIN0350                         YES\n         CLI   SPF_FUNCTION,C'X'                ABEND?\n         BE    MAIN0120                         YES\n         CLI   SPF_FUNCTION,C'1'                TURN DEBUGGING ON?\n         BE    MAIN0400                         YES\n         CLI   SPF_FUNCTION,C'2'                TURN DEBUGGING OFF?\n         BE    MAIN0410                         YES\n         ITRACE ID=BAD_SEL\n         MVC   SPF_MSG_1(MSG02_L),MSG02\n         B     MAIN0100                         DISPLAY MENU AGAIN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0120 DS    0H\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0130 DS    0H\n         ITRACE ID=NO_SEL\n         MVC   SPF_MSG_1(MSG01_L),MSG01\n         B     MAIN0110\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0140 DS    0H\n         ITRACE ID=ASSEM\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         L     R15,V_DISALIST                   DISALIST ENTRY POINT\n         BALR  R14,R15                          CALL DISALIST\n         ITRACE ID=ASSEM_X\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0150 DS    0H\n         ITRACE ID=BASE\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         L     R15,V_DISBLIST                   DISBLIST ENTRY POINT\n         BALR  R14,R15                          CALL DISBLIST\n         ITRACE ID=BASE_X\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0160 DS    0H\n         ITRACE ID=CONFIG\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         L     R15,V_DISCONF                    DISCONF ENTRY POINT\n         BALR  R14,R15                          CALL DISCONF\n         ITRACE ID=CONF_X\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0170 DS    0H\n         ITRACE ID=DATA\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         L     R15,V_DISDLIST                   DISDLIST ENTRY POINT\n         BALR  R14,R15                          CALL DISDLIST\n         ITRACE ID=DATA_X\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0180 DS    0H\n         ITRACE ID=ESD\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         L     R15,V_DISELIST                   DISELIST ENTRY POINT\n         BALR  R14,R15                          CALL DISELIST\n         ITRACE ID=ESD_X\n         B     MAIN0100\n\n\n\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Generate source                                              *\n*                                                                     *\n*        1) Verify OPCODE table has been selected                     *\n*        2) Verify label prefix has been given                        *\n*        3) Verify BASE and USINGs                                    *\n*        4) Delete old \"all areas chain\"                              *\n*        5) Build new \"all areas chain\" (merge user with RLD data)    *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0190 DS    0H\n         ITRACE ID=GEN\n         MVI   SPF_FUNCTION,C' '                RESET COMMAND\n         OC    DISCOMM_ASM_NEXT,DISCOMM_ASM_NEXT\n         BZ    MAIN019A                         NO SOURCE TO ASSEMBLE\n         TM    DISCOMM_FLAGS,$DISCOMM_ASSEMBLE_SOURCE\n         BNO   MAIN019A\n         MVC   DISCOMM_TPUT_MSG(STAT_MSG_01_L),STAT_MSG_01\n         BAL   R6,TPUT0000                      ISSUE TPUT\n         ITRACE ID=ASSEM\n         L     R15,V_DISASSEM                   DISASSEM ENTRY POINT\n         BALR  R14,R15                          ASSEMBLE SOURCE\n         CH    R15,H4                           SERIOUS ERROR?\n         BH    MAIN0280                         YES\n         NI    DISCOMM_FLAGS,255-$DISCOMM_ASSEMBLE_SOURCE\nMAIN019A DS    0H\n         CLC   DISCOMM_OUTPUT_DSN,COMM_BLANKS   HAVE OUTPUT DATA SET?\n         BE    ERR0010                          NO\n         OC    DISCOMM_OPCODE_TABLE_ADDR,DISCOMM_OPCODE_TABLE_ADDR\n         BNZ   MAIN0210\n         LOAD  EPLOC=DISCOMM_OPCODE_TABLE_NAME  LOAD OPCODE TABLE\n         ST    R0,DISCOMM_OPCODE_TABLE_ADDR     SAVE ADDRESS\n         ITRACE ID=OP_TABLE,                                           +\n               RDATA1=R1\nMAIN0210 DS    0H\n         CLC   DISCOMM_PREFIX,COMM_BLANKS       LABEL PREFIX GIVEN?\n         BNE   MAIN0220                         YES\n         ITRACE ID=DFLTPRFX\n         MVC   DISCOMM_PREFIX,DEFAULT_PREFIX    SET DEFAULT PREFIX\n         MVC   DISCOMM_PREFIX_LENGTH,H4         SET LENGTH\nMAIN0220 DS    0H\n         MVC   DISCOMM_TPUT_MSG(STAT_MSG_02_L),STAT_MSG_02\n         BAL   R6,TPUT0000                      ISSUE TPUT\n         L     R15,V_DISVBU\n         ITRACE ID=VBU,                                                +\n               RDATA1=R15\n         BALR  R14,R15                          VERIFY BASES AND USINGS\n         ITRACE ID=VBU_RC,                                             +\n               RDATA1=R15\n         LTR   R15,R15                          ANY ERRORS DETECTED?\n         BNZ   MAIN0100                         YES\n* ------------------------------------------------------------------- *\n*        Connect USINGS with DSECTs                                   *\n* ------------------------------------------------------------------- *\n         MVC   DISCOMM_TPUT_MSG(STAT_MSG_03_L),STAT_MSG_03\n         BAL   R6,TPUT0000                      ISSUE TPUT\n         L     R15,V_DISDSECT\n         ITRACE ID=DSECT,                                              +\n               RDATA1=R15\n         BALR  R14,R15                          CONNECT USING TO DSECT\n         ITRACE ID=DSECT_RC,                                           +\n               RDATA1=R15\n         LTR   R15,R15                          ANY ERRORS DETECTED?\n         BNZ   MAIN0100                         YES\n* ------------------------------------------------------------------- *\n*        Delete old \"ALL areas\"                                       *\n* ------------------------------------------------------------------- *\n         MVC   DISCOMM_TPUT_MSG(STAT_MSG_04_L),STAT_MSG_04\n         BAL   R6,TPUT0000                      ISSUE TPUT\n         ICM   R5,15,DISCOMM_ALL_AREA_NEXT      1ST AREA ON ALL CHAIN\n         BZ    MAIN0240                         NOTHING ON CHAIN\n         USING AREA_DSECT,R5\n         XC    DISCOMM_ALL_AREA_NEXT,DISCOMM_ALL_AREA_NEXT\nMAIN0230 DS    0H\n         LR    R1,R5                            COPY ADDR\n         L     R5,AREA_NEXT                     NEXT AREA BLOCK\n         ITRACE ID=FREEAREA,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                           FREE THIS AREA BLOCK   +\n               A=(1),                                                  +\n               LV=AREA_DSECT_L\n         LTR   R5,R5                            ANOTHER AREA?\n         BNZ   MAIN0230                         YES\n* ------------------------------------------------------------------- *\n*        Merge RLD areas with user specified data areas               *\n* ------------------------------------------------------------------- *\nMAIN0240 DS    0H\n         MVC   DISCOMM_TPUT_MSG(STAT_MSG_05_L),STAT_MSG_05\n         BAL   R6,TPUT0000                      ISSUE TPUT\n         ITRACE ID=DISDMERG\n         L     R15,V_DISDMERG\n         BALR  R14,R15                          MERGE USER AND RLD DATA\n         ITRACE ID=MERGE_X\n         TM    DISCOMM_FLAGS,$DISCOMM_DEBUG     DEBUGGING ON?\n         BNO   MAIN0250                         NO\n         ICM   R1,15,DISCOMM_ALL_AREA_NEXT\n         ITRACE ID=DEBUG_1,                                            +\n               RDATA1=R1\n         L     R15,V_DISDEBUG\n         BALR  R14,R15\n* ------------------------------------------------------------------- *\n*        Scan text to determine where instructions occur              *\n* ------------------------------------------------------------------- *\nMAIN0250 DS    0H\n         ITRACE ID=DISSCAN\n         MVC   DISCOMM_TPUT_MSG(STAT_MSG_06_L),STAT_MSG_06\n         BAL   R6,TPUT0000                      INFORM USER OF PROGRESS\n         L     R15,V_DISSCAN\n         BALR  R14,R15                          SCAN TEXT\n         ITRACE ID=SCAN_RC,                                            +\n               RDATA1=R15\n         TM    DISCOMM_FLAGS,$DISCOMM_DEBUG     DEBUGGING ON?\n         BNO   MAIN0260                         NO\n         ICM   R1,15,DISCOMM_ALL_AREA_NEXT\n         ITRACE ID=DEBUG_1,                                            +\n               RDATA1=R1\n         L     R15,V_DISDEBUG\n         BALR  R14,R15\nMAIN0260 DS    0H\n* ------------------------------------------------------------------- *\n*        Determine data references                                    *\n* ------------------------------------------------------------------- *\n         ITRACE ID=DISREF\n         MVC   DISCOMM_TPUT_MSG(STAT_MSG_07_L),STAT_MSG_07\n         BAL   R6,TPUT0000                      INFORM USER OF PROGRESS\n         L     R15,V_DISREF\n         BALR  R14,R15                          DETERMINE REFERENCES\n         ITRACE ID=REF_X\n         TM    DISCOMM_FLAGS,$DISCOMM_DEBUG     DEBUGGING ON?\n         BNO   MAIN0270                         NO\n         ICM   R1,15,DISCOMM_ALL_AREA_NEXT\n         ITRACE ID=DEBUG_1,                                            +\n               RDATA1=R1\n         L     R15,V_DISDEBUG\n         BALR  R14,R15\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*        Generate source                                              *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0270 DS    0H\n* ------------------------------------------------------------------- *\n*        Make sure DISPUNCH and DISTEMP are free                      *\n* ------------------------------------------------------------------- *\n         MVI   DAIR_FUNC,$DAIR_FREE             SET FUNCTION\n         MVI   DAIR_OPTS,0                      RESET ALL OPTIONS\n         MVC   DAIR_DD,DD_DISPUNCH\n         LA    R1,DAIRREQ                       DAIR PARMS\n         L     R15,COMM_V_OSDAIR                OSDAIR ENTRY POINT\n         ITRACE ID=FREEPNCH,                                           +\n               RDATA1=R15,                                             +\n               RDATA2=R1\n         BALR  R14,R15                          FREE DISPUNCH\n         ITRACE ID=DAIR_RC,                                            +\n               RDATA1=R15\n         MVC   DAIR_DD,DD_DISTEMP\n         LA    R1,DAIRREQ                       DAIR PARMS\n         L     R15,COMM_V_OSDAIR                OSDAIR ENTRY POINT\n         ITRACE ID=FREETEMP,                                           +\n               RDATA1=R15,                                             +\n               RDATA2=R1\n         BALR  R14,R15                          FREE DISPUNCH\n         ITRACE ID=DAIR_RC,                                            +\n               RDATA1=R15\n* ------------------------------------------------------------------- *\n*        Allocate DISPUNCH                                            *\n* ------------------------------------------------------------------- *\n         MVI   DAIR_FUNC,$DAIR_ALLOC            SET FUNCTION\n         MVI   DAIR_OPTS,$DAIR_USE_DD           USE SPECIFIED DDNAME\n         MVC   DAIR_DSN,DISCOMM_OUTPUT_DSN      DSN\n         MVC   DAIR_DD,DD_DISPUNCH              DD NAME\n         MVC   DAIR_MEMBER,DISCOMM_OUTPUT_MEMBER\n         MVC   DAIR_VOLSER,DISCOMM_OUTPUT_VOLSER\n         MVI   DAIR_DISP,$DAIR_DISP_SHR         DISP\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR                OS DAIR ENTRY POINT\n         ITRACE ID=ALOCPNCH,                                           +\n               RDATA1=R15,                                             +\n               RDATA2=R1\n         BALR  R14,R15                          ALLOCATE DISPUNCH\n         ITRACE ID=DAIR_RC,                                            +\n               DATA1=DAIR_R15\n         OC    DAIR_R15,DAIR_R15                SUCCESSFUL?\n         BNZ   ERR0110                          NO\n* ------------------------------------------------------------------- *\n*        OPEN DISPUNCH                                                *\n* ------------------------------------------------------------------- *\n         ITRACE ID=OPENPNCH\n         OPEN  (DISPUNCH_DCB,OUTPUT),           OPEN DISPUNCH          +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_OPEN)\n* ------------------------------------------------------------------- *\n*        Allocate DISTEMP                                             *\n* ------------------------------------------------------------------- *\n         MVI   DAIR_OPTS,$DAIR_USE_DD+$DAIR_TEMP\n         MVC   DAIR_DD,DD_DISTEMP               DD NAME\n         MVC   DAIR_MEMBER,COMM_BLANKS\n         MVC   DAIR_VOLSER,COMM_BLANKS\n         MVC   DAIR_PRI,NINETY                  PRIMARY 90 TRACKS\n         MVC   DAIR_SEC,NINETY                  SECONDARY 90 TRACKS\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR                OS DAIR ENTRY POINT\n         ITRACE ID=ALOCTEMP,                                           +\n               RDATA1=R15,                                             +\n               RDATA2=R1\n         BALR  R14,R15                          ALLOCATE DISTEMP\n         ITRACE ID=DAIR_RC,                                            +\n               DATA1=DAIR_R15\n         OC    DAIR_R15,DAIR_R15                SUCCESSFUL?\n         BNZ   ERR0110                          NO\n* ------------------------------------------------------------------- *\n*        OPEN DISTEMP                                                 *\n* ------------------------------------------------------------------- *\n         ITRACE ID=OPENTEMP\n         OPEN  (DISTEMP_DCB,OUTPUT),            OPEN DISTEMP           +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_OPEN)\n* ------------------------------------------------------------------- *\n*        Generate assembler source                                    *\n* ------------------------------------------------------------------- *\n         MVC   DISCOMM_TPUT_MSG(STAT_MSG_08_L),STAT_MSG_08\n         BAL   R6,TPUT0000                      ISSUE TPUT\n         ITRACE ID=CALL_GEN\n         L     R15,V_DISGEN                     DISGEN ENTRY POINT\n         BALR  R14,R15                          CALL DISGEN\n         ITRACE ID=GEN_X\n* ------------------------------------------------------------------- *\n*        CLOSE DISPUNCH                                               *\n* ------------------------------------------------------------------- *\n         ITRACE ID=CLSEPNCH\n         CLOSE DISPUNCH_DCB,                    CLOSE DISPUNCH         +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_CLOSE)\n         FREEPOOL DISPUNCH_DCB\n* ------------------------------------------------------------------- *\n*        FREE DISPUNCH                                                *\n* ------------------------------------------------------------------- *\n         MVI   DAIR_FUNC,$DAIR_FREE             SET FUNCTION\n         MVC   DAIR_DD,DD_DISPUNCH\n         LA    R1,DAIRREQ                       DAIR PARMS\n         L     R15,COMM_V_OSDAIR                OSDAIR ENTRY POINT\n         ITRACE ID=FREEPNCH,                                           +\n               RDATA1=R15,                                             +\n               RDATA2=R1\n         BALR  R14,R15                          FREE DISPUNCH\n         ITRACE ID=DAIR_RC,                                            +\n               RDATA1=R15\n         OC    DAIR_R15,DAIR_R15                SUCCESSFUL?\n         BNZ   ERR0110                          NO\n* ------------------------------------------------------------------- *\n*        CLOSE DISTEMP                                                *\n* ------------------------------------------------------------------- *\n         ITRACE ID=CLSETEMP\n         CLOSE DISTEMP_DCB,                     CLOSE DISTEMP          +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_CLOSE)\n         FREEPOOL DISTEMP_DCB\n* ------------------------------------------------------------------- *\n*        Inform the user of success                                   *\n* ------------------------------------------------------------------- *\n         MVC   DISCOMM_TPUT_MSG(STAT_MSG_09_L),STAT_MSG_09\n         BAL   R6,TPUT0000                      ISSUE TPUT\n* ------------------------------------------------------------------- *\n*        Get DDID for DISTEMP                                         *\n* ------------------------------------------------------------------- *\n         ITRACE ID=LMINIT\n         LA    R0,FUNCTION_LMINIT\n         ST    R0,DXD_SPF_1\n         LA    R0,FUNCTION_DDID               DDID (RETURNED BY LMINIT)\n         ST    R0,DXD_SPF_2\n         LA    R0,COMM_BLANKS\n         ST    R0,DXD_SPF_3\n         ST    R0,DXD_SPF_4\n         ST    R0,DXD_SPF_5\n         ST    R0,DXD_SPF_6\n         ST    R0,DXD_SPF_7\n         ST    R0,DXD_SPF_8\n         ST    R0,DXD_SPF_9\n         LA    R0,DD_DISTEMP                  DDNAME\n         ST    R0,DXD_SPF_10                  SET DDNAME ADDR\n         OI    DXD_SPF_10,X'80'               SET END-OF-LIST\n         LA    R1,DXD_SPF_PARMS               SPF PARMS\n         L     R15,COMM_ISPLINK               ISPLINK ENTRY POINT\n         BALR  R14,R15                        OBTAIN DDID\n         ITRACE ID=LMINITRC,                                           +\n               RDATA1=R15,                                             +\n               DATA2=SPF_DDID\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         ITRACE ID=DDID,                                               +\n               DATA1=SPF_DDID\n*---------------------------------------------------------------------*\n*        INVOKE EDIT                                                  *\n*---------------------------------------------------------------------*\n         LA    R0,FUNCTION_EDIT\n         ST    R0,DXD_SPF_1\n         LA    R0,COMM_BLANKS\n         ST    R0,DXD_SPF_2\n         ST    R0,DXD_SPF_3\n         ST    R0,DXD_SPF_4\n         ST    R0,DXD_SPF_5\n         ST    R0,DXD_SPF_6\n         ST    R0,DXD_SPF_7\n         LA    R0,SPF_DDID\n         ST    R0,DXD_SPF_8\n         OI    DXD_SPF_8,X'80'\n         LA    R1,DXD_SPF_PARMS\n         ITRACE ID=EDIT,                                               +\n               DATA1=SPF_DDID\n         L     R15,COMM_ISPLINK\n         BALR  R14,R15                          INVOKE EDIT\n         ITRACE ID=EDIT_RC,                                            +\n               RDATA1=R15\n         CH    R15,H4                           RC > 4?\n         BH    ERR0020                          YES\n* ------------------------------------------------------------------- *\n*        FREE DISTEMP                                                 *\n* ------------------------------------------------------------------- *\n         MVI   DAIR_FUNC,$DAIR_FREE             SET FUNCTION\n         MVC   DAIR_DD,DD_DISTEMP\n         LA    R1,DAIRREQ                       DAIR PARMS\n         L     R15,COMM_V_OSDAIR                OSDAIR ENTRY POINT\n         ITRACE ID=FREETEMP,                                           +\n               RDATA1=R15,                                             +\n               RDATA2=R1\n         BALR  R14,R15                          FREE DISTEMP\n         ITRACE ID=DAIR_RC,                                            +\n               RDATA1=R15\n         OC    DAIR_R15,DAIR_R15                SUCCESSFUL?\n         BNZ   ERR0110                          NO\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0280 DS    0H\n         ITRACE ID=ASMERROR\n         CLC   SPF_MSG_1,COMM_BLANKS            ALREADY HAVE MESSAGE?\n         BNE   MAIN0100                         YES\n         MVC   SPF_MSG_1(MSG05_L),MSG05\n         MVC   SPF_MSG_2(MSG06_L),MSG06\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0300 DS    0H\n         ITRACE ID=KSDS\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         SR    R1,R1                            DISPLAY EXISTING KSDSes\n         L     R15,V_DISKLIST                   DISKLIST ENTRY POINT\n         BALR  R14,R15                          CALL DISKLIST\n         ITRACE ID=KSDS_X\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0310 DS    0H\n         ITRACE ID=OPTIONS\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         L     R15,V_DISOPTS                    DISOPTS ENTRY POINT\n         BALR  R14,R15                          CALL DISOPTS\n         ITRACE ID=OPTS_X\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0320 DS    0H\n         ITRACE ID=RLD\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         L     R15,V_DISRLIST                   DISRLIST ENTRY POINT\n         BALR  R14,R15                          CALL DISRLIST\n         ITRACE ID=RLD_X\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0330 DS    0H\n         ITRACE ID=SYSLIB\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         SR    R1,R1                            DISPLAY EXISTING LIBs\n         L     R15,V_DISSLIST                   DISSLIST ENTRY POINT\n         BALR  R14,R15                          CALL DISSLIST\n         ITRACE ID=SYSLIB_X\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0340 DS    0H\n         ITRACE ID=TEXT\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         L     R15,V_DISTLIST                   DISTLIST ENTRY POINT\n         BALR  R14,R15                          CALL DISTLIST\n         ITRACE ID=TEXT_X\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0350 DS    0H\n         ITRACE ID=USINGS\n         MVC   SPF_FUNCTION,COMM_BLANKS         RESET COMMAND\n         L     R15,V_DISULIST                   DISULIST ENTRY POINT\n         BALR  R14,R15                          CALL DISULIST\n         ITRACE ID=ULIST_X\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0400 DS    0H\n         ITRACE ID=DEBUGON\n         OI    DISCOMM_FLAGS,$DISCOMM_DEBUG     SET DEBUG FLAG\n         MVC   SPF_MSG_2(MSG03_L),MSG03\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0410 DS    0H\n         ITRACE ID=DEBUGOFF\n         NI    DISCOMM_FLAGS,255-$DISCOMM_DEBUG  RESET DEBUG FLAG\n         MVC   SPF_MSG_2(MSG04_L),MSG04\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTPUT0000 DS    0H\n         TPUT  DISCOMM_TPUT_MSG,80\n         MVC   DISCOMM_TPUT_MSG,COMM_BLANKS\n         BR    R6\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVI   COMM_MSG_ID+1,1\n         B     ERR0100\nERR0020  DS    0H\n         MVI   COMM_MSG_ID+1,2\n         STH   R15,COMM_INFO_01\n         B     ERR0100\nERR0100  DS    0H\n         MVI   COMM_MSG_ID,0\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\nERR0110  DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1             COPY MESSAGE\n         MVC   SPF_MSG_2,COMM_MSG_2             COPY MESSAGE\n         MVC   SPF_MSG_3,COMM_MSG_3             COPY MESSAGE\n         MVC   SPF_MSG_4,COMM_MSG_4             COPY MESSAGE\n         MVC   SPF_MSG_5,COMM_MSG_5             COPY MESSAGE\n         B     MAIN0100                         DISPLAY WITH MSG\n         DROP  R5\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Assuming that I ever get this thing to work....                 *\n*       Free all the AREA blocks (RLD, ESD, DATA,.. )                 *\n*       Free all the ASM blocks                                       *\n*       Free all the BASE blocks                                      *\n*       Free all the DSECT blocks (and LABELs, EQU's chained)         *\n*       Free all the KSDS  blocks                                     *\n*       Free all the NAME  blocks                                     *\n*       Free all the SYSLIB blocks                                    *\n*       Free all the USING blocks                                     *\n*       Free the text                                                 *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=CLEANUP\n         ICM   R2,15,DISCOMM_NAME_NEXT          ANY NAME BLOCKS?\n         BZ    EXIT0020\n         USING NAME_DSECT,R2\nEXIT0010 DS    0H\n         LR    R1,R2\n         ICM   R2,15,NAME_NEXT                  NEXT NAME BLOCK\n         USING NAME_DSECT,R2\n         ITRACE ID=FREENAME,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=NAME_DSECT_L\n         LTR   R2,R2\n         BNZ   EXIT0010\nEXIT0020 DS    0H\n         DROP  R2\n         ICM   R2,15,DISCOMM_ESD_NEXT           ANY ESD BLOCKS?\n         BZ    EXIT0040                         NO\n         USING ESD_DSECT,R2\nEXIT0030 DS    0H\n         LR    R1,R2\n         ICM   R2,15,ESD_NEXT                   NEXT ESD BLOCK\n         ITRACE ID=FREE_ESD,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=ESD_DSECT_L\n         LTR   R2,R2\n         BNZ   EXIT0030\nEXIT0040 DS    0H\n         DROP  R2\n         ICM   R2,15,DISCOMM_RLD_AREA_NEXT      ANY RLD BLOCKS?\n         BZ    EXIT0060                         NO\n         USING AREA_DSECT,R2\nEXIT0050 DS    0H\n         LR    R1,R2\n         ICM   R2,15,AREA_NEXT                  NEXT RLD BLOCK\n         ITRACE ID=FREE_RLD,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=AREA_DSECT_L\n         LTR   R2,R2\n         BNZ   EXIT0050\nEXIT0060 DS    0H\n         ICM   R2,15,DISCOMM_USER_AREA_NEXT_1   ANY USER AREA BLOCKS?\n         BZ    EXIT0080                         NO\n         USING AREA_DSECT,R2\nEXIT0070 DS    0H\n         LR    R1,R2\n         ICM   R2,15,AREA_NEXT                  NEXT USER BLOCK\n         ITRACE ID=FREEUSR1,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=AREA_DSECT_L\n         LTR   R2,R2\n         BNZ   EXIT0070\nEXIT0080 DS    0H\n         ICM   R2,15,DISCOMM_ALL_AREA_NEXT      ANY ALL AREA BLOCKS?\n         BZ    EXIT0120                         NO\n         USING AREA_DSECT,R2\nEXIT0110 DS    0H\n         LR    R1,R2\n         ICM   R2,15,AREA_NEXT                  NEXT ALL AREA BLOCK\n         ITRACE ID=FREE_ALL,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=AREA_DSECT_L\n         LTR   R2,R2\n         BNZ   EXIT0110\nEXIT0120 DS    0H\n         DROP  R2\n         ICM   R2,15,DISCOMM_BASE_NEXT          ANY BASE BLOCKS?\n         BZ    EXIT0140                         NO\nEXIT0130 DS    0H\n         USING BASE_DSECT,R2\n         LR    R1,R2\n         ICM   R2,15,BASE_NEXT                  NEXT BASE BLOCK\n         ITRACE ID=FREEBASE,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=BASE_DSECT_L\n         LTR   R2,R2                            ANOTHER BASE BLOCK?\n         BNZ   EXIT0130                         YES\nEXIT0140 DS    0H\n         DROP  R2\n         ICM   R2,15,DISCOMM_DSECT_NEXT         ANY DSECT BLOCKS?\n         BZ    EXIT0200                         NO\nEXIT0150 DS    0H\n         USING DSECT_DSECT,R2\n         ICM   R3,15,DSECT_LABEL_NEXT           ANY LABELS?\n         BNZ   EXIT0190                         NO\n         USING LABEL_DSECT,R3\nEXIT0160 DS    0H\n         ICM   R4,15,LABEL_EQU_NEXT             ANY EQUATES?\n         BZ    EXIT0180                         NO\n         USING EQU_DSECT,R4\nEXIT0170 DS    0H\n         LR    R1,R4                            COPY EQU BLOCK ADDR\n         ICM   R4,15,EQU_NEXT                   NEXT EQU BLOCK\n         ITRACE ID=FREEEQU1,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                           FREE EQU BLOCK         +\n               A=(1),                                                  +\n               LV=EQU_DSECT_L\n         LTR   R4,R4                            ANOTHER EQU BLOCK\n         BNZ   EXIT0170                         YES\n         DROP  R4\nEXIT0180 DS    0H\n         LR    R1,R3                            COPY LABEL BLOCK ADDR\n         ICM   R3,15,LABEL_NEXT                 NEXT LABEL\n         ITRACE ID=FREELBL1,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                           FREE LABEL BLOCK       +\n               A=(1),                                                  +\n               LV=LABEL_DSECT_L\n         LTR   R3,R3                            ANOTHER LABEL BLOCK?\n         BNZ   EXIT0160                         YES\n         DROP  R3\nEXIT0190 DS    0H\n         LR    R1,R2                            COPY DSECT BLOCK ADDR\n         ICM   R2,15,DSECT_NEXT                 NEXT DSECT BLOCK\n         ITRACE ID=FREEDSC1,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                           FREE DSECT BLOCK       +\n               A=(1),                                                  +\n               LV=DSECT_DSECT_L\n         LTR   R2,R2                            ANOTHER DSECT BLOCK?\n         BNZ   EXIT0150                         YES\nEXIT0200 DS    0H\n         DROP  R2\n         ICM   R2,15,DISCOMM_USING_NEXT         ANY USING BLOCKS?\n         BZ    EXIT0220                         NO\n         USING USING_DSECT,R2\nEXIT0210 DS    0H\n         LR    R1,R2                            COPY USING BLOCK ADDR\n         ICM   R2,15,USING_NEXT                 NEXT USING BLOCK\n         ITRACE ID=FREEUSNG,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                           FREE USING BLOCK       +\n               A=(1),                                                  +\n               LV=USING_DSECT_L\n         LTR   R2,R2                            ANOTHER USING BLOCK?\n         BNZ   EXIT0210                         YES\n         DROP  R2\nEXIT0220 DS    0H\n         ICM   R2,15,DISCOMM_KSDS_NEXT          ANY DSECT KSDS?\n         BZ    EXIT0300                         NO\n         USING KSDS_DSECT,R2\nEXIT0230 DS    0H\n         ICM   R3,15,KSDS_DSECT_NEXT            ANY DSECT BLOCKS?\n         BZ    EXIT0290                         NO\n         USING DSECT_DSECT,R3\nEXIT0240 DS    0H\n         ITRACE ID=DSECT,                                              +\n               DATA1=DSECT_NAME+0,                                     +\n               DATA2=DSECT_NAME+8\n         ICM   R4,15,DSECT_LABEL_NEXT           ANY LABELS?\n         BZ    EXIT0280                         NO\n         USING LABEL_DSECT,R4\nEXIT0250 DS    0H\n         ITRACE ID=LABEL,                                              +\n               DATA1=LABEL_NAME+0,                                     +\n               DATA2=LABEL_NAME+8\n         ICM   R5,15,LABEL_EQU_NEXT             ANY EQUATES?\n         BZ    EXIT0270                         NO\n         USING EQU_DSECT,R5\nEXIT0260 DS    0H\n         ITRACE ID=EQU,                                                +\n               DATA1=EQU_LABEL+0,                                      +\n               DATA2=EQU_LABEL+8\n         LR    R1,R5                            COPY EQU BLOCK ADDR\n         ICM   R5,15,EQU_NEXT                   NEXT EQU BLOCK\n         ITRACE ID=FREEEQU2,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                           FREE EQU BLOCK         +\n               A=(1),                                                  +\n               LV=EQU_DSECT_L\n         LTR   R5,R5                            ANOTHER EQU BLOCK\n         BNZ   EXIT0260                         YES\n         DROP  R5\nEXIT0270 DS    0H\n         LR    R1,R4                            COPY LABEL BLOCK ADDR\n         ICM   R4,15,LABEL_NEXT                 NEXT LABEL\n         ITRACE ID=FREELBL2,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                           FREE LABEL BLOCK       +\n               A=(1),                                                  +\n               LV=LABEL_DSECT_L\n         LTR   R4,R4                            ANOTHER LABEL BLOCK?\n         BNZ   EXIT0250                         YES\n         DROP  R4\nEXIT0280 DS    0H\n         LR    R1,R3                            COPY DSECT BLOCK ADDR\n         ICM   R3,15,DSECT_NEXT                 NEXT DSECT BLOCK\n         ITRACE ID=FREEDSC2,                                           +\n               DATA1=DSECT_NAME,                                       +\n               RDATA2=R1\n         FREEMAIN RU,                           FREE DSECT BLOCK       +\n               A=(1),                                                  +\n               LV=DSECT_DSECT_L\n         LTR   R3,R3                            ANOTHER DSECT BLOCK?\n         BNZ   EXIT0240                         YES\n         DROP  R3\nEXIT0290 DS    0H\n         TM    KSDS_FLAGS,$KSDS_OPEN            KSDS OPEN?\n         BNO   EXIT0295                         NO\n         ITRACE ID=CLOSE,                                              +\n               DATA1=KSDS_DDNAME\n         CLOSE KSDS_ACB,                                               +\n               MODE=31,                                                +\n               MF=(E,DISCOMM_CLOSE)\nEXIT0295 DS    0H\n         ITRACE ID=FREE_DD,                                            +\n               DATA1=KSDS_DDNAME\n         MVI   DAIR_FUNC,$DAIR_FREE             SET COMMAND\n         MVI   DAIR_OPTS,$DAIR_NO_MSGS          SET OPTIONS\n         MVC   DAIR_DD,KSDS_DDNAME              COPY DDNAME\n         LA    R1,DAIRREQ\n         L     R15,COMM_V_OSDAIR                OSDAIR ENTRY POINT\n         BALR  R14,R15                          CALL OSDAIR\n         LR    R1,R2                            COPY DSECT BLOCK ADDR\n         ICM   R2,15,KSDS_NEXT                  NEXT DSECT BLOCK\n         ITRACE ID=FREEKSDS,                                           +\n               DATA1=KSDS_DDNAME,                                      +\n               RDATA2=R1\n         FREEMAIN RU,                           FREE DSECT BLOCK       +\n               A=(1),                                                  +\n               LV=KSDS_DSECT_L\n         LTR   R2,R2                            ANOTHER KSDS BLOCK?\n         BNZ   EXIT0230                         YES\nEXIT0300 DS    0H\n         ICM   R2,15,DISCOMM_SYSLIB_NEXT        ANY SYSLIB BLOCKS?\n         BZ    EXIT0320                         NO\n         USING SYSLIB_DSECT,R2\nEXIT0310 DS    0H\n         LR    R1,R2                            COPY SYSLIB BLOCK\n         ICM   R2,15,SYSLIB_NEXT\n         ITRACE ID=FREESLIB,                                           +\n               DATA1=SYSLIB_DDNAME,                                    +\n               RDATA2=R1\n         FREEMAIN RU,                           FREE SYSLIB BLOCK      +\n               A=(1),                                                  +\n               LV=SYSLIB_DSECT_L\n         LTR   R2,R2                            ANOTHER DSECT BLOCK?\n         BNZ   EXIT0310                         YES\nEXIT0320 DS    0H\n         DROP  R2\n         ICM   R2,15,DISCOMM_ASM_NEXT           ANY ASM BLOCKS?\n         BZ    EXIT0340                         NO\n         USING ASM_DSECT,R2\nEXIT0330 DS    0H\n         LR    R1,R2                            COPY ASM BLOCK\n         ICM   R2,15,ASM_NEXT\n         ITRACE ID=FREE_ASM,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                           FREE ASM BLOCK         +\n               A=(1),                                                  +\n               LV=ASM_DSECT_L\n         LTR   R2,R2                            ANOTHER ASM BLOCK?\n         BNZ   EXIT0330                         YES\nEXIT0340 DS    0H\n         DROP  R2\n         L     R0,DISCOMM_CSECT_LENGTH\n         ICM   R1,15,DISCOMM_CSECT_TEXT\n         BZ    EXIT0350\n         ITRACE ID=FREETEXT,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R0\n         FREEMAIN RU,                           FREE CSECT TEXT        +\n               A=(1),                                                  +\n               LV=(0)\nEXIT0350 DS    0H\n         L     R1,SESS_FUNCTION_DATA\n         ITRACE ID=DEL_DATA,                    FREE DIRECTORY DATA    +\n               RDATA1=R1\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=DIR_RECORD_L\n         XC    SESS_FUNCTION_DATA,SESS_FUNCTION_DATA\n         ITRACE ID=DELMSGS\n         DELETE EP=DISMSGUS                     DELETE MESSAGES\n         XC    SESS_MESSAGES,SESS_MESSAGES\n         ITRACE ID=DELCOMM\n         DELETE EP=DISCOMM                      DELETE COMMON AREA\n         ICM   R1,15,SESS_DXD_ADDR              COPY WORK AREA ADDR\n         BZ    EXIT0400\n         L     R0,SESS_DXD_LENGTH\n         ITRACE ID=FREE_DXD,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R0\n         L     R13,4(,R13)                      RESTORE R13\n         FREEMAIN RU,                           FREEMAIN WORK AREA     +\n               A=(R1),                                                 +\n               LV=(0)\n         XC    SESS_DXD_ADDR,SESS_DXD_ADDR      RESET ADDRESS\n         XC    SESS_DXD_LENGTH,SESS_DXD_LENGTH  RESET LENGTH\nEXIT0400 DS    0H\n         LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\nEXIT0410 DS    0H\n         ITRACE ID=ENDING\n         MVI   COMM_SESS_FUNC,$SESS_REMOVE      SET FUNCTION\nEXIT0420 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                      RESTORE R13\n         LM    R14,R12,12(R13)                  RESTORE REGISTERS\n         SR    R15,R15                          SET RC\n         BR    R14                              RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_LENGTH     CXD\nDXD_START      DC       Q(DXDMAIN)\nV_DISALIST     DC       V(DISALIST)\nV_DISASSEM     DC       V(DISASSEM)\nV_DISBLIST     DC       V(DISBLIST)\nV_DISBIND      DC       V(DISBIND)\nV_DISCONF      DC       V(DISCONF)\nV_DISDEBUG     DC       V(DISDEBUG)\nV_DISDLIST     DC       V(DISDLIST)\nV_DISDMERG     DC       V(DISDMERG)\nV_DISDSECT     DC       V(DISDSECT)\nV_DISELIST     DC       V(DISELIST)\nV_DISGEN       DC       V(DISGEN)\nV_DISKLIST     DC       V(DISKLIST)\nV_DISNLIST     DC       V(DISNLIST)\nV_DISOPTS      DC       V(DISOPTS)\nV_DISREF       DC       V(DISREF)\nV_DISRLIST     DC       V(DISRLIST)\nV_DISSCAN      DC       V(DISSCAN)\nV_DISSLIST     DC       V(DISSLIST)\nV_DISTLIST     DC       V(DISTLIST)\nV_DISULIST     DC       V(DISULIST)\nV_DISVBU       DC       V(DISVBU)\n\nF1             DC       F'1'\nH4             DC       H'4'\n\nDD_DISPUNCH    DC       CL8'DISPUNCH'\nDD_DISTEMP     DC       CL8'DISTEMP'\nDEFAULT_PREFIX DC       C'LABL'\nFUNCTION_EDIT   DC      CL8'EDIT'\nFUNCTION_DDID   DC      CL8'DDID'\nFUNCTION_LMINIT DC      CL8'LMINIT'\nMENU_PANEL     DC       CL8'DISMENU'\nNAMELIST_PANEL DC       CL8'DISNLIST'\nNINETY         DC       AL3(90)\n\nMSG01          DS       0C\n               DC       C'DISMAIN01I '\n               DC       C' Enter a selection'\nMSG01_L        EQU      *-MSG01\n\nMSG02          DS       0C\n               DC       C'DISMAIN02E '\n               DC       C' Invalid function code'\nMSG02_L        EQU      *-MSG02\n\nMSG03          DS       0C\n               DC       C'DISMAIN03I '\n               DC       C' Debugging activated'\nMSG03_L        EQU      *-MSG03\n\nMSG04          DS       0C\n               DC       C'DISMAIN04I '\n               DC       C' Debugging de-activated'\nMSG04_L        EQU      *-MSG04\n\nMSG05          DS       0C\n               DC       C'DISMAIN05E '\n               DC       C'Error(s) assembling source'\nMSG05_L        EQU      *-MSG05\n\nMSG06          DS       0C\n               DC       C'DISMAIN06E '\n               DC       C'Correct source or SYSLIBs (option A or S)'\nMSG06_L        EQU      *-MSG06\n\nSTAT_MSG_01    DS       0C\n               DC       C'Assembling source from option A'\nSTAT_MSG_01_L  EQU      *-STAT_MSG_01\n\nSTAT_MSG_02    DS       0C\n               DC       C'Verifying BASEs and USINGs'\nSTAT_MSG_02_L  EQU      *-STAT_MSG_02\n\nSTAT_MSG_03    DS       0C\n               DC       C'Connecting USINGs to DSECTs'\nSTAT_MSG_03_L  EQU      *-STAT_MSG_03\n\nSTAT_MSG_04    DS       0C\n               DC       C'Deleting old ALL areas chain'\nSTAT_MSG_04_L  EQU      *-STAT_MSG_04\n\nSTAT_MSG_05    DS       0C\n               DC       C'Building new ALL areas chain'\nSTAT_MSG_05_L  EQU      *-STAT_MSG_05\n\nSTAT_MSG_06    DS       0C\n               DC       C'Scanning text to determine where instructions+\n                occur'\nSTAT_MSG_06_L  EQU      *-STAT_MSG_06\n\nSTAT_MSG_07    DS       0C\n               DC       C'Determining data references'\nSTAT_MSG_07_L  EQU      *-STAT_MSG_07\n\nSTAT_MSG_08    DS       0C\n               DC       C'Generating source'\nSTAT_MSG_08_L  EQU      *-STAT_MSG_08\n\nSTAT_MSG_09    DS       0C\n               DC       C'Source generation complete'\nSTAT_MSG_09_L  EQU      *-STAT_MSG_09\n\n\n               LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDMAIN          DSECT\n                 COPY     DXDPREF\n\nDXD_SPF_PARMS    DS       0A\nDXD_SPF_1        DS       A\nDXD_SPF_2        DS       A\nDXD_SPF_3        DS       A\nDXD_SPF_4        DS       A\nDXD_SPF_5        DS       A\nDXD_SPF_6        DS       A\nDXD_SPF_7        DS       A\nDXD_SPF_8        DS       A\nDXD_SPF_9        DS       A\nDXD_SPF_10       DS       A\n\nDXD_RC           DS       H\n\n                 DAIRREQ  DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDIR_DSECT        DSECT\n                 COPY     DIR\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n                 END      DISMAIN\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISMSGUS": {"ttr": 5379, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x11\\x00 \\x01\\t5_\\x01\\x10\\x01?\\x10\\x10\\x02:\\x00K\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.17", "flags": 0, "createdate": "2009-12-21T00:00:00", "modifydate": "2010-01-13T10:10:20", "lines": 570, "newlines": 75, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*    I tried to keep the text displayed in messages (and other        *\n*    places) as free of being hard-coded as possible.  This was to    *\n*    allow the text for messages, etc to be customized/translated for *\n*    different national languages.                                    *\n*                                                                     *\n*    This is the United States English message table.                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISMSGUS  CSECT\nDISMSGUS  AMODE  31\nDISMSGUS  RMODE  ANY\n          USING  OSCOMM,R12\n          USING  SESSION,R11\n\n* ------------------------------------------------------------------- *\n*         Messages for DISALIST                                       *\n* ------------------------------------------------------------------- *\nDISALIST_START    EQU *\n          DC      CL8'DISALIST'\n          DC      AL4(DISALIST_END-DISALIST_START)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'DISALIST01E  '\n          MSGCOMP 1,CONSTANT,,'LMINIT failed, R15='\n          MSGCOMP 1,HEX,4,COMM_INFO_01\n          MSGDEF  END\n\n          DC      X'FF'                   END OF MESSAGES FOR DISALIST\nDISALIST_END      EQU  *\n\n* ------------------------------------------------------------------- *\n*         Messages for DISBIND                                        *\n* ------------------------------------------------------------------- *\nDISBIND_START     EQU *\n          DC      CL8'DISBIND'\n          DC      AL4(DISBIND_END-DISBIND_START)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'DISBIND01E  '\n          MSGCOMP 1,CONSTANT,,'BIND STARTD failed'\n          MSGCOMP 2,CONSTANT,,'Return code'\n          MSGCOMP 2,HEX,8,COMM_INFO_01\n          MSGCOMP 3,CONSTANT,,'Reason code'\n          MSGCOMP 3,HEX,8,COMM_INFO_02\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'DISBIND02E  '\n          MSGCOMP 1,CONSTANT,,'BIND CREATEW failed'\n          MSGCOMP 2,CONSTANT,,'Return code'\n          MSGCOMP 2,HEX,8,COMM_INFO_01\n          MSGCOMP 3,CONSTANT,,'Reason code'\n          MSGCOMP 3,HEX,8,COMM_INFO_02\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'DISBIND03E  '\n          MSGCOMP 1,CONSTANT,,'BIND SETO failed'\n          MSGCOMP 2,CONSTANT,,'Return code'\n          MSGCOMP 2,HEX,8,COMM_INFO_01\n          MSGCOMP 3,CONSTANT,,'Reason code'\n          MSGCOMP 3,HEX,8,COMM_INFO_02\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'DISBIND04E  '\n          MSGCOMP 1,CONSTANT,,'BIND INCLUDE failed'\n          MSGCOMP 2,CONSTANT,,'Return code'\n          MSGCOMP 2,HEX,8,COMM_INFO_01\n          MSGCOMP 3,CONSTANT,,'Reason code'\n          MSGCOMP 3,HEX,8,COMM_INFO_02\n          MSGDEF  END\n\n          MSGDEF  5\n          MSGCOMP 1,CONSTANT,,'DISBIND05E  '\n          MSGCOMP 1,CONSTANT,,'BIND DELETEW failed'\n          MSGCOMP 2,CONSTANT,,'Return code'\n          MSGCOMP 2,HEX,8,COMM_INFO_01\n          MSGCOMP 3,CONSTANT,,'Reason code'\n          MSGCOMP 3,HEX,8,COMM_INFO_02\n          MSGDEF  END\n\n          MSGDEF  6\n          MSGCOMP 1,CONSTANT,,'DISBIND06E  '\n          MSGCOMP 1,CONSTANT,,'BIND ENDD failed'\n          MSGCOMP 2,CONSTANT,,'Return code'\n          MSGCOMP 2,HEX,8,COMM_INFO_01\n          MSGCOMP 3,CONSTANT,,'Reason code'\n          MSGCOMP 3,HEX,8,COMM_INFO_02\n          MSGDEF  END\n\n          DC      X'FF'                   END OF MESSAGES FOR DISBIND\nDISBIND_END       EQU  *\n\n* ------------------------------------------------------------------- *\n*         Messages for DISBLIST                                       *\n* ------------------------------------------------------------------- *\nDISBLIST_START    EQU *\n          DC      CL8'DISBLIST'\n          DC      AL4(DISBLIST_END-DISBLIST_START)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'Begin disp larger than end disp'\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'Bad hex digit'\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'Begin disp required'\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'Begin disp required'\n          MSGDEF  END\n\n          MSGDEF  5\n          MSGCOMP 1,CONSTANT,,'End disp required'\n          MSGDEF  END\n\n          MSGDEF  6\n          MSGCOMP 1,CONSTANT,,'Base register is required'\n          MSGDEF  END\n\n          MSGDEF  7\n          MSGCOMP 1,CONSTANT,,'Invalid register name/number'\n          MSGDEF  END\n\n\n          DC      X'FF'                   END OF MESSAGES FOR DISBLIST\nDISBLIST_END      EQU  *\n\n* ------------------------------------------------------------------- *\n*         Messages for DISCONF                                        *\n* ------------------------------------------------------------------- *\nDISCONF_START     EQU *\n          DC      CL8'DISCONF'\n          DC      AL4(DISCONF_END-DISCONF_START)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'DISCONF01E  '\n          MSGCOMP 1,CONSTANT,,'Config data set name is blank'\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'DISCONF02E  '\n          MSGCOMP 1,CONSTANT,,'Config data set must be a PDS(/E)'\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'DISCONF03E  '\n          MSGCOMP 1,CONSTANT,,'Enter R for restore or S for save'\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'DISCONF04E  '\n          MSGCOMP 1,CONSTANT,,'Valid function(s) are R or S'\n          MSGDEF  END\n\n          MSGDEF  6\n          MSGCOMP 1,CONSTANT,,'DISCONF06E  '\n          MSGCOMP 1,CONSTANT,,'Member '\n          MSGCOMP 1,CHAR,8,COMM_INFO_01\n          MSGCOMP 1,CONSTANT,,'does not exist'\n          MSGCOMP 2,CONSTANT,,'FIND RC='\n          MSGCOMP 2,HEX,4,COMM_INFO_02\n          MSGDEF  END\n\n          MSGDEF  7\n          MSGCOMP 1,CONSTANT,,'DISCONF07E  '\n          MSGCOMP 1,CONSTANT,,'STOW failed saving member'\n          MSGCOMP 1,CHAR,8,COMM_INFO_01\n          MSGCOMP 2,CONSTANT,,'R15='\n          MSGCOMP 2,HEX,2,COMM_INFO_02\n          MSGDEF  END\n\n          MSGDEF  8\n          MSGCOMP 1,CONSTANT,,'DISCONF08E  '\n          MSGCOMP 1,CONSTANT,,'Config data set must be RECFM F or FB'\n          MSGDEF  END\n\n          MSGDEF  9\n          MSGCOMP 1,CONSTANT,,'DISCONF09E  '\n          MSGCOMP 1,CONSTANT,,'Config data set must have LRECL=256'\n          MSGDEF  END\n\n          MSGDEF  10\n          MSGCOMP 1,CONSTANT,,'DISCONF10E  '\n          MSGCOMP 1,CONSTANT,,'VGET failed, R15='\n          MSGCOMP 1,HEX,4,COMM_INFO_01\n          MSGDEF  END\n\n          MSGDEF  11\n          MSGCOMP 1,CONSTANT,,'DISCONF11E  '\n          MSGCOMP 1,CONSTANT,,'VPUT to PROFILE failed, R15='\n          MSGCOMP 1,HEX,4,COMM_INFO_01\n          MSGDEF  END\n\n          MSGDEF  12\n          MSGCOMP 1,CONSTANT,,'DISCONF12E  '\n          MSGCOMP 1,CONSTANT,,'VPUT to SHARED failed, R15='\n          MSGCOMP 1,HEX,4,COMM_INFO_01\n          MSGDEF  END\n\n\n          DC      X'FF'                   END OF MESSAGES FOR DISCONF\nDISCONF_END       EQU  *\n\n* ------------------------------------------------------------------- *\n*         Messages for DISDCONV                                       *\n* ------------------------------------------------------------------- *\nDISDCONV_START    EQU *\n          DC      CL8'DISDCONV'\n          DC      AL4(DISDCONV_END-DISDCONV_START)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'DISDCONV01E  '\n          MSGCOMP 1,CONSTANT,,'Bad hex digit in displacement -> '\n          MSGCOMP 1,CHAR,1,COMM_INFO_01\n          MSGDEF  END\n\n          DC      X'FF'                   END OF MESSAGES FOR DISDCONV\nDISDCONV_END      EQU  *\n\n* ------------------------------------------------------------------- *\n*         Messages for DISDLIST                                       *\n* ------------------------------------------------------------------- *\nDISDLIST_START    EQU *\n          DC      CL8'DISDLIST'\n          DC      AL4(DISDLIST_END-DISDLIST_START)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'Begin disp larger than end disp'\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'Begin disp required when end disp given'\n          MSGDEF  END\n\n          DC      X'FF'                   END OF MESSAGES FOR DISDLIST\nDISDLIST_END      EQU  *\n\n* ------------------------------------------------------------------- *\n*         Messages for DISDSECT                                       *\n* ------------------------------------------------------------------- *\nDISDSECT_START    EQU *\n          DC      CL8'DISDSECT'\n          DC      AL4(DISDSECT_END-DISDSECT_START)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'DISDSECT01I  '\n          MSGCOMP 1,CONSTANT,,'DSECT '\n          MSGCOMP 1,CHAR,8,COMM_INFO_01\n          MSGCOMP 1,CONSTANT,,'found in '\n          MSGCOMP 2,CONSTANT,,'DD  '\n          MSGCOMP 2,CHAR,8,COMM_INFO_02\n          MSGCOMP 2,CONSTANT,,'DSN '\n          MSGCOMP 2,CHAR,44,COMM_INFO_03\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'DISDSECT02E  '\n          MSGCOMP 1,CONSTANT,,'LABEL '\n          MSGCOMP 1,CHAR,63,COMM_INFO_01\n          MSGCOMP 2,CONSTANT,,'Not found in DSECT '\n          MSGCOMP 2,CHAR,63,COMM_INFO_02\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'DISDSECT03E  '\n          MSGCOMP 1,CONSTANT,,'DSECT '\n          MSGCOMP 1,CHAR,63,COMM_INFO_01\n          MSGCOMP 2,CONSTANT,,'Not found'\n          MSGDEF  END\n\n          DC      X'FF'                   END OF MESSAGES FOR DISDSECT\nDISDSECT_END      EQU  *\n\n* ------------------------------------------------------------------- *\n*         Messages for DISKLIST                                       *\n* ------------------------------------------------------------------- *\nDISKLIST_START    EQU *\n          DC      CL8'DISKLIST'\n          DC      AL4(DISKLIST_END-DISKLIST_START)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'DISKLIST01E  '\n          MSGCOMP 1,CONSTANT,,'Init CLOSE failed.  R15='\n          MSGCOMP 1,HEX,4,COMM_INFO_03\n          MSGCOMP 2,CONSTANT,,'DDNAME '\n          MSGCOMP 2,CHAR,8,COMM_INFO_02\n          MSGCOMP 3,CONSTANT,,'DSNAME '\n          MSGCOMP 3,CHAR,44,COMM_INFO_01\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'DISKLIST02E  '\n          MSGCOMP 1,CONSTANT,,'CLOSE failed.  R15='\n          MSGCOMP 1,HEX,4,COMM_INFO_03\n          MSGCOMP 2,CONSTANT,,'DDNAME '\n          MSGCOMP 2,CHAR,8,COMM_INFO_02\n          MSGCOMP 3,CONSTANT,,'DSNAME '\n          MSGCOMP 3,CHAR,44,COMM_INFO_01\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'DISKLIST03E  '\n          MSGCOMP 1,CONSTANT,,'OPEN failed.  R15='\n          MSGCOMP 1,HEX,4,COMM_INFO_03\n          MSGCOMP 2,CONSTANT,,'DDNAME '\n          MSGCOMP 2,CHAR,8,COMM_INFO_02\n          MSGCOMP 3,CONSTANT,,'DSNAME '\n          MSGCOMP 3,CHAR,44,COMM_INFO_01\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'DISKLIST04W  '\n          MSGCOMP 1,CONSTANT,,'Pending changes discarded'\n          MSGDEF  END\n\n          DC      X'FF'                   END OF MESSAGES FOR DISKLIST\nDISKLIST_END      EQU  *\n\n* ------------------------------------------------------------------- *\n*         Messages for DISMAIN                                        *\n* ------------------------------------------------------------------- *\nDISMAIN_START     EQU *\n          DC      CL8'DISMAIN'\n          DC      AL4(DISMAIN_END-DISMAIN_START)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'DISMAIN01E  '\n          MSGCOMP 1,CONSTANT,,'Output data set name has not been'\n          MSGCOMP 1,CONSTANT,,'given'\n          MSGCOMP 2,CONSTANT,,'Use option -O-'\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'DISMAIN02E  '\n          MSGCOMP 1,CONSTANT,,'Non zero return code from EDIT, R15='\n          MSGCOMP 1,HEX,4,COMM_INFO_01\n          MSGDEF  END\n\n          DC      X'FF'                   END OF MESSAGES FOR DISMAIN\nDISMAIN_END       EQU  *\n\n* ------------------------------------------------------------------- *\n*         Messages for DISNLIST                                       *\n* ------------------------------------------------------------------- *\nDISNLIST_START    EQU *\n          DC      CL8'DISNLIST'\n          DC      AL4(DISNLIST_END-DISNLIST_START)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'DISNLIST01E  '\n          MSGCOMP 1,CONSTANT,,'No section names found'\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'DISNLIST02E  '\n          MSGCOMP 1,CONSTANT,,'Incorrect number of operands'\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'DISNLIST03E  '\n          MSGCOMP 1,CONSTANT,,'Invalid command'\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'DISNLIST04E  '\n          MSGCOMP 1,CONSTANT,,'Name too long.  8 characters max'\n          MSGDEF  END\n\n          MSGDEF  5\n          MSGCOMP 1,CONSTANT,,'DISNLIST05E  '\n          MSGCOMP 1,CONSTANT,,'CSECT '\n          MSGCOMP 1,CHAR,8,COMM_INFO_01\n          MSGCOMP 1,CONSTANT,,'not found'\n          MSGDEF  END\n\n          DC      X'FF'                   END OF MESSAGES FOR DISNLIST\nDISNLIST_END      EQU  *\n\n* ------------------------------------------------------------------- *\n*         Messages for DISOPTS                                        *\n* ------------------------------------------------------------------- *\nDISOPTS_START     EQU *\n          DC      CL8'DISOPTS'\n          DC      AL4(DISOPTS_END-DISOPTS_START)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'DISOPTS01E  '\n          MSGCOMP 1,CONSTANT,,'Output DSN is blank'\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'DISOPTS02E  '\n          MSGCOMP 1,CONSTANT,,'DSNINFO failed'\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'DISOPTS03E  '\n          MSGCOMP 1,CONSTANT,,'DSORG is not PS or PO'\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'DISOPTS04E  '\n          MSGCOMP 1,CONSTANT,,'Member not valid with DSORG=PS'\n          MSGDEF  END\n\n          MSGDEF  5\n          MSGCOMP 1,CONSTANT,,'DISOPTS05E  '\n          MSGCOMP 1,CONSTANT,,'Member required with DSORG=PO'\n          MSGDEF  END\n\n          MSGDEF  6\n          MSGCOMP 1,CONSTANT,,'DISOPTS06E  '\n          MSGCOMP 1,CONSTANT,,'RECFM not F or FB'\n          MSGDEF  END\n\n          MSGDEF  7\n          MSGCOMP 1,CONSTANT,,'DISOPTS07E  '\n          MSGCOMP 1,CONSTANT,,'LRECL is not 80'\n          MSGDEF  END\n\n          MSGDEF  8\n          MSGCOMP 1,CONSTANT,,'DISOPTS08E  '\n          MSGCOMP 1,CONSTANT,,'Invalid label prefix'\n          MSGDEF  END\n\n          MSGDEF  10\n          MSGCOMP 1,CONSTANT,,'DISOPTS10E  '\n          MSGCOMP 1,CONSTANT,,'Errors pending.. correct before exiting'\n          MSGDEF  END\n\n          DC      X'FF'                   END OF MESSAGES FOR DISOPTS\nDISOPTS_END       EQU  *\n\n* ------------------------------------------------------------------- *\n*         Messages for DISSLIST                                       *\n* ------------------------------------------------------------------- *\nDISSLIST_START    EQU *\n          DC      CL8'DISSLIST'\n          DC      AL4(DISSLIST_END-DISSLIST_START)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'DISSLIST01W  '\n          MSGCOMP 1,CONSTANT,,'Pending changes discarded'\n          MSGDEF  END\n\n          DC      X'FF'                   END OF MESSAGES FOR DISSLIST\nDISSLIST_END      EQU  *\n\n* ------------------------------------------------------------------- *\n*         Messages for DISTLIST                                       *\n* ------------------------------------------------------------------- *\nDISTLIST_START    EQU *\n          DC      CL8'DISTLIST'\n          DC      AL4(DISTLIST_END-DISTLIST_START)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'DISTLIST01E  '\n          MSGCOMP 1,CONSTANT,,'Invalid primary command'\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'DISTLIST02E  '\n          MSGCOMP 1,CONSTANT,,'Invalid command'\n          MSGDEF  END\n\n          DC      X'FF'                   END OF MESSAGES FOR DISTLIST\nDISTLIST_END      EQU  *\n\n* ------------------------------------------------------------------- *\n*         Messages for DISULIST                                       *\n* ------------------------------------------------------------------- *\nDISULIST_START    EQU *\n          DC      CL8'DISULIST'\n          DC      AL4(DISULIST_END-DISULIST_START)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'DISULIST01E  '\n          MSGCOMP 1,CONSTANT,,'Register is required'\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'DISULIST02E  '\n          MSGCOMP 1,CONSTANT,,'Invalid register number/name'\n          MSGDEF  END\n\n          MSGDEF  3\n          MSGCOMP 1,CONSTANT,,'DISULIST03E  '\n          MSGCOMP 1,CONSTANT,,'Invalid begin displacement'\n          MSGDEF  END\n\n          MSGDEF  4\n          MSGCOMP 1,CONSTANT,,'DISULIST04E  '\n          MSGCOMP 1,CONSTANT,,'Invalid end displacement'\n          MSGDEF  END\n\n          MSGDEF  5\n          MSGCOMP 1,CONSTANT,,'DISULIST045  '\n          MSGCOMP 1,CONSTANT,,'Begin disp larger than end disp'\n          MSGDEF  END\n\n          DC      X'FF'                   END OF MESSAGES FOR DISULIST\nDISULIST_END      EQU  *\n\n* ------------------------------------------------------------------- *\n*         Messages for DISVBU                                         *\n* ------------------------------------------------------------------- *\nDISVBU_START      EQU *\n          DC      CL8'DISVBU'\n          DC      AL4(DISVBU_END-DISVBU_START)\n\n          MSGDEF  1\n          MSGCOMP 1,CONSTANT,,'DISVBU01E  '\n          MSGCOMP 1,CONSTANT,,'BASE end displacement beyond'\n          MSGCOMP 1,CONSTANT,,'end of CSECT'\n          MSGCOMP 2,CONSTANT,,'BASE: '\n          MSGCOMP 2,CHAR,3,COMM_INFO_01\n          MSGCOMP 2,CONSTANT,,'Displacement given: '\n          MSGCOMP 2,HEX,8,COMM_INFO_02\n          MSGCOMP 2,CONSTANT,,'CSECT length: '\n          MSGCOMP 2,HEX,8,COMM_INFO_03\n          MSGDEF  END\n\n          MSGDEF  2\n          MSGCOMP 1,CONSTANT,,'DISVBU02E  '\n          MSGCOMP 1,CONSTANT,,'BASE begin displacement beyond'\n          MSGCOMP 1,CONSTANT,,'end of CSECT'\n          MSGCOMP 2,CONSTANT,,'BASE: '\n          MSGCOMP 2,CHAR,3,COMM_INFO_01\n          MSGCOMP 2,CONSTANT,,'Displacement given: '\n          MSGCOMP 2,HEX,8,COMM_INFO_02\n          MSGCOMP 2,CONSTANT,,'CSECT length: '\n          MSGCOMP 2,HEX,8,COMM_INFO_03\n          MSGDEF  END\n\n\n          DC      X'FF'                   END OF MESSAGES FOR DISVBU\nDISVBU_END        EQU  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*         The following constant marks the end of the CSECT           *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n          DC     X'FF'                   End of all messages\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDUMMY1    DSECT\n          COPY   DXDPREF\n\nDUMMY2    DSECT\n          COPY   MSG\n\n          COMMON\n          SESSION  TYPE=DSECT\n          BPXYSTAT DSECT=YES,LIST=YES\n\n          COPY   TRENTRY\n          COPY   REGEQU\n          END    DISMSGUS\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISNAME": {"ttr": 7181, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x004\\x01\\t6O\\x01\\x10\\x01_\\x15#\\x00\\xc5\\x00\\xc6\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2009-12-30T00:00:00", "modifydate": "2010-01-15T15:23:34", "lines": 197, "newlines": 198, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: DISNAME                                              *\n*                                                                    *\n*  Function:                                                         *\n*   Obtain the section names in the LMOD                             *\n*                                                                    *\n*   DISBIND has already established a dialog                         *\n*                                                                    *\n*                                                                    *\n*--------------------------------------------------------------------*\nDISNAME  CSECT\nDISNAME  AMODE 31\nDISNAME  RMODE ANY\n         USING DISNAME,R15\n         B     MOD0000                          SKIP EYECATCHER\nMODID    DC    CL8'DISNAME'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                  SAVE REGS\n         LR    R10,R15\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISNAME,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR                WORK AREA\n         A     R15,DXD_START                    PLUS DISP\n         ST    R13,4(,R15)                      CHAIN SAVE AREA\n         ST    R15,8(,R13)                      CHAIN SAVE AREA\n         LR    R13,R15                          SET SAVE AREA ADDRESS\n         USING DXDNAME,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n* ------------------------------------------------------------------- *\n*        Obtain and initialize NAME buffer                            *\n* ------------------------------------------------------------------- *\n         ITRACE ID=GETBUF\n         IEWBUFF FUNC=GETBUF,                                          +\n               TYPE=NAME\n         ST    R8,DXD_BUFFER\n         ITRACE ID=INIT_BUF,                                           +\n               RDATA1=R8,                                              +\n               RDATA2=R7\n         IEWBUFF FUNC=INITBUF,                                         +\n               TYPE=NAME\n         XC    DXD_CURSOR,DXD_CURSOR\n*--------------------------------------------------------------------*\n*                                                                    *\n*--------------------------------------------------------------------*\nNAME0000 DS    0H\n         ITRACE ID=GET_NAME\n         L     R8,DXD_BUFFER\n         LA    R7,BNLH_END\n         IEWBIND FUNC=GETN,                                            +\n               VERSION=5,                                              +\n               WORKMOD=DISCOMM_DIALOG_WORKMOD,                         +\n               AREA=IEWBBNL,                                           +\n               CURSOR=DXD_CURSOR,                                      +\n               COUNT=DXD_NAME_RETURNED,                                +\n               TCOUNT=DXD_TOTAL_NAMES,                                 +\n               NTYPE=S,                                                +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_IEWBIND,COMPLETE)\n         ITRACE ID=NAME_RC,                                            +\n               DATA1=(DXD_RETURN_CODE,4),                              +\n               DATA2=(DXD_REASON_CODE,4)\n         CLC   DXD_RETURN_CODE,F4\n         BH    ERR0010\n         BL    NAME0010\n         CLC   DXD_REASON_CODE,X_83000800\n         BE    NAME0010\n         CLC   DXD_REASON_CODE,X_83000801\n         BE    ERR0020\nNAME0010 DS    0H\n         ICM   R6,15,DXD_NAME_RETURNED\n         USING BNL_ENTRY,R7\nNAME0020 DS    0H\n         ITRACE ID=BNL,                                                +\n               RDATA1=R7,                                              +\n               RDATA2=R6\n         L     R2,BNL_NAME_PTR                 ADDRESS OF NAME\n         CLI   0(R2),C' '                      PRINTABLE NAME?\n         BL    NAME0040                        NO\n         L     R1,DISCOMM_NAME_NBR             NBR OF 'NAMES'\n         LA    R1,1(,R1)                       PLUS 1\n         ST    R1,DISCOMM_NAME_NBR             SAVE TOTAL\n         GETMAIN RU,                                                   +\n               LV=NAME_DSECT_L,                                        +\n               LOC=ANY\n         USING NAME_DSECT,R1\n         MVC   NAME_EYE,NAME_ID                SET EYECATCHER\n         MVC   NAME_NEXT,DISCOMM_NAME_NEXT     CHAIN EXISTING TO NEW\n         ST    R1,DISCOMM_NAME_NEXT            ADD NEW NAME TO CHAIN\n         MVC   NAME_NAME,COMM_BLANKS           INITIALIZE NAME\n         LH    R3,BNL_NAME_CHARS               LENGTH OF NAME\n         CH    R3,H8                           MORE THAN 8?\n         BNH   NAME0030                        NO\n         LH    R3,H8                           LIMIT TO 8\nNAME0030 DS    0H\n         BCTR  R3,0                            FOR EX\n         EX    R3,NAME_MVC                     COPY NAME\n         MVC   NAME_OFFSET,BNL_SEGM_OFF        COPY OFFSET\n         ITRACE ID=NEW_NAME,                                           +\n               DATA1=NAME_NAME,                                        +\n               DATA2=(NAME_OFFSET,4)\nNAME0040 DS    0H\n         LA    R7,BNL_END                      NEXT BNL ENTRY\n         BCT   R6,NAME0020                     LOOP\n         CLC   DXD_REASON_CODE,X_83000800      MORE TO GO?\n         BNE   NAME0000                        YES\n         B     EXIT0000\nNAME_MVC MVC   NAME_NAME(0),0(R2)\n*--------------------------------------------------------------------*\n*                                                                    *\n*--------------------------------------------------------------------*\nERR0010  DS    0H\n         DC    H'1'\nERR0020  DS    0H\n         DC    H'2'\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                     RESTORE REGISTER 13      ASE01670\n         LM    R14,R12,12(R13)                 RESTORE OTHER REGISTERS  ASE01680\n         SR    R15,R15                         SET RETURN CODE          ASE01690\n         BR    R14                             RETURN TO CALLER         ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START     DC   Q(DXDNAME)\nF4            DC   F'4'\nH8            DC   H'8'\nB_NAME        DC   XL2'5',C'B_NAME'\nX_83000800    DC   X'83000800'\nX_83000801    DC   X'83000801'\nNAME_ID       DC   CL8'NAME'\n\n         IEWBUFF FUNC=MAPBUF,                                          +\n               TYPE=NAME,                                              +\n               HEADREG=R8,                                             +\n               ENTRYREG=R7,                                            +\n               SIZE=50,                                                +\n               VERSION=5\n\n              IEWBIND MF=(L,IEWBIND_I)\nIEWBIND_L     EQU  *-IEWBIND_I\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDNAME           DSECT\n                  COPY     DXDPREF\n\nDXD_RETURN_CODE   DS   F\nDXD_REASON_CODE   DS   F\n\nDXD_BUFFER        DS   A\n\nDXD_CURSOR        DS   F\nDXD_NAME_RETURNED DS   F\nDXD_TOTAL_NAMES   DS   F\n\nDXD_IEWBIND       DS   0F,(IEWBIND_L)X\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n                  END     DISNAME\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISNLIST": {"ttr": 5128, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x01\\x01\\t6O\\x01\\x10\\x01?\\x10\\t\\x01J\\x00\\xff\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2009-12-30T00:00:00", "modifydate": "2010-01-13T10:09:01", "lines": 330, "newlines": 255, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: DISNLIST                                             *\n*                                                                    *\n*  Display section names as a scrollable selection list              *\n*                                                                    *\n*--------------------------------------------------------------------*\nDISNLIST CSECT\nDISNLIST AMODE 31\nDISNLIST RMODE ANY\n         USING DISNLIST,R15\n         B     MOD0000                           SKIP EYECATCHER\nMODID    DC    CL8'DISNLIST'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                   SAVE REGS\n         LR    R10,R15                           SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISNLIST,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR                 WORK AREA\n         A     R15,DXD_START                     PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         USING DXDNLIST,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R8,COMM_OSSPFD                    DISSPFD ADDR\n         USING OSSPFD,R8                         DEFINE BASE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0000 DS    0H\n         ICM   R5,15,DISCOMM_NAME_NEXT           FIRST SECTION NAME\n         USING NAME_DSECT,R5\n         BZ    ERR0010\nMAIN0010 DS    0H\n         ITRACE ID=BUILD\n         L     R0,DISCOMM_VDATA_ADDR             VDATA ADDRESS\n         L     R1,DISCOMM_VDATA_LENGTH           VDATA SIZE\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                            INITIALIZE VDATA\n         L     R6,DISCOMM_VDATA_ADDR\n         USING DETAIL,R6\n         L     R7,SPF_VDEPTH                     SCREEN DEPTH\n         ST    R5,DXD_FIRST_DISPLAYED            SAVE FIRST DISPLAYED\n         XC    DXD_LINES_BUILT,DXD_LINES_BUILT\nMAIN0020 DS    0H\n         ITRACE ID=NAME,                                               +\n               DATA1=NAME_NAME,                                        +\n               DATA2=(NAME_OFFSET,4)\n         ST    R5,DXD_LAST_DISPLAYED             SAVE LAST DISPLAYED\n         MVI   DETAIL_ATTR_1,$SCREEN_ATTR_INPUT  SET ATTRIBUTE\n         MVI   DETAIL_SELECT,C' '                INITIALIZE SELECT\n         MVI   DETAIL_ATTR_2,$SCREEN_ATTR_HIGH_TURQUOISE\n         MVC   DETAIL_NAME,NAME_NAME             COPY NAME\n         MVC   COMM_DWORD(4),NAME_OFFSET         COPY TO WORK AREA\n         UNPK  DETAIL_OFFSET(9),COMM_DWORD(5)    .. PREVENTS S0C4'S\n         TR    DETAIL_OFFSET,COMM_HEXCHAR\n         MVI   DETAIL_OFFSET+8,C' '\n         LA    R1,1                              CONSTANT 1\n         AH    R1,DXD_LINES_BUILT                PLUS TOTAL SO FAR\n         STH   R1,DXD_LINES_BUILT                UPDATE TOTAL\n         A     R6,SPF_VWIDTH                     NEXT LINE\n         BCT   R7,MAIN0030\n         B     MAIN0040\nMAIN0030 DS    0H\n         ICM   R5,15,NAME_NEXT                   NEXT SECTION\n         BNZ   MAIN0020                          LOOP\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0040 DS    0H\n         ITRACE ID=REFRDSCB\n         L     R15,COMM_V_OSDSCB\n         BALR  R14,R15                           REFRESH DSCB INFO\n         MVC   SESS_DISP_PANEL,PANEL_NAME        SET PANEL NAME\n         MVC   SESS_DISP_VDATA_ADDR,DISCOMM_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DISCOMM_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n*---------------------------------------------------------------------*\n*                                                                     *\n*        Display                                                      *\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0050 DS    0H\n         L     R15,COMM_V_OSDISP                 OSDISP ENTRY POINT\n         BALR  R14,R15                           DISPLAY PANEL\n         ITRACE ID=DISP_RC,                                            +\n               RDATA1=R15\n         LTR   R2,R15                            RC = ZERO?\n         BNZ   EXIT0000                          NO\n*---------------------------------------------------------------------*\n*        Check for selection from command line                        *\n*---------------------------------------------------------------------*\n         OC    COMM_OPERANDS_NBR,COMM_OPERANDS_NBR\n         BZ    MAIN0090                          NO OPERANDS, TRY LINE\n         CLC   COMM_OPERANDS_NBR,H2              NBR CORRECT?\n         BNE   ERR0020                           NO\n         ICM   R1,15,OPERAND_01_ADDRESS          1ST OPERAND ADDR\n         CLC   =C'S ',0(R1)                      \"S \"?\n         BE    MAIN0060                          YES\n         CLC   =C'SEL ',0(R1)                    \"SEL \"?\n         BE    MAIN0060                          YES\n         CLC   =C'SELECT ',0(R1)                 \"SELECT \"?\n         BNE   ERR0030                           NO\nMAIN0060 DS    0H\n         ICM   R1,15,OPERAND_02_ADDRESS          2ND OPERAND ADDR\n         SR    R2,R2\n         ICM   R2,3,OPERAND_02_LENGTH            OPERAND 2 LENGTH\n         CH    R2,H8                             TOO LONG?\n         BH    ERR0040                           YES\n         MVC   DXD_NAME,COMM_BLANKS              INITIALIZE NAME\n         BCTR  R2,0\n         EX    R2,NAME_MVC                       COPY NAME\n         ITRACE ID=NAME,                                               +\n               DATA1=DXD_NAME\n         ICM   R5,15,DISCOMM_NAME_NEXT           ANY NAMES?\n         BZ    ERR0050                           NO\nMAIN0070 DS    0H\n         ITRACE ID=A,DATA1=NAME_NAME,DATA2=DXD_NAME\n         CLC   NAME_NAME,DXD_NAME                NAME LOCATED?\n         BE    MAIN0080\n         ICM   R5,15,NAME_NEXT                   NEXT NAME\n         BNZ   MAIN0070\n         B     ERR0050                           NOT FOUND\nMAIN0080 DS    0H\n         ITRACE ID=GOODNAME\n         MVC   SPF_ZCMD,COMM_BLANKS\n         MVC   DISCOMM_CSECT,DXD_NAME            COPY NAME\n         MVC   SPF_CSECT,DXD_NAME                COPY NAME\n         SR    R2,R2\n         B     EXIT0000\nNAME_MVC MVC   DXD_NAME(0),0(R1)\n*---------------------------------------------------------------------*\n*        Check for selection                                          *\n*---------------------------------------------------------------------*\nMAIN0090 DS    0H\n         ITRACE ID=LINE_SEL\n         L     R6,DISCOMM_VDATA_ADDR             VDATA ADDR\n         LH    R7,DXD_LINES_BUILT\nMAIN0100 DS    0H\n         CLI   DETAIL_SELECT,C' '                SELECTED?\n         BNE   MAIN0200                          YES\n         A     R6,SPF_VWIDTH                     NEXT LINE\n         BCT   R7,MAIN0100                       CHECK NEXT LINE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         CLI   SPF_ZVERB,C'B'                    BOTTOM?\n         BE    MAIN0130                          YES\n         CLI   SPF_ZVERB,C'D'                    DOWN?\n         BE    MAIN0150                          YES\n         CLI   SPF_ZVERB,C'T'                    TOP?\n         BE    MAIN0000                          YES\n         CLI   SPF_ZVERB,C'U'                    UP?\n         BE    MAIN0160                          YES\n         B     MAIN0050                          DISPLAY DATA AGAIN\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0130 DS    0H\n         ITRACE ID=BOTTOM\n         ICM   R5,15,DISCOMM_NAME_NEXT\n         BZ    EXIT0000\nMAIN0140 DS    0H\n         ICM   R1,15,NAME_NEXT                   NEXT NAME\n         BZ    MAIN0010                          END OF LIST\n         LR    R5,R1                             COPY NEXT\n         B     MAIN0140                          LOOP\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0150 DS    0H\n         ITRACE ID=DOWN\n         CLI   SPF_ZSCROLLA,C'M'                 MAX?\n         BE    MAIN0130                          YES\n         L     R5,DXD_LAST_DISPLAYED             LAST ON DISPLAY\n         B     MAIN0010                          BUILD DISPLAY\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0160 DS    0H\n         ITRACE ID=UP\n         CLI   SPF_ZSCROLLA,C'M'                 MAX?\n         BE    MAIN0000                          YES\n         L     R5,DXD_FIRST_DISPLAYED            FIRST ON DISPLAY\n         L     R7,SPF_ZSCROLLN                   NBR OF LINES TO SCROLL\nMAIN0170 DS    0H\n         ICM   R1,15,NAME_PREV                   PREVIOUS ON CHAIN\n         BZ    MAIN0010\n         LR    R5,R1\n         BCT   R7,MAIN0170\n         B     MAIN0010\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0200 DS    0H\n         ITRACE ID=SELECTED,                                           +\n               DATA1=DETAIL_NAME\n         MVC   DISCOMM_CSECT,DETAIL_NAME\n         MVC   SPF_CSECT,DETAIL_NAME\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nERR0010  DS    0H\n         MVI   COMM_MSG_ID+1,1                   SET MESSAGE ID\n         B     ERR0100\nERR0020  DS    0H\n         ITRACE ID=BADOPERS\n         MVI   COMM_MSG_ID+1,2                   SET MESSAGE ID\n         B     ERR0100\nERR0030  DS    0H\n         ITRACE ID=BADCMD\n         MVI   COMM_MSG_ID+1,3                   SET MESSAGE ID\n         B     ERR0100\nERR0040  DS    0H\n         ITRACE ID=LONGNAME\n         MVI   COMM_MSG_ID+1,4                   SET MESSAGE ID\n         B     ERR0100\nERR0050  DS    0H\n         ITRACE ID=BAD_NAME\n         MVI   COMM_MSG_ID+1,5                   SET MESSAGE ID\n         MVC   COMM_INFO_01(8),DXD_NAME\nERR0100  DS    0H\n         MVI   COMM_MSG_ID,0\n         ITRACE ID=ERROR,                                              +\n               DATA1=(COMM_MSG_ID,2)\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     MAIN0040\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                       RESTORE REGISTER 13    ASE01670\n         L     R14,12(,R13)                      RESTORE REGISTERS      ASE01680\n         LR    R15,R2                            SET RC\n         LM    R0,R12,20(R13)                    RESTORE REGISTERS      ASE01680\n         BR    R14                               RETURN TO CALLER       ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START            DC   Q(DXDNLIST)\n\nH2                   DC   H'2'\nH8                   DC   H'8'\n\nPANEL_NAME           DC   CL8'DISNLIST'\n\n                     LTORG\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDNLIST             DSECT\n                     COPY DXDPREF\n\nDXD_FIRST_DISPLAYED  DS   A\nDXD_LAST_DISPLAYED   DS   A\n\nDXD_LINES_BUILT      DS   H\n\nDXD_NAME             DS   CL8\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDETAIL               DSECT\n                     DS   CL10\nDETAIL_ATTR_1        DS   X\nDETAIL_SELECT        DS   X\nDETAIL_ATTR_2        DS   X\nDETAIL_NAME          DS   CL8\nDETAIL_ATTR_3        DS   X\nDETAIL_OFFSET        DS   CL8\n                     DS   X\nDETAIL_L             EQU  *-DETAIL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n              END     DISNLIST\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISOPA7": {"ttr": 7172, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00\\x18\\x01\\t6/\\x01\\x10\\x01_\\x13@\\x00\\xb1\\x00s\\x00^\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "2009-12-28T00:00:00", "modifydate": "2010-01-15T13:40:18", "lines": 177, "newlines": 115, "modlines": 94, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: DISOPA7                                               *\n*                                                                     *\n*  This exit does not extablish a work area.                          *\n*  It MUST NOT call ITRACE                                            *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*  FUNCTION:                                                          *\n*    Modify OPCODE table for A7 instructions                          *\n*                                                                     *\n*                                                                     *\n*  Calling program provides two parms                                 *\n*     1)   Address of OPCODE table entry to modify                    *\n*     2)   Address of object text                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISOPA7  CSECT\nDISOPA7  AMODE 31\nDISOPA7  RMODE ANY\n         USING DISOPA7,R15\n         B     MOD0000                           SKIP EYECATCHER\nMODID    DC    CL8'DISOPA7'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                   SAVE REGS\n         LR    R10,R15                           SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISOPA7,R10\n         USING DISCOMM,R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LM    R2,R3,0(R1)                       PARMS\n         GETMAIN RU,                                                   +\n               LV=WORK_L,                                              +\n               LOC=ANY\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING WORK,R13\n         MVC   DXD_CSECT,MODID\n         USING OPCODE_DSECT,R2\n         MVC   COMM_INFO_01(1),1(R3)             COPY 2ND BYTE\n         NI    COMM_INFO_01,X'0F'                CLEAR 1ST NIBBLE\n         SR    R5,R5                             CLEAR R4\n         IC    R5,COMM_INFO_01                   OPCODE MODIFIER\n         MH    R5,=Y(OPCODE_TABLE_L)             MULTIPLY BY LENGTH\n         LA    R6,OPCODE_TABLE(R5)               PLUS BASE\n         MVC   OPCODE_MNEMONIC,0(R6)             COPY MNEMONIC\n         MVC   OPCODE_FLAGS,5(R6)                COPY FLAGS\n         MVC   OPCODE_REF,6(R6)                  COPY REF INDICATORS\n         STCM  R10,15,OPCODE_EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT,                                               +\n               DATA1=(OPCODE_MNEMONIC,5),                              +\n               DATA2=(OPCODE_FORMAT,4)\n         LR    R1,R13\n         L     R13,4(,R13)                       RESTORE R13\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=WORK_L\n         LM    R14,R12,12(R13)                   RESTORE REGISTERS\n         SR    R15,R15\n         BR    R14                               RETURN TO CALLER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n\nOPCODE_TABLE   DS      0C\n               DC      CL5'TMLH '               0\n               DC      AL1(0)\n               DC      AL1($OPCODE_REF1)\nOPCODE_TABLE_L EQU     *-OPCODE_TABLE\n\n               DC      CL5'TMLL '               1\n               DC      AL1(0)\n               DC      AL1($OPCODE_REF1)\n\n               DC      CL5'TMHH '               2\n               DC      AL1(0)\n               DC      AL1($OPCODE_REF1)\n\n               DC      CL5'TMHL '               3\n               DC      AL1(0)\n               DC      AL1($OPCODE_REF1)\n\n               DC      CL5'BRC  '               4\n               DC      AL1($OPCODE_BRANCH+$OPCODE_RELATIVE)\n               DC      AL1(0)\n\n               DC      CL5'BRAS '               5\n               DC      AL1($OPCODE_BRANCH+$OPCODE_RELATIVE)\n               DC      AL1(0)\n\n               DC      CL5'BRCT '               6\n               DC      AL1($OPCODE_BRANCH+$OPCODE_RELATIVE)\n               DC      AL1(0)\n\n               DC      CL5'BRCTG'               7\n               DC      AL1($OPCODE_BRANCH+$OPCODE_RELATIVE)\n               DC      AL1(0)\n\n               DC      CL5'LHI  '               8\n               DC      AL1(0)\n               DC      AL1(0)\n\n               DC      CL5'LGHI '               9\n               DC      AL1(0)\n               DC      AL1(0)\n\n               DC      CL5'AHI  '               A\n               DC      AL1(0)\n               DC      AL1(0)\n\n               DC      CL5'AGHI '               B\n               DC      AL1(0)\n               DC      AL1(0)\n\n               DC      CL5'MHI  '               C\n               DC      AL1(0)\n               DC      AL1(0)\n\n               DC      CL5'MGHI '               D\n               DC      AL1(0)\n               DC      AL1(0)\n\n               DC      CL5'CHI  '               E\n               DC      AL1(0)\n               DC      AL1(0)\n\n               DC      CL5'CGHI '               F\n               DC      AL1(0)\n               DC      AL1(0)\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORK          DSECT\n              COPY     DXDPREF\nWORK_L        EQU      *-WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY     REGEQU\n              END      DISOPA7\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISOPB2": {"ttr": 7940, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x003\\x01\\x10\\x00o\\x01\\x10\\x01\\x8f\\x10V\\x02d\\x00\\xde\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2010-01-06T00:00:00", "modifydate": "2010-01-18T10:56:33", "lines": 612, "newlines": 222, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: DISOPB2                                               *\n*                                                                     *\n*  Function:                                                          *\n*   Modify OPCODE table entry for X'B2' instructions                  *\n*                                                                     *\n*  Calling program provides two parms                                 *\n*     1)   Address of OPCODE table entry to modify                    *\n*     2)   Address of object text                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISOPB2  CSECT\nDISOPB2  AMODE 31\nDISOPB2  RMODE ANY\n         USING DISOPB2,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISCOMM,R9\n         USING OPCODE_DSECT,R2\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'DISOPB2'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         LM    R2,R3,0(R1)\n         DROP  R15\n         USING DISOPB2,R10\n         GETMAIN RU,                                                   +\n               LV=WORK_L,                                              +\n               LOC=ANY\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING WORK,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R3,                                              +\n               DATA2=(0(R3),2)\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         LA    R4,B2_TABLE\n         USING B2_DSECT,R4\nB20000   DS    0H\n         CLC   B2_CODE,1(R3)                  ENTRY LOCATED?\n         BE    B20010                         YES\n         LA    R4,B2_L(,R4)                   NEXT\n         CLI   0(R4),X'FF'                    END OF TABLE?\n         BNE   B20000                         NO\n         ITRACE ID=NOTVALID\n         XC    OPCODE_LENGTH,OPCODE_LENGTH    SET LENGTH TO ZERO\n         B     EXIT0000\nB20010   DS    0H\n         ITRACE ID=VALID,                                              +\n               DATA1=(B2_MNEMONIC,5),                                  +\n               DATA2=(B2_LENGTH,2)\n         MVC   OPCODE_MNEMONIC,B2_MNEMONIC    SET MNEMONIC\n         MVC   OPCODE_LENGTH,B2_LENGTH        SET LENGTH\n         MVC   OPCODE_FORMAT,B2_FORMAT        SET FORMAT\n         MVC   OPCODE_REF,B2_REF              SET REF FLAGS\nEXIT0000 DS    0H\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         ITRACE ID=EXIT\n         LR    R1,R13\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=WORK_L\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nB2_TABLE DS    0C\n         DC    X'02'                          BYTE 2\n         DC    CL5'STIDP'                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'04'                          BYTE 2\n         DC    CL5'SCK  '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'05'                          BYTE 2\n         DC    CL5'STCK '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'06'                          BYTE 2\n         DC    CL5'SCKC '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'07'                          BYTE 2\n         DC    CL5'STCKC'                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'08'                          BYTE 2\n         DC    CL5'SPT  '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'09'                          BYTE 2\n         DC    CL5'STPT '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'0A'                          BYTE 2\n         DC    CL5'SPKA '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'0B'                          BYTE 2\n         DC    CL5'IPK  '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'0D'                          BYTE 2\n         DC    CL5'PTLB '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'10'                          BYTE 2\n         DC    CL5'SPX  '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'11'                          BYTE 2\n         DC    CL5'STPX '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'12'                          BYTE 2\n         DC    CL5'STAP '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'18'                          BYTE 2\n         DC    CL5'PC   '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'19'                          BYTE 2\n         DC    CL5'SAC  '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'1A'                          BYTE 2\n         DC    CL5'CPC  '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'21'                          BYTE 2\n         DC    CL5'IPTE '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'22'                          BYTE 2\n         DC    CL5'IPM  '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'23'                          BYTE 2\n         DC    CL5'IVSK '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'24'                          BYTE 2\n         DC    CL5'IAC  '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'25'                          BYTE 2\n         DC    CL5'SSAR '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'26'                          BYTE 2\n         DC    CL5'EPAR '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'27'                          BYTE 2\n         DC    CL5'ESAR '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'28'                          BYTE 2\n         DC    CL5'PT   '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'29'                          BYTE 2\n         DC    CL5'ISKE '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'2A'                          BYTE 2\n         DC    CL5'RRBE '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'2B'                          BYTE 2\n         DC    CL5'SSKE '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'2C'                          BYTE 2\n         DC    CL5'TB   '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'2D'                          BYTE 2\n         DC    CL5'DXR  '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'2E'                          BYTE 2\n         DC    CL5'PGIN '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'2F'                          BYTE 2\n         DC    CL5'PGOUT'                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'30'                          BYTE 2\n         DC    CL5'CSCH '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'31'                          BYTE 2\n         DC    CL5'HSCH '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'32'                          BYTE 2\n         DC    CL5'MSCH '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'33'                          BYTE 2\n         DC    CL5'SSCH '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'34'                          BYTE 2\n         DC    CL5'STSCH'                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'35'                          BYTE 2\n         DC    CL5'TSCH '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'36'                          BYTE 2\n         DC    CL5'TPI  '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'37'                          BYTE 2\n         DC    CL5'SAL  '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'38'                          BYTE 2\n         DC    CL5'RSCH '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'39'                          BYTE 2\n         DC    CL5'STCRW'                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'3A'                          BYTE 2\n         DC    CL5'STCPS'                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'3B'                          BYTE 2\n         DC    CL5'RCHP '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'3C'                          BYTE 2\n         DC    CL5'SCHM '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'40'                          BYTE 2\n         DC    CL5'BAKR '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'41'                          BYTE 2\n         DC    CL5'CKSM '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'44'                          BYTE 2\n         DC    CL5'SQDR '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'45'                          BYTE 2\n         DC    CL5'SQER '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'46'                          BYTE 2\n         DC    CL5'STURA'                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'47'                          BYTE 2\n         DC    CL5'MSTA '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'48'                          BYTE 2\n         DC    CL5'PLAB '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'49'                          BYTE 2\n         DC    CL5'EREG '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'4A'                          BYTE 2\n         DC    CL5'ESTA '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'4B'                          BYTE 2\n         DC    CL5'LURA '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'4C'                          BYTE 2\n         DC    CL5'TAR  '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'4D'                          BYTE 2\n         DC    CL5'CPYA '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'4E'                          BYTE 2\n         DC    CL5'SAR  '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'4F'                          BYTE 2\n         DC    CL5'EAR  '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'50'                          BYTE 2\n         DC    CL5'CSP  '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'52'                          BYTE 2\n         DC    CL5'MSR  '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'54'                          BYTE 2\n         DC    CL5'MVPG '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'55'                          BYTE 2\n         DC    CL5'MVST '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'57'                          BYTE 2\n         DC    CL5'CUSE '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'58'                          BYTE 2\n         DC    CL5'BSG  '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'5A'                          BYTE 2\n         DC    CL5'BSA  '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'5D'                          BYTE 2\n         DC    CL5'CLST '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'5E'                          BYTE 2\n         DC    CL5'SRST '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'63'                          BYTE 2\n         DC    CL5'CMPSC'                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'76'                          BYTE 2\n         DC    CL5'XSCH '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'77'                          BYTE 2\n         DC    CL5'RP   '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'78'                          BYTE 2\n         DC    CL5'STCKE'                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'79'                          BYTE 2\n         DC    CL5'SCAF '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'7D'                          BYTE 2\n         DC    CL5'STSI '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'99'                          BYTE 2\n         DC    CL5'SRNM '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'9C'                          BYTE 2\n         DC    CL5'STFPC'                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'9D'                          BYTE 2\n         DC    CL5'LFPC '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'A5'                          BYTE 2\n         DC    CL5'TRE  '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'A6'                          BYTE 2\n         DC    CL5'CUUTF'                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'A7'                          BYTE 2\n         DC    CL5'CUTFU'                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_RRE)               FORMAT\n         DC    AL1(0)                         NO STORAGE REFERENCE\n\n         DC    X'B1'                          BYTE 2\n         DC    CL5'STFL '                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'B2'                          BYTE 2\n         DC    CL5'LPSWE'                     MNEMONIC\n         DC    AL2(4)                         LENGTH\n         DC    AL1($OPCODE_B2S)               FORMAT\n         DC    AL1($OPCODE_REF1)              BYTES 3 AND 4 CAUSE A REF\n\n         DC    X'FF'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nWORK           DSECT\n               COPY DXDPREF\nWORK_L         EQU  *-WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nB2_DSECT       DSECT\nB2_CODE        DS       X\nB2_MNEMONIC    DS       CL5\nB2_LENGTH      DS       AL2\nB2_FORMAT      DS       X\nB2_REF         DS       X\nB2_L           EQU      *-B2_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      DISOPB2\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISOPB9": {"ttr": 2828, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00$\\x01\\x10\\x00\\x7f\\x01\\x10\\x00\\x7f\\x10\\x10\\x01\\x14\\x02j\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2010-01-07T00:00:00", "modifydate": "2010-01-07T10:10:24", "lines": 276, "newlines": 618, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: DISOPB9                                               *\n*                                                                     *\n*  Function:                                                          *\n*   Modify OPCODE table entry for X'B9' instructions                  *\n*                                                                     *\n*  Calling program provides two parms                                 *\n*     1)   Address of OPCODE table entry to modify                    *\n*     2)   Address of object text                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISOPB9  CSECT\nDISOPB9  AMODE 31\nDISOPB9  RMODE ANY\n         USING DISOPB9,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISCOMM,R9\n         USING OPCODE_DSECT,R2\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'DISOPB9'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         LM    R2,R3,0(R1)\n         DROP  R15\n         USING DISOPB9,R10\n         GETMAIN RU,                                                   +\n               LV=WORK_L,                                              +\n               LOC=ANY\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING WORK,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R3,                                              +\n               DATA2=(0(R3),2)\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         LA    R4,B9_TABLE\n         USING B9_DSECT,R4\nB20000   DS    0H\n         CLC   B9_CODE,1(R3)                  ENTRY LOCATED?\n         BE    B20010                         YES\n         LA    R4,B9_L(,R4)                   NEXT\n         CLI   0(R4),X'FF'                    END OF TABLE?\n         BNE   B20000                         NO\n         ITRACE ID=NOTVALID\n         XC    OPCODE_LENGTH,OPCODE_LENGTH    SET LENGTH TO ZERO\n         B     EXIT0000\nB20010   DS    0H\n         ITRACE ID=VALID,                                              +\n               DATA1=(B9_MNEMONIC,5)\n         MVC   OPCODE_MNEMONIC,B9_MNEMONIC    SET MNEMONIC\n         MVC   OPCODE_LENGTH,H4               SET LENGTH\n         MVI   OPCODE_FORMAT,$OPCODE_RRE      SET FORMAT\nEXIT0000 DS    0H\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         ITRACE ID=EXIT\n         LR    R1,R13\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=WORK_L\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nH4       DC    H'4'\n\nB9_TABLE DS    0C\n         DC    X'00'                          BYTE 2\n         DC    CL5'LPGR '                     MNEMONIC\n\n         DC    X'01'                          BYTE 2\n         DC    CL5'LNGR '                     MNEMONIC\n\n         DC    X'02'                          BYTE 2\n         DC    CL5'LTGR '                     MNEMONIC\n\n         DC    X'03'                          BYTE 2\n         DC    CL5'LCGR '                     MNEMONIC\n\n         DC    X'04'                          BYTE 2\n         DC    CL5'LGR  '                     MNEMONIC\n\n         DC    X'05'                          BYTE 2\n         DC    CL5'LURAG'                     MNEMONIC\n\n         DC    X'08'                          BYTE 2\n         DC    CL5'AGR  '                     MNEMONIC\n\n         DC    X'09'                          BYTE 2\n         DC    CL5'sgr  '                     MNEMONIC\n\n         DC    X'0A'                          BYTE 2\n         DC    CL5'ALGR '                     MNEMONIC\n\n         DC    X'0B'                          BYTE 2\n         DC    CL5'SLGR '                     MNEMONIC\n\n         DC    X'0C'                          BYTE 2\n         DC    CL5'MSGR '                     MNEMONIC\n\n         DC    X'0D'                          BYTE 2\n         DC    CL5'DSGR '                     MNEMONIC\n\n         DC    X'0E'                          BYTE 2\n         DC    CL5'EREGG'                     MNEMONIC\n\n         DC    X'0F'                          BYTE 2\n         DC    CL5'LRVGR'                     MNEMONIC\n\n         DC    X'10'                          BYTE 2\n         DC    CL5'LPGFR'                     MNEMONIC\n\n         DC    X'11'                          BYTE 2\n         DC    CL5'LNGFR'                     MNEMONIC\n\n         DC    X'12'                          BYTE 2\n         DC    CL5'LTGFR'                     MNEMONIC\n\n         DC    X'13'                          BYTE 2\n         DC    CL5'LCGFR'                     MNEMONIC\n\n         DC    X'14'                          BYTE 2\n         DC    CL5'LGFR '                     MNEMONIC\n\n         DC    X'16'                          BYTE 2\n         DC    CL5'LLGFR'                     MNEMONIC\n\n         DC    X'17'                          BYTE 2\n         DC    CL5'LLGTR'                     MNEMONIC\n\n         DC    X'18'                          BYTE 2\n         DC    CL5'AGFR '                     MNEMONIC\n\n         DC    X'19'                          BYTE 2\n         DC    CL5'SGFR '                     MNEMONIC\n\n         DC    X'1A'                          BYTE 2\n         DC    CL5'ALGFR'                     MNEMONIC\n\n         DC    X'1B'                          BYTE 2\n         DC    CL5'SLGFR'                     MNEMONIC\n\n         DC    X'1C'                          BYTE 2\n         DC    CL5'MSGFR'                     MNEMONIC\n\n         DC    X'1D'                          BYTE 2\n         DC    CL5'DSGFR'                     MNEMONIC\n\n         DC    X'1F'                          BYTE 2\n         DC    CL5'LRVR '                     MNEMONIC\n\n         DC    X'20'                          BYTE 2\n         DC    CL5'CGRR '                     MNEMONIC\n\n         DC    X'21'                          BYTE 2\n         DC    CL5'CLGR '                     MNEMONIC\n\n         DC    X'25'                          BYTE 2\n         DC    CL5'STURG'                     MNEMONIC\n\n         DC    X'30'                          BYTE 2\n         DC    CL5'CGFR '                     MNEMONIC\n\n         DC    X'31'                          BYTE 2\n         DC    CL5'CLGFR'                     MNEMONIC\n\n         DC    X'46'                          BYTE 2\n         DC    CL5'BCTGR'                     MNEMONIC\n\n         DC    X'80'                          BYTE 2\n         DC    CL5'NGR  '                     MNEMONIC\n\n         DC    X'81'                          BYTE 2\n         DC    CL5'OGR  '                     MNEMONIC\n\n         DC    X'82'                          BYTE 2\n         DC    CL5'XGR  '                     MNEMONIC\n\n         DC    X'86'                          BYTE 2\n         DC    CL5'MLGR '                     MNEMONIC\n\n         DC    X'87'                          BYTE 2\n         DC    CL5'DLGR '                     MNEMONIC\n\n         DC    X'88'                          BYTE 2\n         DC    CL5'ALCGR'                     MNEMONIC\n\n         DC    X'89'                          BYTE 2\n         DC    CL5'SLBGR'                     MNEMONIC\n\n         DC    X'8D'                          BYTE 2\n         DC    CL5'EPSW '                     MNEMONIC\n\n         DC    X'90'                          BYTE 2\n         DC    CL5'TRTT '                     MNEMONIC\n\n         DC    X'91'                          BYTE 2\n         DC    CL5'TRTO '                     MNEMONIC\n\n         DC    X'92'                          BYTE 2\n         DC    CL5'TROT '                     MNEMONIC\n\n         DC    X'93'                          BYTE 2\n         DC    CL5'TROO '                     MNEMONIC\n\n         DC    X'96'                          BYTE 2\n         DC    CL5'MLR  '                     MNEMONIC\n\n         DC    X'97'                          BYTE 2\n         DC    CL5'DLR  '                     MNEMONIC\n\n         DC    X'98'                          BYTE 2\n         DC    CL5'ALCR '                     MNEMONIC\n\n         DC    X'99'                          BYTE 2\n         DC    CL5'SLBR '                     MNEMONIC\n\n         DC    X'9D'                          BYTE 2\n         DC    CL5'ESEA '                     MNEMONIC\n\n         DC    X'FF'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nWORK           DSECT\n               COPY DXDPREF\nWORK_L         EQU  *-WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nB9_DSECT       DSECT\nB9_CODE        DS       X\nB9_MNEMONIC    DS       CL5\nB9_L           EQU      *-B9_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      DISOPB9\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISOPC0": {"ttr": 2824, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x000\\x01\\x10\\x00_\\x01\\x10\\x00o\\x15!\\x00v\\x00q\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "2010-01-05T00:00:00", "modifydate": "2010-01-06T15:21:30", "lines": 118, "newlines": 113, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: DISOPC0                                              *\n*                                                                    *\n*  Function:                                                         *\n*   Modify opcode table for 'C0_x' instructions                      *\n*                                                                    *\n*  Calling program provides two parms                                 *\n*     1)   Address of OPCODE table entry to modify                    *\n*     2)   Address of object text                                     *\n*                                                                    *\n*--------------------------------------------------------------------*\nDISOPC0  CSECT\nDISOPC0  AMODE 31\nDISOPC0  RMODE ANY\n         USING DISOPC0,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISCOMM,R9\n         USING OPCODE_DSECT,R2\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'DISOPC0'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING DISOPC0,R10\n         LM    R2,R3,0(R1)                    PARM ADDRESSES\n         GETMAIN RU,                                                   +\n               LV=WORK_L,                                              +\n               LOC=ANY\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING WORK,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R2,                                              +\n               RDATA2=R3\n         MVC   COMM_INFO_01(1),1(R3)          COPY 2ND BYTE\n         NI    COMM_INFO_01,X'0F'             LEAVE ONLY MODIFIER\n         CLI   COMM_INFO_01,X'00'             LARL?\n         BE    REL0010                        YES\n         CLI   COMM_INFO_01,X'04'             BRCL?\n         BE    REL0020                        YES\n         CLI   COMM_INFO_01,X'05'             BRASL?\n         BE    REL0030                        YES\n         ITRACE ID=NOTVALID\n         XC    OPCODE_LENGTH,OPCODE_LENGTH    SET LENGTH TO ZERO\n         B     EXIT0000\nREL0010  DS    0H\n         MVC   OPCODE_MNEMONIC,OP_LARL        CHANGE OPCODE TO 'LARL'\n         MVI   OPCODE_FORMAT,$OPCODE_RIL      USE RIL FORMAT\n         B     REL0040\nREL0020  DS    0H\n         MVC   OPCODE_MNEMONIC,OP_BRCL        CHANGE OPCODE TO 'BRCL'\n         MVI   OPCODE_FORMAT,$OPCODE_REL1     USE REL1 FORMAT\n         B     REL0040\nREL0030  DS    0H\n         MVC   OPCODE_MNEMONIC,OP_BRASL       CHANGE OPCODE TO 'BRASL'\n         MVI   OPCODE_FORMAT,$OPCODE_RIL      USE RIL FORMAT\nREL0040  DS    0H\n         MVC   OPCODE_LENGTH,H6               SET LENGTH TO 6\nEXIT0000 DS    0H\n         ITRACE ID=EXIT,                                               +\n               DATA1=(OPCODE_MNEMONIC,5)\n         LR    R1,R13\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=WORK_L\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nH6       DC    H'6'\nOP_LARL  DC    CL5'LARL'\nOP_BRCL  DC    CL5'BRCL'\nOP_BRASL DC    CL5'BRASL'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nWORK           DSECT\n               COPY DXDPREF\nWORK_L         EQU  *-WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      DISOPC0\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISOPE3": {"ttr": 3075, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x007\\x01\\x10\\x00\\x7f\\x01\\x10\\x00\\x7f\\x10!\\x01\\x10\\x01\\x1c\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2010-01-07T00:00:00", "modifydate": "2010-01-07T10:21:37", "lines": 272, "newlines": 284, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: DISOPE3                                               *\n*                                                                     *\n*  Function:                                                          *\n*   Modify OPCODE table entry for X'E3' instructions                  *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*   The opcode \"modifier\" is in the 6th byte..                        *\n*   NOT the 2nd as with B2 and B9 instructions                        *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*  Calling program provides two parms                                 *\n*     1)   Address of OPCODE table entry to modify                    *\n*     2)   Address of object text                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISOPE3  CSECT\nDISOPE3  AMODE 31\nDISOPE3  RMODE ANY\n         USING DISOPE3,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISCOMM,R9\n         USING OPCODE_DSECT,R2\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'DISOPE3'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         LM    R2,R3,0(R1)\n         DROP  R15\n         USING DISOPE3,R10\n         GETMAIN RU,                                                   +\n               LV=WORK_L,                                              +\n               LOC=ANY\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING WORK,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R3,                                              +\n               DATA2=(0(R3),2)\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         LA    R4,E3_TABLE\n         USING E3_DSECT,R4\nB20000   DS    0H\n         CLC   E3_CODE,5(R3)                  ENTRY LOCATED?\n         BE    B20010                         YES\n         LA    R4,E3_L(,R4)                   NEXT\n         CLI   0(R4),X'FF'                    END OF TABLE?\n         BNE   B20000                         NO\n         ITRACE ID=NOTVALID\n         XC    OPCODE_LENGTH,OPCODE_LENGTH    SET LENGTH TO ZERO\n         B     EXIT0000\nB20010   DS    0H\n         ITRACE ID=VALID,                                              +\n               DATA1=(E3_MNEMONIC,5)\n         MVC   OPCODE_MNEMONIC,E3_MNEMONIC    SET MNEMONIC\n         MVC   OPCODE_LENGTH,H6               SET LENGTH\n         MVI   OPCODE_FORMAT,$OPCODE_RX       SET FORMAT\nEXIT0000 DS    0H\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         ITRACE ID=EXIT\n         LR    R1,R13\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=WORK_L\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nH6       DC    H'6'\n\nE3_TABLE DS    0C\n         DC    X'03'                          BYTE 6\n         DC    CL5'LRAG '                     MNEMONIC\n\n         DC    X'04'                          BYTE 6\n         DC    CL5'LG   '                     MNEMONIC\n\n         DC    X'08'                          BYTE 6\n         DC    CL5'AG   '                     MNEMONIC\n\n         DC    X'09'                          BYTE 6\n         DC    CL5'SG   '                     MNEMONIC\n\n         DC    X'0A'                          BYTE 6\n         DC    CL5'ALG  '                     MNEMONIC\n\n         DC    X'0B'                          BYTE 6\n         DC    CL5'SLG  '                     MNEMONIC\n\n         DC    X'0C'                          BYTE 6\n         DC    CL5'MSG  '                     MNEMONIC\n\n         DC    X'0D'                          BYTE 6\n         DC    CL5'DSG  '                     MNEMONIC\n\n         DC    X'0E'                          BYTE 6\n         DC    CL5'CVBG '                     MNEMONIC\n\n         DC    X'0F'                          BYTE 6\n         DC    CL5'LRVG '                     MNEMONIC\n\n         DC    X'14'                          BYTE 6\n         DC    CL5'LGF  '                     MNEMONIC\n\n         DC    X'15'                          BYTE 6\n         DC    CL5'LGH  '                     MNEMONIC\n\n         DC    X'16'                          BYTE 6\n         DC    CL5'LLGF '                     MNEMONIC\n\n         DC    X'17'                          BYTE 6\n         DC    CL5'LLGT '                     MNEMONIC\n\n         DC    X'18'                          BYTE 6\n         DC    CL5'AGF  '                     MNEMONIC\n\n         DC    X'19'                          BYTE 6\n         DC    CL5'SGF  '                     MNEMONIC\n\n         DC    X'1A'                          BYTE 6\n         DC    CL5'ALGF '                     MNEMONIC\n\n         DC    X'1B'                          BYTE 6\n         DC    CL5'SLGF '                     MNEMONIC\n\n         DC    X'1C'                          BYTE 6\n         DC    CL5'MSGF '                     MNEMONIC\n\n         DC    X'1D'                          BYTE 6\n         DC    CL5'DSGF '                     MNEMONIC\n\n         DC    X'1E'                          BYTE 6\n         DC    CL5'LRV  '                     MNEMONIC\n\n         DC    X'1F'                          BYTE 6\n         DC    CL5'LRVH '                     MNEMONIC\n\n         DC    X'20'                          BYTE 6\n         DC    CL5'CG   '                     MNEMONIC\n\n         DC    X'21'                          BYTE 6\n         DC    CL5'CLG  '                     MNEMONIC\n\n         DC    X'24'                          BYTE 6\n         DC    CL5'STG  '                     MNEMONIC\n\n         DC    X'2E'                          BYTE 6\n         DC    CL5'CVDG '                     MNEMONIC\n\n         DC    X'2F'                          BYTE 6\n         DC    CL5'STRVG'                     MNEMONIC\n\n         DC    X'30'                          BYTE 6\n         DC    CL5'CGF  '                     MNEMONIC\n\n         DC    X'31'                          BYTE 6\n         DC    CL5'CLGF '                     MNEMONIC\n\n         DC    X'3E'                          BYTE 6\n         DC    CL5'STRV '                     MNEMONIC\n\n         DC    X'3F'                          BYTE 6\n         DC    CL5'STRVH'                     MNEMONIC\n\n         DC    X'46'                          BYTE 6\n         DC    CL5'BCTG '                     MNEMONIC\n\n         DC    X'80'                          BYTE 6\n         DC    CL5'NG   '                     MNEMONIC\n\n         DC    X'81'                          BYTE 6\n         DC    CL5'OG   '                     MNEMONIC\n\n         DC    X'82'                          BYTE 6\n         DC    CL5'XG   '                     MNEMONIC\n\n         DC    X'86'                          BYTE 6\n         DC    CL5'MLG  '                     MNEMONIC\n\n         DC    X'87'                          BYTE 6\n         DC    CL5'DLG  '                     MNEMONIC\n\n         DC    X'88'                          BYTE 6\n         DC    CL5'ALCG '                     MNEMONIC\n\n         DC    X'89'                          BYTE 6\n         DC    CL5'SLBG '                     MNEMONIC\n\n         DC    X'8E'                          BYTE 6\n         DC    CL5'STPQ '                     MNEMONIC\n\n         DC    X'8F'                          BYTE 6\n         DC    CL5'LPQ  '                     MNEMONIC\n\n         DC    X'90'                          BYTE 6\n         DC    CL5'LLGC '                     MNEMONIC\n\n         DC    X'91'                          BYTE 6\n         DC    CL5'LLGH '                     MNEMONIC\n\n         DC    X'96'                          BYTE 6\n         DC    CL5'ML   '                     MNEMONIC\n\n         DC    X'97'                          BYTE 6\n         DC    CL5'DL   '                     MNEMONIC\n\n         DC    X'98'                          BYTE 6\n         DC    CL5'ALC  '                     MNEMONIC\n\n         DC    X'99'                          BYTE 6\n         DC    CL5'SLB  '                     MNEMONIC\n\n         DC    X'FF'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nWORK           DSECT\n               COPY DXDPREF\nWORK_L         EQU  *-WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nE3_DSECT       DSECT\nE3_CODE        DS       X\nE3_MNEMONIC    DS       CL5\nE3_L           EQU      *-E3_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      DISOPE3\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISOPTS": {"ttr": 8201, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x00$\\x01\\t4/\\x01\\x10\\x02_\\t \\x01\\n\\x00\\xbd\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "2009-12-08T00:00:00", "modifydate": "2010-01-25T09:20:24", "lines": 266, "newlines": 189, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: DISOPTS                                              *\n*                                                                    *\n*  Function:                                                         *\n*                                                                    *\n*   Allow the user to choose                                         *\n*     .  prefix for generated labels                                 *\n*     .  output dataset (and member) for generated source            *\n*                                                                    *\n*--------------------------------------------------------------------*\nDISOPTS  CSECT\nDISOPTS  AMODE 31\nDISOPTS  RMODE ANY\n         USING DISOPTS,R15\n         B     MOD0000                           SKIP EYECATCHER\nMODID    DC    CL8'DISOPTS'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                   SAVE REGS\n         LR    R10,R15                           SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISOPTS,R10\n         USING DISCOMM,R9\n         USING ESD_DSECT,R6\n         L     R15,SESS_DXD_ADDR                 WORK AREA\n         A     R15,DXD_START                     PLUS DISP\n         ST    R13,4(R15)\n         ST    R15,8(R13)\n         LR    R13,R15\n         USING DXDOPTS,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n         MVC   SPF_PREFIX,DISCOMM_PREFIX\n         MVC   SPF_OUTPUT_DSN,DISCOMM_OUTPUT_DSN\n         MVC   SPF_OUTPUT_MEMBER,DISCOMM_OUTPUT_MEMBER\n*--------------------------------------------------------------------*\n*                                                                    *\n*--------------------------------------------------------------------*\nMAIN0010 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_NAME        SET PANEL NAME\n         XC    SESS_DISP_VDATA_ADDR,SESS_DISP_VDATA_ADDR\n         XC    SESS_DISP_VDATA_LENGTH,SESS_DISP_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15                           DISPLAY ESD INFO\n         ITRACE ID=DISP_RC,                                            +\n               RDATA1=R15\n         LTR   R2,R15                            RC=0?\n         BNZ   MAIN0200                          NO\n*--------------------------------------------------------------------*\n*                                                                    *\n*--------------------------------------------------------------------*\n         NI    DXD_FLAGS,255-$ERROR              RESET ERROR FLAG\n*---------------------------------------------------------------------*\n*        VERIFY OUTPUT DSN                                            *\n*---------------------------------------------------------------------*\n         CLC   SPF_OUTPUT_DSN,COMM_BLANKS        OUTPUT DSN BLANK?\n         BE    ERR0010                           YES\n         MVI   DSINFO_OPTIONS,0\n         MVC   DSINFO_DSN,SPF_OUTPUT_DSN         COPY DSN\n         MVC   DSINFO_VOLSER,COMM_BLANKS\n         LA    R1,DSINFREQ                       DSINFO REQ PARMS\n         L     R15,COMM_V_OSDSINFO               OSDSINFO ENTRY POINT\n         ITRACE ID=DSINFO,                                             +\n               RDATA1=R15,                                             +\n               RDATA2=R1\n         BALR  R14,R15                           CALL OSDSINFO\n         ITRACE ID=INFO_RC,                                            +\n               RDATA1=R15,                                             +\n               DATA2=(DSINFO_ERROR_INFO,4)\n         LTR   R15,R15                           PROBLEM?\n         BNZ   ERR0210                           YES\n         OC    DSINFO_ERROR_INFO,DSINFO_ERROR_INFO\n         BNZ   ERR0020\n         USING DS1FMTID,DSINFO_DSCB              DEFINE BASE\n         TM    DS1DSORG,DS1DSGPS                 SEQUENTIAL?\n         BO    MAIN0020                          YES\n         TM    DS1DSORG,DS1DSGPO                 PDS?\n         BO    MAIN0030                          YES\n         B     ERR0030                           NOT ALLOWED\nMAIN0020 DS    0H\n         CLC   SPF_OUTPUT_MEMBER,COMM_BLANKS     MEMBER NAME BLANK?\n         BNE   ERR0040                           NO\n         B     MAIN0040\nMAIN0030 DS    0H\n         CLC   SPF_OUTPUT_MEMBER,COMM_BLANKS     MEMBER NAME BLANK?\n         BE    ERR0050\nMAIN0040 DS    0H\n         TM    DS1RECFM,DS1RECFV                 RECFM=V OR U?\n         BO    ERR0060                           YES.. NOT ALLOWED\n         CLC   DS1LRECL,H80                      LRECL=80?\n         BNE   ERR0070                           NO\n*---------------------------------------------------------------------*\n*        VERIFY PREFIX                                                *\n*---------------------------------------------------------------------*\n         OC    SPF_PREFIX,COMM_BLANKS            TRANSLATE\n         CLI   SPF_PREFIX,C'@'                   AT-SIGN?\n         BE    MAIN0080                          YES\n         CLI   SPF_PREFIX,C'#'                   POUND SIGN?\n         BE    MAIN0080                          YES\n         CLI   SPF_PREFIX,C'$'                   DOLLAR SIGN?\n         BE    MAIN0080                          YES\n         CLI   SPF_PREFIX,C'_'                   UNDERSCORE?\n         BE    MAIN0080                          YES\n         CLI   SPF_PREFIX,C'A'                   ALPHA?\n         BL    ERR0080                           NO\n         CLI   SPF_PREFIX,C'Z'                   ALPHA?\n         BH    ERR0080                           NO\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0080 DS    0H\n         TM    DXD_FLAGS,$ERROR                  ERRORS PENDING?\n         BO    ERR0100                           YES\n         MVC   DISCOMM_PREFIX,SPF_PREFIX         SET PREFIX\n         LA    R1,4                              MAX LENGTH\n         LA    R2,DISCOMM_PREFIX+3               END OF PREFIX\nMAIN0090 DS    0H\n         CLI   0(R2),C' '                        END OF PREFIX?\n         BNE   MAIN0100                          YES\n         BCTR  R2,0\n         BCT   R1,MAIN0090\nMAIN0100 DS    0H\n         STH   R1,DISCOMM_PREFIX_LENGTH          SET PREFIX LENGTH\n         ITRACE ID=PREFIX,                                             +\n               DATA1=DISCOMM_PREFIX,                                   +\n               RDATA2=R1\n         MVC   DISCOMM_OUTPUT_DSN,SPF_OUTPUT_DSN\n         MVC   DISCOMM_OUTPUT_MEMBER,SPF_OUTPUT_MEMBER\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMAIN0200 DS    0H\n         ITRACE ID=ENDING\n         CLC   SPF_OUTPUT_DSN,DISCOMM_OUTPUT_DSN\n         BNE   MAIN0210\n         CLC   SPF_OUTPUT_MEMBER,DISCOMM_OUTPUT_MEMBER\n         BNE   MAIN0210\n         CLC   SPF_PREFIX,DISCOMM_PREFIX\n         BE    EXIT0000\nMAIN0210 DS    0H\n         ITRACE ID=NOT_UPDT\n         MVC   SPF_MSG_1(MSG1_L),MSG1\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nERR0010  DS    0H\n         MVI   COMM_MSG_ID+1,1                   OUTPUT DSN IS BLANK\n         B     ERR0200\nERR0020  DS    0H\n         MVI   COMM_MSG_ID+1,2                   DSINFO FAILED\n         B     ERR0200\nERR0030  DS    0H\n         MVI   COMM_MSG_ID+1,3                   DSORG NOT PS OR PO\n         B     ERR0200\nERR0040  DS    0H\n         MVI   COMM_MSG_ID+1,4                   MEMBER NAME WITH PS\n         B     ERR0200\nERR0050  DS    0H\n         MVI   COMM_MSG_ID+1,5                   NO MEMBER NAME WITH PO\n         B     ERR0200\nERR0060  DS    0H\n         MVI   COMM_MSG_ID+1,6                   RECFM NOT F OR FB\n         B     ERR0200\nERR0070  DS    0H\n         MVI   COMM_MSG_ID+1,7                   LRECL NOT 80\n         B     ERR0200\nERR0080  DS    0H\n         MVI   COMM_MSG_ID+1,8                   INVALID LABEL PREFIX\n         B     ERR0200\nERR0100  DS    0H\n         MVI   COMM_MSG_ID+1,10                  ERRORS PENDING\nERR0200  DS    0H\n         OI    DXD_FLAGS,$ERROR                  SET ERROR FLAG\n         MVI   COMM_MSG_ID,0\n         MVC   COMM_MSG_CSECT,MODID              SET CSECT NAME\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15                           BUILD MESSAGE(S)\nERR0210  DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1              COPY MESSAGE(S)\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     MAIN0010\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         TM    DXD_FLAGS,$ERROR                  ERROR FLAG ON?\n         BO    ERR0100                           YES..\n         ITRACE ID=EXIT\n         L     R13,4(R13)                        RESTORE REGISTER 13    ASE01670\n         L     R14,12(,R13)                      RESTORE REGISTERS      ASE01680\n         LR    R15,R2                            SET RC\n         LM    R0,R12,20(R13)                    RESTORE REGISTERS      ASE01680\n         BR    R14                               RETURN TO CALLER       ASE01700\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START     DC      Q(DXDOPTS)\n\nH80           DC      H'80'\n\nPANEL_NAME    DC      CL8'DISOPTS '\n\nMSG1          DC      C'DISOPTS01W  Last updates discarded'\nMSG1_L        EQU     *-MSG1\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDOPTS       DSECT\n              COPY    DXDPREF\n\nDXD_FLAGS     DS      X\n$ERROR        EQU     X'80'\n\n              DSINFREQ DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFORMAT1       DSECT\n              IECSDSL1 1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n              COPY     REGEQU\n              END      DISOPTS\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISOP01": {"ttr": 8197, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00H\\x01\\x10\\x00_\\x01\\x10\\x01\\x8f\\x10X\\x00\\x89\\x00n\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2010-01-05T00:00:00", "modifydate": "2010-01-18T10:58:48", "lines": 137, "newlines": 110, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: DISOP01                                               *\n*                                                                     *\n*  Function:                                                          *\n*   Modify opcode table entry for X'01xx' (SAM) instructions          *\n*                                                                     *\n*  Calling program provides two parms                                 *\n*     1)   Address of OPCODE table entry to modify                    *\n*     2)   Address of object text                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISOP01  CSECT\nDISOP01  AMODE 31\nDISOP01  RMODE ANY\n         USING DISOP01,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISCOMM,R9\n         USING OPCODE_DSECT,R2\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'DISOP01'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         LM    R2,R3,0(R1)\n         DROP  R15\n         USING DISOP01,R10\n         GETMAIN RU,                                                   +\n               LV=WORK_L,                                              +\n               LOC=ANY\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING WORK,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R3,                                              +\n               DATA2=(0(R3),2)\n         CLI   1(R3),X'01'                    PR?\n         BE    OP0010                         YES\n         CLI   1(R3),X'02'                    UPT\n         BE    OP0020                         YES\n         CLI   1(R3),X'07'                    SCKPF\n         BE    OP0030                         YES\n         CLI   1(R3),X'0B'                    TAM?\n         BE    OP0040                         YES\n         CLI   1(R3),X'0C'                    SAM24?\n         BE    OP0050                         YES\n         CLI   1(R3),X'0D'                    SAM31?\n         BE    OP0060                         YES\n         CLI   1(R3),X'0E'                    SAM64?\n         BE    OP0070                         YES\n         ITRACE ID=NOT_VALID\n         XC    OPCODE_LENGTH,OPCODE_LENGTH    NOT A VALID OPCODE\n         B     EXIT0000\nOP0010   DS    0H\n         MVC   OPCODE_MNEMONIC,OP_PR          SET MNEMONIC\n         B     OP0080\nOP0020   DS    0H\n         MVC   OPCODE_MNEMONIC,OP_UPT         SET MNEMONIC\n         B     OP0080\nOP0030   DS    0H\n         MVC   OPCODE_MNEMONIC,OP_SCKPF       SET MNEMONIC\n         B     OP0080\nOP0040   DS    0H\n         MVC   OPCODE_MNEMONIC,OP_TAM         SET MNEMONIC\n         B     OP0080\nOP0050   DS    0H\n         MVC   OPCODE_MNEMONIC,OP_SAM24       SET MNEMONIC\n         B     OP0080\nOP0060   DS    0H\n         MVC   OPCODE_MNEMONIC,OP_SAM31       SET MNEMONIC\n         B     OP0080\nOP0070   DS    0H\n         MVC   OPCODE_MNEMONIC,OP_SAM64       SET MNEMONIC\n         B     OP0080\nOP0080   DS    0H\n         MVC   OPCODE_LENGTH,H2               SET LENGTH TO 2\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=WORK_L\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nH2       DC    H'2'\nOP_PR    DC    CL5'PR   '\nOP_UPT   DC    CL5'UPT  '\nOP_SCKPF DC    CL5'SCKPF'\nOP_TAM   DC    CL5'TAM  '\nOP_SAM24 DC    CL5'SAM24'\nOP_SAM31 DC    CL5'SAM31'\nOP_SAM64 DC    CL5'SAM64'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nWORK           DSECT\n               COPY DXDPREF\nWORK_L         EQU  *-WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      DISOP01\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISOP1": {"ttr": 7683, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00%\\x01\\x10\\x01_\\x01\\x10\\x01_\\x16#\\x01:\\x01:\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2010-01-15T00:00:00", "modifydate": "2010-01-15T16:23:25", "lines": 314, "newlines": 314, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: DISOP1                                               *\n*                                                                    *\n*  Define valid opcodes                                              *\n*         No floating point                                          *\n*                                                                    *\n*--------------------------------------------------------------------*\nDISOP1   CSECT\nDISOP1   AMODE  31\nDISOP1   RMODE  ANY\n         ORG    DISOP1+(256*4)\n* ------------------------------------------------------------------- *\n*        OPCODE TABLE                                                 *\n* ------------------------------------------------------------------- *\n         OPCODE 00,DC,0,2                 DUMMY ENTRY FOR DC'S\n         OPCODE 01,SAM,$OPCODE_E,2,                                    +\n               EXIT=DISOP01\n         OPCODE 04,SPM,$OPCODE_RR2,2\n         OPCODE 05,BALR,$OPCODE_RR1,2,'PERFORM',                       +\n               FLAGS=$OPCODE_BRANCH\n         OPCODE 06,BCTR,$OPCODE_RR1,2,'LOOP',                          +\n               FLAGS=$OPCODE_BRANCH\n         OPCODE 07,BCR,$OPCODE_RR3,2,                                  +\n               FLAGS=$OPCODE_EXT+$OPCODE_BRANCH\n         OPCODE 0A,SVC,$OPCODE_RR2,2,'SVC DESCRIPTION',                +\n               FLAGS=$OPCODE_BRANCH\n         OPCODE 0B,BSM,$OPCODE_RR1,2,                                  +\n               FLAGS=$OPCODE_BRANCH\n         OPCODE 0C,BASSM,$OPCODE_RR1,2,                                +\n               FLAGS=$OPCODE_BRANCH\n         OPCODE 0D,BASR,$OPCODE_RR1,2,                                 +\n               FLAGS=$OPCODE_BRANCH\n         OPCODE 0E,MVCL,$OPCODE_RR1,2,                                 +N\n               FLAGS=$OPCODE_CCA,                                      +\n               REGS=$OPCODE_1EVEN+$OPCODE_2EVEN\n         OPCODE 0F,CLCL,$OPCODE_RR1,2,                                 +N\n               FLAGS=$OPCODE_CCA,                                      +\n               REGS=$OPCODE_1EVEN+$OPCODE_2EVEN\n         OPCODE 10,LPR,$OPCODE_RR1,2,                                  +\n               FLAGS=$OPCODE_CCA\n         OPCODE 11,LNR,$OPCODE_RR1,2,                                  +\n               FLAGS=$OPCODE_CCA\n         OPCODE 12,LTR,$OPCODE_RR1,2,                                  +\n               FLAGS=$OPCODE_CCA\n         OPCODE 13,LCR,$OPCODE_RR1,2,                                  +\n               FLAGS=$OPCODE_CCA\n         OPCODE 14,NR,$OPCODE_RR1,2,                                   +\n               FLAGS=$OPCODE_CCL\n         OPCODE 15,CLR,$OPCODE_RR1,2,                                  +\n               FLAGS=$OPCODE_CCC\n         OPCODE 16,OR,$OPCODE_RR1,2,                                   +\n               FLAGS=$OPCODE_CCL\n         OPCODE 17,XR,$OPCODE_RR1,2,                                   +\n               FLAGS=$OPCODE_CCL\n         OPCODE 18,LR,$OPCODE_RR1,2\n         OPCODE 19,CR,$OPCODE_RR1,2,                                   +\n               FLAGS=$OPCODE_CCC\n         OPCODE 1A,AR,$OPCODE_RR1,2,                                   +\n               FLAGS=$OPCODE_CCA\n         OPCODE 1B,SR,$OPCODE_RR1,2,                                   +\n               FLAGS=$OPCODE_CCA\n         OPCODE 1C,MR,$OPCODE_RR1,2,                                   +\n               REGS=$OPCODE_1EVEN\n         OPCODE 1D,DR,$OPCODE_RR1,2,                                   +\n               REGS=$OPCODE_1EVEN\n         OPCODE 1E,ALR,$OPCODE_RR1,2,                                  +\n               FLAGS=$OPCODE_CCA\n         OPCODE 1F,SLR,$OPCODE_RR1,2,                                  +\n               FLAGS=$OPCODE_CCA\n         OPCODE 40,STH,$OPCODE_RX,4,                                   +\n               REF=$OPCODE_REF1\n         OPCODE 41,LA,$OPCODE_RX,4,                                    +\n               REF=$OPCODE_REF1\n         OPCODE 42,STC,$OPCODE_RX,4,                                   +\n               REF=$OPCODE_REF1\n         OPCODE 43,IC,$OPCODE_RX,4,                                    +\n               REF=$OPCODE_REF1\n         OPCODE 44,EX,$OPCODE_RX,4,                                    +\n               REF=$OPCODE_REF1\n         OPCODE 45,BAL,$OPCODE_RX,4,'PERFORM',                         +\n               FLAGS=$OPCODE_BRANCH,                                   +\n               REF=$OPCODE_REF1\n         OPCODE 46,BCT,$OPCODE_RX,4,'LOOP',                            +\n               FLAGS=$OPCODE_BRANCH,                                   +\n               REF=$OPCODE_REF1\n         OPCODE 47,BC,$OPCODE_RX,4,                                    +\n               FLAGS=$OPCODE_EXT+$OPCODE_BRANCH,                       +\n               REF=$OPCODE_REF1\n         OPCODE 48,LH,$OPCODE_RX,4,                                    +\n               REF=$OPCODE_REF1\n         OPCODE 49,CH,$OPCODE_RX,4,                                    +\n               FLAGS=$OPCODE_CCC,                                      +\n               REF=$OPCODE_REF1\n         OPCODE 4A,AH,$OPCODE_RX,4,                                    +\n               FLAGS=$OPCODE_CCA,                                      +\n               REF=$OPCODE_REF1\n         OPCODE 4B,SH,$OPCODE_RX,4,                                    +\n               FLAGS=$OPCODE_CCA,                                      +\n               REF=$OPCODE_REF1\n         OPCODE 4C,MH,$OPCODE_RX,4,                                    +\n               REF=$OPCODE_REF1\n         OPCODE 4D,BAS,$OPCODE_RX,4,                                   +\n               FLAGS=$OPCODE_BRANCH,                                   +\n               REF=$OPCODE_REF1\n         OPCODE 4E,CVD,$OPCODE_RX,4,                                   +\n               REF=$OPCODE_REF1\n         OPCODE 4F,CVB,$OPCODE_RX,4,                                   +\n               REF=$OPCODE_REF1\n         OPCODE 50,ST,$OPCODE_RX,4,                                    +\n               REF=$OPCODE_REF1\n         OPCODE 51,LAE,$OPCODE_RX,4,                                   +\n               REF=$OPCODE_REF1\n         OPCODE 54,N,$OPCODE_RX,4,                                     +\n               FLAGS=$OPCODE_CCL,                                      +\n               REF=$OPCODE_REF1\n         OPCODE 55,CL,$OPCODE_RX,4,                                    +\n               FLAGS=$OPCODE_CCC,                                      +\n               REF=$OPCODE_REF1\n         OPCODE 56,O,$OPCODE_RX,4,                                     +\n               FLAGS=$OPCODE_CCL,                                      +\n               REF=$OPCODE_REF1\n         OPCODE 57,X,$OPCODE_RX,4,                                     +\n               FLAGS=$OPCODE_CCL,                                      +\n               REF=$OPCODE_REF1\n         OPCODE 58,L,$OPCODE_RX,4,                                     +\n               REF=$OPCODE_REF1\n         OPCODE 59,C,$OPCODE_RX,4,                                     +\n               FLAGS=$OPCODE_CCC,                                      +\n               REF=$OPCODE_REF1\n         OPCODE 5A,A,$OPCODE_RX,4,                                     +\n               FLAGS=$OPCODE_CCA,                                      +\n               REF=$OPCODE_REF1\n         OPCODE 5B,S,$OPCODE_RX,4,                                     +\n               FLAGS=$OPCODE_CCA,                                      +\n               REF=$OPCODE_REF1\n         OPCODE 5C,M,$OPCODE_RX,4,                                     +\n               REF=$OPCODE_REF1\n         OPCODE 5D,D,$OPCODE_RX,4,                                     +\n               REGS=$OPCODE_1EVEN,                                     +\n               REF=$OPCODE_REF1\n         OPCODE 5E,AL,$OPCODE_RX,4,                                    +\n               FLAGS=$OPCODE_CCA,                                      +\n               REF=$OPCODE_REF1\n         OPCODE 5F,SL,$OPCODE_RX,4,                                    +\n               FLAGS=$OPCODE_CCA,                                      +\n               REF=$OPCODE_REF1\n         OPCODE 80,SSM,$OPCODE_S,4,                                    +\n               REF=$OPCODE_REF1\n         OPCODE 82,LPSW,$OPCODE_S,4,                                   +\n               REF=$OPCODE_REF1\n         OPCODE 83,DIAG,$OPCODE_S,4\n         OPCODE 86,BXH,$OPCODE_RS2,4,                                  +\n               REF=$OPCODE_REF1\n         OPCODE 87,BXLE,$OPCODE_RS2,4,                                 +\n               REF=$OPCODE_REF1\n         OPCODE 88,SRL,$OPCODE_RS1,4\n         OPCODE 89,SLL,$OPCODE_RS1,4\n         OPCODE 8A,SRA,$OPCODE_RS1,4,                                  +\n               FLAGS=$OPCODE_CCA\n         OPCODE 8B,SLA,$OPCODE_RS1,4,                                  +\n               FLAGS=$OPCODE_CCA\n         OPCODE 8C,SRDL,$OPCODE_RS1,4,                                 +\n               REGS=$OPCODE_1EVEN\n         OPCODE 8D,SLDL,$OPCODE_RS1,4,                                 +\n               REGS=$OPCODE_1EVEN\n         OPCODE 8E,SRDA,$OPCODE_RS1,4,                                 +\n               FLAGS=$OPCODE_CCA,                                      +\n               REGS=$OPCODE_1EVEN\n         OPCODE 8F,SLDA,$OPCODE_RS1,4,                                 +\n               FLAGS=$OPCODE_CCA,                                      +\n               REGS=$OPCODE_1EVEN\n         OPCODE 90,STM,$OPCODE_RS2,4,                                  +\n               REF=$OPCODE_REF1\n         OPCODE 91,TM,$OPCODE_SI,4,                                    +\n               FLAGS=$OPCODE_CCL,                                      +\n               REF=$OPCODE_REF1\n         OPCODE 92,MVI,$OPCODE_SI,4,                                   +\n               REF=$OPCODE_REF1\n         OPCODE 93,TS,$OPCODE_S,4,                                     +\n               FLAGS=$OPCODE_CCA,                                      +\n               REF=$OPCODE_REF1\n         OPCODE 94,NI,$OPCODE_SI,4,                                    +\n               FLAGS=$OPCODE_CCL,                                      +\n               REF=$OPCODE_REF1\n         OPCODE 95,CLI,$OPCODE_SI,4,                                   +\n               FLAGS=$OPCODE_CCC,                                      +\n               REF=$OPCODE_REF1\n         OPCODE 96,OI,$OPCODE_SI,4,                                    +\n               FLAGS=$OPCODE_CCL,                                      +\n               REF=$OPCODE_REF1\n         OPCODE 97,XI,$OPCODE_SI,4,                                    +\n               FLAGS=$OPCODE_CCL,                                      +\n               REF=$OPCODE_REF1\n         OPCODE 98,LM,$OPCODE_RS2,4,                                   +\n               REF=$OPCODE_REF1\n         OPCODE 99,TRACE,$OPCODE_RS2,4,                                +\n               REF=$OPCODE_REF1\n         OPCODE 9A,LAM,$OPCODE_RS2,4,                                  +\n               REF=$OPCODE_REF1\n         OPCODE 9B,STAM,$OPCODE_RS2,4,                                 +\n               REF=$OPCODE_REF1\n         OPCODE A7,MODEL,$OPCODE_REL1,4,                               +\n               FLAGS=$OPCODE_BRANCH,                                   +\n               EXIT=DISOPA7\n         OPCODE AC,STNSM,$OPCODE_SI,4,                                 +\n               REF=$OPCODE_REF1\n         OPCODE AD,STOSM,$OPCODE_SI,4,                                 +\n               REF=$OPCODE_REF1\n         OPCODE AE,SIGP,$OPCODE_RS2,4,                                 +\n               FLAGS=$OPCODE_CCA\n         OPCODE AF,MC,$OPCODE_SI,4\n         OPCODE B1,LRA,$OPCODE_RX,4,                                   +\n               FLAGS=$OPCODE_CCA,                                      +\n               REF=$OPCODE_REF1\n         OPCODE B2,DUMMY,$OPCODE_B2S,4,                                +\n               EXIT=DISOPB2\n         OPCODE B6,STCTL,$OPCODE_RS2,4,                                +\n               REF=$OPCODE_REF1\n         OPCODE B7,LCTL,$OPCODE_RS2,4,                                 +\n               REF=$OPCODE_REF1\n         OPCODE B9,DUMMY,$OPCODE_RRE,4,                                +\n               EXIT=DISOPB9\n         OPCODE BA,CS,$OPCODE_RS2,4,                                   +\n               FLAGS=$OPCODE_CCC,                                      +\n               REF=$OPCODE_REF1\n         OPCODE BB,CDS,$OPCODE_RS2,4,                                  +\n               FLAGS=$OPCODE_CCC,                                      +\n               REGS=$OPCODE_1EVEN,                                     +\n               REF=$OPCODE_REF1\n         OPCODE BD,CLM,$OPCODE_RS3,4,                                  +\n               FLAGS=$OPCODE_CCC,                                      +\n               REF=$OPCODE_REF1\n         OPCODE BE,STCM,$OPCODE_RS3,4,                                 +\n               REF=$OPCODE_REF1\n         OPCODE BF,ICM,$OPCODE_RS3,4,                                  +\n               FLAGS=$OPCODE_CCA,                                      +\n               REF=$OPCODE_REF1+$OPCODE_REF2\n         OPCODE C0,LARL,$OPCODE_RIL,6,            LARL, BRCL, BRASL    +\n               FLAGS=$OPCODE_RELATIVE,                                 +\n               EXIT=DISOPC0\n         OPCODE D1,MVN,$OPCODE_SS1,6,                                  +\n               REF=$OPCODE_REF1+$OPCODE_REF2\n         OPCODE D2,MVC,$OPCODE_SS1,6,                                  +\n               REF=$OPCODE_REF1+$OPCODE_REF2\n         OPCODE D3,MVZ,$OPCODE_SS1,6,                                  +\n               REF=$OPCODE_REF1+$OPCODE_REF2\n         OPCODE D4,NC,$OPCODE_SS1,6,                                   +\n               FLAGS=$OPCODE_CCL,                                      +\n               REF=$OPCODE_REF1+$OPCODE_REF2\n         OPCODE D5,CLC,$OPCODE_SS1,6,                                  +\n               FLAGS=$OPCODE_CCC,                                      +\n               REF=$OPCODE_REF1+$OPCODE_REF2\n         OPCODE D6,OC,$OPCODE_SS1,6,                                   +\n               FLAGS=$OPCODE_CCL,                                      +\n               REF=$OPCODE_REF1+$OPCODE_REF2\n         OPCODE D7,XC,$OPCODE_SS1,6,                                   +\n               FLAGS=$OPCODE_CCL,                                      +\n               REF=$OPCODE_REF1+$OPCODE_REF2\n         OPCODE D9,MVCK,$OPCODE_SS3,6,                                 +\n               FLAGS=$OPCODE_CCA\n         OPCODE DA,MVCP,$OPCODE_SS3,6\n         OPCODE DB,MVCS,$OPCODE_SS3,6\n         OPCODE DC,TR,$OPCODE_SS1,6,                                   +\n               REF=$OPCODE_REF1+$OPCODE_REF2\n         OPCODE DD,TRT,$OPCODE_SS1,6,                                  +\n               FLAGS=$OPCODE_CCA,                                      +\n               REF=$OPCODE_REF1+$OPCODE_REF2\n         OPCODE DE,ED,$OPCODE_SS1,6,                                   +\n               FLAGS=$OPCODE_CCA,                                      +\n               REF=$OPCODE_REF1+$OPCODE_REF2\n         OPCODE DF,EDMK,$OPCODE_SS1,6,                                 +\n               FLAGS=$OPCODE_CCA,                                      +\n               REF=$OPCODE_REF1+$OPCODE_REF2\n         OPCODE E3,DUMMY,$OPCODE_RX,6,                                 +\n               REF=$OPCODE_REF1,                                       +\n               EXIT=DISOPE3\n         OPCODE E8,MVCIN,$OPCODE_SS1,6,                                +\n               REF=$OPCODE_REF1+$OPCODE_REF2\n         OPCODE F1,MVO,$OPCODE_SS2,6,                                  +\n               REF=$OPCODE_REF1\n         OPCODE F2,PACK,$OPCODE_SS2,6,                                 +\n               REF=$OPCODE_REF1+$OPCODE_REF2\n         OPCODE F3,UNPK,$OPCODE_SS2,6,                                 +\n               REF=$OPCODE_REF1+$OPCODE_REF2\n         OPCODE F8,ZAP,$OPCODE_SS2,6,                                  +\n               FLAGS=$OPCODE_CCA,                                      +\n               REF=$OPCODE_REF1+$OPCODE_REF2\n         OPCODE F9,CP,$OPCODE_SS2,6,                                   +\n               FLAGS=$OPCODE_CCA,                                      +\n               REF=$OPCODE_REF1+$OPCODE_REF2\n         OPCODE FA,AP,$OPCODE_SS2,6,                                   +\n               FLAGS=$OPCODE_CCA,                                      +\n               REF=$OPCODE_REF1+$OPCODE_REF2\n         OPCODE FB,SP,$OPCODE_SS2,6,                                   +\n               FLAGS=$OPCODE_CCA,                                      +\n               REF=$OPCODE_REF1+$OPCODE_REF2\n         OPCODE FC,MP,$OPCODE_SS2,6,                                   +\n               REF=$OPCODE_REF1+$OPCODE_REF2\n         OPCODE FD,DP,$OPCODE_SS2,6,                                   +\n               REF=$OPCODE_REF1+$OPCODE_REF2\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Create index                                                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ORG    DISOP1+0\nOPINDEX  DS     0A\n         OPCODE TYPE=INDEX\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         DISASMDA\n         END    DISOP1\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISOUT": {"ttr": 8455, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\n\\x00'\\x01\\x10\\x01/\\x01\\x10\\x02_\\x10\\x17\\x00r\\x00m\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@\"", "ispf": {"version": "01.10", "flags": 0, "createdate": "2010-01-12T00:00:00", "modifydate": "2010-01-25T10:17:27", "lines": 114, "newlines": 109, "modlines": 0, "user": "RLRICE"}, "text": "* -------------------------------------------------------------------*\n*                                                                    *\n*  Module name: DISOUT                                               *\n*                                                                    *\n*  Function:                                                         *\n*   Produce output for both DISTEMP and DISPUNCH                     *\n*                                                                    *\n* -------------------------------------------------------------------*\nDISOUT   CSECT\nDISOUT   AMODE 31\nDISOUT   RMODE ANY\n         USING DISOUT,R15\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'DISOUT'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISOUT,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR              WORK AREA\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        SET SAVE AREA ADDRESS\n         USING DXDOUT,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         PUT   DISTEMP_DCB,DISCOMM_SOURCE     WRITE TO DISTEMP\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   DXD_SOURCE,COMM_BLANKS         INITIALIZE PUNCH I/O\n         MVC   DXD_LABEL(71),DISCOMM_SOURCE_LABEL\n         LA    R3,DISCOMM_SOURCE_LABEL+15\nOUT0010  DS    0H\n         CLI   56(R3),C' '                    BLANK?\n         BE    OUT0020                        YES\n         MVI   DXD_CONTINUE,C'+'              INSERT 'CONTINUE' CHAR\nOUT0020  DS    0H\n         PUT   DISPUNCH_DCB,DXD_SOURCE        PUNCH SOURCE\n         MVC   DXD_SOURCE,COMM_BLANKS         RE-INITIALIZE\n         CLI   56(R3),C' '                    BLANK?\n         BE    OUT0030                        YES\n         LA    R3,56(,R3)                     NEXT 'PIECE'\n         MVC   DXD_OPERANDS(56),0(R3)\n         B     OUT0010                        OUTPUT NEXT 'PIECE'\nOUT0030  DS    0H\n         MVC   DISCOMM_SOURCE(DISCOMM_SOURCE_L),COMM_BLANKS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START      DC       Q(DXDOUT)\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDOUT         DSECT\n               COPY     DXDPREF\n\nDXD_SOURCE     DS       0CL80\nDXD_LABEL      DS       CL8               LABEL\n               DS       X\n               DS       CL5               OPCODE\n               DS       X\nDXD_OPERANDS   DS       CL55              OPERANDS\nDXD_CONTINUE   DS       X                 CONTINUATION INDICATOR\n               DS       CL8\nDXD_SOURCE_L   EQU      *-DXD_SOURCE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      DISOUT\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISREF": {"ttr": 9994, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x005\\x01\\x10\\x00\\x7f\\x01\\x10\\x02\\x7f\\t6\\x03\\x1a\\x02\\xe2\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "2010-01-07T00:00:00", "modifydate": "2010-01-27T09:36:35", "lines": 794, "newlines": 738, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*        Determine LABELs referenced                                  *\n*                                                                     *\n*                                                                     *\n*  DISSCAN has examined the CSECT TEXT.                               *\n*  The entire CSECT is now described by AREA blocks.                  *\n*                                                                     *\n*  For any ADCONs                                                     *\n*    Cause a LABEL to be generated at the point referenced            *\n*                                                                     *\n*                                                                     *\n*  Determine type of addressing used...                               *\n*                                                                     *\n*  For base+displacement                                              *\n*                                                                     *\n*    For any instruction operands                                     *\n*      Search the BASEs                                               *\n*      If a BASE is found                                             *\n*        If the area referenced is DATA, cause a LABEL to be          *\n*           generated at the point referenced.                        *\n*        If the area referenced is an instruction, cause a label      *\n*           to be generated at the instruction                        *\n*                                                                     *\n*      If NO BASE is found, search the USINGs                         *\n*        If a USING is found, build a REF block to tie                *\n*        the instruction to the LABEL within the DSECT.               *\n*                                                                     *\n*                                                                     *\n*  For \"relative\" addressing                                          *\n*    Add the \"relative\" amount (from the instruction itself) to the   *\n*       current displacement (should reference another instruction).  *\n*    If the area could not be located, this is actually data that     *\n*       \"looked like\" an instruction.. force type back to \"data\".     *\n*    If the area was located, generate a label at the referenced      *\n*       area and save the label block address for the operand         *\n*       reference.                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISREF   CSECT\nDISREF   AMODE 31\nDISREF   RMODE ANY\n         USING DISREF,R15\n         B     INIT0000                       SKIP EYECATCHER\nMODID    DC    CL8'DISREF'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISREF,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR\n         A     R15,DXD_START\n         ST    R15,8(,R13)\n         ST    R13,4(,R15)\n         LR    R13,R15\n         USING DXDREF,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         ZAP   DXD_LABEL_NBR,P0\nCURRENT  USING AREA_DSECT,R7\nLOCATE   USING AREA_DSECT,R6\nNEW      USING AREA_DSECT,R5\n         USING LABEL_DSECT,R4\n         USING OPCODE_DSECT,R3\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Generate LABELs with ENTRY name(s)                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nESD0000  DS    0H\n         ICM   R2,15,DISCOMM_ESD_NEXT         ANY ESD ITEMS?\n         BZ    REF0000                        NO\n         USING ESD_DSECT,R2\nESD0010  DS    0H\n         CLC   ESD_TYPE,=C'LD'                LD?\n         BNE   ESD0050                        NO\n         CLC   ESD_TYPE_QUAL,=C'LD'           LD?\n         BNE   ESD0050                        NO\n         CLC   ESD_NAME,DISCOMM_CSECT         NAME = CSECT NAME?\n         BE    ESD0050                        YES\n         MVC   DXD_DISP,ESD_ELEM_OFFSET       COPY OFFSET (DISP)\n         ITRACE ID=ESD_LKUP,                  LOOKING UP AREA          +\n               DATA1=ESD_NAME,                .. ITEM NAME             +\n               DATA2=(DXD_DISP,4)             .. DISPLACEMENT\n         BAL   R8,REF0300                     FIND REFERENCED AREA\n         LTR   R6,R6                          AREA LOCATED?\n         BZ    ESD0040                        NO\n         CLI   LABEL_NAME,C'-'                INITIAL NAME?\n         BNE   ESD0020                        NO\n         MVC   LABEL_NAME,COMM_BLANKS\n         MVC   LABEL_NAME(L'ESD_NAME),ESD_NAME\n         MVI   LABEL_TYPE,$LABEL_ESD          LABEL DUE TO ESD REF\n         B     ESD0050\nESD0020  DS    0H\n         ICM   R1,15,LABEL_NEXT               ANOTHER ON CHAIN?\n         BZ    ESD0030                        NO\n         LR    R4,R1                          COPY ADDRESS\n         B     ESD0020                        YES\nESD0030  DS    0H\n         GETMAIN RU,                                                   +\n               LV=LABEL_DSECT_L,                                       +\n               LOC=ANY\n         XC    0(LABEL_DSECT_L,R1),0(R1)      INITIALIZE THE BLOCK\n         ST    R1,LABEL_NEXT                  CHAIN FORWARD\n         ST    R4,0(R1)                       CHAIN BACKWARD\n         LR    R4,R1                          COPY NEW BLOCK ADDRESS\n         MVC   LABEL_EYE,LABEL_ID             IDENTIFY THE BLOCK\n         MVC   LABEL_NAME,COMM_BLANKS\n         MVC   LABEL_NAME(L'ESD_NAME),ESD_NAME\n         MVI   LABEL_TYPE,$LABEL_ESD          IDENTIFY LABEL TYPE\n         ITRACE ID=OTHERLBL,                                           +\n               RDATA1=R4,                                              +\n               DATA2=LABEL_NAME\nESD0040  DS    0H\n         ITRACE ID=NO_AREA\nESD0050  DS    0H\n         ICM   R2,15,ESD_NEXT                 ANOTHER ESD ITEM?\n         BNZ   ESD0010                        YES\n         DROP  R2\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREF0000  DS    0H\n         ITRACE ID=REF0000,                                            +\n               DATA1=DISCOMM_ALL_AREA_NEXT\n         ICM   R7,15,DISCOMM_ALL_AREA_NEXT    FIRST AREA BLOCK\n         BZ    EXIT0000                       NO AREAS\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        Top of AREA loop                                             *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREF0010  DS    0H\n         ITRACE ID=AREA,                                               +\n               DATA1=CURRENT.AREA_BEGIN,                               +\n               DATA2=CURRENT.AREA_TYPE\n         CLI   CURRENT.AREA_TYPE,$AREA_DATA   DATA AREA?\n         BE    REF0020                        YES\n         CLI   CURRENT.AREA_TYPE,$AREA_INSTRUCTION\n         BE    REF0100                        YES\n         ITRACE ID=BAD_TYPE\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        ADCONs will cause a LABEL to be generated                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREF0020  DS    0H\n         ITRACE ID=DATAAREA,                                           +\n               DATA1=CURRENT.AREA_DATA_TYPE\n         CLI   CURRENT.AREA_DATA_TYPE,$DATA_ACON\n         BNE   REF0290                        NO.. GO TO NEXT AREA\n         XC    DXD_DISP,DXD_DISP              INITIALIZE DISP\n         ICM   R1,15,CURRENT.AREA_BEGIN       DISPLACEMENT TO ADCON\n         A     R1,DISCOMM_CSECT_TEXT          PLUS BASE ADDRESS\n         CLI   CURRENT.AREA_LENGTH+3,4        4-BYTE ADCON?\n         BE    REF0030                        YES\n         CLI   CURRENT.AREA_LENGTH+3,3        3-BYTE ADCON?\n         BE    REF0040                        YES\n         CLI   CURRENT.AREA_LENGTH+3,2        2-BYTE ADCON?\n         BE    REF0050                        YES\n         MVC   DXD_DISP+3(1),0(R1)            COPY DISPLACEMENT\n         B     REF0060\nREF0030  DS    0H\n         MVC   DXD_DISP,0(R1)                 COPY DISPLACEMENT\n         B     REF0060\nREF0040  DS    0H\n         MVC   DXD_DISP+1(3),0(R1)            COPY DISPLACEMENT\n         B     REF0060\nREF0050  DS    0H\n         MVC   DXD_DISP+2(2),0(R1)            COPY DISPLACEMENT\nREF0060  DS    0H\n         ITRACE ID=ADCON,                                              +\n               DATA1=(CURRENT.AREA_BEGIN,4),                           +\n               DATA2=(DXD_DISP,4)\n         TM    DXD_DISP,X'80'                 31-BIT MODE BIT ON?\n         BNO   REF0070                        NO\n         OI    CURRENT.AREA_DATA_TYPE,$DATA_31  SET 31-BIT INDICATOR\n         NI    DXD_DISP,X'7F'                 TURN BIT OFF\nREF0070  DS    0H\n         BAL   R8,REF0300                     FIND LABEL WITHIN CSECT\n         MVC   CURRENT.AREA_REF_LABEL1,DXD_LABEL\n         MVC   CURRENT.AREA_REF_DISP1,DXD_REF_DISP\n         B     REF0290                        GO TO NEXT AREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        The current area is in instruction                           *\n*                                                                     *\n*        If operand 1 or operand 2 has a \"BASE+DISP\" type             *\n*        operand, determine if the \"BASE\" is a base register          *\n*        for the CSECT or for an area defined via a USING.            *\n*                                                                     *\n*        If the instruction uses \"relative\" addressing, compute       *\n*        the referenced displacement.                                 *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREF0100  DS    0H\n         ICM   R3,15,CURRENT.AREA_OPCODE      OPCODE DEFINITION\n         ICM   R15,15,OPCODE_EXIT             MODIFICATION EXIT?\n         BZ    REF0110                        NO\n* ------------------------------------------------------------------- *\n*        Call opcode modification exit                                *\n* ------------------------------------------------------------------- *\n         ST    R3,DXD_EXIT_OPCODE             SET OPCODE ENTRY ADDR\n         ICM   R1,15,CURRENT.AREA_BEGIN       DISP TO INSTRUCTION\n         A     R1,DISCOMM_CSECT_TEXT          PLUS TEXT BASE\n         ST    R1,DXD_EXIT_TEXT               ADDR OF INSTRUCTION TEXT\n         ITRACE ID=MOD,                                                +\n               RDATA1=R15,                                             +\n               DATA2=(0(R1),4)\n         LA    R1,DXD_EXIT_PARMS              MOD EXIT PARM LIST\n         BALR  R14,R15                        CALL MODIFICATION EXIT\n         ITRACE ID=MOD_X,                                              +\n               DATA1=(OPCODE_MNEMONIC,5),                              +\n               DATA2=(OPCODE_FLAGS,1)\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREF0110  DS    0H\n         ICM   R1,15,CURRENT.AREA_BEGIN\n         A     R1,DISCOMM_CSECT_TEXT\n         SR    R2,R2\n         ICM   R2,3,OPCODE_LENGTH\n         BCTR  R2,0\n         XC    COMM_INFO_01(8),COMM_INFO_01\n         EX    R2,OP_MVC\n         ITRACE ID=INSTRUCT,                                           +\n               DATA1=OPCODE_MNEMONIC,         .. MNEMONIC              +\n               DATA2=COMM_INFO_01\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         TM    OPCODE_FLAGS,$OPCODE_RELATIVE  RELATIVE ADDRESSING?\n         BO    REF0200                        YES\n* ------------------------------------------------------------------- *\n*        Split out the base and displacement for operand 1            *\n* ------------------------------------------------------------------- *\n         TM    OPCODE_REF,$OPCODE_REF1        2ND AND 3RD BYTES A BDDD?\n         BNO   REF0140                        NO\n         L     R1,CURRENT.AREA_BEGIN          INSTRUCTION DISP\n         A     R1,DISCOMM_CSECT_TEXT          PLUS BASE\n         SR    R14,R14\n         ICM   R14,1,2(R1)                    BASE AND NIBBLE 1 OF DISP\n         SRL   R14,4                          SHIFT OUT DISP\n         STC   R14,DXD_BASE                   SAVE BASE\n         XC    DXD_DISP,DXD_DISP              INITIALIZE DISP\n         MVC   DXD_DISP+2(2),2(R1)            COPY DISP FROM OPERAND\n         NI    DXD_DISP+2,X'0F'               REMOVE BASE\n* ------------------------------------------------------------------- *\n*        Search BASES for operand 1                                   *\n* ------------------------------------------------------------------- *\n         USING BASE_DSECT,R2\n         ITRACE ID=OP1_REF,                                            +\n               DATA1=DXD_BASE\n         BAL   R15,REF0500                    CHECK BASES\n         LTR   R2,R2                          BASE LOCATED?\n         BZ    REF0130                        NO\n* ------------------------------------------------------------------- *\n*        Operand 1 references a defined base                          *\n*        Locate the AREA block                                        *\n* ------------------------------------------------------------------- *\n         ICM   R1,15,BASE_DISP                DISP BASE REFERS TO\n         A     R1,DXD_DISP                    PLUS DISP FROM OPERAND\n         ST    R1,DXD_DISP                    DISP TO SEARCH FOR\n         ITRACE ID=BASE1,                                              +\n               DATA1=DXD_BASE,                .. BASE REG              +\n               DATA2=DXD_DISP                 .. DISP REFERENCED\n         BAL   R8,REF0300                     LOCATE REFERENCED AREA\n         MVC   CURRENT.AREA_REF_LABEL1,DXD_LABEL\n         MVC   CURRENT.AREA_REF_DISP1,DXD_REF_DISP\n         XC    CURRENT.AREA_REF_USING1,CURRENT.AREA_REF_USING1\n         B     REF0140\n* ------------------------------------------------------------------- *\n*        Determine if operand 1 references a defined USING            *\n* ------------------------------------------------------------------- *\nREF0130  DS    0H\n         ITRACE ID=REF0130\n         BAL   R15,REF0600                    CHECK USINGS\n         LTR   R2,R2                          USING FOUND?\n         BZ    REF0140                        NO\n         ITRACE ID=REF0130+\n         MVC   CURRENT.AREA_REF_LABEL1,DXD_LABEL\n         MVC   CURRENT.AREA_REF_DISP1,DXD_REF_DISP\n         ST    R2,CURRENT.AREA_REF_USING1\n* ------------------------------------------------------------------- *\n*        Determine if instruction has a BDDD type operand 2           *\n* ------------------------------------------------------------------- *\nREF0140  DS    0H\n         ITRACE ID=REF0140\n         TM    OPCODE_REF,$OPCODE_REF2        5TH AND 6TH BYTES A BDDD?\n         BNO   REF0290                        NO\n         L     R1,CURRENT.AREA_BEGIN          INSTRUCTION DISP\n         A     R1,DISCOMM_CSECT_TEXT          PLUS BASE\n         SR    R14,R14\n         ICM   R14,1,4(R1)                    BASE + NIBBLE 1 OF DISP\n         SRL   R14,4                          SHIFT OUT DISP\n         STC   R14,DXD_BASE                   SAVE BASE FOR OPERAND 2\n         XC    DXD_DISP,DXD_DISP              INITIALIZE DISP\n         MVC   DXD_DISP+2(2),4(R1)            COPY DISP FROM OPERAND 2\n         NI    DXD_DISP+2,X'0F'               REMOVE BASE\n* ------------------------------------------------------------------- *\n*        Search BASES for operand 2                                   *\n* ------------------------------------------------------------------- *\n         ITRACE ID=OP2_REF,                                            +\n               DATA1=DXD_BASE\n         BAL   R15,REF0500                    CHECK BASES\n         LTR   R2,R2                          BASE LOCATED?\n         BZ    REF0160                        NO\n* ------------------------------------------------------------------- *\n*        Operand 2 references a defined base                          *\n* ------------------------------------------------------------------- *\n         ITRACE ID=BASE2\n         ICM   R1,15,BASE_DISP                DISP BASE REFERS TO\n         A     R1,DXD_DISP                    PLUS DISP FROM OPERAND\n         ST    R1,DXD_DISP                    DISP TO SEARCH FOR\n         BAL   R8,REF0300                     LOCATE REFERENCED AREA\n         MVC   CURRENT.AREA_REF_LABEL2,DXD_LABEL\n         MVC   CURRENT.AREA_REF_DISP2,DXD_REF_DISP\n         XC    CURRENT.AREA_REF_USING2,CURRENT.AREA_REF_USING2\n         B     REF0290\n* ------------------------------------------------------------------- *\n*        Determine if operand 2 references a defined USING            *\n* ------------------------------------------------------------------- *\nREF0160  DS    0H\n         ITRACE ID=REF0160\n         BAL   R15,REF0600                    CHECK USINGS\n         LTR   R2,R2                          USING FOUND?\n         BZ    REF0290                        NO\n         ITRACE ID=REF0160+\n         MVC   CURRENT.AREA_REF_LABEL2,DXD_LABEL\n         MVC   CURRENT.AREA_REF_DISP2,DXD_REF_DISP\n         ST    R2,CURRENT.AREA_REF_USING2\n         B     REF0290\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  Determine referenced displacements for \"relative\" addressing       *\n*                                                                     *\n*  The \"relative\" amounts in instructions is                          *\n*    1) a number of halfwords, not bytes                              *\n*    2) a signed number (the relative value can be negative)          *\n*                                                                     *\n*  The \"LH\" for short instructions preserves the sign bit             *\n*  The \"ICM\" for six byte instructins allows for non-fullword         *\n*  alignments and preserves the sign bit at the same time.            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREF0200  DS    0H\n         ICM   R1,15,CURRENT.AREA_BEGIN       INSTRUCTION DISP\n         LR    R2,R1                          SAVE DISP\n         A     R1,DISCOMM_CSECT_TEXT          PLUS TEXT BASE\n         CLC   OPCODE_LENGTH,H6               SIX BYTE OPCODE?\n         BE    REF0210                        YES\n         LH    R0,2(,R1)                      RELATIVE NBR OF HALFWORDS\n         B     REF0220\nREF0210  DS    0H\n         ICM   R0,15,2(R1)                    RELATIVE NBR OF HALFWORDS\nREF0220  DS    0H\n         AR    R2,R0                          PLUS (OR MINUS) DISP\n         AR    R2,R0                          PLUS (OR MINUS) TWICE\n         ITRACE ID=RELATIVE,                                           +\n               RDATA1=R2\n         ST    R2,DXD_DISP                    SET DISPLACEMENT\n         BAL   R8,REF0300                     FIND REFERENCED INSTR\n         LTR   R6,R6                          AREA LOCATED?\n         BZ    REF0230                        NO.. CANNOT BE IN INSTR\n         L     R4,DXD_LABEL                   LABEL BLOCK ADDRESS\n         MVI   LABEL_TYPE,$LABEL_INSTR        LABEL IS AT AN INSTR\n         ST    R4,CURRENT.AREA_REF_LABEL2\n         MVC   CURRENT.AREA_REF_DISP2,DXD_REF_DISP\n         ITRACE ID=LABEL,                                              +\n               DATA1=(DXD_LABEL,4),                                    +\n               DATA2=(DXD_REF_DISP,4)\n         B     REF0290\nREF0230  DS    0H\n         MVI   CURRENT.AREA_TYPE,$AREA_DATA   FORCE TYPE TO 'DATA'\n* ------------------------------------------------------------------- *\n*        Go to next AREA                                              *\n* ------------------------------------------------------------------- *\nREF0290  DS    0H\n         ITRACE ID=NEXTAREA,                                           +\n               RDATA1=R7,                                              +\n               DATA2=CURRENT.AREA_NEXT\n         ICM   R7,15,CURRENT.AREA_NEXT        NEXT AREA\n         BNZ   REF0010                        LOOP\n         B     EXIT0000                       ALL DONE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Locate referenced disp (DXD_DISP) within CSECT               *\n*                                                                     *\n*        If the area referenced is an instruction                     *\n*           GETMAIN a LABEL block and                                 *\n*           set DXD_LABEL to the address of the LABEL block           *\n*           set DXD_LABEL_DISP to disp from the label                 *\n*                                                                     *\n*                                                                     *\n*        If the area referenced is a DATA area                        *\n*           if the area is a ACON, QCON, VCON, or CXD                 *\n*              GETMAIN a LABEL block and set AREA_LABEL               *\n*              set DXD_LABEL to the address of the LABEL block        *\n*              set DXD_LABEL_DISP to disp from the label              *\n*           otherwise                                                 *\n*              'split' the data into two parts                        *\n*               . one 'up to' the disp referenced,                    *\n*               . second starting at the disp referenced              *\n*                 - GETMAIN a LABEL block for 'second' area           *\n*                 - set DXD_LABEL to the new LABEL block              *\n*                 - set DXD_LABEL_DISP to zero                        *\n*                                                                     *\n*                                                                     *\n*        On Entry                                                     *\n*          DXD_DISP     disp of AREA to locate                        *\n*          R8           Return address                                *\n*                                                                     *\n*        At exit                                                      *\n*          R6           address of AREA or zero if no AREA located    *\n*          DXD_LABEL    address of LABEL assigned to AREA             *\n*          DXD_REF_DISP disp from LABEL (address in DXD_LABEL)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREF0300  DS    0H\n         ITRACE ID=REF0300,                                            +\n               DATA1=(DXD_DISP,4)             DISP TO AREA REFERENCED\n         XC    DXD_LABEL,DXD_LABEL\n         XC    DXD_REF_DISP,DXD_REF_DISP\n         ICM   R6,15,DISCOMM_ALL_AREA_NEXT    FIRST AREA\n         BZR   R8                             NO AREAS\nREF0310  DS    0H\n         CLC   DXD_DISP,LOCATE.AREA_END       DISP IN THIS AREA?\n         BNH   REF0320                        YES\n         ICM   R6,15,LOCATE.AREA_NEXT         NEXT AREA\n         BNZ   REF0310                        CHECK NEXT AREA\n         MVC   DXD_REF_DISP,DXD_DISP\n         ITRACE ID=NO_AREA,                                            +\n               DATA1=(DXD_REF_DISP,4)\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        AREA located.                                                *\n*                                                                     *\n*        If the reference is not on the 1st byte, determine           *\n*        if the AREA can be \"split\"                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREF0320  DS    0H\n         ITRACE ID=AREA_FND,                                           +\n               DATA1=LOCATE.AREA_BEGIN,                                +\n               DATA2=(LOCATE.AREA_TYPE,1)\n         CLC   LOCATE.AREA_BEGIN,DXD_DISP     'DIRECT HIT'?\n         BE    REF0340                        YES\n         CLI   LOCATE.AREA_TYPE,$AREA_INSTRUCTION\n         BE    REF0340                        YES.. CANNOT 'SPLIT'\n         TM    LOCATE.AREA_DATA_TYPE,$DATA_ACON\n         BO    REF0340                        YES.. CANNOT 'SPLIT'\n         TM    LOCATE.AREA_DATA_TYPE,$DATA_VCON\n         BO    REF0340                        YES.. CANNOT 'SPLIT'\n         TM    LOCATE.AREA_DATA_TYPE,$DATA_CXD\n         BO    REF0340                        YES.. CANNOT 'SPLIT'\n         TM    LOCATE.AREA_DATA_TYPE,$DATA_Q\n         BO    REF0340                        YES.. CANNOT 'SPLIT'\n         ITRACE ID=SPLIT,                                              +\n               RDATA1=R6,                                              +\n               DATA2=LOCATE.AREA_BEGIN\n         GETMAIN RU,                                                   +\n               LV=AREA_DSECT_L,                                        +\n               LOC=ANY\n         LR    R5,R1\n         ITRACE ID=NEW_AREA,                                           +\n               RDATA1=R5\n         MVC   NEW.AREA_DSECT(AREA_DSECT_L),LOCATE.AREA_DSECT\n         ST    R5,LOCATE.AREA_NEXT\n         ST    R6,NEW.AREA_PREV\n         MVC   NEW.AREA_TYPE,LOCATE.AREA_TYPE COPY TYPE\n         L     R14,DXD_DISP                   DISP SEARCHED FOR\n         BCTR  R14,0                          MINUS 1\n         STCM  R14,15,LOCATE.AREA_END         SET END DISP\n         ICM   R15,15,LOCATE.AREA_BEGIN       BEGIN DISP\n         SR    R14,R15                        COMPUTE LENGTH\n         LA    R14,1(,R14)                    TRUE LENGTH\n         STCM  R14,15,LOCATE.AREA_LENGTH      SET LENGTH\n         ICM   R14,15,NEW.AREA_END            END DISP\n         L     R15,DXD_DISP                   DISP SEARCHED FOR\n         STCM  R15,15,NEW.AREA_BEGIN          SET BEGIN DISP\n         SR    R14,R15                        COMPUTE LENGTH\n         LA    R14,1(,R14)                    TRUE LENGTH\n         STCM  R14,15,NEW.AREA_LENGTH         SET LENGTH\n         XC    DXD_LABEL_DISP,DXD_LABEL_DISP  DISP FROM LABEL IS ZERO\n         MVC   DXD_GEN_DISP,NEW.AREA_BEGIN    DISP FOR LABEL\n         BAL   R14,REF0400                    GETMAIN A NEW LABEL BLOCK\n         ST    R4,NEW.AREA_LABEL              CHAIN LABEL TO AREA\n         MVI   LABEL_TYPE,$LABEL_DATA         LABEL IS AT DATA AREA\n         ICM   R1,15,NEW.AREA_NEXT            NEXT BLOCK ON CHAIN\n         BZ    REF0330                        NO 'NEXT' BLOCK\nNEXT     USING AREA_DSECT,R1\n         ST    R5,NEXT.AREA_PREV              SET PREV IN NEXT\nREF0330  DS    0H\n         ITRACE ID=AREAS,                                              +\n               DATA1=LOCATE.AREA_BEGIN,                                +\n               DATA2=NEW.AREA_BEGIN\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        An instruction or ADCON is referencing this area.            *\n*        Either the reference is to the first byte of this AREA       *\n*        or this is an AREA that cannot be 'split'.                   *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREF0340  DS    0H\n         ITRACE ID=REF0340,                                            +\n               DATA1=(LOCATE.AREA_BEGIN,4),                            +\n               DATA2=(DXD_DISP,4)\n         L     R1,DXD_DISP                    DISP REFERENCED\n         ICM   R0,15,LOCATE.AREA_BEGIN        AREA BEGIN DISP\n         ST    R0,DXD_LABEL_DISP              DISP TO LABEL\n         ICM   R4,15,LOCATE.AREA_LABEL        LABEL GETMAINED?\n         BNZ   REF0350                        YES\n         MVC   DXD_GEN_DISP,LOCATE.AREA_BEGIN DISP FOR NEW LABEL\n         BAL   R14,REF0400                    GETMAIN LABEL BLOCK\n         ITRACE ID=AREA_LBL,                                           +\n               RDATA1=R6,                                              +\n               DATA2=DXD_LABEL\n         L     R4,DXD_LABEL                   NEW LABEL BLOCK ADDR\n         ST    R4,LOCATE.AREA_LABEL           CHAIN AREA TO LABEL\n         MVC   LABEL_TYPE,LOCATE.AREA_TYPE    COPY TYPE\nREF0350  DS    0H\n         ITRACE ID=REF0350,                                            +\n               DATA1=LABEL_NAME,                                       +\n               DATA2=(LABEL_DISP,4)\n         ST    R4,DXD_LABEL                   RETURN ADDR OF LABEL\n         L     R1,DXD_DISP                    DISP IN INSTRUCTION\n         ICM   R0,15,LABEL_DISP               DISP TO LABEL\n         SR    R1,R0                          DISP FROM LABEL\n         ST    R1,DXD_REF_DISP                SAVE DISP\n         BR    R8\n* ------------------------------------------------------------------- *\n*        GETMAIN new LABEL block                                      *\n* ------------------------------------------------------------------- *\nREF0400  DS    0H\n         ST    R14,DXD_RETURN\n         ITRACE ID=GET_LABL,                                           +\n               RDATA1=R14\n         GETMAIN RU,                                                   +\n               LV=LABEL_DSECT_L,                                       +\n               LOC=ANY\n         LR    R4,R1\n         XC    LABEL_DSECT(LABEL_DSECT_L),LABEL_DSECT\n         UNPK  COMM_INFO_01(9),DXD_GEN_DISP(5)\n         TR    COMM_INFO_01(8),COMM_HEXCHAR\n         MVC   LABEL_EYE,LABEL_ID             IDENTIFY BLOCK\n         MVC   LABEL_NAME,COMM_BLANKS         INITIALIZE NAME\n         MVC   LABEL_NAME(8),COMM_INFO_01     TEMPORARY NAME\n         MVI   LABEL_NAME,C'-'                FLAG TEMPORARY NAME\n         MVC   LABEL_DISP,DXD_GEN_DISP        DISP TO THIS LABEL\n         ST    R4,DXD_LABEL                   SAVE ADDR\n         ITRACE ID=NEWLABEL,                                           +\n               RDATA1=R4,                                              +\n               DATA2=LABEL_NAME\n         L     R14,DXD_RETURN\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*     Search defined BASEs                                            *\n*     Base is in DXD_BASE                                             *\n*     Displacement from the BASE is in DXD_DISP                       *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREF0500  DS    0H\n         ITRACE ID=REF0500,                                            +\n               DATA1=DISCOMM_BASE_NEXT,                                +\n               DATA2=DXD_BASE\n         ICM   R2,15,DISCOMM_BASE_NEXT        1ST BASE\n         BZ    REF0540                        NO BASES DEFINED\nREF0510  DS    0H\n         ITRACE ID=REF0510,                                            +\n               DATA1=BASE_BEGIN\n         OC    BASE_BEGIN(8),BASE_BEGIN       BEGIN/END DISP(S)?\n         BZ    REF0520                        NO\n         CLC   BASE_END,CURRENT.AREA_BEGIN    IN EFFECT HERE?\n         BL    REF0530                        NO\n         CLC   BASE_BEGIN,CURRENT.AREA_END    IN EFFECT HERE?\n         BH    REF0530                        NO\nREF0520  DS    0H\n         ITRACE ID=REF0520\n         CLC   BASE_REGISTER,DXD_BASE         CORRECT REGISTER?\n         BNE   REF0530                        NO\n         ITRACE ID=BASE_FND                   BASE HAS BEEN FOUND\n         BR    R15                            RETURN (R2=ADDR OF BASE)\nREF0530  DS    0H\n         ICM   R2,15,BASE_NEXT                NEXT BASE\n         BNZ   REF0510\nREF0540  DS    0H\n         ITRACE ID=NO_BASE\n         BR    R15                            RETURN (R2 = ZERO)\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*     Search defined USINGs                                           *\n*     Base is in DXD_BASE                                             *\n*     Displacement from the BASE is in DXD_DISP                       *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREF0600  DS    0H\n         ITRACE ID=REF0600,                                            +\n               DATA1=DISCOMM_USING_NEXT\n         ICM   R2,15,DISCOMM_USING_NEXT       1ST USING\n         BZ    REF0680                        NO USINGS DEFINED\n         USING USING_DSECT,R2\nREF0610  DS    0H\n         OC    USING_BEGIN(8),USING_BEGIN     BEGIN OR END DISP GIVEN?\n         BZ    REF0620                        NO\n         CLC   USING_END,CURRENT.AREA_BEGIN   IN EFFECT HERE?\n         BL    REF0670                        NO\n         CLC   USING_BEGIN,CURRENT.AREA_END   IN EFFECT HERE?\n         BH    REF0670                        NO\nREF0620  DS    0H\n         CLC   USING_REGISTER,DXD_BASE        CORRECT REGISTER?\n         BNE   REF0670                        NO\n         ITRACE ID=FNDUSING,                                           +\n               DATA1=USING_LABEL_ADDR\n         MVC   DXD_EFFECTIVE_DISP,DXD_DISP    COPY DISP\n         ICM   R4,15,USING_LABEL_ADDR         STARTING LABEL?\n         BZ    REF0640                        NO\n         ITRACE ID=USNGLABL,                                           +\n               DATA1=USING_DSECT_LABEL,       .. LABEL WITHIN DSECT    +\n               DATA2=USING_DISP               .. LABEL'S DISP\n         ICM   R0,15,LABEL_DISP               DISP TO START LABEL\n         A     R0,DXD_DISP                    PLUS DISP IN INSTRUCTION\n         ST    R0,DXD_EFFECTIVE_DISP          EFFECTIVE DISP\nREF0640  DS    0H\n         ITRACE ID=EFF_DISP,                                           +\n               DATA1=DXD_EFFECTIVE_DISP\n         L     R1,USING_DSECT_ADDR            DSECT ADDRESS\n         USING DSECT_DSECT,R1\n         L     R4,DSECT_LABEL_NEXT            FIRST LABEL\nREF0650  DS    0H\n         CLC   LABEL_DISP,DXD_EFFECTIVE_DISP  LABEL DISP > EFFECTIVE?\n         BNH   REF0660                        NO\n         ICM   R4,15,LABEL_NEXT               NEXT LABEL\n         BNZ   REF0650                        KEEP SEARCHING\nREF0660  DS    0H\n         ST    R4,DXD_LABEL                   RETURN LABEL ADDRESS\n         L     R1,DXD_EFFECTIVE_DISP          EFFECTIVE DISP\n         ICM   R0,15,LABEL_DISP\n         SR    R1,R0                          MINUS DISP TO LABEL\n         ST    R1,DXD_REF_DISP                DISP FROM LABEL\n         BR    R15\nREF0670  DS    0H\n         ICM   R2,15,USING_NEXT               NEXT BASE\n         BNZ   REF0610\nREF0680  DS    0H\n         ITRACE ID=NOUSING\n         BR    R15                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=BAD_REF\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ICM   R7,15,DISCOMM_ALL_AREA_NEXT    FIRST AREA BLOCK\n         ITRACE ID=GENLABLS,                                           +\n               RDATA1=R7\n         LTR   R7,R7                          ANY AREA BLOCKS?\n         BZ    EXIT0060                       NO\n         ZAP   DXD_LABEL_NBR,P0               INIT LABEL NBR\nEXIT0010 DS    0H\n         ITRACE ID=AREA,                                               +\n               RDATA1=R7,                                              +\n               DATA2=CURRENT.AREA_BEGIN\n         ICM   R4,15,CURRENT.AREA_LABEL       LABEL PRESENT?\n         BZ    EXIT0050                       NO\n         CLI   LABEL_TYPE,$LABEL_ESD          LABEL FROM AN ESD ITEM?\n         BE    EXIT0040                       YES.. DO NOT CHANGE\n         AP    DXD_LABEL_NBR,P10              PLUS 10\n         MVC   LABEL_NAME,COMM_BLANKS         INIT LABEL\n         MVC   LABEL_NAME(8),=X'F020202020202120'\n         ED    LABEL_NAME(8),DXD_LABEL_NBR    EDIT LABEL NUMBER\n         CLI   CURRENT.AREA_TYPE,$AREA_DATA   DATA AREA?\n         BE    EXIT0030\n         SR    R1,R1\n         ICM   R1,3,DISCOMM_PREFIX_LENGTH     PREFIX LENGTH\n         BZ    EXIT0020                       SHOULD NOT HAPPEN\n         BCTR  R1,0\n         EX    R1,PREFIX_MVC                  COPY PREFIX\n         B     EXIT0040\nEXIT0020 DS    0H\n         MVI   LABEL_NAME,C'L'                DEFAULT TO 'L'\n         B     EXIT0040\nEXIT0030 DS    0H\n         MVC   LABEL_NAME(4),DATA             SET PREFIX TO 'DATA'\nEXIT0040 DS    0H\n         ITRACE ID=LABEL,                                              +\n               DATA1=LABEL_NAME,                                       +\n               DATA2=(LABEL_DISP,4)\nEXIT0050 DS    0H\n         ICM   R7,15,CURRENT.AREA_NEXT        NEXT AREA\n         BNZ   EXIT0010\nEXIT0060 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nPREFIX_MVC MVC LABEL_NAME(0),DISCOMM_PREFIX\nOP_MVC     MVC COMM_INFO_01(0),0(R1)\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START DC   Q(DXDREF)\n\nH6        DC   H'6'\n\nP0        DC   P'0'\nP10       DC   P'10'\nDATA      DC   CL4'DATA'\nLABEL_ID  DC   CL8'LABEL'\n\n          LTORG\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDREF          DSECT\n                COPY DXDPREF\n\nDXD_REF_DISP    DS   A                  DISP REFERENCED\nDXD_LABEL       DS   A                  LABEL BLOCK ADDRESS\nDXD_LABEL_DISP  DS   A                  DISP FROM LABEL\n\nDXD_GEN_DISP    DS   A\n\nDXD_RETURN      DS   A\n\nDXD_EFFECTIVE_DISP   DS  A\n\nDXD_BASE        DS   X                  BASE FOR CURRENT OPERAND\nDXD_DISP        DS   A                  DISP FROM WORK BASE\n\nDXD_LABEL_NBR   DS   PL4                LABEL NBR\n\nDXD_EXIT_PARMS  DS   0A\nDXD_EXIT_OPCODE DS   A                  OPCODE TABLE ENTRY TO MODIFY\nDXD_EXIT_TEXT   DS   A                  ADDRESS OF INSTRUCTION IN TEXT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n         END  DISREF\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISREFO": {"ttr": 9477, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x003\\x01\\x10\\x01_\\x01\\x10\\x02\\x7f\\x07W\\x02\\xfc\\x02\\xef\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2010-01-15T00:00:00", "modifydate": "2010-01-27T07:57:33", "lines": 764, "newlines": 751, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*        Determine LABELs referenced                                  *\n*                                                                     *\n*                                                                     *\n*  DISSCAN has examined the CSECT TEXT.                               *\n*  The entire CSECT is now described by AREA blocks.                  *\n*                                                                     *\n*  For any ADCONs                                                     *\n*    Cause a LABEL to be generated at the point referenced            *\n*                                                                     *\n*                                                                     *\n*  Determine type of addressing used...                               *\n*                                                                     *\n*  For base+displacement                                              *\n*                                                                     *\n*    For any instruction operands                                     *\n*      Search the BASEs                                               *\n*      If a BASE is found                                             *\n*        If the area referenced is DATA, cause a LABEL to be          *\n*           generated at the point referenced.                        *\n*        If the area referenced is an instruction, cause a label      *\n*           to be generated at the instruction                        *\n*                                                                     *\n*      If NO BASE is found, search the USINGs                         *\n*        If a USING is found, build a REF block to tie                *\n*        the instruction to the LABEL within the DSECT.               *\n*                                                                     *\n*                                                                     *\n*  For \"relative\" addressing                                          *\n*    Add the \"relative\" amount (from the instruction itself) to the   *\n*       current displacement (should reference another instruction).  *\n*    If the area could not be located, this is actually data that     *\n*       \"looked like\" an instruction.. force type back to \"data\".     *\n*    If the area was located, generate a label at the referenced      *\n*       area and save the label block address for the operand         *\n*       reference.                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISREF   CSECT\nDISREF   AMODE 31\nDISREF   RMODE ANY\n         USING DISREF,R15\n         B     INIT0000                       SKIP EYECATCHER\nMODID    DC    CL8'DISREF'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISREF,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR\n         A     R15,DXD_START\n         ST    R15,8(,R13)\n         ST    R13,4(,R15)\n         LR    R13,R15\n         USING DXDREF,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         ZAP   DXD_LABEL_NBR,P0\nCURRENT  USING AREA_DSECT,R7\nLOCATE   USING AREA_DSECT,R6\nNEW      USING AREA_DSECT,R5\n         USING LABEL_DSECT,R4\n         USING OPCODE_DSECT,R3\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Generate LABELs with ENTRY name(s)                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nESD0000  DS    0H\n         ICM   R2,15,DISCOMM_ESD_NEXT         ANY ESD ITEMS?\n         BZ    REF0000                        NO\n         USING ESD_DSECT,R2\nESD0010  DS    0H\n         CLC   ESD_TYPE,=C'LD'                LD?\n         BNE   ESD0020                        NO\n         CLC   ESD_TYPE_QUAL,=C'LD'           LD?\n         BNE   ESD0020                        NO\n         CLC   ESD_NAME,DISCOMM_CSECT         NAME = CSECT NAME?\n         BE    ESD0020                        YES\n         MVC   DXD_DISP,ESD_ELEM_OFFSET       COPY OFFSET (DISP)\n         BAL   R8,REF0300                     FIND REFERENCED AREA\n         MVC   LABEL_NAME,COMM_BLANKS\n         MVC   LABEL_NAME(L'ESD_NAME),ESD_NAME\n         MVI   LABEL_TYPE,$LABEL_ESD          LABEL DUE TO ESD REF\nESD0020  DS    0H\n         ICM   R2,15,ESD_NEXT                 ANOTHER ESD ITEM?\n         BNZ   ESD0010                        YES\n         DROP  R2\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREF0000  DS    0H\n         ITRACE ID=REF0000,                                            +\n               DATA1=DISCOMM_ALL_AREA_NEXT\n         ICM   R7,15,DISCOMM_ALL_AREA_NEXT    FIRST AREA BLOCK\n         BZ    EXIT0000                       NO AREAS\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        Top of AREA loop                                             *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREF0010  DS    0H\n         ITRACE ID=AREA,                                               +\n               DATA1=CURRENT.AREA_BEGIN,                               +\n               DATA2=CURRENT.AREA_TYPE\n         CLI   CURRENT.AREA_TYPE,$AREA_DATA   DATA AREA?\n         BE    REF0020                        YES\n         CLI   CURRENT.AREA_TYPE,$AREA_INSTRUCTION\n         BE    REF0100                        YES\n         ITRACE ID=BAD_TYPE\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        ADCONs will cause a LABEL to be generated                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREF0020  DS    0H\n         ITRACE ID=DATAAREA,                                           +\n               DATA1=CURRENT.AREA_DATA_TYPE\n         CLI   CURRENT.AREA_DATA_TYPE,$DATA_ACON\n         BNE   REF0290                        NO.. GO TO NEXT AREA\n         XC    DXD_DISP,DXD_DISP              INITIALIZE DISP\n         ICM   R1,15,CURRENT.AREA_BEGIN       DISPLACEMENT TO ADCON\n         A     R1,DISCOMM_CSECT_TEXT          PLUS BASE ADDRESS\n         CLI   CURRENT.AREA_LENGTH+3,4        4-BYTE ADCON?\n         BE    REF0030                        YES\n         CLI   CURRENT.AREA_LENGTH+3,3        3-BYTE ADCON?\n         BE    REF0040                        YES\n         CLI   CURRENT.AREA_LENGTH+3,2        2-BYTE ADCON?\n         BE    REF0050                        YES\n         MVC   DXD_DISP+3(1),0(R1)            COPY DISPLACEMENT\n         B     REF0060\nREF0030  DS    0H\n         MVC   DXD_DISP,0(R1)                 COPY DISPLACEMENT\n         B     REF0060\nREF0040  DS    0H\n         MVC   DXD_DISP+1(3),0(R1)            COPY DISPLACEMENT\n         B     REF0060\nREF0050  DS    0H\n         MVC   DXD_DISP+2(2),0(R1)            COPY DISPLACEMENT\nREF0060  DS    0H\n         ITRACE ID=ADCON,                                              +\n               DATA1=(CURRENT.AREA_BEGIN,4),                           +\n               DATA2=(DXD_DISP,4)\n         TM    DXD_DISP,X'80'                 31-BIT MODE BIT ON?\n         BNO   REF0070                        NO\n         OI    CURRENT.AREA_DATA_TYPE,$DATA_31  SET 31-BIT INDICATOR\n         NI    DXD_DISP,X'7F'                 TURN BIT OFF\nREF0070  DS    0H\n         BAL   R8,REF0300                     FIND LABEL WITHIN CSECT\n         MVC   CURRENT.AREA_REF_LABEL1,DXD_LABEL\n         MVC   CURRENT.AREA_REF_DISP1,DXD_REF_DISP\n         B     REF0290                        GO TO NEXT AREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        The current area is in instruction                           *\n*                                                                     *\n*        If operand 1 or operand 2 has a \"BASE+DISP\" type             *\n*        operand, determine if the \"BASE\" is a base register          *\n*        for the CSECT or for an area defined via a USING.            *\n*                                                                     *\n*        If the instruction uses \"relative\" addressing, compute       *\n*        the referenced displacement.                                 *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREF0100  DS    0H\n         ICM   R3,15,CURRENT.AREA_OPCODE      OPCODE DEFINITION\n         ICM   R15,15,OPCODE_EXIT             MODIFICATION EXIT?\n         BZ    REF0110                        NO\n* ------------------------------------------------------------------- *\n*        Call opcode modification exit                                *\n* ------------------------------------------------------------------- *\n         ST    R3,DXD_EXIT_OPCODE             SET OPCODE ENTRY ADDR\n         ICM   R1,15,CURRENT.AREA_BEGIN       DISP TO INSTRUCTION\n         A     R1,DISCOMM_CSECT_TEXT          PLUS TEXT BASE\n         ST    R1,DXD_EXIT_TEXT               ADDR OF INSTRUCTION TEXT\n         ITRACE ID=MOD,                                                +\n               RDATA1=R15,                                             +\n               DATA2=(0(R1),4)\n         LA    R1,DXD_EXIT_PARMS              MOD EXIT PARM LIST\n         BALR  R14,R15                        CALL MODIFICATION EXIT\n         ITRACE ID=MOD_X,                                              +\n               DATA1=(OPCODE_MNEMONIC,5),                              +\n               DATA2=(OPCODE_FLAGS,1)\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREF0110  DS    0H\n         ICM   R1,15,CURRENT.AREA_BEGIN\n         A     R1,DISCOMM_CSECT_TEXT\n         SR    R2,R2\n         ICM   R2,3,OPCODE_LENGTH\n         BCTR  R2,0\n         XC    COMM_INFO_01(8),COMM_INFO_01\n         EX    R2,OP_MVC\n         ITRACE ID=INSTRUCT,                                           +\n               DATA1=OPCODE_MNEMONIC,         .. MNEMONIC              +\n               DATA2=COMM_INFO_01\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         TM    OPCODE_FLAGS,$OPCODE_RELATIVE  RELATIVE ADDRESSING?\n         BO    REF0200                        YES\n* ------------------------------------------------------------------- *\n*        Split out the base and displacement for operand 1            *\n* ------------------------------------------------------------------- *\n         TM    OPCODE_REF,$OPCODE_REF1        2ND AND 3RD BYTES A BDDD?\n         BNO   REF0140                        NO\n         L     R1,CURRENT.AREA_BEGIN          INSTRUCTION DISP\n         A     R1,DISCOMM_CSECT_TEXT          PLUS BASE\n         SR    R14,R14\n         ICM   R14,1,2(R1)                    BASE AND NIBBLE 1 OF DISP\n         SRL   R14,4                          SHIFT OUT DISP\n         STC   R14,DXD_BASE                   SAVE BASE\n         XC    DXD_DISP,DXD_DISP              INITIALIZE DISP\n         MVC   DXD_DISP+2(2),2(R1)            COPY DISP FROM OPERAND\n         NI    DXD_DISP+2,X'0F'               REMOVE BASE\n* ------------------------------------------------------------------- *\n*        Search BASES for operand 1                                   *\n* ------------------------------------------------------------------- *\n         USING BASE_DSECT,R2\n         ITRACE ID=OP1_REF,                                            +\n               DATA1=DXD_BASE\n         BAL   R15,REF0500                    CHECK BASES\n         LTR   R2,R2                          BASE LOCATED?\n         BZ    REF0130                        NO\n* ------------------------------------------------------------------- *\n*        Operand 1 references a defined base                          *\n*        Locate the AREA block                                        *\n* ------------------------------------------------------------------- *\n         ICM   R1,15,BASE_DISP                DISP BASE REFERS TO\n         A     R1,DXD_DISP                    PLUS DISP FROM OPERAND\n         ST    R1,DXD_DISP                    DISP TO SEARCH FOR\n         ITRACE ID=BASE1,                                              +\n               DATA1=DXD_BASE,                .. BASE REG              +\n               DATA2=DXD_DISP                 .. DISP REFERENCED\n         BAL   R8,REF0300                     LOCATE REFERENCED AREA\n         MVC   CURRENT.AREA_REF_LABEL1,DXD_LABEL\n         MVC   CURRENT.AREA_REF_DISP1,DXD_REF_DISP\n         XC    CURRENT.AREA_REF_USING1,CURRENT.AREA_REF_USING1\n         B     REF0140\n* ------------------------------------------------------------------- *\n*        Determine if operand 1 references a defined USING            *\n* ------------------------------------------------------------------- *\nREF0130  DS    0H\n         ITRACE ID=REF0130\n         BAL   R15,REF0600                    CHECK USINGS\n         LTR   R2,R2                          USING FOUND?\n         BZ    REF0140                        NO\n         ITRACE ID=REF0130+\n         MVC   CURRENT.AREA_REF_LABEL1,DXD_LABEL\n         MVC   CURRENT.AREA_REF_DISP1,DXD_REF_DISP\n         ST    R2,CURRENT.AREA_REF_USING1\n* ------------------------------------------------------------------- *\n*        Determine if instruction has a BDDD type operand 2           *\n* ------------------------------------------------------------------- *\nREF0140  DS    0H\n         ITRACE ID=REF0140\n         TM    OPCODE_REF,$OPCODE_REF2        5TH AND 6TH BYTES A BDDD?\n         BNO   REF0290                        NO\n         L     R1,CURRENT.AREA_BEGIN          INSTRUCTION DISP\n         A     R1,DISCOMM_CSECT_TEXT          PLUS BASE\n         SR    R14,R14\n         ICM   R14,1,4(R1)                    BASE + NIBBLE 1 OF DISP\n         SRL   R14,4                          SHIFT OUT DISP\n         STC   R14,DXD_BASE                   SAVE BASE FOR OPERAND 2\n         XC    DXD_DISP,DXD_DISP              INITIALIZE DISP\n         MVC   DXD_DISP+2(2),4(R1)            COPY DISP FROM OPERAND 2\n         NI    DXD_DISP+2,X'0F'               REMOVE BASE\n* ------------------------------------------------------------------- *\n*        Search BASES for operand 2                                   *\n* ------------------------------------------------------------------- *\n         ITRACE ID=OP2_REF,                                            +\n               DATA1=DXD_BASE\n         BAL   R15,REF0500                    CHECK BASES\n         LTR   R2,R2                          BASE LOCATED?\n         BZ    REF0160                        NO\n* ------------------------------------------------------------------- *\n*        Operand 2 references a defined base                          *\n* ------------------------------------------------------------------- *\n         ITRACE ID=BASE2\n         ICM   R1,15,BASE_DISP                DISP BASE REFERS TO\n         A     R1,DXD_DISP                    PLUS DISP FROM OPERAND\n         ST    R1,DXD_DISP                    DISP TO SEARCH FOR\n         BAL   R8,REF0300                     LOCATE REFERENCED AREA\n         MVC   CURRENT.AREA_REF_LABEL2,DXD_LABEL\n         MVC   CURRENT.AREA_REF_DISP2,DXD_REF_DISP\n         XC    CURRENT.AREA_REF_USING2,CURRENT.AREA_REF_USING2\n         B     REF0290\n* ------------------------------------------------------------------- *\n*        Determine if operand 2 references a defined USING            *\n* ------------------------------------------------------------------- *\nREF0160  DS    0H\n         ITRACE ID=REF0160\n         BAL   R15,REF0600                    CHECK USINGS\n         LTR   R2,R2                          USING FOUND?\n         BZ    REF0290                        NO\n         ITRACE ID=REF0160+\n         MVC   CURRENT.AREA_REF_LABEL2,DXD_LABEL\n         MVC   CURRENT.AREA_REF_DISP2,DXD_REF_DISP\n         ST    R2,CURRENT.AREA_REF_USING2\n         B     REF0290\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  Determine referenced displacements for \"relative\" addressing       *\n*                                                                     *\n*  The \"relative\" amounts in instructions is                          *\n*    1) a number of halfwords, not bytes                              *\n*    2) a signed number (the relative value can be negative)          *\n*                                                                     *\n*  The \"LH\" for short instructions preserves the sign bit             *\n*  The \"ICM\" for six byte instructins allows for non-fullword         *\n*  alignments and preserves the sign bit at the same time.            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREF0200  DS    0H\n         ICM   R1,15,CURRENT.AREA_BEGIN       INSTRUCTION DISP\n         LR    R2,R1                          SAVE DISP\n         A     R1,DISCOMM_CSECT_TEXT          PLUS TEXT BASE\n         CLC   OPCODE_LENGTH,H6               SIX BYTE OPCODE?\n         BE    REF0210                        YES\n         LH    R0,2(,R1)                      RELATIVE NBR OF HALFWORDS\n         B     REF0220\nREF0210  DS    0H\n         ICM   R0,15,2(R1)                    RELATIVE NBR OF HALFWORDS\nREF0220  DS    0H\n         AR    R2,R0                          PLUS (OR MINUS) DISP\n         AR    R2,R0                          PLUS (OR MINUS) TWICE\n         ITRACE ID=RELATIVE,                                           +\n               RDATA1=R2\n         ST    R2,DXD_DISP                    SET DISPLACEMENT\n         BAL   R8,REF0300                     FIND REFERENCED INSTR\n         LTR   R6,R6                          AREA LOCATED?\n         BZ    REF0230                        NO.. CANNOT BE IN INSTR\n         L     R4,DXD_LABEL                   LABEL BLOCK ADDRESS\n         MVI   LABEL_TYPE,$LABEL_INSTR        LABEL IS AT AN INSTR\n         ST    R4,CURRENT.AREA_REF_LABEL2\n         MVC   CURRENT.AREA_REF_DISP2,DXD_REF_DISP\n         ITRACE ID=LABEL,                                              +\n               DATA1=(DXD_LABEL,4),                                    +\n               DATA2=(DXD_REF_DISP,4)\n         B     REF0290\nREF0230  DS    0H\n         MVI   CURRENT.AREA_TYPE,$AREA_DATA   FORCE TYPE TO 'DATA'\n* ------------------------------------------------------------------- *\n*        Go to next AREA                                              *\n* ------------------------------------------------------------------- *\nREF0290  DS    0H\n         ITRACE ID=NEXTAREA,                                           +\n               RDATA1=R7,                                              +\n               DATA2=CURRENT.AREA_NEXT\n         ICM   R7,15,CURRENT.AREA_NEXT        NEXT AREA\n         BNZ   REF0010                        LOOP\n         B     EXIT0000                       ALL DONE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Locate referenced disp (DXD_DISP) within CSECT               *\n*                                                                     *\n*        If the area referenced is an instruction                     *\n*           GETMAIN a LABEL block and                                 *\n*           set DXD_LABEL to the address of the LABEL block           *\n*           set DXD_LABEL_DISP to disp from the label                 *\n*                                                                     *\n*                                                                     *\n*        If the area referenced is a DATA area                        *\n*           if the area is a ACON, QCON, VCON, or CXD                 *\n*              GETMAIN a LABEL block and set AREA_LABEL               *\n*              set DXD_LABEL to the address of the LABEL block        *\n*              set DXD_LABEL_DISP to disp from the label              *\n*           otherwise                                                 *\n*              'split' the data into two parts                        *\n*               . one 'up to' the disp referenced,                    *\n*               . second starting at the disp referenced              *\n*                 - GETMAIN a LABEL block for 'second' area           *\n*                 - set DXD_LABEL to the new LABEL block              *\n*                 - set DXD_LABEL_DISP to zero                        *\n*                                                                     *\n*                                                                     *\n*        On Entry                                                     *\n*          DXD_DISP     disp of AREA to locate                        *\n*          R8           Return address                                *\n*                                                                     *\n*        At exit                                                      *\n*          R6           address of AREA or zero if no AREA located    *\n*          DXD_LABEL    address of LABEL assigned to AREA             *\n*          DXD_REF_DISP disp from LABEL (address in DXD_LABEL)        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREF0300  DS    0H\n         ITRACE ID=REF0300,                                            +\n               DATA1=(DXD_DISP,4)             DISP TO AREA REFERENCED\n         XC    DXD_LABEL,DXD_LABEL\n         XC    DXD_REF_DISP,DXD_REF_DISP\n         ICM   R6,15,DISCOMM_ALL_AREA_NEXT    FIRST AREA\n         BZR   R8                             NO AREAS\nREF0310  DS    0H\n         CLC   DXD_DISP,LOCATE.AREA_END       DISP IN THIS AREA?\n         BNH   REF0320                        YES\n         ICM   R6,15,LOCATE.AREA_NEXT         NEXT AREA\n         BNZ   REF0310                        CHECK NEXT AREA\n         MVC   DXD_REF_DISP,DXD_DISP\n         ITRACE ID=NO_AREA,                                            +\n               DATA1=(DXD_REF_DISP,4)\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        AREA located.                                                *\n*                                                                     *\n*        If the reference is not on the 1st byte, determine           *\n*        if the AREA can be \"split\"                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREF0320  DS    0H\n         ITRACE ID=AREA_FND,                                           +\n               DATA1=LOCATE.AREA_BEGIN,                                +\n               DATA2=(LOCATE.AREA_TYPE,1)\n         CLC   LOCATE.AREA_BEGIN,DXD_DISP     'DIRECT HIT'?\n         BE    REF0340                        YES\n         CLI   LOCATE.AREA_TYPE,$AREA_INSTRUCTION\n         BE    REF0340                        YES.. CANNOT 'SPLIT'\n         TM    LOCATE.AREA_DATA_TYPE,$DATA_ACON\n         BO    REF0340                        YES.. CANNOT 'SPLIT'\n         TM    LOCATE.AREA_DATA_TYPE,$DATA_VCON\n         BO    REF0340                        YES.. CANNOT 'SPLIT'\n         TM    LOCATE.AREA_DATA_TYPE,$DATA_CXD\n         BO    REF0340                        YES.. CANNOT 'SPLIT'\n         TM    LOCATE.AREA_DATA_TYPE,$DATA_Q\n         BO    REF0340                        YES.. CANNOT 'SPLIT'\n         ITRACE ID=SPLIT,                                              +\n               RDATA1=R6,                                              +\n               DATA2=LOCATE.AREA_BEGIN\n         GETMAIN RU,                                                   +\n               LV=AREA_DSECT_L,                                        +\n               LOC=ANY\n         LR    R5,R1\n         ITRACE ID=NEW_AREA,                                           +\n               RDATA1=R5\n         MVC   NEW.AREA_DSECT(AREA_DSECT_L),LOCATE.AREA_DSECT\n         ST    R5,LOCATE.AREA_NEXT\n         ST    R6,NEW.AREA_PREV\n         MVC   NEW.AREA_TYPE,LOCATE.AREA_TYPE COPY TYPE\n         L     R14,DXD_DISP                   DISP SEARCHED FOR\n         BCTR  R14,0                          MINUS 1\n         STCM  R14,15,LOCATE.AREA_END         SET END DISP\n         ICM   R15,15,LOCATE.AREA_BEGIN       BEGIN DISP\n         SR    R14,R15                        COMPUTE LENGTH\n         LA    R14,1(,R14)                    TRUE LENGTH\n         STCM  R14,15,LOCATE.AREA_LENGTH      SET LENGTH\n         ICM   R14,15,NEW.AREA_END            END DISP\n         L     R15,DXD_DISP                   DISP SEARCHED FOR\n         STCM  R15,15,NEW.AREA_BEGIN          SET BEGIN DISP\n         SR    R14,R15                        COMPUTE LENGTH\n         LA    R14,1(,R14)                    TRUE LENGTH\n         STCM  R14,15,NEW.AREA_LENGTH         SET LENGTH\n         XC    DXD_LABEL_DISP,DXD_LABEL_DISP  DISP FROM LABEL IS ZERO\n         MVC   DXD_GEN_DISP,NEW.AREA_BEGIN    DISP FOR LABEL\n         BAL   R14,REF0400                    GETMAIN A NEW LABEL BLOCK\n         ST    R4,NEW.AREA_LABEL              CHAIN LABEL TO AREA\n         MVI   LABEL_TYPE,$LABEL_DATA         LABEL IS AT DATA AREA\n         ICM   R1,15,NEW.AREA_NEXT            NEXT BLOCK ON CHAIN\n         BZ    REF0330                        NO 'NEXT' BLOCK\nNEXT     USING AREA_DSECT,R1\n         ST    R5,NEXT.AREA_PREV              SET PREV IN NEXT\nREF0330  DS    0H\n         ITRACE ID=AREAS,                                              +\n               DATA1=LOCATE.AREA_BEGIN,                                +\n               DATA2=NEW.AREA_BEGIN\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        An instruction or ADCON is referencing this area.            *\n*        Either the reference is to the first byte of this AREA       *\n*        or this is an AREA that cannot be 'split'.                   *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREF0340  DS    0H\n         ITRACE ID=REF0340,                                            +\n               DATA1=(LOCATE.AREA_BEGIN,4),                            +\n               DATA2=(DXD_DISP,4)\n         L     R1,DXD_DISP                    DISP REFERENCED\n         ICM   R0,15,LOCATE.AREA_BEGIN        AREA BEGIN DISP\n         ST    R0,DXD_LABEL_DISP              DISP TO LABEL\n         ICM   R4,15,LOCATE.AREA_LABEL        LABEL GETMAINED?\n         BNZ   REF0350                        YES\n         MVC   DXD_GEN_DISP,LOCATE.AREA_BEGIN DISP FOR NEW LABEL\n         BAL   R14,REF0400                    GETMAIN LABEL BLOCK\n         ITRACE ID=AREA_LBL,                                           +\n               RDATA1=R6,                                              +\n               DATA2=DXD_LABEL\n         L     R4,DXD_LABEL                   NEW LABEL BLOCK ADDR\n         ST    R4,LOCATE.AREA_LABEL           CHAIN AREA TO LABEL\n         MVC   LABEL_TYPE,LOCATE.AREA_TYPE    COPY TYPE\nREF0350  DS    0H\n         ITRACE ID=REF0350,                                            +\n               DATA1=LABEL_NAME,                                       +\n               DATA2=(LABEL_DISP,4)\n         ST    R4,DXD_LABEL                   RETURN ADDR OF LABEL\n         L     R1,DXD_DISP                    DISP IN INSTRUCTION\n         ICM   R0,15,LABEL_DISP               DISP TO LABEL\n         SR    R1,R0                          DISP FROM LABEL\n         ST    R1,DXD_REF_DISP                SAVE DISP\n         BR    R8\n* ------------------------------------------------------------------- *\n*        GETMAIN new LABEL block                                      *\n* ------------------------------------------------------------------- *\nREF0400  DS    0H\n         ST    R14,DXD_RETURN\n         ITRACE ID=GET_LABL,                                           +\n               RDATA1=R14\n         GETMAIN RU,                                                   +\n               LV=LABEL_DSECT_L,                                       +\n               LOC=ANY\n         LR    R4,R1\n         XC    LABEL_DSECT(LABEL_DSECT_L),LABEL_DSECT\n         UNPK  COMM_INFO_01(9),DXD_GEN_DISP(5)\n         TR    COMM_INFO_01(8),COMM_HEXCHAR\n         MVC   LABEL_EYE,LABEL_ID             IDENTIFY BLOCK\n         MVC   LABEL_NAME,COMM_BLANKS         INITIALIZE NAME\n         MVC   LABEL_NAME(8),COMM_INFO_01     TEMPORARY NAME\n         MVI   LABEL_NAME,C'-'                FLAG TEMPORARY NAME\n         MVC   LABEL_DISP,DXD_GEN_DISP        DISP TO THIS LABEL\n         ST    R4,DXD_LABEL                   SAVE ADDR\n         ITRACE ID=NEWLABEL,                                           +\n               RDATA1=R4,                                              +\n               DATA2=LABEL_NAME\n         L     R14,DXD_RETURN\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*     Search defined BASEs                                            *\n*     Base is in DXD_BASE                                             *\n*     Displacement from the BASE is in DXD_DISP                       *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREF0500  DS    0H\n         ITRACE ID=REF0500,                                            +\n               DATA1=DISCOMM_BASE_NEXT,                                +\n               DATA2=DXD_BASE\n         ICM   R2,15,DISCOMM_BASE_NEXT        1ST BASE\n         BZ    REF0540                        NO BASES DEFINED\nREF0510  DS    0H\n         ITRACE ID=REF0510,                                            +\n               DATA1=BASE_BEGIN\n         OC    BASE_BEGIN(8),BASE_BEGIN       BEGIN/END DISP(S)?\n         BZ    REF0520                        NO\n         CLC   BASE_END,CURRENT.AREA_BEGIN    IN EFFECT HERE?\n         BL    REF0530                        NO\n         CLC   BASE_BEGIN,CURRENT.AREA_END    IN EFFECT HERE?\n         BH    REF0530                        NO\nREF0520  DS    0H\n         ITRACE ID=REF0520\n         CLC   BASE_REGISTER,DXD_BASE         CORRECT REGISTER?\n         BNE   REF0530                        NO\n         ITRACE ID=BASE_FND                   BASE HAS BEEN FOUND\n         BR    R15                            RETURN (R2=ADDR OF BASE)\nREF0530  DS    0H\n         ICM   R2,15,BASE_NEXT                NEXT BASE\n         BNZ   REF0510\nREF0540  DS    0H\n         ITRACE ID=NO_BASE\n         BR    R15                            RETURN (R2 = ZERO)\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*     Search defined USINGs                                           *\n*     Base is in DXD_BASE                                             *\n*     Displacement from the BASE is in DXD_DISP                       *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREF0600  DS    0H\n         ITRACE ID=REF0600,                                            +\n               DATA1=DISCOMM_USING_NEXT\n         ICM   R2,15,DISCOMM_USING_NEXT       1ST USING\n         BZ    REF0680                        NO USINGS DEFINED\n         USING USING_DSECT,R2\nREF0610  DS    0H\n         OC    USING_BEGIN(8),USING_BEGIN     BEGIN OR END DISP GIVEN?\n         BZ    REF0620                        NO\n         CLC   USING_END,CURRENT.AREA_BEGIN   IN EFFECT HERE?\n         BL    REF0670                        NO\n         CLC   USING_BEGIN,CURRENT.AREA_END   IN EFFECT HERE?\n         BH    REF0670                        NO\nREF0620  DS    0H\n         CLC   USING_REGISTER,DXD_BASE        CORRECT REGISTER?\n         BNE   REF0670                        NO\n         ITRACE ID=FNDUSING,                                           +\n               DATA1=USING_LABEL_ADDR\n         MVC   DXD_EFFECTIVE_DISP,DXD_DISP    COPY DISP\n         ICM   R4,15,USING_LABEL_ADDR         STARTING LABEL?\n         BZ    REF0640                        NO\n         ITRACE ID=USNGLABL,                                           +\n               DATA1=USING_DSECT_LABEL,       .. LABEL WITHIN DSECT    +\n               DATA2=USING_DISP               .. LABEL'S DISP\n         ICM   R0,15,LABEL_DISP               DISP TO START LABEL\n         A     R0,DXD_DISP                    PLUS DISP IN INSTRUCTION\n         ST    R0,DXD_EFFECTIVE_DISP          EFFECTIVE DISP\nREF0640  DS    0H\n         ITRACE ID=EFF_DISP,                                           +\n               DATA1=DXD_EFFECTIVE_DISP\n         L     R1,USING_DSECT_ADDR            DSECT ADDRESS\n         USING DSECT_DSECT,R1\n         L     R4,DSECT_LABEL_NEXT            FIRST LABEL\nREF0650  DS    0H\n         CLC   LABEL_DISP,DXD_EFFECTIVE_DISP  LABEL DISP > EFFECTIVE?\n         BNH   REF0660                        NO\n         ICM   R4,15,LABEL_NEXT               NEXT LABEL\n         BNZ   REF0650                        KEEP SEARCHING\nREF0660  DS    0H\n         ST    R4,DXD_LABEL                   RETURN LABEL ADDRESS\n         L     R1,DXD_EFFECTIVE_DISP          EFFECTIVE DISP\n         ICM   R0,15,LABEL_DISP\n         SR    R1,R0                          MINUS DISP TO LABEL\n         ST    R1,DXD_REF_DISP                DISP FROM LABEL\n         BR    R15\nREF0670  DS    0H\n         ICM   R2,15,USING_NEXT               NEXT BASE\n         BNZ   REF0610\nREF0680  DS    0H\n         ITRACE ID=NOUSING\n         BR    R15                            RETURN\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=BAD_REF\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ICM   R7,15,DISCOMM_ALL_AREA_NEXT    FIRST AREA BLOCK\n         ITRACE ID=GENLABLS,                                           +\n               RDATA1=R7\n         LTR   R7,R7                          ANY AREA BLOCKS?\n         BZ    EXIT0060                       NO\n         ZAP   DXD_LABEL_NBR,P0               INIT LABEL NBR\nEXIT0010 DS    0H\n         ITRACE ID=AREA,                                               +\n               RDATA1=R7,                                              +\n               DATA2=CURRENT.AREA_BEGIN\n         ICM   R4,15,CURRENT.AREA_LABEL       LABEL PRESENT?\n         BZ    EXIT0050                       NO\n         CLI   LABEL_TYPE,$LABEL_ESD          LABEL FROM AN ESD ITEM?\n         BE    EXIT0040                       YES.. DO NOT CHANGE\n         AP    DXD_LABEL_NBR,P10              PLUS 10\n         MVC   LABEL_NAME,COMM_BLANKS         INIT LABEL\n         MVC   LABEL_NAME(8),=X'F020202020202120'\n         ED    LABEL_NAME(8),DXD_LABEL_NBR    EDIT LABEL NUMBER\n         CLI   CURRENT.AREA_TYPE,$AREA_DATA   DATA AREA?\n         BE    EXIT0030\n         SR    R1,R1\n         ICM   R1,3,DISCOMM_PREFIX_LENGTH     PREFIX LENGTH\n         BZ    EXIT0020                       SHOULD NOT HAPPEN\n         BCTR  R1,0\n         EX    R1,PREFIX_MVC                  COPY PREFIX\n         B     EXIT0040\nEXIT0020 DS    0H\n         MVI   LABEL_NAME,C'L'                DEFAULT TO 'L'\n         B     EXIT0040\nEXIT0030 DS    0H\n         MVC   LABEL_NAME(4),DATA             SET PREFIX TO 'DATA'\nEXIT0040 DS    0H\n         ITRACE ID=LABEL,                                              +\n               DATA1=LABEL_NAME,                                       +\n               DATA2=(LABEL_DISP,4)\nEXIT0050 DS    0H\n         ICM   R7,15,CURRENT.AREA_NEXT        NEXT AREA\n         BNZ   EXIT0010\nEXIT0060 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nPREFIX_MVC MVC LABEL_NAME(0),DISCOMM_PREFIX\nOP_MVC     MVC COMM_INFO_01(0),0(R1)\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START DC   Q(DXDREF)\n\nH6        DC   H'6'\n\nP0        DC   P'0'\nP10       DC   P'10'\nDATA      DC   CL4'DATA'\nLABEL_ID  DC   CL8'LABEL'\n\n          LTORG\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDREF          DSECT\n                COPY DXDPREF\n\nDXD_REF_DISP    DS   A                  DISP REFERENCED\nDXD_LABEL       DS   A                  LABEL BLOCK ADDRESS\nDXD_LABEL_DISP  DS   A                  DISP FROM LABEL\n\nDXD_GEN_DISP    DS   A\n\nDXD_RETURN      DS   A\n\nDXD_EFFECTIVE_DISP   DS  A\n\nDXD_BASE        DS   X                  BASE FOR CURRENT OPERAND\nDXD_DISP        DS   A                  DISP FROM WORK BASE\n\nDXD_LABEL_NBR   DS   PL4                LABEL NBR\n\nDXD_EXIT_PARMS  DS   0A\nDXD_EXIT_OPCODE DS   A                  OPCODE TABLE ENTRY TO MODIFY\nDXD_EXIT_TEXT   DS   A                  ADDRESS OF INSTRUCTION IN TEXT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n         END  DISREF\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISRLD": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x01\\x01\\t3_\\x01\\t6/\\x15G\\x01\\x1c\\x01\\x06\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "2009-12-01T00:00:00", "modifydate": "2009-12-28T15:47:01", "lines": 284, "newlines": 262, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: DISRLD                                                *\n*                                                                     *\n*  Function:                                                          *\n*   Obtain the requested CSECT's RLD info                             *\n*                                                                     *\n*   DISBIND has already established a dialog                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISRLD   CSECT\nDISRLD   AMODE 31\nDISRLD   RMODE ANY\n         USING DISRLD,R15\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'DISRLD'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         DROP  R15\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISRLD,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)                    CHAIN\n         ST    R15,8(,R13)                    CHAIN\n         LR    R13,R15                        SET SAVE AREA ADDRESS\n         USING DXDRLD,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n* ------------------------------------------------------------------- *\n*        Obtain and initialize RLD buffer                             *\n* ------------------------------------------------------------------- *\n         ITRACE ID=GET_SECT,                                           +\n               DATA1=DISCOMM_CSECT\n         IEWBUFF FUNC=GETBUF,                                          +\n               PREFIX=IBMRLD,                                          +\n               TYPE=RLD\n         ST    R8,DXD_BUFFER\n         ITRACE ID=INIT_RLD,                                           +\n               RDATA1=R8,                                              +\n               RDATA2=R7\n         IEWBUFF FUNC=INITBUF,                                         +\n               PREFIX=IBMRLD,                                          +\n               TYPE=RLD\n         XC    DXD_BINDER_CURSOR,DXD_BINDER_CURSOR\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRLD0000  DS    0H\n         ITRACE ID=GETD_RLD,                                           +\n               DATA1=DISCOMM_CSECT\n         L     R8,DXD_BUFFER\n         LA    R7,IBMRLD_RLDH_END\n         IEWBIND FUNC=GETD,                                            +\n               VERSION=5,                                              +\n               WORKMOD=DISCOMM_DIALOG_WORKMOD,                         +\n               CLASS=B_RLD,                                            +\n               SECTION=DISCOMM_CSECT_NAME_LENGTH,                      +\n               AREA=IBMRLD_IEWBRLD,                                    +\n               CURSOR=DXD_BINDER_CURSOR,                               +\n               COUNT=DXD_RLD_RETURNED,                                 +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_IEWBIND,COMPLETE)\n         ITRACE ID=GETD_RC,                                            +\n               DATA1=(DXD_RETURN_CODE,4),                              +\n               DATA2=(DXD_REASON_CODE,4)\n         CLC   DXD_RETURN_CODE,F8\n         BH    ERR0010\n         BE    ERR0020                             NO DATA\n         CLC   DXD_RETURN_CODE,F4\n         BL    RLD0020\n         CLC   DXD_REASON_CODE,X_83000800\n         BE    RLD0020\n         CLC   DXD_REASON_CODE,X_83000801\n         BE    EXIT0000\nRLD0020  DS    0H\n         ICM   R6,15,DXD_RLD_RETURNED\n         LA    R7,IBMRLD_RLDH_END\n         USING IBMRLD_RLD_ENTRY,R7\nRLD0030  DS    0H\n         ITRACE ID=RLD,                                                +\n               RDATA1=R7,                                              +\n               RDATA2=R6\n         MVC   DXD_CSECT_NAME,COMM_BLANKS          CLEAR CSECT NAME\n         LH    R1,IBMRLD_RLD_RESIDENT_CHARS\n         L     R2,IBMRLD_RLD_RESIDENT_PTR\n         BCTR  R1,0\n         EX    R1,MVC_01                           COPY SECTION NAME\n         CLC   DISCOMM_CSECT,DXD_CSECT_NAME        CORRECT CSECT?\n         BNE   RLD0140                             NO\n         GETMAIN RU,                                                   +\n               LV=AREA_DSECT_L,                                        +\n               LOC=ANY\n         LR    R5,R1                               COPY ADDRESS\n         ITRACE ID=NEW_RLD,                                            +\n               RDATA1=R5\nNEW      USING AREA_DSECT,R5\n         XC    NEW.AREA_DSECT(AREA_DSECT_L),NEW.AREA_DSECT\n         MVC   NEW.AREA_EYE,AREA_ID\n         MVI   NEW.AREA_TYPE,$AREA_DATA            INDICATE 'DATA' AREA\n         CLI   IBMRLD_RLD_TYPE,X'10'               VCON?\n         BE    RLD0040                             YES\n         CLI   IBMRLD_RLD_TYPE,X'20'               ACON?\n         BE    RLD0050                             YES\n         CLI   IBMRLD_RLD_TYPE,X'30'               PSEUDO AREA DISP (Q)\n         BE    RLD0060                             YES\n         CLI   IBMRLD_RLD_TYPE,X'40'               PSEUDO SIZE (CXD)\n         BE    RLD0070                             YES\n         DC    H'0'\nRLD0040  DS    0H\n         MVI   NEW.AREA_DATA_TYPE,$DATA_VCON       ITEM IS A VCON\n         B     RLD0080\nRLD0050  DS    0H\n         MVI   NEW.AREA_DATA_TYPE,$DATA_ACON       ITEM IS AN ADCON\n         B     RLD0080\nRLD0060  DS    0H\n         MVI   NEW.AREA_DATA_TYPE,$DATA_Q          ITEM IS A \"Q\"\n         B     RLD0080\nRLD0070  DS    0H\n         MVI   NEW.AREA_DATA_TYPE,$DATA_CXD        ITEM IS A \"CXD\"\nRLD0080  DS    0H\n         MVC   NEW.AREA_LENGTH+2(2),IBMRLD_RLD_ADCON_LENG\n         MVC   NEW.AREA_BEGIN,IBMRLD_RLD_RES_OFFSET\n         ICM   R0,15,NEW.AREA_BEGIN\n         ICM   R1,15,NEW.AREA_LENGTH\n         AR    R1,R0\n         BCTR  R1,0\n         STCM  R1,15,NEW.AREA_END\n         TM    IBMRLD_RLD_BIND_ATTR,IBMRLD_RLD_DIRECTION\n         BO    RLD0090\n         OI    NEW.AREA_FLAGS,$AREA_RLD_PLUS\n         B     RLD0100\nRLD0090  DS    0H\n         OI    NEW.AREA_FLAGS,$AREA_RLD_MINUS\nRLD0100  DS    0H\n         LH    R1,IBMRLD_RLD_TARGET_CHARS\n         CH    R1,=Y(L'AREA_RLD_NAME)\n         BNH   RLD0110\n         LH    R1,=Y(L'AREA_RLD_NAME)\nRLD0110  DS    0H\n         L     R2,IBMRLD_RLD_TARGET_PTR\n         BCTR  R1,0\n         MVC   NEW.AREA_RLD_NAME,COMM_BLANKS\n         EX    R1,MVC_02\n* ------------------------------------------------------------------- *\n*     Add the new block to RLD area chain                             *\n* ------------------------------------------------------------------- *\n         LA    R1,DISCOMM_RLD_AREA_PREV            RLD ANCHOR\nPREV     USING AREA_DSECT,R1\nRLD0120  DS    0H\n         ICM   R2,15,PREV.AREA_NEXT\n         BZ    RLD0130\n         LR    R1,R2                               COPY ADDRESS\n         B     RLD0120                             COPY RLD BLOCK ADDR\nRLD0130  DS    0H\n         ST    R1,NEW.AREA_PREV                    CHAIN PREV TO NEW\n         ST    R5,PREV.AREA_NEXT                   CHAIN NEW TO PREV\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nRLD0140  DS    0H\n         LA    R7,IBMRLD_RLD_END\n         BCT   R6,RLD0030\n         CLC   DXD_REASON_CODE,X_83000800\n         BNE   RLD0000\n* ------------------------------------------------------------------- *\n*        Free the buffer                                              *\n* ------------------------------------------------------------------- *\n         L     R8,DXD_BUFFER\n         IEWBUFF FUNC=FREEBUF,                                         +\n               PREFIX=IBMRLD,                                          +\n               TYPE=RLD\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMVC_01   MVC   DXD_CSECT_NAME(0),0(R2)\nMVC_02   MVC   NEW.AREA_RLD_NAME(0),0(R2)\n         DROP  NEW\n* --------------------------------------------------------------------*\n*                                                                     *\n* --------------------------------------------------------------------*\nERR0010  DS    0H\n         DC    H'1'\nERR0020  DS    0H\n         DC    H'2'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         ICM   R1,15,DISCOMM_RLD_AREA_NEXT\n         BZ    EXIT0010\n         ITRACE ID=X_PREV,                                             +\n               RDATA1=R5\n         XC    PREV.AREA_PREV,PREV.AREA_PREV\nEXIT0010 DS    0H\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE REGISTERS         ASE01680\n         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START     DC   Q(DXDRLD)\nF4            DC   F'4'\nF8            DC   F'8'\nB_RLD         DC   XL2'5',C'B_RLD'\nX_83000800    DC   X'83000800'\nX_83000801    DC   X'83000801'\nAREA_ID       DC   CL8'AREA'\nTYPE_ADCON    DC   CL5'ADCON'\nTYPE_VCON     DC   CL5'VCON'\nTYPE_Q        DC   CL5'Q'\nTYPE_CXD      DC   CL5'CXD'\n\n         IEWBUFF FUNC=MAPBUF,                                          +\n               TYPE=RLD,                                               +\n               PREFIX=IBMRLD,                                          +\n               HEADREG=R8,                                             +\n               ENTRYREG=R7,                                            +\n               SIZE=50,                                                +\n               VERSION=5\n\n              IEWBIND MF=(L,IEWBIND_I)\nIEWBIND_L     EQU  *-IEWBIND_I\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDRLD            DSECT\n                  COPY DXDPREF\nDXD_RETURN_CODE   DS   F\n\nDXD_REASON_CODE   DS   F\n\nDXD_BUFFER        DS   A\n\nDXD_BINDER_CURSOR DS   F\nDXD_RLD_RETURNED  DS   F\n\nDXD_CHAIN_POINT   DS   A\n\nDXD_CSECT_NAME    DS   CL8\n\nDXD_IEWBIND       DS   0F,(IEWBIND_L)X\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  COPY     REGEQU\n         END  DISRLD\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISRLIST": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x04\\x01\\t3\\x7f\\x01\\t6/\\x15G\\x01\\x11\\x01\\x12\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2009-12-03T00:00:00", "modifydate": "2009-12-28T15:47:04", "lines": 273, "newlines": 274, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: DISRLIST                                              *\n*                                                                     *\n*  FUNCTION:                                                          *\n*   PRINT RLD ITEMS                                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISRLIST CSECT\nDISRLIST AMODE 31\nDISRLIST RMODE ANY\n         USING DISRLIST,R15\n         B     MOD0000                           SKIP EYECATCHER\nMODID    DC    CL8'DISRLIST'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         DROP  R15\n         STM   R14,R12,12(R13)                   SAVE REGS\n         LR    R10,R15                           SET BASE REG\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISRLIST,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR                 WORK AREA\n         A     R15,DXD_START                     PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         USING DXDRLIST,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n         ICM   R5,15,DISCOMM_RLD_AREA_NEXT       FIRST AREA\n         BZ    MAIN0300                          NO RLD ITEMS\n         USING AREA_DSECT,R5\nMAIN0000 DS    0H\n         L     R0,DISCOMM_VDATA_ADDR\n         L     R1,DISCOMM_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\n         L     R6,SPF_VWIDTH                     SCREEN WIDTH\n         SH    R6,=Y(MSG01_L)                    MINUS LENGTH OF DETAIL\n         SRL   R6,1                              DIVIDE BY 2\n         A     R6,DISCOMM_VDATA_ADDR             PLUS VDATA ADDRESS\n         L     R7,SPF_VDEPTH                     NBR OF LINES\n         ST    R5,DXD_FIRST_DISPLAYED            FIRST ITEM DISPLAYED\nMAIN0010 DS    0H\n         ST    R5,DXD_LAST_DISPLAYED             LAST ITEM DISPLAYED\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nP        USING MSG01,R6\n         CLI   AREA_DATA_TYPE,$DATA_ACON         ADDRESS CONSTANT?\n         BE    MAIN0020                          YES\n         CLI   AREA_DATA_TYPE,$DATA_VCON         V-CONSTANT?\n         BE    MAIN0030                          YES\n         CLI   AREA_DATA_TYPE,$DATA_Q            Q-CONSTANT?\n         BE    MAIN0040                          YES\n         CLI   AREA_DATA_TYPE,$DATA_CXD          CXD?\n         BE    MAIN0050                          YES\n         CLI   AREA_DATA_TYPE,$DATA_USER         USER DEFINED AREA?\n         BE    MAIN0060                          YES\n         DC    H'0'                              SHOULD NOT HAPPEN\nMAIN0020 DS    0H\n         MVI   P.MSG01_ATTR,$SCREEN_ATTR_HIGH\n         MVC   P.MSG01_TYPE,C_ADCON\n         B     MAIN0070\nMAIN0030 DS    0H\n         MVI   P.MSG01_ATTR,$SCREEN_ATTR_HIGH_TURQUOISE\n         MVC   P.MSG01_TYPE,C_VCON\n         B     MAIN0070\nMAIN0040 DS    0H\n         MVI   P.MSG01_ATTR,$SCREEN_ATTR_HIGH_YELLOW\n         MVC   P.MSG01_TYPE,C_Q\n         B     MAIN0070\nMAIN0050 DS    0H\n         MVI   P.MSG01_ATTR,$SCREEN_ATTR_HIGH_RED\n         MVC   P.MSG01_TYPE,C_CXD\n         B     MAIN0070\nMAIN0060 DS    0H\n         MVC   P.MSG01_TYPE,C_USER\nMAIN0070 DS    0H\n         ICM   R1,15,AREA_LENGTH                 ITEM'S LENGTH\n         CVD   R1,COMM_DWORD                     CONVERT TO DECIMAL\n         MVC   P.MSG01_LENGTH,=X'40202120'       EDIT LENGTH\n         ED    P.MSG01_LENGTH,COMM_DWORD+6\n         UNPK  P.MSG01_BEGIN(9),AREA_BEGIN(5)    UNPACK BEGIN DISP\n         TR    P.MSG01_BEGIN,COMM_HEXCHAR        TRANSLATE IT\n         MVI   P.MSG01_BEGIN+8,C' '\n         UNPK  P.MSG01_END(9),AREA_END(5)        UNPACK END DISP\n         TR    P.MSG01_END,COMM_HEXCHAR          TRANSLATE IT\n         MVI   P.MSG01_END+8,C' '\n         TM    AREA_FLAGS,$AREA_RLD_PLUS         DIRECTION \"+\"?\n         BO    MAIN0080                          YES\n         MVI   P.MSG01_DIRECTION,C'-'            SHOW DIRECTION '-'\n         B     MAIN0090\nMAIN0080 DS    0H\n         MVI   P.MSG01_DIRECTION,C'+'            SHOW DIRECTION '+'\nMAIN0090 DS    0H\n         MVC   P.MSG01_NAME,AREA_RLD_NAME        COPY NAME (Q, VCON)\n         A     R6,SPF_VWIDTH                     NEXT LINE\n         BCT   R7,MAIN0100\n         B     MAIN0110\nMAIN0100 DS    0H\n         ICM   R5,15,AREA_NEXT                   NEXT AREA\n         BNZ   MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0110 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_DISRLIST    SET PANEL NAME\n         MVC   SESS_DISP_VDATA_ADDR,DISCOMM_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DISCOMM_VDATA_LENGTH\n         L     R15,COMM_V_OSDISP                 DISP ENTRY POINT\n         BALR  R14,R15                           DISPLAY\n         ITRACE ID=DISP_RC,                                            +\n               RDATA1=R15,                                             +\n               DATA2=SPF_ZVERB\n         LTR   R15,R15                           RC = 0?\n         BNZ   EXIT0000                          NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLI   SPF_ZVERB,C'B'                    BOTTOM?\n         BE    MAIN0200\n         CLI   SPF_ZVERB,C'D'                    DOWN?\n         BE    MAIN0220\n         CLI   SPF_ZVERB,C'T'                    TOP?\n         BE    MAIN0230\n         CLI   SPF_ZVERB,C'U'                    UP?\n         BE    MAIN0240\n         B     MAIN0110\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0200 DS    0H\n         ITRACE ID=BOTTOM\n         ICM   R1,15,DISCOMM_RLD_AREA_NEXT       FIRST ON CHAIN\nTEMP     USING AREA_DSECT,R1\n         BZ    EXIT0000                          SHOULD NOT HAPPEN!\nMAIN0210 DS    0H\n         LR    R5,R1                             SAVE THIS ADDR\n         ICM   R1,15,TEMP.AREA_NEXT              NEXT AREA\n         BNZ   MAIN0210\n         B     MAIN0000                          BUILD DISPLAY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0220 DS    0H\n         ITRACE ID=DOWN\n         CLI   SPF_ZSCROLLA,C'M'                 MAX?\n         BE    MAIN0200                          YES\n         L     R5,DXD_LAST_DISPLAYED             LAST ITEM DISPLAYED\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0230 DS    0H\n         ITRACE ID=TOP\n         L     R5,DISCOMM_RLD_AREA_NEXT          FIRST DATA ITEM\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0240 DS    0H\n         ITRACE ID=UP\n         CLI   SPF_ZSCROLLA,C'M'                 MAX?\n         BE    MAIN0230                          YES\n         ICM   R1,15,DXD_FIRST_DISPLAYED         FIRST ON DISPLAY\n         BZ    EXIT0000                          SHOULD NOT HAPPEN!\n         L     R7,SPF_ZSCROLLN                   LINES ON DISPLAY\nMAIN0250 DS    0H\n         LR    R5,R1                             COPY ADDR\n         ICM   R1,15,TEMP.AREA_PREV              PREVIOUS AREA\n         BZ    MAIN0000\n         BCT   R7,MAIN0250                       LOOP\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0300 DS    0H\n         ITRACE ID=NO_RLD\n         MVC   SPF_MSG_3(MSG02_L),MSG02\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\nEXIT0010 DS    0H\n         L     R13,4(,R13)                       RESTORE REGISTER 13    ASE01670\n         L     R14,12(,R13)                      RESTORE REGISTERS      ASE01680\n         LR    R15,R2                            SET RC\n         LM    R0,R12,20(R13)                    RESTORE REGISTERS      ASE01680\n         BR    R14                               RETURN TO CALLER       ASE01700\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START         DC   Q(DXDRLIST)\nC_ADCON           DC   CL5'ADCON'\nC_VCON            DC   CL5'VCON'\nC_Q               DC   CL5'Q'\nC_CXD             DC   CL5'CXD'\nC_USER            DC   CL5'USER'\nPANEL_DISRLIST    DC   C'DISRLIST'\n\nMSG01             DS   0C\nMSG01_ATTR        DC   AL1($SCREEN_ATTR_NORMAL)\nMSG01_TYPE        DC   CL5' '\n                  DC   CL1' '\n                  DC   C' '\nMSG01_BEGIN       DC   CL8' '\n                  DC   C' '\nMSG01_END         DC   CL8' '\n                  DC   C' '\nMSG01_LENGTH      DC   X'40202120'\n                  DC   C' '\nMSG01_DIRECTION   DC   C' '\n                  DC   CL2' '\nMSG01_NAME        DC   CL8' '\nMSG01_L           EQU  *-MSG01\n\nMSG02             DC   C'DISRLIST04I  No RLD items to display'\nMSG02_L           EQU  *-MSG02\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDRLIST              DSECT\n                      COPY    DXDPREF\n\nDXD_FIRST_DISPLAYED   DS  A\nDXD_LAST_DISPLAYED    DS  A\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n              END     DISRLIST\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISSCAN": {"ttr": 7427, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x00\\x05\\x01\\x10\\x00o\\x01\\x10\\x01_\\x15&\\x02A\\x02 \\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "2010-01-06T00:00:00", "modifydate": "2010-01-15T15:26:05", "lines": 577, "newlines": 544, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: DISSCAN                                               *\n*                                                                     *\n*  FUNCTION:                                                          *\n*      Determine which parts of the object text are instructions      *\n*      and which are data.                                            *\n*                                                                     *\n*      Areas known to be data are:                                    *\n*         RLD items                                                   *\n*         Areas identified by the user (via the \"D\" menu option)      *\n*                                                                     *\n*      The text will be scanned a byte-at-a-time to determine if      *\n*      the remaining areas are instructions or are data.              *\n*                                                                     *\n*      When DISSCAN completes, the AREA blocks should describe        *\n*      every byte of the object text.                                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISSCAN  CSECT\nDISSCAN  AMODE 31\nDISSCAN  RMODE ANY\n         USING DISSCAN,R15\n         B     INIT0000                        SKIP EYECATCHER\nMODID    DC    CL8'DISSCAN'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                 SAVE REGS\n         LR    R10,R15                         SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISSCAN,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR               WORK AREA\n         A     R15,DXD_START                   PLUS DISPLACEMENT\n         ST    R15,8(,R13)\n         ST    R13,4(,R15)\n         LR    R13,R15\n         USING DXDSCAN,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Housekeeping                                                 *\n*                                                                     *\n*        . Free areas from a previous scan(s)                         *\n*        . initialize starting displacement                           *\n*        . initialize data detected                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ICM   R5,15,DXD_NEW_AREAS             NEW AREAS CHAIN\n         BZ    INIT0020                        NOTHING ON CHAIN\nNEW      USING AREA_DSECT,R5\nINIT0010 DS    0H\n         ITRACE ID=FREE_NEW,                                           +\n               RDATA1=R5\n         LR    R1,R5                           COPY AREA BLOCK ADDRESS\n         ICM   R5,15,NEW.AREA_NEXT             NEXT AREA\n         FREEMAIN RU,                          FREE THIS AREA          +\n               A=(R1),                                                 +\n               LV=AREA_DSECT_L\n         LTR   R5,R5                           ANOTHER AREA BLOCK?\n         BNZ   INIT0010                        YES\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nINIT0020 DS    0H\n         ITRACE ID=ZERO\n         XC    DXD_I(DXD_L),DXD_I\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         L     R1,DISCOMM_CSECT_LENGTH         CSECT LENGTH\n         BCTR  R1,0                            MINUS 1\n         ST    R1,DXD_MAX_DISP                 MAX DISP\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         ICM   R6,15,DISCOMM_ALL_AREA_NEXT     ANY DATA AREAS?\n         BNZ   SCAN0010                        YES\n         LA    R6,DUMMY_FF                     USE DUMMY INSTEAD\nDATA     USING AREA_DSECT,R6\n*---------------------------------------------------------------------*\n*                                                                     *\n*        Top of scan loop                                             *\n*                                                                     *\n*---------------------------------------------------------------------*\nSCAN0010 DS    0H\n         ITRACE ID=SCAN0010,                                           +\n               DATA1=DXD_SCAN_DISP,                                    +\n               DATA2=DATA.AREA_BEGIN\n         ago   .a\n         CLC   DXD_SCAN_DISP,X_0074\n         BL    SCAN0015\nX_0074   DC    X'00000074'\nSCAN0015 DS    0H\n.a       anop\n         CLC   DXD_SCAN_DISP,DXD_MAX_DISP      AT MAX DISP?\n         BH    SCAN0300                        YES.. END OF CSECT\n         CLC   DXD_SCAN_DISP,DATA.AREA_BEGIN   AT DATA AREA?\n         BNE   SCAN0030                        NO\n*---------------------------------------------------------------------*\n*                                                                     *\n*        We are at a known data area                                  *\n*                                                                     *\n*        Add an AREA block for any data detected                      *\n*                                                                     *\n*        If the data area ends at the end of the CSECT, we're done    *\n*                                                                     *\n*        Otherwise update the scan disp                               *\n*                  go to the next data area                           *\n*                                                                     *\n*---------------------------------------------------------------------*\n         ITRACE ID=AT_AREA,                                            +\n               RDATA1=R6,                                              +\n               DATA2=DATA.AREA_BEGIN\n         OC    DXD_DATA_LENGTH,DXD_DATA_LENGTH ANY DATA DETECTED?\n         BZ    SCAN0020                        NO\n         BAL   R15,SCAN0400                    GETMAIN NEW AREA BLOCK\n         ITRACE ID=NEWDATA1,                                           +\n               DATA1=(DXD_AREA_START,4),                               +\n               DATA2=(DXD_DATA_LENGTH,4)\n         MVI   NEW.AREA_TYPE,$AREA_DATA        DATA AREA\n         MVI   NEW.AREA_DATA_TYPE,$DATA_INTERNAL\n         MVC   NEW.AREA_BEGIN,DXD_AREA_START   SET START DISP\n         L     R1,DXD_SCAN_DISP                CURRENT DISP\n         BCTR  R1,0                            MINUS 1\n         ST    R1,NEW.AREA_END                 SET END DISP\n         MVC   NEW.AREA_LENGTH,DXD_DATA_LENGTH SET LENGTH\nSCAN0020 DS    0H\n         ITRACE ID=NEXTAREA\n         ICM   R1,15,DATA.AREA_END             END OF AREA\n         LA    R1,1(,R1)                       PLUS 1\n         ST    R1,DXD_AREA_START               START OF NEXT AREA\n         ST    R1,DXD_SCAN_DISP                NEXT BYTE TO EXAMINE\n         XC    DXD_DATA_LENGTH,DXD_DATA_LENGTH RESET DATA LENGTH\n         ICM   R6,15,DATA.AREA_NEXT            NEXT DATA AREA\n         BNZ   SCAN0010                        GO TO TOP OF LOOP\n         LA    R6,DUMMY_FF                     SET TO DUMMY\n         B     SCAN0010                        GO TO TOP OF LOOP\n* --------------------------------------------------------------------*\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* --------------------------------------------------------------------*\nSCAN0030 DS    0H\n         ITRACE ID=SCAN0030,                                           +\n               DATA1=DXD_SCAN_DISP\n         TM    DXD_SCAN_DISP+3,X'01'           AT ODD DISP?\n         BO    SCAN0200                        YES\n         ICM   R5,15,DATA.AREA_BEGIN           START OF NEXT DATA AREA\n         BP    SCAN0040\n         L     R5,DXD_MAX_DISP                 LIMIT TO MAX\nSCAN0040 DS    0H\n         S     R5,DXD_SCAN_DISP                COMPUTE LENGTH TO SCAN\n         ITRACE ID=SCAN0040,                                           +\n               RDATA1=R5\n         ST    R5,DXD_ALPHA_SCAN               LENGTH TO SEARCH\n         CH    R5,H6                           AT LEAST 6 BYTES?\n         BL    SCAN0100                        NO\n         SR    R3,R3                           CLEAR FOR COUNTER\n         L     R4,DISCOMM_CSECT_TEXT           TEXT'S ADDRESS\n         A     R4,DXD_SCAN_DISP                PLUS CURRENT DISP\nSCAN0050 DS    0H\n         TRT   0(1,R4),ALPHA_TABLE             ALPHA?\n         BNZ   SCAN0060                        NO\n         LA    R3,1(,R3)                       ADD 1 TO LENGTH SEARCHED\n         LA    R4,1(,R4)                       ADD 1 TO ADDRESS\n         BCT   R5,SCAN0050                     CHECK AGAIN\n         L     R3,DXD_ALPHA_SCAN               RESTORE LENGTH SCANNED\nSCAN0060 DS    0H\n         ITRACE ID=SCAN0060,                                           +\n               RDATA1=R3                       NBR OF ALPHAS\n         CH    R3,H6                           SIX OR MORE?\n         BL    SCAN0100                        NO\nSCAN0070 DS    0H\n         ITRACE ID=NEWDATA2,                                           +\n               DATA1=(DXD_AREA_START,4),                               +\n               DATA2=(DXD_DATA_LENGTH,4)\n         BAL   R15,SCAN0400                    GETMAIN NEW AREA BLOCK\n         MVI   NEW.AREA_TYPE,$AREA_DATA\n         MVI   NEW.AREA_DATA_TYPE,$DATA_INTERNAL\n         L     R1,DXD_AREA_START               STARTING DISP\n         STCM  R1,15,NEW.AREA_BEGIN            SET BEGIN DISP\n         AR    R1,R3                           PLUS LENGTH\n         BCTR  R1,0                            MINUS 1\n         STCM  R1,15,NEW.AREA_END              SET AREA END\n         STCM  R3,15,NEW.AREA_LENGTH           SET LENGTH\n         A     R3,DXD_AREA_START               PLUS AREA START ADDR\n         ST    R3,DXD_AREA_START               NEXT AREA START ADDR\n         ST    R3,DXD_SCAN_DISP                SET CURRENT SCAN ADDR\n         XC    DXD_DATA_LENGTH,DXD_DATA_LENGTH RESET DATA LENGTH\n         B     SCAN0010                        GO TO TOP OF LOOP\n* --------------------------------------------------------------------*\n*                                                                     *\n* --------------------------------------------------------------------*\nSCAN0100 DS    0H\n         ITRACE ID=SCAN0100,                                           +\n               DATA1=(DISCOMM_CSECT_TEXT,4),                           +\n               DATA2=(DXD_SCAN_DISP,4)\n         ICM   R1,15,DISCOMM_CSECT_TEXT        TEXT ADDR\n         A     R1,DXD_SCAN_DISP                PLUS SCAN DISP\n         ST    R1,DXD_EXIT_PARM2               INSTRUCTION TEXT ADDR\n         SR    R4,R4                           CLEAR R4\n         ICM   R4,1,0(R1)                      OPCODE\n         ITRACE ID=OPCODE_1,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R4\n         LTR   R4,R4                           OPCODE ZERO?\n         BZ    SCAN0200                        ZERO.. NOT VALID\n         SLL   R4,2                            MULTIPLY BY 4\n         A     R4,DISCOMM_OPCODE_TABLE_ADDR    PLUS BASE\n         ICM   R4,15,0(R4)                     OPCODE ENTRY\n         BZ    SCAN0200                        ZERO.. NOT VALID\nOP1      USING OPCODE_DSECT,R4\n         ICM   R15,15,OP1.OPCODE_EXIT          MODIFICATION EXIT?\n         BZ    SCAN0110                        NO\n         ST    R4,DXD_EXIT_PARM1\n         LA    R1,DXD_EXIT_PARMS\n         ITRACE ID=OP1_EXIT,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R15\n         BALR  R14,R15                         CALL THE EXIT\n         ITRACE ID=OP1_X,                                              +\n               DATA1=(OP1.OPCODE_MNEMONIC,5),                          +\n               DATA2=(OP1.OPCODE_LENGTH,2)\nSCAN0110 DS    0H\n         SR    R2,R2\n         ICM   R2,3,OP1.OPCODE_LENGTH          LENGTH OF INSTRUCTION\n         BZ    SCAN0200                        NOT A VALID OPCODE\n         A     R2,DXD_SCAN_DISP                PLUS SCAN DISP\n         BCTR  R2,0                            DISP OF LAST BYTE\n         CL    R2,DATA.AREA_BEGIN              OVERLAP DATA AREA?\n         BH    SCAN0200                        YES.. NOT AN INSTRUCTION\n         CL    R2,DXD_MAX_DISP                 BEYOND MAX DISP?\n         BH    SCAN0200                        YES.. NOT AN INSTRUCTION\n         ITRACE ID=XX,                                                 +\n               DATA1=(OP1.OPCODE_MNEMONIC,5),                          +\n               DATA2=(OP1.OPCODE_FLAGS,1)\n         TM    OP1.OPCODE_FLAGS,$OPCODE_BRANCH BRANCH INSTRUCTION?\n         BO    SCAN0130                        YES\n         LA    R2,1(,R2)                       RESTORE FULL LENGTH\n         A     R2,DISCOMM_CSECT_TEXT           PLUS TEXT BASE ADDR\n         ST    R2,DXD_EXIT_PARM2\n         SR    R3,R3                           CLEAR R3\n         ICM   R3,1,0(R2)                      OPCODE\n         ITRACE ID=OPCODE_2,                                           +\n               RDATA1=R2,                                              +\n               RDATA2=R3\n         LTR   R3,R3                           OPCODE ZERO?\n         BZ    SCAN0200                        ZERO.. NOT VALID\n         SLL   R3,2                            MULTIPLY BY 4\n         A     R3,DISCOMM_OPCODE_TABLE_ADDR    PLUS BASE\n         ICM   R3,15,0(R3)                     OPCODE ENTRY\n         BZ    SCAN0200                        ZERO.. NOT VALID\nOP2      USING OPCODE_DSECT,R3\n         ST    R3,DXD_EXIT_PARM1               OPCODE ENTRY ADDR\n         ICM   R15,15,OP2.OPCODE_EXIT          MODIFICATION EXIT?\n         BZ    SCAN0120                        NO\n         LA    R1,DXD_EXIT_PARMS\n         ITRACE ID=OP2_EXIT,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R15\n         BALR  R14,R15                         CALL EXIT\n         ITRACE ID=OP2_X,                                              +\n               DATA1=(OP2.OPCODE_MNEMONIC,5),                          +\n               DATA2=(OP2.OPCODE_LENGTH,2)\nSCAN0120 DS    0H\n         SR    R1,R1\n         ICM   R1,3,OP1.OPCODE_LENGTH          OPCODE 1 LENGTH\n         BZ    SCAN0200                        NOT A VALID OPCODE\n         SR    R2,R2\n         ICM   R2,3,OP2.OPCODE_LENGTH          OPCODE 2 LENGTH\n         BZ    SCAN0200                        NOT A VALID OPCODE\n         AR    R1,R2                           ADD LENGTHS\n         BCTR  R1,R0                           DISP OF LAST BYTE\n         A     R1,DXD_SCAN_DISP                PLUS OPCODE 1 DISP\n         CL    R1,DATA.AREA_BEGIN              OVERLAP DATA?\n         BH    SCAN0200                        YES\n         CL    R1,DXD_MAX_DISP                 BEYOND MAX DISP?\n         BH    SCAN0200                        YES\nSCAN0130 DS    0H\n         OC    DXD_DATA_LENGTH,DXD_DATA_LENGTH ANY DATA DETECTED?\n         BZ    SCAN0140                        NO\n         BAL   R15,SCAN0400                    GETMAIN NEW DATA AREA\n         ITRACE ID=NEWDATA3,                                           +\n               DATA1=(DXD_AREA_START,4),                               +\n               DATA2=(DXD_DATA_LENGTH,4)\n         MVI   NEW.AREA_TYPE,$AREA_DATA\n         MVI   NEW.AREA_DATA_TYPE,$DATA_INTERNAL\n         MVC   NEW.AREA_BEGIN,DXD_AREA_START   SET START DISP\n         L     R1,DXD_SCAN_DISP                CURRENT DISP\n         BCTR  R1,0                            MINUS 1\n         ST    R1,NEW.AREA_END                 SET END DISP\n         MVC   NEW.AREA_LENGTH,DXD_DATA_LENGTH SET LENGTH\n         MVC   DXD_AREA_START,DXD_SCAN_DISP    CHANGE AREA START\n         XC    DXD_DATA_LENGTH,DXD_DATA_LENGTH RESET DATA LENGTH\nSCAN0140 DS    0H\n         ITRACE ID=NEW_INST,                                           +\n               DATA1=(DXD_AREA_START,4),                               +\n               DATA2=(OP1.OPCODE_MNEMONIC,5)\n         BAL   R15,SCAN0400                    GETMAIN AREA BLOCK\n         MVI   NEW.AREA_TYPE,$AREA_INSTRUCTION AREA IS AN INSTRUCTION\n         MVC   NEW.AREA_BEGIN,DXD_AREA_START   STARTING DISP\n         SR    R1,R1\n         ICM   R1,3,OP1.OPCODE_LENGTH          INSTRUCTION LENGTH\n         STCM  R1,15,NEW.AREA_LENGTH           AREA LENGTH\n         A     R1,DXD_AREA_START               PLUS START\n         ST    R1,DXD_SCAN_DISP                UPDATE DISP TO EXAMINE\n         ST    R1,DXD_AREA_START               START OF NEXT AREA\n         BCTR  R1,0                            MINUS 1\n         STCM  R1,15,NEW.AREA_END              END DISP\n         ST    R4,NEW.AREA_OPCODE              CORRESPONDING OPCODE\n         XC    DXD_DATA_LENGTH,DXD_DATA_LENGTH RESET DATA LENGTH\n         ITRACE ID=NEW_X,                                              +\n               DATA1=NEW.AREA_BEGIN,                                   +\n               DATA2=(NEW.AREA_TYPE,1)\n         B     SCAN0010\n* --------------------------------------------------------------------*\n*                                                                     *\n* --------------------------------------------------------------------*\nSCAN0200 DS    0H\n         ITRACE ID=SCAN0200,                                           +\n               DATA1=(DXD_SCAN_DISP,4)\n         L     R1,DXD_SCAN_DISP                CURRENT SCAN DISP\n         LA    R1,1(,R1)                       PLUS 1\n         ST    R1,DXD_SCAN_DISP                UPDATE DISP\n         L     R1,DXD_DATA_LENGTH              DATA FOUND SO FAR\n         LA    R1,1(,R1)                       PLUS 1\n         ST    R1,DXD_DATA_LENGTH              UPDATE LENGTH\n         B     SCAN0010                        GO BACK TO TOP OF LOOP\n* --------------------------------------------------------------------*\n*                                                                     *\n*                                                                     *\n*         End of CSECT                                                *\n*                                                                     *\n*         Add final AREA block if necessary                           *\n*                                                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\nSCAN0300 DS    0H\n         ITRACE ID=SCAN0300,                                           +\n               DATA1=(DXD_AREA_START,4),                               +\n               DATA2=(DXD_DATA_LENGTH,4)\n         OC    DXD_DATA_LENGTH,DXD_DATA_LENGTH ANY DATA FOUND?\n         BZ    SCAN0310                        NO\n         BAL   R15,SCAN0400                    GETMAIN NEW AREA BLOCK\n         MVC   NEW.AREA_BEGIN,DXD_AREA_START   SET BEGINNING DISP\n         L     R3,DXD_SCAN_DISP                STOPPING DISP\n         BCTR  R3,0                            MINUS 1\n         ST    R3,NEW.AREA_END                 SET ENDING DISP\n         S     R3,NEW.AREA_BEGIN               AREA LENGTH\n         LA    R3,1(,R3)                       PLUS 1\n         ST    R3,NEW.AREA_LENGTH              SET LENGTH\n         MVI   NEW.AREA_TYPE,$AREA_DATA        AREA IS DATA\n         MVI   NEW.AREA_DATA_TYPE,$DATA_INTERNAL   INTERNALLY DETECTED\n         ITRACE ID=NEWDATA2,                                           +\n               RDATA1=R1,                                              +\n               DATA2=NEW.AREA_BEGIN\n         DROP  NEW\n* --------------------------------------------------------------------*\n*                                                                     *\n*                                                                     *\n*        There are now two chains that together 'describe' the        *\n*        entire CSECT.                                                *\n*                                                                     *\n*        One is the 'ALL' AREA chain.  The other is the new areas     *\n*        detected during the scan.                                    *\n*                                                                     *\n*        Now \"merge\" the two chains.  The result will be one chain    *\n*        of AREA blocks that \"describe\" every byte of the CSECT.      *\n*                                                                     *\n*                                                                     *\n* --------------------------------------------------------------------*\nSCAN0310 DS    0H\n         ITRACE ID=RECHAIN,                                            +\n               DATA1=DXD_NEW_AREAS,                                    +\n               DATA2=DISCOMM_ALL_AREA_NEXT\n         L     R2,DISCOMM_ALL_AREA_NEXT        FIRST ON CHAIN\n         XC    DISCOMM_ALL_AREA_NEXT,DISCOMM_ALL_AREA_NEXT\n         LTR   R2,R2\n         BNZ   SCAN0320                        ANYTHING ON CHAIN?\n         LA    R2,DUMMY_FF                     SET TO DUMMY AREA\nA        USING AREA_DSECT,R2\nNEW      USING AREA_DSECT,R1\nSCAN0320 DS    0H\n         ICM   R3,15,DXD_NEW_AREAS             ANY NEW AREAS?\n         BNZ   SCAN0330                        YES\nB        USING AREA_DSECT,R3\n         LA    R3,DUMMY_FF                     SET TO DUMMY AREA\nSCAN0330 DS    0H\n         XC    DXD_NEW_AREAS,DXD_NEW_AREAS     RESET\n         LA    R4,DISCOMM_ALL_AREA_PREV        RESULT CHAIN POINT\nPREV     USING AREA_DSECT,R4\nSCAN0340 DS    0H\n         ITRACE ID=A_B,                                                +\n               DATA1=A.AREA_BEGIN,                                     +\n               DATA2=B.AREA_BEGIN\n         CLC   A.AREA_BEGIN,B.AREA_BEGIN       COMPARE A WITH B\n         BL    SCAN0350                        A < B\n         BH    SCAN0360                        A > B\n         C     R2,=A(DUMMY_FF)                 AT END OF CHAINS?\n         BE    EXIT0000                        YES\n         DC    H'0'\nSCAN0350 DS    0H\n         ITRACE ID=ADD_A,                                              +\n               RDATA1=R2,                                              +\n               DATA2=A.AREA_BEGIN\n         LR    R1,R2                           COPY ADDRESS\n         L     R2,A.AREA_NEXT                  NEXT ON CHAIN\n         ST    R1,PREV.AREA_NEXT\n         ST    R4,NEW.AREA_PREV\n         XC    NEW.AREA_NEXT,NEW.AREA_NEXT\n         LR    R4,R1\n         LTR   R2,R2                           ANOTHER BLOCK?\n         BNZ   SCAN0340                        YES\n         LA    R2,DUMMY_FF                     SET TO DUMMY AREA\n         B     SCAN0340\nSCAN0360 DS    0H\n         ITRACE ID=ADD__B,                                             +\n               RDATA1=R3,                                              +\n               DATA2=B.AREA_BEGIN\n         LR    R1,R3\n         L     R3,B.AREA_NEXT\n         ST    R1,PREV.AREA_NEXT\n         ST    R4,NEW.AREA_PREV\n         XC    NEW.AREA_NEXT,NEW.AREA_NEXT\n         LR    R4,R1\n         LTR   R3,R3                           ANOTHER AREA?\n         BNZ   SCAN0340                        YES\n         LA    R3,DUMMY_FF                     SET TO DUMMY\n         B     SCAN0340\n* --------------------------------------------------------------------*\n*                                                                     *\n*        GETMAIN/init new AREA blocks                                 *\n*                                                                     *\n* --------------------------------------------------------------------*\nSCAN0400 DS    0H\n         ST    R15,DXD_SAVE_LINK\n         GETMAIN RU,                                                   +\n               LV=AREA_DSECT_L,                                        +\n               LOC=ANY\n         LR    R5,R1\n         ITRACE ID=NEW_AREA,                                           +\n               RDATA1=R5\n         XC    NEW.AREA_DSECT(AREA_DSECT_L),NEW.AREA_DSECT\n         MVC   NEW.AREA_EYE,AREA_ID            IDENTIFY AREA\n         OC    DXD_NEW_AREAS,DXD_NEW_AREAS     ANY AREAS YET?\n         BNZ   SCAN0410                        YES\n         ST    R5,DXD_NEW_AREAS                FIRST NEW AREA\nSCAN0410 DS    0H\n         ICM   R2,15,DXD_LAST_AREA             LAST AREA ADDED\n         BZ    SCAN0420                        NONE YET\nLAST     USING AREA_DSECT,R2\n         ST    R5,LAST.AREA_NEXT               CHAIN TO LAST ON CHAIN\n         DROP  LAST\nSCAN0420 DS    0H\n         ST    R5,DXD_LAST_AREA                CHANGE 'LAST' AREA\n         ST    R2,NEW.AREA_PREV                CHAIN PREVIOUS BLOCK\n         L     R15,DXD_SAVE_LINK\n         BR    R15\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         LA    R1,DUMMY_FF                     DUMMY 'AREA'\n         ITRACE ID=EXIT0000,                                           +\n               RDATA1=R1\n         ICM   R5,15,DISCOMM_ALL_AREA_NEXT     FIRST DATA AREA\n         BZ    EXIT0040                        NO DATA AREAS\nNEW      USING AREA_DSECT,R5\nEXIT0010 DS    0H\n         ITRACE ID=EXIT0010,                                           +\n               RDATA1=R5,                                              +\n               DATA2=(NEW.AREA_NEXT,4)\n         C     R1,NEW.AREA_NEXT                POINTING TO 'DUMMY'?\n         BE    EXIT0020                        YES\n         ICM   R5,15,NEW.AREA_NEXT             NEXT AREA\n         BNZ   EXIT0010                        LOOP\n         B     EXIT0030\nEXIT0020 DS    0H\n         ITRACE ID=EXIT0020\n         XC    NEW.AREA_NEXT,NEW.AREA_NEXT     CLEAR ADDRESS\nEXIT0030 DS    0H\n         ITRACE ID=EXIT0030\n         ICM   R5,15,DISCOMM_ALL_AREA_NEXT     FIRST DATA AREA\n         XC    NEW.AREA_PREV,NEW.AREA_PREV     NO PREV IN 1ST BLOCK\nEXIT0040 DS    0H\n         ITRACE ID=EXIT0040\n         L     R13,4(,R13)                     RESTORE REGISTER 13\n         LM    R14,R12,12(R13)                 RESTORE OTHER REGISTERS\n         SR    R15,R15                         GIVE GOOD RETURN CODE\n         BR    R14                             RETURN TO CALLER\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START DC   Q(DXDSCAN)\nH6        DC   H'6'\nAREA_ID   DC   CL8'AREA'\n\nDUMMY_FF  DC   (AREA_DSECT_L)X'FF'\n\n\nALPHA_TABLE        DS  0C 0 1 2 3 4 5 6 7 8 9 A B C D E F'\n                   DC  X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'   00-0F\n                   DC  X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'   10-1F\n                   DC  X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'   20-2F\n                   DC  X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'   30-3F\n                   DC  X'00FFFFFFFFFFFFFFFFFFFF00FF0000FF'   40-4F\n                   DC  X'FFFFFFFFFFFFFFFFFFFFFF00000000FF'   50-5F\n                   DC  X'0000FFFFFFFFFFFFFFFFFF00FF00FFFF'   60-6F\n                   DC  X'FFFFFFFFFFFFFFFFFFFF000000000000'   70-7F\n                   DC  X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'   80-8F\n                   DC  X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'   90-9F\n                   DC  X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'   A0-AF\n                   DC  X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'   B0-BF\n                   DC  X'FF000000000000000000FFFFFFFFFFFF'   C0-CF\n                   DC  X'FF000000000000000000FFFFFFFFFFFF'   D0-DF\n                   DC  X'FFFF0000000000000000FFFFFFFFFFFF'   E0-EF\n                   DC  X'00000000000000000000FFFFFFFFFFFF'   F0-FF\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDSCAN            DSECT\n                   COPY DXDPREF\nDXD_I              DS  0A\nDXD_MAX_DISP       DS  F                MAX DISPLACEMENT\nDXD_NEW_AREAS      DS  A                FIRST NEW AREA\nDXD_LAST_AREA      DS  A                LAST NEW AREA BLOCK\nDXD_AREA_START     DS  A                DISP CURRENT AREA STARTED\nDXD_SCAN_DISP      DS  A                DISP CURRENTLY BEING EXAMINED\nDXD_SAVE_LINK      DS  A\nDXD_DATA_LENGTH    DS  F                NBR OF BYTES OF DATA DETECTED\nDXD_ALPHA_SCAN     DS  F                CONSECUTIVE ALPHA CHARACTERS\n\nDXD_EXIT_PARMS     DS  0A\nDXD_EXIT_PARM1     DS  A                OPCODE TABLE ENTRY ADDR\nDXD_EXIT_PARM2     DS  A                INSTRUCTION TEXT ADDR\nDXD_L              EQU *-DXD_I\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n         END     DISSCAN\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISSLIST": {"ttr": 2311, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00!\\x01\\t3\\x8f\\x01\\t6_\\x08 \\x02\"\\x02\\x19\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2009-12-04T00:00:00", "modifydate": "2009-12-31T08:20:21", "lines": 546, "newlines": 537, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: DISSLIST                                              *\n*                                                                     *\n*  FUNCTION:                                                          *\n*    Display/allow definition of assembler SYSLIB data sets.          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISSLIST CSECT\nDISSLIST AMODE 31\nDISSLIST RMODE ANY\n         USING DISSLIST,R15\n         B     MOD0000                           SKIP EYECATCHER\nMODID    DC    CL8'DISSLIST'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         DROP  R15\n         STM   R14,R12,12(R13)                   SAVE REGS\n         LR    R10,R15                           SET BASE REG\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISSLIST,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR                 WORK AREA\n         A     R15,DXD_START                     PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         USING DXDSLIST,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n         USING SYSLIB_DSECT,R5\n         USING IHADCB,SYSLIB_DSECT\n         USING IECSDSL1,DSINFO_DSCB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVI   DXD_FLAGS,0\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        If R1 is zero display existing KSDS list                     *\n*        If R1 not zero, display list passed in R1                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ST    R1,DXD_SYSLIB_NEXT\n         ST    R1,DXD_FIRST_DISPLAYED\n         LTR   R1,R1                             R1 ZERO?\n         BNZ   INIT0020                          NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        In order to allow the user to \"cancel\" changes,              *\n*        first \"copy\" the existing SYSLIB chain.                      *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         XC    DXD_SYSLIB_NEXT,DXD_SYSLIB_NEXT\n         XC    DXD_FIRST_DISPLAYED,DXD_FIRST_DISPLAYED\n         ITRACE ID=COPY\n         LA    R2,DXD_SYSLIB_PREV\nPREV     USING SYSLIB_DSECT,R2\n         ICM   R5,15,DISCOMM_SYSLIB_NEXT         FIRST LIB\n         BZ    INIT0020\nINIT0010 DS    0H\n         GETMAIN RU,                             GETMAIN NEW LIB BLOCK +\n               LV=SYSLIB_DSECT_L,                                      +\n               LOC=ANY\nNEW      USING SYSLIB_DSECT,R1\n         MVC   NEW.SYSLIB_DSECT(SYSLIB_DSECT_L),SYSLIB_DSECT\n         ST    R1,PREV.SYSLIB_NEXT\n         LR    R2,R1\n         ICM   R5,15,SYSLIB_NEXT                 ANOTHER LIB?\n         BNZ   INIT0010                          YES.. PROCESS IT\n         MVC   DXD_FIRST_DISPLAYED,DXD_SYSLIB_NEXT\n         DROP  NEW,PREV\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0020 DS    0H\n         L     R0,SPF_VDEPTH                     NBR OF LINES\n         SLL   R0,2                              MULTIPLY BY 4\n         ST    R0,DXD_SYSLIB_TABLE_SIZE\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ST    R1,DXD_SYSLIB_TABLE               SAVE ADDRESS\n         ITRACE ID=A_TABLE,                                            +\n               RDATA1=R1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         L     R0,DISCOMM_VDATA_ADDR\n         L     R1,DISCOMM_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                            INITIALIZE VDATA\n         L     R0,DXD_SYSLIB_TABLE\n         L     R1,DXD_SYSLIB_TABLE_SIZE\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                            INIT AREA TABLE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R6,SPF_VWIDTH                     SCREEN WIDTH\n         SH    R6,=Y(MSG01_L)                    MINUS WIDTH IN USE\n         SRL   R6,1                              DIVIDE BY 2\n         A     R6,DISCOMM_VDATA_ADDR             PLUS VDATA ADDR\n         L     R7,SPF_VDEPTH                     NBR OF LINES\nMAIN0020 DS    0H\n         MVC   0(MSG01_L,R6),MSG01               INITIALIZE\n         A     R6,SPF_VWIDTH                     NEXT LINE\n         BCT   R7,MAIN0020                       LOOP\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R6,SPF_VWIDTH                     SCREEN WIDTH\n         SH    R6,=Y(MSG01_L)                    MINUS WIDTH IN USE\n         SRL   R6,1                              DIVIDE BY 2\n         A     R6,DISCOMM_VDATA_ADDR             PLUS VDATA ADDR\n         USING MSG01,R6\n         L     R7,SPF_VDEPTH\nMAIN0030 DS    0H\n         L     R3,DXD_SYSLIB_TABLE               FIRST 'SLOT'\n         XC    DXD_NBR_DISPLAYED,DXD_NBR_DISPLAYED\n         ICM   R5,15,DXD_FIRST_DISPLAYED         FIRST TO DISPLAY\n         BZ    MAIN0060                          NOTHING DEFINED YET\nMAIN0040 DS    0H\n         ST    R5,DXD_LAST_DISPLAYED             SAVE ADDR\n         ST    R5,0(R3)                          SAVE ADDR\n         MVC   MSG01_DSN,SYSLIB_DSNAME           COPY DATA SET NAME\n         LA    R1,1                              CONSTANT 1\n         AH    R1,DXD_NBR_DISPLAYED              PLUS TOTAL SO FAR\n         STH   R1,DXD_NBR_DISPLAYED              SAVE TOTAL\n         LA    R3,4(,R3)                         NEXT IN ADDR TABLE\n         A     R6,SPF_VWIDTH                     NEXT LINE\n         BCT   R7,MAIN0050\n         B     MAIN0060\nMAIN0050 DS    0H\n         ICM   R5,15,SYSLIB_NEXT\n         BNZ   MAIN0040\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0060 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_DISSLIST    SET PANEL NAME\n         MVC   SESS_DISP_VDATA_ADDR,DISCOMM_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DISCOMM_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP                 DISP ENTRY POINT\n         BALR  R14,R15                           DISPLAY\n         ITRACE ID=DISP_RC,                                            +\n               RDATA1=R15,                                             +\n               DATA2=SPF_ZVERB\n         LTR   R2,R15                            RC = 0?\n         BNZ   MAIN0500                          NO\n         CLC   CANCEL,SPF_ZCMD                   CANCEL?\n         BE    MAIN1000                          YES\n         CLC   CAN,SPF_ZCMD                      CAN(CEL)?\n         BE    MAIN1000                          YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Verify all DSNs                                              *\n*          cataloged                                                  *\n*          are PDSES                                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R6,SPF_VWIDTH                     SCREEN WIDTH\n         SH    R6,=Y(MSG01_L)                    MINUS WIDTH IN USE\n         SRL   R6,1                              DIVIDE BY 2\n         A     R6,DISCOMM_VDATA_ADDR             PLUS VDATA ADDR\n         L     R7,SPF_VDEPTH                     NBR OF LINES\n         NI    DXD_FLAGS,255-$DXD_ERROR          RESET FLAG\nMAIN0070 DS    0H\n         MVC   MSG01_MSG,COMM_BLANKS             RESET MSG\n         OC    MSG01_DSN,COMM_BLANKS             TRANSLATE TO UPPER\n         CLC   MSG01_DSN,COMM_BLANKS             BLANK?\n         BE    MAIN0090                          YES\n         MVC   DSINFO_DSN,MSG01_DSN              COPY DSN\n         LA    R1,DSINFREQ\n         L     R15,V_DISDSINF                    OSDSINFO ENTRY POINT\n         BALR  R14,R15\n         ITRACE ID=DINFO_RC,                                           +\n               RDATA1=R15\n         LTR   R15,R15                           ERROR?\n         BZ    MAIN0080                          NO\n         MVC   MSG01_MSG,COMM_MSG_1              COPY MESSAGE\n         OI    DXD_FLAGS,$DXD_ERROR              SET ERROR FLAG\n         B     MAIN0090\nMAIN0080 DS    0H\n         ITRACE ID=DS_TYPE,                                            +\n               DATA1=DSINFO_DATASET_TYPE\n         TM    DS1DSORG,DS1DSGPO                 PDS?\n         BO    MAIN0090                          YES\n         OI    DXD_FLAGS,$DXD_ERROR              SET ERROR FLAG\n         MVC   MSG01_MSG(ERR01_L),ERR01\nMAIN0090 DS    0H\n         A     R6,SPF_VWIDTH                     NEXT LINE\n         BCT   R7,MAIN0070\n         TM    DXD_FLAGS,$DXD_ERROR              ANY ERRORS?\n         BO    MAIN0060                          DISPLAY W/MSG(S)\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Determine if any libs were                                   *\n*          updated                                                    *\n*          removed                                                    *\n*          added                                                      *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R6,SPF_VWIDTH                     SCREEN WIDTH\n         SH    R6,=Y(MSG01_L)                    MINUS WIDTH IN USE\n         SRL   R6,1                              DIVIDE BY 2\n         A     R6,DISCOMM_VDATA_ADDR             PLUS VDATA ADDR\n         L     R7,SPF_VDEPTH                     NBR OF LINES\n         L     R3,DXD_SYSLIB_TABLE               FIRST LIB\nMAIN0130 DS    0H\n         ITRACE ID=MAIN0130\n         L     R5,0(,R3)                         LIB BLOCK IF USED\n         OC    MSG01_DSN,COMM_BLANKS             'TRANSLATE'\n         CLC   MSG01_DSN,COMM_BLANKS             BLANK?\n         BE    MAIN0180                          YES\n         LTR   R5,R5                             LIB BLOCK EXIST?\n         BZ    MAIN0150                          NO\n         CLC   MSG01_DSN,SYSLIB_DSNAME           SAME DSN?\n         BE    MAIN0220                          YES\nMAIN0140 DS    0H\n         ITRACE ID=UPDTLIB\n         OI    DXD_FLAGS,$DXD_UPDATE             LIB HAS BEEN UPDATED\n         MVC   SYSLIB_DSNAME,MSG01_DSN           CHANGE DSN\n         B     MAIN0220\nMAIN0150 DS    0H\n         ITRACE ID=NEW_LIB\n         OI    DXD_FLAGS,$DXD_UPDATE\n         GETMAIN RU,                                                   +\n               LV=SYSLIB_DSECT_L,                                      +\n               LOC=ANY\nNEW      USING SYSLIB_DSECT,R1\n         XC    NEW.SYSLIB_DSECT(SYSLIB_DSECT_L),NEW.SYSLIB_DSECT\n         MVC   NEW.SYSLIB_EYE,SYSLIB_ID          IDENTIFY BLOCK\n         MVC   NEW.SYSLIB_DSNAME,MSG01_DSN       SET DSN\n         LA    R5,DXD_SYSLIB_PREV                FIRST LIB\nMAIN0160 DS    0H\n         ICM   R2,15,SYSLIB_NEXT                 ANOTHER ON CHAIN?\n         BZ    MAIN0170                          YES\n         LR    R5,R2                             COPY ADDRESS\n         B     MAIN0160\nMAIN0170 DS    0H\n         ST    R1,SYSLIB_NEXT                    SET 'NEXT' IN PREVIOUS\n         ST    R5,NEW.SYSLIB_PREV                SET PREV IN NEW\n         OC    DXD_FIRST_DISPLAYED,DXD_FIRST_DISPLAYED\n         BNZ   MAIN0220                          BLOCK PRESENT\n         ST    R1,DXD_FIRST_DISPLAYED            SET FIRST ON CHAIN\n         B     MAIN0220\n         DROP  NEW\nMAIN0180 DS    0H\n         LTR   R5,R5                             LIB BLOCK EXIST?\n         BZ    MAIN0220                          NO\n         OI    DXD_FLAGS,$DXD_UPDATE             A LIB WAS UPDATED\n         ITRACE ID=DEL_LIB,                      DELETING A LIB BLOCK  +\n               RDATA1=R5\n         ICM   R1,15,SYSLIB_NEXT                 NEXT LIB ON CHAIN\n         BZ    MAIN0190\nNEXT     USING SYSLIB_DSECT,R1\n         MVC   NEXT.SYSLIB_PREV,SYSLIB_PREV      SET PREV IN NEXT\n         DROP  NEXT\nMAIN0190 DS    0H\n         ICM   R1,15,SYSLIB_PREV                 PREVIOUS ON CHAIN\n         BZ    MAIN0200                          NO PREVIOUS BLOCK\nPREV     USING SYSLIB_DSECT,R1\n         MVC   PREV.SYSLIB_NEXT,SYSLIB_NEXT      SET NEXT IN PREVIOUS\nMAIN0200 DS    0H\n         C     R5,DXD_FIRST_DISPLAYED            FIRST LIB DISPLAYED?\n         BNE   MAIN0210                          NO\n         MVC   DXD_FIRST_DISPLAYED,SYSLIB_NEXT   CHANGE TO NEXT BLOCK\nMAIN0210 DS    0H\n         FREEMAIN RU,                            FREEMAIN LIB BLOCK    +\n               A=(R5),                                                 +\n               LV=SYSLIB_DSECT_L\n         XC    0(4,R3),0(R3)                     CLEAR ADDR IN TABLE\nMAIN0220 DS    0H\n         ITRACE ID=NEXT\n         A     R6,SPF_VWIDTH                     NEXT LINE\n         LA    R3,4(,R3)                         NEXT IN TABLE\n         BCT   R7,MAIN0130                       LOOP\n         TM    DXD_FLAGS,$DXD_UPDATE             ANY UPDATES?\n         BO    MAIN0010                          YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLI   SPF_ZVERB,C'B'                    BOTTOM?\n         BE    MAIN0300\n         CLI   SPF_ZVERB,C'D'                    DOWN?\n         BE    MAIN0320\n         CLI   SPF_ZVERB,C'T'                    TOP?\n         BE    MAIN0330\n         CLI   SPF_ZVERB,C'U'                    UP?\n         BE    MAIN0340\n         B     MAIN0050\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0300 DS    0H\n         ITRACE ID=BOTTOM\n         ICM   R1,15,DXD_SYSLIB_NEXT             FIRST ON CHAIN\nTEMP     USING SYSLIB_DSECT,R1\n         BZ    EXIT0000                          SHOULD NOT HAPPEN!\nMAIN0310 DS    0H\n         LR    R5,R1                             SAVE THIS ADDR\n         ICM   R1,15,TEMP.SYSLIB_NEXT            NEXT LIB\n         BNZ   MAIN0310\n         B     MAIN0010                          BUILD DISPLAY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0320 DS    0H\n         ITRACE ID=DOWN\n         CLI   SPF_ZSCROLLA,C'M'                 MAX?\n         BE    MAIN0300                          YES\n         L     R5,DXD_LAST_DISPLAYED             LAST ITEM DISPLAYED\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0330 DS    0H\n         ITRACE ID=TOP\n         L     R5,DXD_SYSLIB_NEXT                FIRST DATA ITEM\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0340 DS    0H\n         ITRACE ID=UP\n         CLI   SPF_ZSCROLLA,C'M'                 MAX?\n         BE    MAIN0330                          YES\n         ICM   R1,15,DXD_FIRST_DISPLAYED         FIRST ON DISPLAY\n         BZ    EXIT0000                          SHOULD NOT HAPPEN!\n         L     R7,SPF_ZSCROLLN                   LINES ON DISPLAY\nMAIN0350 DS    0H\n         LR    R5,R1                             COPY ADDR\n         ICM   R1,15,TEMP.SYSLIB_PREV            PREVIOUS LIB\n         BZ    MAIN0010\n         BCT   R7,MAIN0350                       LOOP\n         B     MAIN0010\n         DROP  TEMP\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      Replace the existing LIB chain with the updated chain          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0500 DS    0H\n         ITRACE ID=TERM\n         TM    DXD_FLAGS,$DXD_ERROR              ERROR FLAG ON?\n         BO    MAIN0700\n* ------------------------------------------------------------------- *\n*        Free current chain                                           *\n* ------------------------------------------------------------------- *\nMAIN0580 DS    0H\n         ITRACE ID=FREECURR\n         ICM   R5,15,DISCOMM_SYSLIB_NEXT\n         BZ    MAIN0600\nMAIN0590 DS    0H\n         LR    R1,R5\n         ICM   R5,15,SYSLIB_NEXT\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=SYSLIB_DSECT_L\n         LTR   R5,R5\n         BNZ   MAIN0590\n* ------------------------------------------------------------------- *\n*        Replace old chain with new                                   *\n* ------------------------------------------------------------------- *\nMAIN0600 DS    0H\n         ITRACE ID=SWITCH,                                             +\n               DATA1=DISCOMM_SYSLIB_NEXT,                              +\n               DATA2=DXD_SYSLIB_NEXT\n         OI    DISCOMM_FLAGS,$DISCOMM_ASSEMBLE_SOURCE\n         MVC   DISCOMM_SYSLIB_NEXT,DXD_SYSLIB_NEXT\n         ICM   R5,15,DISCOMM_SYSLIB_NEXT         1ST SYSLIB\n         BZ    EXIT0000                          NO SYSLIB'S\n         XC    SYSLIB_PREV,SYSLIB_PREV           NO PREV BLOCK\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*        User has requested exit with error(s) pending                *\n* ------------------------------------------------------------------- *\nMAIN0700 DS    0H\n         ITRACE ID=PURGE\n         MVI   COMM_MSG_ID,0\n         MVI   COMM_MSG_ID+1,1\n         BAL   R4,MSG0000\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        User has requested all changes to be cancelled.              *\n*                                                                     *\n*        Free any blocks on new chain                                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN1000 DS    0H\n         ITRACE ID=CANCEL\n         MVC   SPF_ZCMD,COMM_BLANKS              RESET COMMAND\n         ICM   R5,15,DXD_SYSLIB_NEXT             FIRST ON NEW CHAIN\n         BZ    EXIT0000\n         XC    DXD_SYSLIB_NEXT,DXD_SYSLIB_NEXT   CLEAR FOR NEXT TIME\nMAIN1010 DS    0H\n         LR    R1,R5                             COPY ADDRESS\n         ICM   R5,15,SYSLIB_NEXT                 NEXT LIB\n         ITRACE ID=FREELIB,                                            +\n               RDATA1=R5,                                              +\n               DATA2=SYSLIB_DDNAME\n         FREEMAIN RU,                            FREEMAIN THE BLOCK    +\n               A=(1),                                                  +\n               LV=SYSLIB_DSECT_L\n         LTR   R5,R5                             ANOTHER ON CHAIN?\n         BNZ   MAIN1010                          YES\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMSG0000  DS    0H\n         ITRACE ID=MSG,                                                +\n               DATA1=COMM_MSG_ID\n         CLC   SPF_MSG_1,COMM_BLANKS             ALREADY HAVE A MSG?\n         BNER  R4                                YES\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         BR    R4\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R0,DXD_SYSLIB_TABLE_SIZE          ADDR TABLE SIZE\n         L     R1,DXD_SYSLIB_TABLE               ADDR TABLE ADDR\n         FREEMAIN RU,                            FREEMAIN ADDR TABLE   +\n               A=(1),                                                  +\n               LV=(0)\n         L     R13,4(,R13)                       RESTORE REGISTER 13    ASE01670\n         L     R14,12(,R13)                      RESTORE REGISTERS      ASE01680\n         LR    R15,R2                            SET RC\n         LM    R0,R12,20(R13)                    RESTORE REGISTERS      ASE01680\n         BR    R14                               RETURN TO CALLER       ASE01700\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START     DC   Q(DXDSLIST)\nV_DISDSINF    DC   V(DISDSINF)\n\nSYSLIB_ID     DC   CL8'SYSLIB'\nCAN           DC   C'CAN '\nCANCEL        DC   C'CANCEL '\nPANEL_DISSLIST DC  CL8'DISSLIST'\nPANEL_DIS0000  DC  CL8'DIS0000'\n\nERR01         DC   C'Not a PDS'\nERR01_L       EQU  *-ERR01\n\n              LTORG\n\nMSG01         DS   0C\n              DC   AL1($SCREEN_ATTR_INPUT)\nMSG01_DSN     DC   CL44' '\n              DC   AL1($SCREEN_ATTR_HIGH_YELLOW)\nMSG01_MSG     DC   CL30' '\nMSG01_L       EQU  *-MSG01\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDSLIST              DSECT\n                      COPY DXDPREF\n\nDXD_SYSLIB_PREV       DS   A        DUMMY FOR 'PREV' ON CHAIN\nDXD_SYSLIB_NEXT       DS   A        FIRST DATA ITEM ON CHAIN\n\nDXD_FIRST_DISPLAYED   DS   A        FIRST DATA ITEM DISPLAYED\nDXD_LAST_DISPLAYED    DS   A        LAST DATA ITEM DISPLAYED\n\nDXD_SYSLIB_TABLE      DS   A\nDXD_SYSLIB_TABLE_SIZE DS   F\n\nDXD_NBR_DISPLAYED     DS   H        NBR OF DATA ITEMS DISPLAYED\n\nDXD_FLAGS             DS   X        FLAGS\n$DXD_ERROR            EQU  X'80'    .. SERIOUS ERROR\n$DXD_UPDATE           EQU  X'40'    .. AREA(S) UPDATED\n\n                      DSINFREQ      DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DCBD     DSORG=PS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFORMAT_1         DSECT\n                 IECSDSL1 1\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n              END     DISSLIST\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISTEXT": {"ttr": 1543, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x002\\x01\\t6O\\x01\\t6O\\x16U\\x00\\xf4\\x00\\xf4\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2009-12-30T00:00:00", "modifydate": "2009-12-30T16:55:32", "lines": 244, "newlines": 244, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: DISTEXT                                              *\n*                                                                    *\n*  Function:                                                         *\n*   LOAD the requested CSECT's text                                  *\n*                                                                    *\n*   DISBIND has already established a dialog                         *\n*   DISCOMM_CSECT_LENGTH has been set by DISESD                      *\n*                                                                    *\n*                                                                    *\n*   32 bytes of \"pad\" are added to the CSECT text.  This was to      *\n*   simplify the code in DISSCAN.  DISSCAN tries to identify areas   *\n*   that are instructions.  To do this, it \"looks\" for two           *\n*   consecutive instructions.  An exception is a branch or SVC.      *\n*   Some character strings \"look\" like instructions.  If these       *\n*   occur at the very end of a CSECT, DISSCAN will attempt to        *\n*   access data beyond the end of the CSECT which can cause S0C4s.   *\n*   The 16 byte \"pad\" is to prevent these S0C4 abends.               *\n*                                                                    *\n*   To give the last bytes of the program the benefit of the doubt,  *\n*   the pad is valid instructions (BR instructions).  Therefore if   *\n*   the last bytes of a CSECT are an instruction, it will appear to  *\n*   DISSCAN that the instruction is followed by another instruction. *\n*                                                                    *\n*   Got it?                                                          *\n*                                                                    *\n*                                                                    *\n*--------------------------------------------------------------------*\nDISTEXT  CSECT\nDISTEXT  AMODE 31\nDISTEXT  RMODE ANY\n         USING DISTEXT,R15\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'DISTEXT'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISTEXT,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)                    CHAIN\n         ST    R15,8(,R13)                    CHAIN\n         LR    R13,R15                        SET SAVE AREA ADDRESS\n         USING DXDTEXT,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n* ------------------------------------------------------------------- *\n*        Obtain and initialize buffer for binder                      *\n* ------------------------------------------------------------------- *\n         ITRACE ID=GET_BUFF\n         IEWBUFF FUNC=GETBUF,                                          +\n               TYPE=TEXT\n         ST    R8,DXD_BUFFER\n         ITRACE ID=INITBUFF\n         IEWBUFF FUNC=INITBUF,                                         +\n               TYPE=TEXT\n         ITRACE ID=BUFF,                                               +\n               RDATA1=R8,                                              +\n               RDATA2=R7\n*--------------------------------------------------------------------*\n*        GETMAIN storage for text                                    *\n*--------------------------------------------------------------------*\n         L     R0,DISCOMM_CSECT_LENGTH        CSECT'S LENGTH\n         AH    R0,=Y(2*PAD_L)                 PLUS 'FUDGE FACTOR'\n         ITRACE ID=GET_TEXT,                                           +\n               RDATA1=R0\n         GETMAIN RU,                          GETMAIN AREA FOR TEXT    +\n               LV=(0),                                                 +\n               LOC=ANY\n         ST    R1,DISCOMM_CSECT_TEXT          SAVE ADDRESS\n         ST    R1,DXD_TEXT_ADDR               SAVE ADDRESS\n         A     R1,DISCOMM_CSECT_LENGTH        ADD LENGTH\n         BCTR  R1,0                           RELATIVE TO ZERO\n         ST    R1,DISCOMM_CSECT_TEXT_END      TEXT ENDING ADDRESS\n         ITRACE ID=TEXT,                                               +\n               DATA1=(DISCOMM_CSECT_TEXT,4),                           +\n               DATA2=(DISCOMM_CSECT_LENGTH,4)\n*--------------------------------------------------------------------*\n*                                                                    *\n*--------------------------------------------------------------------*\n         XC    DXD_CURSOR,DXD_CURSOR\n         MVC   DXD_LENGTH_REMAINING,DISCOMM_CSECT_LENGTH\n*--------------------------------------------------------------------*\n*                                                                    *\n*--------------------------------------------------------------------*\nTEXT0000 DS    0H\n         ITRACE ID=GETD\n         L     R8,DXD_BUFFER\n         IEWBIND FUNC=GETD,                                            +\n               VERSION=5,                                              +\n               WORKMOD=DISCOMM_DIALOG_WORKMOD,                         +\n               CLASS=B_TEXT,                                           +\n               SECTION=DISCOMM_CSECT_NAME_LENGTH,                      +\n               COUNT=DISCOMM_CSECT_LENGTH,                             +\n               AREA=IEWBTXT,                                           +\n               CURSOR=DXD_CURSOR,                                      +\n               RETCODE=DXD_RETURN_CODE,                                +\n               RSNCODE=DXD_REASON_CODE,                                +\n               MF=(E,DXD_IEWBIND,COMPLETE)\n         ITRACE ID=TEXT_RC,                                            +\n               DATA1=(DXD_RETURN_CODE,4),                              +\n               DATA2=(DXD_REASON_CODE,4)\n         CLC   DXD_RETURN_CODE,F8\n         BH    ERR0010\n         BE    ERR0020\n         CLC   DXD_RETURN_CODE,F4\n         BL    TEXT0010\n         CLC   DXD_REASON_CODE,X_83000800\n         BE    TEXT0010\n         CLC   DXD_REASON_CODE,X_83000801\n         BE    EXIT0000\nTEXT0010 DS    0H\n         L     R2,TXTH_ENTRY_COUNT            SLOTS AVAILABLE\n         C     R2,DXD_LENGTH_REMAINING        MORE THAN LEN REMAINING?\n         BNH   TEXT0020                       NO\n         L     R2,DXD_LENGTH_REMAINING        LIMIT TO LENGTH REMAINING\nTEXT0020 DS    0H\n         L     R0,DXD_TEXT_ADDR               CURRENT TEXT ADDRESS\n         LR    R1,R2                          COPY LENGTH\n         LA    R14,TXTH_END                   NEW TEXT\n         LR    R15,R2                         COPY LENGTH\n         MVCL  R0,R14                         COPY TEXT\n         ITRACE ID=X,                                                  +\n               DATA1=(DXD_TEXT_ADDR,4),                                +\n               DATA2=(TXTH_ENTRY_COUNT,4)\n         L     R0,DXD_TEXT_ADDR               CURRENT TEXT ADDRESS\n         AR    R0,R2                          PLUS NEW LENGTH\n         ST    R0,DXD_TEXT_ADDR               UPDATE ADDR FOR NEXT TIME\n         L     R0,DXD_LENGTH_REMAINING        LENGTH REMAINING\n         SR    R0,R2                          PLUS NEW LENGTH\n         ST    R0,DXD_LENGTH_REMAINING        LENGTH LEFT\n         ITRACE ID=Y,                                                  +\n               DATA1=(DXD_TEXT_ADDR,4),                                +\n               DATA2=(DXD_LENGTH_REMAINING,4)\n         LTR   R0,R0                          ANY DATA LEFT?\n         BNZ   TEXT0000                       YES\n         L     R8,DXD_BUFFER                  BUFFER ADDRESS\n         IEWBUFF FUNC=FREEBUF,                FREE BUFFER              +\n               TYPE=TEXT\n         L     R1,DXD_TEXT_ADDR               NEXT BYTE IN TEXT\n         ITRACE ID=ADD_PAD,                                            +\n               RDATA1=R1\n         MVC   0(PAD_L,R1),PAD                COPY PAD\n*--------------------------------------------------------------------*\n*                                                                    *\n*--------------------------------------------------------------------*\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE REGISTERS         ASE01680\n         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nERR0010  DS    0H\n         DC    H'0'\nERR0020  DS    0H\n         DC    H'0'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START     DC   Q(DXDTEXT)\nF4            DC   F'4'\nF8            DC   F'8'\nH16           DC   H'16'\n\nB_TEXT        DC   XL2'6',C'B_TEXT'\nX_83000800    DC   X'83000800'\nX_83000801    DC   X'83000801'\n\nPAD           DS   0C                         PAD\n              NOPR R0\n              NOPR R0\n              NOPR R0\n              NOPR R0\n              NOPR R0\n              NOPR R0\n              NOPR R0\n              NOPR R0\nPAD_L         EQU  *-PAD\n\n         IEWBUFF FUNC=MAPBUF,                                          +\n               TYPE=TEXT,                                              +\n               HEADREG=R8,                                             +\n               ENTRYREG=R7,                                            +\n               SIZE=32768,                                             +\n               VERSION=5\n\n              IEWBIND MF=(L,IEWBIND_I)\nIEWBIND_L     EQU  *-IEWBIND_I\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDTEXT           DSECT\n                  COPY DXDPREF\n\nDXD_RETURN_CODE      DS   F\nDXD_REASON_CODE      DS   F\n\nDXD_BUFFER           DS   A\nDXD_TEXT_ADDR        DS   A\nDXD_LENGTH_REMAINING DS   F\n\nDXD_CURSOR           DS   F\n\nDXD_IEWBIND          DS   0F,(IEWBIND_L)X\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n         END  DISTEXT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISTLIST": {"ttr": 2566, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00C\\x01\\t3\\x7f\\x01\\t6_\\x08 \\x01T\\x01K\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2009-12-03T00:00:00", "modifydate": "2009-12-31T08:20:43", "lines": 340, "newlines": 331, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: DISTLIST                                              *\n*                                                                     *\n*  Function:                                                          *\n*   Display the module text                                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISTLIST CSECT\nDISTLIST AMODE 31\nDISTLIST RMODE ANY\n         USING DISTLIST,R15\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'DISTLIST'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISTLIST,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR\n         A     R15,DXD_START\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        SET SAVE AREA ADDRESS\n         USING DXDTLIST,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n         USING V_DETAIL,R6\n         XC    DXD_START_DISP,DXD_START_DISP\n* ------------------------------------------------------------------- *\n*        Build text                                                   *\n* ------------------------------------------------------------------- *\nLIST0100 DS    0H\n         ITRACE ID=BUILD\n         L     R0,DISCOMM_VDATA_ADDR          VDATA ADDR\n         L     R1,DISCOMM_VDATA_LENGTH        VDATA LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                         INITIALIZE VDATA\n         L     R6,DISCOMM_VDATA_ADDR          VDATA ADDR\n         L     R7,SPF_VDEPTH                  NBR OF LINES\n         MVC   DXD_DISP,DXD_START_DISP        COPY STARTING DISP\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIST0110 DS    0H\n         ITRACE ID=DETAIL,                                             +\n               DATA1=(DXD_DISP,4),                                     +\n               DATA2=(DISCOMM_CSECT_LENGTH,4)\n         MVI   V_ATTR1,$SCREEN_ATTR_HIGH      SET ATTRIBUTE\n         MVI   V_ATTR2,$SCREEN_ATTR_NORMAL    SET ATTRIBUTE\n         MVI   V_ATTR3,$SCREEN_ATTR_HIGH      SET ATTRIBUTE\n         MVI   V_ATTR4,$SCREEN_ATTR_NORMAL    SET ATTRIBUTE\n         MVI   V_ATTR5,$SCREEN_ATTR_HIGH      SET ATTRIBUTE\n         MVI   V_ASTERISK_1,C'*'\n         MVI   V_ASTERISK_2,C'*'\n         L     R5,DISCOMM_CSECT_TEXT          TEXT\n         A     R5,DXD_DISP                    PLUS DISP\n         L     R2,DISCOMM_CSECT_LENGTH        CSECT LENGTH\n         S     R2,DXD_DISP                    LENGTH REMAINING\n         CH    R2,H16                         MORE THAN 16?\n         BNH   LIST0120                       NO\n         LH    R2,H16                         LIMIT TO 16\nLIST0120 DS    0H\n         BCTR  R2,0                           CONVERT TO INSTR LENGTH\n         MVC   DXD_HEX(DXD_HEX_L),COMM_BLANKS\n         XC    COMM_INFO_01(32),COMM_INFO_01  INITIALIZE WORK AREA\n         UNPK  V_DISP(9),DXD_DISP(5)          UNPACK DISP\n         TR    V_DISP,COMM_HEXCHAR            TRANSLATE\n         MVI   V_DISP+8,C' '\n         EX    R2,MVC_01                      COPY TEXT\n         EX    R2,MVC_02                      COPY TEXT\n         EX    R2,TR_01                       TRANSLATE UNPRINTABLES\n         UNPK  COMM_INFO_02(9),COMM_INFO_01+00(5)\n         TR    COMM_INFO_02(8),COMM_HEXCHAR\n         MVC   DXD_HEX_01,COMM_INFO_02\n         UNPK  COMM_INFO_02(9),COMM_INFO_01+04(5)\n         TR    COMM_INFO_02(8),COMM_HEXCHAR\n         MVC   DXD_HEX_02,COMM_INFO_02\n         UNPK  COMM_INFO_02(9),COMM_INFO_01+08(5)\n         TR    COMM_INFO_02(8),COMM_HEXCHAR\n         MVC   DXD_HEX_03,COMM_INFO_02\n         UNPK  COMM_INFO_02(9),COMM_INFO_01+12(5)\n         TR    COMM_INFO_02(8),COMM_HEXCHAR\n         MVC   DXD_HEX_04,COMM_INFO_02\n         LA    R1,LENGTH_TABLE(R2)\n         SR    R3,R3\n         IC    R3,0(R1)\n         EX    R3,MVC_03\n         A     R6,SPF_VWIDTH                  NEXT LINE\n         BCT   R7,LIST0130\n         B     LIST0150                       SCREEN IS FULL\nLIST0130 DS    0H\n         L     R2,DXD_DISP\n         LA    R2,16(,R2)\n         ST    R2,DXD_DISP\n         C     R2,DISCOMM_CSECT_LENGTH\n         BL    LIST0110\n* ------------------------------------------------------------------- *\n*        Display                                                      *\n* ------------------------------------------------------------------- *\nLIST0150 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_DISTLIST SET PANEL NAME\n         MVC   SESS_DISP_VDATA_ADDR,DISCOMM_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DISCOMM_VDATA_LENGTH\n         L     R15,COMM_V_OSDISP              DISDISP ENTRY POINT\n         BALR  R14,R15                        DISPLAY DATA\n         ITRACE ID=DISP_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                        RC = 0?\n         BNZ   EXIT0000                       NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=ZCMD,                                               +\n               DATA1=SPF_ZCMD\n         CLC   SPF_ZCMD,COMM_BLANKS           ZCMD BLANK?\n         BNE   ERR0010                        NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=ZVERB,                                              +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=SPF_ZSCROLLN\n         CLI   SPF_ZVERB,C'B'                 BOTTOM?\n         BE    LIST0200                       YES\n         CLI   SPF_ZVERB,C'D'                 DOWN?\n         BE    LIST0210                       YES\n         CLI   SPF_ZVERB,C'T'                 TOP?\n         BE    LIST0230                       YES\n         CLI   SPF_ZVERB,C'U'                 UP?\n         BE    LIST0240                       YES\n         B     ERR0020\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLIST0200 DS    0H\n         ITRACE ID=BOTTOM\n         L     R1,DISCOMM_CSECT_LENGTH        CSECT'S LENGTH\n         CH    R1,H16                         MORE THAN 16 BYTES?\n         BL    LIST0230                       NO\n         SH    R1,H16                         MINUS 1 LINE WORTH\n         SRL   R1,4                           SHIFT\n         SLL   R1,4                           SHIFT\n         ST    R1,DXD_START_DISP              SET START DISP\n         B     LIST0100                       REBUILD DISPLAY\nLIST0210 DS    0H\n         ITRACE ID=DOWN\n         CLI   SPF_ZSCROLLA,C'M'              MAX?\n         BE    LIST0200                       YES\n         L     R1,SPF_ZSCROLLN                NBR OF LINES\n         SLL   R1,4                           MULTIPLY BY 16\n         A     R1,DXD_START_DISP              PLUS START DISP\n         C     R1,DISCOMM_CSECT_LENGTH        AT OR BEYOND END?\n         BH    LIST0200                       BEYOND END\n         BNE   LIST0220                       NOT AT END\n         SH    R1,H16                         MINUS 1 LINE WORTH\nLIST0220 DS    0H\n         ST    R1,DXD_START_DISP              SET START DISP\n         B     LIST0100                       REBUILD DISPLAY\nLIST0230 DS    0H\n         ITRACE ID=TOP\n         XC    DXD_START_DISP,DXD_START_DISP  SET START DISP\n         B     LIST0100                       REBUILD DISPLAY\nLIST0240 DS    0H\n         ITRACE ID=UP\n         CLI   SPF_ZSCROLLA,C'M'              MAX?\n         BE    LIST0230                       YES\n         L     R0,DXD_START_DISP              STARTING DISP\n         L     R1,SPF_ZSCROLLN                NBR OF LINES\n         SLL   R1,4                           MULTIPLY BY 16\n         SR    R0,R1                          SUBTRACT SCROLL AMOUNT\n         BM    LIST0230                       NEGATIVE.. LIMIT TO TOP\n         ST    R0,DXD_START_DISP              SET STARTING DISP\n         B     LIST0100                       REBUILD DISPLAY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVI   COMM_MSG_ID+1,1\n         B     ERR0100\nERR0020  DS    0H\n         MVI   COMM_MSG_ID+1,2\nERR0100  DS    0H\n         MVI   COMM_MSG_ID,0\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\n         MVC   SPF_MSG_1,COMM_MSG_1\n         MVC   SPF_MSG_2,COMM_MSG_2\n         MVC   SPF_MSG_3,COMM_MSG_3\n         MVC   SPF_MSG_4,COMM_MSG_4\n         MVC   SPF_MSG_5,COMM_MSG_5\n         B     LIST0150\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        GIVE GOOD RETURN CODE     ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMVC_01   MVC   V_CHAR(0),0(R5)                COPY TEXT\nMVC_02   MVC   COMM_INFO_01(0),0(R5)          COPY TEXT\nMVC_03   MVC   V_HEX(0),DXD_HEX               COPY HEX\nTR_01    TR    V_CHAR(0),PRINTABLE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START         DC   Q(DXDTLIST)\n\nH16               DC   H'16'\n\nPANEL_DISTLIST    DC   CL8'DISTLIST'\n\nLENGTH_TABLE      DS   0C\n                  DC   AL1(001)       1\n                  DC   AL1(003)       2\n                  DC   AL1(005)       3\n                  DC   AL1(007)       4\n                  DC   AL1(010)       5\n                  DC   AL1(012)       6\n                  DC   AL1(014)       7\n                  DC   AL1(016)       8\n                  DC   AL1(019)       9\n                  DC   AL1(021)      10\n                  DC   AL1(023)      11\n                  DC   AL1(025)      12\n                  DC   AL1(028)      13\n                  DC   AL1(030)      14\n                  DC   AL1(032)      15\n                  DC   AL1(034)      16\n\nPRINTABLE         DC   256C'.'\n                  ORG  PRINTABLE+X'40'\n                  DC   C' '\n                  ORG  PRINTABLE+X'4A'\n                  DC   C'\u00a2.<(+\u00a6'\n                  DC   X'50'\n                  ORG  PRINTABLE+X'5A'\n                  DC   C'!$*);\u00ac-/'\n                  ORG  PRINTABLE+X'6B'\n                  DC   C',%_>?'\n                  ORG  PRINTABLE+X'7A'\n                  DC   C':#@'\n                  DC   X'7D'\n                  DC   C'=\"'\n                  ORG  PRINTABLE+X'C0'\n                  DC   C'{ABCDEFGHI'\n                  ORG  PRINTABLE+X'D0'\n                  DC   C'}JKLMNOPQR'\n                  ORG  PRINTABLE+X'E2'\n                  DC   C'STUVWXYZ'\n                  ORG  PRINTABLE+X'F0'\n                  DC   C'0123456789'\n                  ORG  PRINTABLE+256\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDTLIST          DSECT\n                  COPY DXDPREF\n\nDXD_START_DISP    DS   F\nDXD_DISP          DS   F\n\nDXD_HEX           DS   0C\nDXD_HEX_01        DS   CL8\n                  DS   X\nDXD_HEX_02        DS   CL8\n                  DS   X\nDXD_HEX_03        DS   CL8\n                  DS   X\nDXD_HEX_04        DS   CL8\nDXD_HEX_L         EQU  *-DXD_HEX\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nV_DETAIL          DSECT\nV_ATTR1           DS   X\nV_DISP            DS   CL8\n                  DS   CL3\nV_ATTR2           DS   X\nV_HEX             DS   CL35\n                  DS   CL3\nV_ATTR3           DS   X\nV_ASTERISK_1      DS   C\nV_ATTR4           DS   X\nV_CHAR            DS   CL16\nV_ATTR5           DS   X\nV_ASTERISK_2      DS   C\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n                 END  DISTLIST\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISUDEL": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x001\\x01\\t4\\x1f\\x01\\t6/\\x15G\\x00q\\x00e\\x00\\x16\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2009-12-07T00:00:00", "modifydate": "2009-12-28T15:47:31", "lines": 113, "newlines": 101, "modlines": 22, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: DISUDEL                                               *\n*                                                                     *\n*  FUNCTION:                                                          *\n*    Verify user wants to delete a USING                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISUDEL  CSECT\nDISUDEL  AMODE 31\nDISUDEL  RMODE ANY\n         USING DISUDEL,R15\n         B     MOD0000                           SKIP EYECATCHER\nMODID    DC    CL8'DISUDEL'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                   SAVE REGS\n         LR    R10,R15                           SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISUDEL,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR                 WORK AREA\n         A     R15,DXD_START                     PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         USING DXDUDEL,R13\n         MVC   DXD_CSECT,MODID\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R1\n         USING USING_DSECT,R1\n         MVC   SPF_LABEL1,USING_DSECT_NAME\n         MVC   SPF_LABEL2,USING_DSECT_LABEL\n         MVC   SPF_REGISTER,USING_CHAR_REGISTER\n         MVC   COMM_INFO_01(4),USING_BEGIN\n         UNPK  COMM_INFO_02(9),COMM_INFO_01(5)\n         MVC   SPF_BEGIN,COMM_INFO_02\n         TR    SPF_BEGIN,COMM_HEXCHAR\n         MVC   COMM_INFO_01(4),USING_END\n         UNPK  COMM_INFO_02(9),COMM_INFO_01(5)\n         MVC   SPF_END,COMM_INFO_02\n         TR    SPF_END,COMM_HEXCHAR\n         MVC   SESS_DISP_PANEL,PANEL_NAME\n         OI    COMM_FLAGS,$COMM_NO_SESSION       NO SESSION SWITCHING\n         OI    COMM_FLAGS,$COMM_NO_FORMAT        NO FORMAT SWITCHING\n         ITRACE ID=DISP\n         L     R15,COMM_V_OSDISP\n         BALR  R14,R15\n         ITRACE ID=DISP_RC,                                            +\n               RDATA1=R15\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15\n         L     R13,4(,R13)                       RESTORE REGISTER 13\n         L     R14,12(,R13)                      RESTORE R14\n         LM    R0,12,20(R13)                     RESTORE REGISTERS\n         BR    R14                               RETURN TO CALLER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START     DC   Q(DXDUDEL)\n\nPANEL_NAME    DC   CL8'DISUDEL '\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDUDEL          DSECT\n                 COPY     DXDPREF\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n              END     DISUDEL\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISULIST": {"ttr": 8459, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x006\\x01\\t6O\\x01\\x10\\x02_\\x11\\x02\\x03d\\x03`\\x00\\x05\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2009-12-30T00:00:00", "modifydate": "2010-01-25T11:02:36", "lines": 868, "newlines": 864, "modlines": 5, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: DISULIST                                              *\n*                                                                     *\n*  FUNCTION:                                                          *\n*    Display/allow definition of USINGs                               *\n*                                                                     *\n*                                                                     *\n*  There are two ways for DSECT information to be made available.     *\n*  One is via the batch utility DISASMU1, the other is by supplying   *\n*  assembler source (via the \"A\" main menu option).                   *\n*                                                                     *\n*  The batch utility stores the information from a processing         *\n*  DSECTs in VSAM KSDSes.                                             *\n*                                                                     *\n*  Information from DSECTs processed via the \"A\" main menu option     *\n*  is stored in in-storage control block chains.                      *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*  When the user wants to define a USING                              *\n*   They will be shown a list of the pre-processed DSECT info         *\n*   data sets (from the 'K' main menu option)                         *\n*                                                                     *\n*   They may select one of the pre-processed DSECT info KSDSes        *\n*   or the DSECTs defined via the 'A' main menu option.               *\n*                                                                     *\n*                                                                     *\n*   When the user selects the KSDS or to use DSECTs from the 'A'      *\n*   option, they will be shown the names of the DSECTs available.     *\n*                                                                     *\n*   The user may choose to use the DSECT itself (the base register    *\n*   for the DSECT references the first byte of the DSECT) or they     *\n*   may select a label within the DSECT (in case the base register    *\n*   does not refer to the first byte of the DSECT.                    *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISULIST CSECT\nDISULIST AMODE 31\nDISULIST RMODE ANY\n         USING DISULIST,R15\n         B     MOD0000                           SKIP EYECATCHER\nMODID    DC    CL8'DISULIST'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                   SAVE REGS\n         LR    R10,R15                           SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISULIST,R10\n         USING DISCOMM,R9\n         USING USING_DSECT,R7\n         USING KSDS_DSECT,R5\n         USING DSECT_DSECT,R4\n         USING LABEL_DSECT,R3\n         L     R15,SESS_DXD_ADDR                 WORK AREA\n         A     R15,DXD_START                     PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         USING DXDULIST,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n         SR    R0,R0\n         L     R1,SPF_VDEPTH                     NBR OF LINES\n         LA    R1,1(,R1)                         PLUS 1\n         D     R0,F5                             DIVIDE BY 5\n         STH   R1,DXD_USINGS_PER_SCREEN          NBR OF USINGS PER\n         ITRACE ID=PER_SCRN,                                           +\n               RDATA1=R1\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        In order to allow the user to \"cancel\" changes,              *\n*        first \"copy\" the existing USING chain.                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         XC    DXD_USING_NEXT,DXD_USING_NEXT\n         XC    DXD_FIRST_USING_DISPLAYED,DXD_FIRST_USING_DISPLAYED\n         LA    R2,DXD_USING_PREV\nPREV     USING USING_DSECT,R2\n         ICM   R7,15,DISCOMM_USING_NEXT          FIRST USING\n         BZ    MAIN0000                          NO USINGS\nINIT0010 DS    0H\n         GETMAIN RU,                                                   +\n               LV=USING_DSECT_L,                                       +\n               LOC=ANY\n         ITRACE ID=COPY_1,                                             +\n               RDATA1=R1\nNEW      USING USING_DSECT,R1\n         MVC   NEW.USING_DSECT(USING_DSECT_L),USING_DSECT\n         ST    R1,PREV.USING_NEXT\n         ST    R2,NEW.USING_PREV\n         LR    R2,R1\n         ICM   R7,15,USING_NEXT\n         BNZ   INIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         ITRACE ID=MAIN0000\n         MVC   DXD_FIRST_USING_DISPLAYED,DXD_USING_NEXT\n         DROP  NEW,PREV\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         ITRACE ID=INIT_V\n         L     R0,DISCOMM_VDATA_ADDR\n         L     R1,DISCOMM_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                            INITIALIZE VDATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R6,DISCOMM_VDATA_ADDR             VDATA ADDR\n         LH    R2,DXD_USINGS_PER_SCREEN          NBR PER SCREEN\n         XC    DXD_NBR_DISPLAYED,DXD_NBR_DISPLAYED\n         ICM   R7,15,DXD_FIRST_USING_DISPLAYED   FIRST TO DISPLAY\n         ITRACE ID=BUILD,                                              +\n               RDATA1=R7,                                              +\n               RDATA2=R2\n         LTR   R7,R7                             ANY USINGS?\n         BZ    MAIN0100                          NOTHING TO DISPLAY\nMAIN0020 DS    0H\n         ITRACE ID=USING,                                              +\n               RDATA1=R7,                                              +\n               DATA2=USING_PREV\n         ST    R7,DXD_LAST_USING_DISPLAYED       SAVE ADDR\n         LA    R1,1                              CONSTANT 1\n         AH    R1,DXD_NBR_DISPLAYED              PLUS TOTAL SO FAR\n         STH   R1,DXD_NBR_DISPLAYED              SAVE TOTAL\n         MVC   0(LINE01_L,R6),LINE01\n         USING LINE01,R6\n         MVC   LINE01_NAME,USING_NAME\n         DROP  R6\n         A     R6,SPF_VWIDTH                     NEXT LINE\n\n         MVC   0(LINE02_L,R6),LINE02\n         USING LINE02,R6\n         MVC   LINE02_BASE,USING_CHAR_REGISTER   REGISTER IN CHAR FORM\n         UNPK  DXD_WORK(9),USING_BEGIN(5)\n         MVC   LINE02_BEGIN,DXD_WORK\n         TR    LINE02_BEGIN,COMM_HEXCHAR\n         UNPK  DXD_WORK(9),USING_END(5)\n         MVC   LINE02_END,DXD_WORK\n         TR    LINE02_END,COMM_HEXCHAR\n         A     R6,SPF_VWIDTH                     NEXT LINE\n         DROP  R6\n\n         MVC   0(LINE03_L,R6),LINE03\n         USING LINE03,R6\n         MVC   LINE03_DSECT(63),USING_DSECT_NAME DSECT NAME\n         CLC   USING_DSECT_LABEL,COMM_BLANKS     LABEL IN DSECT?\n         BNE   MAIN0050                          YES\n         OC    USING_DISP,USING_DISP             DISP ZERO?\n         BZ    MAIN0050                          YES\n         UNPK  DXD_WORK(9),USING_DISP(5)         UNPACK DISP\n         LA    R1,LINE03_DSECT+L'LINE03_DSECT\nMAIN0030 DS    0H\n         CLI   0(R1),C' '                        BLANK?\n         BNE   MAIN0040                          NO\n         BCT   R1,MAIN0030\nMAIN0040 DS    0H\n         MVI   1(R1),C'+'\n         MVC   2(8,R1),DXD_WORK                  COPY UNPACKED DISP\n         TR    2(8,R1),COMM_HEXCHAR              TRANSLATE\n         DROP  R6\n\nMAIN0050 DS    0H\n         A     R6,SPF_VWIDTH                     NEXT LINE\n         MVC   0(LINE04_L,R6),LINE04\n         USING LINE04,R6\n         CLC   USING_DSECT_LABEL,COMM_BLANKS     LABEL BLANK?\n         BE    MAIN0080\n         MVC   LINE04_LABEL(63),USING_DSECT_LABEL    LABEL NAME\n         OC    USING_DISP,USING_DISP             DISP ZERO?\n         BZ    MAIN0080\n         UNPK  DXD_WORK(9),USING_DISP(5)         UNPACK DISP\n         LA    R1,LINE04_LABEL+L'LINE04_LABEL\nMAIN0060 DS    0H\n         CLI   0(R1),C' '                        BLANK?\n         BNE   MAIN0070                          NO\n         BCT   R1,MAIN0060\nMAIN0070 DS    0H\n         MVI   1(R1),C'+'\n         MVC   2(8,R1),DXD_WORK                  COPY UNPACKED DISP\n         TR    2(8,R1),COMM_HEXCHAR              TRANSLATE\n         DROP  R6\n\nMAIN0080 DS    0H\n         A     R6,SPF_VWIDTH\n\n         A     R6,SPF_VWIDTH                     NEXT LINE\n         BCT   R2,MAIN0090\n         B     MAIN0100\nMAIN0090 DS    0H\n         ICM   R7,15,USING_NEXT\n         BNZ   MAIN0020\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        Display the list of USING's                                  *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0100 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_NAME1       SET PANEL NAME\n         MVC   SESS_DISP_VDATA_ADDR,DISCOMM_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DISCOMM_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP                 DISP ENTRY POINT\n         BALR  R14,R15                           DISPLAY\n         ITRACE ID=DISP_RC,                                            +\n               RDATA1=R15,                                             +\n               DATA2=SPF_ZVERB\n         LTR   R15,R15                           RC = 0?\n         BNZ   MAIN0600                          NO\n         CLC   ABEND,SPF_ZCMD                    ABEND?\n         BE    ABEND000                          YES\n         CLC   CANCEL,SPF_ZCMD                   CANCEL?\n         BE    MAIN9000                          YES\n         CLC   CAN,SPF_ZCMD                      CAN(CEL)?\n         BE    MAIN9000                          YES\n         CLC   =C'NEW',SPF_ZCMD                  NEW?\n         BE    MAIN0300                          YES\n* ------------------------------------------------------------------- *\n*        Check for delete request(s)                                  *\n* ------------------------------------------------------------------- *\n         L     R6,DISCOMM_VDATA_ADDR             VDATA ADDR\nV        USING LINE01,R6                         DEFINE BASE\n         LH    R2,DXD_USINGS_PER_SCREEN          NBR PER SCREEN\n         ICM   R7,15,DXD_FIRST_USING_DISPLAYED   FIRST TO DISPLAY\n         BZ    MAIN0100\n         NI    DXD_FLAGS,255-$DXD_DELETE         RESET FLAG\nMAIN0110 DS    0H\n         ITRACE ID=CHK_DEL,                                            +\n               RDATA1=R6,                                              +\n               RDATA2=R2\n         OI    V.LINE01_DELETE,C' '\n         CLI   V.LINE01_DELETE,C' '              DELETE THIS USING?\n         BE    MAIN0150                          NO\n         MVI   V.LINE01_DELETE,C' '              RESET COMMAND\n         LR    R1,R7                             1ST LINE IN VDATA\n         L     R15,V_DISUDEL                     DISUDEL ENTRY POINT\n         BALR  R14,R15                           CALL DISUDEL\n         LTR   R15,R15                           CONTINUE WITH DELETE?\n         BNZ   MAIN0150                          NO\n         OI    DXD_FLAGS,$DXD_DELETE             SET FLAG\n         ICM   R1,15,USING_PREV                  PREVIOUS USING?\n         BZ    MAIN0120                          NO\nPREV     USING USING_DSECT,R1                    DEFINE BASE\n         MVC   PREV.USING_NEXT,USING_NEXT        CHAIN PREV TO NEXT\n         DROP  PREV\nMAIN0120 DS    0H\n         ICM   R1,15,USING_NEXT                  NEXT USING?\n         BZ    MAIN0130                          NO\nNEXT     USING USING_DSECT,R1                    DEFINE BASE\n         MVC   NEXT.USING_PREV,USING_PREV        CHAIN NEXT TO PREV\n         DROP  NEXT\nMAIN0130 DS    0H\n         C     R7,DXD_USING_NEXT                 FIRST ON CHAIN?\n         BNE   MAIN0140                          NO\n         MVC   DXD_USING_NEXT,USING_PREV         CHANGE ADDRESS\n         OC    DXD_USING_NEXT,DXD_USING_NEXT     PREVIOUS EXIST?\n         BNZ   MAIN0140                          YES\n         MVC   DXD_USING_NEXT,USING_NEXT         USE NEXT INSTEAD\nMAIN0140 DS    0H\n         ITRACE ID=FREEUSNG,                                           +\n               RDATA1=R7,                                              +\n               DATA2=USING_PREV\n         LR    R1,R7                             COPY ADDRESS\n         L     R7,USING_NEXT                     NEXT ON CHAIN\n         FREEMAIN RU,                            FREE THIS USING BLOCK +\n               A=(1),                                                  +\n               LV=USING_DSECT_L\n         B     MAIN0160\nMAIN0150 DS    0H\n         L     R7,USING_NEXT                     NEXT USING\nMAIN0160 DS    0H\n         A     R6,SPF_VWIDTH                     NEXT LINE (LINE02)\n         A     R6,SPF_VWIDTH                     NEXT LINE (LINE03)\n         A     R6,SPF_VWIDTH                     NEXT LINE (LINE04)\n         A     R6,SPF_VWIDTH                     NEXT LINE (BLANK LINE)\n         A     R6,SPF_VWIDTH                     NEXT LINE (LINE01)\n         BCT   R2,MAIN0110\n         TM    DXD_FLAGS,$DXD_DELETE             ANY DELETIONS?\n         BO    MAIN0000                          YES\n         ITRACE ID=NODELETE\n         DROP  V\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=SCROLL,                                             +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=SPF_ZSCROLLA\n         CLI   SPF_ZVERB,C'B'                    BOTTOM?\n         BE    MAIN0200\n         CLI   SPF_ZVERB,C'D'                    DOWN?\n         BE    MAIN0220\n         CLI   SPF_ZVERB,C'T'                    TOP?\n         BE    MAIN0240\n         CLI   SPF_ZVERB,C'U'                    UP?\n         BE    MAIN0250\n         B     MAIN0100\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0200 DS    0H\n         ITRACE ID=BOTTOM\n         ICM   R7,15,DXD_USING_NEXT              FIRST ON CHAIN\nMAIN0210 DS    0H\n         ST    R7,DXD_FIRST_USING_DISPLAYED      SAVE ADDRESS\n         ICM   R7,15,USING_NEXT                  ANOTHER USING?\n         BNZ   MAIN0210                          YES\n         B     MAIN0010                          BUILD DISPLAY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0220 DS    0H\n         ITRACE ID=DOWN\n         CLI   SPF_ZSCROLLA,C'M'                 MAX?\n         BE    MAIN0200                          YES\n         L     R2,SPF_ZSCROLLN                   NBR OF LINES TO SCROLL\n         L     R7,DXD_FIRST_USING_DISPLAYED      1ST ON DISPLAY\nMAIN0230 DS    0H\n         ST    R7,DXD_FIRST_USING_DISPLAYED      SAVE USING BLOCK ADDR\n         ICM   R7,15,USING_NEXT                  ANOTHER USING?\n         BZ    MAIN0010                          NO\n         BCT   R2,MAIN0230                       LOOP\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0240 DS    0H\n         ITRACE ID=TOP\n         L     R7,DXD_USING_NEXT                 FIRST DATA ITEM\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0250 DS    0H\n         ITRACE ID=UP1\n         CLI   SPF_ZSCROLLA,C'M'                 MAX?\n         BE    MAIN0240                          YES\n         ICM   R7,15,DXD_FIRST_USING_DISPLAYED   FIRST ON DISPLAY\n         BZ    EXIT0000                          SHOULD NOT HAPPEN!\n         L     R2,SPF_ZSCROLLN                   LINES ON DISPLAY\nMAIN0260 DS    0H\n         ST    R7,DXD_FIRST_USING_DISPLAYED      COPY ADDR\n         ICM   R7,15,USING_PREV                  PREVIOUS USING?\n         BZ    MAIN0010                          NO\n         BCT   R2,MAIN0260                       LOOP\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*      Define new USING                                               *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0300 DS    0H\n         ITRACE ID=NEW\n         MVC   SPF_ZCMD,COMM_BLANKS\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      Display selection                                              *\n*        1) User source (specified by option 'A')                     *\n*        2) List of KSDSes (specified by option 'K')                  *\n*                                                                     *\n*      If RC=0, DISCOMM_USING_KSDS will be set to the KSDS selected   *\n*      If RC=4, user selected the user defined (via option 'A')       *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=ULSTK\n         L     R15,V_DISULSTK                    DISULSTK ENTRY POINT\n         BALR  R14,R15                           DISPLAY LIST OF KSDSES\n         ITRACE ID=ULSTK_RC,                                           +\n               RDATA1=R15\n         LTR   R15,R15                           KSDS SELECTED?\n         BZ    MAIN0310                          YES\n         CH    R15,H4                            ASSEMBLED DSECTS?\n         BE    MAIN0330                          YES\n         B     MAIN9000                          ABORT\n* ------------------------------------------------------------------- *\n*        User has selected a KSDS                                     *\n* ------------------------------------------------------------------- *\nMAIN0310 DS    0H\n         ITRACE ID=KSDS,                         KSDS WAS SELECTED     +\n               RDATA1=R5\n         L     R5,DISCOMM_USING_KSDS             SELECTED KSDS\n         USING KSDS_DSECT,R5                     DEFINE BASE\n         TM    KSDS_FLAGS,$KSDS_DSECTS_READ      DSECTS READ?\n         BO    MAIN0320                          YES\n         L     R15,V_DISDREAD                    DSECT READER\n         ITRACE ID=DREAD                         CALLING DSECT READER\n         BALR  R14,R15                           READ DSECTS\n         ITRACE ID=DREAD_RC,                                           +\n               RDATA1=R15\nMAIN0320 DS    0H\n         MVC   DISCOMM_USING_DSECT,KSDS_DSECT_NEXT 1ST DSECT\n         B     MAIN0340\n* ------------------------------------------------------------------- *\n*        Use user supplied DSECTs (from option A)                     *\n* ------------------------------------------------------------------- *\nMAIN0330 DS    0H\n         SR    R5,R5                             NOT FROM KSDS\n         TM    DISCOMM_FLAGS,$DISCOMM_ASSEMBLE_SOURCE\n         BNO   MAIN0335                          SOURCE NOT CHANGED\n         NI    DISCOMM_FLAGS,255-$DISCOMM_ASSEMBLE_SOURCE\n         L     R15,V_DISASSEM                    DISASSEM ENTRY POINT\n         ITRACE ID=CALL_ASM,                                           +\n               RDATA1=R15\n         BALR  R14,R15                           CALL DISASSEM\n         ITRACE ID=ASM_RC,                                             +\n               RDATA1=R15\n         CH    R15,H4                            ERROR IN ASSEMBLY?\n         BNH   MAIN0335                          NO\n         MVC   SPF_MSG_1(MSG01_L),MSG01\n         MVC   SPF_MSG_2(MSG02_L),MSG02\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*        Display list of DSECTs                                       *\n* ------------------------------------------------------------------- *\nMAIN0335 DS    0H\n         MVC   DISCOMM_USING_DSECT,DISCOMM_DSECT_NEXT 1ST DSECT\nMAIN0340 DS    0H\n         L     R15,V_DISULSTD                    DISPLAY DSECTS\n         ITRACE ID=ULSTD\n         BALR  R14,R15                           CALLING ULSTD\n         ITRACE ID=ULSTD_RC,                                           +\n               RDATA1=R15\n         LTR   R15,R15                           DSECT SELECTED?\n         BNZ   MAIN9000                          NO\n         L     R4,DISCOMM_USING_DSECT\n         LTR   R5,R5                             DATA FROM A KSDS?\n         BZ    MAIN0350                          NO\n         TM    DSECT_FLAGS,$DSECT_LABELS_READ    LABELS READ?\n         BO    MAIN0350                          YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R15,V_DISLREAD                    DISLREAD ENTRY POINT\n         ITRACE ID=LREAD\n         BALR  R14,R15                           CALL DISLREAD\n         ITRACE ID=LREAD_RC,                                           +\n               RDATA1=R15\n         OI    DSECT_FLAGS,$DSECT_LABELS_READ    SET FLAG\n* ------------------------------------------------------------------- *\n*        Display list of labels in selected DSECT                     *\n* ------------------------------------------------------------------- *\nMAIN0350 DS    0H\n         L     R15,V_DISULSTL                    DISPLAY LABELS\n         ITRACE ID=ULSTL\n         BALR  R14,R15                           CALLING ULSTL\n         ITRACE ID=ULSTL_RC,                                           +\n               RDATA1=R15\n* ------------------------------------------------------------------- *\n*        Display registers, start and end disp's                      *\n* ------------------------------------------------------------------- *\nMAIN0360 DS    0H\n         MVC   SPF_REGISTER,COMM_BLANKS          INITIALIZE REGISTER\n         MVC   SPF_BEGIN,C_ZERO                  INITIALIZE BEGIN DISP\n         MVC   SPF_END,C_ZERO                    INITIALIZE END DISP\nMAIN0370 DS    0H\n         ITRACE ID=DISUREGD\n         MVC   SPF_LABEL1,COMM_BLANKS            INITIALIZE LABEL NAME\n         MVC   SESS_DISP_PANEL,PANEL_NAME2       SET PANEL NAME\n         XC    SESS_DISP_VDATA_ADDR,SESS_DISP_VDATA_ADDR\n         XC    SESS_DISP_VDATA_LENGTH,SESS_DISP_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP                 DISP ENTRY POINT\n         BALR  R14,R15                           DISPLAY\n         ITRACE ID=DISP_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                           RC = 0?\n         BNZ   MAIN0010                          NO\n         CLC   ABEND,SPF_ZCMD                    ABEND?\n         BE    ABEND000                          YES\n* ------------------------------------------------------------------- *\n*        Verify base register                                         *\n* ------------------------------------------------------------------- *\n         OC    SPF_REGISTER,COMM_BLANKS          REGISTER BLANK?\n         ITRACE ID=VER_REG,                                            +\n               DATA1=SPF_REGISTER\n         CLC   SPF_REGISTER,COMM_BLANKS          REGISTER BLANK?\n         BE    MAIN0440                          YES\n         LA    R1,L'SPF_REGISTER-1               LOOP LIMITER\nMAIN0380 DS    0H\n         CLI   SPF_REGISTER,C' '                 BLANK?\n         BNE   MAIN0390                          NO\n         MVC   SPF_REGISTER(L'SPF_REGISTER-1),SPF_REGISTER+1\n         BCT   R1,MAIN0380                       LOOP\nMAIN0390 DS    0H\n         LA    R1,REGISTER_TABLE\n         USING REGISTER_DSECT,R1\nMAIN0400 DS    0H\n         CLI   0(R1),X'FF'                       END OF TABLE?\n         BE    MAIN0450                          YES\n         CLC   SPF_REGISTER,REGISTER_NAME        REGISTER LOCATED?\n         BE    MAIN0410                          YES\n         LA    R1,REGISTER_DSECT_L(,R1)          NEXT\n         B     MAIN0400\nMAIN0410 DS    0H\n         MVC   DXD_REGISTER,REGISTER_REGISTER    SAVE REGISTER\n         MVC   DXD_REGISTER_NAME,REGISTER_NAME   SAVE REGISTER NAME\n* ------------------------------------------------------------------- *\n*        Verify begin and end disps                                   *\n* ------------------------------------------------------------------- *\n         ITRACE ID=VER_BEG,                                            +\n               DATA1=SPF_BEGIN\n         LA    R1,SPF_BEGIN                      BEGIN DISP\n         ST    R1,DXD_CONV_SOURCE\n         LA    R1,DXD_BEGIN                      CONVERSION OUTPUT\n         ST    R1,DXD_CONV_OUT\n         LA    R1,DXD_CONV_PARMS                 CONVERSION PARMS\n         L     R15,V_DISDCONV                    CONVERTER ENTRY POINT\n         BALR  R14,R15\n         LTR   R15,R15                           ERRORS?\n         BNZ   MAIN0460                          YES\n         ITRACE ID=VER_END,                                            +\n               DATA1=SPF_END\n         LA    R1,SPF_END                        END DISP\n         ST    R1,DXD_CONV_SOURCE\n         LA    R1,DXD_END                        CONVERSION OUTPUT\n         ST    R1,DXD_CONV_OUT\n         LA    R1,DXD_CONV_PARMS                 CONVERSION PARMS\n         L     R15,V_DISDCONV                    CONVERTER ENTRY POINT\n         BALR  R14,R15\n         LTR   R15,R15                           ERRORS?\n         BNZ   MAIN0470                          YES\n         OC    DXD_END,DXD_END                   END DISP LEFT ZERO?\n         BNZ   MAIN0415                          NO\n         MVC   DXD_END,DISCOMM_CSECT_LENGTH\nMAIN0415 DS    0H\n         CLC   DXD_END,DXD_BEGIN                 END LESS THAN BEGIN?\n         BL    MAIN0480\n* ------------------------------------------------------------------- *\n*        We've put it off long enough, build a new USING block        *\n* ------------------------------------------------------------------- *\n         GETMAIN RU,                             GET MAIN STORAGE      +\n               LV=USING_DSECT_L,                                       +\n               LOC=ANY\n         LR    R7,R1                             COPY ADDRESS\n         ICM   R1,15,DXD_USING_NEXT              FIRST ON CHAIN NOW\n         BZ    MAIN0420                          NONE ON CHAIN\nFIRST    USING USING_DSECT,R1\n         ST    R7,FIRST.USING_PREV               SET PREV IN OLD 1ST\n         DROP  FIRST\nMAIN0420 DS    0H\n         XC    USING_DSECT(USING_DSECT_L),USING_DSECT\n         MVC   USING_NEXT,DXD_USING_NEXT         COPY FIRST ON CHAIN\n         ST    R7,DXD_USING_NEXT                 ADD NEW TO CHAIN\n         MVC   USING_EYE,USING_ID                IDENTIFY THE BLOCK\n         MVC   USING_NAME,SPF_LABEL1             COPY NAME\n         L     R4,DISCOMM_USING_DSECT            DSECT BLOCK\n         ST    R4,USING_DSECT_ADDR               CHAIN USING TO DSECT\n         MVC   USING_DSECT_NAME,DSECT_NAME       COPY DSECT NAME\n         MVC   USING_DSECT_LABEL,COMM_BLANKS     INITIALIZE LABEL\n         ICM   R3,15,DISCOMM_USING_LABEL         LABEL?\n         BZ    MAIN0430                          NO\n         ST    R3,USING_LABEL_ADDR               CHAIN USING TO LABEL\n         MVC   USING_DSECT_LABEL,LABEL_NAME      COPY LABEL NAME\nMAIN0430 DS    0H\n         MVC   USING_BEGIN,DXD_BEGIN             COPY BEGIN DISP\n         MVC   USING_END,DXD_END                 COPY END DISP\n         MVC   USING_REGISTER,DXD_REGISTER       COPY REGISTER\n         MVC   USING_CHAR_REGISTER,DXD_REGISTER_NAME\n         ITRACE ID=NEW_USNG,                                           +\n               RDATA1=R7\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0440 DS    0H\n         ITRACE ID=NO_REG\n         MVI   COMM_MSG_ID+1,1\n         B     MAIN0500\nMAIN0450 DS    0H\n         ITRACE ID=BAD_REG\n         MVI   COMM_MSG_ID+1,2\n         B     MAIN0500\nMAIN0460 DS    0H\n         ITRACE ID=BAD_BEG\n         MVI   COMM_MSG_ID+1,3\n         B     MAIN0510\nMAIN0470 DS    0H\n         ITRACE ID=BAD_END\n         MVI   COMM_MSG_ID+1,4\n         B     MAIN0510\nMAIN0480 DS    0H\n         ITRACE ID=END_LOW\n         MVI   COMM_MSG_ID+1,5\nMAIN0500 DS    0H\n         MVC   COMM_MSG_CSECT,MODID\n         L     R15,COMM_V_OSMSG\n         BALR  R14,R15\nMAIN0510 DS    0H\n         MVC   SPF_MSG_1,COMM_MSG_1\n         B     MAIN0370\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Normal exit..                                                *\n*        .  Free the old USING chain                                  *\n*        .  Replace old chain with new                                *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0600 DS    0H\n         ITRACE ID=SWITCH\n         ICM   R7,15,DISCOMM_USING_NEXT       FIRST ON 'OLD' CHAIN\n         BZ    MAIN0620\nMAIN0610 DS    0H\n         LR    R1,R7                          COPY ADDRESS\n         L     R7,USING_NEXT                  NEXT USING BLOCK\n         FREEMAIN RU,                         FREE USING BLOCK         +\n               A=(1),                                                  +\n               LV=USING_DSECT_L\n         LTR   R7,R7                          ANOTHER USING BLOCK?\n         BNZ   MAIN0610                       YES\nMAIN0620 DS    0H\n         ITRACE ID=SWAP\n         MVC   DISCOMM_USING_NEXT,DXD_USING_NEXT\n         XC    DXD_USING_NEXT,DXD_USING_NEXT\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN9000 DS    0H\n         ITRACE ID=ABORT\n         ICM   R7,15,DXD_USING_NEXT           FIRST USING\n         BZ    EXIT0000\nMAIN9010 DS    0H\n         LR    R1,R7                          COPY USING BLOCK ADDR\n         L     R7,USING_NEXT                  NEXT USING ON CHAIN\n         ITRACE ID=FREEUSNG,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=USING_DSECT_L\n         LTR   R7,R7                          ANOTHER USING?\n         BNZ   MAIN9010                       YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE REGISTER 13\n         L     R14,12(,R13)                   RESTORE REGISTERS\n         SR    R15,R15                        SET RC\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN TO CALLER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nABEND000 DS    0H\n         ITRACE ID=ABEND\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START     DC   Q(DXDULIST)\nV_DISASSEM    DC   V(DISASSEM)\nV_DISDCONV    DC   V(DISDCONV)\nV_DISDREAD    DC   V(DISDREAD)\nV_DISLREAD    DC   V(DISLREAD)\nV_DISUDEL     DC   V(DISUDEL)\nV_DISULSTD    DC   V(DISULSTD)\nV_DISULSTK    DC   V(DISULSTK)\nV_DISULSTL    DC   V(DISULSTL)\n\nF5            DC   F'5'\nH4            DC   H'4'\n\nABEND         DC   C'ABEND '\nCAN           DC   C'CAN '\nCANCEL        DC   C'CANCEL '\nC_ZERO        DC   CL8'00000000'\nPANEL_NAME1   DC   CL8'DISULIST'\nPANEL_NAME2   DC   CL8'DISUREGD'\nUSING_ID      DC   CL8'USING'\n\nMSG01         DS   0C\n              DC   C'DISULIST01E '\n              DC   C'Error(s) assembling source'\nMSG01_L       EQU  *-MSG01\n\nMSG02         DS   0C\n              DC   C'DISULIST02E '\n              DC   C'Correct assembler source or SYSLIBs'\nMSG02_L       EQU  *-MSG02\n\n              LTORG\n\nLINE01        DS   0C\n              DC   AL1($SCREEN_ATTR_INPUT)\nLINE01_DELETE DC   C' '\n              DC   AL1($SCREEN_ATTR_HIGH)\n              DC   C'Name '\n              DC   AL1($SCREEN_ATTR_HIGH_TURQUOISE)\nLINE01_NAME   DC   CL63' '\nLINE01_L      EQU  *-LINE01\n\nLINE02        DS   0C\n              DC   AL1($SCREEN_ATTR_HIGH)\n              DC   C'  Base '\n              DC   AL1($SCREEN_ATTR_HIGH_TURQUOISE)\nLINE02_BASE   DC   CL3' '\n              DC   AL1($SCREEN_ATTR_HIGH)\n              DC   C'       In effect from '\n              DC   AL1($SCREEN_ATTR_HIGH_GREEN)\nLINE02_BEGIN  DC   CL8' '\n              DC   AL1($SCREEN_ATTR_HIGH)\n              DC   C' to '\n              DC   AL1($SCREEN_ATTR_HIGH_GREEN)\nLINE02_END    DC   CL8' '\nLINE02_L      EQU  *-LINE02\n\nLINE03        DS   0C\n              DC   AL1($SCREEN_ATTR_HIGH)\n              DC   C'  DSECT'\n              DC   AL1($SCREEN_ATTR_HIGH_TURQUOISE)\nLINE03_DSECT  DC   CL71' '\nLINE03_L      EQU  *-LINE03\n\nLINE04        DS   0C\n              DC   AL1($SCREEN_ATTR_HIGH)\n              DC   C'  LABEL'\n              DC   AL1($SCREEN_ATTR_HIGH_TURQUOISE)\nLINE04_LABEL  DC   CL71' '\nLINE04_L      EQU  *-LINE04\n\nREGISTER_TABLE  DS    0C\n                DC    CL3'R0 ',X'00'\n                DC    CL3'R1 ',X'01'\n                DC    CL3'R2 ',X'02'\n                DC    CL3'R3 ',X'03'\n                DC    CL3'R4 ',X'04'\n                DC    CL3'R5 ',X'05'\n                DC    CL3'R6 ',X'06'\n                DC    CL3'R7 ',X'07'\n                DC    CL3'R8 ',X'08'\n                DC    CL3'R9 ',X'09'\n                DC    CL3'R10',X'0A'\n                DC    CL3'R11',X'0B'\n                DC    CL3'R12',X'0C'\n                DC    CL3'R13',X'0D'\n                DC    CL3'R14',X'0E'\n                DC    CL3'R15',X'0F'\n                DC    CL3'R00',X'00'\n                DC    CL3'R01',X'01'\n                DC    CL3'R02',X'02'\n                DC    CL3'R03',X'03'\n                DC    CL3'R04',X'04'\n                DC    CL3'R05',X'05'\n                DC    CL3'R06',X'06'\n                DC    CL3'R07',X'07'\n                DC    CL3'R08',X'08'\n                DC    CL3'R09',X'09'\n                DC    CL3'RA ',X'0A'\n                DC    CL3'RB ',X'0B'\n                DC    CL3'RC ',X'0C'\n                DC    CL3'RD ',X'0D'\n                DC    CL3'RE ',X'0E'\n                DC    CL3'RF ',X'0F'\n                DC    CL3'0  ',X'00'\n                DC    CL3'1  ',X'01'\n                DC    CL3'2  ',X'02'\n                DC    CL3'3  ',X'03'\n                DC    CL3'4  ',X'04'\n                DC    CL3'5  ',X'05'\n                DC    CL3'6  ',X'06'\n                DC    CL3'7  ',X'07'\n                DC    CL3'8  ',X'08'\n                DC    CL3'9  ',X'09'\n                DC    CL3'10 ',X'0A'\n                DC    CL3'11 ',X'0B'\n                DC    CL3'12 ',X'0C'\n                DC    CL3'13 ',X'0D'\n                DC    CL3'14 ',X'0E'\n                DC    CL3'15 ',X'0F'\n                DC    CL3'A  ',X'0A'\n                DC    CL3'B  ',X'0B'\n                DC    CL3'C  ',X'0C'\n                DC    CL3'D  ',X'0D'\n                DC    CL3'E  ',X'0E'\n                DC    CL3'F  ',X'0F'\n                DC    X'FF'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDULIST                  DSECT\n                          COPY DXDPREF\n\nDXD_USING_PREV            DS   A          DUMMY FOR 'PREV' ON CHAIN\nDXD_USING_NEXT            DS   A          FIRST USING ON CHAIN\n\nDXD_FIRST_USING_DISPLAYED DS   A          FIRST USING DISPLAYED\nDXD_LAST_USING_DISPLAYED  DS   A          LAST USING DISPLAYED\n\nDXD_CONV_PARMS            DS   0A\nDXD_CONV_SOURCE           DS   A\nDXD_CONV_OUT              DS   A\n\nDXD_USINGS_PER_SCREEN     DS   H          USINGS PER SCREEN\nDXD_NBR_DISPLAYED         DS   H          NBR OF USINGS DISPLAYED\n\nDXD_WORK                  DS   CL9\nDXD_REGISTER              DS   X\nDXD_REGISTER_NAME         DS   CL3\nDXD_BEGIN                 DS   XL4\nDXD_END                   DS   XL4\n\nDXD_FLAGS                 DS   X\n$DXD_DELETE               EQU  X'80'      .. USING BLOCK DELETED\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREGISTER_DSECT            DSECT\nREGISTER_NAME             DS   CL3\nREGISTER_REGISTER         DS   X\nREGISTER_DSECT_L          EQU  *-REGISTER_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n              END     DISULIST\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISULSTD": {"ttr": 778, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00A\\x01\\t4\\x1f\\x01\\t6/\\x15G\\x00\\xfb\\x00\\xe3\\x00C\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2009-12-07T00:00:00", "modifydate": "2009-12-28T15:47:41", "lines": 251, "newlines": 227, "modlines": 67, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: DISULSTD                                              *\n*                                                                     *\n*  FUNCTION:                                                          *\n*    Display DSECTs for USING definitions                             *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISULSTD CSECT\nDISULSTD AMODE 31\nDISULSTD RMODE ANY\n         USING DISULSTD,R15\n         B     MOD0000                           SKIP EYECATCHER\nMODID    DC    CL8'DISULSTD'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                   SAVE REGS\n         LR    R10,R15                           SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISULSTD,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR                 WORK AREA\n         A     R15,DXD_START                     PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         USING DXDULSTD,R13\n         MVC   DXD_CSECT,MODID\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=ENTRY,                                              +\n               DATA1=DISCOMM_USING_KSDS,                               +\n               DATA2=DISCOMM_USING_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   DXD_FIRST_DSECT,DISCOMM_USING_DSECT\n         MVC   DXD_FIRST_DSECT_DISPLAYED,DISCOMM_USING_DSECT\nMAIN0010 DS    0H\n         ITRACE ID=BUILD\n         L     R0,DISCOMM_VDATA_ADDR\n         L     R1,DISCOMM_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\n         L     R6,DISCOMM_VDATA_ADDR\n         L     R7,SPF_VDEPTH\n         ICM   R5,15,DXD_FIRST_DSECT_DISPLAYED\n         USING DSECT_DSECT,R5\n         BZ    MAIN0210\nMAIN0020 DS    0H\n         ST    R5,DXD_LAST_DSECT_DISPLAYED\n         MVC   0(LINE01_L,R6),LINE01\n         USING LINE01,R6\n         MVC   LINE01_DSECT,DSECT_NAME           COPY NAME\n         A     R6,SPF_VWIDTH\n         BCT   R7,MAIN0030\n         B     MAIN0040\nMAIN0030 DS    0H\n         ICM   R5,15,DSECT_NEXT                  NEXT DSECT\n         BNZ   MAIN0020\n* ------------------------------------------------------------------- *\n*        Display list of DSECTS                                       *\n* ------------------------------------------------------------------- *\nMAIN0040 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_NAME        SET PANEL NAME\n         MVC   SESS_DISP_VDATA_ADDR,DISCOMM_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DISCOMM_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP                 DISP ENTRY POINT\n         BALR  R14,R15                           DISPLAY\n         ITRACE ID=DISP_RC,                                            +\n               RDATA1=R15,                                             +\n               DATA2=SPF_ZVERB\n         LTR   R2,R15                            RC = 0?\n         BNZ   MAIN0210                          NO\n         CLC   ABEND,SPF_ZCMD                    ABEND?\n         BE    ABEND000                          YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R6,DISCOMM_VDATA_ADDR\n         L     R7,SPF_VDEPTH\n         L     R5,DXD_FIRST_DSECT_DISPLAYED\nMAIN0050 DS    0H\n         CLI   LINE01_SELECT,C' '                SELECTED?\n         BNE   MAIN0200                          YES\n         A     R6,SPF_VWIDTH                     NEXT LINE\n         BCT   R7,MAIN0060\n         B     MAIN0070\nMAIN0060 DS    0H\n         ICM   R5,15,DSECT_NEXT                  NEXT DSECT\n         BNZ   MAIN0050\n* ------------------------------------------------------------------- *\n*        Nothing selected, check for scrolling                        *\n* ------------------------------------------------------------------- *\nMAIN0070 DS    0H\n         ITRACE ID=SCROLL,                                             +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=SPF_ZSCROLLA\n         CLI   SPF_ZVERB,C'B'                    BOTTOM?\n         BE    MAIN0080\n         CLI   SPF_ZVERB,C'D'                    DOWN?\n         BE    MAIN0100\n         CLI   SPF_ZVERB,C'T'                    TOP?\n         BE    MAIN0120\n         CLI   SPF_ZVERB,C'U'                    UP?\n         BE    MAIN0130\n         B     MAIN0010\nMAIN0080 DS    0H\n         ITRACE ID=BOTTOM\n         L     R5,DXD_FIRST_DSECT                FIRST DSECT\nMAIN0090 DS    0H\n         ST    R5,DXD_FIRST_DSECT_DISPLAYED      SAVE DSECT BLOCK ADDR\n         ICM   R5,15,DSECT_NEXT                  ANOTHER DSECT?\n         BNZ   MAIN0090                          YES\n         B     MAIN0010\nMAIN0100 DS    0H\n         ITRACE ID=DOWN\n         CLI   SPF_ZSCROLLA,C'M'                 BOTTOM?\n         BE    MAIN0080                          YES\n         L     R5,DXD_FIRST_DSECT_DISPLAYED      FIRST DSECT DISPLAYED\n         L     R2,SPF_ZSCROLLN                   NBR TO SCROLL\nMAIN0110 DS    0H\n         ST    R5,DXD_FIRST_DSECT_DISPLAYED      SAVE DSECT BLOCK ADDR\n         ICM   R5,15,DSECT_NEXT                  ANOTHER DSECT?\n         BZ    MAIN0010                          NO.. DISPLAY\n         BCT   R2,MAIN0110                       LOOP\n         B     MAIN0010\nMAIN0120 DS    0H\n         ITRACE ID=TOP\n         MVC   DXD_FIRST_DSECT_DISPLAYED,DXD_FIRST_DSECT\n         B     MAIN0010\nMAIN0130 DS    0H\n         CLI   SPF_ZSCROLLA,C'M'                 TOP?\n         BE    MAIN0120                          YES\n         L     R5,DXD_FIRST_DSECT_DISPLAYED      FIRST ON LAST DISPLAY\n         L     R2,SPF_ZSCROLLN                   NBR TO SCROLL\nMAIN0140 DS    0H\n         ITRACE ID=UP,                                                 +\n               RDATA1=R5,                                              +\n               RDATA2=R2\n         ST    R5,DXD_FIRST_DSECT_DISPLAYED      SAVE DSECT BLOCK ADDR\n         ICM   R5,15,DSECT_PREV                  ANOTHER BLOCK?\n         BZ    MAIN0010                          NO\n         BCT   R2,MAIN0140                       LOOP\n         B     MAIN0010\n         DROP  R6\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0200 DS    0H\n         ITRACE ID=SELECTED,                                           +\n               RDATA1=R5,                                              +\n               DATA2=DSECT_NAME\n         ST    R5,DISCOMM_USING_DSECT            SAVE ADDR\n         SR    R15,R15                           INDICATE 'SELECTED'\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0210 DS    0H\n         ITRACE ID=ABORT\n         XC    DISCOMM_USING_DSECT,DISCOMM_USING_DSECT NO DSECT\n         LA    R15,4                             SET RC\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15\n         L     R13,4(,R13)                       RESTORE REGISTER 13\n         L     R14,12(,R13)                      RESTORE R14\n         LM    R0,12,20(R13)                     RESTORE REGISTERS\n         BR    R14                               RETURN TO CALLER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nABEND000 DS    0H\n         ITRACE ID=ABEND\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START     DC   Q(DXDULSTD)\n\nABEND         DC   C'ABEND'\nPANEL_NAME    DC   CL8'DISDMENU'\n\nLINE01        DS   0C\n              DC   CL2' '\n              DC   AL1($SCREEN_ATTR_INPUT)\nLINE01_SELECT DC   C' '\n              DC   AL1($SCREEN_ATTR_HIGH_TURQUOISE)\nLINE01_DSECT  DC   CL63' '\nLINE01_L      EQU  *-LINE01\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDULSTD                  DSECT\n                          COPY DXDPREF\n\nDXD_FIRST_DSECT           DS  A          FIRST DSECT ON CHAIN\nDXD_FIRST_DSECT_DISPLAYED DS  A          FIRST DSECT DISPLAYED\nDXD_LAST_DSECT_DISPLAYED  DS  A          LAST  DSECT DISPLAYED\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n              END     DISULSTD\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISULSTK": {"ttr": 1025, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00D\\x01\\t4\\x1f\\x01\\t6/\\x15G\\x01%\\x01\\x1b\\x00\"\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2009-12-07T00:00:00", "modifydate": "2009-12-28T15:47:44", "lines": 293, "newlines": 283, "modlines": 34, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: DISULSTK                                              *\n*                                                                     *\n*  FUNCTION:                                                          *\n*    Display the list of pre-processed DSECT KSDSes for USINGs.       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISULSTK CSECT\nDISULSTK AMODE 31\nDISULSTK RMODE ANY\n         USING DISULSTK,R15\n         B     MOD0000                           SKIP EYECATCHER\nMODID    DC    CL8'DISULSTK'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                   SAVE REGS\n         LR    R10,R15                           SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISULSTK,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR                 WORK AREA\n         A     R15,DXD_START                     PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         USING DXDULSTK,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n         USING KSDS_DSECT,R5\n         USING DSECT_DSECT,R4\n         USING LABEL_DSECT,R3\n         L     R0,DISCOMM_VDATA_ADDR\n         L     R1,DISCOMM_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                            INITIALIZE VDATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*      Display list of DSECT KSDSes                                   *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0100 DS    0H\n         ITRACE ID=NEW\n         MVC   SPF_ZCMD,COMM_BLANKS\n         ICM   R1,15,DISCOMM_KSDS_NEXT           ANY KSDSES?\n         BZ    MAIN0140                          NO\n         ST    R1,DXD_FIRST_KSDS_DISPLAYED       SAVE FIRST KSDS\nMAIN0110 DS    0H\n         L     R0,DISCOMM_VDATA_ADDR\n         L     R1,DISCOMM_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                            INITIALIZE VDATA\n         ICM   R5,15,DXD_FIRST_KSDS_DISPLAYED\n         BZ    MAIN0140                          NONE TO DISPLAY\n         L     R6,DISCOMM_VDATA_ADDR\n         L     R2,SPF_VDEPTH                     NBR OF LINES\nMAIN0120 DS    0H\n         ST    R5,DXD_LAST_KSDS_DISPLAYED        SAVE LAST DISPLAYED\n         MVC   0(LINE01_L,R6),LINE01\n         USING LINE01,R6\n         MVC   LINE01_DSNAME,KSDS_DSNAME\n         DROP  R6\n         A     R6,SPF_VWIDTH                     NEXT LINE\n         BCT   R2,MAIN0130\n         B     MAIN0140\nMAIN0130 DS    0H\n         ICM   R5,15,KSDS_NEXT                   NEXT KSDS\n         BNZ   MAIN0120\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        Display the list of KSDS's                                   *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0140 DS    0H\n         MVC   SPF_ZCMD,COMM_BLANKS              INITIALIZE FUNCTION\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_NAME        SET PANEL NAME\n         MVC   SESS_DISP_VDATA_ADDR,DISCOMM_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DISCOMM_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP                 DISP ENTRY POINT\n         BALR  R14,R15                           DISPLAY\n         ITRACE ID=DISP_RC,                                            +\n               RDATA1=R15,                                             +\n               DATA2=SPF_ZVERB\n         LTR   R15,R15                           RC = 0?\n         BNZ   MAIN0330                          NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLI   SPF_FUNCTION,C' '                 'A' OPTION DSECTS?\n         BNE   MAIN0300                          YES\n         L     R5,DXD_FIRST_KSDS_DISPLAYED       FIRST KSDS DISPLAYED\n         L     R6,DISCOMM_VDATA_ADDR\n         L     R2,SPF_VDEPTH\n         USING LINE01,R6\nMAIN0150 DS    0H\n         OI    LINE01_SELECT,C' '                'TRANSLATE'\n         CLI   LINE01_SELECT,C' '                THIS DATASET SELECTED?\n         BNE   MAIN0310                          YES\n         ICM   R5,15,KSDS_NEXT                   NEXT KSDS\n         BZ    MAIN0140                          END OF CHAIN\n         A     R6,SPF_VWIDTH                     NEXT LINE\n         BCT   R2,MAIN0150                       LOOP\n         DROP  R6\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=SCROLL,                                             +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=SPF_ZSCROLLA\n         CLI   SPF_ZVERB,C'B'                    BOTTOM?\n         BE    MAIN0160\n         CLI   SPF_ZVERB,C'D'                    DOWN?\n         BE    MAIN0180\n         CLI   SPF_ZVERB,C'T'                    TOP?\n         BE    MAIN0200\n         CLI   SPF_ZVERB,C'U'                    UP?\n         BE    MAIN0210\n         B     MAIN0140                          NO SCROLL REQUESTED\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0160 DS    0H\n         ITRACE ID=BOTTOM\n         ICM   R5,15,DISCOMM_KSDS_NEXT           FIRST KSDS\n         BZ    MAIN0110                          NO KSDS(ES) DEFINED\nMAIN0170 DS    0H\n         ST    R5,DXD_FIRST_KSDS_DISPLAYED       SAVE KSDS BLOCK ADDR\n         ICM   R5,15,KSDS_NEXT                   ANOTHER KSDS?\n         BNZ   MAIN0170                          YES\n         B     MAIN0110\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0180 DS    0H\n         ITRACE ID=DOWN\n         ICM   R5,15,DXD_FIRST_KSDS_DISPLAYED    FIRST KSDS ON DISPLAY\n         BZ    MAIN0110                          NO KSDS(ES)\n         L     R2,SPF_ZSCROLLN                   NBR TO SCROLL\nMAIN0190 DS    0H\n         ST    R5,DXD_FIRST_KSDS_DISPLAYED       SAVE KSDS BLOCK ADDR\n         ICM   R5,15,KSDS_NEXT                   ANOTHER KSDS?\n         BZ    MAIN0110                          NO\n         BCT   R2,MAIN0190                       LOOP\n         B     MAIN0110                          BUILD DISPLAY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0200 DS    0H\n         ITRACE ID=TOP\n         MVC   DXD_FIRST_KSDS_DISPLAYED,DISCOMM_KSDS_NEXT\n         B     MAIN0110\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0210 DS    0H\n         ITRACE ID=UP\n         ICM   R5,15,DXD_FIRST_KSDS_DISPLAYED    FIRST KSDS ON DISPLAY\n         BZ    MAIN0220\n         L     R2,SPF_ZSCROLLN                   NBR TO SCROLL\nMAIN0220 DS    0H\n         ST    R5,DXD_FIRST_KSDS_DISPLAYED       SAVE KSDS BLOCK ADDR\n         ICM   R5,15,KSDS_PREV                   ANOTHER KSDS?\n         BZ    MAIN0110                          NO\n         BCT   R2,MAIN0220                       LOOP\n         B     MAIN0110                          BUILD DISPLAY\n* ------------------------------------------------------------------- *\n*        Display DSECTs from option 'A'                               *\n* ------------------------------------------------------------------- *\nMAIN0300 DS    0H\n         ITRACE ID=A_DSECTS\n         SR    R5,R5                             NOT A KSDS\n         LA    R15,4                             SET RC\n         B     MAIN0320\n* ------------------------------------------------------------------- *\n*        A KSDS was selected                                          *\n* ------------------------------------------------------------------- *\nMAIN0310 DS    0H\n         ITRACE ID=SELECTED,                                           +\n               RDATA1=R5,                                              +\n               DATA2=KSDS_DDNAME\n         ST    R5,DISCOMM_USING_KSDS\n         SR    R15,R15                           SET RC\nMAIN0320 DS    0H\n         XC    DISCOMM_USING_DSECT,DISCOMM_USING_DSECT\n         XC    DISCOMM_USING_LABEL,DISCOMM_USING_LABEL\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0330 DS    0H\n         ITRACE ID=ABORT\n         XC    DISCOMM_USING_KSDS,DISCOMM_USING_KSDS\n         LA    R15,8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15\n         L     R13,4(,R13)                       RESTORE REGISTER 13\n         L     R14,12(,R13)                      RESTORE R14\n         LM    R0,12,20(R13)                     RESTORE REGISTERS\n         BR    R14                               RETURN TO CALLER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nABEND000 DS    0H\n         ITRACE ID=ABEND\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START     DC   Q(DXDULSTK)\n\nPANEL_NAME    DC   CL8'DISKMENU'\n\n              LTORG\n\n\nLINE01        DS   0C\n              DC   CL2' '\n              DC   AL1($SCREEN_ATTR_INPUT)\nLINE01_SELECT DC   C' '\n              DC   AL1($SCREEN_ATTR_HIGH_TURQUOISE)\nLINE01_DSNAME DC   CL44' '\nLINE01_L      EQU  *-LINE01\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDULSTK                  DSECT\n                          COPY DXDPREF\n\n                          DS  A          DUMMY FOR 'PREV' ON CHAIN\n\nDXD_FIRST_KSDS_DISPLAYED  DS  A          FIRST KSDS DISPLAYED\nDXD_LAST_KSDS_DISPLAYED   DS  A          LAST KSDS DISPLAYED\n\nDXD_DSECT_ADDR            DS  A\n\n                          COPY PPDDATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n              END     DISULSTK\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISULSTL": {"ttr": 1032, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00H\\x01\\t4\\x1f\\x01\\t6/\\x15G\\x01\\x0f\\x01\\x12\\x00\\x02\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2009-12-07T00:00:00", "modifydate": "2009-12-28T15:47:48", "lines": 271, "newlines": 274, "modlines": 2, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  MODULE NAME: DISULSTL                                              *\n*                                                                     *\n*  FUNCTION:                                                          *\n*    Display LABELs in a DSECT for USING definitions                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISULSTL CSECT\nDISULSTL AMODE 31\nDISULSTL RMODE ANY\n         USING DISULSTL,R15\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'DISULSTL'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISULSTL,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR              WORK AREA\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         USING DXDULSTL,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               DATA1=DISCOMM_USING_KSDS,      .. RELATED KSDS          +\n               DATA2=DISCOMM_USING_DSECT      .. RELATED DSECT\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n         L     R5,DISCOMM_USING_DSECT\n         USING DSECT_DSECT,R5\n         USING LABEL_DSECT,R4\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        Display labels for selected DSECT                            *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   DXD_FIRST_LABEL,DSECT_LABEL_NEXT\n         MVC   DXD_FIRST_LABEL_DISPLAYED,DSECT_LABEL_NEXT\n         XC    DISCOMM_USING_LABEL,DISCOMM_USING_LABEL\nMAIN0010 DS    0H\n         L     R0,DISCOMM_VDATA_ADDR\n         L     R1,DISCOMM_VDATA_LENGTH\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\n         L     R6,DISCOMM_VDATA_ADDR\n         L     R7,SPF_VDEPTH\n         ICM   R4,15,DXD_FIRST_LABEL_DISPLAYED\n         BZ    MAIN0210\nMAIN0020 DS    0H\n         ITRACE ID=LABEL,                                              +\n               RDATA1=R4,                                              +\n               DATA2=LABEL_NAME\n         ST    R4,DXD_LAST_LABEL_DISPLAYED\n         MVC   0(LINE01_L,R6),LINE01\n         USING LINE01,R6\n         UNPK  DXD_WORK(9),LABEL_DISP(5)      UNPACK DISP\n         MVI   LINE01_SELECT,C' '\n         MVC   LINE01_DISP,DXD_WORK\n         TR    LINE01_DISP,COMM_HEXCHAR\n         MVC   LINE01_LABEL,LABEL_NAME\n         A     R6,SPF_VWIDTH                  NEXT LINE\n         BCT   R7,MAIN0030\n         B     MAIN0040\nMAIN0030 DS    0H\n         ICM   R4,15,LABEL_NEXT               NEXT LABEL\n         BNZ   MAIN0020\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Display labels                                               *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0040 DS    0H\n         ITRACE ID=DISPLAY\n         MVC   SESS_DISP_PANEL,PANEL_NAME     SET PANEL NAME\n         MVC   SESS_DISP_VDATA_ADDR,DISCOMM_VDATA_ADDR\n         MVC   SESS_DISP_VDATA_LENGTH,DISCOMM_VDATA_LENGTH\n         XC    SESS_DISP_CURSOR,SESS_DISP_CURSOR\n         L     R15,COMM_V_OSDISP              DISP ENTRY POINT\n         BALR  R14,R15                        DISPLAY\n         ITRACE ID=DISP_RC,                                            +\n               RDATA1=R15,                                             +\n               DATA2=SPF_ZVERB\n         LTR   R2,R15                         RC = 0?\n         BNZ   MAIN0220                       NO\n         CLC   ABEND,SPF_ZCMD                 ABEND?\n         BE    ABEND000                       YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R6,DISCOMM_VDATA_ADDR          VDATA ADDR\n         L     R7,SPF_VDEPTH\n         L     R4,DXD_FIRST_LABEL_DISPLAYED\nMAIN0050 DS    0H\n         CLI   LINE01_SELECT,C' '             SELECTED?\n         BNE   MAIN0200                       YES\n         A     R6,SPF_VWIDTH                  NEXT LINE\n         BCT   R7,MAIN0060\n         B     MAIN0070\nMAIN0060 DS    0H\n         ICM   R4,15,LABEL_NEXT               NEXT LABEL\n         BNZ   MAIN0050                       LOOP\n* ------------------------------------------------------------------- *\n*        Nothing selected, check for scrolling                        *\n* ------------------------------------------------------------------- *\nMAIN0070 DS    0H\n         ITRACE ID=SCROLL,                                             +\n               DATA1=SPF_ZVERB,                                        +\n               DATA2=SPF_ZSCROLLA\n         CLI   SPF_ZVERB,C'B'                 BOTTOM?\n         BE    MAIN0080                       YES\n         CLI   SPF_ZVERB,C'D'                 DOWN?\n         BE    MAIN0100\n         CLI   SPF_ZVERB,C'T'                 TOP?\n         BE    MAIN0120\n         CLI   SPF_ZVERB,C'U'                 UP?\n         BE    MAIN0130\n         B     MAIN0010\nMAIN0080 DS    0H\n         ITRACE ID=BOTTOM\n         L     R4,DXD_FIRST_LABEL             FIRST LABEL\nMAIN0090 DS    0H\n         ST    R4,DXD_FIRST_LABEL_DISPLAYED   SAVE LABEL BLOCK ADDR\n         ICM   R4,15,LABEL_NEXT               ANOTHER LABEL?\n         BNZ   MAIN0090                       YES\n         B     MAIN0010\nMAIN0100 DS    0H\n         ITRACE ID=DOWN\n         CLI   SPF_ZSCROLLA,C'M'              BOTTOM?\n         BE    MAIN0080                       YES\n         L     R4,DXD_FIRST_LABEL_DISPLAYED   FIRST LABEL DISPLAYED\n         L     R2,SPF_ZSCROLLN                NBR TO SCROLL\nMAIN0110 DS    0H\n         ST    R4,DXD_FIRST_LABEL_DISPLAYED   SAVE LABEL BLOCK ADDR\n         ICM   R4,15,LABEL_NEXT               ANOTHER LABEL?\n         BZ    MAIN0010                       NO.. DISPLAY\n         BCT   R2,MAIN0110                    LOOP\n         B     MAIN0010\nMAIN0120 DS    0H\n         ITRACE ID=TOP\n         MVC   DXD_FIRST_LABEL_DISPLAYED,DXD_FIRST_LABEL\n         B     MAIN0010\nMAIN0130 DS    0H\n         ITRACE ID=UP\n         CLI   SPF_ZSCROLLA,C'M'              TOP?\n         BE    MAIN0120                       YES\n         L     R4,DXD_FIRST_LABEL_DISPLAYED   FIRST ON LAST DISPLAY\n         L     R2,SPF_ZSCROLLN                NBR TO SCROLL\nMAIN0140 DS    0H\n         ST    R4,DXD_FIRST_LABEL_DISPLAYED   SAVE LABEL BLOCK ADDR\n         ICM   R4,15,LABEL_PREV               ANOTHER BLOCK?\n         BZ    MAIN0010                       NO\n         BCT   R2,MAIN0140                    LOOP\n         B     MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0200 DS    0H\n         ITRACE ID=SELECTED\n         ST    R4,DISCOMM_USING_LABEL         SAVE LABEL BLOCK ADDR\n         SR    R15,R15                        SET RC\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0210 DS    0H\n         ITRACE ID=NONE\n         XC    DISCOMM_USING_LABEL,DISCOMM_USING_LABEL\n         LA    R15,4                          SET RC\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0220 DS    0H\n         ITRACE ID=ABORT\n         XC    DISCOMM_USING_LABEL,DISCOMM_USING_LABEL\n         LA    R15,8                          SET RC\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15\n         L     R13,4(,R13)                    RESTORE REGISTER 13\n         L     R14,12(,R13)                   RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE REGISTERS\n         BR    R14                            RETURN TO CALLER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nABEND000 DS    0H\n         ITRACE ID=ABEND\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START     DC   Q(DXDULSTL)\n\nPANEL_NAME    DC   CL8'DISLMENU'\nABEND         DC   C'ABEND'\n\n              LTORG\n\nLINE01        DS   0C\n              DC   CL2' '\n              DC   AL1($SCREEN_ATTR_INPUT)\nLINE01_SELECT DC   C' '\n              DC   AL1($SCREEN_ATTR_HIGH_YELLOW)\nLINE01_DISP   DC   CL8' '\n              DC   AL1($SCREEN_ATTR_HIGH_TURQUOISE)\nLINE01_LABEL  DC   CL63' '\nLINE01_L      EQU  *-LINE01\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDULSTL                  DSECT\n                          COPY DXDPREF\n\nDXD_FIRST_LABEL           DS  A               FIRST LABEL ON CHAIN\nDXD_FIRST_LABEL_DISPLAYED DS  A               FIRST LABEL DISPLAYED\nDXD_LAST_LABEL_DISPLAYED  DS  A               LAST LABEL DISPLAYED\n\nDXD_WORK                  DS  XL9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     ATTRS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n              END     DISULSTL\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DISVBU": {"ttr": 1798, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x004\\x01\\t4\\x8f\\x01\\t6_\\x08\\x12\\x00\\x8d\\x00\\x84\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2009-12-14T00:00:00", "modifydate": "2009-12-31T08:12:34", "lines": 141, "newlines": 132, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        Verify BASE statements reference disp's within the CSECT     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDISVBU   CSECT\nDISVBU   AMODE 31\nDISVBU   RMODE ANY\n         USING DISVBU,R15\n         B     INIT0000                       SKIP EYECATCHER\nMODID    DC    CL8'DISVBU'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nINIT0000 DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISVBU,R10\n         USING DISCOMM,R9\n         L     R15,SESS_DXD_ADDR\n         A     R15,DXD_START\n         ST    R15,8(,R13)\n         ST    R13,4(,R15)\n         LR    R13,R15\n         USING DXDVBU,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY\n         L     R8,COMM_OSSPFD\n         USING OSSPFD,R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVI   DXD_RC,0\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ICM   R7,15,DISCOMM_BASE_NEXT        FIRST BASE ENTRY\n         USING BASE_DSECT,R7\n         BZ    EXIT0000                       NO BASES DEFINED\nBASE0000 DS    0H\n         CLC   BASE_BEGIN,DISCOMM_CSECT_LENGTH BEYOND END OF CSECT?\n         BH    BASE0010                       YES\n         CLC   BASE_END,DISCOMM_CSECT_LENGTH  BEYOND END OF CSECT?\n         BNH   BASE0020                       NO\n         ITRACE ID=BIG_END                    END DISP IS TOO LARGE\n         MVI   COMM_MSG_ID+1,1\n         MVC   COMM_INFO_01(3),BASE_CHAR_REGISTER\n         MVC   COMM_INFO_02(4),BASE_END\n         MVC   COMM_INFO_03(4),DISCOMM_CSECT_LENGTH\n         BAL   R6,MSG0000                     ISSUE MESSAGE\n         MVC   BASE_END,DISCOMM_CSECT_LENGTH  LIMIT TO CSECT LENGTH\n         B     BASE0020\nBASE0010 DS    0H\n         ITRACE ID=BIG_BEG                    BEGIN DISP IS TOO LARGE\n         MVI   COMM_MSG_ID+1,2\n         MVC   COMM_INFO_01(3),BASE_CHAR_REGISTER\n         MVC   COMM_INFO_02(4),BASE_BEGIN\n         BAL   R6,MSG0000                     ISSUE MESSAGE\n         OI    DXD_RC,8                       SET RC\nBASE0020 DS    0H\n         ICM   R7,15,BASE_NEXT                NEXT BASE BLOCK\n         BNZ   BASE0000                       LOOP\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMSG0000  DS    0H\n         MVC   COMM_MSG_CSECT,MODID           SET CSECT NAME\n         MVI   COMM_MSG_ID,0\n         L     R15,COMM_V_OSMSG               DISMSG ENTRY POINT\n         BALR  R14,R15                        BUILD MESSAGE(S)\n         MVC   SPF_MSG_1,COMM_MSG_1           1ST MESSAGE\n         MVC   SPF_MSG_2,COMM_MSG_2           1ST MESSAGE\n         MVC   SPF_MSG_3,COMM_MSG_3           1ST MESSAGE\n         MVC   SPF_MSG_4,COMM_MSG_4           1ST MESSAGE\n         MVC   SPF_MSG_5,COMM_MSG_5           1ST MESSAGE\n         BR    R6\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         SR    R15,R15                                                  ASE01690\n         IC    R15,DXD_RC                     SET RC\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         L     R14,12(,R13)                   RESTORE REGISTER 14       ASE01670\n         LM    R0,R12,20(R13)                 RESTORE OTHER REGISTERS   ASE01680\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START DC   Q(DXDVBU)\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDVBU           DSECT\n                 COPY  DXDPREF\n\nDXD_RC           DS    X\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n             END   DISVBU\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "GENB2S": {"ttr": 3343, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00D\\x01\\x10\\x00o\\x01\\x10\\x00\\x8f\\x083\\x00\\xbd\\x00\\xb2\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2010-01-06T00:00:00", "modifydate": "2010-01-08T08:33:44", "lines": 189, "newlines": 178, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: GENB2S                                               *\n*                                                                    *\n*  Function:                                                         *\n*   Generate B2 \"S\" format instructions                              *\n*                                                                    *\n*  At entry R7 is AREA address                                       *\n*           R5 is address of instruction                             *\n*           R4 is address of OPCODE entry                            *\n*                                                                    *\n*--------------------------------------------------------------------*\nGENB2S   CSECT\nGENB2S   AMODE 31\nGENB2S   RMODE ANY\n         USING GENB2S,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISCOMM,R9\n         USING AREA_DSECT,R7\n         USING OPCODE_DSECT,R4\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'GENB2S'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING GENB2S,R10\n         L     R15,SESS_DXD_ADDR              WORK AREA BASE\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        SET SAVE AREA ADDRESS\n         USING DXDSI,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R7,                                              +\n               DATA2=0(R5)\n         MVC   DXD_BLANKS,COMM_BLANKS\n         LA    R8,DISCOMM_SOURCE_OPERAND1\n         ICM   R1,15,AREA_REF_LABEL1          LABEL REFERENCED?\n         USING LABEL_DSECT,R1\n         BZ    GEN0030                        NO\n*--------------------------------------------------------------------*\n*        Generate label and displacement                             *\n*--------------------------------------------------------------------*\n         ICM   R2,15,AREA_REF_USING1          USING BLOCK\n         BZ    GEN0020                        NO\n         USING USING_DSECT,R2\n         CLC   USING_NAME,COMM_BLANKS         NAME BLANK?\n         BE    GEN0020                        YES\n         MVC   0(L'USING_NAME,R8),USING_NAME\n         BAL   R15,SCAN0000                   FIND END OF NAME\n         MVI   0(R8),C'.'                     INSERT DELIMITER\n         LA    R8,1(,R8)\nGEN0020  DS    0H\n         MVC   0(L'LABEL_NAME,R8),LABEL_NAME\n         BAL   R15,SCAN0000                   FIND END OF NAME\n         ICM   R0,15,AREA_REF_DISP1           DISP FROM LABEL\n         BZ    EXIT0000                       ZERO..\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         MVI   0(R1),C'+'                     INSERT PLUS\n         MVC   DXD_EDIT_WORD,EDIT_WORD\n         ED    DXD_EDIT_WORD,COMM_DWORD+4\n         LA    R2,DXD_EDIT_WORD\n         BAL   R15,SCAN1000\n         MVC   1(4,R8),0(R2)                  COPY DISP\n         B     EXIT0000\n*--------------------------------------------------------------------*\n*        Generate disp from register                                 *\n*--------------------------------------------------------------------*\nGEN0030  DS    0H\n         MVC   DXD_WORK(2),2(R5)              COPY BASE AND DISP\n         NI    DXD_WORK,X'0F'                 REMOVE BASE\n         SR    R0,R0\n         ICM   R0,3,DXD_WORK                  DISP ONLY\n         BZ    GEN0040\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   DXD_EDIT_WORD,EDIT_WORD\n         ED    DXD_EDIT_WORD,COMM_DWORD+4     EDIT DISP\n         LA    R2,DXD_EDIT_WORD\n         BAL   R15,SCAN1000\n         MVC   DISCOMM_SOURCE_OPERAND1(4),0(R2)\n         B     GEN0050\nGEN0040  DS    0H\n         MVI   DISCOMM_SOURCE_OPERAND1,C'0'\nGEN0050  DS    0H\n         LA    R8,DISCOMM_SOURCE_OPERAND1\n         BAL   R15,SCAN0000\n         MVI   0(R8),C'('\n         MVI   1(R8),C'R'\n         SR    R2,R2\n         IC    R2,2(R5)                       BASE +\n         SRL   R2,4                           SHIFT OUT DISP\n         SLL   R2,1\n         LA    R2,REGISTER_TABLE(R2)\n         MVC   2(2,R8),0(R2)\n         BAL   R15,SCAN0000\n         MVI   0(R8),C')'\n         B     EXIT0000\n*--------------------------------------------------------------------*\n*        Find next blank                                             *\n*--------------------------------------------------------------------*\nSCAN0000 DS    0H\n         CLI   0(R8),C' '\n         BER   R15\n         LA    R8,1(,R8)\n         B     SCAN0000\n*--------------------------------------------------------------------*\n*        Find first non-zero                                         *\n*--------------------------------------------------------------------*\nSCAN1000 DS    0H\n         CLI   0(R2),C'0'\n         BNER  R15\n         LA    R2,1(,R2)\n         B     SCAN1000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START      DC   Q(DXDSI)\nEDIT_WORD      DC   X'F020202020202120'\n\nREGISTER_TABLE DS   0C\n               DC   CL2'0 '\n               DC   CL2'1 '\n               DC   CL2'2 '\n               DC   CL2'3 '\n               DC   CL2'4 '\n               DC   CL2'5 '\n               DC   CL2'6 '\n               DC   CL2'7 '\n               DC   CL2'8 '\n               DC   CL2'9 '\n               DC   CL2'10'\n               DC   CL2'11'\n               DC   CL2'12'\n               DC   CL2'13'\n               DC   CL2'14'\n               DC   CL2'15'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDSI          DSECT\n               COPY DXDPREF\nDXD_WORK       DS   XL8\n\nDXD_EDIT_WORD  DS   XL8\nDXD_BLANKS     DS   CL8\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      GENB2S\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GENDC": {"ttr": 3082, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0c\\x008\\x01\\t4\\x8f\\x01\\x10\\x00\\x7f\\x16!\\x01k\\x01c\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.12", "flags": 0, "createdate": "2009-12-14T00:00:00", "modifydate": "2010-01-07T16:21:38", "lines": 363, "newlines": 355, "modlines": 0, "user": "RLRICE"}, "text": "* -------------------------------------------------------------------*\n*                                                                    *\n*  Module name: GENDC                                                *\n*                                                                    *\n*  Function:                                                         *\n*   Generate DCs                                                     *\n*                                                                    *\n*  At entry R7 is address of current AREA block                      *\n*           R5 is address of instruction text                        *\n*           R4 is address of OPCODE table entry                      *\n*                                                                    *\n* -------------------------------------------------------------------*\nGENDC    CSECT\nGENDC    AMODE 31\nGENDC    RMODE ANY\n         USING GENDC,R15\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'GENDC'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING GENDC,R10\n         USING DISCOMM,R9\n         USING AREA_DSECT,R7\n         USING OPCODE_DSECT,R4\n         L     R15,SESS_DXD_ADDR              WORK AREA\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        SET SAVE AREA ADDRESS\n         USING DXDGENDC,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R7,                                              +\n               DATA2=AREA_BEGIN\n         MVC   OPCODE_MNEMONIC,OP_DC          SET OPCODE TO 'DC'\n         C     R7,DXD_AREA                    SAME AREA?\n         BE    INIT0010\n         ITRACE ID=NEWAREA,                                            +\n               DATA1=AREA_BEGIN,                                       +\n               DATA2=AREA_LENGTH\n         ST    R7,DXD_AREA                    SAVE AREA ADDRESS\n         MVC   DXD_BEGIN,AREA_BEGIN           COPY BEGIN DISP\n         MVC   DXD_LENGTH,AREA_LENGTH\nINIT0010 DS    0H\n         L     R5,DXD_BEGIN                   BEGIN DISP\n         ST    R5,DISCOMM_GEN_DISP            SET 'GEN' DISP\n         A     R5,DISCOMM_CSECT_TEXT          PLUS TEXT ADDRESS\n         L     R8,DXD_LENGTH                  AREA LENGTH\n         ITRACE ID=DC,                                                 +\n               RDATA1=R5,                                              +\n               RDATA2=R8\n         CLI   AREA_DATA_TYPE,$DATA_ACON      AD-CON?\n         BE    GEN0080                        YES\n         CLI   AREA_DATA_TYPE,$DATA_VCON      V-CON?\n         BE    GEN0130                        YES\n         CLI   AREA_DATA_TYPE,$DATA_CXD       CXD (PSEUDO AREA SIZE)?\n         BE    GEN0160                        YES\n         CLI   AREA_DATA_TYPE,$DATA_Q         Q (PSEUDO AREA DISP)?\n         BE    GEN0170                        YES\n* -------------------------------------------------------------------*\n*                                                                    *\n* -------------------------------------------------------------------*\nGEN0000  DS    0H\n         XC    DISCOMM_GEN_LENGTH,DISCOMM_GEN_LENGTH\n         CH    R8,H8                          MORE THAN 8?\n         BNH   GEN0010                        NO\n         LH    R8,H8                          LIMIT TO 8\nGEN0010  DS    0H\n         TRT   0(1,R5),PRINT                  PRINTABLE CHARACTER?\n         BZ    GEN0040                        YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        HEX CONSTANTS                                                *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=X_QUOTE,                                            +\n               RDATA1=R8\n         MVC   DISCOMM_SOURCE_OPERAND1(L'X_QUOTE),X_QUOTE\n         LA    R3,DISCOMM_SOURCE_OPERAND1+L'X_QUOTE\nGEN0020  DS    0H\n         TRT   0(1,R5),PRINT                  PRINTABLE?\n         BZ    GEN0030                        YES\n         UNPK  0(3,R3),0(2,R5)                UNPACK DATA\n         TR    0(2,R3),COMM_HEXCHAR           TRANSLATE TO PRINTABLE\n         LA    R5,1(R5)                       NEXT OBJECT MODULE BYTE\n         LA    R3,2(R3)                       NEXT IN OUTPUT\n         L     R15,DXD_BEGIN                  BEGIN DISP\n         LA    R15,1(,R15)                    PLUS 1\n         ST    R15,DXD_BEGIN                  CHANGE DISP\n         L     R15,DXD_LENGTH\n         BCTR  R15,0\n         ST    R15,DXD_LENGTH\n         L     R15,DISCOMM_GEN_LENGTH         LENGTH GENNED\n         LA    R15,1(,R15)                    PLUS 1\n         ST    R15,DISCOMM_GEN_LENGTH         UPDATE GENNED LENGTH\n         BCT   R8,GEN0020                     LOOP\nGEN0030  DS    0H\n         MVI   0(R3),C''''                    INSERT ENDING QUOTE\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CHARACTER CONSTANTS                                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nGEN0040  DS    0H\n         ITRACE ID=C_QUOTE,                                            +\n               RDATA1=R8\n         MVC   DISCOMM_SOURCE_OPERAND1(L'C_QUOTE),C_QUOTE\n         LA    R3,DISCOMM_SOURCE_OPERAND1+L'C_QUOTE\nGEN0050  DS    0H\n         TRT   0(1,R5),PRINT                  PRINTABLE?\n         BNZ   GEN0070                        NO\n         MVC   0(1,R3),0(R5)                  COPY DATA\n         LA    R3,1(,R3)                      NEXT IN GENERATED CODE\n         CLI   0(R5),X'7D'                    QUOTE?\n         BNE   GEN0060                        NO\n         MVI   0(R3),X'7D'                    INSERT SECOND QUOTE\n         LA    R3,1(,R3)                      ACCOUNT FOR IT\nGEN0060  DS    0H\n         LA    R5,1(,R5)                      NEXT IN TEXT\n         L     R15,DXD_BEGIN                  BEGIN DISP\n         LA    R15,1(,R15)                    PLUS 1\n         ST    R15,DXD_BEGIN                  CHANGE DISP\n         L     R15,DXD_LENGTH\n         BCTR  R15,0\n         ST    R15,DXD_LENGTH\n         L     R15,DISCOMM_GEN_LENGTH         LENGTH GENNED\n         LA    R15,1(,R15)                    PLUS 1\n         ST    R15,DISCOMM_GEN_LENGTH         UPDATE GENNED LENGTH\n         BCT   R8,GEN0050                     MINUS 1\nGEN0070  DS    0H\n         MVI   0(R3),C''''                    INSERT ENDING QUOTE\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        GENERATE ADCONs                                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nGEN0080  DS    0H\n         ITRACE ID=GENADCON\n         MVC   DISCOMM_SOURCE_OPERAND1(4),=C'AL ('\n         MVC   DISCOMM_SOURCE_OPERAND1+2(1),AREA_LENGTH+3\n         OI    DISCOMM_SOURCE_OPERAND1+2,X'F0'\n         LA    R2,DISCOMM_SOURCE_OPERAND1+4\n         ICM   R1,15,AREA_REF_LABEL1          LABEL BLOCK'S ADDRESS\n         BZ    GEN0110                        NO LABEL\n         USING LABEL_DSECT,R1\n         MVC   DISCOMM_SOURCE_OPERAND1+4(L'LABEL_NAME),LABEL_NAME\nGEN0090  DS    0H\n         CLI   0(R2),C' '                     BLANK?\n         BE    GEN0100                        YES\n         LA    R2,1(,R2)                      NEXT\n         B     GEN0090\nGEN0100  DS    0H\n         ICM   R0,15,AREA_REF_DISP1           DISPLACEMENT FROM LABEL\n         BZ    GEN0120                        NO DISPLACEMENT\n         MVI   0(R2),C'+'                     INSERT PLUS SIGN\n         LA    R2,1(,R2)                      UPDATE OUTPUT ADDRESS\nGEN0110  DS    0H\n         ICM   R0,15,AREA_REF_DISP1           DISPLACEMENT FROM LABEL\n         BZ    GEN0120                        NO DISPLACEMENT\n         CVD   R0,COMM_DWORD                  SET DISPLACEMENT\n         MVC   0(L'EDITWORD,R2),EDITWORD\n         ED    0(L'EDITWORD,R2),COMM_DWORD+4\n         LA    R2,L'EDITWORD(,R2)             UPDATE ADDRESS\n         TM    AREA_DATA_TYPE,$DATA_31        31-BIT MODE BIT ON?\n         BNO   GEN0120                        NO\n         MVC   0(L'X80,R2),X80                GEN 31-BIT MODE\n         LA    R2,L'X80(,R2)                  UPDATE ADDRESS\nGEN0120  DS    0H\n         MVI   0(R2),C')'                     CLOSING PARENTHESIS\n         XC    DXD_LENGTH,DXD_LENGTH          SIGNAL 'ALL DONE'\n         B     EXIT0000                       DONE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        GENERATE VCONs                                               *\n*                                                                     *\n* ------------------------------------------------------------------- *\nGEN0130  DS    0H\n         ITRACE ID=GENVCON\n         MVC   DISCOMM_SOURCE_OPERAND1(4),=C'VL ('\n         MVC   DISCOMM_SOURCE_OPERAND1+2(1),AREA_LENGTH+3\n         OI    DISCOMM_SOURCE_OPERAND1+2,X'F0' MAKE IT PRINTABLE\n         MVC   DISCOMM_SOURCE_OPERAND1+4(L'AREA_RLD_NAME),AREA_RLD_NAME\n         LA    R1,DISCOMM_SOURCE_OPERAND1\nGEN0140  DS    0H\n         CLI   0(R1),C' '\n         BE    GEN0150\n         LA    R1,1(,R1)\n         B     GEN0140\nGEN0150  DS    0H\n         MVI   0(R1),C')'                     CLOSING PARENTHESIS\n         XC    DXD_LENGTH,DXD_LENGTH          SIGNAL 'ALL DONE'\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        GENERATE CXD                                                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\nGEN0160  DS    0H\n         MVC   OPCODE_MNEMONIC,OP_CXD         CHANGE OPCODE TO CXD\n         XC    DXD_LENGTH,DXD_LENGTH          SIGNAL 'ALL DONE'\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        Generate \"Q\" constants.                                      *\n*                                                                     *\n*                                                                     *\n*  If the RLD name for the AREA matches the name of a DSECT,          *\n*     generate a \"DC  QLx(rld name)                                   *\n*  otherwise                                                          *\n*     generate a \"DC  ALx(0)\" with the QLx(rld name) as the comment   *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nGEN0170  DS    0H\n         ITRACE ID=GEN_Q\n         ICM   R3,15,DISCOMM_DSECT_NEXT\n         BZ    GEN0190                         NO DEFINED DSECTS\n         USING DSECT_DSECT,R3                  DEFINE BASSE\nGEN0180  DS    0H\n         CLC   DSECT_NAME,AREA_RLD_NAME        DSECT LOCATED?\n         BE    GEN0220                         YES\n         ICM   R3,15,DSECT_NEXT                NEXT DSECT\n         BNZ   GEN0180                         LOOP\nGEN0190  DS    0H\n         MVC   DISCOMM_SOURCE_OPERAND1+20(4),=C'QL ('\n         MVC   DISCOMM_SOURCE_OPERAND1+22(1),AREA_LENGTH+3\n         OI    DISCOMM_SOURCE_OPERAND1+22,X'F0' MAKE IT PRINTABLE\n         MVC   DISCOMM_SOURCE_OPERAND1+24(L'AREA_RLD_NAME),AREA_RLD_NAM+\n               E\n         LA    R1,DISCOMM_SOURCE_OPERAND1+24\nGEN0200  DS    0H\n         CLI   0(R1),C' '\n         BE    GEN0210\n         LA    R1,1(,R1)\n         B     GEN0200\nGEN0210  DS    0H\n         MVI   0(R1),C')'                     CLOSING PARENTHESIS\n         MVI   DISCOMM_SOURCE_OPERAND1+0,C'A'\n         MVC   DISCOMM_SOURCE_OPERAND1+1(3),DISCOMM_SOURCE_OPERAND1+21\n         MVI   DISCOMM_SOURCE_OPERAND1+4,C'0'\n         MVI   DISCOMM_SOURCE_OPERAND1+5,C')'\n         XC    DXD_LENGTH,DXD_LENGTH          SIGNAL 'ALL DONE'\n         B     EXIT0000\nGEN0220  DS    0H\n         MVC   DISCOMM_SOURCE_OPERAND1+0(4),=C'QL ('\n         MVC   DISCOMM_SOURCE_OPERAND1+2(1),AREA_LENGTH+3\n         OI    DISCOMM_SOURCE_OPERAND1+2,X'F0' MAKE IT PRINTABLE\n         MVC   DISCOMM_SOURCE_OPERAND1+4(L'AREA_RLD_NAME),AREA_RLD_NAME\n         LA    R1,DISCOMM_SOURCE_OPERAND1+4\nGEN0230  DS    0H\n         CLI   0(R1),C' '                     BLANK?\n         BE    GEN0240                        YES\n         LA    R1,1(,R1)                      NEXT\n         B     GEN0230\nGEN0240  DS    0H\n         MVI   0(R1),C')'                     INSERT ENDING PAREN\n         XC    DXD_LENGTH,DXD_LENGTH          SIGNAL 'ALL DONE'\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=LEN_ZERO\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         L     R15,DXD_LENGTH                 LENGTH LEFT\n         ITRACE ID=EXIT,                                               +\n               RDATA1=R15\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         L     R14,12(,R13)                   RESTORE R14\n         LM    R0,R12,20(R13)                 RESTORE OTHER REGISTERS   ASE01680\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_START      DC   Q(DXDGENDC)\nH8             DC   H'8'\nOP_CXD         DC   CL6'CXD'\nOP_DC          DC   CL6'DC'\nC_QUOTE        DC   C'C'''\nX_QUOTE        DC   C'X'''\nX80            DC   C'+X''80000000'\nEDITWORD       DC   X'F020202020202120'\n\nPRINT    DS   0C\n         DC   256X'FF'\n         ORG  PRINT+X'40'\n         DC   X'00'\n         ORG  PRINT+X'4A'\n         DC   6X'00'\n         ORG  PRINT+X'5A'\n         DC   8X'00'\n         ORG  PRINT+X'6B'\n         DC   5X'00'\n         ORG  PRINT+X'7A'\n         DC   6X'00'\n         ORG  PRINT+X'81'\n         DC   9X'00'\n         ORG  PRINT+X'91'\n         DC   9X'00'\n         ORG  PRINT+X'A2'\n         DC   9X'00'\n         ORG  PRINT+X'C0'\n         DC   10X'00'\n         ORG  PRINT+X'D0'\n         DC   10X'00'\n         ORG  PRINT+X'E2'\n         DC   8X'00'\n         ORG  PRINT+X'F0'\n         DC   10X'00'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDGENDC       DSECT\n               COPY DXDPREF\nDXD_AREA       DS   A\nDXD_BEGIN      DS   A\nDXD_LENGTH     DS   F\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n               END  GENDC\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GENE": {"ttr": 2574, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x003\\x01\\x10\\x00_\\x01\\x10\\x00_\\x11\\x12\\x00n\\x00n\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2010-01-05T00:00:00", "modifydate": "2010-01-05T11:12:33", "lines": 110, "newlines": 110, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: GENE                                                 *\n*                                                                    *\n*  Function:                                                         *\n*   GENErate \"E\" format (SAM) instructions                           *\n*                                                                    *\n*  At entry R7 is address of AREA                                    *\n*           R5 is address of instruction                             *\n*           R4 is address of OPCODE entry                            *\n*                                                                    *\n*--------------------------------------------------------------------*\nGENE     CSECT\nGENE     AMODE 31\nGENE     RMODE ANY\n         USING GENE,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISCOMM,R9\n         USING AREA_DSECT,R7\n         USING OPCODE_DSECT,R4\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'GENE'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING GENE,R10\n         GETMAIN RU,                                                   +\n               LV=WORK_L,                                              +\n               LOC=ANY\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING WORK,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R7,                                              +\n               DATA2=(0(R5),4)\n         LA    R3,DISCOMM_SOURCE_OPERAND1     INITIALIZE OUTPUT ADDR\n         CLI   1(R5),X'0C'                    SAM24?\n         BE    SAM0010                        YES\n         CLI   1(R5),X'0D'                    SAM31?\n         BE    SAM0020                        YES\n         CLI   1(R5),X'0E'                    SAM64?\n         BE    SAM0030                        YES\n         MVI   AREA_TYPE,$AREA_DATA           MUST BE DATA INSTEAD\n         B     EXIT0000\nSAM0010  DS    0H\n         MVC   OPCODE_MNEMONIC,OP_SAM24       SET MNEMONIC\n         B     EXIT0000\nSAM0020  DS    0H\n         MVC   OPCODE_MNEMONIC,OP_SAM31       SET MNEMONIC\n         B     EXIT0000\nSAM0030  DS    0H\n         MVC   OPCODE_MNEMONIC,OP_SAM64       SET MNEMONIC\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=WORK_L\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEDITWORD DC    X'40202120'\nOP_SAM24 DC    CL5'SAM24'\nOP_SAM31 DC    CL5'SAM31'\nOP_SAM64 DC    CL5'SAM64'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nWORK           DSECT\n               COPY DXDPREF\nWORK_L         EQU  *-WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      GENE\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GENREL1": {"ttr": 7691, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00S\\x01\\x10\\x00o\\x01\\x10\\x01\\x8f\\x10Q\\x01]\\x01,\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2010-01-06T00:00:00", "modifydate": "2010-01-18T10:51:53", "lines": 349, "newlines": 300, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  MODULE NAME: GENREL1                                              *\n*                                                                    *\n*  Function:                                                         *\n*   Generate \"relative\" (A7_x) instructions                          *\n*                                                                    *\n*                                                                    *\n*  The address mode is \"relative\", not \"base+disp\" so the reference  *\n*  was not caused by a USING.  Since there was no USING, there       *\n*  is never a \"named using\" (name.label) type label generated.       *\n*                                                                    *\n*                                                                    *\n*  At entry R7 is address of AREA                                    *\n*           R5 is address of instruction                             *\n*           R4 is address of OPCODE entry                            *\n*                                                                    *\n*--------------------------------------------------------------------*\nGENREL1  CSECT\nGENREL1  AMODE 31\nGENREL1  RMODE ANY\n         USING GENREL1,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISCOMM,R9\n         USING AREA_DSECT,R7\n         USING OPCODE_DSECT,R4\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'GENREL1'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING GENREL1,R10\n         GETMAIN RU,                                                   +\n               LV=WORK_L,                                              +\n               LOC=ANY\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING WORK,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R7,                                              +\n               DATA2=(0(R5),4)\n         LA    R3,DISCOMM_SOURCE_OPERAND1     INITIALIZE OUTPUT ADDRESS\n         MVC   COMM_INFO_01(1),1(R5)          COPY 2ND BYTE\n         NI    COMM_INFO_01,X'0F'             LEAVE OPCODE MODIFIER\n         SR    R1,R1\n         IC    R1,COMM_INFO_01                INSERT INTO R1\n         SLL   R1,2                           MULTIPLY BY 4\n         L     R15,A_TABLE(R1)\n         BR    R15\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nREL0000  DS    0H\n         ITRACE ID=REL0000\n         MVC   COMM_INFO_01(1),1(R5)          COPY 2ND BYTE\n         NI    COMM_INFO_01,X'F0'             LEAVE ONLY REGISTER NBR\n         SR    R1,R1\n         IC    R1,COMM_INFO_01                REGISTER NBR\n         SRL   R1,2                           SHIFT RIGHT TWO BITS\n         LA    R1,REGISTER_TABLE(R1)\n         MVC   0(3,R3),0(R1)                  COPY REGISTER NUMBER\n         LA    R2,4\nREL0010  DS    0H\n         CLI   0(R3),C' '                     BLANK?\n         BE    REL0020                        YES\n         LA    R3,1(,R3)                      NEXT\n         BCT   R2,REL0010                     LOOP\nREL0020  DS    0H\n         MVI   0(R3),C','                     INSERT COMMA\n         MVI   1(R3),C'X'                     INSERT X\n         MVI   2(R3),C''''                    INSERT '\n         UNPK  3(5,R3),2(3,R5)                UNPACK MASK\n         TR    3(4,R3),COMM_HEXCHAR           TRANSLATE MASK\n         MVI   7(R3),C''''                    INSERT '\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nREL0100  DS    0H\n         MVC   COMM_INFO_01(1),1(R5)          COPY 2ND BYTE\n         NI    COMM_INFO_01,X'F0'             LEAVE ONLY CONDITION CODE\n         ITRACE ID=REL0100,                                            +\n               DATA1=(DISCOMM_CC,1),                                   +\n               DATA2=(COMM_INFO_01,1)\n         TM    DISCOMM_CC,$OPCODE_CCA         LAST CC SET BY ARITH?\n         BO    REL0110                        YES\n         TM    DISCOMM_CC,$OPCODE_CCC         LAST CC SET BY COMPARE?\n         BO    REL0120                        YES\n         ITRACE ID=TABLE_L\n         LA    R1,BRC_TABLE_L                 USE \"LOGICAL\" TABLE\n         B     REL0130\nREL0110  DS    0H\n         ITRACE ID=TABLE_A\n         LA    R1,BRC_TABLE_A                 USE ARITH TABLE\n         B     REL0130\nREL0120  DS    0H\n         ITRACE ID=TABLE_C\n         LA    R1,BRC_TABLE_C                 USE COMPARE TABLE\nREL0130  DS    0H\n         CLC   COMM_INFO_01(1),0(R1)          CONDITION LOCATED?\n         BE    REL0140                        YES\n         LA    R1,6(,R1)                      NEXT\n         CLI   0(R1),X'FF'                    END OF TABLE?\n         BE    REL0150                        YES\n         B     REL0130                        LOOP\nREL0140  DS    0H\n         MVC   OPCODE_MNEMONIC,1(R1)          SET MNEMONIC\n         B     REL0160\nREL0150  DS    0H\n         SR    R1,R1\n         IC    R1,COMM_INFO_01                CONDITION CODE\n         SRL   R1,4                           SHIFT TO LOW BITS\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   COMM_INFO_01(L'EDITWORD1),EDITWORD1\n         ED    COMM_INFO_01(L'EDITWORD1),COMM_DWORD+6\n         MVC   0(2,R3),COMM_INFO_01+2         COPY CONDITION CODE\n         MVI   2(R3),C','                     INSERT COMMA\n         LA    R3,3(,R3)                      UPDATE OUTPUT ADDRESS\nREL0160  DS    0H\n         BAL   R15,REL2000\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nREL0300  DS    0H\n         ITRACE ID=REL300\n         BAL   R15,REL1000                    GENERATE REGISTER\n         BAL   R15,REL2000                    GENERATE LABEL\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nREL0400  DS    0H\n         ITRACE ID=REL0400\n         MVC   COMM_INFO_01(1),1(R5)          COPY 2ND BYTE\n         NI    COMM_INFO_01,X'F0'             LEAVE ONLY REGISTER NBR\n         SR    R1,R1\n         IC    R1,COMM_INFO_01                REGISTER NBR\n         SRL   R1,2                           SHIFT RIGHT TWO BITS\n         LA    R1,REGISTER_TABLE(R1)\n         MVC   0(3,R3),0(R1)                  COPY REGISTER NUMBER\n         LA    R2,4\nREL0410  DS    0H\n         CLI   0(R3),C' '                     BLANK?\n         BE    REL0420                        YES\n         LA    R3,1(,R3)                      NEXT\n         BCT   R2,REL0410                     LOOP\nREL0420  DS    0H\n         MVI   0(R3),C','                     INSERT COMMA\n         LA    R3,1(,R3)                      UPDATE OUTPUT ADDRESS\n         LH    R0,2(R5)                       IMMEDIATE DATA\n         LTR   R0,R0                          NEGATIVE AMOUNT?\n         BNM   REL0430                        NO\n         MVI   0(R3),C'-'                     INSERT MINUS SIGN\n         LA    R3,1(,R3)                      UPDATE OUTPUT ADDRESS\nREL0430  DS    0H\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   COMM_INFO_01(16),COMM_BLANKS   INITIALIZE INFO 1\n         MVC   COMM_INFO_01(L'EDITWORD3),EDITWORD3\n         ED    COMM_INFO_01,COMM_DWORD+5      EDIT\n         LA    R1,COMM_INFO_01\n         LA    R2,L'EDITWORD3\nREL0440  DS    0H\n         CLI   0(R1),C' '                     BLANK?\n         BNE   REL0450                        NO\n         LA    R1,1(,R1)                      NEXT\n         BCT   R2,REL0440\nREL0450  DS    0H\n         MVC   0(5,R3),0(R1)                  COPY IMMEDIATE\n         B     EXIT0000\n*---------------------------------------------------------------------*\n*        Generate register                                            *\n*---------------------------------------------------------------------*\nREL1000  DS    0H\n         MVC   COMM_INFO_01(1),1(R5)          COPY 2ND BYTE\n         NI    COMM_INFO_01,X'F0'             LEAVE ONLY REGISTER NBR\n         SR    R1,R1\n         IC    R1,COMM_INFO_01                REGISTER NBR\n         SRL   R1,2                           SHIFT RIGHT TWO BITS\n         LA    R1,REGISTER_TABLE(R1)\n         MVC   0(3,R3),0(R1)                  COPY REGISTER NUMBER\n         LA    R2,4\nREL1010  DS    0H\n         CLI   0(R3),C' '                     BLANK?\n         BE    REL1020                        YES\n         LA    R3,1(,R3)                      NEXT\n         BCT   R2,REL1010                     LOOP\nREL1020  DS    0H\n         MVI   0(R3),C','                     INSERT COMMA\n         LA    R3,1(,R3)                      UPDATE OUTPUT ADDRESS\n         BR    R15\n*---------------------------------------------------------------------*\n*        Generate label                                               *\n*---------------------------------------------------------------------*\nREL2000  DS    0H\n         ICM   R1,15,AREA_REF_LABEL2\n         BNZ   REL2010\n         USING LABEL_DSECT,R1\n         ITRACE ID=NOLABEL\n         DC    H'0'                           SHOULD NOT HAPPEN\nREL2010  DS    0H\n         MVC   0(L'LABEL_NAME,R3),LABEL_NAME  COPY LABEL\n         ICM   R1,15,AREA_REF_DISP2           DISPLACEMENT FROM LABEL\n         BZ    EXIT0000                       ZERO..\n         LA    R2,L'LABEL_NAME\nREL2020  DS    0H\n         CLI   0(R3),C' '                     BLANK?\n         BE    REL2030                        YES\n         LA    R3,1(,R3)                      NEXT\n         BCT   R2,REL2020                     LOOP\nREL2030  DS    0H\n         MVI   0(R3),C'+'                     INSET PLUS\n         CVD   R1,COMM_DWORD                  CONVERT DISP TO DECIMAL\n         MVC   COMM_INFO_01(L'EDITWORD2),EDITWORD2\n         ED    COMM_INFO_01,COMM_DWORD+5      EDIT DISP\n         MVC   1(5,R3),COMM_INFO_01+1\n         BR    R15\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=WORK_L\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEDITWORD1      DC       X'F0202020'\nEDITWORD2      DC       X'F02020202020'\nEDITWORD3      DC       X'402020202120'\n\nA_TABLE        DS       0A\n               DC       A(REL0000)                     TMLH      0\n               DC       A(REL0000)                     TMLL      1\n               DC       A(REL0000)                     TMHH      2\n               DC       A(REL0000)                     TMHL      3\n               DC       A(REL0100)                     BRC       4\n               DC       A(REL0300)                     BRAS      5\n               DC       A(REL0300)                     BRCT      6\n               DC       A(REL0300)                     BRCTG     7\n               DC       A(REL0400)                     LHI       8\n               DC       A(REL0400)                     LGHI      9\n               DC       A(REL0400)                     AHI      10\n               DC       A(REL0400)                     AGHI     11\n               DC       A(REL0400)                     MHI      12\n               DC       A(REL0400)                     MGHI     13\n               DC       A(REL0400)                     CHI      14\n               DC       A(REL0400)                     CGHI     15\n\nREGISTER_TABLE DS       0C\n               DC       CL4'R0  '\n               DC       CL4'R1  '\n               DC       CL4'R2  '\n               DC       CL4'R3  '\n               DC       CL4'R4  '\n               DC       CL4'R5  '\n               DC       CL4'R6  '\n               DC       CL4'R7  '\n               DC       CL4'R8  '\n               DC       CL4'R9  '\n               DC       CL4'R10 '\n               DC       CL4'R11 '\n               DC       CL4'R12 '\n               DC       CL4'R13 '\n               DC       CL4'R14 '\n               DC       CL4'R15 '\n\nBRC_TABLE_A    DS       0C\n               DC       X'00',CL5'JNOP '\n               DC       X'10',CL5'JO   '\n               DC       X'20',CL5'JP   '\n               DC       X'40',CL5'JM   '\n               DC       X'70',CL5'JNZ  '\n               DC       X'80',CL5'JZ   '\n               DC       X'B0',CL5'JNM  '\n               DC       X'D0',CL5'JNP  '\n               DC       X'E0',CL5'JNO  '\n               DC       X'F0',CL5'J    '\n               DC       X'FF'\n\nBRC_TABLE_C    DS       0C\n               DC       X'00',CL5'JNOP '\n               DC       X'20',CL5'JH   '\n               DC       X'40',CL5'JL   '\n               DC       X'70',CL5'JNE  '\n               DC       X'80',CL5'JE   '\n               DC       X'B0',CL5'JNL  '\n               DC       X'D0',CL5'JNH  '\n               DC       X'F0',CL5'J    '\n               DC       X'FF'\n\nBRC_TABLE_L    DS       0C\n               DC       X'00',CL5'JNOP '\n               DC       X'10',CL5'JO   '\n               DC       X'40',CL5'JL   '\n               DC       X'70',CL5'JNE  '\n               DC       X'80',CL5'JZ   '\n               DC       X'B0',CL5'JNL  '\n               DC       X'D0',CL5'JNH  '\n               DC       X'E0',CL5'JNO  '\n               DC       X'F0',CL5'J    '\n               DC       X'FF'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nWORK           DSECT\n               COPY     DXDPREF\nWORK_L         EQU      *-WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      GENREL1\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GENRIL": {"ttr": 2820, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00P\\x01\\x10\\x00_\\x01\\x10\\x00_\\x17\\x06\\x00\\x81\\x00q\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2010-01-05T00:00:00", "modifydate": "2010-01-05T17:06:50", "lines": 129, "newlines": 113, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: GENRIL                                               *\n*                                                                    *\n*  Function:                                                         *\n*   Generate \"relative\" instructions (C0_x)                          *\n*                                                                    *\n*  At entry R7 is address of AREA                                    *\n*           R5 is address of instruction                             *\n*           R4 is address of OPCODE entry                            *\n*                                                                    *\n*--------------------------------------------------------------------*\nGENRIL   CSECT\nGENRIL   AMODE 31\nGENRIL   RMODE ANY\n         USING GENRIL,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISCOMM,R9\n         USING AREA_DSECT,R7\n         USING OPCODE_DSECT,R4\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'GENRIL'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING GENRIL,R10\n         GETMAIN RU,                                                   +\n               LV=WORK_L,                                              +\n               LOC=ANY\n         ST    R13,4(,R1)\n         ST    R1,8(,R13)\n         LR    R13,R1\n         USING WORK,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R7,                                              +\n               DATA2=(0(R5),4)\n         LA    R3,DISCOMM_SOURCE_OPERAND1     INITIALIZE OUTPUT ADDR\n         SR    R1,R1\n         IC    R1,1(R5)                       2ND BYTE\n         SRL   R1,4                           SIFT REGISTER TO LOW BITS\n         MH    R1,H3                          MULTIPLPY BY 3\n         LA    R1,REGISTER_TABLE(R1)          REGISTER NAME\n         MVC   0(3,R3),0(R1)                  COPY REGISTER NAME\n         LA    R2,3\nRIL0010  DS    0H\n         CLI   0(R3),C' '                     BLANK?\n         BE    RIL0020                        YES\n         LA    R3,1(,R3)                      NEXT\n         BCT   R2,RIL0010                     LOOP\nRIL0020  DS    0H\n         MVI   0(R3),C','                     INSERT COMMA\n         ICM   R6,15,AREA_REF_LABEL2          LABEL ADDRESS\n         BNZ   RIL0030\n         DC    H'0'                           SHOULD NOT HAPPEN\nRIL0030  DS    0H\n         USING LABEL_DSECT,R6\n         MVC   1(L'LABEL_NAME,R3),LABEL_NAME  COPY LABEL\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=WORK_L\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nH3             DC   H'3'\n\nREGISTER_TABLE DS   0C\n               DC   CL3'R0 '\n               DC   CL3'R1 '\n               DC   CL3'R2 '\n               DC   CL3'R3 '\n               DC   CL3'R4 '\n               DC   CL3'R5 '\n               DC   CL3'R6 '\n               DC   CL3'R7 '\n               DC   CL3'R8 '\n               DC   CL3'R9 '\n               DC   CL3'R10'\n               DC   CL3'R11'\n               DC   CL3'R12'\n               DC   CL3'R13'\n               DC   CL3'R14'\n               DC   CL3'R15'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nWORK           DSECT\n               COPY DXDPREF\nWORK_L         EQU  *-WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      GENRIL\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GENRRE": {"ttr": 7177, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00P\\x01\\x10\\x00o\\x01\\x10\\x01_\\x14W\\x00\\x91\\x00~\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2010-01-06T00:00:00", "modifydate": "2010-01-15T14:57:50", "lines": 145, "newlines": 126, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: GENRRE                                               *\n*                                                                    *\n*  Function:                                                         *\n*   Generate RR type instructions                                    *\n*                                                                    *\n*  At entry R7 is address of AREA                                    *\n*           R5 is address of instruction                             *\n*           R4 is address of OPCODE entry                            *\n*                                                                    *\n*--------------------------------------------------------------------*\nGENRRE   CSECT\nGENRRE   AMODE 31\nGENRRE   RMODE ANY\n         USING GENRRE,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISCOMM,R9\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'GENRRE'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING GENRRE,R10\n         L     R15,SESS_DXD_ADDR              WORK AREA\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        SET SAVE AREA ADDRESS\n         USING DXDB2RRE,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R7,                                              +\n               DATA2=0(R5)\n         MVI   DISCOMM_SOURCE_OPERAND1,C'R'   INSERT 'R'\n         SR    R1,R1                          CLEAR REGISTER\n         IC    R1,3(,R5)                      OPERANDS\n         SRL   R1,4                           SHIFT OUT OPERAND 2\n         SLL   R1,1                           MULTIPLY BY 2\n         LA    R1,REGISTER_TABLE(R1)\n         MVC   DISCOMM_SOURCE_OPERAND1+1(2),0(R1) COPY REGISTER\n         LA    R2,DISCOMM_SOURCE_OPERAND1\nGEN0010  DS    0H\n         CLI   0(R2),C' '\n         BE    GEN0020\n         LA    R2,1(,R2)\n         B     GEN0010\nGEN0020  DS    0H\n         CLI   1(R5),X'25'                    SSAR?\n         BE    GEN0030                        YES\n         CLI   1(R5),X'26'                    EPAR?\n         BE    GEN0030                        YES\n         CLI   1(R5),X'27'                    ESAR?\n         BE    GEN0030                        YES\n         MVI   0(R2),C','                     INSERT COMMA\n         MVI   1(R2),C'R'                     INSERT 'R'\n         SR    R1,R1                          CLEAR REGISTER\n         IC    R1,3(,R5)                      OPERANDS (AGAIN)\n         SLL   R1,28                          SHIFT OUT ALL BUT OPERAND\n         SRL   R1,27                          SHIFT BACK\n         LA    R1,REGISTER_TABLE(R1)\n         MVC   2(2,R2),0(R1)                  COPY REGISTER\n         B     EXIT0000\nGEN0030  DS    0H\n         MVI   DISCOMM_SOURCE_OPERAND1+0,C'('\n         MVI   DISCOMM_SOURCE_OPERAND1+1,C'R'\n         MVC   DISCOMM_SOURCE_OPERAND1+2(2),0(R1)\n         LA    R2,DISCOMM_SOURCE_OPERAND1+3\nGEN0040  DS    0H\n         CLI   0(R2),C' '\n         BE    GEN0050\n         LA    R2,1(,R2)\n         B     GEN0040\nGEN0050  DS    0H\n         MVI   0(R2),C')'\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START      DC   Q(DXDB2RRE)\n\nREGISTER_TABLE DS   0C\n               DC   CL2'0 '\n               DC   CL2'1 '\n               DC   CL2'2 '\n               DC   CL2'3 '\n               DC   CL2'4 '\n               DC   CL2'5 '\n               DC   CL2'6 '\n               DC   CL2'7 '\n               DC   CL2'8 '\n               DC   CL2'9 '\n               DC   CL2'10'\n               DC   CL2'11'\n               DC   CL2'12'\n               DC   CL2'13'\n               DC   CL2'14'\n               DC   CL2'15'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDB2RRE       DSECT\n               COPY DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      GENRRE\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "GENRR1": {"ttr": 1281, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x003\\x01\\t4\\x8f\\x01\\t6?\\x12\\x19\\x00~\\x00}\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2009-12-14T00:00:00", "modifydate": "2009-12-29T12:19:33", "lines": 126, "newlines": 125, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: GENRR1                                               *\n*                                                                    *\n*  Function:                                                         *\n*   Generate RR type instructions                                    *\n*                                                                    *\n*  At entry R7 is address of AREA                                    *\n*           R5 is address of instruction                             *\n*           R4 is address of OPCODE entry                            *\n*                                                                    *\n*--------------------------------------------------------------------*\nGENRR1   CSECT\nGENRR1   AMODE 31\nGENRR1   RMODE ANY\n         USING GENRR1,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISCOMM,R9\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'GENRR1'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING GENRR1,R10\n         L     R15,SESS_DXD_ADDR              WORK AREA\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        SET SAVE AREA ADDRESS\n         USING DXDRR1,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R7,                                              +\n               DATA2=0(R5)\n         MVI   DISCOMM_SOURCE_OPERAND1,C'R'   INSERT 'R'\n         SR    R1,R1                          CLEAR REGISTER\n         IC    R1,1(,R5)                      OPERANDS\n         SRL   R1,4                           SHIFT OUT OPERAND 2\n         SLL   R1,1                           MULTIPLY BY 2\n         LA    R1,REGISTER_TABLE(R1)\n         MVC   DISCOMM_SOURCE_OPERAND1+1(2),0(R1) COPY REGISTER\n         LA    R2,DISCOMM_SOURCE_OPERAND1\nGEN0010  DS    0H\n         CLI   0(R2),C' '\n         BE    GEN0020\n         LA    R2,1(,R2)\n         B     GEN0010\nGEN0020  DS    0H\n         MVI   0(R2),C','                     INSERT COMMA\n         MVI   1(R2),C'R'                     INSERT 'R'\n         SR    R1,R1                          CLEAR REGISTER\n         IC    R1,1(,R5)\n         SLL   R1,28                          SHIFT OUT ALL BUT OPERAND\n         SRL   R1,27                          SHIFT BACK\n         LA    R1,REGISTER_TABLE(R1)\n         MVC   2(2,R2),0(R1)                  COPY REGISTER\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START      DC   Q(DXDRR1)\n\nREGISTER_TABLE DS   0C\n               DC   CL2'0 '\n               DC   CL2'1 '\n               DC   CL2'2 '\n               DC   CL2'3 '\n               DC   CL2'4 '\n               DC   CL2'5 '\n               DC   CL2'6 '\n               DC   CL2'7 '\n               DC   CL2'8 '\n               DC   CL2'9 '\n               DC   CL2'10'\n               DC   CL2'11'\n               DC   CL2'12'\n               DC   CL2'13'\n               DC   CL2'14'\n               DC   CL2'15'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDRR1         DSECT\n               COPY DXDPREF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END  GENRR1\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "GENRR2": {"ttr": 1285, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\t\\x01\\t4\\x8f\\x01\\t6?\\x12 \\x01\\x02\\x01\\x02\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2009-12-14T00:00:00", "modifydate": "2009-12-29T12:20:09", "lines": 258, "newlines": 258, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         SVCDEF &SVCNBR,&DESC\n         LCLA   &LEN\n&LEN     SETA   K'&DESC-2\n         DC     AL2(&LEN+5)          TOTAL ENTRY LENGTH\n         DC     X'&SVCNBR'           SVC NUMBER\n         DC     AL2(&LEN)            DESCRIPTION'S LENGTH\n         DC     C&DESC               DESCRIPTION\n         MEND\n*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: GENRR2                                               *\n*                                                                    *\n*  Function:                                                         *\n*   Generate RR type instructions                                    *\n*                                                                    *\n*  At entry R7 is address of OPCODE table entry                      *\n*           R5 is address of instruction                             *\n*           R4 is address of OPCODE entry                            *\n*                                                                    *\n*--------------------------------------------------------------------*\nGENRR2   CSECT\nGENRR2   AMODE 31\nGENRR2   RMODE ANY\n         USING GENRR2,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISCOMM,R9\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'GENRR2'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING GENRR2,R10\n         L     R15,SESS_DXD_ADDR              WORK AREA\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        SET SAVE AREA ADDRESS\n         USING DXDRR2,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R7,                                              +\n               DATA2=0(R5)\n         MVC   DXD_EDIT_PAD,COMM_BLANKS\n         SR    R1,R1                          CLEAR REGISTER\n         IC    R1,1(,R5)                      OPERAND\n         CVD   R1,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   DXD_EDIT_WORK,EDITWORD         INITIALIZE EDIT WORD\n         ED    DXD_EDIT_WORK,COMM_DWORD+6     EDIT\n         LA    R1,DXD_EDIT_WORK\nGEN0010  DS    0H\n         CLI   0(R1),C' '                     BLANK?\n         BNE   GEN0020                        NO\n         LA    R1,1(,R1)                      NEXT\n         B     GEN0010\nGEN0020  DS    0H\n         MVC   DISCOMM_SOURCE_OPERAND1(3),0(R1) COPY NBR\n         CLI   0(R5),X'0A'                    SVC?\n         BNE   EXIT0000                       NO\n         LA    R2,SVC_DESC                    1ST DESCRIPTION\n         USING SVC_DSECT,R2\nGEN0030  DS    0H\n         CLC   SVC_NUMBER,1(R5)               SVC LOCATED?\n         BE    GEN0040                        YES\n         AH    R2,SVC_LENGTH                  NEXT DESCRIPTION\n         CLI   0(R2),X'FF'                    END OF TABLE?\n         BNE   GEN0030                        NO\n         B     EXIT0000\nGEN0040  DS    0H\n         SR    R1,R1\n         ICM   R1,3,SVC_COMMENT_LENGTH        LENGTH OF COMMENT\n         BCTR  R1,0\n         EX    R1,MVC_01\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMVC_01   MVC   DISCOMM_SOURCE_OPERAND1+20(0),SVC_COMMENT\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START      DC   Q(DXDRR2)\nEDITWORD       DC   X'40202120'\n\nSVC_DESC       DS   0C\n               SVCDEF 00,'EXCP/XDAP'\n               SVCDEF 01,'WAIT/WAITR/PRTOV'\n               SVCDEF 02,'POST'\n               SVCDEF 03,'EXIT'\n               SVCDEF 04,'GETMAIN'\n               SVCDEF 05,'FREEMAIN'\n               SVCDEF 06,'LINK/LINKX'\n               SVCDEF 07,'XCTL/XCTLX'\n               SVCDEF 08,'LOAD'\n               SVCDEF 09,'DELETE'\n               SVCDEF 0A,'GETMAIN/FREEMAIN'\n               SVCDEF 0B,'TIME'\n               SVCDEF 0C,'SYNCH/SYNCHX'\n               SVCDEF 0D,'ABEND'\n               SVCDEF 0E,'SPIE'\n               SVCDEF 0F,'ERREXCP'\n               SVCDEF 10,'PURGE'\n               SVCDEF 11,'RESTORE'\n               SVCDEF 12,'BLDL/FIND (TYPE D)'\n               SVCDEF 13,'OPEN'\n               SVCDEF 14,'CLOSE'\n               SVCDEF 15,'STOW'\n               SVCDEF 16,'OPEN (TYPE=J)'\n               SVCDEF 17,'CLOSE (TYPE=T)'\n               SVCDEF 18,'DEVTYPE'\n               SVCDEF 19,'TRKBAL'\n               SVCDEF 1A,'CATALOG/INDEX/LOCATE'\n               SVCDEF 1B,'OBTAIN'\n               SVCDEF 1D,'SCRATCH'\n               SVCDEF 1E,'RENAME'\n               SVCDEF 1F,'FEOV'\n               SVCDEF 20,'ALLOC'\n               SVCDEF 21,'IOHALT'\n               SVCDEF 22,'MGCR/QEDIT'\n               SVCDEF 23,'WTO/WTOR'\n               SVCDEF 24,'WTL'\n               SVCDEF 25,'SEGLD/SEGWT'\n               SVCDEF 25,'SEGLD/SEGWT'\n               SVCDEF 27,'LABEL'\n               SVCDEF 28,'EXTRACT'\n               SVCDEF 29,'IDENTIFY'\n               SVCDEF 2A,'ATTACH/ATTACHX'\n               SVCDEF 2B,'CIRB'\n               SVCDEF 2C,'CHAP'\n               SVCDEF 2D,'OVLYBRCH'\n               SVCDEF 2E,'TIMER'\n               SVCDEF 2F,'STIMER'\n               SVCDEF 30,'DEQ'\n               SVCDEF 33,'SNAP/SNAPX/SDUMP/SDUMPX'\n               SVCDEF 34,'RESTART'\n               SVCDEF 35,'RELEX'\n               SVCDEF 36,'DISABLE'\n               SVCDEF 37,'EOV'\n               SVCDEF 38,'ENQ/RESERVE'\n               SVCDEF 39,'FREEDBUF'\n               SVCDEF 3A,'RELBUF/REQBUF'\n               SVCDEF 3B,'OLTEP'\n               SVCDEF 3C,'STAE/STAI-ESTAE/ESTAI'\n               SVCDEF 3D,'IKJEGS6A'\n               SVCDEF 3E,'DETACH'\n               SVCDEF 3F,'CHKPT'\n               SVCDEF 40,'RDJFCB'\n               SVCDEF 42,'BTAMTEST'\n               SVCDEF 44,'SYNADF/SYNADRLS'\n               SVCDEF 45,'BSP'\n               SVCDEF 46,'GSERV'\n               SVCDEF 47,'ASGNBFR/BUFINQ/RLSEBFR'\n               SVCDEF 49,'SPAR'\n               SVCDEF 4A,'DAR'\n               SVCDEF 4B,'DQUEUE'\n               SVCDEF 4C,'IFBSTAT'\n               SVCDEF 4E,'LSPACE'\n               SVCDEF 4F,'STATUS'\n               SVCDEF 51,'SETPRT'\n               SVCDEF 53,'SMFWTM'\n               SVCDEF 54,'GRAPHICS'\n               SVCDEF 55,'DDRSWAP'\n               SVCDEF 56,'ATLAS'\n               SVCDEF 57,'DOM'\n               SVCDEF 5B,'VOLSTAT'\n               SVCDEF 5C,'TCPEXCP'\n               SVCDEF 5D,'TGET/TPUT'\n               SVCDEF 5E,'TGET/TPUT'\n               SVCDEF 5F,'SYSEVENT'\n               SVCDEF 60,'STAX'\n               SVCDEF 61,'IKJEGS9G'\n               SVCDEF 62,'PROTECT'\n               SVCDEF 63,'DYNALLOC'\n               SVCDEF 64,'IKJEFFIB'\n               SVCDEF 65,'QTIP'\n               SVCDEF 66,'AQCTL'\n               SVCDEF 67,'XLATE'\n               SVCDEF 68,'TOPCTL'\n               SVCDEF 69,'IMGLIB'\n               SVCDEF 6B,'MODESET'\n               SVCDEF 70,'PGRLSE'\n               SVCDEF 71,'PGFIX/PGFREE/PGLOAD/PGOUT'\n               SVCDEF 72,'EXCPVR'\n               SVCDEF 75,'DEBCHK'\n               SVCDEF 77,'TESTAUTH'\n               SVCDEF 78,'GETMAIN/FREEMAIN'\n               SVCDEF 79,'VSAM'\n               SVCDEF 7B,'PURGEDQ'\n               SVCDEF 7C,'TPIO'\n               SVCDEF 7D,'EVENTS'\n               SVCDEF 7E,'MSS(ICB2SVC)'\n               SVCDEF 82,'RACHECK'\n               SVCDEF 83,'RACINIT'\n               SVCDEF 84,'RACLIST'\n               SVCDEF 85,'RACDEF'\n               SVCDEF 89,'ESR'\n               SVCDEF 8A,'PGSER'\n               SVCDEF 8B,'CVAFDIR'\n               DC     X'FF'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDRR2              DSECT\n                    COPY DXDPREF\nDXD_EDIT_WORK       DS   CL4\nDXD_EDIT_PAD        DS   CL4\n*---------------------------------------------------------------------*\n*                                                                     *\n*              SVC DSECT                                              *\n*                                                                     *\n*---------------------------------------------------------------------*\nSVC_DSECT           DSECT\nSVC_LENGTH          DS   XL2         LENGTH OF THIS SVC DEFINITION\nSVC_NUMBER          DS   X           SVC NUMBER\nSVC_COMMENT_LENGTH  DS   XL2         LENGTH OF DESCRIPTION\nSVC_COMMENT         DS   0C          DESCRIPTION\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n               END  GENRR2\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "GENRR3": {"ttr": 1292, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x05\\x01\\t4\\x8f\\x01\\t6?\\x12!\\x00\\xd3\\x00\\xd3\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2009-12-14T00:00:00", "modifydate": "2009-12-29T12:21:05", "lines": 211, "newlines": 211, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: GENRR3                                               *\n*                                                                    *\n*  Function:                                                         *\n*   Generate RR type instructions                                    *\n*                                                                    *\n*  At entry R7 is AREA address                                       *\n*           R5 is address of instruction                             *\n*           R4 is address of OPCODE entry                            *\n*                                                                    *\n*--------------------------------------------------------------------*\nGENRR3   CSECT\nGENRR3   AMODE 31\nGENRR3   RMODE ANY\n         USING GENRR3,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISCOMM,R9\n         USING OPCODE_DSECT,R4\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'GENRR3'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING GENRR3,R10\n         L     R15,SESS_DXD_ADDR              WORK AREA\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        SET SAVE AREA ADDRESS\n         USING DXDRR3,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R7,                                              +\n               DATA2=0(R5)\n         MVC   DXD_CC,1(R5)                   COPY CONDITION\n         NI    DXD_CC,X'F0'                   LEAVE ONLY CONDTION\n         MVC   OPCODE_MNEMONIC,OP_BCR         RESET OPCODE\n         TM    DISCOMM_CC,$OPCODE_CCA         ARITHMETIC?\n         BO    GEN0020                        YES\n         TM    DISCOMM_CC,$OPCODE_CCC         COMPARE?\n         BO    GEN0030                        YES\n         TM    DISCOMM_CC,$OPCODE_CCL         LOGICAL?\n         BO    GEN0040                        YES\nGEN0000  DS    0H\n         ITRACE ID=BCR\n         SR    R0,R0\n         IC    R0,DISCOMM_CC                  CONDITION\n         SRL   R0,4\n         CVD   R0,COMM_DWORD\n         MVC   DXD_CONDITION,=X'40202120'\n         ED    DXD_CONDITION,COMM_DWORD+6     EDIT CONDITION\n         CLI   DXD_CONDITION+2,C' '           BLANK?\n         BE    GEN0010                        YES\n         MVC   DISCOMM_SOURCE_OPERAND1(2),DXD_CONDITION+2\n         MVI   DISCOMM_SOURCE_OPERAND1+2,C','\n         LA    R1,DISCOMM_SOURCE_OPERAND1+3\n         B     GEN0070\nGEN0010  DS    0H\n         MVC   DISCOMM_SOURCE_OPERAND1(1),DXD_CONDITION+3\n         MVI   DISCOMM_SOURCE_OPERAND1+1,C','\n         LA    R1,DISCOMM_SOURCE_OPERAND1+2\n         B     GEN0070\nGEN0020  DS    0H\n         ITRACE ID=ARITH\n         LA    R1,ARITHMETIC\n         B     GEN0050\nGEN0030  DS    0H\n         ITRACE ID=COMPARE\n         LA    R1,COMPARE\n         B     GEN0050\nGEN0040  DS    0H\n         ITRACE ID=LOGICAL\n         LA    R1,LOGICAL\nGEN0050  DS    0H\n         USING CC_DSECT,R1\n         CLC   CC_CODE,DXD_CC                 CONDITION FOUND?\n         BE    GEN0060                        YES\n         LA    R1,CC_L(,R1)                   NEXT\n         CLI   0(R1),X'FF'                    END OF TABLE?\n         BE    GEN0000                        YES\n         B     GEN0050\nGEN0060  DS    0H\n         ITRACE ID=SET,                                                +\n               DATA1=CC_MNEMONIC\n         MVC   OPCODE_MNEMONIC,CC_MNEMONIC    SET MNEMONIC\n         LA    R1,DISCOMM_SOURCE_OPERAND1\nGEN0070  DS    0H\n         MVC   DXD_CC,1(R5)                   COPY BYTE 2 AGAIN\n         NI    DXD_CC,X'0F'                   LEAVE ONLY REGISTER NBR\n         SR    R2,R2\n         IC    R2,DXD_CC                      REGISTER NBR\n         SLL   R2,1                           MULTIPLY BY 2\n         LA    R2,REGISTER_TABLE(R2)          REGISTER NBR ADDRESS\n         MVI   0(R1),C'R'\n         MVC   1(2,R1),0(R2)                  COPY REGISTER\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START      DC   Q(DXDRR3)\nOP_BCR         DC   CL5'BCR'\n\nREGISTER_TABLE DS   0C\n               DC   CL2'0 '\n               DC   CL2'1 '\n               DC   CL2'2 '\n               DC   CL2'3 '\n               DC   CL2'4 '\n               DC   CL2'5 '\n               DC   CL2'6 '\n               DC   CL2'7 '\n               DC   CL2'8 '\n               DC   CL2'9 '\n               DC   CL2'10'\n               DC   CL2'11'\n               DC   CL2'12'\n               DC   CL2'13'\n               DC   CL2'14'\n               DC   CL2'15'\n\nARITHMETIC     DS    0C                    ARITHMETIC MNEMONICS\n               DC    X'00',CL6'NOPR  '     NO-OP\n               DC    X'10',CL6'BOR   '     BRANCH OVERFLOW\n               DC    X'20',CL6'BPR   '     BRANCH PLUS\n               DC    X'40',CL6'BMR   '     BRANCH MINUS\n               DC    X'70',CL6'BNZR  '     BRANCH NOT ZERO\n               DC    X'80',CL6'BZR   '     BRANCH IF ZERO\n               DC    X'B0',CL6'BNMR  '     BRANCH NOT MINUS\n               DC    X'D0',CL6'BNPR  '     BRANCH NOT PLUS\n               DC    X'E0',CL6'BNOR  '     BRANCH NOT OVERFLOW\n               DC    X'F0',CL6'BR    '     UNCONDITIONAL BRANCH\n               DC    X'FF'\n\nCOMPARE        DS    0C                    COMPARE MNEMONICS\n               DC    X'00',CL6'NOPR  '     NO-OP\n               DC    X'20',CL6'BHR   '     BRANCH HIGH\n               DC    X'40',CL6'BLR   '     BRANCH LOW\n               DC    X'70',CL6'BNER  '     BRANCH NOT EQUAL\n               DC    X'80',CL6'BER   '     BRANCH EQUAL\n               DC    X'B0',CL6'BNLR  '     BRANCH NOT LOW\n               DC    X'D0',CL6'BNHR  '     BRANCH NOT HIGH\n               DC    X'F0',CL6'BR    '     UNCONDITIONAL BRANCH\n               DC    X'FF'\n\nLOGICAL        DS    0C                    LOGICAL MNEMONICS\n               DC    X'00',CL6'NOPR  '     NO-OP\n               DC    X'10',CL6'BOR   '     BRANCH ONES\n               DC    X'40',CL6'BMR   '     BRANCH MIXED\n               DC    X'70',CL6'BNZR  '     BRANCH NOT ZEROS\n               DC    X'80',CL6'BZR   '     BRANCH IF ZEROS\n               DC    X'B0',CL6'BNMR  '     BRANCH NOT MIXED\n               DC    X'E0',CL6'BNOR  '     BRANCH NOT ONES\n               DC    X'F0',CL6'BR    '     UNCONDITIONAL BRANCH\n               DC    X'FF'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDRR3         DSECT\n               COPY DXDPREF\nDXD_CC         DS   X\nDXD_CONDITION  DS   XL4\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nCC_DSECT       DSECT\nCC_CODE        DS   X\nCC_MNEMONIC    DS   CL6\nCC_L           EQU  *-CC_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END  GENRR3\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "GENRS1": {"ttr": 1539, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x006\\x01\\t6/\\x01\\t6?\\x12!\\x00\\x93\\x00\\x84\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2009-12-28T00:00:00", "modifydate": "2009-12-29T12:21:36", "lines": 147, "newlines": 132, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: GENRS1                                               *\n*                                                                    *\n*  Function:                                                         *\n*   GENERATE RS TYPE INSTRUCTIONS  (SLL, SRL, SRA, SLA, ...)         *\n*                                                                    *\n*  At entry R7 is AREA address                                       *\n*           R5 is address of instruction text                        *\n*           R4 is address of OPCODE entry                            *\n*                                                                    *\n*--------------------------------------------------------------------*\nGENRS1   CSECT\nGENRS1   AMODE 31\nGENRS1   RMODE ANY\n         USING GENRS1,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISCOMM,R9\n         USING AREA_DSECT,R7\n         USING OPCODE_DSECT,R4\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'GENRS1'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING GENRS1,R10\n         L     R15,SESS_DXD_ADDR              WORK AREA\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        SET SAVE AREA ADDRESS\n         USING DXDRS1,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R7,                                              +\n               DATA2=(0(R5),4)\n         MVC   DXD_BLANKS,COMM_BLANKS\n         LA    R1,DISCOMM_SOURCE_OPERAND1\n*--------------------------------------------------------------------*\n*        GENERATE R                                                  *\n*--------------------------------------------------------------------*\n         SR    R3,R3                          CLEAR R3\n         IC    R3,1(R5)                       INSERT R1 AND R2\n         SRL   R3,4                           SHIFT OUT R2\n         STC   R3,DXD_R                       SAVE R1\n         LA    R1,DISCOMM_SOURCE_OPERAND1\n         MVI   0(R1),C'R'                     INSERT 'R' FOR R1\n         IC    R3,DXD_R                       R1\n         SLL   R3,1                           MULTIPLY BY 2\n         LA    R2,REGISTER_TABLE(R3)          REGISTSER NAME\n         MVC   DISCOMM_SOURCE_OPERAND1+1(2),0(R2)\n         BAL   R6,SCAN0000                    FIND 1ST BLANK\n         MVI   0(R1),C','                     INSERT COMMA\n*--------------------------------------------------------------------*\n*        GENERATE \"nnn\"                                              *\n*--------------------------------------------------------------------*\n         MVC   DXD_DISP,2(R5)                 COPY\n         NI    DXD_DISP,X'0F'                 FORCE ZERO\n         LH    R0,DXD_DISP                    DISP\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   DXD_EDIT_WORD,EDIT_WORD\n         ED    DXD_EDIT_WORD,COMM_DWORD+4     EDIT DISP\n         MVC   1(4,R1),DXD_EDIT_WORD+4        COPY BITS TO SHIFT\n         B     EXIT0000\n*--------------------------------------------------------------------*\n*        Find next blank                                             *\n*--------------------------------------------------------------------*\nSCAN0000 DS    0H\n         CLI   0(R1),C' '\n         BER   R6\n         LA    R1,1(,R1)\n         B     SCAN0000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START      DC   Q(DXDRS1)\nEDIT_WORD      DC   X'F020202020202120'\n\nREGISTER_TABLE DS   0C\n               DC   CL2'0 '\n               DC   CL2'1 '\n               DC   CL2'2 '\n               DC   CL2'3 '\n               DC   CL2'4 '\n               DC   CL2'5 '\n               DC   CL2'6 '\n               DC   CL2'7 '\n               DC   CL2'8 '\n               DC   CL2'9 '\n               DC   CL2'10'\n               DC   CL2'11'\n               DC   CL2'12'\n               DC   CL2'13'\n               DC   CL2'14'\n               DC   CL2'15'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDRS1         DSECT\n               COPY DXDPREF\nDXD_DISP       DS   XL2\nDXD_R          DS   X\n\nDXD_EDIT_WORD  DS   XL8\nDXD_BLANKS     DS   CL8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END  GENRS1\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GENRS2": {"ttr": 4097, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x06\\x01\\t6/\\x01\\x10\\x00\\x8f\\x11\\t\\x00\\xdb\\x00\\xc8\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2009-12-28T00:00:00", "modifydate": "2010-01-08T11:09:06", "lines": 219, "newlines": 200, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: GENRS2                                               *\n*                                                                    *\n*  Function:                                                         *\n*   GENERATE RS TYPE INSTRUCTIONS  (STM, LM,..)                      *\n*                                                                    *\n*  At entry R7 is AREA address                                       *\n*           R5 is address of instruction                             *\n*           R4 is address of OPCODE entry                            *\n*                                                                    *\n*--------------------------------------------------------------------*\nGENRS2   CSECT\nGENRS2   AMODE 31\nGENRS2   RMODE ANY\n         USING GENRS2,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISCOMM,R9\n         USING AREA_DSECT,R7\n         USING OPCODE_DSECT,R4\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'GENRS2'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING GENRS2,R10\n         L     R15,SESS_DXD_ADDR              WORK AREA\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        SET SAVE AREA ADDRESS\n         USING DXDRS2,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R7,                                              +\n               DATA2=0(R5)\n         MVC   DXD_BLANKS,COMM_BLANKS\n         LA    R1,DISCOMM_SOURCE_OPERAND1\n*--------------------------------------------------------------------*\n*        GENERATE R1 AND R2                                          *\n*--------------------------------------------------------------------*\n         SR    R3,R3                          CLEAR R3\n         IC    R3,1(R5)                       INSERT R1 AND R2\n         SRL   R3,4                           SHIFT OUT R2\n         STC   R3,DXD_R1                      SAVE R1\n         MVC   DXD_R2,1(R5)                   COPY R1 AND R1\n         NI    DXD_R2,X'0F'                   REMOVE R1\n         LA    R1,DISCOMM_SOURCE_OPERAND1\n         MVI   0(R1),C'R'                     INSERT 'R' FOR R1\n         IC    R3,DXD_R1                      R1\n         SLL   R3,1                           MULTIPLY BY 2\n         LA    R2,REGISTER_TABLE(R3)          REGISTSER NAME\n         MVC   DISCOMM_SOURCE_OPERAND1+1(2),0(R2)\n         BAL   R15,SCAN0000                   FIND 1ST BLANK\n         MVI   0(R1),C','                     INSERT COMMA\n         MVI   1(R1),C'R'                     INSERT 'R' FOR R2\n         IC    R3,DXD_R2                      R2\n         SLL   R3,1                           MULTIPLY BY 2\n         LA    R2,REGISTER_TABLE(R3)          REGISTER NAME\n         MVC   2(2,R1),0(R2)                  COPY REGISTER NAME\n         BAL   R15,SCAN0000                   FIND BLANK\n         MVI   0(R1),C','                     INSERT COMMA\n         LA    R1,1(,R1)\n         ICM   R8,15,AREA_REF_LABEL1          LABEL PRESENT?\n         BZ    GEN0030                        NO\n         USING LABEL_DSECT,R8\n*--------------------------------------------------------------------*\n*        GENERATE LABEL                                              *\n*--------------------------------------------------------------------*\n         ICM   R2,15,AREA_REF_USING1          USING BLOCK ADDR?\n         BZ    GEN0020                        NO\n         USING USING_DSECT,R2\n         CLC   USING_NAME,COMM_BLANKS         NAME BLANK?\n         BE    GEN0020                        YES\n         MVC   0(L'USING_NAME,R1),USING_NAME  COPY USING NAME\n         BAL   R15,SCAN0000                   FIND END OF NAME\n         MVI   0(R1),C'.'                     INSERT DELIMITER\n         LA    R1,1(,R1)                      NEXT IN OUTPUT\nGEN0020  DS    0H\n         MVC   0(L'LABEL_NAME,R1),LABEL_NAME\n         BAL   R15,SCAN0000                   FIND END OF NAME\n         ICM   R0,15,AREA_REF_DISP1           DISP FROM LABEL\n         BZ    EXIT0000                       ZERO.. EXIT\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         MVI   0(R1),C'+'                     INSERT PLUS\n         MVC   DXD_EDIT_WORD,EDIT_WORD\n         ED    DXD_EDIT_WORD,COMM_DWORD+4     EDIT DISP\n         LA    R2,DXD_EDIT_WORD\n         BAL   R15,SCAN1000                   FIND FIRST NON ZERO\n         MVC   1(4,R1),0(R2)                  COPY DISP\n         B     EXIT0000\n*--------------------------------------------------------------------*\n*        GENERATE \"DDD(R)\"                                           *\n*--------------------------------------------------------------------*\nGEN0030  DS    0H\n         SR    R3,R3\n         IC    R3,2(R5)                       BASE AND PART OF DISP\n         SRL   R3,4                           SHIFT OUT DISP\n         STC   R3,DXD_BASE\n         MVC   DXD_DISP,2(R5)                 COPY BASE & DISP\n         NI    DXD_DISP,X'0F'                 LEAVE ONLY DISP\n         SR    R0,R0\n         ICM   R0,3,DXD_DISP                  DISP\n         BZ    GEN0040\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   DXD_EDIT_WORD,EDIT_WORD\n         ED    DXD_EDIT_WORD,COMM_DWORD+4     EDIT DISP\n         LA    R2,DXD_EDIT_WORD\n         BAL   R15,SCAN1000                   FIND 1ST NON ZERO\n         MVC   0(4,R1),0(R2)                  COPY DISP\n         B     GEN0050\nGEN0040  DS    0H\n         MVI   0(R1),C'0'                     INSERT A ZERO\n         LA    R1,1(,R1)                      UPDATE OUTPUT ADDRESS\nGEN0050  DS    0H\n         ICM   R3,1,DXD_BASE                  BASE ZERO?\n         BZ    EXIT0000                       YES\n         BAL   R15,SCAN0000                   FIND BLANK\n         MVI   0(R1),C'('                     OPEN PAREN\n         MVI   1(R1),C'R'\n         SLL   R3,1                           MULTIPLY BY 2\n         LA    R2,REGISTER_TABLE(R3)          REGISTER NAME\n         MVC   2(2,R1),0(R2)                  COPY TO SOURCE\n         BAL   R15,SCAN0000                   FIND BLANK\n         MVI   0(R1),C')'                     INSERT CLOSING PAREN\n         B     EXIT0000\n*--------------------------------------------------------------------*\n*        Find next blank                                             *\n*--------------------------------------------------------------------*\nSCAN0000 DS    0H\n         CLI   0(R1),C' '\n         BER   R15\n         LA    R1,1(,R1)\n         B     SCAN0000\n*--------------------------------------------------------------------*\n*        Find first non-zero                                         *\n*--------------------------------------------------------------------*\nSCAN1000 DS    0H\n         CLI   0(R2),C'0'\n         BNER  R15\n         LA    R2,1(,R2)\n         B     SCAN1000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START      DC   Q(DXDRS2)\nEDIT_WORD      DC   X'F020202020202120'\n\nREGISTER_TABLE DS   0C\n               DC   CL2'0 '\n               DC   CL2'1 '\n               DC   CL2'2 '\n               DC   CL2'3 '\n               DC   CL2'4 '\n               DC   CL2'5 '\n               DC   CL2'6 '\n               DC   CL2'7 '\n               DC   CL2'8 '\n               DC   CL2'9 '\n               DC   CL2'10'\n               DC   CL2'11'\n               DC   CL2'12'\n               DC   CL2'13'\n               DC   CL2'14'\n               DC   CL2'15'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDRS2         DSECT\n               COPY DXDPREF\nDXD_DISP       DS   XL2\nDXD_R1         DS   X\nDXD_R2         DS   X\nDXD_BASE       DS   X\n\nDXD_EDIT_WORD  DS   XL8\nDXD_BLANKS     DS   CL8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      GENRS2\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GENRS3": {"ttr": 4103, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x01\\x01\\t6/\\x01\\x10\\x00\\x8f\\x11\\x16\\x00\\xd3\\x00\\xb7\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2009-12-28T00:00:00", "modifydate": "2010-01-08T11:16:01", "lines": 211, "newlines": 183, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: GENRS3                                               *\n*                                                                    *\n*  Function:                                                         *\n*   GENERATE RS TYPE INSTRUCTIONS  (ICM, STCM, ...)                  *\n*                                                                    *\n*  At entry R7 is AREA address                                       *\n*           R5 is address of instruction                             *\n*           R4 is address of OPCODE entry                            *\n*                                                                    *\n*--------------------------------------------------------------------*\nGENRS3   CSECT\nGENRS3   AMODE 31\nGENRS3   RMODE ANY\n         USING GENRS3,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISCOMM,R9\n         USING AREA_DSECT,R7\n         USING OPCODE_DSECT,R4\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'GENRS3'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING GENRS3,R10\n         L     R15,SESS_DXD_ADDR              WORK AREA BASE\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        SET SAVE AREA ADDRESS\n         USING DXDRS3,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R7,                                              +\n               DATA2=0(R5)\n         MVC   DXD_BLANKS,COMM_BLANKS\n         LA    R1,DISCOMM_SOURCE_OPERAND1\n*--------------------------------------------------------------------*\n*        GENERATE R1 AND MASK                                        *\n*--------------------------------------------------------------------*\n         SR    R3,R3                          CLEAR R3\n         IC    R3,1(R5)                       INSERT R1 AND R2\n         SRL   R3,4                           SHIFT OUT R2\n         STC   R3,DXD_R1                      SAVE R1\n         MVC   DXD_MASK,1(R5)                 COPY R1 AND R1\n         NI    DXD_MASK,X'0F'                 REMOVE R1\n         LA    R1,DISCOMM_SOURCE_OPERAND1\n         MVI   0(R1),C'R'                     INSERT 'R' FOR R1\n         IC    R3,DXD_R1                      R1\n         SLL   R3,1                           MULTIPLY BY 2\n         LA    R2,REGISTER_TABLE(R3)          REGISTSER NAME\n         MVC   DISCOMM_SOURCE_OPERAND1+1(2),0(R2)\n         BAL   R15,SCAN0000                   FIND 1ST BLANK\n         MVI   0(R1),C','                     INSERT COMMA\n         IC    R3,DXD_MASK                    MASK\n         SLL   R3,1                           MULTIPLY BY 2\n         LA    R2,REGISTER_TABLE(R3)          USE REGISTER NAMES\n         MVC   1(2,R1),0(R2)                  COPY REGISTER NAME\n         BAL   R15,SCAN0000                   FIND BLANK\n         MVI   0(R1),C','                     INSERT COMMA\n         LA    R1,1(,R1)\n         ICM   R8,15,AREA_REF_LABEL1          LABEL PRESENT?\n         BZ    GEN0030                        NO\n         USING LABEL_DSECT,R8\n*--------------------------------------------------------------------*\n*        GENERATE LABEL                                              *\n*--------------------------------------------------------------------*\n         ICM   R2,15,AREA_REF_USING1          USING BLOCK ADDRESS?\n         BZ    GEN0020                        NO\n         USING USING_DSECT,R2\n         CLC   USING_NAME,COMM_BLANKS         USING NAME BLANK?\n         BE    GEN0020                        YES\n         MVC   0(L'USING_NAME,R1),USING_NAME  COPY USING NAME\n         BAL   R15,SCAN0000                   FIND END OF NAME\n         MVI   0(R1),C'.'                     INSERT DELIMITER\n         LA    R1,1(,R1)                      UPDATE OUTPUT ADDRESS\nGEN0020  DS    0H\n         MVC   0(L'LABEL_NAME,R1),LABEL_NAME\n         BAL   R15,SCAN0000                   FIND END OF NAME\n         ICM   R0,15,AREA_REF_DISP1           DISP FROM LABEL\n         BZ    EXIT0000                       ZERO.. EXIT\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         MVI   0(R1),C'+'                     INSERT PLUS\n         MVC   DXD_EDIT_WORD,EDIT_WORD\n         ED    DXD_EDIT_WORD,COMM_DWORD+4     EDIT DISP\n         LA    R2,DXD_EDIT_WORD\n         BAL   R15,SCAN1000                   FIND FIRST NON ZERO\n         MVC   1(4,R1),0(R2)                  COPY DISP\n         B     EXIT0000\n*--------------------------------------------------------------------*\n*        GENERATE \"DDD(R)\"                                           *\n*--------------------------------------------------------------------*\nGEN0030  DS    0H\n         SR    R3,R3\n         IC    R3,2(R5)                       BASE AND PART OF DISP\n         SRL   R3,4                           SHIFT OUT DISP\n         STC   R3,DXD_BASE\n         MVC   DXD_DISP,2(R5)                 COPY BASE & DISP\n         NI    DXD_DISP,X'0F'                 LEAVE ONLY DISP\n         LH    R0,DXD_DISP                    DISP\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   DXD_EDIT_WORD,EDIT_WORD\n         ED    DXD_EDIT_WORD,COMM_DWORD+4     EDIT DISP\n         LA    R2,DXD_EDIT_WORD\n         BAL   R15,SCAN1000                   FIND 1ST NON ZERO\n         MVC   0(4,R1),0(R2)                  COPY DISP\n         ICM   R3,1,DXD_BASE                  BASE ZERO?\n         BZ    EXIT0000                       YES\n         BAL   R15,SCAN0000                   FIND BLANK\n         MVI   0(R1),C'('                     OPEN PAREN\n         MVI   1(R1),C'R'\n         SLL   R3,1                           MULTIPLY BY 2\n         LA    R2,REGISTER_TABLE(R3)          REGISTER NAME\n         MVC   2(2,R1),0(R2)                  COPY TO SOURCE\n         BAL   R15,SCAN0000                   FIND BLANK\n         MVI   0(R1),C')'                     INSERT CLOSING PAREN\n         B     EXIT0000\n*--------------------------------------------------------------------*\n*        Find next blank                                             *\n*--------------------------------------------------------------------*\nSCAN0000 DS    0H\n         CLI   0(R1),C' '\n         BER   R15\n         LA    R1,1(,R1)\n         B     SCAN0000\n*--------------------------------------------------------------------*\n*        Find first non-zero                                         *\n*--------------------------------------------------------------------*\nSCAN1000 DS    0H\n         CLI   0(R2),C'0'\n         BNER  R15\n         LA    R2,1(,R2)\n         B     SCAN1000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START      DC   Q(DXDRS3)\nEDIT_WORD      DC   X'F020202020202120'\n\nREGISTER_TABLE DS   0C\n               DC   CL2'0 '\n               DC   CL2'1 '\n               DC   CL2'2 '\n               DC   CL2'3 '\n               DC   CL2'4 '\n               DC   CL2'5 '\n               DC   CL2'6 '\n               DC   CL2'7 '\n               DC   CL2'8 '\n               DC   CL2'9 '\n               DC   CL2'10'\n               DC   CL2'11'\n               DC   CL2'12'\n               DC   CL2'13'\n               DC   CL2'14'\n               DC   CL2'15'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDRS3         DSECT\n               COPY DXDPREF\nDXD_DISP       DS   XL2\nDXD_R1         DS   X\nDXD_MASK       DS   X\nDXD_BASE       DS   X\n\nDXD_EDIT_WORD  DS   XL8\nDXD_BLANKS     DS   CL8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      GENRS3\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GENRX": {"ttr": 4109, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00F\\x01\\t6/\\x01\\x10\\x00\\x8f\\x11 \\x01[\\x01M\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2009-12-28T00:00:00", "modifydate": "2010-01-08T11:20:46", "lines": 347, "newlines": 333, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: GENRX                                                *\n*                                                                    *\n*  Function:                                                         *\n*   Generate RX or RXE instructions                                  *\n*                                                                    *\n*  At entry R7 is AREA address                                       *\n*           R5 is address of instruction                             *\n*           R4 is address of OPCODE entry                            *\n*                                                                    *\n*--------------------------------------------------------------------*\nGENRX    CSECT\nGENRX    AMODE 31\nGENRX    RMODE ANY\n         USING GENRX,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISCOMM,R9\n         USING AREA_DSECT,R7\n         USING OPCODE_DSECT,R4\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'GENRX'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING GENRX,R10\n         L     R15,SESS_DXD_ADDR              WORK AREA BASE\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        SET SAVE AREA ADDRESS\n         USING DXDRX,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R7,                                              +\n               DATA2=0(R5)\n         MVC   DXD_BLANKS,COMM_BLANKS\n         LA    R1,DISCOMM_SOURCE_OPERAND1\n         TM    OPCODE_FLAGS,$OPCODE_EXT       EXTENDED FORMAT?\n         BO    GEN0020                        YES\n*--------------------------------------------------------------------*\n*        GENERATE R OF RX                                            *\n*--------------------------------------------------------------------*\n         SR    R3,R3                          CLEAR R3\n         IC    R3,1(R5)                       INSERT R AND X\n         SRL   R3,4                           SHIFT OUT X\n         SLL   R3,1                           MULTIPLY BY 2\n         STC   R3,DXD_R\n         LA    R2,REGISTER_TABLE(R3)          REGISTSER NAME\n         MVI   DISCOMM_SOURCE_OPERAND1,C'R'\n         MVC   DISCOMM_SOURCE_OPERAND1+1(2),0(R2)\n         LA    R1,DISCOMM_SOURCE_OPERAND1\n         BAL   R15,SCAN0000                   FIND 1ST BLANK\n         MVI   0(R1),C','                     INSERT COMMA\n         LA    R1,1(,R1)\n         B     GEN0080\n*--------------------------------------------------------------------*\n*        Generate branch instructions                                *\n*--------------------------------------------------------------------*\nGEN0020  DS    0H\n         ITRACE ID=GENBR,                                              +\n               DATA1=AREA_BEGIN,                                       +\n               DATA2=0(R5)\n         MVC   DXD_COND,1(R5)                 COPY INSTRUCTION BYTE 2\n         NI    DXD_COND,X'F0'                 LEAVE ONLY CONDITION\n         TM    DISCOMM_CC,$OPCODE_CCA         ARITHMETIC?\n         BO    GEN0030                        YES\n         TM    DISCOMM_CC,$OPCODE_CCC         COMPARE?\n         BO    GEN0040                        YES\n         ITRACE ID=LOGICAL\n         LA    R2,COND_LOGICAL                DEFAULT TO LOGICAL\n         B     GEN0050\nGEN0030  DS    0H\n         ITRACE ID=ARITH\n         LA    R2,COND_ARITH                  ARITHMETIC CONDITIONS\n         B     GEN0050\nGEN0040  DS    0H\n         ITRACE ID=COMPARE\n         LA    R2,COND_COMPARE                COMPARE CONDITIONS\nGEN0050  DS    0H\n         USING COND_DSECT,R2\n         CLC   COND_COND,DXD_COND             LOCATED THE CONDITION?\n         BE    GEN0060                        YES\n         LA    R2,COND_DSECT_L(,R2)           NEXT\n         CLI   0(R2),X'FF'                    END OF TABLE?\n         BE    GEN0070                        NOT LOCATED\n         B     GEN0050\nGEN0060  DS    0H\n         MVC   OPCODE_MNEMONIC,COND_MNEMONIC  CHANGE MNEMONIC\n         B     GEN0080\n*--------------------------------------------------------------------*\n*        Generate BC with condition nbr                              *\n*--------------------------------------------------------------------*\nGEN0070  DS    0H\n         MVC   OPCODE_MNEMONIC,OP_BC\n         SR    R0,R0\n         IC    R0,DXD_COND\n         SRL   R0,4                           SHIFT TO LOW BITS\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   DXD_EDIT_WORD,EDIT_WORD\n         ED    DXD_EDIT_WORD,COMM_DWORD+4\n         MVC   0(2,R1),DXD_EDIT_WORD+6        COPY CONDTION\n         MVI   2(R1),C','\n         LA    R1,3(,R1)                      SKIP CONDITION AND COMMA\n*--------------------------------------------------------------------*\n*        GENERATE LABEL(X)                                           *\n*--------------------------------------------------------------------*\nGEN0080  DS    0H\n         ICM   R8,15,AREA_REF_LABEL1          LABEL REFERENCED?\n         USING LABEL_DSECT,R8\n         BZ    GEN0100                        NO\n         ICM   R2,15,AREA_REF_USING1          USING BLOCK ADDR?\n         BZ    GEN0085                        NO\n         USING USING_DSECT,R2\n         CLC   USING_NAME,COMM_BLANKS         NAME BLANK?\n         BE    GEN0085                        YES\n         MVC   0(L'USING_NAME,R1),USING_NAME  COPY NAME\n         BAL   R15,SCAN0000                   FIND END OF NAME\n         MVI   0(R1),C'.'                     INSERT DELIMITER\n         LA    R1,1(,R1)                      UPDATE OUTPUT ADDRESS\nGEN0085  DS    0H\n         MVC   0(L'LABEL_NAME,R1),LABEL_NAME\n         BAL   R15,SCAN0000                   FIND END OF NAME\n         ICM   R0,15,AREA_REF_DISP1           DISP FROM LABEL\n         BZ    GEN0090                        ZERO\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         MVI   0(R1),C'+'                     INSERT PLUS\n         MVC   DXD_EDIT_WORD,EDIT_WORD\n         ED    DXD_EDIT_WORD,COMM_DWORD+4\n         LA    R2,DXD_EDIT_WORD\n         BAL   R15,SCAN1000\n         MVC   1(4,R1),0(R2)                  COPY DISP\n         BAL   R15,SCAN0000\nGEN0090  DS    0H\n         MVC   DXD_X,1(R5)                    COPY 'R AND X'\n         NI    DXD_X,X'0F'                    LEAVE ONLY 'X'\n         SR    R3,R3\n         ICM   R3,1,DXD_X                     INDEX REGISTER\n         BZ    EXIT0000                       NONE (ZERO)\n         SLL   R3,1\n         MVI   0(R1),C'('                     INSERT OPEN PAREN\n         MVI   1(R1),C'R'                     INSERT OPEN PAREN\n         LA    R2,REGISTER_TABLE(R3)\n         MVC   2(2,R1),0(R2)                  COPY INDEX REGISTER\n         BAL   R15,SCAN0000                   FIND END\n         MVI   0(R1),C')'                     INSERT CLOSING PAREN\n         B     EXIT0000\n*--------------------------------------------------------------------*\n*        GENERATE \"DDD(X,R)                                          *\n*--------------------------------------------------------------------*\nGEN0100  DS    0H\n         SR    R0,R0\n         MVC   DXD_X,1(R5)                    COPY 'R AND X'\n         NI    DXD_X,X'0F'                    REMOVE R\n         MVC   DXD_BASE,2(R5)                 COPY BASE\n         IC    R0,DXD_BASE\n         SRL   R0,4                           SHIFT OUT DISP\n         STC   R0,DXD_BASE\n         MVC   DXD_DISP,2(R5)                 COPY BASE & DISP\n         NI    DXD_DISP,X'0F'                 LEAVE ONLY DISP\n         SR    R15,R15\n         ICM   R15,3,DXD_DISP                 DISP\n         BZ    GEN0110                        ZERO\n         CVD   R15,COMM_DWORD                 CONVERT TO DECIMAL\n         MVC   DXD_EDIT_WORD,EDIT_WORD\n         ED    DXD_EDIT_WORD,COMM_DWORD+4     EDIT DISP\n         LA    R2,DXD_EDIT_WORD\n         BAL   R15,SCAN1000\n         MVC   0(4,R1),0(R2)\n         B     GEN0120\nGEN0110  DS    0H\n         MVI   0(R1),C'0'                     GENERATE A ZERO\nGEN0120  DS    0H\n         OC    DXD_X(2),DXD_X                 INDEX AND BASE ZERO?\n         BZ    EXIT0000                       YES\n         LA    R1,DISCOMM_SOURCE_OPERAND1\n         BAL   R15,SCAN0000                   FIND BLANK\n         MVI   0(R1),C'('                     OPEN PAREN\n         LA    R1,1(,R1)\n         MVI   0(R1),C'R'\n         SR    R3,R3\n         ICM   R3,1,DXD_X                     INDEX REGISTER\n         BZ    GEN0130                        ZERO.. SKIP\n         SLL   R3,1                           MULTIPLY BY 2\n         LA    R2,REGISTER_TABLE(R3)          REGISTER NAME\n         MVC   1(2,R1),0(R2)                  COPY TO SOURCE\n         BAL   R15,SCAN0000                   FIND BLANK\nGEN0130  DS    0H\n         ICM   R3,1,DXD_BASE                  BASE REGISTER\n         BZ    GEN0140\n         MVI   0(R1),C','                     INSERT COMMA\n         MVI   1(R1),C'R'                     INSERT COMMA\n         SLL   R3,1                           MULTIPLY BY 2\n         LA    R2,REGISTER_TABLE(R3)          REGISTER NAME\n         MVC   2(2,R1),0(R2)                  COPY TO SOURCE\n         BAL   R15,SCAN0000                   FIND BLANK\nGEN0140  DS    0H\n         MVI   0(R1),C')'                     INSERT CLOSING PAREN\n         B     EXIT0000\n*--------------------------------------------------------------------*\n*        Find next blank                                             *\n*--------------------------------------------------------------------*\nSCAN0000 DS    0H\n         CLI   0(R1),C' '\n         BER   R15\n         LA    R1,1(,R1)\n         B     SCAN0000\n*--------------------------------------------------------------------*\n*        Find first non-zero                                         *\n*--------------------------------------------------------------------*\nSCAN1000 DS    0H\n         CLI   0(R2),C'0'\n         BNER  R15\n         LA    R2,1(,R2)\n         B     SCAN1000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         CLI   DISCOMM_SOURCE_OPERAND1,C'-'   TEMPORARY LABEL?\n         BNE   EXIT0010                       NO\n         DC    H'0'\nEXIT0010 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START      DC   Q(DXDRX)\nEDIT_WORD      DC   X'F020202020202120'\n\nOP_BC          DC   CL6'BC'\n\nREGISTER_TABLE DS   0C\n               DC   CL2'0 '\n               DC   CL2'1 '\n               DC   CL2'2 '\n               DC   CL2'3 '\n               DC   CL2'4 '\n               DC   CL2'5 '\n               DC   CL2'6 '\n               DC   CL2'7 '\n               DC   CL2'8 '\n               DC   CL2'9 '\n               DC   CL2'10'\n               DC   CL2'11'\n               DC   CL2'12'\n               DC   CL2'13'\n               DC   CL2'14'\n               DC   CL2'15'\n\nCOND_ARITH     DS   0C\n               DC   X'00',CL6'NOP'\n               DC   X'10',CL6'BO'\n               DC   X'20',CL6'BP'\n               DC   X'40',CL6'BM'\n               DC   X'70',CL6'BNZ'\n               DC   X'80',CL6'BZ'\n               DC   X'B0',CL6'BNM'\n               DC   X'D0',CL6'BNP'\n               DC   X'E0',CL6'BNO'\n               DC   X'F0',CL6'B'\n               DC   X'FF'\n\nCOND_COMPARE   DS   0C\n               DC   X'00',CL6'NOP'\n               DC   X'20',CL6'BH'\n               DC   X'40',CL6'BL'\n               DC   X'70',CL6'BNE'\n               DC   X'80',CL6'BE'\n               DC   X'B0',CL6'BNL'\n               DC   X'D0',CL6'BNH'\n               DC   X'F0',CL6'B'\n               DC   X'FF'\n\nCOND_LOGICAL   DS   0C\n               DC   X'00',CL6'NOP'\n               DC   X'10',CL6'BO'\n               DC   X'40',CL6'BM'\n               DC   X'70',CL6'BNZ'\n               DC   X'80',CL6'BZ'\n               DC   X'B0',CL6'BNM'\n               DC   X'E0',CL6'BNO'\n               DC   X'F0',CL6'B'\n               DC   X'FF'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDRX          DSECT\n               COPY DXDPREF\nDXD_DISP       DS   XL2\nDXD_R          DS   X\nDXD_X          DS   X\nDXD_BASE       DS   X\nDXD_COND       DS   X\n\nDXD_EDIT_WORD  DS   XL8\nDXD_BLANKS     DS   CL8\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nCOND_DSECT     DSECT\nCOND_COND      DS   X\nCOND_MNEMONIC  DS   CL6\nCOND_DSECT_L   EQU  *-COND_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*-------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      GENRX\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GENSI": {"ttr": 4358, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00B\\x01\\t6?\\x01\\x10\\x00\\x8f\\x11\"\\x00\\xd6\\x00\\xcc\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2009-12-29T00:00:00", "modifydate": "2010-01-08T11:22:42", "lines": 214, "newlines": 204, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: GENSI                                                *\n*                                                                    *\n*  Function:                                                         *\n*   Generate SI type instructions                                    *\n*                                                                    *\n*  At entry R7 is AREA address                                       *\n*           R5 is address of instruction                             *\n*           R4 is address of OPCODE entry                            *\n*                                                                    *\n*--------------------------------------------------------------------*\nGENSI    CSECT\nGENSI    AMODE 31\nGENSI    RMODE ANY\n         USING GENSI,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISCOMM,R9\n         USING AREA_DSECT,R7\n         USING OPCODE_DSECT,R4\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'GENSI'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING GENSI,R10\n         L     R15,SESS_DXD_ADDR              WORK AREA BASE\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        SET SAVE AREA ADDRESS\n         USING DXDSI,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R7,                                              +\n               DATA2=0(R5)\n         MVC   DXD_BLANKS,COMM_BLANKS\n         LA    R1,DISCOMM_SOURCE_OPERAND1\n         ICM   R8,15,AREA_REF_LABEL1          LABEL REFERENCED?\n         USING LABEL_DSECT,R8\n         BZ    GEN0020                        NO\n*--------------------------------------------------------------------*\n*        Generate label and displacement                             *\n*--------------------------------------------------------------------*\n         ICM   R2,15,AREA_REF_USING1          USING BLOCK ADDR?\n         BZ    GEN0005                        NO\n         USING USING_DSECT,R2\n         CLC   USING_NAME,COMM_BLANKS         NAME BLANK?\n         BE    GEN0005                        YES\n         MVC   0(L'USING_NAME,R1),USING_NAME  COPY NAME\n         BAL   R15,SCAN0000                   FIND END OF NAME\n         MVI   0(R1),C'.'                     INSERT DELIMITER\n         LA    R1,1(,R1)                      UPDATE OUTPUT ADDRESS\nGEN0005  DS    0H\n         MVC   0(L'LABEL_NAME,R1),LABEL_NAME\n         BAL   R15,SCAN0000                   FIND END OF NAME\n         ICM   R0,15,AREA_REF_DISP1           DISP FROM LABEL\n         BZ    GEN0010\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         MVI   0(R1),C'+'                     INSERT PLUS\n         MVC   DXD_EDIT_WORD,EDIT_WORD\n         ED    DXD_EDIT_WORD,COMM_DWORD+4\n         LA    R2,DXD_EDIT_WORD\n         BAL   R15,SCAN1000\n         MVC   1(4,R1),0(R2)                  COPY DISP\n         BAL   R15,SCAN0000\n         B     GEN0030\nGEN0010  DS    0H\n         BAL   R15,SCAN0000\n         B     GEN0030\n*--------------------------------------------------------------------*\n*        Generate disp from register                                 *\n*--------------------------------------------------------------------*\nGEN0020  DS    0H\n         MVC   DXD_WORK(2),2(R5)              COPY BASE AND DISP\n         NI    DXD_WORK,X'0F'                 REMOVE BASE\n         LH    R0,DXD_WORK                    DISP ONLY\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   DXD_EDIT_WORD,EDIT_WORD\n         ED    DXD_EDIT_WORD,COMM_DWORD+4     EDIT DISP\n         LA    R2,DXD_EDIT_WORD\n         BAL   R15,SCAN1000\n         MVC   DISCOMM_SOURCE_OPERAND1(4),0(R2)\n         LA    R1,DISCOMM_SOURCE_OPERAND1\n         BAL   R15,SCAN0000\n         MVI   0(R1),C'('\n         MVI   1(R1),C'R'\n         SR    R2,R2\n         IC    R2,2(R5)                       BASE +\n         SRL   R2,4                           SHIFT OUT DISP\n         SLL   R2,1\n         LA    R2,REGISTER_TABLE(R2)\n         MVC   2(2,R1),0(R2)\n         BAL   R15,SCAN0000\n         MVI   0(R1),C')'\n         LA    R1,1(,R1)\n*--------------------------------------------------------------------*\n*        Generate immediate value                                    *\n*--------------------------------------------------------------------*\nGEN0030  DS    0H\n         CLI   OPCODE_FORMAT,$OPCODE_S        'S' FORMAT?\n         BE    EXIT0000                       YES..\n         MVI   0(R1),C','                     COMMAN\n         LA    R1,1(,R1)\n         LTR   R8,R8                          USING A LABEL?\n         BZ    GEN0050                        NO\n         ICM   R3,15,LABEL_EQU_NEXT           ANY EQU'S?\n         BZ    GEN0050                        NO\n         USING EQU_DSECT,R3\nGEN0040  DS    0H\n         CLC   EQU_VALUE,1(R5)                MATCH?\n         BE    GEN0060                        YES\n         ICM   R3,15,EQU_NEXT                 NEXT EQU\n         BNZ   GEN0040\nGEN0050  DS    0H\n         MVC   0(2,R1),=C'X'''\n         UNPK  2(3,R1),1(2,R5)                UNPACK IMMEDIATE VALUE\n         TR    2(2,R1),COMM_HEXCHAR\n         MVI   4(R1),C''''\n         B     EXIT0000\nGEN0060  DS    0H\n         MVC   0(63,R1),EQU_LABEL\n         B     EXIT0000\n*--------------------------------------------------------------------*\n*        Find next blank                                             *\n*--------------------------------------------------------------------*\nSCAN0000 DS    0H\n         CLI   0(R1),C' '\n         BER   R15\n         LA    R1,1(,R1)\n         B     SCAN0000\n*--------------------------------------------------------------------*\n*        Find first non-zero                                         *\n*--------------------------------------------------------------------*\nSCAN1000 DS    0H\n         CLI   0(R2),C'0'\n         BNER  R15\n         LA    R2,1(,R2)\n         B     SCAN1000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START      DC   Q(DXDSI)\nEDIT_WORD      DC   X'F020202020202120'\n\nREGISTER_TABLE DS   0C\n               DC   CL2'0 '\n               DC   CL2'1 '\n               DC   CL2'2 '\n               DC   CL2'3 '\n               DC   CL2'4 '\n               DC   CL2'5 '\n               DC   CL2'6 '\n               DC   CL2'7 '\n               DC   CL2'8 '\n               DC   CL2'9 '\n               DC   CL2'10'\n               DC   CL2'11'\n               DC   CL2'12'\n               DC   CL2'13'\n               DC   CL2'14'\n               DC   CL2'15'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDSI          DSECT\n               COPY DXDPREF\nDXD_WORK       DS   XL8\n\nDXD_EDIT_WORD  DS   XL8\nDXD_BLANKS     DS   CL8\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      GENSI\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "GENSS1": {"ttr": 4364, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00#\\x01\\t6/\\x01\\x10\\x00\\x8f\\x13X\\x01\\x17\\x00\\xe8\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2009-12-28T00:00:00", "modifydate": "2010-01-08T13:58:23", "lines": 279, "newlines": 232, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: GENSS1                                               *\n*                                                                    *\n*  Function:                                                         *\n*   GENERATE SS TYPE INSTRUCTIONS (MVC, CLC, ...                     *\n*                                                                    *\n*  At entry R7 is AREA address                                       *\n*           R5 is address of instruction                             *\n*           R4 is address of OPCODE entry                            *\n*                                                                    *\n*--------------------------------------------------------------------*\nGENSS1   CSECT\nGENSS1   AMODE 31\nGENSS1   RMODE ANY\n         USING GENSS1,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISCOMM,R9\n         USING AREA_DSECT,R7\n         USING OPCODE_DSECT,R4\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'GENSS1'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING GENSS1,R10\n         L     R15,SESS_DXD_ADDR              WORK AREA\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        SET SAVE AREA ADDRESS\n         USING DXDSS1,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R7,                                              +\n               DATA2=0(R5)\n         MVC   DXD_BLANKS,COMM_BLANKS\n         MVC   DXD_LENGTH,1(R5)               COPY LENGTH\n         SR    R2,R2\n         IC    R2,2(R5)                       BASE 1 AND PART OF DISP 1\n         SRL   R2,4                           SHIFT OUT DISP\n         STC   R2,DXD_BASE1\n         MVC   DXD_DISP1,2(R5)                COPY BASE 1 AND DISP 1\n         NI    DXD_DISP1,X'0F'                REMOVE BASE 1\n         IC    R2,4(R5)                       BASE 2 AND PART OF DISP 2\n         SRL   R2,4                           SHIFT OUT DISP\n         STC   R2,DXD_BASE2                   SAVE BASE 2\n         MVC   DXD_DISP2,4(R5)                COPY BASE 2 AND DISP 2\n         NI    DXD_DISP2,X'0F'                REMOVE BASE 2\n         LA    R1,DISCOMM_SOURCE_OPERAND1\n         ICM   R6,15,AREA_REF_LABEL1          LABEL FOR OPERAND 1?\n         BZ    GEN0030                        NO\n         USING LABEL_DSECT,R6\n*--------------------------------------------------------------------*\n*        GENERATE LABEL(LENGTH)                                      *\n*--------------------------------------------------------------------*\n         ICM   R2,15,AREA_REF_USING1          USING BLOCK ADDR?\n         BZ    GEN0010                        NO\n         USING USING_DSECT,R2\n         CLC   USING_NAME,COMM_BLANKS         NAME BLANK?\n         BE    GEN0010                        YES\n         MVC   0(L'USING_NAME,R1),USING_NAME  COPY NAME\n         BAL   R15,SCAN0000                   FIND END OF NAME\n         MVI   0(R1),C'.'                     INSERT DELIMITER\n         LA    R1,1(,R1)                      UPDATE OUTPUT ADDRESS\n*--------------------------------------------------------------------*\n*        GENERATE \"LABEL1(LL)\"                                       *\n*--------------------------------------------------------------------*\nGEN0010  DS    0H\n         MVC   0(L'LABEL_NAME,R1),LABEL_NAME\n         BAL   R15,SCAN0000                   FIND END OF NAME\n         ICM   R14,15,AREA_REF_DISP1          DISP FROM LABEL\n         BZ    GEN0020\n         CVD   R14,COMM_DWORD                 CONVERT TO DECIMAL\n         MVI   0(R1),C'+'                     INSERT PLUS\n         MVC   DXD_EDIT_WORD,EDIT_WORD\n         ED    DXD_EDIT_WORD,COMM_DWORD+4\n         LA    R2,DXD_EDIT_WORD\n         BAL   R15,SCAN1000\n         MVC   1(4,R1),0(R2)                  COPY DISP\n         BAL   R15,SCAN0000\nGEN0020  DS    0H\n         MVI   0(R1),C'('                     OPEN PAREN\n         SR    R14,R14\n         IC    R14,DXD_LENGTH                 LENGTH\n         LA    R14,1(,R14)                    FULL LENGTH\n         CVD   R14,COMM_DWORD                 CONVERT TO DECIMAL\n         MVC   DXD_EDIT_WORD,EDIT_WORD\n         ED    DXD_EDIT_WORD,COMM_DWORD+4     EDIT LENGTH\n         LA    R2,DXD_EDIT_WORD\n         BAL   R15,SCAN1000                   FIND 1ST NON ZERO\n         MVC   1(3,R1),0(R2)                  COPY LENGTH\n         BAL   R15,SCAN0000\n         MVI   0(R1),C')'                     CLOSING PAREN\n         LA    R1,1(,R1)                      UPDATE OUTPUT ADDRESS\n         B     GEN0040\n*--------------------------------------------------------------------*\n*        Generate \"DDD1(LL,B1)\"                                      *\n*--------------------------------------------------------------------*\nGEN0030  DS    0H\n         LH    R14,DXD_DISP1                  DISP 1\n         CVD   R14,COMM_DWORD                 CONVERT TO DECIMAL\n         MVC   DXD_EDIT_WORD,EDIT_WORD\n         ED    DXD_EDIT_WORD,COMM_DWORD+4     EDIT LENGTH\n         LA    R2,DXD_EDIT_WORD\n         BAL   R15,SCAN1000                   FIND 1ST NON BLANK\n         MVC   DISCOMM_SOURCE_OPERAND1(3),0(R2) COPY DISP\n         LA    R1,DISCOMM_SOURCE_OPERAND1\n         BAL   R15,SCAN0000\n         MVI   0(R1),C'('                     OPEN PAREN\n         SR    R14,R14\n         IC    R14,DXD_LENGTH\n         LA    R14,1(,R14)                    FULL LENGTH\n         CVD   R14,COMM_DWORD\n         MVC   DXD_EDIT_WORD,EDIT_WORD\n         ED    DXD_EDIT_WORD,COMM_DWORD+4     EDIT LENGTH\n         LA    R2,DXD_EDIT_WORD\n         BAL   R15,SCAN1000                   FIND 1ST NON BLANK\n         MVC   1(3,R1),0(R2)                  COPY LENGTH\n         BAL   R15,SCAN0000                   FIND 1ST NON BLANK\n         MVI   0(R1),C','                     INSERT COMMA\n         MVI   1(R1),C'R'                     INSERT COMMA\n         SR    R2,R2\n         IC    R2,DXD_BASE1\n         SLL   R2,1                           MULTIPLY BY 2\n         LA    R2,REGISTER_TABLE(R2)\n         MVC   2(2,R1),0(R2)                  COPY REGISTER\n         BAL   R15,SCAN0000\n         MVI   0(R1),C')'                     CLOSE PARM\n         LA    R1,1(,R1)                      UPDATE OUTPUT ADDRESS\n*--------------------------------------------------------------------*\n*        Comma to delimit operand1 and operand2                      *\n*--------------------------------------------------------------------*\nGEN0040  DS    0H\n         MVI   0(R1),C','\n         LA    R1,1(,R1)                      UPDATE OUTPUT ADDRESS\n*--------------------------------------------------------------------*\n*        Generate LABEL2                                             *\n*--------------------------------------------------------------------*\n         ICM   R6,15,AREA_REF_LABEL2          LABEL FOR OPERAND2?\n         BZ    GEN0060                        NO\n         ICM   R2,15,AREA_REF_USING2          USING BLOCK ADDR?\n         BZ    GEN0050                        NO\n         CLC   USING_NAME,COMM_BLANKS         NAME BLANK?\n         BE    GEN0050                        YES\n         MVC   0(L'USING_NAME,R1),USING_NAME  COPY NAME\n         BAL   R15,SCAN0000                   FIND END OF NAME\n         MVI   0(R1),C'.'                     INSERT DELIMITER\n         LA    R1,1(,R1)                      UPDATE OUTPUT ADDRESS\nGEN0050  DS    0H\n         MVC   0(L'LABEL_NAME,R1),LABEL_NAME  COPY NAME\n         ICM   R14,15,AREA_REF_DISP2          DISP FROM LABEL?\n         BZ    EXIT0000                       NO\n         BAL   R15,SCAN0000\n         MVI   0(R1),C'+'                     PLUS\n         CVD   R14,COMM_DWORD\n         MVC   DXD_EDIT_WORD,EDIT_WORD\n         ED    DXD_EDIT_WORD,COMM_DWORD+4     EDIT LENGTH\n         LA    R2,DXD_EDIT_WORD\n         BAL   R15,SCAN1000                   FIND 1ST NON BLANK\n         MVC   1(4,R1),0(R2)                  COPY DISP\n         B     EXIT0000\n*--------------------------------------------------------------------*\n*        Generate \"DDD2(B2)\"                                         *\n*--------------------------------------------------------------------*\nGEN0060  DS    0H\n         SR    R14,R14\n         ICM   R14,3,DXD_DISP2                DISP 2\n         CVD   R14,COMM_DWORD\n         MVC   DXD_EDIT_WORD,EDIT_WORD\n         ED    DXD_EDIT_WORD,COMM_DWORD+4     EDIT LENGTH\n         LA    R2,DXD_EDIT_WORD\n         BAL   R15,SCAN1000                   FIND 1ST NON BLANK\n         MVC   0(4,R1),0(R2)\n         BAL   R15,SCAN0000                   FIND BLANK\n         MVI   0(R1),C'('\n         MVI   1(R1),C'R'\n         SR    R2,R2\n         IC    R2,DXD_BASE2                   BASE 2\n         SLL   R2,1                           MULTIPLY BY 2\n         LA    R2,REGISTER_TABLE(R2)\n         MVC   2(2,R1),0(R2)                  COPY REGISTER\n         BAL   R15,SCAN0000\n         MVI   0(R1),C')'                     CLOSING PAREN\n         B     EXIT0000\n*--------------------------------------------------------------------*\n*        Find next blank                                             *\n*--------------------------------------------------------------------*\nSCAN0000 DS    0H\n         CLI   0(R1),C' '\n         BER   R15\n         LA    R1,1(,R1)\n         B     SCAN0000\n*--------------------------------------------------------------------*\n*        Find first non-zero                                         *\n*--------------------------------------------------------------------*\nSCAN1000 DS    0H\n         CLI   0(R2),C' '\n         BNER  R15\n         LA    R2,1(,R2)\n         B     SCAN1000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START      DC   Q(DXDSS1)\nEDIT_WORD      DC   X'4020202020202120'\n\nREGISTER_TABLE DS   0C\n               DC   CL2'0 '\n               DC   CL2'1 '\n               DC   CL2'2 '\n               DC   CL2'3 '\n               DC   CL2'4 '\n               DC   CL2'5 '\n               DC   CL2'6 '\n               DC   CL2'7 '\n               DC   CL2'8 '\n               DC   CL2'9 '\n               DC   CL2'10'\n               DC   CL2'11'\n               DC   CL2'12'\n               DC   CL2'13'\n               DC   CL2'14'\n               DC   CL2'15'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDSS1         DSECT\n               COPY DXDPREF\nDXD_DISP1      DS   H\nDXD_DISP2      DS   H\nDXD_BASE1      DS   X\nDXD_BASE2      DS   X\nDXD_LENGTH     DS   X\n\nDXD_EDIT_WORD  DS   XL8\nDXD_BLANKS     DS   CL8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      GENSS1\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GENSS2": {"ttr": 8208, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\"\\x01\\t6?\\x01\\x10\\x02_\\t4\\x00\\xff\\x00\\xe7\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2009-12-29T00:00:00", "modifydate": "2010-01-25T09:34:22", "lines": 255, "newlines": 231, "modlines": 0, "user": "RLRICE"}, "text": "*--------------------------------------------------------------------*\n*                                                                    *\n*  Module name: GENSS2                                               *\n*                                                                    *\n*  Function:                                                         *\n*   Generate packed decimal (PACK, AP, ZAP, ...                      *\n*                                                                    *\n*  At entry R7 is AREA address                                       *\n*           R5 is address of instruction                             *\n*           R4 is address of OPCODE entry                            *\n*                                                                    *\n*--------------------------------------------------------------------*\nGENSS2   CSECT\nGENSS2   AMODE 31\nGENSS2   RMODE ANY\n         USING GENSS2,R15\n         USING OSCOMM,R12\n         USING SESSION,R11\n         USING DISCOMM,R9\n         USING AREA_DSECT,R7\n         USING OPCODE_DSECT,R4\n         B     MOD0000                        SKIP EYECATCHER\nMODID    DC    CL8'GENSS2'\n         DC    C'&SYSDATE'\n         DC    C'&SYSTIME'\nMOD0000  DS    0H\n         STM   R14,R12,12(R13)                SAVE REGS\n         LR    R10,R15                        SET BASE REG\n         DROP  R15\n         USING GENSS2,R10\n         L     R15,SESS_DXD_ADDR              WORK AREA BASE\n         A     R15,DXD_START                  PLUS DISP\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15                        SET SAVE AREA ADDRESS\n         USING DXDSS2,R13\n         MVC   DXD_CSECT,MODID\n         ITRACE ID=ENTRY,                                              +\n               RDATA1=R7,                                              +\n               DATA2=0(R5)\n         MVC   DXD_BLANKS,COMM_BLANKS\n         LA    R1,DISCOMM_SOURCE_OPERAND1\n*--------------------------------------------------------------------*\n*        Break out length, base, and disp for operand 1              *\n*--------------------------------------------------------------------*\n         SR    R0,R0                          CLEAR R0\n         IC    R0,1(R5)                       LENGTHS 1 AND 2\n         SRL   R0,4                           SHIFT OUT LENGTH 2\n         STC   R0,DXD_LENGTH                  SET LENGTH\n         IC    R0,2(R5)                       BASE 1\n         SRL   R0,4                           SHIFT TO LOW BITS\n         STC   R0,DXD_BASE                    BASE FOR OPERAND 1\n         MVC   DXD_DISP,2(R5)                 COPY BASE AND DDD\n         NI    DXD_DISP,X'0F'                 REMOVE BASE\n         MVC   DXD_LABEL,AREA_REF_LABEL1      ADDR OF LABEL 1\n         MVC   DXD_LABEL,AREA_REF_LABEL1      ADDR OF LABEL 1\n         MVC   DXD_USING,AREA_REF_USING1      ADDR OF USING BLOCK\n         BAL   R3,GEN0010                     GENERATE OPERAND 1\n*--------------------------------------------------------------------*\n*        Comma to delimit operands 1 and 2                           *\n*--------------------------------------------------------------------*\n         MVI   0(R1),C','\n         LA    R1,1(,R1)                      UPDATE OUTPUT ADDRESS\n*--------------------------------------------------------------------*\n*        Break out length, base, and disp for operand 2              *\n*--------------------------------------------------------------------*\n         MVC   DXD_LENGTH,1(R5)               COPY LENGTHS 1 AND 2\n         NI    DXD_LENGTH,X'0F'               REMOVE LENGTH 1\n         SR    R0,R0                          CLEAR R0\n         IC    R0,4(R5)                       BASE 2\n         SRL   R0,4                           SHIFT TO LOW BITS\n         STC   R0,DXD_BASE                    BASE FOR OPERAND 2\n         MVC   DXD_DISP,4(R5)                 COPY BASE AND DDD 2\n         NI    DXD_DISP,X'0F'                 COPY BASE AND DDD 2\n         MVC   DXD_LABEL,AREA_REF_LABEL2      ADDR OF LABEL 2\n         MVC   DXD_LABEL_DISP,AREA_REF_DISP2  DISP FROM LABEL 2\n         MVC   DXD_USING,AREA_REF_USING2      ADDR OF USING BLOCK\n         BAL   R3,GEN0010                     GENERATE OPERAND 2\n         B     EXIT0000\n*--------------------------------------------------------------------*\n*                                                                    *\n*        Generate operand                                            *\n*                                                                    *\n*--------------------------------------------------------------------*\nGEN0010  DS    0H\n         ICM   R8,15,DXD_LABEL                LABEL BLOCK ADDR?\n         BNZ   GEN0020                        YES\n*--------------------------------------------------------------------*\n*        Generate \"DDD(L,B)\"                                         *\n*--------------------------------------------------------------------*\n         SR    R15,R15\n         ICM   R15,3,DXD_DISP                 DISP\n         CVD   R15,COMM_DWORD                 CONVERT TO DECIMAL\n         MVC   DXD_EDIT_WORD,EDIT_WORD\n         ED    DXD_EDIT_WORD,COMM_DWORD+4     EDIT LENGTH\n         LA    R2,DXD_EDIT_WORD\n         BAL   R15,SCAN1000                   FIND 1ST NON BLANK\n         MVC   0(8,R1),0(R2)                  COPY DISP\n         BAL   R15,SCAN0000\n         MVI   0(R1),C'('                     OPEN PAREN\n         SR    R15,R15\n         IC    R15,DXD_LENGTH\n         LA    R15,1(,R15)                    FULL LENGTH\n         CVD   R15,COMM_DWORD\n         MVC   DXD_EDIT_WORD,EDIT_WORD\n         ED    DXD_EDIT_WORD,COMM_DWORD+4     EDIT LENGTH\n         LA    R2,DXD_EDIT_WORD\n         BAL   R15,SCAN1000                   FIND 1ST NON BLANK\n         MVC   1(3,R1),0(R2)                  COPY LENGTH\n         BAL   R15,SCAN0000                   FIND 1ST NON BLANK\n         MVI   0(R1),C','                     INSERT COMMA\n         MVI   1(R1),C'R'                     INSERT COMMA\n         SR    R15,R15\n         IC    R15,DXD_BASE\n         SLL   R15,1                          MULTIPLY BY 2\n         LA    R2,REGISTER_TABLE(R15)\n         MVC   2(2,R1),0(R2)                  COPY REGISTER\n         BAL   R15,SCAN0000\n         MVI   0(R1),C')'                     CLOSE PAREN\n         LA    R1,1(,R1)                      UPDATE ADDRESS\n         BR    R3\n*--------------------------------------------------------------------*\n*        GENERATE LABEL(LENGTH)                                      *\n*--------------------------------------------------------------------*\nGEN0020  DS    0H\n         USING LABEL_DSECT,R8\n         ICM   R2,15,DXD_USING                USING BLOCK ADDR?\n         BZ    GEN0030                        NO\n         USING USING_DSECT,R2\n         CLC   USING_NAME,COMM_BLANKS         NAME BLANK?\n         BE    GEN0030                        YES\n         MVC   0(L'USING_NAME,R1),USING_NAME  COPY NAME\n         BAL   R15,SCAN0000                   FIND END OF NAME\n         MVI   0(R1),C'.'                     INSERT DELIMITER\n         LA    R1,1(,R1)                      UPDATE OUTPUT ADDRESS\nGEN0030  DS    0H\n         MVC   0(L'LABEL_NAME,R1),LABEL_NAME  COPY LABEL NAME\n         BAL   R15,SCAN0000                   FIND 1ST BLANK\n         ICM   R0,15,DXD_LABEL_DISP           DISP FROM LABEL\n         BZ    GEN0040                        ZERO..\n         CVD   R0,COMM_DWORD                  CONVERT TO DECIMAL\n         MVC   DXD_EDIT_WORD,EDIT_WORD\n         ED    DXD_EDIT_WORD,COMM_DWORD+4     EDIT LENGTH\n         LA    R2,DXD_EDIT_WORD\n         BAL   R15,SCAN1000                   FIND 1ST DIGIT\n         MVI   0(R1),C'+'                     INSERT PLUS\n         MVC   1(8,R1),0(R2)                  COPY DISP\n         BAL   R15,SCAN0000                   FIND 1ST BLANK\nGEN0040  DS    0H\n         MVI   0(R1),C'('                     INSERT OPEN PAREN\n         SR    R15,R15                        CLEAR R15\n         IC    R15,DXD_LENGTH                 LENGTH\n         LA    R15,1(,R15)                    TRUE LENGTH\n         CVD   R15,COMM_DWORD                 CONVERT TO DECIMAL\n         MVC   DXD_EDIT_WORD,EDIT_WORD\n         ED    DXD_EDIT_WORD,COMM_DWORD+4     EDIT LENGTH\n         LA    R2,DXD_EDIT_WORD               EDIT LENGTH\n         BAL   R15,SCAN1000                   FIND 1ST DIGIT\n         MVC   1(3,R1),0(R2)                  COPY LENGTH\n         BAL   R15,SCAN0000                   FIND 1ST BLANK\n         MVI   0(R1),C')'                     CLOSING PAREN\n         LA    R1,1(,R1)\n         BR    R3\n*--------------------------------------------------------------------*\n*        Find next blank                                             *\n*--------------------------------------------------------------------*\nSCAN0000 DS    0H\n         CLI   0(R1),C' '\n         BER   R15\n         LA    R1,1(,R1)\n         B     SCAN0000\n*--------------------------------------------------------------------*\n*        Find first non-zero                                         *\n*--------------------------------------------------------------------*\nSCAN1000 DS    0H\n         CLI   0(R2),C' '\n         BNER  R15\n         LA    R2,1(,R2)\n         B     SCAN1000\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         L     R13,4(,R13)                    RESTORE REGISTER 13       ASE01670\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXD_START      DC   Q(DXDSS2)\nEDIT_WORD      DC   X'4020202020202120'\n\nREGISTER_TABLE DS   0C\n               DC   CL2'0 '\n               DC   CL2'1 '\n               DC   CL2'2 '\n               DC   CL2'3 '\n               DC   CL2'4 '\n               DC   CL2'5 '\n               DC   CL2'6 '\n               DC   CL2'7 '\n               DC   CL2'8 '\n               DC   CL2'9 '\n               DC   CL2'10'\n               DC   CL2'11'\n               DC   CL2'12'\n               DC   CL2'13'\n               DC   CL2'14'\n               DC   CL2'15'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDXDSS2         DSECT\n               COPY DXDPREF\nDXD_LABEL      DS   A\nDXD_USING      DS   A\nDXD_LABEL_DISP DS   XL4\nDXD_LENGTH     DS   X\nDXD_BASE       DS   X\nDXD_DISP       DS   XL2\n\nDXD_EDIT_WORD  DS   XL8\nDXD_BLANKS     DS   CL8\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n               COPY     REGEQU\n               END      GENSS2\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "X": {"ttr": 22, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x10\\x01\\t3_\\x01\\t3_\\x16\\x14\\x00$\\x00$\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2009-12-01T00:00:00", "modifydate": "2009-12-01T16:14:10", "lines": 36, "newlines": 36, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SESSION  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISCOMM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 DISASMDA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 BPXYSTAT DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     OPERAND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 OSSPFD   TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     TRENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COPY     REGEQU\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT810/CBT.V500.FILE810.PDS/DISASM.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT810/CBT.V500.FILE810.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}