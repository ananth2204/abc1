* ------------------------------------------------------------------- *
*                                                                     *
*          DISASSEMBLER COMMON AREA                                   *
*                                                                     *
*     This macro will generate either the 'common' module CSECT or    *
*     a DSECT to map the 'common' module.  'Common' is used for       *
*     constants and work areas that are required by several modules   *
*     allowing some elimination of duplicated data and to allow       *
*     inter-module communication.                                     *
*                                                                     *
* ------------------------------------------------------------------- *
         MACRO
         DISCOMM  &TYPE=
         AIF   ('&TYPE' EQ 'CSECT').CSECT
         AIF   ('&TYPE' EQ 'DSECT').DSECT
         MNOTE 12,'INVALID TYPE'
         MEXIT
.CSECT   ANOP
DISCOMM  CSECT
         AGO   .NODSECT
.DSECT   ANOP
DISCOMM  DSECT
.NODSECT ANOP
             DC   CL8'DISCOMM'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISCONF_DCB  DCB  DSORG=PO,                   SAVED CONFIG INFO        +
               DDNAME=DISCONF,                                         +
               DCBE=DISCONF_DCBE,                                      +
               RECFM=FB,                                               +
               LRECL=CONFIG_RECORD_L,                                  +
               BLKSIZE=CONFIG_RECORD_L*16,                             +
               MACRF=(R,W)
DISCONF_DCBE   DCBE   EODAD=*

SYSIN_DCB    DCB  DSORG=PS,                   Assembler SYSIN          +
               DDNAME=SYSIN,                                           +
               DCBE=SYSIN_DCBE,                                        +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               BLKSIZE=4000,                                           +
               MACRF=(GM,PM)
SYSIN_DCBE     DCBE   EODAD=*

SYSPRINT_DCB DCB  DSORG=PS,                   Assembler SYSPRINT       +
               DDNAME=SYSPRINT,                                        +
               DCBE=SYSPRINT_DCBE,                                     +
               MACRF=GM
SYSPRINT_DCBE  DCBE   EODAD=*


DISPUNCH_DCB DCB  DSORG=PS,                   Generated source         +
               DDNAME=DISPUNCH,                                        +
               RECFM=FB,                                               +
               LRECL=80,                                               +
               BLKSIZE=4000,                                           +
               MACRF=PM

DISTEMP_DCB  DCB  DSORG=PS,                                            +
               DDNAME=DISTEMP,                                         +
               RECFM=FB,                                               +
               LRECL=132,                                              +
               BLKSIZE=5280,                                           +
               MACRF=PM

ACB_I    ACB   AM=VSAM,                                                +
               DDNAME=ANYDD,                                           +
               MACRF=(KEY,DIR,SEQ)
ACB_L    EQU   *-ACB_I

DISCOMM_OPEN  OPEN  (*,INPUT),MODE=31,MF=L
DISCOMM_CLOSE CLOSE *,MODE=31,MF=L

           READ DISCOMM_DECB,                                          +
               SF,                                                     +
               MF=L
DISCOMM_DECB_L EQU  *-DISCOMM_DECB

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISCOMM_OPCODE_TABLE_NAME   DC   CL8'DISOP1'  OPCODE TABLE NAME
DISCOMM_OPCODE_TABLE_ADDR   DC   A(0)         OPCODE TABLE ADDRESS
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISCOMM_PANEL_NAME          DC   CL8' '       PANEL NAME
DISCOMM_VDATA_ADDR          DC   A(0)         VDATA ADDR
DISCOMM_VDATA_LENGTH        DC   F'0'         VDATA LENGTH
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISCOMM_GEN_DISP            DC   A(0)         DISP DURING GEN PROCESS
DISCOMM_GEN_LENGTH          DC   F'0'         LENGTH OF TEXT GENNED

DISCOMM_NAME_PREV           DC   A(0)         SECTION NAME CHAIN
DISCOMM_NAME_NEXT           DC   A(0)         SECTION NAME CHAIN
DISCOMM_NAME_NBR            DC   A(0)         NBR OF SECTION NAMES

DISCOMM_ESD_PREV            DC   A(0)         EXTERNAL SYMBOL CHAIN
DISCOMM_ESD_NEXT            DC   A(0)         EXTERNAL SYMBOL CHAIN
DISCOMM_ESD_NBR             DC   F'0'         NBR OF ESD ITEMS

DISCOMM_RLD_AREA_PREV       DC   A(0)         RLD AREA CHAIN
DISCOMM_RLD_AREA_NEXT       DC   A(0)         RLD AREA CHAIN

DISCOMM_USER_AREA_PREV_1    DC   A(0)         USER AREA CHAIN
DISCOMM_USER_AREA_NEXT_1    DC   A(0)         USER AREA CHAIN

DISCOMM_USER_AREA_PREV_2    DC   A(0)         USER AREA CHAIN
DISCOMM_USER_AREA_NEXT_2    DC   A(0)         USER AREA CHAIN

DISCOMM_ALL_AREA_PREV       DC   A(0)         ALL AREA CHAIN
DISCOMM_ALL_AREA_NEXT       DC   A(0)         ALL AREA CHAIN

DISCOMM_BASE_PREV           DC   A(0)         BASE CHAIN
DISCOMM_BASE_NEXT           DC   A(0)         BASE CHAIN

DISCOMM_DSECT_PREV          DC   A(0)         ASM START/ASM END DSECTS
DISCOMM_DSECT_NEXT          DC   A(0)         DSECT CHAIN

DISCOMM_USING_PREV          DC   A(0)         USING CHAIN
DISCOMM_USING_NEXT          DC   A(0)         USING CHAIN

DISCOMM_KSDS_PREV           DC   A(0)         DSECT KSDS CHAIN
DISCOMM_KSDS_NEXT           DC   A(0)         DSECT KSDS CHAIN

DISCOMM_SYSLIB_PREV         DC   A(0)         DSECT SYSLIB CHAIN
DISCOMM_SYSLIB_NEXT         DC   A(0)         DSECT SYSLIB CHAIN

DISCOMM_CSECT_EP            DC   A(0)         ENTRY POINT
DISCOMM_CSECT_LENGTH        DC   F'0'         CSECT LENGTH
DISCOMM_CSECT_TEXT          DC   A(0)         TEXT'S STORAGE ADDRESS
DISCOMM_CSECT_TEXT_END      DC   A(0)         TEXT'S ENDING ADDRESS

DISCOMM_ASM_PREV            DC   A(0)         ASSEMBLER SOURCE
DISCOMM_ASM_NEXT            DC   A(0)         ASSEMBLER SOURCE

DISCOMM_USING_USING         DC   A(0)
DISCOMM_USING_KSDS          DC   A(0)
DISCOMM_USING_DSECT         DC   A(0)
DISCOMM_USING_LABEL         DC   A(0)

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISCOMM_DIALOG_TOKEN        DC   XL8'00'      DIALOG TOKEN
DISCOMM_DIALOG_WORKMOD      DC   XL8'00'      DIALOG WORKMOD

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISCOMM_LMOD_DSN            DC   CL44' '
DISCOMM_LMOD_VOLSER         DC   CL6' '

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISCOMM_OUTPUT_DSN          DC   CL44' '
DISCOMM_OUTPUT_MEMBER       DC   CL8' '
DISCOMM_OUTPUT_VOLSER       DC   CL6' '

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISCOMM_DDNAME_LENGTH       DC   H'8'
DISCOMM_DDNAME              DC   CL8' '       DDNAME

DISCOMM_LMOD_NAME_LENGTH    DC   H'8'
DISCOMM_LMOD                DC   CL8' '       LMOD NAME

DISCOMM_CSECT_NAME_LENGTH   DC   H'8'
DISCOMM_CSECT               DC   CL8' '       CSECT NAME

DISCOMM_ASSEMBLER_RC        DC   H'0'         ASSEMBLER'S RC
DISCOMM_PREFIX_LENGTH       DC   H'0'         LABEL PREFIX LENGTH

* ------------------------------------------------------------------- *
*                                                                     *
*              Flag bytes/function code bytes                         *
*                                                                     *
* ------------------------------------------------------------------- *
DISCOMM_FLAGS               DC   X'00'        GLOBAL CONTROL FLAGS
$DISCOMM_NO_RLD_WARN        EQU  X'80'        .. NO RLD OVERLAP WARNING
$DISCOMM_ASSEMBLE_SOURCE    EQU  X'40'        .. ASM SOURCE CHANGED
$DISCOMM_DEBUG              EQU  X'20'        .. DEBUGGING ON

DISCOMM_OPCODE_FLAGS        DC   X'00'
$DISCOMM_FLOAT              EQU  X'80'        .. FLOATING POINT
$DISCOMM_B2                 EQU  X'40'        .. B2 INSTRUCTIONS
$DISCOMM_Z                  EQU  X'20'        .. Z INSTRUCTIONS

DISCOMM_BIND_FUNC           DS   X            BINDER FUNCTION
$BIND_STARTD                EQU  X'01'        .. START DIALOG
$BIND_NAMES                 EQU  X'02'        .. OBTAIN SECTION NAMES
$BIND_ESD_RLD               EQU  X'03'        .. OBTAIN ESD AND RLD
$BIND_TEXT                  EQU  X'04'        .. READ TEXT
$BIND_ENDD                  EQU  X'05'        .. END DIALOG

DISCOMM_DSECT_FUNC          DC   X'00'        DSECT FUNCTION
$DSECT_DISPLAY_ALL          EQU  X'01'        .. DISPLAY ALL INFO
$DSECT_SELECT               EQU  X'02'        .. ALLOW SELECTION

* ------------------------------------------------------------------- *
*              Condition code type for extended branch mnemonics      *
* ------------------------------------------------------------------- *
DISCOMM_CC                  DC   X'00'        CONDITION CODE TYPE

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISCOMM_PREFIX              DC   CL4' '       LABEL PREFIX
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISCOMM_DD_NUMBER           DC   PL4'0'       DD NUMBER FOR DYNALLOC

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISCOMM_TPUT_MSG            DC   CL80' '

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DISCOMM_SOURCE              DS    0C
DISCOMM_SOURCE_DISP         DS    CL8
                            DS    CL2
DISCOMM_SOURCE_HEX_1        DS    CL4
                            DS    C
DISCOMM_SOURCE_HEX_2        DS    CL4
                            DS    C
DISCOMM_SOURCE_HEX_3        DS    CL4
                            DS    C
DISCOMM_SOURCE_HEX_4        DS    CL4
                            DS    CL5
DISCOMM_SOURCE_LABEL        DS    CL8
                            DS    C
DISCOMM_SOURCE_OPCODE       DS    CL5
                            DS    C
DISCOMM_SOURCE_OPERAND1     DS    CL200
DISCOMM_SOURCE_L            EQU   *-DISCOMM_SOURCE
         MEND
