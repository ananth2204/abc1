         MACRO
         DISASMDA
* ------------------------------------------------------------------- *
*                                                                     *
*     DISASM's data areas                                             *
*                                                                     *
*     There were so many different blocks that making up macros or    *
*     copy members took more time than it was worth.  Most of the     *
*     data areas are small, so it doesn't cost much to assemble them  *
*     all in all the modules.                                         *
*                                                                     *
* ------------------------------------------------------------------- *



* ------------------------------------------------------------------- *
*                                                                     *
*                    AREA DESCRIPTORS                                 *
*                                                                     *
*  All text areas will be described by a DATA or INSTRUCTION AREA.    *
*                                                                     *
* ------------------------------------------------------------------- *
AREA_DSECT             DSECT
AREA_PREV              DS    A          PREV AREA
AREA_NEXT              DS    A          NEXT AREA
AREA_EYE               DS    CL8        EYE CATCHER
AREA_BEGIN             DS    XL4        STARTING DISPLACEMENT
AREA_END               DS    XL4        ENDING DISPLACEMENT
AREA_LENGTH            DS    XL4        LENGTH
AREA_LABEL             DS    XL4        LABEL ADDRESS
AREA_OPCODE            DS    A          ADDRESS OF OPCODE TABLE ENTRY
AREA_REF_LABEL1        DS    A          OPERAND 1 LABEL
AREA_REF_DISP1         DS    XL4        DISP FROM OPERAND 1 LABEL
AREA_REF_USING1        DS    XL4        USING IN EFFECT
AREA_REF_LABEL2        DS    A          OPERAND 2 LABEL
AREA_REF_DISP2         DS    XL4        DISP FROM OPERAND 2 LABEL
AREA_REF_USING2        DS    XL4        USING IN EFFECT
AREA_TYPE              DS    C          AREA TYPE
$AREA_DATA             EQU   C'D'       .. DATA AREA
$AREA_INSTRUCTION      EQU   C'I'       .. INSTRUCTION
AREA_DATA_TYPE         DS    X          DATA TYPES (DATA AREAS)
$DATA_USER             EQU   X'01'      .. USER DEFINED
$DATA_ACON             EQU   X'02'      .. A-CON
$DATA_31               EQU   X'82'      .. AD-CON WITH 31-BIT MODE BIT
$DATA_VCON             EQU   X'03'      .. V-CON
$DATA_INTERNAL         EQU   X'04'      .. INTERNALLY DETECTED
$DATA_CXD              EQU   X'05'      .. PSEUDO AREA SIZE
$DATA_Q                EQU   X'06'      .. PSEUDO AREA DISPLACEMENT
AREA_FLAGS             DS    X
$AREA_LABEL_GENNED     EQU   X'80'      .. LABEL HAS BEEN GENNED
$AREA_RLD_PLUS         EQU   X'40'      .. DIRECTION + (FOR RLD ITEM)
$AREA_RLD_MINUS        EQU   X'20'      .. DIRECTION - (FOR RLD ITEM)
$AREA_OVERLAP          EQU   X'10'      .. OVERLAPS ANOTHER AREA
AREA_RLD_NAME          DS    CL63       VCON, Q, ETC NAME
AREA_DSECT_L           EQU   *-AREA_DSECT
* ------------------------------------------------------------------- *
*                                                                     *
*        Assembler source                                             *
*                                                                     *
* ------------------------------------------------------------------- *
ASM_DSECT              DSECT
ASM_PREV               DS    A          PREV ASM BLOCK
ASM_NEXT               DS    A          NEXT ASM BLOCK
ASM_EYE                DS    CL8        EYE CATCHER
ASM_SOURCE             DS    CL80       ASSEMBLE SOURCE STATEMENT
ASM_DSECT_L            EQU   *-ASM_DSECT
* ------------------------------------------------------------------- *
*                                                                     *
*        BASE REGISTER DEFINITIONS                                    *
*                                                                     *
* ------------------------------------------------------------------- *
BASE_DSECT             DSECT
BASE_PREV              DS    A          PREV BASE BLOCK
BASE_NEXT              DS    A          NEXT BASE BLOCK
BASE_EYE               DS    CL8        EYE CATCHER
BASE_BEGIN             DS    XL4        STARTING DISPLACEMENT
BASE_END               DS    XL4        ENDING DISPLACEMENT
BASE_DISP              DS    XL4        DISPLACEMENT BASE REFERS TO
BASE_REGISTER          DS    X          BASE REGISTER
BASE_CHAR_REGISTER     DS    CL3        BASE REGISTER IN CHARACTER FORM
BASE_FLAGS             DS    X          FLAGS
$BASE_GENNED           EQU   X'80'
$BASE_DROPPED          EQU   X'40'
BASE_DSECT_L           EQU   *-BASE_DSECT
* ------------------------------------------------------------------- *
*                                                                     *
*        DSECT DEFINITIONS                                            *
*                                                                     *
* ------------------------------------------------------------------- *
DSECT_DSECT            DSECT
DSECT_PREV             DS    A          PREV DSECT BLOCK
DSECT_NEXT             DS    A          NEXT DSECT BLOCK
DSECT_EYE              DS    CL8        EYE CATCHER
DSECT_LABEL_PREV       DS    A          LABEL BLOCK'S ADDRESS
DSECT_LABEL_NEXT       DS    A          LABEL BLOCK'S ADDRESS
DSECT_NAME             DS    CL63       DSECT'S NAME
DSECT_FLAGS            DS    X          FLAGS
$DSECT_LABELS_READ     EQU   X'80'      .. LABELS HAVE BEEN READ
DSECT_DSECT_L          EQU   *-DSECT_DSECT
* ------------------------------------------------------------------- *
*                                                                     *
*        ESD ITEMS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
ESD_DSECT              DSECT
ESD_PREV               DS    A          PREV ESD BLOCK'S ADDRESS
ESD_NEXT               DS    A          NEXT ESD BLOCK'S ADDRESS
ESD_EYE                DS    CL8        EYE CATCHER
ESD_NAME               DS    CL8        SYMBOL NAME
ESD_RESIDENT           DS    CL8        SECTION CONTAINING SYMBOL
ESD_TARGET             DS    CL8        SECTION NAME REFERS TO
ESD_TYPE               DS    CL2        TYPE
ESD_TYPE_QUAL          DS    CL2        TYPE QUALIFIER
ESD_LENGTH             DS    AL4        ENTRY LENGTH
ESD_ELEM_OFFSET        DS    AL4        ELEMENT OFFSET
ESD_CLASS_OFFSET       DS    AL4        CLASS OFFSET
ESD_DSECT_L            EQU   *-ESD_DSECT
* ------------------------------------------------------------------- *
*                                                                     *
*        LABEL BLOCK                                                  *
*                                                                     *
* ------------------------------------------------------------------- *
LABEL_DSECT            DSECT
LABEL_PREV             DS    A          PREV LABEL BLOCK
LABEL_NEXT             DS    A          NEXT LABEL BLOCK
LABEL_EYE              DS    CL8        EYE CATCHER
LABEL_NAME             DS    CL63       LABEL NAME
LABEL_DISP             DS    XL4        DISPLACEMENT TO THIS LABEL
LABEL_EQU_PREV         DS    A          EQU BLOCK ADDRESS
LABEL_EQU_NEXT         DS    A          EQU BLOCK ADDRESS
LABEL_TYPE             DS    C          LABEL TYPE
$LABEL_DATA            EQU   C'D'       .. LABEL AT DATA
$LABEL_ESD             EQU   C'E'       .. LABEL FROM AN ESD ENTRY
$LABEL_INSTR           EQU   C'I'       .. LABEL AT AN INSTRUCTION
$LABEL_RLD             EQU   C'R'       .. LABEL FROM AN RLD ENTRY
LABEL_DSECT_L          EQU   *-LABEL_DSECT
* ------------------------------------------------------------------- *
*                                                                     *
*        Section "name" blocks                                        *
*                                                                     *
* ------------------------------------------------------------------- *
NAME_DSECT             DSECT
NAME_PREV              DS    A          PREV NAME BLOCK
NAME_NEXT              DS    A          NEXT NAME BLOCK
NAME_EYE               DS    CL8        EYE CATCHER
NAME_NAME              DS    CL8        SECTION NAME
NAME_OFFSET            DS    F          DISPLACEMENT
NAME_DSECT_L           EQU   *-NAME_DSECT
* ------------------------------------------------------------------- *
*                                                                     *
*        OPCODE DEFINITIONS                                           *
*                                                                     *
* ------------------------------------------------------------------- *
OPCODE_DSECT           DSECT
OPCODE_MACHINE         DS    CL2        OPCODE
OPCODE_MNEMONIC        DS    CL5        MNEMONIC
OPCODE_LENGTH          DS    AL2        INSTRUCTION LENGTH
OPCODE_EXIT            DS    AL4        MODIFICATION EXIT
OPCODE_FORMAT          DS    X          FORMAT
$OPCODE_E              EQU   X'01'      .. E FORMAT (SAM)
$OPCODE_RRE            EQU   X'02'      .. RRE FORMAT
$OPCODE_RR1            EQU   X'03'      .. RR FORMAT 1 (R1,R2)
$OPCODE_RR2            EQU   X'04'      .. RR FORMAT 2 (SVC'S)
$OPCODE_RR3            EQU   X'05'      .. RR FORMAT 3 (BRANCHES)
$OPCODE_RX             EQU   X'06'      .. RX FORMAT
$OPCODE_S              EQU   X'07'      .. S FORMAT
$OPCODE_SI             EQU   X'08'      .. SI (IMMEDIATE) FORMAT
$OPCODE_RS1            EQU   X'09'      .. RS FORMAT 1 (SHIFTS)
$OPCODE_RS2            EQU   X'0A'      .. RS FORMAT 2 (BXLE, BXH, )
$OPCODE_RS3            EQU   X'0B'      .. RS FORMAT 3 (MASK TYPE)
$OPCODE_SS1            EQU   X'0C'      .. SS FORMAT 1 (CHARACTER)
$OPCODE_SS2            EQU   X'0D'      .. SS FORMAT 2 (PACKED DECIMAL)
$OPCODE_SS3            EQU   X'0E'      .. SS FORMAT 3 (MVCK,MVCS,MVCP)
$OPCODE_SS4            EQU   X'0F'      .. SS FORMAT 4 (SRP)
$OPCODE_B2S            EQU   X'10'      .. B2 S-FORMAT
$OPCODE_REL1           EQU   X'11'      .. BRANCH RELATIVE
$OPCODE_RIL            EQU   X'12'      .. C0 (LARL, BRCL, BRASL)
OPCODE_FLAGS           DS    X          FLAGS
$OPCODE_BRANCH         EQU   X'80'      .. BRANCH
$OPCODE_CCA            EQU   X'40'      .. SETS CC, ARITHMETIC
$OPCODE_CCC            EQU   X'20'      .. SETS CC, COMPARE
$OPCODE_CCL            EQU   X'10'      .. SETS CC, LOGICAL
$OPCODE_NO_COMMENT     EQU   X'08'      .. NO COMMENT
$OPCODE_RELATIVE       EQU   X'04'      .. RELATIVE ADDRESSING
$OPCODE_EXT            EQU   X'02'      .. USE EXTENDED MNEMONICS
OPCODE_REGS            DS    X          REGISTER RESTRICTIONS
$OPCODE_1EVEN          EQU   X'80'      .. OPERAND 1 MUST BE EVEN
$OPCODE_10246          EQU   X'40'      .. OPERAND 1 MUST BE 0,2,4,6
$OPCODE_104            EQU   X'20'      .. OPERAND 1 MUST BE 0 OR 4
$OPCODE_2EVEN          EQU   X'08'      .. OPERAND 2 MUST BE EVEN
$OPCODE_20246          EQU   X'04'      .. OPERAND 2 MUST BE 0,2,4,6
$OPCODE_204            EQU   X'02'      .. OPERAND 2 MUST BE 0 OR 4
OPCODE_REF             DS    X          BASE + DISP TYPE REFERENCES
$OPCODE_REF1           EQU   X'80'      .. 3RD AND 4TH NIBBLE
$OPCODE_REF2           EQU   X'40'      .. 5TH AND 6TH NIBBLE
OPCODE_COMMENT         DS    CL25       COMMENT IF PRESENT
OPCODE_DSECT_L         EQU   *-OPCODE_DSECT
* ------------------------------------------------------------------- *
*                                                                     *
*        EQU DEFINITIONS                                              *
*                                                                     *
* ------------------------------------------------------------------- *
EQU_DSECT              DSECT
EQU_PREV               DS    A          PREV EQU BLOCK'S ADDRESS
EQU_NEXT               DS    A          NEXT EQU BLOCK'S ADDRESS
EQU_EYE                DS    CL8        EYECATCHER
EQU_LABEL              DS    CL63       LABEL ON EQU STATEMENT
EQU_VALUE              DS    X          ASSOCIATED EQU VALUE
EQU_DSECT_L            EQU   *-EQU_DSECT
* ------------------------------------------------------------------- *
*                                                                     *
*        USING DEFINITIONS                                            *
*                                                                     *
* ------------------------------------------------------------------- *
USING_DSECT            DSECT
USING_PREV             DS    A          PREV USING BLOCK
USING_NEXT             DS    A          NEXT USING BLOCK
USING_EYE              DS    CL8        EYE CATCHER
USING_NAME             DS    CL63       FOR NAMED USINGS
USING_DSECT_NAME       DS    CL63       DSECT'S NAME
USING_DSECT_LABEL      DS    CL63       LABEL WITHIN THE DSECT
USING_DSECT_ADDR       DS    A          RELATED DSECT BLOCK'S ADDRESS
USING_LABEL_ADDR       DS    A          LABEL BLOCK'S ADDRESS
USING_DISP             DS    XL4        DISP FROM DSECT OR LABEL
USING_REGISTER         DS    X          BASE REGISTER
USING_CHAR_REGISTER    DS    CL3        BASE REGISTER (CHAR FORM)
USING_FLAG             DS    X          FLAGS
$USING_NO_DISP         EQU   X'80'      .. NO DISPLACEMENTS
$USING_GENNED          EQU   X'40'      .. USING GENNED
$DROP_GENNED           EQU   X'20'      .. DROP GENNED
USING_BEGIN            DS    XL4        STARTING DISPLACEMENT
USING_END              DS    XL4        ENDING DISPLACEMENT
USING_DSECT_L          EQU   *-USING_DSECT
* ------------------------------------------------------------------- *
*                                                                     *
*        Config file records                                          *
*                                                                     *
* ------------------------------------------------------------------- *
CONFIG_RECORD          DSECT
CONFIG_TYPE            DS    X          TYPE OF DATA
$CONFIG_DATAAREA       EQU   X'01'      .. USER DEFINED DATA AREA
$CONFIG_BASE           EQU   X'02'      .. BASE
$CONFIG_USING          EQU   X'03'      .. USING
$CONFIG_DSECT_KSDS     EQU   X'04'      .. PREPROCESSED DSECT KSDS
$CONFIG_SYSLIB         EQU   X'05'      .. SYSLIB(S) FOR ASSEMBLER
$CONFIG_PREFIX_LENGTH  EQU   X'06'      .. LABEL PREFIX LENGTH
$CONFIG_PREFIX         EQU   X'07'      .. LABEL PREFIX
$CONFIG_ASM_SOURCE     EQU   X'08'      .. ASSEMBLER SOURCE
$CONFIG_OUTPUT_DSN     EQU   X'09'      .. OUTPUT DSN
$CONFIG_OUTPUT_MEMBER  EQU   X'0A'      .. OUTPUT MEMBER
$CONFIG_OUTPUT_VOLSER  EQU   X'0B'      .. OUTPUT VOLSER
CONFIG_DATA            DS    CL255      SAVED DATA
CONFIG_RECORD_L        EQU   *-CONFIG_RECORD
*---------------------------------------------------------------------*
*                                                                     *
*        Preprocessed DSECT KSDS                                      *
*                                                                     *
*                                                                     *
*   The disassembler allows DSECTs to be pre-processed by DISASMU1.   *
*                                                                     *
*   The high-level assembler allows label names to be up to 63        *
*   characters in length... ruling out using a PDS or PDS/E with      *
*   the DSECT name as the member name.  So, I used VSAM KSDS's.       *
*                                                                     *
*   A snag is that the system does not allow VSAM data sets to be     *
*   concatenated.  So, I allow for multiple KSDS'S.  When a DSECT     *
*   is referenced on a USING statement, the disassembler first        *
*   "looks" for the DSECT in the output from the assembled source     *
*   given by the ASM,START and ASM,END statements.  If the DSECT      *
*   is not found, the DSECTxx DDs will be searched in the same        *
*   order they appear in the JCL.                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
KSDS_DSECT          DSECT
KSDS_PREV           DS     A           PREV KSDS BLOCK
KSDS_NEXT           DS     A           NEXT KSDS BLOCK
KSDS_EYE            DS     CL8         EYE CATCHER
KSDS_DDNAME         DS     CL8         DD NAME
KSDS_DSNAME         DS     CL44        DSN
KSDS_ACB            ACB    AM=VSAM     ACB
KSDS_DSECT_PREV     DS     A
KSDS_DSECT_NEXT     DS     A
KSDS_FLAGS          DS     X           FLAGS
$KSDS_OPEN          EQU    X'80'       .. ACB IS OPEN
$KSDS_DSECTS_READ   EQU    X'40'       .. DSECTS HAVE BEEN READ
KSDS_DSECT_L        EQU    *-KSDS_DSECT
*---------------------------------------------------------------------*
*                                                                     *
*        Assembler SYSLIBs                                            *
*                                                                     *
*---------------------------------------------------------------------*
SYSLIB_DSECT        DSECT
SYSLIB_PREV         DS     A           PREV SYSLIB BLOCK
SYSLIB_NEXT         DS     A           NEXT SYSLIB BLOCK
SYSLIB_EYE          DS     CL8         EYE CATCHER
SYSLIB_DDNAME       DS     CL8         DD NAME
SYSLIB_DSNAME       DS     CL44        DSN
SYSLIB_DSECT_L      EQU    *-SYSLIB_DSECT

         MEND
