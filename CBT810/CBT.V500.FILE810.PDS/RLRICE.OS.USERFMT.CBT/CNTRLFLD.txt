* ------------------------------------------------------------------- *
*                                                                     *
*  MODULE NAME: CNTRLFLD                                              *
*                                                                     *
*  Interpret FIELD control statements                                 *
*                                                                     *
* ------------------------------------------------------------------- *
CNTRLFLD CSECT
CNTRLFLD AMODE 31
CNTRLFLD RMODE ANY
         USING OSCOMM,R12
         USING SESSION,R11
         USING CNTRLFLD,R15
         B     INIT0000
MODID    DC    CL8'CNTRLFLD'
         DC    CL8'&SYSDATE'
         DC    CL7'&SYSTIME'
INIT0000 DS    0H
         STM   R14,R12,12(R13)                SAVE REGS
         LR    R10,R15                        COPY ENTRY POINT
         DROP  R15
         USING CNTRLFLD,R10                   DEFINE BASE
         L     R9,SESS_DXD_ADDR               WORK AREA
         LR    R15,R9                         COPY WORK AREA ADDRESS
         USING FMT_COMMON,R9
         LR    R8,R1                          CONTROL STATEMENT ADDRESS
         USING FORMAT,R8                      DEFINE BASE
         USING FMAT,R7
         A     R15,DXD_START                  PLUS DISP
         ST    R13,4(R15)                     SAVE R13
         ST    R15,8(R13)                     CHAIN SAVE AREA
         LR    R13,R15                        COPY WORK AREA ADDRESS
         USING DXDCFLD,R13                    DEFINE WORK AREA BASE
         MVC   DXD_CSECT,MODID
         XC    DXD_RC,DXD_RC                  INITIALIZE RETURN CODE
         ITRACE ID=ENTRY,                                              +
               RDATA1=R13,                                             +
               RDATA2=R9
* ------------------------------------------------------------------- *
*        Process FIELD statements                                     *
* ------------------------------------------------------------------- *
FLD0000  DS    0H
         ITRACE ID=FIELD
         MVI   DXD_OPTIONS,0                  RESET OPTIONS
         LA    R1,FORMAT_START                STARTING POSITION
         BAL   R15,NBR0000                    VERIFY AND CONVERT
         BM    ERR0010                        NOT VALID
         ITRACE ID=START,                                              +
               RDATA1=R0
         STH   R0,DXD_FIELD_START             SAVE START POSITION
         LA    R1,FORMAT_LENGTH               LENGTH
         BAL   R15,NBR0000                    VERIFY AND CONVERT
         BM    ERR0020                        NOT VALID
         ITRACE ID=LENGTH,                                             +
               RDATA1=R0
         STH   R0,DXD_FIELD_LENGTH            SAVE FIELD LENGTH
         LA    R1,DATA_TYPE_TABLE             DATA TYPE TABLE
         USING DATA_TYPES,R1                  DEFINE BASE
FLD0010  DS    0H
         CLC   DATA_TYPES_TYPE,FORMAT_DATA_TYPE
         BE    FLD0020
         CLI   DATA_TYPES_TYPE,X'FF'          END OF TABLE?
         BE    ERR0030                        YES
         LA    R1,DATA_TYPES_L(,R1)           NEXT TYPE
         B     FLD0010                        KEEP LOOKING
FLD0020  DS    0H
         ITRACE ID=TYPECODE,                                           +
               DATA1=(DATA_TYPES_CODE,1)
         MVC   DXD_TYPE_CODE,DATA_TYPES_CODE
         CLC   FORMAT_ROW_COLUMN+5(5),COMM_BLANKS
         BNE   ERR0040                        MUST BE 5 CHARS OR LESS
         LA    R1,FORMAT_ROW_COLUMN           DISPLAY ROW,COLUMN
         BAL   R15,NBR0000                    VERIFY AND CONVERT
         BM    ERR0050                        ROW NOT VALID
         CLI   0(R1),C','                     STOP ON A COMMA?
         BNE   ERR0060                        NO
         ITRACE ID=ROW,                                                +
               RDATA1=R0
         STH   R0,DXD_ROW                     SAVE ROW
         LA    R1,1(,R1)                      SKIP THE COMMA
         BAL   R15,NBR0000                    VERIFY AND CONVERT
         BM    ERR0050                        COLUMN NOT VALID
         CLI   0(R1),C','                     STOP ON A COMMA?
         BE    ERR0060                        YES.. NOT VALID
         ITRACE ID=COLUMN,                                             +
               RDATA1=R0
         STH   R0,DXD_COLUMN                  SAVE COLUMN NUMBER
         CLI   DXD_TYPE_CODE,$FMAT_BINARY     BINARY FIELD?
         BE    FLD0030                        YES
         CLI   DXD_TYPE_CODE,$FMAT_PACKED     PACKED DECIMAL?
         BNE   FLD0080                        NO
FLD0030  DS    0H
         CLC   FORMAT_HEADING,COMM_BLANKS     EDIT MASK PRESENT?
         BE    FLD0080                        NO
* ------------------------------------------------------------------- *
*        Verify editword is valid                                     *
* ------------------------------------------------------------------- *
         LA    R2,FORMAT_HEADING              1ST CHARACTER OF MASK
         MVI   DXD_FLAGS,0                    RESET FLAGS
         OI    DXD_OPTIONS,$FMAT_EDITWORD     SET EDIT MASK INDICATOR
FLD0040  DS    0H
         CLI   0(R2),C' '                     END OF EDIT MASK?
         BE    FLD0080                        YES
         TM    DXD_FLAGS,$SIGNIFICANT         SIGNIFICANT FLAG ON?
         BO    FLD0050                        YES
         CLC   0(1,R2),1(R2)                  'FLOATING' PAD?
         BE    FLD0060                        YES
         CLI   0(R2),C'9'                     NINE?
         BNE   FLD0070                        NO.. CHECK NEXT
         OI    DXD_FLAGS,$SIGNIFICANT         SET SIGNIFICANT FLAG
         B     FLD0070
FLD0050  DS    0H
         CLI   0(R2),C','                     COMMA?
         BE    FLD0070                        YES.. ALLOWABLE
         CLI   0(R2),C'.'                     DECIMAL POINT?
         BE    FLD0070                        YES.. ALLOWABLE
         CLI   0(R2),C'9'                     DIGIT?
         BE    FLD0070                        YES.. ALLOWABLE
         CLC   CREDIT,0(R2)                   'CR '?
         BE    FLD0080                        YES
         B     ERR0070
FLD0060  DS    0H
         OI    DXD_OPTIONS,$FMAT_FLOAT        SET 'FLOATING' PAD
FLD0070  DS    0H
         LA    R2,1(,R2)                      NEXT IN MASK
         B     FLD0040
* ------------------------------------------------------------------- *
*        Build new FMAT block                                         *
* ------------------------------------------------------------------- *
FLD0080  DS    0H
         GETMAIN RU,                                                   +
               LV=FMAT_L,                                              +
               LOC=ANY
         OC    DXD_FIRST_FMAT,DXD_FIRST_FMAT  BLOCKS ALREADY ON CHAIN?
         BNZ   FLD0090                        YES
         ST    R1,DXD_FIRST_FMAT              FIRST BLOCK
FLD0090  DS    0H
         L     R15,DXD_FMAT_CHAIN_POINT       CHAIN POINT
         ST    R1,0(,R15)                     ADD TO CHAIN
         LR    R7,R1                          COPY ADDRESS
         LA    R15,FMAT_NEXT
         ST    R15,DXD_FMAT_CHAIN_POINT       SAVE CHAIN POINT
         XC    FMAT(FMAT_L),FMAT              INITIALIZE
         ITRACE ID=FMAT,                                               +
               RDATA1=R7
         MVI   FMAT_TYPE,$FMAT_FIELD          SET TYPE TO 'FIELD'
         MVC   FMAT_START,DXD_FIELD_START     COPY STARTING POSITION
         MVC   FMAT_LENGTH,DXD_FIELD_LENGTH   COPY LENGTH
         MVC   FMAT_ROW,DXD_ROW               COPY DISPLAY ROW
         MVC   FMAT_COLUMN,DXD_COLUMN         COPY DISPLAY COLUMN
         MVC   FMAT_DATA_TYPE,DXD_TYPE_CODE   COPY DATA TYPE CODE
         MVC   FMAT_OPTIONS,DXD_OPTIONS       CUSTOM EDIT WORD PRESENT
         MVC   FMAT_DATA,FORMAT_HEADING       COPY HEADING OR EDIT MASK
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
NBR0000  DS    0H
         MVC   COMM_INFO_01(10),C_0000000000
NBR0010  DS    0H
         CLI   0(R1),C' '                     BLANK?
         BE    NBR0020                        YES
         CLI   0(R1),C','                     COMMA?
         BE    NBR0020                        YES
         CLI   0(R1),C'0'                     ZERO?
         BL    NBR0030                        LESS.. BAD
         CLI   0(R1),C'9'                     NINE?
         BH    NBR0030                        HIGHER.. BAD
         MVC   COMM_INFO_01(9),COMM_INFO_01+1
         MVC   COMM_INFO_01+9(1),0(R1)
         LA    R1,1(,R1)                      NEXT DIGIT
         B     NBR0010                        LOOP
NBR0020  DS    0H
         PACK  COMM_DWORD,COMM_INFO_01(10)
         CVB   R0,COMM_DWORD                  CONVERT TO BINARY
         BR    R15
NBR0030  DS    0H
         ICM   R0,15,MINUS_ONE                INDICATE BAD
         BR    R15
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         MVI   COMM_MSG_ID+1,1                START NOT VALID
         B     ERR900
ERR0020  DS    0H
         MVI   COMM_MSG_ID+1,2                LENGTH NOT VALID
         B     ERR900
ERR0030  DS    0H
         MVI   COMM_MSG_ID+1,3                BAD DATA TYPE
         B     ERR900
ERR0040  DS    0H
         MVI   COMM_MSG_ID+1,4                ROW,COL > 5 CHARACTERS
         B     ERR900
ERR0050  DS    0H
         MVI   COMM_MSG_ID+1,5                BAD ROW
         B     ERR900
ERR0060  DS    0H
         MVI   COMM_MSG_ID+1,6                BAD COLUMN
         B     ERR900
ERR0070  DS    0H
         MVI   COMM_MSG_ID+1,7                BAD EDIT MASK
         B     ERR900
ERR900   DS    0H
         MVC   COMM_MSG_CSECT,MODID
         MVI   COMM_MSG_ID,0
         L     R15,COMM_V_OSMSG               OSMSG ENTRY POINT
         BALR  R14,R15                        BUILD MESSAGE
         MVI   DXD_RC+1,8                     SET RC
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         LH    R15,DXD_RC                     SET RC
         L     R13,4(,R13)                    RESTORE R13
         L     R14,12(,R13)                   RESTORE R14
         LM    R0,R12,20(R13)                 RESTORE REGISTERS
         BR    R14                            RETURN

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXD_START       DC   Q(DXDCFLD)
MINUS_ONE       DC   F'-1'

C_0000000000    DC   10C'0'

CREDIT          DC   C'CR '

DATA_TYPE_TABLE DS   0C
                DC   CL10'BINARY',AL1($FMAT_BINARY)
                DC   CL10'CHARACTER',AL1($FMAT_CHARACTER)
                DC   CL10'HEADING',AL1($FMAT_HEADING)
                DC   CL10'HEX',AL1($FMAT_HEX)
                DC   CL10'PACKED',AL1($FMAT_PACKED)
                DC   X'FF'

                LTORG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DXDCFLD             DSECT
                    COPY    DXDPREF

DXD_RC              DS      H

DXD_FIELD_START     DS      XL2
DXD_FIELD_LENGTH    DS      XL2
DXD_ROW             DS      XL2
DXD_COLUMN          DS      XL2
DXD_TYPE_CODE       DS      X
DXD_OPTIONS         DS      X
DXD_FLAGS           DS      X
$SIGNIFICANT        EQU     X'80'

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                    COMMON
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                    SESSION
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                    BPXYSTAT DSECT=YES,LIST=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FMT_COMMON          DSECT
                    DS      (DXD_PREFIX_L)X
                    COPY    FMTCOMM
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                    COPY    FORMAT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                    COPY    FMAT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DATA_TYPES          DSECT
DATA_TYPES_TYPE     DS      CL10
DATA_TYPES_CODE     DS      X
DATA_TYPES_L        EQU     *-DATA_TYPES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                    COPY    TRENTRY
* ------------------------------------------------------------------- *
*                   EQUATES                                           *
* ------------------------------------------------------------------- *
                    COPY    REGEQU
                    END     CNTRLFLD
