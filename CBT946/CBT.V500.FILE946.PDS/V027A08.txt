 Changing a user's privilege class on-line
The program CLASS will display and/or change any user's privilege classes on-
line.  The command syntax is:
     CLASS userid <INQ             > <(options >
                  <ADD cl1<cl2..cln>
                  <DEL cl1<cl2..cln>
A valid class is any letter A-Z and the digits 1-6.  Up to eight classes can be
specified for addition/deletion at once.  Any invalid classes entered will be
ignored.
The stack option suppresses printing of error messages and, for display
requests, puts the output on the program stack.  This can be used when CLASS is
called from an EXEC.
CLASS may run for enquiry only in a class 'E' machine.  Class 'C' must be
available if privileges are to be altered.  It will only work for VM/SP rel 4 or
higher with or without HPO.
         MACRO
&LABEL   DCP    &CPADDR,&FOR,&TARGET
.*       MACRO TO ISSUE DIAG'4' TO READ REAL STORAGE
         STM    R1,R3,SAV&SYSNDX
         LA     R1,&CPADDR
         LA     R2,&FOR
         LA     R3,&TARGET
         DC     X'83120004'
         LM     R1,R3,SAV&SYSNDX
         B      CONT&SYSNDX
SAV&SYSNDX DS   3F
CONT&SYSNDX EQU *
         MEND
QCLASS   START X'20000'
         USING QCLASS,R12
         SAVE (14,12)
         ST    R13,SAVEAREA+4
         LA    R13,SAVEAREA
         USING VMBLOK,R10
         USING PSA,R9
         MVC   INPBUFFR(130),0(R1) MVS INPUT INTO UNPROTECTED STORAGE
         LA    R1,INPBUFFR
* PRELIMINARY STEP : HAVE ANY OPTIONS BEEN SPECIFIED?
         LA    R2,8(R1)           R2 = ADDR OF FIRST PARM
TRYPARM  CLI   0(R2),X'FF'        IS THIS THE END?
         BE    USERNM             YES,BRANCH OUT
         CLI   0(R2),C'('         START OF OPTIONS ?
         BNE   NEXTPARM
         CLI   1(R2),C'S'         COULD THIS BE 'STACK' ?
         BNE   NOTFIRST           NO- TRY AGAIN
         OI    OPTFLAG,STACK      SIGNAL STACK REQUIRED
NOTFIRST MVI   0(R2),X'FF'        REMOVE THE OPEN BRACKET
         LA    R2,8(R2)
TRYOPT   CLI   0(R2),X'FF'        END OF OPTIONS ?
         BE    USERNM             YES-FORGET IT
         CLI   0(R2),C'S'         STACK?
         BNE   NEXTOPT            NO - TRY AGAIN
         OI    OPTFLAG,STACK      FLAG STACK OPTION
NEXTOPT  MVI   0(R2),X'FF'        REMOVE THIS FROM THE INPUT BUFFER
         LA    R2,8(R2)           BUMP ON TO NEXT OPTION
         B     TRYOPT
NEXTPARM LA    R2,8(R2)           TRY THE NEXT PARAMETER FOR '('
         B     TRYPARM
USERNM   CLI   8(R1),X'FF'        CHECK FOR USERID
         BNE   GETNAME
         TM    OPTFLAG,STACK
         BC    7,RC1
         WRTERM 'NO USERID SPECIFIED.'
RC1      LA    R15,1              RC=1
         B     EXIT
GETNAME  ST    R1,PARMADDR        SAVE THE PARAMETERS
          MVC   USERPARM(8),8(R1)
* STEP 1. RUN THE VMBLOK CHAIN.
         SR    R9,R9
         LA    R1,ASYSVM-PSA(R9)  DIAG 4 TO FIND THE ADDRESS..
         ST    R1,CPADDR          ..OF THE SYSTEM VMBLOK
         DCP   CPADDR,1,SYSVM
         L     R3,SYSVM        GET THE ADDRESS OF THE FIRST USER VMBLOK
         LA    R1,VMPNT-VMBLOK(R3)
         ST    R1,CPADDR
         DCP   CPADDR,1,USERADDR
         MVC   BLOCK1(4),USERADDR STORE THIS AS A LOOP STOPPER
BLOKLOOP L     R1,USERADDR
         LA    R1,VMUSER-VMBLOK(R1) OFFSET TO VM USERID
         ST    R1,CPADDR          EXTRACT THE USERID
         LA    R1,4(R1)
         ST    R1,CPADDR+4
         DCP   CPADDR,2,USERID
         CLC   USERID(8),USERPARM IS THIS THE ONE?
         BE    THISONE
* FIND NEXT USERID VMBLOK ADDRESS
         L     R1,USERADDR   NO, GET THE NEXT VMBLOK
         LA    R1,VMPNT-VMBLOK(R1)
         ST    R1,CPADDR
         DCP   CPADDR,1,USERADDR
         CLC   USERADDR(4),BLOCK1 IS THIS THE FIRST ONE AGAIN?
         BNE   BLOKLOOP
* STEP 2. USER NOT FOUND - EXIT
         TM    OPTFLAG,STACK
         BC    7,RC2
         MVC   MESSAGE2(8),USERPARM
         WRTERM MESSAGE2,LMSG2
RC2      LA    R15,2
         B     EXIT
* STEP 3. EXTRACT VMCMDLEV
THISONE  DS    0H            THIS IS THE USER WE WERE ASKED ABOUT
         L     R1,USERADDR
         LA    R1,VMCMDLEV-VMBLOK(R1)  GET THIS USER'S CLASS MASK..
         ST    R1,CPADDR          ..FROM THE VMBLOK
         DCP   CPADDR,1,CLASSES
         MVI   CLASLIST,C'.'      FILL THE CLASS LIST WITH DOTS
         MVC   CLASLIST+1(L'CLASLIST-1),CLASLIST
* STEP 4. PROCESS THE COMMANDS ENTERED.
         L     1,PARMADDR
         CLI   16(R1),X'FF'  IS THERE ANOTHER PARAMETER?
         BE    CHECK         NO - JUST DISPLAY HIS AUTHORITY
         CLC   16(3,R1),=C'INQ'
         BE    CHECK         STILL JUST DISPLAY .
         CLC   16(3,R1),=C'ADD'
         BE    ADD           NEEDS MORE PRIVILEGES
         CLC   16(3,R1),=C'DEL'
         BE    DELETE        GO REMOVE CLASSES
         TM    OPTFLAG,STACK
         BC    7,RC3
         MVC   INVOP(8),16(R1)
         WRTERM MESSAGE3,LMSG3
RC3      LA    R15,3         SET RETURN CODE
         B     EXIT
* STEP 5. ADD A CLASS TO A USER'S PRIVILEGES.
ADD      CLI   24(R1),X'FF'  DO WE HAVE ENOUGH INFO?
         BE    NOADDPRM      NO => GIVE AN ERROR MESSAGE
         MVC   NEWCLASS(8),24(R1) SAVE THESE PARAMETERS
         LA    R5,NEWCLASS   ADDRESS OF FIRST REQUESTED CLASS
         SR    R6,R6         R6 = MASK FOR CLASSES TO BE ADDED
ONECLASS TR    0(1,R5),CLASSTR TRANS CLASS TO MASK
         CLI   0(R5),X'FF'   VALID CLASS?
         BE    GETNEXT       NO - IGNORE IT
          L     R2,CLASMASK   R2 = VMBLOK.VMCLASSA = X'80000000'
         SR    R3,R3
         IC    R3,0(R5)      R3=FIRST CLASS LETTER
         LTR   R3,R3         R3=0 => CLASS TO ADD IS CLASS 'A'
         BZ    SHIFTED       LEAVE THE MASK AS IT IS
SHIFT    SRL   R2,1          SHIFT THE CLASS MASK SO MANY TIMES..
         BCT   R3,SHIFT      ..DEPENDING ON THE NUMBER IN R3
SHIFTED  AR    R6,R2         ADD IN THIS NEW CLASS MASK
GETNEXT  LA    R5,1(R5)      TRY THE NEXT BYTE OF THE PARAMETER
         CLI   0(R5),C' '    IS THERE ANOTHER CLASS TO ADD?
         BNE   ONECLASS      YES => START AGAIN
         L     R1,CLASSES    LOAD EXISTING CLASSES..
         OR    R1,R6         ..'OR' THEM WITH THE NEW CLASS MASK..
         ST    R1,CLASSES    ..AND KEEP THEM SAFE
         BAL   R14,STCP      UPDATE USER CLASSES
         SR    R15,R15       RC=0
         B     EXIT
NOADDPRM TM    OPTFLAG,STACK
         BC    7,RC4
         WRTERM 'NO CLASSES HAVE BEEN SPECIFIED FOR ADDITION'
RC4      LA    R15,4         RC=4
         B     EXIT
* STEP 6. DELETIONS.
DELETE   CLI   24(R1),X'FF'  SEE IF CLASSES TO BE DELETED..
         BE    NODELPRM      ..HAVE BEEN ENTERED.
         MVC   NEWCLASS(8),24(R1) STORE THE PARAMETER
         LA    R5,NEWCLASS
         SR    R6,R6         SET R6=X'FFFFFFFF' SO THAT WE ONLY..
         BCTR  R6,R0         ..DELETE THE CLASSES SPECIFIED.
DELCLASS TR    0(1,R5),CLASSTR TRANS CLASS TO MASK
         CLI   0(R5),X'FF'   VALID CLASS?
         BE    NEXTDEL       NO - IGNORE IT
         L     R2,CLASMASK   THE REST IS THE SAME AS ADDITION
         SR    R3,R3
         IC    R3,0(R5)
         LTR   R3,R3
         BZ    SHFTDEL
SHIFTDEL SRL   R2,1
         BCT   R3,SHIFTDEL
SHFTDEL  SR    R6,R2         ADD IN THE NEXT CLASS
NEXTDEL  LA    R5,1(R5)
         CLI   0(R5),C' '
         BNE   DELCLASS      MORE THAN ONE CLASS ENTERED
         L     R1,CLASSES
         NR    R1,R6         THIS TIME WE 'AND' THE CLASS MASKS
         ST    R1,CLASSES
*        ADD CLASSES TO REAL STORAGE HERE
         BAL   R14,STCP      UPDATE USER CLASSES
         SR    R15,R15       RC=0
         B     EXIT
NODELPRM TM    OPTFLAG,STACK
         BC    7,RC5
         WRTERM 'NO CLASSES HAVE BEEN SPECIFIED FOR DELETION'
RC5      LA    R15,5         RC=5
         B     EXIT
* STEP 7. DISPLAY A USER'S PRIVILEGE CLASSES.
CHECK    L     R1,CLASSES    CLASS MASK FROM THE VMBLOK
         L     R2,CLASMASK   X'80000000'
         LA    R3,CLASLIST   ADDRESS OF OUTPUT AREA
         LA    R4,CLASS      LIST OF CLASSES(A-H)
CLASLOOP LR    R5,R2         CHECK EACH CLASS INDIVIDUALLY
         N     R5,CLASSES
         LTR   R5,R5
         BZ    NOCLASS
         MVC   0(1,R3),0(R4) YES HE HAS THIS CLASS
NOCLASS  EQU   *
          SRL   R2,R1         MOVE ON TO NEXT CLASS
         LTR   R2,R2         IS THIS THE END?
         BZ    PRINTOUT      YES, SHOW WHAT IS THERE NOW
         LA    R3,1(R3)      NO, TRY THE NEXT ONE
         LA    R4,1(R4)
         B     CLASLOOP
PRINTOUT TM    OPTFLAG,STACK
         BC    7,STKOUT
         WRTERM CLASLIST,L'CLASLIST
         B     READY
STKOUT   LA    R1,STAKLIST
         SVC   202           PUT THE OUTPUT ON THE STACK
READY    SR    R15,R15
EXIT     L     R13,SAVEAREA+4
         RETURN (14,12),RC=(15)
STCP     EQU   *
*        ADD CLASSES TO REAL STORAGE HERE
*        WE MUST PRODUCE A CHARACTER STRING OF THE FORM
*              CP STCP VVVVVV CCCCCCCC
*        WHERE VVVVVV IS THE VMBLOK ADDRESS IN EBCDIC HEX
*        AND CCCCCCCC IS THE DESIRED VMCMDLEV IN EBCDIC HEX.
*        AN SVC 202 WILL EXECUTE THE STCP COMMAND AND PUT THE NEW
*        CLASSES INTO EFFECT.
         L     R1,USERADDR        ADDR OF USER'S VMBLOK
         LA    R1,VMCMDLEV-VMBLOK(1) INDEX INTO VM COMMAND CLASS MASK
         ST    R1,USERADDR
* TRANSLATE THE VMBLOK ADDRESS FROM FULLWORD BINARY TO EBCDIC HEX
         UNPK  REALADDR(9),USERADDR(5) UNPACK THE VMBLOK REAL ADDRESS
         TR    REALADDR(8),CVTTAB AND TRANSLATE TO HEX
         MVC   CHADDR(6),REALADDR+2 CHADDR=VMBLOK ADDR IN EBCDIC HEX
* DO THE SAME FOR THE CLASSES TO BE STORED.
         UNPK  REALMASK(9),CLASSES(5)
         TR    REALMASK(8),CVTTAB
         MVC   CHMASK(8),REALMASK
         LA    R2,STCPLIST   ADDRESS OF CP COMMAND
         LA    R3,RESPBUF    RESPONSE BUFFER ADDRESS
         LA    R4,LSTCP      LENGTH OF (COMMAND+PARMS) AND FLAGS
         O     R4,STCPFLAG
         LA    R5,RESPLEN    RESPONSE BUFFER LENGTH
         DC    X'83',X'24',X'0008'   EXECUTE CP COMMAND
         BC    1,STCPERR     DIDN'T WORK
         CLC   RESPBUF(5),=C'STORE'
         BNE   STCPERR
         BR    R14           RETURN TO MAIN ROUTINE
STCPERR  EQU   *
         TM    OPTFLAG,STACK
         BC    7,RC6
         WRTERM 'INSUFFICIENT AUTHORITY TO CHANGE CLASS.'
RC6      LA    R15,6
         B     EXIT
REALADDR DS    CL9
REALMASK DS    CL9
STCPLIST DC    C'STCP '
CHADDR   DS    CL6
         DC    C' '
CHMASK   DS    CL8
LSTCP    EQU   *-STCPLIST
STCPFLAG DC    X'40000000'
RESPBUF  DS    CL40
RESPLEN  EQU   *-RESPBUF
         DS    0D
STAKLIST DC    CL8'ATTN'
         DC    CL4'LIFO'
STAKLEN  DC    AL1(L'CLASLIST)
STAKADDR DC    AL3(CLASLIST)
* DATA AREAS ETC.
 * ALIGNED AREAS :
         DS    0D
CPADDR   DS    3D
SYSVM    DS    AL4
BLOCK1   DC    AL4(0)
USERADDR DS    AL4
USERID   DS    CL8
CLASSES  DS    F
PARMADDR DS    F
CLASMASK DC    AL4(VMCLASSA)
* UNALIGNED AREAS :
NEWCLASS DC    CL8' ',C' '      BLANK DELIMITER MUST FOLLOW NEWCLASS
CLASLIST DS    CL32
USERPARM DS    CL8
OPTFLAG  DC    X'00'
* BITS DEFINED ON OPTFLAG (SO FAR) :
STACK    EQU   X'10'
CLASS    DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ123456'
INPBUFFR DS    CL130
MESSAGE2 DC    CL8' ',C' IS NOT LOGGED ON.'
LMSG2    EQU   *-MESSAGE2
MESSAGE3 DC    C'INVALID OPERATION '
INVOP    DS    CL8
LMSG3    EQU   *-MESSAGE3
SAVEAREA DS    18F
CVTTAB   DC    256C'.'
         ORG   CVTTAB+C'0'
         DC    C'0123456789ABCDEF'
         ORG   ,
CLASSTR  DC    256X'FF'              ALL INVALID CLASSES
         ORG   CLASSTR+C'A'
         DC    X'000102030405060708' ABCDEFGHI
         ORG   CLASSTR+C'J'
         DC    X'090A0B0C0D0E0F1011' JKLMNOPQR
         ORG   CLASSTR+C'S'
         DC    X'1213141516171819'   STUVWXYZ
         ORG   CLASSTR+C'1'
         DC    X'1A1B1C1D1E1F'       123456
         ORG   ,
         COPY  VMBLOK
         PSA   ,
         REGEQU ,
         END   ,
Padraic Moran
Systems Programmer
Irish Life Assurance plc (Ireland) ) Xephon 1988




















