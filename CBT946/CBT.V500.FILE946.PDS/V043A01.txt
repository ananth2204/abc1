Maximising the use of a printer

The vast majority of printers that are in use with VM/CMS will
support a maximum line width of 133 characters (including
carriage control).  Most files being printed have an LRECL less
then 132 and some are quite small.  I find it somewhat vexing
to contend with lengthy print-outs which contain very short
records; eg a tape map of a mini-disk, or a list of all 650 files
on my A disk.

A simple solution to this is MAXPRT EXEC which creates a
dummy file, determines (via variable LRECL) the maximum
space actually required, and will proportionately shorten the
length of the print-out by placing it into as many columns as
will fit on a 132-column print-out (with 5 spaces between
columns, by default).

/*                              MAXPRT
/*     Procedure to take advantage of 132 column wide paper when      */
/*      printing files with lrecl <= 63. The number of columns        */
/*    resulting will depend upon the lrecl of the longest line in     */
/*      the file and each column will be separated by a minimum       */
/*               of 5 spaces from neighboring columns.                */
/*                             ARGUMENTS:                             */
/*             FileNAME         FileTYPE         FileMODE             */
/*   Note: 5 is the DEFAULT column spacing, but may be overridden by  */
/*      specifying the desired column spacing as the 4th argument.    */
/*                                                                    */
arg fn ft fm extra
parse source . . prog .
outfl = fn prog' A'
rc = 0
signal on error
if fm = '' then signal error
'exec qstate 'fn ft fm
queue 'recfm V'
queue 'ft 'prog
queue 'fm A'
quaue 'COMMAND FILE'
'X 'fn ft fm '(NOPROF'
'l 'outfl' (NOH STACK ALL'
pull . . . . recl recs .
if recl > 65 then signal printer
if (extra = '' | datatype(extra,'W') ¬= 1) then extra = 5
cwidth = recl + extra
cols = 132 % cwidth
if recs//cols ¬= 0 then
 do
   do (cols-(recs//cols))
     'execio 1 diskw 'outfl' (STRING  '
     recs = recs+1
   end
   lines = (recs%cols)+1
   'FINIS 'outfl
 end
else lines = recs/cols
start = lines + 1
c.0 = 1
queue 'set stay on'
queue 'msgmode off'
queue 'case m r'
queue 'lrecl 132'
queue 'trunc *'
queue 'zone 1 *'
do y = 1 to (cols-1)
  z = y - 1
  c.y = cwidth+c.z
  queue ':'start
  queue 'merge 'lines' :1' c.y
end
queue 'FILE'
'x 'outfl' (WIDTH 132 NOPROF'
printer:
'print 'outfl' (LI 0 '
'exec qerase 'outfl
exit 0
error:
out_rc = rc
address cms
'execio 1 cp (STRING Q SCREEN'
pull . . . . clr hlght
'execio 0 cp (STRING SCREEN VMOUT RED NONE'
say
 say center(strip(substr(sourceline(1),3,68)),79)
say
'execio 0 cp (STRING SCREEN VMOUT YELLOW NONE'
do y = 2 to 100
 if pos('Rick Frye',sourceline(y)) > 0 then leave
 say center(strip(substr(sourceline(y),3,68)),79)
end
'execio 0 cp (STRING SCREEN VMOUT 'clr hlght
exit out_rcsay


Rick Frye
Hardboard Division
Masonite Corporation (USA)                        ) Rick Frye 1990


