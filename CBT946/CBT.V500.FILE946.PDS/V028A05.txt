 User-friendly mini-disk organisation
THE REASONS
Universities and other scientific institutions have to offer their users a wide
variety of software systems, programs, EXECs and other data.  These files
originate from various sources - software houses, other scientific institutions,
local modifications or licensed software from IBM.
How to organise the large number of files, typically in the order of several
thousands?  What can be done to help the end user easily access the software he
needs?
One way would be to put all the software systems the user population wants on a
single, large public disk, say with virtual address 31A, owned by the virtual
machine MAINT.  The user would then issue:
     "LINK MAINT 31A 31A RR"
followed by:
     "ACCESS 31A ..."
and would be able to use all of the software systems.
But what a horrible task to maintain or implement new software when several
thousand files reside on this one mini-disk!  Also, naming collisions must be
prevented and a degree of transparency achieved.
The other extreme is evident: put all the different products on different mini-
disks owned by different virtual machines.  Now maintenance for the software
support people again becomes manageable - the compiler support group services
its mini-disks, the SAS people implement their SAS mini-disks etc.  But what
about the user?  He is suddenly constrained to have at hand a sheet of paper
listing a large number of different virtual addresses and virtual machines.  And
what about the computer centre modifying mini-disk addresses?  Hundreds of users
would issue a LINK command to a special mini-disk address, maybe hidden in a
REXX procedure, making it virtually impossible to change any mini-disk address
once assigned.
Fortunately, there is a solution: the REXX procedure LINKTO in conjunction with
the LINKTO NAMES file.  In short, LINKTO NAMES contains the assignment of
products to mini-disk addresses and the LINKTO EXEC offers easy access to the
desired software product, using the LINKTO NAMES file.  Both files are the only
additional local files on the 19E (Y/S) disk owned by MAINT.  Therefore, each
user is able to use the LINKTO EXEC from the very start as he generally has a
link to the Y disk in his directory.  Issuing the command "LINKTO SAS" is all he
has to do when he wants to use the SAS system, for instance.  By means of this
powerful REXX procedure we can keep all the software products and their
different versions apart and keep the mini-disk organisation tidy.
There is an additional advantage in using the central LINKTO NAMES file: LINKTO
NAMES does contain not only the assignment of software product names to virtual
mini-disks and their users, but also offers a lot more information.  You can put
in details of product origin, software product advisors, people responsible for
maintenance, and other valuable information.  You may also state the name of an
additional REXX procedure which should be executed automatically when calling
the desired software product.  "LINKTO product-name" lets you state whether you
want the current versions of a product (default), the old one, or a new one for
test purposes.  It also creates the environment necessary to run the desired
software product.  For other useful options, see below.
THE LINKTO REXX PROCEDURE
The first design of a procedure creating a proper user environment was by H
Kaufmann at Princeton University.  R A Supper, at the Computer Center of
Stuttgart University, completely rewrote the EXEC in REXX.  The procedure was
later completely redesigned and several new features were added by K Roesler, O
Stolz and L Steinfeld of Constance University.  The new LINKTO REXX procedure as
of today comprises almost 600 lines of code.  The length of the LINKTO NAMES
file naturally depends on how many software products are to be accessed.
By showing the syntax of the LINKTO command we would like to give some idea of
the power and the functions of this procedure.
The main tasks of LINKTO are:
1    Accessing the mini-disk of another virtual machine.
2    Linking and detaching software packages by means of nicknames and creating
a proper programming environment.
Syntax:
                <  ?       <     *     >   >
   LINKTO        user      <  address  >   < ( options >
                  nickname  <  version      < ( options >

Options:
        - QUIET
        - MODE      file mode
        - STATUS    access mode
        - UNIT      address
        - PASS      password
        - DETACH
        - RELINK
The parameters signify:
y    ?                   LINKTO displays HELP information.
y    ?      *       LINKTO displays a list of all nicknames.
y    ?  nickname    LINKTO displays detailed information to this nickname.
y    User      is the owner of the mini-disk you want to access.
y    Address             virtual address of the mini-disk; default: '191'.
y    Nickname       the name of a program product such as SAS or COBOL or other
software.
y    Version             the version you want
     default:       CURRENT
                    CURRENT   current version
                    OLD  a previous version if available
                    NEW  the latest version if available, for test purposes.
Detailed information on options
y    QUIET               LINKTO displays only error messages.  If this option is
missing, then LINKTO displays:
                         -    each mini-disk access (with nicknames)
                         -    each mini-disk access planned but not done because
of performance
                         -    changed GLOBAL settings
                         -    valid FILEDEF settings if a FILEDEF was given.
y    MODE    x      File mode for the (first) mini-disk accessed.  Default: a
letter following 'G'.
y    STATUS  xx     Access mode; default: 'RR'.
y    UNIT   xxx          Virtual address for the (first) mini-disk accessed.
Default: first free address from '111' upward.
y    PASS   xxxx    Password for the access mode desired (if necessary).
y    DETACH    No more access to the software product P linked mini-disks are
detached and libraries as well as FILEDEFs removed.
y    RELINK    The mini-disks necessary for linking the product are detached and
linked again.  Valid options are taken into account.
Examples using the LINKTO-Procedure
y    Access to the PUBLIC mini-disks by:
     LINKTO PUBLIC
y    Read access to mini-disk 196 of userid GEORGE by:
     LINKTO GEORGE 196
y    Read/Write Access to mini-disk 192 of userid GEORGE with filemode C by:
     LINKTO GEORGE 192 (STATUS WR MODE C
If you use FORTRAN programs calling NAG routines, you create the proper
environment by:
     LINKTO FORTRAN
     LINKTO NAG
THE LINKTO NAMES FILE
The data needed by the LINKTO EXEC to do its job is within the LINKTO NAMES
file.  Adding a new software product or transferring software to another mini-
disk therefore means changing the LINKTO NAMES file.
To give you an idea what the LINKTO NAMES file looks like, we show here one of
its elements, namely the records necessary to call the program product 'ACRITH':
:NICK. ACRITH      :VERSION. Current
 :TYP. System
*
 :ORIGIN.       IBM: 5664-167
 :RELEASE.      1.2.0
 :INSTALLATION. 12 Nov 1985
 :RESPONSIBLE.  Garfield
 :REMARKS.      Version 1.3 Program Product Number 5664-185
 *
 :FILES.     ACRITH-Bibliothek  FORTRAN-Bibliothek
 :GLOBALS.   ACRITH-Bibliothek  FORTRAN-Bibliothek FORTRAN-Loadlib
*
:NICK. ACRITH-Bibliothek
 :TYP.   Datei
 :NAME.  ACRITH3 TXTLIB
 :MDISK. _NUM 532
The LINKTO NAMES file may also contain entries of type 'SUBSYSTEM', 'FILEDEFS'
and 'EXEC'.  'SUBSYSTEM' makes it possible to automatically access additional
software products.  REXX statements listed following 'EXEC' are interpreted.
Both LINKTO EXEC and LINKTO NAMES files cannot be shown here because of the
length of their code, but readers at scientific institutions participating at
the European Academic Research Network (EARN) may contact one of the designers
by sending us a note (via MAINT at DKNKURZ1), or at Hegaublick 2, D-7750
Konstanz 19, West Germany.
R E Muchsel
Computer Centre University of Constance (W Germany)    ) Xephon 1988
















































