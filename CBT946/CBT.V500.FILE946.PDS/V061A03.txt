Identifying all mini-disks in the CP directory

Over the years, we have had many occasions when we wanted
to examine a large subset of the mini-disks in the CP source
directory, eg every 191 disk in the system.  While it sounds
like a simple matter to read the directory, the task is
complicated by the fact that the MDISK statement does not
contain the user-id.  To get the user-id, you must locate the
preceding USER statement.  To facilitate this process, we have
written the following EXEC which reads the CP source
directory (USER DIRECT) and creates another file containing
one record for each MDISK statement including the user-id.  It
is then a simple matter for any ad hoc EXEC to read this file.
A side benefit is that the resulting file is arranged in nice, neat
columns for easy reading.

The EXEC examines the CP source directory and creates a file
named DIRMDISK LOG which contains the user-id, cuu, and
MDISK passwords of each mini-disk.

It is invoked by entering:

      DIRMDISK <fn <ft <fm>>>

Where:

o      fn is the filename of the source directory.  Default is USER.

o      ft is the filetype of the source directory.  Default is DIRECT.

o      fm is the filemode of the source directory.  Default is *.

/*   */
address COMMAND
arg phase .                                            /*  trial run  */
if phase = 'PHASE2' then
   signal phase_2
/*                  Phase 1 - Invoked by the User                     */
arg fn ft fm .
if fn = '' then fn = 'USER'                              /*  default  */
if ft = '' then ft = 'DIRECT'
if fm = '' then fm = '*'
fileid = fn ft fm
say 'Now loading' fileid
queue 'CMS EXEC DIRMDISK PHASE2'
/*  The use of WIDTH 72 Saves storage and prevents columns 73-80 from
    being taken as (omitted) passwords                                */
XEDIT fileid '(NOPROF WIDTH 72'
DROPBUF
exit rc
/*                   Phase 2 - Running Under XEDIT                    */
phase_2:
say 'Now examining the directory'
mdisks_found = 0
log_fileid   = 'DIRMDISK LOG A1'
ERASE log_fileid
diskw = 'EXECIO 1 DISKW' log_fileid '0 F 74 (STRING'
diskw ' Userid  CUU Type     Start  Length Volser Mode Read PW  Write PW MultPW'
diskw '-------- --- ------ ------- ------- ------ ---- -------- -------- ------'
address XEDIT
SET 'MSGMODE OFF'     /*  Avoid "DMSXDC546E Target not found" with the
                                                 last LOCATE command  */
SET 'VERIFY  OFF'    /*  Don't list the entire directory via DOWN
                                        statements when disconnected  */
TOP
call time 'R'
/*  Mainline processing                                               */
do forever                                             /*  until EOF  */
   LOCATE '/USER/ | /MDISK/ EXTRACT /CURLINE/'
         /*  probably (but not necessarily) one of the desired stmts  */
   if rc ¬= 0 then                       /*  2 I presume (not found)  */
      leave
   parse var curline.3 w1 w2 ,
              /*  Careful: We don't know what type of record this is  */
      device_type start_cyl length_cyl volser mode pwr pww pwm .
   select
      when w1 = 'USER' then do
         userid = w2
         iterate     /*  OK so far - Now look for this user's MDISKs  */
         end
      when w1 = 'MDISK' then
         cuu = w2
      otherwise
         iterate                     /*  Ignore all other statements  */
   end   /*  select  */
   /*  Record the vital statistics for this MDISK                     */
   mdisks_found = mdisks_found + 1
   diskw left(userid,8) ,
      left(cuu,3) left(device_type,6) right(start_cyl+0,7) ,
      right(length_cyl+0,7) left(volser,6)'  'left(mode,3) ,
      left(pwr,8) left(pww,8) left(pwm,8)
   if time('E') > 60 then do
     say time() right(mdisks_found,6) 'MDISKs have been identified so' ,
         'far thru userid' userid cuu
      call time 'R'
      end
end
if rc ¬= 2 then
   say '***** Unexpected return code' rc 'from LOCATE *****'
/*  End of Phase 2                                                    */
address COMMAND 'FINIS' log_fileid
QQUIT 0
say 'The directory contains' mdisks_found 'MDISKs'
exit

Dave Fraatz
Specialist
3M (USA)

