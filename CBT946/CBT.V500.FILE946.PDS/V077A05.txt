CMS virtual storage fragmentation map

This program is used as a tool to show the CMS virtual
machine storage fragmentation. Using the command
DMSFREE, it lists all the CMS free storage available for
allocation. It runs under VM/XA Release 2.1.

Note: this program has been written for CMS running in 370-
mode virtual machines. The libraries required are DMSGPI
MACLIB and OSMACRO MACLIB.

Figures 1 and 2 show the FREECMS output information with
and without the detail option.

FREECMS  START    0
         STM      R14,R12,12(R13)       Save registers
         LR       R12,R15               R12 will be the base register
         USING    FREECMS,R12           Tell it to Assembler
         LA       R15,SAVECMS           Save area
         ST       R15,8(R13)              .. chain for
         ST       R13,4(R15)              .. further
         LR       R13,R15                 .. calls
*/* Parameter checking
         XC       FLAGS,FLAGS           Clear flags
         CLC      08(08,R1),=CL8'DET'   Does user ask for detail?
         BNE      FRE001                No, let's proceed
         OI       FLAGS,DET             Yes, we'll remember it
*/* Clear work area
FRE001   EQU      *
         LA       R3,STORINFO           Work area begins here
         LA       R4,30                   .. and has 30 positions
*/*                                       .. I think it's enough
FRE002   EQU      *
         XC       00(08,R3),00(R3)      Wipe this position
         LA       R3,08(R3)               .. and go to next
         BCT      R4,FRE002               .. 30 times
*/* Start of processing
         XC       TOTAL,TOTAL           Clear acum buffer
         LA       R3,STORINFO           Point to work area
         LA       R4,30                 Maximum detail count
*/* Here we'll try to get a slice of the virtual storage.
*/* We'll try to get it all except for the largest amount of storage.
*/* Then we'll divide this amount by two and the process begins again,
*/* until we hold the entire storage.
FRE005   EQU      *
         L        R2,MAXVALUE           Get my maximum size (100Mb)
         LR       R5,R2                 Save. We'll make the operations
*/*                                     with register 5.
FRE010   EQU      *
         LR       R0,R2                 Try to get the largest area
         DMSFREE  DWORDS=(0),AREA=HIGH,MSG=NO,ERR=FRE020
         ST       R1,00(R3)             This area is now held
         B        FRE030                Let's go to next largest area
*/* We didn't get the storage. Now we'll try to get the amount of
*/* storage divided by 2.
FRE020   EQU      *
         LTR      R5,R5                 Have we finished?
         BNZ      FRE025                no, let's divide again
         LA       R5,3                  Yes, set to the end
FRE025   EQU      *
         SRL      R5,1                  Decrement divided by 2
         SR       R2,R5                 Reducing our request
         BL       DMSFRET               R2 is negative, it's the end
         B        FRE010                We'll try again
FRE030   EQU      *
         CL       R5,=F'1'              Can we divide again?
         BE       DISPLAY               no, we finished
         LTR      R5,R5                 Have we any increment?
         BZ       DISPLAY               no, we finished
         DMSFRET  DWORDS=(0),LOC=(1)    yes, let's try again
         SLL      R5,1                    .. until
         AR       R2,R5                   .. the last doubleword
         B        FRE010
*/* We finished this step, let's show what we've got and terminate.
DISPLAY  EQU      *
         L        R1,TOTAL              Add last amount of storage size
         AR       R1,R2                   .. to our
         ST       R1,TOTAL                .. total
DSP005   EQU      *
         LR       R9,R2                 Get raw storage size,
         MH       R9,=H'8'                .. convert to bytes
         LR       R1,R9                   .. and keep...
         LR       R6,R9                 Multiple
         CL       R6,A(1024*1024)         .. of megabytes?
         BNH      DSP011                  .. no, show kilobytes
         SRL      R1,20                   .. yes, truncate to megabytes
         B        DSP012
DSP011   EQU      *
         LA       R1,0                  Here, we have zero megabytes
DSP012   EQU      *
         CVD      R1,DOUBLE             Convert and edit the value
         OI       DOUBLE+07,X'0F'
         MVC      WORK+00(05),=5X'2020202120'
         ED       WORK+00(05),DOUBLE+05 In Megabytes
         MVC      WORK+05(12),=CL12' Megabyte(s)'
         SLL      R1,20                 Let's take out the megabytes
         SR       R6,R1                   .. and go to
         LR       R1,R6                   .. check the kilobytes
         CL       R6,=A(1024)           MULTIPLE OF KILOBYTES?
         BNH      DSP021                  .. no, show bytes
         SRL      R1,10                   .. yes truncate to kilobytes
         B        DSP022
DSP021   EQU      *
         LA       R1,0                  Here, we have zero kilobytes
DSP022   EQU      *
         CVD      R1,DOUBLE             Convert and edit the value
         OI       DOUBLE+07,X'0F'
         MVC      WORK+18(05),=5X'2020202120'
         ED       WORK+18(05),DOUBLE+05 In kilobytes
         MVC      WORK+23(12),=CL12' Kilobyte(s)'
         SLL      R1,10                 Let's take out the kilobytes
         SR       R6,R1                   .. and go to
         LR       R1,R6                   .. check the bytes
         CVD      R1,DOUBLE             Convert and edit the value
         OI       DOUBLE+07,X'0F'
         MVC      WORK+36(05),=5X'2020202120'
         ED       WORK+36(05),DOUBLE+05 In bytes
         MVC      WORK+41(12),=CL12' Byte(s)'
         TM       FLAGS,TOTL            This is the summary line?
         BO       DSP035                Yes, we cannot put the location
         MVC      WORK+55(02),=CL2'at'  No, we can indicate where
         UNPK     WORK+58(09),00(05,R3)   .. we got
         TR       WORK+58(09),UNPKTAB-240 .. the storage area
         MVI      WORK+66,C' '            .. and tell
         TR       WORK(80),TRTAB          .. it to
         TM       FLAGS,DET               .. the user
         BNO      DSP030                  .. if he asked for
         WRTERM   WORK,80                 .. the detailed information
DSP030   EQU      *
         MVI      WORK,X'40'            Cleaning
         MVC      WORK+01(79),WORK        .. the output buffer
         ST       R2,04(R3)               .. and saving
         LA       R3,08(R3)               .. the information for
         BCT      R4,FRE005               .. DMSFRET
         B        DMSFRET
DSP035   EQU      *
         TR       WORK(80),TRTAB        Cleaning bytes from edit mask
         WRTERM   WORK,80               And showing the detail
DMSFRET  EQU      *
         TM       FLAGS,TOTL            Now we finished our report
         BO       FRT005                And
         WRTERM   'Free core available:'  .. we will show the
         OI       FLAGS,TOTL              .. summary line to
         L        R2,TOTAL                .. the user
         B        DSP005
FRT005   EQU      *
         LA       R3,STORINFO           Here we'll release all storage
         LA       R4,30                   .. we held
FRT010   EQU      *
         L        R1,00(R3)             All the information
         LTR      R1,R1                   .. we need to do this
         BZ       RETURN                  .. in the work area
         L        R0,04(R3)               ..
         DMSFRET  DWORDS=(0),LOC=(1)      ..
         LA       R3,08(R3)               ..
         BCT      R4,FRT010               ..
*/* This is the end of our program
RETURN   EQU      *
         L        R13,SAVECMS+04
         RETURN   (14,12),RC=0
         EJECT
*/* Literals
         LTORG
         EJECT
*/* Constants and Storage areas
UNPKTAB  DC       C'0123456789ABCDEF'
TRTAB    DC       256AL1(*-TRTAB)
         ORG      TRTAB+X'20'
         DC       X'40'
         ORG
FLAGS    DS       X                     Running flags
DET      EQU      B'00000010'           Detail report flag
TOTL     EQU      B'00000100'           Summary line flag
WORK     DC       CL80' '
TOTAL    DS       F
MAXVALUE DC       A(1024*1024*16)       Equal to 16Mbytes
DOUBLE   DS       D
SAVECMS  DS       12D
STORINFO DS       30D
         REGEQU
         END

Roberto Baronas
Software Analyst
Philips do Brasil Ltda (Brazil)

