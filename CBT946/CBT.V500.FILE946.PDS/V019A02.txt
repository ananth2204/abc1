 REXDUMP
I have found on numerous occasions a need to look at all variables defined in
EXECs, and their values, without having to introduce a lot of 'SAY' statements.
I have written one program in Assembler which uses the REXX shared variable
interface to type out on the terminal the variables with their names and current
values.  I have found this of great use in large EXECs.
*   FUNCTION     :  THIS PROGRAM TYPES OUT ON THE TERMINAL ALL THE   *
*                   VARIABLES DECLARED IN THE EXEC WITH THEIR VALUES.*
*                                                                    *
*   ENVIRONMENT  :  CMS VM/SP, REXX INTERPRETER                      *
REXDUMP  CSECT
R0       EQU   0
R1       EQU   1
LINECNT  EQU   3
R14      EQU   14
R15      EQU   15
         USING *,12             ESTABLISH 12 AS BASE REGISTER
         LR    12,15
         STM   14,12,12(13)
         ST    13,SAVEAREA+4    SAVE OPERATING SYSTEMS REGISTERS
         LA    10,SAVEAREA      ACCORDING TO STANDARD CONVENTIONS.
         ST    10,8(13)
         LA    13,SAVEAREA
         L     LINECNT,=F'21'   SET THE LINE COUNTER TO MAX
LOOPVAR  BAL   R14,CHKVAR       GET AND PRINT VARIABLES.
         CLI   NOMORE,C'Y'      WAS THAT THE LAST VARIABLE ?
         BNE   LOOPVAR          NO,SO GET MORE VARIABLES
ENDPROG  L     13,SAVEAREA+4     RESTORE SAVE AREAS OF OPSYS
         LM    14,12,12(13)      RESTORE OP SYSTEMS REGISTERS
         BR    14                END THE PROGRAM
CHKVAR   ST    R14,SAV14               STORE RETURN ADDRESS
         MVI   NOMORE,C'Y'             SET NOMORE VARIABLES FLAG
         MVI   NAMBUFF,C' '            CLEAR OUT VARIABLE'S AREAS
         MVC   NAMBUFF+1(29),NAMBUFF
         MVI   VALBUFF,C' '
         MVC   VALBUFF+1(255),VALBUFF
         LA    R1,PLIST                SET UP THE EPLIST
         ST    R1,APLIST
         LA    R1,SHVAREA              SET UP THE SHARED VARIABLE
         ST    R1,ASHVBLK              INTERFACE AREA
         MVC   SHVUSER,=F'30'
         MVI   SHVCODE,C'N'
         MVC   SHVBUFL,=F'256'
         MVC   SHVNAMA,=A(NAMBUFF)
         MVC   SHVVALA,=A(VALBUFF)
         LA    R1,PLIST                POINT R1 TO PLIST
         ICM   R1,B'1000',=X'02'       INDICATE SUBCOMMAND
         LA    R0,EPLIST
         SVC   202
         DC    AL4(1)
         LTR   15,15             -VE RETURN CODE MEANS, THE PROG HAS
         BM    BADENV            NOT BEEN INVOKED FROM AN EXEC.
         BNZ   EXPROC1
         TM    SHVRET,X'02'      IS THIS THE LAST VARIABLE ?
         BO    LASTVAR
         MVI   NOMORE,C'N'       NO. SO SET NOMORE TO 'NO'.
LASTVAR  C     LINECNT,=F'19'    HAVE WE WRITTEN 19 LINES ?
         BL    OKPRINT           NO.
         WRTERM   'HIT ENTER...'
         RDTERM   JUNK           WAIT FOR ENTER
NOREAD   LA    R1,CLRPLIST
         SVC   202               ISSUE A CLEAR OF THE SCREEN
         DC    AL4(1)
         BAL   R14,PRTHEAD       PRINT HEADING.
OKPRINT  A     LINECNT,=F'1'     BUMP UP LINE COUNTER
         WRTERM   PRLINE,72      PRINT VARIABLE DETAILS
          B     EXPROC1           EXIT THE PROCEDURE
BADENV   WRTERM  'THIS MUST BE CALLED FROM AN EXEC'
EXPROC1  L     R14,SAV14
         BR    14
         DS    0F                STORAGE FOR ROUTINE CHKVAR
SAV14    DS    F
CLRPLIST DC    CL8'CLRSCRN'
         DC    8X'FF'
PRTHEAD  WRTERM PRHEAD,72
         L     LINECNT,=F'0'
         BR    14
         DS    0F
PRHEAD   DS    0CL72
         DC    C'NAME OF VARIABLE             '
         DC    C'VALUE OF VARIABLE '
         DC    CL(72(*-PRHEAD))' '
**********************************************************************
*   MAIN PROGRAMS SAVE AREA                                          *
**********************************************************************
         DS    0F
SAVEAREA DS    9D
SHVAREA  EQU   *
SHVNEXT  DS    A             NEXT CHAIN POINTER
SHVUSER  DS    F             LENGTH OF NAME BUFFER             SENT IN
SHVCODE  DS    CL1           CODE TO FETCH NEXT VARIABLE
SHVRET   DS    XL1           RETURN CODE FLAGS
         DC    H'0'          RESERVED
SHVBUFL  DS    F             LENGTH OF FETCH VALUE BUFFER       SENT IN
SHVNAMA  DS    A             ADDRESS OF VARIABLE NAME           SENT IN
SHVNAML  DS    F             LENGTH OF VARIABLE NAME            RETURNED
SHVVALA  DS    A             ADDRESS OF VARIABLE VALUE BUFFER   SENT IN
SHVVALL  DS    F             LENGTH OF VARIABLE VALUE           RETURNED
**********************************************************************
*   DEFINE THE PLISTS USED IN THE PROGRAM                            *
**********************************************************************
PLIST    DC    CL8'EXECCOMM'
EPLIST   EQU   *
APLIST   DS    A
         DC    F'0'             BEGIN ARGUMENTS
         DC    F'0'             END ARGUMENTS
ASHVBLK  DS    A                SHARED VARIABLE BLOCK
**********************************************************************
*   WORKING STORAGE VARIABLES                                        *
**********************************************************************
NOMORE   DS    C
JUNK     DS    C
**********************************************************************
*   RETURNED VALUES FROM THE EXECCOMM INTERFACE.                     *
**********************************************************************
PRLINE   DS    0CL72
NAMBUFF  DS    CL30
VALBUFF  DS    CL256
         END   REXDUMP
CS Chary
Consultant
Federation Insurance Ltd (Australia)    ) Xephon 1988










