 Archiver
My Archiver facility will enable a CMS user to store CMS files on an off-line
disk for extended periods of time.  While there are commercial packages
available that will perform this function and more, I have found that this
facility has been invaluable in smaller VM/SP shops.  Another advantage is that
the facility is simple and problems can easily be repaired by someone with
knowledge of CMS EXEC writing.
The facility makes use of time-stamped files in order to handle multiple CMS
files with the same name.  These files have filenames and filetypes that begin
with two hash signs (##) and the remaining six-characters names are the YYMMDD
for the filename and HHMMSS for the filetype.  The files are compressed using
the COPYFILE PACK facility, and are unpacked upon retrieval.  In addition to the
time-stamped compressed data files, a control file for each named data file is
contained on the archive disk.  This file contains a list of the time-stamped
files, and the comments stored with the files, when archived.
Most of the rest of the facility is explained below.  However, there are a few
other areas that should be discussed.  We are currently using half of a 3350
disk pack (270 cylinders) for the archive facility, which contains about three
years' worth of information.  There are about 10 000 files on the 19F archive
disk and it is about 65% full.  We have been using the archive facility for
automatic storage of all system EXECs (jobstreams) for the same period of time,
and have found that the space allocated has been more than sufficient.
Occasionally I will go in and back up the files on the disk with a CMS tape
dummy, and will delete the older files on the archive disk.  With the amount of
disk space allocated, this has to be done about once a year.  Additional disk
space could be allocated to the archive disk to almost eliminate this yearly
purging of files, or an automatic deletion of the files could also be written as
part of the facility.
The #RECORD EXEC was installed as part of the EXECs to record the files sent to
the Archive facility in the user's NETLOG file.  This was because the DISK DUMP
facility would not do this and the SENDFILE facility would not pass the TAG
text.  This portion of the facility can be deleted without affecting the
capabilities of the facility.
ARCHIVE FACILITY COMPONENT LIST
y    ARCHIVE PROFILE - profile EXEC for the Archiver disconnected service
machine.  Must be renamed to profile EXEC.
y    ARCHIVE EXEC - main command EXEC, must be on a public mini-disk and
accessed by all CMS users that use the facility.
y    #ARCDISP EXEC - called by Archive EXEC to send a dummy file to the Archiver
service machine to display the control files.  Must be on a public mini-disk.
y    #ARCDRIV EXEC - main driver EXEC for the Archiver facility.  This EXEC
processes the files sent to the Archiver service machine.  This EXEC can be
placed on Archiver's 191 (A) disk.
y    #ARCPROF EXEC - profile EXEC for the Archiver service machine.  This EXEC
checks for files in the reader and will invoke the driver EXEC.  It will also
check the return code from the driver EXEC and will terminate the facility on a
severe error.  If an error is detected the file causing the error will be sent
back to the requestor.
y    #ARCRETR EXEC - called by Archive EXEC to send a dummy file to the Archiver
service machine to retrieve a stored file from the archive disk.  Must be on a
public mini-disk.
y    #ARCSTOR EXEC - called by Archive EXEC to send a dummy file to the Archiver
service machine to display the archive disk statistics.  Must be on a public
mini-disk.
y    #ARCSTAT EXEC - called by Archive EXEC to send a CMS file to the Archiver
service machine for storage on the archive disk.  Must be on a public mini-disk.
y    #RECORD EXEC - called by Archive EXECs to record file transfers in the CMS
user's NETLOG file.  Must be on a public mini-disk.
ARCHIVE FACILITY COMMAND FORMAT
     ARCHIVE   DISPLAY    <FILENAME> <FILETYPE>
          RETRIEVE
          STATUS
          STORE
where:
y    DISPLAY instructs the Archiver disconnected service machine to produce a
list of all the members contained on the archive disk.  The list will then be
 sent to the user's reader with a name of archive list.  This list will be in
disk dump format and can be read in with the receive command.  If filename and
filetype parameters are provided, the Archiver disconnected service machine will
send you the control file information for the named file.  This file contains
the time stamp information, version numbers and comments stored with the files.
The file will be returned to your reader in disk dump format and can be read in
using the receive command.
y    RETRIEVE instructs the Archiver disconnected service machine to send you
the named file.  You will be prompted for the version number of the file to be
retrieved.  Version 1 is the oldest file in the archive.  An enter without a
version number will cause the newest file to be retrieved.  Version numbers can
be found by first using the display command and interpreting the control file.
The file will be returned to the requestor reader in disk dump format, which can
be read in using the receive command.
y    STATUS instructs the Archiver disconnected service machine to create and
send a file showing the library file status.  The file will be named library
status and will be in disk dump format, which will be read in using the receive
command.  The filename and filetype parameters are not required with this
command.
y    STORE instructs the Archiver disconnected service machine to store the
named file on the archive disk.  The named file must reside on the user's A
disk, which must also be a read/write mini-disk.  You will be prompted to enter
a comment to be stored with the file control information.
Other considerations
The Archiver disconnected service machine will return a file to the user in the
event of an error.
Files on other disks (ie E disk) can be sent to the library facility, but the
disk must first be accessed as your A disk.
The Archiver disconnected service machine will stop when an integrity error has
been detected.  No other requests will be processed until the error is
rectified.
Most of the error messages received from the archiver machine are self
explanatory.
LIBRARY FACILITY COMMAND FORMAT
     ARCHIVE   DISPLAY    <FILENAME> <FILETYPE>
          RETRIEVE
          STATUS
          STORE

where:
y    DISPLAY instructs the Archiver disconnected service machine to produce a
list of all the members contained on the archive disk.  The list will then be
sent to the user's reader with a name of archive list.  This list will be in
disk dump format and can be read in with the receive command.
     If filename and filetype parameters are provided, the Archiver disconnected
service machine will send you the control file information for the named file.
This file contains the time stamp information, version numbers and the comments
stored with the files.  The file will be returned to your reader in disk dump
format and can be read in using the receive command.
y    RETRIEVE instructs the Archiver disconnected service machine to send you
the named file.  You will be prompted for the version number of the file to be
retrieved.  Version 1 is the oldest file in the archive.  An enter without a
version number will cause the newest file to be retrieved.  Version numbers can
be found by first using the display command and interpreting the control file.
The file will be returned to the requestor reader in disk dump format, which can
be read in using the receive command.
y    STATUS instructs the Archiver disconnected service machine to create and
send a file showing the library file status.  The file will be named library
status and will be in disk dump format, which will be read in using the receive
command.  The filename and filetype parameters are not required with this
command.
y    STORE instructs the Archiver disconnected service machine to store the
named file on the archive disk.  The named file must reside on the user's A
disk, which must also be a read/write mini-disk.  You will be prompted to enter
a comment to be stored with the file control information.
Other considerations
 The Archiver disconnected service machine will return a file to the user in the
event of an error.
Files on other disks (ie E disk) can be sent to the library facility, but the
disk must first be accessed as your A disk.
The Archiver disconnected service machine will stop when an integrity error has
been detected.  No other requests will be processed until the error is
rectified.
Most of the error messages received from the Archiver machine are self
explanatory.
ARCHIVER DIRECT
USER ARCHIVER ARCHIVER 2M 4M G
  ACCOUNT ARCHIVER SYSPROG
  IPL CMS PARM AUTOCR
  CONSOLE 009 3215
  SPOOL   00C 2540 READER *
  SPOOL   00D 2540 PUNCH  A
  SPOOL   00E 1403        A
  LINK MAINT    190 190 RR
  LINK MAINT    19E 19E RR
  MDISK 19F 3350 XXX YYY ZZZZZZ MR

ARCHIVE PROFILE
         &TRACE
* | PROFILE - EXEC TO SET UP A CMS ENVIRONMENT FOR DEVELOPMENT USE. |
         ACCESS 19F X
         EXEC #DSKPROF
         &EXIT

ARCHIVE EXEC
         &TRACE
* | ARCHIVE  - EXEC TO SUBMIT THE ARCHIVE REQUESTS TO THE ARCHIVER  |
* |     DISCONNECTED SERVICE MACHINE.                               |
         &IF &INDEX LT 1 &GOTO -TELL
         &INS = &1
         &FNM = &2
         &FTY = &3
         &FMD = X
         &INS = &LEFT OF &INS 3
         &IF .&INS = .DIS &GOTO -DISPLAY_REQUEST
         &IF .&INS = .RET &GOTO -RETRIEVE_REQUEST
         &IF .&INS = .STA &GOTO -STATUS_REQUEST
         &IF .&INS = .STO &GOTO -STORE_REQUEST
         &GOTO -TELL
-DISPLAY_REQUEST
         &IF .&FNM = . &FNM = &STRING OF *
         &IF .&FTY = . &FTY = &STRING OF *
         EXEC #ARCDISP &FNM &FTY &FMD
         &EXIT &RETCODE
-RETRIEVE_REQUEST
         EXEC #ARCRETR &FNM &FTY &FMD
         &EXIT &RETCODE
-STATUS_REQUEST
         EXEC #ARCSTAT * * &FMD
         &EXIT &RETCODE
-STORE_REQUEST
         EXEC #ARCSTOR &FNM &FTY &FMD
         &EXIT &RETCODE
-TELL    CLRSCRN
         &BEGTYPE -END
| ARCHIVE - EXEC TO SUBMIT ARCHIVE FILE REQUESTS TO THE ARCHIVER    |
|           DISCONNECTED SERVICE MACHINE.                           |
|           REQUESTS WILL BE DIRECTED TO THE ARCHIVE DISK.          |
| CORRECT FORM IS:                                                  |
|       ARCHIVE COMMAND FILENAME FILETYPE                           |
|       COMMAND CAN TAKE ANY OF THE FOLLOWING FORMS:                |
|  DISPLAY  - DISPLAY A LIST OF FILES CONTAINED ON THE ARCHIVE DISK.|
 |  THE FILE RETURNED WILL BE NAMED ARCHIVE LIST.  IF A FILE         |
|  IS NAMED THE DIRECTORY OF THAT FILE WILL BE RETURNED.            |
|  RETRIEVE - RETRIEVE A FILE FROM THE ARCHIVE DISK AND PLACE       |
|                    THE NAMED FILE IN THE VIRTUAL READER.          |
| STATUS   - DISPLAY THE STATUS OF THE ARCHIVE DISK.  THE FILE      |
|            RETURNED WILL BE NAMED ARCHIVE STATUS.                 |
| STORE    - STORE THE NAMED FILE ON THE ARCHIVE DISK.  THE         |
|            FILE MUST BE ON THE A (191) DISK TO BE STORED.         |
|            STATUS COMMAND DOES NOT REQUIRE A FILE TO BE NAMED.    |
-END
         &EXIT 100

#ARCDISP EXEC
         &TRACE
* | #ARCDISP - EXEC TO CREATE AND SEND DUMMY FILE TO ARCHIVER TO   |
* |     DISPLAY ALL FILES OR INDIVIDUAL FILES ON THE LIBRARY DISK. |
         &FNM = & 1
         &FTY = &2
         &FMD = &3
         &XNM = &CONCAT OF &FMD ARCDISP
         ERASE &XNM CMSUT1 A
         &STACK &XNM &FNM &FTY &FMD
         EXECIO 1 DISKW &XNM CMSUT1 A 0
         CP SPOOL 00D CONT TO ARCHIVER NOHOLD
         CP TAG DEV D &XNM &FNM &FTY &FMD
         DISK DUMP &XNM CMSUT1 A
         CP SPOOL 00D NOCONT NOHOLD
         CP CLOSE 00D
         CP SPOOL 00D OFF
         CP TAG DEV D
         ERASE &XNM CMSUT1 A
         EXEC #RECORD &XNM &FNM &FTY &FMD ARCHIVER OCIS
         &EXIT

#ARCDRIV EXEC
         &TRACE ALL
* |#ARCDRIV - DRIVER EXEC TO PROCESS ARCHIVER ARCHIVE DISK REQUESTS.|
   &USR = &1
   &SID = &2
   &XNM = &3
   &FNM = &4
   &FTY = &5
   &FMD = &6
   &CMD = &RIGHT OF &XNM 4
   &IF .&CMD = .DISP &GOTO -DISPLAY_REQUEST
   &IF .&CMD = .RETR &GOTO -RETRIEVE_REQUEST
   &IF .&CMD = .STAT &GOTO -STATUS_REQUEST
   &IF .&CMD = .STOR &GOTO -STORE_REQUEST
   CP MSG &USR IMPROPER USER OF #ARCDRIV EXEC - INVALID COMMAND NAME.
   DP TRANSFER RDR &SID TO &USR
   &EXIT
* | PROCESS DISPLAY REQUEST                                         |
-DISPLAY_REQUEST
         ERASE ARCHIVE LIST A
         &IF &FNM NE * &GOTO -DISPLAY_FILE_REQUEST
         COPY ####ARCH CONTROL X ARCHIVE LIST A
         CP SPOOL 00D CONT TO &USR NOHOLD
         DISK DUMP ARCHIVE LIST A
         CP SPOOL 00D NOCONT NOHOLD
         CP CLOSE 00D
         CP SPOOL 00D OFF
         CP MSG &USR FILE < ARCHIVE LIST > HAS
                BEEN SENT TO YOUR READER QUEUE.
         CP PURGE RDR &SID
         ERASE ARCHIVE LIST A
         EXEC #RECORD &XNM ARCHIVE LIST X &USR OCIS
          &EXIT 000
* | PROCESS DISPLAY FILE REQUEST                                    |
-DISPLAY_FILE_REQUEST
         STATE &FNM &FTY X
         &IF &RETCODE NE 0 &GOTO -DISPLAY_FILE_NOT_FOUND
         COPYFILE &FNM &FTY X ARCHIVE LIST A
         CP SPOOL 00D CONT TO &USR NOHOLD
         DISK DUMP ARCHIVE LIST A
         CP SPOOL 00D NOCONT NOHOLD
         CP CLOSE 00D
         CP SPOOL 00D OFF
         CP MSG &USR FILE < ARCHIVE LIST > HAS
                BEEN SENT TO YOUR READER QUEUE.
         CP PURGE RDR &SID
         ERASE ARCHIVE LIST A
         EXEC #RECORD &XNM ARCHIVE LIST X &USR OCIS
         &EXIT 000
-DISPLAY_FILE_NOT_FOUND
        CP MSG &USR FILE < &FNM &FTY > WAS NOT FOUND ON 19E (X) DISK.
        CP PURGE RDR &SID
        &EXIT 004
* | PROCESS RETRIEVE REQUEST                                        |
-RETRIEVE_REQUEST
         &VRS = &7
         STATE &FNM &FTY X
         &IF &RETCODE NE 0 &GOTO -RETRIEVE_FILE_NOT_FOUND
         EXECI0 * DISKR &FNM &FTY X 0 (FINIS
         SENTRIES
         &IF &VRS = 0 &VRS = &RETCODE
         &IF &VRS GT &RETCODE &GOTO -RETRIEVE_VERSION_ERROR
         &COUNT = 0
         ERASE &FNM &FTY A
-RETRIEVE_GET_NEXT_RECORD
         &COUNT = &COUNT + 1
         &READ VARS * &NNM &NTY &FLG
         &IF &COUNT LT &VRS &GOTO -RETRIEVE_GET_NEXT_RECORD
         &IF .&FLG = .TAPE -RETRIEVE_FILE_ON_TAPE
         COPYFILE &NNM &NTY X &FNM &FTY A (UNPACK
         CP SPOOL 00D CONT TO &USR NOHOLD
         DISK DUMP &FNM &FTY A
         CP SPOOL 00D NOCONT NOHOLD
         CP CLOSE 00D
         CP SPOOL 00D OFF
         CP MSG &USR FILE < &FNM &FTY > HAS
                BEEN SENT TO YOUR READER QUEUE.
         CP PURGE RDR &SID
         ERASE &FNM &FTY A
         EXEC #RECORD &XNM &FNM &FTY X &USR OCIS
         &EXIT 000
-RETRIEVE_FILE_NOT_FOUND
         CP MSG &USR FILE < &FNM &FTY > WAS
                NOT FOUND ON 19E (X) DISK.
         CP PURGE RDR &SID
         &EXIT 004
-RETRIEVE_VERSION_ERROR
         CP MSG &USR FILE < &FNM &FTY > VERS #&VRS
              WAS NOT FOUND ON 19E (X) DISK.
         CP PURGE RDR &SID
         &EXIT 004
-RETRIEVE_FILE_ON_TAPE
         CP MSG &USR FILE < &FNM &FTY > VERS #&VRS IS ON BACKUP TAPE.
         CP PURGE RDR &SID
         &EXIT 004
* | PROCESS STATUS REQUEST                                         |
-STATUS_REQUEST
         ERASE ARCHIVE STATUS A
          QUERY DISK X (STACK
         EXECIO 2 DISKW ARCHIVE STATUS A 0 (FINIS
         CP SPOOL 00D CONT TO &USR NOHOLD
         DISK DUMP ARCHIVE STATUS A
         CP SPOOL 00D NOCONT NOHOLD
         CP CLOSE 00D
         CP SPOOL 00D OFF
         CP MSG &USR FILE < ARCHIVE STATUS > HAS
                BEEN SENT TO YOUR READER QUEUE.
         CP PURGE RDR &SID
         ERASE ARCHIVE STATUS A
         EXEC #RECORD &XNM ARCHIVE STATUS X &USR OCIS
         &EXIT 000
* | PROCESS STORE REQUEST                                           |
-STORE_REQUEST
         & = &LOCATION OF ( &ARGSTRING
         & = & + 2
         &COM = &PIECE OF &ARGSTRING & *
         EXECIO 1 CP (LIFO STRING QUERY TIME
         &READ VARS * * &TIME * * &DATE
         DESBUF
         &DMM = &PIECE OF &DATE 1 2
         &DDD = &PIECE OF &DATE 4 2
         &DYY = &PIECE OF &DATE 7 2
         &THH = &PIECE OF &TIME 1 2
         &TMM = &PIECE OF &TIME 4 2
         &TSS = &PIECE OF &TIME 7 2
         &DAT = &CONCAT OF ## &DYY &DMM &DDD
         &TIM = &CONCAT OF ## &THH &TMM &TSS
         DISK LOAD
         &IF &RETCODE NE 0 &GOTO -STORE_DISK_LOAD_ERROR
         COPYFILE &FNM &FTY A &DAT &TIM X (PACK
         &IF &RETCODE NE 0 &GOTO -STORE_COPYFILE_ERROR
         STATE &FNM &FTY X
         &IF &RETCODE EQ 0 &GOTO -STORE_BYPASS_HEADER
         &LNM = &LEFT OF &FNM 8
         &LTY = &LEFT OF &FTY 8
         &STACK &LNM &LTY X1
         EXECIO 1 DISKW ####ARCH CONTROL X 0 F 120 (FINIS
-STORE_BYPASS_HEADER
         &USR = &LEFT OF &USR 8
         DESBUF
         EXECIO * DISKR &FNM &FTY X 0 (FINIS
         SENTRIES
         &VRS = &RETCODE + 1
         DESBUF
         &VRS = &RIGHT OF &VRS 3
         &STACK &VRS &DAT &TIM DISK | &USR | &COM
         EXECIO 1 DISKW &FNM &FTY X 0 F 120 (FINIS
         CP MSG &USR FILE < &FNM &FTY > SUCCESSFULLY
                STORED ON 19E (X) DISK.
         ERASE &FNM &FTY A
         EXEC #RECORD &XNM ARCHIVE STATUS X &USR OCIS
         &EXIT 000
-STORE_DISK_LOAD_ERROR
         CP MSG OP UNEXPECTED RETURN CODE &RETCODE
                RECEIVED FROM DISK LOAD COMMAND.
         CP TRANSFER RDR &SID TO &USR
         &EXIT 004
-STORE_COPYFILE_ERROR
         CP MSG OP FILE < &FNM &FTY > COULD
                NOT BE COPIED FROM WORK DISK.
         &EXIT 008

#ARCPROF EXEC
         &TRACE OFF
 #ARCPROF - PROFILE/DRIVER EXEC FOR ARCHIVER DISCONNECTED SERVICE    |
* |    MACHINE.                                                     |
         CP MSG OP ARCHIVER SERVICE MACHINE IS NOW OPERATIONAL.
-CHECK_FOR_READER_FILE
         WAKEUP ( RDR
         &IF &RETCODE NE 4 &GOTO -WAKEUP_ERROR
         DESBUF
         EXECIO * CP ( STRING QUERY RDR ALL
         &READ VARS *
         &READ VARS &USR &SID
         STAG
         &IF &RETCODE NO 0 &GOTO -STAG_ERROR
         &READ STRING &STR
         &IF .&STR = . &GOTO -NO_TAG_ERROR
         & = &PIECE OF &STR 2 3
         &IF .& = .ARC &GOTO -PROCESS_ARCHIVE_REQUEST
         CP MSG &USR TAG INFORMATION RECEIVED WITH FILE IS INCORRECT.
         CP TRANSFER RDR &SID TO &USR
         &GOTO -CHECK_FOR_READER_FILE
* | PROCESS ARCHIVE FILE REQUESTS.                                  |
-PROCESS_ARCHIVE_REQUEST
         EXEC #ARCDRIV &USR &SID &STR
         &IF &RETCODE GT 007 &GOTO -ARCHIVE_REQUEST_ERROR
         &GOTO -CHECK_FOR_READER_FILE
* | ERROR MESSAGE ROUTINES.                                         |
-WAKEUP_ERROR
         CP MSG OP UNEXPECTED RETURN CODE &RETCODE
                RECEIVED FROM WAKEUP.
         &STACK CP LOGOFF
         &EXIT 008
-ARCHIVE_REQUEST_ERROR
         CP MSG OP UNEXPECTED RETURN CODE
                   &RETCODE RECEIVED FROM #ARCDRIVE EXEC.
         &STACK CP LOGOFF
         &EXIT 008

#ARCSTAT EXEC
         &TRACE
* | #ARCSTAT - EXEC TO CREATE AND SEND DUMMY FILE TO ARCHIVER TO    |
* |     DISPLAY THE STATUS OF THE ARCHIVE LIBRARY DISK.             |
         &FNM = &1
         &FTY = &2
         &FMD = &3
         &XNM = &CONCAT OF &FMD ARCSTAT
         ERASE &XNM CMSUT1 A
         &STACK &XNM &FNM &FTY &FMD
         EXECIO 1 DISKW &XNM CMSUT1 A 0
         CP SPOOL 00D CONT TO ARCHIVER NOHOLD
         CP TAG DEV D &XNM &FNM &FTY &FMD
         DISK DUMP &XNM CMSUT1 A
         CP SPOOL 00D NOCONT NOHOLD
         CP CLOSE 00D
         CP SPOOL 00D OFF
         CP TAG DEV D
         ERASE &XNM CMSUT1 A
         EXEC #RECORD &XNM &FNM &FTY &FMD ARCHIVER OCIS
         &EXIT

#ARCSTOR EXEC
         &TRACE
* | #ARCSTOR - EXEC TO SEND A DISK FILE TO ARCHIVER FOR STORAGE OF  |
* |     THE FILE ON THE ARCHIVE LIBRARY DISKS.                      |
         &FNM = &1
         &FTY = &2
         &FMD = &3
         &CALL -CHECK_PROFILE &FNM &FTY
          &XNM = &CONCAT OF &FMD ARCSTOR
         STATE &FNM &FTY A
         &IF &RETCODE NE 0 &GOTO -FILE_NOT_FOUND
         &TYPE ENTER A COMMENT TO BE STORED WITH THE FILE.
         &READ STRING &COM
         CP SPOOL 00D CONT TO ARCHIVER NOHOLD
         CP TAG DEV D &XNM &FNM &FTY &FMD ( &COM
         DISK DUMP &FNM &FTY A
         CP SPOOL 00D NOCONT NOHOLD
         CP CLOSE 00D
         CP SPOOL 00D OFF
         CP TAG DEV D
         EXEC #RECORD &XNM &FNM &FTY &FMD ARCHIVER OCIS
         &EXIT
-CHECK_PROFILE
         &IF .&1 NE .PROFILE &RETURN
         &IF .&2 NE .EXEC    &RETURN
         &TYPE FILE < &1 &2 > CAN NOT BE STORED WITH ARCHIVE FACILITY
         &EXIT 008
-FILE_NOT_FOUND
         &TYPE FILE < &FNM &FTY > IS NOT ON THE A (191) DISK.
         &EXIT 008

#ARCRETR EXEC
         &TRACE
* | #ARCRETR - EXEC TO CREATE AND SEND DUMMY FILE TO ARCHIVER TO    |
* |     RETRIEVE A FILE FROM THE ARCHIVE LIBRARY DISK.              |
         &FNM = &1
         &FTY = &2
         &FMD = &3
         &XNM = &CONCAT OF &FMD ARCRETR
-GET_VERSION_NUMBER
         &TYPE ENTER VERSION NUMBER OF FILE TO BE RETRIEVED.
         &READ VARS &VRS
         &IF .&VRS = . &VRS = 0
         & = &DATATYPE OF &VRS
         &IF .& NE .NUM &GOTO -GET_VERSION_NUMBER
         ERASE &XNM CMSUT1 A
         &STACK &XNM &FNM &FTY &FMD
         EXECIO 1 DISKW &XNM CMSUT1 A 0
         CP SPOOL 00D CONT TO ARCHIVER NOHOLD
         CP TAG DEV D &XNM &FNM &FTY &FMD &VRS
         DISK DUMP &XNM CMSUT1 A
         CP SPOOL 00D NOCONT NOHOLD
         CP CLOSE 00D
         CP SPOOL 00D OFF
         CP TAG DEV D
         ERASE &XNM CMSUT1 A
         EXEC #RECORD &XNM &FNM &FTY &FMD ARCHIVER OCIS
         &EXIT

#RECORD EXEC
         &TRACE
* | #RECORD = EXEC TO UPDATE A CMS USER'S NETLOG FILE WITH EXEC     |
* |     EXECUTION INFORMATION.                                      |
         &STACK LIFO NONE    FNAME  FTYPE  FMODE  VSEIPO
                    OCIS  CALLR  FNAME  FTYPE FMODE DESTID  NODE 1
         &READ  VARS &CALLER &FNAME &FTYPE &FMODE &DESTID
                    &NODE &X1    &X2    &X3   &X4   &X5     &X6  &X
         &LOOP 2 UNTIL &X > &N
           &&X&X = &&X
           &X = &X + 1
         EXECIO 1 CP ( LIFO STRING QUERY TIME
         &READ VARS * * &TIME &TIMEZONE &DAY &DATE
         IDENTIFY (STACK LIFO
         &READ VARS &USERID
          &FNAME  = &LEFT OF &FNAME  8
         &FTYPE  = &LEFT OF &FTYPE  8
         &FMODE  = &LEFT OF &FMODE  2
         &DESTID = &LEFT OF &DESTID 8
         &NODE   = &LEFT OF &NODE   8
         &X = &STRING OF SENT
         &Y = &STRING OF   TO
         &IF &CALLER = SERVICE &X = &STRING OF RECD
         &IF &CALLER = SERVICE &Y = &STRING OF FROM
         &LOGREC = &STRING OF FILE &FNAME &FTYPE &FMODE
                   &X &Y &DESTID AT &NODE ON &DATE &TIME VIA &CALLR
         &CALL -CKMODE &USERID NETLOG
         EXECIO 1 DISKW &USERID NETLOG &GM (FINIS STRING &LOGREC
         &EXIT
-CKMODE
         &OZ = &CONCAT OF '&1 &BLANK &2 '.
         SENTRIES
         &SRC = &RC
         QUERY DISK R/W ( LIFO
         SENTRIES
         &SRC = &RC - &SRC - 1
         &READ STRING &QDISK
         &LOOP -END &SRC
           &QDISK = &SUBSTR OF &QDISK 7 *
           &STACK LIFO &QDISK
           &READ VARS &Y &M
           &RM = &CONCAT OF &M 0
           ESTATEW &1 &2 &M
           &IF &RC = 0 &GM = &RM
           -END &READ STRING &QDISK
         &IF .&GM = . &GM = &RM
         &RETURN
Steven E Kelly
Senior Systems Programmer
Dutchess County, OCIS (USA)   ) Dutchess County, OCIS 1988































