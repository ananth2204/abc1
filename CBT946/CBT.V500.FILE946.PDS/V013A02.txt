 REXX styles

By the word 'style' I mean the way REXX EXECs are written:  indentation, usage
of lower/upper cases, quotes, comments.

Reading VM Update issues (1 to 10), I found as many REXX styles as REXX writers.
Obviously, adding myself to the REXX-writer list will add another style!

The main reason for this is that REXX is style-free, very flexible, very easy to
learn, to code, to run, to debug.  And that is its danger!

Indeed, the time when we had to punch COBOL and FORTRAN sources, respecting
alignment (and sequence numbers), then submit the deck for a batch compilation,
wait for listing, repunch corrections, etc is, fortunately, far away from the
current situation where we just edit the source on-line, compile on-line, look
at results, recompile, etc.

Cycle time between test of programs has become so short that, often, we do not
re-read our sources carefully before compiling or executing them (in the case of
interpreters).

There is fundamentally no problem for one-time-run EXECs, but for 'production',
several considerations must be taken into account.


READABILITY

REXX language is so powerful that if writers are not cautious during writing,
REXX coding could become unreadable, even for the author.

Let us look at the following example:

    my = your
    tailor = cigarette
    rich = finished
    say my tailor is rich

Another:

    if = 1
    then = 2
    else = 3
    if if + then = else then then = if + else
    else then = if

You can probably see the problem.


NO SIDE EFFECT

REXX code could give unforeseen results at execution time if some precautions
are not taken.  What is the result of the following?

   xedit myfile data a1

Impossible to answer outside the EXEC context, which could be:

   /* demo */
   say Enter a data file name to xedit
   pull myfile
   xedit myfile data a1
   ...

or

   /* demo */
    myfile = yourfile
   xedit = erase
   xedit yourfile data a1
   say "Sorry, I have erased your file !"
   ...

The solution - suggested in some IBM guides - is to place between quotes and in
upper case all statements that are not for REXX or that it should not interpret.
So the first example becomes:

   /* demo */
   say "Enter a data file name to xedit"
   pull myfile
   "XEDIT" my "DATA A1"


UPPER OR LOWER CASE

My personal opinion about upper and lower case usage is to use lower case
everywhere applicable, except for strings.  So I never write something like:

   x = SUBSTR(y,1,1)
   IF x = A THEN z = C

nor

   If Substr(q,1,2) = X2c(w) Then Exit


INDENTATION

I read somewhere:

   if userid = "" then do
      if fn = '' then fn = 'NONAME'
      if ft = '' then ft = 'NOTYPE'
      if fm = '' then do
         say 'Mode must be specified'
         return
      end
    end

The problem is that blocks are difficult to locate.  Perhaps, at the beginning,
the intention was to code:

   If userid = "" then do
                           if fn = '' then fn = 'NONAME'
                           if ft = '' then ft = 'NOTYPE'
                           if fm = '' then do
                                               say 'Mode must be given'
                                               return
                                           end
                       end

The problem was being able to have everything on one line 72 characters long.
In fact, indentation size using this last technique depends on the 'if '
condition length.

Why not just code as:

   if   userid = ""
   then do
              if  fn = '' then fn = 'NONAME'
              if  ft = '' then ft = 'NOTYPE'
              if  fm = ''
              then do
                       say 'Mode must be given'
                      return
                   end
        end


COMMENTS

It takes some additional time to internally comment a program, whatever the
language is.  Thanks to XEDIT and XEDIT macros (written in REXX, obviously), it
is not difficult to create a prefix macro to automatically create comment boxes
inside EXECs.  We have one called T that inserts...

/*********************************************************************/
/*                                                                   */
/*                                                                   */
/*********************************************************************/

...by entering T2 in the prefix area.

Entering, for example, T4 = will create:

/*===================================================================*/
/*                                                                   */
/*                                                                   */
/*                                                                   */
/*                                                                   */
/*===================================================================*/

We also have a header comment box automatically included in front of our EXECs
at their creation:

/*********************************************************************/
/*     FUNCTION :                                                    */
/*                                                                   */
/*     CREATION : Mmm dd, 19yy                                       */
/*                                                                   */
/*      PURPOSE :                                                    */
/*                                                                   */
/*      RETURNS :                                                    */
/*                                                                   */
/*       SYNTAX :                                                    */
/*                                                                   */
/*    ARGUMENTS :                                                    */
/*                                                                   */
/*      REMARKS :                                                    */
/*                                                                   */
/*       AUTHOR :                                                    */
/*********************************************************************/

We are disciplined to fill in this part prior to coding everything, and later
on, we have an in-house HELP EXEC that can summarise EXEC purposes or display a
particular EXEC header.

Philippe Taymans (Belgium)    ) Philippe Taymans 1987











