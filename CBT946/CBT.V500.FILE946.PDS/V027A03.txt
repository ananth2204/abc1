 CMS full-screen support
VM/CMS is an extremely powerful and versatile environment.  It is well known for
its ease of use and user friendliness.  Therefore, it is surprising that until
VM/SP R5.0 relatively little has been done to improve the console management of
VM/CMS (which is basically a typewriter keyboard).
We decided to write our own Console Manager for VM/CMS since we do not want to
migrate to R5.0 at this time.  Our console manager (known as $3270CMS) uses IUCV
to intercept all console traffic to the virtual machine.  Some of the features
of $3270CMS are:
y    All console I/O is written to a CMS file, which can be redisplayed using
XEDIT (with a special profile).
y    Console I/O is scrolled upward with CP messages being highlighted.
y    All PF keys that the user has defined are honoured by $3270CMS.
y    Current CPU, storage utilisation and paging rates are displayed.
y    A running count of records logged is displayed.
We have found $3270CMS to be useful in our environment.  Theoretically, it could
be enhanced to become a 'PROP' type application since unwanted messages could be
'filtered' out (while still logging them).  $3270CMS would allow this and give
full screen support.
Re-display of the hardcopy file is made possible through XEDIT.  Use the sample
XEDIT PROFILE for this purpose and set any available PF key to:
   XEDIT $3270CMS  LOGFILE (PROFILE $3270CMS

$3270CMS XEDIT PROFILE
PUSH 'D'
COMMAND SET CASE MIXED
COMMAND PREFIX  OFF
COMMAND SET NONDISP
COMMAND V 1 72
COMMAND SET CURLINE ON 4
COMMAND SET PF3 QQUIT
COMMAND SET PF15 QQUIT
COMMAND BOT BA
COMMAND SET PF7  BACKWARD
COMMAND SET PF19 BACKWARD
COMMAND SET PF8  FORWARD
COMMAND SET PF20 FORWARD
COMMAND SET PF9  RIGHT 35
COMMAND SET PF21 RIGHT 35
COMMAND SET PF10 LEFT  35
COMMAND SET PF22 LEFT  35
COMMAND SET SCALE OFF
COMMAND SET PREFIX OFF
COMMAND SET RESERVED 1 HIGH ('---------------$3270CMS Console Redispl')
COMMAND SET RESERVED 3 HIGH ('Date     Time  ------------------------')
COMMAND SET RESERVED 24 HIGH ('PF:3=Quit 7=Back 8=For 9=Right 10=Left')

$3270CMS ASSEMBLE
*  FULL SCREEN CONSOLE MANAGER FOR VM/CMS
*  ENTRY POINTS(S):      $3270CMS-MAIN INITIALIZATION POINT.
*                        $IUCVEXT-IUCV EXTERNAL INTERRUPTS.
*                        $3270IO--OUR I/O INTERRUPT HANDLER.
*  REGISTER USAGE:
*  R0-CMS NUCLEUS
*  R2-IUCV PARAMETER LIST
*  R4-SECOND BASE
*  RD-SAVE AREA
*  RF-SUBROUTINE LINKAGE
*  TO GENERATE THIS MODULE LOAD $3270CMS (CLEAR RLDSAVE
*  G $3270CMS (ALL SYSTEM
*  NUCXLOAD $3720CMS (PUSH SYSTEM SERVICE
*  TO EXECUTE THIS MODULE AFTER YOU HAVE EXECUTED 'NUCXLOAD', SIMPLY
*  TYPE '$3720CMS'.  THIS MODULE IS THEN ACTIVE AND YOU CAN PROCEED
*  NORMALLY.
$3270CMS CSECT
         STM   RE,RC,12(RD)        SAVE CMS REGS...
          BALR  RC,R0               SET BASE
         USING *,RC,R4             SET ASM
         LA    R4,4095(,RC)
         LA    R4,1(,R4)
         USING NUCON,R0            CMS NUCLEUS
         ST    RD,SAVED            SAVE REGISTER 13
         LA    RD,SAVEREGS         OUR SAVE AREA
         HNDIUCV SET,NAME=$3270,EXIT=CONPEND
         LA    R2,IUCVPLST         IUCV PARAMETER LIST
         USING IPARML,R2           ALWAYS USE R2
         IUCV  CONNECT,PRMLIST=(R2),USERID=CPSMSGS,MF=L
         CMSIUCV CONNECT,NAME=$3270,PRMLIST=(R2),EXIT=IUCVEXT
         MVC   PATHID(2),IPPATHID
         DROP  R2
         LA    R6,VMSPINFO         FOR USERID ETC..
         LA    R7,32               GET 32 BYTES
         DIAG  R6,R7,X'0000'       ASK CP TO DO IT
         LA    R1,SETMSG           SET MSG IUCV
         SVC   202
         DC    AL4(1)
         LA    R1,SETVMIU          SET VMCONIO IUVC
         SVC   202
         DC    AL4(1)
         LA    R1,SETCPIU          SET CPCONIO IUCV
         SVC   202
         DC    AL4(1)
         DMSKEY NUCLEUS            NEED KEY 0 FOR NOW
         LA    RF,$3270IO          OUR I/O ROUTINE...
         MVC   SAVEION,IONPSW      SAVE ORIGINAL I/O NEW PSW
         ST    RF,IONPSW+4         ZAPERR00000!!!
         LA    R1,9
         LA    R2,CLRCCW           CLEAN THE SCREEN..
         TIO   0(R1)               WAIT UNTIL FREE...
         BC    2,*-4               LOOP UNTIL FREE
         DIAG  R2,R1,X'58'
         BC    2,*-4               LOOP UNTIL FREE
         MVI   SASW,X'FF'          TURN ON INITIALIZED SWITCH
         DMSKEY RESET
         L     RD,SAVED            CMS REG 13
         LM    RE,RC,12(RD)        RESTORE ALL REGS
         SLR   RF,RF               0 RETCODE
         BR    RE                  GO BACK TO CMS...
         EJECT
         DROP  RC
         DROP  R4
*  CONTROL COMES HERE ON AN EXTERNAL INTERRUPT.
IUCVEXT  EQU   *
         BALR  RC,R0               SET BASE
         USING *,RC,R4             SET ASM
         LA    R4,4095(,RC)
         LA    R4,1(,R4)
         ST    RE,CMSRET           RETURN ADDRESS TO CMS
         USING IPARML,R2           IUCV PARM LIST
         CLI   IPTYPE,X'02'        SIMPLY CONNECTION COMPLETE ?
         BE    CONNCOMP            YES....IGNORE
         LA    R8,CPQRY            SET UP FOR QUERY
         LA    R9,RESPONSE         PUT RESPONSE HERE
         LA    RA,L'CPQRY          LENGTH OF COMMAND
         O     RA,=X'40000000'     TURN ON BIT 1
         LA    RB,200              LENGTH OF BUFFER
         DIAG  R8,RA,X'8'          ISSUE CP COMMAND
         MVC   CPULINE,CPUUTIL     SYSTEM STATS
         MVC   STORLINE,STUTIL     SYSTEM STATS
         MVC   PAGELINE,PAGERATE   SYSTEM STATS
         LA    R6,DATETIME         DATE AND TIME...
         DIAG  R6,R0,X'000C'       GET DATE AND TIME FROM CP
          MVC   MSGDATE,VMDATE      MOVE DATE
         MVC   MSGTIME,VMTIME      AND TIME
         XC    IUCVPLST(40),IUCVPLST   CLEAN PLIST AREA
         XC    MSGAREA(256),MSGAREA    CLEAN MSGAREA
         MVC   MSGCLASS,IPTRGCLS   MOVE IUCV CLASS
         MVC   MSGID,IPMSGID       AND MSG ID
         LA    R2,IUCVPLST         ADDRESS PARM LIST
         IUCV  RECEIVE,PATHID=PATHID,PRMLIST=(R2),MSGID=MSGID,TRGCLS=MSX
               GCLASS,BUFFER=MSGAREA,BUFLEN=BUFERLEN
         CLI   SASW,X'FF'          ARE WE RUNNING STAND ALONE ?
         BE    IUCV010             YES
         OI    $ECBWAIT,X'40'      POST ECB
         BR    RE                  RETURN
*  NOTE: THE USER CAN COMMUNICATE WITH US VIA '   #CP $R'.
*        THE PURPOSE OF THIS IS TO ALLOW HARDCOPY REDISPLAY
*        DURING THE EXECUTION OF A PROGRAM.
*        BROWSE IS USED FOR THE REDISPLAY SINCE IT RUNS IN
*        THE TRANSIENT AREA.
*        THE CP OUTPUT 'UNKNOWN COMMAND: $R' IS NOT DISPLAYED
*        ON THE TERMINAL.
IUCV010  EQU   *
         CLC   MSGAREA+9(L'$R),$R  REVIEW HARDCOPY FILE......?
         BNE   IUCV020             NOPE...
         LA    R1,$RPLIST          CALL BROWSE
         SVC   202                 VIA SVC 202
         DC    AL4(1)              ERROR RETURN
         B     RET010              EXIT IMMEDIATELY...........
IUCV020  EQU   *
         CLC   MSGAREA+8(L'$UNKNOWN),$UNKNOWN  IGNORE ?
         BE    RETURN              YES......
         BAL   RE,MOVESCRN         MOVE SCREEN UP 1 LINE
         CLI   INPUTCMD,X'FF'      ANY INPUT ?
         BNE   IUCV030             NOPE...
         XC    INPUTCMD,INPUTCMD   CLEAN IT...
         MVC   D10000-2(2),=X'1DE8'    TURN ON HILIGHT..
         MVC   D10000(70),COMMAND  MOVE COMMAND
         BAL   RE,MOVESCRN         MOVE SCREEN UP 1 LINE
IUCV030  EQU   *
         MVC   D10000-2(2),=X'1D60'    TURN OFF HILIGHT..
         CLI   IPTRGCLS+3,X'05'        IS MESSAGE FROM CP ?
         BNL   IUCV040                 NOPE...
         CLI   IPTRGCLS+3,X'01'        MSG FROM ?'
         BNE   NOCPMSG                 NOPE...
         MVC   D10000(79),MSG0+2       MOVE FANCY STUFF...
         MVC   MSG1A,MSGAREA           MOVE 'FROM USER
         MVC   MSG2+2(79),MSGAREA+8    MOVE TEXT OF MESSAGE
         LA    R7,MSG0                 START HERE.....
         LA    R6,4                    4 TO DO
MSGLOOP  EQU   *
         MVC   D10000(79),2(R7)
         MVC   D10000-2(2),0(R7)   MOVE ATTRIBUTE
         LA    R7,81(,R7)          NEXT...
         BAL   RE,MOVESCRN         MOVESCREEN UP 1 LINE
         BCT   R6,MSGLOOP          LOOP
         B     RETURN              RETURN TO CMS
NOCPMSG  EQU   *
         MVC   MSGAREA(8),=CL8'SYSTEM'
         MVC   D10000-2(2),=X'1DE8'
IUCV040  EQU   *
         LA    RB,3
         LA    R6,MSGAREA+8        INPUT AREA
         MVI   LINEND,X'00'        INIT LINEND
         MVI   LASTLINE,X'00'      INIT LINEND
         CLI   0(R6),X'15'         LINEND ?
         BE    IUCV090             YES..JUST AN INPUT COMMAND
IUCV041  EQU   *
          LA    RF,79               MAX LOOP
         LR    R3,R6               SAVE STARTING POINT
IUCV045  EQU   *
         CLI   0(R6),X'15'         LINEND ?
         BE    IUCV050             YES..TAKE CARE OF IT
IUCV049  EQU   *
         LA    R6,1(,R6)           NEXT BYTE IN LINE
         BCT   RF,IUCV045          LOOP
         B     IUCV090
IUCV050  EQU   *
         MVI   LINEND,X'FF'        INDICATE WE HAD A LINEND
         LR    R5,R6               COPY
         SLR   R5,R3               # BYTES OF LINE
         BCTR  R5,R0               -1 FOR MVC
         EX    R5,EXMVC1           MOVE DATA TO AREA......
         BAL   RE,MOVESCRN         MOVE SCREEN UP 1 LINE
         CLI   LASTLINE,X'FF'      LAST LINE
         BE    RETURN              YUP..BYE
         LA    R6,1(,R6)           GO PAST X'15'
         BCT   RB,IUCV041          DO IT AGAIN
         B     RETURN
IUCV090  EQU   *
         MVI   LASTLINE,X'FF'      LAST LINE
         CLI   LINEND,X'FF'        DID WE HAVE LINEND ?
         BE    IUCV050             YUP...DO LAST LINE
         MVC   D10000(79),MSGAREA+8
         XC    COMMADD,COMMADD     CLEAN...
         B     RETURN
MOVESCRN EQU   *
         LA    R8,SCLINE1          MOVE TO HERE
         LA    RA,SCLINE2          FROM HERE
         LA    R9,16*81            LENGTH OF MOVE
         LR    RB,R9               COPY IT
         MVCL  R8,RA               DO THE MOVE
         MVC   IODATA,SCLINE15+2   MOVE DATA FOR HARDCOPY
         AP    LOGRECS,=P'1'       ADD +1 TO RECORDS LOGGED
         MVC   WORK10,MASK10       EDIT MASK FOR LEGRECS
         ED    WORK10(10),LOGRECS  EDIT IT
         MVC   HCRECS,WORK10+4     MOVE EDITED RESULT
         FSWRITE '$3270CMS LOGFILE  A1',FORM=E,BUFFER=IOAREA,          X
               RECFM=F,BSIZE=96
         MVC   D10000,BLANKS       CLEAN THIS
         BR    RE                  RETURN
DISPLSCR EQU   *
         LA    R2,WRCCW            WRITE CCW...
         LA    RF,DATA1L           LENGTH OF DATA..
         STH   RF,WRCCW+6          CHANGE CCW LENGTH
         LA    R1,9                TUBE ADDRESS
         TIO   0(R1)               WAIT FOR IT
         BC    2,*-4               DITTO---
         DIAG  R2,R1,X'58'         WRITE
         BC    2,*-4               LOOP UNTIL FREE
         TIO   0(R1)               WAIT FOR IT
         BC    2,*-4
         BR    RE                  RETURN
EXMVC1   MVC   D10000(1),0(R3)     EXECUTED
RETURN   EQU   *
         BAL   RE,DISPLSCR
RET010   EQU   *
         L     RE,CMSRET           CMS RETURN REG
         BR    RE
CONNCOMP EQU   *
         OI    CONCOMP,X'40'           POST ECB
         BR    RE                      RETURN
MSG0     DC    X'1D60'
         DC    CL79'>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<X
                <<<<<<<<<<<<<<<<<<<<<<<<<<<'
MSG1     DC    X'1DE8'
         DC    CL79'Message Follows from XXXXXXXX'
MSG1A    EQU   MSG1+23,8
MSG2     DC    X'1DE8'
         DC    CL79' '
MSG3     DC    X'1D60'
         DC    CL79'>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<X
               <<<<<<<<<<<<<<<<<<<<<<<<<<<'
LINEND   DS    1X
LASTLINE DS    1X
         CNOP  0,8
DATETIME DS    0CL32
VMDATE   DS    CL8
VMTIME   DS    CL8
         DS    CL16
VMSPINFO DS    CL16
VMUSERID DS    CL8
         DS    CL8
SETMSG   DC    CL8'CP'
         DC    CL8'SET'
         DC    CL8'MSG'
         DC    CL8'IUCV'
         DC    8X'FF'
SETON    DC    CL8'CP'
         DC    CL8'SET'
         DC    CL8'MSG'
         DC    CL8'ON'
         DC    8X'FF'
SETVMIU  DC    CL8'CP'
         DC    CL8'SET'
         DC    CL8'VMCONIO'
         DC    CL8'IUCV'
         DC    8X'FF'
SETCPIU  DC    CL8'CP'
         DC    CL8'SET'
         DC    CL8'CPCONIO'
         DC    CL8'IUCV'
         DC    8X'FF'
SETVMON  DC    CL8'CP'
         DC    CL8'SET'
         DC    CL8'VMCONIO'
         DC    CL8'OFF'
         DC    8X'FF'
SETCPON  DC    CL8'CP'
         DC    CL8'SET'
         DC    CL8'CPCONIO'
         DC    CL8'OFF'
         DC    8X'FF'
MSGID    DS    F
MSGCLASS DS    F
SAVED    DS    F                   REG. 13 SAVE AREA
CMSRET   DS    F                   CMS RETURN ADDRESS
CPQRY    DC    C'CP IND'           TO GET SYSTEM STATS..
RESPONSE DS    CL200               CP RESPONSE BUFFER
CPUUTIL  EQU   RESPONSE,12         CPU UTILIZATION LINE
STUTIL   EQU   RESPONSE+42,12      STORAGE UTILI. LINE
PAGERATE EQU   RESPONSE+66,15      PAGERATE LINE
WORK10   DS    CL10                WORK FIELD
MASK10   DC    X'40206B2020206B202020'
SAVEREGS DS    18F                 OUR SAVERAREA
CONCOMP  DC    F'0'                ECB...
$ECBWAIT DC    F'0'                ECB...
BUFERLEN DC    H'256'              LENGTH OF RECEIVE BUFFER
MSGAREA  DC    CL256' '            OUR RECEIVE BUFFER
IOAREA   DC    CL96'               OUR RECEIVE BUFFER
 IODATA   EQU   IOAREA+19,79
MSGDATE  EQU   IOAREA,8            FOR TIME STAMP
MSGTIME  EQU   IOAREA+10,8         FOR TIME STAMP
COMMAREA DC    CL256' '            COMMAND AREA
SASW     DC    X'00'
         LTORG
         DROP  RC
         DROP  R4
         EJECT
* CONTROL COMES HERE ON AN I/O INTERRUPT
         CNOP  0,8
$3270IO  EQU   *
         ST    RC,8
         BALR  RC,R0               SET BASE
         USING *,RC,R4             SET ASM
         LA    R4,4095(,RC)
         LA    R4,1(,R4)
         STM   R0,RF,SAVEIOR       SAVE ALL REGS
         CLI   CSW+4,X'80'         ATTENTION ?
         BNE   IO0100              NOPE...
         MVC   SAVEOLD,IOOPSW      SAVE OLD I/O
         MVI   ATTNBIT,X'FF'       TURN ON ATTENTION BIT
         B     IO0200              GET OUT
IO0100   EQU   *
         CLI   ATTNBIT,X'FF'       ATTENTION BIT ON ?
         BNE   IO0200              YES....
         XC    ATTNBIT,ATTNBIT     CLEAN IT
         L     RF,CAW              LOAD CHANNEL ADDRESS WORD
         L     RF,0(,RF)           LOAD DATA ADDRESS...
         ST    RF,COMMADD          STORE IT
         L     RF,COMMADD          ADDRESS OF COMMAND
         MVC   COMMAND(80),0(RF)   SAVE COMMAND THAT USER ENTERED
         OC    COMMAND,BLANKS      UPPER CASE.......
         MVI   INPUTCMD,X'FF'      SAY WE HAVE INPUT !!
IO0200   EQU   *
         LM    R0,RF,SAVEIOR       RESTORE ALL REGS
         MVC   0(8,R0),SAVEION     SAVED I/O PSW
         L     RC,8                RESTORE RC
         LPSW  0                   GO TO ORIGINAL CMS I/O ROUTINE
SAVEIOR  DS    16F                 SAVE AREA
SAVEOLD  DS    D
$RPLIST  DC    CL8'BROWSE'
         DC    CL8'$3270CMS'
         DC    CL8'LOGFILE'
         DC    CL8'*'
         DC    CL8'('
         DC    CL8'PROFILE'
         DC    CL8'$3270CMS'
         DC    8XL1'FF'
         CNOP  0,8
CPSMSGS  DC    CL8'*MSG'           CP MESSAGE SERVICE
IUCVPLST DC    40X'00'             OUR IUCV PLIST
PATHID   DC    H'0'                IUCV PATHID
$3270    DC    CL8'$3270'          OUR NAME
ATTNBIT  DC    1X'00'              TO IDENTIFY ATTENTION INTERRUPTS
INPUTCMD DC    1X'00'              SAY WE HAVE INPUT
COMMAND  DC    CL80' '             USER COMMAND (ENTERED)
$R       DC    C'CP $R'            REDISPLAY
$UNKNOWN DC    C'UNKNOWN CP COMMAND: $R'    IGNORE THIS
SAVEION  DS    D
CLRCCW   DC    X'19',AL3(0),X'20',X'FF',H'1'
WRCCW    DC    X'19',AL3(SCRNDATA),X'20',X'00',H'1'
         DC    X'03',AL3(0),X'20,'X'00',H'1'
SCRNDATA EQU   *                   DATA TO DISPLAY
         DC    39CL2'*-',C'*'      FILLER LINE
*CRNTIME EQU   SCLINE0,8
 *CRNDATE EQU   SCLINE0+9,8
SCLINE1  DC    XL2'1D60',CL79' '
SCLINE2  DC    XL2'1D60',CL79' '
SCLINE3  DC    XL2'1D60',CL79' '
SCLINE4  DC    XL2'1D60',CL79' '
SCLINE5  DC    XL2'1D60',CL79' '
SCLINE6  DC    XL2'1D60',CL79' '
SCLINE7  DC    XL2'1D60',CL79' '
SCLINE8  DC    XL2'1D60',CL79' '
SCLINE9  DC    XL2'1D60',CL79' '
SCLINE10 DC    XL2'1D60',CL79' '
SCLINE11 DC    XL2'1D60',CL79' '
SCLINE12 DC    XL2'1D60',CL79' '
SCLINE13 DC    XL2'1D60',CL79' '
SCLINE14 DC    XL2'1D60',CL79' '
SCLINE15 DC    XL2'1D60',CL79' '
SCLINE16 DC    XL2'1D60',CL79' '
D10000   EQU   SCLINE16+2,79       CURRENT LINE
         DC    X'1DE8'             FILLER LINE (BLANKS)
         DC    79CL1' '            BLANK LINE
         DC    X'1D60'             NO HILIGHT
         DC    39CL2'*-',C'*'      FILLER LINE
         DC    CL79' '             FILLER LINE
         DC    X'1DE8'             HILIGHT STATS LINE
STATLINE DC    CL80' '
CPULINE  EQU   STATLINE+1,12
STORLINE EQU   STATLINE+15,12
PAGELINE EQU   STATLINE+30,15
         DC    X'1D60'
HCLINE   DC    C'Records Logged to HardCopy File:'
         DC    X'1DE8'
HCRECS   DC    CL6' '
         DC    X'1D60'
DATA1L   EQU   *-SCRNDATA
COMMADD  DS    1F                  ADDRESS OF USER COMMAND
LOGRECS  DC    PL4'0'
BLANKS   DC    CL80' '
CONPEND  EQU   *
         BR    RE                  IGNORE...
         LTORG
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
RA       EQU   10
RB       EQU   11
RC       EQU   12
RD       EQU   13
RE       EQU   14
RF       EQU   15
         NUCON
         COPY  IPARML
         END   $3270CMS
James Young
Technical Support Manager
Reader's Digest Association (Canada)    ) Xephon 1988




