 Using the window facility
The WFL EXEC is a REXX program designed for use on VM/SP Release 5.0.  The EXEC
allows the user to see a list of the contents of his mini-disks through a
window.  The window, and hence the list, can be displayed while the user is in
XEDIT, FILEL and FULLSCREEN CMS modes.
Once the EXEC is called, a window is displayed asking the user to specify
filename, filetype and filemode.  The user can then specify his choice as he
would when using the normal filelist command.
Once the options have been specified followed by ENTER, the first window is
replaced with another containing the user's required list.  There are several
advantages in listing disk content this way; not only can the list be shown in
the various modes already specified but:
y    The list is displayed until the end of the session or until cleared by the
user.
y    It can be easily called from a PF key.
y    The user can continue his XEDIT session or CMS session regardless of the
list being shown.
However, the main use for this EXEC is as a useful introduction to the various
windowing facilities of this release of VM/SP, and to show how they can be used
within an EXEC.
/*  W F L EXEC is a REXX program designed to allow users to see    */
/*  all or a specified part of their various mini-disks, while in  */
/*  XEDIT, FILEL and FULLSCREEN CMS modes.                         */
/*                                                                 */
/* INITIALISE - call all the routines from here.                   */
initialise:
    "SET CMSTYPE HT"
    rc = 0
    counter = 0
    flag = 0
  call menu_window     /* Set up the initial window where the user */
                       /* can specify which files he wishes to see.*/
  call ask_reply       /* Ask user for his selection and accept    */
                       /* the reply.                               */
  call list_files      /* Creates a workfile containing the list   */
                       /* of files required.                       */
  call display_list    /* Display the list in the window.          */
close:                 /* Tidy everything and stop.                */
  "ERASE CMS EXEC A"   /* Erase the workfiles.                     */
  "SET CMSTYPE RT"
  "DROPBUF"
   EXIT                /* STOP.                                    */
menu_window:
  "QUERY WINDOW FLWIN" /* Does the window already exist ?          */
  if rc = 0 then       /* Yes! so delete it.                       */
    do
      "DELETE VSC FLVSC"
      "DELETE WIN FLWIN"
    end
  "DEFINE VSC FLVSC 17 80 1 0 (TYPE NOPROTECT BLUE)"
  "DEFINE WIN FLWIN 5 46 11 26 (FIXED BORDER NOPOP TOP)"
  "SET BORDER FLWIN ON (TOP - BOTTOM - LEFT | RIGHT | HIGH GREEN)"
  "SHOW WIN FLWIN ON FLVSC 1 1"
  "POP WIN FLWIN"       /* Display the window.                     */
return
ask_reply:
  "MAKEBUF"
  "CUR VSC FLVSC 2 24 (DATA)" /* Set the cursor position on window */
  "WRITE VSC FLVSC 1 1 0 (RESERVED BLUE UND FIELD" Window Flist Program
  "WRITE VSC FLVSC 2 1 23 (PROTECT BLUE FIELD Enter filename or * ?"
  "WRITE VSC FLVSC 2 23 9 (NO PROTECT YELLOW FIELD         "
  "WRITE VSC FLVSC 3 1 23 (PROTECT BLUE FIELD Enter filetype or * ?"
  "WRITE VSC FLVSC 3 23 9 (NOPROTECT YELLOW FIELD          "
  "WRITE VSC FLVSC 4 1 23 (PROTECT BLUE FIELD Enter filenode or * ?"
  "WRITE VSC FLVSC 4 23 9 (NOPROTECT YELLOW FIELD          "
  "WAITREAD VSCREEN FLVSC"    /* Return variables input in window. */
   push waitread.3; pull . . . fn .  /* Get filename.               */
  push waitread.4; pull . . . ft .  /* Get filetype.               */
  push waitread.5; pull . . . fm .  /* Get filemode.               */
return
list_files:
  line_string = 0
  rc = 0                       /* Just make sure variables set.    */
  "STATE CMS EXEC A"           /* Does the old workfile exist ?    */
  if rc = 0 then               /* Yes! then erase that file now.   */
    do
      "ERASE CMS EXEC A"
    end
  rc = 0                       /* Just make sure variables set.    */
  "LISTFILE" fn ft fm "(EXEC"  /* Put list of files in workfile.   */
  if rc = 0 then               /* Any problems with LISTFILE?      */
    do                         /* Yes! Go to error section now.    */
      line_string = 'the LISTFILE command' rc
      signal error_section
    end
  rc = 0
return
display_list:
  "DELETE VSC FLVSC"         /* Delete the previous virtual screen.*/
  "DELETE WIN FLWIN"         /* Delete the previous window screen. */
  do forever
    "EXECIO 1 DISKR" CMS EXEC A  /* Check for size of the workfile.*/
    counter = counter + 1
    if rc = 0 then signal next
  end
  next:
  "DEFINE VSC FLVSC" counter "130 2 0 (TYPE PROTECT BLUE)"
  "DEFINE WIN FLWIN 15 21 3 53 (FIXED BORDER NOPOP TOP)"
  "SET BORDER FLWIN ON (TOP - BOTTOM - LEFT | RIGHT | HIGH GREEN)"
  "GET VSC FLVSC CMS EXEC A 1 *"
  "SHOW WIN FLWIN ON FLVSC 1 9 "
  "POP WIN FLWIN"                /* Display the list window.       */
return
/* ERROR_SECTION - Errors have occurred, so now display them in */
/*                 the window instead of the flist.             */
error_section:
  "SET CMSTYPE RT"
  "CLEAR VSC FLVSC"            /* Clear any stuff if in the window.*/
  "WRITE VSC FLVSC 1 1 0 (RESERVED RED UND FIELD  Error message   "
  "WRITE VSC FLVSC 2 1 0 (PROTECT RED FIELD Unexpected return code from"
  "WRITE VSC FLVSC 3 1 0 (PROTECT RED FIELD" line_string
  signal close                 /* Go and terminate program run.    */

Christopher Guy
Systems Software Programmer
TSB England & Wales plc (UK)  ) TSB England & Wales plc 1988
















