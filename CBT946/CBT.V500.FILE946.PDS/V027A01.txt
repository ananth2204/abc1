 Directory maintenance made easy
The installation for which I wrote the following two programs has more than 350
CMS users in VM/SP and about 50 in VM/XA.  This results in a VM/SP directory
file with about 8000 records and a diskmap file with about 600 records.  There
are four 3380 As and three 3380 Es containing the user mini-disks.  If you are
running a similar system you know how easily one can make a mistake coding a new
mini-disk statement - even if it has been copied.  To avoid mistakes the program
CHDM has been written.  It checks the diskmap file for mini-disk overlaps and if
there is one it types a message that records an error to the console.  Those
overlaps resulting from fullpack mini-disk statements (ie MAINT and the machine
for DDR back-up) are recognised and ignored.  If the program finds no overlap a
corresponding message is displayed.
The second program CHDMGAP searches the diskmap file for gaps.  If it finds one
this record is written in a CMS file where the amount of free space left on each
volume is readily seen.
We built an EXEC to bring a new directory on-line:
1    Rename (save) the old directory file with filetype 'save'.
2    Rename (save) the old diskmap file with filetype 'save'.
3    Call the diskmap EXEC with the new directory file.
4    Call CHDM with the new diskmap file.
5    Prompt whether CHDM found an error.  If so the EXEC ends.
6    Call the direct module with the new directory file.
7    Call CHDMGAP with the new diskmap file.
These programs should be able to run in every VM installation.
CHDM
         TITLE 'Check Diskmap for Overlaps'
CHDM     CSECT
         PRINT NOGEN
         USING CHDM,R15
         STM   R1,R15,RSAVE
         LR    R10,R15
         DROP  R15
         USING CHDM,R10,R11
         LA    R11,4095(R10)
         LA    R11,1(R11)
         B     ANFANG
*  The volume-ids that are to be checked must be added in the table at
*  the end of the program.
* REGISTER EQUATES
         REGEQU
RSAVE    DS     15F
ANFANG   EQU   *
         SPACE 2
* Get parameters = filename of diskmap
         MVC   INFILE,8(R1)
         LA    R2,INFILE
         SPACE 2
* Open diskmap file
OPEN     EQU   *
         FSOPEN  (2),ERROR=OPENERR
         WRTERM 'Chdm:     Check Diskmap for Overlaps.'
         WRTERM '   '
READ1    EQU   *      Search for 'volume'
         FSREAD (2),BUFFER=IN,BSIZE=80
         LTR   R15,R15
         BNZ   EOF
READOK   EQU   *
         CLC   =C'VOLUME',IN
         BNE   READ1
READ2    EQU   *      Compare the found volid with those in the table
         FSREAD (2),BUFFER=IN,BSIZE=80
         LTR   R15,R15
         BNZ   EOF
         LA    R6,DISKTAB
CLCDISK  EQU   *
         CLC   IN(6),0(R6)
          BE    READ3A
         LA    R6,6(R6)
         CLI   0(R6),X'FF'
         BE    READ1
         B     CLCDISK
READ3A   EQU   *   We found a volid that has to be checked
         MVC   VOLID,IN
READ3    EQU   *   When we find 'volume' the last volid is finished
         FSREAD (2),BUFFER=IN,BSIZE=80
         LTR   R15,R15
         BNZ   EOF
         CLC   =C'OVERLAP',IN+63
         BE    CHECKOVL
         CLC   =C'VOLUME',IN
         BE    READ2
         B     READ3
CHECKOVL EQU   *  Two CMS user have fullpack mdisk statements: Maint +
*                 Sichern. Fullpack mdisk starts with '000' and ends
*                 with either '0884' for a 3380 A model or '1769' for
*                 a 3380 E model.  If one of these is true, it is ok.
         CLC   =C'SICHERN',IN+9
         BE    READ3
         CLC   =C'0000',IN+38
         BNE   OVLFOUND
         CLC   =C'0884',IN+47
         BE    READ3
         CLC   =C'1769',IN+47
         BE    READ3
OVLFOUND EQU   *  An mdisk overlap is found, write is to the console.
         MVI   SCHERR,C'0'
         MVC   OVLPMD,IN+21
         MVC   OVLPUS,IN+9
         MVC   OVLSTART,IN+38
         MVC   OVLEND,IN+47
         MVC   OVLCYL,IN+56
         WRTERM MSG1,79
         WRTERM MSG2,79
         WRTERM '   '
         B     READ3
EOF      EQU   *
         CLI   SCHERR,C'0'
         BNE   NOERROR
         WRTERM 'Chdm:      * * * * * * * * * * * * * * * * * * * *'
         WRTERM 'Chdm:      At least one OVERLAP has been found.'
         WRTERM 'Chdm:      Check the diskmap and correct the error.'
         WRTERM 'Chdm:      * * * * * * * * * * * * * * * * * * * *'
         WRTERM ' '
         B     EXIT
NOERROR  EQU   *
         WRTERM ' '
         WRTERM 'Chdm:      No overlaps found.'
         WRTERM ' '
         B     EXIT
OPENERR  EQU   *
         WRTERM 'Chdm: Error opening diskmap file - check the filename'
EXIT     EQU   *
         WRTERM 'Chdm:     End of diskmap file - End of program.'
         LM    R1,R14,RSAVE
         SR    R15,R15
         BR    R14
* Work areas
INFILE   DS    CL24
SCHERR   DC    C' '
* Messages and constants
MSG1     DS    0CL79
         DC    CL8'Chdm:   '
          DC    CL26'* * * OVERLAP on VOLUME: '
VOLID    DS    CL6
         DC    CL39'. Extents in following message. * * *'
MSG2     DS    0CL79
         DC    CL8'Chdm:   '
         DC    CL2'  '
         DC    CL7'Mdisk: '
OVLPMD   DS    CL3
         DC    CL7' User: '
OVLPUS   DS    CL8
         DC    CL8' Start: '
OVLSTART DS    CL4
         DC    CL6' End: '
OVLEND   DS    CL4
         DC    CL6' Cyl: '
OVLCYL   DS    CL4' '
         DC    CL22' '
*   Layout of diskmap record
IN       DS    CL80
* Userid start 10, length 8
* Cuu     "    22,  "     3
* Devtype "    30,  "     4
* Start   "    39,  "     4
* End     "    48,  "     4
* Size    "    57,  "     4
* Overlap "    64,  "     7
DISKTAB  DS    OCL9
         DC    C'HRN122'
         DC    C'SPCMS3'
         DC    C'VMPK01'
         DC    C'VMSP04'
         DC    C'VMSRES'
         DC    C'VMSTG1'
         DC    X'FF'
         END   CHDM

CHDMGAP
         TITLE 'Select GAPS (free space) from diskmap file'
CHDMGAP  CSECT
         PRINT NOGEN
         USING CHDMGAP,R15
         STM   R1,R15,RSAVE
         LR    R10,R15
         DROP  R15
         USING CHDMGAP,R10
         B     ANFANG
*  The volume-ids of the dasds that are containing mdisks must be added
*  in the table at the end of the program.
* REGISTER EQUATES
         REGEQU
RSAVE    DS     15F
FSCB1    FSCB   'GAPS VMSP A',RECFM=F,BUFFER=IN,BSIZE=80
ANFANG   EQU   *
         SPACE 2
* Get parameters = filename of diskmap file
         MVC   INFILE,8(R1)
         SPACE 2
* Identify to get date and time
         LA    R1,IDENTIFY
         SVC   202
         DC    AL4(1)                   no error can appear
* Read response from the program stack
         LA    R1,WAITRD
         SVC   202
         DC    AL4(1)                   no error can appear
         MVC   DATUM,IN+34
          MVC   ZEIT,IN+43
* Open diskmap file
OPEN     EQU   *
         LA    R2,INFILE
         FSOPEN  (2),ERROR=OPENERR
* Erase our old output file if it still exists
         FSSTATE FSCB=FSCB1,ERROR=MELD1
         FSERASE FSCB=FSCB1
MELD1    EQU   *  Write our start message to the console
         WRTERM ' Chdmgap: Create file >GAPS VMSP A< from diskmap.'
         WRTERM '    '
         MVI   IN,C'*'
         MVC   IN+1(L'IN-1),IN
         FSWRITE FSCB=FSCB1,ERROR=WRITERR
         MVI   IN,C' '
         MVC   IN+1(L'IN-1),IN
         FSWRITE FSCB=FSCB1,ERROR=WRITERR
         MVC   IN,MSG0
         MVC   IN+44(8),DATUM
         MVC   IN+58(8),ZEIT
         FSWRITE FSCB=FSCB1,ERROR=WRITERR
         MVI   IN,C' '
         MVC   IN+1(L'IN-1),IN
         FSWRITE FSCB=FSCB1,ERROR=WRITERR
         MVI   IN,C'*'
         MVC   IN+1(L'IN-1),IN
         FSWRITE FSCB=FSCB1,ERROR=WRITERR
         MVI   IN,C' '
         MVC   IN+1(L'IN-1),IN
         FSWRITE FSCB=FSCB1,ERROR=WRITERR
READ1    EQU   *      Look for 'volume'
         FSREAD (2),BUFFER=IN,BSIZE=80
         LTR   R15,R15
         BNZ   EOF
READOK   EQU   *
         CLC   =C'VOLUME',IN
         BNE   READ1
READ2    EQU   *      Compare the found volid with those in our table
         ZAP   COUNTGAP,=P'0'   for message when there are no gaps
         FSREAD (2),BUFFER=IN,BSIZE=80
         LTR   R15,R15
         BNZ   EOF
         LA    R6,DISKTAB
CLCDISK  EQU   *
         CLC   IN(6),0(R6)
         BE    READ3A
         LA    R6,6(R6)
         CLI   0(R6),X'FF'
         BE    READ1
         B     CLCDISK
READ3A   EQU   *  Prepare for output
         MVI   IN+6,C' '
         MVC   IN+7(L'IN-7),IN+6
         MVC   IN+12(6),IN
         MVC   IN(10),=C'VOLUME ID:'
         FSWRITE FSCB =FSCB1,ERROR=WRITERR
READ3    EQU   *   compare for 'GAP' in the diskmap
         FSREAD (2),BUFFER=IN,BSIZE=80
         LTR   R15,R15
         BNZ   EOF
         CLC   =C'GAP',IN+64
         BE    WRITEIT
         CLC   =C'VOLUME',IN
         BNE   READ3
         CP    COUNTGAP,=P'0'
         BH    READEND
          MVC   IN,MSG1
         FSWRITE FSCB=FSCB1,ERROR=WRITERR
READEND  EQU   *   underline it, blank record
         MVI   IN,C'-'
         MVC   IN+1(L'IN-1),IN
         FSWRITE FSCB=FSCB1,ERROR=WRITERR
         MVI   IN,C' '
         MVC   IN+1(L'IN-1),IN
         FSWRITE FSCB=FSCB1,ERROR=WRITERR
         B     READ2
WRITEIT  EQU   *  write the original record with the found gap
         FSWRITE FSCB=FSCB1,ERROR=WRITERR
         AP    COUNTGAP,=P'1'
         B     READ3
EOF      EQU   *  last record in output file and end message to console
         MVI   IN,C'-'
         MVC   IN+1(L'IN-1),IN
         FSWRITE FSCB=FSCB1,ERROR=WRITERR
         WRTERM 'Chdmgap:  End of diskmap file'
         WRTERM ' '
         WRTERM 'Chdmgap:  The file >GAPS VMSP A< has been created.'
         B     EXIT
OPENERR  EQU   *
         WRTERM INFILE,17
         WRTERM 'Chdmgap: Error opening diskmap file - check the name'
         B     EXIT
WRITERR  EQU   *
         WRTERM 'Chdmgap: Error writing in file >GAPS VMSP A<. End.'
EXIT     EQU   *
         LM    R1,R14,RSAVE
         SR    R15,R15
         BR    R14
* work areas
INFILE   DS    CL24
COUNTGAP DC    PL2'0'
DATUM    DS    CL8
ZEIT     DS    CL8
* Plist for SVC 202
IDENTIFY DS    0D
         DC    CL8'IDENTIFY'
         DC    CL8'('
         DC    CL8'STACK'
         DC    SX'FF'
WAITRD   DS    0D
         DC    CL8'WAITRD'
         DC    AL1(1)
         DC    AL3(IN)
         DC    CL1'S'
         DC    XL1'00'
         DC    8X'FF'
* Messages and constants
MSGO     DC    CL80'Free disk areas  V M / S P  .      Date:          *
                time:         .'
MSG1     DC    CL80'     This volume does not contain free space.    '
*  Layout of diskmap record
IN       DS    CL80
* Userid  start  10, Length 8
* Cuu      "     22,  "     3
* Devtype  "     30,  "     4
* Start    "     39,  "     4
* End      "     48,  "     4
* Size     "     57,  "     4
* Overlap  "     64,  "     7
* Gap      "     65,  "     3
DISKTAB  DS    0CL9
         DC    C'HRN122'
          DC    C'SPCMS3'
         DC    C'VMPK01'
         DC    C'VMSP04'
         DC    C'VMSRES'
         DC    C'VMSTG1'
         DC    X'FF'
         END   CHDMGAP
Werner Saumweber
Consultant
SQARE Computing (W Germany)   ) W Saumweber 1988
























































