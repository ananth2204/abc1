Message filter

This program filters messages. The file FILTERMS
MESSAGES contains the messages that will be filtered. All
other messages will be ignored and written on your console.
This feature is activated by typing the FILTERMS command.
You will be informed that the feature is activated. To stop this
feature, send a message to yourself with the word STOP as
text, ie:

      MSG * STOP

You will be informed that the feature is deactivated.

An example of the filter's use is, if the FILTERMS
MESSAGES file contains the statement HALLO, any message
sent to you by another user in the form "MSG userxx HALLO"
will be filtered and you will not see it.

Additionally you can filter CP messages. For example, if you
don't want to see when a RDR file arrives, the message "RDR
FILE 0011 SENT FROM .........." must be filtered. To
achieve this, add a line saying RDR to the FILTERMS
MESSAGES file. Then enter "CPCONIO IUCV      ( CP
message)". From now on the message will be filtered.

This feature has two restrictions. If CPCONIO is set to IUCV
you cannot, for example, enter Q DASD, because the response
is too long. To display long CP responses again, enter
CPCONIO OFF.

Do not use VMCONIO IUCV, because the message will be
passed through the program. The program issues a LINEWRT
to write a message to the screen and that message will also be
passed through this program, and so on.

The program sets the message to IUCV. By stopping it, the
message will set to ON. CPCONIO will not be set
automatically. It must be set and reset by the invoker.


FILTERMS EXEC

/**** FILTERMS EXEC file ****/
SET CMSTYPE HT
'NUCXDROP FILTERMS'                    /* Drop from storage */
'NUCXLOAD FILTERMS'                    /* Load into storage */
SET CMSTYPE RT
'FILTERMS'                             /* Initialize */
EXIT


FILTERMS ASSEMBLER

* Initialization
FILTERMS CSECT
         BALR  R12,0                            ADDRESSING
         USING *,12                             ADDRESSING
         USING IPARML,R2                        IPARML DSECT
         USING FSTD,R8                          FSTD CONTROL BLOCK
         PRINT NOGEN
         ST    R14,SAVE2                        STORE RETURN ADDRESS
         BAL   R14,READFILE                     READ MESSAGE FILE
         LTR   R15,R15                          GOOD RETURN CODE
         BNZ   EXIT1                            FILE NOT FOUND
         LA    R4,CMMDA                         ADDRESS OF COMMAND
         LA    R6,L'CMMDA                       LENGTH OF COMMAND
         DC    X'83',X'46',XL2'0008'            DIAG CODE 8
         ENABLE INTTYPE=CONSOLE                 DISABLE INTERRUPTS
         HNDIUCV SET,NAME=PROGRAMN,EXIT=CONNECTP SET IUCV
         LA    R2,IUCVPARM                      PARAMETER LIST
         IUCV CONNECT,PRMLIST=(R2),USERID=STARMSG,MF=L,MSGLIM=255
         CMSIUCV CONNECT,NAME=PROGRAMN,PRMLIST=(R2),EXIT=MESSAGP
         MVC   PATHID(2),IPPATHID               PATH ID
         WAITECB ECB=ECBWAIT,FORMAT=OS          WAIT
         LINEWRT DATA=(BEGMSG,L'BEGMSG)         TELL MESSAGE
EXIT1    EQU   *
         ENABLE INTTYPE=ALL                     ENABLE INTERRUPTS
         L     R14,SAVE2                        RESTORE RETURN ADDRESS
         BR    R14                              RETURN TO CMS
* Reads the file into storage
READFILE EQU   *
         LA    R5,MSGFILE                       MESSAGE FILE
         FSSTATE (R5),MSG=YES                   DOES FILE EXIST
         LTR   R15,R15                          DOES FILE EXIST
         BZ    FILEXIST                         YES
         BR    R14                              RETURN
FILEXIST EQU   *
         LR    R8,R1                            POINT TO FSTD
         LH    R6,FSTRECCT                      NUMBER OF RECORDS
         STH   R6,RECORDS                       NUMBER OF RECORDS
         L     R5,FSTLRECL                      RECORD LENGTH
         ST    R5,LRECL                         RECORD LENGTH
         LR    R7,R5                            RECORD LENGTH
         MR    R4,R6                            TOTAL AMOUNT OF STORAGE
         CMSSTOR OBTAIN,BYTES=(R5)              GET STORAGE
         LR    R5,R1                            ADDRESS
         LR    R4,R0                            TOTAL AMOUNT OF STORAGE
         ST    R5,STORFILE                      STORAGE ADDRESS
         ST    R4,LENGFILE                      STORAGE LENGTH
         LA    R3,MSGFILE                       MESSAGE FILE
         FSREAD (R3),NOREC=(R6),BSIZE=(R4),BUFFER=(R5),FORM=E
         XR    R15,R15                          CLEAR R15
         BR    R14                              RETURN
* Interrupt arrived
MESSAGP  EQU   *
         BALR  R12,0                            ADDRESSING
         USING *,R12                            ADDRESSING
         USING IPARML,R2                        IPARML BLOCK
         ST    R14,SAVE1                        SAVE RETURN ADDRESS
         ENABLE INTTYPE=CONSOLE
         CLI   IPTYPE,X'02'                     CONNECT REQUEST
         BE    CONNECTC                         YES
         CLI   IPTYPE,X'09'                     MESSAGE ARRIVED
         BNE   CONNECTC                         NO
         L     R7,IPRMMSG2                      LENGTH OF MESSAGE
         L     R5,IPTRGCLS                      TR CLASS
         L     R4,IPMSGID                       MESSAGE ID
         LA    R2,IUCVPARM                      PARAMETER LIST
         XC    IUCVPARM,IUCVPARM                CLEAR PARAMETER LIST
         LA    R7,1(,R7)                        INCREMENT 1
         CMSSTOR OBTAIN,BYTES=(R7)              GET STORAGE
         LR    R6,R1                            ADDRESS
         LA    R6,1(,R6)                        INCREMENT 1
         LR    R9,R0                            LENGTH
         IUCV  RECEIVE,PATHID=PATHID,PRMLIST=(R2),MSGID=(R4),          C
               TRGCLS=(R5),BUFFER=(R6),BUFLEN=(R7)
         BCTR  R6,0                             DECREMENT 1
         MVC   0(8,R6),1(R6)                    MOVE USER-ID
         MVI   8(R6),C' '                       SET BLANK
         LH    R4,RECORDS                       NUMBER OF RECORDS
         L     R5,STORFILE                      FILE IN STORAGE
         L     R3,LRECL                         RECORD LENGTH
COMPARE  EQU   *
         LR    R8,R5                            FILE IN STORAGE
GETBLANK EQU   *
         LA    R8,1(,R8)                        STEP 1 CHAR
         CLI   0(R8),C' '                       IS IT A BLANK
         BNE   GETBLANK                         NO GET NEXT CHAR
         SR    R8,R5                            LENGTH
         BCTR  R8,0                             -1
         EX    R8,COMP1                         COMPARE
         BE    NOSAY                            IF EQUAL
         AR    R5,R3                            TAKE NEXT RECORD
         BCT   R4,COMPARE                       COMPARE IT
         LINEWRT DATA=((R6),(R7))               TELL MESSAGE
NOSAY    EQU   *
         CMSSTOR RELEASE,ADDR=(R6),BYTES=(R9)   RELEASE STORAGE
         CLC   9(4,R6),=C'STOP'                 IS IT STOP
         BE    EXIT                             YES EXIT
         L     R14,SAVE1                        RESTORE RETURN ADDRESS
         BR    R14                              RETURN TO CMS
CONNECTC EQU   *
         OI    ECBWAIT,X'40'                    CONNECT
         L     R14,SAVE1                        RESTORE RETURN ADDRESS
         XR    R15,R15                          CLEAR RETURN CODE
         IC    R15,IPRCODE                      INSERT ERROR CODE
         BR    R14                              RETURN TO CMS
CONNECTP EQU   *
         L     R14,SAVE2                        RESTORE RETURN ADDRESS
         BR    R14                              RETURN TO CMS
* Exit   Deactivates program and sets msg on
EXIT     EQU   *
         LA    R2,IUCVPARM                      PARAMETER LIST
         XC    IUCVPARM,IUCVPARM                CLEAR IT
         MVC   IPPATHID(2),PATHID               PATH ID
         CMSIUCV SEVER,NAME=PROGRAMN,PRMLIST=(R2) SEVER IT
         HNDIUCV CLR,NAME=PROGRAMN              CLR PROGRAM FROM CMS
         L     R6,STORFILE                      ADDRESS OF FILE STORAGE
         L     R7,LENGFILE                      LENGTH OF FILE STORAGE
         CMSSTOR RELEASE,ADDR=(R6),BYTES=(R7)   RELEASE IT
         LINEWRT DATA=(ENDMSG,L'ENDMSG)         TELL MESSAGE
         LA    R4,CMMDB                         ADDRESS OF COMMAND
         LA    R6,L'CMMDB                       LENGTH OF COMMAND
         DC    X'83',X'46',XL2'0008'            DIAG CODE 8
         L     R14,SAVE1                        LOAD RETURN ADDRESS
         BR    R14                              RETURN TO CMS
* Constants and literals
COMP1    CLC   9(0,R6),0(R5)                    COMPARE FOR EXECUTE
CMMDA    DC    C'SET MSG IUCV'                  SET MSG IUCV
CMMDB    DC    C'SET MSG ON'                    SET MSG ON
MSGFILE  DC    C'FILTERMSMESSAGES* '            MESSAGE FILE
STARMSG  DC    CL8'*MSG'                        CP SERVICE
PROGRAMN DC    CL8'FILTERMS'                    PROGRAM NAME
ECBWAIT  DC    F'0'                             CONNECT COMPLETE
STORFILE DS    F                                STORAGE FOR FILE
LENGFILE DS    F                                LENGTH
LRECL    DS    F                                RECORD LENGTH
RECORDS  DS    H                                NUMBER OF RECORDS
SAVE2    DS    F                                SAVE AREA FOR R14
SAVE1    DS    F                                SAVE AREA FOR R14
PATHID   DS    H                                PATH ID
ENDMSG   DC    C'FILTERMS0002I:  Message filter deactivated'
BEGMSG   DC    C'FILTERMS0001I:  Message filter activated'
         DS    0D
IUCVPARM DC    XL40'00'                         IUCV PARAMETER LIST
         REGEQU
         FSTD
         COPY  IPARML
         END

Eugenio
System Programmer (Italy)

