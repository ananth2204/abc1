 Processing accounting records
The 'ACCNT' EXEC, which has been written in REXX, with an XEDIT macro, provides
facilities to process accounting records of type 04, 05 and 06.  It gives an
opportunity to control any user who has issued enough logon, autolog or link
commands with an invalid password to reach or exceed an installation-defined
threshold value (DMKSYS).
The EXEC will also show any successfully issued link command to a protected
mini-disk, so you will be able to detect, at any time, who is trying to access
(or has successfully accessed) your protected resources.  The program has been
developed and implemented on VM/SP rel 4 at service level 421.
ACCNT EXEC
/*   ACCNT EXEC - account records : 04, 05 & 06       */
/*   04 - LOGON with invalid password                 */
/*   05 - LINK : successfully to protected minidisk   */
/*   06 - LINK with invalid password                  */
say 'LINK to DISKACNT ?   Y / N'
parse  upper pull 1 ans 2 .
if ans = 'Y' then do
    viads = ''
   'EXECIO * CP ( STRING Q VI DA'
    do queued()
    pull . viad .
    viads = viads viad
    end
    do i = 100 by 1
       if index(viads,i) = 0 then do
          vadr = i
          leave i
          end
       end
   'LINK DISKACNT 191' vadr 'RR'
   'QUERY SEARCH (STACK'
    do queued()
       pull 14 mode 15 .
       modi = modi||mode
       end
    usp = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
    test = verify(usp,modi)
    slfm =  substr(usp,test,1)
   'ACCESS' vadr slfm
    end
'STATE ACCOUNT CARDS *'
if rc > 0 then exit 1
'EXECIO * DISKR ACCOUNT CARDS * (FINI'
i=0; j=0; k=0;
do queued()
pull 1 xuser1 9 xaccno 17 xm 19 xd 21 xg 23 xho 25 xmi 27 xse 29 xtead,
    33 xinpa 41 xuser2 49 xmdsk 52 xipc 54 xlimit 56 . 71 xlunm 79 acic
Select
  When acic = '04' then do
     i = i + 1
     user1.1.i = xuser1
     dat.1.i = xd||'/'||xm||'/'||xg
     tod.1.i = xho||':'||xmi||':'||xse
     tead.1.i = xtead
     inpa.1.i = xinpa
     user2.1.i = xuser2
     ipc.1.i = xipc
     limit.1.i = xlimit
     lunm.1.i = xlunm
     end
  When acic = '05' then do
     j = j + 1
     user1.2.j = xuser1
     accno.2.j = xaccno
     dat.2.j = xd||'/'||xm||'/'||xg
      tod.2.j = xho||':'||xmi||':'||xse
     tead.2.j = xtead
     user2.2.j = xuser2
     mdsk.2.j = xmdsk
     lunm.2.j = xlunm
     end
  When acic = '06' then do
     k = k + 1
     user1.3.k = xuser1
     accno.3.k = xaccno
     dat.3.k = xd||'/'||xm||'/'||xg
     tod.3.k = xho||':'||xmi||':'||xse
     tead.3.k = xtead
     inpa.3.k = xinpa
     user2.3.k = xuser2
     mdsk.3.k = xmdsk
     ipc.3.k = xipc
     limit.3.k = xlimit
     lunm.3.k = xlunm
     end
  Otherwise nop
  end
end
   queue 'SET MSGM OFF'
   queue 'DEL *'
   queue 'RESERVE 1 N LOGON / AUTOLOG with invalid password :' i
   lin2 = copies('*',70)
   linr = 'RESERVE 2 N USERID   date     time     term inv.pass'
   linr = linr 'AUTOLOG  i.p.c. lim. luname'
   queue linr
   queue 'RESERVE 3 N' lin2
if i > 0 then do
   do y = 1 to i
          r = user1.1.y dat.1.y tod.1.y tead.1.y inpa.1.y user2.1.y ,
              right(ipc.1.y,4) right(limit,1.y,4) right(lunm.1.y,10)
          queue 'INPUT' r
          end
   end
queue 'TOP'
'X ACCNT $LOGON A (PROFILE ACCNT'
queue 'RESERVE 1 N LINK to protected minidisk :' j
if j > 0 then do
   queue 'SET MSGM OFF'
   queue 'DEL *'
   linr = 'RESERVE 2 N USERID   account  date     time     term'
   linr = linr 'OWNER    mdsk luname'
   queue linr
   queue 'RESERVE 3 N' lin2
   do y = 1 to j
   r = user1.2.y accno.2.y dat.2.y tod.2.y tead.2.y user2.2.y mdsk.2.y ,
       right(lunm.2.y,9)
   queue 'INPUT' r
   end
   end
queue 'TOP'
'X ACCNT $LINKS A (PROFILE ACCNT'
queue 'RESERVE 1 N LINK with invalid password :' k
if k > 0 then do
   queue 'SET MSGM OFF'
   queue 'DEL *'
   linr = 'RESERVE 2 N USERID   account  date     time      term inv.pass'
   linr = linr 'OWNER   mdsk pc li luname'
   queue linr
   lin2 = copies('*',76)
   queue 'RESERVE 3 N' lin2
   do y = 1 to k
    r = user1.3.y accno.3.y dat.3.y tod.3.y tead.3.y inpa.3.y user2.3.y,
       mdsk.3.y ipc.3.y limit.3.y lunm.3.y
   queue 'INPUT' r
   end
   end
queue 'TOP'
'X ACCNT $LINKI A (PROFILE ACCNT'
say 'End of job'
exit

ACCNT XEDIT
/* ACCNT XEDIT profile */
'EXTRACT /FTYPE'
'SET CASE M'
'SET CMDL OFF'
'SET TOFEOF OFF'
'SET SCALE OFF'
'SET PREFIX OFF'
'SET LINEND OFF'
'SET MSGLINE OFF'
'SET CURL ON 4'
'COLOR CURLINE DEFAULT NONE NOHIGH'
'SET PF1 FILE'
'SET PF2 TOP'
'SET PF3 QQUIT'
'SET PF4 BOTTOM'
'SET PF5 SORT * 1 8'
if ftype.1 = '$LOGON' then 'SET PF6 SORT * 16 17 13 14 10 11 19 26'
else 'SET PF6 SORT * 25 26 22 23 19 20 28 35'
'SET PF7 BACKWARD'
'SET PF8 FORWARD'
'SET PF9'
'SET PF10'
'SET PF11'
'SET PF12'
'RESER 1 N'
'RESER 2 N'
'RESER 3 N'
'RESER 24 N PF: 1=file 2=top 3=quit 4=bot 5=sort user 6=sort date',
                                                    '7=back 8=forward'
Teodor Jurak
Systems Programmer
Jadrolinija Rijeka (Yugoslavia)    ) Jadrolinija 1988























