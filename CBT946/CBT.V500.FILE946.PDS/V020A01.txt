 VSAM cluster allocation utility
THE PROBLEM
VSAM cluster allocation is a tedious process.  There are basically two issues in
deciding cluster allocation: performance and space utilisation.  Generally, we
want to strike a balance between the two.  One of the most important parameters
that affects both performance and space utilisation is the Control Interval size
(CISIZE).  Letting VSAM select the CISIZE can result in a very inefficient
selection.
There are formulae available for calculating how space efficient a particular
CISIZE is, but doing this for every cluster is very time consuming.
THE SOLUTION
The solution we have developed is to automate the calculation of the CISIZE.
Since we have ISPF installed under VM, we decided to implement the utility in
VM/ISPF and REXX.  ISPF provides a very good medium to implement applications
while REXX provides extensive calculation routines that shorten the code to be
written.
ASSUMPTIONS
Since the utility is written in VM/ISPF/REXX, this assumes that the user has
VM/SP Release 4 or higher and has ISPF installed.  Also, it helps if the user
knows how to implement ISPF applications.
LIMITATIONS
We realise that the utility only calculates for optimum space allocation.  You
will usually end up with large CISIZE suggestions.  Selecting the largest CISIZE
may not be the correct answer, if the file is being used on-line.  In that case,
selecting a reasonable CISIZE (usually smaller, around 4K) is a better
alternative.  By automating the calculation decisions can be made quickly and
easily.
Another limitation is calculating for variable length VSAM clusters.  Because of
the nature of the file, the utility cannot be used effectively for variable
length files.
EXECS, PANELS AND TABLES PROVIDED
The following EXECs have been provided:
1    VSAM - this is the main EXEC procedure used to start the application and is
written in EXEC2.  The EXEC defines the ISPF libraries being used by the utility
and displays the main panel VSAMMSTR.
     If your installation uses ISPF applications, you may discard this EXEC and
call the main panel (VSAMMSTR) from your ISPF application.  Make sure that the
proper ISPF libraries are included in your ISPF start-up procedure.
2    VSAM1 - this EXEC calculates the optimum CISIZE given a particular record
length and device type.  In our installation we only support 3350, 3375 and 3380
devices, but the utility can be modified easily to handle other devices as well.
3    VSAM2 - this EXEC calculates the space requirements given a CISIZE, the
device type and number of records in the file.
4    VSAMLOAD - this EXEC loads the DASD table. The DASD table contains a list
of device types together with some physical characteristics.
The following panels are provided:
1    VSAMMSTR - this is the main panel and is called by the main EXEC (VSAM
EXEC).  It gives you menu choices and can be integrated into your own ISPF menus
if desired.
2    VSAM10 - this panel is displayed by VSAM1 and prompts the user for the
device type and record size of the file.
3    VSAM11 - this panel is displayed by VSAM1 and uses the table display
facility of ISPF to display all available CISIZE specifications sorted according
to space efficiencies.
4    VSAM20 - this panel is displayed by VSAM2 and prompts the user for the
device type, record size, CISIZE and number of records in the file.
5    VSAM21 - this panel is displayed by VSAM2 and displays the results of the
calculation.
The following tables are provided/used;
1    VSAM01 - this message table contains all the error messages displayed by
this application.  You may replace this with your own messages if desired.
2    DASDTAB - this table is loaded by the VSAMLOAD EXEC and contains device
characteristics, such as number of physical records per track (for different-
sized physical records).
PROCEDURE IN IMPLEMENTING THE UTILITY
The following steps may be followed in loading the utility:
1    Encode the panels.  Make sure you do not select a filetype of COPY or MACRO
initially or columns 73 to 80 will contain sequence numbers.
2    Rename all your panels to a filetype of COPY (eg issue the command: RENAME
VSAM* PANEL A = COPY =).
3    Create the panel library.  Use the MACLIB command to create the library.
Issue the following commands:
          MACLIB GEN VSAMP VSAMMSTR
          MACLIB ADD VSAMP VSAM10
          MACLIB ADD VSAMP VSAM11
          MACLIB ADD VSAMP VSAM20
          MACLIB ADD VSAMP VSAM21.
4    Encode the message table.  After encoding, rename the filetype to COPY.
5    Create the message table library by issuing the following command:
          MACLIB GEN VSAMT VSAM01.
6    Create/encode all the EXECs being used.
7    Load the DASD table (DASDTAB).  To do this, you have to invoke the EXEC
VSAMLOAD from ISPF.  This may be done by adding a selection to the main menu
pointing to the EXEC VSAMLOAD (eg CMD(VSAMLOAD)).
8    You are now ready to test the VSAM calculation utility!
MODIFICATIONS TO THE UTILITY
One possible area of modification is to support other types of DASD.  To
understand how to implement the change, you must understand how the DASD table
is being used.  The DASD table contains the following fields:
     TDEVTYPE - device type
     TTRKCYL  - number of tracks per cylinder
     TPREC1   - number of 512-byte records per track
     TPREC2   - number of 1024 byte records per track
     TPREC3   - number of 2048 byte records per track
     TPREC4   - number of 4096 byte records per track.
When you select a particular CISIZE, you implicitly select what physical record
size VSAM will use for the cluster.  In effect, it is the physical record size
that determines the space efficiency for a particular file/device type/record
length combination.
To add new device types, make the following changes:
1    Load a new device table. You will have to determine the data above.  The
data should be available from IBM charts.
2    Modify the panels VSAM10 and VSAM20.  Include the new device types in the
panel and in the validation routine within the panel.
3    Change the message entry VSAM013 to include the new device type.

VSAM EXEC
&TRACE ERR
* THIS IS THE ISPF (SYSTEM PRODUCTIVITY FACILITY) DIALOG MANAGER COMMAND
* EXEC.  BEFORE INVOKING THIS EXEC YOU MUST ISSUE FILEDEFS FOR ANY
* ADDITIONAL PANEL, MESSAGE, TABLES AND/OR SKELETON FILES FROM WHICH
* YOU PLAN TO OPERATE, AS WELL AS FOR THE MACLIB TO BE USED FOR ISPPROF.
* NOTE: IF YOU HAVE INSTALLED CMS FILES AND WISH TO USE THEM INSTEAD
*       OF MACLIBS THEN YOU MAY DELETE THE FILEDEFS FOR THOSE MACLIBS
*       AND INCLUDE THE FOLLOWING:
*       FILEDEF ISPPLIB DISK ISPNULL PANEL * (PERM CONCAT
*       FILEDEF ISPMLIB DISK ISPNULL MESSAGE * (PERM CONCAT
*       FILEDEF ISPTLIB DISK ISPNULL TABLE * (PERM CONCAT
EXECIO 0 CP ( STRING LINK ISPVM 192 1F2 RR RISPVM
SET CMSTYPE HT
ACCESS 1F2 R/R
SET CMSTYPE RT
FILEDEF ISPPLIB DISK VSAMP   MACLIB * (PERM CONCAT
FILEDEF ISPPLIB DISK ISPPLIB MACLIB R (PERM CONCAT
FILEDEF ISPMLIB DISK VSAMM   MACLIB * (PERM CONCAT
FILEDEF ISPMLIB DISK ISPMLIB MACLIB R (PERM CONCAT
FILEDEF ISPTLIB DISK VSAMT   MACLIB * (PERM CONCAT
FILEDEF ISPTLIB DISK ISPTLIB MACLIB R (PERM CONCAT
ISPDCS ISPDCSS ISPVM DMMODE(R)  PANEL(VSAMMSTR )
SET CMSTYPE HT
CP SET IMSG OFF
RELEASE R (DET
 CP SET IMSG ON
SET CMSTYPE RT
&EXIT

VSAM1 EXEC
TRACE OFF
'SET CMSTYPE HT'
'ERASE VSAM WORKFILE A1'
'SET CMSTYPE RT'
ADDRESS ISPEXEC
'ISPEXEC CONTROL ERRORS RETURN'
'ISPEXEC DISPLAY PANEL(VSAM10 )'
IF RC  = 8 THEN EXIT
IF RC ¬= 0 THEN SIGNAL ERROR
ISPEXEC TBOPEN DASDTAB NOWRITE
TDEVTYPE = DDEVTYPE
TRECLEN  = DRECLEN
ISPEXEC TBGET DASDTAB
IF RC ¬= 0 THEN SIGNAL ERROR
WTRKCYL = TTRKCYL
WPREC.1 = TPREC1
WPREC.2 = TPREC2
WPREC.3 = TPREC3
WPREC.4 = TPREC4
ISPEXEC TBEND DASDTAB
WBASE    = WTRKCYL*WPREC.4*4096
TABVARS = '(' TCISIZE TRECTRK TRECCYL TPCTUTIL ')'
ISPEXEC TBCREATE VSAMTAB NOWRITE NAMES TABVARS
WCISIZE = 0
WEND    = 'NO'
DO WHILE WCISIZE < DRECLEN
   CALL CALCCI
END
DO WHILE WEND = 'NO'
   SELECT
      WHEN WCISIZE//4096 = 0
           THEN DO
                   WPRECSZ = 4096
                   WPINDX  = 4
                END
      WHEN WCISIZE//2048 = 0
           THEN DO
                   WPRECSZ = 2048
                   WPINDX  = 3
                END
      WHEN WCISIZE//1024 = 0
           THEN DO
                   WPRECSZ = 1024
                   WPINDX  = 2
                END
      WHEN WCISIZE//512  = 0
           THEN DO
                   WPRECSZ = 512
                   WPINDX  = 1
                END
      OTHERWISE SIGNAL ERROR
   END
   WPRECCI     =  WCISIZE/WPRECSZ
   WLRECCI     = (WCISIZE-10)%DRECLEN
   WLRECTRK    =  WLRECCI*(WPREC.WPINDX)%WPRECCI
   WLRECCYL    =  WLRECCI*(WPREC.WPINDX)*WTRKCYL%WPRECCI
   WPCTUTIL    =  WLRECCYL*TRECLEN*100/WBASE
   NUMERIC DIGITS(4)
   TPCTUTIL    =  WPCTUTIL+0
   TRECTRK     =  RIGHT(WLRECTRK,6)
   TRECCYL     =  RIGHT (WLRECCYL,6)
    TCISIZE     =  RIGHT(WCISIZE,5)
   NUMERIC DIGITS(9)
   QUEUE TRECCYL WCISIZE TRECTRK TPCTUTIL
   CALL CALCCI
END
QUEUE
ADDRESS CMS
'EXECIO * DISKW VSAM WORKFILE A1 0 F 80 (FINIS'
QUEUE 'SORT * D 1 6'
QUEUE 'FILE'
'XEDIT VSAM WORKFILE A1'
'EXECIO * DISKR VSAM WORKFILE A1 (FINIS'
WCTR = QUEUED()
ADDRESS ISPEXEC
DO WCTR
  PULL  WLRECCYL WCISIZE WLRECTRK TPCTUTIL .
  TRECTRK  =  RIGHT(WLRECTRK,6)
  TRECCYL  =  RIGHT(WLRECCYL,6)
  TCISIZE  =  RIGHT(WCISIZE,5)
  ISPEXEC TBADD VSAMTAB
END
ISPEXEC TBTOP VSAMTAB
'ISPEXEC TBDISPL VSAMTAB PANEL(VSAM11 )'
ISPEXEC TBEND VSAMTAB
ADDRESS CMS
'SET CMSTYPE HT'
'ERASE VSAM WORKFILE A1'
'SET CMSTYPE RT'
EXIT
CALCCI:
   IF WCISIZE < 12288
      THEN IF WCISIZE < 8192
              THEN WCISIZE = WCISIZE + 512
              ELSE WCISIZE = WCISIZE + 2048
      ELSE WEND = 'YES'
RETURN
ERROR;
  SAY 'ERROR HAS OCCURRED - LINE ' SIGL
  SAY 'LINE EXECUTING ==> ' SOURCELINE(SIGL)
EXIT

VSAM2 EXEC
TRACE OFF
ADDRESS ISPEXEC
'ISPEXEC CONTROL ERRORS RETURN '
DO FOREVER
  TRL  =''
  TCI  =''
  TDT  =''
  TRN  =''
  WEND = 0
  MSG  = '   '
  DO WHILE WEND < 2
    WEND = 0
   'ISPEXEC DISPLAY PANEL(VSAM20 ) MSG (' MSG ')'
   IF RC   = 8 THEN EXIT
   IF RC ¬=0 THEN SIGNAL ERROR
   IF DCISIZE//512 ¬= 0
      THEN MSG  = 'VSAM016'
      ELSE WEND =  WEND + 1
   IF DCISIZE < DRECLEN
      THEN MSG  = 'VSAM017'
      ELSE WEND = WEND + 1
END
  ISPEXEC TBOPEN DASDTAB NOWRITE
  TDEVTYPE = DDEVTYPE
   WCISIZE  = DCISIZE
  WRECCNT  = DRECCNT
  ISPEXEC TBGET DASDTAB
  IF RC ¬= 0 THEN SIGNAL ERROR
  WTRKCYL = TTRKCYL
  WPREC.1  = TPREC1
  WPREC.2  = TPREC2
  WPREC.3  = TPREC3
  WPREC.4  = TPREC4
  ISPEXEC TBEND DASDTAB
   SELECT
      WHEN WCISIZE//4096 = 0
           THEN DO
                   WPRECSZ = 4096
                   WPINDX  = 4
                END
      WHEN WCISIZE//2048 = 0
           THEN DO
                   WPRECSZ = 2048
                   WPINDX  = 3
                END
      WHEN WCISIZE//1024 = 0
           THEN DO
                   WPRECSZ = 1024
                   WPINDX  = 2
                END
      WHEN WCISIZE//512  = 0
           THEN DO
                   WPRECSZ = 512
                   WPINDX  = 1
                END
      OTHERWISE SIGNAL ERROR
   END
   WPRECCI  =  WCISIZE/WPRECSZ
   WLRECCI  = (WCISIZE-10)%DRECLEN
   WLRECTRK =  WLRECCI*(WPREC.WPINDX)%WPRECCI
   WLRECCYL = WLRECCI*(WPREC.WPINDX)*WTRKCYL%WPRECCI
   DRECTRK  = WLRECTRK
   DRECCYL  = WLRECCYL
   IF WRECCNT//DRECTRK = 0
      THEN DTRK = WRECCNT/DRECTRK
      ELSE DTRK = WRECCNT/DRECTRK + 1
   IF WRECCNT/DRECCYL = 0
      THEN DCYL = WRECCNT/DRECCYL
      ELSE DCYL = WRECCNT/DRECCYL + 1
   DTRK = TRUN(DTRK)
   DCYL = TRUNC(DCYL)
   'ISPEXEC DISPLAY PANEL(VSAM21 )'
  END
EXIT
ERROR;
  WRC = RC
  SAY 'ERROR HAS OCCURRED - LINE ' SIGL 'RETURN CODE IS ' WRC
  SAY ' LINE EXECUTING ==> ' SOURCELINE(SIGL)
EXIT

VSAMLOAD EXEC
ADDRESS ISPEXEC
ISPEXEC CONTROL ERRORS CANCEL
TKEY    = "(" TDEVTYPE ")"
TABVARS = "(" TTRKCYL TPREC1 TPREC2 TPREC3 TPREC4 ")"
ISPEXEC TBCREATE DASDTAB WRITE REPLACE KEYS TKEY NAMES TABVARS
TDEVTYPE = 3350
TTRKCYL  = 30
TPREC1   = 27
TPREC2   = 15
 TPREC3   = 8
TPREC4   = 4
ISPEXEC TBADD DASDTAB
TDEVTYPE = 3375
TTRKCYL  = 12
TPREC1   = 40
TPREC2   = 25
TPREC3   = 14
TPREC4   = 8
"ISPEXEC TBADD DASDTAB"
TDEVTYPE = 3380
TTRKCYL  = 15
TPREC1   = 46
TPREC2   = 31
TPREC3   = 18
TPREC4   = 10
ISPEXEC TBADD DASDTAB
"ISPEXEC TBCLOSE DASDTAB"
EXIT

PANEL VSAMMSTR
%--------------------VSAM CLUSTER OPTIMISATION ----------------------
%OPTION ===>-ZCMD                                                    +
%
%                                                      +USERID   - &ZUSER
% O +ISPF PARMS - Specify terminal and user parameters +TIME     - &ZTIME
% 1 +CI SIZE    - Calculate optimum CI size            +TERMINAL - &ZTERM
% 2 +SPACE      - Calculate space requirements         +PF KEYS  - &ZKEYS
% X +EXIT       - Terminate ISPF using list/log defaults
%
+Enter%END+command to terminate application.
%
)PROC
  &ZSEL = TRANS( TRUNC (&ZCMD,'-')
                0,'PANEL(ISPOPTA)
                1,'CMD(VSAM1)'
                2,'CMD(VSAM2)'
            /***************************************************/
            /* Add other applications here.                    */
            /*                                                 */
            /***************************************************/
              ' ',' '
                X,'EXIT'
                *,'?' )
)END

PANEL VSAM10
%---------------------VSAM CI SIZE CALCULATION ----------------------
%
%ENTER/VERIFY PARAMETERS BELOW                                        +
%
+   RECORD LENGTH  %===>_TRL   +
%
+   DEVICE TYPE    %===>_TDT  +
)PROC
  &DRECLEN  = &TRL
  &DDEVTYPE = &TDT
  VER (&DRECLEN,NB,NUM MSG=VSAM011)
  VER (&DRECLEN,RANGE,1,12281 MSG=VSAM012)
  VER (&DDEVTYPE,NB,LIST,3350,3375,3380 MSG=VSAM013)
)END
PANEL VSAM11
)ATTR
  @ TYPE(OUTPUT) INTENS(LOW)
)BODY
%------------------VSAM CI SIZE CALCULATION CHART -------------------
 %OPTION  ===>_ZCMD                               %SCROLL ===>_AMT +
+
+       OPTIONS SELECTED:  RECORD LENGTH = &TRECLEN
+                          DEVICE TYPE   = &TDEVTYPE
+
+       CISIZE        RECORDS/        RECORDS/      PERCENTAGE
+                      TRACK          CYLINDER      UTILISATION
+
)MODEL
        @Z            @Z              @Z                 @Z
)INIT
.CURSOR=ZCMD
&AMT='PAGE'
&ZCMD=' '
.ZVARS='(TCISIZE TRECTRK TRECCYL TPCTUTIL)'
)END

PANEL VSAM20
%------------------VSAM CLUSTER SPACE CALCULATION -------------------
%
%ENTER/VERIFY PARAMETERS BELOW
%
+   RECORD LENGTH     %===>_TRL   +
%
+   CI SIZE           %===>_TCI   +
%
+   DEVICE TYPE       %===>_TDT   +
%
+   NUMBER OF RECORDS %===>_TRN       +
)PROC
  &DRECLEN  = &TRL
  &DCISIZE  = &TCI
  &DDEVTYPE = &TDT
  &DRECCNT  = &TRN
  VER (&DRECLEN,NB,NUM,MSG=VSAM011)
  VER (&DRECLEN,RANGE,1,12281,MSG=VSAM012)
  VER (&DCISIZE,NB,NUM,MSG=VSAM014)
  VER (&DDEVTYPE,NB,LIST,3350,3375,3380,MSG=VSAM013)
  VER (&DRECCNT,NB,NUM,MSG=VSAM015)
)END

PANEL VSAM21
%------------------VSAM CLUSTER SPACE CALCULATION -------------------
%
+   OPTIONS SELECTED :
%
+      RECORD LENGTH        %===> &DRECLEN
+      CI SIZE              %===> &DCISIZE
+      DEVICE TYPE          %===> &DDEVTYPE
+      NUMBER OF RECORDS    %===> &DRECCNT
%
%
+   SPACE REQUIREMENTS :
%
+      RECORDS PER TRACK    %===> &DRECTRK
+      RECORDS PER CYLINDER %===> &DRECCYL
+      TRACK ALLOCATION     %===> &DTRK
+      CYLINDER ALLOCATION  %===> &DCYL
)END

MESSAGE TABLE VSAM01
VSAM011 'RECORD LENGTH ERROR' .ALARM=YES
'RECORD LENGTH IS MISSING OR NOT NUMERIC'

VSAM012 'INVALID RECORD LENGTH' .ALARM=YES
'RECORD LENGTH SHOULD BE BETWEEN 1 AND 12281'

VSAM013 'INVALID DEVICE TYPE' .ALARM=YES
'DEVICE TYPE SHOULD BE 3350, 3375 OR 3380'

VSAM014 'INVALID CI SIZE' .ALARM=YES
'CI SIZE SHOULD BE NUMERIC'

VSAM015 'INVALID RECORD COUNT' .ALARM=YES
'RECORD COUNT SHOULD BE NUMERIC'

VSAM016 'INCORRECT CI SIZE' .ALARM=YES
'CI SIZE SHOULD BE DIVISIBLE BY 512'

VSAM017 'CI SIZE LESS THAN RECORD SIZE' .ALARM=YES
'CI SIZE SHOULD BE AT LEAST EQUAL TO RECORD SIZE'
Stewart S Tan
Head of Technical Support
Bank of the Philippine Islands (Philippines) ) Stewart S Tan 1988
















































