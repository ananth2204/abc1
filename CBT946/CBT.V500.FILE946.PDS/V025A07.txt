 HEXDUMP EXEC
The purpose of the EXEC is to provide a file hexdump facility which prints out
the hex and character details on the same line in a similar way to an ordinary
VM dump.  If the file is very large and only a small part is needed the EXEC can
be instructed to dump only the section required.  The EXEC works just as well
with variable-length files.
The only major constraint on the EXEC is that the file's record length must not
exceed 256 bytes.  This is because the EXEC uses EXECIO as the means of reading
the file.  For the EXEC to run completely successfully the PTOP EXEC needs to be
available.  This EXEC is used to simulate the CMS top print heading.
The command line format of the EXEC should be as follows:
     HEXDUMP filename  filetype  filemode  (EXT
The (EXT should only be specified if an extract of the file is to be dumped.  If
it is supplied, the EXEC will then prompt for the start position and for how
many records are to be dumped.
Examples:
   HEXDUMP TEST DATA A
   HEXDUMP TEST DATA A (EXT
   HEXDUMP TEST DATA
   HEXDUMP TEST DATA (EXT
If the file mode is omitted it will default to 'A'.
HEXDUMP EXEC
/* THIS EXEC TAKES A FILE AND PRODUCES A HEXDUMP LISTING IN A    */
/* FORMAT SIMILAR TO A MACHINE DUMP (HEX AND CHARACTER INFO ON   */
/* SAME LINE). A RESTRICTION IS THAT ONLY FILES UP TO A RECORD   */
/* LENGTH OF 256 CAN BE PROCESSED.                               */
ARG FNAME FTYPE FMODE P1 P2 .
FORR='EOF'
FROM=1
/* CHECK ALL PARAMETERS AND PROMPT FOR THEM IF OMITTED           */
DO WHILE FNAME='' | FTYPE=''
   IF FNAME='' THEN DO
      SAY 'ENTER FILENAME'
      PULL FNAME
   END
   IF FTYPE='' THEN DO
      SAY 'ENTER FILETYPE'
      PULL FTYPE
   END
END
IF SUBSTR(FMODE,1,1)='(' THEN DO
   P2=P1
   IF FMODE¬='(' THEN P2=SUBSTR(FMODE,2)
   FMODE='A'
   PP='Y'
END
IF SUBSTR(FMODE,2,1)='(' THEN DO
   P2=SUBSTR(FMODE,3)
   FMODE=SUBSTR(FMODE,1,1)
   PP='Y'
END
IF SUBSTR(P1,1,1)='(' THEN DO
   IF P1¬='(' THEN P2=SUBSTR(P1,2)
   PP='Y'
END
STATE FNAME FTYPE FMODE              /* CHECK THAT THE FILE EXISTS */
IF RC>0 THEN DO
   SAY 'FILE NOT FOUND'
   EXIT
END
/* GET DETAILS OF THE FILE (LRECL RECFM ETC)                       */
LIST FNAME FTYPE FMODE '('DATE STACK
PULL FNAME FTYPE FMODE FRM LR RECS BLKS .
/* IS THE FILE TOO LONG IF SO NO CAN DO.                           */
IF LR>256 THEN DO
   SAY 'FILE RECORD LENGTH > 256 FUNCTION ABORTED'
    EXIT
END
IF PP='Y' THEN DO
   /* THE USER WISHES TO ONLY HEX A RESTRICTED PART OF THE FILE SO */
   /* ASK FOR THE START POINT AND FOR HOW MANY RECORDS TO CONTINUE */
   IF P2¬='EXT' THEN DO
      SAY 'THE ONLY ACCEPTABLE PARAMETER IS "EXT" (FILE EXTRACT)'
      SAY 'PLEASE RETYPE'
      EXIT
   END
   SAY 'PLEASE ENTER WHERE YOU WISH TO START'
   SAY ' (RECORD NO.) THE DUMP FROM'
   SAY 'ENTER NULL IF YOU WISH TO START FROM THE BEGINNING.'
   PULL FROM
   SAY 'PLEASE ENTER HOW MANY RECORDS TO CONTINUE THE DUMP FOR'
   SAY 'ENTER NULL IF YOU WISH TO CARRY ON UNTIL EOF.'
   PULL FORR
   IF FROM='' THEN FROM=1
   IF FORR='' THEN FORR='EOF'
   LINE=0
END
/* SET UP LISTING TITLES                                           */
TITLE1='FORMAT' FRM ' LRECL' LR ' NO. RECORDS' RECS '  BLOCKS' BLKS
TITLE2='HEX CONVERSION DATA                                      '
                             'FILE DATA.'
LR=LR+1
/* START LISTING BUY SUPPLING TITLES FOR FIRST PAGE                */
PAGE=0
CALL NPAGE
/* GET FIRST RECORD OF THE FILE TO BE HEXED !                      */
EXECIO 1 DISKR FNAME FTYPE FMODE FROM
IF RC=2 THEN DO
   SAY 'UNEXPECTED END OF FILE REACHED'
   SAY 'FROM' FROM 'VALUE EXCEEDS THE NO OF RECORDS' RECS
   CLOSE PRINT
   EXIT
END
/* THIS LOOP READS DOWN THE FILE AND CALLS THE CONVERSION          */
/* ROUTINE IF THE USER HAS SPECIFIED A 'FOR' PARAM                 */
IF FORR¬='EOF' THEN DO
   DO WHILE LINE¬=FORR
      CALL HEXONE
      QUEUE
      CALL PRNT
      EXECIO 1 DISKR FNAME FTYPE FMODE
      IF RC=2 THEN DO
         LINE=FORR
         SAY 'THE FOR VALUE' FORR 'GOES BEYOND'
         SAY  ' THE EOF - DUMP TERMINATED'
         ITERATE
      END
      LINE=LINE+1
   END
END
/* THIS LOOP READS DOWN THE FILE AND CALLS THE CONVERSION ROUTINE  */
/* IF THE USER HASN'T SPECIFIED A 'FOR' PARAM                      */
IF FORR='EOF' THEN DO
   DO WHILE RC¬=2
      CALL HEXONE
      QUEUE
      CALL PRNT
      EXECIO 1 DISKR FNAME FTYPE FMODE
   END
END                                            /* END OF ROUTINE   */
CLOSE PRINT
DESBUF
 EXIT
/* MAIN HEX CONVERSION LOOP (WORKS ON ONE RECORD AT A TIME)        */
HEXONE:
   PULL RECORD
   CC=1
   C=1
   HREC=C2X(RECORD)
   DO WHILE CC<LR
      SHREC=SUBSTR(HREC,C,80)
      RREC=SUBSTR(RECORD,CC,40)
      CC=CC+40
      C=C+80
      QUEUE SHREC RREC
      CALL PRNT
   END
   RETURN
/* NEW PAGE SUBROUTINE TO WRITE TITLES ETC                         */
NPAGE:
   PAGE=PAGE+1
   /* CALL PTOP EXEC TO GET CMS LIKE TOP HEADING TO PRINT          */
   EXEC PTOP FNAME FTYPE FMODE PAGE
   QUEUE
   QUEUE TITLE1
   QUEUE
   QUEUE TITLE2
   QUEUE
   EXECIO 5 PRINT
   PL=8
   RETURN
/* ONCE RECORD HAS BEEN HEXED WRITE TO LISTING. BUT CHECK FIRST    */
/* THAT OUTPUT DOES NOT OVERFLOW THE PAGE (CALL NPAGE IF SO        */
PRNT:
   IF PL>60 THEN DO
      PULL PLINE
      CALL NPAGE
      QUEUE PLINE
   END
   PL=PL+1
   EXECIO 1 PRINT
   RETURN

PTOP EXEC
/* THIS EXEC WRITES OUT A PRINT LINE WHICH COPIES THE CMS TYPE     */
/* PAGE HEADING LINE. FILE NAME, FILE TYPE, FILE MODE              */
/*  AND PAGE NUMBER SHOULD BE PASSED TO IT.                        */
ARG FNAME FTYPE FMODE PAGE
IF FNAME='' THEN FNAME='????????'
IF FTYPE='' THEN FTYPE='????????'
IF FMODE='' THEN FMODE='?'
IF PAGE='' THEN PAGE=1
TITLE1= 'FILE:' FNAME FTYPE FMODE '    COMPANY NAME VM/SP 3.1'
TITLE2=TITLE1 '                 PAGE' PAGE
QUEUE TITLE2
'EXECIO 1 PRINT (CC 1'
QUEUE
EXECIO 1 PRINT
EXIT
R J Howell
Senior Systems Programmer
W H  Smith & Son Ltd (UK)      ) W H  Smith & Son Ltd 1988






