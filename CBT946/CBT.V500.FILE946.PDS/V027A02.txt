 Advanced global command
Recently, after installing VS/FORTRAN in tandem with two other versions of
FORTRAN, I ran into a CMS literacy problem with the GLOBAL command.  My users
had to allocate MACLIBs, TXTLIBs and LOADLIBs according to what version of
FORTRAN they were using.  It appeared that it would take hours' worth of
documentation and training to make them able to move from one set of GLOBAL
definitions to another.
While teaching a user how it's done, he complained, "Why doesn't the computer
figure it out?  I don't care which globals are system ones, just let me tell it
which globals I want assigned.  I thought this was the Eighties".
What resulted was a set of REXX EXECs called GLOBAMAC, GLOBATXT, and GLOBALOD.
Ultimately, the GLOBAL options MACLIB, TXTLIB, and LOADLIB were all improved
without losing the slightest function.
When my users started using these new EXECs they were overjoyed: no more
problems adding new entries to system established settings; no more problems
removing library assignments or changing their sequence; user EXECs could be
coded so that they worked with any version of FORTRAN.
Only the source code for the MACLIB version called GLOBAMAC follows.  To get all
three just code it, file it, and then edit it twice with the following commands.
XEDIT GLOBAMAC EXEC A
FN GLOBATXT
c/MAC/TXT/ * *
Put your shop's standard into the documentation at end of program.
FILE GLOBATXT
XEDIT GLOBAMAC EXEC A
FN GLOBALOD
c/MACLIB/LOADLIB/ * *
c/MAC/LOD/ * *
Put your shop's standard into the documentation at end of program.
FILE GLOBALOD

GLOBAMAC EXEC
/* */
ARG ARGSTRING
DEBUG = ''
IF (FIND(ARGSTRING,'?')) = 1 THEN SIGNAL DOC;
X = FIND(ARGSTRING,'*DEBUG')
IF X = 0 THEN SIGNAL BEGIN
    ELSE DO;
    ARGSTRING = DELWORD(ARGSTRING,X,1)
    TRACE (I)
    DEBUG = '*DEBUG'
    END;
IF (FIND(ARGSTRING,'?')) = 1 THEN SIGNAL DOC;
SIGNAL BEGIN
TSTPAUSE: PROCEDURE EXPOSE DEBUG
IF DEBUG = '*DEBUG' THEN DO;
    SAY 'PAUSE: ENTER HX TO CANCEL'
    PULL Z
    IF Z = 'HX' THEN EXIT 999
    END;
RETURN
BEGIN:
NEWLIBS = ARGSTRING
IF (FIND(NEWLIBS,'RESET')) > 0 THEN DO
    NEWLIBS = DELWORD(NEWLIBS,(FIND(NEWLIBS,'RESET')),1)
    'GLOBAL MACLIB'
    END
NEWCNT = WORDS(NEWLIBS)
IF NEWCNT = 0 THEN SIGNAL ERR005
'QUERY MACLIB (STACK LIFO)'
PULL MACLIBS
/* DROP LOGIC FOLLOWS */
DROPNDX = (FIND(NEWLIBS,'DROP'))
NEWWRDS = WORDS(NEWLIBS)
IF (DROPNDX + 1) > NEWWRDS THEN SIGNAL ERR040
 IF DROPNDX > 0 THEN DO
    DROPWRD = (WORD(NEWLIBS,(DROPNDX + 1)))
    NEWLIBS = (DELWORD(NEWLIBS,DROPNDX,2))
    DROPNDX = (FIND(MACLIBS,DROPWRD))
    IF DROPNDX > 0 THEN DO
        MACLIBS = (DELWORD(MACLIBS,DROPNDX,1))
        'GLOBAL MACLIB' (SUBWORD(MACLIBS,3,12))
        SAY 'GLOBAMAC - MACLIB NAMED' DROPWRD 'WAS DROPPED FROM GLOBAL.'
        END
        ELSE
        SAY 'GLOBAMAC - DROP FAILED FOR' DROPWRD||'. NOT FOUND IN'
        SAY 'THE MACLIB GLOBAL.'
    END
NEWCNT = WORDS(NEWLIBS)
IF NEWLIBS = '' THEN SIGNAL EXIT
/* DROP LOGIC ENDS HERE */
DO CNT = 1 FOR NEWCNT
    IF (FIND(MACLIBS,(WORD(NEWLIBS,CNT)))) > 0 THEN
    MACLIBS = DELWORD(MACLIBS,(FIND(MACLIBS,(WORD(NEWLIBS,CNT)))),1)
    END
OLDLIBS = (SUBWORD(MACLIBS,3,8))
OLDCNT = (WORDS(OLDLIBS))
IF OLDLIBS = 'NONE' THEN OLDCNT = 0
DO CNT = 1 FOR NEWCNT
    'STATE' (WORD(NEWLIBS,CNT)) 'MACLIB *'
    IF RC ¬= 0 THEN SIGNAL ERR020
    END
IF (OLDCNT + NEWCNT) > 8 THEN SIGNAL ERR010
IF (WORD(MACLIBS,3)) = 'NONE' THEN DO
    'GLOBAL MACLIB' NEWLIBS
    SIGNAL EXIT
    END
'GLOBAL MACLIB' OLDLIBS NEWLIBS
IF RC ¬= 0 THEN SIGNAL ERR030
EXIT:
RCHOLD = RC
'QUERY MACLIB (STACK LIFO)'
PULL MACLIBS
LIBSSET = (SUBWORD(MACLIBS,3,8))
SAY 'GLOBAMAC - SETTING IS NOW "GLOBAL MACLIB' LIBSSET||'".'
EXIT RCHOLD
DOC:
'VMFCLEAR'
SAY 'REXXNAME: GLOBAMAC'
SAY
SAY 'FUNCTION: ADDS SPECIFIED MACLIBS TO THE CURRENT GLOBAL ASSIGNMENT.'
SAY
SAY 'FORMAT:   ENTER COMMAND AS SHOWN BELOW.'
SAY
SAY '          GLOBAMAC &LIBNAMS   < RESET >   < DROP &LIBNAME >'
SAY '     <   >     -DO NOT CODE THE BRACKETS < >, '
SAY '     MEANS FIELDS WITHIN ARE OPTIONAL.'
SAY '   &LIBNAMS  -ENTER THE NAMES OF MACLIBS YOU WANT CONCATINATED TO'
SAY '              THE CURRENT MACLIBS GLOBAL ASSIGNMENT.'
SAY '              NOTE, NO &LIBNAMS JUST DISPLAYS CURRENT ASSIGNMENT.'
SAY ' RESET   -OPTIONAL, IT CLEARS THE GLOBAL BEFORE SETTING THE'
SAY '              MACLIB NAMES.'
SAY ' DROP &LIBNAME -OPTIONAL. IT DROPS MACLIBS SO YOU CAN FIT IN MORE'
SAY '              IMPORT ONES.'
SAY
SAY 'DESCRIBE: THIS EXEC READS THE CURRENT MACLIB GLOBAL SETTING AND  '
SAY '          ADDS NEW MACLIB NAMES ACCORDING TO HOW MANY'
SAY '         SLOTS ARE LEFT.  THE MAXIMUM NUMBER OF GLOBAL SLOTS    '
SAY '          THAT CAN BE ASSIGNED AT ANY ONE TIME ARE 8.'
SAY
SAY 'NOTICE:   THE GLOBALS CAN BE MANUALLY TYPED IN BY THE USER.'
 SAY '          ENTER AS SHOWN:  GLOBAL MACLIB VSF2FORT CMSLIB TSOLIB'
SAY 'EXAMPLE:  GLOBAL VSF2FORT CMSLIB TSOLIB'
EXIT 000
ERR005:
SAY 'GLOBAMAC - NO MACLIB NAMES WERE ENTERED FOR ASSIGNMENT.'
RC = 005
SIGNAL EXIT
ERR010
SAY 'GLOBAMAC - THE MACLIB NAME MAXIMUM OF 8 IS EXCEEDED.'
RC = 010
SIGNAL EXIT
ERR020
SAY 'GLOBAMAC - UNABLE TO FIND A MACLIB NAMED "'||(WORD(NEWLIBS,CNT))
'MACLIB" ON ANY DISK.'
SAY 'GLOBAMAC - REQUEST CANCELLED!'
RC = 020
SIGNAL EXIT
ERR030:
SAY 'GLOBAMAC - GLOBAL COMMAND FAILED.  CHECK DISK ACCESSES.'
SAY 'GLOBAMAC -  COMMAND EX. ( GLOBAL MACLIB' OLDLIBS NEWLIBS ')'
RC = 030
SIGNAL EXIT
ERR040:
SAY 'GLOBAMAC - GLOBAL DROP COMMAND ERROR. NO OPERAND FOUND.'
SAY 'GLOBAMAC - COMMAND EX. ( GLOBAMAC DROP LIBRNAME )'
RC = 040
SIGNAL EXIT
Marc Vincent Irvin
Senior Programming Specialist
Norden Systems Inc (USA)      ) Norden Systems 1988




































