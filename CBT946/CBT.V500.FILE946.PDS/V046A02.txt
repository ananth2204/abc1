Recovering erased files (continued)

This month we conclude the article that describes how to
recover erased files from mini-disks.

 MNT9020  EQU   *
          IC    R15,WRKCTL              load rc from WRK block
          B     MNT9500
 MNT9500  EQU   *
          CLI   DIRCHN,C'Y'             directory changed ?
          BNE   MNT9550
          DMSKEY NUCLEUS                set protection key NUCLEUS
          MVC   0(64,R4),TEMP           reset the active directory
          MVI   DIRCHN,C'N'             directory rebuild
          DMSKEY RESET                  reset storage protection key
 MNT9550  EQU   *
          LR    R5,R15                  save last rc
          L     R3,FREADR               was the storage released ?
          C     R3,=F'0'
          BE    MNT9600                 yes, all right
 *                                      else -> release the storage
          L     R4,RECSIZE
          CMSSTOR RELEASE,BYTES=(R4),ADDR=(R3),MSG=NO,ERROR=MNT9999
          L     R3,FREADR1              load address of free storage
          C     R3,=F'0'
          BE    MNT9600                 yes, all right
          CMSSTOR RELEASE,BYTES=(R4),ADDR=(R3),MSG=NO,ERROR=MNT9999
 MNT9600  EQU   *
          L     R3,=A(MFILE)            load address of message file
          L     R4,=A(INLINE)           load address of input file
          FSREAD (R3),BUFFER=(R4),RECFM=F,BSIZE=76,RECNO=(R5)
          LTR   R15,R15                 read message, test rc
          BNZ   MNT9900                 error
          C     R5,=F'9'                message 9 ?
          BNE   MNT9700                 no, continue with display
          XR    R5,R5
          MVC   14(8,R4),INAME          put fn, ft fm into message
          MVC   23(8,R4),ITYPE
          MVC   32(1,R4),IMODE
 MNT9700  EQU   *
          L     R3,=A(OUTLINE)          load address of output line
          WRTERM (R3),80                write the message
 MNT9900  EQU   *
          LR    R15,R5                  load last rc into GPR 15
          B     MNT9999                 jump to end-of-job label
 MNT9999  EQU   *
          LA    R2,ION                  execute: SET IMSG ON
          LA    R3,IONL                 load length of the command
          DC    X'83',X'23',X'0008'     issue diagnose x'8'
          L     R13,RECOVER1            end of program
          L     R14,12(R13)             load GPR 14
          LM    R0,R12,20(R13)          restore all general registers
          BR    R14                     return to CMS
          EJECT
 *   Work block, try to recover the file.                           *
          SPACE 1
 WRK      SUBRT WRKEX
          XR    R2,R2                   base address for NUCON is 0
          USING NUCON,R2
          L     R3,IADT                 load address of the 1st ADT
          USING ADTSECT,R3              use this address as base for ADT
 WRK0100  EQU   *
          CLC   ADTM(1),IMODE           is it the ADT for required disk
          BE    WRK0300                 yes, fm matched
          L     R4,ADTPTR               else -> load pointer to next ADT
          C     R4,=F'0'                is there another one ?
          BE    WRK9000                 end of chain, disk not accessed
          LR    R3,R4                   reload this address as base for
          B     WRK0100                 next ADT and repeat
 WRK0300  EQU   *
          L     R4,ADTDBSIZ
          ST    R4,RECSIZE              store as record size
          ST    R4,RD+4                 store in CCW chain (bytes count)
          L     R5,=F'150'              ... for blksize=4096
          ST    R5,RECNUMB              number of records per cylinder
          L     R5,=F'10'
          ST    R5,HEADCNT              records per header
          C     R4,=F'4096'
          BE    WRK0350                 okay, right value
          L     R5,=F'270'              ... for blksize=2048
          ST    R5,RECNUMB
          L     R5,=F'18'
          ST    R5,HEADCNT              records per header
          C     R4,=F'2048'
          BE    WRK0350
          L     R5,=F'465'              ... for blksize=1024
          ST    R5,RECNUMB
          L     R5,=F'31'
          ST    R5,HEADCNT              records per header
          C     R4,=F'1024'
          BNE   WRK9700
 WRK0350  EQU   *
          L     R4,ADTDTA               load the device table address
          XR    R5,R5                   for this MDISK
          LH    R5,0(R4)                load the virtual address of the
          ST    R5,VIRTADR              MDISK and save it
          XR    R5,R5
          LH    R5,2(R4)                load disk type
          SLL   R5,24                   erase the first 24 bits
          SRL   R5,24
          C     R5,=XL4'0000000E'       3380 ?
          BNE   WRK9600
          L     R4,RECSIZE              allocate storage
          CMSSTOR OBTAIN,BYTES=(R4),MSG=NO,ERROR=WRK9200
          ST    R1,FREADR1              save start address of buffer
          AR    R1,R4                   compute address of end of buffer
          ST    R1,FREADR1E             save it
          L     R4,RECSIZE              allocate storage
          CMSSTOR OBTAIN,BYTES=(R4),MSG=NO,ERROR=WRK9200
          ST    R1,FREADR               save address
          AR    R1,R4                   compute address of end of buffer
          ST    R1,FREADRE              save it
          MVI   REC7,C'N'               reset flag: second record read
 WRK0400  EQU   *
          L     R1,FREADR
          ST    R1,RD                   store as target address for I/O
          MVI   RD,X'06'                restore the CCW command code
          L     R5,VIRTADR              load virtual address of device
          L     R6,=A(CCWCHAIN)         load address of CCW chain
          L     R15,=F'1'               number of read/writes in chain
          DC    X'83',X'56',X'0018'     issue diagnose x'18' (DASD I/O)
          LTR   R15,R15                 I/O completed ?
          BNZ   WRK9100                 no, error occured
          L     R10,FREADR
 WRK0450  EQU   *
          C     R10,FREADRE             end of buffer ?
          BNL   WRK0455
          L     R9,0(R10)               address of record with
          CLI   0(R10),X'00'            only 0 0 4 or 0 0 5 written ?
          BE    WRK0458                 no, continue
          XR    R9,R9                   zero gpr 9
          ST    R9,4(R10)               set stop mask
          L     R9,=F'4'                set rec number
          CLI   REC7,C'Y'               second read of allocation map ?
          BNE   WRK0458
          L     R9,=F'5'                set rec number
 *                                      directory data
 WRK0458  EQU   *
          C     R9,=F'0'                no more data ?
          BNE   WRK0460                 data found, continue
 WRK0455  EQU   *
          CLI   REC7,C'Y'               data not found, rec 7 read ?
          BE    WRK9300                 yes, file not found
          MVC   SK(7),=XL7'00000000000007' change seek address
          MVI   REC7,C'Y'               set flag: last chance
          B     WRK0400                 repeat I/O
 WRK0460  EQU   *
          XR    R8,R8                   zero GPR 8
          D     R8,RECNUMB              divide R8/R9 by RECNUMB
          STC   R9,SK+3                 store cylinder number
          LR    R9,R8                   reload rest
          XR    R8,R8                   zero GPR 8
          D     R8,HEADCNT              divide R8/R9 by HEADCNT
          STC   R9,SK+5                 store header
          STC   R8,SK+6                 store record
          L     R1,FREADR1              load data buffer address
          ST    R1,RD                   new data address
          MVI   RD,X'06'                restore the CCW command code
          L     R5,VIRTADR              load virtual address of device
          L     R6,=A(CCWCHAIN)         load address of CCW chain
          L     R15,=F'1'               number of read/writes in chain
          DC    X'83',X'56',X'0018'     issue diagnose x'18' (DASD I/O)
          LTR   R15,R15                 I/O completed ?
          BNZ   WRK9100                 no, error occured
          L     R4,ADTFDA               load address of active file
 *                                      directory (in storage)
          L     R5,FREADR1              load address of the read
 *                                      directory from disk
          L     R7,=A(FILETBL)          load address of the test table
 WRK0500  EQU   *
          TRT   0(16,R5),0(R7)          search for 1st file id
          BZ    WRK0600                 found
          LA    R5,16(R5)               next entry
          C     R5,FREADR1E
          BL    WRK0500                 repeat
          B     WRK0650                 read next record
 WRK0600  EQU   *
          CLC   0(16,R5),INAME          compare the FST entry with fn
          BE    WRK0700                 file found, it is the backup dir
          LA    R5,64(R5)               not found, next entry
          C     R5,FREADR1E
          BNL   WRK0650                 read next record
          CLC   0(16,R5),KX00           end of table ?
          BNE   WRK0600                 no, continue ...
 WRK0650  EQU   *
          LA    R10,4(R10)              next record number
          B     WRK0450                 repeat I/O and search for file
 WRK0700  EQU   *
          L     R7,=A(FILETBL)          now find the first file id
          TRT   0(16,R4),0(R7)          in the active directory
          BZ    WRK0800                 file id found
          LA    R4,16(R4)               not found continue.
          B     WRK0700
 WRK0800  EQU   *
          MVC   TEMP(64),0(R4)          save the old file id
          MVC   TEMP1(1),ADTFLG3        save the 3rd flag from adt
          MVI   DIRCHN,C'N'             directory changed
          DMSKEY NUCLEUS                change storage protect key
          MVC   0(64,R4),0(R5)          put the new file id into act dir
          MVI   ADTFLG3,X'00'           set this flag to 00
 *                                      because the entries in FST are
 *                                      not sorted now
          MVI   DIRCHN,C'Y'             directory changed
          DMSKEY RESET                  reset storage protection key
          LA    R8,SPOOL                execute: SPOOL PUN *
          LA    R9,SPOOLL               load length of the command
          DC    X'83',X'89',X'0008'     issue diagnose x'8'
          L     R1,=A(PUNCH)            load address of CMS DISK DUMP
          SVC   202                     execute it by SVC 202
          DC    AL4(WRK9400)            error address
          XR    R15,R15                 reset GPR 15
          DMSKEY NUCLEUS                set protection key NUCLEUS
          MVC   0(64,R4),TEMP           reset the active directory
          MVC   ADTFLG3(1),TEMP1        reset adtflag
          MVI   DIRCHN,C'N'             directory rebuild
          DMSKEY RESET                  reset storage protection key
          L     R4,FREADR               load address of free storage
          L     R5,RECSIZE              load number of bytes
 *                                      release storage
          CMSSTOR RELEASE,BYTES=(R5),ADDR=(R4),MSG=NO,ERROR=WRK9500
          XR    R5,R5
          ST    R5,FREADR               reset address
          L     R4,FREADR1              load address of free storage
          L     R5,RECSIZE              number of bytes
 *                                      release storage
          CMSSTOR RELEASE,BYTES=(R5),ADDR=(R4),MSG=NO,ERROR=WRK9500
          XR    R5,R5
          ST    R5,FREADR1              reset address
          MVI   WRKCTL,X'09'            load rc=9, job ended
          B     WRK9999                 branch over error handling
 WRK9000  EQU   *
          MVI   WRKCTL,X'03'            disk not accessed
          B     WRK9999
 WRK9100  EQU   *
          MVI   WRKCTL,X'04'            I/O error
          LR    R1,R15                  save last rc from i/o
          B     WRK9999
 WRK9200  EQU   *
          MVI   WRKCTL,X'05'            insufficient storage
          B     WRK9999
 WRK9300  EQU   *
          MVI   WRKCTL,X'06'            file not found
          B     WRK9999
 WRK9400  EQU   *
          MVI   WRKCTL,X'07'            punch error
          B     WRK9999
 WRK9500  EQU   *
          MVI   WRKCTL,X'08'            error by CMSSTOR RELEASE
          B     WRK9999
 WRK9600  EQU   *
          MVI   WRKCTL,X'0A'            non supported DASD type
          B     WRK9999
 WRK9700  EQU   *
          MVI   WRKCTL,X'0B'            non supported BLKSIZE
          B     WRK9999
 WRK9999  EQU  *                        end of work block
          B     WRKEX
          EJECT
 *   Help block, display the help file                              *
          SPACE 1
 HLP      SUBRT HLPEX
          L     R3,=A(HFILE)            load address of help file
          L     R4,=A(OUTLINE)          address of output line
 HLP100   EQU   *
          FSREAD (R3),BUFFER=(R4),BSIZE=80,RECFM=F
          LTR   R15,R15                 test rc
          BZ    HLP150
          C     R15,=F'12'              end of file ?
          BNZ   HLP900                  error
          L     R15,=F'99'              load rc: help displayed
          B     HLP999                  end
 HLP150   EQU   *
          WRTERM (R4),80                display help line
          B     HLP100                  repeat
 HLP900   EQU   *
          WRTERM 'Can not read help file, try to do it with XEDIT.',48
 HLP999   EQU   *
          B     HLPEX
          EJECT
 *        Literal pool                                              *
          SPACE 1
          LTORG
          EJECT
 *        Definitions                                               *
          SPACE 1
 CCWCHAIN DS    0D                      CCW's for DASD I/O
 SEEK     DC    X'07',AL3(SK),X'40',X'000006'     position
 SEARCH   DC    X'31',AL3(SK+2),X'40',X'000005'   search for recid
 TIC      DC    X'08',AL3(SEARCH),X'00',X'000000' repeat it until found
 RD       DC    X'06',AL3(FREADR),X'00',X'001000' read -> address for
 *                                      data will be set after DMSFREE
 FREADR   DC    F'0'                    save area for storage address
 FREADRE  DC    F'0'                    end of buffer
 FREADR1  DC    F'0'                    save area for storage address 1
 FREADR1E DC    F'0'                    end of buffer
 VIRTADR  DC    F'0'                    save area for virtual disk addr
 RECNUMB  DC    F'0'                    number of records per cylinder
 RECSIZE  DC    F'0'
 HEADCNT  DC    F'0'
 *                  ----CCCCHHHHRR
 SK       DC    XL7'00000000000006'     cyl 0, head 0, rec 6 for read
 WRKCTL   DC    XL1'00'                 control flag for WRK block
 REC7     DC    CL1'N'
 DIRCHN   DC    CL1'N'
          DS    0D
 PUNCH    DS    0CL32                   CMS command DISK DUMP
          DC    CL8'DISK    '           command
          DC    CL8'DUMP    '
 INAME    DC    CL8' '                  file name
 ITYPE    DC    CL8' '                  file type
 IMODE    DC    CL8' '                  file mode
 KXFF     DC    XL8'FFFFFFFFFFFFFFFF'   end of command and constant
 VMFCLEAR DC    CL8'VMFCLEAR'           CMS Command VMFCLEAR
          DC    XL8'FFFFFFFFFFFFFFFF'   end of command
 OUTLINE  DS    0CL80                   definition of output line
          DC    XL2'1DE8'               control characters: hilight on
 INLINE   DC    CL76' '                 input line for FSREAD
          DC    XL2'1D60'               control characters: hilight off
          DS    0D
 MFILE    DS    0CL18                   message file definition
          DC    CL8'RECOVER '
          DC    CL8'EMESSAGE'
          DC    CL2'* '
          DS    0D
 HFILE    DS    0CL18                   help file definition
          DC    CL8'RECOVER '
          DC    CL8'EHELP   '
          DC    CL2'* '
          DS    0D
 SPOOL    DC    C'SPOOL PUN *'          CP command SP PUN *
 SPOOLL   EQU   *-SPOOL                 length of command
 IOFF     DC    C'SET IMSG OFF'         CP command SET IMSG OFF
 IOFFL    EQU   *-IOFF                  length of command
 ION      DC    C'SET IMSG ON'          CP command SET IMSG ON
 IONL     EQU   *-ION                   length of command
 KX00     DC    XL16'00'                constant
 TEMP     DC    CL64' '                 save area for file description
 TEMP1    DC    CL1' '
          DS    0D
 FILETBL  DS    0CL256                  check table for input file name
 *                000102030405060708090A0B0C0D0E0F
          DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 0
          DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 1
          DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 2
          DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 3
          DC    X'00FFFFFFFFFFFFFFFFFFFFFFFFFF00FF' 4    ' ' '+'
          DC    X'FFFFFFFFFFFFFFFFFFFFFF00FFFFFFFF' 5    '$'
          DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 6
          DC    X'FFFFFFFFFFFFFFFFFFFF00FFFFFFFFFF' 7    ':'
          DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 8
          DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 9
          DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' A
          DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' B
          DC    X'FF000000000000000000FFFFFFFFFFFF' C
          DC    X'FF000000000000000000FFFFFFFFFFFF' D
          DC    X'FFFF0000000000000000FFFFFFFFFFFF' E
          DC    X'00000000000000000000FFFFFFFFFFFF' F
          REGEQU                        set register equates
          ADT                           active disk table macro
          NUCON                         nucon macro
          END   RECOVER                 THE END

RECOVER EMESSAGE

RCV0001E Invalid call to routine, enter 'RECOVER ?' for info.
RCV0002E Invalid filename or filetype or filemode.
RCV0003E Disk is currently not accessed.
RCV0004E I/O error, try to reenter.
RCV0005E Insufficient storage to satisfy CMSSTOR request.
RCV0006E File does not exist, if not misspelled, can not be recovered.
RCV0007E Error while executing the CMS PUNCH command, try to reenter.
RCV0008E Error while releasing storage, file was successfully recovered.
RCV0009I File xxxxxxxx xxxxxxxx x was recovered successfully.
RCV0010E Non-supported DASD type, not 3380.
RCV0011E Non-supported BLKSIZE of MDISK, not 1K, 2K or 4K.

RECOVER EHELP

      This program can recover an erased file. It will try to recover
          its FST entry and then punch the file into the virtual card
          reader of the caller.
          Program call: RECOVER fn ft fm
                       fn ft fm - file id, it is a required parameter
                       NO OTHER parameters are valid
          Remarks:
       1. If the user was LOGGED OFF from system after the DISCARD
             or ERASE command, the file can not be recovered.
       2. If any error occurs while executing the program, a message
            will be displayed:
           - if the message RCV0006E is displayed, then the file
             can not be recovered, no information about the specified
             file exists.
           - if the message RCV0010E is displayed, then the file
             was not placed on 3380 MDISK. It can not be recovered
             by this program
          - if the message RCV0011E is displayed, then the MDISK
             was not formatted with a BLKSIZE of 1K, 2K or 4K. Other
             BLKSIZE's are not supported.

Peter Slowikowski
System Software Support
Comparex GmbH (West Germany)               ) Comparex GmbH 1990

