Back-up program

This EXEC will back-up a disk using DDR.  The file DASD
PARMS must be present on a R/W mini-disk.  The file DASD
PARMS must have all eligible volumes defined in it.  The
format of this file is:

o      Virtual address of full pack mini-disk (starting in column 1)

o      Vol-id of this pack

o      Device-type (this field must be a type supported by DDR)

o      Each of the above fields must be separated by 1 blank.

The following files will be created if they are not present:

o      WEEKLY FILE - Vol-id for all volumes to be backed up weekly

o      DAILY FILE - Vol-id for all volumes to be backed up daily.

This EXEC does not check the back-up for any errors.  The
user must have ATTACH/MSGNOH privilege.  The EXEC
will basically do the same as SYSUDUMP1 under VM/SP.
However, it does not use ISPF or any screen management.

/*    */
Trace off
'VMFCLEAR'
'SPOOL CONSOLE * CL Q START'
default_tape = 380              /* default tape drive address */
say ''
say ''
'MSGNOH *   * * * ** * * * * * * * * * * * * * * * * * * * * * * * * * * *'
'MSGNOH *   * *                  V M  B A C K - U P                      *'
'MSGNOH *   * * * ** * * * * * * * * * * * * * * * * * * * * * * * * * * *'
do forever
   say''
   say''
   'MSGNOH *               Choose one of the following options :'
   'MSGNOH *     1-Daily Backup  2-Weekly Backup  3-Backup by Volume  4-Quit'
   pull Type .
   if Type > 0 & Type < 5 then leave
end
if type = 1 then backup_type ='DAILY'
if type = 2 then backup_type = 'WEEKLY'
if Type = 3 then call Volume
if Type = 4 then CALL CLOSE 1
'STATE DASD PARMS *'
if rc ¬= 0 then call filenot_found dasdparms
'STATEW 'backup_type' FILE *'
filerc = rc
if filerc=0 then
   ADDRESS CMS 'EXECIO * DISKR 'backup_type 'FILE A  (STEM ENTRY. FINIS'
call CHANGE_FILE filerc
'Q TAPE FREE (STACK'
parse pull . addr msgs
do queued()
   PULL JUNK
END;
UPPER msgs
IF STRIP(msgs) = 'TAPE WAS NOT FOUND.' THEN
   addr = default_tape
do forever
  SAY
  'MSGNOH *            DEFAULT DRIVE WILL BE 'addr
  SAY
  'MSGNOH * Would you like to change this address OR assign '
  'MSGNOH * multiple drives (Y/N Q-Quit) '
  pull reply .
  if reply = 'Q' then call close 1
  if reply='N' then call GETADDR default
  if reply='Y' then call GETADDR new
  if reply ='Y' | reply='N' then leave
end
index = 0
do until index = entry.0
  index = index+1
  ADDRESS COMMAND 'EXECIO * CP (SKIP STRING ATTACH 'TAPEADDR.INDEX '*'
  saverc = rc
  if saverc ¬= 0 then
    if saverc = 1122 then call ALREADY_ATT tapeaddr.index
    else NO_DRIVE tapeaddr.index     /* drive not found */
  makebuf
  queue'ZONE 5 10'
  queue'SET EMSG OFF'
  queue'/'strip(entry.index)'/'
  queue"EXTRACT /CURLINE"
  queue'QQUIT'
  'XEDIT DASD PARMS *'
  dropbuf
  parse var curline.3 vaddr volid devtype
  if curline.3= ' ' then call NO_DASD entry.index
  cntrl = 'all'
/*Comment out the following block if DUMP ALL is always desired*/
  'q dasd 'volid'(stack'
  PARSE PULL . . . OWNED .
  if owned = 'owned' then cntrl = 'cpvol'
  else cntrl = 'all'
/* upto this point  */
  Call DDR tapeaddr.index
end
call Close
EXIT 00
/* Issues the DDR control statements */
DDR:
'set cmstype rt'
tape = ARG(1)
  'VMFCLEAR'
  'Q TIME'
  say ''
  SAY 'DUMPING VOLUME : 'VOLID
  say ''
  makebuf
  queue 'SYSPRINT CONS'
  queue 'INPUT 'vaddr devtype volid
  queue 'OUTPUT 'tape' 3420 (MODE 6250 COMPACT'
  queue 'DUMP 'cntrl
  queue ' '
  address CMS 'DDR'
  say ''
  'Q TIME'
  dropbuf
 Return
CHANGE_FILE: PROCEDURE EXPOSE ENTRY.
if arg(1) = 0 then
 do
   'MSGNOH *         The following pack(s) will be backed up : '
   say ''
   index = 0
   do until index = entry.0
       index = index + 1
       'MSGNOH *                    'strip(entry.index)
       say
   end
   do forever
    'MSGNOH *       Would you like to CHANGE the entries (Y/N Q-QUIT) :'
      pull response .
      if response = 'Q' then Call CLOSE 1
      if response = 'N' | response = 'Y' then leave
   end
   IF RESPONSE = 'N' THEN RETURN
 end
else
 do
  say''
  'MSGNOH * 'backup_type' FILE was not FOUND ...'
  say ''
 end
answer = 'N'
do while answer = 'N'
   index = 0
   replace.index = 'ZZZZZZZ'         /*something other than blanks*/
   do while replace.index ¬= ' '        /*get out if blank line */
      index = index + 1
   'MSGNOH * Type in VOL-IDs one at a time. When done enter blank line.'
      pull replace.index
   end
   do forever
      answer = 'N'
      'MSGNOH *          Are the following entries correct (Y/N) :'
      say
      i=0                         /* used as index into table */
        do until i = index
          i = i+1
          'MSGNOH *                       'strip(replace.i)
          say
        end
      pull answer .
      if answer = 'Y' | answer = 'N' then leave
   end
   if answer = 'Y' then leave
end
j= 1
do until j = index
   queue replace.j
   ADDRESS CMS 'EXECIO 1 DISKW TEMP TEMP A'
   j =j+1
end
dropbuf
queue 'TOP'
queue 'LPREFIX D*'                 /*delete all previous entries*/
queue 'GET TEMP TEMP A'
queue 'FILE'
'XEDIT 'backup_type' file a'
ADDRESS CMS 'ERASE TEMP TEMP A'
dropbuf
TRACE ALL
ADDRESS CMS 'EXECIO * DISKR 'BACKUP_TYPE 'FILE A (STEM ENTRY. FINIS'
return
Filenot_Found:
filename = arg(1)
'MSGNOH *   * * E R R O R     File' filename 'FILE *  NOT FOUND. '
say ' '
call CLOSE 1
exit 99
ALREADY_ATT:
'ID (STACK'    /* who is running this */
Pull userid .
'Q 'arg(1) '(STACK'
pull . . . . person asaddr .
asaddr = STRIP(asaddr,LEFT,0);     /* STRIP ANY LEADING 0 */
SAY 'PERSON= 'PERSON' USERID= 'USERID' ASADDR= 'ASADDR' WANT= 'ARG(1)
if (STRIP(person) ¬= STRIP(userid) | asaddr ¬= ARG(1)) THEN
 Do
   say ''
   'MSGNOH * TAPE DRIVE 'ARG(1)' IS ATTACHED TO 'PERSON
   say ''
   'MSGNOH * TYPE X1 TO DETACH DRIVE 'ARG(1)'. ANY OTHER KEY TO QUIT'
   pull reply
   UPPER REPLY
   IF STRIP(REPLY)='X1' THEN
    DO
     ADDRESS COMMAND 'EXECIO * CP (SKIP STRING DETACH 'ARG(1) PERSON
     ADDRESS COMMAND 'EXECIO * CP (SKIP STRING ATTACH 'ARG(1) '*'
    END
   ELSE
    DO
      'MSGNOH * EXECUTE EXEC AGAIN WITH DIFFERENT TAPE DRIVE '
      CALL CLOSE
    END
 End
Return
NOVOL:
say''
'MSGNOH *  * * E R R O R  Volume "'Strip(Volid)'" does not exist'
say ' '
'MSGNOH *        OR DASD PARMS file has not been set up for this volume'
say ' '
call CLOSE 0
exit 99
NO_DASD:
VOLID = strip(ARG(1))
say; say
'MSGNOH *    VOLUME "'VOLID'" DOES NOT EXIST IN THE DASD PARMS FILE.'
say''
'MSGNOH *    CHECK THE SPELLING AND RE-RUN THIS EXEC .....'
say; say; say;
exit 32
NO_DRIVE:
say ''
say ''
'MSGNOH *    TAPE DRIVE 'arg(1)' DOES NOT EXIST. '
'MSGNOH *    PLEASE CHECK THE TAPE DRIVE ADDRESS ..'
say; say;
exit 22
CLOSE:
trace off
say; say;
'SET CMSTYPE HT'
'CLOSE CONSOLE'
'TRANSFER RDR ALL TO * PRT'           /*transfer console log to prt */
'SPOOL CONSOLE STOP'
'SET CMSTYPE RT'
if arg(1) = 0 then RETURN            /*return to caller if requested*/
exit 99
GETADDR:
'VMFCLEAR'
change = ARG(1)
do forever
index = 0
 do until index = entry.0
   index = index + 1
   if change = 'NEW' then
     do
       say ''
       'MSGNOH *   ENTER tape drive address for volume 'entry.index
       pull tapeaddr.index
     end
   else tapeaddr.index = addr
 end
  do forever
    i=0
    'VMFCLEAR'
   say;
   'MSGNOH *   Are all the following assignment(s) correct (Y/N) :'
    do until i = entry.0
      i=i+1
      say
      'MSGNOH *        'strip(entry.i)' Will be backed up on 'tapeaddr.i
    end
   pull response .
   if response ='Y' | response = 'N' then leave
  end
if response = 'Y' then leave
Change = 'NEW'
end
return
/*                 V O L U M E    BACK-UP                        */
VOLUME: PROCEDURE
 say ''
'MSGNOH *     Please Enter the Volume Id :'
 pull Volid .
 'Q TAPE FREE (STACK'             /* check for free drives */
  parse pull . tapeaddr msgs
  do QUEUED()
     pull junk
   END
 UPPER MSGS
  IF STRIP(msgs) = 'TAPE WAS NOT FOUND.' THEN
    tapeaddr = 380                /* assign 380 as default */
   do forever
     'MSGNOH *          DEFAULT DRIVE WILL BE 'tapeaddr
     say''
     'MSGNOH *    Would you like to change this default (Y/N Q-Quit) :'
     pull reply .
     If reply ='Q' then call CLOSE 1
     If reply = 'Y' | reply = 'N' then leave
   end
     If reply='Y' then
       do forever
         'MSGNOH *    Type the tape drive address you like to use : '
         pull tapeaddr .
         'MSGNOH *    'STRIP(Volid)' will be backed up on 'tapeaddr
         'MSGNOH *    Is the tape drive address correct (Y/N Q-Quit) : '
         pull response .
         If response = 'Q' then call CLOSE 1
         If response = 'Y' then leave
       end
ADDRESS COMMAND 'EXECIO * CP (SKIP STRING ATTACH 'TAPEADDR '*'
saverc = rc
if sacerc ¬= 0 then
   if rc = 1122 then call already_att tapeaddr /* tape not found */
   else NO_DRIVE tapeaddr        /* invalid tape address */
makebuf
queue'ZONE 5 10'      /* search only in columns 5-10 */
QUEUE'SET EMSG OFF'
queue'/'VOLID'/'      /* find VOLID in DASD Parms file */
Queue'EXTRACT /EOF'
queue'EXTRACT /CURLINE'     /* get current line */
queue'QQUIT'
'XEDIT DASD PARMS *'
dropbuf
'SET CMSTYPE RT'
If EOF.1 = 'ON' then call NOVOL  /* search reached EOF */
Parse var curline.3 vaddr . devtype
'Q DASD 'volid'(STACK'     /* check if CP owned pack  */
Parse pull . . . owned .
If owned = 'OWNED' then cntrl = 'CPVOL'
else cntrl = 'ALL'
call DDR tapeaddr
call close 0
exit 00

Satish Warrier
El Camino Community College (USA)

