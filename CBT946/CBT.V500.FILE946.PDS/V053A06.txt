A small disk I/O monitor

After using the SEEKMAP EXEC (issue 43), I needed more
generic information about drive utilization, so I wrote this
EXEC to show a map of disk drive I/O counts.  It can be used
to see the distribution of I/Os to the various disk drives in a
specified period of time.

The map created is easy to understand (see Figure 1).

More details can be obtained by entering 'IOMAP ?'.

/* Shows a disk utilization map depending on the */
/* options specified. These options can be 'All' */
/* 'Total'  or  'Period'  and  the default is    */
/* 'Period'.                                     */
/* The maps are refreshed by default every 10    */
/* seconds or by specifying the interval option  */
/* in seconds.                                   */
/* The program can be ended by entering 'HI'.    */
arg parm interv
if parm = '' then parm = 'PERIOD'
if abbrev('ALL',parm,1) then parm = 'ALL'
if abbrev('TOTAL',parm,1) then parm = 'TOTAL'
if abbrev('PERIOD',parm,1) then parm = 'PERIOD'
if interv = '' then interv = 10
test = datatype(interv)
error:
if (parm <> 'ALL' & parm <> 'TOTAL' & parm <> 'PERIOD'),
   | test <> 'NUM' then do
   clrscrn
   say 'IOMAP'
   say
   say 'Privilege Class: C'
   say
   say 'Use the IOMAP command to display, at your terminal, a map'
   say "of the disk I/Os of your installation at a specific"
   say 'period of time.'
   say
   say 'The format of the IOMAP command is:'
   say
   say '+-------+------------------------------+'
   say '| IOMAP | (Period|Total|All INTERVAL ) |'
   say '|       |  ------                      |'
   say '+-------+------------------------------+'
   say
   say 'where:'
   say
   say "PERIOD     provides a map showing all disk I/Os occurred"
   say "           since the start of the program (this is the default)"
   say
   say 'Press enter to see the next page'
   pull r1
   clrscrn
   say "TOTAL      provides a map showing the I/Os occurred since the"
   say "           last IPL (may produce wrong values if the system"
   say "           runs 24 hours a day)"
   say "ALL        produces a combination of PERIOD and TOTAL"
   say
   say "INTERVAL   is the time that the program waits to send an"
   say "           updated copy of the screen. The default is 10"
   say "           seconds and, if specified, must be in seconds"
   say "           from 1 to 3600."
   say
   say "The program is ended by entering 'HI'"
   exit
end
if interv < 1 | interv > 3600 then do
   test = 'CHAR'
   signal error
end
parm    = left(parm,6,' ')
minutes = right(interv % 60,2,0)
seconds = right(interv // 60,2,0)
year = SUBSTR(DATE(SORTED),3,2)
month = SUBSTR(DATE(SORTED),5,2)
day = SUBSTR(DATE(SORTED),7,2)
stime = time()
hi = '1de8'x; lo = '1d60'x
'EXECIO * CP (STRING QUERY DASD'
num1 = queued()
tot  = num1
pull . cuu.num1 . . vol.num1 .
do while num1 > 0
   num1 = queued()
   if num1 <> 0 then pull . cuu.num1 . . vol.num1 .
end
do num = 1 to tot
   'EXECIO * CP (STRING LOC' cuu.num
   if rc = 0 then do
      pull .
      pull . . rdevadd .
      ioctadd.num = d2x(x2d(rdevadd)+x2d('20'))
      'EXECIO 1 CP (STRING DCP' ioctadd.num
      pull . ioct.num .
      ioct.num = x2d(ioct.num)
      end
   else do
      say 'This machine cannot examine real control blocks'
      say 'Program ended'
      exit
      end
end
signal on halt
interval = minutes||':'||seconds
if minutes > 0 then do
   clrscrn
   say 'Please wait, first map will be shown after ',
   minutes' minute(s) and 'seconds' seconds'
end
do forever
   'WAKEUP AT +'||interval '(QUIET'
   iotot = 0
   iototal = 0
   do ch = 0 to 5     /* designed for processors with 6 channels */
      if symbol('channel.ch') = 'LIT' then
         nop
      else
         channel.ch = 0
   end
   do num = 1 to tot
      'EXECIO 1 CP (STRING DCP' ioctadd.num
      pull . ioct2.num .
      ioct2.num = x2d(ioct2.num)
      iotot = iotot + ioct2.num - ioct.num
      iototal = iototal + ioct2.num
   end
   ftime = time()
   'EXECIO * CP (STRING IND'
   pull . . cpu . . . . . stor .
   pull paging .
   clrscrn
   line = copies('=',50)
   say 'DISK UTILIZATION MAP   (I/O COUNT)         '
   say                                         'Enter "HI" to terminate'
   say 'CPU-'||cpu stor paging '    ' day||'/'||month||'/'||year ftime
   if parm = 'ALL' | parm = 'PERIOD' then
      say 'MODE ='||hi||parm '('||stime '-' ftime||')',
      lo '     INTERVAL ='||hi||interval lo
   else
      say 'MODE ='||hi||parm lo 'INTERVAL = '||hi||interval lo
   say 'CUU VOLUME SIO  NO.  PCT     1    2     3    4    5    6    7',
                                                            '    8    9'
   say '--- ------ --------  --- ....0....0.....0....0....0....0....0',
                                                            '....0....0.
   if parm = 'ALL' | parm = 'PERIOD' then
      do
      do num = tot to 1 by -1
         ioct = ioct2.num - ioct.num
         ch = left(cuu.num,1)
         if parm = 'PERIOD' then do
            if symbol('channel.ch') = 'LIT' then
               channel.ch = ioct
            else
               channel.ch = channel.ch + ioct
         end
         pct = format(ioct*100/iotot,,0)
         linelen = format(ioct*50/iotot,,0)
         hlin = left(line,linelen)
         say cuu.num vol.num right(ioct,8) right(pct,3)'%'hi||hlin||lo
      end
      say '-----------------------------------------------------------',
                                                           '----------'
   end
   if parm = 'ALL' | parm = 'TOTAL' then
      do
      do num = tot to 1 by -1
         if parm Â¬= 'PERIOD' then do
            ch = left(cuu.num,1)
            if symbol('channel.ch') = 'LIT' then
               channel.ch = ioct2.num
            else
               channel.ch = channel.ch + ioct2.num
         end
         pct = format(ioct2.num*100/iototal,,0)
         linelen = format(ioct2.num*50/iototal,,0)
         hlin = left(line,linelen)
         say cuu.num vol.num right(ioct2.num,8) ,
                                          right(pct,3)'%'||hi||hlin||lo
      end
      say '----------------------------------------------------------',
                                                         '-----------'
   end
   do ch = 0 to 5     /* designed for processors with 6 channels */
      if symbol('channel.ch') = 'LIT' then
         nop
      else
         do
         if parm = 'PERIOD' then do
            pct = format(channel.ch*100/iotot,,0)
            linelen = format(channel.ch*50/iotot,,0)
         end
         else do
            pct = format(channel.ch*100/iototal,,0)
            linelen = format(channel.ch*50/iototal,,0)
         end
         hlin = left(line,linelen)
         say 'Channel ' ch right(channel.ch,8) ,
                                        right(pct,3)||'%'||hi||hlin||lo
         end
   end
   say '-------------------------------------------------------------',
                                                         '-----------'
end
halt:
say 'Program ended'
exit

Sergio de Oliveira Jurgensen
Senior Systems Analyst
Schlumberger Industrias (Brazil)      c Sergio de Oliveira Jurgensen 1991

