 How to format reports more easily
There are two main reasons for using the format utility:
y    To enable anyone using XEDIT to judge easily whether a report will fit onto
a printed page.
y    To provide the facility to paginate a long scripted document without having
to count the number of lines on the page or worry about control characters
cluttering up the XEDIT display.
'Format' is simply an extension of the carriage control facilities available
under VM.  Whereas the user originally only had four carriage control commands
(+, -, 0, 1), now there is a series of commands to perform a more varied number
of functions (these functions are given in Figure 1).
+--------------------------------------------------------------------+
|Control  | Explanation                                             |
|character     |                                                         |
+--------------------------------------------------------------------+
|   ¬     | Highlight phrases on a line                             |
|   C     | Centre line                                             |
|   D     | Centre line and underscore                              |
|   E     | Centre line and underscore words                        |
|   H     | Make line a page header and                             |
|   I     | Make line a page header and underscore                  |
|   J     | Make line a page header and underscore words            |
|   K     | Make line a page header and centre                      |
|   L     | Make line a page header and centre and underscore       |
|   M     | Make line a page header and centre and underscore words |
|   R     | Right justify line                                      |
|   U     | Underscore line                                         |
|   W     | Underscore words                                        |
|   "     | Duplicate line once                                     |
|   2     | Duplicate line twice                                    |
|   .     | Start physical data paragraph                           |
|   ,     | End physical data paragraph                             |
+----------+---------------------------------------------------------+
Figure 1: Format facilities available under XEDIT
To format a line the user simply selects one of the control characters and
places it in column 1 of the selected line.
Once the document has been completed, return to the top of the document and
enter:
     format <nopage>
The format macro will then convert the special control characters held in column
1 back into the standard control characters.
NB - Any control characters that 'format' does not recognise will be ignored,
The 'NOPAGE' option
This option enables the user to format a document without paging it.  If this
option is selected, only the control characters will be expanded, otherwise full
paging takes place.  Formatting will start from the current line to the end of
the document but paging will always start at the beginning of the form.
'Blocking' data
If a user wishes to ensure that a paragraph or a table is not split over two
pages they can set up a block of data which will not be split by the paging
process.
To signify the start of a block, place a '.' in column 1 of the first line.  To
signify the end of a block, place a ',' in column 1 of the last line.
Highlighting words or phrases
To signify that part of a line is to be highlighted, place A '¬' symbol in
column 1 of the line.  For each subsequent highlighted phrase on the line, place
A '¬' symbol at the start and the end of the highlighted phrase, eg:
    ¬    the fifth word is¬highlighted¬
would result in:
         the fifth word is highlighted
    +                      highlighted
FORMAT XEDIT
/* SET UP XEDIT FUNCTIONS FOR PROCESSING       */
"SET AUTOSAVE OFF"
"SET WRAP OFF"
"SET EMSG ON "
 /*  PULL OFF NOPAGE OPTION INITIALISE START VARIABLES  */
ARG @PAGE_OPT .
"EXTRACT /SIZE/LRECL/CURLINE/LINE" /* GET DETAILS ABOUT DOCUMENT */
@WIDTH       = LRECL.1
@LENGTH      = SIZE.1
@START       = LINE.1
@PAGECNT     = 0
@LINES       = 0
@PAGELEN     = 62
@DATE_INDENT = 25
@PAGE_INDENT = 15
@DATE        = DATE(E)
/*  ADVANCE TO T.O.F. , IF NOPAGE OPTION PRESENT THEN SKIP PAGING  */
":0"
IF @PAGE_OPT ¬=LEFT("NOPAGE",LENGTH(@PAGE_OPT)),
 | @PAGE_OPT = "" THEN DO
   @PAGECNT = 1
   /*      MAIN PAGING LOOP      */
   DO @COUNT = 1 TO @LENGTH
      @LINES = @LINES + 1         /* INCREMENT PAGE LINE COUNT    */
      "DOWN"                      /* ADVANCE ONE LINE IN DOCUMENT */

      /*  PULL OFF DOCUMENT LINE & SPLIT INTO COMPONENT PARTS    */
      "EXTRACT /CURLINE"
      @LINE   = CURLINE.3
      @PRTCTL = LEFT(@LINE,1)
      IF @LINE ¬= "" THEN DO
         @REST  = RIGHT(@LINE,LENGTH(@LINE)-1)
      END
      /* CHECK IF CONTROL CHARACTER AFFECTS PAGE LENGTH  */
      SELECT
         /* DATE HEADER */
         WHEN @COUNT = 1 THEN DO
            IF @PRTCTL = "1"  THEN DO
               "COVERLAY _"
            END
            @REST = OVERLAY("DATE "@DATE,"",@WIDTH - @DATE_INDENT)
            @DUP_LINE = "1"||@REST
            ":0"
            "INPUT "@DUP_LINE
            "DOWN"
            @LINES = 0
         END
         /*   START OF DATA BLOCK   */
         WHEN @PRTCTL = "." THEN DO
            "COVERLAY _"
            "EXTRACT /LINE"
            @SB = LINE.1
            "/,"
            "EXTRACT /CURLINE/LINE"
            @RC = 0
            DO WHILE POS(",",CURLINE.3) ¬= 1 & @RC ¬= 0
               "/,"
               @RC = RC
               "EXTRACT /CURLINE/LINE"
            END
            "COVERLAY _"
            @EB = LINE.1
            IF @LINES + (@EB - @SB) > @PAGELEN THEN DO
               ":"||@SB
               CALL PAGE_INSERT
            END
            "COVERLAY _"
         END
         /*   STANDARD CONTROL CHARACTERS */
         WHEN @PRTCTL = "+" THEN DO
               @LINES = @LINES - 1
         END
         WHEN @PRTCTL = "-" THEN DO
              @LINES = @LINES + 2
         END
         WHEN @PRTCTL = "0" THEN DO
              @LINES  = @LINES + 1
         END
         WHEN @PRTCTL = "1" THEN DO
              CALL PAGE_INSERT
              "COVERLAY _"
         END
         /*   PAGE HEADER INDICATORS  */
         WHEN @PRTCTL = "H",
          | @PRTCTL   = "I",
          | @PRTCTL   = "J",
          | @PRTCTL   = "K",
          | @PRTCTL   = "L",
          | @PRTCTL   = "M" THEN DO
            CALL PAGE_INSERT
         END
         OTHERWISE NOP
      END
      /*   PAGE FULL */
      IF @LINES ¬< @PAGELEN THEN DO
         CALL PAGE_INSERT
      END
   END
END
/* START FORMATTING LOOP */
":0"  /* GO TO START OF DOCUMENT */
DO @COUNT = @START TO @LENGTH + @PAGECNT
   "EXTRACT /CURLINE"
   @LINE = CURLINE.3
   @PRTCTL = LEFT(@LINE,1)
   IF @LINE ¬= "" THEN DO
      @REST   = RIGHT(@LINE,LENGTH(@LINE)-1)
   END
   /*     SET UP MULTIFUNCTION COMMAND  */
   SELECT
     WHEN @PRTCTL = "D" THEN @CTLVAR = "CU"
     WHEN @PRTCTL = "E" THEN @CTLVAR = "CW"
     WHEN @PRTCTL = "I" THEN @CTLVAR = "HU"
     WHEN @PRTCTL = "J" THEN @CTLVAR = "HW"
     WHEN @PRTCTL = "K" THEN @CTLVAR = "CH"
     WHEN @PRTCTL = "L" THEN @CTLVAR = "CHU"
     WHEN @PRTCTL = "M" THEN @CTLVAR = "CHW"
     WHEN @PRTCTL = "1" THEN @CTLVAR = ""
     OTHERWISE @CTLVAR = @PRTCTL
  END
  /*  PERFORM CONTROL FUNCTIONS */
  @HEAD_FLAG = ""
  DO @COUNT_1 = 1 TO LENGTH(@CTLVAR)
     /*   INITIALISE LINE VARIABLES  */
     IF POS("H",@CTLVAR) ¬= 0 THEN @SUB = @DATE_IND
      ELSE @SUB = 0
     @CTL = SUBSTR(@CTLVAR,@COUNT_1,1)
     "EXTRACT /CURLINE"
     @LINE = CURLINE.3
     @PRTCTL = LEFT(@LINE,1)
     IF @LINE = "" THEN ITERATE
     @REST   = RIGHT(@LINE,LENGTH(@LINE)-1)
     SELECT
        /*   MULTIPLE OVERSTRIKES  */
        WHEN ( DATATYPE(@CTL) = "NUM" | @CTL = '"' ),
         & @CTL ¬= "0" THEN DO
            "COVERLAY _"
           IF @CTL = '"' THEN @CTL = 1
           IF @CTL > 4 THEN @CTL = 4
           DO @COUNT_1 = 1 TO @CTL
              "DUPLICATE"
              "COVERLAY +"
           END
        END
        /*    HIGHLIGHTED PHRASES ON LINE  */
        WHEN @CTL = "¬" THEN DO
           @FLAG  = 0
           @INDEX = 0
           @POS   = 0
           @POS.0 = 1
           @DUP_LINE = @REST
           DO UNTIL @FLAG = 1
              @LASTPOS = @POS + 1
              @INDEX = @INDEX + 1
              @POS = POS("¬",@REST,@LASTPOS)
              IF @POS = 0 THEN @FLAG = 1
              @POS.@INDEX = @POS
              "CL :"@LASTPOS
              "COVERLAY _"
           END
           "CL :1"
           @INDEX = @INDEX - 1
           DO @COUNT = 0 TO @INDEX BY 2
              @COUNT1 = @COUNT + 1
              @SPOS = @POS.@COUNT
              @EPOS = @POS.@COUNT1
              IF @EPOS = 0 THEN @EPOS = LENGTH(@REST)
              @LENGTH = @EPOS - @SPOS + 1
              @DUP_LINE = OVERLAY("",@DUP_LINE,@SPOS,@LENGTH," ")
           END
           IF LENGTH(STRIP(@DUP_LINE)) > 0 THEN DO
              INPUT "+"||@DUP_LINE
           END
        END
        /* CENTRE LINE  */
        WHEN @CTL = "C" THEN DO
              @LREST = LENGTH(STRIP(@REST))
              @OFFSET = (@WIDTH - @LREST) % 2
              @DUP_LINE = RIGHT(@REST,@OFFSET + @LREST," ")
              "REPLACE "@DUP_LINE
        END
        /*  ADD HEADING CONTROL CHARACTER  */
        WHEN @CTL = "H" THEN DO
           IF @PAGE_OPT ¬= "" THEN @DUP_LINE = "1"||@REST
            ELSE @DUP_LINE = " "||@REST
           "REPLACE "@DUP_LINE
        END
        /*     RIGHT JUSTIFY A LINE    */
        WHEN @CTL = "R" THEN DO
           @DUP_LINE = COPIES(" ",
                       @WIDTH-LENGTH(STRIP(@REST)))||STRIP(@REST)
           "REPLACE "@DUP_LINE
        END
        /*   UNDERSCORE LINE  */
        WHEN @CTL = "U" THEN DO
           @REST_1 = STRIP(@REST)
           @SPCES  = LENGTH(@REST) - LENGTH(@REST_1)
           IF @CTLVAR = @CTL THEN DO
              "COVERLAY _"
           END
           @DUP_LINE = "+"||COPIES(" ",
                        @SPCES)||COPIES("_",LENGTH(@REST_1))
            "INPUT "@DUP_LINE
        END
        /*    UNDERSCORE WORDS IN LINE  */
        WHEN @CTL = "W" THEN DO
           IF @CTLVAR = @CTL THEN DO
              "COVERLAY _"
           END
           @DUP_LINE = SPACE("",LENGTH(@REST))
           DO @INDEX = 1 TO WORDS(@REST)
              @UNDERSCORE = COPIES("-",WORDLENGTH(@REST,@INDEX))
              @DUP_LINE =
                  OVERLAY(@UNDERSCORE,@DUP_LINE,WORDINDEX(@REST,@INDEX))
           END
           "INPUT +"||@DUP_LINE
        END
        OTHERWISE NOP
     END
  END
  "DOWN"
END
":0"
EXIT
/*  INSERT PAGE HEADER INTO DOCUMENT */
PAGE_INSERT:
@REST = OVERLAY("PAGE "@PAGECNT,"",@WIDTH - @PAGE_INDENT)
@DUP_LINE = "1"||@REST
"UP"
"INPUT "@DUP_LINE
"DOWN"
@PAGENT = @PAGECNT + 1
@LINES = 0
RETURN
J Burton
Systems Programmer
The Kenning Motor Group (UK)  ) J Burton 1988































