 Using a translate table in CMS
FUNCTION
The REXX EXEC translates any CMS file using the update-in-place feature.  The
translate information will be provided in a CMS file similar to a translate
table in an Assembler language program.  The translate table used can be built
and modified in a very simple way using the standard CMS editors (EDIT/XEDIT).
SYNTAX
                  +-      -+   +-             -+    +-   -+
    TR  <fn> <ft> |  <fm>  |   |  ( <trtable>  |    |  )  |
          ?       +-      -+   +-             -+    +-   -+
        <fn>   := filename of file to be translated
        <ft>   := filetype of file to be translated
        <fm>   := filemode of file to be translated  (Default: 'A')
        <trtable>   := filename of the translate table    (Default: <fn>)
     The filetype of <trtable> must be 'TRTABLE', the
     filemode will be assumed as '*'.
     y    LRECL of <fn> <ft> <fm> must be less than 255.
     y    <trtable> must have the file characteristics RECFM F LRECL 16.
     The number of records must be equal to 16.
METHOD OF OPERATION
1    Parse given parameters to this EXEC.  If fn is equal to '?', or a syntax
error is detected, an in-line help message (syntax diagram with a brief
parameter description) will be provided.  Return with RC=99.
2    Check whether the file <fn> <ft> (<fm>) does exist on a R/W CMS disk.  If
return code is not equal to 0, return with the STATE/STATEW RC.
3    Pick up file information of the file to be translated.  If the logical
record length of this file exceeds 255 bytes, return with RC=99.
4    Check whether the translate table <trtable> 'TRTABLE *' does exist.  If
return code is not equal to 0, return with the STATE  RC.
5    Pick up file information for the translate table file.  If the record
format is not fixed, or if the logical record length is not equal to 32, or the
number of records is not equal to 16, return with RC=99.
6    Read the records of translate table file to build a translate table in the
internal format used by the translate instruction (convert a string of
hexadecimal characters to character (packs)).  If there are characters other
than 0-9, a-f, or A-F in the translate table file, return with RC=99.
7    Rename the file to be translated to filemode 6.  This indicates that the
update-in-place attribute of the CMS file is in effect.
8    Read each record of the file to be translated, translate it using the built
translate table (6.), and rewrite the record to the same position.
9    Rename the translated file to its original filemode and return to CMS.
RESTRICTIONS
y    When using the EXECIO function DISKW, the maximum LRECL processed is 255.
y    The update-in-place feature only applies to files located on 512byte, 1K,
2K, or 4K block formatted mini-disks.
Examples
*List file informations of files used
listfile sample * a (label
FILENAME FILETYPE FM FORMAT LRECL      RECS     ...
SAMPLE   FILE1    A1 V         36         2     ...
SAMPLE   FILE2    A1 V         36         2     ...
R;
listfile * trtable * (label
FILENAME FILETYPE FM FORMAT LRECL      RECS     ...
LOW-UP   TRTABLE A1 F          32        16     ...
UP-LOW   TRTABLE A1 F          32        16     ...
R;

* Show contents of file to be translated
type sample file1
abcdefghijklmnopqrstuvwxyz0123456789
ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789
R;
* Show contents of translate table file (lower case to upper case)
type low-up trtable
000102030405060708090A0B0C0D0E0F
 101112131415161718191A1B1C1D1E1F
202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F
404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F
606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F
80C1C2C3C4C5C6C7C8C98A8B8C8D8E8F
90D1D2D3D4D5D6D7D8D99A9B9C9D9E9F
A0A1E2E3E4E5E6E7E8E9AAABACADAEAF
B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF
C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF
E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
R;
* Translate sample file1 a from lower case to upper case
tr sample file1 (low-up
R;
* Show the result (in the same file)
type sample file1
ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789
ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789
R;
*Show contents of file to be translated
type sample file2
abcedefghijklmnopqrstuvwyx0123456789
ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789
R;
* Show contents of translate table file (upper case to lower case)
type up-low trtable
000102030405060708090A0B0C0D0E0F
101112131415161718191A1B1C1D1E1F
202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F
404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F
606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F
909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAF
B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF
C0818283848586878889CACBCCCDCECF
D0919293949596979899DADBDCDDDEDF
E0E1A2A3A4A5A6A7A8A9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
R;
* Translate sample file2 a from upper case to lower case
tr sample file 2 (up-low
R;
* Show the result (in the same file)
type sample file2
abcdefghijklmnopqrstuvwxyz0123456789
abcdefghijklmnopqrstuvwxyz0123456789
R;
* Another very useful translate table is the following.  It translates
* ASCII-CMS-Files to EBCDIC.
type asc-ebc trtable
00010203372D2E2F1605250B0C0D0E0F
101112133C3D322618193F271C1D1E1F
405A7F7B5B6C507D4D5D5C4E6B604B61
F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F
7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6
D7D8D9E2E3E4E5E6E7E8E94AE04F5F6D
79818283848586878889919293949596
 979899A2A3A4A5A6A7A8A9C06AD0A107
00010203372D2E2F1605250B0C0D0E0F
101112133C3D322618193F271C1D1E1F
405A7F7B5B6C507D4D5D5C4E6B604B61
F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F
7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6
D7D8D9E2E3E4E5E6E7E8E94AE04F5F6D
79818283848586878889919293949596
979899A2A3A4A5A6A7A8A9C06AD0A107
R

REXX PROGRAM LISTING
/*
FUNCTION:
This REXX EXEC translates any CMS file using the update-in-place feature.  The
translate information will be provided in a CMS file similar to a translate
table in an ASSEMBLER language program.  The translate table used can be built
and modified using the standard
CMS editors.
SYNTAX
                  +-      -+   +-             -+   +-   -+
    TR  <fn> <ft> |  <fm>  |   |  ( <trtable>  |   |  )  |
         ?        +-      -+   +-             -+   +-   -+
        <fn>      := filename of file to be translated
        <ft>      := filetype of file to be translated
        <fm>      := filemode of file to be translated (Default: 'A')
        <trtable> := filename of the translate table   (Default: <fn>)
                      The filetype of <trtable> must be 'TRTABLE', the
                      filemode will be assumed as '*'.
y    LRECL of <fn> <ft> <fm> must be less than 255.
y    <trtable> must have the file characteristics RECFM F LRECL 16.
    The number of records must be equal to 16.
*/
Parse Upper Arg fn ft fm '(' trtable.
If fn = '?' | fn = '' | ft = '' Then Do
   Do i = 2 While Sourceline(i) ¬= '*/'
      Say Sourceline(i)
   End
   Exit 99
End
STATEW fn ft fm: IF Rc ¬= 0 Then Exit Rc
LISTFILE fn ft fm '(STACK LABEL'
Parse Pull fn ft fm f_recfm f_lrecl f_recs . . . .
If f_lrecl > 255 Then Do
   Say 'Invalid LRECL' f_lrecl 'in' fn ft fm '- maximum is 255.'
   Exit 99
End
If trtable = '' Then trtable = fn
STATE trtable 'TRTABLE *'; If Rc ¬=0 Then Exit Rc
LISTFILE trtable 'TRTABLE * (STACK LABEL'
Parse Pull tn tt tm t_recfm t_lrecl t_recs . . . .
If t_recfm ¬= 'F' | t_lrecl ¬= 32 | t_recs ¬= 16 Then Do
   Say 'Invalid translate table characteristics'.
       t_recfm'|'t_lrecl'|'t_recs '- must be F|32|16.
       Exit 99
End
out_table = ''
Do i = 1 To t_recs
   EXECIO 1 DISKR tn tt tm i
   Parse Pull record
   If ¬ Datatype(record,'X') | Index(record,' ') ¬= 0 Then Do
      Say 'Invalid character(s) in line' i 'of translate table'.
          tn tt tm'.'
      Exit 99
   End
   out_table = out_table || X2c(record)
 End
FINIS tn tt tm
ui_fm = Left(fm,1) || '6'   /* Prepare for    */
RENAME fn ft fm fn ft ui_fm /* update inplace */
Do i = 1 to f_recs
   EXECIO 1 DISKR fn ft ui_fm i
   Parse Pull record
   record = Translate(record,out_table)
   EXECIO 1 DISKW fn ft ui_fm i '(STRING' record
End
FINIS  fn ft ui_fm
RENAME fn ft ui_fm fn ft fm
Exit Rc
Bernhard Engberding
Systems Programmer
Universitt Dortmund - HRZ (W Germany)  ) Universitt Dortmund 1988


















































