Mutual exclusion for CMS (continued)

This month we continue the article that offers a method of
preventing the double updating of CMS files.

READL   DS    0H                  READ LOCK FILE ROUTINE TO FIND
*                                 RESOURCE ID
        LA    R9,BUFFER           ADDRESS BUFFER
        L     R8,FSCBAITN         MAKE SURE WE ARE READING THE REC
        A     R8,=F'1'
        FSREAD 'RESOURCE FILE X',FSCB=(R2),RECNO=(R8),NOREC=1,         X
              BUFFER=(R9),BSIZE=80,ERROR=RERR,FORM=E
        CLC   BRES,RESOURCE       IS THE RECORDS JUST READ THE ONE?
        BNE   READL               NO KEEP GOING
        CLC   BSET(2),=CL2'ON'    YES IS IT ON ?
        BE    READL1              YES THEN JUMP TO CHECK USERID
        MVC   BSET,SET            OTHERWISE SET IT AND GOTO WRITE
        MVC   BUSER,USER
        B     WRITIT
READL1  DS    0H                  THE RES IS LOCKED BUT BY THIS USER?
        CLC   BUSER,USER          CHECK
        BNE   READL2              IF NOT THEN REPORT ERROR
        MVC   BSET,SET            OTHERWISE DO SETTING AS REQUESTED
        MVC   BUSER,USER
        CLC   SET,=CL8'ON'        WAS IT AN OFF ? ? ?
        BE    WRITIT
*                                 CHECK FOR ENQUEUED USERS
        CLC   ENQTAB,=CL8' '      IS ANYBODY THE ENQUEUED USER
        BE    WRITIT
        MVC   BUSER,ENQTAB        SET ENQ USER AS OWNER
        MVC   BSET,=CL8'ON'       MAKE SURE NO ONE ELSE GETS IT
        LA    R4,ENQTAB
        LINEDIT TEXT='SMSG ........ ZLOCK DEQUEUE',                    X
              SUB=(CHARA,(R4)),DOT=NO,DISP=CPCOMM
        L     R3,=F'4'
READL1L DS    0H                  THEN MOVE EVERYONE DOWN THE QUEUE
        MVC   0(8,R4),8(R4)
        MVC   8(8,R4),=CL8' '
        LA    R4,8(R4)
        BCT   R3,READL1L
        B     WRITIT              THEN REWRITE RESOURCE RECORD
READL2  DS    0H
        MVC   RC,=F'800'          SET RETURN CODE TO INDICATE ERR
        CLC   NOWAIT,=CL8'NOWAIT' DID USER REQUEST NOWAIT
        BE    RELIT               IF SO DO NOT ENQUEUE THEM
*                                 RESOURCE LOCKED SO WE MUST ENQ
*                                 THIS IS DONE BY ADDING NAME TO
*                                 THE END OF THE RESOURCE REC
*                                 THEN WAITING FOR THE LOCKING
*                                 USER TO ISSUE US WITH AN SMSG
READL3  DS    0H
        LA    R4,ENQTAB           THERE ARE FIVE ENTRIES ON ENQ TAB
        L     R3,=F'5'
READL4  DS    0H                  LOOK FOR A BLANK ONE
        CLC   0(8,R4),=CL8' '     IS THIS BLANK
        BE    READL5              YES JUMP TO SET IT
        CLC   0(8,R4),USER        HAVE WE FOUND OUR OWN NAME
        BE    WRITIT              THEN JUST RE-WRITE AND EXIT
        LA    R4,8(R4)            KEEP LOOKING UP TABLE
        BCT   R3,READL4           UNTIL END WHEN THERE ARE
        B     RELIT               NO FREE ENQ SO REL DISK AND WAIT
READL5  DS    0H                  SET ENQ NAME FOR LATER START
        MVC   0(8,R4),USER        AND MAKE SURE NO OTHER RUBBISH
        MVC   8(8,R4),=CL8' '     IS LAYING ABOUT
        MVC   RC,=F'801'          SAY WE ARE WAITING FOR SMSG
        B     WRITIT              THEN RE-WRITE RECORD
RERR    DS    0H                  CREATE RECORD
        MVC   BUFFER,=CL80' '
        MVC   BRES,RESOURCE       THE RESOURCE ID WAS NOT FOUND
        MVC   BSET,SET            AND SHOULD BE CREATED
        MVC   BUSER,USER
        L     R8,=F'0'            AS THE NEXT ONE
        B     WRITITE
WRITIT  DS    0H
        L     R8,FSCBAITN         POINT R8 AT RECID
WRITITE DS    0H
        OC    BUFFER,=CL80' '     MAKE SURE ITS UPPER CASE + WRITE
        FSWRITE 'RESOURCE FILE X',BUFFER=(R9),BSIZE=80,ERROR=ABORT6,   X
              FORM=E,FSCB=(R2),RECNO=(R8),RECFM=F
*            RELEASE DISK                                              *
RELIT   DS    0H
        FSCLOSE 'RESOURCE FILE X' CLOSE THE FILE
        LA    R1,RELEASE          THEN RELEASE DISK
        ICM   R1,B'1000',=X'00'   WITH CMS RELEASE COMMAND
        SVC   202
        DC    AL4(ABORT2)         ANY PROBLEMS ABORT
        MVC   WRCCW,CRDCCW1       SET UP RELEASE CCW
        LA    R8,BUFFER
        STCM  R8,B'0111',WADDR
        XR    R2,R2
        LH    R2,DEV1             LOAD DEVICE ADDR
        LA    R8,WRCCW            R8 POINTS TO CCW
        ICM   R8,B'1000',=X'00'
        DC    X'83280020'         DO DIAG 20
        CLC   RC,=F'800'          DO WE HAVE TO WAIT + RETRY
        BE    WAIT1               YES THERE WERE NO ENQ SLOTS/NOWAIT
        CLC   RC,=F'801'          ARE WE ENQUED ON RESOURCE ?
        BE    WAIT2               YES THEN GO AND WAIT FOR THAT
        B     END
WAIT1   DS    0H
        CLC   NOWAIT,=CL8'NOWAIT' DID THE USER REQUEST NOWAIT ? ?
        BE    END                 YES THEN JUST END
        LA    R0,EWAKE            OTHERWISE INVOKE WAKEUP WITH
        LA    R1,WAKE             A TEN SEC DELAY
        ICM   R1,B'1000',=X'01'
        SVC   202
        DC    AL4(1)
        MVC   RC,=F'0'            CLEAR RC AFTER WAIT
        B     START               AND RE-START WHOLE OP
WAIT2   DS    0H
        CLC   NOWAIT,=CL8'NOWAIT' WE SHOULD NOT GET HERE IF NOWAIT
        BE    END                 WAS SPECIFIED BUT JUST IN CASE
        LA    R1,MBUF             MAKE A BUFFER FOR WAKEUP TO PUT
        ICM   R1,B'1000',=X'00'   SMSG INTO GET RID OF IT LATER
        SVC   202
        DC    AL4(1)
        LA    R0,SEWAKE           THEN INVOKE WAKEUP JUST WAITING
        LA    R1,SWAKE            FOR AN SMSG   E
        LR    R2,R1
        ICM   R1,B'1000',=X'01'
        SVC   202
        DC    AL4(1)
        LA    R1,DBUF             SOMETHING HAPPEND SO GET RID OF
        ICM   R1,B'1000',=X'00'   BUFFER
        SVC   202
        DC    AL4(1)
        MVC   RC,=F'0'            RESET RC AND TRY TO GET LOCK
        B     START
*             RETURN TO CMS                                            *
END     DS    0H                  FINALLY ISSUE ZREACC TO INSURE
        LA    R1,REACC            LATEST COPY OF DISKS
        ICM   R1,B'1000',=X'00'
        SVC   202
        DC    AL4(ABORT2)         ANY PROBS REPORT IT
        L     R14,R14SAVE         LOAD RETURN ADDRESS
        L     R8,RC               GET RETURN CODE
*             RELEASE WORKING STORAGE                                  *
        L     R0,WDWORDS
        LA    R1,WDWORDS
        DMSFRET DWORDS=(0),LOC=(1),                                    X
              ERR=ABORT,                                               X
              TYPCALL=SVC
        LR    R15,R8              SET RETURN CODE IN REG 15
        BR    R14                 RETURN TO CMS
*             ABORT ROUTINE                                            *
ABORT1  DS    0H
        A     R15,=F'100'
        B     ABORT
ABORT2  DS    0H
        A     R15,=F'200'
        B     ABORT
ABORT3  DS    0H
        A     R15,=F'300'
        B     ABORT
ABORT4  DS    0H
        A     R15,=F'400'
        B     ABORT
ABORT5  DS    0H                  ACCESS ERROR
        A     R15,=F'500'
        B     ABORT
ABORT6  DS    0H                  RE-WRITE ERROR
        A     R15,=F'600'
        B     ABORT
ABORT   DS    0H
        DMSABN (15),TYPCALL=SVC
        B     END
*             P R O G R A M   C O N S T A N T S                        *
RC       DC    F'0'                RETURN CODE
         DS    0F
IOWAIT   DC    X'0000FFFF'         I/O WAIT LOOP VALUE
DEV1     DC    X'039F'             DISK 39F
CCAWFORM DC    X'00'               MOVED TO CAW
         DC    XL3'00'
CWRCCW1  DS    0D                  LOCK SENCE CCW
         DC    X'B4'               DEVICE RESERVE
         DC    XL3'000000'         PLACE ADDR OF DATA HERE
         DC    X'20'               IGNORE INVALID LENGTH
         DC    X'00'
         DC    H'80'
CRDCCW1  DS    0D                  UNLOCK SENCE CCW
         DC    X'94'               DEVICE RELEASE
         DC    XL3'000000'         PLACE ADDR OF BUFFER HERE
         DC    X'20'               IGNORE INVALID LENGTH
         DC    X'00'
         DC    H'80'
SENCE    DS    0D                  BASIC SENCE CCW
         DC    X'04'               DEVICE SENCE
         DC    XL3'000000'         PLACE ADDR OF BUFFER HERE
         DC    X'20'               IGNORE INVALID LENGTH
         DC    X'00'
         DC    H'80'
ACCESS   DS    0D                  ACCESS ZLOCKFILE DISK
         DC    CL8'ACCESS'
         DC    CL8'39F'
         DC    CL8'X'
         DC    8X'FF'
RELEASE  DS    0D                  RELEASE ZLOCKFILE DISK
         DC    CL8'REL'
         DC    CL8'39F'
         DC    8X'FF'
REACC    DS    0D                  ISSUE ZREACC
         DC    CL8'EXEC'
         DC    CL8'ZREACC'
         DC    CL8'NOMSG'
         DC    8X'FF'
WAKE     DS    0D                  ISSUE WAKEUP CALL FOR TWO SECS
         DC    CL8'WAKEUP'
         DC    CL8'AT'
         DC    CL8'+00:10'
         DC    CL8'('
         DC    CL8'QUIET'
         DC    8X'FF'
EWAKE    DC    A(WAKE)
         DC    A(EWAKET)
         DC    A(EWAKETE)
         DC    A(0)
EWAKET   DC    C'AT +00:10 ( QUIET'
EWAKETE  EQU   *
SWAKE    DS    0D                  ISSUE WAKEUP CALL
         DC    CL8'WAKEUP'
         DC    CL8'('
         DC    CL8'SMSG'
         DC    CL8'QUIET'
         DC    8X'FF'
SEWAKE   DC    A(SWAKE)
         DC    A(SEWAKET)
         DC    A(SEWAKEE)
         DC    A(0)
SEWAKET  DC    C'( SMSG QUIET'
SEWAKEE  EQU   *
MBUF     DS    0D                  MAKE A BUFFER
         DC    CL8'MAKEBUF'
         DC    8X'FF'
DBUF     DS    0D                  DROP A BUFFER
         DC    CL8'DROPBUF'
         DC    8X'FF'
*              WORKING STORAGE DSECT                                   *
WSTORAGE DSECT
WDWORDS  DS    F                   NO. OF DOUBLEWORDS ALLOCATED
R14SAVE  DS    F                   REG 14 SAVE AREA FOR MAIN PROGRAM
R14ISR   DS    F                   REG 14 SAVE AREA FOR ISR
CAWFORM  DS    0D                  MOVED INTO CAW
         DS    X
CCWADDR  DS    XL3
RDCCW    DS    0D                  READ CCW
RCODE    DS    X
RADDR    DS    XL3
RFLAGS   DS    X
RCTL     DS    X
RCNT     DS    H
WRCCW    DS    0D                  WRITE CCW
WCODE    DS    X
WADDR    DS    XL3
WFLAGS   DS    X
WCTL     DS    X
WCNT     DS    H
ESWRK    DS    8D
USER     DS    CL8
PLIST    DS    0CL32
NAME     DS    CL8
RESOURCE DS    CL8
SET      DS    CL8
NOWAIT   DS    CL8
BUFFER   DS    0CL80
BRES     DS    CL8
         DS    CL4
BUSER    DS    CL8
         DS    CL4
BSET     DS    CL8
         DS    CL4
ENQTAB   DS    5CL8
         ORG   BUFFER+80
         DS    CL8' '
FILE     FSCB
         FSCBD
         REGEQU
*        USERSECT
*        NUCON
         END   ZLOCK

S Pittock, G Gould
Systems Programmers
Potterton International Ltd (UK) ) Potterton International Ltd 1989

