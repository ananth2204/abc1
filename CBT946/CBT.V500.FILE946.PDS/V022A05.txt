 VM to NJE communications
For VM to NJE communication, on the VM side we must:
y    Define the VM-NJE communications line to CP
y    Attach the communications line to RSCS
y    Define the line to RSCS
y    Start the line
y    Send some files to MVS.
CP DEFINITION
RSCS can communicate with NJE over either a channel-to-channel adaptor or a
bisync line.  We use bisync line 04B emulated by a 3705 based at address 080.
We define these to CP in DMKRIO as follows:
     RDEVICE ADDRESS=04B,DEVTYPE=3705,ADAPTER=BSCA,BASEADD=080
     RDEVICE ADDRESS=080,DEVTYPE=3705,ADAPTER=TYPE4,MODEL=F3
     ...
     RCTLUNIT ADDRESS=020,CUTYPE=3705,FEATURE=64-DEVICE
     RCTLUNIT ADDRESS=080,CUTYPE=3705
     ...
     RCHANNEL ADDRESS=0,CHTYPE=MULTIPLEXOR
A channel-to-channel adaptor at address 0E0 can be defined to CP with the
following statements:
     RDEVICE ADDRESS=0E0,DEVTYPE=CTCA
     ...
     RCTLUNIT ADDRESS=0E0,CUTYPE=CTCA
     ...
     RCHANNEL ADDRESS=0,CHTYPE=MULTIPLEXOR
While there are several ways to attach our communications line to RSCS, the best
in our situation is to use a DEDICATE statement in the directory.  This is
because we use 04B exclusively for this one application - VM to MVS
communications.
     ...
     USER RSCS SECRETPW ...
          ...
     DEDICATE 04B 04B
We keep the virtual and real addresses equal in order to reduce confusion.
DEDICATEing the line eliminates the need for a class B user to issue the ATTACH
command.  If we were using line 04B for several applications we would need a
class B user to ATTACH the line to RSCS when we wanted to communicate with MVS.
RSCS SET-UP
Communications lines are defined to RSCS in a file called RSCS DIRECT, or they
can be defined dynamically.  We define the NJE line as follows:
     LINK MVSNJE DMTNJI 04B 0 MVS * 2
When RSCS is IPLed we have the MVSNJE line start automatically by including the
following line in PROFILE RSCS:
     START MVSNJE
Both RSCS DIRECT and PROFILE RSCS are files on the RSCS 191 mini-disk.  A third
file associated with this line may also be put on the RSCS 191 mini-disk.  If
RSCS finds it necessary to deactivate an NJE link, as it will after 40
consecutive 3-second time-outs, RSCS will execute a file with a name equal to
the link name, and a file type of RSCS;  in this case MVSNJE RSCS.  This file
may contain any valid RSCS statements:
     CP MSG OP REPORT TROUBLE WITH THE RSCS - NJE LINE.
     START MVSNJE
USING THE VM TO MVS LINE
Now that we've got the line set up and started, let's put it to use.  There are
two applications that we are immediately interested in:
y    Transmitting files to be printed or punched on the MVS printer or punch
y    Sending jobs to MVS for execution.
To send output to MVS you need to correctly TAG your output device or file, and
then send it to RSCS.  The tag command for output is explained on page 4-6 of
the RSCS Program Reference and Operations Manual (SH24-5005-2).  To send a file
'MY LISTING' to MVS:
     CP SPOOL PRINT TO RSCS FORM STD
     CP TAG DEV PRT MVSNJE
     PRINT MY LISTING


 This will maintain carriage control information.  The default forms for VM are
STANDARD.  The default forms for MVS are STD.  Thus we spool our printer with
FORM STD.
To send a job to MVS, change the tag command to:
     CP TAG DEV PUNCH MVSNJE JOB
Then spool the punch to RSCS.  Punch the input file with the NOHEADER option or
MVS will try to interpret the :READ statement.  (Print files will go to the
output queue, you can't execute them!)  If we want the output of our MVS job to
stay on the MVS system, we're all set;  otherwise we must tell JES to return the
output to us on the VM system.  The following statements in our MVS JCL will
cause JES2 to return the output to userid JK78STAF on node VMNODE:
     //JOBNAME JOB ....
     /*ROUTE PRINT VMNODE.JK78STAF
     //STEP1 EXEC ...
NOTES ON OPERATION
To get an idea of how the MVS job headers are translated into VM control blocks,
look at DMTNHD right after label HOJOB.  To get an idea of how the MVS headers
are built look at DMTNHD after label JOBHL1.
Looking at DMTNHD you will find that the MVS job name for output from VM is set
equal to the constant 'RSCS' concatenated with the VM spool-id.  We found this
inconvenient and decided a better jobname would be the VM distcode.  The
distcode is one of the values that VM prints in large block letters, so why not
have MVS do the same?  It also makes tracking output easier since the distcode
defaults to the name of the user's virtual machine.  To this end create a file
named DMTNHD JOBNAME:
     ./ * WHEN SENDING OUTPUT FROM VM TO MVS, SET THE MVS
     ./ * JOBNAME EQUAL TO THE DISTCODE OF THE FILE
     ./ * BEING SENT.
     ./ R 16800000 16810000 $ 16800010 0010
                    MVC   NJHGJNAM(8),TAGDIST  JOBNAME = VM DISTCODE
Other values may be changed in a similar manner.
Reassemble DMTNHD after adding 'JOBNAME' to the appropriate AUX file.  Since
DMTNJI comprises TEXT decks from DMTNCM, DMTNHD and DMTNIT, you must use the
PRELOAD command:
     PRELOAD DMTNJI RSCS
where RSCS is the name of your RSCS control file.

John Kinne
Software Coordinator
Miami University (USA)   ) Xephon 1988


























