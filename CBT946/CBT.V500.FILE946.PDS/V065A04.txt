Generating string delimiters with REXX

This simple REXX XEDIT macro could help you to delimit
strings. As written, TICIT XEDIT provides a method for
delimiting strings with apostrophes, but can be easily modified
to provide other delimiters, eg () or /**/. Use in conjunction
with SPLITJOIN to improve its performance. Other uses for
this routine, or a modified version, should suggest themselves;
for instance, as written, it is useful for generating a REXX null
argument comparison string (''); with modification, it could be
useful when editing data and/or other programming language
code.


TICIT XEDIT

/*
  This procedure delimits a string with 'tics' or removes 'tics' from
  a 'tic' delimited string. The operand line/column is the line/column
  at the cursor position (unless the cursor is outside the file).
  Modify your PROFILE XEDIT to set a PF Key to execute the procedure:
                       SET PFn TICIT
  then you can add/remove 'tic' delimiters by moving the cursor to the
  desired line/column and pressing the associated function key.
 */
CALL GetCur  /* If cursor in legal area, stack line: else notify. */
If STRIP(Line,'T') = '' Then Do     /* Blank or Null line? */
                              REPLACE "''"
                             End
                        Else  Do
                               CALL Tic Cursor.4 Line
                              End
':'line.1      /* Return to beginning... */
Exit
/************         PROCEDURES         ***************************/
/*********************  GetCur  ************************************/
/* Expose current line number, cursor screen position, and line    */
GetCur:PROCEDURE EXPOSE Line.1 Cursor.4 Line
EXTRACT '/Cursor/Line/Size'
IF Cursor.3 > 0 & Cursor.3 < Size.1 + 1 Then ':' Cursor.3 STACK
                                      Else
                                       Do
                                        'EMSG You can''t Tic this line!'
                                        Exit
                                       End
PULL Line
RETURN
/*********************  Tic     ***********************************/
/*    Determines whether cursor is inside or outside file         */
Tic:PROCEDURE
Arg CsrCol Line
If CsrCol < 1 Then Call Outside Line
                Else Call Inside CsrCol Line
RETURN
/*********************  DelTic  ***********************************/
/*         Deletes existing delimiters - one pair                 */
DelTic:PROCEDURE
Arg BTic Etic Line
CLOCATE ':'ETic
CDELETE '1'
CLOCATE ':'BTic
CDELETE '1'
RETURN
/*********************  TicIt   ***********************************/
/*                   Inserts delimiters - one pair                */
TicIt:PROCEDURE
Arg BTic Line
LENGTH = LENGTH(STRIP(Line,'T'))
CLOCATE ':'LENGTH + 1
CINSERT "'"
CLOCATE ':'BTic
CINSERT "'"
CLOCATE ':'LENGTH + 3
CURSOR COLUMN
RETURN
/*********************  Outside ***********************************/
/*               Cursor is outside file                           */
Outside:PROCEDURE
Arg Line
BTic = INDEX(Line,"'")
ETic = LASTPOS("'",Line)
If ((BTic <> 0) & (ETic <> 0)) & BTic < ETic
 Then CALL DelTic BTic Etic Line
 Else If (BTic = 0) & (ETic = 0) Then Do
                                       BTic = 1
                                       Call TicIt BTic Line
                                       End
                                 Else EMSG "Can't Tic it ..."
Return
/*********************  Inside *************************************/
/*               Cursor is inside file                            */
Inside:PROCEDURE
Arg BTic Line
@Tic = SUBSTR(Line,BTic,1)
If @Tic <> "'" Then Call TicIt Btic Line
               Else Do
                     NTic = INDEX(Line,"'",BTic+1)
                     If NTic = 0 Then EMSG 'Can''t Tic it here...'
                                 Else CALL DelTic BTic NTic Line
                    End
Return

Cecil Kersey
Systems Programmer
Lockheed Aeronautical Systems Company (USA)      c Cecil Kersey/LASC 1992

