How full is your spool?

ÝEditor's note: this EXEC offers an alternative approach to the
ones that appeared on page 3 of issue 3, and page 13 of issue 30.¨

CP does not have the equivalent of the CMS QUERY DISK
command for spool space.  It issues the message DMKPGT401I
when TEMP SPACE (spool) is 90% full; or DMKPGT400I, when
the spool is full, in which case it may be too late to avoid a re-IPL
of VM.

QSPOOL tries to overcome this deficiency by showing (in
cylinders and 4K pages) how much TEMP space is defined, how
much is available and used, and the percentage of utilisation.

QSPOOL EXEC scans real memory (thus requiring a virtual
machine with class C or E for its execution) to locate the CP
module DMKPGT that allocates spool pages.  This module has
the data for TEMP space used and available.

Users should customise this REXX by changing (when
appropriate) the device type used for TEMP space; in our case, a
3375 DASD.

Unfortunately, mixed configurations (3380 and 3375s, for
example) are not covered because there is no way to evaluate how
many cylinders are being used on two different devices.  This
restriction does not affect the result for number of pages.

This program was tested under a VM/SP HPO Release 4.2.

/* Qspool displays utilization of dasd spool space
   Note: please hard-code your own spool device in the following line */
device        = '3375'
devices       = '3380 3375 3350 3340 2305 3330 2314'
pages_per_cyl = '150  96   120  24   24   57   32'
parse souce  . . fn .
signal on syntax
address command
if arg(1)     = '?' then signal help
pages_per_cyl = word(pages_per_cyl,find(devices,device))
/* get full words dmkpgttu and dmkpgttm in real memory               */
parse value diagrc(8,'DCP' dmkpgttu_addr().12) with rc . . dmkpgttu dmkpgttm .
if rc ¬=0   then signal dcp_error
/*  Convert and format output                                        */
dmkpgttu      = x2d(dmkpgttu)
dmkpgttm      = x2d(strip(dmkpgttm))
spool_cyls    = dmkpgttm/pages_per_cyl
used_cyls     = trunc(.99 + dmkpgttu/pages_per_cyl)
avail_cyls    = spool_cyls - used_cyls
pct_util      = trunc(dmkpgttu*100/dmkpgttm,2)
avail_pags    = dmkpgttm - dmkpgttu
/*   Display results    */
say  'SPOOL TOTAL (cyls-pages)  SPOOL LEFT   SPOOL USED   UTILIZATION'
say   center(spool_cyls' - 'dmkpgttm,15),
      right(avail_cyls' - 'avail_pags,20),
      right(used_cyls' - 'dmkpgttu,15) ,
      right(pct_util,10)'%'
exit
/*    procedure to get the address of DMKPGTTU field in module DMKPGT */
dmkpgttu_addr: procedure
'GLOBALV SELECT DMKPGT GET DMKPGTTU'   /* addr is already loaded ? */
if rc ¬= 0 then signal globalv_error   /* some error ...           */
if dmkpgttu ¬= '' then return dmkpgttu /* loaded - return address  */
save_st = 000                          /* start scan at location 0 */
start   = save_st                      /* first value for DCP      */
incr    = 900                          /* byte count and increment */
fence1  = c2x('PGT')                   /* what we're looking for   */
do 100 until tail ¬= ''                /* start scanning           */
   parse value diagrc(8,'DCP' start'.'incr) with rc . addr (fence1) tail
   if rc ¬= 0  then signal dcp_error   /* something went wrong ... */
   start = d2x(x2d(start) + x2d(incr)) /* increment and convert    */
end
parse var tail '15'x  addr .           /* start of DMKPGT + 8
if addr = ''                           /* not found ...
   then do
           say 'Delimiter' x2c(fence1) 'not found in VM nucleus from',
                save_st 'to' start
           say 'Check if name of module DMKPGT has changed'
           exit
         end
/*  now we dump into the middle of DMKPGTU for another DCP  */
addr    =  d2x(x2d(addr) + x2d(800))   /* add & convert            */
fence2  = '08040201'                   /* bit map in DMKPGTU code  */
parse value diagrc(8,'DCP' addr'.200'),
            with rc . (fence2) '15'x dmkpgttu_addr .
if rc ¬= 0  then signal dcp_error
/*  load address in a global variable for faster response next time  */
'GLOBALV SELECT DMKPGT SET DMKPGTTU' dmkpgttu_addr
if rc ¬= 0 then signal globalv_error
if dmkpgttu_addr ¬= ''                  /* now we return the address */
   then return dmkpgttu_addr
/*   delimiter (bit map) not found - issue message and quit  */
say fence2 'not found in DMKPGT. Check in source if code has changed
exit
/*  Error and help routines  */
syntax:    say 'Error' rc '('errortext(rc)') in exec' fn', line' sigl
           exit rc
dcp_error:
           if rc = 1
              then say 'Your virtual machine does not have CP class',
                       'C or E to run this program'
              else say 'Error' rc 'executing CP command DCP'
           exit rc
globalv_error
           say 'Error' rc 'executing CMS command GLOBALV'
           exit rc
help:      say 'Format  :' fn
           say 'Function: To display spool space used in cylinders and pages
           say 'Note    :' fn 'requires CP class C or E for proper execution


Daniel Arany
Technical Support Manager
Texaco (Brazil)  ) Texaco (Brazil) 1989

