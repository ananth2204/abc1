 Categorised output of Query Names
When I issue a Query Names I am usually checking on some aspect of system
service.  Are all my service machines logged on?  What maintenance staff are
logged on?  What operators are available?  How many *end* users are logged on?
While I can glean this information from the output of Query Names, it is not
convenient.  The following REXX EXEC collects the output from a Query Names and
separates the names of the virtual machines into the following groups:
Maintenance, Service, Staff, Users, Disconnected Users, and Operators.  The EXEC
contains a list of names of service machines; if a member of the list is not
logged on that member is specifically reported as not logged on.
Figure 1 is an example of the output of the EXEC.
The category of machine is listed in the left hand column, followed by the
number of logged on machines in this category and how many of them are
disconnected.  So we see that there are 17 maintenance machines logged on, and
16 of them are disconnected.  At the bottom of the report we see that CMSBATCH
is not logged on.
As you look at the EXEC you will see where I keep the lists of service machines,
staff and maintenance user-ids.  You can change these or add new categories as
the need exists.
/* FORMAT output from Query Names into the following catagories:
        MAINT
        SERVICE
        STAFF
        USER
        DISCONNECTED
        USER
Following the class designation, we will report how many machines there are in
this category and how many of those machines are disconnected.
*/
service='GCS RSCS        CMSBATCH BATCHL BATCHM',    /* Names of our */
        'SMART DISKACNT SPINNER SPOOLER PGMOPER', /* service machines*/
        'MAILER SANDBA DSCDBA SQLDBA VMARCH VMBACKUP PLOT MUAOPER'
maint ='ACCTMGR MAINT SWMGR',   /* Names of our Maintenance machines */
       'VMRMAINT'
staff ='JDKINNE MANAGER CHRIS'
                             /*Staff whose userids do not end "STAF"*/
types='MAINT SERVICE STAFF USER DSC OPER'             /* Categories */
in_service=''
loggedoff=''
CL.=1
CP.=1
DSC.=0
outline.=''
total=0
users=Diag(08,'QUERY NAMES')               /* who is on the system? */
users = translate(users,  ' '  ,  ','||'15'x)
                                           /*Drop commas & line ends*/
do i=1 to WORDS(users)
  parse var users name '-' term users
  name=strip(name)
    select
      when name='' then iterate
      when substr(name,1,5)='LOGON' then iterate
      when substr(name,1,4)='LOGN' then iterate
      when find(SERVICE,name)>0 then do    /*add to in service list */
          type='SERVICE'
          in_service=in_service name
          end
      when Find(maint,name)>0   then type='MAINT'
      when SUBSTR(name,5,4)='STAF'|find(staff,name)>0
                                                    then type='STAFF'
      when substr(name,5,4)='OPER' then type='OPER'
      when term='DSC' then type='DSC'
      otherwise type='USER'                        /* The catch-all */
      end                                                 /* select */
    line#=cl.type            /* cl.type: Current Line for this type */
     pos#=cp.type          /* cp.type: Current Position for this type*/
    outline.type.line# ,   /* add name & term to proper type output */
         =overlay(name term,outline.type.line#,15*pos#+7,14)
    if term='DSC' then DSC.type=DSC.type+1
                                           /*Keep count of disc mach*/
    cp.type=cp.type+1                   /* advance position pointer */
    if cp.type>4 then do
        cl.type=cl.type+1                /* go to next line if need */
        if cl.type>2                     /* Where to start on line  */
          then cp.type=0
          else cp.type=1
        end                                            /* cp.type>4 */
    end                                      /* i=1 to words(users) */
/* Output formatted information */
do i=1 to words(types)
  type=word(types,i)
  if cl.type¬=1 | cp.type¬=1 then do
                                  /*Machines of this type logged on?*/
    num=4*(cl.type-1)+cp.type-1+max(0,cl.type-2)
                                              /* How many logged on?*/
    total=total+num               /* add to total number of machines*/
    outline.type.1= ,             /* record # machines of this type */
        overlay(type num'/'DSC.type,outline.type.1,1,14)
    do il=1 to cl.type                          /* Output each line */
      say outline.type.il
      end                                        /* il=1 to cl.type */
    end                                          /* cl.type¬=1 .... */
  if cp.type¬=1 then say                        /* add a blank line */
  end                                        /* i=1 to words(types) */
say 'Total Virtual Machines:' total
if words(in_service)<words(service) then do     /* Display names of */
  do j=1 to words(service)        /*  Service machines NOT logged on*/
    if find(in_service,word(service,j))=0
      then loggedoff=loggedoff word(service,j)
    end
  Say "Service machines not logged on:" loggedoff
  end
John Kinne
Software Coordinator
Miami University (USA)   ) J Kinne 1988


























