 Joining CMS files
This article describes a useful REXX program to join any CMS file with any other
CMS file into an output CMS file.
IBM's CMS product does not provide this useful function.  The XEDIT 'join' macro
provides the opportunity to join two lines into one line in edit mode, but
JOINCMS allows an entire CMS file or row of a CMS file to be joined into an
output CMS file, which contains the two entire files with a logical length
record, which matches the sum of both input files.  A help CMS file is provided.
JOINCMS HELP
- ENTER YOUR INPUT FILES FN FT FM:
  FN FT FM (FILE 1) IS THE FIRST  INPUT FILE IDENTIFICATION.
  FN FT FM (FILE 2) IS THE SECOND INPUT FILE IDENTIFICATION.
  IF FN FT FM (1 OR 2) MISSING, THE PROGRAM WILL ASK FOR IT
- ENTER YOUR OUTPUT FILE FN FT FM:
  FN FT FM OUTPUT FILE IDENTIFICATION.
  IF OUTPUT FILE ALREADY EXISTS, THEN PRESS <ENTER> TO ERASE EXISTING
  OR <NO> TO NOT ERASE THE SPECIFIED ID FILE.
- ENTER RECORDS SPECIFICATIONS FOR COLUMNS TO BE JOINED:
  E.G:  1 20 30 23 24 2     FILE 1 = FROM COLUMN 1 TO 20 AT COLUMN 30
        | |  |  |  |  |     FILE 2 = FROM COLUMN 23 TO 24 AT COLUMN 2
        |_|__|__|__|__|_____FROM COLUMN 1  IN FIRST  INPUT  FILE
          |__|__|__|__|_____TO   COLUMN 20 IN FIRST  INPUT  FILE
             |__|__|__|_____AT   COLUMN 30 IN        OUTPUT FILE
                |__|__|_____FROM COLUMN 23 IN SECOND INPUT  FILE
                   |__|_____TO   COLUMN 24 IN SECOND INPUT  FILE
                      |_____AT   COLUMN 2  IN        OUTPUT FILE
  IF COLUMNS SPECIFICATIONS OFFSET OR OVERLAP THEN PROGRAM ASKS AGAIN.
- COMMAND AT USER'S CONSOLE: JOINCMS FN1 FT2 FM1 FN2 FT2 FM2
- COMMAND AT USER'S CONSOLE: JOINCMS HELP (GIVES YOU THIS HELP)

JOINCMS EXEC
/* JOIN TWO CMS FILES OF ANY TYPE                                  */
VMFCLEAR                                           /* CLEAR SCREEN */
DEBUT:
ARG FNAME1 FTYPE1 FMODE1 FNAME2 FTYPE2 FMODE2 /* IDS FROM CMD LINE */
IF FNAME1="" THEN DO            /* IF NO ARG RETURNED THAN ASK FOR */
                  CALL ASKN
                  END
IF FNAME1="HELP" THEN DO            /* IF HELP REQUIRED THEN DO IT */
                      "TYPE JOINCMS HELP A"
                      EXIT
                      END
STATE FNAME1 FTYPE1 FMODE1                   /* STATE INPUT FILE 1 */
IF RC=0 THEN NOP
ELSE DO
 SAY "*** YOUR INPUT FILE (1) DOES NOT EXIST ***"FNAME1 FTYPE1 FMODE1
          EXIT
        END
STATE FNAME2 FTYPE2 FMODE2                   /* STATE INPUT FILE 2 */
IF RC=0 THEN NOP
ELSE DO
 SAY "*** YOUR INPUT FILE (2) DOES NOT EXIST ***"FNAME2 FTYPE2 FMODE2
          EXIT
        END
CALL LRECS
CALL ASKO
CALL ASKR
DO FOREVER                                  /* LOOP ON INPUT FILES */
EXECIO 1 DISKR FNAME1 FTYPE1 FMODE1
IF RC=0 THEN NOP
IF RC=2 THEN LEAVE                                  /* END OF FILE */
IF RC=1 THEN DO
 SAY "*** YOUR INPUT FILE (1) DOES NOT EXIST ***"FNAME1 FTYPE1 FMODE1
          EXIT
        END
IF RC>2 THEN DO
  SAY "*** YOUR INPUT FILE (1) DOES NOT EXIST ***"FNAME1 FTYPE1 FMODE1
          EXIT
        END
PARSE PULL REC1
EXECIO 1 DISKR FNAME2 FTYPE2 FMODE2
IF RC=0 THEN NOP
IF RC=2 THEN LEAVE                                  /* END OF FILE */
IF RC=1 THEN DO
 SAY "*** YOUR INPUT FILE (2) DOES NOT EXIST ***"FNAME2 FTYPE2 FMODE2
          EXIT
        END
IF RC>2 THEN DO
 SAY "*** YOUR INPUT FILE (2) DOES NOT EXIST ***"FNAME2 FTYPE2 FMODE2
          EXIT
        END
PARSE PULL REC2                      /* JOIN THE TWO SPLIT RECORDS */
RECA=SUBSTR(REC1,FIRST,SECOND)
RECB=SUBSTR(REC2,FIRST1,SECOND1)
RECC=COPIES("",TARO)
IF FLAGT="A" THEN DO
                     RECD1 = RECA
                  END
IF FLAGT="B" THEN DO
                     RECD1 = RECB
                  END
RECD=RECC||RECD1
RECJ=LENGTH(RECD)
RECG=RECF-RECJ-1
RECH=COPIES("",RECG)
IF RECF1="A" THEN DO
                     RECX1 = RECA
                  END
IF RECF1="B" THEN DO
                     RECX1 = RECB
                  END
RECX=RECD||RECH||RECX1
RECY=LENGTH(RECX)
SET CMSTYPE HT
EXECIO 1 DISKW OUT FTYPE3 FMODE3 O F RECY"(STRING" RECX
SET CMSTYPE RT
END                                                        /* DONE */
FINIS FNAME1 FTYPE1 FMODE1                    /* CLOSE INPUT FILES */
FINIS FNAME2 FTYPE2 FMODE2
"ERASE "FBIDON WORK MBIDON                      /* ERASE WORK FILE */
ADDRESS CMS ' X ' OUT FTYPE3 FMODE3        /* EDIT THE OUTPUT FILE */
SAY "**** END OF JOINCMS PROGRAM ***"
EXIT
ASKN:
SAY "*** ENTER IDS 'FN FT FM' FILE(1) AND 'FN FT FM FILE(2) ***"
PULL FNAME1 FTYPE1 FMODE1 FNAME2 FTYPE2 FMODE2
IF FNAME1="" THEN SIGNAL ASKN
IF FTYPE1="" THEN FTYPE1="XX"                          /* DEFAULTS */
IF FMODE1="" THEN FMODE1="A"
IF FNAME2="" THEN FNAME2=FNAME1
IF FTYPE2="" THEN FTYPE2"XXX"
IF FMODE2="" THEN FMODE2="A"
RETURN
ASKO:
SAY "*** ENTER ID 'FN FT FM' OUTPUT FILE ***"
PULL OUT FTYPE3 FMODE3
IF OUT="" THEN SIGNAL ASKO
IF FTYPE3="" THEN FTYPE3=FTYPE1                        /* DEFAULTS */
IF FMODE3="" THEN FMODE3="A"
"STATE "OUT FTYPE3 FMODE3
IF RC = 0 THEN DO
            SAY "*** OUTPUT FILE ALREADY EXISTS DANGER : "OUT FTYPE3,
                   FMODE3 "WILL BE ERASED ***"
            SAY "*** IF YES THEN PRESS <ENTER> ELSE PRESS <NO> ***"
            PULL ANSWER
            IF ANSWER="NO" THEN DO
                                 SAY "*** END OF JOINCMS PROGRAM ***"
                                 EXIT
                                 END
            "ERASE "OUT FTYPE3 FMODE3
            END
RETURN
ASKR:                        /* ASK AND CHECK COLUMNS TO BE JOINED */
SAY "*** ENTER RECORDS SPECIFICATIONS FOR COLUMNS TO BE JOINED ***"
SAY "EX:  1 20 30 23 24 2  FILE(1)= FROM  1 TO 20 AT 30 "
SAY "                      FILE(2)= FROM 23 TO 24 AT  2 "
PULL FIRST SECOND TAR1 FIRST1 SECOND1 TAR2
IF FIRST="" THEN SIGNAL ASKR
IF FIRST1="" THEN SIGNAL ASKR
IF SECOND="" THEN SIGNAL ASKR
IF SECOND1="" THEN SIGNAL ASKR
IF FIRST<0 THEN SIGNAL ASKR
IF FIRST>255 THEN SIGNAL ASKR
IF SECOND<FIRST THEN DO
                     SAY "INVALID SPECIFICATIONS RETYPE ?"
                     SIGNAL ASKR
                     END
IF SECOND1<FIRST1 THEN DO
                     SAY "INVALID SPECIFICATIONS RETYPE ?"
                     SIGNAL ASKR
                     END
IF TAR1="" THEN TAR1="1"
IF TAR2=TAR1 THEN DO
                     SAY "INVALID SPECIFICATIONS RETYPE ?"
                     SIGNAL ASKR
                  END
IF TAR2<TAR1 THEN DO
                  IF (SECOND1-FIRST1+TAR2)<TAR1 THEN NOP
                  ELSE DO
                     SAY "INVALID SPECIFICATIONS RETYPE ?"
                     SIGNAL ASKR
                     END
                  END
IF TAR2>TAR1 THEN DO
                  IF (SECOND-FIRST+TAR1)<TAR2 THEN NOP
                  ELSE DO
                     SAY "INVALID SPECIFICATIONS RETYPE ?"
                     SIGNAL ASKR
                     END
                  END
IF TAR2>TAR1 THEN DO
                  TAR0=TAR1-1
                  FLAGT="A"
                  RECF =TAR2
                  RECF1="B"
                  END
IF TAR1>TAR2 THEN DO
                  TAR0=TAR2-1
                  FLAGT="B"
                  RECF=TAR1
                  RECF1="A"
                  END
SECOND=SECOND-FIRST+1
SECOND1=SECOND1-FIRST1+1
RETURN
LRECS:                                   /* CHECK THE LONGEST FILE */
MAKEBUF
"LISTFILE "FNAME1 FTYPE1 FMODE1" (LIFO ALLOC"
 PULL LONG
LONG=SUBSTR(LONG,34,11)
"LISTFILE "FNAME2 FTYPE2 FMODE2" (LIFO ALLOC"
PULL LONG1
LONG1=SUBSTR(LONG1,34,11)
IF LONG = LONG1 THEN RETURN
IF LONG>LONG1  THEN DO
               "COPY "FNAME2 FTYPE2 FMODE2 FNAME2" WORK " FMODE2
               FTYPE2="WORK"
               FBIDON=FNAME2
               TBIDON="WORK"
               MBIDON=FMODE2
               DIFF = LONG-LONG1
               NDIFF=COPIES(" ",80)
               EXECIO DIFF DISKW FNAME2 FTYPE2 FMODE2 "(STRING" NDIFF
                  END
             ELSE DO
               "COPY "FNAME1 FTYPE1 FMODE1 FNAME1" WORK " FMODE1
               FTYPE1="WORK"
               FBIDON=FNAME1
               TBIDON="WORK"
               MBIDON=FMODE1
               DIFF = LONG1-LONG
               NDIFF=COPIES(" ",80)
               EXECIO DIFF DISKW FNAME1 FTYPE1 FMODE1 "(STRING" NDIFF
                  END
DROPBUF
RETURN
Pietro Simonetti
Junior Systems Programmer
La Neuchateloise Assurances (Switzerland)
) La Neuchateloise Assurances 1988


































