 ROWCOLAD macro
This macro can be used to compute the sum of a row or a column of REXX numbers.
The computed sum will be stored in the file.
Define a function key as 'MACRO ROWCOLAD'.  Position the cursor on the first
number of the row/column (this is the number on top of a column or the left-most
number of a row).  Press the function key.  Move the cursor to the place where
the answer has to be stored.  If the linenumber of this second cursor position
is equal to the linenumber of the first cursor position, all numbers between the
first and last position are added.  If the first linenumber is less than the
last line number, the column of numbers on the lines between the first line and
the line before the last line is added.  A number belongs to the column if it
has one character in the screen-column where the cursor was positioned when you
marked the first number.
Datatype validity checks are done on all numbers.  In case of invalid datatypes,
error messages will be displayed, and the operation will not be done.  The
result will be left aligned to the second cursor position.
When a column of numbers is added, a row of bars, ------, may be a part of the
column.  It will be skipped, and will not affect the computed result.  Blank
lines are also allowed to exist between the top line and the bottom line of the
column.
ROWCOLAD XEDIT
'PRESERVE'
'SET NULLS OFF'
MAKEBUF
'EXTRACT /CURSOR/CURLINE/'
firstline = cursor.3
firstline = cursor.4
'MSG Position cursor on place at which',
               ' answer will be stored and press ENTER'
'READ'
DESBUF
'EXTRACT /CURSOR/CURLINE/'
lastline = cursor.3
lastcol  = cursor.4
SELECT
  when (firstline = lastline) then do
    'SET CURLINE ON' cursor.1
    ':'cursor.3
    'EXTRACT /CURLINE/CURSOR/'
    total = 0
    do i=1 to words (curline.3)
      start = workindex(curline.3,i)
      end   = start + wordlength(curline.3,i)
      if (end >=firstcol) & (lastcol >=end) then do
        number = word(curline.3,i)
        if datatype (number,'N') ¬=1 then signal wrongtype
        total = total + number
      end
      if (lastcol < end) | (i = words(curline.3))    then do
        'CL : 'max(1,lastcol-length (total)+1)
        'COV 'total
        leave
      end
    end
  end
  when (firstline < lastline) then do
    ':'firstline
    'EXTRACT /CURLINE/LINE/'
    total   = 0
    do while (line.1 < lastline-1)
      'EXTRACT /CURLINE/LINE/'
      number = ''
      do i=1 to words(curline.3)
        start = wordindex(curline.3,i)
        end   = start + wordlength(curline.3,i)
        if (firstcol>=start) & (firstcol<=end) then do
           number = work(curline.3,i)
          leave
        end
      end
      if number = copies('-',length(number)) then do
        'NEXT 1'
        Iterate
       end
      if datatype(number,'N')¬=1 | number='' then signal wrongtype
      total = total + number
      'NEXT 1'
    end
    ':' lastline
    'CL : 'max(1,lastcol-length(total)+1)
    'COV 'total
  end
  otherwise do
    'EMSG ERROR: First line must be above last line.'
  end
END
'RESTORE'
EXIT
WRONGTYPE:
  "MSG ERROR: '"number"' is not a valid REXX Number.  ",
                        "Operation will not be done"
EXIT
Andries van Dijk
Programmer
Erasmus Universiteit Rotterdam (The Netherlands)  ) Xephon 1988





































