'Answerphone' for terminals

The VMCF program VMCFMSG3 responds automatically to
special messages sent by other users to your terminal during
your absence.  Your terminal must be in a connected or
disconnected state.  The SMSG option must be set on.  In order
to start the responder you start the BUSY EXEC.  You will be
prompted to enter the text you want the other user to receive
during your absence.  The message can explain what you are
doing or that you are busy.  The length of the message cannot
exceed 120 characters.  After the text of the message is entered
you can disconnect your virtual machine.  The program will
send the stored message to each user who sends you any
special message.  The messages sent by other users will be
saved in the console log of your virtual machine.  After coming
back to your terminal and connecting to your virtual machine
you can stop the responder with the HX command and close
the console.  You then obtain a report about what the responder
has received during your absence.  The program is not only
useful because of this function, but is interesting in itself
because it uses CP SM commands (special message using the
VMCF service).  You are now able to program your own
responders with other functions.  The program also contains an
example of SVC 202 call usage.  We notice that similar
responders are built into many IBM licensed programs, eg in
RSCS Version 1 (CMS version).


BUSY EXEC

/*   */
'cp spool console *'
'cp spool console start'
'LOAD VMCFMSG3'
'START VMCFMSG3'


VMCFMSG3 ASSEMBLE PROGRAM

VMCFMSG3 CSECT
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         STM   14,12,12(13)    save the registers
         BALR  12,0            establish address
         USING *,12            r12 as a basis
         ST    13,SAVEMAIN+4   store old save in new save
         LA    15,SAVEMAIN     load address of new save
         ST    15,8(13)        store new in third word of old
         LR    13,15           load address of new in r13
         WTO   'ENTER TEXT (120 CHARACTERS)'     operator message
         RDTERM DATA,120         read your message text
         LA    5,PLIST          load address of vmcf parameter list
         SR    8,8              clear r8
         L     8,=A(RECVDATA)   load addr of receive area in r8
         ST    8,VMCPVADA       store addr of rec area in plist
         SR    8,8              clear r8
         LA    8,280            load the length of rec area
         ST    8,VCMPLENA       store the length in plist
         MVC   VMCPUSER,TARGET  move your name in plist
         DC    X'83560068'      authorize yourself as a vmcf user
         LTR   6,6              check if error
         BNZ   ERROR            if error then branch
         B     AFTER            if no then continue
ERROR    WTO   'ERROR'          operator message
         ST    6,CODE           store r6 in code
         CLI   CODE+3,X'01'     compare if rc = 01
         BZ    ERROR1           if yes branch to error message
         CLI   CODE+3,X'06'     compare if rc = 06
         BZ    ERROR6           if yes branch to error message
         CLI   CODE+3,X'0F'     compare if rc = 0F
         BZ    ERROR15          if yes branch to error message
         B     SR6              branch to clear
ERROR15  WTO   'ERROR15'        error message
         B     SR6              branch to clear
ERROR1   STO   'ERROR1'         error message
         B     SR6              branch to clear
ERROR6   WTO   'ERROR6'         error message
SR6      SR    6,6              clear r6
         B     EXIT             exit
AFTER    WTO   'RESPONDER STARTED'   message
TEST     BAL   9,VMCFWAIT       branch to wait routine,ret addr in r9
         XC    ECBVMCF,ECBVMCF  clear wait ecb after message
         B     TEST             branch to wait routine
VMCFWAIT DS     0H                waiting routine
         WTO    'WAITING FOR MESSAGES'    operator message
         MVI    ECBVMCF,X'00'        clear ecb
         HNDEXT CLR                  clear external interrupt
         HNDEXT SET,EXTINTE          set external interrupt
         LTR    15,15                check if error
         BNZ    ERRORHND             branch if error
         STCTL  0,0,COSAVE           load control reg
         OI     COSAVE+3,VMCFENAB    enable for vmcf interrupts
         LCTL   0,0,COSAVE           store mask into control register
         WAITECB ECB=ECBVMCF         wait for message
         BR     9                    branch to address in r9 after mess
ERRORHND WTO    'INTERRUPT ERROR'    error message
         B      EXIT                 exit
         DROP   12                   drop basis register
         USING  EXTINTE,15           establish new basis register
EXTINTE  DS     0H                   external interrupt handler
         STM    R14,R12,12(R13)      save the registers
         ST     R13,SAVEEXT+4        store old save in second word
         LR     11,1                 load address of plist in r11
         LA     R13,SAVEEXT          load address of new in r13
         LR     R12,R15              load r15 in r13
         SL    12,=A(EXTINTE-VMCFMSG3)  load basis address in r12
         DROP  15                    drop basis reg 15
         USING VMCFMSG3,12           establish new basis reg
         CLC   X'62'(2,11),VMCFTYPE  check if vmcf interrupt
         BC    4,GO                  exit if no
         LA    4,RECVDATA            load address of rec area
         MVC   OUTPUT,0(4)           move received text in new area
         MVC   USERID(8),OUTPUT+32   move user-id of sender
         MVC   MESSAGE+13(120),DATA  move your message
         MVC   MESSAGE+4(8),USERID   move the user-id of sender
         WRTERM USERID,8             write sender user-id in console
         WRTERM OUTPUT+32,140        write received message in console
         SR    0,0                   clear r0
         SR    1,1                   clear r1
         LA    0,EXPLIST1            load addr of extended svc plist
         LA    1,PLIST1              load addr of svc plist
         ICM   1,B'1000',=X'02'      move the code in r1
         SVC   202                   call svc
         DC    AL4(1)                define constant
         LA    3,ECBVMCF             load addr of ecb
         MVI   ECBVMCF,X'40'         post ecb
         B     EXITEXT               exit exit routine
GO       EQU   *
EXITEXT  L     R13,SAVEEXT+4        load address of old
         LM    R14,R12,12(R13)      restore registers
         SR    R15,15               clear r15
         BR    R14                  branch to entry address
SAVEEXT  DS    18F                  exit routine own savearea
PLIST1   DS    0F                   svc plist
         DC    CL8'CMS     '        cms environment
EXPLIST1 DS    0F                   extended svc plist
         DC    A(PLIST)             address of svc plist
         DC    A(BEGARG1)           address of begin of arguments
         DC    A(ENDARG1)           address of end of arguments
         DC    A(0)                 define constant
BEGARG1  DS    0F                   begin of arguments
MESSAGE  DC    CL140'MSG          I HAVE TO GO'   send msg command
ENDARG1  EQU   *
USERID   DC    CL8'  '           user-id of sender
OUTPUT   DS    CL180             output area for sender message
VMCFTYPE DC    XL2'4001'         vmcf external interrupt code
DATA     DC    CL120'I have to go      '     your message
EXIT     L     R13,SAVEMAIN+4    load address of old save
         LM    R14,R12,12(R13)   restore registers
         SR    R15,15            clear r15
         BR    R14               branch to entry point
         DS    0F
CODE     DS    F                 error code
SAVEMAIN DS    18F               own savearea
COSAVE   DS    F                 control register save
ECBVMCF  DS    F                 vmcf ecb
VMCPFLG3 DC    XL1'A0'              vmcf flag
VMCFENAB EQU   X'01'
TARGET   DC    CL8'ANDRZEJ'      your name(arbitrary)
         DS    0D
PLIST    DS    0CL40            vmcf plist
VMCPFLG1 DC    XL1'20'          vmcf flag
VMCPFLG2 DC    XL1'00'          vmcf flag
VMCPFUNC DC    XL2'0000'        vmcf function code
VMCPMID  DC    XL4'0000'        msgid
VMCPUSER DC    CL8'        '    vmcf name
VMCPVADA DS    A                address of buffer
VMCPLENA DC    XL4'00000000'    length of buffer
VMCPVADB DS    A                address of buffer
VMCPLENB DC    XL4'00000000'    length of buffer
VMCPUSE  DC    CL8'00000000'    user data
VMCPSEND DC    XL2'0002'        send function code
VMCPRECV DC    XL2'0005'        receive function code
VMCPIDEN DC    XL2'000A'        identify function code
VMCPSENX DC    XL2'0004'        sendx function code
         DS    0D
RECVDATA DC    CL256' '         receive buffer
         DC    CL24' '          receive buffer
RECVLEN  EQU   *-RECVDATA       length of receive buffer
         END   VMCFMSG3


Andrzej Popielewicz
System  Analyst
Danet GmbH (Germany)                   c Danet GmbH 1991

