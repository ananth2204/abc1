 Query DASD sorted by guest-id
This program was written for the following environment: VM/XA SF 2, MVS/XA,
DOS/VSE SIPOE, VM/SP and 40 x 3380 A and E.
When running a VM system with several guests, where DASDs are detached from one
and attached to another, you might find this program (or the basic idea) useful
- even if you are just migrating from VSE to MVS and you can't be sure which
guest owns which DASD at a given time.  You probably find it a nuisance being
unable to select for one guest machine when entering Query DASD.  There are
forty 3380s in this installation and we find the program helpful.
There is no need to solve this problem with an assemble - you could do it as
well with EXEC 2 or REXX.  When the program has to display all DASD it writes
the data in a file and lets XEDIT display it, making it possible to scroll
backwards.
If a guest name of 'system' or 'owned' was entered, the program types the data.
The structure of the response from CP varies depending on what kind of VM you
are running.  This program was designed for VM/XA SF 2 and I know that with
VM/SP 4 the layout of the response is different.  Also there was no need to
change the data given from CP.
I took the following criteria for selection:
1    Without any parameters all used DASDs are displayed (edited).
2    Entering a guest-id - all those DASDs are displayed which are attached or
dedicated to this guest.
3    'System' displays the DASD attached to system (defined with an MDISK)
statement in the XA directory).  In VM/XA you have to attach these addresses to
a system otherwise they will not be on-line when that guest IPLs.
4    'Owned' displays the DASD defined with the SYSOWN macro in DMKSYS.
QDA      CSECT
         PRINT NOGEN
         USING QDA,R15
         STM   R1,R15,RSAVE
         LR    R10,R15
         DROP  R15
         USING QDA,R10
         USING NUCON,R0     TO GET NUMBER OF LINES IN STACK
         B     START
*
* REGISTER EQUATES
         REGEQU
RSAVE    DS    0F
R1SAVE   DC  R2SAVE   DC  R3SAVE   DC    F'0'
R4SAVE   DC    F'0'
R5SAVE   DC    F'0'
R6SAVE   DC    F'0'
R7SAVE   DC    F'0'
R8SAVE   DC    F'0'
R9SAVE   DC    F'0'
R10SAVE  DC    F'0'
R11SAVE  DC    F'0'
R12SAVE  DC    F'0'
R13SAVE  DC    F'0'
R14SAVE  DC    F'0'
R15SAVE  DC    F'0'
SAVER15  DC    F'0'
START    EQU   *
         MVC   PARAM(8),8(R1)        SAVE PLIST
         CLI   PARAM,X'FF'           PARAMS ENTERED?
         BE    ALL                   NO, WE TAKE ALL
         B     PARMOK
ALL      EQU   *
         MVC   PARAM(8),=CL8'QDA    '  SYNONYM FOR ALL
PARMOK   EQU   *
* PARAM = FILENAME OUTPUT
         LA    R3,PARAM              IF "QDA PROT A" EXISTS, ERASE IT
         FSSTATE (3)
         LTR   R15,R15
         BNZ   SVC
          FSERASE (3)
         SPACE 2
* SVC 202 CP COMMAND Q DATA (STACK
* IN VM/XA DIAGNOSE X'08' DOES NOT STACK THE RESPONSE
SVC      EQU   *
         LA    R1,QDASD
         SVC   202
         DC    AL4(ERRQDA)           CAN'T APPEAR
* GET NUMBER OF LINES IN PROGRAM STACK IN R7 FOR BCT
         L     R7,NUCNLSTK
* READ STACKED LINES
LOOPREAD EQU   *
         LA    R1,WAITRD
         SVC   202
         DC    AL4(ERRWR)
* WHAT SHOULD WE DISPLAY?
SELECT   EQU   *
         CLC   =C'QDA',PARAM
         BE    WRITE                   MORE THAN ONE PAGE, WRITE IT
         CLC   PARAM(7),STACK+13       OWNED OR SYSTEM STARTS HERE
         BE    DISPLAY                 DISPLAY IT
         CLC   PARAM(7),STACK+22       GUEST-ID STARTS HERE
         BE    DISPLAY
         B     BCTEND
DISPLAY  EQU   *
         WRTERM  STACK,79              TYPE IT
         B     BCTEND
WRITE    EQU   *                       WRITE IN FILE WDA PROT A
         FSWRITE (3),BUFFER=STACK,BSIZE=80
BCTEND   EQU   *
         BCT   R7,LOOPREAD
         CLC   =C'QDS',PARAM               DID WE DO ALL?
         BNE   EXIT                        NO, EXIT
ATTNXED  EQU   *                    XEDIT THE FILE 'QDA PROT A'
         LA    R1,ATTN
         SVC   202
         DC    AL4(ERRATTN)
         B     EXIT
*
ERRATTN  EQU   *
         WRTERM  'ERROR ROUTINE TO SVC 202 ATTN'
         B     EXIT
ERRQDA   EQU   *
         WRTERM  'ERROR ROUTINE TO SVC 202 Q DASD'
         B     EXIT
*
ERRWR    EQU   *
         WRTERM  'ERROR ROUTINE TO SVC 202 WAITRD'
         B     EXIT
*
EXIT     EQU   *
         MVI   STACK,C' '              CLEAR THE STACK - CMS WOULD TRY
         MVC   STACK+1(L'STACK-1),STACK         TO INTERPRET
         LM    R1,R14,RSAVE
         SR    R15,R15                 SET RETURNCODE ZERO
         BR    R14
         EJECT
**********************************************************************
*     WORKING AREAS AND CONSTANTS                                    *
**********************************************************************
* DEFINITION SVC 202
QDASD    DS    0D
         DC    CL8'QUERY   '
         DC    CL8'DASD    '
         DC    CL8'('
         DC    CL8'STACK'
          DC    8X'FF'
* DEFINITION SVC 202 READ PROGRAM STACK
WAITRD   DS    0D
         DC    CL8'WAITRD'
         DC    AL1(1)
         DC    AL3(STACK)
         DC    CL1'S'
         DC    XL1'00'
         DC    8X'FF'
* PLIST XEDIT
         DS    0D
XEDIT    DS    0CL48
         DC    C'XEDIT   '
PARAM    DC    C'        '
         DC    C'DISKS   '
         DC    C'A       '
         DC    8X'FF'
* DEFINITION SVC 202 XEDIT
ATTN     DS    0D
         DC    CL8'ATTN'
         DC    CL4'LIFO'
         DC    AL1(L'XEDIT)
         DC    AL3(XEDIT)
         DC    8X'FF'
*
* CONSTANTS
         LTORG
STACK    DS    CL80
         NUCON
         END   QDA

Werner Saumweber
SQARE Computer Consulting GmbH (West Germany)     ) SQARE 1988

































