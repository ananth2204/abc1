Help for REXX developers

We find the AUTOHELP XEDIT useful when developing
REXX and XEDIT programs.  There are so many REXX and
XEDIT functions and commands that it is sometimes difficult
to remember the exact syntax or sequence of parameters for a
particular one.  This XEDIT, when assigned to a program
function key, enables one to obtain help for a word that is
typed on the screen by simply pressing the function key.

The XEDIT extracts the word upon which the cursor is
currently placed, and, depending on the case of the word and
the filetype being edited, performs a HELP command for the
appropriate environment.  Because we use the convention of
lower case for REXX elements, anything that is purely capitals
or that begins with a quotation mark is assumed to be either an
XEDIT or a CP/CMS command.  Mixed and lower case words
are assumed to be REXX elements.  An unintentional
byproduct of the upper case processing is that when in a file
other than an XEDIT, messages will also be found with
AUTOHELP.  This may be useful when editing console logs etc.


AUTOHELP XEDIT

/*  XEDIT program : AUTOHELP
    Function......: Asks for help on the word on which the cursor is
      currently placed.  If word is in capitals, or preceded by a
      quotation mark, then assume it's an XEDIT or CMS/CP command
      (depending on filetype).  Messages will also be found if the
      filetype is not XEDIT. If it is in mixed or lower case, assume
      it is a REXX element. If the cursor is not positioned exactly on
      a word, this procedure will search first to the left and then to
      the right for a valid alphanumeric word. While searching, non-
      alphanumeric characters are ignored. Assign the command
      'AUTOHELP' to one of the PF keys (eg PF13) in the PROFILE XEDIT
      in order to be able to use this XEDIT.
    Messages......:
      SFWRXH001E - Cursor is not positioned on a valid line of text
      SFWRXH004E - Unable to find any help on the selected word
      SFWRXH005E - Could not find a valid word near cursor position   */
  trace 'off'
  address 'XEDIT'
  signal on 'NOVALUE'
  'EXTRACT /CURSOR/LINE'
  if Cursor.3 <= 0 then do
    'EMSG SFWRXH001E Cursor is not positioned on a valid text line'
    exit 1
  end
  ':'Cursor.3 /*-- make cursor line the current line */
  'EXTRACT /CURLINE'
  ':'Line.1 /*-- go back to original line */
  p = Cursor.4 /*-- get starting column number */
  if p<1 then
    p = 1 /*-- in case in prefix area, etc. */
  Text = CurLine.3
  AlphaNumerics = 'EASNTODIRPLYCHUGMWFBKVQXJZ0123456789'
  /*-- if not on an alphanumeric, then look backwards for a word */
  do while p>1 & pos(translate(substr(Text,p,1)),AlphaNumerics)=0
    p = p - 1
  end
  Last = length(Text)
  /*-- if still not on an alphanumeric, look forwards for a word */
  if pos(translate(substr(Text,p,1)),AlphaNumerics)=0 then do
    do while p<Last & pos(translate(substr(Text,p,1)),AlphaNumerics)=0
      p = p + 1
    end
   /*-- if STILL haven't located a word, there isn't one on this line */
    if pos(translate(substr(Text,p,1)),AlphaNumerics)=0 then do
      'EMSG SFWRXH005E Cursor is not positioned on a valid word'
      exit 5
    end
  end
  q = p
  /*-- have p on a word - just move p to beginning of word, if needed */
  LeftBoundary = ''
  BackTracking = 1
  do while BackTracking
    if p <= 1 then
      BackTracking = 0
    else if pos(translate(substr(Text,p-1,1)),AlphaNumerics) = 0 then
      BackTracking = 0
    else do
      p = p - 1
      LeftBoundary = substr(Text,p,1)
    end
  end
  /*-- and move q to end of word */
 do while q<Last  &  pos(translate(substr(Text,q+1,1)),AlphaNumerics)<>0
    q = q + 1
  end
  TheWord = substr(Text,p,q-p+1) /*-- This is the word! */
  'EXTRACT /FTYPE'
  /*-- if the word is uppercase, or preceded by a quotation mark... */
  if LeftBoundary="'"   LeftBoundary='"'  ,
    TheWord=translate(TheWord) then
    /*-- then assume it's addressed to external environment! */
    if FType.1='XEDIT' then
      Environment = 'XEDIT'
    else
      Environment = ''
  else /*-- otherwise, assume we want info on a REXX element */
    Environment = 'REXX'
  address 'COMMAND' 'HELP' Environment TheWord '(ALL NOTYPE'
  If rc<>0 then do
    if Environment <> '' then
      Environment = '('Environment')'
    'EMSG SFWRXH004E Unable to find help on "'TheWord'"' Environment,
      '(rc='rc')'
  end
exit

Graham Bingham
Senior Software Programmer
SA Reserve Bank (South Africa)

