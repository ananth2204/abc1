 Executable files in CMS
Sometimes it is necessary to execute long sequences of CMS commands (such as
FILEDEF and DLBL) inside REXX programs, making them bulky and hard to maintain.
It would be nice to make them separate 'executable' files, to be modified apart
from the calling program or programs.  An even more flexible approach would
allow variable substitution inside the file.  Prime candidates for variables
would be access modes declared in FILEDEF or DLBL commands.
We developed a REXX routine that executes a file and dynamically substitutes
variables declared in the first line of the file.
The code is supposed to run under VM release 4 onwards.  Installations using
release 3 should modify the EXECIO command to read the file from the program
stack.
Suppose we have a file SAMPLE DLBLS A that contains the following:
(top of file)
* vars: mode1 mode2  catal_name
*
'DLBL IJSYSCT' mode1 'DSN  MASTCAT  (VSAM'
'DLBL UCATALF' mode2 'DSN' catal_name '(VSAM'
(end of file)
Mode1, mode2 and catal_name are variables.  Mode1 and mode2 are access modes,
and catal_name is the name of the current user catalog name.  (This is VSAM
simulation under CMS, required by CSP/AD.)
The first line declares the variables, the second is a comment to be ignored,
and the last two will be executed.  Note that literals are enclosed by quotes,
to provide faster processing by the REXX interpreter.
Suppose also that the master catalog MASTCAT is accessed as B and a user catalog
CSPUSER is accessed as F.
The following exec_file procedure, called as:
     call exec_file sample dlbls a , b f cspuser
will execute the DLBL commands in SAMPLE DLBLS A as follows:
DLBL IJSYSCT B DSN MASTCAT (VSAM
DLBL UCATALF F DSN CSPUSER (VSAM
EXEC FILE ROUTINE
/* This routine receives as parameters a fileid and a string of values.
   It executes the file, replacing each variable named in the first
   line of fileid with the corresponding value passed
                                                                     */
exec file: procedure
  arg fileid , value_string                    /* get fileid & values*/
  'EXECIO * DISKR' fileid '(FINIS STEM LINE.'  /* read file          */
  if rc ¬= 0  then call read error             /* bad execio         */
  parse var line.1 . . var_string              /* get file vars      */
  do until var_string = ''                     /* for all vars named */
     parse var var_string   var   var_string   /* get file variable  */
     parse var value_string value value_string /* get value passed   */
     interpret var '=' value                   /* move value to var  */
  end
  do k=2 to line.0                             /* for all lines read */
     if word(line.k,1) ¬= '*'                  /* if not a comment...*/
        then interpret line.k                  /* then execute line  */
  end
  return

Daniel Arany
Technical Support Manager
Texaco (Brazil)     ) Xephon 1988










