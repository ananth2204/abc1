 SUBMIT EXEC
The SUBMIT EXEC has been designed to allow for the submission of packed or
unpacked CMS members for execution in a DOS/VSE virtual machine.
The CMS file to be submitted may have imbedded '/INCLUDE' statements similar to
the '/INCLUDE' facility in ICCF.  This would be particularly useful for an
installation that is considering a conversion from ICCF to CMS for development
users.  Up to 50 members (packed or unpacked) can be nested together via the use
of the /INCLUDE  fn ft fm statement.  The format of the '/INCLUDE' statement is:
     /INCLUDE filename filetype filemode
The capability of handling packed members will result in considerable savings in
CMS disk utilisation.
Please note that there will be a slight overhead in submission of packed members
to DOS/VSE for execution, especially when nested members incorporating /INCLUDE
statements are used.  This is because POWER/VS still requires that the DOS/VSE
reader files be in 80-character unpacked format.  The format of the SUBMIT
statement is:
    SUBMIT filename filetype filemode RETURN|BLANK
The RETURN option will include a POWER/VS LST statement immediately after the
POWER/VS JOB statement as follows:
    *  LST CLASS=R,LST=SYSLST
Output files will be automatically returned to the CMS user via the ROUTER
virtual machine if the VM/VSE feature has been installed.  This also assumes
that POWER/VS output class R has been designated as the LST class for direction
back to VM for processing.
         &TRACE OFF
         &GOTO -START
-HELP
         CLRSCRN
         &BEGTYPE -END_HELP_MSG
*                          SUBMIT                                    *
* THIS EXEC IS FOR SUBMITTING A JOB FROM CMS TO DOSVSE               *
* BOTH PACKED AND UNPACKED CMS FILE FORMATS ARE SUPPORTED            *
* THE FORMAT OF THE COMMAND IS AS FOLLOWS:                           *
*                 SUBMIT FILENAME FILETYPE FILEMODE RETURN|BLANK     *
* THE CMS FILE TO BE SUBMITTED MAY HAVE IMBEDDED '/INCLUDE'          *
* STATEMENTS SIMILAR TO THE '/INCLUDE' FACILITY OF ICCF              *
* THE FORMAT OF THE INCLUDE STATEMENT IS:-                           *
*                  /INCLUDE FILENAME FILETYPE FILEMODE               *
* UP TO FIFTY /INCLUDE STATEMENTS CAN BE NESTED WITHIN EACH OTHER    *
* THE RETURN PARAMETER WILL INCLUDE A LST CARD AFTER YOUR POWER JOB  *
* AS FOLLOWS:-  '  *  LST CLASS=R,LST=SYSLST'
-END_HELP_MSG
         & EXIT
-START
         &/INCLUDE   = /INCLUDE
         &POWJOB     = &LITERAL OF   *  JOB
         &LST        = 0
         &NOINC      = 0
         &REC_&DEPTH = 0
         &LIMIT      = 50
         &R_&DEPTH   = &REC_&DEPTH
         &ONE = 1
         &CASE M
         &UPPER ARGS
         DROPBUF 0
         &IF &INDEX EQ 4 &GOTO -RLIST
         &IF &INDEX EQ 3 &GOTO -MODE
         &IF &INDEX LT 3 &GOTO -HELP
         &GOTO -HELP
-RLIST
         &LST = &LST + 1
-MODE
         &FILEMODE   = &3
         &FILETYPE   = &2
         &FILENAME   = &1
         CP SP PUN *VSE id*
          LISTFILE &1 &2 &3 (LIFO ALLOC
         &READ VARS &FNAME &FTYPE &FMODE * &LRECL
         &IF &LRECL < 81 &GOTO -FIND
         &IF &LRECL NE 1024 &GOTO -INV_LRECL
         GETFMADR
         &READ VARS * &MODE &DISK &NONELEFT
         SET CMSTYPE HT
         CP SET IMSG OFF
         CP DEFINE T3370 &DISK 4000
         DESBUF 0
         &STACK YES
         &STACK CMSTMP
         FORMAT &DISK &MODE
         COPYFILE &1 &2 &3 = = &MODE (UNPACK
         &ONE = 0
         SET CMSTYPE RT
         LISTFILE &1 &2 &MODE (LIFO ALLOC
         &READ VARS * * * * &LRECL
         &IF &LRECL > 80 &GOTO -INV_LRECL
         &3 = &MODE
         &FILEMODE   = &3
-FIND
         DROPBUF 0
         EXECIO * DISKR &1 &2 &3 0 (ZONE 1 8 FIND /INCLUDE SKIP
         &IF &RC = 0 &GOTO -CALL
         &NOINC = &NOINC + 1
         &IF &LST = 1 &GOTO -CALL
         EXECIO * DISKR &FILENAME &FILETYPE &FILEMODE 1 (FINIS
         SENTRIES
         EXECIO &RC PUNCH
         &FN_&DEPTH = &FILENAME
         &GOTO -EXIT_OK
-CALL
         &CALL -READ_FILE &FILENAME &FILETYPE &FILEMODE
-READ_FILE
         &R_&DEPTH = 0
         &N_&D     = &R_DEPTH
         &GOTO -SKIP
-TEST
         EXECIO 1 DISKR &FN_&DEPTH &FT_&DEPTH &FM_&DEPTH &N_&D (FINIS
         &IF &DEPTH     >= &LIMIT &GOTO -NEST&ERROR
         &IF &DEPTH      = 1 &GOTO -EXIT_OK
         &RETURN
-SKIP
         &FN_&DEPTH = &FILENAME
         &FT_&DEPTH = &FILETYPE
         &FM_&DEPTH = &FILEMODE
         &MODE_&DEPTH = &MODE
-READ_NEXT
         &R_&DEPTH = &R_&DEPTH + 1
         &N_&D     = &R_&DEPTH
-READ_NEXT_ONE
         EXECIO 1 DISKR &FN_&DEPTH &FT_&DEPTH &FM_&DEPTH &N_&D
         &IF &RC = 2 &GOTO -TEST
         &IF &RC = 1 &GOTO -PACKED
         &IF &RC NE 0 &GOTO -ERR_EXECIO
         &READ STRING &RECORD_&DEPTH
         &LABEL = AFTER_INC
         &GOTO -TEST_INC
-PACKED
         DROPBUF 0
         &IF &ONE = 0 &GOTO -PACK_ONE
         GETFMADR
         &READ VARS * &MODE &DISK &NONELEFT
         SET CMSTYPE HT
         CP SET IMSG OFF
          CP DEFINE T3370 &DISK 4000
         DESBUF 0
         &STACK YES
         &STACK CMSTMP
         FORMAT &DISK &MODE
         &ONE = 0
         &MODE_&DEPTH = &MODE
         SET CMSTYPE RT
-PACK_ONE
         EXECIO 1 DISKR &FN_DEPTH &FT_&DEPTH &FM_&DEPTH &N_&D (FINIS
         DROPBUF 0
         COPY &FN_&DEPTH &FT_&DEPTH &FM_&DEPTH = = &MODE_&DEPTH (UNP
         LISTFILE &FN_&DEPTH &FT_&DEPTH &MODE_&DEPTH (FIFO ALLOC
         &READ VARS &FNAME &FTYPE &FMODE * &LRECL
         &IF &LRECL > 80 &GOTO -INV_LRECL
         &FM_&DEPTH = &MODE_&DEPTH
         &GOTO -READ_NEXT_ONE
-AFTER_INC
         &LABEL = AFTER_WRITE
         &GOTO -WRITE
-AFTER_WRITE
         &GOTO -READ_NEXT
-TEST_INC
         &CH01_08     = &SUBSTR OF &RECORD_&DEPTH 01 8
         &CH10_30     = &SUBSTR OF &RECORD_&DEPTH 10 21
         &IF &CH01_08 = &/INCLUDE &GOTO -YES_INC
         &IF &CH01_08 = &POWJOB &GOTO -YES_POW
         &GOTO -&LABEL
-YES_INC
         &STACK LIFO &CH10_30
         &READ ARGS
         &IF &INDEX NE 3 &GOTO -HELP_INC
         &P1        = &1
         &P2        = &2
         &P3        = &3
         &FILENAME  = &P1
         &FILETYPE  = &P2
         &FILEMODE  = &P3
         LISTFILE &1 &2 &3 (LIFO ALLOC
         &IF &RC = 28 &GOTO -NOTFOUND
         &READ VARS &FNAME &FTYPE &FMODE *&LRECL
         &IF &LRECL < 81 &GOTO -CALL_READ
         &IF &LRECL NE 1024 &GOTO -INV_LRECL
-CALL_READ
         &CALL -READ_FILE &FILENAME &FILETYPE &FILEMODE
         &GOTO -READ_NEXT
-YES_POW
         EXECIO 1 PUNCH (STRING &RECORD_&DEPTH
         &LABEL = AFTER_WRITE
         &IF &NOINC = 1 &LABEL = REST
         &IF &LST = 0 &GOTO -&LABEL
         EXECIO 1 PUNCH (STRING   *  LST CLASS=R,LST=SYSLST
         &IF &NOINC = 0 &GOTO -AFTER_WRITE
-REST
         EXECIO * DISKR &FILENAME &FILETYPE &FILEMODE 2 (FINIS
         SENTRIES
         EXECIO &RC PUNCH
         &GOTO -EXIT_OK
-WRITE
         EXECIO 1 PUNCH (STRING &RECORD_&DEPTH
-WRITE_RETURN
         &GOTO -&LABEL
-HELP_INC
&TYPE INVALID STATEMENT : &CH01_08 & CH10_30
&TYPE FORMAT SHOULD BE  : /INCLUDE FILENAME FILETYPE FILEMODE
&TYPE ***** SUBMIT OF &FN_&DEPTH TO *VSE id* HAS BEEN TERMINATED*****
 &TYPE *****            CORRECT AND RESUBMIT                     *****
         &GOTO -CLOSE_PUN_AND_PURGE
-NOTFOUND
         &TYPE &1 &2 &3 NOT FOUND
         &GOTO -INV1
-INV_LRECL
         &TYPE RECORD LENGTH &LRECL INVALID FOR &FNAME &FTYPE &FMODE
         &TYPE MUST BE 80 OR LESS FOR SUBMIT TO DOSVSE
-INV1
         DROPBUF 0
         CP CLOSE PUN PURGE
         &IF &ONE = 1 &EXIT
         RELEASE &DISK
         CP DET &DISK
         CP SET IMSG ON
         &EXIT
-NEST_ERROR
&TYPE YOU HAVE EXCEEDED NESTING LIMIT OF FIFTY
&TYPE ASK TECHNICAL SUPPORT TO ALLOW A HIGHER LIMIT IF NEEDED OR
&TYPE POSSIBLE LOOP IN YOUR INCLUDED FILES
         &GOTO -CLOSE_PUN_AND_PURGE
-ERR_EXECIO
&TYPE FILE ACCESS ERROR : RC = &RC
-CLOSE_PUN_AND_PURGE
         DROPBUF 0
         CP CLOSE PUN PURGE
         &IF &ONE = 1 &EXI
         RELEASE &DISK
         CP DET &DISK
         CP SET IMSG ON
         &EXIT
-EXIT_OK
         DROPBUF 0
         &IF &ONE = 1 &GOTO -EXIT
         RELEASE &DISK
         CP DET &DISK
         CP SET IMSG ON
-EXIT
         CP CLOSE PUN
         &TYPE &F_&DEPTH SUBMITTED TO *VSE id*
         &EXIT &RC
G A Surin
Senior Systems Programmer
First National Securities Ltd (UK) ) First National Securities Ltd 1988






















