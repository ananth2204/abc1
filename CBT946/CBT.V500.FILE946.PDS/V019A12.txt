ÝEditor's note: this is another approach to Mr Singleton's problem.¨ In response
to Mr Singleton's query in the December 1987 issue, perhaps the attached
Assembler routine would make more sense than a SLEEP command.  It can be called
from another program, or implemented as a command using the GENMOD facility.
When invoked, the routine will issue an enabled wait state PSW.  Any I/O
interrupts (including attentions) will cause the user's registers to be
restored, low storage to be cleaned up, and the interrupt passed to CMS for
processing.  When CMS has completed its processing, the I/O old PSW will return
control to the user.
WAIT4IO  B     72(15)                   Branch over save area
         DC    17F'0'                   Save area
         STM   14,12,12(13)             Save callers registers
         ST    13,4(15)                 Backward chain save areas
         ST    15,8(13)                 Forward chain save areas
         LR    13,15                    Point to my save area
         USING WAIT4IO,13               Establish base
         USING NUCON,0                  Establish low core base.
*
         ST    14,RETURN                Store return address
*
         SPKA  0                        Get into key zero.
         MVC   OLDIONEW, IONPSW         Save CMS's I/O new PSW.
         MVC   IONPSW+4(4),=A(INTERUPT) Steal I/O interrupts.
*
JUSTWAIT LPSW  WAITPSW                  Wait here!
INTERUPT MVC   IONPSW(8), OLDIONEW      Give back PSW.
         L     13,4(13)                 Go back with clear conscience.
         LM    14,12,12(13)             Restore callers registers
         XR    15,15                    Clear out return register
         LPSW  IONPSW                   Pass interrupt on to CMS.
*
         CNOP  0,8
WAITPSW  DC    X'FF060000'
RETURN   DC    A(0)                     Replaced with return address.
OLDIONEW DC    D'0'
         LTORG
*
         NUCON
         END
E H Pedersen
Vice President
Advanced Concepts
Blueline Software Inc (USA)























