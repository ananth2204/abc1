Directory sort

In the CP System Logic Guide, the paragraph Directory
Considerations states: "... you should alphabetically sort the
directory according to the user-id field in the USER control
statements", and "Routines that search the directory list
(logging on/spooling) will do so more efficiently and therefore
greatly reduce the search time".

I didn't understand why it would help to sort the directory,
because I couldn't find any field indicating whether the
directory was sorted or not.  I found out that when the directory
is updated, a list of directory pages (DPLIST) is built.  The
DPLIST also contains two user-fields which are compared with
the user-id.  These user-fields are:

o      DPLLOW     Low user-id in this virtual page

o      DPLHIGH    High user-id in this virtual page.

If the user-id is inside the range of user-ids in a page, all the
user-ids in that page are scanned.

For example, if the directory is on two pages and unsorted it
might look like:

      Page1: DPLLOW=BOB     DPLHIGH=WALTER
      Page2: DPLLOW=DAN     DPLHIGH=MICKEY

User JOHN now logs on.  Because the directory is not sorted,
both page1 and page2 will be scanned to find JOHN.

If the directory is sorted, the example below could exist:

      Page1: DPLLOW=BOB     DPLHIGH=DAN
      Page2: DPLLOW=DONALD  DPLHIGH=WALTER

Only page2 will be scanned to find JOHN.

We have our directory sorted in department order and would
like to keep it like this; therefore I wrote an EXEC that sorts
the directory according to the user-id.  We then DIRECT the
output file from this EXEC.

The size of directory pages on a 3380 is 4K.  Each entry
(UDIRBLOK) has a length of 24 bytes.  This means that each
page can contain 169 PROFILE/USER entries.  (One is used to
point to next UDIRBLOK.)

So if you have fewer than 169 PROFILE and USER statements
in your directory and the directory is on a 3380, don't bother to
sort it!

Our VM/SP HPO Release is 5.0.


DIRSORT EXEC

/**********************************************************************
 ** Sort the DIRECTORY according to the user-id field in the USER    **
 ** control statement.                                               **
 ** ---------------------------------------------------------------- **
 ** INPUT : fn ft fm       file-id of the file containing control    **
 **                        statements for the directory program.     **
 **                        Must be on a R/W disk.                    **
 ** OUTPUT: fn SORTED fm   same fn and fm as the input file.         **
 **                        All comment lines (*..) are removed and a **
 **                        * is inserted before every USER/PROFILE   **
 **                        statement. The file can be DIRECTed.      **
 *********************************************************************/
 Address COMMAND
 Arg In_File
 Mode      =  Word(In_File,3)
 VM_Sorted =  Word(In_File,1) 'SORTED' Mode
 Workfile  = 'SORT WORKFILE' Mode
 If In_File=' ' | In_File=VM_Sorted Then Do
    Say 'Invalid or missing input file-id'
    Exit
    End
'ERASE' Workfile
'ERASE' Vm_Sorted
 Nr = 0
/**********************************************************************
 ** Examine the DIRECTORY                                            **
 **********************************************************************/
'EXECIO * DISKR' In_File '1 (FINIS MARGINS 1 72 STRIP STEM VMUSERS.'
 If Rc <> 0 Then Exit Rc
 Do A=1 by 1 Until Statement = 'DIRECTORY'
    Statement = Word(Vmusers.A,1)
    End
 Info = '1 DIRECTORY' A
 User = 0
 Do A=A+1 To Vmusers.0 By 1
    Parse Value Vmusers.A With Statement Userid .
    Select
       When Statement = 'PROFILE'   Then Do
            User = User + 1
            Nr = Nr + 1
            Newline.Nr = Info (A-1)
            Info = '2' Left(Userid,8) A
            End
       When Statement = 'USER'      Then Do
            User = User + 1
            Nr = Nr + 1
            Newline.Nr = Info (A-1)
            Info = '3' Left(Userid,8) A
            End
       Otherwise Nop
       End
    End
 Say User 'PROFILE/USER statements in the directory.'
 Nr = Nr + 1
 Newline.Nr = Info (A-1)
/**********************************************************************
 ** Create and sort the workfile                                     **
 **********************************************************************/
'EXECIO' Nr 'DISKW' Workfile '(FINIS STEM NEWLINE.'
 If Rc <> 0 Then Exit Rc
 Drop Newline.
 Queue 'SORT * 1 1 3 10'
 Queue 'FILE'
'XEDIT' Workfile '(NOPROF NOMSG'
'EXECIO * DISKR' Workfile '1 (FINIS STEM SORT.'
 If Rc <> 0 Then Exit Rc
'ERASE' Workfile
 Sorted. = '*'
 Nr = 0
/**********************************************************************
 ** Create the sorted DIRECTORY                                      **
 **********************************************************************/
 Do A=1 To Sort.0 By 1
    Parse Value Sort.A With . . Start End .
    Recs = (End - Start) + 1
    Do Recs
       If Left(Strip(Vmusers.Start,'L'),1) <> '*' Then Do
          Nr = Nr + 1
          Sorted.Nr = Vmusers.Start
          End
       Start = Start + 1
       End
    Nr = Nr + 1
    End
'EXECIO' Nr-1 'DISKW' Vm_Sorted '0 F 80 (FINIS STEM SORTED.'
 Exit Rc

Michael Plannthin (Denmark)

