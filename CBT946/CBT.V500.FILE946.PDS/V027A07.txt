 Case control XEDIT macro
The purpose of the CASECNTL XEDIT macro is to allow a user to change the case of
an individual word or line within a CMS file.  By placing the cursor under the
word or line and pressing the required PF key the case is changed to that
defined by the PF key (see description of PF keys below).  The cursor then skips
to the next word on the line, or to the first word of the next line if the word
function is chosen.  If the line function is chosen the cursor moves to the next
line on the screen.
A word in this case can be defined as a group of characters defined in the
ALPHA_SET variable (usually upper and lower case letters).  If a word contains
characters not in this set it is treated as two words.  By adding your relevant
characters to this set you can determine how your words are processed, ie:
IN_STRING will be processed as two words 'IN' and 'STRING' if '_' is not in
alpha_set, or it will be processed as a single word 'IN_STRING' if it is.)
If the cursor is placed under a blank and a WORD function is chosen no
processing takes place and the cursor is moved to the next word ready for
processing.
PF KEY DESCRIPTION
PF03 Quit -    Exits CASECNTL macro and returns to XEDIT.
PF04 WORD -    Changes the selected word to UPPERCASE and skips to next word,
ie: word ---> WORD
PF05 Word -    Changes the selected word to MIXEDCASE and skips to next word,
ie: WORD ---> Word
PF06 word      -    Changes the selected word to LOWERCASE and skips to next
word, ie: WORD ---> word
PF07 BACK -    Pages BACKWARD one full screen.
PF08 FORW -    Pages FORWARD one full screen.
PF09 LINE      -    Changes the selected line to UPPERCASE and moves to next
line, ie: aaaa bbbb cccc ---> AAAA BBBB CCCC
PF10      Line      -    Changes the selected line to MIXEDCASE and moves to
next line, ie: aaaa bbbb cccc ---> Aaaa bbbb cccc
PF11 line -    Changes the selected line to LOWERCASE and moves to next line,
ie: Aaaa bbbb cccc --> aaaa bbbb cccc
CASECNTL XEDIT
TRACE o
ADDRESS xedit
  /* Save and set variables and constants.                       */
  'PRESERVE'
  'EXTRACT /msgline/case/size/'
  'EXTRACT /pfl/pf2/pf3/pf4/pf5/pf6/pf7/pf8/pf9/pf10/pf11/pf12/'
  'EXTRACT /pf13/pf14/pf15/pf16/pf17/pf18/pf19/pf20/pf21/',
             'pf22/pf23/pf24/'
   DO count = 1 BY 1 UNTIL count = 24
      'SET PF'count count
   END
  'SET SCALE ON 3'
  'SET TOFEOF ON'
  'SET CURLINE ON 4'
  'SET PREFIX OFF'
  'SET NUMBER OFF'
  'SET PF07 BEFORE BACKWARD'
  'SET PF19 BEFORE BACKWARD'
  'SET PF08 BEFORE FORWARD'
  'SET PF20 BEFORE FORWARD'
   alpha_set = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'
  'SET MSGLINE off'
  'SET CASE m i'
   l_count = 0
  'EXTRACT /screen/'
   scrn_lgth = subword(screen.1,2,1) - 2
 /* Set screen heading and display it.                             */
  headl = 'CASECNTL: PF03  PF04  PF05  PF06  PF07  PF08  PF09',
             '  PF10 PF11'
  HEAD2 ='           QUIT  WORD  Word  word  BACK  FORW  LINE',
             '  Line line'
  'SET RESERV 1 HI 'headl
   'SET RESERV 2 HI 'head2
 /* Main processing loop : loop around until pf03 is used to quit. */
   CALL top_page
   DO FOREVER
      READ ALL TAG
      PULL . pf_key .
      SELECT
         WHEN pf_key = '3'  THEN SIGNAL quit_casectl
         WHEN pf_key = '4'  THEN CALL   upper_word
         WHEN pf_key = '5'  THEN CALL   mixed_word
         WHEN pf_key = '6'  THEN CALL   lower_word
         WHEN pf_key = '7'  THEN CALL   page_backward
         WHEN pf_key = '8'  THEN CALL   page_forward
         WHEN pf_key = '9'  THEN CALL   upper_line
         WHEN pf_key = '10' THEN CALL   mixed_line
         WHEN pf_key = '11' THEN CALL   lower_line
         OTHERWISE NOP
      END
   END
/* Tidy_up: Tidy up and return all setting to their original values*/
tidy_up:
  'SET RESERV 1 off'
  'SET RESERV 2 off'
   IF msgline.1 = 'OFF' THEN msg = msgline.1
      ELSE msg = msgline.1 || ' ' || msgline.2
  'SET MSGLINE 'msg
  'SET CASE 'case.1 case.2
   DO count = 1 BY 1 UNTIL count = 24
      pf.count.1 = VALUE('PF'count'.1')
      pf.count.2 = VALUE('PF'count'.2')
      'SET PF'count  pf.count.1 pf.count.2
   END
  'RESTORE'
RETURN
  /* Quit_casectl: come here when user is finished.                */
quit_casectl:
   CALL tidy_up
   EXIT rc
/* Upper_word: come here when you want a word changed to uppercase.*/
/*        i.e  aaaa ---> AAAA                                      */
upper_word:
   CALL get_word
   IF ret = 'NOCHANGE' THEN DO
      ':'flscreen.1
      ret = 'CHANGE'
      RETURN
   END
  'SET ZONE 'start_col end_col
  'UPPERCAS'
  'SET ZONE 'zone.1 zone.2
   CALL next_word
  ':'flscreen.1
RETURN
/* Mixed_word: come here when you want a word changed to mixedcase.*/
/*        i.e  AAAA ---> Aaaa                                      */
mixed_word:
   CALL get_word
   IF ret = 'NOCHANGE' THEN DO
      ':'flscreen.1
      ret = 'CHANGE'
      RETURN
   END
   one_char = TRANSLATE(LEFT(new_string,l))
  'SET ZONE 'start_col end_col
  'LOWERCAS'
  'CFIRST'
   'COVERLAY 'one_char
  'SET ZONE 'zone.1 zone.2
   CALL next_word
  ':'flscreen.1
RETURN
/* Lower_word: Come here when you want a word changed to lowercase.*/
/*        i.e  AAAA ---> aaaa                                      */
lower_word:
   CALL get_word
   IF ret = 'NOCHANGE' THEN DO
      ':'flscreen.1
      ret = 'CHANGE'
      RETURN
   END
  'SET ZONE 'start_col end_col
  'LOWERCAS'
  'SET ZONE 'zone.1 zone.2
   CALL next_word
  ':'flscreen.1
RETURN
/* Page_backward: Move forward one screen.                        */
page_backward:
  'BACKWARD'
   CALL top_page
RETURN
/* Page_forward: Move forward one screen.                         */
page_forward:
  'FORWARD'
   CALL top_page
RETURN
/* Top_page: Position cursor under first word on page.            */
top_page:
   'EXTRACT /flscreen/size/'
   IF flscreen.1 = 0 THEN flscreen.1 = 1
   IF flscreen.1 > size.1 THEN flscreen.1 = size.1
   top_page = flscreen.1
   ':'flscreen.1
   'CURSOR SCREEN 4 1'
   start_col = 1
   end_col = 0
   'EXTRACT /cursor/'
   CALL next_word
   ':'top_page
RETURN
/* Upper_line: Come here when you want a line changed to uppercase.*/
/*        i.e  aaaa bbbb cccc ---> AAAA BBBB CCCC                  */
upper_line:
  'EXTRACT /cursor/flscreen/'
  ':'cursor.3
  'UPPERCAS'
  ':'flscreen.1
  CALL next_line
RETURN
/* Mixed_line: Come here when you want a line changed to mixedcase.*/
/*        i.e  AAAA BBBB CCCC ---> Aaaa bbbb cccc                  */
mixed_line:
  'EXTRACT /cursor/flscreen/zone/'
  ':'cursor.3
  'STACK'
   PULL in_string
   start_col = VERIFY(in_string,alpha_set,'MATCH')
   IF start_col ¬= 0 THEN DO
      one_char = TRANSLATE(SUBSTR(in_string,start_col,1))
      'SET ZONE 'start_col zone.2
      'LOWERCAS'
      'CFIRST'
       'COVERLAY 'one_char
      'SET ZONE 'zone.1 zone.2
   END
  ':'flscreen.1
  CALL next_line
RETURN
/* Lower_line: Come here when you want a line changed to lowercase.*/
/*        i.e  AAAA BBBB CCCC ---> aaaa bbbb cccc                  */
lower_line:
  'EXTRACT /cursor/flscreen/'
  ':'cursor.3
  'LOWERCAS'
  ':'flscreen.1
  CALL next_line
RETURN
/* Next_line: Page down to next line on file.                     */
next_line:
  cursor.1 = cursor.1 +1
  'CURSOR SCREEN 'cursor.1
  IF cursor.1 = scrn_lgth+1 THEN DO
     CALL page_forward
     'DOWN 1'
  END
RETURN
/* Get_word: Extract word to be changed according to cursor */
/*       position.*/
get_word:
  'EXTRACT /cursor/flscreen/zone/'
  ':'cursor.3
  'STACK'
   PULL in_string
   start_col = cursor.2
   new_string = SUBSTR(in_string,start_col)
   IF VERIFY(LEFT(new_string,1),alpha_set,'MATCH') = 0 THEN DO
      end_col = 0
      CALL next_word
      ret = 'NOCHANGE'
      RETURN
   END
   start_word = VERIFY(new_string,alpha_set,'MATCH')
   new_string = SUBSTR(new_string,start_word)
   end_word = VERIFY(new_string,alpha_set)
   start_word = start_word -1
   end_word = end_word -2
   start_col = start_col + start_word
   end_col = start_col + end_word
RETURN
/* Next_word: Place cursor under the next word on line or under    */
/*           1st word of next line.                                */
next_word:
  'STACK'
   PULL in_string
   IF end_col ¬=0 THEN start_col = cursor.2 + (end_col - cursor.2) +1
   new_string = SUBSTR(in_string,start_col)
   start_word = VERIFY(new_string,alpha_set,'MATCH')
   IF new_string = ' ' | start_word = 0 THEN DO
      DO l_count = l_count +1
         'DOWN 1'
         'EXTRACT /cursor/'
          IF cursor.1 = scrn_lgth THEN DO
             CALL page_forward
             CALL page_backward
             LEAVE
          END
         'STACK'
         PULL in_string
          IF VERIFY(in_string,alpha_set,'MATCH') ¬= 0 THEN LEAVE
      END
      new_string = in_string
      start_col = 1
   END
   start_word = VERIFY(new_string,alpha_set,'MATCH')
   start_word = start_word -1
   start_col = start_col + start_word
  'CURSOR SCREEN 'cursor.1+l_count  start_col
   l_count = 0
RETURN
Martin Warnes
Systems Programmer
Freemans (UK)       ) M Warnes 1988




















































