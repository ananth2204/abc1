Creating temporary disks

I read the article in issue 40 (EXEC to access T-disk) with
great interest and found it to be a nice, user-friendly way of
producing temporary disks.  There was, however, one problem
in that the panels utilized DMS/CMS.  Since we do not have
this product in our shop I decided to write an alternative using
REXX/XEDIT to produce the same result.  The following is
my solution and consists of:

%      TD EXEC - Calls TDISK profile.

%      TDISK XEDIT - Creates the formatted screen shown in
      Figure 1.

%      TDISK EXEC - Defines and formats the temporary disk.

%      TD HELP - Simple explanation screen, shown in Figure 2.
      (An entry will have to be made in your site help profile for
      TD.)

Full colour is incorporated for those lucky enough to have a
colour screen.  I have restricted the virtual address to 59E to
standardize, but this could be set to anything you wish.

TDISK EXEC

/*  Purpose: Create temporary CMS work mini-disk      */
/*           This exec can be used stand-alone if     */
/*           parameters are part of the command.      */
arg addr mode cyls blks .
clrscrn
say 'Creating temporary disk. Please wait....'
'SET CMSTYPE HT'
'SET IMSG OFF'
'REL' addr '(DET'
'CP DEF T3380' addr cyls
if rc ¬= 0 then call err01
'MAKEBUF'
push
push work
push yes
'FORMAT' addr mode '( blksize' blks'K'
if rc ¬= 0 then call err02
'ACCESS' addr mode
'SET CMSTYPE RT'
say 'Temporary disk' addr 'created with filemode' mode'.'
'Q DISK'
exit:
'SET CMSTYPE RT'
exit
err01:
say 'Unable to define temporary disk' addr mode '.'
call exit
err02:
say 'Unable to format temporary disk' addr mode '.'
call exit

TD EXEC

/*  EXEC   : TD                                      */
/*  Purpose: Create temporary CMS work mini-disk     */
/*           calls TDISK XEDIT profile               */
PANEL:
'CP SET EMSG OFF'
'XEDIT TD CMD (PROF TDISK'
'CP SET EMSG TEXT'
EXIT:
exit

TDISK XEDIT

/*  XEDIT  : TDISK                              */
/*  Purpose: create temporary cms work minidisk */
extract '/curline/lscreen'
command set ctlchar '%' escape
command set ctlchar '¬' protect red high
command set ctlchar '!' protect white high
command set ctlchar '-' protect yellow nohigh
command set ctlchar '\' protect green nohigh
command set ctlchar '}' protect yellow under
command set ctlchar '{' noprotect turq nohigh
command set ctlchar '|' noprotect pink nohigh
command set ctlchar '&' protect pink rev nohigh
command set ctlchar '$' noprotect pink rev nohigh
command 'SET PF04 signal ENDPROC'
command 'SET PF07 BACKWARD'
command 'SET PF08 FORWARD'
command 'SET PF09 TOP'
command 'SET PF10 BOTTOM'
command 'SET PREF OFF'
command 'SET TOFEOF OFF'
command 'SET CMDLINE OFF'
command 'SET COLOR FILE TURQ NONE'
command 'SET COLOR CURL TURQ NONE'
command 'SET SCREEN 1 H S 24 80'
command 'SET MSGLINE ON' lscreen.1-2 '2 OVERLAY'
do i=1 to 15
   s.i=' '
end i
/* Set defaults */
1.1='59E'     /* Virtual address */
1.2='T'       /* file mode       */
1.3='01'      /* no of cylinders */
1.4='4'       /* block size in K */
/* do display */
call DISPLAYSCREEN
do forever
   call DISPLAYSCREEN
   read nochange tag
   do queued()
      pull key line column string
      select
         when key='ETK' then nop
         when key='RES' then call PROCESS
         when key='PFK' then do
                             if line=1 then call HELP
                             if line=3 then signal EXIT
                             if line=4 then signal ENDPROC
                             end
      otherwise nop
      end
   end
end
DISPLAYSCREEN:
command 'CURSOR SCREEN 9 2'
command set screen 1 horizontal size 24 width 80
command set reserved 1 noh '%-'userid()'%¬  ***%&',
                       center(' Create Temporary Disk',35),
                       '%¬***       %-'time()
command set reserved 2 noh
command set reserved 3 noh
command set reserved 4 noh
command set reserved 5 noh '%!Sel    Description           Opt%\'
command set reserved 6 noh
command set reserved 7 noh '%|'s.1'%-    Virtual address
                                                 - %{'l,1'%\    (Fixed)'
command set reserved 8 noh
command set reserved 9 noh '%|'s.2'%-    Access mode
                                     - %{'l.2'%\      (Filemode to use)'
command set reserved 10 noh
command set reserved 11 noh '%|'s.3'%-    Number of cylinders
                                           - %{'l.3'%\    (Use default)'
command set reserved 12 noh
command set reserved 13 noh '%|'s.4'%-    Blksize in Kbytes
                                              - %{'l.4'%\K    (default)'
command set reserved 14 noh
command set reserved 15 noh
command set reserved 16 noh
command set reserved 17 noh '%¬        Type a non blank character in the
                                                       %!Sel%¬ field %\'
command set reserved 18 noh '%¬        next to the option you wish to
                                                change and tab across%\'
command set reserved 19 noh '%¬        to the option field. Overkey the
                                                   option with your%\  '
command set reserved 20 noh '%¬        choice and press enter to set
                                                 them.  When you are %\'
command set reserved 21 noh '%¬        happy with your selections,
                                                           press PF4.%\'
command set reserved 22 noh
command set reserved 23 noh '%-'copies('-',79)
command set reserved 24 noh '%-'center('PF1=Help          PF3=Quit',
         PF4=Continue',78 )
':1'
extract '/curline/lscreen'
parse var curline.3 vars
command 'SET MSGLINE ON' lscreen.1-2 '2 OVERLAY'
return
PROCESS:
select
/* remove following comments to allow input for virtual address */
/* when line=7 then do
                    if column=2 then s.1=left(string,1)
                    if column=31 then l.1=left(string,3)
                    end */
   when line=9  then do
                    if column=2 then s.2=left(string,1)
                     if column=31 then l.2=left(string,1)
                     end
   when line=11 then do
                    if column=2 then s.3=left(string,1)
                     if column=31 then l.3=left(string,2)
                     end
   when line=13 then do
                    if column=2 then s.4=left(string,1)
                     if column=31 then l.4=left(string,1)
                     end
   otherwise
      nop
   end
return
EXIT:
cms 'DESBUF'
command 'QUIT'
exit
ENDPROC:
do i=1 to 4
   l.i=translate(l.i,' ','_')
end i
     'EXEC TDISK' l.1 l.2 l.3 l.4
      signal exit
HELP:
'HELP SONY TD'
return

Dave Austin
Systems Programmer
Sony Ltd (UK)                               ) Xephon 1990



