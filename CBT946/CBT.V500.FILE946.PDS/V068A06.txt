A small on-line monitor


GENERAL INFORMATION

The GRAFIND program was designed to give a quick view of
the system, and contain just enough data to show what's going
on. It was built on a VM/SP Release 5 system, but it should be
able to run on Releases 4 and 6 without problems. Just check
the names in your CPNUC MAP against those in the file
GENGRIND XEDIT.

The program displays its information on a 3179G graphic
terminal, but any model G display should do.

Running at our site (on a 4381 Model 13 CPU), the GRAFIND
user consumes 28KB of core storage, 1 SIO and 0.01 second
CPU-time per update interval of 10 seconds.


INSTALLATION:

1      Generate the GRAFIND MODULE

      DEF STOR 3M
      LINK MAINT 194 194 RR
      ACCESS 194 F

      GENGRIND

2      Attach a G display

      ATTACH cuu * 400

3      Execute the program; this requires option ECMODE and
      CP command classes E and G.

      GRAFIND Ýnn SEC|MIN¨

where nn must be a two digit number; nn SEC or nn MIN is the
update interval for the screen (using CP SLEEP command).
The default is 01 minutes.

Note: as an alternative to steps 2 and 3, you can add a user-id
GRAFIND to your system:

USER GRAFIND xxxxxxxx 512K 512K EG 1
OPTION ECMODE
IPL CMS PARM AUTOCR
CONSOLE 009 3215 T OPERATOR
DEDICATE 400 cuu                 <== fill in the cuu of your
LINK MAINT 190 190 RR                G-type display
LINK MAINT 191 191 RR

Rename the PROFILE EXEC of user-id MAINT to MAINT
EXEC, and put the following PROFILE EXEC onto the 191
disk of MAINT.

/* PROFILE EXEC */
address command 'EXEC' userid()
exit rc

And finally AUTOLOG GRAFIND.


GENGRIND EXEC

/*
    This EXEC generates the GRAFIND MODULE
*/
arg parameters
if parameters ¬= '' then signal help_info
address command
'STATE GRAFIND MACLIB'
if rc ¬= 0 then do
  'MACLIB GEN GRAFIND AEND ASTART BOX COMPUTE CPCOM FILL GCOL LINE'
  if rc ¬= 0 then signal help_info
  'MACLIB ADD GRAFIND NAME RETURN SCALE TEKST'
  if rc ¬= 0 then signal help_info
  'MACLIB ADD GRAFIND CPSYS1 CPSYS2 T32701'
  if rc ¬= 0 then signal help_info
end
'STATE CPNUC MAP *'
if rc ¬= 0 then signal help_info
'XEDIT CPNUC MAP (PROFILE GENGRIND'
if rc ¬= 0 then signal help_info
'GLOBAL MACLIB GRAFIND CMSLIB DMSSP'
if rc ¬= 0 then signal help_info
'ASSEMBLE GRAFIND (NOLIST'
if rc ¬= 0 then signal help_info
'LOAD GRAFIND (CLEAR RESET GRAFIND1 ORIGIN 30000 RLDSAVE'
if rc ¬= 0 then signal help_info
'GENMOD GRAFIND (SYSTEM'
if rc ¬= 0 then signal help_info
exit
help_info:
say
say 'GENGRIND EXEC: Generate the GRAFIND MODULE'
say
say 'Requirements:'
say
say '   - Link to disk containing the source'
say '       files with filetype MACRO, COPY or ASSEMBLE must be in Fixed'
say '       record format, with recordlength 80'
say '   - Link to disk containing CPNUC MAP (MAINT 194)'
say '   - Link to disk containing DMSSP MACLIB and CMSLIB MACLIB (MAINT 190)'
say '   - Large enough storage to XEDIT CPNUC MAP (+/- 3M)'
say
say
exit


GRAFIND EXEC

/* PROFILE EXEC for user-id GRAFIND */
address command
'CP SET RUN ON'
'GRAFIND 10 SEC'


GENGRIND XEDIT

/**/
'SET VARBLANK ON'
call regel 'DMKDSPNP'
call regel 'DMKPGTTU'
call regel 'DMKPGTTM'
call regel 'DMKPGTDK'
call regel 'DMKPGTPC'
call regel 'DMKPTRSS'
call regel 'DMKPTRCS'
call regel 'DMKSCHN1'
call regel 'DMKSCHN2'
call regel 'DMKSYSNM'
call regel 'DMKSYSND'
address command 'ERASE GCPNUC COPY A'
address command 'EXECIO' queued() 'DISKW GCPNUC COPY A (FINIS'
'XEDIT GRAFIND MACLIB (MEMBER GCPNUC'
'TOP'
'DELETE *'
'SET RECF F'
'SET LRECL 80'
'GET GCPNUC COPY A'
'FILE'
'XEDIT GRAFIND MACLIB (MEMBER GCPLEVEL'
'TOP'
'DELETE *'
'SET RECF F'
'SET LRECL 80'
parse value diag(8,'Q CPLEVEL') with . 'GENERATED AT' date time .
"I CURRNTVM DC   C'"strip(date) strip(time)"'"
'FILE'
address command 'ERASE GCPNUC COPY A'
'QQUIT'
exit
regel:
arg entry
'TOP'
'/'entry 'AT'
'EXTRACT /CURLINE'
parse var curline.3 . 'AT' at
queue "         DC   X'"||right(strip(at),8,'0')"'               " entry
return


GRAFIND ASSEMBLE

GRAFIND  CSECT
SEGSYSTX EQU   -360                    *
SEGSYSTY EQU   174                     *
SEGUSERX EQU   -36                     *
SEGUSERY EQU   -70                     *
SEGDISKX EQU   90                      *
SEGDISKY EQU   -70                     *
SEGTIMEX EQU   -360                    *
SEGTIMEY EQU   72                      *
SEGSYSUX EQU   -360                    *
SEGSYSUY EQU   33                      *
SEGSYSUB EQU   SEGSYSUY-213            *
SEGINDCX EQU   -360                    *
SEGINDCY EQU   -70                     *
SEGPAGEX EQU   225                     *
SEGPAGEY EQU   -70                     *
SEGTOPUX EQU   -36                     *
SEGTOPUY EQU   174                     *
CONSOLE  EQU   X'400'                  *
GRAFIND1 NAME  'DISPLAY SYSTEM USAGE GRAPHICAL ON CUU 400','R.T.H.'
         CLI   8(R1),X'FF'             *
         BE    START                   *
         MVC   SLPTIME(2),8(R1)        *
         MVC   SLPTIME+3(3),16(R1)     *
START    L     R10,=A(SEG1)            *
         USING SEG1,R10                *
         MVC   PUPDINTV(6),SLPTIME     *
         CLI   FIRSTIME,1              *
         BE    STCLOCK                 *
START0   EQU   *                       *
         STCK  NEWCLOCK                *
         LA    R2,WORK                 *
         LA    R3,24                   *
         DIAG  R2,R3,X'000C'           *
         LM    R2,R5,CPINDIC           *
         DIAG  R2,R4,X'0008'           *
         LA    R2,ADDRLIST             *
         LA    R4,NUMLIST              *
         LA    R5,BUF2                 *
         DIAG  R2,R4,X'0004'           *
         SR    R6,R6                   *
         NC    WORK+8(8),=8X'0F'       *
         LA    R3,3                    *
         LA    R4,0                    *
         LA    R5,0                    *
TIMEPART LA    R2,2                    *
TIMELOOP IC    R6,WORK+8(R5)           *
         SLL   R6,2                    *
         LA    R6,X'D0'(R6)            *
         STC   R6,THETIME1(R4)         *
         LA    R6,1(R6)                *
         STC   R6,THETIME1+1(R4)       *
         LA    R6,1(R6)                *
         STC   R6,THETIME2(R4)         *
         LA    R6,1(R6)                *
         STC   R6,THETIME2+1(R4)       *
         LA    R4,2(R4)                *
         LA    R5,1(R5)                *
         BCT   R2,TIMELOOP             *
         LA    R5,1(R5)                *
         LA    R4,1(R4)                *
         BCT   R3,TIMEPART             *
         BAL   R11,NEWUSER             *
         BAL   R11,DSPUSER             *
         MVC   PICPU(3),CPLEVBUF+8     *
         MVC   PISTOR(3),CPLEVBUF+50
         MVC   PISTEAL(3),CPLEVBUF+89
         MVC   PIEXPAN(3),CPLEVBUF+62  *
         MVC   PILOAD(3),CPLEVBUF+100  *
         MVC   PIPAGING(3),CPLEVBUF+74
         LH    R3,BUF2+BPGRATE         *
         CVD   R3,WORK                 *
         MVC   PPGRATE(6),=X'402020202120'
         ED    PPGRATE(6),WORK+5      *
         L     R3,BUF2+BPGREAD         *
         S     R3,BUF1+BPGREAD         *
         CVD   R3,WORK                 *
         MVC   PPGREAD(6),=X'402020202120'
         ED    PPGREAD(6),WORK+5       *
         L     R3,BUF2+BPGWRITE        *
         S     R3,BUF1+BPGWRITE        *
         CVD   R3,WORK                 *
         MVC   PPGWRITE(6),=X'402020202120'
         ED    PPGWRITE(6),WORK+5      *
         L     R3,BUF2+BPSTEAL         *
         S     R3,BUF1+BPSTEAL         *
         CVD   R3,WORK                 *
         MVC   PPGSTEAL(6),=X'402020202120'
         ED    PPGSTEAL(6),WORK+5      *
         L     R3,BUF2+BPAGEBLE        *
         CVD   R3,WORK                 *
         MVC   PPAGEBLE(6),=X'402020202120'
         ED    PPAGEBLE(6),WORK+5      *
         L     R3,BUF2+BTEMPUSD        *
         MH    R3,=H'200'              *
         L     R13,BUF2+BTEMPMAX       *
         AR    R3,R13                  *
         SLL   R13,1                   *
         SR    R2,R2                   *
         DR    R2,R13                  *
         CVD   R3,WORK                 *
         MVC   PTEMPUSD(4),=X'40202120'
         ED    PTEMPUSD(4),WORK+6
         L     R2,BUF2+BTEMPMAX        *
         CVD   R2,WORK                 *
         MVC   PTEMPMAX(6),=X'402020202120'
         ED    PTEMPMAX(6),WORK+5
         L     R3,BUF2+BPAGEUSD        *
         MH    R3,=H'200'              *
         L     R13,BUF2+BPAGEMAX       *
         AR    R3,R13                  *
         SLL   R13,1                   *
         SR    R2,R2                   *
         DR    R2,R13                  *
         CVD   R3,WORK                 *
         MVC   PPAGEUSD(4),=X'40202120'
         ED    PPAGEUSD(4),WORK+6
         L     R2,BUF2+BPAGEMAX        *
         CVD   R2,WORK                 *
         MVC   PPAGEMAX(6),=X'402020202120'
         ED    PPAGEMAX(6),WORK+5
         L     R2,BUF2+BFSCANS         *
         S     R2,BUF1+BFSCANS         *
         CVD   R2,WORK                 *
         MVC   PFSCANS(4),=X'40202120'
         ED    PFSCANS(4),WORK+6       *
         L     R2,BUF2+BLOGGED         *
         CVD   R2,WORK                 *
         MVC   PLOGGED(4),=X'40202120' *
         ED    PLOGGED(4),WORK+6       *
         MVC   PACTIVE(4),=X'40202120' *
         ED    PACTIVE(4),ACTUSERS     *
         L     R2,BUF2+BDIALED         *
         CVD   R2,WORK                 *
         MVC   PDIALED(4),=X'40202120' *
         ED    PDIALED(4),WORK+6       *
         L     R2,BUF2+BINQ1           *
         CVD   R2,WORK                 *
         MVC   PINQ1(4),=X'40202120' *
         ED    PINQ1(4),WORK+6       *
         L     R2,BUF2+BINQ2           *
         CVD   R2,WORK                 *
         MVC   PINQ2(4),=X'40202120' *
         ED    PINQ2(4),WORK+6       *
         MVC   SUB1,NEWCLOCK           *
         MVC   SUB2,OLDCLOCK           *
         BAL   R14,SUB                 *
         LM    R2,R3,SUB1              *
         LR    R13,R3                  *
         MVC   OLDCLOCK,NEWCLOCK       *
         SR    R9,R9                   *
         COMPUTE IDLE                  *
         COMPUTE PAGE                  *
         COMPUTE IO                    *
         COMPUTE PROB                  *
         LR    R3,R13                  *
         SLR   R3,R9                   *
         COMPUTE SYSTEM                *
         MVC   BUF1,BUF2               *
         BAL   R14,WRITE               *
SLEEP    LA    R2,SLPCMD               *
         LA    R3,14                   *
         DIAG  R2,R3,X'0008'           *
         B     START0                  *
STCLOCK  MVI   FIRSTIME,0              *
         STCK  OLDCLOCK                *
         LA    R2,=X'000003080000030C' * SYSTEM CPUID ADDRESSES IN PSA
         LA    R4,2                    *
         LA    R5,BUF1                 *
         DIAG  R2,R4,X'0004'           *
         MVC   PCPUID(12),=X'402120202020206020202020'
         ED    PCPUID(12),BUF1+1       *
         LA    R2,ADDRLIST             *
         LA    R4,NUMLIST              *
         LA    R5,BUF1                 *
         DIAG  R2,R4,X'0004'           *
         LM    R2,R5,CPLEVEL           *
         DIAG  R2,R4,X'0008'           *
         LA    R2,WORK                 *
         LA    R3,40                   *
         DIAG  R2,R3,X'0000'           *
         CLC   CPVMGEN(17),CURRNTVM
         BE    MOVEVMGN                *
         WRTERM 'CP NUCLEUS HAS BEEN REGENERATED, PLEASE COMPARE THE'
         WRTERM 'CONTENTS OF THE CPNUC MAP TO THE INFORMATION IN THE'
         WRTERM 'FILE GRAFIND ASSEMBLE.'
MOVEVMGN MVC   PVMGEN(17),CPVMGEN      *
         MVC   PVMGEN(2),CPVMGEND      *
         MVC   PVMGEN+3(2),CPVMGENM    *
         MVC   PIPLDATE(17),CPIPLDA
         MVC   PIPLDATE(2),CPIPLDAM
         MVC   PIPLDATE+3(2),CPIPLDAD
         MVC   PVMSYS(6),WORK          *
         SR    R2,R2                   *
         IC    R2,WORK+36              *
         MH    R2,=H'100'              *
         SR    R3,R3                   *
         IC    R3,WORK+37              *
         AR    R2,R3                   *
         MH    R2,=H'1000'             *
         AH    R2,WORK+38              *
         CVD   R2,WORK                 *
         LM    R2,R3,WORK              *
         MVC   PVMLEVEL(10),=X'4021204B202061202020'
         ED    PVMLEVEL(10),WORK+4     *
         BAL   R14,WRITE               *
         MVC   CCW+1(3),=AL3(WRBUF2)   *
         MVC   CCW+6(2),=AL2(WRLEN2)   *
         BAL   R11,NEWUSER             *
         B     SLEEP                   *
DSPUSER  ZAP   ACTUSERS,=P'0'          *
         L     R2,CURRENTU             *
         L     R3,0(R2)                *
         LA    R4,4(R2)                *
         USING USOLSECT,R4             *
         LA    R9,12                   * MAXIMUM NUMBER OF USERS
         LA    R8,PTOPUSER             *
         USING USDPSECT,R8             *
         LA    R3,4(R3)                *
         USING USNWSECT,R3             *
DSPUSRLP CLC   USNWSNXT,=F'0'          *
         BE    DSPUDONE                *
         CLC   USNWSUID,USOLSUID       *
         BNE   DSPLOCAT                *
DSPUSFND EQU   *                       *
         CLC   USNWSSIO,USOLSSIO       *
         BL    DSPUSERN                *
         BNE   DSPUSRDO                *
         CLC   USNWSVTM(5),USOLSVTM       *
         BL    DSPUSERN                *
         BNE   DSPUSRDO                *
         CLC   USNWSTTM(5),USOLSTTM       *
         BH    DSPUSERN                *
         BE    DSPUSERN                *
DSPUSRDO MVC   USDPSUID,USNWSUID       *
         AP    ACTUSERS,=P'1'          *
         L     R5,USNWSSIO             *
         S     R5,USOLSSIO             *
         CVD   R5,WORK                 *
         MVC   USDPSSIO,=X'402020202120'
         ED    USDPSSIO,WORK+5         *
         L     R5,USNWSPRD             *
         A     R5,USNWSPWR             *
         S     R5,USOLSPRD             *
         S     R5,USOLSPWR             *
         CVD   R5,WORK                 *
         MVC   USDPSPGR,=X'402020202120'
         ED    USDPSPGR,WORK+5         *
         LH    R5,USNWSRPG             *
         SLL   R5,2                    *
         CVD   R5,WORK                 *
         CL    R5,=F'1000'             *
         BL    DSPSMALL                *
         MVC   USDPSSTR,=X'4021204B20202040D2'
         ED    USDPSSTR(7),WORK+5      *
         B     DSPVTM                  *
DSPSMALL MVC   USDPSSTR,=X'4020204020212040D2'
         ED    USDPSSTR(7),WORK+5      *
DSPVTM   MVC   SUB1,USNWSVTM           *
         MVC   SUB2,USOLSVTM           *
         BAL   R14,SUB                 *
         LM    R6,R7,SUB1              *
         AL    R7,=F'5000'             *
         D     R6,=F'10000'            *
         CVD   R7,WORK                 *
         MVC   USDPSCPV,=X'402021204B2020' *
         ED    USDPSCPV,WORK+5         *
         MVC   SUB1,USOLSTTM           *
         MVC   SUB2,USNWSTTM           *
         BAL   R14,SUB                 *
         LM    R6,R7,SUB1              *
         AL    R7,=F'5000'             *
         D     R6,=F'10000'            *
         CVD   R7,WORK                 *
         MVC   USDPSCPT,=X'402021204B2020' *
         ED    USDPSCPT,WORK+5         *
         LA    R8,TOPUSLN(R8)          *
         BCT   R9,DSPUSERN             *
         BR    R11                     *
DSPUDONE MVC   0(43,R8),=CL43' '       *
         LA    R8,TOPUSLN(R8)          *
         BCT   R9,DSPUDONE             *
         BR    R11                     *
DSPUSERN LA    R3,USERLENG(R3)         *
         LA    R4,USERLENG(R4)         *
         B     DSPUSRLP                *
DSPLOCAT LA    R4,4(R2)                *
DSPLOCLP CLC   USNWSUID,USOLSUID       *
         BE    DSPUSFND                *
         LA    R4,USERLENG(R4)         *
         CLC   USOLSNXT,=F'0'          *
         BNE   DSPLOCLP                *
         LA    R4,4(R2)                *
         B     DSPUSERN                *
NEWUSER  L     R3,CURRENTU             *
         L     R2,0(R3)                *
         ST    R2,CURRENTU             *
         LA    R5,4(R3)                *
         L     R4,BUF1+BOPERATR        *
         SR    R7,R7                   *
USERLP1  BAL   R14,GETUSER             *
         CLC   0(4,R5),BUF1+BOPERATR   *
         BE    ENDUSER1                *
         LA    R7,1(R7)                *
         CH    R7,=H'50'               *
         BH    ENDUSER1                *
         L     R4,0(R5)                *
         LA    R5,USERLENG(R5)         *
         B     USERLP1                 *
ENDUSER1 MVC   USERLENG(4,R5),=F'0'    *
         BR    R11                     *
GETUSER  LA    R6,USERNUM              *
         SR    R9,R9                   *
FILLLIST LR    R8,R4                   *
         A     R8,USERTABL(R9)         *
         ST    R8,0(R5,R9)             *
         LA    R9,4(R9)                *
         BCT   R6,FILLLIST             *
         LR    R2,R5                   *
         LA    R4,USERNUM              *
         DIAG  R2,R4,X'0004'           *
         BR    R14                     *
WRITE    LM    R6,R9,BEFORE            *
GOTIO1   TIO   CONSOLE                 * TEST CONSOLE
         BC    2,*-4                   * UNTIL FREE TO WRITE
         BNZ   ERROR                   * IF ERROR JUST QUIT
         LM    R6,R9,DURING            *
GOSIO    LA    R5,CCW                  * GET ADDRESS OF CCW
         ST    R5,X'48'                * PUT IT INTO LOW PAGE
         SIO   CONSOLE                 * WRITE CONSOLE
         BC    2,*-4                   * UNTIL ACCEPTED OR ERROR
         BZ    DONE                    *
ERROR    BC    3,ERR2
         CLI   68,X'04'
         BER   R6                      *
         CLI   68,X'08'
         BER   R6                      *
         CLI   68,X'10'
         BER   R7                      *
         CPCOM R2,R3,'D 40-47',7       *
ERR2     WRTERM (R8),(R9)              *
         RETURN                        *
DONE     BR    R14                     *
SLPCMD   DC    CL14'SLEEP 01 MIN'      *
SLPTIME  EQU   SLPCMD+6                *
CPINDIC  DC    A(CPINDQ),A(CPLEVBUF),X'40',AL3(3),A(200)
CPLEVEL  DC    A(CPLEVQ),A(CPLEVBUF),X'40',AL3(9),A(100)
CPLEVBUF DC    200C' '                 *
CPVMGEN  EQU   CPLEVBUF+48
CPVMGEND EQU   CPLEVBUF+51
CPVMGENM EQU   CPLEVBUF+48
CPIPLDA  EQU   CPLEVBUF+77
CPIPLDAM EQU   CPLEVBUF+80
CPIPLDAD EQU   CPLEVBUF+77
CPLEVQ   DC    C'Q CPLEVEL'            *
CPINDQ   DC    C'IND'                  *
SUB      STM   R2,R5,SUBREG            *
         CLC   SUB1,SUB2               *
         BNE   SUBCONT                 *
         XC    SUB1,SUB1               *
         BR    R14                     *
SUBCONT  LM    R2,R5,SUB1              *
         SLR   R2,R4                   *
         SRDL  R2,12                   *
         SRL   R5,12                   *
         MVI   SUBGLND,0               *
         CLR   R5,R3                   *
         BNH   SUBTR                   *
         MVI   SUBGLND,1               *
         AL    R3,=X'80000000'         *
         BCTR  R2,0                    *
SUBTR    SLR   R3,R5                   *
         CLI   SUBGLND,1               *
         BNE   SUBMAKE                 *
         AL    R3,=X'80000000'         *
SUBMAKE  STM   R2,R3,SUB1              *
         LM    R2,R5,SUBREG            *
         BR    R14                     *
SUBREG   DS    4F                      *
         DS    0D                      *
USERTABL DC    X'00000008'             * NEXT VMBLOK
         DC    X'00000058'             * STATUS
         DC    X'00000070'             * VIRTUAL TIME
         DC    X'00000074'             *   =
         DC    X'00000080'             * SYSTEM TIME
         DC    X'00000084'             *   =
         DC    X'00000110'             * USER-ID
         DC    X'00000114'             *   =
         DC    X'00000128'             * PAGE READ
         DC    X'0000012C'             * PAGE WRITE
         DC    X'00000138'             * SIO
         DC    X'00000154'             * PAGES IN CORE
         DC    X'0000015C'             * WORKING STORAGE SET
USERLENG EQU   *-USERTABL              *
USERNUM  EQU   USERLENG/4              *
         DS    0D                      *
ADDRLIST DC    X'00000310'             * IDLE WAIT
         DC    X'00000314'             *   =
         DC    X'00000318'             * PAGEWAIT
         DC    X'0000031C'             *   =
         DC    X'00000320'             * IO WAIT
         DC    X'00000324'             *   =
         DC    X'00000328'             * PROBLEM STATE
         DC    X'0000032C'             *   =
         DC    X'00000350'             * PAGE READ
         DC    X'00000354'             * PAGE WRITE
         DC    X'0000036C'             * + 2 = PAGE RATE
         DC    X'000003AC'             * VMBLOK OPERATOR
*                                      *
         COPY  GCPNUC                  * FROM CPNUC MAP
*                                      *
NUMLIST  EQU   (*-ADDRLIST)/4          *
BIDLE    EQU   0                       *
BPAGE    EQU   BIDLE+8                 *
BIO      EQU   BPAGE+8                 *
BPROB    EQU   BIO+8                   *
BPGREAD  EQU   BPROB+8                 *
BPGWRITE EQU   BPGREAD+4               *
BPGRATE  EQU   BPGWRITE+4+2            *
BOPERATR EQU   BPGRATE+2               *
BPAGEBLE EQU   BOPERATR+4              *
BTEMPUSD EQU   BPAGEBLE+4              *
BTEMPMAX EQU   BTEMPUSD+4              *
BPAGEMAX EQU   BTEMPMAX+4              *
BPAGEUSD EQU   BPAGEMAX+4              *
BPSTEAL  EQU   BPAGEUSD+4              *
BFSCANS  EQU   BPSTEAL+4               *
BINQ1    EQU   BFSCANS+4               *
BINQ2    EQU   BINQ1+4                 *
BLOGGED  EQU   BINQ2+4                 *
BDIALED  EQU   BLOGGED+4               *
*                                      *
         COPY  GCPLEVEL                * CURRENT CP GENERATION
*                                      *
         LTORG                         *
BEFORE   DC    A(GOSIO),A(GOTIO1),A(ERROR1),A(ERROR1LN)
DURING   DC    A(DONE),A(GOSIO),A(ERROR2),A(ERROR2LN)
ERROR1   DC    C'ERROR TIO BEFORE'
ERROR1LN EQU   *-ERROR1                *
ERROR2   DC    C'ERROR SIO'
ERROR2LN EQU   *-ERROR2                *
SUBGLND  DC    X'0'                    *
FIRSTIME DC    X'1'                    *
ACTUSERS DC    PL2'0'                  *
CURRENTU DC    A(USERBUF1)             *
WORK     DS    5D                      *
OLDCLOCK DS    1D                      *
NEWCLOCK DS    1D                      *
SUB1     DS    1D                      *
SUB2     DS    1D                      *
BUF1     DS    CL(4*NUMLIST)           *
BUF2     DS    CL(4*NUMLIST)           *
CCW      DC    X'11',AL3(WRBUF1),B'00100000',X'00',AL2(WRLEN1)
WRBUF1   EQU   *                       *
         DC    AL2(4),X'03',X'00'      * ERASE/RESET
WRBUF11  DC    AL2(WRLEN11),X'0F10',X'00',B'11000000',X'00'
         COPY  CPSYS1                  *
WRLEN11  EQU   *-WRBUF11               *
WRBUF12  DC    AL2(WRLEN12),X'06',B'11000001',X'40',X'D0',X'08'
         DC    AL1(8),X'400910000000F7'
         COPY  T32701
WRLEN12  EQU   *-WRBUF12               *
WRLEN1   EQU   *-WRBUF1                *
WRBUF2   EQU   *                       *
WRBUF21  DC    AL2(WRLEN21),X'0F10',X'00',B'11000000',X'00'
         COPY  CPSYS2                  *
WRLEN21  EQU   *-WRBUF21               *
WRLEN2   EQU   *-WRBUF2                *
         ORG   GRAFIND+8192            *
USERBUF1 DC    A(USERBUF2)             *
         DS    50CL52                  *
         ORG   GRAFIND+8192+4096       *
USERBUF2 DC    A(USERBUF1)             *
         DS    50CL48                  *
USNWSECT DSECT                         *
USNWSNXT DS    F                       *
USNWSTAT DS    F                       *
USNWSVTM DS    CL8                     *
USNWSTTM DS    CL8                     *
USNWSUID DS    CL8                     *
USNWSPRD DS    F                       *
USNWSPWR DS    F                       *
USNWSSIO DS    F                       *
USNWSRPG DS    H                       *
         DS    H                       *
USNWSWSS DS    H                       *
         DS    H                       *
USOLSECT DSECT                         *
USOLSNXT DS    F                       *
USOLSTAT DS    F                       *
USOLSVTM DS    CL8                     *
USOLSTTM DS    CL8                     *
USOLSUID DS    CL8                     *
USOLSPRD DS    F                       *
USOLSPWR DS    F                       *
USOLSSIO DS    F                       *
USOLSRPG DS    H                       *
         DS    H                       *
USOLSWSS DS    H                       *
         DS    H                       *
USDPSECT DSECT                         *
USDPSUID DS    CL8                     *
USDPSCPV DS    CL7                     *
USDPSCPT DS    CL7                     *
USDPSSIO DS    CL6                     *
USDPSPGR DS    CL6                     *
USDPSSTR DS    CL9                     *
         END

This article will be continued next month.

R T Heemskerk
Systems Programmer (The Netherlands)

