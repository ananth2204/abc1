Formatting selected VMBLOK fields

Editor's note: this EXEC shows another approach to extracting
useful information from the VMBLOK.

The following REXX EXEC formats several fields from
VMBLOK and either displays or stacks them.  I find this
information useful when I am trying to isolate some activity to a
particular user-id.

The fields describe: the user-id, VM privilege classes, the number
of devices attached to this user-id, the amount of virtual storage,
the non-spooled I/O count, the last CP command issued, the run-
list dispatching priority, the address of the last active I/O and the
name of the saved system that was IPLed.

The EXEC may be invoked without arguments, it will display the
above fields from all VMBLOKs; or it may be invoked with a
user-id, in which case it will display information for that user.  It
may be instructed to stack the information with the STACK option
for one user-id.  An example of the output is shown in Figure 1.

Userid   VMCMDLEV   #dev  Stor    IO CNT VMCOMND  VMR Adev              VMIPL
AMHOOKE  G           12  2048K    182    SET      0   019E              CMS
SL2TEDPG G           14  2048K    33389  DISCONN  605 019E              CMS
BO98FINF G           16  2048K    148147 DISCONN  109 019E              CMS
AT3NHCSG_G___________14__2048K____6186___DISCONN _0___0190______________CMS
RT2BOPER G           18  2048K    1778   QUERY    161 01C2              CMS
LE32STAF G           12  2048K    56     TERMINAL 0   0190              CMS
ACCTMGR  BG          15  16384K   8947   QUERY    161 0190              CMS
BA0KACCF G           15  6144K    2788   DISCONN  296 000E              CMS
SR2YOPER_G __________11__2048K____42_____DISCONN _0___0191______________CMS
JL8NMKTF G           15  2048K    434695 DISCONN  161 000E              CMS
LD11PHYF G           12  2048K    1587   DISCONN  0   0191              CMS
JS0GOPER G           32  2048K    19038  MESSAGE  0   0191              CMS
MD0FAERG G           25  2048K    448    QUERY    0   0190              CMS
DM51SANF_G___________13__2048K____731____QUERY   _0___0191______________CMS
HS1XPHYG G           11  2048K    495    SLEEP    0   01A2              CMS
PS7LSMBA G           14  2048K    895    CLOSE    0   0190              CMS
MM93ECOF G           12  2048K    336    DEFINE   0   0199              CMS
TCWAGENA G           12  2048K    128    DEFINE   0   0190              CMS

Figure 1: Example output

/*  LOOK AT FIELDS OF VMBLOKS */
arg tar_userid '(' opt
if opt='STACK' then do
  stack=1
  pc /* pad character */ =' '     /* The pad char is used every few  */
  end                             /*   lines to ease eye strain.     */
 else do                                             /* opt='STACK' */
  pc='_'
  stack=0
  end
if tar_userid='' then do              /* If only going for 1 userid */
  parse value ex('locate' tar_userid) with . '=' myvmb
  done=1                        /* done=1 => we are finished, almost */
  end
 else do                             /* get information on all users */
  'ID (STACK'
  PULL MYID .
  done=0
  PARSE VALUE EX('LOCATE' MYID) WITH . '=' MYVMB
  end
myvmb='00'myvmb
NXVMB=MYVMB                                                /* CYCLIC */
eighty_=substr('',1,80,pc)                      /* 80 pad characters */
eightyb=substr('',1,80,' ')                             /* 80 blanks */
title=,
'Userid   VMCMDLEV   #dev  Stor    IO CNT VMCOMND  VMR Adev           ',
'  VMIPL'
if stack then do
  'clrscrn'
  say
  end
DO I=1 TO 1000         UNTIL done
  IF I//5=0 THEN DO    /* use a line filled with underscores every   */
      OL=EIGHTY_        /*    5 lines.                               */
      PAD=pc
      END
    ELSE DO
      OL=EIGHTYB
      PAD=' '
      END
  if i//19=1 & stack then do   /* write a new title line every      */
      say                       /*   so often                        */
      say title
      end
/* get fields from VMBLOK */
  VMCMDLEV=EX('DCP'     HEXADD(NXVMB,298)'.4')
  vmcmdlev=cmdproc(vmcmdlev)
  OL=OVERLAY(VMCMDLEV,OL,10,11,PAD)
  #VDEV   =x2d(substr(EX('DCP'     HEXADD(NXVMB,34)'.4'),1,4))
  OL=OVERLAY(#VDEV,OL,22,3,PAD)
  VMUSER  =X2C(SPACE(EX('DCP'     HEXADD(NXVMB,110)'.8'),0))
  OL=OVERLAY(VMUSER,OL,1,8,PAD)
  vmstor=x2d(ex('dcp' hexadd(nxvmb,134)))/1024||k
  ol=overlay(vmstor,ol,26,7,pad)
  vmiocnt=x2d(ex('dcp' hexadd(nxvmb,138)))
  ol=overlay(vmiocnt,ol,35,6,pad)
  vmcomnd=x2c(ex('dcp' hexadd(nxvmb,148)'.8'))
  ol=overlay(vmcomnd,ol,42,8,pad)
  vmrprior=x2d(ex('dcp' hexadd(nxvmb,18c)))
  ol=overlay(vmrprior,ol,51,3,pad)
  vmactdev=substr(    ex('dcp' hexadd(nxvmb,1e8)),1,4)
  ol=overlay(vmactdev,ol,55,4,pad)
  vmipl=x2c(ex('dcp' hexadd(nxvmb,2a8)'.8'))
  ol=overlay(vmipl,ol,73,8,pad)
  if opt='STACK' then do                     /* Stack if requested. */
      push ol
      exit
      end
    else say ol
  NXVMB=EX('DCP'     HEXADD(NXVMB,8)'.4')    /*next VMBLOK in queue */
  if nxvmb=myvmb then done=1                    /* End of the cycle */
  END
EXIT
HEXADD:                      /* ADD 2 HEXIDECIMAL NUMBERS FOR HEX ANS*/
ARG TEMP9999,TEMP99992
RETURN D2X(X2D(TEMP9999)+X2D(TEMP99992))
EX:                         /* execute CP command & return response */
ARG STRING
'EXECIO 1 CP ( STRING' STRING
PULL . STRING
RETURN SPACE(STRING,0)
cmdproc:arg vmcmdlev          /* what classes does this blok have?  */
VMCMDLEV=X2C(VMCMDLEV)
s=''
if bitand(vmcmdlev,'80000000'x)>'00000001'X then s=s'A'
if bitand(vmcmdlev,'40000000'x)>'00000001'X then s=s'B'
if bitand(vmcmdlev,'20000000'x)>'00000001'X then s=s'C'
if bitand(vmcmdlev,'10000000'x)>'00000001'X then s=s'D'
if bitand(vmcmdlev,'08000000'x)>'00000001'X then s=s'E'
if bitand(vmcmdlev,'04000000'x)>'00000001'X then s=s'F'
if bitand(vmcmdlev,'02000000'x)>'00000001'X then s=s'G'
if bitand(vmcmdlev,'01000000'x)>'00000001'X then s=s'H'
if bitand(vmcmdlev,'00800000'x)>'00000001'X then s=s'I'
if bitand(vmcmdlev,'00400000'x)>'00000001'X then s=s'J'
if bitand(vmcmdlev,'00200000'x)>'00000001'X then s=s'K'
if bitand(vmcmdlev,'00100000'x)>'00000001'X then s=s'L'
if bitand(vmcmdlev,'00080000'x)>'00000001'X then s=s'M'
if bitand(vmcmdlev,'00040000'x)>'00000001'X then s=s'N'
if bitand(vmcmdlev,'00020000'x)>'00000001'X then s=s'O'
if bitand(vmcmdlev,'00010000'x)>'00000001'X then s=s'P'
if bitand(vmcmdlev,'00008000'x)>'00000001'X then s=s'Q'
if bitand(vmcmdlev,'00004000'x)>'00000001'X then s=s'R'
if bitand(vmcmdlev,'00002000'x)>'00000001'X then s=s'S'
if bitand(vmcmdlev,'00001000'x)>'00000001'X then s=s'T'
if bitand(vmcmdlev,'00000800'x)>'00000001'X then s=s'U'
if bitand(vmcmdlev,'00000400'x)>'00000001'X then s=s'V'
if bitand(vmcmdlev,'00000200'x)>'00000001'X then s=s'W'
if bitand(vmcmdlev,'00000100'x)>'00000001'X then s=s'X'
if bitand(vmcmdlev,'00000080'x)>'00000001'X then s=s'Y'
if bitand(vmcmdlev,'00000040'x)>'00000001'X then s=s'Z'
if bitand(vmcmdlev,'00000020'x)>'00000001'X then s=s'1'
if bitand(vmcmdlev,'00000010'x)>'00000001'X then s=s'2'
if bitand(vmcmdlev,'00000008'x)>'00000001'X then s=s'3'
if bitand(vmcmdlev,'00000004'x)>'00000001'X then s=s'4'
if bitand(vmcmdlev,'00000002'x)>'00000001'X then s=s'5'
if bitand(vmcmdlev,'00000001'x)='00000001'X then s=s'6'
RETURN S

John Kinne
Miami University (USA)	) Miami University 1989


