Product/vendor tracking system

Our installation had a problem trying to coordinate the products
we use, the vendors we deal with, costs, maintenance dates,
etc etc. We have various packages that we use to maintain each
piece, but we did not have anything that combined everything
into one place.

Thus, PRODUCTS was born. This routine maintains product
and vendor information in one system. It allows reporting,
various listing options, changes, and a multitude of other uses.
We have used the PRODUCTS routine to track product
currency (are we keeping up with maintenance), managing who
is responsible for each product, costs involved for products,
and a number of other business related needs.

The routine uses IBM's DMS/CMS (5684-113) for the
fullscreen I/O. If you don't have this product and would like an
easy, powerful, fullscreen interface for VM, you should check
it out. It beats XEDIT screens hands down and is not expensive
at all.


THE DMS PANELS

There are nine DMS panels needed for the PRODUCTS
routine. In this article, the examples are for Model 2 (24x80)
terminals. We have panels set up for any terminal type - the
PRD$PROC EXEC can be modified easily to use them if you
want to code the DMS panels also.

The panels are named PRDTRKmp, where m is the model
number the panel supports, and p is the panel number for the
routine. For example, PRDTRK24 is for Model 2 screens,
panel number 4.

Each example of the panels shows the 24 lines of the screen
format and then the field definitions that were used. All the
panels use the following delimiters: text - 'Â¬'; ext text - '!';
data - '_' (underscore); blank - '@' (for field filler). Note:
MASTER20 and PRDTRK20 use @ as the data delimiter
because those panels have underscores in some of the text.

Examples of the panels used are shown in Figures 1 to 10.


EXEC FUNCTIONS

PRODUCTS EXEC is set up to allow you to configure it as
you need to. At our installation, we have it configured to track
VM, MVS, and IMS products and vendors in separate
'databases'. This is the standard invocation EXEC, which calls
the subsystem EXEC to set up the parameters required for the
routine. It uses the name of the subsystem and appends it with
TRACK to get the name of the other EXEC, ie for VM,
PRODUCTS calls VMTRACK EXEC. We also have
MVSTRACK and IMSTRACK EXECs. You can
comment/delete the 'model = 2' statement at the beginning, if
you code up the DMS screens for other terminal models.

VMTRACK EXEC is an example of one of the 3 subsystem
EXECs we use with PRODUCTS. There are 4 variables that
are required in these subsystem EXECs in order to set up the
driver routine correctly. They are (see the EXEC for a sample):
system - sub system name (four characters maximum); labels -
VM system names (four characters maximum; disk - user-id
and disk that has data on it; and log - log file name to use.

The subsystem EXEC then executes PRD$PROC EXEC - the
main driver routine for this system. There are only a few
options in this EXEC you may want to change. One is the
'model = 2' statement at the beginning. If you code up the
DMS screens for terminal models other than Model 2, you can
delete or comment that line. The other is the
CHK_PRINT_OPTS subroutine. Currently there are two
reports not done (left for you to try!). They are dependency and
maintenance history. You can add your own code in this area if
you want. Also in CHK_PRINT_OPTS there is a section for
you to add your own default PRINT command and options for
the report function to use.


COMMAND FORMATS AND OPTIONS:

You can get into the PRODUCTS routine via a number of
routes. The various command formats are:

      PRODUCTS  subsystem  other_opts

By default, PRODUCTS will display the MASTER20 screen to
allow you to select the system you want to work with. You can
bypass the MASTER screen by entering the subsystem name
on the PRODUCTS command. Other_opts is passed to the
subsystem EXEC for it to use.

      VMTRACK  search_name ( function

By default, the EXEC will display the function menu (Product,
Vendor, or Printing). You can specify a search string to start
with if you wish. By default, function will be PRODUCT when
a search_name is used.

Function can be Product, Vendor, or Report. You can use this
option to bypass the function menu. Note, search_name is
ignored with the REPORT function.

This article will be continued next month.

James S Vincent
VM Systems Software Specialist
Nationwide Insurance Company (USA)      c Nationwide Insurance Company 1992

