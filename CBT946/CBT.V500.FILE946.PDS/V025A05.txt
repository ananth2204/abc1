 Remote Job Entry from CMS to an MVS machine
In the case where an MVS machine is not a guest under VM (such as in partitioned
Amdahl, or physically separate, machines), there are many circumstances under
which one might wish to submit a batch job from VM/CMS and receive the results
(if any) back at the VM/CMS reader.
Provided there is an NJE definition for the VM node, the JOB EXEC should allow
you to submit jobs to the MVS system with a minimum of information.  It will
issue the necessary command to route your job file to RSCS to be executed on
MVS.  The user will need to have a valid JCL file to test this EXEC with.  For
an example of an appropriate JOBCARD with routing information etc, execute the
JOB EXEC as follows: "JOB JOBCARD".  Depending upon how SYSOUT is specified in
your JCL, your results should return to your reader in one or more files.
The COMPAR EXEC is an example of using the JOB EXEC to execute an application
program.  In this case, it was found that a requirement existed for executing an
intelligent source file comparison program - with in-line datasets - from
VM/CMS.  (The program was not installed on VM/CMS and only the system COMPARE
module was available.)  The COMPAR EXEC will create a dummy JCL file (on a
scratch disk) using the TEMPDISK EXEC (if present).
JOB EXEC
&TRACE OFF
*  NAME    : JOB
*  PURPOSE : THIS EXEC IS USED TO SUBMIT JCL
*            (BATCH JOBS) TO THE MVS MACHINE
*  NOTE: FOR HELP:  JUST ENTER  'JOB' WITHOUT PARAMETER(S)
*        OR WITH "HELP" OR "?"
*        TO USE THIS EXEC YOU MUST HAVE A JOB FILE THAT CONTAINS
*        COMPLETE JCL NECESSARY FOR THE SUCCESS OF YOUR JOB.
*        NOTE THAT YOU MUST PROVIDE THE NECESSARY CARDS TO RETURN
*        THE OUTPUT FROM YOUR JOB TO THE DESIRED LOCATION
*        (SUCH AS YOUR READER...)
* NOTE: IF THE NODE CHANGES FOR THE MVS MACHINE, OR IF YOU DESIRE
*       TO SEND YOUR JOB TO A DIFFERENT MACHINE, CHANGE THE
*       VARIABLE "&MVSNODE" TO REFLECT THE CHANGE.
&MVSNODE = LTVAD01
&IF .&1 NE .   &GOTO -COMMAND.LINE
   &TYPE PLEASE ENTER THE NAME OF YOUR JCL FILE:
   &TYPE   (FILENAME, FILETYPE & FILEMODE)
   &READ VARS &FILE &JCL &FM
   &IF .&FILE EQ .         &GOTO -ABORT
   &IF .&1    EQ .JOBCARD  &GOTO -JOBCARD
   &GOTO -PUNCH.FILE
-COMMAND.LINE
   &IF .&1    EQ .JOBCARD  &GOTO -JOBCARD
   &IF &INDEX EQ 0         &GOTO -HELP
   &IF &1     EQ HELP      &GOTO -HELP
   &IF &1     EQ ?         &GOTO -HELP
   &FILE = &1
   &JCL  = &2
   &FM   = &3
   &IF .&JCL EQ . &JCL = JCL
   &IF .&FM  EQ . &FM  = A
-PUNCH.FILE
   &TYPE                     ...SENDING JOB TO THE MVS MACHINE
   CP SPOOL PUNCH RSCS
   CP TAG DEV PUNCH &MVSNODE JOB
   PUNCH &FILE &JCL &FM ( NOH
   CP SPOOL PUNCH TO *
   EXECIO 1 DISKR &FILE &JCL &FM (FINIS
   &READ VARS &JOBNM * *
   &JOBNM = &SUBSTR OF &JOBNM 3 8
   ID ( STACK
   &READ VARS &UID * * * * &TDATE &TTIME * *
   &FN   = LEFT    OF &FILE   8
   &FT   = LEFT    OF &JCL    8
   &FM   = LEFT    OF &FM     2
   &XEQ  = LEFT    OF &MVSNODE 9
    &FILL = LEFT    OF &BLANK 10
   &TO   = RIGHT   OF TO      4
   &MESSAGE = &STRING OF FILE &FN &FT &FM SENT &TO  &XEQ &FILL
   &MESSAGE = &STRING OF &MESSAGE ON &TDATE &TTIME FOR EXECUTION
   &MESSAGE = &STRING OF &MESSAGE AS JOB &JOBNM
   EXECIO 1 DISKW &UID NETLOG *  ( FINIS ST &MESSAGE
   CP TAG DEV PUNCH *
   &GOTO -END
-HELP
CLRSCRN
&BEGTYPE -END.OF.HELP

   THIS EXEC WILL ALLOW YOU TO SUBMIT JOBS TO THE MVS SYSTEM
   WITH A MINIMUM OF INFORMATION.  IT WILL ISSUE THE NECESSARY
   COMMANDS TO ROUTE YOUR JOB FILE TO RSCS TO BE EXECUTED ON MVS.
   THE FOLLOWING IS THE PARAMETER SEQUENCE AND DEFAULTS FOR
   THIS EXEC:
      JOB  FN <FT> <FM>

      WHERE:   FN   IS THE FILENAME OF YOUR JOB FILE
               FT   IS THE FILETYPE OF YOUR JOB FILE
                    (THE DEFAULT FILETYPE IS JCL)
               FM   IS THE FILEMODE OF YOUR JOB FILE
                    (THE DEFAULT FILEMODE IS A)

-END.OF.HELP
&GOTO -END
-JOBCARD
CLRSCRN
&BEGTYPE -END.OF.JOBCARD
  //VMTEST JOB (xxx,xxxxxx,VMTEST,xxxx,xxxxxxxx),'MS MSF-59 SEAMAN7362',
  //       CLASS=x,TIME=xx,NOTIFY=xxxxxxx <------ TSO ID
  //*LOGONID xxxxxxx   <---------TSO ID
  //*PASSWORD xxxxx    <---------TSO PASSWORD
  //*
  //*MAIN ORG=LTVAD02.xxxxxxx    <----------VM/CMS ID
  //*FORMAT PR,DDNAME=,DEST=LTVAD02.xxxxxxx  <----------VM/CMS ID
  //*FORMAT PU,DDNAME=,DEST=LTVAD02.xxxxxxx  <----------VM/CMS ID
-END.OF.JOBCARD
&GOTO -END
-ABORT
   &TYPE JOB PROCEDURE ABORTED BY USER...
-END
*
&EXIT

COMPAR EXEC
&TRACE OFF
*  NAME    : COMPAR
*  PURPOSE : This exec is used to submit a batch job to the MVS
*            machine from VM/CMS.  This exec uses two JCL files:
*            JOBCARD JCL
*            COMPARE JCL
*             THIS JOB WILL PERFORM AN "INTELLIGENT" COMPARISON OF THE
*             TWO INPUT FILES
* NOTE: This exec calls another exec "JOB" to submit the dummy job
*       file.  If JOB is not found, the procedure aborts.
STATE JOB EXEC *
&IF &RC NE 0 &GOTO -JOB.ABORT
&FN1 = &1
&FT1 = &2
&FM1 = &3
&FN2 = &4
&FT2 = &5
&FM2 = &6
* ... If the user didn't enter all the file info, prompt him...
 &IF .&1 NE .JOBCARD &GOTO -IF.HELP
   EX JOB JOBCARD
   &GOTO -END
-IF.HELP
   &IF .&1 = .COMPARE &GOTO -COMPARE
   &IF .&1 = .HELP    &GOTO -HELP
   &IF .&1 = .?       &GOTO -HELP
* ... See if the user has a "T" temporary disk.  If he does,
* ... use it, if not, issue a warning & use his "A" Disk....
   QUERY DISK T (STACK LIFO
   &READ VARS &LABEL &CUU &M &STAT
   &IF &M    EQ NOT &GOTO -BADMODE
   &IF &STAT NE R/W &TMODE = USED
   &IF &STAT NE R/W &GOTO -BADMODE
   &TMODE = T
   &GOTO -OK
-BADMODE
*    ... if mode T has been used (NOT BY A TEMP DISK)
*    ... then don't offer to create one...
     &IF .&TMODE EQ .USED &GOTO -TDISK.WARNING
*    ... see if the tempdisk exec is out there...
*    ... if it is, ask if the user wants to use it, if not, don't.
     STATE TEMPDISK EXEC *
     &IF &RC NE 0 &GOTO -TDISK.WARNING
     &TYPE  This program is designed to use a temporary disk to write
     &TYPE  a dummy file on.  Do you wish to generate a temporary
     &TYPE  disk, or use your "A" disk?
     &TYPE  (NOTE: This will only be a problem if there is not enough
     &TYPE         space to hold the temporary JCL file to be
     &TYPE         generated....  The temporary disk will be accessed
     &TYPE         as your "T" disk.)
     &TYPE PLEASE ENTER  YES or NO
     &READ VARS &GENTDISK
     &IF .&GENTDISK EQ .   &GOTO -BADMODE
     &IF .&GENTDISK EQ .NO &GOTO -AMODE
        EX TEMPDISK TEMP 444 5 T
        &GOTO -TMODE
-TDISK.WARNING
     &TYPE  WARNING!!!!
     &TYPE  This program is designed to use a temporary disk to write
     &TYPE  a dummy file on.  This disk must be accessed as your "T"
     &TYPE  disk.  Since no R/W "T" disk has been detected, this
     &TYPE  program is defaulting to your "A" disk.  This will only be
     &TYPE  a problem if there is not enough space to hold the
     &TYPE  temporary JCL file.  If you do run out of space you will
     &TYPE  need to create a temporary disk and access it as your
     &TYPE  "T" disk.
     CP SLEEP 5 SEC
     &GOTO -AMODE
-OK
&GOTO -DES
-TMODE
     &TMODE = T
     &GOTO -DES
-AMODE
     &TMODE = A
-DES
   DESBUF
*LRSCRN
&IF .&FM2 Â¬= .       &GOTO -NEXT
-INPUT
   &TYPE Enter the FILENAME, FILETYPE & FILEMODE of file # ONE:
   &TYPE  (or type ABORT to exit)
      &READ VARS &FN1 &FT1 &FM1
*     ... VERIFY INPUT
      &IF .&FN1 EQ .ABORT &GOTO -ABORT
       &IF .&FN1 EQ .      &GOTO -INPUT
      &IF .&FT1 EQ .      &GOTO -INPUT
      &IF .&FM1 EQ .      &GOTO -INPUT
   &TYPE Enter the FILENAME, FILETYPE & FILEMODE of file # TWO:
   &TYPE  (or type ABORT to exit)
      &READ VARS &FN2 &FT2 &FM2
*     ... VERIFY INPUT
      &IF .&FN2 EQ .ABORT &GOTO -ABORT
      &IF .&FN2 EQ .      &GOTO -INPUT
      &IF .&FT2 EQ .      &GOTO -INPUT
      &IF .&FM2 EQ .      &GOTO -INPUT
-NEXT
*     ... verify that the input file exists...
      STATE &FN1 &FT1 &FM1
      &IF &RC EQ 0 &GOTO -TWO
         &TYPE   The file:
         &TYPE
         &TYPE   &FN1 &FT1 &FM1
         &TYPE
         &TYPE   was NOT found, please try again...
         &GOTO -INPUT
-TWO
*     ... verify that the input file exists...
      STATE &FN2 &FT2 &FM2
      &IF &RC EQ 0 &GOTO -COPY
         &TYPE   The file:
         &TYPE
         &TYPE   &FN2 &FT2 &FM2
         &TYPE
         &TYPE   was NOT found, please try again...
         &GOTO -INPUT
-COPY
COPY  JOBCARD  JCL     A     DUMMY  JCL  &TMODE (REPL
COPY  COMPARE  JCL     A     DUMMY  JCL  &TMODE (FROM 1 FOR 5 APPEND
COPY  &FN2     &FT2    &FM2  DUMMY  JCL  &TMODE (APPEND
COPY  COMPARE  JCL     A     DUMMY  JCL  &TMODE (FROM 12 FOR 2 APPEND
COPY  &FN1     &FT1    &FM1  DUMMY  JCL  &TMODE (APPEND
COPY  COMPARE  JCL     A     DUMMY  JCL  &TMODE (FROM 20 APPEND
* ... SUBMIT JOB
EX JOB DUMMY JCL &TMODE
&GOTO -END
-HELP
CLRSCRN
&BEGTYPE -END.OF.HELP
 This EXEC will allow you to submit jobs to the MVS system in order
 to use the COMPARISON program that resides there.  SYNTAX:

      COMPAR  <FN1> <FT1> <FM1>    <FN2> <FT2> <FM2>

      WHERE:   FN1   is the FILENAME of the first file to be compared
               FTx   is the FILETYPE...
               FMx   is the FILEMODE...

 NOTE: This EXEC expects a scratch disk accessed as your "T" DISK.
       a dummy JCL file will be built there that contains the files
       to be compared as inline data sets.
In order to use this program, you MUST have two JCL files:  JOBCARD &
COMPARE JCL.
For example, execute this exec with the following parameter:

             "COMPAR JOBCARD"
             "COMPAR COMPARE"

-END.OF.HELP
&GOTO -END
-ABORT
       &TYPE COMPARE PROCEDURE ABORTED BY USER
      &TYPE
      &GOTO -END
-COMPARE
CLRSCRN
&BEGTYPE -END.OF.COMPARE
 //SUPERC EXEC PGM=SUPERC,PARM=('LONGL 0SIZE ')  <-----note parameters
 //STEPLIB DD  DSN=SYS1.UTILPGM,DISP=SHR
 //NEWDD   DD  *
 THIS IS TEST DATA FOR USE IN THE COMPARISON PROGRAM BEING RUN HERE.
 IT IS INTENDED THAT TWO DATA SETS WILL BE INSERTED: THE FIRST IN
 THIS DATA STREAM, THE SECOND UNDER '//OLDDD', REPLACING THESE LINES.

 TTHIS LINE IS THE "DIFFERENT" LINE FOR TESTING THE COMPARE...
 THIS LINE IS NOT THE "DIFFERENT" LINE FOR TESTING THE COMPARE...
 /*
 //OLDDD    DD  *
 THIS IS TEST DATA FOR USE IN THE COMPARISON PROGRAM BEING RUN HERE.
 IT IS INTENDED THAT TWO DATA SETS WILL BE INSERTED: THE FIRST IN
 THIS DATA STREAM, THE SECOND UNDER '//OLDDD', REPLACING THESE LINES.

 THIS LINE IS THE "DIFFERENT" LINE FOR TESTING THE COMPARE...

 THIS LINE IS NOT THE "DIFFERENT" LINE FOR TESTING THE COMPARE...
 /*
 //DELDD    DD  DSN=&&TEMP,DISP=(,PASS),UNIT=SYSDA,
 //             SPACE=(TRK,(1,1),RLSE)
 //OUTDD    DD  SYSOUT=U
 //SYSIN    DD  *
 CMPCOLM COLM 1:72 <-------- columns to compare...
 /*
-END.OF.COMPARE
&GOTO -END
-JOB.ABORT
   CLRSCRN
   &TYPE  The EXEC ---- JOB ---- was not found.  This EXEC is required
   &TYPE  for COMPAR to work.
   &TYPE  Procedure aborting...
-END
&EXIT &RC
Patrick F Seaman
Senior Systems Engineer
LTV Missiles & Electronics Group (USA)       ) Patrick F Seaman 1988























