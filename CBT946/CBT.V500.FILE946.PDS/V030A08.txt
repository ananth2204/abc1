 Display text highlighting
The following REXX procedure is used as an XEDIT macro (executed from within an
XEDIT session) and provides the facility to insert 3270 HILITE control
characters in data intended for display at a terminal (eg help text and error
messages within procedures).
There are three functions possible: the highlighting of words, character
strings, and all data between a pair of from/to columns.  The format of the
command is shown in the Help text within the macro.
Two points should be noted when using the macro:
1    Use of the string and column functions causes all characters to the right
of the string or 'to' column to be displaced by two columns (for each occurrence
within a line) on the resulting display.  Care should be taken that no
unexpected truncation results.
2    If the parameter 'occurs' is used, parameter 'lines' is mandatory.
The macro can be tested on itself after it has been created (and saved as HL
XEDIT A) by doing the following.
Position at the beginning of the explain section then type the following command
sequence (each followed by ENTER) taking care to type lower and UPPER case as
shown:
    hl w HL
    hl w hilite
    hl w W
    hl w S
    hl w C
    /olumns                ... re-position
    hl c 45 to 46 1
    c />  />/1             ... shift rightmost characters 2 left
                               to compensate for the shift 2 right.
    hl s 'String'
    c /).  /)./*           ... see above

Save the updated file, then type hl (enter).  The help text of the macro itself
will now be displayed with the relevant words/strings highlighted.
/* ==================================================================
       Insert 3270 hilite control characters within display text.
   ================================================================== */
   parse arg type specs
/* Define error message fields    */
   Inv_pr = 'Parameter string format invalid'
   No_wrd = 'No word specified.'
   No_str = 'No string specified.'
   No_pr = 'No parameters specified.'
   No_to = 'No to-column specified.'
   Inv_fr = 'Invalid from column ('
   Inv_to = 'Invalid to column ('
   Inv_frto = 'Invalid from/to columns ('
   Exc_to = 'To column '
   Exc_ln = ' exceeds record length '
   Inv_li = 'Invalid number of lines ('
   Inv_oc = 'Invalid number of occurences ('
/*   Determine which function to be performed   */
   Select
     When (type='W'|type='w') then call Hilite_word
     When (type='S'|type='s') then call Hilite_string
     When (type='C'|type='c') then call Hilite_columns
     Otherwise call Explain
   end
Exit
Disp_error:
/*  If error found in parameters, then display it before exiting  */
   emsg errmsg
Exit
/*  Routine to hilite a Word.  */
Hilite_word:
   parse var specs wrd lines occurs rest
   call Parm_validate
    if wrd = '' then do
               errmsg= No_word
               Signal Disp_error
               End
   xwrd = c2x(wrd)
   queue 'PRESERVE'
   queue 'SET HEX ON'
   queue "C /x'40"xwrd"40/x'ldc8"xwrd"ldc0'/"lines occurs
   queue 'RESTORE'
Return
/*  Routine to hilite a String. */
Hilite_string:
   parse value specs with "'" str "'" lines occurs rest
   call Parm_validate
   If str = '' then do
               errmsg = No_str
               Signal Disp_error
               End
   xstr = c2x(str)
   queue 'PRESERVE'
   queue 'SET HEX ON'
   queue "C /x'"xstr"'/x'1dc8"xstr"1dc0'/"lines occurs
   queue 'RESTORE'
Return
/* Routine to hilite data between given columns.  */
Hilite_columns:
   specs = translate(specs)
   parse value specs with frm_col 'TO' to_col lines occurs
   If occurs = '' then do
                  occurs = '*'
                  call Parm_validate
                  occurs = ''
                  End
   If frm_col = '' then do
                   errmsg = No_pr
                   Signal Disp_error
                   End
  'command ext /LR/'
   Select
     When occurs¬='' then errmsg=Inv_pr '('specs')'
     When to_col='' then errmsg=No_to
     When datatype(frm_col)¬='NUM' then errmsg=Inv_fr frm_col ')'
     When datatype(to_col)¬='NUM' then errmsg=Inv_to to_col ')'
     When to_col¬>frm_col then errmsg=Inv_frto frm_col to_col ')'
     When to_col+4>LRecl.1 then errmsg=Exc_to'('to_col')'Exc_ln
                                                        '('LRecl.1')'
     Otherwise nop
   End
   If errmsg¬= '' then Signal Disp_error
   queue 'PRESERVE'
   queue 'SET HEX ON'
   queue 'SET ZONE' frm_col frm_col+1
   queue "C //x'ldc8'/"lines
   queue 'SET ZONE' to_col+3 to _col+4
   queue "C //x'1dc0'/"lines
   queue 'RESTORE'
Return
/*  Routine to validate entered parameters. */
Parm_validate:
   errmsg = ''
   Select
     When lines = '' then lines = '*'
     When lines = '*' then nop
     When datatype(lines)¬= 'NUM' then errmsg = Inv_li lines ')'
     Otherwise nop
   End
    If errmsg¬= '' then Signal Disp_error
   Select
     When occurs = '' then occurs = '*'
     When occurs = '*' then nop
     When datatype(occurs)¬= 'NUM' then errmsg = Inv_oc occurs ')'
     Otherwise nop
   End
   If errmsg ¬= '' then Signal Disp_error
   If rest¬= '' then do
                errmsg = Inv_pr '('specs')'
                Signal Disp_error
                End
Return
/*  Routine to display Help text.  */
Explain:
errmsg = ''
say "" copies ("=",70)
say " |                   HL macro - Help information.
say "" copies("=",70)
say " |
say " |        Inserts 3270 hilite control characters at locations  |"
say " |              specified (in the file being edited).          |"
say " |                                                             |"
say " |   Command format:                                           |"
say " |          HL   W (ord)      xxxxxxxx    <lines>    <occurs>  |"
say " |               S (tring)   'xx xx xx'   <lines>    <occurs>  |"
say " |               C (olumns)   aa  TO  bb  <lines>              |"
say " |                                                             |"
say " | lines = number of lines to be altered (relative from current|"
say " |                                         line).              |"
say " |occurs = number of occurences in each line to be altered.    |"
say " |         Default for both of above = * (all)                 |"
say " |    aa = from column number                                  |"
say " |    bb =   to column number                                  |"
say " |                                                             |"
say " | Notes: A String must be specified within quotes ('....').   |"
say "       The word TO must be specified When Columns function used|"
say "" copies("=",70)
Return
J Cairney
Systems Programmer
Rendeck Automatisering (The Netherlands)     ) Xephon 1989
























