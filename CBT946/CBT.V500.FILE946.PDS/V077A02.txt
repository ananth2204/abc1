SEARCH EXEC

While A search list command (November 1991) is an eye-
catching and useful EXEC, it has the following limitations:

o      The parameter list is limited to one line

o      After locating the first occurrence, the EXEC puts you in
      XEDIT and you have to locate subsequent occurrences

o      The file selection can have overlaps

o      If a file is too big to fit in your storage, you cannot use the
      EXEC because it uses XEDIT to locate strings.

The following SEARCH EXEC overcomes all the above
limitations. You can have any number of search lists. Overlap
files are ignored because each file is searched only once. You
can have any number of search strings. While processing, it
will display the filename and will display a warning message if
there are no search strings found in the file. Finally it will
display those search strings that had no hits. Output of the
selection is a CMS file called SEARCH OUTPUT. For each
search string found, it has the filename, line number, start
column number, and, if the string occurs more than once in the
line, the frequency. It also has the complete line in which the
string was found.

/*   REXX Program That Locates Strings   */
arg name
if name='' then do
 i=0
 say 'Type your argument LISTFILE format  & Press ENTER'
 say 'or Press ENTER to  exit'
 do forever
  pull name
  if i=0 & name='' then exit
  if name='' then leave
  i=i+1
  arg.i=name
  say 'Press ENTER to  proceed Further'
  say 'or Type your next argument LISTFILE format  & Press ENTER'
  end
 end
 else do
  i=1
  arg.i=name
  end
k=0
'vmfclear'
val.='??'
do j=1 by 1 until j=i
  parse var arg.j arg1 arg2 arg3
  if arg2='' then arg2='*'
  set cmstype ht
 'listfile ' arg1 arg2 arg3 '( stack'
  set cmstype rt
 if queued()=0 then do
    say 'There are no files - Selection criteria:-' arg.j
    iterate
    end
  if queued()=1 then say 'There is 1 File - Selection criteria:-'arg.j
  else say 'There are ' queued() 'Files- Selection criteria:-'arg.j
  do j1=1 for queued()
   pull fname ftype fmode .
   if val.fname.ftype.fmode='??'  then val.fname.ftype.fmode='**'
    else do
     say '>>Caution<<' fname ftype fmode 'already in the selection list'
    iterate j1
    end
   k=k+1
   cmsname.k=fname ftype fmode
  end
end
if k=0 then do
 say 'No files for your selection-Program Aborted'
 exit 9999
 end
totalfiles=k
say""
maxlen=0
do j=1 by 1
 if j=1 then say center('What string do you want to search?',80)
  else say center('Type the Next string name Or',80)
 say center('Press Enter to Start search',80)
 parse pull data
 if j=1 & data='' then do
  say 'You did not specify any string for search- prog aborted'
  exit 9999
  end
 if data='' then leave
 if length(data)>maxlen then maxlen=length(data)
 search.j=data
end
totstr=j-1
if maxlen<6 then maxlen=6
'vmfclear'
say center('Do you want an exact (lower to lower) case search?',80)
say center('or do you want to ignore lower, uppercase',80)
say "Type 'E' for exact match"
say "Or Just Press Enter"
pull match .
do k1=1 by 1 until k1=totstr
if match='E' then searchtr.k1=search.k1
   else searchtr.k1=translate(search.k1)
end
fnamew='SEARCH OUTPUT A'
set cmstype ht
erase fnamew
set cmstype rt
cntw=0
hit.='n'
output='   CMS Filename         Line  Col  Freq   'center('Field',maxlen)',
D  A  T  A '
call rite
do k=1 by 1 until k=totalfiles
 lno=1
 cmsname.save=''
 parse var cmsname.k fn ft fm
 sfilename=left(fn,8) left(ft,8) left(fm,1)
 call read
end
say ''
say '        *-*-*-*  Reading Of Files Finished  *-*-*-*'
say ''
do i=1 by 1 for totstr
 if hit.i='n' then say '>>Warning<< - No Hits For "'search.i'"'
end
if cntw=1 then do
 say '********************  Serious Error ******************'
 say copies('No Hits ',7)
 say '  'copies('No Hits ',7)
 say '   'copies('No Hits ',7)
 say '********************  Serious Error ******************'
 end
else do
 m1='Output is in >>>> SEARCH OUTPUT A <<<<<<'
 say center(copies('*',length(m1)),80)
 say center(m1,80)
 say center(copies('*',length(m1)),80)
 end
exit
/*                    Read                       */
read:
hitfile='n'
say 'Reading of ' sfilename 'started'
do forever
   'EXECIO 1 DISKR' cmsname.k  '(VAR  LINE'
   if rc=2 then leave
   do k1=1 by 1 until k1=totstr
    if match='E' then linet=line
      else linet=translate(line)
    st=1
    col=index(linet,searchtr.k1,st)
    if col=0 then iterate k1
    hitfile='y'
    hit.k1='y'
    if cmsname.save=sfilename then sfilename=copies(' ',19)
      else cmsname.save=sfilename
    row=right(lno,8)
    column=right(col,3)
    call cntsearch
    if cnt=1 then cnt=' '
    cnt=right(cnt,6)
   output=sfilename row column cnt '  ' left(search.k1,maxlen) "->" line
   call rite
  end
  lno=lno+1
end
finis cmsname.k
if hitfile='n' then say center('<<Warning>> No hits in 'sfilename,72)
return
/*                    cntsearch                  */
cntsearch:
st=col+length(searchtr.k1)
cnt=1
do forever
 col=index(linet,searchtr.k1,st)
 if col=0 then leave
 cnt=cnt+1
 st=col+length(searchtr.k1)
end
return
/*                    rite                       */
rite:
'EXECIO 1 DISKW' fnamew '(VAR OUTPUT'
rc.rite=rc
if rc.rite Â¬=0 then do
 say 'EXEC failed while writing to' fnw ftw fmw
 say 'Return code is' rc.rite
 exit 9999
 end
cntw=cntw+1
return

Moyeen Ahmed Khan
Systems Analyst
Qatar General Petroleum Corporation (Qatar)                  c QGPC 1993

