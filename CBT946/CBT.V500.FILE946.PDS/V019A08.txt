 VSAMAP EXEC
We often want to know how the free and the occupied space is allocated on a VSAM
disk.
An AMSERV program run with the option LISTCAT CAT(usercatalog) ALL will give us
the information we need.  The data is given in RLC (run length code) in the
SPACE-MAP area, in hexadecimal form.  (The complete description of the RLC form
may be found in Using VSE/VSAM Commands and Macros, IBM SC24-5144-2, Appendix B,
Page B-7.)
VSAMAP EXEC reads the RLC and identifies occupied and free areas of the VSAM
disk in tracks, and also computes the size of free areas in cylinders.
Note: the output of the AMSERV program is found in the file named REP LISTING A,
the output of the VSAMAP EXEC itself is found in the file named TEMP LISTCAT A.
/* VSAMAP EXEC reads RLC from SPACE-MAP in REP LISTING and computes */
/* sizes of free and occupied space in VSAM area                    */
trace off
/* Some strings needed for output                                   */
strzl=' !XXXXXXXXX '
strzr=' XXXXXXXXX!'
strbl=' !          '
strbr='          !'
striz=' +------------------------------+'
kk=0
strcyl=' '
'erase temp listcat  a'
do forever
  rcy=1
  /* Read REP LISTING and find SPACE-MAP                           */
  'execio * diskr rep listing a (locate /SPACE-MAP/'
  rcx=rc
  kk=kk+1
  ztrk=0
  if rcx <> 0 then leave
  pull linenum
  pull line
  queue '              SPACE 'kk
  'execio 1 diskw temp listcat  a '   /* Write header.              */
  parse value line with pro 'SPACE-MAP----------' str
  str=strip(str)                      /* This is the first part of  */
  do while rcy=1                      /* RLC, is there more?        */
    'execio 1 diskr rep listing a'    /* Go and get it!             */
    pull line
    parse value line with cc 2 contd
    contd=strip(contd)
    rcy=datatype(contd,'X')
    if rcy = 1 then do                /* Is it really a continuation*/
       str=str!!contd                 /* of RLC?                    */
       end
    end
  str=str!!'XX'                       /* Close RLC with a XX string.*/
  /* The complete RLC is here, convert it to decimal.               */
  i=-1
  occu=0
  free=0
  sw=0
  do forever
    i=i+2
    chh=substr(str,i,2)
    if chh='XX' then leave
    dbr=x2d(chh)                      /* RLC is 1 byte long ?       */
    if dbr >= 250 then do             /* RLC is 3 bytes long ?      */
      i=i+2
      chh=substr(str,i,4)
      dbr=x2d(chh)
      i=i+2
      end
    queue striz
     'execio 1 diskw temp listcat  a '
    if sw=0 then do                   /* Occupied tracks            */
      sw=1
      occu=occu+dbr
      ztrk=ztrk+dbr
      queue strzl!!format(dbr,5)!!' trk '!!strzr
      end
    else do                           /* Free tracks                */
      sw=0                            /* How many free cylinders are*/
      htrk=ztrk+dbr                   /* there, and is this space on*/
      if dbr >= 30 then do            /* the cylinder boundary?     */
        zcyl=ztrk%30
        trkos=ztrk//30
        if trkos > 0 then zcyl=zcyl+1
        trkos=htrk%30
        scyl=trkos-zcyl
        if scyl > 0 then strcyl='        '!!scyl!!' cyls free.'
        end
      ztrk=htrk
      free=free+dbr
      queue strbl!!format (dbr,5)!!' trk '!!strbr!!strcyl
      strcyl=' '
      end
    'execio 1 diskw temp listcat a '
    end
  queue striz
  queue '    total = 'occu+free' used = 'occu
  queue ' '
  'execio 3 diskw temp listcat  a '   /* Write the picture down to  */
end                                   /* disk.                      */
queue ' XXXXXXXXX --> used'
queue '           --> free'           /* Legend                     */
'execio 2 diskw temp listcat  a '
'browse temp listcat a'               /* Let's see what our VSAM    */
exit                                  /* space looks like.          */
Sinisa Petric
Systems Programmer
Zerc (Yugoslavia)   ) Zerc 1988




























