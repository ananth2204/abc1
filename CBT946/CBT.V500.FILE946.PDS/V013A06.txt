 Consolidated error handler

There are many ways to handle user error messages in a REXX EXEC.  One of the
most common ways I have seen is to put the error message on the same line as the
error checker, resulting in something like this:

     IF RC = 1 THEN DO
                SAY '*** Error: Looks like you blew it.'
                EXIT
                END

This method works for small EXECs, but fails miserably for large EXECs with
extensive error checking.  Error text is scattered all over the program and you
run the risk of having to code duplicate messages.

The second most common method is to put error messages into a procedure.

     IF RC = 1 THEN CALL BLEWIT
                 *
                 *
                 *
BLEWIT:
   SAY '*** Error: Looks like you blew it.'
   EXIT

This solves the problem of duplicate messages and it does consolidate the error
text (somewhat), but it is overkill. This is the way you would handle errors in
EXEC or EXEC2.  Now that we have REXX, the power is there to be more subtle.  We
can code a single error handler that looks like this:

     IF RC = 0 THEN CALL ERROR 3
                 *
                 *
                 *
ERROR:
ARG ERR
SELECT
   WHEN ERR = 1 THEN SAY 'Text of error message 1'
   WHEN ERR = 2 THEN SAY 'Text is error message 2'
   WHEN ERR = 3 THEN SAY '*** Error: Looks like you blew it.'
                    *
                    *
                    *
   OTHERWISE SAY 'Error message not found'
   END
EXIT
RETURN

Here, the error number is passed to a procedure which then displays the
corresponding message.


Steve Melnyk
Ninety Commerce Road Inc (USA)     ) Ninety Commerce Road Inc 1987












