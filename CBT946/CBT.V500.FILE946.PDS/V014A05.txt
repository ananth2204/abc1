 Programmers' messages sent to CMS

During the test run of a (new) program it might be nice to receive a message
from the program at a CMS user-id without exiting the program first to look at
the SYSLST output, or disturbing the operator with all sorts of displays.

The program is meant to be called from a COBOL program, but could be called from
others.

In COBOL the definition of two fields is required in working-storage.  The first
field, which identifies the receiving CMS user, is 8 bytes, the second will hold
the message to be sent and is 60 bytes long.  In the procedure division the two
fields have to be filled and passed to the CMSMSG module via the CALL 'CMSMSG'
USING CMS-USERID CMS-MESS statement.


CMSMSG ASSEMBLE

JAAP     TITLE 'SEND A MESSAGE FROM A BATCH PROG TO A CMSUSER'
CMSMSG   CSECT ,
         USING *,R11                   BASE REGISTER 11
         SAVE  (14,12)
STARTM   LM    R3,R4,0(R1)             R3=CMSUSER , R4=TEXT
         EJECT
         LR    R11,R15
         ST    R13,SAVEAREA+4
         LA    R13,SAVEAREA
         B     BEGINN
IDENTIFY DC    CL08'CMSMSG  '
         DC    CL08' 1.0 '
         SPACE 3
BEGINN   NOP   AFDRUK
         MVI   BEGINN+1,X'F0'          MAKE SURE THIS IS ACCESSED ONCE
         COMRG REG=R8
         EXTRACT ID=BDY,               PART.LIMITS                     C
               LEN=MBDYLEN,
               AREA=MAPBDY
         L     R7,PBEGIN               LOAD PART.START.ADR IN REG-7
         MVC   KOP1+54(2),79(R8)       )
         MVI   KOP1+56,C'-'            )
         MVC   KOP1+57(2),81(R8)       ) THE ACTUAL DATE
         MVI   KOP1+59,C'-'            )
         MVC   KOP1+60(2),83(R8)       )
         MVC   KOP1+75(3),85(R8)       DAYNR
         MVC   KOP1+96(8),24(R8)       JOBNAME
         MVC   KOP1+1(8),0(R7)         PHASENAME
         OPEN  IJSYSLS
         MVC   MESS(121),KOP1
         PUT   IJSYSLS                 HEADING 1 TO SYSLST
         MVC   MESS(121),KOP2
         PUT   IJSYSLS                 HEADING 2 TO SYSLST
         SPACE 3
AFDRUK   EQU   *
*          **    FOR THE DETAIL PRINTLINES     **
         MVC   DETREG+5(8),0(R3)       CMS USER-ID
         MVC   DETREG+17(60),0(R4)     THE ACTUAL MESSAGE
*          **   FOR THE MESS. TO BE SENT       **
         MVC   CMSTXT+4(8),0(R3)
         MVC   CMSTXT+13(60),0(R4)
*          **  EXECUTE THE CP MSG CMD          **
         LA    R1,BDIAG8               NAME OF THE TRANSIENT
         LA    R0,CPCMD                AND THE CP COMMAND
         SVC   2                       FINALLY
*          **  THE PRINT COMMAND                **
         MVC   MESS(121),DETREG
         PUT   IJSYSLS
          B     EXIT                    RETURN TO MAIN PROG
         SPACE 3
EXIT     DS    0D
         L     R13,SAVEAREA+4
         RETURN (14,12)
         SPACE 1
         MAPBDY DSECT=NO
CMSTXT   DC    CL80'MSG XXXXXXXX     '
LGHTCMD  EQU   *-CMSTXT
BDIAG8   DC    C'$$BDIAG8'
CPCMD    DC    A(CMSTXT)
         DC    A(LGHTCMD)
ADRFIELD DS    F
         LTORG
SAVEAREA DS    9D
         EJECT
IJSYSLS  DTFDI DEVADDR=SYSLST,                                         C
               IOAREA1=MESS,                                           C
               RECSIZE=121
MESS     DC    CL121' '
KOP1     DC    CL40'1PHASENM           CMSMSG MODULE VERSLAG'
         DC    CL40'      DATE  : XX.XX.XX     DAYNR : XXX  '
         DC    CL41'      JOBNAME : XXXXXXXX'
KOP2     DC    CL40'     CMS-USER    MESSAGE SENT :         '
         DC    CL40' '
         DC    CL41' '
DETREG   DC    CL40'0    XXXXXXXX    XXXXXXXXXXXXXXXXXXX    '
         DC    CL40' '
         DC    CL41' '
$$BDIAG8 ASSEMBLE

$$BDIAG8 CSECT
         DC    CL8'$$BDIAG8'
BEGIN    BALR  15,0               LOAD BASE REGISTER
         USING *,15
         LR    8,0                SAVE PARAMETER LIST ADDRESS
         MVC   CMDAREA,BLANK      CLEAR THE COMMAND AREA
         LM    5,6,0(8)           PUT THE COMMAND ADDRESS INTO REG 5
*                                 AND THE COMMAND LENGTH INTO REG 6
         EX    6,MOVE             MOVE THE COMMAND TO THE COMMAND AREA
         LA    5,CMDAREA          GET THE COMMAND AREA ADDRESS
         SR    0,0                SET SYSTEM MASK TO DISABLE I/O AND
*                                 EXTERNAL INTERRUPTS
         SVC   22                 SEIZES THE SYSTEM AND DISABLES THE
*                                 TASK SELECTION MECHANISM
         MVC   NEWPSW,X'68'       SAVE THE PROGRAM NEW PSW
         LA    7,DIAG81           LOAD THE 'SAVE OLD PROGRAM PSW' INSTR
*                                 ADDRESS INTO REG 7
         STCM  7,B'0111',X'6D'    PUT THIS ADDRESS IN THE NEXT INSTRUC-
*                                -TION ADDRESS AREA OF THE PROG NEW PSW
         DC    H'0'               FORCE A PROGRAM CHECK IN ORDER TO BE
*                                 IN SUPERVISOR STATE. CONTROL IS
*                                 GIVEN TO THE NEXT INSTRUCTION.
DIAG81   MVC   OLDPSW,X'28'       SAVE THE PROGRAM OLD PSW
         MVC   X'68'(8),NEWPSW    RESTORE THE PROGRAM NEW PSW
         DC    X'83',X'56',XL2'0008'    DIAGNOSE 08
*                                 REG 5 MUST POINT TO THE CHARACTER
*                                 STRING THAT CONTAINS THE CP COMMAND
*                                 REG 6 -THE LOWER-ORDER THREE BYTES-
*                                 MUST CONTAIN THE LENGTH OF THE COMMAND
         LA    7,DIAG82           INITIALIZE THE NEXT INSTR. ADDRESS
         STCM  7,B'0111',OLDPSW+5   AREA OF THE PROGRAM OLD PSW
         LPSW  OLDPSW           LOAD THE OLD PROGRAM PSW AS CURRENT PSW
DIAG82   LA    0,X'FF'            SET SYSTEM MASK TO ENABLE I/O AND
*                                 EXTERNAL INTERRUPTS
         SVC   22                 RELEASES THE SYSTEM AND REENABLES THE
 *                                 TASK SELECTION MECHANISM
         SVC   11                 EXIT FROM TRANSIENT ROUTINE
MOVE     MVC   CMDAREA(0),0(5)
BLANK    DC    C' '               PADDING CHARACTER
CMDAREA  DC    CL80' '            COMMAND AREA
OLDPSW   DC    D'0'               PROGRAM OLD PSW SAVE AREA
NEWPSW   DC    D'0'               PROGRAM NEW PSW SAVE AREA
         END   $$BDIAG8


Jaap van Driel
Systems Programmer
HVS van 1808 (Holland)   ) Xephon 1987





















































