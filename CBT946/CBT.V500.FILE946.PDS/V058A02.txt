Displaying system usage under VM/SP

The SYSIND EXEC described here displays standard
information obtained from the INDicate command.  The design
of the output is of interest.  The XEDIT macro IND000 is used
to display the information.  Only the changed parameters are
displayed, not the whole screen as is the case when using
VMFCLEAR.  So it is much easier to observe what has been
changed.  Two more EXECs, PERFORM and PERFORMI, are
also called from the panel, SYSIND.  They compare the
elapsed time for CPU-like operations and for I/O operations.
You can use your own EXECs.  If you use the ones supplied,
you have to scale (gauge) the equations in which two instances
are compared (the current one and one in an ideal environment
- during the weekend or night).  The supplied parameters were
measured in our system (IBM 3090 64MB).  Information is
refreshed with the ENTER PF key.  If you have problems with
storage (because of GLOBAL variables) simply enter EXIT
PFkey, and resubmit.  SYSIND also displays spool usage, by
using the method previously proposed in VM Update (George
Perkins, February 1989).  You can change the setting of the PF
keys.

The INDALL EXEC displays information for all the users in
your system obtained by the INDicate command.  It is also a
fullscreen panel; the output can be refreshed and scrolled
forward or backward with the help of PF keys (ENTER
refreshes the information for the whole system).  INDALL uses
the XEDIT macro SYS88.  If you scroll the screen output too
far forward, you can return by using the scroll backward PF
key.  (The same applies if you scroll too far backwards.)
INDALL user should have the class C or E (in the VM
directory).

In order to improve the performance you can install the DCSS
CMSINST containing all these EXECs and macros (see the
installation manual for VM/SP).  Examples of INDALL and
SYSIND panels are shown in Figures 1 and 2.


SYSIND EXEC

/*    */
b22:;desbuf;
'EXECIO * CP ( MARGINS 1 72 BUFFER 200 STRING IND '
PARSE UPPER PULL TEST1
PARSE UPPER PULL TEST2
INPUT='**************************************************'
CPU = SUBSTR(TEST1,9,3)
CPU=STRIP(CPU,'L','0')
CPU2=(CPU/2)
CPU2=TRUNC(CPU2)
CPUU = SUBSTR(INPUT,1,CPU2)
STOR = SUBSTR(TEST1,51,3)
STOR=STRIP(STOR,'L','0')
IF STOR = ' ' THEN SIGNAL STOR1;
STOR2=STOR/2
STOR2=TRUNC(STOR2)
STORR = SUBSTR(INPUT,1,STOR2)
SIGNAL PAG1;
STOR1:
STORR = ' '
PAG1:
PAG = SUBSTR(TEST2,8,4)
PAG =STRIP(PAG,'L','0')
IF PAG = ' ' THEN SIGNAL PAG2;
PAG2=PAG/2
PAG2=TRUNC(PAG2)
PAGG = SUBSTR(INPUT,1,PAG2)
SIGNAL PAG3
PAG2:
PAGG = ' '
PAG3:
STEAL = SUBSTR(TEST2,24,3)
STEAL =STRIP(STEAL,'L','0')
IF STEAL = ' ' THEN SIGNAL STEAL1;
STEAL2=STEAL/2
STEAL2=TRUNC(STEAL2)
STEALL = SUBSTR(INPUT,1,STEAL2)
SIGNAL STEAL2
STEAL1:
STEALL = ' '
STEAL2:
   DMKPGTTU = '028DB0'
'EXECIO *  CP (STRING DCP '||DMKPGTTU||'.C'
IF RC = 0 THEN SIGNAL D00
SPOOLPER = 'NONAUTHORIZED'
SIGNAL NEXT;
D00:
   DO WHILE QUEUED() > 0
       PULL . SPOOLUSE SPOOLMAX SPOOL90
   END
   SPOOLUSE = X2C(SPOOLUSE)
   SPOOLMAX = X2C(SPOOLMAX)
   SPOOLUSE = C2D(SPOOLUSE)
   SPOOLMAX = C2D(SPOOLMAX)
   SPOOLPER = TRUNC((SPOOLUSE / SPOOLMAX) * 100)
SPOOL0 = SPOOLPER/2
SPOOL0=TRUNC(SPOOL0)
   SPOOLPE1 = SUBSTR(INPUT,1,SPOOL0)
NUMERIC DIGITS 9
NEXT:
GLOBALV SET IND0001 CPUU
GLOBALV SET IND0002 STORR
GLOBALV SET IND0003 PAGG
GLOBALV SET IND0004 STEALL
GLOBALV SET IND0005 SPOOLPE1
'X XCIF XCFG5555 (PROFILE   IND000 '
  n2 =' IND000';n2=STRIP(n2);'set fullscreen on';
j=0;test = 'no';test01 = 'IND000';
do queued()
parse pull tag zeile spalte text
  if tag = 'PFK' then do;kn=word(zeile,1);
if kn=13 then do;rdrlist;signal b22;end
if kn=14 then do;'performi';signal b22;end
if kn=17 then do;'indall ';signal b22;end
if kn=18 then do;set fullscreen off;signal b22;end
if kn=19 then do;'perform';signal b22;end
if kn=22 then do;set fullscreen on;signal b22;end
if kn=21 then do;'indall'         ;signal b22;end
if kn=19 then do;'cp ind q';signal b22;end
if kn=15 then do;'MS * CINDY JOB';exit
end;signal pfkeys
end
etk000:  if tag = 'ETK' then iterate
  el.zeile = text
if zeile = 21 then test = 'yes'
j=j+1
end;n3='MSG * DONE';
if j=1 then
do
if test = 'yes' then do
makebuf
el.21;
dropbuf
                      signal b22;end
                             'EXEC SYSIND';END;
/*    */
                             'EXEC SYSIND';
EXIT
pfkeys:
if kn=1 then do;help;signal b22;end
if kn=2 then do;'filel * * b';signal b22;end
if kn=3 then do;'filel * * c';signal b22;end
if kn=5 then do;'filel * * d';signal b22;end
if kn=6 then do;'filel * * e';signal b22;end
if kn=7 then do;'cp ind pag ';signal b22;end
if kn=8 then do;'cp ind i/o ';signal b22;end
if kn=9 then do;'cp ind q';signal b22;end
if kn=10 then do;'filel * *  i';signal b22;end
SIGNAL etk000;


IND000 MACRO

/*       XEDIT MACRO FOR MASK GENERATOR CINDY                */
'SET TOFEOF OFF'
'SET SCALE  OFF'
'SET PREFIX OFF'
'SET MSGLINE ON -1'
'SET CMDLINE OFF'
'SET RESERVED 1 NOHIGH'
'SET RESERVED 2 NOHIGH'
'SET CTLCHAR  % PROTECT HIGH'
'SET CTLCHAR  : PROTECT NOHIGH'
'SET CTLCHAR  $ NOPROTECT HIGH'
'SET CTLCHAR  * NOPROTECT NOHIGH'
'SET CTLCHAR  ? NOPROTECT INVISIBL'
'SET CTLCHAR  " ESCAPE'
input0='---10---20---30---40---50---60---70---80---90--100'
ph = '"%'
pr = '""'
pn = '":'
nh = '"$'
nn = '"*'
ni = '"?'
GLOBALV SELECT PERF001
GLOBALV GET PERF001
GLOBALV GET PERF002
GLOBALV SELECT IND0001
GLOBALV GET IND0001 IND0002 IND0003 IND0004 IND0005
z.2     = ph'          SYSTEM PERFORMANCE PARAMETERS            '
z.4      = pn'CPU         % 'ph IND0001
z.5      = pn'STORAGE     % 'ph IND0002
z.6      = pn'PAGING/sec    'ph IND0003
z.7      = pn'STEAL       % 'ph IND0004
z.8      = pn'spool       % 'ph IND0005
z.9      = pn'              'pn input0
z.12     = pn'CPU response  ===>'ph PERF001
z.13     = pn'I/O resp      ===>'ph PERF002
z.20   = pn'CP or CMS command-------------------------------------'
z.21   = ph'COMMAND==>'nn'                                             '
z.22   = ph' 7= 'pn'pagqueue 'ph'8 ='pn'I/O queue'
                                   ph'9 = 'pn'queues'ph'19='pn'response'
z.23   = ph'13'pn'=rdrlist'ph'14'
                          pn'=I/O resp'ph'15'pn'=exit'ph'17'pn'=indall '
z.3      = pn'              'pn input0
z.17   = ph'                                  '
z.18   = ph'                                   '
'EXTRACT /LSCREEN'
do zeile = 1 to lscreen.1
  if symbol('z.zeile') = 'VAR' then,
    'SET RESERVED' zeile 'NOHIGH' z.zeile
end
'CURSOR SCREEN 21 13'
'READ ALL TAG'
'QQUIT'
'SET CMDLINE ON'


INDALL EXEC

/*    */
'SET EMSG ON'
b22:;desbuf;
RES0='0000'
READ0='000000'
WRIT0='000000'
SI00='000000'
MIN0='000'
SEC0='00'
PRI0='00'
PAGE = 'D'
KOMA=':'
NUMER = '1'
'ERASE PERF9999 DATA A'
'EXECIO * CP ( MARGINS 1 72 BUFFER 4000 STRING Q N '
PARSEN:
DO WHILE QUEUED() > 0
'EXECIO 1 DISKW PERF9999 DATA A '
END
'FINIS PERF9999 DATA A'
READ:
NUMER0 = '1'
NUMER3 = '1'
SIGNAL NULL1
readnext:
NUMER3 = NUMER3 + 1
signal null1
back:
NUMER3 = NUMER3 - 1
:NULL1
'EXECIO * DISKR PERF9999 DATA A 'NUMER3'( STEM TEST999'
VTAM1 = SUBSTR(TEST9991,1,8)
VTAM2 = SUBSTR(TEST9991,17,8)
VTAM3 = SUBSTR(TEST9991,33,8)
VTAM4 = SUBSTR(TEST9991,49,8)
if substr(vtam1,1,3) ='VSM' then signal b22;
'EXECIO * CP ( MARGINS 1 72 BUFFER 200 STRING IND USER ' VTAM1
PARSE UPPER PULL TEST1
HAI1= SUBSTR(TEST1,1,1);IF COMPARE(HAI1,PAGE) = 0  THEN SIGNAL NEXT
PARSE UPPER PULL TEST2
'EXECIO * CP ( MARGINS 1 72 BUFFER 200 STRING Q PRIOR ' VTAM1
PARSE UPPER PULL TEST3
NEXT:
NUMER0 = NUMER0 + 1
'EXECIO * CP ( MARGINS 1 72 BUFFER 200 STRING IND USER ' VTAM2
PARSE UPPER PULL TEST11
HAI2= SUBSTR(TEST11,1,1);IF COMPARE(HAI2,PAGE)= 0  THEN SIGNAL NEXT1
PARSE UPPER PULL TEST21
'EXECIO * CP (MARGINS 1 72 BUFFER 200 STRING Q PRIOR ' VTAM2
PARSE UPPER PULL TEST31
NEXT1:
NUMER0 = NUMER0 + 1
'EXECIO * CP ( MARGINS 1 72 BUFFER 200 STRING IND USER ' VTAM3
PARSE UPPER PULL TEST12
HAI3= SUBSTR(TEST12,1,1);IF COMPARE(HAI3,PAGE)= 0  THEN SIGNAL NEXT2
PARSE UPPER PULL TEST22
'EXECIO * CP ( MARGINS 1 72 BUFFER 200 STRING Q PRIOR ' VTAM3
PARSE UPPER PULL TEST32
NEXT2:
NUMER0 = NUMER0 + 1
'EXECIO * CP ( MARGINS 1 72 BUFFER 200 STRING IND USER ' VTAM4
PARSE UPPER PULL TEST13
HAI4= SUBSTR(TEST13,1,1);IF COMPARE(HAI4,PAGE)= 0  THEN SIGNAL NEXT3
PARSE UPPER PULL TEST23
'EXECIO * CP ( MARGINS 1 72 BUFFER 200 STRING Q PRIOR ' VTAM4
PARSE UPPER PULL TEST33
NEXT3:
SIGNAL NEXT0000
NEXT0000:
RES = SUBSTR(TEST1,12,4)
READ = SUBSTR(TEST1,31,6)
WRIT = SUBSTR(TEST1,45,6)
SIO = SUBSTR(TEST2,31,6)
PRI = SUBSTR(TEST3,21,2)
MIN = SUBSTR(TEST2,7,3)
SEC = SUBSTR(TEST2,11,2)
GLOBALV SELECT TIMES
GLOBALV SET TIMEL TIME(LONG)
GLOBALV SET TIMEE TIME(ELAPSED)
GLOBALV SELECT DATUM
GLOBALV SET DATUM DATE(EUROPEAN)
GLOBALV SELECT USER001
GLOBALV SET USER001 VTAM1
IF HAI1  = 'D' THEN VTAM1 = 'X'
IF VTAM1 = 'X' THEN SIGNAL NULL
GLOBALV SELECT INDU001
GLOBALV SET IND0001 RES
GLOBALV SET IND0002 READ
GLOBALV SET IND0003 WRIT
GLOBALV SET IND0004 SIO
GLOBALV SET IND0005 PRI
GLOBALV SET IND0006 MIN""KOMA""SEC
SIGNAL NNULL
NULL:
GLOBALV SET IND0001 RES0
GLOBALV SET IND0002 READ0
GLOBALV SET IND0003 WRIT0
GLOBALV SET IND0004 SIO0
GLOBALV SET IND0005 PRI0
GLOBALV SET IND0006 MIN0""KOMA""SEC0
NNULL:
RES = SUBSTR(TEST11,12,4)
READ = SUBSTR(TEST11,31,6)
WRIT = SUBSTR(TEST11,45,6)
SIO = SUBSTR(TEST21,31,6)
PRI = SUBSTR(TEST31,21,2)
MIN = SUBSTR(TEST21,7,3)
SEC = SUBSTR(TEST21,11,2)
GLOBALV SELECT USER001
GLOBALV SET USER002 VTAM2
GLOBALV SELECT INDU002
IF HAI2  = 'D' THEN VTAM2 = 'X'
IF VTAM2 = 'X' THEN SIGNAL NULL1
GLOBALV SET IND0011 RES
GLOBALV SET IND0012 READ
GLOBALV SET IND0013 WRIT
GLOBALV SET IND0014 SIO
GLOBALV SET IND0015 PRI
GLOBALV SET IND0016 MIN""KOMA""SEC
SIGNAL NNULL1
NULL1:
GLOBALV SET IND0011 RES0
GLOBALV SET IND0012 READ0
GLOBALV SET IND0013 WRIT0
GLOBALV SET IND0014 SIO0
GLOBALV SET IND0015 PRI0
GLOBALV SET IND0016 MIN0""KOMA""SEC0
NNULL1:
RES = SUBSTR(TEST12,12,4)
READ = SUBSTR(TEST12,31,6)
WRIT = SUBSTR(TEST12,45,6)
SIO = SUBSTR(TEST22,31,6)
PRI = SUBSTR(TEST32,21,2)
MIN = SUBSTR(TEST22,7,3)
SEC = SUBSTR(TEST22,11,2)
GLOBALV SELECT USER001
GLOBALV SET USER003 VTAM3
GLOBALV SELECT INDU003
IF HAI3  = 'D' THEN VTAM3 = 'X'
IF VTAM3 = 'X' THEN SIGNAL NULL2
GLOBALV SET IND0021 RES
GLOBALV SET IND0022 READ
GLOBALV SET IND0023 WRIT
GLOBALV SET IND0024 SIO
GLOBALV SET IND0025 PRI
GLOBALV SET IND0026 MIN""KOMA""SEC
SIGNAL NNULL2
NULL2:
GLOBALV SET IND0021 RES0
GLOBALV SET IND0022 READ0
GLOBALV SET IND0023 WRIT0
GLOBALV SET IND0024 SIO0
GLOBALV SET IND0025 PRI0
GLOBALV SET IND0026 MIN0""KOMA""SEC0
NNULL2:
RES = SUBSTR(TEST13,12,4)
READ = SUBSTR(TEST13,31,6)
WRIT = SUBSTR(TEST13,45,6)
SIO = SUBSTR(TEST23,31,6)
PRI = SUBSTR(TEST33,21,2)
MIN = SUBSTR(TEST23,7,3)
SEC = SUBSTR(TEST23,11,2)
GLOBALV SELECT USER001
GLOBALV SET USER004 VTAM4
GLOBALV SELECT INDU004
IF HAI4  = 'D' THEN VTAM4 = 'X'
IN VTAM4 = 'X' THEN SIGNAL NULL3
GLOBALV SET IND0031 RES
GLOBALV SET IND0032 READ
GLOBALV SET IND0033 WRIT
GLOBALV SET IND0034 SIO
GLOBALV SET IND0035 PRI
GLOBALV SET IND0036 MIN""KOMA""SEC
SIGNAL NNULL3
NULL3:
GLOBALV SET IND0031 RES0
GLOBALV SET IND0032 READ0
GLOBALV SET IND0033 WRIT0
GLOBALV SET IND0034 SIO0
GLOBALV SET IND0035 PRI0
GLOBALV SET IND0036 MIN0""KOMA""SEC0
NNULL3:
'X XCIF XCFG5555 (PROFILE   SYS88'
 'SET FULLSCREEN ON';
J=0;TEST = 'NO';
do queued()
parse pull tag zeile spalte text
  if tag = 'PFK' then do;kn=word(zeile,1);
if kn=13 then do;rdrlist;signal b22;end
if kn=14 then do;filel;signal b22;end
if kn=17 then do;signal null1;signal b22;end
if kn=18 then do;set fullscreen off;signal b22;end
if kn=22 then do;set fullscreen on;signal b22;end
if kn=20 then do;signal back;end
if kn=19 then do;signal readnext;end
if kn=15 then do;                ;exit
end;signal pfkeys
end
etk000:  if tag = 'ETK' then iterate
  e1.zeile = text
if zeile = 21 then test = 'yes'
j=j+1
end;n3='MSG * DONE';
if j=1 then
do
if test = 'yes' then do
makebuf
e1.21
dropbuf
                      signal b22;end
GLOBALV PURGE
       'EXEC INDALL';END
/*    */
GLOBALV PURGE
      'EXEC INDALL'
EXIT
pfkeys:
if kn=1 then do;help;signal b22;end
if kn=2 then do;'filel * * b';signal b22;end
if kn=3 then do;'filel * * c';signal b22;end
if kn=5 then do;'filel * * d';signal b22;end
if kn=6 then do;'filel * * e';signal b22;end
if kn=7 then do;'filel * * f';signal b22;end
if kn=8 then do;'filel * * g';signal b22;end
if kn=9 then do;'filel * * h';signal b22;end
if kn=10 then do;'filel * * i';signal b22;end
SIGNAL etk000;


SYS88 MACRO

/*       XEDIT MACRO FOR MASK GENERATOR CINDY                */
'SET TOFEOF OFF'
'SET SCALE  OFF'
'SET PREFIX OFF'
'SET MSGLINE ON -1'
'SET CMDLINE OFF'
'SET RESERVED 1 NOHIGH'
'SET RESERVED 2 NOHIGH'
'SET CTLCHAR  % PROTECT HIGH'
'SET CTLCHAR  : PROTECT NOHIGH'
'SET CTLCHAR  $ NOPROTECT HIGH'
'SET CTLCHAR  * NOPROTECT NOHIGH'
'SET CTLCHAR  ? NOPROTECT INVISIBL'
'SET CTLCHAR  " ESCAPE'
ph = '"%'
pn = '":'
nh = '"$'
nn = '"*'
ni = '"?'
GLOBALV SELECT TIMES
GLOBALV GET TIMEE
GLOBALV GET TIMEL
GLOBALV SELECT DATUM
GLOBALV GET DATUM
GLOBALV SELECT USER001
GLOBALV GET USER001 USER002 USER003 USER004 USER005 USER006
GLOBALV SELECT INDU001
GLOBALV GET IND0001 IND0002 IND0003 IND0004 IND0005 ind0006
GLOBALV SELECT INDU002
GLOBALV GET IND0011 IND0012 IND0013 IND0014 IND0015 ind0016
GLOBALV SELECT INDU003
GLOBALV GET IND0021 IND0022 IND0023 IND0024 IND0025 ind0026
GLOBALV SELECT INDU004
GLOBALV GET IND0031 IND0032 IND0033 IND0034 IND0035 ind0036
GLOBALV SELECT INDU005
GLOBALV GET INT0041 IND0042 IND0043 IND0044 IND0045 ind0046
GLOBALV SELECT INDU006
GLOBALV GET IND0051 IND0052 IND0053 IND0054 IND0055 ind0056
user001a = '        '
USER004A = '        '
USER002A = '        '
USER003A = '        '
user001a = overlay(user001,user001a,1,8,' ')
USER004A = OVERLAY(USER004,USER004A,1,8,' ')
USER002A = OVERLAY(USER002,USER002A,1,8,' ')
USER003A = OVERLAY(USER003,USER003A,1,8,' ')
z.2     = ph'          USER   PERFORMANCE PARAMETERS            '
z.3       = pn' USER       STOR READS  WRITES SIO',
                                          '    PR TIME(min/sec)        '
z.4=pn USER001A ph IND0001  IND0002  IND0003  IND0004  IND0005  ind0006
z.5=pn USER002A ph IND0011  IND0012  IND0013  IND0014  IND0015  ind0016
z.6=pn USER003A ph IND0021  IND0022  IND0023  IND0024  IND0025  ind0026
z.7=pn USER004A ph IND0031  IND0032  IND0033  IND0034  IND0035  ind0036
z.17     = pn'date :'ph  DATUM
z.18     = pn'time :'ph  time1    pn'elapsed'ph timeee
z.20   = pn'CP or CMS command-------------------------------------'
z.21   = ph'COMMAND==>'nn'                                             '
z.22   = ph'17'pn'=refresh'ph'19'pn'=forward 'ph'20'pn'=backward'
z.23   = ph'13'pn'=rdrlist'ph'14'pn'=filelist'ph'15'pn'=exit'
'EXTRACT /LSCREEN'
do zeile = 1 to lscreen.1
  if symbol('z.zeile') = 'VAR' then,
    'SET RESERVED' zeile 'NOHIGH' z.zeile
end
'CURSOR SCREEN 2 21'
'READ ALL TAG'
'QQUIT'
'SET CMDLINE ON'


PERFORM1 EXEC

/*    */
TIME1 = TIME(ELAPSED)
DO I=1 TO 50
FILEDEF OUTMOVE DISK TE346532 DATA001 A
FILEDEF INMOVE  DISK PERF0000 DATA0000 Y
MOVEFILE
ERASE TE346532 DATA001 A
END
TIME2 = TIME(ELAPSED)
TIMEEE = TIME2 -TIME1
GLOBALV SELECT PERF001
GLOBALV SET PERF002 TIMEEE/8.3


PERFORM EXEC

/*    */
TIME1 = TIME(ELAPSED)
DO I=1 TO 2000
K=1+I
END
TIME2 = TIME(ELAPSED)
TIMEEE = TIME2 -TIME1
CT=TIMEEE/0.34
GLOBALV SELECT PERF001
GLOBALV SET PERF001 CT

Andrzej Popielewicz
System Analyst
Danet GmbH  (Germany)

