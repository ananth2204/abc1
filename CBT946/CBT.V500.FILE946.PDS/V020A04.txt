 RSCS management utility (continued)
Last month we published the first part of the code used to aid in the management
of the RSCS virtual machine.  This month we publish the second part of the
article.
         MACRO
&NAME    MOVE  &TO,&FROM,&COUNT
*             RECURSIVE GENERAL PURPOSE MOVE MACRO
         GBLA  &A
         LCLA  &B
&B       SETA  &COUNT
 PN      AIF   (&B LE 256).DO     MOVE LESS THAN 256 BYTES
&NAME    MVC   &TO+&A.(256),&FROM+&A   256 BYTE MOVE
&A       SETA  &A+256
&B       SETA  &B-256
         MOVE  &TO,&FROM,&B    CALL THYSELF ****
         MEXIT
 DO      ANOP
&NAME    MVC   &TO+&A.(&B),&FROM+&A   LESS THAN 256 BYTE MOVE
&A       SETA  0                  SET BACK TO 0 FOR NEXT CALL
         MEND
         MACRO
&NAME    CLEAR &FLD,&LEN
         LCLC  &A
         LCLC  &B
         LCLC  &C
&NAME    MVI   &FLD,X'40'
         AIF   ('&LEN' EQ '').NOLEN
         MVC   &FLD+1(&LEN-1),&FLD
         MEXIT
 NOLEN   ANOP
&A       SETC  'L'''
&B       SETC  '&FLD'
&C       SETC  '-1'
         MVC   &FLD+1(&A&B&C),&FLD
         MEND
         MACRO
&NAME    STUFF &A,&B,&ERROR
         GBLB  &GLOBEK
         AIF   ('&A' EQ '').BAD
         AIF   ('&B' EQ '').BAD
         AIF   ('&ERROR' EQ '').BAD
&NAME    BAL   14,$EDIT
         B     &ERROR
         PACK  &A,&B
         AIF   (&GLOBEK).A
&GLOBEK  SETB  (1)
         B     $EDSKIP
$EDIT    MVN   $EDSAVE+1(1),5(14) *  ****
         MVI   $EDSWIT,C'N' *           *
         LH    15,8(14) *               *
         AH    15,$EDSAVE *             *
         STH   15,*+8 *                 *
         MVZ   $EDIGIT1,0(15) *         *
         CLI   $EDIGIT1,X'40' *         *
         BE    $EDERR *                 *
$EDLOOP  STH   15,*+38 *                *
         STH   15,*+18 *     EDIT       *
         STH   15,*+6 *      FIELDS     *
         CLI   0(15),C'9' *    FOR      *
         BH    $EDERR *       VALID     *
         CLI   0(15),C' ' *   NUMERIC   *
         BNE   $EDPAS *                 *
         MVI   $EDSWIT,C'Y' *   DATA.   *
         B     $EDPASS *                *
$EDPAS   CLI   0(15),C'0' *             *
         BL    $EDERR *      RETURN IF  *
          CLI   $EDSWIT,C'Y' *   BAD,    *
         BE    $EDERR *   RETURN +4     *
$EDPASS  CH    15,8(14) *    IF GOOD.   *
         BE    $EDEXIT *                *
         BCTR  15,0 *                   *
         B     $EDLOOP *                *
$EDIGIT1 DC    CL1' ' *                 *
$EDSAVE  DC    H'0' *                   *
$EDSWIT  DC    C'N' *                   *
$EDEXIT  LA    14,4(14) *               *
$EDERR   BR    14 *                  ****
$EDSKIP  EQU   *
 A       MEXIT
 BAD     MNOTE 9,'PARAMETER MISSING.'
         MEND
         MACRO
         GENRG
*    REGISTER USAGE SECTION EG  R0       EQU   0   ETC
*    TO                         R15      EQU   15
         MEND
         MACRO
&NAME    ZERO  &A
         LCLA  &J
&J       SETA  &J+2
         AIF   ('&A' EQ '').EXIT
&NAME    PACK  &A,=C'0'
 GO      AIF   ('&SYSLIST(&J)' EQ '').DONE
         PACK  &SYSLIST(&J),=C'0'
&J       SETA  &J+1
         AGO   .GO
 EXIT    MNOTE 'ZERO MACRO INVALID'
 DONE    MEXIT
         MEND
RSCSQURY CSECT
         PRINT NOGEN
         FRBEGIN R12            Housekeeping and base reg set up
         USING SFBUF,R9         addressability to rdr list labels
         USING TABSECT,R4       set for program slots labels
* First step will be to determine user and logon port                 * We will
use this information to decide the default Link id
         CALL  WHOIAM,(USERENT),VL Get userid and where he is Logged
* We will issue a CP locate command to verify that the user has the        *
correct class for the rest of this routine.
         MVC   LOCUSER,USERID      Move who we are
         LM    R6,R9,DIAGLOC       Set Registers for Diagnose 8
         DC    X'83',X'68',AL2(X'0008')
         C     R8,=F'1'            Return code 1 not proper class
         BNE   CHKJEFF             No--we will continue
         SR    R15,R15             Clear R15 for a quiet exit
         B     ALLDONE             And pretend we never got here
CHKJEFF  DS    0H
         CLC   USERID(04),=C'JEFF' Is this JEFF or JEFFX
         BNE   CKQOD               No--check for QOD controller
         MVC   DEFLTID,=CL8'FL16    ' Set New default
         B     MVDEFLT             And branch
CKQOD    DS    0H
         CLC   USERID,=CL8'QOD11'  is this internal control
         BNE   MVDEFLT             No--will use domestic as default
         MVC   DEFLTID,=CL8'INTERNTL' Set new default
MVDEFLT  DS    0H
         MVC   P1ID,DEFLTID        Set the default Id in the panel
         CLEAR DISPSEL             Clear the spool id entry
         ZERO  P1SEL
         B     DOPAN1              And go start the process
* Clear the panel entries                                             REFRESH
DS    0H
          ST    R14,RFRSHSV         Save return point
* Check Status Of RSCS and RSCROUT
         CLEAR P1MSG
         CALL  WHOIAM,(CSENT,RSCS),VL
         CALL  WHOIAM,(RTENT,ROUT),VL
* Now we will obtain the RDR list and load the display buffer
         LA    R4,HLDENTRY         Point to holding entry
         XC    RDRENTRY,RDRENTRY   Clear the number of entries
         MVC   ADDRLIST(4),=X'00000388' Move in anchor location RDR
         LA    R7,ADDRLIST         Point to the addresses
         LA    R8,1                Only want one this time
         LA    R9,ADDRCONT         set up the return
         DC    X'83',X'78',X'004'  get some real storage
         L     R6,ADDRCONT         retrieve sfblok pointer
         ST    R6,ADDRLIST         Update the list
         LA    R7,ADDRLIST         Repoint to it
         LA    R8,1                request one from it
         LA    R9,ADDRCONT
         DC    X'83',X'78',X'004'  do it again
LITTLELP DS    0H
         L     R6,ADDRCONT         Did we find a next block
         LTR   R6,R6
         BZ    CHKSRT              No--on to sort and display
         LA    R14,ADDRLIST        repoint to the list
         LA    R15,24              now we will set 24 addresses
BLDLST   DS    0H
         ST    R6,0(R14)           address to list
         LA    R14,4(R14)          advance list pointer
         LA    R6,4(R6)            4 more to the address
         BCT   R15,BLDLST          any more return
         LA    R7,ADDRLIST         point to new list
         LA    R8,24               will ask for 24 full words
         LA    R9,ADDRCONT         addressability to result
         DC    X'83',X'78',X'004'  get the storage
* Decipher what we've got and format it for humans
         LA    R9,ADDRCONT         addressability to result
         TM    SFBFLAG,SFBINUSE    check for in use
         BO    LITTLELP            Yep--forget it
* Check to see if this is RSCS
         CLC   SFBUSER,=CL8'RSCS'  This guy RSCS
         BNE   LITTLELP            No--skip this one
         B     EXTRACT             Yes--go extract entry
* These fields have been relocated here to insure they are in the          *
Page as the Diagnose 4 which uses them                              * fields
associated with finding out about the system spool files     ADDRLIST DS    24F
List of requested real addresses
ADDRCONT DS    24F                 Contents of those locations
* some useful values given meaningful names
SFBINUSE EQU   X'80'               File in use (LIMBO FILE)
* R4 Points to our table
* R9 Points at the retrieved memory contents                          EXTRACT
DS    0H
         MVC   LINKIDP(29),ZERENT  Clear the entry
         L     R15,RECS            get number of records
         CVD   R15,PACKDEC         Convert this to decimal
         ZAP   NUMRECP,PACKDEC     Unpack it
         LH    R15,SPOOLID         Retrieve SPOOL id
         CVD   R15,PACKDEC         Convert to decimal
         ZAP   SPOOLP,PACKDEC      Move it to entry
         MVC   SPLCLSSP,SFBCLAS    Move in File class
         MVC   FILDATE,SFBDATE     Move in Date of creation
         MVC   FILTIME,SFBTIME     Move in time hh:mm
         UNPK  TAGID,SPOOLP        Move spool id to query command
         OI    TAGID+3,X'F0'       Insure unsigned
         LM    R6,R9,DIAGTAG        Set our Registers for CP Diagnose
         DC    X'83',X'68',AL2(X'0008')   Diagnose 8
 * The length of the CP response is in R9. This length also contains 1
* for the linend character X'15'. Back length off by 1 and then check
* for the max linkid length.
         BCTR  R9,0                Drop the linend character
         C     R9,=F'8'            check to max link length
         BNH   MVIT                Not exceeded--continue
         L     R9,=F'8'            set to max
MVIT     DS    0H
         BCTR  R9,0                Less one for execute
         EX    R9,MVTAG            Move it in
         CLC   USERID(3),=C'QOD'   is this QOD controller?
         BNE   KEEPIT              No--we will keep this entry
         CLC   DEFLTID,LINKIDP     Is this his link
         BNE   LITTLELP            No--skip this
* Finished with entry; Advance pointers update counters etc.          KEEPIT
DS    0H
         LA    R4,29(R4)           Increment table pointer
         L     R15,RDRENTRY        get prior count
         LA    R15,1(R15)          add 1
         ST    R15,RDRENTRY        store result
         B     LITTLELP            return to see if finished
MVTAG    MVC   LINKIDP(0),DIAGBUFF Executed instruction
* All done with extract phase; now perform the sort and build the     * display
CHKSRT   DS    0H
         ZERO  P1MXPG,P1CURPG      In case there are no reader files
         L     R10,RDRENTRY        Retrieve the number we have
         LTR   R10,R10             Are there any?
         BZ    RFSHXIT             No--all done exit
         CVD   R10,PACKDEC         Convert to Packed
         DP    PACKDEC,=P'32'      Divide by entries per screen
         CP    PACKDEC+6(2),=P'0'  Is there a remainder
         BNE   SETMXPG             No--We are all set
         AP    PACKDEC(6),=P'1'    Add 1 for part screen
SETMXPG  DS    0H
         ZAP   P1MXPG,PACKDEC(6)   Move this to display
         ZAP   P1CURPG,=P'1'       Set to start at top
         C     R10,=F'1'           Do we need to sort?
         BNH   RFSHXIT             No--skip sort step
* Sort our table by Link ID  & number of records (default rscs order)
              LA    R1,SORTPARM         Point to our parm list
         L     R15,=V(SORTI)       Get entry point for sort
         BALR  R14,R15             And go out to it
         CLC   RETCODE,=F'0'       Clean sort
         BE    RFSHXIT             Yes--Exit this routine
*  Sort Problem
         L     R15,RETCODE         get the return code
         LINEDIT TEXT='Sort Error ....',SUB=(DEC,(15)),DOT=NO
         RDTERM CONSBUFF           Lock screen
RFSHXIT  DS    0H
         L     R14,RFRSHSV         Restore return address
         BR    R14                 And return
* Move entries from hold to the panel display buffer                  BLDDSPLY
DS    0H
         ST    R14,BLDSAVE         Save return link
         MVC   P1ENTRYS(29),ZERENT Clear the slots
         MOVE  P1ENTRYS+29,P1ENTRYS,899
         SR    R10,R10             Reset count register
         L     R1,RDRENTRY         Set r1 for number we have
         LTR   R1,R1               Do we have any??
         BZ    BLDXIT              No--we have nothing to do exit
         ZAP   PACKDEC,P1CURPG     Move current page number
         SP    PACKDEC,=P'1'       Make it zero based
         MP    PACKDEC,=P'32'      Get starting number
         CVB   R15,PACKDEC         Convert to binary
         SR    R1,R15              Subtract start from total
         C     R1,=F'32'           Will left Exceed Display Max
          BNH   CALCOFST            No--continue
         L     R1,=F'32'           Set control for max
CALCOFST DS    0H
         MH    R15,=H'29'          Number * length = offset
         LA    R4,P1ENTRYS         point to start of display
         LA    R9,HLDENTRY(R15)    Point to sorted buffer
MOVIT    DS    0H
         CR    R10,R1              Are we at his MAX??
         BNL   BLDXIT              Yes--quit
         LA    R10,1(R10)          add 1 to panel count
         C     R10,BRKPNT          Are we at the recycle point
         BNE   BLDENT              No--branch
         LA    R4,P1ENTRYS+29      Point to the panel entry second
BLDENT   DS    0H
         MVC   0(29,R4),0(R9)      Move entry from hold
         LA    R4,58(R4)           Point to next panel slot
         LA    R9,29(R9)           Point to next hold
         B     MOVIT               And loop back
BLDXIT   DS    0H
         L     R14,BLDSAVE         Restore return address
         BR    R14                 And return
* Primary panel display                                               DOPAN1
DS    0H
         BAL   R14,REFRESH         Refresh the table
DODSPLY  DS    0H
         BAL   R14,BLDDSPLY        Build the display panel
         CALL  DATIME,(P1DATE,P1TIME),VL Get current date & time
         MVC   FUNC,=C'BASE'       Request base function
         MVC   PANNAME,=CL8'RSCSQURY' move in panel name
         LA    R1,PAN1BUFF         Get address of panel buffer
         ST    R1,BUFFIN           and store this in parm list
         ST    R1,BUFFOUT          ........
DSPPAN1  DS    0H
         BAL   R14,CALLMNGR        And go call the display manager
* If this is a QOD controller make sure Link ID is the default        CHKQOD
DS    0H
         CLC   USERID(3),=C'QOD'   QOD??
         BNE   CKRESP              No--go check out response
         MVC   P1ID,DEFLTID        Set the default Id in the panel
* Now decide what he wants done                                       CKRESP
DS    0H
         CLC   RESPONSE,=C'P03'    Was quit selected
         BE    ALLDONE             Yes--exit program
         CLC   RESPONSE,=C'ENT '   Enter key signals possible keyword
         BE    CHKKEYWD            Go check it out
* Validate and pack up spool id
         RJ    DISPSEL
         STUFF P1SEL,DISPSEL,CHKPF1
CHKPF1   DS    0H
         CLC   RESPONSE,=C'P01'    was flush active selected
         BE    FLUSH               Yes--go do that
         CLC   RESPONSE,=C'P02'    Was purge file selected??
         BE    PURGE               Yes--go do that
         CLC   RESPONSE,=C'P04'    Was the request query active
         BE    QURYA               yes--go do that
         CLC   RESPONSE,=C'P05'    was the request query files
         BE    QURYF               yes--go do that
         CLC   RESPONSE,=C'P06'    was the request query of queues
         BE    QURYQ               yes--go do that
         CLC   RESPONSE,=C'P07'    was the request page back
         BE    BACK                yes--go do that
         CLC   RESPONSE,=C'P08'    was the request page forward
         BE    FORWARD             yes--go do that
         CLC   RESPONSE,=C'P09'    was the request query status
         BE    QURYS               yes--go do that
         CLC   RESPONSE,=C'P10'    was the request drain Link
          BE    DRAIN               yes--go do that
         CLC   RESPONSE,=C'P11'    was the request start Link
         BE    START               yes--go do that
         CLC   RESPONSE,=C'P12'    was the request ORDER Link
         BE    ORDER               yes--go do that
*Selected function was undefined    merely refresh the panel
         B     DOPAN1              return to refresh
* Enter key was used; If no key word just refresh;                    CHKKEYWD
DS    0H
         CLC   DISPSEL,BLANK        Anything entered
         BE    DOPAN1              No--refresh table and redisplay
         CLI   DISPSEL,C'H'        Was it help request
         BE    HELP                Go do the help
         CLI   DISPSEL,C'C'        Was it request for command
         BE    GTCMND              Yes go do that
* Undefined entry; set error display
         MVC   P1MSG,=CL78'Undefined Keyword'
         BAL   R14,CALLMNGR        And go call the display manager
* Clear message area and refresh status
         CLEAR P1MSG               clear it
         CALL  WHOIAM,(CSENT,RSCS),VL
         CALL  WHOIAM,(RTENT,ROUT),VL
         B     CHKQOD              Else refresh and redisplay
* Handle request for previous page                                    BACK
DS    0H
         L     R1,RDRENTRY         Make sure there are some
         LTR   R1,R1
         BZ    DSPPAN1             No--just redisplay
         CP    P1CURPG,=P'1'       Already at top
         BE    DSPPAN1             Yes--just redisplay
         SP    P1CURPG,=P'1'       Decrement page number
         B     DODSPLY             And rebuild display
* Handle request for next page                                        FORWARD
DS    0H
         L     R1,RDRENTRY         Make sure there are some
         LTR   R1,R1
         BZ    DSPPAN1             No--just redisplay
         CP    P1CURPG,P1MXPG      Check current to max
         BNL   DSPPAN1             Already at end just redisplay
         AP    P1CURPG,=P'1'       Forward 1 page
         B     DODSPLY             And go rebuild
* Routine to activate help facility                                   HELP
DS    0H
         CALL  PANHELP,(NUMBER,HELPNAM),VL
         CLEAR DISPSEL
         B     DODSPLY             Rebuild panel with out refresh
* Get the Command From The User                                       GTCMND
DS    0H
         WRTERM 'Enter The Desired Command'
         RDTERM CONSBUFF
         MVC   RSCSMSG,CONSBUFF    Move it to command area
         B     SNDRSCS             And go to message routine
*  Flush command for entered spool ID                                 FLUSH
DS    0H
         CLEAR RSCSMSG             clear our message buffer
         MVC   RSCSID,P1ID         move in the Link Id
         MVC   RSCSCMD,=CL8'FLUSH' Move in action
         UNPK  RSCSSPL,P1SEL       move in the spool id
         OI    RSCSSPL+3,X'F'      ensure unsigned
         B     SNDRSCS             And go to message routine
*  Purge command for entered  spool ID                                 PURGE
DS    0H
         CLEAR RSCSMSG             clear our message buffer
         MVC   RSCSID,P1ID         move in the Link Id
         MVC   RSCSCMD,=CL8'PURGE' Move in action
         UNPK  RSCSSPL,P1SEL      move in the spool id
          OI    RSCSSPL+3,X'F0'     insure unsigned
         B     SNDRSCS             And go to message routine
*  Query Active For Active Link ID                                   *
QURYA    DS    0H
         CLEAR RSCSMSG             clear our message buffer
         MVC   RSCSID,P1ID         move in the Link Id
         MVC   RSCSCMD,=CL8'QUERY' Move in Action
         MVC   RSCSID+9(06),=C'ACTIVE'  Move In request for Active
         CLC   RSCSID,=CL8'ALL'    All Requested
         BNE   SNDRSCS             No--Just do the One
         B     SNDRSCSM            Else go to Multi Request routine
*  Query files  for active link ID                                   *
QURYF    DS    0H
         CLEAR RSCSMSG             clear our message buffer
         MVC   RSCSID,P1ID         move in the link Id
         MVC   RSCSCMD,=CL8'QUERY' Move in action
         MVC   RSCSID+9(06),=C'FILES '  Move in request for active
         B     SNDRSCS             And go to message routine
***********************************************************************

This article will be concluded next month when we shall publish the rest of the
code.

Maurice Smyth
Senior Systems Programmer
Frank Russell Company (USA)

) Frank Russell Company 1988



     OFFSETD  DS    H
     ROWD     DS    H
     COLD     DS    H
              DS    0D
     USERENT  DS    0CL14               Entry for user Id and port
     USERID   DS    CL8                 User executing the program
              DS    CL2
     USERPRT  DS    CL4                 His logon address
     ***********************************************************************
     * BAL Return address save links                                       *
     ***********************************************************************
     TRANSV   DS    F
     CHNGSV   DS    F
     RFRSHSV  DS    F
     BLDSAVE  DS    F
     ***********************************************************************
     *  Holder for default link Id                                         *
     ***********************************************************************
     DEFLTID  DC    CL8'DOMESTIC'
              DS    0D
     PACKDEC  DS    PL8
     P1SEL    DC    PL3'0'
     MAXNUM   DC    F'96'               Max entries we can handle
     *
     BRKPNT   DC    F'17'               entry to start column 2
     BRKPNT2  DC    F'33'               Entry to start column 3
     BLANK    DC    CL80' '
     CONSBUFF DS    CL130               Get console reponsess
     ***********************************************************************
     *    The particulars for the Diagnose instructions                    *
     ***********************************************************************
     DIAGTAG  DS    0D
              DC    A(DIAGMTG)          Address of command stream
              DC    A(DIAGBUFF)         Address for CP return
              DC    X'40'               Indicate return output to us
               DC    AL3(DIAGLTG)        Length of command string
              DC    A(BUFFLN)           Length of our buffer
     *
     DIAGLOC  DS    0D
              DC    A(DIAGMLOC)         Address of command stream
              DC    A(DIAGBUFF)         Address for CP return
              DC    X'40'               Indicate return output to us
              DC    AL3(DIAGLL)         Length of command string
              DC    A(BUFFLN)           Length of our buffer
     *
     DIAGRSC  DS    0D
              DC    A(DIAGMRS)          Address of command stream
              DC    A(DIAGBUFF)         Address for CP return
              DC    X'40'               Indicate return output to us
              DC    AL3(DIAGLR)         Length of command string
              DC    A(BUFFLN)           Length of our buffer
     *
     DIAGSLP  DS    0D
              DC    A(DIAGMSL)          Address of command stream
              DC    A(DIAGBUFF)         Address for CP return
              DC    X'40'               Indicate return output to us
              DC    AL3(DIAGLS)         Length of command string
              DC    A(BUFFLN)           Length of our buffer
     ***********************************************************************
     *       The Diagnose command literals                                 *
     ***********************************************************************
              DS    0D
     DIAGMTG  EQU   *
              DC    C'TAG QUERY FILE '
     TAGID    DC    CL4' '
     DIAGLTG  EQU   *-DIAGMTG
              DS    0D
     DIAGMLOC EQU   *
              DC    C'LOCATE '
     LOCUSER  DC    CL8' '
     DIAGLL   EQU   *-DIAGMLOC
              DS    0D
     DIAGMSL  EQU   *
              DC    C'SLEEP '
     DIAGLS   EQU   *-DIAGMSL
     *
              DS    0D
     DIAGMRS  EQU   *
              DC    C'SMSG RSCS '
     RSCSMSG  DS    0CL80
     RSCSCMD  DS    CL8
              DS    CL1
     RSCSID   DS    CL8
              DS    CL1
     RSCSSPL  DS    CL4
              ORG   RSCSMSG+80
     DIAGLR   EQU   *-DIAGMRS
     ***********************************************************************
     * Link start parameters                                               *
     ***********************************************************************
     TBLCNT   DC    F'12'
     LNKTBL DC    CL8'DOMESTIC'
            DC    C'TYPE DMTRPT LINE 21F PARM P132 L88 VFC NOSEP NOCOMP   '
            DC    CL8'INTERNTL'
            DC    C'TYPE DMTRPT LINE 21E PARM P132 L88 VFC NOSEP NOCOMP   '
            DC    CL8'TFC38 12A'
            DC    C'TYPE DMTRPT LINE 27D PARM P132 L88 VFC NOSEP NOCOMP   '
            DC    CL8'TFC3812B'
            DC    C'TYPE DMTRPT LINE 27E PARM P132 L88 VFC NOSEP NOCOMP   '
            DC    CL8'FL16    '
            DC    C'TYPE DMTRPT LINE 27F PARM P132 L88 VFC NOSEP NOCOMP   '
             DC    CL8'FL08    '
            DC    C'TYPE DMTRPT LINE 29D PARM P132 L88 VFC NOSEP NOCOMP   '
            DC    CL8'WANG3'
            DC    C'TYPE DMTRPT LINE 12D PARM  P132 L88 NOSEP NOCOMP NOOVP'
            DC    CL8'LONDON'
            DC    C'TYPE DMTRPT LINE 12E PARM  P132 L88 NOSEP NOCOMP NOOVP'
            DC    CL8'NEWYORK'
            DC    C'TYPE DMTRPT LINE 12F PARM  P132 L88 NOSEP NOCOMP NOOVP'
            DC    CL8'WANG1'
            DC    C'TYPE DMTRPT LINE 130 PARM  P132 L88 NOSEP NOCOMP NOOVP'
            DC    CL8'TORONTO'
            DC    C'TYPE DMTRPT LINE 131 PARM  P132 L88 NOSEP NOCOMP NOOVP'
            DC    CL8'WANG2'
            DC    C'TYPE DMTRPT LINE 132 PARM  P132 L88 NOSEP NOCOMP NOOVP'
     ***********************************************************************
     * Userids for RSCS And Router virtual machines                        *
     ***********************************************************************
     RSCS     DC    CL8'RSCS'
     ROUT     DC    CL8'RSCROUT'
     ***********************************************************************
     * Definition for display panel                                        *
     ***********************************************************************
     PAN1BUFF DS    0D
     P1CURPG  DC    PL2'0'              Current page
     P1MXPG   DC    PL2'0'              Maximum number of pages
     P1ID     DS    CL8                 Active link ID
     P1DATE   DS    CL8                 Current date
     P1TIME   DS    CL8                 Current time
     P1MSG    DC    CL78' '             Possible error message
              ORG   P1MSG
              DS    CL20
     CSENT    DS    CL14                Status of RSCS virtual machine
              DS    CL3
     RTENT    DS    CL14                Status of Router virtual machine
              ORG   P1MSG+78
     P1ENTRYS DS    32CL29              Max 32 entries per screen
     DISPSEL  DC    CL5' '              selected spool Id or key word
     RDRENTRY DS    F                   Number of retrieved entries
     RETCODE  DS    F                   Return code for sort
     ***********************************************************************
     *  Sort PARM list                                                     *
     ***********************************************************************
     SORTPARM EQU   *
              DC    A(HLDENTRY)         Address of hold table
              DC    A(RDRENTRY)         Number of entries to sort
              DC    A(LENGTH)           Length of entry in bytes
              DC    A(RETCODE)          Return code field
              DC    A(ONE)              Start position
              DC    A(EIGHT)            Length of key
              DC    A(CH)               Character
              DC    A(A)                Ascending
              DC    A(THRTEEN)          Start position
              DC    A(THREE)            Length of key
              DC    A(PD)               Packed decimal
              DC    B'10000000'         Flag last parm
              DC    AL3(A)              Ascending sequence
     ***********************************************************************
     * THE ACTUAL VALUES FOR THE PARMS                                     *
     ***********************************************************************
     LENGTH   DC    F'29'               Length of each table entry
     THRTEEN  DC    F'13'
     EIGHT    DC    F'8'
     FIVE     DC    F'5'                Start position for sort
     FOUR     DC    F'4'                Length of sort field
     THREE    DC    F'3'                Length of sort field
     ONE      DC    F'1'                Length of sort field
      PD       DC    C'PD'               Packed decimal format
     CH       DC    C'CH'               Character format
     A        DC    C'A'                Ascending Sequence
              LTORG
     ***********************************************************************
     * Null entry for use to clear                                         *
     ***********************************************************************
     ZERENT   DS    0CL29
              DC    CL8' '              Link id
              DC    PL3'0'              Spool file Id
              DC    C' '                Spool class
              DC    PL3'0'              Number of records
              DC    CL8' '              FILE DATE MM/DD/yy
              DC    C' '
              DC    CL5' '              FILE TIME HH:MM
     ***********************************************************************
     *        Hold buffer for the entries                                  *
     ***********************************************************************
              DS    0D
     HLDENTRY DS    96CL29
     ***********************************************************************
     *        Buffer for the Diagnose commands                             *
     ***********************************************************************
              DS    0D
     DIAGBUFF DS    CL1024
     BUFFLN   EQU   *-DIAGBUFF
     ***********************************************************************
     *  Program dummy sects                                                *
     ***********************************************************************
     * Labels for a system file block                                      *
     ***********************************************************************
     SFBUF    DSECT
     SFNEXT   DS    F                   next address for in chain
              DS    F                   not used
     SFBUSER  DS    D
     ORIGIN   DS    D
     RECS     DS    F
     RECSIZE  DS    H
     SPOOLID  DS    H
     SFBFLAG  DS    X
     SPTYPE   DS    X
     SFBMISC1 DS    H                       NOT USED
     SFBRECS  DS    F                       NOT USED
     FNAME    DS    CL24
     SFBDATE  DS    D
     SFBTIME  DS    D
     SFBLAST  DS    F                       NOT USED
     COPIES   DS    H
     SFBCLAS  DS    C
     SFBFLAG2 DS    X                       NOT USED
     SFBDIST  DS    CL8
     ***********************************************************************
     *  Labels For Panel Entry                                             *
     ***********************************************************************
     TABSECT  DSECT
     LINKIDP  DS    CL8
     SPOOLP   DS    PL3                 Spool file Id
     SPLCLSSP DS    CL1                 Spool class
     NUMRECP  DS    PL3                 Number of records
     FILDATE  DS    CL8                 FILE DATE MM/DD/yy
              DS    CL1
     FILTIME  DS    CL5                 FILE TIME HH:MM
              END

The CP modification code is as follows:
      ./ I 02630000          $ 2630010 10
                MVI   QFRQST,C'N'    DEFAULT TO NO QUERY FILE
      ./ R 5960000 5960000 $ 5960000 100
      QF01     MVI   QFRQST,C'Y'    REMEMBER THIS IS A QUERY FILE
               BAL   R4,GETFILE     LOCATE THE SPOOL FILE BLOCK
      ./ R 08690000 08711970 $ 8690000 20
      GS03     TM    SFBFLAG,SFBINUSE    FILE CURRENTLY IN USE
               BO    GS02                YES LOOK SOME MORE
               CLI   QFRQST,C'Y'         IS THIS A QUERY FILE
               BER   R4                  YES--LET IT THROUGH
               CLC   SFBUSER(8),VMUSER   DOES THE CALLER OWN THE FILE
               BNE   GS02                NO LOOK SOME MORE
      ./ I 10180000          $ 10180010 10
      QFRQST   DC    C'N'

The subroutine called to query the status of the virtual machines is also
included here.

     WHOIAM   CSECT
              TITLE 'RETURN USERID AND LOGON PORT'
              PRINT NOGEN
              FRBEGIN
     ***********************************************************************
     *  Check if user Id is being supplied                                 *
     ***********************************************************************
              LR    R9,R1               Remember where the Parm list is
              TM    0(R9),$ENDPARM      IS THERE A USER PROVIDED??
              BE    DOME                No--check for this user
              L     R1,4(R9)            Get the address for requested
              MVC   STACKUSR,0(R1)      Move in his ID
              B     DODIAG              And go to query
     ***********************************************************************
     * Issue Diagnose 0 to find Id of callers virtual machine              *
     ***********************************************************************
     DOME     DS    0H
              LA    R4,32               Number of bytes to receive
              LA    R3,VMAREA           point to Diagnose area
              DC    X'83',X'34',AL2(X'0000')  Diagnose 0 for userid
              MVC   STACKUSR,VMUSER     Move Userid to request area
     ***********************************************************************
     *  Now issue Diagnose console function for query user                 *
     *  Output to be returned to us                                        *
     ***********************************************************************
     DODIAG   DS    0H
              LM    R4,R7,DIAGSTF       Set our Regs for CP Diagnose
              DC    X'83',X'46',AL2(X'0008')   Diagnose 8
     ***********************************************************************
     *  We now have the info in the buffer pointed at by R5.               *
     *  R7 contains the length of the response.                            *
     *  The console location or ' DSC' is located at 10(R5)                *
     ***********************************************************************
              SR    R15,R15             Clear return code
              L     R9,0(R9)            Get address of callers buffer
              CLC   0(10,R5),=C'DMKCQQ045E' Is user logged on
              BNE   LOGGEDON            Yes--Go pass back console status
              MVC   0(14,R9),=CL14' '   Clear target area
              MVC   0(8,R9),STACKUSR    Move in requested ID
              MVC   9(5,R9),=C'NOLOG'   Indicate not logged on
              B     RETURN              And return to caller
     LOGGEDON DS    0H
              MVC   0(14,R9),0(R5)      Pass back all this good info
     RETURN   DS    0H
              L     R13,4(R13)          Restore his save area
              RETURN (14,12),RC=(15)    And return to the caller
     ***********************************************************************
     *  Constants and work areas                                           *
     ***********************************************************************
      DIAGSTF  DS    0D
              DC    A(DIAGMSG)          Address of command stream
              DC    A(DIAGBUFF)         Address for CP return
              DC    X'40'               Indicate return output to us
              DC    AL3(DIAGLN)         Length of command string
              DC    A(BUFFLN)           Length of our buffer
     ***********************************************************************
     * Here is the command                                                 *
     ***********************************************************************
              DS    0D
     DIAGMSG  EQU   *
              DC    C'QUERY '
     STACKUSR DC    CL8' '              from Diagnose 0
     DIAGLN   EQU   *-DIAGMSG
     ***********************************************************************
     * here's where it goes                                                *
     ***********************************************************************
              DS    0D
     DIAGBUFF DS    CL256
     BUFFLN   EQU   *-DIAGBUFF
     $ENDPARM EQU   X'80'
     ***********************************************************************
     * Diagnose 0 work area                                                *
     ***********************************************************************
              DS    0D
     VMAREA   DS    2D                  Area for version jazz
     VMUSER   DS    D                   User Id from VM
     VMACCT   DS    D                   Account number
              END
Maurice Smyth
Senior Systems Programmer
Frank Russell Company (USA)   ) Frank Russell Company 1988


































