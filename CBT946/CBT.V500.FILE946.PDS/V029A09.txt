 Temporarily changing library settings
We found a need to be able to temporarily change the library search chain.  To
avoid repeatedly copying the same code, a REXX EXEC called STORELIB was written
to create another EXEC (RESETLIB), which, when obeyed, would restore them to
their previous values, and also delete itself.  We have found no problems in
running the EXEC.  For the same reasons, we also have an EXEC, STOREPFK, to
store the current PF key settings, for later restoration, and also an EXEC,
STORE00D, for a user's virtual punch.
These three EXECs are listed below.

STORELIB EXEC
/******************************************/
/* REXX EXEC to perform the following ... */
/*   create an exec called 'RESETLIB'     */
/*     to enable current libraries        */
/*     to be restored at a later time ... */
/******************************************/
address command
/* The parameter, if supplied, is assumed to be FM for RESETLIB exec */
arg fm rubbish
   if rubbish ¬= '' then
       do
          say 'STORELIB: too many parameters ..'
          exit 24
       end
   if fm = '' then fm = 'A3'
   if length(fm) = 1 then fm = fm'3'
   'MAKEBUF'
/*           Store the libraries as set up now ...                   */
   'Q LIBRARY ( LIFO'
   if rc ¬= 0 then
       do
          wkrc = rc
          say 'STORELIB: failed to query LIBRARY info ..'
          signal lfini
       end
   do i = 1 to 4
       pull libtyp.i '  = ' libs.i
       if libs.i = 'NONE' then libs.i = ''
   end
/*                  now create the RESETLIB exec ...                 */
/*      but first, erase the RESET exec, in case it exists ...       */
/*      (too bad for user - they should have renamed it if needed !! */
   'ERASE RESETLIB EXEC' fm
   if rc ¬= 0 & rc ¬= 28 then
       do
         address cms 'ERASE RESETLIB EXEC' fm /* this gives me errmsg */
       end
   else
       do
          queue '/* exec to reset libraries to what they were. Created',
                     date() 'at' time() '*/'
          queue 'address command'
          do i = 1 to 4
              queue '"GLOBAL' libtyp.i Libs.i'"'
          end
          queue 'exit rc'
          queue ''
          'EXECIO * DISKW RESETLIB EXEC' fm '0 V 130 (FINIS'
       end
   wkrc = rc
lfini:
   'DROPBUF'
   exit wkrc

STOREPFK EXEC
 /******************************************/
/* REXX EXEC to perform the following ... */
/*   create an exec called 'RESETPFK'     */
/*     to enable current libraries        */
/*     to be restored at a later time ... */
/******************************************/
address command
/* The parameter, if supplied, is assumed to be FM for RESETPFK exec */
arg fm rubbish
   if rubbish ¬= '' then
       do
          say 'STOREPFK: too many parameters ..'
          exit 24
       end
   if fm = '' then fm = 'A3'
   if length(fm) = 1 then fm = fm'3'
   'MAKEBUF'
/*          Store the PFkeys as set up now ...                       */
   'EXECIO * CP ( FIFO STRING Q PF'
   if rc ¬= 0 then
       do
          wkrc = rc
          say 'STOREPFK: filed to query PFkeys info ..'
          signal lfini
       end
   do i = 1 to 24
       pull pfkey.i pfval.i
       if pfval.i = 'UNDEFINED ' then pfval.i = ''
   end
/*                 now create the RESETPFK exec ...                  */
/*      but first, erase the RESET exec, in case it exists ...       */
/*     (too bad for user - they should have renamed it if needed !!  */
   'ERASE RESETPFK EXEC' fm
   if rc ¬= 0 & rc ¬= 28 then
       do
         address cms 'ERASE RESETPFK EXEC' fm /* this gives me errmsg */
       end
   else
       do
         queue '/* exec to reset PF keys to what they were. Created' ,
                    date() 'at' time() '*/'
         queue 'address command'
         do i = 1 to 24
             queue '"CP SET' pfkey.i pfval.i'"'
         end
         queue 'exit rc'
         queue ''
         'EXECIO * DISKW RESETPFK EXEC' fm '0 V 130 ( FINIS'
      end
  wkrc = rc
lfini:
   'DROPBUF'
   exit wkrc

STORE00D EXEC
/******************************************/
/* REXX EXEC to perform the following ... */
/*   create an exec called 'RESET00D'     */
/*     to enable current printer setting  */
/*     to be restored at a later time ... */
/******************************************/
address command
/* The parameter, if supplied, is assumed to be FM for RESET00D exec */
arg fm rubbish
   if rubbish ¬= '' then
       do
           say 'STORE00D: too many parameters ..'
          exit 24
       end
   if fm = '' then fm = 'A3'
   if length(fm) = 1 then fm = fm'3'
   'MAKEBUF'
/*                 Store the Virtual punch TAG setting.              */
   'EXECIO * CP ( LIFO STRING TAG QUERY DEV D'
   if rc ¬= 0 then
       do
          wkrc = rc
          say 'STORE00D: failed to query TAG info ..'
          signal lfini
       end
   pull tag
   if tag = 'PUN  00D TAG NOT SET' then
       tag = ''
   else
       pull .
/*         Store the Virtual punch (address 00D) setting.            */
/*    (P.S. assume device always READY .... who wants it otherwise !!*/
   'EXECIO * CP ( LIFO STRING QUERY V D'
   if rc ¬= 0 then
       do
          wkrc = rc
          say 'STORE00D: failed to query V D info ..'
          signal lfini
       end
   pull . toetc
   pull . . cletc 'COPY' copy ready 'FORM' form
   if form ¬= '' then form = 'FORM' form
/*                 now create the RESET00D exec ...                  */
/*      but first, erase the RESET exec, in case it exists ...       */
/*     (too bad for user - they should have renamed it if needed !!  */
   'ERASE RESET00D EXEC' fm
   if rc ¬= 0 & rc ¬= 28 then
       do
         address cms 'ERASE RESET00D EXEC' fm /* this gives me errmsg */
       end
   else
       do
          queue '/* exec to reset punch to what it was. Created'
                    date() 'at' time()
          queue 'trace error'
          queue '"CP SP PUN' toetc cletc 'COPY' copy form'"'
          queue '"CP TAG DEV D' tag'"'
          queue '"CP' ready '00D"'
          queue 'exit rc'
          queue ''
          'EXECIO * DISKW RESET00D EXEC' fm '0 V 130 ( FINIS'
       end
   wkrc = rc
lfini:
   'DROPBUF'
   exit wkrc
L Lorden
Head of Technical Support
Shell NZ Holdings Ltd (New Zealand)     ) Shell NZ Holdings Ltd 1989








