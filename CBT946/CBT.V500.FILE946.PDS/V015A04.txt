 Allowing secondary user authority

I have developed a tool called SECuser.  The module uses a lot of IBM's standard
CP utility modules, eg DMKSCN and DMKQCN, to accomplish such mundane tasks as
parsing a command line and writing a line to the console.  The module is totally
re-entrant and runs in the pageable portion of the CP nucleus.  The module has
been added as a new CP command via the standard method for doing such things,
DMKCFC.

As the module name might imply, it will grant secondary user authority to a
user-id.  Secondary user authority allows the secondary or connected user to act
on behalf of the primary or disconnected user via the CP SEND command.  In
addition, all messages generated for the console of the primary user are routed
to the console of the secondary user with a tag that identifies these messages
as having come from the console of the primary user-id.  Having instant
secondary user authority is a very handy tool; I have used it to debug problems
with disconnected service machines.  I simply autolog the machine with the
autolog command followed immediately by the linend character (# is the standard)
and then the SECuser command.

The standard way to achieve secondary authority for another user is to code the
name of the secondary user on the primary user's CONSOLE card in the VM
directory.  Secondary authority is then granted when the primary user logs on in
disconnect mode after the directory has been changed and put on-line.  If the
directory change is made while the secondary user is logged on in either connect
or disconnect mode, the change will not take place until the primary user logs
off and logs back on again.

The SECuser command gives the secondary user authority for the primary user at
the time the command is issued.  It does this by moving the user-id name of the
user issuing the command into the VMSECUSR field of the primary user's VMBLOK.
The command will also give secondary user authority to a third user if the user
issuing the SECuser command includes the name of another user on the command
line.

The command requires three components:

%    The SECuser Assembler code.
%    Addition of the module name to the CPLOAD EXEC in the pageable section of
the EXEC.
%    A small modification to DMKCFC to allow this command to be added as a CP
command.  I recommend that it be added as a privilege class A command.


*  This mod will add or change the VMSECUSR field of a logged on
*  VMUSER so that a second user can dynamically have
*  authority for a disconnected user.
*
*  SECuser < SENDEE  SENDER | OFF >
*
*  The SENDER is the LOGGED on user who will have authority for the
*  disconnected user or SENDEE.  If the SENDER is omitted then the
*  SENDER defaults to the caller.
*
*  1   Search active VMBLOKS to see if this user is on.  If not,
*      send a message and end.
*
*  2   Use the execute instruction to move the first entered parm
*      into a field called SENDEE.  This will be the user that will
*      be sec'd.
*
*  3   If the second parm is blank then we assume that they,
*      (the caller), want to be the user that has authority for
*      the SENDEE.  We then move into the SENDEE field from the
*      callers VMBLOK, the VMUSER.
*
 *  4   If the "OFF" parm was specified as the second parm then
*      we will move blanks into the SENDER field.
*
*  5   If the second parm is not blank and not "OFF" then this becomes
*      the user-id who will have the authority over the
*      1st user-id entered.
*
*  6   We now move the name of the user (SENDER) into the
*      VMSECUSR field of the SENDEE and establish authority
*      for the SENDER over the SENDEE.
*
*  7   At exit we determine whether or not we want to
*      establish a secuser or turn one off.  We then generate the
*      message appropriate to that situation.
*
*  8   We EXIT the program entirely.
*
*  ERROR MESSAGES:
*
*  USERID MISSING OR INVALID --- SECuser entered with no parm(s).
*
*  xxxxxxx NOT LOGGED on ------- USERID specified not logged on.
*
         EJECT
         EXTRN    DMKSCNFD
         EXTRN    DMKSCNAU
         EXTRN    DMKERMSG
         PRINT    NOGEN
         SPACE
HBOSEC   CSECT
MODID    DC       CL8'HBOSEC'
         USING    PSA,R0
         USING    VMBLOK,R11
         USING    SAVEAREA,R13
*
HBOSEC01 RELOC
*   Establish addressability to our DSECT MSGAREA
         LA       R0,9                     NUMBER OF DWORDS WE NEED
         CALL     DMKFREE                  GET THEM
         LR       R6,R1                    PUT ADDRESS OF FREE INTO R6
         USING    MSGAREA,R6               ESTABLISH ADDRESSABILITY
         MVI      MESSAGE,X'40'            FIRST BLANK
         MVC      MESSAGE+1(71),MESSAGE    PROPAGATE BLANKS
*  Call SCNFD to find first parm, no parm, no soap.
         MVC      SENDER(8),VMUSER         MAKE CALLER DEFAULT SENDER
         CALL     DMKSCNFD                 GET FIRST ARG
         BNZ      NOPARMS                  THEY DIDN'T ENTER ANY PARMS
         STM      R0,R1,SAVER0             SAVE LEN,LOC OF SENDEE
         B        BYPASS1                  BRANCH AROUND EXECUTE CMD
*
EXMOVE1  MVC      SENDEE(0),0(R1)          EXECUTE INSTR
*
BYPASS1  DS       0H
*  Move the 1st parm ( the user to be sec'd ) into a field
*  called "SENDEE"
         LR       R5,R0                    CAN'T USE R0 FOR EXECUTE
         S        R5,=F'1'                 LEN FIELD IS ALWAYS -1
         EX       R5,EXMOVE1               SAVE THE NAME OF THE SENDEE
         CALL     DMKSCNAU                 SEE IF VALID USERID
         BC       6,BADUSER                NO USER OR BAD LENGTH
         ST       R1,SAVER4                SAVE VMBLOK LOC OF SENDEE
         CALL     DMKSCNFD                 GET SECOND ARG
         BZ       BYPASS2                  CALLER SPECIFIED A SECUSER..
*
         EJECT
*  We come to this section if the user didn't specify a user
 *  to have SECUSER authority. In that case we assume that it
*  will be the caller so we move in that userid name from
*  the VMUSER field in the VMBLOK.  Then WE have to get the
*  length of the userid, instead of getting it from SCNFD.
         LA       R3,8                     CALLER DID NOT SPECIFY...
         LA       R1,VMUSER                ...THE SECOND PARM SO...
         LA       R2,VMUSER                ...WE MAKE THE CALLER THE...
                                           ...SECUSER BY DEFAULT...
*
FINDEND  DS       0H
         CLI      0(R2),X'40'              DO WE HAVE A BLANK
         BE       FINDLEN                  YES, AND THE LENGTH TOO..
         LA       R2,1(,R2)                NEXT POSITION
         BCT      R3,FINDEND               IF AT FIRST....
         LA       R0,8                     MAKE IT 8 ANY WAY....
         B        BYPASS2                  THE MOVE HAS BEEN DONE
*
FINDLEN  DS       0H
         SR       R2,R1                    GET THE LENGTH
         LR       R0,R2                    MOVE INTO THE Reg WE WANT
         B        BYPASS2                  CONTINUE PROCESSING
*
EXMOVE2  MVC      SENDER(0),0(R1)          EXECUTE INSTR
*
BYPASS2  DS       0H
*  Was the second parm the word "OFF".  If yes then we want to
*  move all blanks into the SECUSER field.  So we point to a
*  system supplied field called "BLANKS"
         CLC      0(3,R1),=CL3'OFF'        TURN SECUSER OFF ????
         BNE      BYPASS3                  NO
         LA       R0,8                     MAKE IT A LENGTH OF 8
         LA       R1,BLANKS                POINT TO A STRING X'40's
         MVC      SAVER5(3),=CL3'OFF'      LET EM KNOW WE WANT OFF
         EJECT
*
BYPASS3  DS       0H
*  Now we move whoever is going or not going ( blanks ) to be
*  the SECUSER for this user into a field in the user's VMBLOK
*  called "VMSECUSR".
         LR       R5,R0                    CAN'T USE R0 FOR EXECUTE
         S        R5,=F'1'                 LEN FIELD ALWAYS -1 IN SS
         MVC      SENDER(8),BLANKS         BLANK OUT FOR MULT USE
         EX       R5,EXMOVE2               SAVE THE NAME OF THE SENDER
         DROP     R11                      DON'T WANT CALLER ANYMORE
         L        R3,SAVER4                SAVE LOCATION FROM SCNFD
         USING    VMBLOK,R3                ESTABLISH ADDRESSABILITY
         MVC      VMSECUSR(8),SENDER       MAKE THE CHANGE
         USING    VMBLOK,R11
*
EXIT     DS       0H
*  Give a nice farewell message, "USER xxxxxxxx NOW HAS AUTHORITY
*  FOR USER xxxxxxxx".
         CLC      SAVER5(3),=CL3'OFF'      WAS THIS A TURN OFF ????
         BE       OFFMSG                   YES
         LA       R7,MESSAGE               POINT TO THE MESSAGE
         MVI      MESSAGE,X'40'            FIRST BLANK
         MVC      MESSAGE+1(55),MESSAGE    PROPAGATE BLANKS
         MVC      0(5,R7),=CL5'USER '      MOVE IN THE FIRST PART
         LA       R7,5(,R7)                POINT TO NEXT POSITION
         MVC      0(8,R7),SENDER           MOVE IN THE USERID
         AR       R7,R0                    ADD THE LENGTH OF THE SENDER
         MVI      0(R7),X'40'              PUT IN A BLANK
         LA       R7,1(,R7)                PLUS A SPACE
         MVC      0(28,R7),=C'NOW HAS AUTHORITY FOR USER '
         LA       R7,27(,R7)               BUMP UP TO NEXT POSITION
         MVC      0(8,R7),SENDEE           MOVE IN SENDEE FIELD
          LA       R0,56                    LENGTH FOR QCNWT
         LA       R1,MESSAGE               POINTER FOR QCNWT
         B        EXITMSG                  BRANCH AROUND OFF MSG
*
         EJECT
*
OFFMSG   DS       0H
*  Do a special message if we are invoking the "OFF" function.
         LA       R7,MESSAGE               POINT TO THE MESSAGE
         MVI      MESSAGE,X'40'            FIRST BLANK
         MVC      MESSAGE+1(55),MESSAGE    PROPAGATE BLANKS
         MVC      0(37,R7),=CL37'SECUSER HAS BEEN TURNED OFF FOR USER '
         LA       R7,37(,R7)               POINT TO NEXT POSITION
         MVC      0(8,R7),SENDEE           MOVE IN THE USERID
         LA       R0,56                    LENGTH FOR QCNWT
         LA       R1,MESSAGE               POINTER FOR QCNWT
*  Do the console write and then end
*
EXITMSG  DS       0H
         CALL     DMKQCNWT,PARM=NORET      DO THE CONSOLE WRITE
         LA       R0,9                     HOW MUCH FREE TO FRET
         LA       R1,MSGAREA               WHERE IS THE FREE TO FRET
         CALL     DMKFRET                  FRET THE FREE
*  We come here for the quick exit.
*
QUIKOUT  DS       0H
         EXIT                              RETURN
         EJECT
*  Here if the userid is invalid.
*
BADUSER  DS       0H
         LM       R0,R1,SAVER0             RESTORE LEN AND LOC I/P PRMS
         C        R0,=F'9'                 IS THE PARM > 8
         BL       BYPASS4                  NO
         LA       R0,8                     YES, MAKE IT 8 THEN
*
BYPASS4  DS       0H
         LA       R2,RC45                  EMSG CODE
         ICM      R0,14,MODID+3            POINT TO MODID NAME
*  AT THIS POINT R0=LENGTH OF MSG AND R1 POINTS TO DATA FOR MSG
         CALL     DMKERMSG                 PUT OUT THE MESSAGE
*  NOW TO GIVE BACK ALL THE FREE WE REQUESTED
         LA       R0,9                     NUMBER OF DWORDS
         LA       R1,MSGAREA               WHERE THEY ARE
         CALL     DMKFRET                  FREE THEM
         B        QUIKOUT                  BEAT IT
         EJECT
*  Here if no parms entered.
*
NOPARMS  DS       0H
         SR       R0,R0                    DON'T NEED THIS...
         ICM      R0,14,MODID+3            POINT TO MODID
         SR       R1,R1                    ...OR THIS
         LA       R2,RC20                  EMSG CODE
         CALL     DMKERMSG                 PUTOUT THE MESSAGE
         LA       R0,9                     NUMBER OF DWORDS
         LA       R1,MSGAREA               WHERE THEY ARE
         CALL     DMKFRET                  FREE THEM
         B        QUIKOUT                  BEAT IT
         EJECT
         LTORG
*
RC45     EQU      45
RC20     EQU      20
*
MSGAREA  DSECT
 MESSAGE  DS       7D
*
SENDER   DS       D
SENDEE   DS       D
         PSA
         COPY     EQU
         COPY     RBLOKS
         COPY     SAVE
         COPY     VMBLOK
         END

DMKCFC

./ I 14130000          $ 14135000 5000
         COMMD COMMAND=(SECUSER,3),EP=HBOSEC01,CLASS=A


Tom Trainor
Systems Programmer
Home Box Office (USA)    ) Home Box Office 1987














































