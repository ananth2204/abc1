 Superior scan EXEC
In issue 6 of VM Update, the article CMS file scanning contained two EXECs and
one XEDIT macro that would scan CMS files for a data string.  The following EXEC
has several advantages over the EXECs and macros from that issue:
1    There is one EXEC instead of three.
2    It uses the CMS EXECIO command instead of XEDIT.  This makes its execution
time a mere fraction of the time required to locate the argument with XEDIT.
3    This EXEC will allow you to search for more than one argument with one
execution of the EXEC.
/* SEARCH EXEC - Scans CMS files for an argument or arguments. */
     trace o
     parse upper arg fn ft fm rest
edit_args:
     "CLRSCRN"
     if ft = "" then signal start
help:
say "SEARCH will search through all the requested CMS files for a specific"
say "argument(s) and will create a file called "FOUND EXEC" in CMS EXEC"
say "format that contains a list of the files that contain the argument(s)."
say ""
say "  Enter the FN FT <FM> of the files you want searched."
say "  For example:   SEARCH * EXEC A"
say "  Hit ENTER to quit."
     parse upper pull fn ft fm .
     if fn = "" then exit 4
     signal edit_args
start:
     if fm = "" then fm = "A"
     "SET CMSTYPE HT"
     "LISTFILE" fn ft fm " (EXEC"
     "SET CMSTYPE RT"
     "STATEW CMS EXEC A"
     if rc  = 0 then do
        say fn ft fm "not found.  Search halted."
        exit 8
        end
     say ""
     say "Enter the argument(s) you want to search" fn ft fm "for."
     say "Separate each argument with a blank."
     say "Use the underline to indicate an embedded blank in one argument."
     say "No case translation is done.  The search will be conducted for"
     say "characters in the same case they are entered."
     parse pull arguments
     if arguments = "" then do
        say "Search cancelled by user request."
        exit 4
        end
     argument. = ""
     number_of_arguments = 0
     do i = 1 while arguments = ""
        parse var arguments argument.i arguments
/* Translate "_" to " " for the locate.                               */
/* You may use a different character to separate arguments by changing */
/* the "_" in the next line and the help comments above.              */
        argument.i = translate(argument.i," ","_")
        number_of_argument = i
      end
      "SET CMSTYPE HT"
      "ERASE FOUND EXEC A"
      "SET CMSTYPE RT"
/*  Start the search. */
      say ""
      say "SEARCH IN PROGRESS."
      say ""
      "LISTFILE CMS EXEC A (NOHEADER LIFO LABEL"
      parse pull . . . . . number_of_files_to_search .
       do i = 1 to number_of_files_to_search
         "EXECIO 1 DISKR CMS EXEC A" i
         parse pull . . sfn sft sfm
         do j = 1 to number_of_arguments
            "EXECIO * DISKR" sfn sft sfm "(SKIP FINIS LOCATE /"argument.j"/"
            if rc = 0 then do
               say sfn sft sfm "contains '"argument.j"'."
               "COPYFILE CMS EXEC A FOUND EXEC A (FROM" i "FOR 1 APPEND"
            end
         end
      end
      "ERASE CMS EXEC A"
      "STATEW FOUND EXEC A"
      state_rc = rc
      say ""
      if state_rc = 0 then do
        say "FOUND EXEC A lists the files",
                     " that contain the search argument(s)."
        end
       else do
           say "I did not find any argument in any CMS file searched."
           say "I searched" fn ft fm"."
           do i = 1 to number_of_arguments
              say 'I searched for "'argument.i'".'
           end
       end
      say ""
      exit
Vern Maxson
System Administrator
Merchants National Bank (USA)      ) Merchants National Bank 1988



































