 Manuals EXEC
IDEOLOGY AND PRE-REQUISITE FILE
This EXEC enables the user to locate manuals from a list of manuals via a
keyword searching system.  IBM and the like seem incredibly keen to fill up
computer installations with as many manuals as possible (useful or not); we have
a thousand or so.  This makes it difficult, to say the least, to check whether
our installation has a particular manual, especially if it's used infrequently,
as most are.
This EXEC will access a file called MANUALS LIST F, which you will have to
create for your own installation.  This file is simply a list of all your
manuals along with their publication numbers and the department in which they
can be found.  Ideally it should be updated when new manuals arrive or old ones
become obsolete.
Figure 1 is an example of the MANUALS LIST F file.  The first 10 lines contain
the key etc followed by the entries, which are one line for each manual.  You
should ensure it is in upper-case.
I have suggested the 'F' disk but it can go on any disk.  It is a good idea
though to put it on your common disk so that all CMS users can get it in read-
only mode.  For the sake of argument I shall continue calling it MANUALS LIST F
here and within the EXEC.
HOW TO USE THE EXEC
'HELP' option
Once you have a MANUALS LIST F file (whatever the size) you can use the EXEC.
To invoke the EXEC, enter MANUALS; this will present you with a menu containing
HELP, SEARCH, or WHOLE LIST options.  Requesting the HELP option will bring up a
HELP panel which explains how to use the EXEC.  Basically, if you request the
SEARCH option you will be prompted for a search argument.  This can be
absolutely anything at all (up to a maximum length of 80 characters) and all
arguments are treated as upper-case.  Also the '/' character has been allowed
for, so entering VM/XA, for example, is quite acceptable.
The 'SEARCH' and 'WHOLE LIST' options
Let us say that you have replied with VM/XA; after hitting ENTER the EXEC will
look at your MANUALS LIST F for every occurrence of VM/XA.  As it finds them it
will write those records into a new file called MANUALS EXTRACT A.  After a few
seconds you will be told if the search was successful or not; if not, it was
because there were no VM/XAs and you will be returned to the main menu.
If successful, you will be told how many entries it found and then you can
display, save, cross-reference, or quit.  If you display the result you will see
the EXTRACT file with only entries containing VM/XA in them.  Also, all the
entries will now have a blank line between them to aid readability (these blank
lines are NOT present in MANUALS LIST F).  When you have finished looking at the
list you then PF3 out of MANUALS EXTRACT A and you will be confronted with a
second menu allowing you to quit, save the EXTRACT file, or cross-reference the
EXTRACT file.  There is also the option of a second HELP panel dealing
specifically with cross-referencing.
If you wish to save the newly generated MANUALS EXTRACT A file, you will be told
that it will stay on your 'A' disk but that you should rename it, otherwise when
you use the EXEC again it will erase it.  If you forget to rename it and use the
EXEC again you will be warned that it already exists and given the option to
quit or overwrite the existing file.  Incidentally, if you pick the WHOLE LIST
option (mentioned earlier) the EXEC writes the entire list to MANUALS EXTRACT A
whilst giving the same options as the SEARCH option - save, cross-reference etc.
This means that the re-naming conditions just mentioned also apply there.
'CROSS-REFERENCE' option
If your initial SEARCH argument, let us this time say it was CICS, produced a
lot of entries in MANUALS EXTRACT A, you can use the cross-reference option to
whittle it down to a more realistic size.  This option is practically the same
as SEARCH in that it will ask you for a search argument but this time it looks
for this new argument in MANUALS EXTRACT A instead of MANUALS LIST F.  The
result this time is written to a file called MANUALS XREF A.  For example, at
our site, if CICS is entered as the initial search argument, a MANUALS EXTRACT A
with about 120 entries will be produced.  That is not a very manageable size so
these 120 entries can be further cross-referenced.  If we now use REL.7 as our
cross-reference argument we'll get a MANUALS XREF A with only about 20 entries,
which is a lot easier to use.

 This MANUALS XREF A also comes with the option to save it and with the same
renaming conditions already mentioned for the EXTRACT and XREF files.
NOTES
y    The manuals have been listed in MANUALS LIST F in EBCDIC order by
publication number.
y    Because the MANUALS LIST F file is probably a fairly big file it should be
in packed format.  Even if it is a small file it should still be packed because
the EXEC is expecting it to be so.
y    The first 10 lines of MANUALS LIST F have been reserved for the title and
key etc as in the example shown.  Every time a search or cross-reference is
performed these top 10 lines are copied to the top of the newly created files
(be it MANUALS EXTRACT A or MANUALS XREF A).  The REXX routine has been widely
annotated and it is mentioned in the code where the section which deals with
these 10 lines is.  It is up to you to alter the size of this area.
y    This EXEC was designed for the checking and location of manuals but it can,
of course, still be used for anything providing that the data you decide to
'list' is in MANUALS LIST F.
y    Because you can enter anything for a keyword you can, of course, enter the
manual publication number (or part of it) as the keyword to check to see if you
do have that particular manual in your installation.
y    Finally, a note on the use of abbreviations within MANUALS LIST F.  As well
as providing us with thousands of manuals, IBM also really likes making the
manual titles the size of large paragraphs.  It is pretty certain that, when
building your MANUALS LIST F file, you'll need to abbreviate IBM's titles so
that they fit on one line of your file.  A little care, though, must be taken to
ensure that your abbreviations are standardised throughout your file, otherwise
if an abbreviation is used as a keyword, eg CICS, occurrences of CICS will be
found and not any Customer Information Control Systems.  Conversely, if you
entered PROG everything with the string PROG will be found as well as everything
containing PROG, such as PROGRAMMING or SPROG etc.  This also means that some
things can be abbreviated only when they need to be but the keyword used must be
the actual abbreviation to find ALL the relevant records.
Examples of abbreviations I've used as standards are things like CICS, DASD, and
VSAM, as well as REL.n and VERS.n for RELEASE and VERSION where n is the
release/version number.  Others are things like REF  for reference and INFO  for
information etc.
The REXX code for the MANUALS EXEC now follows.
MANUALS EXEC
 /********************************************************************/
 Call THE_WHOLE_EXEC
 Retry = 0
OPTIONS_MENU:
/*                    Main menu set-up                              */
MENU_CONTINUED:
 Vmfclear
 Say "                 ****** MANUAL-LIST SEARCH FACILITY ******"
 Say
 Say; say; say
 Say "              Please enter selection from menu (1, 2, 3 or 4):"
 Say; say; say
 Say      "              1)  QUIT."
 Say; say "              2)  HELP."
 Say; say "              3)  SEARCH (creates 'manuals extract a')."
 Say; say "              4)  WHOLE LIST (creates 'manuals extract a')."
 Say; say
 If retry = 0 then
                  Do
                    Say; say
                  End
  Else
      Do
        Say "Invalid entry - retry with 1, 2, 3 or 4!"; say
      End
 Say
 Pull menu
 If menu = '1'  | menu = '2'  | menu = '3'  | menu = '4' then retry = 0
  Select
      When menu = 1 then signal QUIT_OPTION
      When menu = 2 then signal HELP_OPTION
      When menu = 3 then signal SEARCH_OPTION
      When menu = 4 then signal WHOLE_LIST_OPTION
      Otherwise
               Do
                 Retry = retry + 1
                 Vmfclear
                 Signal MENU_CONTINUED
               End
SEARCH_OPTION:
 /*   This checks to see if there is already a manuals extract      */
 /*   on their 'A' disk; if it is it signals WARNING otherwise it   */
 /*   searches a copy of manuals list 'F' for the entered search    */
 /*   argument. It writes the found entries to manuals extract 'A'  */
 /*   with a blankline between entries.                             */
 'Set cmstype ht'
 Statew manuals extract a
 If rc = 0 then signal WARNING
 'Set cmstype rt'
SEARCH_OPTION_CONTINUE:
 'Set cmstype ht'
 'Erase manuals extract a'
 'Set cmstype rt'
 N = 1                     /* Starting point for no. of recs. found */
 P = 11      /* Staring line no. for found recs. to be written from */
 Vmfclear
 Say "Please enter argument for search ? (Or just hit ENTER to quit)"
 Pull search
 If search = "" then signal OPTIONS_MENU
 Vmfclear
 Say; say "Searching file for """search""" ....... please wait!"
 'Copyfile manuals list f = copy a (unpack'
 Rifle = '(locate |'search'|'
 Blanklne=' '
 /*  The next line writes the 1st 10 lines from the copy of manuals*/
 /*  list 'F' (the key etc.) to the top of manuals extract 'A'.    */
 'Copyfile manuals copy a = extract a (from 1 for 10'
 Do forever
      'Execio * diskr manuals copy a' rifle
       If rc <> 0  then leave
       Pull rubbish
       Pull record
      'Execio 1 diskw manuals extract a' P '( string' record
      'Execio 1 diskw manuals extract a' P + 1 '( string' blanklne
       N = N + 1
       P = P + 2
 End
 If N = 1 then signal NO_MATCHES
 Else signal SEARCH_MATCH
NO_MATCHES:
/*                 If no matching records found                     */
 vmfclear
 Say; say "          ****** SEARCH COMPLETED ******";say
 Say; say; say "**** No entries for """search""" found in file!!! ****"
 Erase manuals copy a ; erase manuals extract a
 Say; say
 Say; say; say; say "        ****** Hit ENTER to exit !! ******"
 Pull ex
 Signal OPTIONS_MENU
SEARCH_MATCH:
/*                  If matching records found                       */
 Say; say; say; say
 Say; say "************ SEARCH COMPLETED ***********"
 Say; say "****** "N-1" matching entries found !! ******"
  Say; say "****** Hit ENTER To display Result  ******"
 Say; say "******       or ""Q"" to quit !     ******"
 Pull rep
 If rep = "Q" then signal SEARCH_SAVE_SECTION
 'X manuals extract a'                     /* Display found manuals */





























































