 Fast SPOOL dump to multiple tapes
The following REXX XEDIT was written to allow VM to dump SPOOL files fast.  It
will dump files to as many tape drives as you give it, and they will all be
spinning all the time.  Files are purged as they are dumped, so this process is
no  good for SPOOL file back-ups.  It is useful when a COLD START must be done
either because of a new revision of VM or because the SYSOWN list has been
changed and VM requires a COLD START.
The first few lines define the maximum number of tape drives which might be
available to the machine where this is running.  The variable 'defined.0'
contains this number.  This is not necessarily the number of tapes which will be
used for the dump, but is the total number of drives connected to the CPU where
this EXEC will execute.  The variables 'defined.1' to 'defined.(count in
defined.0)' list the real addresses of the tape drives available.  The count is
'defined.0' and the addresses in the other 'defined', variables will be used in
the first loop to control which devices are actually to be used.
The loop starting at line 10 (use.0 = 0) checks the status of the tapes listed
above.  If one is found to be in 'FREE' status, the question is asked 'Tape xxx
is FREE, should it be used?'.  If the answer is 'yes', it is added to the array
'use'.  All defined devices are checked in this way.  At the end of this loop,
the list of devices to dump onto is complete.  Then the hard work begins.  First
all SYSTEM HELD (SYSHOLD) files are dumped and purged, then all USER HELD
(USERHOLD) files are dumped and purged.
Then the loop for dumping all non-held files is started.  This loop continuously
checks for any of the devices in the 'use' array to have a status (in response
to the 'Q CUU' command) of 'FREE'.  When one does, then an SPTAPE dump is
started on that device.  The status of the device then changes to 'CP SYSTEM'
until the file it is dumping is complete.  During this time, all other devices
are going through the same test.  There are no 'CP SLEEP' commands in this EXEC,
so the machine executing it will consume lots of CPU time.  I tried to put one
in the inner loop, in the outer loop, anywhere, and all it did was make the dump
unacceptably slow.  As this process will almost certainly be done just before
SHUTDOWN, when all the users are off the system, it does not matter.
Another unusual situation caused by this process executing is that the devices
containing allocations of 'TEMP' will be extremely active.  The more tape drives
used, the more active the devices will be as they are dumping files and purging
files at the same time.  It is not hazardous, but might cause some excitement if
an on-line monitor program sees this activity and reports on it.  But, once
again, due to the timing of this run, no one should care.
If by chance users are still on, their spool file will begin to disappear.  The
EXEC finishes by dumping any other files that have been missed, but it rarely
finds any.
The EXEC may be stopped at any time as it is not actually doing the dumping to
the tapes: CP is.  It can be run over and over to append any files that may come
in later.  It does not rewind the tape.
Note: Be careful about MONITOR spool files.  They can be so large that they will
not fit onto even a 2400-foot 6250-bpi reel of tape and therefore cannot be
dumped at all.  These files are usually class M.  They should probably be purged
before starting this process.
RDRDUMP EXEC
/ Dump the entire RDR spool purging as you go */
defined.0 = 4     /* Define how many tape drives there are REALly  */
defined.1 = 380   /* Define all POSSIBLY available addresses */
defined.2 = 381   /* Define all POSSIBLY available addresses */
defined.3 = 382   /* Define all POSSIBLY available addresses */
defined.4 = 383   /* Define all POSSIBLY available addresses */
use.0 = 0        /* How many drives to use */
do i = 1 to defined.0 /* Look at all tape drives for FREE status */
  'EXECIO 1 CP ( STRING Q 'defined.i
  pull . . tap_status .
  if tap_status = 'FREE' then do
    say 'Tape 'defined.i' is FREE, should it be used for dumping ?'
    pull ans
    if ans = 'Y' then do
      use.0 = use.0 + 1
      j = use.0
      use.j = defined.i
       say 'QQQQQQQQQQQQQQQQQQQQQQQQ'
    end
  end
end
if use.0 > 1 then say 'Using 'use.0' drives.'
if use.0 = 1 then say 'Using 1 drive.'
if use.0 = 0 then do
  say 'Sorry, I must have at least 1 drive on which to operate.'
  exit 24
end
do i = 1 to use.0
  say 'Using 'use.i
end
say 'Dumping all SYSTEM HELD files.'
'CP SPT DUMP 'use.1' RDR ALL MODE 6250 LEAVE SYSHOLD PURGE'
if use.0 > 1 then addr = use.2 /* Spread the files around a bit */
 else addr = use.1
say 'Dumping all USER HELD files.'
'CP SPT DUMP 'addr' RDR ALL MODE 6250 LEAVE USERHOLD PURGE'
'EXECIO 1 CP ( STRING Q F'
pull . rdr_files .
say 'There are 'rdr_files' RDR files in queue.'
do while rdr_files <> NO
  'EXECIO 2 CP ( STRING Q RDR ALL'
  pull stuff
  pull . spl_id
  dumped = 'NO'
  do while dumped = 'NO'
    do i = 1 to use.0      /* Look through all the drives */
      'EXECIO 1 CP ( LIFO STRING Q 'use.1
      pull . . tap_status .
      if tap_status = 'FREE' then do
        'CP SPT DUMP 'use.i 'RDR' spl_id' MODE 6250 LEAVE PURGE'
        dumped = 'YES'
        leave i
      end
    end /* use.0 */
  end /* while dumped = no */
  dumped = 'NO'
  'EXECIO 1 CP ( STRING Q F'
  pull . rdr_files .
end  /* do while rdr_files <> NO */
exit
say 'Dumping all additional files.'
'CP SPT DUMP 'use.1' RDR ALL MODE 6250 REWIND PURGE'
'EXECIO 1 CP ( STRING Q F'
pull . rdr_files .
say 'There are 'rdr_files' files in queue.'
exit 0
Mike Morrow
VM Software Developer and System Programmer
Integral Systems (USA)   ) Integral Systems 1988














