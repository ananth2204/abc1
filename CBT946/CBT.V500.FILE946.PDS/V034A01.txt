Directory maintenance on-line
ÝEditor's note: this article offers an alternative approach to
directory maintenance to the ones that appeared in issue 27 and
issue 30.¨
Our shop needed a way of allowing users to self-maintain his (her)
passwords.  There are some products on the market, such as
IBM's DIRMAINT, but we decided to program a small set of
EXECs and one Assembly language program to do the same,
using the Diagnose X'84' instruction to update-in-place the VM
directory.

The procedure uses a virtual machine running in disconnect mode,
waiting for a user request.  This is accomplished using the
WAKEUP module provided by IBM.  A user can change his log-
on or mini-disk passwords and, for some authorised users, review
the configuration of a VM user.

IMPLEMENTATION
1   You need to define a virtual machine (privilege class B),
where the VM source directory and the following reside:

    %    VMDIRECT EXEC: waits for a user request and passes
the data sent to this EXEC, via SMSG from CHPSWD
EXEC, to DIRUPDTE EXEC.

    %    DIRUPDTE EXEC: receives data from VMDIRECT and
does the change of passwords in object and source VM
directory.  Also logs all the requests and responses to
them in a CMS file.

    %    DIRINDEX EXEC: builds an index of the USER entries
from the source directory to speed the search in
DIRUPDTE.  Invoked by VMDIRECT.

    %    DIAG84 MODULE: assembles and generates this module
from the source provided.  This program receives the
parmlist and its length from DIRUPDTE, issues the
Diagnose X'84' instruction and returns the result.

The name expected for the Virtual Machine is VMDIRECT.  If
you do not use it, change the code at label SEND_DATA in the
CHPSWD EXEC described below.

2   Generate two DMS panels named LOGPASS and MDISK.
(Samples in Figures 1 and 2.)

3   Put the panels and CHPSWD EXEC in a shared mini-disk.
This EXEC is what the user sees as the interface with
VMDIRECT.  The DISPLAY function does not appear as a
valid option in the user menu since it is expected to be
restricted.

***********************************************************************
*                                                                     *
*   ==> LOGON PASSWORD UPDATE                                         *
*   ==> USERID                                                        *
*                                                                     *
*                                                                     *
*   ENTER YOUR CURRENT PASSWORD:                                      *
*         YOUR NEW PASSWORD    :                                      *
*                                                                     *
*                                                                     *
*   PF1/13 = END              ENTER = UPDATE                          *
*                                                                     *
*                                                                     *
***********************************************************************

***********************************************************************
*                                                                     *
*   ==> MINIDISK PASSWORDS UPDATE                                     *
*   ==> USERID                ==> MINIDISK                            *
*                                                                     *
*                                                                     *
*   ENTER YOUR LOGON PASSWORD:                                        *
*                                                                     *
*       AND YOUR NEW PASSWORDS:              (READ PASSWORD)          *
*                             :              (WRITE PASSWORD)         *
*                             :              (MULTIACCESS PASSWORD)   *
*                                                                     *
*   PF1/13 = END               ENTER = UPDATE                         *
*                                                                     *
***********************************************************************
Figure 2: Sample DMS panel to change mini-disk passwords.
We have expanded this set of EXECs to fully implement the X'84'
function of the Diagnose instruction.  If your installation does not
use DMS, you can easily change to another method for driving
panels by just changing the procedure SEND_PANEL in
CHPSWD EXEC.

VMDIRECT EXEC
/* **************************************************************** */
/* VMDIRECT - START ON-LINE MAINTENANCE OF VM DIRECTORY.            */
/*            RECEIVE INPUT MESSAGES THROUGH THE SPECIAL            */
/*            MESSAGE FACILITY.                                     */
/*                                                                  */
/* CALLS    - DIRINDEX EXEC                                         */
/*            DIRUPDTE EXEC                                         */
/*            WAKEUP   MODULE                                       */
/*                                                                  */
/* OPTIONAL PARAMETER - 'NOINDEX'                                   */
/*            ALLOWS TO BYPASS BUILD OF DIRECTORY USER INDEX.       */
/* STATUS   - VM/SP RELEASE 4                                       */
/* **************************************************************** */
  HI = '1D08'X; LO = '1D00'X
  ADDRESS COMMAND CP SET RUN ON
  ADDRESS COMMAND CP SET SMSG ON
  ARG PARM .                                /* IF PARM PASSED       */
  IF PARM ¬= 'NOINDEX' THEN DO              /* BYPASS DIRINDEX      */
     SAY HI 'CREATING DIRECTORY INDEX' LO
     DIRINDEX
  END
  ADDRESS COMMAND CP 'MSGNOH * VMDIRECT 1.0 RUNNING'
  IF RC = 0 THEN                            /* CHECK IF RUNNING      */
     ADDRESS COMMAND CP DISCONNECT          /* IN DISC MODE          */
 'WAKEUP (NOEXT SMSG CONS'                  /* WAIT FOR REQUESTS     */
  IF RC = 6 THEN DO                         /* CONSOLE INTERRUPT ?   */
     SAY HI 'VMDIRECT STOPPED. ENTER VMDIRECT TO RESTART' LO
     ADDRESS COMMAND CP SET SMSG OFF        /* RETURN TO CMS         */
     RETURN
  END
  PULL . USERID DATA                        /* DATA FROM SMSG        */
 'DIRUPDTE' USERID DATA                     /* TRANSFER CONTROL TO   */
                                            /* DIRUPDTE EXEC         */
 'ACCESS 191 A'                             /* RE-ACCESS 191 DUE     */
                                            /* TO POSSIBLE CHANGE    */
                                            /* IN SOURCE DIRECTORY   */
  PUSH 'VMDIRECT'                           /* PUSH IN CONSOLE STACK */
  RETURN                                    /* EXEC NAME AND RETURN  */
                                            /* TO CMS                */
DIRINDEX EXEC
/* **************************************************************** */
/* DIRINDEX - BUILD USER INDEX FROM VM DIRECTORY. THE INDEX IS USED */
/*            BY DIRUPDTE EXEC.                                     */
/*            CALLED BY VMDIRECT EXEC.                              */
/* STATUS   - VM/SP RELEASE 4.                                      */
/* **************************************************************** */
 DIRECT_FILE = 'DIRECT DIRECT A'        /* SOURCE DIRECTORY FILE-ID */
 INDEX_FILE  = 'DIRECT INDEX  A'        /* USER INDEX FILE-ID       */
 ERASE INDEX_FILE; LINENUM = 0
 DO WHILE (EOF ¬= 'YES')                /* READ SOURCE DIRECTORY    */
    LINENUM = LINENUM + 1
    EXECIO 1 DISKR DIRECT_FILE
    IF RC ¬= 0 THEN DO                  /* END OF FILE ?            */
       EOF = YES
       ITERATE
    END
    PULL E1 E2 .                        /* GET FROM STACK           */
    IF E1 = 'USER' THEN DO              /* IF 'USER STATEMENT       */
       PUSH E2 LINENUM                  /* WRITE IT IN INDEX_FILE   */
       EXECIO 1 DISKW INDEX_FILE 0 F 15
    END
 END
 FINIS DIRECT_FILE                      /* CLOSE FILE AND RETURN    */
 RETURN                                 /* TO VMDIRECT EXEC         */
DIAG84 MODULE
         TITLE ' D I A G 8 4 '
***********************************************************************
* DIAG84 - CALL DIAGNOSE X'84' INSTRUCTION. DIRECTORY UPDATE-IN-PLACE *
*          THIS PROGRAM RECEIVES A PARAMETER LIST AND ITS LENGTH.     *
*          IN OUTPUT, RETURNS THE VALUE CONTAINED IN R4.              *
***********************************************************************
DIAG84   CSECT
         USING DIAG84,R12
         LR    R2,R0             EXTENDED PLIST ADDRESS.
         XR    R0,R0
         L     R3,4(,R2)         POINT TO PARAMETERS PASSED BY
         SR    R4,R4             DIRUPDTE EXEC.
         IC    R4,0(,R3)
         LA    R5,2(,R3)
         LA    R15,0
         DC    X'83540084'       ISSUE DIAGNOSE INSTRUCTION.
         BZ    RETURN
         LR    R15,R4            IF ERROR OCCURRED, RETURNS AS RC.
RETURN   BR    R14
*
         REGEQU
         END
DIRUPTDE EXEC
/* **************************************************************** */
/* DIRUPDTE - VALIDATE USER REQUESTS AND AUTHORIZATION TO USE.      */
/*            CALL DIAG84 MODULE TO ISSUE DIAGNOSE X'84'.           */
/*            LOG THE REQUEST AND ITS RESULT.                       */
/*                                                                  */
/* INPUT    - FROM VMDIRECT EXEC                                    */
/* OUTPUT   - SOURCE DIRECTORY FILE                                 */
/*            LOG FILE.                                             */
/*            SEND MESSAGE TO USER ABOUT THE RESULT OF HIS          */
/*            REQUEST.                                              */
/*                                                                  */
/* FUNCTIONS PERMITTED.                                             */
/*            LOGPASS - TO CHANGE LOGON PASSWORD                    */
/*            MDISK   - TO CHANGE MDISK(S) PASSWORD(S)              */
/*            DISPLAY - USERS CONFIGURATION. AUTHORIZED USERS ONLY  */
/*                                                                  */
/* CALLS    - DIAG84 MODULE.                                        */
/*                                                                  */
/* STATUS   - VM/SP RELEASE 4                                       */
/* **************************************************************** */
 USER_AUTHO = AUTHORIZED(USER_NAME)    /* IF USER NOT AUTHORIZED    */
 IF USER_AUTHO THEN DO                 /* TO CHANGE HIS PASSWORD    */
    CALL ERROR_MSGS '1'                /* RETURN ERROR MESSAGE      */
    RETURN
 END
 ARG SMSG_DATA                         /* GET DATA FROM VMDIRECT    */
 PARSE VALUE SMSG_DATA WITH USER_NAME FUNCTION PASS.1 PASS.2 PASS.3
PASS.4 PASS.5
 DIRECT_FILE  = 'DIRECT DIRECT A'
 DIRECT_INDEX = 'DIRECT INDEX A'
 CALL WRITE_LOG SMSG_DATA              /* LOG THE REQUEST           */
 SELECT
    WHEN FUNCTION = 'LOGPASS' THEN     /* SELECT FUNCTION           */
         CALL CHANGE_LOGPASS
    WHEN FUNCTION = 'MDISK'   THEN
         CALL CHANGE_MDISK
    WHEN FUNCTION = 'DISPLAY' THEN
         CALL DISPLAY_INFO
 END
 RETURN
CHANGE_LOGPASS:
 /* ----- CHANGE LOGON PASSWORD OF A VIRTUAL MACHINE ----- */
  USER_NAME = LEFT(USER_NAME,8); PASS.1 = LEFT(PASS.1,8)
  PASS.2    = LEFT(PASS.2,8)
  PARMLIST = USER_NAME || PASS.1 || 'LOGPASS ' || PASS.2
  CALL UPDATE_ON_LINE '20'X         /* BUILD DIAGNOSE 84 PARMLIST   */
                                    /* AND ISSUE THE UPDATE REQUEST */
  IF RESULT ¬= 0 THEN RETURN
  CALL UPDATE_IN_FILE               /* UPDATE SOURCE DIRECTORY     */
  RETURN
 CHANGE_MDISK:
  /* ----- CHANGE PASSWORDS MDISKS OF A VIRTUAL MACHINE ----- */
   USER_NAME = LEFT(USER_NAME,8); PASS.1 = STRIP(PASS.1)
   PASS.2    = LEFT(PASS.2,8);    PASS.3 = LEFT(PASS.3,8)
   PASS.4    = LEFT(PASS.4,8);    PASS.5 = LEFT(PASS.5,8)
   PARM_DISK_1 = USER_NAME || PASS.2 || 'MDISK   ' || PASS.1 || 'WR '
   PARM_DISK_2 = PASS.3 || PASS.4 || PASS.5
   PARMLIST = PARM_DISK_1 || PARM_DISK_2
   CALL UPDATE_ON_LINE '36'X        /* BUILD DIAGNOSE 84 PARMLIST  */
                                    /* AND ISSUE THE UPDATE REQUEST*/
   IF RESULT ¬= 0 THEN RETURN
   CALL UPDATE_IN_FILE              /* UPDATE SOURCE DIRECTORY     */
   RETURN
  DISPLAY_INFO:
   /* ----- DISPLAY CONFIGURATION OF A VIRTUAL MACHINE ----- */
    USER_AUTHO = AUTHORIZED(USER_NAME)
    IF ¬USER_AUTHO THEN DO          /* ONLY FOR AUTHORIZED USERS   */
       CALL ERROR_MSGS '1'
       RETURN
    END
                                    /* LOCATE POSITION OF USER     */
                                    /* IN INDEX FILE               */
   'EXECIO * DISKR' DIRECT_INDEX '(FINIS LO /'PASS.1'/ Z 1 8'
    IF RC ¬= 0 THEN DO
       CALL ERROR_MSGS '7'
       RETURN
    END
    PULL .
    PULL . DIRECT_LINE_NUMBER
                                    /* READ USER CONFIGURATION     */
                                    /* FROM SOURCE DIRECTORY       */
   'EXECIO 1 DISKR' DIRECT_FILE DIRECT_LINE_NUMBER '(M 1 72'
    PULL E1 DIRECT_DATA
    DO FOREVER
      ADDRESS COMMAND CP MSGNOH USER_NAME E1 DIRECT_DATA
      DIRECT_LINE_NUMBER = DIRECT_LINE_NUMBER + 1
     'EXECIO 1 DISKR' DIRECT_FILE DIRECT_LINE_NUMBER '(M 1 72'
      IF RC ¬= 0 THEN LEAVE
      PULL E1 DIRECT_DATA
      IF E1 = 'USER' THEN LEAVE
    END
   'FINIS' DIRECT_FILE
    RETURN
  AUTHORIZED: PROCEDURE EXPOSE FUNCTION;
   /* ----- CHECK IF USER CAN USE THE FUNCTION REQUESTED ----- */
   ARG USER_NAME
   USER.1 = 'VSEIPO'                /* THIS USERS CAN DO NOTHING   */
   USER.2 = 'OPERATOR'
   USER.3 = 'AUTOLOG1'
   USER.4 = 'DOSVSE'
   USER.5 = 'CICS1'
   USER.20 = 'CGISCM10'         /* THIS USERS CAN REQUEST */
   USER.21 = 'CGISCM05'         /* DISPLAY FUNCTION       */
   USER.22 = 'CGISCM29'
   USER.23 = 'CGISCM80'
   USER.24 = 'CGISCM18'
   USER.25 = 'CGISCM12'
   USER.26 = 'CGISCM43'
   IF FUNCTION = 'DISPLAY' THEN
        DO; INIT = 20; TERM = 26; END;
   ELSE DO; INIT =  1; TERM = 5;  END;
   DO I = INIT TO TERM
      IF USER.I = USER_NAME THEN RETURN 1
   END
   RETURN 0
   UPDATE_ON_LINE:
    /* ----- ISSUE DIAGNOSE X'84' TO UPDATE DIRECTORY ----- */
    ARG LENGTH_PARMLIST
    ADDRESS COMMAND DIAG84 LENGTH_PARMLIST PARMLIST
    IF RC = 0 THEN DO
       CALL ERROR_MSGS '2'
       RETURN 0
    END
    DIAG_RC = RC
    CALL ERROR_MSGS '3'
    CALL ERROR_MSGS DIAG_RC
    CALL ERROR_MSGS '4'
    RETURN 1
   UPDATE_IN_FILE:
    /* ----- UPDATE SOURCE DIRECTORY WITH USER REQUESTS ----- */
   'EXECIO * DISKR' DIRECT_INDEX '(FINIS LO /'USER_NAME'/ Z 1 8'
    IF RC ¬= 0 THEN DO
       EXECIO_RC = RC
       CALL ERROR_MSGS '3'
       CALL ERROR_MSGS '6'
       CALL ERROR_MSGS '4'
       RETURN
    END
    PULL .
    PULL . DIRECT_LINE_NUMBER
    'EXECIO 1 DISKR' DIRECT_FILE DIRECT_LINE_NUMBER '(FINIS'
     IF RC ¬= 0 THEN DO
        EXECIO_RC = RC
        CALL ERROR_MSGS '3'
        CALL ERROR_MSGS '5'
        CALL ERROR_MSGS '4'
        RETURN
     END
     PULL DIRECT_USER_LINE
     IF FUNCTION = 'LOGPASS' THEN DO
        PARSE VALUE DIRECT_USER_LINE WITH E1 E2 E3 E4 E5 E6 .
        E3 = STRIP(PASS.2)
        DIRECT_USER_LINE = E1 E2 E3 E4 E5 E6
     END
     ELSE DO    /*  FUNCTION = 'MDISK' */
        VADDR = 'MDISK' PASS.1
        DO WHILE (DIRECT_MDISK ¬= 'FOUND' & E1 ¬= 'USER')
           DIRECT_LINE_NUMBER = DIRECT_LINE_NUMBER + 1
           'EXECIO 1 DISKR' DIRECT_FILE DIRECT_LINE_NUMBER
           PULL DIRECT_USER_LINE
           PARSE VALUE DIRECT_USER_LINE WITH E1 E2 E3 E4 E5 E6 E7 E8 E9
E10
           DIRECT_VADDR = E1 E2
           IF VADDR = DIRECT_VADDR THEN DIRECT_MDISK = 'FOUND'
        END
        IF DIRECT_MDISK ¬= 'FOUND' THEN DO
           EXECIO_RC = 'NOTFOUND'
           CALL ERROR_MSGS '3'
           CALL ERROR_MSGS '5'
           CALL ERROR_MSGS '4'
           FINIS DIRECT_FILE
           RETURN
        END
        IF PASS.5 ¬= '' THEN E10 = STRIP(PASS.5)
        IF PASS.4 ¬= '' THEN E9  = STRIP(PASS.4)
                             E8  = STRIP(PASS.3)
        DIRECT_USER_LINE = E1 E2 E3 E4 E5 E6 E7 E8 E9 E10
     END
     PUSH DIRECT_USER_LINE
    'EXECIO 1 DISKW' DIRECT_FILE DIRECT_LINE_NUMBER '(FINIS M 1 72'
     IF RC ¬= 0 THEN DO
        EXECIO_RC  = RC
        CALL ERROR_MSGS '3'
        CALL ERROR_MSGS '5'
        CALL ERROR_MSGS '4'
     END
     RETURN
    ERROR_MSGS:
     /*----- MESSAGE ROUTINE -----*/
     ARG MSG_NUMBER
     MSG.0 = 'UNEXPECTED ERROR. RETURN CODE =' RC
     MSG.1 = 'USER NOT AUTHORIZED TO USE THIS FACILTY'
     MSG.2 = 'YOUR PASSWORD(S) HAS BEEN CHANGED. EFFECTIVE FROM NEXT
LOGON'
     MSG.3 = 'UNEXPECTED PROBLEM WHEN UPDATING DIRECTORY'
     MSG.4 = 'IF YOU NEED HELP, PLEASE CALL USER HELP DESK.'
     MSG.5 = 'CANNOT ACCESS SOURCE DIRECTORY. RC =' EXECIO_RC
     MSG.6 = 'CANNOT ACCESS DIRECTORY INDEX FILE. RC = ' EXECIO_RC
     MSG.7 = 'USERID NOT FOUND IN DIRECTORY'
     /*----- RETURN MESSAGES FROM DIAG84 -----*/
     MSG.10 = 'ERROR OCCURRED WRITING THE DIRECTORY TO DASD'
     MSG.20 = 'DIAGNOSE 84 ENCOUNTERED A PROCESSING ERROR'
     MSG.26 = 'SPECIFIED MINIDISK ADDRESS DOES NOT EXIST'
     MSG.28 = 'VALUE IN THE OPERATION FIELD OF PARMLIST IS INVALID'
     MSG.30 = 'SPECIFIED USERID COULD NOT BE FOUND'
     MSG.31 = 'PASSWORD SPECIFIED IS INVALID'
     MSG.40 = 'VIRTUAL STORAGE SIZE SPECIFIED IS INVALID'
     MSG.42 =  MSG.40
     MSG.50 = 'PRIVILEGE CLASS INVALID'
     MSG.52 = 'SYNTAX ERROR IN PRIVILEGE CLASS'
     MSG.60 = 'SPECIFIED PRIORITY IS INVALID'
     MSG.63 =  MSG.60
     MSG.65 = 'PARAMETER LIST SIZE ERROR'
     MSG 70 = 'SPECIFIED OPTION IS INVALID'
     MSG.71 = 'HIGH-VALUES WAS NOT CODED AFTER THE LIST OF OPTIONS'
     MSG.72 = 'SYNTAX ERROR IN OPTION VALUE'
     MSG.80 = 'PARAMETER LIST CONTAINS AN INVALID MINIDISK ADDRESS'
     MSG.81 =  MSG.80
     MSG.82 = 'PASSWORD SPECIFIED REQUIRES A CHANGE IN DIRECTORY ENTRY'
     MSG.91 = 'NO ATTRIBUTES WERE FOUND ON THE SCREEN COMMAND'
     MSG.92 = 'INVALID ATTRIBUTES WERE FOUND ON THE SCREEN COMMAND'
     MSG.101 = 'PARAMETER LIST IS TOO LARGE'
     MSG.102 = 'PARAMETER LIST IS LESS THAN 1'
     MSG.110 = 'NO PARAMETER DATA CURRENTLY EXISTS IN DIRECTORY'
     MSG.111 = 'PARAMETER LENGTH IS INVALID'
     ADDRESS COMMAND CP MSGNOH USER_NAME '=>' MSG.MSG_NUMBER
     CALL WRITE_LOG MSG.MSG_NUMBER
     RETURN
    WRITE'LOG:
    /*----- LOG DIRUPDTE ACTIVITY -----*/
     ARG MSG_LOG
    'EXECIO 1 DISKW DIRUPDTE LOG A (VAR MSG_LOG'
     RETURN
CHPSWD EXEC
/* **************************************************************** */
/* CHPSWD - INVOKE FUNCTIONS TO UPDATE DIRECTORY ENTRIES ON-LINE.   */
/* THIS EXEC SHOULD RESIDE IN A SHARED MINIDISK.                    */
/* **************************************************************** */
    ARG OPCODE MDISK.                              /* GET ARGUMENTS */
    DMS_DATA = ''; HI = '1D08'X; LO = 'D00'X
    SELECT                               /* TAKE APPROPRIATE ACTION */
      WHEN OPCODE = 'LOGPASS' | OPCODE = 'MDISK' THEN
           CALL CHANGE_PASSWORD
      WHEN OPCODE = 'DISPLAY' THEN DO
           PASS.1 = MDISK
           CALL SEND_DATA
      END
      OTHERWISE
           CALL CHPSWD_HELP
   END
   RETURN                                                 /* TO CMS */
 CHANGE_PASSWORD:                /* CHANGE LOGON OR MDISK PASSWORDS */
   PASS. = ''
   DO WHILE (EOE ¬= '1')
      CALL SEND_PANEL
      IF RSTATUS = 'PF1' | RSTATUS = 'PF13' THEN EOE = '1'
      IF RSTATUS = 'ENTER' THEN DO
         IF PASS.1 = '' | PASS.2 = '' THEN DO
            CALL ERROR_MSGS '2'
            ITERATE
         END
         CALL SEND_DATA
         EOE = '1'
         ITERATE
      END
      CALL ERROR_MSGS '3'
   END
   RETURN
 SEND_PANEL:                          /* ROUTINE TO SEND DMS PANELS */
     ADDRESS COMMAND EUDEXEC2
     ADDRESS DISPLAY
     MSGMODE ON
     USE PANEL OPCODE
     IF OPCODE = 'MDISK' & MDISK = '' THEN DO
        MDISK = '191'; PASS.1 = '191'
        CALL ERROR_MSGS '1'
     END
     IF OPCODE = 'MDISK' & MDISK ¬= '' THEN PASS.1 = MDISK
     D1 = USERID()
     IF OPCODE = 'LOGPASS' THEN
      'MAP DATA 2 PASS.1 3 PASS.2 (LOAD UNLOAD'
     ELSE
     'MAP DATA 2 PASS.1 3 PASS.3 5 PASS.4 6 PASS.5 (LOAD UNLOAD'
    'SIGNAL ON'
    COMMENT DMS_DATA
    DISPLAY
    ADDRESS
    RETURN
  SEND_DATA:                         /* TO VMDIRECT VIRTUAL MACHINE */
      ADDRESS COMMAND CP SMSG,
                   VM DIRECT OPCODE PASS.1 PASS.2 PASS.3 PASS.4 PASS.5
      IF RC ¬= 0 THEN DO
         CALL ERROR_MSGS '4'
         SAY HI DMS_DATA LO
      END
      RETURN
   ERROR_MSGS:
      ARG ERROR_NUMBER
      MSG.1 = '==> MDISK ADDRESS NOT SPECIFIED. 191 ASSUMED'
      MSG.2 = '==> ENTER REQUESTED PARAMETERS'
      MSG.3 = '==> PRESS <ENTER> TO EXECUTE THE FUNCTION'
      MSG.4 = '==> VMDIRECT NOT ACTIVE TEMPORARILY. RETRY LATER'
      DMS_DATA = MSG.ERROR_NUMBER
      RETURN
   CHPSWD_HELP:                                      /* HELP TO USER */
H.1  =
'****************************************************************'
H.2  = '*
*'
H.3  = '*  CHPSWD:
*'
H.4  = '*
*'
H.5  = '*  THIS PROCEDURE ALLOWS YOU TO CHANGE THE LOGON OR MINIDISK
*'
H.6  = '*  PASSWORDS OF YOUR VIRTUAL MACHINE.
*'
H.7  = '*
*'
H.8  = '*  HOW TO INVOKE IT:
*'
H.9  = '*
*'
H.10 = '*  CHPSWD <LOGPASS>
*'
H.11 = '*         <MDISK CUU>
*'
H.12 = '*
*'
H.13 = '*  WHERE LOGPASS INDICATE THAT YOU WANT TO CHANGE YOUR LOGON
*'
H.14 = '*        PASSWORD....
*'
H.15 = '*        MDISK INDICATE THAT YOU WANT TO CHANGE THE ACCESS
*'
H.16 = '*        PASSWORD OF YOUR CUU MINIDISK. IF YOU DO NOT SPECIFY
*'
H.17 = '*        CUU, DEFAULT IS 191.
*'
H.18 = '*
*'
H.19 = '*  PRESS <ENTER> TO END.
*'
H.20 = '*
*'
H.21 =
'****************************************************************'
      HELP_INDEX = 21
      VMFCLEAR
      DO I = 1 TO HELP_INDEX
      SAY HI H.I LO
   END
   PULL ANSWER .
   IF ANSWER ¬= '' THEN
      PUSH 'CHPSWD' ANSWER
   RETURN
Enrique Garcia Dulanto
Technical Support Leader
Computo SA (Peru) ) Computo SA 1989


