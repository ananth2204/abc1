QUERY NAMES using fullscreen CMS

Fullscreen CMS was introduced with VM/SP Release 5.  It is a
flexible and powerful tool but, judging from the number of
articles in VM Update, it is not used very often.  The following
EXEC is an example of how simple it is to use virtual screens
and windows.

When processing the output of the QUERY NAMES
command, the EXEC displays a list of selected users in
alphabetical order.  Wildcard characters can be used to display
a subset of users.  The EXEC has proved to be very convenient
for operators.

I am including two versions of the EXEC.  The first one
contains:

o      Shell-sort as a sorting algorithm

o      On-line help invoked by the PF1 key

o      An option to direct a sorted list of users into a file

o      A command field allowing the usage of the FORCE
      command for every user (it makes the job easier for operators)

o      Colour.

The second quicker version uses CMS Pipelines.


EXEC 1

 /* QN displays a list of selected users in alphabetical order */
 outfile = "QN OUTPUT A"
 helpfile = "QN HELP A"
 address command
 arg nams adds "(" opt
 if nams = "?" then call inform
 if words(adds) > 1 then err(5)
 select
     when opt = ""  then disk = 0
     when opt = "F" then disk = 1
     otherwise err(24)
 end
 if substr(nams,1,1) = "¬" then do
     nams = delstr(nams,1,1)
     negat1 = 1
     end
 else negat1 = 0
 if substr(adds,1,1) = "¬" then do
     adds = delstr(adds,1,1)
     negat2 = 1
     end
 else negat2 = 0
 if nams = "" then astpos1 = 1
              else astpos1 = lastpos('*',nams)
 if adds = "" then astpos2 = 1
              else astpos2 = lastpos('*',adds)
 if astpos1 = 0 then astpos1 = 9
                else nams = delstr(nams,astpos1)
 if astpos2 = 0 then astpos2 = 5
                else adds = delstr(adds,astpos2)
 check1 = (astpos1 <> 1)
 check2 = (astpos2 <> 1)
 before = Queued()
 "QUERY NAMES (STACK LIFO"
 lines = Queued() - before
 count = 0
 user. = ""
 do lines
     pull name.1 "-" addr.1 ", " name.2 "-" addr.2 ", ",
             name.3 "-" addr.3 ", " name.4 "-" addr.4
     do i = 1 to 4
         if name.i = "" then iterate
         match1 = (nams = delstr(name.i,astpos1))
         if (check1) then
             if ((¬match1 & ¬negat1) | (match1 & negat1)) then iterate
         addr.i = strip(addr.i,"B")
         match2 = (adds = delstr(addr.i,astpos2))
         if (check2) then
             if ((¬match2 & ¬negat2) | (match2 & negat2)) then iterate
         count = count + 1
         user.count = left(name.i,8) "-" left(addr.i,5)
     end
 end
 if count = 0 then err(28)
 call order(count)
 if disk then do
     "CP SET EMSG OFF"
     "ERASE" outfile
     "CP SET EMSG ON"
     do i = 1 to count
         "EXECIO 1 DISKW" outfile "(STRING" user.i
     end
     "FINIS" outfile
     "XEDIT" outfile
     end
 else do
     "QUERY DISPLAY (STACK LIFO"
     pull . hgth wdth .
     usmax = 250
     wndesc = count "users"
     fldesc = "Cmd   Userid     Address"
     pfdesc = "1 = Help   3 = Quit   7 = Backward   8 = Forward"
     conf = "forced"
     fail = "unable to force"
     clnum = '7'
     colr = right('', wdth-1, clnum)
     "SET FULLSCREEN ON"
     "SET CHARMODE ON"
     "SET EMSG OFF"
     "DEFINE VSCREEN OUTQN" usmax wdth "2 2 (NOPROTECT"
     "DEFINE WINDOW OUTQN" hgth wdth "1 1 (NOBORDER"
     "SET EMSG ON"
     "CLEAR VSCREEN OUTQN"
     "SET LOCATION OUTQN OFF"
     "SHOW WINDOW OUTQN ON OUTQN"
     wr = "WRITE VSCREEN OUTQN"
     wr "+1 1" wdth "(RESERVED FIELD" wndesc
     wr "+1 1" wdth-1 "(RESERVED COLOR" colr
     wr "+2 1" wdth "(RESERVED FIELD" fldesc
     wr "+2 1" wdth-1 "(RESERVED COLOR" colr
     wr "-2 1" wdth "(RESERVED FIELD" pfdesc
     wr "-2 1" wdth-1 "(RESERVED COLOR" colr
     do i = 1 to count
         wr i "7 74" "(PROTECT FIELD" user.i
     end
     do i = 1 to 24
        "SET CMSPF" i
     end i
     do forever
         "WAITREAD VSCREEN OUTQN"
         select
             when waitread.1 = "PFKEY  1" then call help
             when waitread.1 = "PFKEY  3" then leave
             when waitread.1 = "PFKEY  7" then "SCROLL BACKWARD OUTQN"
             when waitread.1 = "PFKEY  8" then "SCROLL FORWARD  OUTQN"
             when waitread.1 = "ENTER" then
                 do j = 3 to waitread.0
                     word1 = word(waitread.j, 1)
                     word2 = word(waitread.j, 2)
                     word4 = word(waitread.j, 4)
                     if word1 = "DATA" & word4 = "force" then do
                         "FORCE" user.word2
                         if rc = 0 then
                             wr word2 "27 7 (NOPROTECT FIELD" conf
                         else
                             wr word2 "27 16 (NOPROTECT FIELD" fail
                     end
                 end j
             otherwise nop
             end
         end
     "DELETE WINDOW OUTQN"
     "DELETE VSCREEN OUTQN"
     "SET FULLSCREEN OFF"
     "CP TERMINAL BRKKEY PA1"
     end
 exit
 /* this subroutine performs shell sort on the list of users */
 order: procedure expose user.
 arg size
 gap = 1
 do while (gap < size); gap = gap * 2; end
 do while (gap > 1)
     gap = gap % 2
     lim = size - gap
     do scan = 1 to lim
     next = scan + gap
     if user.scan > user.next then
         do
         temp1 = user.next; user.next = user.scan
         do bubble = scan-gap to 1 by -gap while (temp1 < user.bubble)
             next = bubble + gap
             user.next = user.bubble
             end bubble
         bubble = bubble + gap
         user.bubble = temp1
         end
     end scan
 end
 return
 /* this subroutine displays error message */
 err:
 arg n
 select
     when n =  5 then say "Error: unexpected parameter"
     when n = 24 then say "Error: invalid option"
     when n = 28 then say "User not found"
 end
 exit n
 /* this subroutine displays help information in a window */
 help:
 "SET EMSG OFF"
 "DEFINE VSCREEN QNHELP 22 80 0 0 (PROTECT"
 "DEFINE WINDOW QNHELP 19 75 3 3"
 "CLEAR VSCREEN QNHELP"
 "GET VSCREEN QNHELP" helpfile
 if rc <> 0 then
     "WRITE VSCREEN QNHELP 1 1 30 (PROT FIELD Can't access" helpfile
 "SET EMSG ON"
 "SET LOCATION QNHELP OFF"
 "SHOW WINDOW QNHELP ON QNHELP"
     do until (waitread.1 = "PFKEY  3")
         "WAITREAD VSCREEN OUTQN"
     end
 "HIDE WINDOW QNHELP"
 return
/* usage description */
inform:
say '   This EXEC displays a list of selected users '
say '   in alphabetical order.  It may be used '
say '   instead of CP QUERY NAMES command. Use the format:    '
say
say '            +--------+---------------------------------+'
say '            +   QN   +   < userid < address >> < (F >  +'
say '            +--------+---------------------------------+'
say
say 'A pattern may be specified for the user-id and/or the address. The'
say 'special pattern characters are the * (asterisk) and ¬ (not sign).'
say 'If used, ¬ must be the first and * the last character of a  '
say 'parameter.  Option F allows output to be directed to a file.'
say '   Examples:'
say '              QN             '
say '              QN  M*         '
say '              QN  *  DSC (F  '
say '              QN  ¬LOG*  ¬DSC'
say '              QN  MAINT  L088'
say
exit


EXEC 2

/* QN displays a list of selected users in alphabetical order */
address command
arg pat1 pat2 .
if pat1 = '?' then call inform
negat1 = (pos('¬',pat1) = 1)
if negat1 then pat1 = delstr(pat1,1,1)
negat2 = (pos('¬',pat2) = 1)
if negat2 then pat2 = delstr(pat2,1,1)
if pat1 = '' then aster1 = 1
             else aster1 = lastpos('*',pat1)
if pat2 = '' then aster2 = 1
             else aster2 = lastpos('*',pat2)
if aster1 = 0 then aster1 = 9
               else pat1 = delstr(pat1,aster1)
if aster2 = 0 then aster2 = 5
               else pat2 = delstr(pat2,aster2)
check1 = (aster1 <> 1)
check2 = (aster2 <> 1)
'PIPE (name QN) cp query names | split at , | strip | sort | stem inp.'
user. = ''
count = 0
do i = 1 to inp.0
        parse var inp.i name "-" addr
        if name = '' then iterate
        if (check1) then do
            match1 = (pat1 = delstr(name,aster1))
            if ((¬match1 & ¬negat1) | (match1 & negat1)) then iterate
        end
        addr = strip(addr)
        if (check2) then do
            match2 = (pat2 = delstr(addr,aster2))
            if ((¬match2 & ¬negat2) | (match2 & negat2)) then iterate
        end
        count = count + 1
        user.count = left(name,8) '-' left(addr,5)
end
if count = 0 then do
    say 'User not found'
    exit 45
end
'QUERY DISPLAY (STACK LIFO'
pull . hgth wdth .
lmax = 100
wndesc = count 'user(s)'
pfdesc = 'PF3 = QUIT   PF7 = BACKWARD   PF8 = FORWARD'
'SET FULLSCREEN ON'
'DEFINE VSCREEN OUTQN' lmax wdth '1 1 (PROTECT'
'DEFINE WINDOW OUTQN' hgth wdth '1 1 (NOBORDER'
'SHOW WINDOW OUTQN ON OUTQN'
wr = 'WRITE VSCREEN OUTQN'
wr '+1 1' wdth '(RESERVED FIELD' wndesc
wr '-1 1' wdth '(RESERVED FIELD' pfdesc
do k = 1 to count by 4
    line = ''
    do i = k for 4
        line = line || user.i || '   '
    end
    wr i%4 1 wdth '(PROTECT FIELD' line
end
do forever
    'WAITREAD VSCREEN OUTQN'
    select
        when waitread.1 = 'PFKEY  3' then leave
        when waitread.1 = 'PFKEY  7' then 'SCROLL BACKWARD OUTQN'
        when waitread.1 = 'PFKEY  8' then 'SCROLL FORWARD  OUTQN'
        otherwise nop
    end
end
'DELETE WINDOW OUTQN'
'DELETE VSCREEN OUTQN'
'SET FULLSCREEN OFF'
'CP TERMINAL BRKKEY PA1'
 exit
/* usage description */
inform:
say 'This EXEC displays a list of selected users in alphabetical order.'
say 'It may be used instead of CP QUERY NAMES command. Use the format: '
say
say '               +--------+---------------------------+'
say '               +   QN   +   < userid < address >>   +'
say '               +--------+---------------------------+'
say
say 'A pattern may be specified for the user-id and/or the address. The'
say 'special pattern characters are the * (asterisk) and ¬ (not sign). '
say 'If used, ¬ must be the first and * the last character of a '
say 'parameter.   '
say '   Examples:'
say '              QN             '
say '              QN  M*         '
say '              QN  *  DSC     '
say '              QN  ¬LOG*  ¬DSC'
say '              QN  MAINT  L088'
say
exit


HELP

     This EXEC displays a list of selected users in alphabetical order.
It may be used instead of CP QUERY NAMES command. Use the format:

            +--------+---------------------------------+
            +   QN   +   < userid < address >> < (F >  +
            +--------+---------------------------------+

   A pattern may be specified for the user-id and/or the address.  The
special pattern characters are the * (asterisk) and ¬ (not sign).  If
used, ¬ must be the first and * the last character of a parameter.
   Option F allows output to be directed to a file.
   Examples:
              QN
              QN  M*
              QN  *  DSC (F
              QN  ¬LOG*  ¬DSC
              QN  MAINT  L088

Greg Kondrak
Programmer/Analyst
Edmonton Public School Board (Canada)

