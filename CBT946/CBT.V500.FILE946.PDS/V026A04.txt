 HEXIT001 - JES2/SP Exit #001 (continued)
This month we conclude this article by printing the rest of the code for a JES2
Exit that allows output to be spooled to other virtual machines or across an
RSCS network.
.MCEND   ANOP
         PRINT ON
         AIF   ('&HXT' NE '').MODSUP
         MNOTE 12,'***********   EXIT NAME MISSING    ***********'
         MNOTE 12,'*********** COMPILATION TERMINATED ***********'
         END
         MEXIT
.MODSUP  ANOP
         MNOTE *,'EXIT NAME &HXT SPECIFIED'
&HXN     SETC '&HXT' (6,3)
         AIF   ('&JES2VER' EQ '134').JES134
         AIF   ('&JES2VER' EQ '136').JES136
&HXT     $MODULE                  HASP MODULE INFORMATION TABLE  SPR2
         $BUFFER
         $COMWORK        EXIT005
         $ERPL
         $JCT
         $CAT
         $CMB            EXIT005
         $DCT            EXIT004
         $PCE
         $JQE
         $JOE            EXIT005
         $HCT
         $MIT
         $PDDB           EXIT001
         $UCB            EXIT001
         $PPPWORK        EXIT001
         $MODMAP         EXIT005
HA$X&HXN $ENTRY CSECT=YES,BASE=(R12) DEFINE ENTRY POINT
         AGO    .JESXXX
.JES134  ANOP
         IAZRESPA
&HXT     $MODULE
               $BUFFER,
               $COMWORK,
               $CMB,
               $DCT,
               $ERPL,
               $JCT,
               $CAT,
               $PCE,
               $JQE,
               $JOE,
               $HCT,
               $MIT,
               $PDDB,
               UCB,
               $PPPWORK,
               $MODMAP,
               $HASPEQU
HA$X&HXN $ENTRY BASE=R12             DEFINE ENTRY POINT
         AGO    .JESXXX
.JES136  ANOP
&HXT     $MODULE
               $BUFFER,
               $COMWORK,
               $CMB,
               $DCT,
               $ERPL,
               $JCT,
               $CAT,
                $PCE,
               $JQE,
               $JOE,
               $HCT,
               $MIT,
               $MODMAP,
               $PDDB,
               $PPPWORK,
               RESPA,
               RPL,
               UCB,
               $HASPEQU
HA$X&HXN $ENTRY BASE=R12             DEFINE ENTRY POINT
.JESXXX  ANOP
         MEND
E001     TITLE  'KB - JES2/SP OUTPUT SPOOLING UNDER VM'
*    HEXIT001  -   THE JES2/SP OUTPUT SPOOLING INTERFACE           *
*                    FOR VM/370,VM/SP                              *
*   THE JES2/SP EXIT 1 (OUTPUT SEPARATOR EXIT)                     *
*   ENABLING THE JES2 SUBSYSTEM OF THE MVS RUNNING UNDER VM/370    *
*   TO SPOOL VIRTUAL PRINTER/PUNCH OUTPUT TO THE READER OF THE     *
*   APPROPRIATE VIRTUAL MACHINE.  SPOOLING IS DONE TO THE SAME     *
*   READER CLASS AS THE SYSOUT OUTPUT CLASS OF THE PROCESSED       *
*   OUTPUT ELEMENT.  THE SPOOLING IS DONE UNDER FOLLOWING          *
*   ASSUMPTIONS:   1. NOTIFY JOB PARAMETER ABSENT:                 *
*   THE JOB OUTPUT WILL BE SPOOLED TO THE VIRTUAL MACHINE          *
*   WITH THE NAME EQUAL TO THE NAME OF THE PROCESSED JOB.          *
*                  2. NOTIFY JOB PARAMETER PRESENT:                *
* A.   IF /*JOBPARM FORMS=RSCS                                     *
*  THE JOB OUTPUT WILL BE SPOOLED TO THE RSCS VIRTUAL MACHINE WITH *
*    SYMBOLIC NAME &RSCS DEFINED AT THE START OF THE EXIT CODE.    *
*    THE OUTPUT ELEMENT WILL BE SPOOLED TO THE READER CLASS      *
*   OF RSCS EQUAL TO ITS SYSOUT OUTPUT CLASS.                    *
*    AFFECTED VIRTUAL DEVICE WILL BE TAGGED AS FOLLOWS:          *
*         TAG DEV CUU NODE MACHINE                               *
* WHERE: NODE    - PROGRAMMER'S NAME                             *
*        MACHINE - NOTIFY ARGUMENT                               *
*  AND FILE WILL BE CLOSED WITH THE NAME:                        *
*      FILENAME - JOBNAME                                        *
*      FILETYPE - RSC FOLLOWED BY JES2 JOB SERIAL NUMBER         *
*                 SUPPLIED WITH LEADING ZEROS                    *
*   IF THE ERROR OCCURS IN SPOOL OR TAG COMMAND EXECUTION THE    *
*  MESSAGE WILL BE ISSUED TO OPERATOR CONSOLE CONTROLLING        *
*   THE UNIT RECORD POOL (ROUTCDE=7) AND THE OUTPUT WILL BE      *
*  SPOOLED TO THE SYSTEM  WITH REQUEST TO HOLD THE OUTPUT.       *
*   THE OPERATOR SHOULD DECIDE WHERE TO SPOOL THE OUTPUT.        *
* B.   IF /*JOBPARM FORMS NOT RSCS                               *
*    THE JOB OUTPUT WILL BE SPOOLED TO THE VIRTUAL MACHINE WITH  *
*   THE NAME SPECIFIED IN THE NOTIFY PARAMETER.  IF THE MACHINE  *
*   TO BE SPOOLED TO WILL NOT BE FOUND IN THE VM/370 DIRECTORY   *
*   THE OUTPUT WILL BE DIRECTED TO THE LOCAL PRINTER OF VM/370.  *
*    THE OUTPUT ELEMENT WILL BE SPOOLED TO THE READER CLASS      *
*   OF VIRTUAL MACHINE HEQUAL TO ITS SYSOUT OUTPUT CLASS.        *
*    THE SPOOLED OUTPUT WILL BE SPOOLED WITH THE FOLLOWING       *
*   NAME:     FILENAME FILETYPE                                  *
*   WHERE:                                                       *
*   FILENAME EQUAL TO NOTIFY PARM OR JOBNAME IF NOTIFY ABSENT    *
*   FILETYPE EQUAL TO 1-ST 8 CHARACTERS OF THE PROGRAMMER'S      *
*   NAME FIELD (IF VALID FOR VM CLOSE) OR TO JOB FOLLOWED BY     *
*   JES2 SERIAL JOB NUMBER FILLED WITH LEADING ZEROS IF          *
*   PROGRAMMER'S NAME ABSENT OR INVALID (GIVING VMCLOSE ERR)     *
*   THE MESSAGE INDICATING CLOSE ERROR WILL BE ISSUED TO UNIT    *
*   RECORD POOL CONSOLE IN CASE OF THE CLOSE ERROR INDICATED BY  *
*   CP.  THE PRINTER WILL BE CLOSED WITHOUT FILENAME OPTION.     *
*   NOTE:  AFTER SUCCESSFUL SPOOLING INDICATED BY CP THE RETURN  *
*   CODEOF 08 IS RETURNED BY EXIT ASKING JES2/SP TO UNCONDITION- *
 *   ALLY OMIT THE STANDARD SEPARATOR PAGES AT THE BEGINNING AND  *
*   END OF THE JOB OUTPUT.                                       *
*    THE EXIT DOES NOT SUPPORT THE CONTINUATION PAGE.            *
*      JES2/SP USER EXIT 001 - VM OUTPUT SPOOLING INTERFACE      *
*   ON ENTRY:                                                    *
*  R00 - TYPE OF ENTRY                                           *
*        00 - START OF JOB PAGE OR CARD                          *
*        04 - CONTINUATION OF JOB PAGE                           *
*        08 - TRAILER PAGE OR CARD                               *
*  R01 - ADDRESS OF PRINT/PUNCH DCT                              *
*  R02-9 N/A                                                     *
*  R10   JCT ADDRESS                                             *
*  R11   HCT ADDRESS                                             *
*  R12   N/A                                                     *
*  R13   PCE ADDRESS                                             *
*  R14   RETURN ADDRESS                                          *
*  R15   ENTRY ADDRESS                                           *
*   ON RETURN:                                                   *
*  R00-1 N/A                                                     *
*  R15   RETURN CODE                                             *
*  RETURN CODES (R15):                                           *
*    00 - ADDITIONAL EXITS IF PRESENT TO BE TAKEN AND            *
*         STANDARD AND INSTALLATION SEPARATORS TO BE PRODUCED    *
*    04 - IGNORE ANY ADDITIONAL EXITS AND                        *
*         STANDARD AND INSTALLATION SEPARATORS TO BE PRODUCED    *
*    08 - PRODUCE INSTALLATION SEPARATOR AND                     *
*         SUPRESS THE STANDARD SEPARATOR UNCONDITIONALLY         *
*    12 - PRODUCE INSTALLATION SEPARATOR AND                     *
*         PRODUCE THE STANDARD SEPARATOR UNCONDITIONALLY         *
         EJECT
         MACRO
&N       WTOT  &TXT
         GBLC  &KBTRC
         AIF   ('&KBTRC' EQ 'YES').E01
         MEXIT
.E01     ANOP
         LR    R14.R1          SAVE R1
         WTO   &TXT,ROUTCDE=2
         LR    R1,R14
         MEND
* MACRO ISSUING CP COMMAND                                       *
         MACRO
&N       CPCMD &ADR,&LEN
         LRA   R15,&ADR
         LA    R1,&LEN
         DC    X'83',X'F1',X'0008'
         MEND
         TITLE  'KB - JES2/SP USER EXIT-001 VM SPOOLING INTERFACE'
*        SOME GLOBAL CONDITIONAL ASSEMBLY PARAMETERS             *
         GBLC  &KBTRC,&RSCS,&MSGHD,&JES2VER
&KBTRC   SETC  'NO'
&RSCS    SETC  'RSCS'
&MSGHD   SETC  '$EXIT001'
         HX#PRLOG HEXIT001
         TITLE  'KB - JES2/SP USER EXIT-001 VM SPOOLING INTERFACE'
*        RETURN CODE DEFINITIONS                                 *
RC#00    EQU   00
RC#04    EQU   04
RC#08    EQU   08
RC#12    EQU   12
* R0,R1,R15                        WORK REGISTERS                *
         TITLE  'KB - JES2/SP USER EXIT-001 VM SPOOLING INTERFACE'
         PRINT NOGEN
        $SAVE
         AIF   ('&JES2VER' EQ '136').USG136
         USING JCTDSECT,R10        JCT ADDRESSABILITY
          USING HCTDSECT,R11        HCT ADDRESSABILITY
         USING PCEDSECT,R13        PCE ADDRESSABILITY
         LR    R12,R15             ESTABLISH EXIT ADDRESSABILITY
         LR    R9,R1
         USING DCTDSECT,R9         DCT ADDRESSABILITY
         L     R8,PWKJOE           CURRENT (?) JOE ADDRESSABILITY
         USING JOEDSECT,R8
STIDPA   EQU   JCTXWRK             FOR DOUBLEWORD ALIGNMENT
         AGO   .USGXXX
.USG136  ANOP
         USING JCT,R10             JCT ADDRESSABILITY
         USING HCT,R11             HCT ADDRESSABILITY
         USING PCE,R13             PCE ADDRESSABILITY
         LR    R12,R15             ESTABLISH EXIT ADDRESSABILITY
         LR    R9,R1
         USING DCT,R9              DCT ADDRESSABILITY
         L     R8,PPPWKJOE         CURRENT (?) JOE ADDRESSABILITY
         USING JOE,R8
STIDPA   EQU   JCTXWRK+4           FOR DOUBLEWORD ALIGNMENT
UCBDSECT EQU   UCB
PRPUUCB  EQU   PPPUCB
.USGXXX  ANOP
* IDENTIFY YOURSELF                                              *
         ST    R0,PCEUSER0         SAVE PARM REGISTERS
        $ESTAE ,RECADDR=RET#00,NAME=HEX#001
         L     R0,PCEUSER0         SAVE PARM REGISTERS
         CH    R0,$H4              WHAT GIVEN
         BE    RET#00              CONTINUATION,DO NOTHING
         BL    VMCL#STP            STARTING PAGE
         BH    VMCL#ENP            ENDING PAGE
* R0 = 4 ASSUMED, TO BE TESTED LATER                             *
VMCL#STP  DS   0H
         WTOT  'BEGINPAGE'
* TRACE ACCOUNTING FIELD                                         *
         AIF   ('&KBTRC' NE 'YES').NFORM
         LA    R1,JCTXWRK          WORK AREA
         XC    0(4,R1),(R1)
         LA    R2,16               LEN+FLGS
         STH   R2,0(R1)
         MVI   02(R1),X'80'        FLAG
         MVC   04(4,R1),JCTFORMS
         MVC   08(4,R1),JOEFORM
         MVC   12(4,R1),DCTFORMS
         LA    R2,16(R1)           END OF MESSAGE
         XC    0(4,R2),0(R2)       MCS INFO
         MVI   2(R2),X'40'         MCS
         SVC   35
.NFORM   ANOP
         STIDP STIDPA
         CLI   STIDPA,X'FF'        ARE WE UNDER VM?
         BNE   RET#00              NO, DO NOTHING
         L     R14,PRPUUCB         UCBADDR OF THE DEVICE
         LH    R1,UCBCHAN-UCBDSECT(R14)  HEX CUU
         DC    X'83',X'1F',X'0024' GET VDEVBLOCK INFO
         BC    13,RET#00           IT IS A REAL DEVICE
         EJECT
*                BEGIN OF THE PAGE ENTRY                         *
*  CP SPOOL COMMAND BUILDER                                      *
*  SPOOL CUU <MACHINE NAME> CL <OUTCLASS>        MACHINE NAME    *
*  TAKEN FROM NOTIFY OR IF IT WAS NOT SPECIFIED FROM JOBNAME.    *
*  IF NOTIFY=RSCS SPECIAL ACTION IS TAKEN TO SPOOL TO            *
*  REMOTE NODE                                                   *
*             SPOOL CUU <&RSCS> CL <OUTCLASS>                    *
*             TAG DEV CUU <PROGRAMMER> <FORMS>                   *
*                           OR                                   *
*                 TAG DEV CUU <PROGRAMMER>                       *
 *                IF <FORMS>=<PROGRAMMER NAME>                    *
*     TO SUPPORT SPOOLING TO NODE ONLY (LIKE CALCOMP NODE)       *
         XC    FLGS,FLGS           INITIALIZE THE FLAGS
         L     R14,PRPUUCB         UCB ADDRESS
         MVC   SP#CUU(3),UCBNAME-UCBDSECT(R14) EBCDIC CUU
VMCLMSG  DS    0H
* WAS NOTIFY SPECIFIED, IF SO SPOOL TO IT                        *
         TM    JCTTSUID,255-C' '
         BZ    VMCLJOB             NO,USE THE JOBNAME
* IS IT TO BE SPOOLED ACROSS THE NETWORK                         *
         CLC   DCTFORMS(4),=C'RSCS'
         BE    VMCLRSC
         CLC   JCTFORMS(4),=C'RSCS'
         BNE   VMCLOCAL
VMCLRSC  DS    0H
*                 RSCS SUPPORT                                   *
         MVC   SP#MACH(8),RSCS
         MVC   SP#CLS+3(1),JOECURCL PRINT/PUNCH CLASS FROM JES TO VM
         CPCMD SPOOL.SPOOLL        ISSUE SPOOL COMMAND
         LTR   R1,R1               EXECUTED OK?
         BZ    VMCLTAG
         OI    FLGS,FL#HL          HOLD THE OUTPUT
         WTO   '&MSGHD - RSCS SPOOLING FAILED,SYSTEM,HOLD',ROUTCDE=7
         B     VMCLUSMI
*           CP TAG COMMAND BUILDER                               *
VMCLTAG  DS    0H
         OI    FLGS,FL#RS          RSCS SPOOLING ACTIVE
         MVC   TAG#CUU(3),UCBNAME-UCBDSECT(R14) EBCDIC CUU
         MVC   TAG#NODE(8),JCTPNAME
         MVC   TAG#MACH(8),$BLANKS BLANK OUT,TREAT AS A ROUTE
         CLC   JCTPNAME (L'JCTTSUID),JCTTSUID
         BNE   VMCLTAGF             FULL TAG
         B     VMCLTAGE
VMCLTAGF DS    0H
         MVC   TAG#MACH(L'JCTTSUID),JCTTSUID
VMCLTAGE DS    0H
         CPCMD TAG,TAGL
         LTR   R1,R1               EXECUTED OK?
         BZ    RET#08
         OI    FLGS,FL#HL          HOLD THE OUTPUT
         WTO   '&MSGHD - TAGGING FAILED,SYSTEM,HOLD',ROUTCDE=7
         B     VMCLUSMI            SPOOL TO THE SYSTEM INSTEAD
VMCLOCAL DS    0H
         MVC   SP#MACH(L'JCTTSUID),JCTTSUID SUPPORTS TSO/E EVENTUALLY
         MVI   SP#MACH+L'JCTTSUID,C' '  ENSURE 7CHAR TSUID EVENTUALLY
         B     VMCLSPC             EXECUTE THE COMMAND
VMCLJOB  DS    0H
         MVC   SP#MACH(8),JCTJNAME
VMCLSPC  DS    0H
         MVC   SP#CLS+3(1),JOECURCL PRINT/PUNCH CLASS FROM JES TO VM
         CPCMD SPOOL,SPOOLL
         LTR   R1,R1               EXECUTED OK?
         BZ    RET#08              SPOOLED TO USER,SEPARATOR OFF
* THE USERID MISSING IN THE DIRECTORY,SPOOL TO THE SYSTEM           *
VMCLUSMI DS    0H
         MVC   SS#CUU(3),UCBNAME-UCBDSECT(R14)    EBCDIC CUU
         MVC   SS#CLS+3(1),JOECURCL PRINT/PUNCH CLASS FROM JES TO VM
         MVC   SS#CUUH(3),UCBNAME-UCBDSECT(R14)   EBCDIC CUU
         MVC   SS#CLSH+3(1),JOECURCL PRINT/PUNCH CLASS FROM JES TO VM
         TM    FLGS,FL#HL          HOLD THE OUTPUT
         BO    VMCLUSH             YES
         CPCMD SPSYS,SPSYSL
         B     RET#00              SPOOLED TO THE SYSTEM,SEPARATOR ON
VMCLUSH  DS    0H
         CPCMD SPSYSH.SPSYSLH
         B     RET#08              TO THE SYSTEM,HOLD,SEPARATOR OFF
          EJECT
*               CP CLOSE COMMAND BUILDER                            *
*    CLOSE CUU NAME <JOBNAME> <PROGRAMMER>   (1ST 8 CHARS)          *
*  IF PROGRAMMER NAME NOT SPECIFIED OR INVALID FOR CP CLOSE         *
*            ( OR INVALID FOR VM CLOSE FORMAT)                      *
*           CLOSE CUU NAME <JOBNAME> <JOBNUMBER>                    *
VMCL#ENP DS    0H
         WTOT  'ENDPAGE'
         STIDP STIDPA
         CLI   STIDPA,X'FF'        ARE WE UNDER VM?
         BNE   RET#00              NO, DO NOTHING
* CHECK IF THE REAL DEVICE                                          *
         L     R14,PRPUUCB         UCBADDR OF THE DEVICE
         LH    R1,UCBCHAN-UCBDSECT(R14)  HEX CUU
         DC    X'83',X'1F',X'0024' GET VDEVBLOK INFO
         BC    13,RET#00           IT IS A REAL DEVICE
         L     R14,PRPUUCB         UCBADDR OF THE DEVICE
         MVC   CL#CUU(3),UCBNAME-UCBDSECT(R14)   EBCDIC CUU
         MVC   CL#FN(8),JCTJNAME
         TM    FLGS,FL#RS          WAS RSCS SPOOLING ACTIVATED
         BO    VMCLJID             YES
         CLI   JCTPNAME,C' '       SPECIFIED
         BE    VMCLJID             NO,USE JOBNUMBER
         MVC   CL#FT(8),JCTPNAME
         B     VMCLOSE             CLOSE THE SPOOL FILE
VMCLJID  DS    0H
         MVC   CL#FT(8),JCTJOBID
         OC    CL#FT+3(5),=5C'0'   FILL FREE PLACES
         TM    FLGS,FL#RS          WAS RSCS SPOOLING ACTIVATED
         BZ    VMCLOSE             NO
         MVC   CL#FT(3),=C'RSCS'   INDICATE IT
VMCLOSE  DS    0H
         CPCMD CLOSE,CLOSEL
         LTR   R1,R1               CLOSE OK?
         BZ    VMCLSPOF            YES,SPOOL BACK TO THE SYSTEM
* SOMETHING WENT WRONG, USE JOBNUMBER                            *
         WTO   '&MSGHD - CLOSE FAILED,JOBNUMBER USED',ROUTCDE=7
         MVC   CL#FT(8),JCTJOBID
         OC    CL#FT+3(5),=5C'0'   FILL FREE PLACES
         CPCMD CLOSE,CLOSEL
         LTR   R1,R1               CLOSE OK?
         BZ    VMCLSPOF            YES,SPOOL BACK TO THE SYSTEM
* RATHER IMPOSSIBLE TO GO WRONG BUT WE DO NOT WANT TO CHAIN      *
*   OUTPUTS OF DIFFERENT JOBS, SO CLOSE WITHOUT NAME             *
         WTOT  'WRCLOSE'
         WTO   '&MSGHD - CLOSE JOBNUMBER FAILED',ROUTCDE=7
         CPCMD CLOSE,CLOSER        MUST BE OK
*        CP SPOOL CUU OFF BUILDER                                *
VMCLSPOF DS    0H
         MVC   SO#CUU(3),UCBNAME-UCBDSECT(R14)   EBCDIC CUU
         CPCMD SPOFF,SPOFFL
VMCLNTVE DS    0H
         B     RET#08              NO STAND SEPARATOR
         EJECT
*        RETURN TO HASP, RETURN CODE IN R15                      *
RET#00   DS    0H
         LA    R15,RC#00
         B     RETURN
RET#04   DS    0H
         LA    R15,RC#04
         B     RETURN
RET#08   DS    0H
         LA    R15,RC#08
         B     RETURN
RET#12   DS    0H
         LA    R15,RC#12
          B     RETURN
RETURN   DS    0H
        $RETURN RC=(R15)           RETURN TO HASP
         EJECT
*        FLAGS,TEXTS AND CONSTANTS                               *
RSCS     DC    CL8'&RSCS'
FLGS     DS    X
FL#RS    EQU   X'80'               RSCS SPOOLING IN PROCESS
FL#HL    EQU   X'40'               SPOOLING FAILED,SYSOUT HOLD
*******************TAG DEV CUU NODE MACHINE **********************
TAG      DC    CL4'TAG'
         DC    CL4'DEV'
TAG#CUU  DC    CL4' '
TAG#NODE DC    CL9' '
TAG#MACH DC    CL8' '
TAGL     EQU   *-TAG
*******************SP CUU MACHINE CL <CLASS> *********************
SPOOL    DC    CL3'SP'
SP#CUU   DC    CL4' '
SP#MACH  DC    CL9' '
SP#CLS   DC    CL4'CL A'
         DC    C' NOHOLD'
SPOOLL   EQU   *-SPOOL
****************** SP CUU OFF ************************************
SPOFF    DC    CL3'SP'
SO#CUU   DC    CL4' '
         DC    C'OFF'
SPOFFL   EQU   *-SPOFF
****************** SP CUU SYSTEM CL <CLASS> (NOHOLD) *************
SPSYS    DC    CL3'SP'
SS#CUU   DC    CL4' '
         DC    C'SYSTEM '
SS#CLS   DC    CL4'CL A'
         DC    CL4' NOHOLD'
SPSYSL   EQU   *-SPSYS
****************** SP CUU SYSTEM CL <CLASS> (HOLD) ***************
SPSYSH   DC    CL3'SP'
SS#CUUH  DC    CL4' '
         DC    C'SYSTEM '
SS#CLSH  DC    CL4'CL A'
         DC    CL4' HOLD'
SPSYSLH  EQU   *-SPSYS
****************** C CUU NAME FILENAME FILETYPE ******************
CLOSE    DC    CL2'C'
CL#CUU   DC    CL4' '
CLOSER   EQU   *-CLOSE
         DC    CL5'NAME'
CL#FN    DC    CL9' '
CL#FT    DC    CL8' '
CLOSEL   EQU   *-CLOSE
         LTORG
        $MODEND
         END
Krzysztof Bytnerowicz
Regional Software Specialist
National Advanced Systems (Australia)   ) Krzysztof Bytnerowicz 1988










