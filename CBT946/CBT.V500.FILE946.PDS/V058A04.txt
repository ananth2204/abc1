Displaying a user's privilege class

The EXEC described here provides you with the ability to find
the privilege class of any logged-on user.  I use this to prevent
EXECs from failing that require a class other than G.

The EXEC, PRIVCLXA, runs on a VM/XA system and in an
XA virtual machine.  It is currently working on VM/XA SP 2.1 9002.


PFRIVCLXA ASSEMBLE

PRIVCLXA CSECT
* MODULE NAME - PRIVCLXA
* FUNCTION - TO FIND USER-ID'S PRIVILEGE CLASSES
* ENTRY CONDITIONS -
*        R12 - BASE ADDRESS OF MODULE
*        R1  - PARMS
* EXIT CONDITIONS -
*        NORMAL - R15 = 0
*        R15 =  100   USER NOT LOGGED ON
*        R15 =  200   DIAG 8 FAILED
*        R15 =  300   USER NOT PRIVILEDE FOR LOCATE
* TABLES/WORKAREAS
*        NONE
* REGISTER USAGE
*        R1      - PARMLIST
*        R1,2,3  - WORK REGISTERS FOR DIAG
*        R12     - BASE OF MODULE
*        R14 R15 - LINKAGE REGISTERS
*.
         EJECT
         USING PRIVCLXA,R12
         SAVE  (14,12),,*
         REGEQU
*             COMMAND FORMAT
*
* +----------+--------+-----+
* | PRIVCLXA | USERID | STK |
* +----------+--------+-----+
*
* RESPONSE
* STK   : PASS RESULTS TO STACK DEFAULT IS TO DISPLAY
*.
         PRINT NOGEN
         CLI   8(R1),X'FF'       ANY PARMS ?
         BNE   FENCE             YUP
         LINEDIT TEXT='NEED USERID PLEASE'
         B     ENDIT
FENCE    EQU   *
         CLI   16(R1),X'FF'      MORE PARMS ?
         BE    AGAIN             NOPE
         MVC   TOK2(8),16(R1)
AGAIN    MVI   BUFFER,X'40'
         MVC   BUFFER+1(129),BUFFER CLEAR THE BUFFER
         MVC   BUFFER(8),8(R1)   SAVE USERID
         MVI   HOLD,X'40'
         MVC   HOLD+1(7),HOLD    CLEAR
         MVI   USER,X'40'
         MVC   USER+1(7),HOLD    CLEAR
         ZAP   PVALUE,=P'9'
         BE    ENDIT
         LR    R8,R0
         BCTR  R8,R0
         EX    R8,MOVE
         LA    R6,LOCATE
         LA    R7,BUFFER
         LA    R8,15
         ICM   R8,B'1000',=X'40' PLEASE RETURN CMMD RESPONSE
         LA    R9,130
         DC    X'83680008'
         BNZ   ERR1
         CLC   USER,BUFFER       IF USER STILL IN BUFFER LOC NOT LEGAL
         BE    ERR2
         CLC   =C'VMDBK',BUFFER
         BNE   NOLOG
         MVC   ADDR(8),BUFFER+11 (THE LOCATED REAL ADDRESS)
         L     R2,=F'4'
         LA    R3,ADDR
         LA    R4,ADDR
         LA    R5,ADDR+1
TRANS    TR    0(1,R4),TAB1
         TR    0(1,R5),TAB2
         MVC   0(1,R3),0(R4)
         MVN   0(1,R3),0(R5)
         LA    R3,1(R3)
         LA    R4,2(R4)
         LA    R5,2(R5)
         BCT   R2,TRANS
         L     R5,ADDR
         LA    R2,X'3C0'         OFFSET INTO VMDBK  (VMDPCL)
         AR    R5,R2
         ST    R5,ADDR
         LA    R2,ADDR
         LA    R3,1
         LA    R4,OUTPUT         GET 4 BYTES OF CLASSES
         LA    R14,XACONT1       NEED TO DO  31 NOW
         O     R14,MFLIP1        TURN ON HI ORDER BIT
         BSM   0,R14             FORCE AMODE 31
XACONT1  EQU   *
         DC    X'83230004'
         LA    R14,XACONT2       NEED TO DO  24 NOW
         O     R14,MFLIP2        TURN OFF HI ORDER BIT
         BSM   0,R14             FORCE AMODE 24
XACONT2  EQU   *
         SR    R2,R2
         SR    R3,R3
         SR    R5,R5
         IC    R2,OUTPUT         1ST BYTE ONLY (FULL WORD ALIGNED)
         LA    R10,HOLD+7
NXTBIT   SR    R3,R3
         SP    PVALUE,=P'1'
         CP    PVALUE,=P'0'
         BE    DISPLAY
         SRDL  R2,1
         SRL   R3,31
         C     R3,=F'1'
         BNE   NXTBIT
         UNPK  UVALUE,PVALUE
         MVC   0(1,R10),UVALUE
         S     R10,=F'1'
         B     NXTBIT
DISPLAY  EQU   *
         CLC   TOK2(3),=C'STK'  STACK ?
         BNE   DISP2
         MVC   NAMETAB+8(8),=C'       '
         MVC   NAMETAB(8),HOLD
         SR    R15,R15           SET RETCODE OK
         B     STACKEM
ERR1     EQU   *
         LA    R15,200           DIAG 8 FAILED
         B     ENDIT
ERR2     EQU   *
         LA    R15,300           LOCATE ILLEGAL THIS USER
         B     ENDIT
DISP2    EQU   *
         LINEDIT SUB=(CHARA,USER,CHARA,HOLD),RENT=NO,DOT=NO,          XX
               TEXT='........ HAS PRIVILEGE CLASS(ES) -- ........'
ENDIT    EQU   *
         RETURN (14,12),,RC=(15)
NOLOG    EQU   *
         LA    R15,100            RESET RETCODE TO NOT LOGON
         CLC   TOK2(3),=C'STK'   STACK ?
         BNE   DISP1
         MVC   NAMETAB(16),=C'NOT LOGGED ON   '
STACKEM  DS    0H
         LR    R11,R15            SAVEIT
         LA    R1,STACK           POINT TO COMMAND
         SVC   202
         DC    AL4(STACKERR)
         LR    R15,R11
         B     ENDIT
STACK    DS    0F                 STACK PLIST
STKCMD   DC    CL8'ATTN'
STKORDR  DC    CL4'FIFO'
STKLEN   DC    AL1(NAMEEND-NAMETAB)   LENGTH TO STACK
STKADDR  DC    AL3(NAMETAB)       ADDR OF LIST TO BE PASSED
STACKERR DS    0H
NAMETAB  DS    4F
NAMEEND  EQU   *
DISP1    EQU   *
         WRTERM 'USER SPECIFIED IS NOT LOGGED ON'
         B     ENDIT
MOVE     MVC   LOCATE+7(0),BUFFER
F        DS    D'0'
OUTPUT   DS    F
PVALUE   DC    PL1'9'
UVALUE   DS    CL1
LOCATE   DC    C'LOCATE '
USER     DC    C'         '
HOLD     DC    CL8' '
LENGTH   DC    D'0'
MFLIP1   DC    X'80000000'  TURN ON 31
MFLIP2   DC    X'00000000'  TURN ON 24
ADDR     DS    XL8
TAB1     DC    X'000102030405060708090A0B0C0D0E0F'
         DC    X'101112131415161718191A1B1C1D1E1F'
         DC    X'202122232425262728292A2B2C2D2E2F'
         DC    X'303132333435363738393A3B3C3D3E3F'
         DC    X'404142434445464748494A4B4C4D4E4F'
         DC    X'505152535455565758595A5B5C5D5E5F'
         DC    X'606162636465666768696A6B6C6D6E6F'
         DC    X'707172737475767778797A7B7C7D7E7F'
         DC    X'80C1C2C3C4C5C6C7C8C98A8B8C8D8E8F'
         DC    X'90D1D2D3D4D5D6D7D8D99A9B9C9D9E9F'
         DC    X'A0A1E2E3E4E5E6E7E8E9AAABACADAEAF'
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
         DC    X'C0A0B0C0D0E0F0C7C8C9CACBCCCDCECF'
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'
         DC    X'00102030405060708090FAFBFCFDFEFF'
TAB2     DC    X'000010203040506070809A0B0C0D0E0F'
         DC    X'101112131415161718191A1B1C1D1E1F'
         DC    X'202122232425262728292A2B2C2D2E2F'
         DC    X'303132333435363738393A3B3C3D3E3F'
         DC    X'404142434445464748494A4B4C4D4E4F'
         DC    X'505152535455565758595A5B5C5D5E5F'
         DC    X'606162636465666768696A6B6C6D6E6F'
         DC    X'707172737475767778797A7B7C7D7E7F'
         DC    X'80C1C2C3C4C5C6C7C8C98A8B8C8D8E8F'
         DC    X'90D1D2D3D4D5D6D7D8D99A9B9C9D9E9F'
         DC    X'A0A1E2E3E4E5E6E7E8E9AAABACADAEAF'
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
         DC    X'C00A0B0C0D0E0FC7C8C9CACBCCCDCECF'
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'
         DC    X'00010203040506070809FAFBFCFDFEFF'
         LTORG
BUFFER   DS    CL130
TOK2     DS    D
         END

Ken Garland
Systems Programmer
Candle Corporation  (USA)

