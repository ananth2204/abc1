 Calendar EXEC
This REXX program will produce a monthly calendar for any month required,
starting from January 1583 to December 9999.  The program will require input of
the month and year of the calendar requested.  This input can be in the form of
parameters on the procedure call or, if there are no parameters, the program
will prompt for input.  If no input is given, the current month and year will be
used to generate the calendar.
The command formats are:
     CALENDAR DECEMBER 1988
     CALENDAR DEC 1988
     CALENDAR 12 1988
     CALENDAR 12 88
     CALENDAR 12
     CALENDAR (ENTER AT PROMPT, see note 1)
All will produce a calendar for December 1988.
Note 1: this format will produce a calendar of the current month.  This example
assumes that the current system date is in the month of December 1988.
     CALENDAR HELP
This command will provide the user with information on how to use this program.
The format of the procedure call will be calendar <month> <year>.  If the year
is expressed as a one or two-digit number, the current century will be used.  If
only one parameter is given it will be assumed to be a month and the calendar
produced will be that of the current year.
PARSE ARG INPUTLINE
IF TRANSLATE(INPUTLINE) = 'HELP' THEN DO
   CLRSCRN
   CALL CALHELP
   INPUTLINE = ''
   END
IF (WORDS(INPUTLINE) = 0) THEN DO
   CLRSCRN
   SAY 'PLEASE ENTER THE MONTH AND YEAR '
   SAY 'YOU WOULD LIKE A CALENDAR FOR.'
   PULL INPUTLINE
END
IF (WORDS(INPUTLINE) = 0) THEN DO
   TEMP = DATE(S)
   CURYEAR = SUBSTR(TEMP,1,4)
   CURMONTH = SUBSTR(TEMP,5,2)
   INPUTLINE = CURMONTH CURYEAR
END
ELSE
   IF (WORDS(INPUTLINE) = 1) THEN DO
      TEMP = DATE(S)
      CURYEAR = SUBSTR(TEMP,1,4)
      INPUTLINE = INPUTLINE CURYEAR
   END
   ELSE
      IF (WORDS(INPUTLINE) > 2) THEN DO
         PARSE VAR INPUTLINE CURMON CURYEAR .
         INPUTLINE = CURMON CURYEAR
      END
PARSE VAR INPUTLINE MON YEAR .
/* IF THE MONTH IS AN ALPHANUMERIC STRING */
IF DATATYPE(MON,A) THEN
   IF ¬DATATYPE(MON,W) THEN DO
      MON = TRANSLATE(MON)
      MON = SUBSTR(MON,1,3,'.')
      SELECT
         WHEN MON = 'JAN' THEN MON = 1
         WHEN MON = 'FEB' THEN MON = 2
         WHEN MON = 'MAR' THEN MON = 3
         WHEN MON = 'APR' THEN MON = 4
         WHEN MON = 'MAY' THEN MON = 5
         WHEN MON = 'JUN' THEN MON = 6
         WHEN MON = 'JUL' THEN MON = 7
          WHEN MON = 'AUG' THEN MON = 8
         WHEN MON = 'SEP' THEN MON = 9
         WHEN MON = 'OCT' THEN MON = 10
         WHEN MON = 'NOV' THEN MON = 11
         WHEN MON = 'DEC' THEN MON = 12
         OTHERWISE             MON = 0
      END
   END
IF DATATYPE(YEAR,W) THEN DO
   IF LENGTH(YEAR) ¬> 4 THEN DO
      IF LENGTH(YEAR) = 1 THEN DO
         TEMP = DATE(S)
         CENT = (SUBSTR(TEMP,1,2)
         YEAR = CENT||0||YEAR
      END
      ELSE NOP
      IF LENGTH(YEAR) = 2 THEN DO
         TEMP = DATE(S)
         CENT = SUBSTR(TEMP,1,2)
         YEAR = CENT||YEAR
      END
      ELSE NOP
   END
   ELSE DO
      SAY 'INVALID YEAR. ACCEPTABLE YEARS RANGE FROM 1583 TO 9999.'
      EXIT 5
   END
END
ELSE DO
      SAY 'INVALID YEAR. ACCEPTABLE YEARS RANGE FROM 1583 TO 9999.'
   EXIT 5
END
IF (YEAR > 9999) | (YEAR < 1583) THEN DO
   SAY 'YEAR OUT OF RANGE. ACCEPTABLE YEARS RANGE FROM 1583 TO 9999.'
   EXIT 5
END
IF (MON > 12) | (MON < 1) THEN DO
   SAY 'MONTH OUT OF RANGE. ACCEPTABLE VALUES RANGE FROM 1 TO 12,'
   SAY 'OR JANUARY .. DECEMBER (MINIMUM ABBREVIATION OF 3 LETTERS).'
   EXIT 5
END
MON = MON * 1
MAKEBUF
PUSH 0      31     28     31     30     31     30     31     31
PULL DAYS.0 DAYS.1 DAYS.2 DAYS.3 DAYS.4 DAYS.5 DAYS.6 DAYS.7 DAYS.8
PUSH 30     31      30      31
PULL DAYS.9 DAYS.10 DAYS.11 DAYS.12
DROPBUF
DAYADVANCE = YEAR - 1583
NUMBEROFLEAP = (DAYADVANCE + 2) % 4
IF YEAR / 100 = YEAR % 100 THEN /* CURRENT YEAR IS CENTURY */
   IF YEAR / 400 = YEAR % 400 THEN DO
                                     /*CURRENT YEAR IS QUAD-CENTURY*/
      DAYS.2 = 29
   END
   ELSE NOP
ELSE
   IF YEAR // 4 = 0 THEN DO
      DAYS.2 = 29
   END
IF YEAR < 1600 THEN
   TYEAR = 0
ELSE
   TYEAR = YEAR - 1600
CENTURYADJUST = (TYEAR % 400) - (TYEAR % 100)
BASEDAY = 6     /* JAN 1 1583 WAS ON SATURDAY */
 STARTDAY = 0
DO I = 1 TO MON-1
   STARTDAY = STARTDAY + DAYS.I
END
CURRENTDAY = (BASEDAY+DAYADVANCE+NUMBEROFLEAP+CENTURYADJUST+STARTDAY)//7
SELECT
   WHEN MON = 1 THEN MONTHNAME = 'JANUARY  '
   WHEN MON = 2 THEN MONTHNAME = 'FEBRUARY '
   WHEN MON = 3 THEN MONTHNAME = 'MARCH    '
   WHEN MON = 4 THEN MONTHNAME = 'APRIL    '
   WHEN MON = 5 THEN MONTHNAME = 'MAY      '
   WHEN MON = 6 THEN MONTHNAME = 'JUNE     '
   WHEN MON = 7 THEN MONTHNAME = 'JULY     '
   WHEN MON = 8 THEN MONTHNAME = 'AUGUST   '
   WHEN MON = 9 THEN MONTHNAME = 'SEPTEMBER'
   WHEN MON = 10 THEN MONTHNAME = 'OCTOBER  '
   WHEN MON = 11 THEN MONTHNAME = 'NOVEMBER '
   WHEN MON = 12 THEN MONTHNAME = 'DECEMBER '
   OTHERWISE          MONTHNAME = 'ERROR    '
END
STARTFLAG = OFF
DAYCOUNT = 0
DO I = 1 TO 6
   DO J = 1 TO 7
      IF (STARTFLAG = OFF) & (CURRENTDAY + 1 ¬= J) THEN DO
         T.I.J = '       '
      END
      ELSE DO
         STARTFLAG = ON
      END
      IF (STARTFLAG = ON) & (DAYCOUNT < DAYS.MON) THEN DO
         DAYCOUNT = DAYCOUNT + 1
         IF I ¬=6 THEN
            T.I.J = LEFT(DAYCOUNT,7,' ')
         ELSE
            T.I.J = RIGHT(DAYCOUNT,7,' ')
      END
      ELSE
        T.I.J = '       '
   END
END
CLRSCRN
MAKEBUF
SAY '---------------------------------------------------------------'
SAY '| 'MONTHNAME'                                             'YEAR' |'
SAY '---------------------------------------------------------------'
SAY '| SUNDAY | MONDAY |TUESDAY |WEDNESDAY|THURSDAY|  FRIDAY |SATURDAY|'
SAY '----------------------------------------------------------------'
SAY '| 'T.1.1'| 'T.1.2'| 'T.1.3' | 'T.1.4' | 'T.1.5'| 'T.1.6'| 'T.1.7'|'
SAY '|        |        |         |         |        |        |        |'
SAY '----------------------------------------------------------------'
SAY '| 'T.2.1'| 'T.2.2'| 'T.2.3' | 'T.2.4' | 'T.2.5'| 'T.2.6'| 'T.2.7'|'
SAY '|        |        |         |         |        |        |        |
SAY '----------------------------------------------------------------'
SAY '| 'T.3.1'| 'T.3.2'| 'T.3.3' | 'T.3.4' | 'T.3.5'| 'T.3.6'| 'T.3.7'|'
SAY '|        |        |         |         |        |        |        |'
SAY '----------------------------------------------------------------'
SAY '| 'T.4.1'| 'T.4.2'| 'T.4.3' | 'T.4.4' | 'T.4.5'| 'T.4.6'| 'T.4.7'|'
SAY '|        |        |         |         |        |        |        |'
SAY '----------------------------------------------------------------'
SAY '| 'T.5.1'| 'T.5.2'| 'T.5.3' | 'T.5.4' | 'T.5.5'| 'T.5.6'| 'T.5.7'|'
SAY '| 'T.6.1'| 'T.6.2'| 'T.6.3' | 'T.6.4' | 'T.6.5'| 'T.6.6'| 'T.6.7'|'
SAY '----------------------------------------------------------------'
EXIT

/* HELP ROUTINE */
 CALHELP: PROCEDURE
SAY ' CALENDAR WILL DISPLAY ON YOUR TERMINAL SCREEN A CALENDAR FOR '
SAY ' ANY MONTH THAT YOU WOULD LIKE TO SEE RANGING FROM JANUARY '
SAY ' 1583 THRU DECEMBER 9999.  THE PROGRAM REQUIRES TWO OPTIONAL '
SAY ' PIECES OF INFORMATION FOR INPUT.  THE FIRST PARAMETER IS'
SAY ' CONSIDERED TO BE THE MONTH REQUESTED.  THIS CAN TAKE THE'
SAY ' FORMAT OF THE NAME OF THE MONTH (EG: MARCH), OR THE NUMBER'
SAY ' OF THE MONTH (EG: 3, FOR MARCH).  ALTERNATIVELY, THE MONTH '
SAY ' CAN BE ABBREVIATED TO THE FIRST THREE CHARACTERS OF THE '
SAY ' NAME (EG: SEP FOR SEPTEMBER.'
SAY ' '
SAY ' THE SECOND PARAMETER IS CONSIDERED TO BE THE YEAR OF THE '
SAY ' CALENDAR.  THIS CAN BE A ONE OR TWO DIGIT NUMBER THAT WILL '
SAY ' BE INTERPRETED AS A YEAR IN THE CURRENT CENTURY, OR A FOUR '
SAY ' DIGIT NUMBER THAT WILL BE A SELF DEFINING YEAR. A THREE '
SAY ' DIGIT NUMBER IS NOT REPRESENTATIVE OF ANY SINGLE YEAR, '
SAY ' AND IS THEREFORE INVALID.  IF NO PARAMETERS ARE PASSED '
SAY ' INTO THE PROGRAM, IT WILL PROMPT YOU FOR MONTH AND YEAR,'
SAY ' IF YOU SIMPLY PRESS RETURN AT THIS POINT, THE CALENDAR'
SAY ' FOR THE CURRENT MONTH WILL BE CONSTRUCTED. '
SAY ' '
SAY ' PRESS RETURN TO CONTINUE'
PULL
RETURN
ÝEditor's note: the Gregorian calendar was introduced by the decree of Pope
Gregory XIII in 1582.  However, it was not adopted in the UK until 1752.¨
Lawrence E Rondot
Software Programmer
Purdue University at Fort Wayne (USA)   ) Xephon 1988





































