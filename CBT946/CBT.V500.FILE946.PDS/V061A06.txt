Mailing utility (continued)

This month we continue publishing FNBNOTES, a fullscreen
'electronic' mailing utility that is easier to use and more
effective than the IBM supplied NOTE utility.

PF8 or PF20 - Forward

PF8 scrolls your notes forward one screen if you have 20 notes
or more and you are not at the bottom.  If you are already at
the bottom or you have fewer than 20 notes, nothing happens.

PF9 or PF21 - Top

PF9 moves you to the top of your 'notes-list' if you are not
already at the top.  If you are already at the top, nothing
happens.

PF10 or PF22 - Bottom

PF10 moves you to the bottom of your 'notes-list' if you are not
already at the bottom and you have 20 notes or more; otherwise
nothing happens.

PF11 or PF23 - XEDIT

Whenever you wish to make a change to an existing note or
read an existing note, you use PF11.  This is regardless of the
status of the file.  Therefore you can edit notes you have
received from other users or notes you have created yourself.

To use PF11 you simply move the cursor to the desired note
and press PF11.  This will put you into an environment similar
to the one shown in Figure 3 (see last month's issue), except
the file-id will be user-id FNMAIL2 A1.  From here you are in
an XEDIT environment and can change the note as you see fit.
There are, however, a few restrictions:

o      Any line from 1 to 13 inclusive must not be deleted.  If it
      is, unexpected results may occur.

o      You can change the information following the headings
      'Title:' and 'Send to:' only.  If you do this, ensure that you
      start in the same column (19).  If you change information
      following any of the other headings, unexpected results
      may occur.

When you have finished editing/reading, enter FILE or QQUIT
on the command line, depending whether you wish to save the
changes or not.

Note: unlike a normal XEDIT environment the date and time
stamps won't change, even if you alter the note.

PF12 or PF24 - Print

By moving the cursor to a desired note and hitting PF12, that
note is sent to the VM printer.  It is automatically converted to
upper case and is sent with the name user-id FNMAIL A.


GENERAL USAGE NOTES

The following are some general points worth noting:

o      When you start to receive/create notes a file is created on
      your A disk called FNBNOTES REPOS A.  This file is
      your notes repository - all your notes are held in this one
      file.  This file should not be renamed, discarded, or
      internally altered.

      Note: if, at any point, you delete all your notes, via 'notes-
      list' and PF4, or simply don't have any notes, the file
      FNBNOTES REPOS A will not be present.  It is only
      created when you have at least one note.

o      One other file may be present and that is D-LNOTES user-
      id A.  It is created by hitting PF5.  To gain access to this
      file you hit PF5.  However, you can XEDIT this file when
      you are not in FNBNOTES, eg from your filelist, but you
      won't get any syntax checking (until the next time you go
      in using PF5, or you send a note using PF6).  You can also
      discard this file, if you wish, but you will obviously lose
      your D-name definitions.  However, if you do discard this
      file, hitting PF5 will generate a new base copy for you.

o      If you wish to get other files you have access to included in
      a note, simply hit PF11 against the note that you want to
      contain the additional material.  Then move down the note
      and make the line you want the additional material in
      follow the current line.  On the command line type:
      GET fn ft fm

      Where fn, ft and fm are the filename, filetype and
      filemode, respectively, of the file you wish to 'get'.  Then
      type FILE on the command line.

o      Notes are sent to users in the format of reader files with the
      name from FNMAIL A, where 'from' is the user-id of the
      sender of the note.  Therefore if you are looking on your
      reader and encounter files with a filetype of FNMAIL, this
      means that these are notes waiting to be received by you
      when going into FNBNOTES.  They should not be
      discarded but received by FNBNOTES.

      Also FNBNOTES uses FNMAIL, FNMAIL1, and
      FNMAIL2 as filetypes for temporary disk files which it
      erases as part of its own clean-up routines.  Therefore, you
      should not name any files with FNMAIL as all or part of a
      filetype on your A disk because FNBNOTES may erase them.

o      For performance reasons, it is in your interest to delete
      notes that are really no longer required, especially large notes.

o      FNBNOTES allows you, if you wish, to use FNBNOTES
      REPOS A in packed format.

o      When sending a note to somebody, as was mentioned
      earlier, a message is sent to that user.  However, at some
      time a note is bound to be sent to somebody who is not
      logged on.  This is not a problem at all except that the user
      who receives the note won't know about it unless they go
      into FNBNOTES.  To overcome this, all CMS users can
      optionally enter the following on the last line of their
      PROFILE EXEC (but before 'Exit', if present):

      EXEC NOTECHK

      This simply means that, every time you log on, a routine
      checks your reader to see if you have any unreceived
      notes.  If you have, you are told; if you haven't, nothing happens.


FNBNOTES EXEC

 /* THIS EXEC INITIATES THE FNOTESNB XEDIT MACRO AND OTHER RELEVANT */
 /* MACROS.                             */
 VMFCLEAR
 'XEDIT FNOTESNB XEDIT A (PROFILE FNOTESNB'
 EXIT


NOTECHK EXEC

 /* THIS EXEC SHOULD BE RUN FROM YOUR PROFILE EXEC BY PLACING   */
 /* 'EXEC NOTECHK' JUST BEFORE THE 'EXIT' STATEMENT, IF PRESENT,*/
 /* OR ON THE LAST LINE IF NOT. THIS EXEC SIMPLY TELLS THE USER */
 /* TO INITIATE FNBNOTES IF THERE ARE ANY READER FILES WAITING  */
 /* TO BE RECEIVED.                                             */
 'SET CMSTYPE HT'
 MAKEBUF
 'EXECIO * CP ( STRING Q RDR 'USERID()' ALL'
 PULL CHECKIT
 IF WORD(CHECKIT,1) = 'HCPCQF003E' THEN DO
                                     'EXECIO * CP ( STRING Q RDR ALL'
                                     PULL RUBBISH
                                     END
 COUNT = 0
 DO QUEUED()
    PULL READER_FILE
    IF FIND(READER_FILE,'FNMAIL') = 0 THEN ITERATE
     ELSE COUNT = COUNT + 1
 END
 'SET CMSTYPE RT'
 IF COUNT = 0 THEN EXIT
 IF COUNT = 1 THEN DO
              SAY
              SAY 'YOU HAVE 1 NOTE WAITING TO BE RECEIVED -',
                  'PLEASE ENTER "FNBNOTES"'
              SAY 'TO RECEIVE IT.'
              SAY
              EXIT
             END
 SAY
 SAY 'YOU HAVE 'COUNT' NOTES WAITING TO BE RECEIVED -',
     'PLEASE ENTER "FNBNOTES"'
 SAY 'TO RECEIVE THEM.'
 SAY
 EXIT


D-LNOTEV EXEC

 /* THIS EXEC VERIFIES THAT ENTRIES ARE LEGAL IN THE D-LNOTES FILE */
 /* IE THAT VALID CMS USERS ARE LISTED.                            */
 OKAY = 0
 'SET CMSTYPE HT'
 'STATE D-LNOTES 'USERID()' A'
 CODE = RC
 'SET CMSTYPE RT'
 IF CODE <> 0 THEN EXIT 0
 MAKEBUF
 'EXECIO * DISKR D-LNOTES 'USERID() 'A 1 ( LOCATE /-------/ FINIS'
 CODE = RC
 IF CODE <> 0 THEN SIGNAL BAD_FILE
 PULL . LINE
 DROPBUF
 IF LINE <> 34 THEN SIGNAL BAD_FILE
 MAKEBUF
 'EXECIO * DISKR D-LNOTES 'USERID()' A 34 ( LOCATE /=======/ FINIS'
 CODE = RC
 IF CODE <> 0 THEN SIGNAL BAD_FILE
 PULL . LINE
 DROPBUF
 IF LINE <> 37 THEN SIGNAL BAD_FILE
 MAKEBUF
 NUM = 0
 DO FOREVER
   NUM = NUM + 1
   LINE = NUM + 37
   'EXECIO 1 DISKR D-LNOTES 'USERID()' A' LINE
   IF RC <> 0 THEN LEAVE
   IF QUEUED() = 2 THEN DO
                         PULL . .
                         PULL SOURCE.NUM
                        END
    ELSE PULL SOURCE.NUM
   CALL CHECK_LINE
 END
 DESBUF
 'EXECIO 0 DISKR D-LNOTES 'USERID()' A ( FINIS'
 EXIT 0
CHECK_LINE:
 IF WORDS(SOURCE.NUM) = 0 THEN RETURN
 DNAME = SUBSTR(SOURCE.NUM,1,8)
 IF DNAME = '        ' THEN SIGNAL NO_DNAME
 IF SUBSTR(DNAME,1,2) <> 'D-' THEN SIGNAL INVALID_DNAME1
 DNAME = WORD(SOURCE.NUM,1)
 IF LENGTH(DNAME) > 8 THEN SIGNAL INVALID_DNAME2
 IF LENGTH(DNAME) < 3 THEN SIGNAL INVALID_DNAME3
 IF SUBSTR(SOURCE.NUM,9,2) <> '  ' THEN SIGNAL USER_POS
 ITEMS = WORDS(SOURCE.NUM)
 IF ITEMS = 1 THEN SIGNAL NO_USERS
 DO N = 2 TO ITEMS
     USER = WORD(SOURCE.NUM,N)
     CALL RESTRICTED_USERS
     IF OKAY = 1 THEN SIGNAL RES_USERS
     'EXECIO * CP ( STRING CP Q 'USER
     PULL RESPONSE
     IF WORD(RESPONSE,1) <> 'HCPCQU045E' &,
        WORD(RESPONSE,1) <> USER THEN SIGNAL BAD_USER
 END
 RETURN
RESTRICTED_USERS:
 /* DUPLICATE A LINE BELOW FOR EVERY VM THAT YOU DON'T WISH NOTES */
 /* TO BE SENT TOO. IF THERE AREN'T ANY THEN ENSURE THAT 'RETURN' */
 /* FOLLOWS THESE COMMENTS.                                       */
 IF USER = 'OPERATOR' THEN OKAY = 1
 IF USER = 'MVSXA' THEN OKAY = 1
 IF USER = 'EREP' THEN OKAY = 1
 IF USER = 'AUTOLOG1' THEN OKAY = 1
 RETURN
RES_USERS:
 MESS = 'ERROR - IN D-LNOTES 'USERID()' A "'USER'" IS',
        'A RESTRICTED USER - PLEASE REMOVE.'
 PUSH MESS
 EXIT 4
NO_DNAME:
 MESS = 'ERROR - D-LNOTES 'USERID() 'A HAS AN ENTRY WITH NO D-NAME',
        'STARTING IN COLUMN 1.'
 PUSH MESS
 EXIT 4
USER_POS:
 MESS = 'ERROR - D-NAME "'DNAME'" IN D-LNOTES 'USERID()' A LISTS',
        'CMS USERS BEFORE COL.11.'
 PUSH MESS
 EXIT 4
BAD_FILE:
 MESS = 'ERROR - D-LNOTES 'USERID()' A HAS BEEN CORRUPTED IN THE',
        'NON-USER AREA; RE-CREATE.'
 PUSH MESS
 EXIT 4
NO_ENTRIES:
 EXIT 0
INVALID_DNAME1:
 MESS = 'ERROR - D-NAME "'DNAME'" IN D-LNOTES 'USERID()' A MUST BEGIN',
        'WITH "D-" IN COL.1.'
 PUSH MESS
 EXIT 4
INVALID_DNAME2:
 MESS = 'ERROR - "'DNAME'" IN D-LNOTES 'USERID()' A HAS MORE THAN 6',
        'CHARS. AFTER THE "D-".'
 PUSH MESS
 EXIT 4
INVALID_DNAME3:
 MESS = 'ERROR - D-LNOTES 'USERID()' A HAS AN ENTRY WITH NO NAME',
        'FOLLOWING A "D-".'
 PUSH MESS
 EXIT 4
BAD_USER:
 MESS = 'ERROR - "'DNAME'" HAS AN INVALID CMS USER ('USER') CODED IN',
        'D-LNOTES 'USERID()' A.'
 PUSH MESS
 EXIT 4
NO_USERS:
 MESS = 'ERROR - "'DNAME'" HAS NO CMS USERIDS LISTED AFTER IT IN',
        'D-LNOTES 'USERID()' A.'
 PUSH MESS
 EXIT 4


DISPNOTE XEDIT

 /* THIS XEDIT MACRO PRODUCES A 'FILELIST' TYPE DISPLAY OF YOUR */
 /* CURRENT NOTES.                                              */
 PARSE PULL MESS
 PARSE PULL LINE_SCREEN
 PARSE PULL LINE_FILE
 PARSE PULL PFNUM
 COUNT = 0; CLINE = 0; CHECK_LINE = 0; NO_FILES = 0; WCURS = 0
 CLINE1 = LINE_FILE % 19
 IF CLINE1 = 0 THEN CLINE = 1
  ELSE DO CLINE1
          CLINE = CLINE + 20
       END
 CS = 'COMMAND SET CTLCHAR';   CS '%' ESCAPE
 CS '@' NOPROTECT RED NOHIGH;  CS '$' PROTECT YELLOW HIGH
 CS '{' PROTECT WHITE HIGH;    CS 'Ý' PROTECT TURQ HIGH
 CS '&' PROTECT PINK HIGH;     CS '¨' PROTECT BLUE HIGH
 CS '}' PROTECT GREEN NOHIGH;  CS '!' PROTECT RED BLINK HIGH
 CS '\' PROTECT RED HIGH;      CS '<' PROTECT WHITE HIGH
 COMMAND SET MSGLINE ON 24 1 OVERLAY
 COMMAND SET SCALE OFF
 'SET CURLINE ON +2'
 'TOP'
 EXTRACT '/SIZE/'
 PARSE UPPER VAR SIZE.1 NUM
LATE_START:
 CS = 'COMMAND SET'
 CS  BRKKEY OFF
 CS  PA1   ONLY XXX
 CS  PA2   ONLY XXX
 CS  PA3   ONLY XXX
 DO N = 1 TO 24
    CS 'PF'N 'PF'N
 END
 CS  PF3 QQUIT;    CS PF15 QQUIT
 CS  PF7 BACKWARD; CS PF19 BACKWARD
 CS  PF8 FORWARD;  CS PF20 FORWARD
 CS  PF9 TOP;      CS PF21 TOP
 CS  PF10 BOTTOM;  CS PF22 BOTTOM
RE_ENTER:
 'SET CMSTYPE HT'
 'STATE FNBNOTES REPOS A'
 CODE2 = RC
 IF CODE2 <> 0 THEN COUNT = 1
 IF CODE2 <> 0 THEN NO_FILES = 1
 COUNT = COUNT + 1
 CALL DISPLAY_SCREEN
READ_FILE:
 DESBUF
 READ NOCHANGE TAG
 MAKEBUF
 EXTRACT '/CURSOR/'
 PARSE UPPER VAR CURSOR.1 LINE_SCREEN
 PARSE UPPER VAR CURSOR.3 LINE_FILE
 IF LINE_SCREEN < 3 | LINE_SCREEN > 21 THEN DO
                                              MESS = 'INVALID CURSOR',
                                                     'POSITION.'
                                              WCURS = 1
                                              DESBUF
                                              SIGNAL RE_ENTER
                                            END
 IF NO_FILES = 0 THEN DO
               IF LINE_FILE < 1 THEN DO
                                       MESS = 'INVALID CURSOR',
                                              'POSITION.'
                                       WCURS = 1
                                       DESBUF
                                       SIGNAL RE_ENTER
                                     END
            END
 DROPBUF
 DO QUEUED()
      PULL KEY NUMBER TEXT
      SELECT
        WHEN KEY = 'PFK' THEN SIGNAL WHAT_NUMBER
        WHEN KEY = 'FIL' THEN SIGNAL RE_ENTER
        WHEN KEY = 'PRF' THEN SIGNAL RE_ENTER
        WHEN KEY = 'RES' THEN SIGNAL RE_ENTER
        WHEN KEY = 'CMD' THEN SIGNAL RE_ENTER
        WHEN KEY = 'ETK' THEN DO
                               DROPBUF
                               PFNUM = 'ENT'
                               COUNT = 0
                               SIGNAL LATE_START
                              END
        WHEN KEY = 'PAK' THEN DO
                               CS MSGLINE ON 24 1 OVERLAY
                               MESS = "UNSUPPORTED KEY - PAN"
                               'UP 1'
                               SIGNAL RE_ENTER
                               END
        OTHERWISE DO
                   CS MSGLINE ON 24 1 OVERLAY
                   MESS = " UNSUPPORTED KEY - "SUBSTR(KEY,1,2) || NUMBER
                   SIGNAL RE_ENTER
                  END
 END
 SIGNAL RE_ENTER
WHAT_NUMBER:
  SELECT
     WHEN NUMBER = 01 | NUMBER = 13 THEN DO
                                DESBUF
                                'XEDIT NOTEPF1 XEDIT A (PROF NOTEPF1'
                                CODE8 = RC
                                DESBUF
                                'QQUIT'
                                'QQUIT'
                                IF CODE8 = 0 THEN DO
                                                   PUSH '1'
                                                   PUSH 'CREATE'
                                                   EXIT
                                                  END
                                IF CODE8 = 4 THEN DO
                                                   PUSH 'CREATE2'
                                                   EXIT
                                                  END
                               END
     WHEN NUMBER = 02 | NUMBER = 14 THEN DO
                                           DESBUF
                                           PUSH LINE_SCREEN
                                           PUSH LINE_FILE
                                           PUSH 'PF2'
                                           'QQUIT'
                                           EXIT
                                         END
     WHEN NUMBER = 03 | NUMBER = 15 THEN DO
                                    DESBUF
                                    SAY 'YOU HAVE EXITED FROM FNBNOTES.'
                                    SAY; SAY
                                    PUSH 'PF3'
                                    'QQUIT'
                                    EXIT
                                   END
     WHEN NUMBER = 04 | NUMBER = 16 THEN DO
                    IF NO_FILES = 1 THEN DO
                                   MESS = 'THERE IS NOTHING TO DELETE.'
                                   CALL DISPLAY_SCREEN
                                   SIGNAL READ_FILE
                                  END
                    IF COUNT = 1 THEN CHECK_LINE = LINE_FILE
                    PFNUM = D
                    IF COUNT = 1 THEN DO
                        MESS = 'TO CONFIRM AND EXECUTE HIT PF4 AGAIN,',
                               'OR HIT ENTER TO STOP DELETE OPERATION.'
                        'UP 1'
                        SIGNAL LATE_START
                       END
                    IF LINE_FILE <> CHECK_LINE THEN DO
                        MESS = 'DELETE OPERATION CANCELLED DUE TO',
                               'A CURSOR POSITION CHANGE.'
                        'UP 1'
                        COUNT = 0
                        SIGNAL LATE_START
                       END
                    DESBUF
                    PUSH LINE_FILE
                    'XEDIT NOTEPF4 XEDIT A (PROF NOTEPF4'
                    PARSE PULL TITLE
                    'QQUIT'
                    'QQUIT'
                    PUSH '4'
                    PUSH LINE_SCREEN
                    PUSH LINE_FILE
                    PUSH TITLE
                    PUSH 'MESSAGE'
                    EXIT
                  END
     WHEN NUMBER = 05 | NUMBER = 17 THEN DO
                             'SET CMSTYPE HT'
                             'STATE D-LNOTES 'USERID()' A'
                             IF RC = 0 THEN STATUS = 'UPDATED'
                              ELSE STATUS = 'CREATED'
                             'SET CMSTYPE RT'
                             'EXEC NOTEPF5'
                             PFNUM = '5'
                             'EXEC D-LNOTEV'
                             IF RC = 0 THEN,
                             MESS = '"D-LNOTES 'USERID()' A" HAS BEEN',
                                  STATUS ' -  NO ERRORS FOUND.'
                             IF RC = 4 THEN PARSE PULL MESS
                             CALL DISPLAY_SCREEN
                             SIGNAL READ_FILE
                            END
     WHEN NUMBER = 06 | NUMBER = 18 THEN DO
                                DESBUF
                                IF NO_FILES = 1 THEN DO
                                   MESS = 'THERE IS NOTHING TO SEND.'
                                   CALL DISPLAY_SCREEN
                                   SIGNAL READ_FILE
                                  END
                                PFNUM = 6
                                PUSH LINE_FILE
                                'XEDIT FNBNOTES REPOS A (PROF NOTEPF6'
                                CODE = RC
                                PARSE PULL MESS
                                IF CODE <> 0 THEN DO
                                            'SET CMSTYPE HT'
                                            'ERASE 'USERID()' FNMAIL A'
                                            'ERASE SENDING EXEC A'
                                            'SET CMSTYPE RT'
                                            'UP 1'
                                            CALL DISPLAY_SCREEN
                                            SIGNAL READ_FILE
                                           END
                                 ELSE DO
                                        'QQUIT'
                                        'QQUIT'
                                        PUSH '6'
                                        PUSH LINE_SCREEN
                                        PUSH LINE_FILE
                                        PUSH MESS
                                        PUSH 'SENT'
                                        EXIT
                                      END
                               END
     WHEN NUMBER = 07 | NUMBER = 19 THEN DO
                            IF CLINE = 1 THEN SIGNAL READ_FILE
                            CLINE = CLINE - 19
                            IF CLINE < 1 THEN CLINE = 1
                            'UP 20'
                            CALL DISPLAY_SCREEN
                            SIGNAL READ_FILE
                           END
     WHEN NUMBER = 08 | NUMBER = 20 THEN DO
                            IF 19 + CLINE > NUM THEN SIGNAL READ_FILE
                            CLINE = CLINE + 19
                            'DOWN 18'
                            CALL DISPLAY_SCREEN
                            SIGNAL READ_FILE
                           END
     WHEN NUMBER = 09 | NUMBER = 21 THEN DO
                            IF CLINE = 1 THEN SIGNAL READ_FILE
                            CLINE = 1
                            'TOP'
                            CALL DISPLAY_SCREEN
                            SIGNAL READ_FILE
                           END
     WHEN NUMBER = 10 | NUMBER = 22 THEN DO
                            DNUM = NUM % 19
                            IF DNUM * 19 = NUM THEN DNUM = DNUM - 1
                            IF DNUM = 0 THEN SIGNAL READ_FILE
                            CLINE = 1
                            'TOP'
                            DO DNUM
                                  CLINE = CLINE + 19
                                 'DOWN 18'
                            END
                            'DOWN' DNUM
                            CALL DISPLAY_SCREEN
                            SIGNAL READ_FILE
                           END
     WHEN NUMBER = 11 | NUMBER = 23 THEN DO
                                IF NO_FILES = 1 THEN DO
                                   MESS = 'THERE IS NOTHING TO XEDIT.'
                                   CALL DISPLAY_SCREEN
                                   SIGNAL READ_FILE
                                  END
                                PUSH LINE_FILE
                                'XEDIT NOTEPF11 XEDIT A (PROF NOTEPF11'
                                PARSE PULL FLAG
                                PARSE PULL TIME
                                PARSE PULL DATE
                                'QQUIT'
                                'QQUIT'
                                PUSH DATE
                                PUSH TIME
                                PUSH LINE_SCREEN
                                PUSH LINE_FILE
                                PUSH '11'
                                PUSH FLAG
                                EXIT
                               END
     WHEN NUMBER = 12 | NUMBER = 24 THEN DO
                                DESBUF
                                IF NO_FILES = 1 THEN DO
                                   MESS = 'THERE IS NOTHING TO PRINT.'
                                   CALL DISPLAY_SCREEN
                                   SIGNAL READ_FILE
                                   END
                                PUSH LINE_FILE
                                'XEDIT NOTEPF12 REPOS A (PROF NOTEPF12'
                                 PULL HEADER
                                 MESS = '"'HEADER'" HAS BEEN SENT TO',
                                        'THE PRINTER.'
                                 PFNUM = 12
                                 CALL DISPLAY_SCREEN
                                 SIGNAL READ_FILE
                                'QQUIT'
                                'QQUIT'
                               END
     OTHERWISE NOP
  END
 SIGNAL RE_ENTER
DISPLAY_SCREEN:
 SELECT
    WHEN WCURS = 1 THEN DO
                          WCURS = 0
                        END
    WHEN PFNUM = 'ENT' THEN NOP
    WHEN NO_FILES = 1 THEN NOP
    OTHERWISE 'DOWN 1'
 END
 SELECT
      WHEN PFNUM = 2 THEN CALL CORRECT_CURSOR
      WHEN PFNUM = 4 THEN CALL CORRECT_CURSOR
      WHEN PFNUM = 5 THEN CALL CORRECT_CURSOR
      WHEN PFNUM = 6 THEN CALL CORRECT_CURSOR
      WHEN PFNUM = 11 THEN CALL CORRECT_CURSOR
      WHEN PFNUM = 12 THEN CALL CORRECT_CURSOR
      OTHERWISE NOP
 END
 SR = 'SET RESERVED'; SET CMDLINE OFF; SET TOFEOF OFF; SET PREFIX OFF
 SR 1  NOH '%\CURRENT MAIL-BOX FOR 'USERID()' ON 'DATE(E)' ',
           'NUMBER OF NOTES = 'NUM 'LINE = 'CLINE
 SR 2  NOH '%$ STATUS   <------------- TITLE -------------> SIZE ',
           'FROM       DATE     TIME'
 SR 22 NOH '%$PF1= CREATE   PF2= RECEIVE  PF3= QUIT  PF4 = DELETE',
           ' PF5 = D-LIST  PF6 = SEND'
 SR 23 NOH '%$PF7= BACKW    PF8= FORW     PF9= TOP   PF10= BOTTOM',
           ' PF11= XEDIT   PF12= PRINT'
 IF MESS = ' ' THEN SR 24 NOH
  ELSE DO
         SOS ALARM
         SR 24 NOH '%\'MESS
       END
 MESS = ' '
 SELECT
    WHEN PFNUM = 2 THEN CURSOR SCREEN LINE_SCREEN 1
    WHEN PFNUM = 4 THEN CURSOR SCREEN LINE_SCREEN 1
    WHEN PFNUM = 5 THEN CURSOR SCREEN LINE_SCREEN 1
    WHEN PFNUM = 6 THEN CURSOR SCREEN LINE_SCREEN 1
    WHEN PFNUM = D THEN CURSOR SCREEN LINE_SCREEN 1
    WHEN PFNUM = 11 THEN CURSOR SCREEN LINE_SCREEN 1
    WHEN PFNUM = 12 THEN CURSOR SCREEN LINE_SCREEN 1
    OTHERWISE CURSOR SCREEN 3 1
 END
 PFNUM = 0
 RETURN
CORRECT_CURSOR:
 'TOP'
 'DOWN 1'
 CLINE = 1
 OLDLINE = LINE_FILE % 19
 IF LINE_SCREEN = 21 THEN OLDLINE = OLDLINE - 1
 IF OLDLINE <> 0 THEN DO
                        DO OLDLINE
                          'DOWN 19'
                          CLINE = CLINE + 19
                        END
                      END
 RETURN


FNOTESNB XEDIT

 /* THIS XEDIT MACRO CREATES THE FNBNOTES REPOS AND PANOTES XEDIT  */
 /* FILES.  NOTE: PANOTES XEDIT A IS TEMPORARY AND IS ERASED WHEN  */
 /* EXITING FROM FNBNOTES.     . */
 VMFCLEAR; FLAG = 0; COUNT = 0; OPTION = 'RECEIVED.'; LINE_FILE = 1
 MESS = ' '; LINE_SCREEN = '3'; PFNUM = 0; UPK = 0
 CS = 'COMMAND SET CTLCHAR';   CS '%' ESCAPE
 CS '@' NOPROTECT RED NOHIGH;  CS '$' PROTECT YELLOW HIGH
 CS '{' PROTECT WHITE HIGH;    CS 'Ý' PROTECT TURQ HIGH
 CS '&' PROTECT PINK HIGH;     CS '¨' PROTECT BLUE HIGH
 CS '}' PROTECT GREEN NOHIGH;  CS '!' PROTECT RED BLINK HIGH
 CS '\' PROTECT RED HIGH;      CS '<' PROTECT WHITE HIGH
 COMMAND SET MSGLINE ON 24 1 OVERLAY
 CALL OPENING_PANEL
 READ NOCHANGE TAG
 PULL CRAP
 CALL PANOTES_BUILD
 STAT = 'NEW'
START:
 'SET CMSTYPE HT'
 COUNT = COUNT + 1
 'ERASE NOTES RECEIVE A'
 'SET CMSTYPE RT'
 MAKEBUF
 'EXECIO * CP ( STRING Q RDR 'USERID()' ALL'
 PULL CHECKIT
 IF WORD(CHECKIT,1) = 'HCPCQF003E' THEN DO
                                     'EXECIO * CP ( STRING Q RDR ALL'
                                     PULL RUBBISH
                                     END
 X = 0
 DO QUEUED()
    PULL READER_FILE
    IF FIND(READER_FILE,'FNMAIL') = 0 THEN ITERATE
     ELSE DO
            'EXECIO 1 DISKW NOTES RECEIVE A (STRING' READER_FILE
            X = X + 1
          END
 END
 IF X <> 0 THEN 'EXECIO 0 DISKW NOTES RECEIVE A (FINIS'
  ELSE SIGNAL OPTION_SET
 Y = 0
 DO X
    Y = Y + 1
    'EXECIO 1 DISKR NOTES RECEIVE A' Y
    PULL . SPID.Y . . SIZE.Y . . DATE.Y TIME.Y OWNER.Y .
    'SET CMSTYPE HT'
    'RECEIVE 'SPID.Y OWNER.Y 'FNMAIL'Y' A1 (NOLOG NOP'
    'SET CMSTYPE RT'
    'EXECIO 1 DISKR' OWNER.Y 'FNMAIL'Y' A1 5 (FINIS'
    PULL TITLE.Y
    TITLE.Y = SUBSTR(TITLE.Y,19)
 END
 'EXECIO 0 DISKR NOTES RECEIVE A (FINIS'
 'ERASE NOTES RECEIVE A'
 Y = 0
 DO X
    Y = Y + 1
    OWNER.Y = LEFT(OWNER.Y,8); SIZE.Y = STRIP(SIZE.Y,L,'0')
    SIZE.Y = RIGHT(SIZE.Y,4); STAT = LEFT(STAT,8)
    TITLE.Y = LEFT(TITLE.Y,35); USER = LEFT(USERID(),8)
    DATE.Y = SUBSTR(DATE.Y,4,2)'/'SUBSTR(DATE.Y,1,2)
    DATE.Y = DATE.Y'/'LEFT(DATE(O),2,1)
    ENTRY_LINE = '*+&+&+*' OWNER.Y USER DATE.Y,
                 TIME.Y SIZE.Y STAT TITLE.Y
    LINE.Y = '  '||STAT||' '||TITLE.Y||' '||SIZE.Y||' ',
           ||' '||OWNER.Y||' '||DATE.Y||' '||TIME.Y
    'SET CMSTYPE HT'
    'STATE FNBNOTES REPOS A1'
    CODE = RC
    'SET CMSTYPE HT'
    IF CODE <> 0 THEN DO
           'EXECIO 1 DISKW FNBNOTES REPOS A1 1 F 95 (STRING' ENTRY_LINE
           END
     ELSE 'EXECIO 1 DISKW FNBNOTES REPOS A1 (STRING' ENTRY_LINE
    'SET CMSTYPE HT'
    'STATE PANOTES XEDIT A1'
    CODE = RC
    'SET CMSTYPE HT'
    IF CODE <> 0 THEN DO
          'EXECIO 1 DISKW PANOTES XEDIT A1 1 F 80 (STRING' LINE.Y
           END
     ELSE 'EXECIO 1 DISKW PANOTES XEDIT A1 (STRING' LINE.Y
    MAKEBUF
    'EXECIO * DISKR 'OWNER.Y 'FNMAIL'Y
    DO QUEUED()
       PARSE PULL TEXT
      'EXECIO 1 DISKW FNBNOTES REPOS A1 ( STRING' TEXT
    END
    DROPBUF
    'ERASE 'OWNER.Y' FNMAIL'Y
 END
 'EXECIO 0 DISKW FNBNOTES REPOS A1 (FINIS'
 'EXECIO 0 DISKW PANOTES XEDIT A1 (FINIS'
OPTION_SET:
 IF OPTION = '*******' THEN SIGNAL FRAME_BUILD
 IF X = 0 THEN DO
                 REC_NOTES = 'NO'
               END
  ELSE DO
        LINE_FILE = 1
        LINE_SCREEN = 3
        REC_NOTES = X
       END
 MESS = REC_NOTES 'NEW NOTE(S)' OPTION
FRAME_BUILD:
 'SET CMSTYPE HT'
 'STATE FNBNOTES REPOS A1'
 CODE2 = RC
 'SET CMSTYPE RT'
    IF CODE2 <> 0 THEN DO
               MESS = 'NO NEW NOTES RECEIVED AND NO NOTES TO DISPLAY.'
               END
 DESBUF
 'XEDIT PANOTES XEDIT A1 (NOSC NOM NOPROF'
 'TOP'
 COMMAND DMSXMS D 69 70 66 67 63 64 72 80
 'FILE'
FRAME_BUILD_CONT:
 PUSH PFNUM
 PUSH LINE_FILE
 PUSH LINE_SCREEN
 PUSH MESS
 MESS = ' '
 LINE_FILE = 1
 ADDRESS CMS
 'XEDIT PANOTES XEDIT A1 (PROF DISPNOTE'
 ADDRESS XEDIT
 PARSE PULL FLAG
 IF FLAG = 'CREATE' THEN DO
                          PULL PFNUM
                          STAT = 'CREATE'
                          OPTION = 'CREATED.'
                          SIGNAL NOT_START
                         END
 IF FLAG = 'CREATE1' THEN DO
                          PULL PFNUM
                          PULL LINE_FILE
                          PULL LINE_SCREEN
                          PULL TIMEO
                          PULL DATEO
                          STAT = 'CREATE1'
                          OPTION = '*******'
                          SIGNAL NOT_START
                         END
 IF FLAG = 'CREATE2' THEN DO
                          PFNUM = 1
                          SIGNAL FRAME_BUILD
                         END
 IF FLAG = 'SENT1' THEN DO
                          PULL PFNUM
                          PULL LINE_FILE
                          PULL LINE_SCREEN
                          PULL TIMEO
                          PULL DATEO
                          STAT = 'SENT'
                          OPTION = '*******'
                          SIGNAL NOT_START
                         END
 IF FLAG = 'OPENED' THEN DO
                          PULL PFNUM
                          PULL LINE_FILE
                          PULL LINE_SCREEN
                          PULL TIMEO
                          PULL DATEO
                          STAT = 'OPENED'
                          OPTION = '*******'
                          SIGNAL NOT_START
                         END
 IF FLAG = 'REPLY' THEN DO
                          PULL PFNUM
                          PULL LINE_FILE
                          PULL LINE_SCREEN
                          PULL TIMEO
                          PULL DATEO
                          STAT = 'REPLY'
                          OPTION = '*******'
                          SIGNAL NOT_START
                         END
 IF FLAG = 'PF3' THEN DO
                   'SET CMSTYPE HT'
                   'ERASE PANOTES XEDIT A'
                   'SET CMSTYPE RT'
                   IF UPK = 1 THEN 'COPYFILE FNBNOTES REPOS A (PACK'
                   COMMAND QUIT
                   EXIT
                  END
 IF FLAG = 'PF2' THEN DO
                        PFNUM = 2
                        PULL LINE_FILE
                        PULL LINE_SCREEN
                        OPTION = 'RECEIVED.'
                        STAT = 'NEW'
                        SIGNAL START
                      END
 IF FLAG = 'DELETE' THEN DO
                          SIGNAL FRAME_BUILD
                          PARSE PULL LINE_FILE
                          PARSE PULL LINE_SCREEN
                          PARSE PULL PFNUM
                         END
 IF FLAG = 'MESSAGE' THEN DO
                          PARSE PULL MESS
                          PARSE PULL LINE_FILE
                          PARSE PULL LINE_SCREEN
                          PARSE PULL PFNUM
                          SIGNAL FRAME_BUILD_CONT
                         END
 IF FLAG = 'SENT' THEN DO
                          PARSE PULL MESS
                          PARSE PULL LINE_FILE
                          PARSE PULL LINE_SCREEN
                          PARSE PULL PFNUM
                          SIGNAL FRAME_BUILD_CONT
                         END
 MESS = FLAG
 SIGNAL FRAME_BUILD_CONT
OPENING_PANEL:
 SR = 'SET RESERVED' ; SET CMDLINE OFF ; SET TOFEOF OFF; SET PREFIX OFF
 SR 1  NOH
 SR 2  NOH
 SR 3  NOH '%&                          FIRST NATIONAL BANK PLC.'
 SR 4  NOH
 SR 5  NOH
 SR 6  NOH '%&            NNN     NN  OOOOOOOOOO  TTTTTTTTTT ',
           'EEEEEEEEEE  SSSSSSSSS'
 SR 7  NOH '%&           NNNN    NN  OO      OO      TT     ',
           'EE          SS     SS'
 SR 8  NOH '%&          NN NN   NN  OO      OO      TT     ',
           'EE          SS'
 SR 9  NOH '%&         NN  NN  NN  OO      OO      TT     ',
           'EEEEEEEEEE  SSSSSSSSS'
 SR 10 NOH '%&        NN   NN NN  OO      OO      TT     ',
           'EE                 SS'
 SR 11 NOH '%&       NN    NNNN  OO      OO      TT     ',
           'EE          SS     SS'
 SR 12 NOH '%&      NN     NNN  OOOOOOOOOO      TT     ',
           'EEEEEEEEEE  SSSSSSSSS'
 SR 13 NOH
 SR 14 NOH
 SR 15 NOH '%&                  WRITTEN BY ADAM HELMAN  .'
 SR 16 NOH
 SR 17 NOH
 SR 18 NOH
 SR 19 NOH '%!                           HIT ENTER TO CONTINUE'
 SR 20 NOH
 SR 21 NOH
 SR 22 NOH
 SR 23 NOH
 SR 24 NOH
 CURSOR SCREEN 24 1
 RETURN
NOT_START:
 'SET CMSTYPE HT'
 COUNT = COUNT + 1
 'ERASE NOTES RECEIVE A'
 'SET CMSTYPE RT'
 MAKEBUF
 'EXECIO * CP ( STRING Q RDR 'USERID()' ALL'
 PULL CHECKIT
 IF WORD(CHECKIT,1) = 'HCPCQF003E' THEN DO
                                     'EXECIO * CP ( STRING Q RDR ALL'
                                     PULL RUBBISH
                                     END
 X = 0
 DO QUEUED()
    PULL READER_FILE
    SELECT
       WHEN FIND(READER_FILE,'FNMAIL ') <> 0 THEN ITERATE
       WHEN FIND(READER_FILE,'FNMAIL1') <> 0 THEN FTYPE = 'FNMAIL1'
       WHEN FIND(READER_FILE,'FNMAIL2') <> 0 THEN FTYPE = 'FNMAIL2'
       OTHERWISE ITERATE
    END
    'EXECIO 1 DISKW NOTES RECEIVE A (STRING' READER_FILE
    X = X + 1
 END
 'EXECIO 0 DISKW NOTES RECEIVE A (FINIS'
 'EXECIO 1 DISKR NOTES RECEIVE A'
 IF STAT = 'CREATE' THEN PULL . SPID . . SIZE . . DATE TIME OWNER .
  ELSE DO
         PULL . SPID . . SIZE . . . . OWNER .
         DATE = SUBSTR(DATEO,4,2)'/'SUBSTR(DATEO,1,2)'/'
         DATE = DATE||SUBSTR(DATEO,7,2)
         TIME = TIMEO
       END
 'SET CMSTYPE HT'
 'RECEIVE 'SPID OWNER FTYPE' A1 (NOLOG NOP'
 'SET CMSTYPE RT'
 'EXECIO 1 DISKR' OWNER FTYPE 'A1 5 (FINIS'
 PULL TITLE
 TITLE = SUBSTR(TITLE,19)
 'EXECIO 0 DISKR NOTES RECEIVE A (FINIS'
 'ERASE NOTES RECEIVE A'
 IF STAT = 'CREATE1' THEN STAT = 'CREATE'
 OWNER = LEFT(OWNER,8); SIZE = STRIP(SIZE,L,'0')
 SIZE = RIGHT(SIZE,4); STAT = LEFT(STAT,8)
 TITLE = LEFT(TITLE,35); USER = LEFT(USERID(),8)
 IF LENGTH(DATE) = 5 THEN,
    DATE = SUBSTR(DATE,4,2)'/'SUBSTR(DATE,1,2)'/'SUBSTR(DATE(0),1,2)
  ELSE DATE = SUBSTR(DATE,4,2)'/'SUBSTR(DATE,1,2)'/'SUBSTR(DATE,7,2)
 ENTRY_LINE = '*+&+&+*' OWNER USER DATE,
              TIME SIZE STAT TITLE
 LINE = '  '||STAT||' '||TITLE||' '||SIZE||' ',
        ||' '||OWNER||' '||DATE||' '||TIME
 'SET CMSTYPE HT'
 'STATE FNBNOTES REPOS A1'
 CODE = RC
 'SET CMSTYPE HT'
 IF CODE <> 0 THEN DO
        'EXECIO 1 DISKW FNBNOTES REPOS A1 1 F 95 (STRING' ENTRY_LINE
        END
  ELSE 'EXECIO 1 DISKW FNBNOTES REPOS A1 (STRING' ENTRY_LINE
 'SET CMSTYPE HT'
 'STATE PANOTES XEDIT A1'
 CODE = RC
 'SET CMSTYPE HT'
 IF CODE <> 0 THEN DO
       'EXECIO 1 DISKW PANOTES XEDIT A1 1 F 80 (STRING' LINE
        END
  ELSE 'EXECIO 1 DISKW PANOTES XEDIT A1 (STRING' LINE
 MAKEBUF
 'EXECIO * DISKR 'OWNER FTYPE
 DO QUEUED()
    PARSE PULL TEXT
   'EXECIO 1 DISKW FNBNOTES REPOS A1 ( STRING' TEXT
 END
 DROPBUF
 'ERASE 'OWNER FTYPE
 'EXECIO 0 DISKW FNBNOTES REPOS A1 (FINIS'
 'EXECIO 0 DISKW PANOTES XEDIT A1 (FINIS'
 SIGNAL OPTION_SET
PANOTES_BUILD:
 'SET CMSTYPE HT'
 'ERASE PANOTES XEDIT A'
 'STATE FNBNOTES REPOS A'
 CODE3 = RC
 'SET CMSTYPE RT'
 IF CODE3 <> 0 THEN RETURN
 'LISTFILE FNBNOTES REPOS A ( STACK ALLOC'
 PULL . . . RECFM LRECL .
 IF RECFM = 'F' & LRECL = 1024 THEN DO
                                     UPK = 1
                                     'COPYFILE FNBNOTES REPOS A (UNPACK'
                                    END
 LN = 1; TM = 0
 DO FOREVER
   TM = TM + 1
   'EXECIO * DISKR FNBNOTES REPOS A 'LN' ( LOCATE /+&+&+/'
   IF RC <> 0 THEN LEAVE
   PULL . LN
   PULL . OWNER . DATE TIME SIZE STAT TITLE
   OWNER = LEFT(OWNER,8)
   FLINE = '  '||STAT||' '||TITLE||' '||SIZE||' ',
           ||' '||OWNER||' '||DATE||' '||TIME
   LN = LN + 1
   IF TM = 1 THEN 'EXECIO 1 DISKW PANOTES XEDIT A 1 F 80 ( STRING' FLINE
    ELSE 'EXECIO 1 DISKW PANOTES XEDIT A ( STRING' FLINE
 END
 'EXECIO 0 DISKW PANOTES XEDIT A ( FINIS'
 RETURN

This article will be continued next month.

Adam Helman
Systems Programmer
First National Bank plc (UK)             c First National Bank plc 1991

