Calculating 3270 buffer address codes

To get the EBCDIC value of buffer address codes for 3270
display station screens with 12-bit addressing, one has to go
through 3270 Information Display manuals. Calculating the
buffer address is time consuming and complex. This EXEC
calculates the EBCDIC buffer codes (in hexadecimal) for all
3270 display stations with 12-bit addressing. They include
12x40, 12x80, 24x80, 32x80, 43x80 and 27x132 screen
stations. Just type the row and column to get the code.


CALCBUF EXEC

/* -------------------------------------- */
/*   Rexx Program For Calculating Buf Adr */
/* -------------------------------------- */
Trace
hil='1de8'x       /* highlight */
nor='1d60'x       /* normal */
b.0='0000'
b.1='0001'
b.2='0010'
b.3='0011'
b.4='0100'
b.5='0101'
b.6='0110'
b.7='0111'
b.8='1000'
b.9='1001'
b.A='1010'
b.B='1011'
b.C='1100'
b.D='1101'
b.E='1110'
b.F='1111'
c.0000='0'
c.0001='1'
c.0010='2'
c.0011='3'
c.0100='4'
c.0101='5'
c.0110='6'
c.0111='7'
c.1000='8'
c.1001='9'
c.1010='A'
c.1011='B'
c.1100='C'
c.1101='D'
c.1110='E'
c.1111='F'
say "Choose Screen Width - 40ch 80ch or 132 ch"
say "Default width is 80 Characters"
pull width .
width=strip(width)
if width='' then width=80
if index('*40 *80 *132 ',"*"width' ')=0 then width=80
say  "Calculations are for"hil width nor"Screen Width"
do forever
 say hil "Type Row & Column or" nor
 say hil "Press Enter To Exit" nor
 pull row col .
 select
  when row='' then exit
  when datatype(col)Â¬='NUM' then msg='Column has to be in numbers'
  when datatype(row)Â¬='NUM' then msg='Row has to be in numbers'
  when col>width then msg='Column cannot be greater than the width'
  when width=40 & row>12
                    then msg='For a 40 width screen, row cannot be > 12'
  when width=80 & row>43
                    then msg='For a 80 width screen, row cannot be > 43'
  when width=132 & row>27
                   then msg='For a 132 width screen, row cannot be > 27'
  otherwise msg=''
 end
 if msgÂ¬='' then do
   say hil msg nor
   iterate
   end
 decval=width*(row-1)+(col-1)               /* get decimal value */
 hexval=right(d2x(decval),3,0)              /* convert to hex    */
 hex1=substr(hexval,1,1)                    /* 1st hex character */
 hex2=substr(hexval,2,1)                    /* 2nd hex character */
 hex3=substr(hexval,3,1)                    /* 3rd hex character */
 hexall=b.hex1||b.hex2||b.hex3              /* convert to bits   */
 set.1=substr(hexall,1,6)                   /* 1st set of 6 bits */
 set.2=substr(hexall,7,6)                   /* 2nd set of 6 bits */
 do i=1 to 2                                /* prefix start bits */
  part=substr(set.i,3,4)
  select
   when set.i='100001' then strtbits='01'
   when set.i='110000' then strtbits='11'
   when part='0000' then strtbits='01'
   when part>'0000' & part<'1010' then strtbits='11'
   otherwise strtbits='01'
  end
  set.i=strtbits||set.i
 end
 bufadr=set.1||set.2                        /* merge two sets    */
 hexc11=substr(bufadr,1,4)                  /* 1st set of 4 bits */
 hexc12=substr(bufadr,5,4)                  /* 2nd set of 4 bits */
 hexc21=substr(bufadr,9,4)                  /* 3rd set of 4 bits */
 hexc22=substr(bufadr,13,4)                 /* 4th set of 4 bits */
 val=c.hexc11||c.hexc12 c.hexc21||c.hexc22  /* convert to hex    */
 say "For Row ="row" & Col ="col", The Buffer Address is hex"hil val nor
 say
end
exit

Moyeen Ahmed Khan
Systems Analyst
Qatar General Petroleum Corporation (Qatar)

