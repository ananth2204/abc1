Title rows in XEDIT

This macro allows you to establish 'title rows', which will appear
regardless of the position in the file you are editing.  So when you
scroll up and down your file, the title rows (often containing some
headings) will stay on your screen.  It is easily called from the prefix
area.

The content of the row you mark with T in the prefix area is used to
establish a reserved line, which is positioned one line above your
current line.  It is possible to place it at the top of the screen, or
wherever you want it to appear: the variable linenr1 is used to
compute the position.  Remember that reserved lines may exist
already!  The macro takes into account the possibilities that you have
set VERIFY or used the RIGHT/LEFT/RGTLEFT subcommands, and
assembles the title-row according to the current settings of those
subcommands.  It does not, however, adjust title rows that are already
set.

You can drop title rows with the command SET RESERVED nn OFF.

The macro should work with VM/SP 4.2 and above (with or without
HPO) and supports all types of terminal (although I have not tested it
on a Model 5 terminal).

/* T Prefix Macro: Define Title Rows                                 */
/* Call:     T, nT, Tn           in Prefix-Area                      */
/*                               (n...Integer)                       */
/*                                                                   */
/* Function: Establish title rows, which will always appear above the*/
/*           current line, regardless of the position in the file.   */
/*           Title rows can be deleted via 'SET RESERVED nn OFF'     */
      parse source . . . . . name .
      arg prefix function pline op rest
      if prefix = '?' | op = '?',
         then do
                 address CMS 'TYPE' name 'XEDIT * 1 10'
                 exit 1
              end
                                            /* test for correct call */
      if prefix ¬= 'PREFIX' | function ¬= 'SET',
         then call error 'T-Macro must be called via prefix area'
      if function = 'CLEAR' then exit
                /* if the macro was called without numeric argument, */
                /*    we assume only one line to become title row    */
      if op = '' then op = 1
      if ¬datatype(op,'W') then call error 'Invalid parameter' op
                                  /* let's look for current settings */
      'COMMAND :'pline 'EXTRACT /CURLINE/LINE/PREFIX/RESERVED *'||,
                               '/VERIFY/VERSHIFT/LSCREEN/NUMBER'
                            /* where do you want your title row(s) ? */
                            /* eg one row above your current line    */
      linenr1 = curline.2 + reserved.0 - 1
      linenr2 = line.1 - 1
                           /* there may be more than one marked line */
      do op
         linenr1 = linenr1 + 1
         linenr2 = linenr2 + 1
         'COMMAND :'linenr2 'EXTRACT /CURLINE /LINE'
                /* assemble the title row due to VERIFY and VERSHIFT */
         title = ''
         do i = 1 to words(verify.2) by 2
            from   = word(verify.2,i)
            length = word(verify.2,i+1) - from + 1
            tit    = substr(curline.3,vershift.1+1)
            title  = title||substr(tit,from,length)
         end
         /* handle prefix area (there must have been a prefix area!) */
         columns = 1screen.2 - 7
         if prefix.1 = 'ON',
         then if number.1 = 'ON',
              then newprefix = right('0000'line.1,5)
              else newprefix = '====='
         else if number.1 = 'ON',
              then newprefix = right(line.1,5)
              else newprefix = '     '
         if prefix.2 = 'RIGHT',
         then newtitle = left(title,columns) newprefix
         else newtitle = newprefix left(title,columns)
                                 /* and now: establish new title row */
         'COMMAND SET RESERVED 'linenr1 'YELLOW N' newtitle
      end
      exit
error:
      parse arg t
      'COMMAND EMSG' t
      exit 8

Josef Schmid
Systems Programmer
TIWAG (Austria)

