 MVS job - VM user communication
Our system contains MVS/XA and VM/SP HPO as peer nodes in an SNA network.
MVS/XA is the main production system.  VM/SP serves as an Information Centre
system, running fourth and fifth generation applications.  VM and MVS do not
share DASD, so there is a frequent need for data transfer between the systems.
We use IBM's FTP (File Transfer Program, 5664-315 on VM and 5668-932 on MVS) to
transmit data.
JCL TAILORING AND JOB SUBMISSION FROM VM TO MVS
VM users can specify a file receiver mini-disk and submit FTP JCL to MVS by
executing TAILOR EXEC.  TAILOR EXEC edits and submits JCL which transfers a file
from VM to MVS, uses the file as input to an extract program, and transfers the
extracted output to the specified mini-disk.
JES2 - CMSBATCH MESSAGE FACILITY
SKELETON JCL contains the job described above.  JES2 ROUTE statements and the
CMSBATCH virtual machine are used to inform the VM user about the status of the
MVS job.  /*ROUTE PRINT routes printed output to the VM user's reader.  Since
msgclass X is the hold queue for printed output, the JES2 log for the job will
appear in the user's reader.  /*ROUTE PUNCH routes the msgclass B output to the
CMSBATCH virtual machine's reader.  Punched files which appear in CMSBATCH's
reader are batch jobs, so CMSBATCH sends the VM user an edited message from the
TRANS or NOTRANS step.
Note: The transfer and extract steps are not complete; they were included in
part to demonstrate the extent of the TAILOR EXEC editing, and to show that the
SYSOUTs would default to msgclass x, thereby being routed to the VM user's
reader.  JES2 /*OUTPUT statements can be used to route selected output classes
to VM while leaving other classes on MVS output queues.
SUSPENDING A REXX EXEC UNTIL AN MVS EVENT OCCURS
Sleeper EXEC submits transfer JCL and suspends the user until the data is
transferred or until a certain time limit elapses.  Suspension can be beneficial
if the EXEC is part of an automatic job stream or if the VM user is operating
under system prescribed limits, such as a clerk within a menu-driven
environment.
The EXECs and JCL presented in this article were developed and operate under
VM/SP HPO 4.2, RSCS 2.1, MVS/XA 2.1.7, and JES2 2.1.5.  The MVS/XA system is
defined to RSCS as an SNANJE link with a priority queue designation.

SUBMIT EXEC
/* This EXEC submits JCL to an MVS/JES2 system defined to RSCS as   */
/* linkid MVSX.  RSCSVM is the userid of the RSCS virtual machine.  */
     ARG fn ft fm                   /* File fn ft fm contains JCL.  */
     SPOOL punch to RSCSVM
     TAG dev punch MVSX JOB         /* 'JOB' indicates that fn ft fm*/
     'PUNCH' fn ft fm '( noheader'  /* is to be transmitted as a job*/
                                    /* to a non-VM NJE system (MVSX)*/
     EXIT

SLEEPER EXEC
/* This EXEC submits JCL to an MVS/JES2 system, disabling the user */
/* until DATA FILE B exists or until (count*15) seconds elapse.    */
     STATE DATA FILE B
     check=RC
     IF checkÂ¬=0 THEN DO
        SUBMIT MVSJOB JCL A
        check = 28
        count = 0
        set cmstype ht
        DO UNTIL check=0 | count=25
          SLEEP 15 sec
          ADDRESS COMMAND 'RELEASE B'     /* Refresh minidisk B.*/
          ADDRESS COMAND 'ACCESS 555 B'
          STATE DATA FILE B
          check=RC
          count=count+1
          END                             /* DO UNTIL           */
        set cmstype rt
        END                               /* THEN DO            */
      ELSE
        say 'MVSJOB did not execute Q DATA FILE B already exists'
     EXIT

TAILOR EXEC
/* This EXEC copies and edits SKELETON JCL F. The resulting JCL     */
/* contains appropriate user information. Passed arguments are:     */
/* rpass, the read password of the user's 191 disk; receiver, the   */
/* userid of the file receiver; mpass, the multiple password of the */
/* file receiver's 191 disk; and account, the user's account number.*/
/* The EXEC calls REXX functions DATE and USERID. It also calls the */
/* SUBMIT EXEC, which submits the tailored JCL to an MVS system.    */
      ARG rpass receiver mpass account
      jdate = DATE(J)
      usrid = USERID()
      'copy SKELETON JCL F' usrid 'JCL A (replace'
      makebuf
      QUEUE 'change /&USERID/'usrid'/ * *'
      QUEUE 'top'
      QUEUE 'change /&DATE/'jdate'/ * * '
      QUEUE 'top'
      QUEUE 'change /&RPASS/'rpass'/ * * '
      QUEUE 'top'
      QUEUE 'change /&RECEIVR/'receiver'/ * * '
      QUEUE 'top'
      QUEUE 'change /&MPASS/'mpass'/ * * '
      QUEUE 'top'
      QUEUE 'change /&ACCOUNT/'account'/ * * '
      QUEUE 'file'
      'XEDIT' usrid 'JCL A'
      dropbuf
      'SUBMIT' usrid 'JCL A'
      EXIT

SKELETON JCL
      //VMMVSVM  JOB &ACCOUNT,&USERID,CLASS=Y,MSGCLASS=X,USER=&USERID
      /*NOTIFY   VMSP.&USERID
      /*JOBPARM  SYSAFF=MVSX
      /*ROUTE PRINT VMSP.&USERID
      /*ROUTE PUNCH VMSP.CMSBATCH
      //*    SEND RECORD IDENTIFIERS FROM VM TO MVS               *
      //VMTOMVS  EXEC PGM=FTP
      //STEPLIB  DD  DSN=FTPLIB,DISP=SHR
      //DVGSNAP  DD  SYSOUT=*
      //SYSUDUMP DD  SYSOUT=*
      //SYSPRINT DD  SYSOUT=*
      //SYSIN    DD  *
      ///CONTROL STATEMENTS FOR FILE TRANSFER PROGRAM...
      SFILEID='RECORD IDS'
      SVMLINK=(&USERID,191,&RPASS)
      RFILEID='&USERID.INPUT'
      //*     EXTRACT REQUESTED RECORDS                           *
      //EXTRACT  EXEC PGM=EXTRTPGM,COND=(0,NE,VMTOMVS)
      //STEPLIB  DD  DSN=EXTRLIB,DISP=SHR
      //SYSOUT   DD  SYSOUT=*
      //SYSUDUMP DD  SYSOUT=*
      //REPORT   DD  SYSOUT=*
      //SYS020   DD  DSN=&USERID.INPUT,DISP=(OLD,DELETE,DELETE)
      //SYS025   DD  DSN=&USERID.MVS.RECORDS,DISP=(NEW,CATLG,DELETE)
      //*     TRANSFER REQUESTED RECORDS FROM MVS TO VM          *
      //MVSTOVM EXEC PGM=FTP,COND=((0,NE,VMTOMVS),(0,NE,EXTRACT))
      //STEPLIB  DD  DSN=FTPLIB,DISP=SHR
      //DVGSNAP  DD  SYSOUT=*
      //SYSPRINT DD  SYSOUT=*
      //IN       DD  DSN=&USERID.MVS.RECORDS,DISP=(OLD,DELETE,KEEP)
      //SYSIN    DD  *
       ... CONTROL STATEMENTS FOR FILE TRANSFER PROGRAM...
      RFILEID='&USERID &DATE'
      RVMLINK=(&RECEIVR,191,&MPASS)
      /*
      //* NOTIFY USER OF TRANSFER STATUS, SYSOUT=B IS PUNCH      *
      //TRANS    EXEC PGM=IEBGENER,
      //           COND=((0,NE,VMTOMVS),(0,NE,EXTRACT),(0,NE,MVSTOVM))
      //SYSPRINT DD SYSOUT=*
      //SYSIN    DD DUMMY
      //SYSUT2   DD SYSOUT=B,COPIES=1,FREE=CLOSE,
      //            DCB=(RECFM=FB,LRECL=80,BLKSIZE=80)
      //SYSUT1   DD *,DLM=AA
      ID CMSBATCH
      /JOB &USERID &ACCOUNT
      CP MSG &USERID REQUESTED RECORDS TRANSFERRED TO &USERID &DATE B
      /*
      AA
      //**********************************************************
      //NOTRANS  EXEC PGM=IEBGENER,COND=((0,EQ,MVSTOVM),EVEN)
      //SYSPRINT DD SYSOUT=*
      //SYSIN    DD DUMMY
      //SYSUT2   DD SYSOUT=B,COPIES=1,FREE=CLOSE,
      //            DCB=(RECFM=FB,LRECL=80,BLKSIZE=80)
      //SYSUT1   DD *,DLM=AA
      ID CMSBATCH
      /JOB &USERID &ACCOUNT
      CP MSG &USERID RECORDS DID NOT TRANSFER
      /*
      AA
      /*
Stephen L Skjei
Systems Programmer
The Principal Financial Group (USA)     ) Xephon 1988

































