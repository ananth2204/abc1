General purpose REXX EXECs

The first EXEC, GLOBAL, is a front end to the standard
GLOBAL command.  If a library is to be added to an existing
library search chain, all the existing names need to be included
in the GLOBAL command along with the new library.  The
same repetition is required if you wish to remove a library from
the chain.  This EXEC provides the facility to append or delete
any number of libraries from the CMS library chain.  In
addition, it allows the new name(s) to be inserted before or
added after the current definitions.

The command format is:

      GLOBAL libtype libname1 libname2 ... ( APPend|DELete
                                                                    BEFore|After

The second EXEC, GETSET, is a REXX function.  It returns
the current setting of any of the CP SET operands (if valid), or
one of the following:

o      NOARG         - no argument supplied
o      TOOMANY   - more than one argument specified
o      NOTFOUND  - specified operand not found in Q SET list.

The command format is:

      GETSET(set_operand)


GLOBAL EXEC

/*                                                                   */
/*                           G L O B A L                             */
/*  Front end EXEC for GLOBAL command. Provides facility to APPEND   */
/*  or DELETE library(s) from any of the CMS library chains. The new */
/*  library(s) may be added at the end of the existing chain or      */
/*  inserted ahead of current definitions.                           */
/*  Command format is,                                               */
/*       GLOBAL libtype libname1 libname2 ... ( APPend|DELete        */
/*                                              BEFore|AFTer         */
/*  A libname of * together with the DELete option will remove all   */
/*  libraries of the specified libtype. APPend is implied when       */
/*  BEFore or AFTer is specified.                                    */
   PARSE UPPER ARG libtype new_libnames '(' options
   CALL Initial
   SELECT
       WHEN app THEN CALL APPEND
       WHEN del THEN CALL DELETE
       OTHERWISE NOP
   END
  'GLOBAL' libtype current_libnames
  'DROPBUF' buffnum
EXIT
/*                                                                   */
/*                           A p p e n d                             */
Append:
   CALL Extract
   DO indx = 1 TO WORDS(new_libnames)
       new = WORD(new_libnames,indx)
       IF FIND(current_libnames,new) > 0 THEN
           SAY 'DMSGLB008)I ' libtype new 'already defined'
       ELSE
           IF bef THEN
               current_libnames = new current_libnames
           ELSE
               current_libnames = current_libnames new
   END
RETURN
/*                                                                   */
/*                           D e l e t e                             */
Delete:
   CALL Extract
   DO indx = 1 TO WORDS(new_libnames)
       new = WORD(new_libnames,indx)
       pos = FIND(current_libnames,new)
       IF pos = 0 THEN
           SAY 'DMSGLB009)I ' libtype new 'is not defined'
       ELSE
           current_libnames = DELWORD(current_libnames,pos,1)
   END
RETURN
/*                                                                   */
/*                          E x t r a c t                            */
Extract:
   saved = Queued()                    /* allow for active buffer    */
  'MAKEBUF'                            /* get a buffer to work with  */
   buffnum = rc                        /* and save its id            */
   current_libnames = ''
  'QUERY' libtype '(FIFO'              /* get all current libnames   */
   DO Queued() - saved
       PULL . . line
       current_libnames = current_libnames line
   END
   IF current_libnames = 'NONE' THEN current_libnames = ''
   IF new_libnames = '*' THEN new_libnames = current_libnames
RETURN
/*                                                                   */
/*                          I n i t i a l                            */
Initial:
   IF POS(libtype,'MACLIB TXTLIB DOSLIB LOADLIB') = 0 THEN
       DO
       SAY 'DMSGLB001)E  Invalid library type specified'
       EXIT 1
       END
   IF new_libnames = '' THEN
       DO
       SAY 'DMSGLB002  No library name(s) specified'
       EXIT 2
       END
   IF options = '' THEN
       current_libnames = new_libnames
   app = 0
   del = 0
   bef = 0
   aft = 0
   DO indx = 1 TO WORDS(options)
       option = LEFT(WORD(options,indx),3)
       SELECT
           WHEN option = 'APP' THEN app = 1
           WHEN option = 'DEL' THEN del = 1
           WHEN option = 'BEF' THEN bef = 1
           WHEN option = 'AFT' THEN aft = 1
           OTHERWISE DO
               SAY 'DMSGLB005)E  Invalid option specified'
               EXIT 5
               END
       END
  END
  IF aft | bef THEN app = 1
  IF app & del THEN DO
    SAY 'DMSGLB006)E  APPend and DELete options are mutually exclusive'
    EXIT 6
    END
   IF bef & aft THEN DO
     SAY 'DMSGLB007)E  BEFore and AFTer options are mutually exclusive'
     EXIT 7
     END
   IF del & (bef | aft) THEN DO
     SAY 'DMSGLB008)E  BEFore or AFTer only valid with APPend option'
     EXIT 8
     END
RETURN


GETSET EXEC

/*                           G E T S E T                             */
/*  REXX function to get current value for any CP SET option.        */
/*  Command format is,                                               */
/*      GETSET(option)                                               */
/*  If option is valid the current setting will be returned. Other   */
/*  values returned are,                                             */
/*      NOARG    - no argument supplied                              */
/*      TOOMANY  - more than one argument specified                  */
/*      NOTFOUND - specified option does not exist                   */
   PARSE UPPER ARG option .
   PARSE UPPER SOURCE . calltype execname .

   IF calltype ¬= 'FUNCTION' THEN
      DO SAY execname'> Must be called as a function'
      EXIT
      END

   IF arg() = 0 THEN RETURN NOARG
   IF arg() > 1 THEN RETURN TOOMANY

  'EXECIO * CP (STEM SET_OPTION. STRING Q SET'

   DO i = 1 TO set_option.0 UNTIL set_value ¬= ''
      INTERPRET 'PARSE VAR set_option.i WITH "'option'" set_value ","'
   END

   IF set_value ='' THEN RETURN NOTFOUND

RETURN STRIP(set_value,'B')


Clive Whitehead
Development Programmer
Macro 4 plc (UK)                         c Macro 4 plc 1991

