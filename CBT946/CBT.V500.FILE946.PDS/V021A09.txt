 DASD space allocation reports
DASDSPC is a REXX EXEC that will submit JCL to the VSE machine(s) and print the
VM/VSE DASD space allocation reports.
The VSE DASD allocations are derived from DITTO VTOCs and VSAM catalog listings.
The VM DASD allocations are derived from the directory's diskmap.  The EXEC will
link to MAINT's 191 mini-disk in order to have access to the directory's
DISKMAP.
The JCL will assign SYSLST to a disk extent where all the VTOCs and catalog
listings are written out.  A COBOL program called DASDSPC will read this disk
file along with the diskmap allocations and print the VM/VSE DASD allocation
reports.  A CMS member, system org, is used in this program to allocate the DASD
files by users.  In our company, the first three characters of FILENAME is our
system code.  If you do not want to allocate by user, do not include this
member.
DASDSPC EXEC
/* THIS EXEC WILL RUN BOTH THE VM DASD USAGE REPORTS AND THE */
/* VSE DASD USAGE REPORTS                                */
TRACE OFF
/* THE FOLLOWING ARE ALL THE VARIABLES USED IN THIS EXEC */
MCUU  = 591              /* VADDR TO LINK TO MAINT/USERID*/
MPASS = RMAINT           /* MAINTS READ PASSWORD         */
MFM   = 'GETFMADR'       /* MODE TO LINK TO MAINT        */
MFN   = 'VMUSERS'        /* MAINTS DIRECTORY FILENAME    */
MFT   = DISKMAP          /* MAINTS DIRECTORY FILETYPE    */
RCODE = 99               /* DEFAULT RETURN CODE          */
'SET CMSTYPE HT'
CALL GET_FILE_MODE
CALL LINK_MAINT
'DESBUF'
/*  THE FOLLOWING SUBMIT EXEC IS USED TO SPOOL THE JCL TO A VSE */
/*  MACHINE.                                                    */
'SPOOL PUN TO PHILAVSE CLASS A CONT'
'PUNCH DASDSPC JCL A (NOH'
'SPOOL PUN CLOSE'
'SPOOL PUN TO SYSTEM NOCONT'
SIGNAL EXIT
/* S U B  R O U T I N E S */
GET_FILE_MODE:
'REL 'MFM '(DET'
'GETFMADR'
PULL AVAILABLE MFM ADDR
IF AVAILABLE ¬= '*'     THEN SIGNAL NO_MODES_AVAILABLE
RETURN
LINK_MAINT:
'CP LINK MAINT 191 'MCUU 'RR 'MPASS
'ACC 'MCUU MFM
IF RC ¬= 0              THEN SIGNAL CP_CMS_ERROR
'EXECIO * DISKR 'MFN MFT MFM '(FINIS MARGINS 1 72'
IF RC ¬= 0                  THEN SIGNAL DIRECT_ERROR
QUEUE 'STOPSEARCH'
RETURN
/* E R R O R  R O U T I N E S */
DIRECT_ERROR:
'SET CMSTYPE RT'
SAY MFN MFT MFM 'IS NOT A VALID DIRECTORY.'
SAY 'INVESTIGATE & RETRY'
SIGNAL EXIT
NO_MODES_AVAILABLE:
RCODE = RC
'SET CMSTYPE RT'
SAY 'NO ACCESS MODES ARE AVAILABLE. RETURN CODE ='RCODE
SAY 'INVESTIGATE & RETRY'
'Q DISK'
SIGNAL EXIT
CP_CMS_ERROR:
BADCODE = RC
 'SET CMSTYPE RT'
SIGL = SIGL - 1
SAY ' '
SAY 'A RETURN CODE OF' BADCODE ' WAS RETURNED BY COMMAND:'
SAY '      ' SOURCELINE(SIGL)
SAY 'THE COMMAND IS AT LINE NUMBER' SIGL'.'
SAY ' '
SIGNAL EXIT
EXIT:
'REL 'MFM '(DET'
'SET CMSTYPE RT'
SAY 'DASD USAGE SUCCESSFULLY SUBMITTED!'
EXIT

SAMPLE JCL TO RUN THE DASDSPC PROGRAM
* $$ JOB JNM=DASDSPCJ,CLASS=0,DISP=D,PRI=3,USER=TECHSUPPORT
* $$ LST LST=02E,CLASS=A
* $$ LST LST=02F,CLASS=P
// JOB DITOLIST - DASD DITTO LISTINGS
// UPSI 1
// ASSGN SYS003,DISK,VOL=VOL=DOSRES,SHR
// ASSGN SYS004,DISK,VOL=SYSWK1,SHR
// ASSGN SYS005,DISK,VOL=SYSWK2,SHR
// DLBL IJSYSLS,'DASD.USAGE.FILE',0,SD
// EXTENT SYSLST,SYSWK1,1,0,6424,10000
ASSGN SYSLST,FBA,VOL=SYSWK1,SHR
// EXEC DITTO,SIZE=128K
$$DITTO DVT INPUT=SYS003,SORTBY=NAME
$$DITTO DVT INPUT=SYS004,SORTBY=NAME
$$DITTO DVT INPUT=SYS005,SORTBY=NAME
$$DITTO EOJ
/*
/&
// JOB VSAMLIST - VSAM CATALOG LISTINGS
// EXEC   IDCAMS,SIZE=AUTO
   LISTCAT CATALOG (VSAM.MASTER.CATALOG) ALLOCATION
   LISTCAT CATALOG (SYSWK2.USER.CAT)     ALLOCATION
/*
CLOSE SYSLST,O2E
/&
// JOB DASDSPCJ - DASD SPACE ALLOCATION REPORTS
// ASSGN SYS010,DISK,VOL=SYSWK1,SHR
// DLBL SYS010,'DASD.USAGE.FILE',0,SD
// EXTENT SYS010,SYSWK1
// ASSGN SYS001,FBA,VOL=SYSWK2,SHR
// DLBL SORTWK1,,0,SD
// EXTENT SYS001,SYSWK2,1,0,1,400
// ASSGN SYS018,02F
// ASSGN SYS019,02E
// EXEC DASDSPC,SIZE=200K
CODE    USER  DIST
----    -----------
1       B. SMITH
C       T. JONES
Z       MISCELLANEOUS
CODE    SYSTEM
----    ----------
1       ADR
C       DOS
C       VSE
C       VTA
C       GUA
Z       MIS
C       NCP
C       VSA
/*
 * INCLUDE VMUSERS DISKMAP MEMBER HERE
/*
/&
* $$ EOJ

This article will be continued next month when the program to print the DASD
reports will be published.
Robert Ferro
Systems Programmer
Progress Lighting (USA)
) Xephon 1988

'.
           03             FILLER            PIC X(8).
       SD  SORT-FILE
               RECORDING MODE IS F
               LABEL RECORDS ARE STANDARD
               DATA RECORD IS SRT-REC.
       01  SRT-REC.
           03  SRT-KEY.
               05  SRT-CODE                 PIC X.
               05  SRT-USER                 PIC X(15).
               05  SRT-VOLUME               PIC X(6).
           03              FILLER           PIC X(11) VALUE
                                                        '1  DASDSPC-'.
           03  HD-1-RPT-NO                  PIC X     VALUE       ' '.
           03              FILLER           PIC X(20) VALUE       ' '.
           03  HD-1-REPORT-TITLE            PIC X(42) VALUE       ' '.
           03  HD-1-USER                    PIC X(16) VALUE       ' '.
           03              FILLER           PIC X(5)  VALUE   'DATE '.
           03  HD-1-RUN-DATE                PIC X(8)  VALUE       ' '.
           03              FILLER           PIC X(8)  VALUE
                                                           '   TIME '.
           03  HD-1-RUN-TIME                PIC XXBXXBXX.
           03              FILLER           PIC X(11) VALUE
                                                        '      PAGE '.
           03  HD-1-PAGE-NO                 PIC ZZZ.
       01  HEAD-LINE-2.
           03              FILLER           PIC X(55) VALUE
              '0            DATASET                              SEQ'.
           03              FILLER           PIC X(39) VALUE
                              '    BEGINNING            ENDING      '.
           03              FILLER           PIC X(39) VALUE
                              '      BLOCKS           TOTL DASD     '.
       01  HEAD-LINE-3.
           03              FILLER           PIC X(55)  VALUE
              '              NAME                                NUM'.
           03              FILLER           PIC X(39)  VALUE
                              '      BLOCK               BLOCK      '.
           03              FILLER           PIC X(39)  VALUE
                              '    ALLOCATED            PERCENT     '.
03              FILLER           PIC X.
           03  DETL-IMAGE.
               05          FILLER           PIC XX.
               05  DETL-NAME.
                   07      FILLER           PIC X(31).
                   07  DETL-USER-NAME       PIC X(15).
           03              FILLER           PIC X(4).
           03  DETL-SEQ                     PIC X.
           03              FILLER           PIC XXX.
           03  DETL-BEG-BLOCK-X.
               05  DETL-BEG-BLOCK           PIC ZZZ,ZZZ,ZZ9.
           03              FILLER           PIC X(8).
           03  DETL-END-BLOCK-X.
               05  DETL-END-BLOCK           PIC ZZZ,ZZZ,ZZZ.
           03              FILLER           PIC X(8).
            03  DETL-ALC-BLOCK               PIC ZZZ,ZZZ,ZZZ.
           03              FILLER           PIC X(12).
           03  DETL-PERCENT-X.
               05  DETL-PERCENT             PIC ZZZ.ZZZZ.
           03  DETL-PERCENT-SIGN            PIC X.
           03              FILLER           PIC X(6).

       01  DETL-LINE-2                      PIC X(133).
           EJECT
       PROCEDURE DIVISION.
           MOVE WHEN-COMPILED TO TIME-COMPILED.
           DISPLAY 'BEGIN PROGRAM ' PGM-ID TIME-COMPILED UPON CONSOLE.
           MOVE HIGH-VALUES TO  TABLE-USERS TABLE-SYSTEMS TABLE-VOLUMES.
           SET NME-IND      TO  ZEROS.
           SET SYS-IND      TO  ZEROS.
           SET VOL-IND      TO  ZEROS.
       100-OPEN-FILES.
           OPEN INPUT  CARD-FILE    DISK-FILE.
           OPEN OUTPUT PRINT-FILE1  PRINT-FILE2.
       110-SORT-REPORT.
           SORT SORT-FILE
               ASCENDING  SRT-KEY
               INPUT PROCEDURE  INPROC-REPORT
               OUTPUT PROCEDURE OUTPROC-REPORT.
       150-END-PROGRAM.
           CLOSE CARD-FILE    DISK-FILE.
           CLOSE PRINT-FILE1  PRINT-FILE2.
           DISPLAY 'END - DASDSPC' UPON CONSOLE.
           STOP RUN.
           EJECT
       INPROC-REPORT SECTION.
       1000-READ-CARDS.
           READ CARD-FILE AT END
               CLOSE CARD-FILE
               OPEN INPUT CARD-FILE
                                   GO TO 1300-READ-DISK.
           IF CODE-ID1
               IF DIVISION-ID1 = 'PHILA'
                   MOVE 'P'  TO  DIVISION-SW
               ELSE
               IF DIVISION-ID1 = 'SPART'
                   MOVE 'S'  TO  DIVISION-SW.
           IF CODE-ID1
               IF USER-ID1
                   MOVE '1'  TO  TABLE-SW
               ELSE
                   IF SYSTEM-ID1
                       MOVE '2'  TO  TABLE-SW.
           IF CODE-ID1 OR CODE-ID2 OR CODE-ID3
                                   GO TO 1000-READ-CARDS.
           IF TABLE-SW = '1'
               PERFORM 1100-LOAD-TABLE  THRU  1150-TABLE-EXIT.
           IF TABLE-SW = '2'
               PERFORM 1200-LOAD-TABLE  THRU  1250-TABLE-EXIT.
           GO TO 1000-READ-CARDS.
       1100-LOAD-TABLE.
           SET NME-IND UP BY +1.
           MOVE CARD-CODE2  TO  TBL-NME-CODE (NME-IND).
           MOVE CARD-NAME2  TO  TBL-NME      (NME-IND).
       1150-TABLE-EXIT.
           EXIT.
       1200-LOAD-TABLE.
           SET SYS-IND UP BY +1.
           MOVE CARD-CODE2  TO  TBL-SYS-CODE (SYS-IND).
           MOVE CARD-NAME2  TO  TBL-SYS      (SYS-IND).
       1250-TABLE-EXIT.
            EXIT.
       1300-READ-DISK.
      * A '#' IN DISK-NAME2-A INDICATES AN EXPIRED ADAS DISK FILE.
           READ DISK-FILE INTO DISK-RECORD AT END
                                   GO TO 1700-READ-CARDS.
           IF  PRIME-ID2
               IF DISK-NAME2-A = '#'
                   MOVE ' '                     TO DISK-NAME2
                   MOVE ' *** FREE EXTENT ***'  TO DISK-NAME2-B
                   MOVE ' FREE '                TO DISK-IDENT2.
           IF VOLUME-ID1  OR  PRIME-ID2  OR  FREE-ID2 OR VOLUME-1D3 OR
              DATA-ID4    OR  INDEX-ID4  OR  SPACE-ID5
               PERFORM 1400-BUILD-SORT  THRU 1450-BUILD-EXIT.
           GO TO 1300-READ-DISK.
       1400-BUILD-SORT.
      * IF ALL THE VSAM CATALOG NAMES ARE PREFIXED WITH THE VOLUME-ID,
      * THEN THE NEXT 18 LINES ARE NOT NEEDED.
           IF VOLUME-ID3
               IF DISK-VOLUME3 = 'PRL.US'
                   MOVE 'SYSWK6'  TO  DISK-VOLUME3
               ELSE
               IF DISK-VOLUME3 = 'CATLGP'
                   MOVE 'SYSWK9'  TO  DISK-VOLUME3
               ELSE
               IF DISK-VOLUME3 = 'VSAM.M'  AND  DIVISION-SW = 'P'
                   MOVE 'DOSRES'  TO  DISK-VOLUME3
               ELSE
               IF DISK-VOLUME3 = 'VSAM.M'  AND  DIVISION-SW = 'S'
                   MOVE 'SPTRES'  TO  DISK-VOLUME3
               ELSE
               IF DISK-VOLUME3 = 'VSESP.'  AND  DIVISION-SW = 'P'
                   MOVE 'SYSWK1'  TO  DISK-VOLUME3
               ELSE
               IF DISK-VOLUME3 = 'VSESP.'  AND  DIVISION-SW = 'S'
                   MOVE 'SPTWK1'  TO  DISK-VOLUME3.
           IF VOLUME-ID1
               MOVE DISK-VOLUME1  TO  HOLD-VOLUME.
           IF VOLUME-ID3
               MOVE DISK-VOLUME3  TO  HOLD-VOLUME.
           IF VOLUME-ID1  OR  VOLUME-ID3
               PERFORM 1600-CREATE-VOL-TABLE THRU 1650-CREATE-EXIT
                                   GO TO 1450-BUILD-EXIT.
           IF PRIME-ID2
               IF DISK-NAME2 = SPACES
                   MOVE HOLD-NAME  TO  DISK-NAME2.
           IF PRIME-ID2  OR  FREE-ID2
               MOVE DISK-NAME2   TO  HOLD-NAME.
           IF PRIME-ID2  OR  FREE-ID2  OR  DATA-ID4  OR  INDEX-ID4
               PERFORM 1500-SEARCH-TABLE  THRU 1550-SEARCH-EXIT.
           IF DATA-ID4  OR  INDEX-ID4
               MOVE DISK-NAME4   TO  HOLD-NAME
                                   GO TO 1450-BUILD-EXIT.
           MOVE SPACES          TO  SRT-REC.
           IF WRK-CODE = 'S'  OR  'V'
               MOVE '2'         TO  SRT-CODE
           ELSE
               MOVE '1'         TO  SRT-CODE.
           MOVE HOLD-VOLUME     TO  SRT-VOLUME.
           MOVE HOLD-USER       TO  SRT-USER.
           IF PRIME-ID2
               MOVE DISK-SEQ2   TO  SRT-SEQ.
           MOVE HOLD-NAME       TO  SRT-NAME.
           IF PRIME-ID2  OR  FREE-ID2
               EXAMINE DISK-BEGIN2 REPLACING ALL ' ' BY '0'
               EXAMINE DISK-END2   REPLACING ALL ' ' BY '0'
               COMPUTE SRT-NUMBLKS = (DISK-END2-9 - DISK-BEGIN2-9) + 1.
            IF SPACE-ID5
               EXAMINE DISK-ALLOC5 REPLACING ALL '-' BY '0'
               MOVE DISK-ALLOC5-9  TO  SRT-NUMBLKS.
           IF PRIME-ID2  OR  SPACE-ID5
               IF WRK-CODE NOT = 'V'
                   ADD SRT-NUMBLKS  TO  TBL-VOL-ALLOC (VOL-IND)
                                        TOT-NON-VM-ALLOC
                                        TOT-DASD-ALLOC.
           IF PRIME-ID2
               IF WRK-CODE = 'V'
                   ADD SRT-NUMBLKS  TO  TBL-VSM-DASD (VOL-IND).
           IF FREE-ID2
               ADD SRT-NUMBLKS  TO  TBL-VOL-FREE  (VOL-IND).
           IF SPACE-ID5
               ADD SRT-NUMBLKS  TO  TBL-VSM-ALLOC  (VOL-IND).

           MOVE DISK-RECORD  TO  SRT-DATA.
           RELEASE SRT-REC.

       1450-BUILD-EXIT.

           EXIT.
       1500-SEARCH-TABLE.
      *
        A '@' IN WRK-REACH INDICATES A REACH DISK FILE.
      *
           IF HOLD-VOLUME = 'SYSWKA'  OR  'SYSWKB'  OR  'SYSWK9'
               IF DATA-ID4  OR  INDEX-ID4
                   MOVE '2'  TO WRK-CODE
                                   GO TO 1525-SEARCH-TABLE.
           IF PRIME-ID2  OR  FREE-ID2
               MOVE DISK-NAME2  TO  WORK-NAME.
           IF DATA-ID4  OR  INDEX-ID4
               MOVE DISK-NAME4  TO  WORK-NAME.
           IF WRK-REACH = '@'
               MOVE WRK-FIELD2  TO  WRK-SYS
           ELSE
               MOVE WRK-FIELD1  TO  WRK-SYS.
           SET SYS-IND TO +1.
           SEARCH TABLE-SYSTEM AT END
                   MOVE 'Z'  TO  WRK-CODE
               WHEN TABLE-SYSTEM (SYS-IND) = HIGH-VALUES
                   MOVE 'Z'  TO WRK-CODE
               WHEN WRK-SYS  =  TBL-SYS (SYS-IND)
                   MOVE TBL-SYS-CODE (SYS-IND) TO  WRK-CODE.
       1525-SEARCH-TABLE.
           SET NME-IND TO +1.
           SEARCH TABLE-USER AT END
                   MOVE ' '  TO  HOLD-USER
               WHEN TABLE-USER (NME-IND) = HIGH-VALUES
                   MOVE ' '  TO  HOLD-USER
               WHEN WRK-CODE  =  TBL-NME-CODE (NME-IND)
                   MOVE TBL-NME (NME-IND) TO  HOLD-USER.
       1550-SEARCH-EXIT.
           EXIT.
       1600-CREATE-VOL-TABLE.
           SET VOL-IND TO +1.
           SEARCH TABLE-VOLUME AT END
                   DISPLAY 'NO MORE ENTRIES IN VOLUME TABLE'
                   STOP RUN
               WHEN TABLE-VOLUME (VOL-IND) = HIGH-VALUES
                                   GO TO 1625-CREATE-ENTRY
               WHEN HOLD-VOLUME = TBL-VOL-NAME (VOL-IND)
                                   GO TO 1650-CREATE-EXIT.
       1625-CREATE-ENTRY.
           IF SRT-VM-CODE = 'VM'
                ADD 1         TO  TOT-NUM-VM-VOLS
           ELSE
               ADD 1         TO  TOT-NUM-NON-VM-VOLS.
           ADD 1             TO  TOT-NUM-DASD-VOLS.
           MOVE HOLD-VOLUME  TO  TBL-VOL-NAME  (VOL-IND).
           MOVE ZEROS        TO  TBL-VOL-ALLOC (VOL-IND)
                                 TBL-VSM-ALLOC (VOL-IND)
                                 TBL-VOL-FREE  (VOL-IND)
                                 TBL-VSM-DASD  (VOL-IND).
       1650-CREATE-EXIT.
           EXIT.
       1700-READ-CARDS.
           READ CARD-FILE AT END
                                   GO TO 1900-END-INPROC.
           IF CARD-REC3 = SPACES
                                   GO TO 1700-READ-CARDS.
           IF VOLUME-ID  OR  DASH-ID  OR  OVERLAP-ID
                                   GO TO 1700-READ-CARDS.
           EXAMINE CARD-BEGIN-X  REPLACING ALL ' ' BY '0'.
           EXAMINE CARD-END-X    REPLACING ALL ' ' BY '0'.
           EXAMINE CARD-ALLOC-X  REPLACING ALL ' ' BY '0'.
           IF CARD-ALLOC = DASD-ALLOC
                                   GO TO 1700-READ-CARDS.
           PERFORM 1800-BUILD-SORT  THRU 1850-BUILD-EXIT.
           GO TO 1700-READ-CARDS.
       1800-BUILD-SORT.
           IF CARD-VOLUME NOT = SPACES
               MOVE CARD-VOLUME  TO  HOLD-VOLUME.
           IF CARD-VOLUME = SPACES
               MOVE HOLD-VOLUME  TO  CARD-VOLUME.
           MOVE SPACES            TO  SRT-REC.
           MOVE CARD-VOLUME       TO  SRT-VOLUME.
           IF GAP-ID
               MOVE 'FREE SPACE'  TO  SRT-USER
               MOVE '2'           TO  SRT-CODE
               MOVE '* GAP * '    TO  SRT-NAME
           ELSE
               MOVE 'V/M USAGE'   TO  SRT-USER
               MOVE '1'           TO  SRT-CODE
               MOVE CARD-NAME     TO SRT-NAME.
           MOVE 'VM'              TO SRT-VM-CODE.
           MOVE CARD-ALLOC        TO SRT-NUMBLKS.
           PERFORM 1600-CREATE-VOL-TABLE THRU 1650-CREATE-EXIT.
           IF NOT GAP-ID
               ADD SRT-NUMBLKS    TO TBL-VOL-ALLOC (VOL-IND)
                                     TOT-VM-ALLOC
                                     TOT-DASD-ALLOC.
           IF GAP-ID
               ADD SRT-NUMBLKS    TO TBL-VOL-FREE  (VOL-IND).
           MOVE CARD-REC3         TO SRT-DATA.
           RELEASE SRT-REC.
       1850-BUILD-EXIT.
           EXIT.
       1900-END-INPROC.
           EXIT.
           EJECT
       OUTPROC-REPORT SECTION.
           MOVE SPACES  TO  HOLD-VOLUME  HOLD-USER.
           SET VOL-IND  TO  ZEROS.
           GO TO 2050-RETURN-ROUTINE.
       2000-PRINT-HEADINGS.
           MOVE REPORT-TITLE-1  TO  HD-1-REPORT-TITLE.
           MOVE SRT-USER        TO  HD-1-USER.
           MOVE SRT-CODE        TO  HD-1-RPT-NO.
           PERFORM 8010-PRINT-HEAD-1.
           PERFORM 8020-PRINT-HEAD-2.
            PERFORM 8030-PRINT-HEAD-3.
       2050-RETURN-ROUTINE.
           PERFORM 2100-SORT-RETURN THRU 2150-SORT-RETURN-EXIT
                                   UNTIL SRT-REC = HIGH-VALUES.
           PERFORM 2400-VOLUME-BREAK  THRU  2450-VOLUME-BREAK-EXIT.
           PERFORM 2500-USER-BREAK    THRU  2550-USER-BREAK-EXIT.
           PERFORM 2600-DASD-BREAK    THRU  2650-DASD-BREAK-EXIT.
           GO TO 2900-OUTPROC-EXIT.
       2100-SORT-RETURN.
           RETURN SORT-FILE AT END
               MOVE HIGH-VALUES  TO  SRT-REC
                                   GO TO 2150-SORT-RETURN-EXIT.
           IF SRT-VM-CODE = 'VM'
               MOVE SRT-DATA  TO  CARD-REC3
           ELSE
               MOVE SRT-DATA  TO  DISK-RECORD.
           ON 1
               MOVE SRT-VM-CODE  TO  HOLD-VM-CODE
               MOVE SRT-CODE     TO  HOLD-CODE
               MOVE SRT-USER     TO  HOLD-USER
               PERFORM 2200-PRINT-DETAIL THRU 2250-PRINT-DETAIL-EXIT
                                   GO TO 2150-SORT-RETURN-EXIT.
           IF SRT-VOLUME NOT = HOLD-VOLUME
               PERFORM 2400-VOLUME-BREAK THRU 2450-VOLUME-BREAK-EXIT.
           IF SRT-USER NOT = HOLD-USER
               PERFORM 2500-USER-BREAK   THRU 2550-USER-BREAK-EXIT.
           PERFORM 2200-PRINT-DETAIL THRU 2250-PRINT-DETAIL-EXIT.
       2150-SORT-RETURN-EXIT.
           EXIT.
       2200-PRINT-DETAIL.
           IF LINE-CNT1 > 52
               PERFORM 2000-PRINT-HEADINGS.
           IF SRT-VOLUME NOT = HOLD-VOLUME
               MOVE '0'           TO  DETL-LINE-1
               MOVE SRT-VOLUME    TO  DETL-IMAGE
               MOVE SRT-VOLUME    TO  HOLD-VOLUME
               MOVE SRT-VM-CODE   TO  HOLD-VM-CODE
               PERFORM 8100-PRINT-DETAIL-LINE
               ADD 2              TO LINE-CNT1.
           MOVE ' '               TO  DETL-LINE-1.
           MOVE SRT-NAME          TO  DETL-NAME.
           MOVE SRT-SEQ           TO  DETL-SEQ.
           IF SRT-SEQ NOT < '1' AND NOT > '9'
               ADD SRT-NUMBLKS    TO  TOT-NUMBLKS
               MOVE SPACES        TO  DETL-NAME.
           IF SRT-VM-CODE = 'VM'
               MOVE CARD-BEGIN        TO  DETL-BEG-BLOCK
               MOVE CARD-END          TO  DETL-END-BLOCK
           ELSE
               IF PRIME-ID2  OR  FREE-ID2
                   MOVE DISK-BEGIN2-9 TO  DETL-BEG-BLOCK
                   MOVE DISK-END2-9    TO  DETL-END-BLOCK.
           IF SPACE-ID5
               MOVE '   * VSAM *'     TO  DETL-BEG-BLOCK-X
               MOVE '   * VSAM *'     TO  DETL-END-BLOCK-X.
           MOVE SRT-NUMBLKS           TO  DETL-ALC-BLOCK.
           ADD  SRT-NUMBLKS           TO  TOT-VOLUME-ALLOC
                                          TOT-USER-ALLOC.
           PERFORM 2300-SEARCH-TABLE  THRU  2350-SEARCH-EXIT.
      * TBL-VOL-ALLOC CALCULATES PERCENTAGE BASED ON ALLOCATED SPACE
      * DASD-ALLOC    CALCULATES PERCENTAGE BASED ON ENTIRE DASD SPACE
           IF SRT-CODE = '1'
               MOVE TBL-VOL-ALLOC (VOL-IND)  TO  HOLD-DIVISOR
           ELSE
               MOVE DASD-ALLOC               TO  HOLD-DIVISOR.
           IF DETL-PERCENT-X NOT = ' ERR '
                COMPUTE WORK-PERCENT ROUNDED =
                   (SRT-NUMBLKS / HOLD-DIVISOR)
                       ON SIZE ERROR
                           MOVE ' SZE ' TO DETL-PERCENT-X.
           IF DETL-PERCENT-X NOT = ' SZE '
               COMPUTE DETL-PERCENT = WORK-PERCENT * 100.
           MOVE '%'               TO  DETL-PERCENT-SIGN.
           PERFORM 8100-PRINT-DETAIL-LINE.
           ADD 1                  TO  LINE-CNT1.
       2250-PRINT-DETAIL-EXIT.
           EXIT.
       2300-SEARCH-TABLE.
           SET VOL-IND TO +1.
           SEARCH TABLE-VOLUME AT END
                   MOVE ' ERR '  TO DETL-PERCENT-X
               WHEN TABLE-VOLUME (VOL-IND) = HIGH-VALUES
                   MOVE ' ERR '  TO DETL-PERCENT-X
               WHEN SRT-VOLUME  =  TBL-VOL-NAME (VOL-IND)
                   NEXT SENTENCE.
       2350-SEARCH-EXIT.
           EXIT.
       2400-VOLUME-BREAK.
           MOVE ' '                                 TO  DETL-LINE-1.
           MOVE 'TOTAL VOLUME DASD ALLOCATION FOR ' TO  DETL-IMAGE.
           MOVE HOLD-VOLUME                         TO  DETL-USER-NAME.
           MOVE TOT-VOLUME-ALLOC                    TO  DETL-ALC-BLOCK.
      * TBL-VOL-ALLOC CALCULATES PERCENTAGE BASED ON ALLOCATED SPACE
      * DASD-ALLOC    CALCULATES PERCENTAGE BASED ON ENTIRE DASD SPACE
           IF HOLD-VM-CODE NOT = 'VM'  AND  HOLD-CODE = '1'
               MOVE TBL-VOL-ALLOC (VOL-IND)  TO  HOLD-DIVISOR
           ELSE
               MOVE DASD-ALLOC               TO  HOLD-DIVISOR.
           COMPUTE WORK-PERCENT ROUNDED =
               (TOT-VOLUME-ALLOC / HOLD-DIVISOR)
                   ON SIZE ERROR
                       MOVE ' ERR ' TO DETL-PERCENT-X.
           IF DETL-PERCENT-X NOT = ' ERR '
               COMPUTE DETL-PERCENT = WORK-PERCENT * 100.
           MOVE '%'          TO  DETL-PERCENT-SIGN.
           PERFORM 8100-PRINT-DETAIL-LINE.
           ADD 1              TO  LINE-CNT1.
           MOVE ZEROS         TO  TOT-VOLUME-ALLOC.
       2450-VOLUME-BREAK-EXIT.
           EXIT.
       2500-USER-BREAK.
           MOVE '0'                                TO  DETL-LINE-1.
           MOVE 'TOTAL USER DASD ALLOCATIONS FOR ' TO  DETL-IMAGE.
           MOVE HOLD-USER                          TO  DETL-USER-NAME.
           MOVE TOT-USER-ALLOC                     TO  DETL-ALC-BLOCK.
      * DASD-ALLOC * TOT-NUM-VM-VOLS     CALCULATES PERCENTAGE BASED ON
      * THE ENTIRE DASD SPACE FOR ALL THE VM VOLUMES.
      * DASD-ALLOC * TOT-NUM-NON-VM-VOLS CALCULATES PERCENTAGE BASED
      * ON THE ENTIRE DASD SPACE FOR ALL THE NON/VM VOLUMES.
      * DASD-ALLOC * TOT-NUM-DASD-VOLS  CALCULATES PERCENTAGE BASED ON
      * THE ENTIRE DASD SPACE FOR BOTH VM AND NON/VM VOLUMES.
           IF HOLD-VM-CODE = 'VM'  AND  HOLD-CODE = '1'
               COMPUTE HOLD-DIVISOR = DASD-ALLOC * TOT-NUM-VM-VOLS
           ELSE
               IF HOLD-VM-CODE NOT = 'VM'  AND  HOLD-CODE = '1'
                  MOVE TOT-NON-VM-ALLOC  TO  HOLD-DIVISOR
               ELSE
                   IF HOLD-USER = 'VSAM DATASETS'
                     COMPUTE HOLD-DIVISOR =
                                       DASD-ALLOC * TOT-NUM-NON-VM-VOLS
               ELSE
                     COMPUTE HOLD-DIVISOR =
                                        DASD-ALLOC * TOT-NUM-DASD-VOLS.
           COMPUTE WORK-PERCENT ROUNDED =
               (TOT-USER-ALLOC / HOLD-DIVISOR)
                   ON SIZE ERROR
                       MOVE ' ERR ' TO DETL-PERCENT-X.
           IF DETL-PERCENT-X NOT = ' ERR '
               COMPUTE DETL-PERCENT = WORK-PERCENT * 100.
           MOVE '%'          TO  DETL-PERCENT-SIGN.
           MOVE '3'          TO  HD-1-RPT-NO.
           IF LINE-CNT2 > 52
               PERFORM 3000-PRINT-HEADINGS.
           MOVE DETL-LINE-1  TO  DETL-LINE-2.
           PERFORM 8100-PRINT-DETAIL-LINE 2 TIMES.
           IF HOLD-USER NOT = ('FREE SPACE'  AND  'VSAM DATASETS')
               PERFORM 8110-PRINT-DETAIL-LINE.
           ADD 1             TO  LINE-CNT2.
           MOVE 99           TO  LINE-CNT1.
           MOVE ZEROS        TO  TOT-USER-ALLOC
           MOVE SRT-USER     TO  HOLD-USER.
           MOVE SPACES       TO  HOLD-VOLUME.
           IF SRT-CODE NOT = HOLD-CODE
               MOVE ZEROS    TO  PAGE-CNT1
               MOVE SRT-CODE TO  HOLD-CODE.
       2550-USER-BREAK-EXIT.
           EXIT.
       2600-DASD-BREAK.
           MOVE '0'                        TO  DETL-LINE-1.
           MOVE 'TOTAL  V/M  ALLOCATION '  TO  DETL-IMAGE.
           MOVE TOT-VM-ALLOC               TO  DETL-ALC-BLOCK.
      * DASD-ALLOC * TOT-NUM-VM-VOLS CALCULATES PERCENTAGE BASED ON
      * THE ENTIRE DASD SPACE FOR ALL THE VM VOLUMES.
           COMPUTE HOLD-DIVISOR = DASD-ALLOC * TOT-NUM-VM-VOLS.
           COMPUTE WORK-PERCENT ROUNDED =
               (TOT-VM-ALLOC / HOLD-DIVISOR)
                   ON SIZE ERROR
                       MOVE ' ERR '        TO DETL-PERCENT-X.
           IF DETL-PERCENT-X NOT = ' ERR '
               COMPUTE DETL-PERCENT = WORK-PERCENT * 100.
           MOVE '%'                        TO  DETL-PERCENT-SIGN.
           MOVE DETL-LINE-1                TO  DETL-LINE-2.
           PERFORM 8100-PRINT-DETAIL-LINE.
           PERFORM 8110-PRINT-DETAIL-LINE.           MOVE '%'
TO  DETL-PERCENT-SIGN.
           MOVE DETL-LI           MOVE ' '                        TO DETL-LINE-
1.
           MOVE 'TOTAL NON-VM ALLOCATION'  TO DETL-IMAGE.
           MOVE TOT-NON-VM-ALLOC           TO DETL-ALC-BLOCK.
      * DASD-ALLOC * TOT-NUM-NON-VM-VOLS CALCULATES PERCENTAGE BASED
      * ON THE ENTIRE DASD SPACE FOR ALL THE NON/VM VOLUMES.
           COMPUTE HOLD-DIVISOR = DASD-ALLOC * TOT-NUM-NON-VM-VOLS.
           COMPUTE WORK-PERCENT ROUNDED =
               (TOT-NON-VM-ALLOC / HOLD-DIVISOR)
                   ON SIZE ERROR
                       MOVE ' ERR '       TO DETL-PERCENT-X.
           IF DETL-PERCENT-X NOT = ' ERR '
               COMPUTE DETL-PERCENT = WORK-PERCENT * 100.
           MOVE '%'                       TO DETL-PERCENT-SIGN.
           MOVE DETL-LINE-1               TO DETL-LINE-2.
           PERFORM 8100-PRINT-DETAIL-LINE.
           PERFORM 8110-PRINT-DETAIL-LINE.
           MOVE ' '                        TO  DETL-LINE-1.
           MOVE 'TOTAL  DASD  ALLOCATION'  TO  DETL-IMAGE.
           MOVE TOT-DASD-ALLOC             TO  DETL-ALC-BLOCK.
      * DASD-ALLOC * TOT-NUM-DASD-VOLS CALCULATES PERCENTAGE BASED ON
      * THE ENTIRE DASD SPACE FOR ALL THE VM AND NON/VM VOLUMES.
           COMPUTE HOLD-DIVISOR = DASD-ALLOC * TOT-NUM-DASD-VOLS.
            COMPUTE WORK-PERCENT ROUNDED =
               (TOT-DASD-ALLOC / HOLD-DIVISOR)
                   ON SIZE ERROR
                       MOVE ' ERR '       TO DETL-PERCENT-X.
           IF DETL-PERCENT-X NOT = ' ERR '
               COMPUTE DETL-PERCENT = WORK-PERCENT * 100.
           MOVE '%'                       TO  DETL-PERCENT-SIGN.
           MOVE DETL-LINE-1               TO  DETL-LINE-2.
           PERFORM 8100-PRINT-DETAIL-LINE.
           PERFORM 8110-PRINT-DETAIL-LINE.
           MOVE '4'     TO  HD-1-RPT-NO.
           MOVE ZEROS   TO  PAGE-CNT2.
           PERFORM 3000-PRINT-HEADINGS.
           SET VOL-IND  TO  ZEROS.
       2625-DASD-TOTAL.
           SET VOL-IND UP BY +1.
           IF TABLE-VOLUME (VOL-IND) = HIGH-VALUES
                                   GO TO 2630-DASD-BREAK-TOTAL.
           IF LINE-CNT2 > 52
               PERFORM 3000-PRINT-HEADINGS.

           MOVE '0'                                  TO  DETL-LINE-1.
           MOVE 'TOTAL NON-VSAM DASD ALLOCATION - '  TO  DETL-IMAGE.
           MOVE TBL-VOL-NAME  (VOL-IND)              TO  DETL-USER-NAME.
           COMPUTE DETL-ALC-BLOCK =
                TBL-VOL-ALLOC (VOL-IND) - TBL-VSM-ALLOC (VOL-IND).
           COMPUTE TOT-VOL-ALLOC = TOT-VOL-ALLOC +
               (TBL-VOL-ALLOC (VOL-IND) - TBL-VSM-ALLOC (VOL-IND)).
           COMPUTE WORK-PERCENT ROUNDED =
               (TBL-VOL-ALLOC (VOL-IND) - TBL-VSM-ALLOC (VOL-IND))
                                                          / DASD-ALLOC
                   ON SIZE ERROR
                       MOVE ' ERR '       TO DETL-PERCENT-X.
           IF DETL-PERCENT-X NOT = ' ERR '
               COMPUTE DETL-PERCENT = WORK-PERCENT * 100.
           MOVE '%'                       TO  DETL-PERCENT-SIGN.
           MOVE DETL-LINE-1                          TO  DETL-LINE-2.
           PERFORM 8110-PRINT-DETAIL-LINE.
           ADD 2                                     TO  LINE-CNT2.
           MOVE ' '                                  TO  DETL-LINE-1.
           MOVE 'TOTAL   VSAM   DASD ALLOCATION - '  TO  DETL-IMAGE.
           MOVE TBL-VOL-NAME  (VOL-IND)              TO  DETL-USER-NAME.
           MOVE TBL-VSM-ALLOC (VOL-IND)              TO  DETL-ALC-BLOCK.
           COMPUTE TOT-VSM-ALLOC = TOT-VSM-ALLOC
                                              + TBL-VSM-ALLOC (VOL-IND).
           COMPUTE WORK-PERCENT ROUNDED =
               (TBL-VSM-ALLOC (VOL-IND) / DASD-ALLOC)
                   ON SIZE ERROR
                       MOVE ' ERR '       TO DETL-PERCENT-X.
           IF DETL-PERCENT-X NOT =' ERR '
               COMPUTE DETL-PERCENT = WORK-PERCENT * 100.
           MOVE '%'                       TO  DETL-PERCENT-SIGN.
           MOVE DETL-LINE-1                           TO  DETL-LINE-2.
           PERFORM 8110-PRINT-DETAIL-LINE.
           ADD 1                                      TO  LINE-CNT2.
           MOVE ' '                                   TO  DETL-LINE-1.
           MOVE 'TOTAL NON-VSAM DASD FREE-SPACE - '   TO  DETL-IMAGE.
           MOVE TBL-VOL-NAME  (VOL-IND)               TO  DETL-USER-NAME.
           MOVE TBL-VOL-FREE  (VOL-IND)               TO  DETL-ALC-BLOCK.
           COMPUTE TOT-VOL-FREE = TOT-VOL-FREE + TBL-VOL-FREE (VOL-IND).
           COMPUTE WORK-PERCENT ROUNDED =
               (TBL-VOL-FREE (VOL-IND) / DASD-ALLOC)
                   ON SIZE ERROR
                       MOVE ' ERR '       TO DETL-PERCENT-X.
           IF DETL-PERCENT-X NOT = ' ERR '
               COMPUTE DETL-PERCENT = WORK-PERCENT * 100.
            MOVE '%'                       TO  DETL-PERCENT-SIGN.
           MOVE DETL-LINE-1                          TO  DETL-LINE-2.
           PERFORM 8110-PRINT-DETAIL-LINE.
           ADD 1                                     TO  LINE-CNT2.
           MOVE ' '                                  TO  DETL-LINE-1.
           MOVE 'TOTAL   VSAM   DASD FREE-SPACE - '  TO  DETL-IMAGE.
           MOVE TBL-VOL-NAME  (VOL-IND)              TO  DETL-USER-NAME.
           COMPUTE DETL-ALC-BLOCK =
                      TBL-VSM-DASD (VOL-IND) - TBL-VSM-ALLOC (VOL-IND).
           COMPUTE TOT-VSM-FREE = TOT-VSM-FREE +
                     (TBL-VSM-DASD (VOL-IND) - TBL-VSM-ALLOC (VOL-IND)).
           COMPUTE WORK-PERCENT ROUNDED =
               (TBL-VSM-DASD (VOL-IND) - TBL-VSM-ALLOC (VOL-IND))
                                                            / DASD-ALLOC
                   ON SIZE ERROR
                       MOVE ' ERR '       TO DETL-PERCENT-X.
           IF DETL-PERCENT-X NOT = ' ERR '
               COMPUTE DETL-PERCENT = WORK-PERCENT * 100.
           MOVE '%'                       TO  DETL-PERCENT-SIGN.
           MOVE DETL-LINE-1               TO  DETL-LINE-2.
           PERFORM 8110-PRINT-DETAIL-LINE.
           ADD 1                          TO  LINE-CNT2.
           GO TO 2625-DASD-TOTAL.
       2630-DASD-BREAK-TOTAL.
           MOVE '0'                                  TO  DETL-LINE-1.
           MOVE 'TOTAL NON-VSAM DASD ALLOCATION  '   TO  DETL-IMAGE.
           MOVE TOT-VOL-ALLOC                        TO  DETL-ALC-BLOCK.
      * DASD-ALLOC * TOT-NUM-DASD-VOLS CALCULATES PERCENTAGE BASED ON
      * THE ENTIRE DASD SPACE FOR ALL THE VM AND NON/VM VOLUMES.
           COMPUTE HOLD-DIVISOR = DASD-ALLOC * TOT-NUM-DASD-VOLS.
           COMPUTE WORK-PERCENT ROUNDED = (TOT-VOL-ALLOC / HOLD-DIVISOR)
                   ON SIZE ERROR
                       MOVE ' ERR '       TO DETL-PERCENT-X.
           IF DETL-PERCENT-X NOT = ' ERR '
               COMPUTE DETL-PERCENT = WORK-PERCENT * 100.
           MOVE '%'                       TO  DETL-PERCENT-SIGN.
           MOVE DETL-LINE-1                          TO  DETL-LINE-2.
           PERFORM 8110-PRINT-DETAIL-LINE.
           MOVE ' '                                  TO  DETL-LINE-1.
           MOVE 'TOTAL   VSAM   DASD ALLOCATION  '   TO  DETL-IMAGE.
           MOVE TOT-VSAM-ALLOC                       TO  DETL-ALC-BLOCK.
           COMPUTE WORK-PERCENT ROUNDED = (TOT-VSM-ALLOC / HOLD-DIVISOR)
                   ON SIZE ERROR
                       MOVE ' ERR '       TO DETL-PERCENT-X.
           IF DETL-PERCENT-X NOT = ' ERR '
               COMPUTE DETL-PERCENT = WORK-PERCENT * 100.
           MOVE '%'                       TO  DETL-PERCENT-SIGN.
           MOVE DETL-LINE-1                          TO  DETL-LINE-2.
           PERFORM 8110-PRINT-DETAIL-LINE.
           MOVE ' '                                  TO  DETL-LINE-1.
           MOVE 'TOTAL NON-VSAM DASD FREE-SPACE   '  TO  DETL-IMAGE.
           MOVE TOT-VOL-FREE                         TO  DETL-ALC-BLOCK.
           COMPUTE WORK-PERCENT ROUNDED = (TOT-VOL-FREE / HOLD-DIVISOR)
                   ON SIZE ERROR
                       MOVE ' ERR '       TO DETL-PERCENT-X.
           IF DETL-PERCENT-X NOT = ' ERR '
               COMPUTE DETL-PERCENT = WORK-PERCENT * 100.
           MOVE '%'                       TO  DETL-PERCENT-SIGN.
           MOVE DETL-LINE-1                          TO  DETL-LINE-2.
           PERFORM 8110-PRINT-DETAIL-LINE.
           MOVE ' '                                  TO  DETL-LINE-1.
           MOVE 'TOTAL   VSAM   DASD FREE-SPACE   '  TO  DETL-IMAGE.
           MOVE TOT-VSM-FREE                         TO  DETL-ALC-BLOCK.
           COMPUTE WORK-PERCENT ROUNDED = (TOT-VSM-FREE / HOLD-DIVISOR)
                   ON SIZE ERROR
                       MOVE ' ERR '       TO DETL-PERCENT-X.
            IF DETL-PERCENT-X NOT = ' ERR '
               COMPUTE DETL-PERCENT = WORK-PERCENT * 100.
           MOVE '%'                       TO  DETL-PERCENT-SIGN.
           MOVE DETL-LINE-1               TO  DETL-LINE-2.
           PERFORM 8110-PRINT-DETAIL-LINE.
       2650-DASD-BREAK-EXIT.
           EXIT.
       2900-OUTPROC-EXIT.
           EXIT.
           EJECT
       MISC-RTNS SECTION.
       3000-PRINT-HEADINGS SECTION.
           MOVE REPORT-TITLE-2  TO  HD-1-REPORT-TITLE.
           MOVE SPACES          TO  HD-1-USER.
           PERFORM 8040-PRINT-HEAD-1.
           PERFORM 8050-PRINT-HEAD-2.
           PERFORM 8060-PRINT-HEAD-3.
           MOVE SPACES  TO  DETL-LINE-2.
           PERFORM 8110-PRINT-DETAIL-LINE.
       8010-PRINT-HEAD-1 SECTION.
           MOVE CURRENT-DATE  TO  HD-1-RUN-DATE.
           MOVE TIME-OF-DAY   TO  HD-1-RUN-TIME.
           EXAMINE HD-1-RUN-TIME REPLACING ALL ' ' BY '.'.
           ADD 1              TO  PAGE-CNT1.
           MOVE PAGE-CNT1     TO  HD-1-PAGE-NO.
           WRITE PRT-REC1 FROM HEAD-LINE-1  AFTER POSITIONING PRT-CC1.
           MOVE ZEROS         TO  LINE-CNT1.
       8020-PRINT-HEAD-2 SECTION.
           WRITE PRT-REC1 FROM HEAD-LINE-2 AFTER POSITIONING PRT-CC1.
       8030-PRINT-HEAD-3 SECTION.
           WRITE PRT-REC1 FROM HEAD-LINE-3 AFTER POSITIONING PRT-CC1.
       8040-PRINT-HEAD-1 SECTION.
           MOVE CURRENT-DATE  TO  HD-1-RUN-DATE.
           MOVE TIME-OF-DAY   TO  HD-1-RUN-TIME.
           EXAMINE HD-1-RUN-TIME REPLACING ALL ' ' BY '.'.
           ADD 1              TO  PAGE-CNT2.
           MOVE PAGE-CNT2     TO  HD-1-PAGE-NO.
           WRITE PRT-REC2 FROM HEAD-LINE-1  AFTER POSITIONING PRT-CC2.
           MOVE ZEROS         TO  LINE-CNT2.
       8050-PRINT-HEAD-2 SECTION.
           WRITE PRT-REC2 FROM HEAD-LINE-2 AFTER POSITIONING PRT-CC2.
       8060-PRINT-HEAD-3 SECTION.
           WRITE PRT-REC2 FROM HEAD-LINE-3 AFTER POSITIONING PRT-CC2.
       8100-PRINT-DETAIL-LINE SECTION.
           WRITE PRT-REC1 FROM DETL-LINE-1 AFTER POSITIONING PRT-CC1.
           MOVE SPACES TO DETL-LINE-1.
       8110-PRINT-DETAIL-LINE SECTION.
           WRITE PRT-REC2 FROM DETL-LINE-2 AFTER POSITIONING PRT-CC2.
           MOVE SPACES TO DETL-LINE-2.
Robert Ferro
Systems Programmer
Progress Lighting (USA)  ) Xephon 1988














