VM CMS LISTCAT

ÝEditor's note: this offers an alternative approach to the one that
appeared on page 36 of issue 4.¨

This article deals with the task of keeping an eye on CI and CA
splits in files on VSAM catalogs.  I became tired of wading
through the typical IDCAMS LISTCAT output for just a few
items of information so I decided to develop a system of EXECs
to process the IDCAMS output in CMS and produce abbreviated
listings with the more important pieces of information listed.


The pre-requisites of this system are:

1   VSAM must be installed in CMS.  (The procedures to do this
are in the VM documentation so I will not address this except
to say that installation must be complete up to and including
the VSAM shared segment.)

2   The DOS segment must be generated and saved (this is also
covered in the VM documentation).

3   The entries in Figure 1 must be added to the VM directory
and the directory must be regenerated.


The flow of this system is:

1   VMUTIL logs on the machine that contains the EXECs that
produce the reports.  (Figure 2 contains the lines I added to
VMUTIL's WAKEUP parms file.)  I chose to log on the
machine at 5 am, but any time could be inserted.

2   The CHKDSK machine (its name can be changed if all
references are changed) executes its profile (PROFILE EXEC
contains the lines I added to the machine's profile) at log-on.
If the time window matches, the EXEC CATSIPO executes
and produces a full LISTCAT of a particular catalog that
belongs to one of our VSE machines.  The user, of course,
must change this EXEC to use their own catalog names.

3   When CATSIPO gets the LISTCAT on the CMS file it kicks
off another EXEC (SIPO) which reads the LISTCAT line by
line extracting the data I chose to put on the report.  The user
could easily modify the EXEC to extract any data required
and format it any way they choose.

4   Once the condensed report is ready it is shipped to the VM
print queue for printing.  I wanted to print the report on 8x11
paper so I generate an FCB for VM for that form.  If the user
does not want to generate an FCB the 8x11 can be taken off
the print line.


Again, the VM documentation covers the use of VM under CMS
and between that and reading the EXECs I don't think setting up
the system will prove too difficult.


PROFILE EXEC
IDENTIFY(STACK
&READ ARGS
&IF &7 > 04:45:00 &IF &7 < 08:30:00 EXEC CATSIPO
&EXIT
CATSIPO EXEC
&TRACE OFF
SET DOS ON(VSAM
CP LINK ONLINEA 240 434 RR ONLA
CP LINK ONLINEA 251 435 RR ONLA
ACC 434 E
ACC 435 B
ASSGN SYSCAT E
ASSGN SYS005 B
&M = VSAM.MASTER.CATALOG
&U = SIPOE.USER.CATALOG
DLBL IJSYSCT E DSN &M (SYSCAT
DLBL IJSYSUC B DSN &U (SYS005
AMSERV ALLSPA
ERASE SIPOE LISTING A
RENAME ALLSPA LISTING A SIPOE LISTING A
REL E (DET
REL F (DET
REL B (DET
SET DOS OFF
EXEC SIPO
COPYFILE VSAM SIPOTOTS A SIPOEUC SPACE A(APPEND
CP SPOOL PRINTER CLASS R FORM 8X11
PRINT VSAM SIPOTOTS A
CP SPOOL PRINTER CLASS A
&EXIT
SIPO EXEC
&TRACE OFF
* ** THIS EXEC EXTRACTS INFO VSAM CATALOG FROM LISTINGS
* TRACE IS OFF NOW BUT COULD BE SET TO ALL TO SEE RESULTS OF
ALL
* STEPS IF BUGS SHOW UP
&CALL -HOUSEKEEP
&LOOP -LOOP_END UNTIL &RC ¬= 0
EXECIO 1 DISKR SIPOE LISTING A
&IF &RC ¬= 0 &GOTO -LOOP_END
&READ ARGS
&CKV0 = 0
&CKV8 = 0
&L = 0
&IF &N = 0 &GOTO -LOOP_END
&CKVT = &LEFT OF &1 8
&CKVV = &LEFT OF &1 7
&IF &CKVT = TRACKS-T &GOTO -DETOUR
&IF &CKVT = TRACKS-U &GOTO -DETOUR
&IF &N = 1 &GOTO -BYPS1
&CKV0 = &LEFT OF &2 7
&CKV8 = &LEFT OF &2 8
-DETOUR
&IF &CKV0 = VOLSER- &VOLS = &RIGHT OF &2 6
&IF &CKVV = OVOLUME &VOLUM = &3
&IF &CKVV = OVOLUME &CALL -VOLWRIT
&IF &CKV0 = TRACKS- &TRAC = &2
&IF &CKV0 = TRACKS- &CALL -WRTUSED
&IF &CKVV = TRACKS- &TRAC = &1
&IF &CKVV = TRACKS- &CALL -WRTUSED
&IF &CKV8 = TRACKS-T &TRTT = &2
&IF &CKV8 = TRACKS-T &CALL -GETTOTT
&IF &CKV8 = TRACKS-U &TRTU = &2
&IF &CKV8 = TRACKS-U &CALL -GETTOTU
&IF &CKV8 = TRACKS-U &CALL -WRITOTU
&IF &CKVT = TRACKS-T &TRTT = &1
&IF &CKVT = TRACKS-T &CALL -GETTOTT
&IF &CKVT = TRACKS-U &TRTU = &1
&IF &CKVT = TRACKS-U &CALL -GETTOTU
&IF &CKVT = TRACKS-U &CALL -WRITOTU
&IF &CKV0 = DATA &IND = DATA
&IF &CKV0 = INDEX &CALL -DSNWRIT
&IF &CKV0 = INDEX &IND = INDEX
&IF &CKV0 = DEVTYPE &IF &N = 5 &EXT = &5
&IF &CKV0 = DEVTYPE &IF &N = 5 &CALL -EXTNTYPE
&IF &CKV0 = REC-DEL &CA = &3
&IF &CKV0 = REC-DEL &EX = &4
&IF &CKV0 = REC-DEL &CALL -CASPEXT
&IF &CKV0 = LOW-CCH &TRA = &4
&IF &CKV0 = LOW-CCH &CHC = &2
&IF &CKV0 = LOW-CCH &CALL -GETTRAK
-BYPS1
&CKV = &LEFT OF &1 7
&IF &CKV = VOLSER- &VOLS = RIGHT OF &1 6
&IF &CKV = DEVTYPE &EXT = &4
&IF &CKV = DEVTYPE &CALL -EXTNTYPE
&IF &CKV = 0CLUSTE &DSNB = &3
&IF &CKV = 0CLUSTE &DS = &LEFT OF &DSNB 3
&IF &CKV = 0CLUSTE &IF &PFLG = 1 &CALL -DSNWRIT
&IF &CKV = 0CLUSTE &IF &PFLG = 0 &DSN = &3
&IF &CKV = 0CLUSTE &IF &PFLG = 0 &PFLG = 1
&IF &CKV = REC-TCT &CI = &2
&IF &CKV = REC-TOT &CALL -CISPLIT
&IF &CKV = REC-DEL &CA = &2
&IF &CKV = REC-DEL &EX = &3
&IF &CKV = REC-DEL &CALL -CASPEXT
&IF &CKV = LOW-CCH &TRA = &3
&IF &CKV = LOW-CCH &CHC = &1
&IF &CKV = LOW=CCH &CALL -GETTRAK
-LOOP_END
&CALL -DSNWRIT
&CALL -WRAPUP
&EXIT
-HOUSEKEEP
ERASE VSAM SIPOTOTS A
ERASE VSAM SIPOVOLT A
&PFLG = 0
&TOTR = 0
&TOTT = 0
&TOTU = 0
&TOTTT = 0
&TOTTU = 0
&TOTUV = 0
&TOTTV = 0
&VOLSPA = 0
&TOTAV = 0
&H1 = -
&H2 = --
&H3 = ---
&B1 = &BLANK
&B = &LEFT OF &BLANK 1
&B2 = &LEFT OF &BLANK 1
&PS = ****<<<<
&PT = %>>>>****
&PU = *********
&Z = --0
&C = ---0
&D = ---0
IDENTIFY(STACK
&READ ARGS
&DAT = &6
&TIM = &7
&DY = &8
&CALL -INITWRIT
&MOD = 0
&LST = 0
&RETURN
-INITWRIT
EXECIO 1 DISKW VSAM SIPOTOTS A (ST CATALOG
                      SIPOE.USER.CATALOG &DAT &TIM
EXECIO 1 DISKW VSAM SIPOTOTS A (ST &B &B &B &B  SPLITS
EXECIO 1 DISKW VSAM SIPOTOTS A (ST EXTNTS  CI- &B CA- &B
TRACKS &B
                       VOLUME &B FILE
&RETURN
-EXTNTYPE
&CKE = &RIGHT OF &EXT 4
&RETURN
-VOLWRIT
EXECIO 1 DISKW VSAM SIPOVOLT A (ST  VOLUME &VOLUM
&RETURN
-WRAPUP
&TOTAV = &TOTTT - &TOTT
* CALL A REXX SUBROUTINE TO DO CALCULATIONS PASS HIM ALL
NUMERIC FIELDS
&SUBCOMMAND CMS EXEC DIVIR &TOTAV &TOTTT
&READ ARGS
&PRCA = &1
* READ STACK TO GET WHAT HE CAME UP WITH FOR US
EXECIO 1 DISKW VSAM SIPOVOLT A (ST
**********************************
EXECIO 1 DISKW VSAM SIPOVOLT A (ST *****
                     TOTAL TRACKS DEFINED  - &TOTTT &PU
EXECIO 1 DISKW VSAM SIPOVOLT A (ST *****
                     ACCUMULATED TRACKS USED- &TOTT &PU
EXECIO 1 DISKW VSAM SIPOVOLT A (ST *****
                     TOTAL TRACKS AVAILABLE- &TOTAV &PU
EXECIO 1 DISKW VSAM SIPOVOLT A (ST
**********************************
EXECIO 1 DISKW VSAM SIPOVOLT A (ST *PERCENT
                       OF SPACE AVAILABLE &PS &PRCA &PT
EXECIO 1 DISKW VSAM SIPOVOLT A (ST
**********************************
FINIS SIPOE LISTING A
FINIS VSAM SIPOTOTS A
FINIS VSAM SIPOVOLT A
COPYFILE VSAM SIPOVOLT A VSAM SIPOTOTS A(APPEND
&RETURN
-DSNWRIT
&LEN = &LENGTH OF &TOTR
&IF &LEN = 1 &TOTR = &CONCAT OF &H3 &TOTR
&IF &LEN = 2 &TOTR = &CONCAT OF &H2 &TOTR
&IF &LEN = 3 &TOTR = &CONCAT OF &H1 &TOTR
EXECIO 1 DISKW VSAM SIPOTOTS A (ST  &Z &B &C &B &D
                                &B &TOTR &B &VOLS &B &DSN &B &IN
&Z = --0
&C = ---0
&D = ---0
&TOTR = 0
&VOLS = &B
&DSN = &DSNB
&RETURN
-CISPLIT
&C = &RIGHT OF &CI 4
&RETURN
-CASPEXT
&D = &RIGHT OF &CA 4
&Z = &RIGHT OF &EX 3
&RETURN
-GETTOTT
&TOTTV = 0
&H = 10
-GETTT
&Y = &RIGHT OF &TRTT &H
&E = &LEFT OF &Y 1
&IF &H = 10 &IF &E ¬= - &FINIS SIPOE LISTING A
&IF &H = 10 &IF &E ¬= - &TYPE A CATASTROPHIC ERROR EXISTS
&IF &H = 10 &IF &E ¬= - &EXIT
&IF &E = - &H = &H - 1
&IF &E = - &GOTO -GETTT
&TOTTV = &TOTTV + &Y
&TOTTT = &TOTTT + &Y
&RETURN
-GETTOTU
&TOTUV = 0
&H = 10
-GETTU
&Y = &RIGHT OF &TRTU &H
&E = &LEFT OF &Y 1
&IF &H = 10 &IF &E ¬= - &FINIS SIPOE LISTING A
&IF &H = 10 &IF &E ¬= - &TYPE A CATASTROPHIC ERROR EXISTS
&IF &H = 10 &IF &E ¬= - &EXIT
&IF &E = - &H = &H - 1
&IF &E = - &GOTO -GETTU
&TOTUV = &TOTUV + &Y
&TOTTU = &TOTTU + &Y
&RETURN
-GETTRAK
&H = 5
-GETA
&Y = &RIGHT OF &TRA &H
&E = &LEFT OF &Y 1
&IF &H = 5 &IF &E ¬= - &FINIS SIPOE LISTING A
&IF &H = 5 &IF &E ¬= - &TYPE A CATASTROPHIC ERROR EXISTS
&IF &H = 5 &IF &E ¬= - &EXIT
&IF &E = - &H = &H - 1
&IF &E = - &GOTO -GETA
&IF &CKE ¬= '80' &TOTR = &TOTR + &Y
&IF &CKE ¬= '80' &TOTT = &TOTT + &Y
&RETURN
-WRITOTU
&VOLSPA = &TOTTV - &TOTUV
* CALL A REXX SUBROUTINE TO DO CALCULATIONS
*          PASS HIM ALL NUMERIC FIELDS
&SUBCOMMAND CMS EXEC DIVIR &VOLSPA &TOTTV
&READ ARGS
&PRVA = &1
* READ STACK TO GET WHAT HE CAME UP WITH FOR US
EXECIO 1 DISKW VSAM SIPOVOLT A (ST SPACE &VOLUM TRACKS AVAILABLE- &VOLSPA
EXECIO 1 DISKW VSAM SIPOVOLT A (ST **********************************
EXECIO 1 DISKW VSAM SIPOVOLT A (ST *PERCENT AVAILABLE THIS SPACE &PS &PRVA &PT
EXECIO 1 DISKW VSAM SIPOVOLT A (ST **********************************
&RETURN
-WRTUSED
EXECIO 1 DISKW VSAM SIPOVOLT A (ST  SPACE  &TRAC
&RETURN
-GETTRA
&HB = 5
-GETAB
&YB = &RIGHT OF &TRAB &HB
&EB = &LEFT OF &YB 1
&IF &HB = 5 &IF &EB ¬= - &FINIS SIPOE LIST A
&IF &HB = 5 &IF &EB ¬= - &TYPE A CATASTROPHIC ERROR EXISTS
&IF &HB = 5 &IF &EB ¬= - &EXIT
&IF &EB = - &HB = &HB - 1
&IF &EB = - &GOTO -GETAB
&RETURN


VSAM SIPOTOTS

Part of output

VOLUME UCGWK4
SPACE TRACKS-TOTAL---------135
SPACE TRACKS-USED----------135
SPACE UCGWK4 TRACKS AVAILABLE- 0
*******************************************
*PERCENT AVAILABLE THIS SPACE ****<<<< 0 %>>>>****
*******************************************
SPACE TRACKS-TOTAL-------13109
SPACE TRACKS-USED--------10362
SPACE UCGWK4 TRACKS AVAILABLE- 2747
*******************************************
*PERCENT AVAILABLE THIS SPACE ****<<<< 20.9550690 %>>>>****
*******************************************
*******************************************
***** TOTAL TRACKS DEFINED - 14444 ********
***** ACCUMULATED TRACKS USED- 11550 ********
***** TOTAL TRACKS AVAILABLE- 2894 ********
*******************************************
*PERCENT OF SPACE AVAILABLE ****<<<< 20.0360011 %>>>>****
*******************************************


David Brooks
Systems Programmer
United Cities Gas Company (USA)  ) Xephon 1989

