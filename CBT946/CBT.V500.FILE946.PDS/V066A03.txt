Directory maintenance (continued)

This month we conclude the article describing a software
package that automates operations to the CP directory.

ERRMSG:
ERCODE = ARG(1)
'CP SET MSG ON'
'CP SET IMSG ON'
'CP SET EMSG ON'
'CP SET SMSG ON'
'SET CMSTYPE RT'
'CLRSCRN'
SELECT
    WHEN ERCODE = 1  THEN DO
ARG ERCODE, CMSERR, FILENAME, FILETYPE, FILEMODE
SAY 'MAINTDIR ERROR NUMBER' ERCODE
SAY
SAY 'THE FILE' FILENAME FILETYPE FILEMODE 'WAS NOT FOUND !!!'
                     END
    WHEN ERCODE = 2  THEN DO
ARG ERCODE, CMSERR, FILENAME, FILETYPE, FILEMODE
SAY 'MAINTDIR ERROR NUMBER' ERCODE
SAY
SAY 'ERROR' CMSERR 'FROM EXECIO WHEN READING' FILENAME FILETYPE FILEMODE
                     END
    WHEN ERCODE = 3  THEN DO
ARG ERCODE, CMSERR, USERID
'FINIS USER DIRECT A'
'ERASE NEWUSER DIRECT A'
SAY 'MAINTDIR ERROR NUMBER' ERCODE
SAY
SAY 'ERROR' CMSERR 'WHEN READING' USERID 'DIRECT'
SAY
SAY "THE USER'S DIRECTORY ENTRIES REMAIN ON MAINT FFF ",
    "UNDER THEIR USERID DIRECT."
SAY
SAY 'NO CHANGES HAVE BEEN MADE TO THE ORIGINAL CP DIRECTORY !!!'
                     END
/*  WHEN ERCODE = 4  THEN DO        IS NOT USED.     *****************/
/*  WHEN ERCODE = 5  THEN DO        IS NOT USED.     *****************/
    WHEN ERCODE = 6  THEN DO
ARG ERCODE, CMSERR, FILENAME, FILETYPE, FILEMODE
'ERASE USER DIRECT A'
'RENAME OLDUSER DIRECT A USER = ='
SAY 'MAINTDIR ERROR NUMBER' ERCODE
SAY
SAY 'ERROR' CMSERR 'FROM EXECIO WHEN WRITING TO THE FILE'
    FILENAME, FILETYPE, FILEMODE
SAY
SAY 'NO CHANGES HAVE BEEN MADE TO THE ORIGINAL CP DIRECTORY !!!'
                     END
    WHEN ERCODE = 7  THEN DO
ARG ERCODE, CMSERR
SAY 'MAINTDIR ERROR NUMBER' ERCODE
SAY
SAY 'ERROR' CMSERR 'WHEN EXECUTING THE COMMAND: DIRECT !!!!!'
                     END
    WHEN ERCODE = 8  THEN DO
ARG ERCODE, CMSERR
SAY 'MAINTDIR ERROR NUMBER' ERCODE
SAY
SAY 'ERROR' CMSERR 'WHEN EXECUTING THE COMMAND: DISKMAP !!!!!'
                     END
    WHEN ERCODE = 9  THEN DO
ARG ERCODE, CMSERR
'SET CMSTYPE HT'
'FINIS USER DIRECT A'
'ERASE NEWUSER DIRECT A'
'SET CMSTYPE RT'
SAY 'MAINTDIR ERROR NUMBER' ERCODE
SAY
SAY 'ERROR' CMSERR 'WHEN READING(WRITING) FROM(TO) DIRECTORY.'
SAY
SAY 'NO CHANGES HAVE BEEN MADE TO THE ORIGINAL CP DIRECTORY !!!'
                     END
    WHEN ERCODE = 10 THEN DO
ARG ERCODE
SAY 'MAINTDIR ERROR NUMBER' ERCODE
SAY
SAY 'THERE IS NO ROOM ON MAINT FFF DISK TO DUPLICATE CURRENT ',
    'DIRECTORY'
SAY
SAY 'FIRST MAKE ROOM ON THIS DISK, THEN RERUN THE PROGRAM.'
                     END
    OTHERWISE
SAY 'MAINTDIR ERROR NUMBER 99'
SAY
SAY 'ERRMSG WAS CALLED WITHOUT PROPER ERROR NUMBER........'
    END
CALL WAITLOOP    /* MAINTAIN WILL CLEAR SCREEN BEFORE ENDING MESSAGE */
EXIT


SORTDIR EXEC

/*  SORTDIR EXEC.  SORTS CP DIRECTORY                                 */
'CLRSCRN'
SAY 'SORTING USER DIRECT A.  PLEASE  WAIT ................'
'MAKEBUF'
CT = 0                  /* NUMBER OF USER-IDS IN THE DIRECTORY        */
LINENUM = 0             /* LINE TO BE WRITTEN TO DISK, SEE WRITELINE: */
/* FIRST COPY THE DIRECTORY UNTIL THE FIRST USER-ID IS REACHED        */
DO FOREVER
   CALL READLINE
   IF RESULT ¬= 0 THEN LEAVE
   PARSE VAR LINE ENTRY .
   IF (ENTRY = 'USER') THEN LEAVE
   CALL WRITELINE
END
/*                  START    OF   THE  SORTING  LOOP                  **
**--------------------------------------------------------------------**
** DIRECTORY ENTRIES FOR EACH USER ARE READ INTO  USERID.I.J , WHERE  **
** I IS THE USER NUMBER, WITH TOTAL IN CT, AND J IS THE ENTRY NUMBER  **
** FOR THAT USER. THESE ARE SORTED, BY USER-ID, AS THEY ARE READ FROM **
** USER DIRECT. EVERYTHING IS KEPT IN MEMORY, UNTIL LOOP TERMINATES.  */
DO FOREVER
   CT = CT + 1              /* INCREMENT FOR EACH USER READ           */
   USERID.CT.1 = LINE       /* FIRST LINE READ FROM DIRECTORY IS USER */
   J = 1                    /* FIRST DIRECTORY ENTRY RECORDED ABOVE   */
/* NOW READ AND RECORD THE REST OF DIRECTORY ENTRIES FOR THIS USER ,  **
** UNTIL THE NEXT USER, OR END OF DIRECTORY HAS BEEN REACHED.         */
   DO FOREVER
      RETCODE = 0
      CALL READLINE
      IF RESULT ¬= 0                  /* END OF DIRECTORY             */
         THEN DO
            RETCODE = RESULT
            LEAVE
         END
      PARSE VAR LINE ENTRY .
      IF ENTRY = 'USER' THEN LEAVE    /* NEXT USER REACHED            */
      J = J + 1
      USERID.CT.J = LINE              /* RECORD ENTRIES FOR THIS USER */
   END
/* ALL ENTRIES FOR THIS USER ARE READ. NOW RECORD, IN COUNT.CT, HOW   **
** MANY LINES YOU HAVE RECORDED FOR THIS USER. THIS IS NEEDED FOR     **
** WRITING BACK TO DISK.                                              */
   COUNT.CT = J
   PARSE VAR USERID.CT.1 ENTRY NEWID .  /* GET NEW USER-ID TO COMPARE */
   K = CT
/* SINCE THE LIST IS SORTED SO FAR, START COMPARING THE NEW USER-ID   **
** WITH THE LAST ONE IN THE LIST, AND COME UP UNTIL THE SPOT IS FOUND */
   DO FOREVER
      K = K - 1                       /* GO UP THE LIST BY ONE        */
      IF K > 0                        /* NOT YET TOP OF LIST          */
         THEN DO
            PARSE VAR USERID.K.1 ENTRY OLDID .      /* GET NEXT USER  */
            IF OLDID < NEWID          /* IF YES, SPOT IS FOUND        */
               THEN DO
                  INDEX = K + 1       /* SPOT FOR INSERTING NEW USER  */
                  LEAVE
               END
         END
         ELSE DO          /* NEW USER-ID SMALLER THAN ALL IN THE LIST */
            INDEX = 1                /* SPOT TO INSERT IS TOP OF LIST */
            LEAVE
         END
   END
/* THE SPOT TO INSERT NEW USER HAS BEEN FOUND , IT IS IN  INDEX       */
      IF INDEX < CT             /* OTHERWISE NEW USER STAYS AT BOTTOM */
         THEN DO
            DO K = 1 TO COUNT.CT      /* PUT USER INFO IN TEMP        */
               TEMP.K = USERID.CT.K
            END
            CNT = COUNT.CT            /* AND HIS NUM OF LINES IN CNT  */
            DO I = CT - 1  TO  INDEX  BY -1    /* MOVE LIST DOWN TO   */
               DO J = 1 TO COUNT.I             /* OPEN SPOT FOR NEW   */
                  K = I + 1                    /* USER                */
                  USERID.K.J = USERID.I.J
               END
               COUNT.K = COUNT.I      /* ALSO MOVE NUM OF LINES       */
            END
            I = INDEX                 /* NOW INSERT NEW USER          */
            DO J = 1 TO CNT
               USERID.I.J = TEMP.J
            END
            COUNT.I = CNT             /* AND NUM OF LINES IN DIRECTORY*/
         END                          /* END OF ISERTION              */
   IF RETCODE ¬= 0 THEN LEAVE         /* END OF DIRECTORY             */
END
/*              END    OF  SORTING     LOOP                           **
**--------------------------------------------------------------------**
** NOW WRITE THE LIST TO DISK. IT IS SORTED.                          */
DO I = 1 TO CT
   DO J = 1 TO COUNT.I
      LINE = USERID.I.J
      CALL WRITELINE
   END
END
'DROPBUF'
'FINIS USER DIRECT A'
'FINIS SORTUSER DIRECT A'
'ERASE USER DIRECT A'
'RENAME SORTUSER DIRECT A USER = ='
'CLRSCRN'
SAY 'USER DIRECT FILE HAS BEEN SORTED.'
EXIT
/* READS ONE LINE FROM DIRECTORY AND PUTS IT IN LINE                  */
READLINE:
'EXECIO 1 DISKR USER DIRECT A ( VAR  LINE'
IF RC ¬= 0 THEN
   IF RC = 2
      THEN RETURN 2
      ELSE CALL ERROR 'READING', RC
RETURN 0
/* WRITES THE CONTENTS OF  LINE TO CP DIRECTORY: SORTUSER DIRECT      */
WRITELINE:
LINENUM = LINENUM + 1
'EXECIO 1 DISKW SORTUSER DIRECT A' LINENUM 'F 80 (STRING' LINE
IF RC ¬= 0 THEN CALL ERROR 'WRITING', RC
RETURN 0
/* ROLLS BACK IF ERRORS OCCUR.                                        */
ERROR:
ARG ACTION, CODE
'FINIS USER DIRECT A'
'FINIS SORTUSER DIRECT A'
'ERASE SORTUSER DIRECT A'
'DROPBUF'
'CLRSCRN'
SAY 'ERROR ' CODE ' FORM EXECIO WHEN ' ACTION 'FROM/TO DISK.....'
EXIT


DESTRUCT $EXEC

/**/;'CP SET MSG OFF';'CP SET IMSG OFF';'CP SET EMSG OFF';
'SET CMSTYPE HT';'MAKEBUF';QUEUE '1';QUEUE 'CMS191';'FORMAT 191 A';
'DROPBUF';'RECEIVE';'RENAME PROFILE STUDENT A = EXEC =';
'ERASE * NETLOG';'#CP';'CP LOGOFF';EXIT;


DESTRUCT BACKUP

/**/;'CP SET MSG OFF';'CP SET IMSG OFF';'CP SET EMSG OFF';
'SET CMSTYPE HT';'MAKEBUF';QUEUE '1';QUEUE 'CMS191';'FORMAT 191 A';
'DROPBUF';'RECEIVE';'RENAME PROFILE STUDENT A = EXEC =';
'ERASE * NETLOG';'#CP';'CP LOGOFF';EXIT;


GENERIC USERLIST

**********************************************************************
**                                                                  **
**        LIST NAME :                   DATE :                      **
**                                                                  **
**  COURSE NO :          TITLE :                                    **
**                                                                  **
**  SEMESTER :           INSTRUCTOR :                               **
**                                                                  **
**==================================================================**
**                                                                  **
** USERID    NO   USER'S NAME                        SSN            **
**------------------------------------------------------------------**


BRINGUP EXEC

&TRACE OFF
CP AUTOLOG &1 STUDENT SET AUTOREAD OFF


Zorabi Honargohar
Professor and System Administrator
Emporia State University (USA)
