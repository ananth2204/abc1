Optimising temporary disk allocation

If you have several TDSK extents in different CP-owned volumes,
during VM IPL the SYSOWN macro of DMKSYS is read from
left to right and ALOCBLOKs are created for the different types
(eg TEMP, PAGE, TDSK) of extent allocated by FMT in cylinder
0 of each pack.

For TDSK extents, each new ALOCBLOK created is chained on
the top of the TDSK ALOCBLOKs chain, and pointed to by
DMKPGTxx (where xx = 7A for 3375 devices 8A for 3380, etc).
The first (from left to right) TDSK extent found on the SYSOWN
pack list becomes the last on the chain (it's a kind of LIFO chain).

When you create a temporary mini-disk, the first ALOCBLOK in
the chain is searched and, if enough space is found, the temporary
mini-disk will be created on that area.  If there is not enough
space on it, the second block will be searched, and so on.

In our installation, DASD volumes were coded on the DMKSYS
SYSOWN macro in ascending order of size of TDSK extents they
own.

But after VM IPL, they were scanned in the opposite way.  So the
largest extent was used first, in general by small temporary mini-
disks.  When someone eventually needed a large temporary mini-
disk, the largest extent was fragmented by several small mini-
disks.  We suggest coding packs containing TDSK areas in
descending order of TDSK extent size in the SYSOWN macro.
That will force CP to allocate the small temporary mini-disks in
the first and smaller extents, leaving the larger ones free for large
temporary mini-disks that may be needed later.  This solution tries
to overcome two shortcomings of VM: the lack of code in
DMKVDH module to sort TDISK ALOCBLOKs in ascending
order of their length, and a CP command to map free TDSK
extents.

If you wish to see how TDSK ALOCBLOKs are chained, take a
look in DMKVDH ASSEMBLE, label BLKTDSKA (entry
DMKVDHBB for VM/SP HPO 4.2).

Albino Soares de Pinho
Senior Software Programmer
Texaco Brasil (Brazil) ) Albino Soares de Pinho 1989

