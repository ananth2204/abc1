Concatenating TXTLIBs

Recently, I had to merge two TXTLIBs and found that IBM
supplied no suitable facility for so doing.  To satisfy this need I
wrote a REXX EXEC.  It requires the names of the two
TXTLIBs as input parameters and creates a third (NEW
TXTLIB A), which is the member-name-sorted merging of the
originals.

TXT EXEC

/*   The purpose of this EXEC is to merge two TXTLIBs. The names     */
/*   of the TXTLIBs are passed to the EXEC in variables lib1 and     */
/*   lib2. They are merged into a new TXTLIB called NEW TXTLIB A     */
/*   in ascending sequence of member name.                           */
arg what lib1 lib2
if what = ''
   then do
          say  'No options specified - please retry'
          exit
        end
if lib1 = ''
   then do
          say  'No TXTLIBs specified - please retry'
          exit
        end
if lib2 = ''
   then do
          say 'Only one TXTLIB specified - please retry'
          exit
        end
'ERASE 'lib1' LIST A'
'ERASE 'lib2' LIST A'
'ERASE NEW DIR     A'
'ERASE NEW TXTLIB  A'
'TXTLIB MAP ' lib1
'TXTLIB MAP ' lib2
do forever
   'EXECIO 1 DISKR 'lib1' MAP A'
   if rc = 2 then leave
   parse upper pull rec
   if SUBSTR(rec,3,5) = 'ENTRY' & SUBSTR(rec,18,5) = 'INDEX'
      then nop
      else if SUBSTR(rec,16,18) = 'ENTRIES IN LIBRARY'
              then nop
              else do
                     'EXECIO 1 DISKW 'lib1' LIST A 0 F 80 (STRING 'rec
                   end
end
finis lib1 'MAP  A'
finis lib1' LIST A'
do forever
   'EXECIO 1 DISKR 'lib2' MAP A'
   if rc = 2 then leave
    parse upper pull rec
    if SUBSTR(rec,3,5) = 'ENTRY' & SUBSTR(rec,18,5) = 'INDEX'
       then nop
       else if SUBSTR(rec,16,18) = 'ENTRIES IN LIBRARY'
               then nop
               else do
                     'EXECIO 1 DISKW 'lib2' LIST A 0 F 80 (STRING  'rec
                    end
end
finis lib2 'MAP  A'
finis lib2' LIST A'
sw1 = 0
sw2 = 0
'EXECIO 1 DISKR 'lib1' LIST A'
if rc = 2 then signal error1
parse upper pull rec
parse var rec name1 index1
'EXECIO 1 DISKR 'lib2' LIST A'
if rc = 2 then signal error2
parse upper pull rec
parse var rec name2 index2
'EXECIO 1 DISKR 'lib1' TXTLIB A'
if rc = 2 then signal error4
parse upper pull header1
'EXECIO 1 DISKW  NEW   TXTLIB A 0 F 80 (STRING 'header
'EXECIO 1 DISKR 'lib2' TXTLIB A'
if rc = 2 then signal error5
parse upper pull header2
index   = 2
indexa  = 2
nonames  = 0
loop:
  if name1 = name2 then signal error3
  if name1 < name2 then signal rout1
  if name1 > name2 then signal rout2
  say 'Impossible to get to this point of EXEC ??????????'
exit
rout1:
do forever
  'EXECIO 1 DISKR 'lib1' TXTLIB'
  if rc = 2 then signal error4
  parse pull rec
  'EXECIO 1 DISKW NEW TXTLIB A 0 F 80 (STRING 'rec
  indexa = indexa + 1
  if SUBSTR(rec,1,1) = '/'
     then if SUBSTR(rec,4,1) = '/'
             then if SUBSTR(rec,6,3) = 'LDT'
                     then signal rout11
end
rout11:
  rec = name1 || '  ' || index
rout111:
  'EXECIO 1 DISKW NEW DIR A 0 F 80 (STRING  'rec
  index = indexa
  nonames = nonames + 1
  'EXECIO 1 DISKR 'lib1' LIST A'
  if rc = 2 then signal rout12
  parse upper pull rec
  parse var rec name1 index1
  ix = index1 || '.'
  if ix = '.'  then signal rout111
  if sw2  = 1 then signal rout1
              else signal loop
rout12:
  sw1 = 1
  if sw2 = 1 then signal dodir
             else signal rout2
rout2:
do forever
  'EXECIO 1 DISKR 'lib2' TXTLIB'
  if rc = 2 then signal error5
  parse pull rec
  'EXECIO 1 DISKW NEW TXTLIB A 0 F 80 (STRING 'rec
  indexa = indexa + 1
  if SUBSTR(rec,1,1) = '/'
     then if SUBSTR(rec,4,1) = '/'
             then if SUBSTR(rec,6,3) = 'LDT'
                     then signal rout21
end
rout21:
  rec = name2 || ' ' || index
rout211:
  'EXECIO 1 DISKW NEW DIR A 0 F 80 (STRING 'rec
  index = indexa
  nonames = nonames + 1
  'EXECIO 1 DISKR 'lib2' LIST A'
  if rc = 2 then signal rout22
  parse upper pull rec
  parse  var rec name2 index2
  ix = index2 || '.'
  if ix = '.'  then signal rout211
  if sw1 = 1 then signal rout2
             else signal loop
rout22:
  sw2 =  1
  if sw1 = 1 then signal dodir
             else signal rout1
dodir:
  finis 'NEW  DIR  A'
  dirno = 0
  dirad = indexa
dodirx:
  pos   = 1
  drec  = ''
dloop:
  'EXECIO 1 DISKR NEW DIR A'
  if rc = 2 then signal dolast
  parse pull rec
  parse var rec name index
  ix  = index || '.'
  ixa = index
  pointer = LEFT((name || '          '),8)
  bz = D2C(0) || D2C(0) ||  D2C(0)  || D2C(0)
  p1 = D2C(0)
  p3 = 128
  if ix = '.'
     then do
            p1  = D2C(p3)
            p2  = D2C(ixo)
          end
     else do
            p2  = D2C(ixa)
            ixo = ixa
          end
  p1 = RIGHT((bz || p1),4)
  p2 = RIGHT((bz || p2),4)
  pointer = pointer || p1 || p2
  drec = drec || pointer
  pos = pos + 1
  if pos < 6 then signal dloop
  'EXECIO 1 DISKW NEW TXTLIB A 0 F 80 (STRING 'drec
  dirno = dirno + 1
  signal dodirx
dolast:
  if pos = 1 then signal dohead
  bz = bz || bz || bz || bz || bz || bz || bz || bz || bz || bz
  bz = bz || bz
  drec = drec || bz
  drec = LEFT(drec,80)
  'EXECIO 1 DISKW NEW TXTLIB A 0 F 80 (STRING 'drec
  dirno = dirno + 1
dohead:
  lh1 = nonames * 16
  lh3 = dirno * 16
  lh1 = D2C(lh1)
  lh3 = D2C(lh3)
  lh2 = D2C(dirad)
  lh4 = D2C(dirno)
  bz  = D2C(0) || D2C(0) || D2C(0) || D2C(0)
  bz2 = D2C(0) || D2C(0)
  lh1 = RIGHT((bz || lh1),4)
  lh2 = RIGHT((bz || lh2),4)
  lh3 = RIGHT((bz || lh3),4)
  lh4 = RIGHT((bz || lh4),4)
  header = 'LIBPDS  || bz2 || lh1 || lh2 || lh3 || lh4
  'EXECIO 1 DISKW NEW TXTLIB A 1 F 80 (STRING 'header
  'ERASE NEW DIR A'
exit
error1:
  say lib1 ' TXTLIB A appears to be empty - check and try again'
exit
error2:
  say lib2 ' TXTLIB A appears to be empty - check and try again'
exit
error3:
  say 'Duplicate 'name1' modules in 'lib1' and 'lib2' TXTLIBs'
exit
error4:
  say 'Unexpected EOF on reading 'lib1' TXTLIB '
exit
error5:
  say 'Unexpected EOF on reading 'lib2' TXTLIB '
exit

J E Groom
Senior Technical Systems Specialist  )  Xephon 1990
Anglo American Corporation of South Africa (South Africa)


