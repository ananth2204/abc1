Date conversion

The DATECONV program can be used to convert a date into
lots of parameters.  The output will be stacked.  The command
format is:

      DATECONV  dd / mm / yyyy / (cor

Where: dd is the day; mm is the month, which can be numeric
or three letters (ie Jan, Mar, etc); yyyy is the year; and cor is a
correction  (eg -3, +4, 4, etc).

The format of the stacked line is:

  Token

      1      *  (viewed as a comment by CMS)
      2      Day of week  (0=Sunday, 6=Saturday)
      3      Day of week  (Sunday, Wednesday)
      4      Day
      5      Days since 1 January of Year 0
      6      Month  (numeric)
      7      Month  (3 digits  Jan, Mar, etc)
      8      Month  (January, March, etc)
      9      Days of month  (Jan=31, Feb=28/29 July=31)
      10      Year
      11      Week of Year
      12       Days of Year   (eg. 355, 211, etc)
      13       Leap  (YES/NO)

The output will be stacked LIFO.  If you specify a correction,
this line will be stacked last, so it is the first line that will be
retrieved.  The token 5 (days since 1.1.0) can be used to
compute the difference between two dates.  The parameters
must be in upper case.

Return codes:

      1      Parameter day is not numeric
      2      Days too high for desired month
      3      Parameter month missing
      4      Parameter month invalid
      5      Month higher then 12
      6      Parameter year missing
      7      Parameter year not numeric
      20      Invalid delimiter specified.  Must be (
      21      Correction option not specified
      22      Correction option not numeric
      23      Correction option not valid.


DATECONV

* FUNCTION :   CONVERTS A DATE INTO MANY PARAMETERS
DATECONV CSECT
         PRINT NOGEN
         BALR  R12,0
         USING *,R12
         ST    R14,SAV14               SAVE RETURN ADDR
         LA    R1,8(,R1)               POINT TO 1. PARAMETER (DAY)
         CLI   0(R1),X'FF'             NO PARAMETERS
         BAL   R15,CONB                CONVERT DAY IN BIN
         LTR   R14,R14                 RETURN CODE
         BNZ   ERR1                    ERROR ROUTINE
         LR    R2,R7                   SAVE DAY IN R2
         LA    R1,8(,R1)               POINT TO MONTH
         CLI   0(R1),X'FF'             IF NO PARAMETERS
         BE    ERR3                    ERROR ROUTINE
         TM    0(R1),X'F0'             IF NUMERIC
         BO    NUMER                   GO TO NUMERIC ROUTINE
         LA    R7,12                   R7 = 12
CHKMON   EQU   *
         LR    R5,R7                   R5 = R7
         BCTR  R5,0                    R5 - 1
         MH    R5,=H'9'                MULTIPLY WITH 9 (FOR TABLE)
         LA    R3,MONTHS               R3 POINTS TO TABLE MONTHS
         AR    R3,R5                   ADD DISPLACEMENT
         CLC   0(3,R3),0(R1)           IF INPUT MATCHES
         BE    MONCHAR                 GO TO MONCHAR
         BCT   R7,CHKMON               LOOP
         BNE   ERR4                    ERROR ROUTINE (INVALID MONTH)
NUMER    EQU   *
         CLI   0(R1),C'0'              IF MONTH = 0
         BE    ERR4                    ERROR ROUTINE (INVALID MONTH)
         BAL   R15,CONB                CONVERT MONTH IN BIN
MONCHAR  EQU   *
         LR    R4,R7                   SAVE MONTH IN R4
         CH    R7,=H'12'               IF MONTH TO HIGH
         BH    ERR5                    ERROR ROUTINE
         LA    R1,8(,R1)               POINT TO YEAR
         LR    R10,R1                  SAVE R1 IN R10
         CLI   0(R1),X'FF'             NO PARAMETERS
         BE    ERR6                    ERROR ROUTINE
         BAL   R15,CONB                CONVERT YEAR IN BIN
         LTR   R14,R14                 RETURN CODE
         BNZ   ERR7                    ERROR ROUTINE
         LR    R8,R7                   SAVE YEAR IN R8
         BAL   R14,LEAPCHK             CHECK IF LEAP
         LR    R5,R4                   LOAD MONTH IN R5
         BCTR  R5,0                    SUBTRACT 1
         SLA   R5,1                    MULTIPLY WITH 2
         LA    R3,DAYS                 POINT TO DAYS TABLE
         AH    R5,=H'2'                CORRECTION
         AR    R5,R3                   ADD TO R5
         CH    R2,0(R5)                COMPARE IF DAYS TO HIGH
         BH    ERR2                    DAY TO HIGH
         BAL   R15,MAIN                MAIN ROUTINE
         CMSSTACK TEXT=(OUTPUT,L'OUTPUT),ORDER=FIFO
         LA    R1,8(,R10)              POINT TO CORR
         CLI   0(R1),X'FF'             NO PARAMETERS
         BE    EXIT                    EXIT
         CLI   0(R1),C'('              CHECK OPTION
         BNE   ERR20                   ERROR ROUTINE
         LA    R1,8(,R1)               POINT TO CORR
         CLI   0(R1),X'FF'             NO PARAMETERS
         BE    ERR21                   ERROR ROUTINE
         CLI   0(R1),C'-'              IF MINUS
         BE    CORRMIN                 CORRECTION -
         B     CORRPLS                 CORRECTION +
CORRMIN  EQU   *
         LA    R1,1(,R1)               POINT TO CORR VALUE
         BAL   R15,CONB                CONVERT CORR IN BIN
         CH    R7,=H'0'
         BE    ERR23                   ERROR ROUTINE
         LTR   R14,R14                 RETURN CODE
         BNZ   ERR22                   ERROR ROUTINE
CORR1    EQU   *
         BCTR  R2,0                    DAY - 1
         CH    R2,=H'0'                IS DAY 0
         BNE   CORR2
         BCTR  R4,0                    MONTH - 1
         CH    R4,=H'0'                IS MONTH 0
         BNE   MON0                    NO
         LA    R4,12                   MONTH = 12
         BCTR  R8,0                    YEAR - 1
         ST    R7,SAV7                 SAVE R7
         BAL   R15,MAIN                MAIN ROUTINE
         L     R7,SAV7                 RESTOR R7
MON0     EQU   *
         LA    R3,DAYS                 POINT TO DAYS TABLE
         LR    R5,R4                   R5 = MONTH
         SLL   R5,1                    MULTIPLY WITH 2 (FOR TAB POINT
         AR    R5,R3                   POINT TO DAYS OF MONTH
         LH    R2,0(R5)                LOAD DAYS IN R2
CORR2    EQU   *
         BCT   R7,CORR1                LOOP
         B     COROUT                  RESULT
CORRPLS  EQU   *
         CLI   0(R1),C'+'              CHECK INPUT
         BNE   NOSIGN                  NOT +
         LA    R1,1(R1)                POINT TO CORR VALUE
NOSIGN   EQU   *
         BAL   R15,CONB                CONVERT CORR IN BIN
         CH    R7,=H'0'
         BE    ERR23                   ERROR ROUTINE
         LTR   R14,R14                 RETURN CODE
         BNZ   ERR22                   ERROR ROUTINE
CORR3    EQU   *
         LA    R2,1(R2)                DAY + 1
         LA    R3,DAYS                 POINTER
         LR    R5,R4                   MONTH IN R5
         SLL   R5,1                    MULTIPLY WITH 2 FOR POINTER
         AR    R5,R3                   POINTER
         CH    R2,0(R5)                IF DAY MAXIMUM
         BNH   MON1                    NO INCREMENT MONTH
         LA    R2,1                    DAY = 1
         LA    R4,1(,R4)               MONTH + 1
         CH    R4,=H'12'               IF MONTH 12
         BNH   MON1                    NO INCREMENT MONTH
         LA    R4,1                    MONTH = 1
         LA    R8,1(R8)                YEAR + 1
         ST    R7,SAV7                 SAVE R7
         BAL   R14,LEAPCHK             CHECK IF LEAP
         L     R7,SAV7                 RESTORE
MON1     EQU   *
         BCT   R7,CORR3                LOOP
COROUT   EQU   *
         BAL   R15,MAIN                MAIN ROUTINE
         CMSSTACK TEXT=(OUTPUT,L'OUTPUT),ORDER=LIFO
EXIT     EQU   *
         L     R14,SAV14               RESTORE R7
         BR    R14
MAIN     EQU   *
         ST    R2,SAV2                 SAVE R2
         ST    R4,SAV4                 SAVE R4
         ST    R8,SAV8                 SAVE R8
         MVI   OUTPUT,C' '             CLEAR OUTPUT
         MVC   OUTPUT+1(L'OUTPUT-1),OUTPUT   CLEAR OUTPUT
         MVC   STAR,=C'* '             CLEAR OUTPUT
         BAL   R14,LEAPCHK             CHECK IF LEAP
         LR    R9,R2                   DAY
         BAL   R14,UNPAK               UNPAK DAY
         MVC   DAY,RESULT+6            MOVE TO OUTPUT
         LR    R9,R4                   MONTH
         LR    R7,R4                   MON
         BAL   R14,UNPAK               UNPACK MONTH
         MVC   MON,RESULT+6            MOVE TO OUTPUT
         LR    R9,R4                   MON IN R9
         BCTR  R9,0                    - 1
         MH    R9,=H'9'                POINTER IN MONTH TABLE
         LA    R5,MONTHS               POINTER IN MONTH TABLE
         AR    R5,R9                   POINTER IN MONTH TABLE
         MVC   MONT(3),0(R5)           MOVE TO OUTPUT
         MVC   MONTH(9),0(R5)          MOVE TO OUTPUT
         LA    R5,DAYS                 POINT TO DAYS
         SR    R9,R9                   POINT TO DAYS
         SH    R5,=H'2'                POINTER
COUNT    EQU   *
         LA    R5,2(,R5)               POINT TO NEXT MONTH
         AH    R9,0(,R5)               POINT TO NEXT MONTH
         BCT   R7,COUNT                LOOP
         LR    R4,R9                   DAYS OF MONTHS
         AR    R9,R2                   DAYS SINCE 1. JAN
         ST    R9,WORK1                SAVE IN WORK1
         BAL   R14,UNPAK               UNPACK YEAR
         MVC   DAYYEAR,RESULT+5        MOVE TO OUTPUT
         LH    R9,2(R5)                DAYS OF MON
         BAL   R14,UNPAK               UNPACK DAYS OF MONTH
         MVC   DAYMON,RESULT+6         MOVE TO OUTPUT
         LR    R9,R8                   YEAR
         BAL   R14,UNPAK               UNPACK YEAR
         MVC   YEAR,RESULT+4           MOVE TO OUTPUT
         LR    R5,R9                   SAVE YEAR IN R5
         BCTR  R5,0                    YEAR - 1
         LR    R9,R5                   YEAR IN R9 FOR MULTIPLICATION
         M     R8,=F'365'              MULTIPLY YEAR WITH 365
         SR    R6,R6                   CLEAR R6 FOR DIVISION
         LR    R7,R5                   LOAD R7 WITH YEAR - 1
         D     R6,=F'4'                DIVIDE WITH 4
         AR    R9,R7                   ADD TO DAYS
         SR    R6,R6                   CLEAR R6 FOR DIVISION
         LR    R7,R5                   LOAD R7 WITH YEAR - 1
         D     R6,=F'400'              DIVIDE WITH 400
         AR    R9,R7                   ADD TO DAYS
         SR    R6,R6                   CLEAR R6 FOR DIVISION
         LR    R7,R5                   LOAD R7 WITH YEAR - 1
         D     R6,=F'100'              DIVIDE WITH 100
         SR    R9,R7                   SUBTRACT TO DAYS
         ST    R9,WORK2                SAVE R9   DAYS UNTIL 1.1.XXXX
         AR    R9,R2                   ADD DAY TO DAYS
         AR    R9,R4                   ADD DAYS OF MONTHS
         LR    R5,R9                   SAVE NDAYS IN R5
         BAL   R14,UNPAK               NUMBER OF DAYS
         MVC   NDAYS,RESULT            MOVE TO OUTPUT
         SR    R4,R4                   CLEAR R4 FOR DIVISION
         D     R4,=F'7'                DIVIDE WITH 7
         LR    R9,R4                   REST
         BAL   R14,UNPAK               UNPACK DAY OF WEEK
         MVC   WEEKD,RESULT+7          MOVE TO OUTPUT
         XR    R8,R8                   CLEAR FOR DIVIDE
         L     R9,WORK2                LOAD DAYS UNTIL 1.JAN. XXXX
         LA    R9,1(,R9)               ADD 1
         D     R8,=F'7'                DIVIDE WITH 7
         CH    R8,=H'0'                IF 1. DAY IS SUNDAY
         BNE   NOSUND                  NOT SUNDAY
         LA    R8,7                    DAY OF WEEK IS 7
NOSUND   EQU   *
         L     R9,WORK1                LOAD DAYS SINCE 1. JAN
         AR    R9,R8                   ADD DAY OF WEEK OF 1. DAY IN YEA
         LA    R9,5(,R9)               ADD 5
         XR    R8,R8                   CLEAR FOR DIVIDE
         D     R8,=F'7'                DIVIDE WITH 7
*        LR    R9,R8
         BAL   R14,UNPAK               UNPACK WEEK OF YEAR
         MVC   WEEK,RESULT+6           MOVE TO OUTPUT
         MH    R4,=H'9'                POINTER IN WEEKDAYS
         LA    R5,WEEKDAYS             POINTER IN WEEKDAYS
         AR    R5,R4                   POINTER IN WEEKDAYS
         MVC   WEEKDA(9),0(R5)         MOVE TO OUTPUT
         L     R2,SAV2                 RESTORE R2
         L     R4,SAV4                 RESTORE R4
         L     R8,SAV8                 RESTORE R8
         BR    R15
LEAPCHK  EQU   *
         MVC   LEAP,=C'NO  '           MOVE TO OUTPUT
         MVC   DAYS+4(2),=H'28'        FEBRUARY
         LR    R7,R8                   LOAD YEAR
         SR    R6,R6                   CLEAR R6 FOR DIVISION
         D     R6,=F'4'                DIVIDE WITH 4
         CH    R6,=H'0'                IF LEAP
         BNE   ELEAP                   NO LEAP
         MVC   DAYS+4(2),=H'29'        MOVE TO OUTPUT
         MVC   LEAP,=C'YES '           MOVE TO OUTPU
Y100     EQU   *
         LR    R7,R8                   LOAD YEAR
         SR    R6,R6                   CLEAR R6 FOR DIVISION
         D     R6,=F'100'              DIVIDE WITH 100
         CH    R6,=H'0'                IF LEAP
         BNE   ELEAP                   END OF LEAP
         MVC   DAYS+4(2),=H'28'        FEBRUARY
         MVC   LEAP,=C'NO '            MOVE TO OUTPUT
Y400     EQU   *
         LR    R7,R8                   LOAD YEAR
         SR    R6,R6                   CLEAR R6 FOR DIVISION
         D     R6,=F'400'              DIVIDE WITH 400
         CH    R6,=H'0'                IF LEAP
         BNE   ELEAP                   END OF LEAP
         MVC   DAYS+4(2),=H'29'        FEBRUARY
         MVC   LEAP,=C'YES '           MOVE TO OUTPUT
ELEAP    EQU   *
         BR    R14
CONB     EQU   *
         LA    R3,0(R1)                INPUT POINTER
TESTM    EQU   *
         TM    0(R3),X'F0'             IF NUMERIC
         BO    TESTMOK                 OK
         LA    R14,1                   RETURN CODE
         BR    R15
TESTMOK  EQU   *
         LA    R3,1(,R3)               NEXT NUM
         CLI   0(R3),C' '              FINISHED
         BNE   TESTM                   NEXT CHARACTER
         SR    R3,R1                   GET LENGTH OF NUMBER
         BCTR  R3,0                    CORRECT FOR EXECUTE
         EX    R3,PACK                 PACK
         CVB   R7,INA1                 CONVERT TO BINARY
         XR    R14,R14                 RETURN CODE
         BR    R15
PACK     EQU   *
         PACK  INA1,0(0,R1)            PACK
UNPAK    EQU   *
         CVD   R9,OUTA                 CONVERT TO DECIMAL
         UNPK  RESULT,OUTA             UNPAK
         MVZ   RESULT+7(1),RESULT+6    ZONE
         BR    R14
ERR1     EQU   *
         CMSSTACK TEXT=(EMSG1,L'EMSG1),ORDER=LIFO
         LA    R15,1
         B     EXIT
ERR2     EQU   *
         CMSSTACK TEXT=(EMSG2,L'EMSG2),ORDER=LIFO
         LA    R15,2
         B     EXIT
ERR3     EQU   *
         CMSSTACK TEXT=(EMSG3,L'EMSG3),ORDER=LIFO
         LA    R15,3
         B     EXIT
ERR4     EQU   *
         CMSSTACK TEXT=(EMSG4,L'EMSG4),ORDER=LIFO
         LA    R15,4
         B     EXIT
ERR5     EQU   *
         CMSSTACK TEXT=(EMSG5,L'EMSG5),ORDER=LIFO
         LA    R15,5
         B     EXIT
ERR6     EQU   *
         CMSSTACK TEXT=(EMSG6,L'EMSG6),ORDER=LIFO
         LA    R15,6
         B     EXIT
ERR7     EQU   *
         CMSSTACK TEXT=(EMSG7,L'EMSG7),ORDER=LIFO
         LA    R15,7
         B     EXIT
ERR20    EQU   *
         CMSSTACK TEXT=(EMSG20,L'EMSG20),ORDER=LIFO
         LA    R15,20
         B     EXIT
ERR21    EQU   *
         CMSSTACK TEXT=(EMSG21,L'EMSG21),ORDER=LIFO
         LA    R15,21
         B     EXIT
ERR22    EQU   *
         CMSSTACK TEXT=(EMSG22,L'EMSG22),ORDER=LIFO
         LA    R15,22
         B     EXIT
ERR23    EQU   *
         CMSSTACK TEXT=(EMSG23,L'EMSG23),ORDER=LIFO
         LA    R15,23
         B     EXIT
SAV1     DS    F
SAV2     DS    F
SAV4     DS    F
SAV7     DS    F
SAV8     DS    F
SAV14    DS    F
WORK1    DS    F
WORK2    DS    F
RESULT   DS    CL8
         DC    C' '
OUTPUT   DS    0CL(OUTEND-STAR)
STAR     DC    CL2'* '
WEEKD    DS    CL2
WEEKDA   DS    CL10
DAY      DS    CL3
NDAYS    DS    CL8
         DC    C' '
MON      DS    CL3
MONT     DS    CL4
MONTH    DS    CL10
DAYMON   DS    CL3
YEAR     DS    CL5
WEEK     DS    CL3
DAYYEAR  DS    CL4
LEAP     DS    CL4
OUTEND   EQU   *
DAYS     DC    X'0000001F001C001F001E001F001E001F001F001E001F001E001F'
MONTHS   DC    C'JANUARY  FEBRUARY MARCH    APRIL    MAY      JUNE     C
               JULY     AUGUST   SEPTEMBEROCTOBER  NOVEMBER DECEMBER '
WEEKDAYS DC    C'SUNDAY   MONDAY   TUESDAY  WEDNESDAYTHURSDAY FRIDAY   C
               SATURDAY '
OUTA     DS    D
INA1     DS    D
EMSG1    DC    C'ERROR     PARAMETER DAY IS NOT NUMERIC'
EMSG2    DC    C'ERROR     DAYS TO HIGH'
EMSG3    DC    C'ERROR     PARAMETER MONTH MISSING'
EMSG4    DC    C'ERROR     PARAMETER MONTH INVALID'
EMSG5    DC    C'ERROR     MONTH HIGHER THEN 12'
EMSG6    DC    C'ERROR     PARAMETER YEAR MISSING'
EMSG7    DC    C'ERROR     PARAMETER YEAR NOT NUMERIC'
EMSG20   DC    C'ERROR     INVALID DELIMITER SPECIFIED, MUST BE ('
EMSG21   DC    C'ERROR     CORRECTION OPTION NOT SPECIFIED'
EMSG22   DC    C'ERROR     CORRECTION OPTION NOT NUMERIC'
EMSG23   DC    C'ERROR     CORRECTION OPTION NOT VALID'
         REGEQU
         END

Gibamo (Switzerland)

