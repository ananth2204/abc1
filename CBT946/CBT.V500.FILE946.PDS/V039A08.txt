Enhanced PF key availability

PF keys are wonderful time-savers and CP supports up to 24 of
them through the SET PF command.  Wouldn't it be nice to have
24 PF meanings defined and available for use more of the time?
CP does not provide all the support you need.  You may want to
use CP-defined meanings for PF keys that your terminal does not
have, or you may want to use the PF key definitions set for CP
while you are in the RDRLIST, XEDIT, FILELIST, or MACLIST
environments, all of which have different PF key definitions set.
CPF is a command that enables you to use the PF key definitions
you have previously set for CP, even definitions for PF keys that
do not exist on your terminal, while retaining the PF definitions
that are set for another environment.

CPF is easy to use.  From the command line you enter the CPF
command followed by the number of the PF key whose CP-
defined meaning is to be used.  From an XEDIT-type
environment, you may omit the space between the command and
the number since CPF is coded as an EXEC and as an XEDIT
macro.  The RETrieve setting is not supported.  The DELayed
setting is supported only in the XEDIT-type environment, in
which case the meaning of the PF key is placed on the command
line where it can be inspected and modified prior to being
performed.

Here is an example of how I have used CPF.  First I placed the
following command in my PROFILE EXEC to predefine the
meaning of PF key 11 to CP:

    CP SET PF11 IMM PASSTHRU BKLYN  * * 9 24 80 PF11 ####

The meaning of this command is that when PF key 11 is
depressed, a PVM session with node BKLYN should be activated.
The PF11 parameter in the text of the command indicates to PVM
that when PF key 11 is depressed during a session, the session
should be temporarily suspended.  Once my PROFILE EXEC has
been run, usually when CMS is IPLd, I can activate a PVM
session from any VM environment that permits me to enter CMS
commands.  For instance, I can enter '/O CPF 11' from any line on
a FLIST menu.  The '/O' directs FLIST not to append anything to
the command.  Once the PVM session is started from within
FLIST, depressing PF11 suspends the session and returns me to
FLIST.

Messages from CPF XEDIT:

%   001E nn is not a valid PF number
%   002E nn is not a valid PF number
%   003E PFnn is not defined
%   004E PFnn is xxxxxxxx, not DELAY or IMMED.

Messages from CPF EXEC:

%   001E nn is not a valid PF number
%   002E nn is not a valid PF number
%   003E PFnn is not defined
%   004E PFnn is xxxxxxxx, not IMMED.

CPF EXEC

/* Purpose:  make CP's pf keys available in any environment         */
/* Format:   CPF  <n>   where <n> is a number from 1 to 24          */
/* Feature:  gives you virtual pf keys 1-24 even if not on keybd    */
/* Pre-req:  the pf key must have been defined to CP as IMMED       */
/* Suggested use:  toggling between sessions from XEDIT or FLIST    */
/* Also see: remarks in CPF XEDIT for additional information        */
exemsg = 'EXECIO 1 EMSG (STR HOGCPF'        /* local cmd definition */
arg nn                                     /* get the PF key number */
if datatype(nn,'W') = 0          /* make sure it really is a number */
  then do
    exemsg'001E '''nn''' is not a valid PF number.'
    exit (24)
    end
if (nn < 1) | (nn > 24)       /* make sure number is in valid range */
  then do
    exemsg'002E '''nn''' is not a valid PF number.'
    exit (24)
    end
'EXECIO * CP (STR Q PF'nn         /* find out how pf key is defined */
parse upper pull pfnn word1 rest
if word1= 'UNDEFINED'
  then do
    exemsg'003E ''PF'nn''' is not defined.'
    exit (24)
    end
if word1 ¬= 'IMMED'
  then do
    exemsg'004E ''PF'nn''' is' word1', not IMMED.'
    exit (24)
    end
              /* all validation done, so do what user wants         */
rest          /* perform the IMMED function of the requested PF key */
exit (0)

CPF XEDIT

/*     Use like CPF command, but may omit space between CPF and <n> */
/*     Added feature:  CP PF definitions with DELAY are supported   */
/*     See remarks in CPF EXEC for additional information           */
arg nn                                     /* get the PF key number */
if datatype(nn,'W') = 0          /* make sure it really is a number */
  then do
    'EMSG CPF001E '''nn''' is not a valid PF number.'
    signal errexit
    end
if (nn < 1) | (nn > 24)       /* make sure number is in valid range */
  then do
    'EMSG CPF002E '''nn''' is not a valid PF number.'
    signal errexit
    end
'EXECIO * CP (STR Q PF'nn         /* find out how pf key is defined */
parse upper pull pfnn word1 rest
if word1 = 'UNDEFINED'
  then do
    'EMSG CPF003E ''PF'nn''' is not defined.'
    signal errexit
    end
if word1 = 'DELAY'
  then do
    'CMSG 'strip(rest)     /* place delayed command on command line */
    exit
    end
if word1 ¬= 'IMMED'
  then do
    'EMSG CPF004E ''PF'nn''' is' word1', not DELAY or IMMED.'
    signal errexit
    end
              /* all validation done, so do what user wants         */
rest          /* perform the IMMED function of the requested PF key */
'MSG PF'nn':  'strip(rest)
exit
errexit:
    'CMSG CPF'nn          /* place rejected command on command line */
    exit


Howard Givner
Brooklyn College (USA) ) Brooklyn College 1989


