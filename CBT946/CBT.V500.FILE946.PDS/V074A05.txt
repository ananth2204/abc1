SET MORE command for VM/ESA

Some years ago I came across a mod to VM/370 Release 6
(remember that?) on a Waterloo tape, which added the CP
command SET MORE. That mod was submitted in 1980 by B
Waggoner of Perkin-Elmer as contribution M0062V01. At the
time, I was using VM/SP Release 1, and I fixed the mod
myself in order to fit it into VM/SP.

Since then I have never seen it resubmitted, but we find it very
useful at our installation, especially with the additional changes
we have made to it here.

The basic idea of SET MORE is to allow the user to define the
amount of time that CP will wait, from when a users terminal
fills up with linemode data, until the screen is cleared. The
IBM default is for the screen to go into 'MORE...' status for
(about) 50 seconds, and then ring the terminal alarm. After
another (approximately) 10 seconds, the screen is cleared, in
order to display the next screen of output.
The format of the SET MORE command is:

      SET MORE | SEC1 | SEC2

where: SEC1 is the number of seconds that will pass between
entering 'MORE...' status, until the alarm is sounded; SEC2 is
the number of seconds that will pass from the alarm until the
screen is cleared.

Additionally, SET MORE 0 0 resets the IBM defaults, and
SET MORE 0 255 sets continous scrolling, ie each screen is
cleared as it fills (after about 1/4 second).

The mod affects the screen handling modules HCPGRF and
HCPGRW, the command processor for the SET command, and
the output of QUERY SET (see example).


HCPCFS AUXLCL

P00014LC LCL LC00014 * USE 'SET MORE' TIMES FOR 'MORE' AND ALARM


HCPCFS P00014LC

./ I 00630000          $ 635000 5000                  03/22/92 13:59:32
*               HCPCFSMO - ENTRY FOR THE 'SET MORE' COMMAND
./ I 26410000          $ 26410100 100                 03/22/92 13:59:32
* START OF SPECIFICATIONS *************************************
*
* ENTRY POINT NAME - HCPCFSMO
* DESCRIPTIVE NAME - CONSOLE FUNCTION SET MORE COMMAND
* FUNCTION -
*        THE 'SET MORE' COMMAND SETS OR CHANGES THE VMDMORTM
*        HALFWORD OF THE VMDBK, TO DEFINE THE DELAYS
*        USED BY HCPGRW AND HCPGRF AT 'MORE...' BEFORE AND
*        AFTER THE TERMINAL ALARM IS RUNG.
***************************************************************
         SPACE 1
HCPCFSMO HCPENTER CALL,SAVE=DYNAMIC
         BAL   R10,SETINIT        INITIALIZE FOR PROCESSING
         TM    ARGINFO,NARGTWO  ANY SECOND ARGUMENT (SEC1) ?
         BO    CFS026         BAD NEWS, SEC1 REQUIRED
         HCPCALL HCPSCCFD         ANY MORE ON THE LINE?
         BNZ   CFS026             NO? - SEC2 IS ALSO REQUIRED!
         LR    R3,R0         LENGTH OF SEC2 TO GPR3
         C     R3,PFX8       ARG. MORE THAN 8 CHAR. ?
         BH    CFS026        BRANCH IF MORE THAN EIGHT
         BCTR  R3,0          REDUCE FOR EX
         EX    R3,MOVEARG1   SEC2 REPLACES 'MORE' IN SAVEWRK2
* NOW WE HAVE SEC1 IN SAVEWRK5-6, SEC2 IN SAVEWRK2-3
*           L'SEC1 IN R4        L'SEC2 IN R3
         LA    R0,1(R4)       GET FULL SIZE OF SEC1
         LA    R1,SAVEWRK5    GET ADDRESS OF SEC1
         CALL  HCPCVTDB       GET SEC1 IN R0 IN BINARY
         BNZ   CFS003         INVALID ARGUMENT
         C     R1,=F'245'     CHECK MAX VALUE FOR 'MORE...'
         BH    CFS003         GO DISPLAY ERROR
         LA    R1,10(R1)      ADD 10, SUBTRACTED IN HCPGRF/W
         STC   R1,STMMORE     SAVE FIRST TIME INTERVAL
         LA    R0,1(R3)       GET FULL SIZE OF SEC2
         LA    R1,SAVEWRK2    GET ADDRESS OF SEC2
         CALL  HCPCVTDB       GET SEC2 IN R0 IN BINARY
         BNZ   CFS003         INVALID ARGUMENT
         C     R1,PFX255      CHECK MAX VALUE OF 1 BYTE
         BH    CFS003         GO DISPLAY ERROR
         STC   R1,STMALARM    SEC2 IS TIME AFTER WARNING
         CLC   MORTIMES,PFXH10   SET MORE 0 0?  (=X'000A')
         BE    STMORIBM       GO SET IBM DEFAULT
         CLC   MORTIMES,=X'0A3C' SET MORE 50 10?
         BNE   CHKM0255       NEXT CASE
STMORIBM MVC   MORTIMES,=X'003C'   RESET IBM DEFAULT
         B     VMDMORE        GO SET VMDBK 'MORE' TIME
CHKM0255 CLC   MORTIMES,=X'FF0A'   SET MORE 0 255?
         BNE   CHKALR10       WAS ALARM TIME SET TO 10?
         MVC   MORTIMES,PFXH0 ALL ZEROES FOR CONTINUOUS SCROLL
         B     VMDMORE        GO SET VMDBK 'MORE' TIME
CHKALR10 CLI   STMALARM,X'0A' IS ALARM TIME 10?
         BNE   VMDMORE        SO SET REQUESTED TIMES
         XC    STMALARM(1),STMALARM RESET TO 0 FOR 10 (DFLT)
VMDMORE  MVC   VMDMORTM,MORTIMES  SET VALUES IN VMDBK
         B     SETCOMP        EXIT
         EJECT
./ I 28780000          $ 28870000 90000               03/22/92 13:59:32
         ORG   SAVEWRK8
MORTIMES DS    0H            HALFWORD FOR MORE+ALARM TIMES
STMALARM DS    X             1 BYTE FOR ALARM OF SET MORE
STMMORE  DS    X             1 BYTE FOR MORE. OF SET MORE


HCPGRW AUXLCL

P00014LC LCL LC00014 * USE 'SET MORE' TIMES FOR 'MORE' AND ALARM


HCPGRW P00014LC

./ I 08780000          $ 8785000 5000                 03/12/92 17:18:08
         AGO   .MORETMX      DELETE THE 'LH'
./ I 08790000          $ 8790900 900                  03/12/92 17:18:08
.MORETMX ANOP
*
         XR    R3,R3         CLEAR REGISTER FOR 'MORE' TIME
         CLC   VMDMORTM,PFXH0      ARE WE IN '0 255' MODE?
         BE    MORETOD       SKIP SUBTRACT OF 10 FROM 0!
* WE ONLY USE LOW BYTE FOR 'MORE' TIME, HIGH BYTE OF
* VMDMORTM HALFWORD IS USED FOR ALARM TIME.
* WHEN WE DO 'SET TIME' (NOT '0 255'), WE ALWAYS ADD 10.
*
         IC    R3,VMDMORTM+1 LOAD 2ND BYTE FOR 'MORE' TIME
./ I 08800000          $ 8805000 5000                 03/12/92 17:18:08
MORETOD  EQU   *
./ I 08830000          $ 8830600 600                  03/12/92 17:18:08
*
* CHECK IF USER REQUESTED 'SET MORE 0 255': VMDMORTM = H'0'.
* IF SO, R3 WAS 0, SO WE DID NOT CHANGE HIGH ORDER HALF OF
* TOD CLOCK VALUE.
* WE NEED TO ADD 1/8 SECOND AS B'0010 0000' IN HIGH BYTE
* OF LOW WORD.
*
         CLC   VMDMORTM,PFXH0  IS VMDMORTM = 0?
         BNE   MORETRBK      CONTINUE SETTING UP TRQBK
         AL    R4,=X'20000000'     1/8 SECOND
         BNO   MORETRBK      NO OVERFLOW - USE THESE VALUES
         AL    R3,PFX1       IF OVERFLOW, ADD 1 TO HIGH ORDER
MORETRBK EQU   *
*


HCPCQG AUXLCL

P00014LC LCL LC00014 * USE 'SET MORE' TIMES IN 'Q SET'


HCPCQG P00014LC

./ I 09310000          $ 9310100 100                  03/11/92 15:33:39
**************************************************************
* PROCESS THE 'MORE' ITEM.                                   *
* THIS COMPRISES TWO VALUES:                                 *
* 1) THE TIME (IN SECONDS) THAT THE TERMINAL WILL SHOW       *
*    'MORE ...' UNTIL AN ALARM IS SOUNDED.                   *
* 2) THE TIME (IN SECONDS) FROM THE ALARM UNTIL THE SCREEN   *
*    IS CLEARED.                                             *
* THE DATA IS HELD IN THE VMDMORTM FIELD OF THE VMDBK,       *
* AS FOLLOWS:                                                *
* 1) THE IBM STANDARD IS X'003C' (60 SECONDS), MEANING       *
*    THAT THE -TOTAL- (MORE+ALARM) IS 60 SECONDS. THAT TIME  *
*    IS DIVIDED INTO MORE (TOTAL - 10), AND ALARM (10).      *
* 2) ANY OTHER VALUE OF LESS THAN 256 IS THE SAME -          *
*    VALUE-10 WILL BE FOR 'MORE', AND '10' FOR ALARM.        *
* 3) ANY VALUE > 255 WILL BE INTERPRETED AS 2 SINGLE BYTE    *
*    VALUES: LOW ORDER VALUE - 10 FOR 'MORE' TIME, AND       *
*    HIGH ORDER BYTE FOR ALARM TIME.                         *
* 4) IN THE CASE OF A ZERO VALUE (X'0000' IN THE 2 BYTES)    *
*    BOTH MORE AND ALARM WILL BE SET TO 1/8TH SECOND, FOR    *
*    CONTINUOUS DISPLAY.                                     *
*    IN THIS CASE, THE VALUES DISPLAYED WILL BE '000 255'.   *
**************************************************************
         SPACE 1
MORTIMES DS    0H
         HCPUSING SAVBK,R13   ADDRESS SAVEAREA
         CLC   VMDMORTM,=XL2'003C'    IBM DEFAULT TIMES?
         BNE   CHK0255        SEE IF SPECIAL CASE
         MVC   0(7,R2),=C'050 010'    PUT VALUE IN BUFFER
         LA    R2,7(R2)       UPDATE BUFPTR
         B     QSITMDON       GO TO DISPLAY
CHK0255  EQU   *
         CLC   VMDMORTM,PFXH0 IS MORE TIME '000 255'?
         BNE   CHKMORE        FIND USER'S 'MORE' VALUE
         MVC   0(7,R2),=C'000 255'    PUT VALUE IN BUFFER
         LA    R2,7(R2)       UPDATE BUFPTR
         B     QSITMDON       GO TO DISPLAY
CHKMORE  EQU   *
         XR    R5,R5          CLEAR WORK REG
         IC    R5,VMDMORTM+1  GET 'MORE' VALUE
         S     R5,PFX10       SUBTRACT 10, LIKE HCPGRF DOES
         CVD   R5,SAVEWRK8    CONVERT TO PACKED
         UNPK  0(3,R2),SAVEWRK9+2(2)  UNPACK 'MORE' SECONDS
         OI    2(R2),X'F0'    CHANGE SIGN TO 'F' FOR NUMBERS
         LA    R2,3(R2)       ADVANCE PAST 'MORE'
         MVI   0(R2),C' '     PUT A BLANK BETWEEN VALUES
         LA    R2,1(R2)       ADVANCE TO 'ALARM' FIELD
         CLI   VMDMORTM,X'00' WAS HIGH BYTE 0?
         BNE   CHKALARM       FIND USERS ALARM VALUE
         MVC   0(3,R2),=C'010'   DEFAULT VALUE IS 10 SECONDS
         LA    R2,3(R2)       POINT PAST ALARM VALUE
         B     QSITMDON       WE ARE FINISHED THIS ITEM
CHKALARM EQU   *
         XR    R5,R5          CLEAR WORK REG
         IC    R5,VMDMORTM    GET 'ALARM' VALUE
         CVD   R5,SAVEWRK8    CONVERT TO PACKED
         UNPK  0(3,R2),SAVEWRK9+2(2)  UNPACK 'ALARM' TIME
         OI    2(R2),X'F0'    CHANGE SIGN TO 'F' FOR NUMBERS
         LA    R2,3(R2)       ADVANCE PAST ALARM TIME
         B     QSITMDON       WE ARE FINISHED THIS ITEM
./ I 11490000          $ 11495000 5000                03/11/92 15:33:39
         AGO   .QMOREX
./ I 11500000          $ 11501000 1000                03/11/92 15:33:39
.QMOREX  ANOP
         QSET  '370E',FAKENTRY,STRING='OFF',PAD=7
* NOW ADD INFO ABOUT 'MORE' SETTINGS
         QSET  'MORE',MORTIMES
*


HCPGRF AUXLCL

P00014LC LCL LC00014 * USE 'SET MORE' TIMES FOR 'MORE' AND ALARM


HCPGRF P00014LC

./ I 37130000          $ 37131000 1000                03/08/92 18:36:41
*
* HERE WE CHECK IF:
* 1) ARE WE IN 0-255 MODE?
*    IF SO, SET R4 TO 0, AND SETINT WILL USE 1/8 SECOND.
         XR    R4,R4         FIRST CLEAR REGISTER
         CLC   VMDMORTM,PFXH0      ARE WE IN 0-255 MODE?
         BE    SETWNGX             GO TO SET TIMER
*    IF NOT, SET DEFAULT ALARM TIME OF TEN SECONDS
./ I 37140000          $ 37141000 1000                03/08/92 18:36:41
* 2) IS HIGH ORDER BYTE OF VMDMORTM > 0?
*    IF SO, USE IT AS ALARM TIME.
         CLI   VMDMORTM,X'00'      IS ALARM TIME UNTOUCHED?
         BE    SETWNGX             GO SET TIMER DEFAULT TIME
*    IF NOT, USE HIGH ORDER BYTE AS ALARM TIME
         IC    R4,VMDMORTM   GET 1 BYTE FROM VMDMORTM
SETWNGX  EQU   *
*
./ I 37360000          $ 37365000 5000                03/08/92 18:36:41
         AGO   .SETMORX      DELETE THE 'LH'
./ I 37370000          $ 37370600 600                 03/08/92 18:36:41
.SETMORX ANOP
         XR    R4,R4         CLEAR REGISTER FOR 'MORE' TIME
* IF USER SPECIFIED SET MORE 0 255, VMDMORTM = H'0'.
* IN THIS CASE, WHEN WE GET TO SETINT WE NEED TO FIX
* LOW-ORDER SIDE OF TOD CLOCK FOR A FRACTION OF A SECOND.
         CLC   VMDMORTM,PFXH0      ARE WE IN '0 255' MODE?
         BE    SETSCRN       DON'T SUBTRACT 10 FOR 0-255
* WE ONLY USE LOW BYTE FOR 'MORE' TIME, HIGH BYTE OF
* VMDMORTM HALFWORD IS USED FOR ALARM TIME.
* WHEN WE DO 'SET TIME' (NOT '0 255'), WE ALWAYS ADD 10.
         IC    R4,VMDMORTM+1 LOAD 2ND BYTE FOR 'MORE' TIME
./ I 38040000          $ 38040600 600                 03/08/92 18:36:41
* CHECK IF USER REQUESTED 'SET MORE 0 255': VMDMORTM = H'0'.
* IF SO, R4 WAS 0, SO WE DID NOT CHANGE HIGH ORDER HALF OF
* TOD CLOCK VALUE.
* WE NEED TO ADD 1/8 SECOND AS B'0010 0000' IN HIGH BYTE
* OF LOW WORD.
         CLC   VMDMORTM,PFXH0  IS VMDMORTM = 0?
         BNE   SETINTX       GO SET INTERVAL
         AL    R1,=X'20000000'     1/8 SECOND
         BNO   SETINTX       NO OVERFLOW - SET TIMER
         AL    R0,PFX1       IF OVERFLOW, ADD 1 TO HIGH ORDER
SETINTX  EQU   *
*


Figure 1 shows sample output from the QUERY SET command
after installing SET MORE.

