Display full screen maps (continued)

This month we continue the article which describes a facility
that provides programmers with a 'screen-painting'
environment, in which they can create MAPs by painting them
as they will be seen on-screen. It also allows programmers to
test or display maps, to see what they look like.


BMMAPOVW TASK

$|BMMAPOVW TASK    $%       $|BMMAP Overview$%        Last updated:$|
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.cm Overview for BMMAP facility.
.cm          To access use   ===> BM BMMAPOVW TASKs
  The BMMAP facility is intended to provide programmers with an easy
 method of creating and displaying informational panels, data input
 screens and menus - these are collectivly known as$|MAPs.$%
  It is based around the$|BMMAP command$%and$|BMMAP files.$%The BMMAP
 command displays MAPs. BMMAP files contain information used by BMMAP to
 build MAPs.
  There are three distinct parts to the BMMAP facility :-
 1:$|Creating the files used by BMMAP.$%
     Each panel/input screen/menu screen has an associated file which
    is used by BMMAP to build the MAP to be displayed. This file is
    known as a$|BMMAP$%file, because it's CMS filetype must be 'BMMAP'.
     To set up defaults for a particular MAP, then a file can be created
    to contain the default values. This file is known as a$|BMPARMS$%
    file, because it's CMS filetype must be 'BMPARMS'.
 2:$|Testing a MAP.$%
     While a MAP is being created, it is possible to test-display it as
    you go, to ensure that the MAP is displayed correctly.
 3:$|Using BMMAP from an application.$%
     Once a MAP has been created, you can code an application to display
    it, using the BMMAP command.
  For more information, select one of the topics below, by placing the
 cursor under any part of the file wanted and pressing the ENTER key or
 the PF1 or PF13 key.
 A$|TASK$%list is indicated when a name is preceded by a  colon ($|:$%).
 A$|MENU$%file is indicated when a name is preceded by an asterisk ($|*$%).
BMMAP    MENU           *BMMAP MENU      $%- Menu of BMMAP components.
BMMAPFLE TASK           :Files           $%- Component files of BMMAP.
BMMAPTST TASK           :Testing         $%- Testing BMMAP files.
BMMAPCMD TASK           :Command         $%- Running BMMAP.


BMMAPPSW  XEDIT

/* The BMMAPPSW macro alternately swaps the PREFIX area LEFT, RIGHT,  */
/* then OFF. It is designed to work with a PF key.                    */
 ARG Op .                              /* Get Operand ...             */
'EXTRACT /NUMBER/'                     /* See what SET NUMBER is ...  */
'EXTRACT /WIDTH/'                      /* See what WIDTH of file is ..*/
/* Issue DIAG(8C) to get terminal information - how many lines/columns*/
/* has this terminal got ???                                          */
 T      = DIAG(8C)                     /* Issue CP DIAGnose command ..*/
 TLines = C2D(SUBSTR(T,5,2))           /* Get number of Lines ...     */
 TCols  = C2D(SUBSTR(T,3,2)) - 1       /* Get number of Columns ...   */
 SELECT                                /* Check Operand specified ... */
   WHEN Op = '?'     THEN CALL HelpExit
   WHEN Op = 'LEFT'  THEN CALL SW_LEFT  /* Switch PREFIX to LEFT ...  */
   WHEN Op = 'RIGHT' THEN CALL SW_RIGHT /*   "      "    "  RIGHT ... */
   WHEN Op = 'OFF'   THEN CALL SW_OFF   /*   "      "    "  OFF ...   */
   OTHERWISE              CALL SW_ROLL  /* 'Roll' PREFIX to next pos. */
 END /* SELECT */
 EXIT
SW_ROLL:           /* See where PREFIX is now, then roll to next pos. */
'EXTRACT /PREFIX/'
 SELECT
   WHEN PREFIX.1 = 'OFF'   THEN CALL SW_LEFT
   WHEN PREFIX.2 = 'LEFT'  THEN CALL SW_RIGHT
   WHEN PREFIX.2 = 'RIGHT' THEN CALL SW_OFF
   OTHERWISE NOP
 END /* SELECT */
 RETURN
SW_LEFT:
 IF Number.1 = 'ON' THEN  'SET PREFIX NULLS LEFT'
 ELSE                     'SET PREFIX ON    LEFT'
 IF (TCols-1) > Width.1 THEN 'SET VERIFY 7' Width.1
 ELSE                        'SET VERIFY 7' (TCols-1)
 RETURN
SW_RIGHT:
 IF Number.1 = 'ON' THEN  'SET PREFIX NULLS RIGHT'
                    ELSE  'SET PREFIX ON    RIGHT'
 IF (TCols-7) > Width.1 THEN 'SET VERIFY 1' Width.1
                        ELSE 'SET VERIFY 1' (TCols-7)
 RETURN
SW_OFF:
'SET PREFIX OFF'
 IF (TCols-1) > Width.1 THEN 'SET VERIFY 1' Width.1
 ELSE                        'SET VERIFY 1' (TCols-1)
 RETURN
HelpExit:
'EXEC BM BMMAPPSW'
 EXIT


BMMAPTST TASK

$|BMMAPTST TASK    $%      $|Testing BMMAP's$%        Last updated:$|
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.cm Information on testing BMMAP files.
.cm          To access use   ===> BM BMMAPTST TASKs
   There are three ways of testing a MAP while it is being created :-
  1:$|By executing the BMMAP command from a procedure.$%
     Use this method once the MAP and the procedure are complete and it
    is nesessary to check that they interact as required.
  2:$|By executing the BMMAP command from the command line.$%
     Use this method if the procedure that will call BMMAP, is not yet
    ready to run. The format of the BMMAP can be exactly the same as it
    would be in a procedure. When the MAP has been displayed, the values
    of the various variables set by BMMAP can be seen by running the
   $|BMGLOBLV$%procedure.
  3:$|By executing the BMDMAP command from XEDIT.$%
     IF you are creating a BMMAP file in XEDIT, then you can call the
    BMDMAP procedure from the XEDIT command line, specifying any BMMAP
    options just as if you were executing BMMAP directly. This procedure
    will check that you are XEDITing a BMMAP file and, if so, SAVE the
    file (if any changes have been made) and then run BMMAP to display
    the MAP. On returning from the MAP, the values set by BMMAP will be
    displayed by the BMGLOBLV procedure.
  For more information, select one of the topics below, by placing the
 cursor under any part of the file wanted and pressing the ENTER key or
 the PF1 or PF13 key.
 A$|TASK$%list is indicated when a name is preceded by a  colon ($|:$%).
 A$|MENU$%file is indicated when a name is preceded by an asterisk ($|*$%).
BMMAP    MENU           *BMMAP MENU      $%- Menu of BMMAP components.
BM       BMMAP           Command         $%- Format of BMMAP command.
BM       BMDMAP          Command         $%- Format of BMDMAP command.
BM       BMGLOBLV        Command         $%- Format of BMGLOBLV command.


BMMAP    EXEC

/* Go into Full-screen XEDIT to display the MAP ...                   */
 SIGNAL ON ERROR                       /* Go to ERROR: if RC ¬= 0 ... */
'BMAHILO'                              /* Get HI & LO attributes ...  */
 PULL HI LO
/* Get the parameters and validate them ...                           */
 PARSE ARG MapName Parms
 IF MapName = '?' THEN SIGNAL HelpExit /* Help requested ...          */
 IF MapName = ''  THEN SIGNAL ErrParms /* Invalid number of parms ... */
 MapName = TRANSLATE(MapName)          /* Upper case needed ...       */
'SET CMSTYPE HT'                      /* Don't want user to see this .*/
 SIGNAL OFF ERROR                     /* Turn it off for the LISTFILE.*/
'STATE' MapName 'BMMAP *'             /* Does it exist ???            */
 RT = RC                              /* - save return code ...       */
 SIGNAL ON  ERROR                      /* Turn it back on again ...   */
'SET CMSTYPE RT'
 IF RT  = 28      THEN SIGNAL ErrNoMap /* - No ...                    */
 IF RT ¬=  0      THEN SIGNAL ErrState /* - Oh dear !!!               */
/* Call BMMAP XEDIT with the validated parameters (pass them via the  */
/* MapName GLOBALV) and then return to the Calling EXEC ...           */
/* NOTE: The 'ADDRESS COMMAND ... SETL ...' format is used to preserve*/
/*  lower-case arguments, and to allow the passing of words longer    */
/*  than 8 characters, and strings of words ...                       */
/* NOTE: GLOBALV restricts the length of a variable to 255 characters.*/
/*  If the variable PARMS is greater than this, then split it into    */
/*  smaller pieces, and reconstruct it in PROFBMM.                    */
 ADDRESS COMMAND 'GLOBALV SELECT' MapName 'PURGE'
                                      /* Purge 'MapName' GLOBALV file */
 IF LENGTH(Parms) > 255 THEN DO        /* Parms > 255 characters ???  */
   ADDRESS COMMAND 'GLOBALV SELECT' MapName 'SETL PARMS SPLIT'
   PSplit = 1
   DO UNTIL Parms = ''                 /* Split Parms ...             */
     PARSE VAR Parms Parm.PSplit +255 Parms
  ADDRESS COMMAND 'GLOBALV SELECT' MapName 'SETL PARM.'PSplit Parm.PSplit
     PSplit = PSplit + 1
   END /* DO UNTIL Parms = '' */       /* Split Parms ...             */
   ADDRESS COMMAND 'GLOBALV SELECT' MapName 'SETL PSPLIT' PSplit
 END /* IF ... THEN DO */              /* Parms > 255 characters ???  */
 ELSE ADDRESS COMMAND 'GLOBALV SELECT' MapName 'SETL PARMS' Parms
                                       /* Save Parms in GLOBALV ...   */
/* XEDIT dummy file - FileMode = 'S' because everyone's got an 'S'    */
/* disk if they are in CMS !!! (If I use FileMode 'A' and the user    */
/* hasn't  got an 'A' disk, then XEDIT wouldn't work.                 */
'XEDIT' MapName 'CMSUT1 S (WIDTH 80 PROFILE PROFBMM '
 EXIT RC
HelpExit:                              /* Help requested ...          */
 PUSH 'BM BMMAP'
 EXIT 0
/** ERROR ROUTINES * ERROR ROUTINES * ERROR ROUTINES * ERROR ROUTINE **/
ErrNoMap:                              /* No BMMAP file found ...     */
 SAY "BMAMAP001E File" MapName "BMMAP * not found."
 EXIT 28
ErrParms:                              /* Parameters invalid ...      */
 SAY "BMAMAP002E No MAPNAME specified."
 EXIT 24
ErrState:                              /* CMS STATE error ...         */
 SAY "BMAMAP003E Unexpected return code from"HI"CMS STATE"LO"command."
 EXIT RT
Error:                                 /* RC ¬= 0 ...                 */
/* Come here if SIGNAL ON ERROR in effect, and a host command returns */
/* a non-zero return code.                                            */
 RT = RC
 SAY "BMAMAP004E Error in BMMAP EXEC, line number"HI SIGL LO" RC="RT
 EXIT RT


BMPARMF HELP

$|BM BMPARMF      $%      $|BMMAP BMPARMS files$%     Last Updated:$|
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.cm Help information on BMMAP BMPARMS files.
$|Description:$%
  A BMMAP BMPARMS file contains information about a BMMAP file. It
 labels any input fields, and it can also specify any of the options
 available on the BMMAP command (Type 'BMMAP ?' for information on
 BMMAP).
  Enter$|'BM BMMap TASK'$%for more information about the BMMAP facility.
$|Format:$%
  The format of the BMPARMS file is:
 +-------------------------------------------------------------------+
 |                                                                   |
 | /* BMPARMS file for 'Mapname'                                     |
 |$|'Fieldname' 'Fieldvalue'$%         /* Comments ...                 |
 |                                                                   |
 | /* PF/Pa key settings ...                                         |
 |$|PFnn  'Command line'$%             /* Comments ...                 |
 |$|PAnn  'Command line'$%             /* Comments ...                 |
 |$|ENTER 'Command line'$%             /* Comments ...                 |
 |                                                                   |
 |$|CURSOR 'Fieldname'$%               /* Comments ...                 |
 |$|EMSG 'error text'$%                /* Comments ...                 |
 |$|GPAD YES/NO$%                      /* Comments ...                 |
 |$|RETURN YES/NO$%                    /* Comments ...                 |
 |$|HEADER n$%                         /* Comments ...                 |
 |$|TRAILER n$%                        /* Comments ...                 |
 |                                                                   |
 +-------------------------------------------------------------------+

$|where:$%
$|'FieldName' 'FieldValue'$%
     Specifies the name of an input field, and the default content (this
    is optional). The fields are named sequentially from top-left to
    bottom-right of the screen.
$|PFnn 'Command line'$%
     Specifies the command to be executed when this PF key is pressed.
    If 'Command line' = '*' then BMMAP will return to the CALLing
    procedure the number of the PF key selected.
$|PAnn 'Command line'$%
     Specifies the command to be executed when this PA key is pressed.
    If 'Command line' = '*' then BMMAP will return to the CALLing
    procedure the number of the PA key selected.
$|ENTER 'Command line'$%
     Specifies the command to be executed when the ENTER key is pressed.
    If 'Command line' = '*' then BMMAP will return to the CALLing
    procedure.
$|CURSOR 'Fieldname'$%
     Specifies the name of the input field where the cursor is to be
    positioned on displaying the BMMAP (defaults to the first field).
$|EMSG message text$%
     Specifies a message to be displayed by BMMAP using the XEDIT EMSG
    facility.
$|GPAD YES/NO$%
     Specifies whether global padding is on (YES) or off (NO). If it is
    on, then all input fields will be padded with the underscore char.
$|RETURN YES/NO%
     Specifies whether BMMAP is to RETURN to the calling procedure
    without waiting for the user to hit a key. If 'YES' is specified,
    then BMMAP will display the MAP and then return to the calling
    procedure. The map will remain until the screen is written to.
$|HEADER n$%
     Specifies how many lines are to be reserved for the header. eg if
    n = 3, then the first 3 lines of the MAP will be displayed as a
    header on the screen. If the screen is scrolled down, these 3 lines
    remain.
$|TRAILER n$%
     Specifies how many lines are to be reserved for the trailer. eg if
    n = 2, then the last 2 lines of the MAP will be displayed as a
    trailer on the screen. If the screen is scrolled down, these 2 lines
    remain.
$|NOTES:$%
     To indicate that an input field is to be protected, then prefix the
    FieldName with$|'P_'.$%
     If a PF/PA/ENTER key is set to$|REFRESH$%, then, when that PF/PA
    key is hit, the BMMAP screen will be refreshed, ie the content of
    the input fields will be re-set to whatever they were before the
    user started to type into them.
     If a PF/PA/ENTER key is set to$|TOP, BOTTOM, FORWARD, BACKWARD,
    PAGELEFT$%or$|PAGERIGHT$% then the screen display will be
    'scrolled'. Eg if a PF key, set to TOP is hit, then the TOP of the
    map will be shown, ie from line 1, column 1 of the BMMAP. FORWARD
    and BACKWARD move the display one screen forward and backward,
    respectively. PAGELEFT and PAGERIGHT move the display one screen to
    the left and right, respectively, providing there are$|NO input
    fields$%in the map. If there are any, BMMAP will ignore the
    right/left command, as it cannot cope with moving input fields
    right/left.
     If$|'Command line'$%or$|'FieldValue'$%or$|'message text'$%are a
    string of words, then they must be delimited by quotes, either '..'
    or "..". If a quote is required within a string, then delimit the
    string by the alternative quote, ie 'Say "HELLO"' or "It's raining".
     Blank lines are ignored - they may be coded in a BMPARMS file to
    aid readability.
     Anything coded after the string$|'/*',$%including the string, will
    be treated as a comment, and so will be ignored.
     Any, or all, of the above options may be overridden when the BMMAP
    procedure is executed.
$|Defaults:$%
    $|GPAD    $% = 'YES'
    $|RETURN  $% = 'NO'
    $|HEADER  $% = '0'
    $|TRAILER $% = '0'
     Several PF keys are set by default, as follows ...
    $|PF2 $% = 'REFRESH'
    $|PF3 $% = '*'         (ie Return to Procedure)
    $|PF13$% = 'TOP'
    $|PF14$% = 'BOTTOM'
    $|PF15$% = '*'         (ie Return to Procedure)
    $|PF19$% = 'BACKWARD'
    $|PF20$% = 'FORWARD'
    $|PF22$% = 'PAGELEFT'
    $|PF23$% = 'PAGERIGHT'
     These can, of course, be overridden as required.
$|Usage Notes$%
  A BMPARMS file is needed for two reasons:-
    1: To provide the names of any Input fields - in this case, there
    $|must$%be a BMPARMS file.
    2: To supply default values for any BMMAP options.


BMPARMS HELP

$|BM BMPARMS      $%   $|Using BMPARMS procedure$%    Last Updated:$|
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.CM Help information on BMPARMS facility
.cs 1 on
$|Description:$%
  The BMPARMS procedure XEDIT's a BMPARMS file. It may be called from
 the command line. If you are in XEDIT, then BMPARMS will pick up the
 FileName of the file you are XEDIting, and use that as the FileName of
 the BMPARMS file to edit.
  Enter$|'BM BMMap TASK'$%for more information about the BMMAP facility.
.cs 1 off
.cs 2 on
$|Format:$%
  The format of the BMPARMS command is:
+--------------+---------------------------------------------------+
|              |  ?                                                |
| BMPARMS      | Filename (Options ...                             |
|              |                                                   |
+--------------+---------------------------------------------------+
.cs 2 off
.cs 3 on
$|where:$%
$|?$%
     Displays this BM Help screen.
$|Filename$%
     Is the name of the BMPARMS file to be editted. If this is omitted,
    then 'BMNEW' is used.
.cs 3 off
.cs 4 on
$|Options$%
     Are any valid XEDIT options.
.cs 4 off
.cs 5 on
.cs 5 off
.cs 6 on
.cs 6 off


BMPARMS EXEC

/* This Procedure XEDITs a file, assuming filetype BMPARMS.           */
/* If filename is omitted file BMNEW BMMAP is editted.                */
 ARG FName FMode . '(' Options ')' .
 IF FName = '?' THEN CALL Helpexit
 IF FName = ''  THEN FName = 'BMNEW'
 QUEUE 'SET PF1 AFTER BM BMPARMS'
'XEDIT' FName 'BMPARMS ' FMode '(' Options
 EXIT
Helpexit:
'EXEC BM BMPARMS'
 EXIT RC


BMPARMS XEDIT

/* This Procedure XEDITs 'filename' BMPARMS.                          */
ARG Options
 IF Options = '?' THEN CALL Helpexit
'EXTRACT /FName/'                      /* Get XEDIT Filename ...      */
 QUEUE 'SET PF1 AFTER BM BMPARMF'
 'XEDIT' FName.1 'BMPARMS (' Options
EXIT
Helpexit:
 PUSH 'BM BMPARMS'
EXIT


BMX XEDIT

* BMX XEDIT macro aids editing of BM Help screens.   Last update
SCREEN SIZE 21
CURL ON 5
NULL ON
PRE  OFF
VER  1 79
TOP
LOCATE /Screen/


BMXMAP HELP

$|BM BMXMAP $%     $|Using BMXMAP procedure$%     Last Updated:$|
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.CM Help information on BMXMAP facility
.cs 1 on
$|Description:$%
  The BMXMAP procedure XEDIT's a BMMAP file setting up PF keys and the
 screen layout, to aid in the 'painting' of a BMMAP screen.

  Enter$|'BM BMMap TASK'$%for more information about the BMMAP facility.
.cs 1 off
.cs 2 on
$|Format:$%
  The format of the BMXMAP command is:
+--------------+---------------------------------------------------+
|              |  ?                                                |
| BMXMAP       | Filename ((BMMAP) Filemode) (Options ...)         |
|              |                                                   |
+--------------+---------------------------------------------------+
.cs 2 off
.cs 3 on
$|where:$%
$|?$%
     Displays this BM Help screen.
$|Filename$%
     Is the filename of the BMMAP file to be editted. If this is
    omitted, then 'BMNEW' is used.
$|BMMAP$%
     Is the filetype of the BMMAP file to be editted. It must be 'BMMAP'
    and is included as a parameter so that the BMXMAP command may be
    entered while in the FILELIST environment (as$|BMXmap /$%).
$|Filemode$%
     Is the filemode of the BMMAP file to be editted. If this is
    omitted, then '*' is used.
.cs 3 off
.cs 4 on
$|Options$%
     Are any valid XEDIT options.
.cs 4 off
.cs 5 on
$|Usage Notes$%
.cs 5 off
.cs 6 on
.cs 6 off


BMXMAP  EXEC

/* This Procedure XEDITs a file, assuming filetype BMMAP.             */
/* If filename is omitted file BMNEW BMMAP is editted.                */
 ARG FName FType FMode . '(' Options ')' .
 IF FName = '?' THEN CALL HelpExit
 IF FName = ''  THEN FName = 'BMNEW'
 IF FMode = ''  THEN DO
   FMode =  FType
   FType = 'BMMAP'
 END /* IF ... THEN DO */
 IF FMode = 'BMMAP' THEN FMode = '*'
 IF FMode = ''      THEN FMode = '*'
'XEDIT' FName FType FMode '( PROFILE PROFBMX' Options
 EXIT RC
HelpExit:
'EXEC BM BMXMAP'
 EXIT


BMXMAPF HELP

$|BM BMXMAPF      $%    $|The BMXMAP environment$%    Last Updated:$|
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.CM Help information on BMXMAP environment.
$|Description:$%
  The BMXMAP procedure XEDIT's a BMMAP file setting up PF keys and the
 screen layout, to aid in the 'painting' of a BMMAP screen.
  Enter$|'BM BMMap TASK'$%for more information about the BMMAP facility.
  Enter$|'BM BMMAPF'$%for information about the format of BMMAP files.
$|Usage Notes$%
  BMXMAP is intended to be invoked when creating a BMMAP file. This file
 is read by the BMMAP facility, which then displays the data on-screen,
 using full-screen XEDIT.
  To 'paint' a BMMAP screen, just type into XEDIT exactly what you wish
 to appear on the screen. Once the screen has been painted, then decide
 what attributes you require - see$|BM BMMAPF$%for information on what
 attributes are supported by BMMAP, and how to use them.
$|Note:$%an Unprotected attribute allows data to be keyed into the
 screen, and so it means that an input field has been defined.
  If any input fields are defined, then a 'mapname' BMPARMS file must be
 created before the map can be displayed. Type in 'BMParms ?' for more
 information on BMPARMS files.
$|PF Keys:$%
  BMXMAP sets up PF keys as below:
  $|PF1 $% Displays this HELP screen
  $|PF2 $% Swap the XEDIT PREFIX area LEFT/RIGHT/OFF
  $|PF4 $% Swap the XEDIT COMMAND Line TOP/BOTTOM/OFF
  $|PF5 $% XEDIT 'Filename' BMPARMS
  $|PF16$% Put PREFIX Left  / CMDLINE Top
  $|PF17$% Put PREFIX Right / CMDLINE Top
  $|PF18$% Put PREFIX Off   / CMDLINE Top
  $|PF19$% Put PREFIX Left  / CMDLINE Off
  $|PF20$% Put PREFIX Right / CMDLINE Off
  $|PF21$% Put PREFIX Off   / CMDLINE Off
  $|PF22$% Put PREFIX Left  / CMDLINE Bottom
  $|PF23$% Put PREFIX Right / CMDLINE Bottom
  $|PF24$% Put PREFIX Off   / CMDLINE Bottom


PROFBMM  XEDIT

/* This procedure uses Full-screen XEDIT to display a BMMAP file ...  */
//* This is the start of the procedure - set up variables, etc. ...   */
/* Set RT to 0  - if the procedure is to ABORT, this variable should  */
/* be set to a meaningful value (eg 999 or the value of RC) ...       */
 RT = 0                                /* Default to OK ...           */
 ADDRESS COMMAND 'EXEC BMAHILO'        /* Get HI & LO attributes ...  */
 PARSE PULL HI LO                      /* to enhance SAY".." lines ...*/
/* Use REXX's SIGNAL ON facility to trap various nasties. Hopefully   */
/* this should mean that a User won't have to see horrible IBM error  */
/* messages - I'll display a 'nice' message instead ...               */
 SIGNAL ON  ERROR                      /* Go to ERROR  if RC ¬= 0 ... */
 SIGNAL ON  SYNTAX                    /* Go to SYNTAX if interpret err*/
/* Initialise variables & set up defaults ...                         */
 ParmFile = 'NO'                       /* BMPARMS file found ...      */
 FPad     = '_'                        /* Field Pad character ...     */
 ESC      = '0'                        /* ESCape (X'FF') character ...*/
 PH       = '|'                        /*   Protected, High Intensity */
 PL       = '%'                        /*   Protected, Low  Intensity */
 UH       = '¬'                        /* UnProtected, High Intensity */
 UL       = '\'                        /* UnProtected, Low  Intensity */
 UI       = '@'                        /* UnProtected, Invisible      */
 SLine    =  1                         /* Start Line of display ...   */
 SCol     =  1                         /* Start Col. of display ...   */
/* Get the Mapname from XEDIt ...                                     */
'EXTRACT /FNAME'                       /* Get FileName from XEDIt ... */
 MapName = FName.1                     /* Save MapName ...            */
/* See if 'MapName BMPARMS *' file exists ...                         */
 ADDRESS COMMAND 'SET CMSTYPE HT'      /* Don't want User to see this.*/
 SIGNAL OFF ERROR                      /* Just turn it off for now .. */
 ADDRESS COMMAND 'STATE' MapName 'BMPARMS *'  /* Does it exist ???    */
 RT = RC                               /* - save return code ...      */
 SIGNAL ON  ERROR                      /* Turn it back on again ...   */
 ADDRESS COMMAND 'SET CMSTYPE RT'
 SELECT                               /* What was the ReTurn code ??? */
   WHEN RT  =  0 THEN ParmFile = 'YES' /* - BMPARMS file found ...    */
   WHEN RT  = 28 THEN NOP              /* - BMPARMS file not found .. */
   OTHERWISE          SIGNAL ErrState  /* - Oh dear !!!               */
 END /* SELECT */                     /* What was the ReTurn code ??? */
/* Issue DIAG(8C) to get terminal information - how many lines/columns*/
/* has this terminal got ???                                          */
/* Use this info to determine what size MAP to display.               */
/* NOTE: The maximum width allowed is the number of columns on the    */
/* terminal, minus 1 (For XEDIT's attributes).                        */
 T      = DIAG(8C)                    /* Issue CP DIAGnose command ...*/
 TLines = C2D(SUBSTR(T,5,2))           /* Get number of Lines ...     */
 TCols  = C2D(SUBSTR(T,3,2)) - 1       /* Get number of Columns ...   */
XeditSet:                             /* Set XEDIT default settings...*/
'SET CTLCHAR' ESC 'ESCAPE'              /* - ESCape character ...     */
'SET CTLCHAR' PH  'PROTECT HIGH'       /* - Protected, High Intensity */
'SET CTLCHAR' PL  'PROTECT NOHIGH'     /* - Protected, Low  Intensity */
'SET CTLCHAR' UH  'NOPROTECT HIGH'     /* - Unprotect, High Intensity */
'SET CTLCHAR' UL  'NOPROTECT NOHIGH'   /* - Unprotect, Low  Intensity */
'SET CTLCHAR' UI  'NOPROTECT INVISIBLE' /* - Unprotect, Invisible     */
'SET PREFIX  OFF'                       /* - Don't want PREFIX        */
'SET SCALE   OFF'                       /* - Don't want SCALE         */
'SET TOFEOF  OFF'                       /* - Don't want TOF/EOF msgs  */
'SET LINEND  OFF'                       /* - Don't want Linedit       */
'SET CMDLINE OFF'                       /* - Don't want COMMAND line  */
'SET MSGLINE ON 2 2 OVERLAY'            /* - OVERLAY MESSAGE LINE     */
/* Note, if MSGLINE is set OFF, then a blank line appears on the      */
/* full-screen XEDIT, so I've used OVERLAY instead. This also means   */
/* that it is possible to issue messages from this XEDIT to the full- */
/* screen.                                                            */
ReadBMPARMS:
/* Now read the BMPARMS file -----------------------------------------*/
/* Come here if 'REFRESH' function selected ...                       */
/* Set up default parameters ...                                      */
 Enter    = '*'                        /* Allow <Enter> key ...       */
 PF.      = 'EMSG BMAMAP103W Undefined PF/PA key' /* PF key settings..*/
 PF.PF2   = 'REFRESH'                  /* Default to REFRESH ...      */
 PF.PF3   = '*'                        /* Allows 'QUIT' ...           */
 PF.PF13  = 'TOP'                      /* Default to TOP ...          */
 PF.PF14  = 'BOTTOM'                   /* Default to BOTTOM ...       */
 PF.PF15  = '*'                        /* Allows 'QUIT' ...           */
 PF.PF19  = 'BACKWARD'                 /* Default to BACKWARD ...     */
 PF.PF20  = 'FORWARD'                  /* Default to FORWARD ...      */
 PF.PF22  = 'PAGELEFT'                 /* Default to LEFT ...         */
 PF.PF23  = 'PAGERIGHT'                /* Default to RIGHT ...        */
 PA.      = 'EMSG BMAMAP103W Undefined PF/PA key' /* PA key settings..*/
/* The information on Input Fields is kept in arrays, keyed on the    */
/* number of the input field.                                         */
 IFNumP   =  0                        /* No of Input Fields in BMPARMS*/
 IFName.  = ''                        /* Input Field Name array ...   */
 IFVal.   = '*'                       /* Input Field Value array ..   */
 IFLen.   =  0                        /* Input Field Length array ... */
 IFStart. =  0                        /* Input Field Start pos inline */
 IFProt.  = 'NO'                      /* Input Field Protect array ...*/
 Line.    = ''                        /* Map lines array ...          */
 Header   = 0                         /* Number of Header lines ...   */
 Trailer  = 0                         /* Number of Trailer lines ...  */
 Cursor  = 'NOTSET'                   /* Cursor start Field ...       */
 GPad    = 'YES'                      /* Global Pad setting ...       */
 EMSG    = ''                         /* XEDIT Error Message ...      */
 Return   = 'NO'                      /* Set RETURN to 'NO' ...       */
/* If a BMPARMS file exists, then read it to get the names & default  */
/* values of any Input fields, the numbers & values of any PF/PA keys,*/
/* the start field for the Cursor, and whether Global padding is on.  */
 IF ParmFile = 'NO' THEN SIGNAL GetParms /* No BMPARMS file ...       */
 SIGNAL OFF ERROR                     /* Just turn it off for now ... */


This article will be continued next week.


A J Clarke
Senior Systems Programmer
British Midland (UK)                                         c A J Clarke 1990

