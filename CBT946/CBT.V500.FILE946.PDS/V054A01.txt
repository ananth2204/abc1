AUTOSAVE command modification
Back in 1985, an APAR was opened with IBM (VM22388)
concerning the CMS XEDIT command AUTOSAVE not
honouring the filemode number of the file being edited.
AUTOSAVE will always force a filemode of 1 on an autosaved
file-id.  This APAR was closed as a suggestion for a future
enhancement to XEDIT because IBM developers felt it was a
design change.  I have found no documentation stating that
AUTOSAVE will always use filemode 1.

Our users had noticed that it is a security issue to have files
always autosaved as filemode 1 and had brought it to our (VM
Systems personnel) attention that something should be done
about it.  Filemode 0 files are supposed to be 'secure' when R/O
access is given to others; no one should be able to access
filemode 0 files unless they have R/W access to the disk.  But
if the owner of the file is in XEDIT and AUTOSAVE has been
used to save it intermittently, anyone accessing the disk will be
able to look at the 'autosaved' file since it has a filemode of 1.

I had our IBM SE open a PASR against this APAR over a year
ago (we were on VM/SP HPO 5 at the time).  We have
subsequently installed VM/XA SP 2.0 and now VM/XA SP
2.1, and AUTOSAVE is still forcing a filemode of 1.  It has
been over 5 years now for that APAR, so I have begun an
APAR appeal against VM22388.  The last response was that
the required updates to AUTOSAVE 'might' be addressed for
the release of VM/ESA 1.1 due out in December 1991.
However, they say that there are other priorities and it may not
get done.

I have noticed that the VM systems have taken a real turn
toward security, especially with the introduction of CP code
changes for C2 security code (APAR VM36104) and temporary
disk (TDISK) clearing (APAR VM34215) to name a few.  It
seems logical that CMS should get the same consideration
when a security problem is found.

I took a little time to see what it would take to make the
necessary modification to the AUTOSAVE command, and
found it was a very simple change.  I made a local modification
to DMSXSU (the XEDIT supervisor) to check the filemode
number of the current file in XEDIT that is being saved by the
AUTOSAVE command.  If the filemode is 0, it will force the
AUTOSAVE filemode number to 0, otherwise it will allow the
code to force filemode 1, as it usually does.

There is similar code in DMSXSE (the XEDIT SET
subcommand processor), but the SET AUTOSAVE command
does not need this change because DMSXSU does the actual
save.  DMSXSU builds the PLIST containing the full file
identifier for XSAVE to use, and forces the filemode number
to 1 anyway.  I suppose the code could be added to DMSXSE
to be consistent, since they force filemode 1 there also, but I
believe it would be an unnecessary overhead.

I do not think DMSXSE even has to set the filemode number at
all, since the call to DMSXSUCK, to verify the filename,
filetype, and filemode, calls ESTATEW.  ESTATEW does not
care what the filemode number is - it only needs a valid
filemode letter.  For example, if you have a file called
PROFILE EXEC A1 and you call ESTATEW with a PLIST
containing PROFILE EXEC A0, ESTATEW issues a return
code of 0 anyway.

I tested most possibilities for AUTOSAVE after applying this
fix, and all seems to work as expected.  This fix fits on both
CMS 5.5 at 8902 and 5.6 at 9003.  It may also fit on CMS 5.

To apply this fix use the following procedure.  The examples
are from a VM/XA SP 2.0 or 2.1 system.

1      Create an update file for DMSXSU, using the code below.
      Use the scale line for alignment of your columns.  (Don't
      include the scale line in the DMSXSU update file though!)
      For example, you can use DMSXSU LOCALMOD as the
      file-id to include the updates.  Make sure the file has a
      fixed RECFM, and an LRECL of 80.  The @LOCAL tags
      can be changed to suit your installation for quick
      identification that the code is a local modification.  Note
      that the last line of the update file should be the line
      containing the PASTZERO DS 0H label.

      Update file for DMSXSU:


|...+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....|
./ I 04040000          $ 4042000 2000                 10/09/90 13:09:45
         CLI   ZDEFMODE+1,C'0'    Are we in a mode 0 file?     @LOCAL
         BNE   PASTZERO           Nope - leave it alone.       @LOCAL
         MVI   ZFOOPST3+1,C'0'    FORCE MODE 0                 @LOCAL
PASTZERO DS    0H                 Continue...                  @LOCAL

2      Update or create a local AUX file for entry DMSXSU.
      For this example, I used DMSXSU AUXLCL.  You can
      create your own AUX level entry for local modifications,
      but you will have to add this AUX name to your DMSXA
      CNTRL file. (I would recommend this so that you can
      keep your modifications separate from IBM's.)

      Add as the first entry in DMSXSU AUXLCL:

      LOCALMOD LCL *   Force AUTOSAVE to use FM0 if file in XEDIT is FM0.

3      Reassemble (VMFHASM) DMSXSU.  Make sure that you get the
      "DMSXSU178I Applying DMSXSU LOCALMOD"
      message.  If not, review these steps and make any needed
      changes, and execute VMFHASM for DMSXSU again.

4      Rebuild your CMS nucleus with VMFBLD, load it on your
      CMS system disk, then define and save the CMS NSS(s).


James S Vincent
VM Systems Software Specialist
Nationwide Insurance Company (USA)    c Nationwide Insurance Company 1991

