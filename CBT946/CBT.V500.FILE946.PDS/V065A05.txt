CMS password module

Whilst I am not really in favour of Operations' user-ids having
vast amounts of security attached to them, I felt that some of
the files that I maintain, eg staff sickness, holiday, overtime,
etc, ought to be afforded some additional protection. However,
I faced the problem that any routine reading a password in the
form of:

      IF <INPUT> = <STRING CONSTANT>

could be BROWSEd or XEDITed, and so the password could
be discovered. This bothered me. Then I tried out a remarkably
simple idea, which is illustrated by the following Assembler
routine. The input is compared with the password (in this
example, YLANG), one character at a time, instead of as a
string. In addition, it is compared in reverse order. This results
in the characters being spread across the file when it is viewed.
This Assembler code also maintains a file which is updated
each time the module is invoked. So far, this arrangement has
'protected' my files to my satisfaction.

         TITLE 'PASSWORD MODULE'
 START    START 0
          BALR  R11,0
          USING *,R11
          ST    R14,SAVE14
 * CHECK OUT THE MESSAGE FILE
 TESTFILE LA    R7,28               LOAD RC=28 (FILE NOT FOUND) TO R7
          FSSTATE 'LOGON    RECORDS  A0'
          CR    R15,R7              R15=R7 (IE FILE NOT FOUND?)
          BNE   LOGON               FILE OK - GO LOGON
 MAKEFILE LA    R10,WREC1           LOAD R10 WITH OPENING MSG
          WRTERM 'RECORD FILE CREATE'
          FSWRITE 'LOGON    RECORDS  A0',BUFFER=(10),BSIZE=80
          B     TESTFILE            GO TESTFILE
 * NOW WE GET TO READING THE PASSWORD
 LOGON    RDTERM CONSOLE            READ STRING FROM TERMINAL
          LA    R2,CONSOLE          LOAD STRING TO R2
          CLI   4(R2),C'G'          CHECK R2 (OFFSET 4)
          BNE   SIGNOUT             GO SIGNOFF ROUTINE IF WRONG
          CLI   3(R2),C'N'
          BNE   SIGNOUT
          CLI   2(R2),C'A'
          BNE   SIGNOUT
          CLI   1(R2),C'L'
          BNE   SIGNOUT
         CLI   0(R2),C'Y'
          BNE   SIGNOUT
 * END OF ROUTINE - FAIL OR SUCCEED
 ENDBIT   LA    R10,WREC2           LOAD R10 WITH (OK) MSG
          FSWRITE 'LOGON    RECORDS  A0',BUFFER=(10),BSIZE=80
          FSCLOSE 'LOGON    RECORDS  A0'
          L     R14,SAVE14          LET'S FIND OUR WAY
          BR    R14                 BACK TO CMS
 SIGNOUT  LA    R10,WREC3           LOAD R10 WITH (FAIL) MSG
          FSWRITE 'LOGON    RECORDS  A0',BUFFER=(10),BSIZE=80
          FSCLOSE 'LOGON    RECORDS  A0'
          LINEDIT TEXT='LOG',DISP=CPCOMM,DOT=NO
 * VARIOUS BITS
 SAVE14   DS    F
 WREC1    DC    CL80'OPENING LOGON RECORDS FILE'
 WREC2    DC    CL80'ATTEMPT TO SIGN UP TO CMS - SUCESSFUL'
 WREC3    DC    CL80'ATTEMPT TO SIGN UP TO CMS - UNSUCESSFUL'
 CONSOLE  DS    CL130
 * REGISTER EQUATES
 R2       EQU   2
 R7       EQU   7
 R10      EQU   10
 R11      EQU   11
 R14      EQU   14
 R15      EQU   15
          END

M A Shears
Shift Leader (UK)

