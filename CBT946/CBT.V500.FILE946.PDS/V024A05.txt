 Tape scan utility program
This listing of a tape scan utility program runs under CMS Release 5 at PUT8704.
The command is somewhat easier to use than DITTO and the output is much more
readable.  To execute, enter:
     'TSC recs bytes drive'
where 'recs' is the number of blocks to be displayed at the beginning of each
tape file (the default is 1); 'bytes' is the number of bytes at the start of
each block to be displayed (the default is 80); 'drive' is the virtual device
address (the default is TAP1).  All operands are positional.
An example of the output is shown below:
Ready: T=0.01/0.01 11:47:24
tsc
Tape scan starting ....
Data block contains CMS VMFPLC2 command id
Data block follows - Blocksize is    77
* 02D7D3C3 C8E3E2C3 40404040 40C1E2E2 * .PLCHTSC    ASS *
* C5D4C2D3 C5022511 00014200 01C1F101 * EMBLE.......A1. *
* 410000C6 00000000 500000F8 F8000000 * ...F....&..88.. *
* 03000000 06000002 47000000 1A000001 * ............... *
* 41010488 02251100 18000000 00       * ...h.........   *
*** End of file assumed ***
Data block contains CMS VMFPLC2 command id
Data block follows - Blocksize is    77
* 02D7D3C3 C8E3E2C3 40404040 40D4D6C4 * .PLCHTSC    MOD *
* E4D3C540 40022511 00000400 01C1F100 * ULE ........A1. *
* 030000E5 00000009 900000F8 F8000000 * ...V......88... *
* 04000000 00000002 D3000000 03000000 * .......L....... *
* 03010C88 02251100 32000000 00       * ...h.........   *
*** End of file assumed ***
End of tape assumed.
Ready: T=0.01/0.06 11:47:28

TSC ASSEMBLE
* R0 - MACROS, WORK                R8  - SUBROUTINE LINKAGE
* R1 - MACROS, WORK                R9  ->CURRENT BLOCK
* R2 - # DATA BLOCKS TO DISPLAY    R10 - NOT USED
* R3 - LENGTH OF CURRENT BLOCK     R11 - NOT USED
* R4 - # DATA BLOCKS TO DISPLAY    R12 - BASE (1 OF 1)
* R5 - # BYTES TO DISPLAY          R13 ->SAVEAREA
* R6 - WORK                        R14 - MACROS, WORK
* R7 - WORK                        R15 - MACROS, WORK
*------------------------ REGISTER EQUATES -------------------------*
         PRINT OFF
         REGEQU
         PRINT ON
*------------------------ INITIALISATION ---------------------------*
TSC      CSECT ,
         USING TSC,R12
         LR    R12,R15
         USING TSC,R12
         ST    R14,ADDRRETN
         LA    R13,SAVEAREA
*------------------------ PARSE PARAMETER LIST ---------------------*
         LA    R4,1          DEFAULT BLOCKS TO BE DISPLAYED IS 1
         LA    R5,80         DEFAULT BYTES TO BE DISPLAYED IS 80
         LR    R2,R1         ->PARAMETER LIST
         LA    R1,8(,R2)     ->FIRST OPERAND
         CLI   0(R1),255     NULL?
         BE    GET           (YES)
         BAL   R8,CVB        CONVERT TO BINARY
         LTR   R4,R15        SAVE NUMBER OF RECORDS TO BE DISPLAYED
         LA    R1,16(,R2)    ->SECOND OPERAND
         CLI   0(R1),255     NULL?
         BE    GET           (YES)
         BAL   R8,CVB        CONVERT TO BINARY
         LR    R5,R15        SAVE NUMBER OF BYTES TO BE DISPLAYED
          CLI   24(R2),255    NULL THIRD OPERAND?
         BE    GET           (YES)
         CLC   24(3,R2),=C'TAP'     VALID FORMAT?
         BNE   GET                  (NO )
         MVC   RDTAPE+20(4),24(R2)  (YES)-RESET TAPE MACROS
         MVC   TAPECTL+20(4),24(R2)
*------------------------ ACQUIRE STORAGE --------------------------*
GET      L     R0,=A(8192)
         LR    R1,R0
         DMSFREE DWORDS=(0),                                          C
               MIN=(1),                                               C
               ERR=DMSERR1
         STM   R0,R1,DW
         LR    R9,R1
*------------------------ START OF MAINLINE CODE -------------------*
         LINEDIT TEXT='Tape scan starting ...'
NEWFILE  LR    R2,R4         RESET NUMBER OF BLOCKS TO BE DISPLAYED
READTAPE MVC   MACRO,=C'RDTAPE '
RDTAPE   RDTAPE (9),         READ BLOCK FROM TAPE :-                   C
               65535,                                                  C
               ERROR=TAPERR1
         LR    R3,R0         SAVE BLOCK LENGTH
         NI    FLAGS,255-EOF RESET END-OF-FILE INDICATOR
*------------------------ DISPLAY LABEL INFORMATION ----------------*
         CLC   0(4,R9),=C'VOL1'
         BE    VOL1
         CLC   0(4,R9),=C'HDR1'
         BE    HDR1
         CLC   0(4,R9,=C'EOF1'
         BE    HDR1
         CLC   0(4,R9),=C'HDR2'
         BE    HDR2
         CLC   0(4,R9),=C'EOF2'
         BE    HDR2
         CLC   0(3,R9),=C'EOV'
         BE    LABEL
         B     DATA
VOL1     LINEDIT TEXT='.... Volid=...... Owner=..........',            C
               SUB=(CHARA,0(9),CHARA,4(9),CHARA,41(9)),                C
               COMP=NO,DOT=NO,RENT=NO
         B     READTAPE
HDR1     LINEDIT TEXT=1.... File=........... ... Seq=.... Created=...  C
               ... System=.............'.                              C
               SUB=(CHARA,0(9),                                        C
               CHARA,4(9),CHARA,31(9),CHARA,                           C
               41(9),CHARA,60(9)),                                     C
               COMP=NO,DOT=NO,RENT=NO
         B     READTAPE
HDR2     MVC   CHARWORK(1),4(R9)
         MVC   CHARWORK+1(1),38(R9)
         MVC   CHARWORK+2(1),36(R9)
         LINEDIT TEXT=1 .... Recfm=... Lrecl=..... Blksize=.... Blocks=C
               .... Job/Step=..................',                      C
               SUB=(CHARA,0(9),                                        C
               CHARA,CHARWORK,CHARA,10(9),CHARA,5(9),CHARA,            C
               42(9),CHARA,17(9)),                                     C
               COMP=NO,DOT=NO,RENT=NO
         B     READTAPE
LABEL    LINEDIT TEXT='....',SUB=(CHARA,0(9)),DOT=NO,RENT=NO,COMP=NO
         B     READTAPE
*------------------------- DISPLAY DATA ----------------------------*
DATA     CLC   1(4,R9),=C'CMSF' CMS TAPE EYE-CATCHER?
         BE    DATATAPE      (YES)
         CLC   1(4,R9),=C'PLCH' CMS VMFPLC2 EYE-CATCHER?
         BE    DATAVMFP      (YES)
         B     DATACHEK      BYPASS MESSAGES
 DATATAPE LINEDIT TEXT='Data block contains CMS TAPE command id',       C
               DOT=NO
         B     DATACHEK      FORMAT DATA ...
DATAVMFP LINEDIT TEXT='Data block contains CMS VMFPLC2 command id'.    C
               DOT=NO
         B     DATACHEK      FORMAT DATA ...
DATACHEK LTR   R2,R2         IS DATA TO BE DISPLAYED?
         BZ    *+10          (NO )
         LTR   R5,R5         IS DATA TO BE DISPLAYED?
         BNZ   DATACHAR      (YES)
         LINEDIT TEXT='Data display suppressed'
         B     DATAFSF       PROCESS NEXT FILE ...
DATACHAR LINEDIT TEXT='Data blocks follows - Blocksize is .....'.      C
               SUB=(DEC,(3)),                                          C
               DOT=NO,RENT=NO,COMP=NO
         LR    R6,R9                   ->START OF BLOCK
         LR    R1,R5                   NUMBER OF BYTES REQUESTED
         CR    R1,R3                   REQUESTED > BLOCK LENGTH?
         BL    *+6                     (NO )
         LR    R1,R3                   (YES)-RESET TO BLOCK LENGTH
         LA    R7,0(R6,R1)            ->END OF DATA TO BE DISPLAYED
         B     *+8
DATALOOP LA    R6,16(,R6)             ->NEXT 16 BYTES TO BE DISPLAYED
         CR    R6,R7                   END OF DATA TO BE DISPLAYED?
         BNL   DATABCT                 (YES)
         LR    R15,R7                  CALCULATE LENGTH OF DATA :-
         SR    R15,R6
         CH    R15,=Y(16)
         BNH   *+8
         LA    R15,16
         BCT   R15,*+10                MOVE TO CHARACTER BUFFER :-
         MVC   CHARWORK(*-*),0(R6)
         EX    R15,*-6
         LA    R15,1(,R15)
         BCT   R15,*+10                ENSURE NO WEIRD CHARACTERS :-
         TR    CHARWORK(*-*),TBLTR
         EX    R15,*-6
         LA    R8,1(,R15)
         LINEDIT TEXT='* ......................... ........ * .......  C
               ........ *',                                            C
               SUB=(HEX4A,(0(R6),(8)),CHARA,(CHARWORK,(8))),           C
               DOT=NO,RENT=NO,COMP=NO
         B     DATALOOP
DATABCT  BCT   R2,READTAPE            PROCESS NEXT BLOCK
DATAFSF  LINEDIT TEXT='*** End of file assumed ***',DOT=NO
         MVC   MACRO,=C'TAPECTL'
TAPECTL  TAPECTL FSF,ERROR=TAPERR1    MOVE TO NEXT FILE :-
         OI    FLAGS,EOF              INDICATE EOF PROCESSED
         B     NEWFILE                PROCESS NEXT FILE
*------------------------- ERROR ROUTINES --------------------------*
TAPERR1  CH    R15,=Y(1)
         BNE   TAPERR2
         LINEDIT TEXT='*** ERROR *** ....... MACRO invalid function',  C
               SUB=(CHARA,MACRO),DOT=NO,RENT=NO,COMP=YES
         B     EXITFREE
TAPERR2  CH    R15,=Y(2)     EOF?
         BNE   TAPERR3       (NO )
         TM    FLAGS,EOF     EOF ALREADY DETECTED?
         BNZ   TAPERR@       (NO )
         LINEDIT TEXT='*** End of file encountered ***',DOT=NO
         OI    FLAGS,EOF     INDICATE ONE EOF FOUND
         B     NEWFILE       PROCESS NEXT FILE
TAPERR3  CH    R15,=Y(3)
         BNE   TAPERR4
         LINEDIT TEXT='*** ERROR *** ....... MACRO permanent I/O error'C
               ,SUB=(CHARA,MACRO),DOT=NO,RENT=NO,COMP=YES
          B     EXITFREE
TAPERR4  CH    R15,=Y(4)
         BNE   TAPERR5
         LINEDIT TEXT='*** ERROR *** ....... MACRO invalid device addreC
               ss',SUB=(CHARA,MACRO),DOT=NO,RENT=NO,COMP=YES
         B     EXITFREE
TAPERR5  CH    R15,=Y(5)
         BNE   TAPERR8
         LINEDIT TEXT='*** ERROR *** ...... MACRO tape not attached',  C
               SUB=(CHARA,MACRO),DOT=NO,RENT=NO,COMP=YES
         B     EXITFREE
TAPERR8  CH    R15,=Y(8)
         BNE   TAPERR#
         LINEDIT TEXT-'*** ERROR *** RDTAPE MACRO incorrect length erroC
               r'
         B     EXITFREE
TAPERR#  LR    R2,R15
         LINEDIT TEXT='*** ERROR *** ....... MACRO RC=...',            C
               SUB=(CHARA,MACRO,DEC,(2)),COMP=YES,RENT=NO,DOT=NO
         B     EXITFREE
TAPERR@  LINEDIT TEXT='END OF TAPE ASSUMED'
         B     EXITFREE
DMSERR1  LR    R2,R15
         LINEDIT TEXT=*** ERROR DMSFREE MACRO RC=...',                 C
               SUB=(DEC,(2)),COMP=YES,RENT=NO,DOT=NO
         B     EXIT
*--------------------------CVB : CONVERT TO BINARY -----------------*
CVB      SR    R14,R14
         SR    R15,R15
         LA    R0,8(,R1)
         CLI   0(R1),255
         BER   R8
         B     *+8
CVBLOOP  LA    R1,1(,R1)
         CR    R1,R0
         BER   R8
         CLI   0(R1),C'0'
         BLR   R8
         CLI   0(R1),C'9'
         BHR   R8
         IC    R14,0(R1)
         N     R14,=X'0000000F'
         MH    R15,=Y(10)
         AR    R15,R14
         B     CVBLOOP
*------------------------- RETURN TO CALLER ------------------------*
EXITFREE LTR   R9,R9         STORAGE RELEASE REQUIRED?
         BZ    EXIT          (NO )
         LM    R0,R1,DW      RELOAD APPROPRIATE REGISTERS
         DMSFRET DWORDS=(0), RELEASE STORAGE :-                        C
               LOC=(1),                                                C
               ERR=*
EXIT     L     14,ADDRRETN   ->RETURN
         SR    15,15         RESET RETURN CODE
         BR    14            RETURN
*------------------------- LITERAL POOL ----------------------------*
         LTORG ,
*------------------------- DATA AREAS ------------------------------*
DW       DC    D'0'          WORKAREA
SAVEAREA DC    18A(0)        REGISTER SAVEAREA
ADDRRETN DC    A(0)          RETURN ADDRESS SAVEAREA
FLAGS    DC    X'00'         PROGRAM FLAGS :-
EOF      EQU   X'80'          EOF DETECTED
CHARWORK DC    CL16' '       MISCELLANEOUS WORKAREA :-
MACRO    DC    CL7' '        MACRO IDENTIFIER
TBLTR    DC    256C'.'       SUPPRESS NON-PRINTABLE CHARACTERS :-
          ORG   TBLTR+X'00'
         DC    C'.'
         ORG   TBLTR+C'a'
         DC    C'abcdefghi'
         ORG   TBLTR+C'j'
         DC    C'jklmnopqr'
         ORG   TBLTR+C's'
         DC    C'stuvwxyz'
         ORG   TBLTR+C'A'
         DC    C'ABCDEFGHI'
         ORG   TBLTR+C'J'
         DC    C'JKLMNOPQR'
         ORG   TBLTR+C'S'
         DC    C'STUVWXYZ'
         ORG   TBLTR+C'0'
         DC    C'0123456789'
         ORG   TBLTR+C'#'
         DC    C'#'
         ORG   TBLTR+C''
         DC    C''
         ORG   TBLTR+C'@'
         DC    C'@'
         ORG   TBLTR+C' '
         DC    C' '
         ORG   TBLTR+C'/'
         DC    C'/'
         ORG   TBLTR+C'='
         DC    C'='
         ORG   TBLTR+C'+'
         DC    C'+'
         ORG   TBLTR+C'-'
         DC    C'-'
         ORG   TBLTR+C'*'
         DC    C'*'
         ORG   TBLTR+C'.'
         DC    C'.'
         ORG   TBLTR+C':'
         DC    C':'
         ORG   TBLTR+C'('
         DC    C'('
         ORG   TBLTR+C')'
         DC    C')'
         ORG   TBLTR+C'>'
         DC    C'>'
         ORG   TBLTR+C'<'
         DC    C'<'
         ORG   TBLTR+C'!'
         DC    C'!'
         ORG   TBLTR+C''
         DC    C''
         ORG   TBLTR+C'|'
         DC    C'|'
         ORG   TBLTR+C';'
         DC    C';'
         ORG   TBLTR+C'_'
         DC    C'_'
         ORG   TBLTR+C'%'
         DC    C'%'
         ORG   TBLTR+C''''
         DC    C''''
         ORG   TBLTR+C'&&'
         DC    C'&&'
         ORG   ,
*-------------------------------------------------------------------*
         END   ,
D Martin
 Technical Consultant
Hoskyns Group plc (UK)   ) D Martin 1988
































































