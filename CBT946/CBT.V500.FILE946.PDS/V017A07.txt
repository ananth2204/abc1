 Making the use of VMCF easier
The VMCF is a part of CP which provides virtual machines with the ability to
send and receive data to/from any other virtual machine.  However, its use is
limited to Assembler language and is not very easy.
I have written some subroutines which control the transmission protocol of VMCF.
Our operating system is VM/SP release 3.1 and I tested the subroutines by
calling them from COBOL and FORTRAN programs.
The only limit to the amount of data that can be transmitted at any one time
from one program to another is the virtual storage of the virtual machines
involved in the transmission.  These subroutines can also be used to synchronise
two or more virtual machines' programs.  A description of the subroutines and of
their calling conventions follows.
CFINIT
This routine authorises a virtual machine to use the VMCF and must be the first
to be called in the program.  The syntax is:
%    For COBOL:
     CALL 'CFINIT' USING BUFRIC LENRIC FLGRIC FLGSEN.
%    For FORTRAN:
     CALL CFINIT(BUFRIC,LENRIC,FLGRIC,FLGSEN)
BUFRIC is the buffer which receives the data: it must be large enough to
accommodate the largest amount of data which will be received.
LENRIC is the parameter that contains the length in bytes of the data received.
It must be an integer:
%    For COBOL:
     LENRIC  PIC 9(9) COMP.
%    For FORTRAN:
     INTEGER*4  LENRIC
FLGRIC is the flag to be tested to acknowledge the receipt of data; it must be
set initially to 0.  When data is received it switches to 1; once you realise
that its value is 1, you have to reset it to 0.  It must be an integer.
FLGSEN is the flag to be tested to acknowledge the sending of data.  It must be
set initially to 0.  It switches to 1 to confirm that after a call to CFSEND
(below) data has effectively been sent.  Once you realise that its value is 1,
you have to reset it to 0.  It must be an integer.
CFSEND
This subroutine, which must be called after CFINIT, sends data to another
program in another virtual machine that has already called CFINIT.  The syntax
is:
%    For COBOL:
     CALL 'CFSEND' USING MACHID BUFSEN LENSEN.
%    For FORTRAN:
     CALL CFSEND(MACHID,BUFSEN,LENSEN)
MACHID is the name of the virtual machine to send the data to.
%    For COBOL:
     MACHID  PIC X(8)
%    For FORTRAN:
     CHARACTER*8 MACHID
BUFSEN is the buffer in which you have put the data to be sent.
LENSEN is an integer containing the length of the data you want to transmit.
Its definition is the same as for LENRIC.
CFCLOS
This subroutine, without parameters, stops the use of VMCF.  It must be called
when the program has no other data to transmit and/or receive.  The syntax is:
%    For COBOL:
     CALL 'CFCLOS'.
%    For FORTRAN:
     CALL CFCLOS
After calling CFINIT, you can receive data any time.  In fact, it is an external
interruption which schedules the reception's routine.  The only way you can find
out if BUFRIC contains data sent from another virtual machine is to test FLGRIC.
Similarly, after calling CFSEND, an interrupt from the machine to which you have
sent data will arrive, and schedule a routine which sets FLGSEN to 1.  When you
realise that FLGSEN is set to 1 you are sure that your data has been
successfully sent.

CFINIT ASSEMBLE
          PRINT GEN
CFINIT   CSECT
         STM   14,12,12(13)         SAVE REGISTERS OF CALLING PROGRAM
         LR    12,15                LOAD BASE REGISTER
         USING CFINIT,12            ESTABLISH ADDRESSABILITY
         L     2,0(0,1)             IN R2: ADDRESS OF FIRST PARAMETER
         L     3,4(0,1)             IN R3: ADDRESS OF SECOND PARAMETER
         L     4,8(0,1)             IN R4: ADDRESS OF THIRD PARAMETER
         L     5,12(0,1)            IN R5: ADDRESS OF FOURTH PARAMETER
         LA    7,PARAMADR           IN R7: ADDRESS OF AREA IN WHICH
         STM   2,5,0(7)             ADDRESSES ARE TO BE SAVED
         STCTL 0,0,SAVCREG    QQQ
         LA    6,SAVCREG            !
         OC    0(4,6),=X'00000001'  !Q> HERE SET CR0 BIT TO ONE
         LCTL  0,0,SAVCREG    ______!     TO ALLOW EXTERNAL INTERRUPT
         SSM   MASKSET              SET PSW BIT 7 TO 1 TO ALLOW ITERR.
         HNDEXT  SET,VMCFINT        TRAP EXTERNAL INTERRUPT
         LA    5,CFPARM             LOAD ADDRESS OF PARAMETER LIST
         DIAG  5,8,X'0068'          AUTHORISE FOR VMCF
         C     8,=X'00000000U       CHECK FOR ERROR
         BC    8,EXIT
ERR01    LINEDIT TEXT='AUTHORISE FAILED: R8=........',SUB=(HEX,(8))
EXIT     L     14,12(13)            LOAD RETURN ADDRESS
         MVI   12(13),X'FF'         SET RETURN FLAG
         LM    2,12,28(13)          RESTORE REGISTERS
         LR    15,8                 RETURN CODE=THE SAME OF VMCF
         BR    14
PARAMADR DS    0D                   SAVE OF ADDRESSES OF PARAMETERS
BUFADR   DS    F                    ADDRESS OF COMMUNICATION BUFFER
LENADR   DS    F                    LENGTH OF DATA IN BUFFER
FLAGADR  DS    F                    FLAG OF DATA RECEIVED
FLAGADS  DS    F                    FLAG OF DATA SENT
MASKSET  DC    X'FF'                MASK FOR SETTING PSW BIT 7 TO ONE
         DS    0D
SAVCREG  DS    F                    AREA FOR PROCESS CONTROL REGISTER 0
CFPARAM  DS    0D                   PARAMETER LIST FOR VMCF AUTHORISE
CFFLAG1  DC    X'00'                FLAGS
CFFLAG2  DC    X'00'                FLAGS
CFFUNZ   DC    X'0000'              VMCF FUNCTION "AUTHORISE"
CFIDENT  DC    C'    '              NOT USED
CFCUSER  DC    C'        '          NOT USED
CFCVADA  DC    AL4(INTBUF)          ADDRESS OF INTERRUPT BUFFER
CFCLENA  DC    X'00000084'          LENGTH OF INTERRUPT BUFFER
DUMMY    DC    16C' '
         DS    0D
INTBUF   DC    132C' '              INTERRUPT CONTROL BUFFER
         LTORG
*       INTERRUPT EXIT ROUTINE VMCFINT  *
VMCFINT  CSECT
         USING VMCFINT,11           ESTABLISH ADDRESSABILITY
         USING CFPARAMD,6           ADDRESSABILITY IN DUMMY SECTION
         LR    11,15                LOAD BASE REGISTER
         ENTRY IFSEND               IFSEND IS AN ENTRY SYMBOL
         SSM   MASKRES              RESET PSW BIT 7-NO ALLOW INTERRUPT
         ST    14,CAMBAK            SAVE RETURN ADDRESS
         L     7,PARADDR            LOAD ADDRESS OF PARAMETER LIST
         L     8,IFSEND             IFSEND CONTAINS 0 OR 1 IF INTER
         C     8,=X'00000001'       PERTAINS TO RECEIVE OF DATA, OR
         BC    7,RECEIVE            TO A CONFIRM OF SEND.
ACKNSEND WRTERM 'REGULAR SEND ',13  IF IT IS A SEND, SIGNAL IT,
         LA    8,IFSEND             RESET IFSEND TO 0,
         MVC   0(4,8),=X'00000000'
         L     9,12(0,7)            LOAD ADDRESS OF FOURTH PARAMETER
         MVC   0(4,9),=X'00000001'  (FLAG OF SEND) AND MOVE 1.
         B     RETURN$              IF IT IS A RECEIVE...
RECEIVE  LA    5,CFPARAM$           LOAD ADDRESS OF VMCF PARAMETER LIST
          L     6,INTBUFA            LOAD ADDRESS OF DATA BUFFER
         MVC   4(4,5),CFIDENTD      MOVE MESSAGE IDENTIFICATOR...
         MVC   8(8,5),CFCUSERD      MOVE SENDER IDENTIFICATOR...
         MVC   20(4,5),CFCLENAD     MOVE LENGTH OF MESSAGE...
         MVC   16(4,5),0(7)         MOVE ADDRESS OF DATA BUFFER...
         DIAG  5,8,X'0068'          IN VMCF PARAM.LIST TO EXECUTE DIAG
         C     8,=X'00000000'       GO TO WELL$ IF O.K
         BC    8,WELL$              ELSE SIGNAL ERROR
ERR02    LINEDIT TEXT='RECEIVE FAILED: R8=........',SUB=(HEX,(8))
         B     RETURN$
WELL$    L     9,8(0,7)             LOAD ADDRESS OF THIRD PARAMETER
         MVC   0(4,9),=X'00000001'  MOVE 1 IN THE FLAG PARAMETER
         L     9,4(0,7)             LOAD ADDRESS OF SECOND PARAMETER
         MVC   0(4,9),CFCLENA$      MOVE DATA-LENGTH IN THE LENGTH PAR,
RETURN$  SSM   MASKSETB             SET PSW BIT 7 TO ONE
         L     14,CAMBAK            LOAD RETURN ADDRESS
         LR    15,8                 RETURN CODE=VMCF RETURN CODE
         BR    14                   BRANCH RETURN
MASKRES  DC    X'FE'                MASK FOR RESETTING PSW BIT 7
         DS    0D
MASKSETB DC    X'FF'                MASK FOR SETTING PSW BIT 7
         DS    0D
CAMBAK   DS    F                    AREA FOR RETURN ADDRESS
CFPARAM$ DS    0D                   VMCF PARAMETER LIST
CFFLAG1$ DC    X'00'                FLAGS
CFFLAG2$ DC    X'00'                FLAGS
CFFUNZ$  DC    X'0005'              FUNCTION "RECEIVE"
CFIDENT$ DC    X'00000000'          MESSAGE IDENTIFICATOR
CFCUSER$ DC    C'        '          SENDER IDENTIFICATOR
CFCVADA$ DS    F                    ADDRESS OF DATA BUFFER
CFCLENA$ DS    F                    LENGTH OF DATA
DUMMY$   DC    8X'00'
CFCUSID$ DC    8C' '
         DS    0D
IFSEND   DC    X'00000000'          FLAG "SEND" OR "RECEIVE"
INTBUFA  DC    AL4(INTBUF)          ADDRESS OF INTERRUPT BUFFER
PARADDR  DC    AL4(PARAMADR)        ADDRESS OF SUBROUTINE PARAMETERS
         LTORG
DETAIL   DSECT
CFPARAMD DS    0D                   DUMMY SECTION OF THE VMCF
CFFLAG1D DS    1C                   PARAMETERS LIST
CFFLAG2D DS    1C
CFFUNZD  DS    2C
CFIDENTD DS    4C
CFCUSERD DS    8C
CFCVADAD DS    4C
CFCLENAD DS    4C
DUMMYD   DS    8C
CFCUSIDD DS    8C
         PRINT GEN
         END

CFSEND ASSEMBLE
         PRINT GEN
CFSEND    CSECT
         STM   14,12,12(13)         SAVE REGISTERS OF CALLING PROGRAM
         LR    12,15                LOAD BASE REGISTER
         USING CFSEND,12            ESTABLISH ADDRESSABILITY
         EXTRN IFSEND               IFSEND IS AN EXTERNAL SYMBOL
         L     2,0(0,1)             IN R2: ADDRESS OF FIRST PARAMETER
         L     3,4(0,1)             IN R3: ADDRESS OF SECOND PARAMETER
         L     4,8(0,1)             IN R4: ADDRESS OF THIRD PARAMETER
         LA    5,PARMADDR           IN R5: ADDRESS OF AREA IN WHICH
         STM   2,4,0(5)             ADDRESSES ARE TO BE SAVED
         L     6,MACHADDR           LOAD ADDRESS OF RECEIVER IDENTIF.
         LA    5,CFPARAM0           LOAD ADDRESS OF VMCF PARAM. LIST
          MVC   8(8,5),0(6)          MOVE RECEIVER IDENT.TO PARAM.LIST
         MVC   16(4,5),BUFADDR      MOVE ADDR OF DATA BUFFER TO PARLIST
         L     6,LENADDR            LOAD ADDRESS OF DATA LENGTH
         MVC   20(4,5),0(6)         MOVE DATALENGTH TO VMCF PARM LIST
         DIAG  5,8,X'0068'          EXECUTE SEND
         C     8,=X'00000000'       CHECK FOR ERROR
         BC    8,WELL0              IF O.K., GO TO WELL0
ERR03    LINEDIT TEXT='SEND FAILED: R8=........',SUB=(HEX,(8))
         B     RETURN0
WELL0    L     6,IFSENDA            LOAD ADDRESS OF IFSEND
         MVC   0(4,6),=X'00000001'  MOVE 1 TO IFSEND (LAST OPERATON)
RETURN0  L     14,12(13)            EXECUTED WAS A SEND)
         MVI   12(13),X'FF'         SET RETURN FLAG
         LM    2,12,28(13)          RESTORE REGISTERS
         LR    15,8                 RETURN CODE=RETURN CODE OF VMCF
         BR    14                   BRANCH RETURN
PARMADDR DS    0D                   SAVE OF ADDRESSES OF PARAMETERS
MACHADDR DS    F                    ADDRESS OF COMMUNICATION BUFFER
BUFADDR  DS    F                    LENGTH OF DATA IN BUFFER
LENADDR  DS    F                    FLAG OF DATA RECEIVED
CFPARAM0 DS    0D                   VMCF PARAMETER LIST
CFFLAG10 DC    XU00U                FLAGS
CFFLAG20 DC    X'00'                FLAGS
CFFUNZ0  DC    X'0002'              FUNCTION "SEND"
CFIDENT0 DC    X'00000000'          MESSAGE IDENTIFICATOR
CFCUSER0 DS    8C                   SENDER IDENTIFICATOR
CFCVADA0 DS    F                    ADDRESS OF DATA BUFFER
CFCLENA0 DS    F                    LENGTH OF DATA
DUMMY0   DC    8X'00'
CFCUSID0 DC    8C' '
         DS    0D
IFSENDA  DC    A(IFSEND)            EXTERNAL ADDRESS OF IFSEND
         PRINT GEN
         END

CFCLOS ASSEMBLE
         PRINT GEN
CFCLOS   CSECT
         STM   14,12,12(13)         SAVE REGISTERS OF CALLING PROGRAM
         LR    12,15                LOAD BASE REGISTER
         USING CFCLOS,12            ESTABLISH ADDRESSABILITY
         SSM   MASKRES              RESET PSW BIT 7-NO ALLOW INTERRUPT
         HNDEXT  CLR                RESET TRAP OF EXTERNAL INTERRUPT
         LA    5,CFPARAMU           LOAD ADDRESS OF PARAMETER LIST
         DIAG  5,8,X'0068'          UNAUTHORISE VMCF
         C     8,=X'00000000'       CHECK FOR ERROR
         BC    8,EXIT
ERR04    LINEDIT TEXT='UNAUTHORISE FAILED: R8=........',SUB=(HEX,(8))
EXIT     L     14,12(13)            LOAD RETURN ADDRESS
         MVI   12(13),X'FF'         SET RETURN FLAG
         LM    2,12,28(13)          RESTORE REGISTERS
         LR    15,8                 RETURN CODE=THE SAME OF VMCF
         BR    14
         DS    0D
CFPARAMU DS    0D                   PARAMETER LIST FOR VMCF UNAUTHORISE
CFFLAG1U DS    C                    NOT USED
CFFLAG2U DS    C                    NOT USED
CFFUNZU  DC    X'0001'              VMCF FUNCTION "UNAUTHORISE"
CFIDENTU DS    4C                   NOT USED
CFCUSERU DS    8C                   NOT USED
CFCVADAU DS    4C                   NOT USED
CFCLENAU DS    4C                   NOT USED
         DS    0D
MASKRES  DC    X'FE'                MASK FOR RESETTING PSW BIT 7
         LTORG
         PRINT GEN
          END
Marco Appiani
Systems Manager
Registro Italiano Navale (Italy)   ) Registro Italiano Navale 1988






























































