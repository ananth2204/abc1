 CMS to telex 281-B printing
I recently used a telex 179 display terminal (3278 compatible) with an attached
telex 281-B printer.  As this printer is directly attached to the screen, VM
cannot spool to it (it has no network address).  The screen can, of course,
issue screen dump commands to the printer; however, this is not practical when
printing large CMS files.
In the screen configuration it is possible to specify a sequence of control
characters, which, when received from an application program, will cause the
current screen to be sent to the attached printer.  The control sequence I used
was X'1DC1C6', which is an unprotected attribute byte followed by the letter
'F', and this must be set in the first two bytes of the top line of the screen.
Using this information I wrote the following CMS program to allow printing of a
CMS file either from the CMS command line by entering 'PTINTX fn ft fm', or from
the FILELIST or FLIST menus screens by entering PRINTX by the file to be
printed.  Before the initial screen of data is displayed the MORE message will
appear; pressing PA2 will then display the first screen of data to be printed.
The file will print automatically one screen at a time, with no operator
intervention required.  The program tests when the screen data has been sent to
the printer buffer and then displays the next screen of data to be sent to the
printer buffer.
PA1 or PF3 can be pressed to cancel the print process.  Once the key has been
pressed no more data will be sent to the printer buffer.  However, the printer
will continue until all data in the buffer has been printed.  The command PRINTX
? will display a help screen.
Things to note when using PRINTX:
1    The first three characters of the top line of each screen are lost due to
the control sequence.  This can be overcome by shifting the screen data three
characters to the right before displaying the screen.  This can be done by
following the comments marked * ### in the code.
2    When printing from FILELIST or FLIST the 'X SYSTEM' indicator remains on
the bottom line of the screen.  This must be cleared by using the RESET key
before printing will occur.
3    When using remote screens via VM/VCNA it is necessary to increase the delay
in the SLEEP command (10 seconds seems OK).
4    The screen is tied up for the duration of the printing process.

* Register usage
*   R0   - points to extended parameter list
*   R1   - points to parameter list
*   R3   - line counter (page=93 lines)
*   R4   - file id address
*   R5   - diagnose..
*   R6   -     .. registers
*   R7   - general work reg
*   R8   - loop control
*   R9   - bal register
*   R12  - base register
*   R13  - points to save area
*   R14  - return address
*   R15  - return code register
PRINTX   CSECT
         PRINT ON,GEN
         REGEQU
         STM   14,12,12(13)            SAVE REGISTERS
         LR    R12,R15                 LOAD BASE REGISTER
         USING PRINTX,R12              ESTABLISH ADDRESSABILITY
         B     STARTED                 BRANCH AROUND EYECATCHER
         DC    C'PRINTX 17/03/87 VERSION 3.0'
STARTED  DS    0H
         LR    R4,R1                   LOAD PARAMETER ADDRESS IN R2
         LA    R4,8(R4)                POINT TO FILE NAME
         CLI   0(R4),C'?'              WAS HELP REQUESTED ?
         BE    HELP                    .. YES
*        OPEN THE INPUT FILE
*        (IF AN ERROR OCCURS, ASSUME THERE IS NO DATA TO PROCESS)
*        (IE FILE DOES NOT EXIST)
          LA    R3,7                    LOAD PRINT LINE START
         FSOPEN (R4),ERROR=RETURN
LB10     BAL   R9,INITSCR              INTI SCREEN AREA TO X'00'
         LA    R7,LINE1                ADDRESS SCREEN LINE 1
         LA    R8,24                   LOAD NUMBER OF LINES
LB20     EQU   *
         LA    R3,1(R3)                BUMP LINE COUNT
         CH    R3,=H'90'               LINE COUNT GT. 90 ?
         BH    LB35                    .. YES BLANK LAST 3 LINES
         CH    R3,=H'8'                LINE COUNT LT. 8 ?
         BL    LB35                    .. YES BLANK FIRST 7 LINES
LB25     EQU   *
         MVI   INBUFF,C' '             BLANK INPUT
         MVC   INBUFF+1(79),INBUFF           .... BUFFER
         FSREAD (R4),BUFFER=INBUFF,BSIZE=255,ERROR=ERR1
* ###
* ###    REPLACE THE SINGLE MVC FOLLOWING THESE COMMENTS WITH
* ###    THE THREE LINES IN THE COMMENTS TO CAUSE THE INPUT LINES
* ###    TO BE SHIFTED 3 CHARACTERS TO THE RIGHT.
* ###
* ###    MVI   0(R7),C' '              MOVE THE INPUT LINE
* ###    MVC   1(2,R7),0(R7)           3 CHARACTER POSITIONS TO
* ###    MVC   3(77,R7),INBUFF         THE RIGHT
* ###
         MVC   0(80,R7),INBUFF         MOVE LINE TO SCREEN BUFFER
         B     LB37
LB35     EQU   *
         CH    R3,=H'93'               LAST LINE ?
         BNE   LB36                    .. NO, SKIP RESET
         SR    R3,R3                   .. YES, RESET COUNTER
LB36     MVI   0(R7),C' '              CREATE A BLANK LINE
         MVC   1(79,R7),0(R7)            .... FOR PAGE SKIPPING
LB37     LA    R7,80(R7)               BUMP TO NEXT BUFFER LINE
         BCT   R8,LB20                 LOOP BACK
*        END OF LOOP
LB40     EQU   *
         LA    R7,1932                 SET DATA LENGTH
LB50     STH   R7,WORKH                STORE IN HALF WORD
         MVC   CCWCTR,WORKH            MOVE INTO CCW
*        WRITE TO THE SCREEN
         LA    R5,CCW01                LOAD WRITE CCW ADDRESS INTO R5
         LA    R6,9                    LOAD VIRTUAL TERM ADDR IN R6
*        DIAG  58 USING REG 5/6
         DC    X'83560058'             ISSUE DIAGNOSE
         BNZ   ERR3                    DID IT FAIL ??
*        NOW TRY A READ
*        DONT TEST FOR '0' RETURN CODE AS A NON ZERO RETURN CODE IS
*        RETURNED WHEN FIRST SCREEN HAS NOT ACTUALLY BEEN DISPLAYED
*        AT THE TERMINAL. I.E. PA2 HAS NOT BEEN PRESSED
*        DATA IN THE INPUT BUFFER IS RETURNED AS FOLLOWS:
*            ABBCDDE  WHERE A  = FUNCTION KEY PRESSED
*                           BB = CURSOR POSITION
*                           C  = X'11' SET BUFFER ADDRESS
*                           DD = FIELD ADDRESS
*                           E  = FIELD VALUE
LB60     EQU   *
         MVI   SCREENI,X'00'           CLEAR INPUT
         MVC   SCREENI+1(79),SCREENI       AREA FOR NEXT READ
         LA    R5,CCW02                LOAD WRITE CCW ADDRESS INTO R5
         LA    R6,9                    LOAD VIRTUAL TERM ADDR IN R6
*        DIAG  58 USING REG 5/6
         DC    X'83560058'             ISSUE DIAGNOSE
         LINEDIT TEXT='SLEEP 2 SEC',DOT=NO,DISP=CPCOMM
         CLI   SCREENI,C'%'            PA1 PRESSED ?
         BE    RETURN                  .. YES, QUIT
         CLI   SCREENI,C'3'            PF3 PRESSED ?
          BE    RETURN                  .. YES, QUIT
         CLC   SCREENI+3(3),=X'1140C1' DID WE GET SOME DATA BACK ?
         BNE   LB60                    .. NO, TRY AGAIN
         OI    SCREENI+6,C' '          UPPER CASE TRANSLATE
         CLI   SCREENI+6,C'F'          .. YES, CHECK IF 'F'
         BE    LB60                    YES 'F' GO AND RE-READ
LB80     CLI   EOF,C'N'                HAVE WE END OF FILE ?
         BE    LB10                    .. NO
RETURN   EQU   *
         SR    R15,R15                 CLEAR RETURN CODE
         L     R14,12(R13,0)           RESTORE REGISTER 14
         LM    R0,R12,20(13)           RESTORE REGISTERS 0-12
         BR    R14                     RETURN
*        ROUTINE TO WRITE BINARY ZEROS TO SCREEN AREA
INITSCR  EQU   *
         STM   R4,R9,SAVE6
         LA    R4,LINE1
         LA    R5,24
INITLOP  MVI   0(R4),X'00'
         MVC   1(79,R4),0(R4)
         LA    R4,80(R4)
         BCT   R5,INITLOP
         LM    R4,R9,SAVE6
         BR    R9
*        ERROR AND HELP ROUTINES
*        END OF FILE, OR FILE READ ERROR
HELP     EQU   *
         LINEDIT TEXT='  '
         LINEDIT TEXT='  '
         LINEDIT TEXT='PRINTX - HELP TEXT FOLLOWS'
         LINEDIT TEXT='  '
         LINEDIT TEXT='To obtain help on PRINTX type PRINTX ?'
         LINEDIT TEXT='  '
         LINEDIT TEXT='To use PRINTX to print a CMS file'
         LINEDIT TEXT='enter: PRINTX fn ft fm'
         LINEDIT TEXT='............. fn = file name'
         LINEDIT TEXT='............. ft = file type'
         LINEDIT TEXT='............. fm = file mode'
         LINEDIT TEXT='or: in FLIST or FILELIST type PRINTX'
         LINEDIT TEXT='... against the file to be printed'
         LINEDIT TEXT='  '
         LINEDIT TEXT='To cancel the print function'
         LINEDIT TEXT='Press PF3 or PA1'
         LINEDIT TEXT='  '
         LINEDIT TEXT='  '
         B     RETURN
ERR1     EQU   *
         STM   R4,R9,SAVE6
         MVI   EOF,C'Y'
         LA    R4,12
         CR    R4,R15
         BNE   ERR2
         BE    LB40                    END OF FILE
ERR2     EQU   *
         LINEDIT TEXT='PRINTX - MSG001 READ ERROR ON INPUT FILE'
         LINEDIT TEXT='SLEEP 8 SEC',DOT=NO,DISP=CPCOMM
         B     RETURN
*        DIAGNOSE ERROR
ERR3     EQU   *
         LINEDIT TEXT='PRINTX - MSG003 ERROR IN DIAGNOSE WRITE. RETURN X
               CODE IS ...',SUB=(DEC,(15))
         LINEDIT TEXT='SLEEP 8 SEC',DOT=NO,DISP=CPCOMM
         B     RETURN
ERR4     EQU   *
         LINEDIT TEXT='PRINTX - MSG004 ERROR IN DIAGNOSE READ. RETURN CX
               ODE IS ...',SUB=(DEC,(15))
          LINEDIT TEXT='SLEEP 8 SEC',DOT=NO,DISP=CPCOMM
         B     RETURN
         EJECT
*        DATA AREAS
SCREENI  DC    XL80'00'
SCREENO  DC    X'F5'                   ERASE/WRITE
SBA      DC    X'114040'               SET SCREEN BUFFER ADDRESS TO
*                                      ROW 1 COL 1 OF 3278
LINE1    DS    CL1920
*        CONTROL SEQUENCE FOR THE TELEX PRINTER
TELEX    DC    X'1140401DC1C6'         SET SCREEN BUFFER ADDRESS TO
         DC    X'1D60'                 ROW 1 COL 1 OF 3278
*                                      SET ATTRIB BYTE AND CONTROL
*                                      CHARACTER FOR TELEX SCREEN
*        CCW TO WRITE DATA TO THE SCREEN
CCW01    DS    0D
         DC    X'29'                   WRITE CCWCODE
CCWADDR  DC    AL3(SCREENO)            DATA ADDRESS
         DC    X'20'                   CCW FLAGS
         DC    X'90'                   CTL
*        DC    X'80'                   CTL
*        DC    X'C0'                   CTL
CCWCTR   DS    AL2                     COUNT
*        CCW TO READ THE MODIFIED FIELDS
CCW02    DS    0D
         DC    X'2A'                   READ CCWCODE
CCWADD2  DC    AL3(SCREENI)            DATA ADDRESS
         DC    X'20'                   CCW FLAGS
         DC    X'80'                   READ MODIFIED
CCWCT2   DC    AL2(40)                 COUNT
SAVE6    DS    6F
WORKH    DS    H
UNBUFF   DC    CL255' '
EOF      DC    CL1'N'
         LTORG
         END
Andrew Astle
Technical Consultant (Australia)   ) Xephon 1988




























