Query disk utilization

From time to time we have started to run low on DASD space
and it was a very labour intensive process to try and locate
mini-disks that could be trimmed.  I wrote a REXX program,
called QDISKALL, which would access the system source
directory and perform a read link to each mini-disk.  Once the
read link was established the QUERY DISK command could
be issued to interrogate the utilization.  The program creates an
output file of the results and flags certain conditions such as
mini-disks that badly need trimming or those that do not have
an optimum blocking factor.

/* This program reads in the system directory and uses the MDISK      */
/* information to determine the utilization of each MDISK accessed.   */
   trace 'o'
   address command
   Directory = 'USER BACKUP F'
/* Erase the "FREE SPACE" file created during the last execution of   */
/* program.                                                           */
   'ERASE QDISKALL REPORT A'
/* Read the system directory to get a list of all the users and their */
/* MDISKS.                                                            */
   'ACCESS 195 F'
   i = 1
   do forever
       'EXECIO 1 DISKR' Directory
       if rc ¬= 0 then leave
       pull Var1 Var2 Var3 Var4 Var5 Var6 Var7 Var8 Var9 .
       if Var1 = "USER"
       then do
           Current_User = Var2
       end
       else
       if Var1 = "MDISK"
       then do
           UserID.i    = Current_User
           Mdisk_CUU.i = Var2
           StartCyl.i  = Var4
           NoCyl.i     = Var5
           EndCyl.i    = StartCyl.i + NoCyl.i - 1
           VolSer.i    = Var6
           if Var9 ¬= ''
               then Read_Password.i = Var8
               else Read_Password.i = '********'
           i = i + 1
       end
   end
   MDisk_Count = i - 1
/* Set up a loop to link and access to the various mini-disks. Query  */
/* the utilization of each mini-disk and create an output file of the */
/* results.                                                           */
   'SET CMSTYPE HT'
   do i = 1 to MDisk_Count
       Free_Space_Rec = left(UserID.i,8),
                        left(Mdisk_CUU.i,3),
                        left(VolSer.i,6),
                        right(StartCyl.i,3),
                        right(EndCyl.i,3),
                        right(NoCyl.i,3)
       if Read_Password.i = '********'
       then do
           Message = left('NO PASSWORDS ON MINIDISK',30)
           call WriteRpt Free_Space_Rec Message
           iterate
       end
       'EXECIO * CP (SKIP STRING LINK TO' UserID.i MDisk_CUU.i,
           'AS 555 RR' Read_Password.i
       if rc ¬= 0
       then do
           Message = left('LINK RETURN CODE =' rc,30)
           call WriteRpt Free_Space_Rec Message
           iterate
       end
       'ACCESS 555 Z'
       if rc ¬= 0
       then do
           Message = left('ACCESS RETURN CODE =' rc,30)
           call WriteRpt Free_Space_Rec Message
           'EXECIO * CP (SKIP STRING DETACH 555'
           iterate
       end
       'QUERY DISK Z ( STACK FIFO'
       pull Query_Header
       pull Label CUU Mode Status Alloc Type BlkSize Files Used '-',
            Percent Left Total
       if BlkSize = 'OS'
       then do
           Message = left('OS TYPE MINIDISK ALLOCATION',30)
           call WriteRpt Free_Space_Rec Message
           'EXECIO * CP (SKIP STRING DETACH 555'
           iterate
       end
       if BlkSize ¬= 4096 then BlkSize = '*'||BlkSize
       Message = right(BlkSize,5),
                 right(Files,5),
                 right(Percent||'%',4),
                 right(Used,6),
                 right(Left,6),
                 right(Total,6)
       if Used ¬= ''
       then do
           if NoCyl.i > 2 & Percent < 25
           then do
               TrimVal = format(((Used * 2)/(Total/NoCyl.i) + .5),3,0)
               Message = Message left('Trim to' TrimVal 'cylinders.',25)
           end
       end
       call WriteRpt Free_Space_Rec Message
       'RELEASE Z'
       'EXECIO * CP (SKIP STRING DETACH 555'
   end
   'SET CMSTYPE RT'
   'FINIS QDISKALL REPORT A'
   exit
/* Common routine to write out the free space report.                 */
WriteRpt:
   procedure
   parse arg Record
   'EXECIO 1 DISKW QDISKALL REPORT A (STRING' Record
   return

Figure 1 is a sample of the report file that is created.  From left
to right the fields displayed are: user-id, mini-disk address,
DASD volume, start/stop cylinders on volume, number of
allocated cylinders, block size of mini-disk, number of files,
percent used, number of blocks used, number of blocks left,
and total number of blocks.

In addition the following information may be displayed:

o      A trim message if the number of cylinders is greater than 2
      and the percent used is less than 25

o      An asterisk beside any blocksize other than 4096

o      Any link or access errors to the mini-disk.


John Purdie
Assistant Manager - Technical Support
Export Development Corporation (Canada)

