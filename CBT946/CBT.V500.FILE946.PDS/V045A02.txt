An on-line code table

When designing the VM logo and other screens, particularly if
more sophisticated layouts are needed, it is necessary to know
the hexadecimal representation of EBCDIC characters, together
with their graphic displays.

It becomes cumbersome and slow to check each character in
the code table provided by the System/370 Reference Summary
(GX20-1850), not to mention the need for good eyesight in
order to read the fine print.

Worse still, as keyboards and character sets vary from country
to country, some displays are omitted from the table.

The EXEC presented here is a simple device to show the whole
set of characters or subranges and is configuration independent.
It is simple, as REXX programs usually are, but its frequent
use has saved a lot of time in our installation.

CHARSET EXEC

/* this program displays all or a subrange of ebcdic characters
   with their corresponding hexa-ebcdic codes                         */
arg start end .
address command
parse source . . fn .
if start = '?' then signal help
if start = ''  then start = 40        /* default start               */
if end   = ''  then end   = 'FF'      /* default end                 */
if ¬datatype(start,'X') | ¬datatype(end,'X')
   then signal not_hex                /* not hexadecimal             */
if x2d(start) > 255 | x2d(end) > 255
   then signal out_of_range           /* out of range arguments      */
if x2d(end) < x2d(start)
   then signal bad_args               /* inconsistent arguments      */
/* save terminal linesize status                                     */
parse value diag(8,'QUERY TERMINAL') with 'LINESIZE' stat ','
/* linesize 112 will avoid CP breaking the line too early            */
'CP TERMINAL LINESIZE 112'
/* clear the screen if there are more than 8 lines to be typed       */
if x2d(end) - x2d(start) > 128  then 'VMFCLEAR'
/* display range requested                                           */
do k = x2d(start) by 16 to x2d(end)
   str = ''                           /* clear the output string     */
   do j=k for 16 while j <= x2d(end)
      l = j
      if j = 21 | j = 29  /* hexa 15 and 1d are line-breakers        */
         then l = 40
      str = str||right('0'd2x(j),2)'1de8'x||d2c(l)'1d60'x
   end
   say str
   say ''
end
'CP TERMINAL LINESIZE' stat      /* restore terminal linesize status */
exit
help:
     say 'Format  :' fn '<hex-start <hex-end>>'
     say 'Function: to display ebcdic characters within the start-end',
                    'range in the format'
     say '          hexa-EBCDIC'||'1de8'x||'character' '1d60'x
     say 'Note    : default range is 40-FF'
     exit
not_hex:
     say 'An argument is not hexadecimal - valid digits are 0-9 and A-F'
     exit
bad_args:
     say 'End argument is less than start - type' fn '? for a help'
     exit
out_of_range:
     say 'An argument is greater than FF - valid range is 00 -- FF'
     exit


Daniel Arany
Technical Support Manager
Texaco (Brazil)                                   ) Texaco (Brazil) 1990


