 Super Link
A systems programmer often has responsibility for and access to a number of
user-ids (eg RSCS, PVM, DIRMAINT).  There are also cases where the systems
programmer needs to link to a particular user's mini-disk to either look into a
problem or perform a maintenance task such as the formatting of a mini-disk.  It
is inconvenient and impractical to have to look at the directory to obtain a
password every time the need arises.
Super Link (SLINK) is a CMS module that allows the user with class C privilege
to obtain a link to any user's mini-disk without having to specify a password.
For users without class C privilege, the command behaves exactly as the CP link
command.
SLINK can also be of great use when writing systems that require linking to
various mini-disks (or perhaps all mini-disks) without having to process the
USER DIRECTORY file.  An example of such an application is a back-up system.
The technique used in the program to gain access to a mini-disk without having
to specify a password is to store the ID of the mini-disk owner in the caller's
VMBLOK VMUSER field.  This effectively fools VM, making it appear as if the
caller is linking to his/her own mini-disk.  As a result, the check for a
password is bypassed.  The comments in the program should provide sufficient
explanatory material for the remaining program logic.
* Super Link (SLINK) Module.                                        *
*  This module implements a Super Link command that accepts the     *
*  same syntax as the CP Link command but allows the caller with    *
*  system programmer privileges (class C) to link to any user's     *
*  mini-disk, in any mode, without knowing the required password.   *
*  To bypass the password prompt the user-id that we are linking    *
*  to is temporarily stored in our VMBLOK.  As a result, CP         *
*  bypasses the password check.  Once the link is established, our  *
*  user id is restored to the VMUSER field of our VMBLOK.           *
SLINK    CSECT                        DEFINE MAIN CONTROL SECTION
* Entry housekeeping..                                              *
         SAVE  (14,12),,*             SAVE CALLER'S REGISTERS
         USING SLINK,R15              SET UP TEMP ADDRESSABILITY
         CNOP  0,4                    ALIGN TO FULLWORD BOUNDARY
         BAL   R15,*+76               JUMP AROUND SAVE AREA
         DROP  R15                    DROP TEMP BASE REGISTER
         USING *,R13                  SET UP NEW BASE REGISTER
         DC    18F'-1'                REGISTER SAVE AREA
         ST    R15,8(,R13)            CHAIN BACKWARD SAVE AREA PTR
         ST    R13,4(,R15)            CHAIN FORWARD SAVE AREA PTR
         LR    R13,R15                LOAD NEW BASE REGISTER VALUE
                                                                EJECT
* Verify that correct number of parms were passed and save them.    *
         CLI   8(R1),X'FF'             USER ID THERE?'
         BE    BADCALL                 BETTER LUCK NEXT TIME
         MVC   LINKUSER,8(R1)          SAVE THE ID
         CLI   16(R1),X'FF'            CUU1 THERE?
         BE    BADCALL                 BETTER LUCK NEXT TIME
         MVC   LINKCUU1,16(R1)         SAVE CUU1
         CLI   24(R1),X'FF'            CUU2 THERE?
         BE    BADCALL                 BETTER LUCK NEXT TIME
         MVC   LINKCUU2,24(R1)         SAVE CUU2
         CLI   32(R1),X'FF'            MODE SPECIFIED (RR, WR, etc.)?
         BE    WHOAMI                  NO - GO FIND WHO I AM
         MVC   LINKMODE,32(R1)         SAVE LINK MODE
                                                              SPACE ,
* Find out from CP what our userid is and save it.                  *
WHOAMI   DS    0H
         LA    R5,EXTIDCOD             --> MY EXT ID CODE AREA
         LA    R7,24                   ONLY 24 BYTES NEEDED
         DIAG  R5,R7,0                 STORE EXTENDED ID CODE
                                                              SPACE ,
* Convert his/her user ID's binary representation to EBCDIC hex.    *
         L     R1,LINKUSER             HIS/HER USERID 1ST WORD
         BAL   R14,CVTBH               CONVERT TO HEX
         STM   R0,R1,STCP1US1          SAVE 1ST & 2ND WORDS
          L     R1,LINKUSER+4           HIS/HER USERID 2ND WORD
         BAL   R14,CVTBH               CONVERT TO HEX
         STM   RO,R1,STCP1US3          SAVE 3RD & 4TH WORDS
                                                              SPACE ,
* Convert my user ID's binary representation to EBCDIC hex.         *
         L     R1,MYUSERID             MY USERID 1ST WORD
         BAL   R14,CVTBH               CONVERT TO HEX
         STM   R0,R1,STCP2US1          SAVE 1ST & 2ND WORDS
         L     R1,MYUSERID+4           MY USERID 2ND WORD
         BAL   R14,CVTBH               CONVERT TO HEX
         STM   R0,R1,STCP2US3          SAVE 3RD & 4TH WORDS
                                                              SPACE ,
* Setup a SPIE exit in case the user does not have the needed PRIVS.*
* If the Store CP (executed via diagnose) fails as a privileged     *
* instruction, the command will continue as a normal CP Link cmd.   *
         SPIE  PRIVOP,(2)              TAKE PRIV OP EXIT IF NECESSARY
                                                              SPACE ,
* Find our VMBLOK address by looking at the RUNUSER field of        *
* the PSA.                                                          *
         LA    R5,ARUNUSER             --> RUNUSER IN PSA (ME)
         LA    R7,1                    RETURN ONE FULLWORD
         LA    R8,VMBLOKA              PUT BY VMBLOK ADDR HERE
         DIAG  R5,R7,4                 EXAMINE REAL STORAGE
         L     R1,VMBLOKA              ADDRESS OF MY VMBLOK
         AH    R1,=X'0110'             --> VMUSERID FIELD
                                                              SPACE ,
* Convert binary address to EBCDIC hex address.                     *
         BAL   R14,CVTBH               CONVERT TO BINARY
         ICM   R0,B'1100',=X'4040'     BLANK OUT 1ST 2 BYTES
         STM   R0,R1,STCP1ADR          SAVE STCP ADDRESS
         STM   R0,R1,STCP2ADR          SAVE STCP ADDRESS
                                                              SPACE ,
* Store the id of the user we are linking to in our VMUSER field.   *
         LA    R5,STCP1CMD             --> STCP COMMAND
         LA    R7,STCP1LEN             COMMAND LENGTH
         LA    R6,TEMPSAVE             --> RESPONSE BUFFER
         LA    R8,L'TEMPSAVE           RESPONSE BUFFER LENGTH
         ICM   R7,B'1000',=X'40'       RESPONSE TO BUFFER PLEASE
         DIAG  R5,R7,8                 STCP XXXXXXXX YYYYYYYY ZZZZZZZ
                                                              SPACE ,
* Execute the "Super Link" command.                                 *
DOSLINK  DS    0H
         LA    R5,LINKCMD              --> LINK COMMAND
         LA    R7,LINKLEN              COMMAND LENGTH
         DIAG  R5,R7,8                 LINK USERID CUU1 CUU2 MODE
         ST    R7,LINKRC               SAVE RET CODE FOR EXIT
         TM    SLFLAGS,NOPRIVS         CAN THIS USER DO STCP?
         BO    RETURN                  NO - LINK ONLY PRIVS
                                                              SPACE ,
* Restore our userid to our VMBLOK.                                 *
         LA    R5,STCP2CMD             --> STCP COMMAND
         LA    R7,STCP2LEN             COMMAND LENGTH
         LA    R6,TEMPSAVE             --> RESPONSE BUFFER
         LA    R8,L'TEMPSAVE           RESPONSE BUFFER LENGTH
         ICM   R7,B'1000',=X'40'       RESPONSE TO BUFFER PLEASE
         DIAG  R5,R7,8                 STCP XXXXXXXX YYYYYYYY ZZZZZZZ
                                                              SPACE ,
* Out we go..                                                       *
RETURN   DS    0H                      ELSE, RETURN TO CALLER
         L     R15,LINKRC              RESTORE RC FROM LINK COMMAND
         L     R13,4(,R13)             RELOAD BACKWARD SAVE AREA PTR
         RETURN (14,12),RC=(15)        RETURN TO CALLER
                                                              SPACE ,
* Here if a privileged operation exception occurs.                  *
PRIVOP   DS    0H                      PROBABLY A CLASS G USER
         OI    SLFLAGS,NOPRIVS         REMEMBER HIS STATUS IN LIFE
          B     DOSLINK                 AND ALLOW REGULAR LINK COMMAND
                                                              SPACE ,
* Error message/help for invalid call to SLINK.                     *
BADCALL  DS    0H
         LH    R2,=AL2(X'FFFF')        INDICATE CONSOLE INFO
         DIAG  R2,R3,X'24'             GET CONSOLE ADDRESS
         BNZ   NOCLEAR                 NO CONSOLE OR DISC
         LA    R1,CLEARCCW             --> DIAG 58 CLEAR CCW
         DIAG  R1,R2,X'58'             ATTEMPT A CLEAR VIA CP
         BC    2,*-4                   REPEAT UNTIL NOT BUSY
                                                              SPACE ,
NOCLEAR  DS    0H
 WRTERM ' '
 WRTERM 'Super Link:'
 WRTERM ' '
 WRTERM '             Use this command to gain read or write'
 WRTERM '             access to another user''s minidisk without'
 WRTERM '             having to specify a password.  The "super"'
 WRTERM '             access provided is only valid for users'
 WRTERM '             with privilege class C.  For all other users'
 WRTERM '             SLINK behaves exactly as LINK (password prompt'
 WRTERM '             is presented).'
 WRTERM ' '
 WRTERM ' '
 WRTERM 'Calling format is"'
 WRTERM ' '
 WRTERM '             SLINK userid vaddr1 vaddr2 ||mode||'
 WRTERM ' '
         B     RETURN                  ADIOS
                                                              SPACE ,
* Data Areas..                                                      *
         DS    0D
CLEARCCW DC    X'19',AL3(*-*),X'20',X'FF',AL2(1)
                                                              SPACE ,
LINKRC   DC    F'0'                    RETURN CODE FROM LINK COMMAND
SLFLAGS  DC    X'00'                   MISCELLANEOUS SLINK FLAG(S)
NOPRIVS  EQU   X'01'                   THIS USER CANNOT STCP
         DS    0D
EXTIDCOD DC    CL16' '
MYUSERID DC    CL8' '
         DS    0F
ARUNUSER DC    XL4'338'
VMBLOKA  DC    F'0'
                                                              SPACE ,
* List of commands that will be executed together..                 *
         DS    0D
CMDLIST  EQU   *
                                                              SPACE ,
* Store CP to put the other user's ID in my VMBLOK.                 *
STCP1CMD DC    CL8'STCP '
STCP1ADR DC    CL8' '
         DC    CL8' '
STCP1US1 DS    F
STCP1US2 DS    F
         DC    CL8' '
STCP1US3 DS    F
STCP1US4 DS    F
*        DC    CL7' '
*        DC    X'15'
STCP1LEN EQU   *-STCP1CMD
                                                              SPACE ,
* The "Super Link" command.                                         *
         DS    0D
LINKCMD  DC    CL8'LINK '
LINKUSER DC    CL8' '
         DC    CL8' '
 LINKCUU1 DC    CL8' '
LINKCUU2 DC    CL8' '
LINKMODE DC    CL8' '
*        DC    CL7' '
*        DC    X'15'
LINKLEN  EQU   *-LINKCMD
                                                              SPACE ,
* Store CP to put back my user ID in my VMBLOK.                     *
         DS    0D
STCP2CMD DC    CL8'STCP '
STCP2ADR DC    CL8' '
         DC    CL8' '
STCP2US1 DS    F
STCP2US2 DS    F
         DC    CL8' '
STCP2US3 DS    F
STCP2US4 DS    F
STCP2LEN EQU   *-STCP2CMD
CMDSLEN  EQU   *-CMDLIST
                                                                EJECT
* CVTBH conveniently borrowed from DMKCVT (Release 6 version -      *
* public domain).                                                   *
                                                              SPACE ,
* SUBROUTINE NAME -  CVTBH                                          *
* FUNCTION -                                                        *
*    CONVERTS A WORD OF BINARY INFORMATION INTO A DOUBLE-WORD OF
*    EBCDIC HEX DIGITS
* ENTRY CONDITIONS -
*    CPR1 = WORD OF BINARY INFORMATION TO BE CONVERTED
* EXIT CONDITIONS -
*    GPR0, GPR1 = DOUBLEWORD OF EBCDIC HEX DIGITS
* REGISTER USAGE -
*        GPR14 = RETURN REGISTER
*        GPR0, GPR1 = WORK REGISTERS
         SPACE 3
CVTBH    DS    0H
         ST    R1,TEMPSAVE                   BINARY
         UNPK  TEMPSAVE+8(9),TEMPSAVE(5)     UNPACK
         TR    TEMPSAVE+8(8),DMPTAB-C'0'     TRANSLATE
         LM    R0,R1,TEMPSAVE+8              RESULT IN R0 & R1
         BR    R14                           RETURN
         DS    0D
TEMPSAVE DS    CL256
         DS    0D
DMPTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE
         SPACE
         REGEQU
         END   SLINK
Carlos Rimola
Software Engineer
Veritas Technology Inc (USA)  ) Xephon 1988















