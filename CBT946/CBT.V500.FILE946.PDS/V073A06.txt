CMS file conversion

The following code will provide a user with the ability to
convert CMS files from ASCII to EBCDIC character formats
or vice versa. The EXEC, FILECONV, accepts an input file
(to translate) and an output file (which will be the translated
version) and an optional parameter to specify which type of
conversion will be performed. The ASCII parameter will
convert the input file from EBCDIC to ASCII, with the
EBCDIC parameter performing the reverse translation.
EBCDIC is the default parameter.

For example:

      FILECONV ASCII FILE A EBCDIC FILE A ( EBC

will produce a file EBCDIC FILE A which is the EBCDIC
version of the ASCII file ASCII FILE A

/* This EXEC will convert an input file from ASCII to EBCDIC or      *
 * vice versa and write to an output file.                           *
 *                                                                   *
 * Format of EXEC is <EXEC> FILECONV infile outfile ( ASCII|EBCDIC   *
 *    where INFILE  is the name of the input file (fn ft fm).        *
 *      and OUTFILE is the name of the output file (fn ft fm).       *
 *                                                                   *
 * Options available are ASCII or EBCDIC. ASCII will convert the     *
 * file to ASCII and EBCDIC will convert the file to EBCDIC.         *
 * Abbreviations can be used with ASCII and EBCDIC. The default      *
 * option is EBCDIC.                                                 */
set exectrac off
/* Init                                                              */
address cms 'MAKEBUF' ; bufno = rc
address cms 'SET CMSTYPE HT'
parse upper arg arguments
parse value arguments with infn inft infm outfn outft outfm '(' options .
filedefs = infn inft infm outfn outft outfm
/* Work out if options are ok                                        */
options = STRIP(options)
select
   when STRIP(options) = '' then options = 'EBCDIC'
   when ABBREV('ASCII',options) = 1 then options = 'ASCII'
   when ABBREV('EBCDIC',options) = 1 then options = 'EBCDIC'
    otherwise do
       address cms 'SET CMSTYPE RT'
       say 'Invalid options 'STRIP(options)' passed'
       say 'Format of the EXEC is ',
                         '<EXEC> FILECONV infile outfile ( ASCII|EBCDIC'
       exit 100
    end
end
/* Define appropriate translation table                              */
if options = 'EBCDIC' then do
/* Define ASCII to EBCDIC translate table                            */
   trtable.1  = '00010203372D2E2F1605250B0C0D0E0F'
   trtable.2  = '101112133C3D322618193F271C1D1E1F'
   trtable.3  = '405A7F7B5B6C507D4D5D5C4E6B604B61'
   trtable.4  = 'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'
   trtable.5  = '7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'
   trtable.6  = 'D7D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D'
   trtable.7  = '79818283848586878889919293949596'
   trtable.8  = '979899A2A3A4A5A6A7A8A9C04FD0A107'
   trtable.9  = '00010203372D2E2F1605250B0C0D0E0F'
   trtable.10 = '101112133C3D322618193F271C1D1E1F'
   trtable.11 = '405A7F7B5B6C507D4D5D5C4E6B604B61'
   trtable.12 = 'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'
   trtable.13 = '7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'
   trtable.14 = 'D7D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D'
   trtable.15 = '79818283848586878889919293949596'
   trtable.16 = '979899A2A3A4A5A6A7A8A9C04FD0A107'
end
/* Define EBCDIC to ASCII translate table                            */
 else do
    trtable.1 =  '000102030009007F0000000B0C0D0E0F'
    trtable.2 =  '1011121300000800181900001C1D1E1F'
    trtable.3 =  '00000000000A171B0000000000050607'
    trtable.4 =  '0000160000000004000000001415001A'
    trtable.5 =  '20000000000000000000002E3C282B7C'
    trtable.6 =  '2600000000000000000021242A293B5E'
    trtable.7 =  '2D2F0000000000000000002C255F3E3F'
    trtable.8 =  '000000000000000000603A2340273D22'
    trtable.9 =  '00616263646566676869000000000000'
    trtable.10 = '006A6B6C6D6E6F707172000000000000'
    trtable.11 = '007E737475767778797A0000005B0000'
    trtable.12 = '000000000000000000000000005D0000'
    trtable.13 = '7B414243444546474849000000000000'
    trtable.14 = '7D4A4B4C4D4E4F505152000000000000'
    trtable.15 = '5C00535455565758595A000000000000'
    trtable.16 = '30313233343536373839000000000000'
 end
/* Check arguments                                                   */
if WORDS(filedefs) < 6 then do
   address cms 'SET CMSTYPE RT'
   say 'Not enough arguments passed'
   say 'Format of the EXEC is ',
                         '<EXEC> FILECONV infile outfile ( ASCII|EBCDIC'
   exit 110
end
 else nop
if WORDS(filedefs) > 6 then do
   address cms 'SET CMSTYPE RT'
   say 'Too many arguments passed'
   say 'Format of the EXEC is ',
                         '<EXEC> FILECONV infile outfile ( ASCII|EBCDIC'
   exit 120
end
 else nop
/* Check input file                                                  */
address cms 'ESTATE 'infn inft infm
rcsave = rc
if rcsave ¬= 0 then do
   address cms 'SET CMSTYPE RT'
   say 'Error 'rcsave' locating input file 'infn inft infm
   say 'Format of the EXEC is ',
                         '<EXEC> FILECONV infile outfile ( ASCII|EBCDIC'
   exit 130
end
 else nop
/* Check output file                                                 */
address cms 'ESTATE 'outfn outft outfm
rcsave = rc
if rcsave = 0 then do
   address cms 'SET CMSTYPE RT'
   say 'Error, output file 'outfn outft outfm' already exists'
   say 'Format of the EXEC is ',
                         '<EXEC> FILECONV infile outfile ( ASCII|EBCDIC'
   exit 140
end
 else nop
address cms 'SET CMSTYPE RT'
say 'Reading input file 'infn inft infm
say 'Creating output file 'outfn outft outfm
if options = 'ASCII' then text = 'EBCDIC to ASCII'
 else text = 'ASCII to EBCDIC'
say text' character conversion will now take place. Please wait.'
address cms 'SET CMSTYPE HT'
/* Read input file and convert                                       */
do until read_rc ¬= 0
   address cms 'EXECIO 1 DISKR 'infn inft infm' (STEM INFILE.'
   read_rc = rc
   if read_rc ¬= 0 then nop
    else do
       new_string = ''
       do len = 1 to LENGTH(infile.1)
          byte_to_convert = SUBSTR(infile.1,len,1)
          hex_version = C2X(byte_to_convert)
/* Actual conversion                                                 */
          dec_version = X2D(hex_version)
          trtable_element = dec_version%16
          trtable_element = trtable_element + 1
          offset = dec_version//16
          offset = (offset * 2) + 1
          new_byte = SUBSTR(trtable.trtable_element,offset,2)
          new_string = new_string||X2C(new_byte)
       end
/* Write to output file                                              */
       address cms 'EXECIO 1 DISKW 'outfn outft outfm' (VAR NEW_STRING'
       file_rc = rc
       if file_rc ¬= 0 then do
          address cms 'SET CMSTYPE RT'
          say 'Error 'file_rc' writing to 'outfn outft outfm
          exit 150
       end
        else nop
    end
end
/* Close input and output files                                      */
address cms 'FINIS 'infn inft infm
address cms 'FINIS 'outfn outft outfm
/* Go home                                                           */
address cms 'DROPBUF 'bufno
address cms 'SET CMSTYPE RT'
say text' conversion complete'
exit 0

Martin Wicks
Senior VM Systems Programmer
Hampshire County Council (UK)

