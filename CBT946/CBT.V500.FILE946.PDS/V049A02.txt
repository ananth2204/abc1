Displaying CPU usage information

The VMCPU EXEC displays information about CPU usage for
the total system and for the first ten CMS users (see Figure 1).
The panel display may be updated automatically, at 15 seconds
intervals via the WAKEUP module, or as required, by pressing
the ENTER key.  Users of VSE/SP will notice that VMCPU
produces an almost identical display to Interactive Interface's
'CPU System Activity Display' with VSE partitions changed to
CMS users.  The EXEC is running under VM/SP
Release 5.

VMCPU EXEC

/*  */
Parse Upper Arg autoparm
seconds=15;
Do forever
'EXEC VMCPU1'
If autoparm = 'AUTO' Then do
'WAKEUP AT +00:'seconds '(QUIET'
If Externals() = 0 Then Iterate
End
Parse Upper External answ
If answ = 'Q' Then Leave
If answ = 'AUTO' Then autoparm = 'AUTO'
End
'VMFCLEAR'
Exit

VMCPU1 EXEC

/* ----- Display VM/SP CPU Activity ----- */
/* ------- Class E user required -------- */
'EXECIO * CP (STRING INDICATE'
Pull . . ukcpu .
Pull pag .
ukcpu = Substr(ukcpu,1,3)
i=0
'EXECIO * CP (STRING Q N'
Do Queued()
Pull ln
ln = Translate(ln,' ','-')
ln = Translate(ln,' ',',')
Do k = 1 to 7 by 2
i=i+1
us.i = Word(ln,k)
if us.i = ' ' | us.i = 'VSM' | Substr(us.i,1,5) = 'LOGON' then i = i - 1
End
End
z = 0
Do j = 1 to i
 Call cpu
 If retstr Â¬= ' ' Then do
    z = z + 1
    cstr.z = retstr
    End
End
Queue 'SET MSGM OFF'
Do p = 1 to z
   Queue 'INPUT' cstr.p
   End
Queue 'TOP'
Queue 'SORT * D 10 12'
Queue 'FILE'
'XEDIT ALLCPU $WORK A'
'VMFCLEAR'
d = Date()
t = Time()
n = Overlay(t,d,14)
m = Right(n,80)
Say m
Say Centre(Bright('CPU VM/SP ACTIVITY DISPLAY'),80)
Say Right('CPU',78)
r1 = '*' || Copies('-',52) || '*   %'
Say Right(r1,77)
bz = Format((ukcpu / 2),3,0)
ukcpu = Right(Strip(ukcpu,'L',0),3)
r2 = 'Total System :     |'||Bright(Copies('*',bz)) ,
     ||Copies(' ',50-bz)||'| ' ukcpu
Say r2
r3 = '| ----|' || Copies('---------|',4) || '----- |'
r3 = pag '  ' r3
Say Right(r3,73)
r4 = '* ---10--------30--------50--------70--------90----- *'
Say Right(r4,73)
Say 'CMS User :'
Say
'EXECIO * DISKR ALLCPU $WORK A (FINI'
i = Queued()
If i > 10 Then i = 10
Do i
Pull 1 xuser 10 xcpu 13 .
bz = Format((xcpu / 2),3,0)
xcpu = Right(Strip(xcpu,'L',0),3)
Say xuser  '         |' || Bright(Copies('*',bz)) Copies(' ',51-bz) xcpu
End
nol = 20 - (9 + z)
If nol > 0 Then
Do nol
  Say
  End
lastl = 'Auto Refresh='||Bright('AUTO') 'Refresh='||Bright('ENTER') ,
        'Quit='||Bright('Q')
Say Centre(lastl,80)
'ERASE ALLCPU $WORK A'
'DESBUF'
Exit
Cpu:
retstr = ' '
'EXECIO * CP (STRING QUERY' us.j
Pull logon
If logon = us.j 'NOT LOGGED ON' Then Return
bus.j = us.j||' '
'EXECIO * CP (STRING INDICATE FAVOR'
x = Queued()
Pull line
If line = 'NO FAVORED USERS' Then Nop
   Else do
    nn = Index(line,bus.j)
        Say line
        If x > 1 Then do
           Do i = 1 to x-1
           Pull line; Say line;
           If nn = 0 then  nn = Index(line,bus.j)
           End
        End
        If nn > 0 Then do
           'DESBUF'
            Exit
            End
        End
'EXECIO * CP (STRING SET FAVORED' us.j '1'
'EXECIO * CP (STRING INDICATE FAVOR'
x = Queued()
Do i = 1 to x
   Pull usr.1 . . po.1 usr.2 . . po.2 usr.3 . . po.3
   Do k = 1 to 3
      If usr.k = us.j Then do
         usx = usr.k; post = po.k;
         End
         End
End
'EXECIO * CP (STRING SET FAVORED' us.j 'OFF'
If post = '000' Then retstr = ' '
Else retstr = Left(us.j,9) || Right(post,3)
Return
Bright:
Parse Arg strng
Return '1DE8'X||strng||'1D60'X


Teodor Jurak
Systems Programmer
Jadrolinija Rijeka (Yugoslavia)                       c Jadrolinija 1990


