Using GLOBALV command for CMS servers

Many VM sites make use of disconnected CMS servers for
utility purposes.  Very often those CMS machines are
controlled by EXECs waiting for events to happen, such as
receiving a file in the reader, an incoming CP SMSG
command, or a specified time to elapse.  When operating,
those servers need to know several things. For example:

o      How long to 'sleep' before awakening again
o      Who the master operator is
o      Which commands are allowed, etc.

A good way to 'tell' the server these things is to put the
information in a file called LASTING GLOBALV where the
data can be maintained.  When the server is logged on to the
system and an IPL of CMS is performed, the information is put
in storage by CMS.  By making use of the CMS GLOBALV
command, every EXEC running in that server can obtain the
information in a variable.

The EXEC I have written does some housekeeping services
which makes  it very easy to build the LASTING GLOBALV
file.  All you need is a source configuration file.

A sample configuration file named SAMPLE TABLE A1 is
shown below.

* SAMPLE TABLE
SLEEP_TIME 5SEC
MASTOPER   OPERATOR
COMMANDS   STOPIT PROC1 PROC2

Put the following line in CONFIG EXEC:

CONFIG SAMPLE TABLE A1

To obtain the variables in an EXEC enter:

GLOBALV SELECT SAMPLE GET SLEEP_TIME MASTOPER COMMANDS

The EXEC generates a file named LASTING GLOBALV on
your A disk which contains initialized variables that can be
used by other EXECs during your CMS session.  If there is
already a LASTING GLOBALV file, this EXEC only makes
additions to it.

As input to this EXEC you have to supply the filename,
filetype, and filemode of a configuration file you have already
built.  The syntax of that file is:

      xxxxxxxx yyyyyyyyy yyyyy yyyyyyyyyyyyyyy yyyyyyy yyyy

Where:

      xxxxxxxx is the name of the variable in storage and may
      contain any valid REXX symbol name.

      yyyyyyyy is the contents of that variable and may contain
      several words separated by spaces.  Quotes are not
      recommended.

      Blank lines or those that start with * are considered
      comment lines.

Every time you log-on to CMS those variables are
automatically installed in storage.  To obtain a value in an
EXEC, for example, you must use the CMS command:

      GLOBALV SELECT grpname GET name1 name2 name-n

Where: grpname is the filename of the input file, and name1
and name-n are the names of the variables you want to use.


CONFIG EXEC

/*      Exitcodes:
8 Invalid symbolname
12 Invalid characters in value part (/*, */ or quotes)
Probably the input is not a CONFIG file
16 Logic error in this exec                                           */
signal on syntax                            /* Trap syntax errors     */
arg    fn ft fm                             /* What is the input file */
'state' fn ft fm                            /* Do we have the file?   */
if   rc Â¬= 0 then                           /* File not OK?           */
exit rc                                     /* Leave exec             */
'execio * diskr' fn ft fm '(fini ste CONF.' /* Lets read the file     */
do   i = 1 to conf.0                        /* Process all variables  */
parse var conf.i name info                  /* Parse the variable     */
info = strip(info)                          /* Get rid of spaces      */
select
when name = ' ' then                        /* Is it a comment line?  */
iterate                                     /* Yes.. Do not process   */
when substr(name,1,1) = '*' then            /* Is it a comment line?  */
iterate                                     /* Yes.. Do not process   */
when info = ' ' then                        /* Is field blank?        */
iterate                                     /* Yes.. Do not process   */
when datatype(name,'S') = 0 then            /* Valid symbol name?     */
exit 8                                      /* No..  exit rc=8        */
when symbol(name) = 'LIT' then              /* New variable?          */
interpret name "= '"info"'"                 /* Yes.. assign its value */
when symbol(name) = 'VAR' then              /* Existing variable?     */
interpret name "=" name "'"info"'"          /* Yes.. add data to it   */
otherwise                                   /* Something is wrong,    */
exit 16                                     /* that we know for sure! */
end
'globalv select' fn 'putp' value('name')    /* Write GLOBALV file     */
end
'globalv init'                              /* Cleanup GLOBALV file   */
exit 0                                      /* and that is it!        */
syntax:                                     /* Interpreting of bad    */
exit 12                                     /* things gives rc=12     */

Aad Weesenaar
Systems Programmer (Germany)
