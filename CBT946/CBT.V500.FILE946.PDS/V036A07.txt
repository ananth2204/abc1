Short synonyms for common functions

It is often very tedious to type some of the most common system
commands, especially those sent to assorted server machines.
These frequently entail long strings of command words, and with
networking support (to send the same commands to remote nodes)
they are even longer.  Our installation has only two nodes, but
even so it is a bother.  To solve this, I have defined for my use a
set of synonyms of up to 4 characters which are mnemonics of
some common command strings.  Obviously, I can use this
method to provide synonyms for non-server commands also, often
reducing the need for the simple 3 or 4 line EXECs which are so
commonly used for standard CP and CMS commands.

All of the synonyms are set up to refer to the same REXX EXEC,
which analyses the synonym used, and performs the correct
command or commands.

In my profile EXEC I have the command 'SYNONYM
SYNOEXEC', which causes CMS to load the list of synonyms
defined in file 'SYNOEXEC SYNONYM'.

Below is a shortened example of the synonym file, with
comments (the comments may be left in the file without affecting
its usability):

@        @TUBES         * the following send smsg to tubes
SYNOEXEC SMT            *     smsg tubes
SYNOEXEC SMTP           *     smsg to tubes on node 'prod'
SYNOEXEC SMTT           *     smsg to tubes on node 'test'
SYNOEXEC SMTB           *     smsg to tubes on 'both' nodes
@        @RSCS          * the following send smsg to rscs
SYNOEXEC SMR            *     smsg rscs
SYNOEXEC SMRP           *     smsg to rscs on node 'prod'
SYNOEXEC SMRT           *     smsg to rscs on node 'test'
SYNOEXEC SMRB           *     smsg to rscs on 'both' nodes
@        @VMBACKUP      * the following send smsg to vmbackup
SYNOEXEC SMB            *     smsg vmbackup
SYNOEXEC SMBR           *     smsg vmbackup rep ...
SYNOEXEC SMBJ           *     smsg vmbackup q req (jobs waiting)
@        @OPERATOR      * the following send requests to programmable
operator
SYNOEXEC OPT            *     m op cmd ... (at node 'test')
SYNOEXEC OPP            *     m op cmd ... (at ndoe 'prod')
SYNOEXEC OPS            *     m op cmd ... (both operators)
@        @OTHER         * a few other command sequences
SYNOEXEC RF             *     reaccess and filelist
SYNOEXEC LF             *     link and filelist
SYNOEXEC SHUTDOWN       *     prevent accidental shutdown

SYNOEXEC EXEC

/* REXX */
trace n
parse upper source . . . . . synonym .   /* what synonym called exec? */
parse value diag(8,'Q USERID') with . . lnode . '15'x /* WHAT NODE ARE
WE?*/
argstr = arg(1)                              /* synonym call had args */
frst3 = substr(synonym,1,3)                  /* 1st 3 characters      */
select
    when      frst3 = 'SMT'                  /* tubes                 */
         then call servcmd 'TUBES'
    when      frst3 = 'SMR'                  /* rscs                  */
         then call servcmd 'RSCS'
    when      frst3 = 'SMB'                  /* vmbackup              */
         then call bkpcmd
    when      find('OPT OPP OPS', synonym) = 0 /*operators are
nicknames*/
         then 'tell' synonym 'CMD' argstr   /*in the userid names file*/
    otherwise call chksyn                    /* assorted other cmds   */
end  /* select */
exit
 /* */
servcmd:                              /* assorted calls to tubes/rscs */
arg servid .                                  /* either TUBES or RSCS */
rcmd = iif(servid='TUBES','SEND','CMD')       /* pass remote cmds     */
nodelst = 'TEST PROD'                         /* TUBES/RSCS nodes     */
synpad = synonym' '                           /* check 4char synonyms */
parse value 'SMTT TEST SMTP PROD SMRT TEST SMRP PROD' with (synpad)
rnode .
select
    when      length(synonym) = 3                    /* local machine */
        then 'cp sm' servid argstr
    when      rnode = ''                            /* certain node  */
         then do
              if        rnode = lnode
                   then 'cp sm' servid argstr
                   else 'cp sm' servid rcmd rnode argstr
              end
    when      synonym = 'SMTB',                      /* both nodes    */
         |    synonym = 'SMRB'
         then do
              'cp sm' servid rcmd iff(lnode='TEST','PROD','TEST') argstr
              'cp sm' servid argstr
              end
    otherwise do
              say 'Undefined' servid 'synonym "'synonym'" requested.'
              exit 8
              end
end  /* select */
return
 /* */
bkpcmd:                                 /* assorted calls to vmbackup */
select
    when        synonym = 'SMB'
         then   'cp sm vmbackup' argstr
    when        synonym = 'SMBR'                             /* reply */
         then   'cp sm vmbackup REPLY' argstr
    when        synonym = 'SMBJ'                             /* query */
         then   'cp sm vmbackup Q REQ'
    otherwise do
                say 'Undefined VMBACKUP synonym "'synonym'" requested.'
                exit 8
                end
end  /* select */
return
 /* */
chksyn:
/* The routines called by the synonyms 'RF' and 'LF' are local execs */
/* which we have for simplifying several common procedures.          */
/*  'RAC' exec accepts a mode letter. The exec reaccesses the disk.  */
/*  'FL' is a simplified entry to 'FILELIST', which (among other     */
/*    things) allows 'FL x' (where 'x' is an accessed mode letter)   */
/*    instead of 'FILEL * * x'.                                      */
/*  'LNK' performs a CP link to the user-cuu pair requested, followed*/
/*    by an access, using a free mode taken from IPF's 'GETFMADR'.   */
/*    Using option 'STACK' allows the calling exec to know the mode  */
/*    used for the access.                                           */
/* the synonym 'shutdown' causes the 'shutdown' command to only      */
/* work if submitted to CP, CMS will simply invoke SYNOEXEC exec.    */
select
    when      synonym = 'RF'                 /* reaccess and filelist*/
         then do
              'RAC' argstr                /* exec to re-access a disk*/
              push 'FL' argstr              /* and then 'filelist' it*/
              end
    when      synonym = 'LF'                     /* link and filelist */
         then do
              'LNK' argstr '( stack'              /* link to the disk */
              if        rc = 0
                   then exit rc
              pull . mode . '/' .
              'FL' mode                          /* filelist the disk */
              say '====> link to' argstr ' is on mode:' mode
              end
    when      synonym = 'SHUTDOWN'     /* prevent accidental shutdown */
         then do
              say 'What, are you crazy??'
              say "you can't shutdown from CMS"
              exit 8
              end
    otherwise do
              say 'Undefined synonym "'synonym'" requested.'
              exit 8
              end
end /* select */
return

The SYNOEXEC exec also uses a very short (1 line) but useful
function called 'IIF()'.

The purpose of this function is to replace the construct:

    if <condition>
        then <value1>
        else <value2>

and is often a great time saver, simplifying many program
situations.

IIF EXEC

/* REXX */
return arg(3-(arg(1)='1'));
/* The logic is as follows:
   if arg(1) = '1'              if      the user's test value was true
      return arg(2)                     then return the first value
      return arg(3)                     else return the second value */
/* arg(1) must be some logical condition, which will be evaluated and
   passed to 'iif' as either '1' or '0'. arg(2) and arg(3) are simply
   the 2 values, one of which will be returned. */

Shimon Lebowitz
VM System Programmer
Israel Police (Israel)	) Israel Police 1989

