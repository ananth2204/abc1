Menu display system

VMENU was written to provide a relatively easy way for a person
with little VM experience to be able to perform certain functions
and/or operator duties.  Its function is to present a menu with
selection numbers and a description for each selection.  When a
selection is made the EXEC, module, CP or CMS command, etc
will be executed.

After each command is executed, the program displays:

	PRESS ENTER TO CONTINUE...

This can be suppressed if desired.

Menus can be nested within menus.

According to the attribute characters used in the VMENU EXEC,
attributes can be embedded in the menu file descriptions.

The program uses 24 lines unless less than that is available, in
which case the program will adjust its screen size.  This was done
specifically to accommodate a 3205 operator console.

In the examples all menus exist in files with a filetype of
DIRECT.  However, there is no restriction as to naming the menu
file.

Included are:

1	The start-up EXEC (VMENU EXEC).

2	The start-up menu referenced by the start-up EXEC
(SAMPLE DIRECT).

3	Two nested menus (GQUERY DIRECT A) and (SMART
DIRECT).

4 	The VMENU program, an XEDIT macro (VMENU XEDIT).

VMENU EXEC

/*                                                 */
"XEDIT SAMPLE DIRECT A (PROF VMENU"
SAMPLE DIRECT
* ALL COMMENTS MUST START WITH AN * AND A SPACE IN CC 1-2
*T   M I S  Functions
*Hhelp
Query System Menu                        -*GQUERY DIRECT *
Operator Function Menu                   -*operl direct *
Real Time Monitor (SMART)                -*smart direct *

GQUERY DIRECT

* ALL COMMENTS MUST START WITH AN * AND A SPACE IN CC 1-2
*T     Query System
*HCMS QUERY
Display Time                                     - CP Query Time
Display Set Parameters                           - CP Query set
Display Terminal Characteristics                 - CP Query terminal
Display Number of Spool Files                    - CP Query files
Display Files in Reader                          - CP Query rdr * all
Display Files in Printer                         - CP Query prt * all
Display Files in Punch                           - CP Query pun * all
Display Screen Settings                          - CP Query screen
Display Other Signed On Users                    - CP Query names
Display Userid                                   - CP Query userid
Display User Statistics                          - CP Query Users
Display User Storage                             - CP Query V Stor
Display System Summary                           - CP Query All

SMART DIRECT

* ALL COMMENTS MUST START WITH AN * AND A SPACE IN CC 1-2
*T  SMART - Real Time Monitor
*Hsysm smart
General display, big picture of system-@VMC SMART DISPLAY
I/O activity by descending activity              -@VMC SMART DISPLAY I/O
Same as 2, but for last collection interval only -@VMC SMART DISPLAY I/O
INT
Issue any SMART command                    - exec smartany

VMENU XEDIT

/**********************************************************************/
/* Executable menu                                                    */
/* Executes as xedit profile for screen handling.  Initiated by       */
/* Xedit xxxxx direct a (prof vmenu.  Provides full scrolling         */
/* capabilities, forward and back.                                    */
/* Scrolling also wraps around.  Modules, et al can be executed here; */
/* and CP, CMS commands as well as execs can be included.             */
/*                                                                    */
/* An entry in the directory command area starting with * must specify*/
/* the fn ft fm of another exec directory - same format.              */
/* Other special characters in the directory - cc 1-2:                */
/* *  - comment (asterisk must be followed by a space)                */
/* *H - Help Command to be used (Default is VMENU HELP, which will    */
/*      reference as a Help file named HELP HELPVMEN).                */
/* *T - Title for Map (Default is Unnamed Menu)                       */
/* * in the command area will execute vmenu on this file name         */
/* @ in the command area will suppress message Press Enter to Continue*/
/**********************************************************************/
trace
$pfk.1 = 3         /* The pf keys that will be set by this exec       */
$pfk.2 = 7
$pfk.3 = 8
$C = "COMMAND"
$C "EXTRACT /FN/FT/FM/LSCREEN/"
scrnsize = lscreen.1                   /* Adjust screen for terminls  */
if scrnsize > 24 then scrnsize = 24    /* with screens < 24 lines     */
inc14 = scrnsize - 10                  /* (specifically operator cons */
inc15 = scrnsize - 9
inc18 = scrnsize - 6                   /* All others will default to  */
nx19 = inc18 + 1
nx20 = inc18 + 2
nx21 = inc18 + 3
nx22 = inc18 + 4
nx23 = inc18 + 5
nx24 = inc18 + 6
$C "SET PF3 Q"                         /* Set the PF keys             */
$C "SET PF7 B"
$C "SET PF8 F"
$fn = fname.1; $ft = ftype.1; $fm = fmode.1;
$file = $fn  $ft $fm
trace
"EXECIO * DISKR" $file "(FINIS "
$in.0 = 0
$titl = ""
$help = ""
do i = 1 to queued()
   parse pull $line
   if substr($line,1,2) = "* " then iterate  /* comments */
   if substr($line,1,2) = "*T" then do       /* title    */
      $titl = substr($line,3,35)
      iterate
   end
   if substr($line,1,2) = "*H" then do       /* heading  */
      $help = substr($line,3,35)
      iterate
   end
   $in.0  =  $in.0  +  1
   ix = $in.0
   $in.ix =  $line
end
if $help = "" then $help = "VMENU HELP"
$C "SET PF1 CMS HELP" $help
do i = 1 to $in.0
   parse  var $in.i $desc.i "-" $exec.i
end
$end = 0
i    = 1
/*emsg = " "    */
"COMMAND SET CTLCHAR % ESCAPE              "    /* Set up attribute */
"COMMAND SET CTLCHAR " PROTECT WHITE HIGH  "    /* characters       */
"COMMAND SET CTLCHAR ! PROTECT BLUE NOHIGH "    /* These can also be*/
"COMMAND SET CTLCHAR ~ PROTECT green NOHIGH"    /* used in the menu,*/
"COMMAND SET CTLCHAR $ PROTECT RED  HIGH   "    /* but must be def'd*/
"COMMAND SET CTLCHAR @ NOPROTECT RED NOHIGH"    /* here first.      */
"COMMAND SET CTLCHAR & PROTECT white rev HIGH"
"COMMAND SET CTLCHAR  PROTECT blue   rev NOHIGH"
Call initmap
 do forever
trace
  $end = i + inc14
  if $end > $in.0 then $end = $in.0
  call clearmap
  ix = 3
  Do J = I TO $end
   call outmap
  End
 read cmdline
 do queued()
  Pull $action
  Select
When $action = "F" then do             /* Forward scroll              */
   i = $end + 1
   if i > $in.0 then i = 1
end
When $action = "B" then do             /* Backward scroll             */
   if i = 1 then do
      i = $in.0 - inc14
      if i < 1 then i = 1
   end
   else do
     i = i - inc15
     if i < 1 then i = 1
   end
end
When $action = "C" then do             /* Enter a CMS command         */
       call doit                       /* BE CAREFUL, an xedit command*/
       say ""                          /* will confuse this profile!! */
       say "Press ENTER to Continue..."
       pull .
       "VMFCLEAR"
end
When $action = "Q" | $action = "X" then do
  "DESBUF"
  $C "COMMAND QUIT"
  return
end
When substr($action,1,8) = "CMS HELP" then do
  $ACTION
end
When $action = "" then do
end
When $action >  0 then do
     m = $action + 0
     $presssw = 1
     if M > $in.0 then
         EMSG 'Unsupported Selection.  PLEASE Make Another Selection.'
     else do
       if substr($exec.m,1,1) = '*' then call submenu
       else do
         $cmd = $exec.m
         if substr($exec.m,1,1) = '@' then do
            $presssw = 0
            $cmd    = substr($exec.m,2,72)
         end
         $cmd
         if $presssw = 1 then do
            say ""
            say "Press ENTER to Continue..."
            pull .
            "VMFCLEAR"
         end
       end
     end
  end
 otherwise eMSG 'Unsupported Selection.  PLEASE Make Another Selection.'
End
 End /* do queued() */
End
doit:
  say "Please enter your Command ... "
  pull $comm
  $comm
return
submenu:
$sub = substr($exec.m,2,25)
"XEDIT" $SUB "(PROF VMENU"
return
initmap:
If $titl = "" then $titl="Unnamed Menu "
 $C "SET CMDLINE top"
 $C "SET tofeof off"
 $C "SET prefix off"
 $C "SET MSGLINE ON" nx23
 $bot = lscreen.1
 $C "SET COLOR CMDLINE RED"
 $C "SET RESERVED 1 NOH
   %&"$titl"%" Your Company Name Goes Here"
 $C "SET RESERVED 2 NOH" /* ==>   command line */
 $C "SET RESERVED 3 NOH"
 $C "SET RESERVED" nx19" NOH %!  "
 $C "SET RESERVED" NX20 "NOH
   %"    Please enter a selection number and press enter.  To return to"
 $C "SET RESERVED" NX21 "NOH
   %"             the previous menu, key an X and press ENTER."
 $C "SET RESERVED" NX22 "NOH %!                       "
 $C "SET RESERVED" NX23 "NOH %!                       "
 $C "SET RESERVED" NX24 "NOH
   %!      PF 1= Help       3= Quit    7= Back   8= Forward %!"
  do ix = (nx24 + 1)  to lscreen.1
   $C "SET RESERVED" ix "NOH"
  end
return
clearmap:
do iy =  4 to inc18
 $C "SET RESERVED" iy "NOH %!           "
end
return
outmap:
  ix = ix + 1
  if substr($exec.j,1,1) = "*" then   /*If a submenu, make it        */
     attr = "%$"                      /*Red or Bright                */
  else                                /*       else                  */
     attr = "%!"                      /*make it blue                 */
 if j < 10 then
 $C "SET RESERVED" ix "NOH %"" j attr||$desc.j
else
$C "SET RESERVED" ix "NOH %""j attr||$desc.j
return

Steve Lovett
MIS Director (USA)	) Xephon 1989

