VM/ESA migration


ENVIRONMENT

We are a VM/VSE shop running on an IBM ES/9121 with
LPAR. Two partitions were defined, one being for a native
VSE production system and the other for development and
testing work under VM/SP. To take full advantage of ESA's
capabilities, we were migrating our operating system from the
SP level to the ESA platform. We upgraded VM to ESA to
allow the future VSE/ESA system to use more than 16MB of
real storage and the System/390 mode supervisor. The primary
storage allocated for VM/ESA was 24MB.


SET-UP

To optimize VSE performance under VM, a V=R guest with
16MB was defined and allocated to the guest VSE. The
remaining 8MB were left for VM and CMS users. As we
needed to set up the VSE environment through the CMS
profile, we had to IPL 190 to load CMS before bringing up
VSE.



VM/ESA MIGRATION

After migration took place, the system's performance was
monitored for a couple of days. We found that the V=R guest
had been over-allocated real storage, as indicated by the
tremendous increase in the overall paging activity, which was
as high as 25 pages per second, while VSE's own paging
stayed low. Therefore, we cut 4MB from the V=R area and
kept the user's storage at 16MB since the V=R user has to have
16MB to IPL the default 190.


PROBLEM

After a lot of regeneration work had been done and the system

re-IPLed, system performance worsened because the VSE
being IPLed could not be mapped into the V=R area because of
insufficient storage. This time the paging rate exceeded 50.


DIFFERENCE BETWEEN VM/SP AND VM/ESA DURING LOG-ON

In VM/SP Release 5, we used the following method to set up
V=R for the VSE guest. After we IPLed 190, the 16MB V=R
guest could issue a DEF STOR command through the
PROFILE EXEC to trim its storage to map into the defined
V=R area before IPLing VSE. This did not work in VM/ESA,
although we tried the approach manually.


PROBLEM IDENTIFICATION

We looked up the CP Diagnosis Reference (LY24-5251-00) to
see what actually happens during the virtual machine log-on
process. It was found that HCPLGNVR will do the V=R
checking during the initialization. One of its tests is to check
whether the V=R area is unavailable because of insufficient
storage, and if that is the case, a V=F log-on will be attempted.
If the V=F log-on fails, it converts the request to V=V. This
was what happened in our case.

We know that a user wanting to IPL the default CMS by device
address must have 16MB of virtual storage. The key point of
our failure was that although we had IPLed the default CMS
nucleus with 16MB virtual, the 12MB V=R area was too small
to hold the VSE virtual machine. Thus it was forced to V=V
and had to contend with others using dynamic pages, and we
suffered a serious performance degradation due to heavy
paging.


SOLUTION

Because the main problem was with the CMS nucleus
placement, that was what we tackled. The default CMS nucleus
layout showed that the module NUCALPHA began at segment
E, proceeding upwards through segment F. This prohibited any
guest smaller than 16MB  IPLing CMS by device address. To
get round this problem we generated a new CMS by putting the
NUCALPHA into a lower segment for users with less than
16MB to IPL from 190. For our system, between 8MB and
12MB are desirable for future tuning. We set the NUCALPHA
to begin at segment 6. The following section details the
procedures for the implementation.


IMPLEMENTATION PROCEDURES

1      Update the user directory with a 390 mini-disk added to MAINT.

2      FORMAT the MAINT 390 and EXEC DDR to dump the
      190 to 390 for a complete set of CMS files for the new
      CMS nucleus generation.

3      Create two texts for the SET LOCATION COUNTER (SLC):

      o      L600000 points to the lower segment of the shared
            CMS nucleus

      o      L800000 points to the high end of the shared CMS nucleus.

      The details of how to create an SLC text are clearly
      documented in (SC24-5526) VM/ESA Installation Manual,
      Release 1, Appendix D-2.

4      Assemble the CMS generation profile, DMSNGP
      ASSEMBLE, on 390 with the following changes in the
      DEFNUC MACRO:

      SYSDISK=390,     /* point to new mini-disk      */
      SAVESYS=NO,      /* don't save CMS              */
      REWRITE=YES,     /* must                        */
      IPLADDR=390,     /* new system disk             */
      VERSION=         /* optional, may be helpful    */
      INSTID=          /* optional, may be helpful    */

5      Update the CMSLOAD EXEC to point to the new
      locations of the shared CMS nucleus:

      o      Comment out the statement after DMSZIT and add a
            new statement as follows:

           &1 &2 &3 DMSZIT
           ******   &1 &2 &3 SLC LE00000
           &1 &2 &3 SLC L600000

      o      Comment out and add the following statements after DMSSIG:

           &1 &2 &3 DMSSIG
           ******   &1 &2 &3 SLC 1000000
           &1 &2 &3 SLC L800000

6      Regenerate the CMS nucleus and save it onto 390 when
      prompted. Make sure you have rearranged the proper
      access order before proceeding with the CMS nucleus
      generation.

7   Check the CMS nucleus map to find any discrepancies that
      there may be.

8      Update the user directory for VSE to link to MAINT 390
      as its own 190.

9      Log-on VSE  as usual and you will see it fits into the V=R area.

REVIEW

After the implementation, we monitored the system
performance for a week and the result was wonderful - the
paging rate dropped to two at peak time, without VSE's paging
increasing.

Joe Chan
Systems Manager
Wing Hang Bank (Hong Kong)
