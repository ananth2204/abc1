 Switch EXEC
Often, especially during the development or revision of CMS EXEC subroutines, it
is necessary to do a variety of renaming tasks so as to be able to substitute in
the new or upgraded version for testing, while still preserving the previous
version, which may be switched back and forth any number of times before the
task is completed.  Since it is necessary to invent a third 'holding' identifier
each time, three renaming commands are required to accomplish this.
I find it useful if I can spend more time creating and less time typing.  For
this reason (as well as the obvious lessened likelihood of mistakes) I have
created 'SWITCH EXEC', which simply switches the contents of two file-ids.
/*                           SWITCH EXEC                           */
/*       Procedure to exchange the contents of two fileID's        */
/*                           Arguments:                            */
/*          fn ft fm   of   One of the two files to flip           */
/*       the second file id is assumed to have the SAME fn         */
/*             and a fTYPE & fMODE as defined below:               */
                           hmode = 'A'
                         htype = 'HOLD'
/*  If such a file is found, this file is used as the 'other' file.*/
/* If it is NOT found, the user is prompted for the second filespec*/
/*  NOTE:  The renaming is done via the use of an interim file     */
/*         of the same filespec as the first except that the       */
/*         fTYPE is temporarily converted to LOWER CASE.           */
/*                        - End of Comments -                      */
parse source . . . . . proc .
arg fn ft fm
if fn = '' then call helper '3 Arguments are REQUIRED!'
else if fm = '' then call helper 'INSUFFICIENT Argument(s):' fn ft'!'
'exec qstatew 'fn ft fm
if rc ¬= 0 then call helper 'NO SUCH file: 'fn ft fm
hname = fn
'exec qstatew 'hname htype hmode
if rc ¬= 0 then
 do
   'clrscrn'
   do 5; say; end;
   say center('First file: 'fn ft fm,79)
   say
   say center('Enter second filespec (fn ft fm) or NULL to EXIT',79)
   pull hname htype hmode .
   if hmode = '' then
    do
      'clrscrn'
      'say 'proc' ABORTED!'
      exit 5
    end
   'exec qstatew 'hname hytpe hmode
   if rc ¬= 0 then call helper 'NO SUCH File: 'hname htype hmode
 end
if fn = hname & ft = htype & fm = hmode then
 call helper 'IDENTICAL FileID's!
'clrscrn'
lower = 'abcdefghijklmnopqrstuvwxyz'
upper = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
nt = translate(ft,lower,upper)
ADDRESS COMMAND' RENAME 'fn ft fm fn nt fm
ADDRESS COMMAND' RENAME 'hname htype hmode fn ft fm
ADDRESS COMMAND' RENAME 'fn nt fm hname htype hmode
exit;
helper;
parse arg sayline
'execio 1 cp (STRING Q SCREEN'
pull . . . . clr hlght
'clrscrn'
if sayline ¬= '' then
 do
    'execio 0 cp (STRING SCREEN VMOUT WHITE NONE'
   say center (sayline,79)
 end
'execio 0 cp (STRING SCREEN VMOUT RED NONE'
say
 say center(proc,79)
say
'execio 0 cp (STRING SCREEN VMOUT YELLOW NONE'
do y = 1 to 100
 if pos('- End of Comments -',sourceline(y)) > 0 then leave
 say center(strip(substr(sourceline(y),3,68)),79)
end
'execio 0 cp (STRING SCREEN VMOUT 'clr hlght
exit 5
Rick Frye
Senior Programmer Analyst
Encyclopaedia Britannica (USA)     ) Rick Frye 1988

















































