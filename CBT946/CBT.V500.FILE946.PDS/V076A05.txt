Improving the operator console interface

Because IBM does not support scrolling back on the
OPERATOR console, we found the following solution:

1      Create a work-machine called PROTOC with a WAKEUP profile.

2      Add to the PROFILE EXEC of the OPERATOR user-id
      the following statement:

      CP SPOOL CONS START CL A TO PROTOC

3      Every time you need to read a group of console messages,
      you can get them, by typing CP CLOSE CONS at the
      OPERATOR console. The messages are then sent to work-
      machine PROTOC. PROTOC sends a message to the
      OPERATOR, when the messages file is received.

4      Execute PROTOC EXEC with the parameter OPERATOR
      and you can browse the OPERATOR LOG. After the
      browse, a special user (MAINT) can print and delete the
      log file.

PROTOC can manage every user-id if the PROFILE is changed
in the same way as for the OPERATOR. We have implemented
it for VTAM, RSCS, and many other users to save paper when
getting information about log files.

We have installed VM Release 5 with HPO, but it should run
on every VM release. You must have installed IPF to get the
WAKEUP module, or you can use the WAITING module from
issue 42 of VM Update.


PROFILE PROTOC

/* PROFILE FOR PROTOC - WORK MACHINE FOR CONSOLE PROTOCOLS
   MUST BE A CLASS G USER - BECAUSE OF CHANGE + QUERY COMMANDS
   3M STORAGE DEFINED FOR XEDIT LARGE PROTOC FILES
   CALLS WAKEUP MODULE (IPF)

   DIRECTORY ENTRY:
             USER PROTOC PASSWORD 3M 3M G
             ACCOUNT 4711/00 PROTOC
             OPTION ECMODE
             IPL CMS PARM AUTOCR
             CONSOLE 01F 3215
             SPOOL 00C 2540 R A
             SPOOL 00D 2540 P A
             SPOOL 00E 1403 A
             LINK MAINT 190 190 RR
             LINK MAINT 19E 19E RR
             MDISK 191 3380 0001 015 VMSRES WR ALL WPROTOC
TRACE R
*/
'SET SMSG ON'
'SET IMSG ON TEXT'
'SET PF12 RETRIEVE'
'SPOOL RDR CL *'
'SET RUN ON'
SAY 'STARTING PROTOCOL MACHINE'
/* MAIN LOOP */
DO FOREVER
  'EXECIO * CP (STRING CH R ALL CL A NOHOLD FORM STANDARD'
  'ERASE' USERID() 'NETLOG A'               /* ERASE NETLOG FILE   */
   'WAKEUP (RDR CONS QUIET NOEXT'           /* CALL WAKEUP MODULE  */
   RR = RC
   SAY 'RETURN CODE OF WAKEUP = ' RR
   SELECT
    WHEN RR = 4   THEN DO                   /* RC=4 RDR FILE ARRIVED */
        'DESBUF'
        'EXECIO * CP (STRING Q R ALL'
         PULL .                             /* QUEUE HEADER          */
         PULL USER NR . CLASS . . . . . KILL LUSER .
         SELECT
           WHEN CLASS = PUN THEN DO
             IF KILL = 'KILL' THEN DO
                            'PURGE RDR ' NR
                            'ERASE' LUSER 'PROTOC A'
                            'CP M ' USER LUSER 'PROTOC HAS BEEN ERASED'
                            END
                            ELSE DO
                                'PURGE RDR' NR
                                'CP M ' USER ' INVALID RDR FILE PURGED'
                            END
           END
           WHEN CLASS = CON THEN DO
                            'ERASE' USER 'TEMP A'
                            'RECEIVE' NR USER 'TEMP A'
                            QUEUE 'SET MSGMODE OFF'
                            QUEUE 'BOT'
                            QUEUE 'GET' USER 'TEMP A'
                            QUEUE 'FILE'
                            'XEDIT' USER 'PROTOC A (NOPROF'
                            'ERASE' USER 'TEMP A'
                            'CP M ' USER 'PROTOCOL FILE IS SAVED'
                            END
           OTHERWISE
           'TRANSFER RDR' NR 'TO' USER
           END
    END
    WHEN RR = 6   THEN LEAVE                /* RC=6 CONSOLE INTERRUPT*/
    WHEN RR = 101 THEN DO                   /* RC=101 NULL RDR FILE  */
        'Q R ALL (STACK'
         PULL .                             /* QUEUE HEADER          */
         PULL USER NR .
         'TRANSFER RDR' NR 'TO MAINT'       /* MAINT GETS NULL RDR-F */
         'CP IPL CMS PARM AUTOCR '          /* RESTART PROTOC MACHINE*/
         END
    OTHERWISE 'CP IPL CMS PARM AUTOCR'      /* RESTART IF OTHER RC   */
 END /* SELECT */
END /* DO FOREVER */
/* FINISH */
SAY 'CONSOLE INTERRUPT'
EXIT


PROTOC EXEC

/* PROCEDURE TO SHOW THE CONSOLE PROTOCOL
   THIS REXX PROCEDURE SHOULD BE ON A PUBLIC DISK
   EVERY USER SHOULD ADD TO THEIR PROFILE EXEC THE FOLLOWING ENTRY:
   'CP SPOOL CONS START CL A TO PROTOC'
TRACE R
*/
ARG USER .                                  /* CHECK PARAMETER       */
IF USER   = '?'      THEN  CALL   HELP
IF USER   = 'HELP'   THEN  CALL   HELP
IF USER   = 'CANCEL' THEN  EXIT
IF USER   = ''       THEN  USER = USERID()
'GETFMADR 200'                              /* LOOK FOR LINK         */
PULL  . FM ADDR
'CP LINK PROTOC 191' ADDR 'RR'              /* ESTABLISH LINK        */
RR = RC                                     /* SAVE RETURN CODE      */
IF RR ¬= 0 THEN DO
                SAY  'ERROR' RR 'OCCURRED DURING LINK TO PROTOC DISK'
                EXIT RR
                END
'ACC' ADDR FM                               /*ACCESS PROTOC MINI-DISK*/
RR = RC                                     /* SAVE RETURN CODE      */
IF RR ¬= 0 THEN DO
                'CP DET ' ADDR
                SAY  'ERROR' RR 'OCCURRED DURING ACCESS OF PROTOC DISK'
                EXIT RR
                END
'STATE ' USER 'PROTOC' FM                   /* LOOK FOR PROTOC FILE */
IF RC ¬= 0 THEN SIGNAL STATERR
BROWSE USER 'PROTOC' FM                     /* SHOW PROTOC FILE     */
'VMFCLEAR'
SAY '*****************************************************************'
SAY '*                     MANAGE PROTOCOL FILE                      *'
SAY '*                                                               *'
SAY '* DO YOU WANT TO DELETE         THE PROTOCOL FILE  ?  ENTER = D *'
SAY '*                                                               *'
SAY '* DO YOU WANT TO PRINT + DELETE THE PROTOCOL FILE  ?  ENTER = P *'
SAY '*                                                               *'
SAY '*                                                               *'
SAY '* ALL OTHER INPUT IS IGNORED AND ENDS PROCEDURE                 *'
SAY '*                                                               *'
SAY '*****************************************************************'
PULL DO
'VMFCLEAR'
IF DO    = ''         THEN SIGNAL FINISH
IF USER ¬= USERID()   THEN CALL   CHECKUS   /* CHECK IF MASTER USER */
IF USER  = 'OPERATOR' THEN SIGNAL CHECKOP   /* CHECK IF OPERATOR    */
IF DO    = 'P'        THEN CALL   PRINTING
IF DO    = 'D'        THEN CALL   DELETE
SIGNAL FINISH
PRINTING:
'PRINT' USER 'PROTOC' FM
CALL DISTCHNG                               /* CALL DIST CHANGE    */
CALL DELETE                                 /* DELETE AFTER PRINT  */
RETURN
DELETE:
'CP SP PUN TO PROTOC'                       /* PUNCH DESTINATION */
'ERASE KILL ' USER ' A'
ZEILE = 'DUMMY ENTRY FOR DELETE FUNCTION'
'EXECIO 1 DISKW KILL ' USER 'A (VAR ZEILE FINIS'/* FN MUST BE KILL  */
'PUNCH KILL ' USER ' A'                         /* PUNCH DELETE JOB */
'ERASE KILL ' USER ' A'                         /* DELETE PUNCH JOB */
'CP SP PUN TO SYSTEM'                           /* RESET PUNCH DEST.*/
SIGNAL FINISH
DISTCHNG:
/* CHANGE DIST FOR LIST-OUTPUT OF OPERATOR PRINT FILE
   PRODUCED FROM MASTER-OPERATOR MAINT OR JOBV1                      */
'EXECIO * CP (STRING QUERY PRT ALL CL A'
DO QUEUED()
 PULL CHECK NR . . . . . . . NAME
 IF CHECK = 'OWNERID' THEN ITERATE          /* QUEUE HEADER */
 IF NAME = 'OPERATOR PROTOC    JOBV1'  THEN
    'CP CH P' NR 'DIST OPERATOR'
 IF NAME = 'OPERATOR PROTOC    MAINT'  THEN
    'CP CH P' NR 'DIST OPERATOR'
END
RETURN
CHECKUS:
/* MAINT IS ALLOWED TO DO EVERYTHING */
/* JOBV1 IS ALLOWED TO MANAGE OPERATOR AND HIMSELF */
IF USERID()  = 'MAINT'     THEN RETURN
IF USERID()  = 'OPERATOR'  THEN SIGNAL CHECKOP
/* USER JOBV1 IS ALLOWED TO PRINT AND DELETE OPERATOR PROTOC FILE */
IF USERID() = 'JOBV1' & USER = 'OPERATOR' THEN RETURN
                                          ELSE SIGNAL CHECKERR
CHECKOP:
/* OPERATOR PROTOC MUST BE PRINTED */
IF DO = 'D'  THEN CALL PRINTING             /* DELETE */
IF DO = 'P'  THEN CALL PRINTING             /* PRINT AND DELETE */
SIGNAL FINISH
CHECKERR:
SAY 'DELETE/PRINT REQUEST DENIED FOR USER' ,
                                        USERID() ' TO PROTOCOL OF ' USER
SIGNAL FINISH
STATERR:
'VMFCLEAR'
SAY
SAY USER 'PROTOC DOES NOT EXIST'
SAY
SIGNAL FINISH
HELP:
'VMFCLEAR'
NAME = LEFT(USERID(),8)
SAY '*****************************************************************'
SAY '*                     SHOW CONSOLE PROTOCOL                     *'
SAY '*                                                               *'
SAY '*             PLEASE ENTER USER-ID   OR TYPE CANCEL!            *'
SAY '*                          ------           ------              *'
SAY '*                                                               *'
SAY '* ENTER WITHOUT DATA SHOWS ' NAME ' PROTOC, IF EXISTS           *'
SAY '*****************************************************************'
PULL USER .
RETURN
FINISH:
'REL' ADDR '(DET'
EXIT

Walter Fuchs
System Programmer (Germany)

