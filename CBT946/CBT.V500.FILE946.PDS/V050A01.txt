Putting EXECs into CMSINST

Since Release 5 of VM it has been possible to put your own
procedures into the CMSINST saved segment.  There are
several advantages to doing this.  First of all you will find that
your procedures run faster (they are already loaded into
storage) and VM has less overhead.  Secondly, procedures that
are in the saved segment do not have to be available to users in
source form - you can finally stop users from copying and
changing your EXECs!

There are a few things you need to know about the saved
segments, otherwise you won't use them even if they are
generated for your procedures.  You can find out if you are
using a shared segment for EXECs by issuing the EXECMAP
command.  This will tell you if any EXECs have been loaded
into memory - either USER, SYSTEM, or SHARED memory.
You can load your own individual procedures at any time using
the EXECLOAD command, but you can't load into the shared
memory.

After we generated the shared segment we found that the
procedures were not being used.  We had no idea why they
were not being used from the shared segment and were about to
call IBM about the problem.  While looking for an answer to
another problem we discovered an important SET command -
SET INSTSEG.  The default value is SET INSTSEG ON S .
That means the shared segment will be searched before the
system searches the S disk.  Our procedures were all located on
a disk that was addressed before the S disk, which meant that
they were pulled directly from the disk rather than the shared
segment.  After changing the setting of INSTSEG so that the
shared segment would be used before the procedure disk, we
found that EXECMAP now showed how many accesses were
being done.  If you find a mistake in your shared segment
procedures, all you have to do is SET the access of the
INSTSEG to the disk mode after your procedure disks, or use
the EXECDROP command.

The following two procedures help to generate the shared
segment.  They are based on VM/XA SP Release 2 but should
be compatible with VM Release 5.  Check your installation
documentation on building the CMSINST and HELP saved
segments.

INSTSEG EXEC

/* INSTSEG EXEC */
'EXEC SETUP'
'EXEC SAMPNSS CMSINST'
'EXEC SAMPNSS HELP'
'SAVESEG CMSINST'
'SAVESEG HELP'
'EXEC SAMPNSS CMSINST'
'EXEC SAMPNSS HELP'
/* Link and ACCess your procedure disk */
address command 'CP LINK userid cuu cuu MR passw'
ret = rc
if ret ¬= 0 then do
   say 'Link error userid cuu -- RC = 'ret
   signal ende
   end
'ACC cuu C'
ret = rc
if ret ¬= 0 then do
   say 'Access error cuu -- RC = 'ret
   signal ende
   end
/* The filename filetype filemode of your list of exec's */
'DCSSGEN INSTLIST EIGEN A CMSINST'
'VMFCLEAR'
say 'Do the following:'
say '1:  DEF STOR 12M'
say '2:  IPL CMS'
say '3:  INSTSEG2'
ende:
exit


INSTSEG2 EXEC

/* instseg2 exec */
'SAVEFD INIT 19D MNT19D HELP'
'SAVEFD SAVE 19D MNT19D HELP'
'Q NSS ALL'
say ''
say 'If you want to continue to work in Maint do:'
say '1:  DEF STOR 16M'
say '2:  IPL CMS'
exit


William K Mongan
Systems Programmer
Basler Versicherung (West Germany)            c William K Mongan 1990


