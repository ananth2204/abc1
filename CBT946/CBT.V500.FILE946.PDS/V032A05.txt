CMS print command with header

In our installation we have two mainframes.  One is running VM
and the other is running native VSE/SP.

Sometimes we choose to print VM print-outs on the VSE printer.
We transfer these print-outs via VTAM/RSCS and
VSE/POWER/PNET.  However, when using this method, all
print-outs coming from CMS reside with no header in the
POWER LST spool and the VSE operator finds it very difficult to
separate them.

In order to solve this problem I wrote a routine called PRINTH
ASSEMBLE, which can be seen as an extension of the CMS
PRINT command.

The routine builds a header out of the VM machine user name,
prints it to the spool, and transfers control to CMS original print
module.

In order to use it do the following:
1   Global MACLIB DMSSP CMSLIB
2   ASM printh
3   LOAD printh
4   GENMOD printh

Use it exactly as you use PRINT command, ie printh file-name
file-mode ....


PRINTH ASSEMBLE
 PRINTH   CSECT
          BALR   12,0
          USING  *,12              ESTABLISH ADDRESSABILITY
          ST     14,RETSAVE        SAVE CMS RETURN ADDRESS
          EJECT
 * MOVE ALL PARMS TO THIS PROGRAM INTO CMSPRINT AREA       *
          LA    2,CMSPRINT         R2 POINTS TO CMSPRINT AREA
 MOVEPARM DS    0H
          LA    1,8(,1)            POINT TO NEXT PARM
          LA    2,8(,2)            POINT TO NEXT SLOT
          MVC   0(8,2),0(1)        MOVE EIGHT BYTES TO SLOT
          CLI   9(1),X'FF'         END OF PARMS..??
          BNE   MOVEPARM           NO..CONTINUE
          EJECT
 * GET THE CMS USER NAME FOR BUILDING THE HEADER          *
 ID       DS    0H
          LA    1,CMSID            ISSUE ID COMMAND INTO STACK
          SVC   202
          DC    AL4(PRT)
          SPACE
          RDTERM LINE              READ THE LINE
          MVC   USER(8),LINE       MOVE USER NAME INTO USER VARIABLE
          SPACE
          PRINTL '1'               SET NEW PAGE SYMBOL
          PRINTL '-'               SET A FEW SPACES
          EJECT
* NOW START TO BUILD THE HEADER LINES ACCORDING THE       *
* USER NAME. EACH LINE IS COMPOSED OF ROWS FROM THE       *
* LETTERS MATRIXES.                                       *
* FOR EACH LETTER OF USER NAME LOOP2 IS DONE. I.E.        *
* LETTER IS FOUND IN TAB TO GIVE A CODE WHICH IN TURN     *
* GIVES THE ADDRESS OF THE LETTER MATRIX. A ROW FROM THE  *
* MATRIX IS MOVED TO THE OUTPUT LINE.                     *
* LOOP1 IS DONE 'NUMBER OF ROWS IN MATRIX' TIMES.         *
         LA    4,0                R4 IS CURRENT ROW NUMBER OF MATRIX
         LA    5,ROWS             R5 IS NUMBER OF ROWS IN A MATRIX
         SPACE
LOOP1    DS    0H
         LA    6,LINE+1           R6 POINTS TO OUTPUT LINE
         LA    7,USER             R7 POINTS TO USER NAME
         LA    8,8                R8 EQUALS NUMBER OF LETTERS (8)
         MVC   LINE(132),BLANKS   CLEAR OUTPUT LINE
         SPACE
LOOP2    DS    0H
         SR    2,2                CLEAR R2 BEFORE TRT INSTRUCTION
         TRT   0(1,7),TAB         TRT CURRENT LETTER OF USER NAME
         SPACE ,                  NOW R2 HOLDS THE CODE OF THE LETTER
         LA    11,ROWS*COLS       R11 IS ANY LETTER MATRIX SIZE
         MR    10,2               MULTIPLY R11 BY R2
         SPACE
         LA    9,FORMS            R9 POINTS TO 'BLANK' MATRIX
         LA    9,0(9,11)          ADVANCE R9 TO MATRIX OF CRNT LETTER
         SPACE
         LA    11,COLS            R11 IS NUMBER OF COLUMNS IN MATRIX
         MR    10,4               MULTIPLY IT BY CURRENT ROW NUMBER
         LA    9,0(9,11)          ADVANCE R9 TO CURRENT ROW IN MATRIX
         SPACE
         MVC   0(COLS,6),0(9)     MOVE CRNT ROW IN MATRIX TO OUT LINE
         LA    6,COLS(,6)         POINT R6 TO NEXT
         SPACE
         LA    7,1(,7)            POINT R7 TO NEXT LETTER OF USER NAM
         BCT   8,LOOP2            DO LOOP2 FOR NEXT LETTER
         SPACE
         PRINTL LINE,132          PRINT THE LINE
         LA    4,1(,4)            INCREASE ROW NUMBER
         BCT   5,LOOP1            DO ALL OVER AGAIN FOR NEXT ROW
         EJECT
* NOW AFTER THE HEADER IS PRINTED, GIVE CONTROL TO THE    *
* CMS PRINT MODULE IN ORDER TO PRINT THE REQUESTED FILE   *
PRT      DS    OH
         LA    1,CMSPRINT
         SVC   202
         DC    AL4(EOJ)           IN CASE OF ERROR..EXIT
         SPACE
         SR    15,15              RC IS ZERO
         SPACE
EOJ      DS    0H
         L     14,RETSAVE         RESTORE RETURN ADDRESS
         BR    14                 RETURN TO CALLER
         EJECT
RETSAVE  DS    F
         SPACE
CMSPRINT DS    0D
         DC    CL8'PRINT'
         DC    10CL8'    '
         SPACE
CMSID    DS    0D
         DC    CL8'ID'
         DC    CL8'('
         DC    CL8'STACK'
         DC    8X'FF'
         SPACE
LINE     DC    132CL1' '
BLANKS   DC    132CL1' '
         SPACE
USER     DC    CL8' '
         SPACE
TAB      DC    256AL1(0)
         ORG   TAB+C'A'
         DC    X'010203040506070809'
         ORG   TAB+C'J'
         DC    X'0A0B0C0D0E0F101112'
         ORG   TAB+C'S'
         DC    X'131415161718191A'
         ORG   TAB+C'0'
         DC    X'1B1C1D1E1F202122232425'
         ORG
         SPACE
ROWS     EQU   6
COLS     EQU   10
         SPACE
FORMS    DC    CL10'        '
         DC    CL10'        '
         DC    CL10'        '
         DC    CL10'        '
         DC    CL10'        '
         DC    CL10'        '
         SPACE
         DC    CL10' AAAAAA '
         DC    CL10'AA    AA'
         DC    CL10'AA    AA'
         DC    CL10'AAAAAAAA'
         DC    CL10'AA    AA'
         DC    CL10'AA    AA'
         SPACE

ÝEditor's note: the code is repeated to include all the letters from B
to Z, and the digits 0 to 8.  The code is not reproduced here, but
is simple to recreate.¨

         SPACE
         DC    CL10' 99999  '
         DC    CL10'99   99 '
         DC    CL10'99   99 '
         DC    CL10' 999999 '
         DC    CL10'     99 '
         DC    CL10'  9999  '
         END


Asher Shoshan
Systems Programmer
Migdal Insurance Company (Israel)  ) Xephon 1989

