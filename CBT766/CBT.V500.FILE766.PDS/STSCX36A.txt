 PUNCH ' SETOPT PARM(AMODE=31,RMODE=ANY,AC=1,REUS=REFR) '
STSCX36A TITLE 'EXIT 36 (PRE SAF CALL) - (MODULE COMMENT BLOCK)'
* **PROPRIETARY STATEMENT**********************************************
*                                                                     *
*   LICENSED MATERIALS-PROPERTY OF IBM                                *
*   THIS MODULE IS "RESTRICTED MATERIALS OF IBM"                      *
*   5695-047 (C) COPYRIGHT IBM CORP 1990                              *
*   SEE COPYRIGHT INSTRUCTIONS                                        *
*                                                                     *
*   STATUS = HJE4420                                                  *
*                                                                     *
* **END-OF-PROPRIETARY-STATEMENT***************************************
***********************************************************************
*                                                                     *
* MODULE NAME = HASX36A (HASX36A CSECT)                               *
*                                                                     *
* DESCRIPTIVE NAME = Sample Pre-SAF call user exits                   *
*                                                                     *
* FUNCTION =                                                          *
*                                                                     *
*         PROPRMT  - Cause userid propagation for RJE jobs            *
*                                                                     *
* NOTES =                                                             *
*                                                                     *
*    DEPENDENCIES = NONE                                              *
*                                                                     *
*    RESTRICTIONS = NONE                                              *
*                                                                     *
*    ATTRIBUTES = JES2 REENTRANT, RMODE 24, AMODE 31                  *
*                                                                     *
* ENTRY POINTS =                                                      *
*                                                                     *
*         SYSLOG   - Allow all TSO users to view SYSLOG               *
*                                                                     *
*         NOCREDEL - Bypass SAF calls for data set create and deletes *
*                                                                     *
*         PROPRMT  - Cause userid propagation for RJE jobs            *
*                                                                     *
* MACROS =                                                            *
*                                                                     *
*         JES2 - $ENTRY, $MODEND, $MODULE, $RETURN, $SAVE             *
*                                                                     *
* CHANGE ACTIVITY:                                                    *
* SGM -   ALTERED THE RACROUTE VERIFY CALLS TO USE $$DOUBLE   DECEMBER*
*         AS THE  LOCATION TO SAVE THE ACEE POINTER, INSTEAD    12TH  *
*         OF THE TOP OF THE XPL (R8)                           2006   *
*                                                                     *
* $420P306=PTM      HJE4420 910118 R_W1: Sample Exit Prolog Problems  *
*                                                                     *
* A000000-999999    CREATED FOR JES2 4.1.0                         @410
***********************************************************************
         TITLE 'SAMPLE EXIT 36 (PRE SAF CALL) -- PROLOG ($HASPGBL)'
         COPY  $HASPGBL
         TITLE 'SAMPLE EXIT 36 (PRE SAF CALL) -- PROLOG ($MODULE)'
STSCX36A $MODULE ENVIRON=USER,                                         C
               TITLE='PROLOG ($MODULE)',                               C
               RMODE=ANY,                                              C
               SAFP,               SAF ICHSAFP - parm list mapping     C
               TOKEN,              SAF ICHRUTKN - TOKEN mapping        C
               $CADDR,             Common storage address list         C
               $DTE,               Daughter task element               C
               $ERA,               Erorr recovery area                 C
               $HASPEQU,           General EQUATES                     C
               $HCCT,              Common storage control table        C
               $HCT,               Private storage control table       C
               $HFAME,             HASP file allocation map element    C
               $JCT,               jes2 job control block              C
               $JCTX,              JES2 JOB CONTROL BLOCK              C
               $MIT,               Module information table            C
               $PADDR,             Private storage address list        C
               $PARMLST,           Parameter list values/equates       C
               $PCE,               Processor control element           C
               $PSV,               Processor save area                 C
               $SAFINFO,           saf control block                   C
               $SCAT,              SYSOUT class attribute table        C
               $TQE,               timer queue element                 C
               $XECB,              Extended ECB                        C
               $WAVE,              Work access verification element    C
               $XIT,               Exit information table              C
               ($XPL,GEN)          Exit parameter list
         TITLE 'CAUSE USERID PROPAGATION FOR RJE JOBS -- (ROUTINE PROPRC
               MT)'
***********************************************************************
*                                                                     *
*        PROPRMT - Cause the userid of RJE to propagate to its jobs.  *
*                                                                     *
* FUNCTION :                                                          *
*                                                                     *
*        This routine will allow installations to have jobs submitted *
*        from remote work stations act as if the jobs had been        *
*        submitted from logged on TSO user sessions.  This will only  *
*        work if the RJE signon was processed via RACF.  The session  *
*        type on the RACROUTE REQUEST=VERIFYX call will be changed    *
*        from RJEBATCH to INTBATCH.  This will indicate to RACF that  *
*        the USERID of the submittor should be propagated to the job  *
*        if there is no USER= parameter coded on the job card.  (The  *
*        USERID is not propagated for RJEBATCH session types.)        *
*        For RJEs, the USERID is the work station name.               *
*                                                                     *
*        This will cause the audit records to look funny since jobs   *
*        will be accepted into the system that otherwise would have   *
*        failed.                                                      *
*                                                                     *
*        JESINPUT class profiles will have to be changed to           *
*        accomodate port of entrys (POEs) of the form Rn.RDm.         *
*        Note: For remotes numbered from 1000-9999, the form          *
*              is RnnnnRDm (no inner period).                         *
*                                                                     *
* LINKAGE :                                                           *
*                                                                     *
*        This routine is entered via a BASR R14,R15 from the USERSUB  *
*        routine in the HASCSIRQ CSECT of the HASPSSSM load module.   *
*        Control is returned via $RETURN.                             *
*                                                                     *
* OPERATION :                                                         *
*                                                                     *
*        LOADMOD(HASX36A) STORAGE=CSA                          @420P306
*        EXIT(36)  ROUTINES=PROPRMT,STATUS=ENABLED             @420P306
*                                                                     *
* ENVIRONMENT :                                                       *
*                                                                     *
*        Subtask                                                      *
*                                                                     *
* RECOVERY :                                                          *
*                                                                     *
*        Default recovery provided by general purpose subtask.        *
*                                                                     *
* REGISTER USAGE (ENTRY/EXIT) :                                       *
*                                                                     *
*    REG       VALUE ON ENTRY             VALUE ON EXIT               *
*                                                                     *
*    R0        N/A                        Unchanged                   *
*    R1        Address of parm list       Unchanged                   *
*    R2-R10    N/A                        Unchanged                   *
*    R11       HCCT address               Unchanged                   *
*    R12       N/A                        Unchanged                   *
*    R13       Save area                  Unchanged                   *
*    R14       Return address             Unchanged                   *
*    R15       Routine address            Return code                 *
*                                                                     *
* PARAMETER LIST :                                                    *
*                                                                     *
*        See $XPL expansion                                           *
*                                                                     *
* REGISTER USAGE (INTERNAL) :                                         *
*                                                                     *
*    REG       VALUE                                                  *
*                                                                     *
*    R0        N/A                                                    *
*    R1        XPL (parameter list addr)                              *
*    R2-R3     N/A                                                    *
*    R4        SAF and RACINIT parm list address                      *
*    R5-R10    N/A                                                    *
*    R11       HCCT address                                           *
*    R12       Routine base address                                   *
*    R13       Available save area                                    *
*    R14       Linkage                                                *
*    R15       Return code                                            *
*                                                                     *
* DATA AREA USAGE (INTERNAL) :                                        *
*                                                                     *
*    NAME          VALUE                                              *
*                                                                     *
*    $SEAINIT      The FUNCODE for a VERIFYX                          *
*                                                                     *
*    INITSESN      The SESSION value in RACINIT(VERIFYX) parm list    *
*    SAFPRACP      Offset of the specific RACROUTE request type parms *
*    TOKRBCH       The equate for SESSION=RJEBATCH                    *
*                                                                     *
*    XPLIND        Exit parameter list indicator byte - FUNCODE value *
*    X036PARM      Address of the RACROUTE parameter list             *
*                                                                     *
* RETURN CODES (R15 ON EXIT) :                                        *
*                                                                     *
*         0 - ALWAYS RETURNED                                         *
*                                                                     *
* OTHER CONSIDERATIONS :                                              *
*                                                                     *
*         N/A                                                         *
*                                                                     *
***********************************************************************
         TITLE 'CAUSE USERID PROPAGATION FOR RJE JOBS -- PROPRMT'
         USING XPL,R8              XPL  ADDRESSABILITY
         USING HCCT,R11            HCCT addressability
         SPACE 1
EXIT36A  $ENTRY BASE=R12
         SPACE 1
        $SAVE TRACE=YES,NAME=PROPRMT  Save callers registers
         SPACE 1
         LR    R12,R15             Set local base
         EJECT
***********************************************************************
*                                                                     *
*        Check for VERIFYX SAF call with session type RJEBATCH.       *
*        Change all RJEBATCH session types to INTBATCH.               *
*                                                                     *
***********************************************************************
         SPACE 1
         LR    R8,R1               SAVE REGISTER 1
         CLI   XPLIND,$SEAINIT     WAS THE CALL FOR VERIFYX?
         BNE   TRYREST             NO, THEN NOT INTERESTED
         $GETMAIN RC,LV=$$LGTH,BNDRY=DBLWD,LOC=BELOW
         LTR   R15,R15
         BZ    $$CONT0
         DC    X'0000'
$$CONT0  EQU   *
         SPACE 1
         LR    R9,R1               PUT GETMAIN ADDR INTO R9
         USING $$DMYARA,R9         TELL SYTEM TO USE R9 FOR ADDR
         MVC   RACF_INIT(RACFLTHI),RACFINIT  MOVE IN LIST FORMAT
         MVI   BLANK_AREA,X'40'      MOVE IN BLANK
         MVC   BLANK_AREA+1($$SPACES-1),BLANK_AREA
         MVC   R15AREA,=F'0'       SET R15AREA TO BINARY ZEROES
         MVI   THREE_DIGITSW,0     SET TO BINARY ZERO AT START
         ICM   R4,B'1111',X036RCBA GET RELATED CONTROL BLOCK (SAFINFO)
         CLC   =C'SFI',0(R4)       is it sfi
         BE    $$CONT              YES GO ON
         DC    X'0000'             OTHERWISE DUMP
$$CONT   EQU   *
         USING SAFINFO,R4          USE R4 AS BASE
         ICM   R5,B'1111',SFIJCT   GET ADDR OF JCT
         USING JCT,R5              USE R 5 AS JCT
         CLC   =C'JCT',JCTID       IS IT JCT
         BE    $$CONT1             YES GO ON
         DC    X'0000'             OTHERWISE DUMP
$$CONT1  EQU   *
         SR    R7,R7               SET R7 TO ZEROES
         CLC   =C'TZZZ',JCTJNAME   CHECK FOR SPECIAL JOBNAME
         BNE   NOT_A_TEST         IF NOT JUST CONTINUE AS NORMAL
         CLC   =C'N016',JCTJNAME+4  TEST FOR BOGUS NODE
         BNE   CHECK_BOGUS_REMOTE  IF NOT CHECK FOR REMOTE TESTER
         ICM   R7,3,=H'16'          STUFF IN INVALID NODE
         B     NODE_TESTER         GO VALIDATE NODE
CHECK_BOGUS_REMOTE EQU *           COME HERE TO TEST REMOTE
         CLC   =C'R301',JCTJNAME+4  TEST FOR 3 DIGIT ONE
         BNE   TEST_FOR_2DIGIT
         ICM   R7,3,=H'301'        PUT IN 301
         B     REMOTE_TESTER
TEST_FOR_2DIGIT EQU *              TEST FOR 2 DIGIT
         CLC   =C'R020',JCTJNAME+4  IS IT 2 DIGIT GUY
         BNE   NOT_A_TEST          PROCESS AS NORMAL JOB
         ICM   R7,3,=H'20'         STUFF 20 INTO R7
         B     REMOTE_TESTER
NOT_A_TEST EQU *                   COME HERE -- NORMAL PROCESS
         ICM   R7,3,JCTRRMT        TEST FOR REMOTE ID
         BZ    CHECK_NODES         IF 0 CHECK THE NODES FIELD
REMOTE_TESTER EQU *                FORCE HERE FOR REMOTE TESTING
         MVC   $$RMTROT,=C'RMT$'   MOVE IN STATIC PORTION USERID
         MVC   $$RMTGNM,=C'RMT'    MOVE IN STATIC PORTION OF GRP ID
         B     CONVERT             OTHERWISE GO CONVERT
CHECK_NODES    EQU *               COME HER TO TEST NODE-IDS
         ICM   R7,3,JCTRNODE       INSERT 2 BYTES OF NODE ID
         BZ    EXIT36AD            IF VL = 0 EXIT PROGRAM
         CLM   R7,B'0011',=H'13'   IS IT ORLANDO AND VMFLO7
         BE    SET_NODE            YES GO CONVERT
         CLM   R7,B'0011',=H'14'   IS IT 9221 EITHER PLACE
         BE    SET_NODE            YES GO CONVERT
         CLM   R7,B'0011',=H'15'   IS IT ATLANTA AND 9370
         BE    SET_NODE            YES GO CONVERT
*  CODE ADDED TO SUPPORT RSCSGAA8 AND RSCSFLO7 IN ATLANTA.
         CLM   R7,B'0011',=H'9'    IS IT ATLANTA AND RSCSGAA8
         BE    SET_NODE            YES GO CONVERT
         CLM   R7,B'0011',=H'20'   IS IT ATLANTA AND RSCSFLO7
         BE    SET_NODE            YES GO CONVERT
         B     EXIT36AD            ANYBODY ELSE NO PROPAGATION
NODE_TESTER  EQU  *                COME HERE TO TEST NODES
SET_NODE EQU   *                   COME TO SET UP NODE NAMES
         MVC   $$RMTROT,=C'NJE$'   MOVE IN STATIC PORTION USERID
         MVC   $$RMTGNM,=C'NJE'    MOVE IN STATIC PORTION OF GRP ID
CONVERT  EQU   *                   COME HERE IF 9370 OR 9221
         CVD   R7,$$DOUBLE         CONVERT REMOTE # TO PACKED
         UNPK  $$EXTNAL,$$DOUBLE   CONVERT TO EXTERNAL DECIMAL
         OI    $$EXTNAL+2,X'F0'    GET RID OF SIGN
         CLI   $$EXTNAL,X'F0'      Q--IS THE HIGH NUMBER ZERO
         BE    TWO_DIGIT           A--YES RMT/NODE 00-99
         OI    THREE_DIGITSW,1     TURN ON THREE DIGIT SWITCH
         MVC   $$RMTNNN,$$EXTNAL      MOVE 3 DIGITS INTO NAME
         MVC   $$RMTGN3,$$RMTNNN      MOVE THREE TO GROUP ID
         MVI   $$RMTUSR_LENGTH,7   MAKE LENGTH A LITTLE BIGGER
         MVI   $$RMTGRP_LENGTH,6   SAME HERE
         B     $$SETUP_RACROUTE    AND GO TO RACF CALL
TWO_DIGIT EQU  *                   COME HERE ON 00-99
         MVC   $$RMTNN,$$EXTNAL+1  MOVE TO USERID FIELD
         MVC   $$RMTGNO,$$RMTNN    MOVE TO GROUP NUMBER FIELD
         MVI   $$RMTUSR_LENGTH,6   PUT LENGTH INTO FLD
         MVI   $$RMTGRP_LENGTH,5   PUT GROUP LENGTH INTO FLD
$$SETUP_RACROUTE EQU *             COME HERE FROM 100-999
         MVI   LOG_AREA_LGTH,LOG_DATA   STORE LENGTH IN 1 BY
         MVC   LOGUSER,$$RMTROT    MOVE RMT GROUP AND USER ID
         MVC   LOGGROUP,$$RMTGNM   MOVE RMT GROUP AND USER ID
         LA    R6,LOG_AREA_LGTH    STORE INTO R6
         LA    R2,$$RMTUSR_LENGTH  LOAD LENGTH + USER ID ADDR
         LA    R3,$$RMTGRP_LENGTH  LOAD LENGTH + GROUP ID ADDR
         LA    R10,RACF_INIT       LOAD ADDR OF LIST RACROUTE
*        RACROUTE REQUEST=VERIFY,ACEE=(R8),GROUP=(R3),PASSCHK=NO,
         RACROUTE REQUEST=VERIFY,ACEE=$$DOUBLE,GROUP=(R3),             X
               RELEASE=1.9,ENVIR=CREATE,USERID=(R2),LOG=ALL,           X
               WORKA=$$WRKARA,MF=(E,(R10)),LOGSTR=(R6),PASSCHK=NO
         LTR   R15,R15             TEST FOR ZEROES
         BZ    VALID_NODE          IF ZERO RACF KNOWS HIM
         MVC   X036RETC,=F'8'      SET RETRUN CODE 8
         MVC   X036RSNC,=F'14'     SET REASON CODE 14
         OI    XPLRESP,X036NORC   TURN ON OVERRIDE BIT
         B     EXIT36AD            ANYBODY ELSE NO PROPAGATION
         DC    X'0000'             OTHERWISE DUMP
VALID_NODE EQU *                   USERID EXISTS
         MVC   RACF_INIT(RACFLTHI),RACFINIT  MOVE IN LIST FORMAT
*        RACROUTE REQUEST=VERIFY,ACEE=(R8),RELEASE=1.9,ENVIR=DELETE,
         RACROUTE REQUEST=VERIFY,ACEE=$$DOUBLE,                        X
               WORKA=$$WRKARA,MF=(E,(R10)),ENVIR=DELETE,RELEASE=1.9
         LTR   R15,R15             TEST FOR GOOD DELETE
         BZ    RACF_OK             ABLE TO DELETE ACEE OK
         DC    X'0001'             SHOULD NOT GET HERE
RACF_OK  EQU   *                   COME HERE ON GOOD DELETE
         OI    JCTFLAG1,JCT5CKPT   REWRITE THIS JCT           RF-950313
         OI    JCTFLAG2,JCT2AVDP+JCT2AVD  VALIDATION FLAG
         TM    THREE_DIGITSW,1     IS IT 2 OR 3 POS NUMBER
         BZ    JUST_TWO            IF ZERO RMT/NODE =00/99
         MVI   SFIUIDL,7           MOVE LENGTH OF USERID
         MVI   SFISUIDL,7          MOVE LENGTH OF USERID
         MVI   SFIGRPL,6           MOVE LENGTH OF GROUP ID
         MVI   SFISGRPL,6          MOVE LENGTH OF GROUP ID
         MVC   SFIUID(L'NAME_ULENGTH7),$$RMTROT    MOVE IN USERID
         MVC   SFISUID(L'NAME_ULENGTH7),$$RMTROT   MOVE IN USERID
         MVC   SFIGRP(L'NAME_GLENGTH6),$$RMTGNM    MOVE IN GROUP NAME
         MVC   SFISGRP(L'NAME_GLENGTH6),$$RMTGNM   MOVE IN GROUP NAME
         B     RACF_OVERRIDE
JUST_TWO EQU   *                   COME HERE 00/99
         MVI   SFIUIDL,6           MOVE LENGTH OF USERID
         MVI   SFISUIDL,6          MOVE LENGTH OF USERID
         MVI   SFIGRPL,5           MOVE LENGTH OF GROUP ID
         MVI   SFISGRPL,5          MOVE LENGTH OF GROUP ID
         MVC   SFIUID(L'NAME_ULENGTH),$$RMTROT     MOVE IN USERID
         MVC   SFISUID(L'NAME_ULENGTH),$$RMTROT    MOVE IN USERID
         MVC   SFIGRP(L'NAME_GLENGTH),$$RMTGNM     MOVE IN GROUP NAME
         MVC   SFISGRP(L'NAME_GLENGTH),$$RMTGNM    MOVE IN GROUP NAME
RACF_OVERRIDE  EQU *
         OI    SFIFLAG1,SFI1SREQ+SFI1NORM                rf-950314
         L     R6,X036PARM
         USING SAFP,R6
         LR    R8,R6
         A     R8,SAFPRACP
         RACROUTE REQUEST=VERIFYX,PASSCHK=NO,MF=(M,(R6)),RELEASE=1.9,  x
               SESSION=INTBATCH
         B     EXIT36AD
         TITLE 'END OF PROPRMT ROUTINE -- RETURN TO CALLER'
***********************************************************************
*                                                                     *
*        Always return to the caller with a zero return code so that  *
*        any other exits will get control.  There will be no changes  *
*        in the condition byte so that the SAF call can be made or    *
*        not be made as decided by other exits.                       *
*                                                                     *
***********************************************************************
         SPACE 1
EXIT36AD EQU  *
         $FREMAIN RU,LV=$$LGTH,A=(R9)
TRYREST  SLR    R15,R15            Indicate to take other exits
        $RETURN RC=(R15)           Restore callers registers and return
         SPACE 1
         LTORG
RACFINIT RACROUTE REQUEST=VERIFY,RELEASE=1.9,MF=L,PASSCHK=NO
RACFLTHI EQU *-RACFINIT    sets racflthi to length of racroute
$$DMYARA DSECT
$$WRKARA DS    CL512              WORKAREA FOR RACROUTE
RACF_INIT ORG *+RACFLTHI LEAVE ENOUGH ROOM FOR LIST VERSION
BLANK_AREA DS 0C
$$DOUBLE DC    D'0'               CONVERSION FIELD FOR BINARY
$$RMTUSR_LENGTH DC X'0'           LENGTH OF USERID
NAME_ULENGTH  DS 0CL6           GET LENGTH OF USER NAME
NAME_ULENGTH7 DS 0CL7           GET LENGTH OF USER NAME
$$RMTROT DC    CL4'RMT$'          STATIC PORTION OF USERID
$$RMTNN  DC    CL2'0'             DYNAMIC PORTION OF USERID
         ORG   $$RMTNN            SET LOCATION COUNTER BACK
$$RMTNNN DC    CL3'0'             3 DIGIT REMOTE NUMBER
$$RMTGRP_LENGTH DC X'0'           LENGTH OF GROUPID
NAME_GLENGTH  DS 0CL5           GET LENGTH OF GROUP NAME
NAME_GLENGTH6 DS 0CL6           GET LENGTH OF GROUP NAME
$$RMTGNM DC    CL3'RMT'           STATIC PORTION OF GROUP NAME
$$RMTGNO DC    CL2'0'             DYNAMIC PORTION OF GROUP NAME
         ORG   $$RMTGNO           SET LOCATION COUNTER BACK
$$RMTGN3 DC    CL3'0'             DYNAMIC PORTION OF GROUP NAME
$$EXTNAL DC    CL3'0'             UNPACKED FORMAT OF REMOTE #
R15AREA  DC    F'0'               HOLD AREA FOR R15 IF NEEDED
THREE_DIGITSW  DC X'0'            SET TO BINARY ZERO
$$SPACES EQU   *-BLANK_AREA       LENGTH OF AREA TO SET TO BLANKS
LOG_AREA_LGTH DC X'0'             1 BYTE LENGTH FIELD
LOGUSER  DC   CL7' '              MAX LGTH OF FIELD
LOGGROUP DC   CL6' '              MAX LGTH OF IELD
LOG_DATA EQU  *-LOG_AREA_LGTH     LENGTH OF LOGGED DATA
$$LGTH   EQU   *-$$DMYARA         LENGTH OF GETMAIN AREA
         CSECT
         DROP  ,
         TITLE 'SAMPLE USER EXIT 36 ROUTINES -- END ($MODEND)'
        $MODEND ,
APARNUM  DC    CL8'00000000'       APAR NUMBER
         END   ,                   END OF STSCX36A
