{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011544000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 293930, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 18, "INMDSNAM": "CBT.V500.FILE239.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 293930, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 293930, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE239.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x07\\x07'", "DS1TRBAL": "b'\\x91\\xb2'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\xab\\x00\\t\\x01\\xac\\x00\\x01\\x00\\x08'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04G\\x00\\x00\\x01\\x06\\x03?\\x01\\x06\\x03?\\tF\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf1@@@'", "ispf": {"version": "04.71", "flags": 0, "createdate": "2006-02-02T00:00:00", "modifydate": "2006-02-02T09:46:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-471"}, "text": "REGULAR CBT TAPE - VERSION 471    FILE:  239\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT471.FILE239\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 74 MEMBERS COUNTED; CUMULATIVE SIZE IS 2,506 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   02/02/06    09:46:15    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE238": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04G\\x00\\x00\\x01\\x06\\x03?\\x01\\x06\\x03?\\tE\\x00#\\x00#\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf1@@@'", "ispf": {"version": "04.71", "flags": 0, "createdate": "2006-02-02T00:00:00", "modifydate": "2006-02-02T09:45:00", "lines": 35, "newlines": 35, "modlines": 0, "user": "CBT-471"}, "text": "//***FILE 238 is from Valentin Chernyak and contains REASM, which   *   FILE 238\n//*           is a Super Disassembler that runs interactively       *   FILE 238\n//*           under ISPF.  This file contains Load Modules for      *   FILE 238\n//*           REASM.                                                *   FILE 238\n//*                                                                 *   FILE 238\n//*           Current Release:  4.0                                 *   FILE 238\n//*                                                                 *   FILE 238\n//*        email:   volic@kspus.org                                 *   FILE 238\n//*                 valentin.chernyak@multex.com                    *   FILE 238\n//*                                                                 *   FILE 238\n//*           THIS PROGRAM IS WRITTEN IN PL/I OPTIMIZER.  YOU NEED  *   FILE 238\n//*           TO HAVE THE PL/I RELEASE 2.3.0 TRANSIENT LIBRARY TO   *   FILE 238\n//*           RUN THESE LOAD MODULES.  IT MAY IN THE FUTURE BE      *   FILE 238\n//*           POSSIBLE TO REMEDY THIS SOMEWHAT, BUT THIS IS THE     *   FILE 238\n//*           CASE AT THE CURRENT TIME.                             *   FILE 238\n//*                                                                 *   FILE 238\n//*           REASM IS AN ISPF APPLICATION WHICH DISPLAYS YOUR      *   FILE 238\n//*           CSECT IN HEX, AND THEN ALLOWS YOU TO DECODE PART OF   *   FILE 238\n//*           IT AS INSTRUCTIONS, REALIGN THE DISASSEMBLY, TREAT    *   FILE 238\n//*           PARTS OF THE CODE AS CONSTANTS, ETC., ALL OF THAT     *   FILE 238\n//*           USING ISPF-TYPE LINE COMMANDS AND PRIMARY COMMANDS.   *   FILE 238\n//*                                                                 *   FILE 238\n//*           YOU CAN INTERACTIVELY MOLD THE DISASSEMBLED SOURCE    *   FILE 238\n//*           AS MUCH AS YOU WANT TO.  YOU DON'T HAVE TO MAKE       *   FILE 238\n//*           MULTIPLE BATCH PASSES.  YOU DO IT ALL INTERACTIVELY.  *   FILE 238\n//*           THERE IS A COMPLETE SET OF ISPF CONTEXTUAL HELP       *   FILE 238\n//*           INCLUDED IN THIS PACKAGE.                             *   FILE 238\n//*                                                                 *   FILE 238\n//*           THIS DISASSEMBLER ALSO HAS A FACILITY TO DYNAMICALLY  *   FILE 238\n//*           FIT LABELS FROM DSECTS IN MACROS.  THESE LABELS CAN   *   FILE 238\n//*           GO ANYWHERE IN THE SOURCE YOU SAY.  THE MACROS HAVE   *   FILE 238\n//*           TO BE PRE-DIGESTED USING VALENTIN'S SPECIAL UTILITY   *   FILE 238\n//*           THAT IS INCLUDED IN THIS FILE, WHICH IS CALLED        *   FILE 238\n//*           \"PRCBGEN\".                                            *   FILE 238\n//*                                                                 *   FILE 238\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE239": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04G\\x00\\x00\\x01\\x06\\x03?\\x01\\x06\\x03?\\tD\\x00\\n\\x00\\n\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf1@@@'", "ispf": {"version": "04.71", "flags": 0, "createdate": "2006-02-02T00:00:00", "modifydate": "2006-02-02T09:44:00", "lines": 10, "newlines": 10, "modlines": 0, "user": "CBT-471"}, "text": "//***FILE 239 is from Valentin Chernyak and contains REASM, which   *   FILE 239\n//*           is a Super Disassembler that runs interactively       *   FILE 239\n//*           under ISPF.  This file contains ISPF panels for       *   FILE 239\n//*           REASM.                                                *   FILE 239\n//*                                                                 *   FILE 239\n//*           Current Release:  4.0                                 *   FILE 239\n//*                                                                 *   FILE 239\n//*        email:   volic@kspus.org                                 *   FILE 239\n//*                 valentin.chernyak@multex.com                    *   FILE 239\n//*                                                                 *   FILE 239\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ISR@PRIM": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x02\\x00\\x01\\x00\\x924\\x1f\\x00\\x94'\\x0f\\x172\\x00l\\x00l\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@\"", "ispf": {"version": "01.02", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1994-09-27T17:32:01", "lines": 108, "newlines": 108, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       @   TYPE(OUTPUT) INTENS(HIGH)\n)BODY\n%------------------@TITLE                                %----------------------\n%OPTION  ===>_ZCMD                                                             +\n%                                                           +USERID   - &ZUSER\n%   0 +ISPF PARMS  - Specify terminal and user parameters   +TIME     - &ZTIME\n% 1/B +BROWSE      - Display source data or output listings +TERMINAL - &ZTERM\n% 2/E +EDIT        - Create or change source data           +PF KEYS  - &ZKEYS\n%   3 +UTILITIES   - Perform utility functions\n%   4 +FOREGROUND  - Invoke language processors in foreground\n% PDS +PDS 8.2     - World famous PDS command\n%   6 +COMMAND     - Enter TSO Command, CLIST, or REXX exec\n%   7 +DIALOG TEST - Perform dialog testing\n%   9 +IBM PRODUCTS- Additional IBM program development products\n%   C +CHANGES     - Display summary of changes for this release\n%   G +IEBGENER    - Copy MVS dataset(s) to your VM reader\n%   S +SDSF        - System Display and Search Facility\n%   T +TUTORIAL    - Display information about ISPF/PDF\n%   R +MVS REASM   - INVOKE MVS REASM 2.1\n%   I +IPCS        - Interactive Problem Control System - Dump City\n%  DD +DD 1.0      - Not so famous command DD\n%  X21+USE XDC 2.1 - eXtended Debugging Controller\n%   U +ADD. UTIL   - additional Utilities\n%   X +EXIT        - Terminate ISPF using log and list defaults\n+Enter%END+command to terminate ISPF.\n)INIT\n  VGET (TITLE) PROFILE\n  IF (&TITLE = &Z)\n     &TITLE = '--------- ISPF/PDF MAIN PANEL ---------'\n  VPUT (TITLE) PROFILE\n  .HELP = ISR00003\n  .CURSOR = ZCMD\n  &ZPRIM = YES        /* ALWAYS A PRIMARY OPTION MENU      */\n  &ZHTOP = ISR00003   /* TUTORIAL TABLE OF CONTENTS        */\n  &ZHINDEX = ISR91000 /* TUTORIAL INDEX - 1ST PAGE         */\n  &ZSCLMPRJ = &Z      /* TUTORIAL INDEX - 1ST PAGE     @L1A*/\n  VPUT (ZHTOP,ZHINDEX,ZSCLMPRJ) PROFILE /*             @L1C*/\n\n)REINIT\n  .CURSOR = ZCMD\n  VGET (TITLE) PROFILE\n)PROC\n  &ZQ = &Z\n\n  IF (&ZCMD \u00ac= ' ')\n    &ZQ = TRUNC(&ZCMD,'.')\n    IF (&ZQ = ' ')\n      .MSG = ISRU000\n                                  /*\n  &TFS = XDC                      /* <---- This MUST match XDC's name.\n  &TFSTEMP = TRUNC (&ZCMD,'.')    /*\n  IF (&TFSTEMP = 'XDC')           /* This code permits the user to\n      &ZCMD   = TRUNC (&ZCMD,'.') /* specify =D.xxx where \"xxx\" might be\n      &TFSTEMP = .TRAIL           /* the name of an alternate XDC.\n      IF (&TFSTEMP \u00ac= &Z)         /*\n          &TFS = &TFSTEMP         /*\n  /* check for x21 */\n  &TFSTEMP = TRUNC(&ZCMD,'.')\n  IF (&TFSTEMP = 'X21')\n     &TFS = X21\n\n  &ZSEL = TRANS( &ZQ\n                0,'PANEL(ISPOPTA)'\n                1,'PGM(ISRBRO) PARM(ISRBRO01)'\n                2,'PGM(ISREDIT) PARM(P,ISREDM01)'\n                3,'PANEL(ISRUTIL)'\n                4,'PANEL(ISRFPA)'\n                5,'PGM(ISRJB1) PARM(ISRJPA) NOCHECK'\n                6,'PGM(ISRPTC)'\n                7,'PGM(ISPYXDR) PARM(ISR) NOCHECK'\n                8,'PANEL(ISRLPRIM)'\n                9,'PANEL(ISRDIIS)'\n               10,'PGM(ISRSCLM) NOCHECK'\n                C,'PGM(ISPTUTOR) PARM(ISR00005)'\n                D,'PANEL(DSNEPRI) NEWAPPL(DSNE)'\n               TE,'PANEL(DBCPRIM)'\n                S,'PANEL(ZSDSFOP2) NEWAPPL(ISF)'\n                G,'PANEL(ISDGENER)'\n                T,'PGM(ISPTUTOR) PARM(ISR00000)'\n                R,'PGM(REASM) NEWAPPL(REA)'\n               DD,'PGM(DDMAIN) NEWAPPL(DD)'\n                I,'PGM(BLSG) PARM(PANEL(BLSPPRIM)) NEWAPPL(BLSG)'\n                B,'PGM(ISRBRO) PARM(QUICKB)'\n                E,'PGM(ISREDIT) PARM(P,QUICKE) NOCHECK'\n              X21,'PANEL(XDCPAN01)'\n                U,'PANEL(ISR@PRI1)'\n             VSAM,'PANEL(VSAMP01)'\n              PDS,'PANEL(PDS@PRIM)'\n              ' ',' '\n                X,'EXIT'\n                *,'?' )\n  IF (&ZCMD = 'S')\n     &ZSEL = 'PGM(ISFISP) NOCHECK NEWAPPL(ISF)'\n  IF (&ZCMD = 'S.')\n     &ZSEL = 'PGM(ISFISP) NOCHECK NEWAPPL(ISF)'\n  &ZTRAIL = .TRAIL\n)END\n /*                                                                   */\n /* $SEG(ISR@PRIM) COMP(ALL) PROD(MVS)                                */\n /*                                                                   */\n /* CHANGE ACTIVITY                                                   */\n /*  $L0= UNFLAGED  PRE310                   :                        */\n /*  $L1= SCLM      M310     881123   020136 : SCLM/LMF Co-awareness  */\n /*  $L2= QUALITY   M310     881216   764700 : PTM #211              */\n /*  $L3= QUALITY   M310     890130   641747 : ST PTM 47             */\n /*  $L3= QUALITY   M310     890208   432273 : ST PTM 27             */\n/* 5665-402 (C) COPYRIGHT IBM CORP 1980, 1989 */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REACB000": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 27, "newlines": 27, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                     +-------------------------------+\n                      |  INTERACTIVE    DISASSEMBLER  |\n                      |    CONTROL BLOCK FACILITY     |\n                      +-------------------------------+\n+\n    REASM makes it possible to restore sources using previousely prepared\ncontrol block definitions. A special utility (PRCBGEN) shipped together with\nREASM converts standard assembler DSECT definitions into the corresponding load\nmodules which may be used by the REASM. Load library%REASM.CNTL+shipped\ntogether with the REASM contains prepared load modules for majority of the\npopular MVS blocks.\n\n    To keep this library up to date and to refresh it you may use the JCL\nexamples which may be found in the library%REASM.USER+\n\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REACO000": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x1c\\x00\\x1c\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 28, "newlines": 28, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                     +-------------------------------+\n                      |  INTERACTIVE    DISASSEMBLER  |\n                      |     COMMENTS REDEFINITION     |\n                      +-------------------------------+\n+\n   You may put any comment at any row in the text. Comments entered will be\ndisplayed on the screen, they will appear in the listing and in the saved\nassembler text.\n\n   Reasm provides its own comments for various commands and combinations.\nLook carefully: some of them are NOT obvious !\n\n   Of course you may overtype any Reasm comment by yours. If you decide later\nto restore Reasm's comment just erase yours and old comment will be back.\n\n   Length of the comment field may vary (depending on the operands length).\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "READD000": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01W\\x00 \\x00 \\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:57:00", "lines": 32, "newlines": 32, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                     +-------------------------------+\n                      |  INTERACTIVE    DISASSEMBLER  |\n                      |           DD CARDS            |\n                      +-------------------------------+\n+\n  All the DD cards%ARE OPTIONAL+. You DO NOT%HAVE TO+allocate any.\n\n  However you may wish to allocate the following DD cards:\n  -%REAPRINT+- Reasm uses this DD card as the internal PRINT file. In case\n        you did not allocate this DD card REASM will do it for you.\n        Internal allocation will create:\n       %//REAPRINT DD SPACE=(TRK,(5,10)),DCB=BLKSIZE=3000+\n\n  -%REASMSAV+- This DD card may define the recovery data set. In case\n               you did not allocate this DD card REASM will do it for you.\n               This data set may be sequential or partitional. Recfm, Lrecl and\n               Blksize are not relevant (Blksize must be not equal to ZERO).\n\n  -%REASMBLK+- This DD card may describe load library containing REASM control\n               blocks. You should allocate this DD card to the %REASM.CNTL+\n               library to be able to restore formatted blocks.\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "READI000": {"ttr": 531, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x1f\\x00\\x1f\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 31, "newlines": 31, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                     +-------------------------------+\n                      |  INTERACTIVE    DISASSEMBLER  |\n                      |     SCREEN DISPLAY FORMAT     |\n                      +-------------------------------+\n\n+\n  Reasm screen format is the flexible dynamic field that allows you convert\nproject text skillfully and with ardor.\n\n  Screen format provides primary and line commands in the manner pretty similar\nto the ISPF editor.\n\n  Below is an example of the screen format:\n\n\n\n                        ( continued on next page )\n\n)PROC\n&ZCONT = READI001\n&ZUP   = REA00000\n&RC2   = ''             /* For READI001 panel */\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "READI001": {"ttr": 533, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00&\\x00\\x924\\x1f\\x01\\x06\\x02\\x0f\\x016\\x002\\x002\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xc3@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "2006-01-20T01:36:26", "lines": 50, "newlines": 50, "modlines": 0, "user": "PGMVC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) CAPS(OFF) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n+\n           Fields, available to entry are:%\"Cmd\", \"Label\" and \"Comments\"+\n\n %COMMAND ===>                                                 %SCROLL==> PAGE+\n %Cmd+Offset ...Object Code..%..Label.+.Oper ..... Operands and%Comments\n\n                             %PLISTART+CSECT                                  +\n _RC1+000000 05F0            _RL1     +BALR  R15,R0            _RCO1          +\n _RC2+000002 47F0F008        _RL2     +B     8(,R15)           _RCO2          +\n _RC3+000006 0707            %PLICALLA+NOPR  R7                _RCO3          +\n _RC4+000008 0707            _RL4     +NOPR  R7                _RCO4          +\n _RC5+00000A 58F0F042        %PLICALLB+L     R15,66(,R15)      _RCO5          +\n _RC6+00000E 050F            _RL6     +BALR  R0,R15            _RCO6          +\n     +000010 00000000        _RL7     +DC    V(PLIMAIN)        _RCO7          +\n      ...... ................ ........ ..... .................. ..............\n\n\n $RCOM\n +                      ( continued on next page )\n\n)INIT\nIF (&RC2 = '')       /* 1-st time */\n   &RCOM='    You can play around this panel example to get an idea ...'\n   .CURSOR = ZCMD\n   &ZCONT = READI001\nELSE                 /* 2-d  time */\n   &RCOM='Now look what will happen after the line command (press ENTER)'\n   .CURSOR = RC2\n   .ALARM = YES\n   &ZCONT = READI002\n\n)PROC\nIF (.PFKEY \u00ac= 'PF03')\n   IF (&RC2 = '')    /* 1-st time  */\n       &RC2   = 'U15'\n   ELSE    /* 2-d  time  */\n       &RC2   = ''\nELSE\n   &RC2 = ''\n&ZUP   = REA00000\n\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "READI002": {"ttr": 535, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00#\\x00#\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 35, "newlines": 35, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%#_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       #   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) CAPS(OFF) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   #$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             #\n\n#\n\n\n %COMMAND ===>                                                 %SCROLL==> PAGE#\n %Cmd#Offset ...Object Code..%..Label.#.Oper ..... Operands and%Comments\n\n                             %PLISTART#CSECT                                  #\n _RC1#000000 05F0            _RL1     #BALR  R15,R0            _RCO1          #\n                                      %USING *,R15#\n _RC2#000002 47F0F008        _RL2     #B     *+8               _RCO2          #\n _RC3#000006 0707            %PLICALLA#NOPR  R7                _RCO3          #\n _RC4#000008 0707            _RL4     #NOPR  R7                _RCO4          #\n _RC5#00000A 58F0F042        %PLICALLB#L     R15,A00064        %=V(IBMBPIRA)  #\n _RC6#00000E 050F            _RL6     #BALR  R0,R15            _RCO6          #\n     #000010 00000000        _RL7     #DC    V(PLIMAIN)        _RCO7          #\n      ...... ................ ........ ..... .................. ..............\n\n %Note: the screen layout was significantly changed !!!\n #                      ( continued on next page )\n\n)INIT\n\n)PROC\n&ZUP   = REA00000\n&ZCONT = READI003\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "READI003": {"ttr": 537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x14\\x00\\x14\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 20, "newlines": 20, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) CAPS(OFF) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n+\n   As you could see, the format of Reasm screen is flexible. You may use\n   primary and line commands to change the data presentation.\n\n   You may change/add/delete labels in almost any row of the text.\n\n   You may change/add/delete comments in almost any row.\n\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAEP000": {"ttr": 539, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00%\\x00%\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 37, "newlines": 37, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                     +-------------------------------+\n                      |  INTERACTIVE    DISASSEMBLER  |\n                      |       ENTRY     PANEL         |\n                      +-------------------------------+\n+\n     Once you selected Reasm item from the ISPF option menu the Reasm entry\n   panel appears.  You use this panel to enter the name of an%ISPF load\n   library+or any%\"other\" data set.+ If an ISPF library name is displayed, and\n   you enter the \"other\" data set name, the data set name you enter overrides\n   the ISPF library.\n\n     From the edit entry panel, you can optionally specify the name of the\n   member to disassemble and csect or entry name in it. If you want preview the\n   member list just leave the%\"MEMBER\"+field blank or type in the pattern.\n     To preview module csect map just leave%\"CSECT\"+field blank.\n\n The following topics will be presented only if selected by number:\n   %1+- Defining an ISPF library\n   %2+- Defining the \"other\" data set\n   %3+- Defining a data set password\n\n)PROC\n   &ZSEL = TRANS(&ZCMD\n                1,*&REAPAN01\n                2,*&REAPAN02\n                3,*&REAPAN03\n                )\n   &ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REAGE000": {"ttr": 541, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x1e\\x00\\x1e\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 30, "newlines": 30, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                     +-------------------------------+\n                      |  INTERACTIVE    DISASSEMBLER  |\n                      |     GENERAL  INTRODUCTION     |\n                      +-------------------------------+\n\n+   This application is a powerful interactive tool to restore source assembler\n  program from the MVS load module.\n\n    Reasm allows you prepare high quality sources and provides a full set of\n  edit tools.\n\n    Reasm provides a 'recovery' option which makes it possible to restore\n  disassembling process from the 'hot point'.\n\n\n\n                        ( continued on next page )\n\n)PROC\n&ZCONT = REAGE001\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAGE001": {"ttr": 770, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x14\\x00\\x14\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 20, "newlines": 20, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n+\n     Reasm provides a special 'control block' feature which allows you prepare\nsources, using MVS control blocks definitions. You may define your own blocks\nto make restoring programs much more readable.\n\n     Reasm is friendly for novices and qualified users. You may prepare an\nexcellent source or make the draft one. In any rate it is the perfect tool for\ndisassembling.\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REALA000": {"ttr": 772, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x1d\\x00\\x1d\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 29, "newlines": 29, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                     +-------------------------------+\n                      |  INTERACTIVE    DISASSEMBLER  |\n                      |      LABELS  REDEFINITION     |\n                      +-------------------------------+\n +\n   You are able to overtype any label in the project. Once you did it all\nreferences to the label will be automatically changed in all the commands in\nthe project. This feature usually increases the readability fantastically.\n\n   You are able to erase any label. If there remained any references to the\nerased label Reasm will restore the label back.\n\n   You may change the first sign of label to asterisk (*). This label will\nstill exist in the project but all the references to it will be changed to the\nnearest previous label plus offset. This facility allows you drop \"junk\" labels\n(offsets within the logical block or so).\n\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REALID00": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x000\\x000\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 48, "newlines": 48, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                     +-------------------------------+\n                      |  INTERACTIVE    DISASSEMBLER  |\n                      |      \"DROP\"  LINE COMMAND     |\n                      +-------------------------------+\n+  Reasm line command DROP allows you to insert assembler-like command into the\nproject text at desired offset. The main purpose is to deactivate previously\nassigned base register.\n\n   The format of DROP command is:\n  %Dxx+ - where \"xx\" is the base register number (1-15).\n   Line DROP command deactivates the nearest previously set base register with\nthe specified number. It means that in the example below, DROP will correspond\nto the second USING:\n                              %USING *,R7\n                              +..........\n                              %USING *,R7\n                              +..........\n                              $DROP     +\n                       _D7 +  +L     R7,A0005C\n                        ( continued on next page )\n\n)INIT\n  IF (&D7 = 'D7')       /* 1-st time */\n     &DROP   = ''\n     .CURSOR = D7\n     &ZCONT  = REALID00\n  ELSE                  /* 2-d  time */\n     &DROP   = 'DROP  R7'\n     .CURSOR = ZCMD\n     &ZCONT  = REALID01\n)PROC\nIF (.PFKEY \u00ac= 'PF03')\n   IF (&D7 = 'D7')       /* 1-st time */\n       &D7     = ''\n   ELSE                  /* 2-d  time */\n       &D7     = 'D7'\nELSE\n   &D7 = 'D7'\n&ZUP  = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REALID01": {"ttr": 776, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x1c\\x00\\x1c\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 28, "newlines": 28, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n   Another purpose of line DROP command is the erasure of the specified base\nregister from project. The corresponding USING command will be erased from\nproject. You may delete all 'such' base registers via primary command DROP but\nif there are few USINGs in project sharing the same base then line DROP is the\nbest way to delete only one of them.\n\n   The format of this kind of the line DROP command is:\n  %D  + - delete all USING statements from \"this row's\" offset.\n\n  The following topics will be presented only if selected by number:\n   %1+- Reasm line    commands\n   %2+- Reasm primary commands\n\n)PROC\n   &ZSEL = TRANS(&ZCMD\n                1,*REALI000\n                2,*REAPR000\n                )\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REALIR00": {"ttr": 778, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00!\\x00!\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 33, "newlines": 33, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                     +-------------------------------+\n                      |  INTERACTIVE    DISASSEMBLER  |\n                      |  \"RETRANSLATE\"  LINE COMMAND  |\n                      +-------------------------------+\n\n+\n  The purpose of the line command RETRANSLATE is to convert the project text\ninto the commands starting from the desired offset. This command works the same\nway as the primary command RETRANSLATE does.\n\n  The format of the line command RETRANSLATE is:\n %R  +- retranslate from this row up to first non command piece of text.\n\n\n  The following topics will be presented only if selected by number:\n   %1+- Reasm line    commands\n   %2+- Reasm primary commands\n\n)PROC\n   &ZSEL = TRANS(&ZCMD\n                1,*REALI000\n                2,*REAPR000\n                )\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REALIT00": {"ttr": 780, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00 \\x00 \\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 32, "newlines": 32, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                     +-------------------------------+\n                      |  INTERACTIVE    DISASSEMBLER  |\n                      |  \"TYPE-CHANGE\"  LINE COMMAND  |\n                      +-------------------------------+\n\n+  Type change commands is a way to change the data presentation.  You may\nchange the presentation of almost any part of project (except ACONSTs, VCONSTs\nand so).\n\n   The format of the line type change commands is:\n  %TXD+ - where:\n  %T+   - is the character defining the type (C, X, ...)\n  %X+   - character, identical to%T+for block command or\n          symbol%L+for length modification\n  %D+   - 1-byte numeric (1-9) for length modification\n\n\n\n                        ( continued on next page )\n\n)PROC\n&ZUP   = REA00000\n&ZCONT = REALIT01\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REALIT01": {"ttr": 782, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00!\\x00!\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 33, "newlines": 33, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n+   Here is the example how type change commands may change the whole world:\n\n   +Before%--->+   %C  +000000  00C1C2C3       DC    X'00C1C2C3'\n                   %F  +000004  00000040       DC    X'00000040'\n                   %AL1+000008  FD0000B0       DC    X'FD0000B0'\n                   %S  +00000C  F00CF00E       DC    X'F00CF00E'\n                   %BL2+000010  01020304       DC    X'01020304'\n\n   +After%--->+         000000  00             DC    X'00'\n                        000001  C1C2C3         DC    C'ABC'\n                        000004  00000040       DC    F'64'\n                        000008  FD             DC    AL1(253)\n                        000009  0000B0         DC    X'0000B0'\n                        00000C  F00C           DC    S(*)\n                        00000E  F00E           DC    X'F00E'\n                        000010  01             DC    B'00000001'\n                        000011  02             DC    B'00000010'\n                        000012  0304           DC    X'0304'\n\n                        ( continued on next page )\n\n)PROC\n&ZUP   = REA00000\n&ZCONT = REALIT02\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REALIT02": {"ttr": 784, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00 \\x00 \\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 32, "newlines": 32, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n+\n   Block command example did not fit into the example. When you use the block\ncommand (just like you do it in the ISPF EDIT: %CC+...%CC+ or %FF+...%FF+)\nmanner then all the project text between specified rows will be converted to\nthe specified data type presentation.\n\n   The following data types are supported in this version:\n  %X+ - Hexadecimal data\n  %C+ - Character string\n  %F+ - Full word\n  %H+ - Half word\n  %Y+ - Unsigned half word\n  %A+ - Unsigned AL1 or AL3 constant.\n  %S+ - S-constant (if the appropriate base register is available)\n  %B+ - Bit string\n  %#+ - DS variable\n\n\n                        ( continued on next page )\n\n)PROC\n&ZUP   = REA00000\n&ZCONT = REALIT03\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REALIT03": {"ttr": 786, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x16\\x00\\x16\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 22, "newlines": 22, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n+\n   Some of the data types listed above are logically identical.\n   For example:\n      %HL3+  -------->  %AL3+\n      %FL1+  -------->  %AL1+\n                etc.\n\n   When Reasm can not convert data to the specified format it converts it to\nthe hexadecimal presentation.\n\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REALIU00": {"ttr": 788, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\"\\x00\"\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 34, "newlines": 34, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                     +-------------------------------+\n                      |  INTERACTIVE    DISASSEMBLER  |\n                      |      \"USING\" LINE COMMAND     |\n                      +-------------------------------+\n\n+\n  The purpose of line command USING is to set the base register for the part of\nthe project text.\n\n  The format of line command USING is:\n %Uxx+- where \"xx\" is the base register number (1-15)\n\n  If you did not type register number then primary USING command pattern will\nappear in the command line.\n\n  The following topics will be presented only if selected by number:\n   %1+- Reasm line    commands\n   %2+- Reasm primary commands\n\n)PROC\n   &ZSEL = TRANS(&ZCMD\n                1,*REALI000\n                2,*REAPR000\n                )\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REALI000": {"ttr": 790, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\"\\x00\"\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 34, "newlines": 34, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                     +-------------------------------+\n                      |  INTERACTIVE    DISASSEMBLER  |\n                      |        LINE   COMMANDS        |\n                      +-------------------------------+\n\n+\n   The following topics are presented in sequence, or may be selected by\n   number.\n\n  %0+ - Line commands - general information\n  %U+ - USING       line command\n  %D+ - DROP        line command\n  %R+ - RETRANSLATE line command\n  %T+ - Type redefinition line commands (X C F H Y B A S #)\n\n)PROC\n   &ZSEL = TRANS(&ZCMD\n                0,REALI001\n                U,REALIU00\n                D,REALID00\n                R,REALIR00\n                T,REALIT00\n                )\n&D7    = 'D7'         /* For REALID00 \"DROP\" panel */\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REALI001": {"ttr": 792, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x1e\\x00\\x1e\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 30, "newlines": 30, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n+\n   Reasm line commands makes it possible to:\n\n   -%Insert+USING or DROP commands at the desired offset in the project.\n   -%Delete+base register defined at the choosen offset.\n   -%Retranslate+project from the desired offset.\n   -%Change+format of the data presentation at the chosen offset.\n\n   Line commands may be entered at first position of any row of the screen, in\n   the field, labeled%\"Cmd\"+\n\n   The length of the line command is may not exceed 3 letters.\n\n  The following topic will be presented only if selected by number:\n   %1+- Reasm display screen format\n+\n)PROC\n   &ZSEL = TRANS(&ZCMD\n                 1,*READI000\n                )\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REAMA000": {"ttr": 794, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\"\\x00\"\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 34, "newlines": 34, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                     +-------------------------------+\n                      |  INTERACTIVE    DISASSEMBLER  |\n                      |          MARK  NAMES          |\n                      +-------------------------------+\n+\n  Reasm lets you mark points of project. Later you may \"point\" project to\ndesired offset using primary command%LOCATE+or through the mark table. Once you\nentered primary command%MARK+ without operands the mark table appears on the\nscreen.\n\n  You can scroll mark table to find the appropriate mark name and then select\nit by \"S\" at the first position. Project will be pointed to the corresponding\noffset.\n\n\n\n  The following topic will be presented only if selected by number:\n   %1+- Reasm primary commands\n\n)PROC\n   &ZSEL = TRANS(&ZCMD\n                1,*REAPR000\n                )\n\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REAMI000": {"ttr": 796, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x06\\x00\\x924\\x1f\\x01\\x06\\x02\\x0f\\x01C\\x00\\x1f\\x00\\x1f\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xc3@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "2006-01-20T01:43:06", "lines": 31, "newlines": 31, "modlines": 0, "user": "PGMVC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                     +-------------------------------+\n                      |  INTERACTIVE    DISASSEMBLER  |\n                      |       MISCELLANEOUS NOTES     |\n                      +-------------------------------+\n+\n    Reasm was initially developed in 1985 in the former USSR by Valentin\nChernyak. Since that time it was significantly changed and improved.\n\n    I am glad to thank my friends. This product was changed a lot of times to\nfollow their valuable remarks. A lot of advices were made by:\n\n  - Jornitski Vladimir             --- currently in USA\n  - Katzman   Boris                --- currently in Russia\n  - Konnikov  Arkady               --- currently in Russia\n  - Livshits  Michael              --- currently in Israel\n  - Neishtadt Leonid               --- currently in Israel\n\n\n  $REASCP\n  $REATEL\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAPR#00": {"ttr": 798, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 27, "newlines": 27, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                      '#SNAP'  primary command\n+                      ------------------------\n\n   Primary command%#SNAP+is the debugging command to get the internal snap.\n   The format of #SNAP command is:\n\n  %#{SNAP}+\n\n   After #SNAP completion internal data base snap will be printed to the ISPF\nLIST data set.\n\n   Examples:\n  %#SNAP      +- Snap internal variables.\n\n  %It is NOT expected #SNAP will be used by anybody except the developer.+\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAPR@00": {"ttr": 1026, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01X\\x00\\x1c\\x00\\x1c\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:58:00", "lines": 28, "newlines": 28, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%#_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       #   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   #$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             #\n\n%                      'SET' primary command\n#                      ---------------------\n\n   Primary command%SET#allows you redefine the name in the user DSECT.\n   The format of SET command is:\n\n  %{SET}Name+Offset={Username}#\n\n   If%Username#specified then it replaces the Reasm-generated name. If you omit\nthe Username then Reasm-generated name will take place again.\n\n   Example:\n  %SET @DSA+56=VOLSER #- Define the name VOLSER in the user dsect DSA.\n        or\n  %@DSA+56=VOLSER\n  %DSA+56=            #- Reset the name in the user dsect DSA to the default.\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAPRD00": {"ttr": 1028, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00 \\x00 \\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 32, "newlines": 32, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                      'DROP'   primary command\n+                      ------------------------\n\n   Primary command%DROP+allows you delete from the project previously defined\nbase register. The usage of command DROP%IS NOT+similar to the assembler\n\"DROP\" command !  Command does NOT limit the register activity but erases the\ncorresponding USING commands from the project text.\n\n   Format of DROP primary command is:\n\n  %D{ROP} Reg/ALL+\n\n   If %Reg+specified then all the USING commands utilizing this register will\nbe deleted from the project text.\n\n   If operand%ALL+specified then ALL the USINGs will be deleted from the\nproject text.\n\n                        ( continued on next page )\n\n)PROC\n&ZCONT = REAPRD01\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REAPRD01": {"ttr": 1030, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x1e\\x00\\x1e\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 30, "newlines": 30, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n+\n   Operand%Reg+may be entered as the decimal digit or as%\"Rxx\".+\n\n   Once you delete the register, the following actions will performed by Reasm\nautomatically:\n\n   - If deleting reg was the base for text (not for the control block or user\n     DSECT) then all the corresponding labels will be deleted from the project.\n\n   - If deleting reg was the base for user DSECT then DSECT will be destroyed.\n\n   - If deleting reg was the base for control block then BLOCK will be freed.\n\n   Examples:\n    %DROP   R3+ - Erase Reg3 from the project\n    %D      15+ - Erase Reg15.\n    %D     ALL+ - Erase all the base registers\n\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REAPRE00": {"ttr": 1032, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00 \\x00 \\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 32, "newlines": 32, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                      'DSECT+  primary command\n+                      ------------------------\n\n   Primary command%DSECT+allows you customize the format of user-dsect label\nreferences in the project.\n   Format of DSECT commands is:\n\n  %DS{ECT} O{FFSET}/N{AME}+\n\n   If operand%OFFSET+was chosen then all user names will be translated to the\n   format%\"NNN+yyyy\".+\n   If operand%NAME+was chosen then all user names will be translated to the\n   format%\"NNNxxxxx\".+\n   Here%NNN+-first 3 characters from user dsect name,%yyyy+-decimal offset\n   of field,%xxxxx+-hexadecimal offset of the field.\n\n   Examples:\n  %DSECT    NAME  +- set format \"NAME\".\n  %DS     OFFSET  +- set format \"OFFSET\".\n\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REAPRF00": {"ttr": 1034, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00 \\x00 \\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 32, "newlines": 32, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                      'FIND'   primary command\n+                      ------------------------\n\n   Primary command%FIND+makes it possible to find context or pattern in the\nproject text.\n   The format of FIND command is:\n\n  %F{IND} {context}/{Pattern}+\n\n   Reasm tries to find the \"text\" or \"pattern\" in the project. It searches\nthe%VISIBLE+project so, for example, you can NOT find assembler command if it\nwas not disassembled already.  Pattern is the context, containing symbol{s}\nasterisk which means \"any number of any characters\".\n\n   If text or pattern is omitted then REASM repeats previous FIND.\n\n   Examples:\n  %FIND  ST   R2      +\n  %F     CVT          +\n  %F     L*R*,TCBRBP  +\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REAPRI00": {"ttr": 1036, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00 \\x00 \\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 32, "newlines": 32, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                      'LINESIZE' primary command\n+                      --------------------------\n\n   Primary command%LINESIZE+ allows you define length for hex and char data\nlines presentation. Default value is%4+ for hex data and %8+for character.\n   The format of LINESIZE command is:\n\n  %LI{NESIZE} length+\n\n   Operand%Length+is a decimal value from 1 to 9.\n   If you specify value%4+ then it will be 4 for hex and 8 for char.\n   Any other value assumes equal lengths for hex and char data.\n\n   Examples:\n  %LINESIZE   8+- set length 8 for char and hex data.\n  %LI         4+- set length 4 for hex and 8 for char data.\n  %LI         1+- set length 1 for char and hex data.\n\n\n\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAPRJ00": {"ttr": 1038, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 27, "newlines": 27, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                      'END'    primary command\n+                      ------------------------\n\n   Primary command%END+allows you finish the REASM.\n   The format of END command is:\n\n  %E{ND}+\n\n   If you made any changes to the project Reasm will ask you for confirmation.\nTo confirm enter END command second time.\n\n\n\n   Example:\n  %END        +- Terminate the work.\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAPRL00": {"ttr": 1040, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00 \\x00 \\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 32, "newlines": 32, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                      'LOCATE' primary command\n+                      ------------------------\n\n   Primary command%LOCATE+allows you \"point\" the project image to the desired\nplace. You may point project by offset, by label or by mark-name.\n   The format of LOCATE command is:\n\n  %L{OCATE} Offset/Label/Mark-name+\n\n   If you specified%\"Offset\"+then the project will be pointed to the chosen\n   offset.\n   If you specified%\"Label\"+ then the project will be pointed to the offset,\n   corresponding to the specified label.\n   If you specified%\"Mark\"+  then the project will be pointed to the offset,\n   corresponding to the specified mark name.\n\n   Examples:\n  %LOCATE  2C8    +- point project to the offset X'0002C8'.\n  %L    GETCVT    +- point project to the label 'GETCVT'.\n  %L    PLACEA    +- point project to the user-mark 'PLACEA'.\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REAPRM00": {"ttr": 1042, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x1e\\x00\\x1e\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 30, "newlines": 30, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                      'MARK'   primary command\n+                      ------------------------\n\n   Primary command%MARK+allows you mark specific points in the project.\n   The format of the MARK command is:\n\n  %M{ARK} {Name} {Description}+  or  %.Name {Description}+\n\n   Mark labels are pretty similar to the ISPF BROWSE labels. You may mark\npoints in the project and then \"point\" project via primary command %LOCATE+ or\nvia%MARK+command without operands. In addition you may write short descriptions\nfor marks - you will see them in the mark table.\n\n   Example:\n  %M  MIDDLE Important point+- Set mark 'MIDDLE'.\n  %.RETURN   It is retpoint +- Set mark 'RETURN'.\n  %M                        +- View mark table.\n\n)PROC\n&ZCONT = REAMA000\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REAPRO00": {"ttr": 1044, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x1f\\x00\\x1f\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 31, "newlines": 31, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%#_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       #   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   #$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             #\n\n%                      'OFFSET' primary command\n#                      ------------------------\n\n   Primary command%OFFSET# allows you define available ranges for the local\nbranch commands.\n  Format of DSECT commands is:\n\n  %O{FFSET} Num1 {Num2}#\n\n   As the default Reasm disassembles local branch command, using format \"*+xx\"\nand \"*-yy\" in case %xx<=Num1#or%yy<=Num2.# Default values are: Num1=12 and\nNum2=8.  You may specify your own values. If Num2 is omitted then it is set\nequal to Num1. If you specify \"0\" as operand then Reasm will never generate\n\"*+-xx\" operands.\n\n   Examples:\n  %OFFSET   8,4  #- Set Num1=8 and Num2=4\n  %O        8    #- Set Num1=Num2=4\n  %O        0    #- Disable \"*+-xx\" facility\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REAPRP00": {"ttr": 1046, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x1e\\x00\\x1e\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 30, "newlines": 30, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                      'PRINT'  primary command\n+                      ------------------------\n\n   Primary command%PRINT+allows you print assembler-type listing of the project\nto the ISPF LIST data set.\n   The format of PRINT command is:\n\n  %P{RINT} {X{REF}}+\n\n   If operand%XREF+specified then cross reference table will be printed.\n\n   Once PRINT command is complete you may use ISPF LIST command to output the\ndata set.\n\n   Examples:\n  %PRINT      +- Print the project listing\n  %P X        +- Print the project listing and the cross reference table\n\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAPRQ00": {"ttr": 1048, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x18\\x00\\x18\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 24, "newlines": 24, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                      'CANCEL' primary command\n+                      ------------------------\n\n   Primary command%CANCEL+allows you terminate the REASM immediately.\n   The format of CANCEL command is:\n\n  %CAN{CEL}+\n\n   Reasm issues internal STOP command and terminates.\n\n   Example:\n  %CAN        +- Terminate the work.\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAPRR00": {"ttr": 1050, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00!\\x00!\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 33, "newlines": 33, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                      'RETRANSLATE+ primary command\n+                      -----------------------------\n\n  Primary command%RETRANSLATE+allows you convert text of project to command\npresentation. During retranslation Reasm performs a lot of automatic actions to\nmake project text maximum readable.\n\n  Format of the RETRANSLATE command is:\n\n %R{ETRANSLATE} {Offset} {G{LOBAL}}+\n\n  - First operand%Offset+may define the offset in project where to start\n    from. If it is ommited then offset of first row of the screen is assumed.\n\n  - Second operand%GLOBAL+may define where to stop. Default assumption\n    is%NONGLOBAL+. In this case Reasm will stop retranslate process at first\n    non-command part of text. If GLOBAL was specified then Reasm will try skip\n    this piece and continue the process up to end of the text.\n\n                        ( continued on next page )\n\n)PROC\n&ZCONT = REAPRR01\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAPRR01": {"ttr": 1052, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x16\\x00\\x16\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 22, "newlines": 22, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n+\n   Examples of RETRANSLATE command:\n\n  %R        +  - Start retranslation from this screen.\n  %R   C    +  - Start retranslation from the offset X'00000C'.\n  %R   G    +  - Retranslate all the project (GLOBAL-type) from this screen.\n  %R   C,G  +  - Retranslate from the offset X'00000C' all the project.\n\n   The command%\"R G\"+is usually the very first command you should issue.\n\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REAPRS00": {"ttr": 1054, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00 \\x00 \\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 32, "newlines": 32, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                      'SAVE'   primary command\n+                      ------------------------\n\n   Primary command%SAVE+allows you save the generated assembler text of the\nproject as the member of the partitional data set.\n\n   The format of SAVE command is:\n\n  %S{AVE} {Member}+\n   Default member name is equal to CSECT name.\n\n   Once you enter SAVE command you will be prompted with the Reasm Save panel.\nYou may define name of partitional data set or ISPF library and change the name\nof the member. You may preview the member list of the specified library to find\nrelevant member name.  You may add or replace the member in the library. In\norder to replace do not forget type%YES+in the 'REPLACE MEMBER' field.\n\n   Examples:\n  %SAVE    MOD001   +- Save the project text under name MOD001\n  %S                +- Save the project\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAPRT00": {"ttr": 1281, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x19\\x00\\x19\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 25, "newlines": 25, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                      'TRACE'  primary command\n+                      ------------------------\n\n   Primary command%TRACE+is the debugging tool.\n   The format of TRACE command is:\n\n  %T{RACE} ON/OFF+\n\n   TRACE command lets you toggle the internal trace.\n\n   Examples:\n  %TRACE    ON+- Enable  the trace.\n  %T       OFF+- Disable the trace.\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAPRU00": {"ttr": 1283, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00!\\x00!\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 33, "newlines": 33, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       #   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                      'USING'  primary command\n+                      ------------------------\n\n  Primary command USING allows you define base register and specify its\nposition. This action is pretty similar to the assembler USING command.\n\n  The format of primary command USING is:\n\n %U{SING}#Offset1/*/Offset2(Reg2)/@Name+#Reg1+#{Offset3/<cursor>}+\n\n  You may type up to three operands. Two first must be specified, third one is\noptional.\n\n  First and second operands of command define offset or DSECT name and number\nof the base register. Third operand defines the displacement, where the USING\nassembler command must appear in project listing. If third operand is omitted\nthen Offset3 is set equal to Offset1.\n\n                        ( continued on next page )\n\n)PROC\n&ZCONT = REAPRU01\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAPRU01": {"ttr": 1285, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00 \\x00 \\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 32, "newlines": 32, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n+\n\n  - First operand of USING command may be entered as:\n    -%Offset1+    - hexadecimal value of offset in the project, USING have to\n     %*+            start from.\n                     === Example ===\n                   %USING  2C0,12+- base project from x'2C0' via R12.\n                   %U        *,R6+- base project from \"here\" via R6.\n                                   (Offset1 is equal to the offset of the first\n                                    line of the project on the screen)\n\n    -%Offset2(Reg2)+- relative address. This format allows you specify\n                    Offset1 basing on the value in previously defined Reg2.\n                    Usually it is a easiest method to set the second base reg.\n                     === Example ===\n                   %USING  4096(12),R11+- set second base after R11.\n                   %U      4096(R11),10+- and so on ...\n     %NOTE:+ Offset1 is hexadecimal but Offset2 is decimal.\n\n                        ( continued on next page )\n\n)PROC\n&ZCONT = REAPRU02\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REAPRU02": {"ttr": 1287, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x924\\x1f\\x00\\x93\\x07\\x1f\\x12S\\x00\\x1d\\x00\\x1d\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1993-03-12T12:53:00", "lines": 29, "newlines": 29, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n+\n\n    -%@Name+      - Name of the DSECT block. This is a way to set the base\nregister for predefined control block or user defined DSECT. Once Reasm\nreceives such operand it tries to find the appropriate control block in the\nload library, defined by the DD card REASMBLK. If the block is found then Reasm\nloads it and sets a base.  In future all the references to the fields in this\ncontrol block will be translated to the names from the control block\ndescription.  Reasm will accept also the comments related to the control block\nfields.\n                    === Example ===\n                   %USING @CVT,R3+  - Set base for control block 'CVT'.\n                                      If the command was:\n                                     %TM  116(R3),X'13'+\n                                      then its new form will be:\n                                     %TM  CVTDCB,X'13'   OPERATING SYSTEM ...+\n                   %USING ?,2       - Bring up the member list of blocks\n                        ( continued on next page )\n)PROC\n&ZCONT = REAPRU03\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAPRU03": {"ttr": 1289, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x1e\\x00\\x1e\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 30, "newlines": 30, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%#_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       #   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   #$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             #\n#\n\n    -%@Name#      - If the specified name is not the name of predefined control\nblock then Reasm assumes user DSECT. Reasm creates the dummy section image and\nbegins to fill it with the fields program is referring to. All the references\nto DSECT fields are translated to the names such as \"NNNxxxxx\" or \"NNN+yyyy\",\nwhere%\"NNN\" #is three first bytes of the DSECT name, %\"xxxxx\"# is the\nhexadecimal offset of the field, %\"yyyy\"#is the decimal offset of the field.\nYou may choose the format via primary command%DSECT.# You may customize names\nin the user DSECT via the primary command%SET.#\n                    === Example ===\n                   %USING    @DSA,R13# - set base reg13 for user DSECT 'DSA'.\n                    Command %L    R13,4(R13)# will be translated to\n                            %L    R13,DSA+4# or %L    R13,DSA00004#\n\n         %NOTE#     You can not define two user dsects with the same 3 first\n                    characters of the name !\n                        ( continued on next page )\n\n)PROC\n&ZCONT = REAPRU04\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REAPRU04": {"ttr": 1291, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x19\\x00\\x19\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 25, "newlines": 25, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n+\n\n  -%Second+operand of the USING command defines the number of the base\nregister.  You may specify ANY number of register (from 0 to 15). Hopefully\nregister 0 should be used ONLY to base the predefined control block%@PSA.+\n\n    You may type number of register as decimal digit or as combination%\"Rxx\".+\n\n  -%Third+(optional) operand of USING command may define the displacement in\nthe project where the assembler USING command should be put. As the default it\nwill appear at the offset equal to the first operand.  Offset3 must be entered\nin hexadecimal, like Offset1.  Instead of typing Offset3 you may show the\nnecessary place by cursor. Assembler command USING will be put before the row\nwhere the cursor occurred.\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REAPRV00": {"ttr": 1293, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00 \\x00 \\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 32, "newlines": 32, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                      'RECOVERY' primary command\n+                      --------------------------\n\n   Primary command%RECOVERY+allows you backup your project for future usage.\n   The format of RECOVERY command is:\n\n  %REC{OVERY} {Freq/OFF}+\n\n   If operand is omitted then Reasm performs one time backup.  If%Freq+operand\nentered then Reasm enters autorecovery mode and it will backup data after\nevery%Freq+changes. Do not type too small value of frequency - it may slow down\nyou work !\n\n   When operand%OFF+or%0+is typed Reasm terminates autorecovery mode.\n\n   Examples:\n  %RECOVERY   +- Save data to the backup file.\n  %REC    20  +- Auto backup data after every 20 changes.\n  %REC   OFF  +- Terminate autorecovery mode.\n\n)PROC\n\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAPRW00": {"ttr": 1295, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x1f\\x00\\x1f\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 31, "newlines": 31, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                      'PROFILE' primary command\n+                      -------------------------\n\n   Primary command%PROFILE+ allows you edit and set defaults for data\npresentation and command set.\n  Format of PROFILE command is:\n\n  %PROF{ILE}+\n\n   Special self explanatory profile panel will appear.\n\n   Examples:\n  %PROFILE+\n  %PROF+\n\n\n\n\n                        ( continued on next page )\n)PROC\n&ZUP   = REA00000\n&ZNEXT = REAPRW01\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAPRW01": {"ttr": 1297, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x1e\\x00\\x1e\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 30, "newlines": 30, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n+\n   Panel, provided by the%PROFILE+primary command contains the following items:\n\n  %CHAR/HEX data length+  - value for the%LINESIZE+primary command.\n  %Perform AUTO actions+  - value for the%AUTO+    primary command.\n  %DSECT names format  +  - value for the%DSECT+   primary command.\n  %Branch FORW/BACKW   +  - value for the%OFFSET+  primary command.\n  %AUTOSAVE mode value +  - value for the%RECOVERY+primary command.\n\n  %OS mode + - makes it possible to choose appropriate command set.\n               You may select 360,370,XA or ESA value.\n  %PACKED  + - allows you enable/disable packed arithmetic commands.\n  %FLOAT   + - allows you enable/disable float  arithmetic commands.\n\n\n\n\n\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAPRX00": {"ttr": 1299, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x1f\\x00\\x1f\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 31, "newlines": 31, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                      'LISTX'  primary command\n+                      ------------------------\n\n   Primary command%LISTX+allows you copy accumulated REAPRINT file to ISPF\n   LIST data set.\n   The format of LISTX command is:\n\n  %LISTX+\n\n   When LISTX command is complete, you may use ISPF command%LIST+to\n   recieve hardcopy of ISPF LIST data set.\n\n  %NOTE:+ If you want to use command LISTX DO NOT allocate REAPRINT data\n          set as \"SYSOUT=...\" !\n\n\n   Example:\n  %LISTX      +- Copy REAPRINT to ISPF LIST data set.\n\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REAPRY00": {"ttr": 1301, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 27, "newlines": 27, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                      'AUTO'   primary command\n+                      ------------------------\n\n   Primary command%AUTO+allows you enable or disable Reasm automatic actions.\n   The format of AUTO command is:\n\n  %A{UTO} ON/OFF+\n\n   AUTO OFF is useful in case you feel REASM is 'too smart' and you prefer to\nhave the full manual control on all the project changes.\n\n\n   Examples:\n  %AUTO    OFF+- Disable auto actions\n  %A        ON+- Enable  auto actions\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAPRZ00": {"ttr": 1303, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x18\\x00\\x18\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 24, "newlines": 24, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                      'RESET'  primary command\n+                      ------------------------\n\n   Primary command%RESET+allows you reset the pending block line command.\n\n   The format of RESET command is:\n\n  %RES{ET}+\n\n   Example:\n  %RES        +- Reset the pending line block command.\n\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAPR000": {"ttr": 1305, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00?\\x00?\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 63, "newlines": 63, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                     +-------------------------------+\n                      |  INTERACTIVE    DISASSEMBLER  |\n                      |    PRIMARY    COMMANDS        |\n                      +-------------------------------+\n+\n The following topics are presented in sequence, or may be selected by\nnumber.  Individual commands may be selected by entering the command name.\n+\n  %0+- Primary commands (general information)\n  %1+- Basic commands                 %USING      DROP       RETRANSLATE +\n  %2+- FIND/LOCATE commands           %FIND       LOCATE                       +\n  %3+- Data presentation commands     %LINESIZE   DSECT      OFFSET    PROFILE +\n  %4+- External data commands         %SAVE                                    +\n  %5+- Print commands                 %PRINT                                   +\n  %6+- Miscellaneous commands         %RESET      CANCEL     RECOVERY          +\n                                      %AUTO       END        MARK              +\n\n  The following topic will be presented only if selected by number:\n  %7+- User DSECT preparation         %SET\n  %8+- Debug commands                 %#SNAP      TRACE\n\n)PROC\n   &ZSEL = TRANS(&ZCMD\n                0,&REAPAN05\n                1,REAPR001\n                2,REAPR002\n                3,REAPR003\n                4,REAPR004\n                5,REAPR005\n                6,REAPR006\n                7,*REAPR007\n                8,*REAPR008\n                USING,       *REAPRU00\n                DROP,        *REAPRD00\n                RETRANSLATE, *REAPRR00\n                FIND,        *REAPRF00\n                LOCATE,      *REAPRL00\n                LINESIZE,    *REAPRI00\n                DSECT,       *REAPRE00\n                OFFSET,      *REAPRO00\n                PROFILE,     *REAPRW00\n                SAVE,        *REAPRS00\n                PRINT,       *REAPRP00\n                RESET,       *REAPRZ00\n                CANCEL,      *REAPRQ00\n                RECOVERY,    *REAPRV00\n                AUTO,        *REAPRY00\n                END,         *REAPRJ00\n                MARK,        *REAPRM00\n                SET,         *REAPR@00\n                #SNAP,       *REAPR#00\n                TRACE,       *REAPRT00\n                )\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAPR001": {"ttr": 1307, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x1a\\x00\\x1a\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 26, "newlines": 26, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n+\n  Basic commands are most popular and useful REASM commands. They make it\npossible to basically prepare project.\n\n  The following topics are presented in sequence, or may be selected by number:\n\n  %USING      + - Set     the base register\n  %DROP       + - Delete  the base register\n  %RETRANSLATE+ - Convert data to commands\n\n)PROC\n   &ZSEL = TRANS(&ZCMD\n                USING,       REAPRU00\n                DROP,        REAPRD00\n                RETRANSLATE, REAPRR00\n                )\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAPR002": {"ttr": 1309, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x18\\x00\\x18\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 24, "newlines": 24, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n+\n  Find and Locate commands make it possible to point the desired project offset.\n\n\n  The following topics are presented in sequence, or may be selected by number:\n\n  %FIND       + - Find the text or pattern in text\n  %LOCATE     + - Locate the desired place in text\n\n)PROC\n   &ZSEL = TRANS(&ZCMD\n                FIND,        REAPRF00\n                LOCATE,      REAPRL00\n                )\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAPR003": {"ttr": 1537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 27, "newlines": 27, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%#_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       #   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   #$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             #\n\n#\n  Display mode control commands allows you change the format of data\npresentation to get maximum readability.\n\n  The following topics are presented in sequence, or may be selected by number:\n\n  %LINESIZE   # - Set the length of character and hex data lines\n  %DSECT      # - Set the format of labels in user defined DSECTs\n  %OFFSET     # - Set the maximum offset for \"*+xx/*-xx\" operands\n\n)PROC\n   &ZSEL = TRANS(&ZCMD\n                LINESIZE,    REAPRI00\n                DSECT,       REAPRE00\n                OFFSET,      REAPRO00\n                PROFILE,     REAPRW00\n                )\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REAPR004": {"ttr": 1539, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x16\\x00\\x16\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 22, "newlines": 22, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n+\n  External data command SAVE allows you save the generated assembler text of\nthe project as the member of source library or sequential data set.\n\n  The following topics are presented in sequence, or may be selected by number:\n\n  %SAVE       + - Save assembler text\n\n)PROC\n   &ZSEL = TRANS(&ZCMD\n                SAVE,        REAPRS00\n                )\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAPR005": {"ttr": 1541, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x15\\x00\\x15\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 21, "newlines": 21, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n+\n  Print commands allows you receive hard copy listing of the project text.\n\n  The following topics are presented in sequence, or may be selected by number:\n\n  %PRINT      + - Print project text to the ISPF LIST data set\n\n)PROC\n   &ZSEL = TRANS(&ZCMD\n                PRINT,       REAPRP00\n                )\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAPR006": {"ttr": 1543, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00 \\x00 \\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 32, "newlines": 32, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n+\n  Commands listed below were not included into any other topic.\n  However most of them are useful and important.\n\n  The following topics are presented in sequence, or may be selected by number:\n\n  %RESET      + - Reset pending block line command\n  %END        + - Exit from the REASM\n  %CANCEL     + - Immediately exit from the REASM\n  %RECOVERY   + - Handle BACKUP processing\n  %AUTO       + - Enable/disable Reasm \"auto\" actions\n  %MARK       + - Set mark (user label) in text\n\n)PROC\n   &ZSEL = TRANS(&ZCMD\n                RESET,       REAPRZ00\n                END,         REAPRJ00\n                CANCEL,      REAPRQ00\n                RECOVERY,    REAPRV00\n                AUTO,        REAPRY00\n                MARK,        REAPRM00\n                )\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REAPR007": {"ttr": 1545, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x18\\x00\\x18\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 24, "newlines": 24, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n+\n  Once you used unknown DSECT name in the USING primary command REASM creates\nand maintains this DSECT. REASM keeps track of all the offsets within this\nDSECT and generates the corresponding names for the every field. You are\nallowed to change some of these names.\n\n  The following topics are presented in sequence, or may be selected by number:\n\n  %SET        + - Define name in the user DSECT\n\n)PROC\n   &ZSEL = TRANS(&ZCMD\n                DSECT,       REAPR@00\n                )\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REAPR008": {"ttr": 1547, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x19\\x00\\x19\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 25, "newlines": 25, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n+\n  Debug commands were invented for the developer's own needs in order to\nsimplify his hard job.  I do not expect anybody will use these commands.\nHowever, to be honest, I document them.\n\n  The following topics are presented in sequence, or may be selected by number:\n\n  %#SNAP      + - Snap internal data base\n  %TRACE      + - Switch trace on/off\n\n)PROC\n   &ZSEL = TRANS(&ZCMD\n                #SNAP,       REAPR#00\n                TRACE,       REAPRT00\n                )\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REARC000": {"ttr": 1549, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x1d\\x00\\x1d\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 29, "newlines": 29, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                     +-------------------------------+\n                      |  INTERACTIVE    DISASSEMBLER  |\n                      |           RECOVERY            |\n                      +-------------------------------+\n+\n   Reasm recovery is pretty similar to the ISPF recovery. Reasm is able to save\nthe current state and let you restart from the hot point in future.\n\n   The important notes about the REASM recovery are:\n   - Once you switched recovery ON, REASM will write the backup file after each\n'n' changes. In case you specified too small value the response time may\ndramatically grow up !\n\n   - You can preallocate the REASM recovery file as the sequential or\npartitioned data set. If you choose the library REASM will be able to keep any\nnumber of backup files as the members of this library. In this case the\nhandling of the library overflow is your responsibility.\n\n)PROC\n&ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REASE000": {"ttr": 1551, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00V\\x00\\x924\\x1f\\x00\\x95)\\x1f\\x18\\x06\\x00\\x1d\\x00\\x1d\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1995-10-18T18:06:56", "lines": 29, "newlines": 29, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%                     +-------------------------------+\n                      |  INTERACTIVE    DISASSEMBLER  |\n                      |       SECTION   LIST          |\n                      +-------------------------------+\n+\n   Once you leave the%\"CSECT\"+field in the entry panel blank, the Reasm section\nlist panel appears.  You can use this panel to select name of the section from\nthe previously chosen load module.  Section list is an ISPF table, which\ncontains names and attributes for all SD and LD names found. Each table row\npresents%CSECT+or%ENTRY+name.\n\n   You may scroll table, sort it and choose name using line%\"S\"+command.\n   %SORT N+ (SN)  This command sorts the table by names   in ascending  order.\n   %SORT A+ (SA)  This command sorts the table by offsets in ascending  order.\n   %SORT L+ (SL)  This command sorts the table by lengths in descending order.\n   %L name+       This command locates the specified name by prefix.\n                  (use the LOCATE command ONLY after the \"SORT N\" command)\n\n)PROC\n   &ZUP   = REA00000\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "REASMIDP": {"ttr": 1553, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x17\\x00\\x17\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 23, "newlines": 23, "modlines": 0, "user": "PGMVYC"}, "text": ")BODY\n      /**************************************************/\n      /*                                                */\n      /* This panel is unexecutable.                    */\n      /* You must fill password field(s) and date field */\n      /*                                                */\n      /**************************************************/\n)INIT\n  .RESP = END\n)PROC\n  &REAPWD01  = '47715206'      /* PASSWORD  1 FOR EC 1037 EXPRESS     */\n  &REAPWD02  = '45765703'      /* PASSWORD  2 FOR    4381 mmf         */\n  &REAPWD03  = '45765704'      /* PASSWORD  3 FOR    4381 mmf         */\n  &REAPWD04  = ''              /* PASSWORD  4 FOR ....................*/\n  &REAPWD05  = ''              /* PASSWORD  5 FOR ....................*/\n  &REAPWD06  = ''              /* PASSWORD  6 FOR ....................*/\n  &REAPWD07  = ''              /* PASSWORD  7 FOR ....................*/\n  &REAPWD08  = ''              /* PASSWORD  8 FOR ....................*/\n  &REAPWD09  = ''              /* PASSWORD  9 FOR ....................*/\n  &REAPWD10  = ''              /* PASSWORD 10 FOR ....................*/\n\n  &REAJDATE  = '99.320'        /* EXPIRATION DATE (LIMIT DATE)        */\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REASM01": {"ttr": 1555, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00 \\x00\\x924\\x1f\\x01\\x06\\x02\\x1f\\x15B\\x00l\\x00i\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xc3@@@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "2006-01-21T15:42:20", "lines": 108, "newlines": 105, "modlines": 0, "user": "PGMVC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       _   TYPE(INPUT)  INTENS(HIGH) CAPS(ON) JUST(LEFT)\n       \u00ac   TYPE(INPUT)  INTENS(NON)\n       $   TYPE(OUTPUT) INTENS(HIGH)          COLOR(YELLOW)\n       #   TYPE(OUTPUT) INTENS(LOW) CAPS(OFF) COLOR(TURQ)\n       @   TYPE(TEXT)   INTENS(HIGH)          COLOR(PINK)\n       ~   TYPE(TEXT)   INTENS(LOW)           HILITE(USCORE)\n)BODY\n%--------------------------- $REASID   +$REASVR % ------------------------------\n%COMMAND ===>_ZZCMD1                                                           +\n+\n+VALID COMMANDS:\n%  @R%     + - restore project from backup file (~recovery+)\n%\n+LOAD LIBRARY:\n+   PROJECT%===>_PRJ1    +\n+   GROUP  %===>_LIB1    %\n+   TYPE   %===>_TYP1    +\n+   MEMBER %===>_MEM     +       (~Blank to view the member list+)\n+   CSECT  %===>_CSECT   +       (~Blank to view the MAP of the member+)\n+\n+OTHER PARTITIONED DATA SET:\n+   DATA SET NAME %===>_DSN\n+   VOLUME SERIAL %===>_VOL   +  (~If data set is not cataloged+)\n+\n+DATA SET PASSWORD%===>\u00acPSWD    +(~If data set is password protected+)\n+\n+\n+        #REASCP\n)INIT\n  &REASID  = 'MVS REASM'\n  &REASVR  = 'ver &REASMVER'\n  &REASCP  = 'Copyright (C) 1985,1987,1991,1992,1998,2006 by Valentin Chernyak'\n  &REATEL  = '19 Clive Hills Rd., Edison, NJ, 08820; Phone:(732)452-1632'\n\n  .HELP = REAEP000\n  &ZZCMD1 = ' '\n\n  VGET (PDSREA)\n  IF (&PDSREA = NO)\n     .RESP = END\n     &PDSREA = &Z\n  IF (&PDSREA = YES)\n     .RESP = ENTER\n     &PDSREA = NO\n  VPUT (PDSREA)\n\n  VGET (#OSN) PROFILE\n  IF (&#OSN = ' ')\n      &#OSN = 'ZOS'\n  VPUT (#OSN) PROFILE\n\n  VGET (PRJ1 LIB1 TYP1 DSN MEM CSECT) PROFILE\n/*IF (&DSN \u00ac= ' ')\n/*  IF (.CURSOR \u00ac= 'VOL')\n/*    .CURSOR = DSN\n\n  /*****************************************/\n  /*       SET VARIABLES FOR PF-KEYS       */\n  /*       =========================       */\n  /*****************************************/\n  &ZPF05 = 'FIND'\n  &ZPF17 = 'FIND'\n  &ZPF06 = ':R'\n  &ZPF18 = ':R'\n  VPUT (ZPF05 ZPF17 ZPF06 ZPF18) PROFILE\n\n  /*****************************************/\n  /*       SET ISPF PANEL NAMES            */\n  /*****************************************/\n  &REAPAN01 = 'ISR01211'   /* ISPF LIBRARY */\n  &REAPAN02 = 'ISR01213'   /* OTHER DSN    */\n  &REAPAN03 = 'ISR01215'   /* PASSWORD     */\n  &REAPAN04 = 'ISR2D000'   /* EDIT MEMLIST */\n  &REAPAN05 = 'ISR2M001'   /* PRIMARY CMDS */\n\n\n\n)REINIT\n\n)PROC\n &FIELD = .CURSOR\n &POS   = .CSRPOS\n &IV    = .PFKEY\n IF (&ZZCMD1 \u00ac= 'R')\n    IF (&DSN = ' ' )\n      VER (&PRJ1 NONBLANK)\n      VER (&LIB1 NONBLANK)\n      VER (&TYP1 NONBLANK)\n      IF (&VOL \u00ac= ' ')\n        .MSG = ISRE094\n IF (&DSN \u00ac= ' ')\n   &ZDS = TRUNC(&DSN,1)\n   IF (&ZDS = '''')\n     &ZVAR = .TRAIL\n     &ZVAR2 = TRUNC(&ZVAR,'''')\n     IF (&ZVAR2 = &ZVAR)\n       &DSN = '&DSN&ZDS'\n VPUT (PRJ1 LIB1 TYP1 DSN MEM CSECT) PROFILE\n\n IF (&ZZCMD1 \u00ac= ' ')\n    VER(&ZZCMD1, LIST, R,M)\n\n &ZZCMD = &ZZCMD1\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REASM02": {"ttr": 1558, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x013\\x006\\x00\\x924\\x1f\\x01\\x06\\x02\\x1f\\x151\\x00E\\x00C\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xc3@@@@@'", "ispf": {"version": "01.51", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "2006-01-21T15:31:36", "lines": 69, "newlines": 67, "modlines": 0, "user": "PGMVC"}, "text": ")ATTR\n      /********************************************************/\n      /*   attributes for dynamic area AK-standard            */\n      /********************************************************/\n   08 TYPE(DATAIN ) INTENS(LOW )          CAPS(ON)                 /*  #ANO  */\n   09 TYPE(DATAIN )                       CAPS(ON)                 /*  #ANP  */\n   0A TYPE(DATAIN ) INTENS(NON )          CAPS(ON)                 /*  #ANN  */\n   0B TYPE(DATAIN ) INTENS(LOW )          CAPS(ON)                 /*  #ANF  */\n   12 TYPE(DATAIN ) INTENS(LOW )          CAPS(ON)   NUMERIC(ON)   /*  #NNO  */\n   13 TYPE(DATAIN )                       CAPS(ON)   NUMERIC(ON)   /*  #NNP  */\n   14 TYPE(DATAIN ) INTENS(NON )          CAPS(ON)   NUMERIC(ON)   /*  #NNN  */\n   15 TYPE(DATAIN ) INTENS(LOW )          CAPS(ON)   NUMERIC(ON)   /*  #NNF  */\n   01 TYPE(DATAOUT) INTENS(LOW ) SKIP(ON)                          /*  #AZO  */\n   02 TYPE(DATAOUT)              SKIP(ON)            COLOR(YELLOW) /*  #AZP  */\n   03 TYPE(DATAOUT) INTENS(NON ) SKIP(ON)                          /*  #AZN  */\n   04 TYPE(DATAOUT) INTENS(LOW ) SKIP(ON) ATTN(ON)                 /*  #AZF  */\n   05 TYPE(DATAOUT) INTENS(LOW ) SKIP(ON)            HILITE(BLINK) /*  #AZOM */\n   06 TYPE(DATAOUT)              SKIP(ON)            HILITE(BLINK) /*  #AZPM */\n\n   10 TYPE(DATAIN )                                                /*  #ANPL */\n   11 TYPE(DATAIN )  PAD(_)      CAPS(ON)                          /*  #ANPU */\n\n      /*************************************************************/\n      /* this field is necessary for reout after input with umods  */\n      /* '3F' value, which is usermod's will be translated to #anp */\n      /*************************************************************/\n   3F TYPE(DATAIN )                       CAPS(OFF)                /*  #ANP  */\n\n    @ TYPE(OUTPUT)  INTENS(LOW )          JUST(RIGHT)\n    $ TYPE(OUTPUT)  INTENS(HIGH)              COLOR(BLUE)\n    % TYPE(TEXT  )  INTENS(HIGH)                       COLOR(TURQ)\n    _ TYPE(INPUT)   INTENS(HIGH)          CAPS(ON)     COLOR(RED)\n\n    ~ TYPE(TEXT  )  INTENS(HIGH)       HILITE(USCORE)  COLOR(RED)\n    ` TYPE(TEXT  )  INTENS(LOW )       HILITE(USCORE)\n\n    # AREA(DYNAMIC) EXTEND(ON)            SCROLL(ON ) USERMOD(3F)\n)BODY EXPAND(//)\n@R02DSN                                                       $REASID   $REASVR\n%COMMAND ===>_ZZCMD                                           %SCROLL ===>_ZSCML\n~Cmd`Offset ...Object Code..~..Label.`.Oper .......... Operands and~Comments ...\n#SCREEN -----------------------/-/---------------------------------------------#\n)INIT\n.HELP   = REA00000\n.CURSOR = &FIELD\n.CSRPOS = &POS\nVGET    (ZSCML) PROFILE\nIF (&ZSCML = ' ')\n   &ZSCML  = 'PAGE'\n\n)PROC\n  VGET (ZSCROLLA)\n  &FIELD = .CURSOR\n  &POS   = .CSRPOS\n  &LVL   = LVLINE(SCREEN)\n  &ZZSC  = TRUNC(&ZSCML,1)\n\n  VER (&ZZSC,LIST,C,H,P)\n  &ZSCML = TRANS(&ZZSC, C,CSR, H,HALF, P,PAGE)\n  VPUT (ZSCML) PROFILE\n  &IV = .PFKEY\n\n  &SCROLL = &ZSCROLLA\n  IF (&SCROLL = 'PAGE')\n     &SCROLL = &ZSCML\n  IF (&SCROLL = ' ')\n     &SCROLL = &ZSCML\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REASM03": {"ttr": 1560, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x008\\x00\\x924\\x1f\\x01\\x06\\x02\\x1f\\x15E\\x00#\\x00\\x1f\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xc3@@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "2006-01-21T15:45:38", "lines": 35, "newlines": 31, "modlines": 0, "user": "PGMVC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       _   TYPE(INPUT)  INTENS(HIGH) CAPS(ON)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n       #   TYPE(OUTPUT) INTENS(LOW)\n       ~   TYPE(TEXT)   INTENS(LOW)  COLOR(TURQ) HILITE(USCORE)\n       |   TYPE(OUTPUT) INTENS(LOW)  COLOR(YELLOW)\n)BODY\n%--------------------------- $REASID   +$REASVR % ------------------------------\n%COMMAND ===>_RTBCMD                                          %SCROLL ===>_ZSCR\n+\n+                      CSECT MAP of the module $MEM     +\n+\n~   Name            Offset     Length    Type           Reference\n)MODEL\n_C#RTBNAME +     |RTBOFF  + |RTBLEN  +  #RTBTYPE+      #RTBREF    +\n)INIT\n  .HELP = REASE000\n  .CURSOR = RTBCMD\n  &RTBCMD = ' '\n  VGET (MEM ZSCR) PROFILE\n  IF (&ZSCR = ' ')\n      &ZSCR = 'CSR'\n  VPUT (ZSCR) PROFILE\n\n)REINIT\n\n)PROC\n   &ZZSC = TRUNC(&ZSCR,1)\n   VER (&ZZSC,NB)\n   VER (&ZZSC,LIST,C,H,P)\n   &ZSCR = TRANS(&ZZSC, C,CSR, H,HALF, P,PAGE)\n   VPUT (ZSCR) PROFILE\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REASM04": {"ttr": 1562, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 27, "newlines": 27, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       _   TYPE(INPUT)  INTENS(HIGH) CAPS(ON)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n       #   TYPE(OUTPUT) INTENS(LOW)\n       ~   TYPE(TEXT)   INTENS(LOW)  COLOR(TURQ) HILITE(USCORE)\n       |   TYPE(OUTPUT) INTENS(LOW)  COLOR(PINK) JUST(LEFT) PAD('.')\n)BODY\n%--------------------------- $REASID   +$REASVR % ------------------------------\n%COMMAND ===>_ZZCMD                                           %SCROLL ===>_ZSCML\n+\n+              Marked points for #R04DSN\n+\n~   Name            Offset     Description                                     +\n)MODEL\n_C#RQFNAME +     $RQFOFF  +   |RQFDESC                                         +\n)INIT\n  .HELP = REAMA000\n  .CURSOR = ZZCMD\n  &ZZCMD = ' '\n  &R04DSN = TRUNC(&R02DSN, ' ')\n\n)REINIT\n\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REASM05": {"ttr": 1793, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00X\\x00\\x924\\x1f\\x00\\x941\\x1f\\x12\\x18\\x00?\\x00?\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1994-11-07T12:18:58", "lines": 63, "newlines": 63, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       _   TYPE(INPUT)  INTENS(HIGH) CAPS(ON) JUST(LEFT)\n       \u00ac   TYPE(INPUT)  INTENS(NON)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n       #   TYPE(OUTPUT) INTENS(LOW) CAPS(OFF)\n       ~   TYPE(TEXT)   INTENS(LOW) HILITE(USCORE)\n)BODY\n%--------------------------- $REASID   +$REASVR % ------------------------------\n%COMMAND ===>_ZZCMD2                                                           +\n+\n+\n+  Define the SOURCE LIBRARY to save the project %CSECT   +\n+\n+\n+\n+SOURCE LIBRARY:\n+   PROJECT%===>_PRJ2    +\n+   GROUP  %===>_LIB2    +\n+   TYPE   %===>_TYP2    +\n+   MEMBER %===>_MEM2    +       (~* - to view member list+)\n+\n+OTHER PARTITIONED DATA SET:\n+   DATA SET NAME %===>_DSN2\n+   VOLUME SERIAL %===>_VOL2  +  (~If not cataloged+)\n+\n+DATA SET PASSWORD%===>\u00acPSWD2   +(~If password protected+)\n+\n+REPLACE MEMBER   %===>_YN2+     (YES or NO)\n+\n)INIT\n  .HELP = REAPRS00\n  &ZZCMD2 = ' '\n\n  VGET (PRJ2 LIB2 TYP2 YN2) PROFILE\n  IF (&YN2 = ' ')\n     &YN2 = 'NO'\n  IF (&DSN2 \u00ac= ' ')\n    IF (.CURSOR \u00ac= 'VOL2')\n      .CURSOR = DSN2\n\n  &ZLMDATE = &ZDATE\n  &ZLCDATE = &ZDATE\n  VPUT (ZLMDATE ZLCDATE)\n\n)PROC\n IF (&MEM2 \u00ac= '*')\n    VER (&MEM2 NAME)\n IF (&DSN2 = ' ' )\n    VER (&PRJ2 NONBLANK)\n    VER (&LIB2 NONBLANK)\n    VER (&TYP2 NONBLANK)\n    IF (&VOL2 \u00ac= ' ')\n       .MSG = ISRE094\n\n &Y   = TRUNC (&YN2,1)\n &YN2 = TRANS (&Y Y,YES, N,NO)\n VER (&YN2, LIST, YES,NO)\n\n VPUT (PRJ2 LIB2 TYP2 YN2) PROFILE\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REASM06": {"ttr": 1795, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x15\\x00\\x924\\x1f\\x01\\x06\\x02\\x1f\\x15@\\x00_\\x00[\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xc3@@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "2006-01-21T15:40:15", "lines": 95, "newlines": 91, "modlines": 0, "user": "PGMVC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       _   TYPE(INPUT)  INTENS(HIGH) CAPS(ON)\n       \u00ac   TYPE(INPUT)  INTENS(HIGH) CAPS(ON) NUMERIC(ON)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n       ~   TYPE(TEXT)   INTENS(HIGH) HILITE(USCORE) COLOR(TURQ)\n       `   TYPE(TEXT)   INTENS(HIGH) HILITE(USCORE) COLOR(PINK)\n       @   TYPE(TEXT)   INTENS(HIGH) COLOR(YELLOW)\n       |   TYPE(TEXT)   INTENS(HIGH) COLOR(YELLOW) HILITE(USCORE)\n)BODY\n%--------------------------- $REASID   +$REASVR % ------------------------------\n%COMMAND ===>_ZZCMD                                                            +\n\n`REASM profile values+\n\n~Data Presentation Options+                          ~Command Set Options+\n CHAR/HEX data length ===>\u00ac#I+    (       |1-20+)     OS mode ===>_#OSN+\n Perform AUTO actions ===>_#UC+   (     |Yes/No+)    (|360; 370; XA; ESA; ZOS+)\n DSECT names format   ===>_#DC   +(|Name/Offset+)\n Branch FORWARD  max  ===>\u00ac#A+    (       |0-99+)     Packed  ===>_#PC+ (Yes/No)\n Branch BACKWARD max  ===>\u00ac#B+    (       |0-99+)     Float   ===>_#FC+ (Yes/No)\n AUTOSAVE mode value  ===>\u00ac#T +   (   |0-99/Off+)\n\n\n\n\n\n\n\n\n\n\n\n\n)INIT\n  .HELP  = REAPRW00\n  &ZZCMD = ' '\n\n  VGET (REAINIT #I #UC #DC #A #B #T #OSN #PC #FC) PROFILE\n  IF (&REAINIT = ' ')\n      &#I  = 8\n      &#UC = 'YES'\n      &#DC = 'NAME'\n      &#A  = '12'\n      &#B  = '8'\n      &#T  = '0'\n      &#OSN = 'ZOS'\n      &#PC = 'NO'\n      &#FC = 'NO'\n  &REAINIT = '*'\n\n  IF (&#NOND \u00ac= ' ')\n     .RESP = END\n\n)PROC\n  VER (&#I,NONBLANK)\n  VER (&#I,RANGE,1,32,MSG=REAS034)\n  &#UC = TRANS (TRUNC (&#UC,1)  Y,YES N,NO  MSG=REAS067)\n  IF (&#UC = 'YES')\n     &#U = 1\n  ELSE\n     &#U = 0\n  &#DC = TRANS (TRUNC (&#DC,1)  N,NAME O,OFFSET MSG=REAS067)\n  IF (&#DC = 'OFFSET')\n     &#D = 1\n  ELSE\n     &#D = 0\n  VER (&#A,NONBLANK)\n  VER (&#A,RANGE,0,99)\n  VER (&#B,NONBLANK)\n  VER (&#B,RANGE,0,99)\n  VER (&#T,  NONBLANK)\n\n  VER (&#OSN, NONBLANK)\n  VER (&#OSN,LIST,360,370,SP,XA,ESA,ZOS)\n  &#O = TRANS (&#OSN  360,1 370,2 SP,3 XA,3 ESA,4, ZOS,5)\n\n  VER (&#PC, NONBLANK)\n  &#PC = TRANS (TRUNC (&#PC,1)  Y,YES N,NO  MSG=REAS067)\n  IF (&#PC = 'YES')\n     &#P = 1\n  ELSE\n     &#P = 0\n\n  VER (&#FC, NONBLANK)\n  &#FC = TRANS (TRUNC (&#FC,1)  Y,YES N,NO  MSG=REAS067)\n  IF (&#FC = 'YES')\n     &#F = 1\n  ELSE\n     &#F = 0\n\n  VPUT (REAINIT #I #UC #DC #A #B #T #OSN #PC #FC) PROFILE\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REA00000": {"ttr": 1798, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x924\\x1f\\x00\\x924\\x1f\\x01@\\x00.\\x00.\\x00\\x00\\xd7\\xc7\\xd4\\xe5\\xe8\\xc3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-12-06T00:00:00", "modifydate": "1992-12-06T01:40:00", "lines": 46, "newlines": 46, "modlines": 0, "user": "PGMVYC"}, "text": ")ATTR DEFAULT(%+_)\n       %   TYPE(TEXT)   INTENS(HIGH)\n       +   TYPE(TEXT)   INTENS(LOW)\n       $   TYPE(OUTPUT) INTENS(HIGH) COLOR(YELLOW)\n)BODY\n%TUTORIAL ------------------ $REASID   +$REASVR % -------------------- %TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n\n%           +--------------------------------------------------------+\n            |    I N T E R A C T I V E    D I S A S S E M B L E R    |\n            +--------------------------------------------------------+\n\n    %REASM+allows you to disassemble MVS load modules interactively.\n\n   The following topics are presented in sequence, or may be selected by number:\n    %0+- General introduction             %5+- Reasm line    commands\n    %1+- Reasm   entry panel              %6+- Reasm primary commands\n    %2+- Member  selection list           %7+- Reasm recovery\n    %3+- Section selection list           %8+- Marks (user labels)\n    %4+- Display screen format            %9+- Labels definition\n                                         %10+- Comments definition\n\n  The following topics will be presented only if selected by number:\n   %11+- Reasm control block preparation\n   %12+- Reasm DD cards\n   %13+- Miscellaneous notes\n+\n)PROC\n   &ZSEL = TRANS(&ZCMD\n                0,REAGE000\n                1,REAEP000\n                2,&REAPAN04\n                3,REASE000\n                4,READI000\n                5,REALI000\n                6,REAPR000\n                7,REARC000\n                8,REAMA000\n                9,REALA000\n               10,REACO000\n               11,*REACB000\n               12,*READD000\n               13,*REAMI000\n                )\n   &ZUP = ISR00003\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT239/FILE239.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT239", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}