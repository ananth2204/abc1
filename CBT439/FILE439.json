{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012033000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 352716, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 10, "INMDSNAM": "CBT.V500.FILE439.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 352716, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 352716, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE439.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x07\\x05'", "DS1TRBAL": "b'\\xca\\x8a'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03-\\x00\\x01\\x03-\\x00\\x08\\x00\\x08'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$DOC": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x995\\x0f\\x00\\x995\\x0f\\x12(\\x00b\\x00b\\x00\\x00\\xe5\\xd4\\xc9\\xc5\\xd3\\xd2\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-16T00:00:00", "modifydate": "1999-12-16T12:28:00", "lines": 98, "newlines": 98, "modlines": 0, "user": "VMIELKE"}, "text": "        PDSX - PARTITIONED DATASET MEMBER CROSS - REFERENCE\n        ---------------------------------------------------\n\n1. WHAT IS PDSX?\n      WITH PDSX YOU CAN FIND OUT WHICH DATASET(S) ON YOUR\n      SYSTEM CONTAIN A GIVEN MEMBER.\n      UNDER TSO YOU SIMPLY ENTER\n         PDSX <MEMBERNAME>\n      AND YOU WILL BE SHOWN A LIST OF ALL APPLICABLE\n      DATASETS, FROM WHERE YOU CAN DIRECTLY EDIT OR BROWSE\n      THE REQUESTED MEMBER(S).\n\n2. HOW DOES IT WORK?\n      EVERY NIGHT WE RUN A VTOC SCAN ON ALL OUR DISK PACKS\n      (WE DO THIS ANYWAY FOR RECOVERY PURPOSES, SO THERE IS NO\n       EXTRA OVERHEAD). WE USE THE VTOC PROGRAM FROM THE CBT TAPE\n       FOR THIS.\n       THEN WE FILTER THE VTOC OUTPUT TO CREATE A LIST OF ALL\n       DESIRED PO / PDSE - DATASETS.\n       THE DIRECTORIES OF THESE DATASETS ARE READ, THE RESULT IS\n       SORTED AND LOADED INTO A VSAM KSDS.\n       THE DIRECTORY SCAN TAKES ABOUT 15 MIN ELAPSED TIME AND\n       ABOUT 1.5 CPU MINUTES FOR ABOUT 4,500 DATASETS AND\n       600,000 MEMBERS.\n\n3. INSTALLATION\n\n   COPY THE LOAD MODULES PDSMEM1 AND PDSMEM4 TO A LOAD\n   LIBRARY OR RECOMPILE THEM.\n\n   3.1 THE BATCH PART\n       MODIFY THE SAMPLE JOB IN MEMBER $BATCH TO MEET YOUR\n       STANDARDS.\n       MODIFY THE VTOCFLTR EXEC TO EXCLUDE FILE NOT WANTED\n       IN YOUR XREF (I.E. ISPF PROFILES, CONFIDENTIAL FILES...)\n       PLAN TO RUN THE JOB ON A REGULAR BASIS.\n\n   3.2 ONLINE\n       COPY THE PANELS(PDSMEM2A,PDSMEM2B,PDSHLP2A) TO A PANEL\n       LIBRARY.\n       COPY THE REXX EXEC \"PDSX\" TO YOUR SYSPROC/SYSEXEC FILE\n       AND MODIFY THE LIBDEF STATEMENT TO POINT TO YOUR\n       PANEL LIBRARY.\n\n4. KNOWN PROBLEMS\n   PO DATASETS ARE OPENED EVERY NIGHT BY PDSX TO SCAN THEIR\n   DIRECTORIES. THIS CAUSES THEIR LAST REFERENCE DATE TO BE\n   CHANGED.\n   IF YOU USE HSM, HSM WILL NEVER CONSIDER THESE DATASETS FOR\n   MIGRATION, BECAUSE THEY SEEM TO HAVE BEEN ACCESSED RECENTLY.\n   FOR US THIS IS NOT A PROBLEM, BECAUSE WE DO NOT INDEX USER\n   LIBRARIES, AND PRODUCTION/SYSTEM LIBRARIES ARE NOT CONSIDERED\n   MIGRATION CANDIDATES BY OUR SHOP.\n   POSSIBLE SOLUTIONS COULD BE\n      - TO DO A \"QUIET\" OPEN ON THE DATASET, I KNOW SOME\n        DISK MANAGEMENT TOOLS OPEN FILE WITHOUT CHANGING THE\n        LAST REFERENCE DATE, OR\n      - LOOK AT THE LAST REFERENCE DATE FOR A DATASET BEFORE\n        READING ITS DIRECTORY. IF IT HAS NOT BEEN CHANGED,\n        THE DIRECTORY INFORMATION COLLECTED DURING THE PREVIOUS\n        RUN CAN SIMPLY BE COPIED FROM THE EXISTING XREF - DATASET.\n        BUT THIS WOULD REQUIRE A LITTLE BIT OF LOGIC TO BE ADDED\n\n   SOMETIMES I HEAR PEOPLE COMPLAIN THAT THEY DON'T SEE A MEMBER\n   THAT THEY KNOW IT EXISTS. THIS IS BECAUSE YOU CANNOT EXPECT\n   PDSX TO KNOW ABOUT MEMBERS CREATED AFTER IT HAS BEEN RUN.\n   THE SAME IS TRUE FOR DELETED MEMBERS.\n\n5. ENHANCEMENTS\n   WHAT I WOULD LIKE TO DO (IF I HAD THE TIME) :\n\n   - FIX THE HSM PROBLEM ABOVE\n   - ADD RACF SUPPORT TO SHOW ONLY DATASETS ACCESSIBLE TO\n     A USER\n   - SWITCH FROM VTOC SCANS TO DCOLLECT. THIS WOULD MAKE\n     IT POSSIBLE TO KEEP DIRECTORY INFORMATION FOR MIGRATED\n     AND / OR BACKED UP DATASETS.\n   - ABILITY TO DO A PARTIAL INDEX REFRESH (FOR SELECTED\n     DATASETS OR VOLUMES)\n\n6. COPYRIGHT\n\n\n   COPYRIGHT 1990,1999 BY VOLKER MIELKE\n                          VOLKER MIELKE EDV - BERATUNG\n   ALL RIGHTS RESERVED\n\n   YOU MAY USE, REDISTRIBUTE AND MODIFY THIS PROGRAM,\n   BUT IT MUST NOT BE SOLD.\n\n   USE OF THIS PROGRAM IS AT YOUR OWN RISK|\n\n7. COMMENTS\n\n   PLEASE SEND COMMENTS (BUT NOT COMPLAINTS|) BY EMAIL TO\n\n   VMIELKE\u00a7DEBITEL.NET\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$BATCH": {"ttr": 519, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x995\\x0f\\x00\\x995\\x0f\\x12(\\x00L\\x00L\\x00\\x00\\xe5\\xd4\\xc9\\xc5\\xd3\\xd2\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-16T00:00:00", "modifydate": "1999-12-16T12:28:00", "lines": 76, "newlines": 76, "modlines": 0, "user": "VMIELKE"}, "text": "//PDSXBAT  JOB (...),PDSXREF\n/*JOBPARM SYSAFF=*\n//*---------------------------------------------------------------------\n//*   CREATE PDS XREF FILE\n//*---------------------------------------------------------------------\n//VTOC   EXEC  PGM=IKJEFT01\n//SYSPROC  DD  DSN=PDSX.PDSMEM.EXEC,DISP=SHR\n//SYSTSPRT DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//SYSOUT   DD  SYSOUT=*\n//SYSTSIN  DD  *\n PROFILE NOPREFIX\n DELETE 'PDSX.PDSMEM.TEMP' PURGE\n DELETE 'PDSX.PDSMEM.VTOCOUT.DATAV' PURGE\n ALLOC F(VTOCOUT) DA('PDSX.PDSMEM.VTOCOUT.DATAV') -\n                      NEW CAT SP(5 5) TRACKS\n VTOC ALL NOHEADING LIMIT(DSO EQ PO) -\n   PRINT(NEW,(DSNAME VOLUME REFDT))\n %VTOCFLTR\n//*\n//* CREATE MEMBER LIST\n//*\n//MEMLIST EXEC PGM=PDSMEM1\n//STEPLIB DD DSN=...    <=== YOUR STEPLIB GOES HERE\n//OUTPUT DD DSN=PDSX.PDSMEM.TEMP,\n// DISP=(,CATLG,DELETE),UNIT=WORK,\n// SPACE=(TRK,(50,50),RLSE),\n// DCB=(RECFM=VB,LRECL=1000,BLKSIZE=20000)\n//SYSPRINT DD SYSOUT=*\n//VTOCIN DD DSN=PDSX.PDSMEM.VTOCOUT.DATAV,DISP=SHR\n//*\n//* SORT MEMBER LIST\n//*\n//SORT     EXEC  PGM=SORT,PARM='SIZE(MAX)'\n//SYSOUT   DD    SYSOUT=*\n//SORTIN   DD    DSN=PDSX.PDSMEM.TEMP,DISP=SHR\n//SORTOUT DD DSN=&&TEMPSORT,\n// DISP=(NEW,PASS),UNIT=WORK,\n// SPACE=(TRK,(50,50),RLSE),\n// DCB=(RECFM=VB,LRECL=1000,BLKSIZE=20000)\n//SORTWK01 DD    UNIT=WORK,SPACE=(CYL,(20),RLSE)\n//SORTWK02 DD    UNIT=WORK,SPACE=(CYL,(20),RLSE)\n//SORTWK03 DD    UNIT=WORK,SPACE=(CYL,(20),RLSE)\n//SYSIN    DD    *\n   RECORD   TYPE=V\n   OMIT     COND=((5,1,EQ,C'M',AND,6,8,LT,C'$       '),\n               OR,(5,1,EQ,C'M',AND,6,8,GT,C'Z9999999')),FORMAT=CH\n   SORT     FIELDS=(5,17,CH,A)\n   SUM      FIELDS=NONE\n//*\n//* DEFINE CLUSTER AND LOAD\n//*\n//LOAD EXEC PGM=IDCAMS\n//CLUSTER DD DSN=PDSX.PDSMEM.DATAV,DISP=OLD\n//SYSPRINT DD SYSOUT=*\n//IN DD DSN=&&TEMPSORT,DISP=SHR\n//SYSIN DD *\n  DELETE (PDSX.PDSMEM.DATAV) -\n           PURGE\n  SET LASTCC = 0\n  SET MAXCC  = 0\n  DEF CLUSTER -\n      (NAME(PDSX.PDSMEM.DATAV) -\n      VOLUMES(*,*) -\n      SHR(2 3) -\n      CYL(20 1) -\n      UNIQUE SPEED)-\n    DATA -\n      (NAME(PDSX.PDSMEM.DATAV.DATA) -\n      RECORDSIZE (20 61) -\n      KEYS (17 0) -\n      FREESPACE (0 0)) -\n    INDEX -\n      (NAME(PDSX.PDSMEM.DATAV.INDEX))\n\n REPRO INFILE(IN) ODS(PDSX.PDSMEM.DATAV)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$COMPILE": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x995\\x0f\\x00\\x995\\x0f\\x12(\\x00\\x1e\\x00\\x1e\\x00\\x00\\xe5\\xd4\\xc9\\xc5\\xd3\\xd2\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-16T00:00:00", "modifydate": "1999-12-16T12:28:00", "lines": 30, "newlines": 30, "modlines": 0, "user": "VMIELKE"}, "text": "//COMPILE  JOB (...)\n//*\n//* COMPILE AND LINK PL/1 - PROGRAMS\n//*\n//PLICOMPI PROC SYSLBLK=3200,MBR=NOTSPECIFIED\n//PLI      EXEC PGM=IEL0AA,REGION=6000K,\n//      PARM='NOMACRO,NUMBER,GN,OBJECT,NODECK,CS(60),AG',\n//SYSLIB   DD  DSN=PP.PDSX2.PLI,DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(MOD,PASS),UNIT=SYSDA,\n//             SPACE=(80,(250,100)),DCB=(BLKSIZE=&SYSLBLK)\n//SYSUT1   DD  DSN=&&SYSUT1,UNIT=SYSDA,\n//             SPACE=(1024,(200,50),,CONTIG,ROUND),DCB=BLKSIZE=1024\n//SYSIN    DD  DSN=PP.PDSX2.PLI(&MBR),DISP=SHR\n//LKED     EXEC PGM=IEWL,PARM='XREF,LIST,LET',COND=(9,LT,PLI)\n//SYSLIB   DD  DSN=SYS1.SISPLOAD,DISP=SHR     <== ISPLINK\n//         DD  DSN=PP.PLI.PLIBASE,DISP=SHR\n//         DD  DSN=PP.PLI.SIBMBASE,DISP=SHR\n//         DD  DSN=PP.PDSX2.LOAD,DISP=SHR <== PDSALLOC/PDSFREE\n//SYSLMOD  DD  DSN=PP.PDSX2.LOAD(&MBR),DISP=SHR\n//SYSUT1   DD  DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(1024,(200,20)),\n//             DCB=BLKSIZE=1024\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)\n//SYSIN    DD  DUMMY\n// PEND\n//COMP1    EXEC PLICOMPI,MBR=PDSMEM1\n//COMP2    EXEC PLICOMPI,MBR=PDSMEM2\n//COMP3    EXEC PLICOMPI,MBR=PDSMEM3\n//COMP4    EXEC PLICOMPI,MBR=PDSMEM4\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE439": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x99\\x08?\\x00\\x995_!\"\\x00~\\x00\\x02\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1999-03-24T00:00:00", "modifydate": "1999-12-21T21:22:00", "lines": 126, "newlines": 2, "modlines": 0, "user": "SBGOLOB"}, "text": "//***FILE 439 is from Volker Mielke of Bremen, Germany and          *   FILE 439\n//*           contains his PDSX utility to scan all partitioned     *   FILE 439\n//*           datasets in an installation for the presence of a     *   FILE 439\n//*           given member name.                                    *   FILE 439\n//*                                                                 *   FILE 439\n//*           This file is the source library for PDSX.             *   FILE 439\n//*                                                                 *   FILE 439\n//*             Volker Mielke                                       *   FILE 439\n//*             St. - Gallener - Str. 17                            *   FILE 439\n//*             28325 Bremen                                        *   FILE 439\n//*             GERMANY                                             *   FILE 439\n//*                                                                 *   FILE 439\n//*             Phone: +49 421 4099152                              *   FILE 439\n//*             Email:  vmielke@debitel.net                         *   FILE 439\n//*                                                                 *   FILE 439\n//*  ----------------------------------------------------------     *   FILE 439\n//*                                                                 *   FILE 439\n//*     PDSX - PARTITIONED DATASET MEMBER CROSS-REFERENCE           *   FILE 439\n//*                                                                 *   FILE 439\n//*         \"Volker Mielke\" <vmielke@debitel.net>                   *   FILE 439\n//*                                                                 *   FILE 439\n//*     1. WHAT IS PDSX?                                            *   FILE 439\n//*           WITH PDSX YOU CAN FIND OUT WHICH DATASET(S)           *   FILE 439\n//*           ON YOUR SYSTEM CONTAIN A GIVEN MEMBER.                *   FILE 439\n//*           UNDER TSO YOU SIMPLY ENTER                            *   FILE 439\n//*              PDSX <MEMBERNAME>                                  *   FILE 439\n//*           AND YOU WILL BE SHOWN A LIST OF ALL                   *   FILE 439\n//*           APPLICABLE DATASETS, FROM WHERE YOU CAN               *   FILE 439\n//*           DIRECTLY EDIT OR BROWSE THE REQUESTED                 *   FILE 439\n//*           MEMBER(S).                                            *   FILE 439\n//*                                                                 *   FILE 439\n//*     2. HOW DOES IT WORK?                                        *   FILE 439\n//*           EVERY NIGHT WE RUN A VTOC SCAN ON ALL OUR             *   FILE 439\n//*           DISK PACKS (WE DO THIS ANYWAY FOR RECOVERY            *   FILE 439\n//*           PURPOSES, SO THERE IS NO EXTRA OVERHEAD). WE          *   FILE 439\n//*           USE THE VTOC PROGRAM FROM THE CBT TAPE FOR            *   FILE 439\n//*           THIS.                                                 *   FILE 439\n//*                                                                 *   FILE 439\n//*           THEN WE FILTER THE VTOC OUTPUT TO CREATE A            *   FILE 439\n//*           LIST OF ALL DESIRED PO / PDSE - DATASETS.             *   FILE 439\n//*                                                                 *   FILE 439\n//*           THE DIRECTORIES OF THESE DATASETS ARE READ,           *   FILE 439\n//*           THE RESULT IS SORTED AND LOADED INTO A VSAM           *   FILE 439\n//*           KSDS.  THE DIRECTORY SCAN TAKES ABOUT 15 MIN          *   FILE 439\n//*           ELAPSED TIME AND ABOUT 1.5 CPU MINUTES FOR            *   FILE 439\n//*           ABOUT 4,500 DATASETS AND 600,000 MEMBERS.             *   FILE 439\n//*                                                                 *   FILE 439\n//*     3. INSTALLATION                                             *   FILE 439\n//*                                                                 *   FILE 439\n//*           COPY THE LOAD MODULES PDSMEM1 AND PDSMEM4 TO          *   FILE 439\n//*           A LOAD LIBRARY OR RECOMPILE THEM.                     *   FILE 439\n//*                                                                 *   FILE 439\n//*        3.1 THE BATCH PART                                       *   FILE 439\n//*            MODIFY THE SAMPLE JOB IN MEMBER $BATCH TO            *   FILE 439\n//*            MEET YOUR STANDARDS.                                 *   FILE 439\n//*                                                                 *   FILE 439\n//*            MODIFY THE VTOCFLTR EXEC TO EXCLUDE FILE NOT         *   FILE 439\n//*            WANTED IN YOUR XREF (I.E. ISPF PROFILES,             *   FILE 439\n//*            CONFIDENTIAL FILES...)  PLAN TO RUN THE JOB          *   FILE 439\n//*            ON A REGULAR BASIS.                                  *   FILE 439\n//*                                                                 *   FILE 439\n//*        3.2 ONLINE                                               *   FILE 439\n//*            COPY THE PANELS(PDSMEM2A,PDSMEM2B,PDSHLP2A)          *   FILE 439\n//*            TO A PANEL LIBRARY.                                  *   FILE 439\n//*                                                                 *   FILE 439\n//*            COPY THE REXX EXEC \"PDSX\" TO YOUR                    *   FILE 439\n//*            SYSPROC/SYSEXEC FILE AND MODIFY THE LIBDEF           *   FILE 439\n//*            STATEMENT TO POINT TO YOUR PANEL LIBRARY.            *   FILE 439\n//*                                                                 *   FILE 439\n//*     4. KNOWN PROBLEMS                                           *   FILE 439\n//*        PO DATASETS ARE OPENED EVERY NIGHT BY PDSX TO            *   FILE 439\n//*        SCAN THEIR DIRECTORIES. THIS CAUSES THEIR LAST           *   FILE 439\n//*        REFERENCE DATE TO BE CHANGED.                            *   FILE 439\n//*                                                                 *   FILE 439\n//*        IF YOU USE HSM, HSM WILL NEVER CONSIDER THESE            *   FILE 439\n//*        DATASETS FOR MIGRATION, BECAUSE THEY SEEM TO             *   FILE 439\n//*        HAVE BEEN ACCESSED RECENTLY.  FOR US THIS IS             *   FILE 439\n//*        NOT A PROBLEM, BECAUSE WE DO NOT INDEX USER              *   FILE 439\n//*        LIBRARIES, AND PRODUCTION/SYSTEM LIBRARIES ARE           *   FILE 439\n//*        NOT CONSIDERED MIGRATION CANDIDATES BY OUR               *   FILE 439\n//*        SHOP.                                                    *   FILE 439\n//*                                                                 *   FILE 439\n//*        POSSIBLE SOLUTIONS COULD BE                              *   FILE 439\n//*           - TO DO A \"QUIET\" OPEN ON THE DATASET, I              *   FILE 439\n//*             KNOW SOME DISK MANAGEMENT TOOLS OPEN FILE           *   FILE 439\n//*             WITHOUT CHANGING THE LAST REFERENCE DATE,           *   FILE 439\n//*                                                                 *   FILE 439\n//*             OR                                                  *   FILE 439\n//*           - LOOK AT THE LAST REFERENCE DATE FOR A               *   FILE 439\n//*             DATASET BEFORE READING ITS DIRECTORY. IF            *   FILE 439\n//*             IT HAS NOT BEEN CHANGED, THE DIRECTORY              *   FILE 439\n//*             INFORMATION COLLECTED DURING THE PREVIOUS           *   FILE 439\n//*             RUN CAN SIMPLY BE COPIED FROM THE EXISTING          *   FILE 439\n//*             XREF - DATASET.  BUT THIS WOULD REQUIRE A           *   FILE 439\n//*             LITTLE BIT OF LOGIC TO BE ADDED                     *   FILE 439\n//*                                                                 *   FILE 439\n//*        SOMETIMES I HEAR PEOPLE COMPLAIN THAT THEY DON'T         *   FILE 439\n//*        SEE A MEMBER THAT THEY KNOW IT EXISTS. THIS IS           *   FILE 439\n//*        BECAUSE YOU CANNOT EXPECT PDSX TO KNOW ABOUT             *   FILE 439\n//*        MEMBERS CREATED AFTER IT HAS BEEN RUN.  THE SAME         *   FILE 439\n//*        IS TRUE FOR DELETED MEMBERS.                             *   FILE 439\n//*                                                                 *   FILE 439\n//*     5. ENHANCEMENTS                                             *   FILE 439\n//*        WHAT I WOULD LIKE TO DO (IF I HAD THE TIME) :            *   FILE 439\n//*                                                                 *   FILE 439\n//*        - FIX THE HSM PROBLEM ABOVE                              *   FILE 439\n//*        - ADD RACF SUPPORT TO SHOW ONLY DATASETS                 *   FILE 439\n//*          ACCESSIBLE TO A USER                                   *   FILE 439\n//*        - SWITCH FROM VTOC SCANS TO DCOLLECT. THIS               *   FILE 439\n//*          WOULD MAKE IT POSSIBLE TO KEEP DIRECTORY               *   FILE 439\n//*          INFORMATION FOR MIGRATED AND / OR BACKED UP            *   FILE 439\n//*          DATASETS.                                              *   FILE 439\n//*        - ABILITY TO DO A PARTIAL INDEX REFRESH (FOR             *   FILE 439\n//*          SELECTED DATASETS OR VOLUMES)                          *   FILE 439\n//*                                                                 *   FILE 439\n//*     6. COPYRIGHT                                                *   FILE 439\n//*                                                                 *   FILE 439\n//*        COPYRIGHT 1990,1999 BY VOLKER MIELKE                     *   FILE 439\n//*                            VOLKER MIELKE EDV - BERATUNG         *   FILE 439\n//*        ALL RIGHTS RESERVED                                      *   FILE 439\n//*                                                                 *   FILE 439\n//*        YOU MAY USE, REDISTRIBUTE AND MODIFY THIS                *   FILE 439\n//*        PROGRAM, BUT IT MUST NOT BE SOLD.                        *   FILE 439\n//*                                                                 *   FILE 439\n//*        USE OF THIS PROGRAM IS AT YOUR OWN RISK.                 *   FILE 439\n//*                                                                 *   FILE 439\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE440": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x99\\x08?\\x00\\x995_!$\\x00\\x0f\\x00\\x02\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1999-03-24T00:00:00", "modifydate": "1999-12-21T21:24:00", "lines": 15, "newlines": 2, "modlines": 0, "user": "SBGOLOB"}, "text": "//***FILE 440 is from Volker Mielke of Bremen, Germany and          *   FILE 440\n//*           contains his PDSX utility to scan all partitioned     *   FILE 440\n//*           datasets in an installation for the presence of a     *   FILE 440\n//*           given member name.  See File 439 for more doc.        *   FILE 440\n//*                                                                 *   FILE 440\n//*           This file is the load library for PDSX.               *   FILE 440\n//*                                                                 *   FILE 440\n//*             Volker Mielke                                       *   FILE 440\n//*             St. - Gallener - Str. 17                            *   FILE 440\n//*             28325 Bremen                                        *   FILE 440\n//*             GERMANY                                             *   FILE 440\n//*                                                                 *   FILE 440\n//*             Phone: +49 421 4099152                              *   FILE 440\n//*             Email:  vmielke@debitel.net                         *   FILE 440\n//*                                                                 *   FILE 440\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DEFCL": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x995\\x0f\\x00\\x995\\x0f\\x12(\\x00\\x16\\x00\\x16\\x00\\x00\\xe5\\xd4\\xc9\\xc5\\xd3\\xd2\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-16T00:00:00", "modifydate": "1999-12-16T12:28:00", "lines": 22, "newlines": 22, "modlines": 0, "user": "VMIELKE"}, "text": "//DEFCLUST JOB (...)\n//DEFCL EXEC PGM=IDCAMS\n//SYSPRINT DD SYSOUT=*\n//SYSIN DD *\n  DELETE (PDSX.PDSMEM.DATA) -\n           PURGE\n  SET LASTCC = 0\n  SET MAXCC  = 0\n  DEF CLUSTER -\n      (NAME(PDSX.PDSMEM.DATA) -\n      VOLUMES(*) -\n      SHR(2 3) -\n      CYL(1 1) -\n      UNIQUE SPEED)-\n    DATA -\n      (NAME(PDSX.PDSMEM.DATA.DATA) -\n      RECORDSIZE (20 61) -\n      KEYS (17 0) -\n      FREESPACE (0 0)) -\n    INDEX -\n      (NAME(PDSX.PDSMEM.DATA.INDEX))\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PDSALLO$": {"ttr": 531, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x996?\\x00\\x996?\\x15!\\x03q\\x03q\\x00\\x00\\xe7\\xd4\\xc9\\xe3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-29T00:00:00", "modifydate": "1999-12-29T15:21:00", "lines": 881, "newlines": 881, "modlines": 0, "user": "XMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "PDSALLOC": {"ttr": 1028, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x995\\x0f\\x00\\x995\\x0f\\x12(\\x00]\\x00]\\x00\\x00\\xe5\\xd4\\xc9\\xc5\\xd3\\xd2\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-16T00:00:00", "modifydate": "1999-12-16T12:28:00", "lines": 93, "newlines": 93, "modlines": 0, "user": "VMIELKE"}, "text": "PDSALLOC CSECT\n*\n* THIS ROUTINE DYNAMICALLY ALLOCATES A DATASET VIA SVC 99\n* WITH A DISPOSITION OF SHR.\n* THE PARAMETERS MUST BE PASSED ACCORDING TO STANDARD\n* LINKING CONVENTIONS,THAT IS:\n*    R1 MUST POINT TO A LIST OF FOUR ADDRESSES POINTING TO\n*       - THE DDNAME ( 8 CHARACTERS )\n*       - THE DSNAME ( 44 CHARACTERS )\n*                         PADDED WITH BLANKS IF NECCESSARY.\n*       - THE FEEDBACK FIELD ( 1 FULLWORD)\n*       - THE INFO/ERROR FIELD ( 1 FULLWORD)\n*       - THE DSORG FIELD ( 1 HALFWORD)\n*\n* 25.11.90: ADDED DSORG RETURN TO DETECT CATALOGED DATASETS NOT\n*           IN VTOC. PREVENTS ABEND S213 ON DS OPEN.\n*\n         STM   14,12,12(13)\n         BALR  11,0\n         USING *,11\n         ST    13,SAVE13\n         LA    13,SAVEAREA\n*\n* PARM LIST ADDRESS TO REG 6 - 9\n*\n         LM    6,10,0(1)\n         MVC   DDNAME(8),0(6)\n         MVC   DSNAME(44),0(7)\n         LA    1,S99RBP\n*\n* MARK END OF REQUEST LIST\n*\n         OI    S99TUPLE,HIGHBIT\n         OI    S99RBP,HIGHBIT\n*\n* DYNALLOC SVC\n*\n         SVC   99\n*\n* RETURN TO CALLER\n*\n         ST    15,0(8)             PUT RETURN CODE IN 3RD PARM\n         L     15,S99ERROR\n         ST    15,0(9)             ERROR / INFO FIELD\n         LH    15,DSORG\n         STH   15,0(10)            DSORG\n         L     13,SAVE13\n         LM    14,12,12(13)\n         LA    15,0\n         BR    14\n*\n* DATA AREAS\n*\nSAVE13   DS    F\nSAVEAREA DS    20F\n*\n* DYNAMIC ALLOCATION PARMS\n*\nHIGHBIT  EQU   X'80'\nS99RBP   DC    A(S99RB)            REQUEST BLOCK POINTER\nS99RB    DS    0F                  REQUEST BLOCK\n         DC    X'14'               LENGTH=20\n         DC    X'01'               VERB CODE = ALLOCATE BY DSNAME\n* S99NOMNT = DO NOT MOUNT VOLUMES\n         DC    X'2000'             FLAGS1\nS99ERROR DC    H'0'                ERROR CODE\n         DC    H'0'                INFO CODE\n         DC    A(S99TUPL)          POINTER TO TEXT UNIT POINTER LIST\n         DC    F'0'\n         DC    F'0'\n* INDICATE WAIT FOR DATASET (REMOVED)\n*        DC    X'04000000'         FLAGS2\nS99TUPL  DC    A(TXTU1)\n         DC    A(TXTU2)\n         DC    A(TXTU3)\nS99TUPLE DC    A(TXTU4)\nTXTU1    DC    X'0001'             DDNAME SPECIFICATION\n         DC    X'0001'             # OF PARMS\n         DC    H'8'                PARM LENGTH\nDDNAME   DC    CL8' '              DDNAME\nTXTU2    DC    X'0002'             DSNAME SPECIFICATION\n         DC    X'0001'             # OF PARMS\n         DC    H'44'               PARM LENGTH\nDSNAME   DC    CL44' '             DSNAME\nTXTU3    DC    X'0057'             DSORG RETURN\n         DC    X'0001'             # OF PARMS\n         DC    H'2'                PARM LENGTH\nDSORG    DC    H'0'                DSORG\nTXTU4    DC    X'0004'             STATUS SPECIFICATION\n         DC    X'0001'             # OF PARMS\n         DC    X'0001'             PARM LENGTH\n         DC    X'08'               DISP=SHR\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PDSDIR": {"ttr": 1031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x995\\x0f\\x00\\x995\\x0f\\x12(\\x002\\x002\\x00\\x00\\xe5\\xd4\\xc9\\xc5\\xd3\\xd2\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-16T00:00:00", "modifydate": "1999-12-16T12:28:00", "lines": 50, "newlines": 50, "modlines": 0, "user": "VMIELKE"}, "text": " PDSDIR: PROC(DDNAME,MAXMEM,MEMTAB) RETURNS(BIN FIXED(31));\n /* SUBROUTINE TO READ PDS DIRECTORY                    */\n /* DDNAME    DDNAME WHERE LIBRARY IS ALLOCATED         */\n /* MAXMEM    MAX NUMBER OF MEMBER NAMES TO BE RETURNED */\n /* MEMTAB    MEMBER NAME TABLE                         */\n     DCL DDNAME CHAR(8) ,\n         MAXMEM BIN FIXED(31),\n         MEMTAB(*) CHAR(8);\n     DCL IN1 FILE RECORD SEQUENTIAL INPUT ENV(U,BLKSIZE(256));\n     DCL I BIN FIXED STATIC INIT(0);\n     DCL MEM_ANZ BIN FIXED(31) STATIC INIT(0);\n     DCL A POINTER;\n     DCL 1 DIRBLK,\n           2  COUNT BIT(16),\n           2  ENTRIES(254) CHAR(1),\n         1 ENTRY BASED(A),\n           2 NAME CHAR(8),\n           2 TTR CHAR(3),\n           2 INDIC,\n             3 ALIAS BIT(1),\n             3 TTRS BIT(2),\n             3 USERCT  BIT(5),\n             3 USERDT CHAR(62),\n     (SUBSTR,HIGH,UNSPEC, LENGTH) BUILTIN,\n     (LEN,PTR) BIN FIXED(31);\n ON ENDFILE(IN1) GO TO FINISH;\n OPEN FILE (IN1) TITLE(DDNAME);\n MEM_ANZ = 0;\n NEXTBLK: READ FILE(IN1) INTO (DIRBLK);\n   LEN = COUNT;\n   PTR = 1;\n NEXTENT: A=ADDR(ENTRIES(PTR));\n   IF NAME = HIGH(8) THEN GO TO FINISH;\n   I = USERCT;\n   MEM_ANZ = MEM_ANZ + 1;\n   IF MEM_ANZ > MAXMEM THEN\n      DO;\n         MEM_ANZ = -1;\n         GOTO FINISH;\n      END;\n   MEMTAB(MEM_ANZ) = NAME;\n   IF I = 0 THEN GOTO SKIPUDAT;\n   SKIPUDAT:\n   PTR = PTR + 12 + 2 * USERCT;\n   IF PTR + 2 > LEN THEN GO TO NEXTBLK;\n   GO TO NEXTENT;\n FINISH: CLOSE FILE(IN1);\n RETURN(MEM_ANZ);\n END PDSDIR;\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PDSFREE": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x995\\x0f\\x00\\x995\\x0f\\x12(\\x00&\\x00&\\x00\\x00\\xe5\\xd4\\xc9\\xc5\\xd3\\xd2\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-16T00:00:00", "modifydate": "1999-12-16T12:28:00", "lines": 38, "newlines": 38, "modlines": 0, "user": "VMIELKE"}, "text": "PDSFREE  CSECT\n         STM   14,12,12(13)\n         BALR  10,0\n         USING *,10\n         ST    13,SAVE13\n         LA    13,SAVEAREA\n         L     7,0(1)\n         MVC   DDNAME(8),0(7)\n         LA    1,S99RBP\n         OI    S99TUPL,HIGHBIT\n         OI    S99RBP,HIGHBIT\n         SVC   99\n         L     13,SAVE13\n         LM    14,12,12(13)\n         LA    15,0\n         BR    14\nSAVE13   DS    F\nSAVEAREA DS    20F\n*\n* DYNAMIC ALLOCATION PARMS\n*\nHIGHBIT  EQU   X'80'\nS99RBP   DC    A(S99RB)            REQUEST BLOCK POINTER\nS99RB    DS    0F                  REQUEST BLOCK\n         DC    X'14'               LENGTH=20\n         DC    X'02'               VERB CODE = ALLOCATE BY DSNAME\n         DC    X'0000'             FLAGS1\n         DC    H'0'                ERROR CODE\n         DC    H'0'                INFO CODE\n         DC    A(S99TUPL)          POINTER TO TEXT UNIT POINTER LIST\n         DC    F'0'\n         DC    F'0'                FLAGS2\nS99TUPL  DC    A(TXTU1)\nTXTU1    DC    X'0001'             DDNAME SPECIFICATION\n         DC    X'0001'             # OF PARMS\n         DC    H'8'                PARM LENGTH\nDDNAME   DC    CL8' '              DDNAME\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PDSFREE$": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x996?\\x00\\x996?\\x15 \\x02\\xf9\\x02\\xf9\\x00\\x00\\xe7\\xd4\\xc9\\xe3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-29T00:00:00", "modifydate": "1999-12-29T15:20:00", "lines": 761, "newlines": 761, "modlines": 0, "user": "XMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "PDSHLP2A": {"ttr": 1289, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x995\\x0f\\x00\\x995\\x0f\\x12(\\x00\\x0e\\x00\\x0e\\x00\\x00\\xe5\\xd4\\xc9\\xc5\\xd3\\xd2\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-16T00:00:00", "modifydate": "1999-12-16T12:28:00", "lines": 14, "newlines": 14, "modlines": 0, "user": "VMIELKE"}, "text": ")ATTR\n~ TYPE(OUTPUT) INTENS(HIGH) JUST(LEFT)\n)BODY\n+%Line commands:\n+\n+ %B +  -   Browse member\n+ %E +  -   Edit member\n+ %V +  -   View member\n+ %BD+  -   Browse dataset\n+ %ED+  -   Edit dataset\n+ %VD+  -   View dataset\n+\n+\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PDSMEM1": {"ttr": 1291, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x995\\x0f\\x00\\x995\\x0f\\x12(\\x00\\x9e\\x00\\x9e\\x00\\x00\\xe5\\xd4\\xc9\\xc5\\xd3\\xd2\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-16T00:00:00", "modifydate": "1999-12-16T12:28:00", "lines": 158, "newlines": 158, "modlines": 0, "user": "VMIELKE"}, "text": " PDSMEM: PROC OPTIONS(MAIN);\n /* PROGRAM TO CREATE MEMBERLIST */\n /* READS DATASET  NAMES FROM FILE VTOC */\n /* PROCESSES DIRECTORY FOR EACH DATASET */\n /* WRITES MEMBER INFORMATION TO FILE OUTPUT */\n DCL PLIXOPT CHAR(100) STATIC VAR EXT INIT('NOREPORT');\n\n ON ERROR BEGIN;\n    HIGHCC = 8;\n    PUT SKIP EDIT('*** ERROR ***')(A);\n    GOTO NEXT_DSN;\n END;\n\n DCL  SYSPRINT FILE PRINT,\n      SUBSTR BUILTIN,\n      LISTCIN FILE RECORD SEQL INPUT,\n      VTOCIN  FILE RECORD SEQL INPUT,\n      EOF_SYSIN BIT(1) STATIC INIT('0'B),\n      EOF_VTOCIN BIT(1) STATIC INIT('0'B),\n      VTOCIN_REC CHAR(150) STATIC INIT(' '),\n      LISTCIN_REC CHAR(121) STATIC VAR INIT(''),\n      ADDR BUILTIN,\n      (TIME,DATE) BUILTIN,\n      MAX BUILTIN;\n\n DCL MEMTAB (10000) CHAR(8),\n     MEMANZ BIN FIXED(31) STATIC INIT(0),\n     MEMGES BIN FIXED(31) STATIC INIT(0);\n\n DCL  OUTPUT FILE RECORD SEQL OUTPUT,\n      PDSALLOC ENTRY EXT OPTIONS(ASM INTER RETCODE),\n      PDSFREE  ENTRY EXT OPTIONS(ASM INTER RETCODE),\n      (I,POS) BIN FIXED(31) STATIC INIT(0),\n      PLIRETV BUILTIN,\n      SYSIN_REC CHAR(80) STATIC INIT(' '),\n      DDNAME CHAR(8) STATIC INIT('$LIB'),\n      RC BIN FIXED(31) STATIC INIT(0),\n      DSN CHAR(44) STATIC INIT(' '),\n      INFO(2) BIN FIXED(15) STATIC INIT(0),\n      RETCODE BIN FIXED(31) STATIC INIT(0),\n      DSORG BIN FIXED(15) STATIC INIT(0),\n      HIGHCC BIN FIXED(31) STATIC INIT(0);\n\n DCL 1 I_REC STATIC,\n       2 RECTYPE CHAR(1) INIT('I'),\n       2 DATZEIT CHAR(20) INIT(' ');\n DCL 1 D_REC STATIC,\n       2 RECTYPE CHAR(1) INIT('D'),\n       2 DNUM PIC'(8)9' INIT(0),\n       2 VOLSER CHAR(8) INIT(' '),\n       2 DSN CHAR(44) INIT(' ');\n DCL 1 M_REC STATIC,\n       2 RECTYPE CHAR(1) INIT('M'),\n       2 MEM CHAR(8) INIT(' '),\n       2 DNUM PIC'(8)9';\n\n %INCLUDE PDSDIR;\n\n PUT SKIP EDIT('--- READING DIRECTORIES ---')(A);\n\n ON ENDFILE(VTOCIN) BEGIN;\n    EOF_VTOCIN = '1'B;\n    GOTO NEXT_DSN;\n END;\n ON UNDEFINEDFILE(VTOCIN) BEGIN;\n    EOF_VTOCIN = '1'B;\n    GOTO NEXT_DSN;\n END;\n ON ENDFILE(SYSIN) BEGIN;\n    EOF_SYSIN = '1'B;\n    GOTO NEXT_DSN;\n END;\n ON UNDEFINEDFILE(SYSIN) BEGIN;\n    EOF_SYSIN = '1'B;\n    GOTO NEXT_DSN;\n END;\n ON ENDFILE(LISTCIN) GOTO ENDE;\n ON UNDEFINEDFILE(LISTCIN) GOTO ENDE;\n OPEN FILE(OUTPUT);\n\n I_REC.DATZEIT = DATE||TIME;\n WRITE FILE(OUTPUT) FROM(I_REC);\n\n READ_INPUT:\n IF \u00acEOF_SYSIN THEN\n    DO;\n       GET SKIP EDIT(SYSIN_REC)(A(80));\n       DSN = SUBSTR(SYSIN_REC,1,44);\n       VOLSER = ' ';\n    END;\n    ELSE\n    IF \u00acEOF_VTOCIN THEN\n    DO;\n       READ FILE(VTOCIN) INTO(VTOCIN_REC);\n       IF SUBSTR(VTOCIN_REC,1,1) = ' ' THEN\n          DO;\n             DSN=SUBSTR(VTOCIN_REC,2,44);\n             VOLSER=SUBSTR(VTOCIN_REC,47,6);\n          END;\n       ELSE GOTO READ_INPUT;\n    END;\n    ELSE\n    DO;\n       LISTCIN_REC = (121)' ';\n       VOLSER = ' ';\n       READ FILE(LISTCIN) INTO(LISTCIN_REC);\n       IF SUBSTR(LISTCIN_REC,1,10) = '0NONVSAM -' THEN\n          DSN=SUBSTR(LISTCIN_REC,18,44);\n       ELSE GOTO READ_INPUT;\n    END;\n    IF DSN = ' ' THEN GOTO READ_INPUT;\n    IF SUBSTR(DSN,1,1) = '*' THEN\n       DO;\n           PUT SKIP EDIT(SYSIN_REC)(A,X(1));\n           GOTO READ_INPUT;\n       END;\n    PUT SKIP EDIT(DSN)(A(44));\n TRYALLOC: CALL PDSALLOC(DDNAME,DSN,RC,INFO,DSORG);\n    RETCODE = RC;\n    IF RETCODE \u00ac= 0 THEN\n       DO;\n           IF INFO(1) = 528 THEN /* DATA SET IN USE */\n                 HIGHCC = MAX(HIGHCC,8);\n           ELSE\n                 HIGHCC = MAX(HIGHCC,4);\n                 PUT EDIT('FILE NOT READ      ')(A);\n                 PUT SKIP EDIT('RC=',RETCODE)(X(44),A,F(10))\n                              (',INFO1=',INFO(1))(A,F(10))\n                              (',INFO2=',INFO(2))(A,F(10));\n                 CALL PDSFREE(DDNAME);\n                 GOTO NEXT_DSN;\n       END;\n IF DSORG \u00ac= 512 THEN\n    DO;\n       PUT EDIT('NOT PARTITIONED')(A);\n       CALL PDSFREE(DDNAME);\n       GOTO NEXT_DSN;\n    END;\n MEMANZ = PDSDIR(DDNAME,10000,MEMTAB);\n MEMGES = MEMGES + MEMANZ;\n D_REC.DNUM = D_REC.DNUM + 1;\n PUT EDIT('     ',MEMANZ,' MEMBER    (#'||D_REC.DNUM||')')(A,F(5),A);\n M_REC.DNUM = D_REC.DNUM;\n D_REC.DSN = DSN;\n WRITE FILE(OUTPUT) FROM(D_REC);\n DO I = 1 TO MEMANZ WHILE(MEMANZ > 0);\n    M_REC.MEM = MEMTAB(I);\n    WRITE FILE(OUTPUT) FROM(M_REC);\n END;\n\n CALL PDSFREE(DDNAME);\n\n NEXT_DSN: GOTO READ_INPUT;\n\n ENDE: PUT SKIP;\n CLOSE FILE(OUTPUT);\n PUT SKIP EDIT('MEMBER TOTAL:  ',MEMGES)(A,F(10));\n END PDSMEM;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PDSMEM2A": {"ttr": 1540, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x995\\x0f\\x00\\x995\\x0f\\x12(\\x00\\x18\\x00\\x18\\x00\\x00\\xe5\\xd4\\xc9\\xc5\\xd3\\xd2\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-16T00:00:00", "modifydate": "1999-12-16T12:28:00", "lines": 24, "newlines": 24, "modlines": 0, "user": "VMIELKE"}, "text": ")ATTR DEFAULT(%|_)\n ? TYPE(OUTPUT) INTENS(LOW)\n @ TYPE(OUTPUT) INTENS(HIGH)\n ~ TYPE(OUTPUT) INTENS(HIGH) JUST(ASIS)\n \" TYPE(INPUT) JUST(LEFT) CAPS(ON)\n)BODY\n%-&ZUSER-------------------   PDS MEMBER XREF   --------------------------------\n|COMMAND%===>_ZCMD                                           |SCROLL%===>_AMT |\n|\n|MEMBER %===>_PDSMEMM | ( MEMBER NAME OR MASK )   ?PDSCUR|VON?PDSMAX|\n|                                       %-|=BACK,%+|=FORW,%<|=TOP,%>|=BOT\n| S |  MEMBER | DATA SET                                          VOLSER\n%-------------------------------------------------------------------------------\n)MODEL\n|\"Z | @PDSMEMS ?PDSDSNL                                        | ?PDSVOL|   |\n)INIT\n &VARS = '(PDSSEL)'\n &PDSSEL = ' '\n &AMT  = 'CSR '\n .CURSOR = PDSMEMM\n .HELP = PDSHLP2A\n)REINIT\n .CURSOR = PDSMEMM\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PDSMEM2B": {"ttr": 1542, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x995\\x0f\\x00\\x995\\x0f\\x12(\\x00\\x12\\x00\\x12\\x00\\x00\\xe5\\xd4\\xc9\\xc5\\xd3\\xd2\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-16T00:00:00", "modifydate": "1999-12-16T12:28:00", "lines": 18, "newlines": 18, "modlines": 0, "user": "VMIELKE"}, "text": ")ATTR\n ? TYPE(OUTPUT) INTENS(LOW)\n @ TYPE(OUTPUT) INTENS(HIGH) JUST(LEFT)\n ~ TYPE(OUTPUT) INTENS(HIGH) JUST(ASIS)\n \" TYPE(INPUT) JUST(LEFT) CAPS(ON)\n)BODY\n%-&ZUSER---------------   PDS MEMBER XREF INFO   -------------------------------\n+COMMAND%===>_ZCMD                                           +SCROLL%===>_AMT +\n+\n+ LETZTER LAUF AM ~PDSDAT  +UM~PDSZEIT    +\n+\n+ DATA SET                                       +  NUMMER\n%-------------------------------------------------------------------------------\n)MODEL\n+@PDSDSNL                                        +@PDSDNUM  +               +\n)INIT\n &AMT  = 'CSR '\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PDSMEM4": {"ttr": 1544, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x995\\x0f\\x00\\x995\\x0f\\x12(\\x00\\xc0\\x00\\xc0\\x00\\x00\\xe5\\xd4\\xc9\\xc5\\xd3\\xd2\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-16T00:00:00", "modifydate": "1999-12-16T12:28:00", "lines": 192, "newlines": 192, "modlines": 0, "user": "VMIELKE"}, "text": " PDSMEM4: PROC(PARM) OPTIONS(MAIN);\n /* PROGRAM TO DISPLAY MEMBER SEARCH RESULTS */\n DCL PARM CHAR(8) VAR;\n DCL PLIXOPT CHAR(40) VAR INIT('ISA(50K)') EXT STATIC;\n %INCLUDE PDS2FILE; /* DEKLARATIONEN FUER EINGABE-DATEI */\n %INCLUDE PDS2ISPF; /* ISPF-DECLARES */\n %INCLUDE PDS2CMEM;\n %INCLUDE PDS2READ;\n %INCLUDE PDS2SDSN;\n\n DCL (SUBSTR,TRANSLATE,STG,PLIRETV) BUILTIN;\n DCL PDSMEMALT CHAR(8) STATIC INIT(' ');\n DCL XDSN CHAR(80) STATIC INIT(' ');\n DCL ROWCNT BIN FIXED(31) STATIC INIT(10000);\n DCL MEMSTACK(500) CHAR(8) STATIC;\n MEMSTACK(1) = ' ';\n PDSMAX = 0;\n\n CALL ISPLINK('CONTROL ','ERRORS ','RETURN ');\n\n IF PARM \u00ac= ' ' THEN\n   DO;\n      PDSMEMM = PARM;\n      PDSMEMALT = PDSMEMM;\n      PDSCUR,PDSMAX = 1;\n      MEMSTACK(PDSCUR) = PDSMEMM;\n   END;\n\n CALL READMEM(PDSMEMM);\n SHOW_PANEL: CALL ISPLINK('TBDISPL ','PDSMEMT ','PDSMEM2A ');\n IF PLIRETV >= 8 THEN RETURN;\n\n IF SUBSTR(PDSMEMM,1,5) = '-DROP' THEN\n    DO;\n       PDSCUR = 0;\n       PDSMEMM = ' ';\n    END;\n IF SUBSTR(PDSMEMM,1,1) = '-' THEN\n    DO;\n       IF PDSCUR > 1 THEN\n          DO;\n             PDSMEMM = MEMSTACK(PDSCUR-1);\n             PDSCUR = PDSCUR - 1;\n             CALL READMEM(PDSMEMM);\n             GOTO SHOW_PANEL;\n          END;\n       ELSE PDSMEMM = MEMSTACK(1);\n    END;\n IF SUBSTR(PDSMEMM,1,1) = '+' THEN\n    DO;\n       IF PDSCUR < PDSMAX THEN\n          DO;\n             PDSMEMM = MEMSTACK(PDSCUR+1);\n             PDSCUR = PDSCUR + 1;\n             CALL READMEM(PDSMEMM);\n             GOTO SHOW_PANEL;\n          END;\n       ELSE PDSMEMM = MEMSTACK(PDSMAX);\n    END;\n IF SUBSTR(PDSMEMM,1,1) = '<' THEN\n    DO;\n             PDSCUR = 1;\n             PDSMEMM = MEMSTACK(PDSCUR);\n             CALL READMEM(PDSMEMM);\n             GOTO SHOW_PANEL;\n    END;\n IF SUBSTR(PDSMEMM,1,1) = '>' THEN\n    DO;\n             PDSCUR = PDSMAX;\n             PDSMEMM = MEMSTACK(PDSCUR);\n             CALL READMEM(PDSMEMM);\n             GOTO SHOW_PANEL;\n    END;\n IF PDSMEMM \u00ac= PDSMEMALT THEN\n    DO;\n       PDSMEMALT = PDSMEMM;\n       CALL READMEM(PDSMEMM);\n       IF PDSMAX < 500 THEN PDSMAX = PDSMAX + 1;\n       PDSCUR = PDSMAX;\n       MEMSTACK(PDSCUR) = PDSMEMM;\n       GOTO SHOW_PANEL;\n    END;\n\n IF ZTDSELS = 0 THEN GOTO SHOW_PANEL;\n\n PROCLOOP:\n\n SELECT (PDSSEL);\n\n    WHEN ('E ') DO;  /* MEMBER EDITIEREN */\n                   XDSN = '''' ||\n                          STRIP(PDSDSNL) ||\n                          '(' ||\n                          STRIP(PDSMEML) ||\n                          ')''';\n                   CALL ISPLINK('CONTROL ','DISPLAY ','SAVE ');\n                   CALL ISPLINK('EDIT ',XDSN,PDSVOL);\n                   CALL ISPLINK('CONTROL ','DISPLAY ','RESTORE ');\n                END;\n\n    WHEN ('B ') DO; /* MEMBER ANZEIGEN */\n                   XDSN = '''' ||\n                          STRIP(PDSDSNL) ||\n                          '(' ||\n                          STRIP(PDSMEML) ||\n                          ')''';\n                   CALL ISPLINK('CONTROL ','DISPLAY ','SAVE ');\n                   CALL ISPLINK('BROWSE ',XDSN,PDSVOL);\n                   CALL ISPLINK('CONTROL ','DISPLAY ','RESTORE ');\n                END;\n\n    WHEN ('V ') DO; /* VIEW MEMBER     */\n                   XDSN = '''' ||\n                          STRIP(PDSDSNL) ||\n                          '(' ||\n                          STRIP(PDSMEML) ||\n                          ')''';\n                   CALL ISPLINK('CONTROL ','DISPLAY ','SAVE ');\n           ISPBUFFER = 'CMD(VIEW ' || XDSN || 'VOL(' || PDSVOL||') ) ';\n                   CALL ISPLINK('SELECT ',STG(ISPBUFFER),ISPBUFFER);\n                   CALL ISPLINK('CONTROL ','DISPLAY ','RESTORE ');\n                END;\n\n    WHEN ('VD') DO; /* VIEW DATASET    */\n                   XDSN = '''' ||\n                          STRIP(PDSDSNL) ||\n                          '''';\n                   CALL ISPLINK('CONTROL ','DISPLAY ','SAVE ');\n           ISPBUFFER = 'CMD(VIEW ' || XDSN || 'VOL(' || PDSVOL||') ) ';\n                   CALL ISPLINK('SELECT ',STG(ISPBUFFER),ISPBUFFER);\n                   CALL ISPLINK('CONTROL ','DISPLAY ','RESTORE ');\n                END;\n\n    WHEN ('I') DO; /* DATASET INFO    */\n                   XDSN = '''' ||\n                          STRIP(PDSDSNL) ||\n                          '''';\n                   CALL ISPLINK('CONTROL ','DISPLAY ','SAVE ');\n    ISPBUFFER = 'CMD(DSINFO ' || XDSN || ' )' ;\n                   CALL ISPLINK('SELECT ',STG(ISPBUFFER),ISPBUFFER);\n                   CALL ISPLINK('CONTROL ','DISPLAY ','RESTORE ');\n                END;\n\n\n    WHEN ('ED') DO; /* DATEI EDITIEREN */\n                   XDSN = '''' ||\n                          STRIP(PDSDSNL) || '''';\n                   CALL ISPLINK('CONTROL ','DISPLAY ','SAVE ');\n                   CALL ISPLINK('EDIT ',XDSN);\n                   CALL ISPLINK('CONTROL ','DISPLAY ','RESTORE ');\n                END;\n\n    WHEN ('BD') DO; /* DATEI ANZEIGEN */\n                   XDSN = '''' ||\n                          STRIP(PDSDSNL) || '''' ;\n                   CALL ISPLINK('CONTROL ','DISPLAY ','SAVE ');\n                   CALL ISPLINK('BROWSE ',XDSN,PDSVOL);\n                   CALL ISPLINK('CONTROL ','DISPLAY ','RESTORE ');\n                END;\n\n    WHEN ('M ') DO; /* MEMBER LIST */\n                END;\n\n    OTHER ;\n END;\n PDSSEL = ' ';\n\n NEXTROW: IF ZTDSELS > 1 THEN\n             DO;\n                CALL ISPLINK('TBDISPL ','PDSMEMT ');\n                GOTO PROCLOOP;\n             END;\n\n GOTO SHOW_PANEL;\n\n STRIP: PROC(S) RETURNS(CHAR(80) VAR);\n DCL S CHAR(*),\n     (IX,JX) BIN FIXED,\n     (LENGTH,SUBSTR) BUILTIN,\n     R CHAR(80) INIT(' ');\n JX = 0;\n DO IX = 1 TO LENGTH(S);\n    IF SUBSTR(S,IX,1) \u00ac= ' ' THEN\n       DO;\n          JX = JX + 1;\n          SUBSTR(R,JX,1) = SUBSTR(S,IX,1);\n       END;\n END;\n RETURN(SUBSTR(R,1,JX));\n END STRIP;\n\n END;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PDSX": {"ttr": 1548, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x995\\x0f\\x00\\x995\\x0f\\x12(\\x00\\n\\x00\\n\\x00\\x00\\xe5\\xd4\\xc9\\xc5\\xd3\\xd2\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-16T00:00:00", "modifydate": "1999-12-16T12:28:00", "lines": 10, "newlines": 10, "modlines": 0, "user": "VMIELKE"}, "text": "/* REXX */\nARG MEMBER\n/* ALLOCATE XREF CLUSTER */\n\"ALLOC F(PDSFILE) DA('PDSX.PDSMEM.DATAV') SHR REU\"\n/* ADD YOUR PANEL LIBRARY */\nADDRESS ISPEXEC,\n\"LIBDEF ISPPLIB DATASET ID('YOUR PANEL LIBRARY')\"\n\"CALL 'RZ22.SYS.LOAD(PDSMEM4)' '/\"MEMBER\"'\"\nADDRESS ISPEXEC \"LIBDEF ISPPLIB\"\nRETURN\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PDS2CDSN": {"ttr": 1550, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x995\\x0f\\x00\\x995\\x0f\\x12(\\x00\\x0e\\x00\\x0e\\x00\\x00\\xe5\\xd4\\xc9\\xc5\\xd3\\xd2\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-16T00:00:00", "modifydate": "1999-12-16T12:28:00", "lines": 14, "newlines": 14, "modlines": 0, "user": "VMIELKE"}, "text": " CREDSNT: PROC; /* ANLEGEN DATEI-TABELLE */\n\n /* TABELLE BEENDEN,FALLS NOCH VORHANDEN */\n\n DO UNTIL(PLIRETV \u00ac= 0);\n    CALL ISPLINK('TBEND ','PDSDSNT ');\n END;\n\n /* TABELLE ANLEGEN */\n\n CALL ISPLINK('TBCREATE ','PDSDSNT ','PDSDNUM ',\n               'PDSDSNL ','NOWRITE ');\n\n END CREDSNT;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PDS2CMEM": {"ttr": 1552, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x995\\x0f\\x00\\x995\\x0f\\x12(\\x00\\x0e\\x00\\x0e\\x00\\x00\\xe5\\xd4\\xc9\\xc5\\xd3\\xd2\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-16T00:00:00", "modifydate": "1999-12-16T12:28:00", "lines": 14, "newlines": 14, "modlines": 0, "user": "VMIELKE"}, "text": " CREMEMT: PROC; /* ANLEGEN MEMBER-TABELLE */\n\n /* TABELLE BEENDEN,FALLS NOCH VORHANDEN */\n\n DO UNTIL(PLIRETV \u00ac= 0);\n    CALL ISPLINK('TBEND ','PDSMEMT ');\n END;\n\n /* TABELLE ANLEGEN */\n\n CALL ISPLINK('TBCREATE ','PDSMEMT ',' ',\n               '(PDSMEMS,PDSMEML,PDSDSNL,PDSDNUM,PDSVOL) ','NOWRITE ');\n\n END CREMEMT;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PDS2FILE": {"ttr": 1554, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x995\\x0f\\x00\\x995\\x0f\\x12(\\x00\\x0f\\x00\\x0f\\x00\\x00\\xe5\\xd4\\xc9\\xc5\\xd3\\xd2\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-16T00:00:00", "modifydate": "1999-12-16T12:28:00", "lines": 15, "newlines": 15, "modlines": 0, "user": "VMIELKE"}, "text": " DCL PDSFILE FILE RECORD KEYED SEQL INPUT ENV(VSAM GENKEY);\n DCL REC_PTR POINTER;\n DCL 1 I_REC BASED(REC_PTR),\n       2 RECTYPE CHAR(1) INIT('I'),\n       2 DATZEIT CHAR(20) INIT(' ');\n DCL 1 D_REC BASED(REC_PTR),\n       2 RECTYPE CHAR(1) INIT('D'),\n       2 DNUM PIC'(8)9' INIT(0),\n       2 VOLSER CHAR(8) INIT(' '),\n       2 DSN CHAR(44) INIT(' ');\n DCL 1 M_REC BASED(REC_PTR),\n       2 RECTYPE CHAR(1) INIT('M'),\n       2 MEM CHAR(8) INIT(' '),\n       2 DNUM PIC'(8)9';\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PDS2ISPF": {"ttr": 1556, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x995\\x0f\\x00\\x995\\x0f\\x12(\\x00;\\x00;\\x00\\x00\\xe5\\xd4\\xc9\\xc5\\xd3\\xd2\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-16T00:00:00", "modifydate": "1999-12-16T12:28:00", "lines": 59, "newlines": 59, "modlines": 0, "user": "VMIELKE"}, "text": " DCL ISPLINK ENTRY EXT OPTIONS(ASM INTER RETCODE),\n     ISPEXEC ENTRY EXT OPTIONS(ASM INTER RETCODE);\n\n DCL ISPBUFFER CHAR(250) STATIC INIT(' ');\n\n DCL VLENGTH  BIN FIXED(31) STATIC INIT(0);\n\n DCL ZTDSELS BIN FIXED(31) STATIC INIT(0);\n CALL ISPLINK('VDEFINE ','ZTDSELS ',\n                          ZTDSELS,'FIXED ',STG(ZTDSELS));\n DCL PDSCUR BIN FIXED(31) STATIC INIT(0);\n CALL ISPLINK('VDEFINE ','PDSCUR ',\n                          PDSCUR,'FIXED ',STG(PDSCUR));\n DCL PDSMAX  BIN FIXED(31) STATIC INIT(0);\n CALL ISPLINK('VDEFINE ','PDSMAX  ',\n                          PDSMAX ,'FIXED ',STG(PDSMAX));\n DCL PDSDNUM  CHAR(8) STATIC INIT(' ');\n CALL ISPLINK('VDEFINE ','PDSDNUM ',PDSDNUM,'CHAR ',STG(PDSDNUM));\n DCL PDSVOL  CHAR(6) STATIC INIT(' ');\n CALL ISPLINK('VDEFINE ','PDSVOL ',PDSVOL,'CHAR ',STG(PDSDNUM));\n DCL PDSMEMM  CHAR(8) STATIC INIT(' ');\n CALL ISPLINK('VDEFINE ','PDSMEMM ',PDSMEMM,'CHAR ',STG(PDSMEMM));\n DCL PDSMEMS  CHAR(8) STATIC INIT(' ');\n CALL ISPLINK('VDEFINE ','PDSMEMS ',PDSMEMS,'CHAR ',STG(PDSMEMS));\n DCL PDSMEML  CHAR(8) STATIC INIT(' ');\n CALL ISPLINK('VDEFINE ','PDSMEML ',PDSMEML,'CHAR ',STG(PDSMEML));\n DCL PDSSEL   CHAR(8) STATIC INIT(' ');\n CALL ISPLINK('VDEFINE ','PDSSEL ',PDSSEL,'CHAR ',STG(PDSSEL));\n DCL PDSDSNL  CHAR(44) STATIC INIT(' ');\n CALL ISPLINK('VDEFINE ','PDSDSNL ',PDSDSNL,'CHAR ',STG(PDSDSNL));\n DCL PDSZEIT  CHAR(8) STATIC INIT(' ');\n CALL ISPLINK('VDEFINE ','PDSZEIT ',PDSZEIT,'CHAR ',STG(PDSZEIT));\n DCL PDSDAT   CHAR(8) STATIC INIT(' ');\n CALL ISPLINK('VDEFINE ','PDSDAT ',PDSDAT,'CHAR ',STG(PDSDAT));\n DCL ZVERB    CHAR(8) STATIC INIT(' ');\n CALL ISPLINK('VDEFINE ','ZVERB ',ZVERB,'CHAR ',STG(ZVERB));\n DCL CSRPOS   CHAR(8) STATIC INIT(' ');\n CALL ISPLINK('VDEFINE ','CSRPOS ',CSRPOS,'CHAR ',STG(CSRPOS));\n DCL CURSOR   CHAR(8) STATIC INIT(' ');\n CALL ISPLINK('VDEFINE ','CURSOR ',CURSOR,'CHAR ',STG(CURSOR));\n DCL ZSCROLLD CHAR(8) STATIC INIT('0');\n CALL ISPLINK('VDEFINE ','ZSCROLLD ',ZSCROLLD,'CHAR ',STG(ZSCROLLD));\n DCL ZSCROLLA CHAR(8) STATIC INIT('0');\n CALL ISPLINK('VDEFINE ','ZSCROLLA ',ZSCROLLA,'CHAR ',STG(ZSCROLLA));\n DCL ZCMD  CHAR(48) STATIC INIT(' ');\n CALL ISPLINK('VDEFINE ','ZCMD ',\n                          ZCMD,'CHAR ',STG(ZCMD));\n DCL CMD1  CHAR(48) STATIC INIT(' ');\n CALL ISPLINK('VDEFINE ','CMD1 ',\n                          CMD1,'CHAR ',STG(CMD1));\n DCL CMD2  CHAR(48) STATIC INIT(' ');\n CALL ISPLINK('VDEFINE ','CMD2 ',\n                          CMD2,'CHAR ',STG(CMD2));\n DCL CMD3  CHAR(48) STATIC INIT(' ');\n CALL ISPLINK('VDEFINE ','CMD3 ',\n                          CMD3,'CHAR ',STG(CMD3));\n DCL ZUSER CHAR(8) STATIC INIT(' ');\n CALL ISPLINK('VDEFINE ','ZUSER ',\n                          ZUSER,'CHAR ',STG(ZUSER));\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PDS2RDSN": {"ttr": 1558, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x995\\x0f\\x00\\x995\\x0f\\x12(\\x00\\x0e\\x00\\x0e\\x00\\x00\\xe5\\xd4\\xc9\\xc5\\xd3\\xd2\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-16T00:00:00", "modifydate": "1999-12-16T12:28:00", "lines": 14, "newlines": 14, "modlines": 0, "user": "VMIELKE"}, "text": " READDSN: PROC(DSNUM);\n DCL DSNUM PIC'(8)9';\n\n DCL KEY CHAR(17) STATIC VAR INIT('');\n KEY = 'D' || DSNUM;\n\n /* DATEI LESEN */\n ON ENDFILE(PDSFILE) GOTO ENDE_LESEN;\n ON KEY(PDSFILE) GOTO ENDE_LESEN;\n OPEN FILE(PDSFILE);\n READ FILE(PDSFILE) SET(REC_PTR) KEY(KEY);\n CLOSE FILE(PDSFILE);\n\n END READDSN;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PDS2READ": {"ttr": 1560, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x995\\x0f\\x00\\x995\\x0f\\x12(\\x00F\\x00F\\x00\\x00\\xe5\\xd4\\xc9\\xc5\\xd3\\xd2\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-16T00:00:00", "modifydate": "1999-12-16T12:28:00", "lines": 70, "newlines": 70, "modlines": 0, "user": "VMIELKE"}, "text": " READMEM: PROC(MASKE);\n DCL MASKE CHAR(8);\n\n DCL KEY CHAR(17) STATIC VAR INIT(''),\n     TOKEY CHAR(17) STATIC INIT(' ');\n\n DCL I BIN FIXED,\n     HIGHMASK CHAR(8) STATIC INIT(' '),\n     LASTMEM CHAR(8) STATIC INIT(' '),\n     LOW BUILTIN,\n     HIGH BUILTIN,\n     INDEX BUILTIN;\n\n /* MEMBER-TABELLE NEU ANLEGEN */\n CALL CREMEMT;\n\n /* SCHLUESSEL AUFBAUEN */\n I = INDEX(MASKE,'*');\n IF I = 0 THEN I = 8; ELSE I = I-1;\n KEY = 'M' || SUBSTR(MASKE,1,I);\n HIGHMASK = HIGH(8);\n SUBSTR(HIGHMASK,1,I) = SUBSTR(MASKE,1,I);\n LASTMEM = ' ';\n\n /* DATEI LESEN */\n ON ENDFILE(PDSFILE) GOTO ENDE_LESEN;\n ON KEY(PDSFILE) GOTO ENDE_LESEN;\n OPEN FILE(PDSFILE);\n\n READ FILE(PDSFILE) SET(REC_PTR) KEY(KEY);\n\n DO WHILE(M_REC.RECTYPE = 'M' &\n          M_REC.MEM <= HIGHMASK);\n    PDSDNUM = M_REC.DNUM;\n    PDSMEML = M_REC.MEM;\n    IF LASTMEM \u00ac= PDSMEML THEN\n       DO;\n          LASTMEM = PDSMEML;\n          PDSMEMS = LASTMEM;\n       END;\n     ELSE PDSMEMS = ' ';\n    CALL ISPLINK('TBADD ','PDSMEMT ');\n    READ FILE(PDSFILE) SET(REC_PTR);\n END;\n\n ENDE_LESEN:\n\n CALL ISPLINK ('TBSORT ','PDSMEMT ',\n               '(PDSMEML,C,A,PDSMEMS,C,D)');\n CALL ISPLINK ('TBTOP ','PDSMEMT ');\n\n ON ENDFILE(PDSFILE) GOTO NEXT_DSN;\n ON KEY(PDSFILE) GOTO NEXT_DSN;\n\n READ_DSNAME: CALL ISPLINK('TBSKIP ','PDSMEMT ');\n IF PLIRETV \u00ac= 0 THEN GOTO ENDE_DSN_LESEN;\n KEY = 'D' || PDSDNUM;\n READ FILE(PDSFILE) SET(REC_PTR) KEY(KEY);\n PDSDSNL = D_REC.DSN;\n PDSVOL  = D_REC.VOLSER;\n CALL ISPLINK('TBPUT ','PDSMEMT ');\n NEXT_DSN:\n GOTO READ_DSNAME;\n\n ENDE_DSN_LESEN:\n\n CALL ISPLINK ('TBTOP ','PDSMEMT ');\n CLOSE FILE(PDSFILE);\n\n END READMEM;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PDS2SDSN": {"ttr": 1794, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x995\\x0f\\x00\\x995\\x0f\\x12(\\x00\\x07\\x00\\x07\\x00\\x00\\xe5\\xd4\\xc9\\xc5\\xd3\\xd2\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-16T00:00:00", "modifydate": "1999-12-16T12:28:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "VMIELKE"}, "text": " SHOWDSN: PROC;\n CALL ISPLINK('CONTROL ','DISPLAY ','SAVE ');\n DO UNTIL(PLIRETV >= 8);\n    CALL ISPLINK('TBDISPL ','PDSDSNT ','PDSMEM2B ');\n END;\n CALL ISPLINK('CONTROL ','DISPLAY ','RESTORE ');\n END SHOWDSN;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTOCFLTR": {"ttr": 1796, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x995\\x0f\\x00\\x995\\x0f\\x12(\\x00$\\x00$\\x00\\x00\\xe5\\xd4\\xc9\\xc5\\xd3\\xd2\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-16T00:00:00", "modifydate": "1999-12-16T12:28:00", "lines": 36, "newlines": 36, "modlines": 0, "user": "VMIELKE"}, "text": "/* REXX - PROZEDUR ZUM FILTERN DER VTOC-LISTE */\n/* FUER PDS-CROSS-REFERENCE.                  */\n/*                                            */\n/*                                            */\nCOUNTOUT = 0\n\"EXECIO * DISKR VTOCOUT (STEM L. FINIS\"\nL.0 = L.0 - 1 /* IGNORE LAST RECORD */\nSAY \"VTOC-RECORDS READ: \"L.0\nDO I = 1 TO L.0\n   PARSE VAR L.I Q1 \".\" X .\n   Q1 = STRIP(Q1)\n   /* DO NOT INDEX DATASETS STARTING WITH U,Q,YY,ZZ */\n   /* DO NOT INDEX ISPF PROFILES */\n   IF SUBSTR(Q1,1,1) = \"U\" | ,\n      SUBSTR(Q1,1,1) = \"Q\" | ,\n      SUBSTR(Q1,1,2) = \"YY\" | ,\n      SUBSTR(Q1,1,2) = \"ZZ\" | ,\n      X = \"ISPF.PROFILE\" THEN ITERATE\n\n   PARSE VAR L.I DSN .\n   /* DO NOT PROCESS SLR/ARO LIBRARIES */\n   IF SUBSTR(DSN,1,18) = \"SLRARO.SLRARO.GDF.\" THEN ITERATE\n   /* DO NOT PROCESS TEXT FILES / HFS FILES */\n   IF RIGHT(DSN,6) = \".TEXTQ\" |,\n      RIGHT(DSN,6) = \".TEXTH\" |,\n      RIGHT(DSN,4) = \".HFS\" |,\n      RIGHT(DSN,6) = \".TEXTL\" THEN ITERATE\n\n   COUNTOUT = COUNTOUT + 1\n   PARSE VAR L.I DSN VOL REFDT UNIT  .\n   LNEU.COUNTOUT = \" \"LEFT(DSN,44)\" \"VOL\" \"REFDT\" \"UNIT\nEND\n\n/* ZURUECKSCHREIBEN */\n\"EXECIO \"COUNTOUT\" DISKW VTOCOUT (STEM LNEU. FINIS\"\nSAY \"VTOC RECORDS WRITTEN: \"COUNTOUT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT439/FILE439.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT439", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}