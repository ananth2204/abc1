This package contains three files. This one is the documentation, such
as it is. The RECEIVE member contains sample JCL which will do a
RECEIVE against the TARFILE member to create a sequential file called
<USERID>.TAPE.ROBOT.FLEXES.TAR . This file is a Linux/UNIX tar file
which contains two files, which implement the z/OS "tape robot" for
Flex-ES.

WARNING! Pay heed! Attention! START

This Perl program is dependant on a CPAN module called AppConfig to
read and parse it's configuration file. This CPAN module may or may
not exist on your Linux/UNIX system. If it does not, you must get
it from http://www.cpan.org . This is your responsibility. I do not
attempt to document how to use CPAN or download from it. If you don't
know how to do this, find a Perl geek to help you.

WARNING! Pay heed! Attention! END

The actual documentation on how to use this facility is in the
tape-robot.perl file in Perl's "pod" format. However, for those who
are in a hurry, I have reproduced it below.

=========================================

 Please read this section completely before attempting to use this
 script.  There is no other documentation. This script comes with no
 support. This script may be freely modified and redistributed as
 desired. This script is released to the Public Domain by me, John
 McKown, who is its original author.

 This script implements an automount facility for FlexES. In order to
 use this script, you must define a virtual 1403 to FlexES.  This 1403
 printer must be assigned to send its output to this script.  This may
 be done by using a FIFO pipe. You use the "mkfifo" command to create
 the FIFO pipe in the appropriate subdirectory. This PIPE appears in
 the directory as a file. You then specify that file name in the 1403
 defination. Before starting the FlexES instance which uses this
 facility, you must start this script, using the PIPE as its input.
 You can do this with the command:
     tape-robot.perl </sub/direct/ory/FIFO.pipe
 Where you replace "/sub/direct/ory/FIFO.pipe" with the correct file
 name.  The address of this 1403 must be specified as an MVS console
 "unit(prt)" with ROUTCODE(3) only and with only the message text.
 This will direct all tape mount and dismount messages to this script,
 as well as some other messages which will be ignored.

 This assumes that the script is in a directory on the PATH. If it is
 not, you must put the path to the script in the defination.

 When this script sees a mount message, it will take one of two actions.

 If the mount is for a specific volser, it will:

 1) verify that the file $TAPEDIR/volser or $SCRATCHDIR/volser exists.
	$SCRATCHDIR/volser is searched just in case a "scratch" volume
	needs to be mounted. If the tape is found in $SCRATCHDIR,
	it is used "in place" and remains a scratch volume as far as
	this routine is concerned.

 2) if it does, it will issue "devinit devnum $TAPEDIR/volser"

 3) if it does not, something is wrong and no action is taken.
	Unfortuantely, there is no way for this routine to inform the
	guest OS that it did not mount the tape.

 If the mount is for a scratch tape, it will:

 1) Find a "scratch" volser in $SCRATCHDIR.
    Note that all files in $SCRATCHDIR are assumed to be scratch
    volumes regardless of their content. Of course, if they are not,
    then this logic will not produce the correct results. If one is
    running without a tape management system on the guest,
    this could result in loss of data. A tape management system
    should avoid this problem.

    How to maintain the scratch pool (moving volumes from $TAPEDIR to
    $SCRATCHDIR) is beyond the scope of this routine at this time. I
    have some ideas for the future.

 2) mv that file from $SCRATCHDIR to $TAPEDIR

 3) issue the command "mount devnum $TAPEDIR/volser"

 A scratch request is assumed when the "volser" in the mount message is
 either 'SCRTCH' or 'PRIVAT'. Any other value is considered to be the
 actual volser.

 Configuration variables in "tape-robot.cfg":

	TAPEDIR - the subdirectory containing all FakeTape(tm) volumes
		This is a single subdirectory. At present this routine
		does not support volumes in multiple subdirectories.
		This is a "future direction".
	SCRATCHDIR - This subdirectory contains files which can be used
		as virtual tape volumes. It is assumed that all files in
		this subdirectory are valid FakeTape(tm) formatted volumes, AWS
		formatted volumes or zero length files.
		Placing virtual volumes in this subdirectory is the
		responsibility of the user or some other process.
	INSTANCE - The name of the FlexES instance to receive the commands.
	HOST - The DNS name or IP address of the host running the instance.
	SUFFIXES - A list of possible suffixes for tape files.
	PREFIXES - A list of possible prefixes for tape files.
		Note that the volser in the mount message is first attempted
		without any prefix or suffix. This is as if the SUFFIXES and
		PREFIXES HAD specified a "null" string as the first element in
		them.
	LOG - Either YES or NO to indicate whether this routine should attempt
		to use the UNIX syslog facility to log its actions. The default,
		if not specified, is NO.
	FACILITY - Must be a valid syslog facility. The default is local0.

