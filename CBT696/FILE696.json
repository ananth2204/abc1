{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012620000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE696.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE696.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\t'", "DS1TRBAL": "b'/\\xf2'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04\\xd5\\x00\\x0c\\x04\\xd6\\x00\\x00\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04V\\x00@\\x01\\x13\\x00\\x1f\\x01\\x13\\x00\\x1f\\x11\\x08\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf6@@@'", "ispf": {"version": "04.86", "flags": 0, "createdate": "2013-01-01T00:00:00", "modifydate": "2013-01-01T11:08:40", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-486"}, "text": "REGULAR CBT TAPE - VERSION 486    FILE:  696\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT486.FILE696\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    8000    PO\n\n   PDS117I 6 MEMBERS COUNTED; CUMULATIVE SIZE IS 974 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   01/01/13    11:08:40    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE1": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x007\\x01\\x040\\x9f\\x01\\x040\\x9f\"\\x12\\x00\\x1f\\x00\\x1f\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-11-04T00:00:00", "modifydate": "2004-11-04T22:12:37", "lines": 31, "newlines": 31, "modlines": 0, "user": "SBGOLOB"}, "text": "Sam,\n\nWould you please look this over to see if it is worth putting on the CBT\nTape?\n\nThis is my \"virtual tape robot\" for z/OS running on a FlexES system.\nPlease note that I do not have this configuration. The program was\ntested on a Linux system by taking a z/OS SYSLOG file, editing it to\n\"look right\" and feeding it into the program.\n\nThe file is a TSO XMIT of a PDS (LRECL=80 RECFM=FB) which contains three\nmembers. The first is a documentation member named $DOC.  The second is\nsample installation JCL called RECEIVE.  The last is named TARFILE and\ncontains an XMIT of a z/OS sequential file (LRECL=1 RECFM=FB). This\nsequential file is a \"tar\" archive containing two Linux/UNIX files. The\nfirst is called tape-robot.perl, which is a Perl program which responds\nto z/OS \"tape mount\" messages by finding the FakeTape(tm) volume and\nissuing a FlexES \"mount\" command to \"mount\" the volume.  The Perl\nprogram captures the z/OS \"mount\" messages by reading a UNIX FIFO pipe\nwhich is defined in FlexES as a virtual 1403.  This 1403 is defined in\nthe z/OS system as a console with ROUTCDE(3) assigned to it.  The second\nfile is tape-robot.cfg which is a configuration file for the\ntape-robot.perl program.\n\n\n--\nJohn McKown\nSenior Systems Programmer\nUICI Insurance Center\nInformation Technology\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$DOC": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00 \\x01\\x040?\\x01\\x040?\\t\\x01\\x00p\\x00p\\x00\\x00\\xe3\\xe2\\xc8\\xf0\\xf0\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-10-29T00:00:00", "modifydate": "2004-10-29T09:01:20", "lines": 112, "newlines": 112, "modlines": 0, "user": "TSH009"}, "text": "This package contains three files. This one is the documentation, such\nas it is. The RECEIVE member contains sample JCL which will do a\nRECEIVE against the TARFILE member to create a sequential file called\n<USERID>.TAPE.ROBOT.FLEXES.TAR . This file is a Linux/UNIX tar file\nwhich contains two files, which implement the z/OS \"tape robot\" for\nFlex-ES.\n\nWARNING! Pay heed! Attention! START\n\nThis Perl program is dependant on a CPAN module called AppConfig to\nread and parse it's configuration file. This CPAN module may or may\nnot exist on your Linux/UNIX system. If it does not, you must get\nit from http://www.cpan.org . This is your responsibility. I do not\nattempt to document how to use CPAN or download from it. If you don't\nknow how to do this, find a Perl geek to help you.\n\nWARNING! Pay heed! Attention! END\n\nThe actual documentation on how to use this facility is in the\ntape-robot.perl file in Perl's \"pod\" format. However, for those who\nare in a hurry, I have reproduced it below.\n\n=========================================\n\n Please read this section completely before attempting to use this\n script.  There is no other documentation. This script comes with no\n support. This script may be freely modified and redistributed as\n desired. This script is released to the Public Domain by me, John\n McKown, who is its original author.\n\n This script implements an automount facility for FlexES. In order to\n use this script, you must define a virtual 1403 to FlexES.  This 1403\n printer must be assigned to send its output to this script.  This may\n be done by using a FIFO pipe. You use the \"mkfifo\" command to create\n the FIFO pipe in the appropriate subdirectory. This PIPE appears in\n the directory as a file. You then specify that file name in the 1403\n defination. Before starting the FlexES instance which uses this\n facility, you must start this script, using the PIPE as its input.\n You can do this with the command:\n     tape-robot.perl </sub/direct/ory/FIFO.pipe\n Where you replace \"/sub/direct/ory/FIFO.pipe\" with the correct file\n name.  The address of this 1403 must be specified as an MVS console\n \"unit(prt)\" with ROUTCODE(3) only and with only the message text.\n This will direct all tape mount and dismount messages to this script,\n as well as some other messages which will be ignored.\n\n This assumes that the script is in a directory on the PATH. If it is\n not, you must put the path to the script in the defination.\n\n When this script sees a mount message, it will take one of two actions.\n\n If the mount is for a specific volser, it will:\n\n 1) verify that the file $TAPEDIR/volser or $SCRATCHDIR/volser exists.\n\t$SCRATCHDIR/volser is searched just in case a \"scratch\" volume\n\tneeds to be mounted. If the tape is found in $SCRATCHDIR,\n\tit is used \"in place\" and remains a scratch volume as far as\n\tthis routine is concerned.\n\n 2) if it does, it will issue \"devinit devnum $TAPEDIR/volser\"\n\n 3) if it does not, something is wrong and no action is taken.\n\tUnfortuantely, there is no way for this routine to inform the\n\tguest OS that it did not mount the tape.\n\n If the mount is for a scratch tape, it will:\n\n 1) Find a \"scratch\" volser in $SCRATCHDIR.\n    Note that all files in $SCRATCHDIR are assumed to be scratch\n    volumes regardless of their content. Of course, if they are not,\n    then this logic will not produce the correct results. If one is\n    running without a tape management system on the guest,\n    this could result in loss of data. A tape management system\n    should avoid this problem.\n\n    How to maintain the scratch pool (moving volumes from $TAPEDIR to\n    $SCRATCHDIR) is beyond the scope of this routine at this time. I\n    have some ideas for the future.\n\n 2) mv that file from $SCRATCHDIR to $TAPEDIR\n\n 3) issue the command \"mount devnum $TAPEDIR/volser\"\n\n A scratch request is assumed when the \"volser\" in the mount message is\n either 'SCRTCH' or 'PRIVAT'. Any other value is considered to be the\n actual volser.\n\n Configuration variables in \"tape-robot.cfg\":\n\n\tTAPEDIR - the subdirectory containing all FakeTape(tm) volumes\n\t\tThis is a single subdirectory. At present this routine\n\t\tdoes not support volumes in multiple subdirectories.\n\t\tThis is a \"future direction\".\n\tSCRATCHDIR - This subdirectory contains files which can be used\n\t\tas virtual tape volumes. It is assumed that all files in\n\t\tthis subdirectory are valid FakeTape(tm) formatted volumes, AWS\n\t\tformatted volumes or zero length files.\n\t\tPlacing virtual volumes in this subdirectory is the\n\t\tresponsibility of the user or some other process.\n\tINSTANCE - The name of the FlexES instance to receive the commands.\n\tHOST - The DNS name or IP address of the host running the instance.\n\tSUFFIXES - A list of possible suffixes for tape files.\n\tPREFIXES - A list of possible prefixes for tape files.\n\t\tNote that the volser in the mount message is first attempted\n\t\twithout any prefix or suffix. This is as if the SUFFIXES and\n\t\tPREFIXES HAD specified a \"null\" string as the first element in\n\t\tthem.\n\tLOG - Either YES or NO to indicate whether this routine should attempt\n\t\tto use the UNIX syslog facility to log its actions. The default,\n\t\tif not specified, is NO.\n\tFACILITY - Must be a valid syslog facility. The default is local0.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE696": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04V\\x000\\x01\\x13\\x00\\x1f\\x01\\x13\\x00\\x1f\\x11\\x08\\x00\\x0e\\x00\\x0e\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf6@@@'", "ispf": {"version": "04.86", "flags": 0, "createdate": "2013-01-01T00:00:00", "modifydate": "2013-01-01T11:08:30", "lines": 14, "newlines": 14, "modlines": 0, "user": "CBT-486"}, "text": "//***FILE 696 is from John McKown and contains a system to          *   FILE 696\n//*           implement the z/OS tape robot for FLEX-ES.            *   FILE 696\n//*                                                                 *   FILE 696\n//*           This system runs partially on MVS and partially       *   FILE 696\n//*           on Linux.  The Linux part is in TSO XMIT format       *   FILE 696\n//*           as member TARFILE, and it has to be RECEIVEd on       *   FILE 696\n//*           MVS and FTP'ed to the Linux system and un-TARed       *   FILE 696\n//*           there.                                                *   FILE 696\n//*                                                                 *   FILE 696\n//*           See member $DOC for detailed installation             *   FILE 696\n//*           instructions and information.                         *   FILE 696\n//*                                                                 *   FILE 696\n//*       email:  \"McKown, John\" <john.archie.mckown@GMAIL.com>     *   FILE 696\n//*                                                                 *   FILE 696\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RECEIVE": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00&\\x01\\x040?\\x01\\x040?\\x08F\\x00!\\x00!\\x00\\x00\\xe3\\xe2\\xc8\\xf0\\xf0\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-10-29T00:00:00", "modifydate": "2004-10-29T08:46:26", "lines": 33, "newlines": 33, "modlines": 0, "user": "TSH009"}, "text": "//RECEIVE  JOB ACCT,RECEIVE,\n//         CLASS=A,\n//         MSGCLASS=X,\n//         NOTIFY=&SYSUID\n//*\n// SET THISDSN=TSH009.TAPEROBO.CNTL\n//RECEIVE EXEC PGM=IKJEFT01,REGION=6M\n//SYSTSPRT DD SYSOUT=*\n//INFILE DD DISP=SHR,DSN=&THISDSN(TARFILE)\n//SYSTSIN DD *\n RECEIVE INFILE(INFILE)\n  RESTORE DSN(ASCII.NEWRACF.TAR.GZ)\n/*\n//*\n//FTP EXEC PGM=FTP,PARM='(EXIT'\n//OUTPUT DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//INPUT DD *\nlinux.ip.address\nuser.on.linux.system\nusers.password\nbin\nsendsite\nput TAPE.ROBOT.FLEXES.TAR\nquit\n/*\n//*\n//* You now have a shiny new tar file on your Linux server.\n//* Logon to that server and issue the command:\n//* tar xf TAPE.ROBOT.FLEXES.TAR\n//* This command will \"unwind\" the tar file and put the\n//* Perl program and configuration file in your home directory\n//*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TARFILE": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00$\\x01\\x040?\\x01\\x040?\\x08D\\x03\\x04\\x03\\x04\\x00\\x00\\xe3\\xe2\\xc8\\xf0\\xf0\\xf9@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-10-29T00:00:00", "modifydate": "2004-10-29T08:44:24", "lines": 772, "newlines": 772, "modlines": 0, "user": "TSH009"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT696/FILE696.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT696", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}