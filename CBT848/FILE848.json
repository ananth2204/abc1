{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012948000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1881152, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 17, "INMDSNAM": "CBT.V500.FILE848.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1881152, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1881152, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE848.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x1f\\x05'", "DS1TRBAL": "b'\\xad\\xda'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x05\\xff\\x00\\x07\\x06\\x01\\x00\\x08\\x00 '", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04R\\x00P\\x01\\x11\\x08O\\x01\\x11\\x08O\\x149\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf2@@@'", "ispf": {"version": "04.82", "flags": 0, "createdate": "2011-03-25T00:00:00", "modifydate": "2011-03-25T14:39:50", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-482"}, "text": "REGULAR CBT TAPE - VERSION 482    FILE:  848\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT482.FILE848\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 70 MEMBERS COUNTED; CUMULATIVE SIZE IS 17,226 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   03/25/11    14:39:50    GMT-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$RELOAD": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x82)/\\x00\\x82)/\\x135\\x00\\x19\\x00\\x19\\x00\\x00\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1982-10-19T00:00:00", "modifydate": "1982-10-19T13:35:00", "lines": 25, "newlines": 25, "modlines": 0, "user": "SYSXKMB"}, "text": "//$$RELOAD JOB (SYSXKMB,?SYSACCT),'SAMBASS/OSI-HDC-GP',\n//         NOTIFY=SYSXKMB,MSGCLASS=A,\n//         CLASS=B\n/*JOBPARM  Q=F,I,T=9,L=99,XMIT\n//*--------------------------------------------------------------\n//*-------- RELOAD FROM TAPE TO DISK ----------------------------\n//*--------------------------------------------------------------\n//RELOAD   EXEC PGM=IEBCOPY\n//SYSPRINT DD SYSOUT=A\n//SYSUT3   DD UNIT=SYSDA,SPACE=(CYL,(5,5)),DSN=&&SYSUT3,DISP=(,DELETE)\n//SYSUT4   DD UNIT=SYSDA,SPACE=(CYL,(5,5)),DSN=&&SYSUT4,DISP=(,DELETE)\n//IN1      DD DSN=SYSX.LIBSPOOL.TAPE.DATA,DISP=(OLD,PASS),\n//            UNIT=TAPE,VOL=(,RETAIN,SER=LIBSPL),DCB=DEN=4,\n//            LABEL=(1,BLP,EXPDT=98000)\n//OT1      DD DSN=SYSX.LIBSPOOL.DATA,DISP=(NEW,CATLG,DELETE),\n//            UNIT=SYSDA,SPACE=(TRK,(50,10,10),RLSE)\n//*\n//IN2      DD DSN=SYSX.LIBSPOOL.TAPE.CLIST,DISP=(OLD,PASS),\n//            UNIT=TAPE,VOL=(,RETAIN,SER=LIBSPL),DCB=DEN=4,\n//            LABEL=(2,BLP,EXPDT=98000)\n//OT1      DD DSN=SYSX.LIBSPOOL.CLIST,DISP=(NEW,CATLG,DELETE),\n//            UNIT=SYSDA,SPACE=(TRK,(2,2,2),RLSE)\n//SYSIN    DD *\n    C I=((IN1,R)),O=OT1\n    C I=((IN2,R)),O=OT2\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$UNLOAD": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x04\\x00\\x00\\x00\\x82)/\\x00\\x83\\x15\\x7f\\x139\\x00'\\x00!\\x00\\t\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@\"", "ispf": {"version": "01.04", "flags": 0, "createdate": "1982-10-19T00:00:00", "modifydate": "1983-06-06T13:39:00", "lines": 39, "newlines": 33, "modlines": 9, "user": "SYSXKMB"}, "text": "//$$UNLOAD JOB (SYSXKMB,?SYSACCT),'SAMBASS/OSI-HDC-GP',\n//         NOTIFY=SYSXKMB,MSGCLASS=A,\n//         CLASS=B\n/*JOBPARM  Q=F,I,T=9,L=99,XMIT,A\n//*--------------------------------------------------------------\n//MERGE    EXEC PGM=IEBCOPY\n//SYSPRINT DD SYSOUT=A\n//SYSUT3   DD UNIT=SYSDA,SPACE=(CYL,(5,5)),DSN=&&SYSUT3,DISP=(,DELETE)\n//SYSUT4   DD UNIT=SYSDA,SPACE=(CYL,(5,5)),DSN=&&SYSUT4,DISP=(,DELETE)\n//IN1      DD DSN=SYSX.LIBSPOOL.DATA,DISP=SHR\n//IN2      DD DSN=SYS2.MACLIB,DISP=SHR\n//OT1      DD DSN=&&TEMP1,UNIT=SYSDA,SPACE=(CYL,(3,3,100)),\n//            DISP=(NEW,PASS)\n//SYSIN    DD *\n    C I=((IN1,R)),O=OT1\n    C I=((IN2,R)),O=OT1\n           S M=CONNECT,RELEASE\n//*--------------------------------------------------------------\n//CPY2TAP  EXEC PGM=IEBCOPY\n//SYSPRINT DD SYSOUT=A\n//SYSUT3   DD UNIT=SYSDA,SPACE=(CYL,(5,5)),DSN=&&SYSUT3,DISP=(,DELETE)\n//SYSUT4   DD UNIT=SYSDA,SPACE=(CYL,(5,5)),DSN=&&SYSUT4,DISP=(,DELETE)\n//IN1      DD DSN=&&TEMP1,DISP=(OLD,DELETE)\n//OT1      DD DSN=SYSX.LIBSPOOL.TAPE.DATA,DISP=(NEW,PASS),\n//            UNIT=TAPE,VOL=(,RETAIN,SER=LIBSPL),DCB=DEN=4,\n//            LABEL=(1,BLP,EXPDT=98000)\n//IN2      DD DSN=SYSX.LIBSPOOL.CLIST,DISP=SHR\n//OT2      DD DSN=SYSX.LIBSPOOL.TAPE.CLIST,DISP=(NEW,PASS),\n//            UNIT=TAPE,VOL=(,RETAIN,SER=LIBSPL),DCB=DEN=4,\n//            LABEL=(2,BLP,EXPDT=98000)\n//SYSIN    DD *\n    C I=((IN1,R)),O=OT1\n    C I=((IN2,R)),O=OT2\n//*--------------------------------------------------------------\n//GENER    EXEC PGM=IEBGENER\n//SYSUT1   DD DSN=SYSX.LIBSPOOL.DATA($$RELOAD),DISP=SHR\n//SYSUT2   DD SYSOUT=A\n//SYSPRINT DD SYSOUT=A\n//SYSIN    DD DUMMY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#DOC": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x82\\x17\\x9f\\x00\\x82\\x19\\x0f\\x15%\\x00\\x10\\x008\\x00\\x0f\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1982-06-28T00:00:00", "modifydate": "1982-07-09T15:25:00", "lines": 16, "newlines": 56, "modlines": 15, "user": "SHSWRPD"}, "text": "THIS MEMBER EXPLAINS THE PACKAGING OF LIBSPOOL.\n\nTHIS DATA SET CONTAINS THREE ADDITIONAL DOCUMENTATION MEMBERS WHICH\nSHOULD PROVIDE ENOUGH INFORMATION TO INSTALL, OPERATE, AND USE LIBSPOOL.\n\nTHESE MEMBERS ARE:\n\n   1) #INSTGDE - THIS MEMBER CONTAINS IMFORMATION FOR THOSE WHO\n                 ARE TO INSTALL, MAINTAIN, AND MODIFY LIBSPOOL.\n\n   2) #OPERGDE - THIS MEMBER CONTAINS IMFORMATION FOR THOSE WHO\n                 RUN LIBSPOOL IN AN OPERATIONS ENVIRONMENT.\n\n   3) #USERGDE - THIS MEMBER CONTAINS IMFORMATION FOR THOSE WHO\n                 ARE TO USE LIBSPOOL TO INQUIRE INTO JCL LISTINGS.\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#INSTGDE": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1d\\x00\\x00\\x00\\x82\\x19\\x0f\\x00\\x83\\x16\\x7f\\x13U\\x03(\\x02\\x17\\x01P\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.29", "flags": 0, "createdate": "1982-07-09T00:00:00", "modifydate": "1983-06-16T13:55:00", "lines": 808, "newlines": 535, "modlines": 336, "user": "SYSXKMB"}, "text": "\n   LIBSPOOL OBJECTIVE\n  --------------------\n\nALLEVIATE PROBLEMS INVOLVED IN REVIEWING, COLLATING, STORING,\nRETRIEVING A LARGE VOLUME OF PRODUCTION JOB CONTROL LANGUAGE LISTINGS.\n\n       LIBSPOOL ATTEMPTS TO ADDRESS THESE PROBLEMS BY:\n\n           1) PROVIDING AN AUTOMATIC REVIEW OF PRODUCTION TYPE JCL\n              LISTINGS LOOKING FOR NON-NORMAL RESULTS BY MEANS OF A\n              PREDEFINED SET OF ABEND CODES.\n\n           2) AUTOMATING AND ORGANIZING THE STORING AND RETRIEVING\n              OF ON-LINE JCL.\n\n           3) AUTOMATING AND ORGANIZING THE ARCHIVING AND RETRIEVING\n              OF JCL FROM ARCHIVE.\n\n           4) CUTTING DOWN ON JCL PRINT OUTPUT.\n\n\n   LIBSPOOL DATA SETS\n  --------------------\n\n          1) SYSX.LIBSPOOL.LIBPROD -\n                          CURRENT LIBRARIAN JCL LIBRARY\n                          CONTAINS THE CURRENT JCL MODULES\n                          GOTTEN FROM THE LIBSPOOL TASK.\n\n          2) SYSX.LIBSPOOL.LIBREST -\n                          RESTORE FROM LIBRARIAN ARCHIVE TAPE\n                          LIBRARIAN JCL LIBRARY\n\n          3) SYSX.LIBSPOOL.ARCPDS -\n                          ARCHIVE DIRECTORY\n                          PARTIONED DATA SET CONTAINING INFORMATION\n                          ON THE CONTENTS OF THE LIBRARIAN ARCHIVE\n                          TAPES.\n\n          4) PPODOPR.LIBSPOOL.DALYARCH -\n                           DAILY LIBRARIAN ARCHIVE TAPE\n\n          5) PPODOPR.LIBSPOOL.WKLYARCH -\n                            WEEKLY LIBRARIAN ARCHIVE TAPE\n\n   LIBSPOOL OPERATION\n  --------------------\n\n           LIBSPOOL RUNS AS A CONSOLE STARTED TASK THAT CAN BE\n           STARTED AUTOMATICALLY AT IPL TIME AND WILL NORMALLY\n           ALWAYS BE ACTIVE. IT WILL NEEDED TO BE STOPPED WHEN A\n           DAILY ARCHIVE JOB IS RUN WHICH WILL REMOVE\n           CHRONOLOGICALLY OLD JCL MODULES FROM THE LIBSPOOL DATA\n           SET. THE LIBSPOOL PROGRAM 'JCLLIST' SHOULD BE LINKED\n           INTO AN AUTHORIZED LINBRARY.\n\n           LIBSPOOL CAN BE STOPPED WITH THE COMMAND:\n                        P LIBSPOOL\n\n           LIBSPOOL CAN BE STARTED UP WITH THE COMMAND:\n                        S LIBSPOOL\n\n           IF LIBSPOOL TERMINATES WITH AN ABEND\n           A MESSAGE WILL BE WRITTEN TO THE OPERATOR\n           INDICATING THAT LIBSPOOL IS NO LONGER RUNNING.\n           THIS SHOULD INSURE THAT OPERATIONS WILL ALWAYS\n           KNOW THAT LIBSPOOL IS ACTIVE. THE MESSAGE WILL NOT\n           GO OFF THE OPERATOR CONSOLE UNTIL A REPLY OF ANY\n           CHARACTER IS MADE TO IT.\n\n           AT END EXECUTION FOR PRODUCTION JOBS SPECIFYING A\n           SPECIFIC MSGCLASS ON THE JOB CARD LIBSPOOL WILL OBTAIN\n           THE JCL AND SELECTED SYSOUT OUTPUT FROM JES2.\n           LIBSPOOL WILL ONLY PROCESS JOBS RUN WITH A 'P' AS THE\n           FIRST CHARACTER OF THE USER-ID. ALL OTHER JOBS USING A\n           LIBSPOOL MSGCLASS WILL BE DELETED FROM THE SYSTEM.\n           JCL OUTPUT WILL CONSIST OF:\n\n                        1) JES LOG\n                        2) JCL\n                        3) EXECUTION MESSAGES\n\n            SELECTED SYSOUT OUTPUT CAN BE CAPTURED BY SPECIFING\n            SYSOUT=* ON THE DD STATEMENT OF THE SYSOUT WHICH IS\n            DESIRED TO BE CAPTURED WITH THE JCL. EACH NON-JCL SYSOUT\n            DATA SET IS LIMITED TO A MAXIMUM NUMBER OF LINES (750).THIS\n            IS DONE TO PROTECT LIBSPOOL AGAINST DISK SPACE PROBLEMS.\n\n            THIS OPTION WILL ONLY FUNCTION FOR JOBS THAT\n            ARE RUN ON THE NIA NODE WHOSE PRINT IS NOT ROUTED TO\n            ANOTHER NODE. THIS OPTION IS NOT AVAILIABLE FOR JOBS RUN\n            ON ANOTHER NODE (EG. HOU) WHOSE PRINT (JCL) IS ROUTED\n            BACK TO THE NIA NODE. JCL (JES2 LOG, JCL, EXECUTION\n            MESSAGES) IS THE ONLY SYSOUT OUTPUT THAT CAN BE CAPTURED\n            BY LIBSPOOL FOR JOBS RUN ON ANOTHER NODE. LIBSPOOL WILL\n            NOT OPERATE PROPERLY IF A NON-JCL SYSOUT (SYSOUT=*) IS\n            SENT BACK TO THE NIA NODE. EVERY EFFORT SHOULD BE MADE\n            TO AVOID THIS SITUATION. (SYSOUT=* OUTPUT CAN ONLY BE\n            CAPTURED BY LIBSPOOL FOR ONE STEP JOBS RUN ON ANOTHER\n\n            THE LIBSPOOL DATA SET WILL ALLOW APPROXIMATELY A MAXIMUM\n            OF 15,000 RECORDS PER JOB. PRINT LINES GREATER THAN 80\n            CHARACTERS WILL TAKE 2 RECORDS WHEN STORED BY LIBSPOOL.\n\n\n            LIBSPOOL WILL SCAN THE JCL LOOKING FOR A MATCH ON A\n            PRE-DEFINED SET OF ABEND CONDITIONS. A MATCH OF\n            ANY OF THE FOLLOWING IBM MESSAGE IDENTIFICATIONS WILL RESULT\n            IN THE JCL TO BE QUEUED FOR OUTPUT UNDER SYSOUT CLASS J.\n\n                  IEF251I - JOB CANCELLED\n                  IEF283I - NOT DELETED X\n                  IEF287I - NOT RECTLGD/CATALGD/UNCATLGD\n                  IEF450I - ABEND\n                  IEF451I - ENDED BY CC\n                  IEF452I - JOBFAIL/JOB NOT RUN JCL ERROR\n                  IEF453I - JOB FAILED - JCL ERROR\n\n              THE JOB CARD MSGCLASS PARAMETER IS USED TO CONTROL:\n\n                  1) SELECTION OF JCL OUTPUT BY LIBSPOOL\n                  2) PRINTING OF THE JCL\n                  3) PRINTING OF THE JCL BASED ON CONDITION CODE\n                     VALUES ALLOWED\n\n              THE FOLLOWING IDENTIFIES THE MSGCLASS VALUES THAT\n              LIBSPOOL WILL SELECT FOR PROCESSING AND THE CONDITION\n              CODE VALUES THAT ARE ALLOWED FOR THAT MESSAGE CLASS.\n\n                 MSGCLASS                USAGE\n                 ________        _______________________\n                    X            JCL OF THIS MSGCLASS WILL ALWAYS PRINT.\n                    W            CONDITION CODES GREATER THAN 0 QUEUES\n                                 JCL TO BE PRINTED UNDER SYSOUT CLASS J.\n\n              AS JCL IS PROCESSED BY LIBSPOOL FOR A JOB, A WTOR\n              MESSAGE IS WRITTEN BY LIBSPOOL TO INDICATE TO THE OPERATOR\n              WHAT LIBSPOOL FOUND WHEN IT SCANNED THE JCL. THE WTOR\n              MESSAGES WILL REMAIN ON THE OPERATOR CONSOLE UNTIL A REPLY\n              OF ANY CHARACTER IS MADE TO IT. MORE THAN ONE WTOR CAN BE\n              OUTSTANDING FROM LIBSPOOL AT A TIME. THE FORMAT OF THE\n              MESSAGES IS:\n\n              LIBSPOOL: XXXXXXXX-YYYY-Z - MMMMMMMMMMMMMMMMMMMMMM\n\n              WHERE XXXXXXXX - JOB NAME\n                        YYYY - JOB NUMBER\n                           Z - JOB MSGCLASS\n                        MM.. - MESSAGE (MAXIMUM OF 22 CHARACTERS)\n\n              A JOB RUN UNDER MSGCLASS W THAT RUNS WITHOUT A ABEND\n              OR CONDITION CODE GREATER THAN ZERO OR ANY OTHER PROBLEM\n              SUCH AS A NOT CATALOGED OR NOT DELETED MESSAGE WILL HAVE\n              THE FOLLOWING MESSAGE - 'SUCCESSFULLY COMPLETED'.\n\n              A JOB RUN UNDER MSGCLASS X THAT RUNS WITHOUT A ABEND\n              OR ANY OTHER PROBLEM\n              SUCH AS A NOT CATALOGED OR NOT DELETED MESSAGE WILL HAVE\n              THE FOLLOWING MESSAGE - 'PRINTED - PRINT MSGCLS'.\n\n              WHEN A JOB IS PRINTED BECAUSE OF A PROBLEM, LIBSPOOL\n              WILL PUT ANY ONE OF THE FOLLOWING IN THE MESSAGE WRITTEN\n              TO THE OPERATOR.\n\n                 *****  ABENDED  *****\n                 *** JOB CANCELLED ***\n                 DATA SET NOT CATALOGED\n                  DATA SET NOT DELETED\n                 JOB ENDED BY COND CODE\n                 ***** JCL ERROR *****\n                 CONDITION CODE > 0000\n                 PRINTED - NOT EXECUTED\n\n              THIS SHOULD HIGHLIGHT TO THE OPERATOR THE REASON FOR THE\n              PRINTING OF THE JCL AND HELP IN RESULTING IN THE PROPER\n              FOLLOW-UP ACTION.\n\n              IT SHOULD BE NOTED THAT A PRINTED JOB FOR ANY OF THE\n              REASONS IN THE ABOVE LIST COULD HAVE MORE THAN\n              ONE PROBLEM RECOGNIZED BY LIBSPOOL. HOWEVER, MESSAGES WILL\n              BE USED IN THE ORDER PRESENTED ABOVE. FOR EXAMPLE, A JOB\n              COULD HAVE ABENDED AND HAVE A NOT CATALOGED MESSAGE IN A\n              PRIOR STEP. LIBSPOOL WILL INDICATE AN ABEND FOR THE JOB\n              BUT NOT THE NOT CATALOGED CONDITION.\n\n              IN ALL CASES THE JCL WILL BE ADDED TO THE LIBSPOOL\n              LIBRARIAN DATA SET. LIBSPOOL COSTRUCTS AN EIGHT (8)\n              CHARACTER LIBRARIAN MODULE NAME FOR THE JCL OF THE\n              FOLLOWING FORMAT:\n\n                        BYTE  1   - LETTER A THRU Z\n                        BYTES 2-4 - JULIAN DAY NUMBER\n                        BYTES 5-8 - JES2 JOB NUMBER\n\n              THE LETTER IN THE FIRST BYTE IS NORMALLY 'A' BUT WILL BE\n              INCREMENTED THRU Z IF IT IS FOUND THAT A MODULE ALREADY\n              EXISTS ON THE LIBSPOOL LIBRARIAN DATA SET OF THAT NAME.\n\n              WHILE THE JCL IS ON-LINE IN THE LIBSPOOL DATA SET\n              THE LIBSPOOL CLIST CALLS PROGRAM OPS4318G TO INQUIRE\n              INTO THE LIBSPOOL DATA SET SCANNING FOR MATCHES ON ANY\n              ONE OF THE FOLLING CRITERIA:\n\n                    1) GENERIC JOB NAME\n                    2) USER-ID OF THE JOB\n                    3) JOB NUMBER\n                    4) LIBRARIAN MODULE NAME\n                    5) ALL MODULES\n\n              A FORMATTED DISPLAY WILL BE MADE BACK TO THE TERMINAL\n              SHOWING ANY MODULES THAT MATCHED THE SELECTION CRITERIA\n              USED. INFORMATION DISPLAYED WILL CONSIST OF:\n\n                    1) JOB NAME\n                    2) USER-ID\n                    3) RUN DATE\n                    4) START RUN TIME\n                    5) END RUN TIME\n                    6) LIBRARIAN LIBSPOOL MODULE NAME\n\n              AN 'END OF DATA' MESSAGE APPEARS AFTER ALL THE DATA\n              HAS BEEN SCANNED.\n              A 'MODULE NOT FOUND' OR\n              'NO MATCHES FOUND' MESSAGE APPEARS IF NO MATCH IS\n              FOUND ON THE SEARCH CRITERIA USED.\n\n              USING THE INFORMATION FROM THE ABOVE DISPLAY\n              TO IDENTIFY THE RUN(S) IN QUESTION\n              THE USER CAN THEN USE THE LIBSPOOL MODULE NAME TO\n              SELECT THE JCL OF INTEREST FOR DISPLAY,PRINT OR LIBGET\n              THRU USE OF THE LIBSPOOL CLIST.\n\n              JOBS CANCELLED BEFORE BEING SCHEDULED FOR EXECUTION\n              ARE ALSO CAPTURED BY LIBSPOOL BUT NOT PRINTED. THE\n              RUN DATE USED WILL BE THE DATE THE JCL WAS ADDED\n              TO THE LIBSPOOL LIBRARIAN DATA SET.\n\n              DAILY, A BATCH ARCHIVE JOB WILL BE RUN TO REMOVE\n              CHRONOLOGICALLY OLD JCL MODULES FROM THE LIBRARIAN\n              LIBSPOOL DATA SET TO A LIBRARIAN ARCHIVE TAPE DATA SET.\n              THE CONTENTS OF THE ARCHIVE TAPES GENERATED IS\n              MAINTAINED IN A ONLINE ARCHIVE DIRECTORY DATA SET.\n              THE LIBSPOOL CLIST CALLS PROGAM OPS4319G\n              TO INQUIRE INTO THIS DATA SET USING\n              THE SAME SELECTION CRITERIA USED IN\n              INTERROGATING THE LIBSPOOL DATA SET.\n\n                    1) GENERIC JOB NAME\n                    2) USER-ID OF THE JOB\n                    3) JOB NUMBER\n                    4) LIBRARIAN MODULE NAME\n                    5) ALL MODULES\n\n              THE SELECTION IS QUALIFIED BY A DATE INTERVAL BASED\n              ON THE RUN DATE FOR A JOB. A DISPLAY WILL BE MADE\n              BACK TO THE TERMINAL INDICATING THE ARCHIVE TAPE\n              DATA SET NAME FOLLOWED BY THE THE FOLLOWING DATA\n              OF THE MODULES WHICH SATISFIED THE SELECTION\n              CRITERIA WITHIN THE DATE INTERVAL SPECIFIED.\n\n                    1) JOB NAME\n                    2) USER-ID\n                    3) RUN DATE\n                    4) START RUN TIME\n                    5) END RUN TIME\n                    6) LIBRARIAN LIBSPOOL MODULE NAME\n\n              KNOWING THE ARCHIVE TAPE DATA SET NAME AND THE\n              LIBRARIAN MODULE NAME OF THE JCL IN QUESTION THE LIBSPOOL\n              CLIST CAN BE USED TO SUBMIT A JOB TO BATCH TO RESTORE\n              THE MODULE TO A RESTORE FROM ARCHIVE DATA SET. THE\n              LIBSPOOL CLIST AGAIN CAN BE USED TO INTERROGATE THIS\n              DATA SET AS WOULD BE DONE TO THE CURRENT LIBSPOOL DATA\n              SET.\n\n              THE DAILY ARCHIVE JOB ALSO GENERATES A REPORT WHICH IS\n              FILED IN OPERATIONS. THIS REPORT INDICATES THE\n              CONTENTS OF THE ARCHIVE TAPE DATA SET NAME IDENTIFIED\n              IN THE HEADING. THE SEQUENCE OF THE REPORT IS JOB NAME,\n              RUN DATE, RUN TIME. THIS REPORT IS ANOTHER WAY OF\n              DETERMINING THE CONTENTS OF THE ARCHIVE TAPES.\n\n\n   MEMBER DESCRIPTIONS\n  ---------------------\nOPS4318G - THIS IS A ASM PROGRAM WHICH IS RESPONSIBLE FOR DOING INQUIRY\n          INTO THE LIBSPOOL LIBRARIAN DATA SET. IT IS INVOKED IN THE\n          FOREGROUND FROM THE LIBSPOOL CLIST.\n\n           INPUT:  PARAMETER INPUT OF THE FORMAT\n\n                    PARM A-G     1 BYTE\n                    USER ID      7 BYTES-TSO USER INVOKING THIS PROGRAM\n                    NAME         0-8 BYTES DEPENDING ON PARM.\n\n             WHERE: PARM CAN BE\n\n                 A - SEARCH THE LIBRARIAN LIBSPOOL DATA SET FOR\n                     ALL MATCHES ON THE PASSED GENERIC JOB NAME.\n                     (1-8 BYTES)\n\n                 B - SEARCH THE LIBRARIAN LIBSPOOL DATA SET FOR\n                     ALL MATCHES ON THE PASSED USER ID (7 BYTES).\n\n                 C - SEARCH THE LIBRARIAN LIBSPOOL DATA SET FOR\n                     ALL MATCHES ON THE PASSED JOB NUMBER (4 BYTES).\n\n                 D - SEARCH THE LIBRARIAN LIBSPOOL DATA SET FOR\n                     ALL MATCHES ON THE PASSED LIBSPOOL LIBRARIAN\n                     MODULE NAME. (8 BYTES).\n\n                 E - SEARCH THE LIBRARIAN LIBSPOOL DATA SET FOR\n                     ALL MODULES CURRENTLY ON THE LIBSPOOL DATA\n                     SET.\n\n\n         THE ABOVE INQUIRY RESULTS IN A DISPLAY BEING MADE BACK TO THE\n         TSO TERMINAL SHOWING AN INDEX LIST OF MATCHES WHICH INDICATES\n         JOB NAME, JOB NUMBER, USER ID, LIBRARIAN MODULE NAME, RUN DATE\n         START RUN TIME, END RUN TIME.\n\n                 F - DISPLAY THE PASSED LIBSPOOL LIBRARIAN MODULE\n                     NAME BACK TO THE TSO TERMINAL.\n\n                 G - PRINT THE PASSED LIBSPOOL LIBRARIAN MODULE\n                     NAME .\n\n\nOPS4319G - THIS IS A ASM PROGRAM WHICH IS RESPONSIBLE FOR DOING INQUIRY\n          INTO THE LIBSPOOL ARCHIVE DIRECTORY DATA SET. IT IS INVOKED IN\n          THE FOREGROUND FROM THE LIBSPOOL CLIST.\n\n      INPUT: 1) LIBSPOOL ARCHIVE DIRECTORY DATA SET MEMBERS\n             2) PDS DIRECTORY OF THE LIBSPOOL ARCHIVE DIRECTORY DATA SET\n             3) PARAMETER INPUT OF THE FORMAT\n\n                    PARM A-E     1 BYTE\n                    USER ID      7 BYTES-TSO USER INVOKING THIS PROGRAM\n                    SCAN START DATE   6 BYTES-YYMMDD\n                    SCAN END DATE     6 BYTES-YYMMDD\n                    NAME         0-8 BYTES DEPENDING ON PARM.\n\n             WHERE: PARM CAN BE\n\n                 A - SEARCH THE ARCHIVE DIRECTORY LIBSPOOL DATA SET FOR\n                     ALL MATCHES ON THE PASSED GENERIC JOB NAME.\n                     (1-8 BYTES)\n\n                 B - SEARCH THE ARCHIVE DIRECTORY LIBSPOOL DATA SET FOR\n                     ALL MATCHES ON THE PASSED USER ID (7 BYTES).\n\n                 C - SEARCH THE ARCHIVE DIRECTORY LIBSPOOL DATA SET FOR\n                     ALL MATCHES ON THE PASSED JOB NUMBER (4 BYTES).\n\n                 D - SEARCH THE ARCHIVE DIRECTORY LIBSPOOL DATA SET FOR\n                     ALL MATCHES ON THE PASSED LIBSPOOL LIBRARIAN\n                     MODULE NAME. (8 BYTES).\n\n                 E - SEARCH THE ARCHIVE DIRECTORY LIBSPOOL DATA SET FOR\n                     ALL MODULES CURRENTLY ON THE LIBSPOOL DATA\n                     SET.\n\n\n         THE ABOVE INQUIRY RESULTS IN A DISPLAY BEING MADE BACK TO THE\n         TSO TERMINAL SHOWING AN INDEX LIST OF MATCHES WHICH INDICATES\n         JOB NAME, JOB NUMBER, USER ID, LIBRARIAN MODULE NAME, RUN DATE\n         START RUN TIME, END RUN TIME. THE INQUIRY IS LIMITED TO INCLUDE\n         THE SCAN START DATE THRU AND INCLUDING THE SCAN END DATE.\n\n      THE MEMBERS OF THIS DATA SET ARE ARRANGED IN RUN DATE SEQUENCE.\n      ONE MEMBER EXISTS FOR THE LAST DAILY ARCHIVE TAPE (MEMBER NAME\n      #DAILY). ONE MEMBER ALSO EXISTS FOR EACH OF THE WEEKLY\n      CATALOGED LIBRARIAN ARCHIVE TAPES.\n      WEEKLY MEMBERS ARE NAMED THUS:\n\n                     BYTES 1-2 $W\n                     BYTES 3-8 DATE OF WEEKLY ARCHIVE\n                               RUN. YYMMDD\n\n                   THE FORMAT OF THE LOGICAL RECORD IS:\n\n                     BYTES 1-6   JOB RUN DATE YYMMDD\n                     BYTES 7-14  JOB NAME\n                     BYTES 15-22 LIBRARIAN MODULE NAME\n                     BYTES 23-27 START RUN TIME HH.MM\n                     BYTES 28-32 END RUN TIME HH.MM\n                     BYTES 33-39 JOB USER-ID\n                     BYTE  40    FREE\n\n                   THE SEQUENCE OF DATA WITHIN EACH MEMBER\n                   IS:\n                     RUN DATE\n                     JOB NAME\n                     JOB NUMBER - THIS IS IN BYTES 5-8 OF\n                                  LIBRARIAN MODULE NAME.\n\n      THE USER DATA FIELD OF THE DIRECTORY OF EACH MEMBER CONTAINS\n      THE LOWEST AND THE HIGHEST RUN DATE OF THE RECORDS IN THE\n      MEMBER. THE DIRECTORY IS READ LOOKING FOR A MEMBER WHOSE\n      HIGHEST RUN DATE IS NOT LESS THAN THE SCAN BEGIN DATE.\n      IF IT IS LESS THE\n      NEXT MEMBER IN THE DIRECTORY IS LOOKED AT. WHEN A GOOD END\n      DATE IS FOUND,A FIND MACRO IS DONE FOR THE MEMBER USING THE TTR\n      INFORMATION IN THE DIRECTORY. THE MEMBER IS READ LOOKING FOR\n      A DATE WITHIN THE INTERVAL SPECIFIED AND THEN A MATCH ON THE\n      SEARCH CRITERIA SPECIFIED. AS SOON AS THE RUN DATE IS GREATER\n      THAN THE SCAN END DATE THEN THE PROGRAM IS EXITED. IF THE END\n      OF THE MEMBER IS REACHED BEFORE A RUN DATE IS GREATER THAN\n      THE SCAN END DATE THEN THE NEXT MEMBER IN THE DIRECTORY IS\n      LOOKED AT AS ABOVE.\n\n\nOPS4320G - THIS IS A COBOL PROGRAM WHICH IS RESPONSIBLE FOR CREATING\n          LIBRARIAN DLM AND COPY CARDS FOR MODULES WHICH HAVE REACHED\n          THE MAXIMUM TIME ALLOWED FOR STAYING ONLINE IN THE LIBSPOOL\n          DATA SET.\n           INPUT:  PARAMETER INPUT OF THE FORMAT\n\n                    HOURS=NNN,MODULES=NNN\n\n                 WHERE HOURS IS THREE NUMERIC DIGITS INDICATING THE\n                 MAXIMUM NUMBER OF HOURS A MODULE CAN STAY ONLINE\n                 BEFORE IT BECOMES ELIGIBLE TO BE TAKEN OFFLINE AND\n                 PUT ON ARCHIVE TAPE.\n                 ANY MODULE ONLINE A NUMBER OF HOURS GREATER THAN\n                 THIS NUMBER IS ELIGIBLE TO BE TAKEN OFFLINE.\n                 THE NUMBER OF HOURS ON LINE FOR A JOB IS COMPUTED\n                 USING THE START RUN TIME . MINUTES ARE ROUNDED UP\n                 TO THE NEXT HOUR IF 30 OR GREATER. FOR MODULES\n                 WHICH WERE NOT SCHEDULED THE TIME AND DATE ADDED\n                 TO THE LIBRARIAN DATA SET IS USED.\n\n                     MODULES IS THREE NUMERIC DIGITS INDICATING THE\n                 NUMBER OF MODULES THAT MUST BE ELIGIBLE TO TO BE\n                 TAKEN OFFLINE BEFORE ANY MORE STEPS IN THE DAILY OR\n                 WEEKLY JOBSTREAMS ARE ALLOWED TO EXECUTE.\n                 THIS CAN PROVIDE A CONTROL TO AVOID AN ARCHIVE UPDATE\n                 FOR A SMALL NUMBER OF MODULES.\n\n             FILE INPUT:\n\n             LIBRARIAN BASE MANAGEMENT CODE FOR THE LIBSPOOL DATA SET\n\n             IF THE LIBSPOOL DATA SET HAS A MCD CODE IT CAN BE INPUT\n             THRU THIS DATA SET. IT CAN BE A ONE CARD MEMBER OF A\n             ACF2 PROTECTED DATA SET.\n             THE BASE MCD CODE IF INPUT SHOULD BE NUMERIC AND INDICATED\n             ON THE FIRST FOUR (4) BYTES OF THE RECORD.\n             MCD CODE PROCESSING CAN BE SUPRESSED BY DUMMYING OUT THIS\n             FILE OR INDICATE 'NONE' IN THE FIRST FOUR (4) BYTES OF THE\n             RECORD.\n\n         OUTPUT:\n\n             A DATA SET CONTAINING LIBRARIAN COPY CONTROL CARDS FOR\n             MODULES ELIGIBLE TO BE TAKEN OFFLINE.\n\n             A DATA SET CONTAINING LIBRARIAN DLM CONTROL CARDS FOR\n             MODULES ELIGIBLE TO BE TAKEN OFFLINE.\n\n             THESE DATA SETS ARE INPUT TO SUBSEQUENT LIBRARIAN STEPS\n             THAT WILL MERGE THE COPIED MODULES ONTO A UPDATED\n             ARCHIVE TAPE AND DELETE THE MODULES FROM THE LIBSPOOL\n             DATA SET AFTER THE MERGE IS SUCCESSFUL.\n\nOPS4321G - PROCESSING FLOW (ASSEMBLER)\n\n  (1) CHECK PARMLIST FOR 'W' ; IF WEEKLY RUN SET WEEKLY RUN SWITCH TO1.\n      IF LENGTH OF PARAMETER INPUT IS 7 BYTES THEN ASSUME THAT THE NEXT\n      6 BYTES ARE THE DATE (YYMMDD) OF THE WEEKLY MEMBER TO BE WRITTEN\n      TO THE DIRECTORY DATA SET.\n  (2) DELETE #DAILY MEMBER FROM THE DIRECTORY DATASET.\n  (3) GET THE DATASET NAME FROM THE TAPE DD.\n  (4) LINK TO THE SORT PROGRAM. CHECK FOR FIRST TIME THRU THE E15 EXIT\n           IF YES PASS A X'00' RECORD TO THE SORT WHICH WILL LATER BE\n           REPLACED BY THE DSN HEADER FROM THE TAPE DD.\n\n  (5) GET A RECORD FROM THE ARCHIVE MASTER INDEX.\n  (6) FORMAT THE MASTER RECORDS TO MAKE A DIRECTORY RECORD. SAVE THE\n           HIGHEST AND LOWEST RUN DATES FROM THE MASTER RECORD. CONVERT\n           DATES FROM JULIAN TO GREGORIAN AND PASS NEW RECORD TO THE\n           SORT.\n  (7) CHECK FOR THE END OF THE INPUT MASTER, IF SO SET RETURN CODE 8\n           TO END E15 EXIT.\n  (8) OPEN THE  DIRECTORY MEMBER AS A SEQUENTIAL DATASET AND UPDATE THE\n           THE X'00' RECORD WITH THE DIRECTORY LABEL FROM THE TAPE DD.\n  (9) OPEN THE DIRECTORY AS PARTITIONED TO UPDATE THE DATASET DIRECTORY\n           WITH USER INFORMATION OF THE HIGHEST AND LOWEST RUN DATES\n           THAT WERE SAVED FROM THE INPUT MASTER.\n  (10) CHECK IF A WEEKLY RUN IF SO REPLACE THE #DAILY MEMBER NAME WITH\n           A NEW MEMBER #WYYMMDD.\n  (11) CLOSE THE DIRECTORY , SET RC=0 AND END THE PROGRAM.\n\nOPS4322G - PROCESSING FLOW (ASSEMBLER)\n\n (1) IF PARAMETER INPUT IS 'W' THEN MORE 'WEEKLY' TO THE HEADER LINES\n          ELSE LEAVE THEM AS THEY ARE WITH THE 'DAILY' CHARACTERS.\n (2) OPEN MASTER INDEX AND REPORT, GET THE VOLSER AND DATSET NAME FROM\n          THE TAPE DD.\n (3) GET THE CURRENT DATE AND CHANGE IT TO GREGORIAN. MOVE THE DATE TO\n          THE REPORT HEADING.\n (4) LINK TO THE SORT PROGRAM, GET AN INPUT RECORD FROM THE MASTER.\n          CONVERT THE JULIAN DATE TO GREGORIAN DATE. FORMAT AN OUTPUT\n          RECORD AND PASS IT TO THE SORT.\n (5) IF END OF THE MASTER INPUT SET RC=0 AND END E15 EXIT.\n (6) IN E35 EXIT SET UP DETAIL HEADINGS. KEEP TRACK OF PAGE COUNT AND\n          DO HEADING ROUTINE. FORMAT DETAIL RECORD AND DELETE IT FROM\n          THE SORT. PUT A DETAIL RECORD. IF ALL SORT RECORDS ARE DELETED\n          END E35 BY SETTING RC=8.\n (7) CLOSE MASTER AND REPORT SET RC=0 END PROGRAM.\n\n\nOPS4323G - ASSEMBLER\n\n THIS PROGRAM IS EXECUTED AS THE SECOND STEP OF THE LIBSPOOL CONSOLE\n STARTED TASK. IT WRITES A MESSAGE TO THE OPERATOR INDICATING THAT\n LIBSPOOL IS NO LONGER RUNNING. A REPLY OF ANY CHARACTER MUST BE\n MADE TO THIS MESSAGE TO REMOVE IT FROM THE OPERATOR CONSOLE.\n THIS IS DONE TO INSURE THAT OPERATIONS IS ALWAYS AWARE OF LIBSPOOL\n BEING ACTIVE. THIS STEP ALWAYS EXECUTES (COND=EVEN).\n\n\nOPS4341G - ASSEMBLER\n\n THIS PROGRAM IS EXECUTED AS THE LAST STEP OF THE DAILY AND WEEKLY\n ARCHIVE JOBSTREAMS. IT WRITES A MESSAGE TO THE OPERATOR THAT THE\n ARCHIVE JOB IS COMPLETE AND LIBSPOOL WILL NOW BE RESTARTED.\n\n\nFIXADRIR - JOBSTREAM TO RECREATE ONE OR ALL OF THE MEMBERS OF THE\n           ARCHIVE DIRECTORY DATA SET FROM THE WEEKLY AND LAST\n           DAILY ARCHIVE TAPES.\n\n\nLSLIBCPY -\n     THIS JOB CAN BE USED TO REALLOCATE THE LIBSPOOL DATA SET\n     TO INCREASE OR DECREASE ITS SPACE ALLOCATION OR VOLUME ALLOCATION.\n     LIBSPOOL SHOULD BE STOPPED WHILE RUNNING THIS JOB. DATA SETS SHOULD\n     BE RENAMED AFTER SUCCESSSFUL COMPLETION.\n\n\nRESTORE  -\n    THIS JOBSTREAM CAN BE USED TO RESTORE THE LIBSPOOL LIBRARIAN\n    DATA SET FROM THE BACKUP MADE OF IT IN THE DAILY ARCHIVE JOBSTREAM.\n    THE BACKUP IS TAKEN BEFORE THE MODULES TAKEN OFFLINE ARE DELETED\n    FROM THE ONLINE LIBSPOOL LIBRARIAN DATA  SET.\n    CORRESPONDING DATA SET NAMES, VOLUME SERIAL NUMBERS, AND SPACE\n    ALLOCATION WILL HAVE TO BE CHANGED.\n\n------------------------------------------------------------------------\n\n    A DAILY AND WEEKLY BATCH ARCHIVE JOB WILL BE RUN TO\n    REMOVE CHRONOLOGICALLY OLD JCL MODULES FROM THE LIBRARIAN\n    LIBSPOOL DATA SET TO A LIBRARIAN ARCHIVE TAPE DATA SET.\n\n    THE LIBSPOOL TASK WILL HAVE TO BE STOPPED BEFORE SCHEDULING\n    THIS JOB. THIS IS DONE USING THE STOP COMMAND 'P LIBSPOOL'.\n\n    THE STEPS IN THIS JOB ARE DECRIBED AS FOLLOWS:\n\nSTEP NO. STEP NAME  PROGRAM/NORMAL CONDITION CODE/STEP FUNCTION\n-------- ---------  ----------------------------------------------------\n\n   1      SELECT    OPS4320 - NORMAL CONDITION CODES ARE 0 AND 999\n                    THIS PROGRAM INTERROGATES THE LIBSPOOL LIBRARIAN\n                    DATA SET FOR MODULES THAT ARE CHRONOLOGICALLY OLDER\n                    THAN THE NUMBER OF HOURS PASSED AS A PARAMETER\n                    VALUE. LIBRARIAN COPY AND DLM CONTROL CARDS ARE\n                    CREATED FOR MODULES TO BE PUT ON ARCHIVE TAPE AND\n                    DELETED FROM THE LIBSPOOL LIBRARIAN DATA SET IN\n                    LATER LIBRARIAN JOB STEPS. ALSO INPUT AS A PARAMETER\n                    VALUE IS THE NUMBER OF MODULES TO BE ARCHIVED\n                    THAT MUST BE SURPASSED IF THE ARCHIVE RUN IS TO\n                    CONTINUE. THIS PROVIDES A CONTROL FOR DOING A\n                    EXPENSIVE ARCHIVE UPDATE RUN FOR A SMALL NUMBER\n                    OF MODULES. A CONDITION CODE OF 999 WILL BE\n                    GENERATED IF THIS VALUE IS NOT SURPASSED WHICH WILL\n                    SUPRESS THE EXECUTION OF THE REMAINING STEPS.\n                    A ZERO CONDITION CODE INDICATES THAT THE MINIMUM\n                    NUMBER OF MODULES CRITERIA HAS BEEN MET.\n                    IF MCD CODE PROCESSING IS DESIRED\n                    A BASE LIBRARIAN MANAGEMENT CODE CAN BE INPUT\n                    THRU THE DATA SET DDNAME OF 'MCDCODE.\n                    DUMMYING OUT THIS DDNAME\n                    WILL SUPPRESS THE GENERATING OF MCD CONTROL CARDS.\n\n   2      COPYSTEP  LIBRARIAN - NORMAL CONDITION CODE IS 0\n                    THIS STEP INPUTS THE LIBRARIAN COPY CONTROL CARDS\n                    CREATED IN STEP #1. THE MODULES ARE COPIED FROM THE\n                    LIBRARIAN LIBSPOOL DATA SET TO A TEMPORARY DATA\n                    SET.\n\n   3      COPYTAPE  LIBRARIAN - NORMAL CONDITION CODE IS 0\n                    THIS STEP PERFORMS THE LIBRARIAN ARCHIVE TAPE\n                    UPDATE USING THE LAST ARCHIVE TAPE MASTER AND THE\n                    MODULES COPIED FROM THE LIBSPOOL LIBRARIAN DATA\n                    SET IN STEP #2.\n\n   4      LIBUP     OPS4321G - NORMAL CONDITION CODE IS 0\n                    THIS STEP PERFORMS THE UPDATE OF THE ARCHIVE\n                    DIRECTORY DATA SET INDICATING THE CONTENTS OF THE\n                    NEW ARCHIVE TAPE CREATED IN STEP 3. THE LIBSPOOL\n                    CLIST CAN BE USED TO INQUIRE INTO THIS DATA SET\n                    BASED ON THE SAME SELECTION CRITERIA USED IN\n                    INTERROGATING THE LIBSPOOL DATA SET.\n\n                       1) GENERIC JOB NAME\n                       2) USER-ID OF THE JOB\n                       3) JOB NUMBER\n                       4) LIBRARIAN MODULE NAME\n                       5) ALL MODULES\n\n                    THE SELECTION IS QUALIFIED BY A DATE INTERVAL BASED\n                    ON THE RUN DATE FOR A JOB. A DISPLAY WILL BE MADE\n                    BACK TO THE TERMINAL INDICATING THE ARCHIVE TAPE\n                    DATA SET NAME FOLLOWED BY THE THE FOLLOWING DATA\n                    OF THE MODULES WHICH SATISFIED THE SELECTION\n                    CRITERIA WITHIN THE DATE INTERVAL SPECIFIED.\n\n                       1) JOB NAME\n                       2) USER-ID\n                       3) RUN DATE\n                       4) START RUN TIME\n                       5) END RUN TIME\n                       6) LIBRARIAN LIBSPOOL MODULE NAME\n\n   5      LIBPRT    OPS4322G - NORMAL CONDITION CODE IS 0\n                    THIS STEP REPORTS THE CONTENTS OF THE UPDATED\n                    ARCHIVE TAPE CREATED IN STEP #3. THE ARCHIVE TAPE\n                    DATA SET NAME AND TAPE VOLUME SERIAL NUMBER\n                    ARE IN THE HEADING OF EACH REPORT\n                    PAGE. THE DATA IS REPORTED IN JOB NAME, RUN DATE,\n                    RUN START TIME SEQUENCE. THE LAST DAILY\n                    REPORT AND EACH WEEKLY REPORT\n                    SHOULD BE FILED IN OPERATIONS AS AN ALTERNATE\n                    SOURCE OF INFORMATION AS TO THE CONTENTS OF THE\n                    ARCHIVE TAPES.\n\n   6      BACKUPM   LIBRARIAN - NORMAL CONDITION CODE IS 0\n                    THIS STEP BACKS UP THE LIBRARIAN DATA SET AS THE\n                    SECOND FILE ON THE UPDATED ARCHIVE TAPE CREATED IN\n                    STEP #3. THIS BACKUP IS DONE PRIOR TO DELETING THE\n                    MODULES THAT WERE COPIED TO ARCHIVE TAPE IN STEP #3.\n\n   7      DELETEM   LIBRARIAN - NORMAL CONDITION CODE IS 0\n                    THIS STEP INPUTS THE DLM CONTROL CARDS CREATED IN\n                    STEP #1 TO DELETE THE MODULES THAT WERE COPIED TO\n                    ARCHIVE TAPE IN STEP #3.\n\n   8      OPERMSG   OPS4341G - NORMAL CONDITION CODE IS 0\n                    THIS STEP WRITES A MESSAGE TO THE OPERATOR THAT THE\n                    ARCHIVE JOBSTREAM IS NOW COMPLETE AND THAT THE\n                    LIBSPOOL TASK WILL NOW BE RESTARTED.\n\n   9      STARTLS   IEBGENER - NORMAL CONDITION CODE IS 0\n                    THIS STEP SUBMITS A COMMAND THRU THE INTERNAL\n                    READER TO START LIBSPOOL.\n\n            ONCE A WEEK (OR SOME OTHER WORKABLE TIME PERIOD THAT IS\n            DEPENDENT ON THE VOLUME OF JOBS PROCESSED THRU THE\n            LIBSPOOL SYSTEM) ANOTHER\n            BATCH ARCHIVE JOB IS RUN IN PLACE OF THE DAILY ARCHIVE\n            JOB. BESIDES PERFORMING THE TASKS IN THE DAILY ARCHIVE\n            JOB THE FOLLOWING IS ALSO DONE:\n\n            1) THE ARCHIVE DATA IS UPDATED ONTO A WEEKLY ARCHIVE\n               TAPE. WEEKLY ARCHIVE TAPE ARE KEPT FOR THE PERIOD\n               JCL HAS BEEN DESIGNATED TO BE MADE AVAILIABLE FROM\n               ARCHIVE (EG. 2 1/2 YEARS). THEREFORE IF A WEEKLY\n               ARCHIVE TAPE IS CREATED ONCE A WEEK AND JCL IS TO BE\n               AVAILIABLE FOR UP TO 2 1/2 YEARS A GENERATION DATA\n               GROUP OF 130 ENTRIES SHOULD BE CREATED FOR THE WEEKLY\n               ARCHIVE TAPE DATA SET.\n\n            2) A NULL DAILY ARCHIVE DATA SET IS CREATED TO BE USED\n               TO START ACCUMULATING JCL MODULES FOR THE NEXT WEEK.\n\n            3) THE ARCHIVE DIRECTORY DATA SET IS COMPRESSED.\n\n            4) THE RESTORE FROM ARCHIVE DATA SET IS DELETED AND\n               A NEW ONE IS ALLOCATED.\n\n            5) THE NUMBER OF MEMBERS IN THE ARCHIVE DIRECTORY\n               DATA SET IS LIMITED TO THE NUMBER OF GENERATIONS\n               MAINTAINED OF THE WEEKLY ARCHIVE DIRECTORY TAPE\n               GENERATION DATA GROUP. (PROPOSED)\n\n\nLIBSPOOL PROBLEMS\n-----------------\n\nTHE FOLLOWING ARE KNOWN CURRENT PROBLEMS IN USING LIBSPOOL:\n\n  1) JCL QUEUED TO PRINT BY THE LIBSPOOL TASK PRINTS JOB SEPARATOR\n     PAGES FOR EACH SECTION OF JCL OUTPUT. (JES LOG, JCL, EXECUTION\n     MESSAGES). THE NEW JES SCHEDULED TO BE OPERATIONAL IN 1983\n     CORRECTS THIS PROBLEM.\n\n  2) AFTER ADDING THE LIBSPOOL MSGCLASS TO THE JOB CARD,\n     JCL WHICH IS DUAL ROUTED WILL RESULT IN THE JCL NOT TO BE\n     SENT TO THE REMOTE DESTINATION SPECIFIED ON THE /*OUTPUT CARD.\n     DUAL ROUTING OUTPUT CARDS FOR JCL APPEAR AS:\n     /*OUTPUT JCL DEST=(LOCAL,RMT10)\n\n\n  LIBSPOOL INSTALLATION PROCEDURES\n------------------------------------\n\n    ALL SOURCE AND JCL MODULES ARE CONTAINED IN THE DATA SET\n    SYSX.LIBSPOOL.DATA.\n    THE MEMBERS OF THIS DATA SET SHOULD BE\n    USED TO INSTALL LIBSPOOL.\n\n   THE FOLLOWING TASKS SHOULD BE COMPLETED TO INSTALL LIBSPOOL:\n\n    1) LINK THE PROGRAMS USED BY LIBSPOOL. THE FOLLOWING MEMBERS\n       WERE USED TO LINK THE REQUIRED PROGRAMS.\n\n         JCLLISTL - LIBSPOOL PROGRAM (LINK INTO AN AUTHORIZED LIBRARY)\n                    SET THE VALUES AT THE BEGINNING OF THE JCLLIST\n                    SOURCE FOR:\n             1) MSGCLIST - THE MSGCLASSES TO BE SERVICED BY LIBSPOOL\n             2) &RECLASS-PRINT SYSOUT CLASS FOR JCL PRINTED BY LIBSPOOL\n             3) &PRODID-FIRST CHARACTER OF THE USER IDS TO BE PROCESSED\n                        BY LIBSPOOL (SPACE VALUE WILL SUPRESS THIS).\n             4) &DUMMYCLS-JES2 DEFINED DUMMY SYSOUT CLASS\n             5) &SYSOUTMX-RECORD LIMIT FOR EACH NON JCL SYSOUT\n             6) &MSGCLPRT-MSGCLASS TO BE PRINTED ALWAYS BY LIBSPOOL\n             7) &MSGCLCC0-PRINT JCL IF CONDITION CODE FOUND GREATER 0\n         OPS4318L - LIBSPOOL LIBRARIAN DATA SET INQUIRY PROGRAM\n                    CALLED IN THE LIBSPOOL CLIST\n         OPS4319L - LIBSPOOL ARCHIVE DIRECTORY DATA SET INQUIRY PROGRAM\n                    CALLED IN THE LIBSPOOL CLIST\n         OPS4320L - DAILY ARCHIVE MODULE SELECTION PROGRAM\n         OPS4321L - DAILY ARCHIVE DIRECTORY UPDATE PROGRAM\n         OPS4322L - DAILY ARCHIVE TAPE CONTENTS REPORT PROGRAM\n         OPS4323L - LIBSPOOL INACTIVE NOTIFICATION PROGRAM\n         OPS4341L - LIBSPOOL ARCHIVE COMPLETE NOTIFICATION PROGRAM\n\n       MAKE APPROPRIATE JCL CHANGES AS NECESSARY.\n\n    2) ALLOCATE THE DATA SETS REQUIRED BY LIBSPOOL\n\n         ALLOCADR - ALLOCATE THE LIBSPOOL ARCHIVE DIRECTORY DATA SET\n         ALLOCARC - ALLOCATE THE LIBSPOOL RESTORE FROM ARCHIVE\n                    LIBRARIAN DATA SET\n         ALLOCLS  - ALLOCATE THE CURRENT LIBSPOOL LIBRARIAN DATA SET\n         OXYP     - CREATE THE GENERATION DATA GROUP INDEXES FOR THE\n                    DAILY AND MONTHLY ARCHIVE TAPES.\n\n       MAKE APPROPRIATE JCL CHANGES AS NECESSARY.\n\n    3) COPY THE FOLLOWING JCL PROCEDURES TO A SYSTEM PROCLIB\n\n         OPSX06   - DAILY ARCHIVE JOB\n         OPSX07   - WEEKLY ARCHIVE JOB\n         OPSX08   - RESTORE FROM TAPE ARCHIVE\n         LIBSPOOL - CONSOLE STARTED TASK LIBSPOOL JCL\n\n       MAKE APPROPRIATE JCL CHANGES AS NECESSARY.\n\n    4) COPY THE FOLLOWING PARMLIB MEMBERS TO A PARMLIB\n\n         OPSX0601 - BASE MCD CODE FOR THE LIBSPOOL DATA SET (OPTIONAL)\n         OPSX0602 - LIBRARIAN CONTROL CARD = -OPT NOCYCLE,INDEX\n         OPSX0603 - LIBRARIAN CONTROL CARDS = -OPT BKUPTAPE\n                                              -END\n         OPSX0604 - JES2 $VS COMMAND TO START LIBSPOOL\n                    /*$VS,'S LIBSPOOL'\n         OPSX0701 - BASE MCD CODE FOR THE LIBSPOOL DATA SET (OPTIONAL)\n         OPSX0702 - LIBRARIAN CONTROL CARD = -OPT NOCYCLE,INDEX\n         OPSX0703 - LIBRARIAN CONTROL CARDS = -OPT BKUPTAPE\n                                              -END\n         OPSX0704 - LIBRARIAN CONTROL CARD = -OPT NOCYCLE,INDEX,NOINPUT\n                                              -END\n         OPSX0705 - IEBCOPY CONTROL CARD = COPY INDD=DIR,OUTDD=DIR\n         OPSX0706 - LIBRARIAN CONTROL CARDS\n                    -OPT INIT,DISK,SEQ=/81,8,10,10/\n                    -END\n         OPSX0707 - JES2 $VS COMMAND TO START LIBSPOOL\n                    /*$VS,'S LIBSPOOL'\n\n    5) COPY THE LIBSPOOL CLIST FROM DSNAME=SYSX.LIBSPOOL.CLIST(LIBSPOOL)\n       TO A COMMON CLIST LIBRARY.\n       MAKE CORRESPONDING SYMBOLIC NAME CHANGES AS NECESSARY.\n\n    6) DEFINE HELD CLASS(ES) IN THE JES2 PARAMETERS\n       CURRENTLY PROGRAM JCLLIST WILL PROCESS SYSOUT CLASSES W,X AND 0\n\n    7) ADD A START COMMAND FOR LIBSPOOL TO SYS1.PARMLIB(COMMND00)\n       TO ALLOW LIBSPOOL TO START UP AT IPL TIME.\n\n    8) DEFINE ACF2 RULES\n\n         ACF2RULE - DEFINES ACF2 RULES FOR LIBSPOOL DATA SETS\n\n    9) MODIFY THE DAILY ADD WEEKLY JCL ARCHIVE JOBSTREAMS AS NECESSARY.\n\n         DAILY - $LIBDALY\n        WEEKLY - $LIBWKLY\n\n  LIBSPOOL ASSITANCE\n ____________________\n\n              TECHNICAL SUPPORT OF THE HOUSTON DATA CENETR IS\n              AVIALIABLE TO SERVICE PROBLEMS ENCOUNTERED WITH\n              LIBSPOOL . OXYCOM 920-3850.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#OPERGDE": {"ttr": 776, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x82%\\x7f\\x00\\x83\\x16\\x7f\\x14\\x04\\x01\\xfc\\x01O\\x01\\x1c\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1982-09-14T00:00:00", "modifydate": "1983-06-16T14:04:00", "lines": 508, "newlines": 335, "modlines": 284, "user": "SYSXKMB"}, "text": "\n   LIBSPOOL OBJECTIVE\n  --------------------\n\nALLEVIATE PROBLEMS INVOLVED IN REVIEWING, COLLATING, STORING,\nRETRIEVING A LARGE VOLUME OF PRODUCTION JOB CONTROL LANGUAGE LISTINGS.\n\n       LIBSPOOL ATTEMPTS TO ADDRESS THESE PROBLEMS BY:\n\n           1) PROVIDING AN AUTOMATIC REVIEW OF PRODUCTION TYPE JCL\n              LISTINGS LOOKING FOR NON-NORMAL RESULTS BY MEANS OF A\n              PREDEFINED SET OF ABEND CODES.\n\n           2) AUTOMATING AND ORGANIZING THE STORING AND RETRIEVING\n              OF ON-LINE JCL.\n\n           3) AUTOMATING AND ORGANIZING THE ARCHIVING AND RETRIEVING\n              OF JCL FROM ARCHIVE.\n\n           4) CUTTING DOWN ON JCL PRINT OUTPUT.\n\n   LIBSPOOL DATA SETS\n  --------------------\n\n          1) SYSX.LIBSPOOL.LIBPROD -\n                          CURRENT LIBRARIAN JCL LIBRARY\n                          CONTAINS THE CURRENT JCL MODULES\n                          GOTTEN FROM THE LIBSPOOL TASK.\n\n          2) SYSX.LIBSPOOL.LIBREST -\n                          RESTORE FROM LIBRARIAN ARCHIVE TAPE\n                          LIBRARIAN JCL LIBRARY\n\n          3) SYSX.LIBSPOOL.ARCPDS -\n                          ARCHIVE DIRECTORY\n                          PARTIONED DATA SET CONTAINING INFORMATION\n                          ON THE CONTENTS OF THE LIBRARIAN ARCHIVE\n                          TAPES.\n\n          4) PPODOPR.LIBSPOOL.DALYARCH -\n                           DAILY LIBRARIAN ARCHIVE TAPE\n\n          5) PPODOPR.LIBSPOOL.WKLYARCH -\n                            WEEKLY LIBRARIAN ARCHIVE TAPE\n\n   LIBSPOOL OPERATION\n  --------------------\n\n           LIBSPOOL RUNS AS A CONSOLE STARTED TASK THAT CAN BE\n           STARTED AUTOMATICALLY AT IPL TIME AND WILL NORMALLY\n           ALWAYS BE ACTIVE. IT WILL NEEDED TO BE STOPPED WHEN A\n           DAILY ARCHIVE JOB IS RUN WHICH WILL REMOVE\n           CHRONOLOGICALLY OLD JCL MODULES FROM THE LIBSPOOL DATA\n           SET.\n\n           LIBSPOOL CAN BE STOPPED WITH THE COMMAND:\n\n                        P LIBSPOOL\n\n           LIBSPOOL CAN BE STARTED UP WITH THE COMMAND:\n\n                        S LIBSPOOL\n\n           IF LIBSPOOL TERMINATES WITH AN ABEND OR A STOP COMMAND\n           A MESSAGE WILL BE WRITTEN TO THE OPERATOR\n           INDICATING THAT LIBSPOOL IS NO LONGER RUNNING.\n           THIS SHOULD INSURE THAT OPERATIONS WILL ALWAYS\n           KNOW THAT LIBSPOOL IS ACTIVE. THE MESSAGE WILL NOT\n           GO OFF THE OPERATOR CONSOLE UNTIL A REPLY OF ANY\n           CHARACTER IS MADE TO IT.\n\n           AT END EXECUTION FOR PRODUCTION JOBS SPECIFYING A\n           SPECIFIC MSGCLASS ON THE JOB CARD LIBSPOOL WILL OBTAIN\n           THE JCL AND SELECTED SYSOUT OUTPUT FROM JES2.\n           LIBSPOOL WILL ONLY PROCESS JOBS RUN WITH A 'P' AS THE\n           FIRST CHARACTER OF THE USER-ID. ALL OTHER JOBS USING A\n           LIBSPOOL MSGCLASS WILL BE DELETED FROM THE SYSTEM.\n           JCL OUTPUT WILL CONSIST OF:\n\n                        1) JES LOG\n                        2) JCL\n                        3) EXECUTION MESSAGES\n\n            SELECTED SYSOUT OUTPUT CAN BE CAPTURED BY SPECIFING\n            SYSOUT=* ON THE DD STATEMENT OF THE SYSOUT WHICH IS\n            DESIRED TO BE CAPTURED WITH THE JCL. EACH NON-JCL SYSOUT\n            DATA SET IS LIMITED TO A MAXIMUM NUMBER OF LINES (500).THIS\n            IS DONE TO PROTECT LIBSPOOL AGAINST DISK SPACE PROBLEMS.\n\n            THIS OPTION WILL ONLY FUNCTION FOR JOBS THAT\n            ARE RUN ON THE NIA NODE WHOSE PRINT IS NOT ROUTED TO\n            ANOTHER NODE. THIS OPTION IS NOT AVAILIABLE FOR JOBS RUN\n            ON ANOTHER NODE (EG. HOU) WHOSE PRINT (JCL) IS ROUTED\n            BACK TO THE NIA NODE. JCL (JES2 LOG, JCL, EXECUTION\n            MESSAGES) IS THE ONLY SYSOUT OUTPUT THAT CAN BE CAPTURED\n            BY LIBSPOOL FOR JOBS RUN ON ANOTHER NODE. LIBSPOOL WILL\n            NOT OPERATE PROPERLY IF A NON-JCL SYSOUT (SYSOUT=*) IS\n            SENT BACK TO THE NIA NODE. EVERY EFFORT SHOULD BE MADE\n            TO AVOID THIS SITUATION. (SYSOUT=* OUTPUT CAN ONLY BE\n            CAPTURED BY LIBSPOOL FOR ONE STEP JOBS RUN ON ANOTHER\n\n            THE LIBSPOOL DATA SET WILL ALLOW APPROXIMATELY A MAXIMUM\n            OF 15,000 RECORDS PER JOB. PRINT LINES GREATER THAN 80\n            CHARACTERS WILL TAKE 2 RECORDS WHEN STORED BY LIBSPOOL.\n\n            LIBSPOOL WILL SCAN THE JCL LOOKING FOR A MATCH ON A\n            PRE-DEFINED SET OF ABEND CONDITIONS. A MATCH OF\n            ANY OF THE FOLLOWING IBM MESSAGE IDENTIFICATIONS WILL RESULT\n            IN THE JCL TO BE QUEUED FOR OUTPUT UNDER SYSOUT CLASS J.\n\n                  IEF251I - JOB CANCELLED\n                  IEF283I - NOT DELETED X\n                  IEF287I - NOT RECTLGD/CATALGD/UNCATLGD\n                  IEF450I - ABEND\n                  IEF451I - ENDED BY CC\n                  IEF452I - JOBFAIL/JOB NOT RUN JCL ERROR\n                  IEF453I - JOB FAILED - JCL ERROR\n\n              THE JOB CARD MSGCLASS PARAMETER IS USED TO CONTROL:\n\n                  1) SELECTION OF JCL OUTPUT BY LIBSPOOL\n                  2) PRINTING OF THE JCL\n                  3) PRINTING OF THE JCL BASED ON CONDITION CODE\n                     VALUES ALLOWED\n\n              THE FOLLOWING IDENTIFIES THE MSGCLASS VALUES THAT\n              LIBSPOOL WILL SELECT FOR PROCESSING AND THE CONDITION\n              CODE VALUES THAT ARE ALLOWED FOR THAT MESSAGE CLASS.\n\n                 MSGCLASS                USAGE\n                 ________        _______________________\n                    X            JCL OF THIS MSGCLASS WILL ALWAYS PRINT.\n                    W            CONDITION CODES GREATER THAN 0 QUEUES\n                                 JCL TO BE PRINTED UNDER SYSOUT CLASS J.\n\n              AS JCL IS PROCESSED BY LIBSPOOL FOR A JOB, A WTOR\n              MESSAGE IS WRITTEN BY LIBSPOOL TO INDICATE TO THE OPERATOR\n              WHAT LIBSPOOL FOUND WHEN IT SCANNED THE JCL. THE WTOR\n              MESSAGES WILL REMAIN ON THE OPERATOR CONSOLE UNTIL A REPLY\n              OF ANY CHARACTER IS MADE TO IT. MORE THAN ONE WTOR CAN BE\n              OUTSTANDING FROM LIBSPOOL AT A TIME. THE FORMAT OF THE\n              MESSAGES IS:\n\n              LIBSPOOL: XXXXXXXX-YYYY-Z - MMMMMMMMMMMMMMMMMMMMMM\n\n              WHERE XXXXXXXX - JOB NAME\n                        YYYY - JOB NUMBER\n                           Z - JOB MSGCLASS\n                        MM.. - MESSAGE (MAXIMUM OF 22 CHARACTERS)\n\n              A JOB RUN UNDER MSGCLASS W THAT RUNS WITHOUT A ABEND\n              OR CONDITION CODE GREATER THAN ZERO OR ANY OTHER PROBLEM\n              SUCH AS A NOT CATALOGED OR NOT DELETED MESSAGE WILL HAVE\n              THE FOLLOWING MESSAGE - 'SUCCESSFULLY COMPLETED'.\n\n              A JOB RUN UNDER MSGCLASS X THAT RUNS WITHOUT A ABEND\n              OR ANY OTHER PROBLEM\n              SUCH AS A NOT CATALOGED OR NOT DELETED MESSAGE WILL HAVE\n              THE FOLLOWING MESSAGE - 'PRINTED - PRINT MSGCLS'.\n\n              WHEN A JOB IS PRINTED BECAUSE OF A PROBLEM, LIBSPOOL\n              WILL PUT ANY ONE OF THE FOLLOWING IN THE MESSAGE WRITTEN\n              TO THE OPERATOR.\n\n                 *****  ABENDED  *****\n                 *** JOB CANCELLED ***\n                 DATA SET NOT CATALOGED\n                  DATA SET NOT DELETED\n                 JOB ENDED BY COND CODE\n                 ***** JCL ERROR *****\n                 CONDITION CODE > 0000\n                 PRINTED - NOT EXECUTED\n\n              THIS SHOULD HIGHLIGHT TO THE OPERATOR THE REASON FOR THE\n              PRINTING OF THE JCL AND HELP IN RESULTING IN THE PROPER\n              FOLLOW-UP ACTION.\n\n              IT SHOULD BE NOTED THAT A PRINTED JOB FOR ANY OF THE\n              REASONS IN THE ABOVE LIST COULD HAVE MORE THAN\n              ONE PROBLEM RECOGNIZED BY LIBSPOOL. HOWEVER, MESSAGES WILL\n              BE USED IN THE ORDER PRESENTED ABOVE. FOR EXAMPLE, A JOB\n              COULD HAVE ABENDED AND HAVE A NOT CATALOGED MESSAGE IN A\n              PRIOR STEP. LIBSPOOL WILL INDICATE AN ABEND FOR THE JOB\n              BUT NOT THE NOT CATALOGED CONDITION.\n\n              IN ALL CASES THE JCL WILL BE ADDED TO THE LIBSPOOL\n              LIBRARIAN DATA SET. LIBSPOOL COSTRUCTS AN EIGHT (8)\n              CHARACTER LIBRARIAN MODULE NAME FOR THE JCL OF THE\n              FOLLOWING FORMAT:\n\n                        BYTE  1   - LETTER A THRU Z\n                        BYTES 2-4 - JULIAN DAY NUMBER\n                        BYTES 5-8 - JES2 JOB NUMBER\n\n              THE LETTER IN THE FIRST BYTE IS NORMALLY 'A' BUT WILL BE\n              INCREMENTED THRU 'Z' IF IT IS FOUND THAT A MODULE ALREADY\n              EXISTS ON THE LIBSPOOL LIBRARIAN DATA SET OF THAT NAME.\n\n              WHILE THE JCL IS ON-LINE IN THE LIBSPOOL DATA SET\n              THE 'LIBSPOOL' CLIST CAN BE USED TO DO INQUIRY\n              SCANNING FOR MATCHES ON ANY\n              ONE OF THE FOLLING CRITERIA:\n\n                    1) GENERIC JOB NAME\n                    2) USER-ID OF THE JOB\n                    3) JOB NUMBER\n                    4) LIBRARIAN MODULE NAME\n                    5) ALL MODULES\n\n              A FORMATTED DISPLAY WILL BE MADE BACK TO THE TERMINAL\n              SHOWING ANY MODULES THAT MATCHED THE SELECTION CRITERIA\n              USED. INFORMATION DISPLAYED WILL CONSIST OF:\n\n                    1) JOB NAME\n                    2) JOB NUMBER\n                    3) USER-ID\n                    4) LIBRARIAN LIBSPOOL MODULE NAME\n                    5) RUN DATE\n                    6) START RUN TIME\n                    7) END RUN TIME\n\n              USING THE INFORMATION FROM THE ABOVE DISPLAY\n              TO IDENTIFY THE RUN(S) IN QUESTION\n              THE USER CAN THEN USE THE LIBSPOOL MODULE NAME TO\n              SELECT THE JCL OF INTEREST FOR DISPLAY,PRINT, OR LIBGET\n              THRU USE OF THE LIBSPOOL CLIST.\n\n              THE LIBSPOOL CLIST CAN ALSO BE USED TO INQUIRE INTO\n              THE CONTENTS OF THE LIBSPOOL ARCHIVE TAPES. THE\n              SELECTION CRITERIA USED IS THE SAME USED IN\n              INTERROGATING THE LIBSPOOL DATA SET.\n\n                    1) GENERIC JOB NAME\n                    2) JOB NUMBER\n                    3) LIBRARIAN MODULE NAME\n                    4) USER-ID OF THE JOB\n                    5) ALL MODULES\n\n              THE SELECTION IS QUALIFIED BY A DATE INTERVAL BASED\n              ON THE RUN DATE FOR A JOB. A DISPLAY WILL BE MADE\n              BACK TO THE TERMINAL INDICATING THE ARCHIVE TAPE\n              DATA SET NAME FOLLOWED BY THE THE FOLLOWING DATA\n              OF THE MODULES WHICH SATISFIED THE SELECTION\n              CRITERIA WITHIN THE DATE INTERVAL SPECIFIED.\n\n                    1) JOB NAME\n                    2) JOB NUMBER\n                    3) USER-ID\n                    4) LIBRARIAN LIBSPOOL MODULE NAME\n                    5) RUN DATE\n                    6) START RUN TIME\n                    7) END RUN TIME\n\n              HAVING OBTAINED THE ARCHIVE TAPE DATA SET NAME AND THE\n              LIBSPOOL MODULE NAME FROM THE ABOVE DISPLAY, THE LIBSPOOL\n              CLIST CAN BE USED TO SUBMIT A JOB TO BATCH TO RESTORE THE\n              JCL TO THE LIBSPOOL RESTORE FROM ARCHIVE DATA SET. THE\n              LIBSPOOL CLIST CAN AGAIN BE USED TO INQUIRE INTO THIS\n              DATA SET.\n\n              JOBS CANCELLED BEFORE BEING SCHEDULED FOR EXECUTION\n              ARE ALSO CAPTURED BY LIBSPOOL. THE\n              RUN DATE USED WILL BE THE DATE THE JCL WAS ADDED\n              TO THE LIBSPOOL LIBRARIAN DATA SET.\n\n              LIBSPOOL WILL GENERATE A REPORT WRITTEN TO THE 'REPORT'\n              DDNAME IN THE LIBSPOOL JCL. THE REPORT WILL PRINT WHEN THE\n              LIBSPOOL TASK IS STOPPED. IT WILL CONTAIN INFORMATION ON\n              ALL THE JOBS IT PROCESSED. THIS WILL INCLUDE MODULE NAME,\n              JOBNAME, USER ID, JOB START DATE, JOB START TIME, JOB END\n              TIME, JOB MSGCLASS, REROUTED TO PRINT INDICATION, AND A\n              LIBSPOOL LIBRARY ERROR INDICATION.\n\n              A DAILY AND WEEKLY BATCH ARCHIVE JOB WILL BE RUN TO\n              REMOVE CHRONOLOGICALLY OLD JCL MODULES FROM THE LIBRARIAN\n              LIBSPOOL DATA SET TO A LIBRARIAN ARCHIVE TAPE DATA SET.\n\n             THE LIBSPOOL TASK WILL HAVE TO BE STOPPED BEFORE SCHEDULING\n             THIS JOB. THIS IS DONE USING THE STOP COMMAND 'P LIBSPOOL'.\n\n              THE STEPS IN THIS JOB ARE DECRIBED AS FOLLOWS:\n\nSTEP NO. STEP NAME  PROGRAM/NORMAL CONDITION CODE/STEP FUNCTION\n-------- ---------  ----------------------------------------------------\n\n   1      SELECT    OPS4320 - NORMAL CONDITION CODES ARE 0 AND 999\n                    THIS PROGRAM INTERROGATES THE LIBSPOOL LIBRARIAN\n                    DATA SET FOR MODULES THAT ARE CHRONOLOGICALLY OLDER\n                    THAN THE NUMBER OF HOURS PASSED AS A PARAMETER\n                    VALUE. HOURS=NNN\n                    LIBRARIAN COPY AND DLM CONTROL CARDS ARE\n                    CREATED FOR MODULES TO BE PUT ON ARCHIVE TAPE AND\n                    DELETED FROM THE LIBSPOOL LIBRARIAN DATA SET IN A\n                    LATER LIBRARIAN JOB STEP. ALSO INPUT AS A PARAMETER\n                    VALUE IS THE NUMBER OF MODULES TO BE ARCHIVED\n                    THAT MUST BE SURPASSED IF THE ARCHIVE RUN IS TO\n                    CONTINUE. MODULES=NNN\n                    THIS PROVIDES A CONTROL FOR DOING AN\n                    EXPENSIVE ARCHIVE UPDATE RUN FOR A SMALL NUMBER\n                    OF MODULES. A CONDITION CODE OF 999 WILL BE\n                    GENERATED IF THIS VALUE IS NOT SURPASSED WHICH WILL\n                    SUPRESS THE EXECUTION OF THE REMAINING STEPS.\n                    A ZERO CONDITION CODE INDICATES THAT THE MINIMUM\n                    NUMBER OF MODULES CRITERIA HAS BEEN MET.\n                    IF MCD CODE PROCESSING IS DESIRED\n                    A BASE LIBRARIAN MANAGEMENT CODE CAN BE INPUT\n                    THRU THE DATA SET DDNAME OF 'MCDCODE.\n                    DUMMYING OUT THIS DDNAME\n                    WILL SUPPRESS THE GENERATING OF MCD CONTROL CARDS.\n\n   2      COPYSTEP  LIBRARIAN - NORMAL CONDITION CODE IS 0\n                    THIS STEP INPUTS THE LIBRARIAN COPY CONTROL CARDS\n                    CREATED IN STEP #1. THE MODULES ARE COPIED FROM THE\n                    LIBRARIAN LIBSPOOL DATA SET TO A TEMPORARY DATA\n                    SET.\n\n   3      COPYTAPE  LIBRARIAN - NORMAL CONDITION CODE IS 0\n                    THIS STEP PERFORMS THE LIBRARIAN ARCHIVE TAPE\n                    UPDATE USING THE LAST ARCHIVE TAPE MASTER AND THE\n                    MODULES COPIED FROM THE LIBSPOOL LIBRARIAN DATA\n                    SET IN STEP #2.\n\n   4      LIBUP     OPS4321G - NORMAL CONDITION CODE IS 0\n                    THIS STEP PERFORMS THE UPDATE OF THE ARCHIVE\n                    DIRECTORY DATA SET INDICATING THE CONTENTS OF THE\n                    NEW ARCHIVE TAPE CREATED IN STEP 3.\n\n   5      LIBPRT    OPS4322G - NORMAL CONDITION CODE IS 0\n                    THIS STEP REPORTS THE CONTENTS OF THE UPDATED\n                    ARCHIVE TAPE CREATED IN STEP #3. THE ARCHIVE TAPE\n                    DATA SET NAME AND TAPE VOLUME SERIAL NUMBER\n                    ARE IN THE HEADING OF EACH REPORT\n                    PAGE. THE DATA IS REPORTED IN JOB NAME, RUN DATE,\n                    RUN START TIME SEQUENCE. THE LAST DAILY\n                                                 ____\n                    REPORT (FROM DAILY ARCHIVE JOB-$LIBDALY) AND EACH\n                    WEEKLY REPORT (FROM WEEKLY ARCHIVE JOB-$LIBWKLY)\n                    SHOULD BE FILED IN OPERATIONS AS AN ALTERNATE\n                    SOURCE OF INFORMATION AS TO THE CONTENTS OF THE\n                    ARCHIVE TAPES.\n                    (IF A REPORT IS MISPLACED, IT CAN BE RECREATED\n                     BY A JOB THAT READS THE ARCHIVE TAPE FOR WHICH\n                     THERE IS NOT REPORT. SEE NIA TECH SUPPORT FOR\n                     ASSITANCE).\n\n   6      BACKUPM   LIBRARIAN - NORMAL CONDITION CODE IS 0\n                    THIS STEP BACKS UP THE LIBRARIAN DATA SET AS THE\n                    SECOND FILE ON THE UPDATED ARCHIVE TAPE CREATED IN\n                    STEP #3. THIS BACKUP IS DONE PRIOR TO DELETING THE\n                    MODULES THAT WERE COPIED TO ARCHIVE TAPE IN STEP #3.\n\n   7      DELETEM   LIBRARIAN - NORMAL CONDITION CODE IS 0\n                    THIS STEP INPUTS THE DLM CONTROL CARDS CREATED IN\n                    STEP #1 TO DELETE THE MODULES THAT WERE COPIED TO\n                    ARCHIVE TAPE IN STEP #3.\n\n   8      OPERMSG   OPS4341G - NORMAL CONDITION CODE IS 0\n                    THIS STEP WRITES A MESSAGE TO THE OPERATOR THAT THE\n                    ARCHIVE JOBSTREAM IS NOW COMPLETE AND THAT THE\n                    LIBSPOOL TASK WILL NOW BE RESTARTED.\n\n   9      STARTLS   IEBGENER - NORMAL CONDITION CODE IS 0\n                    THIS STEP SUBMITS A COMMAND THRU THE INTERNAL\n                    READER TO START LIBSPOOL.\n\n\n            ONCE A WEEK (OR SOME OTHER WORKABLE TIME PERIOD THAT IS\n            DEPENDENT ON THE VOLUME OF JOBS PROCESSED THRU THE\n            LIBSPOOL SYSTEM) ANOTHER WEEKLY BATCH ARCHIVE JOB($LIBWKLY)\n            IS RUN IN PLACE OF THE DAILY ARCHIVE JOB ($LIBDALY).\n            BESIDES PERFORMING THE TASKS IN THE DAILY ARCHIVE\n            JOB THE FOLLOWING IS ALSO DONE:\n\n            1) THE ARCHIVE DATA IS UPDATED ONTO A WEEKLY ARCHIVE\n               TAPE. WEEKLY ARCHIVE TAPES ARE KEPT FOR THE PERIOD\n               JCL HAS BEEN DESIGNATED TO BE MADE AVAILIABLE FROM\n               ARCHIVE (EG. 1 1/2 YEARS). THEREFORE IF A WEEKLY\n               ARCHIVE TAPE IS CREATED ONCE A WEEK AND JCL IS TO BE\n               AVAILIABLE FOR UP TO 1 1/2 YEARS A GENERATION DATA\n               GROUP OF 78 ENTRIES SHOULD BE CREATED FOR THE WEEKLY\n               ARCHIVE TAPE DATA SET.\n\n            2) A NULL DAILY ARCHIVE DATA SET IS CREATED TO BE USED\n               TO START ACCUMULATING JCL MODULES FOR THE NEXT WEEK.\n\n            3) THE ARCHIVE DIRECTORY DATA SET IS COMPRESSED.\n\n            4) THE RESTORE FROM ARCHIVE DATA SET IS DELETED AND A\n               NEW ONE IS ALLOCATED.\n\n            5) THE NUMBER OF MEMBERS IN THE ARCHIVE DIRECTORY\n               DATA SET IS LIMITED TO THE NUMBER OF GENERATIONS\n               MAINTAINED OF THE WEEKLY ARCHIVE DIRECTORY TAPE\n               GENERATION DATA GROUP. (PROPOSED)\n\n\n\nLIBSPOOL PROBLEMS\n-----------------\n\nTHE FOLLOWING ARE KNOWN CURRENT PROBLEMS IN USING LIBSPOOL:\n\n  1) JCL QUEUED TO PRINT BY THE LIBSPOOL TASK PRINTS JOB SEPARATOR\n     PAGES FOR EACH SECTION OF JCL OUTPUT. (JES LOG, JCL, EXECUTION\n     MESSAGES). THE NEW JES SCHEDULED TO BE OPERATIONAL IN 1983\n     CORRECTS THIS PROBLEM.\n\n  2) AFTER ADDING THE LIBSPOOL MSGCLASS TO THE JOB CARD,\n     JCL WHICH IS DUAL ROUTED WILL RESULT IN THE JCL NOT TO BE\n     SENT TO THE REMOTE DESTINATION SPECIFIED ON THE /*OUTPUT CARD.\n     DUAL ROUTING OUTPUT CARDS FOR JCL APPEAR AS:\n     /*OUTPUT JCL DEST=(LOCAL,RMT10)\n\n\n  3) LIBSPOOL ALLOCATES AND READS EACH SYSOUT DATA SET OF A JOB AS\n     A SEQUENTIAL FILE. THE JCL SYSOUT DATA SETS ARE CRITICAL TO\n     LIBSPOOL'S PROCESSING. NORMAL JCL SYSOUTS ARE SYSOUT NUMBERS\n\n         1 - JES2 CANCEL (WOULD NOT APPEAR WITH SYSOUTS 2, 3 AND 4)\n         2 - JES2 LOG\n         3 - JCL\n         4 - EXECUTION MESSAGES\n\n     LIBSPOOL MUST PROCESS THESE SYSOUTS FIRST FOR A JOB.\n     LIBSPOOL WILL NOT WORK PROPERLY WHEN SYSOUTS ARE RECEIVED BY\n     LIBSPOOL WITHOUT WITHOUT FIRST RECEIVING THE JCL SYSOUTS FOR A\n     JOB. THIS SITUATION CAN OCCUR IN TWO WAYS.\n\n     1) IN AN NJE ENVIRONMENT, LIBSPOOL JOBS USE A MSGCLASS WHICH IS\n        DEFINED ON EACH NODE AS A HELD SYSOUT CLASS. AS STEPS COMPLETE\n        IN A JOB, SYSOUTS OF A HELD CLASS CAN BE SENT BACK TO THE OUTPUT\n        DESTINATION NODE PRIOR TO END EXECUTION OF THE JOB.\n        THIS MEANS THAT NON-JCL SYSOUTS CAN BE\n        RECEIVED BY LIBSPOOL ON THE OUTPUT DESTINATION NODE BEFORE THE\n        JOB HAS COMPLETED EXECUTION ON ANOTHER NODE. THIS CREATES THE\n        PROBLEM DECRIBED ABOVE. THIS SITUATION\n        CAN BE AVOIDED BY NOT ALLOWING JOBS RUN ON ANOTHER NODE\n        TO CREATE NON-JCL SYSOUTS OF A LIBSPOOL MSGCLASS.\n        USING THE JES2  $L  COMMAND  DESCRIBED BELOW ALONG WITH A\n        GLOBAL DISPLAY COMMAND  $G D  SHOULD BE ABLE TO IDENTIFY\n        THIS SITUATION.\n\n      2) IN A SYSTEM CRASH, EXECUTING JOBS DO NOT GO THRU NORMAL JES2\n         TERMINATION (END EXECUTION). JCL SYSOUTS ARE MADE AVAILIABLE\n         AT END EXECUTION. ONCE A STEP IN A JOB COMPLETES, THE SYSOUTS\n         CREATED BY THAT STEP CONTINUE TO EXIST AFTER A SYSTEM CRASH.\n         THIS CREATES THE SITUATION DESCRIBED ABOVE.\n         THIS CAN BE CORRECTED BY THE FOLLOWING PROCEDURE:\n\n                1) UPON RE-IPL OF THE SYSTEM NOTE THE LIBSPOOL\n                   JOBS THE WERE EXECUTING. THE HARDCOPY CONSOLE\n                   PRINTOUT WILL SHOW YOU THIS UNDER JES2 MESSAGE\n                   NUMBER $HASP406.\n                2) ENTER THE JES2 COMMAND FOR THE JOBS IDENTIFIED\n                   ABOVE AS FOLLOWS:\n\n                    $L JNNNN,H       WHERE NNNN IS THE JES2 JOB NUMBER\n                    EG. $L J9445,H\n\n                         OR\n\n                    $L 'JOBNAME',H\n                    EG. $L '$AAL1209',H\n\n                   IF THE JOB HAS CREATED ANY LIBSPOOL SYSOUTS FROM\n                   STEPS THAT HAVE COMPLETED\n                   THE RESPONSE TO THIS COMMAND SHOULD BE:\n\n                    JOB 9445  $HASP000 $AAL1209       HELD 0=  2\n\n          'HELD 0=  2'  INDICATES THAT THERE EXIST 2 HELD\n         SYSOUT DATA SETS OF CLASS 0 FOR THIS JOB.\n         JOBS THAT WERE EXECUTING DURING A SYSTEM CRASH CAN\n         BE REMOVED FROM PROCESSING FROM LIBSPOOL BY RELEASEING THERE\n         SYSOUTS FROM A HELD STATUS TO A HARDCOPY PRINT STATUS.\n\n                 THIS CAN BE ACCOMPLISHED BY ENTERING THE $O COMMAND\n         AS FOLLOWS:\n\n             $O JNNNN        WHERE NNNN IS THE JES2 JOB NUMBER\n             EG. $O J9445\n\n                OR\n\n             $O 'JOBNAME'\n             EG. $O '$AAL1209'\n\n         SYSTEM RESPONSE IS:\n\n          JOB 9445  $HASP000 $AAL1209       DATA SETS RELEASED\n\n     THE RELEASED SYSOUTS CAN NOW BE PRINTED UNDER SYSOUT CLASS 0.\n\n     IF THE SYSOUT OUTPUT CREATED BY THE JOB IS NOT NEEDED THEN\n     THE JOB CAN BE SIMPLY PURGED FROM JES2 AND THE $L AND $O\n     COMMANDS NEED NOT BE USED.\n\n     ONCE ALL THE JOBS HAVING THIS PROBLEM ARE RELEASED BY THE $O\n     COMMAND, PURGED FROM THE SYSTEM OR FINISH EXECUTION (#1 ABOVE)\n     THEN LIBSPOOL SHOULD BEGIN TO PROCESS JOBS AS NORMAL.\n\n\n  LIBSPOOL ASSITANCE\n ____________________\n\n              TECHNICAL SUPPORT OF THE HOUSTON DATA CENETR IS\n              AVIALIABLE TO SERVICE PROBLEMS ENCOUNTERED WITH\n              LIBSPOOL . OXYCOM 920-3850.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#USERGDE": {"ttr": 1031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x82%\\x7f\\x00\\x83\\x16\\x7f\\x14(\\x00\\xfd\\x00\\xdc\\x00K\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1982-09-14T00:00:00", "modifydate": "1983-06-16T14:28:00", "lines": 253, "newlines": 220, "modlines": 75, "user": "SYSXKMB"}, "text": "\n   LIBSPOOL OBJECTIVE\n  --------------------\n\nALLEVIATE PROBLEMS INVOLVED IN REVIEWING, COLLATING, STORING, AND\nRETRIEVING A LARGE VOLUME OF PRODUCTION JOB CONTROL LANGUAGE LISTINGS.\n\n       LIBSPOOL ATTEMPTS TO ADDRESS THESE PROBLEMS BY:\n\n           1) PROVIDING AN AUTOMATIC REVIEW OF PRODUCTION TYPE JCL\n              LISTINGS LOOKING FOR NON-NORMAL RESULTS.\n\n           2) AUTOMATING AND ORGANIZING THE STORING AND RETRIEVING\n              OF ON-LINE JCL.\n\n           3) AUTOMATING AND ORGANIZING THE ARCHIVING AND RETRIEVING\n              OF JCL FROM ARCHIVE.\n\n           4) CUTTING DOWN ON JCL PRINT OUTPUT.\n\n   LIBSPOOL DATA SETS\n  --------------------\n\n          1) SYSX.LIBSPOOL.LIBPROD -\n                          CURRENT LIBRARIAN JCL LIBRARY\n                          CONTAINS THE CURRENT JCL MODULES\n                          GOTTEN FROM THE LIBSPOOL TASK.\n\n          2) SYSX.LIBSPOOL.LIBREST -\n                          RESTORE FROM LIBRARIAN ARCHIVE TAPE\n                          LIBRARIAN JCL LIBRARY\n\n          3) SYSX.LIBSPOOL.ARCPDS -\n                          ARCHIVE DIRECTORY\n                          PARTIONED DATA SET CONTAINING INFORMATION\n                          ON THE CONTENTS OF THE LIBRARIAN ARCHIVE\n                          TAPES.\n\n          4) PPODOPR.LIBSPOOL.DALYARCH -\n                           DAILY LIBRARIAN ARCHIVE TAPE\n\n          5) PPODOPR.LIBSPOOL.WKLYARCH -\n                            WEEKLY LIBRARIAN ARCHIVE TAPE\n\n   LIBSPOOL USAGE\n  ----------------\n\n            LIBSPOOL RUNS AS A CONSOLE STARTED TASK THAT CAN BE\n            STARTED AUTOMATICALLY AT IPL TIME AND WILL NORMALLY\n            ALWAYS BE ACTIVE.\n            AT END EXECUTION FOR PRODUCTION JOBS SPECIFYING A\n            SPECIFIC MSGCLASS ON THE JOB CARD LIBSPOOL WILL OBTAIN\n            THE JCL AND SELECTED SYSOUT OUTPUT FROM JES2.\n            LIBSPOOL WILL ONLY PROCESS JOBS RUN WITH A 'P' AS THE\n            FIRST CHARACTER OF THE USER-ID. ALL OTHER JOBS USING A\n            LIBSPOOL MSGCLASS WILL BE DELETED FROM THE SYSTEM.\n            JCL OUTPUT WILL CONSIST OF:\n\n                      1) JES LOG\n                      2) JCL\n                      3) EXECUTION MESSAGES\n\n            SELECTED SYSOUT OUTPUT CAN BE CAPTURED BY SPECIFING\n            SYSOUT=* ON THE DD STATEMENT OF THE SYSOUT WHICH IS\n            DESIRED TO BE CAPTURED WITH THE JCL. EACH SYSOUT DATA SET\n            IS CURRENTLY LIMITED TO 500 LINES OF OUTPUT. THIS IS DONE\n            TO PROTECT LIBSPOOL FROM CAPTURING LARGE SYSOUT DATA SETS\n            SUCH AS PROGRAM DUMPS WHICH WOULD CAUSE A LIBSPOOL DISK\n            SPACE PROBLEM. COBOL PROGRAM DISPLAYS AND UTILITY PROGRAM\n            MESSAGES ARE THE KIND OF SYSOUT DATA SET THAT SHOULD BE\n            CONSIDERED.\n            THIS OPTION WILL ONLY FUNCTION FOR JOBS THAT\n            ARE RUN ON THE NIA NODE WHOSE PRINT IS NOT ROUTED TO\n            ANOTHER NODE. THIS OPTION IS NOT AVAILIABLE FOR JOBS RUN\n            ON ANOTHER NODE (EG. HOU) WHOSE PRINT (JCL) IS ROUTED\n            BACK TO THE NIA NODE. JCL (JES2 LOG, JCL, EXECUTION\n            MESSAGES) IS THE ONLY SYSOUT OUTPUT THAT CAN BE CAPTURED\n            BY LIBSPOOL FOR JOBS RUN ON ANOTHER NODE. LIBSPOOL WILL\n            NOT OPERATE PROPERLY IF A NON-JCL SYSOUT (SYSOUT=*) IS\n            SENT BACK TO THE NIA NODE. EVERY EFFORT SHOULD BE MADE\n            TO AVOID THIS SITUATION. (SYSOUT=* OUTPUT CAN ONLY BE\n            CAPTURED BY LIBSPOOL FOR ONE STEP JOBS RUN ON ANOTHER\n\n            THE LIBSPOOL DATA SET WILL ALLOW APPROXIMATELY A MAXIMUM\n            OF 15,000 RECORDS PER JOB. PRINT LINES GREATER THAN 80\n            CHARACTERS WILL TAKE 2 RECORDS WHEN STORED BY LIBSPOOL.\n\n            LIBSPOOL WILL SCAN THE JCL LOOKING FOR A MATCH ON A\n            PRE-DEFINED SET OF ABEND CONDITIONS. A MATCH OF\n            ANY OF THE FOLLOWING IBM MESSAGE IDENTIFICATIONS WILL RESULT\n            IN THE JCL TO BE QUEUED FOR OUTPUT UNDER SYSOUT CLASS J\n            TO BE PRINTED AT NDC.\n\n                  IEF251I - JOB CANCELLED\n                  IEF283I - NOT DELETED X\n                  IEF287I - NOT RECTLGD/CATALGD/UNCATLGD\n                  IEF450I - ABEND\n                  IEF451I - ENDED BY CC\n                  IEF452I - JOBFAIL/JOB NOT RUN JCL ERROR\n                  IEF453I - JOB FAILED - JCL ERROR\n\n              THE JOB CARD MSGCLASS PARAMETER IS USED TO CONTROL:\n\n                  1) SELECTION OF JCL OUTPUT BY LIBSPOOL\n                  2) PRINTING OF THE JCL\n                  3) PRINTING OF THE JCL BASED ON CONDITION CODE\n                     VALUES ALLOWED\n\n              THE FOLLOWING IDENTIFIES THE MSGCLASS VALUES THAT\n              LIBSPOOL WILL SELECT FOR PROCESSING AND THE CONDITION\n              CODE VALUES THAT ARE ALLOWED FOR THAT MESSAGE CLASS.\n\n                 MSGCLASS                USAGE\n                 ________        _______________________\n                    X            JCL OF THIS MSGCLASS WILL ALWAYS PRINT.\n                    W            CONDITION CODES GREATER THAN 0 QUEUES\n                                 JCL TO BE PRINTED UNDER SYSOUT CLASS J.\n\n              IN ALL CASES THE JCL WILL BE ADDED TO THE LIBSPOOL\n              LIBRARIAN DATA SET. LIBSPOOL COSTRUCTS AN EIGHT (8)\n              CHARACTER LIBRARIAN MODULE NAME FOR THE JCL OF THE\n              FOLLOWING FORMAT:\n\n                        BYTE  1   - LETTER A THRU Z\n                        BYTES 2-4 - JULIAN DAY NUMBER\n                        BYTES 5-8 - JES2 JOB NUMBER\n\n              THE LETTER IN THE FIRST BYTE IS NORMALLY 'A' BUT WILL BE\n              INCREMENTED THRU 'Z' IF IT IS FOUND THAT A MODULE ALREADY\n              EXISTS ON THE LIBSPOOL LIBRARIAN DATA SET OF THAT NAME.\n\n              WHILE THE JCL IS ON-LINE IN THE LIBSPOOL DATA SET\n              THE LIBSPOOL CLIST CAN BE USED TO DO INQUIRY\n              SCANNING FOR MATCHES ON ANY\n              ONE OF THE FOLLING CRITERIA:\n\n                    1) GENERIC JOB NAME\n                    2) USER-ID OF THE JOB\n                    3) JOB NUMBER\n                    4) LIBRARIAN MODULE NAME\n                    5) ALL MODULES\n\n              A FORMATTED DISPLAY WILL BE MADE BACK TO THE TERMINAL\n              SHOWING ANY MODULES THAT MATCHED THE SELECTION CRITERIA\n              USED. INFORMATION DISPLAYED WILL CONSIST OF:\n\n                    1) JOB NAME\n                    2) JOB NUMBER\n                    3) USER-ID\n                    4) LIBRARIAN LIBSPOOL MODULE NAME\n                    5) RUN DATE\n                    6) START RUN TIME\n                    7) END RUN TIME\n\n              AN 'END OF DATA' MESSAGE APPEARS AFTER ALL THE DATA\n              HAS BEEN SCANNED.\n              A 'MODULE NOT FOUND' OR\n              'NO MATCHES FOUND' MESSAGE APPEARS IF NO MATCH IS\n              FOUND ON THE SEARCH CRITERIA USED.\n\n              USING THE INFORMATION FROM THE ABOVE DISPLAY\n              TO IDENTIFY THE RUN(S) IN QUESTION\n              THE USER CAN THEN USE THE LIBSPOOL MODULE NAME TO\n              SELECT THE JCL OF INTEREST FOR DISPLAY OR PRINT\n              THRU USE OF THE LIBSPOOL CLIST.\n\n              IF THE LIBSPOOL CLIST IS INTERRUPTED (PA1 KEY) BEFORE\n              COMPLETING NORMALLY (X OPTION ON THE PRIMARY MENU) THEN\n              IT MAY BE NECESSARY TO ENTER A 'FREEALL' TSO COMMAND\n              TO CLEAN UP ANY ALLOCATIONS MADE BY THE LIBSPOOL CLIST.\n              OTHERWISE THE LIBSPOOL CLIST WILL NOT WORK PROPERLY\n              IF IT IS RE-ENTERED IN THE SAME TSO SESSION.\n\n              JOBS CANCELLED BEFORE BEING SCHEDULED FOR EXECUTION\n              ARE ALSO CAPTURED BY LIBSPOOL BUT NOT PRINTED. THE\n              RUN DATE USED WILL BE THE DATE THE JCL WAS ADDED\n              TO THE LIBSPOOL LIBRARIAN DATA SET.\n\n              A DAILY OR WEEKLY ARCHIVE JOB IS RUN WHICH WILL\n              REMOVE CHRONOLOGICALLY OLD JCL MODULES FROM THE LIBRARIAN\n              LIBSPOOL DATA SET TO A LIBRARIAN ARCHIVE TAPE DATA SET.\n              CURRENTLY, JCL MODULES WILL BE LEFT ONLINE 120 HOURS\n              BEFORE BECOMING ELIGIBLE TO BE TAKEN OFFLINE.\n              THE CONTENTS OF THE ARCHIVE TAPES GENERATED IS\n              MAINTAINED IN A ONLINE ARCHIVE DIRECTORY DATA SET.\n\n              THE LIBSPOOL CLIST CAN BE USED TO INQUIRE INTO THIS\n              DATA SET BASED ON THE SAME SELECTION CRITERIA USED IN\n              INTERROGATING THE LIBSPOOL DATA SET.\n\n                    1) GENERIC JOB NAME\n                    2) USER-ID OF THE JOB\n                    3) JOB NUMBER\n                    4) LIBRARIAN MODULE NAME\n                    5) ALL MODULES\n\n              THE SELECTION IS QUALIFIED BY A DATE INTERVAL BASED\n              ON THE RUN DATE FOR A JOB. A DISPLAY WILL BE MADE\n              BACK TO THE TERMINAL INDICATING THE ARCHIVE TAPE\n              DATA SET NAME FOLLOWED BY THE THE FOLLOWING DATA\n              OF THE MODULES WHICH SATISFIED THE SELECTION\n              CRITERIA WITHIN THE DATE INTERVAL SPECIFIED.\n\n                    1) JOB NAME\n                    2) JOB NUMBER\n                    3) USER-ID\n                    4) LIBRARIAN LIBSPOOL MODULE NAME\n                    5) RUN DATE\n                    6) START RUN TIME\n                    7) END RUN TIME\n\n              KNOWING THE ARCHIVE TAPE DATA SET NAME AND THE\n              LIBRARIAN MODULE NAME OF THE JCL IN QUESTION THE LIBSPOOL\n              CLIST CAN BE USED TO SUBMIT A JOB TO BATCH TO RESTORE\n              THE MODULE TO A LIBRARIAN RESTORE FROM ARCHIVE DATA SET.\n              THE LIBSPOOL CLIST AGAIN CAN BE USED TO INTERROGATE THIS\n              DATA SET AS WOULD BE DONE TO THE CURRENT LIBRARIAN\n              LIBSPOOL DATA SET. ALL RESTORED MODULES WILL REMAIN\n              ONLINE UNTIL THE NEXT WEEKLY ARCHIVE JOB IS RUN.\n              (THIS JOB IS CURRENTLY SCHEDULED TO BE RUN EACH MONDAY\n              AT 0300 HOURS).\n\n              THE ARCHIVE JOBS ALSO GENERATE A REPORT WHICH IS\n              FILED IN OPERATIONS. THIS REPORT INDICATES THE\n              CONTENTS OF THE ARCHIVE TAPE DATA SET NAME IDENTIFIED\n              IN THE HEADING. THE SEQUENCE OF THE REPORT IS JOB NAME,\n              RUN DATE, RUN TIME. THIS REPORT IS ANOTHER WAY OF\n              DETERMINING THE CONTENTS OF THE ARCHIVE TAPES.\n\n\nLIBSPOOL PROBLEMS\n-----------------\n\nTHE FOLLOWING ARE KNOWN CURRENT PROBLEMS IN USING LIBSPOOL:\n\n  1) JCL QUEUED TO PRINT BY THE LIBSPOOL TASK PRINTS JOB SEPARATOR\n     PAGES FOR EACH SECTION OF JCL OUTPUT. (JES LOG, JCL, EXECUTION\n     MESSAGES,SYSOUTS). THE NEW JES SCHEDULED TO BE OPERATIONAL IN 1983\n     CORRECTS THIS PROBLEM.\n\n  2) AFTER ADDING THE LIBSPOOL MSGCLASS TO THE JOB CARD,\n     JCL WHICH IS DUAL ROUTED WILL RESULT IN THE JCL NOT TO BE\n     SENT TO THE REMOTE DESTINATION SPECIFIED ON THE /*OUTPUT CARD.\n     DUAL ROUTING OUTPUT CARDS FOR JCL APPEAR AS:\n     /*OUTPUT JCL DEST=(LOCAL,RMT10)\n     THIS CARD CAN BE LEFT IN JOBS THAT ARE CHANGED TO A LIBSPOOL\n     MSGCLASS. AS LONG AS A LIBSPOOL MSGCLASS IS USED IT WILL HAVE\n     NO MEANING.\n\n\n        TECHNICAL SUPPORT OF THE HOUSTON DATA CENTER IS\n        AVAILIABLE TO SERVICE PROBLEMS AND ANSWER QUESTIONS\n        ABOUT LIBSPOOL AND THE LIBSPOOL CLIST. OXYCOM 920-3850.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE848": {"ttr": 1036, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04R\\x007\\x01\\x11\\x08O\\x01\\x11\\x08O\\x149\\x00\\t\\x00\\t\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf2@@@'", "ispf": {"version": "04.82", "flags": 0, "createdate": "2011-03-25T00:00:00", "modifydate": "2011-03-25T14:39:37", "lines": 9, "newlines": 9, "modlines": 0, "user": "CBT-482"}, "text": "//***FILE 848 is from Sam Bass and is a re-introduction of the      *   FILE 848\n//*           LIBSPOOL package (which once was on this tape) to     *   FILE 848\n//*           the CBT collection.  LIBSPOOL is an adaptation of     *   FILE 848\n//*           PANSPOOL, except it is for CA-Librarian instead of    *   FILE 848\n//*           for CA-Panvalet.  Sam Bass did the original work      *   FILE 848\n//*           of the adaptation.  So here it is.                    *   FILE 848\n//*                                                                 *   FILE 848\n//*           email:  Sam.Bass@mclaneco.com                         *   FILE 848\n//*                                                                 *   FILE 848\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ACF2R": {"ttr": 1038, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x83\\x16\\x7f\\x00\\x83\\x16\\x7f\\x11$\\x00$\\x00$\\x00\\x00\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1983-06-16T00:00:00", "modifydate": "1983-06-16T11:24:00", "lines": 36, "newlines": 36, "modlines": 0, "user": "SYSXKMB"}, "text": " ACFN K(SYSX)    ADD(LIBSPOOL.LIBPROD UID(SHCS***) +\n                 R(A) E(A)) NOLIST\n ACFN K(SYSX)    ADD(LIBSPOOL.LIBPROD UID(SYSX***) +\n                 R(A) E(A)) NOLIST\n ACFN K(SYSX)    ADD(LIBSPOOL.LIBPROD UID(SHOP***) +\n                 R(A) E(A)) NOLIST\n ACFN K(SYSX)    ADD(LIBSPOOL.LIBPROD UID(PPODOPR) +\n                 R(A) W(A) A(A) E(A)) NOLIST\n ACFN K(SYSX)    ADD(LIBSPOOL.ARCPDS UID(SHCS***) +\n                 R(A) E(A)) NOLIST\n ACFN K(SYSX)    ADD(LIBSPOOL.ARCPDS UID(SYSX***) +\n                 R(A) E(A)) NOLIST\n ACFN K(SYSX)    ADD(LIBSPOOL.ARCPDS UID(SHOP***) +\n                 R(A) E(A)) NOLIST\n ACFN K(SYSX)    ADD(LIBSPOOL.ARCPDS UID(PPODOPR) +\n                 R(A) W(A) A(A) E(A)) NOLIST\n ACFN K(SYSX)    ADD(LIBSPOOL.LIBREST UID(SHCS***) +\n                 R(A) W(A) E(A)) NOLIST\n ACFN K(SYSX)    ADD(LIBSPOOL.LIBREST UID(SYSX***) +\n                 R(A) W(A) E(A)) NOLIST\n ACFN K(SYSX)    ADD(LIBSPOOL.LIBREST UID(SHOP***) +\n                 R(A) W(A) E(A)) NOLIST\n ACFN K(SYSX)    ADD(LIBSPOOL.LIBREST UID(PPODOPR) +\n                 R(A) W(A) A(A) E(A))\n ACFN K(PPODOPR) ADD(LIBSPOOL.DALYARCH.G****V- -\n                 UID(SHCS***) R(A) E(A)) NOLIST\n ACFN K(PPODOPR) ADD(LIBSPOOL.DALYARCH.G****V- -\n                 UID(SYSX***) R(A) E(A)) NOLIST\n ACFN K(PPODOPR) ADD(LIBSPOOL.DALYARCH.G****V- -\n                 UID(SHOP***) R(A) E(A)) NOLIST\n ACFN K(PPODOPR) ADD(LIBSPOOL.WKLYARCH.G****V- -\n                 UID(SHCS***) R(A) E(A)) NOLIST\n ACFN K(PPODOPR) ADD(LIBSPOOL.WKLYARCH.G****V- -\n                 UID(SYSX***) R(A) E(A)) NOLIST\n ACFN K(PPODOPR) ADD(LIBSPOOL.WKLYARCH.G****V- -\n                 UID(SHOP***) R(A) E(A))\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ACF2RULE": {"ttr": 1282, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x82\\x19?\\x00\\x83\\x16\\x7f\\x11$\\x00;\\x003\\x00\\x00\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1982-07-12T00:00:00", "modifydate": "1983-06-16T11:24:00", "lines": 59, "newlines": 51, "modlines": 0, "user": "SYSXKMB"}, "text": "//TSBATCH  JOB (@SYSUID,@SYSACCT),'LIBSPOOL ACF RULES',CLASS=A\n/*JOBPARM Q=T,I\n//*\n//* LIBSPOOL DATA SETS\n//*\n//*       1) SYSX.LIBSPOOL.LIBPROD - CURRENT LIBRARIAN JCL LIBRARY\n//*                       CONTAINS THE CURRENT JCL MODULES\n//*                       GOTTEN FROM THE LIBSPOOL TASK.\n//*\n//*       2) SYSX.LIBSPOOL.LIBREST - RESTORE FROM LIBRARIAN ARCHIVE\n//*                          TAPE LIBRARIAN JCL LIBRARY\n//*\n//*       3) SYSX.LIBSPOOL.ARCPDS - ARCHIVE DIRECTORY\n//*                          PARTIONED DATA SET CONTAINING INFORMATION\n//*                          ON THE CONTENTS OF THE LIBRARIAN ARCHIVE\n//*                          TAPES.\n//*\n//*       4) PPODOPR.LIBSPOOL.DALYARCH - DAILY LIBRARIAN ARCHIVE TAPE\n//*\n//*       5) PPODOPR.LIBSPOOL.WKLYARCH - WEEKLY LIBRARIAN ARCHIVE TAPE\n//*\n//ACFRULES EXEC  TSBATCH\n//TERMINAL DD *\n ACFN K(SYSX)    ADD(LIBSPOOL.LIBPROD UID(SHCS***) +\n                 R(A) E(A)) NOLIST\n ACFN K(SYSX)    ADD(LIBSPOOL.LIBPROD UID(SYSX***) +\n                 R(A) E(A)) NOLIST\n ACFN K(SYSX)    ADD(LIBSPOOL.LIBPROD UID(SHOP***) +\n                 R(A) E(A)) NOLIST\n ACFN K(SYSX)    ADD(LIBSPOOL.LIBPROD UID(PPODOPR) +\n                 R(A) W(A) A(A) E(A)) NOLIST\n ACFN K(SYSX)    ADD(LIBSPOOL.ARCPDS UID(SHCS***) +\n                 R(A) E(A)) NOLIST\n ACFN K(SYSX)    ADD(LIBSPOOL.ARCPDS UID(SYSX***) +\n                 R(A) E(A)) NOLIST\n ACFN K(SYSX)    ADD(LIBSPOOL.ARCPDS UID(SHOP***) +\n                 R(A) E(A)) NOLIST\n ACFN K(SYSX)    ADD(LIBSPOOL.ARCPDS UID(PPODOPR) +\n                 R(A) W(A) A(A) E(A)) NOLIST\n ACFN K(SYSX)    ADD(LIBSPOOL.LIBREST UID(SHCS***) +\n                 R(A) W(A) E(A)) NOLIST\n ACFN K(SYSX)    ADD(LIBSPOOL.LIBREST UID(SYSX***) +\n                 R(A) W(A) E(A)) NOLIST\n ACFN K(SYSX)    ADD(LIBSPOOL.LIBREST UID(SHOP***) +\n                 R(A) W(A) E(A)) NOLIST\n ACFN K(SYSX)    ADD(LIBSPOOL.LIBREST UID(PPODOPR) +\n                 R(A) W(A) A(A) E(A))\n ACFN K(PPODOPR) ADD(LIBSPOOL.DALYARCH.G****V- -\n                 UID(SHCS***) R(A) E(A)) NOLIST\n ACFN K(PPODOPR) ADD(LIBSPOOL.DALYARCH.G****V- -\n                 UID(SYSX***) R(A) E(A)) NOLIST\n ACFN K(PPODOPR) ADD(LIBSPOOL.DALYARCH.G****V- -\n                 UID(SHOP***) R(A) E(A)) NOLIST\n ACFN K(PPODOPR) ADD(LIBSPOOL.WKLYARCH.G****V- -\n                 UID(SHCS***) R(A) E(A)) NOLIST\n ACFN K(PPODOPR) ADD(LIBSPOOL.WKLYARCH.G****V- -\n                 UID(SYSX***) R(A) E(A)) NOLIST\n ACFN K(PPODOPR) ADD(LIBSPOOL.WKLYARCH.G****V- -\n                 UID(SHOP***) R(A) E(A))\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ALLOCADR": {"ttr": 1284, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x82\\x18\\x0f\\x00\\x83\\x16o\\x16R\\x00\\x1a\\x00\\x0e\\x00\\x17\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1982-06-29T00:00:00", "modifydate": "1983-06-15T16:52:00", "lines": 26, "newlines": 14, "modlines": 23, "user": "SYSXKMB"}, "text": "//ALLOCADR JOB (@SYSUID,@SYSACCT),'ALLOC SHSW.LSADRLIB',CLASS=A\n/*JOBPARM   I,W,T=5,Q=T,L=3\n//*\n//* THE LIBSPOOL ARCHIVE DIRECTORY DATA SET IS PARTITIONED.\n//* ITS SIZE CAN BE ESTIMATED USING THE FOLLOWING :\n//*\n//*  BLKSIZE=6200  LRECL=40  DISK TYPE=3350  100 JOBS/DAY  700 JOBS/WK\n//*  EACH JOB RUN RESULTS IN ONE LOGICAL RECORD ON THIS DATA SET\n//*\n//*  6200/40 = 155 JOBS PER PHYSICAL BLOCK\n//*  700/155 = 5 BLOCKS PER WEEK\n//*  5/3 = 2 TRACKS PER WEEK\n//*  ASSUME ACHIVE DATA IS DESIRED TO BE KEPT FOR 120 WEEKS\n//*  120 X 2 = 240 TRACKS OR 8 CYLINDERS MINIMUM\n//*\n//*  10 MEMBERS CAN FIT IN ONE DIRECTORY BLOCK\n//*  IF 120 MEMBERS ARE MAINTAINED A MINIMUM OF 12 DIRECTORY BLOCKS\n//*  WOULD BE NEEDED.\n//*\n//ALLOC    EXEC PGM=IEFBR14\n//DD1       DD DSN=SYSX.LIBSPOOL.ARCPDS,\n//            DISP=(NEW,CATLG,DELETE),\n//            SPACE=(CYL,(20,1,20)),\n//            DCB=(RECFM=FB,BLKSIZE=6200,LRECL=40),\n//            VOL=SER=SFTS02,\n//            UNIT=3350\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ALLOCARC": {"ttr": 1286, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x82\\x18\\x0f\\x00\\x83\\x16o\\x16W\\x00\\r\\x00\\x0e\\x00\\x06\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1982-06-29T00:00:00", "modifydate": "1983-06-15T16:57:00", "lines": 13, "newlines": 14, "modlines": 6, "user": "SYSXKMB"}, "text": "//ALLOCARC JOB (@SYSUID,@SYSACCT),'INIT SHSW.LSARCLIB',CLASS=A\n/*JOBPARM   I,W,T=5,Q=T,L=3\n//INIT     EXEC PGM=LIBRARY,PARM='NRJS,NJTA'\n//SYSPRINT  DD SYSOUT=A\n//MASTER    DD DSN=SYSX.LIBSPOOL.LIBREST,\n//            DISP=(NEW,CATLG,DELETE),\n//            SPACE=(CYL,4),\n//            DCB=(DSORG=DA,BLKSIZE=9440),\n//            VOL=SER=SFTS02,\n//            UNIT=3350\n//SYSIN    DD  *\n-OPT INIT,DISK,SEQ=/81,8,10,10/\n-END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ALLOCLS": {"ttr": 1288, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x82\\x18\\x0f\\x00\\x83 _!\\x14\\x00\\r\\x00\\x0e\\x00\\x06\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1982-06-29T00:00:00", "modifydate": "1983-07-24T21:14:00", "lines": 13, "newlines": 14, "modlines": 6, "user": "SYSXKMB"}, "text": "//ALLOCLS  JOB (@SYSUID,@SYSACCT),'INIT LIBSPOOL LIB',CLASS=A\n/*JOBPARM   I,W,T=5,Q=T,L=3\n//INIT     EXEC PGM=LIBRARY,PARM='NRJS,NJTA'\n//SYSPRINT  DD SYSOUT=A\n//MASTER    DD DSN=SYSX.LIBSPOOL.LIBPROD,\n//            DISP=(NEW,CATLG,DELETE),\n//            SPACE=(CYL,60),\n//            DCB=(DSORG=DA,BLKSIZE=9440),\n//            VOL=SER=SFTS04,\n//            UNIT=3350\n//SYSIN    DD  *\n-OPT INIT,DISK,SEQ=/81,8,10,10/\n-END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "AMDX20": {"ttr": 1290, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x83\\x13\\x0f\\x00\\x83\\x13\\x0f\\x163\\x00\\x04\\x00\\x04\\x00\\x00\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1983-05-10T00:00:00", "modifydate": "1983-05-10T16:33:00", "lines": 4, "newlines": 4, "modlines": 0, "user": "SHSWRPD"}, "text": "//STEP01   EXEC  PGM=SYS007P0,PARM='JOBNAME=&JOBNAME,DELAY=&DELAYMN'\n//STEPLIB  DD DSN=PHGI.LINKLIB,DISP=SHR\n//SYSUDUMP DD SYSOUT=A\n//COMMNDCD DD SYSOUT=(A,INTRDR)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "AMDX21": {"ttr": 1292, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x83\\x13\\x0f\\x00\\x83\\x13\\x0f\\x164\\x00\\x0c\\x00\\x0c\\x00\\x01\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1983-05-10T00:00:00", "modifydate": "1983-05-10T16:34:00", "lines": 12, "newlines": 12, "modlines": 1, "user": "SHSWRPD"}, "text": "//AMDX21   PROC  JOBNAME=SUBMTJOB,\n//             DEST=RMT10,\n//             PARMLIB='SHSW.PARMLIB',\n//             PMEMBER=AMDX2101\n//LBSELECT EXEC  PGM=SYS005P0,PARM='&JOBNAME'\n//STEPLIB  DD DSN=PHGI.LINKLIB,DISP=SHR\n//SYSUDUMP DD SYSOUT=A\n//MASTER   DD DSN=SHSW.LSLIB,DISP=SHR          LIBSPOOL DATA SET\n//SELCTRPT DD SYSOUT=*                         REPORT MODULES SELECTED\n//ERRORRPT DD SYSOUT=*                         SELECTION CARDS IN ERROR\n//JCLPRINT DD SYSOUT=A,DEST=&DEST              PRINT OF SELECTED JCL\n//SELECTCD DD DSN=&PARMLIB(&PMEMBER),DISP=SHR  SELECTION CARDS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "AMDX2101": {"ttr": 1294, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x83\\x13\\x0f\\x00\\x83\\x13\\x0f\\x163\\x00\\x01\\x00\\x01\\x00\\x00\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1983-05-10T00:00:00", "modifydate": "1983-05-10T16:33:00", "lines": 1, "newlines": 1, "modlines": 0, "user": "SHSWRPD"}, "text": "DEFAULT INPUT TO PROC ADMX21. REPORT SHOWING INPUT FORMAT IS GENERATED.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASMHCL2": {"ttr": 1296, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x82!o\\x00\\x82!o\\t!\\x00\\x13\\x00\\x13\\x00\\x00\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1982-08-04T00:00:00", "modifydate": "1982-08-04T09:21:00", "lines": 19, "newlines": 19, "modlines": 0, "user": "SHSWRPD"}, "text": "//ASMHCL   PROC   ASMPRM='TERM,OBJECT',LKDPRM=\n//ASM      EXEC  PGM=IEV90,PARM='&ASMPRM',REGION=512K\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS2.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(10,5))\n//SYSPUNCH DD  DUMMY,DCB=(BLKSIZE=80)\n//SYSPRINT DD  SYSOUT=A\n//SYSTERM  DD  SYSOUT=A\n//SYSLIN   DD  DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(5,5,0)),\n//             DCB=(BLKSIZE=400),DSN=&&LOADSET\n//LKED     EXEC  PGM=IEWL,PARM='LIST,XREF,&LKDPRM,NCAL,RENT',\n//             COND=(0,LT),REGION=512K\n//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)\n//         DD  DDNAME=SYSIN\n//SYSLMOD  DD  DISP=(,PASS),UNIT=SYSDA,SPACE=(CYL,(2,1,2)),\n//             DSN=&GOSET(GO)\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(3,2)),DSN=&SYSUT1\n//SYSPRINT DD  SYSOUT=A\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FIXARDIR": {"ttr": 1298, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x82!\\x1f\\x00\\x821_\\x15T\\x00T\\x00Z\\x00\\x06\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1982-07-30T00:00:00", "modifydate": "1982-11-11T15:54:00", "lines": 84, "newlines": 90, "modlines": 6, "user": "SHSWRPD"}, "text": "//FIXARDIR JOB (@SYSUID,@SYSACCT),'REDO ARCH. DIRECTORY',CLASS=B\n/*JOBPARM   I,W,T=5,Q=T,L=9\n//*\n//* THIS JOBSTREAM CAN BE USED TO REBUILD ONE OR ALL OF THE MEMBERS\n//* OF THE LIBSPOOL ARCHIVE DIRECTORY DATA SET. THE FOLLOWING VARIABLE\n//* SYMBOLIC PARAMETERS MUST BE SUPPLIED ACCORDING TO YOUR CONVENTIONS:\n//*\n//*    ARCHDSN  - LIBSPOOL ARCHIVE DIRECTORY DATA SET\n//*    IN1      - LIBSPOOL ARCHIVE TAPE DATA SET NAME BEING INPUT\n//*               (INCLUDE GENERATION NUMBER)\n//*    MEMDATE -  THE DATE IN YYMMDD FORMAT TO BE USED IN THE MEMBER\n//*               NAME TO BE CREATED IN THE ARCHIVE DIRECTORY DATA SET\n//*               (USED ONLY WHEN A WEEKLY ARCHIVE TAPE IS INPUT)\n//*    RUNTYPE -  'D' FOR A CREATION OF THE #DAILY MEMBER\n//*               'W' FOR A CREATION OF A $WYYMMDD MEMBER\n//*\n//* RUN CONSIDERATIONS\n//*\n//*    RECREATING MEMBERS OF THE ARCHIVE DIRECTORY DATA SET REQUIRES\n//*    THE FOLLOWING CONSIDERATIONS:\n//*\n//*      1) EACH MEMBER NAME MUST FALL IN ITS PROPER SPOT IN THE\n//*         DIRECTORY OF THE ARCHIVE DIRECTORY DATA SET. THIS IS\n//*         ACCOMPLISHED BY USING &MEMDATE VALUES THAT USE THE\n//*         DATE THAT THE WEEKLY ARCHIVE TAPE WAS CREATED.\n//*         THE STANDARD LABEL RECORDS OF THE WEEKLY ARCHIVE TAPE\n//*         IS ONE PLACE WHERE THE TAPES CREATION DATE CAN BE\n//*         OBTAINED.\n//*\n//*      2) WHEN RECREATING THE #DAILY MEMBER DO NOT INPUT A &MEMDATE\n//*         VALUE. ONLY SPECIFY 'D' FOR &RUNTYPE.\n//*\n//CNTL    EXEC PGM=IEBGENER\n//SYSPRINT DD DUMMY\n//SYSUT2   DD DSN=&&LIBRCNTL,DISP=(,PASS),SPACE=(TRK,1),\n//         DCB=(RECFM=FB,LRECL=80,BLKSIZE=80),UNIT=SYSDA\n//SYSIN    DD DUMMY\n//SYSUT1   DD *\n-OPT NOCYCLE,NOOUTPUT,INDEX\n-END\n//*\n//REBUILD PROC ARCHDSN=,                   ARCHIVE DIRECTORY\n//       IN1=,                             INPUT ARCHIVE TAPE\n//       MEMDATE=,                         MEMBER NAME DATE (YYMMDD)\n//       RUNTYPE='W',                      D - DAILY,W - WEEKLY\n//       PARMLIB='NRJS,NJTA'               LIBRARIAN PARM INFO\n//**********************************************************************\n//*   CREATE INDEX DATA SET FROM ARCHIVE TAPE\n//**********************************************************************\n//INDEX    EXEC  PGM=LIBRARY,PARM='&PARMLIB',COND=(0,NE)\n//SYSPRINT DD SYSOUT=A\n//OSJOB    DD DUMMY\n//LIST     DD SYSOUT=A\n//INDEX    DD  DSN=&&INDEX,DISP=(,PASS),\n//         DCB=(RECFM=FB,LRECL=133,BLKSIZE=6118),UNIT=SYSDA,\n//         SPACE=(6118,(20,20),RLSE)\n//SYSAF01  DD  UNIT=(SYSDA,2),SPACE=(CYL,(10,10)),DCB=BLKSIZE=4628\n//SYSAF02  DD  UNIT=(SYSDA,2),SPACE=(CYL,(10,10)),DCB=BLKSIZE=4628\n//SYSAF03  DD  UNIT=(SYSDA,2),SPACE=(CYL,(10,10)),DCB=BLKSIZE=19069\n//MASTIN   DD DSN=&IN1,DISP=(OLD,PASS)\n//SYSIN    DD  DSN=&&LIBRCNTL,DISP=(OLD,DELETE)\n//**********************************************************************\n//*   UPDATE ONLINE ARCHIVE DIRECTORY DATA SET\n//**********************************************************************\n//LIBUP   EXEC PGM=OPS4321G,PARM='&RUNTYPE.&MEMDATE',COND=(0,NE)\n//STEPLIB  DD DSN=PHGI.LINKLIB,DISP=SHR\n//SYSABEND DD SYSOUT=A\n//SORTLIB  DD DSN=SYS1.SORTLIB,DISP=SHR\n//SORTOUT  DD DSN=&ARCHDSN(#DAILY),DISP=SHR\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SORTWK03 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SORTWK04 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SYSOUT   DD SYSOUT=A\n//MESSAGES DD SYSOUT=A\n//MASTDD   DD DSN=&&INDEX,DISP=(OLD,DELETE)\n//TAPEDD   DD DSN=*.INDEX.MASTIN,DISP=(OLD,KEEP)\n//DIRDD    DD DSN=&ARCHDSN(#DAILY),DISP=OLD\n//DIRDDA   DD DSN=&ARCHDSN,DISP=OLD\n//  PEND\n//REDO   EXEC REBUILD,ARCHDSN='SHSWRPD.TEST.DIR', ARCHIVE DIRECTORY\n//      IN1='PHGIOPS.OPS2339.DALYARCH(0)',   OUTPUT ARCHIVE TAPE DSNAME\n//      RUNTYPE='W',\n//      MEMDATE='820721'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INITDALY": {"ttr": 1301, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x83\\x16\\x7f\\x00\\x83\\x16\\x7f\\x10\\x14\\x00\\x11\\x00\\x11\\x00\\x02\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1983-06-16T00:00:00", "modifydate": "1983-06-16T10:14:00", "lines": 17, "newlines": 17, "modlines": 2, "user": "SYSXKMB"}, "text": "//INITDALY JOB (@SYSUID,@SYSACCT),'SAMBASS/OSI-HDC-GP',\n//         NOTIFY=@SYSUID,MSGCLASS=A,\n//         CLASS=A\n/*JOBPARM  Q=F,I,T=9,L=99,XMIT\n//*-------------------------------------------------------------*\n//BACKUPM  EXEC  PGM=LIBRARY\n//SYSPRINT DD  SYSOUT=A\n//INDEX    DD  SYSOUT=A\n//LIST     DD  SYSOUT=A\n//OSJOB    DD  DUMMY\n//MASTER   DD  DSN=SYSX.LIBSPOOL.LIBPROD,DISP=OLD\n//BACKUP   DD  DSN=PPODOPR.LIBSPOOL.DALYARCH(+1),UNIT=TAPE,\n//             LABEL=(1,SL),DISP=(NEW,CATLG,DELETE),\n//             DCB=(SYS2.MODEL,BLKSIZE=32760)\n//SYSIN    DD  DSN=SYSXKMB.LIB.ASM(OPSX0603),DISP=SHR\n//* SYSXKMB.LIB.ASM(OPSX0603) = -OPT BKUPTAPE\n//*                             -END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INITWKLY": {"ttr": 1303, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x83\\x16\\x7f\\x00\\x83\\x16\\x7f\\x10\\x14\\x00\\x11\\x00\\x11\\x00\\x02\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1983-06-16T00:00:00", "modifydate": "1983-06-16T10:14:00", "lines": 17, "newlines": 17, "modlines": 2, "user": "SYSXKMB"}, "text": "//INITWKLY JOB (@SYSUID,@SYSACCT),'SAMBASS/OSI-HDC-GP',\n//         NOTIFY=@SYSUID,MSGCLASS=A,\n//         CLASS=B\n/*JOBPARM  Q=F,I,T=9,L=99,XMIT\n//*-------------------------------------------------------------*\n//BACKUPM  EXEC  PGM=LIBRARY\n//SYSPRINT DD  SYSOUT=A\n//INDEX    DD  SYSOUT=A\n//LIST     DD  SYSOUT=A\n//OSJOB    DD  DUMMY\n//MASTER   DD  DSN=SYSX.LIBSPOOL.LIBPROD,DISP=OLD\n//BACKUP   DD  DSN=PPODOPR.LIBSPOOL.WKLYARCH(+1),UNIT=TAPE,\n//             LABEL=(1,SL),DISP=(NEW,CATLG,DELETE),\n//             DCB=(SYS2.MODEL,BLKSIZE=32760)\n//SYSIN    DD  DSN=SYSXKMB.LIB.ASM(OPSX0603),DISP=SHR\n//* SYSXKMB.LIB.ASM(OPSX0603) = -OPT BKUPTAPE\n//*                             -END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JCLLIST": {"ttr": 1305, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x83#O\\x00\\x834O\\x16\\x00\\x08U\\x08O\\x00i\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1983-08-22T00:00:00", "modifydate": "1983-12-10T16:00:00", "lines": 2133, "newlines": 2127, "modlines": 105, "user": "SYSXKMB"}, "text": "JCLL     TITLE 'LIBSPOOL: JCLLIST - LIBRARIAN/JES2 EXTERNAL WRITER' SJB\n*/ ***************************************************************** /*\n*                                                                     *\n*  LIBSPOOL - JES2 SYSMSG SPOOLING SYSTEM:  A LIBRARIAN EXTERNAL WTR  *\n*                                                                     *\n*/****************************************************************** /*\n*/ THIS VERSION OF JCLLIST WILL RUN ON SP1.3 USING THE OXY JES2 LOG  /*\n*/ FORMAT TO OBTAIN PROGRAM NAME. IT WILL WORK WITH EITHER SP1.1     /*\n*/ OR SP1.3 JES2.                                                    /*\n*/****************************************************************** /*\n*/*                                                                  */\n*/*                                                                  */\n*/*       WRITTEN BY :             SAM J. BASS              (SJB)    */\n*/*                                OCCIDENTAL SYSTEMS INC.           */\n*/*                                5 GREENWAY PLAZA EAST             */\n*/*                                HOUSTON, TEXAS 77046              */\n*/*                                (713) 840-2178                    */\n*/*                                                                  */\n*/*       DISCLAMER:               THIS PROGRAM HAS BEEN FULLY       */\n*/*                                TESTED AT OSI, BUT I CLAIM NO     */\n*/*                                RESPONSIBILITY FOR THIS PROGRAM   */\n*/*                                PROCESSING THE WRONG JES2         */\n*/*                                SYSOUT DATASETS                   */\n*/*                                                                  */\n*/*       MODIFIED BY :            ROBERT P DZIALAK         (RPD)    */\n*/*                                OCCIDENTAL CHEMICAL CORPORATION   */\n*/*                                360 RAINBOW BLVD. SOUTH           */\n*/*                                NIAGARA FALLS , NEW YORK 14303    */\n*/*                                (716) 286-3251                    */\n*/*                                                                  */\n*/*      SJB   06/09/83            MINOR MODS TO FIT HDC STANDASDS   */\n*/*                                                                  */\n*/*      SJB   06/17/83            ADDED PARMLIB SUPPORT FOR         */\n*/*                                INITILIZATION AND MODIFICATION    */\n*/*                                OF VALUES VIA THE OS MODIFY       */\n*/*                                COMMAND                           */\n*/*                                                                  */\n*/*      SJB   08/22/83            FIX 0C4 WHEN LIBRARY IS FULL      */\n*/*                                                                  */\n*/*      SJB   08/23/83            ADD -HST CARD FOR JOB STATUS      */\n*/*                                                                  */\n*/*      SJB   12/10/83            DELETE BAD MEMBER IF LIBRARY      */\n*/*                                ERROR                             */\n*/*                                                                  */\n*/****************************************************************** /*\n*/****************************************************************** /*\n* DATA NAME 'MSGCLS' DEFINES THE MSGCLASSES TO BE SERVICED          RPD\n* INCLUDE ONLY MSGCLASSES TO BE USED                                RPD\n&RECLASS SETC  'J'                                                  SJB\n&PRODID  SETC  ' '   FIRST CHARACTER OF USERIDS ACCEPTED            RPD\n*                    SPACE ACCEPTS ALL USERIDS                      RPD\n&DUMMYCLS SETC 'J'   JES2 DUMMY SYSOUT CLASS                        RPD\n&MSGCLPRT SETC 'X'   MSGCLASS-PRINT JCL ALWAYS                      RPD\n&MSGCLS   SETC 'XW'  MSGCLASSES TO PROCESS                          RPD\n&DEST     SETC 'LOCAL' DEFAULT DESTINATION                          RPD\n&SYSOUTMX SETA 500   RECORD LIMIT FOR EACH NON JCL SYSOUT           SJB\n&WTOR    SETC  'NO'                                            06/17/83\n         EJECT                                                      SJB\n*/ ***************************************************************** /*\n*                                                                     *\n*    SAMPLE STARTED TASK JCL:                                         *\n*                                                                     *\n*    //LIBSPOOL PROC DEBUG=                                           *\n*    //IEFPROC  EXEC PGM=JCLLIST,TIME=1439,PARM=&DEBUG                *\n*    //SYSPRINT DD  DUMMY                                             *\n*    //REPORT   DD  SYSOUT=A                                          *\n*    //SNAP     DD  SYSOUT=A                                          *\n*    //SYSABEND DD  SYSOUT=A                                          *\n*    //OSJOB    DD  DUMMY                                             *\n*    //MASTER   DD  DISP=SHR,DSN=SYSX.JCLLIST.LIBRARY                 *\n*    //SYSIN    DD  &&SYSIN,DISP=(NEW,DELETE),UNIT=SYSDA,             *\n*    //             SPACE=(CYL,(10,10)),                              *\n*    //             DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160)              *\n*                                                                     *\n*    NOTE THAT THE TASK WILL REMAIN IN AN 'OUTPUT LONG-WAIT' AND      *\n*    WILL ISSUE AN STIMER EVERY 10 SECONDS TO CHECK FOR THE PRESENCE  *\n*    OF ANY SYSOUT='MSGCLS' CLASS OUTPUT.                             *\n*                                                                     *\n*        THE MODULE MUST BE MARKED AC=1 AND MUST RESIDE IN            *\n*        AN AUTHORIZED LIBRARY IFA STEPLIB IS USED OR MUST            *\n*        MUST BE IN A LINKLIST LIBRARY. THIS MODULE IS                *\n*        NOT REENTRANT.                                               *\n*                                                                     *\n*/ ================================================================= /*\n*                                                                     *\n*  OS MACROS USED BY THIS MODULE:                                     *\n*                                                                     *\n*  IEFSSREQ     EXTRACT      QEDIT        WAIT         GET     WTO    *\n*  IEFZB4D0     MODESET      SYNADRLS     TTIMER       SNAP    PUT    *\n*  IEFJESCT     DYNALLOC     SYNADAF      STIMER       OPEN    DCBD   *\n*  IEFJSSOB     QEDIT        DCB          CLOSE        CALL    WTOR   *\n*  CONNECT      RELEASE      LINK         LIBWTO                      *\n*                                                                     *\n*/ ================================================================= /*\n*                                                                     *\n*  UPON ISSUANCE OF AN OPERATOR PAUSE COMMAND, A WTO IS ISSUED BY     *\n*  JCLLIST THAT TERMINATION IS IN PROGRESS.                           *\n*                                                                     *\n*/ ================================================================= /*\n*                                                                     *\n*  NAMING CONVENTIONS OF MODULES PLACED ON THE LIBRARIAN SPOOL        *\n*                                                                     *\n*    TO INSURE UNIQUE LIBRARIAN NAMES, THE LIBSPOOL MODULE NAME       *\n*    IS CONSTRUCTED AS FOLLOWS:                                       *\n*                                                                     *\n*               BYTE  1   - LETTER A THRU Z                           *\n*               BYTES 2-4 - JULIAN DAY NUMBER                         *\n*               BYTES 5-8 - JES2 JOB NUMBER                           *\n*                                                                     *\n*    IF A MODULE IS FOUND TO ALREADY EXIST ON THE LIBSPOOL DATA SET   *\n*    THEN AN  'B' REPLACES THE A (ETC.) IN BYTE ONE.                  *\n*                                                                     *\n*/ ================================================================= /*\n*                                                                     *\n*  CRITERIA UPON WHICH JCLLIST WILL SET THE PRINT FLAG AND FORCE A    *\n*  JOB TO BE PRINTED AND WILL ALSO BE ADDED TO THE LIBRARIAN SPOOL)   *\n*                                                                     *\n*      ---------------------------------------------------------      *\n*      -*-  ANY OF THE FOLLOWING IBM MESSAGE IDENTIFICATIONS -*-      *\n*      ---------------------------------------------------------      *\n*                                                                     *\n*  IEF251I - JOB CANCELLED                                            *\n*  IEF283I - NOT DELETED X                                            *\n*  IEF287I - NOT RECTLGD/CATALGD/UNCATLGD                             *\n*  IEF450I - ABEND           IEF452I - JOBFAIL/JOB NOT RUN JCL ERROR  *\n*  IEF451I - ENDED BY CC     IEF453I - JOB FAILED - JCL ERROR         *\n*                                                                     *\n*              IF ANY ERRORS ARE FOUND THEN THE SYSOUT DATASETS       *\n*              ARE RELEASED FROM THE HOLD QUEUE.                      *\n*                                                                     *\n* CONDITION CODES ARE ALSO CHECKED AND JCL WILL BE PRINTED AS FOLLOWS *\n*                                                                     *\n*            MSGCLASS ? - JCL WILL BE PRINTED IF ANY STEP IN THE JOB  *\n*                         HAS A CONDITION CODE GREATER THAN 0.\n*                                                                     *\n*            MSGCLASS X - JCL WILL ALWAYS BE PRINTED-SPECIFIED IN     *\n*                         &MSGCLPRT ABOVE                             *\n*                                                                     *\n*/ ================================================================= /*\n*    THIS VERSION OF JCLLIST WILL COLLECT SYSOUTS #2,3 AND 4 AS WELL  *\n*    AS ANY OTHER SYSOUT OF THE JOB THAT MATCHES THE MESSAGE CLASS OF *\n*    THE JOB. EG. //DDNAME DD SYSOUT=*                                *\n*/ ================================================================= /*\n*                                                                   SJB\n*              SNAPID              LOCATION                         SJB\n*                                                                   SJB\n*              1                   JCLLIST/GETDS    (SSREQ)         SJB\n*              2                   LIBMAIN/NEXTSSRQ (SSREQ)         SJB\n*              3                   LIBMAIN/CLOSBPSO (SSREQ)         SJB\n*              4                   LIBMAIN/ALLOCDS  (DYNALLOC)      SJB\n*              5                   LIBMAIN/LIBINIT  (SYSIN OPEN)    SJB\n*              6                   LIBMAIN/LIBFAIR  (BAD MASTOPN)   SJB\n*              7                   LIBMAIN/LIBFAIR  (BAD MASTMOD)   SJB\n*              8                   LIBMAIN/UNALLOC  (DYNALLOC)      SJB\n*              9                   LIBMAIN/OPENIN   (BAD OPEN PSO)  SJB\n*              10                  LIBMAIN/CLOSEOUT (BAD LIBRARY)   SJB\n*                                                                   SJB\n*                                                                     *\n*/ ================================================================= /*\n*                                                                   SJB\n         PUNCH ' SETCODE AC(1) '                                    SJB\n         PUNCH ' INCLUDE SYSLIB(TSOFAIR) '                          SJB\n         PUNCH ' ORDER JCLLIST,LIBMAIN,SSREQ,TSOFAIR '              SJB\n         PRINT ON,GEN,NODATA                                        SJB\n         PRINT GEN                                                  SJB\n         MACRO                                                      SJB\n&LABEL   LIBWTO &MSG                                                SJB\n         LCLC  &ID                                                  SJB\n&ID      SETC  '&SYSNDX'                                            SJB\n&LABEL   TM    FLAG2,$DEBUG                                         SJB\n         BNO   WTO&ID                                               SJB\n         PUSH  PRINT                                                SJB\n*        WTO   &MSG                                                 SJB\n         PRINT OFF                                                  SJB\n         WTO   &MSG                                                 SJB\n         POP   PRINT                                                SJB\nWTO&ID   DS    0H                                                   SJB\n         MEND                                                       SJB\n         EJECT                                                      SJB\nJCLLIST  CSECT                                                      SJB\n         SPACE 3                                                    SJB\nR0       EQU   0                                                    SJB\nR1       EQU   1                                                    SJB\nR2       EQU   2                                                    SJB\nR3       EQU   3                                                    SJB\nR4       EQU   4                                                    SJB\nR5       EQU   5                                                    SJB\nR6       EQU   6                                                    SJB\nR7       EQU   7                                                    SJB\nR8       EQU   8                                                    SJB\nR9       EQU   9                                                    SJB\nR10      EQU   10                                                   SJB\nR11      EQU   11                                                   SJB\nR12      EQU   12                                                   SJB\nR13      EQU   13                  SAVE AREA POINTER                SJB\nR14      EQU   14                  BASE REG FOR SVC 99 PARAM        SJB\nR15      EQU   15                                                   SJB\n         EJECT                                                      SJB\n         CONNECT LWORK1,WORK1,BASE=R12,CLEAR=YES,PARM=R10           SJB\n         EJECT                                                      SJB\n         L     R1,0(,R10)          GET ADDR OF PARM FIELD           SJB\n         LH    R2,0(R1)            GET LENGTH OF PARM               SJB\n         LTR   R2,R2               ANY PARM                         SJB\n         BZ    NOPARM                                               SJB\n         C     R2,=F'80'           LENGTH > 80                      SJB\n         BL    *+8                 NO                               SJB\n         LA    R2,80               YES                              SJB\n         BCTR  R2,0                -1 FOR EXECUTE                   SJB\n         EX    R2,MVCPARM          MOVE IN PARM FIELDS              SJB\nNOPARM   DS    0H\n         EJECT                                                 06/17/83\n*                                                              06/17/83\n*              SETUP DEFAULTS                                  06/17/83\n*                                                              06/17/83\n         SPACE 3                                               06/17/83\n         MVC   RECLASS,=C'&RECLASS'                            06/17/83\n         MVC   PRODID,=C'&PRODID'                              06/17/83\n         MVC   DUMMYCLS,=C'&DUMMYCLS'                          06/17/83\n         MVC   MSGCLPRT,=C'&MSGCLPRT'                          06/17/83\n         MVC   MSGCLS,=CL8'&MSGCLS'                            06/17/83\n         MVI   MSGCLS99,C' '       BLANK OUT TERMINATE BYTE    06/17/83\n         MVC   DEST,=CL8'&DEST'                                06/17/83\n         MVC   SYSOUTMX,=H'&SYSOUTMX'                          06/17/83\n         SPACE 3                                               06/17/83\n         OPEN  (PARMDCB,(INPUT))                               06/17/83\n         TM    PARMDCB+X'30',X'10' WAS OPEN GOOD?              06/17/83\n         BNO   NOPARMDD            NOPE, THEN NO PARMLIB       06/17/83\n         SPACE 3                                               06/17/83\nGETPARM  DS    0H                                              06/17/83\n         GET   PARMDCB             READ RECORD                 06/17/83\n         LR    R7,R1                                           06/17/83\n         LA    R1,WORK1            @ OF WORK1                  06/17/83\n         L     R15,=A(PARMSCAN)    ADDR OF SCAN ROUTINE        06/17/83\n         BALR  R14,R15             SCAN AND SET PARAMETERS     06/17/83\n         LTR   R15,R15             WAS SCAN GOOD               06/17/83\n         BNZ   RELEASE             NOPE, THEN EXIT             06/17/83\n         B     GETPARM                                         06/17/83\n         SPACE 3                                               06/17/83\nPARMEOD  DS    0H                                              06/17/83\n         CLOSE (PARMDCB)                                       06/17/83\nNOPARMDD DS    0H                                              06/17/83\n         EJECT                                                 06/09/83\n         SYSEVENT DONTSWAP                                     06/09/83\n         SPACE 3                                               06/09/83\n         EXTRACT COMMLPTR,FIELDS=COMM GET ADDR OF ECB AND CIB PTRS  SJB\n         SPACE 3                                                    SJB\n         L     R2,COMMLPTR         GET COMMAND LIST ADDRESS         SJB\n         USING COMMADDR,R2         ESTABLISH ADDRESSABILITY         SJB\n         LM    R9,R10,COMMADDR     GET COMMAND ECB AND CIB POINTERS SJB\n*        ST    R9,CMNDECBP         STORE ECB POINTER IN ECBLIST     SJB\n*        MVI   CMNDECBP,X'80'      INDICATE LAST ECB PTR IN LIST    SJB\n         ST    R9,CMDECBP2         STORE ECB POINTER IN OTHER ECBLISTJB\n         SPACE 1                                                    SJB\n         QEDIT ORIGIN=COMMCIB,BLOCK=(R10) FREE 'START' CIB          SJB\n         QEDIT ORIGIN=COMMCIB,CIBCTR=1    INDICATE 1 CIB TO BE CHAINEDB\n         SPACE 2                                                    SJB\n         USING SSOB,R10            ESTABLISH ADDRESSABILITY         SJB\n         LA    R10,LWASSOB                                          SJB\n*                                                                   SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n*              MISCELLANEOUS INITIALIZATION                         SJB\n*                                                                   SJB\n         MVI   FLAG2,X'00'                                          SJB\n         CLC   =C'DEBUG',PARMCARD  IS IT DEBUG                      SJB\n         BNE   *+8                 NO                               SJB\n         OI    FLAG2,$DEBUG        YES, TURN ON FLAG                SJB\n*                                                                   SJB\n         OI    FLAG2,$TITLE                                         SJB\n*                                                                   SJB\n         MVC   LWADCBRP,RPTDCB     MOVE IN RPT DCB                  SJB\n         LA    R4,LWADCBRP                                          SJB\n         OPEN  ((R4),(OUTPUT))     OPEN IT                          SJB\n*                                                                   SJB\n         LA    R1,MSGCLS           LOAD ADDR. OF BEGINNING MSGCLASS RPD\n         ST    R1,CURMCLAD         LIST AND INIT. ITS SAVE AREA     RPD\n         SPACE 3                                                    SJB\n*                                                                   SJB\nGETDS    DS    0H                                                   SJB\n*                                                                   SJB\n         MVI   FLAG,$FIRST         $FIRST ON, INITILIZE SSOB        SJB\n         MVI   FLAG3,$FRSTPSO      INDICATE WE ARE REQUESTING THE   RPD\n*                                  FIRST SYSOUT OF A NEW JOB        RPD\n*                                                                   SJB\n*              GO DO A SUB-SYSTEM REQUEST FOR NEW JOB               SJB\n*                                                                   SJB\n         L     R15,=A(SSREQ)                                        SJB\n         LA    R1,WORK1            POINT TO MAIN WORK AREA          SJB\n         BALR  R14,R15                                              SJB\n*                                                                   SJB\n*              END OF SUB-SYSTEM REQUEST                            SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n         MVI   SNAPID,1                                             SJB\n         LH    R15,RETCODE         GET IEFSSREQ RETURN CODE         SJB\n         LTR   R15,R15             SUBSYSTEM REQUEST SUCCESSFUL?    SJB\n         BNZ   SNAPIT              NO. TERMINATE WRITER             SJB\n*                                                                   SJB\n*              IF GOOD RC THEN GO  CALL LIBRARIAN                   SJB\n*                                                                   SJB\n         C     R15,SSOBRETN        DID WE GET A DATA SET FROM JES?  SJB\n         BE    CALLLIB             YES. GO CALL LIBRARIAN           SJB\n*                                                                   SJB\n         LA    R1,4                FOR 'COMPARE'                    SJB\n         C     R1,SSOBRETN         ARE WE OUT OF ELIGIBLE DATA SETS?SJB\n         BNE   SNAPIT              NO. SOMETHING WRONG. TERMINATE   SJB\n*                                                                   RPD\n*  ENTERING THIS CODE MEANS THAT NO OUTPUT EXISTED IN JES FOR THE   RPD\n*  MSGCLASS THAT WAS REQUESTED. THE NEXT CLASS IN THE LIST WILL NOW RPD\n*  BE LOOKED AT.                                                    RPD\n*                                                                   RPD\nCHGMSGCL L     R1,CURMCLAD         LOAD ADDRESS OF CURRENT MSGCLASS RPD\n         LA    R1,1(R1)            INCREMENT TO THE NEXT CLASS      RPD\n         ST    R1,CURMCLAD         SAVE THIS ADDRESS                RPD\n         CLI   0(R1),C' '          ARE WE AT THE END OF THE LIST    RPD\n         BNE   SETWAIT             NOT YET                          RPD\n         LA    R1,MSGCLS           LOAD ADDR. OF BEGINNING OF LIST  RPD\n         ST    R1,CURMCLAD         SAVE THIS ADDRESS                RPD\n*                                                                   SJB\nSETWAIT  DS    0H                                                   SJB\n         SPACE 1                                                    SJB\n*        MODESET KEY=ZERO          GET OUT OF KEY ZERO         06/09/83\n*                                                                   SJB\nWAIT     DS    0H                                                   SJB\n         STIMER REAL,POSTWAIT,BINTVL=WTIME TO KILL SOME TIME        SJB\n         SPACE 1                                                    SJB\n         MVI   STIMRECB,X'00'      CLEAR ECB                        SJB\n         L     R2,ECBL2PTR         POINT TO SECOND ECBLIST          SJB\n         SPACE 1                                                    SJB\n         WAIT  1,ECBLIST=(R2),LONG=YES WAIT FOR WORK, CMND, STIMER EXIT\n         SPACE 1                                                    SJB\n*                                                                   SJB\n         TM    STIMRECB,X'40'      WERE WE POSTED BY STIMER EXIT?   SJB\n         LA    R3,GETDS            PREPARE TO REQUEST A DATA SET IF YES\n         BO    RESETPK             YES. GET OUT OF KEY 0 AND CONTINUEJB\n         SPACE 1                                                    SJB\n         TTIMER CANCEL             CANCEL REMAINDER OF TIMER INTERVALJB\n         SPACE 1                                                    SJB\nCHKCMND  L     R2,CMDECBP2         GET COMMAND ECB ADDRESS          SJB\n         TM    0(R2),X'50'         DID OPERATOR ENTER A COMMAND?    SJB\n*        MVI   0(R2),X'00'         CLEAR ECB IN ANY EVENT      06/09/83\n         LA    R3,STOPWTR          PREPARE TO TERMINATE IF STOP CMNDSJB\n         BO    RESETPK             IT IS. GET OUT OF KEY 0 AND HALT SJB\n         LA    R3,FREECIB          PREPARE TO FREE CIB IF MODIFY CMNDJB\n         BM    RESETPK             FREE CIB AND GO REQUEST A DATA SETJB\n         B     WAIT                GO WAIT FOR CMND OR END OF INTERVALB\n         SPACE 1                                                    SJB\nFREECIB  L     R2,COMMLPTR         GET COMMAND LIST ADDRESS         SJB\n         L     R3,COMMCIB          GET CIB POINTER                  SJB\n         EJECT ,                                               06/17/83\n*                                                              06/17/83\n*              CHECK MODIFY FOR KEYWORDS                       06/17/83\n*                                                              06/17/83\n         USING CIB,R3                                          06/17/83\n         CLI   CIBVERB,CIBMODFY    WAS THIS A MODIFY COMMAND   06/17/83\n         BNE   NOTMODFY                                        06/17/83\n         LA    R5,CIBDATA          GET CIB DATA ADDR           06/17/83\n         LR    R4,R5               SAVE BEGINNING ADDR OF DATA 06/17/83\n         SR    R6,R6                                           06/17/83\n         ICM   R6,3,CIBDATLN       GET LENGTH                  06/17/83\n         BZ    MODBAD              NOPE , LEAVE                06/17/83\n         AR    R6,R5               POINT 1 PASSED END OF DATA  06/17/83\n         CLI   0(R5),C' '          1 CHAR BLANK                06/17/83\n         BE    MODBAD              YES, ISSUE WTO              06/17/83\n         BCTR  R6,0                POINT TO LAST CHAR          06/17/83\n         CLI   0(R6),C' '          FIND LAST NON-BLANK CHAR    06/17/83\n         BE    *-6                 STILL BLANK                 06/17/83\nMODLP1   DS    0H                                              06/17/83\n         LA    R5,1(,R5)           GET NEXT CHAR               06/17/83\n         CR    R5,R6               AT THE END YET              06/17/83\n         BH    MODBLK              YES,                        06/17/83\n         CLI   0(R5),C','          KEYWORD DELIM               06/17/83\n         BNE   MODLP1              NOPE,                       06/17/83\nMODBLK   LR    R1,R5                                           06/17/83\n         SR    R1,R4               GET LENGTH                  06/17/83\n         BNP   MODBAD              BIF ZERO                    06/17/83\n         MVC   LWACARD,=CL80' '    BLANK OUT CARD AREA         06/17/83\n         CH    R1,CIBDATLN         IS LENGTH > MAXLEN          06/17/83\n         BNH   *+8                 NOPE                        06/17/83\n         LH    R1,CIBDATLN         YES, SET TO MAXLEN          06/17/83\n         BCTR  R1,0                -1                          06/17/83\n         MVC   LWACARD(*-*),0(R4)                              06/17/83\n         EX    R1,*-6              MOVE IN CARD                06/17/83\n         LA    R7,LWACARD          ADDR OF CARD                06/17/83\n         LA    R1,WORK1                                        06/17/83\n         L     R15,=A(PARMSCAN)    GO SCAN PARM                06/17/83\n         BALR  R14,R15             CALL PARMSCAN               06/17/83\n         LTR   R15,R15             WAS IT OK                   06/17/83\n         BNZ   MODBAD              NOPE                        06/17/83\n         LA    R4,1(,R5)           SAVE NEW BEGINNING ADDR     06/17/83\n         CR    R5,R6               AT THE END YET              06/17/83\n         BH    MODEND              YES,                        06/17/83\n         B     MODLP1                                          06/17/83\nMODBAD   DS    0H                                              06/17/83\n         WTO   'LIBSPOOL: MODIFY PARAMETER INCORRECT',         06/17/83*\n               ROUTCDE=2                                       06/17/83\nMODEND   DS    0H                                              06/17/83\nNOTMODFY DS    0H                                              06/17/83\n         SPACE 1                                                    SJB\n         QEDIT ORIGIN=COMMCIB,BLOCK=(R3) FREE CIB                   SJB\n         QEDIT ORIGIN=COMMCIB,CIBCTR=1   INDICATE 1 CIB TO BE CHAINEDJB\n         SPACE 1                                                    SJB\n         B     GETDS               GO REQUEST A DATA SET FROM JES   SJB\n         SPACE 2                                                    SJB\nRESETPK  DS    0H                                                   SJB\n*        MODESET KEY=NZERO         GET OUT OF KEY ZERO         06/09/83\n         SPACE 1                                                    SJB\n         BR    R3                  CONTINUE AS DETERMINED EARLIER   SJB\n         DROP  R2                                                   SJB\n         EJECT                                                      SJB\nCALLLIB  DS    0H                                                   SJB\n         LIBWTO 'ENTERED CALLLIB'                                   SJB\n*                                                                   SJB\n         LA    R1,WORK1            PASS WORK AREA ADDR              SJB\n         L     R15,=A(LIBMAIN)                                      SJB\n         BALR  14,15               CALL LIBRARIAN                   SJB\n*                                                                   SJB\n*              SNAPID IS SET IN LIBMAIN ROUTINE                     SJB\n*                                                                   SJB\n         LTR   R15,R15             WAS CALL GOOD?                   SJB\n         BNZ   SNAPIT              NO GO SNAP                       SJB\n*                                                                   SJB\n         LIBWTO 'EXIT    CALLLIB'                                   SJB\n*                                                                   RPD\n         TM    FLAG3,$FRSTPSO      CHECK IF JOB WAS PROCESSED       RPD\n         BO    CHGMSGCL            NO. GO WAIT THEN CHANGE MSGCLASS RPD\n*                                                                   RPD\n         B     GETDS               NO. GO WAIT FOR WORK OR OPER CMNDSJB\n         EJECT                                                      SJB\nSTOPWTR  OI    SSSOFLG2,SSSOCTRL   INDICATE WRITER TERMINATING      SJB\n         SPACE 1                                                    SJB\n         MODESET MODE=SUP          GET INTO SUPERVISOR STATE        SJB\n         SPACE 1                                                    SJB\n         LA    R1,LWASSPRM         LOAD ADDRESS OF SSOB             SJB\n         SPACE 1                                                    SJB\n         IEFSSREQ                  TELL SUBSYSTEM WE ARE SHUTTING DOWNB\n         SPACE 1                                                    SJB\n         MODESET MODE=PROB         GET OUT OF SUPERVISOR STATE      SJB\n         SPACE 2                                                    SJB\nENDWTR   WTO 'LIBSPOOL:  JCLLIST IS SHUTTING DOWN',ROUTCDE=2,DESC=2 SJB\n         SYSEVENT OKSWAP                                       06/09/83\n         SPACE 1                                                    SJB\n         B     MAINRET                                              SJB\nMAINRET  DS    0H                                                   SJB\n         LA    R4,LWADCBRP         ADDR OR REPORT DCB               SJB\n         TM    X'30'(R4),X'10'     WAS REPORT EVER OPENED      06/17/83\n         BZ    MAINRET1                                        06/17/83\n         CLOSE ((R4))              CLOSE REPORT FILE                SJB\n         FREEPOOL ((R4))                                            RPD\nMAINRET1 DS    0H                                              06/17/83\n         LH    R15,RETCODE         RELOAD RETCODE                   SJB\nRELEASE  RELEASE LWORK1,RC=(15)                                     SJB\n         SPACE 2                                                    SJB\nSNAPIT   DS    0H                                                   SJB\n         LA    R4,SNAPDCB                                           SJB\n         OPEN  ((R4),(OUTPUT))     FOR SNAP, FOLLOWING              SJB\n         SPACE 1                                                    SJB\n         LA    R2,0(,R13)                                           SJB\n         LA    R3,LWORK1(,R13)                                      SJB\n         SR    R5,R5                                                SJB\n         IC    R5,SNAPID                                            SJB\n         SNAP  DCB=SNAPDCB,ID=(5),PDATA=ALL,                        SJBX\n               STORAGE=((2),(3))                                    SJB\n         SPACE 1                                                    SJB\n         B     STOPWTR             TERMINATE WRITER                 SJB\n         EJECT                                                      SJB\n*                                                              06/17/83\n*        THIS MUST BE THE LAST SUBROUTINE IN THIS CSECT        06/17/83\n*                                                              06/17/83\n         PUSH  USING               SAVE BASE REGISTER INFORMATION   SJB\nPOSTWAIT EQU   *                   STIMER EXIT                      SJB\n         USING POSTWAIT,R15        ESTABLISH ADDRESSABILITY         SJB\n         STM   R14,R12,12(R13)     SAVE REGISTERS                   SJB\n         SPACE 1                                                    SJB\n         POST  STIMRECB            INDICATE END OF INTERVAL         SJB\n         SPACE 1                                                    SJB\n         LM    R14,R12,12(R13)     RESTORE REGISTERS                SJB\n         BR    R14                 RETURN TO SYSTEM                 SJB\n         SPACE 1                                                    SJB\n         POP   USING               RESTORE PREVIOUS BASE REG STATUS SJB\n         EJECT                                                      SJB\nMVCPARM  MVC   PARMCARD(*-*),2(R1) MOVE IN PARM FIELD               SJB\nCOMMLPTR DC    A(0)                PTR FROM EXTRACT (TO ECB & CIB PTRS)\n*                                                                   SJB\nCMNDECBP DC    X'80',AL3(0)        PTR TO ECB POSTED WHEN CMD ISSUE SJB\n*                                                                   SJB\nECBL2PTR DC    A(CMDECBP2)         PTR TO SECOND ECBLIST            SJB\nCMDECBP2 DC    A(0)                PTR TO COMMAND ECB               SJB\nTIMRECBP DC    X'80',AL3(STIMRECB) PTR TO ECB POSTED BY STIMER EXIT SJB\nSTIMRECB DC    F'0'                ECB POSTED BY STIMER EXIT        SJB\nWTIME    DC    F'1000'             10 SECOND INTERVAL FOR STIMER    RPD\nBLANKS   DC    CL80' '             BLANKS                           SJB\n*\n*\n         LTORG                                                      SJB\n         EJECT                                                      SJB\n         PRINT NOGEN                                           06/17/83\nSNAPDCB  DCB   DDNAME=SNAP,DSORG=PS,MACRF=W,                        SJB*\n               RECFM=VBA,LRECL=125,BLKSIZE=882                      SJB\n         SPACE 3                                                    SJB\nRPTDCB   DCB   DDNAME=REPORT,DSORG=PS,MACRF=PM,                     SJB*\n               RECFM=FB,LRECL=90,BLKSIZE=6210                       SJB\n         DS    0F                                                   SJB\nRPTDCBL  EQU   *-RPTDCB                                             SJB\n         SPACE 3                                               06/17/83\nPARMDCB  DCB   DDNAME=PARMLIB,DSORG=PS,MACRF=GL,               06/17/83*\n               RECFM=FB,LRECL=80,EODAD=PARMEOD                 06/17/83\n         PRINT GEN                                             06/17/83\n         DROP  R12                 DROP PROGRAM BASE REGISTERS      SJB\n         EJECT                                                 06/17/83\nPARMSCAN CSECT                                                 06/17/83\n*                                                              06/17/83\n*        SCANS AN 80 BYTE RECORD FOR A KEYWORD IN 'PRMSTBL'    06/17/83\n*        AND STORES THE VALUE                                  06/17/83\n*                                                              06/17/83\n*        INPUT  - R1 POINTS TO WORK1                           06/17/83\n*        INPUT  - R7 POINTS TO THE 80 BYTE RECORD              06/17/83\n*        OUTPUT - R15 = 0 FOR KEYWORD OK                       06/17/83\n*                     = 4 FOR KEYWORD NOT OK                   06/17/83\n*                                                              06/17/83\n         CONNECT LWORK2,WORK2,BASE=(R12),CLEAR=YES,PARM=R11    06/17/83\n         USING WORK1,R11           GET ADDR. TO 1 SAVEAREA     06/17/83\n         MVC   PRMSWTO9+8+9(30),0(R7)                          06/17/83\nPRMSWTO9 WTO   'LIBSPOOL:                                   ', 06/17/83*\n               ROUTCDE=2                                       06/17/83\n         ORG   *-2                                             06/17/83\n         NOPR  R0                                              06/17/83\n         CLI   0(R7),C'*'          IS IT A COMMENT             06/17/83\n         BE    PRMSRET0            YES, THEN SKIP RECORD       06/17/83\n         CLC   =C'LIST ',0(R7)     IS IT A LIST COMMAND        06/17/83\n         BE    PRMSLIST            YES, GO PROCESS             06/17/83\n         LA    R8,PRMSTBL          ADDR. OF PRMS TABLE         06/17/83\nPRMSNEXT DS    0H                                              06/17/83\n         SR    R1,R1                                           06/17/83\n         IC    R1,0(,R8)           GET LENGTH OF KEYWORD       06/17/83\n         BCTR  R1,0                -1 FOR CLC                  06/17/83\n         CLC   0(*-*,R7),1(R8)     KEYWORD MATCH               06/17/83\n         EX    R1,*-6              DO FULL CLC                 06/17/83\n         BE    PRMSATCH            FOUND KEYWORD               06/17/83\n         LA    R8,PRMSTBLL(,R8)    NEXT ENTRY                  06/17/83\n         C     R8,=A(PRMSTBLE)     ARE WE AT THE END           06/17/83\n         BNL   PRMSERR2            YES, THEN ERROR             06/17/83\n         B     PRMSNEXT                                        06/17/83\nPRMSATCH DS    0H                                              06/17/83\n         LA    R7,1(R1,R7)         POINT TO KEYWORD OPERAND    06/17/83\n         SR    R1,R1               ZERO IC REG                 06/17/83\n         IC    R1,11(,R8)          GET MAX OPERAND LENGTH      06/17/83\n         LA    R5,0(R1,R7)         POINT TO 1 PASSED MAX       06/17/83\nPRMSTCH1 DS    0H                                              06/17/83\n         CLI   0(R5),C' '          FOUND END YET               06/17/83\n         BNE   PRMSTCH2            YES,                        06/17/83\n         BCTR  R5,0                BACK UP 1                   06/17/83\n         B     PRMSTCH1            ONE MORE TIME               06/17/83\nPRMSTCH2 DS    0H                                              06/17/83\n         SR    R5,R7               GET OPERAND LENGTH          06/17/83\n         LA    R5,1(,R5)           +1 FOR PROPER LENGTH        06/17/83\n         CR    R5,R1               IS OPERAND > MAX            06/17/83\n         BH    PRMSERR1            OPERAND > MAX               06/17/83\n         ICM   R2,15,12(R8)        GET OFFSET INTO WORK1       06/17/83\n         LA    R2,WORK1(R2)        GET ADDR. WHERE TO PUT DATA 06/17/83\n         CLI   10(R8),C'C'         IS THIS A CHAR. OPERAND     06/17/83\n         BNE   PRMSNUM             NOPE, MUST BE NUMERIC       06/17/83\n*                                                              06/17/83\n*              ZERO OUT 'TO' FIELD                             06/17/83\n*                                                              06/17/83\n         SR    R1,R1               ZERO IC REG                 06/17/83\n         IC    R1,11(,R8)          GET OPERAND MAX LENGTH      06/17/83\n         BCTR  R1,0                -1 FOR EXECUTE              06/17/83\n         MVC   0(*-*,R2),=CL8' '   BLANK OUT DATA AREA         06/17/83\n         EX    R1,*-6              DO IT ALL                   06/17/83\n         LTR   R5,R5               TEST LENGTH                 06/17/83\n         BZ    PRMSRET0            BIF ZERO, NO OPERAND        06/17/83\n         BCTR  R5,0                OPERAND LENGTH -1           06/17/83\n         MVC   0(*-*,R2),0(R7)                                 06/17/83\n         EX    R5,*-6              MOVE IN OPERAND             06/17/83\n         B     PRMSRET0            RETURN                      06/17/83\n         SPACE 3                                               06/17/83\nPRMSNUM  DS    0H                                              06/17/83\n         SR    R1,R1               PRESET STCM VALUE TO 0      06/17/83\n         LTR   R5,R5               TEST LENGTH                 06/17/83\n         BZ    PRMSNOPK            BIF ZERO, NO OPERAND        06/17/83\n         BCTR  R5,0                -1                          06/17/83\nPRMSPACK PACK  LWAPACK(8),0(*-*,R7) REMOVE ZONES               06/17/83\n         EX    R5,PRMSPACK         EXECUTE IT                  06/17/83\n         OI    LWAPACK+7,X'0F'     ENSURE SIGN NIBBLE          06/17/83\n         CVB   R1,LWAPACK          CONVERT TO BINARY           06/17/83\nPRMSNOPK CLI   10(R8),C'H'         IS IT A HALF WORD           06/17/83\n         BE    PRMSSTH                                         06/17/83\n         STCM  R1,15,0(R2)         STORE IN FULL WORD          06/17/83\n         B     PRMSRET0            RETURN                      06/17/83\nPRMSSTH  DS    0H                                              06/17/83\n         STCM  R1,03,0(R2)         STORE IN HALF WORD          06/17/83\n         B     PRMSRET0            NEXT RECORD                 06/17/83\n         SPACE 3                                               06/17/83\n*                                                              06/17/83\n*              LIST ALL KEYWORDS                               06/17/83\n*                                                              06/17/83\nPRMSLIST DS    0H                                              06/17/83\n         LA    R7,PRMSTBL+1                                    06/17/83\n         B     *+8                                             06/17/83\nPRMSLST2 DS    0H                                              06/17/83\n         LA    R7,PRMSTBLL(R7)                                 06/17/83\n         C     R7,=A(PRMSTBLE)     AT THE END YET              06/17/83\n         BNL   PRMSLST9            YES, EXIT                   06/17/83\n         LA    R1,WORK1            POINT TO FIRST WORK AREA    06/17/83\n         L     R15,=A(PARMLIST)    PARMLIST ENTRY POINT        06/17/83\n         BALR  R14,R15             GO LIST IT                  06/17/83\n         B     PRMSLST2                                        06/17/83\nPRMSLST9 DS    0H                                              06/17/83\n         SR    R15,R15                                         06/17/83\n         B     PRMSRET                                         06/17/83\n         SPACE 3                                               06/17/83\nPRMSRET0 DS    0H                                              06/17/83\n         LA    R7,1(,R8)           POINT TO CURRENT ENTRY      06/17/83\n         LA    R1,WORK1            POINT TO FIRST WORK AREA    06/17/83\n         L     R15,=A(PARMLIST)    PARMLIST ENTRY POINT        06/17/83\n         BALR  R14,R15             GO LIST IT                  06/17/83\n         SR    R15,R15                                         06/17/83\n         B     PRMSRET                                         06/17/83\nPRMSRET4 LA    R15,4                                           06/17/83\n         B     PRMSRET                                         06/17/83\n         SPACE 3                                               06/17/83\nPRMSERR1 DS    0H                                              06/17/83\n         MVC   PRMSWTO1+8+9(8),0(R7)                           06/17/83\n         PRINT NOGEN                                           06/17/83\nPRMSWTO1 WTO   'LIBSPOOL:XXXXXXX  KEYWORD OPERAND TOO LONG',   06/17/83*\n               ROUTCDE=2,DESC=2                                06/17/83\n         B     PRMSRET4            RETURN                      06/17/83\nPRMSERR2 DS    0H                                              06/17/83\n         MVC   PRMSWTO2+8+9(8),0(R7)                           06/17/83\nPRMSWTO2 WTO   'LIBSPOOL:XXXXXXXX KEYWORD NOT FOUND',          06/17/83*\n               ROUTCDE=2,DESC=2                                06/17/83\n         B     PRMSRET4            RETURN                      06/17/83\n         SPACE 3                                               06/17/83\nPRMSRET  DS    0H                                              06/17/83\n         RELEASE LWORK2,RC=(R15)                               06/17/83\n         SPACE 3                                               06/17/83\n*                                                              06/17/83\n*              KEYWORKLEN,KEYWORD,OPERAND-TYPE,MAX-LEN,OFFSET  06/17/83\n*                 AL1    , CL9   ,    CL1     ,  AL1  , AL4    06/17/83\n*                                                              06/17/83\nPRMSTBL  DC    AL1(8),CL9'RECLASS= ',CL1'C',AL1(1)             06/17/83\n         DC    AL4(RECLASS-WORK1)                              06/17/83\nPRMSTBLL EQU   *-PRMSTBL                                       06/17/83\n         DC    AL1(7),CL9'PRODID=  ',CL1'C',AL1(1)             06/17/83\n         DC    AL4(PRODID-WORK1)                               06/17/83\n         DC    AL1(9),CL9'DUMMYCLS=',CL1'C',AL1(1)             06/17/83\n         DC    AL4(DUMMYCLS-WORK1)                             06/17/83\n         DC    AL1(9),CL9'MSGCLPRT=',CL1'C',AL1(1)             06/17/83\n         DC    AL4(MSGCLPRT-WORK1)                             06/17/83\n         DC    AL1(7),CL9'MSGCLS=  ',CL1'C',AL1(8)             06/17/83\n         DC    AL4(MSGCLS-WORK1)                               06/17/83\n         DC    AL1(5),CL9'DEST=    ',CL1'C',AL1(8)             06/17/83\n         DC    AL4(DEST-WORK1)                                 06/17/83\n         DC    AL1(9),CL9'SYSOUTMX=',CL1'H',AL1(4)             06/17/83\n         DC    AL4(SYSOUTMX-WORK1)                             06/17/83\nPRMSTBLE EQU   *                                               06/17/83\n         LTORG ,                                               06/17/83\n         DROP  R12                 DROP PROGRAM BASE REGISTERS 06/17/83\n         EJECT ,                                               06/17/83\nPARMLIST CSECT                                                 06/17/83\n*                                                              06/17/83\n*        SUBROUTINE TO LIST INITILIZATION PARAMETERS.          06/17/83\n*                                                              06/17/83\n*        INPUT R7 POINTS TO KEYWORD TO LIST                    06/17/83\n*                                                              06/17/83\n         CONNECT LWORK2,WORK2,BASE=(R12),CLEAR=YES,PARM=R11    06/17/83\n         USING WORK1,R11           GET ADDR. TO 1 SAVEAREA     06/17/83\n         L     R6,=A(PRMSTBL)                                  06/17/83\nPRML00   SR    R5,R5               ZERO IC REG                 06/17/83\n         IC    R5,0(R6)            PICK UP CLC LENGTH          06/17/83\n         BCTR  R5,0                -1                          06/17/83\n         CLC   1(*-*,R6),0(R7)     DUMMY CLC                   06/17/83\n         EX    R5,*-6              DO FULL LENGTH              06/17/83\n         BE    PRML01              MATCH FOUND                 06/17/83\n         LA    R6,PRMSTBLL(,R6)    POINT TO NEXT               06/17/83\n         C     R6,=A(PRMSTBLE)     AT THE END YET              06/17/83\n         BNL   PRML90              YES, EXIT                   06/17/83\n         B     PRML00                                          06/17/83\nPRML01   DS    0H                                              06/17/83\n         LA    R8,PRMLWTO1+8+9                                 06/17/83\n         MVC   0(30,R8),=CL30' '                               06/17/83\n         MVC   0(*-*,R8),0(R7)     MOVE IN KEYWORD             06/17/83\n         EX    R5,*-6              DO IT ALL                   06/17/83\n         LA    R8,1(R5,R8)         POINT TO NEXT ENTRY         06/17/83\n         SPACE 1                                               06/17/83\n         ICM   R2,15,12(R6)        GET OFFSET                  06/17/83\n         LA    R2,WORK1(R2)        GET ADDRESS                 06/17/83\n         SPACE 1                                               06/17/83\n         CLI   10(R6),C'C'         IS THIS A CHAR VALUE        06/17/83\n         BNE   PRMLNUM             NOPE, MUST BE NUMERIC       06/17/83\n         SPACE 1                                               06/17/83\n         SR    R5,R5               ZERO IC REG                 06/17/83\n         IC    R5,11(,R6)          GET MAX LENGTH              06/17/83\n         BCTR  R5,0                                            06/17/83\n         MVC   0(*-*,R8),0(R2)     MOVE IN OPERAND             06/17/83\n         EX    R5,*-6              DO IT ALL                   06/17/83\n         B     PRMLWTO1            ISSUE WTO                   06/17/83\n         SPACE 3                                               06/17/83\nPRMLNUM  DS    0H                                              06/17/83\n         ICM   R1,15,0(R2)         ASSUME FULL WORD            06/17/83\n         CLI   10(R6),C'H'         IS IT HALF WORD             06/17/83\n         BNE   PRMLNUM1            NOPE,                       06/17/83\n         SR    R1,R1               ZERO ICM REG                06/17/83\n         ICM   R1,03,0(R2)         GET HALF WORD               06/17/83\nPRMLNUM1 DS    0H                                              06/17/83\n         CVD   R1,LWAPACK                                      06/17/83\n         OI    LWAPACK+7,X'0F'                                 06/17/83\n         UNPK  0(8,R8),LWAPACK+2(6) UNPACK IT                  06/17/83\n         B     PRMLWTO1            ISSUE WTO                   06/17/83\nPRMLWTO1 WTO   'LIBSPOOL:                                   ', 06/17/83*\n               ROUTCDE=2                                       06/17/83\nPRML90   DS    0H                                              06/17/83\n         RELEASE LWORK2,RC=0                                   06/17/83\n         LTORG ,                                               06/17/83\n         DROP  R12                                             06/17/83\n         EJECT ,                                               06/17/83\n*                                                                   SJB\n*        LIBMAIN - DOES PROCESSING OF ALL DATA FOR 1 JOB ONLY       SJB\n*                                                                   SJB\n*        REG   INPUT               USAGE                            SJB\n*                                                                   SJB\n*        R1    PARM REG            PARM/WORK REG                    SJB\n*        R2    N/A                 LIBPUT RECORD ADDR               SJB\n*        R3    N/A                 LENGTH OF INPUT RECORD           SJB\n*        R4    N/A                 WORK REG                         SJB\n*        R5    N/A                 ADDR OF INPUT RECORD             SJB\n*        R6    N/A                 BASE REG #2                      SJB\n*        R7    N/A                 BAL  REG FOR LIBPUT              SJB\n*        R8    N/A                 BAL  REG FOR READNEXT            SJB\n*        R9    N/A                 BAL  REG FOR OTHER ROUTINES      SJB\n*        R10   N/A                 BASE REG FOR SSOB                SJB\n*        R11   N/A                 BASE REG FOR WORK1 DSECT         SJB\n*        R12   N/A                 BASE REG #1                      SJB\n*        R13   N/A                 SAVE AREA REG                    SJB\n*        R14   RETURN ADDR         BALR REG                         SJB\n*        R15   ENTRY POINT         BALR REG/ RETURN CODE            SJB\n         SPACE 3                                                    SJB\nLIBMAIN  CSECT                                                      SJB\n         CONNECT LWORK2,WORK2,BASE=(R12,R6),CLEAR=YES,PARM=R11      SJB\n         EJECT                                                      SJB\n         USING SSOB,R10            ESTABLISH ADDRESSABILITY         SJB\n         USING WORK1,R11           GET ADDR. TO 1 SAVEAREA          SJB\n         LA    R10,LWASSOB         ADDR OF SSOB                     SJB\n         LIBWTO 'ENTERED LIBMAIN'                                   SJB\n*                                                                   SJB\n         MVC   RECLASS1(1),RECLASS                             06/17/83\n         MVC   DUMMYCL1(1),DUMMYCLS                            06/17/83\n         TM    FLAG2,$TITLE        IS TITLE REQUIRED NOW            SJB\n         BNO   NOTITLE             NO,                              SJB\n         LA    R2,TITLE1                                            SJB\n         BAL   R7,RPTPUT                                            SJB\n         LA    R2,TITLE2                                            SJB\n         BAL   R7,RPTPUT                                            SJB\n         NI    FLAG2,255-$TITLE    TURN OFF TITLE FLAG              SJB\nNOTITLE  DS    0H                                                   SJB\n*                                                                   RPD\n         CLC   SPACEPID(1),PRODID  IS  PRODID = SPACE          06/17/83\n         BE    INITLOOP            YES, DO NOT RESTRICT USER ID     RPD\n         CLC   SSSOUSER(1),PRODID  IS FIRST CHAR. OF USERID=P  06/17/83\n         BE    INITLOOP            YES, PROCESS THIS JOB            RPD\n         OI    FLAG,$CLOSING       TURN ON CLOSING FLAG             RPD\n         MVI   FLAG3,X'00'         TURN OFF FIRST REQ. FLAG         RPD\n         BAL   R9,ALLOCDS          GO ALLOCATE IT                   RPD\n         BAL   R9,FREEREQD         FREE SYSOUT AND REQ TO DUMMY     RPD\n         B     CLOSNRPT            GO DELETE ALL THE OTHER SYSOUTS  RPD\n*                                  FOR THIS JOB.                    RPD\n*                                                                   SJB\n         EJECT                                                      SJB\nINITLOOP DS    0H                                                   SJB\n         MVI   FLAG4,X'00'         TURN OFF PRINTING REASON FLAG4   RPD\n         MVI   FLAG5,X'00'         TURN OFF PRINTING REASON FLAG5   RPD\n         XC    BADCMES+18(4),BADCMES+18 CLEAR MAX. COND. CODE FIELD RPD\n         BAL   R9,LIBINIT          INIT, SINCE THIS IS FIRST TIME   SJB\nALLOCLOP DS    0H                                                   SJB\n         BAL   R9,ALLOCDS          GO ALLOCATE IT                   SJB\n*                                  FOR THIS JOB AND SET R8          SJB\n         TM    FLAG3,$FRSTPSO      DID WE GET JCL FOR THIS JOB      RPD\n         BNO   OPENLOOP            YES,OPEN AND LOOK AT THE RECORDS RPD\n         BAL   R9,FREEKEEP         FREE THIS SYSOUT                 RPD\n         MVC   LWACLOSE,CLOSE                                       RPD\n         CLOSE (LWADCBOT),MF=(E,LWACLOSE)  CLOSE SYSIN FILE         RPD\n         FREEPOOL LWADCBOT                                          RPD\n         RELEASE LWORK2,RC=0       RETURN WITH SWITCH TO            RPD\n*                                  $FRSTPSO ON TO SHOW WE SHOULD    RPD\n*                                  WAIT THEN GET NEXT MSGCLASS      RPD\nOPENLOOP DS    0H                                                   SJB\n         BAL   R9,OPENIN           OPEN INPUT FILE                  SJB\n*                                                                   SJB\nREADNEXT GET   LWADCBIN            GET RECORD ADDR                  SJB\n         LR    R5,R1               SAVE INPUT RECORD ADDR           SJB\n*                                                                   SJB\n         LA    R1,LWADCBIN                                          SJB\n         USING IHADCB,R1                                            SJB\n         LH    R3,DCBLRECL         GET INPUT RECORD LENGTH          SJB\n         TM    DCBRECFM,DCBRECU    IS THIS RECFM=U                  SJB\n         BO    READNXT1            YES,THEN SKIP                    SJB\n         TM    DCBRECFM,DCBRECV    IS THIS RECFM=V                  SJB\n         BZ    READNXT1            NOPE, THEN SKIP                  SJB\n         DROP  R1                                                   SJB\n         LA    R1,4                LENGTH OF RDW                    SJB\n         SR    R3,R1               SUBTRACT FROM LRECL              SJB\n         LA    R5,4(,R5)           REPOSITION PAST RDW              SJB\nREADNXT1 DS    0H                                                   SJB\n*                                                                   SJB\n         LA    R2,CARDOUT          GET CARD OUTPUT ADDR             SJB\n         MVC   CARDOUT,BLANKS2                                      SJB\n*              R8 IS INITIALLY SET IN ALLOCDS FOR PSO# 2,3,4        SJB\n*              AND THE CHECK ROUTINE SETS IT ALSO                   SJB\n         BR    R8                  GO TO CHECK ROUTINE              SJB\n*              AND WRITE THE OUTPUT RECORDS                         SJB\n         EJECT                                                      SJB\nEOF      DS    0H                                                   SJB\n         LIBWTO 'ENTERED EOF     '                                  SJB\n*                                                                   SJB\n         MVC   LWACLOSE,CLOSE                                       SJB\n         LA    R4,LWADCBIN                                          SJB\n         CLOSE ((R4)),MF=(E,LWACLOSE) CLOSE INPUT FILE              SJB\n         FREEPOOL ((R4))                                            RPD\n         SPACE 2                                                    SJB\n*                                                                   SJB\n         BAL   R9,FREEKEEP         FREE KEEP PSO                    SJB\n*                                                                   SJB\n*              GET NEXT PSO#                                        SJB\n*                                                                   SJB\n         B     NEXTSSRQ            GET NEXT PSO FOR THIS JOB        SJB\n*                                                                   SJB\nNEXTSSRQ DS    0H                                                   SJB\n         LIBWTO 'ENTERED NEXTSSRQ'                                  SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n*                                                                   SJB\n*              GO DO A SUB-SYSTEM REQUEST                           SJB\n*                                                                   SJB\n         L     R15,=A(SSREQ)                                        SJB\n         LA    R1,WORK1            POINT TO MAIN WORK AREA          SJB\n         BALR  R14,R15                                              SJB\n*                                                                   SJB\n*              END OF SUB-SYSTEM REQUEST                            SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n         MVI   SNAPID,2                                             SJB\n         LH    R15,RETCODE         GET IEFSSREQ RETURN CODE         SJB\n         LTR   R15,R15             SUBSYSTEM REQUEST SUCCESSFUL?    SJB\n         BNZ   SNAPIT2             NO. TERMINATE WRITER             SJB\n*                                                                   SJB\n         C     R15,SSOBRETN        DID WE GET A DATA SET FROM JES?  SJB\n         BE    ALLOCLOP            YES. GO ALLOC IT                 SJB\n*                                                                   SJB\n         LA    R1,4                FOR 'COMPARE'                    SJB\n         C     R1,SSOBRETN         ARE WE OUT OF ELIGIBLE DATA SETS?SJB\n         BNE   SNAPIT2             NO. SOMETHING WRONG. TERMINATE   SJB\n         B     NOPSOLFT            NO PSO DSN LEFT                  SJB\n         SPACE 3                                                    SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n*                                                                   SJB\nNOPSOLFT DS    0H                                                   SJB\n         LIBWTO 'ENTERED NOPSOLFT'                                  SJB\n         CLC   DSFLAGS,ALLDS       DID WE PROCESS 2,3,4 PSO         SJB\n         BE    CLOSEOUT            YES, THEN CLOSEOUT               SJB\n         OI    FLAG,$PRINT         NOPE, THEN TURN ON PRINT FLAG    SJB\n         B     CLOSEOUT                                             SJB\nCLOSEOUT DS    0H                                                   SJB\n         LIBWTO 'ENTERED CLOSEOUT'                                  SJB\n         MVC   DSCERROR,DASHES     ASSUME NO PRINT ERROR            RPD\n         TM    FLAG,$PRINT         SEE IF NOT ALLDS OR JCL ERROR    SJB\n         BO    SHOWPRTD            PRINTED IF ON-GO SHOW PRINTED    RPD\n         TM    FLAG5,$FNDCCMS      CHK IF COND. CODE MESSAGE FOUND  RPD\n         BNO   SHOWPRTD            NOT ON IF COND CODE NOT FOUND    RPD\n         B     CLOSNERR            NOT PRINTED                      RPD\nSHOWPRTD MVC   DSCERROR,=C'PRINTED' MOVE IN ERROR FLAG              SJB\nCLOSNERR DS    0H                                                   SJB\n         EJECT                                                      SJB\n         MVC   JTERMMSG+26(8),SSSOJOBN                         08/23/83\n         MVC   JTERMMSG+35(4),SSSOJOBI+4                       08/23/83\n         MVC   JTERMMSG+40(1),SSSOCLAS                         08/23/83\n         SPACE 3                                               08/23/83\n         MVC   JTERMMSG+44(22),=C'SUCCESSFULLY COMPLETED'      08/23/83\nTSTABEND TM    FLAG4,$ABEND            TEST IF ABEND FOUND     08/23/83\n         BNO   TSTCANCL                NO                      08/23/83\n         MVC   JTERMMSG+44(22),ABNDMES INDICATE ABEND          08/23/83\n         B     TSTLAST                 WRITE IT                08/23/83\nTSTCANCL TM    FLAG4,$CANCEL           TEST IF CANCEL FOUND    08/23/83\n         BNO   TSTNOTCA                NO                      08/23/83\n         MVC   JTERMMSG+44(22),CNCLMES INDICATE ABEND/JCL ERROR08/23/83\n         B     TSTLAST                 WRITE IT                08/23/83\nTSTNOTCA TM    FLAG4,$NOTCAT           TEST IF NOT CATALOGED   08/23/83\n         BNO   TSTNOTDL                NO                      08/23/83\n         MVC   JTERMMSG+44(22),NOTCMES INDICATE NOT CATALOGED  08/23/83\n         B     TSTLAST                 WRITE IT                08/23/83\nTSTNOTDL TM    FLAG4,$NOTDEL           TEST IF NOT DELETED     08/23/83\n         BNO   TSTENDCC                NO                      08/23/83\n         MVC   JTERMMSG+44(22),NOTDMES INDICATE NOT DELETED    08/23/83\n         B     TSTLAST                 WRITE IT                08/23/83\nTSTENDCC TM    FLAG4,$ENDEDCC          TEST IF ENDED BY CC     08/23/83\n         BNO   TSTJCLER                NO                      08/23/83\n         MVC   JTERMMSG+44(22),ENDBYCC INDIC. ENDED BY CC      08/23/83\n         B     TSTLAST                 WRITE IT                08/23/83\nTSTJCLER TM    FLAG4,$JCLERR           TEST IF JCL ERROR       08/23/83\n         BNO   TSTBADCC                NO                      08/23/83\n         MVC   JTERMMSG+44(22),JCLERRM INDIC. JCL ERROR        08/23/83\n         B     TSTLAST                 WRITE IT                08/23/83\nTSTBADCC TM    FLAG4,$BADCC            TEST IF BAD COND CODE   08/23/83\n         BNO   TSTFNDCC                NO                      08/23/83\n         MVC   JTERMMSG+44(22),BADCMES INDIC. BAD COND CODE    08/23/83\n         B     TSTLAST                 WRITE IT                08/23/83\nTSTFNDCC TM    FLAG5,$FNDCCMS          TEST IF COND CODE MESSAGE8/23/83\n         BO    TSTENDJB                COND CODE MESSAGE FOUND 08/23/83\n         MVC   JTERMMSG+44(22),PRTDMES INDIC. PRINTED-NO EXEC  08/23/83\n         B     TSTLAST                 WRITE IT                08/23/83\nTSTENDJB TM    FLAG5,$ENDJOB           JOB END IEF376I FOUND ? 08/23/83\n         BO    TSTPRTCL                YES                     08/23/83\n         MVC   JTERMMSG+44(22),PRTNOTDN INDIC. PRINTED-NOT DONE08/23/83\n         B     TSTLAST                 WRITE IT                08/23/83\nTSTPRTCL TM    FLAG4,$PRTMSGC      MSGCLASS= PRINT ALWAYS      08/23/83\n         BNO   TSTLAST             NOPE,                       08/23/83\n         MVC   JTERMMSG+44(22),PRTCMES INDIC. PRINT MSGCLASS   08/23/83\n         B     TSTLAST                 WRITE IT                08/23/83\n         EJECT ,                                               08/23/83\nTSTLAST DS     0H                                              08/23/83\n         MVC   HSTMSG(22),JTERMMSG+44 MOVE IN MESSAGE TO -HST  08/23/83\n         LA    R2,SELCARD          -SEL  CARD                       SJB\n         BAL   R7,LIBPUT           PUT IT OUT                       SJB\n         LA    R2,DSCCARD          -DESC CARD                       SJB\n         BAL   R7,LIBPUT           PUT IT OUT                       SJB\n         LA    R2,HSTCARD          -HST  CARD                  08/23/83\n         BAL   R7,LIBPUT           PUT IT OUT                  08/23/83\n         LA    R2,ENDCARD          -END  CARD                       SJB\n         BAL   R7,LIBPUT           PUT IT OUT                       SJB\n*                                                                   SJB\n         MVC   LWACLOSE,CLOSE                                       SJB\n         LA    R4,LWADCBOT                                          SJB\n         CLOSE ((R4)),MF=(E,LWACLOSE)                               SJB\n         FREEPOOL ((R4))                                            RPD\n         OI    FLAG,$CLOSING       INDICATE WE ARE CLOSING          SJB\n*                                                                   SJB\n         AIF   ('&WTOR' EQ 'YES').SUCC11                       06/17/83\nJTERMMSG EQU   JTERMWTO-8                                      06/09/83\nJTERMWTO WTO   'LIBSPOOL: XXXXXXXX-YYYY-Z - SUCCESSFULLY COMPLETED',   X\n               ROUTCDE=2                                            RPD\n         AGO   .SUCC19                                         06/17/83\n.SUCC11  ANOP                                                  06/17/83\nJTERMMSG EQU   JTERMWTO-0                                      06/09/83\nJTERMWTO WTOR  'LIBSPOOL: XXXXXXXX-YYYY-Z - SUCCESSFULLY COMPLETED',   X\n               RPLYAREA,1,RPLYECB,ROUTCDE=2                         RPD\n.SUCC19  ANOP                                                  06/17/83\n         LA    R1,LIBPARM                                           SJB\n         LINK  EP=LIBRARY          LINK TO LIBRARY                  SJB\n         LR    R5,R15              SAVE R15                         SJB\n*                                                                   SJB\n         LA    R4,LWADCBRP         ADDR OR REPORT DCB               SJB\n         USING IHADCB,R4                                            SJB\n         TM    DCBOFLGS,DCBOFOPN   DID OPEN WORK?                   SJB\n         DROP  R4                                                   SJB\n         BNO   CLOSNRPT            NO                               SJB\n         MVC   CARDOUT,BLANKS2                                      SJB\n         MVC   CARDOUT+00(8),ADDJOB MOVE IN MEMBER NAME             RPD\n         MVC   CARDOUT+10(8),PGMJOBN MOVE IN JOBNAME                SJB\n         MVC   CARDOUT+20(7),PGMUSER MOVE IN USERID                 SJB\n         MVC   CARDOUT+30(5),DSCDATE MOVE IN JOB BEGIN DATE         SJB\n         MVC   CARDOUT+40(4),DSCTON  MOVE IN JOB BEGIN TIME         SJB\n         MVC   CARDOUT+50(4),DSCTOFF MOVE IN JOB STOP  TIME         SJB\n         MVC   CARDOUT+63(1),DSCMSGCL MOVE IN MSGCLASS              RPD\n         MVC   CARDOUT+70(7),DSCERROR MOVE IN ERROR FLAG            SJB\n*                                                                   RPD\n         MVC   DSCDATE(5),=C'YYDDD' REINITIALIZE FOR NEXT JOB. THE  RPD\n         MVC   DSCTON(4),=C'HHMM'   NEXT JOB MAY NOT BE SCHDULED    RPD\n         MVC   DSCTOFF(4),=C'HHMM'  NO IEF375I AND IEF376I MESSAGES RPD\n*                                   WILL BE FOUND.                  RPD\n         LTR   R5,R5                                                SJB\n         BZ    CLOSEMSG                                             SJB\n         MVC   CARDOUT+80(10),=CL10'LIB ERROR'                      SJB\n         WTO 'LIBSPOOL: JCLLIST HAS LIBRARY ERROR',ROUTCDE=2,DESC=2 SJB\n         MVI   SNAPID,10           SET SNAP NUMBER                  SJB\n         STH   R5,RETCODE          SAVE RETURN CODE                 SJB\n*                                                              12/10/83\n*        DELETE MEMBER IF LIBRARY   FULL                       12/10/83\n*                                                              12/10/83\n*                                                              12/10/83\n         LA    R4,LWADCBOT                                     12/10/83\n         OPEN  ((R4),(OUTPUT)),MF=(E,LWAOPEN)                  12/10/83\n         MVC   LWACARD(80),=CL80'-DLM'                         12/10/83\n         MVC   LWACARD+5(8),ADDJOB                             12/10/83\n         LA    R4,LWADCBOT                                     12/10/83\n         PUT   (R4),LWACARD        PUT OUT -DLM RECORD         12/10/83\n*                                                              12/10/83\n         MVC   LWACLOSE,CLOSE                                  12/10/83\n         LA    R4,LWADCBOT                                     12/10/83\n         CLOSE ((R4)),MF=(E,LWACLOSE)                          12/10/83\n         FREEPOOL ((R4))                                       12/10/83\n*                                                              12/10/83\n         LA    R1,LIBPARM                                      12/10/83\n         LINK  EP=LIBRARY          DELETE BAD MEMBER           12/10/83\n*                                                                   SJB\nCLOSEMSG LA    R4,LWADCBRP                                          SJB\n         PUT   (R4),CARDOUT                                         SJB\n         CLI   SNAPID,10           WAS THERE A LIBRARY ERROR        SJB\n         BE    SNAPIT2             YES, THEN TERMINATE              SJB\nCLOSNRPT DS    0H                                                   SJB\n*                                                                   SJB\n         MVI   SSSODSN,X'00'       INDICATE NEW JOB GROUP           SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n*              ONCE WE GET TO THIS POINT ALL SYSOUTS OF THE         RPD\n*              JOB WHICH MATCH THE MSGCLASS OF THE JOB WILL         RPD\n*              STILL BE AROUND.                                     RPD\n*                                                                   RPD\n*              FOR THESE PSO'S, RE-AQUIRE PSO, ALLOC AND            RPD\n*              FREE-REQR IF $PRINT ERROR FLAG OR                    RPD\n*              FREE-DEL  IF NO ERROR                                RPD\n*                                                                   SJB\n         LA    R5,999              LOAD MAX LOOP COUNT              SJB\nCLOSLOOP DS    0H                                                   SJB\nCLOSBPSO DS    0H                  RETURN FROM ALLOCDS IF           SJB\n*                                  BADPSO# ENCOUNTERED (BAD PSO     SJB\n*                                  HAS BEEN FREE-RLSE)              SJB\n*                                                                   SJB\n*              GO DO A SUB-SYSTEM REQUEST                           SJB\n*                                                                   SJB\n         L     R15,=A(SSREQ)                                        SJB\n         LA    R1,WORK1            POINT TO MAIN WORK AREA          SJB\n         BALR  R14,R15                                              SJB\n*                                                                   SJB\n*              END OF SUB-SYSTEM REQUEST                            SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n         MVI   SNAPID,3                                             SJB\n         LH    R15,RETCODE         GET IEFSSREQ RETURN CODE         SJB\n         LTR   R15,R15             SUBSYSTEM REQUEST SUCCESSFUL?    SJB\n         BNZ   SNAPIT2             NO. TERMINATE WRITER             SJB\n*                                                                   SJB\n         C     R15,SSOBRETN        DID WE GET A DATA SET FROM JES?  SJB\n         BE    CLOSALOC            YES. GO ALLOC IT                 SJB\n*                                                                   SJB\n         LA    R1,4                FOR 'COMPARE'                    SJB\n         C     R1,SSOBRETN         ARE WE OUT OF ELIGIBLE DATA SETS?SJB\n         BNE   SNAPIT2             NO. SOMETHING WRONG. TERMINATE   SJB\n         B     LIBRET              NO PSO DSN LEFT                  SJB\n*                                                                   SJB\nCLOSALOC DS    0H                                                   SJB\n         BAL   R9,ALLOCDS          ALLOC DSN                        SJB\n         TM    FLAG,$PRINT         WAS THERE AN ERROR               SJB\n         BO    CLOSRLSE            YES, DO FREE RLSE, REQUEUECLS    SJB\n         TM    FLAG5,$FNDCCMS      WAS CONDITION CODE MESSAGE FOUND RPD\n         BNO   CLOSRLSE            NO ABEND OR NORMAL STEP COMPLETE RPD\n*                                  IN JOB-PRINT JCL                 RPD\n         TM    FLAG5,$ENDJOB       JOB END IEF376I MESSAGE FOUND ?  RPD\n         BNO   CLOSRLSE            NO, JOB WAS SCHEDULED BUT NEVER  RPD\n*                                  FINISHED EXECUTION-SYSTEM MAY    RPD\n*                                  HAVE CRASHED WHILE JOB RUNNING   RPD\n*                                  THEREFORE PRINT JCL              RPD\n         BAL   R9,FREEREQD         FREE REQUEUE TO DUMMY CLASS      RPD\n*        BAL   R9,FREEDEL          ELSE, DO FREE DELETE             SJB\n         B     CLOSINCR            GO TO BCT                        SJB\nCLOSRLSE DS    0H                                                   SJB\n         BAL   R9,FREEREQR         FREE REQUEUE CLASS RLSE          SJB\nCLOSINCR DS    0H                                                   SJB\n         BCT   R5,CLOSLOOP         GO TO IT                         SJB\n         B     LIBRET                                               SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n         EJECT                                                      SJB\nLIBRET   DS    0H                                                   SJB\n         LIBWTO 'ENTERED LIBRET'                                    SJB\n         RELEASE LWORK2,RC=0                                        SJB\n         SPACE 3                                                    SJB\nLIBRET2  DS    0H                                                   SJB\n         LIBWTO 'ENTERED LIBRET2'                                   SJB\n*                                                                   SJB\n         MVC   LWACLOSE,CLOSE                                       SJB\n         LA    R4,LWADCBOT                                          SJB\n         TM    X'30'(R4),X'10'     WAS SYSIN EVER OPENED       08/22/83\n         BNO   LIBRET2A                                        08/22/83\n         CLOSE (LWADCBOT),MF=(E,LWACLOSE)                           SJB\n         FREEPOOL LWADCBOT                                          RPD\nLIBRET2A DS    0H                                              08/22/83\n*                                                                   SJB\n         LH    R15,RETCODE                                          SJB\n         LTR   R15,R15             IS R15 > 0                       SJB\n         BNP   *+8                 YES                              SJB\n         LA    R15,32              NOPE, GIVE A BAD RETCODE         SJB\n         RELEASE LWORK2,RC=(15)                                     SJB\n         EJECT                                                      SJB\nALLOCDS  DS    0H                                                   SJB\n*                                                                   SJB\n*              ENTERED BY A        BALR   R9,ALLOCDS                SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED ALLOCDS'                                   SJB\n         MVC   CARDOUT(44),SSSODSN                                  SJB\n         LA    R2,CARDOUT                                           SJB\n         BAL   R7,RPTPUT2                                           SJB\n*                                                                   SJB\n         MVC   ALDDNAM,BLANKS2     MOVE BLANKS TO DDNAME            SJB\n         MVC   ALDSN,SSSODSN       MOVE DSNAME INTO ALLOCATE TEXT U SJB\n         USING S99RB,R14           ESTABLISH ADDRESSABILITY         SJB\n         LA    R14,S99AREA         SET UP SVC 99 PARM AREA BASE REG SJB\n         MVI   S99VERB,S99VRBAL    INDICATE ALLOC. TO BE PERFORMED  SJB\n         LA    R1,ALTUPTR          ADDR OF ALLOCATION TEXT UNIT PTRSSJB\n         ST    R1,S99TXTPP         STORE IN SVC 99 REQUEST BLOCK    SJB\n         LA    R1,S99PARM          LOAD ADDRESS OF SVC 99 PARM AREA SJB\n         DROP  R14                                                  SJB\n         SPACE 1                                                    SJB\n         DYNALLOC                  PERFORM DYNAMIC ALLOCATION       SJB\n         SPACE 1                                                    SJB\n         STH   R15,RETCODE         SAVE SVC 99 RETURN CODE          SJB\n         MVI   SNAPID,4            IDENTIFY SNAP ORIGIN             SJB\n         LTR   R15,R15             TEST SVC 99 RETURN CODE          SJB\n         BNZ   SNAPIT2             NO GOOD. SNAP AND TERMINATE      SJB\n         SPACE 2                                                    SJB\n*                                                                   SJB\n         MVC   CARDOUT(44),SSSODSN                                  SJB\n         LA    R2,CARDOUT                                           SJB\n         BAL   R7,RPTPUT2                                           SJB\n*                                                                   SJB\n         CLC   SSSODSN+14(5),PSODS IS THIS A PSO DATA SET?          SJB\n         BNE   BADPSO#             NO. GO DELETE IT                 SJB\n         CLI   SSSODSN+19,C'1'     DETERMINE IF THIS                RPD\n         BL    BADPSO#                IS A DATA SET WE              SJB\n         CLI   SSSODSN+19,C'4'           WISH TO PROCESS            SJB\n         BH    BADPSO#             IE PSO #2(LOG), #3(JCL), #4(MSG) SJB\n*                                  PSO #1(JCL)-NOT INTERPRETED(ACF) RPD\n*                                                                   RPD\n         MVI   FLAG3,X'00'         INDICATE JCL GOTTEN FOR THIS JOB RPD\n*                                                                   SJB\n*              STORE PSO# RELATIVE TO 0 IN DSTYPE                   SJB\n*                                                                   SJB\n         TM    FLAG,$CLOSING       ARE WE CLOSEING                  SJB\n         BO    ALLOCDS1            YES                              SJB\n*                                                                   SJB\n         CLI   SSSODSN+19,C'1'     PSO #1-JOB NOT INTERPRETED (ACF) RPD\n         BNE   PSO234              PAST INTERPRETATION              RPD\n         LA    R8,OTHERDS          BRANCH ADDRESS FOR OTHER SYSOUTS RPD\n         B     ALLOCDS0            CONTINUE                         RPD\n*                                                                   SJB\nPSO234   XR    R4,R4               CLEAR                            SJB\n         IC    R4,SSSODSN+19       GET PSO NUMBER (EBCDIC)          SJB\n         LA    R1,242              CONVERT PSO NUMBER TO BINARY AND SJB\n         SR    R4,R1               CHANGE SCALE: 0=LOG, 1=JCL, 2=MSGSJB\n         STC   R4,DSTYPE           SAVE CURRENT DATA SET TYPE       SJB\n         STC   R4,DSFLAGS(R4)      SAVE IT ALSO IN DSFLAGS+0(R4)    SJB\n         LR    R8,R4               COMPUTE OFFSET IN                SJB\n         SLL   R8,2                   BRANCH-ADDRESS TABLE          SJB\n         L     R8,DSPRCAD(R8)      GET APPROPRIATE BRANCH ADDRESS   SJB\n         SPACE 1                                                    SJB\n*                                                                   SJB\nALLOCDS0 MVC   CARDOUT(08),ALDDNAM                                  RPD\n         LA    R2,CARDOUT                                           SJB\n         BAL   R7,RPTPUT2                                           SJB\n*                                                                   SJB\nALLOCDS1 DS    0H                                                   SJB\n         BR    R9                                                   SJB\n         SPACE 3                                                    SJB\nBADPSO#  DS    0H                                                   SJB\n         TM    FLAG,$CLOSING       ARE WE CLOSEING                  SJB\n         BO    ALLOCDS1            YES, RETURN TO CLOSALOC PAR.     SJB\n*                                                                   RPD\n         TM    FLAG3,$FRSTPSO      WHAT SYSOUT IS THIS FOR THIS JOB RPD\n         BO    ALLOCDS1            FIRST SYSOUT NOT 2,3 OR 4        RPD\n*                              RETURN WITH $FRSTPSO ON WHICH WILL   RPD\n*                              CAUSE A WAIT AND THEN A SUBSYSTEM    RPD\n*                              REQUEST FOR THE NEXT MSGCLASS.       RPD\n*                                         HOPEFULLY THE NEXT TIME   RPD\n*                              A REQUEST IS MADE FOR THIS MSGCLASS  RPD\n*                              WE WILL GET THE JCL FIRST FOR A NEW  RPD\n*                              JOB.                                 RPD\n*                                                                   RPD\n         LA    R8,OTHERDS          BRANCH ADDRESS FOR OTHER SYSOUTS RPD\n         B     ALLOCDS0                                             RPD\n*                                                                   RPD\n         EJECT                                                      SJB\nLIBINIT  DS    0H                                                   SJB\n*                                                                   SJB\n*              ENTERED BY A        BALR   R9,LIBINIT                SJB\n*                                                                   SJB\n*              OPEN LIBRARIAN SYSIN FILE                            SJB\n*              CREATE AND WRITE -OPT  CARD                          SJB\n*              CREATE AND WRITE -ADD CARD                           SJB\n*              CREATE AND WRITE -PGMR CARD                          SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED LIBINIT'                                   SJB\n         MVC   LWAOPEN,OPEN                                         SJB\n         MVC   LWADCBOT,OUTDCB     MOVE IN MODEL                    SJB\n         LA    R4,LWADCBOT                                          SJB\n         OPEN  ((R4),(OUTPUT)),MF=(E,LWAOPEN)                       SJB\n*                                  OPEN LIBRARIAN SYSIN FILE        SJB\n         USING IHADCB,R4                                            SJB\n         TM    DCBOFLGS,DCBOFOPN   DID OPEN WORK?                   SJB\n         DROP  R4                                                   SJB\n         BO    SYSINOK             YES                              SJB\n*                                                                   SJB\n         MVI   SNAPID,5            SET SNAPID                       SJB\n         LA    R15,24              SET FUNNY RC                     SJB\n         STH   R15,RETCODE         SAVE IT                          SJB\n         B     SNAPIT2             SNAP IT                          SJB\nSYSINOK  DS    0H                                                   SJB\n*                                                                   SJB\n         TIME  DEC                 GET JULIAN DAY FOR MODULE NAME   RPD\n         STH   R1,JULDTEPK         STORE PACKED JULIAN DATE         RPD\n         UNPK  JULIANDY,JULDTEPK   UNPACK JULIAN DATE               RPD\n*                                                                   RPD\n         MVC   ADDJOB+1(3),JULIANDY+0 MOVE JULIAN DAY TO -ADD CARD  RPD\n         MVC   ADDJOB+4(4),SSSOJOBI+4 MOVE IN JOB# TO -ADD CARD     RPD\n         MVI   ADDJOB+0,C'A'       INITIALIZE TO SEQ. CHAR TO \"A\"   RPD\n         BAL   R7,LIBFAIR          CHECK AND SEE IF OK              SJB\n         MVC   DSCJOB,ADDJOB       MOVE IN JOB# TO -DSC CARD        SJB\n         MVC   SELJOB,ADDJOB       MOVE IN JOB# TO -SEL CARD        SJB\n*                                                                   SJB\n         MVC   PGMJOBN,SSSOJOBN    MOVE JOBNAME TO -PGMR FIELD      SJB\n         MVC   PGMUSER,SSSOUSER    MOVE USERID  TO -PGMR FIELD      SJB\n*                                                                   SJB\n*              TRANSLATE ALL BLANKS TO '.' IN -PGMR CARD(OPERANDS)  SJB\n*                                                                   SJB\n         LA    R1,PGMJOBN          GET JOBNAME ADDR                 SJB\n         LA    R2,L'PGMJOBN+L'PGMUSER LENGTH TO CHECK               SJB\nTRANS1   DS    0H                                                   SJB\n         CLI   0(R1),C' '          IS IT BLANK                      SJB\n         BE    TRANS2              YES                              SJB\n         CLI   0(R1),X'00'         IS IT NULL                       SJB\n         BNE   TRANS3              NO                               SJB\nTRANS2   MVI   0(R1),C'.'          YES, TRANSLATE                   SJB\nTRANS3   LA    R1,1(,R1)           ADD ONE                          SJB\n         BCT   R2,TRANS1                                            SJB\n*                                                                   SJB\n         MVC   DLMJOB,ADDJOB       MOVE IN JOB# TO -DSC CARD        SJB\n*        LA    R2,DLMCARD          PUT OUT -DLM CARD                SJB\n*        BAL   R7,LIBPUT                                            SJB\n*                                                                   SJB\n         LA    R2,OPTCARD          PUT OUT -OPT CARD                SJB\n         BAL   R7,LIBPUT                                            SJB\n*                                                                   SJB\n         LA    R2,ADDCARD          PUT OUT -ADD CARD                SJB\n         BAL   R7,LIBPUT                                            SJB\n*                                                                   SJB\n         LA    R2,PGMCARD          PUT OUT -PGMR CARD               SJB\n         BAL   R7,LIBPUT                                            SJB\n*                                                                   SJB\n         BR    R9                  RETURN                           SJB\n*                                                                   SJB\n         EJECT                                                      SJB\nLIBFAIR  DS    0H                                                   SJB\n*                                                                   SJB\n*              LIBRARIAN FAIR      BAL  R7,LIBFAIR                  SJB\n*                                                                   SJB\n*              THIS CHECKS TO SEE IF THE MODULE NAME TO BE ADDED    SJB\n*              TO LIBRARY EXISTS. IF SO THEN THE LAST               SJB\n*              CHARACTER OF ADDJOB (AJJJNNNN) IN INCREMENTED        RPD\n*              AND THE TEST IS MADE AGAIN. THIS PROCESS CONTINUES   SJB\n*              UNTIL THE NAME IS UNIQUE OR UNTIL THE CHARACTER      SJB\n*              '@' IS REACHED $PRINT IS TURNED ON                   SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED LIBFAIR  '                                 SJB\n         CALL  MASTOPN,(0,FAIRFLG),VL                               SJB\n         CLI   FAIRFLG,C'0'        DID LIBRARIAN OPEN WORK          SJB\n         BNE   FAIRBAD1            NOPE, BAD                        SJB\n*                                                                   SJB\n         MVC   FAIRMOD,BLANKS2                                      SJB\n         MVC   FAIRMOD(8),ADDJOB   MOVE IN ADDJOB                   RPD\n         LA    R4,FAIRSEQ                                           SJB\nFAIRCHK  DS    0H                                                   SJB\n         CALL  MASTMOD,(FAIRMOD,FAIRFLG),VL SEE IF MODULE EXISTS    SJB\n         CLI   FAIRFLG,C'1'        DOES IT EXIST                    SJB\n         BE    FAIRXIT1            NO, THEN EXIT THIS ONES OK       SJB\n         CLI   FAIRFLG,C'0'        NORMAL RETURN CODE               SJB\n         BNE   FAIRBAD2            BAD RETURN CODE                  SJB\n         LA    R4,1(,R4)           GET NEW SEQUENCE CHARACTER ADDR  SJB\n         MVC   FAIRMOD+0(1),0(R4)  MOVE IN NEW CHARACTER            RPD\n         CLI   0(R4),C'@'          IS THIS THE END                  SJB\n         BE    FAIRXIT2                                             SJB\n         B     FAIRCHK                                              SJB\nFAIRXIT2 DS    0H                                                   SJB\n         OI    FLAG,$PRINT                                          SJB\nFAIRXIT1 DS    0H                                                   SJB\n         MVC   ADDJOB,FAIRMOD                                       SJB\n         CALL  MASTCLS,                                             SJB\n         BR    R7                                                   SJB\n*                                                                   SJB\nFAIRBAD1 DS    0H                  MASTOPN FAILED                   SJB\n*                                                                   SJB\n         MVI   SNAPID,6            SET SNAPID                       SJB\n         LA    R15,24              SET FUNNY RC                     SJB\n         STH   R15,RETCODE         SAVE IT                          SJB\n         B     SNAPIT2             SNAP IT                          SJB\n*                                                                   SJB\nFAIRBAD2 DS    0H                  MASTMOD FAILED                   SJB\n*                                                                   SJB\n         MVI   SNAPID,7            SET SNAPID                       SJB\n         LA    R15,24              SET FUNNY RC                     SJB\n         STH   R15,RETCODE         SAVE IT                          SJB\n         B     SNAPIT2             SNAP IT                          SJB\nFAIRSEQ  DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ@'                       SJB\nFAIRMOD  DC    CL8' '                                               SJB\nFAIRFLG  DC    C' '                                                 SJB\n         EJECT                                                      SJB\nFREEKEEP DS    0H                                                   SJB\n*                                                                   SJB\n*              FREEKEEP SYSOUT     BAL  R9,FREEKEEP                 SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED FREEKEEP'                                  SJB\n         LA    R1,TUFRKEPH         KEEP, HOLD                       SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\nFREERLSE DS    0H                                                   SJB\n*                                                                   SJB\n*              FREERLSE SYSOUT     BAL  R9,FREERLSE                 SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED FREERLSE'                                  SJB\n         LA    R1,TUFRKEPR         KEEP, RELEASE                    SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         SPACE 3                                                    SJB\nFREEDEL  DS    0H                                                   SJB\n*                                                                   SJB\n*              FREEDEL SYSOUT      BAL R9,FREEDEL                   SJB\n*                                                                   RPD\n*                                                                   SJB\nSKIPWTOS LIBWTO 'ENTERED FREEDEL'                                   SJB\n         LA    R1,TUFRDEL          DELETE, RELEASE                  SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         SPACE 3                                                    SJB\nFREEREQH DS    0H                                                   SJB\n*                                                                   SJB\n*              FREEREQ HOLD SYSOUT BAL R9,FREEREQH                  SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED FREEREQH'                                  SJB\n         LA    R1,TUFRREQH         CHANGE CLASS, HOLD               SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         SPACE 3                                                    SJB\nFREEREQR DS    0H                                                   SJB\n*                                                                   SJB\n*              FREEREQ RLSE SYSOUT BAL R9,FREEREQR                  SJB\n*                                                                   RPD\nSKIPWTOF LIBWTO 'ENTERED FREEREQR'                                  SJB\n         LA    R1,TUFRREQR         CHANGE CLASS, RELEASE            SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         SPACE 3                                                    SJB\nFREEREQD DS    0H                                                   SJB\n         CLC   SPACEPID(1),PRODID IS &PRODID = SPACE           06/17/83\n         BE    CKIFPSO2            YES, DO NOT RESTRICT USER ID     RPD\n         CLC   SSSOUSER(1),PRODID IS FIRST CHAR. OF USERID=P   06/17/83\n         BNE   SKIPWTOD            NO, WTOR NOT NEEDED, DELETEING   RPD\n*                                  A NON-PROUCTION USER ID JOB      RPD\n*                                                                   SJB\n*              FREEREQ RLSE SYSOUT BAL R9,FREEREQD-REQUEUE TO DUMMY SJB\n*                                                                   RPD\nCKIFPSO2 CLC   SSSODSN+14(6),PSODS     CHECK IF PSO #2(MSG)         RPD\n         BNE   SKIPWTOD                DO NOT WTO FOR OTHER PSOS    RPD\n         MVC   JTERMMSG+26(8),SSSOJOBN                              RPD\n         MVC   JTERMMSG+35(4),SSSOJOBI+4                            RPD\n         MVC   JTERMMSG+40(1),SSSOCLAS                              RPD\n*                                                                   RPD\nSKIPWTOD LIBWTO 'ENTERED FREEREQD'                                  SJB\n         LA    R1,TUFRREQD         CHANGE CLASS, RELEASE TO DUMMY   SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         EJECT                                                      SJB\nUNALLOC  DS    0H                                                   SJB\n         CLC   =XL8'00',ALDDNAM    IS IT NULLS                      SJB\n         BER   R9                  YES, EXIT                        SJB\n         CLC   =CL8' ',ALDDNAM     IS IT BLANKS                     SJB\n         BER   R9                  YES, EXIT                        SJB\n         MVC   UALDDNAM,ALDDNAM    MOVE DDNAME TO UNALLOCATION TXT  SJB\n         LIBWTO 'ENTERED UNALLOC'                                   SJB\n         USING S99RB,R14           ESTABLISH ADDRESSABILITY         SJB\n         LA    R14,S99AREA         SET UP SVC 99 PARM AREA BASE REG SJB\n         MVI   S99VERB,S99VRBUN    INDICATE UNALLOCATION TO BE DONE SJB\n*                                                                   SJB\n         L     R1,LWAUALTU         ADDR OF UNALLOCATION TU PTRS     SJB\n*                                                                   SJB\n         ST    R1,S99TXTPP         STORE IN SVC 99 REQUEST BLOCK    SJB\n         LA    R1,S99PARM          LOAD ADDRESS OF SVC 99 PARM AREA SJB\n         DROP  R14                                                  SJB\n         SPACE 1                                                    SJB\n         DYNALLOC                  PERFORM DYNAMIC UNALLOCATION     SJB\n*        SPACE 1                                                    SJB\n         STH   R15,RETCODE         SAVE SVC 99 RETURN CODE          SJB\n         MVI   SNAPID,8            IDENTIFY SNAP ORIGIN             SJB\n         LTR   R15,R15             TEST SVC 99 RETURN CODE          SJB\n         BNZ   SNAPIT2             NO GOOD. SNAP AND TERMINATE      SJB\n         BR    R9                  RETURN                           SJB\n         EJECT                                                      SJB\nOPENIN   DS    0H                                                   SJB\n*                                                                   SJB\n*              OPEN INPUT          BALR   R9,OPENIN                 SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED OPENIN '                                   SJB\n*                                                                   SJB\n         MVC   LWADCBIN,INDCB                                       SJB\n         LA    R4,LWADCBIN         INPUT DCB                        SJB\n         USING IHADCB,R4           ESTABLISH ADDRESSABILITY         SJB\n*                                                                   SJB\n         MVC   DCBDDNAM,ALDDNAM    MOVE DDNAME AS SET BY SVC 99 TO DCBB\n         OPEN  ((R4),(INPUT))      OPEN INPUT DATA SET              SJB\n         SPACE 1                                                    SJB\n         XC    RETCODE,RETCODE     CLEAR RETURN CODE FIELD          SJB\n         MVI   SNAPID,9            IDENTIFY SNAP ORIGIN             SJB\n         TM    DCBOFLGS,DCBOFOPN   WAS OPEN SUCCESSFUL?             SJB\n         BZ    SNAPIT2             NO. SNAP AND TERMINATE           SJB\n         DROP  R4                                                   SJB\n         BR    R9                                                   SJB\n         SPACE 3                                                    SJB\nLIBPUT   DS    0H                                                   SJB\n*                                                                   SJB\n*              LIBPUT              BAL  R7,LIBPUT                   SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED LIBPUT  '                                  SJB\n         TM    FLAG,$CLOSING       ARE WE CLOSING A JOB             SJB\n         BO    LIBPUT1             YES, OUTPUT FILE IS CLOSED       SJB\n         LA    R4,LWADCBOT                                          SJB\n         PUT   (R4),((R2))         PUT OUT RECORD                   SJB\nLIBPUT1  LA    R2,CARDOUT          GET CARD OUTPUT ADDR             SJB\n         MVC   CARDOUT,BLANKS2                                      SJB\n         BR    R7                                                   SJB\n         SPACE 3                                                    SJB\nRPTPUT2  DS    0H                                                   SJB\n*                      DEBUGGING                                    SJB\n*              RPTPUT2             BAL  R7,RPTPUT2                  SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED RPTPUT2'                                   SJB\n         TM    FLAG2,$DEBUG        IS THIS DEBUG OPTION             SJB\n         BNO   RPTPUT1             NO, THEN SKIP                    SJB\nRPTPUT   DS    0H                                                   SJB\n*                                                                   SJB\n*              RPTPUT              BAL  R7,RPTPUT                   SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED RPTPUT '                                   SJB\n         LA    R4,LWADCBRP                                          SJB\n         USING IHADCB,R4                                            SJB\n         TM    DCBOFLGS,DCBOFOPN   DID OPEN WORK?                   SJB\n         DROP  R4                                                   SJB\n         BNO   RPTPUT1             NO, EXIT NO REPORT               SJB\n         PUT   (R4),((R2))         PUT OUT RECORD                   SJB\nRPTPUT1  LA    R2,CARDOUT          GET CARD OUTPUT ADDR             SJB\n         MVC   CARDOUT,BLANKS2                                      SJB\n         BR    R7                                                   SJB\n         EJECT                                                      SJB\nSNAPIT2  DS    0H                                                   SJB\n*                                                                   SJB\n*                                                                   SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED SNAPIT2'                                   SJB\n         B     LIBRET2                                              SJB\n*                                                                   SJB\n*                                                                   SJB\n*                                                                   SJB\n         EJECT\n*/ ***************************************************************** /*\n*                                                                     *\n*  THE FOLLOWING BLOCKS OF CODE DEFINE THE CRITERIA BY WHICH JOBS     *\n*  ARE SELECTED FOR POSSIBLE PRINTING BY LIBSPOOL.  EACH OF THE 3     *\n*  COMPONENTS, JES2 JOB LOG, JCL, AND SYSTEM MESSAGE BLOCKS (SMB'S/   *\n*  ALLOCATION/DEALLOCATION MESSAGES) OF ALL CLASS 'MSGCLS' JOBS ARE   *\n*  SCANNED FOR THE OCCURRENCE OF SIGNIFICANT MESSAGE IDENTIFICATION   *\n*  NUMBERS WHICH INDICATE THAT AN EXCEPTIONAL CONDITION OCCURRED DUR- *\n*  ING JOB PROCESSING (EG. JCL ERROR, ABEND, NOT CAT 2, ETC.). UPON   *\n*  THE OCCURRENCE OF THESE MESSAGE ID'S THE JOB IS FLAGGED FOR SUBSE- *\n*  QUENT PRINTING; OTHERWISE, JOB START/STOP INFORMATION IS EXTRACT-  *\n*  ED FOR INCLUSION ON A LIBRARIAN COMMENT CARD DURING THE PROCESS OF *\n*  ADDING THE JOB TO THE LIBSPOOL.                                    *\n*                                                                     *\n*/ ***************************************************************** /*\n*                                                                   SJB\n*              R2 = OUTPUT BUFFER ADDR                              SJB\n*              R3 = LENGTH OF INPUT RECORD                          SJB\n*              R5 = INPUT RECORD ADDR                               SJB\n*              R7 = BAL REG FOR LIBPUT                              SJB\n*              R8 = POINTS TO RETURN ADDR FROM READNEXT             SJB\n*                                                                   SJB\n         EJECT                                                      SJB\nJES2JLOG DS    0H                                                   SJB\n         LIBWTO 'ENTERED JES2LOG'                                   SJB\n         MVC   DSCMSGCL,SSSOCLAS   SAVE MSGCLASS OF JOB             RPD\n         BAL   R8,READNEXT         SET CONT. ADDR AND IGNORE FIRST LINE\n         MVC   0(80,R2),0(R5)      MOVE LINE (80 CHARS) TO LIB IOAREA\n         MVI   0(R2),C'1'          SET NEW PAGE ASA CHAR\n         BAL   R7,LIBPUT           RETURN TO LIBRARIAN WITH LOG TITLE\n         MVI   0(R2),C'0'          SET DOUBLE SPACE ASA CHAR\n         LA    R7,READNEXT         SET NEXT ENTRY BRANCH ADDR\n         BAL   R8,LIBPUT           SET CONT. ADDR; RET WITH BLANK LINE\n         SPACE 1\n         MVI   0(R5),C' '          INSERT SINGLE SPACE ASA CHAR\nCKIEF45  CLC   20(5,R5),IEF45      IS THIS AN IEF45* MSG?\n         BNE   NOTIEF45            NO. CONTINUE\n         CLI   25(R5),C'3'         IEF450 TO IEF453?\n         BH    CK4PRTMC            NO. CONTINUE                     RPD\n         CLI   25(R5),C'0'         IEF450I ?                        RPD\n         BNE   NOT450I             NO. CONTINUE                     RPD\n         OI    FLAG4,$ABEND        INDICATE ABEND/JCL ERROR         RPD\n*\n         LA    R1,29(R5)           START ADDR. FOR ABEND CODE       RPD\n         LA    R14,1               INCREMENT                        RPD\n         LA    R15,55(R5)          END ADDR. FOR ABEND CODE         RPD\nCHK4ABND CLC   0(4,R1),ABNDCOMM    LOOK FOR COMMON CHARACTERS       RPD\n         BNE   INCRABND            NO, INCREMENT TO NEXT ADDRESS    RPD\n         MVC   ABNDMES+9(10),9(R1) MOVE IN ABEND CODES TO MESSAGE   RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nINCRABND BXLE  R1,R14,CHK4ABND     INCREMENT AND CONTINUE           RPD\n         MVC   ABNDMES+9(10),=C'NOT FOUND '                         RPD\n         B     SETPRT              COMMON CHAR NOT FOUND            RPD\n*\nNOT450I  CLI   25(R5),C'1'         IEF451I ?                        RPD\n         BNE   NOT451I             NO. CONTINUE                     RPD\n         OI    FLAG4,$ENDEDCC      INDICATE ENDED BY CONDITION CODE RPD\n*\n         LA    R1,29(R5)           START ADDR. FOR COND. CODE       RPD\n         LA    R14,1               INCREMENT                        RPD\n         LA    R15,55(R5)          END ADDR. FOR COND. CODE         RPD\nCHK4CC   CLC   0(4,R1),CCJOBEND    LOOK FOR COMMON CHARACTERS       RPD\n         BNE   INCRCC              NO, INCREMENT TO NEXT ADDRESS    RPD\n         MVC   ENDBYCC+18(4),15(R1) MOVE IN COND. CODE TO MESSAGE   RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nINCRCC   BXLE  R1,R14,CHK4CC       INCREMENT AND CONTINUE           RPD\n         MVC   ENDBYCC+18(4),=C'????'                               RPD\n         B     SETPRT              COMMON CHAR NOT FOUND            RPD\n*\nNOT451I  OI    FLAG4,$JCLERR       INDICATE JCL ERROR (IEF452(3)I)  RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nSETPRT   OI    FLAG,$PRINT         INDICATE JOB IS TO BE PRINTED\n         B     CONTDS1             CONTINUE\n*\nNOTIEF45 CLC   20(7,R5),IEF251I    IS THIS A 'JOB CANCELLED' MSG?\n         BNE   NOTIEF25            NO. CONTINUE                     RPD\n         OI    FLAG4,$CANCEL       INDICATE CANCEL MESSAGE          RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nNOTIEF25 CLC   20(8,R5),IIP026I    EMULATOR 'WRITE, DATA CHECK' MSG?\n         BE    SETPRT              YES. GO FLAG JOB FOR PRINTING\n         CLC   20(2,R5),REPLY      IS THIS AN OPERATOR REPLY?\n         BNE   STEPLINE            NO. CHECK FOR OXY STEP LINE      RPD\n         LA    R1,23(R5)           STARTING ADDRESS FOR SCAN\n         LA    R14,1               INCREMENT FOR BXLE\n         LA    R15,10(R1)          LAST ADDRESS FOR SCAN\nCHKCANCL CLC   1(6,R1),CANCEL      IS THIS A CANCEL REPLY?  WJS/01APR80\n         BNE   INCRCNCL            GO INCREMENT                     RPD\n         OI    FLAG4,$CANCEL       INDICATE CANCEL MESSAGE          RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nINCRCNCL BXLE  R1,R14,CHKCANCL     CONTINUE CHECK FOR 'CANCEL'\n         B     CK4PRTMC            NO, SEE IF PRINT MSGCLASS USED   RPD\n*\nSTEPLINE CLC   1(12,R5),STEPID     CHECK FOR STEP LINE              RPD\n         BNE   PROGLINE            CHECK FOR PROG LINE              RPD\n         CLC   65(12,R5),STEPFLSH  CHECK FOR STEP FLUSHED MESSAGE   RPD\n         BNE   GETCCODE            GO SAVE CONDITION CODE           RPD\n         MVI   LASTCC,X'FF'        FLAG THAT STEP FLUSHED           RPD\n         B     CK4PRTMC                                             RPD\nGETCCODE MVC   LASTCC(4),73(R5)    SAVE LAST COND CODE/ABEND CODE   RPD\n         B     CK4PRTMC                                             RPD\nPROGLINE CLC   1(12,R5),PROGID     CHECK FOR OXY PROGRAM LINE       RPD\n         BNE   CK4PRTMC                                             RPD\n         CLI   LASTCC,X'FF'        TEST FOR STEP FLUSHED FLAG       RPD\n         BE    CK4PRTMC            YES, CONTINUE                    RPD\n         CLC   LASTCC(4),CC0000    WAS LAST CC=0                    RPD\n         BE    CK4PRTMC            THIS STEP IS OK                  RPD\n         CLC   18(8,R5),OXYPROGM   WAS THIS PGM=OXYPROGM            RPD\n         BNE   SETBADCC            NO, FLAG THAT A BAD CC FOUND     RPD\n         CLC   LASTCC(4),CC0004    COMPARE OXYPROGM CC TO 0004      RPD\n         BH    SETBADCC            BAD IF GREATER THAN 0004         RPD\n         B     CK4PRTMC                                             RPD\nSETBADCC OI    FLAG4,$BADCC        INDICATE BAD CONDITION CODE      RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nCK4PRTMC CLC   SSSOCLAS(1),MSGCLPRT CK FOR PRINT ALWAYS MSGCLASS    RPD\n         BNE   CONTDS1             NO, CONTINUE                     RPD\n         OI    FLAG4,$PRTMSGC      INDICATE PRINT MESSAGE CLASS     RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\n*\nJCLDS    MVI   0(R2),C'1'          SET NEW PAGE ASA CHAR (OS/JCL)\n         BAL   R7,LIBPUT           RETURN TO LIBRARIAN WITH LOG TITLE\n         BALR  R8,0                SET CONT. ADDRESS\n         LA    R3,1(R3)            COMPENSATE FOR INSERTED ASA CHAR\n         MVC   1(79,R2),0(R5)      MOVE 79 CHARS TO LIB IOAREA\n         BCTR  R5,0                COMPENSATE FOR INSERTED ASA CHAR\n         B     CONTDS2             CONTINUE PROCESSING OF LINE\n         SPACE 1\nMSGDS    MVI   0(R5),C'1'          INSERT NEW PAGE ASA CHAR (SMB'S)\n         BALR  R8,0                SET CONT. ADDRESS\n         CLC   1(7,R5),IEF375I     IS THIS A 'JOB START'/IEF375I MSG?\n         BNE   NOT375              NO.\n         MVC   DSCDATE,31(R5)      MOVE START DATE TO -DESC CARD    SJB\n         MVC   DSCTON,37(R5)       MOVE START TIME TO -DESC CARD    SJB\n         B     CONTDS1             CONTINUE\nNOT375   CLC   1(7,R5),IEF376I     IS THIS A 'JOB END'/IEF376I MSG?\n         BNE   NOT376              NO.\n         OI    FLAG5,$ENDJOB       INDICATE JOB END EXECUTION FOUND RPD\n         MVC   DSCTOFF,37(R5)      MOVE STOP TIME TO -DESC CARD     SJB\n         B     CONTDS1             CONTINUE\nNOT376   CLC   1(7,R5),IEF287I     IS THIS IEF287I/(NOT CATALOGED) MSG?\n         BNE   NOT287              NO, CONTINUE                     RPD\n         OI    FLAG4,$NOTCAT       INDICATE NOT CATALOGED MESSAGE   RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nNOT287   CLC   1(7,R5),IEF283I     IS THIS IEF283I/(NOT DELETED X) MSG?\n         BNE   NOT283              NO, CONTINUE                     RPD\n         CLC   11(7,R5),=C'VOL SER' IS THIS 2ND IEF283I ENTRY  08/23/83\n         BE    NOT283              YES, THEN SKIP              08/23/83\n         CLC   68(2,R5),=C'8 '     IS THIS NOT DELETED 8       08/23/83\n         BE    NOT283              YES, THEN SKIP              08/23/83\n         OI    FLAG4,$NOTDEL       INDICATE NOT DELETED MESSAGE     RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\n*\nNOT283   CLC   1(7,R5),IEF142I     IS THIS A CONDITION CODE MESSAGE RPD\n         BNE   CONTDS1             NO. CONTINUE                     RPD\n         OI    FLAG5,$FNDCCMS      INDICATE CONDITION CODE MESSAGE  RPD\n*                                  FOUND-WILL PRINT IF NOT ON       RPD\n*                                  EG. - TYPRUN=SCAN                RPD\nFINDCC   LA    R1,10(R5)           STARTING ADDRESS FOR SCAN        RPD\n         LA    R14,1               INCREMENT FOR BXLE               RPD\n         LA    R15,35(R5)          LAST ADDRESS FOR SCAN            RPD\nCHKCCCOM CLC   0(4,R1),CCCOMMON    IS THIS A ' - S' FROM CC MESSAGE RPD\n         BE    CK4MAXCC            YES. GO CHECK COND CODE          RPD\n         BXLE  R1,R14,CHKCCCOM     CONTINUE CHECK FOR COMMON ' - S' RPD\n         B     SETPRT              ADDRESSES EXHAUSTED - PRINT IT   RPD\n*\nCK4MAXCC CLC   33(4,R1),BADCMES+18 COMPARE COND CODE TO MAX SO FAR  RPD\n         BL    CONTDS1             OLD COND CODE IS AT LEAST AS BIG RPD\n         MVC   BADCMES+18(4),33(R1)   SAVE THIS COND CODE AS MAX.   RPD\n         B     CONTDS1                                              RPD\n*                                                                   RPD\nOTHERDS  XC    RECRDCTR,RECRDCTR   ZERO SYSOUT RECORD COUNTER       RPD\n         LA    R1,LWADCBIN         INPUT DCB ADDR.                  RPD\n         USING IHADCB,R1                                            RPD\n         TM    DCBRECFM,DCBRECCA   TEST IF ASA CONTROL CHAR.        RPD\n         BO    WCARCNTL            PROCESS SYSOUT WITH CHAR. CONT.  RPD\n         TM    DCBRECFM,DCBRECCM   TEST IF MACHINE CONTROL CHAR.    RPD\n         BO    WCARCNTL            PROCESS SYSOUT WITH CHAR. CONT.  RPD\n         DROP  R1                                                   RPD\n*  ASSUME NO CARRIAGE CONTROL CHARACTERS IN THIS SYSOUT             RPD\n         MVI   0(R2),C'1'          SET NEW PAGE ASA CHAR IN OUT BUF RPD\n         BALR  R8,0                SET CONTINUATION ADDRESS         RPD\n         LH    R1,RECRDCTR         GET RECORD COUNT FOR THIS SYSOUT RPD\n         LA    R1,1(R1)            INCREMENT FOR CURRENT RECORD     RPD\n         CH    R1,SYSOUTMX         CK MAXIMUM ALLOWED FOR A SYSOUT  RPD\n         BH    TOOMANYL            MAXIMUM HAS BEEN REACHED         RPD\n         STH   R1,RECRDCTR         SAVE NEW RECORD COUNT FOR SYSOUT RPD\n         LA    R3,1(R3)            BUMP LRECL FOR INSERTED ASA CHAR RPD\n         MVC   1(79,R2),0(R5)      MOVE 79 CHAR. TO OUTPUT BUFFER   RPD\n         BCTR  R5,0                COMPENSATE FOR INSERTED ASA CHAR RPD\n         B     CONTDS2             CONTINUE PROCESSING OF LINE      RPD\nWCARCNTL MVI   0(R5),C'1'          SET NEW PAGE ASA CHAR            RPD\n         BALR  R8,0                SET CONTINUATION ADDRESS         RPD\n         LH    R1,RECRDCTR         GET RECORD COUNT FOR THIS SYSOUT RPD\n         LA    R1,1(R1)            INCREMENT FOR CURRENT RECORD     RPD\n         CH    R1,SYSOUTMX         CK MAXIMUM ALLOWED FOR A SYSOUT  RPD\n         BH    TOOMANYL            MAXIMUM HAS BEEN REACHED         RPD\n         STH   R1,RECRDCTR         SAVE NEW RECORD COUNT FOR SYSOUT RPD\n         B     CONTDS1             CONTINUE PROCESSING OF LINE      RPD\nTOOMANYL LH    R3,LMTMSGLN         LOAD LENGTH OF LIMIT MESSGE      RPD\n         EX    R3,LIMITREC         TELL SYSOUT LIMIT EXCEEDED       RPD\n         LA    R7,EOF              SET TO CLOSE THIS SYSOUT/CONTINU RPD\n         B     LIBPUT              WRITE MESSAGE AND CLOSE SYSOUT   RPD\n         EJECT\n*                                                                   SJB\n*              IF LRECL < 80 OR COLS 81-132 IS BLANK, THEN          SJB\n*              ONLY PUT 1 RECORD TO LIBRARIAN                       SJB\n*                                                                   SJB\nCONTDS1  C     R3,EIGHTY           IS RECORD LENGTH LESS THAN 80?\n         BL    SHORTREC            YES. GO PROCESS AS SUCH\n         MVC   0(80,R2),0(R5)      MOVE LINE (80 CHARS) TO LIB IOAREA\nCONTDS2  BAL   R7,LIBPUT           RETURN TO PANVALET WITH RECORD\n         S     R3,EIGHTY           IS RECORD LENGTH EXACTLY 80 BYTES?\n         BNP   READNEXT            YES. GO GET NEXT LINE            SJB\n         BCTR  R3,0                FOR EXECUTE\n         EX    R3,COMPREC          IS REST OF RECORD BLANK?\n         BE    READNEXT            YES. GO GET NEXT LINE\n         LA    R5,79(R5)           POINT TO LAST CHAR ALREADY WRITTEN\n         MVI   0(R5),X'FE'         INSERT CONTINUATION CHAR\n         LA    R3,2(R3)            RESET TO ACTUAL LENGTH OF REMAINDER\nSHORTREC BCTR  R3,0                FOR EXECUTE\n         EX    R3,MOVEREC          MOVE SHORT OR BALANCE OF LONG RECORD\n         LA    R7,READNEXT         BRANCH ADDR FOR NEXT ENTRY\n         B     LIBPUT              RETURN TO PANVALET WITH INPUT REC\n*                                                                   SJB\n         SPACE 3                                                    SJB\nCOMPREC  CLC   80(*-*,R5),BLANKS2  REMAINDER OF RECORD BLANK?       SJB\nMOVEREC  MVC   0(*-*,R2),0(R5)     MOVE REMAINDER TO IOAREA         SJB\nLIMITREC MVC   0(*-*,R2),LIMITMSG  MOVE LIMIT MESSAGE TO IOAREA     RPD\n         EJECT                                                      SJB\nSYNEXIT  SYNADAF ACSMETH=QSAM      INPUT (JES2) DATA SET SYNAD      SJB\n         SPACE 1                                                    SJB\n         MVI   0(R2),C'-'          INSERT TRIPLE SPACE ASA CC CHAR  SJB\n         MVC   1(78,R2),50(R1)     MOVE ERROR MESSAGE TO LIB IOAREA SJB\n         SPACE 1                                                    SJB\n         SYNADRLS                  RESTORE R13                      SJB\n         SPACE 1                                                    SJB\n         BAL   R7,LIBPUT           RETURN TO LIBRARIAN WITH ERROR   SJB\n         B     EOF                                                  SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n*              ALLOC   DSN FROM JES2                                SJB\n*                                                                   SJB\n         DS    0F                                                   SJB\nS99PARM  DC    X'80',AL3(S99AREA)  ADDRESS OF SVC 99 REQUEST BLOCK  SJB\nS99AREA  DC    AL1(S99RBEND-S99RB) LENGTH OF REQUEST BLOCK          SJB\n         DC    X'01'               VERB CODE                        SJB\n         DC    XL6'00'                                              SJB\n         DC    A(ALTUPTR)          POINTER TO LIST OF TEXT UNIT PTRSSJB\n         DC    XL8'00'                                              SJB\n         SPACE 1                                                    SJB\nALTUPTR  DC    A(ALDSTU)           ADDR OF DSNAME TEXT UNIT         SJB\n         DC    A(ALDDTU1)          ADDR OF DDNAME TEXT UNIT         SJB\n         DC    A(ALSSTU)           ADDR OF SUBSYSTEM TEXT UNIT      SJB\n         DC    X'00',AL3(ALDDTU)   ADDR OF DDNAME TEXT UNIT         SJB\n         DC    X'00',AL3(ALDSP1TU) ADDR OF DISP1  TEXT UNIT         SJB\n         DC    X'80',AL3(ALDSP2TU) ADDR OF DISP2  TEXT UNIT         SJB\n         SPACE 1                                                    SJB\nALDSTU   DC    X'0002'             ALLOCATION BY DSNAME             SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'002C'             LENGTH OF PARAMETER              SJB\nALDSN    DC    CL44' '             DSNAME                           SJB\n         DS    0H                                                   SJB\nALDDTU1  DC    X'0001'             ALLOCATION BY DDNAME             SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0008'             LENGTH OF DDNAME                 SJB\n         DC    CL8'JES2DDNM'       DDNAME FOR ALLOCATION            SJB\nALSSTU   DC    X'005C'             SUBSYSTEM DATA SET ALLOCATION    SJB\n         DC    X'0000'             ONE PARAMETER                    SJB\n         DC    X'0004'             LENGTH OF PARAMETER              SJB\nALSSN    DC    CL4'JES2'           SUBSYSTEM NAME                   SJB\n         DS    0H                                                   SJB\nALDDTU   DC    X'0055'             RETURN WITH DDNAME               SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0008'             LENGTH OF PARAMETER              SJB\nALDDNAM  DC    CL8' '              AREA FOR DDNAME                  SJB\n         DS    0H                                                   SJB\nALDSP1TU DC    X'0004'             DISP1                            SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0001'             LENGTH OF PARAMETER              SJB\n         DC    X'02'               DISP1=MOD                        SJB\n         DS    0H                                                   SJB\nALDSP2TU DC    X'0005'             DISP2                            SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0001'             LENGTH OF PARAMETER              SJB\n         DC    X'08'               DISP2=KEEP                       SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n*              UNALLOC DELETE,     RELEASE                          SJB\n*                                                                   SJB\nTUFRDEL  DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRDEL) FREE DELETE                      SJB\n         DC    X'80',AL3(UALFRREL) RELEASE FROM HOLD                SJB\n*                                                                   SJB\n*              UNALLOC KEEP,       RELEASE                          SJB\n*                                                                   SJB\nTUFRKEPR DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB\n         DC    X'80',AL3(UALFRREL) RELEASE FROM HOLD                SJB\n*                                                                   SJB\n*              UNALLOC KEEP,       HOLD                             SJB\n*                                                                   SJB\nTUFRKEPH DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB\n         DC    X'80',AL3(UALFRHLD) PUT ON HOLD                      SJB\n*                                                                   SJB\n*              UNALLOC KEEP,       CHANGE CLASS, RELEASE            SJB\n*                                                                   SJB\nTUFRREQR DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB\n         DC    X'00',AL3(UALFRREQ) REQUEUE THE CLASS                SJB\n         DC    X'80',AL3(UALFRREL) RELEASE FROM HOLD                SJB\n*                                                                   RPD\nTUFRREQD DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  RPD\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        RPD\n         DC    X'00',AL3(UALFRRQD) REQUEUE THE CLASS TO DUMMY       RPD\n         DC    X'80',AL3(UALFRREL) RELEASE FROM HOLD                RPD\n*                                                                   RPD\n*              UNALLOC KEEP,       CHANGE CLASS, HOLD               SJB\n*                                                                   SJB\nTUFRREQH DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB\n         DC    X'00',AL3(UALFRREQ) REQUEUE THE CLASS                SJB\n         DC    X'80',AL3(UALFRHLD) PUT ON HOLD                      SJB\n         EJECT                                                      SJB\nUALDDTU  DC    X'0001'             UNALLOCATION BY DDNAME           SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0008'             LENGTH OF PARAMETER              SJB\nUALDDNAM DC    CL8' '              DDNAME TO BE UNALLOCATED         SJB\n         DS    0H                                                   SJB\nUALFRDEL DC    X'0005'             OVERIDING DISP2 SPECIFICATION    SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0001'             LENGTH OF PARAMETER              SJB\n         DC    X'04'            4= DELETE DATA SET                  SJB\n         DS    0H                                                   SJB\nUALFRKEP DC    X'0005'             OVERIDING DISP2 SPECIFICATION    SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0001'             LENGTH OF PARAMETER              SJB\n         DC    X'08'            8= KEEP   DATA SET                  SJB\n         DS    0H                                                   SJB\nUALFRREL DC    X'000A'             RELEASE HELD DSN                 SJB\n         DC    X'0000'             NO PARAMETER                     SJB\n         DS    0H                                                   SJB\nUALFRHLD DC    X'0059'             HOLD QUEUE                       SJB\n         DC    X'0000'             NO PARAMETER                     SJB\n         DS    0H                                                   SJB\nUALFRREQ DC    X'0018'             RELEASE HELD DSN                 SJB\n         DC    X'0001'             1 PARAMETER                      SJB\n         DC    X'0001'             LENGTH                           SJB\nRECLASS1 DC    C' '                REQUEUE CLASS               06/17/83\n         DS    0H                                                   RPD\nUALFRRQD DC    X'0018'             RELEASE HELD DSN                 RPD\n         DC    X'0001'             1 PARAMETER                      RPD\n         DC    X'0001'             LENGTH                           RPD\nDUMMYCL1 DC    C' '                DUMMY REQUE CLASS           06/17/83\n         EJECT                                                      SJB\n         SPACE 2                                                    SJB\nDSPRCAD  DS    0F                  INITIAL BRANCH-ADDRESS TABLE     SJB\n         DC    A(JES2JLOG)         ADDRESS FOR PROCESSING LOG DATA SET\n         DC    A(JCLDS)            ADDRESS FOR PROCESSING JCL DATA SET\n         DC    A(MSGDS)            ADDRESS FOR PROCESSING MSG DATA SET\n         SPACE 2                                                    SJB\nEIGHTY   DC    F'80'               OUTPUT RECORD SIZE               SJB\nLIBPARM  DC    X'80',AL3(LIBPARM2) PARMS EXPECTED BY LIBRARY        SJB\n         CNOP  2,4                                                  SJB\nLIBPARM2 DC    AL2(L'LIBPARM3)     PARMS EXPECTED BY LIBRARY        SJB\nLIBPARM3 DC    C'NRJS,NJTA'        PARMS EXPECTED BY LIBRARY        SJB\nBLANKS2  DC    CL80' '             BLANKS                           SJB\nDASHES   DC    CL7'-------'        DASHES OR PRINTED                RPD\nRPLYECB  DC    F'0'                                                 RPD\nRPLYAREA DC    X'00'                                                RPD\nJULIANDY DC    CL3' '              JULIAN DATE                      RPD\nJULDTEPK DC    H'0'                PACKED JULIAN DATE               RPD\nRECRDCTR DC    H'0'                NON JCL SYSOUT RECORD COUNTER    RPD\nLMTMSGLN DC    H'40'               LENGTH OF SYSOUT LIMIT MESSAGE   RPD\n         DS    0D                                                   SJB\n         LTORG                                                      SJB\nPSODS    DC    C'PS0002'           PSO DATA SET IDENTIFIER          RPD\nIEF375I  DC    C'IEF375I'          'JOB START' MSG NUMBER\nIEF376I  DC    C'IEF376I'          'JOB STOP' MSG NUMBER\nIEF287I  DC    C'IEF287I'          'NOT CATALOGUED 2' MSG NUMBER\nIEF283I  DC    C'IEF283I'          'NOT DELETED 8' MSG NUMBER\nIEF251I  DC    C'IEF251I'          'JOB CANCELLED' MSG NUMBER\nIEF45    DC    C'IEF45'            FOR LOCATING JCL ERROR MSGS, ETC\nIIP026I  DC    C'+IIP026I'         EMULATOR 'WRITE, DATA CHECK' MSG NO.\nREPLY    DC    CL2'R '             START OF OPERATOR REPLY\nCANCEL   DC    C'CANCEL'           REQUIRED FOR SCAN (PRINT CRITERION)\nALLDS    DC    X'000102'           INDICATING 3 DATA SETS FOUND FOR JOB\n         SPACE 1                                                    RPD\nIEF142I  DC    C'IEF142I'          STEP END CONDITION CODE MESSAGE  RPD\nSPACEPID DC    C' '                SPACE FOR NON RESTRICT USER ID   RPD\nCC0000   DC    C'0000'             CONDITION CODE 0000              RPD\nCC0004   DC    C'0004'             CONDITION CODE 0004              RPD\nLASTCC   DC    C'    '             CONDITION CODE FROM LAST STEP    RPD\nCCCOMMON DC    C' - S'             COMMON CHAR. IN IEF142I MESSAGE  RPD\nCCJOBEND DC    C' - E'             COMMON CHAR. IN IEF451I MESSAGE  RPD\nABNDCOMM DC    C' - A'             COMMON CHAR. IN IEF450I MESSAGE  RPD\nOXYPROGM DC    C'OXYPROGM'         OXYPROGM PROGRAM NAME            RPD\nSTEPID   DC    C'*       STEP'     OXY JES2LOG STEP LINE IDENTIFIER RPD\nPROGID   DC    C'*       PROG'     OXY JES2LOG PROG LINE IDENTIFIER RPD\nSTEPFLSH DC    C'STEP FLUSHED'     STEP FLUSHED INDICATION          RPD\nLIMITMSG DC    C' **** LIBSPOOL SYSOUT LIMIT EXCEEDED ****'         RPD\nABNDMES  DC    C'** ABEND CODES HERE **'                            RPD\nCNCLMES  DC    C'*** JOB CANCELLED *** '                            RPD\nNOTCMES  DC    C'DATA SET NOT CATALOGED'                            RPD\nNOTDMES  DC    C' DATA SET NOT DELETED '                            RPD\nENDBYCC  DC    C'JOB ENDED BY CC = XXXX'                            RPD\nJCLERRM  DC    C'***** JCL ERROR ***** '                            RPD\nBADCMES  DC    C'MAX. COND. CODE = XXXX'                            RPD\nPRTDMES  DC    C'PRINTED - NOT EXECUTED'                            RPD\nPRTCMES  DC    C'PRINTED - PRINT MSGCLS'                            RPD\nPRTNOTDN DC    C'PRINTED - JOB NOT DONE'                            RPD\nENDLMMSG EQU   *\n         SPACE 1                                                    SJB\n         EJECT                                                      SJB\nOPTCARD  DC    CL9'-OPT '          LIBRARIAN OPT CARD KEYWORD       SJB\n         DC    C'NOPC,NOPR,NOEXEC'                                  SJB\n         DC    (80-(*-OPTCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nADDCARD  DC    CL9'-ADD '          LIBRARIAN ADD CARD KEYWORD       SJB\nADDJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               RPD\n         DC    C',NOCHK,UNCON,NOLIST,NORESEQ,SEQ=/81,8,10,10/'      SJB\n         DC    (80-(*-ADDCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nDLMCARD  DC    CL9'-DLM '          LIBRARIAN ADD CARD KEYWORD       SJB\nDLMJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               RPD\n         DC    (80-(*-DLMCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nSELCARD  DC    CL9'-SEL '          LIBRARIAN SEL CARD KEYWORD       SJB\nSELJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               RPD\n         DC    C',NOCHK,UNCON,NOLIST,NORESEQ,SEQ=/81,8,10,10/'      SJB\n         DC    (80-(*-SELCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nPGMCARD  DC    CL9'-PGMR '         LIBRARIAN PGMR CARD              SJB\nPGMJOBN  DC    CL08' '             JOBNAME                          SJB\nPGMUSER  DC    CL07' '             USERID                           SJB\n         DC    (80-(*-PGMCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nDSCCARD  DC    CL9'-DESC'          LIBRARIAN DESC CARD              SJB\nDSCJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               RPD\nDSCDATE  DC    C'YYDDD'            JOB START DATE                   SJB\nDSCTON   DC    C'HHMM'             JOB START TIME                   SJB\nDSCTOFF  DC    C'HHMM'             JOB STOP  TIME                   SJB\nDSCERROR DC    C'PRINTED'          NO ERROR ASSUMED                 SJB\nDSCMSGCL DC    C' '                MSGCLASS OF JOB                  RPD\n         DC    (80-(*-DSCCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nHSTCARD  DC    CL5'-HST '          LIBRARIAN HST  CARD         08/23/83\nHSTMSG   DC    CL40' '             MESSAGE                     08/23/83\n         DC    (80-(*-HSTCARD))C' '                            08/23/83\n         SPACE 1                                               08/23/83\nENDCARD  DC    CL9'-END  '         LIBRARIAN END  CARD              SJB\n         DC    (80-(*-ENDCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\n         EJECT                                                      SJB\nTITLE1   DC    CL90' '                                              RPD\n         ORG   TITLE1                                               SJB\n         DC    CL10'MODULE    '                                     SJB\n         DC    CL10'          '                                     SJB\n         DC    CL10'          '                                     SJB\n         DC    CL10'JOB START '                                     SJB\n         DC    CL10'JOB START '                                     SJB\n         DC    CL10'JOB STOP  '                                     SJB\n         DC    CL10'  JOB     '                                     RPD\n         DC    CL10'REROUTED  '                                     SJB\n         DC    CL10'LIBRARY   '                                     SJB\n         ORG   TITLE1+90                                            RPD\nTITLE2   DC    CL90' '                                              RPD\n         ORG   TITLE2                                               SJB\n         DC    CL10'NAME      '                                     SJB\n         DC    CL10'JOBNAME   '                                     SJB\n         DC    CL10'USERID    '                                     SJB\n         DC    CL10'DATE      '                                     SJB\n         DC    CL10'TIME      '                                     SJB\n         DC    CL10'TIME      '                                     SJB\n         DC    CL10'MSGCLASS  '                                     RPD\n         DC    CL10'TO PRINT  '                                     SJB\n         DC    CL10'ERROR     '                                     SJB\n         ORG   TITLE2+90                                            RPD\n         EJECT                                                      SJB\nINDCB    DCB   DDNAME=DUMMY,DSORG=PS,MACRF=GL,                      SJB*\n               EODAD=EOF,EROPT=ACC,SYNAD=SYNEXIT                    SJB\n         DS    0F                                                   SJB\nINDCBL   EQU   *-INDCB                                              SJB\n         EJECT                                                      SJB\nOUTDCB   DCB   DDNAME=SYSIN,DSORG=PS,MACRF=PM,                      SJB*\n               RECFM=FB,LRECL=80,BLKSIZE=6160                       SJB\n         DS    0F                                                   SJB\nOUTDCBL  EQU   *-OUTDCB                                             SJB\n         EJECT                                                      SJB\nOPEN     OPEN  (0),MF=L                                             SJB\nCLOSE    CLOSE (0),MF=L                                             SJB\n         SPACE 3                                                    SJB\nEOSNAP   EQU   *                   END OF STORAGE AREA TO BE SNAPPEDSJB\nDNAME    DS    CL8                 NAME LEFT JUSTIFIED              SJB\n         DROP  R11,R12,R6                                           SJB\n         EJECT                                                      SJB\nSSREQ    CSECT                                                      SJB\n         CONNECT LWORK3,WORK3,BASE=R12,CLEAR=YES,PARM=R11           SJB\n         USING WORK1,R11           USE MAIN TASK WORK AREA          SJB\n         USING SSOB,R10            GET ADDR. TO 1 SAVEAREA          SJB\n         LIBWTO 'ENTERED SSREQ'                                     SJB\n         LA    R10,LWASSOB         GET ADDRESS OF IEFSSREQ PARM     SJB\n*                                                                   SJB\n*              THE $FIRST FLAG MUST BE TURNED ON EACH TIME A NEW    SJB\n*              JOB IS TO BE SELECTED                                SJB\n*                                                                   SJB\n         TM    FLAG,$FIRST         IS THIS THE 1ST REQUEST          SJB\n         BNO   SSREQ1              NOPE                             SJB\n         NI    FLAG,255-$FIRST     TURN OFF FIRST FLAG              SJB\n*                                                                   SJB\n         MVC   DSFLAGS,=3X'FF'     INITILIZE DSFLAGS                SJB\n*                                                                   SJB\n         XC    LWASSOB,LWASSOB     CLEAR IT OUT                     SJB\n         ST    R10,LWASSPRM        SET SSOB ADDR                    SJB\n         MVI   LWASSPRM,X'80'      INDICATE LAST PARM               SJB\n*                                                                   SJB\n*              INITILIZE SSOB REQUEST BLOCK                         SJB\n*                                                                   SJB\n         MVC   SSOBID,=CL4'SSOB'   SSOB ID                          SJB\n         LA    R1,SSOBHSIZ                                          SJB\n         STH   R1,SSOBLEN          STORE IN LENGTH                  SJB\n         LA    R1,SSOBSOUT                                          SJB\n         STH   R1,SSOBFUNC         STORE IN FUNCTION                SJB\n         L     R1,LWASSIB@         GET SSIB ADDR                    SJB\n         ST    R1,SSOBSSIB         STORE IN SSIB ADDR               SJB\n         LA    R1,0                                                 SJB\n         ST    R1,SSOBRETN         STORE IN RETN CODE               SJB\n         LA    R1,SSSOBGN                                           SJB\n         ST    R1,SSOBINDV         STORE IN INDV ADDR               SJB\n*                                                                   SJB\n*              INITILIZE SSSO REQUEST BLOCK                         SJB\n*                                                                   SJB\n         LA    R1,SSSOSIZE+SSSOXSIZ                                 SJB\n         STH   R1,SSSOLEN          STORE IN SSSO LENGTH             SJB\n*                                                                   SJB\n*SSSODSID+....                                                      SJB\n*         +8 IS PROGRAMMER NAME                                     SJB\n*         +8+20 IS ACCOUNTING FIELDS                                SJB\n*         +8+20+37 IS USERID                                        SJB\n*                                                                   SJB\nSSSOPGMR EQU   SSSODSID+8,20       PROGRAMMER NAME                  SJB\nSSSOACCT EQU   SSSODSID+8+20,37    ACCOUNTING FIELDS                SJB\nSSSOUSER EQU   SSSODSID+8+20+37,7  USERID                           SJB\nSSSOXSIZ EQU   SSSOUSER+7-SSSOPGMR LENGTH OF EXTRA POOP             SJB\n*                                                                   SJB\n         MVI   SSSOFLG1,SSSOSCLS   SELECT BY CLASS                  SJB\n         OI    SSSOFLG1,SSSOHLD    SELECT BY HELD DSNS TOO          SJB\n*                                                                   SJB\n         MVC   SSSODEST,DEST       MOVE IN DESTINATION         06/17/83\n         CLC   SSSODEST,=CL8' '    WAS A DEST. SPECIFIED       06/17/83\n         BE    PSONDEST            NOPE, DONT SET SELECT/DEST  06/17/83\n         OI    SSSOFLG1,SSSODST    SELECT BY DEST                   SJB\nPSONDEST DS    0H                                              08/23/83\n*                                                                   SJB\n         NI    SSSOFLG2,255-SSSOCTRL SUBSYSTEM TO RETURN A DATASET  SJB\n*                                                                   SJB\nPSOCLASS L     R1,CURMCLAD         LOAD ADDR. OF MSGCLASS TO GET    RPD\n         MVC   SSSOCLSL(1),0(R1)   MOVE IN THIS CLASS               RPD\n         MVI   SSSODSN,X'00'       INDICATE INITIAL ENTRY FOR IEFSSREQ\n         B     SSREQ2                                               SJB\n         EJECT                                                      SJB\nSSREQ1   DS    0H                                                   SJB\n*                                                                   SJB\n*              IF THIS IS NOT THE FIRST TIME THROUGH THEN           SJB\n*              TURN ON THE SELECT BY JOBID SO WE WILL GET ONLY      SJB\n*              SYSOUT FOR THE JOB THAT HAS BEEN SELECTED BY THE     SJB\n*              FIRST CALL. THIS INSURES THAT WE GET NOBODY ELSE     SJB\n*              UNTIL WE ARE THROUGH WITH THIS JOBIDS SYSOUT         SJB\n*                                                                   SJB\n         OI    SSSOFLG1,SSSOSJBI   SELECT BY JOB ID (JOB#)          SJB\nSSREQ2   DS    0H                                                   SJB\n         MVI   SSSORESV,X'01'      TELL JES2 TO FILL IN EXTRA POOP  SJB\n         SPACE 1                                                    SJB\n         MODESET MODE=SUP,KEY=ZERO GET INTO SUPERVISOR STATE        SJB\n         SPACE 1                                                    SJB\n         LA    R1,LWASSPRM         LOAD ADDRESS OF SSOB             SJB\n         SPACE 1                                                    SJB\n         IEFSSREQ                  ISSUE SUBSYSTEM REQUEST          SJB\n         SPACE 1                                                    SJB\n         STH   R15,RETCODE         SAVE IEFSSREQ RETURN CODE        SJB\n         MVC   LWASSIB@,SSOBSSIB                                    SJB\n         SPACE 3                                                    SJB\n         MODESET MODE=PROB,KEY=NZERO GET OUT OF SUPERVISOR STATE    SJB\n         SPACE 3                                                    SJB\n         LH    R15,RETCODE                                          SJB\n         RELEASE LWORK3,RC=(R15)                                    SJB\n         LTORG                                                      SJB\n         EJECT                                                      SJB\nWORK1    DSECT                                                      SJB\nSAVE1    DS    9D                                                   SJB\nLWASSPRM DS    A                   PARM FIELD FOR SSOB              SJB\nLWASSOB  DS    CL(SSOBLEN1+SSSOXSIZ)                                SJB\n         DS    0F                  EXTRA                            SJB\nRDRSTIME DS    XL8                 RDR START TIME/DATE OF JOB       SJB\nLWAOPEN  DS    F                                                    SJB\nLWACLOSE DS    F                                                    SJB\nLWASSIB@ DS    A                                                    SJB\nLWAUALTU DS    A                                                    SJB\nLWADCBIN DS    CL(INDCBL)                                           SJB\nLWADCBOT DS    CL(OUTDCBL)                                          SJB\nLWADCBRP DS    CL(RPTDCBL)                                          SJB\nDSFLAGS  DC    X'000102'           0=LOG, 1=JCL, 2=MSG DS PROCESSED SJB\nLWAPACK  DS    D                                               06/17/83\nSYSOUTMX DC    H'0'                MAX SYSOUT RECORD COUNT     06/17/83\nRECLASS  DC    C' '                RE-QUEUE CLASS              06/17/83\nPRODID   DC    C' '                PRODID CLASS OR BLANK       06/17/83\nDUMMYCLS DC    C' '                DUMMY SYSOUT CLASS          06/17/83\nMSGCLPRT DC    C' '                MSGCLASS - JCL PRINT ALWAYS 06/17/83\nDEST     DC    CL8' '              DESTINATION TO PROCESS      06/17/83\nMSGCLS   DC    CL8' '              MSGCLASSES TO BE PROCESSED  06/17/83\nMSGCLS99 DC    C' '                MUST BE BLANK               06/17/83\nFLAG     DS    X                   MULTI-PURPOSE FLAG BYTE          SJB\n$FIRST   EQU   X'80'               SET WHEN NEW JOB IS NEEDED       SJB\n$PRINT   EQU   X'40'               TO INDICATE JOB IS TO BE PRINTED SJB\n$CLOSING EQU   X'20'               TO INDICATE CLOSING OUT OF JOB   SJB\nFLAG2    DS    X                   MULTI-PURPOSE FLAG BYTE          SJB\n$TITLE   EQU   X'80'               INDICATE TITLE LINE TO PUT OUT   SJB\n$DEBUG   EQU   X'40'               TO INDICATE DEBUGGING            SJB\nFLAG3    DS    X                   FIRST OR NEXT SYSOUTS OF A JOB   RPD\n$FRSTPSO EQU   X'80'               INDICATE FIRST SYSOUT FOR JOB    RPD\nFLAG4    DS    X                   REASON FOR PRINTING FLAG         RPD\n$ABEND   EQU   X'80'               ABEND FOUND                      RPD\n$ENDEDCC EQU   X'40'               ENDED BY CONDITION CODE FOUND    RPD\n$JCLERR  EQU   X'20'               JCL ERROR FOUND                  RPD\n$CANCEL  EQU   X'10'               CANCEL FOUND                     RPD\n$NOTCAT  EQU   X'08'               NOT CATALOGUED FOUND             RPD\n$NOTDEL  EQU   X'04'               NOT DELETED FOUND                RPD\n$BADCC   EQU   X'02'               BAD CONDITION CODE FOUND         RPD\n$PRTMSGC EQU   X'01'               ALWAYS PRINT MSGCLASS ON JOB     RPD\nFLAG5    DS    X                   REASON FOR PRINTING FLAG         RPD\n$FNDCCMS EQU   X'80'               FOUND CONDITION CODE MESSAGE     RPD\n$ENDJOB  EQU   X'40'               FOUND $IEF376I MESSAGE FLAG      RPD\nSNAPID   DS    X                                                    SJB\nRETCODE  DS    H                   RETURN CODE                      SJB\nDSTYPE   DS    X                   DATA SET TYPE FLAG (LOG,JCL,MSG) SJB\nCARDOUT  DS    CL80                                                 SJB\nPARMCARD DS    CL80                                                 SJB\nLWACARD  DS    CL80                                                 SJB\nCURMCLAD DS    F                PTR TO CURRENT MSGCLASS             RPD\nLWORK1   EQU   *-WORK1                                              SJB\n*                                                                   SJB\nWORK2    DSECT                                                      SJB\nSAVE2    DS    9D                                                   SJB\nLWORK2   EQU   *-WORK2                                              SJB\n         SPACE 3                                                    SJB\nWORK3    DSECT                                                      SJB\nSAVE3    DS    9D                                                   SJB\nLWORK3   EQU   *-WORK3                                              SJB\n         SPACE 3                                                    SJB\nDIRECTRY DSECT                     LIB DIRECTORY ENTRY DSECT        SJB\nDPASS    DS    CL4                 PASSWORD                         SJB\nDADATE   DS    CL6                 ADDED DATE       MMDDYY          SJB\nDUDATE   DS    CL6                 LAST UPDATE DATE MMDDYY          SJB\nDCARDS   DS    PL3                 NUMBER OF CARDS                  SJB\nDPGMR    DS    CL15                PROGRAMMER NAME                  SJB\nDPROC    DS    CL8                 FIRST 8 BYTES OF PROC PARAMETER  SJB\nDDESC    DS    CL30                MODULE DESCRIPTION               SJB\nDCSEQ    DS    BL1                 STARTING COLUMN FOR SEQ          SJB\nDLSEQ    DS    BL2                 LENGTH OF SEQ                    SJB\nDISEQ    DS    BL2                 INCREMENT VALUE FOR SEQ          SJB\nDSSEQ    DS    BL2                 STARTING VALUE FOR SEQ           SJB\nDANUM    DS    BL2                 ACCESS NUMBER                    SJB\nDUNUM    DS    BL2                 UPDATE NUMBER                    SJB\nDENUM    DS    BL1                 EXTENT NUMBER                    SJB\nDBNUM    DS    BL1                 BLOCKS NUMBER                    SJB\nDLDATE   DS    CL6                 LAST ACCESS DATE   MMDDYY        SJB\nDFILL    DS    CL6                                                  SJB\n         EJECT                                                      SJB\nCOMMADDR DSECT                     POINTED TO BY COMMLPTR           SJB\nCOMMECB  DS    A                   POINTER TO COMMAND ECB           SJB\nCOMMCIB  DS    A                   POINTER TO COMMAND INPUT BUFFER  SJB\nCIB      DSECT ,                                               06/17/83\n         IEZCIB ,                                              06/17/83\n         SPACE 3                                                    SJB\n         CVT   DSECT=YES           CVT MAPPING                      SJB\n         EJECT                                                      SJB\n         IEFJESCT                  JES COMMUNICATION TABLE DSECT    SJB\n         EJECT                                                      SJB\n         IEFJSSOB (SO)             SSOB DSECT WITH PSO FUNCTION     SJB\n         EJECT                                                      SJB\n         IEFZB4D0                  SVC 99 REQUEST BLOCK DSECT       SJB\n         EJECT                                                      SJB\n         DCBD  DSORG=PS,DEVD=DA    DCB DSECT                        SJB\n         SPACE 3                                                    SJB\n         END   ,                                                    SJB\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLLISTL": {"ttr": 2307, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x82\\x18\\x8f\\x00\\x82(o\\x157\\x00\\x08\\x00\\x08\\x00\\x04\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1982-07-07T00:00:00", "modifydate": "1982-10-13T15:37:00", "lines": 8, "newlines": 8, "modlines": 4, "user": "SHSWRPD"}, "text": "//JCLLIST  JOB (@SYSUID,@SYSACCT),'LINK-SHSW.APFLIBR',CLASS=A\n/*JOBPARM   I,W,T=5,Q=T,L=20\n//ASMHCL    EXEC    ASMHCL2\n//ASM.SYSIN  DD  DSN=SHSW.LIBSPOOL.DATA(JCLLIST),DISP=SHR\n//LKED.SYSLMOD DD DSN=SHSW.APFLIBR,DISP=SHR,VOL=SER=F031R2,UNIT=3350\n//LKED.SYSLIB DD  DSN=SYS1.OXYLIB,DISP=SHR\n//LKED.SYSIN  DD  *\n  NAME JCLLIST(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JCLLIST8": {"ttr": 2309, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x83#O\\x00\\x83#O\\x17!\\x08E\\x08E\\x00\\x00\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1983-08-22T00:00:00", "modifydate": "1983-08-22T17:21:00", "lines": 2117, "newlines": 2117, "modlines": 0, "user": "SYSXKMB"}, "text": "JCLL     TITLE 'LIBSPOOL: JCLLIST - LIBRARIAN/JES2 EXTERNAL WRITER' SJB\n*/ ***************************************************************** /*\n*                                                                     *\n*  LIBSPOOL - JES2 SYSMSG SPOOLING SYSTEM:  A LIBRARIAN EXTERNAL WTR  *\n*                                                                     *\n*/****************************************************************** /*\n*/ THIS VERSION OF JCLLIST WILL RUN ON SP1.3 USING THE OXY JES2 LOG  /*\n*/ FORMAT TO OBTAIN PROGRAM NAME. IT WILL WORK WITH EITHER SP1.1     /*\n*/ OR SP1.3 JES2.                                                    /*\n*/****************************************************************** /*\n*/*                                                                  */\n*/*                                                                  */\n*/*       WRITTEN BY :             SAM J. BASS              (SJB)    */\n*/*                                OCCIDENTAL SYSTEMS INC.           */\n*/*                                5 GREENWAY PLAZA EAST             */\n*/*                                HOUSTON, TEXAS 77046              */\n*/*                                (713) 840-2178                    */\n*/*                                                                  */\n*/*       DISCLAMER:               THIS PROGRAM HAS BEEN FULLY       */\n*/*                                TESTED AT OSI, BUT I CLAIM NO     */\n*/*                                RESPONSIBILITY FOR THIS PROGRAM   */\n*/*                                PROCESSING THE WRONG JES2         */\n*/*                                SYSOUT DATASETS                   */\n*/*                                                                  */\n*/*       MODIFIED BY :            ROBERT P DZIALAK         (RPD)    */\n*/*                                OCCIDENTAL CHEMICAL CORPORATION   */\n*/*                                360 RAINBOW BLVD. SOUTH           */\n*/*                                NIAGARA FALLS , NEW YORK 14303    */\n*/*                                (716) 286-3251                    */\n*/*                                                                  */\n*/*      SJB   06/09/83            MINOR MODS TO FIT HDC STANDASDS   */\n*/*                                                                  */\n*/*      SJB   06/17/83            ADDED PARMLIB SUPPORT FOR         */\n*/*                                INITILIZATION AND MODIFICATION    */\n*/*                                OF VALUES VIA THE OS MODIFY       */\n*/*                                COMMAND                           */\n*/*                                                                  */\n*/*                                                                  */\n*/*                                                                  */\n*/****************************************************************** /*\n*/****************************************************************** /*\n* DATA NAME 'MSGCLS' DEFINES THE MSGCLASSES TO BE SERVICED          RPD\n* INCLUDE ONLY MSGCLASSES TO BE USED                                RPD\n&RECLASS SETC  'J'                                                  SJB\n&PRODID  SETC  ' '   FIRST CHARACTER OF USERIDS ACCEPTED            RPD\n*                    SPACE ACCEPTS ALL USERIDS                      RPD\n&DUMMYCLS SETC 'J'   JES2 DUMMY SYSOUT CLASS                        RPD\n&MSGCLPRT SETC 'X'   MSGCLASS-PRINT JCL ALWAYS                      RPD\n&MSGCLS   SETC 'XW'  MSGCLASSES TO PROCESS                          RPD\n&DEST     SETC 'LOCAL' DEFAULT DESTINATION                          RPD\n&SYSOUTMX SETA 500   RECORD LIMIT FOR EACH NON JCL SYSOUT           SJB\n&WTOR    SETC  'NO'                                            06/17/83\n         EJECT                                                      SJB\n*/ ***************************************************************** /*\n*                                                                     *\n*    SAMPLE STARTED TASK JCL:                                         *\n*                                                                     *\n*    //LIBSPOOL PROC DEBUG=                                           *\n*    //IEFPROC  EXEC PGM=JCLLIST,TIME=1439,PARM=&DEBUG                *\n*    //SYSPRINT DD  DUMMY                                             *\n*    //REPORT   DD  SYSOUT=A                                          *\n*    //SNAP     DD  SYSOUT=A                                          *\n*    //SYSABEND DD  SYSOUT=A                                          *\n*    //OSJOB    DD  DUMMY                                             *\n*    //MASTER   DD  DISP=SHR,DSN=SYSX.JCLLIST.LIBRARY                 *\n*    //SYSIN    DD  &&SYSIN,DISP=(NEW,DELETE),UNIT=SYSDA,             *\n*    //             SPACE=(CYL,(10,10)),                              *\n*    //             DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160)              *\n*                                                                     *\n*    NOTE THAT THE TASK WILL REMAIN IN AN 'OUTPUT LONG-WAIT' AND      *\n*    WILL ISSUE AN STIMER EVERY 10 SECONDS TO CHECK FOR THE PRESENCE  *\n*    OF ANY SYSOUT='MSGCLS' CLASS OUTPUT.                             *\n*                                                                     *\n*        THE MODULE MUST BE MARKED AC=1 AND MUST RESIDE IN            *\n*        AN AUTHORIZED LIBRARY IFA STEPLIB IS USED OR MUST            *\n*        MUST BE IN A LINKLIST LIBRARY. THIS MODULE IS                *\n*        NOT REENTRANT.                                               *\n*                                                                     *\n*/ ================================================================= /*\n*                                                                     *\n*  OS MACROS USED BY THIS MODULE:                                     *\n*                                                                     *\n*  IEFSSREQ     EXTRACT      QEDIT        WAIT         GET     WTO    *\n*  IEFZB4D0     MODESET      SYNADRLS     TTIMER       SNAP    PUT    *\n*  IEFJESCT     DYNALLOC     SYNADAF      STIMER       OPEN    DCBD   *\n*  IEFJSSOB     QEDIT        DCB          CLOSE        CALL    WTOR   *\n*  CONNECT      RELEASE      LINK         LIBWTO                      *\n*                                                                     *\n*/ ================================================================= /*\n*                                                                     *\n*  UPON ISSUANCE OF AN OPERATOR PAUSE COMMAND, A WTO IS ISSUED BY     *\n*  JCLLIST THAT TERMINATION IS IN PROGRESS.                           *\n*                                                                     *\n*/ ================================================================= /*\n*                                                                     *\n*  NAMING CONVENTIONS OF MODULES PLACED ON THE LIBRARIAN SPOOL        *\n*                                                                     *\n*    TO INSURE UNIQUE LIBRARIAN NAMES, THE LIBSPOOL MODULE NAME       *\n*    IS CONSTRUCTED AS FOLLOWS:                                       *\n*                                                                     *\n*               BYTE  1   - LETTER A THRU Z                           *\n*               BYTES 2-4 - JULIAN DAY NUMBER                         *\n*               BYTES 5-8 - JES2 JOB NUMBER                           *\n*                                                                     *\n*    IF A MODULE IS FOUND TO ALREADY EXIST ON THE LIBSPOOL DATA SET   *\n*    THEN AN  'B' REPLACES THE A (ETC.) IN BYTE ONE.                  *\n*                                                                     *\n*/ ================================================================= /*\n*                                                                     *\n*  CRITERIA UPON WHICH JCLLIST WILL SET THE PRINT FLAG AND FORCE A    *\n*  JOB TO BE PRINTED AND WILL ALSO BE ADDED TO THE LIBRARIAN SPOOL)   *\n*                                                                     *\n*      ---------------------------------------------------------      *\n*      -*-  ANY OF THE FOLLOWING IBM MESSAGE IDENTIFICATIONS -*-      *\n*      ---------------------------------------------------------      *\n*                                                                     *\n*  IEF251I - JOB CANCELLED                                            *\n*  IEF283I - NOT DELETED X                                            *\n*  IEF287I - NOT RECTLGD/CATALGD/UNCATLGD                             *\n*  IEF450I - ABEND           IEF452I - JOBFAIL/JOB NOT RUN JCL ERROR  *\n*  IEF451I - ENDED BY CC     IEF453I - JOB FAILED - JCL ERROR         *\n*                                                                     *\n*              IF ANY ERRORS ARE FOUND THEN THE SYSOUT DATASETS       *\n*              ARE RELEASED FROM THE HOLD QUEUE.                      *\n*                                                                     *\n* CONDITION CODES ARE ALSO CHECKED AND JCL WILL BE PRINTED AS FOLLOWS *\n*                                                                     *\n*            MSGCLASS ? - JCL WILL BE PRINTED IF ANY STEP IN THE JOB  *\n*                         HAS A CONDITION CODE GREATER THAN 0.\n*                                                                     *\n*            MSGCLASS X - JCL WILL ALWAYS BE PRINTED-SPECIFIED IN     *\n*                         &MSGCLPRT ABOVE                             *\n*                                                                     *\n*/ ================================================================= /*\n*    THIS VERSION OF JCLLIST WILL COLLECT SYSOUTS #2,3 AND 4 AS WELL  *\n*    AS ANY OTHER SYSOUT OF THE JOB THAT MATCHES THE MESSAGE CLASS OF *\n*    THE JOB. EG. //DDNAME DD SYSOUT=*                                *\n*/ ================================================================= /*\n*                                                                   SJB\n*              SNAPID              LOCATION                         SJB\n*                                                                   SJB\n*              1                   JCLLIST/GETDS    (SSREQ)         SJB\n*              2                   LIBMAIN/NEXTSSRQ (SSREQ)         SJB\n*              3                   LIBMAIN/CLOSBPSO (SSREQ)         SJB\n*              4                   LIBMAIN/ALLOCDS  (DYNALLOC)      SJB\n*              5                   LIBMAIN/LIBINIT  (SYSIN OPEN)    SJB\n*              6                   LIBMAIN/LIBFAIR  (BAD MASTOPN)   SJB\n*              7                   LIBMAIN/LIBFAIR  (BAD MASTMOD)   SJB\n*              8                   LIBMAIN/UNALLOC  (DYNALLOC)      SJB\n*              9                   LIBMAIN/OPENIN   (BAD OPEN PSO)  SJB\n*              10                  LIBMAIN/CLOSEOUT (BAD LIBRARY)   SJB\n*                                                                   SJB\n*                                                                     *\n*/ ================================================================= /*\n*                                                                   SJB\n         PUNCH ' SETCODE AC(1) '                                    SJB\n         PUNCH ' INCLUDE SYSLIB(TSOFAIR) '                          SJB\n         PUNCH ' ORDER JCLLIST,LIBMAIN,SSREQ,TSOFAIR '              SJB\n         PRINT ON,GEN,NODATA                                        SJB\n         PRINT GEN                                                  SJB\n         MACRO                                                      SJB\n&LABEL   LIBWTO &MSG                                                SJB\n         LCLC  &ID                                                  SJB\n&ID      SETC  '&SYSNDX'                                            SJB\n&LABEL   TM    FLAG2,$DEBUG                                         SJB\n         BNO   WTO&ID                                               SJB\n         PUSH  PRINT                                                SJB\n*        WTO   &MSG                                                 SJB\n         PRINT OFF                                                  SJB\n         WTO   &MSG                                                 SJB\n         POP   PRINT                                                SJB\nWTO&ID   DS    0H                                                   SJB\n         MEND                                                       SJB\n         EJECT                                                      SJB\nJCLLIST  CSECT                                                      SJB\n         SPACE 3                                                    SJB\nR0       EQU   0                                                    SJB\nR1       EQU   1                                                    SJB\nR2       EQU   2                                                    SJB\nR3       EQU   3                                                    SJB\nR4       EQU   4                                                    SJB\nR5       EQU   5                                                    SJB\nR6       EQU   6                                                    SJB\nR7       EQU   7                                                    SJB\nR8       EQU   8                                                    SJB\nR9       EQU   9                                                    SJB\nR10      EQU   10                                                   SJB\nR11      EQU   11                                                   SJB\nR12      EQU   12                                                   SJB\nR13      EQU   13                  SAVE AREA POINTER                SJB\nR14      EQU   14                  BASE REG FOR SVC 99 PARAM        SJB\nR15      EQU   15                                                   SJB\n         EJECT                                                      SJB\n         CONNECT LWORK1,WORK1,BASE=R12,CLEAR=YES,PARM=R10           SJB\n         EJECT                                                      SJB\n         L     R1,0(,R10)          GET ADDR OF PARM FIELD           SJB\n         LH    R2,0(R1)            GET LENGTH OF PARM               SJB\n         LTR   R2,R2               ANY PARM                         SJB\n         BZ    NOPARM                                               SJB\n         C     R2,=F'80'           LENGTH > 80                      SJB\n         BL    *+8                 NO                               SJB\n         LA    R2,80               YES                              SJB\n         BCTR  R2,0                -1 FOR EXECUTE                   SJB\n         EX    R2,MVCPARM          MOVE IN PARM FIELDS              SJB\nNOPARM   DS    0H\n         EJECT                                                 06/17/83\n*                                                              06/17/83\n*              SETUP DEFAULTS                                  06/17/83\n*                                                              06/17/83\n         SPACE 3                                               06/17/83\n         MVC   RECLASS,=C'&RECLASS'                            06/17/83\n         MVC   PRODID,=C'&PRODID'                              06/17/83\n         MVC   DUMMYCLS,=C'&DUMMYCLS'                          06/17/83\n         MVC   MSGCLPRT,=C'&MSGCLPRT'                          06/17/83\n         MVC   MSGCLS,=CL8'&MSGCLS'                            06/17/83\n         MVI   MSGCLS99,C' '       BLANK OUT TERMINATE BYTE    06/17/83\n         MVC   DEST,=CL8'&DEST'                                06/17/83\n         MVC   SYSOUTMX,=H'&SYSOUTMX'                          06/17/83\n         SPACE 3                                               06/17/83\n         OPEN  (PARMDCB,(INPUT))                               06/17/83\n         TM    PARMDCB+X'30',X'10' WAS OPEN GOOD?              06/17/83\n         BNO   NOPARMDD            NOPE, THEN NO PARMLIB       06/17/83\n         SPACE 3                                               06/17/83\nGETPARM  DS    0H                                              06/17/83\n         GET   PARMDCB             READ RECORD                 06/17/83\n         LR    R7,R1                                           06/17/83\n         LA    R1,WORK1            @ OF WORK1                  06/17/83\n         L     R15,=A(PARMSCAN)    ADDR OF SCAN ROUTINE        06/17/83\n         BALR  R14,R15             SCAN AND SET PARAMETERS     06/17/83\n         LTR   R15,R15             WAS SCAN GOOD               06/17/83\n         BNZ   RELEASE             NOPE, THEN EXIT             06/17/83\n         B     GETPARM                                         06/17/83\n         SPACE 3                                               06/17/83\nPARMEOD  DS    0H                                              06/17/83\n         CLOSE (PARMDCB)                                       06/17/83\nNOPARMDD DS    0H                                              06/17/83\n         EJECT                                                 06/09/83\n         SYSEVENT DONTSWAP                                     06/09/83\n         SPACE 3                                               06/09/83\n         EXTRACT COMMLPTR,FIELDS=COMM GET ADDR OF ECB AND CIB PTRS  SJB\n         SPACE 3                                                    SJB\n         L     R2,COMMLPTR         GET COMMAND LIST ADDRESS         SJB\n         USING COMMADDR,R2         ESTABLISH ADDRESSABILITY         SJB\n         LM    R9,R10,COMMADDR     GET COMMAND ECB AND CIB POINTERS SJB\n*        ST    R9,CMNDECBP         STORE ECB POINTER IN ECBLIST     SJB\n*        MVI   CMNDECBP,X'80'      INDICATE LAST ECB PTR IN LIST    SJB\n         ST    R9,CMDECBP2         STORE ECB POINTER IN OTHER ECBLISTJB\n         SPACE 1                                                    SJB\n         QEDIT ORIGIN=COMMCIB,BLOCK=(R10) FREE 'START' CIB          SJB\n         QEDIT ORIGIN=COMMCIB,CIBCTR=1    INDICATE 1 CIB TO BE CHAINEDB\n         SPACE 2                                                    SJB\n         USING SSOB,R10            ESTABLISH ADDRESSABILITY         SJB\n         LA    R10,LWASSOB                                          SJB\n*                                                                   SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n*              MISCELLANEOUS INITIALIZATION                         SJB\n*                                                                   SJB\n         MVI   FLAG2,X'00'                                          SJB\n         CLC   =C'DEBUG',PARMCARD  IS IT DEBUG                      SJB\n         BNE   *+8                 NO                               SJB\n         OI    FLAG2,$DEBUG        YES, TURN ON FLAG                SJB\n*                                                                   SJB\n         OI    FLAG2,$TITLE                                         SJB\n*                                                                   SJB\n         MVC   LWADCBRP,RPTDCB     MOVE IN RPT DCB                  SJB\n         LA    R4,LWADCBRP                                          SJB\n         OPEN  ((R4),(OUTPUT))     OPEN IT                          SJB\n*                                                                   SJB\n         LA    R1,MSGCLS           LOAD ADDR. OF BEGINNING MSGCLASS RPD\n         ST    R1,CURMCLAD         LIST AND INIT. ITS SAVE AREA     RPD\n         SPACE 3                                                    SJB\n*                                                                   SJB\nGETDS    DS    0H                                                   SJB\n*                                                                   SJB\n         MVI   FLAG,$FIRST         $FIRST ON, INITILIZE SSOB        SJB\n         MVI   FLAG3,$FRSTPSO      INDICATE WE ARE REQUESTING THE   RPD\n*                                  FIRST SYSOUT OF A NEW JOB        RPD\n*                                                                   SJB\n*              GO DO A SUB-SYSTEM REQUEST FOR NEW JOB               SJB\n*                                                                   SJB\n         L     R15,=A(SSREQ)                                        SJB\n         LA    R1,WORK1            POINT TO MAIN WORK AREA          SJB\n         BALR  R14,R15                                              SJB\n*                                                                   SJB\n*              END OF SUB-SYSTEM REQUEST                            SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n         MVI   SNAPID,1                                             SJB\n         LH    R15,RETCODE         GET IEFSSREQ RETURN CODE         SJB\n         LTR   R15,R15             SUBSYSTEM REQUEST SUCCESSFUL?    SJB\n         BNZ   SNAPIT              NO. TERMINATE WRITER             SJB\n*                                                                   SJB\n*              IF GOOD RC THEN GO  CALL LIBRARIAN                   SJB\n*                                                                   SJB\n         C     R15,SSOBRETN        DID WE GET A DATA SET FROM JES?  SJB\n         BE    CALLLIB             YES. GO CALL LIBRARIAN           SJB\n*                                                                   SJB\n         LA    R1,4                FOR 'COMPARE'                    SJB\n         C     R1,SSOBRETN         ARE WE OUT OF ELIGIBLE DATA SETS?SJB\n         BNE   SNAPIT              NO. SOMETHING WRONG. TERMINATE   SJB\n*                                                                   RPD\n*  ENTERING THIS CODE MEANS THAT NO OUTPUT EXISTED IN JES FOR THE   RPD\n*  MSGCLASS THAT WAS REQUESTED. THE NEXT CLASS IN THE LIST WILL NOW RPD\n*  BE LOOKED AT.                                                    RPD\n*                                                                   RPD\nCHGMSGCL L     R1,CURMCLAD         LOAD ADDRESS OF CURRENT MSGCLASS RPD\n         LA    R1,1(R1)            INCREMENT TO THE NEXT CLASS      RPD\n         ST    R1,CURMCLAD         SAVE THIS ADDRESS                RPD\n         CLI   0(R1),C' '          ARE WE AT THE END OF THE LIST    RPD\n         BNE   SETWAIT             NOT YET                          RPD\n         LA    R1,MSGCLS           LOAD ADDR. OF BEGINNING OF LIST  RPD\n         ST    R1,CURMCLAD         SAVE THIS ADDRESS                RPD\n*                                                                   SJB\nSETWAIT  DS    0H                                                   SJB\n         SPACE 1                                                    SJB\n*        MODESET KEY=ZERO          GET OUT OF KEY ZERO         06/09/83\n*                                                                   SJB\nWAIT     DS    0H                                                   SJB\n         STIMER REAL,POSTWAIT,BINTVL=WTIME TO KILL SOME TIME        SJB\n         SPACE 1                                                    SJB\n         MVI   STIMRECB,X'00'      CLEAR ECB                        SJB\n         L     R2,ECBL2PTR         POINT TO SECOND ECBLIST          SJB\n         SPACE 1                                                    SJB\n         WAIT  1,ECBLIST=(R2),LONG=YES WAIT FOR WORK, CMND, STIMER EXIT\n         SPACE 1                                                    SJB\n*                                                                   SJB\n         TM    STIMRECB,X'40'      WERE WE POSTED BY STIMER EXIT?   SJB\n         LA    R3,GETDS            PREPARE TO REQUEST A DATA SET IF YES\n         BO    RESETPK             YES. GET OUT OF KEY 0 AND CONTINUEJB\n         SPACE 1                                                    SJB\n         TTIMER CANCEL             CANCEL REMAINDER OF TIMER INTERVALJB\n         SPACE 1                                                    SJB\nCHKCMND  L     R2,CMDECBP2         GET COMMAND ECB ADDRESS          SJB\n         TM    0(R2),X'50'         DID OPERATOR ENTER A COMMAND?    SJB\n*        MVI   0(R2),X'00'         CLEAR ECB IN ANY EVENT      06/09/83\n         LA    R3,STOPWTR          PREPARE TO TERMINATE IF STOP CMNDSJB\n         BO    RESETPK             IT IS. GET OUT OF KEY 0 AND HALT SJB\n         LA    R3,FREECIB          PREPARE TO FREE CIB IF MODIFY CMNDJB\n         BM    RESETPK             FREE CIB AND GO REQUEST A DATA SETJB\n         B     WAIT                GO WAIT FOR CMND OR END OF INTERVALB\n         SPACE 1                                                    SJB\nFREECIB  L     R2,COMMLPTR         GET COMMAND LIST ADDRESS         SJB\n         L     R3,COMMCIB          GET CIB POINTER                  SJB\n         EJECT ,                                               06/17/83\n*                                                              06/17/83\n*              CHECK MODIFY FOR KEYWORDS                       06/17/83\n*                                                              06/17/83\n         USING CIB,R3                                          06/17/83\n         CLI   CIBVERB,CIBMODFY    WAS THIS A MODIFY COMMAND   06/17/83\n         BNE   NOTMODFY                                        06/17/83\n         LA    R5,CIBDATA          GET CIB DATA ADDR           06/17/83\n         LR    R4,R5               SAVE BEGINNING ADDR OF DATA 06/17/83\n         SR    R6,R6                                           06/17/83\n         ICM   R6,3,CIBDATLN       GET LENGTH                  06/17/83\n         BZ    MODBAD              NOPE , LEAVE                06/17/83\n         AR    R6,R5               POINT 1 PASSED END OF DATA  06/17/83\n         CLI   0(R5),C' '          1 CHAR BLANK                06/17/83\n         BE    MODBAD              YES, ISSUE WTO              06/17/83\n         BCTR  R6,0                POINT TO LAST CHAR          06/17/83\n         CLI   0(R6),C' '          FIND LAST NON-BLANK CHAR    06/17/83\n         BE    *-6                 STILL BLANK                 06/17/83\nMODLP1   DS    0H                                              06/17/83\n         LA    R5,1(,R5)           GET NEXT CHAR               06/17/83\n         CR    R5,R6               AT THE END YET              06/17/83\n         BH    MODBLK              YES,                        06/17/83\n         CLI   0(R5),C','          KEYWORD DELIM               06/17/83\n         BNE   MODLP1              NOPE,                       06/17/83\nMODBLK   LR    R1,R5                                           06/17/83\n         SR    R1,R4               GET LENGTH                  06/17/83\n         BNP   MODBAD              BIF ZERO                    06/17/83\n         MVC   LWACARD,=CL80' '    BLANK OUT CARD AREA         06/17/83\n         CH    R1,CIBDATLN         IS LENGTH > MAXLEN          06/17/83\n         BNH   *+8                 NOPE                        06/17/83\n         LH    R1,CIBDATLN         YES, SET TO MAXLEN          06/17/83\n         BCTR  R1,0                -1                          06/17/83\n         MVC   LWACARD(*-*),0(R4)                              06/17/83\n         EX    R1,*-6              MOVE IN CARD                06/17/83\n         LA    R7,LWACARD          ADDR OF CARD                06/17/83\n         LA    R1,WORK1                                        06/17/83\n         L     R15,=A(PARMSCAN)    GO SCAN PARM                06/17/83\n         BALR  R14,R15             CALL PARMSCAN               06/17/83\n         LTR   R15,R15             WAS IT OK                   06/17/83\n         BNZ   MODBAD              NOPE                        06/17/83\n         LA    R4,1(,R5)           SAVE NEW BEGINNING ADDR     06/17/83\n         CR    R5,R6               AT THE END YET              06/17/83\n         BH    MODEND              YES,                        06/17/83\n         B     MODLP1                                          06/17/83\nMODBAD   DS    0H                                              06/17/83\n         WTO   'LIBSPOOL: MODIFY PARAMETER INCORRECT',         06/17/83*\n               ROUTCDE=2                                       06/17/83\nMODEND   DS    0H                                              06/17/83\nNOTMODFY DS    0H                                              06/17/83\n         SPACE 1                                                    SJB\n         QEDIT ORIGIN=COMMCIB,BLOCK=(R3) FREE CIB                   SJB\n         QEDIT ORIGIN=COMMCIB,CIBCTR=1   INDICATE 1 CIB TO BE CHAINEDJB\n         SPACE 1                                                    SJB\n         B     GETDS               GO REQUEST A DATA SET FROM JES   SJB\n         SPACE 2                                                    SJB\nRESETPK  DS    0H                                                   SJB\n*        MODESET KEY=NZERO         GET OUT OF KEY ZERO         06/09/83\n         SPACE 1                                                    SJB\n         BR    R3                  CONTINUE AS DETERMINED EARLIER   SJB\n         DROP  R2                                                   SJB\n         EJECT                                                      SJB\nCALLLIB  DS    0H                                                   SJB\n         LIBWTO 'ENTERED CALLLIB'                                   SJB\n*                                                                   SJB\n         LA    R1,WORK1            PASS WORK AREA ADDR              SJB\n         L     R15,=A(LIBMAIN)                                      SJB\n         BALR  14,15               CALL LIBRARIAN                   SJB\n*                                                                   SJB\n*              SNAPID IS SET IN LIBMAIN ROUTINE                     SJB\n*                                                                   SJB\n         LTR   R15,R15             WAS CALL GOOD?                   SJB\n         BNZ   SNAPIT              NO GO SNAP                       SJB\n*                                                                   SJB\n         LIBWTO 'EXIT    CALLLIB'                                   SJB\n*                                                                   RPD\n         TM    FLAG3,$FRSTPSO      CHECK IF JOB WAS PROCESSED       RPD\n         BO    CHGMSGCL            NO. GO WAIT THEN CHANGE MSGCLASS RPD\n*                                                                   RPD\n         B     GETDS               NO. GO WAIT FOR WORK OR OPER CMNDSJB\n         EJECT                                                      SJB\nSTOPWTR  OI    SSSOFLG2,SSSOCTRL   INDICATE WRITER TERMINATING      SJB\n         SPACE 1                                                    SJB\n         MODESET MODE=SUP          GET INTO SUPERVISOR STATE        SJB\n         SPACE 1                                                    SJB\n         LA    R1,LWASSPRM         LOAD ADDRESS OF SSOB             SJB\n         SPACE 1                                                    SJB\n         IEFSSREQ                  TELL SUBSYSTEM WE ARE SHUTTING DOWNB\n         SPACE 1                                                    SJB\n         MODESET MODE=PROB         GET OUT OF SUPERVISOR STATE      SJB\n         SPACE 2                                                    SJB\nENDWTR   WTO 'LIBSPOOL:  JCLLIST IS SHUTTING DOWN',ROUTCDE=2,DESC=2 SJB\n         SYSEVENT OKSWAP                                       06/09/83\n         SPACE 1                                                    SJB\n         B     MAINRET                                              SJB\nMAINRET  DS    0H                                                   SJB\n         LA    R4,LWADCBRP         ADDR OR REPORT DCB               SJB\n         TM    X'30'(R4),X'10'     WAS REPORT EVER OPENED      06/17/83\n         BZ    MAINRET1                                        06/17/83\n         CLOSE ((R4))              CLOSE REPORT FILE                SJB\n         FREEPOOL ((R4))                                            RPD\nMAINRET1 DS    0H                                              06/17/83\n         LH    R15,RETCODE         RELOAD RETCODE                   SJB\nRELEASE  RELEASE LWORK1,RC=(15)                                     SJB\n         SPACE 2                                                    SJB\nSNAPIT   DS    0H                                                   SJB\n         LA    R4,SNAPDCB                                           SJB\n         OPEN  ((R4),(OUTPUT))     FOR SNAP, FOLLOWING              SJB\n         SPACE 1                                                    SJB\n         LA    R2,0(,R13)                                           SJB\n         LA    R3,LWORK1(,R13)                                      SJB\n         SR    R5,R5                                                SJB\n         IC    R5,SNAPID                                            SJB\n         SNAP  DCB=SNAPDCB,ID=(5),PDATA=ALL,                        SJBX\n               STORAGE=((2),(3))                                    SJB\n         SPACE 1                                                    SJB\n         B     STOPWTR             TERMINATE WRITER                 SJB\n         EJECT                                                      SJB\n*                                                              06/17/83\n*        THIS MUST BE THE LAST SUBROUTINE IN THIS CSECT        06/17/83\n*                                                              06/17/83\n         PUSH  USING               SAVE BASE REGISTER INFORMATION   SJB\nPOSTWAIT EQU   *                   STIMER EXIT                      SJB\n         USING POSTWAIT,R15        ESTABLISH ADDRESSABILITY         SJB\n         STM   R14,R12,12(R13)     SAVE REGISTERS                   SJB\n         SPACE 1                                                    SJB\n         POST  STIMRECB            INDICATE END OF INTERVAL         SJB\n         SPACE 1                                                    SJB\n         LM    R14,R12,12(R13)     RESTORE REGISTERS                SJB\n         BR    R14                 RETURN TO SYSTEM                 SJB\n         SPACE 1                                                    SJB\n         POP   USING               RESTORE PREVIOUS BASE REG STATUS SJB\n         EJECT                                                      SJB\nMVCPARM  MVC   PARMCARD(*-*),2(R1) MOVE IN PARM FIELD               SJB\nCOMMLPTR DC    A(0)                PTR FROM EXTRACT (TO ECB & CIB PTRS)\n*                                                                   SJB\nCMNDECBP DC    X'80',AL3(0)        PTR TO ECB POSTED WHEN CMD ISSUE SJB\n*                                                                   SJB\nECBL2PTR DC    A(CMDECBP2)         PTR TO SECOND ECBLIST            SJB\nCMDECBP2 DC    A(0)                PTR TO COMMAND ECB               SJB\nTIMRECBP DC    X'80',AL3(STIMRECB) PTR TO ECB POSTED BY STIMER EXIT SJB\nSTIMRECB DC    F'0'                ECB POSTED BY STIMER EXIT        SJB\nWTIME    DC    F'1000'             10 SECOND INTERVAL FOR STIMER    RPD\nBLANKS   DC    CL80' '             BLANKS                           SJB\n*\n*\n         LTORG                                                      SJB\n         EJECT                                                      SJB\n         PRINT NOGEN                                           06/17/83\nSNAPDCB  DCB   DDNAME=SNAP,DSORG=PS,MACRF=W,                        SJB*\n               RECFM=VBA,LRECL=125,BLKSIZE=882                      SJB\n         SPACE 3                                                    SJB\nRPTDCB   DCB   DDNAME=REPORT,DSORG=PS,MACRF=PM,                     SJB*\n               RECFM=FB,LRECL=90,BLKSIZE=6210                       SJB\n         DS    0F                                                   SJB\nRPTDCBL  EQU   *-RPTDCB                                             SJB\n         SPACE 3                                               06/17/83\nPARMDCB  DCB   DDNAME=PARMLIB,DSORG=PS,MACRF=GL,               06/17/83*\n               RECFM=FB,LRECL=80,EODAD=PARMEOD                 06/17/83\n         PRINT GEN                                             06/17/83\n         DROP  R12                 DROP PROGRAM BASE REGISTERS      SJB\n         EJECT                                                 06/17/83\nPARMSCAN CSECT                                                 06/17/83\n*                                                              06/17/83\n*        SCANS AN 80 BYTE RECORD FOR A KEYWORD IN 'PRMSTBL'    06/17/83\n*        AND STORES THE VALUE                                  06/17/83\n*                                                              06/17/83\n*        INPUT  - R1 POINTS TO WORK1                           06/17/83\n*        INPUT  - R7 POINTS TO THE 80 BYTE RECORD              06/17/83\n*        OUTPUT - R15 = 0 FOR KEYWORD OK                       06/17/83\n*                     = 4 FOR KEYWORD NOT OK                   06/17/83\n*                                                              06/17/83\n         CONNECT LWORK2,WORK2,BASE=(R12),CLEAR=YES,PARM=R11    06/17/83\n         USING WORK1,R11           GET ADDR. TO 1 SAVEAREA     06/17/83\n         MVC   PRMSWTO9+8+9(30),0(R7)                          06/17/83\nPRMSWTO9 WTO   'LIBSPOOL:                                   ', 06/17/83*\n               ROUTCDE=2                                       06/17/83\n         ORG   *-2                                             06/17/83\n         NOPR  R0                                              06/17/83\n         CLI   0(R7),C'*'          IS IT A COMMENT             06/17/83\n         BE    PRMSRET0            YES, THEN SKIP RECORD       06/17/83\n         CLC   =C'LIST ',0(R7)     IS IT A LIST COMMAND        06/17/83\n         BE    PRMSLIST            YES, GO PROCESS             06/17/83\n         LA    R8,PRMSTBL          ADDR. OF PRMS TABLE         06/17/83\nPRMSNEXT DS    0H                                              06/17/83\n         SR    R1,R1                                           06/17/83\n         IC    R1,0(,R8)           GET LENGTH OF KEYWORD       06/17/83\n         BCTR  R1,0                -1 FOR CLC                  06/17/83\n         CLC   0(*-*,R7),1(R8)     KEYWORD MATCH               06/17/83\n         EX    R1,*-6              DO FULL CLC                 06/17/83\n         BE    PRMSATCH            FOUND KEYWORD               06/17/83\n         LA    R8,PRMSTBLL(,R8)    NEXT ENTRY                  06/17/83\n         C     R8,=A(PRMSTBLE)     ARE WE AT THE END           06/17/83\n         BNL   PRMSERR2            YES, THEN ERROR             06/17/83\n         B     PRMSNEXT                                        06/17/83\nPRMSATCH DS    0H                                              06/17/83\n         LA    R7,1(R1,R7)         POINT TO KEYWORD OPERAND    06/17/83\n         SR    R1,R1               ZERO IC REG                 06/17/83\n         IC    R1,11(,R8)          GET MAX OPERAND LENGTH      06/17/83\n         LA    R5,0(R1,R7)         POINT TO 1 PASSED MAX       06/17/83\nPRMSTCH1 DS    0H                                              06/17/83\n         CLI   0(R5),C' '          FOUND END YET               06/17/83\n         BNE   PRMSTCH2            YES,                        06/17/83\n         BCTR  R5,0                BACK UP 1                   06/17/83\n         B     PRMSTCH1            ONE MORE TIME               06/17/83\nPRMSTCH2 DS    0H                                              06/17/83\n         SR    R5,R7               GET OPERAND LENGTH          06/17/83\n         LA    R5,1(,R5)           +1 FOR PROPER LENGTH        06/17/83\n         CR    R5,R1               IS OPERAND > MAX            06/17/83\n         BH    PRMSERR1            OPERAND > MAX               06/17/83\n         ICM   R2,15,12(R8)        GET OFFSET INTO WORK1       06/17/83\n         LA    R2,WORK1(R2)        GET ADDR. WHERE TO PUT DATA 06/17/83\n         CLI   10(R8),C'C'         IS THIS A CHAR. OPERAND     06/17/83\n         BNE   PRMSNUM             NOPE, MUST BE NUMERIC       06/17/83\n*                                                              06/17/83\n*              ZERO OUT 'TO' FIELD                             06/17/83\n*                                                              06/17/83\n         SR    R1,R1               ZERO IC REG                 06/17/83\n         IC    R1,11(,R8)          GET OPERAND MAX LENGTH      06/17/83\n         BCTR  R1,0                -1 FOR EXECUTE              06/17/83\n         MVC   0(*-*,R2),=CL8' '   BLANK OUT DATA AREA         06/17/83\n         EX    R1,*-6              DO IT ALL                   06/17/83\n         LTR   R5,R5               TEST LENGTH                 06/17/83\n         BZ    PRMSRET0            BIF ZERO, NO OPERAND        06/17/83\n         BCTR  R5,0                OPERAND LENGTH -1           06/17/83\n         MVC   0(*-*,R2),0(R7)                                 06/17/83\n         EX    R5,*-6              MOVE IN OPERAND             06/17/83\n         B     PRMSRET0            RETURN                      06/17/83\n         SPACE 3                                               06/17/83\nPRMSNUM  DS    0H                                              06/17/83\n         SR    R1,R1               PRESET STCM VALUE TO 0      06/17/83\n         LTR   R5,R5               TEST LENGTH                 06/17/83\n         BZ    PRMSNOPK            BIF ZERO, NO OPERAND        06/17/83\n         BCTR  R5,0                -1                          06/17/83\nPRMSPACK PACK  LWAPACK(8),0(*-*,R7) REMOVE ZONES               06/17/83\n         EX    R5,PRMSPACK         EXECUTE IT                  06/17/83\n         OI    LWAPACK+7,X'0F'     ENSURE SIGN NIBBLE          06/17/83\n         CVB   R1,LWAPACK          CONVERT TO BINARY           06/17/83\nPRMSNOPK CLI   10(R8),C'H'         IS IT A HALF WORD           06/17/83\n         BE    PRMSSTH                                         06/17/83\n         STCM  R1,15,0(R2)         STORE IN FULL WORD          06/17/83\n         B     PRMSRET0            RETURN                      06/17/83\nPRMSSTH  DS    0H                                              06/17/83\n         STCM  R1,03,0(R2)         STORE IN HALF WORD          06/17/83\n         B     PRMSRET0            NEXT RECORD                 06/17/83\n         SPACE 3                                               06/17/83\n*                                                              06/17/83\n*              LIST ALL KEYWORDS                               06/17/83\n*                                                              06/17/83\nPRMSLIST DS    0H                                              06/17/83\n         LA    R7,PRMSTBL+1                                    06/17/83\n         B     *+8                                             06/17/83\nPRMSLST2 DS    0H                                              06/17/83\n         LA    R7,PRMSTBLL(R7)                                 06/17/83\n         C     R7,=A(PRMSTBLE)     AT THE END YET              06/17/83\n         BNL   PRMSLST9            YES, EXIT                   06/17/83\n         LA    R1,WORK1            POINT TO FIRST WORK AREA    06/17/83\n         L     R15,=A(PARMLIST)    PARMLIST ENTRY POINT        06/17/83\n         BALR  R14,R15             GO LIST IT                  06/17/83\n         B     PRMSLST2                                        06/17/83\nPRMSLST9 DS    0H                                              06/17/83\n         SR    R15,R15                                         06/17/83\n         B     PRMSRET                                         06/17/83\n         SPACE 3                                               06/17/83\nPRMSRET0 DS    0H                                              06/17/83\n         LA    R7,1(,R8)           POINT TO CURRENT ENTRY      06/17/83\n         LA    R1,WORK1            POINT TO FIRST WORK AREA    06/17/83\n         L     R15,=A(PARMLIST)    PARMLIST ENTRY POINT        06/17/83\n         BALR  R14,R15             GO LIST IT                  06/17/83\n         SR    R15,R15                                         06/17/83\n         B     PRMSRET                                         06/17/83\nPRMSRET4 LA    R15,4                                           06/17/83\n         B     PRMSRET                                         06/17/83\n         SPACE 3                                               06/17/83\nPRMSERR1 DS    0H                                              06/17/83\n         MVC   PRMSWTO1+8+9(8),0(R7)                           06/17/83\n         PRINT NOGEN                                           06/17/83\nPRMSWTO1 WTO   'LIBSPOOL:XXXXXXX  KEYWORD OPERAND TOO LONG',   06/17/83*\n               ROUTCDE=2,DESC=2                                06/17/83\n         B     PRMSRET4            RETURN                      06/17/83\nPRMSERR2 DS    0H                                              06/17/83\n         MVC   PRMSWTO2+8+9(8),0(R7)                           06/17/83\nPRMSWTO2 WTO   'LIBSPOOL:XXXXXXXX KEYWORD NOT FOUND',          06/17/83*\n               ROUTCDE=2,DESC=2                                06/17/83\n         B     PRMSRET4            RETURN                      06/17/83\n         SPACE 3                                               06/17/83\nPRMSRET  DS    0H                                              06/17/83\n         RELEASE LWORK2,RC=(R15)                               06/17/83\n         SPACE 3                                               06/17/83\n*                                                              06/17/83\n*              KEYWORKLEN,KEYWORD,OPERAND-TYPE,MAX-LEN,OFFSET  06/17/83\n*                 AL1    , CL9   ,    CL1     ,  AL1  , AL4    06/17/83\n*                                                              06/17/83\nPRMSTBL  DC    AL1(8),CL9'RECLASS= ',CL1'C',AL1(1)             06/17/83\n         DC    AL4(RECLASS-WORK1)                              06/17/83\nPRMSTBLL EQU   *-PRMSTBL                                       06/17/83\n         DC    AL1(7),CL9'PRODID=  ',CL1'C',AL1(1)             06/17/83\n         DC    AL4(PRODID-WORK1)                               06/17/83\n         DC    AL1(9),CL9'DUMMYCLS=',CL1'C',AL1(1)             06/17/83\n         DC    AL4(DUMMYCLS-WORK1)                             06/17/83\n         DC    AL1(9),CL9'MSGCLPRT=',CL1'C',AL1(1)             06/17/83\n         DC    AL4(MSGCLPRT-WORK1)                             06/17/83\n         DC    AL1(7),CL9'MSGCLS=  ',CL1'C',AL1(8)             06/17/83\n         DC    AL4(MSGCLS-WORK1)                               06/17/83\n         DC    AL1(5),CL9'DEST=    ',CL1'C',AL1(8)             06/17/83\n         DC    AL4(DEST-WORK1)                                 06/17/83\n         DC    AL1(9),CL9'SYSOUTMX=',CL1'H',AL1(4)             06/17/83\n         DC    AL4(SYSOUTMX-WORK1)                             06/17/83\nPRMSTBLE EQU   *                                               06/17/83\n         LTORG ,                                               06/17/83\n         DROP  R12                 DROP PROGRAM BASE REGISTERS 06/17/83\n         EJECT ,                                               06/17/83\nPARMLIST CSECT                                                 06/17/83\n*                                                              06/17/83\n*        SUBROUTINE TO LIST INITILIZATION PARAMETERS.          06/17/83\n*                                                              06/17/83\n*        INPUT R7 POINTS TO KEYWORD TO LIST                    06/17/83\n*                                                              06/17/83\n         CONNECT LWORK2,WORK2,BASE=(R12),CLEAR=YES,PARM=R11    06/17/83\n         USING WORK1,R11           GET ADDR. TO 1 SAVEAREA     06/17/83\n         L     R6,=A(PRMSTBL)                                  06/17/83\nPRML00   SR    R5,R5               ZERO IC REG                 06/17/83\n         IC    R5,0(R6)            PICK UP CLC LENGTH          06/17/83\n         BCTR  R5,0                -1                          06/17/83\n         CLC   1(*-*,R6),0(R7)     DUMMY CLC                   06/17/83\n         EX    R5,*-6              DO FULL LENGTH              06/17/83\n         BE    PRML01              MATCH FOUND                 06/17/83\n         LA    R6,PRMSTBLL(,R6)    POINT TO NEXT               06/17/83\n         C     R6,=A(PRMSTBLE)     AT THE END YET              06/17/83\n         BNL   PRML90              YES, EXIT                   06/17/83\n         B     PRML00                                          06/17/83\nPRML01   DS    0H                                              06/17/83\n         LA    R8,PRMLWTO1+8+9                                 06/17/83\n         MVC   0(30,R8),=CL30' '                               06/17/83\n         MVC   0(*-*,R8),0(R7)     MOVE IN KEYWORD             06/17/83\n         EX    R5,*-6              DO IT ALL                   06/17/83\n         LA    R8,1(R5,R8)         POINT TO NEXT ENTRY         06/17/83\n         SPACE 1                                               06/17/83\n         ICM   R2,15,12(R6)        GET OFFSET                  06/17/83\n         LA    R2,WORK1(R2)        GET ADDRESS                 06/17/83\n         SPACE 1                                               06/17/83\n         CLI   10(R6),C'C'         IS THIS A CHAR VALUE        06/17/83\n         BNE   PRMLNUM             NOPE, MUST BE NUMERIC       06/17/83\n         SPACE 1                                               06/17/83\n         SR    R5,R5               ZERO IC REG                 06/17/83\n         IC    R5,11(,R6)          GET MAX LENGTH              06/17/83\n         BCTR  R5,0                                            06/17/83\n         MVC   0(*-*,R8),0(R2)     MOVE IN OPERAND             06/17/83\n         EX    R5,*-6              DO IT ALL                   06/17/83\n         B     PRMLWTO1            ISSUE WTO                   06/17/83\n         SPACE 3                                               06/17/83\nPRMLNUM  DS    0H                                              06/17/83\n         ICM   R1,15,0(R2)         ASSUME FULL WORD            06/17/83\n         CLI   10(R6),C'H'         IS IT HALF WORD             06/17/83\n         BNE   PRMLNUM1            NOPE,                       06/17/83\n         SR    R1,R1               ZERO ICM REG                06/17/83\n         ICM   R1,03,0(R2)         GET HALF WORD               06/17/83\nPRMLNUM1 DS    0H                                              06/17/83\n         CVD   R1,LWAPACK                                      06/17/83\n         OI    LWAPACK+7,X'0F'                                 06/17/83\n         UNPK  0(8,R8),LWAPACK+2(6) UNPACK IT                  06/17/83\n         B     PRMLWTO1            ISSUE WTO                   06/17/83\nPRMLWTO1 WTO   'LIBSPOOL:                                   ', 06/17/83*\n               ROUTCDE=2                                       06/17/83\nPRML90   DS    0H                                              06/17/83\n         RELEASE LWORK2,RC=0                                   06/17/83\n         LTORG ,                                               06/17/83\n         DROP  R12                                             06/17/83\n         EJECT ,                                               06/17/83\n*                                                                   SJB\n*        LIBMAIN - DOES PROCESSING OF ALL DATA FOR 1 JOB ONLY       SJB\n*                                                                   SJB\n*        REG   INPUT               USAGE                            SJB\n*                                                                   SJB\n*        R1    PARM REG            PARM/WORK REG                    SJB\n*        R2    N/A                 LIBPUT RECORD ADDR               SJB\n*        R3    N/A                 LENGTH OF INPUT RECORD           SJB\n*        R4    N/A                 WORK REG                         SJB\n*        R5    N/A                 ADDR OF INPUT RECORD             SJB\n*        R6    N/A                 BASE REG #2                      SJB\n*        R7    N/A                 BAL  REG FOR LIBPUT              SJB\n*        R8    N/A                 BAL  REG FOR READNEXT            SJB\n*        R9    N/A                 BAL  REG FOR OTHER ROUTINES      SJB\n*        R10   N/A                 BASE REG FOR SSOB                SJB\n*        R11   N/A                 BASE REG FOR WORK1 DSECT         SJB\n*        R12   N/A                 BASE REG #1                      SJB\n*        R13   N/A                 SAVE AREA REG                    SJB\n*        R14   RETURN ADDR         BALR REG                         SJB\n*        R15   ENTRY POINT         BALR REG/ RETURN CODE            SJB\n         SPACE 3                                                    SJB\nLIBMAIN  CSECT                                                      SJB\n         CONNECT LWORK2,WORK2,BASE=(R12,R6),CLEAR=YES,PARM=R11      SJB\n         EJECT                                                      SJB\n         USING SSOB,R10            ESTABLISH ADDRESSABILITY         SJB\n         USING WORK1,R11           GET ADDR. TO 1 SAVEAREA          SJB\n         LA    R10,LWASSOB         ADDR OF SSOB                     SJB\n         LIBWTO 'ENTERED LIBMAIN'                                   SJB\n*                                                                   SJB\n         MVC   RECLASS1(1),RECLASS                             06/17/83\n         MVC   DUMMYCL1(1),DUMMYCLS                            06/17/83\n         TM    FLAG2,$TITLE        IS TITLE REQUIRED NOW            SJB\n         BNO   NOTITLE             NO,                              SJB\n         LA    R2,TITLE1                                            SJB\n         BAL   R7,RPTPUT                                            SJB\n         LA    R2,TITLE2                                            SJB\n         BAL   R7,RPTPUT                                            SJB\n         NI    FLAG2,255-$TITLE    TURN OFF TITLE FLAG              SJB\nNOTITLE  DS    0H                                                   SJB\n*                                                                   RPD\n         CLC   SPACEPID(1),PRODID  IS  PRODID = SPACE          06/17/83\n         BE    INITLOOP            YES, DO NOT RESTRICT USER ID     RPD\n         CLC   SSSOUSER(1),PRODID  IS FIRST CHAR. OF USERID=P  06/17/83\n         BE    INITLOOP            YES, PROCESS THIS JOB            RPD\n         OI    FLAG,$CLOSING       TURN ON CLOSING FLAG             RPD\n         MVI   FLAG3,X'00'         TURN OFF FIRST REQ. FLAG         RPD\n         BAL   R9,ALLOCDS          GO ALLOCATE IT                   RPD\n         BAL   R9,FREEREQD         FREE SYSOUT AND REQ TO DUMMY     RPD\n         B     CLOSNRPT            GO DELETE ALL THE OTHER SYSOUTS  RPD\n*                                  FOR THIS JOB.                    RPD\n*                                                                   SJB\n         EJECT                                                      SJB\nINITLOOP DS    0H                                                   SJB\n         MVI   FLAG4,X'00'         TURN OFF PRINTING REASON FLAG4   RPD\n         MVI   FLAG5,X'00'         TURN OFF PRINTING REASON FLAG5   RPD\n         XC    BADCMES+18(4),BADCMES+18 CLEAR MAX. COND. CODE FIELD RPD\n         BAL   R9,LIBINIT          INIT, SINCE THIS IS FIRST TIME   SJB\nALLOCLOP DS    0H                                                   SJB\n         BAL   R9,ALLOCDS          GO ALLOCATE IT                   SJB\n*                                  FOR THIS JOB AND SET R8          SJB\n         TM    FLAG3,$FRSTPSO      DID WE GET JCL FOR THIS JOB      RPD\n         BNO   OPENLOOP            YES,OPEN AND LOOK AT THE RECORDS RPD\n         BAL   R9,FREEKEEP         FREE THIS SYSOUT                 RPD\n         MVC   LWACLOSE,CLOSE                                       RPD\n         CLOSE (LWADCBOT),MF=(E,LWACLOSE)  CLOSE SYSIN FILE         RPD\n         FREEPOOL LWADCBOT                                          RPD\n         RELEASE LWORK2,RC=0       RETURN WITH SWITCH TO            RPD\n*                                  $FRSTPSO ON TO SHOW WE SHOULD    RPD\n*                                  WAIT THEN GET NEXT MSGCLASS      RPD\nOPENLOOP DS    0H                                                   SJB\n         BAL   R9,OPENIN           OPEN INPUT FILE                  SJB\n*                                                                   SJB\nREADNEXT GET   LWADCBIN            GET RECORD ADDR                  SJB\n         LR    R5,R1               SAVE INPUT RECORD ADDR           SJB\n*                                                                   SJB\n         LA    R1,LWADCBIN                                          SJB\n         USING IHADCB,R1                                            SJB\n         LH    R3,DCBLRECL         GET INPUT RECORD LENGTH          SJB\n         TM    DCBRECFM,DCBRECU    IS THIS RECFM=U                  SJB\n         BO    READNXT1            YES,THEN SKIP                    SJB\n         TM    DCBRECFM,DCBRECV    IS THIS RECFM=V                  SJB\n         BZ    READNXT1            NOPE, THEN SKIP                  SJB\n         DROP  R1                                                   SJB\n         LA    R1,4                LENGTH OF RDW                    SJB\n         SR    R3,R1               SUBTRACT FROM LRECL              SJB\n         LA    R5,4(,R5)           REPOSITION PAST RDW              SJB\nREADNXT1 DS    0H                                                   SJB\n*                                                                   SJB\n         LA    R2,CARDOUT          GET CARD OUTPUT ADDR             SJB\n         MVC   CARDOUT,BLANKS2                                      SJB\n*              R8 IS INITIALLY SET IN ALLOCDS FOR PSO# 2,3,4        SJB\n*              AND THE CHECK ROUTINE SETS IT ALSO                   SJB\n         BR    R8                  GO TO CHECK ROUTINE              SJB\n*              AND WRITE THE OUTPUT RECORDS                         SJB\n         EJECT                                                      SJB\nEOF      DS    0H                                                   SJB\n         LIBWTO 'ENTERED EOF     '                                  SJB\n*                                                                   SJB\n         MVC   LWACLOSE,CLOSE                                       SJB\n         LA    R4,LWADCBIN                                          SJB\n         CLOSE ((R4)),MF=(E,LWACLOSE) CLOSE INPUT FILE              SJB\n         FREEPOOL ((R4))                                            RPD\n         SPACE 2                                                    SJB\n*                                                                   SJB\n         BAL   R9,FREEKEEP         FREE KEEP PSO                    SJB\n*                                                                   SJB\n*              GET NEXT PSO#                                        SJB\n*                                                                   SJB\n         B     NEXTSSRQ            GET NEXT PSO FOR THIS JOB        SJB\n*                                                                   SJB\nNEXTSSRQ DS    0H                                                   SJB\n         LIBWTO 'ENTERED NEXTSSRQ'                                  SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n*                                                                   SJB\n*              GO DO A SUB-SYSTEM REQUEST                           SJB\n*                                                                   SJB\n         L     R15,=A(SSREQ)                                        SJB\n         LA    R1,WORK1            POINT TO MAIN WORK AREA          SJB\n         BALR  R14,R15                                              SJB\n*                                                                   SJB\n*              END OF SUB-SYSTEM REQUEST                            SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n         MVI   SNAPID,2                                             SJB\n         LH    R15,RETCODE         GET IEFSSREQ RETURN CODE         SJB\n         LTR   R15,R15             SUBSYSTEM REQUEST SUCCESSFUL?    SJB\n         BNZ   SNAPIT2             NO. TERMINATE WRITER             SJB\n*                                                                   SJB\n         C     R15,SSOBRETN        DID WE GET A DATA SET FROM JES?  SJB\n         BE    ALLOCLOP            YES. GO ALLOC IT                 SJB\n*                                                                   SJB\n         LA    R1,4                FOR 'COMPARE'                    SJB\n         C     R1,SSOBRETN         ARE WE OUT OF ELIGIBLE DATA SETS?SJB\n         BNE   SNAPIT2             NO. SOMETHING WRONG. TERMINATE   SJB\n         B     NOPSOLFT            NO PSO DSN LEFT                  SJB\n         SPACE 3                                                    SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n*                                                                   SJB\nNOPSOLFT DS    0H                                                   SJB\n         LIBWTO 'ENTERED NOPSOLFT'                                  SJB\n         CLC   DSFLAGS,ALLDS       DID WE PROCESS 2,3,4 PSO         SJB\n         BE    CLOSEOUT            YES, THEN CLOSEOUT               SJB\n         OI    FLAG,$PRINT         NOPE, THEN TURN ON PRINT FLAG    SJB\n         B     CLOSEOUT                                             SJB\nCLOSEOUT DS    0H                                                   SJB\n         LIBWTO 'ENTERED CLOSEOUT'                                  SJB\n         MVC   DSCERROR,DASHES     ASSUME NO PRINT ERROR            RPD\n         TM    FLAG,$PRINT         SEE IF NOT ALLDS OR JCL ERROR    SJB\n         BO    SHOWPRTD            PRINTED IF ON-GO SHOW PRINTED    RPD\n         TM    FLAG5,$FNDCCMS      CHK IF COND. CODE MESSAGE FOUND  RPD\n         BNO   SHOWPRTD            NOT ON IF COND CODE NOT FOUND    RPD\n         B     CLOSNERR            NOT PRINTED                      RPD\nSHOWPRTD MVC   DSCERROR,=C'PRINTED' MOVE IN ERROR FLAG              SJB\nCLOSNERR LA    R2,SELCARD          -SEL  CARD                       SJB\n         BAL   R7,LIBPUT           PUT IT OUT                       SJB\n         LA    R2,DSCCARD          -DESC CARD                       SJB\n         BAL   R7,LIBPUT           PUT IT OUT                       SJB\n         LA    R2,ENDCARD          -END  CARD                       SJB\n         BAL   R7,LIBPUT           PUT IT OUT                       SJB\n*                                                                   SJB\n         MVC   LWACLOSE,CLOSE                                       SJB\n         LA    R4,LWADCBOT                                          SJB\n         CLOSE ((R4)),MF=(E,LWACLOSE)                               SJB\n         FREEPOOL ((R4))                                            RPD\n         OI    FLAG,$CLOSING       INDICATE WE ARE CLOSING          SJB\n*                                                                   SJB\n         LA    R1,LIBPARM                                           SJB\n         LINK  EP=LIBRARY          LINK TO LIBRARY                  SJB\n         LR    R5,R15              SAVE R15                         SJB\n*                                                                   SJB\n         LA    R4,LWADCBRP         ADDR OR REPORT DCB               SJB\n         USING IHADCB,R4                                            SJB\n         TM    DCBOFLGS,DCBOFOPN   DID OPEN WORK?                   SJB\n         DROP  R4                                                   SJB\n         BNO   CLOSNRPT            NO                               SJB\n         MVC   CARDOUT,BLANKS2                                      SJB\n         MVC   CARDOUT+00(8),ADDJOB MOVE IN MEMBER NAME             RPD\n         MVC   CARDOUT+10(8),PGMJOBN MOVE IN JOBNAME                SJB\n         MVC   CARDOUT+20(7),PGMUSER MOVE IN USERID                 SJB\n         MVC   CARDOUT+30(5),DSCDATE MOVE IN JOB BEGIN DATE         SJB\n         MVC   CARDOUT+40(4),DSCTON  MOVE IN JOB BEGIN TIME         SJB\n         MVC   CARDOUT+50(4),DSCTOFF MOVE IN JOB STOP  TIME         SJB\n         MVC   CARDOUT+63(1),DSCMSGCL MOVE IN MSGCLASS              RPD\n         MVC   CARDOUT+70(7),DSCERROR MOVE IN ERROR FLAG            SJB\n*                                                                   RPD\n         MVC   DSCDATE(5),=C'YYDDD' REINITIALIZE FOR NEXT JOB. THE  RPD\n         MVC   DSCTON(4),=C'HHMM'   NEXT JOB MAY NOT BE SCHDULED    RPD\n         MVC   DSCTOFF(4),=C'HHMM'  NO IEF375I AND IEF376I MESSAGES RPD\n*                                   WILL BE FOUND.                  RPD\n         LTR   R5,R5                                                SJB\n         BZ    CLOSEMSG                                             SJB\n         MVC   CARDOUT+80(10),=CL10'LIB ERROR'                      SJB\n         WTO 'LIBSPOOL: JCLLIST HAS LIBRARY ERROR',ROUTCDE=2,DESC=2 SJB\n         MVI   SNAPID,10           SET SNAP NUMBER                  SJB\n         STH   R5,RETCODE          SAVE RETURN CODE                 SJB\nCLOSEMSG LA    R4,LWADCBRP                                          SJB\n         PUT   (R4),CARDOUT                                         SJB\n         CLI   SNAPID,10           WAS THERE A LIBRARY ERROR        SJB\n         BE    SNAPIT2             YES, THEN TERMINATE              SJB\nCLOSNRPT DS    0H                                                   SJB\n*                                                                   SJB\n         MVI   SSSODSN,X'00'       INDICATE NEW JOB GROUP           SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n*              ONCE WE GET TO THIS POINT ALL SYSOUTS OF THE         RPD\n*              JOB WHICH MATCH THE MSGCLASS OF THE JOB WILL         RPD\n*              STILL BE AROUND.                                     RPD\n*                                                                   RPD\n*              FOR THESE PSO'S, RE-AQUIRE PSO, ALLOC AND            RPD\n*              FREE-REQR IF $PRINT ERROR FLAG OR                    RPD\n*              FREE-DEL  IF NO ERROR                                RPD\n*                                                                   SJB\n         LA    R5,999              LOAD MAX LOOP COUNT              SJB\nCLOSLOOP DS    0H                                                   SJB\nCLOSBPSO DS    0H                  RETURN FROM ALLOCDS IF           SJB\n*                                  BADPSO# ENCOUNTERED (BAD PSO     SJB\n*                                  HAS BEEN FREE-RLSE)              SJB\n*                                                                   SJB\n*              GO DO A SUB-SYSTEM REQUEST                           SJB\n*                                                                   SJB\n         L     R15,=A(SSREQ)                                        SJB\n         LA    R1,WORK1            POINT TO MAIN WORK AREA          SJB\n         BALR  R14,R15                                              SJB\n*                                                                   SJB\n*              END OF SUB-SYSTEM REQUEST                            SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n         MVI   SNAPID,3                                             SJB\n         LH    R15,RETCODE         GET IEFSSREQ RETURN CODE         SJB\n         LTR   R15,R15             SUBSYSTEM REQUEST SUCCESSFUL?    SJB\n         BNZ   SNAPIT2             NO. TERMINATE WRITER             SJB\n*                                                                   SJB\n         C     R15,SSOBRETN        DID WE GET A DATA SET FROM JES?  SJB\n         BE    CLOSALOC            YES. GO ALLOC IT                 SJB\n*                                                                   SJB\n         LA    R1,4                FOR 'COMPARE'                    SJB\n         C     R1,SSOBRETN         ARE WE OUT OF ELIGIBLE DATA SETS?SJB\n         BNE   SNAPIT2             NO. SOMETHING WRONG. TERMINATE   SJB\n         B     LIBRET              NO PSO DSN LEFT                  SJB\n*                                                                   SJB\nCLOSALOC DS    0H                                                   SJB\n         BAL   R9,ALLOCDS          ALLOC DSN                        SJB\n         TM    FLAG,$PRINT         WAS THERE AN ERROR               SJB\n         BO    CLOSRLSE            YES, DO FREE RLSE, REQUEUECLS    SJB\n         TM    FLAG5,$FNDCCMS      WAS CONDITION CODE MESSAGE FOUND RPD\n         BNO   CLOSRLSE            NO ABEND OR NORMAL STEP COMPLETE RPD\n*                                  IN JOB-PRINT JCL                 RPD\n         TM    FLAG5,$ENDJOB       JOB END IEF376I MESSAGE FOUND ?  RPD\n         BNO   CLOSRLSE            NO, JOB WAS SCHEDULED BUT NEVER  RPD\n*                                  FINISHED EXECUTION-SYSTEM MAY    RPD\n*                                  HAVE CRASHED WHILE JOB RUNNING   RPD\n*                                  THEREFORE PRINT JCL              RPD\n         BAL   R9,FREEREQD         FREE REQUEUE TO DUMMY CLASS      RPD\n*        BAL   R9,FREEDEL          ELSE, DO FREE DELETE             SJB\n         B     CLOSINCR            GO TO BCT                        SJB\nCLOSRLSE DS    0H                                                   SJB\n         BAL   R9,FREEREQR         FREE REQUEUE CLASS RLSE          SJB\nCLOSINCR DS    0H                                                   SJB\n         BCT   R5,CLOSLOOP         GO TO IT                         SJB\n         B     LIBRET                                               SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n         EJECT                                                      SJB\nLIBRET   DS    0H                                                   SJB\n         LIBWTO 'ENTERED LIBRET'                                    SJB\n*        MVC   LWACLOSE,CLOSE                                       SJB\n*        CLOSE (LWADCBOT),MF=(E,LWACLOSE)                           SJB\n         RELEASE LWORK2,RC=0                                        SJB\n         SPACE 3                                                    SJB\nLIBRET2  DS    0H                                                   SJB\n         LIBWTO 'ENTERED LIBRET2'                                   SJB\n*                                                                   SJB\n         MVC   LWACLOSE,CLOSE                                       SJB\n         CLOSE (LWADCBOT),MF=(E,LWACLOSE)                           SJB\n         FREEPOOL LWADCBOT                                          RPD\n*                                                                   SJB\n         LH    R15,RETCODE                                          SJB\n         LTR   R15,R15             IS R15 > 0                       SJB\n         BNP   *+8                 YES                              SJB\n         LA    R15,32              NOPE, GIVE A BAD RETCODE         SJB\n         RELEASE LWORK2,RC=(15)                                     SJB\n         EJECT                                                      SJB\nALLOCDS  DS    0H                                                   SJB\n*                                                                   SJB\n*              ENTERED BY A        BALR   R9,ALLOCDS                SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED ALLOCDS'                                   SJB\n         MVC   CARDOUT(44),SSSODSN                                  SJB\n         LA    R2,CARDOUT                                           SJB\n         BAL   R7,RPTPUT2                                           SJB\n*                                                                   SJB\n         MVC   ALDDNAM,BLANKS2     MOVE BLANKS TO DDNAME            SJB\n         MVC   ALDSN,SSSODSN       MOVE DSNAME INTO ALLOCATE TEXT U SJB\n         USING S99RB,R14           ESTABLISH ADDRESSABILITY         SJB\n         LA    R14,S99AREA         SET UP SVC 99 PARM AREA BASE REG SJB\n         MVI   S99VERB,S99VRBAL    INDICATE ALLOC. TO BE PERFORMED  SJB\n         LA    R1,ALTUPTR          ADDR OF ALLOCATION TEXT UNIT PTRSSJB\n         ST    R1,S99TXTPP         STORE IN SVC 99 REQUEST BLOCK    SJB\n         LA    R1,S99PARM          LOAD ADDRESS OF SVC 99 PARM AREA SJB\n         DROP  R14                                                  SJB\n         SPACE 1                                                    SJB\n         DYNALLOC                  PERFORM DYNAMIC ALLOCATION       SJB\n         SPACE 1                                                    SJB\n         STH   R15,RETCODE         SAVE SVC 99 RETURN CODE          SJB\n         MVI   SNAPID,4            IDENTIFY SNAP ORIGIN             SJB\n         LTR   R15,R15             TEST SVC 99 RETURN CODE          SJB\n         BNZ   SNAPIT2             NO GOOD. SNAP AND TERMINATE      SJB\n         SPACE 2                                                    SJB\n*                                                                   SJB\n         MVC   CARDOUT(44),SSSODSN                                  SJB\n         LA    R2,CARDOUT                                           SJB\n         BAL   R7,RPTPUT2                                           SJB\n*                                                                   SJB\n         CLC   SSSODSN+14(5),PSODS IS THIS A PSO DATA SET?          SJB\n         BNE   BADPSO#             NO. GO DELETE IT                 SJB\n         CLI   SSSODSN+19,C'1'     DETERMINE IF THIS                RPD\n         BL    BADPSO#                IS A DATA SET WE              SJB\n         CLI   SSSODSN+19,C'4'           WISH TO PROCESS            SJB\n         BH    BADPSO#             IE PSO #2(LOG), #3(JCL), #4(MSG) SJB\n*                                  PSO #1(JCL)-NOT INTERPRETED(ACF) RPD\n*                                                                   RPD\n         MVI   FLAG3,X'00'         INDICATE JCL GOTTEN FOR THIS JOB RPD\n*                                                                   SJB\n*              STORE PSO# RELATIVE TO 0 IN DSTYPE                   SJB\n*                                                                   SJB\n         TM    FLAG,$CLOSING       ARE WE CLOSEING                  SJB\n         BO    ALLOCDS1            YES                              SJB\n*                                                                   SJB\n         CLI   SSSODSN+19,C'1'     PSO #1-JOB NOT INTERPRETED (ACF) RPD\n         BNE   PSO234              PAST INTERPRETATION              RPD\n         LA    R8,OTHERDS          BRANCH ADDRESS FOR OTHER SYSOUTS RPD\n         B     ALLOCDS0            CONTINUE                         RPD\n*                                                                   SJB\nPSO234   XR    R4,R4               CLEAR                            SJB\n         IC    R4,SSSODSN+19       GET PSO NUMBER (EBCDIC)          SJB\n         LA    R1,242              CONVERT PSO NUMBER TO BINARY AND SJB\n         SR    R4,R1               CHANGE SCALE: 0=LOG, 1=JCL, 2=MSGSJB\n         STC   R4,DSTYPE           SAVE CURRENT DATA SET TYPE       SJB\n         STC   R4,DSFLAGS(R4)      SAVE IT ALSO IN DSFLAGS+0(R4)    SJB\n         LR    R8,R4               COMPUTE OFFSET IN                SJB\n         SLL   R8,2                   BRANCH-ADDRESS TABLE          SJB\n         L     R8,DSPRCAD(R8)      GET APPROPRIATE BRANCH ADDRESS   SJB\n         SPACE 1                                                    SJB\n*                                                                   SJB\nALLOCDS0 MVC   CARDOUT(08),ALDDNAM                                  RPD\n         LA    R2,CARDOUT                                           SJB\n         BAL   R7,RPTPUT2                                           SJB\n*                                                                   SJB\nALLOCDS1 DS    0H                                                   SJB\n         BR    R9                                                   SJB\n         SPACE 3                                                    SJB\nBADPSO#  DS    0H                                                   SJB\n         TM    FLAG,$CLOSING       ARE WE CLOSEING                  SJB\n         BO    ALLOCDS1            YES, RETURN TO CLOSALOC PAR.     SJB\n*                                                                   RPD\n         TM    FLAG3,$FRSTPSO      WHAT SYSOUT IS THIS FOR THIS JOB RPD\n         BO    ALLOCDS1            FIRST SYSOUT NOT 2,3 OR 4        RPD\n*                              RETURN WITH $FRSTPSO ON WHICH WILL   RPD\n*                              CAUSE A WAIT AND THEN A SUBSYSTEM    RPD\n*                              REQUEST FOR THE NEXT MSGCLASS.       RPD\n*                                         HOPEFULLY THE NEXT TIME   RPD\n*                              A REQUEST IS MADE FOR THIS MSGCLASS  RPD\n*                              WE WILL GET THE JCL FIRST FOR A NEW  RPD\n*                              JOB.                                 RPD\n*                                                                   RPD\n         LA    R8,OTHERDS          BRANCH ADDRESS FOR OTHER SYSOUTS RPD\n         B     ALLOCDS0                                             RPD\n*                                                                   RPD\n         EJECT                                                      SJB\nLIBINIT  DS    0H                                                   SJB\n*                                                                   SJB\n*              ENTERED BY A        BALR   R9,LIBINIT                SJB\n*                                                                   SJB\n*              OPEN LIBRARIAN SYSIN FILE                            SJB\n*              CREATE AND WRITE -ADD CARD                           SJB\n*              CREATE AND WRITE -PGMR CARD                          SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED LIBINIT'                                   SJB\n         MVC   LWAOPEN,OPEN                                         SJB\n         MVC   LWADCBOT,OUTDCB     MOVE IN MODEL                    SJB\n         LA    R4,LWADCBOT                                          SJB\n         OPEN  ((R4),(OUTPUT)),MF=(E,LWAOPEN)                       SJB\n*                                  OPEN LIBRARIAN SYSIN FILE        SJB\n         USING IHADCB,R4                                            SJB\n         TM    DCBOFLGS,DCBOFOPN   DID OPEN WORK?                   SJB\n         DROP  R4                                                   SJB\n         BO    SYSINOK             YES                              SJB\n*                                                                   SJB\n         MVI   SNAPID,5            SET SNAPID                       SJB\n         LA    R15,24              SET FUNNY RC                     SJB\n         STH   R15,RETCODE         SAVE IT                          SJB\n         B     SNAPIT2             SNAP IT                          SJB\nSYSINOK  DS    0H                                                   SJB\n*                                                                   SJB\n         TIME  DEC                 GET JULIAN DAY FOR MODULE NAME   RPD\n         STH   R1,JULDTEPK         STORE PACKED JULIAN DATE         RPD\n         UNPK  JULIANDY,JULDTEPK   UNPACK JULIAN DATE               RPD\n*                                                                   RPD\n         MVC   ADDJOB+1(3),JULIANDY+0 MOVE JULIAN DAY TO -ADD CARD  RPD\n         MVC   ADDJOB+4(4),SSSOJOBI+4 MOVE IN JOB# TO -ADD CARD     RPD\n         MVI   ADDJOB+0,C'A'       INITIALIZE TO SEQ. CHAR TO \"A\"   RPD\n         BAL   R7,LIBFAIR          CHECK AND SEE IF OK              SJB\n         MVC   DSCJOB,ADDJOB       MOVE IN JOB# TO -DSC CARD        SJB\n         MVC   SELJOB,ADDJOB       MOVE IN JOB# TO -SEL CARD        SJB\n*                                                                   SJB\n         MVC   PGMJOBN,SSSOJOBN    MOVE JOBNAME TO -PGMR FIELD      SJB\n         MVC   PGMUSER,SSSOUSER    MOVE USERID  TO -PGMR FIELD      SJB\n*                                                                   SJB\n*              TRANSLATE ALL BLANKS TO '.' IN -PGMR CARD(OPERANDS)  SJB\n*                                                                   SJB\n         LA    R1,PGMJOBN          GET JOBNAME ADDR                 SJB\n         LA    R2,L'PGMJOBN+L'PGMUSER LENGTH TO CHECK               SJB\nTRANS1   DS    0H                                                   SJB\n         CLI   0(R1),C' '          IS IT BLANK                      SJB\n         BE    TRANS2              YES                              SJB\n         CLI   0(R1),X'00'         IS IT NULL                       SJB\n         BNE   TRANS3              NO                               SJB\nTRANS2   MVI   0(R1),C'.'          YES, TRANSLATE                   SJB\nTRANS3   LA    R1,1(,R1)           ADD ONE                          SJB\n         BCT   R2,TRANS1                                            SJB\n*                                                                   SJB\n         MVC   DLMJOB,ADDJOB       MOVE IN JOB# TO -DSC CARD        SJB\n*        LA    R2,DLMCARD          PUT OUT -DLM CARD                SJB\n*        BAL   R7,LIBPUT                                            SJB\n*                                                                   SJB\n         LA    R2,OPTCARD          PUT OUT -OPT CARD                SJB\n         BAL   R7,LIBPUT                                            SJB\n*                                                                   SJB\n         LA    R2,ADDCARD          PUT OUT -ADD CARD                SJB\n         BAL   R7,LIBPUT                                            SJB\n*                                                                   SJB\n         LA    R2,PGMCARD          PUT OUT -PGMR CARD               SJB\n         BAL   R7,LIBPUT                                            SJB\n*                                                                   SJB\n         BR    R9                  RETURN                           SJB\n*                                                                   SJB\n         EJECT                                                      SJB\nLIBFAIR  DS    0H                                                   SJB\n*                                                                   SJB\n*              LIBRARIAN FAIR      BAL  R7,LIBFAIR                  SJB\n*                                                                   SJB\n*              THIS CHECKS TO SEE IF THE MODULE NAME TO BE ADDED    SJB\n*              TO LIBRARY EXISTS. IF SO THEN THE LAST               SJB\n*              CHARACTER OF ADDJOB (AJJJNNNN) IN INCREMENTED        RPD\n*              AND THE TEST IS MADE AGAIN. THIS PROCESS CONTINUES   SJB\n*              UNTIL THE NAME IS UNIQUE OR UNTIL THE CHARACTER      SJB\n*              '@' IS REACHED $PRINT IS TURNED ON                   SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED LIBFAIR  '                                 SJB\n         CALL  MASTOPN,(0,FAIRFLG),VL                               SJB\n         CLI   FAIRFLG,C'0'        DID LIBRARIAN OPEN WORK          SJB\n         BNE   FAIRBAD1            NOPE, BAD                        SJB\n*                                                                   SJB\n         MVC   FAIRMOD,BLANKS2                                      SJB\n         MVC   FAIRMOD(8),ADDJOB   MOVE IN ADDJOB                   RPD\n         LA    R4,FAIRSEQ                                           SJB\nFAIRCHK  DS    0H                                                   SJB\n         CALL  MASTMOD,(FAIRMOD,FAIRFLG),VL SEE IF MODULE EXISTS    SJB\n         CLI   FAIRFLG,C'1'        DOES IT EXIST                    SJB\n         BE    FAIRXIT1            NO, THEN EXIT THIS ONES OK       SJB\n         CLI   FAIRFLG,C'0'        NORMAL RETURN CODE               SJB\n         BNE   FAIRBAD2            BAD RETURN CODE                  SJB\n         LA    R4,1(,R4)           GET NEW SEQUENCE CHARACTER ADDR  SJB\n         MVC   FAIRMOD+0(1),0(R4)  MOVE IN NEW CHARACTER            RPD\n         CLI   0(R4),C'@'          IS THIS THE END                  SJB\n         BE    FAIRXIT2                                             SJB\n         B     FAIRCHK                                              SJB\nFAIRXIT2 DS    0H                                                   SJB\n         OI    FLAG,$PRINT                                          SJB\nFAIRXIT1 DS    0H                                                   SJB\n         MVC   ADDJOB,FAIRMOD                                       SJB\n         CALL  MASTCLS,                                             SJB\n         BR    R7                                                   SJB\n*                                                                   SJB\nFAIRBAD1 DS    0H                  MASTOPN FAILED                   SJB\n*                                                                   SJB\n         MVI   SNAPID,6            SET SNAPID                       SJB\n         LA    R15,24              SET FUNNY RC                     SJB\n         STH   R15,RETCODE         SAVE IT                          SJB\n         B     SNAPIT2             SNAP IT                          SJB\n*                                                                   SJB\nFAIRBAD2 DS    0H                  MASTMOD FAILED                   SJB\n*                                                                   SJB\n         MVI   SNAPID,7            SET SNAPID                       SJB\n         LA    R15,24              SET FUNNY RC                     SJB\n         STH   R15,RETCODE         SAVE IT                          SJB\n         B     SNAPIT2             SNAP IT                          SJB\nFAIRSEQ  DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ@'                       SJB\nFAIRMOD  DC    CL8' '                                               SJB\nFAIRFLG  DC    C' '                                                 SJB\n         EJECT                                                      SJB\nFREEKEEP DS    0H                                                   SJB\n*                                                                   SJB\n*              FREEKEEP SYSOUT     BAL  R9,FREEKEEP                 SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED FREEKEEP'                                  SJB\n         LA    R1,TUFRKEPH         KEEP, HOLD                       SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\nFREERLSE DS    0H                                                   SJB\n*                                                                   SJB\n*              FREERLSE SYSOUT     BAL  R9,FREERLSE                 SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED FREERLSE'                                  SJB\n         LA    R1,TUFRKEPR         KEEP, RELEASE                    SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         SPACE 3                                                    SJB\nFREEDEL  DS    0H                                                   SJB\n*                                                                   SJB\n*              FREEDEL SYSOUT      BAL R9,FREEDEL                   SJB\n*                                                                   RPD\n         CLC   SSSODSN+14(6),PSODS     CHECK IF PSO #2(MSG)         RPD\n         BNE   SKIPWTOS                DO NOT WTO FOR OTHER PSOS    RPD\n         MVC   SUCCESS+26(8),SSSOJOBN                               RPD\n         MVC   SUCCESS+35(4),SSSOJOBI+4                             RPD\n         MVC   SUCCESS+40(1),SSSOCLAS                               RPD\n         AIF   ('&WTOR' EQ 'YES').SUCC11                       06/17/83\nSUCCESS  EQU   SUCCWTO-8                                       06/09/83\nSUCCWTO  WTO   'LIBSPOOL: XXXXXXXX-YYYY-Z - SUCCESSFULLY COMPLETED',   X\n               ROUTCDE=2                                            RPD\n         AGO   .SUCC19                                         06/17/83\n.SUCC11  ANOP                                                  06/17/83\nSUCCESS  EQU   SUCCWTO-0                                       06/09/83\nSUCCWTO  WTOR  'LIBSPOOL: XXXXXXXX-YYYY-Z - SUCCESSFULLY COMPLETED',   X\n               RPLYAREA,1,RPLYECB,ROUTCDE=2                         RPD\n.SUCC19  ANOP                                                  06/17/83\n*                                                                   SJB\nSKIPWTOS LIBWTO 'ENTERED FREEDEL'                                   SJB\n         LA    R1,TUFRDEL          DELETE, RELEASE                  SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         SPACE 3                                                    SJB\nFREEREQH DS    0H                                                   SJB\n*                                                                   SJB\n*              FREEREQ HOLD SYSOUT BAL R9,FREEREQH                  SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED FREEREQH'                                  SJB\n         LA    R1,TUFRREQH         CHANGE CLASS, HOLD               SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         SPACE 3                                                    SJB\nFREEREQR DS    0H                                                   SJB\n*                                                                   SJB\n*              FREEREQ RLSE SYSOUT BAL R9,FREEREQR                  SJB\n*                                                                   RPD\n         CLC   SSSODSN+14(6),PSODS     CHECK IF PSO #2(MSG)         RPD\n         BNE   SKIPWTOF                DO NOT WTO FOR OTHER PSOS    RPD\n         MVC   FAILURE+26(8),SSSOJOBN                               RPD\n         MVC   FAILURE+35(4),SSSOJOBI+4                             RPD\n         MVC   FAILURE+40(1),SSSOCLAS                               RPD\nTSTABEND TM    FLAG4,$ABEND            TEST IF ABEND FOUND          RPD\n         BNO   TSTCANCL                NO                           RPD\n         MVC   FAILURE+44(22),ABNDMES INDICATE ABEND                RPD\n         B     FAILWTO                 WRITE IT                     RPD\nTSTCANCL TM    FLAG4,$CANCEL           TEST IF CANCEL FOUND         RPD\n         BNO   TSTNOTCA                NO                           RPD\n         MVC   FAILURE+44(22),CNCLMES INDICATE ABEND/JCL ERROR      RPD\n         B     FAILWTO                 WRITE IT                     RPD\nTSTNOTCA TM    FLAG4,$NOTCAT           TEST IF NOT CATALOGED FOUND  RPD\n         BNO   TSTNOTDL                NO                           RPD\n         MVC   FAILURE+44(22),NOTCMES INDICATE NOT CATALOGED FOUND  RPD\n         B     FAILWTO                 WRITE IT                     RPD\nTSTNOTDL TM    FLAG4,$NOTDEL           TEST IF NOT DELETED FOUND    RPD\n         BNO   TSTENDCC                NO                           RPD\n         MVC   FAILURE+44(22),NOTDMES INDICATE NOT DELETED FOUND    RPD\n         B     FAILWTO                 WRITE IT                     RPD\nTSTENDCC TM    FLAG4,$ENDEDCC          TEST IF ENDED BY CC          RPD\n         BNO   TSTJCLER                NO                           RPD\n         MVC   FAILURE+44(22),ENDBYCC INDICATE ENDED BY COND. CODE  RPD\n         B     FAILWTO                 WRITE IT                     RPD\nTSTJCLER TM    FLAG4,$JCLERR           TEST IF JCL ERROR            RPD\n         BNO   TSTBADCC                NO                           RPD\n         MVC   FAILURE+44(22),JCLERRM INDICATE JCL ERROR            RPD\n         B     FAILWTO                 WRITE IT                     RPD\nTSTBADCC TM    FLAG4,$BADCC            TEST IF BAD COND CODE FOUND  RPD\n         BNO   TSTFNDCC                NO                           RPD\n         MVC   FAILURE+44(22),BADCMES INDICATE BAD COND CODE FOUND  RPD\n         B     FAILWTO                 WRITE IT                     RPD\nTSTFNDCC TM    FLAG5,$FNDCCMS          TEST IF COND CODE MESSAGE    RPD\n         BO    TSTENDJB                COND CODE MESSAGE FOUND      RPD\n         MVC   FAILURE+44(22),PRTDMES INDICATE PRINTED-NO PROBLEM   RPD\n         B     FAILWTO                 WRITE IT                     RPD\nTSTENDJB TM    FLAG5,$ENDJOB           JOB END IEF376I FOUND ?      RPD\n         BO    TSTPRTCL                YES                          RPD\n         MVC   FAILURE+44(22),PRTNOTDN INDICATE PRINTED-NOT DONE    RPD\n         B     FAILWTO                 WRITE IT                     RPD\nTSTPRTCL MVC   FAILURE+44(22),PRTCMES INDICATE PRINT MSGCLASS JOB   RPD\n         B     FAILWTO                 WRITE IT                     RPD\n         AIF   ('&WTOR' EQ 'YES').FAIL11                       06/17/83\nFAILURE  EQU   FAILWTO-8                                       06/09/83\nFAILWTO  WTO   'LIBSPOOL: XXXXXXXX-YYYY-Z - MMMMMMMMMMMMMMMMMMMMMM',   X\n               ROUTCDE=2                                            RPD\n         AGO   .FAIL19                                         06/17/83\n.FAIL11  ANOP                                                  06/17/83\nFAILURE  EQU   FAILWTO-0                                       06/09/83\nFAILWTO  WTOR  'LIBSPOOL: XXXXXXXX-YYYY-Z - MMMMMMMMMMMMMMMMMMMMMM',   X\n               RPLYAREA,1,RPLYECB,ROUTCDE=2                         RPD\n.FAIL19  ANOP                                                  06/17/83\n*                                                                   RPD\nSKIPWTOF LIBWTO 'ENTERED FREEREQR'                                  SJB\n         LA    R1,TUFRREQR         CHANGE CLASS, RELEASE            SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         SPACE 3                                                    SJB\nFREEREQD DS    0H                                                   SJB\n         CLC   SPACEPID(1),PRODID IS &PRODID = SPACE           06/17/83\n         BE    CKIFPSO2            YES, DO NOT RESTRICT USER ID     RPD\n         CLC   SSSOUSER(1),PRODID IS FIRST CHAR. OF USERID=P   06/17/83\n         BNE   SKIPWTOD            NO, WTOR NOT NEEDED, DELETEING   RPD\n*                                  A NON-PROUCTION USER ID JOB      RPD\n*                                                                   SJB\n*              FREEREQ RLSE SYSOUT BAL R9,FREEREQD-REQUEUE TO DUMMY SJB\n*                                                                   RPD\nCKIFPSO2 CLC   SSSODSN+14(6),PSODS     CHECK IF PSO #2(MSG)         RPD\n         BNE   SKIPWTOD                DO NOT WTO FOR OTHER PSOS    RPD\n         MVC   SUCCESSD+26(8),SSSOJOBN                              RPD\n         MVC   SUCCESSD+35(4),SSSOJOBI+4                            RPD\n         MVC   SUCCESSD+40(1),SSSOCLAS                              RPD\n         AIF   ('&WTOR' EQ 'YES').SUCC21                       06/17/83\nSUCCESSD EQU   SUCCWTOD-8                                      06/09/83\nSUCCWTOD WTO   'LIBSPOOL: XXXXXXXX-YYYY-Z - SUCCESSFULLY COMPLETED',   X\n               ROUTCDE=2\n         AGO   .SUCC29                                         06/17/83\n.SUCC21  ANOP                                                  06/17/83\nSUCCESSD EQU   SUCCWTOD-0                                      06/09/83\nSUCCWTOD WTOR  'LIBSPOOL: XXXXXXXX-YYYY-Z - SUCCESSFULLY COMPLETED',   X\n               RPLYAREA,1,RPLYECB,ROUTCDE=2\n.SUCC29  ANOP                                                  06/17/83\n*                                                                   RPD\nSKIPWTOD LIBWTO 'ENTERED FREEREQD'                                  SJB\n         LA    R1,TUFRREQD         CHANGE CLASS, RELEASE TO DUMMY   SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         EJECT                                                      SJB\nUNALLOC  DS    0H                                                   SJB\n         CLC   =XL8'00',ALDDNAM    IS IT NULLS                      SJB\n         BER   R9                  YES, EXIT                        SJB\n         CLC   =CL8' ',ALDDNAM     IS IT BLANKS                     SJB\n         BER   R9                  YES, EXIT                        SJB\n         MVC   UALDDNAM,ALDDNAM    MOVE DDNAME TO UNALLOCATION TXT  SJB\n         LIBWTO 'ENTERED UNALLOC'                                   SJB\n         USING S99RB,R14           ESTABLISH ADDRESSABILITY         SJB\n         LA    R14,S99AREA         SET UP SVC 99 PARM AREA BASE REG SJB\n         MVI   S99VERB,S99VRBUN    INDICATE UNALLOCATION TO BE DONE SJB\n*                                                                   SJB\n         L     R1,LWAUALTU         ADDR OF UNALLOCATION TU PTRS     SJB\n*                                                                   SJB\n         ST    R1,S99TXTPP         STORE IN SVC 99 REQUEST BLOCK    SJB\n         LA    R1,S99PARM          LOAD ADDRESS OF SVC 99 PARM AREA SJB\n         DROP  R14                                                  SJB\n         SPACE 1                                                    SJB\n         DYNALLOC                  PERFORM DYNAMIC UNALLOCATION     SJB\n*        SPACE 1                                                    SJB\n         STH   R15,RETCODE         SAVE SVC 99 RETURN CODE          SJB\n         MVI   SNAPID,8            IDENTIFY SNAP ORIGIN             SJB\n         LTR   R15,R15             TEST SVC 99 RETURN CODE          SJB\n         BNZ   SNAPIT2             NO GOOD. SNAP AND TERMINATE      SJB\n         BR    R9                  RETURN                           SJB\n         EJECT                                                      SJB\nOPENIN   DS    0H                                                   SJB\n*                                                                   SJB\n*              OPEN INPUT          BALR   R9,OPENIN                 SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED OPENIN '                                   SJB\n*                                                                   SJB\n         MVC   LWADCBIN,INDCB                                       SJB\n         LA    R4,LWADCBIN         INPUT DCB                        SJB\n         USING IHADCB,R4           ESTABLISH ADDRESSABILITY         SJB\n*                                                                   SJB\n         MVC   DCBDDNAM,ALDDNAM    MOVE DDNAME AS SET BY SVC 99 TO DCBB\n         OPEN  ((R4),(INPUT))      OPEN INPUT DATA SET              SJB\n         SPACE 1                                                    SJB\n         XC    RETCODE,RETCODE     CLEAR RETURN CODE FIELD          SJB\n         MVI   SNAPID,9            IDENTIFY SNAP ORIGIN             SJB\n         TM    DCBOFLGS,DCBOFOPN   WAS OPEN SUCCESSFUL?             SJB\n         BZ    SNAPIT2             NO. SNAP AND TERMINATE           SJB\n         DROP  R4                                                   SJB\n         BR    R9                                                   SJB\n         SPACE 3                                                    SJB\nLIBPUT   DS    0H                                                   SJB\n*                                                                   SJB\n*              LIBPUT              BAL  R7,LIBPUT                   SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED LIBPUT  '                                  SJB\n         TM    FLAG,$CLOSING       ARE WE CLOSING A JOB             SJB\n         BO    LIBPUT1             YES, OUTPUT FILE IS CLOSED       SJB\n         LA    R4,LWADCBOT                                          SJB\n         PUT   (R4),((R2))         PUT OUT RECORD                   SJB\nLIBPUT1  LA    R2,CARDOUT          GET CARD OUTPUT ADDR             SJB\n         MVC   CARDOUT,BLANKS2                                      SJB\n         BR    R7                                                   SJB\n         SPACE 3                                                    SJB\nRPTPUT2  DS    0H                                                   SJB\n*                      DEBUGGING                                    SJB\n*              RPTPUT2             BAL  R7,RPTPUT2                  SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED RPTPUT2'                                   SJB\n         TM    FLAG2,$DEBUG        IS THIS DEBUG OPTION             SJB\n         BNO   RPTPUT1             NO, THEN SKIP                    SJB\nRPTPUT   DS    0H                                                   SJB\n*                                                                   SJB\n*              RPTPUT              BAL  R7,RPTPUT                   SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED RPTPUT '                                   SJB\n         LA    R4,LWADCBRP                                          SJB\n         USING IHADCB,R4                                            SJB\n         TM    DCBOFLGS,DCBOFOPN   DID OPEN WORK?                   SJB\n         DROP  R4                                                   SJB\n         BNO   RPTPUT1             NO, EXIT NO REPORT               SJB\n         PUT   (R4),((R2))         PUT OUT RECORD                   SJB\nRPTPUT1  LA    R2,CARDOUT          GET CARD OUTPUT ADDR             SJB\n         MVC   CARDOUT,BLANKS2                                      SJB\n         BR    R7                                                   SJB\n         EJECT                                                      SJB\nSNAPIT2  DS    0H                                                   SJB\n*                                                                   SJB\n*                                                                   SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED SNAPIT2'                                   SJB\n         B     LIBRET2                                              SJB\n*                                                                   SJB\n*                                                                   SJB\n*                                                                   SJB\n         EJECT\n*/ ***************************************************************** /*\n*                                                                     *\n*  THE FOLLOWING BLOCKS OF CODE DEFINE THE CRITERIA BY WHICH JOBS     *\n*  ARE SELECTED FOR POSSIBLE PRINTING BY LIBSPOOL.  EACH OF THE 3     *\n*  COMPONENTS, JES2 JOB LOG, JCL, AND SYSTEM MESSAGE BLOCKS (SMB'S/   *\n*  ALLOCATION/DEALLOCATION MESSAGES) OF ALL CLASS 'MSGCLS' JOBS ARE   *\n*  SCANNED FOR THE OCCURRENCE OF SIGNIFICANT MESSAGE IDENTIFICATION   *\n*  NUMBERS WHICH INDICATE THAT AN EXCEPTIONAL CONDITION OCCURRED DUR- *\n*  ING JOB PROCESSING (EG. JCL ERROR, ABEND, NOT CAT 2, ETC.). UPON   *\n*  THE OCCURRENCE OF THESE MESSAGE ID'S THE JOB IS FLAGGED FOR SUBSE- *\n*  QUENT PRINTING; OTHERWISE, JOB START/STOP INFORMATION IS EXTRACT-  *\n*  ED FOR INCLUSION ON A LIBRARIAN COMMENT CARD DURING THE PROCESS OF *\n*  ADDING THE JOB TO THE LIBSPOOL.                                    *\n*                                                                     *\n*/ ***************************************************************** /*\n*                                                                   SJB\n*              R2 = OUTPUT BUFFER ADDR                              SJB\n*              R3 = LENGTH OF INPUT RECORD                          SJB\n*              R5 = INPUT RECORD ADDR                               SJB\n*              R7 = BAL REG FOR LIBPUT                              SJB\n*              R8 = POINTS TO RETURN ADDR FROM READNEXT             SJB\n*                                                                   SJB\n         EJECT                                                      SJB\nJES2JLOG DS    0H                                                   SJB\n         LIBWTO 'ENTERED JES2LOG'                                   SJB\n         MVC   DSCMSGCL,SSSOCLAS   SAVE MSGCLASS OF JOB             RPD\n         BAL   R8,READNEXT         SET CONT. ADDR AND IGNORE FIRST LINE\n         MVC   0(80,R2),0(R5)      MOVE LINE (80 CHARS) TO LIB IOAREA\n         MVI   0(R2),C'1'          SET NEW PAGE ASA CHAR\n         BAL   R7,LIBPUT           RETURN TO LIBRARIAN WITH LOG TITLE\n         MVI   0(R2),C'0'          SET DOUBLE SPACE ASA CHAR\n         LA    R7,READNEXT         SET NEXT ENTRY BRANCH ADDR\n         BAL   R8,LIBPUT           SET CONT. ADDR; RET WITH BLANK LINE\n         SPACE 1\n         MVI   0(R5),C' '          INSERT SINGLE SPACE ASA CHAR\nCKIEF45  CLC   20(5,R5),IEF45      IS THIS AN IEF45* MSG?\n         BNE   NOTIEF45            NO. CONTINUE\n         CLI   25(R5),C'3'         IEF450 TO IEF453?\n         BH    CK4PRTMC            NO. CONTINUE                     RPD\n         CLI   25(R5),C'0'         IEF450I ?                        RPD\n         BNE   NOT450I             NO. CONTINUE                     RPD\n         OI    FLAG4,$ABEND        INDICATE ABEND/JCL ERROR         RPD\n*\n         LA    R1,29(R5)           START ADDR. FOR ABEND CODE       RPD\n         LA    R14,1               INCREMENT                        RPD\n         LA    R15,55(R5)          END ADDR. FOR ABEND CODE         RPD\nCHK4ABND CLC   0(4,R1),ABNDCOMM    LOOK FOR COMMON CHARACTERS       RPD\n         BNE   INCRABND            NO, INCREMENT TO NEXT ADDRESS    RPD\n         MVC   ABNDMES+9(10),9(R1) MOVE IN ABEND CODES TO MESSAGE   RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nINCRABND BXLE  R1,R14,CHK4ABND     INCREMENT AND CONTINUE           RPD\n         MVC   ABNDMES+9(10),=C'NOT FOUND '                         RPD\n         B     SETPRT              COMMON CHAR NOT FOUND            RPD\n*\nNOT450I  CLI   25(R5),C'1'         IEF451I ?                        RPD\n         BNE   NOT451I             NO. CONTINUE                     RPD\n         OI    FLAG4,$ENDEDCC      INDICATE ENDED BY CONDITION CODE RPD\n*\n         LA    R1,29(R5)           START ADDR. FOR COND. CODE       RPD\n         LA    R14,1               INCREMENT                        RPD\n         LA    R15,55(R5)          END ADDR. FOR COND. CODE         RPD\nCHK4CC   CLC   0(4,R1),CCJOBEND    LOOK FOR COMMON CHARACTERS       RPD\n         BNE   INCRCC              NO, INCREMENT TO NEXT ADDRESS    RPD\n         MVC   ENDBYCC+18(4),15(R1) MOVE IN COND. CODE TO MESSAGE   RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nINCRCC   BXLE  R1,R14,CHK4CC       INCREMENT AND CONTINUE           RPD\n         MVC   ENDBYCC+18(4),=C'????'                               RPD\n         B     SETPRT              COMMON CHAR NOT FOUND            RPD\n*\nNOT451I  OI    FLAG4,$JCLERR       INDICATE JCL ERROR (IEF452(3)I)  RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nSETPRT   OI    FLAG,$PRINT         INDICATE JOB IS TO BE PRINTED\n         B     CONTDS1             CONTINUE\n*\nNOTIEF45 CLC   20(7,R5),IEF251I    IS THIS A 'JOB CANCELLED' MSG?\n         BNE   NOTIEF25            NO. CONTINUE                     RPD\n         OI    FLAG4,$CANCEL       INDICATE CANCEL MESSAGE          RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nNOTIEF25 CLC   20(8,R5),IIP026I    EMULATOR 'WRITE, DATA CHECK' MSG?\n         BE    SETPRT              YES. GO FLAG JOB FOR PRINTING\n         CLC   20(2,R5),REPLY      IS THIS AN OPERATOR REPLY?\n         BNE   STEPLINE            NO. CHECK FOR OXY STEP LINE      RPD\n         LA    R1,23(R5)           STARTING ADDRESS FOR SCAN\n         LA    R14,1               INCREMENT FOR BXLE\n         LA    R15,10(R1)          LAST ADDRESS FOR SCAN\nCHKCANCL CLC   1(6,R1),CANCEL      IS THIS A CANCEL REPLY?  WJS/01APR80\n         BNE   INCRCNCL            GO INCREMENT                     RPD\n         OI    FLAG4,$CANCEL       INDICATE CANCEL MESSAGE          RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nINCRCNCL BXLE  R1,R14,CHKCANCL     CONTINUE CHECK FOR 'CANCEL'\n         B     CK4PRTMC            NO, SEE IF PRINT MSGCLASS USED   RPD\n*\nSTEPLINE CLC   1(12,R5),STEPID     CHECK FOR STEP LINE              RPD\n         BNE   PROGLINE            CHECK FOR PROG LINE              RPD\n         CLC   65(12,R5),STEPFLSH  CHECK FOR STEP FLUSHED MESSAGE   RPD\n         BNE   GETCCODE            GO SAVE CONDITION CODE           RPD\n         MVI   LASTCC,X'FF'        FLAG THAT STEP FLUSHED           RPD\n         B     CK4PRTMC                                             RPD\nGETCCODE MVC   LASTCC(4),73(R5)    SAVE LAST COND CODE/ABEND CODE   RPD\n         B     CK4PRTMC                                             RPD\nPROGLINE CLC   1(12,R5),PROGID     CHECK FOR OXY PROGRAM LINE       RPD\n         BNE   CK4PRTMC                                             RPD\n         CLI   LASTCC,X'FF'        TEST FOR STEP FLUSHED FLAG       RPD\n         BE    CK4PRTMC            YES, CONTINUE                    RPD\n         CLC   LASTCC(4),CC0000    WAS LAST CC=0                    RPD\n         BE    CK4PRTMC            THIS STEP IS OK                  RPD\n         CLC   18(8,R5),OXYPROGM   WAS THIS PGM=OXYPROGM            RPD\n         BNE   SETBADCC            NO, FLAG THAT A BAD CC FOUND     RPD\n         CLC   LASTCC(4),CC0004    COMPARE OXYPROGM CC TO 0004      RPD\n         BH    SETBADCC            BAD IF GREATER THAN 0004         RPD\n         B     CK4PRTMC                                             RPD\nSETBADCC OI    FLAG4,$BADCC        INDICATE BAD CONDITION CODE      RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nCK4PRTMC CLC   SSSOCLAS(1),MSGCLPRT CK FOR PRINT ALWAYS MSGCLASS    RPD\n         BNE   CONTDS1             NO, CONTINUE                     RPD\n         OI    FLAG4,$PRTMSGC      INDICATE PRINT MESSAGE CLASS     RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\n*\nJCLDS    MVI   0(R2),C'1'          SET NEW PAGE ASA CHAR (OS/JCL)\n         BAL   R7,LIBPUT           RETURN TO LIBRARIAN WITH LOG TITLE\n         BALR  R8,0                SET CONT. ADDRESS\n         LA    R3,1(R3)            COMPENSATE FOR INSERTED ASA CHAR\n         MVC   1(79,R2),0(R5)      MOVE 79 CHARS TO LIB IOAREA\n         BCTR  R5,0                COMPENSATE FOR INSERTED ASA CHAR\n         B     CONTDS2             CONTINUE PROCESSING OF LINE\n         SPACE 1\nMSGDS    MVI   0(R5),C'1'          INSERT NEW PAGE ASA CHAR (SMB'S)\n         BALR  R8,0                SET CONT. ADDRESS\n*        LA    R1,4                LENGTH OF RDW\n*        SR    R3,R1               SUBTRACT FROM LRECL\n*        LA    R5,4(R5)            REPOSITION PAST RDW\n         CLC   1(7,R5),IEF375I     IS THIS A 'JOB START'/IEF375I MSG?\n         BNE   NOT375              NO.\n         MVC   DSCDATE,31(R5)      MOVE START DATE TO -DESC CARD    SJB\n         MVC   DSCTON,37(R5)       MOVE START TIME TO -DESC CARD    SJB\n         B     CONTDS1             CONTINUE\nNOT375   CLC   1(7,R5),IEF376I     IS THIS A 'JOB END'/IEF376I MSG?\n         BNE   NOT376              NO.\n         OI    FLAG5,$ENDJOB       INDICATE JOB END EXECUTION FOUND RPD\n         MVC   DSCTOFF,37(R5)      MOVE STOP TIME TO -DESC CARD     SJB\n         B     CONTDS1             CONTINUE\nNOT376   CLC   1(7,R5),IEF287I     IS THIS IEF287I/(NOT CATALOGED) MSG?\n         BNE   NOT287              NO, CONTINUE                     RPD\n         OI    FLAG4,$NOTCAT       INDICATE NOT CATALOGED MESSAGE   RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nNOT287   CLC   1(7,R5),IEF283I     IS THIS IEF283I/(NOT DELETED X) MSG?\n         BNE   NOT283              NO, CONTINUE                     RPD\n         OI    FLAG4,$NOTDEL       INDICATE NOT DELETED MESSAGE     RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\n*\nNOT283   CLC   1(7,R5),IEF142I     IS THIS A CONDITION CODE MESSAGE RPD\n         BNE   CONTDS1             NO. CONTINUE                     RPD\n         OI    FLAG5,$FNDCCMS      INDICATE CONDITION CODE MESSAGE  RPD\n*                                  FOUND-WILL PRINT IF NOT ON       RPD\n*                                  EG. - TYPRUN=SCAN                RPD\nFINDCC   LA    R1,10(R5)           STARTING ADDRESS FOR SCAN        RPD\n         LA    R14,1               INCREMENT FOR BXLE               RPD\n         LA    R15,35(R5)          LAST ADDRESS FOR SCAN            RPD\nCHKCCCOM CLC   0(4,R1),CCCOMMON    IS THIS A ' - S' FROM CC MESSAGE RPD\n         BE    CK4MAXCC            YES. GO CHECK COND CODE          RPD\n         BXLE  R1,R14,CHKCCCOM     CONTINUE CHECK FOR COMMON ' - S' RPD\n         B     SETPRT              ADDRESSES EXHAUSTED - PRINT IT   RPD\n*\nCK4MAXCC CLC   33(4,R1),BADCMES+18 COMPARE COND CODE TO MAX SO FAR  RPD\n         BL    CONTDS1             OLD COND CODE IS AT LEAST AS BIG RPD\n         MVC   BADCMES+18(4),33(R1)   SAVE THIS COND CODE AS MAX.   RPD\n         B     CONTDS1                                              RPD\n*                                                                   RPD\nOTHERDS  XC    RECRDCTR,RECRDCTR   ZERO SYSOUT RECORD COUNTER       RPD\n         LA    R1,LWADCBIN         INPUT DCB ADDR.                  RPD\n         USING IHADCB,R1                                            RPD\n         TM    DCBRECFM,DCBRECCA   TEST IF ASA CONTROL CHAR.        RPD\n         BO    WCARCNTL            PROCESS SYSOUT WITH CHAR. CONT.  RPD\n         TM    DCBRECFM,DCBRECCM   TEST IF MACHINE CONTROL CHAR.    RPD\n         BO    WCARCNTL            PROCESS SYSOUT WITH CHAR. CONT.  RPD\n         DROP  R1                                                   RPD\n*  ASSUME NO CARRIAGE CONTROL CHARACTERS IN THIS SYSOUT             RPD\n         MVI   0(R2),C'1'          SET NEW PAGE ASA CHAR IN OUT BUF RPD\n         BALR  R8,0                SET CONTINUATION ADDRESS         RPD\n         LH    R1,RECRDCTR         GET RECORD COUNT FOR THIS SYSOUT RPD\n         LA    R1,1(R1)            INCREMENT FOR CURRENT RECORD     RPD\n         CH    R1,SYSOUTMX         CK MAXIMUM ALLOWED FOR A SYSOUT  RPD\n         BH    TOOMANYL            MAXIMUM HAS BEEN REACHED         RPD\n         STH   R1,RECRDCTR         SAVE NEW RECORD COUNT FOR SYSOUT RPD\n         LA    R3,1(R3)            BUMP LRECL FOR INSERTED ASA CHAR RPD\n         MVC   1(79,R2),0(R5)      MOVE 79 CHAR. TO OUTPUT BUFFER   RPD\n         BCTR  R5,0                COMPENSATE FOR INSERTED ASA CHAR RPD\n         B     CONTDS2             CONTINUE PROCESSING OF LINE      RPD\nWCARCNTL MVI   0(R5),C'1'          SET NEW PAGE ASA CHAR            RPD\n         BALR  R8,0                SET CONTINUATION ADDRESS         RPD\n         LH    R1,RECRDCTR         GET RECORD COUNT FOR THIS SYSOUT RPD\n         LA    R1,1(R1)            INCREMENT FOR CURRENT RECORD     RPD\n         CH    R1,SYSOUTMX         CK MAXIMUM ALLOWED FOR A SYSOUT  RPD\n         BH    TOOMANYL            MAXIMUM HAS BEEN REACHED         RPD\n         STH   R1,RECRDCTR         SAVE NEW RECORD COUNT FOR SYSOUT RPD\n         B     CONTDS1             CONTINUE PROCESSING OF LINE      RPD\nTOOMANYL LH    R3,LMTMSGLN         LOAD LENGTH OF LIMIT MESSGE      RPD\n         EX    R3,LIMITREC         TELL SYSOUT LIMIT EXCEEDED       RPD\n         LA    R7,EOF              SET TO CLOSE THIS SYSOUT/CONTINU RPD\n         B     LIBPUT              WRITE MESSAGE AND CLOSE SYSOUT   RPD\n         EJECT\n*                                                                   SJB\n*              IF LRECL < 80 OR COLS 81-132 IS BLANK, THEN          SJB\n*              ONLY PUT 1 RECORD TO LIBRARIAN                       SJB\n*                                                                   SJB\nCONTDS1  C     R3,EIGHTY           IS RECORD LENGTH LESS THAN 80?\n         BL    SHORTREC            YES. GO PROCESS AS SUCH\n         MVC   0(80,R2),0(R5)      MOVE LINE (80 CHARS) TO LIB IOAREA\nCONTDS2  BAL   R7,LIBPUT           RETURN TO PANVALET WITH RECORD\n         S     R3,EIGHTY           IS RECORD LENGTH EXACTLY 80 BYTES?\n         BNP   READNEXT            YES. GO GET NEXT LINE            SJB\n         BCTR  R3,0                FOR EXECUTE\n         EX    R3,COMPREC          IS REST OF RECORD BLANK?\n         BE    READNEXT            YES. GO GET NEXT LINE\n         LA    R5,79(R5)           POINT TO LAST CHAR ALREADY WRITTEN\n         MVI   0(R5),X'FE'         INSERT CONTINUATION CHAR\n         LA    R3,2(R3)            RESET TO ACTUAL LENGTH OF REMAINDER\nSHORTREC BCTR  R3,0                FOR EXECUTE\n         EX    R3,MOVEREC          MOVE SHORT OR BALANCE OF LONG RECORD\n         LA    R7,READNEXT         BRANCH ADDR FOR NEXT ENTRY\n         B     LIBPUT              RETURN TO PANVALET WITH INPUT REC\n*                                                                   SJB\n         SPACE 3                                                    SJB\nCOMPREC  CLC   80(*-*,R5),BLANKS2  REMAINDER OF RECORD BLANK?       SJB\nMOVEREC  MVC   0(*-*,R2),0(R5)     MOVE REMAINDER TO IOAREA         SJB\nLIMITREC MVC   0(*-*,R2),LIMITMSG  MOVE LIMIT MESSAGE TO IOAREA     RPD\n         EJECT                                                      SJB\nSYNEXIT  SYNADAF ACSMETH=QSAM      INPUT (JES2) DATA SET SYNAD      SJB\n         SPACE 1                                                    SJB\n         MVI   0(R2),C'-'          INSERT TRIPLE SPACE ASA CC CHAR  SJB\n         MVC   1(78,R2),50(R1)     MOVE ERROR MESSAGE TO LIB IOAREA SJB\n         SPACE 1                                                    SJB\n         SYNADRLS                  RESTORE R13                      SJB\n         SPACE 1                                                    SJB\n         BAL   R7,LIBPUT           RETURN TO LIBRARIAN WITH ERROR   SJB\n         B     EOF                                                  SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n*              ALLOC   DSN FROM JES2                                SJB\n*                                                                   SJB\n         DS    0F                                                   SJB\nS99PARM  DC    X'80',AL3(S99AREA)  ADDRESS OF SVC 99 REQUEST BLOCK  SJB\nS99AREA  DC    AL1(S99RBEND-S99RB) LENGTH OF REQUEST BLOCK          SJB\n         DC    X'01'               VERB CODE                        SJB\n         DC    XL6'00'                                              SJB\n         DC    A(ALTUPTR)          POINTER TO LIST OF TEXT UNIT PTRSSJB\n         DC    XL8'00'                                              SJB\n         SPACE 1                                                    SJB\nALTUPTR  DC    A(ALDSTU)           ADDR OF DSNAME TEXT UNIT         SJB\n         DC    A(ALDDTU1)          ADDR OF DDNAME TEXT UNIT         SJB\n         DC    A(ALSSTU)           ADDR OF SUBSYSTEM TEXT UNIT      SJB\n         DC    X'00',AL3(ALDDTU)   ADDR OF DDNAME TEXT UNIT         SJB\n         DC    X'00',AL3(ALDSP1TU) ADDR OF DISP1  TEXT UNIT         SJB\n         DC    X'80',AL3(ALDSP2TU) ADDR OF DISP2  TEXT UNIT         SJB\n         SPACE 1                                                    SJB\nALDSTU   DC    X'0002'             ALLOCATION BY DSNAME             SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'002C'             LENGTH OF PARAMETER              SJB\nALDSN    DC    CL44' '             DSNAME                           SJB\n         DS    0H                                                   SJB\nALDDTU1  DC    X'0001'             ALLOCATION BY DDNAME             SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0008'             LENGTH OF DDNAME                 SJB\n         DC    CL8'JES2DDNM'       DDNAME FOR ALLOCATION            SJB\nALSSTU   DC    X'005C'             SUBSYSTEM DATA SET ALLOCATION    SJB\n         DC    X'0000'             ONE PARAMETER                    SJB\n         DC    X'0004'             LENGTH OF PARAMETER              SJB\nALSSN    DC    CL4'JES2'           SUBSYSTEM NAME                   SJB\n         DS    0H                                                   SJB\nALDDTU   DC    X'0055'             RETURN WITH DDNAME               SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0008'             LENGTH OF PARAMETER              SJB\nALDDNAM  DC    CL8' '              AREA FOR DDNAME                  SJB\n         DS    0H                                                   SJB\nALDSP1TU DC    X'0004'             DISP1                            SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0001'             LENGTH OF PARAMETER              SJB\n         DC    X'02'               DISP1=MOD                        SJB\n         DS    0H                                                   SJB\nALDSP2TU DC    X'0005'             DISP2                            SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0001'             LENGTH OF PARAMETER              SJB\n         DC    X'08'               DISP2=KEEP                       SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n*              UNALLOC DELETE,     RELEASE                          SJB\n*                                                                   SJB\nTUFRDEL  DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRDEL) FREE DELETE                      SJB\n         DC    X'80',AL3(UALFRREL) RELEASE FROM HOLD                SJB\n*                                                                   SJB\n*              UNALLOC KEEP,       RELEASE                          SJB\n*                                                                   SJB\nTUFRKEPR DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB\n         DC    X'80',AL3(UALFRREL) RELEASE FROM HOLD                SJB\n*                                                                   SJB\n*              UNALLOC KEEP,       HOLD                             SJB\n*                                                                   SJB\nTUFRKEPH DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB\n         DC    X'80',AL3(UALFRHLD) PUT ON HOLD                      SJB\n*                                                                   SJB\n*              UNALLOC KEEP,       CHANGE CLASS, RELEASE            SJB\n*                                                                   SJB\nTUFRREQR DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB\n         DC    X'00',AL3(UALFRREQ) REQUEUE THE CLASS                SJB\n         DC    X'80',AL3(UALFRREL) RELEASE FROM HOLD                SJB\n*                                                                   RPD\nTUFRREQD DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  RPD\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        RPD\n         DC    X'00',AL3(UALFRRQD) REQUEUE THE CLASS TO DUMMY       RPD\n         DC    X'80',AL3(UALFRREL) RELEASE FROM HOLD                RPD\n*                                                                   RPD\n*              UNALLOC KEEP,       CHANGE CLASS, HOLD               SJB\n*                                                                   SJB\nTUFRREQH DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB\n         DC    X'00',AL3(UALFRREQ) REQUEUE THE CLASS                SJB\n         DC    X'80',AL3(UALFRHLD) PUT ON HOLD                      SJB\n         EJECT                                                      SJB\nUALDDTU  DC    X'0001'             UNALLOCATION BY DDNAME           SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0008'             LENGTH OF PARAMETER              SJB\nUALDDNAM DC    CL8' '              DDNAME TO BE UNALLOCATED         SJB\n         DS    0H                                                   SJB\nUALFRDEL DC    X'0005'             OVERIDING DISP2 SPECIFICATION    SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0001'             LENGTH OF PARAMETER              SJB\n         DC    X'04'            4= DELETE DATA SET                  SJB\n         DS    0H                                                   SJB\nUALFRKEP DC    X'0005'             OVERIDING DISP2 SPECIFICATION    SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0001'             LENGTH OF PARAMETER              SJB\n         DC    X'08'            8= KEEP   DATA SET                  SJB\n         DS    0H                                                   SJB\nUALFRREL DC    X'000A'             RELEASE HELD DSN                 SJB\n         DC    X'0000'             NO PARAMETER                     SJB\n         DS    0H                                                   SJB\nUALFRHLD DC    X'0059'             HOLD QUEUE                       SJB\n         DC    X'0000'             NO PARAMETER                     SJB\n         DS    0H                                                   SJB\nUALFRREQ DC    X'0018'             RELEASE HELD DSN                 SJB\n         DC    X'0001'             1 PARAMETER                      SJB\n         DC    X'0001'             LENGTH                           SJB\nRECLASS1 DC    C' '                REQUEUE CLASS               06/17/83\n         DS    0H                                                   RPD\nUALFRRQD DC    X'0018'             RELEASE HELD DSN                 RPD\n         DC    X'0001'             1 PARAMETER                      RPD\n         DC    X'0001'             LENGTH                           RPD\nDUMMYCL1 DC    C' '                DUMMY REQUE CLASS           06/17/83\n         EJECT                                                      SJB\n         SPACE 2                                                    SJB\nDSPRCAD  DS    0F                  INITIAL BRANCH-ADDRESS TABLE     SJB\n         DC    A(JES2JLOG)         ADDRESS FOR PROCESSING LOG DATA SET\n         DC    A(JCLDS)            ADDRESS FOR PROCESSING JCL DATA SET\n         DC    A(MSGDS)            ADDRESS FOR PROCESSING MSG DATA SET\n         SPACE 2                                                    SJB\nEIGHTY   DC    F'80'               OUTPUT RECORD SIZE               SJB\nLIBPARM  DC    X'80',AL3(LIBPARM2) PARMS EXPECTED BY LIBRARY        SJB\n         CNOP  2,4                                                  SJB\nLIBPARM2 DC    AL2(L'LIBPARM3)     PARMS EXPECTED BY LIBRARY        SJB\nLIBPARM3 DC    C'NRJS,NJTA'        PARMS EXPECTED BY LIBRARY        SJB\nBLANKS2  DC    CL80' '             BLANKS                           SJB\nDASHES   DC    CL7'-------'        DASHES OR PRINTED                RPD\nRPLYECB  DC    F'0'                                                 RPD\nRPLYAREA DC    X'00'                                                RPD\nJULIANDY DC    CL3' '              JULIAN DATE                      RPD\nJULDTEPK DC    H'0'                PACKED JULIAN DATE               RPD\nRECRDCTR DC    H'0'                NON JCL SYSOUT RECORD COUNTER    RPD\nLMTMSGLN DC    H'40'               LENGTH OF SYSOUT LIMIT MESSAGE   RPD\n         DS    0D                                                   SJB\n         LTORG                                                      SJB\nPSODS    DC    C'PS0002'           PSO DATA SET IDENTIFIER          RPD\nIEF375I  DC    C'IEF375I'          'JOB START' MSG NUMBER\nIEF376I  DC    C'IEF376I'          'JOB STOP' MSG NUMBER\nIEF287I  DC    C'IEF287I'          'NOT CATALOGUED 2' MSG NUMBER\nIEF283I  DC    C'IEF283I'          'NOT DELETED 8' MSG NUMBER\nIEF251I  DC    C'IEF251I'          'JOB CANCELLED' MSG NUMBER\nIEF45    DC    C'IEF45'            FOR LOCATING JCL ERROR MSGS, ETC\nIIP026I  DC    C'+IIP026I'         EMULATOR 'WRITE, DATA CHECK' MSG NO.\nREPLY    DC    CL2'R '             START OF OPERATOR REPLY\nCANCEL   DC    C'CANCEL'           REQUIRED FOR SCAN (PRINT CRITERION)\nALLDS    DC    X'000102'           INDICATING 3 DATA SETS FOUND FOR JOB\n         SPACE 1                                                    RPD\nIEF142I  DC    C'IEF142I'          STEP END CONDITION CODE MESSAGE  RPD\nSPACEPID DC    C' '                SPACE FOR NON RESTRICT USER ID   RPD\nCC0000   DC    C'0000'             CONDITION CODE 0000              RPD\nCC0004   DC    C'0004'             CONDITION CODE 0004              RPD\nLASTCC   DC    C'    '             CONDITION CODE FROM LAST STEP    RPD\nCCCOMMON DC    C' - S'             COMMON CHAR. IN IEF142I MESSAGE  RPD\nCCJOBEND DC    C' - E'             COMMON CHAR. IN IEF451I MESSAGE  RPD\nABNDCOMM DC    C' - A'             COMMON CHAR. IN IEF450I MESSAGE  RPD\nOXYPROGM DC    C'OXYPROGM'         OXYPROGM PROGRAM NAME            RPD\nSTEPID   DC    C'*       STEP'     OXY JES2LOG STEP LINE IDENTIFIER RPD\nPROGID   DC    C'*       PROG'     OXY JES2LOG PROG LINE IDENTIFIER RPD\nSTEPFLSH DC    C'STEP FLUSHED'     STEP FLUSHED INDICATION          RPD\nLIMITMSG DC    C' **** LIBSPOOL SYSOUT LIMIT EXCEEDED ****'         RPD\nABNDMES  DC    C'** ABEND CODES HERE **'                            RPD\nCNCLMES  DC    C'*** JOB CANCELLED *** '                            RPD\nNOTCMES  DC    C'DATA SET NOT CATALOGED'                            RPD\nNOTDMES  DC    C' DATA SET NOT DELETED '                            RPD\nENDBYCC  DC    C'JOB ENDED BY CC = XXXX'                            RPD\nJCLERRM  DC    C'***** JCL ERROR ***** '                            RPD\nBADCMES  DC    C'MAX. COND. CODE = XXXX'                            RPD\nPRTDMES  DC    C'PRINTED - NOT EXECUTED'                            RPD\nPRTCMES  DC    C'PRINTED - PRINT MSGCLS'                            RPD\nPRTNOTDN DC    C'PRINTED - JOB NOT DONE'                            RPD\nENDLMMSG EQU   *\n         SPACE 1                                                    SJB\n         EJECT                                                      SJB\nOPTCARD  DC    CL9'-OPT '          LIBRARIAN OPT CARD KEYWORD       SJB\n         DC    C'NOPC,NOPR,NOEXEC'                                  SJB\n         DC    (80-(*-OPTCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nADDCARD  DC    CL9'-ADD '          LIBRARIAN ADD CARD KEYWORD       SJB\nADDJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               RPD\n         DC    C',NOCHK,UNCON,NOLIST,NORESEQ,SEQ=/81,8,10,10/'      SJB\n         DC    (80-(*-ADDCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nDLMCARD  DC    CL9'-DLM '          LIBRARIAN ADD CARD KEYWORD       SJB\nDLMJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               RPD\n         DC    (80-(*-DLMCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nSELCARD  DC    CL9'-SEL '          LIBRARIAN SEL CARD KEYWORD       SJB\nSELJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               RPD\n         DC    C',NOCHK,UNCON,NOLIST,NORESEQ,SEQ=/81,8,10,10/'      SJB\n         DC    (80-(*-SELCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nPGMCARD  DC    CL9'-PGMR '         LIBRARIAN PGMR CARD              SJB\nPGMJOBN  DC    CL08' '             JOBNAME                          SJB\nPGMUSER  DC    CL07' '             USERID                           SJB\n         DC    (80-(*-PGMCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nDSCCARD  DC    CL9'-DESC'          LIBRARIAN DESC CARD              SJB\nDSCJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               RPD\nDSCDATE  DC    C'YYDDD'            JOB START DATE                   SJB\nDSCTON   DC    C'HHMM'             JOB START TIME                   SJB\nDSCTOFF  DC    C'HHMM'             JOB STOP  TIME                   SJB\nDSCERROR DC    C'PRINTED'          NO ERROR ASSUMED                 SJB\nDSCMSGCL DC    C' '                MSGCLASS OF JOB                  RPD\n         DC    (80-(*-DSCCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nENDCARD  DC    CL9'-END  '         LIBRARIAN END  CARD              SJB\n         DC    (80-(*-ENDCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\n         EJECT                                                      SJB\nTITLE1   DC    CL90' '                                              RPD\n         ORG   TITLE1                                               SJB\n         DC    CL10'MODULE    '                                     SJB\n         DC    CL10'          '                                     SJB\n         DC    CL10'          '                                     SJB\n         DC    CL10'JOB START '                                     SJB\n         DC    CL10'JOB START '                                     SJB\n         DC    CL10'JOB STOP  '                                     SJB\n         DC    CL10'  JOB     '                                     RPD\n         DC    CL10'REROUTED  '                                     SJB\n         DC    CL10'LIBRARY   '                                     SJB\n         ORG   TITLE1+90                                            RPD\nTITLE2   DC    CL90' '                                              RPD\n         ORG   TITLE2                                               SJB\n         DC    CL10'NAME      '                                     SJB\n         DC    CL10'JOBNAME   '                                     SJB\n         DC    CL10'USERID    '                                     SJB\n         DC    CL10'DATE      '                                     SJB\n         DC    CL10'TIME      '                                     SJB\n         DC    CL10'TIME      '                                     SJB\n         DC    CL10'MSGCLASS  '                                     RPD\n         DC    CL10'TO PRINT  '                                     SJB\n         DC    CL10'ERROR     '                                     SJB\n         ORG   TITLE2+90                                            RPD\n         EJECT                                                      SJB\nINDCB    DCB   DDNAME=DUMMY,DSORG=PS,MACRF=GL,                      SJB*\n               EODAD=EOF,EROPT=ACC,SYNAD=SYNEXIT                    SJB\n         DS    0F                                                   SJB\nINDCBL   EQU   *-INDCB                                              SJB\n         EJECT                                                      SJB\nOUTDCB   DCB   DDNAME=SYSIN,DSORG=PS,MACRF=PM,                      SJB*\n               RECFM=FB,LRECL=80,BLKSIZE=6160                       SJB\n         DS    0F                                                   SJB\nOUTDCBL  EQU   *-OUTDCB                                             SJB\n         EJECT                                                      SJB\nOPEN     OPEN  (0),MF=L                                             SJB\nCLOSE    CLOSE (0),MF=L                                             SJB\n         SPACE 3                                                    SJB\nEOSNAP   EQU   *                   END OF STORAGE AREA TO BE SNAPPEDSJB\nDNAME    DS    CL8                 NAME LEFT JUSTIFIED              SJB\n         DROP  R11,R12,R6                                           SJB\n         EJECT                                                      SJB\nSSREQ    CSECT                                                      SJB\n         CONNECT LWORK3,WORK3,BASE=R12,CLEAR=YES,PARM=R11           SJB\n         USING WORK1,R11           USE MAIN TASK WORK AREA          SJB\n         USING SSOB,R10            GET ADDR. TO 1 SAVEAREA          SJB\n         LIBWTO 'ENTERED SSREQ'                                     SJB\n         LA    R10,LWASSOB         GET ADDRESS OF IEFSSREQ PARM     SJB\n*                                                                   SJB\n*              THE $FIRST FLAG MUST BE TURNED ON EACH TIME A NEW    SJB\n*              JOB IS TO BE SELECTED                                SJB\n*                                                                   SJB\n         TM    FLAG,$FIRST         IS THIS THE 1ST REQUEST          SJB\n         BNO   SSREQ1              NOPE                             SJB\n         NI    FLAG,255-$FIRST     TURN OFF FIRST FLAG              SJB\n*                                                                   SJB\n         MVC   DSFLAGS,=3X'FF'     INITILIZE DSFLAGS                SJB\n*                                                                   SJB\n         XC    LWASSOB,LWASSOB     CLEAR IT OUT                     SJB\n         ST    R10,LWASSPRM        SET SSOB ADDR                    SJB\n         MVI   LWASSPRM,X'80'      INDICATE LAST PARM               SJB\n*                                                                   SJB\n*              INITILIZE SSOB REQUEST BLOCK                         SJB\n*                                                                   SJB\n         MVC   SSOBID,=CL4'SSOB'   SSOB ID                          SJB\n         LA    R1,SSOBHSIZ                                          SJB\n         STH   R1,SSOBLEN          STORE IN LENGTH                  SJB\n         LA    R1,SSOBSOUT                                          SJB\n         STH   R1,SSOBFUNC         STORE IN FUNCTION                SJB\n         L     R1,LWASSIB@         GET SSIB ADDR                    SJB\n         ST    R1,SSOBSSIB         STORE IN SSIB ADDR               SJB\n         LA    R1,0                                                 SJB\n         ST    R1,SSOBRETN         STORE IN RETN CODE               SJB\n         LA    R1,SSSOBGN                                           SJB\n         ST    R1,SSOBINDV         STORE IN INDV ADDR               SJB\n*                                                                   SJB\n*              INITILIZE SSSO REQUEST BLOCK                         SJB\n*                                                                   SJB\n         LA    R1,SSSOSIZE+SSSOXSIZ                                 SJB\n         STH   R1,SSSOLEN          STORE IN SSSO LENGTH             SJB\n*                                                                   SJB\n*SSSODSID+....                                                      SJB\n*         +8 IS PROGRAMMER NAME                                     SJB\n*         +8+20 IS ACCOUNTING FIELDS                                SJB\n*         +8+20+37 IS USERID                                        SJB\n*                                                                   SJB\nSSSOPGMR EQU   SSSODSID+8,20       PROGRAMMER NAME                  SJB\nSSSOACCT EQU   SSSODSID+8+20,37    ACCOUNTING FIELDS                SJB\nSSSOUSER EQU   SSSODSID+8+20+37,7  USERID                           SJB\nSSSOXSIZ EQU   SSSOUSER+7-SSSOPGMR LENGTH OF EXTRA POOP             SJB\n*                                                                   SJB\n         MVI   SSSOFLG1,SSSOSCLS   SELECT BY CLASS                  SJB\n         OI    SSSOFLG1,SSSOHLD    SELECT BY HELD DSNS TOO          SJB\n*                                                                   SJB\n         MVC   SSSODEST,DEST       MOVE IN DESTINATION         06/17/83\n         CLC   SSSODEST,=CL8' '    WAS A DEST. SPECIFIED       06/17/83\n         BE    *+8                 NOPE, DONT SET SELECT/DEST  06/17/83\n         OI    SSSOFLG1,SSSODST    SELECT BY DEST                   SJB\n*                                                                   SJB\n         NI    SSSOFLG2,255-SSSOCTRL SUBSYSTEM TO RETURN A DATASET  SJB\n*                                                                   SJB\nPSOCLASS L     R1,CURMCLAD         LOAD ADDR. OF MSGCLASS TO GET    RPD\n         MVC   SSSOCLSL(1),0(R1)   MOVE IN THIS CLASS               RPD\n         MVI   SSSODSN,X'00'       INDICATE INITIAL ENTRY FOR IEFSSREQ\n         B     SSREQ2                                               SJB\n         EJECT                                                      SJB\nSSREQ1   DS    0H                                                   SJB\n*                                                                   SJB\n*              IF THIS IS NOT THE FIRST TIME THROUGH THEN           SJB\n*              TURN ON THE SELECT BY JOBID SO WE WILL GET ONLY      SJB\n*              SYSOUT FOR THE JOB THAT HAS BEEN SELECTED BY THE     SJB\n*              FIRST CALL. THIS INSURES THAT WE GET NOBODY ELSE     SJB\n*              UNTIL WE ARE THROUGH WITH THIS JOBIDS SYSOUT         SJB\n*                                                                   SJB\n         OI    SSSOFLG1,SSSOSJBI   SELECT BY JOB ID (JOB#)          SJB\nSSREQ2   DS    0H                                                   SJB\n         MVI   SSSORESV,X'01'      TELL JES2 TO FILL IN EXTRA POOP  SJB\n         SPACE 1                                                    SJB\n         MODESET MODE=SUP,KEY=ZERO GET INTO SUPERVISOR STATE        SJB\n         SPACE 1                                                    SJB\n         LA    R1,LWASSPRM         LOAD ADDRESS OF SSOB             SJB\n         SPACE 1                                                    SJB\n         IEFSSREQ                  ISSUE SUBSYSTEM REQUEST          SJB\n         SPACE 1                                                    SJB\n         STH   R15,RETCODE         SAVE IEFSSREQ RETURN CODE        SJB\n         MVC   LWASSIB@,SSOBSSIB                                    SJB\n         SPACE 3                                                    SJB\n         MODESET MODE=PROB,KEY=NZERO GET OUT OF SUPERVISOR STATE    SJB\n         SPACE 3                                                    SJB\n         LH    R15,RETCODE                                          SJB\n         RELEASE LWORK3,RC=(R15)                                    SJB\n         LTORG                                                      SJB\n         EJECT                                                      SJB\nWORK1    DSECT                                                      SJB\nSAVE1    DS    9D                                                   SJB\nLWASSPRM DS    A                   PARM FIELD FOR SSOB              SJB\nLWASSOB  DS    CL(SSOBLEN1+SSSOXSIZ)                                SJB\n         DS    0F                  EXTRA                            SJB\nRDRSTIME DS    XL8                 RDR START TIME/DATE OF JOB       SJB\nLWAOPEN  DS    F                                                    SJB\nLWACLOSE DS    F                                                    SJB\nLWASSIB@ DS    A                                                    SJB\nLWAUALTU DS    A                                                    SJB\nLWADCBIN DS    CL(INDCBL)                                           SJB\nLWADCBOT DS    CL(OUTDCBL)                                          SJB\nLWADCBRP DS    CL(RPTDCBL)                                          SJB\nDSFLAGS  DC    X'000102'           0=LOG, 1=JCL, 2=MSG DS PROCESSED SJB\nLWAPACK  DS    D                                               06/17/83\nSYSOUTMX DC    H'0'                MAX SYSOUT RECORD COUNT     06/17/83\nRECLASS  DC    C' '                RE-QUEUE CLASS              06/17/83\nPRODID   DC    C' '                PRODID CLASS OR BLANK       06/17/83\nDUMMYCLS DC    C' '                DUMMY SYSOUT CLASS          06/17/83\nMSGCLPRT DC    C' '                MSGCLASS - JCL PRINT ALWAYS 06/17/83\nDEST     DC    CL8' '              DESTINATION TO PROCESS      06/17/83\nMSGCLS   DC    CL8' '              MSGCLASSES TO BE PROCESSED  06/17/83\nMSGCLS99 DC    C' '                MUST BE BLANK               06/17/83\nFLAG     DS    X                   MULTI-PURPOSE FLAG BYTE          SJB\n$FIRST   EQU   X'80'               SET WHEN NEW JOB IS NEEDED       SJB\n$PRINT   EQU   X'40'               TO INDICATE JOB IS TO BE PRINTED SJB\n$CLOSING EQU   X'20'               TO INDICATE CLOSING OUT OF JOB   SJB\nFLAG2    DS    X                   MULTI-PURPOSE FLAG BYTE          SJB\n$TITLE   EQU   X'80'               INDICATE TITLE LINE TO PUT OUT   SJB\n$DEBUG   EQU   X'40'               TO INDICATE DEBUGGING            SJB\nFLAG3    DS    X                   FIRST OR NEXT SYSOUTS OF A JOB   RPD\n$FRSTPSO EQU   X'80'               INDICATE FIRST SYSOUT FOR JOB    RPD\nFLAG4    DS    X                   REASON FOR PRINTING FLAG         RPD\n$ABEND   EQU   X'80'               ABEND FOUND                      RPD\n$ENDEDCC EQU   X'40'               ENDED BY CONDITION CODE FOUND    RPD\n$JCLERR  EQU   X'20'               JCL ERROR FOUND                  RPD\n$CANCEL  EQU   X'10'               CANCEL FOUND                     RPD\n$NOTCAT  EQU   X'08'               NOT CATALOGUED FOUND             RPD\n$NOTDEL  EQU   X'04'               NOT DELETED FOUND                RPD\n$BADCC   EQU   X'02'               BAD CONDITION CODE FOUND         RPD\n$PRTMSGC EQU   X'01'               ALWAYS PRINT MSGCLASS ON JOB     RPD\nFLAG5    DS    X                   REASON FOR PRINTING FLAG         RPD\n$FNDCCMS EQU   X'80'               FOUND CONDITION CODE MESSAGE     RPD\n$ENDJOB  EQU   X'40'               FOUND $IEF376I MESSAGE FLAG      RPD\nSNAPID   DS    X                                                    SJB\nRETCODE  DS    H                   RETURN CODE                      SJB\nDSTYPE   DS    X                   DATA SET TYPE FLAG (LOG,JCL,MSG) SJB\nCARDOUT  DS    CL80                                                 SJB\nPARMCARD DS    CL80                                                 SJB\nLWACARD  DS    CL80                                                 SJB\nCURMCLAD DS    F                PTR TO CURRENT MSGCLASS             RPD\nLWORK1   EQU   *-WORK1                                              SJB\n*                                                                   SJB\nWORK2    DSECT                                                      SJB\nSAVE2    DS    9D                                                   SJB\nLWORK2   EQU   *-WORK2                                              SJB\n         SPACE 3                                                    SJB\nWORK3    DSECT                                                      SJB\nSAVE3    DS    9D                                                   SJB\nLWORK3   EQU   *-WORK3                                              SJB\n         SPACE 3                                                    SJB\nDIRECTRY DSECT                     LIB DIRECTORY ENTRY DSECT        SJB\nDPASS    DS    CL4                 PASSWORD                         SJB\nDADATE   DS    CL6                 ADDED DATE       MMDDYY          SJB\nDUDATE   DS    CL6                 LAST UPDATE DATE MMDDYY          SJB\nDCARDS   DS    PL3                 NUMBER OF CARDS                  SJB\nDPGMR    DS    CL15                PROGRAMMER NAME                  SJB\nDPROC    DS    CL8                 FIRST 8 BYTES OF PROC PARAMETER  SJB\nDDESC    DS    CL30                MODULE DESCRIPTION               SJB\nDCSEQ    DS    BL1                 STARTING COLUMN FOR SEQ          SJB\nDLSEQ    DS    BL2                 LENGTH OF SEQ                    SJB\nDISEQ    DS    BL2                 INCREMENT VALUE FOR SEQ          SJB\nDSSEQ    DS    BL2                 STARTING VALUE FOR SEQ           SJB\nDANUM    DS    BL2                 ACCESS NUMBER                    SJB\nDUNUM    DS    BL2                 UPDATE NUMBER                    SJB\nDENUM    DS    BL1                 EXTENT NUMBER                    SJB\nDBNUM    DS    BL1                 BLOCKS NUMBER                    SJB\nDLDATE   DS    CL6                 LAST ACCESS DATE   MMDDYY        SJB\nDFILL    DS    CL6                                                  SJB\n         EJECT                                                      SJB\nCOMMADDR DSECT                     POINTED TO BY COMMLPTR           SJB\nCOMMECB  DS    A                   POINTER TO COMMAND ECB           SJB\nCOMMCIB  DS    A                   POINTER TO COMMAND INPUT BUFFER  SJB\nCIB      DSECT ,                                               06/17/83\n         IEZCIB ,                                              06/17/83\n         SPACE 3                                                    SJB\n         CVT   DSECT=YES           CVT MAPPING                      SJB\n         EJECT                                                      SJB\n         IEFJESCT                  JES COMMUNICATION TABLE DSECT    SJB\n         EJECT                                                      SJB\n         IEFJSSOB (SO)             SSOB DSECT WITH PSO FUNCTION     SJB\n         EJECT                                                      SJB\n         IEFZB4D0                  SVC 99 REQUEST BLOCK DSECT       SJB\n         EJECT                                                      SJB\n         DCBD  DSORG=PS,DEVD=DA    DCB DSECT                        SJB\n         SPACE 3                                                    SJB\n         END   ,                                                    SJB\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLLIST9": {"ttr": 3079, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x83\\x16o\\x00\\x83\\x16o\\x16\\t\\x06\\xae\\x06\\xae\\x00\\x00\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1983-06-15T00:00:00", "modifydate": "1983-06-15T16:09:00", "lines": 1710, "newlines": 1710, "modlines": 0, "user": "SYSXKMB"}, "text": "*/ ***************************************************************** /*\n*                                                                     *\n*  LIBSPOOL - JES2 SYSMSG SPOOLING SYSTEM:  A LIBRARIAN EXTERNAL WTR  *\n*                                                                     *\n*/****************************************************************** /*\n*/*                                                                  */\n*/*                                                                  */\n*/*       WRITTEN BY :             SAM J. BASS              (SJB)    */\n*/*                                OCCIDENTAL SYSTEMS INC.           */\n*/*                                5 GREENWAY PLAZA EAST             */\n*/*                                HOUSTON, TEXAS 77046              */\n*/*                                (713) 840-2178                    */\n*/*                                                                  */\n*/*       DISCLAMER:               THIS PROGRAM HAS BEEN FULLY       */\n*/*                                TESTED AT OSI, BUT I CLAIM NO     */\n*/*                                RESPONSIBILITY FOR THIS PROGRAM   */\n*/*                                PROCESSING THE WRONG JES2         */\n*/*                                SYSOUT DATASETS                   */\n*/*                                                                  */\n*/*       MODIFIED BY :            ROBERT P DZIALAK         (RPD)    */\n*/*                                OCCIDENTAL CHEMICAL CORPORATION   */\n*/*                                360 RAINBOW BLVD. SOUTH           */\n*/*                                NIAGARA FALLS , NEW YORK 14303    */\n*/*                                (716) 286-3251                    */\n*/*                                                                  */\n*/****************************************************************** /*\n*/****************************************************************** /*\n* DATA NAME 'MSGCLIST' DEFINES THE MSGCLASSES TO BE SERVICED        RPD\n* INCLUDE ONLY MSGCLASSES TO BE USED                                RPD\n&RECLASS SETC  'J'                                                  SJB\n&PRODID  SETC  'P'   FIRST CHARACTER OF USERID                      RPD\n&DUMMYCLS SETC 'Z'   JES2 DUMMY SYSOUT CLASS                        RPD\n&SYSOUTMX SETA 750   RECORD LIMIT FOR EACH NON JCL SYSOUT           RPD\n&MSGCLCC0 SETC 'W'   MSGCLASS-PRINT IF ANY CONDITION CODE GREATER 0 RPD\n&MSGCLPRT SETC 'X'   MSGCLASS-PRINT JCL ALWAYS                      RPD\n         EJECT                                                      SJB\n*/ ***************************************************************** /*\n*                                                                     *\n*    SAMPLE STARTED TASK JCL:                                         *\n*                                                                     *\n*    //LIBSPOOL PROC DEBUG=                                           *\n*    //IEFPROC  EXEC PGM=JCLLIST,TIME=1439,PARM=&DEBUG                *\n*    //SYSPRINT DD  DUMMY                                             *\n*    //REPORT   DD  SYSOUT=A                                          *\n*    //SNAP     DD  SYSOUT=A                                          *\n*    //SYSABEND DD  SYSOUT=A                                          *\n*    //OSJOB    DD  DUMMY                                             *\n*    //MASTER   DD  DISP=SHR,DSN=SYSX.JCLLIST.LIBRARY                 *\n*    //SYSIN    DD  &&SYSIN,DISP=(NEW,DELETE),UNIT=SYSDA,             *\n*    //             SPACE=(CYL,(10,10)),                              *\n*    //             DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160)              *\n*                                                                     *\n*    NOTE THAT THE TASK WILL REMAIN IN AN 'OUTPUT LONG-WAIT' AND      *\n*    WILL ISSUE AN STIMER EVERY 10 SECONDS TO CHECK FOR THE PRESENCE  *\n*    OF ANY SYSOUT='MSGCLIST' CLASS OUTPUT.                           *\n*                                                                     *\n*        THE MODULE MUST BE MARKED AC=1 AND MUST RESIDE IN            *\n*        AN AUTHORIZED LIBRARY IFA STEPLIB IS USED OR MUST            *\n*        MUST BE IN A LINKLIST LIBRARY. THIS MODULE IS                *\n*        NOT REENTRANT.                                               *\n*                                                                     *\n*/ ================================================================= /*\n*                                                                     *\n*  OS MACROS USED BY THIS MODULE:                                     *\n*                                                                     *\n*  IEFSSREQ     EXTRACT      QEDIT        WAIT         GET     WTO    *\n*  IEFZB4D0     MODESET      SYNADRLS     TTIMER       SNAP    PUT    *\n*  IEFJESCT     DYNALLOC     SYNADAF      STIMER       OPEN    DCBD   *\n*  IEFJSSOB     QEDIT        DCB          CLOSE        CALL    WTOR   *\n*  CONNECT      RELEASE      LINK         LIBWTO                      *\n*                                                                     *\n*/ ================================================================= /*\n*                                                                     *\n*  UPON ISSUANCE OF AN OPERATOR PAUSE COMMAND, A WTO IS ISSUED BY     *\n*  JCLLIST THAT TERMINATION IS IN PROGRESS.                           *\n*                                                                     *\n*/ ================================================================= /*\n*                                                                     *\n*  NAMING CONVENTIONS OF MODULES PLACED ON THE LIBRARIAN SPOOL        *\n*                                                                     *\n*    TO INSURE UNIQUE LIBRARIAN NAMES, THE LIBSPOOL MODULE NAME       *\n*    IS CONSTRUCTED AS FOLLOWS:                                       *\n*                                                                     *\n*               BYTE  1   - LETTER A THRU Z                           *\n*               BYTES 2-4 - JULIAN DAY NUMBER                         *\n*               BYTES 5-8 - JES2 JOB NUMBER                           *\n*                                                                     *\n*    IF A MODULE IS FOUND TO ALREADY EXIST ON THE LIBSPOOL DATA SET   *\n*    THEN AN  'B' REPLACES THE A (ETC.) IN BYTE ONE.                  *\n*                                                                     *\n*/ ================================================================= /*\n*                                                                     *\n*  CRITERIA UPON WHICH JCLLIST WILL SET THE PRINT FLAG AND FORCE A    *\n*  JOB TO BE PRINTED AND WILL ALSO BE ADDED TO THE LIBRARIAN SPOOL)   *\n*                                                                     *\n*      ---------------------------------------------------------      *\n*      -*-  ANY OF THE FOLLOWING IBM MESSAGE IDENTIFICATIONS -*-      *\n*      ---------------------------------------------------------      *\n*                                                                     *\n*  IEF251I - JOB CANCELLED                                            *\n*  IEF283I - NOT DELETED X                                            *\n*  IEF287I - NOT RECTLGD/CATALGD/UNCATLGD                             *\n*  IEF450I - ABEND           IEF452I - JOBFAIL/JOB NOT RUN JCL ERROR  *\n*  IEF451I - ENDED BY CC     IEF453I - JOB FAILED - JCL ERROR         *\n*                                                                     *\n*              IF ANY ERRORS ARE FOUND THEN THE SYSOUT DATASETS       *\n*              ARE RELEASED FROM THE HOLD QUEUE.                      *\n*                                                                     *\n*  CONDITION CODES ARE ALSO CHECKED AS FOLLOWS:                       *\n*                                                                     *\n*            &MSGCLCC0  - JCL WILL BE PRINTED IF ANY STEP IN THE JOB  *\n*                         HAS A CONDITION CODE GREATER THAN 0.\n*                                                                     *\n*            &MSGCLPRT  - JCL WILL ALWAYS BE PRINTED                  *\n*                                                                     *\n*            MSGCLASS ? - ALL OTHER MSGCLASSES WILL BE PROCESSED      *\n*                         WITHOUT ANY CHECKING OF CONDITION CODES.    *\n*                                                                     *\n*/ ================================================================= /*\n*    THIS VERSION OF JCLLIST WILL COLLECT SYSOUTS #1,2,3,4 AND        *\n*    ANY OTHER SYSOUT OF THE JOB THAT MATCHES THE MESSAGE CLASS OF    *\n*    THE JOB. EG. //DDNAME DD SYSOUT=*                                *\n*/ ================================================================= /*\n*                                                                   SJB\n*              SNAPID              LOCATION                         SJB\n*                                                                   SJB\n*              1                   JCLLIST/GETDS    (SSREQ)         SJB\n*              2                   LIBMAIN/NEXTSSRQ (SSREQ)         SJB\n*              3                   LIBMAIN/CLOSBPSO (SSREQ)         SJB\n*              4                   LIBMAIN/ALLOCDS  (DYNALLOC)      SJB\n*              5                   LIBMAIN/LIBINIT  (SYSIN OPEN)    SJB\n*              6                   LIBMAIN/LIBFAIR  (BAD MASTOPN)   SJB\n*              7                   LIBMAIN/LIBFAIR  (BAD MASTMOD)   SJB\n*              8                   LIBMAIN/UNALLOC  (DYNALLOC)      SJB\n*              9                   LIBMAIN/OPENIN   (BAD OPEN PSO)  SJB\n*              10                  LIBMAIN/CLOSEOUT (BAD LIBRARY)   SJB\n*                                                                   SJB\n*                                                                     *\n*/ ================================================================= /*\n*                                                                   SJB\n         PUNCH ' SETCODE AC(1) '                                    SJB\n         PUNCH ' INCLUDE SYSLIB(TSOFAIR) '                          SJB\n         PUNCH ' ORDER JCLLIST,LIBMAIN,SSREQ,TSOFAIR '              SJB\nJCLL     TITLE 'LIBSPOOL: JCLLIST - LIBRARIAN/JES2 EXTERNAL WRITER' SJB\n         PRINT ON,GEN,NODATA                                        SJB\n         PRINT GEN                                                  SJB\n         MACRO                                                      SJB\n&LABEL   LIBWTO &MSG                                                SJB\n         LCLC  &ID                                                  SJB\n&ID      SETC  '&SYSNDX'                                            SJB\n&LABEL   TM    FLAG2,$DEBUG                                         SJB\n         BNO   WTO&ID                                               SJB\n         PUSH  PRINT                                                SJB\n*        WTO   &MSG                                                 SJB\n         PRINT OFF                                                  SJB\n         WTO   &MSG                                                 SJB\n         POP   PRINT                                                SJB\nWTO&ID   DS    0H                                                   SJB\n         MEND                                                       SJB\n         EJECT                                                      SJB\nJCLLIST  CSECT                                                      SJB\n         SPACE 3                                                    SJB\nR0       EQU   0                                                    SJB\nR1       EQU   1                                                    SJB\nR2       EQU   2                                                    SJB\nR3       EQU   3                                                    SJB\nR4       EQU   4                                                    SJB\nR5       EQU   5                                                    SJB\nR6       EQU   6                                                    SJB\nR7       EQU   7                                                    SJB\nR8       EQU   8                                                    SJB\nR9       EQU   9                                                    SJB\nR10      EQU   10                                                   SJB\nR11      EQU   11                                                   SJB\nR12      EQU   12                                                   SJB\nR13      EQU   13                  SAVE AREA POINTER                SJB\nR14      EQU   14                  BASE REG FOR SVC 99 PARAM        SJB\nR15      EQU   15                                                   SJB\n         EJECT                                                      SJB\n         CONNECT LWORK1,WORK1,BASE=R12,CLEAR=YES,PARM=R10           SJB\n         EJECT                                                      SJB\n         L     R1,0(,R10)          GET ADDR OF PARM FIELD           SJB\n         LH    R2,0(R1)            GET LENGTH OF PARM               SJB\n         LTR   R2,R2               ANY PARM                         SJB\n         BZ    NOPARM                                               SJB\n         C     R2,=F'80'           LENGTH > 80                      SJB\n         BL    *+8                 NO                               SJB\n         LA    R2,80               YES                              SJB\n         BCTR  R2,0                -1 FOR EXECUTE                   SJB\n         EX    R2,MVCPARM          MOVE IN PARM FIELDS              SJB\nNOPARM   EXTRACT COMMLPTR,FIELDS=COMM GET ADDR OF ECB AND CIB PTRS  SJB\n         SPACE 1                                                    SJB\n         L     R2,COMMLPTR         GET COMMAND LIST ADDRESS         SJB\n         USING COMMADDR,R2         ESTABLISH ADDRESSABILITY         SJB\n         LM    R9,R10,COMMADDR     GET COMMAND ECB AND CIB POINTERS SJB\n*        ST    R9,CMNDECBP         STORE ECB POINTER IN ECBLIST     SJB\n*        MVI   CMNDECBP,X'80'      INDICATE LAST ECB PTR IN LIST    SJB\n         ST    R9,CMDECBP2         STORE ECB POINTER IN OTHER ECBLISTJB\n         SPACE 1                                                    SJB\n         QEDIT ORIGIN=COMMCIB,BLOCK=(R10) FREE CIB                  SJB\n         QEDIT ORIGIN=COMMCIB,CIBCTR=1    INDICATE 1 CIB TO BE CHAINEDB\n         SPACE 2                                                    SJB\n         USING SSOB,R10            ESTABLISH ADDRESSABILITY         SJB\n         LA    R10,LWASSOB                                          SJB\n*                                                                   SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n*              MISCELLANEOUS INITIALIZATION                         SJB\n*                                                                   SJB\n         MVI   FLAG2,X'00'                                          SJB\n         CLC   =C'DEBUG',PARMCARD  IS IT DEBUG                      SJB\n         BNE   *+8                 NO                               SJB\n         OI    FLAG2,$DEBUG        YES, TURN ON FLAG                SJB\n*                                                                   SJB\n         OI    FLAG2,$TITLE                                         SJB\n*                                                                   SJB\n         MVC   LWADCBRP,RPTDCB     MOVE IN RPT DCB                  SJB\n         LA    R4,LWADCBRP                                          SJB\n         OPEN  ((R4),(OUTPUT))     OPEN IT                          SJB\n*                                                                   SJB\n         LA    R1,MSGCLIST         LOAD ADDR. OF BEGINNING MSGCLASS RPD\n         ST    R1,CURMCLAD         LIST AND INIT. ITS SAVE AREA     RPD\n         SPACE 3                                                    SJB\n*                                                                   SJB\nGETDS    DS    0H                                                   SJB\n*                                                                   SJB\n         MVI   FLAG,$FIRST         $FIRST ON, INITILIZE SSOB        SJB\n         MVI   FLAG3,$FRSTPSO      INDICATE WE ARE REQUESTING THE   RPD\n*                                  FIRST SYSOUT OF A NEW JOB        RPD\n*                                                                   SJB\n*              GO DO A SUB-SYSTEM REQUEST FOR NEW JOB               SJB\n*                                                                   SJB\n         L     R15,=A(SSREQ)                                        SJB\n         LA    R1,WORK1            POINT TO MAIN WORK AREA          SJB\n         BALR  R14,R15                                              SJB\n*                                                                   SJB\n*              END OF SUB-SYSTEM REQUEST                            SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n         MVI   SNAPID,1                                             SJB\n         LH    R15,RETCODE         GET IEFSSREQ RETURN CODE         SJB\n         LTR   R15,R15             SUBSYSTEM REQUEST SUCCESSFUL?    SJB\n         BNZ   SNAPIT              NO. TERMINATE WRITER             SJB\n*                                                                   SJB\n*              IF GOOD RC THEN GO  CALL LIBRARIAN                   SJB\n*                                                                   SJB\n         C     R15,SSOBRETN        DID WE GET A DATA SET FROM JES?  SJB\n         BE    CALLLIB             YES. GO CALL LIBRARIAN           SJB\n*                                                                   SJB\n         LA    R1,4                FOR 'COMPARE'                    SJB\n         C     R1,SSOBRETN         ARE WE OUT OF ELIGIBLE DATA SETS?SJB\n         BNE   SNAPIT              NO. SOMETHING WRONG. TERMINATE   SJB\n*                                                                   RPD\n*  ENTERING THIS CODE MEANS THAT NO OUTPUT EXISTED IN JES FOR THE   RPD\n*  MSGCLASS THAT WAS REQUESTED. THE NEXT CLASS IN THE LIST WILL NOW RPD\n*  BE LOOKED AT.                                                    RPD\n*                                                                   RPD\nCHGMSGCL L     R1,CURMCLAD         LOAD ADDRESS OF CURRENT MSGCLASS RPD\n         LA    R1,1(R1)            INCREMENT TO THE NEXT CLASS      RPD\n         ST    R1,CURMCLAD         SAVE THIS ADDRESS                RPD\n         CLI   0(R1),C' '          ARE WE AT THE END OF THE LIST    RPD\n         BNE   SETWAIT             NOT YET                          RPD\n         LA    R1,MSGCLIST         LOAD ADDR. OF BEGINNING OF LIST  RPD\n         ST    R1,CURMCLAD         SAVE THIS ADDRESS                RPD\n*\nSETWAIT  DS    0H                                                   SJB\n         SPACE 1                                                    SJB\n         MODESET KEY=ZERO          GET INTO KEY ZERO                SJB\n         SPACE 1                                                    SJB\n*                                                                   SJB\nWAIT     DS    0H                                                   SJB\n         STIMER REAL,POSTWAIT,BINTVL=WTIME TO KILL SOME TIME        SJB\n         SPACE 1                                                    SJB\n         MVI   STIMRECB,X'00'      CLEAR ECB                        SJB\n         L     R2,ECBL2PTR         POINT TO SECOND ECBLIST          SJB\n         SPACE 1                                                    SJB\n         WAIT  1,ECBLIST=(R2),LONG=YES WAIT FOR WORK, CMND, STIMER EXIT\n         SPACE 1                                                    SJB\n*                                                                   SJB\n         TM    STIMRECB,X'40'      WERE WE POSTED BY STIMER EXIT?   SJB\n         LA    R3,GETDS            PREPARE TO REQUEST A DATA SET IF YES\n         BO    RESETPK             YES. GET OUT OF KEY 0 AND CONTINUEJB\n         SPACE 1                                                    SJB\n         TTIMER CANCEL             CANCEL REMAINDER OF TIMER INTERVALJB\n         SPACE 1                                                    SJB\nCHKCMND  L     R2,CMDECBP2         GET COMMAND ECB ADDRESS          SJB\n         TM    0(R2),X'50'         DID OPERATOR ENTER A COMMAND?    SJB\n         MVI   0(R2),X'00'         CLEAR ECB IN ANY EVENT           SJB\n         LA    R3,STOPWTR          PREPARE TO TERMINATE IF STOP CMNDSJB\n         BO    RESETPK             IT IS. GET OUT OF KEY 0 AND HALT SJB\n         LA    R3,FREECIB          PREPARE TO FREE CIB IF MODIFY CMNDJB\n         BM    RESETPK             FREE CIB AND GO REQUEST A DATA SETJB\n         B     WAIT                GO WAIT FOR CMND OR END OF INTERVALB\n         SPACE 1                                                    SJB\n         SPACE 1                                                    SJB\nFREECIB  L     R2,COMMLPTR         GET COMMAND LIST ADDRESS         SJB\n         L     R3,COMMCIB          GET CIB POINTER                  SJB\n         SPACE 1                                                    SJB\n         QEDIT ORIGIN=COMMCIB,BLOCK=(R3) FREE CIB                   SJB\n         QEDIT ORIGIN=COMMCIB,CIBCTR=1   INDICATE 1 CIB TO BE CHAINEDJB\n         SPACE 1                                                    SJB\n         B     GETDS               GO REQUEST A DATA SET FROM JES   SJB\n         SPACE 2                                                    SJB\nRESETPK  DS    0H                                                   SJB\n         MODESET KEY=NZERO         GET OUT OF KEY ZERO              SJB\n         SPACE 1                                                    SJB\n         BR    R3                  CONTINUE AS DETERMINED EARLIER   SJB\n         DROP  R2                                                   SJB\n         EJECT                                                      SJB\nCALLLIB  DS    0H                                                   SJB\n         LIBWTO 'ENTERED CALLLIB'                                   SJB\n*                                                                   SJB\n         LA    R1,WORK1            PASS WORK AREA ADDR              SJB\n         L     R15,=A(LIBMAIN)                                      SJB\n         BALR  14,15               CALL LIBRARIAN                   SJB\n*                                                                   SJB\n*              SNAPID IS SET IN LIBMAIN ROUTINE                     SJB\n*                                                                   SJB\n         LTR   R15,R15             WAS CALL GOOD?                   SJB\n         BNZ   SNAPIT              NO GO SNAP                       SJB\n*                                                                   SJB\n         LIBWTO 'EXIT    CALLLIB'                                   SJB\n*                                                                   RPD\n         TM    FLAG3,$FRSTPSO      CHECK IF JOB WAS PROCESSED       RPD\n         BO    CHGMSGCL            NO. GO WAIT THEN CHANGE MSGCLASS RPD\n*                                                                   RPD\n         B     GETDS               NO. GO WAIT FOR WORK OR OPER CMNDSJB\n         EJECT                                                      SJB\nSTOPWTR  OI    SSSOFLG2,SSSOCTRL   INDICATE WRITER TERMINATING      SJB\n         SPACE 1                                                    SJB\n         MODESET MODE=SUP          GET INTO SUPERVISOR STATE        SJB\n         SPACE 1                                                    SJB\n         LA    R1,LWASSPRM         LOAD ADDRESS OF SSOB             SJB\n         SPACE 1                                                    SJB\n         IEFSSREQ                  TELL SUBSYSTEM WE ARE SHUTTING DOWNB\n         SPACE 1                                                    SJB\n         MODESET MODE=PROB         GET OUT OF SUPERVISOR STATE      SJB\n         SPACE 2                                                    SJB\nENDWTR   WTO 'LIBSPOOL:  JCLLIST IS SHUTTING DOWN',ROUTCDE=2,DESC=4 SJB\n         SPACE 1                                                    SJB\n         B     MAINRET                                              SJB\nMAINRET  DS    0H                                                   SJB\n         LA    R4,LWADCBRP         ADDR OR REPORT DCB               SJB\n         CLOSE ((R4))              CLOSE REPORT FILE                SJB\n         FREEPOOL ((R4))                                            RPD\n         LH    R15,RETCODE         RELOAD RETCODE                   SJB\n         RELEASE LWORK1,RC=(15)                                     SJB\n         SPACE 2                                                    SJB\nSNAPIT   DS    0H                                                   SJB\n         LA    R4,SNAPDCB                                           SJB\n         OPEN  ((R4),(OUTPUT))     FOR SNAP, FOLLOWING              SJB\n         SPACE 1                                                    SJB\n         LA    R2,0(,R13)                                           SJB\n         LA    R3,LWORK1(,R13)                                      SJB\n         SR    R5,R5                                                SJB\n         IC    R5,SNAPID                                            SJB\n         SNAP  DCB=SNAPDCB,ID=(5),PDATA=ALL,                        SJBX\n               STORAGE=((2),(3))                                    SJB\n         SPACE 1                                                    SJB\n         B     STOPWTR             TERMINATE WRITER                 SJB\n         PUSH  USING               SAVE BASE REGISTER INFORMATION   SJB\n         DROP  R12                 DROP PROGRAM BASE REGISTERS      SJB\n         EJECT                                                      SJB\nPOSTWAIT EQU   *                   STIMER EXIT                      SJB\n         USING POSTWAIT,R15        ESTABLISH ADDRESSABILITY         SJB\n         STM   R14,R12,12(R13)     SAVE REGISTERS                   SJB\n         SPACE 1                                                    SJB\n         POST  STIMRECB            INDICATE END OF INTERVAL         SJB\n         SPACE 1                                                    SJB\n         LM    R14,R12,12(R13)     RESTORE REGISTERS                SJB\n         BR    R14                 RETURN TO SYSTEM                 SJB\n         SPACE 1                                                    SJB\n         POP   USING               RESTORE PREVIOUS BASE REG STATUS SJB\n         EJECT                                                      SJB\nMVCPARM  MVC   PARMCARD(*-*),2(R1) MOVE IN PARM FIELD               SJB\nCOMMLPTR DC    A(0)                PTR FROM EXTRACT (TO ECB & CIB PTRS)\n*                                                                   SJB\nCMNDECBP DC    X'80',AL3(0)        PTR TO ECB POSTED WHEN CMD ISSUE SJB\n*                                                                   SJB\nECBL2PTR DC    A(CMDECBP2)         PTR TO SECOND ECBLIST            SJB\nCMDECBP2 DC    A(0)                PTR TO COMMAND ECB               SJB\nTIMRECBP DC    X'80',AL3(STIMRECB) PTR TO ECB POSTED BY STIMER EXIT SJB\nSTIMRECB DC    F'0'                ECB POSTED BY STIMER EXIT        SJB\nWTIME    DC    F'1000'             10 SECOND INTERVAL FOR STIMER    RPD\nBLANKS   DC    CL80' '             BLANKS                           SJB\n*\nMSGCLIST DC    CL8'WX      '    STRING OF MSGCLASSES TO BE SERVICED RPD\nMSGCLSTP DC    C' '             STOP BYTE FOR MSGCLASS STRING       RPD\n*\n         LTORG                                                      SJB\n         EJECT                                                      SJB\nSNAPDCB  DCB   DDNAME=SNAP,DSORG=PS,MACRF=W,                        SJB*\n               RECFM=VBA,LRECL=125,BLKSIZE=882                      SJB\n         EJECT                                                      SJB\nRPTDCB   DCB   DDNAME=REPORT,DSORG=PS,MACRF=PM,                     SJB*\n               RECFM=FB,LRECL=90,BLKSIZE=6210                       SJB\n         DS    0F                                                   SJB\nRPTDCBL  EQU   *-RPTDCB                                             SJB\n         DROP  R12                 DROP PROGRAM BASE REGISTERS      SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n*        LIBMAIN - DOES PROCESSING OF ALL DATA FOR 1 JOB ONLY       SJB\n*                                                                   SJB\n*        REG   INPUT               USAGE                            SJB\n*                                                                   SJB\n*        R1    PARM REG            PARM/WORK REG                    SJB\n*        R2    N/A                 LIBPUT RECORD ADDR               SJB\n*        R3    N/A                 LENGTH OF INPUT RECORD           SJB\n*        R4    N/A                 WORK REG                         SJB\n*        R5    N/A                 ADDR OF INPUT RECORD             SJB\n*        R6    N/A                 BASE REG #2                      SJB\n*        R7    N/A                 BAL  REG FOR LIBPUT              SJB\n*        R8    N/A                 BAL  REG FOR READNEXT            SJB\n*        R9    N/A                 BAL  REG FOR OTHER ROUTINES      SJB\n*        R10   N/A                 BASE REG FOR SSOB                SJB\n*        R11   N/A                 BASE REG FOR WORK1 DSECT         SJB\n*        R12   N/A                 BASE REG #1                      SJB\n*        R13   N/A                 SAVE AREA REG                    SJB\n*        R14   RETURN ADDR         BALR REG                         SJB\n*        R15   ENTRY POINT         BALR REG/ RETURN CODE            SJB\n         SPACE 3                                                    SJB\nLIBMAIN  CSECT                                                      SJB\n         CONNECT LWORK2,WORK2,BASE=(R12,R6),CLEAR=YES,PARM=R11      SJB\n         EJECT                                                      SJB\n         USING SSOB,R10            ESTABLISH ADDRESSABILITY         SJB\n         USING WORK1,R11           GET ADDR. TO 1 SAVEAREA          SJB\n         LA    R10,LWASSOB         ADDR OF SSOB                     SJB\n         LIBWTO 'ENTERED LIBMAIN'                                   SJB\n*                                                                   SJB\n         TM    FLAG2,$TITLE        IS TITLE REQUIRED NOW            SJB\n         BNO   NOTITLE             NO,                              SJB\n         LA    R2,TITLE1                                            SJB\n         BAL   R7,RPTPUT                                            SJB\n         LA    R2,TITLE2                                            SJB\n         BAL   R7,RPTPUT                                            SJB\n         NI    FLAG2,255-$TITLE    TURN OFF TITLE FLAG              SJB\nNOTITLE  DS    0H                                                   SJB\n*                                                                   RPD\n         CLI   SPACEPID,C'&PRODID' IS &PRODID = SPACE               RPD\n         BE    INITLOOP            YES, DO NOT RESTRICT USER ID     RPD\n         CLI   SSSOUSER,C'&PRODID' IS FIRST CHARACTER OF USER ID =P RPD\n         BE    INITLOOP            YES, PROCESS THIS JOB            RPD\n         OI    FLAG,$CLOSING       TURN ON CLOSING FLAG             RPD\n         MVI   FLAG3,X'00'         TURN OFF FIRST REQ. FLAG         RPD\n         BAL   R9,ALLOCDS          GO ALLOCATE IT                   RPD\n         BAL   R9,FREEREQD         FREE SYSOUT AND REQ TO DUMMY     RPD\n         B     CLOSNRPT            GO DELETE ALL THE OTHER SYSOUTS  RPD\n*                                  FOR THIS JOB.                    RPD\n*                                                                   SJB\n         EJECT                                                      SJB\nINITLOOP DS    0H                                                   SJB\n         MVI   FLAG4,X'00'         TURN OFF PRINTING REASON FLAG4   RPD\n         MVI   FLAG5,X'00'         TURN OFF PRINTING REASON FLAG5   RPD\n         BAL   R9,LIBINIT          INIT, SINCE THIS IS FIRST TIME   SJB\nALLOCLOP DS    0H                                                   SJB\n         BAL   R9,ALLOCDS          GO ALLOCATE IT                   SJB\n*                                  FOR THIS JOB AND SET R8          SJB\n         TM    FLAG3,$FRSTPSO      DID WE GET JCL FOR THIS JOB      RPD\n         BNO   OPENLOOP            YES,OPEN AND LOOK AT THE RECORDS RPD\n         BAL   R9,FREEKEEP         FREE THIS SYSOUT                 RPD\n         MVC   LWACLOSE,CLOSE                                       RPD\n         CLOSE (LWADCBOT),MF=(E,LWACLOSE)  CLOSE SYSIN FILE         RPD\n         FREEPOOL LWADCBOT                                          RPD\n         RELEASE LWORK2,RC=0       RETURN WITH SWITCH TO            RPD\n*                                  $FRSTPSO ON TO SHOW WE SHOULD    RPD\n*                                  WAIT THEN GET NEXT MSGCLASS      RPD\nOPENLOOP DS    0H                                                   SJB\n         BAL   R9,OPENIN           OPEN INPUT FILE                  SJB\n*                                                                   SJB\nREADNEXT GET   LWADCBIN            GET RECORD ADDR                  SJB\n         LR    R5,R1               SAVE INPUT RECORD ADDR           SJB\n*                                                                   SJB\n         LA    R1,LWADCBIN                                          SJB\n         USING IHADCB,R1                                            SJB\n         LH    R3,DCBLRECL         GET INPUT RECORD LENGTH          SJB\n         DROP  R1                                                   SJB\n*                                                                   SJB\n         LA    R2,CARDOUT          GET CARD OUTPUT ADDR             SJB\n         MVC   CARDOUT,BLANKS2                                      SJB\n*              R8 IS INITIALLY SET IN ALLOCDS FOR PSO# 2,3,4        SJB\n*              AND THE CHECK ROUTINE SETS IT ALSO                   SJB\n         BR    R8                  GO TO CHECK ROUTINE              SJB\n*              AND WRITE THE OUTPUT RECORDS                         SJB\n         EJECT                                                      SJB\nEOF      DS    0H                                                   SJB\n         LIBWTO 'ENTERED EOF     '                                  SJB\n*                                                                   SJB\n         MVC   LWACLOSE,CLOSE                                       SJB\n         LA    R4,LWADCBIN                                          SJB\n         CLOSE ((R4)),MF=(E,LWACLOSE) CLOSE INPUT FILE              SJB\n         FREEPOOL ((R4))                                            RPD\n         SPACE 2                                                    SJB\n*                                                                   SJB\n         BAL   R9,FREEKEEP         FREE KEEP PSO                    SJB\n*                                                                   SJB\n*              GET NEXT PSO#                                        SJB\n*                                                                   SJB\n         B     NEXTSSRQ            GET NEXT PSO FOR THIS JOB        SJB\n*                                                                   SJB\nNEXTSSRQ DS    0H                                                   SJB\n         LIBWTO 'ENTERED NEXTSSRQ'                                  SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n*                                                                   SJB\n*              GO DO A SUB-SYSTEM REQUEST                           SJB\n*                                                                   SJB\n         L     R15,=A(SSREQ)                                        SJB\n         LA    R1,WORK1            POINT TO MAIN WORK AREA          SJB\n         BALR  R14,R15                                              SJB\n*                                                                   SJB\n*              END OF SUB-SYSTEM REQUEST                            SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n         MVI   SNAPID,2                                             SJB\n         LH    R15,RETCODE         GET IEFSSREQ RETURN CODE         SJB\n         LTR   R15,R15             SUBSYSTEM REQUEST SUCCESSFUL?    SJB\n         BNZ   SNAPIT2             NO. TERMINATE WRITER             SJB\n*                                                                   SJB\n         C     R15,SSOBRETN        DID WE GET A DATA SET FROM JES?  SJB\n         BE    ALLOCLOP            YES. GO ALLOC IT                 SJB\n*                                                                   SJB\n         LA    R1,4                FOR 'COMPARE'                    SJB\n         C     R1,SSOBRETN         ARE WE OUT OF ELIGIBLE DATA SETS?SJB\n         BNE   SNAPIT2             NO. SOMETHING WRONG. TERMINATE   SJB\n         B     NOPSOLFT            NO PSO DSN LEFT                  SJB\n         SPACE 3                                                    SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n*                                                                   SJB\nNOPSOLFT DS    0H                                                   SJB\n         LIBWTO 'ENTERED NOPSOLFT'                                  SJB\n         CLC   DSFLAGS,ALLDS       DID WE PROCESS 2,3,4 PSO         SJB\n         BE    CLOSEOUT            YES, THEN CLOSEOUT               SJB\n         OI    FLAG,$PRINT         NOPE, THEN TURN ON PRINT FLAG    SJB\n         B     CLOSEOUT                                             SJB\nCLOSEOUT DS    0H                                                   SJB\n         LIBWTO 'ENTERED CLOSEOUT'                                  SJB\n         MVC   DSCERROR,DASHES     ASSUME NO PRINT ERROR            RPD\n         TM    FLAG,$PRINT         SEE IF NOT ALLDS OR JCL ERROR    SJB\n         BNO   CLOSNERR                                             SJB\n         MVC   DSCERROR,=C'PRINTED' MOVE IN ERROR FLAG              SJB\nCLOSNERR LA    R2,SELCARD          -SEL  CARD                       SJB\n         BAL   R7,LIBPUT           PUT IT OUT                       SJB\n         LA    R2,DSCCARD          -DESC CARD                       SJB\n         BAL   R7,LIBPUT           PUT IT OUT                       SJB\n         LA    R2,ENDCARD          -END  CARD                       SJB\n         BAL   R7,LIBPUT           PUT IT OUT                       SJB\n*                                                                   SJB\n         MVC   LWACLOSE,CLOSE                                       SJB\n         LA    R4,LWADCBOT                                          SJB\n         CLOSE ((R4)),MF=(E,LWACLOSE)                               SJB\n         FREEPOOL ((R4))                                            RPD\n         OI    FLAG,$CLOSING       INDICATE WE ARE CLOSING          SJB\n*                                                                   SJB\n         LA    R1,LIBPARM                                           SJB\n         LINK  EP=LIBRARY          LINK TO LIBRARY                  SJB\n         LR    R5,R15              SAVE R15                         SJB\n*                                                                   SJB\n         LA    R4,LWADCBRP         ADDR OR REPORT DCB               SJB\n         USING IHADCB,R4                                            SJB\n         TM    DCBOFLGS,DCBOFOPN   DID OPEN WORK?                   SJB\n         DROP  R4                                                   SJB\n         BNO   CLOSNRPT            NO                               SJB\n         MVC   CARDOUT,BLANKS2                                      SJB\n         MVC   CARDOUT+00(8),ADDJOB MOVE IN MEMBER NAME             RPD\n         MVC   CARDOUT+10(8),PGMJOBN MOVE IN JOBNAME                SJB\n         MVC   CARDOUT+20(7),PGMUSER MOVE IN USERID                 SJB\n         MVC   CARDOUT+30(5),DSCDATE MOVE IN JOB BEGIN DATE         SJB\n         MVC   CARDOUT+40(4),DSCTON  MOVE IN JOB BEGIN TIME         SJB\n         MVC   CARDOUT+50(4),DSCTOFF MOVE IN JOB STOP  TIME         SJB\n         MVC   CARDOUT+63(1),DSCMSGCL MOVE IN MSGCLASS              RPD\n         MVC   CARDOUT+70(7),DSCERROR MOVE IN ERROR FLAG            SJB\n*                                                                   RPD\n         MVC   DSCDATE(5),=C'YYDDD' REINITIALIZE FOR NEXT JOB. THE  RPD\n         MVC   DSCTON(4),=C'HHMM'   NEXT JOB MAY NOT BE SCHDULED    RPD\n         MVC   DSCTOFF(4),=C'HHMM'  NO IEF375I AND IEF376I MESSAGES RPD\n*                                   WILL BE FOUND.                  RPD\n         LTR   R5,R5                                                SJB\n         BZ    CLOSEMSG                                             SJB\n         MVC   CARDOUT+80(10),=CL10'LIB ERROR'                      SJB\n         WTO 'LIBSPOOL: JCLLIST HAS LIBRARY ERROR',ROUTCDE=2,DESC=4 SJB\n         MVI   SNAPID,10           SET SNAP NUMBER                  SJB\n         STH   R5,RETCODE          SAVE RETURN CODE                 SJB\nCLOSEMSG LA    R4,LWADCBRP                                          SJB\n         PUT   (R4),CARDOUT                                         SJB\n         CLI   SNAPID,10           WAS THERE A LIBRARY ERROR        SJB\n         BE    SNAPIT2             YES, THEN TERMINATE              SJB\nCLOSNRPT DS    0H                                                   SJB\n*                                                                   SJB\n         MVI   SSSODSN,X'00'       INDICATE NEW JOB GROUP           SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n*              ONCE WE GET TO THIS POINT ALL SYSOUTS OF THE         RPD\n*              JOB WHICH MATCH THE MSGCLASS OF THE JOB WILL         RPD\n*              STILL BE AROUND.                                     RPD\n*                                                                   RPD\n*              FOR THESE PSO'S, RE-AQUIRE PSO, ALLOC AND            RPD\n*              FREE-REQR IF $PRINT ERROR FLAG OR                    RPD\n*              FREE-DEL  IF NO ERROR                                RPD\n*                                                                   SJB\n         LA    R5,999              LOAD MAX LOOP COUNT              SJB\nCLOSLOOP DS    0H                                                   SJB\nCLOSBPSO DS    0H                  RETURN FROM ALLOCDS IF           SJB\n*                                  BADPSO# ENCOUNTERED (BAD PSO     SJB\n*                                  HAS BEEN FREE-RLSE)              SJB\n*                                                                   SJB\n*              GO DO A SUB-SYSTEM REQUEST                           SJB\n*                                                                   SJB\n         L     R15,=A(SSREQ)                                        SJB\n         LA    R1,WORK1            POINT TO MAIN WORK AREA          SJB\n         BALR  R14,R15                                              SJB\n*                                                                   SJB\n*              END OF SUB-SYSTEM REQUEST                            SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n         MVI   SNAPID,3                                             SJB\n         LH    R15,RETCODE         GET IEFSSREQ RETURN CODE         SJB\n         LTR   R15,R15             SUBSYSTEM REQUEST SUCCESSFUL?    SJB\n         BNZ   SNAPIT2             NO. TERMINATE WRITER             SJB\n*                                                                   SJB\n         C     R15,SSOBRETN        DID WE GET A DATA SET FROM JES?  SJB\n         BE    CLOSALOC            YES. GO ALLOC IT                 SJB\n*                                                                   SJB\n         LA    R1,4                FOR 'COMPARE'                    SJB\n         C     R1,SSOBRETN         ARE WE OUT OF ELIGIBLE DATA SETS?SJB\n         BNE   SNAPIT2             NO. SOMETHING WRONG. TERMINATE   SJB\n         B     LIBRET              NO PSO DSN LEFT                  SJB\n*                                                                   SJB\nCLOSALOC DS    0H                                                   SJB\n         BAL   R9,ALLOCDS          ALLOC DSN                        SJB\n         TM    FLAG,$PRINT         WAS THERE AN ERROR               SJB\n         BO    CLOSRLSE            YES, DO FREE RLSE, REQUEUECLS    SJB\n         TM    FLAG5,$FNDCCMS      WAS CONDITION CODE MESSAGE FOUND RPD\n         BNO   CLOSRLSE            NO ABEND OR NORMAL STEP COMPLETE RPD\n*                                  IN JOB-PRINT JCL                 RPD\n         BAL   R9,FREEREQD         FREE REQUEUE TO DUMMY CLASS      RPD\n*        BAL   R9,FREEDEL          ELSE, DO FREE DELETE             SJB\n         B     CLOSINCR            GO TO BCT                        SJB\nCLOSRLSE DS    0H                                                   SJB\n         BAL   R9,FREEREQR         FREE REQUEUE CLASS RLSE          SJB\nCLOSINCR DS    0H                                                   SJB\n         BCT   R5,CLOSLOOP         GO TO IT                         SJB\n         B     LIBRET                                               SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n         EJECT                                                      SJB\nLIBRET   DS    0H                                                   SJB\n         LIBWTO 'ENTERED LIBRET'                                    SJB\n*        MVC   LWACLOSE,CLOSE                                       SJB\n*        CLOSE (LWADCBOT),MF=(E,LWACLOSE)                           SJB\n         RELEASE LWORK2,RC=0                                        SJB\n         SPACE 3                                                    SJB\nLIBRET2  DS    0H                                                   SJB\n         LIBWTO 'ENTERED LIBRET2'                                   SJB\n*                                                                   SJB\n         MVC   LWACLOSE,CLOSE                                       SJB\n         CLOSE (LWADCBOT),MF=(E,LWACLOSE)                           SJB\n         FREEPOOL LWADCBOT                                          RPD\n*                                                                   SJB\n         LH    R15,RETCODE                                          SJB\n         LTR   R15,R15             IS R15 > 0                       SJB\n         BNP   *+8                 YES                              SJB\n         LA    R15,32              NOPE, GIVE A BAD RETCODE         SJB\n         RELEASE LWORK2,RC=(15)                                     SJB\n         EJECT                                                      SJB\nALLOCDS  DS    0H                                                   SJB\n*                                                                   SJB\n*              ENTERED BY A        BALR   R9,ALLOCDS                SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED ALLOCDS'                                   SJB\n         MVC   CARDOUT(44),SSSODSN                                  SJB\n         LA    R2,CARDOUT                                           SJB\n         BAL   R7,RPTPUT2                                           SJB\n*                                                                   SJB\n         MVC   ALDDNAM,BLANKS2     MOVE BLANKS TO DDNAME            SJB\n         MVC   ALDSN,SSSODSN       MOVE DSNAME INTO ALLOCATE TEXT U SJB\n         USING S99RB,R14           ESTABLISH ADDRESSABILITY         SJB\n         LA    R14,S99AREA         SET UP SVC 99 PARM AREA BASE REG SJB\n         MVI   S99VERB,S99VRBAL    INDICATE ALLOC. TO BE PERFORMED  SJB\n         LA    R1,ALTUPTR          ADDR OF ALLOCATION TEXT UNIT PTRSSJB\n         ST    R1,S99TXTPP         STORE IN SVC 99 REQUEST BLOCK    SJB\n         LA    R1,S99PARM          LOAD ADDRESS OF SVC 99 PARM AREA SJB\n         DROP  R14                                                  SJB\n         SPACE 1                                                    SJB\n         DYNALLOC                  PERFORM DYNAMIC ALLOCATION       SJB\n         SPACE 1                                                    SJB\n         STH   R15,RETCODE         SAVE SVC 99 RETURN CODE          SJB\n         MVI   SNAPID,4            IDENTIFY SNAP ORIGIN             SJB\n         LTR   R15,R15             TEST SVC 99 RETURN CODE          SJB\n         BNZ   SNAPIT2             NO GOOD. SNAP AND TERMINATE      SJB\n         SPACE 2                                                    SJB\n*                                                                   SJB\n         MVC   CARDOUT(44),SSSODSN                                  SJB\n         LA    R2,CARDOUT                                           SJB\n         BAL   R7,RPTPUT2                                           SJB\n*                                                                   SJB\n         CLC   SSSODSN+14(5),PSODS IS THIS A PSO DATA SET?          SJB\n         BNE   BADPSO#             NO. GO DELETE IT                 SJB\n         CLI   SSSODSN+19,C'1'     DETERMINE IF THIS                RPD\n         BL    BADPSO#                IS A DATA SET WE              SJB\n         CLI   SSSODSN+19,C'4'           WISH TO PROCESS            SJB\n         BH    BADPSO#             IE PSO #2(LOG), #3(JCL), #4(MSG) SJB\n*                                  PSO #1(JCL)-NOT INTERPRETED(ACF) RPD\n*                                                                   RPD\n         MVI   FLAG3,X'00'         INDICATE JCL GOTTEN FOR THIS JOB RPD\n*                                                                   SJB\n*              STORE PSO# RELATIVE TO 0 IN DSTYPE                   SJB\n*                                                                   SJB\n         TM    FLAG,$CLOSING       ARE WE CLOSEING                  SJB\n         BO    ALLOCDS1            YES                              SJB\n*                                                                   SJB\n         CLI   SSSODSN+19,C'1'     PSO #1-JOB NOT INTERPRETED (ACF) RPD\n         BNE   PSO234              PAST INTERPRETATION              RPD\n         LA    R8,OTHERDS          BRANCH ADDRESS FOR OTHER SYSOUTS RPD\n         B     ALLOCDS0            CONTINUE                         RPD\n*                                                                   SJB\nPSO234   XR    R4,R4               CLEAR                            SJB\n         IC    R4,SSSODSN+19       GET PSO NUMBER (EBCDIC)          SJB\n         LA    R1,242              CONVERT PSO NUMBER TO BINARY AND SJB\n         SR    R4,R1               CHANGE SCALE: 0=LOG, 1=JCL, 2=MSGSJB\n         STC   R4,DSTYPE           SAVE CURRENT DATA SET TYPE       SJB\n         STC   R4,DSFLAGS(R4)      SAVE IT ALSO IN DSFLAGS+0(R4)    SJB\n         LR    R8,R4               COMPUTE OFFSET IN                SJB\n         SLL   R8,2                   BRANCH-ADDRESS TABLE          SJB\n         L     R8,DSPRCAD(R8)      GET APPROPRIATE BRANCH ADDRESS   SJB\n         SPACE 1                                                    SJB\n*                                                                   SJB\nALLOCDS0 MVC   CARDOUT(08),ALDDNAM                                  RPD\n         LA    R2,CARDOUT                                           SJB\n         BAL   R7,RPTPUT2                                           SJB\n*                                                                   SJB\nALLOCDS1 DS    0H                                                   SJB\n         BR    R9                                                   SJB\n         SPACE 3                                                    SJB\nBADPSO#  DS    0H                                                   SJB\n         TM    FLAG,$CLOSING       ARE WE CLOSEING                  SJB\n         BO    ALLOCDS1            YES, RETURN TO CLOSALOC PAR.     SJB\n*                                                                   RPD\n         TM    FLAG3,$FRSTPSO      WHAT SYSOUT IS THIS FOR THIS JOB RPD\n         BO    ALLOCDS1            FIRST SYSOUT NOT 1,2,3, OR 4     RPD\n*                              RETURN WITH $FRSTPSO ON WHICH WILL   RPD\n*                              CAUSE A WAIT AND THEN A SUBSYSTEM    RPD\n*                              REQUEST FOR THE NEXT MSGCLASS.       RPD\n*                                         HOPEFULLY THE NEXT TIME   RPD\n*                              A REQUEST IS MADE FOR THIS MSGCLASS  RPD\n*                              WE WILL GET THE JCL FIRST FOR A NEW  RPD\n*                              JOB.                                 RPD\n*                              CODE COULD BE INSERTED HERE TO TEST  RPD\n*                              IF THE JOB BELONGING TO THIS SYSOUT  RPD\n*                              IS NOT EXECUTING. IF SO THEN QUEUE   RPD\n*                              THIS SYSOUT TO BE PRINTED.           RPD\n*                                                                   RPD\n         LA    R8,OTHERDS          BRANCH ADDRESS FOR OTHER SYSOUTS RPD\n         B     ALLOCDS0                                             RPD\n*                                                                   RPD\n         EJECT                                                      SJB\nLIBINIT  DS    0H                                                   SJB\n*                                                                   SJB\n*              ENTERED BY A        BALR   R9,LIBINIT                SJB\n*                                                                   SJB\n*              OPEN LIBRARIAN SYSIN FILE                            SJB\n*              CREATE AND WRITE -ADD CARD                           SJB\n*              CREATE AND WRITE -PGMR CARD                          SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED LIBINIT'                                   SJB\n         MVC   LWAOPEN,OPEN                                         SJB\n         MVC   LWADCBOT,OUTDCB     MOVE IN MODEL                    SJB\n         LA    R4,LWADCBOT                                          SJB\n         OPEN  ((R4),(OUTPUT)),MF=(E,LWAOPEN)                       SJB\n*                                  OPEN LIBRARIAN SYSIN FILE        SJB\n         USING IHADCB,R4                                            SJB\n         TM    DCBOFLGS,DCBOFOPN   DID OPEN WORK?                   SJB\n         DROP  R4                                                   SJB\n         BO    SYSINOK             YES                              SJB\n*                                                                   SJB\n         MVI   SNAPID,5            SET SNAPID                       SJB\n         LA    R15,24              SET FUNNY RC                     SJB\n         STH   R15,RETCODE         SAVE IT                          SJB\n         B     SNAPIT2             SNAP IT                          SJB\nSYSINOK  DS    0H                                                   SJB\n*                                                                   SJB\n         TIME  DEC                 GET JULIAN DAY FOR MODULE NAME   RPD\n         STH   R1,JULDTEPK         STORE PACKED JULIAN DATE         RPD\n         UNPK  JULIANDY,JULDTEPK   UNPACK JULIAN DATE               RPD\n*                                                                   RPD\n         MVC   ADDJOB+1(3),JULIANDY+0 MOVE JULIAN DAY TO -ADD CARD  RPD\n         MVC   ADDJOB+4(4),SSSOJOBI+4 MOVE IN JOB# TO -ADD CARD     RPD\n         MVI   ADDJOB+0,C'A'       INITIALIZE TO SEQ. CHAR TO \"A\"   RPD\n         BAL   R7,LIBFAIR          CHECK AND SEE IF OK              SJB\n         MVC   DSCJOB,ADDJOB       MOVE IN JOB# TO -DSC CARD        SJB\n         MVC   SELJOB,ADDJOB       MOVE IN JOB# TO -SEL CARD        SJB\n*                                                                   SJB\n         MVC   PGMJOBN,SSSOJOBN    MOVE JOBNAME TO -PGMR FIELD      SJB\n         MVC   PGMUSER,SSSOUSER    MOVE USERID  TO -PGMR FIELD      SJB\n*                                                                   SJB\n*              TRANSLATE ALL BLANKS TO '.' IN -PGMR CARD(OPERANDS)  SJB\n*                                                                   SJB\n         LA    R1,PGMJOBN          GET JOBNAME ADDR                 SJB\n         LA    R2,L'PGMJOBN+L'PGMUSER LENGTH TO CHECK               SJB\nTRANS1   DS    0H                                                   SJB\n         CLI   0(R1),C' '          IS IT BLANK                      SJB\n         BE    TRANS2              YES                              SJB\n         CLI   0(R1),X'00'         IS IT NULL                       SJB\n         BNE   TRANS3              NO                               SJB\nTRANS2   MVI   0(R1),C'.'          YES, TRANSLATE                   SJB\nTRANS3   LA    R1,1(,R1)           ADD ONE                          SJB\n         BCT   R2,TRANS1                                            SJB\n*                                                                   SJB\n         MVC   DLMJOB,ADDJOB       MOVE IN JOB# TO -DSC CARD        SJB\n*        LA    R2,DLMCARD          PUT OUT -DLM CARD                SJB\n*        BAL   R7,LIBPUT                                            SJB\n*                                                                   SJB\n         LA    R2,OPTCARD          PUT OUT -OPT CARD                SJB\n         BAL   R7,LIBPUT                                            SJB\n*                                                                   SJB\n         LA    R2,ADDCARD          PUT OUT -ADD CARD                SJB\n         BAL   R7,LIBPUT                                            SJB\n*                                                                   SJB\n         LA    R2,PGMCARD          PUT OUT -PGMR CARD               SJB\n         BAL   R7,LIBPUT                                            SJB\n*                                                                   SJB\n         BR    R9                  RETURN                           SJB\n*                                                                   SJB\n         EJECT                                                      SJB\nLIBFAIR  DS    0H                                                   SJB\n*                                                                   SJB\n*              LIBRARIAN FAIR      BAL  R7,LIBFAIR                  SJB\n*                                                                   SJB\n*              THIS CHECKS TO SEE IF THE MODULE NAME TO BE ADDED    SJB\n*              TO LIBRARY EXISTS. IF SO THEN THE LAST               SJB\n*              CHARACTER OF ADDJOB (AJJJNNNN) IN INCREMENTED        RPD\n*              AND THE TEST IS MADE AGAIN. THIS PROCESS CONTINUES   SJB\n*              UNTIL THE NAME IS UNIQUE OR UNTIL THE CHARACTER      SJB\n*              '@' IS REACHED $PRINT IS TURNED ON                   SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED LIBFAIR  '                                 SJB\n         CALL  MASTOPN,(0,FAIRFLG),VL                               SJB\n         CLI   FAIRFLG,C'0'        DID LIBRARIAN OPEN WORK          SJB\n         BNE   FAIRBAD1            NOPE, BAD                        SJB\n*                                                                   SJB\n         MVC   FAIRMOD,BLANKS2                                      SJB\n         MVC   FAIRMOD(8),ADDJOB   MOVE IN ADDJOB                   RPD\n         LA    R4,FAIRSEQ                                           SJB\nFAIRCHK  DS    0H                                                   SJB\n         CALL  MASTMOD,(FAIRMOD,FAIRFLG),VL SEE IF MODULE EXISTS    SJB\n         CLI   FAIRFLG,C'1'        DOES IT EXIST                    SJB\n         BE    FAIRXIT1            NO, THEN EXIT THIS ONES OK       SJB\n         CLI   FAIRFLG,C'0'        NORMAL RETURN CODE               SJB\n         BNE   FAIRBAD2            BAD RETURN CODE                  SJB\n         LA    R4,1(,R4)           GET NEW SEQUENCE CHARACTER ADDR  SJB\n         MVC   FAIRMOD+0(1),0(R4)  MOVE IN NEW CHARACTER            RPD\n         CLI   0(R4),C'@'          IS THIS THE END                  SJB\n         BE    FAIRXIT2                                             SJB\n         B     FAIRCHK                                              SJB\nFAIRXIT2 DS    0H                                                   SJB\n         OI    FLAG,$PRINT                                          SJB\nFAIRXIT1 DS    0H                                                   SJB\n         MVC   ADDJOB,FAIRMOD                                       SJB\n         CALL  MASTCLS,                                             SJB\n         BR    R7                                                   SJB\n*                                                                   SJB\nFAIRBAD1 DS    0H                  MASTOPN FAILED                   SJB\n*                                                                   SJB\n         MVI   SNAPID,6            SET SNAPID                       SJB\n         LA    R15,24              SET FUNNY RC                     SJB\n         STH   R15,RETCODE         SAVE IT                          SJB\n         B     SNAPIT2             SNAP IT                          SJB\n*                                                                   SJB\nFAIRBAD2 DS    0H                  MASTMOD FAILED                   SJB\n*                                                                   SJB\n         MVI   SNAPID,7            SET SNAPID                       SJB\n         LA    R15,24              SET FUNNY RC                     SJB\n         STH   R15,RETCODE         SAVE IT                          SJB\n         B     SNAPIT2             SNAP IT                          SJB\nFAIRSEQ  DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ@'                       SJB\nFAIRMOD  DC    CL8' '                                               SJB\nFAIRFLG  DC    C' '                                                 SJB\n         EJECT                                                      SJB\nFREEKEEP DS    0H                                                   SJB\n*                                                                   SJB\n*              FREEKEEP SYSOUT     BAL  R9,FREEKEEP                 SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED FREEKEEP'                                  SJB\n         LA    R1,TUFRKEPH         KEEP, HOLD                       SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\nFREERLSE DS    0H                                                   SJB\n*                                                                   SJB\n*              FREERLSE SYSOUT     BAL  R9,FREERLSE                 SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED FREERLSE'                                  SJB\n         LA    R1,TUFRKEPR         KEEP, RELEASE                    SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         SPACE 3                                                    SJB\nFREEDEL  DS    0H                                                   SJB\n*                                                                   SJB\n*              FREEDEL SYSOUT      BAL R9,FREEDEL                   SJB\n*                                                                   RPD\n         CLC   SSSODSN+14(6),PSODS     CHECK IF PSO #2(MSG)         RPD\n         BNE   SKIPWTOS                DO NOT WTO FOR OTHER PSOS    RPD\n         MVC   SUCCESS+26(8),SSSOJOBN                               RPD\n         MVC   SUCCESS+35(4),SSSOJOBI+4                             RPD\n         MVC   SUCCESS+40(1),SSSOCLAS                               RPD\nSUCCESS  WTOR  'LIBSPOOL: XXXXXXXX-YYYY-Z - SUCCESSFULLY COMPLETED',   X\n               RPLYAREA,1,RPLYECB,ROUTCDE=2                         RPD\n*                                                                   SJB\nSKIPWTOS LIBWTO 'ENTERED FREEDEL'                                   SJB\n         LA    R1,TUFRDEL          DELETE, RELEASE                  SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         SPACE 3                                                    SJB\nFREEREQH DS    0H                                                   SJB\n*                                                                   SJB\n*              FREEREQ HOLD SYSOUT BAL R9,FREEREQH                  SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED FREEREQH'                                  SJB\n         LA    R1,TUFRREQH         CHANGE CLASS, HOLD               SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         SPACE 3                                                    SJB\nFREEREQR DS    0H                                                   SJB\n*                                                                   SJB\n*              FREEREQ RLSE SYSOUT BAL R9,FREEREQR                  SJB\n*                                                                   RPD\n         CLC   SSSODSN+14(6),PSODS     CHECK IF PSO #2(MSG)         RPD\n         BNE   SKIPWTOF                DO NOT WTO FOR OTHER PSOS    RPD\n         MVC   FAILURE+26(8),SSSOJOBN                               RPD\n         MVC   FAILURE+35(4),SSSOJOBI+4                             RPD\n         MVC   FAILURE+40(1),SSSOCLAS                               RPD\nTSTABEND TM    FLAG4,$ABEND            TEST IF ABEND FOUND          RPD\n         BNO   TSTCANCL                NO                           RPD\n         MVC   FAILURE+44(22),ABNDMES INDICATE ABEND                RPD\n         B     FAILURE                 WRITE IT                     RPD\nTSTCANCL TM    FLAG4,$CANCEL           TEST IF CANCEL FOUND         RPD\n         BNO   TSTNOTCA                NO                           RPD\n         MVC   FAILURE+44(22),CNCLMES INDICATE ABEND/JCL ERROR      RPD\n         B     FAILURE                 WRITE IT                     RPD\nTSTNOTCA TM    FLAG4,$NOTCAT           TEST IF NOT CATALOGED FOUND  RPD\n         BNO   TSTNOTDL                NO                           RPD\n         MVC   FAILURE+44(22),NOTCMES INDICATE NOT CATALOGED FOUND  RPD\n         B     FAILURE                 WRITE IT                     RPD\nTSTNOTDL TM    FLAG4,$NOTDEL           TEST IF NOT DELETED FOUND    RPD\n         BNO   TSTENDCC                NO                           RPD\n         MVC   FAILURE+44(22),NOTDMES INDICATE NOT DELETED FOUND    RPD\n         B     FAILURE                 WRITE IT                     RPD\nTSTENDCC TM    FLAG4,$ENDEDCC          TEST IF ENDED BY CC          RPD\n         BNO   TSTJCLER                NO                           RPD\n         MVC   FAILURE+44(22),ENDBYCC INDICATE ENDED BY COND. CODE  RPD\n         B     FAILURE                 WRITE IT                     RPD\nTSTJCLER TM    FLAG4,$JCLERR           TEST IF JCL ERROR            RPD\n         BNO   TSTBADCC                NO                           RPD\n         MVC   FAILURE+44(22),JCLERRM INDICATE JCL ERROR            RPD\n         B     FAILURE                 WRITE IT                     RPD\nTSTBADCC TM    FLAG4,$BADCC            TEST IF BAD COND CODE FOUND  RPD\n         BNO   TSTFNDCC                NO                           RPD\n         MVC   FAILURE+44(22),BADCMES INDICATE BAD COND CODE FOUND  RPD\n         B     FAILURE                 WRITE IT                     RPD\nTSTFNDCC TM    FLAG5,$FNDCCMS          TEST IF COND CODE MESSAGE    RPD\n         BO    TSTPRTCL                COND CODE MESSAGE FOUND      RPD\n         MVC   FAILURE+44(22),PRTDMES INDICATE PRINTED-NO PROBLEM   RPD\n         B     FAILURE                 WRITE IT                     RPD\nTSTPRTCL MVC   FAILURE+44(22),PRTCMES INDICATE PRINT MSGCLASS JOB   RPD\n         B     FAILURE                 WRITE IT                     RPD\nFAILURE  WTOR  'LIBSPOOL: XXXXXXXX-YYYY-Z - MMMMMMMMMMMMMMMMMMMMMM',   X\n               RPLYAREA,1,RPLYECB,ROUTCDE=2                         RPD\n*                                                                   RPD\nSKIPWTOF LIBWTO 'ENTERED FREEREQR'                                  SJB\n         LA    R1,TUFRREQR         CHANGE CLASS, RELEASE            SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         SPACE 3                                                    SJB\nFREEREQD DS    0H                                                   SJB\n         CLI   SPACEPID,C'&PRODID' IS &PRODID = SPACE               RPD\n         BE    CKIFPSO2            YES, DO NOT RESTRICT USER ID     RPD\n         CLI   SSSOUSER,C'&PRODID' IS FIRST CHARACTER OF USER ID =P RPD\n         BNE   SKIPWTOD            NO, WTOR NOT NEEDED, DELETEING   RPD\n*                                  A NON-PROUCTION USER ID JOB      RPD\n*                                                                   SJB\n*              FREEREQ RLSE SYSOUT BAL R9,FREEREQD-REQUEUE TO DUMMY SJB\n*                                                                   RPD\nCKIFPSO2 CLC   SSSODSN+14(6),PSODS     CHECK IF PSO #2(MSG)         RPD\n         BNE   SKIPWTOD                DO NOT WTO FOR OTHER PSOS    RPD\n         MVC   SUCCESSD+26(8),SSSOJOBN                              RPD\n         MVC   SUCCESSD+35(4),SSSOJOBI+4                            RPD\n         MVC   SUCCESSD+40(1),SSSOCLAS                              RPD\nSUCCESSD WTOR  'LIBSPOOL: XXXXXXXX-YYYY-Z - SUCCESSFULLY COMPLETED',   X\n               RPLYAREA,1,RPLYECB,ROUTCDE=2\n*                                                                   RPD\nSKIPWTOD LIBWTO 'ENTERED FREEREQD'                                  SJB\n         LA    R1,TUFRREQD         CHANGE CLASS, RELEASE TO DUMMY   SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         EJECT                                                      SJB\nUNALLOC  DS    0H                                                   SJB\n         CLC   =XL8'00',ALDDNAM    IS IT NULLS                      SJB\n         BER   R9                  YES, EXIT                        SJB\n         CLC   =CL8' ',ALDDNAM     IS IT BLANKS                     SJB\n         BER   R9                  YES, EXIT                        SJB\n         MVC   UALDDNAM,ALDDNAM    MOVE DDNAME TO UNALLOCATION TXT  SJB\n         LIBWTO 'ENTERED UNALLOC'                                   SJB\n         USING S99RB,R14           ESTABLISH ADDRESSABILITY         SJB\n         LA    R14,S99AREA         SET UP SVC 99 PARM AREA BASE REG SJB\n         MVI   S99VERB,S99VRBUN    INDICATE UNALLOCATION TO BE DONE SJB\n*                                                                   SJB\n         L     R1,LWAUALTU         ADDR OF UNALLOCATION TU PTRS     SJB\n*                                                                   SJB\n         ST    R1,S99TXTPP         STORE IN SVC 99 REQUEST BLOCK    SJB\n         LA    R1,S99PARM          LOAD ADDRESS OF SVC 99 PARM AREA SJB\n         DROP  R14                                                  SJB\n         SPACE 1                                                    SJB\n         DYNALLOC                  PERFORM DYNAMIC UNALLOCATION     SJB\n*        SPACE 1                                                    SJB\n         STH   R15,RETCODE         SAVE SVC 99 RETURN CODE          SJB\n         MVI   SNAPID,8            IDENTIFY SNAP ORIGIN             SJB\n         LTR   R15,R15             TEST SVC 99 RETURN CODE          SJB\n         BNZ   SNAPIT2             NO GOOD. SNAP AND TERMINATE      SJB\n         BR    R9                  RETURN                           SJB\n         EJECT                                                      SJB\nOPENIN   DS    0H                                                   SJB\n*                                                                   SJB\n*              OPEN INPUT          BALR   R9,OPENIN                 SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED OPENIN '                                   SJB\n*                                                                   SJB\n         MVC   LWADCBIN,INDCB                                       SJB\n         LA    R4,LWADCBIN         INPUT DCB                        SJB\n         USING IHADCB,R4           ESTABLISH ADDRESSABILITY         SJB\n*                                                                   SJB\n         MVC   DCBDDNAM,ALDDNAM    MOVE DDNAME AS SET BY SVC 99 TO DCBB\n         OPEN  ((R4),(INPUT))      OPEN INPUT DATA SET              SJB\n         SPACE 1                                                    SJB\n         XC    RETCODE,RETCODE     CLEAR RETURN CODE FIELD          SJB\n         MVI   SNAPID,9            IDENTIFY SNAP ORIGIN             SJB\n         TM    DCBOFLGS,DCBOFOPN   WAS OPEN SUCCESSFUL?             SJB\n         BZ    SNAPIT2             NO. SNAP AND TERMINATE           SJB\n         DROP  R4                                                   SJB\n         BR    R9                                                   SJB\n         SPACE 3                                                    SJB\nLIBPUT   DS    0H                                                   SJB\n*                                                                   SJB\n*              LIBPUT              BAL  R7,LIBPUT                   SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED LIBPUT  '                                  SJB\n         TM    FLAG,$CLOSING       ARE WE CLOSING A JOB             SJB\n         BO    LIBPUT1             YES, OUTPUT FILE IS CLOSED       SJB\n         LA    R4,LWADCBOT                                          SJB\n         PUT   (R4),((R2))         PUT OUT RECORD                   SJB\nLIBPUT1  LA    R2,CARDOUT          GET CARD OUTPUT ADDR             SJB\n         MVC   CARDOUT,BLANKS2                                      SJB\n         BR    R7                                                   SJB\n         SPACE 3                                                    SJB\nRPTPUT2  DS    0H                                                   SJB\n*                      DEBUGGING                                    SJB\n*              RPTPUT2             BAL  R7,RPTPUT2                  SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED RPTPUT2'                                   SJB\n         TM    FLAG2,$DEBUG        IS THIS DEBUG OPTION             SJB\n         BNO   RPTPUT1             NO, THEN SKIP                    SJB\nRPTPUT   DS    0H                                                   SJB\n*                                                                   SJB\n*              RPTPUT              BAL  R7,RPTPUT                   SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED RPTPUT '                                   SJB\n         LA    R4,LWADCBRP                                          SJB\n         USING IHADCB,R4                                            SJB\n         TM    DCBOFLGS,DCBOFOPN   DID OPEN WORK?                   SJB\n         DROP  R4                                                   SJB\n         BNO   RPTPUT1             NO, EXIT NO REPORT               SJB\n         PUT   (R4),((R2))         PUT OUT RECORD                   SJB\nRPTPUT1  LA    R2,CARDOUT          GET CARD OUTPUT ADDR             SJB\n         MVC   CARDOUT,BLANKS2                                      SJB\n         BR    R7                                                   SJB\n         EJECT                                                      SJB\nSNAPIT2  DS    0H                                                   SJB\n*                                                                   SJB\n*                                                                   SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED SNAPIT2'                                   SJB\n         B     LIBRET2                                              SJB\n*                                                                   SJB\n*                                                                   SJB\n*                                                                   SJB\n         EJECT\n*/ ***************************************************************** /*\n*                                                                     *\n*  THE FOLLOWING BLOCKS OF CODE DEFINE THE CRITERIA BY WHICH JOBS     *\n*  ARE SELECTED FOR POSSIBLE PRINTING BY LIBSPOOL.  EACH OF THE 3     *\n*  COMPONENTS, JES2 JOB LOG, JCL, AND SYSTEM MESSAGE BLOCKS (SMB'S/   *\n*  ALLOCATION/DEALLOCATION MESSAGES) OF ALL CLASS 'MSGCLIST' JOBS ARE *\n*  SCANNED FOR THE OCCURRENCE OF SIGNIFICANT MESSAGE IDENTIFICATION   *\n*  NUMBERS WHICH INDICATE THAT AN EXCEPTIONAL CONDITION OCCURRED DUR- *\n*  ING JOB PROCESSING (EG. JCL ERROR, ABEND, NOT CAT 2, ETC.). UPON   *\n*  THE OCCURRENCE OF THESE MESSAGE ID'S THE JOB IS FLAGGED FOR SUBSE- *\n*  QUENT PRINTING; OTHERWISE, JOB START/STOP INFORMATION IS EXTRACT-  *\n*  ED FOR INCLUSION ON A LIBRARIAN COMMENT CARD DURING THE PROCESS OF *\n*  ADDING THE JOB TO THE LIBSPOOL.                                    *\n*                                                                     *\n*/ ***************************************************************** /*\n*                                                                   SJB\n*              R2 = OUTPUT BUFFER ADDR                              SJB\n*              R3 = LENGTH OF INPUT RECORD                          SJB\n*              R5 = INPUT RECORD ADDR                               SJB\n*              R7 = BAL REG FOR LIBPUT                              SJB\n*              R8 = POINTS TO RETURN ADDR FROM READNEXT             SJB\n*                                                                   SJB\n         EJECT                                                      SJB\nJES2JLOG DS    0H                                                   SJB\n         LIBWTO 'ENTERED JES2LOG'                                   SJB\n         MVC   DSCMSGCL,SSSOCLAS   SAVE MSGCLASS OF JOB             RPD\n         BAL   R8,READNEXT         SET CONT. ADDR AND IGNORE FIRST LINE\n         MVC   0(80,R2),0(R5)      MOVE LINE (80 CHARS) TO LIB IOAREA\n         MVI   0(R2),C'1'          SET NEW PAGE ASA CHAR\n         BAL   R7,LIBPUT           RETURN TO LIBRARIAN WITH LOG TITLE\n         MVI   0(R2),C'0'          SET DOUBLE SPACE ASA CHAR\n         LA    R7,READNEXT         SET NEXT ENTRY BRANCH ADDR\n         BAL   R8,LIBPUT           SET CONT. ADDR; RET WITH BLANK LINE\n         SPACE 1\n         MVI   0(R5),C' '          INSERT SINGLE SPACE ASA CHAR\n         CLC   20(5,R5),IEF45      IS THIS AN IEF45* MSG?\n         BNE   NOTIEF45            NO. CONTINUE\n         CLI   25(R5),C'3'         IEF450 TO IEF453?\n         BH    CONTDS1             NO. CONTINUE\n         CLI   25(R5),C'0'         IEF450I ?                        RPD\n         BNE   NOT450I             NO. CONTINUE                     RPD\n         OI    FLAG4,$ABEND        INDICATE ABEND/JCL ERROR         RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nNOT450I  CLI   25(R5),C'1'         IEF451I ?                        RPD\n         BNE   NOT451I             NO. CONTINUE                     RPD\n         OI    FLAG4,$ENDEDCC      INDICATE ENDED BY CONDITION CODE RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nNOT451I  OI    FLAG4,$JCLERR       INDICATE JCL ERROR (IEF452(3)I)  RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nSETPRT   OI    FLAG,$PRINT         INDICATE JOB IS TO BE PRINTED\n         B     CONTDS1             CONTINUE\nNOTIEF45 CLC   20(7,R5),IEF251I    IS THIS A 'JOB CANCELLED' MSG?\n         BNE   NOTIEF25            NO. CONTINUE                     RPD\n         OI    FLAG4,$CANCEL       INDICATE CANCEL MESSAGE          RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nNOTIEF25 CLC   20(8,R5),IIP026I    EMULATOR 'WRITE, DATA CHECK' MSG?\n         BE    SETPRT              YES. GO FLAG JOB FOR PRINTING\n         CLC   20(2,R5),REPLY      IS THIS AN OPERATOR REPLY?\n         BNE   CONTDS1             NO. CONTINUE\n         LA    R1,23(R5)           STARTING ADDRESS FOR SCAN\n         LA    R14,1               INCREMENT FOR BXLE\n         LA    R15,10(R1)          LAST ADDRESS FOR SCAN\nCHKCANCL CLC   1(6,R1),CANCEL      IS THIS A CANCEL REPLY?  WJS/01APR80\n         BNE   INCRCNCL            GO INCREMENT                     RPD\n         OI    FLAG4,$CANCEL       INDICATE CANCEL MESSAGE          RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nINCRCNCL BXLE  R1,R14,CHKCANCL     CONTINUE CHECK FOR 'CANCEL'\n         B     CONTDS1             NO 'CANCEL'. CONTINUE\n         SPACE 1\nJCLDS    MVI   0(R2),C'1'          SET NEW PAGE ASA CHAR (OS/JCL)\n         BAL   R7,LIBPUT           RETURN TO LIBRARIAN WITH LOG TITLE\n         BALR  R8,0                SET CONT. ADDRESS\n         LA    R3,1(R3)            COMPENSATE FOR INSERTED ASA CHAR\n         MVC   1(79,R2),0(R5)      MOVE 79 CHARS TO LIB IOAREA\n         BCTR  R5,0                COMPENSATE FOR INSERTED ASA CHAR\n         B     CONTDS2             CONTINUE PROCESSING OF LINE\n         SPACE 1\nMSGDS    MVI   4(R5),C'1'          INSERT NEW PAGE ASA CHAR (SMB'S)\n         BALR  R8,0                SET CONT. ADDRESS\n         LA    R1,4                LENGTH OF RDW\n         SR    R3,R1               SUBTRACT FROM LRECL\n         LA    R5,4(R5)            REPOSITION PAST RDW\n         CLC   1(7,R5),IEF375I     IS THIS A 'JOB START'/IEF375I MSG?\n         BNE   NOT375              NO.\n         MVC   DSCDATE,31(R5)      MOVE START DATE TO -DESC CARD    SJB\n         MVC   DSCTON,37(R5)       MOVE START TIME TO -DESC CARD    SJB\n         B     CONTDS1             CONTINUE\nNOT375   CLC   1(7,R5),IEF376I     IS THIS A 'JOB END'/IEF376I MSG?\n         BNE   NOT376              NO.\n         MVC   DSCTOFF,37(R5)      MOVE STOP TIME TO -DESC CARD     SJB\n         B     CONTDS1             CONTINUE\nNOT376   CLC   1(7,R5),IEF287I     IS THIS IEF287I/(NOT CATALOGED) MSG?\n         BNE   NOT287              NO, CONTINUE                     RPD\n         OI    FLAG4,$NOTCAT       INDICATE NOT CATALOGED MESSAGE   RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nNOT287   CLC   1(7,R5),IEF283I     IS THIS IEF283I/(NOT DELETED X) MSG?\n         BNE   NOT283              NO, CONTINUE                     RPD\n         OI    FLAG4,$NOTDEL       INDICATE NOT DELETED MESSAGE     RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\n*\nNOT283   CLC   1(7,R5),IEF142I     IS THIS A CONDITION CODE MESSAGE RPD\n         BNE   CONTDS1             NO. CONTINUE                     RPD\n         OI    FLAG5,$FNDCCMS      INDICATE CONDITION CODE MESSAGE  RPD\n*                                  FOUND-PRINT TYPRUN=SCAN          RPD\n         CLI   SSSOCLAS,C'&MSGCLCC0' CK FOR CC > 0 PRINT MSGCLASS   RPD\n         BE    FINDCC              GO FIND COND CODE AND CHECK IT   RPD\n         CLI   SSSOCLAS,C'&MSGCLPRT' CK FOR PRINT ALWAYS MSGCLASS   RPD\n         BNE   CONTDS1             NO COND CODE TEST FOR THIS CLASS RPD\n         OI    FLAG4,$PRTMSGC      INDICATE PRINT MESSAGE CLASS     RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\n*\nFINDCC   LA    R1,10(R5)           STARTING ADDRESS FOR SCAN        RPD\n         LA    R14,1               INCREMENT FOR BXLE               RPD\n         LA    R15,35(R5)          LAST ADDRESS FOR SCAN            RPD\nCHKCCCOM CLC   0(4,R1),CCCOMMON    IS THIS A ' - S' FROM CC MESSAGE RPD\n         BE    CHKMSGCL            YES. GO CHECK COND CODE          RPD\n         BXLE  R1,R14,CHKCCCOM     CONTINUE CHECK FOR COMMON ' - S' RPD\n         B     SETPRT              ADDRESSES EXHAUSTED - PRINT IT   RPD\nCHKMSGCL CLI   SSSOCLAS,C'&MSGCLCC0' CK FOR CC > 0 MSGCLASS         RPD\n         BE    ALLOWCC0            YES, GO CHECK AGAINST MAX.       RPD\n*\nALLOWCC0 CLC   33(4,R1),CC0000     COMPARE CONDITION CODE TO 0      RPD\n         BE    CONTDS1             CONDITION CODE 0 IS OK           RPD\n         OI    FLAG4,$BADCC        INDICATE BAD CONDITION CODE      RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nALLOWCC4 CLC   33(4,R1),CC0005     COMPARE CONDITION CODE TO 5      RPD\n         BL    CONTDS1             CONDITION CODE 4 OR LESS IS OK   RPD\n         OI    FLAG4,$BADCC        INDICATE BAD CONDITION CODE      RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\n*                                                                   RPD\nOTHERDS  XC    RECRDCTR,RECRDCTR   ZERO SYSOUT RECORD COUNTER       RPD\n         CLI   0(R5),X'00'         CHECK FOR VARIABLE LENGTH RECORD RPD\n         BE    VWCARCTL            ASSUME VARIABLE WITH ASA CHAR.   RPD\n         CLI   0(R5),C'1'          CHECK FOR CHAN 1 SKIP IN SYSOUT  RPD\n         BE    FWCARCTL            ASSUME SYSOUT HAS ASA CHARACTERS RPD\n         CLI   0(R5),C' '          CHECK FOR SPACE SKIP IN SYSOUT   RPD\n         BE    FWCARCL1            ASSUME SYSOUT HAS ASA CHARACTERS RPD\n         MVI   0(R2),C'1'          SET NEW PAGE ASA CHAR            RPD\n         BALR  R8,0                SET CONTINUATION ADDRESS         RPD\n         LH    R1,RECRDCTR         GET RECORD COUNT FOR THIS SYSOUT RPD\n         LA    R1,1(R1)            INCREMENT FOR CURRENT RECORD     RPD\n         CH    R1,MAXLINES         CK MAXIMUM ALLOWED FOR A SYSOUT  RPD\n         BH    TOOMANYL            MAXIMUM HAS BEEN REACHED         RPD\n         STH   R1,RECRDCTR         SAVE NEW RECORD COUNT FOR SYSOUT RPD\n         LA    R3,1(R3)            COMPENSATE FOR INSERTED ASA CHAR RPD\n         MVC   1(79,R2),0(R5)      MOVE 79 CHARS TO LIB IOAREA      RPD\n         BCTR  R5,0                COMPENSATE FOR INSERTED ASA CHAR RPD\n         B     CONTDS2             CONTINUE PROCESSING OF LINE      RPD\nVWCARCTL MVI   4(R5),C'1'          INSERT NEW PAGE ASA CHAR         RPD\n         BALR  R8,0                SET CONT. ADDRESS                RPD\n         LA    R1,4                LENGTH OF RDW                    RPD\n         SR    R3,R1               SUBTRACT FROM LRECL              RPD\n         LA    R5,4(R5)            REPOSITION PAST RDW              RPD\n         LH    R1,RECRDCTR         GET RECORD COUNT FOR THIS SYSOUT RPD\n         LA    R1,1(R1)            INCREMENT FOR CURRENT RECORD     RPD\n         CH    R1,MAXLINES         CK MAXIMUM ALLOWED FOR A SYSOUT  RPD\n         BH    TOOMANYL            MAXIMUM HAS BEEN REACHED         RPD\n         STH   R1,RECRDCTR         SAVE NEW RECORD COUNT FOR SYSOUT RPD\n         B     CONTDS1             CONTINUE PROCESSING OF LINE      RPD\nFWCARCL1 MVI   0(R5),C'1'          SET NEW PAGE ASA CHAR            RPD\nFWCARCTL BALR  R8,0                SET CONTINUATION ADDRESS         RPD\n         LH    R1,RECRDCTR         GET RECORD COUNT FOR THIS SYSOUT RPD\n         LA    R1,1(R1)            INCREMENT FOR CURRENT RECORD     RPD\n         CH    R1,MAXLINES         CK MAXIMUM ALLOWED FOR A SYSOUT  RPD\n         BH    TOOMANYL            MAXIMUM HAS BEEN REACHED         RPD\n         STH   R1,RECRDCTR         SAVE NEW RECORD COUNT FOR SYSOUT RPD\n         B     CONTDS1             CONTINUE PROCESSING OF LINE      RPD\nTOOMANYL LH    R3,LMTMSGLN         LOAD LENGTH OF LIMIT MESSGE      RPD\n         EX    R3,LIMITREC         TELL SYSOUT LIMIT EXCEEDED       RPD\n         LA    R7,EOF              SET TO CLOSE THIS SYSOUT/CONTINU RPD\n         B     LIBPUT              WRITE MESSAGE AND CLOSE SYSOUT   RPD\n         EJECT\n*                                                                   SJB\n*              IF LRECL < 80 OR COLS 81-132 IS BLANK, THEN          SJB\n*              ONLY PUT 1 RECORD TO LIBRARIAN                       SJB\n*                                                                   SJB\nCONTDS1  C     R3,EIGHTY           IS RECORD LENGTH LESS THAN 80?\n         BL    SHORTREC            YES. GO PROCESS AS SUCH\n         MVC   0(80,R2),0(R5)      MOVE LINE (80 CHARS) TO LIB IOAREA\nCONTDS2  BAL   R7,LIBPUT           RETURN TO PANVALET WITH RECORD\n         S     R3,EIGHTY           IS RECORD LENGTH EXACTLY 80 BYTES?\n         BNP   READNEXT            YES. GO GET NEXT LINE            SJB\n         BCTR  R3,0                FOR EXECUTE\n         EX    R3,COMPREC          IS REST OF RECORD BLANK?\n         BE    READNEXT            YES. GO GET NEXT LINE\n         LA    R5,79(R5)           POINT TO LAST CHAR ALREADY WRITTEN\n         MVI   0(R5),X'FE'         INSERT CONTINUATION CHAR\n         LA    R3,2(R3)            RESET TO ACTUAL LENGTH OF REMAINDER\nSHORTREC BCTR  R3,0                FOR EXECUTE\n         EX    R3,MOVEREC          MOVE SHORT OR BALANCE OF LONG RECORD\n         LA    R7,READNEXT         BRANCH ADDR FOR NEXT ENTRY\n         B     LIBPUT              RETURN TO PANVALET WITH INPUT REC\n*                                                                   SJB\n         SPACE 3                                                    SJB\nCOMPREC  CLC   80(*-*,R5),BLANKS2  REMAINDER OF RECORD BLANK?       SJB\nMOVEREC  MVC   0(*-*,R2),0(R5)     MOVE REMAINDER TO IOAREA         SJB\nLIMITREC MVC   0(*-*,R2),LIMITMSG  MOVE LIMIT MESSAGE TO IOAREA     RPD\n         EJECT                                                      SJB\nSYNEXIT  SYNADAF ACSMETH=QSAM      INPUT (JES2) DATA SET SYNAD      SJB\n         SPACE 1                                                    SJB\n         MVI   0(R2),C'-'          INSERT TRIPLE SPACE ASA CC CHAR  SJB\n         MVC   1(78,R2),50(R1)     MOVE ERROR MESSAGE TO LIB IOAREA SJB\n         SPACE 1                                                    SJB\n         SYNADRLS                  RESTORE R13                      SJB\n         SPACE 1                                                    SJB\n         BAL   R7,LIBPUT           RETURN TO LIBRARIAN WITH ERROR   SJB\n         B     EOF                                                  SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n*              ALLOC   DSN FROM JES2                                SJB\n*                                                                   SJB\n         DS    0F                                                   SJB\nS99PARM  DC    X'80',AL3(S99AREA)  ADDRESS OF SVC 99 REQUEST BLOCK  SJB\nS99AREA  DC    AL1(S99RBEND-S99RB) LENGTH OF REQUEST BLOCK          SJB\n         DC    X'01'               VERB CODE                        SJB\n         DC    XL6'00'                                              SJB\n         DC    A(ALTUPTR)          POINTER TO LIST OF TEXT UNIT PTRSSJB\n         DC    XL8'00'                                              SJB\n         SPACE 1                                                    SJB\nALTUPTR  DC    A(ALDSTU)           ADDR OF DSNAME TEXT UNIT         SJB\n         DC    A(ALDDTU1)          ADDR OF DDNAME TEXT UNIT         SJB\n         DC    A(ALSSTU)           ADDR OF SUBSYSTEM TEXT UNIT      SJB\n         DC    X'00',AL3(ALDDTU)   ADDR OF DDNAME TEXT UNIT         SJB\n         DC    X'00',AL3(ALDSP1TU) ADDR OF DISP1  TEXT UNIT         SJB\n         DC    X'80',AL3(ALDSP2TU) ADDR OF DISP2  TEXT UNIT         SJB\n         SPACE 1                                                    SJB\nALDSTU   DC    X'0002'             ALLOCATION BY DSNAME             SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'002C'             LENGTH OF PARAMETER              SJB\nALDSN    DC    CL44' '             DSNAME                           SJB\n         DS    0H                                                   SJB\nALDDTU1  DC    X'0001'             ALLOCATION BY DDNAME             SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0008'             LENGTH OF DDNAME                 SJB\n         DC    CL8'JES2DDNM'       DDNAME FOR ALLOCATION            SJB\nALSSTU   DC    X'005C'             SUBSYSTEM DATA SET ALLOCATION    SJB\n         DC    X'0000'             ONE PARAMETER                    SJB\n         DC    X'0004'             LENGTH OF PARAMETER              SJB\nALSSN    DC    CL4'JES2'           SUBSYSTEM NAME                   SJB\n         DS    0H                                                   SJB\nALDDTU   DC    X'0055'             RETURN WITH DDNAME               SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0008'             LENGTH OF PARAMETER              SJB\nALDDNAM  DC    CL8' '              AREA FOR DDNAME                  SJB\n         DS    0H                                                   SJB\nALDSP1TU DC    X'0004'             DISP1                            SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0001'             LENGTH OF PARAMETER              SJB\n         DC    X'02'               DISP1=MOD                        SJB\n         DS    0H                                                   SJB\nALDSP2TU DC    X'0005'             DISP2                            SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0001'             LENGTH OF PARAMETER              SJB\n         DC    X'08'               DISP2=KEEP                       SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n*              UNALLOC DELETE,     RELEASE                          SJB\n*                                                                   SJB\nTUFRDEL  DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRDEL) FREE DELETE                      SJB\n         DC    X'80',AL3(UALFRREL) RELEASE FROM HOLD                SJB\n*                                                                   SJB\n*              UNALLOC KEEP,       RELEASE                          SJB\n*                                                                   SJB\nTUFRKEPR DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB\n         DC    X'80',AL3(UALFRREL) RELEASE FROM HOLD                SJB\n*                                                                   SJB\n*              UNALLOC KEEP,       HOLD                             SJB\n*                                                                   SJB\nTUFRKEPH DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB\n         DC    X'80',AL3(UALFRHLD) PUT ON HOLD                      SJB\n*                                                                   SJB\n*              UNALLOC KEEP,       CHANGE CLASS, RELEASE            SJB\n*                                                                   SJB\nTUFRREQR DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB\n         DC    X'00',AL3(UALFRREQ) REQUEUE THE CLASS                SJB\n         DC    X'80',AL3(UALFRREL) RELEASE FROM HOLD                SJB\n*                                                                   RPD\nTUFRREQD DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  RPD\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        RPD\n         DC    X'00',AL3(UALFRRQD) REQUEUE THE CLASS TO DUMMY       RPD\n         DC    X'80',AL3(UALFRREL) RELEASE FROM HOLD                RPD\n*                                                                   RPD\n*              UNALLOC KEEP,       CHANGE CLASS, HOLD               SJB\n*                                                                   SJB\nTUFRREQH DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB\n         DC    X'00',AL3(UALFRREQ) REQUEUE THE CLASS                SJB\n         DC    X'80',AL3(UALFRHLD) PUT ON HOLD                      SJB\n         EJECT                                                      SJB\nUALDDTU  DC    X'0001'             UNALLOCATION BY DDNAME           SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0008'             LENGTH OF PARAMETER              SJB\nUALDDNAM DC    CL8' '              DDNAME TO BE UNALLOCATED         SJB\n         DS    0H                                                   SJB\nUALFRDEL DC    X'0005'             OVERIDING DISP2 SPECIFICATION    SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0001'             LENGTH OF PARAMETER              SJB\n         DC    X'04'            4= DELETE DATA SET                  SJB\n         DS    0H                                                   SJB\nUALFRKEP DC    X'0005'             OVERIDING DISP2 SPECIFICATION    SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0001'             LENGTH OF PARAMETER              SJB\n         DC    X'08'            8= KEEP   DATA SET                  SJB\n         DS    0H                                                   SJB\nUALFRREL DC    X'000A'             RELEASE HELD DSN                 SJB\n         DC    X'0000'             NO PARAMETER                     SJB\n         DS    0H                                                   SJB\nUALFRHLD DC    X'0059'             HOLD QUEUE                       SJB\n         DC    X'0000'             NO PARAMETER                     SJB\n         DS    0H                                                   SJB\nUALFRREQ DC    X'0018'             RELEASE HELD DSN                 SJB\n         DC    X'0001'             1 PARAMETER                      SJB\n         DC    X'0001'             LENGTH                           SJB\n         DC    C'&RECLASS'         REQUEUE CLASS                    SJB\n         DS    0H                                                   RPD\nUALFRRQD DC    X'0018'             RELEASE HELD DSN                 RPD\n         DC    X'0001'             1 PARAMETER                      RPD\n         DC    X'0001'             LENGTH                           RPD\n         DC    C'&DUMMYCLS'        DUMMY REQUE CLASS                RPD\n         EJECT                                                      SJB\n         SPACE 2                                                    SJB\nDSPRCAD  DS    0F                  INITIAL BRANCH-ADDRESS TABLE     SJB\n         DC    A(JES2JLOG)         ADDRESS FOR PROCESSING LOG DATA SET\n         DC    A(JCLDS)            ADDRESS FOR PROCESSING JCL DATA SET\n         DC    A(MSGDS)            ADDRESS FOR PROCESSING MSG DATA SET\n         SPACE 2                                                    SJB\nEIGHTY   DC    F'80'               OUTPUT RECORD SIZE               SJB\nLIBPARM  DC    X'80',AL3(LIBPARM2) PARMS EXPECTED BY LIBRARY        SJB\n         CNOP  2,4                                                  SJB\nLIBPARM2 DC    AL2(L'LIBPARM3)     PARMS EXPECTED BY LIBRARY        SJB\nLIBPARM3 DC    C'NRJS,NJTA'        PARMS EXPECTED BY LIBRARY        SJB\nBLANKS2  DC    CL80' '             BLANKS                           SJB\nDASHES   DC    CL7'-------'        DASHES OR PRINTED                RPD\nRPLYECB  DC    F'0'                                                 RPD\nRPLYAREA DC    X'00'                                                RPD\nJULIANDY DC    CL3' '              JULIAN DATE                      RPD\nJULDTEPK DC    H'0'                PACKED JULIAN DATE               RPD\nRECRDCTR DC    H'0'                NON JCL SYSOUT RECORD COUNTER    RPD\nMAXLINES DC    H'&SYSOUTMX'        NON JCL MAXIMUM SYSOUT LINES     RPD\nLMTMSGLN DC    H'40'               LENGTH OF SYSOUT LIMIT MESSAGE   RPD\n         DS    0D                                                   SJB\n         LTORG                                                      SJB\nPSODS    DC    C'PS0002'           PSO DATA SET IDENTIFIER          RPD\nIEF375I  DC    C'IEF375I'          'JOB START' MSG NUMBER\nIEF376I  DC    C'IEF376I'          'JOB STOP' MSG NUMBER\nIEF287I  DC    C'IEF287I'          'NOT CATALOGUED 2' MSG NUMBER\nIEF283I  DC    C'IEF283I'          'NOT DELETED 8' MSG NUMBER\nIEF251I  DC    C'IEF251I'          'JOB CANCELLED' MSG NUMBER\nIEF45    DC    C'IEF45'            FOR LOCATING JCL ERROR MSGS, ETC\nIIP026I  DC    C'+IIP026I'         EMULATOR 'WRITE, DATA CHECK' MSG NO.\nREPLY    DC    CL2'R '             START OF OPERATOR REPLY\nCANCEL   DC    C'CANCEL'           REQUIRED FOR SCAN (PRINT CRITERION)\nALLDS    DC    X'000102'           INDICATING 3 DATA SETS FOUND FOR JOB\n         SPACE 1                                                    RPD\nIEF142I  DC    C'IEF142I'          STEP END CONDITION CODE MESSAGE  RPD\nSPACEPID DC    C' '                SPACE FOR NON RESTRICT USER ID   RPD\nCCCOMMON DC    C' - S'             COMMON CHARACTERS IN CC MESSAGE  RPD\nCC0000   DC    C'0000'             CONDITION CODE 0000              RPD\nCC0005   DC    C'0005'             CONDITION CODE 0005              RPD\nLIMITMSG DC    C' **** LIBSPOOL SYSOUT LIMIT EXCEEDED ****'         RPD\nABNDMES  DC    C'*****  ABENDED  ***** '                            RPD\nCNCLMES  DC    C'*** JOB CANCELLED *** '                            RPD\nNOTCMES  DC    C'DATA SET NOT CATALOGED'                            RPD\nNOTDMES  DC    C' DATA SET NOT DELETED '                            RPD\nENDBYCC  DC    C'JOB ENDED BY COND CODE'                            RPD\nJCLERRM  DC    C'***** JCL ERROR ***** '                            RPD\nBADCMES  DC    C'CONDITION CODE > 0000 '                            RPD\nPRTDMES  DC    C'PRINTED - NOT EXECUTED'                            RPD\nPRTCMES  DC    C'PRINTED - PRINT MSGCLS'                            RPD\nENDLMMSG EQU   *\n         SPACE 1                                                    SJB\n         EJECT                                                      SJB\nOPTCARD  DC    CL9'-OPT '          LIBRARIAN OPT CARD KEYWORD       SJB\n         DC    C'NOPC,NOPR,NOEXEC'                                  SJB\n         DC    (80-(*-OPTCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nADDCARD  DC    CL9'-ADD '          LIBRARIAN ADD CARD KEYWORD       SJB\nADDJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               RPD\n         DC    C',NOCHK,UNCON,NOLIST,NORESEQ,SEQ=/81,8,10,10/'      SJB\n         DC    (80-(*-ADDCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nDLMCARD  DC    CL9'-DLM '          LIBRARIAN ADD CARD KEYWORD       SJB\nDLMJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               RPD\n         DC    (80-(*-DLMCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nSELCARD  DC    CL9'-SEL '          LIBRARIAN SEL CARD KEYWORD       SJB\nSELJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               RPD\n         DC    C',NOCHK,UNCON,NOLIST,NORESEQ,SEQ=/81,8,10,10/'      SJB\n         DC    (80-(*-SELCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nPGMCARD  DC    CL9'-PGMR '         LIBRARIAN PGMR CARD              SJB\nPGMJOBN  DC    CL08' '             JOBNAME                          SJB\nPGMUSER  DC    CL07' '             USERID                           SJB\n         DC    (80-(*-PGMCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nDSCCARD  DC    CL9'-DESC'          LIBRARIAN DESC CARD              SJB\nDSCJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               RPD\nDSCDATE  DC    C'YYDDD'            JOB START DATE                   SJB\nDSCTON   DC    C'HHMM'             JOB START TIME                   SJB\nDSCTOFF  DC    C'HHMM'             JOB STOP  TIME                   SJB\nDSCERROR DC    C'PRINTED'          NO ERROR ASSUMED                 SJB\nDSCMSGCL DC    C' '                MSGCLASS OF JOB                  RPD\n         DC    (80-(*-DSCCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nENDCARD  DC    CL9'-END  '         LIBRARIAN END  CARD              SJB\n         DC    (80-(*-ENDCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\n         EJECT                                                      SJB\nTITLE1   DC    CL90' '                                              RPD\n         ORG   TITLE1                                               SJB\n         DC    CL10'MODULE    '                                     SJB\n         DC    CL10'          '                                     SJB\n         DC    CL10'          '                                     SJB\n         DC    CL10'JOB START '                                     SJB\n         DC    CL10'JOB START '                                     SJB\n         DC    CL10'JOB STOP  '                                     SJB\n         DC    CL10'  JOB     '                                     RPD\n         DC    CL10'REROUTED  '                                     SJB\n         DC    CL10'LIBRARY   '                                     SJB\n         ORG   TITLE1+90                                            RPD\nTITLE2   DC    CL90' '                                              RPD\n         ORG   TITLE2                                               SJB\n         DC    CL10'NAME      '                                     SJB\n         DC    CL10'JOBNAME   '                                     SJB\n         DC    CL10'USERID    '                                     SJB\n         DC    CL10'DATE      '                                     SJB\n         DC    CL10'TIME      '                                     SJB\n         DC    CL10'TIME      '                                     SJB\n         DC    CL10'MSGCLASS  '                                     RPD\n         DC    CL10'TO PRINT  '                                     SJB\n         DC    CL10'ERROR     '                                     SJB\n         ORG   TITLE2+90                                            RPD\n         EJECT                                                      SJB\nINDCB    DCB   DDNAME=DUMMY,DSORG=PS,MACRF=GL,                      SJB*\n               EODAD=EOF,EROPT=ACC,SYNAD=SYNEXIT                    SJB\n         DS    0F                                                   SJB\nINDCBL   EQU   *-INDCB                                              SJB\n         EJECT                                                      SJB\nOUTDCB   DCB   DDNAME=SYSIN,DSORG=PS,MACRF=PM,                      SJB*\n               RECFM=FB,LRECL=80,BLKSIZE=6160                       SJB\n         DS    0F                                                   SJB\nOUTDCBL  EQU   *-OUTDCB                                             SJB\n         EJECT                                                      SJB\nOPEN     OPEN  (0),MF=L                                             SJB\nCLOSE    CLOSE (0),MF=L                                             SJB\n         SPACE 3                                                    SJB\nEOSNAP   EQU   *                   END OF STORAGE AREA TO BE SNAPPEDSJB\nDNAME    DS    CL8                 NAME LEFT JUSTIFIED              SJB\n         DROP  R11,R12,R6                                           SJB\n         EJECT                                                      SJB\nSSREQ    CSECT                                                      SJB\n         CONNECT LWORK3,WORK3,BASE=R12,CLEAR=YES,PARM=R11           SJB\n         USING WORK1,R11           USE MAIN TASK WORK AREA          SJB\n         USING SSOB,R10            GET ADDR. TO 1 SAVEAREA          SJB\n         LIBWTO 'ENTERED SSREQ'                                     SJB\n         LA    R10,LWASSOB         GET ADDRESS OF IEFSSREQ PARM     SJB\n*                                                                   SJB\n*              THE $FIRST FLAG MUST BE TURNED ON EACH TIME A NEW    SJB\n*              JOB IS TO BE SELECTED                                SJB\n*                                                                   SJB\n         TM    FLAG,$FIRST         IS THIS THE 1ST REQUEST          SJB\n         BNO   SSREQ1              NOPE                             SJB\n         NI    FLAG,255-$FIRST     TURN OFF FIRST FLAG              SJB\n*                                                                   SJB\n         MVC   DSFLAGS,=3X'FF'     INITILIZE DSFLAGS                SJB\n*                                                                   SJB\n         XC    LWASSOB,LWASSOB     CLEAR IT OUT                     SJB\n         ST    R10,LWASSPRM        SET SSOB ADDR                    SJB\n         MVI   LWASSPRM,X'80'      INDICATE LAST PARM               SJB\n*                                                                   SJB\n*              INITILIZE SSOB REQUEST BLOCK                         SJB\n*                                                                   SJB\n         MVC   SSOBID,=CL4'SSOB'   SSOB ID                          SJB\n         LA    R1,SSOBHSIZ                                          SJB\n         STH   R1,SSOBLEN          STORE IN LENGTH                  SJB\n         LA    R1,SSOBSOUT                                          SJB\n         STH   R1,SSOBFUNC         STORE IN FUNCTION                SJB\n         L     R1,LWASSIB@         GET SSIB ADDR                    SJB\n         ST    R1,SSOBSSIB         STORE IN SSIB ADDR               SJB\n         LA    R1,0                                                 SJB\n         ST    R1,SSOBRETN         STORE IN RETN CODE               SJB\n         LA    R1,SSSOBGN                                           SJB\n         ST    R1,SSOBINDV         STORE IN INDV ADDR               SJB\n*                                                                   SJB\n*              INITILIZE SSSO REQUEST BLOCK                         SJB\n*                                                                   SJB\n         LA    R1,SSSOSIZE+SSSOXSIZ                                 SJB\n         STH   R1,SSSOLEN          STORE IN SSSO LENGTH             SJB\n*                                                                   SJB\n*SSSODSID+....                                                      SJB\n*         +8 IS PROGRAMMER NAME                                     SJB\n*         +8+20 IS ACCOUNTING FIELDS                                SJB\n*         +8+20+37 IS USERID                                        SJB\n*                                                                   SJB\nSSSOPGMR EQU   SSSODSID+8,20       PROGRAMMER NAME                  SJB\nSSSOACCT EQU   SSSODSID+8+20,37    ACCOUNTING FIELDS                SJB\nSSSOUSER EQU   SSSODSID+8+20+37,7  USERID                           SJB\nSSSOXSIZ EQU   SSSOUSER+7-SSSOPGMR LENGTH OF EXTRA POOP             SJB\n*                                                                   SJB\n         MVI   SSSOFLG1,SSSOSCLS   SELECT BY CLASS                  SJB\n         OI    SSSOFLG1,SSSODST    SELECT BY DEST                   SJB\n         OI    SSSOFLG1,SSSOHLD    SELECT BY HELD DSNS TOO          SJB\n*                                                                   SJB\n         NI    SSSOFLG2,255-SSSOCTRL SUBSYSTEM TO RETURN A DATASET  SJB\n*                                                                   SJB\n         MVC   SSSODEST,=CL8'LOCAL'                                 SJB\nPSOCLASS L     R1,CURMCLAD         LOAD ADDR. OF MSGCLASS TO GET    RPD\n         MVC   SSSOCLSL(1),0(R1)   MOVE IN THIS CLASS               RPD\n         MVI   SSSODSN,X'00'       INDICATE INITIAL ENTRY FOR IEFSSREQ\n         B     SSREQ2                                               SJB\n         EJECT                                                      SJB\nSSREQ1   DS    0H                                                   SJB\n*                                                                   SJB\n*              IF THIS IS NOT THE FIRST TIME THROUGH THEN           SJB\n*              TURN ON THE SELECT BY JOBID SO WE WILL GET ONLY      SJB\n*              SYSOUT FOR THE JOB THAT HAS BEEN SELECTED BY THE     SJB\n*              FIRST CALL. THIS INSURES THAT WE GET NOBODY ELSE     SJB\n*              UNTIL WE ARE THROUGH WITH THIS JOBIDS SYSOUT         SJB\n*                                                                   SJB\n         OI    SSSOFLG1,SSSOSJBI   SELECT BY JOB ID (JOB#)          SJB\nSSREQ2   DS    0H                                                   SJB\n         MVI   SSSORESV,X'01'      TELL JES2 TO FILL IN EXTRA POOP  SJB\n         SPACE 1                                                    SJB\n         MODESET MODE=SUP,KEY=ZERO GET INTO SUPERVISOR STATE        SJB\n         SPACE 1                                                    SJB\n         LA    R1,LWASSPRM         LOAD ADDRESS OF SSOB             SJB\n         SPACE 1                                                    SJB\n         IEFSSREQ                  ISSUE SUBSYSTEM REQUEST          SJB\n         SPACE 1                                                    SJB\n         STH   R15,RETCODE         SAVE IEFSSREQ RETURN CODE        SJB\n         MVC   LWASSIB@,SSOBSSIB                                    SJB\n         SPACE 3                                                    SJB\n         MODESET MODE=PROB,KEY=NZERO GET OUT OF SUPERVISOR STATE    SJB\n         SPACE 3                                                    SJB\n         LH    R15,RETCODE                                          SJB\n         RELEASE LWORK3,RC=(R15)                                    SJB\n         LTORG                                                      SJB\n         EJECT                                                      SJB\nWORK1    DSECT                                                      SJB\nSAVE1    DS    9D                                                   SJB\nLWASSPRM DS    A                   PARM FIELD FOR SSOB              SJB\nLWASSOB  DS    CL(SSOBLEN1+SSSOXSIZ)                                SJB\n         DS    0F                  EXTRA                            SJB\nRDRSTIME DS    XL8                 RDR START TIME/DATE OF JOB       SJB\nLWAOPEN  DS    F                                                    SJB\nLWACLOSE DS    F                                                    SJB\nLWASSIB@ DS    A                                                    SJB\nLWAUALTU DS    A                                                    SJB\nLWADCBIN DS    CL(INDCBL)                                           SJB\nLWADCBOT DS    CL(OUTDCBL)                                          SJB\nLWADCBRP DS    CL(RPTDCBL)                                          SJB\nDSFLAGS  DC    X'000102'           0=LOG, 1=JCL, 2=MSG DS PROCESSED SJB\nFLAG     DS    X                   MULTI-PURPOSE FLAG BYTE          SJB\n$FIRST   EQU   X'80'               SET WHEN NEW JOB IS NEEDED       SJB\n$PRINT   EQU   X'40'               TO INDICATE JOB IS TO BE PRINTED SJB\n$CLOSING EQU   X'20'               TO INDICATE CLOSING OUT OF JOB   SJB\nFLAG2    DS    X                   MULTI-PURPOSE FLAG BYTE          SJB\n$TITLE   EQU   X'80'               INDICATE TITLE LINE TO PUT OUT   SJB\n$DEBUG   EQU   X'40'               TO INDICATE DEBUGGING            SJB\nFLAG3    DS    X                   FIRST OR NEXT SYSOUTS OF A JOB   RPD\n$FRSTPSO EQU   X'80'               INDICATE FIRST SYSOUT FOR JOB    RPD\nFLAG4    DS    X                   REASON FOR PRINTING FLAG         RPD\n$ABEND   EQU   X'80'               ABEND FOUND                      RPD\n$ENDEDCC EQU   X'40'               ENDED BY CONDITION CODE FOUND    RPD\n$JCLERR  EQU   X'20'               JCL ERROR FOUND                  RPD\n$CANCEL  EQU   X'10'               CANCEL FOUND                     RPD\n$NOTCAT  EQU   X'08'               NOT CATALOGUED FOUND             RPD\n$NOTDEL  EQU   X'04'               NOT DELETED FOUND                RPD\n$BADCC   EQU   X'02'               BAD CONDITION CODE FOUND         RPD\n$PRTMSGC EQU   X'01'               ALWAYS PRINT MSGCLASS ON JOB     RPD\nFLAG5    DS    X                   REASON FOR PRINTING FLAG         RPD\n$FNDCCMS EQU   X'80'               FOUND CONDITION CODE MESSAGE     RPD\nSNAPID   DS    X                                                    SJB\nRETCODE  DS    H                   RETURN CODE                      SJB\nDSTYPE   DS    X                   DATA SET TYPE FLAG (LOG,JCL,MSG) SJB\nCARDOUT  DS    CL80                                                 SJB\nPARMCARD DS    CL80                                                 SJB\nCURMCLAD DS    F                PTR TO CURRENT MSGCLASS             RPD\nLWORK1   EQU   *-WORK1                                              SJB\n*                                                                   SJB\nWORK2    DSECT                                                      SJB\nSAVE2    DS    9D                                                   SJB\nLWORK2   EQU   *-WORK2                                              SJB\n         SPACE 3                                                    SJB\nWORK3    DSECT                                                      SJB\nSAVE3    DS    9D                                                   SJB\nLWORK3   EQU   *-WORK3                                              SJB\n         SPACE 3                                                    SJB\nDIRECTRY DSECT                     LIB DIRECTORY ENTRY DSECT        SJB\nDPASS    DS    CL4                 PASSWORD                         SJB\nDADATE   DS    CL6                 ADDED DATE       MMDDYY          SJB\nDUDATE   DS    CL6                 LAST UPDATE DATE MMDDYY          SJB\nDCARDS   DS    PL3                 NUMBER OF CARDS                  SJB\nDPGMR    DS    CL15                PROGRAMMER NAME                  SJB\nDPROC    DS    CL8                 FIRST 8 BYTES OF PROC PARAMETER  SJB\nDDESC    DS    CL30                MODULE DESCRIPTION               SJB\nDCSEQ    DS    BL1                 STARTING COLUMN FOR SEQ          SJB\nDLSEQ    DS    BL2                 LENGTH OF SEQ                    SJB\nDISEQ    DS    BL2                 INCREMENT VALUE FOR SEQ          SJB\nDSSEQ    DS    BL2                 STARTING VALUE FOR SEQ           SJB\nDANUM    DS    BL2                 ACCESS NUMBER                    SJB\nDUNUM    DS    BL2                 UPDATE NUMBER                    SJB\nDENUM    DS    BL1                 EXTENT NUMBER                    SJB\nDBNUM    DS    BL1                 BLOCKS NUMBER                    SJB\nDLDATE   DS    CL6                 LAST ACCESS DATE   MMDDYY        SJB\nDFILL    DS    CL6                                                  SJB\n         EJECT                                                      SJB\nCOMMADDR DSECT                     POINTED TO BY COMMLPTR           SJB\nCOMMECB  DS    A                   POINTER TO COMMAND ECB           SJB\nCOMMCIB  DS    A                   POINTER TO COMMAND INPUT BUFFER  SJB\n         SPACE 3                                                    SJB\n         CVT   DSECT=YES           CVT MAPPING                      SJB\n         EJECT                                                      SJB\n         IEFJESCT                  JES COMMUNICATION TABLE DSECT    SJB\n         EJECT                                                      SJB\n         IEFJSSOB (SO)             SSOB DSECT WITH PSO FUNCTION     SJB\n         EJECT                                                      SJB\n         IEFZB4D0                  SVC 99 REQUEST BLOCK DSECT       SJB\n         EJECT                                                      SJB\n         DCBD  DSORG=PS,DEVD=DA    DCB DSECT                        SJB\n         SPACE 3                                                    SJB\n         END   ,                                                    SJB\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JCLNSP13": {"ttr": 3845, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x83\\x14_\\x00\\x83\\x14_\\x14\\x15\\x06\\xe7\\x06\\xe3\\x00\\x04\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1983-05-25T00:00:00", "modifydate": "1983-05-25T14:15:00", "lines": 1767, "newlines": 1763, "modlines": 4, "user": "SHSWRPD"}, "text": "*/ ***************************************************************** /*\n*                                                                     *\n*  LIBSPOOL - JES2 SYSMSG SPOOLING SYSTEM:  A LIBRARIAN EXTERNAL WTR  *\n*                                                                     *\n*/****************************************************************** /*\n*/ THIS VERSION OF JCLLIST WILL RUN ON SP1.3 USING THE OXY JES2 LOG  /*\n*/ FORMAT TO OBTAIN PROGRAM NAME. IT WILL WORK WITH EITHER SP1.1     /*\n*/ OR SP1.3 JES2.                                                    /*\n*/****************************************************************** /*\n*/*                                                                  */\n*/*                                                                  */\n*/*       WRITTEN BY :             SAM J. BASS              (SJB)    */\n*/*                                OCCIDENTAL SYSTEMS INC.           */\n*/*                                5 GREENWAY PLAZA EAST             */\n*/*                                HOUSTON, TEXAS 77046              */\n*/*                                (713) 840-2178                    */\n*/*                                                                  */\n*/*       DISCLAMER:               THIS PROGRAM HAS BEEN FULLY       */\n*/*                                TESTED AT OSI, BUT I CLAIM NO     */\n*/*                                RESPONSIBILITY FOR THIS PROGRAM   */\n*/*                                PROCESSING THE WRONG JES2         */\n*/*                                SYSOUT DATASETS                   */\n*/*                                                                  */\n*/*       MODIFIED BY :            ROBERT P DZIALAK         (RPD)    */\n*/*                                OCCIDENTAL CHEMICAL CORPORATION   */\n*/*                                360 RAINBOW BLVD. SOUTH           */\n*/*                                NIAGARA FALLS , NEW YORK 14303    */\n*/*                                (716) 286-3251                    */\n*/*                                                                  */\n*/****************************************************************** /*\n*/****************************************************************** /*\n* DATA NAME 'MSGCLIST' DEFINES THE MSGCLASSES TO BE SERVICED        RPD\n* INCLUDE ONLY MSGCLASSES TO BE USED                                RPD\n&RECLASS SETC  'J'                                                  SJB\n&PRODID  SETC  'P'   FIRST CHARACTER OF USERIDS ACCEPTED            RPD\n*                    SPACE ACCEPTS ALL USERIDS                      RPD\n&DUMMYCLS SETC 'Z'   JES2 DUMMY SYSOUT CLASS                        RPD\n&SYSOUTMX SETA 4000  RECORD LIMIT FOR EACH NON JCL SYSOUT           RPD\n&MSGCLPRT SETC 'X'   MSGCLASS-PRINT JCL ALWAYS                      RPD\n         EJECT                                                      SJB\n*/ ***************************************************************** /*\n*                                                                     *\n*    SAMPLE STARTED TASK JCL:                                         *\n*                                                                     *\n*    //LIBSPOOL PROC DEBUG=                                           *\n*    //IEFPROC  EXEC PGM=JCLLIST,TIME=1439,PARM=&DEBUG                *\n*    //SYSPRINT DD  DUMMY                                             *\n*    //REPORT   DD  SYSOUT=A                                          *\n*    //SNAP     DD  SYSOUT=A                                          *\n*    //SYSABEND DD  SYSOUT=A                                          *\n*    //OSJOB    DD  DUMMY                                             *\n*    //MASTER   DD  DISP=SHR,DSN=SYSX.JCLLIST.LIBRARY                 *\n*    //SYSIN    DD  &&SYSIN,DISP=(NEW,DELETE),UNIT=SYSDA,             *\n*    //             SPACE=(CYL,(10,10)),                              *\n*    //             DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160)              *\n*                                                                     *\n*    NOTE THAT THE TASK WILL REMAIN IN AN 'OUTPUT LONG-WAIT' AND      *\n*    WILL ISSUE AN STIMER EVERY 10 SECONDS TO CHECK FOR THE PRESENCE  *\n*    OF ANY SYSOUT='MSGCLIST' CLASS OUTPUT.                           *\n*                                                                     *\n*        THE MODULE MUST BE MARKED AC=1 AND MUST RESIDE IN            *\n*        AN AUTHORIZED LIBRARY IFA STEPLIB IS USED OR MUST            *\n*        MUST BE IN A LINKLIST LIBRARY. THIS MODULE IS                *\n*        NOT REENTRANT.                                               *\n*                                                                     *\n*/ ================================================================= /*\n*                                                                     *\n*  OS MACROS USED BY THIS MODULE:                                     *\n*                                                                     *\n*  IEFSSREQ     EXTRACT      QEDIT        WAIT         GET     WTO    *\n*  IEFZB4D0     MODESET      SYNADRLS     TTIMER       SNAP    PUT    *\n*  IEFJESCT     DYNALLOC     SYNADAF      STIMER       OPEN    DCBD   *\n*  IEFJSSOB     QEDIT        DCB          CLOSE        CALL    WTOR   *\n*  CONNECT      RELEASE      LINK         LIBWTO                      *\n*                                                                     *\n*/ ================================================================= /*\n*                                                                     *\n*  UPON ISSUANCE OF AN OPERATOR PAUSE COMMAND, A WTO IS ISSUED BY     *\n*  JCLLIST THAT TERMINATION IS IN PROGRESS.                           *\n*                                                                     *\n*/ ================================================================= /*\n*                                                                     *\n*  NAMING CONVENTIONS OF MODULES PLACED ON THE LIBRARIAN SPOOL        *\n*                                                                     *\n*    TO INSURE UNIQUE LIBRARIAN NAMES, THE LIBSPOOL MODULE NAME       *\n*    IS CONSTRUCTED AS FOLLOWS:                                       *\n*                                                                     *\n*               BYTE  1   - LETTER A THRU Z                           *\n*               BYTES 2-4 - JULIAN DAY NUMBER                         *\n*               BYTES 5-8 - JES2 JOB NUMBER                           *\n*                                                                     *\n*    IF A MODULE IS FOUND TO ALREADY EXIST ON THE LIBSPOOL DATA SET   *\n*    THEN AN  'B' REPLACES THE A (ETC.) IN BYTE ONE.                  *\n*                                                                     *\n*/ ================================================================= /*\n*                                                                     *\n*  CRITERIA UPON WHICH JCLLIST WILL SET THE PRINT FLAG AND FORCE A    *\n*  JOB TO BE PRINTED AND WILL ALSO BE ADDED TO THE LIBRARIAN SPOOL)   *\n*                                                                     *\n*      ---------------------------------------------------------      *\n*      -*-  ANY OF THE FOLLOWING IBM MESSAGE IDENTIFICATIONS -*-      *\n*      ---------------------------------------------------------      *\n*                                                                     *\n*  IEF251I - JOB CANCELLED                                            *\n*  IEF283I - NOT DELETED X                                            *\n*  IEF287I - NOT RECTLGD/CATALGD/UNCATLGD                             *\n*  IEF450I - ABEND           IEF452I - JOBFAIL/JOB NOT RUN JCL ERROR  *\n*  IEF451I - ENDED BY CC     IEF453I - JOB FAILED - JCL ERROR         *\n*                                                                     *\n*              IF ANY ERRORS ARE FOUND THEN THE SYSOUT DATASETS       *\n*              ARE RELEASED FROM THE HOLD QUEUE.                      *\n*                                                                     *\n* CONDITION CODES ARE ALSO CHECKED AND JCL WILL BE PRINTED AS FOLLOWS *\n*                                                                     *\n*            MSGCLASS ? - JCL WILL BE PRINTED IF ANY STEP IN THE JOB  *\n*                         HAS A CONDITION CODE GREATER THAN 0.\n*                                                                     *\n*            MSGCLASS X - JCL WILL ALWAYS BE PRINTED-SPECIFIED IN     *\n*                         &MSGCLPRT ABOVE                             *\n*                                                                     *\n*/ ================================================================= /*\n*    THIS VERSION OF JCLLIST WILL COLLECT SYSOUTS #2,3 AND 4 AS WELL  *\n*    AS ANY OTHER SYSOUT OF THE JOB THAT MATCHES THE MESSAGE CLASS OF *\n*    THE JOB. EG. //DDNAME DD SYSOUT=*                                *\n*/ ================================================================= /*\n*                                                                   SJB\n*              SNAPID              LOCATION                         SJB\n*                                                                   SJB\n*              1                   JCLLIST/GETDS    (SSREQ)         SJB\n*              2                   LIBMAIN/NEXTSSRQ (SSREQ)         SJB\n*              3                   LIBMAIN/CLOSBPSO (SSREQ)         SJB\n*              4                   LIBMAIN/ALLOCDS  (DYNALLOC)      SJB\n*              5                   LIBMAIN/LIBINIT  (SYSIN OPEN)    SJB\n*              6                   LIBMAIN/LIBFAIR  (BAD MASTOPN)   SJB\n*              7                   LIBMAIN/LIBFAIR  (BAD MASTMOD)   SJB\n*              8                   LIBMAIN/UNALLOC  (DYNALLOC)      SJB\n*              9                   LIBMAIN/OPENIN   (BAD OPEN PSO)  SJB\n*              10                  LIBMAIN/CLOSEOUT (BAD LIBRARY)   SJB\n*                                                                   SJB\n*                                                                     *\n*/ ================================================================= /*\n*                                                                   SJB\n         PUNCH ' SETCODE AC(1) '                                    SJB\n         PUNCH ' INCLUDE SYSLIB(TSOFAIR) '                          SJB\n         PUNCH ' ORDER JCLLIST,LIBMAIN,SSREQ,TSOFAIR '              SJB\nJCLL     TITLE 'LIBSPOOL: JCLLIST - LIBRARIAN/JES2 EXTERNAL WRITER' SJB\n         PRINT ON,GEN,NODATA                                        SJB\n         PRINT GEN                                                  SJB\n         MACRO                                                      SJB\n&LABEL   LIBWTO &MSG                                                SJB\n         LCLC  &ID                                                  SJB\n&ID      SETC  '&SYSNDX'                                            SJB\n&LABEL   TM    FLAG2,$DEBUG                                         SJB\n         BNO   WTO&ID                                               SJB\n         PUSH  PRINT                                                SJB\n*        WTO   &MSG                                                 SJB\n         PRINT OFF                                                  SJB\n         WTO   &MSG                                                 SJB\n         POP   PRINT                                                SJB\nWTO&ID   DS    0H                                                   SJB\n         MEND                                                       SJB\n         EJECT                                                      SJB\nJCLLIST  CSECT                                                      SJB\n         SPACE 3                                                    SJB\nR0       EQU   0                                                    SJB\nR1       EQU   1                                                    SJB\nR2       EQU   2                                                    SJB\nR3       EQU   3                                                    SJB\nR4       EQU   4                                                    SJB\nR5       EQU   5                                                    SJB\nR6       EQU   6                                                    SJB\nR7       EQU   7                                                    SJB\nR8       EQU   8                                                    SJB\nR9       EQU   9                                                    SJB\nR10      EQU   10                                                   SJB\nR11      EQU   11                                                   SJB\nR12      EQU   12                                                   SJB\nR13      EQU   13                  SAVE AREA POINTER                SJB\nR14      EQU   14                  BASE REG FOR SVC 99 PARAM        SJB\nR15      EQU   15                                                   SJB\n         EJECT                                                      SJB\n         CONNECT LWORK1,WORK1,BASE=R12,CLEAR=YES,PARM=R10           SJB\n         EJECT                                                      SJB\n         L     R1,0(,R10)          GET ADDR OF PARM FIELD           SJB\n         LH    R2,0(R1)            GET LENGTH OF PARM               SJB\n         LTR   R2,R2               ANY PARM                         SJB\n         BZ    NOPARM                                               SJB\n         C     R2,=F'80'           LENGTH > 80                      SJB\n         BL    *+8                 NO                               SJB\n         LA    R2,80               YES                              SJB\n         BCTR  R2,0                -1 FOR EXECUTE                   SJB\n         EX    R2,MVCPARM          MOVE IN PARM FIELDS              SJB\nNOPARM   EXTRACT COMMLPTR,FIELDS=COMM GET ADDR OF ECB AND CIB PTRS  SJB\n         SPACE 1                                                    SJB\n         L     R2,COMMLPTR         GET COMMAND LIST ADDRESS         SJB\n         USING COMMADDR,R2         ESTABLISH ADDRESSABILITY         SJB\n         LM    R9,R10,COMMADDR     GET COMMAND ECB AND CIB POINTERS SJB\n*        ST    R9,CMNDECBP         STORE ECB POINTER IN ECBLIST     SJB\n*        MVI   CMNDECBP,X'80'      INDICATE LAST ECB PTR IN LIST    SJB\n         ST    R9,CMDECBP2         STORE ECB POINTER IN OTHER ECBLISTJB\n         SPACE 1                                                    SJB\n         QEDIT ORIGIN=COMMCIB,BLOCK=(R10) FREE CIB                  SJB\n         QEDIT ORIGIN=COMMCIB,CIBCTR=1    INDICATE 1 CIB TO BE CHAINEDB\n         SPACE 2                                                    SJB\n         USING SSOB,R10            ESTABLISH ADDRESSABILITY         SJB\n         LA    R10,LWASSOB                                          SJB\n*                                                                   SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n*              MISCELLANEOUS INITIALIZATION                         SJB\n*                                                                   SJB\n         MVI   FLAG2,X'00'                                          SJB\n         CLC   =C'DEBUG',PARMCARD  IS IT DEBUG                      SJB\n         BNE   *+8                 NO                               SJB\n         OI    FLAG2,$DEBUG        YES, TURN ON FLAG                SJB\n*                                                                   SJB\n         OI    FLAG2,$TITLE                                         SJB\n*                                                                   SJB\n         MVC   LWADCBRP,RPTDCB     MOVE IN RPT DCB                  SJB\n         LA    R4,LWADCBRP                                          SJB\n         OPEN  ((R4),(OUTPUT))     OPEN IT                          SJB\n*                                                                   SJB\n         LA    R1,MSGCLIST         LOAD ADDR. OF BEGINNING MSGCLASS RPD\n         ST    R1,CURMCLAD         LIST AND INIT. ITS SAVE AREA     RPD\n         SPACE 3                                                    SJB\n*                                                                   SJB\nGETDS    DS    0H                                                   SJB\n*                                                                   SJB\n         MVI   FLAG,$FIRST         $FIRST ON, INITILIZE SSOB        SJB\n         MVI   FLAG3,$FRSTPSO      INDICATE WE ARE REQUESTING THE   RPD\n*                                  FIRST SYSOUT OF A NEW JOB        RPD\n*                                                                   SJB\n*              GO DO A SUB-SYSTEM REQUEST FOR NEW JOB               SJB\n*                                                                   SJB\n         L     R15,=A(SSREQ)                                        SJB\n         LA    R1,WORK1            POINT TO MAIN WORK AREA          SJB\n         BALR  R14,R15                                              SJB\n*                                                                   SJB\n*              END OF SUB-SYSTEM REQUEST                            SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n         MVI   SNAPID,1                                             SJB\n         LH    R15,RETCODE         GET IEFSSREQ RETURN CODE         SJB\n         LTR   R15,R15             SUBSYSTEM REQUEST SUCCESSFUL?    SJB\n         BNZ   SNAPIT              NO. TERMINATE WRITER             SJB\n*                                                                   SJB\n*              IF GOOD RC THEN GO  CALL LIBRARIAN                   SJB\n*                                                                   SJB\n         C     R15,SSOBRETN        DID WE GET A DATA SET FROM JES?  SJB\n         BE    CALLLIB             YES. GO CALL LIBRARIAN           SJB\n*                                                                   SJB\n         LA    R1,4                FOR 'COMPARE'                    SJB\n         C     R1,SSOBRETN         ARE WE OUT OF ELIGIBLE DATA SETS?SJB\n         BNE   SNAPIT              NO. SOMETHING WRONG. TERMINATE   SJB\n*                                                                   RPD\n*  ENTERING THIS CODE MEANS THAT NO OUTPUT EXISTED IN JES FOR THE   RPD\n*  MSGCLASS THAT WAS REQUESTED. THE NEXT CLASS IN THE LIST WILL NOW RPD\n*  BE LOOKED AT.                                                    RPD\n*                                                                   RPD\nCHGMSGCL L     R1,CURMCLAD         LOAD ADDRESS OF CURRENT MSGCLASS RPD\n         LA    R1,1(R1)            INCREMENT TO THE NEXT CLASS      RPD\n         ST    R1,CURMCLAD         SAVE THIS ADDRESS                RPD\n         CLI   0(R1),C' '          ARE WE AT THE END OF THE LIST    RPD\n         BNE   SETWAIT             NOT YET                          RPD\n         LA    R1,MSGCLIST         LOAD ADDR. OF BEGINNING OF LIST  RPD\n         ST    R1,CURMCLAD         SAVE THIS ADDRESS                RPD\n*\nSETWAIT  DS    0H                                                   SJB\n         SPACE 1                                                    SJB\n         MODESET KEY=ZERO          GET INTO KEY ZERO                SJB\n         SPACE 1                                                    SJB\n*                                                                   SJB\nWAIT     DS    0H                                                   SJB\n         STIMER REAL,POSTWAIT,BINTVL=WTIME TO KILL SOME TIME        SJB\n         SPACE 1                                                    SJB\n         MVI   STIMRECB,X'00'      CLEAR ECB                        SJB\n         L     R2,ECBL2PTR         POINT TO SECOND ECBLIST          SJB\n         SPACE 1                                                    SJB\n         WAIT  1,ECBLIST=(R2),LONG=YES WAIT FOR WORK, CMND, STIMER EXIT\n         SPACE 1                                                    SJB\n*                                                                   SJB\n         TM    STIMRECB,X'40'      WERE WE POSTED BY STIMER EXIT?   SJB\n         LA    R3,GETDS            PREPARE TO REQUEST A DATA SET IF YES\n         BO    RESETPK             YES. GET OUT OF KEY 0 AND CONTINUEJB\n         SPACE 1                                                    SJB\n         TTIMER CANCEL             CANCEL REMAINDER OF TIMER INTERVALJB\n         SPACE 1                                                    SJB\nCHKCMND  L     R2,CMDECBP2         GET COMMAND ECB ADDRESS          SJB\n         TM    0(R2),X'50'         DID OPERATOR ENTER A COMMAND?    SJB\n         MVI   0(R2),X'00'         CLEAR ECB IN ANY EVENT           SJB\n         LA    R3,STOPWTR          PREPARE TO TERMINATE IF STOP CMNDSJB\n         BO    RESETPK             IT IS. GET OUT OF KEY 0 AND HALT SJB\n         LA    R3,FREECIB          PREPARE TO FREE CIB IF MODIFY CMNDJB\n         BM    RESETPK             FREE CIB AND GO REQUEST A DATA SETJB\n         B     WAIT                GO WAIT FOR CMND OR END OF INTERVALB\n         SPACE 1                                                    SJB\n         SPACE 1                                                    SJB\nFREECIB  L     R2,COMMLPTR         GET COMMAND LIST ADDRESS         SJB\n         L     R3,COMMCIB          GET CIB POINTER                  SJB\n         SPACE 1                                                    SJB\n         QEDIT ORIGIN=COMMCIB,BLOCK=(R3) FREE CIB                   SJB\n         QEDIT ORIGIN=COMMCIB,CIBCTR=1   INDICATE 1 CIB TO BE CHAINEDJB\n         SPACE 1                                                    SJB\n         B     GETDS               GO REQUEST A DATA SET FROM JES   SJB\n         SPACE 2                                                    SJB\nRESETPK  DS    0H                                                   SJB\n         MODESET KEY=NZERO         GET OUT OF KEY ZERO              SJB\n         SPACE 1                                                    SJB\n         BR    R3                  CONTINUE AS DETERMINED EARLIER   SJB\n         DROP  R2                                                   SJB\n         EJECT                                                      SJB\nCALLLIB  DS    0H                                                   SJB\n         LIBWTO 'ENTERED CALLLIB'                                   SJB\n*                                                                   SJB\n         LA    R1,WORK1            PASS WORK AREA ADDR              SJB\n         L     R15,=A(LIBMAIN)                                      SJB\n         BALR  14,15               CALL LIBRARIAN                   SJB\n*                                                                   SJB\n*              SNAPID IS SET IN LIBMAIN ROUTINE                     SJB\n*                                                                   SJB\n         LTR   R15,R15             WAS CALL GOOD?                   SJB\n         BNZ   SNAPIT              NO GO SNAP                       SJB\n*                                                                   SJB\n         LIBWTO 'EXIT    CALLLIB'                                   SJB\n*                                                                   RPD\n         TM    FLAG3,$FRSTPSO      CHECK IF JOB WAS PROCESSED       RPD\n         BO    CHGMSGCL            NO. GO WAIT THEN CHANGE MSGCLASS RPD\n*                                                                   RPD\n         B     GETDS               NO. GO WAIT FOR WORK OR OPER CMNDSJB\n         EJECT                                                      SJB\nSTOPWTR  OI    SSSOFLG2,SSSOCTRL   INDICATE WRITER TERMINATING      SJB\n         SPACE 1                                                    SJB\n         MODESET MODE=SUP          GET INTO SUPERVISOR STATE        SJB\n         SPACE 1                                                    SJB\n         LA    R1,LWASSPRM         LOAD ADDRESS OF SSOB             SJB\n         SPACE 1                                                    SJB\n         IEFSSREQ                  TELL SUBSYSTEM WE ARE SHUTTING DOWNB\n         SPACE 1                                                    SJB\n         MODESET MODE=PROB         GET OUT OF SUPERVISOR STATE      SJB\n         SPACE 2                                                    SJB\nENDWTR   WTO 'LIBSPOOL:  JCLLIST IS SHUTTING DOWN',ROUTCDE=2,DESC=4 SJB\n         SPACE 1                                                    SJB\n         B     MAINRET                                              SJB\nMAINRET  DS    0H                                                   SJB\n         LA    R4,LWADCBRP         ADDR OR REPORT DCB               SJB\n         CLOSE ((R4))              CLOSE REPORT FILE                SJB\n         FREEPOOL ((R4))                                            RPD\n         LH    R15,RETCODE         RELOAD RETCODE                   SJB\n         RELEASE LWORK1,RC=(15)                                     SJB\n         SPACE 2                                                    SJB\nSNAPIT   DS    0H                                                   SJB\n         LA    R4,SNAPDCB                                           SJB\n         OPEN  ((R4),(OUTPUT))     FOR SNAP, FOLLOWING              SJB\n         SPACE 1                                                    SJB\n         LA    R2,0(,R13)                                           SJB\n         LA    R3,LWORK1(,R13)                                      SJB\n         SR    R5,R5                                                SJB\n         IC    R5,SNAPID                                            SJB\n         SNAP  DCB=SNAPDCB,ID=(5),PDATA=ALL,                        SJBX\n               STORAGE=((2),(3))                                    SJB\n         SPACE 1                                                    SJB\n         B     STOPWTR             TERMINATE WRITER                 SJB\n         PUSH  USING               SAVE BASE REGISTER INFORMATION   SJB\n         DROP  R12                 DROP PROGRAM BASE REGISTERS      SJB\n         EJECT                                                      SJB\nPOSTWAIT EQU   *                   STIMER EXIT                      SJB\n         USING POSTWAIT,R15        ESTABLISH ADDRESSABILITY         SJB\n         STM   R14,R12,12(R13)     SAVE REGISTERS                   SJB\n         SPACE 1                                                    SJB\n         POST  STIMRECB            INDICATE END OF INTERVAL         SJB\n         SPACE 1                                                    SJB\n         LM    R14,R12,12(R13)     RESTORE REGISTERS                SJB\n         BR    R14                 RETURN TO SYSTEM                 SJB\n         SPACE 1                                                    SJB\n         POP   USING               RESTORE PREVIOUS BASE REG STATUS SJB\n         EJECT                                                      SJB\nMVCPARM  MVC   PARMCARD(*-*),2(R1) MOVE IN PARM FIELD               SJB\nCOMMLPTR DC    A(0)                PTR FROM EXTRACT (TO ECB & CIB PTRS)\n*                                                                   SJB\nCMNDECBP DC    X'80',AL3(0)        PTR TO ECB POSTED WHEN CMD ISSUE SJB\n*                                                                   SJB\nECBL2PTR DC    A(CMDECBP2)         PTR TO SECOND ECBLIST            SJB\nCMDECBP2 DC    A(0)                PTR TO COMMAND ECB               SJB\nTIMRECBP DC    X'80',AL3(STIMRECB) PTR TO ECB POSTED BY STIMER EXIT SJB\nSTIMRECB DC    F'0'                ECB POSTED BY STIMER EXIT        SJB\nWTIME    DC    F'1000'             10 SECOND INTERVAL FOR STIMER    RPD\nBLANKS   DC    CL80' '             BLANKS                           SJB\n*\nMSGCLIST DC    CL8'WX0W0   '    STRING OF MSGCLASSES TO BE SERVICED RPD\nMSGCLSTP DC    C' '             STOP BYTE FOR MSGCLASS STRING       RPD\n*\n         LTORG                                                      SJB\n         EJECT                                                      SJB\nSNAPDCB  DCB   DDNAME=SNAP,DSORG=PS,MACRF=W,                        SJB*\n               RECFM=VBA,LRECL=125,BLKSIZE=882                      SJB\n         EJECT                                                      SJB\nRPTDCB   DCB   DDNAME=REPORT,DSORG=PS,MACRF=PM,                     SJB*\n               RECFM=FB,LRECL=90,BLKSIZE=6210                       SJB\n         DS    0F                                                   SJB\nRPTDCBL  EQU   *-RPTDCB                                             SJB\n         DROP  R12                 DROP PROGRAM BASE REGISTERS      SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n*        LIBMAIN - DOES PROCESSING OF ALL DATA FOR 1 JOB ONLY       SJB\n*                                                                   SJB\n*        REG   INPUT               USAGE                            SJB\n*                                                                   SJB\n*        R1    PARM REG            PARM/WORK REG                    SJB\n*        R2    N/A                 LIBPUT RECORD ADDR               SJB\n*        R3    N/A                 LENGTH OF INPUT RECORD           SJB\n*        R4    N/A                 WORK REG                         SJB\n*        R5    N/A                 ADDR OF INPUT RECORD             SJB\n*        R6    N/A                 BASE REG #2                      SJB\n*        R7    N/A                 BAL  REG FOR LIBPUT              SJB\n*        R8    N/A                 BAL  REG FOR READNEXT            SJB\n*        R9    N/A                 BAL  REG FOR OTHER ROUTINES      SJB\n*        R10   N/A                 BASE REG FOR SSOB                SJB\n*        R11   N/A                 BASE REG FOR WORK1 DSECT         SJB\n*        R12   N/A                 BASE REG #1                      SJB\n*        R13   N/A                 SAVE AREA REG                    SJB\n*        R14   RETURN ADDR         BALR REG                         SJB\n*        R15   ENTRY POINT         BALR REG/ RETURN CODE            SJB\n         SPACE 3                                                    SJB\nLIBMAIN  CSECT                                                      SJB\n         CONNECT LWORK2,WORK2,BASE=(R12,R6),CLEAR=YES,PARM=R11      SJB\n         EJECT                                                      SJB\n         USING SSOB,R10            ESTABLISH ADDRESSABILITY         SJB\n         USING WORK1,R11           GET ADDR. TO 1 SAVEAREA          SJB\n         LA    R10,LWASSOB         ADDR OF SSOB                     SJB\n         LIBWTO 'ENTERED LIBMAIN'                                   SJB\n*                                                                   SJB\n         TM    FLAG2,$TITLE        IS TITLE REQUIRED NOW            SJB\n         BNO   NOTITLE             NO,                              SJB\n         LA    R2,TITLE1                                            SJB\n         BAL   R7,RPTPUT                                            SJB\n         LA    R2,TITLE2                                            SJB\n         BAL   R7,RPTPUT                                            SJB\n         NI    FLAG2,255-$TITLE    TURN OFF TITLE FLAG              SJB\nNOTITLE  DS    0H                                                   SJB\n*                                                                   RPD\n         CLI   SPACEPID,C'&PRODID' IS &PRODID = SPACE               RPD\n         BE    INITLOOP            YES, DO NOT RESTRICT USER ID     RPD\n         CLI   SSSOUSER,C'&PRODID' IS FIRST CHARACTER OF USER ID =P RPD\n         BE    INITLOOP            YES, PROCESS THIS JOB            RPD\n         OI    FLAG,$CLOSING       TURN ON CLOSING FLAG             RPD\n         MVI   FLAG3,X'00'         TURN OFF FIRST REQ. FLAG         RPD\n         BAL   R9,ALLOCDS          GO ALLOCATE IT                   RPD\n         BAL   R9,FREEREQD         FREE SYSOUT AND REQ TO DUMMY     RPD\n         B     CLOSNRPT            GO DELETE ALL THE OTHER SYSOUTS  RPD\n*                                  FOR THIS JOB.                    RPD\n*                                                                   SJB\n         EJECT                                                      SJB\nINITLOOP DS    0H                                                   SJB\n         MVI   FLAG4,X'00'         TURN OFF PRINTING REASON FLAG4   RPD\n         MVI   FLAG5,X'00'         TURN OFF PRINTING REASON FLAG5   RPD\n         XC    BADCMES+18(4),BADCMES+18 CLEAR MAX. COND. CODE FIELD RPD\n         BAL   R9,LIBINIT          INIT, SINCE THIS IS FIRST TIME   SJB\nALLOCLOP DS    0H                                                   SJB\n         BAL   R9,ALLOCDS          GO ALLOCATE IT                   SJB\n*                                  FOR THIS JOB AND SET R8          SJB\n         TM    FLAG3,$FRSTPSO      DID WE GET JCL FOR THIS JOB      RPD\n         BNO   OPENLOOP            YES,OPEN AND LOOK AT THE RECORDS RPD\n         BAL   R9,FREEKEEP         FREE THIS SYSOUT                 RPD\n         MVC   LWACLOSE,CLOSE                                       RPD\n         CLOSE (LWADCBOT),MF=(E,LWACLOSE)  CLOSE SYSIN FILE         RPD\n         FREEPOOL LWADCBOT                                          RPD\n         RELEASE LWORK2,RC=0       RETURN WITH SWITCH TO            RPD\n*                                  $FRSTPSO ON TO SHOW WE SHOULD    RPD\n*                                  WAIT THEN GET NEXT MSGCLASS      RPD\nOPENLOOP DS    0H                                                   SJB\n         BAL   R9,OPENIN           OPEN INPUT FILE                  SJB\n*                                                                   SJB\nREADNEXT GET   LWADCBIN            GET RECORD ADDR                  SJB\n         LR    R5,R1               SAVE INPUT RECORD ADDR           SJB\n*                                                                   SJB\n         LA    R1,LWADCBIN                                          SJB\n         USING IHADCB,R1                                            SJB\n         LH    R3,DCBLRECL         GET INPUT RECORD LENGTH          SJB\n         TM    DCBRECFM,DCBRECU    IS THIS RECFM=U                  SJB\n         BO    READNXT1            YES,THEN SKIP                    SJB\n         TM    DCBRECFM,DCBRECV    IS THIS RECFM=V                  SJB\n         BZ    READNXT1            NOPE, THEN SKIP                  SJB\n         DROP  R1                                                   SJB\n         LA    R1,4                LENGTH OF RDW                    SJB\n         SR    R3,R1               SUBTRACT FROM LRECL              SJB\n         LA    R5,4(,R5)           REPOSITION PAST RDW              SJB\nREADNXT1 DS    0H                                                   SJB\n*                                                                   SJB\n         LA    R2,CARDOUT          GET CARD OUTPUT ADDR             SJB\n         MVC   CARDOUT,BLANKS2                                      SJB\n*              R8 IS INITIALLY SET IN ALLOCDS FOR PSO# 2,3,4        SJB\n*              AND THE CHECK ROUTINE SETS IT ALSO                   SJB\n         BR    R8                  GO TO CHECK ROUTINE              SJB\n*              AND WRITE THE OUTPUT RECORDS                         SJB\n         EJECT                                                      SJB\nEOF      DS    0H                                                   SJB\n         LIBWTO 'ENTERED EOF     '                                  SJB\n*                                                                   SJB\n         MVC   LWACLOSE,CLOSE                                       SJB\n         LA    R4,LWADCBIN                                          SJB\n         CLOSE ((R4)),MF=(E,LWACLOSE) CLOSE INPUT FILE              SJB\n         FREEPOOL ((R4))                                            RPD\n         SPACE 2                                                    SJB\n*                                                                   SJB\n         BAL   R9,FREEKEEP         FREE KEEP PSO                    SJB\n*                                                                   SJB\n*              GET NEXT PSO#                                        SJB\n*                                                                   SJB\n         B     NEXTSSRQ            GET NEXT PSO FOR THIS JOB        SJB\n*                                                                   SJB\nNEXTSSRQ DS    0H                                                   SJB\n         LIBWTO 'ENTERED NEXTSSRQ'                                  SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n*                                                                   SJB\n*              GO DO A SUB-SYSTEM REQUEST                           SJB\n*                                                                   SJB\n         L     R15,=A(SSREQ)                                        SJB\n         LA    R1,WORK1            POINT TO MAIN WORK AREA          SJB\n         BALR  R14,R15                                              SJB\n*                                                                   SJB\n*              END OF SUB-SYSTEM REQUEST                            SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n         MVI   SNAPID,2                                             SJB\n         LH    R15,RETCODE         GET IEFSSREQ RETURN CODE         SJB\n         LTR   R15,R15             SUBSYSTEM REQUEST SUCCESSFUL?    SJB\n         BNZ   SNAPIT2             NO. TERMINATE WRITER             SJB\n*                                                                   SJB\n         C     R15,SSOBRETN        DID WE GET A DATA SET FROM JES?  SJB\n         BE    ALLOCLOP            YES. GO ALLOC IT                 SJB\n*                                                                   SJB\n         LA    R1,4                FOR 'COMPARE'                    SJB\n         C     R1,SSOBRETN         ARE WE OUT OF ELIGIBLE DATA SETS?SJB\n         BNE   SNAPIT2             NO. SOMETHING WRONG. TERMINATE   SJB\n         B     NOPSOLFT            NO PSO DSN LEFT                  SJB\n         SPACE 3                                                    SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n*                                                                   SJB\nNOPSOLFT DS    0H                                                   SJB\n         LIBWTO 'ENTERED NOPSOLFT'                                  SJB\n         CLC   DSFLAGS,ALLDS       DID WE PROCESS 2,3,4 PSO         SJB\n         BE    CLOSEOUT            YES, THEN CLOSEOUT               SJB\n         OI    FLAG,$PRINT         NOPE, THEN TURN ON PRINT FLAG    SJB\n         B     CLOSEOUT                                             SJB\nCLOSEOUT DS    0H                                                   SJB\n         LIBWTO 'ENTERED CLOSEOUT'                                  SJB\n         MVC   DSCERROR,DASHES     ASSUME NO PRINT ERROR            RPD\n         TM    FLAG,$PRINT         SEE IF NOT ALLDS OR JCL ERROR    SJB\n         BO    SHOWPRTD            PRINTED IF ON-GO SHOW PRINTED    RPD\n         TM    FLAG5,$FNDCCMS      CHK IF COND. CODE MESSAGE FOUND  RPD\n         BNO   SHOWPRTD            NOT ON IF COND CODE NOT FOUND    RPD\n         B     CLOSNERR            NOT PRINTED                      RPD\nSHOWPRTD MVC   DSCERROR,=C'PRINTED' MOVE IN ERROR FLAG              SJB\nCLOSNERR LA    R2,SELCARD          -SEL  CARD                       SJB\n         BAL   R7,LIBPUT           PUT IT OUT                       SJB\n         LA    R2,DSCCARD          -DESC CARD                       SJB\n         BAL   R7,LIBPUT           PUT IT OUT                       SJB\n         LA    R2,ENDCARD          -END  CARD                       SJB\n         BAL   R7,LIBPUT           PUT IT OUT                       SJB\n*                                                                   SJB\n         MVC   LWACLOSE,CLOSE                                       SJB\n         LA    R4,LWADCBOT                                          SJB\n         CLOSE ((R4)),MF=(E,LWACLOSE)                               SJB\n         FREEPOOL ((R4))                                            RPD\n         OI    FLAG,$CLOSING       INDICATE WE ARE CLOSING          SJB\n*                                                                   SJB\n         LA    R1,LIBPARM                                           SJB\n         LINK  EP=LIBRARY          LINK TO LIBRARY                  SJB\n         LR    R5,R15              SAVE R15                         SJB\n*                                                                   SJB\n         LA    R4,LWADCBRP         ADDR OR REPORT DCB               SJB\n         USING IHADCB,R4                                            SJB\n         TM    DCBOFLGS,DCBOFOPN   DID OPEN WORK?                   SJB\n         DROP  R4                                                   SJB\n         BNO   CLOSNRPT            NO                               SJB\n         MVC   CARDOUT,BLANKS2                                      SJB\n         MVC   CARDOUT+00(8),ADDJOB MOVE IN MEMBER NAME             RPD\n         MVC   CARDOUT+10(8),PGMJOBN MOVE IN JOBNAME                SJB\n         MVC   CARDOUT+20(7),PGMUSER MOVE IN USERID                 SJB\n         MVC   CARDOUT+30(5),DSCDATE MOVE IN JOB BEGIN DATE         SJB\n         MVC   CARDOUT+40(4),DSCTON  MOVE IN JOB BEGIN TIME         SJB\n         MVC   CARDOUT+50(4),DSCTOFF MOVE IN JOB STOP  TIME         SJB\n         MVC   CARDOUT+63(1),DSCMSGCL MOVE IN MSGCLASS              RPD\n         MVC   CARDOUT+70(7),DSCERROR MOVE IN ERROR FLAG            SJB\n*                                                                   RPD\n         MVC   DSCDATE(5),=C'YYDDD' REINITIALIZE FOR NEXT JOB. THE  RPD\n         MVC   DSCTON(4),=C'HHMM'   NEXT JOB MAY NOT BE SCHDULED    RPD\n         MVC   DSCTOFF(4),=C'HHMM'  NO IEF375I AND IEF376I MESSAGES RPD\n*                                   WILL BE FOUND.                  RPD\n         LTR   R5,R5                                                SJB\n         BZ    CLOSEMSG                                             SJB\n         MVC   CARDOUT+80(10),=CL10'LIB ERROR'                      SJB\n         WTO 'LIBSPOOL: JCLLIST HAS LIBRARY ERROR',ROUTCDE=2,DESC=4 SJB\n         MVI   SNAPID,10           SET SNAP NUMBER                  SJB\n         STH   R5,RETCODE          SAVE RETURN CODE                 SJB\nCLOSEMSG LA    R4,LWADCBRP                                          SJB\n         PUT   (R4),CARDOUT                                         SJB\n         CLI   SNAPID,10           WAS THERE A LIBRARY ERROR        SJB\n         BE    SNAPIT2             YES, THEN TERMINATE              SJB\nCLOSNRPT DS    0H                                                   SJB\n*                                                                   SJB\n         MVI   SSSODSN,X'00'       INDICATE NEW JOB GROUP           SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n*              ONCE WE GET TO THIS POINT ALL SYSOUTS OF THE         RPD\n*              JOB WHICH MATCH THE MSGCLASS OF THE JOB WILL         RPD\n*              STILL BE AROUND.                                     RPD\n*                                                                   RPD\n*              FOR THESE PSO'S, RE-AQUIRE PSO, ALLOC AND            RPD\n*              FREE-REQR IF $PRINT ERROR FLAG OR                    RPD\n*              FREE-DEL  IF NO ERROR                                RPD\n*                                                                   SJB\n         LA    R5,999              LOAD MAX LOOP COUNT              SJB\nCLOSLOOP DS    0H                                                   SJB\nCLOSBPSO DS    0H                  RETURN FROM ALLOCDS IF           SJB\n*                                  BADPSO# ENCOUNTERED (BAD PSO     SJB\n*                                  HAS BEEN FREE-RLSE)              SJB\n*                                                                   SJB\n*              GO DO A SUB-SYSTEM REQUEST                           SJB\n*                                                                   SJB\n         L     R15,=A(SSREQ)                                        SJB\n         LA    R1,WORK1            POINT TO MAIN WORK AREA          SJB\n         BALR  R14,R15                                              SJB\n*                                                                   SJB\n*              END OF SUB-SYSTEM REQUEST                            SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n         MVI   SNAPID,3                                             SJB\n         LH    R15,RETCODE         GET IEFSSREQ RETURN CODE         SJB\n         LTR   R15,R15             SUBSYSTEM REQUEST SUCCESSFUL?    SJB\n         BNZ   SNAPIT2             NO. TERMINATE WRITER             SJB\n*                                                                   SJB\n         C     R15,SSOBRETN        DID WE GET A DATA SET FROM JES?  SJB\n         BE    CLOSALOC            YES. GO ALLOC IT                 SJB\n*                                                                   SJB\n         LA    R1,4                FOR 'COMPARE'                    SJB\n         C     R1,SSOBRETN         ARE WE OUT OF ELIGIBLE DATA SETS?SJB\n         BNE   SNAPIT2             NO. SOMETHING WRONG. TERMINATE   SJB\n         B     LIBRET              NO PSO DSN LEFT                  SJB\n*                                                                   SJB\nCLOSALOC DS    0H                                                   SJB\n         BAL   R9,ALLOCDS          ALLOC DSN                        SJB\n         TM    FLAG,$PRINT         WAS THERE AN ERROR               SJB\n         BO    CLOSRLSE            YES, DO FREE RLSE, REQUEUECLS    SJB\n         TM    FLAG5,$FNDCCMS      WAS CONDITION CODE MESSAGE FOUND RPD\n         BNO   CLOSRLSE            NO ABEND OR NORMAL STEP COMPLETE RPD\n*                                  IN JOB-PRINT JCL                 RPD\n         TM    FLAG5,$ENDJOB       JOB END IEF376I MESSAGE FOUND ?  RPD\n         BNO   CLOSRLSE            NO, JOB WAS SCHEDULED BUT NEVER  RPD\n*                                  FINISHED EXECUTION-SYSTEM MAY    RPD\n*                                  HAVE CRASHED WHILE JOB RUNNING   RPD\n*                                  THEREFORE PRINT JCL              RPD\n         BAL   R9,FREEREQD         FREE REQUEUE TO DUMMY CLASS      RPD\n*        BAL   R9,FREEDEL          ELSE, DO FREE DELETE             SJB\n         B     CLOSINCR            GO TO BCT                        SJB\nCLOSRLSE DS    0H                                                   SJB\n         BAL   R9,FREEREQR         FREE REQUEUE CLASS RLSE          SJB\nCLOSINCR DS    0H                                                   SJB\n         BCT   R5,CLOSLOOP         GO TO IT                         SJB\n         B     LIBRET                                               SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n         EJECT                                                      SJB\nLIBRET   DS    0H                                                   SJB\n         LIBWTO 'ENTERED LIBRET'                                    SJB\n*        MVC   LWACLOSE,CLOSE                                       SJB\n*        CLOSE (LWADCBOT),MF=(E,LWACLOSE)                           SJB\n         RELEASE LWORK2,RC=0                                        SJB\n         SPACE 3                                                    SJB\nLIBRET2  DS    0H                                                   SJB\n         LIBWTO 'ENTERED LIBRET2'                                   SJB\n*                                                                   SJB\n         MVC   LWACLOSE,CLOSE                                       SJB\n         CLOSE (LWADCBOT),MF=(E,LWACLOSE)                           SJB\n         FREEPOOL LWADCBOT                                          RPD\n*                                                                   SJB\n         LH    R15,RETCODE                                          SJB\n         LTR   R15,R15             IS R15 > 0                       SJB\n         BNP   *+8                 YES                              SJB\n         LA    R15,32              NOPE, GIVE A BAD RETCODE         SJB\n         RELEASE LWORK2,RC=(15)                                     SJB\n         EJECT                                                      SJB\nALLOCDS  DS    0H                                                   SJB\n*                                                                   SJB\n*              ENTERED BY A        BALR   R9,ALLOCDS                SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED ALLOCDS'                                   SJB\n         MVC   CARDOUT(44),SSSODSN                                  SJB\n         LA    R2,CARDOUT                                           SJB\n         BAL   R7,RPTPUT2                                           SJB\n*                                                                   SJB\n         MVC   ALDDNAM,BLANKS2     MOVE BLANKS TO DDNAME            SJB\n         MVC   ALDSN,SSSODSN       MOVE DSNAME INTO ALLOCATE TEXT U SJB\n         USING S99RB,R14           ESTABLISH ADDRESSABILITY         SJB\n         LA    R14,S99AREA         SET UP SVC 99 PARM AREA BASE REG SJB\n         MVI   S99VERB,S99VRBAL    INDICATE ALLOC. TO BE PERFORMED  SJB\n         LA    R1,ALTUPTR          ADDR OF ALLOCATION TEXT UNIT PTRSSJB\n         ST    R1,S99TXTPP         STORE IN SVC 99 REQUEST BLOCK    SJB\n         LA    R1,S99PARM          LOAD ADDRESS OF SVC 99 PARM AREA SJB\n         DROP  R14                                                  SJB\n         SPACE 1                                                    SJB\n         DYNALLOC                  PERFORM DYNAMIC ALLOCATION       SJB\n         SPACE 1                                                    SJB\n         STH   R15,RETCODE         SAVE SVC 99 RETURN CODE          SJB\n         MVI   SNAPID,4            IDENTIFY SNAP ORIGIN             SJB\n         LTR   R15,R15             TEST SVC 99 RETURN CODE          SJB\n         BNZ   SNAPIT2             NO GOOD. SNAP AND TERMINATE      SJB\n         SPACE 2                                                    SJB\n*                                                                   SJB\n         MVC   CARDOUT(44),SSSODSN                                  SJB\n         LA    R2,CARDOUT                                           SJB\n         BAL   R7,RPTPUT2                                           SJB\n*                                                                   SJB\n         CLC   SSSODSN+14(5),PSODS IS THIS A PSO DATA SET?          SJB\n         BNE   BADPSO#             NO. GO DELETE IT                 SJB\n         CLI   SSSODSN+19,C'1'     DETERMINE IF THIS                RPD\n         BL    BADPSO#                IS A DATA SET WE              SJB\n         CLI   SSSODSN+19,C'4'           WISH TO PROCESS            SJB\n         BH    BADPSO#             IE PSO #2(LOG), #3(JCL), #4(MSG) SJB\n*                                  PSO #1(JCL)-NOT INTERPRETED(ACF) RPD\n*                                                                   RPD\n         MVI   FLAG3,X'00'         INDICATE JCL GOTTEN FOR THIS JOB RPD\n*                                                                   SJB\n*              STORE PSO# RELATIVE TO 0 IN DSTYPE                   SJB\n*                                                                   SJB\n         TM    FLAG,$CLOSING       ARE WE CLOSEING                  SJB\n         BO    ALLOCDS1            YES                              SJB\n*                                                                   SJB\n         CLI   SSSODSN+19,C'1'     PSO #1-JOB NOT INTERPRETED (ACF) RPD\n         BNE   PSO234              PAST INTERPRETATION              RPD\n         LA    R8,OTHERDS          BRANCH ADDRESS FOR OTHER SYSOUTS RPD\n         B     ALLOCDS0            CONTINUE                         RPD\n*                                                                   SJB\nPSO234   XR    R4,R4               CLEAR                            SJB\n         IC    R4,SSSODSN+19       GET PSO NUMBER (EBCDIC)          SJB\n         LA    R1,242              CONVERT PSO NUMBER TO BINARY AND SJB\n         SR    R4,R1               CHANGE SCALE: 0=LOG, 1=JCL, 2=MSGSJB\n         STC   R4,DSTYPE           SAVE CURRENT DATA SET TYPE       SJB\n         STC   R4,DSFLAGS(R4)      SAVE IT ALSO IN DSFLAGS+0(R4)    SJB\n         LR    R8,R4               COMPUTE OFFSET IN                SJB\n         SLL   R8,2                   BRANCH-ADDRESS TABLE          SJB\n         L     R8,DSPRCAD(R8)      GET APPROPRIATE BRANCH ADDRESS   SJB\n         SPACE 1                                                    SJB\n*                                                                   SJB\nALLOCDS0 MVC   CARDOUT(08),ALDDNAM                                  RPD\n         LA    R2,CARDOUT                                           SJB\n         BAL   R7,RPTPUT2                                           SJB\n*                                                                   SJB\nALLOCDS1 DS    0H                                                   SJB\n         BR    R9                                                   SJB\n         SPACE 3                                                    SJB\nBADPSO#  DS    0H                                                   SJB\n         TM    FLAG,$CLOSING       ARE WE CLOSEING                  SJB\n         BO    ALLOCDS1            YES, RETURN TO CLOSALOC PAR.     SJB\n*                                                                   RPD\n         TM    FLAG3,$FRSTPSO      WHAT SYSOUT IS THIS FOR THIS JOB RPD\n         BO    ALLOCDS1            FIRST SYSOUT NOT 2,3 OR 4        RPD\n*                              RETURN WITH $FRSTPSO ON WHICH WILL   RPD\n*                              CAUSE A WAIT AND THEN A SUBSYSTEM    RPD\n*                              REQUEST FOR THE NEXT MSGCLASS.       RPD\n*                                         HOPEFULLY THE NEXT TIME   RPD\n*                              A REQUEST IS MADE FOR THIS MSGCLASS  RPD\n*                              WE WILL GET THE JCL FIRST FOR A NEW  RPD\n*                              JOB.                                 RPD\n*                                                                   RPD\n         LA    R8,OTHERDS          BRANCH ADDRESS FOR OTHER SYSOUTS RPD\n         B     ALLOCDS0                                             RPD\n*                                                                   RPD\n         EJECT                                                      SJB\nLIBINIT  DS    0H                                                   SJB\n*                                                                   SJB\n*              ENTERED BY A        BALR   R9,LIBINIT                SJB\n*                                                                   SJB\n*              OPEN LIBRARIAN SYSIN FILE                            SJB\n*              CREATE AND WRITE -ADD CARD                           SJB\n*              CREATE AND WRITE -PGMR CARD                          SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED LIBINIT'                                   SJB\n         MVC   LWAOPEN,OPEN                                         SJB\n         MVC   LWADCBOT,OUTDCB     MOVE IN MODEL                    SJB\n         LA    R4,LWADCBOT                                          SJB\n         OPEN  ((R4),(OUTPUT)),MF=(E,LWAOPEN)                       SJB\n*                                  OPEN LIBRARIAN SYSIN FILE        SJB\n         USING IHADCB,R4                                            SJB\n         TM    DCBOFLGS,DCBOFOPN   DID OPEN WORK?                   SJB\n         DROP  R4                                                   SJB\n         BO    SYSINOK             YES                              SJB\n*                                                                   SJB\n         MVI   SNAPID,5            SET SNAPID                       SJB\n         LA    R15,24              SET FUNNY RC                     SJB\n         STH   R15,RETCODE         SAVE IT                          SJB\n         B     SNAPIT2             SNAP IT                          SJB\nSYSINOK  DS    0H                                                   SJB\n*                                                                   SJB\n         TIME  DEC                 GET JULIAN DAY FOR MODULE NAME   RPD\n         STH   R1,JULDTEPK         STORE PACKED JULIAN DATE         RPD\n         UNPK  JULIANDY,JULDTEPK   UNPACK JULIAN DATE               RPD\n*                                                                   RPD\n         MVC   ADDJOB+1(3),JULIANDY+0 MOVE JULIAN DAY TO -ADD CARD  RPD\n         MVC   ADDJOB+4(4),SSSOJOBI+4 MOVE IN JOB# TO -ADD CARD     RPD\n         MVI   ADDJOB+0,C'A'       INITIALIZE TO SEQ. CHAR TO \"A\"   RPD\n         BAL   R7,LIBFAIR          CHECK AND SEE IF OK              SJB\n         MVC   DSCJOB,ADDJOB       MOVE IN JOB# TO -DSC CARD        SJB\n         MVC   SELJOB,ADDJOB       MOVE IN JOB# TO -SEL CARD        SJB\n*                                                                   SJB\n         MVC   PGMJOBN,SSSOJOBN    MOVE JOBNAME TO -PGMR FIELD      SJB\n         MVC   PGMUSER,SSSOUSER    MOVE USERID  TO -PGMR FIELD      SJB\n*                                                                   SJB\n*              TRANSLATE ALL BLANKS TO '.' IN -PGMR CARD(OPERANDS)  SJB\n*                                                                   SJB\n         LA    R1,PGMJOBN          GET JOBNAME ADDR                 SJB\n         LA    R2,L'PGMJOBN+L'PGMUSER LENGTH TO CHECK               SJB\nTRANS1   DS    0H                                                   SJB\n         CLI   0(R1),C' '          IS IT BLANK                      SJB\n         BE    TRANS2              YES                              SJB\n         CLI   0(R1),X'00'         IS IT NULL                       SJB\n         BNE   TRANS3              NO                               SJB\nTRANS2   MVI   0(R1),C'.'          YES, TRANSLATE                   SJB\nTRANS3   LA    R1,1(,R1)           ADD ONE                          SJB\n         BCT   R2,TRANS1                                            SJB\n*                                                                   SJB\n         MVC   DLMJOB,ADDJOB       MOVE IN JOB# TO -DSC CARD        SJB\n*        LA    R2,DLMCARD          PUT OUT -DLM CARD                SJB\n*        BAL   R7,LIBPUT                                            SJB\n*                                                                   SJB\n         LA    R2,OPTCARD          PUT OUT -OPT CARD                SJB\n         BAL   R7,LIBPUT                                            SJB\n*                                                                   SJB\n         LA    R2,ADDCARD          PUT OUT -ADD CARD                SJB\n         BAL   R7,LIBPUT                                            SJB\n*                                                                   SJB\n         LA    R2,PGMCARD          PUT OUT -PGMR CARD               SJB\n         BAL   R7,LIBPUT                                            SJB\n*                                                                   SJB\n         BR    R9                  RETURN                           SJB\n*                                                                   SJB\n         EJECT                                                      SJB\nLIBFAIR  DS    0H                                                   SJB\n*                                                                   SJB\n*              LIBRARIAN FAIR      BAL  R7,LIBFAIR                  SJB\n*                                                                   SJB\n*              THIS CHECKS TO SEE IF THE MODULE NAME TO BE ADDED    SJB\n*              TO LIBRARY EXISTS. IF SO THEN THE LAST               SJB\n*              CHARACTER OF ADDJOB (AJJJNNNN) IN INCREMENTED        RPD\n*              AND THE TEST IS MADE AGAIN. THIS PROCESS CONTINUES   SJB\n*              UNTIL THE NAME IS UNIQUE OR UNTIL THE CHARACTER      SJB\n*              '@' IS REACHED $PRINT IS TURNED ON                   SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED LIBFAIR  '                                 SJB\n         CALL  MASTOPN,(0,FAIRFLG),VL                               SJB\n         CLI   FAIRFLG,C'0'        DID LIBRARIAN OPEN WORK          SJB\n         BNE   FAIRBAD1            NOPE, BAD                        SJB\n*                                                                   SJB\n         MVC   FAIRMOD,BLANKS2                                      SJB\n         MVC   FAIRMOD(8),ADDJOB   MOVE IN ADDJOB                   RPD\n         LA    R4,FAIRSEQ                                           SJB\nFAIRCHK  DS    0H                                                   SJB\n         CALL  MASTMOD,(FAIRMOD,FAIRFLG),VL SEE IF MODULE EXISTS    SJB\n         CLI   FAIRFLG,C'1'        DOES IT EXIST                    SJB\n         BE    FAIRXIT1            NO, THEN EXIT THIS ONES OK       SJB\n         CLI   FAIRFLG,C'0'        NORMAL RETURN CODE               SJB\n         BNE   FAIRBAD2            BAD RETURN CODE                  SJB\n         LA    R4,1(,R4)           GET NEW SEQUENCE CHARACTER ADDR  SJB\n         MVC   FAIRMOD+0(1),0(R4)  MOVE IN NEW CHARACTER            RPD\n         CLI   0(R4),C'@'          IS THIS THE END                  SJB\n         BE    FAIRXIT2                                             SJB\n         B     FAIRCHK                                              SJB\nFAIRXIT2 DS    0H                                                   SJB\n         OI    FLAG,$PRINT                                          SJB\nFAIRXIT1 DS    0H                                                   SJB\n         MVC   ADDJOB,FAIRMOD                                       SJB\n         CALL  MASTCLS,                                             SJB\n         BR    R7                                                   SJB\n*                                                                   SJB\nFAIRBAD1 DS    0H                  MASTOPN FAILED                   SJB\n*                                                                   SJB\n         MVI   SNAPID,6            SET SNAPID                       SJB\n         LA    R15,24              SET FUNNY RC                     SJB\n         STH   R15,RETCODE         SAVE IT                          SJB\n         B     SNAPIT2             SNAP IT                          SJB\n*                                                                   SJB\nFAIRBAD2 DS    0H                  MASTMOD FAILED                   SJB\n*                                                                   SJB\n         MVI   SNAPID,7            SET SNAPID                       SJB\n         LA    R15,24              SET FUNNY RC                     SJB\n         STH   R15,RETCODE         SAVE IT                          SJB\n         B     SNAPIT2             SNAP IT                          SJB\nFAIRSEQ  DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ@'                       SJB\nFAIRMOD  DC    CL8' '                                               SJB\nFAIRFLG  DC    C' '                                                 SJB\n         EJECT                                                      SJB\nFREEKEEP DS    0H                                                   SJB\n*                                                                   SJB\n*              FREEKEEP SYSOUT     BAL  R9,FREEKEEP                 SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED FREEKEEP'                                  SJB\n         LA    R1,TUFRKEPH         KEEP, HOLD                       SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\nFREERLSE DS    0H                                                   SJB\n*                                                                   SJB\n*              FREERLSE SYSOUT     BAL  R9,FREERLSE                 SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED FREERLSE'                                  SJB\n         LA    R1,TUFRKEPR         KEEP, RELEASE                    SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         SPACE 3                                                    SJB\nFREEDEL  DS    0H                                                   SJB\n*                                                                   SJB\n*              FREEDEL SYSOUT      BAL R9,FREEDEL                   SJB\n*                                                                   RPD\n         CLC   SSSODSN+14(6),PSODS     CHECK IF PSO #2(MSG)         RPD\n         BNE   SKIPWTOS                DO NOT WTO FOR OTHER PSOS    RPD\n         MVC   SUCCESS+26(8),SSSOJOBN                               RPD\n         MVC   SUCCESS+35(4),SSSOJOBI+4                             RPD\n         MVC   SUCCESS+40(1),SSSOCLAS                               RPD\nSUCCESS  WTOR  'LIBSPOOL: XXXXXXXX-YYYY-Z - SUCCESSFULLY COMPLETED',   X\n               RPLYAREA,1,RPLYECB,ROUTCDE=2                         RPD\n*                                                                   SJB\nSKIPWTOS LIBWTO 'ENTERED FREEDEL'                                   SJB\n         LA    R1,TUFRDEL          DELETE, RELEASE                  SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         SPACE 3                                                    SJB\nFREEREQH DS    0H                                                   SJB\n*                                                                   SJB\n*              FREEREQ HOLD SYSOUT BAL R9,FREEREQH                  SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED FREEREQH'                                  SJB\n         LA    R1,TUFRREQH         CHANGE CLASS, HOLD               SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         SPACE 3                                                    SJB\nFREEREQR DS    0H                                                   SJB\n*                                                                   SJB\n*              FREEREQ RLSE SYSOUT BAL R9,FREEREQR                  SJB\n*                                                                   RPD\n         CLC   SSSODSN+14(6),PSODS     CHECK IF PSO #2(MSG)         RPD\n         BNE   SKIPWTOF                DO NOT WTO FOR OTHER PSOS    RPD\n         MVC   FAILURE+26(8),SSSOJOBN                               RPD\n         MVC   FAILURE+35(4),SSSOJOBI+4                             RPD\n         MVC   FAILURE+40(1),SSSOCLAS                               RPD\nTSTABEND TM    FLAG4,$ABEND            TEST IF ABEND FOUND          RPD\n         BNO   TSTCANCL                NO                           RPD\n         MVC   FAILURE+44(22),ABNDMES INDICATE ABEND                RPD\n         B     FAILURE                 WRITE IT                     RPD\nTSTCANCL TM    FLAG4,$CANCEL           TEST IF CANCEL FOUND         RPD\n         BNO   TSTNOTCA                NO                           RPD\n         MVC   FAILURE+44(22),CNCLMES INDICATE ABEND/JCL ERROR      RPD\n         B     FAILURE                 WRITE IT                     RPD\nTSTNOTCA TM    FLAG4,$NOTCAT           TEST IF NOT CATALOGED FOUND  RPD\n         BNO   TSTNOTDL                NO                           RPD\n         MVC   FAILURE+44(22),NOTCMES INDICATE NOT CATALOGED FOUND  RPD\n         B     FAILURE                 WRITE IT                     RPD\nTSTNOTDL TM    FLAG4,$NOTDEL           TEST IF NOT DELETED FOUND    RPD\n         BNO   TSTENDCC                NO                           RPD\n         MVC   FAILURE+44(22),NOTDMES INDICATE NOT DELETED FOUND    RPD\n         B     FAILURE                 WRITE IT                     RPD\nTSTENDCC TM    FLAG4,$ENDEDCC          TEST IF ENDED BY CC          RPD\n         BNO   TSTJCLER                NO                           RPD\n         MVC   FAILURE+44(22),ENDBYCC INDICATE ENDED BY COND. CODE  RPD\n         B     FAILURE                 WRITE IT                     RPD\nTSTJCLER TM    FLAG4,$JCLERR           TEST IF JCL ERROR            RPD\n         BNO   TSTBADCC                NO                           RPD\n         MVC   FAILURE+44(22),JCLERRM INDICATE JCL ERROR            RPD\n         B     FAILURE                 WRITE IT                     RPD\nTSTBADCC TM    FLAG4,$BADCC            TEST IF BAD COND CODE FOUND  RPD\n         BNO   TSTFNDCC                NO                           RPD\n         MVC   FAILURE+44(22),BADCMES INDICATE BAD COND CODE FOUND  RPD\n         B     FAILURE                 WRITE IT                     RPD\nTSTFNDCC TM    FLAG5,$FNDCCMS          TEST IF COND CODE MESSAGE    RPD\n         BO    TSTENDJB                COND CODE MESSAGE FOUND      RPD\n         MVC   FAILURE+44(22),PRTDMES INDICATE PRINTED-NO PROBLEM   RPD\n         B     FAILURE                 WRITE IT                     RPD\nTSTENDJB TM    FLAG5,$ENDJOB           JOB END IEF376I FOUND ?      RPD\n         BO    TSTPRTCL                YES                          RPD\n         MVC   FAILURE+44(22),PRTNOTDN INDICATE PRINTED-NOT DONE    RPD\n         B     FAILURE                 WRITE IT                     RPD\nTSTPRTCL MVC   FAILURE+44(22),PRTCMES INDICATE PRINT MSGCLASS JOB   RPD\n         B     FAILURE                 WRITE IT                     RPD\nFAILURE  WTOR  'LIBSPOOL: XXXXXXXX-YYYY-Z - MMMMMMMMMMMMMMMMMMMMMM',   X\n               RPLYAREA,1,RPLYECB,ROUTCDE=2                         RPD\n*                                                                   RPD\nSKIPWTOF LIBWTO 'ENTERED FREEREQR'                                  SJB\n         LA    R1,TUFRREQR         CHANGE CLASS, RELEASE            SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         SPACE 3                                                    SJB\nFREEREQD DS    0H                                                   SJB\n         CLI   SPACEPID,C'&PRODID' IS &PRODID = SPACE               RPD\n         BE    CKIFPSO2            YES, DO NOT RESTRICT USER ID     RPD\n         CLI   SSSOUSER,C'&PRODID' IS FIRST CHARACTER OF USER ID =P RPD\n         BNE   SKIPWTOD            NO, WTOR NOT NEEDED, DELETEING   RPD\n*                                  A NON-PROUCTION USER ID JOB      RPD\n*                                                                   SJB\n*              FREEREQ RLSE SYSOUT BAL R9,FREEREQD-REQUEUE TO DUMMY SJB\n*                                                                   RPD\nCKIFPSO2 CLC   SSSODSN+14(6),PSODS     CHECK IF PSO #2(MSG)         RPD\n         BNE   SKIPWTOD                DO NOT WTO FOR OTHER PSOS    RPD\n         MVC   SUCCESSD+26(8),SSSOJOBN                              RPD\n         MVC   SUCCESSD+35(4),SSSOJOBI+4                            RPD\n         MVC   SUCCESSD+40(1),SSSOCLAS                              RPD\nSUCCESSD WTOR  'LIBSPOOL: XXXXXXXX-YYYY-Z - SUCCESSFULLY COMPLETED',   X\n               RPLYAREA,1,RPLYECB,ROUTCDE=2\n*                                                                   RPD\nSKIPWTOD LIBWTO 'ENTERED FREEREQD'                                  SJB\n         LA    R1,TUFRREQD         CHANGE CLASS, RELEASE TO DUMMY   SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         EJECT                                                      SJB\nUNALLOC  DS    0H                                                   SJB\n         CLC   =XL8'00',ALDDNAM    IS IT NULLS                      SJB\n         BER   R9                  YES, EXIT                        SJB\n         CLC   =CL8' ',ALDDNAM     IS IT BLANKS                     SJB\n         BER   R9                  YES, EXIT                        SJB\n         MVC   UALDDNAM,ALDDNAM    MOVE DDNAME TO UNALLOCATION TXT  SJB\n         LIBWTO 'ENTERED UNALLOC'                                   SJB\n         USING S99RB,R14           ESTABLISH ADDRESSABILITY         SJB\n         LA    R14,S99AREA         SET UP SVC 99 PARM AREA BASE REG SJB\n         MVI   S99VERB,S99VRBUN    INDICATE UNALLOCATION TO BE DONE SJB\n*                                                                   SJB\n         L     R1,LWAUALTU         ADDR OF UNALLOCATION TU PTRS     SJB\n*                                                                   SJB\n         ST    R1,S99TXTPP         STORE IN SVC 99 REQUEST BLOCK    SJB\n         LA    R1,S99PARM          LOAD ADDRESS OF SVC 99 PARM AREA SJB\n         DROP  R14                                                  SJB\n         SPACE 1                                                    SJB\n         DYNALLOC                  PERFORM DYNAMIC UNALLOCATION     SJB\n*        SPACE 1                                                    SJB\n         STH   R15,RETCODE         SAVE SVC 99 RETURN CODE          SJB\n         MVI   SNAPID,8            IDENTIFY SNAP ORIGIN             SJB\n         LTR   R15,R15             TEST SVC 99 RETURN CODE          SJB\n         BNZ   SNAPIT2             NO GOOD. SNAP AND TERMINATE      SJB\n         BR    R9                  RETURN                           SJB\n         EJECT                                                      SJB\nOPENIN   DS    0H                                                   SJB\n*                                                                   SJB\n*              OPEN INPUT          BALR   R9,OPENIN                 SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED OPENIN '                                   SJB\n*                                                                   SJB\n         MVC   LWADCBIN,INDCB                                       SJB\n         LA    R4,LWADCBIN         INPUT DCB                        SJB\n         USING IHADCB,R4           ESTABLISH ADDRESSABILITY         SJB\n*                                                                   SJB\n         MVC   DCBDDNAM,ALDDNAM    MOVE DDNAME AS SET BY SVC 99 TO DCBB\n         OPEN  ((R4),(INPUT))      OPEN INPUT DATA SET              SJB\n         SPACE 1                                                    SJB\n         XC    RETCODE,RETCODE     CLEAR RETURN CODE FIELD          SJB\n         MVI   SNAPID,9            IDENTIFY SNAP ORIGIN             SJB\n         TM    DCBOFLGS,DCBOFOPN   WAS OPEN SUCCESSFUL?             SJB\n         BZ    SNAPIT2             NO. SNAP AND TERMINATE           SJB\n         DROP  R4                                                   SJB\n         BR    R9                                                   SJB\n         SPACE 3                                                    SJB\nLIBPUT   DS    0H                                                   SJB\n*                                                                   SJB\n*              LIBPUT              BAL  R7,LIBPUT                   SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED LIBPUT  '                                  SJB\n         TM    FLAG,$CLOSING       ARE WE CLOSING A JOB             SJB\n         BO    LIBPUT1             YES, OUTPUT FILE IS CLOSED       SJB\n         LA    R4,LWADCBOT                                          SJB\n         PUT   (R4),((R2))         PUT OUT RECORD                   SJB\nLIBPUT1  LA    R2,CARDOUT          GET CARD OUTPUT ADDR             SJB\n         MVC   CARDOUT,BLANKS2                                      SJB\n         BR    R7                                                   SJB\n         SPACE 3                                                    SJB\nRPTPUT2  DS    0H                                                   SJB\n*                      DEBUGGING                                    SJB\n*              RPTPUT2             BAL  R7,RPTPUT2                  SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED RPTPUT2'                                   SJB\n         TM    FLAG2,$DEBUG        IS THIS DEBUG OPTION             SJB\n         BNO   RPTPUT1             NO, THEN SKIP                    SJB\nRPTPUT   DS    0H                                                   SJB\n*                                                                   SJB\n*              RPTPUT              BAL  R7,RPTPUT                   SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED RPTPUT '                                   SJB\n         LA    R4,LWADCBRP                                          SJB\n         USING IHADCB,R4                                            SJB\n         TM    DCBOFLGS,DCBOFOPN   DID OPEN WORK?                   SJB\n         DROP  R4                                                   SJB\n         BNO   RPTPUT1             NO, EXIT NO REPORT               SJB\n         PUT   (R4),((R2))         PUT OUT RECORD                   SJB\nRPTPUT1  LA    R2,CARDOUT          GET CARD OUTPUT ADDR             SJB\n         MVC   CARDOUT,BLANKS2                                      SJB\n         BR    R7                                                   SJB\n         EJECT                                                      SJB\nSNAPIT2  DS    0H                                                   SJB\n*                                                                   SJB\n*                                                                   SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED SNAPIT2'                                   SJB\n         B     LIBRET2                                              SJB\n*                                                                   SJB\n*                                                                   SJB\n*                                                                   SJB\n         EJECT\n*/ ***************************************************************** /*\n*                                                                     *\n*  THE FOLLOWING BLOCKS OF CODE DEFINE THE CRITERIA BY WHICH JOBS     *\n*  ARE SELECTED FOR POSSIBLE PRINTING BY LIBSPOOL.  EACH OF THE 3     *\n*  COMPONENTS, JES2 JOB LOG, JCL, AND SYSTEM MESSAGE BLOCKS (SMB'S/   *\n*  ALLOCATION/DEALLOCATION MESSAGES) OF ALL CLASS 'MSGCLIST' JOBS ARE *\n*  SCANNED FOR THE OCCURRENCE OF SIGNIFICANT MESSAGE IDENTIFICATION   *\n*  NUMBERS WHICH INDICATE THAT AN EXCEPTIONAL CONDITION OCCURRED DUR- *\n*  ING JOB PROCESSING (EG. JCL ERROR, ABEND, NOT CAT 2, ETC.). UPON   *\n*  THE OCCURRENCE OF THESE MESSAGE ID'S THE JOB IS FLAGGED FOR SUBSE- *\n*  QUENT PRINTING; OTHERWISE, JOB START/STOP INFORMATION IS EXTRACT-  *\n*  ED FOR INCLUSION ON A LIBRARIAN COMMENT CARD DURING THE PROCESS OF *\n*  ADDING THE JOB TO THE LIBSPOOL.                                    *\n*                                                                     *\n*/ ***************************************************************** /*\n*                                                                   SJB\n*              R2 = OUTPUT BUFFER ADDR                              SJB\n*              R3 = LENGTH OF INPUT RECORD                          SJB\n*              R5 = INPUT RECORD ADDR                               SJB\n*              R7 = BAL REG FOR LIBPUT                              SJB\n*              R8 = POINTS TO RETURN ADDR FROM READNEXT             SJB\n*                                                                   SJB\n         EJECT                                                      SJB\nJES2JLOG DS    0H                                                   SJB\n         LIBWTO 'ENTERED JES2LOG'                                   SJB\n         MVC   DSCMSGCL,SSSOCLAS   SAVE MSGCLASS OF JOB             RPD\n         BAL   R8,READNEXT         SET CONT. ADDR AND IGNORE FIRST LINE\n         MVC   0(80,R2),0(R5)      MOVE LINE (80 CHARS) TO LIB IOAREA\n         MVI   0(R2),C'1'          SET NEW PAGE ASA CHAR\n         BAL   R7,LIBPUT           RETURN TO LIBRARIAN WITH LOG TITLE\n         MVI   0(R2),C'0'          SET DOUBLE SPACE ASA CHAR\n         LA    R7,READNEXT         SET NEXT ENTRY BRANCH ADDR\n         BAL   R8,LIBPUT           SET CONT. ADDR; RET WITH BLANK LINE\n         SPACE 1\n         MVI   0(R5),C' '          INSERT SINGLE SPACE ASA CHAR\nCKIEF45  CLC   20(5,R5),IEF45      IS THIS AN IEF45* MSG?\n         BNE   NOTIEF45            NO. CONTINUE\n         CLI   25(R5),C'3'         IEF450 TO IEF453?\n         BH    CK4PRTMC            NO. CONTINUE                     RPD\n         CLI   25(R5),C'0'         IEF450I ?                        RPD\n         BNE   NOT450I             NO. CONTINUE                     RPD\n         OI    FLAG4,$ABEND        INDICATE ABEND/JCL ERROR         RPD\n*\n         LA    R1,29(R5)           START ADDR. FOR ABEND CODE       RPD\n         LA    R14,1               INCREMENT                        RPD\n         LA    R15,55(R5)          END ADDR. FOR ABEND CODE         RPD\nCHK4ABND CLC   0(4,R1),ABNDCOMM    LOOK FOR COMMON CHARACTERS       RPD\n         BNE   INCRABND            NO, INCREMENT TO NEXT ADDRESS    RPD\n         MVC   ABNDMES+9(10),9(R1) MOVE IN ABEND CODES TO MESSAGE   RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nINCRABND BXLE  R1,R14,CHK4ABND     INCREMENT AND CONTINUE           RPD\n         MVC   ABNDMES+9(10),=C'NOT FOUND '                         RPD\n         B     SETPRT              COMMON CHAR NOT FOUND            RPD\n*\nNOT450I  CLI   25(R5),C'1'         IEF451I ?                        RPD\n         BNE   NOT451I             NO. CONTINUE                     RPD\n         OI    FLAG4,$ENDEDCC      INDICATE ENDED BY CONDITION CODE RPD\n*\n         LA    R1,29(R5)           START ADDR. FOR COND. CODE       RPD\n         LA    R14,1               INCREMENT                        RPD\n         LA    R15,55(R5)          END ADDR. FOR COND. CODE         RPD\nCHK4CC   CLC   0(4,R1),CCJOBEND    LOOK FOR COMMON CHARACTERS       RPD\n         BNE   INCRCC              NO, INCREMENT TO NEXT ADDRESS    RPD\n         MVC   ENDBYCC+18(4),15(R1) MOVE IN COND. CODE TO MESSAGE   RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nINCRCC   BXLE  R1,R14,CHK4CC       INCREMENT AND CONTINUE           RPD\n         MVC   ENDBYCC+18(4),=C'????'                               RPD\n         B     SETPRT              COMMON CHAR NOT FOUND            RPD\n*\nNOT451I  OI    FLAG4,$JCLERR       INDICATE JCL ERROR (IEF452(3)I)  RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nSETPRT   OI    FLAG,$PRINT         INDICATE JOB IS TO BE PRINTED\n         B     CONTDS1             CONTINUE\n*\nNOTIEF45 CLC   20(7,R5),IEF251I    IS THIS A 'JOB CANCELLED' MSG?\n         BNE   NOTIEF25            NO. CONTINUE                     RPD\n         OI    FLAG4,$CANCEL       INDICATE CANCEL MESSAGE          RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nNOTIEF25 CLC   20(8,R5),IIP026I    EMULATOR 'WRITE, DATA CHECK' MSG?\n         BE    SETPRT              YES. GO FLAG JOB FOR PRINTING\n         CLC   20(2,R5),REPLY      IS THIS AN OPERATOR REPLY?\n         BNE   STEPLINE            NO. CHECK FOR OXY STEP LINE      RPD\n         LA    R1,23(R5)           STARTING ADDRESS FOR SCAN\n         LA    R14,1               INCREMENT FOR BXLE\n         LA    R15,10(R1)          LAST ADDRESS FOR SCAN\nCHKCANCL CLC   1(6,R1),CANCEL      IS THIS A CANCEL REPLY?  WJS/01APR80\n         BNE   INCRCNCL            GO INCREMENT                     RPD\n         OI    FLAG4,$CANCEL       INDICATE CANCEL MESSAGE          RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nINCRCNCL BXLE  R1,R14,CHKCANCL     CONTINUE CHECK FOR 'CANCEL'\n         B     CK4PRTMC            NO, SEE IF PRINT MSGCLASS USED   RPD\n*\nSTEPLINE CLC   1(12,R5),STEPID     CHECK FOR STEP LINE              RPD\n         BNE   PROGLINE            CHECK FOR PROG LINE              RPD\n         CLC   65(12,R5),STEPFLSH  CHECK FOR STEP FLUSHED MESSAGE   RPD\n         BNE   GETCCODE            GO SAVE CONDITION CODE           RPD\n         MVI   LASTCC,X'FF'        FLAG THAT STEP FLUSHED           RPD\n         B     CK4PRTMC                                             RPD\nGETCCODE MVC   LASTCC(4),73(R5)    SAVE LAST COND CODE/ABEND CODE   RPD\n         B     CK4PRTMC                                             RPD\nPROGLINE CLC   1(12,R5),PROGID     CHECK FOR OXY PROGRAM LINE       RPD\n         BNE   CK4PRTMC                                             RPD\n         CLI   LASTCC,X'FF'        TEST FOR STEP FLUSHED FLAG       RPD\n         BE    CK4PRTMC            YES, CONTINUE                    RPD\n         CLC   LASTCC(4),CC0000    WAS LAST CC=0                    RPD\n         BE    CK4PRTMC            THIS STEP IS OK                  RPD\n         CLC   18(8,R5),OXYPROGM   WAS THIS PGM=OXYPROGM            RPD\n         BNE   SETBADCC            NO, FLAG THAT A BAD CC FOUND     RPD\n         CLC   LASTCC(4),CC0004    COMPARE OXYPROGM CC TO 0004      RPD\n         BH    SETBADCC            BAD IF GREATER THAN 0004         RPD\n         B     CK4PRTMC                                             RPD\nSETBADCC OI    FLAG4,$BADCC        INDICATE BAD CONDITION CODE      RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nCK4PRTMC CLI   SSSOCLAS,C'&MSGCLPRT' CK FOR PRINT ALWAYS MSGCLASS   RPD\n         BNE   CONTDS1             NO, CONTINUE                     RPD\n         OI    FLAG4,$PRTMSGC      INDICATE PRINT MESSAGE CLASS     RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\n*\nJCLDS    MVI   0(R2),C'1'          SET NEW PAGE ASA CHAR (OS/JCL)\n         BAL   R7,LIBPUT           RETURN TO LIBRARIAN WITH LOG TITLE\n         BALR  R8,0                SET CONT. ADDRESS\n         LA    R3,1(R3)            COMPENSATE FOR INSERTED ASA CHAR\n         MVC   1(79,R2),0(R5)      MOVE 79 CHARS TO LIB IOAREA\n         BCTR  R5,0                COMPENSATE FOR INSERTED ASA CHAR\n         B     CONTDS2             CONTINUE PROCESSING OF LINE\n         SPACE 1\nMSGDS    MVI   0(R5),C'1'          INSERT NEW PAGE ASA CHAR (SMB'S)\n         BALR  R8,0                SET CONT. ADDRESS\n*        LA    R1,4                LENGTH OF RDW\n*        SR    R3,R1               SUBTRACT FROM LRECL\n*        LA    R5,4(R5)            REPOSITION PAST RDW\n         CLC   1(7,R5),IEF375I     IS THIS A 'JOB START'/IEF375I MSG?\n         BNE   NOT375              NO.\n         MVC   DSCDATE,31(R5)      MOVE START DATE TO -DESC CARD    SJB\n         MVC   DSCTON,37(R5)       MOVE START TIME TO -DESC CARD    SJB\n         B     CONTDS1             CONTINUE\nNOT375   CLC   1(7,R5),IEF376I     IS THIS A 'JOB END'/IEF376I MSG?\n         BNE   NOT376              NO.\n         OI    FLAG5,$ENDJOB       INDICATE JOB END EXECUTION FOUND RPD\n         MVC   DSCTOFF,37(R5)      MOVE STOP TIME TO -DESC CARD     SJB\n         B     CONTDS1             CONTINUE\nNOT376   CLC   1(7,R5),IEF287I     IS THIS IEF287I/(NOT CATALOGED) MSG?\n         BNE   NOT287              NO, CONTINUE                     RPD\n         OI    FLAG4,$NOTCAT       INDICATE NOT CATALOGED MESSAGE   RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\nNOT287   CLC   1(7,R5),IEF283I     IS THIS IEF283I/(NOT DELETED X) MSG?\n         BNE   NOT283              NO, CONTINUE                     RPD\n         OI    FLAG4,$NOTDEL       INDICATE NOT DELETED MESSAGE     RPD\n         B     SETPRT              GO FLAG JOB FOR PRINTING         RPD\n*\nNOT283   CLC   1(7,R5),IEF142I     IS THIS A CONDITION CODE MESSAGE RPD\n         BNE   CONTDS1             NO. CONTINUE                     RPD\n         OI    FLAG5,$FNDCCMS      INDICATE CONDITION CODE MESSAGE  RPD\n*                                  FOUND-WILL PRINT IF NOT ON       RPD\n*                                  EG. - TYPRUN=SCAN                RPD\nFINDCC   LA    R1,10(R5)           STARTING ADDRESS FOR SCAN        RPD\n         LA    R14,1               INCREMENT FOR BXLE               RPD\n         LA    R15,35(R5)          LAST ADDRESS FOR SCAN            RPD\nCHKCCCOM CLC   0(4,R1),CCCOMMON    IS THIS A ' - S' FROM CC MESSAGE RPD\n         BE    CK4MAXCC            YES. GO CHECK COND CODE          RPD\n         BXLE  R1,R14,CHKCCCOM     CONTINUE CHECK FOR COMMON ' - S' RPD\n         B     SETPRT              ADDRESSES EXHAUSTED - PRINT IT   RPD\n*\nCK4MAXCC CLC   33(4,R1),BADCMES+18 COMPARE COND CODE TO MAX SO FAR  RPD\n         BL    CONTDS1             OLD COND CODE IS AT LEAST AS BIG RPD\n         MVC   BADCMES+18(4),33(R1)   SAVE THIS COND CODE AS MAX.   RPD\n         B     CONTDS1                                              RPD\n*                                                                   RPD\nOTHERDS  XC    RECRDCTR,RECRDCTR   ZERO SYSOUT RECORD COUNTER       RPD\n         LA    R1,LWADCBIN         INPUT DCB ADDR.                  RPD\n         USING IHADCB,R1                                            RPD\n         TM    DCBRECFM,DCBRECCA   TEST IF ASA CONTROL CHAR.        RPD\n         BO    WCARCNTL            PROCESS SYSOUT WITH CHAR. CONT.  RPD\n         TM    DCBRECFM,DCBRECCM   TEST IF MACHINE CONTROL CHAR.    RPD\n         BO    WCARCNTL            PROCESS SYSOUT WITH CHAR. CONT.  RPD\n         DROP  R1                                                   RPD\n*  ASSUME NO CARRIAGE CONTROL CHARACTERS IN THIS SYSOUT             RPD\n         MVI   0(R2),C'1'          SET NEW PAGE ASA CHAR IN OUT BUF RPD\n         BALR  R8,0                SET CONTINUATION ADDRESS         RPD\n         LH    R1,RECRDCTR         GET RECORD COUNT FOR THIS SYSOUT RPD\n         LA    R1,1(R1)            INCREMENT FOR CURRENT RECORD     RPD\n         CH    R1,MAXLINES         CK MAXIMUM ALLOWED FOR A SYSOUT  RPD\n         BH    TOOMANYL            MAXIMUM HAS BEEN REACHED         RPD\n         STH   R1,RECRDCTR         SAVE NEW RECORD COUNT FOR SYSOUT RPD\n         LA    R3,1(R3)            BUMP LRECL FOR INSERTED ASA CHAR RPD\n         MVC   1(79,R2),0(R5)      MOVE 79 CHAR. TO OUTPUT BUFFER   RPD\n         BCTR  R5,0                COMPENSATE FOR INSERTED ASA CHAR RPD\n         B     CONTDS2             CONTINUE PROCESSING OF LINE      RPD\nWCARCNTL MVI   0(R5),C'1'          SET NEW PAGE ASA CHAR            RPD\n         BALR  R8,0                SET CONTINUATION ADDRESS         RPD\n         LH    R1,RECRDCTR         GET RECORD COUNT FOR THIS SYSOUT RPD\n         LA    R1,1(R1)            INCREMENT FOR CURRENT RECORD     RPD\n         CH    R1,MAXLINES         CK MAXIMUM ALLOWED FOR A SYSOUT  RPD\n         BH    TOOMANYL            MAXIMUM HAS BEEN REACHED         RPD\n         STH   R1,RECRDCTR         SAVE NEW RECORD COUNT FOR SYSOUT RPD\n         B     CONTDS1             CONTINUE PROCESSING OF LINE      RPD\nTOOMANYL LH    R3,LMTMSGLN         LOAD LENGTH OF LIMIT MESSGE      RPD\n         EX    R3,LIMITREC         TELL SYSOUT LIMIT EXCEEDED       RPD\n         LA    R7,EOF              SET TO CLOSE THIS SYSOUT/CONTINU RPD\n         B     LIBPUT              WRITE MESSAGE AND CLOSE SYSOUT   RPD\n         EJECT\n*                                                                   SJB\n*              IF LRECL < 80 OR COLS 81-132 IS BLANK, THEN          SJB\n*              ONLY PUT 1 RECORD TO LIBRARIAN                       SJB\n*                                                                   SJB\nCONTDS1  C     R3,EIGHTY           IS RECORD LENGTH LESS THAN 80?\n         BL    SHORTREC            YES. GO PROCESS AS SUCH\n         MVC   0(80,R2),0(R5)      MOVE LINE (80 CHARS) TO LIB IOAREA\nCONTDS2  BAL   R7,LIBPUT           RETURN TO PANVALET WITH RECORD\n         S     R3,EIGHTY           IS RECORD LENGTH EXACTLY 80 BYTES?\n         BNP   READNEXT            YES. GO GET NEXT LINE            SJB\n         BCTR  R3,0                FOR EXECUTE\n         EX    R3,COMPREC          IS REST OF RECORD BLANK?\n         BE    READNEXT            YES. GO GET NEXT LINE\n         LA    R5,79(R5)           POINT TO LAST CHAR ALREADY WRITTEN\n         MVI   0(R5),X'FE'         INSERT CONTINUATION CHAR\n         LA    R3,2(R3)            RESET TO ACTUAL LENGTH OF REMAINDER\nSHORTREC BCTR  R3,0                FOR EXECUTE\n         EX    R3,MOVEREC          MOVE SHORT OR BALANCE OF LONG RECORD\n         LA    R7,READNEXT         BRANCH ADDR FOR NEXT ENTRY\n         B     LIBPUT              RETURN TO PANVALET WITH INPUT REC\n*                                                                   SJB\n         SPACE 3                                                    SJB\nCOMPREC  CLC   80(*-*,R5),BLANKS2  REMAINDER OF RECORD BLANK?       SJB\nMOVEREC  MVC   0(*-*,R2),0(R5)     MOVE REMAINDER TO IOAREA         SJB\nLIMITREC MVC   0(*-*,R2),LIMITMSG  MOVE LIMIT MESSAGE TO IOAREA     RPD\n         EJECT                                                      SJB\nSYNEXIT  SYNADAF ACSMETH=QSAM      INPUT (JES2) DATA SET SYNAD      SJB\n         SPACE 1                                                    SJB\n         MVI   0(R2),C'-'          INSERT TRIPLE SPACE ASA CC CHAR  SJB\n         MVC   1(78,R2),50(R1)     MOVE ERROR MESSAGE TO LIB IOAREA SJB\n         SPACE 1                                                    SJB\n         SYNADRLS                  RESTORE R13                      SJB\n         SPACE 1                                                    SJB\n         BAL   R7,LIBPUT           RETURN TO LIBRARIAN WITH ERROR   SJB\n         B     EOF                                                  SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n*              ALLOC   DSN FROM JES2                                SJB\n*                                                                   SJB\n         DS    0F                                                   SJB\nS99PARM  DC    X'80',AL3(S99AREA)  ADDRESS OF SVC 99 REQUEST BLOCK  SJB\nS99AREA  DC    AL1(S99RBEND-S99RB) LENGTH OF REQUEST BLOCK          SJB\n         DC    X'01'               VERB CODE                        SJB\n         DC    XL6'00'                                              SJB\n         DC    A(ALTUPTR)          POINTER TO LIST OF TEXT UNIT PTRSSJB\n         DC    XL8'00'                                              SJB\n         SPACE 1                                                    SJB\nALTUPTR  DC    A(ALDSTU)           ADDR OF DSNAME TEXT UNIT         SJB\n         DC    A(ALDDTU1)          ADDR OF DDNAME TEXT UNIT         SJB\n         DC    A(ALSSTU)           ADDR OF SUBSYSTEM TEXT UNIT      SJB\n         DC    X'00',AL3(ALDDTU)   ADDR OF DDNAME TEXT UNIT         SJB\n         DC    X'00',AL3(ALDSP1TU) ADDR OF DISP1  TEXT UNIT         SJB\n         DC    X'80',AL3(ALDSP2TU) ADDR OF DISP2  TEXT UNIT         SJB\n         SPACE 1                                                    SJB\nALDSTU   DC    X'0002'             ALLOCATION BY DSNAME             SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'002C'             LENGTH OF PARAMETER              SJB\nALDSN    DC    CL44' '             DSNAME                           SJB\n         DS    0H                                                   SJB\nALDDTU1  DC    X'0001'             ALLOCATION BY DDNAME             SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0008'             LENGTH OF DDNAME                 SJB\n         DC    CL8'JES2DDNM'       DDNAME FOR ALLOCATION            SJB\nALSSTU   DC    X'005C'             SUBSYSTEM DATA SET ALLOCATION    SJB\n         DC    X'0000'             ONE PARAMETER                    SJB\n         DC    X'0004'             LENGTH OF PARAMETER              SJB\nALSSN    DC    CL4'JES2'           SUBSYSTEM NAME                   SJB\n         DS    0H                                                   SJB\nALDDTU   DC    X'0055'             RETURN WITH DDNAME               SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0008'             LENGTH OF PARAMETER              SJB\nALDDNAM  DC    CL8' '              AREA FOR DDNAME                  SJB\n         DS    0H                                                   SJB\nALDSP1TU DC    X'0004'             DISP1                            SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0001'             LENGTH OF PARAMETER              SJB\n         DC    X'02'               DISP1=MOD                        SJB\n         DS    0H                                                   SJB\nALDSP2TU DC    X'0005'             DISP2                            SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0001'             LENGTH OF PARAMETER              SJB\n         DC    X'08'               DISP2=KEEP                       SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n*              UNALLOC DELETE,     RELEASE                          SJB\n*                                                                   SJB\nTUFRDEL  DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRDEL) FREE DELETE                      SJB\n         DC    X'80',AL3(UALFRREL) RELEASE FROM HOLD                SJB\n*                                                                   SJB\n*              UNALLOC KEEP,       RELEASE                          SJB\n*                                                                   SJB\nTUFRKEPR DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB\n         DC    X'80',AL3(UALFRREL) RELEASE FROM HOLD                SJB\n*                                                                   SJB\n*              UNALLOC KEEP,       HOLD                             SJB\n*                                                                   SJB\nTUFRKEPH DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB\n         DC    X'80',AL3(UALFRHLD) PUT ON HOLD                      SJB\n*                                                                   SJB\n*              UNALLOC KEEP,       CHANGE CLASS, RELEASE            SJB\n*                                                                   SJB\nTUFRREQR DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB\n         DC    X'00',AL3(UALFRREQ) REQUEUE THE CLASS                SJB\n         DC    X'80',AL3(UALFRREL) RELEASE FROM HOLD                SJB\n*                                                                   RPD\nTUFRREQD DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  RPD\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        RPD\n         DC    X'00',AL3(UALFRRQD) REQUEUE THE CLASS TO DUMMY       RPD\n         DC    X'80',AL3(UALFRREL) RELEASE FROM HOLD                RPD\n*                                                                   RPD\n*              UNALLOC KEEP,       CHANGE CLASS, HOLD               SJB\n*                                                                   SJB\nTUFRREQH DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB\n         DC    X'00',AL3(UALFRREQ) REQUEUE THE CLASS                SJB\n         DC    X'80',AL3(UALFRHLD) PUT ON HOLD                      SJB\n         EJECT                                                      SJB\nUALDDTU  DC    X'0001'             UNALLOCATION BY DDNAME           SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0008'             LENGTH OF PARAMETER              SJB\nUALDDNAM DC    CL8' '              DDNAME TO BE UNALLOCATED         SJB\n         DS    0H                                                   SJB\nUALFRDEL DC    X'0005'             OVERIDING DISP2 SPECIFICATION    SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0001'             LENGTH OF PARAMETER              SJB\n         DC    X'04'            4= DELETE DATA SET                  SJB\n         DS    0H                                                   SJB\nUALFRKEP DC    X'0005'             OVERIDING DISP2 SPECIFICATION    SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0001'             LENGTH OF PARAMETER              SJB\n         DC    X'08'            8= KEEP   DATA SET                  SJB\n         DS    0H                                                   SJB\nUALFRREL DC    X'000A'             RELEASE HELD DSN                 SJB\n         DC    X'0000'             NO PARAMETER                     SJB\n         DS    0H                                                   SJB\nUALFRHLD DC    X'0059'             HOLD QUEUE                       SJB\n         DC    X'0000'             NO PARAMETER                     SJB\n         DS    0H                                                   SJB\nUALFRREQ DC    X'0018'             RELEASE HELD DSN                 SJB\n         DC    X'0001'             1 PARAMETER                      SJB\n         DC    X'0001'             LENGTH                           SJB\n         DC    C'&RECLASS'         REQUEUE CLASS                    SJB\n         DS    0H                                                   RPD\nUALFRRQD DC    X'0018'             RELEASE HELD DSN                 RPD\n         DC    X'0001'             1 PARAMETER                      RPD\n         DC    X'0001'             LENGTH                           RPD\n         DC    C'&DUMMYCLS'        DUMMY REQUE CLASS                RPD\n         EJECT                                                      SJB\n         SPACE 2                                                    SJB\nDSPRCAD  DS    0F                  INITIAL BRANCH-ADDRESS TABLE     SJB\n         DC    A(JES2JLOG)         ADDRESS FOR PROCESSING LOG DATA SET\n         DC    A(JCLDS)            ADDRESS FOR PROCESSING JCL DATA SET\n         DC    A(MSGDS)            ADDRESS FOR PROCESSING MSG DATA SET\n         SPACE 2                                                    SJB\nEIGHTY   DC    F'80'               OUTPUT RECORD SIZE               SJB\nLIBPARM  DC    X'80',AL3(LIBPARM2) PARMS EXPECTED BY LIBRARY        SJB\n         CNOP  2,4                                                  SJB\nLIBPARM2 DC    AL2(L'LIBPARM3)     PARMS EXPECTED BY LIBRARY        SJB\nLIBPARM3 DC    C'NRJS,NJTA'        PARMS EXPECTED BY LIBRARY        SJB\nBLANKS2  DC    CL80' '             BLANKS                           SJB\nDASHES   DC    CL7'-------'        DASHES OR PRINTED                RPD\nRPLYECB  DC    F'0'                                                 RPD\nRPLYAREA DC    X'00'                                                RPD\nJULIANDY DC    CL3' '              JULIAN DATE                      RPD\nJULDTEPK DC    H'0'                PACKED JULIAN DATE               RPD\nRECRDCTR DC    H'0'                NON JCL SYSOUT RECORD COUNTER    RPD\nMAXLINES DC    H'&SYSOUTMX'        NON JCL MAXIMUM SYSOUT LINES     RPD\nLMTMSGLN DC    H'40'               LENGTH OF SYSOUT LIMIT MESSAGE   RPD\n         DS    0D                                                   SJB\n         LTORG                                                      SJB\nPSODS    DC    C'PS0002'           PSO DATA SET IDENTIFIER          RPD\nIEF375I  DC    C'IEF375I'          'JOB START' MSG NUMBER\nIEF376I  DC    C'IEF376I'          'JOB STOP' MSG NUMBER\nIEF287I  DC    C'IEF287I'          'NOT CATALOGUED 2' MSG NUMBER\nIEF283I  DC    C'IEF283I'          'NOT DELETED 8' MSG NUMBER\nIEF251I  DC    C'IEF251I'          'JOB CANCELLED' MSG NUMBER\nIEF45    DC    C'IEF45'            FOR LOCATING JCL ERROR MSGS, ETC\nIIP026I  DC    C'+IIP026I'         EMULATOR 'WRITE, DATA CHECK' MSG NO.\nREPLY    DC    CL2'R '             START OF OPERATOR REPLY\nCANCEL   DC    C'CANCEL'           REQUIRED FOR SCAN (PRINT CRITERION)\nALLDS    DC    X'000102'           INDICATING 3 DATA SETS FOUND FOR JOB\n         SPACE 1                                                    RPD\nIEF142I  DC    C'IEF142I'          STEP END CONDITION CODE MESSAGE  RPD\nSPACEPID DC    C' '                SPACE FOR NON RESTRICT USER ID   RPD\nCC0000   DC    C'0000'             CONDITION CODE 0000              RPD\nCC0004   DC    C'0004'             CONDITION CODE 0004              RPD\nLASTCC   DC    C'    '             CONDITION CODE FROM LAST STEP    RPD\nCCCOMMON DC    C' - S'             COMMON CHAR. IN IEF142I MESSAGE  RPD\nCCJOBEND DC    C' - E'             COMMON CHAR. IN IEF451I MESSAGE  RPD\nABNDCOMM DC    C' - A'             COMMON CHAR. IN IEF450I MESSAGE  RPD\nOXYPROGM DC    C'OXYPROGM'         OXYPROGM PROGRAM NAME            RPD\nSTEPID   DC    C'*       STEP'     OXY JES2LOG STEP LINE IDENTIFIER RPD\nPROGID   DC    C'*       PROG'     OXY JES2LOG PROG LINE IDENTIFIER RPD\nSTEPFLSH DC    C'STEP FLUSHED'     STEP FLUSHED INDICATION          RPD\nLIMITMSG DC    C' **** LIBSPOOL SYSOUT LIMIT EXCEEDED ****'         RPD\nABNDMES  DC    C'** ABEND CODES HERE **'                            RPD\nCNCLMES  DC    C'*** JOB CANCELLED *** '                            RPD\nNOTCMES  DC    C'DATA SET NOT CATALOGED'                            RPD\nNOTDMES  DC    C' DATA SET NOT DELETED '                            RPD\nENDBYCC  DC    C'JOB ENDED BY CC = XXXX'                            RPD\nJCLERRM  DC    C'***** JCL ERROR ***** '                            RPD\nBADCMES  DC    C'MAX. COND. CODE = XXXX'                            RPD\nPRTDMES  DC    C'PRINTED - NOT EXECUTED'                            RPD\nPRTCMES  DC    C'PRINTED - PRINT MSGCLS'                            RPD\nPRTNOTDN DC    C'PRINTED - JOB NOT DONE'                            RPD\nENDLMMSG EQU   *\n         SPACE 1                                                    SJB\n         EJECT                                                      SJB\nOPTCARD  DC    CL9'-OPT '          LIBRARIAN OPT CARD KEYWORD       SJB\n         DC    C'NOPC,NOPR,NOEXEC'                                  SJB\n         DC    (80-(*-OPTCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nADDCARD  DC    CL9'-ADD '          LIBRARIAN ADD CARD KEYWORD       SJB\nADDJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               RPD\n         DC    C',NOCHK,UNCON,NOLIST,NORESEQ,SEQ=/81,8,10,10/'      SJB\n         DC    (80-(*-ADDCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nDLMCARD  DC    CL9'-DLM '          LIBRARIAN ADD CARD KEYWORD       SJB\nDLMJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               RPD\n         DC    (80-(*-DLMCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nSELCARD  DC    CL9'-SEL '          LIBRARIAN SEL CARD KEYWORD       SJB\nSELJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               RPD\n         DC    C',NOCHK,UNCON,NOLIST,NORESEQ,SEQ=/81,8,10,10/'      SJB\n         DC    (80-(*-SELCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nPGMCARD  DC    CL9'-PGMR '         LIBRARIAN PGMR CARD              SJB\nPGMJOBN  DC    CL08' '             JOBNAME                          SJB\nPGMUSER  DC    CL07' '             USERID                           SJB\n         DC    (80-(*-PGMCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nDSCCARD  DC    CL9'-DESC'          LIBRARIAN DESC CARD              SJB\nDSCJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               RPD\nDSCDATE  DC    C'YYDDD'            JOB START DATE                   SJB\nDSCTON   DC    C'HHMM'             JOB START TIME                   SJB\nDSCTOFF  DC    C'HHMM'             JOB STOP  TIME                   SJB\nDSCERROR DC    C'PRINTED'          NO ERROR ASSUMED                 SJB\nDSCMSGCL DC    C' '                MSGCLASS OF JOB                  RPD\n         DC    (80-(*-DSCCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nENDCARD  DC    CL9'-END  '         LIBRARIAN END  CARD              SJB\n         DC    (80-(*-ENDCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\n         EJECT                                                      SJB\nTITLE1   DC    CL90' '                                              RPD\n         ORG   TITLE1                                               SJB\n         DC    CL10'MODULE    '                                     SJB\n         DC    CL10'          '                                     SJB\n         DC    CL10'          '                                     SJB\n         DC    CL10'JOB START '                                     SJB\n         DC    CL10'JOB START '                                     SJB\n         DC    CL10'JOB STOP  '                                     SJB\n         DC    CL10'  JOB     '                                     RPD\n         DC    CL10'REROUTED  '                                     SJB\n         DC    CL10'LIBRARY   '                                     SJB\n         ORG   TITLE1+90                                            RPD\nTITLE2   DC    CL90' '                                              RPD\n         ORG   TITLE2                                               SJB\n         DC    CL10'NAME      '                                     SJB\n         DC    CL10'JOBNAME   '                                     SJB\n         DC    CL10'USERID    '                                     SJB\n         DC    CL10'DATE      '                                     SJB\n         DC    CL10'TIME      '                                     SJB\n         DC    CL10'TIME      '                                     SJB\n         DC    CL10'MSGCLASS  '                                     RPD\n         DC    CL10'TO PRINT  '                                     SJB\n         DC    CL10'ERROR     '                                     SJB\n         ORG   TITLE2+90                                            RPD\n         EJECT                                                      SJB\nINDCB    DCB   DDNAME=DUMMY,DSORG=PS,MACRF=GL,                      SJB*\n               EODAD=EOF,EROPT=ACC,SYNAD=SYNEXIT                    SJB\n         DS    0F                                                   SJB\nINDCBL   EQU   *-INDCB                                              SJB\n         EJECT                                                      SJB\nOUTDCB   DCB   DDNAME=SYSIN,DSORG=PS,MACRF=PM,                      SJB*\n               RECFM=FB,LRECL=80,BLKSIZE=6160                       SJB\n         DS    0F                                                   SJB\nOUTDCBL  EQU   *-OUTDCB                                             SJB\n         EJECT                                                      SJB\nOPEN     OPEN  (0),MF=L                                             SJB\nCLOSE    CLOSE (0),MF=L                                             SJB\n         SPACE 3                                                    SJB\nEOSNAP   EQU   *                   END OF STORAGE AREA TO BE SNAPPEDSJB\nDNAME    DS    CL8                 NAME LEFT JUSTIFIED              SJB\n         DROP  R11,R12,R6                                           SJB\n         EJECT                                                      SJB\nSSREQ    CSECT                                                      SJB\n         CONNECT LWORK3,WORK3,BASE=R12,CLEAR=YES,PARM=R11           SJB\n         USING WORK1,R11           USE MAIN TASK WORK AREA          SJB\n         USING SSOB,R10            GET ADDR. TO 1 SAVEAREA          SJB\n         LIBWTO 'ENTERED SSREQ'                                     SJB\n         LA    R10,LWASSOB         GET ADDRESS OF IEFSSREQ PARM     SJB\n*                                                                   SJB\n*              THE $FIRST FLAG MUST BE TURNED ON EACH TIME A NEW    SJB\n*              JOB IS TO BE SELECTED                                SJB\n*                                                                   SJB\n         TM    FLAG,$FIRST         IS THIS THE 1ST REQUEST          SJB\n         BNO   SSREQ1              NOPE                             SJB\n         NI    FLAG,255-$FIRST     TURN OFF FIRST FLAG              SJB\n*                                                                   SJB\n         MVC   DSFLAGS,=3X'FF'     INITILIZE DSFLAGS                SJB\n*                                                                   SJB\n         XC    LWASSOB,LWASSOB     CLEAR IT OUT                     SJB\n         ST    R10,LWASSPRM        SET SSOB ADDR                    SJB\n         MVI   LWASSPRM,X'80'      INDICATE LAST PARM               SJB\n*                                                                   SJB\n*              INITILIZE SSOB REQUEST BLOCK                         SJB\n*                                                                   SJB\n         MVC   SSOBID,=CL4'SSOB'   SSOB ID                          SJB\n         LA    R1,SSOBHSIZ                                          SJB\n         STH   R1,SSOBLEN          STORE IN LENGTH                  SJB\n         LA    R1,SSOBSOUT                                          SJB\n         STH   R1,SSOBFUNC         STORE IN FUNCTION                SJB\n         L     R1,LWASSIB@         GET SSIB ADDR                    SJB\n         ST    R1,SSOBSSIB         STORE IN SSIB ADDR               SJB\n         LA    R1,0                                                 SJB\n         ST    R1,SSOBRETN         STORE IN RETN CODE               SJB\n         LA    R1,SSSOBGN                                           SJB\n         ST    R1,SSOBINDV         STORE IN INDV ADDR               SJB\n*                                                                   SJB\n*              INITILIZE SSSO REQUEST BLOCK                         SJB\n*                                                                   SJB\n         LA    R1,SSSOSIZE+SSSOXSIZ                                 SJB\n         STH   R1,SSSOLEN          STORE IN SSSO LENGTH             SJB\n*                                                                   SJB\n*SSSODSID+....                                                      SJB\n*         +8 IS PROGRAMMER NAME                                     SJB\n*         +8+20 IS ACCOUNTING FIELDS                                SJB\n*         +8+20+37 IS USERID                                        SJB\n*                                                                   SJB\nSSSOPGMR EQU   SSSODSID+8,20       PROGRAMMER NAME                  SJB\nSSSOACCT EQU   SSSODSID+8+20,37    ACCOUNTING FIELDS                SJB\nSSSOUSER EQU   SSSODSID+8+20+37,7  USERID                           SJB\nSSSOXSIZ EQU   SSSOUSER+7-SSSOPGMR LENGTH OF EXTRA POOP             SJB\n*                                                                   SJB\n         MVI   SSSOFLG1,SSSOSCLS   SELECT BY CLASS                  SJB\n         OI    SSSOFLG1,SSSODST    SELECT BY DEST                   SJB\n         OI    SSSOFLG1,SSSOHLD    SELECT BY HELD DSNS TOO          SJB\n*                                                                   SJB\n         NI    SSSOFLG2,255-SSSOCTRL SUBSYSTEM TO RETURN A DATASET  SJB\n*                                                                   SJB\n         MVC   SSSODEST,=CL8'LOCAL'                                 SJB\nPSOCLASS L     R1,CURMCLAD         LOAD ADDR. OF MSGCLASS TO GET    RPD\n         MVC   SSSOCLSL(1),0(R1)   MOVE IN THIS CLASS               RPD\n         MVI   SSSODSN,X'00'       INDICATE INITIAL ENTRY FOR IEFSSREQ\n         B     SSREQ2                                               SJB\n         EJECT                                                      SJB\nSSREQ1   DS    0H                                                   SJB\n*                                                                   SJB\n*              IF THIS IS NOT THE FIRST TIME THROUGH THEN           SJB\n*              TURN ON THE SELECT BY JOBID SO WE WILL GET ONLY      SJB\n*              SYSOUT FOR THE JOB THAT HAS BEEN SELECTED BY THE     SJB\n*              FIRST CALL. THIS INSURES THAT WE GET NOBODY ELSE     SJB\n*              UNTIL WE ARE THROUGH WITH THIS JOBIDS SYSOUT         SJB\n*                                                                   SJB\n         OI    SSSOFLG1,SSSOSJBI   SELECT BY JOB ID (JOB#)          SJB\nSSREQ2   DS    0H                                                   SJB\n         MVI   SSSORESV,X'01'      TELL JES2 TO FILL IN EXTRA POOP  SJB\n         SPACE 1                                                    SJB\n         MODESET MODE=SUP,KEY=ZERO GET INTO SUPERVISOR STATE        SJB\n         SPACE 1                                                    SJB\n         LA    R1,LWASSPRM         LOAD ADDRESS OF SSOB             SJB\n         SPACE 1                                                    SJB\n         IEFSSREQ                  ISSUE SUBSYSTEM REQUEST          SJB\n         SPACE 1                                                    SJB\n         STH   R15,RETCODE         SAVE IEFSSREQ RETURN CODE        SJB\n         MVC   LWASSIB@,SSOBSSIB                                    SJB\n         SPACE 3                                                    SJB\n         MODESET MODE=PROB,KEY=NZERO GET OUT OF SUPERVISOR STATE    SJB\n         SPACE 3                                                    SJB\n         LH    R15,RETCODE                                          SJB\n         RELEASE LWORK3,RC=(R15)                                    SJB\n         LTORG                                                      SJB\n         EJECT                                                      SJB\nWORK1    DSECT                                                      SJB\nSAVE1    DS    9D                                                   SJB\nLWASSPRM DS    A                   PARM FIELD FOR SSOB              SJB\nLWASSOB  DS    CL(SSOBLEN1+SSSOXSIZ)                                SJB\n         DS    0F                  EXTRA                            SJB\nRDRSTIME DS    XL8                 RDR START TIME/DATE OF JOB       SJB\nLWAOPEN  DS    F                                                    SJB\nLWACLOSE DS    F                                                    SJB\nLWASSIB@ DS    A                                                    SJB\nLWAUALTU DS    A                                                    SJB\nLWADCBIN DS    CL(INDCBL)                                           SJB\nLWADCBOT DS    CL(OUTDCBL)                                          SJB\nLWADCBRP DS    CL(RPTDCBL)                                          SJB\nDSFLAGS  DC    X'000102'           0=LOG, 1=JCL, 2=MSG DS PROCESSED SJB\nFLAG     DS    X                   MULTI-PURPOSE FLAG BYTE          SJB\n$FIRST   EQU   X'80'               SET WHEN NEW JOB IS NEEDED       SJB\n$PRINT   EQU   X'40'               TO INDICATE JOB IS TO BE PRINTED SJB\n$CLOSING EQU   X'20'               TO INDICATE CLOSING OUT OF JOB   SJB\nFLAG2    DS    X                   MULTI-PURPOSE FLAG BYTE          SJB\n$TITLE   EQU   X'80'               INDICATE TITLE LINE TO PUT OUT   SJB\n$DEBUG   EQU   X'40'               TO INDICATE DEBUGGING            SJB\nFLAG3    DS    X                   FIRST OR NEXT SYSOUTS OF A JOB   RPD\n$FRSTPSO EQU   X'80'               INDICATE FIRST SYSOUT FOR JOB    RPD\nFLAG4    DS    X                   REASON FOR PRINTING FLAG         RPD\n$ABEND   EQU   X'80'               ABEND FOUND                      RPD\n$ENDEDCC EQU   X'40'               ENDED BY CONDITION CODE FOUND    RPD\n$JCLERR  EQU   X'20'               JCL ERROR FOUND                  RPD\n$CANCEL  EQU   X'10'               CANCEL FOUND                     RPD\n$NOTCAT  EQU   X'08'               NOT CATALOGUED FOUND             RPD\n$NOTDEL  EQU   X'04'               NOT DELETED FOUND                RPD\n$BADCC   EQU   X'02'               BAD CONDITION CODE FOUND         RPD\n$PRTMSGC EQU   X'01'               ALWAYS PRINT MSGCLASS ON JOB     RPD\nFLAG5    DS    X                   REASON FOR PRINTING FLAG         RPD\n$FNDCCMS EQU   X'80'               FOUND CONDITION CODE MESSAGE     RPD\n$ENDJOB  EQU   X'40'               FOUND $IEF376I MESSAGE FLAG      RPD\nSNAPID   DS    X                                                    SJB\nRETCODE  DS    H                   RETURN CODE                      SJB\nDSTYPE   DS    X                   DATA SET TYPE FLAG (LOG,JCL,MSG) SJB\nCARDOUT  DS    CL80                                                 SJB\nPARMCARD DS    CL80                                                 SJB\nCURMCLAD DS    F                PTR TO CURRENT MSGCLASS             RPD\nLWORK1   EQU   *-WORK1                                              SJB\n*                                                                   SJB\nWORK2    DSECT                                                      SJB\nSAVE2    DS    9D                                                   SJB\nLWORK2   EQU   *-WORK2                                              SJB\n         SPACE 3                                                    SJB\nWORK3    DSECT                                                      SJB\nSAVE3    DS    9D                                                   SJB\nLWORK3   EQU   *-WORK3                                              SJB\n         SPACE 3                                                    SJB\nDIRECTRY DSECT                     LIB DIRECTORY ENTRY DSECT        SJB\nDPASS    DS    CL4                 PASSWORD                         SJB\nDADATE   DS    CL6                 ADDED DATE       MMDDYY          SJB\nDUDATE   DS    CL6                 LAST UPDATE DATE MMDDYY          SJB\nDCARDS   DS    PL3                 NUMBER OF CARDS                  SJB\nDPGMR    DS    CL15                PROGRAMMER NAME                  SJB\nDPROC    DS    CL8                 FIRST 8 BYTES OF PROC PARAMETER  SJB\nDDESC    DS    CL30                MODULE DESCRIPTION               SJB\nDCSEQ    DS    BL1                 STARTING COLUMN FOR SEQ          SJB\nDLSEQ    DS    BL2                 LENGTH OF SEQ                    SJB\nDISEQ    DS    BL2                 INCREMENT VALUE FOR SEQ          SJB\nDSSEQ    DS    BL2                 STARTING VALUE FOR SEQ           SJB\nDANUM    DS    BL2                 ACCESS NUMBER                    SJB\nDUNUM    DS    BL2                 UPDATE NUMBER                    SJB\nDENUM    DS    BL1                 EXTENT NUMBER                    SJB\nDBNUM    DS    BL1                 BLOCKS NUMBER                    SJB\nDLDATE   DS    CL6                 LAST ACCESS DATE   MMDDYY        SJB\nDFILL    DS    CL6                                                  SJB\n         EJECT                                                      SJB\nCOMMADDR DSECT                     POINTED TO BY COMMLPTR           SJB\nCOMMECB  DS    A                   POINTER TO COMMAND ECB           SJB\nCOMMCIB  DS    A                   POINTER TO COMMAND INPUT BUFFER  SJB\n         SPACE 3                                                    SJB\n         CVT   DSECT=YES           CVT MAPPING                      SJB\n         EJECT                                                      SJB\n         IEFJESCT                  JES COMMUNICATION TABLE DSECT    SJB\n         EJECT                                                      SJB\n         IEFJSSOB (SO)             SSOB DSECT WITH PSO FUNCTION     SJB\n         EJECT                                                      SJB\n         IEFZB4D0                  SVC 99 REQUEST BLOCK DSECT       SJB\n         EJECT                                                      SJB\n         DCBD  DSORG=PS,DEVD=DA    DCB DSECT                        SJB\n         SPACE 3                                                    SJB\n         END   ,                                                    SJB\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JES2SP13": {"ttr": 4612, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x83\\x15\\x1f\\x00\\x83\\x15\\x1f\\x12\\x06\\x00E\\x00E\\x00\\x00\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1983-05-31T00:00:00", "modifydate": "1983-05-31T12:06:00", "lines": 69, "newlines": 69, "modlines": 0, "user": "SYSXKMB"}, "text": "*                                                                   SJB\n*        THESE ARE THE MODS TO JES2 SP13 TO FULLY IMPLEMENT         SJB\n*        THE OXY LIBSPOOL.  THESE MODS ALLOW THE PASSING OF         SJB\n*        THE 1) PROGRAMMER NAME FIELD AND 2) THE JCTUSEID           SJB\n*        TO THE LIBSPOOL (JCLLIST) PROGRAM.  IT DOES THIS BY        SJB\n*        ADDING FIELDS TO THE PSO DSECT.  IN ORDER NOT TO REQUIRE   SJB\n*        THAT ALL EXTERNAL WRITER PROGRAMS BE RE-ASSEMBLED TO       SJB\n*        USE THE NEW DSECT LENGTH, EXTERNAL WRITER PROGRAMS         SJB\n*        WANTING THE EXTRA INFORMATION PASSED TO THEM, WILL NEED    SJB\n*        TO SET A BIT INDICATING THIS.                              SJB\n*                                                                   SJB\n*        PSOUFLG+1 TO X'01'       IF THIS IS A CONVERSATIONAL       SJB\n*                                 REQUEST (LIBSPOOL)                SJB\n*                                                                   SJB\n*        PSOUFLG+0 TO X'01'       IF THIS IS A EXTERNAL WRITER      SJB\n*                                 REQUEST (IBM SUPPLIED)            SJB\n*                                                                   SJB\n*        CONVERSATIONAL REQUEST IS ONE THAT WORKS ONLY ON HELD      SJB\n*                       SYSOUT DATASETS                             SJB\n*                                                                   SJB\n*        EXTERNAL WRITER REQUEST IS ONE THAT WORKS ON NON HELD      SJB\n*                       SYSOUT DATASETS                             SJB\n*                                                                   SJB\n*        YOU **MUST ** ASSEMBLE:                                    SJB\n*             HASPCOMM, HASPNUC, HASPSSSM                           SJB\n*             HASPTERM, HASPWARM, HASPXEQ                           SJB\n*        ITS BEST TO ASSEMBLE ALL OF THEM                           SJB\n*                                                                   SJB\n./       LEVEL OXYJ017             FICHE/LIBSPOOL SUPPORT\n./       CHNGE HASPXEQ             NOTE; ASSEM. HASPSSSM\n         COPY  XEQ017A             LIBSPOOL (CONVERSATIONAL)    OXYJ017\n         COPY  XEQ017B             FICHE (PSO)                  OXYJ017\n./       CHNGE $PSO\n         COPY  $PSO017A            EXTENTIONS TO $PSO           OXYJ017\n\n\n\n./       ADD   XEQ017A\n******** ***** COPY XEQ017A        HASPXEQ********************* OXYJ017\n         TM    PSOUFLG+1,X'01'        IS THIS A LIBSPOOL REQ ?? OXYJ017\n         BZ    *+16                   GO AROUND IF NOT          OXYJ017\n         MVC   PSOFUSER,JCTUSEID-JCTDSECT(IOT) MOVE IN USERID   OXYJ017\n         MVC   PSOFPGMN+0(20),JCTPNAME-JCTDSECT(IOT) PGMR NAME  OXYJ017\n******** ***** END  XEQ017A        **************************** OXYJ017\n./       ADD   XEQ017B\n******** ***** COPY XEQ017B        HASPXEQ********************* OXYJ017\n         TM    PSOUFLG,X'01'       IS THIS A FICHE OUTPUT ??    OXYJ017\n         BO    *+12                YES THEN MOVE IT IN          OXYJ017\n         TM    PSOUFLG+1,X'01'     IS THIS A LIBSPOOL REQ ??    OXYJ017\n         BZ    *+16                GO AROUND IF NOT             OXYJ017\n         MVC   PSOFUSER,JCTUSEID   MOVE IN THE USERID           OXYJ017\n         MVC   PSOFPGMN+0(20),JCTPNAME  20 BYTES OF DESCRIPTION OXYJ017\n******** ***** END  XEQ017B        **************************** OXYJ017\n./       ADD   XEQ017B\n******** ***** COPY $PSO017A       $PSO************************ OXYJ017\n****************************************************************OXYJ017\n*                                                               OXYJ017\n*      THE NEXT 64 BYTES ARE USED TO SERVICE REQUESTS FROM      OXYJ017\n*        THE FICHE WRITER. THE SSSOB IS MAPPED INTO THE PSO BY  OXYJ017\n*        HASPSSSM. THE REQUEST IS THEN QUEUED.                  OXYJ017\n*        HASPXEQ SERVICES THE REQUEST AND, FOR FICHE/LIBSPOOL   OXYJ017\n*        SUPPLIES PROGRAMMERS NAME AND A MODIFIED ACCOUNTING    OXYJ017\n*        LIST FOR OPTIONAL TITLE AND DUPLICATION COUNTS.        OXYJ017\n*                                                               OXYJ017\n****************************************************************OXYJ017\nPSOFPGMN DS    CL20           PROGRAMMERS NAME-FOR FICHE        OXYJ017\nPSOFACCT DS    CL37           ACCT INFO - FICHE                 OXYJ017\nPSOFUSER DS    CL7            USERID INFO - MICRO-FICHE         OXYJ017\n******** ***** END  $PSO017A       **************************** OXYJ017\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LIBSPOOL": {"ttr": 4614, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x82 O\\x00\\x82%/\\x13\\x03\\x00\\x0f\\x00\\r\\x00\\x0f\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1982-07-23T00:00:00", "modifydate": "1982-09-09T13:03:00", "lines": 15, "newlines": 13, "modlines": 15, "user": "SHSWRPD"}, "text": "//LIBSPOOL PROC DEBUG=\n//IEFPROC  EXEC PGM=JCLLIST,TIME=1439,PARM=&DEBUG\n//STEPLIB  DD  DSN=SHSW.APFLIBR,DISP=SHR        APF AUTHORIZED LIBRARY\n//SYSPRINT DD  DUMMY\n//REPORT   DD  SYSOUT=A\n//SNAP     DD  SYSOUT=A\n//SYSABEND DD  SYSOUT=A\n//OSJOB    DD  DUMMY\n//MASTER   DD  DISP=SHR,DSN=SHSW.LSLIB\n//SYSIN    DD  DSN=&&SYSIN,DISP=(NEW,DELETE),UNIT=SYSDA,\n//             SPACE=(CYL,(10,10)),\n//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160)\n//NOTIFY   EXEC PGM=OPS4323G,COND=EVEN\n//STEPLIB   DD  DSN=PHGI.LINKLIB,DISP=SHR\n//MASTER   DD  DISP=SHR,DSN=SHSW.LSLIB  PREVENTS ARCHIVE FROM STARTING\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LSADRCPY": {"ttr": 4616, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x02\\x00\\x00\\x00\\x821\\x9f\\x00\\x821\\x9f\\x14'\\x00#\\x00\\x1a\\x00\\x13\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@\"", "ispf": {"version": "01.02", "flags": 0, "createdate": "1982-11-15T00:00:00", "modifydate": "1982-11-15T14:27:00", "lines": 35, "newlines": 26, "modlines": 19, "user": "SHSWRPD"}, "text": "//LSADRCPY JOB (@SYSUID,@SYSACCT),'COPY SHSW.LSADRLIB',CLASS=A\n/*JOBPARM   I,W,T=5,Q=T,L=3\n//*\n//* THIS JOBSTREAM CAN BE USED TO CHANGE THE SPACE ALLOCATION\n//* OF THE ARCHIVE DIDECTORY DATA SET. THE FOLLOWING DATA IS USEFUL\n//* TO HELP ESTIMATE THE SPACE TO ALLOCATE. THE DATA SET IS PARTIONED.\n//* DATA SETS SHOULD BE RENAMED AFTER THIS RUN.\n//*\n//*                          (************ ASSUME  THIS ***********)\n//*  BLKSIZE=6200  LRECL=40  DISK TYPE=3350  100 JOBS/DAY  700 JOBS/WK\n//*  EACH JOB RUN RESULTS IN ONE LOGICAL RECORD ON THIS DATA SET\n//*\n//*  6200/40 = 155 JOBS PER PHYSICAL BLOCK\n//*  700/155 = 5 BLOCKS PER WEEK\n//*  5/3 = 2 TRACKS PER WEEK\n//*  ASSUME ACHIVE DATA IS DESIRED TO BE KEPT FOR 120 WEEKS\n//*  120 X 2 = 240 TRACKS OR 8 CYLINDERS MINIMUM\n//*\n//*  10 MEMBERS CAN FIT IN ONE DIRECTORY BLOCK\n//*  IF 120 MEMBERS ARE MAINTAINED A MINIMUM OF 12 DIRECTORY BLOCKS\n//*  WOULD BE NEEDED.\n//*\n//COPY   EXEC PGM=IEBCOPY\n//SYSPRINT DD SYSOUT=A\n//SYSUT3   DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT4   DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//OUTLIB    DD DSN=SHSWRPD.LSADRLIB,\n//            DISP=(NEW,CATLG,DELETE),\n//            SPACE=(CYL,(15,1,20)),\n//            DCB=(RECFM=FB,BLKSIZE=6200,LRECL=40),\n//            VOL=SER=F031L1,\n//            UNIT=3350\n//INPUT    DD DSN=SHSW.LSADRLIB,DISP=SHR\n//SYSIN DD  *\n  COPY  OUTDD=OUTLIB,INDD=INPUT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LSLIBCPY": {"ttr": 4618, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x82!\\x0f\\x00\\x821\\x9f\\x14P\\x00\\x18\\x00\\x18\\x00\\x06\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1982-07-29T00:00:00", "modifydate": "1982-11-15T14:50:00", "lines": 24, "newlines": 24, "modlines": 6, "user": "SHSWRPD"}, "text": "//LSLIBCPY JOB (@SYSUID,@SYSACCT),'COPY SHSW.LSLIB',CLASS=A\n/*JOBPARM   I,W,T=5,Q=T,L=9\n//*\n//* THIS JOB CAN BE USED TO REALLOCATE THE LIBSPOOL DATA SET\n//* TO INCREASE OR DECREASE ITS SPACE ALLOCATION OR VOLUME ALLOCATION.\n//* LIBSPOOL SHOULD BE STOPPED WHILE RUNNING THIS JOB. DATA SETS SHOULD\n//* BE RENAMED AFTER SUCCESSSFUL COMPLETION.\n//*\n//COPY    EXEC PGM=LIBRARY,PARM='NRJS,NJTA'\n//SYSPRINT DD SYSOUT=A\n//LIST     DD SYSOUT=A\n//INDEX    DD SYSOUT=A\n//OSJOB    DD DSN=&&TEMP,DISP=(,PASS),DCB=BLKSIZE=800,\n//           UNIT=SYSDA,SPACE=(CYL,(5,5))\n//MASTER   DD DSN=SHSW.LSLIB,DISP=SHR\n//BACKUP   DD DSN=SHSW.NEWLSLIB,\n//            DISP=(NEW,CATLG,DELETE),\n//            SPACE=(CYL,75),                              CHANGE ?\n//            DCB=(DSORG=DA,BLKSIZE=2220),\n//            VOL=SER=F031L1,                              CHANGE ?\n//            UNIT=3350\n//SYSIN    DD  *\n-OPT BKUPDISK,INDEX\n-END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LSMODCPY": {"ttr": 4620, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x83\\x01\\x9f\\x00\\x83\\x01\\x9f\\x10\\x05\\x006\\x006\\x00\\x00\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1983-01-19T00:00:00", "modifydate": "1983-01-19T10:05:00", "lines": 54, "newlines": 54, "modlines": 0, "user": "SHSWRPD"}, "text": "//LSMODCPY JOB (@SYSUID,@SYSACCT),'COPY MODS TO LSLIB',\n//       CLASS=A\n/*JOBPARM I,Q=T\n//*\n//* THIS JOB CAN BE USED TO SELECTIVELY COPY LIBSPOOL MODULES FROM\n//* A RESTORED LIBSPOOL LIBRARIAN DATA SET BACK TO THE ONLINE\n//* LIBSPOOL LIBRARIAN FILE. THE DATA SET WOULD HAVE BEEN RESTORED\n//* FROM THE SECOND FILE OF THE LIBSPOOL ARCHIVE TAPE - SEE MEMBER\n//* RESTORE FOR SAMPLE JCL. THIS MAY BE NECESSARY IF THE CURRENT\n//* ARCHIVE TAPE IS BAD AND THE MODULES TAKEN FROM THE PREVIOUS\n//* OFFLINE RUN MUST BE RESTORED FROM THE SECOND FILE OF THE ARCHIVE\n//* TAPE.\n//*\n//COPYMOD  PROC BLK=19040,PRIME=100,SEC=100,\n//         PARMINF='NRJS,NJTA',\n//         FROMLIB=,\n//         TOLIB=   TARGET DISK LIBRARY TO RECEIVE MODULE\n//FROMSTEP EXEC PGM=LIBRARY,PARM='&PARMINF'\n//MASTIN   DD DSN=&FROMLIB,DISP=OLD\n//MASTOUT  DD DUMMY,DCB=BLKSIZE=32760\n//OSJOB    DD DSN=&&COPY,DISP=(,PASS),DCB=BLKSIZE=&BLK,\n//            UNIT=SYSDA,SPACE=(&BLK,(&PRIME,&SEC),RLSE)\n//SYSAF01  DD UNIT=SYSDA,SPACE=(CYL,(1,1)),DCB=BLKSIZE=19069\n//SYSAF02  DD UNIT=SYSDA,SPACE=(CYL,(1,1)),DCB=BLKSIZE=19069\n//SYSAF03  DD UNIT=SYSDA,SPACE=(CYL,(1,1)),DCB=BLKSIZE=19069\n//SYSPRINT DD SYSOUT=A\n//SYSPUNCH DD SYSOUT=B\n//INDEX    DD SYSOUT=A\n//LIST     DD SYSOUT=A\n//TOSTEP   EXEC PGM=LIBRARY,PARM='&PARMINF'\n//MASTER   DD DSN=&TOLIB,DISP=SHR\n//OSJOB    DD DUMMY\n//SYSPRINT DD SYSOUT=A\n//SYSPUNCH DD SYSOUT=B\n//INDEX    DD SYSOUT=A\n//LIST     DD SYSOUT=A\n//SYSIN    DD DSN=&&COPY,DISP=(OLD,DELETE)\n// PEND\n//*\n//STEP01 EXEC COPYMOD,TOLIB='SHSW.LSLIB',\n//     FROMLIB='SHSWRPD.LSLIB'\n//FROMSTEP.SYSIN DD *\n-OPT UTILITY,NOCYCLE\n-OPT\n-COPY A0094915,STATUS=TEST\n-COPY A0104955,STATUS=TEST\n-COPY A0104956,STATUS=TEST\n-COPY A0104961,STATUS=TEST\n-COPY A0104963,STATUS=TEST\n-COPY A0104965,STATUS=TEST\n-COPY A0105004,STATUS=TEST\n-COPY A0105015,STATUS=TEST\n-COPY A0105018,STATUS=TEST\n-END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPSX06": {"ttr": 4622, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x14\\x00\\x00\\x00\\x82\\x18\\x9f\\x00\\x83\\x16o\\x17\\x00\\x00\\x82\\x00r\\x00\\x82\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.20", "flags": 0, "createdate": "1982-07-08T00:00:00", "modifydate": "1983-06-15T17:00:00", "lines": 130, "newlines": 114, "modlines": 130, "user": "SYSXKMB"}, "text": "//OPSX06  PROC MASTIN=,                    DISK LIBRARIAN MASTER\n//       OUT1=,                NEW TAPE MASTER FILE (DO NOT INCLUDE GDG)\n//       IN1=,              CURRENT TAPE MASTER FILE (INCLUDE GDG LEVEL)\n//       ARCHDSN=,                         ARCHIVE DIRECTORY DSNAME\n//       RUNTYPE='D',                      D - DAILY, W - WEEKLY\n//       GEN='+1',                         NEW GENERATION # FOR IN1\n//       RET='EXPDT=99000',                RETENTION FOR NEW TAPE MASTER\n//       RET2='EXPDT=99008',               RETENTION FOR BACKUP TAPE\n//       PARMSEL='HOURS=120,MODULES=000',  MODULE SELECTION CRITERIA\n//       PARMLIB='NRJS,NJTA'               LIBRARIAN PARM INFO\n//*\n//**********************************************************************\n//* CREATE DLM AND COPY CONTROL CARDS FOR MODULES GREATER THAN X HOURS\n//**********************************************************************\n//SELECT   EXEC  PGM=OPS4320G,PARM='&PARMSEL'\n//STEPLIB  DD  DSN=SYSXKMB.LIB.LOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//MCDCODE  DD  DUMMY\n//*MCDCODE  DD  DSN=SYSXKMB.LIB.ASM(OPSX0601),DISP=SHR\n//DLMCARD  DD  DSN=&&DLMCARD,DISP=(,PASS),UNIT=VIO,\n//             DCB=BLKSIZE=4080,SPACE=(TRK,(5,5),RLSE)\n//COPYCARD DD  DSN=&&COPYCARD,DISP=(,PASS),UNIT=VIO,\n//             DCB=BLKSIZE=4080,SPACE=(TRK,(5,5),RLSE)\n//MASTER   DD  DSN=&MASTIN,DISP=OLD\n//**********************************************************************\n//*   COPY SELECTED MODULES FROM ONLINE LIBRARIAN JCL DATA SET\n//**********************************************************************\n//COPYSTEP EXEC  PGM=LIBRARY,PARM='&PARMLIB',COND=(0,NE)\n//SYSPRINT DD  DUMMY\n//INDEX    DD  SYSOUT=A\n//LIST     DD  SYSOUT=A\n//OSJOB    DD  DSN=&&TEMP,DISP=(,PASS),UNIT=(SYSDA,2),\n//             DCB=BLKSIZE=19040,SPACE=(CYL,(20,10),RLSE)\n//MASTER   DD  DSN=&MASTIN,DISP=OLD\n//SYSIN    DD  DSN=&&COPYCARD,DISP=(OLD,DELETE)\n//**********************************************************************\n//*   MERGE COPIED MODULES ONTO NEW TAPE MASTER\n//**********************************************************************\n//COPYTAPE EXEC  PGM=LIBRARY,PARM='&PARMLIB',COND=(0,NE)\n//SYSPRINT DD  DUMMY\n//INDEX    DD  DSN=&&INDEX,DISP=(,PASS),\n//         DCB=(RECFM=FB,LRECL=133,BLKSIZE=6118),UNIT=SYSDA,\n//         SPACE=(6118,(20,20),RLSE)\n//LIST     DD  SYSOUT=A\n//OSJOB    DD  DUMMY\n//SYSAF01  DD  UNIT=(SYSDA,2),SPACE=(CYL,(10,10)),DCB=BLKSIZE=4628\n//SYSAF02  DD  UNIT=(SYSDA,2),SPACE=(CYL,(10,10)),DCB=BLKSIZE=4628\n//SYSAF03  DD  UNIT=(SYSDA,2),SPACE=(CYL,(30,15)),DCB=BLKSIZE=19069\n//MASTIN   DD  DSN=&IN1,DISP=OLD\n//MASTOUT  DD  DSN=&OUT1(&GEN.),UNIT=TAPE,\n//            LABEL=&RET,VOL=(,RETAIN),\n//            DCB=(SYS2.MODEL,BLKSIZE=32760),\n//            DISP=(,CATLG,DELETE)\n//SYSIN    DD  DSN=SYSXKMB.LIB.ASM(OPSX0602),DISP=SHR\n//         DD  DSN=&&TEMP,DISP=(OLD,DELETE)\n//* SYSXKMB.LIB.ASM(OPSX0602) = -OPT NOCYCLE,INDEX\n//*SYSIN    DD  DSN=SYSXKMB.LIB.ASM(LBSPGPO1),DISP=SHR\n//**********************************************************************\n//*   UPDATE ONLINE ARCHIVE DIRECTORY DATA SET\n//**********************************************************************\n//LIBUP   EXEC PGM=OPS4321G,PARM='&RUNTYPE',COND=(0,NE)\n//STEPLIB  DD DSN=SYSXKMB.LIB.LOAD,DISP=SHR\n//SYSABEND DD SYSOUT=A\n//SORTLIB  DD DSN=SYS1.SORTLIB,DISP=SHR\n//SORTOUT  DD DSN=&ARCHDSN(#DAILY),DISP=SHR\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SORTWK03 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SORTWK04 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SYSOUT   DD SYSOUT=*\n//MESSAGES DD SYSOUT=*\n//MASTDD   DD DSN=&&INDEX,DISP=(OLD,PASS)\n//TAPEDD   DD DSN=*.COPYTAPE.MASTOUT,DISP=(OLD,PASS)\n//DIRDD    DD DSN=&ARCHDSN(#DAILY),DISP=OLD\n//DIRDDA   DD DSN=&ARCHDSN,DISP=OLD\n//**********************************************************************\n//*   REPORT CONTENTS OF ARCHIVE TAPE CREATED IN COPYTAPE STEP ABOVE\n//**********************************************************************\n//LIBPRT  EXEC PGM=OPS4322G,PARM='&RUNTYPE',COND=(0,NE)\n//STEPLIB  DD DSN=SYSXKMB.LIB.LOAD,DISP=SHR\n//SYSABEND DD SYSOUT=A\n//SORTLIB  DD DSN=SYS1.SORTLIB,DISP=SHR\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SORTWK03 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SORTWK04 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SYSOUT   DD SYSOUT=*\n//MESSAGES DD SYSOUT=*\n//REPORTDD DD SYSOUT=A,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=133)\n//MASTDD   DD DSN=&&INDEX,DISP=(OLD,PASS)\n//TAPEDD   DD DSN=*.COPYTAPE.MASTOUT,DISP=(OLD,PASS)\n//**********************************************************************\n//*   BACKUP DISK MASTER ONTO TAPE MASTER BEFORE DELETES\n//**********************************************************************\n//BACKUPM  EXEC  PGM=LIBRARY,PARM='&PARMLIB',COND=(0,NE)\n//SYSPRINT DD  DUMMY\n//INDEX    DD  DUMMY\n//LIST     DD  SYSOUT=A\n//OSJOB    DD  DUMMY\n//MASTER   DD  DSN=&MASTIN,DISP=OLD\n//BACKUP   DD  DSN=&MASTIN..BACKUP,DISP=(NEW,KEEP,DELETE),\n//             LABEL=(2,&RET2),VOL=REF=*.COPYTAPE.MASTOUT,\n//             DCB=BLKSIZE=32760\n//SYSIN    DD  DSN=SYSXKMB.LIB.ASM(OPSX0603),DISP=SHR\n//* SYSXKMB.LIB.ASM(OPSX0603) = -OPT BKUPTAPE\n//*                          -END\n//**********************************************************************\n//*   DELETE MOVED MODULES FROM DISK MASTER\n//**********************************************************************\n//DELETEM  EXEC  PGM=LIBRARY,PARM='&PARMLIB',COND=(0,NE)\n//SYSPRINT DD  DUMMY\n//SYSIN    DD  DSN=&&DLMCARD,DISP=(OLD,DELETE)\n//MASTER   DD  DSN=&MASTIN,DISP=OLD\n//INDEX    DD  SYSOUT=A\n//OSJOB    DD  DUMMY\n//**********************************************************************\n//*   NOTIFY THE OPERTOR THAT THE ARCHIVE JOB IS NOW COMPLETE AND\n//*   LIBSPOOL WILL NOW BE STARTED\n//**********************************************************************\n//OPERMSG  EXEC PGM=OPS4341G\n//STEPLIB  DD DSN=SYSXKMB.LIB.LOAD,DISP=SHR\n//**********************************************************************\n//*   SUBMIT A START COMMAND TO START LIBSPOOL\n//**********************************************************************\n//STARTLS  EXEC PGM=IEBGENER,COND=EVEN\n//SYSPRINT DD DUMMY\n//SYSUT1   DD  DSN=SYSXKMB.LIB.ASM(OPSX0604),DISP=SHR\n//SYSUT2   DD SYSOUT=(A,INTRDR)\n//SYSIN    DD DUMMY\n//* SYSXKMB.LIB.ASM(OPSX0604) = /*$VS,'S LIBSPOOL'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPSX0601": {"ttr": 4625, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x82\\x18\\x9f\\x00\\x82\\x18\\x9f\\x14A\\x00\\x01\\x00\\x01\\x00\\x00\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1982-07-08T00:00:00", "modifydate": "1982-07-08T14:41:00", "lines": 1, "newlines": 1, "modlines": 0, "user": "SHSWRPD"}, "text": "NONE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPSX0602": {"ttr": 4627, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x82\\x18\\x9f\\x00\\x82\\x18\\x9f\\x14A\\x00\\x01\\x00\\x01\\x00\\x00\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1982-07-08T00:00:00", "modifydate": "1982-07-08T14:41:00", "lines": 1, "newlines": 1, "modlines": 0, "user": "SHSWRPD"}, "text": "-OPT NOCYCLE,INDEX\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPSX0603": {"ttr": 4629, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x82\\x18\\x9f\\x00\\x82\\x18\\x9f\\x14B\\x00\\x02\\x00\\x02\\x00\\x00\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1982-07-08T00:00:00", "modifydate": "1982-07-08T14:42:00", "lines": 2, "newlines": 2, "modlines": 0, "user": "SHSWRPD"}, "text": "-OPT BKUPTAPE\n-END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPSX0604": {"ttr": 4631, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x82#\\x1f\\x00\\x83\\x18o\\x18\\x03\\x00\\x02\\x00\\x01\\x00\\x02\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1982-08-19T00:00:00", "modifydate": "1983-07-05T18:03:00", "lines": 2, "newlines": 1, "modlines": 2, "user": "SYSXKMB"}, "text": "/*$VS,'.D033 S LIBSPOOL'\n/*$VS,'.J342 S LIBSPOOL'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPSX07": {"ttr": 4633, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x13\\x00\\x00\\x00\\x82\\x19\\x0f\\x00\\x83\\x16o\\x17\\x01\\x00\\xa6\\x00\\x88\\x00G\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.19", "flags": 0, "createdate": "1982-07-09T00:00:00", "modifydate": "1983-06-15T17:01:00", "lines": 166, "newlines": 136, "modlines": 71, "user": "SYSXKMB"}, "text": "//OPSX07  PROC MASTIN=,                LIBSPOOL ONLINE LIBRARIAN MASTER\n//   OUTW=,            NEW WEEKLY TAPE MASTER FILE (DO NOT INCLUDE GDG)\n//   IND=,           CURRENT DAILY TAPE MASTER FILE (INCLUDE GDG LEVEL)\n//   OUTD=,              EMPTY OUTPUT DAILY MASTER (DO NOT INCLUDE GDG)\n//   ARCHDSN=,                         ARCHIVE DIRECTORY DSN\n//   RSARDSN=,                       RESTORE FROM ARCHIVE LIBRARIAN DSN\n//   RUNTYPE='W',                      D - DAILY, W - WEEKLY\n//   GEN='+1',                         NEW GENERATION # FOR IN1\n//   RET='EXPDT=99000',                RETENTION FOR NEW TAPE MASTER\n//   PARMSEL='HOURS=120,MODULES=000',  MODULE SELECTION CRITERIA\n//   PARMLIB='NRJS,NJTA'               LIBRARIAN PARM INFO\n//*\n//**********************************************************************\n//* CREATE DLM AND COPY CONTROL CARDS FOR MODULES GREATER THAN X HOURS\n//**********************************************************************\n//SELECT   EXEC  PGM=OPS4320G,PARM='&PARMSEL'\n//STEPLIB  DD  DSN=SYSXKMB.LIB.LOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//MCDCODE  DD  DUMMY\n//*MCDCODE  DD  DSN=SYSXKMB.LIB.ASM(OPSX0701),DISP=SHR\n//DLMCARD  DD  DSN=&&DLMCARD,DISP=(,PASS),UNIT=VIO,\n//             DCB=BLKSIZE=4080,SPACE=(TRK,(5,5),RLSE)\n//COPYCARD DD  DSN=&&COPYCARD,DISP=(,PASS),UNIT=VIO,\n//             DCB=BLKSIZE=4080,SPACE=(TRK,(5,5),RLSE)\n//MASTER   DD  DSN=&MASTIN,DISP=OLD\n//**********************************************************************\n//*   COPY SELECTED MODULES FROM ONLINE LIBRARIAN JCL DATA SET\n//**********************************************************************\n//COPYSTEP EXEC  PGM=LIBRARY,PARM='&PARMLIB',COND=(0,NE)\n//SYSPRINT DD  DUMMY\n//INDEX    DD  SYSOUT=A\n//LIST     DD  SYSOUT=A\n//OSJOB    DD  DSN=&&TEMP,DISP=(,PASS),UNIT=(SYSDA,2),\n//             DCB=BLKSIZE=19040,SPACE=(CYL,(20,10),RLSE)\n//MASTER   DD  DSN=&MASTIN,DISP=OLD\n//SYSIN    DD  DSN=&&COPYCARD,DISP=(OLD,DELETE)\n//**********************************************************************\n//*   MERGE COPIED MODULES ONTO NEW TAPE MASTER\n//**********************************************************************\n//COPYTAPE EXEC  PGM=LIBRARY,PARM='&PARMLIB',COND=(0,NE)\n//SYSPRINT DD  DUMMY\n//INDEX    DD  DSN=&&INDEX,DISP=(,PASS),\n//         DCB=(RECFM=FB,LRECL=133,BLKSIZE=6118),UNIT=SYSDA,\n//         SPACE=(6118,(20,20),RLSE)\n//LIST     DD  SYSOUT=A\n//OSJOB    DD  DUMMY\n//SYSAF01  DD  UNIT=(SYSDA,2),SPACE=(CYL,(10,10)),DCB=BLKSIZE=4628\n//SYSAF02  DD  UNIT=(SYSDA,2),SPACE=(CYL,(10,10)),DCB=BLKSIZE=4628\n//SYSAF03  DD  UNIT=(SYSDA,2),SPACE=(CYL,(30,15)),DCB=BLKSIZE=19069\n//MASTIN   DD  DSN=&IND,DISP=OLD\n//MASTOUT  DD  DSN=&OUTW(&GEN.),UNIT=TAPE,\n//            LABEL=&RET,VOL=(,RETAIN),\n//            DCB=(SYS2.MODEL,BLKSIZE=32760),\n//            DISP=(,CATLG,DELETE)\n//SYSIN    DD  DSN=SYSXKMB.LIB.ASM(OPSX0702),DISP=SHR\n//         DD  DSN=&&TEMP,DISP=(OLD,DELETE)\n//* SYSXKMB.LIB.ASM(OPSX0702) = -OPT NOCYCLE,INDEX\n//**********************************************************************\n//*   UPDATE ONLINE ARCHIVE DIRECTORY DATA SET\n//**********************************************************************\n//LIBUP   EXEC PGM=OPS4321G,PARM='&RUNTYPE',COND=(0,NE)\n//STEPLIB  DD DSN=SYSXKMB.LIB.LOAD,DISP=SHR\n//SYSABEND DD SYSOUT=A\n//SORTLIB  DD DSN=SYS1.SORTLIB,DISP=SHR\n//SORTOUT  DD DSN=&ARCHDSN(#DAILY),DISP=SHR\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SORTWK03 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SORTWK04 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SYSOUT   DD SYSOUT=*\n//MESSAGES DD SYSOUT=*\n//MASTDD   DD DSN=&&INDEX,DISP=(OLD,PASS)\n//TAPEDD   DD DSN=*.COPYTAPE.MASTOUT,DISP=(OLD,PASS)\n//DIRDD    DD DSN=&ARCHDSN(#DAILY),DISP=OLD\n//DIRDDA   DD DSN=&ARCHDSN,DISP=OLD\n//**********************************************************************\n//*   REPORT CONTENTS OF ARCHIVE TAPE CREATED IN COPYTAPE STEP ABOVE\n//**********************************************************************\n//LIBPRT  EXEC PGM=OPS4322G,PARM='&RUNTYPE',COND=(0,NE)\n//STEPLIB  DD DSN=SYSXKMB.LIB.LOAD,DISP=SHR\n//SYSABEND DD SYSOUT=A\n//SORTLIB  DD DSN=SYS1.SORTLIB,DISP=SHR\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SORTWK03 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SORTWK04 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SYSOUT   DD SYSOUT=*\n//MESSAGES DD SYSOUT=*\n//REPORTDD DD SYSOUT=A,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=133)\n//MASTDD   DD DSN=&&INDEX,DISP=(OLD,PASS)\n//TAPEDD   DD DSN=*.COPYTAPE.MASTOUT,DISP=(OLD,PASS)\n//**********************************************************************\n//*   BACKUP DISK MASTER ONTO TAPE MASTER BEFORE DELETES\n//**********************************************************************\n//BACKUPM  EXEC  PGM=LIBRARY,PARM='&PARMLIB',COND=(0,NE)\n//SYSPRINT DD  DUMMY\n//INDEX    DD  DUMMY\n//LIST     DD  SYSOUT=A\n//OSJOB    DD  DUMMY\n//MASTER   DD  DSN=&MASTIN,DISP=OLD\n//BACKUP   DD  DSN=&MASTIN..BACKUP,DISP=(NEW,KEEP,DELETE),\n//             LABEL=(2,&RET),VOL=REF=*.COPYTAPE.MASTOUT,\n//             DCB=BLKSIZE=32760\n//SYSIN    DD  DSN=SYSXKMB.LIB.ASM(OPSX0703),DISP=SHR\n//* SYSXKMB.LIB.ASM(OPSX0703) = -OPT BKUPTAPE\n//*                          -END\n//**********************************************************************\n//*   DELETE MOVED MODULES FROM DISK MASTER\n//**********************************************************************\n//DELETEM  EXEC  PGM=LIBRARY,PARM='&PARMLIB',COND=(0,NE)\n//SYSPRINT DD  DUMMY\n//SYSIN    DD  DSN=&&DLMCARD,DISP=(OLD,DELETE)\n//MASTER   DD  DSN=&MASTIN,DISP=OLD\n//INDEX    DD  SYSOUT=A\n//OSJOB    DD  DUMMY\n//**********************************************************************\n//*   ALLOCATE EMPTY DAILY ARCHIVE MASTER TO START NEW WEEK\n//**********************************************************************\n//ALLOCDLY EXEC  PGM=LIBRARY,PARM='&PARMLIB',COND=(0,NE)\n//SYSPRINT DD  DUMMY\n//INDEX    DD  SYSOUT=A\n//LIST     DD  SYSOUT=A\n//OSJOB    DD  DUMMY\n//SYSAF01  DD  UNIT=(SYSDA,1),SPACE=(CYL,(1,1)),DCB=BLKSIZE=4628\n//SYSAF02  DD  UNIT=(SYSDA,1),SPACE=(CYL,(1,1)),DCB=BLKSIZE=4628\n//SYSAF03  DD  UNIT=(SYSDA,1),SPACE=(CYL,(3,1)),DCB=BLKSIZE=19069\n//MASTOUT  DD  DSN=&OUTD(&GEN.),UNIT=SYSPD,\n//            SPACE=(19000,(1,1),RLSE),\n//            DCB=(SYS2.MODEL,BLKSIZE=19000),\n//            DISP=(,CATLG,DELETE)\n//SYSIN    DD  DSN=SYSXKMB.LIB.ASM(OPSX0704),DISP=SHR\n//* SYSXKMB.LIB.ASM(OPSX0704) = -OPT NOCYCLE,INDEX,NOINPUT\n//*                          -END\n//**********************************************************************\n//*   COMPRESS THE ONLINE ARCHIVE DIRECTORY DATA SET\n//**********************************************************************\n//COMPRESS EXEC  PGM=IEBCOPY,COND=(0,NE)\n//SYSPRINT DD  SYSOUT=*\n//DIR      DD  DSN=&ARCHDSN,DISP=OLD\n//SYSIN    DD  DSN=SYSXKMB.LIB.ASM(OPSX0705),DISP=SHR\n//* SYSXKMB.LIB.ASM(OPSX0705) = COPY INDD=DIR,OUTDD=DIR\n//**********************************************************************\n//*   REINITIALIZE THE RESTORE FROM ARCHIVE DATA SET\n//**********************************************************************\n//INIT     EXEC PGM=LIBRARY,PARM='&PARMLIB',COND=(0,NE)\n//SYSPRINT  DD SYSOUT=*\n//MASTER    DD DSN=&RSARDSN,\n//            DISP=(OLD,KEEP)\n//SYSIN    DD  DSN=SYSXKMB.LIB.ASM(OPSX0706),DISP=SHR\n//* SYSXKMB.LIB.ASM(OPSX0706) = -OPT INIT,DISK,SEQ=/81,8,10,10/\n//*                          -END\n//**********************************************************************\n//*   NOTIFY THE OPERTOR THAT THE ARCHIVE JOB IS NOW COMPLETE AND\n//*   LIBSPOOL WILL NOW BE STARTED\n//**********************************************************************\n//OPERMSG  EXEC PGM=OPS4341G\n//STEPLIB  DD DSN=SYSXKMB.LIB.LOAD,DISP=SHR\n//**********************************************************************\n//*   SUBMIT A START COMMAND TO START LIBSPOOL\n//**********************************************************************\n//STARTLS  EXEC PGM=IEBGENER,COND=EVEN\n//SYSPRINT DD DUMMY\n//SYSUT1   DD  DSN=SYSXKMB.LIB.ASM(OPSX0707),DISP=SHR\n//SYSUT2   DD SYSOUT=(A,INTRDR)\n//SYSIN    DD DUMMY\n//* SYSXKMB.LIB.ASM(OPSX0707) = /*$VS,'S LIBSPOOL'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPSX0701": {"ttr": 4868, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "NONE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPSX0702": {"ttr": 4870, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "-OPT NOCYCLE,INDEX\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPSX0703": {"ttr": 4872, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "-OPT BKUPTAPE\n-END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPSX0704": {"ttr": 4874, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "-OPT NOCYCLE,INDEX,NOINPUT\n-END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPSX0705": {"ttr": 4876, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": " COPY INDD=DIR,OUTDD=DIR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPSX0706": {"ttr": 4878, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x82!o\\x00\\x82!o\\x15@\\x00\\x02\\x00\\x02\\x00\\x00\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1982-08-04T00:00:00", "modifydate": "1982-08-04T15:40:00", "lines": 2, "newlines": 2, "modlines": 0, "user": "SHSWRPD"}, "text": "-OPT INIT,DISK,SEQ=/81,8,10,10/\n-END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPSX0707": {"ttr": 4880, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x82#\\x1f\\x00\\x83\\x18o\\x18\\x04\\x00\\x02\\x00\\x01\\x00\\x02\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1982-08-19T00:00:00", "modifydate": "1983-07-05T18:04:00", "lines": 2, "newlines": 1, "modlines": 2, "user": "SYSXKMB"}, "text": "/*$VS,'.D033 S LIBSPOOL'\n/*$VS,'.J342 S LIBSPOOL'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPSX08": {"ttr": 4882, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x82\\x19?\\x00\\x83\\x16\\x7f\\x10C\\x00\\x1d\\x00\\x1d\\x00\\x04\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1982-07-12T00:00:00", "modifydate": "1983-06-16T10:43:00", "lines": 29, "newlines": 29, "modlines": 4, "user": "SYSXKMB"}, "text": "//ARCLBSPL PROC BLK=19040,PRIME=100,SEC=100,                SPACE PARMS\n//        PARMINF='NRJS,NJTA',                          LIBRARIAN PARMS\n//       FROMDSN='PPODOPR.LIBSPOOL.DALYARCH',GEN=XXXX,VER=V00,PG='.G',\n//        TOLIB='SYSX.LIBSPOOL.LIBREST'             TARGET DISK LIBRARY\n//*\n//* STEP ONE RETRIEVES THE MODULE(S) FROM THE LIBSPOOL ARCHIVE TAPE\n//* REQUESTED. STEP TWO ADDS THEM TO THE LIBSPOOL RESTORE\n//* FROM ARCHIVE DATA SET.\n//*\n//FROMSTEP EXEC PGM=LIBRARY,PARM='&PARMINF'\n//MASTIN   DD DSN=&FROMDSN&PG&GEN&VER,DISP=OLD\n//MASTOUT  DD DUMMY,DCB=BLKSIZE=32760\n//OSJOB    DD DSN=&&COPY,DISP=(,PASS),DCB=BLKSIZE=&BLK,\n//            UNIT=SYSDA,SPACE=(&BLK,(&PRIME,&SEC),RLSE)\n//SYSAF01  DD UNIT=SYSDA,SPACE=(CYL,(1,1)),DCB=BLKSIZE=19069\n//SYSAF02  DD UNIT=SYSDA,SPACE=(CYL,(1,1)),DCB=BLKSIZE=19069\n//SYSAF03  DD UNIT=SYSDA,SPACE=(CYL,(1,1)),DCB=BLKSIZE=19069\n//SYSPRINT DD SYSOUT=A\n//SYSPUNCH DD SYSOUT=B\n//INDEX    DD SYSOUT=A\n//LIST     DD SYSOUT=A\n//TOSTEP   EXEC PGM=LIBRARY,PARM='&PARMINF'\n//MASTER   DD DSN=&TOLIB,DISP=SHR\n//OSJOB    DD DUMMY\n//SYSPRINT DD SYSOUT=A\n//SYSPUNCH DD SYSOUT=B\n//INDEX    DD SYSOUT=A\n//LIST     DD SYSOUT=A\n//SYSIN    DD DSN=&&COPY,DISP=(OLD,DELETE)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPS4318G": {"ttr": 4884, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x13\\x00\\x00\\x00\\x82\\x17\\x9f\\x00\\x83#o\\x08Y\\x01\\xfb\\x01\\xb3\\x01\\xfb\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.19", "flags": 0, "createdate": "1982-06-28T00:00:00", "modifydate": "1983-08-24T08:59:00", "lines": 507, "newlines": 435, "modlines": 507, "user": "SYSXKMB"}, "text": "         TITLE 'LIBSPOOL: OPS4318G - LIBRARIAN FILE INQUIRY'\n         PUNCH ' INCLUDE SYSLIB(TSOFAIR)'                      06/09/83\n         PUNCH ' ORDER OPS4318G '                              06/09/83\n         PUNCH ' ENTRY OPS4318G'                               06/09/83\n*/****************************************************************** /*\n*/*                                                                  */\n*/*       WRITTEN BY :             ROBERT P DZIALAK                  */\n*/*                                OCCIDENTAL CHEMICAL CORPORATION   */\n*/*                                360 RAINBOW BLVD. SOUTH           */\n*/*                                NIAGARA FALLS , NEW YORK 14303    */\n*/*                                (716) 286-3251                    */\n*/*                                                                  */\n*/*       SJB  06/09/83            MODS FOR USE AT ODC               */\n*/*                                                                  */\n*/*       SJB  06/17/83            ADDED CODE FOR STAX (ATTENTION)   */\n*/*                                                                  */\n*/*       SJB  06/23/83            CHANGE DISPLAY TO ADD JOB STATUS  */\n*/*                                                                  */\n*/****************************************************************** /*\nOPS4318G CSECT\nON       EQU   X'80'                                           06/17/83\n         PRINT NOGEN\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         USING OPS4318G,R12\n         ST    R13,SAVEAREA+4\n         LR    R2,R13\n         LA    R13,SAVEAREA\n         ST    R13,8(R2)\n*\n*   THIS PROGRAM IS PASSED A PARAMETER LIST AT ENTRY REG1 POINTS TO\n*   AN ADDRESS THAT POINTS TO THE FOLLOWING\n*\n*        1) A HALF WORD THAT HAS THE LENGTH OF THE PARAMETER LIST.\n*           MAXIMUM LENGTH IS 100 BYTES.\n*        2) PARAMETER VALUE (A-G) - 1 BYTE\n*        3) USER-ID - 7 BYTES (ASSUMED TO ALWAYS BE 7 BYTES).\n*        4) THE NAME BASED ON THE PARMETER VALUE PASSED (0-8 BYTES).\n*\n         L     R2,0(R1)                R2 = ADDR. OF PASSED PARMS\n         MVC   PARM(8),2(R2)           LOAD PARM VALUE (A-I), TSOUID\n         CLI   PARM,C'E'               ARE ALL MODULES TO BE DISPLAYED?\n         BE    OPENPRT                 NO NAME ON PARM = E\n         SR    R3,R3                   CLEAR R3\n         IC    R3,1(R2)                PUT PARM LENGTH IN R3\n         SH    R3,=H'9'                SUBTRACT 1 FOR PARM\n*                                      SUBTRACT 7 FOR USER ID\n*                                      SUBTRACT 1 FOR MVC AND CLC\n         CH    R3,=H'7'                COMPARE R3 TO 7\n         BNH   MVENAME             BIF <= 7                    06/17/83\n         LH    R3,=H'7'            USE 7 IF IT IS TOO BIG      06/17/83\nMVENAME  DS    0H                                              06/17/83\n         STH   R3,NAMELEN          SAVE LENGTH OF NAME         06/17/83\n         MVC   NAME(*-*),10(R2)    MOVE IN 1ST BYTE            06/17/83\n         EX    R3,*-6              MOVE IN THE REST            06/17/83\n*        OPEN  (SNAPDCB,(OUTPUT))\nOPENPRT  DS    0H\n         SPACE 3                                               06/17/83\n         MVI   ATTNFLG,0           ZERO ATTN FLAG              06/17/83\n         MVI   FLAG,0              ZERO PGM  FLAG              08/23/83\n         STAX  ATTNEXIT,MF=(E,STAXLIST)                        06/17/83\n         SPACE 3                                               06/17/83\n         OPEN  (TSODCB,(OUTPUT))   OPEN OUTPUT FILE TO TERMINAL\n         SPACE 3                                               06/17/83\n         CLI   ATTNFLG,ON          WAS ATTENTION HIT           06/17/83\n         BE    CLSELIBR                                        06/17/83\n         SPACE 3                                               06/17/83\n*\n* THE LIBRARIAN MACROS MASTOPN,MASTMOD AND MASTCLS ARE EXPLAINED IN\n* THE LIBRARIAN /VS OS SYSTEM REFERENCE MANUAL APPENDIX B - FILE\n* ACCESS INTERFACE ROUTINES.\n*\n         CALL  MASTOPN,(0,OPNRETCD,JCLFILE),VL\n         CLI   OPNRETCD,C'0'\n         BE    CHKPARMS                BAD OPEN IF GREATER THAN 0\n*\n         XC    TRMLINE,TRMLINE           CLEAR LINE\n         PUT   TSODCB,TRMLINE            WRITE BLANK LINE\n         MVC   TRMLINE(38),BADOPEN       INDICATE BAD OPEN OF LIBSPOOL\n         PUT   TSODCB,TRMLINE            WRITE TO TERMINAL\n         B     CLSELIBR                  QUIT\n*\nCHKPARMS CLI   PARM,C'A'      CHECK\n         BE    PARMA            PARM\n         CLI   PARM,C'B'          VALUE\n         BE    PARMB                AND\n         CLI   PARM,C'C'              BRANCH\n         BE    PARMC                    TO\n         CLI   PARM,C'D'                  THE\n         BE    PARMD                        CODE\n         CLI   PARM,C'E'                      TO\n         BE    PARME                            HANDLE\n         CLI   PARM,C'F'                          THIS\n         BE    PARMF                                PARM\n         CLI   PARM,C'G'                              VALUE\n         BE    PARMG\n*\n         XC    TRMLINE,TRMLINE\n         PUT   TSODCB,TRMLINE          WRITE BLANK LINE\n         MVC   TRMLINE(11),BADPARM\n         MVC   TRMLINE+12(1),PARM\n         PUT   TSODCB,TRMLINE          WRITE TO TERMINAL BAD PARM\n         B     CLSELIBR\n*\nPARMA    EQU   *               ********* JOB NAME SELECTION ***********\nLOOK4NME BAL   R4,GETNXTMD               GET INFO ON NEXT MODULE\n         CLI   MODRETCD,C'1'             END OF FILE?\n         BE    DSPLYEND                  YES, GO DISPLAY EOF\n         LH    R3,NAMELEN          GET NAMELEN -1              06/17/83\n         CLC   JOBNAME(*-*),NAME   DUMMY CLC                   06/17/83\n         EX    R3,*-6              IS THIS THE JOBNAME?        06/17/83\n         BNE   LOOK4NME                  NO,GET NEXT MODULE\n         BAL   R5,PRINTIT                YES, SEND DATA TO THE TERMINAL\n         B     LOOK4NME                  GET NEXT MODULE\n*\nPARMB    EQU   *               ********* USER ID SELECTION ************\nLOOK4UID BAL   R4,GETNXTMD\n         CLI   MODRETCD,C'1'             END OF FILE?\n         BE    DSPLYEND                  YES, GO DISPLAY EOF\nCHKUID   CLC   USERID(7),NAME\n         BNE   LOOK4UID\n         BAL   R5,PRINTIT\n         B     LOOK4UID\n*\nPARMC    EQU   *                 ******* JOB NUMBER SELECTION *********\nLOOK4JNO BAL   R4,GETNXTMD\n         CLI   MODRETCD,C'1'             END OF FILE?\n         BE    DSPLYEND                  YES, GO DISPLAY EOF\nCHKJNO   CLC   JOBNUMBR(4),NAME\n         BNE   LOOK4JNO\n         BAL   R5,PRINTIT\n         B     LOOK4JNO\n*\nPARMD    EQU   *                 ******* MODULE NAME SELECTION ********\n         CLI   ATTNFLG,ON          WAS ATTENTION HIT           06/17/83\n         BE    CLSELIBR                                        06/17/83\n         CALL  MASTMOD,(NAME,MODRETCD,MODINFO),VL\n         CLI   MODRETCD,C'0'             MODULE FOUND ?\n         BH    DSPLYEND                  NO, GO DISPLAY EOF\n         BAL   R5,PRINTIT\n         B     CLSELIBR\n*\nPARME    EQU   *                  ****** ALL MODULE SELECTION *********\nGETALL   MVC   NAME(8),SPACES            SET UP SEARCH NAME FIELD\n         BAL   R4,GETNXTMD\n         CLI   MODRETCD,C'1'             END OF FILE?\n         BE    DSPLYEND                  YES, GO DISPLAY EOF\nPRINTALL BAL   R5,PRINTIT\n         B     GETALL\n*\nPARMF    EQU   *                ******** DISPLAY MODULE TO TERMINAL ***\n         CLI   ATTNFLG,ON          WAS ATTENTION HIT           06/17/83\n         BE    CLSELIBR                                        06/17/83\n         CALL  MASTMOD,(NAME,MODRETCD,MODINFO),VL\n         CLI   MODRETCD,C'1'\n         BL    FOUNDITF\n         B     NOTHEREF\n*\n* A MASTMOD RETURN CODE GREATER THAN ZERO INDICATES A PROBLEM\n*    1) MODULE COULD NOT BE FOUND\n*    2) LIBRARIAN JCL DATA SET NOT SUCCESSFULLY OPENED VIA MASTOPN\n*    9) ILLOGICAL CONDITION ON LIBRARIAN DATA SET\n*\nNOTHEREF EQU   *\n         XC    TRMLINE,TRMLINE           CLEAR LINE\n         PUT   TSODCB,TRMLINE            WRITE BLANK LINE\n         MVC   TRMLINE(16),MODNOTFD\n         PUT   TSODCB,TRMLINE            INDICATE MODULE NOT FOUND\n         MVI   RETURNCD,X'04'            RETURN CODE TO 4 IF NO HITS\n         B     CLSELIBR\n*\n* A MASTRCD RETURN CODE GREATER THAN ZERO INDICATES A PROBLEM\n*    1) NO CARDS LEFT IN THE MODULE\n*    2) CALL MADE AFTER 'END MODULE' WAS REACHED\n*    9) ILLOGICAL CONDITION ON LIBRARIAN DATA SET\n*\nFOUNDITF EQU   *\n         CLI   ATTNFLG,ON          WAS ATTENTION HIT           06/17/83\n         BE    CLSELIBR                                        06/17/83\n         CALL  MASTRCD,(MODINFO,MODRETCD),VL\n         CLI   MODRETCD,C'0'\n         BH    CLSELIBR                       EXIT\n         CLI   MODINFO,X'FE'                  CHECK FOR CONTINUATION\n         BNE   RITELNE1\n         MVC   TRMLINE+1(78),MODINFO+1\n         PUT   TSODCB,TRMLINE\n         B     FOUNDITF\nRITELNE1 MVC   TRMLINE(79),MODINFO\n         PUT   TSODCB,TRMLINE\n         MVC   TRMLINE(1),MODINFO+79        SAVE LAST CHAR IF CONTINUED\n         B     FOUNDITF\n*\nPARMG    EQU   *                  ****** WRITE MODULE TO HARDCOPY *****\n         CLI   ATTNFLG,ON          WAS ATTENTION HIT           06/17/83\n         BE    CLSELIBR                                        06/17/83\n         CALL  MASTMOD,(NAME,MODRETCD,MODINFO),VL\n         CLI   MODRETCD,C'1'\n         BL    OPENHCPY\n         B     NOTHEREG\n*\n* A MASTMOD RETURN CODE GREATER THAN ZERO INDICATES A PROBLEM\n*    1) MODULE COULD NOT BE FOUND\n*    2) LIBRARIAN JCL DATA SET NOT SUCCESSFULLY OPENED VIA MASTOPN\n*    9) ILLOGICAL CONDITION ON LIBRARIAN DATA SET\n*\nNOTHEREG EQU   *\n         XC    TRMLINE,TRMLINE           CLEAR LINE\n         PUT   TSODCB,TRMLINE            WRITE BLANK LINE\n         MVC   TRMLINE(16),MODNOTFD\n         PUT   TSODCB,TRMLINE            INDICATE MODULE NOT FOUND\n         MVI   RETURNCD,X'04'            RETURN CODE TO 4 IF NO HITS\n         B     CLSELIBR\n*\n* A MASTRCD RETURN CODE GREATER THAN ZERO INDICATES A PROBLEM\n*    1) NO CARDS LEFT IN THE MODULE\n*    2) CALL MADE AFTER 'END MODULE' WAS REACHED\n*    9) ILLOGICAL CONDITION ON LIBRARIAN DATA SET\n*\nOPENHCPY OPEN  (PRINTDCB,(OUTPUT))\n         CLI   ATTNFLG,ON          WAS ATTENTION HIT           06/17/83\n         BE    CLSELIBR                                        06/17/83\n         CALL  MASTRCD,(MODINFO,MODRETCD),VL\n         CLI   MODRETCD,C'0'\n         BH    CLOSEPRT\n         MVC   MODINFO+5(51),LSPRTHDR        IDENTIFY THIS JCL PRINT\n         MVC   MODINFO+42(8),NAME\n         B     MVE4PRT\nFOUNDITG EQU   *\n         CLI   ATTNFLG,ON          WAS ATTENTION HIT           06/17/83\n         BE    CLSELIBR                                        06/17/83\n         CALL  MASTRCD,(MODINFO,MODRETCD),VL\n         CLI   MODRETCD,C'0'\n         BH    CLOSEPRT\nMVE4PRT  MVC   PRINTLNE(80),MODINFO\n         MVC   PRINTLNE+80(53),SPACES\n         CLI   ATTNFLG,ON          WAS ATTENTION HIT           06/17/83\n         BE    CLSELIBR                                        06/17/83\n         CALL  MASTRCD,(MODINFO,MODRETCD),VL\n         CLI   MODRETCD,C'0'\n         BH    ENDPRNT\n         CLI   MODINFO,X'FE'                  CHECK FOR CONTINUATION\n         BNE   PRNTLAST\n         MVC   PRINTLNE+80(53),MODINFO+1\n         PUT   PRINTDCB,PRINTLNE\n         B     FOUNDITG\nPRNTLAST PUT   PRINTDCB,PRINTLNE\n         B     MVE4PRT\n*\nENDPRNT  PUT   PRINTDCB,PRINTLNE\nCLOSEPRT CLOSE PRINTDCB\n         XC    TRMLINE,TRMLINE           CLEAR LINE\n         PUT   TSODCB,TRMLINE            WRITE BLANK LINE\n         MVC   TRMLINE(31),QUE4PRNT\n         PUT   TSODCB,TRMLINE         INDICATE MODULE QUEUED FOR PRINT\n         B     CLSELIBR                  EXIT\n*\nDSPLYEND XC    TRMLINE,TRMLINE           CLEAR LINE\n         PUT   TSODCB,TRMLINE            WRITE BLANK LINE\n         MVC   TRMLINE(11),ENDOFDTA      INDICATE END OF DATA\n         PUT   TSODCB,TRMLINE            WRITE TO TERMINAL\n*        SNAP  DCB=SNAPDCB,ID=3,STORAGE=(DUMPSTRT,DUMPEND),PDATA=(REGS)\n         L     R7,HITCOUNT               LOAD COUNT OF HITS\n         LTR   R7,R7                     CHECK IF ZERO\n         BNZ   CLSELIBR                  EXIT IF NAMES HAVE BEEN FOUND\n         XC    TRMLINE,TRMLINE           CLEAR LINE\n         PUT   TSODCB,TRMLINE            WRITE BLANK LINE\n         MVC   TRMLINE(16),NOMATCH       INDICATE NO MATCHES\n         PUT   TSODCB,TRMLINE            WRITE TO TERMINAL\n         MVI   RETURNCD,X'04'            RETURN CODE TO 4 IF NO HITS\n*        SNAP  DCB=SNAPDCB,ID=1,STORAGE=(DUMPSTRT,DUMPEND),PDATA=(REGS)\n*\nCLSELIBR CALL  MASTCLS\n*        CLOSE SNAPDCB\n         CLOSE TSODCB\n         STAX  MF=(E,STAXLIST)     CANCEL ATTENTION EXIT       06/17/83\n         SR    R15,R15\n         IC    R15,RETURNCD\n         L     R13,SAVEAREA+4\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         BR    R14\n*\nGETNXTMD MVC   FINDNAME(8),SPACES\n         CLI   ATTNFLG,ON          WAS ATTENTION HIT           06/17/83\n         BE    CLSELIBR                                        06/17/83\n         CALL  MASTMOD,(FINDNAME,MODRETCD,MODINFO),VL\n         CLI   MODRETCD,C'1'\n         BH    LIBRPROB\n         BR    R4\n*\n* A MASTMOD RETURN CODE GREATER THAN ZERO INDICATES A PROBLEM\n*    1) MODULE COULD NOT BE FOUND\n*    2) LIBRARIAN JCL DATA SET NOT SUCCESSFULLY OPENED VIA MASTOPN\n*    9) ILLOGICAL CONDITION ON LIBRARIAN DATA SET\n*\nLIBRPROB EQU   *\n         XC    TRMLINE,TRMLINE           CLEAR LINE\n         PUT   TSODCB,TRMLINE            WRITE BLANK LINE\n         MVC   TRMLINE(22),LIBRPRBM      INDICATE PROBLEM\n         PUT   TSODCB,TRMLINE            WRITE TO TERMINAL\n*        SNAP  DCB=SNAPDCB,ID=2,STORAGE=(DUMPSTRT,DUMPEND),PDATA=(REGS)\n         B     CLSELIBR\n*\nPRINTIT  TM    FLAG,$HEADDON       HAS TITLE LINES BEEN ISSUED 08/23/83\n         BO    SKIPHDR             YES, THEN SKIP              08/23/83\n         OI    FLAG,$HEADDON       INDICATE TITLE DONE         08/23/83\n         PUT   TSODCB,HDRLINE1\n         PUT   TSODCB,HDRLINE2\nSKIPHDR  DS    0H                                              08/23/83\n         MVC   HSTDATA,SPACES                                  08/23/83\n         CALL  MASTHST,(HSTDATA,MODRETCD),VL                   08/23/83\n         MVC   PRTLINE(79),SPACES  BLANK OUT RECORD            08/23/83\n         MVC   RPTJOBNM,JOBNAME    PREPARE PRINT LINE TO BE    08/23/83\n         MVC   RPTJOB#,JOBNUMBR    SENT TO THE TERMINAL        08/23/83\n         MVC   RPTUSER,USERID                                  08/23/83\n         MVC   RPTLIBNM,MODULENM                               08/23/83\n         CLC   RUNDATE(5),=C'YYDDD'                            08/23/83\n         BNE   SHOWTIME                                        08/23/83\n         MVC   RPTRUNDT(18),NOTSCHED                           08/23/83\n         B     PUT2TERM                                        08/23/83\nSHOWTIME MVC   RPTRUNDT(18),SPACES                             08/23/83\n         BAL   R6,JULCNVRT                                     08/23/83\n         MVC   RPTRUNDT,GREGDTE                                08/23/83\n         MVC   RPTSTIME+0(2),STRTHOUR                          08/23/83\n         MVI   RPTSTIME+2,C'.'                                 08/23/83\n         MVC   RPTSTIME+3(2),STRTMIN                           08/23/83\n         MVC   RPTETIME+0(2),ENDHOUR                           08/23/83\n         MVI   RPTETIME+2,C'.'                                 08/23/83\n         MVC   RPTETIME+3(2),ENDMIN                            08/23/83\n         MVC   RPTJSTAT,HSTMSG                                 08/23/83\nPUT2TERM PUT   TSODCB,PRTLINE\n         L     R7,HITCOUNT               LOAD COUNT OF HIT SO FAR\n         LA    R7,1(R7)                  INCREMENT BY 1\n         ST    R7,HITCOUNT               SAVE IT\n         BR    R5\n*\nJULCNVRT MVC  YRUNPACK+3(5),RUNDATE    GET JULIAN RUN DATE\n         PACK YRPACK,YRUNPACK          PACK IT\n         L    R1,YRPACK                PUT IT IN R1\n*\n         SR   R8,R8\n         PACK DATEP+6(2),YRUNPACK+3(2)\n         CVB  R9,DATEP\n         D    R8,=F'4'                 DIVIDE YEAR BY 4\n         LTR  R8,R8                    ZERO REMAINDER INDICATES LEAP YR\n         BNZ  FINDDAY\nCHANGFEB MVI  FEB,X'1D'\n*\nFINDDAY  SLA   R1,16                    REMOVE YEAR DDDF0000\n         SRA   R1,16                    MOVE BACK 0000DDDF\n         XC    DUBLWD,DUBLWD            CLEAR DUBLWD\n         ST    R1,DUBLWD+4\n         CVB   R1,DUBLWD                PACKED TO BINARY\n         LA    R7,1                     SET MONTH CTR TO 1\n         LA    R8,CALENDAR\n         SR    R9,R9\nGETDYMTH IC    R9,0(R8)                 INSERT DAYS IN MONTH IN REG 9\n         CR    R1,R9                    DAY OF YEAR - DAYS IN MONTH\n         BNH   GOTDYMTH\n         SR    R1,R9                    SUBTRACT MONTHS DAYS FROM R1\n         LA    R7,1(R7)                 INCREMENT TO NEXT MONTH\n         LA    R8,1(R8)                 INCREMENT TO NEXT MONTH\n         B     GETDYMTH\nGOTDYMTH BAL   R11,CNVRTX\n         MVC   GREGDTE+0(2),DWORD+2     MOVE MONTH\n         LR    R7,R1\n         BAL   R11,CNVRTX\n         MVC   GREGDTE+3(2),DWORD+2     MOVE DAY\n         MVC   GREGDTE+6(2),YRUNPACK+3  MOVE YEAR\n         MVI   GREGDTE+2,C'/'\n         MVI   GREGDTE+5,C'/'\nXITDTECV BR    R6\n*\nCNVRTX   CVD   R7,DWORD\n         UNPK  DWORD(4),DWORD+5(3)\n         OI    DWORD+3,X'F0'\n         BR    R11\n         SPACE 3                                               06/17/83\n         USING *,R15                                           06/17/83\nATTNEXIT L     R1,8(,R1)           GET @ OF USER PARM AREA     06/17/83\n         MVI   0(R1),ON            TURN IT ON                  06/17/83\n         BR    R14                 AND RETURN                  06/17/83\n         DROP  R15                                             06/17/83\n*\nGREGDTE  DC    D'0'\nDATEP    DC    D'0'\nYRUNPACK DC    X'F0F0F0F0F0F0F0F0'\nDUBLWD   DC    D'0'\nDWORD    DC    D'0'\nDBLTIME  DC    D'0'\nYRPACK   DC    F'0'\nFULLTIME DC    F'0'\nJULDATE  DC    F'0'\nCALENDAR DC    X'1F'            NUMBER OF DAYS IN JAN.\nFEB      DC    X'1C'            NUMBER OF DAYS IN FEB.\n         DC    X'1F'            NUMBER OF DAYS IN MAR.\n         DC    X'1E'            NUMBER OF DAYS IN APR.\n         DC    X'1F'            NUMBER OF DAYS IN MAY\n         DC    X'1E'            NUMBER OF DAYS IN JUNE\n         DC    X'1F'            NUMBER OF DAYS IN JULY\n         DC    X'1F'            NUMBER OF DAYS IN AUG.\n         DC    X'1E'            NUMBER OF DAYS IN SEPT\n         DC    X'1F'            NUMBER OF DAYS IN OCT.\n         DC    X'1E'            NUMBER OF DAYS IN NOV.\n         DC    X'1F'            NUMBER OF DAYS IN DEC.\n*\nTSODCB  DCB   DSORG=PS,MACRF=(PM),DDNAME=SCREEN,RECFM=FB,              X\n               BLKSIZE=1580,LRECL=79\nPRINTDCB DCB   DSORG=PS,MACRF=(PM),DDNAME=PRINTO,RECFM=FBA,            X\n               BLKSIZE=2660,LRECL=133\nSNAPDCB  DCB   DSORG=PS,MACRF=(W),DDNAME=SNAPDUMP,RECFM=VBA,           X\n               BLKSIZE=1632,LRECL=125\n         EJECT ,                                               06/17/83\nATTNFLG  DC    X'00'               INDICATES ATTN KEY HIT      06/17/83\nSTAXLIST STAX  ATTNEXIT,USADDR=ATTNFLG,MF=L                    06/17/83\n*\nDUMPSTRT DS    0F\nHITCOUNT DC    F'0'\nSAVEAREA DC    18F'0'\nNAMELEN  DC    H'8'                LENGTH OF NAME FIELD        06/17/83\nNAME     DC    CL8' '\nSPACES   DC    CL133' '\nMODINFO  DC    CL100' '\nOPNRETCD DC    C' '\nMODRETCD DC    C' '\nJCLFILE  DC    C'JCLFILE '\nJCLFILEB DC    C'        '\nRETURNCD DC    X'00'\nPARMEQU  DC    CL5'PARM='\nPARM     DC    C'0'\nTSOUID   DC    CL7' '\nFNDNMEQU DC    CL10'FINDNAME ='\nFINDNAME DC    CL8' '\nFLAG     DC    X'00'                                                SJB\n$HEADDON EQU   X'80'                                                SJB\nDUMPEND  EQU   *\nHSTDATA  DC    CL88' '                                         08/23/83\nHSTMSG   EQU   HSTDATA+5                                       08/23/83\nPRINTLNE DC    CL133' '\nTRMLINE  DC    CL79' '\nPRTLINE  DC    CL79' '\nHDRLINE1 DC    CL79' '\n         ORG   HDRLINE1\nRPTJOBNM EQU   PRTLINE+*-HDRLINE1,8                            08/23/83\n         DC    CL9'  JOB    '                                  08/23/83\nRPTJOB#  EQU   PRTLINE+*-HDRLINE1,4                            08/23/83\n         DC    CL5'JOB  '                                      08/23/83\nRPTUSER  EQU   PRTLINE+*-HDRLINE1,7                            08/23/83\n         DC    CL8' USER   '                                   08/23/83\nRPTLIBNM EQU   PRTLINE+*-HDRLINE1,8                            08/23/83\n         DC    CL9'LIBRARY '                                   08/23/83\nRPTRUNDT EQU   PRTLINE+*-HDRLINE1,8                            08/23/83\n         DC    CL9'RUN-DATE '                                  08/23/83\nRPTSTIME EQU   PRTLINE+*-HDRLINE1,5                            08/23/83\n         DC    CL6'START '                                     08/23/83\nRPTETIME EQU   PRTLINE+*-HDRLINE1,5                            08/23/83\n         DC    CL6' END  '                                     08/23/83\nRPTJSTAT EQU   PRTLINE+*-HDRLINE1,22                           08/23/83\n         DC    CL22'JOB COMPLETION '                           08/23/83\n         ORG   HDRLINE1+L'HDRLINE1                             08/23/83\nHDRLINE2 DC    CL79' '                                         08/23/83\n         ORG   HDRLINE2\n         DC    CL9' NAME    '                                  08/23/83\n         DC    CL5'NUM. '                                      08/23/83\n         DC    CL8'  ID    '                                   08/23/83\n         DC    CL9' NAME   '                                   08/23/83\n         DC    CL9'MM/DD/YY '                                  08/23/83\n         DC    CL6'TIME  '                                     08/23/83\n         DC    CL6'TIME  '                                     08/23/83\n         DC    CL22'   STATUS    '                             08/23/83\n         ORG   HDRLINE2+L'HDRLINE2                             08/23/83\nLSPRTHDR DC   CL51'***** LIBSPOOL JCL LISTING OF MODULE NNNNNNNN *****'\nENDOFDTA DC    CL11'END OF DATA'\nBADOPEN  DC    CL38'OPEN PROBLEM FOR LIBSPOOL JCL DATA SET'\nQUE4PRNT DC    CL31'JCL MODULE NOW QUEUED FOR PRINT'\nBADPARM  DC    CL11'BAD PARM = '\nNOMATCH  DC    CL16'NO MATCHES FOUND'\nMODNOTFD DC    CL16'MODULE NOT FOUND'\nLIBRPRBM DC    CL22'MASMOD RETURN CODE BAD'\nNOTSCHED DC    CL18'JOB NOT SCHEDULED'\n         LTORG\nJOBNAME  EQU   MODINFO+23,8\nJOBNUMBR EQU   MODINFO+50,4\nUSERID   EQU   MODINFO+31,7\nMODULENM EQU   MODINFO+46,8\nRUNDATE  EQU   MODINFO+54,5\nSTRTHOUR EQU   MODINFO+59,2\nSTRTMIN  EQU   MODINFO+61,2\nENDHOUR  EQU   MODINFO+63,2\nENDMIN   EQU   MODINFO+65,2\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPS4318L": {"ttr": 5125, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x82\\x18\\x0f\\x00\\x82\\x19?\\tI\\x00\\t\\x00\\x0f\\x00\\x03\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1982-06-29T00:00:00", "modifydate": "1982-07-12T09:49:00", "lines": 9, "newlines": 15, "modlines": 3, "user": "SHSWRPD"}, "text": "//OPS4318L JOB (@SYSUID,@SYSACCT),'TSO LIBRARAN INQUIRY',CLASS=A\n/*JOBPARM   I,W,Q=T,LINES=3,T=3\n//C         EXEC    ASMHCL2\n//ASM.SYSIN  DD  DSN=SHSW.LIBSPOOL.DATA(OPS4318G),DISP=SHR\n//LKED.SYSLMOD DD DSN=SHSWRPD.NCBPROG,DISP=SHR,VOL=SER=F031S2,UNIT=3350\n//LKED.LIB    DD  DSN=PHGI.LINKLIB,DISP=SHR\n//LKED.SYSIN  DD  *\n  INCLUDE LIB(MASTOPN)\n  NAME OPS4318G(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPS4319G": {"ttr": 5127, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x82\\x17\\x9f\\x00\\x83\\x05?\\x137\\x01I\\x01>\\x01I\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1982-06-28T00:00:00", "modifydate": "1983-02-22T13:37:00", "lines": 329, "newlines": 318, "modlines": 329, "user": "SHSWRPD"}, "text": "         TITLE 'LIBSPOOL: OPS4319G - ARCHIVE DIRECTORY FILE INQUIRY'\n*/****************************************************************** /*\n*/*                                                                  */\n*/*       WRITTEN BY :             ROBERT P DZIALAK                  */\n*/*                                OCCIDENTAL CHEMICAL CORPORATION   */\n*/*                                360 RAINBOW BLVD. SOUTH           */\n*/*                                NIAGARA FALLS , NEW YORK 14303    */\n*/*                                (716) 286-3251                    */\n*/*                                                                  */\n*/****************************************************************** /*\nOPS4319G CSECT\n         PRINT NOGEN\n*\nSTARTDMP EQU   *\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         USING OPS4319G,R12\n         B     NAMEED\n         DC    CL8'OPS4319G'\nNAMEED   EQU   *\n         ST    R13,SAVEAREA+4\n         LR    R2,R13\n         LA    R13,SAVEAREA\n         ST    R13,8(R2)\n*\n*   THIS PROGRAM IS PASSED A PARAMETER LIST AT ENTRY REG1 POINTS TO\n*   AN ADDRESS THAT POINTS TO THE FOLLOWING\n*\n*        1) A HALF WORD THAT HAS THE LENGTH OF THE PARAMETER LIST.\n*           MAXIMUM LENGTH IS 100 BYTES.\n*        2) PARAMETER VALUE (A-E) - 1 BYTE\n*        3) USER-ID - 7 BYTES (ASSUMED TO ALWAYS BE 7 BYTES).\n*        4) START SCAN DATE YYMMDD - 6 BYTES\n*        5) END SCAN DATE YYMMDD - 6 BYTES\n*        6) THE NAME BASED ON THE PARMETER VALUE PASSED (0-8 BYTES).\n*\n         L     R2,0(R1)                R2 = ADDR. OF PASSED PARMS\n         MVC   PARM(20),2(R2)      LOAD PARM,TSOUID,START/END SCAN DATE\n         CLI   PARM,C'E'               ARE ALL MODULES TO BE DISPLAYED?\n         BE    OPENPRT                 NO NAME ON PARM = E\n         SR    R3,R3                   CLEAR R3\n         IC    R3,1(R2)                PUT PARM LENGTH IN R3\n         SH    R3,=H'21'               SUBTRACT 1 FOR PARM\n*                                      SUBTRACT 7 FOR USER ID\n*                                      SUBTRACT 6 FOR START SCAN DATE\n*                                      SUBTRACT 6 FOR END SCAN DATE\n*                                      SUBTRACT 1 FOR MVC AND CLC\n         CH    R3,=H'7'                COMPARE R3 TO 7\n         BNH   SETMVELN                OK AS IS TO SET MOVE LENGTH\n         LH    R3,=H'7'                USE 7 IF IT IS TOO BIG\nSETMVELN STC   R3,MVENAME+1            SET UP MVC FOR NAME PARM\nMVENAME  MVC   NAME(8),22(R2)          MOVE NAME FIELD OF PROPER LENGTH\n*ABENDIT  DC    D'0'\nOPENPRT  OPEN  (TSODCB,(OUTPUT))       OPEN OUTPUT FILE TO TERMINAL\n         OPEN  (PDSDRECT,(INPUT))  OPEN DIRECTORY OF ARCHIVE DIR. DSN\n         OPEN  (ARCHDCB,(INPUT))       OPEN ARCHIVE DIR. DSN\n*        OPEN  (SNAPDCB,(OUTPUT))\n         BAL   R4,CHKPARMS            SET UP COMPARES AND R11 BR ADDDR.\n         USING MBRENTRY,R3\nRDIRCTRY GET   PDSDRECT,DIRECTRY\n         LA    R3,DIRECTRY\n         LH    R10,DIRECTRY           NUMBER OF BYTES USED IN DIRECTORY\n         AR    R10,R3                 ADDRESS OF END OF DIRECTORY = R10\n         LA    R3,2(R3)               START ADDRESS OF MEMBER DATA\n*        SNAP  DCB=SNAPDCB,ID=3,STORAGE=(STARTDMP,ENDBUF),PDATA=(REGS)\nCHKMBRNM CLC   MBRNAME(2),=X'FFFF'     TEST IF END OF DIRECTORY\n         BE    ENDOFDTA                ENTIRE DIRECTORY HAS BEEN SCANED\n         CLC   MBRNAME(2),=X'0000'     TEST IF END OF THIS DIRECTRY BLK\n         BE    RDIRCTRY                GO READ NEXT DIRECTORY BLOCK\n         CLC   MBRENDTE(6),SCANBGN     LAST RECORD DATE < SCAN BEGIN\n         BL    INCRMEMB                YES, GET NEXT MEMBER\n         CLC   MBRBGNDT(6),SCANEND     FIRST MEMBER DATE > SCAN END\n         BH    ENDOFDTA                YES, ALL REMAINING MEMBERS HAVE\n         B     FINDMBR                 MEMBER WITHIN SCAN DATE INTERVAL\nINCRMEMB LA    R3,24(R3)               ADDRESS OF NEXT MEMBER NAME\n         CR    R3,R10                  END OF DIRECTORY DATA\n         BL    CHKMBRNM                NO, CHECK THIS MEMBER\n         B     RDIRCTRY                GO READ NEXT DIRECTORY BLOCK\nFINDMBR  MVC   MBRTTRK(3),8(R3)        SET UP RELATIVE ADDRESS\n         LA    R2,MBRTTRK\n         FIND  ARCHDCB,(2),C           POSITION TO MEMBER FOR READ\n         MVI   PRINTIT+1,X'00'         PRINT TAPEINFO AND HEADER\n         MVI   SAVEDSN+1,X'00'         GET DSNAME FOR THIS MEMBER\nREADMBR  READ  DECB1,SF,ARCHDCB,BUFAREA,'S'\n         CHECK DECB1\n         LA    R8,BUFAREA                 ADDRESS OF BUFFER\n         USING ARCHVREC,R8\n         LA    R6,ARCHDCB                 ADDRESS OF ARCHIVE DSN DCB\n         USING IHADCB,R6\n         LH    R9,DCBBLKSI               BLKSIZE AT TIME OF READ\n         L     R1,DECB1+16               IOB ADDR (BLK RESIDUAL AT +14)\n         SH    R9,14(R1)                 LENGTH OF BLOCK READ\n         SH    R9,DCBLRECL               BACK OFF TO LAST RECORD\n         AR    R9,R8                   ADDRESS OF LAST RECORD IN BLK-R9\nSAVEDSN  NOP   BEGINBLK\n         MVC   ARCHDSN(40),ARCHVREC     SAVE ARCHIVE TAPE DSN\n         MVI   SAVEDSN+1,X'F0'          SKIP FOR REST OF THIS MEMBER\n*\n*        SNAP  DCB=SNAPDCB,ID=2,STORAGE=(STARTDMP,ENDBUF),PDATA=(REGS)\n*\nGETNXTRC AH    R8,DCBLRECL              INCREMENT TO NEXT ARCHIVE REC\nBEGINBLK CR    R8,R9                    COMPARE TO ADDR. OF LAST REC.\n         BH    READMBR                  GO LOOK AT NEXT BLOCK\n         CLC   ARCRUNYY(6),SCANBGN      COMPARE RUN DATE TO SCAN BEGIN\n         BL    GETNXTRC                 DATE LOW, BUMP TO NEXT RECORD\n         CLC   ARCRUNYY(6),SCANEND      COMPARE RUN DATE TO SCAN END\n         BH    ENDOFDTA                 EXHAUSTED ALL RECORDS WITHIN\n*\n         BR    R11                      BRANCH TO SELECTION DESIRED\n*\nPARMA    EQU   *               ********* JOB NAME SELECTION ***********\nCHKNAME  CLC   ARCJNAME(8),NAME          IS IT THE NAME WANTED\n*        SNAP  DCB=SNAPDCB,ID=4,STORAGE=(STARTDMP,ENDBUF),PDATA=(REGS)\n         BNE   GETNXTRC                  NO,GET NEXT RECORD\n         BAL   R5,PRINTIT                YES, SEND DATA TO THE TERMINAL\n         B     GETNXTRC                  NO,GET NEXT RECORD\n*\nPARMB    EQU   *               ********* USER ID SELECTION ************\n         CLC   ARCUID(7),NAME\n         BNE   GETNXTRC                  NO,GET NEXT RECORD\n         BAL   R5,PRINTIT                YES, SEND DATA TO THE TERMINAL\n         B     GETNXTRC                  NO,GET NEXT RECORD\n*\nPARMC    EQU   *                 ******* JOB NUMBER SELECTION *********\n         CLC   ARCJNUMB(4),NAME\n         BNE   GETNXTRC                  NO,GET NEXT RECORD\n         BAL   R5,PRINTIT                YES, SEND DATA TO THE TERMINAL\n         B     GETNXTRC                  NO,GET NEXT RECORD\n*\nPARMD    EQU   *                 ******* MODULE NAME SELECTION ********\n         CLC   ARCMODNM(8),NAME\n         BNE   GETNXTRC                  NO,GET NEXT RECORD\n         BAL   R5,PRINTIT                YES, SEND DATA TO THE TERMINAL\n         B     GETNXTRC                  NO,GET NEXT RECORD\n*\nPARME    EQU   *                  ****** ALL MODULE SELECTION *********\n         BAL   R5,PRINTIT\n         B     GETNXTRC                  NO,GET NEXT RECORD\n*\nENDOFDTA XC    ENDLINE,ENDLINE           CLEAR LINE\n         PUT   TSODCB,ENDLINE            WRITE BLANK LINE\n         MVC   ENDLINE(11),ENDATAMS      INDICATE END OF DATA\n         PUT   TSODCB,ENDLINE            WRITE TO TERMINAL\n         L     R7,HITCOUNT               LOAD COUNT OF HITS\n         LTR   R7,R7                     CHECK IF ZERO\n         BNZ   CLOSEUP                   EXIT IF NAMES HAVE BEEN FOUND\n         XC    ENDLINE,ENDLINE           CLEAR LINE\n         PUT   TSODCB,ENDLINE            WRITE BLANK LINE\n         MVC   ENDLINE(16),NOMATCH       INDICATE NO MATCHES\n         PUT   TSODCB,ENDLINE            WRITE TO TERMINAL\n         MVI   RETURNCD,X'04'            INDICATE NO HITS RETURN CODE\n*        SNAP  DCB=SNAPDCB,ID=5,STORAGE=(STARTDMP,ENDBUF),PDATA=(REGS)\n*\nCLOSEUP  EQU   *\n         CLOSE ARCHDCB\n         CLOSE PDSDRECT\n*        CLOSE SNAPDCB\n         CLOSE TSODCB\n         SR    R15,R15\n         IC    R15,RETURNCD\n         L     R13,SAVEAREA+4\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         BR    R14\n*\nPRINTIT  NOP   SKIPHDR\n         MVI   PRINTIT+1,X'F0'\n         PUT   TSODCB,SPACES\n         PUT   TSODCB,ARCHDSNM\n         PUT   TSODCB,SPACES\n         PUT   TSODCB,HDRLINE1\n         PUT   TSODCB,HDRLINE2\nSKIPHDR  MVC   PRNTLINE+00(8),ARCJNAME       PREPARE PRINT LINE TO BE\n         MVC   PRNTLINE+14(4),ARCJNUMB       SENT TO THE TERMINAL\n         MVC   PRNTLINE+24(7),ARCUID\n         MVC   PRNTLINE+35(8),ARCMODNM\n         MVC   PRNTLINE+48(2),ARCRUNMM\n         MVI   PRNTLINE+50,C'/'\n         MVC   PRNTLINE+51(2),ARCRUNDD\n         MVI   PRNTLINE+53,C'/'\n         MVC   PRNTLINE+54(2),ARCRUNYY\n         CLC   ARCRUNST(5),=C'HH.MM'\n         BNE   SHOWTIME\n         MVC   PRNTLINE+58(21),NOTSCHED\n         B     PUT2TERM\nSHOWTIME MVC   PRNTLINE+58(21),SPACES\n         MVC   PRNTLINE+60(5),ARCRUNST\n         MVC   PRNTLINE+72(5),ARCRUNEN\nPUT2TERM PUT   TSODCB,PRNTLINE\n         L     R7,HITCOUNT               LOAD COUNT OF HIT SO FAR\n         LA    R7,1(R7)                  INCREMENT BY 1\n         ST    R7,HITCOUNT               SAVE IT\n         BR    R5\n*\nCHKPARMS CLI   PARM,C'A'\n         BNE   CHK4PRMB\n         LA    R11,PARMA                LOAD ADDRESS FOR BRANCH\n         MVC   CHKNAME+1(1),MVENAME+1    SET UP COMPARE LENGTH\n         BR    R4\nCHK4PRMB CLI   PARM,C'B'\n         BNE   CHK4PRMC\n         LA    R11,PARMB                LOAD ADDRESS FOR BRANCH\n         BR    R4\nCHK4PRMC CLI   PARM,C'C'\n         BNE   CHK4PRMD\n         LA    R11,PARMC                LOAD ADDRESS FOR BRANCH\n         BR    R4\nCHK4PRMD CLI   PARM,C'D'\n         BNE   CHK4PRME\n         LA    R11,PARMD                LOAD ADDRESS FOR BRANCH\n         BR    R4\nCHK4PRME CLI   PARM,C'E'\n         BNE   BADPARM\n         LA    R11,PARME                LOAD ADDRESS FOR BRANCH\n         BR    R4\n*\nBADPARM  XC    ENDLINE,ENDLINE\n         PUT   TSODCB,ENDLINE          WRITE BLANK LINE\n         MVC   ENDLINE(11),BADPRMES\n         MVC   ENDLINE+12(1),PARM\n         PUT   TSODCB,ENDLINE          WRITE TO TERMINAL BAD PARM\n         B     CLOSEUP\n*\nBADTTR   XC    ENDLINE,ENDLINE\n         PUT   TSODCB,ENDLINE          WRITE BLANK LINE\n         MVC   ENDLINE(11),BADTTRMS\n         PUT   TSODCB,ENDLINE          WRITE TO TERMINAL BAD PARM\n*        SNAP  DCB=SNAPDCB,ID=1,STORAGE=(STARTDMP,ENDBUF),PDATA=(REGS)\n         B     CLOSEUP\n*\nTSODCB  DCB   DSORG=PS,MACRF=(PM),DDNAME=SCREEN,RECFM=FB,              X\n               BLKSIZE=1580,LRECL=79\nSNAPDCB  DCB   DSORG=PS,MACRF=(W),DDNAME=SNAPDUMP,RECFM=VBA,           X\n               BLKSIZE=1632,LRECL=125\nPDSDRECT DCB   DSORG=PS,MACRF=(GM),DDNAME=DIRECTRY,RECFM=U,BLKSIZE=256,X\n               EODAD=CLOSEUP\nARCHDCB  DCB   DSORG=PO,MACRF=(R),DDNAME=DIRECTRY,                     X\n               EODAD=INCRMEMB,SYNAD=BADTTR\n*\nMBRTTRK  DC    F'0'\nHITCOUNT DC    F'0'\nSAVEAREA DC    18F'0'\nPARMEQU  DC    CL5'PARM='\nPARM     DC    C'0'\nTSOUID   DC    CL7' '\nSCANBGN  DC    CL6' '\nSCANEND  DC    CL6' '\nNAME     DC    CL8' '\nRETURNCD DC    X'00'\nSPACES   DC    CL79' '\nTAPEINFO DC    CL79' '\nENDLINE  DC    CL79' '\nPRNTLINE DC    CL79' '\nHDRLINE1 DC    CL79' '\n         ORG   HDRLINE1\n         DC    CL10'JOB NAME  '\n         DC    CL10' JOB NUMBE'\n         DC    CL10'R   USER I'\n         DC    CL10'D    LIBRA'\n         DC    CL10'RIAN    RU'\n         DC    CL10'N DATE  ST'\n         DC    CL10'ART TIME  '\n         DC    CL09' END TIME'\nHDRLINE2 DC    CL79' '\n         ORG   HDRLINE2\n         DC    CL10'________  '\n         DC    CL10'    ____  '\n         DC    CL10'    ______'\n         DC    CL10'_   MODULE'\n         DC    CL10' NAME  (MM'\n         DC    CL10'/DD/YY)  ('\n         DC    CL10'HH.MM)    '\n         DC    CL09' (HH.MM) '\nARCHDSNM DC    CL30'        ARCHIVE TAPE DSNAME = '\nARCHDSN  DC    CL40' '\n         DC    CL9' '\nENDATAMS DC    CL11'END OF DATA'\nBADPRMES DC    CL11'BAD PARM = '\nBADTTRMS DC    CL11'BAD TTR    '\nNOMATCH  DC    CL16'NO MATCHES FOUND'\nNOTSCHED DC    CL21'  JOB NOT SCHEDULED  '\n         LTORG\n*\nDIRALIGN DS    0F\nDIRECTRY DC    CL256' '\n*\n*\nENDBUF   EQU   BUFAREA+4000\nBUFALIGN DS    0F\nBUFAREA  DS    6200C\n*\nMBRENTRY DSECT\nMBRNAME  DS    CL8\nMBRTTR   DS    CL3\nMBRCOUNT DS    CL1\nMBRBGNDT DS    CL6\nMBRENDTE DS    CL6\n*\nARCHVREC DSECT\nARCRUNYY DS    CL2\nARCRUNMM DS    CL2\nARCRUNDD DS    CL2\nARCJNAME DS    CL8\nARCMODNM DS    CL8\nARCRUNST DS    CL5\nARCRUNEN DS    CL5\nARCUID   DS    CL7\n         DS    CL1\nARCJNUMB EQU   ARCMODNM+4\n*\n         DCBD DSORG=PO\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPS4319L": {"ttr": 5133, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x82\\x18\\x0f\\x00\\x82\\x19?\\x13I\\x00\\x07\\x00\\x07\\x00\\x02\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1982-06-29T00:00:00", "modifydate": "1982-07-12T13:49:00", "lines": 7, "newlines": 7, "modlines": 2, "user": "SHSWRPD"}, "text": "//OPS4319G JOB (@SYSUID,@SYSACCT),'ARCHIVE DIR. INQUIRY',CLASS=A\n/*JOBPARM   I,W,Q=T,LINES=3,T=3\n//CL        EXEC    ASMHCL2\n//ASM.SYSIN  DD  DSN=SHSW.LIBSPOOL.DATA(OPS4319G),DISP=SHR\n//LKED.SYSLMOD DD DSN=SHSWRPD.NCBPROG,DISP=SHR,VOL=SER=F031S2,UNIT=3350\n//LKED.SYSIN  DD  *\n  NAME OPS4319G(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPS4320G": {"ttr": 5135, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00\\x00\\x00\\x82\\x17\\x9f\\x00\\x83 \\x9f\\x18\\x03\\x01+\\x01\\x16\\x01+\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "1982-06-28T00:00:00", "modifydate": "1983-07-28T18:03:00", "lines": 299, "newlines": 278, "modlines": 299, "user": "SYSXKMB"}, "text": "000010 IDENTIFICATION DIVISION.\n000020   PROGRAM-ID.    OPS4320G.\n000030   INSTALLATION.  HOOKER CHEMICAL AND PLASTICS COMPANY.\n000040 DATE-COMPILED.   DATE.\n000050 REMARKS. WRITTEN BY :\n000060                             ROBERT P DZIALAK\n000070                             HOOKER CHEMICAL CENTER\n000080                             360 RAINBOW BLVD. SOUTH\n000090                             NIAGARA FALLS , NEW YORK 14303\n000100                             (716) 286-3251\n000110 ENVIRONMENT DIVISION.\n000120  CONFIGURATION SECTION.\n000130    SOURCE-COMPUTER. IBM-370.\n000140    OBJECT-COMPUTER. IBM-370.\n000150  INPUT-OUTPUT SECTION.\n000160    FILE-CONTROL.\n000170       SELECT DLMCARD               ASSIGN TO UT-S-DLMCARD.\n000180       SELECT COPYCARD              ASSIGN TO UT-S-COPYCARD.\n000190       SELECT MCDCODE               ASSIGN TO UT-S-MCDCODE.\n000200 DATA DIVISION.\n000210  FILE SECTION.\n000220   FD  DLMCARD\n000230       BLOCK CONTAINS 0 RECORDS\n000240       LABEL RECORDS ARE STANDARD.\n000250   01  DLMCARD-REC                PIC X(80).\n000260   FD  COPYCARD\n000270       BLOCK CONTAINS 0 RECORDS\n000280       LABEL RECORDS ARE STANDARD.\n000290   01  COPYCARD-REC               PIC X(80).\n000300   FD  MCDCODE\n000310       BLOCK CONTAINS 0 RECORDS\n000320       LABEL RECORDS ARE STANDARD.\n000330   01  MCDCODE-REC.\n000340       02 MCD-BASE                PIC 9999.\n000350       02 MCD-BASE-X REDEFINES MCD-BASE PIC XXXX.\n000360       02 FILLER                  PIC X(76).\n000370  WORKING-STORAGE SECTION.\n000380   77  MO-CTR                     PIC S9(9) COMP VALUE +0.\n000390   77  MOD-COUNT                  PIC S9(9) COMP VALUE +0.\n000400   77  DATE-CONVERTED             PIC S9(9) COMP VALUE +0.\n000410   77  IDLE-DAYS                  PIC S9(9) COMP VALUE +0.\n000420   77  LEAPTEST                   PIC S9(9) COMP VALUE +0.\n000430   77  LEAP-RMNDR                 PIC S9(9) COMP VALUE +0.\n000440   77  HOURS-ONLINE               PIC S9(9) COMP VALUE +0.\n000450   77  JOB-DAYS                   PIC S9(9) COMP VALUE +0.\n000460   77  JOB-HOUR                   PIC S9(9) COMP VALUE +0.\n000470   77  CURRENT-DAYS               PIC S9(9) COMP VALUE +0.\n000480   77  CURRENT-HOUR               PIC S9(9) COMP VALUE +0.\n000490   77  RUN-HOUR                   PIC S9(9) COMP VALUE +0.\n000500   77  BASE-MCD-CODE              PIC S9(9) COMP VALUE +0.\n000510   01  OPN-RETURN-CODE            PIC  X       VALUE SPACE.\n000520   01  OPN-AREA                   PIC  X(16)   VALUE SPACE.\n000530   01  MOD-NAME                   PIC  X(8)    VALUE SPACE.\n000540   01  MOD-RETURN-CODE            PIC  X       VALUE SPACE.\n000550   01  MOD-AREA.\n000560       02 MOD-PASSWORD            PIC X(04).\n000570       02 DATE-ADDED              PIC X(06).\n000580       02 LAST-UP-DATE.\n000590          03 LST-UP-MM            PIC 99.\n000600          03 LST-UP-DD            PIC 99.\n000610          03 LST-UP-YY            PIC 99.\n000620       02 LAST-UP-HH              PIC 99.\n000630       02 LAST-UP-MM              PIC 99.\n000640       02 FILLER                  PIC XXX.\n000650       02 JOBNAME                 PIC X(8).\n000660       02 USERID                  PIC X(7).\n000670       02 FILLER                  PIC X(8).\n000680       02 MODLNAME                PIC X(8).\n000690       02 JUL-RUN-DATE            PIC X(5).\n000700       02 RUN-DATE REDEFINES JUL-RUN-DATE.\n000710          03 JUL-RUN-YY           PIC 99.\n000720          03 JUL-RUN-DDD          PIC 999.\n000730       02 RUN-STR-HH              PIC 99.\n000740       02 RUN-STR-MM              PIC 99.\n000750       02 RUN-END-HH              PIC 99.\n000760       02 RUN-END-MM              PIC 99.\n000770       02 FILLER                  PIC X(21).\n000780       02 LAST-ACCESS             PIC X(06).\n000790       02 FILLER                  PIC X(06).\n000800   01  WS-DATE.\n000810       02 MM                      PIC 99.\n000820       02 DD                      PIC 99.\n000830       02 YY                      PIC 99.\n000840   01  WS-GREGORIAN-DATE.\n000850       02 GREG-MM                 PIC 99.\n000860       02 FILLER                  PIC X.\n000870       02 GREG-DD                 PIC 99.\n000880       02 FILLER                  PIC X.\n000890       02 GREG-YY                 PIC 99.\n000900   01  CUR-GREG-MM-DD.\n000910       02 CUR-GREG-MM                 PIC 99.\n000920       02 CUR-GREG-DD                 PIC 99.\n000930   01  MCD-CODE-FACTOR REDEFINES CUR-GREG-MM-DD PIC 9999.\n000940   01  WS-CUR-JULIAN-DATE.\n000950       02 CUR-JUL-YY                  PIC 99.\n000960       02 CUR-JUL-DDD                 PIC 999.\n000970   01  WS-CUR-TIME.\n000980       02 CUR-HH                      PIC 99.\n000990       02 CUR-MM                      PIC 99.\n001000       02 FILLER                      PIC X(4).\n001010   01  CALENDAR-TABLE.\n001020       02 FILLER                  PIC S9999  COMP VALUE +31.\n001030       02 FEB                     PIC S9999  COMP VALUE +28.\n001040       02 FILLER                  PIC S9999  COMP VALUE +31.\n001050       02 FILLER                  PIC S9999  COMP VALUE +30.\n001060       02 FILLER                  PIC S9999  COMP VALUE +31.\n001070       02 FILLER                  PIC S9999  COMP VALUE +30.\n001080       02 FILLER                  PIC S9999  COMP VALUE +31.\n001090\n001100       02 FILLER                  PIC S9999  COMP VALUE +31.\n001110       02 FILLER                  PIC S9999  COMP VALUE +30.\n001120       02 FILLER                  PIC S9999  COMP VALUE +31.\n001130       02 FILLER                  PIC S9999  COMP VALUE +30.\n001140       02 FILLER                  PIC S9999  COMP VALUE +31.\n001150   01  CALENDAR-DAYS REDEFINES CALENDAR-TABLE.\n001160       02 MTH-DAY                 PIC S9999  COMP OCCURS 12 TIMES.\n001170   01  OPT-CARD.\n001180       02 FILLER                  PIC X(04)      VALUE '-OPT'.\n001190       02 FILLER                  PIC X(76)      VALUE SPACES.\n001200   01  UTL-CARD.\n001210       02 FILLER                  PIC X(12) VALUE '-OPT UTILITY'.\n001220       02 FILLER                  PIC X(68)      VALUE SPACES.\n001230   01  MCD-CARD.\n001240       02 FILLER                  PIC X(05)      VALUE '-MCD '.\n001250       02 MCD-CD                  PIC 9999.\n001260       02 FILLER                  PIC X(71)      VALUE SPACES.\n001270   01  NOPC-CARD.\n001280       02 FILLER                  PIC X(09)    VALUE '-OPT NOPC'.\n001290       02 FILLER                  PIC X(71)      VALUE SPACES.\n001300   01  DLM-CARD.\n001310       02 FILLER                  PIC X(05)      VALUE '-DLM '.\n001320       02 DLM-NAME                PIC X(8).\n001330       02 FILLER                  PIC X          VALUE ','.\n001340       02 DLM-PASSWORD            PIC X(8).\n001350       02 FILLER                  PIC X(58)      VALUE SPACES.\n001360   01  COPY-CARD.\n001370       02 FILLER                  PIC X(06)      VALUE '-COPY '.\n001380       02 COPY-NAME               PIC X(8).\n001390       02 FILLER                  PIC X(12) VALUE ',STATUS=TEST'.\n001400       02 FILLER                  PIC X(54)      VALUE SPACES.\n001410   01  END-CARD.\n001420       02 FILLER                  PIC X(04)      VALUE '-END'.\n001430       02 FILLER                  PIC X(76)      VALUE SPACES.\n001440 LINKAGE SECTION.\n001450   01  CUT-OFF.\n001460       02 PARM-LENGTH             PIC S9(4) COMP.\n001470       02 PARMS.\n001480           03 HOUR-WORD               PIC X(6).\n001490           03 CUT-OFF-HOURS           PIC 999.\n001500           03 MOD-WORD                PIC X(9).\n001510           03 CUT-OFF-MODULES         PIC 999.\n001520 PROCEDURE DIVISION USING CUT-OFF.\n001530     IF PARM-LENGTH = 21\n001540        IF HOUR-WORD = 'HOURS='\n001550           IF MOD-WORD = ',MODULES='\n001560              IF CUT-OFF-HOURS NUMERIC\n001570                  IF CUT-OFF-MODULES NUMERIC\n001580                      GO TO PARMS-OK.\n001590     DISPLAY 'INPUT PARAMETERS TO PROGRAM OPS4320G INVALID'\n001600     DISPLAY 'PARM LENGTH =' PARM-LENGTH.\n001610     DISPLAY 'PARAMETERS =' PARMS.\n001620     MOVE 1 TO CUT-OFF-MODULES.\n001630     GO TO STOP-RUN.\n001640 PARMS-OK.\n001650     DISPLAY 'CUT OFF HOURS =' CUT-OFF-HOURS.\n001660     DISPLAY 'CUT OFF MODULES =' CUT-OFF-MODULES.\n001670     ACCEPT WS-CUR-JULIAN-DATE FROM DAY.\n001680     DISPLAY 'CURRENT JULIAN DATE = ' WS-CUR-JULIAN-DATE.\n001690     ACCEPT WS-CUR-TIME FROM TIME.\n001700     DISPLAY 'CURRENT TIME (HHMMSSTT) = ' WS-CUR-TIME.\n001710*\n001720     OPEN INPUT MCDCODE.\n001730     READ MCDCODE AT END\n001740         MOVE 0 TO MCD-CD\n001750         GO TO END-MCD.\n001760     IF MCD-BASE-X = 'NONE'\n001770         MOVE 0 TO MCD-CD\n001780         GO TO END-MCD.\n001790     IF MCD-BASE NOT NUMERIC\n001800         DISPLAY 'MCD BASE NUMBER INVALID=' MCD-BASE\n001810         DISPLAY 'MUST BE NUMERIC (4 NUMBERS) OR THE WORD NONE'\n001820         CLOSE MCDCODE\n001830         GO TO STOP-RUN.\n001840     MOVE MCD-BASE TO BASE-MCD-CODE.\n001850     MOVE CURRENT-DATE TO WS-GREGORIAN-DATE.\n001860     MOVE GREG-MM TO CUR-GREG-MM.\n001870     MOVE GREG-DD TO CUR-GREG-DD.\n001880     COMPUTE MCD-CD = BASE-MCD-CODE + MCD-CODE-FACTOR.\n001890 END-MCD.\n001900     CLOSE MCDCODE.\n001910*\n001920     DIVIDE CUR-JUL-YY BY 4 GIVING LEAPTEST REMAINDER LEAP-RMNDR.\n001930     IF LEAP-RMNDR = 0\n001940         MOVE 29 TO FEB.\n001950*\n001960     IF CUR-MM GREATER 29\n001970         ADD 1 TO CUR-HH.\n001980     COMPUTE CURRENT-DAYS = (CUR-JUL-YY * 365) +\n001990                            (CUR-JUL-YY / 4) + CUR-JUL-DDD - 1.\n002000     COMPUTE CURRENT-HOUR = CURRENT-DAYS * 24 + CUR-HH\n002010     DISPLAY 'CURRENT-HOUR = ' CURRENT-HOUR.\n002020*\n002030     OPEN OUTPUT COPYCARD.\n002040     OPEN OUTPUT DLMCARD.\n002050*\n002060     WRITE COPYCARD-REC FROM UTL-CARD.\n002070     IF MCD-CD NOT = 0\n002080         WRITE COPYCARD-REC FROM MCD-CARD.\n002090     WRITE COPYCARD-REC FROM NOPC-CARD.\n002100*\n002110     WRITE DLMCARD-REC FROM OPT-CARD.\n002120     IF MCD-CD NOT = 0\n002130         WRITE DLMCARD-REC FROM MCD-CARD.\n002140     WRITE DLMCARD-REC FROM NOPC-CARD.\n002150*\n002160     CALL 'MASTOPN' USING OPN-AREA, OPN-RETURN-CODE.\n002170     IF OPN-RETURN-CODE NOT = '0'\n002180          DISPLAY 'LIBRARIAN INPUT FILE COULD NOT BE OPENED'\n002190          DISPLAY 'OPEN RETURN CODE =' OPN-RETURN-CODE\n002200          GO TO END-RUN.\n002210*\n002220 GET-NEXT-MODULE.\n002230     MOVE SPACES TO MOD-NAME.\n002240*\n002250     CALL 'MASTMOD' USING MOD-NAME, MOD-RETURN-CODE, MOD-AREA.\n002260     IF MOD-RETURN-CODE = '9' OR '2'\n002270          DISPLAY 'LIBRARIAN INPUT FILE MODULE LOCATE PROBLEM'\n002280          DISPLAY 'READ RETURN CODE =' MOD-RETURN-CODE\n002290          MOVE 0 TO MOD-COUNT\n002300          GO TO END-RUN.\n002310     IF MOD-RETURN-CODE = '1'\n002320          GO TO END-RUN.\n002330*\n002340 USE-ADD-DATE-TIME.\n002350     MOVE LAST-UP-DATE TO WS-DATE.\n002360     PERFORM CONVERT-DATE THRU CONVERT-EXIT.\n002370     MOVE DATE-CONVERTED TO JOB-DAYS.\n002380*\n002390     IF LAST-UP-MM GREATER 29\n002400         ADD 1 TO LAST-UP-HH.\n002410     COMPUTE JOB-HOUR = JOB-DAYS * 24 + LAST-UP-HH.\n002420     COMPUTE HOURS-ONLINE = CURRENT-HOUR - JOB-HOUR.\n002430*\n002440     IF JUL-RUN-DATE = 'YYDDD'\n002450          DISPLAY 'JOB FOLLOWING NOT SCHEDULED'.\n002460     IF LAST-UP-MM GREATER 29\n002470         SUBTRACT 1 FROM LAST-UP-HH.\n002480     DISPLAY 'JOB-HOUR=' JOB-HOUR\n002490             '  HOURS-ONLINE=' HOURS-ONLINE\n002500             '  MODULE NAME=' MODLNAME\n002510             '  JOBNAME=' JOBNAME\n002520             '  ADD DATE=' LAST-UP-DATE\n002530             '  ADD TIME=' LAST-UP-HH '.' LAST-UP-MM.\n002540*\n002550     IF HOURS-ONLINE GREATER CUT-OFF-HOURS\n002560         GO TO RITE-DLM-COPY\n002570     ELSE\n002580         GO TO GET-NEXT-MODULE.\n002590*\n002600 RITE-DLM-COPY.\n002610     IF MOD-COUNT GREATER 494\n002620      DISPLAY '** MAXIMUM MODULES TO BE TAKEN OFFLINE REACHED **'\n002630      DISPLAY '**   495 MODULES IS THE LIMIT IN ANY ONE RUN   **'\n002640        GO TO END-RUN.\n002650*\n002660     ADD 1 TO MOD-COUNT.\n002670*\n002680     MOVE MOD-NAME TO COPY-NAME.\n002690     WRITE COPYCARD-REC FROM COPY-CARD.\n002700*\n002710     MOVE MOD-NAME TO DLM-NAME.\n002720     MOVE MOD-PASSWORD TO DLM-PASSWORD.\n002730     WRITE DLMCARD-REC FROM DLM-CARD.\n002740*\n002750     GO TO GET-NEXT-MODULE.\n002760*\n002770 CONVERT-DATE.\n002780     COMPUTE DATE-CONVERTED = (365 * YY) + (YY / 4) + DD - 1.\n002790     MOVE 0 TO MO-CTR.\n002800 INCR-MO-CTR.\n002810     ADD 1 TO MO-CTR.\n002820     IF MO-CTR LESS MM\n002830         ADD MTH-DAY (MO-CTR) TO DATE-CONVERTED\n002840         GO TO INCR-MO-CTR.\n002850 CONVERT-EXIT. EXIT.\n002860*\n002870 END-RUN.\n002880     WRITE DLMCARD-REC FROM END-CARD.\n002890     WRITE COPYCARD-REC FROM END-CARD.\n002900     CLOSE DLMCARD.\n002910     CLOSE COPYCARD.\n002920 STOP-RUN.\n002930     IF MOD-COUNT GREATER CUT-OFF-MODULES\n002940         MOVE +0 TO RETURN-CODE\n002950     ELSE\n002960         MOVE +999 TO RETURN-CODE.\n002970     DISPLAY 'MODULES TO BE TAKEN OFFLINE = ' MOD-COUNT.\n002980*\n002990     STOP RUN.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPS4320L": {"ttr": 5382, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x82\\x18\\x0f\\x00\\x83$?\\x147\\x00\\x0b\\x00\\x0b\\x00\\x08\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1982-06-29T00:00:00", "modifydate": "1983-08-31T14:37:00", "lines": 11, "newlines": 11, "modlines": 8, "user": "SYSXKMB"}, "text": "//OPS4320G JOB (@SYSUID,@SYSACCT),'MODULE OFFLINE',CLASS=A\n/*JOBPARM   I,W,T=3,Q=T,LINES=3\n//CLG       EXEC    COB4CL,SUBR=NORES\n//COB.SYSIN  DD  DSN=SYSXKMB.LIB.ASM(OPS4320G),DISP=SHR\n//LKED.SYSLIB  DD DSN=SYS1.OXYLIB,DISP=SHR\n//             DD DSN=SYS1.COBLIB,DISP=SHR\n//LKED.SYSLMOD DD DSN=SYSXKMB.LIB.LOAD,DISP=SHR,UNIT=3350\n//LKED.SYSIN   DD *\n  INCLUDE SYSLIB(TSOFAIR)                                      06/09/83\n  ENTRY  OPS4320G                                              06/09/83\n  NAME OPS4320G(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPS4321G": {"ttr": 5384, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00\\x00\\x00\\x82\\x14o\\x00\\x84\\x01\\x8f\\x143\\x01S\\x00%\\x01S\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "1982-05-26T00:00:00", "modifydate": "1984-01-18T14:33:00", "lines": 339, "newlines": 37, "modlines": 339, "user": "SYSXKMB"}, "text": "LIBUP    CSECT\n*/****************************************************************** /*\n*/*                                                                  */\n*/*       WRITTEN BY :             DONALD HARRIS                     */\n*/*                                OCCIDENTAL CHEMICAL CORPORATION   */\n*/*                                360 RAINBOW BLVD. SOUTH           */\n*/*                                NIAGARA FALLS , NEW YORK 14303    */\n*/*                                (716) 286-3252                    */\n*/*                                (716) 286-3252                    */\n*/*                                                                  */\n*/*      12/10/83 SJB              SKIP BAD MEMBER CREATED BY        */\n*/*                                MASTER FILE BEING FULL            */\n*/*                                                                  */\n*/****************************************************************** /*\n         PRINT NOGEN\n         STM   14,12,12(13)\n         BALR  10,0\n         USING *,10\nHERE     B     BEGIN\n         DC    CL8'LIBUP'\nSAVE     DS    18F\nBEGIN    EQU   *\n         ST    13,SAVE+4\n         LA    7,SAVE\n         ST    7,8(13)\n         LA    13,SAVE\n         EJECT\n         L     1,0(1)                        ----> TO PARAMTER LIST\n*\n         LH    3,0(1)                      GET LENGTH OF PARM INPUT\n         CH    3,=H'1'                     IS LENGTH = 1\n         BE    CKRUNTYP                    CHECK RUN TYPE\n         CLI   2(1),C'W'                     WEEKLY RUN ?\n         BNE   CKRUNTYP                    CHECK RUN TYPE\n         CH    3,=H'7'                     IS LENGTH = 7\n         BNE   CKRUNTYP                    CHK IF 6 CHAR. DATE PARM.\n         MVC   STOWNEWN+2(6),3(1)          SAVE WEEKLY MEMBER NAME\n*\nCKRUNTYP CLI   2(1),C'W'                     WEEKLY RUN ?\n         BNE   LIBRDJF                       NO\n         WTO   'WEEKLY RUN EXECUTING'        DOC TO OPERATOR\n         OI    WEEKSW,X'01'                  WEEKLY RUN INDICATOR\n         OPEN  (DIRECTA,(UPDAT))             OPEN DIRECTORY TO\n         STOW  DIRECTA,STOWLST3,D            DELETE #DAILY MEMBER\n         CLOSE (DIRECTA)                  CLOSE DIRECTORY\nLIBRDJF  RDJFCB MF=(E,EX1A)               READ TAPE JFCB\n         L     4,=A(MASTER)               OPEN MASTER INPUT\n         OPEN  ((4),(INPUT))\n         L     3,=A(LIBJFCB)\n         USING JFCB,3\n         MVC   DIRDSN(40),JFCBDSNM        MOVE DSN TO HEADER AREA\n         MVC   DIROUT(40),LABEL1          INIT FIRST RECORD TO ZEROES\n         DROP  3\n         LA    1,SORTLST                  ---> TO SORT PARAMETER LIST\n         LINK  EP=SORT                    GO SORT\n         B     LIBUP002                   GOTO END OF PROGRAM\n         CNOP  0,8\nLIBE15   EQU   *                          E15 SORT EXIT\n         USING *,15                       PASSES RECORD FROM MASTER\n         STM   14,12,LIBE15SV             TO SORT\n         B     E15GET                     SAVE REGS\nLIBE15SV DC    18F'0'\nLIBSVE15 DC    F'0'\n         DS    0H\nE15GET   EQU   *\n         LR    5,15                       ESTABLISH ADDRESSABILITY\n         LA    4,DIROUT                   POINTER TO RECORD IN REG 13\n         ST    4,LIBE15SV+12\n         DROP  15\n         USING LIBE15,5\n         TM    LABELSW,X'01'              CHECK FOR FIRST TIME THRU\n         BO    GET15                      NO GET RECORD PASS TO SORT\n         OI    LABELSW,X'01'              YES PASS ZERO RECORD TO SORT\n         B     GET15P\nGET15    GET   MASTER,MASTIN              GET A RECORD\n         LA    4,MASTIN                   SET UP AND MOVE DATA\n         USING MASTDS,4\n         MVC   DIRJNM(8),MASJNM\n         CLC   GET15YY(2),MASJD\n         BE    GET15CZ\n         CLC   =CL9' ',MASJD       IS THIS A BAD MEMBER        12/10/83\n         BE    GET15               YES, THEN SKIP              12/10/83\n         TM    MASJNO,X'F0'\n         BNO   GET15\n         MVC   YRUNPACK+3(5),MASJD     GET JULIAN RUN DATE\n         B     GET15C\nGET15CZ  MVC   DIRJD(2),MASYY\n         MVC   DIRJD+2(2),MASMM\n         MVC   DIRJD+4(2),MASDD\n         B     GET15N\nGET15C   BAL   6,CNVRTDTE                  CONVERT JULIAN TO GREGORIAN\n         MVC   DIRJD(6),GREGDTE            MOVE REST OF FIELDS\nGET15N   MVC   DIRSTH(2),MASSTH\n         MVC   DIRSTM(2),MASSTM\n         MVC   DIRPTH(2),MASPTH\n         MVC   DIRPTM(2),MASPTM\n         MVC   DIRMID(8),MASMID\n         MVC   DIRUID(7),MASUID\n         MVC   DIROUT(40),DIROUTD\n         DROP  4\n         CLC   GETDTH(6),DIRJD              CHECK FOR HIGHEST DATE\n         BH    GET15CKL                     NO CHECK FOR LOWEST\n         MVC   GETDTH(6),DIRJD              YES SAVE IT FOR STOW USER\nGET15CKL CLC   GETDTL(6),DIRJD               DATA\n         BL    GET15P                        LOWEST ? NO DON'T SAVE\n         MVC   GETDTL(6),DIRJD              YES SAVE IT\nGET15P   LM    14,12,LIBE15SV               RESTORE REGS\n         LA    15,12                        INSERT RECORD RC\n         BR    14                           GET BACK\nLIBUPCLS EQU   *\n         LM    14,12,LIBE15SV         RESTORE REGS\n         LA    15,8                   DON'T EVER RETURN TO E15 RC\n         BR    14\n         EJECT\nCNVRTDTE PACK YRPACK,YRUNPACK          PACK IT\n         L    1,YRPACK                PUT IT IN R1\n*\n         SR   2,2\n         PACK DATEP+6(2),YRUNPACK+3(2)  CHECK IF LEAP YEAR\n         CVB  3,DATEP                   CONVERT YR TO BINARY\n         D    2,DIV4                    DIVIDE BY 4\n         LTR  2,2                       CK FOR REMANDER\n         BZ   CHANGFEB                  NO THEN LEAP\n         B    FINDDAY\nCHANGFEB MVI  FEB,X'1D'\n*\nFINDDAY  SLA   1,16                    REMOVE YEAR DDDF0000\n         SRA   1,16                    MOVE BACK 0000DDDF\n         XC    DUBLWD,DUBLWD            CLEAR DUBLWD\n         ST    1,DUBLWD+4\n         CVB   1,DUBLWD                PACKED TO BINARY\n         LA    7,1                     SET MONTH CTR TO 1\n         LA    8,CALENDAR\n         SR    9,9\nGETDYMTH IC    9,0(8)                 INSERT DAYS IN MONTH IN REG 9\n         CR    1,9                    DAY OF YEAR - DAYS IN MONTH\n         BNH   GOTDYMTH\n         SR    1,9                    SUBTRACT MONTHS DAYS FROM R1\n         LA    7,1(7)                 INCREMENT TO NEXT MONTH\n         LA    8,1(8)                 INCREMENT TO NEXT MONTH\n         B     GETDYMTH\nGOTDYMTH BAL   11,CNVRTX\n         MVC   GREGDTE+2(2),DWORD+2     MOVE MONTH\n         LR    7,1\n         BAL   11,CNVRTX\n         MVC   GREGDTE+4(2),DWORD+2     MOVE DAY\n         MVC   GREGDTE+0(2),YRUNPACK+3  MOVE YEAR\nXITDTECV BR    6\n*\nCNVRTX   CVD   7,DWORD\n         UNPK  DWORD(4),DWORD+5(3)\n         OI    DWORD+3,X'F0'\n         BR    11\n*\nGREGDTE  DC    D'0'\nDATEP    DS    D\nDIV4     DC    X'00000004'\nYRUNPACK DC    X'F0F0F0F0F0F0F0F0'\nDUBLWD   DC    D'0'\nDWORD    DC    D'0'\nDBLTIME  DC    D'0'\nYRPACK   DC    F'0'\nFULLTIME DC    F'0'\nJULDATE  DC    F'0'\nCALENDAR DC    X'1F'            NUMBER OF DAYS IN JAN.\nFEB      DC    X'1C'            NUMBER OF DAYS IN FEB.\n         DC    X'1F'            NUMBER OF DAYS IN MAR.\n         DC    X'1E'            NUMBER OF DAYS IN APR.\n         DC    X'1F'            NUMBER OF DAYS IN MAY\n         DC    X'1E'            NUMBER OF DAYS IN JUNE\n         DC    X'1F'            NUMBER OF DAYS IN JULY\n         DC    X'1F'            NUMBER OF DAYS IN AUG.\n         DC    X'1E'            NUMBER OF DAYS IN SEPT\n         DC    X'1F'            NUMBER OF DAYS IN OCT.\n         DC    X'1E'            NUMBER OF DAYS IN NOV.\n         DC    X'1F'            NUMBER OF DAYS IN DEC.\n*\nGET15Z   DC    XL5'F0F0F0F0F0'\nGET15YY  DC    CL2'YY'\nGETDTH   DC    CL6'000000'\nGETDTL   DC    CL6'999999'\n         EJECT\n         SPACE\nLABELSW  DC    X'00'\nLABEL1   DC    XL40'00'\nLIBREC   DC    F'0'\n         SPACE\nMASTIN   DS    CL124\n         SPACE\n         DS    0F\nDIROUT   DS    CL40\nDIROUTD  DS    0CL40\nDIRJD    DC    CL6' '\nDIRJNM   DC    CL8' '\nDIRMID   DC    CL8' '\nDIRSTH   DC    CL2' '\n         DC    CL1'.'\nDIRSTM   DC    CL2' '\nDIRPTH   DC    CL2' '\n         DC    CL1'.'\nDIRPTM   DC    CL2' '\nDIRUID   DC    CL7' '\n         DC    C' '\n         SPACE\n         DS    0F\n         EJECT\n         SPACE\n         DSECT\nMASTDS   DS    0CL133\n         DS    CL1\nMASMID   DS    0CL8\n         DS    CL4\nMASJNO   DS    CL4\n         DS    CL16\nMASJD    DS    CL5\nMASSTH   DS    CL2\nMASSTM   DS    CL2\nMASPTH   DS    CL2\nMASPTM   DS    CL2\n         DS    CL10\nMASMM    DS    CL2\n         DS    CL1\nMASDD    DS    CL2\n         DS    CL1\nMASYY    DS    CL2\n         DS    CL50\nMASJNM   DS    CL8\nMASUID   DS    CL7\n         DS    CL13\n         DROP  5\nJFCB     DSECT\n         PRINT GEN\n         IEFJFCBN LIST=YES\n         PRINT NOGEN\n         EJECT\nLIBUP    CSECT\n         DS    0F\nSORTLST  DC    X'80'\n         DC    AL3(SORTALST)\n         DC    X'0000'\nSORTALST DC    X'0020'\n         DC    A(SORTCD)\n         DC    A(STCDED)\n         DC    A(RCDCD)\n         DC    A(RDCDED)\n         DC    A(LIBE15)\n         DC    A(0)\n         DC    X'00'\n         DC    X'020000'\n         DC    X'03'\n         DC    AL3(MSGNAME)\nSORTCD   DC    C'SORT  FIELDS=(1,6,CH,A,7,8,CH,A,18,4,CH,A)'\nSTCDED   DC    C' '\nRCDCD    DC    C'RECORD  LENGTH=(40,40,40),TYPE=F'\nRDCDED   DC    C' '\nMSGNAME  DC    CL8'MESSAGES'\n         SPACE 3\nEX1A     RDJFCB (TAPE),MF=L\nLIBJFCB  DS    176C\n         EJECT\n         CNOP  0,8\nLIBUP002 EQU   *\n         OPEN  (DIRECT,(UPDAT))        OPEN DIRECT FOR HEADING UPDATE\n         LA    2,DECB                  READ FIRST RECORD\n         READ  (2),SF,MF=E\n         CHECK (2)                     WAIT\n         MVC   DIRRDIN(40),DIRLABEL    REPLACE ZEROES WITH HEADING\n         WRITE (2),SF,MF=E\n         CHECK (2)                     WAIT\n         CLOSE (DIRECT)                CLOSE\n         CLOSE (MASTER)\n         MVC   STOWFD(6),GETDTL        MOVE LOW DATE TO USER DATA STOW\n         MVC   STOWLD(6),GETDTH        MOVE HIGH DATE \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n         OPEN  (DIRECTA,(UPDAT))\n         STOW  DIRECTA,STOWLST1,R       REPLACE USER DATA\n         TM    WEEKSW,X'01'            WEEKLY RUN ????\n         BNO   LIBUPEND                NO END MEMBER IS #DAILY\n         CLC   STOWNEWN+2(6),=C'      ' MEMBER DATE IN THRU PARM ?\n         BNE   STOWIT                   STOW WITH PARM DATE\n         TIME  DEC                     USE CURRENT GREG. DATE FOR NAME\n         ST    1,JDAYSVE               NAME TO INCLUDE DATE\n         UNPK  JDAYUNPK(7),JDAYSVE+1    GET THE DATE\n         MVC   YRUNPACK+3(5),JDAYUNPK   SET FRO CONVERT TO GREG\n         LA    5,LIBE15                 ESTABLISH ADDRESSABILITY\n         BAL   6,CNVRTDTE               CONVERT JULIAN TO GREORIAN\n         MVC   STOWNEWN+2(6),GREGDTE    MOVE GREG DATE TO STOW LIST\nSTOWIT   STOW  DIRECTA,STOWLST2,C       STOW IT\nLIBUPEND EQU   *\n         CLOSE (DIRECTA)                CLOSE DIRECTORY\n         L     13,SAVE+4                RESTORE REGS\n         LM    14,12,12(13)\n         LA    15,0                     RC = 0\n         BR    14                       BYE\n         SPACE 3\n         DS    F\nMASTEXIT DC    X'11'                     DCB ABEND\n         DC    AL3(MASTABEN)             ABEND EXIT ADDRESS\n         DC    X'87'                     LAST IN LIST\n         DC    AL3(LIBJFCB)              ---> JFCB OUTPUT AREA\nMASTABEN EQU   *\n         USING *,15                      ADDRESSABILITY\n         MVI   3(1),X'04'                IGNORE THE ABEND\n         BR    14                        GET BACK\n         DROP  15\n         SPACE\n         READ  DECB,SF,DIRECT,DIRRDIN,MF=L\n         SPACE 3\nWEEKSW   DC    X'00'\nJDAYSVE  DC    F'0'\nJDAYUNPK DS    XL10\n         DS    0F\nDIRLABEL DS    0CL40\nDIRDSN   DC    CL40' '\n         SPACE 3\n         DS    0F\nSTOWLST1 DS    0CL24\nSTOWNAME DC    CL8'#DAILY  '\nSTOWTTR  DC    XL3'00'\n         DC    XL1'06'\nSTOWFD   DC    CL6'YYMMDD'\nSTOWLD   DC    CL6'YYMMDD'\n         SPACE\n         DS    0F\nSTOWLST2 DS    0CL16\nSTOWNM   DC    CL8'#DAILY  '\nSTOWNEWN DC    CL8'$W      '\n         DS    0F\nSTOWLST3 DS    0CL8\nSTOWNMD  DC    CL8'#DAILY  '\nMASTER   DCB   MACRF=(GM),DSORG=PS,EODAD=LIBUPCLS,DDNAME=MASTDD\nDIRECT   DCB   MACRF=(R,W),DSORG=PS,DDNAME=DIRDD,RECFM=FB\n         SPACE\nDIRECTA  DCB   MACRF=(R,W),DSORG=PO,DDNAME=DIRDDA\n         SPACE\nTAPE     DCB   MACRF=(R,W),DSORG=PS,DDNAME=TAPEDD,EXLST=MASTEXIT\n         SPACE\n         LTORG\nDIRRDIN  DS    CL6200\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OPS4321H": {"ttr": 5633, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x834O\\x00\\x834O\\x18D\\x01V\\x01V\\x00\\x00\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1983-12-10T00:00:00", "modifydate": "1983-12-10T18:44:00", "lines": 342, "newlines": 342, "modlines": 0, "user": "SYSXKMB"}, "text": "LIBUP    CSECT\n*/****************************************************************** /*\n*/*                                                                  */\n*/*       WRITTEN BY :             DONALD HARRIS                     */\n*/*                                OCCIDENTAL CHEMICAL CORPORATION   */\n*/*                                360 RAINBOW BLVD. SOUTH           */\n*/*                                NIAGARA FALLS , NEW YORK 14303    */\n*/*                                (716) 286-3252                    */\n*/*                                                                  */\n*/*      12/10/83 SJB              SKIP BAD MEMBER CREATED BY        */\n*/*                                MASTER FILE BEING FULL            */\n*/*                                                                  */\n*/****************************************************************** /*\n         PRINT NOGEN\n         STM   14,12,12(13)\n         BALR  10,0\n         USING *,10\nHERE     B     BEGIN\n         DC    CL8'LIBUP'\nSAVE     DS    18F\nBEGIN    EQU   *\n         ST    13,SAVE+4\n         LA    7,SAVE\n         ST    7,8(13)\n         LA    13,SAVE\n         EJECT\n         L     1,0(1)                        ----> TO PARAMTER LIST\n*\n         LH    3,0(1)                      GET LENGTH OF PARM INPUT\n         CH    3,=H'1'                     IS LENGTH = 1\n         BE    CKRUNTYP                    CHECK RUN TYPE\n         CLI   2(1),C'W'                     WEEKLY RUN ?\n         BNE   CKRUNTYP                    CHECK RUN TYPE\n         CH    3,=H'7'                     IS LENGTH = 7\n         BNE   CKRUNTYP                    CHK IF 6 CHAR. DATE PARM.\n         MVC   STOWNEWN+2(6),3(1)          SAVE WEEKLY MEMBER NAME\n*\nCKRUNTYP CLI   2(1),C'W'                     WEEKLY RUN ?\n         BNE   LIBRDJF                       NO\n         WTO   'WEEKLY RUN EXECUTING'        DOC TO OPERATOR\n         OI    WEEKSW,X'01'                  WEEKLY RUN INDICATOR\n         OPEN  (DIRECTA,(UPDAT))             OPEN DIRECTORY TO\n         STOW  DIRECTA,STOWLST3,D            DELETE #DAILY MEMBER\n         CLOSE (DIRECTA)                  CLOSE DIRECTORY\nLIBRDJF  RDJFCB MF=(E,EX1A)               READ TAPE JFCB\n         L     4,=A(MASTER)               OPEN MASTER INPUT\n         OPEN  ((4),(INPUT))\n         L     3,=A(LIBJFCB)\n         USING JFCB,3\n         MVC   DIRDSN(40),JFCBDSNM        MOVE DSN TO HEADER AREA\n         MVC   DIROUT(40),LABEL1          INIT FIRST RECORD TO ZEROES\n         DROP  3\n         LA    1,SORTLST                  ---> TO SORT PARAMETER LIST\n         LINK  EP=SORT                    GO SORT\n         B     LIBUP002                   GOTO END OF PROGRAM\n         EJECT\n         CNOP  0,8\n         PUSH  USING                                                SJB\nLIBE15   EQU   *                          E15 SORT EXIT\n         USING *,15                       PASSES RECORD FROM MASTER\n         STM   14,12,LIBE15SV             TO SORT\n         B     E15GET                     SAVE REGS\nLIBE15SV DC    18F'0'\nLIBSVE15 DC    F'0'\n         DS    0H\nE15GET   EQU   *\n         LR    5,15                       ESTABLISH ADDRESSABILITY\n         LA    4,DIROUT                   POINTER TO RECORD IN REG 13\n         ST    4,LIBE15SV+12\n         DROP  15\n         USING LIBE15,5\n         TM    LABELSW,X'01'              CHECK FOR FIRST TIME THRU\n         BO    GET15                      NO GET RECORD PASS TO SORT\n         OI    LABELSW,X'01'              YES PASS ZERO RECORD TO SORT\n         B     GET15P\nGET15    GET   MASTER,MASTIN              GET A RECORD\n         LA    4,MASTIN                   SET UP AND MOVE DATA\n         USING MASTDS,4\n         MVC   DIRJNM(8),MASJNM    SAVE JOBNAME\n         CLC   GET15YY(2),MASJD    IS JULIAN YEAR = 'YY'\n         BE    GET15CZ             YES\n         CLC   MASJD,=CL9' '       IS THIS A BAD RECORD        12/10/83\n         BE    GET15               YES, THEN SKIP              12/10/83\n         TM    MASJNO,X'F0'        IS JOB NUMBER NUMERIC\n         BNO   GET15               NOPE, THEN SKIP\n         MVC   YRUNPACK+3(5),MASJD     GET JULIAN RUN DATE\n         B     GET15C\nGET15CZ  MVC   DIRJD(2),MASYY\n         MVC   DIRJD+2(2),MASMM\n         MVC   DIRJD+4(2),MASDD\n         B     GET15N\nGET15C   BAL   6,CNVRTDTE                  CONVERT JULIAN TO GREGORIAN\n         MVC   DIRJD(6),GREGDTE            MOVE REST OF FIELDS\nGET15N   MVC   DIRSTH(2),MASSTH\n         MVC   DIRSTM(2),MASSTM\n         MVC   DIRPTH(2),MASPTH\n         MVC   DIRPTM(2),MASPTM\n         MVC   DIRMID(8),MASMID\n         MVC   DIRUID(7),MASUID\n         MVC   DIROUT(40),DIROUTD\n         DROP  4\n         CLC   GETDTH(6),DIRJD              CHECK FOR HIGHEST DATE\n         BH    GET15CKL                     NO CHECK FOR LOWEST\n         MVC   GETDTH(6),DIRJD              YES SAVE IT FOR STOW USER\nGET15CKL CLC   GETDTL(6),DIRJD               DATA\n         BL    GET15P                        LOWEST ? NO DON'T SAVE\n         MVC   GETDTL(6),DIRJD              YES SAVE IT\nGET15P   LM    14,12,LIBE15SV               RESTORE REGS\n         LA    15,12                        INSERT RECORD RC\n         BR    14                           GET BACK\nLIBUPCLS EQU   *\n         LM    14,12,LIBE15SV         RESTORE REGS\n         LA    15,8                   DON'T EVER RETURN TO E15 RC\n         BR    14\n         DROP  5\n         POP   USING                                                SJB\n         EJECT\nLIBUP    CSECT\nCNVRTDTE PACK YRPACK,YRUNPACK          PACK IT\n         L    1,YRPACK                PUT IT IN R1\n*\n         SR   2,2\n         PACK DATEP+6(2),YRUNPACK+3(2)  CHECK IF LEAP YEAR\n         CVB  3,DATEP                   CONVERT YR TO BINARY\n         D    2,DIV4                    DIVIDE BY 4\n         LTR  2,2                       CK FOR REMANDER\n         BZ   CHANGFEB                  NO THEN LEAP\n         B    FINDDAY\nCHANGFEB MVI  FEB,X'1D'\n*\nFINDDAY  SLA   1,16                    REMOVE YEAR DDDF0000\n         SRA   1,16                    MOVE BACK 0000DDDF\n         XC    DUBLWD,DUBLWD            CLEAR DUBLWD\n         ST    1,DUBLWD+4\n         CVB   1,DUBLWD                PACKED TO BINARY\n         LA    7,1                     SET MONTH CTR TO 1\n         LA    8,CALENDAR\n         SR    9,9\nGETDYMTH IC    9,0(8)                 INSERT DAYS IN MONTH IN REG 9\n         CR    1,9                    DAY OF YEAR - DAYS IN MONTH\n         BNH   GOTDYMTH\n         SR    1,9                    SUBTRACT MONTHS DAYS FROM R1\n         LA    7,1(7)                 INCREMENT TO NEXT MONTH\n         LA    8,1(8)                 INCREMENT TO NEXT MONTH\n         B     GETDYMTH\nGOTDYMTH BAL   11,CNVRTX\n         MVC   GREGDTE+2(2),DWORD+2     MOVE MONTH\n         LR    7,1\n         BAL   11,CNVRTX\n         MVC   GREGDTE+4(2),DWORD+2     MOVE DAY\n         MVC   GREGDTE+0(2),YRUNPACK+3  MOVE YEAR\nXITDTECV BR    6\n*\nCNVRTX   CVD   7,DWORD\n         UNPK  DWORD(4),DWORD+5(3)\n         OI    DWORD+3,X'F0'\n         BR    11\n*\nGREGDTE  DC    D'0'\nDATEP    DS    D\nDIV4     DC    X'00000004'\nYRUNPACK DC    X'F0F0F0F0F0F0F0F0'\nDUBLWD   DC    D'0'\nDWORD    DC    D'0'\nDBLTIME  DC    D'0'\nYRPACK   DC    F'0'\nFULLTIME DC    F'0'\nJULDATE  DC    F'0'\nCALENDAR DC    X'1F'            NUMBER OF DAYS IN JAN.\nFEB      DC    X'1C'            NUMBER OF DAYS IN FEB.\n         DC    X'1F'            NUMBER OF DAYS IN MAR.\n         DC    X'1E'            NUMBER OF DAYS IN APR.\n         DC    X'1F'            NUMBER OF DAYS IN MAY\n         DC    X'1E'            NUMBER OF DAYS IN JUNE\n         DC    X'1F'            NUMBER OF DAYS IN JULY\n         DC    X'1F'            NUMBER OF DAYS IN AUG.\n         DC    X'1E'            NUMBER OF DAYS IN SEPT\n         DC    X'1F'            NUMBER OF DAYS IN OCT.\n         DC    X'1E'            NUMBER OF DAYS IN NOV.\n         DC    X'1F'            NUMBER OF DAYS IN DEC.\n*\nGET15Z   DC    XL5'F0F0F0F0F0'\nGET15YY  DC    CL2'YY'\nGETDTH   DC    CL6'000000'\nGETDTL   DC    CL6'999999'\n         EJECT\n         SPACE\nLABELSW  DC    X'00'\nLABEL1   DC    XL40'00'\nLIBREC   DC    F'0'\n         SPACE\nMASTIN   DS    CL133\n         SPACE\n         DS    0F\nDIROUT   DS    CL40\nDIROUTD  DS    0CL40\nDIRJD    DC    CL6' '              JULIAN DATE\nDIRJNM   DC    CL8' '              JOBNAME\nDIRMID   DC    CL8' '              MEMBER NAME\nDIRSTH   DC    CL2' '              START HOUR\n         DC    CL1'.'\nDIRSTM   DC    CL2' '              START MINUTE\nDIRPTH   DC    CL2' '              STOP HOUR\n         DC    CL1'.'\nDIRPTM   DC    CL2' '              STOP MINUTE\nDIRUID   DC    CL7' '              USERID\n         DC    C' '\n         SPACE\n         EJECT\nLIBUP    CSECT\n         DS    0F\nSORTLST  DC    X'80'\n         DC    AL3(SORTALST)\n         DC    X'0000'\nSORTALST DC    X'0020'\n         DC    A(SORTCD)\n         DC    A(STCDED)\n         DC    A(RCDCD)\n         DC    A(RDCDED)\n         DC    A(LIBE15)\n         DC    A(0)\n         DC    X'00'\n         DC    X'020000'\n         DC    X'03'\n         DC    AL3(MSGNAME)\nSORTCD   DC    C'SORT  FIELDS=(1,6,CH,A,7,8,CH,A,18,4,CH,A)'\nSTCDED   DC    C' '\nRCDCD    DC    C'RECORD  LENGTH=(40,40,40),TYPE=F'\nRDCDED   DC    C' '\nMSGNAME  DC    CL8'MESSAGES'\n         SPACE 3\nEX1A     RDJFCB (TAPE),MF=L\nLIBJFCB  DS    176C\n         EJECT\n         CNOP  0,8\nLIBUP002 EQU   *\n         OPEN  (DIRECT,(UPDAT))        OPEN DIRECT FOR HEADING UPDATE\n         LA    2,DECB                  READ FIRST RECORD\n         READ  (2),SF,MF=E\n         CHECK (2)                     WAIT\n         MVC   DIRRDIN(40),DIRLABEL    REPLACE ZEROES WITH HEADING\n         WRITE (2),SF,MF=E\n         CHECK (2)                     WAIT\n         CLOSE (DIRECT)                CLOSE\n         CLOSE (MASTER)\n         MVC   STOWFD(6),GETDTL        MOVE LOW DATE TO USER DATA STOW\n         MVC   STOWLD(6),GETDTH        MOVE HIGH DATE \"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n         OPEN  (DIRECTA,(UPDAT))\n         STOW  DIRECTA,STOWLST1,R       REPLACE USER DATA\n         TM    WEEKSW,X'01'            WEEKLY RUN ????\n         BNO   LIBUPEND                NO END MEMBER IS #DAILY\n         CLC   STOWNEWN+2(6),=C'      ' MEMBER DATE IN THRU PARM ?\n         BNE   STOWIT                   STOW WITH PARM DATE\n         TIME  DEC                     USE CURRENT GREG. DATE FOR NAME\n         ST    1,JDAYSVE               NAME TO INCLUDE DATE\n         UNPK  JDAYUNPK(7),JDAYSVE+1    GET THE DATE\n         MVC   YRUNPACK+3(5),JDAYUNPK   SET FRO CONVERT TO GREG\n         LA    5,LIBE15                 ESTABLISH ADDRESSABILITY\n         BAL   6,CNVRTDTE               CONVERT JULIAN TO GREORIAN\n         MVC   STOWNEWN+2(6),GREGDTE    MOVE GREG DATE TO STOW LIST\nSTOWIT   STOW  DIRECTA,STOWLST2,C       STOW IT\nLIBUPEND EQU   *\n         CLOSE (DIRECTA)                CLOSE DIRECTORY\n         L     13,SAVE+4                RESTORE REGS\n         LM    14,12,12(13)\n         LA    15,0                     RC = 0\n         BR    14                       BYE\n         SPACE 3\n         DS    F\nMASTEXIT DC    X'11'                     DCB ABEND\n         DC    AL3(MASTABEN)             ABEND EXIT ADDRESS\n         DC    X'87'                     LAST IN LIST\n         DC    AL3(LIBJFCB)              ---> JFCB OUTPUT AREA\nMASTABEN EQU   *\n         USING *,15                      ADDRESSABILITY\n         MVI   3(1),X'04'                IGNORE THE ABEND\n         BR    14                        GET BACK\n         DROP  15\n         SPACE\n         READ  DECB,SF,DIRECT,DIRRDIN,MF=L\n         SPACE 3\nWEEKSW   DC    X'00'\nJDAYSVE  DC    F'0'\nJDAYUNPK DS    XL10\n         DS    0F\nDIRLABEL DS    0CL40\nDIRDSN   DC    CL40' '\n         SPACE 3\n         DS    0F\nSTOWLST1 DS    0CL24\nSTOWNAME DC    CL8'#DAILY  '\nSTOWTTR  DC    XL3'00'\n         DC    XL1'06'\nSTOWFD   DC    CL6'YYMMDD'\nSTOWLD   DC    CL6'YYMMDD'\n         SPACE\n         DS    0F\nSTOWLST2 DS    0CL16\nSTOWNM   DC    CL8'#DAILY  '\nSTOWNEWN DC    CL8'$W      '\n         DS    0F\nSTOWLST3 DS    0CL8\nSTOWNMD  DC    CL8'#DAILY  '\nMASTER   DCB   MACRF=(GM),DSORG=PS,EODAD=LIBUPCLS,DDNAME=MASTDD\nDIRECT   DCB   MACRF=(R,W),DSORG=PS,DDNAME=DIRDD,RECFM=FB\n         SPACE\nDIRECTA  DCB   MACRF=(R,W),DSORG=PO,DDNAME=DIRDDA\n         SPACE\nTAPE     DCB   MACRF=(R,W),DSORG=PS,DDNAME=TAPEDD,EXLST=MASTEXIT\n         SPACE\n         LTORG\nDIRRDIN  DS    CL6200\n         EJECT\n         SPACE\n         DS    0F\n         DSECT\nMASTDS   DS    0CL133\n         DS    CL1\nMASMID   DS    0CL8                MEMBER ID\n         DS    CL4                 'A' || JULIAN DAY\nMASJNO   DS    CL4                 JOB NUMBER\n         DS    CL16\nMASJD    DS    CL5                 JULIAN DATE\nMASSTH   DS    CL2                 START HOUR\nMASSTM   DS    CL2                 START MINUTE\nMASPTH   DS    CL2                 STOP HOUR\nMASPTM   DS    CL2                 STOP MINUTE\n         DS    CL10\nMASMM    DS    CL2                 ADDED MONTH\n         DS    CL1\nMASDD    DS    CL2                 ADDED DAY\n         DS    CL1\nMASYY    DS    CL2                 ADDED YEAR\n         DS    CL50\nMASJNM   DS    CL8                 JOBNAME\nMASUID   DS    CL7                 USERID\n         DS    CL13\nJFCB     DSECT\n         PRINT GEN\n         IEFJFCBN LIST=YES\n         PRINT NOGEN\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OPS4321L": {"ttr": 5639, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x82\\x19?\\x00\\x82\\x19?\\tQ\\x00\\x07\\x00\\x07\\x00\\x01\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1982-07-12T00:00:00", "modifydate": "1982-07-12T09:51:00", "lines": 7, "newlines": 7, "modlines": 1, "user": "SHSWRPD"}, "text": "//OPS4321L JOB (@SYSUID,@SYSACCT),'ARCH DIR. UPDATE',CLASS=A\n/*JOBPARM   I,W,Q=T,LINES=3,T=3\n//C         EXEC    ASMHCL2\n//ASM.SYSIN  DD  DSN=SHSW.LIBSPOOL.DATA(OPS4321G),DISP=SHR\n//LKED.SYSLMOD DD DSN=SHSWRPD.NCBPROG,DISP=SHR,VOL=SER=F031S2,UNIT=3350\n//LKED.SYSIN  DD  *\n  NAME OPS4321G(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPS4322G": {"ttr": 5641, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x19\\x00\\x00\\x00\\x82\\x17\\x9f\\x00\\x834o\\x11\\x12\\x01\\xae\\x01B\\x01\\xae\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.25", "flags": 0, "createdate": "1982-06-28T00:00:00", "modifydate": "1983-12-12T11:12:00", "lines": 430, "newlines": 322, "modlines": 430, "user": "SYSXKMB"}, "text": "LIBPRT   CSECT\n*/****************************************************************** /*\n*/*                                                                  */\n*/*       WRITTEN BY :             DONALD HARRIS                     */\n*/*                                OCCIDENTAL CHEMICAL CORPORATION   */\n*/*                                360 RAINBOW BLVD. SOUTH           */\n*/*                                NIAGARA FALLS , NEW YORK 14303    */\n*/*                                (716) 286-3252                    */\n*/*                                                                  */\n*/*      12/10/83 SJB              SKIP BAD MEMBER CREATED BY        */\n*/*                                MASTER FILE BEING FULL            */\n*/*                                                                  */\n*/****************************************************************** /*\n         PRINT NOGEN\n         STM   14,12,12(13)\n         BALR  10,0\n         USING *,10\nHERE     B     BEGIN\n         DC    CL8'LIBPRT'\nSAVE     DS    18F\nBEGIN    EQU   *\n         ST    13,SAVE+4\n         LA    7,SAVE\n         ST    7,8(13)\n         LA    13,SAVE\n         EJECT\n         L     1,0(1)                        ----> TO PARAMTER LIST\n         CLI   2(1),C'W'                     WEEKLY RUN ?\n         BNE   OPENMAST                      NO, LEAVE DAILY IN RPT HDR\n         MVC   RPTPERID(6),WEEKLY            MOVE WEEKLY TO RPT PERIOD\n         MVC   RPTDSNME(6),WEEKLY            MOVE WEEKLY TO RPT DSNAME\nOPENMAST OPEN  (MASTER,(INPUT))\n         OPEN  (REPORT,(OUTPUT))\nLIBRDJF  RDJFCB MF=(E,EX1A)              GET THE TAPE DSN + VOLSER\n         L     3,=A(LIBJFCB)             ---> TO JFCB\n         USING JFCB,3                    IBM JFCB DSECT\n         MVC   ARCHDSN(44),JFCBDSNM      MOVE DATASET NAME TO HEADING\n         MVC   ARCHVOL(6),JFCBVOLS            VOLSER NAME TO HEADING\n         DROP  3\n         TIME  DEC                       GET CURRENT TIME/DATE\n         ST    1,JDAYSVE                 STORE JULIAN DATE\n         ST    0,TOD                     STORE TIME\n         UNPK  TODUP(7),TOD              UNPACK TIME\n         MVC   HEADHH(2),TODUP           MOVE HOURS TO HEADING\n         MVC   HEADMIN(2),TODUP+2        MOVE MINUTES TO HEADING\n         UNPK  JDAYUNPK(7),JDAYSVE+1     UNPACK JULIAN DATE\n         MVC   YRUNPACK+3(5),JDAYUNPK    MOVE INTO CONVERT AREA\n         LA    5,LIBE15                  ESTABLISH ADDRESSABLITY\n         BAL   6,CNVRTDTE                CONVERT JULIAN TO GREGORIAN\n         MVC   HEADYY(2),GREGDTE         MOVE DATE TO HEADING\n         MVC   HEADMM(2),GREGDTE+2\n         MVC   HEADDD(2),GREGDTE+4\n         LA    1,SORTLST                 1 ---> SORT PARAMETER LIST\n         LINK  EP=SORT                   GO SORT\n         B     LIBPR002                  RETURN FROM SORT END PROGRAM\n         CNOP  0,8\nLIBE15   EQU   *                         SORT E15 EXIT PASS DATA TO\n         USING *,15                      THE SORT\n         STM   14,12,LIBE15SV            SAVE REGISTERS\n         B     E15GET\nLIBE15SV DC    18F'0'\nLIBSVE15 DC    F'0'\n         DS    0H\nE15GET   EQU   *                         ESTABLISH ADDRESSABILITY\n         LR    5,15\n         LA    4,DIROUT                  PUT ---> TO SORT RECORD\n         ST    4,LIBE15SV+12             IN REGISTER 13 PASS TO SORT\n         DROP  15\n         USING LIBE15,5\nGET15    GET   MASTER,MASTIN             GET A RECORD\n         LA    4,MASTIN\n         USING MASTDS,4                  USE MASTER DSECT\n         MVC   DIRJNM(8),MASJNM          MOVE MASTER FIELD TO MAKE\n         CLC   GET15YY(2),MASJD          A SORT DIRECTORY RECORD\n         BE    GET15CZ\n         CLC   =CL9' ',MASJD       IS THIS A BAD ENTRY         12/10/83\n         BE    GET15               YES, THEN SKIP              12/10/83\n         TM    MASJNO,X'F0'              CHECK IF NUMERIC DATA IN FIELD\n         BNO   GET15                     NO THEN GET ANOTHER\n         MVC   YRUNPACK+3(5),MASJD       GET JULIAN RUN DATE\n         B     GET15C\nGET15CZ  MVC   DIRJD(2),MASYY\n         MVC   DIRJD+2(2),MASMM\n         MVC   DIRJD+4(2),MASDD\n         B     GET15N\nGET15C   BAL   6,CNVRTDTE                CONVERT JULIAN TO GREGORIAN\n         MVC   DIRJD(6),GREGDTE          MOVE FIELDS TO MAKE RECORD\nGET15N   MVC   DIRSTH(2),MASSTH          FOR DIRECTORY\n         MVC   DIRSTM(2),MASSTM\n         MVC   DIRPTH(2),MASPTH\n         MVC   DIRPTM(2),MASPTM\n         MVC   DIRMID(8),MASMID\n         MVC   DIRUID(7),MASUID\n         MVC   DIROUT(40),DIROUTD\n         DROP  4\nGET15P   LM    14,12,LIBE15SV             RESTORE REGS\n         LA    15,12                      RETURN CODE 12 INSERT RECORD\n         BR    14                         RETURN TO SORT\nLIBPRCLS EQU   *\n         LM    14,12,LIBE15SV             NO MORE RECORDS\n         LA    15,8                       DON'T RETURN TO THIS EXIT\n         BR    14                         RETURN TO SORT\n         EJECT\nCNVRTDTE PACK YRPACK,YRUNPACK          PACK IT\n         L    1,YRPACK                PUT IT IN R1\n*\n         SR   2,2\n         PACK DATEP+6(2),YRUNPACK+3(2)  CHECK IF LEAP YEAR\n         CVB  3,DATEP                   CONVERT YR TO BINARY\n         D    2,DIV4                    DIVIDE BY 4\n         LTR  2,2                       CK FOR REMANDER\n         BZ   CHANGFEB                  NO THEN LEAP\n         B    FINDDAY\nCHANGFEB MVI  FEB,X'1D'\n*\nFINDDAY  SLA   1,16                    REMOVE YEAR DDDF0000\n         SRA   1,16                    MOVE BACK 0000DDDF\n         XC    DUBLWD,DUBLWD            CLEAR DUBLWD\n         ST    1,DUBLWD+4\n         CVB   1,DUBLWD                PACKED TO BINARY\n         LA    7,1                     SET MONTH CTR TO 1\n         LA    8,CALENDAR\n         SR    9,9\nGETDYMTH IC    9,0(8)                 INSERT DAYS IN MONTH IN REG 9\n         CR    1,9                    DAY OF YEAR - DAYS IN MONTH\n         BNH   GOTDYMTH\n         SR    1,9                    SUBTRACT MONTHS DAYS FROM R1\n         LA    7,1(7)                 INCREMENT TO NEXT MONTH\n         LA    8,1(8)                 INCREMENT TO NEXT MONTH\n         B     GETDYMTH\nGOTDYMTH BAL   11,CNVRTX\n         MVC   GREGDTE+2(2),DWORD+2     MOVE MONTH\n         LR    7,1\n         BAL   11,CNVRTX\n         MVC   GREGDTE+4(2),DWORD+2     MOVE DAY\n         MVC   GREGDTE+0(2),YRUNPACK+3  MOVE YEAR\nXITDTECV BR    6\n*\nCNVRTX   CVD   7,DWORD\n         UNPK  DWORD(4),DWORD+5(3)\n         OI    DWORD+3,X'F0'\n         BR    11\n*\nGREGDTE  DC    D'0'\nDATEP    DS    D\nDIV4     DC    X'00000004'\nYRUNPACK DC    X'F0F0F0F0F0F0F0F0'\nDUBLWD   DC    D'0'\nDWORD    DC    D'0'\nDBLTIME  DC    D'0'\nYRPACK   DC    F'0'\nFULLTIME DC    F'0'\nJULDATE  DC    F'0'\nCALENDAR DC    X'1F'            NUMBER OF DAYS IN JAN.\nFEB      DC    X'1C'            NUMBER OF DAYS IN FEB.\n         DC    X'1F'            NUMBER OF DAYS IN MAR.\n         DC    X'1E'            NUMBER OF DAYS IN APR.\n         DC    X'1F'            NUMBER OF DAYS IN MAY\n         DC    X'1E'            NUMBER OF DAYS IN JUNE\n         DC    X'1F'            NUMBER OF DAYS IN JULY\n         DC    X'1F'            NUMBER OF DAYS IN AUG.\n         DC    X'1E'            NUMBER OF DAYS IN SEPT\n         DC    X'1F'            NUMBER OF DAYS IN OCT.\n         DC    X'1E'            NUMBER OF DAYS IN NOV.\n         DC    X'1F'            NUMBER OF DAYS IN DEC.\n*\nGET15Z   DC    XL5'F0F0F0F0F0'\nGET15YY  DC    CL2'YY'\n         EJECT\n         SPACE\nMASTIN   DS    CL124\n         SPACE\n         DS    0F\nDIROUT   DS    CL40\nDIROUTD  DS    0CL40           SORT RECORD LAYOUT FOR DIRECTORY\nDIRJD    DC    CL6' '\nDIRJNM   DC    CL8' '\nDIRMID   DC    CL8' '\nDIRSTH   DC    CL2' '\n         DC    CL1'.'\nDIRSTM   DC    CL2' '\nDIRPTH   DC    CL2' '\n         DC    CL1'.'\nDIRPTM   DC    CL2' '\nDIRUID   DC    CL7' '\n         DC    C' '\n         SPACE\n         DS    0F\n         EJECT\n         SPACE\n         DSECT               MASTER ARCHIVE INDEX LAYOUT\nMASTDS   DS    0CL133\n         DS    CL1\nMASMID   DS    0CL8\n         DS    CL4\nMASJNO   DS    CL4\n         DS    CL16\nMASJD    DS    CL5\nMASSTH   DS    CL2\nMASSTM   DS    CL2\nMASPTH   DS    CL2\nMASPTM   DS    CL2\n         DS    CL10\nMASMM    DS    CL2\n         DS    CL1\nMASDD    DS    CL2\n         DS    CL1\nMASYY    DS    CL2\n         DS    CL50\nMASJNM   DS    CL8\nMASUID   DS    CL7\n         DS    CL13\n         EJECT\nLIBPRT   CSECT                      SORT PARAMTER LIST\n         DS    0F\nSORTLST  DC    X'80'\n         DC    AL3(SORTALST)\n         DC    X'0000'\nSORTALST DC    X'0020'\n         DC    A(SORTCD)\n         DC    A(STCDED)\n         DC    A(RCDCD)\n         DC    A(RDCDED)\n         DC    A(LIBE15)\n         DC    A(LIBE35)\n         DC    X'00'\n         DC    X'020000'\n         DC    X'03'\n         DC    AL3(MSGNAME)\nSORTCD   DC    C'SORT  FIELDS=(7,8,CH,A,1,6,CH,A,23,5,CH,A)'\nSTCDED   DC    C' '\nRCDCD    DC    C'RECORD  LENGTH=(40,40,40),TYPE=F'\nRDCDED   DC    C' '\nMSGNAME  DC    CL8'MESSAGES'\n         DROP  5\n         EJECT\n         PRINT GEN\nJFCB     DSECT\n         IEFJFCBN LIST=YES\n         PRINT NOGEN\n         SPACE 3\nLIBPRT   CSECT\nEX1A     RDJFCB (TAPE),MF=L         LIST FOR RDJFCB MACRO\nLIBJFCB  DS    176C\n         EJECT\n         CNOP  0,8                   E35 SORT EXIT AFTER PHASE 3\nLIBE35   EQU   *\n         USING *,15\n         STM   14,12,LIBE35SV              SAVE REGISTERS\n         B     E35STRT\nLIBE35SV DC    18F'0'\n         DS    0H\nE35STRT  EQU   *                           ESTABLISH ADDRESSABILITY\n         LR    5,15\n         DROP  15\n         USING LIBE35,5\n         L     1,0(1)                      ----> TO PARAMETER LIST\n         LTR   1,1                         IF ZERO ALL DONE\n         BZ    E35END\n         MVC   DETOUT(133),HEAD5           CLEAR OUTPUT AREA\n         SR    4,4                         CLEAR LINE COUNT\n         LH    4,LINECT                    UPDATE LINE COUNTER\n         AH    4,=H'1'\n         STH   4,LINECT\n         USING SORTDS,1                    USE SORT RECORD FOR DSECT\n         MVC   JOBNAME(8),DIRJNMD          MOVE FIELD TO OUTPUT\n         MVC   JOBNUM(4),DIRMIDD+4\n         MVC   DETMM(2),DIRJDD\n         MVC   DETDD(2),DIRJDD+2\n         MVC   DETYY(2),DIRJDD+4\n         MVC   DETSTHH(2),DIRSTHD\n         MVC   DETSTMM(2),DIRSTMD\n         MVC   DETETHH(2),DIRPTHD\n         MVC   DETETMM(2),DIRPTMD\n         MVC   USERID(7),DIRUIDD\n         MVC   MODULE(8),DIRMIDD\n         DROP  1\n         CLC   PAGEPK(2),=PL2'1'           FIRST TIME THRU ?\n         BL    HEADRT                      YES PUT OUT HEADINGS\n         CH    4,=H'56'                    MAX LINES ?\n         BH    HEADRT                      YES PUT OUT HEADINGS\nE35PUT   MVC   DETOUT(133),DETAIL          OUTPUT RECORD TO OUT AREA\n         PUT   REPORT,DETOUT               WRITE USING PM\n         LM    14,12,LIBE35SV              RESTORE REGS\n         LA    15,4                        DELETE RECORD FROM SORT\n         BR    14                          RETURN TO SORT\nE35END   EQU   *                           NO MORE RECORDS\n         LM    14,12,LIBE35SV              RESTORE REGS\n         LA    15,8                        DON'T RETURN TO THIS EXIT\n         BR    14                          GET BACK\nHEADRT   EQU   *\n         XC    LINECT(2),LINECT            ZERO LINE COUNTER\n         AP    PAGEPK,=P'1'                UPDATE PAGE COUNTER\n         UNPK  PAGECT(3),PAGEPK\n         OI    PAGECT+2,X'F0'             MAKE IT NICE\n         PUT   REPORT,HEAD1\n         PUT   REPORT,HEAD2\n         PUT   REPORT,HEAD3\n         PUT   REPORT,HEAD4\n         PUT   REPORT,HEAD5\n         B     E35PUT\n         EJECT\nPAGEPK   DC    PL2'0'\nLINECT   DC    PL2'0'\nWEEKLY   DC    CL6'WEEKLY'\nDETOUT   DS    CL133\n         SPACE\nHEAD1    DS    0CL133\n         DC    C'1'\n         DC    CL5'DATE='\nHEADMM   DS    CL2\n         DC    CL1'/'\nHEADDD   DS    CL2\n         DC    CL1'/'\nHEADYY   DS    CL2\n         DC    CL2' '\n         DC    CL5'TIME='\nHEADHH   DS    CL2\n         DC    CL1':'\nHEADMIN  DS    CL2\n         DC    CL8' '\nRPTPERID DC    CL7' DAILY '\n         DC    CL39'LIBSPOOL ARCHIVE TAPE MASTER FILE INDEX'\n         DC    CL33' '\n         DC    CL5'PAGE'\nPAGECT   DS    CL3\n         DC    CL12' '\n         SPACE\nHEAD2    DS    0CL133\n         DC    C' '\n         DC    CL13' '\nRPTDSNME DC    CL7' DAILY '\n         DC    CL20'ARCHIVE TAPE DSNAME='\nARCHDSN  DS    CL44\n         DC    CL2' '\n         DC    CL7'VOLSER='\nARCHVOL  DS    CL6\n         DC    CL33' '\n         SPACE\nHEAD3    DS    0CL133\n         DC    C'0'\n         DC    CL10' '\n         DC    CL13'JOB NAME'\n         DC    CL15'JOB NUMBER'\n         DC    CL13'RUN DATE'\n         DC    CL15'START TIME'\n         DC    CL13'END TIME'\n         DC    CL13'USER ID'\n         DC    CL32'LIBRARIAN'\n         SPACE\nHEAD4    DS    0CL133\n         DC    C' '\n         DC    CL91' '\n         DC    CL41'MODULE NAME'\n         SPACE\nHEAD5    DC    CL133' '\nDETAIL   DS    0CL133\n         DC    C' '\n         DC    CL10' '\nJOBNAME  DS    CL8\n         DC    CL8' '\nJOBNUM   DS    CL4\n         DC    CL8' '\nDETMM    DS    CL2\n         DC    CL1'/'\nDETDD    DS    CL2\n         DC    CL1'/'\nDETYY    DS    CL2\n         DC    CL7' '\nDETSTHH  DS    CL2\n         DC    CL1':'\nDETSTMM  DS    CL2\n         DC    CL9' '\nDETETHH  DS    CL2\n         DC    CL1':'\nDETETMM  DS    CL2\n         DC    CL7' '\nUSERID   DS    CL7\n         DC    CL6' '\nMODULE   DS    CL8\n         DC    CL33' '\n         DSECT\nSORTDS   DS    0CL40\nDIRJDD   DC    CL6' '\nDIRJNMD  DC    CL8' '\nDIRMIDD  DC    CL8' '\nDIRSTHD  DC    CL2' '\n         DC    CL1'.'\nDIRSTMD  DC    CL2' '\nDIRPTHD  DC    CL2' '\n         DC    CL1'.'\nDIRPTMD  DC    CL2' '\nDIRUIDD  DC    CL7' '\n         DC    C' '\n         SPACE\nLIBPRT   CSECT\n         DROP  5\n         EJECT\n         CNOP  0,8\nLIBPR002 EQU   *\nLIBPREND EQU   *\n         CLOSE (MASTER)                   CLOSE MASTER INPUT\n         CLOSE (REPORT)                   CLOSE SYSOUT REPORT\n         L     13,SAVE+4\n         LM    14,12,12(13)\n         LA    15,0\n         BR    14\n         SPACE 3\n         DS    F\nTAPEEXIT DC    X'11'                 TAPE JFCB ABEND EXIT\n         DC    AL3(TAPEAB)           ---> ABEND EXIT\n         DC    X'87'                 LAST IN LIST\n         DC    AL3(LIBJFCB)          ---> JFCB OUTPUT\nTAPEAB   EQU   *\n         USING *,15                  ADDRESSABILITY\n         MVI   3(1),X'04'            IGNORE ABEND\n         BR    14                    GET BACK\n         DROP  15\n         SPACE\nJDAYSVE  DC    F'0'\nJDAYUNPK DS    XL10\nTOD      DS    F\nTODUP    DC    XL8'00'\n         SPACE 3\nMASTER   DCB   MACRF=(GM),DSORG=PS,EODAD=LIBPRCLS,DDNAME=MASTDD\nTAPE     DCB   MACRF=(R,W),DSORG=PS,DDNAME=TAPEDD,EXLST=TAPEEXIT\nREPORT   DCB   MACRF=(PM),DSORG=PS,DDNAME=REPORTDD\n         SPACE\n         LTORG\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPS4322L": {"ttr": 5894, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x82\\x19?\\x00\\x82\\x19?\\tP\\x00\\x07\\x00\\x07\\x00\\x03\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1982-07-12T00:00:00", "modifydate": "1982-07-12T09:50:00", "lines": 7, "newlines": 7, "modlines": 3, "user": "SHSWRPD"}, "text": "//OPS4322L JOB (@SYSUID,@SYSACCT),'LIBSPOOL ARCHIVE RPT',CLASS=A\n/*JOBPARM   I,W,Q=T,LINES=3,T=3\n//C         EXEC    ASMHCL2\n//ASM.SYSIN  DD  DSN=SHSW.LIBSPOOL.DATA(OPS4322G),DISP=SHR\n//LKED.SYSLMOD DD DSN=SHSWRPD.NCBPROG,DISP=SHR,VOL=SER=F031S2,UNIT=3350\n//LKED.SYSIN  DD  *\n  NAME OPS4322G(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPS4323G": {"ttr": 5896, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x82 O\\x00\\x83\\x05?\\x138\\x00;\\x008\\x00\\x04\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1982-07-23T00:00:00", "modifydate": "1983-02-22T13:38:00", "lines": 59, "newlines": 56, "modlines": 4, "user": "SHSWRPD"}, "text": "         TITLE 'LIBSPOOL: OPS4323G - LIBSPOOL INACTIVE NOTIFICATION'\n*/****************************************************************** /*\n*/*                                                                  */\n*/*       WRITTEN BY :             ROBERT P DZIALAK                  */\n*/*                                OCCIDENTAL CHEMICAL CORPORATION   */\n*/*                                360 RAINBOW BLVD. SOUTH           */\n*/*                                NIAGARA FALLS , NEW YORK 14303    */\n*/*                                (716) 286-3251                    */\n*/*                                                                  */\n*/*  THIS PROGRAM IS EXECUTED AS THE SECOND STEP OF THE LIBSPOOL     */\n*/*  CONSOLE STARTED TASK. A WTOR IS WRITTEN TO THE                  */\n*/*  OPERATOR NOTIFYING HIM THAT LIBSPOOL IS NO LONGER RUNNING.      */\n*/*  THIS SHOULD INSURE THAT OPERATIONS IS ALWAYS NOTIFIED OF        */\n*/*  LIBSPOOL NOT BEING ACTIVE.                                      */\n*/*                                                                  */\n*/****************************************************************** /*\nOPS4323G CSECT\n*        PRINT NOGEN\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         USING OPS4323G,R12\n         B     NAMEED\n         DC    CL8'OPS4323G'\nNAMEED   EQU   *\n         ST    R13,SAVEAREA+4\n         LR    R2,R13\n         LA    R13,SAVEAREA\n         ST    R13,8(R2)\n*\n         WTOR '**** LIBSPOOL IS NO LONGER ACTIVE. REPLY ANY CHARACTER AX\n               ND RESTART LIBSPOOL ASAP ****',RPLYAREA,1,RPLYECB\n*\n         WAIT  1,ECB=RPLYECB\n*\n         L     R13,SAVEAREA+4\n         LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\nSAVEAREA DC    18F'0'\nRPLYAREA DC    X'00'\nRPLYECB  DC    F'0'\n         LTORG\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPS4323L": {"ttr": 5898, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x82 O\\x00\\x82 O\\x14&\\x00\\x07\\x00\\x07\\x00\\x03\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1982-07-23T00:00:00", "modifydate": "1982-07-23T14:26:00", "lines": 7, "newlines": 7, "modlines": 3, "user": "SHSWRPD"}, "text": "//OPS4323L JOB (@SYSUID,@SYSACCT),'NOTIFY LIBSPOOL INAC',CLASS=A\n/*JOBPARM   I,W,Q=T,LINES=3,T=3\n//C         EXEC    ASMHCL2\n//ASM.SYSIN  DD  DSN=SHSW.LIBSPOOL.DATA(OPS4323G),DISP=SHR\n//LKED.SYSLMOD DD DSN=SHSWRPD.NCBPROG,DISP=SHR,VOL=SER=F031S2,UNIT=3350\n//LKED.SYSIN  DD  *\n  NAME OPS4323G(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPS4341G": {"ttr": 5900, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x82\"\\x9f\\x00\\x83\\x05?\\x139\\x008\\x007\\x00\\t\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1982-08-17T00:00:00", "modifydate": "1983-02-22T13:39:00", "lines": 56, "newlines": 55, "modlines": 9, "user": "SHSWRPD"}, "text": " TITLE 'LIBSPOOL: OPS4341G - LIBSPOOL ARCHIVE COMPLETION NOTIFICATION'\n*/****************************************************************** /*\n*/*                                                                  */\n*/*       WRITTEN BY :             ROBERT P DZIALAK                  */\n*/*                                HOOKER CHEMICAL CENTER            */\n*/*                                360 RAINBOW BLVD. SOUTH           */\n*/*                                NIAGARA FALLS , NEW YORK 14303    */\n*/*                                (716) 286-3251                    */\n*/*                                                                  */\n*/*  THIS PROGRAM IS EXECUTED AS THE LAST STEP OF THE DAILY AND      */\n*/*  WEEKLY LIBSPOOL ARCHIVE RUNS. A WTO IS WRITTEN TO THE           */\n*/*  OPERATOR NOTIFYING HIM THAT THE ARCHIVE RUN IS NOW COMPLETE     */\n*/*  AND LIBSPOOL WILL BE STARTED UP AGAIN.                          */\n*/*                                                                  */\n*/****************************************************************** /*\nOPS4341G CSECT\n*        PRINT NOGEN\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         USING OPS4341G,R12\n         B     NAMEED\n         DC    CL8'OPS4341G'\nNAMEED   EQU   *\n         ST    R13,SAVEAREA+4\n         LR    R2,R13\n         LA    R13,SAVEAREA\n         ST    R13,8(R2)\n*\n         WTO  ' '\n         WTO  '**** LIBSPOOL ARCHIVE IS NOW COMPLETE. LIBSPOOL WILL NOWX\n                BE STARTED. ****'\n         WTO  ' '\n*\n         L     R13,SAVEAREA+4\n         LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\nSAVEAREA DC    18F'0'\n         LTORG\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OPS4341L": {"ttr": 5902, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x82\"\\x9f\\x00\\x82\"\\x9f\\x156\\x00\\x07\\x00\\x07\\x00\\x03\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1982-08-17T00:00:00", "modifydate": "1982-08-17T15:36:00", "lines": 7, "newlines": 7, "modlines": 3, "user": "SHSWRPD"}, "text": "//OPS4341L JOB (@SYSUID,@SYSACCT),'NOTIFY ARCHIVE COMPL',CLASS=A\n/*JOBPARM   I,W,Q=T,LINES=3,T=3\n//C         EXEC    ASMHCL2\n//ASM.SYSIN  DD  DSN=SHSW.LIBSPOOL.DATA(OPS4341G),DISP=SHR\n//LKED.SYSLMOD DD DSN=SHSWRPD.NCBPROG,DISP=SHR,VOL=SER=F031S2,UNIT=3350\n//LKED.SYSIN  DD  *\n  NAME OPS4341G(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OXYJCLL": {"ttr": 5904, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x82(\\x7f\\x00\\x82(\\x7f\\x12A\\x05f\\x05f\\x00\\x00\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1982-10-14T00:00:00", "modifydate": "1982-10-14T12:41:00", "lines": 1382, "newlines": 1382, "modlines": 0, "user": "SHSWRPD"}, "text": "*/ ***************************************************************** /*\n*                                                                     *\n*  LIBSPOOL - JES2 SYSMSG SPOOLING SYSTEM:  A LIBRARIAN EXTERNAL WTR  *\n*                                                                     *\n*/****************************************************************** /*\n*/*                                                                  */\n*/*                                                                  */\n*/*       WRITTEN BY :             SAM J. BASS              (SJB)    */\n*/*                                OCCIDENTAL SYSTEMS INC.           */\n*/*                                5 GREENWAY PLAZA EAST             */\n*/*                                HOUSTON, TEXAS 77046              */\n*/*                                (713) 840-2178                    */\n*/*                                                                  */\n*/*       DISCLAMER:               THIS PROGRAM HAS BEEN FULLY       */\n*/*                                TESTED AT OSI, BUT I CLAIM NO     */\n*/*                                RESPONSIBILITY FOR THIS PROGRAM   */\n*/*                                PROCESSING THE WRONG JES2         */\n*/*                                SYSOUT DATASETS                   */\n*/*                                                                  */\n*/****************************************************************** /*\n&CLASS   SETC  'X'                                                  SJB\n&RECLASS SETC  'J'                                                  SJB\n         EJECT                                                      SJB\n*/ ***************************************************************** /*\n*                                                                     *\n*    SAMPLE STARTED TASK JCL:                                         *\n*                                                                     *\n*    //LIBSPOOL PROC DEBUG=                                           *\n*    //IEFPROC  EXEC PGM=JCLLIST,TIME=1439,PARM=&DEBUG                *\n*    //SYSPRINT DD  DUMMY                                             *\n*    //REPORT   DD  SYSOUT=A                                          *\n*    //SNAP     DD  SYSOUT=A                                          *\n*    //SYSABEND DD  SYSOUT=A                                          *\n*    //OSJOB    DD  DUMMY                                             *\n*    //MASTER   DD  DISP=SHR,DSN=SYSX.JCLLIST.LIBRARY                 *\n*    //SYSIN    DD  &&SYSIN,DISP=(NEW,DELETE),UNIT=SYSDA,             *\n*    //             SPACE=(CYL,(10,10)),                              *\n*    //             DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160)              *\n*                                                                     *\n*    NOTE THAT THE TASK WILL REMAIN IN AN 'OUTPUT LONG-WAIT' AND      *\n*    WILL ISSUE AN STIMER EVERY 1/2 MINUTE TO CHECK FOR THE PRESENCE  *\n*    OF ANY SYSOUT=&CLASS OUTPUT.                                     *\n*                                                                     *\n*        THE MODULE MUST BE MARKED AC=1 AND MUST RESIDE IN            *\n*        AN AUTHORIZED LIBRARY IFA STEPLIB IS USED OR MUST            *\n*        MUST BE IN A LINKLIST LIBRARY. THIS MODULE IS                *\n*        NOT REENTRANT.                                               *\n*                                                                     *\n*/ ================================================================= /*\n*                                                                     *\n*  OS MACROS USED BY THIS MODULE:                                     *\n*                                                                     *\n*  IEFSSREQ     EXTRACT      QEDIT        WAIT         GET     WTO    *\n*  IEFZB4D0     MODESET      SYNADRLS     TTIMER       SNAP    PUT    *\n*  IEFJESCT     DYNALLOC     SYNADAF      STIMER       OPEN    DCBD   *\n*  IEFJSSOB     QEDIT        DCB          CLOSE        CALL           *\n*  CONNECT      RELEASE      LINK         LIBWTO                      *\n*                                                                     *\n*/ ================================================================= /*\n*                                                                     *\n*  UPON ISSUANCE OF AN OPERATOR PAUSE COMMAND, A WTO IS ISSUED BY     *\n*  JCLLIST THAT TERMINATION IS IN PROGRESS.                           *\n*                                                                     *\n*/ ================================================================= /*\n*                                                                     *\n*  NAMING CONVENTIONS OF MODULES PLACED ON THE LIBRARIAN SPOOL        *\n*                                                                     *\n*    TO INSURE UNIQUE LIBRARIAN NAMES, THE JOB NUMBER IS THE          *\n*    MODULES NAME J01234A. IF A DUPLICATE JOB NUMBER EXISTS           *\n*    THEN AN  'B' REPLACES THE A.                                     *\n*                                                                     *\n*/ ================================================================= /*\n*                                                                     *\n*  CRITERIA UPON WHICH JCLLIST WILL SET THE PRINT FLAG AND FORCE A    *\n*  JOB TO BE PRINTED AND WILL ALSO BE ADDED TO THE LIBRARIAN SPOOL)   *\n*                                                                     *\n*      ---------------------------------------------------------      *\n*      -*-  ANY OF THE FOLLOWING IBM MESSAGE IDENTIFICATIONS -*-      *\n*      ---------------------------------------------------------      *\n*                                                                     *\n*  IEF251I - JOB CANCELLED                                            *\n*  IEF283I - NOT DELETED X                                            *\n*  IEF287I - NOT RECTLGD/CATALGD/UNCATLGD                             *\n*  IEF450I - ABEND           IEF452I - JOBFAIL/JOB NOT RUN JCL ERROR  *\n*  IEF451I - ENDED BY CC     IEF453I - JOB FAILED - JCL ERROR         *\n*                                                                     *\n*              IF ANY ERRORS ARE FOUND THEN THE SYSOUT DATASETS       *\n*              ARE RELEASED FROM THE HOLD QUEUE.                      *\n*                                                                     *\n*                                                                     *\n*/ ================================================================= /*\n*                                                                   SJB\n*              SNAPID              LOCATION                         SJB\n*                                                                   SJB\n*              1                   JCLLIST/GETDS    (SSREQ)         SJB\n*              2                   LIBMAIN/NEXTSSRQ (SSREQ)         SJB\n*              3                   LIBMAIN/CLOSBPSO (SSREQ)         SJB\n*              4                   LIBMAIN/ALLOCDS  (DYNALLOC)      SJB\n*              5                   LIBMAIN/LIBINIT  (SYSIN OPEN)    SJB\n*              6                   LIBMAIN/LIBFAIR  (BAD MASTOPN)   SJB\n*              7                   LIBMAIN/LIBFAIR  (BAD MASTMOD)   SJB\n*              8                   LIBMAIN/UNALLOC  (DYNALLOC)      SJB\n*              9                   LIBMAIN/OPENIN   (BAD OPEN PSO)  SJB\n*              10                  LIBMAIN/CLOSEOUT (BAD LIBRARY)   SJB\n*                                                                   SJB\n*                                                                     *\n*/ ================================================================= /*\n*                                                                   SJB\n         PUNCH ' SETCODE AC(1) '                                    SJB\n         PUNCH ' INCLUDE SYSLIB(TSOFAIR) '                          SJB\n         PUNCH ' ORDER JCLLIST,LIBMAIN,SSREQ,TSOFAIR '              SJB\nJCLL     TITLE 'LIBSPOOL: JCLLIST - LIBRARIAN/JES2 EXTERNAL WRITER' SJB\n         PRINT ON,GEN,NODATA                                        SJB\n         PRINT GEN                                                  SJB\n         MACRO                                                      SJB\n&LABEL   LIBWTO &MSG                                                SJB\n         LCLC  &ID                                                  SJB\n&ID      SETC  '&SYSNDX'                                            SJB\n&LABEL   TM    FLAG2,$DEBUG                                         SJB\n         BNO   WTO&ID                                               SJB\n         PUSH  PRINT                                                SJB\n*        WTO   &MSG                                                 SJB\n         PRINT OFF                                                  SJB\n         WTO   &MSG                                                 SJB\n         POP   PRINT                                                SJB\nWTO&ID   DS    0H                                                   SJB\n         MEND                                                       SJB\n         EJECT                                                      SJB\nJCLLIST  CSECT                                                      SJB\n         SPACE 3                                                    SJB\nR0       EQU   0                                                    SJB\nR1       EQU   1                                                    SJB\nR2       EQU   2                                                    SJB\nR3       EQU   3                                                    SJB\nR4       EQU   4                                                    SJB\nR5       EQU   5                                                    SJB\nR6       EQU   6                                                    SJB\nR7       EQU   7                                                    SJB\nR8       EQU   8                                                    SJB\nR9       EQU   9                                                    SJB\nR10      EQU   10                                                   SJB\nR11      EQU   11                                                   SJB\nR12      EQU   12                                                   SJB\nR13      EQU   13                  SAVE AREA POINTER                SJB\nR14      EQU   14                  BASE REG FOR SVC 99 PARAM        SJB\nR15      EQU   15                                                   SJB\n         EJECT                                                      SJB\n         CONNECT LWORK1,WORK1,BASE=R12,CLEAR=YES,PARM=R10           SJB\n         EJECT                                                      SJB\n         L     R1,0(,R10)          GET ADDR OF PARM FIELD           SJB\n         LH    R2,0(R1)            GET LENGTH OF PARM               SJB\n         LTR   R2,R2               ANY PARM                         SJB\n         BZ    NOPARM                                               SJB\n         C     R2,=F'80'           LENGTH > 80                      SJB\n         BL    *+8                 NO                               SJB\n         LA    R2,80               YES                              SJB\n         BCTR  R2,0                -1 FOR EXECUTE                   SJB\n         EX    R2,MVCPARM          MOVE IN PARM FIELDS              SJB\nNOPARM   EXTRACT COMMLPTR,FIELDS=COMM GET ADDR OF ECB AND CIB PTRS  SJB\n         SPACE 1                                                    SJB\n         L     R2,COMMLPTR         GET COMMAND LIST ADDRESS         SJB\n         USING COMMADDR,R2         ESTABLISH ADDRESSABILITY         SJB\n         LM    R9,R10,COMMADDR     GET COMMAND ECB AND CIB POINTERS SJB\n*        ST    R9,CMNDECBP         STORE ECB POINTER IN ECBLIST     SJB\n*        MVI   CMNDECBP,X'80'      INDICATE LAST ECB PTR IN LIST    SJB\n         ST    R9,CMDECBP2         STORE ECB POINTER IN OTHER ECBLISTJB\n         SPACE 1                                                    SJB\n         QEDIT ORIGIN=COMMCIB,BLOCK=(R10) FREE CIB                  SJB\n         QEDIT ORIGIN=COMMCIB,CIBCTR=1    INDICATE 1 CIB TO BE CHAINEDB\n         SPACE 2                                                    SJB\n         USING SSOB,R10            ESTABLISH ADDRESSABILITY         SJB\n         LA    R10,LWASSOB                                          SJB\n*                                                                   SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n*              MISCELLANEOUS INITIALIZATION                         SJB\n*                                                                   SJB\n         MVI   FLAG2,X'00'                                          SJB\n         CLC   =C'DEBUG',PARMCARD  IS IT DEBUG                      SJB\n         BNE   *+8                 NO                               SJB\n         OI    FLAG2,$DEBUG        YES, TURN ON FLAG                SJB\n*                                                                   SJB\n         OI    FLAG2,$TITLE                                         SJB\n*                                                                   SJB\n         MVC   LWADCBRP,RPTDCB     MOVE IN RPT DCB                  SJB\n         LA    R4,LWADCBRP                                          SJB\n         OPEN  ((R4),(OUTPUT))     OPEN IT                          SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n*                                                                   SJB\nGETDS    DS    0H                                                   SJB\n*                                                                   SJB\n         MVI   FLAG,$FIRST         $FIRST ON, INITILIZE SSOB        SJB\n*                                                                   SJB\n*              GO DO A SUB-SYSTEM REQUEST FOR NEW JOB               SJB\n*                                                                   SJB\n         L     R15,=A(SSREQ)                                        SJB\n         LA    R1,WORK1            POINT TO MAIN WORK AREA          SJB\n         BALR  R14,R15                                              SJB\n*                                                                   SJB\n*              END OF SUB-SYSTEM REQUEST                            SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n         MVI   SNAPID,1                                             SJB\n         LH    R15,RETCODE         GET IEFSSREQ RETURN CODE         SJB\n         LTR   R15,R15             SUBSYSTEM REQUEST SUCCESSFUL?    SJB\n         BNZ   SNAPIT              NO. TERMINATE WRITER             SJB\n*                                                                   SJB\n*              IF GOOD RC THEN GO  CALL LIBRARIAN                   SJB\n*                                                                   SJB\n         C     R15,SSOBRETN        DID WE GET A DATA SET FROM JES?  SJB\n         BE    CALLLIB             YES. GO CALL LIBRARIAN           SJB\n*                                                                   SJB\n         LA    R1,4                FOR 'COMPARE'                    SJB\n         C     R1,SSOBRETN         ARE WE OUT OF ELIGIBLE DATA SETS?SJB\n         BNE   SNAPIT              NO. SOMETHING WRONG. TERMINATE   SJB\n         SPACE 1                                                    SJB\nSETWAIT  DS    0H                                                   SJB\n         SPACE 1                                                    SJB\n         MODESET KEY=ZERO          GET INTO KEY ZERO                SJB\n         SPACE 1                                                    SJB\n*                                                                   SJB\nWAIT     DS    0H                                                   SJB\n         STIMER REAL,POSTWAIT,BINTVL=WTIME TO KILL SOME TIME        SJB\n         SPACE 1                                                    SJB\n         MVI   STIMRECB,X'00'      CLEAR ECB                        SJB\n         L     R2,ECBL2PTR         POINT TO SECOND ECBLIST          SJB\n         SPACE 1                                                    SJB\n         WAIT  1,ECBLIST=(R2),LONG=YES WAIT FOR WORK, CMND, STIMER EXIT\n         SPACE 1                                                    SJB\n*                                                                   SJB\n         TM    STIMRECB,X'40'      WERE WE POSTED BY STIMER EXIT?   SJB\n         LA    R3,GETDS            PREPARE TO REQUEST A DATA SET IF YES\n         BO    RESETPK             YES. GET OUT OF KEY 0 AND CONTINUEJB\n         SPACE 1                                                    SJB\n         TTIMER CANCEL             CANCEL REMAINDER OF TIMER INTERVALJB\n         SPACE 1                                                    SJB\nCHKCMND  L     R2,CMDECBP2         GET COMMAND ECB ADDRESS          SJB\n         TM    0(R2),X'50'         DID OPERATOR ENTER A COMMAND?    SJB\n         MVI   0(R2),X'00'         CLEAR ECB IN ANY EVENT           SJB\n         LA    R3,STOPWTR          PREPARE TO TERMINATE IF STOP CMNDSJB\n         BO    RESETPK             IT IS. GET OUT OF KEY 0 AND HALT SJB\n         LA    R3,FREECIB          PREPARE TO FREE CIB IF MODIFY CMNDJB\n         BM    RESETPK             FREE CIB AND GO REQUEST A DATA SETJB\n         B     WAIT                GO WAIT FOR CMND OR END OF INTERVALB\n         SPACE 1                                                    SJB\n         SPACE 1                                                    SJB\nFREECIB  L     R2,COMMLPTR         GET COMMAND LIST ADDRESS         SJB\n         L     R3,COMMCIB          GET CIB POINTER                  SJB\n         SPACE 1                                                    SJB\n         QEDIT ORIGIN=COMMCIB,BLOCK=(R3) FREE CIB                   SJB\n         QEDIT ORIGIN=COMMCIB,CIBCTR=1   INDICATE 1 CIB TO BE CHAINEDJB\n         SPACE 1                                                    SJB\n         B     GETDS               GO REQUEST A DATA SET FROM JES   SJB\n         SPACE 2                                                    SJB\nRESETPK  DS    0H                                                   SJB\n         MODESET KEY=NZERO         GET OUT OF KEY ZERO              SJB\n         SPACE 1                                                    SJB\n         BR    R3                  CONTINUE AS DETERMINED EARLIER   SJB\n         DROP  R2                                                   SJB\n         EJECT                                                      SJB\nCALLLIB  DS    0H                                                   SJB\n         LIBWTO 'ENTERED CALLLIB'                                   SJB\n*                                                                   SJB\n         LA    R1,WORK1            PASS WORK AREA ADDR              SJB\n         L     R15,=A(LIBMAIN)                                      SJB\n         BALR  14,15               CALL LIBRARIAN                   SJB\n*                                                                   SJB\n*              SNAPID IS SET IN LIBMAIN ROUTINE                     SJB\n*                                                                   SJB\n         LTR   R15,R15             WAS CALL GOOD?                   SJB\n         BNZ   SNAPIT              NO GO SNAP                       SJB\n*                                                                   SJB\n         LIBWTO 'EXIT    CALLLIB'                                   SJB\n         B     GETDS               NO. GO WAIT FOR WORK OR OPER CMNDSJB\n         EJECT                                                      SJB\nSTOPWTR  OI    SSSOFLG2,SSSOCTRL   INDICATE WRITER TERMINATING      SJB\n         SPACE 1                                                    SJB\n         MODESET MODE=SUP          GET INTO SUPERVISOR STATE        SJB\n         SPACE 1                                                    SJB\n         LA    R1,LWASSPRM         LOAD ADDRESS OF SSOB             SJB\n         SPACE 1                                                    SJB\n         IEFSSREQ                  TELL SUBSYSTEM WE ARE SHUTTING DOWNB\n         SPACE 1                                                    SJB\n         MODESET MODE=PROB         GET OUT OF SUPERVISOR STATE      SJB\n         SPACE 2                                                    SJB\nENDWTR   WTO 'LIBSPOOL:  JCLLIST IS SHUTTING DOWN',ROUTCDE=2,DESC=4 SJB\n         SPACE 1                                                    SJB\n         B     MAINRET                                              SJB\nMAINRET  DS    0H                                                   SJB\n         LA    R4,LWADCBRP         ADDR OR REPORT DCB               SJB\n         CLOSE ((R4))              CLOSE REPORT FILE                SJB\n         LH    R15,RETCODE         RELOAD RETCODE                   SJB\n         RELEASE LWORK1,RC=(15)                                     SJB\n         SPACE 2                                                    SJB\nSNAPIT   DS    0H                                                   SJB\n         LA    R4,SNAPDCB                                           SJB\n         OPEN  ((R4),(OUTPUT))     FOR SNAP, FOLLOWING              SJB\n         SPACE 1                                                    SJB\n         LA    R2,0(,R13)                                           SJB\n         LA    R3,LWORK1(,R13)                                      SJB\n         SR    R5,R5                                                SJB\n         IC    R5,SNAPID                                            SJB\n         SNAP  DCB=SNAPDCB,ID=(5),PDATA=ALL,                        SJBX\n               STORAGE=((2),(3))                                    SJB\n         SPACE 1                                                    SJB\n         B     STOPWTR             TERMINATE WRITER                 SJB\n         PUSH  USING               SAVE BASE REGISTER INFORMATION   SJB\n         DROP  R12                 DROP PROGRAM BASE REGISTERS      SJB\n         EJECT                                                      SJB\nPOSTWAIT EQU   *                   STIMER EXIT                      SJB\n         USING POSTWAIT,R15        ESTABLISH ADDRESSABILITY         SJB\n         STM   R14,R12,12(R13)     SAVE REGISTERS                   SJB\n         SPACE 1                                                    SJB\n         POST  STIMRECB            INDICATE END OF INTERVAL         SJB\n         SPACE 1                                                    SJB\n         LM    R14,R12,12(R13)     RESTORE REGISTERS                SJB\n         BR    R14                 RETURN TO SYSTEM                 SJB\n         SPACE 1                                                    SJB\n         POP   USING               RESTORE PREVIOUS BASE REG STATUS SJB\n         EJECT                                                      SJB\nMVCPARM  MVC   PARMCARD(*-*),2(R1) MOVE IN PARM FIELD               SJB\nCOMMLPTR DC    A(0)                PTR FROM EXTRACT (TO ECB & CIB PTRS)\n*                                                                   SJB\nCMNDECBP DC    X'80',AL3(0)        PTR TO ECB POSTED WHEN CMD ISSUE SJB\n*                                                                   SJB\nECBL2PTR DC    A(CMDECBP2)         PTR TO SECOND ECBLIST            SJB\nCMDECBP2 DC    A(0)                PTR TO COMMAND ECB               SJB\nTIMRECBP DC    X'80',AL3(STIMRECB) PTR TO ECB POSTED BY STIMER EXIT SJB\nSTIMRECB DC    F'0'                ECB POSTED BY STIMER EXIT        SJB\nWTIME    DC    F'3000'             1/2 MINUTE INTERVAL FOR STIMER   SJB\nBLANKS   DC    CL80' '             BLANKS                           SJB\n         LTORG                                                      SJB\n         EJECT                                                      SJB\nSNAPDCB  DCB   DDNAME=SNAP,DSORG=PS,MACRF=W,                        SJB*\n               RECFM=VBA,LRECL=125,BLKSIZE=882                      SJB\n         EJECT                                                      SJB\nRPTDCB   DCB   DDNAME=REPORT,DSORG=PS,MACRF=PM,                     SJB*\n               RECFM=FB,LRECL=80,BLKSIZE=6160                       SJB\n         DS    0F                                                   SJB\nRPTDCBL  EQU   *-RPTDCB                                             SJB\n         DROP  R12                 DROP PROGRAM BASE REGISTERS      SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n*        LIBMAIN - DOES PROCESSING OF ALL DATA FOR 1 JOB ONLY       SJB\n*                                                                   SJB\n*        REG   INPUT               USAGE                            SJB\n*                                                                   SJB\n*        R1    PARM REG            PARM/WORK REG                    SJB\n*        R2    N/A                 LIBPUT RECORD ADDR               SJB\n*        R3    N/A                 LENGTH OF INPUT RECORD           SJB\n*        R4    N/A                 WORK REG                         SJB\n*        R5    N/A                 ADDR OF INPUT RECORD             SJB\n*        R6    N/A                 BASE REG #2                      SJB\n*        R7    N/A                 BAL  REG FOR LIBPUT              SJB\n*        R8    N/A                 BAL  REG FOR READNEXT            SJB\n*        R9    N/A                 BAL  REG FOR OTHER ROUTINES      SJB\n*        R10   N/A                 BASE REG FOR SSOB                SJB\n*        R11   N/A                 BASE REG FOR WORK1 DSECT         SJB\n*        R12   N/A                 BASE REG #1                      SJB\n*        R13   N/A                 SAVE AREA REG                    SJB\n*        R14   RETURN ADDR         BALR REG                         SJB\n*        R15   ENTRY POINT         BALR REG/ RETURN CODE            SJB\n         SPACE 3                                                    SJB\nLIBMAIN  CSECT                                                      SJB\n         CONNECT LWORK2,WORK2,BASE=(R12,R6),CLEAR=YES,PARM=R11      SJB\n         EJECT                                                      SJB\n         USING SSOB,R10            ESTABLISH ADDRESSABILITY         SJB\n         USING WORK1,R11           GET ADDR. TO 1 SAVEAREA          SJB\n         LA    R10,LWASSOB         ADDR OF SSOB                     SJB\n         LIBWTO 'ENTERED LIBMAIN'                                   SJB\n*                                                                   SJB\n         TM    FLAG2,$TITLE        IS TITLE REQUIRED NOW            SJB\n         BNO   NOTITLE             NO,                              SJB\n         LA    R2,TITLE1                                            SJB\n         BAL   R7,RPTPUT                                            SJB\n         LA    R2,TITLE2                                            SJB\n         BAL   R7,RPTPUT                                            SJB\n         NI    FLAG2,255-$TITLE    TURN OFF TITLE FLAG              SJB\nNOTITLE  DS    0H                                                   SJB\n*                                                                   SJB\n         EJECT                                                      SJB\nINITLOOP DS    0H                                                   SJB\n         BAL   R9,LIBINIT          INIT, SINCE THIS IS FIRST TIME   SJB\nALLOCLOP DS    0H                                                   SJB\n         BAL   R9,ALLOCDS          GO ALLOCATE IT                   SJB\n*                                  FOR THIS JOB AND SET R8          SJB\nOPENLOOP DS    0H                                                   SJB\n         BAL   R9,OPENIN           OPEN INPUT FILE                  SJB\n*                                                                   SJB\nREADNEXT GET   LWADCBIN            GET RECORD ADDR                  SJB\n         LR    R5,R1               SAVE INPUT RECORD ADDR           SJB\n*                                                                   SJB\n         LA    R1,LWADCBIN                                          SJB\n         USING IHADCB,R1                                            SJB\n         LH    R3,DCBLRECL         GET INPUT RECORD LENGTH          SJB\n         DROP  R1                                                   SJB\n*                                                                   SJB\n         LA    R2,CARDOUT          GET CARD OUTPUT ADDR             SJB\n         MVC   CARDOUT,BLANKS2                                      SJB\n*              R8 IS INITIALLY SET IN ALLOCDS FOR PSO# 2,3,4        SJB\n*              AND THE CHECK ROUTINE SETS IT ALSO                   SJB\n         BR    R8                  GO TO CHECK ROUTINE              SJB\n*              AND WRITE THE OUTPUT RECORDS                         SJB\n         EJECT                                                      SJB\nEOF      DS    0H                                                   SJB\n         LIBWTO 'ENTERED EOF     '                                  SJB\n*                                                                   SJB\n         MVC   LWACLOSE,CLOSE                                       SJB\n         LA    R4,LWADCBIN                                          SJB\n         CLOSE ((R4)),MF=(E,LWACLOSE) CLOSE INPUT FILE              SJB\n         SPACE 2                                                    SJB\n*                                                                   SJB\n         BAL   R9,FREEKEEP         FREE KEEP PSO                    SJB\n*                                                                   SJB\n*              GET NEXT PSO#                                        SJB\n*                                                                   SJB\n         B     NEXTSSRQ            GET NEXT PSO FOR THIS JOB        SJB\n*                                                                   SJB\nNEXTSSRQ DS    0H                                                   SJB\n         LIBWTO 'ENTERED NEXTSSRQ'                                  SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n*                                                                   SJB\n*              GO DO A SUB-SYSTEM REQUEST                           SJB\n*                                                                   SJB\n         L     R15,=A(SSREQ)                                        SJB\n         LA    R1,WORK1            POINT TO MAIN WORK AREA          SJB\n         BALR  R14,R15                                              SJB\n*                                                                   SJB\n*              END OF SUB-SYSTEM REQUEST                            SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n         MVI   SNAPID,2                                             SJB\n         LH    R15,RETCODE         GET IEFSSREQ RETURN CODE         SJB\n         LTR   R15,R15             SUBSYSTEM REQUEST SUCCESSFUL?    SJB\n         BNZ   SNAPIT2             NO. TERMINATE WRITER             SJB\n*                                                                   SJB\n         C     R15,SSOBRETN        DID WE GET A DATA SET FROM JES?  SJB\n         BE    ALLOCLOP            YES. GO ALLOC IT                 SJB\n*                                                                   SJB\n         LA    R1,4                FOR 'COMPARE'                    SJB\n         C     R1,SSOBRETN         ARE WE OUT OF ELIGIBLE DATA SETS?SJB\n         BNE   SNAPIT2             NO. SOMETHING WRONG. TERMINATE   SJB\n         B     NOPSOLFT            NO PSO DSN LEFT                  SJB\n         SPACE 3                                                    SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n*                                                                   SJB\nNOPSOLFT DS    0H                                                   SJB\n         LIBWTO 'ENTERED NOPSOLFT'                                  SJB\n         CLC   DSFLAGS,ALLDS       DID WE PROCESS 2,3,4 PSO         SJB\n         BE    CLOSEOUT            YES, THEN CLOSEOUT               SJB\n         OI    FLAG,$PRINT         NOPE, THEN TURN ON PRINT FLAG    SJB\n         B     CLOSEOUT                                             SJB\nCLOSEOUT DS    0H                                                   SJB\n         LIBWTO 'ENTERED CLOSEOUT'                                  SJB\n         MVC   DSCERROR,BLANKS2    ASSUME NO PRINT ERROR            SJB\n         TM    FLAG,$PRINT         SEE IF NOT ALLDS OR JCL ERROR    SJB\n         BNO   CLOSNERR                                             SJB\n         MVC   DSCERROR,=C'PRINTED' MOVE IN ERROR FLAG              SJB\nCLOSNERR LA    R2,SELCARD          -SEL  CARD                       SJB\n         BAL   R7,LIBPUT           PUT IT OUT                       SJB\n         LA    R2,DSCCARD          -DESC CARD                       SJB\n         BAL   R7,LIBPUT           PUT IT OUT                       SJB\n         LA    R2,ENDCARD          -END  CARD                       SJB\n         BAL   R7,LIBPUT           PUT IT OUT                       SJB\n*                                                                   SJB\n         MVC   LWACLOSE,CLOSE                                       SJB\n         LA    R4,LWADCBOT                                          SJB\n         CLOSE ((R4)),MF=(E,LWACLOSE)                               SJB\n         OI    FLAG,$CLOSING       INDICATE WE ARE CLOSING          SJB\n*                                                                   SJB\n         LA    R1,LIBPARM                                           SJB\n         LINK  EP=LIBRARY          LINK TO LIBRARY                  SJB\n         LR    R5,R15              SAVE R15                         SJB\n*                                                                   SJB\n         LA    R4,LWADCBRP         ADDR OR REPORT DCB               SJB\n         USING IHADCB,R4                                            SJB\n         TM    DCBOFLGS,DCBOFOPN   DID OPEN WORK?                   SJB\n         DROP  R4                                                   SJB\n         BNO   CLOSNRPT            NO                               SJB\n         MVC   CARDOUT,BLANKS2                                      SJB\n         MVC   CARDOUT+00(8),ADDJOB MOVE IN MEMBER NAME             SJB\n         MVC   CARDOUT+10(8),PGMJOBN MOVE IN JOBNAME                SJB\n         MVC   CARDOUT+20(7),PGMUSER MOVE IN USERID                 SJB\n         MVC   CARDOUT+30(5),DSCDATE MOVE IN JOB BEGIN DATE         SJB\n         MVC   CARDOUT+40(4),DSCTON  MOVE IN JOB BEGIN TIME         SJB\n         MVC   CARDOUT+50(4),DSCTOFF MOVE IN JOB STOP  TIME         SJB\n         MVC   CARDOUT+60(7),DSCERROR MOVE IN ERROR FLAG            SJB\n         LTR   R5,R5                                                SJB\n         BZ    CLOSEMSG                                             SJB\n         MVC   CARDOUT+70(10),=CL10'LIB ERROR'                      SJB\n         WTO 'LIBSPOOL: JCLLIST HAS LIBRARY ERROR',ROUTCDE=2,DESC=4 SJB\n         MVI   SNAPID,10           SET SNAP NUMBER                  SJB\n         STH   R5,RETCODE          SAVE RETURN CODE                 SJB\nCLOSEMSG LA    R4,LWADCBRP                                          SJB\n         PUT   (R4),CARDOUT                                         SJB\n         CLI   SNAPID,10           WAS THERE A LIBRARY ERROR        SJB\n         BE    SNAPIT2             YES, THEN TERMINATE              SJB\nCLOSNRPT DS    0H                                                   SJB\n*                                                                   SJB\n         MVI   SSSODSN,X'00'       INDICATE NEW JOB GROUP           SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n*              ONCE WE GET TO THIS POINT ONLY PSO # 2,3,4           SJB\n*              WILL STILL BE AROUND FOR THIS JOB, BECAUSE           SJB\n*              ALLOCDS SUBROUTINE HAS ALREADY FREE-RLSE THE         SJB\n*              OTHER PSO'S                                          SJB\n*                                                                   SJB\n*              FOR PSO 2-4, RE-AQUIRE PSO, ALLOC AND                SJB\n*              FREE-REQR IF $PRINT ERROR FLAG OR                    SJB\n*              FREE-DEL  IF NO ERROR                                SJB\n*                                                                   SJB\n         LA    R5,999              LOAD MAX LOOP COUNT              SJB\nCLOSLOOP DS    0H                                                   SJB\nCLOSBPSO DS    0H                  RETURN FROM ALLOCDS IF           SJB\n*                                  BADPSO# ENCOUNTERED (BAD PSO     SJB\n*                                  HAS BEEN FREE-RLSE)              SJB\n*                                                                   SJB\n*              GO DO A SUB-SYSTEM REQUEST                           SJB\n*                                                                   SJB\n         L     R15,=A(SSREQ)                                        SJB\n         LA    R1,WORK1            POINT TO MAIN WORK AREA          SJB\n         BALR  R14,R15                                              SJB\n*                                                                   SJB\n*              END OF SUB-SYSTEM REQUEST                            SJB\n*                                                                   SJB\n         SPACE 3                                                    SJB\n         MVI   SNAPID,3                                             SJB\n         LH    R15,RETCODE         GET IEFSSREQ RETURN CODE         SJB\n         LTR   R15,R15             SUBSYSTEM REQUEST SUCCESSFUL?    SJB\n         BNZ   SNAPIT2             NO. TERMINATE WRITER             SJB\n*                                                                   SJB\n         C     R15,SSOBRETN        DID WE GET A DATA SET FROM JES?  SJB\n         BE    CLOSALOC            YES. GO ALLOC IT                 SJB\n*                                                                   SJB\n         LA    R1,4                FOR 'COMPARE'                    SJB\n         C     R1,SSOBRETN         ARE WE OUT OF ELIGIBLE DATA SETS?SJB\n         BNE   SNAPIT2             NO. SOMETHING WRONG. TERMINATE   SJB\n         B     LIBRET              NO PSO DSN LEFT                  SJB\n*                                                                   SJB\nCLOSALOC DS    0H                                                   SJB\n         BAL   R9,ALLOCDS          ALLOC DSN                        SJB\n         TM    FLAG,$PRINT         WAS THERE AN ERROR               SJB\n         BO    CLOSRLSE            YES, DO FREE RLSE, REQUEUECLS    SJB\n         BAL   R9,FREEDEL          ELSE, DO FREE DELETE             SJB\n         B     CLOSINCR            GO TO BCT                        SJB\nCLOSRLSE DS    0H                                                   SJB\n         BAL   R9,FREEREQR         FREE REQUEUE CLASS RLSE          SJB\nCLOSINCR DS    0H                                                   SJB\n         BCT   R5,CLOSLOOP         GO TO IT                         SJB\n         B     LIBRET                                               SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n         EJECT                                                      SJB\nLIBRET   DS    0H                                                   SJB\n         LIBWTO 'ENTERED LIBRET'                                    SJB\n*        MVC   LWACLOSE,CLOSE                                       SJB\n*        CLOSE (LWADCBOT),MF=(E,LWACLOSE)                           SJB\n         RELEASE LWORK2,RC=0                                        SJB\n         SPACE 3                                                    SJB\nLIBRET2  DS    0H                                                   SJB\n         LIBWTO 'ENTERED LIBRET2'                                   SJB\n*                                                                   SJB\n         MVC   LWACLOSE,CLOSE                                       SJB\n         CLOSE (LWADCBOT),MF=(E,LWACLOSE)                           SJB\n*                                                                   SJB\n         LH    R15,RETCODE                                          SJB\n         LTR   R15,R15             IS R15 > 0                       SJB\n         BNP   *+8                 YES                              SJB\n         LA    R15,32              NOPE, GIVE A BAD RETCODE         SJB\n         RELEASE LWORK2,RC=(15)                                     SJB\n         EJECT                                                      SJB\nALLOCDS  DS    0H                                                   SJB\n*                                                                   SJB\n*              ENTERED BY A        BALR   R9,ALLOCDS                SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED ALLOCDS'                                   SJB\n         MVC   CARDOUT(44),SSSODSN                                  SJB\n         LA    R2,CARDOUT                                           SJB\n         BAL   R7,RPTPUT2                                           SJB\n*                                                                   SJB\n         MVC   ALDDNAM,BLANKS2     MOVE BLANKS TO DDNAME            SJB\n         MVC   ALDSN,SSSODSN       MOVE DSNAME INTO ALLOCATE TEXT U SJB\n         USING S99RB,R14           ESTABLISH ADDRESSABILITY         SJB\n         LA    R14,S99AREA         SET UP SVC 99 PARM AREA BASE REG SJB\n         MVI   S99VERB,S99VRBAL    INDICATE ALLOC. TO BE PERFORMED  SJB\n         LA    R1,ALTUPTR          ADDR OF ALLOCATION TEXT UNIT PTRSSJB\n         ST    R1,S99TXTPP         STORE IN SVC 99 REQUEST BLOCK    SJB\n         LA    R1,S99PARM          LOAD ADDRESS OF SVC 99 PARM AREA SJB\n         DROP  R14                                                  SJB\n         SPACE 1                                                    SJB\n         DYNALLOC                  PERFORM DYNAMIC ALLOCATION       SJB\n         SPACE 1                                                    SJB\n         STH   R15,RETCODE         SAVE SVC 99 RETURN CODE          SJB\n         MVI   SNAPID,4            IDENTIFY SNAP ORIGIN             SJB\n         LTR   R15,R15             TEST SVC 99 RETURN CODE          SJB\n         BNZ   SNAPIT2             NO GOOD. SNAP AND TERMINATE      SJB\n         SPACE 2                                                    SJB\n*                                                                   SJB\n         MVC   CARDOUT(44),SSSODSN                                  SJB\n         LA    R2,CARDOUT                                           SJB\n         BAL   R7,RPTPUT2                                           SJB\n*                                                                   SJB\n         CLC   SSSODSN+14(5),PSODS IS THIS A PSO DATA SET?          SJB\n         BNE   BADPSO#             NO. GO DELETE IT                 SJB\n         CLI   SSSODSN+19,C'2'     DETERMINE IF THIS                SJB\n         BL    BADPSO#                IS A DATA SET WE              SJB\n         CLI   SSSODSN+19,C'4'           WISH TO PROCESS            SJB\n         BH    BADPSO#             IE PSO #2(LOG), #3(JCL), #4(MSG) SJB\n*                                                                   SJB\n*              STORE PSO# RELATIVE TO 0 IN DSTYPE                   SJB\n*                                                                   SJB\n         TM    FLAG,$CLOSING       ARE WE CLOSEING                  SJB\n         BO    ALLOCDS1            YES                              SJB\n*                                                                   SJB\n         XR    R4,R4               CLEAR                            SJB\n         IC    R4,SSSODSN+19       GET PSO NUMBER (EBCDIC)          SJB\n         LA    R1,242              CONVERT PSO NUMBER TO BINARY AND SJB\n         SR    R4,R1               CHANGE SCALE: 0=LOG, 1=JCL, 2=MSGSJB\n         STC   R4,DSTYPE           SAVE CURRENT DATA SET TYPE       SJB\n         STC   R4,DSFLAGS(R4)      SAVE IT ALSO IN DSFLAGS+0(R4)    SJB\n         LR    R8,R4               COMPUTE OFFSET IN                SJB\n         SLL   R8,2                   BRANCH-ADDRESS TABLE          SJB\n         L     R8,DSPRCAD(R8)      GET APPROPRIATE BRANCH ADDRESS   SJB\n         SPACE 1                                                    SJB\n*                                                                   SJB\n         MVC   CARDOUT(08),ALDDNAM                                  SJB\n         LA    R2,CARDOUT                                           SJB\n         BAL   R7,RPTPUT2                                           SJB\n*                                                                   SJB\nALLOCDS1 DS    0H                                                   SJB\n         BR    R9                                                   SJB\n         SPACE 3                                                    SJB\nBADPSO#  DS    0H                                                   SJB\n         BAL   R9,FREERLSE         RLSE BAD PSO# FROM HOLD          SJB\n*                                                                   SJB\n         TM    FLAG,$CLOSING       ARE WE CLOSEING                  SJB\n         BO    CLOSBPSO            YES                              SJB\n*                                                                   SJB\n         B     NEXTSSRQ            GET NEXT PSO                     SJB\n         EJECT                                                      SJB\nLIBINIT  DS    0H                                                   SJB\n*                                                                   SJB\n*              ENTERED BY A        BALR   R9,LIBINIT                SJB\n*                                                                   SJB\n*              OPEN LIBRARIAN SYSIN FILE                            SJB\n*              CREATE AND WRITE -ADD CARD                           SJB\n*              CREATE AND WRITE -PGMR CARD                          SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED LIBINIT'                                   SJB\n         MVC   LWAOPEN,OPEN                                         SJB\n         MVC   LWADCBOT,OUTDCB     MOVE IN MODEL                    SJB\n         LA    R4,LWADCBOT                                          SJB\n         OPEN  ((R4),(OUTPUT)),MF=(E,LWAOPEN)                       SJB\n*                                  OPEN LIBRARIAN SYSIN FILE        SJB\n         USING IHADCB,R4                                            SJB\n         TM    DCBOFLGS,DCBOFOPN   DID OPEN WORK?                   SJB\n         DROP  R4                                                   SJB\n         BO    SYSINOK             YES                              SJB\n*                                                                   SJB\n         MVI   SNAPID,5            SET SNAPID                       SJB\n         LA    R15,24              SET FUNNY RC                     SJB\n         STH   R15,RETCODE         SAVE IT                          SJB\n         B     SNAPIT2             SNAP IT                          SJB\nSYSINOK  DS    0H                                                   SJB\n*                                                                   SJB\n         TIME  DEC                 GET JULIAN DAY FOR MODULE NAME   SJB\n         STH   R1,JULDTEPK         STORE PACKED JULIAN DATE         SJB\n         UNPK  JULIANDY,JULDTEPK   UNPACK JULIAN DATE               SJB\n*                                                                   SJB\n         MVC   ADDJOB+1(3),JULIANDY+0 MOVE JULIAN DAY TO -ADD CARD  SJB\n         MVC   ADDJOB+4(4),SSSOJOBI+4 MOVE IN JOB# TO -ADD CARD     SJB\n         MVI   ADDJOB+0,C'A'       INITIALIZE TO SEQ. CHAR TO \"A\"   SJB\n         BAL   R7,LIBFAIR          CHECK AND SEE IF OK              SJB\n         MVC   DSCJOB,ADDJOB       MOVE IN JOB# TO -DSC CARD        SJB\n         MVC   SELJOB,ADDJOB       MOVE IN JOB# TO -SEL CARD        SJB\n*                                                                   SJB\n         MVC   PGMJOBN,SSSOJOBN    MOVE JOBNAME TO -PGMR FIELD      SJB\n         MVC   PGMUSER,SSSOUSER    MOVE USERID  TO -PGMR FIELD      SJB\n*                                                                   SJB\n*              TRANSLATE ALL BLANKS TO '.' IN -PGMR CARD(OPERANDS)  SJB\n*                                                                   SJB\n         LA    R1,PGMJOBN          GET JOBNAME ADDR                 SJB\n         LA    R2,L'PGMJOBN+L'PGMUSER LENGTH TO CHECK               SJB\nTRANS1   DS    0H                                                   SJB\n         CLI   0(R1),C' '          IS IT BLANK                      SJB\n         BE    TRANS2              YES                              SJB\n         CLI   0(R1),X'00'         IS IT NULL                       SJB\n         BNE   TRANS3              NO                               SJB\nTRANS2   MVI   0(R1),C'.'          YES, TRANSLATE                   SJB\nTRANS3   LA    R1,1(,R1)           ADD ONE                          SJB\n         BCT   R2,TRANS1                                            SJB\n*                                                                   SJB\n         MVC   DLMJOB,ADDJOB       MOVE IN JOB# TO -DSC CARD        SJB\n*        LA    R2,DLMCARD          PUT OUT -DLM CARD                SJB\n*        BAL   R7,LIBPUT                                            SJB\n*                                                                   SJB\n         LA    R2,OPTCARD          PUT OUT -OPT CARD                SJB\n         BAL   R7,LIBPUT                                            SJB\n*                                                                   SJB\n         LA    R2,ADDCARD          PUT OUT -ADD CARD                SJB\n         BAL   R7,LIBPUT                                            SJB\n*                                                                   SJB\n         LA    R2,PGMCARD          PUT OUT -PGMR CARD               SJB\n         BAL   R7,LIBPUT                                            SJB\n*                                                                   SJB\n         BR    R9                  RETURN                           SJB\n*                                                                   SJB\n         EJECT                                                      SJB\nLIBFAIR  DS    0H                                                   SJB\n*                                                                   SJB\n*              LIBRARIAN FAIR      BAL  R7,LIBFAIR                  SJB\n*                                                                   SJB\n*              THIS CHECKS TO SEE IF THE MODULE NAME TO BE ADDED    SJB\n*              TO LIBRARY EXISTS. IF SO THEN THE LAST               SJB\n*              CHARACTER OF ADDJOB (AJJJNNNN) IN INCREMENTED        SJB\n*              AND THE TEST IS MADE AGAIN. THIS PROCESS CONTINUES   SJB\n*              UNTIL THE NAME IS UNIQUE OR UNTIL THE CHARACTER      SJB\n*              '@' IS REACHED $PRINT IS TURNED ON                   SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED LIBFAIR  '                                 SJB\n         CALL  MASTOPN,(0,FAIRFLG),VL                               SJB\n         CLI   FAIRFLG,C'0'        DID LIBRARIAN OPEN WORK          SJB\n         BNE   FAIRBAD1            NOPE, BAD                        SJB\n*                                                                   SJB\n         MVC   FAIRMOD,BLANKS2                                      SJB\n         MVC   FAIRMOD(8),ADDJOB   MOVE IN ADDJOB                   SJB\n         LA    R4,FAIRSEQ                                           SJB\nFAIRCHK  DS    0H                                                   SJB\n         CALL  MASTMOD,(FAIRMOD,FAIRFLG),VL SEE IF MODULE EXISTS    SJB\n         CLI   FAIRFLG,C'1'        DOES IT EXIST                    SJB\n         BE    FAIRXIT1            NO, THEN EXIT THIS ONES OK       SJB\n         CLI   FAIRFLG,C'0'        NORMAL RETURN CODE               SJB\n         BNE   FAIRBAD2            BAD RETURN CODE                  SJB\n         LA    R4,1(,R4)           GET NEW SEQUENCE CHARACTER ADDR  SJB\n         MVC   FAIRMOD+0(1),0(R4)  MOVE IN NEW CHARACTER            SJB\n         CLI   0(R4),C'@'          IS THIS THE END                  SJB\n         BE    FAIRXIT2                                             SJB\n         B     FAIRCHK                                              SJB\nFAIRXIT2 DS    0H                                                   SJB\n         OI    FLAG,$PRINT                                          SJB\nFAIRXIT1 DS    0H                                                   SJB\n         MVC   ADDJOB,FAIRMOD                                       SJB\n         CALL  MASTCLS,                                             SJB\n         BR    R7                                                   SJB\n*                                                                   SJB\nFAIRBAD1 DS    0H                  MASTOPN FAILED                   SJB\n*                                                                   SJB\n         MVI   SNAPID,6            SET SNAPID                       SJB\n         LA    R15,24              SET FUNNY RC                     SJB\n         STH   R15,RETCODE         SAVE IT                          SJB\n         B     SNAPIT2             SNAP IT                          SJB\n*                                                                   SJB\nFAIRBAD2 DS    0H                  MASTMOD FAILED                   SJB\n*                                                                   SJB\n         MVI   SNAPID,7            SET SNAPID                       SJB\n         LA    R15,24              SET FUNNY RC                     SJB\n         STH   R15,RETCODE         SAVE IT                          SJB\n         B     SNAPIT2             SNAP IT                          SJB\nFAIRSEQ  DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ@'                       SJB\nFAIRMOD  DC    CL8' '                                               SJB\nFAIRFLG  DC    C' '                                                 SJB\n         EJECT                                                      SJB\nFREEKEEP DS    0H                                                   SJB\n*                                                                   SJB\n*              FREEKEEP SYSOUT     BAL  R9,FREEKEEP                 SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED FREEKEEP'                                  SJB\n         LA    R1,TUFRKEPH         KEEP, HOLD                       SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\nFREERLSE DS    0H                                                   SJB\n*                                                                   SJB\n*              FREERLSE SYSOUT     BAL  R9,FREERLSE                 SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED FREERLSE'                                  SJB\n         LA    R1,TUFRKEPR         KEEP, RELEASE                    SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         SPACE 3                                                    SJB\nFREEDEL  DS    0H                                                   SJB\n*                                                                   SJB\n*              FREEDEL SYSOUT      BAL R9,FREEDEL                   SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED FREEDEL'                                   SJB\n         LA    R1,TUFRDEL          DELETE, RELEASE                  SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         SPACE 3                                                    SJB\nFREEREQH DS    0H                                                   SJB\n*                                                                   SJB\n*              FREEREQ HOLD SYSOUT BAL R9,FREEREQH                  SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED FREEREQH'                                  SJB\n         LA    R1,TUFRREQH         CHANGE CLASS, HOLD               SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         SPACE 3                                                    SJB\nFREEREQR DS    0H                                                   SJB\n*                                                                   SJB\n*              FREEREQ RLSE SYSOUT BAL R9,FREEREQR                  SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED FREEREQR'                                  SJB\n         LA    R1,TUFRREQR         CHANGE CLASS, RELEASE            SJB\n         ST    R1,LWAUALTU                                          SJB\n         B     UNALLOC                                              SJB\n         EJECT                                                      SJB\nUNALLOC  DS    0H                                                   SJB\n         CLC   =XL8'00',ALDDNAM    IS IT NULLS                      SJB\n         BER   R9                  YES, EXIT                        SJB\n         CLC   =CL8' ',ALDDNAM     IS IT BLANKS                     SJB\n         BER   R9                  YES, EXIT                        SJB\n         MVC   UALDDNAM,ALDDNAM    MOVE DDNAME TO UNALLOCATION TXT  SJB\n         LIBWTO 'ENTERED UNALLOC'                                   SJB\n         USING S99RB,R14           ESTABLISH ADDRESSABILITY         SJB\n         LA    R14,S99AREA         SET UP SVC 99 PARM AREA BASE REG SJB\n         MVI   S99VERB,S99VRBUN    INDICATE UNALLOCATION TO BE DONE SJB\n*                                                                   SJB\n         L     R1,LWAUALTU         ADDR OF UNALLOCATION TU PTRS     SJB\n*                                                                   SJB\n         ST    R1,S99TXTPP         STORE IN SVC 99 REQUEST BLOCK    SJB\n         LA    R1,S99PARM          LOAD ADDRESS OF SVC 99 PARM AREA SJB\n         DROP  R14                                                  SJB\n         SPACE 1                                                    SJB\n         DYNALLOC                  PERFORM DYNAMIC UNALLOCATION     SJB\n*        SPACE 1                                                    SJB\n         STH   R15,RETCODE         SAVE SVC 99 RETURN CODE          SJB\n         MVI   SNAPID,8            IDENTIFY SNAP ORIGIN             SJB\n         LTR   R15,R15             TEST SVC 99 RETURN CODE          SJB\n         BNZ   SNAPIT2             NO GOOD. SNAP AND TERMINATE      SJB\n         BR    R9                  RETURN                           SJB\n         EJECT                                                      SJB\nOPENIN   DS    0H                                                   SJB\n*                                                                   SJB\n*              OPEN INPUT          BALR   R9,OPENIN                 SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED OPENIN '                                   SJB\n*                                                                   SJB\n         MVC   LWADCBIN,INDCB                                       SJB\n         LA    R4,LWADCBIN         INPUT DCB                        SJB\n         USING IHADCB,R4           ESTABLISH ADDRESSABILITY         SJB\n*                                                                   SJB\n         MVC   DCBDDNAM,ALDDNAM    MOVE DDNAME AS SET BY SVC 99 TO DCBB\n         OPEN  ((R4),(INPUT))      OPEN INPUT DATA SET              SJB\n         SPACE 1                                                    SJB\n         XC    RETCODE,RETCODE     CLEAR RETURN CODE FIELD          SJB\n         MVI   SNAPID,9            IDENTIFY SNAP ORIGIN             SJB\n         TM    DCBOFLGS,DCBOFOPN   WAS OPEN SUCCESSFUL?             SJB\n         BZ    SNAPIT2             NO. SNAP AND TERMINATE           SJB\n         DROP  R4                                                   SJB\n         BR    R9                                                   SJB\n         SPACE 3                                                    SJB\nLIBPUT   DS    0H                                                   SJB\n*                                                                   SJB\n*              LIBPUT              BAL  R7,LIBPUT                   SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED LIBPUT  '                                  SJB\n         TM    FLAG,$CLOSING       ARE WE CLOSING A JOB             SJB\n         BO    LIBPUT1             YES, OUTPUT FILE IS CLOSED       SJB\n         LA    R4,LWADCBOT                                          SJB\n         PUT   (R4),((R2))         PUT OUT RECORD                   SJB\nLIBPUT1  LA    R2,CARDOUT          GET CARD OUTPUT ADDR             SJB\n         MVC   CARDOUT,BLANKS2                                      SJB\n         BR    R7                                                   SJB\n         SPACE 3                                                    SJB\nRPTPUT2  DS    0H                                                   SJB\n*                      DEBUGGING                                    SJB\n*              RPTPUT2             BAL  R7,RPTPUT2                  SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED RPTPUT2'                                   SJB\n         TM    FLAG2,$DEBUG        IS THIS DEBUG OPTION             SJB\n         BNO   RPTPUT1             NO, THEN SKIP                    SJB\nRPTPUT   DS    0H                                                   SJB\n*                                                                   SJB\n*              RPTPUT              BAL  R7,RPTPUT                   SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED RPTPUT '                                   SJB\n         LA    R4,LWADCBRP                                          SJB\n         USING IHADCB,R4                                            SJB\n         TM    DCBOFLGS,DCBOFOPN   DID OPEN WORK?                   SJB\n         DROP  R4                                                   SJB\n         BNO   RPTPUT1             NO, EXIT NO REPORT               SJB\n         PUT   (R4),((R2))         PUT OUT RECORD                   SJB\nRPTPUT1  LA    R2,CARDOUT          GET CARD OUTPUT ADDR             SJB\n         MVC   CARDOUT,BLANKS2                                      SJB\n         BR    R7                                                   SJB\n         EJECT                                                      SJB\nSNAPIT2  DS    0H                                                   SJB\n*                                                                   SJB\n*                                                                   SJB\n*                                                                   SJB\n         LIBWTO 'ENTERED SNAPIT2'                                   SJB\n         B     LIBRET2                                              SJB\n*                                                                   SJB\n*                                                                   SJB\n*                                                                   SJB\n         EJECT\n*/ ***************************************************************** /*\n*                                                                     *\n*  THE FOLLOWING BLOCKS OF CODE DEFINE THE CRITERIA BY WHICH JOBS     *\n*  ARE SELECTED FOR POSSIBLE PRINTING BY LIBSPOOL.  EACH OF THE 3     *\n*  COMPONENTS, JES2 JOB LOG, JCL, AND SYSTEM MESSAGE BLOCKS (SMB'S/   *\n*  ALLOCATION/DEALLOCATION MESSAGES) OF ALL CLASS '&CLASS' JOBS ARE   *\n*  SCANNED FOR THE OCCURRENCE OF SIGNIFICANT MESSAGE IDENTIFICATION   *\n*  NUMBERS WHICH INDICATE THAT AN EXCEPTIONAL CONDITION OCCURRED DUR- *\n*  ING JOB PROCESSING (EG. JCL ERROR, ABEND, NOT CAT 2, ETC.). UPON   *\n*  THE OCCURRENCE OF THESE MESSAGE ID'S THE JOB IS FLAGGED FOR SUBSE- *\n*  QUENT PRINTING; OTHERWISE, JOB START/STOP INFORMATION IS EXTRACT-  *\n*  ED FOR INCLUSION ON A LIBRARIAN COMMENT CARD DURING THE PROCESS OF *\n*  ADDING THE JOB TO THE LIBSPOOL.                                    *\n*                                                                     *\n*/ ***************************************************************** /*\n*                                                                   SJB\n*              R2 = OUTPUT BUFFER ADDR                              SJB\n*              R3 = LENGTH OF INPUT RECORD                          SJB\n*              R5 = INPUT RECORD ADDR                               SJB\n*              R7 = BAL REG FOR LIBPUT                              SJB\n*              R8 = POINTS TO RETURN ADDR FROM READNEXT             SJB\n*                                                                   SJB\n         EJECT                                                      SJB\nJES2JLOG DS    0H                                                   SJB\n         LIBWTO 'ENTERED JES2LOG'                                   SJB\n         BAL   R8,READNEXT         SET CONT. ADDR AND IGNORE FIRST LINE\n         MVC   0(80,R2),0(R5)      MOVE LINE (80 CHARS) TO LIB IOAREA\n         MVI   0(R2),C'1'          SET NEW PAGE ASA CHAR\n         BAL   R7,LIBPUT           RETURN TO LIBRARIAN WITH LOG TITLE\n         MVI   0(R2),C'0'          SET DOUBLE SPACE ASA CHAR\n         LA    R7,READNEXT         SET NEXT ENTRY BRANCH ADDR\n         BAL   R8,LIBPUT           SET CONT. ADDR; RET WITH BLANK LINE\n         SPACE 1\n         MVI   0(R5),C' '          INSERT SINGLE SPACE ASA CHAR\n         CLC   20(5,R5),IEF45      IS THIS AN IEF45* MSG?\n         BNE   NOTIEF45            NO. CONTINUE\n         CLI   25(R5),C'3'         IEF450 TO IEF453?\n         BH    CONTDS1             NO. CONTINUE\nSETPRT   OI    FLAG,$PRINT         INDICATE JOB IS TO BE PRINTED\n         B     CONTDS1             CONTINUE\nNOTIEF45 CLC   20(7,R5),IEF251I    IS THIS A 'JOB CANCELLED' MSG?\n         BE    SETPRT              YES. GO FLAG JOB FOR PRINTING\n         CLC   20(8,R5),IIP026I    EMULATOR 'WRITE, DATA CHECK' MSG?\n         BE    SETPRT              YES. GO FLAG JOB FOR PRINTING\n         CLC   20(2,R5),REPLY      IS THIS AN OPERATOR REPLY?\n         BNE   CONTDS1             NO. CONTINUE\n         LA    R1,23(R5)           STARTING ADDRESS FOR SCAN\n         LA    R14,1               INCREMENT FOR BXLE\n         LA    R15,10(R1)          LAST ADDRESS FOR SCAN\nCHKCANCL CLC   1(6,R1),CANCEL      IS THIS A CANCEL REPLY?  WJS/01APR80\n         BE    SETPRT              YES. GO FLAG JOB FOR PRINTING\n         BXLE  R1,R14,CHKCANCL     CONTINUE CHECK FOR 'CANCEL'\n         B     CONTDS1             NO 'CANCEL'. CONTINUE\n         SPACE 1\nJCLDS    MVI   0(R2),C'1'          SET NEW PAGE ASA CHAR (OS/JCL)\n         BAL   R7,LIBPUT           RETURN TO LIBRARIAN WITH LOG TITLE\n         BALR  R8,0                SET CONT. ADDRESS\n         LA    R3,1(R3)            COMPENSATE FOR INSERTED ASA CHAR\n         MVC   1(79,R2),0(R5)      MOVE 79 CHARS TO LIB IOAREA\n         BCTR  R5,0                COMPENSATE FOR INSERTED ASA CHAR\n         B     CONTDS2             CONTINUE PROCESSING OF LINE\n         SPACE 1\nMSGDS    MVI   4(R5),C'1'          INSERT NEW PAGE ASA CHAR (SMB'S)\n         BALR  R8,0                SET CONT. ADDRESS\n         LA    R1,4                LENGTH OF RDW\n         SR    R3,R1               SUBTRACT FROM LRECL\n         LA    R5,4(R5)            REPOSITION PAST RDW\n         CLC   1(7,R5),IEF375I     IS THIS A 'JOB START'/IEF375I MSG?\n         BNE   NOT375              NO.\n         MVC   DSCDATE,31(R5)      MOVE START DATE TO -DESC CARD    SJB\n         MVC   DSCTON,37(R5)       MOVE START TIME TO -DESC CARD    SJB\n         B     CONTDS1             CONTINUE\nNOT375   CLC   1(7,R5),IEF376I     IS THIS A 'JOB END'/IEF376I MSG?\n         BNE   NOT376              NO.\n         MVC   DSCTOFF,37(R5)      MOVE STOP TIME TO -DESC CARD     SJB\n         B     CONTDS1             CONTINUE\nNOT376   CLC   1(7,R5),IEF287I     IS THIS IEF287I/(NOT CATALOGED) MSG?\n         BE    SETPRT              YES. FLAG JOB FOR PRINTING\n         CLC   1(7,R5),IEF283I     IS THIS IEF283I/(NOT DELETED X) MSG?\n         BE    SETPRT              YES. FLAG JOB FOR PRINTING\n         EJECT\n*                                                                   SJB\n*              IF LRECL < 80 OR COLS 81-132 IS BLANK, THEN          SJB\n*              ONLY PUT 1 RECORD TO LIBRARIAN                       SJB\n*                                                                   SJB\nCONTDS1  C     R3,EIGHTY           IS RECORD LENGTH LESS THAN 80?\n         BL    SHORTREC            YES. GO PROCESS AS SUCH\n         MVC   0(80,R2),0(R5)      MOVE LINE (80 CHARS) TO LIB IOAREA\nCONTDS2  BAL   R7,LIBPUT           RETURN TO PANVALET WITH RECORD\n         S     R3,EIGHTY           IS RECORD LENGTH EXACTLY 80 BYTES?\n         BNP   READNEXT            YES. GO GET NEXT LINE            SJB\n         BCTR  R3,0                FOR EXECUTE\n         EX    R3,COMPREC          IS REST OF RECORD BLANK?\n         BE    READNEXT            YES. GO GET NEXT LINE\n         LA    R5,79(R5)           POINT TO LAST CHAR ALREADY WRITTEN\n         MVI   0(R5),X'FE'         INSERT CONTINUATION CHAR\n         LA    R3,2(R3)            RESET TO ACTUAL LENGTH OF REMAINDER\nSHORTREC BCTR  R3,0                FOR EXECUTE\n         EX    R3,MOVEREC          MOVE SHORT OR BALANCE OF LONG RECORD\n         LA    R7,READNEXT         BRANCH ADDR FOR NEXT ENTRY\n         B     LIBPUT              RETURN TO PANVALET WITH INPUT REC\n*                                                                   SJB\n         SPACE 3                                                    SJB\nCOMPREC  CLC   80(*-*,R5),BLANKS2  REMAINDER OF RECORD BLANK?       SJB\nMOVEREC  MVC   0(*-*,R2),0(R5)     MOVE REMAINDER TO IOAREA         SJB\n         EJECT                                                      SJB\nSYNEXIT  SYNADAF ACSMETH=QSAM      INPUT (JES2) DATA SET SYNAD      SJB\n         SPACE 1                                                    SJB\n         MVI   0(R2),C'-'          INSERT TRIPLE SPACE ASA CC CHAR  SJB\n         MVC   1(78,R2),50(R1)     MOVE ERROR MESSAGE TO LIB IOAREA SJB\n         SPACE 1                                                    SJB\n         SYNADRLS                  RESTORE R13                      SJB\n         SPACE 1                                                    SJB\n         BAL   R7,LIBPUT           RETURN TO LIBRARIAN WITH ERROR   SJB\n         B     EOF                                                  SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n*              ALLOC   DSN FROM JES2                                SJB\n*                                                                   SJB\n         DS    0F                                                   SJB\nS99PARM  DC    X'80',AL3(S99AREA)  ADDRESS OF SVC 99 REQUEST BLOCK  SJB\nS99AREA  DC    AL1(S99RBEND-S99RB) LENGTH OF REQUEST BLOCK          SJB\n         DC    X'01'               VERB CODE                        SJB\n         DC    XL6'00'                                              SJB\n         DC    A(ALTUPTR)          POINTER TO LIST OF TEXT UNIT PTRSSJB\n         DC    XL8'00'                                              SJB\n         SPACE 1                                                    SJB\nALTUPTR  DC    A(ALDSTU)           ADDR OF DSNAME TEXT UNIT         SJB\n         DC    A(ALDDTU1)          ADDR OF DDNAME TEXT UNIT         SJB\n         DC    A(ALSSTU)           ADDR OF SUBSYSTEM TEXT UNIT      SJB\n         DC    X'00',AL3(ALDDTU)   ADDR OF DDNAME TEXT UNIT         SJB\n         DC    X'00',AL3(ALDSP1TU) ADDR OF DISP1  TEXT UNIT         SJB\n         DC    X'80',AL3(ALDSP2TU) ADDR OF DISP2  TEXT UNIT         SJB\n         SPACE 1                                                    SJB\nALDSTU   DC    X'0002'             ALLOCATION BY DSNAME             SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'002C'             LENGTH OF PARAMETER              SJB\nALDSN    DC    CL44' '             DSNAME                           SJB\n         DS    0H                                                   SJB\nALDDTU1  DC    X'0001'             ALLOCATION BY DDNAME             SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0008'             LENGTH OF DDNAME                 SJB\n         DC    CL8'JES2DDNM'       DDNAME FOR ALLOCATION            SJB\nALSSTU   DC    X'005C'             SUBSYSTEM DATA SET ALLOCATION    SJB\n         DC    X'0000'             ONE PARAMETER                    SJB\n         DC    X'0004'             LENGTH OF PARAMETER              SJB\nALSSN    DC    CL4'JES2'           SUBSYSTEM NAME                   SJB\n         DS    0H                                                   SJB\nALDDTU   DC    X'0055'             RETURN WITH DDNAME               SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0008'             LENGTH OF PARAMETER              SJB\nALDDNAM  DC    CL8' '              AREA FOR DDNAME                  SJB\n         DS    0H                                                   SJB\nALDSP1TU DC    X'0004'             DISP1                            SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0001'             LENGTH OF PARAMETER              SJB\n         DC    X'02'               DISP1=MOD                        SJB\n         DS    0H                                                   SJB\nALDSP2TU DC    X'0005'             DISP2                            SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0001'             LENGTH OF PARAMETER              SJB\n         DC    X'08'               DISP2=KEEP                       SJB\n         EJECT                                                      SJB\n*                                                                   SJB\n*              UNALLOC DELETE,     RELEASE                          SJB\n*                                                                   SJB\nTUFRDEL  DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRDEL) FREE DELETE                      SJB\n         DC    X'80',AL3(UALFRREL) RELEASE FROM HOLD                SJB\n*                                                                   SJB\n*              UNALLOC KEEP,       RELEASE                          SJB\n*                                                                   SJB\nTUFRKEPR DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB\n         DC    X'80',AL3(UALFRREL) RELEASE FROM HOLD                SJB\n*                                                                   SJB\n*              UNALLOC KEEP,       HOLD                             SJB\n*                                                                   SJB\nTUFRKEPH DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB\n         DC    X'80',AL3(UALFRHLD) PUT ON HOLD                      SJB\n*                                                                   SJB\n*              UNALLOC KEEP,       CHANGE CLASS, RELEASE            SJB\n*                                                                   SJB\nTUFRREQR DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB\n         DC    X'00',AL3(UALFRREQ) REQUEUE THE CLASS                SJB\n         DC    X'80',AL3(UALFRREL) RELEASE FROM HOLD                SJB\n*                                                                   SJB\n*              UNALLOC KEEP,       CHANGE CLASS, HOLD               SJB\n*                                                                   SJB\nTUFRREQH DC    A(UALDDTU)          ADDR OF UNALLOCATION DDNAME TXT  SJB\n         DC    X'00',AL3(UALFRKEP) FREE KEEP                        SJB\n         DC    X'00',AL3(UALFRREQ) REQUEUE THE CLASS                SJB\n         DC    X'80',AL3(UALFRHLD) PUT ON HOLD                      SJB\n         EJECT                                                      SJB\nUALDDTU  DC    X'0001'             UNALLOCATION BY DDNAME           SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0008'             LENGTH OF PARAMETER              SJB\nUALDDNAM DC    CL8' '              DDNAME TO BE UNALLOCATED         SJB\n         DS    0H                                                   SJB\nUALFRDEL DC    X'0005'             OVERIDING DISP2 SPECIFICATION    SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0001'             LENGTH OF PARAMETER              SJB\n         DC    X'04'            4= DELETE DATA SET                  SJB\n         DS    0H                                                   SJB\nUALFRKEP DC    X'0005'             OVERIDING DISP2 SPECIFICATION    SJB\n         DC    X'0001'             ONE PARAMETER                    SJB\n         DC    X'0001'             LENGTH OF PARAMETER              SJB\n         DC    X'08'            8= KEEP   DATA SET                  SJB\n         DS    0H                                                   SJB\nUALFRREL DC    X'000A'             RELEASE HELD DSN                 SJB\n         DC    X'0000'             NO PARAMETER                     SJB\n         DS    0H                                                   SJB\nUALFRHLD DC    X'0059'             HOLD QUEUE                       SJB\n         DC    X'0000'             NO PARAMETER                     SJB\n         DS    0H                                                   SJB\nUALFRREQ DC    X'0018'             RELEASE HELD DSN                 SJB\n         DC    X'0001'             1 PARAMETER                      SJB\n         DC    X'0001'             LENGTH                           SJB\n         DC    C'&RECLASS'         REQUEUE CLASS                    SJB\n         EJECT                                                      SJB\n         SPACE 2                                                    SJB\nDSPRCAD  DS    0F                  INITIAL BRANCH-ADDRESS TABLE     SJB\n         DC    A(JES2JLOG)         ADDRESS FOR PROCESSING LOG DATA SET\n         DC    A(JCLDS)            ADDRESS FOR PROCESSING JCL DATA SET\n         DC    A(MSGDS)            ADDRESS FOR PROCESSING MSG DATA SET\n         SPACE 2                                                    SJB\nEIGHTY   DC    F'80'               OUTPUT RECORD SIZE               SJB\nLIBPARM  DC    X'80',AL3(LIBPARM2) PARMS EXPECTED BY LIBRARY        SJB\n         CNOP  2,4                                                  SJB\nLIBPARM2 DC    AL2(L'LIBPARM3)     PARMS EXPECTED BY LIBRARY        SJB\nLIBPARM3 DC    C'NRJS,NJTA'        PARMS EXPECTED BY LIBRARY        SJB\nBLANKS2  DC    CL80' '             BLANKS                           SJB\nJULIANDY DC    CL3' '              JULIAN DATE                      SJB\nJULDTEPK DC    H'0'                PACKED JULIAN DATE               SJB\n         DS    0D                                                   SJB\n         LTORG                                                      SJB\nPSODS    DC    C'PS000'            PSO DATA SET IDENTIFIER\nIEF375I  DC    C'IEF375I'          'JOB START' MSG NUMBER\nIEF376I  DC    C'IEF376I'          'JOB STOP' MSG NUMBER\nIEF287I  DC    C'IEF287I'          'NOT CATALOGUED 2' MSG NUMBER\nIEF283I  DC    C'IEF283I'          'NOT DELETED 8' MSG NUMBER\nIEF251I  DC    C'IEF251I'          'JOB CANCELLED' MSG NUMBER\nIEF45    DC    C'IEF45'            FOR LOCATING JCL ERROR MSGS, ETC\nIIP026I  DC    C'+IIP026I'         EMULATOR 'WRITE, DATA CHECK' MSG NO.\nREPLY    DC    CL2'R '             START OF OPERATOR REPLY\nCANCEL   DC    C'CANCEL'           REQUIRED FOR SCAN (PRINT CRITERION)\nALLDS    DC    X'000102'           INDICATING 3 DATA SETS FOUND FOR JOB\n         SPACE 1                                                    SJB\n         EJECT                                                      SJB\nOPTCARD  DC    CL9'-OPT '          LIBRARIAN OPT CARD KEYWORD       SJB\n         DC    C'NOPC,NOPR,NOEXEC'                                  SJB\n         DC    (80-(*-OPTCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nADDCARD  DC    CL9'-ADD '          LIBRARIAN ADD CARD KEYWORD       SJB\nADDJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               SJB\n         DC    C',NOCHK,UNCON,NOLIST,NORESEQ,SEQ=/81,8,10,10/'      SJB\n         DC    (80-(*-ADDCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nDLMCARD  DC    CL9'-DLM '          LIBRARIAN ADD CARD KEYWORD       SJB\nDLMJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               SJB\n         DC    (80-(*-DLMCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nSELCARD  DC    CL9'-SEL '          LIBRARIAN SEL CARD KEYWORD       SJB\nSELJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               SJB\n         DC    C',NOCHK,UNCON,NOLIST,NORESEQ,SEQ=/81,8,10,10/'      SJB\n         DC    (80-(*-SELCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nPGMCARD  DC    CL9'-PGMR '         LIBRARIAN PGMR CARD              SJB\nPGMJOBN  DC    CL08' '             JOBNAME                          SJB\nPGMUSER  DC    CL07' '             USERID                           SJB\n         DC    (80-(*-PGMCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nDSCCARD  DC    CL9'-DESC'          LIBRARIAN DESC CARD              SJB\nDSCJOB   DC    C'AJJJNNNN'         LIBNAME (AJJJNNNN)               SJB\nDSCDATE  DC    C'YYDDD'            JOB START DATE                   SJB\nDSCTON   DC    C'HHMM'             JOB START TIME                   SJB\nDSCTOFF  DC    C'HHMM'             JOB STOP  TIME                   SJB\nDSCERROR DC    C'PRINTED'          NO ERROR ASSUMED                 SJB\n         DC    (80-(*-DSCCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\nENDCARD  DC    CL9'-END  '         LIBRARIAN END  CARD              SJB\n         DC    (80-(*-ENDCARD))C' '                                 SJB\n         SPACE 1                                                    SJB\n         EJECT                                                      SJB\nTITLE1   DC    CL80' '                                              SJB\n         ORG   TITLE1                                               SJB\n         DC    CL10'MODULE    '                                     SJB\n         DC    CL10'          '                                     SJB\n         DC    CL10'          '                                     SJB\n         DC    CL10'JOB START '                                     SJB\n         DC    CL10'JOB START '                                     SJB\n         DC    CL10'JOB STOP  '                                     SJB\n         DC    CL10'REROUTED  '                                     SJB\n         DC    CL10'LIBRARY   '                                     SJB\n         ORG   TITLE1+80                                            SJB\nTITLE2   DC    CL80' '                                              SJB\n         ORG   TITLE2                                               SJB\n         DC    CL10'NAME      '                                     SJB\n         DC    CL10'JOBNAME   '                                     SJB\n         DC    CL10'USERID    '                                     SJB\n         DC    CL10'DATE      '                                     SJB\n         DC    CL10'TIME      '                                     SJB\n         DC    CL10'TIME      '                                     SJB\n         DC    CL10'TO PRINT  '                                     SJB\n         DC    CL10'ERROR     '                                     SJB\n         ORG   TITLE2+80                                            SJB\n         EJECT                                                      SJB\nINDCB    DCB   DDNAME=DUMMY,DSORG=PS,MACRF=GL,                      SJB*\n               EODAD=EOF,EROPT=ACC,SYNAD=SYNEXIT                    SJB\n         DS    0F                                                   SJB\nINDCBL   EQU   *-INDCB                                              SJB\n         EJECT                                                      SJB\nOUTDCB   DCB   DDNAME=SYSIN,DSORG=PS,MACRF=PM,                      SJB*\n               RECFM=FB,LRECL=80,BLKSIZE=6160                       SJB\n         DS    0F                                                   SJB\nOUTDCBL  EQU   *-OUTDCB                                             SJB\n         EJECT                                                      SJB\nOPEN     OPEN  (0),MF=L                                             SJB\nCLOSE    CLOSE (0),MF=L                                             SJB\n         SPACE 3                                                    SJB\nEOSNAP   EQU   *                   END OF STORAGE AREA TO BE SNAPPEDSJB\nDNAME    DS    CL8                 NAME LEFT JUSTIFIED              SJB\n         DROP  R11,R12,R6                                           SJB\n         EJECT                                                      SJB\nSSREQ    CSECT                                                      SJB\n         CONNECT LWORK3,WORK3,BASE=R12,CLEAR=YES,PARM=R11           SJB\n         USING WORK1,R11           USE MAIN TASK WORK AREA          SJB\n         USING SSOB,R10            GET ADDR. TO 1 SAVEAREA          SJB\n         LIBWTO 'ENTERED SSREQ'                                     SJB\n         LA    R10,LWASSOB         GET ADDRESS OF IEFSSREQ PARM     SJB\n*                                                                   SJB\n*              THE $FIRST FLAG MUST BE TURNED ON EACH TIME A NEW    SJB\n*              JOB IS TO BE SELECTED                                SJB\n*                                                                   SJB\n         TM    FLAG,$FIRST         IS THIS THE 1ST REQUEST          SJB\n         BNO   SSREQ1              NOPE                             SJB\n         NI    FLAG,255-$FIRST     TURN OFF FIRST FLAG              SJB\n*                                                                   SJB\n         MVC   DSFLAGS,=3X'FF'     INITILIZE DSFLAGS                SJB\n*                                                                   SJB\n         XC    LWASSOB,LWASSOB     CLEAR IT OUT                     SJB\n         ST    R10,LWASSPRM        SET SSOB ADDR                    SJB\n         MVI   LWASSPRM,X'80'      INDICATE LAST PARM               SJB\n*                                                                   SJB\n*              INITILIZE SSOB REQUEST BLOCK                         SJB\n*                                                                   SJB\n         MVC   SSOBID,=CL4'SSOB'   SSOB ID                          SJB\n         LA    R1,SSOBHSIZ                                          SJB\n         STH   R1,SSOBLEN          STORE IN LENGTH                  SJB\n         LA    R1,SSOBSOUT                                          SJB\n         STH   R1,SSOBFUNC         STORE IN FUNCTION                SJB\n         L     R1,LWASSIB@         GET SSIB ADDR                    SJB\n         ST    R1,SSOBSSIB         STORE IN SSIB ADDR               SJB\n         LA    R1,0                                                 SJB\n         ST    R1,SSOBRETN         STORE IN RETN CODE               SJB\n         LA    R1,SSSOBGN                                           SJB\n         ST    R1,SSOBINDV         STORE IN INDV ADDR               SJB\n*                                                                   SJB\n*              INITILIZE SSSO REQUEST BLOCK                         SJB\n*                                                                   SJB\n         LA    R1,SSSOSIZE+SSSOXSIZ                                 SJB\n         STH   R1,SSSOLEN          STORE IN SSSO LENGTH             SJB\n*                                                                   SJB\n*SSSODSID+....                                                      SJB\n*         +8 IS PROGRAMMER NAME                                     SJB\n*         +8+20 IS ACCOUNTING FIELDS                                SJB\n*         +8+20+37 IS USERID                                        SJB\n*                                                                   SJB\nSSSOPGMR EQU   SSSODSID+8,20       PROGRAMMER NAME                  SJB\nSSSOACCT EQU   SSSODSID+8+20,37    ACCOUNTING FIELDS                SJB\nSSSOUSER EQU   SSSODSID+8+20+37,7  USERID                           SJB\nSSSOXSIZ EQU   SSSOUSER+7-SSSOPGMR LENGTH OF EXTRA POOP             SJB\n*                                                                   SJB\n         MVI   SSSOFLG1,SSSOSCLS   SELECT BY CLASS                  SJB\n         OI    SSSOFLG1,SSSODST    SELECT BY DEST                   SJB\n         OI    SSSOFLG1,SSSOHLD    SELECT BY HELD DSNS TOO          SJB\n*                                                                   SJB\n         NI    SSSOFLG2,255-SSSOCTRL SUBSYSTEM TO RETURN A DATASET  SJB\n*                                                                   SJB\n         MVC   SSSODEST,=CL8'LOCAL'                                 SJB\nPSOCLASS MVC   SSSOCLSL,=CL8'&CLASS' CLASS='&CLASS'                 SJB\n         MVI   SSSODSN,X'00'       INDICATE INITIAL ENTRY FOR IEFSSREQ\n         B     SSREQ2                                               SJB\n         EJECT                                                      SJB\nSSREQ1   DS    0H                                                   SJB\n*                                                                   SJB\n*              IF THIS IS NOT THE FIRST TIME THROUGH THEN           SJB\n*              TURN ON THE SELECT BY JOBID SO WE WILL GET ONLY      SJB\n*              SYSOUT FOR THE JOB THAT HAS BEEN SELECTED BY THE     SJB\n*              FIRST CALL. THIS INSURES THAT WE GET NOBODY ELSE     SJB\n*              UNTIL WE ARE THROUGH WITH THIS JOBIDS SYSOUT         SJB\n*                                                                   SJB\n         OI    SSSOFLG1,SSSOSJBI   SELECT BY JOB ID (JOB#)          SJB\nSSREQ2   DS    0H                                                   SJB\n         MVI   SSSORESV,X'01'      TELL JES2 TO FILL IN EXTRA POOP  SJB\n         SPACE 1                                                    SJB\n         MODESET MODE=SUP,KEY=ZERO GET INTO SUPERVISOR STATE        SJB\n         SPACE 1                                                    SJB\n         LA    R1,LWASSPRM         LOAD ADDRESS OF SSOB             SJB\n         SPACE 1                                                    SJB\n         IEFSSREQ                  ISSUE SUBSYSTEM REQUEST          SJB\n         SPACE 1                                                    SJB\n         STH   R15,RETCODE         SAVE IEFSSREQ RETURN CODE        SJB\n         MVC   LWASSIB@,SSOBSSIB                                    SJB\n         SPACE 3                                                    SJB\n         MODESET MODE=PROB,KEY=NZERO GET OUT OF SUPERVISOR STATE    SJB\n         SPACE 3                                                    SJB\n         LH    R15,RETCODE                                          SJB\n         RELEASE LWORK3,RC=(R15)                                    SJB\n         LTORG                                                      SJB\n         EJECT                                                      SJB\nWORK1    DSECT                                                      SJB\nSAVE1    DS    9D                                                   SJB\nLWASSPRM DS    A                   PARM FIELD FOR SSOB              SJB\nLWASSOB  DS    CL(SSOBLEN1+SSSOXSIZ)                                SJB\n         DS    0F                  EXTRA                            SJB\nRDRSTIME DS    XL8                 RDR START TIME/DATE OF JOB       SJB\nLWAOPEN  DS    F                                                    SJB\nLWACLOSE DS    F                                                    SJB\nLWASSIB@ DS    A                                                    SJB\nLWAUALTU DS    A                                                    SJB\nLWADCBIN DS    CL(INDCBL)                                           SJB\nLWADCBOT DS    CL(OUTDCBL)                                          SJB\nLWADCBRP DS    CL(RPTDCBL)                                          SJB\nDSFLAGS  DC    X'000102'           0=LOG, 1=JCL, 2=MSG DS PROCESSED SJB\nFLAG     DS    X                   MULTI-PURPOSE FLAG BYTE          SJB\n$FIRST   EQU   X'80'               SET WHEN NEW JOB IS NEEDED       SJB\n$PRINT   EQU   X'40'               TO INDICATE JOB IS TO BE PRINTED SJB\n$CLOSING EQU   X'20'               TO INDICATE CLOSING OUT OF JOB   SJB\nFLAG2    DS    X                   MULTI-PURPOSE FLAG BYTE          SJB\n$TITLE   EQU   X'80'               INDICATE TITLE LINE TO PUT OUT   SJB\n$DEBUG   EQU   X'40'               TO INDICATE DEBUGGING            SJB\nSNAPID   DS    X                                                    SJB\nRETCODE  DS    H                   RETURN CODE                      SJB\nDSTYPE   DS    X                   DATA SET TYPE FLAG (LOG,JCL,MSG) SJB\nCARDOUT  DS    CL80                                                 SJB\nPARMCARD DS    CL80                                                 SJB\nLWORK1   EQU   *-WORK1                                              SJB\n*                                                                   SJB\nWORK2    DSECT                                                      SJB\nSAVE2    DS    9D                                                   SJB\nLWORK2   EQU   *-WORK2                                              SJB\n         SPACE 3                                                    SJB\nWORK3    DSECT                                                      SJB\nSAVE3    DS    9D                                                   SJB\nLWORK3   EQU   *-WORK3                                              SJB\n         SPACE 3                                                    SJB\nDIRECTRY DSECT                     LIB DIRECTORY ENTRY DSECT        SJB\nDPASS    DS    CL4                 PASSWORD                         SJB\nDADATE   DS    CL6                 ADDED DATE       MMDDYY          SJB\nDUDATE   DS    CL6                 LAST UPDATE DATE MMDDYY          SJB\nDCARDS   DS    PL3                 NUMBER OF CARDS                  SJB\nDPGMR    DS    CL15                PROGRAMMER NAME                  SJB\nDPROC    DS    CL8                 FIRST 8 BYTES OF PROC PARAMETER  SJB\nDDESC    DS    CL30                MODULE DESCRIPTION               SJB\nDCSEQ    DS    BL1                 STARTING COLUMN FOR SEQ          SJB\nDLSEQ    DS    BL2                 LENGTH OF SEQ                    SJB\nDISEQ    DS    BL2                 INCREMENT VALUE FOR SEQ          SJB\nDSSEQ    DS    BL2                 STARTING VALUE FOR SEQ           SJB\nDANUM    DS    BL2                 ACCESS NUMBER                    SJB\nDUNUM    DS    BL2                 UPDATE NUMBER                    SJB\nDENUM    DS    BL1                 EXTENT NUMBER                    SJB\nDBNUM    DS    BL1                 BLOCKS NUMBER                    SJB\nDLDATE   DS    CL6                 LAST ACCESS DATE   MMDDYY        SJB\nDFILL    DS    CL6                                                  SJB\n         EJECT                                                      SJB\nCOMMADDR DSECT                     POINTED TO BY COMMLPTR           SJB\nCOMMECB  DS    A                   POINTER TO COMMAND ECB           SJB\nCOMMCIB  DS    A                   POINTER TO COMMAND INPUT BUFFER  SJB\n         SPACE 3                                                    SJB\n         CVT   DSECT=YES           CVT MAPPING                      SJB\n         EJECT                                                      SJB\n         IEFJESCT                  JES COMMUNICATION TABLE DSECT    SJB\n         EJECT                                                      SJB\n         IEFJSSOB (SO)             SSOB DSECT WITH PSO FUNCTION     SJB\n         EJECT                                                      SJB\n         IEFZB4D0                  SVC 99 REQUEST BLOCK DSECT       SJB\n         EJECT                                                      SJB\n         DCBD  DSORG=PS,DEVD=DA    DCB DSECT                        SJB\n         SPACE 3                                                    SJB\n         END   ,                                                    SJB\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OXYP": {"ttr": 6410, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x82\\x18\\x8f\\x00\\x83\\x16\\x7f\\tT\\x00\\x07\\x00\\x08\\x00\\x05\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1982-07-07T00:00:00", "modifydate": "1983-06-16T09:54:00", "lines": 7, "newlines": 8, "modlines": 5, "user": "SYSXKMB"}, "text": "//OXYP     JOB (@SYSUID,@SYSACCT),' BUILD GDG INDEX',CLASS=E\n/*JOBPARM  T=2,L=2,Q=T,A,I\n//         EXEC  PGM=OXYPROGM\n//SYSPRINT DD  SYSOUT=A\n//SYSIN    DD  *\n   BLDG('PPODOPR.LIBSPOOL.WKLYARCH' 75 DELETE)\n   BLDG('PPODOPR.LIBSPOOL.DALYARCH' 08 DELETE)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RESTORE": {"ttr": 6412, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x82 \\x8f\\x00\\x82(o\\x15W\\x00&\\x00\\x18\\x00\\x15\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1982-07-27T00:00:00", "modifydate": "1982-10-13T15:57:00", "lines": 38, "newlines": 24, "modlines": 21, "user": "SHSWRPD"}, "text": "//RESTORE  JOB (@SYSUID,@SYSACCT),'RESTORE LIBSPOOL',CLASS=B\n/*JOBPARM   I,W,T=5,Q=T,L=5\n//*\n//* THIS JOBSTREAM CAN BE USED TO RESTORE THE LIBSPOOL LIBRARIAN\n//* DATA SET FROM THE BACKUP MADE OF IT IN THE DAILY ARCHIVE JOBSTREAM.\n//* THE BACKUP IS TAKEN BEFORE THE MODULES TAKEN OFFLINE ARE DELETED\n//* FROM THE ONLINE LIBSPOOL LIBRARIAN DATA  SET.\n//* CORRESPONDING DATA SET NAMES, VOLUME SERIAL NUMBERS, AND SPACE\n//* ALLOCATION WILL HAVE TO BE CHANGED.\n//* THE STEPS ARE AS FOLLOWS:\n//*     INIT - INITIALIZES A NEW LIBSPOOL LIBRARIAN DATA SET.\n//*            THIS STEP CAN BE SKIPPED IF THE EXISTING LIBRARIAN\n//*            DATA SET IS USED.\n//*\n//*  RESTORE - RESTORE LIBSPOOL LIBRARIAN DATA SET.\n//*\n//INIT     EXEC PGM=LIBRARY,PARM='NRJS,NJTA'\n//SYSPRINT  DD SYSOUT=A\n//MASTER    DD DSN=SHSW.LSLIB,                                 CHANGE ?\n//            DISP=(NEW,CATLG,DELETE),\n//            SPACE=(CYL,30),                                  CHANGE ?\n//            DCB=(DSORG=DA,BLKSIZE=2220),\n//            VOL=SER=F031L1,                                  CHANGE ?\n//            UNIT=3350\n//SYSIN    DD  *\n-OPT INIT,DISK,SEQ=/81,8,10,10/\n-END\n//RESTORE EXEC PGM=LIBRARY,PARM='NRJS,NJTA'\n//SYSPRINT DD SYSOUT=A\n//BACKUP   DD DSN=SHSW.LSLIB.BACKUP,DISP=(OLD,KEEP),           CHANGE ?\n//            DCB=(BLKSIZE=32760),\n//            LABEL=(2,SL),\n//            VOL=SER=103872,                                  CHANGE ?\n//            UNIT=TAPE\n//MASTER   DD DSN=SHSW.LSLIB,DISP=SHR                          CHANGE ?\n//SYSIN    DD  *\n-OPT RESTORE\n-END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RPTARCTP": {"ttr": 6657, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x82%\\x0f\\x00\\x82(o\\x15V\\x00A\\x00A\\x00\\x01\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1982-09-07T00:00:00", "modifydate": "1982-10-13T15:56:00", "lines": 65, "newlines": 65, "modlines": 1, "user": "SHSWRPD"}, "text": "//RPTARCTP JOB (@SYSUID,@SYSACCT),'LIBSPOOL ARCHIVE RPT',CLASS=B\n/*JOBPARM   I,W,T=5,Q=T,L=9\n//*\n//* THIS JOBSTREAM CAN BE USED TO RECREATE THE LIBSPOOL ARCHIVE TAPE\n//* REPORT.\n//*\n//*    IN1      - LIBSPOOL ARCHIVE TAPE DATA SET NAME BEING INPUT\n//*               (INCLUDE RELATIVE GENERATION NUMBER OR FULL DSNAME)\n//*    RUNTYPE -  'D' WHEN USING A DAILY ARCHIVE TAPE\n//*               'W' WHEN USING A WEEKLY ARCHIVE TAPE\n//*\n//* RUN CONSIDERATIONS\n//*\n//*    THIS JOB CAN BE RUN AT ANY TIME BY ANY USER ID THAT HAS\n//*    AUTHORITY TO READ THE LIBSPOOL ARCHIVE TAPES. THIS SHOULD\n//*    INCLUDE MOST EVERYONE.\n//*\n//LIBCNTL EXEC PGM=IEBGENER\n//SYSPRINT DD DUMMY\n//SYSUT2   DD DSN=&&LIBRCNTL,DISP=(,PASS),SPACE=(TRK,1),\n//         DCB=(RECFM=FB,LRECL=80,BLKSIZE=80),UNIT=SYSDA\n//SYSIN    DD DUMMY\n//SYSUT1   DD *\n-OPT NOCYCLE,NOOUTPUT,INDEX\n-END\n//*\n//REPORTPE PROC IN1=,                      INPUT ARCHIVE TAPE\n//       RUNTYPE=,                         D - DAILY,W - WEEKLY\n//       PARMLIB='NRJS,NJTA'               LIBRARIAN PARM INFO\n//**********************************************************************\n//*   CREATE INDEX DATA SET FROM ARCHIVE TAPE\n//**********************************************************************\n//INDEX    EXEC  PGM=LIBRARY,PARM='&PARMLIB',COND=(0,NE)\n//SYSPRINT DD SYSOUT=A\n//OSJOB    DD DUMMY\n//LIST     DD SYSOUT=A\n//INDEX    DD  DSN=&&INDEX,DISP=(,PASS),\n//         DCB=(RECFM=FB,LRECL=133,BLKSIZE=6118),UNIT=SYSDA,\n//         SPACE=(6118,(20,20),RLSE)\n//SYSAF01  DD  UNIT=(SYSDA,2),SPACE=(CYL,(10,10)),DCB=BLKSIZE=4628\n//SYSAF02  DD  UNIT=(SYSDA,2),SPACE=(CYL,(10,10)),DCB=BLKSIZE=4628\n//SYSAF03  DD  UNIT=(SYSDA,2),SPACE=(CYL,(10,10)),DCB=BLKSIZE=19069\n//MASTIN   DD DSN=&IN1,DISP=(OLD,PASS)\n//SYSIN    DD  DSN=&&LIBRCNTL,DISP=(OLD,DELETE)\n//**********************************************************************\n//*   REPORT CONTENTS OF ARCHIVE TAPE USING INDEX REPORT DATA\n//**********************************************************************\n//LIBPRT  EXEC PGM=OPS4322G,PARM='&RUNTYPE',COND=(0,NE)\n//STEPLIB  DD DSN=PHGI.LINKLIB,DISP=SHR\n//SYSABEND DD SYSOUT=A\n//SORTLIB  DD DSN=SYS1.SORTLIB,DISP=SHR\n//SORTWK01 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SORTWK02 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SORTWK03 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SORTWK04 DD UNIT=SYSDA,SPACE=(CYL,(5,5),,CONTIG)\n//SYSOUT   DD SYSOUT=A\n//MESSAGES DD SYSOUT=A\n//REPORTDD DD SYSOUT=A,DCB=(RECFM=FBA,LRECL=133,BLKSIZE=133)\n//MASTDD   DD DSN=&&INDEX,DISP=(OLD,PASS)\n//TAPEDD   DD DSN=*.INDEX.MASTIN,DISP=(OLD,KEEP)\n//**********************************************************************\n//  PEND\n//REDORPT EXEC REPORTPE,\n//      IN1='PHGIOPS.OPS2340.WKLYARCH(0)',   INPUT ARCHIVE TAPE DSNAME\n//      RUNTYPE='W'                          DAILY OR WEELY TAPE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYS005LK": {"ttr": 6659, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x83\\x13\\x0f\\x00\\x83\\x16o\\x16C\\x00\\x12\\x00\\x0b\\x00\\x10\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1983-05-10T00:00:00", "modifydate": "1983-06-15T16:43:00", "lines": 18, "newlines": 11, "modlines": 16, "user": "SYSXKMB"}, "text": "//SYS005LK JOB (@SYSUID,@SYSACCT),'SYS005P0 LINK',CLASS=A\n/*JOBPARM   I,W,T=5,Q=T,LINES=20\n//ASMH1     EXEC    ASMHC\n//SYSLIN    DD     DSN=&&OBJECT\n//ASM.SYSIN  DD  DSN=SYSXKMB.LIB.ASM(SYS005PA),DISP=SHR\n//ASMH2     EXEC    ASMHC\n//SYSLIN    DD     DSN=&&OBJECT\n//ASM.SYSIN  DD  DSN=SYSXKMB.LIB.ASM(SYS005PB),DISP=SHR\n//CLG       EXEC    COB4CL\n//COB.SYSIN  DD  DSN=SYSXKMB.LIB.ASM(SYS005P0),DISP=SHR\n//LKED.SYSLIB  DD DSN=SYS1.OXYLIB,DISP=SHR\n//             DD DSN=SYS1.COBLIB,DISP=SHR\n//             DD DSN=PHGI.HOU.LINKLIB,DISP=SHR\n//LKED.SYSLMOD DD DSN=SYSXKMB.LIB.LOAD,DISP=SHR,UNIT=3350\n//LKED.SYSIN   DD *\n  INCLUDE SYSLIB(TSOFAIR)                                      06/09/83\n  ENTRY SYS005PA                                               06/09/83\n  NAME SYS005P0(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYS005PA": {"ttr": 6661, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x83\\t_\\x00\\x83\\t_\\x08Y\\x06\\xea\\x06\\xea\\x00\\x00\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1983-04-05T00:00:00", "modifydate": "1983-04-05T08:59:00", "lines": 1770, "newlines": 1770, "modlines": 0, "user": "SHSWRPD"}, "text": "         TITLE  'LIBSPOOL JCL MODULE PRINT SEPARATOR'\n         PRINT ON,DATA\nREGO     EQU   0\nREG1     EQU   1\nREG2     EQU   2\nREG3     EQU   3\nREG4     EQU   4\nREG5     EQU   5\nREG6     EQU   6\nREG7     EQU   7\nREG8     EQU   8\nREG9     EQU   9\nREG10    EQU   10\nREG11    EQU   11\nREG12    EQU   12\nREG13    EQU   13\nREG14    EQU   14\nREG15    EQU   15\nSYS005PA CSECT\n         SAVE  (14,12)\n         LR    REG9,REG15\n         USING SYS005PA,REG9,REG10,REG11\n         L     REG10,=A(SYS005PA+4096)\n         L     REG11,=A(SYS005PA+2*4096)\n         ST    REG13,SAVEAREA+4\n         LR    REG12,REG13\n         LA    REG13,SAVEAREA\n         ST    REG13,8(12)\n         B     BEGIN\n         DC    C'SYS005PA'\nSAVEAREA DS    9D\n         LTORG\n*\n*******************************************************************\n* PURPOSE.                                                        *\n*\n*   THIS PROGRAM IS CALLED BY PROGRAM SYS005P0. IT IS PASSED THE\n*   FOLLOWING INFORMATION.\n*\n*    JOBNAME@JES2 JOB NUMBER@GREGORIAN DATE@START TIME-END TIME\u00ac\n*    8 BYTES     4 BYTES         8 BYTES        11 BYTES\n*\n*   EACH PIECE OF INFORMATION IS SEPARATED BY A @. THE END OF THE LAST\n*   PIECE OF INFORMATION IS IDENTIFIED BY A \u00ac.\n*\n*   EACH PIECE OF INFORMATION IS BLOCKED LETTERED AND CENTERED ONTO\n*   A SEPARATOR PAGE ON A SEPARATE LINE.\n*\n*   A USER WRITTEN SUBROUTINE SYS005PB IS CALLED\n*   TO WRITE THE PRINT LINES OF THE SEPARATOR PAGE TO THE OUTPUT\n*   PRINT DDNAME OF 'JCLPRINT'.\n*\n*******************************************************************\n*\nBEGIN    L     REG2,0(REG1)            REG2 = ADDR. OF SEPARATOR DATA\n         MVI   SNGLSPCE+1,X'00'   SET TO SINGLE SPACE AFTER FIRST WRITE\n         MVI   PRNTRTN+1,X'00'    SET TO SINGLE SPACE AFTER FIRST WRITE\n*\nMVEDATA  MVC   MSGCRD1(35),0(REG2)      MOVE DATA\n         LA    REG7,MSGTBLE\n         LA    REG8,STOREMSG\n         LA    REG6,STOREMSG\n         SR    2,2\nSEARCH   TRT   0(160,REG7),TBLE1\n         LR    REG3,REG1\n         SR    REG1,REG7\n         SR    REG4,REG4\n         L     REG5,HWD11\n         SR    REG5,REG1\n         D     REG4,HWD02\n         AR    REG8,REG5\n         SH    REG1,HWD01\n         EX    REG1,MVELNE\n         LA    REG7,1(REG3)\n         LA    REG6,11(REG6)\n         LA    REG8,0(REG6)\n         SP    MAXWDS,ONE\n         CP    MAXWDS,ZERO\n         BC    4,MAXEXCD\n         CH    REG2,HWD01\n         BE    STARTPRT\n         B     SEARCH\nSTARTPRT EQU   *\n         LA    REG2,CHARTBLE+57\n         LA    REG3,PRNTLNE\n         LA    REG4,STOREMSG\nCONT     LA    REG6,CHARTBLE\n         LA    REG5,PRNTBLE\n         LA    REG8,GENTBLE\nNXTCHAR  CLC   0(1,REG4),0(REG6)\n         BNE   INCREMNT\n         BC    15,0(0,REG8)\nINCREMNT LA    REG6,1(REG6)\n         LA    REG8,104(REG8)\n         CR    REG6,REG2\n         BE    NOPRINT\n         B     NXTCHAR\nMVELNE   MVC   0(0,REG8),0(REG7)\nLINE01   MVC   0(12,REG3),0(REG7)\n         LA    REG8,8(REG8)\n         BC    15,0(0,REG8)\nLINE02   MVC   132(12,REG3),0(REG7)\n         LA    REG8,8(REG8)\n         BC    15,0(0,REG8)\nLINE03   MVC   264(12,REG3),0(REG7)\n         LA    REG8,8(REG8)\n         BC    15,0(0,REG8)\nLINE04   MVC   396(12,REG3),0(REG7)\n         LA    REG8,8(REG8)\n         BC    15,0(0,REG8)\nLINE05   MVC   528(12,REG3),0(REG7)\n         LA    REG8,8(REG8)\n         BC    15,0(0,REG8)\nLINE06   MVC   660(12,REG3),0(REG7)\n         LA    REG8,8(REG8)\n         BC    15,0(0,REG8)\nLINE07   MVC   792(12,REG3),0(REG7)\n         LA    REG8,8(REG8)\n         BC    15,0(0,REG8)\nLINE08   MVC   924(12,REG3),0(REG7)\n         LA    REG8,8(REG8)\n         BC    15,0(0,REG8)\nLINE09   MVC   1056(12,REG3),0(REG7)\n         LA    REG8,8(REG8)\n         BC    15,0(0,REG8)\nLINE10   MVC   1188(12,REG3),0(REG7)\n         LA    REG8,8(REG8)\n         BC    15,0(0,REG8)\nLINE11   MVC   1320(12,REG3),0(REG7)\n         LA    REG8,8(REG8)\n         BC    15,0(0,REG8)\nLINE12   MVC   1452(12,REG3),0(REG7)\n         LA    REG8,8(REG8)\n         BC    15,0(0,REG8)\nLINE13   MVC   1584(12,REG3),0(REG7)\n         LA    REG3,12(REG3)\n         LA    REG4,1(REG4)\n         AP    CHARCNT,ONE\n         CP    CHARCNT,PDEC11\n         BL    CONT\n         LA    3,PRNTLNE\n         ZAP   LINECNT,ZERO\n         ZAP   CHARCNT,ZERO\n         XC    LNEPRNT,LNEPRNT\n         B     PRNTRTN\nGENTBLE  LA    REG7,0(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,24(REG5)\n         B     LINE04\n         LA    REG7,24(REG5)\n         B     LINE05\n         LA    REG7,12(REG5)\n         B     LINE06\n         LA    REG7,12(REG5)\n         B     LINE07\n         LA    REG7,24(REG5)\n         B     LINE08\n         LA    REG7,24(REG5)\n         B     LINE09\n         LA    REG7,24(REG5)\n         B     LINE10\n         LA    REG7,24(REG5)\n         B     LINE11\n         LA    REG7,24(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,36(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,24(REG5)\n         B     LINE04\n         LA    REG7,24(REG5)\n         B     LINE05\n         LA    REG7,36(REG5)\n         B     LINE06\n         LA    REG7,36(REG5)\n         B     LINE07\n         LA    REG7,24(REG5)\n         B     LINE08\n         LA    REG7,24(REG5)\n         B     LINE09\n         LA    REG7,24(REG5)\n         B     LINE10\n         LA    REG7,12(REG5)\n         B     LINE11\n         LA    REG7,36(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,0(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,48(REG5)\n         B     LINE04\n         LA    REG7,48(REG5)\n         B     LINE05\n         LA    REG7,48(REG5)\n         B     LINE06\n         LA    REG7,48(REG5)\n         B     LINE07\n         LA    REG7,48(REG5)\n         B     LINE08\n         LA    REG7,48(REG5)\n         B     LINE09\n         LA    REG7,24(REG5)\n         B     LINE10\n         LA    REG7,12(REG5)\n         B     LINE11\n         LA    REG7,0(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,36(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,24(REG5)\n         B     LINE04\n         LA    REG7,24(REG5)\n         B     LINE05\n         LA    REG7,24(REG5)\n         B     LINE06\n         LA    REG7,24(REG5)\n         B     LINE07\n         LA    REG7,24(REG5)\n         B     LINE08\n         LA    REG7,24(REG5)\n         B     LINE09\n         LA    REG7,24(REG5)\n         B     LINE10\n         LA    REG7,12(REG5)\n         B     LINE11\n         LA    REG7,36(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,12(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,48(REG5)\n         B     LINE03\n         LA    REG7,48(REG5)\n         B     LINE04\n         LA    REG7,48(REG5)\n         B     LINE05\n         LA    REG7,36(REG5)\n         B     LINE06\n         LA    REG7,36(REG5)\n         B     LINE07\n         LA    REG7,48(REG5)\n         B     LINE08\n         LA    REG7,48(REG5)\n         B     LINE09\n         LA    REG7,48(REG5)\n         B     LINE10\n         LA    REG7,12(REG5)\n         B     LINE11\n         LA    REG7,12(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,12(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,48(REG5)\n         B     LINE03\n         LA    REG7,48(REG5)\n         B     LINE04\n         LA    REG7,48(REG5)\n         B     LINE05\n         LA    REG7,36(REG5)\n         B     LINE06\n         LA    REG7,36(REG5)\n         B     LINE07\n         LA    REG7,48(REG5)\n         B     LINE08\n         LA    REG7,48(REG5)\n         B     LINE09\n         LA    REG7,48(REG5)\n         B     LINE10\n         LA    REG7,48(REG5)\n         B     LINE11\n         LA    REG7,48(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,0(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,48(REG5)\n         B     LINE04\n         LA    REG7,48(REG5)\n         B     LINE05\n         LA    REG7,60(REG5)\n         B     LINE06\n         LA    REG7,60(REG5)\n         B     LINE07\n         LA    REG7,24(REG5)\n         B     LINE08\n         LA    REG7,24(REG5)\n         B     LINE09\n         LA    REG7,24(REG5)\n         B     LINE10\n         LA    REG7,12(REG5)\n         B     LINE11\n         LA    REG7,0(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,24(REG5)\n         B     LINE01\n         LA    REG7,24(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,24(REG5)\n         B     LINE04\n         LA    REG7,24(REG5)\n         B     LINE05\n         LA    REG7,12(REG5)\n         B     LINE06\n         LA    REG7,12(REG5)\n         B     LINE07\n         LA    REG7,24(REG5)\n         B     LINE08\n         LA    REG7,24(REG5)\n         B     LINE09\n         LA    REG7,24(REG5)\n         B     LINE10\n         LA    REG7,24(REG5)\n         B     LINE11\n         LA    REG7,24(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,12(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,72(REG5)\n         B     LINE03\n         LA    REG7,72(REG5)\n         B     LINE04\n         LA    REG7,72(REG5)\n         B     LINE05\n         LA    REG7,72(REG5)\n         B     LINE06\n         LA    REG7,72(REG5)\n         B     LINE07\n         LA    REG7,72(REG5)\n         B     LINE08\n         LA    REG7,72(REG5)\n         B     LINE09\n         LA    REG7,72(REG5)\n         B     LINE10\n         LA    REG7,12(REG5)\n         B     LINE11\n         LA    REG7,12(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,12(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,84(REG5)\n         B     LINE03\n         LA    REG7,84(REG5)\n         B     LINE04\n         LA    REG7,84(REG5)\n         B     LINE05\n         LA    REG7,84(REG5)\n         B     LINE06\n         LA    REG7,84(REG5)\n         B     LINE07\n         LA    REG7,84(REG5)\n         B     LINE08\n         LA    REG7,96(REG5)\n         B     LINE09\n         LA    REG7,96(REG5)\n         B     LINE10\n         LA    REG7,108(REG5)\n         B     LINE11\n         LA    REG7,120(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,24(REG5)\n         B     LINE01\n         LA    REG7,132(REG5)\n         B     LINE02\n         LA    REG7,144(REG5)\n         B     LINE03\n         LA    REG7,156(REG5)\n         B     LINE04\n         LA    REG7,168(REG5)\n         B     LINE05\n         LA    REG7,180(REG5)\n         B     LINE06\n         LA    REG7,192(REG5)\n         B     LINE07\n         LA    REG7,204(REG5)\n         B     LINE08\n         LA    REG7,156(REG5)\n         B     LINE09\n         LA    REG7,144(REG5)\n         B     LINE10\n         LA    REG7,132(REG5)\n         B     LINE11\n         LA    REG7,24(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,48(REG5)\n         B     LINE01\n         LA    REG7,48(REG5)\n         B     LINE02\n         LA    REG7,48(REG5)\n         B     LINE03\n         LA    REG7,48(REG5)\n         B     LINE04\n         LA    REG7,48(REG5)\n         B     LINE05\n         LA    REG7,48(REG5)\n         B     LINE06\n         LA    REG7,48(REG5)\n         B     LINE07\n         LA    REG7,48(REG5)\n         B     LINE08\n         LA    REG7,48(REG5)\n         B     LINE09\n         LA    REG7,24(REG5)\n         B     LINE10\n         LA    REG7,12(REG5)\n         B     LINE11\n         LA    REG7,12(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,24(REG5)\n         B     LINE01\n         LA    REG7,216(REG5)\n         B     LINE02\n         LA    REG7,228(REG5)\n         B     LINE03\n         LA    REG7,240(REG5)\n         B     LINE04\n         LA    REG7,252(REG5)\n         B     LINE05\n         LA    REG7,252(REG5)\n         B     LINE06\n         LA    REG7,252(REG5)\n         B     LINE07\n         LA    REG7,24(REG5)\n         B     LINE08\n         LA    REG7,24(REG5)\n         B     LINE09\n         LA    REG7,24(REG5)\n         B     LINE10\n         LA    REG7,24(REG5)\n         B     LINE11\n         LA    REG7,24(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,24(REG5)\n         B     LINE01\n         LA    REG7,264(REG5)\n         B     LINE02\n         LA    REG7,276(REG5)\n         B     LINE03\n         LA    REG7,288(REG5)\n         B     LINE04\n         LA    REG7,252(REG5)\n         B     LINE05\n         LA    REG7,300(REG5)\n         B     LINE06\n         LA    REG7,312(REG5)\n         B     LINE07\n         LA    REG7,324(REG5)\n         B     LINE08\n         LA    REG7,24(REG5)\n         B     LINE09\n         LA    REG7,24(REG5)\n         B     LINE10\n         LA    REG7,24(REG5)\n         B     LINE11\n         LA    REG7,24(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,0(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,24(REG5)\n         B     LINE04\n         LA    REG7,24(REG5)\n         B     LINE05\n         LA    REG7,24(REG5)\n         B     LINE06\n         LA    REG7,24(REG5)\n         B     LINE07\n         LA    REG7,24(REG5)\n         B     LINE08\n         LA    REG7,24(REG5)\n         B     LINE09\n         LA    REG7,24(REG5)\n         B     LINE10\n         LA    REG7,12(REG5)\n         B     LINE11\n         LA    REG7,0(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,36(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,24(REG5)\n         B     LINE04\n         LA    REG7,24(REG5)\n         B     LINE05\n         LA    REG7,12(REG5)\n         B     LINE06\n         LA    REG7,36(REG5)\n         B     LINE07\n         LA    REG7,48(REG5)\n         B     LINE08\n         LA    REG7,48(REG5)\n         B     LINE09\n         LA    REG7,48(REG5)\n         B     LINE10\n         LA    REG7,48(REG5)\n         B     LINE11\n         LA    REG7,48(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,0(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,24(REG5)\n         B     LINE04\n         LA    REG7,24(REG5)\n         B     LINE05\n         LA    REG7,24(REG5)\n         B     LINE06\n         LA    REG7,24(REG5)\n         B     LINE07\n         LA    REG7,24(REG5)\n         B     LINE08\n         LA    REG7,24(REG5)\n         B     LINE09\n         LA    REG7,252(REG5)\n         B     LINE10\n         LA    REG7,12(REG5)\n         B     LINE11\n         LA    REG7,0(REG5)\n         B     LINE12\n         LA    REG7,336(REG5)\n         B     LINE13\n         LA    REG7,36(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,24(REG5)\n         B     LINE04\n         LA    REG7,24(REG5)\n         B     LINE05\n         LA    REG7,12(REG5)\n         B     LINE06\n         LA    REG7,36(REG5)\n         B     LINE07\n         LA    REG7,168(REG5)\n         B     LINE08\n         LA    REG7,156(REG5)\n         B     LINE09\n         LA    REG7,144(REG5)\n         B     LINE10\n         LA    REG7,132(REG5)\n         B     LINE11\n         LA    REG7,24(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,0(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,48(REG5)\n         B     LINE04\n         LA    REG7,48(REG5)\n         B     LINE05\n         LA    REG7,36(REG5)\n         B     LINE06\n         LA    REG7,348(REG5)\n         B     LINE07\n         LA    REG7,516(REG5)\n         B     LINE08\n         LA    REG7,516(REG5)\n         B     LINE09\n         LA    REG7,24(REG5)\n         B     LINE10\n         LA    REG7,12(REG5)\n         B     LINE11\n         LA    REG7,0(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,12(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,72(REG5)\n         B     LINE03\n         LA    REG7,72(REG5)\n         B     LINE04\n         LA    REG7,72(REG5)\n         B     LINE05\n         LA    REG7,72(REG5)\n         B     LINE06\n         LA    REG7,72(REG5)\n         B     LINE07\n         LA    REG7,72(REG5)\n         B     LINE08\n         LA    REG7,72(REG5)\n         B     LINE09\n         LA    REG7,72(REG5)\n         B     LINE10\n         LA    REG7,72(REG5)\n         B     LINE11\n         LA    REG7,72(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,24(REG5)\n         B     LINE01\n         LA    REG7,24(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,24(REG5)\n         B     LINE04\n         LA    REG7,24(REG5)\n         B     LINE05\n         LA    REG7,24(REG5)\n         B     LINE06\n         LA    REG7,24(REG5)\n         B     LINE07\n         LA    REG7,24(REG5)\n         B     LINE08\n         LA    REG7,24(REG5)\n         B     LINE09\n         LA    REG7,24(REG5)\n         B     LINE10\n         LA    REG7,12(REG5)\n         B     LINE11\n         LA    REG7,0(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,24(REG5)\n         B     LINE01\n         LA    REG7,24(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,24(REG5)\n         B     LINE04\n         LA    REG7,24(REG5)\n         B     LINE05\n         LA    REG7,24(REG5)\n         B     LINE06\n         LA    REG7,24(REG5)\n         B     LINE07\n         LA    REG7,24(REG5)\n         B     LINE08\n         LA    REG7,360(REG5)\n         B     LINE09\n         LA    REG7,372(REG5)\n         B     LINE10\n         LA    REG7,384(REG5)\n         B     LINE11\n         LA    REG7,72(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,24(REG5)\n         B     LINE01\n         LA    REG7,24(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,24(REG5)\n         B     LINE04\n         LA    REG7,24(REG5)\n         B     LINE05\n         LA    REG7,252(REG5)\n         B     LINE06\n         LA    REG7,252(REG5)\n         B     LINE07\n         LA    REG7,252(REG5)\n         B     LINE08\n         LA    REG7,252(REG5)\n         B     LINE09\n         LA    REG7,240(REG5)\n         B     LINE10\n         LA    REG7,396(REG5)\n         B     LINE11\n         LA    REG7,408(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,24(REG5)\n         B     LINE01\n         LA    REG7,24(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,360(REG5)\n         B     LINE04\n         LA    REG7,372(REG5)\n         B     LINE05\n         LA    REG7,384(REG5)\n         B     LINE06\n         LA    REG7,384(REG5)\n         B     LINE07\n         LA    REG7,372(REG5)\n         B     LINE08\n         LA    REG7,360(REG5)\n         B     LINE09\n         LA    REG7,24(REG5)\n         B     LINE10\n         LA    REG7,24(REG5)\n         B     LINE11\n         LA    REG7,24(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,24(REG5)\n         B     LINE01\n         LA    REG7,24(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,360(REG5)\n         B     LINE04\n         LA    REG7,372(REG5)\n         B     LINE05\n         LA    REG7,384(REG5)\n         B     LINE06\n         LA    REG7,72(REG5)\n         B     LINE07\n         LA    REG7,72(REG5)\n         B     LINE08\n         LA    REG7,72(REG5)\n         B     LINE09\n         LA    REG7,72(REG5)\n         B     LINE10\n         LA    REG7,72(REG5)\n         B     LINE11\n         LA    REG7,72(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,12(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,420(REG5)\n         B     LINE04\n         LA    REG7,336(REG5)\n         B     LINE05\n         LA    REG7,84(REG5)\n         B     LINE06\n         LA    REG7,72(REG5)\n         B     LINE07\n         LA    REG7,432(REG5)\n         B     LINE08\n         LA    REG7,444(REG5)\n         B     LINE09\n         LA    REG7,456(REG5)\n         B     LINE10\n         LA    REG7,12(REG5)\n         B     LINE11\n         LA    REG7,12(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,72(REG5)\n         B     LINE01\n         LA    REG7,468(REG5)\n         B     LINE02\n         LA    REG7,480(REG5)\n         B     LINE03\n         LA    REG7,72(REG5)\n         B     LINE04\n         LA    REG7,72(REG5)\n         B     LINE05\n         LA    REG7,72(REG5)\n         B     LINE06\n         LA    REG7,72(REG5)\n         B     LINE07\n         LA    REG7,72(REG5)\n         B     LINE08\n         LA    REG7,72(REG5)\n         B     LINE09\n         LA    REG7,72(REG5)\n         B     LINE10\n         LA    REG7,12(REG5)\n         B     LINE11\n         LA    REG7,12(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,0(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,516(REG5)\n         B     LINE04\n         LA    REG7,516(REG5)\n         B     LINE05\n         LA    REG7,492(REG5)\n         B     LINE06\n         LA    REG7,504(REG5)\n         B     LINE07\n         LA    REG7,48(REG5)\n         B     LINE08\n         LA    REG7,48(REG5)\n         B     LINE09\n         LA    REG7,24(REG5)\n         B     LINE10\n         LA    REG7,12(REG5)\n         B     LINE11\n         LA    REG7,12(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,0(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,516(REG5)\n         B     LINE03\n         LA    REG7,516(REG5)\n         B     LINE04\n         LA    REG7,516(REG5)\n         B     LINE05\n         LA    REG7,528(REG5)\n         B     LINE06\n         LA    REG7,528(REG5)\n         B     LINE07\n         LA    REG7,516(REG5)\n         B     LINE08\n         LA    REG7,516(REG5)\n         B     LINE09\n         LA    REG7,516(REG5)\n         B     LINE10\n         LA    REG7,12(REG5)\n         B     LINE11\n         LA    REG7,0(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,528(REG5)\n         B     LINE01\n         LA    REG7,540(REG5)\n         B     LINE02\n         LA    REG7,552(REG5)\n         B     LINE03\n         LA    REG7,564(REG5)\n         B     LINE04\n         LA    REG7,360(REG5)\n         B     LINE05\n         LA    REG7,12(REG5)\n         B     LINE06\n         LA    REG7,12(REG5)\n         B     LINE07\n         LA    REG7,420(REG5)\n         B     LINE08\n         LA    REG7,420(REG5)\n         B     LINE09\n         LA    REG7,420(REG5)\n         B     LINE10\n         LA    REG7,420(REG5)\n         B     LINE11\n         LA    REG7,420(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,12(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,48(REG5)\n         B     LINE03\n         LA    REG7,48(REG5)\n         B     LINE04\n         LA    REG7,48(REG5)\n         B     LINE05\n         LA    REG7,108(REG5)\n         B     LINE06\n         LA    REG7,576(REG5)\n         B     LINE07\n         LA    REG7,420(REG5)\n         B     LINE08\n         LA    REG7,516(REG5)\n         B     LINE09\n         LA    REG7,516(REG5)\n         B     LINE10\n         LA    REG7,12(REG5)\n         B     LINE11\n         LA    REG7,36(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,0(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,48(REG5)\n         B     LINE04\n         LA    REG7,48(REG5)\n         B     LINE05\n         LA    REG7,36(REG5)\n         B     LINE06\n         LA    REG7,12(REG5)\n         B     LINE07\n         LA    REG7,24(REG5)\n         B     LINE08\n         LA    REG7,24(REG5)\n         B     LINE09\n         LA    REG7,24(REG5)\n         B     LINE10\n         LA    REG7,12(REG5)\n         B     LINE11\n         LA    REG7,0(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,12(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,516(REG5)\n         B     LINE04\n         LA    REG7,420(REG5)\n         B     LINE05\n         LA    REG7,336(REG5)\n         B     LINE06\n         LA    REG7,84(REG5)\n         B     LINE07\n         LA    REG7,72(REG5)\n         B     LINE08\n         LA    REG7,432(REG5)\n         B     LINE09\n         LA    REG7,444(REG5)\n         B     LINE10\n         LA    REG7,828(REG5)\n         B     LINE11\n         LA    REG7,48(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,0(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,24(REG5)\n         B     LINE04\n         LA    REG7,360(REG5)\n         B     LINE05\n         LA    REG7,588(REG5)\n         B     LINE06\n         LA    REG7,588(REG5)\n         B     LINE07\n         LA    REG7,360(REG5)\n         B     LINE08\n         LA    REG7,24(REG5)\n         B     LINE09\n         LA    REG7,24(REG5)\n         B     LINE10\n         LA    REG7,12(REG5)\n         B     LINE11\n         LA    REG7,0(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,0(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,24(REG5)\n         B     LINE04\n         LA    REG7,24(REG5)\n         B     LINE05\n         LA    REG7,12(REG5)\n         B     LINE06\n         LA    REG7,516(REG5)\n         B     LINE07\n         LA    REG7,516(REG5)\n         B     LINE08\n         LA    REG7,516(REG5)\n         B     LINE09\n         LA    REG7,24(REG5)\n         B     LINE10\n         LA    REG7,12(REG5)\n         B     LINE11\n         LA    REG7,0(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,588(REG5)\n         B     LINE01\n         LA    REG7,0(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,24(REG5)\n         B     LINE04\n         LA    REG7,24(REG5)\n         B     LINE05\n         LA    REG7,24(REG5)\n         B     LINE06\n         LA    REG7,24(REG5)\n         B     LINE07\n         LA    REG7,24(REG5)\n         B     LINE08\n         LA    REG7,24(REG5)\n         B     LINE09\n         LA    REG7,24(REG5)\n         B     LINE10\n         LA    REG7,0(REG5)\n         B     LINE11\n         LA    REG7,588(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,912(REG5)\n         B     LINE01\n         LA    REG7,912(REG5)\n         B     LINE02\n         LA    REG7,600(REG5)\n         B     LINE03\n         LA    REG7,612(REG5)\n         B     LINE04\n         LA    REG7,624(REG5)\n         B     LINE05\n         LA    REG7,36(REG5)\n         B     LINE06\n         LA    REG7,624(REG5)\n         B     LINE07\n         LA    REG7,612(REG5)\n         B     LINE08\n         LA    REG7,600(REG5)\n         B     LINE09\n         LA    REG7,912(REG5)\n         B     LINE10\n         LA    REG7,912(REG5)\n         B     LINE11\n         LA    REG7,912(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,636(REG5)\n         B     LINE01\n         LA    REG7,636(REG5)\n         B     LINE02\n         LA    REG7,636(REG5)\n         B     LINE03\n         LA    REG7,636(REG5)\n         B     LINE04\n         LA    REG7,636(REG5)\n         B     LINE05\n         LA    REG7,636(REG5)\n         B     LINE06\n         LA    REG7,636(REG5)\n         B     LINE07\n         LA    REG7,636(REG5)\n         B     LINE08\n         LA    REG7,636(REG5)\n         B     LINE09\n         LA    REG7,912(REG5)\n         B     LINE10\n         LA    REG7,636(REG5)\n         B     LINE11\n         LA    REG7,636(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,912(REG5)\n         B     LINE01\n         LA    REG7,372(REG5)\n         B     LINE02\n         LA    REG7,372(REG5)\n         B     LINE03\n         LA    REG7,12(REG5)\n         B     LINE04\n         LA    REG7,12(REG5)\n         B     LINE05\n         LA    REG7,372(REG5)\n         B     LINE06\n         LA    REG7,12(REG5)\n         B     LINE07\n         LA    REG7,12(REG5)\n         B     LINE08\n         LA    REG7,372(REG5)\n         B     LINE09\n         LA    REG7,372(REG5)\n         B     LINE10\n         LA    REG7,912(REG5)\n         B     LINE11\n         LA    REG7,912(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,648(REG5)\n         B     LINE01\n         LA    REG7,648(REG5)\n         B     LINE02\n         LA    REG7,588(REG5)\n         B     LINE03\n         LA    REG7,660(REG5)\n         B     LINE04\n         LA    REG7,360(REG5)\n         B     LINE05\n         LA    REG7,672(REG5)\n         B     LINE06\n         LA    REG7,684(REG5)\n         B     LINE07\n         LA    REG7,360(REG5)\n         B     LINE08\n         LA    REG7,660(REG5)\n         B     LINE09\n         LA    REG7,588(REG5)\n         B     LINE10\n         LA    REG7,648(REG5)\n         B     LINE11\n         LA    REG7,648(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,912(REG5)\n         B     LINE01\n         LA    REG7,696(REG5)\n         B     LINE02\n         LA    REG7,708(REG5)\n         B     LINE03\n         LA    REG7,720(REG5)\n         B     LINE04\n         LA    REG7,372(REG5)\n         B     LINE05\n         LA    REG7,84(REG5)\n         B     LINE06\n         LA    REG7,72(REG5)\n         B     LINE07\n         LA    REG7,432(REG5)\n         B     LINE08\n         LA    REG7,372(REG5)\n         B     LINE09\n         LA    REG7,732(REG5)\n         B     LINE10\n         LA    REG7,744(REG5)\n         B     LINE11\n         LA    REG7,756(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,648(REG5)\n         B     LINE01\n         LA    REG7,648(REG5)\n         B     LINE02\n         LA    REG7,648(REG5)\n         B     LINE03\n         LA    REG7,648(REG5)\n         B     LINE04\n         LA    REG7,912(REG5)\n         B     LINE05\n         LA    REG7,912(REG5)\n         B     LINE06\n         LA    REG7,912(REG5)\n         B     LINE07\n         LA    REG7,912(REG5)\n         B     LINE08\n         LA    REG7,912(REG5)\n         B     LINE09\n         LA    REG7,912(REG5)\n         B     LINE10\n         LA    REG7,912(REG5)\n         B     LINE11\n         LA    REG7,912(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,912(REG5)\n         B     LINE01\n         LA    REG7,912(REG5)\n         B     LINE02\n         LA    REG7,912(REG5)\n         B     LINE03\n         LA    REG7,912(REG5)\n         B     LINE04\n         LA    REG7,912(REG5)\n         B     LINE05\n         LA    REG7,0(REG5)\n         B     LINE06\n         LA    REG7,0(REG5)\n         B     LINE07\n         LA    REG7,912(REG5)\n         B     LINE08\n         LA    REG7,912(REG5)\n         B     LINE09\n         LA    REG7,912(REG5)\n         B     LINE10\n         LA    REG7,912(REG5)\n         B     LINE11\n         LA    REG7,912(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,912(REG5)\n         B     LINE01\n         LA    REG7,816(REG5)\n         B     LINE02\n         LA    REG7,516(REG5)\n         B     LINE03\n         LA    REG7,420(REG5)\n         B     LINE04\n         LA    REG7,336(REG5)\n         B     LINE05\n         LA    REG7,84(REG5)\n         B     LINE06\n         LA    REG7,72(REG5)\n         B     LINE07\n         LA    REG7,432(REG5)\n         B     LINE08\n         LA    REG7,444(REG5)\n         B     LINE09\n         LA    REG7,828(REG5)\n         B     LINE10\n         LA    REG7,48(REG5)\n         B     LINE11\n         LA    REG7,840(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,852(REG5)\n         B     LINE01\n         LA    REG7,516(REG5)\n         B     LINE02\n         LA    REG7,420(REG5)\n         B     LINE03\n         LA    REG7,336(REG5)\n         B     LINE04\n         LA    REG7,84(REG5)\n         B     LINE05\n         LA    REG7,84(REG5)\n         B     LINE06\n         LA    REG7,84(REG5)\n         B     LINE07\n         LA    REG7,84(REG5)\n         B     LINE08\n         LA    REG7,336(REG5)\n         B     LINE09\n         LA    REG7,420(REG5)\n         B     LINE10\n         LA    REG7,516(REG5)\n         B     LINE11\n         LA    REG7,852(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,864(REG5)\n         B     LINE01\n         LA    REG7,876(REG5)\n         B     LINE02\n         LA    REG7,828(REG5)\n         B     LINE03\n         LA    REG7,444(REG5)\n         B     LINE04\n         LA    REG7,432(REG5)\n         B     LINE05\n         LA    REG7,432(REG5)\n         B     LINE06\n         LA    REG7,432(REG5)\n         B     LINE07\n         LA    REG7,432(REG5)\n         B     LINE08\n         LA    REG7,444(REG5)\n         B     LINE09\n         LA    REG7,828(REG5)\n         B     LINE10\n         LA    REG7,876(REG5)\n         B     LINE11\n         LA    REG7,864(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,912(REG5)\n         B     LINE01\n         LA    REG7,912(REG5)\n         B     LINE02\n         LA    REG7,912(REG5)\n         B     LINE03\n         LA    REG7,912(REG5)\n         B     LINE04\n         LA    REG7,912(REG5)\n         B     LINE05\n         LA    REG7,912(REG5)\n         B     LINE06\n         LA    REG7,912(REG5)\n         B     LINE07\n         LA    REG7,912(REG5)\n         B     LINE08\n         LA    REG7,912(REG5)\n         B     LINE09\n         LA    REG7,912(REG5)\n         B     LINE10\n         LA    REG7,888(REG5)\n         B     LINE11\n         LA    REG7,888(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,912(REG5)\n         B     LINE01\n         LA    REG7,912(REG5)\n         B     LINE02\n         LA    REG7,912(REG5)\n         B     LINE03\n         LA    REG7,912(REG5)\n         B     LINE04\n         LA    REG7,912(REG5)\n         B     LINE05\n         LA    REG7,888(REG5)\n         B     LINE06\n         LA    REG7,888(REG5)\n         B     LINE07\n         LA    REG7,912(REG5)\n         B     LINE08\n         LA    REG7,888(REG5)\n         B     LINE09\n         LA    REG7,888(REG5)\n         B     LINE10\n         LA    REG7,912(REG5)\n         B     LINE11\n         LA    REG7,912(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,912(REG5)\n         B     LINE01\n         LA    REG7,912(REG5)\n         B     LINE02\n         LA    REG7,912(REG5)\n         B     LINE03\n         LA    REG7,912(REG5)\n         B     LINE04\n         LA    REG7,912(REG5)\n         B     LINE05\n         LA    REG7,888(REG5)\n         B     LINE06\n         LA    REG7,888(REG5)\n         B     LINE07\n         LA    REG7,912(REG5)\n         B     LINE08\n         LA    REG7,912(REG5)\n         B     LINE09\n         LA    REG7,888(REG5)\n         B     LINE10\n         LA    REG7,888(REG5)\n         B     LINE11\n         LA    REG7,900(REG5)\n         B     LINE12\n         LA    REG7,888(REG5)\n         B     LINE13\n         LA    REG7,420(REG5)\n         B     LINE01\n         LA    REG7,336(REG5)\n         B     LINE02\n         LA    REG7,84(REG5)\n         B     LINE03\n         LA    REG7,72(REG5)\n         B     LINE04\n         LA    REG7,432(REG5)\n         B     LINE05\n         LA    REG7,444(REG5)\n         B     LINE06\n         LA    REG7,432(REG5)\n         B     LINE07\n         LA    REG7,72(REG5)\n         B     LINE08\n         LA    REG7,84(REG5)\n         B     LINE09\n         LA    REG7,336(REG5)\n         B     LINE10\n         LA    REG7,420(REG5)\n         B     LINE11\n         LA    REG7,912(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,828(REG5)\n         B     LINE01\n         LA    REG7,444(REG5)\n         B     LINE02\n         LA    REG7,432(REG5)\n         B     LINE03\n         LA    REG7,72(REG5)\n         B     LINE04\n         LA    REG7,84(REG5)\n         B     LINE05\n         LA    REG7,336(REG5)\n         B     LINE06\n         LA    REG7,84(REG5)\n         B     LINE07\n         LA    REG7,72(REG5)\n         B     LINE08\n         LA    REG7,432(REG5)\n         B     LINE09\n         LA    REG7,444(REG5)\n         B     LINE10\n         LA    REG7,828(REG5)\n         B     LINE11\n         LA    REG7,912(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,912(REG5)\n         B     LINE01\n         LA    REG7,912(REG5)\n         B     LINE02\n         LA    REG7,912(REG5)\n         B     LINE03\n         LA    REG7,912(REG5)\n         B     LINE04\n         LA    REG7,0(REG5)\n         B     LINE05\n         LA    REG7,912(REG5)\n         B     LINE06\n         LA    REG7,0(REG5)\n         B     LINE07\n         LA    REG7,912(REG5)\n         B     LINE08\n         LA    REG7,912(REG5)\n         B     LINE09\n         LA    REG7,912(REG5)\n         B     LINE10\n         LA    REG7,912(REG5)\n         B     LINE11\n         LA    REG7,912(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,912(REG5)\n         B     LINE01\n         LA    REG7,912(REG5)\n         B     LINE02\n         LA    REG7,912(REG5)\n         B     LINE03\n         LA    REG7,912(REG5)\n         B     LINE04\n         LA    REG7,912(REG5)\n         B     LINE05\n         LA    REG7,912(REG5)\n         B     LINE06\n         LA    REG7,912(REG5)\n         B     LINE07\n         LA    REG7,912(REG5)\n         B     LINE08\n         LA    REG7,912(REG5)\n         B     LINE09\n         LA    REG7,888(REG5)\n         B     LINE10\n         LA    REG7,888(REG5)\n         B     LINE11\n         LA    REG7,900(REG5)\n         B     LINE12\n         LA    REG7,888(REG5)\n         B     LINE13\n         LA    REG7,912(REG5)\n         B     LINE01\n         LA    REG7,912(REG5)\n         B     LINE02\n         LA    REG7,72(REG5)\n         B     LINE03\n         LA    REG7,72(REG5)\n         B     LINE04\n         LA    REG7,72(REG5)\n         B     LINE05\n         LA    REG7,12(REG5)\n         B     LINE06\n         LA    REG7,12(REG5)\n         B     LINE07\n         LA    REG7,72(REG5)\n         B     LINE08\n         LA    REG7,72(REG5)\n         B     LINE09\n         LA    REG7,72(REG5)\n         B     LINE10\n         LA    REG7,912(REG5)\n         B     LINE11\n         LA    REG7,912(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,912(REG5)\n         B     LINE01\n         LA    REG7,72(REG5)\n         B     LINE02\n         LA    REG7,72(REG5)\n         B     LINE03\n         LA    REG7,0(REG5)\n         B     LINE04\n         LA    REG7,0(REG5)\n         B     LINE05\n         LA    REG7,828(REG5)\n         B     LINE06\n         LA    REG7,828(REG5)\n         B     LINE07\n         LA    REG7,0(REG5)\n         B     LINE08\n         LA    REG7,0(REG5)\n         B     LINE09\n         LA    REG7,72(REG5)\n         B     LINE10\n         LA    REG7,72(REG5)\n         B     LINE11\n         LA    REG7,912(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,0(REG5)\n         B     LINE01\n         LA    REG7,12(REG5)\n         B     LINE02\n         LA    REG7,24(REG5)\n         B     LINE03\n         LA    REG7,516(REG5)\n         B     LINE04\n         LA    REG7,420(REG5)\n         B     LINE05\n         LA    REG7,336(REG5)\n         B     LINE06\n         LA    REG7,84(REG5)\n         B     LINE07\n         LA    REG7,72(REG5)\n         B     LINE08\n         LA    REG7,72(REG5)\n         B     LINE09\n         LA    REG7,912(REG5)\n         B     LINE10\n         LA    REG7,72(REG5)\n         B     LINE11\n         LA    REG7,72(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\n         LA    REG7,912(REG5)\n         B     LINE01\n         LA    REG7,912(REG5)\n         B     LINE02\n         LA    REG7,912(REG5)\n         B     LINE03\n         LA    REG7,912(REG5)\n         B     LINE04\n         LA    REG7,912(REG5)\n         B     LINE05\n         LA    REG7,912(REG5)\n         B     LINE06\n         LA    REG7,912(REG5)\n         B     LINE07\n         LA    REG7,912(REG5)\n         B     LINE08\n         LA    REG7,912(REG5)\n         B     LINE09\n         LA    REG7,912(REG5)\n         B     LINE10\n         LA    REG7,912(REG5)\n         B     LINE11\n         LA    REG7,912(REG5)\n         B     LINE12\n         LA    REG7,912(REG5)\n         B     LINE13\nMAXEXCD  EQU   *\n         XC    LNEPRNT,LNEPRNT\n         MVC   CHARLNE,ERROR\n         CALL  SYS005PB,(RITEID,LNEPRNT),VL\n         B     ENDRTN\nNOPRINT  SH    REG8,HWD104\n         BC    15,0(0,8)\nPRNTRTN  B     MOVEDATA\n         MVI   PRNTRTN+1,X'F0'\n         MVI   LNEPRNT,C'1'\nMOVEDATA MVC   CHARLNE,0(3)\n         CALL  SYS005PB,(RITEID,LNEPRNT),VL\nSNGLSPCE B     CCRESET\n         MVI   SNGLSPCE+1,X'F0'\n         MVI   LNEPRNT,C' '\nCCRESET  AP    LINECNT,ONE\n         CP    LINECNT,PDEC13\n         BE    CONTPRT\n         AH    REG3,HWD132\n         B     PRNTRTN\nCONTPRT  AP    MAXWDS,ONE\n         CP    MAXWDS,PDEC08\n         BE    ENDRTN\n         LA    3,PRNTLNE\n         XC    LNEPRNT,LNEPRNT\n         CALL  SYS005PB,(RITEID,LNEPRNT),VL\n         CALL  SYS005PB,(RITEID,LNEPRNT),VL\n         B     CONT\nPRNTBLE  DS    0CL924\n         DC    C'  XXXXXXXX  '\n         DC    C' XXXXXXXXXX '\n         DC    C' XX      XX '\n         DC    C' XXXXXXXXX  '\n         DC    C' XX         '\n         DC    C' XX   XXXXX '\n         DC    C'    XX      '\n         DC    C'      XX    '\n         DC    C' XX   XX    '\n         DC    C' XXXXXXX    '\n         DC    C'  XXXXX     '\n         DC    C' XX     XX  '\n         DC    C' XX    XX   '\n         DC    C' XX   XX    '\n         DC    C' XX  XX     '\n         DC    C' XX XX      '\n         DC    C' XXXXX      '\n         DC    C' XXX XX     '\n         DC    C' XXX    XXX '\n         DC    C' XXXX  XXXX '\n         DC    C' XX XXXX XX '\n         DC    C' XX  XX  XX '\n         DC    C' XXX     XX '\n         DC    C' XXXX   XX  '\n         DC    C' XX XX   XX '\n         DC    C' XX   XX XX '\n         DC    C' XX    XXXX '\n         DC    C' XX     XXX '\n         DC    C'       XX   '\n         DC    C'  XXXXXXXXX '\n         DC    C'  XX    XX  '\n         DC    C'   XX  XX   '\n         DC    C'    XXXX    '\n         DC    C'  XXX  XXX  '\n         DC    C'   X    X   '\n         DC    C'        XX  '\n         DC    C'     XX     '\n         DC    C'    XX      '\n         DC    C'  XX     XX '\n         DC    C'    XXX     '\n         DC    C'   XXXX     '\n         DC    C'   XXXXXXX  '\n         DC    C'  XXXXXXX   '\n         DC    C'         XX '\n         DC    C'      XXXX  '\n         DC    C'     XXXXX  '\n         DC    C'    XX  XX  '\n         DC    C'   XX   XX  '\n         DC    C' XXXXXXXX   '\n         DC    C'   XXXXXX   '\n         DC    C'  X     X   '\n         DC    C'   X   X    '\n         DC    C'    X X     '\n         DC    C'   XXX      '\n         DC    C'    X  X    '\n         DC    C'  XXXXXXXX  '\n         DC    C'  XXXXXX    '\n         DC    C'    XXXXX   '\n         DC    C'   XX     X '\n         DC    C'  X  X   XX '\n         DC    C'  X  X  XX  '\n         DC    C'  XX  X  X  '\n         DC    C' XX   X  X  '\n         DC    C' X     XX   '\n         DC    C'    XXXX  X '\n         DC    C'   XX  XXXX '\n         DC    C'  XX   XXXX '\n         DC    C'  XXXXXX  X '\n         DC    C'          X '\n         DC    C'  XX        '\n         DC    C' X          '\n         DC    C'          XX'\n         DC    C'XX          '\n         DC    C' XX         '\n         DC    C' XXX        '\n         DC    C'   X        '\n         DC    C'            '\nERROR    DS    0CL132\n         DC    CL49' '\n         DC    C'*** TO MANY WORDS JOB A ***'\n         DC    CL49' '\nMSGTBLE  DS    0CL160\nMSGCRD1  DS    CL80\nMSGCRD2  DS    CL80\nONE      DC    P'+01'\nZERO     DC    P'+00'\nLINECNT  DC    P'+00'\nHWD01    DC    H'1'\nHWD02    DC    F'2'\nHWD11    DC    F'11'\nHWD104   DC    H'104'\nHWD132   DC    H'132'\nPDEC08   DC    P'+08'\nPDEC11   DC    P'+11'\nPDEC13   DC    P'+13'\nSTOREMSG DC    CL88' '\nTBLE1    DS    0XL256\n         DC    95X'00'\n         DC    1X'01'\n         DC    28X'00'\n         DC    1X'02'\n         DC    131X'00'\nMAXWDS   DC    P'+08'\nPRNTLNE  DS    13CL132\nCHARTBLE DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890*!#$%\"-/().:;<>=,+C\n               \u00a2? '\nCHARCNT  DC    P'+00'\nRITEID   DC    C'RITE'\nLNEPRNT  DS    0CL133\n         DS    CL1\nCHARLNE  DS    CL132\nENDRTN   L     13,SAVEAREA+4\n         RETURN (14,12),,RC=0000\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SYS005PB": {"ttr": 7427, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x83\\t_\\x00\\x83\\t_\\t\\x00\\x00D\\x00D\\x00\\x00\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1983-04-05T00:00:00", "modifydate": "1983-04-05T09:00:00", "lines": 68, "newlines": 68, "modlines": 0, "user": "SHSWRPD"}, "text": "         TITLE  'LIBSPOOL JCL MODULE WRITE ROUTINE'\nSYS005PB CSECT\n         PRINT ON,DATA\nREGO     EQU   0\nREG1     EQU   1\nREG2     EQU   2\nREG3     EQU   3\nREG4     EQU   4\nREG5     EQU   5\nREG6     EQU   6\nREG7     EQU   7\nREG8     EQU   8\nREG9     EQU   9\nREG10    EQU   10\nREG11    EQU   11\nREG12    EQU   12\nREG13    EQU   13\nREG14    EQU   14\nREG15    EQU   15\n         SAVE  (14,12)\n         LR    REG9,REG15\n         USING SYS005PB,REG9\n         ST    REG13,SAVEAREA+4\n         LR    REG12,REG13\n         LA    REG13,SAVEAREA\n         ST    REG13,8(12)\n         B     BEGIN\n         DC    C'SYS005PB'\nSAVEAREA DS    9D\n         LTORG\n*\n*******************************************************************\n* PURPOSE.                                                        *\n*     THIS ROUTINE DOES THE FOLLOWING:                            *\n*     1) OPENS THE OUTPUT PRINT FILE WHEN PASSED THE 'OPEN' PARM  *\n*     2) WRITES THE RECORD PASSED WHEN PASSED THE 'RITE' PARM     *\n*     3) CLOSES THE OUTPUT PRINT FILE WHEN PASSED THE 'CLSE' PARM *\n*\n*   THIS PROGRAM IS PASSED A PARAMETER LIST AT ENTRY REG1 POINTS TO\n*   AN ADDRESS THAT POINTS TO THE FOLLOWING\n*\n*        1) ADDRESS POINTING TO THE ACTION REQUESTED OPEN,RITE,CLSE\n*        2) ADDRESS POINTING TO THE RECORD TO WRITE\n*\n*   THIS PROGRAM IS CALLED BY PROGRAM SYS005PA TO WRITE THE SEPARATOR\n*   PAGE DATA AND BY PROGRAM SYS005P0 TO WRITE THE JCL DATA.\n*\n*******************************************************************\n*BEGIN    DC    F'0'\nBEGIN    LM    REG2,REG3,0(REG1)       REG2 = ADDR. OF ACTION PARM\n*                                      REG3 = ADDR. OF RECORD TO WRITE\n         CLC   0(4,REG2),=C'RITE'\n         BE    RITEPRT\n         CLC   0(4,REG2),=C'OPEN'\n         BE    OPENPRT\n         CLC   0(4,REG2),=C'CLSE'\n         BE    CLSEPRT\nABENDIT  DC    F'0'\nOPENPRT  OPEN  (PRINT,(OUTPUT))\n         B     ENDRTN\nCLSEPRT  CLOSE PRINT\n         B     ENDRTN\nRITEPRT  PUT   PRINT,(3)\nENDRTN   L     13,SAVEAREA+4\n         RETURN (14,12),,RC=0000\nPRINT    DCB   DDNAME=JCLPRINT,DSORG=PS,MACRF=PM,                      *\n               RECFM=FBA,LRECL=133,BLKSIZE=1330\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYS005P0": {"ttr": 7429, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x83\\t_\\x00\\x83\\x13\\x1f\\tS\\x042\\x04%\\x042\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1983-04-05T00:00:00", "modifydate": "1983-05-11T09:53:00", "lines": 1074, "newlines": 1061, "modlines": 1074, "user": "SHSWRPD"}, "text": "000100 IDENTIFICATION DIVISION.\n000200   PROGRAM-ID.    SYS005P0.\n000300   INSTALLATION.  OCCIDENTAL CHEMICAL CORPORATION.\n000400 DATE-COMPILED.   DATE.\n000500 REMARKS. WRITTEN BY :\n000600                             ROBERT P DZIALAK\n000700                             OCCIDENTAL CHEMICAL CORPORATION\n000800                             360 RAINBOW BLVD. SOUTH\n000900                             NIAGARA FALLS , NEW YORK 14303\n001000                             (716) 286-3251\n001100*\n001200* THIS PROGRAM CAN BE USED TO OBTAIN PRINT OUTPUT OF JCL CONTAINED\n001300* ON THE LIBSPOOL ON-LINE DATA SET. SELECTION IS DONE USING A\n001400* INPUT CARD WITH THE GENERIC JOB NAME OF THE JOB(S) OF INTEREST.\n001500*\n001600*  FORMAT OF THE INPUT SELECTION CARD IS AS FOLLOWS:\n001700*          1111111111222222222233333333333444444444\n001800* 1234567890123456789012345678901234567890123456789\n001900* JOBNAME=NNNNNNNN,SELECT=ALL\n002000* JOBNAME=NNNNNNNN,SELECT=LAST\n002100* JOBNAME=NNNNNNNN,SELECT=TODAY-NN,START TIME=HH.MM\n002200*\n002300* IF NO SELECT OPTION IS SPECIFIED THEN SELECT=LAST IS ASSUMED.\n002400*\n002500* WHERE :NNNNNNNN - 1-8 CHARACTER GENERIC JOBNAME\n002600*        ALL      - PRINT ALL JOBS WHICH MATCH THIS GENERIC JOB\n002700*                   NAME\n002800*        LAST     - PRINT THE MOST RECIENTLY RUN JOBS WHICH MATCH\n002900*                   THIS GENERIC JOBNAME\n003000*        TODAY-NN - PRINT ALL JOBS WHICH MATCH THIS GENERIC JOB\n003100*                   NAME WHICH STARTED EXECUTION TODAY THRU NN\n003200*                   DAYS PRIOR TO TODAY.\n003300*                EG. TODAY-00 ===> SELECT JOBS BEGINNING EXECUTION\n003400*                                  TODAY ONLY\n003500*                    TODAY-01 ===> SELECT JOBS BEGINNING EXECUTION\n003600*                                  TODAY AND YESTERDAY\n003700*                             ETC.\n003800*    OPTIONAL:\n003900*        START TIME=HH.MM - START SELECTING JOBS ON THE OLDEST DAY\n004000*                           AT THE HOUR (HH) AND MINUTE (MM) SHOWN\n004100*\n004200* IF AN ERROR IS FOUND IN THE FORMAT OF THE SELECTION INPUT CARD\n004300* THEN AN ERROR REPORT IS PRODUCED SHOWING THE FORMAT OF THE INPUT\n004400* CARD ALONG WITH THE INPUT CARD(S) IN ERROR.\n004500*\n004600* A 'LIBSPOOL MODULES SELECTED FOR PRINT REPORT' IS ALSO PRODUCED\n004700* SHOWING THE JCL MODULES THAT WERE SELECTED FOR PRINT WITH THE\n004800* CORRESPONDING SELECTION INPUT CARD.\n004900*\n005000* THE FOLLOWING USER WRITTEN SUBROUTINES ARE CALLED BY THIS\n005100* PROGRAM:\n005200*\n005300*   SYS005PA - THIS ROUTINE IS PASSED THE JOB NAME, JOB NUMBER,\n005400*              GREGORIAN RUN DATE, START RUN HOUR AND MINUTE, AND\n005500*              END RUN HOUR AND MINUTE. THIS INFORMATION IS\n005600*              FORMATTED ONTO A SEPARATOR PAGE WHICH IS WRITTEN\n005700*              PRIOR TO THE JCL. IT SHOULD HELP LOCATE AND\n005800*              IDENTIFY JCL MODULES THAT WERE SELECTED FOR\n005900*              PRINTING.\n006000*\n006100*   SYS005PB - THIS ROUTINE IS USED TO OPEN, CLOSE, AND WRITE\n006200*              THE RECORDS WRITTEN TO THE JCLPRINT DDNAME. IT IS\n006300*              USED BY THE SYS005PA ROUTINE FOR THE SEPARATOR\n006400*              PAGE AND BY THIS PROGRAM FOR THE JCL.\n006500*\n006600*\n006700 ENVIRONMENT DIVISION.\n006800  CONFIGURATION SECTION.\n006900    SOURCE-COMPUTER. IBM-370.\n007000    OBJECT-COMPUTER. IBM-370.\n007100  INPUT-OUTPUT SECTION.\n007200    FILE-CONTROL.\n007300       SELECT SELECTCD              ASSIGN TO UT-S-SELECTCD.\n007400       SELECT SELCTRPT              ASSIGN TO UT-S-SELCTRPT.\n007500       SELECT ERRORRPT              ASSIGN TO UT-S-ERRORRPT.\n007600 DATA DIVISION.\n007700  FILE SECTION.\n007800   FD  SELECTCD\n007900       BLOCK CONTAINS 0 RECORDS\n008000       LABEL RECORDS ARE STANDARD.\n008100   01  SELECTCD-REC.\n008200       02 JOB-NAME-LIT            PIC X(8).\n008300       02 JOB-TO-SELECT.\n008400          03 JOB-CHAR             PIC X    OCCURS 8 TIMES.\n008500       02 SELECT-LIT              PIC X(8).\n008600       02 SELECTION-MODE.\n008700          03 SELECT-ID            PIC X(6).\n008800          03 RELTVE-START-DATE    PIC 99.\n008900          03 REL-START-DATE-XX REDEFINES RELTVE-START-DATE PIC XX.\n009000       02 STRT-TME-LIT            PIC X(12).\n009100       02 START-HH                PIC 99.\n009200       02 FILLER                  PIC X.\n009300       02 START-MM                PIC 99.\n009400       02 END-TME-LIT             PIC X(10).\n009500       02 END-HH                  PIC 99.\n009600       02 FILLER                  PIC X.\n009700       02 END-MM                  PIC 99.\n009800       02 FILLER                  PIC X(16).\n009900   FD  SELCTRPT\n010000       BLOCK CONTAINS 0 RECORDS\n010100       LABEL RECORDS ARE STANDARD.\n010200   01  SELCTRPT-REC               PIC X(133).\n010300   FD  ERRORRPT\n010400       BLOCK CONTAINS 0 RECORDS\n010500       LABEL RECORDS ARE STANDARD.\n010600   01  ERRORRPT-REC               PIC X(133).\n010700  WORKING-STORAGE SECTION.\n010800   77  MO-CTR                     PIC S9(9) COMP VALUE +0.\n010900   77  MOD-COUNT                  PIC S9(9) COMP VALUE +0.\n011000   77  IDLE-DAYS                  PIC S9(9) COMP VALUE +0.\n011100   77  LEAPTEST                   PIC S9(9) COMP VALUE +0.\n011200   77  LEAP-RMNDR                 PIC S9(9) COMP VALUE +0.\n011300   77  LEAP-TEST                  PIC S9(9) COMP VALUE +0.\n011400   77  HOURS-ONLINE               PIC S9(9) COMP VALUE +0.\n011500   77  JOB-DAYS                   PIC S9(9) COMP VALUE +0.\n011600   77  JOB-HOUR                   PIC S9(9) COMP VALUE +0.\n011700   77  CURRENT-DAYS               PIC S9(9) COMP VALUE +0.\n011800   77  CURRENT-HOUR               PIC S9(9) COMP VALUE +0.\n011900   77  RUN-HOUR                   PIC S9(9) COMP VALUE +0.\n012000   77  BASE-MCD-CODE              PIC S9(9) COMP VALUE +0.\n012100   77  PAGE-COUNT                 PIC S9(3) COMP-3 VALUE +0.\n012200   77  LINE-COUNT                 PIC S9(3) COMP-3 VALUE +60.\n012300   77  ERRORRPT-LINE-CTR          PIC S9(3) COMP-3 VALUE +60.\n012400   77  ERRORRPT-PAGE-COUNT        PIC S9(3) COMP-3 VALUE +0.\n012500   77  JOB-CTR                    PIC S9(3) COMP-3 VALUE +0.\n012600   77  TABENTRY                   PIC S9(3) COMP-3 VALUE +0.\n012700   77  SELECT-CARD-COUNT          PIC S9(3) COMP-3 VALUE +0.\n012800   77  SEL-EOF-SW                 PIC S9    COMP-3 VALUE +0.\n012900   77  ERRORRPT-OPEN-SW           PIC S9    COMP-3 VALUE +0.\n013000   77  JOB-COMPARE-SW             PIC S9    COMP-3 VALUE +0.\n013100   77  NO-MATCH-SW                PIC S9    COMP-3 VALUE +0.\n013200   77  START-JUL-DATE             PIC 999      VALUE 0.\n013300   77  REL-START-DATE-WS          PIC XX       VALUE SPACES.\n013400   77  JOB-1                      PIC X(1)     VALUE SPACES.\n013500   77  JOB-2                      PIC X(2)     VALUE SPACES.\n013600   77  JOB-3                      PIC X(3)     VALUE SPACES.\n013700   77  JOB-4                      PIC X(4)     VALUE SPACES.\n013800   77  JOB-5                      PIC X(5)     VALUE SPACES.\n013900   77  JOB-6                      PIC X(6)     VALUE SPACES.\n014000   77  JOB-7                      PIC X(7)     VALUE SPACES.\n014100   77  JOB-8                      PIC X(8)     VALUE SPACES.\n014200   77  END-HH-WS                  PIC XX       VALUE SPACES.\n014300   77  END-MM-WS                  PIC XX       VALUE SPACES.\n014400*\n014500   01  OPENID                     PIC X(4)     VALUE 'OPEN'.\n014600   01  RITEID                     PIC X(4)     VALUE 'RITE'.\n014700   01  CLSEID                     PIC X(4)     VALUE 'CLSE'.\n014800*\n014900   01  CARD-AREA-1                PIC X(80)    VALUE SPACES.\n015000*\n015100   01  CARD-AREA-2-DATA.\n015200       02  CONTINUE-BYTE          PIC X.\n015300       02  CARD-AREA-2            PIC X(79)    VALUE SPACES.\n015400*\n015500   01  BLANK-LINE                 PIC X(133)   VALUE SPACES.\n015600*\n015700   01  PRINT-AREA.\n015800       02 FILLER                  PIC X.\n015900       02 FILLER                  PIC X(79).\n016000       02 PRINT-AREA-2            PIC X(53).\n016100*\n016200   01  HEADER-DATA.\n016300       02 HDR-DTA-JBNME           PIC X(8).\n016400       02 FILLER                  PIC X        VALUE '@'.\n016500       02 HDR-DTA-JOB-NMBR        PIC X(4).\n016600       02 FILLER                  PIC X        VALUE '@'.\n016700       02 HDR-DTA-GREG-DTE        PIC X(8).\n016800       02 FILLER                  PIC X        VALUE '@'.\n016900       02 HDR-DTA-RUN-TIME.\n017000           03 HDR-DTA-STRT-TIME       PIC X(5).\n017100           03 HDR-DTA-DASH            PIC X        VALUE '-'.\n017200           03 HDR-DTA-END-TIME        PIC X(5).\n017300       02 FILLER                  PIC X        VALUE '\u00ac'.\n017400*\n017500   01  OPN-RETURN-CODE            PIC  X       VALUE SPACE.\n017600*\n017700   01  OPN-AREA                   PIC  X(16)   VALUE SPACE.\n017800*\n017900   01  MOD-NAME                   PIC  X(8)    VALUE SPACE.\n018000*\n018100   01  MOD-RETURN-CODE            PIC  X       VALUE SPACE.\n018200*\n018300   01  MOD-AREA.\n018400       02 MOD-PASSWORD            PIC X(04).\n018500       02 DATE-ADDED              PIC X(06).\n018600       02 LAST-UP-DATE.\n018700          03 LST-UP-MM            PIC 99.\n018800          03 LST-UP-DD            PIC 99.\n018900          03 LST-UP-YY            PIC 99.\n019000       02 LAST-UP-HH              PIC 99.\n019100       02 LAST-UP-MM              PIC 99.\n019200       02 FILLER                  PIC XXX.\n019300       02 JOBNAME                 PIC X(8).\n019400       02 JOB-CHAR-1 REDEFINES JOBNAME.\n019500          03 JOBNAME-1            PIC X(1).\n019600          03 FILLER               PIC X(7).\n019700       02 JOB-CHAR-2 REDEFINES JOBNAME.\n019800          03 JOBNAME-2            PIC X(2).\n019900          03 FILLER               PIC X(6).\n020000       02 JOB-CHAR-3 REDEFINES JOBNAME.\n020100          03 JOBNAME-3            PIC X(3).\n020200          03 FILLER               PIC X(5).\n020300       02 JOB-CHAR-4 REDEFINES JOBNAME.\n020400          03 JOBNAME-4            PIC X(4).\n020500          03 FILLER               PIC X(4).\n020600       02 JOB-CHAR-5 REDEFINES JOBNAME.\n020700          03 JOBNAME-5            PIC X(5).\n020800          03 FILLER               PIC X(3).\n020900       02 JOB-CHAR-6 REDEFINES JOBNAME.\n021000          03 JOBNAME-6            PIC X(6).\n021100          03 FILLER               PIC X(2).\n021200       02 JOB-CHAR-7 REDEFINES JOBNAME.\n021300          03 JOBNAME-7            PIC X(7).\n021400          03 FILLER               PIC X(1).\n021500       02 JOB-CHAR-8 REDEFINES JOBNAME.\n021600          03 JOBNAME-8            PIC X(8).\n021700       02 USERID                  PIC X(7).\n021800       02 FILLER                  PIC X(8).\n021900       02 MODLNAME.\n022000          03 FILLER               PIC X(4).\n022100          03 JOBNUMB              PIC 9999.\n022200       02 JUL-RUN-DATE            PIC X(5).\n022300       02 RUN-DATE REDEFINES JUL-RUN-DATE.\n022400          03 JUL-RUN-YY           PIC 99.\n022500          03 JUL-RUN-DDD          PIC 999.\n022600       02 RUN-STR-HH              PIC XX.\n022700       02 RUN-STR-MM              PIC XX.\n022800       02 RUN-END-HH              PIC XX.\n022900       02 RUN-END-MM              PIC XX.\n023000       02 FILLER                  PIC X(21).\n023100       02 LAST-ACCESS             PIC X(06).\n023200       02 FILLER                  PIC X(06).\n023300*\n023400   01  START-TIME-WS.\n023500       02  START-HH-WS            PIC XX       VALUE SPACES.\n023600       02  START-MM-WS            PIC XX       VALUE SPACES.\n023700*\n023800   01  START-TIME-JOB-WS.\n023900       02  START-HH-JOB-WS        PIC XX       VALUE SPACES.\n024000       02  START-MM-JOB-WS        PIC XX       VALUE SPACES.\n024100*\n024200   01  WS-DATE.\n024300       02 MM                      PIC 99.\n024400       02 DD                      PIC 99.\n024500       02 YY                      PIC 99.\n024600*\n024700   01  WS-GREGORIAN-DATE.\n024800       02 GREG-MM                 PIC 99.\n024900       02 FILLER                  PIC X.\n025000       02 GREG-DD                 PIC 99.\n025100       02 FILLER                  PIC X.\n025200       02 GREG-YY                 PIC 99.\n025300*\n025400   01  DATE-CONVERTED-WS.\n025500       02 CONVERT-YY                  PIC 99.\n025600       02 DATE-CONVERTED              PIC 999.\n025700*\n025800   01  WS-CUR-JULIAN-DATE.\n025900       02 CUR-JUL-YY                  PIC 99.\n026000       02 CUR-JUL-DDD                 PIC 999.\n026100*\n026200   01  WS-CUR-TIME.\n026300       02 CUR-HH                      PIC 99.\n026400       02 CUR-MM                      PIC 99.\n026500       02 FILLER                      PIC X(4).\n026600*\n026700   01  CALENDAR-TABLE.\n026800       02 FILLER                  PIC S9999  COMP VALUE +31.\n026900       02 FEB                     PIC S9999  COMP VALUE +28.\n027000       02 FILLER                  PIC S9999  COMP VALUE +31.\n027100       02 FILLER                  PIC S9999  COMP VALUE +30.\n027200       02 FILLER                  PIC S9999  COMP VALUE +31.\n027300       02 FILLER                  PIC S9999  COMP VALUE +30.\n027400       02 FILLER                  PIC S9999  COMP VALUE +31.\n027500\n027600       02 FILLER                  PIC S9999  COMP VALUE +31.\n027700       02 FILLER                  PIC S9999  COMP VALUE +30.\n027800       02 FILLER                  PIC S9999  COMP VALUE +31.\n027900       02 FILLER                  PIC S9999  COMP VALUE +30.\n028000       02 FILLER                  PIC S9999  COMP VALUE +31.\n028100*\n028200   01  CALENDAR-DAYS REDEFINES CALENDAR-TABLE.\n028300       02 MTH-DAY                 PIC S9999  COMP OCCURS 12 TIMES.\n028400*\n028500   01  LAST-JOB-TABLE.\n028600       02 JOB-TABENTRY OCCURS 500 TIMES.\n028700          03 LAST-MOD-NAME        PIC X(8).\n028800          03 LAST-JOB-NAME        PIC X(8).\n028900*\n029000   01  NO-INPUT.\n029100       02 FILLER                  PIC X.\n029200       02 FILLER                  PIC X(132)     VALUE\n029300       '***** NO INPUT DATA FOUND *****'.\n029400*\n029500   01  SEL-HDR-1.\n029600       02 FILLER                  PIC X.\n029700       02 FILLER                  PIC X(5)      VALUE 'DATE='.\n029800       02 R-DATE                  PIC X(8).\n029900       02 FILLER                  PIC X(6)      VALUE ',TIME='.\n030000       02 R-HH                    PIC X(2).\n030100       02 FILLER                  PIC X         VALUE '.'.\n030200       02 R-MM                    PIC X(2).\n030300       02 FILLER                  PIC X(24)     VALUE SPACES.\n030400       02 FILLER                  PIC X(47)     VALUE\n030500       'LIBSPOOL  MODULES  SELECTED  FOR  PRINT  REPORT'.\n030600       02 FILLER                  PIC X(27)     VALUE SPACES.\n030700       02 FILLER                  PIC X(5)      VALUE 'PAGE '.\n030800       02 PAGE-NO                 PIC ZZ9.\n030900*\n031000   01  SEL-HDR-2.\n031100       02 FILLER                  PIC X.\n031200       02 FILLER                  PIC X(06)     VALUE 'JOB - '.\n031300       02 INVKNG-JOB-NM-R         PIC X(08)     VALUE SPACES.\n031400       02 FILLER                  PIC X(17)     VALUE\n031500       '  PROG - SYS005P0'.\n031600       02 FILLER                  PIC X(84)     VALUE SPACES.\n031700       02 FILLER                  PIC X(17)     VALUE\n031800       'SEQUENCE - RANDOM'.\n031900*\n032000   01  SEL-HDR-3.\n032100       02 FILLER                  PIC X.\n032200       02 FILLER                  PIC X(100)    VALUE\n032300       '           JOB              LIBRARIAN   RUN DATE  START\n032400-      'END                               '.\n032500       02 FILLER                  PIC X(32)     VALUE SPACES.\n032600*\n032700   01  SEL-HDR-4.\n032800       02 FILLER                  PIC X.\n032900       02 FILLER                  PIC X(113)    VALUE\n033000       'JOB NAME  NUMBER  USER ID  MODULE NAME  MM/DD/YY  HH.MM  H\n033100-      'H.MM      ********************  SELECTION  CARD  USED  '.\n033200       02 FILLER                  PIC X(19)     VALUE\n033300       '*******************'.\n033400*\n033500   01  SEL-DETAIL.\n033600       02 FILLER                      PIC X.\n033700       02 JOBNAME-R                   PIC X(8).\n033800       02 FILLER                      PIC XXX    VALUE SPACES.\n033900       02 JOBNUMB-R                   PIC ZZZ9.\n034000       02 FILLER                      PIC XXX    VALUE SPACES.\n034100       02 USERID-R                    PIC X(7).\n034200       02 FILLER                      PIC XXX    VALUE SPACES.\n034300       02 MODNAME-R                   PIC X(8).\n034400       02 FILLER                      PIC X(4)   VALUE SPACES.\n034500       02 GREG-DT.\n034600           03 RUN-MM-R                PIC XX.\n034700           03 FILLER-SLA1             PIC X      VALUE '/'.\n034800           03 RUN-DD-R                PIC XX.\n034900           03 FILLER-SLA2             PIC X      VALUE '/'.\n035000           03 RUN-YY-R                PIC XX.\n035100       02 FILLER                      PIC XX     VALUE SPACES.\n035200       02 NOT-SCH-R.\n035300           03 START-TIME.\n035400               04 STRT-HH-R           PIC XX.\n035500               04 FILLER-PER1         PIC X      VALUE '.'.\n035600               04 STRT-MM-R           PIC XX.\n035700           03 FILLER                  PIC X(2)   VALUE SPACES.\n035800           03 END-TIME.\n035900               04 END-HH-R            PIC XX.\n036000               04 FILLER-PER2         PIC X      VALUE '.'.\n036100               04 END-MM-R            PIC XX.\n036200           03 FILLER                  PIC X(6)   VALUE SPACES.\n036300       02 SELECT-CARD-R               PIC X(64).\n036400*\n036500   01  ERR-HDR-1.\n036600       02 FILLER                  PIC X.\n036700       02 FILLER                  PIC X(5)      VALUE 'DATE='.\n036800       02 E-DATE                  PIC X(8).\n036900       02 FILLER                  PIC X(6)      VALUE ',TIME='.\n037000       02 E-HH                    PIC XX.\n037100       02 FILLER                  PIC X         VALUE '.'.\n037200       02 E-MM                    PIC XX.\n037300       02 FILLER                  PIC X(19)     VALUE SPACES.\n037400       02 FILLER                  PIC X(60)     VALUE\n037500       'LIBSPOOL  MODULE  SELECTION  FOR  PRINT  EXCEPTION  REPORT\n037600-      '  '.\n037700       02 FILLER                  PIC X(21)     VALUE SPACES.\n037800       02 FILLER                  PIC X(5)      VALUE 'PAGE '.\n037900       02 E-PAGE-NO               PIC ZZ9.\n038000*\n038100   01  DASH-LINE                  PIC X(133)    VALUE ALL'-'.\n038200*\n038300   01  FMT-1.\n038400       02 FILLER                  PIC X(08).\n038500       02 FILLER                  PIC X(100) VALUE\n038600     '   FORMAT OF THE SELECT CARD IS AS FOLLOWS:\n038700-    '                                        '.\n038800       02 FILLER                  PIC X(25)  VALUE SPACES.\n038900*\n039000   01  FMT-2.\n039100       02 FILLER                  PIC X(09)  VALUE '  CARD   '.\n039200       02 FILLER                  PIC X(100) VALUE\n039300     '         1111111112222222222233333333333444444444\n039400-    '                                        '.\n039500       02 FILLER                  PIC X(24)  VALUE SPACES.\n039600*\n039700   01  FMT-3.\n039800       02 FILLER                  PIC X(09)  VALUE ' COLUMNS '.\n039900       02 FILLER                  PIC X(100) VALUE\n040000     '1234567890123456789012345678901234567890123456789\n040100-    '                                        '.\n040200       02 FILLER                  PIC X(24)  VALUE SPACES.\n040300*\n040400   01  FMT-4.\n040500       02 FILLER                  PIC X(09)  VALUE SPACES.\n040600       02 FILLER                  PIC X(100) VALUE\n040700     'JOBNAME=NNNNNNNN,SELECT=ALL\n040800-    '                                        '.\n040900       02 FILLER                  PIC X(24)  VALUE SPACES.\n041000*\n041100   01  FMT-5.\n041200       02 FILLER                  PIC X(09)  VALUE SPACES.\n041300       02 FILLER                  PIC X(100) VALUE\n041400     'JOBNAME=NNNNNNNN,SELECT=LAST\n041500-    '                                        '.\n041600       02 FILLER                  PIC X(24)  VALUE SPACES.\n041700*\n041800   01  FMT-6.\n041900       02 FILLER                  PIC X(09)  VALUE SPACES.\n042000       02 FILLER                  PIC X(100) VALUE\n042100     'JOBNAME=NNNNNNNN,SELECT=TODAY-NN,START TIME=HH.MM\n042200-    '                                        '.\n042300       02 FILLER                  PIC X(24)  VALUE SPACES.\n042400*\n042500   01  FMT-7.\n042600       02 FILLER                  PIC X(08)  VALUE SPACES.\n042700       02 FILLER                  PIC X(100) VALUE\n042800     ' IF NO SELECT OPTION IS SPECIFIED THEN SELECT=LAST IS ASSUME\n042900-    'D.                                      '.\n043000       02 FILLER                  PIC X(25)  VALUE SPACES.\n043100*\n043200   01  FMT-8.\n043300       02 FILLER                  PIC X(08)  VALUE SPACES.\n043400       02 FILLER                  PIC X(100) VALUE\n043500     ' WHERE :NNNNNNNN - 1-8 CHARACTER GENERIC JOB NAME\n043600-    '                                       '.\n043700       02 FILLER                  PIC X(25)  VALUE SPACES.\n043800*\n043900   01  FMT-9.\n044000       02 FILLER                  PIC X(08)  VALUE SPACES.\n044100       02 FILLER                  PIC X(100) VALUE\n044200     '        ALL      - PRINT ALL JOBS WHICH MATCH THIS GENERIC J\n044300-    'OB NAME                                 '.\n044400       02 FILLER                  PIC X(25)  VALUE SPACES.\n044500*\n044600   01  FMT-10.\n044700       02 FILLER                  PIC X(08)  VALUE SPACES.\n044800       02 FILLER                  PIC X(100) VALUE\n044900     '        LAST     - PRINT THE MOST RECENTLY RUN JOBS WHICH MA\n045000-    'TCH THIS GENERIC JOB NAME               '.\n045100       02 FILLER                  PIC X(25)  VALUE SPACES.\n045200*\n045300   01  FMT-11.\n045400       02 FILLER                  PIC X(08)  VALUE SPACES.\n045500       02 FILLER                  PIC X(100) VALUE\n045600     '        TODAY-NN - PRINT ALL JOBS WHICH MATCH THIS GENERIC J\n045700-    'OB NAME WHICH STARTED EXECUTION TODAY TH'.\n045800       02 FILLER                  PIC X(25)  VALUE\n045900     'RU NN DAYS PRIOR TO TODAY'.\n046000*\n046100   01  FMT-12.\n046200       02 FILLER                  PIC X(08)  VALUE SPACES.\n046300       02 FILLER                  PIC X(100) VALUE\n046400     '           EG. TODAY-00 ===> SELECT JOBS BEGINNING EXECUTION\n046500-    ' TODAY ONLY                             '.\n046600       02 FILLER                  PIC X(25)  VALUE SPACES.\n046700*\n046800   01  FMT-13.\n046900       02 FILLER                  PIC X(08)  VALUE SPACES.\n047000       02 FILLER                  PIC X(100) VALUE\n047100     '               TODAY-01 ===> SELECT JOBS BEGINNING EXECUTION\n047200-    ' TODAY AND YESTERDAY                    '.\n047300       02 FILLER                  PIC X(25)  VALUE SPACES.\n047400*\n047500   01  FMT-14.\n047600       02 FILLER                  PIC X(08)  VALUE SPACES.\n047700       02 FILLER                  PIC X(100) VALUE\n047800     '                        ETC.\n047900-    '                                        '.\n048000       02 FILLER                  PIC X(25)  VALUE SPACES.\n048100*\n048200   01  FMT-15.\n048300       02 FILLER                  PIC X(08)  VALUE SPACES.\n048400       02 FILLER                  PIC X(100) VALUE\n048500     '       OPTIONAL\n048600-    '                                        '.\n048700       02 FILLER                  PIC X(25)  VALUE SPACES.\n048800*\n048900   01  FMT-16.\n049000       02 FILLER                  PIC X(08)  VALUE SPACES.\n049100       02 FILLER                  PIC X(110) VALUE\n049200     '   START TIME=HH.MM - START SELECTING JOBS ON TODAY-NN WHICH\n049300-    ' BEGAN EXECUTION ON OR AFTER HH.MM (MILITARY TIME)'.\n049400       02 FILLER                  PIC X(15)  VALUE SPACES.\n049500*\n049600   01  FMT-17.\n049700       02 FILLER                  PIC X(08)  VALUE SPACES.\n049800       02 FILLER                  PIC X(100) VALUE\n049900     '    SELETION CARDS FOUND TO BE IN ERROR FOLLOW.\n050000-    '                                        '.\n050100       02 FILLER                  PIC X(25)  VALUE SPACES.\n050200*\n050300   01  ERROR-RPT-REC-WS.\n050400       02 FILLER                  PIC X(09)  VALUE SPACES.\n050500       02 ERRORRPT-REC-WS         PIC X(100) VALUE SPACES.\n050600       02 FILLER                  PIC X(24)  VALUE SPACES.\n050700*\n050800 LINKAGE SECTION.\n050900   01  PARM-JOB-NAME.\n051000       02 PARM-LENGTH             PIC S9(4) COMP.\n051100       02 PARMS.\n051200           03 INVOKING-JOB-NAME       PIC X(8).\n051300 PROCEDURE DIVISION USING PARM-JOB-NAME.\n051400     IF PARM-LENGTH GREATER 0\n051500        MOVE INVOKING-JOB-NAME TO INVKNG-JOB-NM-R.\n051600*    READY TRACE.\n051700     MOVE CURRENT-DATE TO R-DATE E-DATE.\n051800*\n051900     MOVE TIME-OF-DAY TO WS-CUR-TIME.\n052000     MOVE CUR-HH TO R-HH E-HH.\n052100     MOVE CUR-MM TO R-MM E-MM.\n052200*\n052300     ACCEPT WS-CUR-JULIAN-DATE FROM DAY.\n052400*    DISPLAY 'CURRENT JULIAN DATE = ' WS-CUR-JULIAN-DATE.\n052500     ACCEPT WS-CUR-TIME FROM TIME.\n052600*    DISPLAY 'CURRENT TIME (HHMMSSTT) = ' WS-CUR-TIME.\n052700*\n052800     OPEN INPUT SELECTCD.\n052900     OPEN OUTPUT SELCTRPT.\n053000     CALL 'SYS005PB' USING OPENID.\n053100*\n053200     CALL 'MASTOPN' USING OPN-AREA, OPN-RETURN-CODE.\n053300     IF OPN-RETURN-CODE NOT = '0'\n053400          DISPLAY 'LIBRARIAN INPUT FILE COULD NOT BE OPENED'\n053500          DISPLAY 'OPEN RETURN CODE =' OPN-RETURN-CODE\n053600          GO TO END-RUN.\n053700*\n053800     PERFORM SEL-HDR-PAR THRU SEL-HDR-EXIT.\n053900     GO TO READ-SELECTCD.\n054000*\n054100 READ-SELECT-CARDS.\n054200     CALL 'MASTCLS'.\n054300*\n054400     CALL 'MASTOPN' USING OPN-AREA, OPN-RETURN-CODE.\n054500     IF OPN-RETURN-CODE NOT = '0'\n054600          DISPLAY 'LIBRARIAN INPUT FILE COULD NOT BE OPENED'\n054700          DISPLAY 'OPEN RETURN CODE =' OPN-RETURN-CODE\n054800          GO TO END-RUN.\n054900*\n055000 READ-SELECTCD.\n055100     IF SEL-EOF-SW = 1\n055200             GO TO END-RUN.\n055300*\n055400     READ SELECTCD AT END\n055500         MOVE 1 TO SEL-EOF-SW.\n055600*    DISPLAY 'SELECT CARD = ' SELECTCD-REC.\n055700*\n055800     IF SEL-EOF-SW = 1\n055900         IF SELECT-CARD-COUNT = 0\n056000             GO TO SELECT-CARD-ERROR\n056100         ELSE\n056200             GO TO END-RUN.\n056300*\n056400     ADD 1 TO SELECT-CARD-COUNT.\n056500     MOVE 0 TO JOB-CTR.\n056600*\n056700     IF JOB-NAME-LIT NOT = 'JOBNAME='\n056800         GO TO SELECT-CARD-ERROR.\n056900     IF SELECT-LIT = SPACES OR ',SELECT='\n057000         NEXT SENTENCE\n057100     ELSE\n057200         GO TO SELECT-CARD-ERROR.\n057300*\n057400     IF JOB-CHAR (8) = SPACE\n057500         IF JOB-CHAR (7) = SPACE\n057600             IF JOB-CHAR (6) = SPACE\n057700                 IF JOB-CHAR (5) = SPACE\n057800                     IF JOB-CHAR (4) = SPACE\n057900                         IF JOB-CHAR (3) = SPACE\n058000                             IF JOB-CHAR (2) = SPACE\n058100                                 IF JOB-CHAR (1) = SPACE\n058200                                     GO TO SELECT-CARD-ERROR\n058300                                 ELSE\n058400                                     MOVE JOB-TO-SELECT TO JOB-1\n058500                                     MOVE 1 TO JOB-COMPARE-SW\n058600                             ELSE\n058700                                 MOVE JOB-TO-SELECT TO JOB-2\n058800                                 MOVE 2 TO JOB-COMPARE-SW\n058900                         ELSE\n059000                             MOVE JOB-TO-SELECT TO JOB-3\n059100                             MOVE 3 TO JOB-COMPARE-SW\n059200                     ELSE\n059300                         MOVE JOB-TO-SELECT TO JOB-4\n059400                         MOVE 4 TO JOB-COMPARE-SW\n059500                 ELSE\n059600                     MOVE JOB-TO-SELECT TO JOB-5\n059700                     MOVE 5 TO JOB-COMPARE-SW\n059800             ELSE\n059900                 MOVE JOB-TO-SELECT TO JOB-6\n060000                 MOVE 6 TO JOB-COMPARE-SW\n060100         ELSE\n060200             MOVE JOB-TO-SELECT TO JOB-7\n060300             MOVE 7 TO JOB-COMPARE-SW\n060400     ELSE\n060500         MOVE JOB-TO-SELECT TO JOB-8\n060600         MOVE 8 TO JOB-COMPARE-SW.\n060700*\n060800     IF SELECT-ID = 'ALL'\n060900         GO TO PRINT-ALL.\n061000     IF SELECT-ID = 'LAST'\n061100         GO TO PRINT-ONLY-LAST.\n061200     IF SELECT-ID = 'TODAY-'\n061300         GO TO PRINT-TODAY-AND-MORE.\n061400     IF SELECT-ID = SPACES\n061500         GO TO PRINT-ONLY-LAST.\n061600*\n061700 SELECT-CARD-ERROR.\n061800*    DISPLAY 'SELECT ERROR'.\n061900     IF ERRORRPT-OPEN-SW = 0\n062000         MOVE 1 TO ERRORRPT-OPEN-SW\n062100         OPEN OUTPUT ERRORRPT\n062200     ELSE\n062300         GO TO REPORT-BAD-SELECT-CARD.\n062400*\n062500     IF ERRORRPT-LINE-CTR GREATER 50\n062600         PERFORM ERR-HDR-PAR THRU ERR-HDR-EXIT.\n062700*\n062800     WRITE ERRORRPT-REC FROM DASH-LINE AFTER POSITIONING 2 LINES.\n062900     WRITE ERRORRPT-REC FROM FMT-1  AFTER POSITIONING 1 LINES.\n063000     WRITE ERRORRPT-REC FROM FMT-2  AFTER POSITIONING 2 LINES.\n063100     WRITE ERRORRPT-REC FROM FMT-3  AFTER POSITIONING 1 LINES.\n063200     WRITE ERRORRPT-REC FROM FMT-4  AFTER POSITIONING 2 LINES.\n063300     WRITE ERRORRPT-REC FROM FMT-5  AFTER POSITIONING 1 LINES.\n063400     WRITE ERRORRPT-REC FROM FMT-6  AFTER POSITIONING 1 LINES.\n063500     WRITE ERRORRPT-REC FROM FMT-8  AFTER POSITIONING 2 LINES.\n063600     WRITE ERRORRPT-REC FROM FMT-9  AFTER POSITIONING 1 LINES.\n063700     WRITE ERRORRPT-REC FROM FMT-10 AFTER POSITIONING 1 LINES.\n063800     WRITE ERRORRPT-REC FROM FMT-11 AFTER POSITIONING 1 LINES.\n063900     WRITE ERRORRPT-REC FROM FMT-12 AFTER POSITIONING 2 LINES.\n064000     WRITE ERRORRPT-REC FROM FMT-13 AFTER POSITIONING 1 LINES.\n064100     WRITE ERRORRPT-REC FROM FMT-14 AFTER POSITIONING 1 LINES.\n064200     WRITE ERRORRPT-REC FROM FMT-15 AFTER POSITIONING 2 LINES.\n064300     WRITE ERRORRPT-REC FROM FMT-16 AFTER POSITIONING 2 LINES.\n064400     WRITE ERRORRPT-REC FROM FMT-7  AFTER POSITIONING 2 LINES.\n064500     WRITE ERRORRPT-REC FROM DASH-LINE AFTER POSITIONING 1 LINES.\n064600     WRITE ERRORRPT-REC FROM FMT-17 AFTER POSITIONING 3 LINES.\n064700 REPORT-BAD-SELECT-CARD.\n064800     IF ERRORRPT-LINE-CTR GREATER 50\n064900         PERFORM ERR-HDR-PAR THRU ERR-HDR-EXIT.\n065000*\n065100     WRITE ERRORRPT-REC FROM FMT-2  AFTER POSITIONING 3 LINES.\n065200     WRITE ERRORRPT-REC FROM FMT-3  AFTER POSITIONING 1 LINES.\n065300     MOVE SELECTCD-REC TO ERRORRPT-REC-WS.\n065400     WRITE ERRORRPT-REC FROM ERROR-RPT-REC-WS\n065500                                    AFTER POSITIONING 2 LINES.\n065600*\n065700     GO TO READ-SELECTCD.\n065800*\n065900 PRINT-ALL.\n066000*\n066100     MOVE SPACES TO MOD-NAME.\n066200     PERFORM GET-NEXT-MODULE THRU GET-NEXT-MODULE-XIT.\n066300     IF MOD-RETURN-CODE = '1'\n066400       IF JOB-CTR = 0\n066500           PERFORM RPT-SELECT-DETAIL THRU RPT-SELECT-DETAIL-XIT\n066600           GO TO READ-SELECT-CARDS\n066700        ELSE\n066800           GO TO READ-SELECT-CARDS.\n066900*\n067000     GO TO ALL-JOB-1\n067100           ALL-JOB-2\n067200           ALL-JOB-3\n067300           ALL-JOB-4\n067400           ALL-JOB-5\n067500           ALL-JOB-6\n067600           ALL-JOB-7\n067700           ALL-JOB-8\n067800           DEPENDING ON JOB-COMPARE-SW.\n067900 ALL-JOB-1.\n068000     IF JOB-1 NOT = JOBNAME-1\n068100         GO TO PRINT-ALL.\n068200     GO TO READ-JCL-1.\n068300 ALL-JOB-2.\n068400     IF JOB-2 NOT = JOBNAME-2\n068500         GO TO PRINT-ALL.\n068600     GO TO READ-JCL-1.\n068700 ALL-JOB-3.\n068800     IF JOB-3 NOT = JOBNAME-3\n068900         GO TO PRINT-ALL.\n069000     GO TO READ-JCL-1.\n069100 ALL-JOB-4.\n069200     IF JOB-4 NOT = JOBNAME-4\n069300         GO TO PRINT-ALL.\n069400     GO TO READ-JCL-1.\n069500 ALL-JOB-5.\n069600     IF JOB-5 NOT = JOBNAME-5\n069700         GO TO PRINT-ALL.\n069800     GO TO READ-JCL-1.\n069900 ALL-JOB-6.\n070000     IF JOB-6 NOT = JOBNAME-6\n070100         GO TO PRINT-ALL.\n070200     GO TO READ-JCL-1.\n070300 ALL-JOB-7.\n070400     IF JOB-7 NOT = JOBNAME-7\n070500         GO TO PRINT-ALL.\n070600     GO TO READ-JCL-1.\n070700 ALL-JOB-8.\n070800     IF JOB-8 NOT = JOBNAME-8\n070900         GO TO PRINT-ALL.\n071000     GO TO READ-JCL-1.\n071100*\n071200*\n071300 READ-JCL-1.\n071400     ADD 1 TO JOB-CTR.\n071500     PERFORM RPT-SELECT-DETAIL THRU RPT-SELECT-DETAIL-XIT.\n071600     PERFORM READ-THIS-JCL THRU READ-JCL-XIT.\n071700     GO TO PRINT-ALL.\n071800*\n071900*\n072000 PRINT-ONLY-LAST.\n072100     MOVE SPACES TO MOD-NAME.\n072200     PERFORM GET-NEXT-MODULE THRU GET-NEXT-MODULE-XIT.\n072300*\n072400     IF MOD-RETURN-CODE = '1'\n072500          GO TO PRINTOFF-TABLE-ENTRIES.\n072600*\n072700     GO TO LAST-JOB-1\n072800           LAST-JOB-2\n072900           LAST-JOB-3\n073000           LAST-JOB-4\n073100           LAST-JOB-5\n073200           LAST-JOB-6\n073300           LAST-JOB-7\n073400           LAST-JOB-8\n073500           DEPENDING ON JOB-COMPARE-SW.\n073600 LAST-JOB-1.\n073700     IF JOB-1 NOT = JOBNAME-1\n073800         GO TO PRINT-ONLY-LAST.\n073900     GO TO TABLE-THIS-JOB.\n074000 LAST-JOB-2.\n074100     IF JOB-2 NOT = JOBNAME-2\n074200         GO TO PRINT-ONLY-LAST.\n074300     GO TO TABLE-THIS-JOB.\n074400 LAST-JOB-3.\n074500     IF JOB-3 NOT = JOBNAME-3\n074600         GO TO PRINT-ONLY-LAST.\n074700     GO TO TABLE-THIS-JOB.\n074800 LAST-JOB-4.\n074900     IF JOB-4 NOT = JOBNAME-4\n075000         GO TO PRINT-ONLY-LAST.\n075100     GO TO TABLE-THIS-JOB.\n075200 LAST-JOB-5.\n075300     IF JOB-5 NOT = JOBNAME-5\n075400         GO TO PRINT-ONLY-LAST.\n075500     GO TO TABLE-THIS-JOB.\n075600 LAST-JOB-6.\n075700     IF JOB-6 NOT = JOBNAME-6\n075800         GO TO PRINT-ONLY-LAST.\n075900     GO TO TABLE-THIS-JOB.\n076000 LAST-JOB-7.\n076100     IF JOB-7 NOT = JOBNAME-7\n076200         GO TO PRINT-ONLY-LAST.\n076300     GO TO TABLE-THIS-JOB.\n076400 LAST-JOB-8.\n076500     IF JOB-8 NOT = JOBNAME-8\n076600         GO TO PRINT-ONLY-LAST.\n076700     GO TO TABLE-THIS-JOB.\n076800*\n076900 TABLE-THIS-JOB.\n077000     MOVE 0 TO TABENTRY.\n077100 INCR-TABENTRY.\n077200     ADD 1 TO TABENTRY.\n077300     IF TABENTRY GREATER JOB-CTR\n077400         ADD 1 TO JOB-CTR\n077500         MOVE MODLNAME TO LAST-MOD-NAME (JOB-CTR)\n077600         MOVE JOBNAME  TO LAST-JOB-NAME (JOB-CTR)\n077700         GO TO PRINT-ONLY-LAST.\n077800     IF JOBNAME = LAST-JOB-NAME (TABENTRY)\n077900         MOVE MODLNAME TO LAST-MOD-NAME (TABENTRY)\n078000         MOVE JOBNAME  TO LAST-JOB-NAME (TABENTRY)\n078100         GO TO PRINT-ONLY-LAST.\n078200     GO TO INCR-TABENTRY.\n078300*\n078400 PRINTOFF-TABLE-ENTRIES.\n078500     IF JOB-CTR = 0\n078600         PERFORM RPT-SELECT-DETAIL THRU RPT-SELECT-DETAIL-XIT\n078700         GO TO READ-SELECT-CARDS.\n078800*\n078900     CALL 'MASTCLS'.\n079000*\n079100     CALL 'MASTOPN' USING OPN-AREA, OPN-RETURN-CODE.\n079200     IF OPN-RETURN-CODE NOT = '0'\n079300          DISPLAY 'LIBRARIAN INPUT FILE COULD NOT BE OPENED'\n079400          DISPLAY 'OPEN RETURN CODE =' OPN-RETURN-CODE\n079500          GO TO END-RUN.\n079600*\n079700     MOVE 0 TO TABENTRY.\n079800 PRINT-LAST-JOBS.\n079900     ADD 1 TO TABENTRY.\n080000     MOVE LAST-MOD-NAME (TABENTRY) TO MOD-NAME.\n080100     PERFORM GET-NEXT-MODULE THRU GET-NEXT-MODULE-XIT.\n080200     PERFORM RPT-SELECT-DETAIL THRU RPT-SELECT-DETAIL-XIT.\n080300*\n080400     PERFORM READ-THIS-JCL THRU READ-JCL-XIT.\n080500     IF TABENTRY LESS JOB-CTR\n080600         GO TO PRINT-LAST-JOBS.\n080700     GO TO READ-SELECT-CARDS.\n080800*\n080900*\n081000 PRINT-TODAY-AND-MORE.\n081100     IF REL-START-DATE-XX = SPACES\n081200         MOVE CUR-JUL-DDD TO START-JUL-DATE\n081300         GO TO CK-START-TIME.\n081400     IF REL-START-DATE-XX LESS '00'\n081500         GO TO SELECT-CARD-ERROR\n081600     ELSE\n081700         IF REL-START-DATE-XX GREATER '99'\n081800             GO TO SELECT-CARD-ERROR.\n081900     COMPUTE START-JUL-DATE = CUR-JUL-DDD - RELTVE-START-DATE.\n082000 CK-START-TIME.\n082100     IF STRT-TME-LIT = SPACES\n082200         MOVE 'XX' TO START-HH-WS  START-MM-WS\n082300         GO TO LOOK-FOR-JOBS.\n082400     IF STRT-TME-LIT NOT = ',START TIME='\n082500         GO TO SELECT-CARD-ERROR.\n082600     IF START-HH LESS '00'\n082700         GO TO SELECT-CARD-ERROR\n082800     ELSE\n082900         IF START-MM GREATER '99'\n083000             GO TO SELECT-CARD-ERROR.\n083100     MOVE START-HH TO START-HH-WS.\n083200     MOVE START-MM TO START-MM-WS.\n083300*CK-END-TIME.\n083400*    IF END-TME-LIT = SPACES\n083500*        MOVE 24 TO END-HH-WS\n083600*        MOVE 0 TO END-HH-WS\n083700*        GO TO LOOK-FOR-JOBS.\n083800*    IF END-TME-LIT NOT = ',END TIME='\n083900*        GO TO SELECT-CARD-ERROR.\n084000*    IF END-HH LESS '00'\n084100*        GO TO SELECT-CARD-ERROR\n084200*    ELSE\n084300*        IF END-MM GREATER '99'\n084400*            GO TO SELECT-CARD-ERROR.\n084500*    MOVE END-HH TO END-HH-WS.\n084600*    MOVE END-MM TO END-MM-WS.\n084700 LOOK-FOR-JOBS.\n084800     MOVE SPACES TO MOD-NAME.\n084900     PERFORM GET-NEXT-MODULE THRU GET-NEXT-MODULE-XIT.\n085000*\n085100     IF MOD-RETURN-CODE = '1'\n085200       IF JOB-CTR = 0\n085300           PERFORM RPT-SELECT-DETAIL THRU RPT-SELECT-DETAIL-XIT\n085400           GO TO READ-SELECT-CARDS\n085500        ELSE\n085600           GO TO READ-SELECT-CARDS.\n085700*\n085800     GO TO TODAY-AND-MORE-1\n085900           TODAY-AND-MORE-2\n086000           TODAY-AND-MORE-3\n086100           TODAY-AND-MORE-4\n086200           TODAY-AND-MORE-5\n086300           TODAY-AND-MORE-6\n086400           TODAY-AND-MORE-7\n086500           TODAY-AND-MORE-8\n086600           DEPENDING ON JOB-COMPARE-SW.\n086700 TODAY-AND-MORE-1.\n086800     IF JOB-1 NOT = JOBNAME-1\n086900         GO TO LOOK-FOR-JOBS.\n087000     GO TO CK-CUTOFF-TIME.\n087100 TODAY-AND-MORE-2.\n087200     IF JOB-2 NOT = JOBNAME-2\n087300         GO TO LOOK-FOR-JOBS.\n087400     GO TO CK-CUTOFF-TIME.\n087500 TODAY-AND-MORE-3.\n087600     IF JOB-3 NOT = JOBNAME-3\n087700         GO TO LOOK-FOR-JOBS.\n087800     GO TO CK-CUTOFF-TIME.\n087900 TODAY-AND-MORE-4.\n088000     IF JOB-4 NOT = JOBNAME-4\n088100         GO TO LOOK-FOR-JOBS.\n088200     GO TO CK-CUTOFF-TIME.\n088300 TODAY-AND-MORE-5.\n088400     IF JOB-5 NOT = JOBNAME-5\n088500         GO TO LOOK-FOR-JOBS.\n088600     GO TO CK-CUTOFF-TIME.\n088700 TODAY-AND-MORE-6.\n088800     IF JOB-6 NOT = JOBNAME-6\n088900         GO TO LOOK-FOR-JOBS.\n089000     GO TO CK-CUTOFF-TIME.\n089100 TODAY-AND-MORE-7.\n089200     IF JOB-7 NOT = JOBNAME-7\n089300         GO TO LOOK-FOR-JOBS.\n089400     GO TO CK-CUTOFF-TIME.\n089500 TODAY-AND-MORE-8.\n089600     IF JOB-8 NOT = JOBNAME-8\n089700         GO TO LOOK-FOR-JOBS.\n089800     GO TO CK-CUTOFF-TIME.\n089900*\n090000 CK-CUTOFF-TIME.\n090100     IF JUL-RUN-DATE = 'YYDDD'\n090200         GO TO USE-UPDATE-DATE-TIME.\n090300*\n090400     IF JUL-RUN-DDD LESS START-JUL-DATE\n090500         GO TO LOOK-FOR-JOBS.\n090600     IF START-HH-WS = 'XX'\n090700         GO TO REPORT-MODULE.\n090800     IF JUL-RUN-DDD = START-JUL-DATE\n090900         MOVE RUN-STR-HH TO START-HH-JOB-WS\n091000         MOVE RUN-STR-MM TO START-MM-JOB-WS\n091100         IF START-TIME-JOB-WS LESS START-TIME-WS\n091200             GO TO LOOK-FOR-JOBS.\n091300     GO TO REPORT-MODULE.\n091400*\n091500 USE-UPDATE-DATE-TIME.\n091600     MOVE LAST-UP-DATE TO WS-DATE.\n091700     DIVIDE YY BY 4 GIVING LEAP-TEST REMAINDER LEAP-RMNDR.\n091800     IF LEAP-RMNDR = 0\n091900         MOVE 29 TO FEB.\n092000 CONVERT-DATE.\n092100     MOVE DD TO DATE-CONVERTED\n092200     MOVE 0 TO MO-CTR.\n092300 INCR-MO-CTR.\n092400     ADD 1 TO MO-CTR.\n092500     IF MO-CTR LESS MM\n092600         ADD MTH-DAY (MO-CTR) TO DATE-CONVERTED\n092700         GO TO INCR-MO-CTR.\n092800*\n092900     IF DATE-CONVERTED LESS START-JUL-DATE\n093000         GO TO LOOK-FOR-JOBS.\n093100     IF START-HH-WS = 'XX'\n093200         GO TO REPORT-MODULE.\n093300     IF DATE-CONVERTED = START-JUL-DATE\n093400         MOVE LAST-UP-HH TO START-HH-JOB-WS\n093500         MOVE LAST-UP-MM TO START-MM-JOB-WS\n093600         IF START-TIME-JOB-WS LESS START-TIME-WS\n093700             GO TO LOOK-FOR-JOBS.\n093800*\n093900 REPORT-MODULE.\n094000     ADD 1 TO JOB-CTR.\n094100     PERFORM RPT-SELECT-DETAIL THRU RPT-SELECT-DETAIL-XIT.\n094200     PERFORM READ-THIS-JCL THRU READ-JCL-XIT.\n094300     GO TO LOOK-FOR-JOBS.\n094400*\n094500*\n094600 GET-NEXT-MODULE.\n094700*\n094800     CALL 'MASTMOD' USING MOD-NAME, MOD-RETURN-CODE, MOD-AREA.\n094900*\n095000     IF MOD-RETURN-CODE = '9' OR '2'\n095100          DISPLAY 'LIBRARIAN INPUT FILE MODULE LOCATE PROBLEM'\n095200          DISPLAY 'READ RETURN CODE =' MOD-RETURN-CODE\n095300          MOVE 0 TO MOD-COUNT\n095400          GO TO END-RUN.\n095500 GET-NEXT-MODULE-XIT. EXIT.\n095600*\n095700*\n095800 READ-THIS-JCL.\n095900*\n096000     MOVE JOBNAME TO HDR-DTA-JBNME.\n096100     MOVE JOBNUMB TO HDR-DTA-JOB-NMBR.\n096200     MOVE GREG-DT TO HDR-DTA-GREG-DTE.\n096300     IF JUL-RUN-DATE = 'YYDDD'\n096400         MOVE 'JOB NOT RUN' TO HDR-DTA-RUN-TIME\n096500     ELSE\n096600         MOVE '-' TO HDR-DTA-DASH\n096700         MOVE START-TIME TO HDR-DTA-STRT-TIME\n096800         MOVE END-TIME TO HDR-DTA-END-TIME.\n096900     CALL 'SYS005PA' USING HEADER-DATA.\n097000*\n097100 READ-NXT-JCL.\n097200     CALL 'MASTRCD' USING CARD-AREA-1, MOD-RETURN-CODE.\n097300*\n097400     IF MOD-RETURN-CODE = '9' OR '2'\n097500          DISPLAY 'LIBRARIAN INPUT FILE MODULE LOCATE PROBLEM'\n097600          DISPLAY 'READ RETURN CODE =' MOD-RETURN-CODE\n097700          MOVE 0 TO MOD-COUNT\n097800          GO TO END-RUN.\n097900     IF MOD-RETURN-CODE = '1'\n098000          GO TO READ-JCL-XIT.\n098100*\n098200     MOVE CARD-AREA-1 TO PRINT-AREA.\n098300*\n098400 READ-JCL-2.\n098500     CALL 'MASTRCD' USING CARD-AREA-2-DATA, MOD-RETURN-CODE.\n098600*\n098700     IF MOD-RETURN-CODE = '9' OR '2'\n098800          DISPLAY 'LIBRARIAN INPUT FILE MODULE LOCATE PROBLEM'\n098900          DISPLAY 'READ RETURN CODE =' MOD-RETURN-CODE\n099000          MOVE 0 TO MOD-COUNT\n099100          GO TO END-RUN.\n099200     IF MOD-RETURN-CODE = '1'\n099300          CALL 'SYS005PB' USING RITEID PRINT-AREA\n099400          GO TO READ-JCL-XIT.\n099500*\n099600     IF CONTINUE-BYTE GREATER '9'\n099700          MOVE CARD-AREA-2 TO PRINT-AREA-2\n099800          CALL 'SYS005PB' USING RITEID PRINT-AREA\n099900          GO TO READ-NXT-JCL.\n100000*\n100100     CALL 'SYS005PB' USING RITEID PRINT-AREA\n100200     MOVE CARD-AREA-2-DATA TO PRINT-AREA.\n100300     GO TO READ-JCL-2.\n100400 READ-JCL-XIT. EXIT.\n100500*\n100600*\n100700 SEL-HDR-PAR.\n100800     ADD 1 TO PAGE-COUNT.\n100900     MOVE PAGE-COUNT TO PAGE-NO.\n101000     WRITE SELCTRPT-REC FROM SEL-HDR-1 AFTER POSITIONING 0 LINES.\n101100     WRITE SELCTRPT-REC FROM SEL-HDR-2 AFTER POSITIONING 1 LINES.\n101200     WRITE SELCTRPT-REC FROM SEL-HDR-3 AFTER POSITIONING 2 LINES.\n101300     WRITE SELCTRPT-REC FROM SEL-HDR-4 AFTER POSITIONING 1 LINES.\n101400     MOVE 5 TO LINE-COUNT.\n101500 SEL-HDR-EXIT. EXIT.\n101600*\n101700*\n101800 ERR-HDR-PAR.\n101900     ADD 1 TO ERRORRPT-PAGE-COUNT.\n102000     MOVE ERRORRPT-PAGE-COUNT TO E-PAGE-NO.\n102100     WRITE ERRORRPT-REC FROM ERR-HDR-1 AFTER POSITIONING 0 LINES.\n102200     WRITE ERRORRPT-REC FROM SEL-HDR-2 AFTER POSITIONING 1 LINES.\n102300     MOVE 2 TO ERRORRPT-LINE-CTR.\n102400 ERR-HDR-EXIT. EXIT.\n102500*\n102600*\n102700 RPT-SELECT-DETAIL.\n102800     IF JOB-CTR = 0\n102900      MOVE 1 TO NO-MATCH-SW\n103000      MOVE '      NO JOBS FOUND TO MATCH THIS SELECTION CARD ==>'\n103100      TO SEL-DETAIL\n103200      GO TO MVE-SEL-CARD.\n103300*    DISPLAY MOD-AREA.\n103400     MOVE SPACES TO SEL-DETAIL.\n103500     MOVE JOBNAME  TO JOBNAME-R.\n103600     MOVE JOBNUMB  TO JOBNUMB-R.\n103700     MOVE USERID   TO USERID-R.\n103800     MOVE MODLNAME TO MODNAME-R.\n103900     MOVE LST-UP-MM TO RUN-MM-R.\n104000     MOVE LST-UP-DD TO RUN-DD-R.\n104100     MOVE LST-UP-YY TO RUN-YY-R.\n104200     MOVE '/' TO FILLER-SLA1 FILLER-SLA2.\n104300     IF RUN-STR-HH = 'HH'\n104400         GO TO SHOW-NOT-RUN.\n104500     MOVE RUN-STR-HH TO STRT-HH-R.\n104600     MOVE RUN-STR-MM TO STRT-MM-R.\n104700     MOVE RUN-END-HH TO END-HH-R.\n104800     MOVE RUN-END-MM TO END-MM-R.\n104900     MOVE '.' TO FILLER-PER1 FILLER-PER2.\n105000     GO TO MVE-SEL-CARD.\n105100 SHOW-NOT-RUN.\n105200     MOVE 'JOB NOT SCHEDULED' TO NOT-SCH-R.\n105300 MVE-SEL-CARD.\n105400     MOVE SELECTCD-REC TO SELECT-CARD-R.\n105500     WRITE SELCTRPT-REC FROM SEL-DETAIL AFTER POSITIONING 2 LINES\n105600     ADD 2 TO LINE-COUNT.\n105700 RPT-SELECT-DETAIL-XIT. EXIT.\n105800*\n105900*\n106000 END-RUN.\n106100     CALL 'MASTCLS'.\n106200     CLOSE SELECTCD.\n106300     CALL 'SYS005PB' USING CLSEID.\n106400     CLOSE SELCTRPT.\n106500     IF ERRORRPT-OPEN-SW = 1\n106600         CLOSE ERRORRPT\n106700         MOVE +4 TO RETURN-CODE\n106800     ELSE\n106900         IF NO-MATCH-SW = 1\n107000             MOVE +4 TO RETURN-CODE\n107100         ELSE\n107200             MOVE +0 TO RETURN-CODE.\n107300*\n107400     STOP RUN.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYS007LK": {"ttr": 7691, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x83\\x13\\x0f\\x00\\x83\\x16o\\x16C\\x00\\n\\x00\\t\\x00\\n\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1983-05-10T00:00:00", "modifydate": "1983-06-15T16:43:00", "lines": 10, "newlines": 9, "modlines": 10, "user": "SYSXKMB"}, "text": "//SYS007LK JOB (@SYSUID,@SYSACCT),'              ',CLASS=A\n/*JOBPARM   I,W,T=3,Q=T,LINES=99\n//CLG       EXEC    COB4CL\n//COB.SYSIN  DD  DSN=SYSXKMB.LIB.ASM(SYS007P0),DISP=SHR\n//LKED.SYSLIB  DD DSN=SYS1.OXYLIB,DISP=SHR\n//             DD DSN=SYS1.COBLIB,DISP=SHR\n//             DD DSN=PHGI.HOU.LINKLIB,DISP=SHR\n//LKED.SYSLMOD DD DSN=SYSXKMB.LIB.LOAD,DISP=SHR,UNIT=3350\n//LKED.SYSIN   DD *\n  NAME SYS007P0(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYS007P0": {"ttr": 7937, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x00\\x00\\x00\\x83\\x11\\x1f\\x00\\x83\\x13\\x0f\\x16'\\x00n\\x00n\\x00n\\xe2\\xc8\\xe2\\xe6\\xd9\\xd7\\xc4@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "1983-04-21T00:00:00", "modifydate": "1983-05-10T16:27:00", "lines": 110, "newlines": 110, "modlines": 110, "user": "SHSWRPD"}, "text": "000010 IDENTIFICATION DIVISION.\n000020   PROGRAM-ID.    SYS007P0.\n000030   INSTALLATION.  OCCIDENTAL CHEMICAL CORPORATION.\n000040 DATE-COMPILED.   DATE.\n000050 REMARKS. WRITTEN BY :\n000060                             ROBERT P DZIALAK\n000070                             OCCIDENTAL CHEMICAL CORPORATION\n000080                             360 RAINBOW BLVD. SOUTH\n000090                             NIAGARA FALLS , NEW YORK 14303\n000100                             (716) 286-3251\n000110*\n000120*    THE PURPOSE OF THIS PROGRAM IS AS FOLLOWS:\n000130*       THIS PROGRAM IS USED TO INITIATE A AUTOMATIC COMMAND\n000140*       TO JES2. THIS AUTOMATIC COMMAND IS SET TO EXECUTE\n000150*       10 MINITES FROM THE TIME THIS PROGRAM IS EXECUTED.\n000160*       THE FORMAT OF THE AUTOMATIC COMMAND WRITTEN TO THE\n000170*       INTERNAL READER IS:\n000180*\n000190*           /*$TA,T=HH.MM,'$VS,''S SYSL,N=JJJJJJJJ'''\n000200*\n000210*    WHERE: HH-MM - THE HOUR AND MINITE THIS COMMAND IS TO EXECUTE\n000220*                   THIS PROGRAM IS THE LAST STEP TO BE EXECUTED\n000230*                   IN A JOB WHOSE JCL IS TO BE SELECTED FROM\n000240*                   LIBSPOOL FOR PRINTING. DELAYING THE EXECUTION\n000250*                   FOR 10 MINITES GIVES LIBSPOOL A CHANCE TO\n000260*                   SELECT THE JCL FROM JES2 AND PROCESS IT INTO\n000270*                   THE LIBSPOOL DATA SET AFTER THE JOB FINISHES\n000280*                   EXECUTION.\n000290*        JJJJJJJJ - JOB NAME RUNTO SELECT FROM THE LIBRARIAN DATA\n000300*                   SET REFERENCED IN THE 'SYSL' JCL PROCEDURE.\n000310*                   JOB 'JJJJJJJJ' EXECUTES JCL WHICH EXECUTES\n000320*                   THE PROGRAM WHICH SELECTS JCL MODULES FROM THE\n000330*                   LIBSPOOL LIBRARIAN DATA SET. SELECTION CARDS\n000340*                   ARE COMTAINED WITH THIS JCL TO CHOSE THE\n000350*                   GENERIC JOB NAMES AND MATCHING RUN DATES/TIME\n000360*                   TO PRINT.\n000370 ENVIRONMENT DIVISION.\n000380  CONFIGURATION SECTION.\n000390    SOURCE-COMPUTER. IBM-370.\n000400    OBJECT-COMPUTER. IBM-370.\n000410  INPUT-OUTPUT SECTION.\n000420    FILE-CONTROL.\n000430       SELECT COMMNDCD              ASSIGN TO UT-S-COMMNDCD.\n000440 DATA DIVISION.\n000450  FILE SECTION.\n000460   FD  COMMNDCD\n000470       BLOCK CONTAINS 1 RECORDS\n000480       LABEL RECORDS ARE STANDARD.\n000490   01  COMMND-REC                 PIC X(80).\n000500  WORKING-STORAGE SECTION.\n000510   77  WAIT-TIME                  PIC S9(4) COMP VALUE +10.\n000520   01  JES2-COMMAND.\n000530       02 FILLER                  PIC X(08) VALUE '/*$TA,T='.\n000540       02 EXEC-HH                 PIC 99.\n000550       02 FILLER                  PIC X(01) VALUE '.'.\n000560       02 EXEC-MM                 PIC 99.\n000570       02 FILLER                  PIC X(01) VALUE ','.\n000580       02 FILLER                  PIC X(01) VALUE QUOTE.\n000590       02 FILLER                  PIC X(04) VALUE '$VS,'.\n000600       02 FILLER                  PIC X(01) VALUE QUOTE.\n000610       02 FILLER                  PIC X(01) VALUE QUOTE.\n000620       02 FILLER                  PIC X(09) VALUE 'S SYSL,N='.\n000630       02 EXEC-JOBNAME            PIC X(08).\n000640       02 FILLER                  PIC X(01) VALUE QUOTE.\n000650       02 FILLER                  PIC X(01) VALUE QUOTE.\n000660       02 FILLER                  PIC X(01) VALUE QUOTE.\n000670       02 FILLER                  PIC X(39) VALUE SPACES.\n000680*\n000690   01  WS-CUR-TIME.\n000700       02 CUR-HH                  PIC 99.\n000710       02 CUR-MM                  PIC 99.\n000720       02 FILLER                  PIC X(4).\n000730*\n000740 LINKAGE SECTION.\n000750   01  INPUT-PARMS.\n000760       02 PARM-LENGTH             PIC S9(4) COMP.\n000770       02 PARMS.\n000780           03 JOBNAMEQ            PIC X(8).\n000790           03 JOB-TO-EXEC         PIC X(8).\n000800           03 DELAYEQ             PIC X(7).\n000810           03 DELAY-MIN           PIC 9(2).\n000820*\n000830 PROCEDURE DIVISION USING INPUT-PARMS.\n000840     IF PARM-LENGTH GREATER 15\n000850        MOVE JOB-TO-EXEC TO EXEC-JOBNAME\n000860        IF PARM-LENGTH GREATER 24 AND DELAY-MIN GREATER 0\n000870            MOVE DELAY-MIN TO WAIT-TIME\n000880         ELSE\n000890            DISPLAY 'PARMS INCORRECT'\n000900            GO TO STOP-RUN\n000910     ELSE\n000920        DISPLAY 'PARMS INCORRECT'\n000930        GO TO STOP-RUN.\n000940*\n000950     MOVE TIME-OF-DAY TO WS-CUR-TIME.\n000960     MOVE CUR-HH TO EXEC-HH.\n000970     COMPUTE EXEC-MM = WAIT-TIME + CUR-MM.\n000980     IF EXEC-MM GREATER 59\n000990         ADD 1 TO EXEC-HH\n001000         SUBTRACT 60 FROM EXEC-MM.\n001010     IF EXEC-HH GREATER 23\n001020         MOVE 0 TO EXEC-HH.\n001030*\n001040     OPEN OUTPUT COMMNDCD.\n001050*\n001060     WRITE COMMND-REC FROM JES2-COMMAND.\n001070*\n001080     CLOSE COMMNDCD.\n001090 STOP-RUN.\n001100     STOP RUN.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TT": {"ttr": 7940, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x83\\x16\\x7f\\x00\\x83\\x16\\x7f\\x14\\x01\\x00\\x17\\x00\\x17\\x00\\x00\\xe2\\xe8\\xe2\\xe7\\xd2\\xd4\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1983-06-16T00:00:00", "modifydate": "1983-06-16T14:01:00", "lines": 23, "newlines": 23, "modlines": 0, "user": "SYSXKMB"}, "text": "   LIBSPOOL DATA SETS\n  --------------------\n\n          1) SYSX.LIBSPOOL.LIBPROD -\n                          CURRENT LIBRARIAN JCL LIBRARY\n                          CONTAINS THE CURRENT JCL MODULES\n                          GOTTEN FROM THE LIBSPOOL TASK.\n\n          2) SYSX.LIBSPOOL.LIBREST -\n                          RESTORE FROM LIBRARIAN ARCHIVE TAPE\n                          LIBRARIAN JCL LIBRARY\n\n          3) SYSX.LIBSPOOL.ARCPDS -\n                          ARCHIVE DIRECTORY\n                          PARTIONED DATA SET CONTAINING INFORMATION\n                          ON THE CONTENTS OF THE LIBRARIAN ARCHIVE\n                          TAPES.\n\n          4) PPODOPR.LIBSPOOL.DALYARCH -\n                           DAILY LIBRARIAN ARCHIVE TAPE\n\n          5) PPODOPR.LIBSPOOL.WKLYARCH -\n                            WEEKLY LIBRARIAN ARCHIVE TAPE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT848/FILE848.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT848", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}