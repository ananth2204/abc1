{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012530000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1175720, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE651.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1175720, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1175720, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE651.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x13\\x06'", "DS1TRBAL": "b't\\x9c'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04\\x9d\\x00\\x01\\x04\\x9e\\x00\\x05\\x00\\x14'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04?\\x00\\x00\\x01\\x03)\\x7f\\x01\\x03)\\x7f\\x16\\x05\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf3@@@'", "ispf": {"version": "04.63", "flags": 0, "createdate": "2003-10-24T00:00:00", "modifydate": "2003-10-24T16:05:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-463"}, "text": "REGULAR CBT TAPE - VERSION 463    FILE:  651\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT463.FILE651\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 7 MEMBERS COUNTED; CUMULATIVE SIZE IS 10,862 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   10/24/03    16:05:57    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$DOC": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00)\\x01\\x03)\\x7f\\x01\\x03)\\x7f\\x15Y\\x00\\xba\\x00\\xbc\\x00\\x00\\xc3\\xc8\\xc9\\xd7@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2003-10-24T00:00:00", "modifydate": "2003-10-24T15:59:29", "lines": 186, "newlines": 188, "modlines": 0, "user": "CHIP"}, "text": "Subject:     Re: BWO Update in Batch\nFrom:        cgrantha@notes.state.ne.us   (Chip Grantham)\nDate:        Fri, 24 Oct 2003 12:04:36 -0500\nTo:          Sam Golob <sbgolob@cbttape.org>\n\nSam,\n\nHere is some text about the BWO flags, who cares, and what the\nprogram does:\n\nDFSMSdss supports backup-while-open serialization, which can perform\nbackup of data sets that are open for update for long periods of\ntime.  It can also perform a logical data set dump of these data\nsets even if another application has them serialized.\nBackup-while-open is a better method than using SHARE or\nTOLERATE(ENQFAILURE) for dumping CICS VSAM file-control data sets\nthat are in-use and open for update. When you dump data sets that\nare designated by CICS as eligible for backup-while-open processing,\ndata integrity is maintained through serialization interactions\nbetween CICS (data base control program), CICSVR (forward-recovery\nprogram), VSAM record management, DFSMSdfp, and DFSMSdss.\n\nKeywords from the IDCAMS Define, Current Catalog time and date\nstamps, and Backup-While-Open flags may need to be reviewed when\nperforming a recovery or backup.\n\nThe program GDERLSBT will report on current status of these\nindicators from all sources.  The input may be a specific dataset\nor may be a catalog filter.\n\nThe input control statement\n  SHOW=<dsname>\nwill report on RLS indicators for the requested dsname. The input\ncontrol statement\n  LEVEL=<catalog filter>\nwill search the master catalog and usercatalogs using IGGCSI00\nfor VSAM clusters reporting on every dataset which meet the\nfilter qualifications.\n\nThe program GDEBWOBT will facilitate the setting of the BWO control\nflags.  The setting of the flags may be required to accommodate\nbackup-while-open processing, build testing scenarios, or allow\nprocessing by CICSVR and/or CICS.\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* RESET BWO FLAGS IN BATCH                                            *\n*                                                                     *\n* CONTROL CARDS                                                       *\n*   SHOW=<DSNAME>      ASK THE STATUS OF THE BWO FLAGS AND SHOW       *\n*                      VALUES IN THE OUTPUT REPORT                    *\n*                     -THE CURRENT PROCESSING DSN IS SET TO <DSNAME>  *\n*   DSN=<DSNAME>       SET THE PROCESSING DSN TO <DSNAME>             *\n*                     -THE COMMANDS TEST AND SET USE THE LAST         *\n*                      ESTABLISHED DSNAME AND BWO FLAGS FOR PROCESSING*\n*   BWO=<BWO>          SET THE PROCESSING BWO FLAGS TO <BWO>          *\n*                     -THE COMMANDS TEST AND SET USE THE LAST         *\n*                      ESTABLISHED DSNAME AND BWO FLAGS FOR PROCESSING*\n*   TEST=<BWO>         COMPARE THE STATUS OF THE BWO FLAGS TO THE     *\n*                      THREE FLAGS HERE                               *\n*                        IF EQUAL PROCESSING CONTINUES WITH NEXT      *\n*                          CONTROL CARD                               *\n*                        IF NOT EQUAL PROCESSING OF CONTROL CARDS     *\n*                          IS SKIPPED UNTIL NEXT RESET                *\n*   SET=<BWO>          SET THE CURRENT PROCESSING DSNAME TO THE       *\n*                      VALUES ENTERED                                 *\n*   RESET              RESETS THE SKIP PROCESSING OPTION FROM A FAILED*\n*                      TEST COMMAND...PROCESSING DSNAME IS ALSO       *\n*                      INITIALIZED                                    *\n*                                                                     *\n* DDNAMES                                                             *\n*   GDEBWOA            INPUT CONTROL CARDS                            *\n*   GDEBWO01           STATUS REPORT OF CONTROL CARDS <OPTIONAL>      *\n*   GDEBWO02           TRACE OF CALL TO ROUTINES      <OPTIONAL>      *\n*                                                                     *\n* SUGGESTED COMMAND SEQUENCE (EXAMPLE 1 .. SIMPLE SET)                *\n*   //GDEBWOA  DD  *                                                  *\n*   SHOW=MY.BWO.DATASET                                               *\n*   SET=000                                                           *\n*                                                                     *\n* SHOW WILL REPORT CURRENT STATUS AND SET WILL CHANGE THE STATUS      *\n*   .........................(EXAMPLE 2 .. SET ONLY IF IN ERROR)      *\n*   //GDEBWOA  DD  *                                                  *\n*   SHOW=MY.BWO.DATASET                                               *\n*   TEST=100                                                          *\n*   SET=000                                                           *\n* SHOW WILL REPORT CURRENT STATUS                                     *\n* TEST WILL MAKE SURE THE SET NEEDS TO BE DONE                        *\n* SET WILL SET THE STATUS ONLY IF THE TEST IS SUCCESSFUL              *\n*   .........................(EXAMPLE 2 .. SET ONLY IF IN ERROR)      *\n*   //GDEBWOA  DD  *                                                  *\n*   SHOW=MY.BWO.DATASET1                                              *\n*   TEST=100                                                          *\n*   SET=000                                                           *\n*   RESET                                                             *\n*   SHOW=MY.BWO.DATASET2                                              *\n*   TEST=100                                                          *\n*   SET=000                                                           *\n* SHOW WILL REPORT CURRENT STATUS                                     *\n* TEST WILL MAKE SURE THE SET NEEDS TO BE DONE                        *\n* SET WILL SET THE STATUS ONLY IF THE TEST IS SUCCESSFUL              *\n* RESET WILL ALLOW THE SECOND SET OF CONTROL CARDS TO BE PROCESSED    *\n* SHOW WILL REPORT CURRENT STATUS                                     *\n* TEST WILL MAKE SURE THE SET NEEDS TO BE DONE                        *\n* SET WILL SET THE STATUS ONLY IF THE TEST IS SUCCESSFUL              *\n* ------------------------------------------------------------------- *\n\n\n\n\nThoughts for a member in the source PDS.\n\nBWO and RLS from DFSMS  Introduction:\n\nDFSMSdss supports backup-while-open serialization, which can\nperform backup of data sets that are open for update for long\nperiods of time.  It can also perform a logical data set dump of\nthese data sets even if another application has them serialized.\nBackup-while-open is a better method than using SHARE or\nTOLERATE(ENQFAILURE) for dumping Customer Information Control\nSystem (CICS) VSAM file-control data sets that are in-use and\nopen for update. When you dump data sets that are designated by\nCICS as eligible for backup-while-open processing, data integrity\nis maintained through serialization interactions between CICS\n(data base control program), CICSVR (forward-recovery program),\nVSAM record management, DFSMSdfp, and DFSMSdss.\n\nCICS maintains recovery data in the form of a date and time-stamp\nin the catalog entry for backup-while-open data sets. This\ninformation is not used or processed by DFSMSdss, but it is\ndumped and restored to preserve that information for CICSVR. The\nrecovery data is also printed in selected messages to assist you\nin your recovery efforts.\n\nVSAM record-level sharing (RLS) extends the DFSMS storage\nhierarchy to support a data sharing environment across multiple\nsystems in a Parallel Sysplex.  This support is designed\nprimarily for VSAM data sets used by CICS Online Transaction\nProcessing (OLTP) applications. VSAM RLS processing involves\nsupport from multiple products: CICS Transaction Server, CICSVR\n2.3, and DFSMS/MVS 1.3 or higher.\n\nVSAM RLS is a data set access mode that allows multiple address\nspaces, CICS application owning regions (AORs) on multiple z/OS\nsystems, and jobs to access data at the same time. With VSAM RLS,\nmultiple CICS systems can directly access a shared VSAM data set,\neliminating the need for function shipping between AORs and file\nowning regions (FORs).\n\nCICS provides the logging, commit, and rollback functions for\nVSAM recoverable files; VSAM provides record-level serialization\nand cross-system caching; and CICSVR provides a data set recovery\nfunction. Whether a data set is recoverable or not determines the\nlevel of sharing that is allowed between applications. For\nexample:\n\n-   Both CICS and non-CICS jobs can have concurrent read/write\naccess to nonrecoverable data sets.\n\n-   Non-CICS jobs can have read-only access to recoverable data\nsets, concurrent with read/write access by CICS jobs.\n\nYou use the LOG data set attribute to define a data set as\nrecoverable or nonrecoverable.\n\nRestriction: Batch jobs that update recoverable data sets\ncontinue to use non-RLS mode (non-shared resource (NSR), local\nshared resource (LSR), global shared resource (GSR) access\nmodes.) They cannot concurrently update any data set being\naccessed in RLS access mode.\n\nVSAM RLS uses the coupling facility (CF) to perform data set\nlevel locking, record locking, and data caching. VSAM RLS uses\nthe conditional write and cross-invalidate functions of the CF\ncache structure, thereby avoiding the need for control interval\n(CI) level locking.\n\nVSAM RLS uses the CF caches as store-through caches. When a\ncontrol interval of data is written, it is written to both the CF\ncache and to DASD.  This ensures that problems occurring with a\nCF cache do not result in the loss of VSAM data.\n\nHope this helps,\nChip\n\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$NOTE1": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00 \\x01\\x03)\\x7f\\x01\\x03)\\x7f\\x08G\\x00\\x15\\x00\\x15\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-10-24T00:00:00", "modifydate": "2003-10-24T08:47:20", "lines": 21, "newlines": 21, "modlines": 0, "user": "SBGOLOB"}, "text": "Sam,\n\nThe IBM list asked last week if someone had a routine to update\nBWO flags in batch.  We had something in CICS which I've\nconverted to batch.  I'd like to share it with the world if it is\nwanted.  Please take a look at the code and see if it would be\nworthy of a CBTTAPE contribution.\n\n.asm is the source + macros, and .txt is a sample output.\n\nSincerely,\nChip Grantham\n\n\nSee attached file: GDEBWOBT for the code.\nSee attached file: $OUTPUT  for sample output, in XMIT-format so\n                            it could fit into an FB-80 pds.  When\n                            this member is RECEIVEd, it will be an\n                            FBA-133 file suitable for printing.\n\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$OUTPUT": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03)\\x7f\\x01\\x03)\\x7f\\x088\\x04\\x1b\\x04\\x1b\\x00\\x00\\xe7\\xd4\\xc9\\xe3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-10-24T00:00:00", "modifydate": "2003-10-24T08:38:00", "lines": 1051, "newlines": 1051, "modlines": 0, "user": "XMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "@FILE651": {"ttr": 1028, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04?\\x00\\x00\\x01\\x03)\\x7f\\x01\\x03)\\x7f\\x16\\x05\\x001\\x001\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf3@@@'", "ispf": {"version": "04.63", "flags": 0, "createdate": "2003-10-24T00:00:00", "modifydate": "2003-10-24T16:05:00", "lines": 49, "newlines": 49, "modlines": 0, "user": "CBT-463"}, "text": "//***FILE 651 is from Chip Grantham and contains MVS batch programs *   FILE 651\n//*           which are designed to reset BWO flags.  Sample output *   FILE 651\n//*           from this package, which really is in FBA, LRECL=133  *   FILE 651\n//*           format, but which has been reformatted for packaging  *   FILE 651\n//*           by the TSO XMIT command, is included here as member   *   FILE 651\n//*           $OUTPUT.                                              *   FILE 651\n//*                                                                 *   FILE 651\n//*           email:  cgrantha@notes.state.ne.us                    *   FILE 651\n//*                                                                 *   FILE 651\n//*     Here is some text about the BWO flags, who cares, and       *   FILE 651\n//*     what the program does:                                      *   FILE 651\n//*                                                                 *   FILE 651\n//*     DFSMSdss supports backup-while-open serialization, which    *   FILE 651\n//*     can perform backup of data sets that are open for update    *   FILE 651\n//*     for long periods of time.  It can also perform a logical    *   FILE 651\n//*     data set dump of these data sets even if another            *   FILE 651\n//*     application has them serialized.  Backup-while-open is a    *   FILE 651\n//*     better method than using SHARE or TOLERATE(ENQFAILURE)      *   FILE 651\n//*     for dumping CICS VSAM file-control data sets that are       *   FILE 651\n//*     in-use and open for update.  When you dump data sets that   *   FILE 651\n//*     are designated by CICS as eligible for backup-while-open    *   FILE 651\n//*     processing, data integrity is maintained through            *   FILE 651\n//*     serialization interactions between CICS (data base          *   FILE 651\n//*     control program), CICSVR (forward-recovery program),        *   FILE 651\n//*     VSAM record management, DFSMSdfp, and DFSMSdss.             *   FILE 651\n//*                                                                 *   FILE 651\n//*     Keywords from the IDCAMS Define, Current Catalog time       *   FILE 651\n//*     and date stamps, and Backup-While-Open flags may need       *   FILE 651\n//*     to be reviewed when performing a recovery or backup.        *   FILE 651\n//*                                                                 *   FILE 651\n//*     The program GDERLSBT will report on current status of       *   FILE 651\n//*     these indicators from all sources.  The input may be a      *   FILE 651\n//*     specific dataset or may be a catalog filter.                *   FILE 651\n//*                                                                 *   FILE 651\n//*     The input control statement                                 *   FILE 651\n//*       SHOW=<dsname>                                             *   FILE 651\n//*     will report on RLS indicators for the requested dsname.     *   FILE 651\n//*     The input control statement                                 *   FILE 651\n//*       LEVEL=<catalog filter>                                    *   FILE 651\n//*     will search the master catalog and usercatalogs using       *   FILE 651\n//*     IGGCSI00 for VSAM clusters reporting on every dataset       *   FILE 651\n//*     which meet the filter qualifications.                       *   FILE 651\n//*                                                                 *   FILE 651\n//*     The program GDEBWOBT will facilitate the setting of the     *   FILE 651\n//*     BWO control flags.  The setting of the flags may be         *   FILE 651\n//*     required to accommodate backup-while-open processing,       *   FILE 651\n//*     build testing scenarios, or allow processing by CICSVR      *   FILE 651\n//*     and/or CICS.                                                *   FILE 651\n//*                                                                 *   FILE 651\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "BWOINTRO": {"ttr": 1030, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x005\\x01\\x03)\\x7f\\x01\\x03)\\x7f\\x16\\x00\\x00F\\x00F\\x00\\x00\\xc3\\xc8\\xc9\\xd7@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-10-24T00:00:00", "modifydate": "2003-10-24T16:00:35", "lines": 70, "newlines": 70, "modlines": 0, "user": "CHIP"}, "text": "BWO and RLS from DFSMS  Introduction:\n\nDFSMSdss supports backup-while-open serialization, which can\nperform backup of data sets that are open for update for long\nperiods of time.  It can also perform a logical data set dump of\nthese data sets even if another application has them serialized.\nBackup-while-open is a better method than using SHARE or\nTOLERATE(ENQFAILURE) for dumping Customer Information Control\nSystem (CICS) VSAM file-control data sets that are in-use and\nopen for update. When you dump data sets that are designated by\nCICS as eligible for backup-while-open processing, data integrity\nis maintained through serialization interactions between CICS\n(data base control program), CICSVR (forward-recovery program),\nVSAM record management, DFSMSdfp, and DFSMSdss.\n\nCICS maintains recovery data in the form of a date and time-stamp\nin the catalog entry for backup-while-open data sets. This\ninformation is not used or processed by DFSMSdss, but it is\ndumped and restored to preserve that information for CICSVR. The\nrecovery data is also printed in selected messages to assist you\nin your recovery efforts.\n\nVSAM record-level sharing (RLS) extends the DFSMS storage\nhierarchy to support a data sharing environment across multiple\nsystems in a Parallel Sysplex.  This support is designed\nprimarily for VSAM data sets used by CICS Online Transaction\nProcessing (OLTP) applications. VSAM RLS processing involves\nsupport from multiple products: CICS Transaction Server, CICSVR\n2.3, and DFSMS/MVS 1.3 or higher.\n\nVSAM RLS is a data set access mode that allows multiple address\nspaces, CICS application owning regions (AORs) on multiple z/OS\nsystems, and jobs to access data at the same time. With VSAM RLS,\nmultiple CICS systems can directly access a shared VSAM data set,\neliminating the need for function shipping between AORs and file\nowning regions (FORs).\n\nCICS provides the logging, commit, and rollback functions for\nVSAM recoverable files; VSAM provides record-level serialization\nand cross-system caching; and CICSVR provides a data set recovery\nfunction. Whether a data set is recoverable or not determines the\nlevel of sharing that is allowed between applications. For\nexample:\n\n-   Both CICS and non-CICS jobs can have concurrent read/write\naccess to nonrecoverable data sets.\n\n-   Non-CICS jobs can have read-only access to recoverable data\nsets, concurrent with read/write access by CICS jobs.\n\nYou use the LOG data set attribute to define a data set as\nrecoverable or nonrecoverable.\n\nRestriction: Batch jobs that update recoverable data sets\ncontinue to use non-RLS mode (non-shared resource (NSR), local\nshared resource (LSR), global shared resource (GSR) access\nmodes.) They cannot concurrently update any data set being\naccessed in RLS access mode.\n\nVSAM RLS uses the coupling facility (CF) to perform data set\nlevel locking, record locking, and data caching. VSAM RLS uses\nthe conditional write and cross-invalidate functions of the CF\ncache structure, thereby avoiding the need for control interval\n(CI) level locking.\n\nVSAM RLS uses the CF caches as store-through caches. When a\ncontrol interval of data is written, it is written to both the CF\ncache and to DASD.  This ensures that problems occurring with a\nCF cache do not result in the loss of VSAM data.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "GDEBWOBT": {"ttr": 1032, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03)\\x7f\\x01\\x03)\\x7f\\x08A%\\x01%\\x01\\x00\\x00\\xc3\\xc8\\xc9\\xd7@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-10-24T00:00:00", "modifydate": "2003-10-24T08:41:00", "lines": 9473, "newlines": 9473, "modlines": 0, "user": "CHIP"}, "text": "//*********************************************************************\n//*                                                                   *\n//*  STEP010   PGM=ASMA90                                             *\n//*                                                                   *\n//*********************************************************************\n//STEP010 EXEC PGM=ASMA90,\n//             PARM='BATCH,USING(WARN(9))'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(4096,(120,120),,,ROUND),\n//             UNIT=SYSALLDA,\n//             DCB=BUFNO=1\n//SYSLIB   DD  DSN=SYS1.MACLIB,\n//             DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN  DD   DSN=&&OBJ(GDERLSBT),\n//             SPACE=(CYL,(3,5,5)),\n//             DISP=(NEW,PASS,DELETE),\n//             UNIT=3390,\n//             RECFM=FB,\n//             LRECL=80,\n//             BLKSIZE=3200\n//SYSIN    DD  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* SHOW RLS STATUS OF A DATASET IN BATCH                               *\n*                                                                     *\n* CONTROL CARDS                                                       *\n*   SHOW=<DSNAME>      ASK THE STATUS OF THE RLS STATUS AND SHOW      *\n*                      VALUES IN THE OUTPUT REPORT                    *\n*   LEVEL=<CATALOG FILTER> LOOK IN THE CATALOG FOR ALL CLUSTERS THAT  *\n*                      MATCH THE FILTER                               *\n* DDNAMES                                                             *\n*   GDERLSA            INPUT CONTROL CARDS                            *\n*   GDERLS01           STATUS REPORT OF CONTROL CARDS <OPTIONAL>      *\n*   GDERLS02           OUTPUT FROM THE CALL           <OPTIONAL>      *\n*   GDERLS03           TRACE OF CALL TO ROUTINES      <OPTIONAL>      *\n*                                                                     *\n* EXAMPLE JCL                                                         *\n*   //GDERLSA  DD  *                                                  *\n*   SHOW=MY.BWO.DATASET                                               *\n*   LEVEL=MY.BWO.**                                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MACRO\n&LABEL   GDEDDN   &DDN,                                                X\n               &DDNLOC=,       OR DDNLOCATION                          X\n               &FOUND=,        LABEL                                   X\n               &NOTFOUND=      LABEL\n         LCLB  &ERRORS\n&ERRORS  SETB  0\n         GBLB  &GDEDDNSTORAGEDEFINED\n         AIF   ('&DDNLOC' NE '').A0010\n         AIF   ('&DDN' NE '').A0010\n&ERRORS  SETB  1\n         MNOTE 8,'DDN OR DDNLOC MUST BE DEFINED'\n.A0010   AIF   ('&FOUND' NE '').A0020\n&ERRORS  SETB  1\n         MNOTE 8,'LABEL FOUND MUST BE DEFINED'\n.A0020   AIF   ('&NOTFOUND' NE '').A0030\n&ERRORS  SETB  1\n         MNOTE 8,'LABEL NOTFOUND MUST BE DEFINED'\n.A0030   ANOP\n         AIF   (&ERRORS).Z0010\n.**********************************************************************\n.*                                                                    *\n.* THIS MACRO IS USED TO CHECK THE TIOT FOR A DDNAME                  *\n.*                                                                    *\n.**********************************************************************\n&LABEL   L     R14,=A(GDEDDN_RETURN_TIOT)\n         EXTRACT (R14),FIELDS=TIOT GET TIOT ADDRESS\n         L     R14,=A(GDEDDN_RETURN_TIOT)\n         L     R14,0(R14)        GET TIOT ADDRESS\n         LA    R15,24(R14)       MOVE TO FIRST DDNAME ENTRY IN TIOT\n         XR    R14,R14           CLEAR R14\n         ICM   R14,B'0001',0(R15) MOVE IN LENGTH\n         LTR   R14,R14           END OF TIOT?\n         BZ    &NOTFOUND         YES-BRANCH (RETURN CODE) MUST FIND\n         CH    R14,=H'20'        IS THIS THE LENGTH WE EXPECT?\n         BNE   *+4+6+4           NO-BRANCH (LOOP AGAIN)   MUST BE 20\n         AIF   ('&DDNLOC' NE '').B0010\n         CLC   4(8,R15),=CL8'&DDN' IS THIS THE DDNAME?\n         AGO   .B0020\n.B0010   ANOP\n         CLC   4(8,R15),&DDNLOC    IS THIS THE DDNAME?\n.B0020   ANOP\n         BE    &FOUND            YES-BRANCH (FIND UCB)\n         AR    R15,R14           MOVE TO NEXT TABLE ENTRY\n         B     *-2-4-6-4-4-4-2-4 LOOP AGAIN\n         AIF   (&GDEDDNSTORAGEDEFINED).Z0010\n&GDEDDNSTORAGEDEFINED   SETB   1\nGDEDDN_RETURN_TIOT      DS     F\n.Z0010   ANOP\n         MEND\n         MACRO\n&NAME    GDEH2E   &SOURCE,&TARGET,&LENGTH,&WORKR1=14,&WORKR2=15,       X\n               &WORKR3=R2,&WORKR4=R3,&WORKR5=R1,&SAVE=NO\n         LCLC  &GDEH2ELABEL1\n&GDEH2ELABEL1 SETC 'GDEH2E_'.'&SYSNDX'\n.*\n.*  SET UP STORAGE AS NEEDED\n.*\n         AIF  ('&SAVE' EQ 'NO').A0010\n         CNOP  0,4\n         B     *+28\n&GDEH2ELABEL1 DS    6F\n.A0010   ANOP\n.*\n.*  SAVE REGS IF ASKED TO DO SO\n.*\n         AIF   ('&SAVE' EQ 'NO').A0020\n&NAME    STM   14,3,&GDEH2ELABEL1\n         AGO   .A0030\n.A0020   ANOP\n         AIF   (K'&NAME EQ 0).A0030\n&NAME    EQU   *\n.A0030   ANOP\n         L     &WORKR5,=A(&LENGTH)\n         LA    &WORKR3,&SOURCE\n         LA    &WORKR4,&TARGET\n         ICM   &WORKR2,B'1000',0(&WORKR3)\n         SLL   &WORKR1,4\n         SLDL  &WORKR1,4\n         SLL   &WORKR1,4\n         SLDL  &WORKR1,4\n         STCM  &WORKR1,B'0011',0(&WORKR4)\n         TR    0(2,&WORKR4),=C'0123456789ABCDEF'\n         LA    &WORKR3,1(&WORKR3)\n         LA    &WORKR4,2(&WORKR4)\n         BCT   &WORKR5,*-38\n.*\n.*  RESTORE REGS IF ASKED TO DO SO\n.*\n         AIF   ('&SAVE' EQ 'NO').A0040\n         LM    14,3,&GDEH2ELABEL1\n.A0040   ANOP\n         MEND\n         MACRO\n&LABEL   GDEPRINT &DATA,&TYPE=WRITE,                                   X\n               &OK=,           LABEL                                   X\n               &NOTOK=,        LABEL                                   X\n               &HEADINGS=,     (HEAD1,HEAD2,....HEAD12)                X\n               &TITLE=,        TITLE OR 'CENTER THIS STUFF'            X\n               &BREAKS=, NORMAL,  FORCE, SUBHEADING                    X\n               &BREAKTYPE=, ALLOW, PROHIBIT, NOHEADINGS                X\n               &RESETPAGENUMBER=, NO, YES                              X\n               &TABLELEN=, 80,                                         X\n               &TABLEENTRYLEN=, 80,                                    X\n               &LINESPERPAGE=, 60,                                     X\n               &REPORTDD=,                                             X\n               &NAME=,                                                 X\n               &REPORTID=01,                                           X\n               &CHECK=,                                                X\n               &PARMLIST=\n.**********************************************************************\n.*                                                                    *\n.* THIS MACRO IS USED TO CALL THE PRINT DRIVER ROUTINES               *\n.* INTERFACE BY USING THE TYPE KEYWORK                                *\n.*                                                                    *\n.* TYPE=OPEN        = INITIALIZE AND OPEN THE PRINTER           .C    *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=WRITE       = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=1)  .D    *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=CHARZONENUM = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=2)  .E    *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=DUMP        = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=3)  .F    *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=TABLE       = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=4) .G     *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=HEX         = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=5) .H     *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=TABLEORHEX  = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=6) .I     *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=STORAGE     = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=7) .J     *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=TABLEORHEXWITHTIME = WRITE OUTPUT2PRINTER  (SUBTYPE=8) .K     *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=DUMPSTORAGEANDTIME = WRITE OUTPUT2PRINTER  (SUBTYPE=9) .L     *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=TRACE       = PRINT THE SAVE AREA FROM THE (SUBTYPE=T) .M     *\n.*                    LAST CALL TO EXAMINE FOR ERRORS                 *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=CLOSE       = CLOSE THE PRINTER                        .N     *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                             .O     *\n.* TYPE=CHECK       = CHECK FOR A SET OF LINES TO PRINT AS A BLOCK, IF*\n.*                    SPACE IS NOT AVAILABLE, PERFORM A PAGE BREAK NOW*\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=PAGENUM     = RETURN CURRENT PAGE NUMBER                      *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=PARMLIST DECLARES STORAGE TO BE USED BY PARMLIST              *\n.*                                                                    *\n.* TYPE=DSECT DECLARES DSECT TO MAP THE STORAGE SET ASIDE BY          *\n.*            PARMLIST                                                *\n.*                                                                    *\n.* SAMPLE USAGE                                                       *\n.*   IN DSECT SECTION DECLARE                                         *\n.*            GDEPRINT TYPE=DSECT,REPORTDD=CSD020,NAME=PARMDP,        *\n.*                  REPORTID=05                                       *\n.*   IN OPEN SECTION SPECIFY                                          *\n.*            GDEPRINT TYPE=OPEN,NAME=PARMDP,                         *\n.*                  TITLE='USERPROGRAM TRACING FOR DFHCSDUP',         *\n.*                  HEADINGS=(HEAD1)                                  *\n.*       GDEPRINT TYPE=OPEN,NAME=PARMDP,                              *\n.*             TITLE='USERPROGRAM TRACING FOR DFHCSDUP',              *\n.*             HEADINGS=(HEAD1,HEAD2)                                 *\n.*   IN OUTPUT SECTION USE                                            *\n.*            GDEPRINT LABEL,NAME=PARMDP                              *\n.*            GDEPRINT 0(R8),TYPE=DUMPSTORAGEANDTIME,NAME=PARMDP,     *\n.*                  TABLELEN=40,TABLEENTRYLEN=4                       *\n.*   IN CLOSE SECTION DO                                              *\n.*            GDEPRINT TYPE=CLOSE,NAME=PARMDP                         *\n.*   IN STORAGE SECTION RESERVE STORAGE BY                            *\n.*            GDEPRINT TYPE=PARMLIST,NAME=PARMDP                      *\n.*                                                                    *\n.**********************************************************************\n         GBLC  &GDEPRINTCSECTDEFINED(32)\n         GBLC  &GDEPRINTDSECTDEFINED(32)\n         GBLC  &GDEPRINTREPORTDD(32)\n         GBLC  &GDEPRINTREPORTID(32)\n         LCLA  &CNTA,&CNTB,&CNTC,&CNTD\n         LCLC  &ROUT01,&ROUT01ID\n         LCLC  &CMD,&SUBCMD\n         LCLC  &REPORT,&ZREPORTDD\n         LCLC  &ZBREAKS,&ZBREAKTYPE,&ZRESETPAGENUMBER,\n         LCLC  &ZTABLELEN,&ZTABLEENTRYLEN,&ZLINESPERPAGE\n         LCLC  &LBL\n&ZBREAKS                SETC  '&BREAKS'\n&ZBREAKTYPE             SETC  '&BREAKTYPE'\n&ZRESETPAGENUMBER       SETC  '&RESETPAGENUMBER'\n&ZTABLELEN              SETC  '&TABLELEN'\n&ZTABLEENTRYLEN         SETC  '&TABLEENTRYLEN'\n&ZLINESPERPAGE          SETC  '&LINESPERPAGE'\n.**********************************************************************\n.*\n.*     KEEP A REPORTDD AND REPORT ID IN A LISTING KEYED BY &NAME\n.*\n.**********************************************************************\n         AIF   ('&NAME' NE '').AA000\n         MNOTE 8,'NAME MUST BE SPECIFIED'\n         AGO   .Z0010\n.AA000   ANOP\n.*\n.*     SEARCH TABLE\n.*\n&CNTA    SETA  1\n&REPORT  SETC  '&NAME'.'$$$$$$'\n&REPORT  SETC  '&REPORT'(1,6)\n.AA010   ANOP\n         AIF   ('&GDEPRINTCSECTDEFINED(&CNTA)' EQ '').AA020\n         AIF   ('&GDEPRINTCSECTDEFINED(&CNTA)' EQ '&REPORT').AA030\n&CNTA    SETA  &CNTA+1\n         AIF   (&CNTA LE 32).AA010\n         MNOTE 8,'MORE THAN 32 PRINTOUTS DEFINED - LIMIT REACHED'\n         AGO   .Z0010\n.*\n.*     NOT FOUND SO ADD TO TABLE\n.*\n.AA020   ANOP\n&ZREPORTDD     SETC  '&REPORTDD'\n         AIF   ('&ZREPORTDD' NE '').AA021\n&ZREPORTDD     SETC  '&SYSECT'.'$$$$$$'\n&ZREPORTDD     SETC  '&ZREPORTDD'(1,6)\n.AA021   ANOP\n         AIF   ('&REPORTID' NE '').AA022\n         MNOTE 8,'REPORTID MUST BE SPECIFIED ON THIS CALL'\n         AGO   .Z0010\n.AA022   ANOP\n&CNTB    SETA  K'&REPORTID\n         AIF   (&CNTB EQ 2).AA023\n         MNOTE 8,'REPORTID MUST BE TWO CHARACTERS '\n         AGO   .Z0010\n.AA023   ANOP\n&REPORT  SETC  '&NAME'.'$$$$$$'\n&REPORT  SETC  '&REPORT'(1,6)\n&GDEPRINTCSECTDEFINED(&CNTA) SETC  '&REPORT'\n&GDEPRINTREPORTDD(&CNTA)     SETC  '&ZREPORTDD'\n&GDEPRINTREPORTID(&CNTA)     SETC  '&REPORTID'\n.*\n.*     FOUND IN TABLE TO SET PARMS\n.*\n.AA030     ANOP\n&REPORT    SETC  '&GDEPRINTCSECTDEFINED(&CNTA)'\n&ZREPORTDD SETC '&GDEPRINTREPORTDD(&CNTA)'\n&ROUT01    SETC  '&ZREPORTDD'.'&GDEPRINTREPORTID(&CNTA)'(1,2)\n&ROUT01ID  SETC  '&ZREPORTDD'.'.R'.'&GDEPRINTREPORTID(&CNTA)'(1,2)\n&LBL       SETC  'GDEPRINT_'.'&REPORT'(1,6).'_'\n.**********************************************************************\n.*\n.*     HERE ARE THE MACRO EXPANSIONS FOR CALLING THE I/O MODULE\n.*\n.**********************************************************************\n.*\n.*     TYPE=PARMLIST\n.*\n.A0010   AIF   ('&TYPE' NE 'PARMLIST').B0010\n         AIF   ('&PARMLIST' EQ '').A0020\n&PARMLIST DS  0D       PROGRAMS WORKAREA\n         DS    CL(&LBL.DSECT_LENGTH)\n         AGO   .Z0010\n.A0020   ANOP\n&LBL.DATAAREA DS  0D    PROGRAMS WORKAREA\n         DS    CL(&LBL.DSECT_LENGTH)\n         AGO   .Z0010\n.*\n.*     TYPE=DSECT\n.*\n.B0010   AIF   ('&TYPE' NE 'DSECT').C0010\n&CNTA    SETA  1\n.B0020   ANOP\n         AIF   ('&GDEPRINTDSECTDEFINED(&CNTA)' EQ '').B0030\n         AIF   ('&GDEPRINTDSECTDEFINED(&CNTA)' EQ '&NAME').Z0010\n&CNTA    SETA  &CNTA+1\n         AIF   (&CNTA LE 32).B0020\n         MNOTE 8,'MORE THAN 32 PRINTOUTS DEFINED - LIMIT REACHED'\n         AGO   .B0020\n.B0030   ANOP\n&GDEPRINTDSECTDEFINED(&CNTA) SETC '&NAME'\n&LBL.DSECT          DSECT        PRINT PARMLIST DSECT\n&LBL.COMMAND        DS   CL1     CURRENT COMMAND\n&LBL.SUBCOMMAND     DS   CL1     SUBCOMMAND\n&LBL.DDNAME         DS   CL8     DDNAME FOR OUTPUT\n&LBL.LENGTH         DS   AL2     TOTAL LENGTH OF A BLOCK TO PRINT\n&LBL.SUBLENGTH      DS   AL2     SUB AREA LENTGTH IN A BLOCK\n&LBL.REPORTID       DS   CL10    ID TO PUT ON REPORT\n&LBL.LINESPERPAGE   DS   PL2     LINE OF OUTPUT BEFORE PAGE BREAK\n&LBL.FORCENEWPAGE   DS   CL1     FORCE A NEW PAGE NOW\n&LBL.NEWPAGEALLOWED DS   CL1     IS A NEW PAGE ALLOWED\n&LBL.RESETPAGENUMBER DS  CL1     RESET THE PAGE NUMBER TO 1\n&LBL.RETURNCODE     DS   CL2     RETURN CODE FROM THE ROUTINE\n&LBL.CHECKCOUNT     DS   PL2     COUNT OF LINE FOR TYPE=CHECK\n                    DS  0F\n&LBL.ROUTINEADDRESS DS   CL4     ADDRESS OF PRINT PROGRAM\n&LBL.PARMADDRESS    DS   CL4     ADDRESS PARM AREA\n&LBL.USERDATAAREA   DS   CL4     ADDRESS USERDATAAREA\n&LBL.HEADERADDRESS  DS   CL4     ADDRESS HEADERS\n                    DS   11AL4   UP TO 12 HEADERS ALLOWED\n&LBL.HEADING        DS   CL133   CENTER HEADING AREA\n&LBL.DSECT_LENGTH   EQU  *-&LBL.DSECT\n         AGO   .Z0010\n.*\n.*     TYPE=OPEN\n.*\n.C0010   AIF   ('&TYPE' NE 'OPEN').D0010\n         AIF   ('&PARMLIST' EQ '').C0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .C0030\n.C0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.C0030   ANOP\n         USING &LBL.DSECT,R1\n         L     R15,=V(GDEPRINT)\n         ST    R15,&LBL.ROUTINEADDRESS\n         AIF      ('&ZBREAKS' NE '').C0040\n&ZBREAKS          SETC  'NORMAL'\n.C0040   ANOP\n         AIF      ('&ZBREAKTYPE' NE '').C0050\n&ZBREAKTYPE       SETC  'ALLOW'\n.C0050   ANOP\n         AIF      ('&ZRESETPAGENUMBER' NE '').C0060\n&ZRESETPAGENUMBER SETC  'NO'\n.C0060   ANOP\n         AIF      ('&ZTABLELEN' NE '').C0070\n&ZTABLELEN        SETC  '80'\n.C0070   ANOP\n         AIF      ('&ZTABLEENTRYLEN' NE '').C0080\n&ZTABLEENTRYLEN   SETC  '80'\n.C0080   ANOP\n         AIF      ('&ZLINESPERPAGE' NE '').C0090\n&ZLINESPERPAGE    SETC  '60'\n.C0090   ANOP\n&CMD     SETC  '1'\n&SUBCMD  SETC  '1'\n         AGO   .P0010\n.*\n.*     TYPE=WRITE\n.*\n.D0010   AIF   ('&TYPE' NE 'WRITE').E0010\n         AIF   ('&PARMLIST' EQ '').D0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .D0030\n.D0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.D0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '2'\n&SUBCMD  SETC  '1'\n         AGO   .P0010\n.*\n.*     TYPE=CHARZONENUM\n.*\n.E0010   AIF   ('&TYPE' NE 'CHARZONENUM').F0010\n         AIF   ('&PARMLIST' EQ '').E0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .E0030\n.E0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.E0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '2'\n&SUBCMD  SETC  '2'\n         AGO   .P0010\n.*\n.*     TYPE=DUMP\n.*\n.F0010   AIF   ('&TYPE' NE 'DUMP').G0010\n         AIF   ('&PARMLIST' EQ '').F0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .F0030\n.F0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.F0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '2'\n&SUBCMD  SETC  '3'\n         AGO   .P0010\n.*\n.*     TYPE=TABLE\n.*\n.G0010   AIF   ('&TYPE' NE 'TABLE').H0010\n         AIF   ('&PARMLIST' EQ '').G0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .G0030\n.G0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.G0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '2'\n&SUBCMD  SETC  '4'\n         AGO   .P0010\n.*\n.*     TYPE=HEX\n.*\n.H0010   AIF   ('&TYPE' NE 'HEX').I0010\n         AIF   ('&PARMLIST' EQ '').H0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .H0030\n.H0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.H0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '2'\n&SUBCMD  SETC  '5'\n         AGO   .P0010\n.*\n.*     TYPE=TABLEORHEX\n.*\n.I0010   AIF   ('&TYPE' NE 'TABLEORHEX').J0010\n         AIF   ('&PARMLIST' EQ '').I0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .I0030\n.I0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.I0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '2'\n&SUBCMD  SETC  '6'\n         AGO   .P0010\n.*\n.*     TYPE=STORAGE\n.*\n.J0010   AIF   ('&TYPE' NE 'STORAGE').K0010\n         AIF   ('&PARMLIST' EQ '').J0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .J0030\n.J0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.J0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '2'\n&SUBCMD  SETC  '1'\n         AGO   .P0010\n.*\n.*     TYPE=TABLEORHEXWITHTIME\n.*\n.K0010   AIF   ('&TYPE' NE 'TABLEORHEXWITHTIME').L0010\n         AIF   ('&PARMLIST' EQ '').K0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .K0030\n.K0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.K0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '2'\n&SUBCMD  SETC  '8'\n         AGO   .P0010\n.*\n.*     TYPE=DUMPSTORAGEANDTIME\n.*\n.L0010   AIF   ('&TYPE' NE 'DUMPSTORAGEANDTIME').M0010\n         AIF   ('&PARMLIST' EQ '').L0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .L0030\n.L0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.L0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '2'\n&SUBCMD  SETC  '9'\n         AGO   .P0010\n.*\n.*     TYPE=TRACE\n.*\n.M0010   AIF   ('&TYPE' NE 'TRACE').N0010\n         AIF   ('&PARMLIST' EQ '').M0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .M0030\n.M0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.M0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '2'\n&SUBCMD  SETC  'T'\n         AGO   .P0010\n.*\n.*     TYPE=CLOSE\n.*\n.N0010   AIF   ('&TYPE' NE 'CLOSE').O0010\n         AIF   ('&PARMLIST' EQ '').N0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .N0030\n.N0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.N0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '3'\n&SUBCMD  SETC  '1'\n         AGO   .P0010\n.*\n.*     TYPE=CHECK\n.*\n.O0010   AIF   ('&TYPE' NE 'CHECK').Q0010\n         AIF   ('&PARMLIST' EQ '').O0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .O0030\n.O0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.O0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '4'\n&SUBCMD  SETC  '1'\n         AGO   .P0010\n.*\n.*     TYPE=PAGENUM\n.*\n.Q0010   AIF   ('&TYPE' NE 'PAGENUM').Z0020\n         AIF   ('&PARMLIST' EQ '').Q0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .Q0030\n.Q0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.Q0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '5'\n&SUBCMD  SETC  '1'\n         AGO   .P0010\n.**********************************************************************\n.*\n.*     ALL THE PARMS ARE SET UP TO BUILD STATEMENTS SO BUILD STATEMENTS\n.*\n.**********************************************************************\n.P0010   ANOP\n.*\n.*     DO COMMAND AND SUBCOMMAND\n.*\n         MVI   &LBL.COMMAND,C'&CMD'\n         MVI   &LBL.SUBCOMMAND,C'&SUBCMD'\n.*\n.*     DO REPORT DD\n.*\n         AIF   ('&TYPE' EQ 'OPEN').P0010A\n         AIF   ('&REPORTDD' EQ '').P0011\n.P0010A  ANOP\n         MVC   &LBL.DDNAME,=CL8'&ROUT01'\n.*\n.*     DO TABLE LENGTH AND ENTRY LENGTH\n.*\n.P0011   AIF   ('&ZTABLELEN' EQ '').P0012\n         AIF   ('&ZTABLELEN'(1,1) EQ '(').P0011A\n         MVC   &LBL.LENGTH,=AL2(&ZTABLELEN)\n         AGO   .P0012\n.P0011A  STCM  &ZTABLELEN,B'0011',&LBL.LENGTH\n.P0012   AIF   ('&ZTABLEENTRYLEN' EQ '').P0013\n         AIF   ('&ZTABLEENTRYLEN'(1,1) EQ '(').P0012A\n         MVC   &LBL.SUBLENGTH,=AL2(&ZTABLEENTRYLEN)\n         AGO   .P0013\n.P0012A  STCM  &ZTABLEENTRYLEN,B'0011',&LBL.SUBLENGTH\n.*\n.*     DO REPORT ID\n.*\n.P0013   AIF   ('&ROUT01ID' EQ '').P0014\n         MVC   &LBL.REPORTID,=CL10'&ROUT01ID'\n.*\n.*     DO LINES PER PAGE\n.*\n.P0014   AIF   ('&ZLINESPERPAGE' EQ '').P0015\n         ZAP   &LBL.LINESPERPAGE,=P'&ZLINESPERPAGE'\n.*\n.*     DO BREAKS\n.*\n.P0015   AIF   ('&ZBREAKS' EQ '').P0020\n         AIF   ('&ZBREAKS' EQ 'NORMAL').P0016\n         AIF   ('&ZBREAKS' EQ 'FORCE').P0017\n         AIF   ('&ZBREAKS' EQ 'SUBHEADING').P0018\n MNOTE *,'INVALID BREAKS PARAMETER. USE NORMAL, FORCE, OR SUBHEADING'\n.P0016   ANOP\n         MVI   &LBL.FORCENEWPAGE,C'1'\n         AGO   .P0020\n.P0017   ANOP\n         MVI   &LBL.FORCENEWPAGE,C'2'\n         AGO   .P0020\n.P0018   ANOP\n         MVI   &LBL.FORCENEWPAGE,C'3'\n         AGO   .P0020\n.*\n.*     DO BREAK TYPE\n.*\n.P0020   AIF   ('&ZBREAKTYPE' EQ '').P0030\n         AIF   ('&ZBREAKTYPE' EQ 'ALLOW').P0021\n         AIF   ('&ZBREAKTYPE' EQ 'PROHIBIT').P0022\n         AIF   ('&ZBREAKTYPE' EQ 'NOHEADINGS').P0023\n     MNOTE *,'BREAKTYPE IS INVALID. USE ALLOW, PROHIBIT, OR NOHEADINGS'\n.P0021   ANOP\n         MVI   &LBL.NEWPAGEALLOWED,C'1'\n         AGO   .P0030\n.P0022   ANOP\n         MVI   &LBL.NEWPAGEALLOWED,C'2'\n         AGO   .P0030\n.P0023   ANOP\n         MVI   &LBL.NEWPAGEALLOWED,C'3'\n         AGO   .P0030\n.*\n.*     DO LINE NO RESET\n.*\n.P0030   AIF   ('&ZRESETPAGENUMBER' EQ '').P0040\n         AIF   ('&ZRESETPAGENUMBER' EQ 'YES').P0031\n         AIF   ('&ZRESETPAGENUMBER' EQ 'NO').P0032\n     MNOTE *,'RESETPAGENUMBER IS INVALID. USE YES OR NO'\n.P0031   ANOP\n         MVI   &LBL.RESETPAGENUMBER,C'2'\n         AGO   .P0040\n.P0032   ANOP\n         MVI   &LBL.RESETPAGENUMBER,C'1'\n         AGO   .P0040\n.*\n.*     DO RETURN CODE\n.*\n.P0040   ANOP\n         MVC   &LBL.RETURNCODE,=CL2'00'\n.**********************************************************************\n.*\n.*     BUILD PARM LIST\n.*\n.**********************************************************************\n.*\n.*     FIRST PARM\n.*\n         LA    R14,&LBL.COMMAND\n         ST    R14,&LBL.PARMADDRESS\n.*\n.*     SECOND PARM\n.*\n         AIF   ('&CHECK' EQ '').P0060\n         ZAP   &LBL.CHECKCOUNT,=P'&CHECK'\n         LA    R14,&LBL.CHECKCOUNT\n         ST    R14,&LBL.USERDATAAREA\n         AGO   .P0070\n.P0060   ANOP\n         AIF   ('&DATA' EQ '').P0065\n         LA    R14,&DATA\n         ST    R14,&LBL.USERDATAAREA\n         AGO   .P0070\n.P0065   ANOP\n         LA    R14,0\n         ST    R14,&LBL.USERDATAAREA\n.P0070   ANOP\n.*\n.*     THIRD PARM\n.*\n&CNTA    SETA  1\n&CNTB    SETA  1\n         AIF   ('&TITLE' EQ '').P0080\n         AIF   ('&TITLE'(1,1) EQ '''').P0075\n&CNTB    SETA  2\n&CNTC    SETA  L'&TITLE\n&CNTD    SETA  (133-&CNTC)/2\n         MVC   &LBL.HEADING,=CL133' '\n         MVC   &LBL.HEADING+&CNTD.(&CNTC),&TITLE\n         LA    R14,&LBL.HEADING\n         ST    R14,&LBL.HEADERADDRESS\n         AGO   .P0080\n.P0075   ANOP\n&CNTB    SETA  2\n&CNTC    SETA  K'&TITLE-2\n&CNTD    SETA  (133-&CNTC)/2\n         MVC   &LBL.HEADING,=CL133' '\n         MVC   &LBL.HEADING+&CNTD.(&CNTC),=C&TITLE\n         LA    R14,&LBL.HEADING\n         ST    R14,&LBL.HEADERADDRESS\n         AGO   .P0080\n.*\n.*     FOURTH THRU FIFTEENTH PARMS\n.*\n.P0080   ANOP\n&CNTC    SETA  N'&HEADINGS\n         AIF   (&CNTC EQ 0).P0090\n.P0081   AIF   (&CNTA GT &CNTC).P0086\n         AIF   (&CNTB GT 12).P0084\n&CNTD    SETA  4*(&CNTB-1)\n         LA    R14,&HEADINGS(&CNTA)\n         ST    R14,&LBL.HEADERADDRESS+&CNTD\n&CNTA    SETA &CNTA+1\n&CNTB    SETA &CNTB+1\n         AGO   .P0081\n.P0084   MNOTE 8,'MAXUMIM OF HEADING LINES EXCEEDED.'\n         AGO   .P0090\n.P0086   ANOP\n&CNTD    SETA  4*(&CNTB-2)\n         OI    &LBL.HEADERADDRESS+&CNTD,X'80'\n.P0090   ANOP\n.**********************************************************************\n.*\n.*     CALL THE ROUTINE\n.*\n.**********************************************************************\n         L     R15,&LBL.ROUTINEADDRESS\n         LA    1,&LBL.PARMADDRESS\n         CALL  (15)\n.**********************************************************************\n.*\n.*     CHECK RETURN CODES\n.*\n.**********************************************************************\n         AIF   ('&OK' NE '').P0099\n         AIF   ('&NOTOK' NE '').P0099\n         AIF   ('&ZBREAKS' EQ 'FORCE').P0099\n         DROP  R1\n         AGO   .Z0010\n.P0099   AIF   ('&PARMLIST' EQ '').P0100\n         LA    R1,&PARMLIST\n         AGO   .P0110\n.P0100   ANOP\n         LA    R1,&LBL.DATAAREA\n.P0110   ANOP\n         AIF   ('&ZBREAKS' NE 'FORCE').P0120\n         MVI   &LBL.FORCENEWPAGE,C'1'\n.P0120   ANOP\n         AIF   ('&TYPE' EQ 'CHECK').P0150\n.*\n.*     RETURN CODE CHECKING FOR ALL BUT TYPE=CHECK\n.*\n         AIF   ('&OK' EQ '').P0130\n         CLI   &LBL.RETCODE,C'0'\n         BE    &OK\n.P0130   AIF   ('&NOTOK' EQ '').P0140\n         CLI   &LBL.RETCODE,C'0'\n         BNE   &NOTOK\n.P0140   ANOP\n         DROP  R1\n         AGO   .Z0010\n.*\n.*     RETURN CODE CHECKING FOR TYPE=CHECK\n.*\n.P0150   ANOP\n         AIF   ('&OK' EQ '').P0160\n         CP    &LBL.CHECKCOUNT,=P'0'\n         BNE   &OK\n.P0160   AIF   ('&NOTOK' EQ '').P0170\n         CP    &LBL.CHECKCOUNT,=P'0'\n         BE    &NOTOK\n.P0170   ANOP\n         DROP  R1\n         AGO   .Z0010\n.*\n.*     HERE ARE THE MACRO EXPANSIONS FOR CALLING THE I/O MODULE\n.*\n.**********************************************************************\n.Z0010   ANOP\n         MEXIT\n.Z0020   ANOP\n         MNOTE 8,'*** TYPE VALUE UNKNOWN, CHECK TYPE KEYWORD ***'\n         MEND\n         MACRO\n&TAG     GDESUBEN\n         GBLC  &TAGNAME,&TAGREGS\n.**********************************************************************\n.*                                                                    *\n.*  IF RENT SUPPLIED, THEN USE AS DSECT TO SAVE STORAGE AREA          *\n.*                                                                    *\n.**********************************************************************\n         AIF   ('&TAGREGS' EQ 'NO').B1000\n.A1000   ANOP\n&TAG     L     R14,&TAGREGS\n         LM    R2,R12,&TAGREGS+16\n         BR    R14\n         SPACE\n         DC    C'LTORG START &TAGNAME'\n         LTORG\n         DC    C'END LTORG &TAGNAME'\n         AGO   .Z1000\n.**********************************************************************\n.*                                                                    *\n.*  IF RENT NOT SUPPLIED, THEN USE LOCAL SAVE AREA                    *\n.*                                                                    *\n.**********************************************************************\n.B1000   ANOP\n&TAG     L     R14,&TAGNAME+8\n         LM    R2,R12,&TAGNAME+24\n         BR    R14\n         SPACE\n         DC    C'LTORG START &TAGNAME'\n         LTORG\n         DC    C'END LTORG &TAGNAME'\n         AGO   .Z1000\n.**********************************************************************\n.*                                                                    *\n.*  GLOBALS ARE SET, CODE IS GENERATED, SO GET OUT OF HERE ALIVE.     *\n.*                                                                    *\n.**********************************************************************\n.Z1000   ANOP\n         MEND\n         MACRO\n&TAG     GDESUBST &RENT=NO\n         GBLC  &TAGNAME,&TAGREGS\n         LCLC  &SAREA\n.**********************************************************************\n&TAGNAME SETC  '&TAG'\n&TAGREGS SETC  '&TAG'(1,3).'&SYSNDX'\n&SAREA   SETC  '&RENT'\n.**********************************************************************\n.*                                                                    *\n.*  IF RENT SUPPLIED, THEN USE AS DSECT TO SAVE STORAGE AREA          *\n.*                                                                    *\n.**********************************************************************\n         AIF   ('&RENT' EQ 'NO').B1000\n.A1000   ANOP\n&SAREA   DSECT\n&TAGREGS DS  15F\n&SYSECT  CSECT\n         DROP  R12\n         CNOP  0,4\n&TAGNAME STM   R14,R12,&TAGREGS\n         LR    R12,R15\n         USING &TAGNAME,R12\n         AGO   .Z1000\n.**********************************************************************\n.*                                                                    *\n.*  IF RENT NOT SUPPLIED, THEN USE LOCAL SAVE AREA                    *\n.*                                                                    *\n.**********************************************************************\n.B1000   ANOP\n&TAGREGS SETC  'NO'\n         DROP  R12\n         CNOP  0,4\n&TAGNAME STM   R14,R12,8(R15)\n         B     68(R15)\n         DC    15F'-1'\n         LR    R12,R15\n         USING &TAGNAME,R12\n         AGO   .Z1000\n.**********************************************************************\n.*                                                                    *\n.*  GLOBALS ARE SET, CODE IS GENERATED, SO GET OUT OF HERE ALIVE.     *\n.*                                                                    *\n.**********************************************************************\n.Z1000   ANOP\n         MEND\n         MACRO\n&TAG     GDEGOSUB &ROUTINE,&PARM\n         AIF   (T'&PARM EQ 'O').A2000\n&TAG     BAL   R1,*+8\n         DC    AL4(&PARM)\n         L     R15,=A(&ROUTINE)\n         BALR  R14,R15\n         LTR   R15,R15\n         MEXIT\n.A2000   ANOP\n&TAG     L     R15,=A(&ROUTINE)\n         BALR  R14,R15\n         LTR   R15,R15\n         MEND\n         MACRO\n&TAG     GDEEXIT\n         GBLB  &GDESAVE\n         GBLB  &GDERENT\n         GBLB  &GDEREGS\n         GBLB  &GDEMODE\n         GBLC  &GDESANM\n.**********************************************************************\n.*  ASSIGN DEFAULTS                                                   *\n.**********************************************************************\n&TAG     DS   0H\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *\n.**********************************************************************\n.GDE0100 AIF   (&GDEMODE).GDE0400\n         AIF   (&GDESAVE).GDE0110\n         AGO   .GDE0300\n.GDE0110 AIF   (&GDERENT).GDE0200\n         LR    R1,R13\n         L     R13,4(R1)\n         XC    8(4,R13),8(R13)\n         XC    4(4,R1),4(R1)\n         L     R14,12(R13)\n         LM    R2,R12,28(R13)\n         BR    R14\n         AGO   .GDE0900\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *\n.**********************************************************************\n.GDE0200 ANOP\n         LR    R1,R13\n         L     R13,4(R1)\n         XC    8(4,R13),8(R13)\n         XC    4(4,R1),4(R1)\n         STORAGE RELEASE,ADDR=(1),LENGTH=72\n         L     R14,12(R13)\n         LM    R2,R12,28(R13)\n         BR    R14\n         AGO   .GDE0900\n.**********************************************************************\n.*  RETURN R14                                                        *\n.**********************************************************************\n.GDE0300 ANOP\n         BR    R14\n         AGO   .GDE0900\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *\n.**********************************************************************\n.GDE0400 AIF   (&GDESAVE).GDE0410\n         AGO   .GDE0600\n.GDE0410 AIF   (&GDERENT).GDE0500\n         PR\n         AGO   .GDE0900\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *\n.**********************************************************************\n.GDE0500 ANOP\n         LAE   R1,0(R13)\n         STORAGE RELEASE,ADDR=(1),LENGTH=72\n         PR\n         AGO   .GDE0900\n.**********************************************************************\n.*  RETURN PR                                                         *\n.**********************************************************************\n.GDE0600 ANOP\n         PR\n.GDE0900 ANOP\n         LTORG\n         MEND\n         MACRO\n&TAG     GDESTART &BR0,&BR1,&BR2,&BR3,&BR4,&BR5,&BR6,                  C\n               &SAVEAREA=NO,&RENT=NO,&ARMODE=NO\n         GBLB  &GDESAVE\n         GBLB  &GDEMODE\n         GBLB  &GDERENT\n         GBLB  &GDEREGS\n         GBLC  &GDESANM\n         LCLC  &TAGNAME,&C\n         LCLC  &DBR0,&DBR1,&DBR2,&DBR3,&DBR4,&DBR5,&DBR6\n.**********************************************************************\n.*  ASSIGN DEFAULTS                                                   *\n.**********************************************************************\n&GDESANM SETC  '$GDE'.'&SYSNDX'        POSSIBLE SAVE AREA NAME\n&C       SETC  ','                     COMMA FOR USING\n&TAGNAME SETC  'GDENONAME'             POSSIBLE DEFAULT PGM NAME\n         AIF   ('&TAG' EQ '').GDE0010\n&TAGNAME SETC  '&TAG'\n.GDE0010 ANOP\n&DBR0    SETC  '&BR0'\n&DBR1    SETC  '&BR1'\n&DBR2    SETC  '&BR2'\n&DBR3    SETC  '&BR3'\n&DBR4    SETC  '&BR4'\n&DBR5    SETC  '&BR5'\n&DBR6    SETC  '&BR6'\n         AIF   ('&DBR0' NE '').GDE0020\n&DBR0    SETC  'R12'                   DEFAULT BASE REG\n.GDE0020 ANOP\n&GDESAVE SETB  1\n         AIF   (T'&SAVEAREA NE 'O').GDE0030\n&GDESAVE SETB  0\n.GDE0030 ANOP\n&GDERENT SETB  0\n         AIF   ('&RENT' EQ 'NO').GDE0040\n         AIF   ('&RENT' NE 'YES').GDE0035\n&GDERENT SETB  1\n         AGO   .GDE0040\n.GDE0035 MNOTE 8,'INVALID RENT, MUST BE YES OR NO'\n.GDE0040 ANOP\n         AIF   ('&ARMODE' EQ 'NO').GDE0050\n         AIF   ('&ARMODE' NE 'YES').GDE0045\n&GDEMODE SETB  1\n         AGO   .GDE0050\n.GDE0045 MNOTE 8,'INVALID ARMODE, MUST BE YES OR NO'\n.GDE0050 ANOP\n.**********************************************************************\n.*  GENERATE CSECT ENTRY CODE AND ID LITERALS                         *\n.**********************************************************************\n&TAGNAME CSECT\n         B     48(15)\n         PUSH  PRINT\n         PRINT ON,GEN\n         DC    FL1'44'\n         DC    CL9'&TAGNAME'\n         DC    CL9'&SYSDATE'\n         DC    CL5'&SYSTIME'\n         DC    CL20'COPYRIGHT GDE, INC.'\n.**********************************************************************\n.*  GENERATE REGISTER ASSIGNMENTS                                     *\n.**********************************************************************\n         AIF   (&GDEREGS).GDE0060\n&GDEREGS SETB   1\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\nAR0      EQU   0\nAR1      EQU   1\nAR2      EQU   2\nAR3      EQU   3\nAR4      EQU   4\nAR5      EQU   5\nAR6      EQU   6\nAR7      EQU   7\nAR8      EQU   8\nAR9      EQU   9\nAR10     EQU   10\nAR11     EQU   11\nAR12     EQU   12\nAR13     EQU   13\nAR14     EQU   14\nAR15     EQU   15\n.GDE0060 ANOP\n         POP   PRINT\n.**********************************************************************\n.*  SAVE INCOMING REGISTERS                                           *\n.**********************************************************************\n         AIF   (&GDEMODE).GDE0400\n         STM   14,12,12(13)\n.**********************************************************************\n.*  GENERATE BASE REGISTER ASSIGNMENTS                                *\n.**********************************************************************\n.GDE0100 ANOP\n         AIF   ('&DBR1' NE '').GDE0110\n         AIF   ('&DBR0' EQ 'R15').GDE0101\n         LR    &DBR0,R15\n.GDE0101 ANOP\n         USING &TAGNAME&C&DBR0\n         AGO   .GDE0200\n.GDE0110 AIF   ('&DBR2' NE '').GDE0120\n         AIF   ('&DBR0' EQ 'R15').GDE0111\n         LR    &DBR0,R15\n.GDE0111 ANOP\n         LA    &DBR1,2048(&DBR0)\n         LA    &DBR1,2048(&DBR1)\n         USING &TAGNAME&C&DBR0&C&DBR1\n         AGO   .GDE0200\n.GDE0120 AIF   ('&DBR3' NE '').GDE0130\n         AIF   ('&DBR0' EQ 'R15').GDE0121\n         LR    &DBR0,R15\n.GDE0121 ANOP\n         LA    &DBR1,2048(&DBR0)\n         LA    &DBR1,2048(&DBR1)\n         LA    &DBR2,2048(&DBR1)\n         LA    &DBR2,2048(&DBR2)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2\n         AGO   .GDE0200\n.GDE0130 AIF   ('&DBR4' NE '').GDE0140\n         AIF   ('&DBR0' EQ 'R15').GDE0131\n         LR    &DBR0,R15\n.GDE0131 ANOP\n         LA    &DBR1,2048(&DBR0)\n         LA    &DBR1,2048(&DBR1)\n         LA    &DBR2,2048(&DBR1)\n         LA    &DBR2,2048(&DBR2)\n         LA    &DBR3,2048(&DBR2)\n         LA    &DBR3,2048(&DBR3)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3\n.GDE0140 AIF   ('&DBR5' NE '').GDE0150\n         AIF   ('&DBR0' EQ 'R15').GDE0141\n         LR    &DBR0,R15\n.GDE0141 ANOP\n         LA    &DBR1,2048(&DBR0)\n         LA    &DBR1,2048(&DBR1)\n         LA    &DBR2,2048(&DBR1)\n         LA    &DBR2,2048(&DBR2)\n         LA    &DBR3,2048(&DBR2)\n         LA    &DBR3,2048(&DBR3)\n         LA    &DBR4,2048(&DBR3)\n         LA    &DBR4,2048(&DBR4)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4\n         AGO   .GDE0200\n.GDE0150 AIF   ('&DBR6' NE '').GDE0160\n         AIF   ('&DBR0' EQ 'R15').GDE0151\n         LR    &DBR0,R15\n.GDE0151 ANOP\n         LA    &DBR1,2048(&DBR0)\n         LA    &DBR1,2048(&DBR1)\n         LA    &DBR2,2048(&DBR1)\n         LA    &DBR2,2048(&DBR2)\n         LA    &DBR3,2048(&DBR2)\n         LA    &DBR3,2048(&DBR3)\n         LA    &DBR4,2048(&DBR3)\n         LA    &DBR4,2048(&DBR4)\n         LA    &DBR5,2048(&DBR4)\n         LA    &DBR5,2048(&DBR5)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5\n         AGO   .GDE0200\n.GDE0160 ANOP\n         AIF   ('&DBR0' EQ 'R15').GDE0161\n         LR    &DBR0,R15\n.GDE0161 ANOP\n         LA    &DBR1,2048(&DBR0)\n         LA    &DBR1,2048(&DBR1)\n         LA    &DBR2,2048(&DBR1)\n         LA    &DBR2,2048(&DBR2)\n         LA    &DBR3,2048(&DBR2)\n         LA    &DBR3,2048(&DBR3)\n         LA    &DBR4,2048(&DBR3)\n         LA    &DBR4,2048(&DBR4)\n         LA    &DBR5,2048(&DBR4)\n         LA    &DBR5,2048(&DBR5)\n         LA    &DBR6,2048(&DBR5)\n         LA    &DBR6,2048(&DBR6)\n        USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5&C&DBR6\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *\n.**********************************************************************\n.GDE0200 ANOP\n         AIF   (&GDESAVE).GDE0210\n         AGO   .GDE0900\n.GDE0210 AIF   (&GDERENT).GDE0300\n         B     &GDESANM+72\n&GDESANM DC    3F'0',15F'-1'\n         LA    R1,&GDESANM\n         ST    R1,8(R13)\n         ST    R13,4(R1)\n         L     R1,24(R13)\n         L     R13,8(R13)\n         XC    0(4,R13),0(R13)\n         AGO   .GDE0900\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *\n.**********************************************************************\n.GDE0300 ANOP\n         STORAGE OBTAIN,LENGTH=72\n         ST    R1,8(R13)\n         ST    R13,4(R1)\n         LM    R0,R1,20(R13)\n         L     R13,8(R13)\n         XC    0(4,R13),0(R13)\n         AGO   .GDE0900\n.**********************************************************************\n.*  GENERATE BASE REGISTER ASSIGNMENTS                                *\n.**********************************************************************\n.GDE0400 ANOP\n         BAKR  14,0\n         SAC   512\n         SYSSTATE ASCENV=AR\n         AIF   ('&DBR1' NE '').GDE0410\n         AIF   ('&DBR0' EQ 'R15').GDE0401\n         LAE   &DBR0,0(R15,0)\n.GDE0401 ANOP\n         USING &TAGNAME&C&DBR0\n         AGO   .GDE0500\n.GDE0410 AIF   ('&DBR2' NE '').GDE0420\n         AIF   ('&DBR0' EQ 'R15').GDE0411\n         LAE   &DBR0,0(R15,0)\n.GDE0411 ANOP\n         LAE   &DBR1,2048(&DBR0)\n         LAE   &DBR1,2048(&DBR1)\n         USING &TAGNAME&C&DBR0&C&DBR1\n         AGO   .GDE0500\n.GDE0420 AIF   ('&DBR3' NE '').GDE0430\n         AIF   ('&DBR0' EQ 'R15').GDE0421\n         LAE   &DBR0,0(R15,0)\n.GDE0421 ANOP\n         LAE   &DBR1,2048(&DBR0)\n         LAE   &DBR1,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR2)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2\n         AGO   .GDE0500\n.GDE0430 AIF   ('&DBR4' NE '').GDE0440\n         AIF   ('&DBR0' EQ 'R15').GDE0431\n         LAE   &DBR0,0(R15,0)\n.GDE0431 ANOP\n         LAE   &DBR1,2048(&DBR0)\n         LAE   &DBR1,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR3)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3\n.GDE0440 AIF   ('&DBR5' NE '').GDE0450\n         AIF   ('&DBR0' EQ 'R15').GDE0441\n         LAE   &DBR0,0(R15,0)\n.GDE0441 ANOP\n         LAE   &DBR1,2048(&DBR0)\n         LAE   &DBR1,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR3)\n         LAE   &DBR4,2048(&DBR3)\n         LAE   &DBR4,2048(&DBR4)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4\n         AGO   .GDE0500\n.GDE0450 AIF   ('&DBR6' NE '').GDE0460\n         AIF   ('&DBR0' EQ 'R15').GDE0451\n         LAE   &DBR0,0(R15,0)\n.GDE0451 ANOP\n         LAE   &DBR1,2048(&DBR0)\n         LAE   &DBR1,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR3)\n         LAE   &DBR4,2048(&DBR3)\n         LAE   &DBR4,2048(&DBR4)\n         LAE   &DBR5,2048(&DBR4)\n         LAE   &DBR5,2048(&DBR5)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5\n         AGO   .GDE0500\n.GDE0460 ANOP\n         AIF   ('&DBR0' EQ 'R15').GDE0461\n         LAE   &DBR0,0(R15,0)\n.GDE0461 ANOP\n         LAE   &DBR1,2048(&DBR0)\n         LAE   &DBR1,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR3)\n         LAE   &DBR4,2048(&DBR3)\n         LAE   &DBR4,2048(&DBR4)\n         LAE   &DBR5,2048(&DBR4)\n         LAE   &DBR5,2048(&DBR5)\n         LAE   &DBR6,2048(&DBR5)\n         LAE   &DBR6,2048(&DBR6)\n        USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5&C&DBR6\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *\n.**********************************************************************\n.GDE0500 ANOP\n         AIF   (&GDESAVE).GDE0510\n         AGO   .GDE0900\n.GDE0510 AIF   (&GDERENT).GDE0600\n         B     &GDESANM+72\n&GDESANM DC    3F'0',15F'-1'\n         LAE   R13,&GDESANM\n         MVC   4(4,R13),=C'F1SA'\n         AGO   .GDE0900\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *\n.**********************************************************************\n.GDE0600 ANOP\n         STORAGE OBTAIN,LENGTH=72\n         LAE   R13,0(R1)\n         MVC   4(4,R13),=C'F1SA'\n.GDE0900 ANOP\n         MEND\n         MACRO\n&LABEL   GDETABLE &DATA,&TYPE=INSERT,                                  X\n               &OK=,                                                   X\n               &NOTOK=,                                                X\n               &NOCORE=,                                               X\n               &NAME=TABLEA,                                           X\n               &KEYLNG=,                                               X\n               &KEYOFF=,                                               X\n               &TABLNG=,                                               X\n               &TRACE=NO,                                              X\n               &PROGRAM=GDE000,                                        X\n               &PROGRAMID=CA,                                          X\n               &STATID=01,                                             X\n               &TRACEID=02,                                            X\n               &TRACEMAXCNT=50,                                        X\n               &PARMLIST=\n.**********************************************************************\n.*\n.*\n.*\n.*\n.**********************************************************************\n         GBLB  &GDETABLE\n         GBLC  &GDETABLEDSECTDEFINED(32)\n         GBLC  &GDETABLECSECTDEFINED(32)\n         GBLC  &GDETABLEPROGRAM(32)\n         GBLC  &GDETABLEPROGRAMID(32)\n         GBLC  &GDETABLESTATID(32)\n         GBLC  &GDETABLETRACEID(32)\n         GBLC  &GKEYLNG(256),&GKEYOFF(256)\n         GBLC  &LBL\n         GBLC  &ROUTCA\n         LCLA  &CNTA,&CNTB\n         LCLA  &CNT,&LCNT,&GETCNT\n         LCLB  &ERROR,&N1,&N2\n         LCLC  &ROUT01,&ROUT01ID\n         LCLC  &ROUT02,&ROUT02ID\n         LCLC  &PROGNAME\n         LCLC  &LABEL1,&LABEL2\n&CNTA    SETA  1\n.AA010   ANOP\n         AIF   ('&GDETABLECSECTDEFINED(&CNTA)' EQ '').AA020\n         AIF   ('&GDETABLECSECTDEFINED(&CNTA)' EQ '&NAME').AA030\n&CNTA    SETA  &CNTA+1\n         AIF   (&CNTA LE 32).AA010\n         MNOTE 8,'MORE THAN 32 TABLES DEFINED - LIMIT REACHED'\n         AGO   .Z0010\n.AA020   ANOP\n&GDETABLECSECTDEFINED(&CNTA) SETC '&NAME'\n&GDETABLEPROGRAM(&CNTA)     SETC  '&PROGRAM'\n&GDETABLEPROGRAMID(&CNTA)   SETC  '&PROGRAMID'\n&GDETABLESTATID(&CNTA)      SETC  '&STATID'\n&GDETABLETRACEID(&CNTA)     SETC  '&TRACEID'\n.AA030   ANOP\n&PROGNAME SETC  '&GDETABLEPROGRAM(&CNTA)'(1,6)\n&ROUTCA   SETC  '&PROGNAME'.'&GDETABLEPROGRAMID(&CNTA)'(1,2)\n&ROUT01   SETC  '&PROGNAME'.'&GDETABLESTATID(&CNTA)'(1,2)\n&ROUT01ID SETC  '&PROGNAME'.'.R'.'&GDETABLESTATID(&CNTA)'(1,2)\n&ROUT02   SETC  '&PROGNAME'.'&GDETABLETRACEID(&CNTA)'(1,2)\n&ROUT02ID SETC  '&PROGNAME'.'.R'.'&GDETABLETRACEID(&CNTA)'(1,2)\n&LBL     SETC  'GDETABLE_'.'&NAME'(1,6).'_'\n.**********************************************************************\n.*\n.* THIS MACRO IS USED TO GENERATE BINARY BALANCED TREES\n.* INTERFACE BY USING THE TYPE KEYWORK\n.*\n.* TYPE=INSERT      = INSERTS RECORD INTO THE TREE\n.*     RETURN CODES - 0 ALL OK\n.*                    1 RECORD FOUND\n.*                    4 INVALID PARMS\n.*                    5 GETMAIN ERROR\n.*\n.* TYPE=REPLACE     = USING THE KEY, REPLACE THE RECORD IN THE TABLE\n.*     RETURN CODES - 0 ALL OK\n.*                    2 KEY NOT FOUND\n.*                    4 INVALID PARMS\n.*\n.* TYPE=FIND        = FIND THE RECORD IN THE TABLE WITH A KEY\n.*     RETURN CODES - 0 ALL OK\n.*                    2 NOT FOUND\n.*                    4 PARM INVALID\n.*\n.* TYPE=FIRST       = RETURN THE FIRST NODE IN THE TREE\n.*     RETURN CODES - 0 ALL OK\n.*                    3 END OF TREE\n.*                    4 INVALID PARMS\n.*\n.* TYPE=NEXT        = USING THE CURRENT KEY, FIND THE NEXT LARGEST RECD\n.*     RETURN CODES - 0 ALL OK\n.*                    3 END OF TREE\n.*                    4 INVALID PARMS\n.*\n.* TYPE=DELETE      = DELETE THE CURRENT TABLE AND FREE STORAGE\n.*     RETURN CODES - 0 ALL OK\n.*                    4 INVALID PARMS\n.*\n.* TYPE=REPORT      = PRINT THE STATISTICS FROM THE FILE OPERATION\n.*     RETURN CODES - 0 ALL OK\n.*                    4 LOGIC ERROR\n.*\n.* TYPE=IOROUTINE BUILDS ALL THE SUBROUTINE CODE TO SUPPORT THE\n.*            REQUESTS\n.*\n.* TYPE=PARMLIST DECLARES STORAGE TO BE USED BY PARMLIST\n.*\n.* TYPE=DSECT DECLARES DSECT TO MAP THE STORAGE SET ASIDE BY\n.*            PARMLIST\n.*\n.* THE PARAMATER LIST MADE AVAILABLE TO THE PROGRAM CALLING THIS\n.*    ROUTINE IS DEFINED AS FOLLOWS\n.*\n.* PARAMETER LIST\n.*\n.*     GDETABLE_DSECT        DS 0C       TABLE PARMLIST\n.*     GDETABLE_COMMAND      DS  CL1     CURRENT COMMAND\n.*        1 - TYPE=INSERT\n.*        2 - TYPE=REPLACE\n.*        3 - TYPE=FIND\n.*        4 - TYPE=FIRST\n.*        5 - TYPE=NEXT\n.*        6 - TYPE=DELETE\n.*        7 - TYPE=REPORT\n.*     GDETABLE_RETCODE      DS  CL1     RETURN CODE\n.*                           DS  CL2     RESERVED\n.*     GDETABLE_USERDATAAREA DS CL4   PARAMETER CONTAINING PGM STG\n.*\n.**********************************************************************\n.*\n.*     HERE ARE THE MACRO EXPANSIONS FOR CALLING THE I/O MODULE\n.*\n.*     TYPE=PARMLIST\n.*\n.A0010   AIF   ('&TYPE' NE 'PARMLIST').B0010\n         AIF   ('&PARMLIST' EQ '').A0020\n&PARMLIST DS  0D       PROGRAMS WORKAREA\n         DS    CL(&LBL.DSECT_LENGTH)\n         AGO   .Z0010\n.A0020   ANOP\n&LBL.DATAAREA DS  0D    PROGRAMS WORKAREA\n         DS    CL(&LBL.DSECT_LENGTH)\n         ORG   *-&LBL.DSECT_LENGTH+&LBL.TRACEMAXCNT-&LBL.DSECT\n         DC    PL4'&TRACEMAXCNT'\n         ORG\n         AGO   .Z0010\n.*\n.*     TYPE=DSECT\n.*\n.B0010   AIF   ('&TYPE' NE 'DSECT').C0010\n&CNTA    SETA  1\n.B0020   ANOP\n         AIF   ('&GDETABLEDSECTDEFINED(&CNTA)' EQ '').B0030\n         AIF   ('&GDETABLEDSECTDEFINED(&CNTA)' EQ '&NAME').Z0010\n&CNTA    SETA  &CNTA+1\n         AIF   (&CNTA LE 32).B0020\n         MNOTE 8,'MORE THAN 32 TABLES DEFINED - LIMIT REACHED'\n         AGO   .B0020\n.B0030   ANOP\n&GDETABLEDSECTDEFINED(&CNTA) SETC '&NAME'\n&LBL.DSECT          DSECT        CSI PARMLIST DSECT\n&LBL.COMMAND        DS   CL1     CURRENT COMMAND\n&LBL.RETCODE        DS   CL1     RETURN CODE\n&LBL.TRACE          DS   CL1     TRACE SWITCH\n                    DS   XL1     RESERVED\n&LBL.TRACEMAXCNT    DS   CL4     MAXIMUM TRACE COUNT\n&LBL.USERDATAAREA   DS   CL4     ADDRESS OF TABLE RECORD\n&LBL.DSECT_LENGTH   EQU  *-&LBL.DSECT\n         AGO   .Z0010\n.*\n.*     TYPE=INSERT\n.*\n.C0010   AIF   ('&TYPE' NE 'INSERT').D0010\n         AIF   ('&PARMLIST' EQ '').C0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .C0030\n.C0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.C0030   ANOP\n         USING &LBL.DSECT,R1\n         MVI   &LBL.COMMAND,C'1'\n         MVI   &LBL.RETCODE,C'0'\n         AIF   ('&TRACE' EQ 'YES').C0040\n         AIF   ('&TRACE' EQ 'ERROR').C0041\n         AIF   ('&TRACE' EQ 'NO').C0042\n         MNOTE *,'TRACE MUST BE YES, ERROR, OR NO. NO ASSUMED'\n         AGO   .C0042\n.C0040   ANOP\n         MVI   &LBL.TRACE,C'1'\n         AGO   .C0043\n.C0041   ANOP\n         MVI   &LBL.TRACE,C'2'\n         AGO   .C0043\n.C0042   ANOP\n         MVI   &LBL.TRACE,C'0'\n         AGO   .C0043\n.C0043   ANOP\n         AIF   ('&DATA'(1,1) EQ '(').C0031\n         LA    R14,&DATA\n         ST    R14,&LBL.USERDATAAREA\n         AGO   .C0032\n.C0031   ST    &DATA,&LBL.USERDATAAREA\n         AGO   .C0032\n.C0032   ANOP\n         CALL  &ROUTCA,((1)),VL\n         AIF   ('&PARMLIST' EQ '').C0033\n         LA    R1,&PARMLIST\n         AGO   .C0034\n.C0033   ANOP\n         LA    R1,&LBL.DATAAREA\n.C0034   ANOP\n         AIF   ('&OK' EQ '').C0035\n         CLI   &LBL.RETCODE,C'0'\n         BE    &OK\n.C0035   AIF   ('&NOTOK' EQ '').C0036\n         CLI   &LBL.RETCODE,C'1'\n         BE    &NOTOK\n.C0036   AIF   ('&NOCORE' EQ '').C0037\n         CLI   &LBL.RETCODE,C'5'\n         BE    &NOCORE\n.C0037   ANOP\n         DROP  R1\n         AGO   .Z0010\n.*\n.*     TYPE=REPLACE\n.*\n.D0010   AIF   ('&TYPE' NE 'REPLACE').E0010\n         AIF   ('&PARMLIST' EQ '').D0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .D0030\n.D0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.D0030   ANOP\n         USING &LBL.DSECT,R1\n         MVI   &LBL.COMMAND,C'2'\n         MVI   &LBL.RETCODE,C'0'\n         AIF   ('&TRACE' EQ 'YES').D0040\n         AIF   ('&TRACE' EQ 'ERROR').D0041\n         AIF   ('&TRACE' EQ 'NO').D0042\n         MNOTE *,'TRACE MUST BE YES, ERROR, OR NO. NO ASSUMED'\n         AGO   .D0042\n.D0040   ANOP\n         MVI   &LBL.TRACE,C'1'\n         AGO   .D0043\n.D0041   ANOP\n         MVI   &LBL.TRACE,C'2'\n         AGO   .D0043\n.D0042   ANOP\n         MVI   &LBL.TRACE,C'0'\n         AGO   .D0043\n.D0043   ANOP\n         AIF   ('&DATA'(1,1) EQ '(').D0031\n         LA    R14,&DATA\n         ST    R14,&LBL.USERDATAAREA\n         AGO   .D0032\n.D0031   ST    &DATA,&LBL.USERDATAAREA\n         AGO   .D0032\n.D0032   ANOP\n         CALL  &ROUTCA,((1)),VL\n         AIF   ('&PARMLIST' EQ '').D0033\n         LA    R1,&PARMLIST\n         AGO   .D0034\n.D0033   ANOP\n         LA    R1,&LBL.DATAAREA\n.D0034   ANOP\n         AIF   ('&OK' EQ '').D0035\n         CLI   &LBL.RETCODE,C'0'\n         BE    &OK\n.D0035   AIF   ('&NOTOK' EQ '').D0036\n         CLI   &LBL.RETCODE,C'2'\n         BE    &NOTOK\n.D0036   ANOP\n         DROP  R1\n         AGO   .Z0010\n.*\n.*     TYPE=FIND\n.*\n.E0010   AIF   ('&TYPE' NE 'FIND').F0010\n         AIF   ('&PARMLIST' EQ '').E0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .E0030\n.E0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.E0030   ANOP\n         USING &LBL.DSECT,R1\n         MVI   &LBL.COMMAND,C'3'\n         MVI   &LBL.RETCODE,C'0'\n         AIF   ('&TRACE' EQ 'YES').E0040\n         AIF   ('&TRACE' EQ 'ERROR').E0041\n         AIF   ('&TRACE' EQ 'NO').E0042\n         MNOTE *,'TRACE MUST BE YES, ERROR, OR NO. NO ASSUMED'\n         AGO   .E0042\n.E0040   ANOP\n         MVI   &LBL.TRACE,C'1'\n         AGO   .E0043\n.E0041   ANOP\n         MVI   &LBL.TRACE,C'2'\n         AGO   .E0043\n.E0042   ANOP\n         MVI   &LBL.TRACE,C'0'\n         AGO   .E0043\n.E0043   ANOP\n         AIF   ('&DATA'(1,1) EQ '(').E0031\n         LA    R14,&DATA\n         ST    R14,&LBL.USERDATAAREA\n         AGO   .E0032\n.E0031   ST    &DATA,&LBL.USERDATAAREA\n         AGO   .E0032\n.E0032   ANOP\n         CALL  &ROUTCA,((1)),VL\n         AIF   ('&PARMLIST' EQ '').E0033\n         LA    R1,&PARMLIST\n         AGO   .E0034\n.E0033   ANOP\n         LA    R1,&LBL.DATAAREA\n.E0034   ANOP\n         AIF   ('&OK' EQ '').E0035\n         CLI   &LBL.RETCODE,C'0'\n         BE    &OK\n.E0035   AIF   ('&NOTOK' EQ '').E0036\n         CLI   &LBL.RETCODE,C'2'\n         BE    &NOTOK\n.E0036   ANOP\n         DROP  R1\n         AGO   .Z0010\n.*\n.*     TYPE=FIRST\n.*\n.F0010   AIF   ('&TYPE' NE 'FIRST').G0010\n         AIF   ('&PARMLIST' EQ '').F0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .F0030\n.F0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.F0030   ANOP\n         USING &LBL.DSECT,R1\n         MVI   &LBL.COMMAND,C'4'\n         MVI   &LBL.RETCODE,C'0'\n         AIF   ('&TRACE' EQ 'YES').F0040\n         AIF   ('&TRACE' EQ 'ERROR').F0041\n         AIF   ('&TRACE' EQ 'NO').F0042\n         MNOTE *,'TRACE MUST BE YES, ERROR, OR NO. NO ASSUMED'\n         AGO   .F0042\n.F0040   ANOP\n         MVI   &LBL.TRACE,C'1'\n         AGO   .F0043\n.F0041   ANOP\n         MVI   &LBL.TRACE,C'2'\n         AGO   .F0043\n.F0042   ANOP\n         MVI   &LBL.TRACE,C'0'\n         AGO   .F0043\n.F0043   ANOP\n         AIF   ('&DATA'(1,1) EQ '(').F0031\n         LA    R14,&DATA\n         ST    R14,&LBL.USERDATAAREA\n         AGO   .F0032\n.F0031   ST    &DATA,&LBL.USERDATAAREA\n         AGO   .F0032\n.F0032   ANOP\n         CALL  &ROUTCA,((1)),VL\n         AIF   ('&PARMLIST' EQ '').F0033\n         LA    R1,&PARMLIST\n         AGO   .F0034\n.F0033   ANOP\n         LA    R1,&LBL.DATAAREA\n.F0034   ANOP\n         AIF   ('&OK' EQ '').F0035\n         CLI   &LBL.RETCODE,C'0'\n         BE    &OK\n.F0035   AIF   ('&NOTOK' EQ '').F0036\n         CLI   &LBL.RETCODE,C'3'\n         BE    &NOTOK\n.F0036   ANOP\n         DROP  R1\n         AGO   .Z0010\n.*\n.*     TYPE=NEXT\n.*\n.G0010   AIF   ('&TYPE' NE 'NEXT').H0010\n         AIF   ('&PARMLIST' EQ '').G0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .G0030\n.G0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.G0030   ANOP\n         USING &LBL.DSECT,R1\n         MVI   &LBL.COMMAND,C'5'\n         MVI   &LBL.RETCODE,C'0'\n         AIF   ('&TRACE' EQ 'YES').G0040\n         AIF   ('&TRACE' EQ 'ERROR').G0041\n         AIF   ('&TRACE' EQ 'NO').G0042\n         MNOTE *,'TRACE MUST BE YES, ERROR, OR NO. NO ASSUMED'\n         AGO   .G0042\n.G0040   ANOP\n         MVI   &LBL.TRACE,C'1'\n         AGO   .G0043\n.G0041   ANOP\n         MVI   &LBL.TRACE,C'2'\n         AGO   .G0043\n.G0042   ANOP\n         MVI   &LBL.TRACE,C'0'\n         AGO   .G0043\n.G0043   ANOP\n         AIF   ('&DATA'(1,1) EQ '(').G0031\n         LA    R14,&DATA\n         ST    R14,&LBL.USERDATAAREA\n         AGO   .G0032\n.G0031   ST    &DATA,&LBL.USERDATAAREA\n         AGO   .G0032\n.G0032   ANOP\n         CALL  &ROUTCA,((1)),VL\n         AIF   ('&PARMLIST' EQ '').G0033\n         LA    R1,&PARMLIST\n         AGO   .G0034\n.G0033   ANOP\n         LA    R1,&LBL.DATAAREA\n.G0034   ANOP\n         AIF   ('&OK' EQ '').G0035\n         CLI   &LBL.RETCODE,C'0'\n         BE    &OK\n.G0035   AIF   ('&NOTOK' EQ '').G0036\n         CLI   &LBL.RETCODE,C'3'\n         BE    &NOTOK\n.G0036   ANOP\n         DROP  R1\n         AGO   .Z0010\n.*\n.*     TYPE=DELETE\n.*\n.H0010   AIF   ('&TYPE' NE 'DELETE').I0010\n         AIF   ('&PARMLIST' EQ '').H0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .H0030\n.H0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.H0030   ANOP\n         USING &LBL.DSECT,R1\n         MVI   &LBL.COMMAND,C'6'\n         MVI   &LBL.RETCODE,C'0'\n         AIF   ('&TRACE' EQ 'YES').H0040\n         AIF   ('&TRACE' EQ 'ERROR').H0041\n         AIF   ('&TRACE' EQ 'NO').H0042\n         MNOTE *,'TRACE MUST BE YES, ERROR, OR NO. NO ASSUMED'\n         AGO   .H0042\n.H0040   ANOP\n         MVI   &LBL.TRACE,C'1'\n         AGO   .H0043\n.H0041   ANOP\n         MVI   &LBL.TRACE,C'2'\n         AGO   .H0043\n.H0042   ANOP\n         MVI   &LBL.TRACE,C'0'\n         AGO   .H0043\n.H0043   ANOP\n         XC    &LBL.USERDATAAREA,&LBL.USERDATAAREA\n         CALL  &ROUTCA,((1)),VL\n         AIF   ('&PARMLIST' EQ '').H0033\n         LA    R1,&PARMLIST\n         AGO   .H0034\n.H0033   ANOP\n         LA    R1,&LBL.DATAAREA\n.H0034   ANOP\n         AIF   ('&OK' EQ '').H0035\n         CLI   &LBL.RETCODE,C'0'\n         BE    &OK\n.H0035   AIF   ('&NOTOK' EQ '').H0036\n         CLI   &LBL.RETCODE,C'0'\n         BNE   &NOTOK\n.H0036   ANOP\n         DROP  R1\n         AGO   .Z0010\n.*\n.*     TYPE=REPORT\n.*\n.I0010   AIF   ('&TYPE' NE 'REPORT').J0010\n         AIF   ('&PARMLIST' EQ '').I0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .I0030\n.I0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.I0030   ANOP\n         USING &LBL.DSECT,R1\n         MVI   &LBL.COMMAND,C'7'\n         MVI   &LBL.RETCODE,C'0'\n         MVI   &LBL.TRACE,C'0'\n         XC    &LBL.USERDATAAREA,&LBL.USERDATAAREA\n         CALL  &ROUTCA,((1)),VL\n         AIF   ('&PARMLIST' EQ '').I0033\n         LA    R1,&PARMLIST\n         AGO   .I0034\n.I0033   ANOP\n         LA    R1,&LBL.DATAAREA\n.I0034   ANOP\n         AIF   ('&OK' EQ '').I0035\n         CLI   &LBL.RETCODE,C'0'\n         BE    &OK\n.I0035   AIF   ('&NOTOK' EQ '').I0036\n         CLI   &LBL.RETCODE,C'0'\n         BNE   &NOTOK\n.I0036   ANOP\n         DROP  R1\n         AGO   .Z0010\n.*\n.*     HERE ARE THE MACRO EXPANSIONS FOR CALLING THE I/O MODULE\n.*\n.**********************************************************************\n.*\n.*     HERE ARE THE MACRO EXPANSIONS FOR SUPPORT ROUTINES\n.*\n.*     TYPE=IOROUTINE\n.*\n.J0010   AIF   ('&TYPE' NE 'IOROUTINE').Z0020\n.**********************************************************************\n.*\n.* EDIT OF PARMS\n.*\n&GETCNT  SETA  ((4096-8)/(&TABLNG+9))\n         AIF   (&TABLNG NE 0).J0020\n&ERROR   SETB  1\n         MNOTE *,'LENGTH OF TABLE ELEMENT MUST BE SPECIFIED'\n.J0020   ANOP\n&CNT     SETA  1                   SET LOOP START COUNT\n.J0025   ANOP\n         AIF   (&N1 OR &N2).J0045\n         AIF   ('&KEYLNG(&CNT)' NE '').J0030\n&N1      SETB  1\n.J0030   AIF   ('&KEYOFF(&CNT)' NE '').J0040\n&N2      SETB  1\n.J0040   ANOP\n&CNT     SETA  &CNT+1\n         AGO   .J0025\n.J0045   ANOP\n         AIF   (&N1 AND &N2).J0050\n         MNOTE *,'NUMBER OF KEYS MUST BE THE SAME IN ALL ARRAYS'\n&ERROR   SETB  1\n.J0050   ANOP\n         AIF   ('&KEYLNG(1)' NE '').J0060\n         MNOTE *,'AT LEAST ONE KEY MUST BE SPECIFIEC'\n&ERROR   SETB  1\n.J0060   AIF   (NOT &ERROR).J0070\n         MNOTE 8,'ERRORS FOUND-GDE TABLE EXPANSION CANCELED'\n         MEXIT\n.*\n.* END OF EDIT OF PARMS\n.*\n.**********************************************************************\n.*\n.* SET UP GLOBAL PARMS\n.*\n.J0070   ANOP\n&CNT     SETA  1\n.J0080   ANOP\n         AIF   ('&KEYLNG(&CNT)' EQ '').J0090\n&GKEYLNG(&CNT) SETC '&KEYLNG(&CNT)'\n&GKEYOFF(&CNT) SETC '&KEYOFF(&CNT)'\n&CNT     SETA  &CNT+1\n         AGO   .J0080\n.J0090   ANOP\n.*\n.* END OF SET UP GLOBAL PARMS\n.*\n.**********************************************************************\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n*                                                                     *\n* GDETABLE DOES TABLE WORK FOR THE USER                               *\n*                                                                     *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         GDETABLE TYPE=DSECT,NAME=&NAME\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&ROUTCA  GDESTART R12\n         L     R10,0(1)\n         USING &LBL.DSECT,R10\n         LA    R2,&LBL.COMMAND\n         LA    R3,&LBL.RETCODE\n         L     R4,&LBL.USERDATAAREA\n         LA    R11,&LBL.GDEDSECT\n         USING &LBL.GDEDSECT,R11\n         CLI   &LBL.GDEINITSTATUS,C'C'\n         BE    &LBL.MAIN0000\n         GDEGOSUB &LBL.GDE00000\n&LBL.MAIN0000 CLI &LBL.TRACE,C'1'\n         BNE   &LBL.MAIN0009\n         GDEGOSUB &LBL.GDE08000,&LBL.GDEMAINBEFORE\n&LBL.MAIN0009 CLI &LBL.COMMAND,C'1'\n         BNE   &LBL.MAIN0010\n         GDEGOSUB &LBL.GDE01000\n         B     &LBL.MAIN0080\n&LBL.MAIN0010 CLI &LBL.COMMAND,C'2'\n         BNE   &LBL.MAIN0020\n         GDEGOSUB &LBL.GDE02000\n         B     &LBL.MAIN0080\n&LBL.MAIN0020 CLI &LBL.COMMAND,C'3'\n         BNE   &LBL.MAIN0030\n         GDEGOSUB &LBL.GDE03000\n         B     &LBL.MAIN0080\n&LBL.MAIN0030 CLI &LBL.COMMAND,C'4'\n         BNE   &LBL.MAIN0040\n         GDEGOSUB &LBL.GDE04000\n         B     &LBL.MAIN0080\n&LBL.MAIN0040 CLI &LBL.COMMAND,C'5'\n         BNE   &LBL.MAIN0050\n         GDEGOSUB &LBL.GDE05000\n         B     &LBL.MAIN0080\n&LBL.MAIN0050 CLI &LBL.COMMAND,C'6'\n         BNE   &LBL.MAIN0060\n         GDEGOSUB &LBL.GDE06000\n         B     &LBL.MAIN0080\n&LBL.MAIN0060 CLI &LBL.COMMAND,C'7'\n         BNE   &LBL.MAIN0070\n         GDEGOSUB &LBL.GDE07000\n         B     &LBL.MAIN0080\n&LBL.MAIN0070 MVI &LBL.RETCODE,C'4'\n         B     &LBL.MAIN0080\n&LBL.MAIN0080 CLI &LBL.TRACE,C'1'\n         BL    &LBL.MAIN0900\n         BE    &LBL.MAIN0090\n         CLI  &LBL.RETCODE,C'0'\n         BE    &LBL.MAIN0900\n&LBL.MAIN0090  EQU *\n         GDEGOSUB &LBL.GDE08000,&LBL.GDEMAINAFTER\n         B     &LBL.MAIN0900\n&LBL.MAIN0900 GDEEXIT\n&LBL.GDEDSECT         DS     0D\n&LBL.GDETRACESTART    DS     0D\n&LBL.GDEROOT          DC     F'0'       ROOT NODE ADDRESS\n&LBL.GDESIZE          DC     F'&TABLNG' NODE SIZE WITHOUT POINTERS\n&LBL.GDELINK          DC     F'0'       POINTERS TO TABLES GETMAINS\n&LBL.GDEUSED          DC     F'0'       AMOUNT OF LAST GETMAIN USED\n&LBL.GDEPNTR          DC     F'0'       POINTER INTO GETMAIN OF AV NODE\n&LBL.PTRA             DS    F\n&LBL.PTRB             DS    F\n&LBL.PTRC             DS    F\n&LBL.PTRF             DS    F\n&LBL.PTRP             DS    F\n&LBL.PTRQ             DS    F\n&LBL.PTRT             DS    F\n&LBL.PTRX             DS    F\n&LBL.PTRY             DS    F\n&LBL.PTRNEW           DS    F\n&LBL.CURMAX           DC    H'&GETCNT'\n&LBL.NULL             DC    F'0'\n&LBL.TEST             DC    X'FF'\n&LBL.P1               DC    X'01'\n&LBL.M1               DC    X'FF'\n&LBL.D                DS    XL1\n&LBL.GDEINSERTCNT     DS    PL6 COUNT OF INSERTS\n&LBL.GDEINSERTCNTERR  DS    PL6 COUNT OF INSERTS\n&LBL.GDENOCORECNTERR  DS    PL6 COUNT OF INSERTS\n&LBL.GDEREPLACECNT    DS    PL6 COUNT OF REPLACES\n&LBL.GDEREPLACECNTERR DS    PL6  COUNT OF REPLACES\n&LBL.GDEFINDCNT       DS    PL6 COUNT OF FINDS\n&LBL.GDEFINDCNTERR    DS    PL6 COUNT OF FINDS\n&LBL.GDEFIRSTCNT      DS    PL6 COUNT OF FIRSTS\n&LBL.GDEFIRSTCNTERR   DS    PL6 COUNT OF FIRSTS\n&LBL.GDENEXTCNT       DS    PL6 COUNT OF NEXTS\n&LBL.GDENEXTCNTERR    DS    PL6 COUNT OF NEXTS\n&LBL.GDEDELETECNT     DS    PL6 COUNT OF DELETES\n&LBL.GDEDELETECNTERR  DS    PL6 COUNT OF DELETES\n&LBL.GDETRACEEND      DS     0D\n&LBL.GDEINITSTATUS    DC    C'I'    I=INIT, O=OPEN, C=CLOSED\n&LBL.GDEMAINBEFORE    DC    C'B'\n&LBL.GDEMAINAFTER     DC    C'A'\n&LBL.GDECAP1ROUT      DC    F'-1'\n&LBL.GDECAP1          DS   0F\n&LBL.GDECAP1FUNC      DC    CL1' '\n&LBL.GDECAP1HEX       DC    CL1' '\n&LBL.GDECAP1DDN       DC    CL8' '\n&LBL.GDECAP1LEN       DC    CL2' '\n&LBL.GDECAP1LNBK      DC    CL2' '\n&LBL.GDECAP1ID        DC    CL10' '\n&LBL.GDECAP1LPP       DC    CL2' '\n&LBL.GDECAP1NP        DC    CL1' '\n&LBL.GDECAP1DNP       DC    CL1' '\n&LBL.GDECAP1RNP       DC    CL1' '\n&LBL.GDECAP1RTCD      DC    CL2' '\n&LBL.GDECAP2          DC    CL133' '\n&LBL.GDECAH1          DC    CL133' '\n&LBL.GDECBP1ROUT      DC    F'-1'\n&LBL.GDECBP1          DS   0F\n&LBL.GDECBP1FUNC      DC    CL1' '\n&LBL.GDECBP1HEX       DC    CL1' '\n&LBL.GDECBP1DDN       DC    CL8' '\n&LBL.GDECBP1LEN       DC    CL2' '\n&LBL.GDECBP1LNBK      DC    CL2' '\n&LBL.GDECBP1ID        DC    CL10' '\n&LBL.GDECBP1LPP       DC    CL2' '\n&LBL.GDECBP1NP        DC    CL1' '\n&LBL.GDECBP1DNP       DC    CL1' '\n&LBL.GDECBP1RNP       DC    CL1' '\n&LBL.GDECBP1RTCD      DC    CL2' '\n&LBL.GDECBP2          DC    CL133' '\n&LBL.GDECBH1          DC    CL133' '\n         LTORG\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n* GDE00000 INITIALIZE THE PARMS                                       *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE00000 GDESUBST\n         CLI   &LBL.GDEINITSTATUS,C'I'     STATUS INIT?\n         BNE   &LBL.GDE00900               YES: BRANCH\n&LBL.GDE00010  EQU  *\n         MVI   &LBL.GDEINITSTATUS,C'O'     OPEN FOR BUSINESS\n         ZAP   &LBL.GDEINSERTCNT,=P'0' COUNT OF INSERTS\n         ZAP   &LBL.GDEINSERTCNTERR,=P'0' COUNT OF INSERTS\n         ZAP   &LBL.GDENOCORECNTERR,=P'0' COUNT OF INSERTS\n         ZAP   &LBL.GDEREPLACECNT,=P'0' COUNT OF REPLACES\n         ZAP   &LBL.GDEREPLACECNTERR,=P'0' COUNT OF REPLACES\n         ZAP   &LBL.GDEFINDCNT,=P'0' COUNT OF FINDS\n         ZAP   &LBL.GDEFINDCNTERR,=P'0' COUNT OF FINDS\n         ZAP   &LBL.GDEFIRSTCNT,=P'0' COUNT OF FIRSTS\n         ZAP   &LBL.GDEFIRSTCNTERR,=P'0' COUNT OF FIRSTS\n         ZAP   &LBL.GDENEXTCNT,=P'0' COUNT OF NEXTS\n         ZAP   &LBL.GDENEXTCNTERR,=P'0' COUNT OF NEXTS\n         ZAP   &LBL.GDEDELETECNT,=P'0' COUNT OF DELETES\n         ZAP   &LBL.GDEDELETECNTERR,=P'0' COUNT OF DELETES\n         LOAD  EP=GDE001CA\n         ST    R0,&LBL.GDECAP1ROUT\n         B     &LBL.GDE00900\n&LBL.GDE00900 XR R15,R15\n         B     &LBL.GDE00920\n&LBL.GDE00910 LA R15,4\n         B     &LBL.GDE00920\n&LBL.GDE00920 GDESUBEN\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n* GDE01000 INSERT                                                     *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE01000 GDESUBST\n         CLC   &LBL.GDEROOT,&LBL.NULL\n         BNE   &LBL.GDE01200\n&LBL.GDE01100 EQU *\n         MVC   &LBL.GDELINK,&LBL.NULL\n         MVC   &LBL.GDEUSED,&LBL.NULL\n         GDEGOSUB &LBL.GDE0A000        GET NEW NODE\n         BNZ   &LBL.GDE01820\n         MVC   &LBL.PTRT,&LBL.PTRNEW   GET NEW NODE\n         XR    R3,R3\n         MVC   &LBL.GDEROOT,&LBL.PTRT\n         GDETIDNT &LBL.PTRT\n         L     R6,&LBL.USERDATAAREA    MOVE\n         L     R7,&LBL.GDESIZE\n         LR    R3,R7                     DATA TO NODE\n         MVCL  R2,R6\n         GDETBLFT &LBL.PTRT            SET\n         MVC   0(1,R2),&LBL.NULL         BALANCE FACTOR TO 0\n         GDETLCHD &LBL.PTRT            SET\n         MVC   0(4,R2),&LBL.NULL         LEFT CHLD TO &LBL.NULL\n         GDETRCHD &LBL.PTRT            SET\n         MVC   0(4,R2),&LBL.NULL         RIGHT CHLD TO &LBL.NULL\n         B     &LBL.GDE01900               AND &LBL.GDE01900\n         SPACE\n&LBL.GDE01200 MVC &LBL.PTRT,&LBL.GDEROOT SET\n         MVC   &LBL.PTRF,&LBL.NULL       UP FOR SEARCH OF TABLE\n         MVC   &LBL.PTRA,&LBL.PTRT\n         MVC   &LBL.PTRP,&LBL.PTRT\n         MVC   &LBL.PTRQ,&LBL.NULL\n&LBL.GDE01210 CLC &LBL.PTRP,&LBL.NULL  END OF TABLE?\n         BE    &LBL.GDE01300               YES-BRANCH\n         GDETBLFT &LBL.PTRP            MAKE\n         BZ    &LBL.GDE01220           DO TEST\n         MVC   &LBL.PTRA,&LBL.PTRP\n         MVC   &LBL.PTRF,&LBL.PTRQ\n&LBL.GDE01220 GDETCOMP &LBL.PTRP,&LBL.GDE01250,&LBL.GDE01240,          X\n               &LBL.GDE01810,&LBL\n&LBL.GDE01240 MVC &LBL.PTRQ,&LBL.PTRP MOVE RIGHT BRANCH\n         GDETRCHD &LBL.PTRP\n         STCM  R3,15,&LBL.PTRP\n         B     &LBL.GDE01210\n&LBL.GDE01250 MVC &LBL.PTRQ,&LBL.PTRP MOVE LEFT BRANCH\n         GDETLCHD &LBL.PTRP\n         STCM  R3,15,&LBL.PTRP\n         B     &LBL.GDE01210\n**********************************************************************\n* INSERT THE NODE INTO THE TABLE CAUSE NOT FOUND AND TEST ROTATION.   *\n**********************************************************************\n&LBL.GDE01300 EQU *\n         GDEGOSUB &LBL.GDE0A000        GET NEW NODE\n         BNZ   &LBL.GDE01820\n         MVC   &LBL.PTRY,&LBL.PTRNEW\n         XR    R3,R3\n         GDETIDNT &LBL.PTRY\n         L     R3,&LBL.GDESIZE\n         LR    R7,R3\n         L     R6,&LBL.USERDATAAREA    MOVE\n         MVCL  R2,R6\n         GDETLCHD &LBL.PTRY\n         MVC   0(4,R2),&LBL.NULL\n         GDETRCHD &LBL.PTRY\n         MVC   0(4,R2),&LBL.NULL\n         GDETBLFT &LBL.PTRY\n         MVC   0(1,R2),&LBL.NULL\n   GDETCOMP &LBL.PTRQ,&LBL.GDE01320,&LBL.GDE01310,&LBL.GDE01310,&LBL\n&LBL.GDE01310 GDETRCHD &LBL.PTRQ\n         MVC   0(4,R2),&LBL.PTRY\n         B     &LBL.GDE01330\n&LBL.GDE01320 GDETLCHD &LBL.PTRQ\n         MVC   0(4,R2),&LBL.PTRY\n&LBL.GDE01330 EQU *\n   GDETCOMP &LBL.PTRA,&LBL.GDE01350,&LBL.GDE01340,&LBL.GDE01340,&LBL\n&LBL.GDE01340 GDETRCHD &LBL.PTRA\n         STCM  R3,15,&LBL.PTRP\n         MVC   &LBL.PTRB,&LBL.PTRP\n         MVC   &LBL.D,&LBL.M1\n         B     &LBL.GDE01360\n&LBL.GDE01350 GDETLCHD &LBL.PTRA\n         STCM  R3,15,&LBL.PTRP\n         MVC   &LBL.PTRB,&LBL.PTRP\n         MVC   &LBL.D,&LBL.P1\n&LBL.GDE01360 CLC &LBL.PTRP,&LBL.PTRY END OF BALANCE ADJUST?\n         BE    &LBL.GDE01400             YES-BRANCH\n   GDETCOMP &LBL.PTRP,&LBL.GDE01380,&LBL.GDE01370,&LBL.GDE01370,&LBL\n&LBL.GDE01370 GDETBLFT &LBL.PTRP\n         MVC   0(1,R2),&LBL.M1\n         GDETRCHD &LBL.PTRP\n         STCM  R3,15,&LBL.PTRP\n         B     &LBL.GDE01360\n&LBL.GDE01380 GDETBLFT &LBL.PTRP\n         MVC   0(1,R2),&LBL.P1\n         GDETLCHD &LBL.PTRP\n         STCM  R3,15,&LBL.PTRP\n         B     &LBL.GDE01360\n         SPACE\n**********************************************************************\n* BALANCES THE TABLE AND DOES ROTATION IF NEED BE.                    *\n**********************************************************************\n&LBL.GDE01400 EQU *\n         GDETBLFT &LBL.PTRA\n         BNZ   &LBL.GDE01410\n         MVC   0(1,R2),&LBL.D\n         B     &LBL.GDE01900\n&LBL.GDE01410 XR R5,R5\n         ICM   R5,1,&LBL.D\n         AR    R5,R3\n         STCM  R5,1,&LBL.TEST\n         ICM   R5,1,&LBL.TEST\n         BNZ   &LBL.GDE01420\n         MVC   0(1,R2),&LBL.NULL\n         B     &LBL.GDE01900\n&LBL.GDE01420 CLC &LBL.D,&LBL.P1\n         BNE   &LBL.GDE01440\n         GDETBLFT &LBL.PTRB\n         BNH   &LBL.GDE01430\n         GDETLCHD &LBL.PTRA\n         LR    R5,R2\n         GDETRCHD &LBL.PTRB\n         STCM  R3,15,0(R5)\n         MVC   0(4,R2),&LBL.PTRA\n         GDETBLFT &LBL.PTRA\n         MVC   0(1,R2),&LBL.NULL\n         GDETBLFT &LBL.PTRB\n         MVC   0(1,R2),&LBL.NULL\n         B     &LBL.GDE01500\n&LBL.GDE01430 GDETRCHD &LBL.PTRB\n         STCM  R3,15,&LBL.PTRC\n         LTR   R3,R3\n         BNZ   &LBL.GDE01431\n         GDETRCHD &LBL.PTRB\n         MVC   0(4,R2),&LBL.NULL\n         GDETLCHD &LBL.PTRA\n         MVC   0(4,R2),&LBL.NULL\n         B     &LBL.GDE01432\n&LBL.GDE01431 GDETLCHD &LBL.PTRC\n         LR    R5,R3\n         GDETRCHD &LBL.PTRB\n         STCM  R5,15,0(R2)\n         GDETRCHD &LBL.PTRC\n         LR    R5,R3\n         GDETLCHD &LBL.PTRA\n         STCM  R5,15,0(R2)\n         GDETLCHD &LBL.PTRC\n         MVC   0(4,R2),&LBL.PTRB\n         GDETRCHD &LBL.PTRC\n         MVC   0(4,R2),&LBL.PTRA\n&LBL.GDE01432 GDETBLFT &LBL.PTRC\n         BL    &LBL.GDE01433\n         BH    &LBL.GDE01434\n         GDETBLFT &LBL.PTRB\n         MVC   0(1,R2),&LBL.NULL\n         GDETBLFT &LBL.PTRA\n         MVC   0(1,R2),&LBL.NULL\n         B     &LBL.GDE01435\n&LBL.GDE01433 GDETBLFT &LBL.PTRB\n         MVC   0(1,R2),&LBL.P1\n         GDETBLFT &LBL.PTRA\n         MVC   0(1,R2),&LBL.NULL\n         B     &LBL.GDE01435\n&LBL.GDE01434 GDETBLFT &LBL.PTRA\n         MVC   0(1,R2),&LBL.M1\n         GDETBLFT &LBL.PTRB\n         MVC   0(1,R2),&LBL.NULL\n         B     &LBL.GDE01435\n&LBL.GDE01435 GDETBLFT &LBL.PTRC\n         MVC   0(1,R2),&LBL.NULL\n         MVC   &LBL.PTRB,&LBL.PTRC\n         B     &LBL.GDE01500\n&LBL.GDE01440 GDETBLFT &LBL.PTRB\n         BNL   &LBL.GDE01442\n&LBL.GDE01441 GDETRCHD &LBL.PTRA\n         LR     R5,R2\n         GDETLCHD &LBL.PTRB\n         STCM  R3,15,0(R5)\n         MVC   0(4,R2),&LBL.PTRA\n         GDETBLFT &LBL.PTRA\n         MVC   0(1,R2),&LBL.NULL\n         GDETBLFT &LBL.PTRB\n         MVC   0(1,R2),&LBL.NULL\n         B     &LBL.GDE01500\n&LBL.GDE01442 GDETLCHD &LBL.PTRB\n         STCM  R3,15,&LBL.PTRC\n         LTR   R3,R3\n         BNZ   &LBL.GDE01443\n         GDETLCHD &LBL.PTRB\n         MVC   0(4,R2),&LBL.NULL\n         GDETRCHD &LBL.PTRA\n         MVC   0(4,R2),&LBL.NULL\n         B     &LBL.GDE01444\n&LBL.GDE01443 GDETRCHD &LBL.PTRC\n         LR    R5,R3\n         GDETLCHD &LBL.PTRB\n         STCM  R5,15,0(R2)\n         GDETLCHD &LBL.PTRC\n         LR    R5,R3\n         GDETRCHD &LBL.PTRA\n         STCM  R5,15,0(R2)\n         GDETRCHD &LBL.PTRC\n         MVC   0(4,R2),&LBL.PTRB\n         GDETLCHD &LBL.PTRC\n         MVC   0(4,R2),&LBL.PTRA\n&LBL.GDE01444 GDETBLFT &LBL.PTRC\n         BL    &LBL.GDE01445\n         BH    &LBL.GDE01446\n         GDETBLFT &LBL.PTRB\n         MVC   0(1,R2),&LBL.NULL\n         GDETBLFT &LBL.PTRA\n         MVC   0(1,R2),&LBL.NULL\n         B     &LBL.GDE01447\n&LBL.GDE01445 GDETBLFT &LBL.PTRA\n         MVC   0(1,R2),&LBL.P1\n         GDETBLFT &LBL.PTRB\n         MVC   0(1,R2),&LBL.NULL\n         B     &LBL.GDE01447\n&LBL.GDE01446 GDETBLFT &LBL.PTRB\n         MVC   0(1,R2),&LBL.M1\n         GDETBLFT &LBL.PTRA\n         MVC   0(1,R2),&LBL.NULL\n         B     &LBL.GDE01447\n&LBL.GDE01447 GDETBLFT &LBL.PTRC\n         MVC   0(1,R2),&LBL.NULL\n         MVC   &LBL.PTRB,&LBL.PTRC\n         B     &LBL.GDE01500\n         SPACE\n**********************************************************************\n* RESETS THE HEAD POINTER FOR THE TABLE IF NEED BE.                   *\n**********************************************************************\n&LBL.GDE01500 CLC &LBL.PTRF,&LBL.NULL\n         BNE   &LBL.GDE01510\n         MVC   &LBL.GDEROOT,&LBL.PTRB\n         B     &LBL.GDE01900\n&LBL.GDE01510 GDETLCHD &LBL.PTRF\n         CLC   0(4,R2),&LBL.PTRA\n         BNE   &LBL.GDE01520\n         MVC   0(4,R2),&LBL.PTRB\n         B     &LBL.GDE01900\n&LBL.GDE01520 GDETRCHD &LBL.PTRF\n         CLC   0(4,R2),&LBL.PTRA\n         BNE   &LBL.GDE01900\n         MVC   0(4,R2),&LBL.PTRB\n         B     &LBL.GDE01900\n&LBL.GDE01810 MVI &LBL.RETCODE,C'1'\n         AP    &LBL.GDEINSERTCNTERR,=P'1' COUNT OF INSERTS\n         B     &LBL.GDE01910\n&LBL.GDE01820 MVI &LBL.RETCODE,C'5'\n         AP    &LBL.GDENOCORECNTERR,=P'1' COUNT OF INSERTS\n         B     &LBL.GDE01910\n&LBL.GDE01900 XR R15,R15\n         AP    &LBL.GDEINSERTCNT,=P'1' COUNT OF INSERTS\n         B     &LBL.GDE01920\n&LBL.GDE01910 LA R15,4\n         B     &LBL.GDE01920\n&LBL.GDE01920 GDESUBEN\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n* GDE02000 REPLACE                                                    *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE02000 GDESUBST\n         CLC   &LBL.GDEROOT,&LBL.NULL\n         BE    &LBL.GDE02810\n         MVC   &LBL.PTRP,&LBL.GDEROOT SET\n&LBL.GDE02100 CLC &LBL.PTRP,&LBL.NULL  END OF TABLE?\n         BE    &LBL.GDE02810               YES-BRANCH\n&LBL.GDE02200 GDETCOMP &LBL.PTRP,&LBL.GDE02500,&LBL.GDE02400,          X\n               &LBL.GDE02600,&LBL\n&LBL.GDE02400 EQU *                    MOVE RIGHT BRANCH\n         GDETRCHD &LBL.PTRP\n         STCM  R3,15,&LBL.PTRP\n         B     &LBL.GDE02100\n&LBL.GDE02500 EQU *                    MOVE LEFT BRANCH\n         GDETLCHD &LBL.PTRP\n         STCM  R3,15,&LBL.PTRP\n         B     &LBL.GDE02100\n**********************************************************************\n* REPLACE THE NODE IN TABLE CAUSE FOUND.                              *\n**********************************************************************\n&LBL.GDE02600 EQU *\n         L     R3,&LBL.GDESIZE\n         LR    R7,R3\n         L     R6,&LBL.USERDATAAREA    MOVE\n         MVCL  R2,R6\n         B     &LBL.GDE02900\n&LBL.GDE02810 MVI &LBL.RETCODE,C'1'\n         AP    &LBL.GDEREPLACECNTERR,=P'1' COUNT OF REPLACES\n         B     &LBL.GDE02910\n&LBL.GDE02900 XR R15,R15\n         AP    &LBL.GDEREPLACECNT,=P'1' COUNT OF REPLACES\n         B     &LBL.GDE02920\n&LBL.GDE02910 LA R15,4\n         B     &LBL.GDE02920\n&LBL.GDE02920 GDESUBEN\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n* GDE03000 FIND                                                       *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE03000 GDESUBST\n         CLC   &LBL.GDEROOT,&LBL.NULL\n         BE    &LBL.GDE03810\n         MVC   &LBL.PTRP,&LBL.GDEROOT SET\n&LBL.GDE03100 CLC &LBL.PTRP,&LBL.NULL  END OF TABLE?\n         BE    &LBL.GDE03810               YES-BRANCH\n         GDETBLFT &LBL.PTRP            MAKE\n&LBL.GDE03200 GDETCOMP &LBL.PTRP,&LBL.GDE03500,&LBL.GDE03400,          X\n               &LBL.GDE03600,&LBL\n&LBL.GDE03400 EQU *                    MOVE RIGHT BRANCH\n         GDETRCHD &LBL.PTRP\n         STCM  R3,15,&LBL.PTRP\n         B     &LBL.GDE03100\n&LBL.GDE03500 EQU *                    MOVE LEFT BRANCH\n         GDETLCHD &LBL.PTRP\n         STCM  R3,15,&LBL.PTRP\n         B     &LBL.GDE03100\n**********************************************************************\n* RETURN THE NODE IN TABLE PER REQUEST.                               *\n**********************************************************************\n&LBL.GDE03600 EQU *\n         L     R3,&LBL.GDESIZE\n         LR    R7,R3\n         L     R6,&LBL.USERDATAAREA    MOVE\n         MVCL  R6,R2\n         B     &LBL.GDE03900\n&LBL.GDE03810 MVI &LBL.RETCODE,C'2'\n         AP    &LBL.GDEFINDCNTERR,=P'1' COUNT OF FINDS\n         B     &LBL.GDE03910\n&LBL.GDE03900 XR R15,R15\n         AP    &LBL.GDEFINDCNT,=P'1' COUNT OF FINDS\n         B     &LBL.GDE03920\n&LBL.GDE03910 LA R15,4\n         B     &LBL.GDE03920\n&LBL.GDE03920 GDESUBEN\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n* GDE04000 FIRST                                                      *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE04000 GDESUBST\n         CLC   &LBL.GDEROOT,&LBL.NULL\n         BE    &LBL.GDE04810\n         MVC   &LBL.PTRT,&LBL.GDEROOT\n         MVC   &LBL.PTRQ,&LBL.PTRT\n&LBL.GDE04100 CLC &LBL.PTRT,&LBL.NULL\n         BE    &LBL.GDE04200\n         MVC   &LBL.PTRQ,&LBL.PTRT\n         GDETLCHD &LBL.PTRT\n         STCM  R3,15,&LBL.PTRT\n         B     &LBL.GDE04100\n&LBL.GDE04200 GDETIDNT &LBL.PTRQ\n         L     R3,&LBL.GDESIZE\n         LR    R7,R3\n         L     R6,&LBL.USERDATAAREA    MOVE\n         MVCL  R6,R2\n         B     &LBL.GDE04900\n&LBL.GDE04810 MVI &LBL.RETCODE,C'3'\n         AP    &LBL.GDEFIRSTCNTERR,=P'1' COUNT OF FIRSTS\n         B     &LBL.GDE04910\n&LBL.GDE04900 XR R15,R15\n         AP    &LBL.GDEFIRSTCNT,=P'1' COUNT OF FIRSTS\n         B     &LBL.GDE04920\n&LBL.GDE04910 LA R15,4\n         B     &LBL.GDE04920\n&LBL.GDE04920 GDESUBEN\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n* GDE05000 NEXT                                                      *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE05000 GDESUBST\n         CLC   &LBL.GDEROOT,&LBL.NULL\n         BE    &LBL.GDE05810\n         MVC   &LBL.PTRP,&LBL.GDEROOT SET\n         MVC   &LBL.PTRQ,&LBL.NULL\n&LBL.GDE05100 CLC &LBL.PTRP,&LBL.NULL  END OF TABLE?\n         BE    &LBL.GDE05430               YES-BRANCH\n         GDETCOMP &LBL.PTRP,&LBL.GDE05200,&LBL.GDE05300,               X\n               &LBL.GDE05400,&LBL\n&LBL.GDE05200 EQU *\n         MVC   &LBL.PTRQ,&LBL.PTRP MOVE LEFT BRANCH\n         GDETLCHD &LBL.PTRP\n         STCM  R3,15,&LBL.PTRP\n         B     &LBL.GDE05100\n&LBL.GDE05300 EQU *\n         GDETRCHD &LBL.PTRP\n         STCM  R3,15,&LBL.PTRP\n         B     &LBL.GDE05100\n&LBL.GDE05400 EQU *\n         GDETRCHD &LBL.PTRP\n         STCM  R3,15,&LBL.PTRP\n         CLC   &LBL.PTRP,&LBL.NULL\n         BE    &LBL.GDE05430\n&LBL.GDE05410 CLC &LBL.PTRP,&LBL.NULL\n         BE    &LBL.GDE05420\n         MVC   &LBL.PTRQ,&LBL.PTRP\n         GDETLCHD &LBL.PTRP\n         STCM  R3,15,&LBL.PTRP\n         B     &LBL.GDE05410\n&LBL.GDE05420 GDETIDNT &LBL.PTRQ\n         B     &LBL.GDE05500\n&LBL.GDE05430 CLC &LBL.PTRQ,&LBL.NULL\n         BE    &LBL.GDE05810\n         B     &LBL.GDE05420\n**********************************************************************\n* RETURN THE NODE FROM TABLE PRE REQUEST.                             *\n**********************************************************************\n&LBL.GDE05500 EQU *\n         L     R3,&LBL.GDESIZE\n         LR    R7,R3\n         L     R6,&LBL.USERDATAAREA    MOVE\n         MVCL  R6,R2\n         B     &LBL.GDE05900\n&LBL.GDE05810  MVI &LBL.RETCODE,C'3'\n         AP    &LBL.GDENEXTCNTERR,=P'1' COUNT OF NEXTS\n         B     &LBL.GDE05910\n&LBL.GDE05900 XR R15,R15\n         AP    &LBL.GDENEXTCNT,=P'1' COUNT OF NEXTS\n         B     &LBL.GDE05920\n&LBL.GDE05910 LA R15,4\n         B     &LBL.GDE05920\n&LBL.GDE05920 GDESUBEN\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n* GDE06000 DELETE                                                     *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE06000 GDESUBST\n         MVI   &LBL.GDEINITSTATUS,C'C'    CLOSE UP SHOP TIME TO GO HOME\n**********************************************************************\n* FREE ALL ACQURED CORE FOR A TABLE.                                  *\n*        FIRST 4 BYTES OF GETMAIN CORE IS LINK-LIST POINTERS.         *\n*        SECOND 4 BYTES OF GETMAIN CORE IS THE SIZE OF AREA.          *\n**********************************************************************\n         L     R5,&LBL.GDELINK\n         MVC   &LBL.GDEROOT,&LBL.NULL\n         MVC   &LBL.GDELINK,&LBL.NULL\n         MVC   &LBL.GDEUSED,&LBL.NULL\n         MVC   &LBL.GDEPNTR,&LBL.NULL\n         MVC   &LBL.PTRA,&LBL.NULL\n         MVC   &LBL.PTRB,&LBL.NULL\n         MVC   &LBL.PTRC,&LBL.NULL\n         MVC   &LBL.PTRF,&LBL.NULL\n         MVC   &LBL.PTRP,&LBL.NULL\n         MVC   &LBL.PTRQ,&LBL.NULL\n         MVC   &LBL.PTRT,&LBL.NULL\n         MVC   &LBL.PTRX,&LBL.NULL\n         MVC   &LBL.PTRY,&LBL.NULL\n&LBL.GDE06100 LTR R5,R5\n         BZ    &LBL.GDE06900\n         ICM   R6,15,0(R5)\n         L     R7,4(R5)\n         FREEMAIN RU,LV=(R7),A=(R5),SP=0\n         LR    R5,R6\n         B     &LBL.GDE06100\n&LBL.GDE06900 XR R15,R15\n         AP    &LBL.GDEDELETECNT,=P'1' COUNT OF DELETES\n         B     &LBL.GDE06920\n&LBL.GDE06910 LA R15,4\n         AP    &LBL.GDEDELETECNTERR,=P'1' COUNT OF DELETES\n         B     &LBL.GDE06920\n&LBL.GDE06920 GDESUBEN\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n* GDE07000 REPORT                                                    *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE07000 GDESUBST\n         GDEGOSUB &LBL.GDE09000,&LBL.GDE07OPEN\n         MVC   &LBL.GDECAP2(133),=CL133'0'\n         MVC   &LBL.GDECAP2+5(5),=C'NAME:'\n         MVC   &LBL.GDECAP2+10(8),=CL8'&NAME'\n         GDEGOSUB &LBL.GDE09000,&LBL.GDE07WRITE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         MVC   &LBL.GDECAP2(133),=CL133'-'\n         MVC   &LBL.GDECAP2+19(97),=99C'.'\n         MVC   &LBL.GDECAP2+13(L'&LBL.GDE07INSERT),&LBL.GDE07INSERT\n         MVC   &LBL.GDECAP2+51(2),=CL2'OK'\n         MVC   &LBL.GDECAP2+53(12),&LBL.GDE07MASK\n         OI    &LBL.GDEINSERTCNT+5,X'0F'\n         ED    &LBL.GDECAP2+53(12),&LBL.GDEINSERTCNT\n         MVC   &LBL.GDECAP2+71(5),=CL5'ERROR'\n         MVC   &LBL.GDECAP2+76(12),&LBL.GDE07MASK\n         OI    &LBL.GDEINSERTCNTERR+5,X'0F'\n         ED    &LBL.GDECAP2+76(12),&LBL.GDEINSERTCNTERR\n         MVC   &LBL.GDECAP2+94(20),=CL20'NO STORAGE AVAILABLE'\n         MVC   &LBL.GDECAP2+114(12),&LBL.GDE07MASK\n         OI    &LBL.GDENOCORECNTERR+5,X'0F'\n         ED    &LBL.GDECAP2+114(12),&LBL.GDENOCORECNTERR\n         GDEGOSUB &LBL.GDE09000,&LBL.GDE07WRITE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         MVC   &LBL.GDECAP2(133),=CL133'-'\n         MVC   &LBL.GDECAP2+13(59),=59C'.'\n         MVC   &LBL.GDECAP2+13(L'&LBL.GDE07REPLACE),&LBL.GDE07REPLACE\n         MVC   &LBL.GDECAP2+51(2),=CL2'OK'\n         MVC   &LBL.GDECAP2+53(12),&LBL.GDE07MASK\n         OI    &LBL.GDEREPLACECNT+5,X'0F'\n         ED    &LBL.GDECAP2+53(12),&LBL.GDEREPLACECNT\n         MVC   &LBL.GDECAP2+71(5),=CL5'ERROR'\n         MVC   &LBL.GDECAP2+76(12),&LBL.GDE07MASK\n         OI    &LBL.GDEREPLACECNTERR+5,X'0F'\n         ED    &LBL.GDECAP2+76(12),&LBL.GDEREPLACECNTERR\n         GDEGOSUB &LBL.GDE09000,&LBL.GDE07WRITE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         MVC   &LBL.GDECAP2(133),=CL133'-'\n         MVC   &LBL.GDECAP2+13(59),=59C'.'\n         MVC   &LBL.GDECAP2+13(L'&LBL.GDE07FIND),&LBL.GDE07FIND\n         MVC   &LBL.GDECAP2+51(2),=CL2'OK'\n         MVC   &LBL.GDECAP2+53(12),&LBL.GDE07MASK\n         OI    &LBL.GDEFINDCNT+5,X'0F'\n         ED    &LBL.GDECAP2+53(12),&LBL.GDEFINDCNT\n         MVC   &LBL.GDECAP2+71(5),=CL5'ERROR'\n         MVC   &LBL.GDECAP2+76(12),&LBL.GDE07MASK\n         OI    &LBL.GDEFINDCNTERR+5,X'0F'\n         ED    &LBL.GDECAP2+76(12),&LBL.GDEFINDCNTERR\n         GDEGOSUB &LBL.GDE09000,&LBL.GDE07WRITE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         MVC   &LBL.GDECAP2(133),=CL133'-'\n         MVC   &LBL.GDECAP2+13(59),=59C'.'\n         MVC   &LBL.GDECAP2+13(L'&LBL.GDE07FIRST),&LBL.GDE07FIRST\n         MVC   &LBL.GDECAP2+51(2),=CL2'OK'\n         MVC   &LBL.GDECAP2+53(12),&LBL.GDE07MASK\n         OI    &LBL.GDEFIRSTCNT+5,X'0F'\n         ED    &LBL.GDECAP2+53(12),&LBL.GDEFIRSTCNT\n         MVC   &LBL.GDECAP2+71(5),=CL5'ERROR'\n         MVC   &LBL.GDECAP2+76(12),&LBL.GDE07MASK\n         OI    &LBL.GDEFIRSTCNTERR+5,X'0F'\n         ED    &LBL.GDECAP2+76(12),&LBL.GDEFIRSTCNTERR\n         GDEGOSUB &LBL.GDE09000,&LBL.GDE07WRITE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         MVC   &LBL.GDECAP2(133),=CL133'-'\n         MVC   &LBL.GDECAP2+13(59),=59C'.'\n         MVC   &LBL.GDECAP2+13(L'&LBL.GDE07NEXT),&LBL.GDE07NEXT\n         MVC   &LBL.GDECAP2+51(2),=CL2'OK'\n         MVC   &LBL.GDECAP2+53(12),&LBL.GDE07MASK\n         OI    &LBL.GDENEXTCNT+5,X'0F'\n         ED    &LBL.GDECAP2+53(12),&LBL.GDENEXTCNT\n         MVC   &LBL.GDECAP2+71(5),=CL5'ERROR'\n         MVC   &LBL.GDECAP2+76(12),&LBL.GDE07MASK\n         OI    &LBL.GDENEXTCNTERR+5,X'0F'\n         ED    &LBL.GDECAP2+76(12),&LBL.GDENEXTCNTERR\n         GDEGOSUB &LBL.GDE09000,&LBL.GDE07WRITE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         MVC   &LBL.GDECAP2(133),=CL133'-'\n         MVC   &LBL.GDECAP2+13(59),=59C'.'\n         MVC   &LBL.GDECAP2+13(L'&LBL.GDE07DELETE),&LBL.GDE07DELETE\n         MVC   &LBL.GDECAP2+51(2),=CL2'OK'\n         MVC   &LBL.GDECAP2+53(12),&LBL.GDE07MASK\n         OI    &LBL.GDEDELETECNT+5,X'0F'\n         ED    &LBL.GDECAP2+53(12),&LBL.GDEDELETECNT\n         MVC   &LBL.GDECAP2+71(5),=CL5'ERROR'\n         MVC   &LBL.GDECAP2+76(12),&LBL.GDE07MASK\n         OI    &LBL.GDEDELETECNTERR+5,X'0F'\n         ED    &LBL.GDECAP2+76(12),&LBL.GDEDELETECNTERR\n         GDEGOSUB &LBL.GDE09000,&LBL.GDE07WRITE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         GDEGOSUB &LBL.GDE09000,&LBL.GDE07CLOSE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         ZAP   &LBL.GDEINSERTCNT,=P'0' COUNT OF INSERTS\n         ZAP   &LBL.GDEINSERTCNTERR,=P'0' COUNT OF INSERTS\n         ZAP   &LBL.GDENOCORECNTERR,=P'0' COUNT OF INSERTS\n         ZAP   &LBL.GDEREPLACECNT,=P'0' COUNT OF REPLACES\n         ZAP   &LBL.GDEREPLACECNTERR,=P'0' COUNT OF REPLACES\n         ZAP   &LBL.GDEFINDCNT,=P'0' COUNT OF FINDS\n         ZAP   &LBL.GDEFINDCNTERR,=P'0' COUNT OF FINDS\n         ZAP   &LBL.GDEFIRSTCNT,=P'0' COUNT OF FIRSTS\n         ZAP   &LBL.GDEFIRSTCNTERR,=P'0' COUNT OF FIRSTS\n         ZAP   &LBL.GDENEXTCNT,=P'0' COUNT OF NEXTS\n         ZAP   &LBL.GDENEXTCNTERR,=P'0' COUNT OF NEXTS\n         ZAP   &LBL.GDEDELETECNT,=P'0' COUNT OF DELETES\n         ZAP   &LBL.GDEDELETECNTERR,=P'0' COUNT OF DELETES\n&LBL.GDE07900 XR R15,R15\n         B     &LBL.GDE07920\n&LBL.GDE07910 LA R15,4\n         B     &LBL.GDE07920\n&LBL.GDE07920 GDESUBEN\n&LBL.GDE07OPEN  DC   C'0'\n&LBL.GDE07WRITE DC   C'1'\n&LBL.GDE07CLOSE DC   C'7'\n&LBL.GDE07MASK  DC   XL12'4B2020202020202020202120'\n&LBL.GDE07INSERT DC  C'RECORDS INSERTED'\n&LBL.GDE07REPLACE DC C'RECORDS REPLACED'\n&LBL.GDE07FIND  DC   C'RECORDS SOUGHT BY KEY'\n&LBL.GDE07FIRST DC   C'RETURN FIRST REQUESTS'\n&LBL.GDE07NEXT  DC   C'RETURN NEXT REQUESTS'\n&LBL.GDE07DELETE DC  C'TABLE DELETE REQUESTS'\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n* GDE08000 PROCESS TRACING DISPLAY                                    *\n* LOGIC OF THIS ROUTINE IS                                            *\n*   IF FIRST CALL                                                     *\n*      IF BEFORE PICTURE                                              *\n*         OPEN PRINT FILE                                             *\n*      END                                                            *\n*   END                                                               *\n*   PRINT DATA AREA                                                   *\n*   IF REPORT CALL                                                    *\n*      IF AFTER CALL                                                  *\n*         CLOSE PRINT FILE                                            *\n*      END                                                            *\n*   END                                                               *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE08000 GDESUBST\n*  SAVE CALLING REGISTER\n         L     R2,0(R1)\n*  START US OUT\n         CLI   &LBL.GDE08FST,C'C'\n         BE    &LBL.GDE08010\n         CP    &LBL.GDE08TRACECNT,&LBL.TRACEMAXCNT\n         BH    &LBL.GDE08040 ... CLOSE TRACING\n         B     &LBL.GDE08020 ... TRACE\n&LBL.GDE08010  EQU   *\n*  OPEN TRACE FILE\n         ZAP   &LBL.GDECBP1LPP,=P'53'\n         MVI   &LBL.GDECBP1NP,C'1'\n         MVI   &LBL.GDECBP1DNP,C'1'\n         MVI   &LBL.GDECBP1RNP,C'1'\n         MVI   &LBL.GDECBP1FUNC,C'1'\n         MVI   &LBL.GDECBP1HEX,C'8'\n         MVC   &LBL.GDECBP1LEN,=H'512'\n         MVC   &LBL.GDECBP1LNBK,=H'512'\n         MVC   &LBL.GDECBP1ID,=CL10'&ROUT02ID'\n         MVC   &LBL.GDECBP1DDN,=CL8'&ROUT02'\n         LOAD  EP=GDE001CA\n         ST    R0,&LBL.GDECBP1ROUT\n         L     R15,&LBL.GDECBP1ROUT\n         CALL  (15),(&LBL.GDECBP1,&LBL.GDECBP2),VL\n         MVI   &LBL.GDE08FST,C'O'\n* PRINT THE DATA AREA\n&LBL.GDE08020  EQU   *\n         MVI   &LBL.GDECBP1FUNC,C'2'\n         MVC   &LBL.GDECBP2(45),=CL45'         INTERNAL TRACE AREA'\n         MVC   &LBL.GDECBP2+29(16),=CL16'- BEFORE DISPLAY'\n         CLI   0(R2),C'B'\n         BE    *+10\n         MVC   &LBL.GDECBP2+29(16),=CL16'- AFTER DISPLAY'\n         MVC   &LBL.GDECBP2+0(8),=CL8'&NAME'\n         MVI   &LBL.GDECBP1HEX,C'8'\n         MVC   &LBL.GDECBP1LEN,=AL2(45)\n         MVC   &LBL.GDECBP1LNBK,=AL2(45)\n         MVC   &LBL.GDECBP1ID,=CL10'&ROUT02ID'\n         MVC   &LBL.GDECBP1DDN,=CL8'&ROUT02'\n         L     R15,&LBL.GDECBP1ROUT\n         CALL  (15),(&LBL.GDECBP1,&LBL.GDECBP2,&LBL.GDECBH1),VL\n         MVI   &LBL.GDECBP1HEX,C'1'\n         MVC   &LBL.GDECBP2(133),=CL133'            CALLING PARMS'\n         MVC   &LBL.GDECBP2+3(8),=CL8'&NAME'\n         MVC   &LBL.GDECBP1ID,=CL10'&ROUT02ID'\n         MVC   &LBL.GDECBP1DDN,=CL8'&ROUT02'\n         L     R15,&LBL.GDECBP1ROUT\n         CALL  (15),(&LBL.GDECBP1,&LBL.GDECBP2,&LBL.GDECBH1),VL\n         MVC   &LBL.GDECBP1LEN,=AL2(&LBL.DSECT_LENGTH)\n         MVC   &LBL.GDECBP1LNBK,=AL2(&LBL.DSECT_LENGTH)\n         MVI   &LBL.GDECBP1HEX,C'7'\n         L     R15,&LBL.GDECBP1ROUT\n         CALL  (15),(&LBL.GDECBP1,(R10),&LBL.GDECBH1),VL\n         MVI   &LBL.GDECBP1HEX,C'1'\n         MVC   &LBL.GDECBP2(133),=CL133'            PASSED RECORD'\n         MVC   &LBL.GDECBP2+3(8),=CL8'&NAME'\n         MVC   &LBL.GDECBP1ID,=CL10'&ROUT02ID'\n         MVC   &LBL.GDECBP1DDN,=CL8'&ROUT02'\n         L     R15,&LBL.GDECBP1ROUT\n         CALL  (15),(&LBL.GDECBP1,&LBL.GDECBP2,&LBL.GDECBH1),VL\n         L     R2,&LBL.USERDATAAREA\n         LH    R7,=AL2(&TABLNG)\n         STCM  R7,B'0011',&LBL.GDECBP1LEN\n         STCM  R7,B'0011',&LBL.GDECBP1LNBK\n         LTR   R2,R2\n         BH    *+16\n         MVC   &LBL.GDECBP1LEN,=XL2'00'\n         MVC   &LBL.GDECBP1LNBK,=XL2'00'\n         MVI   &LBL.GDECBP1HEX,C'7'\n         L     R15,&LBL.GDECBP1ROUT\n         CALL  (15),(&LBL.GDECBP1,(R2),&LBL.GDECBH1),VL\n         MVI   &LBL.GDECBP1HEX,C'1'\n         MVC   &LBL.GDECBP2(133),=CL133'            INTERNAL WORKAREA'\n         MVC   &LBL.GDECBP2+3(8),=CL8'&NAME'\n         MVC   &LBL.GDECBP1ID,=CL10'&ROUT02ID'\n         MVC   &LBL.GDECBP1DDN,=CL8'&ROUT02'\n         L     R15,&LBL.GDECBP1ROUT\n         CALL  (15),(&LBL.GDECBP1,&LBL.GDECBP2,&LBL.GDECBH1),VL\n         L     R3,=AL4(&LBL.GDETRACEEND-&LBL.GDETRACESTART)\n         STH   R3,&LBL.GDECBP1LEN\n         STH   R3,&LBL.GDECBP1LNBK\n         MVI   &LBL.GDECBP1HEX,C'7'\n         LA    R9,&LBL.GDEDSECT     SET ARG ADDRESS\n         L     R15,&LBL.GDECBP1ROUT\n         CALL  (15),(&LBL.GDECBP1,(R9),&LBL.GDECBH1),VL\n         MVI   &LBL.GDECBP1HEX,C'1'\n         MVC   &LBL.GDECBP2(133),=CL133'            TABLE STORAGE'\n         MVC   &LBL.GDECBP2+3(8),=CL8'&NAME'\n         MVC   &LBL.GDECBP1ID,=CL10'&ROUT02ID'\n         MVC   &LBL.GDECBP1DDN,=CL8'&ROUT02'\n         L     R15,&LBL.GDECBP1ROUT\n         CALL  (15),(&LBL.GDECBP1,&LBL.GDECBP2,&LBL.GDECBH1),VL\n*** DISPLAY TABLE STORAGE\n         L     R5,&LBL.GDELINK\n&LBL.GDE08030 LTR R5,R5\n         BZ    &LBL.GDE08039\n         LR    R6,R5\n         L     R7,4(R5)\n*** R6 POINT TO STORAGE R7 CONTAINS THE LENGTH\n*** FIRST PRINT 8 BYTE HEADER STUFF\n         MVC   &LBL.GDECBP1LEN,=AL2(8)\n         MVC   &LBL.GDECBP1LNBK,=AL2(8)\n         MVI   &LBL.GDECBP1HEX,C'7'\n         L     R15,&LBL.GDECBP1ROUT\n         CALL  (15),(&LBL.GDECBP1,(R6),&LBL.GDECBH1),VL\n*** NOW PRINT THE STORAGE\n         LA    R6,8(R6)\n         SH    R7,=AL2(8)\n         STCM  R7,B'0011',&LBL.GDECBP1LEN\n         LH    R7,=AL2(&TABLNG+9)\n         STCM  R7,B'0011',&LBL.GDECBP1LNBK\n         MVI   &LBL.GDECBP1HEX,C'7'\n         L     R15,&LBL.GDECBP1ROUT\n         CALL  (15),(&LBL.GDECBP1,(R6),&LBL.GDECBH1),VL\n*  DONE WITH THIS BLOCK NOW DO THE NEXT BLOCK\n         ICM   R5,15,0(R5)\n         B     &LBL.GDE08030\n&LBL.GDE08039  EQU   *\n*  TEST IF WE SHOULD CLOSE THE TRACE FILE\n         CLI   0(R2),C'B'\n         BE    &LBL.GDE08900\n         CLI   &LBL.COMMAND,C'7'\n         BE    &LBL.GDE08040\n         B     &LBL.GDE08900\n*  CLOSE THE PRINTER FILE\n&LBL.GDE08040  EQU   *\n         MVI   &LBL.GDECBP1FUNC,C'3'\n         MVC   &LBL.GDECBP1ID,=CL10'&ROUT02ID'\n         MVC   &LBL.GDECBP1DDN,=CL8'&ROUT02'\n         L     R15,&LBL.GDECBP1ROUT\n         CALL  (15),(&LBL.GDECBP1,&LBL.GDECBP2),VL\n         MVI   &LBL.GDE08FST,C'C'\n         B     &LBL.GDE08900\n&LBL.GDE08900 LA    R15,0\n         B     &LBL.GDE08920\n&LBL.GDE08910 LA    R15,4\n         B     &LBL.GDE08920\n&LBL.GDE08920 GDESUBEN\n&LBL.GDE08FST DC  C'C'\n&LBL.GDE08TRACECNT DC  PL6'0'\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n* GDE09000 PROCESS STATISTICAL REPORT                                 *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE09000 GDESUBST\n         L     R2,0(R1)\n         CLI   0(R2),C'0'\n         BE    &LBL.GDE09010\n         CLI   0(R2),C'7'\n         BE    &LBL.GDE09030\n         B     &LBL.GDE09020\n&LBL.GDE09010 ZAP   &LBL.GDECAP1LPP,=P'53'\n         MVI   &LBL.GDECAP1NP,C'1'\n         MVI   &LBL.GDECAP1DNP,C'1'\n         MVI   &LBL.GDECAP1RNP,C'1'\n         MVI   &LBL.GDECAP1FUNC,C'1'\n         MVI   &LBL.GDECAP1HEX,C'8'\n         MVC   &LBL.GDECAP1LEN,=H'512'\n         MVC   &LBL.GDECAP1LNBK,=H'512'\n         MVC   &LBL.GDECAP1ID,=CL10'&ROUT01ID'\n         MVC   &LBL.GDECAP1DDN,=CL8'&ROUT01'\n         LOAD  EP=GDE001CA\n         ST    R0,&LBL.GDECAP1ROUT\n         L     R15,&LBL.GDECAP1ROUT\n         CALL  (15),(&LBL.GDECAP1,&LBL.GDECAP2),VL\n         B     &LBL.GDE09900\n&LBL.GDE09020 MVI   &LBL.GDECAP1FUNC,C'2'\n         MVI   &LBL.GDECAP1HEX,C'1'\n         MVC   &LBL.GDECAP1LEN,=AL2(133)\n         MVC   &LBL.GDECAP1LNBK,=AL2(133)\n         MVC   &LBL.GDECAP1ID,=CL10'&ROUT01ID'\n         MVC   &LBL.GDECAP1DDN,=CL8'&ROUT01'\n         L     R15,&LBL.GDECAP1ROUT\n         CALL  (15),(&LBL.GDECAP1,&LBL.GDECAP2,&LBL.GDECAH1),VL\n         B     &LBL.GDE09900\n&LBL.GDE09030 MVI   &LBL.GDECAP1FUNC,C'3'\n         MVC   &LBL.GDECAP1ID,=CL10'&ROUT01ID'\n         MVC   &LBL.GDECAP1DDN,=CL8'&ROUT01'\n         L     R15,&LBL.GDECAP1ROUT\n         CALL  (15),(&LBL.GDECAP1,&LBL.GDECAP2),VL\n         B     &LBL.GDE09900\n&LBL.GDE09900 LA    R15,0\n         B     &LBL.GDE09920\n&LBL.GDE09910 LA    R15,4\n         B     &LBL.GDE09920\n&LBL.GDE09920 GDESUBEN\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n* GDE0A000 GET STORAGE ROUTINE                                        *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE0A000 GDESUBST\n         L     R2,&LBL.GDESIZE\n         AH    R2,=H'9'\n         C     R2,&LBL.GDEUSED\n         BNH   &LBL.GDE0A100\n         ICM   R2,15,&LBL.GDELINK\n         LA    R3,&LBL.GDELINK\n&LBL.GDE0A010 LTR R2,R2\n         BZ    &LBL.GDE0A020\n         LR    R3,R2\n         ICM   R2,15,0(R2)\n         B     &LBL.GDE0A010\n&LBL.GDE0A020 L R6,&LBL.GDESIZE\n         AH    R6,=H'9'\n         MH    R6,&LBL.CURMAX\n         AH    R6,=H'8'\n         GETMAIN RC,LV=(6)\n         LTR   R15,R15\n         BNZ   &LBL.GDE0A810\n         STCM  R6,15,4(R1)\n         STCM  R1,15,0(R3)\n         MVC   0(4,R1),&LBL.NULL\n         SH    R6,=H'8'\n         STCM  R6,15,&LBL.GDEUSED\n         AH    R1,=H'8'\n         STCM  R1,15,&LBL.GDEPNTR\n&LBL.GDE0A100 L R2,&LBL.GDEPNTR\n         LR    R3,R2\n         AH    R3,=H'9'\n         A     R3,&LBL.GDESIZE\n         STCM  R3,15,&LBL.GDEPNTR\n         XR    R3,R3\n         ICM   R3,15,&LBL.GDEUSED\n         S     R3,&LBL.GDESIZE\n         SH    R3,=H'9'\n         STCM  R3,15,&LBL.GDEUSED\n         ST    R2,&LBL.PTRNEW\n         B     &LBL.GDE0A900\n&LBL.GDE0A810  MVI &LBL.RETCODE,C'5'\n         B     &LBL.GDE0A910\n&LBL.GDE0A900 XR R15,R15\n         B     &LBL.GDE0A920\n&LBL.GDE0A910 LA R15,4\n         B     &LBL.GDE0A920\n&LBL.GDE0A920 GDESUBEN\n         LTORG\n         DROP  R10,R11\n         AIF   (&GDETABLE).Z0010\n&GDETABLE SETB 1\nGDETABLE CSECT\n         DC    C'GDETABLE -02.01 '\n.*\n.*     TYPE=IOROUTINE\n.*\n.**********************************************************************\n         AGO    .Z0010\n.Z0010   ANOP\n         MEXIT\n.Z0020   ANOP\n         MNOTE 8,'*** TYPE VALUE UNKNOWN, CHECK TYPE KEYWORK ***'\n         MEND\n         MACRO\n&NAME    GDETIDNT &A\n.*       THIS RETURNS POINTER TO THE DATA OF THE NODE A\n&NAME    L     R2,&A\n         LA    R2,9(R2)\n         XR    R3,R3\n         MEND\n         MACRO\n&NAME    GDETBLFT &A\n.********GDETBLFT &A   ***********************************************\n.*       THIS RETURNS POINTER TO THE BALANCE FACTOR OF THE NODE A\n&NAME    L     R2,&A\n         LA    R2,8(R2)\n         XR    R3,R3\n         ICM   R3,1,0(R2)\n         MEND\n         MACRO\n&NAME    GDETLCHD &A\n.*       THIS RETURNS THE LEFT CHLD OF THE NODE A\n&NAME    L     R2,&A\n         LA    R2,0(R2)\n         ICM   R3,15,0(R2)\n         MEND\n         MACRO\n&NAME    GDETRCHD &A\n.*       THIS RETURNS POINTER TO THE RIGHT CHLD OF THE NODE A\n&NAME    L     R2,&A\n         LA    R2,4(R2)\n         ICM   R3,15,0(R2)\n         MEND\n         MACRO\n&NAME    GDETCOMP &A,&LEFT,&RIGHT,&EQUAL,&LBL\n.********GDETCOMP &A   ***********************************************\n         LCLA  &CNT\n         GBLC  &GKEYLNG(256),&GKEYOFF(256)\n&NAME    GDEIDENT &A\n         L     R3,&LBL.USERDATAAREA\n&CNT     SETA  1\n.COMPLOP ANOP\n         AIF   ('&GKEYLNG(&CNT)' EQ '').COMPEND\n         CLC   &GKEYOFF(&CNT).(&GKEYLNG(&CNT),R3),&GKEYOFF(&CNT).(R2)\n         BL    &LEFT\n         BH    &RIGHT\n&CNT     SETA  &CNT+1\n         AGO   .COMPLOP\n.COMPEND ANOP\n         B     &EQUAL\n         MEND\n         MACRO\n&LABEL   GDECSI &TYPE=INITIALIZE,                                      X\n               &OK=,                                                   X\n               &NOTOK=,                                                X\n               &EODAD=,                                                X\n               &FILTER='**',                                           X\n               &CATALOG='SYS1.MASTERCAT',                              X\n               &RETCATALOG=,                                           X\n               &RETENTRY=,                                             X\n               &ENTRYTYPES='                ',                         X\n               &FIELDS=,                                               X\n               &TRACE=NO,                                              X\n               &NAME=CSI1,                                             X\n               &ERRORMAX=050,                                          X\n               &MAXSTORAGE=64*1024,                                    X\n               &PROGRAM=SYSUT1,                                        X\n               &PROGRAMID=CA,                                          X\n               &STATID=01,                                             X\n               &TRACEID=02,                                            X\n               &PARMLIST=\n.**********************************************************************\n.*\n.*\n.*\n.*\n.**********************************************************************\n         GBLB  &GDECSI\n         GBLC  &GDECSIDSECTDEFINED(16)\n         GBLC  &GDECSICSECTDEFINED(16)\n         GBLC  &GDECSIPROGRAM(16)\n         GBLC  &GDECSIPROGRAMID(16)\n         GBLC  &GDECSISTATID(16)\n         GBLC  &GDECSITRACEID(16)\n         GBLC  &LBL\n         GBLC  &ROUTCA\n         LCLA  &CNTA,&CNTB\n         LCLC  &ROUT01,&ROUT01ID\n         LCLC  &ROUT02,&ROUT02ID\n         LCLC  &PROGNAME\n         LCLC  &LABEL1,&LABEL2\n&CNTA    SETA  1\n.AA010   ANOP\n         AIF   ('&GDECSICSECTDEFINED(&CNTA)' EQ '').AA020\n         AIF   ('&GDECSICSECTDEFINED(&CNTA)' EQ '&NAME').AA030\n&CNTA    SETA  &CNTA+1\n         AIF   (&CNTA LE 16).AA010\n         MNOTE 8,'MORE THAN 16 VSAM FILE DEFINE - LIMIT REACHED'\n         AGO   .Z0010\n.AA020   ANOP\n&GDECSICSECTDEFINED(&CNTA)  SETC  '&NAME'\n&GDECSIPROGRAM(&CNTA)       SETC  '&PROGRAM'\n&GDECSIPROGRAMID(&CNTA)     SETC  '&PROGRAMID'\n&GDECSISTATID(&CNTA)        SETC  '&STATID'\n&GDECSITRACEID(&CNTA)       SETC  '&TRACEID'\n.AA030   ANOP\n&PROGNAME SETC  '&GDECSIPROGRAM(&CNTA)'(1,6)\n&ROUTCA   SETC  '&PROGNAME'.'&GDECSIPROGRAMID(&CNTA)'(1,2)\n&ROUT01   SETC  '&PROGNAME'.'&GDECSISTATID(&CNTA)'(1,2)\n&ROUT01ID SETC  '&PROGNAME'.'.R'.'&GDECSISTATID(&CNTA)'(1,2)\n&ROUT02   SETC  '&PROGNAME'.'&GDECSITRACEID(&CNTA)'(1,2)\n&ROUT02ID SETC  '&PROGNAME'.'.R'.'&GDECSITRACEID(&CNTA)'(1,2)\n&LBL     SETC  'GDECSI_'.'&NAME'(1,6).'_'\n.**********************************************************************\n.*\n.* THIS MACRO IS USED TO GENERATE CALL TO THE DFSMS CATALOG SEARCH\n.* INTERFACE BY USING THE TYPE KEYWORD\n.*\n.* TYPE=INITIALIZE  = CREATES ALL OF THE POINTERS AND WORKAREAS\n.*     REQUIRED BY THIS FACILITY\n.*     RETURN CODES - 00 ALL OK\n.*                    04 GETMAIN ERROR\n.*                    08 LOGIC ERROR - CLEAN UP NOT DONE LAST TIME?\n.*                    XY - X IS FUNCTION PROCESSING\n.*                         Y IS SEQUENTIAL ERROR CODE\n.*\n.* TYPE=NEXTITEM    = READ THE NEXT CATALOG RECORD AND INITIALIZE\n.*                    FIELDS\n.*     RETURN CODES - 00 ALL OK\n.*                    04 END OF DATA\n.*                    08 LOGIC ERROR\n.*                    XY - X IS FUNCTION PROCESSING\n.*                         Y IS SEQUENTIAL ERROR CODE\n.*\n.* TYPE=CLEANUP     = DEACTIVE INTERFACE, FREE STORAGE\n.*     RETURN CODES - 00 ALL OK\n.*                    08 LOGIC ERROR\n.*                    XY - X IS FUNCTION PROCESSING\n.*                         Y IS SEQUENTIAL ERROR CODE\n.*\n.* TYPE=SEARCH      = EXECUTE THE SEARCH BASED ON CURRENT SETTINGS\n.*     RETURN CODES - 00 ALL OK\n.*                    08 LOGIC ERROR\n.*                    XY - X IS FUNCTION PROCESSING\n.*                         Y IS SEQUENTIAL ERROR CODE\n.*\n.* TYPE=SETUP       = ESTABILISHED NEW CATALOG, FILTER, AND\n.*     KEYWORDS IN THE CALLING PARMS FOR THE NEXT CALL\n.*     RETURN CODES - 00 ALL OK\n.*                    08 INITIALIZE MUST BE PERFORMED\n.*                    XY - X IS FUNCTION PROCESSING\n.*                         Y IS SEQUENTIAL ERROR CODE\n.*\n.* TYPE=REPORT      = PRINT THE STATISTICS FROM THE FILE OPERATION\n.*     RETURN CODES - 00 ALL OK\n.*                    08 LOGIC ERROR\n.*                    XY - X IS FUNCTION PROCESSING\n.*                         Y IS SEQUENTIAL ERROR CODE\n.*\n.* TYPE=IOROUTINE BUILDS ALL THE SUBROUTINE CODE TO SUPPORT THE\n.*            REQUESTS\n.*\n.* TYPE=PARMLIST DECLARES STORAGE TO BE USED BY PARMLIST\n.*\n.* TYPE=DSECT DECLARES DSECT TO MAP THE STORAGE SET ASIDE BY\n.*            PARMLIST\n.*\n.* THE PARAMATER LIST MADE AVAILABLE TO THE PROGRAM CALLING THIS\n.*    ROUTINE IS DEFINED AS FOLLOWS\n.*\n.* PARAMETER LIST\n.*\n.*     GDECSI_DSECT       DS 0C       VSAM PARMLIST\n.*     GDECSI_COMMAND     DS  CL2     CURRENT COMMAND\n.*        00- TYPE=INITIALIZE\n.*        10- TYPE=NEXTITEM\n.*        20- TYPE=CLEANUP\n.*        30- TYPE=SEARCH\n.*        40- TYPE=SETUP\n.*        50- TYPE=REPORT\n.*     GDECSI_RETCODE     DS  CL2     RETURN CODE\n.*     GDECSI_TRACE       DS  CL1     TURN ON TRACE\n.*                        DS  CL3     RESERVED\n.*     GDECSI_ERRORCNTMAX DS  PL6     COUNT OF ERRORS\n.*     GDECSI_MAXSTORAGE  DS  AL4     MAX STORAGE TO USE IN CALLS\n.*     GDECSI_RETR15      DS  CL4     REGISTER 15 IF ERROR OCCURED\n.*     GDECSI_RETREASON   DS  CL4     REASON CODE FROM SHOWCB\n.*\n.*        OPTIONS ARE IN THE FORMAT DESCRIBED IN\n.*          DFSMS/DFP MANAGING CATALOGUES APPENDIX D.\n.*          THIS AREA IS MAPPED BY IGGCSINA\n.*\n.*        THIS IS MAINTAINED BY THE TYPE=SETUP CALL\n.*          CALLING SETUP CANCELS ANY ABILITY TO USE RESUME\n.*\n.**********************************************************************\n.*\n.*     HERE ARE THE MACRO EXPANSIONS FOR CALLING THE I/O MODULE\n.*\n.*     TYPE=PARMLIST\n.*\n.A0010   AIF   ('&TYPE' NE 'PARMLIST').B0010\n         AIF   ('&PARMLIST' EQ '').A0020\n&PARMLIST DS  0D       PROGRAMS WORKAREA\n         DS    CL(&LBL.DSECT_LENGTH)\n         AGO   .Z0010\n.A0020   ANOP\n&LBL.DATAAREA DS  0D    PROGRAMS WORKAREA\n         DS    CL(&LBL.DSECT_LENGTH)\n         AGO   .Z0010\n.*\n.*     TYPE=DSECT\n.*\n.B0010   AIF   ('&TYPE' NE 'DSECT').C0010\n&CNTA    SETA  1\n.B0020   ANOP\n         AIF   ('&GDECSIDSECTDEFINED(&CNTA)' EQ '').B0030\n         AIF   ('&GDECSIDSECTDEFINED(&CNTA)' EQ '&NAME').Z0010\n&CNTA    SETA  &CNTA+1\n         AIF   (&CNTA LE 16).B0020\n         MNOTE 8,'MORE THAN 16 VSAM FILE DEFINE - LIMIT REACHED'\n         AGO   .B0020\n.B0030   ANOP\n&GDECSIDSECTDEFINED(&CNTA) SETC   '&NAME'\n&LBL.DSECT          DSECT        CSI PARMLIST DSECT\n&LBL.COMMAND        DS   CL2     CURRENT COMMAND\n&LBL.RETCODE        DS   CL2     RETURN CODE\n&LBL.TRACE          DS   CL1     TRACE THIS RECORD\n                    DS   XL3     RESERVED\n&LBL.MAXSTORAGE     DS   CL4     BINARY FULLWORD OF MAX WORKAREA LENGTH\n&LBL.RETR15         DS   CL4     REGISTER 15 IF ERROR OCCURED\n&LBL.RETREASON      DS   CL4     REASON CODE FROM SHOWCB\n&LBL.SETUPDATA      DS   CL4     DATA FOR SETUP\n&LBL.ERRORCNTMAX    DS   PL6     MAX ENTRIES TO TRACE IN ERROR\n&LBL.DSECT_LENGTH   EQU  *-&LBL.DSECT\n         AGO   .Z0010\n.*\n.*     TYPE=INITIALIZE\n.*\n.C0010   AIF   ('&TYPE' NE 'INITIALIZE').D0010\n         AIF   ('&PARMLIST' EQ '').C0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .C0030\n.C0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.C0030   ANOP\n         USING &LBL.DSECT,R1\n         MVC   &LBL.COMMAND,=CL2'00'\n         ZAP   &LBL.ERRORCNTMAX,=P'&ERRORMAX'\n         MVC   &LBL.MAXSTORAGE,=AL4(&MAXSTORAGE)\n         GDECSIA TRACE=&TRACE\n         GDECSIB OK=&OK,NOTOK=&NOTOK,EODAD=&EODAD,                     X\n               PARMLIST=&PARMLIST\n         AGO   .Z0010\n.*\n.*     TYPE=NEXTITEM\n.*\n.D0010   AIF   ('&TYPE' NE 'NEXTITEM').E0010\n         AIF   ('&PARMLIST' EQ '').D0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .D0030\n.D0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.D0030   ANOP\n         USING &LBL.DSECT,R1\n         MVC   &LBL.COMMAND,=CL2'10'\n         GDECSIA TRACE=&TRACE\n         GDECSIB OK=&OK,NOTOK=&NOTOK,EODAD=&EODAD,                     X\n               PARMLIST=&PARMLIST\n         AGO   .Z0010\n.*\n.*     TYPE=CLEANUP\n.*\n.E0010   AIF   ('&TYPE' NE 'CLEANUP').F0010\n         AIF   ('&PARMLIST' EQ '').E0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .E0030\n.E0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.E0030   ANOP\n         USING &LBL.DSECT,R1\n         MVC   &LBL.COMMAND,=CL2'20'\n         GDECSIA TRACE=&TRACE\n         GDECSIB OK=&OK,NOTOK=&NOTOK,EODAD=&EODAD,                     X\n               PARMLIST=&PARMLIST\n         AGO   .Z0010\n.*\n.*     TYPE=SEARCH\n.*\n.F0010   AIF   ('&TYPE' NE 'SEARCH').G0010\n         AIF   ('&PARMLIST' EQ '').F0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .F0030\n.F0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.F0030   ANOP\n         USING &LBL.DSECT,R1\n         MVC   &LBL.COMMAND,=CL2'30'\n         GDECSIA TRACE=&TRACE\n         GDECSIB OK=&OK,NOTOK=&NOTOK,EODAD=&EODAD,                     X\n               PARMLIST=&PARMLIST\n         AGO   .Z0010\n.*\n.*     TYPE=SETUP\n.*\n.G0010   AIF   ('&TYPE' NE 'SETUP').H0010\n         AIF   ('&PARMLIST' EQ '').G0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .G0030\n.G0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.G0030   ANOP\n         USING &LBL.DSECT,R1\n         MVC   &LBL.COMMAND,=CL2'40'\n&LABEL1  SETC  '&LBL'.'&SYSNDX'.'SETUP1'\n&LABEL2  SETC  '&LBL'.'&SYSNDX'.'SETUP2'\n         LA    R14,&LABEL1\n         ST    R14,&LBL.SETUPDATA\n         AIF   ('&FILTER'(1,1) EQ '''').G0031\n         LA    R14,&FILTER\n         AGO   .G0032\n.G0031   ANOP\n         LA    R14,=CL44&FILTER\n         AGO   .G0032\n.G0032   ANOP\n         ST    R14,&LABEL1+0\n         AIF   ('&CATALOG'(1,1) EQ '''').G0033\n         LA    R14,&CATALOG\n         AGO   .G0034\n.G0033   ANOP\n         LA    R14,=CL44&CATALOG\n         AGO   .G0034\n.G0034   ANOP\n         ST    R14,&LABEL1+4\n         LA    R14,&RETCATALOG\n         ST    R14,&LABEL1+24\n         LA    R14,&RETENTRY\n         ST    R14,&LABEL1+28\n&CNTA    SETA  N'&FIELDS\n&CNTB    SETA  1\n.G0040   AIF   (&CNTB GT &CNTA).G0050\n         LA    R14,&FIELDS(&CNTB,2)\n         ST    R14,&LABEL1+36+8+(16*(&CNTB-1))\n         LA    R14,L'&FIELDS(&CNTB,2)\n         ST    R14,&LABEL1+36+12+(16*(&CNTB-1))\n&CNTB    SETA  &CNTB+1\n         AGO   .G0040\n.G0050   ANOP\n         B     &LABEL2\n&LABEL1  DS   0F\n         DC    AL4(0)    FILTER\n         DC    AL4(0)    CATALOG NAME\n         DC    CL16&ENTRYTYPES\n         DC    AL4(0)    RETURN CATALOG\n         DC    AL4(0)    RETURN ENTRY\n&CNTA    SETA  N'&FIELDS\n         DC    AL2(&CNTA)\n         DC    AL2(0)\n&CNTA    SETA  N'&FIELDS\n&CNTB    SETA  1\n.G0060   AIF   (&CNTB GT &CNTA).G0080\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'SECFLAGS').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'ENTYPE').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'ENTNAME').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'TYPE').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'NAME').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'GDGLIMIT').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'GDGATTR').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'OWNERID').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'DSCRDT2').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'DSETCRDT').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'DSEXDT2').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'DSETEXDT').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'ATTR1').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'CATTR').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'RGATTR').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'ATTR2').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'OPENIND').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'BUFSIZE').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'PRIMSPAC').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'SCONSPAC').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'SPACOPTN').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'HURBADS').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'HARBADS').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LRECL').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'EXCPEXIT').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'NVSMATTR').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LTBACKDT').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'DATACLAS').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'STORCLAS').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'MGMTCLAS').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'AMDKEY').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'AMDCIREC').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'GENLEVEL').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'DEVTYP').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'VOLSER').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'FILESEQ').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'VOLFLG').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'DSCBTTR').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'NOEXTNT').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'HKRBA').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'HURBA').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'HARBA').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'PHYBLKSZ').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'NOBLKTRK').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'NOTRKAU').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'ITYPEXT').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'NOBYTTRK').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'NOBYTAU').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LOKEYV').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'HIKEYV').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'PASSWORD').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'PASSPRMT').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'PASSATMP').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'USVRMDUL').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'USERAREC').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'VSAMREUS').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'VSAMTYPE').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'ACTOKEN').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'COMPIND').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'COMUDSIZ').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'UDATASIZ').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'VVRNFLGS').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'STRIPCNT').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBCONID').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBDEVTP').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBDESCR').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBEMPTY').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBLIBID').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBLOGIC').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBSCRTH').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBSCR1').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBSCR2').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBSCR3').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBSCR4').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBSCR5').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBSCR6').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBSCR7').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBSCR8').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBSLOTS').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBTHRES').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBTHRS1').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBTHRS1').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBTHRS2').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBTHRS3').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBTHRS4').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBTHRS5').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBTHRS6').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBTHRS7').G0070\n         AIF   ('&FIELDS(&CNTB,1)' EQ 'LCBTHRS8').G0070\n         MNOTE 8,'INVALID FIELD NAME &FIELDS(&CNTB,1)'\n.G0070   ANOP\n         DC    CL8'&FIELDS(&CNTB,1)',2F'-1'\n&CNTB    SETA  &CNTB+1\n         AGO   .G0060\n.G0080   ANOP\n&LABEL2  GDECSIA TRACE=&TRACE\n         GDECSIB OK=&OK,NOTOK=&NOTOK,EODAD=&EODAD,                     X\n               PARMLIST=&PARMLIST\n         AGO   .Z0010\n.*\n.*     TYPE=REPORT\n.*\n.H0010   AIF   ('&TYPE' NE 'REPORT').I0010\n         AIF   ('&PARMLIST' EQ '').H0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .H0030\n.H0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.H0030   ANOP\n         USING &LBL.DSECT,R1\n         MVC   &LBL.COMMAND,=CL2'50'\n         GDECSIA TRACE=&TRACE\n         GDECSIB OK=&OK,NOTOK=&NOTOK,EODAD=&EODAD,                     X\n               PARMLIST=&PARMLIST\n         AGO   .Z0010\n.*\n.*     HERE ARE THE MACRO EXPANSIONS FOR CALLING THE I/O MODULE\n.*\n.**********************************************************************\n.*\n.*     HERE ARE THE MACRO EXPANSIONS FOR SUPPORT ROUTINES\n.*\n.*     TYPE=IOROUTINE\n.*\n.I0010   AIF   ('&TYPE' NE 'IOROUTINE').Z0020\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n*                                                                     *\n* GDECSI RETURNS CATALOG ENTRIES BASED ON REQUEST AND FILETERS        *\n*                                                                     *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         GDECSI TYPE=DSECT,NAME=&NAME\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&ROUTCA  GDESTART R12\n         L     R10,0(1)\n         USING &LBL.DSECT,R10\n         LA    R11,&LBL.GDEDSECT\n         USING &LBL.GDEDSECT,R11\n         MVC   &LBL.RETCODE,=CL2'00'\n         MVC   &LBL.RETR15,=XL4'00'\n         MVC   &LBL.RETREASON,=XL4'00'\n* SHALL WE TRACE A BEFORE IMAGE?\n         CLC   &LBL.TRACE,=CL1'0'\n         BE    &LBL.MAIN0000\n         CLC   &LBL.TRACE,=CL1'2'\n         BE    &LBL.MAIN0000\n         GDEGOSUB &LBL.GDE0B000,&LBL.GDETRACESTART\n&LBL.MAIN0000 CLC &LBL.COMMAND,=CL2'00'\n         BNE   &LBL.MAIN0010\n         GDEGOSUB &LBL.GDE00000\n         B     &LBL.MAIN0200\n&LBL.MAIN0010 CLC &LBL.COMMAND,=CL2'10'\n         BNE   &LBL.MAIN0020\n         GDEGOSUB &LBL.GDE01000\n         B     &LBL.MAIN0200\n&LBL.MAIN0020 CLC &LBL.COMMAND,=CL2'20'\n         BNE   &LBL.MAIN0030\n         GDEGOSUB &LBL.GDE02000\n         B     &LBL.MAIN0200\n&LBL.MAIN0030 CLC &LBL.COMMAND,=CL2'30'\n         BNE   &LBL.MAIN0040\n         GDEGOSUB &LBL.GDE03000\n         B     &LBL.MAIN0200\n&LBL.MAIN0040 CLC &LBL.COMMAND,=CL2'40'\n         BNE   &LBL.MAIN0050\n         GDEGOSUB &LBL.GDE04000\n         B     &LBL.MAIN0200\n&LBL.MAIN0050 CLC &LBL.COMMAND,=CL2'50'\n         BNE   &LBL.MAIN0060\n         GDEGOSUB &LBL.GDE05000\n         B     &LBL.MAIN0200\n&LBL.MAIN0060 MVC &LBL.RETCODE,=CL2'08'\n         B     &LBL.MAIN0200\n&LBL.MAIN0200 CLC &LBL.TRACE,=CL1'0'\n         BE    &LBL.MAIN0900\n         CLC   &LBL.TRACE,=CL1'1'\n         BE    &LBL.MAIN0210\n         CLC   &LBL.RETCODE,=CL2'08'\n         BNH   &LBL.MAIN0900\n&LBL.MAIN0210 GDEGOSUB &LBL.GDE0B000,&LBL.GDETRACEEND\n&LBL.MAIN0900 GDEEXIT\n&LBL.GDEDSECT       DS   0D\n&LBL.CALLINGPARMPTR DS  0F       POINTER TO RETURNCODE CONTROL BLOCK\n&LBL.GDEREASONCDPTR DS   CL4     POINTER TO RETURNCODE CONTROL BLOCK\n&LBL.GDEOPTIONSPTR  DS   CL4     POINTER TO OPTIONS CONTROL BLOCK\n&LBL.GDEWORKAREAPTR DS   CL4     POINTER TO WORKAREA CONTROL BLOCK\n&LBL.GDESEARCHR15   DS   CL4     R15 FROM CALL\n&LBL.GDEREASONCODE  DS   CL4     REASON CODE AREA FROM CALL\n&LBL.GDEOPTIONSSIZE DS   CL4     OPTIONS GETMAIN SIZE\n&LBL.GDEWORKAREASIZE DS  CL4     WORKAREA GETMAIN SIZE\n&LBL.GDEFIELDPTR    DS   CL4     POINTER TO FIELDS IN APPLICATION\n&LBL.GDEFIELDSIZE   DS   CL4     FIELDS GETMAIN SIZE\n&LBL.GDECURCATPTR   DS   CL4     POINTER TO CURRENT CATALOG ENTRY\n&LBL.GDECURRENTPTR  DS   CL4     POINTER INTO WORKAREA OF NEXT ENTRY\n&LBL.GDECURRENTCAT  DS   CL44    LAST CATALOG FOUND\n&LBL.GDEINITSTATUS DC C'C'\n&LBL.GDEDOUBLE      DS   D\n&LBL.GDEALIASCNT DS PL6          COUNT OF ALIAS ENTRIES\n&LBL.GDEALIASCNTERR DS PL6       COUNT OF ALIAS ENTRIES\n&LBL.GDEAIXCNT      DS   PL6     COUNT OF ALTERNATE INDEX ENTRIES\n&LBL.GDEAIXCNTERR   DS   PL6     COUNT OF ALTERNATE INDEX ENTRIES\n&LBL.GDECLUSTERCNT  DS   PL6     COUNT OF CLUSTER ENTRIES\n&LBL.GDECLUSTERCNTERR DS PL6     COUNT OF CLUSTER ENTRIES\n&LBL.GDEDATACNT     DS   PL6     COUNT OF VSAM DATA ENTRIES\n&LBL.GDEDATACNTERR  DS   PL6     COUNT OF VSAM DATA ENTRIES\n&LBL.GDEGDGCNT      DS   PL6     COUNT OF GDG ENTRIES\n&LBL.GDEGDGCNTERR   DS   PL6     COUNT OF GDG ENTRIES\n&LBL.GDEGDSCNT      DS   PL6     COUNT OF GDG ENTRIES\n&LBL.GDEGDSCNTERR   DS   PL6     COUNT OF GDG ENTRIES\n&LBL.GDEINDEXCNT    DS   PL6     COUNT OF VSAM INDEX ENTRIES\n&LBL.GDEINDEXCNTERR DS   PL6     COUNT OF VSAM INDEX ENTRIES\n&LBL.GDENONVSAMCNT  DS   PL6     COUNT OF NONVSAM ENTRIES\n&LBL.GDENONVSAMCNTERR DS PL6     COUNT OF NONVSAM ENTRIES\n&LBL.GDEPATHCNT     DS   PL6     COUNT OF PATH ENTRIES\n&LBL.GDEPATHCNTERR  DS   PL6     COUNT OF PATH ENTRIES\n&LBL.GDEUSERCATCNT  DS   PL6     COUNT OF USERCAT ENTRIES\n&LBL.GDEUSERCATCNTERR DS PL6     COUNT OF USERCAT ENTRIES\n&LBL.GDEALTVOLUMECNT DS PL6      COUNT OF ALTVOLUME ENTRIES\n&LBL.GDEALTVOLUMECNTERR DS PL6   COUNT OF ALTVOLUME ENTRIES\n&LBL.GDEALTLIBRARYCNT DS PL6     COUNT OF ALTLIBRARY ENTRIES\n&LBL.GDEALTLIBRARYCNTERR DS PL6  COUNT OF ALTLIBRARY ENTRIES\n&LBL.GDETOTALCNT    DS   PL6     TOTAL COUNT OF ENTRIES RETURNED\n&LBL.GDEERRORCNT    DS   PL6     TOTAL COUNT OF ENTRIES RETURNED\n&LBL.GDEDEND    DS 0F\n&LBL.GDECAP1ROUT DC F'-1'\n&LBL.GDECAP1     DS 0F\n&LBL.GDECAP1FUNC DC CL1' '\n&LBL.GDECAP1HEX  DC CL1' '\n&LBL.GDECAP1DDN  DC CL8' '\n&LBL.GDECAP1LEN  DC CL2' '\n&LBL.GDECAP1LNBK DC CL2' '\n&LBL.GDECAP1ID   DC CL10' '\n&LBL.GDECAP1LPP  DC CL2' '\n&LBL.GDECAP1NP   DC CL1' '\n&LBL.GDECAP1DNP  DC CL1' '\n&LBL.GDECAP1RNP  DC CL1' '\n&LBL.GDECAP1RTCD DC CL2' '\n&LBL.GDECAP2     DC CL133' '\n&LBL.GDECAH1     DC CL60' ',CL73'INTERNAL TRACE OF VSAM ROUTINE'\n&LBL.GDECBP1ROUT DC F'-1'\n&LBL.GDECBP1     DS 0F\n&LBL.GDECBP1FUNC DC CL1' '\n&LBL.GDECBP1HEX  DC CL1' '\n&LBL.GDECBP1DDN  DC CL8' '\n&LBL.GDECBP1LEN  DC CL2' '\n&LBL.GDECBP1LNBK DC CL2' '\n&LBL.GDECBP1ID   DC CL10' '\n&LBL.GDECBP1LPP  DC CL2' '\n&LBL.GDECBP1NP   DC CL1' '\n&LBL.GDECBP1DNP  DC CL1' '\n&LBL.GDECBP1RNP  DC CL1' '\n&LBL.GDECBP1RTCD DC CL2' '\n&LBL.GDECBP3     DC CL133' '\n&LBL.GDECBH2     DC CL133' '\n&LBL.GDETRACESTART DC C'1'\n&LBL.GDETRACEEND   DC C'2'\n         GDEAMODE STORAGE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n* GDE00000 INITIALIZE THE PARMS                                       *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE00000 GDESUBST\n         CLI   &LBL.GDEINITSTATUS,C'C'     STATUS CLOSED?\n         BNE   &LBL.GDE00800               SET RETURN CODE - EXIT\n         ZAP   &LBL.GDEERRORCNT,=P'0'\n         ZAP   &LBL.GDEAIXCNT,=P'0'\n         ZAP   &LBL.GDEAIXCNTERR,=P'0'\n         ZAP   &LBL.GDECLUSTERCNT,=P'0'\n         ZAP   &LBL.GDECLUSTERCNTERR,=P'0'\n         ZAP   &LBL.GDEDATACNT,=P'0'\n         ZAP   &LBL.GDEDATACNTERR,=P'0'\n         ZAP   &LBL.GDEGDGCNT,=P'0'\n         ZAP   &LBL.GDEGDGCNTERR,=P'0'\n         ZAP   &LBL.GDEGDSCNT,=P'0'\n         ZAP   &LBL.GDEGDSCNTERR,=P'0'\n         ZAP   &LBL.GDEINDEXCNT,=P'0'\n         ZAP   &LBL.GDEINDEXCNTERR,=P'0'\n         ZAP   &LBL.GDENONVSAMCNT,=P'0'\n         ZAP   &LBL.GDENONVSAMCNTERR,=P'0'\n         ZAP   &LBL.GDEALIASCNT,=P'0'\n         ZAP   &LBL.GDEALIASCNTERR,=P'0'\n         ZAP   &LBL.GDEALTVOLUMECNT,=P'0'\n         ZAP   &LBL.GDEALTVOLUMECNTERR,=P'0'\n         ZAP   &LBL.GDEALTLIBRARYCNT,=P'0'\n         ZAP   &LBL.GDEALTLIBRARYCNTERR,=P'0'\n         ZAP   &LBL.GDEALIASCNT,=P'0'\n         ZAP   &LBL.GDEALIASCNTERR,=P'0'\n         ZAP   &LBL.GDEALTVOLUMECNT,=P'0'\n         ZAP   &LBL.GDEALTVOLUMECNTERR,=P'0'\n         ZAP   &LBL.GDEPATHCNT,=P'0'\n         ZAP   &LBL.GDEPATHCNTERR,=P'0'\n         ZAP   &LBL.GDEUSERCATCNT,=P'0'\n         ZAP   &LBL.GDEUSERCATCNTERR,=P'0'\n         ZAP   &LBL.GDETOTALCNT,=P'0'\n         MVC   &LBL.GDEWORKAREAPTR,=XL4'00'\n         MVC   &LBL.GDEWORKAREASIZE,=XL4'00'\n         MVC   &LBL.GDEFIELDPTR,=XL4'00'\n         MVC   &LBL.GDEFIELDSIZE,=XL4'00'\n         MVC   &LBL.GDECURRENTPTR,=XL4'00'\n         L     R2,&LBL.MAXSTORAGE\n         LTR   R2,R2\n         BZ    &LBL.GDE00810\n         C     R2,=A(1024)\n         BL    &LBL.GDE00810\n         C     R2,=A(1024*1024)\n         BH    &LBL.GDE00810\n         STORAGE OBTAIN,LENGTH=(R2)\n         ST    R1,&LBL.GDEWORKAREAPTR\n         ST    R2,&LBL.GDEWORKAREASIZE\n         L     R2,=AL4((8*100)+(CSIENTS-CSIFILTK))\n         STORAGE OBTAIN,LENGTH=(R2)\n         ST    R1,&LBL.GDEOPTIONSPTR\n         ST    R2,&LBL.GDEOPTIONSSIZE\n         L     R2,=AL4((8*102))\n         STORAGE OBTAIN,LENGTH=(R2)\n         ST    R1,&LBL.GDEFIELDPTR\n         ST    R2,&LBL.GDEFIELDSIZE\n         LA    R2,&LBL.GDEREASONCODE\n         ST    R2,&LBL.GDEREASONCDPTR\n         XC    &LBL.GDEREASONCODE,&LBL.GDEREASONCODE\n         MVI   &LBL.GDEINITSTATUS,C'O'\n         L     R8,&LBL.GDEOPTIONSPTR\n         USING CSIFIELD,R8\n         MVC   CSIFILTK,=CL44' '\n         MVC   CSICATNM,=CL44' '\n         MVC   CSIRESNM,=CL44' '\n         MVC   CSIDTYPD,=CL16' '\n         MVI   CSICLDI,C' '\n         MVI   CSIRESUM,C' '\n         MVI   CSIS1CAT,C'Y'\n         MVI   CSIRESRV,X'00'\n         MVC   CSINUMEN,=X'0000'\n         MVC   CSIFLDNM,=CL8' '\n         DROP  R8\n         L     R8,&LBL.GDEWORKAREAPTR\n         USING CSIRWORK,R8\n         MVC   CSIUSRLN,&LBL.GDEWORKAREASIZE\n         DROP  R8\n         B     &LBL.GDE00900\n&LBL.GDE00800 MVC &LBL.RETCODE,=CL2'08'\n         B     &LBL.GDE00910\n&LBL.GDE00810 MVC &LBL.RETCODE,=CL2'09'\n         B     &LBL.GDE00910\n&LBL.GDE00900 XR R15,R15\n         B     &LBL.GDE00920\n&LBL.GDE00910 LA R15,4\n         B     &LBL.GDE00920\n&LBL.GDE00920 GDESUBEN\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n* GDE01000 RETURN THE NEXT ITEM TO THE PROGRAM                        *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE01000 GDESUBST\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n*        OTHER ROUTINES MUST SET R IF WORKAREA IS READY\n*        GDECURRENTPTR SET WE THIS ROUTINE STARTS\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         CLI   &LBL.GDEINITSTATUS,C'R'        STATUS SEARCH?\n         BNE   &LBL.GDE01810                  SET RETURN CODE - EXIT\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n*        GET ADDRESSABILITY\n*        R11   IS OUR GENERAL WORK AREA\n*        R10   IS PARM AREA\n*        R9    IS RETURNED AREA\n*        R8    IS OPTIONS AREA\n*        R7    IS TARGET APPLICATION FIELDS\n*        GDECURRENTPTR MUST BE KEPT UP TO DATE IN THIS ROUTINE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE01001 EQU *\n         L     R9,&LBL.GDEWORKAREAPTR         GET WORKAREA ADDRESS\n         USING CSIRWORK,R9\n         L     R8,&LBL.GDEFIELDPTR            THE FIRST ARE THE CAT\n         L     R7,&LBL.GDEOPTIONSPTR          GET OPTIONS ADDRESS\n         USING CSIFIELD,R7\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n*        END OF DATA?\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         L     R5,&LBL.GDECURRENTPTR          GET POINTER INTO WORKAREA\n         SR    R5,R9                          ANY MORE ROOM?\n         C     R5,CSIUSDLN                    ANY MORE ROOM?\n         BL    &LBL.GDE01010                  Y:BRANCH\n         GDEGOSUB &LBL.GDE06000               GET THE NEXT WORKAREA\n         BNZ   &LBL.GDE01920                  ERROR:BRANCH\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n*        MOVE BACK FIRST AREA - THE CURRENT CATALOG\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE01010 EQU *\n         L     R5,&LBL.GDECURCATPTR           GET LATEST CAT POINTER\n         LM    R2,R3,0(R8)                    GET THE ADDRESS OF CAT\n         LTR   R2,R2                          ADDRESS OK?\n         BZ    &LBL.GDE01810                  NO:BRANCH\n         BCTR  R3,R0                          SET LENGTH\n         MVC   0(*-*,R2),0(R5)                MOVE CURRENT CAT TO APP\n         EX    R3,*-6                         MOVE CURRENT CAT TO APP\n         LA    R8,8(R8)                       MOVE TO NEXT AREA\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n*        MOVE BACK BLANKS TO ALL APP AREAS\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         LA    R5,8(R8)                       MOVE TO NEXT AREA\n         LH    R6,CSINUMEN                    HOW MANY ENTRIES HAVE WE\n&LBL.GDE01020 EQU *\n         LM    R2,R3,0(R5)                    POINT TO APP AREA\n         LTR   R2,R2                          ADDRESS OK?\n         BZ    &LBL.GDE01820                  NO:BRANCH\n         BCTR  R3,R0                          SET LENGTH\n         MVC   0(*-*,R2),=CL44' '             MOVE TO APP AREA\n         EX    R3,*-6                         MOVE TO APP AREA\n         LA    R5,8(R5)                       NEXT ENTRY\n         BCT   R6,&LBL.GDE01020               TIL 0 DO US PART\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n*        MOVE BACK SECOND AREA- THE CURRENT ENTRY\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         L     R5,&LBL.GDECURRENTPTR          GET LATEST ENTRY POINTER\n         LM    R2,R3,0(R8)                    GET THE ADDRESS OF ENTRY\n         LTR   R2,R2                          ADDRESS OK?\n         BZ    &LBL.GDE01830                  NO:BRANCH\n         CLI   1(R5),X'F0'                    IS THIS A CATALOG?\n         BNE   &LBL.GDE01025                  NO:BRANCH\n         ST    R5,&LBL.GDECURCATPTR           SAVE AS CURRENT CAT\n         MVC   &LBL.GDECURRENTCAT,2(R5)       SAVE FOR PRINTOUT\n         LA    R5,50(R5)                      BYPASS CATLG\n         ST    R5,&LBL.GDECURRENTPTR          ANY MORE?\n         B     &LBL.GDE01001                   GO FIND OUT!\n&LBL.GDE01025 EQU *\n         MVC   0(50,R2),0(R5)                 MOVE CURRENT ENTRY TO APP\n*                                              WITH ERROR CODES\n         GDEGOSUB &LBL.GDE07000               GO COUNT ENTRY TYPE\n         TM    0(R5),X'40'                    ERROR?\n         BO    &LBL.GDE01040                  NO:BRANCH\n         MVC   46(4,R2),=XL4'00'              OVER WRITE RETURN CODE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n*        MOVE DATA FIELDS TO APP AREA\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         LA    R8,8(R8)                       MOVE TO NEXT AREA\n         LH    R6,CSINUMEN                    HOW MANY ENTRIES HAVE WE\n         LA    R5,50(R5)                      POINT TO FIRST LENGTH HWD\n         LR    R4,R5                          R4 POINTS TO FIRST DATA\n         LH    R3,CSINUMEN                    R4 POINTS TO FIRST DATA\n         SLL   R3,1                           R4 POINTS TO FIRST DATA\n         AR    R4,R3                          R4 POINTS TO FIRST DATA\n&LBL.GDE01030 EQU *\n         LM    R2,R3,0(R8)                    POINT TO APP AREA\n         LH    R1,0(R5)                       SET LENGTH\n         LTR   R1,R1                          ANY LENGTH\n         BZ    &LBL.GDE01035                  NO-LEAVE BLANKS\n         BH    &LBL.GDE01033                  YES-GO MOVE IT\n         BCTR  R3,R0                           MOVE * IN\n         MVC   0(*-*,R2),=44C'*'               MOVE * IN\n         EX    R3,*-6                          MOVE * IN\n         B     &LBL.GDE01035                   AND CONTINUE\n&LBL.GDE01033 EQU *\n         CR    R3,R1                          USE SHORTER LENGTH\n         BNH   &LBL.GDE01034                  APP AREA TO SHORT-USE IT\n         LR    R3,R1                          APP AREA TO SHORT-USE IT\n&LBL.GDE01034 EQU *\n         BCTR  R3,R0                          SET LENGTH\n         MVC   0(*-*,R2),0(R4)                MOVE TO APP AREA\n         EX    R3,*-6                         MOVE TO APP AREA\n         LA    R4,0(R1,R4)                    NEXT DATA AREA\n&LBL.GDE01035 EQU *\n         LA    R8,8(R8)                       NEXT ENTRY\n         LA    R5,2(R5)                       NEXT LENGTH AREA\n         BCT   R6,&LBL.GDE01030               TIL 0 DO US PART\n         L     R5,&LBL.GDECURRENTPTR          GET LATEST ENTRY POINTER\n         LA    R5,46(R5)                      CURRENT POINTER\n         AH    R5,0(R5)                       CURRENT POINTER\n         ST    R5,&LBL.GDECURRENTPTR          UPDATE CURRENT POINTER\n         B     &LBL.GDE01900                  AND EXIT\n&LBL.GDE01040 EQU *\n         L     R5,&LBL.GDECURRENTPTR          GET LATEST ENTRY POINTER\n         LA    R5,50(R5)                      CURRENT POINTER\n         ST    R5,&LBL.GDECURRENTPTR          UPDATE CURRENT POINTER\n         B     &LBL.GDE01900                  AND EXIT\n         DROP  R7,R9\n&LBL.GDE01800 MVC &LBL.RETCODE,=CL2'08'\n         B     &LBL.GDE01910\n&LBL.GDE01810 MVC &LBL.RETCODE,=CL2'10'\n         B     &LBL.GDE01910\n&LBL.GDE01820 MVC &LBL.RETCODE,=CL2'11'\n         B     &LBL.GDE01910\n&LBL.GDE01830 MVC &LBL.RETCODE,=CL2'12'\n         B     &LBL.GDE01910\n&LBL.GDE01900 XR R15,R15\n         B     &LBL.GDE01920\n&LBL.GDE01910 LA R15,4\n         B     &LBL.GDE01920\n&LBL.GDE01920 GDESUBEN\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n* GDE02000 CLEANUP TO EXIT                                            *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE02000 GDESUBST\n         CLI   &LBL.GDEINITSTATUS,C'C'        STATUS CLOSED?\n         BE    &LBL.GDE02900                  OUR WORK IS DONE\n         L     R3,&LBL.GDEWORKAREAPTR\n         L     R2,&LBL.GDEWORKAREASIZE\n         STORAGE RELEASE,LENGTH=(2),ADDR=(3) FREE KEY STORAGE\n         L     R3,&LBL.GDEOPTIONSPTR\n         L     R2,&LBL.GDEOPTIONSSIZE\n         STORAGE RELEASE,LENGTH=(2),ADDR=(3) FREE KEY STORAGE\n         L     R3,&LBL.GDEFIELDPTR\n         L     R2,&LBL.GDEFIELDSIZE\n         STORAGE RELEASE,LENGTH=(2),ADDR=(3) FREE KEY STORAGE\n         MVI   &LBL.GDEINITSTATUS,C'C'\n         B     &LBL.GDE02900\n&LBL.GDE02900 XR R15,R15\n         B     &LBL.GDE02920\n&LBL.GDE02910 LA R15,4\n         B     &LBL.GDE02920\n&LBL.GDE02920 GDESUBEN\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n* GDE03000 SEARCH THE CATALOG                                         *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE03000 GDESUBST\n         CLI   &LBL.GDEINITSTATUS,C'R'        STATUS SETUP?\n         BE    &LBL.GDE03001                  NO-LOGIC ERROR\n         CLI   &LBL.GDEINITSTATUS,C'S'        STATUS SETUP?\n         BNE   &LBL.GDE03800                  NO-LOGIC ERROR\n&LBL.GDE03001  EQU *\n         CLI   &LBL.GDE03FIRST,C'1'           FIRST TIME?\n         BNE   &LBL.GDE03010                  NO-BRANCH\n         MVI   &LBL.GDE03FIRST,C'2'           FIRST TIME CHANGE\n         LOAD  EP=IGGCSI00\n         ST    R0,&LBL.GDE03CSI\n&LBL.GDE03010  EQU *\n         L     R15,&LBL.GDE03CSI\n         LA    R1,&LBL.CALLINGPARMPTR\n         GDEAMODE FORCE31\n         CALL  (15)\n         ST    R15,&LBL.RETR15\n         GDEAMODE FORCE24\n         MVC   &LBL.RETREASON,&LBL.GDEREASONCODE\n         C     R15,=F'8'\n         BNL   &LBL.GDE03810\n         LTR   R15,R15\n         BZ    &LBL.GDE03020\n         CLC   &LBL.RETREASON,=XL4'C6E20464'\n         BE    &LBL.GDE03020\n         B     &LBL.GDE03810\n&LBL.GDE03020  EQU *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n*        GET ADDRESSABILITY\n*        R11   IS OUR GENERAL WORK AREA\n*        R10   IS PARM AREA\n*        R9    IS RETURNED AREA\n*        R8    IS OPTIONS AREA\n*        R7    IS TARGET APPLICATION FIELDS\n*        GDECURRENTPTR MUST BE KEPT UP TO DATE IN THIS ROUTINE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         L     R9,&LBL.GDEWORKAREAPTR         GET WORKAREA ADDRESS\n         USING CSIRWORK,R9\n         L     R8,&LBL.GDEFIELDPTR            THE FIRST ARE THE CAT\n         L     R7,&LBL.GDEOPTIONSPTR          GET OPTIONS ADDRESS\n         USING CSIFIELD,R7\n         LA    R6,CSICCATL\n         ST    R6,&LBL.GDECURCATPTR\n         MVC   &LBL.GDECURRENTCAT,2(R6)\n         LA    R6,CSIENTRY\n         ST    R6,&LBL.GDECURRENTPTR\n         MVI   &LBL.GDEINITSTATUS,C'R'\n         B     &LBL.GDE03900\n         DROP  R7,R9\n&LBL.GDE03800 MVC &LBL.RETCODE,=CL2'08'\n         B     &LBL.GDE03910\n&LBL.GDE03810 MVC &LBL.RETCODE,=CL2'31'\n         B     &LBL.GDE03910\n&LBL.GDE03900 XR R15,R15\n         B     &LBL.GDE03920\n&LBL.GDE03910 LA R15,4\n         B     &LBL.GDE03920\n&LBL.GDE03920 GDESUBEN\n&LBL.GDE03CSI   DC F'-1'\n&LBL.GDE03FIRST DC C'1'\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n* GDE04000 DO THE SETUP                                               *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE04000 GDESUBST\n         CLI   &LBL.GDEINITSTATUS,C'C'        ARE WE CLOSED?\n         BE    &LBL.GDE04800                  YES-LOGIC ERROR\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n*        GET ADDRESSABILITY\n*        R11   IS OUR GENERAL WORK AREA\n*        R10   IS PARM AREA\n*        R9    IS RETURNED AREA\n*        R8    IS TARGET APPLICATION FIELDS\n*        R7    IS OPTIONS AREA\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         L     R9,&LBL.GDEWORKAREAPTR         GET WORKAREA ADDRESS\n         USING CSIRWORK,R9\n         L     R8,&LBL.GDEFIELDPTR            THE FIRST ARE THE CAT\n         L     R7,&LBL.GDEOPTIONSPTR          GET OPTIONS ADDRESS\n         USING CSIFIELD,R7\n         L     R6,&LBL.SETUPDATA\n         L     R5,0(R6)\n         MVC   CSIFILTK,0(R5)\n         L     R5,4(R6)\n         MVC   CSICATNM,0(R5)\n         MVC   CSIDTYPD,8(R6)\n         LH    R4,32(R6)\n         STH   R4,CSINUMEN\n         MVC   0(4,R8),24(R6)\n         MVC   8(4,R8),28(R6)\n         MVC   4(4,R8),=F'50'\n         MVC   12(4,R8),=F'50'\n         LTR   R4,R4\n         BNH   &LBL.GDE04020\n         LA    R5,36(R6)\n         LA    R3,CSIENTS\n         LA    R8,16(R8)\n&LBL.GDE04010  EQU *\n         MVC   0(8,R3),0(R5)\n         MVC   0(8,R8),8(R5)\n         LA    R3,8(R3)\n         LA    R8,8(R8)\n         LA    R5,16(R5)\n         BCT   R4,&LBL.GDE04010\n&LBL.GDE04020  EQU *\n         MVI   &LBL.GDEINITSTATUS,C'S'\n         B     &LBL.GDE04900\n         DROP  R7,R9\n&LBL.GDE04800 MVC &LBL.RETCODE,=CL2'08'\n         B     &LBL.GDE00910\n&LBL.GDE04810 MVC &LBL.RETCODE,=CL2'31'\n         B     &LBL.GDE00910\n&LBL.GDE04900 XR R15,R15\n         B     &LBL.GDE04920\n&LBL.GDE04910 LA R15,4\n         B     &LBL.GDE04920\n&LBL.GDE04920 GDESUBEN\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n* GDE05000 REPORT DATA                                                *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE05000 GDESUBST\n         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05OPEN\n         MVC   &LBL.GDECBP3(133),=CL133'0'\n         MVC   &LBL.GDECBP3+5(5),=C'NAME:'\n         MVC   &LBL.GDECBP3+10(8),=CL8'&NAME'\n         MVC   &LBL.GDECBP3+20(8),=C'CATALOG:'\n         MVC   &LBL.GDECBP3+28(44),&LBL.GDECURRENTCAT\n         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         MVC   &LBL.GDECBP3(133),=CL133' '\n         MVI   &LBL.GDECBP3,C'-'\n         MVC   &LBL.GDECBP3+13(59),=59C'.'\n         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05ALIAS),&LBL.GDE05ALIAS\n         MVC   &LBL.GDECBP3+51(2),=CL2'OK'\n         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK\n         OI    &LBL.GDEALIASCNT+5,X'0F'\n         ED    &LBL.GDECBP3+53(12),&LBL.GDEALIASCNT\n         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'\n         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK\n         OI    &LBL.GDEALIASCNTERR+5,X'0F'\n         ED    &LBL.GDECBP3+76(12),&LBL.GDEALIASCNTERR\n         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         MVI   &LBL.GDECBP3,C'-'\n         MVC   &LBL.GDECBP3+13(59),=59C'.'\n         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05AIX),&LBL.GDE05AIX\n         MVC   &LBL.GDECBP3+51(2),=CL2'OK'\n         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK\n         OI    &LBL.GDEAIXCNT+5,X'0F'\n         ED    &LBL.GDECBP3+53(12),&LBL.GDEAIXCNT\n         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'\n         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK\n         OI    &LBL.GDEAIXCNTERR+5,X'0F'\n         ED    &LBL.GDECBP3+76(12),&LBL.GDEAIXCNTERR\n         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         MVI   &LBL.GDECBP3,C'-'\n         MVC   &LBL.GDECBP3+13(59),=59C'.'\n         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05CLUSTER),&LBL.GDE05CLUSTER\n         MVC   &LBL.GDECBP3+51(2),=CL2'OK'\n         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK\n         OI    &LBL.GDECLUSTERCNT+5,X'0F'\n         ED    &LBL.GDECBP3+53(12),&LBL.GDECLUSTERCNT\n         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'\n         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK\n         OI    &LBL.GDECLUSTERCNTERR+5,X'0F'\n         ED    &LBL.GDECBP3+76(12),&LBL.GDECLUSTERCNTERR\n         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         MVI   &LBL.GDECBP3,C'-'\n         MVC   &LBL.GDECBP3+13(59),=59C'.'\n         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05DATA),&LBL.GDE05DATA\n         MVC   &LBL.GDECBP3+51(2),=CL2'OK'\n         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK\n         OI    &LBL.GDEDATACNT+5,X'0F'\n         ED    &LBL.GDECBP3+53(12),&LBL.GDEDATACNT\n         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'\n         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK\n         OI    &LBL.GDEDATACNTERR+5,X'0F'\n         ED    &LBL.GDECBP3+76(12),&LBL.GDEDATACNTERR\n         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         MVI   &LBL.GDECBP3,C'-'\n         MVC   &LBL.GDECBP3+13(59),=59C'.'\n         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05GDG),&LBL.GDE05GDG\n         MVC   &LBL.GDECBP3+51(2),=CL2'OK'\n         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK\n         OI    &LBL.GDEGDGCNT+5,X'0F'\n         ED    &LBL.GDECBP3+53(12),&LBL.GDEGDGCNT\n         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'\n         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK\n         OI    &LBL.GDEGDGCNTERR+5,X'0F'\n         ED    &LBL.GDECBP3+76(12),&LBL.GDEGDGCNTERR\n         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         MVI   &LBL.GDECBP3,C'-'\n         MVC   &LBL.GDECBP3+13(59),=59C'.'\n         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05GDS),&LBL.GDE05GDS\n         MVC   &LBL.GDECBP3+51(2),=CL2'OK'\n         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK\n         OI    &LBL.GDEGDSCNT+5,X'0F'\n         ED    &LBL.GDECBP3+53(12),&LBL.GDEGDSCNT\n         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'\n         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK\n         OI    &LBL.GDEGDSCNTERR+5,X'0F'\n         ED    &LBL.GDECBP3+76(12),&LBL.GDEGDSCNTERR\n         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         MVI   &LBL.GDECBP3,C'-'\n         MVC   &LBL.GDECBP3+13(59),=59C'.'\n         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05INDEX),&LBL.GDE05INDEX\n         MVC   &LBL.GDECBP3+51(2),=CL2'OK'\n         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK\n         OI    &LBL.GDEINDEXCNT+5,X'0F'\n         ED    &LBL.GDECBP3+53(12),&LBL.GDEINDEXCNT\n         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'\n         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK\n         OI    &LBL.GDEINDEXCNTERR+5,X'0F'\n         ED    &LBL.GDECBP3+76(12),&LBL.GDEINDEXCNTERR\n         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         MVI   &LBL.GDECBP3,C'-'\n         MVC   &LBL.GDECBP3+13(59),=59C'.'\n         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05NONVSAM),&LBL.GDE05NONVSAM\n         MVC   &LBL.GDECBP3+51(2),=CL2'OK'\n         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK\n         OI    &LBL.GDENONVSAMCNT+5,X'0F'\n         ED    &LBL.GDECBP3+53(12),&LBL.GDENONVSAMCNT\n         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'\n         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK\n         OI    &LBL.GDENONVSAMCNTERR+5,X'0F'\n         ED    &LBL.GDECBP3+76(12),&LBL.GDENONVSAMCNTERR\n         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         MVI   &LBL.GDECBP3,C'-'\n         MVC   &LBL.GDECBP3+13(59),=59C'.'\n         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05PATH),&LBL.GDE05PATH\n         MVC   &LBL.GDECBP3+51(2),=CL2'OK'\n         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK\n         OI    &LBL.GDEPATHCNT+5,X'0F'\n         ED    &LBL.GDECBP3+53(12),&LBL.GDEPATHCNT\n         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'\n         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK\n         OI    &LBL.GDEPATHCNTERR+5,X'0F'\n         ED    &LBL.GDECBP3+76(12),&LBL.GDEPATHCNTERR\n         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         MVI   &LBL.GDECBP3,C'-'\n         MVC   &LBL.GDECBP3+13(59),=59C'.'\n         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05USERCAT),&LBL.GDE05USERCAT\n         MVC   &LBL.GDECBP3+51(2),=CL2'OK'\n         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK\n         OI    &LBL.GDEUSERCATCNT+5,X'0F'\n         ED    &LBL.GDECBP3+53(12),&LBL.GDEUSERCATCNT\n         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'\n         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK\n         OI    &LBL.GDEUSERCATCNTERR+5,X'0F'\n         ED    &LBL.GDECBP3+76(12),&LBL.GDEUSERCATCNTERR\n         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         MVI   &LBL.GDECBP3,C'-'\n         MVC   &LBL.GDECBP3+13(59),=59C'.'\n       MVC &LBL.GDECBP3+13(L'&LBL.GDE05ALTLIBRARY),&LBL.GDE05ALTLIBRARY\n         MVC   &LBL.GDECBP3+51(2),=CL2'OK'\n         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK\n         OI    &LBL.GDEALTLIBRARYCNT+5,X'0F'\n         ED    &LBL.GDECBP3+53(12),&LBL.GDEALTLIBRARYCNT\n         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'\n         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK\n         OI    &LBL.GDEALTLIBRARYCNTERR+5,X'0F'\n         ED    &LBL.GDECBP3+76(12),&LBL.GDEALTLIBRARYCNTERR\n         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         MVI   &LBL.GDECBP3,C'-'\n         MVC   &LBL.GDECBP3+13(59),=59C'.'\n       MVC &LBL.GDECBP3+13(L'&LBL.GDE05ALTVOLUME),&LBL.GDE05ALTVOLUME\n         MVC   &LBL.GDECBP3+51(2),=CL2'OK'\n         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK\n         OI    &LBL.GDEALTVOLUMECNT+5,X'0F'\n         ED    &LBL.GDECBP3+53(12),&LBL.GDEALTVOLUMECNT\n         MVC   &LBL.GDECBP3+71(5),=CL5'ERROR'\n         MVC   &LBL.GDECBP3+76(12),&LBL.GDE05MASK\n         OI    &LBL.GDEALTVOLUMECNTERR+5,X'0F'\n         ED    &LBL.GDECBP3+76(12),&LBL.GDEALTVOLUMECNTERR\n         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         MVC   &LBL.GDECBP3(133),=CL133'-'\n         MVC   &LBL.GDECBP3+13(52),=52C'.'\n         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05ERROR),&LBL.GDE05ERROR\n         MVC   &LBL.GDECBP3+43(10),=10C'.'\n         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK\n         OI    &LBL.GDEERRORCNT+5,X'0F'\n         ED    &LBL.GDECBP3+53(12),&LBL.GDEERRORCNT\n         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         MVI   &LBL.GDECBP3,C'-'\n         MVC   &LBL.GDECBP3+13(52),=52C'.'\n         MVC   &LBL.GDECBP3+13(L'&LBL.GDE05TOTAL),&LBL.GDE05TOTAL\n         MVC   &LBL.GDECBP3+43(10),=10C'.'\n         MVC   &LBL.GDECBP3+53(12),&LBL.GDE05MASK\n         OI    &LBL.GDETOTALCNT+5,X'0F'\n         ED    &LBL.GDECBP3+53(12),&LBL.GDETOTALCNT\n         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05WRITE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         GDEGOSUB &LBL.GDE0C000,&LBL.GDE05CLOSE\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE05900 GDESUBEN\n&LBL.GDE05OPEN  DC   C'0'\n&LBL.GDE05WRITE DC   C'1'\n&LBL.GDE05CLOSE DC   C'7'\n&LBL.GDE05MASK  DC   XL12'4B2020202020202020202120'\n&LBL.GDE05AIX   DC   C'ALTERNATE INDEX COUNT (G)'\n&LBL.GDE05CLUSTER DC C'CLUSTER COUNT (C)'\n&LBL.GDE05DATA  DC   C'DATA COMPONENT COUNT (D)'\n&LBL.GDE05GDG   DC   C'GENERATION DATA GROUP COUNT (B)'\n&LBL.GDE05GDS   DC   C'GENERATION DATA SET COUNT (H)'\n&LBL.GDE05INDEX DC   C'INDEX COMPONEN COUNT (I)'\n&LBL.GDE05NONVSAM  DC C'NONVSAM COUNT (A)'\n&LBL.GDE05ALTLIBRARY DC C'ALT LIBRARY COUNT (L)'\n&LBL.GDE05ALTVOLUME  DC C'ALT VOLUME COUNT (V)'\n&LBL.GDE05ALIAS      DC C'ALIAS COUNT (X)'\n&LBL.GDE05PATH  DC   C'PATH COUNT (R)'\n&LBL.GDE05USERCAT DC C'USERCATALOG COUNT (U)'\n&LBL.GDE05TOTAL DC   C'TOTAL COUNT'\n&LBL.GDE05ERROR DC   C'ERROR COUNT'\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n* GDE06000 GET NEXT WORKAREA DURING NEXTITEM PROCESSING              *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE06000 GDESUBST\n         L     R7,&LBL.GDEOPTIONSPTR     GET OPTIONS ADDRESS\n         USING CSIFIELD,R7\n         CLI   CSIRESUM,C'Y'             CAN WE RESUME?\n         BE    &LBL.GDE06010             YES - BRANCH\n         MVC   &LBL.RETCODE,=CL2'04'     END OF DATA\n         B     &LBL.GDE06910             YES - BRANCH\n&LBL.GDE06010  EQU *\n         GDEGOSUB &LBL.GDE03000          RESUME READS\n         B     &LBL.GDE06920             AND EXIT\n         DROP  R7\n&LBL.GDE06810  EQU *\n         MVC   &LBL.RETCODE,=CL2'08'     LOGIC ERROR\n         B     &LBL.GDE06910             YES - BRANCH\n&LBL.GDE06900 XR R15,R15\n         B     &LBL.GDE06920             AND EXIT\n&LBL.GDE06910 LA R15,4\n         B     &LBL.GDE06920             AND EXIT\n&LBL.GDE06920 GDESUBEN\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n* GDE07000 COUNT RECORD TYPE                                        *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE07000 GDESUBST\n*        1(R5) POINTS TO RECORD TYPE\n*        0(R5) POINTS TO RECORD FLAGS\n         LA    R4,&LBL.GDEAIXCNT\n         CLI   1(R5),C'G'\n         BE    &LBL.GDE07010\n         LA    R4,&LBL.GDECLUSTERCNT\n         CLI   1(R5),C'C'\n         BE    &LBL.GDE07010\n         LA    R4,&LBL.GDEDATACNT\n         CLI   1(R5),C'D'\n         BE    &LBL.GDE07010\n         LA    R4,&LBL.GDEGDGCNT\n         CLI   1(R5),C'B'\n         BE    &LBL.GDE07010\n         LA    R4,&LBL.GDEGDSCNT\n         CLI   1(R5),C'H'\n         BE    &LBL.GDE07010\n         LA    R4,&LBL.GDEINDEXCNT\n         CLI   1(R5),C'I'\n         BE    &LBL.GDE07010\n         LA    R4,&LBL.GDENONVSAMCNT\n         CLI   1(R5),C'A'\n         BE    &LBL.GDE07010\n         LA    R4,&LBL.GDEALTLIBRARYCNT\n         CLI   1(R5),C'L'\n         BE    &LBL.GDE07010\n         LA    R4,&LBL.GDEALTVOLUMECNT\n         CLI   1(R5),C'W'\n         BE    &LBL.GDE07010\n         LA    R4,&LBL.GDEPATHCNT\n         CLI   1(R5),C'R'\n         BE    &LBL.GDE07010\n         LA    R4,&LBL.GDEALIASCNT\n         CLI   1(R5),C'X'\n         BE    &LBL.GDE07010\n         LA    R4,&LBL.GDEUSERCATCNT\n         CLI   1(R5),C'U'\n         BE    &LBL.GDE07010\n         B     &LBL.GDE07030\n&LBL.GDE07010 EQU *\n         TM    0(R5),X'40'\n         BO    &LBL.GDE07020\n         AP    0(6,R4),=P'1'\n         AP    &LBL.GDETOTALCNT,=P'1'\n         B     &LBL.GDE07900\n&LBL.GDE07020 EQU *\n         AP    6(6,R4),=P'1'\n&LBL.GDE07030 EQU *\n         AP    &LBL.GDEERRORCNT,=P'1'\n         B     &LBL.GDE07900\n&LBL.GDE07800  EQU *\n         MVC   &LBL.RETCODE,=CL2'08'     LOGIC ERROR\n         B     &LBL.GDE07910             YES - BRANCH\n&LBL.GDE07900 XR R15,R15\n         B     &LBL.GDE07920             AND EXIT\n&LBL.GDE07910 LA R15,4\n         B     &LBL.GDE07920             AND EXIT\n&LBL.GDE07920 GDESUBEN\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n* GDE0B000 PROCESS TRACING DISPLAY                                    *\n* LOGIC OF THIS ROUTINE IS                                            *\n*   IF OPEN CALL                                                      *\n*      IF BEFORE PICTURE                                              *\n*         OPEN PRINT FILE                                             *\n*      END                                                            *\n*   END                                                               *\n*   PRINT DATA AREA                                                   *\n*   IF CLOSE CALL                                                     *\n*      IF AFTER CALL                                                  *\n*         CLOSE PRINT FILE                                            *\n*      END                                                            *\n*   END                                                               *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE0B000 GDESUBST\n         CLI   &LBL.GDE0BFST,C'O'\n         BNE   &LBL.GDE0B001\n         CP    &LBL.GDEERRORCNT,&LBL.ERRORCNTMAX\n         BH    &LBL.GDE0B900\n&LBL.GDE0B001  EQU   *\n*  SAVE CALLING REGISTER\n         L     R2,0(R1)\n*  OPEN CALL AND BEFORE PICTURE NO BRANCH AROUND\n         CLI   0(R2),C'1'                    BEFORE?\n         BNE   &LBL.GDE0B010                 N:BRANCH\n         CLC   &LBL.COMMAND,=CL2'00'         OPEN CALL?\n         BNE   &LBL.GDE0B010                 N:BRANCH\n*  OPEN THE PRINTER FILE\n&LBL.GDE0B005  EQU   *\n         ZAP   &LBL.GDECAP1LPP,=P'53'\n         MVI   &LBL.GDECAP1NP,C'1'\n         MVI   &LBL.GDECAP1DNP,C'1'\n         MVI   &LBL.GDECAP1RNP,C'1'\n         MVI   &LBL.GDECAP1FUNC,C'1'\n         MVI   &LBL.GDECAP1HEX,C'8'\n         MVC   &LBL.GDECAP1LEN,=H'512'\n         MVC   &LBL.GDECAP1LNBK,=H'512'\n         MVC   &LBL.GDECAP1ID,=CL10'&ROUT02ID'\n         MVC   &LBL.GDECAP1DDN,=CL8'&ROUT02'\n         LOAD  EP=GDE001CA\n         ST    R0,&LBL.GDECAP1ROUT\n         L     R15,&LBL.GDECAP1ROUT\n         CALL  (15),(&LBL.GDECAP1,&LBL.GDECAP2),VL\n         MVI   &LBL.GDE0BFST,C'O'\n* PRINT THE DATA AREA\n&LBL.GDE0B010 CLI   &LBL.GDE0BFST,C'C'\n         BE    &LBL.GDE0B005\n         MVI   &LBL.GDECAP1FUNC,C'2'\n        MVC   &LBL.GDECAP2(45),=CL45'         INTERNAL TRACE AREA'\n         MVC   &LBL.GDECAP2+29(16),=CL16'- BEFORE DISPLAY'\n         CLI   0(R2),C'1'\n         BE    *+10\n         MVC   &LBL.GDECAP2+29(16),=CL16'- AFTER DISPLAY'\n         MVC   &LBL.GDECAP2+0(8),=CL8'&NAME'\n         MVI   &LBL.GDECAP1HEX,C'8'\n         MVC   &LBL.GDECAP1LEN,=AL2(45)\n         MVC   &LBL.GDECAP1LNBK,=AL2(45)\n         MVC   &LBL.GDECAP1ID,=CL10'&ROUT02ID'\n         MVC   &LBL.GDECAP1DDN,=CL8'&ROUT02'\n         L     R15,&LBL.GDECAP1ROUT\n         CALL  (15),(&LBL.GDECAP1,&LBL.GDECAP2,&LBL.GDECAH1),VL\n         MVI   &LBL.GDECAP1HEX,C'1'\n         MVC   &LBL.GDECAP2(133),=CL133'            CALLING PARMS'\n         MVC   &LBL.GDECAP2+3(8),=CL8'&NAME'\n         MVC   &LBL.GDECAP1ID,=CL10'&ROUT02ID'\n         MVC   &LBL.GDECAP1DDN,=CL8'&ROUT02'\n         L     R15,&LBL.GDECAP1ROUT\n         CALL  (15),(&LBL.GDECAP1,&LBL.GDECAP2,&LBL.GDECAH1),VL\n         MVC   &LBL.GDECAP1LEN,=AL2(&LBL.DSECT_LENGTH)\n         MVC   &LBL.GDECAP1LNBK,=AL2(&LBL.DSECT_LENGTH)\n         MVI   &LBL.GDECAP1HEX,C'7'\n         L     R15,&LBL.GDECAP1ROUT\n         CALL  (15),(&LBL.GDECAP1,(R10),&LBL.GDECAH1),VL\n         MVI   &LBL.GDECAP1HEX,C'1'\n         MVC   &LBL.GDECAP2(133),=CL133'            INTERNAL WORKAREA'\n         MVC   &LBL.GDECAP2+3(8),=CL8'&NAME'\n         MVC   &LBL.GDECAP1ID,=CL10'&ROUT02ID'\n         MVC   &LBL.GDECAP1DDN,=CL8'&ROUT02'\n         L     R15,&LBL.GDECAP1ROUT\n         CALL  (15),(&LBL.GDECAP1,&LBL.GDECAP2,&LBL.GDECAH1),VL\n         MVC   &LBL.GDECAP1LEN,=AL2(&LBL.GDEDEND-&LBL.GDEDSECT)\n         MVC   &LBL.GDECAP1LNBK,=AL2(&LBL.GDEDEND-&LBL.GDEDSECT)\n         MVI   &LBL.GDECAP1HEX,C'7'\n         LA    R9,&LBL.GDEDSECT     SET ARG ADDRESS\n         L     R15,&LBL.GDECAP1ROUT\n         CALL  (15),(&LBL.GDECAP1,(R9),&LBL.GDECAH1),VL\n         CLI   &LBL.GDEINITSTATUS,C'C'\n         BE    &LBL.GDE0B020\n         MVI   &LBL.GDECAP1HEX,C'1'\n      MVC   &LBL.GDECAP2(133),=CL133'            OPTIONS CONTROL BLOCK'\n         MVC   &LBL.GDECAP2+3(8),=CL8'&NAME'\n         MVC   &LBL.GDECAP1ID,=CL10'&ROUT02ID'\n         MVC   &LBL.GDECAP1DDN,=CL8'&ROUT02'\n         L     R15,&LBL.GDECAP1ROUT\n         CALL  (15),(&LBL.GDECAP1,&LBL.GDECAP2,&LBL.GDECAH1),VL\n         L     R8,&LBL.GDEOPTIONSPTR\n         USING CSIFIELD,R8\n         LA    R7,CSIENTS-CSIFIELD\n         LH    R6,CSINUMEN\n         DROP  R8\n         SLL   R6,3               TIMES 8\n         AR    R7,R6\n         STCM  R7,B'0011',&LBL.GDECAP1LEN\n         STCM  R7,B'0011',&LBL.GDECAP1LNBK\n         L     R9,&LBL.GDEOPTIONSPTR     GET MOVE FROM ADDRESS\n         MVI   &LBL.GDECAP1HEX,C'7'\n         L     R15,&LBL.GDECAP1ROUT\n         CALL  (15),(&LBL.GDECAP1,(R9),&LBL.GDECAH1),VL\n         CLI   &LBL.GDEINITSTATUS,C'R'\n         BNE   &LBL.GDE0B020\n         MVI   &LBL.GDECAP1HEX,C'1'\n         MVC   &LBL.GDECAP2(133),=CL133'            WORKAREA HEADER '\n         MVC   &LBL.GDECAP2+3(8),=CL8'&NAME'\n         MVC   &LBL.GDECAP1ID,=CL10'&ROUT02ID'\n         MVC   &LBL.GDECAP1DDN,=CL8'&ROUT02'\n         L     R15,&LBL.GDECAP1ROUT\n         CALL  (15),(&LBL.GDECAP1,&LBL.GDECAP2,&LBL.GDECAH1),VL\n         MVC   &LBL.GDECAP1LEN,=H'64'\n         MVC   &LBL.GDECAP1LNBK,=H'64'\n         L     R9,&LBL.GDEWORKAREAPTR   MOVE FROM ADDRESS\n         MVI   &LBL.GDECAP1HEX,C'7'\n         L     R15,&LBL.GDECAP1ROUT\n         CALL  (15),(&LBL.GDECAP1,(R9),&LBL.GDECAH1),VL\n         MVI   &LBL.GDECAP1HEX,C'1'\n   MVC   &LBL.GDECAP2(133),=CL133'            WORKAREA CURRENT POINTER'\n         MVC   &LBL.GDECAP2+3(8),=CL8'&NAME'        X\n         MVC   &LBL.GDECAP1ID,=CL10'&ROUT02ID'\n         MVC   &LBL.GDECAP1DDN,=CL8'&ROUT02'\n         L     R15,&LBL.GDECAP1ROUT\n         CALL  (15),(&LBL.GDECAP1,&LBL.GDECAP2,&LBL.GDECAH1),VL\n         MVC   &LBL.GDECAP1LEN,=H'0'\n         MVC   &LBL.GDECAP1LNBK,=H'0'\n         L     R9,&LBL.GDEWORKAREAPTR         GET WORKAREA ADDRESS\n         USING CSIRWORK,R9\n         L     R5,&LBL.GDECURRENTPTR\n         SR    R5,R9                          ANY LEFT?\n         C     R5,CSIUSDLN\n         BH    &LBL.GDE0B015                  Y:BRANCH\n         DROP  R9\n         L     R5,&LBL.GDECURRENTPTR\n         TM    0(R5),X'40'\n         BO    &LBL.GDE0B012\n         LA    R4,46\n         AH    R4,46(R5)\n         STCM  R4,B'0011',&LBL.GDECAP1LEN\n         STCM  R4,B'0011',&LBL.GDECAP1LNBK\n         B     &LBL.GDE0B015\n&LBL.GDE0B012  EQU *\n         MVC   &LBL.GDECAP1LEN,=H'50'\n         MVC   &LBL.GDECAP1LNBK,=H'50'\n&LBL.GDE0B015  EQU *\n         L     R9,&LBL.GDECURRENTPTR    MOVE FROM ADDRESS\n         MVI   &LBL.GDECAP1HEX,C'7'\n         L     R15,&LBL.GDECAP1ROUT\n         CALL  (15),(&LBL.GDECAP1,(R9),&LBL.GDECAH1),VL\n*  CLOSE CALL AND AFTER PICTURE NO BRANCH AROUND\n&LBL.GDE0B020 CLC   &LBL.COMMAND,=CL2'70'\n         BNE   &LBL.GDE0B900\n         CLI   0(R2),C'2'                    AFTER?\n         BNE   &LBL.GDE0B900                 N:BRANCH\n*  CLOSE THE PRINTER FILE\n         MVI   &LBL.GDECAP1FUNC,C'3'\n         MVC   &LBL.GDECAP1ID,=CL10'&ROUT02ID'\n         MVC   &LBL.GDECAP1DDN,=CL8'&ROUT02'\n         L     R15,&LBL.GDECAP1ROUT\n         CALL  (15),(&LBL.GDECAP1,&LBL.GDECAP2),VL\n         MVI   &LBL.GDE0BFST,C'C'\n         B     &LBL.GDE0B900\n&LBL.GDE0B900 LA    R15,0\n         B     &LBL.GDE0B920\n&LBL.GDE0B910 LA    R15,4\n         B     &LBL.GDE0B920\n&LBL.GDE0B920 GDESUBEN\n&LBL.GDE0BFST DC  C'C'\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n* GDE0C000 PROCESS STATISTICAL REPORT                                 *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n&LBL.GDE0C000 GDESUBST\n         L     R2,0(R1)\n         CLI   0(R2),C'0'\n         BE    &LBL.GDE0C010\n         CLI   0(R2),C'7'\n         BE    &LBL.GDE0C030\n         B     &LBL.GDE0C020\n&LBL.GDE0C010 ZAP   &LBL.GDECBP1LPP,=P'53'\n         MVI   &LBL.GDECBP1NP,C'1'\n         MVI   &LBL.GDECBP1DNP,C'1'\n         MVI   &LBL.GDECBP1RNP,C'1'\n         MVI   &LBL.GDECBP1FUNC,C'1'\n         MVI   &LBL.GDECBP1HEX,C'8'\n         MVC   &LBL.GDECBP1LEN,=H'512'\n         MVC   &LBL.GDECBP1LNBK,=H'512'\n         MVC   &LBL.GDECBP1ID,=CL10'&ROUT01ID'\n         MVC   &LBL.GDECBP1DDN,=CL8'&ROUT01'\n         LOAD  EP=GDE001CA\n         ST    R0,&LBL.GDECBP1ROUT\n         L     R15,&LBL.GDECBP1ROUT\n         CALL  (15),(&LBL.GDECBP1,&LBL.GDECBP3),VL\n         B     &LBL.GDE0C900\n&LBL.GDE0C020 MVI   &LBL.GDECBP1FUNC,C'2'\n         MVI   &LBL.GDECBP1HEX,C'1'\n         MVC   &LBL.GDECBP1LEN,=AL2(133)\n         MVC   &LBL.GDECBP1LNBK,=AL2(133)\n         MVC   &LBL.GDECBP1ID,=CL10'&ROUT01ID'\n         MVC   &LBL.GDECBP1DDN,=CL8'&ROUT01'\n         L     R15,&LBL.GDECBP1ROUT\n         CALL  (15),(&LBL.GDECBP1,&LBL.GDECBP3,&LBL.GDECBH2),VL\n         B     &LBL.GDE0C900\n&LBL.GDE0C030 MVI   &LBL.GDECBP1FUNC,C'3'\n         MVC   &LBL.GDECBP1ID,=CL10'&ROUT01ID'\n         MVC   &LBL.GDECBP1DDN,=CL8'&ROUT01'\n         L     R15,&LBL.GDECBP1ROUT\n         CALL  (15),(&LBL.GDECBP1,&LBL.GDECBP3),VL\n         B     &LBL.GDE0C900\n&LBL.GDE0C900 LA    R15,0\n         B     &LBL.GDE0C920\n&LBL.GDE0C910 LA    R15,4\n         B     &LBL.GDE0C920\n&LBL.GDE0C920 GDESUBEN\n         DROP  R10,R11\n         AIF   (&GDECSI).Z0010\n&GDECSI SETB   1\n         COPY  IGGCSINA\n         COPY  IGGCSIWA\nGDECSI   CSECT\n         DC    C'GDECSI -01.01                '\n.*\n.*     TYPE=IOROUTINE\n.*\n.**********************************************************************\n         AGO    .Z0010\n.Z0010   ANOP\n         MEXIT\n.Z0020   ANOP\n         MNOTE 8,'*** TYPE VALUE UNKNOWN, CHECK TYPE KEYWORK ***'\n         MEND\n         MACRO\n&LABEL   GDECSIA &TRACE=NO\n         GBLC  &LBL\n&LABEL   MVC   &LBL.RETCODE,=CL2'00'\n         AIF   ('&TRACE' EQ 'NO').A0010\n         AIF   ('&TRACE' EQ 'YES').A0020\n         AIF   ('&TRACE' EQ 'ERROR').A0030\n         MNOTE 0,'TRACE MUST BE YES, NO, OR ERROR - NO ASSUMED'\n.A0010   ANOP\n         MVC   &LBL.TRACE,=CL1'0'\n         AGO   .A0040\n.A0020   ANOP\n         MVC   &LBL.TRACE,=CL1'1'\n         AGO   .A0040\n.A0030   ANOP\n         MVC   &LBL.TRACE,=CL1'2'\n         AGO   .A0040\n.A0040   ANOP\n         MEND\n         MACRO\n&LABEL   GDECSIB &OK=,                                                 X\n               &NOTOK=,                                                X\n               &EODAD=,                                                X\n               &PARMLIST=\n         GBLC  &LBL,&ROUTCA\n         L     R15,=V(&ROUTCA)\n         CALL  (15),((R1)),VL\n         AIF   ('&PARMLIST' EQ '').A0010\n&LABEL   LA    R1,&PARMLIST\n         AGO   .A0020\n.A0010   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.A0020   ANOP\n         AIF   ('&OK' EQ '').A0050\n         CLC   &LBL.RETCODE,=CL2'00'\n         BE    &OK\n.A0050   ANOP\n         AIF   ('&NOTOK' EQ '').A0060\n         CLC   &LBL.RETCODE,=CL2'08'\n         BNL   &NOTOK\n.A0060   ANOP\n         AIF   ('&EODAD' EQ '').A0070\n         CLC   &LBL.RETCODE,=CL2'04'\n         BE    &EODAD\n.A0070   ANOP\n         DROP  R1\n         MEND\n* ------------------------------------------------------------------- *\n*                                                                     *\n* SHOW RLS STATUS OF A DATASET IN BATCH                               *\n*                                                                     *\n* CONTROL CARDS                                                       *\n*   SHOW=<DSNAME>      ASK THE STATUS OF THE RLS STATUS AND SHOW      *\n*                      VALUES IN THE OUTPUT REPORT                    *\n*   LEVEL=<CATALOG FILTER> LOOK IN THE CATALOG FOR ALL CLUSTERS THAT  *\n*                      MATCH THE FILTER                               *\n* DDNAMES                                                             *\n*   GDERLSA            INPUT CONTROL CARDS                            *\n*   GDERLS01           STATUS REPORT OF CONTROL CARDS <OPTIONAL>      *\n*   GDERLS02           OUTPUT FROM THE CALL           <OPTIONAL>      *\n*   GDERLS03           TRACE OF CALL TO ROUTINES      <OPTIONAL>      *\n*                                                                     *\n* EXAMPLE JCL                                                         *\n*   //GDERLSA  DD  *                                                  *\n*   SHOW=MY.BWO.DATASET                                               *\n*   LEVEL=MY.BWO.**                                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         GDECSI  TYPE=DSECT,NAME=CATALG,PROGRAM=GDERLS,PROGRAMID=CA,   X\n               STATID=06,TRACEID=06\n         GDETABLE TYPE=DSECT,NAME=RETRSN,PROGRAM=GDERLS,               X\n               STATID=06,TRACEID=06,PROGRAMID=CB\n         GDEPRINT TYPE=DSECT,REPORTDD=GDERLS,NAME=STATUS,              X\n               REPORTID=01\n         GDEPRINT TYPE=DSECT,REPORTDD=GDERLS,NAME=REPORT,              X\n               REPORTID=02\n         GDEPRINT TYPE=DSECT,REPORTDD=GDERLS,NAME=PARMDP,              X\n               REPORTID=03\n         GDEPRINT TYPE=DSECT,REPORTDD=GDERLS,NAME=BWOPRT,              X\n               REPORTID=04\n         GDEPRINT TYPE=DSECT,REPORTDD=GDERLS,NAME=RETRSN,              X\n               REPORTID=05\n* ------------------------------------------------------------------- *\n* PROGRAM LOGIC STARTS HERE                                           *\n* ------------------------------------------------------------------- *\nGDERLSBT GDESTART R12,R11\n         L     R10,=A(GDEDSECT)\n         USING GDEDSECT,R10\n         GDEGOSUB PROC1000\n         GDEGOSUB PROC2000\n         BNZ   MAIN9010\n         GDEGOSUB PROC3000\nMAIN9000 XR    R15,R15\n         B     MAIN9020\nMAIN9010 LA    R15,4\n         B     MAIN9020\nMAIN9020 GDEEXIT\n         LTORG\nGDEDSECT DS   0D\nIN1REC   DS    CL80\nGDERLSA DCB    DDNAME=GDERLSA,MACRF=(GM),DSORG=PS,                     X\n               RECFM=FB,LRECL=80,EODAD=PROC4910\nCURRENT_COMMAND  DC     CL5' '\nCURRENT_DSN      DC     CL44' '\nCURRENT_FILTER   DC     CL44' '\nCURRENT_DSNLEN   DC     AL4(0)\nREPORT01_SW      DC     C'?'\nREPORT02_SW      DC     C'?'\nREPORT03_SW      DC     C'?'\n***********************************************************************\n* TABLE RECORD AREAS\n***********************************************************************\nT01              DS    0CL8\nT01RETCODE       DS     CL4\nT01RSNCODE       DS     CL4\nT01RECLEN        EQU    *-T01\n***********************************************************************\n* PARMLIST FOR IGWARLS CALL\n***********************************************************************\nIGWARLS_PARMLIST DS   13A\nIGWARLS_RETCODE  DS     F    0  RETURN CODE\nIGWARLS_RSNCODE  DS     F    4  IGWARLS_RSNCODE\nIGWARLS_PROBDET  DS     D    8  PROBLEM DETERMINATION CODE\nIGWARLS_DSNLEN   DS     F    12 DATA SET NAME LENGTH\nIGWARLS_DSN      DS     CL44 16 DATA SET NAME\nIGWARLS_RECOVERYSTATUS  DS   F  20\nIGWARLS_LOGTYPE         DS   F  24\nIGWARLS_LOGSTREAMIDLEN  DS   F  28\nIGWARLS_LOGSTREAMID     DS   CL44 32\nIGWARLS_RLS_RECOVERY_TIMESTAMP_UTC    DS  CL8  36\nIGWARLS_RLS_RECOVERY_TIMESTAMP_LOCAL  DS  CL8  40\nIGWARLS_VSAM_QUIESCED   DS  F                 44\nIGWARLS_BWO             DS  F                 48\n***********************************************************************\n* IGWARLS_LOGTYPE NOTES\n*             F'1'        LOG NOT ON DEFINE CLUSTER STATEMENT\n*             F'2'        LOG=NONE\n*             F'3'        LOG=UNDO\n*             F'4'        LOG=ALL\n***********************************************************************\n* IGWARLS_RECOVERYSTATUS NOTES\n*             F'0'        RLS RECOVERY IS NOT PENDING FOR SPHERE\n*             F'1'        RLS RECOVERY IS PENDING FOR VSAM SPHERE\n***********************************************************************\n* IGWARLS_VSAM_QUIESCED NOTES\n*             F'0'        THE SPHERE IS NOT MARKED VSAM_QUIESCED\n*             F'1'        THE SPHERE IS MARKED VSAM_QUIESCED\n***********************************************************************\n* IGWARLS_BWO NOTES\n*             F'1'        BWO PARAMETER IS UNDEFINED\n*             F'2'        BWO=TYPECICS PROCESSING ALLOWED\n*             F'3'        BWO=NO BWO PROCESSING IS NOT ALLOWED\n*             F'4'        BWO=TYPEIMS PROCESSING ALLOWED\n*             F'5'        BWO=TYPEOTHER PROCESSING ALLOWED\n***********************************************************************\n         DS   0D\nCONVTOD  DC   CL16' '\n***********************************************************************\n* TIME MACRO WORK AREA\n* FIRST 8 BYTES TIME OF DAY HHMMSSTHMIJU0000\n* NEXT R BYTES IT DATE YYYYMMDD00\n* LAST FOUR ARE ZERO\n***********************************************************************\n***********************************************************************\n* PARMLIST FOR IGWABWO CALL\n***********************************************************************\nIGWABWO_PARMLIST DS   10A\nIGWABWO_RETCODE  DS     F    0  RETURN CODE\nIGWABWO_RSNCODE  DS     F    4  IGWABWO_RSNCODE\nIGWABWO_PROBDET  DS     D    8  PROBLEM DETERMINATION CODE\nIGWABWO_FUNCTON  DS     F    12 FUNCTION\nIGWABWO_DSNLEN   DS     F    16 DATA SET NAME LENGTH\nIGWABWO_DSN      DS     CL44 20 DATA SET NAME\nIGWABWO_SELECT   DC     F'3' 24 INTERESTED IN BWO FLAGS & RECOV POINT\nIGWABWO_BWOFLAGS DS    3F    28 BWO INDICATOR FLAGS\n                 ORG            IGWABWO_BWOFLAGS\nIGWABWO_BWOFLAG1 DS     F       BWO INDICATOR 1\nIGWABWO_BWOFLAG2 DS     F       BWO INDICATOR 2\nIGWABWO_BWOFLAG3 DS     F       BWO INDICATOR 3\n                 ORG\nIGWABWO_BWOTIME  DS     D    32 BWO RECOVERY POINT TIME\nIGWABWO_RESERVED DS    2D    36 RESERVED\n***********************************************************************\n* IGWABWO_FUNCTION NOTEST\n*             F'1'        READ THE VALUES\n*             F'2'        SET THE VALUSE\n***********************************************************************\nIGWABWO_READ     EQU    0       READ\nIGWABWO_SET      EQU    1       SET\n***********************************************************************\n* IGWABWO_SELECT  NOTES\n*             F'1'        INTERESTED IN BWO FLAGS\n*             F'2'        INTERESTED IN BWO RECOVERY POINT\n*             F'3'        INTERESTED IN BWO FLAGS & RECOV POINT\n***********************************************************************\nIGWABWO_WORKAREA DS CL9\nIGWABWO_HEXTABLE DC C'0123456789ABCDEF'\nIGWABWO_DATEANDTIME  DC   2F'0'\n*  1F    0CYYDDDF\n*        C = 00 FOR 1900\n*        C = 01 FOR 2000\n*        F IS SIGN\n*  1F    HHMMSSTF\n*        F IS SIGN\n***********************************************************************\nTIME_STORAGE   DC   4F'0'\n*  2F    HHMMSSTHMIJU0000  FOR TIME\n*  1F    0YYYYDDD\n*  1F    RESERVED\n***********************************************************************\n***********************************************************************\n*\n*  OUTPUT DETAIL LINES\n*\n*\n***********************************************************************\nPROC1DL1 DC    CL133'0'\nOUT1_DSNAME    EQU   PROC1DL1+1,44\nOUT1_RECOVERY  EQU   PROC1DL1+46,14\nOUT1_LOGTYPE   EQU   PROC1DL1+61,12\nOUT1_BWO       EQU   PROC1DL1+74,3\nOUT1_UTCTIME   EQU   PROC1DL1+79,24\nOUT1_RETCODE   EQU   PROC1DL1+104,8\nOUT1_BWODATE   EQU   PROC1DL1+113,10\nPROC1DL2 DC    CL133' '\nOUT1_LOGSTRM   EQU   PROC1DL2+1,44\nOUT1_BWOFLAGS  EQU   PROC1DL2+46,14\nOUT1_QUIESCED  EQU   PROC1DL2+61,12\nOUT1_LCLTIME   EQU   PROC1DL2+79,24\nOUT1_RSNCODE   EQU   PROC1DL2+104,8\nOUT1_BWOTIME   EQU   PROC1DL2+113,10\n***********************************************************************\n         GDEPRINT TYPE=PARMLIST,NAME=STATUS,                           X\n               REPORTID=01\n         GDEPRINT TYPE=PARMLIST,NAME=REPORT,                           X\n               REPORTID=02\n         GDEPRINT TYPE=PARMLIST,NAME=PARMDP,                           X\n               REPORTID=03\n         GDEPRINT TYPE=PARMLIST,NAME=BWOPRT,                           X\n               REPORTID=04\n         GDEPRINT TYPE=PARMLIST,NAME=RETRSN,                           X\n               REPORTID=05\n         GDECSI   TYPE=PARMLIST,NAME=CATALG\n         GDETABLE TYPE=PARMLIST,NAME=RETRSN\n***********************************************************************\n*                                                                     *\n* INITIAL SETUP LOGIC                                                 *\n*                                                                     *\n***********************************************************************\nPROC1000 GDESUBST\n         OPEN  (GDERLSA,INPUT)\n         MVI   REPORT01_SW,C'N'\n         GDEDDN GDERLS01,FOUND=PROC1010,NOTFOUND=PROC1020\nPROC1010 MVI   REPORT01_SW,C'Y'\n         GDEPRINT TYPE=OPEN,NAME=STATUS,                               X\n               TITLE='CONTROL STATEMENT PROCESSING FOR GDERLSBT',      X\n               HEADINGS=(PROC1HL1)\nPROC1020 MVI   REPORT02_SW,C'N'\n         GDEDDN GDERLS02,FOUND=PROC1030,NOTFOUND=PROC1040\nPROC1030 MVI   REPORT02_SW,C'Y'\n         GDEPRINT TYPE=OPEN,NAME=REPORT,                               X\n               TITLE='RLS STATUE REPORT',                              X\n               HEADINGS=(PROC1HL2,PROC1HL3)\nPROC1040 MVI   REPORT03_SW,C'N'\n         GDEDDN GDERLS03,FOUND=PROC1050,NOTFOUND=PROC1060\nPROC1050 MVI   REPORT03_SW,C'Y'\n         GDEPRINT TYPE=OPEN,NAME=PARMDP,                               X\n               TITLE='RLS CALLING TRACING REPORT',                     X\n               HEADINGS=(PROC1HL4,PROC1HL5)\nPROC1060 GDECSI TYPE=INITIALIZE,NAME=CATALG,TRACE=ERROR\nPROC1900 GDESUBEN\n*                   ----+----1----+----2----+----3----+----4----+----5\nPROC1HL1 DC    CL15'0'\n         DC    CL52'/----------------- CONTROL CARD -----------------/'\n         DC    CL42'/--------------- STATUS ---------------/'\n         DC    CL24' '\nPROC1HL2 DC    CL133'0/------------- DATA SET NAME --------------/ /-RLX\n               S RCVRY--/ /-LOG TYPE-/ BWO  /----UTC TIME STAMP----/ REX\n               T-CODE /-BWO RV-/          '\nPROC1HL3 DC    CL133' /------------- LOG STREAM ID --------------/ /-BWX\n               O FLAGS--/ /-QUIESCED-/ FLGS /---LOCAL TIME STAMP---/ RSX\n               N-CODE /-DT&&TM--/          '\nPROC1HL4 DC    CL133'0DATE  TIME ADDRESS         HEX DATA              X\n                                                                  DISPLX\n               AY DATA                    '\nPROC1HL5 DC    CL133' ---------- -------         ----------------------X\n               -------------------------------------------------- -----X\n               ---------------------------'\n***********************************************************************\n*                                                                     *\n* CALL READ FILE, CALL WRITE MESSAGES, TRACE IF WE NEED TO            *\n*                                                                     *\n***********************************************************************\nPROC2000 GDESUBST\nPROC2010 GDEGOSUB PROC4000\n         BNZ   PROC2900\n         GDEGOSUB PROC5000\n         B     PROC2010\nPROC2900 LA    R15,0\n         B     PROC2920\nPROC2910 LA    R15,4\n         B     PROC2920\nPROC2920 GDESUBEN\n***********************************************************************\n*                                                                     *\n* TERMINATION LOGIC                                                   *\n*                                                                     *\n***********************************************************************\nPROC3000 GDESUBST\n         CLOSE (GDERLSA,)\n         CLI   REPORT01_SW,C'N'\n         BE    PROC3010\n         MVC   PROC4_PRINT,=CL133' END OF PROCESSING '\n         GDEGOSUB SERV2000,PROC3_PRINT\n         GDEGOSUB SERV4000\n         GDEGOSUB SERV6000\n         GDEPRINT ,NAME=STATUS,TYPE=CLOSE\nPROC3010 CLI   REPORT02_SW,C'N'\n         BE    PROC3020\n         GDEPRINT ,NAME=REPORT,TYPE=CLOSE\nPROC3020 CLI   REPORT03_SW,C'N'\n         BE    PROC3030\n         GDEPRINT ,NAME=PARMDP,TYPE=CLOSE\nPROC3030 GDECSI TYPE=CLEANUP,NAME=CATALG,TRACE=NO\n         GDEDDN GDERLS06,FOUND=PROC3040,NOTFOUND=PROC3050\nPROC3040 GDECSI TYPE=REPORT,NAME=CATALG,TRACE=NO\n         GDETABLE ,TYPE=REPORT,NAME=RETRSN\nPROC3050 GDETABLE ,TYPE=DELETE,NAME=RETRSN\nPROC3900 GDESUBEN\nPROC3_PRINT    DC  CL133' '\n***********************************************************************\n*                                                                     *\n* READ INPUT CARDS AND PARSE                                          *\n*                                                                     *\n***********************************************************************\nPROC4000 GDESUBST\n         CLI   PROC4_FIRSTTIME,C'Y'\n         BE    PROC4002\nPROC4001 MVC   PROC4_PRINT,=CL133'0'\n         GDEGOSUB SERV2000,PROC4_PRINT\nPROC4002 MVI   PROC4_FIRSTTIME,C'N'\n         GET   GDERLSA,IN1REC\n         MVC   PROC4_PRINT,=CL133' CONTROL CARD=>'\n         MVC   PROC4_PRINT+15(50),IN1REC\n         CLC   =C'SHOW=',IN1REC\n         BE    PROC4010\n         CLC   =C'LEVEL=',IN1REC\n         BE    PROC4020\nPROC4005 MVC   PROC4_PRINT+110(23),=CL23'<===== ERROR '\n         GDEGOSUB SERV2000,PROC4_PRINT\n         B     PROC4001\n***********************************************************************\n* SHOW= SYNTAX, STATUS CHECKING                                       *\n***********************************************************************\nPROC4010 MVC   CURRENT_DSN,IN1REC+5\n         MVC   CURRENT_COMMAND,=CL5'SHOW'\n         MVC   PROC4_PRINT+67(40),=CL40'SHOW WITH COMMAND DSNAME  '\n         MVC   PROC4_PRINT+110(23),=CL23'ACCEPTED     '\n         GDEGOSUB SERV2000,PROC4_PRINT\n         B     PROC4900\n***********************************************************************\n* LEVEL= SYNTAX, STATUS CHECKING                                      *\n***********************************************************************\nPROC4020 MVC   CURRENT_FILTER,IN1REC+6\n         MVC   CURRENT_COMMAND,=CL5'LEVEL'\n         MVC   PROC4_PRINT+67(40),=CL40'LEVEL WITH COMMAND FILTER  '\n         MVC   PROC4_PRINT+110(23),=CL23'ACCEPTED     '\n         GDEGOSUB SERV2000,PROC4_PRINT\nPROC4900 LA    R15,0\n         B     PROC4920\nPROC4910 LA    R15,4\n         B     PROC4920\nPROC4920 GDESUBEN\nPROC4_PRINT    DC  CL133' '\nPROC4_FIRSTTIME    DC   C'Y'\n***********************************************************************\n*                                                                     *\n* PROCESS COMMANDS                                                    *\n*                                                                     *\n***********************************************************************\nPROC5000 GDESUBST\n         CLC   CURRENT_COMMAND,=CL5'SHOW'\n         BE    PROC5100\n***********************************************************************\n* PROCESS LEVEL COMMAND                                               *\n***********************************************************************\n         GDECSI TYPE=SETUP,NAME=CATALG,TRACE=NO,NOTOK=PROC5800,        X\n               RETCATALOG=PROC5_RMC,                                   X\n               RETENTRY=PROC5_REN,                                     X\n               FIELDS=((ENTYPE,PROC5_TYP)),                            X\n               FILTER=CURRENT_FILTER,                                  X\n               CATALOG=PROC5_MCT,ENTRYTYPES='C'\n         GDECSI TYPE=SEARCH,NAME=CATALG,TRACE=NO,EODAD=PROC5900,       X\n               NOTOK=PROC5800\nPROC5010 GDECSI TYPE=NEXTITEM,NAME=CATALG,TRACE=NO,EODAD=PROC5910\n         TM    PROC5_REN,X'40'\n         BO    PROC5020\n         CLI   PROC5_TYP,C'C'\n         BNE   PROC5010\n         MVC   CURRENT_DSN,PROC5_REN+2\n         GDEGOSUB PROC6000\n         B     PROC5010\nPROC5020 MVC   PROC5_PRINT,=CL133' RESULT ======>'\n         MVC   PROC5_PRINT+15(50),=CL50'ERROR'\n         MVC   PROC5_PRINT+21(44),PROC5_REN+2\n         MVC   PROC5_PRINT+67(40),=CL50'CATALOG RETURN CODE = XXXXXXXX'\n         GDEH2E PROC5_REN+46,PROC5_PRINT+67+22,4\n         GDEGOSUB SERV2000,PROC5_PRINT\n         B     PROC5010\n***********************************************************************\n* PROCESS SHOW COMMAND                                                *\n***********************************************************************\nPROC5100 GDEGOSUB PROC6000\n         B     PROC5900\nPROC5800 ABEND 4,DUMP\nPROC5900 LA    R15,0\n         B     PROC5920\nPROC5910 LA    R15,4\n         B     PROC5920\nPROC5920 GDESUBEN\nPROC5_MCT DC   CL44' '\nPROC5_TYP DC   CL1' '\nPROC5_RMC DC   CL50' '\nPROC5_REN DC   CL50' '\nPROC5_PRINT    DC   CL133' '\n***********************************************************************\n*                                                                     *\n* PROCESS COMMANDS                                                    *\n*                                                                     *\n***********************************************************************\nPROC6000 GDESUBST\n         GDEGOSUB SERV3000        GO PROCESS COMMAND\n         BNZ   PROC6720           ERRORS FOUND\n         CLC   CURRENT_COMMAND,=CL5'SHOW'\n         BE    PROC6700           SUCCESSFUL SHOW\n         B     PROC6710           SUCCESSFUL LEVEL\n***********************************************************************\n* PRINT SUCCESS / UNSUCCESSFUL MESSAGE                                *\n***********************************************************************\nPROC6700 MVC   PROC6_PRINT,=CL133' RESULT ======>'\n         MVC   PROC6_PRINT+15(50),=CL50'COMMAND PROCESSED'\n         MVC   PROC6_PRINT+67(40),=CL50'RETURN CODE = 0      '\n         GDEGOSUB SERV2000,PROC6_PRINT\n         B     PROC6800\nPROC6710 MVC   PROC6_PRINT,=CL133' RESULT ======>'\n         MVC   PROC6_PRINT+15(50),=CL50'DSN='\n         L     R2,=A(PROC5_REN)\n         MVC   PROC6_PRINT+19(44),2(R2)\n         MVC   PROC6_PRINT+67(40),=CL50'RETURN CODE = 0      '\n         GDEGOSUB SERV2000,PROC6_PRINT\n         B     PROC6800\nPROC6720 GDEGOSUB SERV5000\n         MVC   PROC6_PRINT,=CL133' RESULT (CONT)>'\n         MVC   PROC6_PRINT+15(50),=CL133' '\n         MVC   PROC6_PRINT+67(40),=CL50'PROBLEM DETERMINATION CODE = XXX\n               XXX'\n         GDEH2E IGWARLS_PROBDET,PROC6_PRINT+67+29,8\n         GDEGOSUB SERV2000,PROC6_PRINT\n         B     PROC6900\nPROC6800 GDEGOSUB SERV7000\nPROC6900 LA    R15,0\n         B     PROC6920\nPROC6910 LA    R15,4\n         B     PROC6920\nPROC6920 GDESUBEN\nPROC6_PRINT    DC  CL133' '\n***********************************************************************\n*                                                                     *\n* DO THE TRACE                                                        *\n*                                                                     *\n***********************************************************************\nSERV1000 GDESUBST\n         CLI   REPORT03_SW,C'Y'\n         BNE   SERV1900\n         L     R7,0(R1)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,=A(SERV1PL1)\n         GDEPRINT 0(R7),NAME=PARMDP\n         LA    R8,IGWARLS_PARMLIST\n         GDEPRINT 0(R8),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=48,                                            X\n               TABLEENTRYLEN=4\n         L     R7,=A(SERV1PL2)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,0(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=4,                                             X\n               TABLEENTRYLEN=4\n         L     R7,=A(SERV1PL3)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,4(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=4,                                             X\n               TABLEENTRYLEN=4\n         L     R7,=A(SERV1PL4)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,8(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=8,                                             X\n               TABLEENTRYLEN=8\n         L     R7,=A(SERV1PL5)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,12(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=4,                                             X\n               TABLEENTRYLEN=4\n         L     R7,=A(SERV1PL6)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,16(R8)\n         L     R6,12(R8)\n         L     R6,0(R6)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=(R6),                                          X\n               TABLEENTRYLEN=(R6)\n         L     R7,=A(SERV1PL7)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,20(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=4,                                             X\n               TABLEENTRYLEN=4\n         L     R7,=A(SERV1PL8)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,24(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=4,                                             X\n               TABLEENTRYLEN=4\n         L     R7,=A(SERV1PL9)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,28(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=4,                                             X\n               TABLEENTRYLEN=4\n         L     R7,=A(SERV1PL10)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,32(R8)\n         L     R6,28(R8)\n         L     R6,0(R6)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=(R6),                                          X\n               TABLEENTRYLEN=(R6)\n         L     R7,=A(SERV1PL11)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,36(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=8,                                             X\n               TABLEENTRYLEN=8\n         L     R7,=A(SERV1PL12)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,40(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=8,                                             X\n               TABLEENTRYLEN=8\n         L     R7,=A(SERV1PL13)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,44(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=4,                                             X\n               TABLEENTRYLEN=4\n         L     R7,=A(SERV1PL14)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,48(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=4,                                             X\n               TABLEENTRYLEN=4\nSERV1900 LA    R15,0\n         B     SERV1920\nSERV1910 LA    R15,4\n         B     SERV1920\nSERV1920 GDESUBEN\nSERV1PL1 DC    CL133' IGWARLS PASSED PARM AREA'\nSERV1PL2 DC    CL133' IGWARLS RETURN CODE'\nSERV1PL3 DC    CL133' IGWARLS RSNCODE CODE'\nSERV1PL4 DC    CL133' IGWARLS PROBLEM DETERMINATION'\nSERV1PL5 DC    CL133' IGWARLS DATASET NAME LENGTH'\nSERV1PL6 DC    CL133' IGWARLS DATASET NAME'\nSERV1PL7 DC    CL133' IGWARLS RECOVERY STATUS'\nSERV1PL8 DC    CL133' IGWARLS LOG TYPE'\nSERV1PL9 DC    CL133' IGWARLS LOGSTREAM NAME LENGTH'\nSERV1PL10 DC   CL133' IGWARLS LOGSTREAM NAME'\nSERV1PL11 DC   CL133' IGWARLS UTC TIME'\nSERV1PL12 DC   CL133' IGWARLS LOCAL TIME'\nSERV1PL13 DC   CL133' IGWARLS VSAM QUIESCED'\nSERV1PL14 DC   CL133' IGWARLS BWO FLAG'\n***********************************************************************\n*                                                                     *\n* OUTPUT CONTROL STATUS IF DDNAME AVAILABLE                           *\n*                                                                     *\n***********************************************************************\nSERV2000 GDESUBST\n         CLI   REPORT01_SW,C'N'\n         BE    SERV2900\n         L     R2,0(R1)\n         GDEPRINT 0(R2),NAME=STATUS\nSERV2900 LA    R15,0\n         B     SERV2920\nSERV2910 LA    R15,4\n         B     SERV2920\nSERV2920 GDESUBEN\n***********************************************************************\n*                                                                     *\n* PROCESS COMMAND                                                     *\n*                                                                     *\n***********************************************************************\nSERV3000 GDESUBST\n***********************************************************************\n         SR    R4,R4\n         LA    R5,44\n         LA    R6,CURRENT_DSN\nSERV3010 CLI   0(R6),C' '\n         BE    SERV3020\n         LA    R4,1(R4)\n         LA    R6,1(R6)\n         BCT   R5,SERV3010\nSERV3020 STCM  R4,B'1111',CURRENT_DSNLEN\n***********************************************************************\n         MVC   IGWARLS_DSN,CURRENT_DSN\n         MVC   IGWARLS_DSNLEN,CURRENT_DSNLEN\n         MVC   IGWARLS_LOGSTREAMIDLEN,=F'44'\n***********************************************************************\n*        LOAD  EP=IGWARLS,ERRET=PROC9910\n         LA    R1,IGWARLS_PARMLIST R1 -> PARMLIST\n         LA    R4,IGWARLS_RETCODE\n         ST    R4,0(R1)            PASS ADDR OF RETURN CODE\n         LA    R4,IGWARLS_RSNCODE\n         ST    R4,4(R1)            PASS ADDR OF IGWARLS_RSNCODE CODE\n         LA    R4,IGWARLS_PROBDET\n         ST    R4,8(R1)            PASS ADDR OF PROBLEM DETERMINATION\n         LA    R4,IGWARLS_DSNLEN\n         ST    R4,12(R1)           PASS ADDR OF DATA SET NAME LENGTH\n         LA    R4,IGWARLS_DSN\n         ST    R4,16(R1)           PASS ADDR OF DATA SET NAME\n         LA    R4,IGWARLS_RECOVERYSTATUS\n         ST    R4,20(R1)           PASS ADDR OF RECOVERYSTATUS\n         LA    R4,IGWARLS_LOGTYPE\n         ST    R4,24(R1)           PASS ADDR OF LOGTYPE\n         LA    R4,IGWARLS_LOGSTREAMIDLEN\n         ST    R4,28(R1)           PASS ADDR OF LOGSTREAMIDLEN\n         LA    R4,IGWARLS_LOGSTREAMID\n         ST    R4,32(R1)           PASS ADDR OF LOGSTREAMID\n         LA    R4,IGWARLS_RLS_RECOVERY_TIMESTAMP_UTC\n         ST    R4,36(R1)           PASS ADDR OF UTC\n         LA    R4,IGWARLS_RLS_RECOVERY_TIMESTAMP_LOCAL\n         ST    R4,40(R1)           PASS ADDR OF LOCAL TIME\n         LA    R4,IGWARLS_VSAM_QUIESCED\n         ST    R4,44(R1)           PASS ADDR OF RESERVED FIELD\n         LA    R4,IGWARLS_BWO\n         ST    R4,48(R1)           PASS ADDR OF RESERVED FIELD\n***********************************************************************\n         GDEGOSUB SERV1000,SERV3_BEFORE_MESSAGE\n***********************************************************************\n         LA    R1,IGWARLS_PARMLIST R1 -> PARMLIST\n         L     R15,=V(IGWARLS)\n         BALR  14,15               CALL IGWARLS\n***********************************************************************\n         GDEGOSUB SERV1000,SERV3_AFTER_MESSAGE\n***********************************************************************\n         MVC   OUT1_DSNAME,=CL44' '\n         L     R2,IGWARLS_DSNLEN\n         BCTR  R2,R0\n         MVC   OUT1_DSNAME(*-*),IGWARLS_DSN\n         EX    R2,*-6\n         MVC   OUT1_LOGSTRM,=CL44' '\n         L     R2,IGWARLS_LOGSTREAMIDLEN\n         BCTR  R2,R0\n         MVC   OUT1_LOGSTRM(*-*),IGWARLS_LOGSTREAMID\n         EX    R2,*-6\n         MVC   OUT1_RECOVERY,=CL14'NOT PENDING'\n         CLC   IGWARLS_RECOVERYSTATUS,=F'0'\n         BE    *+10\n         MVC   OUT1_RECOVERY,=CL14'PENDING'\n         MVC   OUT1_QUIESCED,=CL12'NOT MARKED '\n         CLC   IGWARLS_VSAM_QUIESCED,=F'0'\n         BE    *+10\n         MVC   OUT1_RECOVERY,=CL12'MARKED '\n         MVC   OUT1_LOGTYPE,=CL12'NOT DEFINED'\n         CLC   IGWARLS_LOGTYPE,=F'1'\n         BE    SERV3030\n         MVC   OUT1_LOGTYPE,=CL12'LOG=NONE   '\n         CLC   IGWARLS_LOGTYPE,=F'2'\n         BE    SERV3030\n         MVC   OUT1_LOGTYPE,=CL12'LOG=UNDO '\n         CLC   IGWARLS_LOGTYPE,=F'3'\n         BE    SERV3030\n         MVC   OUT1_LOGTYPE,=CL12'LOG=ALL'\n         CLC   IGWARLS_LOGTYPE,=F'4'\n         BE    SERV3030\n         MVC   OUT1_LOGTYPE,=CL12'UNKNOWN'\nSERV3030 MVC   OUT1_BWOFLAGS,=CL14'NOT DEFINED'\n         CLC   IGWARLS_BWO,=F'1'\n         BE    SERV3040\n         MVC   OUT1_BWOFLAGS,=CL14'BWO=TYPECICS'\n         CLC   IGWARLS_BWO,=F'2'\n         BE    SERV3040\n         MVC   OUT1_BWOFLAGS,=CL14'BWO=NO'\n         CLC   IGWARLS_BWO,=F'3'\n         BE    SERV3040\n         MVC   OUT1_BWOFLAGS,=CL14'BWO=TYPEIMS'\n         CLC   IGWARLS_BWO,=F'4'\n         BE    SERV3040\n         MVC   OUT1_BWOFLAGS,=CL14'BWO=TYPEOTHER'\n         CLC   IGWARLS_BWO,=F'5'\n         BE    SERV3040\n         MVC   OUT1_BWOFLAGS,=CL14'UNKNOWN'\nSERV3040 GDEH2E IGWARLS_RETCODE,OUT1_RETCODE,4\n         GDEH2E IGWARLS_RSNCODE,OUT1_RSNCODE,4\n         XC    CONVTOD,CONVTOD\n         CONVTOD TODVAL=IGWARLS_RLS_RECOVERY_TIMESTAMP_UTC,            X\n               CONVVAL=CONVTOD,TIMETYPE=MIC,DATETYPE=YYYYMMDD,         X\n               OFFSET=SERV3_ZERO\n         LA    R2,CONVTOD\n         LA    R3,OUT1_UTCTIME\n         OI    12(R2),X'0F'\n         UNPK  SERV3_WORKAREA(9),8(5,R2)\n         MVC   0(4,R3),SERV3_WORKAREA\n         MVI   4(R3),C'/'\n         MVC   5(2,R3),SERV3_WORKAREA+2\n         MVI   7(R3),C'/'\n         MVC   8(2,R3),SERV3_WORKAREA+4\n         MVI   10(R3),C'-'\n         MVI   05(R2),X'0F'\n         UNPK  SERV3_WORKAREA(11),0(6,R2)\n         MVC   11(2,R3),SERV3_WORKAREA\n         MVI   13(R3),C':'\n         MVC   14(2,R3),SERV3_WORKAREA+2\n         MVI   16(R3),C':'\n         MVC   17(2,R3),SERV3_WORKAREA+4\n         MVI   19(R3),C'.'\n         MVC   20(4,R3),SERV3_WORKAREA+6\n         XC    CONVTOD,CONVTOD\n         CONVTOD TODVAL=IGWARLS_RLS_RECOVERY_TIMESTAMP_LOCAL,          X\n               CONVVAL=CONVTOD,TIMETYPE=MIC,DATETYPE=YYYYMMDD,         X\n               OFFSET=SERV3_ZERO\n         LA    R2,CONVTOD\n         LA    R3,OUT1_LCLTIME\n         OI    12(R2),X'0F'\n         UNPK  SERV3_WORKAREA(9),8(5,R2)\n         MVC   0(4,R3),SERV3_WORKAREA\n         MVI   4(R3),C'/'\n         MVC   5(2,R3),SERV3_WORKAREA+2\n         MVI   7(R3),C'/'\n         MVC   8(2,R3),SERV3_WORKAREA+4\n         MVI   10(R3),C'-'\n         MVI   05(R2),X'0F'\n         UNPK  SERV3_WORKAREA(11),0(6,R2)\n         MVC   11(2,R3),SERV3_WORKAREA\n         MVI   13(R3),C':'\n         MVC   14(2,R3),SERV3_WORKAREA+2\n         MVI   16(R3),C':'\n         MVC   17(2,R3),SERV3_WORKAREA+4\n         MVI   19(R3),C'.'\n         MVC   20(4,R3),SERV3_WORKAREA+6\n***********************************************************************\n*\n* READ BWO FLAGS\n*\n***********************************************************************\n         LA   R4,IGWABWO_READ\n         ST   R4,IGWABWO_FUNCTON  SET FUNCTION\n         GDEGOSUB SERV8000        GO PROCESS COMMAND\n***********************************************************************\n*\n* BACK FROM THE CALL, CHECK RETURN CODE\n*\n***********************************************************************\n         CLC   IGWARLS_RETCODE,=F'0'\n         BNE   SERV3910\nSERV3900 LA    R15,0\n         B     SERV3920\nSERV3910 LA    R15,4\n         B     SERV3920\nSERV3920 GDESUBEN\nSERV3_BEFORE_MESSAGE DC CL53' ',CL80'PARAMETERS BEFORE THE CALL'\nSERV3_AFTER_MESSAGE  DC CL53' ',CL80'PARAMETERS AFTER THE CALL'\nSERV3_ZERO           DC    PL4'0'\nSERV3_WORKAREA       DC    CL12' '\n***********************************************************************\n*                                                                     *\n* OUTPUT CONTROL STATUS IF DDNAME AVAILABLE                           *\n*                                                                     *\n***********************************************************************\nSERV4000 GDESUBST\n         GDEDDN GDERLS04,FOUND=SERV4001,NOTFOUND=SERV4900\nSERV4001 GDEPRINT TYPE=OPEN,NAME=BWOPRT,                               X\n               TITLE='BWO FLAG EXPLAINATION',                          X\n               HEADINGS=(SERV4HL1)\n         LA    R4,SERV4_TABLE\n         L     R5,=A(SERV4_TABLE_END)\n         MVC   SERV4_MESSAGE,=CL133' '\nSERV4010 MVC   SERV4_MESSAGE+30(50),0(R4)\n         GDEPRINT SERV4_MESSAGE,NAME=BWOPRT\n         LA    R4,50(R4)\n         CR    R4,R5\n         BL    SERV4010\n         GDEPRINT ,TYPE=CLOSE,NAME=BWOPRT\nSERV4900 LA    R15,0\n         B     SERV4920\nSERV4910 LA    R15,4\n         B     SERV4920\nSERV4920 GDESUBEN\nSERV4HL1       DC   CL133' '\nSERV4_MESSAGE  DC   CL133' '\nSERV4_TABLE    DS  0CL50\n DC CL50'                                                  '\n DC CL50' BWO FLAGS AND THEIR MEANING                      '\n DC CL50'                                                  '\n DC CL50' 000 - DATA SET DOES NOT SUPPORT BACKUP WITHOUT   '\n DC CL50'       SERIALIZATION.                             '\n DC CL50'                                                  '\n DC CL50' 001 - FORCES RECOVERY IN PROGRESS, RESET TO 000  '\n DC CL50'       AFTER RECOVERY                             '\n DC CL50'                                                  '\n DC CL50' 010 - A CA/CI SPLIT FOR THE BWO DATA SET IS IN   '\n DC CL50'       PROGRESS. DO NOT START BACKUP.  IF BACKUP  '\n DC CL50'       IN PROGRESS, DISCARD AT END.  THIS STATE   '\n DC CL50'       CAN EXIST AT OPEN IF THE DATABASE MANAGER  '\n DC CL50'       ABENDED DURING SPLIT.  DATABASE ACTION     '\n DC CL50'       DEPENDS DATABASE MANAGER.  THE DATA SET    '\n DC CL50'       MIGHT NEED RESTORE AND FORWARD RECOVERY OR '\n DC CL50'       BACK OUT OF CHANGES IF AIXS ARE PRESENT.   '\n DC CL50'                                                  '\n DC CL50' 011 - THE DATABASE MANAGER CLOSED A BWO DATA SET '\n DC CL50'       AND A CI/CA SPLIT HAD OCCURRED WHEN IT WAS '\n DC CL50'       PREVIOUSLY OPEN.  BACKUP MANAGER SHOULD    '\n DC CL50'       RESET IT TO 000 AND SERIALIZE TO BACK UP,  '\n DC CL50'       NOT A BWO CANDIDATE.  THE DATABASE MANAGER '\n DC CL50'       SHOULD CHANGE THIS STATE TO 110 AT OPEN.   '\n DC CL50'                                                  '\n DC CL50' 100 - A BWO DATA SET HAS BEEN OPENED BY THE      '\n DC CL50'       DATABASE MANAGER.  BACK UP WITHOUT         '\n DC CL50'       SERIALIZATION.                             '\n DC CL50'                                                  '\n DC CL50' 101 - DATA SET BAS BEEN RESTORED AND REQUIRES    '\n DC CL50'       FORWARD RECOVERY BEFORE IT CAN BE USED.    '\n DC CL50'       RESET IT TO 001 BEFORE FORWARD RECOVERY.   '\n DC CL50'                                                  '\n DC CL50' 110 - A CI/CA SPLIT HAS OCCURRED AND COMPLETED ON'\n DC CL50'       A BWO DATA SET.  THIS STATE CAN EXIST AT   '\n DC CL50'       OPEN IF THE DATABASE MANAGER ABENDED.  BACK'\n DC CL50'       UP WITHOUT SERIALIZATION.  RESET IT TO 100 '\n DC CL50'       BEFORE BACKUP.                             '\n DC CL50'                                                  '\n DC CL50' 111 - AN INVALID STATE.                          '\n DC CL50'                                                  '\nSERV4_TABLE_END EQU *\n***********************************************************************\n*                                                                     *\n* OUTPUT CONTROL MESSAGE AND MEANING                                  *\n*                                                                     *\n***********************************************************************\nSERV5000 GDESUBST\n         MVC   SERV5_MESSAGE,=CL133' RESULT ======>'\n         MVC   SERV5_MESSAGE+15(50),=CL50'DSN='\n         L     R2,=A(PROC5_REN)\n         MVC   SERV5_MESSAGE+19(44),2(R2)\n         MVC SERV5_MESSAGE+67(40),=CL50'RETURN CODE = XXXXXXXX, REASON X\n               CODE = XXXXXXXX'\n         GDEH2E IGWARLS_RETCODE,SERV5_MESSAGE+67+14,4\n         GDEH2E IGWARLS_RSNCODE,SERV5_MESSAGE+67+38,4\n         GDEGOSUB SERV2000,SERV5_MESSAGE\n         MVC   T01RETCODE,IGWARLS_RETCODE\n         MVC   T01RSNCODE,IGWARLS_RSNCODE\n         GDETABLE T01,TYPE=FIND,NAME=RETRSN,TRACE=NO,                  X\n               OK=SERV5900\n         GDETABLE T01,TYPE=INSERT,NAME=RETRSN,TRACE=NO\n         MVC   SERV5_MESSAGE,=CL133' RESULT (CONT)>'\n         MVC SERV5_MESSAGE+15(50),=CL50'COMMAND PROCESSED UNSUCCESSFULLX\n               Y'\n         LA    R4,SERV5_TABLE\n         L     R5,=A(SERV5_TABLE_END)\nSERV5010 CLC   0(4,R4),IGWARLS_RETCODE\n         BNE   SERV5020\n         CLC   4(4,R4),IGWARLS_RSNCODE\n         BNE   SERV5020\n         MVC   SERV5_MESSAGE+67(56),8(R4)\n         GDEGOSUB SERV2000,SERV5_MESSAGE\nSERV5020 LA    R4,68(R4)\n         CR    R4,R5\n         BL    SERV5010\nSERV5900 LA    R15,0\n         B     SERV5920\nSERV5910 LA    R15,4\n         B     SERV5920\nSERV5920 GDESUBEN\nSERV5_MESSAGE  DC   CL133' '\n         DS   0D\nSERV5_TABLE    DS  0CL68\n DC   F'0',F'0',CL60' THE OPERATION WAS SUCCESSFUL.                 '\n DC   F'8',F'4',CL60' AN INVALID DSNAME_LENGTH WAS SPECIFIED.       '\n DC   F'8',F'4',CL60' CORRECT THE DSNAME_LENGTH ARGUMENT AND RETRY  '\n DC   F'8',F'4',CL60' THE REQUEST.                                  '\n DC   F'8',F'8',CL60' AN INVALID DSNAME OF BLANKS WAS SPECIFIED.    '\n DC   F'8',F'8',CL60' CORRECT THE DSNAME ARGUMENT AND RETRY THE     '\n DC   F'8',F'8',CL60' REQUEST.                                      '\n DC  F'8',F'20',CL60' IGWARLS IS ONLY SUPPORTED FOR VSAM DATA SETS. '\n DC  F'8',F'20',CL60' THE NAME SPECIFIED WAS NOT THE NAME OF THE    '\n DC  F'8',F'20',CL60' BASE CLUSTER. SPECIFY THE NAME OF THE BASE    '\n DC  F'8',F'20',CL60' CLUSTER IN THE DSNAME ARGUMENT AND RETRY THE  '\n DC  F'8',F'20',CL60' REQUEST.                                      '\n DC  F'8',F'32',CL60' THE DATA SET SPECIFIED IN DSNAME IS NOT AN SMS'\n DC  F'8',F'32',CL60' MANAGED DATA SET. CORRECT THE DSNAME ARGUMENT '\n DC  F'8',F'32',CL60' AND RETRY THE REQUEST.                        '\n DC  F'8',F'40',CL60' FOR IGWARLS, THE LOGSTREAMID_LENGTH SPECIFIED '\n DC  F'8',F'40',CL60' WAS INVALID (<=0) OR WAS NOT LARGE ENOUGH TO  '\n DC  F'8',F'40',CL60' RETURN THE REQUESTED LOGSTREAMID. CORRECT THE '\n DC  F'8',F'40',CL60' LOGSTREAMID_LENGTH ARGUMENT AND RETRY THE     '\n DC  F'8',F'40',CL60' REQUEST.                                      '\n DC  F'12',F'8',CL60' THERE IS INSUFFICIENT VIRTUAL STORAGE TO      '\n DC  F'12',F'8',CL60' PROCESS THE REQUEST. RETRY THE REQUEST. IF THE'\n DC  F'12',F'8',CL60' CONDITION PERSISTS, CONTACT IBM FOR           '\n DC  F'12',F'8',CL60' PROGRAMMING ASSISTANCE.                       '\n DC F'12',F'12',CL60' THE DATA SET SPECIFIED IN DSNAME COULD NOT BE '\n DC F'12',F'12',CL60' FOUND. VERIFY THAT THE DATA SET EXISTS AND HAS'\n DC F'12',F'12',CL60' BEEN CORRECTLY SPECIFIED IN DSNAME.           '\n DC F'12',F'14',CL60' THE DATA SET SPECIFIED IN DSNAME WAS FOUND IN '\n DC F'12',F'14',CL60' THE CATALOG BUT ITS ATTRIBUTES WERE NOT       '\n DC F'12',F'14',CL60' AVAILABLE. VERIFY THAT THE DATA SET HAS BEEN  '\n DC F'12',F'14',CL60' CORRECTLY SPECIFIED IN DSNAME.                '\n DC F'12',F'16',CL60' CANNOT ACCESS THE DATA SET THAT IS SPECIFIED  '\n DC F'12',F'16',CL60' IN DSNAME. THE DATA SET HAS BEEN HSM MIGRATED.'\n DC F'12',F'16',CL60' HRECALL THE DATA SET AND RETRY THE REQUEST.   '\n DC  F'16',F'4',CL60' AN ERROR OCCURRED ON A CALL TO CATALOG        '\n DC  F'16',F'4',CL60' MANAGEMENT. THE CATALOG RETURN CODE IS IN THE '\n DC  F'16',F'4',CL60' FIRST ELEMENT OF PROB_DET AND THE CATALOG     '\n DC  F'16',F'4',CL60' REASON CODE IS IN THE SECOND ELEMENT OF       '\n DC  F'16',F'4',CL60' PROB_DET. SEE MESSAGE IDC3009I FOR AN         '\n DC  F'16',F'4',CL60' EXPLANATION OF THE CATALOG RETURN CODE AND    '\n DC  F'16',F'4',CL60' REASON CODE. A CATALOG MANAGEMENT RETURN CODE '\n DC  F'16',F'4',CL60' OF 8 INDICATES THAT THE SPECIFIED DATA SET WAS'\n DC  F'16',F'4',CL60' NOT FOUND. IF YOU GET THIS RETURN CODE,       '\n DC  F'16',F'4',CL60' CORRECT DSNAME AND RETRY THE REQUEST.         '\n DC  F'20',F'4',CL60' A SYSTEM ERROR OCCURRED DURING IGWARLS        '\n DC  F'20',F'4',CL60' PROCESSING. THE ELEMENTS OF PROB_DET CONTAIN  '\n DC  F'20',F'4',CL60' ADDITIONAL DIAGNOSTIC DATA. CONTACT IBM FOR   '\n DC  F'20',F'4',CL60' PROGRAMMING ASSISTANCE AND PROVIDE THEM WITH  '\n DC  F'20',F'4',CL60' THE IGWARLS RETURN_CODE, REASON_CODE, AND     '\n DC  F'20',F'4',CL60' PROB_DET VALUES.                              '\n DC  F'36',F'4',CL60' LINKAGE CANNOT BE ESTABLISHED TO THE IGWRLS   '\n DC  F'36',F'4',CL60' SERVICE MODULE, IGWAMCS4. EITHER THE WRONG    '\n DC  F'36',F'4',CL60' LEVEL OF THE OPERATING SYSTEM IS BEING USED,  '\n DC  F'36',F'4',CL60' OR THE CALLABLE SYSTEM SERVICE LIBRARY,       '\n DC  F'36',F'4',CL60' SYS1.CSSLIB, IS MISSING THE REQUIRED SERVICES.'\n DC  F'36',F'4',CL60' CONTACT YOUR INSTALLATION SYSTEM PROGRAMMER   '\n DC  F'36',F'4',CL60' FOR ASSISTANCE.                               '\nSERV5_TABLE_END DS  0CL68\n***********************************************************************\n*                                                                     *\n* OUTPUT CONTROL MESSAGE AND MEANING                                  *\n*                                                                     *\n***********************************************************************\nSERV6000 GDESUBST\n         GDEDDN GDERLS05,FOUND=SERV6001,NOTFOUND=SERV6900\nSERV6001 GDEPRINT TYPE=OPEN,NAME=RETRSN,                               X\n               TITLE='RETURN CODE / REASON CODE EXPLAINATION',         X\n               HEADINGS=(SERV6HL1)\n         L     R4,=A(SERV5_TABLE)\n         L     R5,=A(SERV5_TABLE_END)\nSERV6010 CLC   0(4,R4),SERV6_SAVE_RET\n         BNE   SERV6020\n         CLC   4(4,R4),SERV6_SAVE_RSN\n         BNE   SERV6020\n         MVC   SERV6_MESSAGE,=CL133' '\n         MVC   SERV6_MESSAGE+63(60),8(R4)\n         B     SERV6030\nSERV6020 MVC   SERV6_MESSAGE,=CL133'0'\n         MVC SERV6_MESSAGE+15(40),=CL50'RETURN CODE = XXXXXXXX, REASON X\n               CODE = XXXXXXXX'\n         GDEH2E 0(R4),SERV6_MESSAGE+15+14,4\n         GDEH2E 4(R4),SERV6_MESSAGE+15+38,4\n         MVC   SERV6_MESSAGE+63(60),8(R4)\n         MVC   SERV6_SAVE_RET,0(R4)\n         MVC   SERV6_SAVE_RSN,4(R4)\nSERV6030 GDEPRINT SERV6_MESSAGE,NAME=RETRSN\n         LA    R4,68(R4)\n         CR    R4,R5\n         BL    SERV6010\n         GDEPRINT ,NAME=RETRSN,TYPE=CLOSE\nSERV6900 LA    R15,0\n         B     SERV6920\nSERV6910 LA    R15,4\n         B     SERV6920\nSERV6920 GDESUBEN\nSERV6HL1       DC   CL133' '\nSERV6_MESSAGE  DC   CL133' '\nSERV6_SAVE_RET DC   F'-1'\nSERV6_SAVE_RSN DC   F'-1'\n***********************************************************************\n*                                                                     *\n* OUTPUT REPORT IF DDNAME IS AVAILABLE                                *\n*                                                                     *\n***********************************************************************\nSERV7000 GDESUBST\n         CLI   REPORT02_SW,C'N'\n         BE    SERV7900\n         GDEPRINT PROC1DL1,NAME=REPORT\n         GDEPRINT PROC1DL2,NAME=REPORT\nSERV7900 LA    R15,0\n         B     SERV7920\nSERV7910 LA    R15,4\n         B     SERV7920\nSERV7920 GDESUBEN\n***********************************************************************\n*                                                                     *\n* READ BWO FLAGS                                                      *\n*                                                                     *\n***********************************************************************\nSERV8000 GDESUBST\n***********************************************************************\n         MVC   IGWABWO_DSN,CURRENT_DSN\n         MVC   IGWABWO_DSNLEN,CURRENT_DSNLEN\n         MVC   IGWABWO_BWOFLAGS,=3F'0'\n***********************************************************************\n         XC    TIME_STORAGE,TIME_STORAGE\n         TIME  DEC,TIME_STORAGE,DATETYPE=YYYYDDD,LINKAGE=SYSTEM\n         MVC   IGWABWO_BWOTIME+4,TIME_STORAGE\n         OI    IGWABWO_BWOTIME+4+3,X'0F'\n         MVI   TIME_STORAGE+12,X'0F'\n         SRP   TIME_STORAGE+8(5),1,0\n         OI    TIME_STORAGE+8+3,X'0F'\n         MVI   IGWABWO_BWOTIME+0,X'01'\n         MVC   IGWABWO_BWOTIME+1(3),TIME_STORAGE+8+1\n***********************************************************************\n*        LOAD  EP=IGWABWO,ERRET=PROC9910\n         LA    R1,IGWABWO_PARMLIST R1 -> PARMLIST\n         LA    R4,IGWABWO_RETCODE\n         ST    R4,0(R1)            PASS ADDR OF RETURN CODE\n         LA    R4,IGWABWO_RSNCODE\n         ST    R4,4(R1)            PASS ADDR OF IGWABWO_RSNCODE CODE\n         LA    R4,IGWABWO_PROBDET\n         ST    R4,8(R1)            PASS ADDR OF PROBLEM DETERMINATION\n         LA    R4,IGWABWO_FUNCTON\n         ST    R4,12(R1)           PASS ADDR OF FUNCTION REQUIRED\n         LA    R4,IGWABWO_DSNLEN\n         ST    R4,16(R1)           PASS ADDR OF DATA SET NAME LENGTH\n         LA    R4,IGWABWO_DSN\n         ST    R4,20(R1)           PASS ADDR OF DATA SET NAME\n         LA    R4,IGWABWO_SELECT\n         ST    R4,24(R1)           PASS ADDR OF SELECTION MASK\n         LA    R4,IGWABWO_BWOFLAGS\n         ST    R4,28(R1)           PASS ADDR OF BWO FLAGS\n         LA    R4,IGWABWO_BWOTIME\n         ST    R4,32(R1)           PASS ADDR OF BWO RECOVERY POINT\n         LA    R4,IGWABWO_RESERVED\n         ST    R4,36(R1)           PASS ADDR OF RESERVED FIELD\n***********************************************************************\n         GDEGOSUB SERV9000,SERV8_BEFORE_MESSAGE\n***********************************************************************\n         LA    R1,IGWABWO_PARMLIST R1 -> PARMLIST\n         L     R15,=V(IGWABWO)\n         BALR  14,15               CALL IGWABWO\n***********************************************************************\n         GDEGOSUB SERV9000,SERV8_AFTER_MESSAGE\n***********************************************************************\n         MVC   OUT1_BWO,=CL3'000'\n         CLC   IGWABWO_BWOFLAG1,=F'0'\n         BE    *+8\n         MVI   OUT1_BWO+0,C'1'\n         CLC   IGWABWO_BWOFLAG2,=F'0'\n         BE    *+8\n         MVI   OUT1_BWO+1,C'1'\n         CLC   IGWABWO_BWOFLAG3,=F'0'\n         BE    *+8\n         MVI   OUT1_BWO+2,C'1'\n***********************************************************************\n         UNPK IGWABWO_WORKAREA(7),IGWABWO_BWOTIME+4(4)\n         MVC  OUT1_BWOTIME+0(2),IGWABWO_WORKAREA\n         MVI  OUT1_BWOTIME+2,C':'\n         MVC  OUT1_BWOTIME+3(2),IGWABWO_WORKAREA+2\n         MVI  OUT1_BWOTIME+5,C':'\n         MVC  OUT1_BWOTIME+6(2),IGWABWO_WORKAREA+4\n         MVI  OUT1_BWOTIME+8,C'.'\n         MVC  OUT1_BWOTIME+9(1),IGWABWO_WORKAREA+6\n         UNPK IGWABWO_WORKAREA(7),IGWABWO_BWOTIME+0(4)\n         MVC  OUT1_BWODATE+0(2),=CL2'20'\n         MVC  OUT1_BWODATE+2(2),IGWABWO_WORKAREA+2\n         MVI  OUT1_BWODATE+4,C'/'\n         MVC  OUT1_BWODATE+5(3),IGWABWO_WORKAREA+4\n         MVC  OUT1_BWODATE+8(2),=CL2' '\nSERV8900 LA    R15,0\n         B     SERV8920\nSERV8910 LA    R15,4\n         B     SERV8920\nSERV8920 GDESUBEN\nSERV8_BEFORE_MESSAGE DC CL53' ',CL80'PARAMETERS BEFORE THE CALL'\nSERV8_AFTER_MESSAGE  DC CL53' ',CL80'PARAMETERS AFTER THE CALL'\n***********************************************************************\n*                                                                     *\n* DO THE TRACE                                                        *\n*                                                                     *\n***********************************************************************\nSERV9000 GDESUBST\n         CLI   REPORT03_SW,C'Y'\n         BNE   SERV9900\n         L     R7,0(R1)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,=A(SERV9PL1)\n         GDEPRINT 0(R7),NAME=PARMDP\n         LA    R8,IGWABWO_PARMLIST\n         GDEPRINT 0(R8),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=40,                                            X\n               TABLEENTRYLEN=4\n         L     R7,=A(SERV9PL2)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,0(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=4,                                             X\n               TABLEENTRYLEN=4\n         L     R7,=A(SERV9PL3)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,4(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=4,                                             X\n               TABLEENTRYLEN=4\n         L     R7,=A(SERV9PL4)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,8(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=8,                                             X\n               TABLEENTRYLEN=8\n         L     R7,=A(SERV9PL5)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,12(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=4,                                             X\n               TABLEENTRYLEN=4\n         L     R7,=A(SERV9PL6)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,16(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=4,                                             X\n               TABLEENTRYLEN=4\n         L     R7,=A(SERV9PL7)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,20(R8)\n         L     R6,16(R8)\n         L     R6,0(R6)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=(R6),                                          X\n               TABLEENTRYLEN=(R6)\n         L     R7,=A(SERV9PL8)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,24(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=4,                                             X\n               TABLEENTRYLEN=4\n         L     R7,=A(SERV9PL9)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,28(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=12,                                            X\n               TABLEENTRYLEN=4\n         L     R7,=A(SERV9PL10)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,32(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=8,                                             X\n               TABLEENTRYLEN=8\n         L     R7,=A(SERV9PL11)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,36(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=16,                                            X\n               TABLEENTRYLEN=16\nSERV9900 LA    R15,0\n         B     SERV9920\nSERV9910 LA    R15,4\n         B     SERV9920\nSERV9920 GDESUBEN\nSERV9PL1 DC    CL133' IGWABWO PASSED PARM AREA'\nSERV9PL2 DC    CL133' IGWABWO RETURN CODE'\nSERV9PL3 DC    CL133' IGWABWO IGWABWO_RSNCODE CODE'\nSERV9PL4 DC    CL133' IGWABWO PROBLEM DETERMINATION'\nSERV9PL5 DC    CL133' IGWABWO FUNCTION REQUIRED'\nSERV9PL6 DC    CL133' IGWABWO DATASET NAME LENGTH'\nSERV9PL7 DC    CL133' IGWABWO DATASET NAME'\nSERV9PL8 DC    CL133' IGWABWO SELECTION MASK'\nSERV9PL9 DC    CL133' IGWABWO BWO FLAGS'\nSERV9PL10 DC   CL133' IGWABWO BWO TIME'\nSERV9PL11 DC   CL133' IGWABWO RESERVED FIELD'\n***********************************************************************\n*                                                                     *\n* I/O ROUTINES FOR CATALOG LOOKUPS                                    *\n*                                                                     *\n***********************************************************************\n         GDECSI TYPE=IOROUTINE,NAME=CATALG\n         GDETABLE TYPE=IOROUTINE,NAME=RETRSN,TABLNG=008,               X\n               KEYLNG=(08),                                            X\n               KEYOFF=(0)\n         END\n//*********************************************************************\n//*                                                                   *\n//*  STEP010   PGM=ASMA90                                             *\n//*                                                                   *\n//*********************************************************************\n//STEP010 EXEC PGM=ASMA90,\n//             PARM='BATCH,USING(WARN(9))'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(4096,(120,120),,,ROUND),\n//             UNIT=SYSALLDA,\n//             DCB=BUFNO=1\n//SYSLIB   DD  DSN=SYS1.MACLIB,\n//             DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN  DD   DSN=&&OBJ(GDERLSBT),\n//             DISP=(OLD)\n//             BLKSIZE=3200\n//SYSIN    DD  *\n* ------------------------------------------------------------------- *\n*                                                                     *\n* RESET BWO FLAGS IN BATCH                                            *\n*                                                                     *\n* CONTROL CARDS                                                       *\n*   SHOW=<DSNAME>      ASK THE STATUS OF THE BWO FLAGS AND SHOW       *\n*                      VALUES IN THE OUTPUT REPORT                    *\n*                     -THE CURRENT PROCESSING DSN IS SET TO <DSNAME>  *\n*   DSN=<DSNAME>       SET THE PROCESSING DSN TO <DSNAME>             *\n*                     -THE COMMANDS TEST AND SET USE THE LAST         *\n*                      ESTABLISHED DSNAME AND BWO FLAGS FOR PROCESSING*\n*   BWO=<BWO>          SET THE PROCESSING BWO FLAGS TO <BWO>          *\n*                     -THE COMMANDS TEST AND SET USE THE LAST         *\n*                      ESTABLISHED DSNAME AND BWO FLAGS FOR PROCESSING*\n*   TEST=<BWO>         COMPARE THE STATUS OF THE BWO FLAGS TO THE     *\n*                      THREE FLAGS HERE                               *\n*                        IF EQUAL PROCESSING CONTINUES WITH NEXT      *\n*                          CONTROL CARD                               *\n*                        IF NOT EQUAL PROCESSING OF CONTROL CARDS     *\n*                          IS SKIPPED UNTIL NEXT RESET                *\n*   SET=<BWO>          SET THE CURRENT PROCESSING DSNAME TO THE       *\n*                      VALUES ENTERED                                 *\n*   RESET              RESETS THE SKIP PROCESSING OPTION FROM A FAILED*\n*                      TEST COMMAND...PROCESSING DSNAME IS ALSO       *\n*                      INITIALIZED                                    *\n*                                                                     *\n* DDNAMES                                                             *\n*   GDEBWOA            INPUT CONTROL CARDS                            *\n*   GDEBWO01           STATUS REPORT OF CONTROL CARDS <OPTIONAL>      *\n*   GDEBWO02           TRACE OF CALL TO ROUTINES      <OPTIONAL>      *\n*                                                                     *\n* SUGGESTED COMMAND SEQUENCE (EXAMPLE 1 .. SIMPLE SET)                *\n*   //GDEBWOA  DD  *                                                  *\n*   SHOW=MY.BWO.DATASET                                               *\n*   SET=000                                                           *\n*                                                                     *\n* SHOW WILL REPORT CURRENT STATUS AND SET WILL CHANGE THE STATUS      *\n*   .........................(EXAMPLE 2 .. SET ONLY IF IN ERROR)      *\n*   //GDEBWOA  DD  *                                                  *\n*   SHOW=MY.BWO.DATASET                                               *\n*   TEST=100                                                          *\n*   SET=000                                                           *\n* SHOW WILL REPORT CURRENT STATUS                                     *\n* TEST WILL MAKE SURE THE SET NEEDS TO BE DONE                        *\n* SET WILL SET THE STATUS ONLY IF THE TEST IS SUCCESSFUL              *\n*   .........................(EXAMPLE 2 .. SET ONLY IF IN ERROR)      *\n*   //GDEBWOA  DD  *                                                  *\n*   SHOW=MY.BWO.DATASET1                                              *\n*   TEST=100                                                          *\n*   SET=000                                                           *\n*   RESET                                                             *\n*   SHOW=MY.BWO.DATASET2                                              *\n*   TEST=100                                                          *\n*   SET=000                                                           *\n* SHOW WILL REPORT CURRENT STATUS                                     *\n* TEST WILL MAKE SURE THE SET NEEDS TO BE DONE                        *\n* SET WILL SET THE STATUS ONLY IF THE TEST IS SUCCESSFUL              *\n* RESET WILL ALLOW THE SECOND SET OF CONTROL CARDS TO BE PROCESSED    *\n* SHOW WILL REPORT CURRENT STATUS                                     *\n* TEST WILL MAKE SURE THE SET NEEDS TO BE DONE                        *\n* SET WILL SET THE STATUS ONLY IF THE TEST IS SUCCESSFUL              *\n* ------------------------------------------------------------------- *\n         MACRO\n&LABEL   GDEDDN   &DDN,                                                X\n               &DDNLOC=,       OR DDNLOCATION                          X\n               &FOUND=,        LABEL                                   X\n               &NOTFOUND=      LABEL\n         LCLB  &ERRORS\n&ERRORS  SETB  0\n         GBLB  &GDEDDNSTORAGEDEFINED\n         AIF   ('&DDNLOC' NE '').A0010\n         AIF   ('&DDN' NE '').A0010\n&ERRORS  SETB  1\n         MNOTE 8,'DDN OR DDNLOC MUST BE DEFINED'\n.A0010   AIF   ('&FOUND' NE '').A0020\n&ERRORS  SETB  1\n         MNOTE 8,'LABEL FOUND MUST BE DEFINED'\n.A0020   AIF   ('&NOTFOUND' NE '').A0030\n&ERRORS  SETB  1\n         MNOTE 8,'LABEL NOTFOUND MUST BE DEFINED'\n.A0030   ANOP\n         AIF   (&ERRORS).Z0010\n.**********************************************************************\n.*                                                                    *\n.* THIS MACRO IS USED TO CHECK THE TIOT FOR A DDNAME                  *\n.*                                                                    *\n.**********************************************************************\n&LABEL   L     R14,=A(GDEDDN_RETURN_TIOT)\n         EXTRACT (R14),FIELDS=TIOT GET TIOT ADDRESS\n         L     R14,=A(GDEDDN_RETURN_TIOT)\n         L     R14,0(R14)        GET TIOT ADDRESS\n         LA    R15,24(R14)       MOVE TO FIRST DDNAME ENTRY IN TIOT\n         XR    R14,R14           CLEAR R14\n         ICM   R14,B'0001',0(R15) MOVE IN LENGTH\n         LTR   R14,R14           END OF TIOT?\n         BZ    &NOTFOUND         YES-BRANCH (RETURN CODE) MUST FIND\n         CH    R14,=H'20'        IS THIS THE LENGTH WE EXPECT?\n         BNE   *+4+6+4           NO-BRANCH (LOOP AGAIN)   MUST BE 20\n         AIF   ('&DDNLOC' NE '').B0010\n         CLC   4(8,R15),=CL8'&DDN' IS THIS THE DDNAME?\n         AGO   .B0020\n.B0010   ANOP\n         CLC   4(8,R15),&DDNLOC    IS THIS THE DDNAME?\n.B0020   ANOP\n         BE    &FOUND            YES-BRANCH (FIND UCB)\n         AR    R15,R14           MOVE TO NEXT TABLE ENTRY\n         B     *-2-4-6-4-4-4-2-4 LOOP AGAIN\n         AIF   (&GDEDDNSTORAGEDEFINED).Z0010\n&GDEDDNSTORAGEDEFINED   SETB   1\nGDEDDN_RETURN_TIOT      DS     F\n.Z0010   ANOP\n         MEND\n         MACRO\n&NAME    GDEH2E   &SOURCE,&TARGET,&LENGTH,&WORKR1=14,&WORKR2=15,       X\n               &WORKR3=R2,&WORKR4=R3,&WORKR5=R1,&SAVE=NO\n         LCLC  &GDEH2ELABEL1\n&GDEH2ELABEL1 SETC 'GDEH2E_'.'&SYSNDX'\n.*\n.*  SET UP STORAGE AS NEEDED\n.*\n         AIF  ('&SAVE' EQ 'NO').A0010\n         CNOP  0,4\n         B     *+28\n&GDEH2ELABEL1 DS    6F\n.A0010   ANOP\n.*\n.*  SAVE REGS IF ASKED TO DO SO\n.*\n         AIF   ('&SAVE' EQ 'NO').A0020\n&NAME    STM   14,3,&GDEH2ELABEL1\n         AGO   .A0030\n.A0020   ANOP\n         AIF   (K'&NAME EQ 0).A0030\n&NAME    EQU   *\n.A0030   ANOP\n         L     &WORKR5,=A(&LENGTH)\n         LA    &WORKR3,&SOURCE\n         LA    &WORKR4,&TARGET\n         ICM   &WORKR2,B'1000',0(&WORKR3)\n         SLL   &WORKR1,4\n         SLDL  &WORKR1,4\n         SLL   &WORKR1,4\n         SLDL  &WORKR1,4\n         STCM  &WORKR1,B'0011',0(&WORKR4)\n         TR    0(2,&WORKR4),=C'0123456789ABCDEF'\n         LA    &WORKR3,1(&WORKR3)\n         LA    &WORKR4,2(&WORKR4)\n         BCT   &WORKR5,*-38\n.*\n.*  RESTORE REGS IF ASKED TO DO SO\n.*\n         AIF   ('&SAVE' EQ 'NO').A0040\n         LM    14,3,&GDEH2ELABEL1\n.A0040   ANOP\n         MEND\n         MACRO\n&LABEL   GDEPRINT &DATA,&TYPE=WRITE,                                   X\n               &OK=,           LABEL                                   X\n               &NOTOK=,        LABEL                                   X\n               &HEADINGS=,     (HEAD1,HEAD2,....HEAD12)                X\n               &TITLE=,        TITLE OR 'CENTER THIS STUFF'            X\n               &BREAKS=, NORMAL,  FORCE, SUBHEADING                    X\n               &BREAKTYPE=, ALLOW, PROHIBIT, NOHEADINGS                X\n               &RESETPAGENUMBER=, NO, YES                              X\n               &TABLELEN=, 80,                                         X\n               &TABLEENTRYLEN=, 80,                                    X\n               &LINESPERPAGE=, 60,                                     X\n               &REPORTDD=,                                             X\n               &NAME=,                                                 X\n               &REPORTID=01,                                           X\n               &CHECK=,                                                X\n               &PARMLIST=\n.**********************************************************************\n.*                                                                    *\n.* THIS MACRO IS USED TO CALL THE PRINT DRIVER ROUTINES               *\n.* INTERFACE BY USING THE TYPE KEYWORK                                *\n.*                                                                    *\n.* TYPE=OPEN        = INITIALIZE AND OPEN THE PRINTER           .C    *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=WRITE       = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=1)  .D    *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=CHARZONENUM = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=2)  .E    *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=DUMP        = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=3)  .F    *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=TABLE       = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=4) .G     *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=HEX         = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=5) .H     *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=TABLEORHEX  = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=6) .I     *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=STORAGE     = WRITE OUTPUT TO THE PRINTER  (SUBTYPE=7) .J     *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=TABLEORHEXWITHTIME = WRITE OUTPUT2PRINTER  (SUBTYPE=8) .K     *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=DUMPSTORAGEANDTIME = WRITE OUTPUT2PRINTER  (SUBTYPE=9) .L     *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=TRACE       = PRINT THE SAVE AREA FROM THE (SUBTYPE=T) .M     *\n.*                    LAST CALL TO EXAMINE FOR ERRORS                 *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=CLOSE       = CLOSE THE PRINTER                        .N     *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                             .O     *\n.* TYPE=CHECK       = CHECK FOR A SET OF LINES TO PRINT AS A BLOCK, IF*\n.*                    SPACE IS NOT AVAILABLE, PERFORM A PAGE BREAK NOW*\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=PAGENUM     = RETURN CURRENT PAGE NUMBER                      *\n.*     RETURN CODES - 00 ALL OK                                       *\n.*                                                                    *\n.* TYPE=PARMLIST DECLARES STORAGE TO BE USED BY PARMLIST              *\n.*                                                                    *\n.* TYPE=DSECT DECLARES DSECT TO MAP THE STORAGE SET ASIDE BY          *\n.*            PARMLIST                                                *\n.*                                                                    *\n.* SAMPLE USAGE                                                       *\n.*   IN DSECT SECTION DECLARE                                         *\n.*            GDEPRINT TYPE=DSECT,REPORTDD=CSD020,NAME=PARMDP,        *\n.*                  REPORTID=05                                       *\n.*   IN OPEN SECTION SPECIFY                                          *\n.*            GDEPRINT TYPE=OPEN,NAME=PARMDP,                         *\n.*                  TITLE='USERPROGRAM TRACING FOR DFHCSDUP',         *\n.*                  HEADINGS=(HEAD1)                                  *\n.*       GDEPRINT TYPE=OPEN,NAME=PARMDP,                              *\n.*             TITLE='USERPROGRAM TRACING FOR DFHCSDUP',              *\n.*             HEADINGS=(HEAD1,HEAD2)                                 *\n.*   IN OUTPUT SECTION USE                                            *\n.*            GDEPRINT LABEL,NAME=PARMDP                              *\n.*            GDEPRINT 0(R8),TYPE=DUMPSTORAGEANDTIME,NAME=PARMDP,     *\n.*                  TABLELEN=40,TABLEENTRYLEN=4                       *\n.*   IN CLOSE SECTION DO                                              *\n.*            GDEPRINT TYPE=CLOSE,NAME=PARMDP                         *\n.*   IN STORAGE SECTION RESERVE STORAGE BY                            *\n.*            GDEPRINT TYPE=PARMLIST,NAME=PARMDP                      *\n.*                                                                    *\n.**********************************************************************\n         GBLC  &GDEPRINTCSECTDEFINED(32)\n         GBLC  &GDEPRINTDSECTDEFINED(32)\n         GBLC  &GDEPRINTREPORTDD(32)\n         GBLC  &GDEPRINTREPORTID(32)\n         LCLA  &CNTA,&CNTB,&CNTC,&CNTD\n         LCLC  &ROUT01,&ROUT01ID\n         LCLC  &CMD,&SUBCMD\n         LCLC  &REPORT,&ZREPORTDD\n         LCLC  &ZBREAKS,&ZBREAKTYPE,&ZRESETPAGENUMBER,\n         LCLC  &ZTABLELEN,&ZTABLEENTRYLEN,&ZLINESPERPAGE\n         LCLC  &LBL\n&ZBREAKS                SETC  '&BREAKS'\n&ZBREAKTYPE             SETC  '&BREAKTYPE'\n&ZRESETPAGENUMBER       SETC  '&RESETPAGENUMBER'\n&ZTABLELEN              SETC  '&TABLELEN'\n&ZTABLEENTRYLEN         SETC  '&TABLEENTRYLEN'\n&ZLINESPERPAGE          SETC  '&LINESPERPAGE'\n.**********************************************************************\n.*\n.*     KEEP A REPORTDD AND REPORT ID IN A LISTING KEYED BY &NAME\n.*\n.**********************************************************************\n         AIF   ('&NAME' NE '').AA000\n         MNOTE 8,'NAME MUST BE SPECIFIED'\n         AGO   .Z0010\n.AA000   ANOP\n.*\n.*     SEARCH TABLE\n.*\n&CNTA    SETA  1\n&REPORT  SETC  '&NAME'.'$$$$$$'\n&REPORT  SETC  '&REPORT'(1,6)\n.AA010   ANOP\n         AIF   ('&GDEPRINTCSECTDEFINED(&CNTA)' EQ '').AA020\n         AIF   ('&GDEPRINTCSECTDEFINED(&CNTA)' EQ '&REPORT').AA030\n&CNTA    SETA  &CNTA+1\n         AIF   (&CNTA LE 32).AA010\n         MNOTE 8,'MORE THAN 32 PRINTOUTS DEFINED - LIMIT REACHED'\n         AGO   .Z0010\n.*\n.*     NOT FOUND SO ADD TO TABLE\n.*\n.AA020   ANOP\n&ZREPORTDD     SETC  '&REPORTDD'\n         AIF   ('&ZREPORTDD' NE '').AA021\n&ZREPORTDD     SETC  '&SYSECT'.'$$$$$$'\n&ZREPORTDD     SETC  '&ZREPORTDD'(1,6)\n.AA021   ANOP\n         AIF   ('&REPORTID' NE '').AA022\n         MNOTE 8,'REPORTID MUST BE SPECIFIED ON THIS CALL'\n         AGO   .Z0010\n.AA022   ANOP\n&CNTB    SETA  K'&REPORTID\n         AIF   (&CNTB EQ 2).AA023\n         MNOTE 8,'REPORTID MUST BE TWO CHARACTERS '\n         AGO   .Z0010\n.AA023   ANOP\n&REPORT  SETC  '&NAME'.'$$$$$$'\n&REPORT  SETC  '&REPORT'(1,6)\n&GDEPRINTCSECTDEFINED(&CNTA) SETC  '&REPORT'\n&GDEPRINTREPORTDD(&CNTA)     SETC  '&ZREPORTDD'\n&GDEPRINTREPORTID(&CNTA)     SETC  '&REPORTID'\n.*\n.*     FOUND IN TABLE TO SET PARMS\n.*\n.AA030     ANOP\n&REPORT    SETC  '&GDEPRINTCSECTDEFINED(&CNTA)'\n&ZREPORTDD SETC '&GDEPRINTREPORTDD(&CNTA)'\n&ROUT01    SETC  '&ZREPORTDD'.'&GDEPRINTREPORTID(&CNTA)'(1,2)\n&ROUT01ID  SETC  '&ZREPORTDD'.'.R'.'&GDEPRINTREPORTID(&CNTA)'(1,2)\n&LBL       SETC  'GDEPRINT_'.'&REPORT'(1,6).'_'\n.**********************************************************************\n.*\n.*     HERE ARE THE MACRO EXPANSIONS FOR CALLING THE I/O MODULE\n.*\n.**********************************************************************\n.*\n.*     TYPE=PARMLIST\n.*\n.A0010   AIF   ('&TYPE' NE 'PARMLIST').B0010\n         AIF   ('&PARMLIST' EQ '').A0020\n&PARMLIST DS  0D       PROGRAMS WORKAREA\n         DS    CL(&LBL.DSECT_LENGTH)\n         AGO   .Z0010\n.A0020   ANOP\n&LBL.DATAAREA DS  0D    PROGRAMS WORKAREA\n         DS    CL(&LBL.DSECT_LENGTH)\n         AGO   .Z0010\n.*\n.*     TYPE=DSECT\n.*\n.B0010   AIF   ('&TYPE' NE 'DSECT').C0010\n&CNTA    SETA  1\n.B0020   ANOP\n         AIF   ('&GDEPRINTDSECTDEFINED(&CNTA)' EQ '').B0030\n         AIF   ('&GDEPRINTDSECTDEFINED(&CNTA)' EQ '&NAME').Z0010\n&CNTA    SETA  &CNTA+1\n         AIF   (&CNTA LE 32).B0020\n         MNOTE 8,'MORE THAN 32 PRINTOUTS DEFINED - LIMIT REACHED'\n         AGO   .B0020\n.B0030   ANOP\n&GDEPRINTDSECTDEFINED(&CNTA) SETC '&NAME'\n&LBL.DSECT          DSECT        PRINT PARMLIST DSECT\n&LBL.COMMAND        DS   CL1     CURRENT COMMAND\n&LBL.SUBCOMMAND     DS   CL1     SUBCOMMAND\n&LBL.DDNAME         DS   CL8     DDNAME FOR OUTPUT\n&LBL.LENGTH         DS   AL2     TOTAL LENGTH OF A BLOCK TO PRINT\n&LBL.SUBLENGTH      DS   AL2     SUB AREA LENTGTH IN A BLOCK\n&LBL.REPORTID       DS   CL10    ID TO PUT ON REPORT\n&LBL.LINESPERPAGE   DS   PL2     LINE OF OUTPUT BEFORE PAGE BREAK\n&LBL.FORCENEWPAGE   DS   CL1     FORCE A NEW PAGE NOW\n&LBL.NEWPAGEALLOWED DS   CL1     IS A NEW PAGE ALLOWED\n&LBL.RESETPAGENUMBER DS  CL1     RESET THE PAGE NUMBER TO 1\n&LBL.RETURNCODE     DS   CL2     RETURN CODE FROM THE ROUTINE\n&LBL.CHECKCOUNT     DS   PL2     COUNT OF LINE FOR TYPE=CHECK\n                    DS  0F\n&LBL.ROUTINEADDRESS DS   CL4     ADDRESS OF PRINT PROGRAM\n&LBL.PARMADDRESS    DS   CL4     ADDRESS PARM AREA\n&LBL.USERDATAAREA   DS   CL4     ADDRESS USERDATAAREA\n&LBL.HEADERADDRESS  DS   CL4     ADDRESS HEADERS\n                    DS   11AL4   UP TO 12 HEADERS ALLOWED\n&LBL.HEADING        DS   CL133   CENTER HEADING AREA\n&LBL.DSECT_LENGTH   EQU  *-&LBL.DSECT\n         AGO   .Z0010\n.*\n.*     TYPE=OPEN\n.*\n.C0010   AIF   ('&TYPE' NE 'OPEN').D0010\n         AIF   ('&PARMLIST' EQ '').C0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .C0030\n.C0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.C0030   ANOP\n         USING &LBL.DSECT,R1\n         L     R15,=V(GDEPRINT)\n         ST    R15,&LBL.ROUTINEADDRESS\n         AIF      ('&ZBREAKS' NE '').C0040\n&ZBREAKS          SETC  'NORMAL'\n.C0040   ANOP\n         AIF      ('&ZBREAKTYPE' NE '').C0050\n&ZBREAKTYPE       SETC  'ALLOW'\n.C0050   ANOP\n         AIF      ('&ZRESETPAGENUMBER' NE '').C0060\n&ZRESETPAGENUMBER SETC  'NO'\n.C0060   ANOP\n         AIF      ('&ZTABLELEN' NE '').C0070\n&ZTABLELEN        SETC  '80'\n.C0070   ANOP\n         AIF      ('&ZTABLEENTRYLEN' NE '').C0080\n&ZTABLEENTRYLEN   SETC  '80'\n.C0080   ANOP\n         AIF      ('&ZLINESPERPAGE' NE '').C0090\n&ZLINESPERPAGE    SETC  '60'\n.C0090   ANOP\n&CMD     SETC  '1'\n&SUBCMD  SETC  '1'\n         AGO   .P0010\n.*\n.*     TYPE=WRITE\n.*\n.D0010   AIF   ('&TYPE' NE 'WRITE').E0010\n         AIF   ('&PARMLIST' EQ '').D0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .D0030\n.D0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.D0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '2'\n&SUBCMD  SETC  '1'\n         AGO   .P0010\n.*\n.*     TYPE=CHARZONENUM\n.*\n.E0010   AIF   ('&TYPE' NE 'CHARZONENUM').F0010\n         AIF   ('&PARMLIST' EQ '').E0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .E0030\n.E0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.E0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '2'\n&SUBCMD  SETC  '2'\n         AGO   .P0010\n.*\n.*     TYPE=DUMP\n.*\n.F0010   AIF   ('&TYPE' NE 'DUMP').G0010\n         AIF   ('&PARMLIST' EQ '').F0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .F0030\n.F0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.F0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '2'\n&SUBCMD  SETC  '3'\n         AGO   .P0010\n.*\n.*     TYPE=TABLE\n.*\n.G0010   AIF   ('&TYPE' NE 'TABLE').H0010\n         AIF   ('&PARMLIST' EQ '').G0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .G0030\n.G0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.G0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '2'\n&SUBCMD  SETC  '4'\n         AGO   .P0010\n.*\n.*     TYPE=HEX\n.*\n.H0010   AIF   ('&TYPE' NE 'HEX').I0010\n         AIF   ('&PARMLIST' EQ '').H0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .H0030\n.H0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.H0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '2'\n&SUBCMD  SETC  '5'\n         AGO   .P0010\n.*\n.*     TYPE=TABLEORHEX\n.*\n.I0010   AIF   ('&TYPE' NE 'TABLEORHEX').J0010\n         AIF   ('&PARMLIST' EQ '').I0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .I0030\n.I0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.I0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '2'\n&SUBCMD  SETC  '6'\n         AGO   .P0010\n.*\n.*     TYPE=STORAGE\n.*\n.J0010   AIF   ('&TYPE' NE 'STORAGE').K0010\n         AIF   ('&PARMLIST' EQ '').J0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .J0030\n.J0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.J0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '2'\n&SUBCMD  SETC  '1'\n         AGO   .P0010\n.*\n.*     TYPE=TABLEORHEXWITHTIME\n.*\n.K0010   AIF   ('&TYPE' NE 'TABLEORHEXWITHTIME').L0010\n         AIF   ('&PARMLIST' EQ '').K0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .K0030\n.K0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.K0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '2'\n&SUBCMD  SETC  '8'\n         AGO   .P0010\n.*\n.*     TYPE=DUMPSTORAGEANDTIME\n.*\n.L0010   AIF   ('&TYPE' NE 'DUMPSTORAGEANDTIME').M0010\n         AIF   ('&PARMLIST' EQ '').L0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .L0030\n.L0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.L0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '2'\n&SUBCMD  SETC  '9'\n         AGO   .P0010\n.*\n.*     TYPE=TRACE\n.*\n.M0010   AIF   ('&TYPE' NE 'TRACE').N0010\n         AIF   ('&PARMLIST' EQ '').M0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .M0030\n.M0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.M0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '2'\n&SUBCMD  SETC  'T'\n         AGO   .P0010\n.*\n.*     TYPE=CLOSE\n.*\n.N0010   AIF   ('&TYPE' NE 'CLOSE').O0010\n         AIF   ('&PARMLIST' EQ '').N0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .N0030\n.N0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.N0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '3'\n&SUBCMD  SETC  '1'\n         AGO   .P0010\n.*\n.*     TYPE=CHECK\n.*\n.O0010   AIF   ('&TYPE' NE 'CHECK').Q0010\n         AIF   ('&PARMLIST' EQ '').O0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .O0030\n.O0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.O0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '4'\n&SUBCMD  SETC  '1'\n         AGO   .P0010\n.*\n.*     TYPE=PAGENUM\n.*\n.Q0010   AIF   ('&TYPE' NE 'PAGENUM').Z0020\n         AIF   ('&PARMLIST' EQ '').Q0020\n&LABEL   LA    R1,&PARMLIST\n         AGO   .Q0030\n.Q0020   ANOP\n&LABEL   LA    R1,&LBL.DATAAREA\n.Q0030   ANOP\n         USING &LBL.DSECT,R1\n&CMD     SETC  '5'\n&SUBCMD  SETC  '1'\n         AGO   .P0010\n.**********************************************************************\n.*\n.*     ALL THE PARMS ARE SET UP TO BUILD STATEMENTS SO BUILD STATEMENTS\n.*\n.**********************************************************************\n.P0010   ANOP\n.*\n.*     DO COMMAND AND SUBCOMMAND\n.*\n         MVI   &LBL.COMMAND,C'&CMD'\n         MVI   &LBL.SUBCOMMAND,C'&SUBCMD'\n.*\n.*     DO REPORT DD\n.*\n         AIF   ('&TYPE' EQ 'OPEN').P0010A\n         AIF   ('&REPORTDD' EQ '').P0011\n.P0010A  ANOP\n         MVC   &LBL.DDNAME,=CL8'&ROUT01'\n.*\n.*     DO TABLE LENGTH AND ENTRY LENGTH\n.*\n.P0011   AIF   ('&ZTABLELEN' EQ '').P0012\n         AIF   ('&ZTABLELEN'(1,1) EQ '(').P0011A\n         MVC   &LBL.LENGTH,=AL2(&ZTABLELEN)\n         AGO   .P0012\n.P0011A  STCM  &ZTABLELEN,B'0011',&LBL.LENGTH\n.P0012   AIF   ('&ZTABLEENTRYLEN' EQ '').P0013\n         AIF   ('&ZTABLEENTRYLEN'(1,1) EQ '(').P0012A\n         MVC   &LBL.SUBLENGTH,=AL2(&ZTABLEENTRYLEN)\n         AGO   .P0013\n.P0012A  STCM  &ZTABLEENTRYLEN,B'0011',&LBL.SUBLENGTH\n.*\n.*     DO REPORT ID\n.*\n.P0013   AIF   ('&ROUT01ID' EQ '').P0014\n         MVC   &LBL.REPORTID,=CL10'&ROUT01ID'\n.*\n.*     DO LINES PER PAGE\n.*\n.P0014   AIF   ('&ZLINESPERPAGE' EQ '').P0015\n         ZAP   &LBL.LINESPERPAGE,=P'&ZLINESPERPAGE'\n.*\n.*     DO BREAKS\n.*\n.P0015   AIF   ('&ZBREAKS' EQ '').P0020\n         AIF   ('&ZBREAKS' EQ 'NORMAL').P0016\n         AIF   ('&ZBREAKS' EQ 'FORCE').P0017\n         AIF   ('&ZBREAKS' EQ 'SUBHEADING').P0018\n MNOTE *,'INVALID BREAKS PARAMETER. USE NORMAL, FORCE, OR SUBHEADING'\n.P0016   ANOP\n         MVI   &LBL.FORCENEWPAGE,C'1'\n         AGO   .P0020\n.P0017   ANOP\n         MVI   &LBL.FORCENEWPAGE,C'2'\n         AGO   .P0020\n.P0018   ANOP\n         MVI   &LBL.FORCENEWPAGE,C'3'\n         AGO   .P0020\n.*\n.*     DO BREAK TYPE\n.*\n.P0020   AIF   ('&ZBREAKTYPE' EQ '').P0030\n         AIF   ('&ZBREAKTYPE' EQ 'ALLOW').P0021\n         AIF   ('&ZBREAKTYPE' EQ 'PROHIBIT').P0022\n         AIF   ('&ZBREAKTYPE' EQ 'NOHEADINGS').P0023\n     MNOTE *,'BREAKTYPE IS INVALID. USE ALLOW, PROHIBIT, OR NOHEADINGS'\n.P0021   ANOP\n         MVI   &LBL.NEWPAGEALLOWED,C'1'\n         AGO   .P0030\n.P0022   ANOP\n         MVI   &LBL.NEWPAGEALLOWED,C'2'\n         AGO   .P0030\n.P0023   ANOP\n         MVI   &LBL.NEWPAGEALLOWED,C'3'\n         AGO   .P0030\n.*\n.*     DO LINE NO RESET\n.*\n.P0030   AIF   ('&ZRESETPAGENUMBER' EQ '').P0040\n         AIF   ('&ZRESETPAGENUMBER' EQ 'YES').P0031\n         AIF   ('&ZRESETPAGENUMBER' EQ 'NO').P0032\n     MNOTE *,'RESETPAGENUMBER IS INVALID. USE YES OR NO'\n.P0031   ANOP\n         MVI   &LBL.RESETPAGENUMBER,C'2'\n         AGO   .P0040\n.P0032   ANOP\n         MVI   &LBL.RESETPAGENUMBER,C'1'\n         AGO   .P0040\n.*\n.*     DO RETURN CODE\n.*\n.P0040   ANOP\n         MVC   &LBL.RETURNCODE,=CL2'00'\n.**********************************************************************\n.*\n.*     BUILD PARM LIST\n.*\n.**********************************************************************\n.*\n.*     FIRST PARM\n.*\n         LA    R14,&LBL.COMMAND\n         ST    R14,&LBL.PARMADDRESS\n.*\n.*     SECOND PARM\n.*\n         AIF   ('&CHECK' EQ '').P0060\n         ZAP   &LBL.CHECKCOUNT,=P'&CHECK'\n         LA    R14,&LBL.CHECKCOUNT\n         ST    R14,&LBL.USERDATAAREA\n         AGO   .P0070\n.P0060   ANOP\n         AIF   ('&DATA' EQ '').P0065\n         LA    R14,&DATA\n         ST    R14,&LBL.USERDATAAREA\n         AGO   .P0070\n.P0065   ANOP\n         LA    R14,0\n         ST    R14,&LBL.USERDATAAREA\n.P0070   ANOP\n.*\n.*     THIRD PARM\n.*\n&CNTA    SETA  1\n&CNTB    SETA  1\n         AIF   ('&TITLE' EQ '').P0080\n         AIF   ('&TITLE'(1,1) EQ '''').P0075\n&CNTB    SETA  2\n&CNTC    SETA  L'&TITLE\n&CNTD    SETA  (133-&CNTC)/2\n         MVC   &LBL.HEADING,=CL133' '\n         MVC   &LBL.HEADING+&CNTD.(&CNTC),&TITLE\n         LA    R14,&LBL.HEADING\n         ST    R14,&LBL.HEADERADDRESS\n         AGO   .P0080\n.P0075   ANOP\n&CNTB    SETA  2\n&CNTC    SETA  K'&TITLE-2\n&CNTD    SETA  (133-&CNTC)/2\n         MVC   &LBL.HEADING,=CL133' '\n         MVC   &LBL.HEADING+&CNTD.(&CNTC),=C&TITLE\n         LA    R14,&LBL.HEADING\n         ST    R14,&LBL.HEADERADDRESS\n         AGO   .P0080\n.*\n.*     FOURTH THRU FIFTEENTH PARMS\n.*\n.P0080   ANOP\n&CNTC    SETA  N'&HEADINGS\n         AIF   (&CNTC EQ 0).P0090\n.P0081   AIF   (&CNTA GT &CNTC).P0086\n         AIF   (&CNTB GT 12).P0084\n&CNTD    SETA  4*(&CNTB-1)\n         LA    R14,&HEADINGS(&CNTA)\n         ST    R14,&LBL.HEADERADDRESS+&CNTD\n&CNTA    SETA &CNTA+1\n&CNTB    SETA &CNTB+1\n         AGO   .P0081\n.P0084   MNOTE 8,'MAXUMIM OF HEADING LINES EXCEEDED.'\n         AGO   .P0090\n.P0086   ANOP\n&CNTD    SETA  4*(&CNTB-2)\n         OI    &LBL.HEADERADDRESS+&CNTD,X'80'\n.P0090   ANOP\n.**********************************************************************\n.*\n.*     CALL THE ROUTINE\n.*\n.**********************************************************************\n         L     R15,&LBL.ROUTINEADDRESS\n         LA    1,&LBL.PARMADDRESS\n         CALL  (15)\n.**********************************************************************\n.*\n.*     CHECK RETURN CODES\n.*\n.**********************************************************************\n         AIF   ('&OK' NE '').P0099\n         AIF   ('&NOTOK' NE '').P0099\n         AIF   ('&ZBREAKS' EQ 'FORCE').P0099\n         DROP  R1\n         AGO   .Z0010\n.P0099   AIF   ('&PARMLIST' EQ '').P0100\n         LA    R1,&PARMLIST\n         AGO   .P0110\n.P0100   ANOP\n         LA    R1,&LBL.DATAAREA\n.P0110   ANOP\n         AIF   ('&ZBREAKS' NE 'FORCE').P0120\n         MVI   &LBL.FORCENEWPAGE,C'1'\n.P0120   ANOP\n         AIF   ('&TYPE' EQ 'CHECK').P0150\n.*\n.*     RETURN CODE CHECKING FOR ALL BUT TYPE=CHECK\n.*\n         AIF   ('&OK' EQ '').P0130\n         CLI   &LBL.RETCODE,C'0'\n         BE    &OK\n.P0130   AIF   ('&NOTOK' EQ '').P0140\n         CLI   &LBL.RETCODE,C'0'\n         BNE   &NOTOK\n.P0140   ANOP\n         DROP  R1\n         AGO   .Z0010\n.*\n.*     RETURN CODE CHECKING FOR TYPE=CHECK\n.*\n.P0150   ANOP\n         AIF   ('&OK' EQ '').P0160\n         CP    &LBL.CHECKCOUNT,=P'0'\n         BNE   &OK\n.P0160   AIF   ('&NOTOK' EQ '').P0170\n         CP    &LBL.CHECKCOUNT,=P'0'\n         BE    &NOTOK\n.P0170   ANOP\n         DROP  R1\n         AGO   .Z0010\n.*\n.*     HERE ARE THE MACRO EXPANSIONS FOR CALLING THE I/O MODULE\n.*\n.**********************************************************************\n.Z0010   ANOP\n         MEXIT\n.Z0020   ANOP\n         MNOTE 8,'*** TYPE VALUE UNKNOWN, CHECK TYPE KEYWORD ***'\n         MEND\n         MACRO\n&TAG     GDESUBEN\n         GBLC  &TAGNAME,&TAGREGS\n.**********************************************************************\n.*                                                                    *\n.*  IF RENT SUPPLIED, THEN USE AS DSECT TO SAVE STORAGE AREA          *\n.*                                                                    *\n.**********************************************************************\n         AIF   ('&TAGREGS' EQ 'NO').B1000\n.A1000   ANOP\n&TAG     L     R14,&TAGREGS\n         LM    R2,R12,&TAGREGS+16\n         BR    R14\n         SPACE\n         DC    C'LTORG START &TAGNAME'\n         LTORG\n         DC    C'END LTORG &TAGNAME'\n         AGO   .Z1000\n.**********************************************************************\n.*                                                                    *\n.*  IF RENT NOT SUPPLIED, THEN USE LOCAL SAVE AREA                    *\n.*                                                                    *\n.**********************************************************************\n.B1000   ANOP\n&TAG     L     R14,&TAGNAME+8\n         LM    R2,R12,&TAGNAME+24\n         BR    R14\n         SPACE\n         DC    C'LTORG START &TAGNAME'\n         LTORG\n         DC    C'END LTORG &TAGNAME'\n         AGO   .Z1000\n.**********************************************************************\n.*                                                                    *\n.*  GLOBALS ARE SET, CODE IS GENERATED, SO GET OUT OF HERE ALIVE.     *\n.*                                                                    *\n.**********************************************************************\n.Z1000   ANOP\n         MEND\n         MACRO\n&TAG     GDESUBST &RENT=NO\n         GBLC  &TAGNAME,&TAGREGS\n         LCLC  &SAREA\n.**********************************************************************\n&TAGNAME SETC  '&TAG'\n&TAGREGS SETC  '&TAG'(1,3).'&SYSNDX'\n&SAREA   SETC  '&RENT'\n.**********************************************************************\n.*                                                                    *\n.*  IF RENT SUPPLIED, THEN USE AS DSECT TO SAVE STORAGE AREA          *\n.*                                                                    *\n.**********************************************************************\n         AIF   ('&RENT' EQ 'NO').B1000\n.A1000   ANOP\n&SAREA   DSECT\n&TAGREGS DS  15F\n&SYSECT  CSECT\n         DROP  R12\n         CNOP  0,4\n&TAGNAME STM   R14,R12,&TAGREGS\n         LR    R12,R15\n         USING &TAGNAME,R12\n         AGO   .Z1000\n.**********************************************************************\n.*                                                                    *\n.*  IF RENT NOT SUPPLIED, THEN USE LOCAL SAVE AREA                    *\n.*                                                                    *\n.**********************************************************************\n.B1000   ANOP\n&TAGREGS SETC  'NO'\n         DROP  R12\n         CNOP  0,4\n&TAGNAME STM   R14,R12,8(R15)\n         B     68(R15)\n         DC    15F'-1'\n         LR    R12,R15\n         USING &TAGNAME,R12\n         AGO   .Z1000\n.**********************************************************************\n.*                                                                    *\n.*  GLOBALS ARE SET, CODE IS GENERATED, SO GET OUT OF HERE ALIVE.     *\n.*                                                                    *\n.**********************************************************************\n.Z1000   ANOP\n         MEND\n         MACRO\n&TAG     GDEGOSUB &ROUTINE,&PARM\n         AIF   (T'&PARM EQ 'O').A2000\n&TAG     BAL   R1,*+8\n         DC    AL4(&PARM)\n         L     R15,=A(&ROUTINE)\n         BALR  R14,R15\n         LTR   R15,R15\n         MEXIT\n.A2000   ANOP\n&TAG     L     R15,=A(&ROUTINE)\n         BALR  R14,R15\n         LTR   R15,R15\n         MEND\n         MACRO\n&TAG     GDEEXIT\n         GBLB  &GDESAVE\n         GBLB  &GDERENT\n         GBLB  &GDEREGS\n         GBLB  &GDEMODE\n         GBLC  &GDESANM\n.**********************************************************************\n.*  ASSIGN DEFAULTS                                                   *\n.**********************************************************************\n&TAG     DS   0H\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *\n.**********************************************************************\n.GDE0100 AIF   (&GDEMODE).GDE0400\n         AIF   (&GDESAVE).GDE0110\n         AGO   .GDE0300\n.GDE0110 AIF   (&GDERENT).GDE0200\n         LR    R1,R13\n         L     R13,4(R1)\n         XC    8(4,R13),8(R13)\n         XC    4(4,R1),4(R1)\n         L     R14,12(R13)\n         LM    R2,R12,28(R13)\n         BR    R14\n         AGO   .GDE0900\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *\n.**********************************************************************\n.GDE0200 ANOP\n         LR    R1,R13\n         L     R13,4(R1)\n         XC    8(4,R13),8(R13)\n         XC    4(4,R1),4(R1)\n         STORAGE RELEASE,ADDR=(1),LENGTH=72\n         L     R14,12(R13)\n         LM    R2,R12,28(R13)\n         BR    R14\n         AGO   .GDE0900\n.**********************************************************************\n.*  RETURN R14                                                        *\n.**********************************************************************\n.GDE0300 ANOP\n         BR    R14\n         AGO   .GDE0900\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *\n.**********************************************************************\n.GDE0400 AIF   (&GDESAVE).GDE0410\n         AGO   .GDE0600\n.GDE0410 AIF   (&GDERENT).GDE0500\n         PR\n         AGO   .GDE0900\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *\n.**********************************************************************\n.GDE0500 ANOP\n         LAE   R1,0(R13)\n         STORAGE RELEASE,ADDR=(1),LENGTH=72\n         PR\n         AGO   .GDE0900\n.**********************************************************************\n.*  RETURN PR                                                         *\n.**********************************************************************\n.GDE0600 ANOP\n         PR\n.GDE0900 ANOP\n         LTORG\n         MEND\n         MACRO\n&TAG     GDESTART &BR0,&BR1,&BR2,&BR3,&BR4,&BR5,&BR6,                  C\n               &SAVEAREA=NO,&RENT=NO,&ARMODE=NO\n         GBLB  &GDESAVE\n         GBLB  &GDEMODE\n         GBLB  &GDERENT\n         GBLB  &GDEREGS\n         GBLC  &GDESANM\n         LCLC  &TAGNAME,&C\n         LCLC  &DBR0,&DBR1,&DBR2,&DBR3,&DBR4,&DBR5,&DBR6\n.**********************************************************************\n.*  ASSIGN DEFAULTS                                                   *\n.**********************************************************************\n&GDESANM SETC  '$GDE'.'&SYSNDX'        POSSIBLE SAVE AREA NAME\n&C       SETC  ','                     COMMA FOR USING\n&TAGNAME SETC  'GDENONAME'             POSSIBLE DEFAULT PGM NAME\n         AIF   ('&TAG' EQ '').GDE0010\n&TAGNAME SETC  '&TAG'\n.GDE0010 ANOP\n&DBR0    SETC  '&BR0'\n&DBR1    SETC  '&BR1'\n&DBR2    SETC  '&BR2'\n&DBR3    SETC  '&BR3'\n&DBR4    SETC  '&BR4'\n&DBR5    SETC  '&BR5'\n&DBR6    SETC  '&BR6'\n         AIF   ('&DBR0' NE '').GDE0020\n&DBR0    SETC  'R12'                   DEFAULT BASE REG\n.GDE0020 ANOP\n&GDESAVE SETB  1\n         AIF   (T'&SAVEAREA NE 'O').GDE0030\n&GDESAVE SETB  0\n.GDE0030 ANOP\n&GDERENT SETB  0\n         AIF   ('&RENT' EQ 'NO').GDE0040\n         AIF   ('&RENT' NE 'YES').GDE0035\n&GDERENT SETB  1\n         AGO   .GDE0040\n.GDE0035 MNOTE 8,'INVALID RENT, MUST BE YES OR NO'\n.GDE0040 ANOP\n         AIF   ('&ARMODE' EQ 'NO').GDE0050\n         AIF   ('&ARMODE' NE 'YES').GDE0045\n&GDEMODE SETB  1\n         AGO   .GDE0050\n.GDE0045 MNOTE 8,'INVALID ARMODE, MUST BE YES OR NO'\n.GDE0050 ANOP\n.**********************************************************************\n.*  GENERATE CSECT ENTRY CODE AND ID LITERALS                         *\n.**********************************************************************\n&TAGNAME CSECT\n         B     48(15)\n         PUSH  PRINT\n         PRINT ON,GEN\n         DC    FL1'44'\n         DC    CL9'&TAGNAME'\n         DC    CL9'&SYSDATE'\n         DC    CL5'&SYSTIME'\n         DC    CL20'COPYRIGHT GDE, INC.'\n.**********************************************************************\n.*  GENERATE REGISTER ASSIGNMENTS                                     *\n.**********************************************************************\n         AIF   (&GDEREGS).GDE0060\n&GDEREGS SETB   1\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\nAR0      EQU   0\nAR1      EQU   1\nAR2      EQU   2\nAR3      EQU   3\nAR4      EQU   4\nAR5      EQU   5\nAR6      EQU   6\nAR7      EQU   7\nAR8      EQU   8\nAR9      EQU   9\nAR10     EQU   10\nAR11     EQU   11\nAR12     EQU   12\nAR13     EQU   13\nAR14     EQU   14\nAR15     EQU   15\n.GDE0060 ANOP\n         POP   PRINT\n.**********************************************************************\n.*  SAVE INCOMING REGISTERS                                           *\n.**********************************************************************\n         AIF   (&GDEMODE).GDE0400\n         STM   14,12,12(13)\n.**********************************************************************\n.*  GENERATE BASE REGISTER ASSIGNMENTS                                *\n.**********************************************************************\n.GDE0100 ANOP\n         AIF   ('&DBR1' NE '').GDE0110\n         AIF   ('&DBR0' EQ 'R15').GDE0101\n         LR    &DBR0,R15\n.GDE0101 ANOP\n         USING &TAGNAME&C&DBR0\n         AGO   .GDE0200\n.GDE0110 AIF   ('&DBR2' NE '').GDE0120\n         AIF   ('&DBR0' EQ 'R15').GDE0111\n         LR    &DBR0,R15\n.GDE0111 ANOP\n         LA    &DBR1,2048(&DBR0)\n         LA    &DBR1,2048(&DBR1)\n         USING &TAGNAME&C&DBR0&C&DBR1\n         AGO   .GDE0200\n.GDE0120 AIF   ('&DBR3' NE '').GDE0130\n         AIF   ('&DBR0' EQ 'R15').GDE0121\n         LR    &DBR0,R15\n.GDE0121 ANOP\n         LA    &DBR1,2048(&DBR0)\n         LA    &DBR1,2048(&DBR1)\n         LA    &DBR2,2048(&DBR1)\n         LA    &DBR2,2048(&DBR2)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2\n         AGO   .GDE0200\n.GDE0130 AIF   ('&DBR4' NE '').GDE0140\n         AIF   ('&DBR0' EQ 'R15').GDE0131\n         LR    &DBR0,R15\n.GDE0131 ANOP\n         LA    &DBR1,2048(&DBR0)\n         LA    &DBR1,2048(&DBR1)\n         LA    &DBR2,2048(&DBR1)\n         LA    &DBR2,2048(&DBR2)\n         LA    &DBR3,2048(&DBR2)\n         LA    &DBR3,2048(&DBR3)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3\n.GDE0140 AIF   ('&DBR5' NE '').GDE0150\n         AIF   ('&DBR0' EQ 'R15').GDE0141\n         LR    &DBR0,R15\n.GDE0141 ANOP\n         LA    &DBR1,2048(&DBR0)\n         LA    &DBR1,2048(&DBR1)\n         LA    &DBR2,2048(&DBR1)\n         LA    &DBR2,2048(&DBR2)\n         LA    &DBR3,2048(&DBR2)\n         LA    &DBR3,2048(&DBR3)\n         LA    &DBR4,2048(&DBR3)\n         LA    &DBR4,2048(&DBR4)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4\n         AGO   .GDE0200\n.GDE0150 AIF   ('&DBR6' NE '').GDE0160\n         AIF   ('&DBR0' EQ 'R15').GDE0151\n         LR    &DBR0,R15\n.GDE0151 ANOP\n         LA    &DBR1,2048(&DBR0)\n         LA    &DBR1,2048(&DBR1)\n         LA    &DBR2,2048(&DBR1)\n         LA    &DBR2,2048(&DBR2)\n         LA    &DBR3,2048(&DBR2)\n         LA    &DBR3,2048(&DBR3)\n         LA    &DBR4,2048(&DBR3)\n         LA    &DBR4,2048(&DBR4)\n         LA    &DBR5,2048(&DBR4)\n         LA    &DBR5,2048(&DBR5)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5\n         AGO   .GDE0200\n.GDE0160 ANOP\n         AIF   ('&DBR0' EQ 'R15').GDE0161\n         LR    &DBR0,R15\n.GDE0161 ANOP\n         LA    &DBR1,2048(&DBR0)\n         LA    &DBR1,2048(&DBR1)\n         LA    &DBR2,2048(&DBR1)\n         LA    &DBR2,2048(&DBR2)\n         LA    &DBR3,2048(&DBR2)\n         LA    &DBR3,2048(&DBR3)\n         LA    &DBR4,2048(&DBR3)\n         LA    &DBR4,2048(&DBR4)\n         LA    &DBR5,2048(&DBR4)\n         LA    &DBR5,2048(&DBR5)\n         LA    &DBR6,2048(&DBR5)\n         LA    &DBR6,2048(&DBR6)\n        USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5&C&DBR6\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *\n.**********************************************************************\n.GDE0200 ANOP\n         AIF   (&GDESAVE).GDE0210\n         AGO   .GDE0900\n.GDE0210 AIF   (&GDERENT).GDE0300\n         B     &GDESANM+72\n&GDESANM DC    3F'0',15F'-1'\n         LA    R1,&GDESANM\n         ST    R1,8(R13)\n         ST    R13,4(R1)\n         L     R1,24(R13)\n         L     R13,8(R13)\n         XC    0(4,R13),0(R13)\n         AGO   .GDE0900\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *\n.**********************************************************************\n.GDE0300 ANOP\n         STORAGE OBTAIN,LENGTH=72\n         ST    R1,8(R13)\n         ST    R13,4(R1)\n         LM    R0,R1,20(R13)\n         L     R13,8(R13)\n         XC    0(4,R13),0(R13)\n         AGO   .GDE0900\n.**********************************************************************\n.*  GENERATE BASE REGISTER ASSIGNMENTS                                *\n.**********************************************************************\n.GDE0400 ANOP\n         BAKR  14,0\n         SAC   512\n         SYSSTATE ASCENV=AR\n         AIF   ('&DBR1' NE '').GDE0410\n         AIF   ('&DBR0' EQ 'R15').GDE0401\n         LAE   &DBR0,0(R15,0)\n.GDE0401 ANOP\n         USING &TAGNAME&C&DBR0\n         AGO   .GDE0500\n.GDE0410 AIF   ('&DBR2' NE '').GDE0420\n         AIF   ('&DBR0' EQ 'R15').GDE0411\n         LAE   &DBR0,0(R15,0)\n.GDE0411 ANOP\n         LAE   &DBR1,2048(&DBR0)\n         LAE   &DBR1,2048(&DBR1)\n         USING &TAGNAME&C&DBR0&C&DBR1\n         AGO   .GDE0500\n.GDE0420 AIF   ('&DBR3' NE '').GDE0430\n         AIF   ('&DBR0' EQ 'R15').GDE0421\n         LAE   &DBR0,0(R15,0)\n.GDE0421 ANOP\n         LAE   &DBR1,2048(&DBR0)\n         LAE   &DBR1,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR2)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2\n         AGO   .GDE0500\n.GDE0430 AIF   ('&DBR4' NE '').GDE0440\n         AIF   ('&DBR0' EQ 'R15').GDE0431\n         LAE   &DBR0,0(R15,0)\n.GDE0431 ANOP\n         LAE   &DBR1,2048(&DBR0)\n         LAE   &DBR1,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR3)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3\n.GDE0440 AIF   ('&DBR5' NE '').GDE0450\n         AIF   ('&DBR0' EQ 'R15').GDE0441\n         LAE   &DBR0,0(R15,0)\n.GDE0441 ANOP\n         LAE   &DBR1,2048(&DBR0)\n         LAE   &DBR1,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR3)\n         LAE   &DBR4,2048(&DBR3)\n         LAE   &DBR4,2048(&DBR4)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4\n         AGO   .GDE0500\n.GDE0450 AIF   ('&DBR6' NE '').GDE0460\n         AIF   ('&DBR0' EQ 'R15').GDE0451\n         LAE   &DBR0,0(R15,0)\n.GDE0451 ANOP\n         LAE   &DBR1,2048(&DBR0)\n         LAE   &DBR1,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR3)\n         LAE   &DBR4,2048(&DBR3)\n         LAE   &DBR4,2048(&DBR4)\n         LAE   &DBR5,2048(&DBR4)\n         LAE   &DBR5,2048(&DBR5)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5\n         AGO   .GDE0500\n.GDE0460 ANOP\n         AIF   ('&DBR0' EQ 'R15').GDE0461\n         LAE   &DBR0,0(R15,0)\n.GDE0461 ANOP\n         LAE   &DBR1,2048(&DBR0)\n         LAE   &DBR1,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR3)\n         LAE   &DBR4,2048(&DBR3)\n         LAE   &DBR4,2048(&DBR4)\n         LAE   &DBR5,2048(&DBR4)\n         LAE   &DBR5,2048(&DBR5)\n         LAE   &DBR6,2048(&DBR5)\n         LAE   &DBR6,2048(&DBR6)\n        USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5&C&DBR6\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *\n.**********************************************************************\n.GDE0500 ANOP\n         AIF   (&GDESAVE).GDE0510\n         AGO   .GDE0900\n.GDE0510 AIF   (&GDERENT).GDE0600\n         B     &GDESANM+72\n&GDESANM DC    3F'0',15F'-1'\n         LAE   R13,&GDESANM\n         MVC   4(4,R13),=C'F1SA'\n         AGO   .GDE0900\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *\n.**********************************************************************\n.GDE0600 ANOP\n         STORAGE OBTAIN,LENGTH=72\n         LAE   R13,0(R1)\n         MVC   4(4,R13),=C'F1SA'\n.GDE0900 ANOP\n         MEND\n         GDEPRINT TYPE=DSECT,REPORTDD=GDEBWO,NAME=STATUS,              X\n               REPORTID=01\n         GDEPRINT TYPE=DSECT,REPORTDD=GDEBWO,NAME=PARMDP,              X\n               REPORTID=02\n         GDEPRINT TYPE=DSECT,REPORTDD=GDEBWO,NAME=BWOPRT,              X\n               REPORTID=03\n         GDEPRINT TYPE=DSECT,REPORTDD=GDEBWO,NAME=RETRSN,              X\n               REPORTID=04\n* ------------------------------------------------------------------- *\n* PROGRAM LOGIC STARTS HERE                                           *\n* ------------------------------------------------------------------- *\nGDEBWOBT GDESTART R12,R11\n         L     R10,=A(GDEDSECT)\n         USING GDEDSECT,R10\n         GDEGOSUB PROC1000\n         GDEGOSUB PROC2000\n         BNZ   MAIN9010\n         GDEGOSUB PROC3000\nMAIN9000 XR    R15,R15\n         B     MAIN9020\nMAIN9010 LA    R15,4\n         B     MAIN9020\nMAIN9020 GDEEXIT\n         LTORG\nGDEDSECT DS   0D\nIN1REC   DS    CL80\nGDEBWOA DCB    DDNAME=GDEBWOA,MACRF=(GM),DSORG=PS,                     X\n               RECFM=FB,LRECL=80,EODAD=PROC4910\nCONTROL_SW       DC     C'Y'   Y=PROCESS COMMAND   N=SKIP COMMAND\nCURRENT_CMND     DC     CL4' '\nCURRENT_DSN      DC     CL44' '\nCURRENT_DSNLEN   DC     AL4(0)\nCURRENT_BWO      DC     CL3' '\nRESULT_BWO       DC     CL3' '\nRESULT_DATE      DC     CL10' '\nRESULT_TIME      DC     CL10' '\nREPORT01_SW      DC     C'?'\nREPORT02_SW      DC     C'?'\nGDEBWOA_ERR      DC     C'N'\n***********************************************************************\n* PARMLIST FOR IGWABWO CALL\n***********************************************************************\nIGWABWO_PARMLIST DS   10A\nIGWABWO_RETCODE  DS     F    0  RETURN CODE\nIGWABWO_RSNCODE  DS     F    4  IGWABWO_RSNCODE\nIGWABWO_PROBDET  DS     D    8  PROBLEM DETERMINATION CODE\nIGWABWO_FUNCTON  DS     F    12 FUNCTION\nIGWABWO_DSNLEN   DS     F    16 DATA SET NAME LENGTH\nIGWABWO_DSN      DS     CL44 20 DATA SET NAME\nIGWABWO_SELECT   DC     F'3' 24 INTERESTED IN BWO FLAGS & RECOV POINT\nIGWABWO_BWOFLAGS DS    3F    28 BWO INDICATOR FLAGS\n                 ORG            IGWABWO_BWOFLAGS\nIGWABWO_BWOFLAG1 DS     F       BWO INDICATOR 1\nIGWABWO_BWOFLAG2 DS     F       BWO INDICATOR 2\nIGWABWO_BWOFLAG3 DS     F       BWO INDICATOR 3\n                 ORG\nIGWABWO_BWOTIME  DS     D    32 BWO RECOVERY POINT TIME\nIGWABWO_RESERVED DS    2D    36 RESERVED\n***********************************************************************\n* IGWABWO_FUNCTION NOTEST\n*             F'1'        READ THE VALUES\n*             F'2'        SET THE VALUSE\n***********************************************************************\nIGWABWO_READ     EQU    0       READ\nIGWABWO_SET      EQU    1       SET\n***********************************************************************\n* IGWABWO_SELECT  NOTES\n*             F'1'        INTERESTED IN BWO FLAGS\n*             F'2'        INTERESTED IN BWO RECOVERY POINT\n*             F'3'        INTERESTED IN BWO FLAGS & RECOV POINT\n***********************************************************************\nIGWABWO_WORKAREA DS CL9\nIGWABWO_HEXTABLE DC C'0123456789ABCDEF'\nIGWABWO_DATEANDTIME  DC   2F'0'\n*  1F    0CYYDDDF\n*        C = 00 FOR 1900\n*        C = 01 FOR 2000\n*        F IS SIGN\n*  1F    HHMMSSTF\n*        F IS SIGN\n***********************************************************************\nTIME_STORAGE   DC   4F'0'\n*  2F    HHMMSSTHMIJU0000  FOR TIME\n*  1F    0YYYYDDD\n*  1F    RESERVED\n***********************************************************************\n         GDEPRINT TYPE=PARMLIST,NAME=STATUS,                           X\n               REPORTID=01\n         GDEPRINT TYPE=PARMLIST,NAME=PARMDP,                           X\n               REPORTID=02\n         GDEPRINT TYPE=PARMLIST,NAME=BWOPRT,                           X\n               REPORTID=03\n         GDEPRINT TYPE=PARMLIST,NAME=RETRSN,                           X\n               REPORTID=04\n***********************************************************************\n*                                                                     *\n* INITIAL SETUP LOGIC                                                 *\n*                                                                     *\n***********************************************************************\nPROC1000 GDESUBST\n         OPEN  (GDEBWOA,INPUT)\n         MVI   REPORT01_SW,C'N'\n         GDEDDN GDEBWO01,FOUND=PROC1010,NOTFOUND=PROC1020\nPROC1010 MVI   REPORT01_SW,C'Y'\n         GDEPRINT TYPE=OPEN,NAME=STATUS,                               X\n               TITLE='CONTROL STATEMENT PROCESSING FOR GDEBWOBT',      X\n               HEADINGS=(PROC1HL1)\nPROC1020 MVI   REPORT02_SW,C'N'\n         GDEDDN GDEBWO02,FOUND=PROC1030,NOTFOUND=PROC1900\nPROC1030 MVI   REPORT02_SW,C'Y'\n         GDEPRINT TYPE=OPEN,NAME=PARMDP,                               X\n               TITLE='BWO CALLING TRACING REPORT',                     X\n               HEADINGS=(PROC1HL2,PROC1HL3)\nPROC1900 GDESUBEN\n*                   ----+----1----+----2----+----3----+----4----+----5\nPROC1HL1 DC    CL15'0'\n         DC    CL52'/----------------- CONTROL CARD -----------------/'\n         DC    CL42'/--------------- STATUS ---------------/'\n         DC    CL24' '\nPROC1HL2 DC    CL133'0DATE  TIME ADDRESS         HEX DATA              X\n                                                                  DISPLX\n               AY DATA                    '\nPROC1HL3 DC    CL133' ---------- -------         ----------------------X\n               -------------------------------------------------- -----X\n               ---------------------------'\n***********************************************************************\n*                                                                     *\n* CALL READ FILE, CALL WRITE MESSAGES, TRACE IF WE NEED TO            *\n*                                                                     *\n***********************************************************************\nPROC2000 GDESUBST\nPROC2010 GDEGOSUB PROC4000\n         BNZ   PROC2900\n         GDEGOSUB PROC5000\n         B     PROC2010\nPROC2900 LA    R15,0\n         B     PROC2920\nPROC2910 LA    R15,4\n         B     PROC2920\nPROC2920 GDESUBEN\n***********************************************************************\n*                                                                     *\n* TERMINATION LOGIC                                                   *\n*                                                                     *\n***********************************************************************\nPROC3000 GDESUBST\n         CLOSE (GDEBWOA,)\n         CLI   REPORT01_SW,C'N'\n         BE    PROC3010\n         MVC   PROC4_PRINT,=CL133' END OF PROCESSING '\n         GDEGOSUB SERV2000,PROC3_PRINT\n         GDEGOSUB SERV4000\n         GDEGOSUB SERV6000\n         GDEPRINT ,NAME=STATUS,TYPE=CLOSE\nPROC3010 CLI   REPORT02_SW,C'N'\n         BE    PROC3900\n         GDEPRINT ,NAME=PARMDP,TYPE=CLOSE\nPROC3900 GDESUBEN\nPROC3_PRINT    DC  CL133' '\n***********************************************************************\n*                                                                     *\n* READ INPUT CARDS AND PARSE                                          *\n*                                                                     *\n***********************************************************************\nPROC4000 GDESUBST\n         CLI   PROC4_FIRSTTIME,C'Y'\n         BE    PROC4002\nPROC4001 MVC   PROC4_PRINT,=CL133'0'\n         GDEGOSUB SERV2000,PROC4_PRINT\nPROC4002 MVI   PROC4_FIRSTTIME,C'N'\n         GET   GDEBWOA,IN1REC\n         MVC   PROC4_PRINT,=CL133' CONTROL CARD=>'\n         MVC   PROC4_PRINT+15(50),IN1REC\n         CLC   =C'SHOW=',IN1REC\n         BE    PROC4010\n         CLC   =C'TEST=',IN1REC\n         BE    PROC4020\n         CLC   =C'SET=',IN1REC\n         BE    PROC4030\n         CLC   =C'BWO=',IN1REC\n         BE    PROC4040\n         CLC   =C'DSN=',IN1REC\n         BE    PROC4050\n         CLC   =C'RESET ',IN1REC\n         BE    PROC4060\nPROC4005 MVC   PROC4_PRINT+110(23),=CL23'<===== ERROR '\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVI   CONTROL_SW,C'N'\n         MVI   GDEBWOA_ERR,C'Y'\n         B     PROC4001\n***********************************************************************\n* SHOW= SYNTAX, STATUS CHECKING                                       *\n***********************************************************************\nPROC4010 MVC   CURRENT_CMND,=CL4'SHOW'\n         CLC   IN1REC+5(44),=CL133' '\n         BNE   PROC4015\n         CLC   CURRENT_DSN,=CL133' '\n         BE    PROC4011\n         MVC   PROC4_PRINT+67(40),=CL40'SHOW WITH CURRENT DSNAME  '\n         MVC   PROC4_PRINT+120(13),=CL13'ACCEPTED'\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVC   PROC4_PRINT,=CL133' CURRENT DSN==>'\n         MVC   PROC4_PRINT+15(50),=CL133' '\n         MVC   PROC4_PRINT+15(44),CURRENT_DSN\n         GDEGOSUB SERV2000,PROC4_PRINT\n         B     PROC4900\nPROC4011 MVC   PROC4_PRINT+67(40),=CL40'SHOW WITH CURRENT DSNAME  '\n         MVC   PROC4_PRINT+110(23),=CL23'REJECTED-NO CURRENT DSN'\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVC   PROC4_PRINT,=CL133' '\n         MVC   PROC4_PRINT+110(23),=CL23'SKIP PROCESSING ACTIVE '\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVI   CONTROL_SW,C'N'\n         B     PROC4001\nPROC4015 MVC   CURRENT_DSN,IN1REC+5\n         MVC   PROC4_PRINT+67(40),=CL40'SHOW WITH COMMAND DSNAME  '\n         MVC   PROC4_PRINT+110(23),=CL23'ACCEPTED     '\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVC   PROC4_PRINT,=CL133' CURRENT DSN==>'\n         MVC   PROC4_PRINT+15(50),=CL133' '\n         MVC   PROC4_PRINT+15(44),CURRENT_DSN\n         GDEGOSUB SERV2000,PROC4_PRINT\n         B     PROC4900\n***********************************************************************\n* TEST= SYNTAX, STATUS CHECKING                                       *\n***********************************************************************\nPROC4020 MVC   CURRENT_CMND,=CL4'TEST'\n         CLC   CURRENT_DSN,=CL133' '\n         BE    PROC4028\n         CLC   IN1REC+5(3),=CL133' '\n         BNE   PROC4025\n         CLC   CURRENT_BWO,=CL133' '\n         BE    PROC4021\n         MVC   PROC4_PRINT+67(40),=CL40'TEST WITH CURRENT DSNAME,BWO'\n         MVC   PROC4_PRINT+110(23),=CL23'ACCEPTED     '\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVC   PROC4_PRINT,=CL133' CURRENT DSN==>'\n         MVC   PROC4_PRINT+15(50),=CL133' '\n         MVC   PROC4_PRINT+15(44),CURRENT_DSN\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVC   PROC4_PRINT,=CL133' CURRENT BWO==>'\n         MVC   PROC4_PRINT+15(50),=CL133' '\n         MVC   PROC4_PRINT+15(44),CURRENT_BWO\n         GDEGOSUB SERV2000,PROC4_PRINT\n         B     PROC4900\nPROC4021 MVC   PROC4_PRINT+67(40),=CL40'TEST WITH CURRENT DSNAME,BWO'\n         MVC   PROC4_PRINT+110(23),=CL23'REJECTED-NO DSN,BWO'\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVC   PROC4_PRINT,=CL133' '\n         MVC   PROC4_PRINT+110(23),=CL23'SKIP PROCESSING ACTIVE '\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVI   CONTROL_SW,C'N'\n         B     PROC4001\nPROC4025 MVC   CURRENT_BWO,IN1REC+5\n         OC    CURRENT_BWO,=XL3'F0F0F0'\n         MVC   PROC4_PRINT+67(40),=CL40'TEST WITH COMMAND BWO  '\n         MVC   PROC4_PRINT+110(23),=CL23'ACCEPTED     '\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVC   PROC4_PRINT,=CL133' CURRENT DSN==>'\n         MVC   PROC4_PRINT+15(50),=CL133' '\n         MVC   PROC4_PRINT+15(44),CURRENT_DSN\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVC   PROC4_PRINT,=CL133' COMMAND BWO==>'\n         MVC   PROC4_PRINT+15(50),=CL133' '\n         MVC   PROC4_PRINT+15(3),CURRENT_BWO\n         GDEGOSUB SERV2000,PROC4_PRINT\n         B     PROC4900\nPROC4028 MVC   PROC4_PRINT+67(40),=CL40'TEST WITH CURRENT DSNAME,BWO'\n         MVC   PROC4_PRINT+110(23),=CL23'REJECTED-NO CURRENT DSN'\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVC   PROC4_PRINT,=CL133' '\n         MVC   PROC4_PRINT+110(23),=CL23'SKIP PROCESSING ACTIVE '\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVI   CONTROL_SW,C'N'\n         B     PROC4001\n***********************************************************************\n* SET= SYNTAX, STATUS CHECKING                                        *\n***********************************************************************\nPROC4030 MVC   CURRENT_CMND,=CL4'SET '\n         CLC   CURRENT_DSN,=CL133' '\n         BE    PROC4038\n         CLC   IN1REC+4(3),=CL133' '\n         BNE   PROC4035\n         CLC   CURRENT_BWO,=CL133' '\n         BE    PROC4031\n         MVC   PROC4_PRINT+67(40),=CL40'SET WITH CURRENT DSNAME,BWO'\n         MVC   PROC4_PRINT+110(23),=CL23'ACCEPTED     '\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVC   PROC4_PRINT,=CL133' CURRENT DSN==>'\n         MVC   PROC4_PRINT+15(50),=CL133' '\n         MVC   PROC4_PRINT+15(44),CURRENT_DSN\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVC   PROC4_PRINT,=CL133' CURRENT BWO==>'\n         MVC   PROC4_PRINT+15(50),=CL133' '\n         MVC   PROC4_PRINT+15(44),CURRENT_BWO\n         GDEGOSUB SERV2000,PROC4_PRINT\n         B     PROC4900\nPROC4031 MVC   PROC4_PRINT+67(40),=CL40'SET WITH CURRENT DSNAME,BWO'\n         MVC   PROC4_PRINT+110(23),=CL23'REJECTED-NO DSN,BWO'\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVC   PROC4_PRINT,=CL133' '\n         MVC   PROC4_PRINT+110(23),=CL23'SKIP PROCESSING ACTIVE '\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVI   CONTROL_SW,C'N'\n         B     PROC4001\nPROC4035 MVC   CURRENT_BWO,IN1REC+4\n         OC    CURRENT_BWO,=XL3'F0F0F0'\n         MVC   PROC4_PRINT+67(40),=CL40'SET WITH COMMAND BWO  '\n         MVC   PROC4_PRINT+110(23),=CL23'ACCEPTED     '\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVC   PROC4_PRINT,=CL133' CURRENT DSN==>'\n         MVC   PROC4_PRINT+15(50),=CL133' '\n         MVC   PROC4_PRINT+15(44),CURRENT_DSN\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVC   PROC4_PRINT,=CL133' COMMAND BWO==>'\n         MVC   PROC4_PRINT+15(50),=CL133' '\n         MVC   PROC4_PRINT+15(3),CURRENT_BWO\n         GDEGOSUB SERV2000,PROC4_PRINT\n         B     PROC4900\nPROC4038 MVC   PROC4_PRINT+67(40),=CL40'SET WITH CURRENT DSNAME'\n         MVC   PROC4_PRINT+110(23),=CL23'REJECTED-NO CURRENT DSN'\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVC   PROC4_PRINT,=CL133' '\n         MVC   PROC4_PRINT+110(23),=CL23'SKIP PROCESSING ACTIVE '\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVI   CONTROL_SW,C'N'\n         B     PROC4001\n***********************************************************************\n* BWO= SYNTAX, STATUS CHECKING                                        *\n***********************************************************************\nPROC4040 MVC   CURRENT_CMND,=CL4'BWO '\n         CLC   IN1REC+4(3),=CL133' '\n         BE    PROC4045\n         MVC   CURRENT_BWO,IN1REC+4\n         OC    CURRENT_BWO,=XL3'F0F0F0'\n         MVC   PROC4_PRINT+67(40),=CL40'CHANGE CURRENT BWO VALUE'\n         MVC   PROC4_PRINT+110(23),=CL23'ACCEPTED     '\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVC   PROC4_PRINT,=CL133' CURRENT DSN==>'\n         MVC   PROC4_PRINT+15(50),=CL133' '\n         MVC   PROC4_PRINT+15(44),CURRENT_DSN\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVC   PROC4_PRINT,=CL133' COMMAND BWO==>'\n         MVC   PROC4_PRINT+15(50),=CL133' '\n         MVC   PROC4_PRINT+15(44),CURRENT_BWO\n         GDEGOSUB SERV2000,PROC4_PRINT\n         B     PROC4001\nPROC4045 MVC   PROC4_PRINT+67(40),=CL40'CHANGE CURRENT BWO VALUE'\n         MVC   PROC4_PRINT+110(23),=CL23'REJECTED-BWO NOT FOUND '\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVC   PROC4_PRINT,=CL133' '\n         MVC   PROC4_PRINT+110(23),=CL23'SKIP PROCESSING ACTIVE '\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVI   CONTROL_SW,C'N'\n         B     PROC4001\n***********************************************************************\n* DSN= SYNTAX, STATUS CHECKING                                        *\n***********************************************************************\nPROC4050 MVC   CURRENT_CMND,=CL4'DSN '\n         CLC   IN1REC+4(44),=CL133' '\n         BE    PROC4055\n         MVC   CURRENT_DSN,IN1REC+4\n         MVC   PROC4_PRINT+67(40),=CL40'CHANGE CURRENT DSN VALUE'\n         MVC   PROC4_PRINT+110(23),=CL23'ACCEPTED     '\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVC   PROC4_PRINT,=CL133' COMMAND DSN==>'\n         MVC   PROC4_PRINT+15(50),=CL133' '\n         MVC   PROC4_PRINT+15(44),CURRENT_DSN\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVC   PROC4_PRINT,=CL133' CURRENT BWO==>'\n         MVC   PROC4_PRINT+15(50),=CL133' '\n         MVC   PROC4_PRINT+15(44),CURRENT_BWO\n         GDEGOSUB SERV2000,PROC4_PRINT\n         B     PROC4001\nPROC4055 MVC   PROC4_PRINT+67(40),=CL40'CHANGE CURRENT DSN VALUE'\n         MVC   PROC4_PRINT+110(23),=CL23'REJECTED-DSN NOT FOUND '\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVC   PROC4_PRINT,=CL133' '\n         MVC   PROC4_PRINT+110(23),=CL23'SKIP PROCESSING ACTIVE '\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVI   CONTROL_SW,C'N'\n         B     PROC4001\n***********************************************************************\n* RESET SYNTAX, STATUS CHECKING                                       *\n***********************************************************************\nPROC4060 MVC   CURRENT_CMND,=CL4'RSET'\n         MVI   CONTROL_SW,C'Y'\n         MVC   CURRENT_DSN,=CL133' '\n         MVC   CURRENT_BWO,=CL133' '\n         OC    CURRENT_BWO,=XL3'F0F0F0'\n         MVC   PROC4_PRINT+67(40),=CL40'RESET SKIP PROCESSING   '\n         MVC   PROC4_PRINT+110(23),=CL23'ACCEPTED     '\n         GDEGOSUB SERV2000,PROC4_PRINT\n         B     PROC4001\nPROC4900 LA    R15,0\n         B     PROC4920\nPROC4910 LA    R15,4\n         B     PROC4920\nPROC4920 GDESUBEN\nPROC4_PRINT    DC  CL133' '\nPROC4_FIRSTTIME    DC   C'Y'\n***********************************************************************\n*                                                                     *\n* PROCESS COMMANDS                                                    *\n*                                                                     *\n***********************************************************************\nPROC5000 GDESUBST\n         CLI   CONTROL_SW,C'Y'\n         BNE   PROC5800\n         CLI   GDEBWOA_ERR,C'N'\n         BNE   PROC5810\n         CLC   CURRENT_CMND,=CL4'SET '\n         BE    PROC5100\n         CLC   CURRENT_CMND,=CL4'TEST'\n         BE    PROC5200\n         CLC   CURRENT_CMND,=CL4'SHOW'\n         BE    PROC5300\n         B     PROC5820\n***********************************************************************\n*\n* PROCESS SET COMMAND\n*\n***********************************************************************\nPROC5100 LA   R4,IGWABWO_SET\n         ST   R4,IGWABWO_FUNCTON  SET FUNCTION\n         GDEGOSUB SERV3000        GO PROCESS COMMAND\n         BZ    PROC5700           SUCCESSFUL\n         B     PROC5710           ERRORS FOUND\n***********************************************************************\n*\n* PROCESS TEST COMMAND\n*\n***********************************************************************\nPROC5200 LA   R4,IGWABWO_READ\n         ST   R4,IGWABWO_FUNCTON  SET FUNCTION\n         GDEGOSUB SERV3000        GO PROCESS COMMAND\n         BNZ   PROC5710           ERRORS FOUND\n         CLC   CURRENT_BWO,RESULT_BWO\n         BE    PROC5210\n         MVC   PROC5_PRINT,=CL133' RESULT ======>'\n         MVC   PROC5_PRINT+15(50),=CL50'COMMAND PROCESSED'\n         MVC   PROC5_PRINT+67(40),=CL50'RETURN CODE = 0      '\n         GDEGOSUB SERV2000,PROC5_PRINT\n         MVC   PROC5_PRINT,=CL133' RESULT ======>'\n         MVC   PROC5_PRINT+15(50),=CL50'TEST COMMAND PROCESSED'\n         MVC   PROC5_PRINT+67(40),=CL40'TEST FAILED '\n         MVC   PROC5_PRINT+110(23),=CL23'SKIP PROCESSING ACTIVE'\n         GDEGOSUB SERV2000,PROC5_PRINT\n         MVI   CONTROL_SW,C'N'\n         B     PROC5900\nPROC5210 MVC   PROC5_PRINT,=CL133' RESULT ======>'\n         MVC   PROC5_PRINT+15(50),=CL50'TEST COMMAND PROCESSED'\n         MVC   PROC5_PRINT+67(40),=CL40'TEST SUCCESSFUL'\n         GDEGOSUB SERV2000,PROC5_PRINT\n         B     PROC5900\n***********************************************************************\n*\n* PROCESS SHOW COMMAND\n*\n***********************************************************************\nPROC5300 LA   R4,IGWABWO_READ\n         ST   R4,IGWABWO_FUNCTON  SET FUNCTION\n         GDEGOSUB SERV3000        GO PROCESS COMMAND\n         BZ    PROC5700           SUCCESSFUL\n         B     PROC5710           ERRORS FOUND\n***********************************************************************\n* PRINT SUCCESS / UNSUCCESSFUL MESSAGE                                *\n***********************************************************************\nPROC5700 MVC   PROC5_PRINT,=CL133' RESULT ======>'\n         MVC   PROC5_PRINT+15(50),=CL50'COMMAND PROCESSED'\n         MVC   PROC5_PRINT+67(40),=CL50'RETURN CODE = 0      '\n         GDEGOSUB SERV2000,PROC5_PRINT\n         MVC   PROC4_PRINT,=CL133' RESULT BWO ==>'\n         MVC   PROC4_PRINT+15(50),=CL133' '\n         MVC   PROC4_PRINT+15(03),RESULT_BWO\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVC   PROC4_PRINT,=CL133' RESULT DATE =>'\n         MVC   PROC4_PRINT+15(50),=CL133' '\n         MVC   PROC4_PRINT+16(10),RESULT_DATE\n         GDEGOSUB SERV2000,PROC4_PRINT\n         MVC   PROC4_PRINT,=CL133' RESULT TIME =>'\n         MVC   PROC4_PRINT+15(50),=CL133' '\n         MVC   PROC4_PRINT+16(10),RESULT_TIME\n         GDEGOSUB SERV2000,PROC4_PRINT\n         B     PROC5900\nPROC5710 GDEGOSUB SERV5000\n         MVC   PROC5_PRINT,=CL133' RESULT (CONT)>'\n         MVC   PROC5_PRINT+15(50),=CL133' '\n         MVC   PROC5_PRINT+67(40),=CL50'PROBLEM DETERMINATION CODE = XXX\n               XXX'\n         GDEH2E IGWABWO_PROBDET,PROC5_PRINT+67+29,8\n         GDEGOSUB SERV2000,PROC5_PRINT\n         MVI   GDEBWOA_ERR,C'N'\n         B     PROC5900\n***********************************************************************\n* PRINT SKIPPED / ERROR MESSAGE                                       *\n***********************************************************************\nPROC5800 MVC   PROC5_PRINT,=CL133' RESULT ======>'\n         MVC   PROC5_PRINT+15(50),=CL50'COMMAND NOT PROCESSED'\n         MVC   PROC5_PRINT+67(40),=CL50'COMMAND NOT PROCESSED'\n         MVC   PROC5_PRINT+110(23),=CL23'SKIP PROCESSING ACTIVE'\n         GDEGOSUB SERV2000,PROC5_PRINT\n         B     PROC5900\nPROC5810 MVC   PROC5_PRINT,=CL133' RESULT ======>'\n         MVC   PROC5_PRINT+15(50),=CL50'COMMAND NOT PROCESSED'\n         MVC   PROC5_PRINT+67(40),=CL50'COMMAND NOT PROCESSED'\n         MVC   PROC5_PRINT+110(23),=CL23'ERROR IN PREVIOUS CARD'\n         GDEGOSUB SERV2000,PROC5_PRINT\n         B     PROC5900\nPROC5820 MVC   PROC5_PRINT,=CL133' RESULT ======>'\n         MVC   PROC5_PRINT+15(50),=CL50'COMMAND NOT PROCESSED'\n         MVC   PROC5_PRINT+67(40),=CL50'COMMAND NOT PROCESSED'\n         MVC   PROC5_PRINT+110(23),=CL23'ERROR IN PROGRAM LOGIC'\n         GDEGOSUB SERV2000,PROC5_PRINT\n         B     PROC5900\nPROC5900 LA    R15,0\n         B     PROC5920\nPROC5910 LA    R15,4\n         B     PROC5920\nPROC5920 GDESUBEN\nPROC5_PRINT    DC  CL133' '\n***********************************************************************\n*                                                                     *\n* DO THE TRACE                                                        *\n*                                                                     *\n***********************************************************************\nSERV1000 GDESUBST\n         CLI   REPORT02_SW,C'Y'\n         BNE   SERV1900\n         L     R7,0(R1)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,=A(SERV1PL1)\n         GDEPRINT 0(R7),NAME=PARMDP\n         LA    R8,IGWABWO_PARMLIST\n         GDEPRINT 0(R8),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=40,                                            X\n               TABLEENTRYLEN=4\n         L     R7,=A(SERV1PL2)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,0(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=4,                                             X\n               TABLEENTRYLEN=4\n         L     R7,=A(SERV1PL3)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,4(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=4,                                             X\n               TABLEENTRYLEN=4\n         L     R7,=A(SERV1PL4)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,8(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=8,                                             X\n               TABLEENTRYLEN=8\n         L     R7,=A(SERV1PL5)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,12(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=4,                                             X\n               TABLEENTRYLEN=4\n         L     R7,=A(SERV1PL6)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,16(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=4,                                             X\n               TABLEENTRYLEN=4\n         L     R7,=A(SERV1PL7)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,20(R8)\n         L     R6,16(R8)\n         L     R6,0(R6)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=(R6),                                          X\n               TABLEENTRYLEN=(R6)\n         L     R7,=A(SERV1PL8)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,24(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=4,                                             X\n               TABLEENTRYLEN=4\n         L     R7,=A(SERV1PL9)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,28(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=12,                                            X\n               TABLEENTRYLEN=4\n         L     R7,=A(SERV1PL10)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,32(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=8,                                             X\n               TABLEENTRYLEN=8\n         L     R7,=A(SERV1PL11)\n         GDEPRINT 0(R7),NAME=PARMDP\n         L     R7,36(R8)\n         GDEPRINT 0(R7),TYPE=DUMPSTORAGEANDTIME,                       X\n               NAME=PARMDP,                                            X\n               TABLELEN=16,                                            X\n               TABLEENTRYLEN=16\nSERV1900 LA    R15,0\n         B     SERV1920\nSERV1910 LA    R15,4\n         B     SERV1920\nSERV1920 GDESUBEN\nSERV1PL1 DC    CL133' PASSED PARM AREA'\nSERV1PL2 DC    CL133' RETURN CODE'\nSERV1PL3 DC    CL133' IGWABWO_RSNCODE CODE'\nSERV1PL4 DC    CL133' PROBLEM DETERMINATION'\nSERV1PL5 DC    CL133' FUNCTION REQUIRED'\nSERV1PL6 DC    CL133' DATASET NAME LENGTH'\nSERV1PL7 DC    CL133' DATASET NAME'\nSERV1PL8 DC    CL133' SELECTION MASK'\nSERV1PL9 DC    CL133' BWO FLAGS'\nSERV1PL10 DC   CL133' BWO TIME'\nSERV1PL11 DC   CL133' RESERVED FIELD'\n***********************************************************************\n*                                                                     *\n* OUTPUT CONTROL STATUS IF DDNAME AVAILABLE                           *\n*                                                                     *\n***********************************************************************\nSERV2000 GDESUBST\n         CLI   REPORT01_SW,C'N'\n         BE    SERV2900\n         L     R2,0(R1)\n         GDEPRINT 0(R2),NAME=STATUS\nSERV2900 LA    R15,0\n         B     SERV2920\nSERV2910 LA    R15,4\n         B     SERV2920\nSERV2920 GDESUBEN\n***********************************************************************\n*                                                                     *\n* PROCESS COMMAND                                                     *\n*                                                                     *\n***********************************************************************\nSERV3000 GDESUBST\n***********************************************************************\n         SR    R4,R4\n         LA    R5,44\n         LA    R6,CURRENT_DSN\nSERV3010 CLI   0(R6),C' '\n         BE    SERV3020\n         LA    R4,1(R4)\n         LA    R6,1(R6)\n         BCT   R5,SERV3010\nSERV3020 STCM  R4,B'1111',CURRENT_DSNLEN\n***********************************************************************\n         MVC   IGWABWO_DSN,CURRENT_DSN\n         MVC   IGWABWO_DSNLEN,CURRENT_DSNLEN\n         MVC   IGWABWO_BWOFLAGS,=3F'0'\n         CLI   CURRENT_BWO+0,C'1'\n         BNE   *+10\n         MVC   IGWABWO_BWOFLAG1,=F'1'\n         CLI   CURRENT_BWO+1,C'1'\n         BNE   *+10\n         MVC   IGWABWO_BWOFLAG2,=F'1'\n         CLI   CURRENT_BWO+2,C'1'\n         BNE   *+10\n         MVC   IGWABWO_BWOFLAG3,=F'1'\n***********************************************************************\n         XC    TIME_STORAGE,TIME_STORAGE\n         TIME  DEC,TIME_STORAGE,DATETYPE=YYYYDDD,LINKAGE=SYSTEM\n         MVC   IGWABWO_BWOTIME+4,TIME_STORAGE\n         OI    IGWABWO_BWOTIME+4+3,X'0F'\n         MVI   TIME_STORAGE+12,X'0F'\n         SRP   TIME_STORAGE+8(5),1,0\n         OI    TIME_STORAGE+8+3,X'0F'\n         MVI   IGWABWO_BWOTIME+0,X'01'\n         MVC   IGWABWO_BWOTIME+1(3),TIME_STORAGE+8+1\n***********************************************************************\n*        LOAD  EP=IGWABWO,ERRET=PROC9910\n         LA    R1,IGWABWO_PARMLIST R1 -> PARMLIST\n         LA    R4,IGWABWO_RETCODE\n         ST    R4,0(R1)            PASS ADDR OF RETURN CODE\n         LA    R4,IGWABWO_RSNCODE\n         ST    R4,4(R1)            PASS ADDR OF IGWABWO_RSNCODE CODE\n         LA    R4,IGWABWO_PROBDET\n         ST    R4,8(R1)            PASS ADDR OF PROBLEM DETERMINATION\n         LA    R4,IGWABWO_FUNCTON\n         ST    R4,12(R1)           PASS ADDR OF FUNCTION REQUIRED\n         LA    R4,IGWABWO_DSNLEN\n         ST    R4,16(R1)           PASS ADDR OF DATA SET NAME LENGTH\n         LA    R4,IGWABWO_DSN\n         ST    R4,20(R1)           PASS ADDR OF DATA SET NAME\n         LA    R4,IGWABWO_SELECT\n         ST    R4,24(R1)           PASS ADDR OF SELECTION MASK\n         LA    R4,IGWABWO_BWOFLAGS\n         ST    R4,28(R1)           PASS ADDR OF BWO FLAGS\n         LA    R4,IGWABWO_BWOTIME\n         ST    R4,32(R1)           PASS ADDR OF BWO RECOVERY POINT\n         LA    R4,IGWABWO_RESERVED\n         ST    R4,36(R1)           PASS ADDR OF RESERVED FIELD\n***********************************************************************\n         GDEGOSUB SERV1000,SERV3_BEFORE_MESSAGE\n***********************************************************************\n         LA    R1,IGWABWO_PARMLIST R1 -> PARMLIST\n         L     R15,=V(IGWABWO)\n         BALR  14,15               CALL IGWABWO\n***********************************************************************\n         GDEGOSUB SERV1000,SERV3_AFTER_MESSAGE\n***********************************************************************\n         MVC   RESULT_BWO,=CL3'000'\n         CLC   IGWABWO_BWOFLAG1,=F'0'\n         BE    *+8\n         MVI   RESULT_BWO+0,C'1'\n         CLC   IGWABWO_BWOFLAG2,=F'0'\n         BE    *+8\n         MVI   RESULT_BWO+1,C'1'\n         CLC   IGWABWO_BWOFLAG3,=F'0'\n         BE    *+8\n         MVI   RESULT_BWO+2,C'1'\n***********************************************************************\n         UNPK IGWABWO_WORKAREA(9),IGWABWO_BWOTIME(5)\n         TR   IGWABWO_WORKAREA(8),IGWABWO_HEXTABLE-C'0'\n         MVC  RESULT_TIME+0(2),IGWABWO_WORKAREA\n         MVI  RESULT_TIME+2,C':'\n         MVC  RESULT_TIME+3(2),IGWABWO_WORKAREA+2\n         MVI  RESULT_TIME+5,C':'\n         MVC  RESULT_TIME+6(2),IGWABWO_WORKAREA+4\n         MVI  RESULT_TIME+8,C'.'\n         MVC  RESULT_TIME+9(1),IGWABWO_WORKAREA+6\n         UNPK IGWABWO_WORKAREA(9),IGWABWO_BWOTIME+4(5)\n         TR   IGWABWO_WORKAREA(8),IGWABWO_HEXTABLE-C'0'\n         MVC  RESULT_DATE+0(2),=CL2'20'\n         MVC  RESULT_DATE+2(2),IGWABWO_WORKAREA\n         MVI  RESULT_DATE+4,C'/'\n         MVC  RESULT_DATE+5(2),IGWABWO_WORKAREA+2\n         MVI  RESULT_DATE+7,C'/'\n         MVC  RESULT_DATE+8(2),IGWABWO_WORKAREA+4\n***********************************************************************\n*\n* BACK FROM THE CALL, CHECK RETURN CODE\n*\n***********************************************************************\n         CLC   IGWABWO_RETCODE,=F'0'\n         BNE   SERV3910\nSERV3900 LA    R15,0\n         B     SERV3920\nSERV3910 LA    R15,4\n         B     SERV3920\nSERV3920 GDESUBEN\nSERV3_BEFORE_MESSAGE DC CL53' ',CL80'PARAMETERS BEFORE THE CALL'\nSERV3_AFTER_MESSAGE  DC CL53' ',CL80'PARAMETERS AFTER THE CALL'\n***********************************************************************\n*                                                                     *\n* OUTPUT CONTROL STATUS IF DDNAME AVAILABLE                           *\n*                                                                     *\n***********************************************************************\nSERV4000 GDESUBST\n         GDEDDN GDEBWO03,FOUND=SERV4001,NOTFOUND=SERV4900\nSERV4001 GDEPRINT TYPE=OPEN,NAME=BWOPRT,                               X\n               TITLE='BWO FLAG EXPLAINATION',                          X\n               HEADINGS=(SERV4HL1)\n         LA    R4,SERV4_TABLE\n         L     R5,=A(SERV4_TABLE_END)\n         MVC   SERV4_MESSAGE,=CL133' '\nSERV4010 MVC   SERV4_MESSAGE+30(50),0(R4)\n         GDEPRINT SERV4_MESSAGE,NAME=BWOPRT\n         LA    R4,50(R4)\n         CR    R4,R5\n         BL    SERV4010\n         GDEPRINT ,TYPE=CLOSE,NAME=BWOPRT\nSERV4900 LA    R15,0\n         B     SERV4920\nSERV4910 LA    R15,4\n         B     SERV4920\nSERV4920 GDESUBEN\nSERV4HL1       DC   CL133' '\nSERV4_MESSAGE  DC   CL133' '\nSERV4_TABLE    DS  0CL50\n DC CL50'                                                  '\n DC CL50' BWO FLAGS AND THEIR MEANING                      '\n DC CL50'                                                  '\n DC CL50' 000 - DATA SET DOES NOT SUPPORT BACKUP WITHOUT   '\n DC CL50'       SERIALIZATION.                             '\n DC CL50'                                                  '\n DC CL50' 001 - FORCES RECOVERY IN PROGRESS, RESET TO 000  '\n DC CL50'       AFTER RECOVERY                             '\n DC CL50'                                                  '\n DC CL50' 010 - A CA/CI SPLIT FOR THE BWO DATA SET IS IN   '\n DC CL50'       PROGRESS. DO NOT START BACKUP.  IF BACKUP  '\n DC CL50'       IN PROGRESS, DISCARD AT END.  THIS STATE   '\n DC CL50'       CAN EXIST AT OPEN IF THE DATABASE MANAGER  '\n DC CL50'       ABENDED DURING SPLIT.  DATABASE ACTION     '\n DC CL50'       DEPENDS DATABASE MANAGER.  THE DATA SET    '\n DC CL50'       MIGHT NEED RESTORE AND FORWARD RECOVERY OR '\n DC CL50'       BACK OUT OF CHANGES IF AIXS ARE PRESENT.   '\n DC CL50'                                                  '\n DC CL50' 011 - THE DATABASE MANAGER CLOSED A BWO DATA SET '\n DC CL50'       AND A CI/CA SPLIT HAD OCCURRED WHEN IT WAS '\n DC CL50'       PREVIOUSLY OPEN.  BACKUP MANAGER SHOULD    '\n DC CL50'       RESET IT TO 000 AND SERIALIZE TO BACK UP,  '\n DC CL50'       NOT A BWO CANDIDATE.  THE DATABASE MANAGER '\n DC CL50'       SHOULD CHANGE THIS STATE TO 110 AT OPEN.   '\n DC CL50'                                                  '\n DC CL50' 100 - A BWO DATA SET HAS BEEN OPENED BY THE      '\n DC CL50'       DATABASE MANAGER.  BACK UP WITHOUT         '\n DC CL50'       SERIALIZATION.                             '\n DC CL50'                                                  '\n DC CL50' 101 - DATA SET BAS BEEN RESTORED AND REQUIRES    '\n DC CL50'       FORWARD RECOVERY BEFORE IT CAN BE USED.    '\n DC CL50'       RESET IT TO 001 BEFORE FORWARD RECOVERY.   '\n DC CL50'                                                  '\n DC CL50' 110 - A CI/CA SPLIT HAS OCCURRED AND COMPLETED ON'\n DC CL50'       A BWO DATA SET.  THIS STATE CAN EXIST AT   '\n DC CL50'       OPEN IF THE DATABASE MANAGER ABENDED.  BACK'\n DC CL50'       UP WITHOUT SERIALIZATION.  RESET IT TO 100 '\n DC CL50'       BEFORE BACKUP.                             '\n DC CL50'                                                  '\n DC CL50' 111 - AN INVALID STATE.                          '\n DC CL50'                                                  '\nSERV4_TABLE_END EQU *\n***********************************************************************\n*                                                                     *\n* OUTPUT CONTROL MESSAGE AND MEANING                                  *\n*                                                                     *\n***********************************************************************\nSERV5000 GDESUBST\n         MVC   SERV5_MESSAGE,=CL133' RESULT ======>'\n         MVC SERV5_MESSAGE+15(50),=CL50'COMMAND PROCESSED UNSUCCESSFULLX\n               Y'\n         MVC SERV5_MESSAGE+67(40),=CL50'RETURN CODE = XXXXXXXX, REASON X\n               CODE = XXXXXXXX'\n         GDEH2E IGWABWO_RETCODE,SERV5_MESSAGE+67+14,4\n         GDEH2E IGWABWO_RSNCODE,SERV5_MESSAGE+67+38,4\n         GDEGOSUB SERV2000,SERV5_MESSAGE\n         MVC   SERV5_MESSAGE,=CL133' RESULT (CONT)>'\n         MVC SERV5_MESSAGE+15(50),=CL50'COMMAND PROCESSED UNSUCCESSFULLX\n               Y'\n         LA    R4,SERV5_TABLE\n         L     R5,=A(SERV5_TABLE_END)\nSERV5010 CLC   0(4,R4),IGWABWO_RETCODE\n         BNE   SERV5020\n         CLC   4(4,R4),IGWABWO_RSNCODE\n         BNE   SERV5020\n         MVC   SERV5_MESSAGE+63(60),8(R4)\n         GDEGOSUB SERV2000,SERV5_MESSAGE\nSERV5020 LA    R4,68(R4)\n         CR    R4,R5\n         BL    SERV5010\nSERV5900 LA    R15,0\n         B     SERV5920\nSERV5910 LA    R15,4\n         B     SERV5920\nSERV5920 GDESUBEN\nSERV5_MESSAGE  DC   CL133' '\n         DS   0D\nSERV5_TABLE    DS  0CL68\n DC F'0',F'0',CL60' THE OPERATION WAS SUCCESSFUL.                     '\n DC F'4',F'4',CL60' THE OPERATION WAS SUCCESSFUL, BUT THE             '\n DC F'4',F'4',CL60' BWO_RECOV ARGUMENT HAS NO VALID VALUE FOR THE     '\n DC F'4',F'4',CL60' DATA SET SPECIFIED IN DSNAME. THIS IS BECAUSE     '\n DC F'4',F'4',CL60' IT WAS CREATED UNDER DFP 3.1.0, AND NO            '\n DC F'4',F'4',CL60' BWO_RECOV HAS BEEN ADDED TO THE DATA SET. ADD     '\n DC F'4',F'4',CL60' BWO_RECOV TO THE DATA SET AS APPROPRIATE.         '\n DC F'8',F'4',CL60' AN INVALID DSNAME_LENGTH OR                       '\n DC F'8',F'4',CL60' SHARE_ATTR_SELECTOR WAS SPECIFIED. CORRECT THE    '\n DC F'8',F'4',CL60' ARGUMENT AND RETRY THE REQUEST.                   '\n DC F'8',F'8',CL60' AN INVALID DSNAME OF BLANKS OR INVALID            '\n DC F'8',F'8',CL60' SHARE_ATTR_ARRAY_LENGTH WAS SPECIFIED. CORRECT    '\n DC F'8',F'8',CL60' THE ARGUMENT AND RETRY THE REQUEST.               '\n DC F'8',F'12',CL60' AN INVALID READ_WRITE WAS SPECIFIED. A VALUE     '\n DC F'8',F'12',CL60' OF 0 OR 1 MUST BE SUPPLIED. CORRECT THE          '\n DC F'8',F'12',CL60' READ_WRITE ARGUMENT AND RETRY THE REQUEST.       '\n DC F'8',F'16',CL60' THE VALUES SUPPLIED FOR BWO_FLAGS ARE NOT        '\n DC F'8',F'16',CL60' VALID. BWO1, BWO2, AND BWO3 MUST HAVE A VALUE    '\n DC F'8',F'16',CL60' OF EITHER 0 OR 1. CORRECT THE BWO_FLAGS          '\n DC F'8',F'16',CL60' ARGUMENT AND RETRY THE REQUEST.                  '\n DC F'8',F'20',CL60' BWO IS ONLY SUPPORTED FOR VSAM-TYPE DATA SETS.   '\n DC F'8',F'20',CL60' THE NAME SPECIFIED WAS NOT A VSAM CLUSTER        '\n DC F'8',F'20',CL60' NAME. SPECIFY THE NAME OF A VSAM CLUSTER IN      '\n DC F'8',F'20',CL60' THE DSNAME ARGUMENT AND RETRY THE REQUEST.       '\n DC F'8',F'24',CL60' AN INVALID LEVEL_INDICATOR WAS SPECIFIED.        '\n DC F'8',F'24',CL60' CORRECT THE LEVEL_INDICATOR ARGUMENT AND RETRY   '\n DC F'8',F'24',CL60' THE REQUEST.                                     '\n DC F'8',F'28',CL60' AN INVALID SELECT ARGUMENT WAS SPECIFIED. A      '\n DC F'8',F'28',CL60' VALUE BETWEEN 1 AND 3 MUST BE SPECIFIED.         '\n DC F'8',F'28',CL60' CORRECT THE SELECT ARGUMENT AND RETRY THE        '\n DC F'8',F'28',CL60' REQUEST.                                         '\n DC F'8',F'32',CL60' THE DATA SET SPECIFIED IN DSNAME IS NOT AN       '\n DC F'8',F'32',CL60' SMS-MANAGED DATA SET. CORRECT THE DSNAME         '\n DC F'8',F'32',CL60' ARGUMENT AND RETRY THE REQUEST.                  '\n DC F'12',F'8',CL60' THERE IS INSUFFICIENT VIRTUAL STORAGE TO         '\n DC F'12',F'8',CL60' PROCESS THE REQUEST. FREE SOME VIRTUAL STORAGE   '\n DC F'12',F'8',CL60' AND RETRY THE REQUEST. IF THE CONDITION          '\n DC F'12',F'8',CL60' PERSISTS, CONTACT IBM FOR PROGRAMMING            '\n DC F'12',F'8',CL60' ASSISTANCE.                                      '\n DC F'12',F'12',CL60' THE DATA SET SPECIFIED IN DSNAME COULD NOT BE   '\n DC F'12',F'12',CL60' FOUND. VERIFY THAT THE DATA SET EXISTS AND HAS  '\n DC F'12',F'12',CL60' BEEN CORRECTLY SPECIFIED IN DSNAME.             '\n DC F'16',F'4',CL60' AN ERROR OCCURRED ON A CALL TO CATALOG           '\n DC F'16',F'4',CL60' MANAGEMENT. THE CATALOG RETURN CODE IS IN THE    '\n DC F'16',F'4',CL60' FIRST ELEMENT OF PROB_DET AND THE CATALOG        '\n DC F'16',F'4',CL60' REASON CODE IS IN THE SECOND ELEMENT OF          '\n DC F'16',F'4',CL60' PROB_DET. SEE MESSAGE IDC3009I FOR AN            '\n DC F'16',F'4',CL60' EXPLANATION OF THE CATALOG RETURN CODE AND       '\n DC F'16',F'4',CL60' REASON CODE. A CATALOG MANAGEMENT RETURN CODE    '\n DC F'16',F'4',CL60' OF 8 INDICATES THAT THE SPECIFIED DATA SET WAS   '\n DC F'16',F'4',CL60' NOT FOUND. IF YOU GET THIS RETURN CODE,          '\n DC F'16',F'4',CL60' CORRECT DSNAME AND RETRY THE REQUEST.            '\n DC F'20',F'4',CL60' A SYSTEM ERROR OCCURRED DURING IGWASYS/SMS/BWO   '\n DC F'20',F'4',CL60' OR IGWLSHR PROCESSING. THE ELEMENTS OF           '\n DC F'20',F'4',CL60' PROB_DET CONTAIN ADDITIONAL DIAGNOSTIC DATA.     '\n DC F'20',F'4',CL60' CONTACT IBM FOR PROGRAMMING ASSISTANCE AND       '\n DC F'20',F'4',CL60' PROVIDE THEM WITH THE IGWASYS/SMS/BWO            '\n DC F'20',F'4',CL60' RETURN_CODE, REASON_CODE, AND PROB_DET VALUES.   '\n DC F'24',F'4',CL60' LINKAGE CANNOT BE ESTABLISHED TO THE IGWLSHR     '\n DC F'24',F'4',CL60' SERVICE MODULE OR TO IGWASYS/SMS/BWO SERVICE     '\n DC F'24',F'4',CL60' MODULES, IGWAMCS1 AND IGWAMCS2. EITHER THE       '\n DC F'24',F'4',CL60' WRONG LEVEL OF THE OPERATING SYSTEM IS BEING     '\n DC F'24',F'4',CL60' USED, OR THE CALLABLE SYSTEM SERVICE LIBRARY,    '\n DC F'24',F'4',CL60' SYS1.CSSLIB, IS MISSING THE REQUIRED SERVICES.   '\n DC F'24',F'4',CL60' CONTACT YOUR INSTALLATION SYSTEM PROGRAMMER      '\n DC F'24',F'4',CL60' FOR ASSISTANCE.                                  '\nSERV5_TABLE_END DS  0CL68\n***********************************************************************\n*                                                                     *\n* OUTPUT CONTROL MESSAGE AND MEANING                                  *\n*                                                                     *\n***********************************************************************\nSERV6000 GDESUBST\n         GDEDDN GDEBWO04,FOUND=SERV6001,NOTFOUND=SERV6900\nSERV6001 GDEPRINT TYPE=OPEN,NAME=RETRSN,                               X\n               TITLE='RETURN CODE / REASON CODE EXPLAINATION',         X\n               HEADINGS=(SERV6HL1)\n         L     R4,=A(SERV5_TABLE)\n         L     R5,=A(SERV5_TABLE_END)\nSERV6010 CLC   0(4,R4),SERV6_SAVE_RET\n         BNE   SERV6020\n         CLC   4(4,R4),SERV6_SAVE_RSN\n         BNE   SERV6020\n         MVC   SERV6_MESSAGE,=CL133' '\n         MVC   SERV6_MESSAGE+63(60),8(R4)\n         B     SERV6030\nSERV6020 MVC   SERV6_MESSAGE,=CL133'0'\n         MVC SERV6_MESSAGE+15(40),=CL50'RETURN CODE = XXXXXXXX, REASON X\n               CODE = XXXXXXXX'\n         GDEH2E 0(R4),SERV6_MESSAGE+15+14,4\n         GDEH2E 4(R4),SERV6_MESSAGE+15+38,4\n         MVC   SERV6_MESSAGE+63(60),8(R4)\n         MVC   SERV6_SAVE_RET,0(R4)\n         MVC   SERV6_SAVE_RSN,4(R4)\nSERV6030 GDEPRINT SERV6_MESSAGE,NAME=RETRSN\n         LA    R4,68(R4)\n         CR    R4,R5\n         BL    SERV6010\n         GDEPRINT ,NAME=RETRSN,TYPE=CLOSE\nSERV6900 LA    R15,0\n         B     SERV6920\nSERV6910 LA    R15,4\n         B     SERV6920\nSERV6920 GDESUBEN\nSERV6HL1       DC   CL133' '\nSERV6_MESSAGE  DC   CL133' '\nSERV6_SAVE_RET DC   F'-1'\nSERV6_SAVE_RSN DC   F'-1'\n         END\n//*********************************************************************\n//*                                                                   *\n//*  STEP020   PGM=ASMA90                                             *\n//*                                                                   *\n//*********************************************************************\n//STEP020 EXEC PGM=ASMA90,\n//             PARM='BATCH,USING(WARN(9))'\n//SYSUT1   DD  DSN=&&SYSUT1,\n//             SPACE=(4096,(120,120),,,ROUND),\n//             UNIT=SYSALLDA,\n//             DCB=BUFNO=1\n//SYSLIB   DD  DSN=SYS1.MACLIB,\n//             DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN  DD   DSN=&&OBJ(GDEPRINT),\n//             DISP=OLD\n//SYSIN    DD  *\n         MACRO\n&TAG     GDESUBEN\n         GBLC  &TAGNAME\n&TAG     L     R14,&TAGNAME+8\n         LM    R2,R12,&TAGNAME+24\n         BR    R14\n         SPACE\n         DC    C'LTORG START &TAGNAME'\n         LTORG\n         DC    C'END LTORG &TAGNAME'\n         DS   0H\n         MEND\n         MACRO\n&TAG     GDESUBST\n         GBLC  &TAGNAME\n&TAGNAME SETC  '&TAG'\n         DROP  R12\n         CNOP  0,4\n&TAGNAME STM   R14,R12,8(R15)\n         B     68(R15)\n         DC    15F'-1'\n         LR    R12,R15\n         USING &TAGNAME,R12\n         MEND\n         MACRO\n&TAG     GDEEXIT\n         GBLB  &GDESAVE\n         GBLB  &GDERENT\n         GBLB  &GDEREGS\n         GBLB  &GDEMODE\n         GBLC  &GDESANM\n.**********************************************************************\n.*  ASSIGN DEFAULTS                                                   *\n.**********************************************************************\n&TAG     DS   0H\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *\n.**********************************************************************\n.GDE0100 AIF   (&GDEMODE).GDE0400\n         AIF   (&GDESAVE).GDE0110\n         AGO   .GDE0300\n.GDE0110 AIF   (&GDERENT).GDE0200\n         LR    R1,R13\n         L     R13,4(R1)\n         XC    8(4,R13),8(R13)\n         XC    4(4,R1),4(R1)\n         L     R14,12(R13)\n         LM    R2,R12,28(R13)\n         BR    R14\n         AGO   .GDE0900\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *\n.**********************************************************************\n.GDE0200 ANOP\n         LR    R1,R13\n         L     R13,4(R1)\n         XC    8(4,R13),8(R13)\n         XC    4(4,R1),4(R1)\n         STORAGE RELEASE,ADDR=(1),LENGTH=72\n         L     R14,12(R13)\n         LM    R2,R12,28(R13)\n         BR    R14\n         AGO   .GDE0900\n.**********************************************************************\n.*  RETURN R14                                                        *\n.**********************************************************************\n.GDE0300 ANOP\n         BR    R14\n         AGO   .GDE0900\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *\n.**********************************************************************\n.GDE0400 AIF   (&GDESAVE).GDE0410\n         AGO   .GDE0600\n.GDE0410 AIF   (&GDERENT).GDE0500\n         PR\n         AGO   .GDE0900\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *\n.**********************************************************************\n.GDE0500 ANOP\n         LAE   R1,0(R13)\n         STORAGE RELEASE,ADDR=(1),LENGTH=72\n         PR\n         AGO   .GDE0900\n.**********************************************************************\n.*  RETURN PR                                                         *\n.**********************************************************************\n.GDE0600 ANOP\n         PR\n.GDE0900 ANOP\n         LTORG\n         MEND\n         MACRO\n&TAG     GDEGOSUB &ROUTINE,&PARM\n         AIF   (T'&PARM EQ 'O').A2000\n&TAG     BAL   R1,*+8\n         DC    AL4(&PARM)\n         L     R15,=A(&ROUTINE)\n         BALR  R14,R15\n         LTR   R15,R15\n         MEXIT\n.A2000   ANOP\n&TAG     L     R15,=A(&ROUTINE)\n         BALR  R14,R15\n         LTR   R15,R15\n         MEND\n         MACRO\n&TAG     GDESTART &BR0,&BR1,&BR2,&BR3,&BR4,&BR5,&BR6,                  C\n               &SAVEAREA=NO,&RENT=NO,&ARMODE=NO\n         GBLB  &GDESAVE\n         GBLB  &GDEMODE\n         GBLB  &GDERENT\n         GBLB  &GDEREGS\n         GBLC  &GDESANM\n         LCLC  &TAGNAME,&C\n         LCLC  &DBR0,&DBR1,&DBR2,&DBR3,&DBR4,&DBR5,&DBR6\n.**********************************************************************\n.*  ASSIGN DEFAULTS                                                   *\n.**********************************************************************\n&GDESANM SETC  '$GDE'.'&SYSNDX'        POSSIBLE SAVE AREA NAME\n&C       SETC  ','                     COMMA FOR USING\n&TAGNAME SETC  'GDENONAME'             POSSIBLE DEFAULT PGM NAME\n         AIF   ('&TAG' EQ '').GDE0010\n&TAGNAME SETC  '&TAG'\n.GDE0010 ANOP\n&DBR0    SETC  '&BR0'\n&DBR1    SETC  '&BR1'\n&DBR2    SETC  '&BR2'\n&DBR3    SETC  '&BR3'\n&DBR4    SETC  '&BR4'\n&DBR5    SETC  '&BR5'\n&DBR6    SETC  '&BR6'\n         AIF   ('&DBR0' NE '').GDE0020\n&DBR0    SETC  'R12'                   DEFAULT BASE REG\n.GDE0020 ANOP\n&GDESAVE SETB  1\n         AIF   (T'&SAVEAREA NE 'O').GDE0030\n&GDESAVE SETB  0\n.GDE0030 ANOP\n&GDERENT SETB  0\n         AIF   ('&RENT' EQ 'NO').GDE0040\n         AIF   ('&RENT' NE 'YES').GDE0035\n&GDERENT SETB  1\n         AGO   .GDE0040\n.GDE0035 MNOTE 8,'INVALID RENT, MUST BE YES OR NO'\n.GDE0040 ANOP\n         AIF   ('&ARMODE' EQ 'NO').GDE0050\n         AIF   ('&ARMODE' NE 'YES').GDE0045\n&GDEMODE SETB  1\n         AGO   .GDE0050\n.GDE0045 MNOTE 8,'INVALID ARMODE, MUST BE YES OR NO'\n.GDE0050 ANOP\n.**********************************************************************\n.*  GENERATE CSECT ENTRY CODE AND ID LITERALS                         *\n.**********************************************************************\n&TAGNAME CSECT\n         B     52(15)\n         PUSH  PRINT\n         PRINT ON,GEN\n         DC    CL14' COMPILE DATE='\n         DC    CL8'&SYSDATE'\n         DC    CL6' TIME='\n         DC    CL5'&SYSTIME'\n         DC    CL7' CSECT='\n         DC    CL8'&TAGNAME'\n.**********************************************************************\n.*  GENERATE REGISTER ASSIGNMENTS                                     *\n.**********************************************************************\n         AIF   (&GDEREGS).GDE0060\n&GDEREGS SETB   1\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\nAR0      EQU   0\nAR1      EQU   1\nAR2      EQU   2\nAR3      EQU   3\nAR4      EQU   4\nAR5      EQU   5\nAR6      EQU   6\nAR7      EQU   7\nAR8      EQU   8\nAR9      EQU   9\nAR10     EQU   10\nAR11     EQU   11\nAR12     EQU   12\nAR13     EQU   13\nAR14     EQU   14\nAR15     EQU   15\n.GDE0060 ANOP\n         POP   PRINT\n.**********************************************************************\n.*  SAVE INCOMING REGISTERS                                           *\n.**********************************************************************\n         AIF   (&GDEMODE).GDE0400\n         STM   14,12,12(13)\n.**********************************************************************\n.*  GENERATE BASE REGISTER ASSIGNMENTS                                *\n.**********************************************************************\n.GDE0100 ANOP\n         AIF   ('&DBR1' NE '').GDE0110\n         AIF   ('&DBR0' EQ 'R15').GDE0101\n         LR    &DBR0,R15\n.GDE0101 ANOP\n         USING &TAGNAME&C&DBR0\n         AGO   .GDE0200\n.GDE0110 AIF   ('&DBR2' NE '').GDE0120\n         AIF   ('&DBR0' EQ 'R15').GDE0111\n         LR    &DBR0,R15\n.GDE0111 ANOP\n         LA    &DBR1,2048(&DBR0)\n         LA    &DBR1,2048(&DBR1)\n         USING &TAGNAME&C&DBR0&C&DBR1\n         AGO   .GDE0200\n.GDE0120 AIF   ('&DBR3' NE '').GDE0130\n         AIF   ('&DBR0' EQ 'R15').GDE0121\n         LR    &DBR0,R15\n.GDE0121 ANOP\n         LA    &DBR1,2048(&DBR0)\n         LA    &DBR1,2048(&DBR1)\n         LA    &DBR2,2048(&DBR1)\n         LA    &DBR2,2048(&DBR2)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2\n         AGO   .GDE0200\n.GDE0130 AIF   ('&DBR4' NE '').GDE0140\n         AIF   ('&DBR0' EQ 'R15').GDE0131\n         LR    &DBR0,R15\n.GDE0131 ANOP\n         LA    &DBR1,2048(&DBR0)\n         LA    &DBR1,2048(&DBR1)\n         LA    &DBR2,2048(&DBR1)\n         LA    &DBR2,2048(&DBR2)\n         LA    &DBR3,2048(&DBR2)\n         LA    &DBR3,2048(&DBR3)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3\n.GDE0140 AIF   ('&DBR5' NE '').GDE0150\n         AIF   ('&DBR0' EQ 'R15').GDE0141\n         LR    &DBR0,R15\n.GDE0141 ANOP\n         LA    &DBR1,2048(&DBR0)\n         LA    &DBR1,2048(&DBR1)\n         LA    &DBR2,2048(&DBR1)\n         LA    &DBR2,2048(&DBR2)\n         LA    &DBR3,2048(&DBR2)\n         LA    &DBR3,2048(&DBR3)\n         LA    &DBR4,2048(&DBR3)\n         LA    &DBR4,2048(&DBR4)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4\n         AGO   .GDE0200\n.GDE0150 AIF   ('&DBR6' NE '').GDE0160\n         AIF   ('&DBR0' EQ 'R15').GDE0151\n         LR    &DBR0,R15\n.GDE0151 ANOP\n         LA    &DBR1,2048(&DBR0)\n         LA    &DBR1,2048(&DBR1)\n         LA    &DBR2,2048(&DBR1)\n         LA    &DBR2,2048(&DBR2)\n         LA    &DBR3,2048(&DBR2)\n         LA    &DBR3,2048(&DBR3)\n         LA    &DBR4,2048(&DBR3)\n         LA    &DBR4,2048(&DBR4)\n         LA    &DBR5,2048(&DBR4)\n         LA    &DBR5,2048(&DBR5)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5\n         AGO   .GDE0200\n.GDE0160 ANOP\n         AIF   ('&DBR0' EQ 'R15').GDE0161\n         LR    &DBR0,R15\n.GDE0161 ANOP\n         LA    &DBR1,2048(&DBR0)\n         LA    &DBR1,2048(&DBR1)\n         LA    &DBR2,2048(&DBR1)\n         LA    &DBR2,2048(&DBR2)\n         LA    &DBR3,2048(&DBR2)\n         LA    &DBR3,2048(&DBR3)\n         LA    &DBR4,2048(&DBR3)\n         LA    &DBR4,2048(&DBR4)\n         LA    &DBR5,2048(&DBR4)\n         LA    &DBR5,2048(&DBR5)\n         LA    &DBR6,2048(&DBR5)\n         LA    &DBR6,2048(&DBR6)\n        USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5&C&DBR6\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *\n.**********************************************************************\n.GDE0200 ANOP\n         AIF   (&GDESAVE).GDE0210\n         AGO   .GDE0900\n.GDE0210 AIF   (&GDERENT).GDE0300\n         B     &GDESANM+72\n&GDESANM DC    3F'0',15F'-1'\n         LA    R1,&GDESANM\n         ST    R1,8(R13)\n         ST    R13,4(R1)\n         L     R1,24(R13)\n         L     R13,8(R13)\n         XC    0(4,R13),0(R13)\n         AGO   .GDE0900\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *\n.**********************************************************************\n.GDE0300 ANOP\n         STORAGE OBTAIN,LENGTH=72\n         ST    R1,8(R13)\n         ST    R13,4(R1)\n         LM    R0,R1,20(R13)\n         L     R13,8(R13)\n         XC    0(4,R13),0(R13)\n         AGO   .GDE0900\n.**********************************************************************\n.*  GENERATE BASE REGISTER ASSIGNMENTS                                *\n.**********************************************************************\n.GDE0400 ANOP\n         BAKR  14,0\n         SAC   512\n         SYSSTATE ASCENV=AR\n         AIF   ('&DBR1' NE '').GDE0410\n         AIF   ('&DBR0' EQ 'R15').GDE0401\n         LAE   &DBR0,0(R15,0)\n.GDE0401 ANOP\n         USING &TAGNAME&C&DBR0\n         AGO   .GDE0500\n.GDE0410 AIF   ('&DBR2' NE '').GDE0420\n         AIF   ('&DBR0' EQ 'R15').GDE0411\n         LAE   &DBR0,0(R15,0)\n.GDE0411 ANOP\n         LAE   &DBR1,2048(&DBR0)\n         LAE   &DBR1,2048(&DBR1)\n         USING &TAGNAME&C&DBR0&C&DBR1\n         AGO   .GDE0500\n.GDE0420 AIF   ('&DBR3' NE '').GDE0430\n         AIF   ('&DBR0' EQ 'R15').GDE0421\n         LAE   &DBR0,0(R15,0)\n.GDE0421 ANOP\n         LAE   &DBR1,2048(&DBR0)\n         LAE   &DBR1,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR2)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2\n         AGO   .GDE0500\n.GDE0430 AIF   ('&DBR4' NE '').GDE0440\n         AIF   ('&DBR0' EQ 'R15').GDE0431\n         LAE   &DBR0,0(R15,0)\n.GDE0431 ANOP\n         LAE   &DBR1,2048(&DBR0)\n         LAE   &DBR1,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR3)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3\n.GDE0440 AIF   ('&DBR5' NE '').GDE0450\n         AIF   ('&DBR0' EQ 'R15').GDE0441\n         LAE   &DBR0,0(R15,0)\n.GDE0441 ANOP\n         LAE   &DBR1,2048(&DBR0)\n         LAE   &DBR1,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR3)\n         LAE   &DBR4,2048(&DBR3)\n         LAE   &DBR4,2048(&DBR4)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4\n         AGO   .GDE0500\n.GDE0450 AIF   ('&DBR6' NE '').GDE0460\n         AIF   ('&DBR0' EQ 'R15').GDE0451\n         LAE   &DBR0,0(R15,0)\n.GDE0451 ANOP\n         LAE   &DBR1,2048(&DBR0)\n         LAE   &DBR1,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR3)\n         LAE   &DBR4,2048(&DBR3)\n         LAE   &DBR4,2048(&DBR4)\n         LAE   &DBR5,2048(&DBR4)\n         LAE   &DBR5,2048(&DBR5)\n         USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5\n         AGO   .GDE0500\n.GDE0460 ANOP\n         AIF   ('&DBR0' EQ 'R15').GDE0461\n         LAE   &DBR0,0(R15,0)\n.GDE0461 ANOP\n         LAE   &DBR1,2048(&DBR0)\n         LAE   &DBR1,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR1)\n         LAE   &DBR2,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR2)\n         LAE   &DBR3,2048(&DBR3)\n         LAE   &DBR4,2048(&DBR3)\n         LAE   &DBR4,2048(&DBR4)\n         LAE   &DBR5,2048(&DBR4)\n         LAE   &DBR5,2048(&DBR5)\n         LAE   &DBR6,2048(&DBR5)\n         LAE   &DBR6,2048(&DBR6)\n        USING &TAGNAME&C&DBR0&C&DBR1&C&DBR2&C&DBR3&C&DBR4&C&DBR5&C&DBR6\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR NON-REENTRANT CODE                   *\n.**********************************************************************\n.GDE0500 ANOP\n         AIF   (&GDESAVE).GDE0510\n         AGO   .GDE0900\n.GDE0510 AIF   (&GDERENT).GDE0600\n         B     &GDESANM+72\n&GDESANM DC    3F'0',15F'-1'\n         LAE   R13,&GDESANM\n         MVC   4(4,R13),=C'F1SA'\n         AGO   .GDE0900\n.**********************************************************************\n.*  GENERATE SAVE AREA CHAIN FOR REENTRANT CODE                       *\n.**********************************************************************\n.GDE0600 ANOP\n         STORAGE OBTAIN,LENGTH=72\n         LAE   R13,0(R1)\n         MVC   4(4,R13),=C'F1SA'\n.GDE0900 ANOP\n         MEND\n         TITLE  'GDEPRINT - GENERAL PRINT ROUTINE'\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n*    GDEPRINT PRINTS DATA PASSED.                                     *\n* PARAMETER 1                                                         *\n*    INPUT: FUNCTION          -    ONE BYTE                           *\n*              1 - OPEN DDNAME PRINT FILE                             *\n*              2 - WRITE A LINE TO PRINT FILE                         *\n*              3 - CLOSE DDNAME PRINT FILE                            *\n*              4 - CHECK IF PARAMETER 2 # OF LINES N.S. ELSE OVERFLOW *\n*    INPUT: HEX               -    ONE BYTE                           *\n*              1 - PRINT THE DATA ON A 133 BYTE LINE                  *\n*              2 - PRINT THE DATA IN HEX ON A 133 BYTE LINE           *\n*                  100 BYTES OF INPUT DATA IN CHAR/ZONE/NUM FORMAT.   *\n*              3 - PRINT THE DATA IN HEX ON A 133 BYTE LINE           *\n*                  32 BYTES OF INPUT DATA AT A TIME IN DUMP FORMAT.   *\n*              4 - PRINT THE DATA IN DISPLAY ON A 133 BYTE LINE       *\n*                  100 BYTES OF INPUT DATA IN CHAR FORMAT.            *\n*              5 - PRINT THE DATA IN HEX ON A 133 BYTE LINE           *\n*                  32 BYTES OF INPUT DATA AT A TIME IN DUMP FORMAT,   *\n*                  WITHOUT DISPLAY CHARACTERS ON THE RIGHT SIDE.      *\n*              6 - PRINT AS FUNCTION 4 UNLESS SOME CHARACTER ARE NOT  *\n*                  ALPHA-NUMERIC THEN PRINT AS FUNCTION 5.            *\n*              7 - PRINT THE DATA POINTED AS A FUNCTION 3 EXCEPT WITH *\n*                  STORAGE ADDRESSES AT ONE SIDE.                     *\n*              8 - PRINT AS FUNCTION 4 UNLESS SOME CHARACTER ARE NOT  *\n*                  ALPHA-NUMERIC THEN PRINT AS FUNCTION 5 WITH TIME   *\n*                  STAMP                                              *\n*              9 - PRINT THE DATA POINTED AS A FUNCTION 3 EXCEPT WITH *\n*                  STORAGE ADDRESSES AT ONE SIDE AND TIME STAMP       *\n*              T - PRINT THE INTERNAL TRACE RECORD FROM FAILING CALL  *\n*    INPUT: DDNAME            -    EIGHT BYTES                        *\n*              THE DDNAME IN THE JCL OF THE FILE                      *\n*    INPUT: DATA LENGTH       -    TWO BYTES BINARY                   *\n*              LENGTH IN BINARY OF THE FIELD TO PRINT                 *\n*             (VALID ONLY ON A HEX PRINT OF DATA                      *\n*              ALL OTHER ASSUMES A 133 BYTE LENGTH)                   *\n*    INPUT: DATA LENGTH SUBGROUP - TWO BYTES BINARY                   *\n*              LENGTH IN BINARY OF THE THE NUMBER OF BYTES TO PRINT   *\n*              AT A TIME OF DATA. IF DATA LENGTH SUBGROUP = DATA      *\n*              LENGTH THEN NO DEBLOCKING OCCURS.                      *\n*             (VALID ONLY ON A HEX PRINT OF DATA                      *\n*              ALL OTHER ASSUMES A 133 BYTE LENGTH)                   *\n*    INPUT: REPORT-ID         -    TEN  BYTES                         *\n*              THE REPORT ID TO BE PRINTED AT THE TOP OF EACH PAGE    *\n*    INPUT: LINES-PER-PAGE    -    TWO  BYTES PACKED.                 *\n*              THE NUMBER OF LINES TO PRINT BEFORE TOP OF NEW PAGE    *\n*    INPUT: FORCE-NEW-PAGE    -    ONE  BYTE.                         *\n*              FORCE A PAGE BREAK TO OCCUR                            *\n*              (DO-PAGE-BREAKS MUST BE SET TO '1').                   *\n*              1 - DO NOT FORCE A PAGE BREAK.                         *\n*              2 - FORCE A PAGE BREAK.                                *\n*              3 - FORCE A SUBHEADING BREAK.                          *\n*    INPUT: DO-PAGE-BREAKS    -    ONE  BYTE.                         *\n*              ALLOW LINE COUNT OVERFLOW CAUSE BREAK.                 *\n*              1 - ALLOW PAGE BREAK TO OCCUR STANDARD CENGDE HEADINGS *\n*              2 - DON'T ALLOW PAGE BREAK TO OCCUR.                   *\n*              3 - DO PAGE BREAK - NO HEADINGS                        *\n*                                                                     *\n*    INPUT: RESET-PAGE-COUNTER -   ONE  BYTE.                         *\n*              1 - DO NOT RESET PAGE COUNTER.                         *\n*              2 - RESET PAGE COUNTER TO ZERO THIS CALL.              *\n*                                                                     *\n*                                                                     *\n*    NOTE: CALLING MODULE MUST PROVIDE CARRIAGE CONTROL CHARACTER IN  *\n*    COLUMN 1 OF THE INPUT.                                           *\n*                                                                     *\n*      COLUMN    ]  PRINTER        INTERNAL\n*         1      ]  POSITIONING    LINE COUNT                         *\n*    ------------+--------------+-------------+                       *\n*         1      ]  NEW PAGE    ]  SET TO 0   ]                       *\n*              --+--------------+-------------+                       *\n*       BLANK    ]     +1       ]     +1      ]                       *\n*              --+--------------+-------------+                       *\n*         0      ]     +2       ]     +2      ]                       *\n*              --+--------------+-------------+                       *\n*         -      ]     +3       ]     +3      ]                       *\n*              --+--------------+-------------+                       *\n*       OTHER    ]     +1       ]     +1      ]                       *\n*    CHARACTERS  ]              ]             ]                       *\n*    ------------+--------------+-------------+                       *\n*                                                                     *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         SPACE 2\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n*                                                                     *\n* PARAMETER 2                                                         *\n*    INPUT: DATA              -    VARIBLE NUMBER OF BYTES            *\n*              DATA TO BE PRINTED.                                    *\n*              LENGTH TO BE PRINTED IS 133 IF HEX IS NOT REQUESTED.   *\n*              LENGTH TO BE PRINTED IS THE VALUE OF THE DATA LENGTH   *\n*              PARAMETER IF HEX IS REQUESTED.                         *\n*                                                                     *\n*    INPUT: COUNT             -    TWO BYTES PACKED.                  *\n*              NUMBER OF LINES TO BE REQUESTED TO BE PRINTED IN NEXT  *\n*              CALLS. IF CURRENT LINE COUNT PLUS THIS COUNT EXCEEDS   *\n*              LINES PER PAGE THEN DO OVERFLOW (PAGE BREAK) NOW.      *\n*       NOTE: IF OVERFLOW OCCURRED THEN COUNT SET TO ZERO.            *\n*                                                                     *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         SPACE 2\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n*                                                                     *\n* PARAMETER 3,4,...                                                   *\n*    INPUT: VARIABLE NUMBER OF PARAMETERS FOLLOW.                     *\n*              EACH ONE ASSUMED TO BE A 133 BYTE LINE TO BE USED AS   *\n*              HEADER LINES 4, 5, ....   HEADER LINES 1,2 AND 3 ARE   *\n*              AUTOMATICALLY GENERATED.                               *\n*    OUTPUT: PRINTED LINES TO DDNAME.                                 *\n*                                                                     *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n         EJECT\nR2DSECT  DSECT\nR2FUNCTN DS    CL1\nR2HEX    DS    CL1\nR2DDNAME DS    CL8\nR2DATALN DS    CL2\nR2SUBLEN DS    CL2\nR2REPTID DS    CL10\nR2LN@PAG DS    CL2\nR2NEWPAG DS    CL1\nR2PAGBRK DS    CL1\nR2RESPAG DS    CL1\nR2RETCOD DS    CL2\n         SPACE 2\nR3DSECT  DSECT\nR3DATA   DS   0C\n         SPACE 2\nR4DSECT  DSECT\nR4NEXT   DS    A\nR4DDNAME DS    CL8\nR4PGCNT  DS    PL3\nR4LNCNT  DS    PL3\nR4STATUS DS    CL1\nR4HEX    DS    CL1\nR4DCB    DS    CL96\nR4LEN    EQU   *-R4DSECT\n         SPACE 2\n         PRINT ON,GEN\nGDEPRINT GDESTART R12\n         USING R2DSECT,R2\n         USING R3DSECT,R3\n         USING R4DSECT,R4\n         LM    R2,R3,0(R1)\n         MVC   R2RETCOD,=CL2'00'\n         GDEGOSUB GDEP100\n         L     R4,=A(GP1R4SAV)\n         L     R4,0(R4)\n         GDEGOSUB GDEP200\n         GDEEXIT\n         LTORG\n         EJECT\n***********************************************************************\n* GDEP100 FINDS THE AREA REPRESENTING THIS REPORT (BY DDNAME)         *\n* INPUT FUNCTION                                                      *\n*       HEAD OF TABLE ROUTINE (GP1FIRST)                              *\n*       R2DDNAME                                                      *\n* OUTPUT GP1R4SAV IS SET FOR THE TABLE ENTRY NEEDED TO OPERATE        *\n***********************************************************************\nGDEP100  GDESUBST\n         ST    R1,GP1R1SAV\n         L     R4,GP1FIRST\nGDEP101  LTR   R4,R4\n         BZ    GDEP100X\n         CLC   R4DDNAME,R2DDNAME\n         BE    GDEP100X\n         L     R4,R4NEXT\n         B     GDEP101\nGDEP100X ST    R4,GP1R4SAV\n         GDESUBEN\nGP1R1SAV DC    F'-1'\nGP1R4SAV DC    F'-1'\nGP1FIRST DC    F'0'\n         EJECT\n***********************************************************************\n* INPUT FUNCTION                                                      *\n*       R4        STATE AREA OR NULL                                  *\n*       TABLE FOR FUNCTION VALIDATION                                 *\n* OUTPUT INVOKES SELECTED ROUTINE                                     *\n***********************************************************************\nGDEP200  GDESUBST\n         MVC   GP2ARGFN(1),R2FUNCTN\n         MVC   GP2ARGFN+1(2),=CL2'  '\n         MVI   GP2ARGEN,X'00'\n         LTR   R4,R4\n         BZ    GDEP2001\n         MVC   GP2ARGEN,R4STATUS\nGDEP2001 CLC   GP2TB001(2),GP2ARGMT\n         BNE   GDEP2002\n         L     R15,GP2TB001+4\n         B     GDEP2009\nGDEP2002 CLC   GP2TB002(2),GP2ARGMT\n         BNE   GDEP2003\n         L     R15,GP2TB002+4\n         B     GDEP2009\nGDEP2003 CLC   GP2TB003(2),GP2ARGMT\n         BNE   GDEP2013\n         L     R15,GP2TB003+4\n         B     GDEP2009\nGDEP2013 CLC   GP2TB004(2),GP2ARGMT\n         BNE   GDEP2004\n         L     R15,GP2TB004+4\n         B     GDEP2009\nGDEP2004 CLC   GP2TBO1(2),GP2ARGMT\n         BNE   GDEP2005\n         L     R15,GP2TBO1+4\n         B     GDEP2009\nGDEP2005 CLC   GP2TBO2(2),GP2ARGMT\n         BNE   GDEP2006\n         L     R15,GP2TBO2+4\n         B     GDEP2009\nGDEP2006 CLC   GP2TBO3(2),GP2ARGMT\n         BNE   GDEP2007\n         L     R15,GP2TBO3+4\n         B     GDEP2009\nGDEP2007 CLC   GP2TBO4(2),GP2ARGMT\n         BNE   GDEP2008\n         L     R15,GP2TBO4+4\n         B     GDEP2009\nGDEP2008 MVC   R2RETCOD,=CL2'04'       BAD FUNCTION CODE\n         B     GDEP200X\nGDEP2009 BALR  R14,R15\nGDEP200X GDESUBEN\n         LTORG\n         DS    0F\nGP2TB001 DC   X'00',C'1  ',A(GDES100)  OPEN FILE\nGP2TB002 DC   X'00',C'2  ',A(GDES500)  OPEN FILE THEN DO OUTPUT\nGP2TB003 DC   X'00',C'3  ',A(GDES400)  DO NOTHING-FUNCTION ACCOMPLISHED\nGP2TB004 DC   X'00',C'4  ',A(GDES400)  DO NOTHING-CANT FIND FILE\nGP2TBO1  DC    C'O',C'1  ',A(GDES400)  DO NOTHING-FUNCTION ACCOMPLISHED\nGP2TBO2  DC    C'O',C'2  ',A(GDES200)  WRITE\nGP2TBO3  DC    C'O',C'3  ',A(GDES300)  CLOSE FILE\nGP2TBO4  DC    C'O',C'4  ',A(GDESA00)  CLOSE FILE\nGP2ARGMT DS    0CL4\nGP2ARGEN DS    C\nGP2ARGFN DS    CL3\n         EJECT\n***********************************************************************\n* GDES100  -  OPEN FILE                                               *\n* INPUT R2                                                            *\n*       R3                                                            *\n*       R4                                                            *\n* OUTPUT AREA ADDED TO R4 CHAIN OF FILES AND OPENED                   *\n***********************************************************************\nGDES100  GDESUBST\n         L     R0,SE1GETLG\n         GETMAIN R,LV=(0)\n         LR    R4,R1\n         XC    R4NEXT,R4NEXT\n         MVC   R4DDNAME,R2DDNAME\n         ZAP   R4PGCNT,=PL4'0'\n         ZAP   R4LNCNT,R2LN@PAG\n         AP    R4LNCNT,=P'1'\n         MVC   R4DCB(96),SE1DCB\n         LA    R9,R4DCB\n         MVC   R4DCB+40(8),R4DDNAME\n         OPEN  ((R9),OUTPUT)\n         MVI   R4STATUS,C'O'\n         L     R11,=A(GP1FIRST)\n         MVC   R4NEXT,0(R11)\n         ST    R4,0(R11)\nGDES100X GDESUBEN\n         DS   0F\nSE1GETLG DC    AL4(R4LEN)\nSE1DCB   DCB   DSORG=PS,MACRF=PM,RECFM=FBA,LRECL=133\n         EJECT\n***********************************************************************\n*  GDES200 - DO OUTPUT SETUP                                          *\n*  INPUT - R2 THROUGH R4                                              *\n*  OUTPUT                                                             *\n*     SE2PRINT                                                        *\n***********************************************************************\nGDES200  GDESUBST\n         MVC   R4HEX,R2HEX\n         CLI   R2NEWPAG,C'1'                     DO SPECIAL CHECKS\n         BE    GDES201                           DO SPECIAL CHECKS\n         CLI   R2NEWPAG,C'3'                     DO SPECIAL CHECKS\n         BE    GDES201                           DO SPECIAL CHECKS\nGDES201A ZAP   R4LNCNT,R2LN@PAG                  DO SPECIAL CHECKS\n         AP    R4LNCNT,=P'1'                     DO SPECIAL CHECKS\nGDES201  CLI   R2RESPAG,C'1'                     DO SPECIAL CHECKS\n         BE    GDES202                           DO SPECIAL CHECKS\n         ZAP   R4PGCNT,=PL4'0'                   DO SPECIAL CHECKS\n         SPACE 3\nGDES202  CLI   R4HEX,C'1'\n         BE    GDES210\n         CLI   R4HEX,C'T'\n         BE    GDES280\n         SPACE 3\n         MVC   SE2PRINT,SE2LN1              CHECK FOR 0 LENGTH PRINT\n         XR    R9,R9                        CHECK FOR 0 LENGTH PRINT\n         STCM  R9,B'0011',SE2LEN1           CHECK FOR 0 LENGTH PRINT\n         STCM  R9,B'0011',SE2LEN3           CHECK FOR 0 LENGTH PRINT\n         ICM   R9,B'0011',R2DATALN          CHECK FOR 0 LENGTH PRINT\n         BNZ   GDES203                      CHECK FOR 0 LENGTH PRINT\n         MVC   SE2PRINT,SE2LN2              CHECK FOR 0 LENGTH PRINT\n         GDEGOSUB GDES700                   CHECK FOR 0 LENGTH PRINT\n         B     GDES200X                     CHECK FOR 0 LENGTH PRINT\nGDES203  CLC   R2SUBLEN,R2DATALN       ESTABLISH BLK/SUBBLK RELATION\n         BNH   GDES204                 ESTABLISH BLK/SUBBLK RELATION\n         ICM   R9,B'0011',R2DATALN     ESTABLISH BLK/SUBBLK RELATION\n         B     GDES205                 ESTABLISH BLK/SUBBLK RELATION\nGDES204  ICM   R9,B'0011',R2SUBLEN     ESTABLISH BLK/SUBBLK RELATION\n         BNZ   GDES205                 ESTABLISH BLK/SUBBLK RELATION\n         ICM   R9,B'0011',R2DATALN     ESTABLISH BLK/SUBBLK RELATION\nGDES205  STH   R9,SE2LEN4              ESTABLISH BLK/SUBBLK RELATION\n         SPACE 3\n         CLI   R4HEX,C'2'\n         BE    GDES220\n         CLI   R4HEX,C'3'\n         BE    GDES240\n         CLI   R4HEX,C'4'\n         BE    GDES230\n         CLI   R4HEX,C'5'\n         BE    GDES240\n         CLI   R4HEX,C'6'\n         BE    GDES250\n         CLI   R4HEX,C'7'\n         BE    GDES260\n         CLI   R4HEX,C'8'\n         BE    GDES270\n         CLI   R4HEX,C'9'\n         BE    GDES260\n         GDEGOSUB GDES600\n         B     GDES200X\n         SPACE 3\n         LTORG\n         DS   0H\n***********************************************************************\n*  PROCESS CODE 1                                                     *\n***********************************************************************\nGDES210  MVC   SE2PRINT,R3DATA                   PROCESS HEX CODE 1\n         GDEGOSUB GDES700                        PROCESS HEX CODE 1\n         B     GDES200X                          PROCESS HEX CODE 1\n         EJECT\n***********************************************************************\n*  PROCESS CODES 2                                                    *\n***********************************************************************\nGDES220  LR    R10,R3                            PROCESS HEX CODE 2\nGDES221  ZAP   SE2LN3CT,=PL2'-10'                PROCESS HEX CODE 2\nGDES222  CH    R9,=H'0'                          PROCESS HEX CODE 2\n         BNH   GDES225                           PROCESS HEX CODE 2\n         MVC   SE2LEN2,=H'99'                    PROCESS HEX CODE 2\n         CH    R9,=H'100'                        PROCESS HEX CODE 2\n         BH    GDES223                           PROCESS HEX CODE 2\n         BCTR  R9,R0                             PROCESS HEX CODE 2\n         STH   R9,SE2LEN2                        PROCESS HEX CODE 2\n         LA    R9,1(R9)                          PROCESS HEX CODE 2\nGDES223  ZAP   SE2WK3CT,R4LNCNT                  PROCESS HEX CODE 2\n         AP    SE2WK3CT,=P'5'                    PROCESS HEX CODE 2\n         CP    SE2WK3CT,R2LN@PAG                 PROCESS HEX CODE 2\n         BNH   GDES224                           PROCESS HEX CODE 2\n         ZAP   R4LNCNT,SE2WK3CT                  PROCESS HEX CODE 2\nGDES224  LH    R11,SE2LEN2                       PROCESS HEX CODE 2\n         MVC   SE2PRINT,SE2LN1                   PROCESS HEX CODE 2\n         EX    R11,GDES20EX                      PROCESS HEX CODE 2\n         EX    R11,GDES23EX                      PROCESS HEX CODE 2\n         MVI   SE2PRINT,C'0'                     PROCESS HEX CODE 2\n         GDEGOSUB GDES700                        PROCESS HEX CODE 2\n         LH    R11,SE2LEN2                       PROCESS HEX CODE 2\n         MVC   SE2PRINT,SE2LN1                   PROCESS HEX CODE 2\n         EX    R11,GDES20EX                      PROCESS HEX CODE 2\n         EX    R11,GDES24EX                      PROCESS HEX CODE 2\n         GDEGOSUB GDES700                        PROCESS HEX CODE 2\n         LH    R11,SE2LEN2                       PROCESS HEX CODE 2\n         MVC   SE2PRINT,SE2LN1                   PROCESS HEX CODE 2\n         EX    R11,GDES20EX                      PROCESS HEX CODE 2\n         EX    R11,GDES25EX                      PROCESS HEX CODE 2\n         GDEGOSUB GDES700                        PROCESS HEX CODE 2\n         LH    R11,SE2LEN2                       PROCESS HEX CODE 2\n         AH    R11,=H'30'                        PROCESS HEX CODE 2\n         EX    R11,GDES21EX                      PROCESS HEX CODE 2\n         MVC   SE2LN3(22),SE2LN1                 PROCESS HEX CODE 4\n         MVC   SE2WORK3(20),SE2LN1          PROCESS HEX CODE 3 & 5\n         AP    SE2LN3CT,=P'10'                   PROCESS HEX CODE 2\n         ED    SE2PRINT+22(8),SE2LN3CT           PROCESS HEX CODE 2\n         GDEGOSUB GDES700                        PROCESS HEX CODE 2\n         LH    R11,SE2LEN2                       PROCESS HEX CODE 2\n         LA    R11,1(R11)                        PROCESS HEX CODE 2\n         AR    R10,R11                           PROCESS HEX CODE 2\n         SR    R9,R11                            PROCESS HEX CODE 2\n         AH    R11,SE2LEN3                       PROCESS HEX CODE 2\n         STH   R11,SE2LEN3                       PROCESS HEX CODE 2\n         B     GDES222                           PROCESS HEX CODE 2\nGDES225  LH    R11,SE2LEN3                       PROCESS HEX CODE 2\n         XC    SE2LEN3,SE2LEN3                   PROCESS HEX CODE 2\n         AH    R11,SE2LEN1                       PROCESS HEX CODE 2\n         STH   R11,SE2LEN1                       PROCESS HEX CODE 2\n         XR    R9,R9                             PROCESS HEX CODE 2\n         ICM   R9,B'0011',R2DATALN               PROCESS HEX CODE 2\n         SR    R9,R11                            PROCESS HEX CODE 2\n         BNH   GDES200X                          PROCESS HEX CODE 2\n         CLM   R9,B'0011',SE2LEN4                PROCESS HEX CODE 2\n         BNH   GDES221                           PROCESS HEX CODE 2\n         XR    R9,R9                             PROCESS HEX CODE 2\n         ICM   R9,B'0011',SE2LEN4                PROCESS HEX CODE 2\n         B     GDES221                           PROCESS HEX CODE 2\n         EJECT\n***********************************************************************\n*  PROCESS CODE4.                                                     *\n***********************************************************************\nGDES230  LR    R10,R3                            PROCESS HEX CODE 4\n         MVC   SE2PRINT,SE2LN3                   PROCESS HEX CODE 4\n         MVC   SE2PRINT+22(8),SE2LN1             PROCESS HEX CODE 4\n         MVC   SE2LN3(22),SE2LN1                 PROCESS HEX CODE 4\n         MVC   SE2WORK3(20),SE2LN1          PROCESS HEX CODE 3 & 5\n         MVI   SE2PRINT,C'0'                     PROCESS HEX CODE 4\n         MVI   SE2HX4ON,C'Y'                     PROCESS HEX CODE 4\n         GDEGOSUB GDES700                        PROCESS HEX CODE 4\n         MVI   SE2HX4ON,C'N'                     PROCESS HEX CODE 4\nGDES231  ZAP   SE2LN3CT,=PL2'-100'               PROCESS HEX CODE 4\nGDES232  CH    R9,=H'0'                          PROCESS HEX CODE 4\n         BNH   GDES235                           PROCESS HEX CODE 4\n         MVC   SE2LEN2,=H'99'                    PROCESS HEX CODE 4\n         CH    R9,=H'100'                        PROCESS HEX CODE 4\n         BH    GDES233                           PROCESS HEX CODE 4\n         BCTR  R9,R0                             PROCESS HEX CODE 4\n         STH   R9,SE2LEN2                        PROCESS HEX CODE 4\n         LA    R9,1(R9)                          PROCESS HEX CODE 4\nGDES233  LH    R11,SE2LEN2                       PROCESS HEX CODE 4\n         MVC   SE2PRINT,SE2LN1                   PROCESS HEX CODE 4\n         EX    R11,GDES20EX                      PROCESS HEX CODE 4\n         EX    R11,GDES23EX                      PROCESS HEX CODE 4\n         MVC   SE2PRINT+00(29),SE2LN5            PROCESS HEX CODE 4\n         AP    SE2LN3CT,=P'100'                  PROCESS HEX CODE 4\n         ED    SE2PRINT+20(8),SE2LN3CT           PROCESS HEX CODE 4\n         CP    SE2LN3CT,=P'0'                    PROCESS HEX CODE 4\n         BNE   GDES234                           PROCESS HEX CODE 4\n         MVI   SE2PRINT+19,C' '                  PROCESS HEX CODE 4\nGDES234  GDEGOSUB GDES700                        PROCESS HEX CODE 4\n         LH    R11,SE2LEN2                       PROCESS HEX CODE 4\n         LA    R11,1(R11)                        PROCESS HEX CODE 4\n         AR    R10,R11                           PROCESS HEX CODE 4\n         SR    R9,R11                            PROCESS HEX CODE 4\n         AH    R11,SE2LEN3                       PROCESS HEX CODE 4\n         STH   R11,SE2LEN3                       PROCESS HEX CODE 4\n         B     GDES232                           PROCESS HEX CODE 4\nGDES235  LH    R11,SE2LEN3                       PROCESS HEX CODE 4\n         XC    SE2LEN3,SE2LEN3                   PROCESS HEX CODE 4\n         AH    R11,SE2LEN1                       PROCESS HEX CODE 4\n         STH   R11,SE2LEN1                       PROCESS HEX CODE 4\n         XR    R9,R9                             PROCESS HEX CODE 4\n         ICM   R9,B'0011',R2DATALN               PROCESS HEX CODE 4\n         SR    R9,R11                            PROCESS HEX CODE 4\n         BNH   GDES200X                          PROCESS HEX CODE 4\n         CLM   R9,B'0011',SE2LEN4                PROCESS HEX CODE 4\n         BNH   GDES231                           PROCESS HEX CODE 4\n         XR    R9,R9                             PROCESS HEX CODE 4\n         ICM   R9,B'0011',SE2LEN4                PROCESS HEX CODE 4\n         B     GDES231                           PROCESS HEX CODE 4\n         EJECT\n***********************************************************************\n*  PROCESS CODE 3 AND 5.                                              *\n***********************************************************************\nGDES240  LR    R10,R3                       PROCESS HEX CODE 3 & 5\nGDES241  ZAP   SE2WK3CT,=PL2'-32'           PROCESS HEX CODE 3 & 5\nGDES242  CH    R9,=H'0'                     PROCESS HEX CODE 3 & 5\n         BNH   GDES248                      PROCESS HEX CODE 3 & 5\n         MVC   SE2LEN2,=H'32'               PROCESS HEX CODE 3 & 5\n         MVC   SE2LEN5,=H'64'               PROCESS HEX CODE 3 & 5\n         MVC   SE2WORK4,SE2LN1              PROCESS HEX CODE 3 & 5\n         LA    R1,SE2WORK4                  PROCESS HEX CODE 3 & 5\n         CH    R9,=H'32'                    PROCESS HEX CODE 3 & 5\n         BH    GDES243                      PROCESS HEX CODE 3 & 5\n         LR    R8,R9                        PROCESS HEX CODE 3 & 5\n         STH   R8,SE2LEN2                   PROCESS HEX CODE 3 & 5\n         SLL   R8,1(R0)                     PROCESS HEX CODE 3 & 5\n         STCM  R8,B'0011',SE2LEN5           PROCESS HEX CODE 3 & 5\nGDES243  MVC   SE2WORK2,SE2WORK1            PROCESS HEX CODE 3 & 5\n         LH    R8,SE2LEN2                   PROCESS HEX CODE 3 & 5\n         LA    R11,SE2WORK2+1               PROCESS HEX CODE 3 & 5\nGDES244  ICM   R7,B'1000',0(R10)            PROCESS HEX CODE 3 & 5\n         STCM  R7,B'1000',0(R1)             PROCESS HEX CODE 3 & 5\n         LA    R1,1(R1)                     PROCESS HEX CODE 3 & 5\n         LA    R5,2(R0)                     PROCESS HEX CODE 3 & 5\nGDES245  XR    R6,R6                        PROCESS HEX CODE 3 & 5\n         SLDL  R6,4(R0)                     PROCESS HEX CODE 3 & 5\n         STCM  R6,B'0001',0(R11)            PROCESS HEX CODE 3 & 5\n         LA    R11,1(R11)                   PROCESS HEX CODE 3 & 5\n         BCT   R5,GDES245                   PROCESS HEX CODE 3 & 5\n         LA    R10,1(R10)                   PROCESS HEX CODE 3 & 5\n         BCT   R8,GDES244                   PROCESS HEX CODE 3 & 5\n         ICM   R8,B'0011',SE2LEN5           PROCESS HEX CODE 3 & 5\n         BCTR  R8,R0                        PROCESS HEX CODE 3 & 5\n         EX    R8,GDES27EX                  PROCESS HEX CODE 3 & 5\n         MVC   SE2PRINT,SE2LN4              PROCESS HEX CODE 3 & 5\n         TR    SE2PRINT,SE2WORK2            PROCESS HEX CODE 3 & 5\n         MVC   SE2PRINT(28),SE2WORK3        PROCESS HEX CODE 3 & 5\n         MVC   SE2LN3(22),SE2LN1                 PROCESS HEX CODE 4\n         MVC   SE2WORK3(20),SE2LN1          PROCESS HEX CODE 3 & 5\n         AP    SE2WK3CT,=PL2'32'            PROCESS HEX CODE 3 & 5\n         CP    SE2WK3CT,=P'0'               PROCESS HEX CODE 3 & 5\n         BNE   GDES246                      PROCESS HEX CODE 3 & 5\n         MVI   SE2PRINT+20,C' '             PROCESS HEX CODE 3 & 5\n         MVI   SE2PRINT,C'0'                PROCESS HEX CODE 3 & 5\nGDES246  ED    SE2PRINT+21(6),SE2WK3CT      PROCESS HEX CODE 3 & 5\n         CLI   R4HEX,C'5'                   PROCESS HEX CODE 3 & 5\n         BE    GDES247                      PROCESS HEX CODE 3 & 5\n         MVC   SE2PRINT+101(32),SE2WORK4    PROCESS HEX CODE 3 & 5\n         TR    SE2PRINT+101(32),SE2TRAN1    PROCESS HEX CODE 3 & 5\n*        MVI   SE2PRINT+099,C'*'            PROCESS HEX CODE 3 & 5\n*        MVI   SE2PRINT+132,C'*'            PROCESS HEX CODE 3 & 5\nGDES247  GDEGOSUB GDES700                   PROCESS HEX CODE 3 & 5\n         LH    R11,SE2LEN2                  PROCESS HEX CODE 3 & 5\n         SR    R9,R11                       PROCESS HEX CODE 3 & 5\n         AH    R11,SE2LEN3                  PROCESS HEX CODE 3 & 5\n         STH   R11,SE2LEN3                  PROCESS HEX CODE 3 & 5\n         B     GDES242                      PROCESS HEX CODE 3 & 5\nGDES248  LH    R11,SE2LEN3                  PROCESS HEX CODE 3 & 5\n         XC    SE2LEN3,SE2LEN3              PROCESS HEX CODE 3 & 5\n         AH    R11,SE2LEN1                  PROCESS HEX CODE 3 & 5\n         STH   R11,SE2LEN1                  PROCESS HEX CODE 3 & 5\n         XR    R9,R9                        PROCESS HEX CODE 3 & 5\n         ICM   R9,B'0011',R2DATALN          PROCESS HEX CODE 3 & 5\n         SR    R9,R11                       PROCESS HEX CODE 3 & 5\n         BNH   GDES200X                     PROCESS HEX CODE 3 & 5\n         CLM   R9,B'0011',SE2LEN4           PROCESS HEX CODE 3 & 5\n         BNH   GDES241                      PROCESS HEX CODE 3 & 5\n         XR    R9,R9                        PROCESS HEX CODE 3 & 5\n         ICM   R9,B'0011',SE2LEN4           PROCESS HEX CODE 3 & 5\n         B     GDES241                      PROCESS HEX CODE 3 & 5\n         EJECT\n***********************************************************************\n*  PROCESS FUNCTION 6.                                                *\n***********************************************************************\nGDES250  STM   R14,R12,SE2SAVE\n         LR    R10,R3\n         XR    R9,R9                             PROCESS HEX CODE 6\n         ICM   R9,B'0011',R2DATALN               PROCESS HEX CODE 6\nGDES251  CH    R9,=H'0'                          PROCESS HEX CODE 6\n         BNH   GDES253                           PROCESS HEX CODE 6\n         MVC   SE2LEN2,=H'255'                   PROCESS HEX CODE 6\n         CH    R9,=H'256'                        PROCESS HEX CODE 6\n         BH    GDES252                           PROCESS HEX CODE 6\n         BCTR  R9,R0                             PROCESS HEX CODE 6\n         STH   R9,SE2LEN2                        PROCESS HEX CODE 6\n         LA    R9,1(R9)                          PROCESS HEX CODE 6\nGDES252  LH    R11,SE2LEN2                       PROCESS HEX CODE 6\n         L     R8,=A(SE2TRAN5)\n         EX    R11,GDES26EX                      PROCESS HEX CODE 6\n         BNZ   GDES254                           PROCESS HEX CODE 6\n         LH    R11,SE2LEN2                       PROCESS HEX CODE 6\n         LA    R11,1(R11)                        PROCESS HEX CODE 6\n         SR    R9,R11                            PROCESS HEX CODE 6\n         AR    R10,R11                           PROCESS HEX CODE 6\n         B     GDES251                           PROCESS HEX CODE 6\nGDES253  LM    R14,R12,SE2SAVE                   PROCESS HEX CODE 6\n         MVI   R4HEX,C'4'\n         B     GDES230                           PROCESS HEX CODE 6\nGDES254  LM    R14,R12,SE2SAVE                   PROCESS HEX CODE 6\n         MVI   R4HEX,C'3'\n         B     GDES240                           PROCESS HEX CODE 6\n         EJECT\n***********************************************************************\n*  PROCESS CODE 7.                                                    *\n***********************************************************************\nGDES260  LR    R10,R3                       PROCESS HEX CODE 7\n         MVC   SE2WORK5,=CL20' '            PROCESS HEX CODE 7\n         MVI   SE2WORK5,C'0'                PROCESS HEX CODE 7\n         CLI   R4HEX,C'9'                   PROCESS HEX CODE 9\n         BNE   GDES261                      PROCESS HEX CODE 9\n         LA    R6,SE2TIME\n         XC    SE2TIME,SE2TIME\n         TIME  DEC,(R6),LINKAGE=SYSTEM,DATETYPE=YYYYMMDD\n         OI    SE2TIME+3,X'0F'                   PROCESS HEX CODE 9\n         MVI   SE2TIME+12,X'0F'                  PROCESS HEX CODE 9\n         UNPK  SE2SEC(7),SE2TIME(4)              PROCESS HEX CODE 9\n         MVC   SE2DATE+06(2),SE2SEC+00           PROCESS HEX CODE 9\n         MVC   SE2DATE+08(2),SE2SEC+02           PROCESS HEX CODE 9\n         MVC   SE2DATE+10(2),SE2SEC+04           PROCESS HEX CODE 9\n         UNPK  SE2SEC(7),SE2TIME+9(4)            PROCESS HEX CODE 9\n         MVC   SE2DATE+00(2),SE2SEC+00           PROCESS HEX CODE 9\n         MVC   SE2DATE+02(2),SE2SEC+02           PROCESS HEX CODE 9\n         MVC   SE2DATE+04(2),SE2SEC+04           PROCESS HEX CODE 9\n         MVC   SE2WORK5+01(2),SE2DATE+2          PROCESS HEX CODE 9\n         MVC   SE2WORK5+03(2),SE2DATE+4          PROCESS HEX CODE 9\n         MVC   SE2WORK5+06(2),SE2DATE+6          PROCESS HEX CODE 9\n         MVC   SE2WORK5+08(2),SE2DATE+8          PROCESS HEX CODE 9\n         MVC   SE2WORK5+10(2),SE2DATE+10         PROCESS HEX CODE 9\nGDES261  CH    R9,=H'0'                     PROCESS HEX CODE 7\n         BNH   GDES268                      PROCESS HEX CODE 7\n         MVC   SE2LEN2,=H'32'               PROCESS HEX CODE 7\n         MVC   SE2LEN5,=H'64'               PROCESS HEX CODE 7\n         MVC   SE2WORK4,SE2LN1              PROCESS HEX CODE 7\n         LR    R1,R10                       PROCESS HEX CODE 7\n         SLL   R1,8(R0)                     PROCESS HEX CODE 7\n         LA    R11,SE2WORK5+13              PROCESS HEX CODE 7\n         LA    R8,6(R0)                     PROCESS HEX CODE 7\nGDES262  XR    R0,R0                        PROCESS HEX CODE 7\n         SLDL  R0,4(R0)                     PROCESS HEX CODE 7\n         STCM  R0,B'0001',0(R11)            PROCESS HEX CODE 7\n         LA    R11,1(R11)                   PROCESS HEX CODE 7\n         BCT   R8,GDES262                   PROCESS HEX CODE 7\n         TR    SE2WORK5+13(6),SE2TRAN4      PROCESS HEX CODE 7\n         LA    R1,SE2WORK4                  PROCESS HEX CODE 7\n         CH    R9,=H'32'                    PROCESS HEX CODE 7\n         BH    GDES263                      PROCESS HEX CODE 7\n         LR    R8,R9                        PROCESS HEX CODE 7\n         STH   R8,SE2LEN2                   PROCESS HEX CODE 7\n         SLL   R8,1(R0)                     PROCESS HEX CODE 7\n         STCM  R8,B'0011',SE2LEN5           PROCESS HEX CODE 7\nGDES263  MVC   SE2WORK2,SE2WORK1            PROCESS HEX CODE 7\n         LH    R8,SE2LEN2                   PROCESS HEX CODE 7\n         LA    R11,SE2WORK2+1               PROCESS HEX CODE 7\nGDES264  ICM   R7,B'1000',0(R10)            PROCESS HEX CODE 7\n         STCM  R7,B'1000',0(R1)             PROCESS HEX CODE 7\n         LA    R1,1(R1)                     PROCESS HEX CODE 7\n         LA    R5,2(R0)                     PROCESS HEX CODE 7\nGDES265  XR    R6,R6                        PROCESS HEX CODE 7\n         SLDL  R6,4(R0)                     PROCESS HEX CODE 7\n         STCM  R6,B'0001',0(R11)            PROCESS HEX CODE 7\n         LA    R11,1(R11)                   PROCESS HEX CODE 7\n         BCT   R5,GDES265                   PROCESS HEX CODE 7\n         LA    R10,1(R10)                   PROCESS HEX CODE 7\n         BCT   R8,GDES264                   PROCESS HEX CODE 7\n         ICM   R8,B'0011',SE2LEN5           PROCESS HEX CODE 7\n         BCTR  R8,R0                        PROCESS HEX CODE 7\n         EX    R8,GDES27EX                  PROCESS HEX CODE 7\n         MVC   SE2PRINT,SE2LN4              PROCESS HEX CODE 7\n         TR    SE2PRINT,SE2WORK2            PROCESS HEX CODE 7\n         MVC   SE2PRINT(20),SE2WORK5        PROCESS HEX CODE 7\n         MVC   SE2WORK5,=CL20' '            PROCESS HEX CODE 7\n         MVC   SE2PRINT+101(32),SE2WORK4    PROCESS HEX CODE 7\n         TR    SE2PRINT+101(32),SE2TRAN1    PROCESS HEX CODE 7\n*        MVI   SE2PRINT+096,C'*'            PROCESS HEX CODE 7\n*        MVI   SE2PRINT+129,C'*'            PROCESS HEX CODE 7\n         GDEGOSUB GDES700                   PROCESS HEX CODE 7\n         LH    R11,SE2LEN2                  PROCESS HEX CODE 7\n         SR    R9,R11                       PROCESS HEX CODE 7\n         AH    R11,SE2LEN3                  PROCESS HEX CODE 7\n         STH   R11,SE2LEN3                  PROCESS HEX CODE 7\n         B     GDES261                      PROCESS HEX CODE 7\nGDES268  LH    R11,SE2LEN3                  PROCESS HEX CODE 7\n         XC    SE2LEN3,SE2LEN3              PROCESS HEX CODE 7\n         AH    R11,SE2LEN1                  PROCESS HEX CODE 7\n         STH   R11,SE2LEN1                  PROCESS HEX CODE 7\n         XR    R9,R9                        PROCESS HEX CODE 7\n         ICM   R9,B'0011',R2DATALN          PROCESS HEX CODE 7\n         SR    R9,R11                       PROCESS HEX CODE 7\n         BNH   GDES200X                     PROCESS HEX CODE 7\n         CLM   R9,B'0011',SE2LEN4           PROCESS HEX CODE 7\n         BNH   GDES261                      PROCESS HEX CODE 7\n         XR    R9,R9                        PROCESS HEX CODE 7\n         ICM   R9,B'0011',SE2LEN4           PROCESS HEX CODE 7\n         B     GDES261                      PROCESS HEX CODE 7\n         EJECT\n***********************************************************************\n*  PROCESS FUNCTION 8.                                                *\n***********************************************************************\nGDES270  STM   R14,R12,SE2SAVE\n         LA    R6,SE2TIME\n         XC    SE2TIME,SE2TIME\n         TIME  DEC,(R6),LINKAGE=SYSTEM,DATETYPE=YYYYMMDD\n         OI    SE2TIME+3,X'0F'                   PROCESS HEX CODE 8\n         MVI   SE2TIME+12,X'0F'                  PROCESS HEX CODE 8\n         UNPK  SE2SEC(7),SE2TIME(4)              PROCESS HEX CODE 8\n         MVC   SE2DATE+06(2),SE2SEC+00           PROCESS HEX CODE 8\n         MVC   SE2DATE+08(2),SE2SEC+02           PROCESS HEX CODE 8\n         MVC   SE2DATE+10(2),SE2SEC+04           PROCESS HEX CODE 8\n         UNPK  SE2SEC(7),SE2TIME+9(4)            PROCESS HEX CODE 8\n         MVC   SE2DATE+00(2),SE2SEC+00           PROCESS HEX CODE 8\n         MVC   SE2DATE+02(2),SE2SEC+02           PROCESS HEX CODE 8\n         MVC   SE2DATE+04(2),SE2SEC+04           PROCESS HEX CODE 8\n         MVC   SE2PRINT,SE2LN6                   PROCESS HEX CODE 8\n         MVC   SE2PL1A,SE2DATE                    PROCESS HEX CODE 8\n         MVC   SE2PL2A,SE2DATE+2                  PROCESS HEX CODE 8\n         MVC   SE2PL3A,SE2DATE+4                  PROCESS HEX CODE 8\n         MVC   SE2PL4A,SE2DATE+6                  PROCESS HEX CODE 8\n         MVC   SE2PL5A,SE2DATE+8                  PROCESS HEX CODE 8\n         MVC   SE2PL6A,SE2DATE+10                 PROCESS HEX CODE 8\n         MVI   SE2PL1AX,C'/'       PROCESS HEX CODE 8\n         MVI   SE2PL2AX,C'/'       PROCESS HEX CODE 8\n         MVI   SE2PL4AY,C':'       PROCESS HEX CODE 8\n         MVI   SE2PL5AY,C':'       PROCESS HEX CODE 8\n         MVC   SE2PL1B,SE2DATE                    PROCESS HEX CODE 8\n         MVC   SE2PL2B,SE2DATE+2                  PROCESS HEX CODE 8\n         MVC   SE2PL3B,SE2DATE+4                  PROCESS HEX CODE 8\n         MVC   SE2PL4B,SE2DATE+6                  PROCESS HEX CODE 8\n         MVC   SE2PL5B,SE2DATE+8                  PROCESS HEX CODE 8\n         MVC   SE2PL6B,SE2DATE+10                 PROCESS HEX CODE 8\n         MVI   SE2PL1BX,C'/'       PROCESS HEX CODE 8\n         MVI   SE2PL2BX,C'/'       PROCESS HEX CODE 8\n         MVI   SE2PL4BY,C':'       PROCESS HEX CODE 8\n         MVI   SE2PL5BY,C':'       PROCESS HEX CODE 8\n         LM    R14,R12,SE2SAVE                   PROCESS HEX CODE 8\n         B     GDES250                           PROCESS HEX CODE 8\n         EJECT\nGDES280  L     R3,=A(SE9TRACE)          PUT TRACE PRINT LINE\n         B     GDES210\n***********************************************************************\n*  EXIT FROM PRINTING                                                 *\n***********************************************************************\nGDES200X GDESUBEN\n         SPACE 3\nGDES20EX MVC   SE2PRINT+30(*-*),0(R10)\nGDES21EX MVC   SE2PRINT(*-*),SE2LN3\nGDES22EX TR    SE2PRINT+30(*-*),0(R11)\nGDES23EX TR    SE2PRINT+30(*-*),SE2TRAN1\nGDES24EX TR    SE2PRINT+30(*-*),SE2TRAN2\nGDES25EX TR    SE2PRINT+30(*-*),SE2TRAN3\nGDES26EX TRT   0(*-*,R10),0(R8) SE2TRAN5\nGDES27EX TR    SE2WORK2+1(*-*),SE2TRAN4\nSE2SAVE  DC    15F'-1'\nSE2TIME  DC   2D'-1'\nSE2SEC   DC    CL7' '\nSE2RET   DC    CL2'  '\nSE2DATE  DC    CL12'  '\nSE2HX4ON DC    CL1'N'\nSE2PRINT DC    CL133' '\nSE2LN1   DC    CL133' '\nSE2LN2   DC    CL133'0  NULL LENGTH OF DATA REQUESTED TO BE PRINTED'\nSE2LN3CT DC    PL4'0'\nSE2LEN1  DC    H'0'\nSE2LEN2  DC    H'0'\nSE2LEN3  DC    H'0'\nSE2LEN4  DC    H'0'\nSE2LEN5  DC    H'0'\nSE2LN3   DC    CL22' ',XL8'4020202020202020'\nSE2PL1B  EQU   SE2LN3+1,2\nSE2PL1BX EQU   SE2LN3+3,1\nSE2PL2B  EQU   SE2LN3+4,2\nSE2PL2BX EQU   SE2LN3+6,1\nSE2PL3B  EQU   SE2LN3+7,2\nSE2PL4B  EQU   SE2LN3+10,2\nSE2PL4BY EQU   SE2LN3+12,1\nSE2PL5B  EQU   SE2LN3+13,2\nSE2PL5BY EQU   SE2LN3+15,1\nSE2PL6B  EQU   SE2LN3+16,2\n         DC    CL28'1...5...10...15...20...25...'\n         DC    CL50'30...35...40...45...50...55...60...65...70...75...'\n         DC    CL22'80...85...90...95...99',CL3' '\nSE2LN4   DC    XL28'00'\n         DC    XL18'010203040506070800090A0B0C0D0E0F1000'\n         DC    XL19'111213141516171800191A1B1C1D1E1F200000'\n         DC    XL18'212223242526272800292A2B2C2D2E2F3000'\n         DC    XL18'313233343536373800393A3B3C3D3E3F4000'\n         DC    XL32'00'\nSE2LN5   DC    CL19' ',CL1'+',XL8'4020202020202020',CL2'  '\nSE2LN6   DC    CL133'0   XX/XX/XX XX:XX:XX      SYSTEM TIME'\nSE2TRAN1 DC    CL16'................' 1\n         DC    CL16'................' 2\n         DC    CL16'................' 3\n         DC    CL16'................' 4\n         DC    CL16' .........[.<(+]' 5\n         DC    CL16'&&.........!$*);^' 6\n         DC    CL16'-/........\u00aa,%_>?' 7\n         DC    CL16'..........:#@''=\"' 8\n         DC    CL16'...........{....' 9\n         DC    CL16'...........}....' 10\n         DC    CL16'................' 11\n         DC    CL16'................' 12\n         DC    CL16'.ABCDEFGHI......' 13\n         DC    CL16'.JKLMNOPQR......' 14\n         DC    CL16'..STUVWXYZ......' 15\n         DC    CL16'0123456789......' 16\nSE2TRAN2 DC  16C'0',16C'1',16C'2',16C'3',16C'4',16C'5',16C'6',16C'7'\n         DC  16C'8',16C'9',16C'A',16C'B',16C'C',16C'D',16C'E',16C'F'\nSE2TRAN3 DC  16C'0123456789ABCDEF'\nSE2TRAN4 DC  C'0123456789ABCDEF'\n*                  0 1 2 3 4 5 6 7 8 9 A B C D E F\nSE2WORK1 DC  65XL1'40'\nSE2WORK2 DC  XL65'00'\nSE2WORK3 DC    CL20' ',CL1'+',XL6'402020202120',CL1' '\nSE2PL1A  EQU   SE2WORK3+1,2\nSE2PL1AX EQU   SE2WORK3+3,1\nSE2PL2A  EQU   SE2WORK3+4,2\nSE2PL2AX EQU   SE2WORK3+6,1\nSE2PL3A  EQU   SE2WORK3+7,2\nSE2PL4A  EQU   SE2WORK3+10,2\nSE2PL4AY EQU   SE2WORK3+12,1\nSE2PL5A  EQU   SE2WORK3+13,2\nSE2PL5AY EQU   SE2WORK3+15,1\nSE2PL6A  EQU   SE2WORK3+16,2\nSE2WORK4 DC  CL32' '\nSE2WORK5 DC  CL20' '\nSE2WK3CT DC  PL3'0'\n***********************************************************************\n*  GDES300 -  CLOSE FILE AND FREE STORAGE                             *\n*  INPUT REGS                                                         *\n* OUTPUT CLOSED FILE                                                  *\n*        FREED STORAGE                                                *\n***********************************************************************\nGDES300  GDESUBST\n         LA    R9,R4DCB\n         CLOSE ((R9),)\n         LR    R9,R4\n         L     R10,R4NEXT\n         L     R4,=A(GP1FIRST)\nGDES310  DS    0H\n         C     R9,R4NEXT\n         BE    GDES320\n         L     R4,R4NEXT\n         B     GDES310\nGDES320  DS    0H\n         ST    R10,R4NEXT\n         SR    R4,R4\n         L     R0,SE3GETLG\n         LR    R1,R9\n         FREEMAIN R,LV=(0),A=(1)\nGDES300X GDESUBEN\n         DS   0F\nSE3GETLG DC    AL4(R4LEN)\nSE3GETMN DS    F\nSE3CXFUN DC    CL2'00'\nSE3CXRET DC    CL2'00'\n         EJECT\n***********************************************************************\n* GDES400 - DO NOTHING FUNCTION IS ACCOMPLISHED                       *\n***********************************************************************\nGDES400  GDESUBST\nGDES400X GDESUBEN\n         EJECT\n***********************************************************************\n* GDES500 - DOES OPEN THEN OUTPUT                                     *\n***********************************************************************\nGDES500  GDESUBST\n         GDEGOSUB GDES100\n         GDEGOSUB GDEP200\n         L     R4,=A(GP1R4SAV)\n         L     R4,0(R4)\n         GDEGOSUB GDES200\nGDES500X GDESUBEN\n         EJECT\n***********************************************************************\n* GDES600 - ABENDS INVALID FUNCTION / UNKNOWN PROGRAM ERROR           *\n***********************************************************************\nGDES600  GDESUBST\n         MVC   R2RETCOD,=CL2'16'\nGDES600X GDESUBEN\n         EJECT\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n* GDES700 DOES OUTPUT TO DDNAME                                       *\n*    INPUT: SE2PRINT                                                  *\n*    OUTPUT: PRINT LINE AND HEADINGS TO DDNAME IF LINE COUNT DICATES. *\n*    CALLES: GDE001CC                                                 *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\nGDES700  GDESUBST\n         L     R11,=A(SE2PRINT)         MOVE PRINT LINE\n         MVC   SE7PRINT,0(R11)          MOVE PRINT LINE\n         CLI   R2PAGBRK,C'2'            DO BREAKS?\n         BE    GDES750                  NO-BRANCH\n         GDEGOSUB GDES780\n         CP    R4LNCNT,R2LN@PAG\n         BNH   GDES760\n         CLI   R2NEWPAG,C'3'            SUBHEADING NEEDED THIS CALL\n         BNE   GDES701\n         MVI   R2NEWPAG,C'1'            HEADING WILL OCCUR - DON'T DO\nGDES701  CLI   R2PAGBRK,C'3'            NON - STANDARD HEADINGS?\n         BE    GDES745                  YES-BRANCH\n         LA    R6,SE7DATE\n         XC    SE7DATE,SE7DATE\n         TIME  DEC,(R6),LINKAGE=SYSTEM,DATETYPE=YYYYMMDD\n         OI    SE7DATE+3,X'0F'\n         MVI   SE7DATE+12,X'0F'\n         UNPK  SE7SEC(7),SE7DATE(4)\n         MVC   SE7DATA+06(2),SE7SEC+00\n         MVC   SE7DATA+08(2),SE7SEC+02\n         MVC   SE7DATA+10(2),SE7SEC+04\n         UNPK  SE7SEC(7),SE7DATE+9(4)\n         MVC   SE7DATA+00(2),SE7SEC+00\n         MVC   SE7DATA+02(2),SE7SEC+02\n         MVC   SE7DATA+04(2),SE7SEC+04\n         MVC   SE7PRINT,SE7HD1          PUT HEAD 1\n         MVC   SE7PRINT+08(10),=CL10'RUN DATE: '\n         MVC   SE7PRINT+18(02),SE7DATA+2\n         MVC   SE7PRINT+21(02),SE7DATA+4\n         MVC   SE7PRINT+24(02),SE7DATA+0\n         MVI   SE7PRINT+20,C'/'\n         MVI   SE7PRINT+23,C'/'\n         MVC   SE7PRINT+116(10),R2REPTID\n         GDEGOSUB GDES780\n         GDEGOSUB GDES790               PUT HEAD 1\n         MVC   SE7PRINT,SE7HD2          PUT HEAD 2\n         MVC   SE7PRINT+8(10),=CL10'RUN TIME: '\n         MVC   SE7PRINT+18(02),SE7DATA+6\n         MVC   SE7PRINT+21(02),SE7DATA+8\n         MVC   SE7PRINT+24(02),SE7DATA+10\n         MVI   SE7PRINT+20,C':'\n         MVI   SE7PRINT+23,C':'\n         AP    R4PGCNT,=PL1'1'          PUT HEAD 2\n         ED    SE7PRINT+122(7),R4PGCNT  PUT HEAD 2\nGDES702  L     R5,=A(GP1R1SAV)\n         L     R5,0(R5)\n         LA    R5,4(R5)\n         L     R6,0(R5)\n         LTR   R6,R6\n         BL    GDES705\n         LA    R5,4(R5)\n         L     R6,0(R5)\n         CLI   R2PAGBRK,C'3'            NON - STANDARD HEADINGS?\n         BE    GDES703                  YES-BRANCH\n         CLI   R2NEWPAG,C'3'            SUBHEADING BREAK?\n         BE    GDES710                  YES-BRANCH\n         MVC   SE7PRINT+26(90),26(R6)\n         B     GDES705\nGDES703  MVC   SE7PRINT+1(132),1(R6)\nGDES705  GDEGOSUB GDES780\n         GDEGOSUB GDES790               PUT HEAD 2\nGDES710  LTR   R6,R6\n         BL    GDES730\n         LA    R5,4(R5)\n         L     R6,0(R5)\n         MVC   SE7PRINT,0(R6)\n         GDEGOSUB GDES780\n         GDEGOSUB GDES790               PUT NEXT HEADING\n         B     GDES710\nGDES730  CLI   R2NEWPAG,C'3'            DO SUBHEADING BREAK?\n         BNE   GDES735                  NO-BRANCH\n         MVI   R2NEWPAG,C'1'            DONE SUBHEADING\nGDES735  CLI   R4HEX,C'4'\n         BNE   GDES740\n         L     R11,=A(SE2HX4ON)\n         CLI   0(R11),C'Y'\n         BE    GDES740\n         MVC   SE7PRINT,SE7LN1\n         GDEGOSUB GDES780\n         GDEGOSUB GDES790\nGDES740  L     R11,=A(SE2PRINT)         MOVE PRINT LINE\n         MVC   SE7PRINT,0(R11)          MOVE PRINT LINE\n         GDEGOSUB GDES780\n         GDEGOSUB GDES790               PRINT LINE\n         B     GDES700X\nGDES745  MVI   SE7PRINT+1,C' '          PUT HEAD 3\n         MVC   SE7PRINT+2(L'SE7PRINT-2),SE7PRINT+1\n         MVI   SE7PRINT,C'1'            PUT HEAD 3\n         B     GDES702\nGDES750  CLI   SE7PRINT,C'1'\n         BE    GDES760\n         CLI   SE7PRINT,C' '\n         BE    GDES760\n         CLI   SE7PRINT,C'-'\n         BE    GDES760\n         CLI   SE7PRINT,C'0'\n         BE    GDES760\n         CLI   SE7PRINT,C'+'\n         BE    GDES760\n         MVI   SE7PRINT,C' '\n         B     GDES760\nGDES760  CLI   R2NEWPAG,C'3'            DO SUBHEADING BREAK?\n         BNE   GDES765                  NO-BRANCH\n         MVI   SE7PRINT+1,C' '          PUT HEAD 3\n         MVC   SE7PRINT+2(L'SE7PRINT-2),SE7PRINT+1\n         B     GDES702                  BRANCH - DO IT\nGDES765  GDEGOSUB GDES790               PRINT LINE\n         B     GDES700X\nGDES700X GDESUBEN\n         SPACE 3\nGDES780  GDESUBST\n         CLI   SE7PRINT,C'1'            DO LINE CNT\n         BNE   GDES781                  DO LINE CNT\n         ZAP   R4LNCNT,=P'0'            DO LINE CNT\n         B     GDES786\nGDES781  CLI   SE7PRINT,C' '            DO LINE CNT\n         BNE   GDES782                  DO LINE CNT\n         AP    R4LNCNT,=P'1'            DO LINE CNT\n         B     GDES786\nGDES782  CLI   SE7PRINT,C'-'            DO LINE CNT\n         BNE   GDES783                  DO LINE CNT\n         AP    R4LNCNT,=P'3'            DO LINE CNT\n         B     GDES786\nGDES783  CLI   SE7PRINT,C'0'            DO LINE CNT\n         BNE   GDES784                  DO LINE CNT\n         AP    R4LNCNT,=P'2'            DO LINE CNT\n         B     GDES786\nGDES784  CLI   SE7PRINT,C'+'            DO LINE CNT\n         BNE   GDES785                  DO LINE CNT\n         AP    R4LNCNT,=P'0'            DO LINE CNT\n         B     GDES786\nGDES785  MVI   SE7PRINT,C' '            SET TO A SPACE AND COUNT\n         AP    R4LNCNT,=P'1'            DO LINE CNT\nGDES786  GDESUBEN\n         SPACE 3\nGDES790  GDESUBST\n         LA    R1,R4DCB                 PUT PRINT LINE\n         PUT   (R1),SE7PRINT            PUT PRINT LINE\n         GDESUBEN\n         SPACE 3\nSE7DATE  DC   2D'0'\nSE7SEC   DS    PL7'0'\nSE7DATA  DS    CL12' '\nSE7PRINT DS    CL133\nSE7LN1   DC    CL30'0'\n         DC    CL28'1...5...10...15...20...25...'\n         DC    CL50'30...35...40...45...50...55...60...65...70...75...'\n         DC    CL22'80...85...90...95...99',CL3' '\nSE7HD1   DC    CL52'1',CL81'INFORMATION MANAGEMENT SERVICES'\nSE7HD2   DC    CL116'0',CL6'PAGE :',XL7'4020206B202120',CL4' '\nSE7HD3   DC    CL133'1'\n         EJECT\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\n* GDES900 PLACES LAST CALL INFORMATION IN STORAGE IN CASE ABEND       *\n*        REQUESTED                                                    *\n*    INPUT:                                                           *\n*    OUTPUT: ABEND MESSAGE TO PRINT FILE                              *\n*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*#*\nGDES900  GDESUBST\n         MVC   SE9FUN+7(1),R2FUNCTN\n         MVC   SE9HEX+7(1),R2HEX\n         MVC   SE9DDN+7(8),R2DDNAME\n         XR    R6,R6\n         ICM   R6,B'0011',R2DATALN\n         CVD   R6,SE9DOUB\n         ED    SE9BLK+10(6),SE9DOUB+5\n         XR    R6,R6\n         ICM   R6,B'0011',R2SUBLEN\n         CVD   R6,SE9DOUB\n         ED    SE9LRC+8(6),SE9DOUB+5\n         MVC   SE9ID+6(10),R2REPTID\n         ED    SE9LP+6(4),R2LN@PAG\n         MVC   SE9NP+5(1),R2NEWPAG\n         MVC   SE9PB+5(1),R2PAGBRK\n         MVC   SE9RP+5(1),R2RESPAG\n         GDESUBEN\nSE9DOUB  DC    D'-1'\nSE9DATAR DC    CL133' '\n         ORG   *-133\nSE9TRACE DC CL12' GDEPRINT - '\nSE9FUN   DC CL08' FUN = X'\nSE9HEX   DC CL08' HEX = X'\nSE9DDN   DC CL15' DDN = XXXXXXXX'\nSE9BLK   DC CL10' BLKSIZE =',XL6'402120202020'\nSE9LRC   DC CL08' LRECL =',XL6'402120202020'\nSE9ID    DC CL16' ID = XXXXXXXXXX'\nSE9LP    DC CL06' L/P =',XL4'40212020'\nSE9NP    DC CL06' N = X'\nSE9PB    DC CL06' P = X'\nSE9RP    DC CL06' R = X'\n         ORG   SE9DATAR+133\n         EJECT\n***********************************************************************\n*  GDESA00 - SET UP TO CAUSE PAGE BREAK IF REQUIRED.                  *\n*  INPUT - R2 THROUGH R4                                              *\n*  OUTPUT                                                             *\n*     SE2PRINT                                                        *\n***********************************************************************\nGDESA00  GDESUBST\n         ZAP   SEAWK1CT,R4LNCNT\n         AP    SEAWK1CT,R3DATA(2)\n         CP    SEAWK1CT,R2LN@PAG\n         BNH   GDESA00X\n         ZAP   R4LNCNT,SEAWK1CT\n         ZAP   R3DATA(2),=PL1'0'\nGDESA00X GDESUBEN\nSEAWK1CT DC  PL3'0'\nSE2TRAN5 DC  XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 1\n         DC  XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 2\n         DC  XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 3\n         DC  XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 4\n         DC  XL16'00FFFFFFFFFFFFFFFFFF0000000000FF' 5\n         DC  XL16'00FFFFFFFFFFFFFFFFFF000000000000' 6\n         DC  XL16'0000FFFFFFFFFFFFFFFFFF0000000000' 7\n         DC  XL16'FFFFFFFFFFFFFFFFFFFF000000000000' 8\n         DC  XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 9\n         DC  XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 10\n         DC  XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 11\n         DC  XL16'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF' 12\n         DC  XL16'FF000000000000000000FFFFFFFFFFFF' 13\n         DC  XL16'FF000000000000000000FFFFFFFFFFFF' 14\n         DC  XL16'FFFF0000000000000000FFFFFFFFFFFF' 15\n         DC  XL16'00000000000000000000FFFFFFFFFFFF' 16\n         END\n//*********************************************************************\n//*                                                                   *\n//*  STEP030   PGM=IEWL                                               *\n//*                                                                   *\n//*********************************************************************\n//STEP030 EXEC PGM=IEWL,\n//             PARM='MAP,XREF,AMODE(24),RMODE(24)',\n//             COND=(5,LT,STEP020)\n//SYSLIB   DD  DISP=SHR,\n//             DSN=SYS1.CSSLIB\n//SYSLMOD  DD  DSN=&&LOAD(GDEBWOBT),\n//             SPACE=(CYL,(1,1,5)),\n//             DISP=(NEW,PASS,DELETE),\n//             UNIT=3390,\n//             RECFM=U,\n//             LRECL=0,\n//             BLKSIZE=27998\n//SYSUT1   DD  UNIT=SYSDA,\n//             DCB=BLKSIZE=1024,\n//             SPACE=(1024,(200,20))\n//SYSLIN   DD  DSN=&&OBJ(GDEBWOBT),\n//             DISP=OLD\n//         DD  DSN=&&OBJ(GDEPRINT),\n//             DISP=OLD\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  *\n ORDER GDEBWOBT,GDEPRINT\n ENTRY GDEBWOBT\n NAME GDEBWOBT(R)\n//*********************************************************************\n//*                                                                   *\n//*  STEP030   PGM=IEWL                                               *\n//*                                                                   *\n//*********************************************************************\n//STEP030 EXEC PGM=IEWL,\n//             PARM='MAP,XREF,AMODE(24),RMODE(24)',\n//             COND=(5,LT,STEP020)\n//SYSLIB   DD  DISP=SHR,\n//             DSN=SYS1.CSSLIB\n//SYSLMOD  DD  DSN=&&LOAD(GDERLSBT),\n//             SPACE=(CYL,(1,1,5)),\n//             DISP=(NEW,PASS,DELETE),\n//             UNIT=3390,\n//             RECFM=U,\n//             LRECL=0,\n//             BLKSIZE=27998\n//SYSUT1   DD  UNIT=SYSDA,\n//             DCB=BLKSIZE=1024,\n//             SPACE=(1024,(200,20))\n//SYSLIN   DD  DSN=&&OBJ(GDERLSBT),\n//             DISP=OLD\n//         DD  DSN=&&OBJ(GDEPRINT),\n//             DISP=OLD\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  *\n ORDER GDERLSBT,GDEPRINT\n ENTRY GDERLSBT\n NAME GDERLSBT(R)\n//*********************************************************************\n//*                                                                   *\n//*  STEP040   PGM=GDEBWTBT                                           *\n//*                                                                   *\n//*********************************************************************\n//STEP040 EXEC PGM=GDEBWOBT\n//STEPLIB  DD  DSN=&&LOAD,\n//             DISP=SHR\n//SYSUDUMP DD  SYSOUT=*\n//GDEBWO01 DD  SYSOUT=*\n//*DEBWO02 DD  SYSOUT=*  OPTIONAL TRACE OF INTERNAL CALLS LOTS OF STUFF\n//GDEBWO03 DD  SYSOUT=*  OPTIONAL\n//GDEBWO04 DD  SYSOUT=*  OPTIONAL\n//GDEBWOA  DD  *\nSHOW=<DATASET>\nTEST=000\nRESET\nSHOW=<DATASET>\nTEST=011\nSET=000\nRESET\nSHOW=<DATASET>\nSET=000\n//*********************************************************************\n//*                                                                   *\n//*  STEP040   PGM=GDEBWTBT                                           *\n//*                                                                   *\n//*********************************************************************\n//STEP014 EXEC PGM=GDERLSBT\n//STEPLIB  DD  DSN=&&LOAD,\n//             DISP=SHR\n//SYSUDUMP DD  SYSOUT=*\n//GDERLS01 DD  SYSOUT=*  OPTIONAL\n//GDERLS02 DD  SYSOUT=*  OPTIONAL\n//*DERLS03 DD  SYSOUT=*  OPTIONAL TRACE OF INTERNAL CALLS LOTS OF STUFF\n//GDERLS04 DD  SYSOUT=*  OPTIONAL\n//GDERLS05 DD  SYSOUT=*  OPTIONAL\n//GDERLSA  DD  *\nSHOW=<DSNAME>\nLEVEL=<CATALOG FILTER>\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT651/FILE651.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT651", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}