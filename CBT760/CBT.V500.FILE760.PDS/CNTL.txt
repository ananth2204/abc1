./ ADD NAME=$$$INDEX 0100-07214-07214-1034-00023-00023-00000-CNTL

This dataset (sub-directory) contains JCL to invoke the programs and
REXX code I have under a BATCH TMP process.

Member   Purpose of the member
-------- --------------------------------------------------------------
$$$INDEX This member

CONDCODE IVP for testing %CONDCODE which shows prior steps cond code.
HX2PR    Convert input to two hexadecimal print lines.
HX2PR$A  Assemble and link source.
HX2PR4   Convert input to four hexadecimal print lines.
HX2PR4$A Assemble and link source.
II13288  Run FTP to get some IBM tools
IPCSIVP  Run IPCS in batch to demonstrate some features.
PDSLOAD  IEBUPDTE alternative preserves ISPF statistics.
PDSLOAD$ Link object deck.
PR2HX    Convert two print lines back to EBCDIC format.
PR2HX$A  Assemble and link source.
PR42HX   Convert four print lines back to EBCDIC format.
PR42JX$A Assemble and link source.
URLCHECK Invoke TSO and run REXX code that uses TCPIP sockets.

./ ADD NAME=CONDCODE 0100-07214-07214-1034-00071-00071-00000-CNTL
//jobname! JOB (),'CONDCODE REPORT',
//             RESTART=STEP001,           <= REQUIRED FOR TESTING
//             CLASS=a,
//             MSGCLASS=x,MSGLEVEL=(1,1),
//             REGION=18M,TIME=1230,
//             NOTIFY=&SYSUID
//*
//*            (ACCTCODE,ACCTCODE,ESTTIME,ESTLINE,ESTCARDS,FORMS,
//*            COPIES,LOG,LINECOUNTPERPAGE)
//*
/*JOBPARM SYSAFF=*            <=Which JES2 MAS Member to run on
/*JOBPARM LINES=9999
//*
//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//* Let JES2 dynamically allocate this dataset to search for PROCs.
//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//MYPROCS  JCLLIB ORDER=(&SYSUID..PROCLIB)
//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//* Emulating SYSTEM SYMBOLS.
//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//SYSSMBLS INCLUDE MEMBER=IEASYM00
//*
//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
//* ===================================================================
//* SOURCE:  DSN=&SYSUID..CNTL(CONDCODE)
//* AUTHOR:  "Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
//* PURPOSE: THIS JOB IS USED TO TEST %CONDCODE FOR THE MOST FREQUENT
//*          STEP STATUS POSSIBILITIES.
//* ===================================================================
//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//*
//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//* Instream procedure
//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//PROC001 PROC MYVAR='KEN',VAR2=10
//STEP00A EXEC PGM=IEFBR14,REGION=4M,
//             PARM='&VAR2.&MYVAR',COND=((0,LT),EVEN)
//PROCSTP EXEC PGM=IEFBR14,REGION=4M,PARM='&VAR2.&MYVAR',COND=EVEN
//        PEND
//*
//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
//* Execute steps so %CONDCODE can be a show off.
//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//STEP000 EXEC PGM=IKJEFT01
//STEP001 EXEC PGM=IKJEFT01
//SYSTSPRT DD  DUMMY
//STEP002 EXEC PGM=IEBGENER
//STEP003 EXEC PGM=IEBGENER,COND=EVEN
//STEP004 EXEC PROC=PROC001
//STEP005 EXEC PROC=PROC001,COND.PROCSTP=((0,LT,STEP004.STEP00A),EVEN)
//STEP00A EXEC PGM=S806,COND=EVEN
//IDIREPRT DD  DUMMY
//STEP006 EXEC PROC=PROC001
//STEP007 EXEC PROC=PROC001
//STEP00B EXEC PGM=S806,COND=EVEN
//IDIREPRT DD  DUMMY
//*
//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
//* Execute TSO and launch the REXX program, CONDCODE.
//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//STEP008 EXEC PGM=IKJEFT1B,PARM='',REGION=6M,COND=EVEN
//SYSPROC  DD  DISP=SHR,DSN=&SYSUID..CLIST
//SYSEXEC  DD  DISP=SHR,DSN=&SYSUID..REXX
//*        DD  DISP=SHR,DSN=&SYSUID..REXX(CONDCODE)
//OUTFILE  DD  SYSOUT=*
//SYSTSIN  DD  *
  %CONDCODE
  LOGOFF
/*
//*
//
./ ADD NAME=HX2PR    0100-07214-07214-1034-00010-00010-00000-CNTL
//SBGOLOBM JOB ,'SAM GOLOB',CLASS=B,
//    MSGCLASS=X,NOTIFY=&SYSUID
//*
//*     HEX TO PRINT PROGRAM - EXECUTION
//*
//LOAD EXEC PGM=HX2PR
//STEPLIB  DD DISP=SHR,DSN=SBGOLOB.LOAD
//SYSUT1   DD DISP=SHR,DSN=SBGOLOB.CBT474.FILE760(PDSLOAD)
//SYSUT2   DD DISP=SHR,DSN=SBGOLOB.B.DATA(PDSLOADK)
//SYSPRINT DD SYSOUT=*
./ ADD NAME=HX2PR$A  0100-07214-07214-1034-00027-00027-00000-CNTL
//USERID   JOB (ACCT),'ASSEMBLE AND LINK',
//             CLASS=B,
//             MSGCLASS=X,MSGLEVEL=(1,1),
//             REGION=18M,TIME=1230,
//             NOTIFY=&SYSUID
//*
//*            (ACCTCODE,ACCTCODE,ESTTIME,ESTLINE,ESTCARDS,FORMS,
//*            COPIES,LOG,LINECOUNTPERPAGE)
//*
/*JOBPARM SYSAFF=*            <=Which JES2 MAS Member to run on
/*JOBPARM LINES=9999
//*
//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
//* LET JES2 DYNAMICALLY ALLOCATE THIS DATASET TO SEARCH FOR PROCS.
//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//MYPROCS  JCLLIB ORDER=(&SYSUID..PROCLIB)
//*
//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
//* INVOKE THE PROCEDURE TO ASSEMBLE AND LINK THE SOURCE TO AN LMOD.
//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//STEP010  EXEC PROC=ASM2LMOD,MBRNAME=HX2PR
//LKED.LNKPARM  DD  *
  SETCODE AC(0)
  NAME    HX2PR(R)
/*
//*
//
./ ADD NAME=HX2PR4   0100-07214-07214-1034-00010-00010-00000-CNTL
//SBGOLOBM JOB ,'SAM GOLOB',CLASS=B,
//    MSGCLASS=X,NOTIFY=&SYSUID
//*
//*  HEX TO PRINT PROGRAM - EXECUTION - PRODUCE FOUR-LINE PRINT
//*
//LOAD EXEC PGM=HX2PR4
//STEPLIB  DD DISP=SHR,DSN=SBGOLOB.LOAD
//SYSUT1   DD DISP=SHR,DSN=SBGOLOB.CBT474.FILE760(PDSLOAD)
//SYSUT2   DD DISP=SHR,DSN=SBGOLOB.B.DATA(PDSLOADL)
//SYSPRINT DD SYSOUT=*
./ ADD NAME=HX2PR4$A 0100-07214-07214-1034-00027-00027-00000-CNTL
//USERID   JOB (ACCT),'ASSEMBLE AND LINK',
//             CLASS=B,
//             MSGCLASS=X,MSGLEVEL=(1,1),
//             REGION=18M,TIME=1230,
//             NOTIFY=&SYSUID
//*
//*            (ACCTCODE,ACCTCODE,ESTTIME,ESTLINE,ESTCARDS,FORMS,
//*            COPIES,LOG,LINECOUNTPERPAGE)
//*
/*JOBPARM SYSAFF=*            <=Which JES2 MAS Member to run on
/*JOBPARM LINES=9999
//*
//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
//* LET JES2 DYNAMICALLY ALLOCATE THIS DATASET TO SEARCH FOR PROCS.
//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//MYPROCS  JCLLIB ORDER=(&SYSUID..PROCLIB)
//*
//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
//* INVOKE THE PROCEDURE TO ASSEMBLE AND LINK THE SOURCE TO AN LMOD.
//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//STEP010  EXEC PROC=ASM2LMOD,MBRNAME=HX2PR4
//LKED.LNKPARM  DD  *
  SETCODE AC(0)
  NAME    HX2PR4(R)
/*
//*
//
./ ADD NAME=II13288  0100-07214-07214-1034-00050-00050-00000-CNTL
//KTOMIAKC JOB (999,CSI,KTOMIAK,60,9999,0,,1,,60),
//             'KENNETH E TOMIAK',
//             CLASS=A,
//             MSGCLASS=X,MSGLEVEL=(1,1),
//             TIME=1440,REGION=32M,
//             NOTIFY=&SYSUID
//*
/*JOBPARM SYSAFF=*
/*JOBPARM LINES=9999
//*
//* LIB: DSN=KTOMIAK.ZOS.CNTL(II13288)
//* AUTHOR: "KENNETH E TOMIAK"<CBT_Ken@KTomiak.org>
//* GUIDE:  THIS JOB WILL RETRIEVE THE IBM TERSE TOOL AND THE
//*         INDEX CI SIZER TOOL.
//*
//FTP     EXEC PGM=FTP,REGION=5000K,
//             PARM='( EXIT'
//OUTPUT   DD  SYSOUT=*
//INPUT    DD  *
ftp.software.ibm.com ;   207.25.253.40 if no DNS available.
anonymous ;
kentomiak@ktomiak.org ;
bin ;
locsite recfm=fb lrecl=1024 blksize=0 tracks pri=3 sec=3 ;
locsite volume=csi001 ;
cd s390/mvs/tools ;
get INDXCISZ.JCL.TRSD INDXCISZ.TERSED ;
cd packlib ;
locsite recfm=fb lrecl=80 blksize=0 tracks pri=3 sec=3 ;
get trsmain.bin TRSMAIN.XMI ;
quit ;
/*
//*
//RECEIVE EXEC PGM=IKJEFT01,REGION=4M,DYNAMNBR=99,COND=(0,LT)
//SYSTSPRT DD  SYSOUT=*
//SYSTSIN  DD  *
  RECEIVE INDATASET(TRSMAIN.XMI)
    DATASET(TRSMAIN.LOADLIB) VOLUME(CSI001)
/*
//*
//UNTERSE EXEC PGM=TRSMAIN,PARM=UNPACK,COND=(0,LT)
//STEPLIB  DD  DISP=SHR,DSN=&SYSUID..TRSMAIN.LOADLIB
//SYSPRINT DD  SYSOUT=*
//INFILE   DD  DISP=SHR,DSN=&SYSUID..INDXCISZ.TERSED
//OUTFILE  DD  DISP=(NEW,CATLG,DELETE),DSN=&SYSUID..INDXCISZ.UNTERSED,
//             UNIT=SYSALLDA,
//             SPACE=(TRK,(10,10,0),RLSE)
//             DCB=(DSORG=PS,RECFM=FB.BLKSIZE=0,LRECL=80)
//*
//
./ ADD NAME=IPCSIVP  0100-07214-07214-1034-00072-00072-00000-CNTL
//*
/*JOBPARM SYSAFF=*
/*JOBPARM LINES=9999
//*
//        SET DUMPDSN=SYS1.DUMP01           <== POINT TO YOUR DUMP
//*
//*MYPROCS JCLLIB ORDER=(&SYSUID..ZOS$CNTL.CNTL)
//*
//* LIB:    DSN=ZOS$CNTL.CNTL(BLSCDDIR)
//* AUTHOR: "KENNETH E TOMIAK"<CBT_KEN@KTOMIAK.ORG>
//* GUIDE:  THIS JOB WILL ALLOCATE AN IPCS DUMP DIRECTORY,
//*         INVOKE IPCS TO PRODUCE A SIMPLE REPORT, AND RUN A
//*         SAMPLE REXX IVP OF IPCS COMMANDS.
//*
//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
//* ALLOCATE AN IPCS DUMP DIRECTORY.
//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//ALLOC   EXEC PGM=IDCAMS
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
         DEFINE +
           CLUSTER( +
             NAME('KTOMIAK.DDIR') +
             INDEXED +
             REUSE +
             VOLUME(VOLSER)            /* <== YOUR VOLSER */ +
             SHAREOPTIONS(1,3) +
           ) +
           DATA( +
             NAME('KTOMIAK.DDIR.D') +
             BUFFERSPACE(1024000) +
             KEYS(128,0) +
             RECORDS(15000,15000) +
             RECORDSIZE(2560 3072) +
           ) +
           INDEX( +
             NAME('KTOMIAK.DDIR.I') +
             CONTROLINTERVALSIZE(4096) +
             RECORDS(150,150) +
           )
/*
//*
//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
//* PRODUCE A STANDARD PROBLEM SCREENING REPORT REGARDING THE DUMP.
//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//CBSVA   EXEC PGM=IKJEFT1B,REGION=5M,
//             PARM='%BLSCBSVA &DUMPDSN'
//SYSPROC  DD  DISP=SHR,DSN=SYS1.SBLSCLI0
//SYSTSPRT DD  SYSOUT=*,
//             DCB=(RECFM=VB,LRECL=124,BLKSIZE=4096)
//IPCSDDIR DD  DISP=SHR,DSN=&SYSUID..DDIR
//IPCSDUMP DD  DISP=SHR,DSN=&DUMPDSN
//IPCSTOC  DD  SYSOUT=*
//IPCSPRNT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//*
//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
//* RUN A SAMPLE IPCS IVP WITH REXX.
//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//IPCSIVP EXEC PGM=IKJEFT1B,REGION=5M,
//             PARM='%ISPFSTRT %IPCSIVP'
//SYSEXEC  DD  DISP=SHR,DSN=&SYSUID..ZOS$REXX
//SYSPROC  DD  DISP=SHR,DSN=SYS1.SBLSCLI0
//SYSTSPRT DD  SYSOUT=*,
//             DCB=(RECFM=VB,LRECL=124,BLKSIZE=4096)
//IPCSDDIR DD  DISP=SHR,DSN=&SYSUID..DDIR
//IPCSDUMP DD  DISP=SHR,DSN=&DUMPDSN
//IPCSTOC  DD  SYSOUT=*
//IPCSPRNT DD  SYSOUT=*
//SYSTSIN  DD  DUMMY
//*
//
./ ADD NAME=PDSLOAD  0100-07214-07214-1034-00013-00013-00000-CNTL
//SBGOLOBL JOB (ACCT#),PDSLOAD,
// NOTIFY=&SYSUID,
// CLASS=B,MSGCLASS=X,COND=(1,LT)
//* ---------------------------------------- *//
//*     SAMPLE PDSLOAD PROGRAM EXECUTION     *//
//* ---------------------------------------- *//
//LOAD EXEC PGM=PDSLOAD               /* FROM OUR OBJECT DECK)
//STEPLIB  DD DISP=SHR,DSN=SBGOLOB.LOAD       (from the LINK job)
//SYSUT1   DD DISP=SHR,DSN=SBGOLOB.CBT474.FILE760(SHOWMACS)
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD DSN=SBGOLOB.SHOW715A.MACLIB,DISP=(NEW,CATLG,DELETE),
//         UNIT=SYSALLDA,VOL=SER=DATA02,SPACE=(TRK,(30,30,44),RLSE),
//         DCB=(RECFM=FB,LRECL=80,BLKSIZE=27920)
./ ADD NAME=PDSLOAD$ 0100-07214-07214-1034-00028-00028-00000-CNTL
//USERID   JOB (ACCT),'OBJDECK TO LMOD',
//             CLASS=B,
//             MSGCLASS=X,MSGLEVEL=(1,1),
//             REGION=18M,TIME=1230,
//             NOTIFY=&SYSUID
//*
//*            (ACCTCODE,ACCTCODE,ESTTIME,ESTLINE,ESTCARDS,FORMS,
//*            COPIES,LOG,LINECOUNTPERPAGE)
//*
/*JOBPARM SYSAFF=*            <=Which JES2 MAS Member to run on
/*JOBPARM LINES=9999
//*
//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
//* LET JES2 DYNAMICALLY ALLOCATE THIS DATASET TO SEARCH FOR PROCS.
//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//MYPROCS  JCLLIB ORDER=(&SYSUID..PROCLIB)
//*
//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
//* INVOKE THE LINKAGE EDITOR TO LINK THE OBJECT DECK INTO AN LMOD.
//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//STEP010  EXEC PROC=OBJ2LMOD,MBRNAME=PDSLOAD
//LKED.LNKPARM  DD  *
  SETCODE AC(0)
  ENTRY   PDSLOAD
  NAME    PDSLOAD(R)
/*
//*
//
./ ADD NAME=PR2HX    0100-07214-07214-1034-00010-00010-00000-CNTL
//SBGOLOBM JOB ,'SAM GOLOB',CLASS=B,
//    MSGCLASS=X,NOTIFY=&SYSUID
//*
//*     PRINT TO HEX PROGRAM - EXECUTION
//*
//LOAD EXEC PGM=PR2HX
//STEPLIB  DD DISP=SHR,DSN=SBGOLOB.LOAD
//SYSUT1   DD DISP=SHR,DSN=SBGOLOB.B.DATA(PDSLOADK)
//SYSUT2   DD DISP=SHR,DSN=SBGOLOB.B.DATA(PDSLOADQ)
//SYSPRINT DD SYSOUT=*
./ ADD NAME=PR2HX$A  0100-07214-07214-1034-00027-00027-00000-CNTL
//USERID   JOB (ACCT),'ASSEMBLE AND LINK',
//             CLASS=B,
//             MSGCLASS=X,MSGLEVEL=(1,1),
//             REGION=18M,TIME=1230,
//             NOTIFY=&SYSUID
//*
//*            (ACCTCODE,ACCTCODE,ESTTIME,ESTLINE,ESTCARDS,FORMS,
//*            COPIES,LOG,LINECOUNTPERPAGE)
//*
/*JOBPARM SYSAFF=*            <=Which JES2 MAS Member to run on
/*JOBPARM LINES=9999
//*
//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
//* LET JES2 DYNAMICALLY ALLOCATE THIS DATASET TO SEARCH FOR PROCS.
//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//MYPROCS  JCLLIB ORDER=(&SYSUID..PROCLIB)
//*
//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
//* INVOKE THE PROCEDURE TO ASSEMBLE AND LINK THE SOURCE TO AN LMOD.
//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//STEP010  EXEC PROC=ASM2LMOD,MBRNAME=PR2HX
//LKED.LNKPARM  DD  *
  SETCODE AC(0)
  NAME    PR2HX(R)
/*
//*
//
./ ADD NAME=PR42HX   0100-07214-07214-1034-00010-00010-00000-CNTL
//SBGOLOBM JOB ,'SAM GOLOB',CLASS=B,
//    MSGCLASS=X,NOTIFY=&SYSUID
//*
//*     PRINT TO HEX PROGRAM - EXECUTION - FOUR-LINE PRINT
//*
//LOAD EXEC PGM=PR42HX
//STEPLIB  DD DISP=SHR,DSN=SBGOLOB.LOAD
//SYSUT1   DD DISP=SHR,DSN=SBGOLOB.B.DATA(PDSLOADL)
//SYSUT2   DD DISP=SHR,DSN=SBGOLOB.B.DATA(PDSLOADR)
//SYSPRINT DD SYSOUT=*
./ ADD NAME=PR42HX$A 0100-07214-07214-1034-00027-00027-00000-CNTL
//USERID   JOB (ACCT),'ASSEMBLE AND LINK',
//             CLASS=B,
//             MSGCLASS=X,MSGLEVEL=(1,1),
//             REGION=18M,TIME=1230,
//             NOTIFY=&SYSUID
//*
//*            (ACCTCODE,ACCTCODE,ESTTIME,ESTLINE,ESTCARDS,FORMS,
//*            COPIES,LOG,LINECOUNTPERPAGE)
//*
/*JOBPARM SYSAFF=*            <=Which JES2 MAS Member to run on
/*JOBPARM LINES=9999
//*
//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
//* LET JES2 DYNAMICALLY ALLOCATE THIS DATASET TO SEARCH FOR PROCS.
//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//MYPROCS  JCLLIB ORDER=(&SYSUID..PROCLIB)
//*
//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
//* INVOKE THE PROCEDURE TO ASSEMBLE AND LINK THE SOURCE TO AN LMOD.
//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
//STEP010  EXEC PROC=ASM2LMOD,MBRNAME=PR42HX
//LKED.LNKPARM  DD  *
  SETCODE AC(0)
  NAME    PR42HX(R)
/*
//*
//
./ ADD NAME=URLCHECK 0100-07214-07214-1034-00017-00017-00000-CNTL
//*
//* LIB: DSN=&SYSUID..CNTL(URLCHECK)
//* GDE: KENNETH E. TOMIAK
//* DOC: THIS JOB CONNECTS TO A WEB SERVER AND GETS THE
//*      LAST-MODIFIED DATE OF THE FILE.
//*
//STEP001 EXEC PGM=IKJEFT1B,PARM='%URLCHECK URLS HTML',
//             REGION=8M,DYNAMNBR=75,TIME=1200
//SYSTSPRT DD  SYSOUT=*
//SYSPROC  DD  DISP=SHR,DSN=&SYSUID..CLIST
//SYSEXEC  DD  DISP=SHR,DSN=&SYSUID..REXX
//SYSTSIN  DD  DUMMY
//URLS     DD  DISP=OLD,DSN=&SYSUID.DATA(URLS)
//HTML     DD  SYSOUT=*
//*
//*SYSTCPD  DD  DISP=SHR,DSN=SYS1.TCPPARMS(TCPDATAP)   WHEN REQUIRED
//
