{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012736000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 2351440, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE760.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 2351440, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 2351440, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE760.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00%\\x05'", "DS1TRBAL": "b'\\x89\\xdc'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x05-\\x00\\x03\\x05/\\x00\\n\\x00&'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04J\\x00\\x00\\x01\\x07!_\\x01\\x07!_\\x089\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf4@@@'", "ispf": {"version": "04.74", "flags": 0, "createdate": "2007-08-03T00:00:00", "modifydate": "2007-08-03T08:39:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-474"}, "text": "REGULAR CBT TAPE - VERSION 474    FILE:  760\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT474.FILE760\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 6 MEMBERS COUNTED; CUMULATIVE SIZE IS 22,074 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   08/03/07    08:39:47    GMT-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$$ZIP": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x07!_\\x01\\x07!_\\x087*9*9\\x00\\x00\\xc1\\xd3\\xd3\\xd6\\xc6\\xc9\\xe3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2007-08-03T00:00:00", "modifydate": "2007-08-03T08:37:00", "lines": 10809, "newlines": 10809, "modlines": 0, "user": "ALLOFIT"}, "mimetype": "application/zip", "datatype": "binary", "extension": ".zip"}, "@FILE760": {"ttr": 4869, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04J\\x00\\x00\\x01\\x07!_\\x01\\x07!_\\x089\\x02}\\x02}\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf4@@@'", "ispf": {"version": "04.74", "flags": 0, "createdate": "2007-08-03T00:00:00", "modifydate": "2007-08-03T08:39:00", "lines": 637, "newlines": 637, "modlines": 0, "user": "CBT-474"}, "text": "//***FILE 760 is from Ken Tomiak and is collection of PC and z/OS   *   FILE 760\n//*           based tools geared for both novices and gurus         *   FILE 760\n//*           alike. A good portion of the collection is geared     *   FILE 760\n//*           towards transporting data from one platform to the    *   FILE 760\n//*           other using FTP at some point.  The bulk of this      *   FILE 760\n//*           work was compiled or written by:                      *   FILE 760\n//*                                                                 *   FILE 760\n//*     email:  \"Kenneth E Tomiak\"<CBT_Ken@KTomiak.biz>             *   FILE 760\n//*     AOL IM: KenTomiak                                           *   FILE 760\n//*                                                                 *   FILE 760\n//*     Never, never, never run anything you have not examined!     *   FILE 760\n//*     -------------------------------------------------------     *   FILE 760\n//*                                                                 *   FILE 760\n//*     Note from Sam Golob:  Since it is very soon before SHARE,   *   FILE 760\n//*        and since some of these items are PC-based, whereas      *   FILE 760\n//*        others are z/OS based, I have packaged this file,        *   FILE 760\n//*        temporarily, as a zip file.  In order to use this        *   FILE 760\n//*        package, the best way is probably to FTP the member      *   FILE 760\n//*        $$$ZIP back to a PC, unzip it there, and follow Ken's    *   FILE 760\n//*        directions on the PC.                                    *   FILE 760\n//*                                                                 *   FILE 760\n//*        Without promising, I'll try to repackage this file       *   FILE 760\n//*        later, so that at least the z/OS parts will not have     *   FILE 760\n//*        to be reloaded to a PC.                                  *   FILE 760\n//*                                                                 *   FILE 760\n//*        ----------------------------------------------------     *   FILE 760\n//*        THE AUTHORITATIVE VERSION OF THIS FILE IS ALWAYS THE     *   FILE 760\n//*        $$$ZIP MEMBER!!!!!                                       *   FILE 760\n//*        ----------------------------------------------------     *   FILE 760\n//*                                                                 *   FILE 760\n//*     STANDARD GLOBAL DISCLAIMER                                  *   FILE 760\n//*     ==========================                                  *   FILE 760\n//*     The author explicitly disavows any claim whatsoever about   *   FILE 760\n//*     the correctness or functionality of these files, and        *   FILE 760\n//*     disclaims liability for anything and everything bad that    *   FILE 760\n//*     might happen in connection with, before, during, or after   *   FILE 760\n//*     using it. I have tried to make it work right, and I am      *   FILE 760\n//*     personally pretty confident that it does, but everybody     *   FILE 760\n//*     makes mistakes, so if you use it, you do so at your own     *   FILE 760\n//*     risk.                                                       *   FILE 760\n//*                                                                 *   FILE 760\n//*     Note: Member/file lists are not in ascending sequence. I    *   FILE 760\n//*           tried to list objects in the sequence you ought to    *   FILE 760\n//*           review them and then near related entities. So, if    *   FILE 760\n//*           B calls A, then B is listed first and then A. And     *   FILE 760\n//*           then in ascending EBCDIC sequence. My sympathy if     *   FILE 760\n//*           that is too hard for you to follow.                   *   FILE 760\n//*                                                                 *   FILE 760\n//* =============================================================== *   FILE 760\n//* =============================================================== *   FILE 760\n//*                                                                 *   FILE 760\n//* PC-based                                                        *   FILE 760\n//*                                                                 *   FILE 760\n//*     ..\\     - The directory you unzipped this to.               *   FILE 760\n//*     =============================================               *   FILE 760\n//*                                                                 *   FILE 760\n//*     Never, never, never run anything you have not examined!     *   FILE 760\n//*     -------------------------------------------------------     *   FILE 760\n//*                                                                 *   FILE 760\n//*       add2path - Add %USERPROFILE%\\DOSBAT to the front of       *   FILE 760\n//*                  PATH.  That is where I expect you will         *   FILE 760\n//*                  place the bat files, but you can add them      *   FILE 760\n//*                  anywhere your PATH will find them.             *   FILE 760\n//*                                                                 *   FILE 760\n//*       Each z/OS oriented collection is both a sub-directory     *   FILE 760\n//*       and:                                                      *   FILE 760\n//*                                                                 *   FILE 760\n//*       *.BAT - A DOS bat file to upload an IEBUPDTE stream.      *   FILE 760\n//*       *.JCL - JCL to process an IEBUPDTE stream.                *   FILE 760\n//*       *.SEQ - The IEBUPDTE stream.                              *   FILE 760\n//*                                                                 *   FILE 760\n//*     BACKUPS - A sub-directory for FTP to download to.           *   FILE 760\n//*     =================================================           *   FILE 760\n//*                                                                 *   FILE 760\n//*       $$$INDEX - One liner about the files in the               *   FILE 760\n//*       sub-directory.                                            *   FILE 760\n//*                                                                 *   FILE 760\n//*     DOSBAT  - A collection of BAT files for using FTP.          *   FILE 760\n//*     ==================================================          *   FILE 760\n//*                                                                 *   FILE 760\n//*     Never, never, never run anything you have not examined!     *   FILE 760\n//*     -------------------------------------------------------     *   FILE 760\n//*                                                                 *   FILE 760\n//*       $$README - Explains more about the contents in this       *   FILE 760\n//*                  sub-dir.                                       *   FILE 760\n//*                                                                 *   FILE 760\n//*       $$$INDEX - One liner about the files in the               *   FILE 760\n//*                  sub-directory.                                 *   FILE 760\n//*                                                                 *   FILE 760\n//*       BAT - To help search fro BAT files, pass it a             *   FILE 760\n//*             drive:\\path argument and it will dir *.BAT files    *   FILE 760\n//*             for you.  Handy when you know where your BAT        *   FILE 760\n//*             files are but can not remember the exact name of    *   FILE 760\n//*             one to use.                                         *   FILE 760\n//*                                                                 *   FILE 760\n//*       DIR2UPDT - DOS bat file to call MBR2UPDT to build and     *   FILE 760\n//*                  IEBUPDTE stream, sans ISPF like statistics.    *   FILE 760\n//*                                                                 *   FILE 760\n//*       MBR2UPDT - DOS bat file to append a single file into      *   FILE 760\n//*                  the IEBUPDTE stream, sans ISPF like            *   FILE 760\n//*                  statistics.                                    *   FILE 760\n//*                                                                 *   FILE 760\n//*       OOREXX - My BAT file (JCL like) method to let the bat     *   FILE 760\n//*                file take care of knowing where Open Object      *   FILE 760\n//*                REXX is located and where my REXX source is.     *   FILE 760\n//*                                                                 *   FILE 760\n//*       PARMS* - Some BAT files that convert arguments to         *   FILE 760\n//*                upper and lowercase. Plus an IVP to see if it    *   FILE 760\n//*                works. Non-MVS systems may be case sensitive.    *   FILE 760\n//*                I forced my sub-directories on one to be         *   FILE 760\n//*                upper case and called PARMSUP to make sure my    *   FILE 760\n//*                CD command was upper case.                       *   FILE 760\n//*                                                                 *   FILE 760\n//*       HOSTDEFAULT - Copy this starter to as many                *   FILE 760\n//*                     HOSThostname.bat files as you have hosts    *   FILE 760\n//*                     to connect to. Each one will contain the    *   FILE 760\n//*                     userid and password for that host. Other    *   FILE 760\n//*                     FTP settings can be configured as well.     *   FILE 760\n//*                                                                 *   FILE 760\n//*       HOSTIBM - Update with your email address and II13288      *   FILE 760\n//*                 will be ready to download some tools from       *   FILE 760\n//*                 IBM. Have your HOST* file set and it will       *   FILE 760\n//*                 also upload them.                               *   FILE 760\n//*                                                                 *   FILE 760\n//*       FTPSETCONFIG - Sets which HOST* bat file will be          *   FILE 760\n//*                      called by other FTP*.bat files. You can    *   FILE 760\n//*                      switch HOST information, USERID and        *   FILE 760\n//*                      PASSWORD, in this manner.                  *   FILE 760\n//*                                                                 *   FILE 760\n//*       FTPSETATTRIBUTES - Called by the FTP* bat files to add    *   FILE 760\n//*                          quote site sub-commands that           *   FILE 760\n//*                          influence new dataset allocations      *   FILE 760\n//*                          and some translation specific          *   FILE 760\n//*                          features. All of the options are set   *   FILE 760\n//*                          in your HOST* file and activated       *   FILE 760\n//*                          using the FTPSETCONFIG file.           *   FILE 760\n//*                                                                 *   FILE 760\n//*       FTPIVP - Tests if you set everything up. It will create   *   FILE 760\n//*                a PDSE, load some members, submit a JOB to       *   FILE 760\n//*                IEBCOPY backup the PDS to a sequential           *   FILE 760\n//*                dataset, download the backup, upload it as a     *   FILE 760\n//*                new name, then submit a job to restore into a    *   FILE 760\n//*                new PDS.                                         *   FILE 760\n//*                                                                 *   FILE 760\n//*       II13288 - Logs on to ftp.software.ibm.com and downloads   *   FILE 760\n//*                 some tools using both the HOSTIBM file and      *   FILE 760\n//*                 one that you configured for your host and set   *   FILE 760\n//*                 using FTPSETCONFIG.                             *   FILE 760\n//*                                                                 *   FILE 760\n//*       FTP*GET* - Assorted flavors for getting one or more       *   FILE 760\n//*                  files.                                         *   FILE 760\n//*                                                                 *   FILE 760\n//*       FTP*PUT* - Assorted flavors for putting one or more       *   FILE 760\n//*                  files.                                         *   FILE 760\n//*                                                                 *   FILE 760\n//*       FTPLOGIN - Login to an FTO server and turn the reigns     *   FILE 760\n//*                  over.                                          *   FILE 760\n//*                                                                 *   FILE 760\n//*       FTPCD*   - Login, change to the sub-directory.            *   FILE 760\n//*                                                                 *   FILE 760\n//*       FTPBACKUP - Submit a special backup job that creates      *   FILE 760\n//*                   IEBUPDTE streams and/or TRANSMIT files, try   *   FILE 760\n//*                   to wait for the job to complete, and then     *   FILE 760\n//*                   downlaod the files.                           *   FILE 760\n//*                                                                 *   FILE 760\n//*       FTPBKUP  - Sample job to create IEBUPDTE streams or XMIT  *   FILE 760\n//*                  files.                                         *   FILE 760\n//*                                                                 *   FILE 760\n//*       IEBBKUP  - Sample job to backup a PDS if you run FTPIVP.  *   FILE 760\n//*                                                                 *   FILE 760\n//*       IEBREST  - Sample job to restore a PDS if you run FTPIVP. *   FILE 760\n//*                                                                 *   FILE 760\n//*       FTPDOWNLOAD - Picks up when FTPBACKUP can not wait.       *   FILE 760\n//*                                                                 *   FILE 760\n//*       FTPCANCEL - Various ways to submit a cancel tso user if   *   FILE 760\n//*                   your tn3270 session failed and RECONNECT      *   FILE 760\n//*                   fails.                                        *   FILE 760\n//*                                                                 *   FILE 760\n//*       FTPMKDIR - Create a new dataset using attributes from     *   FILE 760\n//*                  your HOST\u00ddhostname) bat file.                  *   FILE 760\n//*                                                                 *   FILE 760\n//*       FTPSCRIPT - Blindly execute your prepared script of FTP   *   FILE 760\n//*                   sub-commands. And a sample script. II13288    *   FILE 760\n//*                   may also give you ideas.                      *   FILE 760\n//*                                                                 *   FILE 760\n//*       FTPSUBMIT - Submits a job from your PDS and waits for     *   FILE 760\n//*                   it to complete. Downloads a copy of the       *   FILE 760\n//*                   output to your PC.                            *   FILE 760\n//*                                                                 *   FILE 760\n//*     DOSDATA - A sub-directory used for data.                    *   FILE 760\n//*     ========================================                    *   FILE 760\n//*                                                                 *   FILE 760\n//*       $$$INDEX - One liner about the files in the               *   FILE 760\n//*                  sub-directory.                                 *   FILE 760\n//*                                                                 *   FILE 760\n//*       FTPCHRBN - 256 Character set in PC binary format.         *   FILE 760\n//*                                                                 *   FILE 760\n//*       FTPCHRMF - 256 Character set in z/OS EBCDIC format.       *   FILE 760\n//*                                                                 *   FILE 760\n//*       FTPCHRPC - 256 Character set in PC 8 bit ASCII format.    *   FILE 760\n//*                                                                 *   FILE 760\n//*       URLCHECK - List of urls checked for changed by REXX       *   FILE 760\n//*                  program by the same name.                      *   FILE 760\n//*                                                                 *   FILE 760\n//*     DOSPERL - Activestate perl programs.                        *   FILE 760\n//*     ====================================                        *   FILE 760\n//*                                                                 *   FILE 760\n//*       $$$INDEX - One liner about the files in the               *   FILE 760\n//*                  sub-directory.                                 *   FILE 760\n//*                                                                 *   FILE 760\n//*       UPDT2HTML - Convert an IEBUPDTE stream into web pages.    *   FILE 760\n//*                                                                 *   FILE 760\n//*     DOSREXX - Open Object REXX programs.                        *   FILE 760\n//*     ====================================                        *   FILE 760\n//*                                                                 *   FILE 760\n//*       $$$INDEX - One liner about the files in the               *   FILE 760\n//*                  sub-directory.                                 *   FILE 760\n//*                                                                 *   FILE 760\n//*       ASC2EBC  - Convert an 8-bit ASCII file to EBCDIC.         *   FILE 760\n//*                                                                 *   FILE 760\n//*       EBC2ASC  - Convert an EBCDIC file to 8-bit ASCII.         *   FILE 760\n//*                                                                 *   FILE 760\n//*       CHARGRID - Create a 16x16 grid of 256 characters.         *   FILE 760\n//*                                                                 *   FILE 760\n//*       DIR2UPDT - Convert a directory into an IEBUPDTE stream    *   FILE 760\n//*                  with ISPF like statistics.                     *   FILE 760\n//*                                                                 *   FILE 760\n//*       IVS2DIR  - Read an IEBCOPY unload dataset and extract     *   FILE 760\n//*                  members int individual files.                  *   FILE 760\n//*                                                                 *   FILE 760\n//*       KETRECV  - RECEIVE like process to read the output of a   *   FILE 760\n//*                  TRANSMIT command. PDS members are extracted in *   FILE 760\n//*                  8-bit ASCII and EBCDIC format. Just in case    *   FILE 760\n//*                  somebody embdedded a TRANSMIT file as a        *   FILE 760\n//*                  member.                                        *   FILE 760\n//*                                                                 *   FILE 760\n//*       KETUPDTE - Ken's REXX way to read an IEBUPDTE stream and  *   FILE 760\n//*                  populate a sub-directory. ISPF statistics are  *   FILE 760\n//*                  written to a report file.                      *   FILE 760\n//*                                                                 *   FILE 760\n//*       XMI2INM  - The first half of KETRECV, read the transmit   *   FILE 760\n//*                  file and store the internal format as a PC     *   FILE 760\n//*                  file. The second half might be IVS2DIR.        *   FILE 760\n//*                                                                 *   FILE 760\n//*       XMITINFO - David Alcock code to show TRANSMIT file        *   FILE 760\n//*                  headers.                                       *   FILE 760\n//*                                                                 *   FILE 760\n//*     HTML    - IEBUPDTE stream converted to web pages.           *   FILE 760\n//*     =================================================           *   FILE 760\n//*                                                                 *   FILE 760\n//*       ZOSJCL.SEQ.html - Main page of JCL snippets.              *   FILE 760\n//*                                                                 *   FILE 760\n//*       ZOSUTIL.SEQ.html - Main page of Utility samples.          *   FILE 760\n//*                                                                 *   FILE 760\n//*     IEBUPDTE - Each directory bundled and ready for IEBUPDTE.   *   FILE 760\n//*     =========================================================   *   FILE 760\n//*                                                                 *   FILE 760\n//*     Batch Oriented                                              *   FILE 760\n//*     --------------                                              *   FILE 760\n//*                                                                 *   FILE 760\n//*       CNTL.*     - JCL to prepare and run programs.             *   FILE 760\n//*                                                                 *   FILE 760\n//*       PROCLIB.*  - Sample PROCedures for preparing and          *   FILE 760\n//*                    running code.                                *   FILE 760\n//*                                                                 *   FILE 760\n//*       SRCLIB.*   - Sample programs that need to be prepared.    *   FILE 760\n//*                                                                 *   FILE 760\n//*       OBJLIB.*   - Sample programs in object format.            *   FILE 760\n//*                                                                 *   FILE 760\n//*       EXELIB.*   - Sample programs in executable load module    *   FILE 760\n//*                    format.                                      *   FILE 760\n//*                                                                 *   FILE 760\n//*       PARMLIB.*  - Examples of extending the use of PARMLIB.    *   FILE 760\n//*                                                                 *   FILE 760\n//*       DATA.*     - Data used or produced by programs.           *   FILE 760\n//*                                                                 *   FILE 760\n//*       ZOSJCL.*   - Snippets of JCL.                             *   FILE 760\n//*                                                                 *   FILE 760\n//*       ZOSUTIL.*  - Examples of many Utilities to get started    *   FILE 760\n//*                    with.                                        *   FILE 760\n//*                                                                 *   FILE 760\n//*     TSO/ISPF Oriented                                           *   FILE 760\n//*     -----------------                                           *   FILE 760\n//*                                                                 *   FILE 760\n//*       CONFIG.*   - The output from ISRCONFG.                    *   FILE 760\n//*                                                                 *   FILE 760\n//*       CLIST.*    - TSO Command Procedures.                      *   FILE 760\n//*                                                                 *   FILE 760\n//*       MSGS.*     - ISPF messages.                               *   FILE 760\n//*                                                                 *   FILE 760\n//*       PANELS.*   - ISPF panels.                                 *   FILE 760\n//*                                                                 *   FILE 760\n//*       SKELS.*    - ISPF skeletons.                              *   FILE 760\n//*                                                                 *   FILE 760\n//*       REXX.*     - Sample REXX code.                            *   FILE 760\n//*                                                                 *   FILE 760\n//*       SHELL.*    - Sample z/OS UNIX shell scripts.              *   FILE 760\n//*                                                                 *   FILE 760\n//* =============================================================== *   FILE 760\n//* =============================================================== *   FILE 760\n//*                                                                 *   FILE 760\n//* z/OS-based                                                      *   FILE 760\n//* ==========                                                      *   FILE 760\n//*                                                                 *   FILE 760\n//*     CLIST   - Just a place holder for now.                      *   FILE 760\n//*     ======================================                      *   FILE 760\n//*                                                                 *   FILE 760\n//*     CNTL    - JCL to run the code in this collection.           *   FILE 760\n//*     =================================================           *   FILE 760\n//*                                                                 *   FILE 760\n//*       CONDCODE - IVP to check %CONDCODE which shows each        *   FILE 760\n//*                  steps maximum condition code. Follows          *   FILE 760\n//*                  control blocks.                                *   FILE 760\n//*                                                                 *   FILE 760\n//*       II13288  - Blind FTP script to download some IBM tools.   *   FILE 760\n//*                                                                 *   FILE 760\n//*       IPCSIVP  - Run IPCS in batch and demonstrate how to use   *   FILE 760\n//*                  certain features.                              *   FILE 760\n//*                                                                 *   FILE 760\n//*       HX2PR    Convert input to two hexadecimal print lines.    *   FILE 760\n//*       HX2PR$A  Assemble and link source.                        *   FILE 760\n//*       HX2PR4   Convert input to four hexadecimal print lines.   *   FILE 760\n//*       HX2PR4$A Assemble and link source.                        *   FILE 760\n//*       PR2HX    Convert two print lines back to EBCDIC format.   *   FILE 760\n//*       PR2HX$A  Assemble and link source.                        *   FILE 760\n//*       PR42HX   Convert four print lines back to EBCDIC format.  *   FILE 760\n//*       PR42HX$A Assemble and link source.                        *   FILE 760\n//*                                                                 *   FILE 760\n//*       PDSLOAD  IEBUPDTE alternative, preserves ISPF statistics. *   FILE 760\n//*       PDSLOAD$ Link object deck.                                *   FILE 760\n//*                                                                 *   FILE 760\n//*       OBJ2HEX  - Sample JCL that shows multiple ways to run     *   FILE 760\n//*                  OBJ2HEX to read a PDS member, in this example  *   FILE 760\n//*                  an object deck for PDSLOAD. Then two ways to   *   FILE 760\n//*                  run the self extracting REXX program.          *   FILE 760\n//*                                                                 *   FILE 760\n//*       URLCHECK - Run REXX program %URLCHECK to check if url     *   FILE 760\n//*                  has been updated since last run. Build a web   *   FILE 760\n//*                  page of those that have and update last        *   FILE 760\n//*                  modified date.                                 *   FILE 760\n//*                                                                 *   FILE 760\n//*     CONFIG  - Sample ISRCONFG output.                           *   FILE 760\n//*     =================================                           *   FILE 760\n//*               Ought to be LRECL=80 but IBM blew it.             *   FILE 760\n//*               Forced to be 255 for 80 byte data!                *   FILE 760\n//*                                                                 *   FILE 760\n//*               Just a place holder for now.                      *   FILE 760\n//*                                                                 *   FILE 760\n//*     DATA    - Data files used by the code in this collection.   *   FILE 760\n//*     =========================================================   *   FILE 760\n//*                                                                 *   FILE 760\n//*       URLCHECK - List of urls program %URLCHECK will check if   *   FILE 760\n//*                  they have been updated since the last run.     *   FILE 760\n//*                                                                 *   FILE 760\n//*     EXELIB  - Executable load modules.                          *   FILE 760\n//*     ==================================                          *   FILE 760\n//*                                                                 *   FILE 760\n//*     MSGS    - Just a place holder for now.                      *   FILE 760\n//*     ======================================                      *   FILE 760\n//*                                                                 *   FILE 760\n//*     OBJLIB  - Object decks.                                     *   FILE 760\n//*     =======================                                     *   FILE 760\n//*                                                                 *   FILE 760\n//*       PDSLOAD  -   ORIGINAL PROGRAM FROM FILE 093               *   FILE 760\n//*                                                                 *   FILE 760\n//*         A sample object deck, (for the very useful              *   FILE 760\n//*         IEBUPDTE-like program called PDSLOAD - CBT Tape File    *   FILE 760\n//*         093), has been included here to test the system.        *   FILE 760\n//*         Sample output from the SAMPJCL job is also included     *   FILE 760\n//*         here. These are members PDSLOAD@, PDSLOAD#, and         *   FILE 760\n//*         PDSLOAD$.                                               *   FILE 760\n//*                                                                 *   FILE 760\n//*         More about the PDSLOAD program itself ---               *   FILE 760\n//*                                                                 *   FILE 760\n//*         PDSLOAD will load a pds with members, starting from an  *   FILE 760\n//*         IEBUPDTE-like sequential dataset, but it is possible to *   FILE 760\n//*         preserve ISPF statistics too. See the layout below.     *   FILE 760\n//*                                                                 *   FILE 760\n//*         If you want to linkedit the PDSLOAD object deck to use  *   FILE 760\n//*         the program for yourself, the LINK job is also          *   FILE 760\n//*         included.                                               *   FILE 760\n//*                                                                 *   FILE 760\n//*         If you want to run the PDSLOAD program, the PDSLOJCL    *   FILE 760\n//*         sample JCL, which makes a pds out of an IEBUPDTE-like   *   FILE 760\n//*         ./ ADD NAME=memname                                     *   FILE 760\n//*         input deck, provides a sample job. Input to the PDSLOAD *   FILE 760\n//*         sample job is the SHOWMACS member.                      *   FILE 760\n//*                                                                 *   FILE 760\n//*       --------------------------------------------------------- *   FILE 760\n//*                                                                 *   FILE 760\n//*         Illustration of the layout of an ./ ADD NAME= card,     *   FILE 760\n//*         input to PDSLOAD, which preserves the stated ISPF       *   FILE 760\n//*         statistics:  This layout is produced by the OFFLOAD     *   FILE 760\n//*         program in CBT Tape File 093 and PDS2UPDTE in this      *   FILE 760\n//*         file.                                                   *   FILE 760\n//*                                                                 *   FILE 760\n//*    1       10        20        30        40        50        60 *   FILE 760\n//*    +---+----+----+----+----+----+----+----+----+----+----+----+ *   FILE 760\n//*    ./ ADD NAME=$$$#DATE 0474-07151-07151-0941-00012-00012-00000 *   FILE 760\n//*                mbrname  vvmm crtdt moddt time currl initl modln *   FILE 760\n//*                                                                 *   FILE 760\n//*        50        60                                             *   FILE 760\n//*        -+----+----+----+---    (ISPF stats are optional)        *   FILE 760\n//*        -00012-00000-CBT-474                                     *   FILE 760\n//*         initl modln userid                                      *   FILE 760\n//*                                                                 *   FILE 760\n//*     ---------------------------------------------------------   *   FILE 760\n//*                                                                 *   FILE 760\n//*     PANELS  - Just a place holder for now.                      *   FILE 760\n//*     ======================================                      *   FILE 760\n//*                                                                 *   FILE 760\n//*     PARMLIB - A few sample PARMLIB members beyond the basics.   *   FILE 760\n//*     =========================================================   *   FILE 760\n//*                                                                 *   FILE 760\n//*       CUNUNI00 - Shortest UNICODE on DEMAND entry I found       *   FILE 760\n//*                  would prevent DB2 from loading much more and   *   FILE 760\n//*                  still let z/OS load what is actually used.     *   FILE 760\n//*                                                                 *   FILE 760\n//*     PROCLIB - Procedures to eliminate duplicate JCL.            *   FILE 760\n//*     ================================================            *   FILE 760\n//*                                                                 *   FILE 760\n//*       ASM2OBJ  - PROC to assemble and save OBJECT deck.         *   FILE 760\n//*                                                                 *   FILE 760\n//*       ASM2LMOD - PROC to assemble and link source to an LMOD.   *   FILE 760\n//*                                                                 *   FILE 760\n//*       OBJ2LMOD - PROC to link an OBJECT deck to an LMOD.        *   FILE 760\n//*                                                                 *   FILE 760\n//*       IEASYM00 - Set statements to simulate SYSTEM Symbolics.   *   FILE 760\n//*                  Works best if you have this in a system unique *   FILE 760\n//*                  JES accessible PROCLIB. One per system.        *   FILE 760\n//*                  NOT SHARED.                                    *   FILE 760\n//*                                                                 *   FILE 760\n//*       TSOISPF  - PROC to allocate standard TSO and ISPF         *   FILE 760\n//*                  datasets.                                      *   FILE 760\n//*                                                                 *   FILE 760\n//*     REXX    - REXX programs, EDIT macros.                       *   FILE 760\n//*     =====================================                       *   FILE 760\n//*                                                                 *   FILE 760\n//*     Never, never, never run anything you have not examined!     *   FILE 760\n//*     -------------------------------------------------------     *   FILE 760\n//*                                                                 *   FILE 760\n//*       ACEETRID - Follow control blocks to get your VTAM termid. *   FILE 760\n//*                                                                 *   FILE 760\n//*       AGE      - EDIT macro uses LMMCOPY to save the as-yet     *   FILE 760\n//*                  unsaved member as a new name and keep ISPF     *   FILE 760\n//*                  stats!                                         *   FILE 760\n//*                                                                 *   FILE 760\n//*       BATCHISP - Invoke ISPF and your application.              *   FILE 760\n//*                                                                 *   FILE 760\n//*       BUBLSORT - How to Bubble sort and entry in stem.          *   FILE 760\n//*                                                                 *   FILE 760\n//*       DDBYCBLK - Access allocated DDNAMEs by following control  *   FILE 760\n//*                  blocks.                                        *   FILE 760\n//*                                                                 *   FILE 760\n//*       DDBYLSTA - Access allocated DDNAMEs by trapping LISTALC.  *   FILE 760\n//*                                                                 *   FILE 760\n//*       DDBYQLIB - Query if a DDNAME is allocated using ISPF      *   FILE 760\n//*                  QBASELIB.                                      *   FILE 760\n//*                                                                 *   FILE 760\n//*       DDBYTSTR - REXX IVP code to test DDBYCBLK, DDBYLSTA, and  *   FILE 760\n//*                  the poorly designed DDTRAP.                    *   FILE 760\n//*                                                                 *   FILE 760\n//*       DDTRAP   - Access DDNAMEs with a dataset by trapping      *   FILE 760\n//*                  LISTALC.                                       *   FILE 760\n//*                                                                 *   FILE 760\n//*       HEX2OBJ  - Sample output from running OBJ2HEX against     *   FILE 760\n//*                  an object deck. PDSLOAD in this instance.      *   FILE 760\n//*                  The output from running this is a real         *   FILE 760\n//*                  OBJECT deck suitable as input to IEWBLINK      *   FILE 760\n//*                  (the linkage editor).                          *   FILE 760\n//*                                                                 *   FILE 760\n//*       HLQSPACE - Example of using ISPF LMDLIST to retrieve a    *   FILE 760\n//*                  list of matching dataset names and summing     *   FILE 760\n//*                  their space usage.                             *   FILE 760\n//*                                                                 *   FILE 760\n//*       IPCSIVP  - Invoke IPCS and demonstrate how to use         *   FILE 760\n//*                  features of IPCS to do common activities.      *   FILE 760\n//*                                                                 *   FILE 760\n//*       JCLDSCB  - Retrieve data set control block information    *   FILE 760\n//*                  and insert as comment lines.                   *   FILE 760\n//*                                                                 *   FILE 760\n//*       JOBCARD  - Insert a JOBCARD using an instream template.   *   FILE 760\n//*                                                                 *   FILE 760\n//*       OBJ2HEX  - Convert the input file into hexadecimal        *   FILE 760\n//*                  format wrapped inside REXX code to be run on   *   FILE 760\n//*                  the receiving end.                             *   FILE 760\n//*                                                                 *   FILE 760\n//*           OBJ2HEX is a REXX program that creates a self         *   FILE 760\n//*           extracting REXX program with the input file           *   FILE 760\n//*           embedded in comments. Each record of the input file   *   FILE 760\n//*           is converted into two lines of printable data, in a   *   FILE 760\n//*           format similar to ISPF HEX ON. This data is read by   *   FILE 760\n//*           the self extracting program and converted back to     *   FILE 760\n//*           the original values.                                  *   FILE 760\n//*                                                                 *   FILE 760\n//*           The self extracting program is comprised of           *   FILE 760\n//*           standard characters, easily translated between        *   FILE 760\n//*           EBCDIC and ASCII characters and back again.           *   FILE 760\n//*                                                                 *   FILE 760\n//*           This method might be used to accurately transport     *   FILE 760\n//*           PTFs or object decks thru an ASCII system and back.   *   FILE 760\n//*           It is not limited to binary data, you can use it on   *   FILE 760\n//*           any type of data that might contain characters that   *   FILE 760\n//*           require special conversion during file transfer.      *   FILE 760\n//*                                                                 *   FILE 760\n//*       PDS2UPDT - ISPF based command to append all members of    *   FILE 760\n//*                  a PDS into a sequential IEBUPDTE stream with   *   FILE 760\n//*                  ISPF stats on the control card, suitable for   *   FILE 760\n//*                  PDSLOAD or REXUPDTE.                           *   FILE 760\n//*                                                                 *   FILE 760\n//*       PDS2XMIT - ISPF based front-end to the TRANSMIT           *   FILE 760\n//*                  command. If run in the foreground it will      *   FILE 760\n//*                  pop up a dynamically built panel allowing      *   FILE 760\n//*                  overrides to the MESSAGES included in the      *   FILE 760\n//*                  TRANSMIT file.                                 *   FILE 760\n//*                                                                 *   FILE 760\n//*       RACFINFO - Modified version of some Xephon published      *   FILE 760\n//*                  code.  The enhancement (my opinion) removes    *   FILE 760\n//*                  the GRINDD input file specifying CLASSES to    *   FILE 760\n//*                  check. The output of a SETR LIST is trapped    *   FILE 760\n//*                  and all ACTIVE classes are checked.            *   FILE 760\n//*                                                                 *   FILE 760\n//*       REXUPDTE - Read an IEBUPDTE stream and populate a PDS     *   FILE 760\n//*                  preserving the ISPF statistics if present on   *   FILE 760\n//*                  the control card.                              *   FILE 760\n//*                                                                 *   FILE 760\n//*       REXXUSS  - A sample IVP program to use several z/OS UNIX  *   FILE 760\n//*                  features.                                      *   FILE 760\n//*                                                                 *   FILE 760\n//*       SDSFDISK - How to call SDSF from REXX to transfer JES2    *   FILE 760\n//*                  output to a sequential disk file or pds        *   FILE 760\n//*                  member.                                        *   FILE 760\n//*                                                                 *   FILE 760\n//*       TXT2STEM - Routine to parse a text string into stem       *   FILE 760\n//*                  variables.  Real parsing, quoted text is a     *   FILE 760\n//*                  single stem value.                             *   FILE 760\n//*                                                                 *   FILE 760\n//*       UPDREFDT - Use ISPF to touch datasets which causes the    *   FILE 760\n//*                  last-reference date to be updated. Helps       *   FILE 760\n//*                  prevent migrating datasets you want on DASD.   *   FILE 760\n//*                                                                 *   FILE 760\n//*       URLCHECK - Use TCP/IP Sockets to check if a url has       *   FILE 760\n//*                  been updated since the last run. If so, add    *   FILE 760\n//*                  it to a web page. This would be useful if      *   FILE 760\n//*                  that web page was accessible to a web          *   FILE 760\n//*                  server. This is a port of the PC based IBM     *   FILE 760\n//*                  Object REXX code.                              *   FILE 760\n//*                                                                 *   FILE 760\n//*       VIEWHELP - Trap the output of a HELP command, write it    *   FILE 760\n//*                  to disk, and then invoke VIEW so you can       *   FILE 760\n//*                  scroll.                                        *   FILE 760\n//*                                                                 *   FILE 760\n//*       XMIT2PDS - Front end to RECEIVE, supplying an optional    *   FILE 760\n//*                  output dataset name at the same time.          *   FILE 760\n//*                                                                 *   FILE 760\n//*       XYGRID   - Sample of using postive and negative           *   FILE 760\n//*                  indexing to create a grid. Yes, you can use    *   FILE 760\n//*                  negatives!                                     *   FILE 760\n//*                                                                 *   FILE 760\n//*     SHELL   - z/OS UNIX scripts.                                *   FILE 760\n//*     ============================                                *   FILE 760\n//*                                                                 *   FILE 760\n//*     Never, never, never run anything you have not examined!     *   FILE 760\n//*     -------------------------------------------------------     *   FILE 760\n//*                                                                 *   FILE 760\n//*       java5    - Sample of pre-pending the java5 sub-directory  *   FILE 760\n//*                  names to the z/OS UNIX path.                   *   FILE 760\n//*                                                                 *   FILE 760\n//*     SKELS   - Just a place holder for now.                      *   FILE 760\n//*     ======================================                      *   FILE 760\n//*                                                                 *   FILE 760\n//*     SRCLIB  - Assembler, COBOL, and other language source code. *   FILE 760\n//*     =========================================================== *   FILE 760\n//*                                                                 *   FILE 760\n//*         HX2PR - Makes FB-80 Hex data printable in two lines     *   FILE 760\n//*         PR2HX - Makes FB-80 Two Line printable data, into       *   FILE 760\n//*                   one line Hex output                           *   FILE 760\n//*                                                                 *   FILE 760\n//*         HX2PR4 - Makes FB-80 Hex data printable in four lines   *   FILE 760\n//*         PR42HX - Makes FB-80 Four Line printable data, into     *   FILE 760\n//*                   one line Hex output                           *   FILE 760\n//*                                                                 *   FILE 760\n//*       --------------------------------------------------------  *   FILE 760\n//*       Another system to do the conversion of the 80-byte card   *   FILE 760\n//*       images to (the same) two lines of printable data. This    *   FILE 760\n//*       consists of 2 Assembler programs.                         *   FILE 760\n//*                                                                 *   FILE 760\n//*       email: \"Sam Golob\"<sbgolob@attglobal.net>                 *   FILE 760\n//*       or:  \"Sam Golob\"<sbgolob@cbttape.org>                     *   FILE 760\n//*       --------------------------------------------------------  *   FILE 760\n//*                                                                 *   FILE 760\n//*     Option:                                                     *   FILE 760\n//*                                                                 *   FILE 760\n//*       If you want clearer displayable output, you can have it   *   FILE 760\n//*       in 4 lines instead of 2. The following 2 programs add     *   FILE 760\n//*       a line of purely printable data, plus a \"ruler line\" just *   FILE 760\n//*       the way the ISPF HEX display does it. To reconstitute     *   FILE 760\n//*       the original binary card-image, the PR42HX will do that,  *   FILE 760\n//*       by ignoring the first two of the four lines in the        *   FILE 760\n//*       display.                                                  *   FILE 760\n//*                                                                 *   FILE 760\n//*  Example:  4-line output (should be continued to 80 bytes)      *   FILE 760\n//*                                                                 *   FILE 760\n//*   ESD            PDSLOAD                                        *   FILE 760\n//*  ----+----1----+----2----+----3----+----4----+----5----+----6-- *   FILE 760\n//*  0CEC444444014400DCEDDCC40000001A444444444444444444444444444444 *   FILE 760\n//*  25240000000000017423614000000090000000000000000000000000000000 *   FILE 760\n//*   TXT             00  PDSLOAD 20070529  ANY LRECL OUT:  1:F,V-> *   FILE 760\n//*  ----+----1----+----2----+----3----+----4----+----5----+----6-- *   FILE 760\n//*  0EEE4000440344004FF51DCEDDCC4FFFFFFFF44CDE4DDCCD4DEE744F7C6E66 *   FILE 760\n//*  2373000000080001700417423614020070529001580395330643A001A6B50E *   FILE 760\n//*                                                                 *   FILE 760\n//*  Example:  2-line output (should be continued to 80 bytes)      *   FILE 760\n//*                                                                 *   FILE 760\n//*  0CEC444444014400DCEDDCC40000001A444444444444444444444444444444 *   FILE 760\n//*  25240000000000017423614000000090000000000000000000000000000000 *   FILE 760\n//*  0EEE4000440344004FF51DCEDDCC4FFFFFFFF44CDE4DDCCD4DEE744F7C6E66 *   FILE 760\n//*  2373000000080001700417423614020070529001580395330643A001A6B50E *   FILE 760\n//*                                                                 *   FILE 760\n//*                                                                 *   FILE 760\n//*     ZOSJCL  - Basic JCL examples.                               *   FILE 760\n//*     =============================                               *   FILE 760\n//*                                                                 *   FILE 760\n//*       $$$INDEX - List of JCL templates included.                *   FILE 760\n//*                                                                 *   FILE 760\n//*     ZOSUTIL - An ever expanding collection of UTILITY jobs.     *   FILE 760\n//*     =======================================================     *   FILE 760\n//*                                                                 *   FILE 760\n//*     Never, never, never run anything you have not examined!     *   FILE 760\n//*                                                                 *   FILE 760\n//*       $$$INDEX - List of UTILITY samples included.              *   FILE 760\n//*                                                                 *   FILE 760\n//*     -------------------------------------------------------     *   FILE 760\n//*                                                                 *   FILE 760\n//* =============================================================== *   FILE 760\n//* =============================================================== *   FILE 760\n//*                                                                 *   FILE 760\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CNTL": {"ttr": 5126, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x07!O\\x01\\x07!O\\x105\\x01\\xb5\\x01\\xb5\\x00\\x00\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2007-08-02T00:00:00", "modifydate": "2007-08-02T10:35:00", "lines": 437, "newlines": 437, "modlines": 0, "user": "TOMIAK"}, "text": "./ ADD NAME=$$$INDEX 0100-07214-07214-1034-00023-00023-00000-CNTL\n\nThis dataset (sub-directory) contains JCL to invoke the programs and\nREXX code I have under a BATCH TMP process.\n\nMember   Purpose of the member\n-------- --------------------------------------------------------------\n$$$INDEX This member\n\nCONDCODE IVP for testing %CONDCODE which shows prior steps cond code.\nHX2PR    Convert input to two hexadecimal print lines.\nHX2PR$A  Assemble and link source.\nHX2PR4   Convert input to four hexadecimal print lines.\nHX2PR4$A Assemble and link source.\nII13288  Run FTP to get some IBM tools\nIPCSIVP  Run IPCS in batch to demonstrate some features.\nPDSLOAD  IEBUPDTE alternative preserves ISPF statistics.\nPDSLOAD$ Link object deck.\nPR2HX    Convert two print lines back to EBCDIC format.\nPR2HX$A  Assemble and link source.\nPR42HX   Convert four print lines back to EBCDIC format.\nPR42JX$A Assemble and link source.\nURLCHECK Invoke TSO and run REXX code that uses TCPIP sockets.\n\n./ ADD NAME=CONDCODE 0100-07214-07214-1034-00071-00071-00000-CNTL\n//jobname! JOB (),'CONDCODE REPORT',\n//             RESTART=STEP001,           <= REQUIRED FOR TESTING\n//             CLASS=a,\n//             MSGCLASS=x,MSGLEVEL=(1,1),\n//             REGION=18M,TIME=1230,\n//             NOTIFY=&SYSUID\n//*\n//*            (ACCTCODE,ACCTCODE,ESTTIME,ESTLINE,ESTCARDS,FORMS,\n//*            COPIES,LOG,LINECOUNTPERPAGE)\n//*\n/*JOBPARM SYSAFF=*            <=Which JES2 MAS Member to run on\n/*JOBPARM LINES=9999\n//*\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//* Let JES2 dynamically allocate this dataset to search for PROCs.\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//MYPROCS  JCLLIB ORDER=(&SYSUID..PROCLIB)\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//* Emulating SYSTEM SYMBOLS.\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//SYSSMBLS INCLUDE MEMBER=IEASYM00\n//*\n//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n//* ===================================================================\n//* SOURCE:  DSN=&SYSUID..CNTL(CONDCODE)\n//* AUTHOR:  \"Kenneth E. Tomiak\"<CBT_Ken@KTomiak.BIZ>\n//* PURPOSE: THIS JOB IS USED TO TEST %CONDCODE FOR THE MOST FREQUENT\n//*          STEP STATUS POSSIBILITIES.\n//* ===================================================================\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//*\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//* Instream procedure\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//PROC001 PROC MYVAR='KEN',VAR2=10\n//STEP00A EXEC PGM=IEFBR14,REGION=4M,\n//             PARM='&VAR2.&MYVAR',COND=((0,LT),EVEN)\n//PROCSTP EXEC PGM=IEFBR14,REGION=4M,PARM='&VAR2.&MYVAR',COND=EVEN\n//        PEND\n//*\n//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n//* Execute steps so %CONDCODE can be a show off.\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//STEP000 EXEC PGM=IKJEFT01\n//STEP001 EXEC PGM=IKJEFT01\n//SYSTSPRT DD  DUMMY\n//STEP002 EXEC PGM=IEBGENER\n//STEP003 EXEC PGM=IEBGENER,COND=EVEN\n//STEP004 EXEC PROC=PROC001\n//STEP005 EXEC PROC=PROC001,COND.PROCSTP=((0,LT,STEP004.STEP00A),EVEN)\n//STEP00A EXEC PGM=S806,COND=EVEN\n//IDIREPRT DD  DUMMY\n//STEP006 EXEC PROC=PROC001\n//STEP007 EXEC PROC=PROC001\n//STEP00B EXEC PGM=S806,COND=EVEN\n//IDIREPRT DD  DUMMY\n//*\n//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n//* Execute TSO and launch the REXX program, CONDCODE.\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//STEP008 EXEC PGM=IKJEFT1B,PARM='',REGION=6M,COND=EVEN\n//SYSPROC  DD  DISP=SHR,DSN=&SYSUID..CLIST\n//SYSEXEC  DD  DISP=SHR,DSN=&SYSUID..REXX\n//*        DD  DISP=SHR,DSN=&SYSUID..REXX(CONDCODE)\n//OUTFILE  DD  SYSOUT=*\n//SYSTSIN  DD  *\n  %CONDCODE\n  LOGOFF\n/*\n//*\n//\n./ ADD NAME=HX2PR    0100-07214-07214-1034-00010-00010-00000-CNTL\n//SBGOLOBM JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//*     HEX TO PRINT PROGRAM - EXECUTION\n//*\n//LOAD EXEC PGM=HX2PR\n//STEPLIB  DD DISP=SHR,DSN=SBGOLOB.LOAD\n//SYSUT1   DD DISP=SHR,DSN=SBGOLOB.CBT474.FILE760(PDSLOAD)\n//SYSUT2   DD DISP=SHR,DSN=SBGOLOB.B.DATA(PDSLOADK)\n//SYSPRINT DD SYSOUT=*\n./ ADD NAME=HX2PR$A  0100-07214-07214-1034-00027-00027-00000-CNTL\n//USERID   JOB (ACCT),'ASSEMBLE AND LINK',\n//             CLASS=B,\n//             MSGCLASS=X,MSGLEVEL=(1,1),\n//             REGION=18M,TIME=1230,\n//             NOTIFY=&SYSUID\n//*\n//*            (ACCTCODE,ACCTCODE,ESTTIME,ESTLINE,ESTCARDS,FORMS,\n//*            COPIES,LOG,LINECOUNTPERPAGE)\n//*\n/*JOBPARM SYSAFF=*            <=Which JES2 MAS Member to run on\n/*JOBPARM LINES=9999\n//*\n//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n//* LET JES2 DYNAMICALLY ALLOCATE THIS DATASET TO SEARCH FOR PROCS.\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//MYPROCS  JCLLIB ORDER=(&SYSUID..PROCLIB)\n//*\n//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n//* INVOKE THE PROCEDURE TO ASSEMBLE AND LINK THE SOURCE TO AN LMOD.\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//STEP010  EXEC PROC=ASM2LMOD,MBRNAME=HX2PR\n//LKED.LNKPARM  DD  *\n  SETCODE AC(0)\n  NAME    HX2PR(R)\n/*\n//*\n//\n./ ADD NAME=HX2PR4   0100-07214-07214-1034-00010-00010-00000-CNTL\n//SBGOLOBM JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//*  HEX TO PRINT PROGRAM - EXECUTION - PRODUCE FOUR-LINE PRINT\n//*\n//LOAD EXEC PGM=HX2PR4\n//STEPLIB  DD DISP=SHR,DSN=SBGOLOB.LOAD\n//SYSUT1   DD DISP=SHR,DSN=SBGOLOB.CBT474.FILE760(PDSLOAD)\n//SYSUT2   DD DISP=SHR,DSN=SBGOLOB.B.DATA(PDSLOADL)\n//SYSPRINT DD SYSOUT=*\n./ ADD NAME=HX2PR4$A 0100-07214-07214-1034-00027-00027-00000-CNTL\n//USERID   JOB (ACCT),'ASSEMBLE AND LINK',\n//             CLASS=B,\n//             MSGCLASS=X,MSGLEVEL=(1,1),\n//             REGION=18M,TIME=1230,\n//             NOTIFY=&SYSUID\n//*\n//*            (ACCTCODE,ACCTCODE,ESTTIME,ESTLINE,ESTCARDS,FORMS,\n//*            COPIES,LOG,LINECOUNTPERPAGE)\n//*\n/*JOBPARM SYSAFF=*            <=Which JES2 MAS Member to run on\n/*JOBPARM LINES=9999\n//*\n//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n//* LET JES2 DYNAMICALLY ALLOCATE THIS DATASET TO SEARCH FOR PROCS.\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//MYPROCS  JCLLIB ORDER=(&SYSUID..PROCLIB)\n//*\n//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n//* INVOKE THE PROCEDURE TO ASSEMBLE AND LINK THE SOURCE TO AN LMOD.\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//STEP010  EXEC PROC=ASM2LMOD,MBRNAME=HX2PR4\n//LKED.LNKPARM  DD  *\n  SETCODE AC(0)\n  NAME    HX2PR4(R)\n/*\n//*\n//\n./ ADD NAME=II13288  0100-07214-07214-1034-00050-00050-00000-CNTL\n//KTOMIAKC JOB (999,CSI,KTOMIAK,60,9999,0,,1,,60),\n//             'KENNETH E TOMIAK',\n//             CLASS=A,\n//             MSGCLASS=X,MSGLEVEL=(1,1),\n//             TIME=1440,REGION=32M,\n//             NOTIFY=&SYSUID\n//*\n/*JOBPARM SYSAFF=*\n/*JOBPARM LINES=9999\n//*\n//* LIB: DSN=KTOMIAK.ZOS.CNTL(II13288)\n//* AUTHOR: \"KENNETH E TOMIAK\"<CBT_Ken@KTomiak.org>\n//* GUIDE:  THIS JOB WILL RETRIEVE THE IBM TERSE TOOL AND THE\n//*         INDEX CI SIZER TOOL.\n//*\n//FTP     EXEC PGM=FTP,REGION=5000K,\n//             PARM='( EXIT'\n//OUTPUT   DD  SYSOUT=*\n//INPUT    DD  *\nftp.software.ibm.com ;   207.25.253.40 if no DNS available.\nanonymous ;\nkentomiak@ktomiak.org ;\nbin ;\nlocsite recfm=fb lrecl=1024 blksize=0 tracks pri=3 sec=3 ;\nlocsite volume=csi001 ;\ncd s390/mvs/tools ;\nget INDXCISZ.JCL.TRSD INDXCISZ.TERSED ;\ncd packlib ;\nlocsite recfm=fb lrecl=80 blksize=0 tracks pri=3 sec=3 ;\nget trsmain.bin TRSMAIN.XMI ;\nquit ;\n/*\n//*\n//RECEIVE EXEC PGM=IKJEFT01,REGION=4M,DYNAMNBR=99,COND=(0,LT)\n//SYSTSPRT DD  SYSOUT=*\n//SYSTSIN  DD  *\n  RECEIVE INDATASET(TRSMAIN.XMI)\n    DATASET(TRSMAIN.LOADLIB) VOLUME(CSI001)\n/*\n//*\n//UNTERSE EXEC PGM=TRSMAIN,PARM=UNPACK,COND=(0,LT)\n//STEPLIB  DD  DISP=SHR,DSN=&SYSUID..TRSMAIN.LOADLIB\n//SYSPRINT DD  SYSOUT=*\n//INFILE   DD  DISP=SHR,DSN=&SYSUID..INDXCISZ.TERSED\n//OUTFILE  DD  DISP=(NEW,CATLG,DELETE),DSN=&SYSUID..INDXCISZ.UNTERSED,\n//             UNIT=SYSALLDA,\n//             SPACE=(TRK,(10,10,0),RLSE)\n//             DCB=(DSORG=PS,RECFM=FB.BLKSIZE=0,LRECL=80)\n//*\n//\n./ ADD NAME=IPCSIVP  0100-07214-07214-1034-00072-00072-00000-CNTL\n//*\n/*JOBPARM SYSAFF=*\n/*JOBPARM LINES=9999\n//*\n//        SET DUMPDSN=SYS1.DUMP01           <== POINT TO YOUR DUMP\n//*\n//*MYPROCS JCLLIB ORDER=(&SYSUID..ZOS$CNTL.CNTL)\n//*\n//* LIB:    DSN=ZOS$CNTL.CNTL(BLSCDDIR)\n//* AUTHOR: \"KENNETH E TOMIAK\"<CBT_KEN@KTOMIAK.ORG>\n//* GUIDE:  THIS JOB WILL ALLOCATE AN IPCS DUMP DIRECTORY,\n//*         INVOKE IPCS TO PRODUCE A SIMPLE REPORT, AND RUN A\n//*         SAMPLE REXX IVP OF IPCS COMMANDS.\n//*\n//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n//* ALLOCATE AN IPCS DUMP DIRECTORY.\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//ALLOC   EXEC PGM=IDCAMS\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  *\n         DEFINE +\n           CLUSTER( +\n             NAME('KTOMIAK.DDIR') +\n             INDEXED +\n             REUSE +\n             VOLUME(VOLSER)            /* <== YOUR VOLSER */ +\n             SHAREOPTIONS(1,3) +\n           ) +\n           DATA( +\n             NAME('KTOMIAK.DDIR.D') +\n             BUFFERSPACE(1024000) +\n             KEYS(128,0) +\n             RECORDS(15000,15000) +\n             RECORDSIZE(2560 3072) +\n           ) +\n           INDEX( +\n             NAME('KTOMIAK.DDIR.I') +\n             CONTROLINTERVALSIZE(4096) +\n             RECORDS(150,150) +\n           )\n/*\n//*\n//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n//* PRODUCE A STANDARD PROBLEM SCREENING REPORT REGARDING THE DUMP.\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//CBSVA   EXEC PGM=IKJEFT1B,REGION=5M,\n//             PARM='%BLSCBSVA &DUMPDSN'\n//SYSPROC  DD  DISP=SHR,DSN=SYS1.SBLSCLI0\n//SYSTSPRT DD  SYSOUT=*,\n//             DCB=(RECFM=VB,LRECL=124,BLKSIZE=4096)\n//IPCSDDIR DD  DISP=SHR,DSN=&SYSUID..DDIR\n//IPCSDUMP DD  DISP=SHR,DSN=&DUMPDSN\n//IPCSTOC  DD  SYSOUT=*\n//IPCSPRNT DD  SYSOUT=*\n//SYSTSIN  DD  DUMMY\n//*\n//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n//* RUN A SAMPLE IPCS IVP WITH REXX.\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//IPCSIVP EXEC PGM=IKJEFT1B,REGION=5M,\n//             PARM='%ISPFSTRT %IPCSIVP'\n//SYSEXEC  DD  DISP=SHR,DSN=&SYSUID..ZOS$REXX\n//SYSPROC  DD  DISP=SHR,DSN=SYS1.SBLSCLI0\n//SYSTSPRT DD  SYSOUT=*,\n//             DCB=(RECFM=VB,LRECL=124,BLKSIZE=4096)\n//IPCSDDIR DD  DISP=SHR,DSN=&SYSUID..DDIR\n//IPCSDUMP DD  DISP=SHR,DSN=&DUMPDSN\n//IPCSTOC  DD  SYSOUT=*\n//IPCSPRNT DD  SYSOUT=*\n//SYSTSIN  DD  DUMMY\n//*\n//\n./ ADD NAME=PDSLOAD  0100-07214-07214-1034-00013-00013-00000-CNTL\n//SBGOLOBL JOB (ACCT#),PDSLOAD,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//* ---------------------------------------- *//\n//*     SAMPLE PDSLOAD PROGRAM EXECUTION     *//\n//* ---------------------------------------- *//\n//LOAD EXEC PGM=PDSLOAD               /* FROM OUR OBJECT DECK)\n//STEPLIB  DD DISP=SHR,DSN=SBGOLOB.LOAD       (from the LINK job)\n//SYSUT1   DD DISP=SHR,DSN=SBGOLOB.CBT474.FILE760(SHOWMACS)\n//SYSPRINT DD SYSOUT=*\n//SYSUT2   DD DSN=SBGOLOB.SHOW715A.MACLIB,DISP=(NEW,CATLG,DELETE),\n//         UNIT=SYSALLDA,VOL=SER=DATA02,SPACE=(TRK,(30,30,44),RLSE),\n//         DCB=(RECFM=FB,LRECL=80,BLKSIZE=27920)\n./ ADD NAME=PDSLOAD$ 0100-07214-07214-1034-00028-00028-00000-CNTL\n//USERID   JOB (ACCT),'OBJDECK TO LMOD',\n//             CLASS=B,\n//             MSGCLASS=X,MSGLEVEL=(1,1),\n//             REGION=18M,TIME=1230,\n//             NOTIFY=&SYSUID\n//*\n//*            (ACCTCODE,ACCTCODE,ESTTIME,ESTLINE,ESTCARDS,FORMS,\n//*            COPIES,LOG,LINECOUNTPERPAGE)\n//*\n/*JOBPARM SYSAFF=*            <=Which JES2 MAS Member to run on\n/*JOBPARM LINES=9999\n//*\n//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n//* LET JES2 DYNAMICALLY ALLOCATE THIS DATASET TO SEARCH FOR PROCS.\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//MYPROCS  JCLLIB ORDER=(&SYSUID..PROCLIB)\n//*\n//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n//* INVOKE THE LINKAGE EDITOR TO LINK THE OBJECT DECK INTO AN LMOD.\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//STEP010  EXEC PROC=OBJ2LMOD,MBRNAME=PDSLOAD\n//LKED.LNKPARM  DD  *\n  SETCODE AC(0)\n  ENTRY   PDSLOAD\n  NAME    PDSLOAD(R)\n/*\n//*\n//\n./ ADD NAME=PR2HX    0100-07214-07214-1034-00010-00010-00000-CNTL\n//SBGOLOBM JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//*     PRINT TO HEX PROGRAM - EXECUTION\n//*\n//LOAD EXEC PGM=PR2HX\n//STEPLIB  DD DISP=SHR,DSN=SBGOLOB.LOAD\n//SYSUT1   DD DISP=SHR,DSN=SBGOLOB.B.DATA(PDSLOADK)\n//SYSUT2   DD DISP=SHR,DSN=SBGOLOB.B.DATA(PDSLOADQ)\n//SYSPRINT DD SYSOUT=*\n./ ADD NAME=PR2HX$A  0100-07214-07214-1034-00027-00027-00000-CNTL\n//USERID   JOB (ACCT),'ASSEMBLE AND LINK',\n//             CLASS=B,\n//             MSGCLASS=X,MSGLEVEL=(1,1),\n//             REGION=18M,TIME=1230,\n//             NOTIFY=&SYSUID\n//*\n//*            (ACCTCODE,ACCTCODE,ESTTIME,ESTLINE,ESTCARDS,FORMS,\n//*            COPIES,LOG,LINECOUNTPERPAGE)\n//*\n/*JOBPARM SYSAFF=*            <=Which JES2 MAS Member to run on\n/*JOBPARM LINES=9999\n//*\n//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n//* LET JES2 DYNAMICALLY ALLOCATE THIS DATASET TO SEARCH FOR PROCS.\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//MYPROCS  JCLLIB ORDER=(&SYSUID..PROCLIB)\n//*\n//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n//* INVOKE THE PROCEDURE TO ASSEMBLE AND LINK THE SOURCE TO AN LMOD.\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//STEP010  EXEC PROC=ASM2LMOD,MBRNAME=PR2HX\n//LKED.LNKPARM  DD  *\n  SETCODE AC(0)\n  NAME    PR2HX(R)\n/*\n//*\n//\n./ ADD NAME=PR42HX   0100-07214-07214-1034-00010-00010-00000-CNTL\n//SBGOLOBM JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//*     PRINT TO HEX PROGRAM - EXECUTION - FOUR-LINE PRINT\n//*\n//LOAD EXEC PGM=PR42HX\n//STEPLIB  DD DISP=SHR,DSN=SBGOLOB.LOAD\n//SYSUT1   DD DISP=SHR,DSN=SBGOLOB.B.DATA(PDSLOADL)\n//SYSUT2   DD DISP=SHR,DSN=SBGOLOB.B.DATA(PDSLOADR)\n//SYSPRINT DD SYSOUT=*\n./ ADD NAME=PR42HX$A 0100-07214-07214-1034-00027-00027-00000-CNTL\n//USERID   JOB (ACCT),'ASSEMBLE AND LINK',\n//             CLASS=B,\n//             MSGCLASS=X,MSGLEVEL=(1,1),\n//             REGION=18M,TIME=1230,\n//             NOTIFY=&SYSUID\n//*\n//*            (ACCTCODE,ACCTCODE,ESTTIME,ESTLINE,ESTCARDS,FORMS,\n//*            COPIES,LOG,LINECOUNTPERPAGE)\n//*\n/*JOBPARM SYSAFF=*            <=Which JES2 MAS Member to run on\n/*JOBPARM LINES=9999\n//*\n//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n//* LET JES2 DYNAMICALLY ALLOCATE THIS DATASET TO SEARCH FOR PROCS.\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//MYPROCS  JCLLIB ORDER=(&SYSUID..PROCLIB)\n//*\n//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n//* INVOKE THE PROCEDURE TO ASSEMBLE AND LINK THE SOURCE TO AN LMOD.\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//STEP010  EXEC PROC=ASM2LMOD,MBRNAME=PR42HX\n//LKED.LNKPARM  DD  *\n  SETCODE AC(0)\n  NAME    PR42HX(R)\n/*\n//*\n//\n./ ADD NAME=URLCHECK 0100-07214-07214-1034-00017-00017-00000-CNTL\n//*\n//* LIB: DSN=&SYSUID..CNTL(URLCHECK)\n//* GDE: KENNETH E. TOMIAK\n//* DOC: THIS JOB CONNECTS TO A WEB SERVER AND GETS THE\n//*      LAST-MODIFIED DATE OF THE FILE.\n//*\n//STEP001 EXEC PGM=IKJEFT1B,PARM='%URLCHECK URLS HTML',\n//             REGION=8M,DYNAMNBR=75,TIME=1200\n//SYSTSPRT DD  SYSOUT=*\n//SYSPROC  DD  DISP=SHR,DSN=&SYSUID..CLIST\n//SYSEXEC  DD  DISP=SHR,DSN=&SYSUID..REXX\n//SYSTSIN  DD  DUMMY\n//URLS     DD  DISP=OLD,DSN=&SYSUID.DATA(URLS)\n//HTML     DD  SYSOUT=*\n//*\n//*SYSTCPD  DD  DISP=SHR,DSN=SYS1.TCPPARMS(TCPDATAP)   WHEN REQUIRED\n//\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PROCLIB": {"ttr": 5380, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x07!O\\x01\\x07!O\\x112\\x00\\x86\\x00\\x86\\x00\\x00\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2007-08-02T00:00:00", "modifydate": "2007-08-02T11:32:00", "lines": 134, "newlines": 134, "modlines": 0, "user": "TOMIAK"}, "text": "./ ADD NAME=$$$INDEX 0100-07214-07214-1131-00014-00014-00000-PROCLIB\n\nThis dataset (sub-directory) contains some sample PROCedures used\nto transform source and object decks into load modules, allocate\ncommon datasets, and show how to almost have SYSTEM symbolics\nin a batch job.\n\nMember   Purpose of the member\n-------- --------------------------------------------------------------\n$$$INDEX This member\nASM2LMOD PROC to assemble and link source to an LMOD.\nASM2OBJ  PROC to assemble and save OBJECT deck.\nIEASYM00 Set statements to simulate SYSTEM Symbolics.\nOBJ2LMOD PROC to link an OBJECT deck to an LMOD.\nTSOISPF  PROCedure to allocate TSO and ISPF datasets.\n./ ADD NAME=ASM2LMOD 0100-07214-07214-1131-00032-00032-00000-PROCLIB\n//ASM2LMOD PROC MBRNAME=DUMMY\n//*\n//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n//* ASSEMBLE THE SOURCE INTO AN OBJECT DECK.\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//ASM     EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD)\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB\n//         DD  DISP=SHR,DSN=SYS1.MODGEN\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  DISP=SHR,DSN=&SYSUID..SRCLIB(&MBRNAME)\n//SYSLIN   DD  DISP=(NEW,PASS),DSN=&&OBJDECK,\n//             UNIT=VIO,\n//             SPACE=(TRK,1),\n//             DCB=BLKSIZE=27920,\n//*\n//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n//* LINK THE OBJECT DECK INTO A LOAD MODULE.\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//IFASM    IF  (ASM.RC EQ 0) THEN\n//LKED    EXEC PGM=IEWBLINK,\n//             PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//OBJLIB   DD  DISP=SHR,DSN=&SYSUID..OBJLIB\n//EXELIB   DD  DISP=SHR,DSN=&SYSUID..EXELIB\n//SYSLMOD  DD  DISP=SHR,DSN=&SYSUID..EXELIB\n//SYSLIN   DD  DISP=(OLD,DELETE),DSN=&&OBJDECK\n//         DD  DDNAME=LNKPARM\n//*\n//IFASM   ENDIF\n//        PEND\n./ ADD NAME=ASM2OBJ  0100-07214-07214-1131-00014-00014-00000-PROCLIB\n//ASM2OBJ  PROC MBRNAME=DUMMY\n//*\n//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n//* ASSEMBLE THE SOURCE INTO AN OBJECT DECK.\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//ASM     EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD)\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB\n//         DD  DISP=SHR,DSN=SYS1.MODGEN\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  DISP=SHR,DSN=&SYSUID..SRCLIB(&MBRNAME)\n//SYSLIN   DD  DISP=OLD,DSN=&SYSUID..OBJLIB(&MBRNAME)\n//*\n//        PEND\n./ ADD NAME=IEASYM00 0100-07214-07214-1131-00010-00010-00000-PROCLIB\n//*\n//* SYSTEM SYMBOLICS FOR BATCH JOBS ON SYSTEM ZOS1\n//*\n//* THIS WORKS BEST IF YOU HAVE ONE PER SYSTEM IN A NON-SHARED SYSTEM\n//* UNIQUE PROCLIB ACCESSIBLE TO JES2.\n//*\n//LPARNAME SET LPARNAME=ZOSPROD\n//SYSPLEX  SET SYSPLEX=PLEXNAME\n//SYSNAME  SET SYSNAME=ZOS1\n//*\n./ ADD NAME=OBJ2LMOD 0100-07214-07214-1131-00015-00015-00000-PROCLIB\n//OBJ2LMOD PROC MBRNAME=DUMMY\n//*\n//* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n//* LINK THE OBJECT DECK INTO A LOAD MODULE.\n//* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n//LKED    EXEC PGM=IEWBLINK,\n//             PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSALLDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//EXELIB   DD  DISP=SHR,DSN=&SYSUID..EXELIB\n//SYSLMOD  DD  DISP=SHR,DSN=&SYSUID..EXELIB\n//SYSLIN   DD  DISP=SHR,DSN=&SYSUID..OBJLIB(&MBRNAME)\n//         DD  DDNAME=LNKPARM\n//*\n//        PEND\n./ ADD NAME=TSOISPF  0100-07214-07214-1131-00043-00043-00000-PROCLIB\n//TSOISPF PROC MEMORY='18M',\n//             SYS1='SYS1.'      <== SOME SHOPS DO AND SOME DO NOT\n//*\n//TSOISPF EXEC PGM=IKJEFT1B,PARM='',\n//             REGION=&MEMORY,DYNAMNBR=200\n//*\n//* TSO DATASETS\n//*\n//SYSTSPRT DD  SYSOUT=*\n//SYSPROC  DD  DISP=SHR,DSN=&SYSUID..CLIST                    <= YOURS\n//SYSEXEC  DD  DISP=SHR,DSN=&SYSUID..REXX                     <= YOURS\n//*\n//* ISPF DATASETS\n//*\n//ISPLST   DD  DISP=(NEW,DELETE),UNIT=SYSALLDA,SPACE=(CYL,(1,1)),\n//             DCB=(LRECL=121,BLKSIZE=1210,RECFM=FBA),DSN=&&LST\n//ISPLST1  DD  DISP=(NEW,DELETE),UNIT=SYSALLDA,SPACE=(CYL,(1,1)),\n//             DCB=(LRECL=121,BLKSIZE=1210,RECFM=FBA),DSN=&&LST1\n//ISPLST2  DD  DISP=(NEW,DELETE),UNIT=SYSALLDA,SPACE=(CYL,(1,1)),\n//             DCB=(LRECL=121,BLKSIZE=1210,RECFM=FBA),DSN=&&LST2\n//ISPLOG   DD  DISP=(NEW,DELETE),UNIT=SYSALLDA,SPACE=(CYL,(1,1)),\n//             DCB=(LRECL=121,BLKSIZE=1210,RECFM=FBA),DSN=&&LOG\n//ISPLOG1  DD  DISP=(NEW,DELETE),UNIT=SYSALLDA,SPACE=(CYL,(1,1)),\n//             DCB=(LRECL=121,BLKSIZE=1210,RECFM=FBA),DSN=&&LOG1\n//ISPLOG2  DD  DISP=(NEW,DELETE),UNIT=SYSALLDA,SPACE=(CYL,(1,1)),\n//             DCB=(LRECL=121,BLKSIZE=1210,RECFM=FBA),DSN=&&LOG2\n//ISPLLIB  DD  DISP=SHR,DSN=&SYSUID..EXELIB                   <= YOURS\n//ISPMLIB  DD  DISP=SHR,DSN=&SYSUID..MSGS                     <= YOURS\n//         DD  DISP=SHR,DSN=&SYS1.ISP.SISPMENU\n//ISPPLIB  DD  DISP=SHR,DSN=&SYSUID..PANELS                   <= YOURS\n//         DD  DISP=SHR,DSN=&SYS1.ISP.SISPPENU\n//ISPPROF  DD  DISP=(NEW,PASS),DSN=&&ISPPROF,\n//             UNIT=SYSALLDA,\n//             SPACE=(TRK,(5,1,10)),\n//             DSORG=PO,RECFM=FB,LRECL=80,BLKSIZE=3120\n//ISPSLIB  DD  DISP=SHR,DSN=&SYSUID..SKELS                    <= YOURS\n//         DD  DISP=SHR,DSN=&SYS1.ISP.SISPSENU\n//         DD  DISP=SHR,DSN=&SYS1.ISP.SISPSLIB\n//ISPTABL  DD  DISP=SHR,DSN=&SYSUID..TABLES                   <= YOURS\n//ISPTLIB  DD  DISP=SHR,DSN=&SYSUID..TABLES                   <= YOURS\n//         DD  DISP=SHR,DSN=&SYS1.ISP.SISPTENU\n//*\n//        PEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZOSUTIL": {"ttr": 5383, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x07!O\\x01\\x07!O\\x11&'='=\\x00\\x00\\xe3\\xd6\\xd4\\xc9\\xc1\\xd2@@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2007-08-02T00:00:00", "modifydate": "2007-08-02T11:26:00", "lines": 10045, "newlines": 10045, "modlines": 0, "user": "TOMIAK"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT760/FILE760.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT760", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}