{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011100000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1352078, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 9, "INMDSNAM": "CBT.V500.FILE025.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1352078, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1352078, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE025.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x16\\x07'", "DS1TRBAL": "b'\\x7f\\xc4'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00:\\x00\\x07\\x00;\\x00\\x0e\\x00\\x17'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$OLDSTF": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x98&\\x9f\\x01\\x00)\\x9f\\x117\\x00#\\x00 \\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1998-09-26T00:00:00", "modifydate": "2000-10-25T11:37:00", "lines": 35, "newlines": 32, "modlines": 0, "user": "WSBG"}, "text": "I've saved everything that used to be in this file, in several members.\n\nIf any materials appear to be missing, look in member RESTESA, which\n   was saved from the last version of this file.\n\nThe original version of this file is in member OLDVERS.\n\n\nThe ESA version 4 version of this file is in two members:\n\n                OLDESAVR\n                RESTESA         which should be combined into one pds.\n\n      These members are in PDSLOAD (IEBUPDTE with ISPF stats\n      preserved) format.  If you use PDSLOAD (File 035 - source\n      File 093) to reconstitute PDS'es from these members, then\n      you'll get ISPF statistics.  If you use IEBUPDTE, you won't.\n      A model PDSLOAD job is included here (member $PDSLOAD)--for OLD.\n      A model PDSLOAD job is included here (member $PDSLOAE)--for ESA.\n\nThe current version (OS/390 version 2.4), is in this pds, with\nseparate members.\n\n\nI've done the packaging of the old versions of this file.\n\n     Sam Golob\n     P.O. Box 906\n     Tallman, NY 10982-0906\n\n     email ids:   sbgolob@ibm.net   and    sbgolob@aol.com\n\n\n\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$DISCLAM": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x98&\\x8f\\x00\\x98&\\x8f\\x16\\x06\\x00\\x14\\x00\\x14\\x00\\x00\\xd4\\xe4\\xd9\\xc6@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1998-09-25T00:00:00", "modifydate": "1998-09-25T16:06:00", "lines": 20, "newlines": 20, "modlines": 0, "user": "MURF"}, "text": "//*******************************************************************   DOC FILE\n//*                                                                 *   DOC FILE\n//*            D I S C L A I M E R    S E C T I O N                 *   DOC FILE\n//*                                                                 *   DOC FILE\n//*******************************************************************   DOC FILE\n//*                                                                 *   DOC FILE\n//* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *   DOC FILE\n//* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        *   DOC FILE\n//* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *   DOC FILE\n//* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *   DOC FILE\n//* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *   DOC FILE\n//* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *   DOC FILE\n//* SUPPLIED .                                                      *   DOC FILE\n//*                                                                 *   DOC FILE\n//* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *   DOC FILE\n//* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *   DOC FILE\n//* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *   DOC FILE\n//* FUTURE .                                                        *   DOC FILE\n//*                                                                 *   DOC FILE\n//*******************************************************************   DOC FILE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$DOC": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x006\\x00\\x93\\x07_\\x01\\x024\\x9f\\x13\\x07\\x00\\x8b\\x00\\xea\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "1993-03-16T00:00:00", "modifydate": "2002-12-15T13:07:36", "lines": 139, "newlines": 234, "modlines": 0, "user": "SBGOLOB"}, "text": "*******************************************************************\n*                                                                 *\n*            D I S C L A I M E R    S E C T I O N                 *\n*                                                                 *\n*******************************************************************\n*                                                                 *\n* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *\n* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        *\n* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *\n* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *\n* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *\n* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *\n* SUPPLIED .                                                      *\n*                                                                 *\n* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *\n* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *\n* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *\n* FUTURE .                                                        *\n*                                                                 *\n*******************************************************************\n___________email:  pmurphy1@txu.com ____________________________________\n09/25/98 - PAT MURPHY 972-216-3139\n           09/25/98 - WORKS WITH OS390 2.4 AND SYSPLEX.  FIXED AN OLD\n           PROBLEM WITH CONSOLES THAT DID NOT SUPPORT EXTENDED\n           DATASTREAM.\n\nCONS390  -  CONSOLE PROGRAM.  DISPLAYS CONSOLES AS A\nTSO COMMAND UNDER ISPF OR TSO.  FEATURES:\n\n        HIGHLIGHTED MESSAGES ON CONSOLE ARE HIGHLIGHTED\n        AUTOMATIC UPDATE FEATURE\n        ENTER OPERATOR COMMANDS\n        DISPLAY LAST IPL AND IF CLPA WAS DONE  (PF12)\n\nINSTALL INSTRUCTIONS:\n1. UPDATE THE ASSEMBLY JCL CALLED CONS390J TO REFLECT LIBRARIES AT\nYOUR INSTALLATION.\n2. ENTER 'TSO CONSOLE' FROM ISPF OR CONSOLE FROM THE READY STATE IN TSO.\n3. PF-1 WILL DISPLAY PFKEY DEFINITIONS.\n4. THE AUTOMATIC UPDATE AT LESS THAN 2 SECONDS IS HARD TO STOP ON\n3290'S. USE AUTOMATIC UPDATES OF 4 SECONDS OR MORE FOR THESE.\n5. DOES A TGET ON MOD2/5'S TO ALLOW FOR MOD 5'S THAT DID NOT DISPLAY\nCORRECTLY UNDER THE OLD ONE.\n6. FOR A SYSPLEX ENVIRONMENT, IT CHECKS TO SEE IF THE CONSOLE IS ACTIVE\nON THAT SYSTEM.  IF NO CONSOLE IS ACTIVE ON THAT SYSTEM IT WILL ABEND.\n________________________________________________________________________\n09/28/98 - PAT MURPHY 972-216-3139\n\nMTTESA   -  FOR OS390 USE MTT390J TO ASSEMBLE.  FOR ESA USE MTTESAJ.\nUSES CROSS MEMORY SERVICES TO READ AND DISPLAY THE MASTER\nTRACE TABLE AS A TSO COMMAND PROCESSOR.  THIS IS THE OS390 VERSION\nOF THE PROGRAM THAT ORIGINATED AS MTT UNDER SP1.3 AND STILL WORKS\nWITHOUT CHANGES ON OS390.  WHAT IT DOES:\n        READ/DISPLAY MASTER TRACE TABLE\n        ENTER OPERATOR COMMANDS\n        CAN USE FIND TO SEARCH THE MASTER TRACE TABLE\n              F 'SEARCH ARGUMENT IN QUOTES'\n\nINSTALL INSTRUCTIONS:\n1.  INSERT MTT IN IKJTSOXX FOR THE MTT COMMAND,\nAND ISSUE THE TSO COMMAND FOR TSO/E 2.1.1 AND ABOVE,\n     PARMLIB UPDATE(XX)\nTHIS WILL INVOKE THE MTT COMMAND AUTHORIZED AND THE SVC CAN BE NOOP'D.\nHAS TO BE IN A LINKLIST OR STEPLIB - CAN'T BE AUTHORIZED FROM ISPLLIB.\n2. UPDATE THE ASSEMBLY JCL CALLED MTT390J TO REFLECT LIBRARIES AT\nYOUR INSTALLATION.\n3. ENTER 'TSO MTT' FROM ISPF OR MTT FROM THE READY STATE IN TSO.\n4. PF-1 WILL DISPLAY PFKEY DEFINITIONS.\n5. IKJTSO00 SAMPLE MEMBER PROVIDED.\n6. ADD USERIDS AFTER THE DC FOR TABLE OR WILL WORK FOR OPER AUTHORITY.\n________________________________________________________________________\n07/28/95 - PAT MURPHY 972-216-3139\n\nMTTESA   -  USES CROSS MEMORY SERVICES TO READ AND DISPLAY THE MASTER\nTRACE TABLE AS A TSO COMMAND PROCESSOR.  THIS IS THE XA VERSION\nOF THE PROGRAM THAT ORIGINATED AS MTT UNDER SP1.3 AND STILL WORKS\nWITHOUT CHANGES ON MVS 5.1.  WHAT IT DOES:\n        READ/DISPLAY MASTER TRACE TABLE\n        ENTER OPERATOR COMMANDS\n        CAN USE FIND TO SEARCH THE MASTER TRACE TABLE\n              F 'SEARCH ARGUMENT IN QUOTES'\n\nINSTALL INSTRUCTIONS:\n1.  INSERT MTT IN IKJTSOXX FOR THE MTT COMMAND,\nAND ISSUE THE TSO COMMAND FOR TSO/E 2.1.1 AND ABOVE,\n     PARMLIB UPDATE(XX)\nTHIS WILL INVOKE THE MTT COMMAND AUTHORIZED AND THE SVC CAN BE NOOP'D.\nHAS TO BE IN A LINKLIST OR STEPLIB - CAN'T BE AUTHORIZED FROM ISPLLIB.\n2. UPDATE THE ASSEMBLY JCL CALLED MTTESAJ TO REFLECT LIBRARIES AT\nYOUR INSTALLATION.\n3. ENTER 'TSO MTT' FROM ISPF OR MTT FROM THE READY STATE IN TSO.\n4. PF-1 WILL DISPLAY PFKEY DEFINITIONS.\n5. IKJTSO00 SAMPLE MEMBER PROVIDED.\n6. ADD USERIDS AFTER THE DC FOR TABLE OR WILL WORK FOR OPER AUTHORITY.\n________________________________________________________________________\n04/09/90 - PAT MURPHY 972-216-3139 TEXAS UTILITIES SERVICES\n         - REVISED 02/09/93 FOR OFFSET TO MIGRAT IN LISTCAT OUTPUT\n           APPARENTLY THIS OFFSET CHANGED.  WE ARE NOW MVS 4.2.2\n           AND DFP 3.3.\nKLEENUP  -  REXX EXEC TO GENERATE HMIGRATE COMMANDS FOR ALL BUT\nTHE CURRENT GENERATIONS OF THE REQUESTED DISK DATASET.\n\n REXX EXEC - NEEDS TO GO IN THE SYSPROC OR SYSEXEC DD.\n KLEENUP COMMAND FORMAT:\n KLEENUP GDGDSN MMM NNN\n IT WILL GENERATE HSM COMMANDS TO MIGRATE DISK GDG'S,  SPECIFY\n MIGRATIONLEVEL 1 OR 2 BY PUTTING ML1 OR ML2 AFTER THE DSN AT  MMM\n CAN SPECIFY NUMBER TO KEEP ON DASD BY A NUMBER FOLLOWING THIS NNN\n EXAMPLE:\n           KLEENUP SYS2.LISTCAT.USERCAT ML2 1\n THIS WILL ISSUE COMMANDS TO MIGRATE ALL BUT THE CURRENT GEN. TO\n MIGRATIONLEVEL 2.\n           KLEENUP SYS2.LISTCAT.USERCAT\n THIS WILL ISSUE COMMANDS TO MIGRATE ALL BUT THE CURRENT GEN. TO\n MIGRATIONLEVEL 1 BY DEFAULT.\n\nINSTALL INSTRUCTIONS:\n1. COPY KLEENUP INTO THE SYSPROC OR SYSEXEC CONCATENATION.\n2. KLEENUPJ IS A SAMPLE OF HOW WE USE IT.\n\n________________________________________________________________________\n04/10/90 - TOM BURNS  972-216-3139 TEXAS UTILITIES SERVICES\n\nSASSRCHD -SAS PROGRAM WRITTEN BY TOM BURNS, SENIOR SYSTEMS PROGRAMMER\n          AT TEXAS UTILITIES SERVICES, THAT READS SMF DATA AT MVS 3.1.3\n          LEVEL AND GIVES A REPORT ON WHO OPENED NONVSAM DATASETS, THEIR\n          BLOCKSIZE THAT THEY WERE OPENED WITH, AND WHO DELETED THEM.\n\nSASSRCHV - SAS PROGRAM WRITTEN BY TOM BURNS, SENIOR SYSTEMS PROGRAMMER\n           AT TEXAS UTILITIES SERVICES, THAT READS SMF DATA AT MVS 3.1.3\n           LEVEL AND GIVES A REPORT ON WHO OPENED VSAM DATASETS AND\n           WHO DELETED THEM.\n\n\n________________________________________________________________________\n07/28/95 - PAT MURPHY 972-216-3139 TEXAS UTILITIES SERVICES\n\nZTPPWTO  -READ 80 BYTE RECORDS FROM DD INPUT AND WTO TO THE CONSOLE.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$PDSLOAD": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x98&\\x9f\\x00\\x98&\\x9f\"#\\x00\\r\\x00\\r\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1998-09-26T00:00:00", "modifydate": "1998-09-26T22:23:00", "lines": 13, "newlines": 13, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBL JOB (ACCT#),PDSLOAD,\n// NOTIFY=&SYSUID,\n// CLASS=A,MSGCLASS=X\n//** --------------------------------------------- **/\n//**                                               **/\n//**    PDSLOAD PROGRAM EXECUTION SAMPLE           **/\n//**                                               **/\n//** --------------------------------------------- **/\n//LOAD EXEC PGM=PDSLOAD\n//STEPLIB  DD DISP=SHR,DSN=SBGOLOB.FILE035.PDS\n//SYSUT1   DD DISP=SHR,DSN=SBGOLOB.FILE025.PDS(OLDVERS) <== OTHER NAME\n//SYSPRINT DD SYSOUT=*\n//SYSUT2   DD DISP=SHR,DSN=SBGOLOB.OLD.FILE025.PDS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$PDSLOAE": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x98&\\x9f\\x00\\x98&\\x9f\"%\\x00\\x13\\x00\\x13\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1998-09-26T00:00:00", "modifydate": "1998-09-26T22:25:00", "lines": 19, "newlines": 19, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBL JOB (ACCT#),PDSLOAD,\n// NOTIFY=&SYSUID,\n// CLASS=A,MSGCLASS=X\n//** --------------------------------------------- **/\n//**                                               **/\n//**    PDSLOAD PROGRAM EXECUTION SAMPLE           **/\n//**                                               **/\n//** --------------------------------------------- **/\n//LOAD1 EXEC PGM=PDSLOAD\n//STEPLIB  DD DISP=SHR,DSN=SBGOLOB.FILE035.PDS\n//SYSUT1   DD DISP=SHR,DSN=SBGOLOB.FILE025.PDS(OLDESAVR) <== OTHER NAME\n//SYSPRINT DD SYSOUT=*\n//SYSUT2   DD DISP=SHR,DSN=SBGOLOB.ESA.FILE025.PDS\n//*\n//LOAD2 EXEC PGM=PDSLOAD\n//STEPLIB  DD DISP=SHR,DSN=SBGOLOB.FILE035.PDS\n//SYSUT1   DD DISP=SHR,DSN=SBGOLOB.FILE025.PDS(RESTESA) <== OTHER NAME\n//SYSPRINT DD SYSOUT=*\n//SYSUT2   DD DISP=SHR,DSN=SBGOLOB.ESA.FILE025.PDS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BEGIN": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x98&\\x8f\\x00\\x98&\\x8f\\x16\\x06\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd4\\xe4\\xd9\\xc6@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1998-09-25T00:00:00", "modifydate": "1998-09-25T16:06:00", "lines": 27, "newlines": 27, "modlines": 0, "user": "MURF"}, "text": "         MACRO\n         BEGIN &PROGRAM=\nR0       EQU   0\nR1       EQU   1                  R\nR2       EQU   2                    E\nR3       EQU   3                      G\nR4       EQU   4                        I\nR5       EQU   5                          S\nR6       EQU   6                            T\nR7       EQU   7                              E\nR8       EQU   8                                R\nR9       EQU   9                  E\nR10      EQU   10                   Q\nR11      EQU   11                     U\nR12      EQU   12                       A\nR13      EQU   13                         T\nR14      EQU   14                           E\nR15      EQU   15                             S\n         USING *,15\n         B     28(R15)\n         DC    CL8'&PROGRAM'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         STM   14,12,12(13)\n         DROP  15\n         EJECT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CONESA": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x97\\x19o\\x00\\x98&\\x8f\\x16\\x05\\x03\\xdd\\x03\\xd3\\x00\\x00\\xd4\\xe4\\xd9\\xc6@@@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1997-07-15T00:00:00", "modifydate": "1998-09-25T16:05:00", "lines": 989, "newlines": 979, "modlines": 0, "user": "MURF"}, "text": "*******************************************************************\n*                                                                 *\n*            D I S C L A I M E R    S E C T I O N                 *\n*                                                                 *\n*******************************************************************\n*                                                                 *\n* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *\n* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        *\n* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *\n* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *\n* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *\n* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *\n* SUPPLIED .                                                      *\n*                                                                 *\n* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *\n* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *\n* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *\n* FUTURE .                                                        *\n*                                                                 *\n*******************************************************************\n         MACRO\n         BEGIN &PROGRAM=\nR0       EQU   0\nR1       EQU   1                  R\nR2       EQU   2                    E\nR3       EQU   3                      G\nR4       EQU   4                        I\nR5       EQU   5                          S\nR6       EQU   6                            T\nR7       EQU   7                              E\nR8       EQU   8                                R\nR9       EQU   9                  E\nR10      EQU   10                   Q\nR11      EQU   11                     U\nR12      EQU   12                       A\nR13      EQU   13                         T\nR14      EQU   14                           E\nR15      EQU   15                             S\n         USING *,15\n         B     28(R15)\n         DC    CL8'&PROGRAM'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         STM   14,12,12(13)\n         DROP  15\n         EJECT\n         MEND\n         TITLE 'CONSOLE DISPLAY'\n***********************************************************************\n*        FOR AUTHORIZATION - INSERT USERIDS THAT CAN USE IT INTO THE  *\n*        TABLE.  TABLEND IS THE LAST ENTRY IN THE TABLE.              *\n*                                                                     *\n*        F TABLEND  LAST                                              *\n*                                                                     *\n*        DISPLAY MVS CONSOLE DISPLAY WITH AUTOMATIC REFRESH OF SCREEN *\n*        TO PRESENT A CONSOLE APPEARANCE.                             *\n*                                                                     *\n*        USED THE BASIC CROSS MEMORY CONSOLE BUFFER READ FROM THE     *\n*        CDF PROGRAM ON THE SHARE TAPE, AND MODIFIED TO A COMMAND     *\n*        PROCESSOR HIGHLIGHTING THE HIGHLIGHTED MESSAGES - P.MURPHY   *\n*                                                                     *\n*                                                                     *\n***********************************************************************\nZTPR0200 CSECT\n         BEGIN PROGRAM=ZTPR0200\n         LR    R12,R15\n         USING ZTPR0200,R12\n         LR    R2,R1\n         GETMAIN R,LV=WORKLENG\n         LR    R3,R1\n         ST    R13,4(R3)      SAVE THE CALLER'S R13\n         ST    R3,8(,R13)\n         LR    R13,R3\n         USING WORKAREA,R13\n         ST    R2,SAVECPPL\n         USING CPPL,R2\n         L     R6,CPPLPSCB\n         DROP  R2\n         USING PSCB,R6\n         MVC   USERID,PSCBUSER\n         DROP  R6\n         MVI   BLANKS,X'40'\n         MVC   BLANKS+1(79),BLANKS\n         MVI   CONSFLAG,X'00'\n         MVI   USERFLAG,X'00'\n         MVI   CNSLFLAG,X'00'\n         MVI   THRUFLAG,X'00'\n         MVI   ISSUFLAG,X'00'\n         MVC   CMDLINE,BLANKS\n         LA    R8,TABLE\nVERLOOP  CLC   0(7,R8),USERID\n         BE    VEROK\n         CLC   0(4,R8),HEXFS\n         BE    NOAUTH\n         LA    R8,8(,R8)\n         B     VERLOOP\nVEROK    EQU   *\n         MVI   AUTOFLAG,X'00' AUTO MODE FLAG\n         MVI   RESHOWFL,X'00' RESHOW INDICATOR\n         MVI   MOD5FLAG,X'00' FLAG FOR MOD 5\n         MVI   SCREEN,X'C3' WCC\n         MVC   CLEAR(13),CLR  CLEAR SCREEN CONTROL CHARS\n         GTSIZE\n         LTR   R0,R0              DISPLAY DEVICE?\n         BZ    FREESKIP           YES, GO FREE AND RETURN\n         CH    R1,EIGHTY          80 CHAR LINES\n         BNE   CHEKM5             NO, SET MODE 2\n         CH    R0,FORTY3          MOD 4?\n         BE    SETM4              YES, BRANCH\n         CH    R0,THIRTY2         MOD 3?\n         BE    SETM3              YES, BRANCH\nSETM2    TPUT  MOD2,3\n         TGET  REPLY,50\n         LA    R3,24              22 LINES PER SCREEN\n         MVC   CURSOR,=X'5CF0'    ROW 24 COL 2\n         MVC   ENDOFSCR,=X'5D7F'    ROW 24 COL 80\n         MVC   TPUTLEN,=AL4(24*84+1) LENGTH OF TPUT\n         B     PROCESS\nNOMVS    MVI   USERFLAG,X'FF'\n         LA    R8,8(,R8)\n         B     VERLOOP\nCHEKM5   CH    R0,=H'27'          27 LINES?\n         BNE   SETM2\n         CH    R1,=H'132'         132 WIDTH?\n         BNE   SETM2\nSETM5    LA    R3,27              27 LINES PER SCREEN\n         MVI   MOD5FLAG,X'FF'\n         MVC   TPUTLEN,=AL4(27*84+1) LENGTH OF TPUT\n         MVC   ENDOFSCR,=X'F76B'  ROW 27 COL 132\n         MVC   CURSOR,=X'F5E8'    ROW 27 COL 2 IC\n         B     PROCESS\nSETM3    LA    R3,32              22 LINES PER SCREEN\n         MVC   TPUTLEN,=AL4(32*84+1) LENGTH OF TPUT\n         MVC   ENDOFSCR,=X'E77E'  ROW 32 COL 80\n         MVC   CURSOR,=X'E6F0'    ROW 32 COL 2 IC\n         B     PROCESS\nSETM4    LA    R3,43              22 LINES PER SCREEN\n         MVC   TPUTLEN,=AL4(43*84+1) LENGTH OF TPUT\nPROCESS  ST    R3,NUMLINES\n         MVI   HELPFLAG,X'00'\n         MVI   CMDFLAG,X'00'\n         LA    R1,16\n         L     R1,0(R1)\n         USING CVT,R1\n         L     R1,CVTASVT\n         DROP  R1\n         USING ASVT,R1\n         L     R5,ASVTMAXU\n         LA    R15,ASVTENTY-4\nASVTLOOP BCTR  R5,0\n         LTR   R5,R5\n         BZ    CONABEND\n         LA    R15,4(,R15)\n         ICM   R6,15,0(R15)\n         BM    ASVTLOOP\n         USING ASCB,R6\n         ICM   R7,15,ASCBJBNS\n         BZ    ASVTLOOP\n         CLC   =C'CONSOLE',0(R7)\n         BNE   ASVTLOOP\n         SR    R1,R1\n         LH    R1,ASCBASID\n         DROP  R1,R6\nSTORECON ST    R1,CONSASID\n         BAL   R3,AUTHRIZ\n         AXRES AXLIST=AXLIST      RESERVE AN AX\n         L     R1,CONSASID        'CONSOLE' ASID\n         AXEXT ASID=(1)           EXTRACT AX OF 'CONSOLE'IN R0\n         AXSET AX=(0)             SET OUR AX TO THAT OF CONSOLE\n         B     SHOWCONS\nAXFREE   DS    0H\n         AXFRE AXLIST=AXLIST\n         BAL   R3,UNAUTH\nSHOWRTRN DS    0H\nFREESKIP LR    R3,R13\n         L     R13,SAVEAREA+4 RESTORE THE CALLER'S R13\n         FREEMAIN RC,A=(3),LV=WORKLENG\n         SR    R15,R15\n         RETURN (14,12),RC=(15)\nSHOWCONS DS    0H\n         STFSMODE ON,INITIAL=YES  FULL SCREEN MODE ON\n         TPUT  CLEAR,13,FULLSCR\n*---------------------------------------------------------------------*\n*          BUILD A TABLE OF UCM ADDRESSES (ONE PER CONSOLE)           *\n*---------------------------------------------------------------------*\nBLDUCMS  L     R4,16              R4 = ADDR OF CVT\n         USING CVT,R4\n         L     R4,CVTCUCB         R4 = ADDR OF 'CUCB' (UCM BASE)\n         DROP  R4\n         USING UCM,R4\n         L     R5,UCMVEA          R5 = ADDR OF FIRST UCM ENTRY\n         L     R6,UCMVEZ          R6 = LENGTH OF EACH UCM ENTRY\n         L     R7,UCMVEL          R7 = ADDR OF LAST UCM ENTRY\n         LA    R8,UCMTAB+4        R8 = ADDR OF UCMTAB\n         LA    R9,UCMTABE         R9 = ADDR OF END OF UCMTAB\n         XR    R2,R2              R2 = 0 (NUMBER OF VALID UCMS)\nUCMLOOP  ST    R5,0(0,R8)         SAVE UCM ADDRESS IN UCMTAB\n         LA    R2,1(0,R2)         R2  = R2  + 1  (ONE MORE UCM)\n         LA    R8,4(0,R8)         R8 = ADDR OF NEXT UCMTAB ENTRY\n         CR    R8,R9              DOES R8 POINT PAST END OF UCMTAB?\n         BNL   UCMDONE            YES; LEAVE LOOP\n         AR    R5,R6              R5 = ADDR OF NEXT UCM ENTRY\n         CR    R5,R7              DOES R5 POINT PAST UCM ENTRIES?\n         BL    UCMLOOP            NOPE; KEEP GOING\nUCMDONE  STH   R2,NUMUCMS         SAVE NUMBER OF UCMS FOUND\n         CLI   CNSLFLAG,X'FF'\n         BNE   SETMAST\n         MVC   OLDCONS,CONSOLE\n         L     R4,CONSOLE\n         LA    R4,1(,R4)\n         B     MASTSCAN\n         DROP  R4\n*---------------------------------------------------------------------*\n*        SCAN THE UCM FOR THE MASTER CONSOLE AS THE DEFAULT           *\n*---------------------------------------------------------------------*\nSETMAST  SR    R4,R4\n         ST    R4,CONSOLE\nMASTSCAN LA    R5,UCMTAB          SET POINTER TO UCM ADDRESS TABLE\nCKNUMUCM CH    R4,NUMUCMS         IS NUMBER TOO HIGH?\n         BNH   MASTCONT           NO, CONTINUE\n         CLI   CNSLFLAG,X'FF'\n         BNE   CONCHECK\n         CLI   THRUFLAG,X'FF'\n         BE    NOCONS\n         MVI   THRUFLAG,X'FF'\n         SR    R4,R4              START W/ FIRST ENTRY\n         B     MASTCONT\nCONABEND ABEND 1\nNOCONS   TPUT  MSGNO2,43\n         L     R1,SAVECPPL\n         LINK  EP=ZTPR0205\n         TPUT  CLEAR,13,FULLSCR\n         B     AXFREE\nMSGNO2   DC    CL43'ALL CONSOLES OFFLINE, GOING TO MASTER TRACE'\nCONCHECK MVI   CNSLFLAG,X'FF'\n         MVI   THRUFLAG,X'FF'\n         B     SETMAST\nMASTCONT SLL   R4,2               MAKE CONSOLE NUMBER TABLE INDEX\n         LA    R5,0(R5,R4)        SET POINTER TO UCM ADDRESS SLOT\n         L     R5,0(0,R5)         SET POINTER TO UCM\n         LTR   R5,R5\n         BZ    NEXT\n         USING UCMLIST,R5         TELL ASSEMBLER ABOUT UCM\n         CLI   CNSLFLAG,X'FF'\n         BE    SKIPMSTR\n         TM    UCMDISP1,UCMDISPA  IS THIS A MASTER CONSOLE?\n         BNZ   ACTIVCHK           YES ? FOUND THE MASTER CONSOLE ..\n         B     NEXT\nSKIPMSTR TM    UCMDISP1,UCMDISPC  GRAPHICS\n         BZ    NEXT\nACTIVCHK TM    UCMATR,UCMUF       ACTIVE?\n         BNZ   MASTFND\nNEXT     SRL   R4,2               RESET CONSOLE NUMBER TO RELATIVE\n         LA    R4,1(0,R4)         SET POINTER TO NEXT CONSOLE\n         B     MASTSCAN           CONTINUE MASTER CONSOLE SCAN LOOP\nMASTFND  SRL   R4,2               RESET CONSOLE NUMBER TO RELATIVE\n         ST    R4,CONSOLE         SET VALID CONSOLE NUMBER (MASTER)\n         DROP  R5                 DONT NEED UCM ADDRESSABILITY NOW\nNEXTPAGE LA    R5,UCMTAB          R5 = ADDR OF UCMTAB\n         ICM   R4,15,CONSOLE      R4 = CONSOLE TO BE DISPLAYED\n         BZ    WRTERR4            WE HAVE NO CONSOLE ZERO (MASTER)\n         CH    R4,NUMUCMS         IS NUMBER TOO HIGH?\n         BNH   GETUCM             NO, CONTINUE\nRESETCN  L     R4,OLDCONS         RESET TO OLD CONSOLE\n         ST    R4,CONSOLE         AND SAVE IT\nGETUCM   SLL   R4,2               MULTIPLY BY 4\n         LA    R5,0(R5,R4)        R5 = ADDR OF ADDR OF UCM\n         L     R5,0(0,R5)         R5 = ADDR OF UCM\n         USING UCMLIST,R5\n         L     R6,UCMXB           R6 = ADDR OF RDCM\n         ST    R6,UCMTABX\n         LTR   R6,R6              IS THIS A GRAPHICS CONSOLE?\n         BP    GRAPHICS           YES\n         LA    R5,UCMTAB          R5 = ADDR OF UCMTAB\nWRTERR4  DS    0H\n         B     RESETCN            RESET THE CONSOLE NUMBER\nGRAPHICS EQU   *\n         L     R6,UCMFEXTP        UCM FIXED EXTENSION\n         USING UCMEFEXT,R6        ADDRESSABILITY\n         MVC   USER,UCMEFCNM      LOGON ID\n         DROP  R6\nAUTHDONE EQU   *\n         MVC   OLDCONS,CONSOLE\n         MVC   HEADING,HEADING1\n         CLI   CONSFLAG,X'FF'\n         BNE   CNSLSW\n         CLI   ISSUFLAG,X'FF'\n         BNE   CONSINIT\n         MVC   HEADING+45(18),NOTISSUD\n         MVI   ISSUFLAG,X'00'\nCONSINIT MVI   CNSLFLAG,X'00'\n*        BAL   R3,AUTHRIZ\n         L     R1,CONSASID        'CONSOLE' ASID\n         SSAR  R1                 SET 'CONSOLE' AS SECONDARY\n         PRINT ON,GEN\n         SLR   R0,R0              SECONDARY KEY\n         L     R6,UCMTABX\n         LA    R1,4               TRUE LENGTH\n         MVCP  RDCM(R1),0(R6),R0  ADDRESS OF PAGEABLE DCM\n         LA    R1,1\n         MVCP  TYPE(R1),15(R6),R0       ATTRIB\n         L     R7,RDCM\n         USING STRTDCM,R7\n         LA    R1,L'LASTLINE      TRUE LENGTH\n         MVCP  LASTLINE(R1),DCMINPUT-STRTDCM(R7),R0\n         LA    R1,L'SIBPTR\n         SLR   R0,R0              SET STORAGE KEY\n         MVCP  SIBPTR(R1),DCMASCRN-STRTDCM(R7),R0 PT TO SCRN ADRJPB\n         LA    R1,2\n         MVCP  HEADING+8(R1),DCMDEL-STRTDCM(R7),R0   ROLL DELETE VAL\n         MVCP  RTME(R1),DCMRTME-STRTDCM(R7),R0       RTME\n         MVCP  RNUM(R1),DCMDL-STRTDCM(R7),R0       RTME\n         LA    R1,4\n         MVCP  CONL(R1),DCMLSCRN-STRTDCM(R7),R0\n         L     R8,SIBPTR          R8 = ADDR OF SCREEN IMAGE\n         L     R5,CONL\n         SR    R4,R4\n         SR    R5,R8\n         LA    R5,84(,R5)\n         ST    R5,CONL            SAVE IT\n         LA    R4,SCREEN          MY BUF\n         LA    R4,3737(,R4)\n         LR    R9,R5              BUFFER LEN\nMOVEBUFF DS    0H\n         SH    R8,=H'6'\n         SLR   R0,R0             RESET THE KEY\nMVCPLOOP DS    0H\n         MVCP  0(R5,R4),0(R8),R0 LOOP THRU THE CONSOLE BUFFER\n         BZ    GOTITALL\n         AL    R8,=F'256'        MAX LEN ALLOWED\n         AL    R4,=F'256'        MAX LEN ALLOWED\n         SL    R5,=F'256'        MAX LEN ALLOWED\n         B     MVCPLOOP\n*---------------------------------------------------------------------*\n*        IN ORDER TO ISSUE SVCS THE PRIMARY AND                       *\n*        SECONDARY ADDRSPC MUST BE THE SAME                           *\n*---------------------------------------------------------------------*\nGOTITALL DS    0H\n         EPAR  R1                EXTRACT PRIMARY ASN\n         SSAR  R1\n*        BAL   R3,UNAUTH\n         DROP  R5,R7\n         LA    R3,SCREEN         SET POINTER TO FIRST LINE OF BUF\n         LA    R3,3737(,R3)\n         LA    R9,HEADING+10\n         CLI   HEADING+9,C' '\n         BNE   RDMODE\n         LA    R9,HEADING+9\nRDMODE   MVC   0(6,R9),RTMEC\n         SR    R5,R5\n         LH    R5,RTME\n         CVD   R5,DOUBLWD\n         MVC   WORKLINE(5),PATTERN1\n         ED    WORKLINE(5),DOUBLWD+5\n         MVC   6(4,R9),WORKLINE+1\n         CLI   9(R9),C'0'\n         BE    PUTBLNK\n         MVC   7(2,R9),=C'1/'\n         B     PUTRNUM\nPUTBLNK  MVI   9(R9),C' '\nPUTRNUM  MVC   10(6,R9),RNUMC\n         SR    R5,R5\n         IC    R5,RNUM+1\n         CVD   R5,DOUBLWD\n         MVC   WORKLINE(5),PATTERN1\n         ED    WORKLINE(5),DOUBLWD+5\n         MVC   16(3,R9),WORKLINE+2\n         TIME  DEC\n         ST    R0,WORK\n         MVI   WORK+3,X'0C'\n         UNPK  DOUBLWD(7),WORK(4)\n         LA    R9,HEADING+36\n         MVC   0(2,R9),DOUBLWD\n         MVC   3(2,R9),DOUBLWD+2\n         MVC   6(2,R9),DOUBLWD+4\n         MVC   28(8,R9),USER\n         MVC   10(10,R9),BLANKS\n         CLI   AUTOFLAG,X'FF'\n         BNE   FIRSTL\n         MVC   10(10,R9),=C'AUTOUPDATE'\nFIRSTL   L     R9,NUMLINES       NUMBER OF LINES ON PROG TERMINAL\n         L     R5,CONL\n         SR    R4,R4\n         LA    R1,90\n         CLI   TYPE,X'80'\n         BNE   DIV1\n         LA    R1,84\nDIV1     DR    R4,R1\n         LA    R5,2(,R5)\n         ST    R5,CONL\n         CR    R9,R5\n         BNL   FIRSTL1\n         SR    R5,R9\n         L     R1,CONL\n         SR    R4,R4\n         LA    R5,2(,R5)\n         SR    R1,R5\n         ST    R1,CONL\n         LA    R1,90\n         CLI   TYPE,X'80'\n         BNE   MUL1\n         LA    R1,84\nMUL1     MR    R4,R1\n         LA    R3,0(R5,R3)\nFIRSTL1  LA    R5,SCREEN+1            ADDRESS OF FIRST LINE\n         LA    R6,PAGEDEF             LINES TO BE DISPLAYED\n*        AP    HEADING(2),HEADING(2)\n         CLI   MOD5FLAG,X'FF'         MOD 5?\n         BNE   NOTMOD5\n         LA    R6,PAGEDEF5\nNOTMOD5  L     R1,CONL\n         SR    R9,R1\n         SR    R10,R10\n         BCTR  R9,0                   MINUS ONE\n         MVC   0(5,R5),0(R6)          CONTROL CHAR\n         MVC   5(79,R5),HEADING       HEADING\n         SR    R15,R15\n         IC    R15,CONSOLE+3\n         SRL   R15,4                  ONLY WANT LEFT BYTE\n         C     R15,TEN\n         BL    NUMERIC1\n         O     R15,CHAROR\n         B     SECONDCK\nNUMERIC1 O     R15,NUMBEROR\nSECONDCK STC   R15,78(R5)\n         IC    R15,CONSOLE+3\n         SLL   R15,28                 ONLY WANT LEFT BYTE\n         SRL   R15,28\n         C     R15,TEN\n         BL    NUMERIC2\n         O     R15,CHAROR\n         B     STORECHR\nNUMERIC2 O     R15,NUMBEROR\nSTORECHR STC   R15,79(R5)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R10,85(,R10)\n         LA    R6,5(,R6)              INCREMENT\n         BCTR  R1,0\n         CLI   HELPFLAG,X'FF'         HELP?\n         BNE   MOVESTUP\n         L     R9,NUMLINES\n         S     R9,=F'07'\n         MVC   0(5,R5),0(R6)\n         MVC   5(79,R5),BLANKS\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,05(,R6)             INCREMENT\n         MVC   0(5,R5),0(R6)\n         LA    R1,HEADING1\n         MVC   5(79,R5),80(R1)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,5(,R6)              INCREMENT\n         MVC   0(5,R5),0(R6)\n         LA    R1,80(,R1)\n         MVC   5(79,R5),80(R1)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,5(,R6)              INCREMENT\n         MVC   0(5,R5),0(R6)\n         MVC   5(79,R5),160(R1)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,5(,R6)              INCREMENT\n         MVC   0(5,R5),0(R6)\n         MVC   5(79,R5),240(R1)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,5(,R6)              INCREMENT\n         LA    R10,420(,R10)\n         CLI   USERFLAG,X'FF'\n         BNE   SPACLOOP\n         MVC   0(5,R5),0(R6)\n         MVI   4(R5),X'E8'          HILITE\n         MVC   5(79,R5),320(R1)\n         LA    R5,84(,R5)             INCREMENT\n*        LA    R6,5(,R6)              INCREMENT\n         LA    R10,84(,R10)\n         B     SPACLOOP\nMOVESTUP LR    R15,R5\n*        MVC   0(4,R5),0(R6)          LINE ADDRESS\n*        MVC   4(1,R5),0(R3)          ATTRIBUTE BYTE\n*        B     MVIT2\nMOVELOOP EQU   *\n*OVELOOP CLI   CLRFLAG,X'FF'\n*        BE    MVIT\n*        CLC   5(74,R15),10(R3)        HAS THIS LINE CHANGED?\n*        BNE   MVIT\n*        CLC   4(1,R15),09(R3)         ATTRIBUTE BYTE CHANGED?\n*        BE    SKPMV                  NO NEED SENDING DOWN THE LINE\nMVIT     MVC   0(4,R5),0(R6)          LINE ADDRESS\n         MVC   4(1,R5),06(R3)         ATTRIBUTE BYTE\n         MVI   CLRFLAG,X'FF'          SCREEN HAS CHANGED FROM HERE DOWN\nCKMVIT   CLC   TYPE,=X'80'            FIRST LINE\n         BNE   MVIT2\n         MVC   4(1,R5),4(R3)          ATTRIBUTE BYTE FOR FIRST LINE\n         MVC   5(79,R5),5(R3)         MOVE LINE OF PRINT\n         B     MVIT3\nMVIT2    EQU   *\n         CLC   PAGEDEF+5(4),0(R5)     FIRST LINE\n         BNE   MVIT2A\n         MVC   4(1,R5),0(R3)          ATTRIBUTE BYTE FOR FIRST LINE\n         MVC   5(79,R5),4(R3)         MOVE LINE OF PRINT\n         S     R3,=F'06'\n         B     MVIT3\nMVIT2A   MVC   5(79,R5),10(R3)        MOVE LINE OF PRINT\n*        AP    HEADING(2),HEADING(2)\nMVIT3    OC    5(79,R5),BLANKS        MAKE SURE NO CONTROL CHARS\n*        MVC   79(5,R5),BLANKS\n         LA    R5,84(,R5)\n         LA    R10,84(,R10)\nSKPMV    LA    R6,05(,R6)             INCREMENT\n         CLC   TYPE,=X'80'\n         BNE   USUAL\n         LA    R3,84(,R3)\n         B     USUAL1\nUSUAL    LA    R3,90(,R3)             INCREMENT\nUSUAL1   LA    R15,84(,R15)\n*        AP    HEADING(2),HEADING(2)\n         BCT   R1,MOVELOOP            LOOP\n         MVI   CLRFLAG,X'00'\nSPACLOOP LA    R6,05(,R6)             INCREMENT\n         BCTR  R9,0\n         C     R9,=F'0'\n         BH    SPACLOOP\n         MVC   0(5,R5),0(R6)          LINE ADDRESS\n         MVI   4(R5),X'C9'            ATTRIBUTE\n         MVI   5(R5),X'13'            INSERT CURSOR\n         CLI   HELPFLAG,X'FF'\n         BE    GOAHEAD2\n         CLI   IPLFLAG,X'FF'\n         BE    GOAHEAD2\n         CLI   AUTOFLAG,X'FF'\n         BE    AUTOROLL\nGOAHEAD  CLI   RESHOWFL,X'FF'\n         BNE   GOAHEAD2\n         MVI   RESHOWFL,X'00'\n         MVC   6(72,R5),CMDLINE+4\n         B     GOAHEAD3\nGOAHEAD2 MVC   6(79,R5),BLANKS        LAST LINE IS INPUT LINE\nGOAHEAD3 MVI   CMDFLAG,X'00'\n         LA    R10,84(,R10)\n         LR    R0,R10\n         LA    R1,SCREEN              ADDRESS OF SCREEN\n*        LA    R15,TYPE\n*        AP    HEADING(2),HEADING(2)\n         TPUT  (1),(0),FULLSCR        TPUT\n         MVC   REPLY,BLANKS           CLEAR\nTGET1    TGET  REPLY,84,ASIS,WAIT     INPUT\n*        AP    HEADING(3),HEADING(3)\n         MVI   HELPFLAG,X'00'\n         B     CHEKOUT\nAUTOROLL EQU   *\n*        L     R0,TPUTLEN             LENGTH OF TPUT\n         LA    R1,SCREEN              ADDRESS OF SCREEN\n         CLI   RESHOWFL,X'FF'\n         BNE   GOAHEAD5\n         MVI   RESHOWFL,X'00'\n         MVC   6(72,R5),CMDLINE+4\n         MVC   REPLY,BLANKS\n         LA    R10,72(,R10)\n         B     GOAHEAD5\n*OAHEAD4 S     R0,=F'79'\nGOAHEAD5 CLI   CMDFLAG,X'FF'\n         BNE   AUTOTPUT\n         MVC   0(5,R5),0(R6)          LINE ADDRESS\n         MVI   4(R5),X'C9'            ATTRIBUTE\n         MVI   5(R5),X'13'            INSERT CURSOR\n         MVI   CMDFLAG,X'00'\nAUTOTPUT LA    R0,5(,R10)\n*        LR    R0,R10\n         TPUT  (1),(0),FULLSCR\n         TGET  REPLY,70,ASIS,NOWAIT\n         STIMER WAIT,BINTVL=TIMER\nCHEKOUT  CLI   REPLY,X'7D'\n         BE    GOTSTUFF\n         NI    REPLY,X'0F'\n         CLI   REPLY,X'01'\n         BE    HELP\n         CLI   REPLY,X'02'\n         BE    AUTOSTOP\n         CLI   REPLY,X'03'\n         BE    CHEKAUTO\n         CLI   REPLY,X'04'\n         BE    AUTOON\n         CLI   REPLY,X'05'\n         BE    CNSLSW\n         CLI   REPLY,X'06'\n         BE    RESHOW\n         CLI   REPLY,X'07'\n         BE    MTT\n         CLI   REPLY,X'08'\n         BE    AUTO10\n         CLI   REPLY,X'09'\n         BE    AUTO2\n         CLI   REPLY,X'0A'\n         BE    OMON\n         CLI   REPLY,X'0B'\n         BE    AUTO4\n         CLI   REPLY,X'0C'\n         BE    IPLINFO\nNOTIFY   MVI   CLRFLAG,X'FF'\n         MVI   CMDFLAG,X'FF'\n         B     AUTHDONE\nCHEKAUTO CLI   AUTOFLAG,X'FF'\n         BNE   AXFREE\n         MVI   AUTOFLAG,X'00'\n         B     AUTHDONE\nCNSLSW   MVI   CNSLFLAG,X'FF'\n         MVI   REPLY,X'00'\n         MVI   CONSFLAG,X'FF'\n         MVI   THRUFLAG,X'00'\n         MVI   CLRFLAG,X'FF'\n         B     SHOWCONS\nRESHOW   MVI   RESHOWFL,X'FF'\n         B     AUTHDONE\nIPLINFO  MVC   WORKLINE,BLANKS\n         MVC   WORKLINE+10(46),MESSAGE\n         LA    R1,16              HEX 10\n         L     R2,0(R1)           ADDRESS OV CVT\n         USING CVT,R2\n         L     R3,CVTSMCA         ADDRESS OF SMF CONTROL AREA\n         L     R1,CVTSYSAD\n         MVC   WORKLINE+72(3),13(1)\n         MVC   WORKLINE+65(7),=C'SYSRES='\n         USING SMCABASE,R3\n         MVC   IPLDATE,SMCAIDTE   IPL DATE\n         MVC   IPLTIME,SMCAITME   IPL TIME\n         DROP  R3\n         L     R3,CVTASMVT\n         TM    1(R3),X'08'     CLPA?\n         BNZ   NOCLPA             1 MEANS A QUICK START - NO CLPA WAS\n         MVC   WORKLINE+57(3),=C'YES'\n         B     DATEEDIT\nNOCLPA   MVC   WORKLINE+57(3),=C'NO '\nDATEEDIT MVC   WORKLINE+31(5),PATTERN1\n         ED    WORKLINE+31(5),IPLDATE+1 MAKE PRINTABLE\n         DROP  R2\n         L     R6,IPLTIME\n         SRDA  R6,32(0)\n         L     R3,THREE60\n         DR    R6,R3\n         CVD   R7,DOUBLWD\n         MVC   WORK(4),=X'40212020'\n         ED    WORK(4),DOUBLWD+6\n         MVC   WORKLINE+43(2),WORK+2\n         SRDA  R6,32              SHIFT REMAINDER\n         L     R3,SIXTY\n         DR    R6,R3\n         CVD   R7,DOUBLWD\n         MVC   WORK(4),=X'F0212020'\n         ED    WORK(4),DOUBLWD+6\n         MVC   WORKLINE+46(2),WORK+2\n         LA    R5,SCREEN+1            ADDRESS OF FIRST LINE\n         LA    R6,PAGEDEF             LINES TO BE DISPLAYED\n         LA    R10,85\n         CLI   MOD5FLAG,X'FF'\n         BNE   NONMOD5\n         LA    R6,PAGEDEF5\nNONMOD5  L     R9,NUMLINES\n         BCTR  R9,0\n         MVC   0(5,R5),0(R6)\n         MVC   5(79,R5),WORKLINE\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,05(,R6)             INCREMENT\n         BCTR  R9,0\n         TPUT  CLEAR,13,FULLSCR\n         MVI   IPLFLAG,X'FF'\n         TCLEARQ INPUT\n         B     SPACLOOP\nMTT      L     R1,SAVECPPL\n         LINK  EP=ZTPR0205\n         TPUT  CLEAR,13,FULLSCR\n         MVI   AUTOFLAG,X'00'\n         MVI   CLRFLAG,X'FF'\n         B     AUTHDONE\nOMON     AP    HEADING(2),HEADING(2)\n         B     AUTHDONE\nHELP     MVI   HELPFLAG,X'FF'\n         MVI   AUTOFLAG,X'00'\n         TPUT  CLEAR,13,FULLSCR\n         MVI   CLRFLAG,X'FF'\n         B     FIRSTL\nAUTOON   MVC   TIMER,ONE\n         CLI   USERFLAG,X'FF'\n         BE    AUTO2\n         B     AUTOSET\nAUTO2    MVC   TIMER,THREE\n         B     AUTOSET\nAUTO4    MVC   TIMER,FIVE\nAUTOSET  MVI   AUTOFLAG,X'FF'\n         MVC   5(72,R5),BLANKS\n         MVI   REPLY,X'00'\n         B     AUTHDONE\nAUTO10   MVC   TIMER,=F'990'            APP 10 SECS\n         B     AUTOSET\nAUTOSTOP MVI   AUTOFLAG,X'00'\n         B     AUTHDONE\nSKIPALL  MVI   ISSUFLAG,X'FF'\n         B     AUTHDONE\nGOTSTUFF DS    0H\n         CLI   REPLY+6,C'>'        IS IT NOTIFY MESSAGE?\n         BE    NOTIFY              THEN EXIT\n         OC    REPLY+6(74),BLANKS  ALL INPUT UPPER CASE\n         CLC   REPLY+6(70),BLANKS  COMMAND AREA IS SPACES?\n         BE    AUTHDONE            THEN A COMMAND WAS NOT ENTERED\n         MVC   CMDLINE+4(72),REPLY+6\n         MVC   CMDLINE(4),CMDFMT\n         MVC   REPLY,BLANKS\n         CLI   CMDLINE+4,C'Z'      IS IT END,\n         BE    CHEKAUTO            THEN EXIT\n         CLI   CMDLINE+4,C'X'      IS IT END,\n         BE    CHEKAUTO            THEN EXIT\n         CLC   CMDLINE+4(3),=C'END' IS IT END,\n         BE    AXFREE               THEN EXIT\nGOTCMD   TPUT  CLEAR,13,FULLSCR\n         MVI   CLRFLAG,X'FF'\nLOGLINE  MVC   WTOCMD(100),WTOLIST\n         MVC   WTOCMD+8(72),CMDLINE+4\n         CLI   USERFLAG,X'FF'\n         BNE   ISSUOK\nISSUCK   CLC   PJES2,CMDLINE+4\n         BE    HELP\n         CLC   PQ,CMDLINE+4\n         BE    HELP\n         CLC   $P,CMDLINE+4\n         BE    HELP\n         CLC   PQ(3),CMDLINE+4\n         BE    HELP\n         CLC   CMDLINE+4(1),PQ        SHOULD START WITH $\n         BNE   HELP\nISSUOK   MVC   WTOCMD+78(4),USERID\n         LA    R7,WTOCMD\n         WTL   MF=(E,(R7))\n*OWTO    BAL   R3,AUTHRIZ\nNOWTO    EQU   *\n         SLR   R0,0                 CLEAR REG 0\n         L     R0,CONSOLE\nISSUE    LA    R1,CMDLINE          GET ADDRESS OF COMMAND I SMF\n         SVC   34                  ISSUE COMMAND VIA SVC 34\n         STIMER WAIT,BINTVL=ONE\n         MVI   CMDFLAG,X'FF'\n         B     AUTHDONE\nNOAUTH   DELETE EP=IKJEFFUT\n         TPUT  MSGNO1,13\n         B     SHOWRTRN\n*UTHRIZ  STAX  DEFER=YES\nAUTHRIZ  MODESET MF=(E,SUPRMOD)  GET INTO SUPV STATE AND KEY ZERO\n         BR    R3                ****************************\nUNAUTH   DS    0H\n         MODESET MF=(E,PROBMOD)\n*        STAX  DEFER=NO\n         BR    R3\n         EJECT\n         LTORG\n*---------------------------------------------------------------------*\n*                         C O N S T A N T S                           *\n*---------------------------------------------------------------------*\nCMDFMT   DC    Y(76),Y(00)            LENGTH OF COMMAND\nMESSAGE  DC    CL46'LAST SYSTEM IPL DATE XXXXX  TIME HH:MM  CLPA ='\nPATTERN1 DC    XL5'2120202020'\nTHREE60  DC    F'360000'\nSIXTY    DC    F'6000'\nAXLIST   DC    H'1',H'0'           AXRES PARMLIST\n         CNOP  0,8\n*---------------------------------------------------------------------*\n*               327X SCREEN CLEAR CONTROL CHARACTERS                  *\n*---------------------------------------------------------------------*\n*LR      DC    X'7E'              EWA\nCLR      DC    X'C3'              WCC - FREE KEYBOARD/RESET MDT\n*        DC    X'11F56F'          SBA TO ROW 43, COL 80\n         DC    X'114040'          SBA TO ROW 1, COL 1\n         DC    X'3C'              REPEAT TO ADDRESS\n         DC    X'F56F00'          FILL SCREEN WITH NULLS F56F=R43 COL80\n         DC    X'11F460'          ROW 43 COL 2\n         DC    X'00'              ATTRIBUTE\n         DC    X'13'              INSERT CURSOR\n*        DC    X'1DE913'          SBA TO ROW 1, COL 1 1DC813\nONE      DC    A(175)             1.75 SECOND\nFIVE     DC    A(444)             5 SECONDS\nTHREE    DC    A(220)             3 SECONDS\nTEN      DC    F'10'\nNUMBEROR DC    XL4'000000F0'\nCHAROR   DC    XL4'000000C0'\nHEXZIP   DC    2F'0000000000000000'\nMSGNO1   DC    CL13'SYSTEM ACTIVE'\n         DS    0F\nWTOLIST  WTL   '                                                       X\n                                       ZTPR0200',MF=L\n         DS    0F\nAUTH     DC    CL4'AUTH'\n         SPACE 5\nSUPRMOD  MODESET KEY=ZERO,MODE=SUP,MF=L\nPROBMOD  MODESET KEY=NZERO,MF=L\nTABLE    DC    CL8'MURF    '      MURF CAN DO IT\n         DC    CL8'JXCC    '           CAN DO IT\nTABLEND  DC    XL8'FFFFFFFFFFFFFFFF'\nHEXFS    DC    XL4'FFFFFFFF'\nPJES2    DC    CL7'$PJES2 '\nPQ       DC    CL8'$PQ,ALL '\n$P       DC    CL8'$P      '\nRTMEC    DC    CL6',RTME='\nRNUMC    DC    CL6',RNUM='\nMOD2     DC    CL3'***'\nFORTY3   DC    H'43'\nTHIRTY2  DC    H'32'\nEIGHTY   DC    H'80'\nPAGEDEF  DC    X'1140401DE8'          ROW  1   COL  1\n         DC    X'11C1501DC4'          ROW  2   COL  1\n         DC    X'11C2601DC4'          ROW  3   COL  1\n         DC    X'11C3F01DC4'          ROW  4   COL  1\n         DC    X'11C5401DC4'          ROW  5   COL  1\n         DC    X'11C6501DC4'          ROW  6   COL  1\n         DC    X'11C7601DC4'          ROW  7   COL  1\n         DC    X'11C8F01DC4'          ROW  8   COL  1\n         DC    X'114A401DC4'          ROW  9   COL  1\n         DC    X'114B501DC4'          ROW 10   COL  1\n         DC    X'114C601DC4'          ROW 11   COL  1\n         DC    X'114DF01DC4'          ROW 12   COL  1\n         DC    X'114F401DC4'          ROW 13   COL  1\n         DC    X'1150501DC4'          ROW 14   COL  1\n         DC    X'11D1601DC4'          ROW 15   COL  1\n         DC    X'11D2F01DC4'          ROW 16   COL  1\n         DC    X'11D4401DC4'          ROW 17   COL  1\n         DC    X'11D5501DC4'          ROW 18   COL  1\n         DC    X'11D6601DC4'          ROW 19   COL  1\n         DC    X'11D7F01DC4'          ROW 20   COL  1\n         DC    X'11D9401DC4'          ROW 21   COL  1\n         DC    X'115A501DC4'          ROW 22   COL  1\n         DC    X'115B601DC4'          ROW 23   COL  1\n         DC    X'115CF01DC4'          ROW 24   COL  1\n         DC    X'115E401DC4'          ROW 25   COL  1\n         DC    X'115F501DC4'          ROW 26   COL  1\n         DC    X'1160601DC4'          ROW 27   COL  1\n         DC    X'1161F01DC4'          ROW 28   COL  1\n         DC    X'11E3401DC4'          ROW 29   COL  1\n         DC    X'11E4501DC4'          ROW 30   COL  1\n         DC    X'11E5601DC4'          ROW 31   COL  1\n         DC    X'11E6F01DC4'          ROW 32   COL  1\n         DC    X'11E8401DC4'          ROW 33   COL  1\n         DC    X'11E9501DC4'          ROW 34   COL  1\n         DC    X'116A601DC4'          ROW 35   COL  1\n         DC    X'116BF01DC4'          ROW 36   COL  1\n         DC    X'116D401DC4'          ROW 37   COL  1\n         DC    X'116E501DC4'          ROW 38   COL  1\n         DC    X'116F601DC4'          ROW 39   COL  1\n         DC    X'11F0F01DC4'          ROW 40   COL  1\n         DC    X'11F2401DC4'          ROW 41   COL  1\n         DC    X'11F3501DC4'          ROW 42   COL  1\n         DC    X'11F4601DC8'          ROW 43   COL  1\nPAGEDEF5 DC    X'1140401DE8'          ROW  1   COL  1 MODEL 5\n         DC    X'11C2C41DE4'          ROW  2   COL  1\n         DC    X'11C4C81DE4'          ROW  3   COL  1\n         DC    X'11C64C1DE4'          ROW  4   COL  1\n         DC    X'11C8501DE4'          ROW  5   COL  1\n         DC    X'114AD41DE4'          ROW  6   COL  1\n         DC    X'114CD81DE4'          ROW  7   COL  1\n         DC    X'114E5C1DE4'          ROW  8   COL  1\n         DC    X'1150601DE4'          ROW  9   COL  1\n         DC    X'11D2E41DE4'          ROW 10   COL  1\n         DC    X'11D4E81DE4'          ROW 11   COL  1\n         DC    X'11D66C1DE4'          ROW 12   COL  1\n         DC    X'11D8F01DE4'          ROW 13   COL  1\n         DC    X'115AF41DE4'          ROW 14   COL  1\n         DC    X'115CF81DE4'          ROW 15   COL  1\n         DC    X'115E7C1DE4'          ROW 16   COL  1\n         DC    X'1161401DE4'          ROW 17   COL  1\n         DC    X'11E3C41DE4'          ROW 18   COL  1\n         DC    X'11E5C81DE4'          ROW 19   COL  1\n         DC    X'11E74C1DE4'          ROW 20   COL  1\n         DC    X'11E9501DE4'          ROW 21   COL  1\n         DC    X'116BD41DE4'          ROW 22   COL  1\n         DC    X'116DD81DE4'          ROW 23   COL  1\n         DC    X'116F5C1DE4'          ROW 24   COL  1\n         DC    X'11F1601DE4'          ROW 25   COL  1\n         DC    X'11F3E41DE4'          ROW 26   COL  1\n         DC    X'11F5E81DE4'          ROW 27   COL  1\nNOTISSUD DC    CL18'COMMAND NOT ISSUED'\nHEADING1 DC    CL80'K S,DEL=                            99:99:99       X\n                             CONSOLE XX    '\nHELPMSG1 DC    CL80'PF-1   THIS DISPLAY         PF-2  STOP AUTO UPDATE X\n                 PF-3   END                '\nHELPMSG2 DC    CL80'PF-4   AUTO UPDATE 1 SEC    PF-5  ALTERNATE CONSOLEX\n                 PF-6   RESHOW LAST COMMAND'\nHELPMSG3 DC    CL80'PF-7   PAGE THRU MTT        PF-8  AUTO UPDATE 10 SEX\n               C PF-9   AUTO UPDATE 4 SEC  '\nHELPMSG4 DC    CL80'PF-10  S0C7 ABEND           PF-11 AUTO UPDATE 2 SECX\n                 PF-12  IPL INFO           '\n         DC    CL80'****   ONLY JES2 COMMANDS ARE AUTHORIZED FOR THIS UX\n               SERID         ****          '\nWORKAREA DSECT\nSAVEAREA DS    18F\nUCMTABX  DS    F\nRDCM     DS    F\nWORKLINE DS    CL80\nREPLY    DS    CL80\nBLANKS   DS    CL80\nCMDLINE  DS    CL80\nHEADING  DS    CL80\nSIBPTR   DS    F                   PRT TO SCREEN IMAGE BUFFER\nUCMTAB   DS    F\n         DS    35F                PROVIDE SPACE FOR 20 UCM ADDRESSES\nUCMTABE  EQU   *\nNUMUCMS  DS    H\nOLDCONS  DS    F                   PREVIOUS CONSOLE NUMBER\n         SPACE 5\nCLEAR    DS    XL1                WCC - CLEAR SCREEN\n         DS    XL3                SBA TO ROW 1, COL 1\n         DS    XL1                IC AND REPEAT TO ADDRESS\nENDOFSCR DS    XL2                SBA TO ROW XX, COL 80\n         DS    XL2                FILL SCREEN WITH NULLS\nCURSOR   DS    XL2                SBA TO ROW 1, COL 1\n         DS    XL2                INSERT CURSOR\nLASTLINE DS    CL255' '           OPERATORS COMMAND INPUT LINE\nCONNUM   DS    CL2' 1'            CONSOLE NUMBER\nCTYPE    DS    CL4' '\nMASTER   DS    CL8' '             MASTER CONSOLE\nSYS      DS    CL4' '             SYS  AUTHORIZATION\nIO       DS    CL4' '             I/O  AUTHORIZATION\nCONS     DS    CL5' '             CONS AUTHORIZATION\n         DS    CL3' '\n*NIT     DS    CL4' '             UNIT ADDR OF CONSOLE\nTIME     DS    CL3' '             SECONDS REMAINING ON TIMER\nSLASH    DS    CL1'/'\nPAUSE    DS    CL3'1.0'           DELAY IN SECONDS\n         DS    CL2' '\nAREAA    DS    XL1\nCNSLFLAG DS    XL1\nTHRUFLAG DS    XL1\nAUTOFLAG DS    XL1\nISSUFLAG DS    XL1\nRESHOWFL DS    XL1\nHELPFLAG DS    XL1\nUSERFLAG DS    XL1\nCONSFLAG DS    XL1\nCLRFLAG  DS    XL1\nIPLFLAG  DS    XL1\nMOD5FLAG DS    XL1\nCMDFLAG  DS    XL1\nCONSOLE  DS    F                   CONSOLE TO BE LOOKED AT\nCONSASID DS    F                   'CONSOLE' ASID FOR CMS\nNUMLINES DS    F\nCONL     DS    F\nSAVECPPL DS    F\nTPUTLEN  DS    F\nTIMER    DS    F\nRTME     DS    H\nRNUM     DS    H\nUSER     DS    CL8            CONSOLE NAME\nTYPE     DS    CL1\nUSERID   DS    CL7\nTABAREA  DS    CL77\nSELCODE  DS    CL3            LINE SELECTION CODE\nSELSAVE  DS    CL3            LINE SELECTION CODE SAVE AREA\nWORK     DS    D\nIPLDATE  DS    F\nIPLTIME  DS    F\nDOUBLWD  DS    D\nWTOCMD   DS    CL104\nSCREEN   DS    XL1       SPACE FOR WCC\n         DS    43CL84\n         DS    CL124     EXTRA FOR MOD5\nBUF      DS    45CL133            OPERATORS SCREEN BUFFER\nWORKLENG EQU   *-WORKAREA\n         PRINT NOGEN\n         TITLE '*** PROTECTED STEP CONTROL BLOCK DSECT ***'\n         IKJPSCB                   COPY THE PSCB FORMAT DSECT\n         TITLE '*** COMMAND PROCESSOR PARAMETER LIST DSECT ***'\n         IKJCPPL                   COMMAND PROCESSOR PARM LIST\n         TITLE '*** TSO USER PROFILE TABLE DSECT ***'\n         IKJUPT                    TSO USER PROFILE TABLE\n         TITLE '*** COMMUNICATION VECTOR TABLE ***'\n         CVT   DSECT=YES\n         TITLE '*** J S C B ***'\n         IEZJSCB\n         TITLE '*** T  C  B ***'\n         IKJTCB DSECT=YES\n*        TITLE '*** RDCM DSECT ***'\n*EERDCM  DSECT ,\n*        IEECRDCM\n         TITLE '*** TDCM DSECT ***'\nIEETDCM  DSECT ,\n         IEECDCM\n         TITLE '*** MULTIPLE CONSOLE SUPPORT (MCS) UCM PREFIX ***'\n         IEECUCM FORMAT=NEW\n         IHAASVT\n         TITLE '*** ADDRESS SPACE CONTROL BLOCK ***'\n         IHAASCB\n         TITLE '*** TSB DSECT ***'\n         IKJTSB LIST=YES\n         TITLE '*** CHAIN     ***'\n         IEECHAIN\n         IEESMCA\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CONESAJ": {"ttr": 1028, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x93\\x07\\x8f\\x00\\x98&\\x8f\\x16\\x05\\x002\\x00\\x1e\\x00\\x00\\xd4\\xe4\\xd9\\xc6@@@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1993-03-19T00:00:00", "modifydate": "1998-09-25T16:05:00", "lines": 50, "newlines": 30, "modlines": 0, "user": "MURF"}, "text": "//MURFC    JOB (6496,B014),MURF,CLASS=T,MSGCLASS=3,NOTIFY=&SYSUID\n//*******************************************************************   DOC FILE\n//*                                                                 *   DOC FILE\n//*            D I S C L A I M E R    S E C T I O N                 *   DOC FILE\n//*                                                                 *   DOC FILE\n//*******************************************************************   DOC FILE\n//*                                                                 *   DOC FILE\n//* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *   DOC FILE\n//* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        *   DOC FILE\n//* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *   DOC FILE\n//* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *   DOC FILE\n//* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *   DOC FILE\n//* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *   DOC FILE\n//* SUPPLIED .                                                      *   DOC FILE\n//*                                                                 *   DOC FILE\n//* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *   DOC FILE\n//* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *   DOC FILE\n//* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *   DOC FILE\n//* FUTURE .                                                        *   DOC FILE\n//*                                                                 *   DOC FILE\n//*******************************************************************   DOC FILE\n//*********************************************************************\n//*1.CHANGE SYSIN AND SYSLIB DD TO CORRECT UNLOADED CBT FILE NAME.    *\n//*2.CHANGE SYSLMOD TO CORRECT LOAD LIB.                              *\n//*********************************************************************\n//COM     EXEC PGM=IEV90,REGION=6M,\n//    PARM='LOAD,XREF(SHORT),LINECNT=55,NODECK,RENT'\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB\n//         DD  DISP=SHR,DSN=SYS1.MODGEN\n//         DD  DISP=SHR,DSN=SYS1.AMODGEN\n//SYSLIN   DD  UNIT=VIO,DSN=&LOADSET,DISP=(MOD,PASS),\n//             SPACE=(CYL,(2,2)),DCB=BLKSIZE=1680\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(10,2))\n//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(12,2))\n//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(20,2))\n//SYSPUNCH DD  DUMMY =*,DCB=FUNC=I\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSIN    DD  DSN=MURF.FILE025.PDS(CONESA),DISP=SHR\n//*\n//LKED         EXEC PGM=IEWL,REGION=6M,COND=(4,LT),\n//             PARM='XREF,LET,LIST,RENT,REUS,AC(1)'\n//SYSPRINT     DD   SYSOUT=*\n//SYSUT1       DD   DSN=&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD      DD   DISP=SHR,DSN=SYS1.APF.LIBRARY\n//SYSLIN       DD   UNIT=SYSDA,DSN=&LOADSET,DISP=(OLD,DELETE)\n//             DD   DDNAME=SYSIN\n//SYSIN        DD   *\n ALIAS CONS\n NAME ZTPR0200(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CONS390": {"ttr": 1030, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x98&\\x8f\\x00\\x98&\\x8f\\x15Y\\x04\\x17\\x04$\\x00\\x00\\xd4\\xe4\\xd9\\xc6@@@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1998-09-25T00:00:00", "modifydate": "1998-09-25T15:59:00", "lines": 1047, "newlines": 1060, "modlines": 0, "user": "MURF"}, "text": "*******************************************************************\n*                                                                 *\n*            D I S C L A I M E R    S E C T I O N                 *\n*                                                                 *\n*******************************************************************\n*                                                                 *\n* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *\n* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        *\n* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *\n* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *\n* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *\n* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *\n* SUPPLIED .                                                      *\n*                                                                 *\n* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *\n* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *\n* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *\n* FUTURE .                                                        *\n*                                                                 *\n*******************************************************************\n         MACRO\n         BEGIN &PROGRAM=\nR0       EQU   0\nR1       EQU   1                  R\nR2       EQU   2                    E\nR3       EQU   3                      G\nR4       EQU   4                        I\nR5       EQU   5                          S\nR6       EQU   6                            T\nR7       EQU   7                              E\nR8       EQU   8                                R\nR9       EQU   9                  E\nR10      EQU   10                   Q\nR11      EQU   11                     U\nR12      EQU   12                       A\nR13      EQU   13                         T\nR14      EQU   14                           E\nR15      EQU   15                             S\n         USING *,15\n         B     28(R15)\n         DC    CL8'&PROGRAM'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         STM   14,12,12(13)\n         DROP  15\n         EJECT\n         MEND\n         TITLE 'CONSOLE DISPLAY'\n***********************************************************************\n*        FOR AUTHORIZATION - INSERT USERIDS THAT CAN USE IT INTO THE  *\n*        TABLE.  TABLEND IS THE LAST ENTRY IN THE TABLE.              *\n*                                                                     *\n*        F TABLEND  LAST                                              *\n*                                                                     *\n*        DISPLAY MVS CONSOLE DISPLAY WITH AUTOMATIC REFRESH OF SCREEN *\n*        TO PRESENT A CONSOLE APPEARANCE.                             *\n*                                                                     *\n*        USED THE BASIC CROSS MEMORY CONSOLE BUFFER READ FROM THE     *\n*        CDF PROGRAM ON THE SHARE TAPE, AND MODIFIED TO A COMMAND     *\n*        PROCESSOR HIGHLIGHTING THE HIGHLIGHTED MESSAGES - P.MURPHY   *\n*                                                                     *\n*                                                                     *\n***********************************************************************\nZTPR0200 CSECT\n         BEGIN PROGRAM=ZTPR0200\n         LR    R11,R15            LOAD ADDRESS OF ENTRY POINT\n         USING ZTPR0200,R11       R11 BASE REGISTER\n         LA    R12,4095(,R11)     ADDRESS OF NEXT BASE REGISTER\n         USING ZTPR0200+4095,R12  R12 BASE REGISTER\n         LR    R2,R1\n         GETMAIN R,LV=WORKLENG\n         LR    R3,R1\n         ST    R13,4(R3)      SAVE THE CALLER'S R13\n         ST    R3,8(,R13)\n         LR    R13,R3\n         USING WORKAREA,R13\n         ST    R2,SAVECPPL\n         USING CPPL,R2\n         L     R6,CPPLPSCB\n         DROP  R2\n         USING PSCB,R6\n         MVC   USERID,PSCBUSER\n         DROP  R6\n         MVI   BLANKS,X'40'\n         MVC   BLANKS+1(79),BLANKS\n         MVI   CONSFLAG,X'00'\n         MVI   USERFLAG,X'00'\n         MVI   CNSLFLAG,X'00'\n         MVI   THRUFLAG,X'00'\n         MVI   ISSUFLAG,X'00'\n         MVC   CMDLINE,BLANKS\n         LA    R8,TABLE\nVERLOOP  CLC   0(7,R8),USERID\n         BE    VEROK\n         CLC   0(4,R8),HEXFS\n         BE    NOAUTH\n         CLC   0(4,R8),TABLEND\n         BE    NOAUTH\n         LA    R8,8(,R8)\n         B     VERLOOP\nVEROK    EQU   *\n         MVI   AUTOFLAG,X'00' AUTO MODE FLAG\n         MVI   RESHOWFL,X'00' RESHOW INDICATOR\n         MVI   MOD5FLAG,X'00' FLAG FOR MOD 5\n         MVI   SCREEN,X'C3' WCC\n         MVC   CLEAR(13),CLR  CLEAR SCREEN CONTROL CHARS\n         GTSIZE\n         LTR   R0,R0              DISPLAY DEVICE?\n         BZ    FREESKIP           YES, GO FREE AND RETURN\n         CH    R1,EIGHTY          80 CHAR LINES\n         BNE   CHEKM5             NO, SET MODE 2\n         CH    R0,FORTY3          MOD 4?\n         BE    SETM4              YES, BRANCH\n         CH    R0,THIRTY2         MOD 3?\n         BE    SETM3              YES, BRANCH\nSETM2    TPUT  MOD2,3\n         TGET  REPLY,50\n         LA    R3,24              22 LINES PER SCREEN\n         MVC   CURSOR,=X'5CF0'    ROW 24 COL 2\n         MVC   ENDOFSCR,=X'5D7F'    ROW 24 COL 80\n         MVC   TPUTLEN,=AL4(24*84+1) LENGTH OF TPUT\n         B     PROCESS\nNOMVS    MVI   USERFLAG,X'FF'\n         LA    R8,8(,R8)\n         B     VERLOOP\nCHEKM5   CH    R0,=H'27'          27 LINES?\n         BNE   SETM2\n         CH    R1,=H'132'         132 WIDTH?\n         BNE   SETM2\nSETM5    LA    R3,27              27 LINES PER SCREEN\n         MVI   MOD5FLAG,X'FF'\n         MVC   TPUTLEN,=AL4(27*84+1) LENGTH OF TPUT\n         MVC   ENDOFSCR,=X'F76B'  ROW 27 COL 132\n         MVC   CURSOR,=X'F5E8'    ROW 27 COL 2 IC\n         B     PROCESS\nSETM3    LA    R3,32              22 LINES PER SCREEN\n         MVC   TPUTLEN,=AL4(32*84+1) LENGTH OF TPUT\n         MVC   ENDOFSCR,=X'E77E'  ROW 32 COL 80\n         MVC   CURSOR,=X'E6F0'    ROW 32 COL 2 IC\n         B     PROCESS\nSETM4    LA    R3,43              22 LINES PER SCREEN\n         MVC   TPUTLEN,=AL4(43*84+1) LENGTH OF TPUT\nPROCESS  ST    R3,NUMLINES\n         MVI   HELPFLAG,X'00'\n         MVI   CMDFLAG,X'00'\n         LA    R1,16\n         L     R1,0(R1)\n         USING CVT,R1\n         L     R1,CVTASVT\n         DROP  R1\n         USING ASVT,R1\n         L     R5,ASVTMAXU\n         LA    R15,ASVTENTY-4\nASVTLOOP BCTR  R5,0\n         LTR   R5,R5\n         BZ    CONABEND\n         LA    R15,4(,R15)\n         ICM   R6,15,0(R15)\n         BM    ASVTLOOP\n         USING ASCB,R6\n         ICM   R7,15,ASCBJBNS\n         BZ    ASVTLOOP\n         CLC   =C'CONSOLE',0(R7)\n         BNE   ASVTLOOP\n         SR    R1,R1\n         LH    R1,ASCBASID\n         DROP  R1,R6\nSTORECON ST    R1,CONSASID\n         BAL   R3,AUTHRIZ\n         AXRES AXLIST=AXLIST      RESERVE AN AX\n         L     R1,CONSASID        'CONSOLE' ASID\n         AXEXT ASID=(1)           EXTRACT AX OF 'CONSOLE'IN R0\n         AXSET AX=(0)             SET OUR AX TO THAT OF CONSOLE\n         B     SHOWCONS\nAXFREE   DS    0H\n         AXFRE AXLIST=AXLIST\n         BAL   R3,UNAUTH\nSHOWRTRN DS    0H\nFREESKIP LR    R3,R13\n         L     R13,SAVEAREA+4 RESTORE THE CALLER'S R13\n         FREEMAIN RC,A=(3),LV=WORKLENG\n         SR    R15,R15\n         RETURN (14,12),RC=(15)\nSHOWCONS DS    0H\n         STFSMODE ON,INITIAL=YES  FULL SCREEN MODE ON\n         TPUT  CLEAR,13,FULLSCR\n*---------------------------------------------------------------------*\n*          BUILD A TABLE OF UCM ADDRESSES (ONE PER CONSOLE)           *\n*---------------------------------------------------------------------*\nBLDUCMS  L     R4,16              R4 = ADDR OF CVT\n         USING CVT,R4\n         L     R4,CVTCUCB         R4 = ADDR OF 'CUCB' (UCM BASE)\n         DROP  R4\n         USING UCM,R4\n         L     R6,UCMVEZ          R6 = LENGTH OF EACH UCM ENTRY\n         L     R7,UCMVEL          R7 = ADDR OF LAST UCM ENTRY\n         LA    R8,UCMTAB+4        R8 = ADDR OF UCMTAB\n         LA    R9,UCMTABE         R9 = ADDR OF END OF UCMTAB\n         LR    R5,R4              BASE\n         S     R5,=F'4'           R5 = ADDR OF FIRST UCM PREFIX\n         USING UCMPRFX,R5\n         TM    UCMSFLG1,UCMSYSE   NO CONSOLES?\n         BO    CONABEND           YES\n         DROP  R5\n         L     R5,UCMVEA          R5 = ADDR OF FIRST UCM ENTRY\n         XR    R2,R2              R2 = 0 (NUMBER OF VALID UCMS)\nUCMLOOP  ST    R5,0(0,R8)         SAVE UCM ADDRESS IN UCMTAB\n         LA    R2,1(0,R2)         R2  = R2  + 1  (ONE MORE UCM)\n         LA    R8,4(0,R8)         R8 = ADDR OF NEXT UCMTAB ENTRY\n         CR    R8,R9              DOES R8 POINT PAST END OF UCMTAB?\n         BNL   UCMDONE            YES; LEAVE LOOP\n         AR    R5,R6              R5 = ADDR OF NEXT UCM ENTRY\n         CR    R5,R7              DOES R5 POINT PAST UCM ENTRIES?\n         BL    UCMLOOP            NOPE; KEEP GOING\nUCMDONE  STH   R2,NUMUCMS         SAVE NUMBER OF UCMS FOUND\n         CLI   CNSLFLAG,X'FF'\n         BNE   SETMAST\n         MVC   OLDCONS,CONSOLE\n         L     R4,CONSOLE\n         LA    R4,1(,R4)\n         B     MASTSCAN\n         DROP  R4\n*---------------------------------------------------------------------*\n*        SCAN THE UCM FOR THE MASTER CONSOLE AS THE DEFAULT           *\n*---------------------------------------------------------------------*\nSETMAST  SR    R4,R4\n         ST    R4,CONSOLE\nMASTSCAN LA    R5,UCMTAB          SET POINTER TO UCM ADDRESS TABLE\nCKNUMUCM CH    R4,NUMUCMS         IS NUMBER TOO HIGH?\n         BNH   MASTCONT           NO, CONTINUE\n         CLI   CNSLFLAG,X'FF'\n         BNE   CONCHECK\n         CLI   THRUFLAG,X'FF'\n         BE    NOCONS\n         MVI   THRUFLAG,X'FF'\n         SR    R4,R4              START W/ FIRST ENTRY\n         B     MASTCONT\nCONABEND EQU   *\nNOCONS   TPUT  MSGNO2,43\n         L     R1,SAVECPPL\n         LINK  EP=ZTPR0205\n         TPUT  CLEAR,13,FULLSCR\n         B     AXFREE\nMSGNO2   DC    CL43'ALL CONSOLES OFFLINE, GOING TO MASTER TRACE'\nCONCHECK MVI   CNSLFLAG,X'FF'\n         MVI   THRUFLAG,X'FF'\n         B     SETMAST\nMASTCONT SLL   R4,2               MAKE CONSOLE NUMBER TABLE INDEX\n         LA    R5,0(R5,R4)        SET POINTER TO UCM ADDRESS SLOT\n         L     R5,0(0,R5)         SET POINTER TO UCM\n         LTR   R5,R5\n         BZ    NEXT\n         USING UCMLIST,R5         TELL ASSEMBLER ABOUT UCM\n         CLI   CNSLFLAG,X'FF'\n         BE    SKIPMSTR\n         TM    UCMDIDCS,UCMAHERE  ON THIS SYSTEM?\n         BZ    NEXT               NO ? BRANCH\n         TM    UCMDISP1,UCMDISPA  IS THIS A MASTER CONSOLE?\n         BNZ   ACTIVCHK           YES ? FOUND THE MASTER CONSOLE ..\n         B     NEXT\nSKIPMSTR EQU   *\n         TM    UCMDIDCS,UCMAHERE  ON THIS SYSTEM?\n         BZ    NEXT               NO ? BRANCH\n         TM    UCMDISP1,UCMDISPC  GRAPHICS\n         BZ    NEXT\nACTIVCHK TM    UCMATR,UCMUF       ACTIVE?\n         BNZ   MASTFND\nNEXT     SRL   R4,2               RESET CONSOLE NUMBER TO RELATIVE\n         LA    R4,1(0,R4)         SET POINTER TO NEXT CONSOLE\n         B     MASTSCAN           CONTINUE MASTER CONSOLE SCAN LOOP\nMASTFND  SRL   R4,2               RESET CONSOLE NUMBER TO RELATIVE\n         ST    R4,CONSOLE         SET VALID CONSOLE NUMBER (MASTER)\n         DROP  R5                 DONT NEED UCM ADDRESSABILITY NOW\nNEXTPAGE LA    R5,UCMTAB          R5 = ADDR OF UCMTAB\n         ICM   R4,15,CONSOLE      R4 = CONSOLE TO BE DISPLAYED\n         BZ    WRTERR4            WE HAVE NO CONSOLE ZERO (MASTER)\n         CH    R4,NUMUCMS         IS NUMBER TOO HIGH?\n         BNH   GETUCM             NO, CONTINUE\nRESETCN  L     R4,OLDCONS         RESET TO OLD CONSOLE\n         ST    R4,CONSOLE         AND SAVE IT\nGETUCM   SLL   R4,2               MULTIPLY BY 4\n         LA    R5,0(R5,R4)        R5 = ADDR OF ADDR OF UCM\n         L     R5,0(0,R5)         R5 = ADDR OF UCM\n         USING UCMLIST,R5\n         L     R6,UCMXB           R6 = ADDR OF RDCM\n         ST    R6,UCMTABX\n         LTR   R6,R6              IS THIS A GRAPHICS CONSOLE?\n         BP    GRAPHICS           YES\n         LA    R5,UCMTAB          R5 = ADDR OF UCMTAB\nWRTERR4  DS    0H\n         B     RESETCN            RESET THE CONSOLE NUMBER\nGRAPHICS EQU   *\n         L     R6,UCMFEXTP        UCM FIXED EXTENSION\n         USING UCMEFEXT,R6        ADDRESSABILITY\n         MVC   USER,UCMEFCNM      LOGON ID\n         DROP  R6\nAUTHDONE EQU   *\n         MVC   OLDCONS,CONSOLE\n         MVC   HEADING,HEADING1\n***********************************************************************\n*    FOR SYSH UNCOMMENT THE FOLLOWING 2 LINES TO LOOK AT ALTERNATE    *\n***********************************************************************\n*        CLI   CONSFLAG,X'FF'\n*        BNE   CNSLSW\n         CLI   ISSUFLAG,X'FF'\n         BNE   CONSINIT\n         MVC   HEADING+45(18),NOTISSUD\n         MVI   ISSUFLAG,X'00'\nCONSINIT MVI   CNSLFLAG,X'00'\n*        BAL   R3,AUTHRIZ\n         L     R1,CONSASID        'CONSOLE' ASID\n         SSAR  R1                 SET 'CONSOLE' AS SECONDARY\n         PRINT ON,GEN\n         SLR   R0,R0              SECONDARY KEY\n         L     R6,UCMTABX\n         LA    R1,4               TRUE LENGTH\n         MVCP  RDCM(R1),0(R6),R0  ADDRESS OF PAGEABLE DCM\n         LA    R1,1\n         MVCP  TYPE(R1),15(R6),R0       ATTRIB\n         L     R7,RDCM\n         USING STRTDCM,R7\n         LA    R1,L'LASTLINE      TRUE LENGTH\n         MVCP  LASTLINE(R1),DCMINPUT-STRTDCM(R7),R0\n         LA    R1,L'SIBPTR\n         SLR   R0,R0              SET STORAGE KEY\n         MVCP  SIBPTR(R1),DCMASCRN-STRTDCM(R7),R0 PT TO SCRN ADRJPB\n         LA    R1,2\n         MVCP  HEADING+8(R1),DCMDEL-STRTDCM(R7),R0   ROLL DELETE VAL\n         MVCP  RTME(R1),DCMRTME-STRTDCM(R7),R0       RTME\n         MVCP  RNUM(R1),DCMDL-STRTDCM(R7),R0       RTME\n         LA    R1,4\n         MVCP  CONL(R1),DCMLSCRN-STRTDCM(R7),R0\n         L     R8,SIBPTR         R8 = ADDR OF SCREEN IMAGE\n         L     R5,CONL\n         SR    R4,R4\n         SR    R5,R8\n         TM    TYPE,X'14'        SUPPORT EXTENDED COLOR/DATASTREAM?\n         BO    EXTLNGTH          YES, BRANCH\n         LA    R5,84(,R5)\n         B     REGLNGTH\nEXTLNGTH LA    R5,90(,R5)        ADD LENGTH FOR LAST LINE\nREGLNGTH ST    R5,CONL           SAVE IT\n         LA    R4,SCREEN         MY BUF\n         LA    R4,3737(,R4)\n         LR    R9,R5             BUFFER LEN\nMOVEBUFF DS    0H\n         TM    TYPE,X'14'        SUPPORT EXTENDED COLOR/DATASTREAM?\n         BO    MOVEL\n         SH    R8,=H'06'\n         B     RESUMMOV\nMOVEL    SH    R8,=H'12'\nRESUMMOV SLR   R0,R0             RESET THE KEY\nMVCPLOOP DS    0H\n         MVCP  0(R5,R4),0(R8),R0 LOOP THRU THE CONSOLE BUFFER\n         BZ    GOTITALL\n         AL    R8,=F'256'        MAX LEN ALLOWED\n         AL    R4,=F'256'        MAX LEN ALLOWED\n         SL    R5,=F'256'        MAX LEN ALLOWED\n         B     MVCPLOOP\n*---------------------------------------------------------------------*\n*        IN ORDER TO ISSUE SVCS THE PRIMARY AND                       *\n*        SECONDARY ADDRSPC MUST BE THE SAME                           *\n*---------------------------------------------------------------------*\nGOTITALL DS    0H\n         EPAR  R1                EXTRACT PRIMARY ASN\n         SSAR  R1\n*        BAL   R3,UNAUTH\n         DROP  R5,R7\n         LA    R3,SCREEN         SET POINTER TO FIRST LINE OF BUF\n         LA    R3,3737(,R3)\n         LA    R9,HEADING+10\n         CLI   HEADING+9,C' '\n         BNE   RDMODE\n         LA    R9,HEADING+9\nRDMODE   MVC   0(6,R9),RTMEC\n         SR    R5,R5\n         LH    R5,RTME\n         CVD   R5,DOUBLWD\n         MVC   WORKLINE(5),PATTERN1\n         ED    WORKLINE(5),DOUBLWD+5\n         MVC   6(4,R9),WORKLINE+1\n         CLI   9(R9),C'0'\n         BE    PUTBLNK\n         MVC   7(2,R9),=C'1/'\n         B     PUTRNUM\nPUTBLNK  MVI   9(R9),C' '\nPUTRNUM  MVC   10(6,R9),RNUMC\n         SR    R5,R5\n         IC    R5,RNUM+1\n         CVD   R5,DOUBLWD\n         MVC   WORKLINE(5),PATTERN1\n         ED    WORKLINE(5),DOUBLWD+5\n         MVC   16(3,R9),WORKLINE+2\n         TIME  DEC\n         ST    R0,WORK\n         MVI   WORK+3,X'0C'\n         UNPK  DOUBLWD(7),WORK(4)\n         LA    R9,HEADING+36\n         MVC   0(2,R9),DOUBLWD\n         MVC   3(2,R9),DOUBLWD+2\n         MVC   6(2,R9),DOUBLWD+4\n         MVC   28(8,R9),USER\n         MVC   10(10,R9),BLANKS\n         CLI   AUTOFLAG,X'FF'\n         BNE   FIRSTL\n         MVC   10(10,R9),=C'AUTOUPDATE'\nFIRSTL   L     R9,NUMLINES       NUMBER OF LINES ON PROG TERMINAL\n         L     R5,CONL\n         SR    R4,R4\n         LA    R1,90\n         TM    TYPE,X'14'\n         BO    DIV1\n         LA    R1,84\nDIV1     DR    R4,R1\n         LA    R5,2(,R5)\n         ST    R5,CONL\n         CR    R9,R5\n         BNL   FIRSTL1\n         SR    R5,R9\n         L     R1,CONL\n         SR    R4,R4\n         LA    R5,2(,R5)\n         SR    R1,R5\n         ST    R1,CONL\n         LA    R1,90\n         CLI   TYPE,X'80'\n         BNE   MUL1\n         LA    R1,84\nMUL1     MR    R4,R1\n         LA    R3,0(R5,R3)\nFIRSTL1  LA    R5,SCREEN+1            ADDRESS OF FIRST LINE\n         LA    R6,PAGEDEF             LINES TO BE DISPLAYED\n*        AP    HEADING(2),HEADING(2)\n         CLI   MOD5FLAG,X'FF'         MOD 5?\n         BNE   NOTMOD5\n         LA    R6,PAGEDEF5\nNOTMOD5  L     R1,CONL\n         SR    R9,R1\n         SR    R10,R10\n         BCTR  R9,0                   MINUS ONE\n         MVC   0(5,R5),0(R6)          CONTROL CHAR\n         MVC   5(79,R5),HEADING       HEADING\n         SR    R15,R15\n         IC    R15,CONSOLE+3\n         SRL   R15,4                  ONLY WANT LEFT BYTE\n         C     R15,TEN\n         BL    NUMERIC1\n         O     R15,CHAROR\n         B     SECONDCK\nNUMERIC1 O     R15,NUMBEROR\nSECONDCK STC   R15,78(R5)\n         IC    R15,CONSOLE+3\n         SLL   R15,28                 ONLY WANT LEFT BYTE\n         SRL   R15,28\n         C     R15,TEN\n         BL    NUMERIC2\n         O     R15,CHAROR\n         B     STORECHR\nNUMERIC2 O     R15,NUMBEROR\nSTORECHR STC   R15,79(R5)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R10,85(,R10)\n         LA    R6,5(,R6)              INCREMENT\n         BCTR  R1,0\n         CLI   HELPFLAG,X'FF'         HELP?\n         BNE   MOVESTUP\n         L     R9,NUMLINES\n         S     R9,=F'07'\n         MVC   0(5,R5),0(R6)\n         MVC   5(79,R5),BLANKS\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,05(,R6)             INCREMENT\n         MVC   0(5,R5),0(R6)\n         LA    R1,HEADING1\n         MVC   5(79,R5),80(R1)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,5(,R6)              INCREMENT\n         MVC   0(5,R5),0(R6)\n         LA    R1,80(,R1)\n         MVC   5(79,R5),80(R1)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,5(,R6)              INCREMENT\n         MVC   0(5,R5),0(R6)\n         MVC   5(79,R5),160(R1)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,5(,R6)              INCREMENT\n         MVC   0(5,R5),0(R6)\n         MVC   5(79,R5),240(R1)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,5(,R6)              INCREMENT\n         LA    R10,420(,R10)\n         CLI   USERFLAG,X'FF'\n         BNE   SPACLOOP\n         MVC   0(5,R5),0(R6)\n         MVI   4(R5),X'E8'          HILITE\n         MVC   5(79,R5),320(R1)\n         LA    R5,84(,R5)             INCREMENT\n*        LA    R6,5(,R6)              INCREMENT\n         LA    R10,84(,R10)\n         B     SPACLOOP\nMOVESTUP LR    R15,R5\n*        AP    HEADING(3),HEADING(3)\n*        MVC   0(4,R5),0(R6)          LINE ADDRESS\n*        MVC   4(1,R5),0(R3)          ATTRIBUTE BYTE\n*        B     MVIT2\n***********************************************************************\n*                                                                     *\n* THE CONSOLES WITH EXTENDED DATASTREAMS HAVE THE FOLLOWING FORMATS:  *\n* (THE TYPE WILL HAVE EXTENDED COLOR AND DATASTREAM TURNED ON - X'14')*\n*                                                                     *\n* REF GA23-0059 DATASTREAM PROGRAMMERS REFERENCE                      *\n*                                                                     *\n* 1100002903C0E442F4410040  (THEN 4 BLANKS AND THE LINE)              *\n*                                                                     *\n* 11 SBA FOR 0000 THE FIRST LINE  OR 0050 2ND LINE ETC - 110000       *\n* 2903 - SFE START FIELD EXTENDED FORMAT (29) WITH 03 EXTENDED FIELDS *\n* C0E4 - FIELD ATRIBUTE      E4 - PROT DISPLAY                        *\n* 42F4 - 42 FOREGROUND COLOR F4 IS GREEN F1 IS BLUE F3 PINK ETC       *\n* 4100 - 41 EXTENDED HIGHLIGHTING 00 MEANS DEFAULT F1 BLINK F4 UNDERSC*\n*        F2 REVERSE VIDEO  F0 NORMAL (PER 3270 FIELD ATTRIBUTE)       *\n*                                                                     *\n* THE CONSOLES WITHOUT EXTENDED DATASTREAM HAVE THE FOLLOWING FORMATS:*\n*                                                                     *\n* 11404028E440              (THEN 1 BLANK  AND THE LINE)              *\n*                                                                     *\n* 11 SBA FOR 4040 THE FIRST LINE                                      *\n* 28 ATTRIBUTE CHAR E4 PROT DISPLAY                                   *\n*                                                                     *\n* TOTAL LENGTH NON-EXTENDED 84, EXTENDED DISPLAY LENGTH IS 90         *\n*                                                                     *\n***********************************************************************\nMOVELOOP EQU   *\n         CLI   CLRFLAG,X'FF'\n         BE    MVIT\n         TM    TYPE,X'14'             EXTENDED FORMAT?\n         BZ    COMP2                  NO - USE OTHER DISPLACEMENT\n         CLC   5(74,R15),11(R3)       HAS THIS LINE CHANGED?\n         BNE   SETMOVE\n         CLC   4(1,R15),06(R3)        ATTRIBUTE BYTE CHANGED?\n         BE    SKPMV                  NO NEED SENDING DOWN THE LINE\n         B     SETMOVE\nCOMP2    CLC   5(74,R15),5(R3)        HAS THIS LINE CHANGED?\n         BNE   SETMOVE\n         CLC   4(1,R15),04(R3)        ATTRIBUTE BYTE CHANGED?\n         BE    SKPMV                  NO NEED SENDING DOWN THE LINE\nSETMOVE  MVI   CLRFLAG,X'FF'          SCREEN HAS CHANGED FROM HERE DOWN\nMVIT     MVC   0(4,R5),0(R6)          LINE ADDRESS\nCKMVIT   TM    TYPE,X'14'             EXTENDED FORMAT?\n         BZ    MVIT2                  NO - USE OTHER DISPLACEMENT\n         MVC   4(1,R5),06(R3)         ATTRIBUTE BYTE\n         MVC   5(79,R5),11(R3)        MOVE LINE OF PRINT\n         B     MVIT3\nMVIT2    EQU   *\n         MVC   4(1,R5),0(R3)          ATTRIBUTE BYTE FOR FIRST LINE\n         MVC   4(1,R5),04(R3)         ATTRIBUTE BYTE\n         MVC   5(79,R5),5(R3)         MOVE LINE OF PRINT\nMVIT3    OC    5(79,R5),BLANKS        MAKE SURE NO CONTROL CHARS\n         LA    R5,84(,R5)             NEXT LINE\n         LA    R10,84(,R10)           LENGTH OF TPUT\nSKPMV    LA    R6,05(,R6)             INCREMENT\n         TM    TYPE,X'14'\n         BO    USUAL\n         LA    R3,84(,R3)\n         B     USUAL1\nUSUAL    LA    R3,90(,R3)             INCREMENT\nUSUAL1   LA    R15,84(,R15)\n         BCT   R1,MOVELOOP            LOOP\n         MVI   CLRFLAG,X'00'\nSPACLOOP LA    R6,05(,R6)             INCREMENT\n         BCTR  R9,0\n         C     R9,=F'0'\n         BH    SPACLOOP\n         MVC   0(5,R5),0(R6)          LINE ADDRESS\n         MVI   4(R5),X'C9'            ATTRIBUTE\n         MVI   5(R5),X'13'            INSERT CURSOR\n         CLI   HELPFLAG,X'FF'\n         BE    GOAHEAD2\n         CLI   IPLFLAG,X'FF'\n         BE    GOAHEAD2\n         CLI   AUTOFLAG,X'FF'\n         BE    AUTOROLL\nGOAHEAD  CLI   RESHOWFL,X'FF'\n         BNE   GOAHEAD2\n         MVI   RESHOWFL,X'00'\n         MVC   6(72,R5),CMDLINE+4\n         B     GOAHEAD3\nGOAHEAD2 MVC   6(79,R5),BLANKS        LAST LINE IS INPUT LINE\nGOAHEAD3 MVI   CMDFLAG,X'00'\n         LA    R10,84(,R10)\n         LR    R0,R10\n         LA    R1,SCREEN              ADDRESS OF SCREEN\n*        LA    R15,TYPE\n*        AP    HEADING(2),HEADING(2)\n         TPUT  (1),(0),FULLSCR        TPUT\n         MVC   REPLY,BLANKS           CLEAR\nTGET1    TGET  REPLY,84,ASIS,WAIT     INPUT\n*        AP    HEADING(3),HEADING(3)\n         MVI   HELPFLAG,X'00'\n         B     CHEKOUT\nAUTOROLL EQU   *\n*        L     R0,TPUTLEN             LENGTH OF TPUT\n         LA    R1,SCREEN              ADDRESS OF SCREEN\n         CLI   RESHOWFL,X'FF'\n         BNE   GOAHEAD5\n         MVI   RESHOWFL,X'00'\n         MVC   6(72,R5),CMDLINE+4\n         MVC   REPLY,BLANKS\n         LA    R10,72(,R10)\n         B     GOAHEAD5\n*OAHEAD4 S     R0,=F'79'\nGOAHEAD5 CLI   CMDFLAG,X'FF'\n         BNE   AUTOTPUT\n         MVC   0(5,R5),0(R6)          LINE ADDRESS\n         MVI   4(R5),X'C9'            ATTRIBUTE\n         MVI   5(R5),X'13'            INSERT CURSOR\n         MVI   CMDFLAG,X'00'\nAUTOTPUT LA    R0,5(,R10)\n*        LR    R0,R10\n         TPUT  (1),(0),FULLSCR\n         TGET  REPLY,70,ASIS,NOWAIT\n         STIMER WAIT,BINTVL=TIMER\nCHEKOUT  CLI   REPLY,X'7D'\n         BE    GOTSTUFF\n         NI    REPLY,X'0F'\n         CLI   REPLY,X'01'\n         BE    HELP\n         CLI   REPLY,X'02'\n         BE    AUTOSTOP\n         CLI   REPLY,X'03'\n         BE    CHEKAUTO\n         CLI   REPLY,X'04'\n         BE    AUTOON\n         CLI   REPLY,X'05'\n         BE    CNSLSW\n         CLI   REPLY,X'06'\n         BE    RESHOW\n         CLI   REPLY,X'07'\n         BE    MTT\n         CLI   REPLY,X'08'\n         BE    AUTO10\n         CLI   REPLY,X'09'\n         BE    AUTO2\n*        CLI   REPLY,X'0A'\n*        BE    OMON\n         CLI   REPLY,X'0B'\n         BE    AUTO4\n         CLI   REPLY,X'0C'\n         BE    IPLINFO\nNOTIFY   MVI   CLRFLAG,X'FF'\n         MVI   CMDFLAG,X'FF'\n         B     AUTHDONE\nCHEKAUTO CLI   AUTOFLAG,X'FF'\n         BNE   AXFREE\n         MVI   AUTOFLAG,X'00'\n         B     AUTHDONE\nCNSLSW   MVI   CNSLFLAG,X'FF'\n         MVI   REPLY,X'00'\n         MVI   CONSFLAG,X'FF'\n         MVI   THRUFLAG,X'00'\n         MVI   CLRFLAG,X'FF'\n         LA    R3,SCREEN\n         LA    R3,3737(,R3)\n         LA    R9,44\nCLEARSW  MVC   0(80,R3),BLANKS\n         LA    R3,80(,R3)\n         BCT   R9,CLEARSW\n         B     SHOWCONS\nRESHOW   MVI   RESHOWFL,X'FF'\n         B     AUTHDONE\nIPLINFO  MVC   WORKLINE,BLANKS\n         MVC   WORKLINE+10(46),MESSAGE\n         LA    R1,16              HEX 10\n         L     R2,0(R1)           ADDRESS OV CVT\n         USING CVT,R2\n         L     R3,CVTSMCA         ADDRESS OF SMF CONTROL AREA\n         L     R1,CVTSYSAD\n         MVC   WORKLINE+72(3),13(1)\n         MVC   WORKLINE+65(7),=C'SYSRES='\n         USING SMCABASE,R3\n         MVC   IPLDATE,SMCAIDTE   IPL DATE\n         MVC   IPLTIME,SMCAITME   IPL TIME\n         DROP  R3\n         L     R3,CVTASMVT\n         TM    1(R3),X'08'     CLPA?\n         BNZ   NOCLPA             1 MEANS A QUICK START - NO CLPA WAS\n         MVC   WORKLINE+57(3),=C'YES'\n         B     DATEEDIT\nNOCLPA   MVC   WORKLINE+57(3),=C'NO '\nDATEEDIT MVC   WORKLINE+31(5),PATTERN1\n         ED    WORKLINE+31(5),IPLDATE+1 MAKE PRINTABLE\n         DROP  R2\n         L     R6,IPLTIME\n         SRDA  R6,32(0)\n         L     R3,THREE60\n         DR    R6,R3\n         CVD   R7,DOUBLWD\n         MVC   WORK(4),=X'40212020'\n         ED    WORK(4),DOUBLWD+6\n         MVC   WORKLINE+43(2),WORK+2\n         SRDA  R6,32              SHIFT REMAINDER\n         L     R3,SIXTY\n         DR    R6,R3\n         CVD   R7,DOUBLWD\n         MVC   WORK(4),=X'F0212020'\n         ED    WORK(4),DOUBLWD+6\n         MVC   WORKLINE+46(2),WORK+2\n         LA    R5,SCREEN+1            ADDRESS OF FIRST LINE\n         LA    R6,PAGEDEF             LINES TO BE DISPLAYED\n         LA    R10,85\n         CLI   MOD5FLAG,X'FF'\n         BNE   NONMOD5\n         LA    R6,PAGEDEF5\nNONMOD5  L     R9,NUMLINES\n         BCTR  R9,0\n         MVC   0(5,R5),0(R6)\n         MVC   5(79,R5),WORKLINE\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,05(,R6)             INCREMENT\n         BCTR  R9,0\n         TPUT  CLEAR,13,FULLSCR\n         MVI   IPLFLAG,X'FF'\n         TCLEARQ INPUT\n         B     SPACLOOP\nMTT      L     R1,SAVECPPL\n         LINK  EP=ZTPR0205\n         TPUT  CLEAR,13,FULLSCR\n         MVI   AUTOFLAG,X'00'\n         MVI   CLRFLAG,X'FF'\n         B     AUTHDONE\n*MON     AP    HEADING(2),HEADING(2)\n*        B     AUTHDONE\nHELP     MVI   HELPFLAG,X'FF'\n         MVI   AUTOFLAG,X'00'\n         TPUT  CLEAR,13,FULLSCR\n         MVI   CLRFLAG,X'FF'\n         B     FIRSTL\nAUTOON   MVC   TIMER,ONE\n         CLI   USERFLAG,X'FF'\n         BE    AUTO2\n         B     AUTOSET\nAUTO2    MVC   TIMER,THREE\n         B     AUTOSET\nAUTO4    MVC   TIMER,FIVE\nAUTOSET  MVI   AUTOFLAG,X'FF'\n         MVC   5(72,R5),BLANKS\n         MVI   REPLY,X'00'\n         B     AUTHDONE\nAUTO10   MVC   TIMER,=F'990'            APP 10 SECS\n         B     AUTOSET\nAUTOSTOP MVI   AUTOFLAG,X'00'\n         B     AUTHDONE\nSKIPALL  MVI   ISSUFLAG,X'FF'\n         B     AUTHDONE\nGOTSTUFF DS    0H\n         CLI   REPLY+6,C'>'        IS IT NOTIFY MESSAGE?\n         BE    NOTIFY              THEN EXIT\n         OC    REPLY+6(74),BLANKS  ALL INPUT UPPER CASE\n         CLC   REPLY+6(70),BLANKS  COMMAND AREA IS SPACES?\n         BE    AUTHDONE            THEN A COMMAND WAS NOT ENTERED\n         MVC   CMDLINE+4(72),REPLY+6\n         MVC   CMDLINE(4),CMDFMT\n         MVC   REPLY,BLANKS\n         CLI   CMDLINE+4,C'Z'      IS IT END,\n         BE    CHEKAUTO            THEN EXIT\n         CLI   CMDLINE+4,C'X'      IS IT END,\n         BE    CHEKAUTO            THEN EXIT\n         CLC   CMDLINE+4(3),=C'END' IS IT END,\n         BE    AXFREE               THEN EXIT\nGOTCMD   TPUT  CLEAR,13,FULLSCR\n         MVI   CLRFLAG,X'FF'\nLOGLINE  MVC   WTOCMD(100),WTOLIST\n         MVC   WTOCMD+8(72),CMDLINE+4\n         CLI   USERFLAG,X'FF'\n         BNE   ISSUOK\nISSUCK   CLC   PJES2,CMDLINE+4\n         BE    HELP\n         CLC   PQ,CMDLINE+4\n         BE    HELP\n         CLC   $P,CMDLINE+4\n         BE    HELP\n         CLC   PQ(3),CMDLINE+4\n         BE    HELP\n         CLC   CMDLINE+4(1),PQ        SHOULD START WITH $\n         BNE   HELP\nISSUOK   MVC   WTOCMD+78(4),USERID\n         LA    R7,WTOCMD\n         WTL   MF=(E,(R7))\n*OWTO    BAL   R3,AUTHRIZ\nNOWTO    EQU   *\n         SLR   R0,0                 CLEAR REG 0\n         L     R0,CONSOLE\nISSUE    LA    R1,CMDLINE          GET ADDRESS OF COMMAND I SMF\n         SVC   34                  ISSUE COMMAND VIA SVC 34\n         STIMER WAIT,BINTVL=ONE\n         MVI   CMDFLAG,X'FF'\n         B     AUTHDONE\nNOAUTH   EQU   *\n         TPUT  MSGNO1,13\n         B     SHOWRTRN\nAUTHRIZ  STAX  DEFER=YES\n         MODESET MF=(E,SUPRMOD)  GET INTO SUPV STATE AND KEY ZERO\n         BR    R3                ****************************\nUNAUTH   DS    0H\n         MODESET MF=(E,PROBMOD)\n         STAX  DEFER=NO\n         BR    R3\n         EJECT\n         LTORG\n*---------------------------------------------------------------------*\n*                         C O N S T A N T S                           *\n*---------------------------------------------------------------------*\nCMDFMT   DC    Y(76),Y(00)            LENGTH OF COMMAND\nMESSAGE  DC    CL46'LAST SYSTEM IPL DATE XXXXX  TIME HH:MM  CLPA ='\nPATTERN1 DC    XL5'2120202020'\nTHREE60  DC    F'360000'\nSIXTY    DC    F'6000'\nAXLIST   DC    H'1',H'0'           AXRES PARMLIST\n         CNOP  0,8\n*---------------------------------------------------------------------*\n*               327X SCREEN CLEAR CONTROL CHARACTERS                  *\n*---------------------------------------------------------------------*\n*LR      DC    X'7E'              EWA\nCLR      DC    X'C3'              WCC - FREE KEYBOARD/RESET MDT\n*        DC    X'11F56F'          SBA TO ROW 43, COL 80\n         DC    X'114040'          SBA TO ROW 1, COL 1\n         DC    X'3C'              REPEAT TO ADDRESS\n         DC    X'F56F00'          FILL SCREEN WITH NULLS F56F=R43 COL80\n         DC    X'11F460'          ROW 43 COL 2\n         DC    X'00'              ATTRIBUTE\n         DC    X'13'              INSERT CURSOR\n*        DC    X'1DE913'          SBA TO ROW 1, COL 1 1DC813\nONE      DC    A(175)             1.75 SECOND\nFIVE     DC    A(444)             5 SECONDS\nTHREE    DC    A(220)             3 SECONDS\nTEN      DC    F'10'\nNUMBEROR DC    XL4'000000F0'\nCHAROR   DC    XL4'000000C0'\nHEXZIP   DC    2F'0000000000000000'\nMSGNO1   DC    CL13'SYSTEM ACTIVE'\n         DS    0F\nWTOLIST  WTL   '                                                       X\n                                       ZTPR0200',MF=L\n         DS    0F\nSUPRMOD  MODESET KEY=ZERO,MODE=SUP,MF=L\nPROBMOD  MODESET KEY=NZERO,MF=L\nTABLE    DC    CL8'MURF    '      MURF CAN DO IT\n         DC    CL8'JXCC    '      CAN DO IT\nTABLEND  DC    XL8'0000000000000000'\nHEXFS    DC    XL4'FFFFFFFF'\nPJES2    DC    CL7'$PJES2 '\nPQ       DC    CL8'$PQ,ALL '\n$P       DC    CL8'$P      '\nRTMEC    DC    CL6',RTME='\nRNUMC    DC    CL6',RNUM='\nMOD2     DC    CL3'***'\nFORTY3   DC    H'43'\nTHIRTY2  DC    H'32'\nEIGHTY   DC    H'80'\nPAGEDEF  DC    X'1140401DE8'          ROW  1   COL  1\n         DC    X'11C1501DC4'          ROW  2   COL  1\n         DC    X'11C2601DC4'          ROW  3   COL  1\n         DC    X'11C3F01DC4'          ROW  4   COL  1\n         DC    X'11C5401DC4'          ROW  5   COL  1\n         DC    X'11C6501DC4'          ROW  6   COL  1\n         DC    X'11C7601DC4'          ROW  7   COL  1\n         DC    X'11C8F01DC4'          ROW  8   COL  1\n         DC    X'114A401DC4'          ROW  9   COL  1\n         DC    X'114B501DC4'          ROW 10   COL  1\n         DC    X'114C601DC4'          ROW 11   COL  1\n         DC    X'114DF01DC4'          ROW 12   COL  1\n         DC    X'114F401DC4'          ROW 13   COL  1\n         DC    X'1150501DC4'          ROW 14   COL  1\n         DC    X'11D1601DC4'          ROW 15   COL  1\n         DC    X'11D2F01DC4'          ROW 16   COL  1\n         DC    X'11D4401DC4'          ROW 17   COL  1\n         DC    X'11D5501DC4'          ROW 18   COL  1\n         DC    X'11D6601DC4'          ROW 19   COL  1\n         DC    X'11D7F01DC4'          ROW 20   COL  1\n         DC    X'11D9401DC4'          ROW 21   COL  1\n         DC    X'115A501DC4'          ROW 22   COL  1\n         DC    X'115B601DC4'          ROW 23   COL  1\n         DC    X'115CF01DC4'          ROW 24   COL  1\n         DC    X'115E401DC4'          ROW 25   COL  1\n         DC    X'115F501DC4'          ROW 26   COL  1\n         DC    X'1160601DC4'          ROW 27   COL  1\n         DC    X'1161F01DC4'          ROW 28   COL  1\n         DC    X'11E3401DC4'          ROW 29   COL  1\n         DC    X'11E4501DC4'          ROW 30   COL  1\n         DC    X'11E5601DC4'          ROW 31   COL  1\n         DC    X'11E6F01DC4'          ROW 32   COL  1\n         DC    X'11E8401DC4'          ROW 33   COL  1\n         DC    X'11E9501DC4'          ROW 34   COL  1\n         DC    X'116A601DC4'          ROW 35   COL  1\n         DC    X'116BF01DC4'          ROW 36   COL  1\n         DC    X'116D401DC4'          ROW 37   COL  1\n         DC    X'116E501DC4'          ROW 38   COL  1\n         DC    X'116F601DC4'          ROW 39   COL  1\n         DC    X'11F0F01DC4'          ROW 40   COL  1\n         DC    X'11F2401DC4'          ROW 41   COL  1\n         DC    X'11F3501DC4'          ROW 42   COL  1\n         DC    X'11F4601DC8'          ROW 43   COL  1\nPAGEDEF5 DC    X'1140401DE8'          ROW  1   COL  1 MODEL 5\n         DC    X'11C2C41DE4'          ROW  2   COL  1\n         DC    X'11C4C81DE4'          ROW  3   COL  1\n         DC    X'11C64C1DE4'          ROW  4   COL  1\n         DC    X'11C8501DE4'          ROW  5   COL  1\n         DC    X'114AD41DE4'          ROW  6   COL  1\n         DC    X'114CD81DE4'          ROW  7   COL  1\n         DC    X'114E5C1DE4'          ROW  8   COL  1\n         DC    X'1150601DE4'          ROW  9   COL  1\n         DC    X'11D2E41DE4'          ROW 10   COL  1\n         DC    X'11D4E81DE4'          ROW 11   COL  1\n         DC    X'11D66C1DE4'          ROW 12   COL  1\n         DC    X'11D8F01DE4'          ROW 13   COL  1\n         DC    X'115AF41DE4'          ROW 14   COL  1\n         DC    X'115CF81DE4'          ROW 15   COL  1\n         DC    X'115E7C1DE4'          ROW 16   COL  1\n         DC    X'1161401DE4'          ROW 17   COL  1\n         DC    X'11E3C41DE4'          ROW 18   COL  1\n         DC    X'11E5C81DE4'          ROW 19   COL  1\n         DC    X'11E74C1DE4'          ROW 20   COL  1\n         DC    X'11E9501DE4'          ROW 21   COL  1\n         DC    X'116BD41DE4'          ROW 22   COL  1\n         DC    X'116DD81DE4'          ROW 23   COL  1\n         DC    X'116F5C1DE4'          ROW 24   COL  1\n         DC    X'11F1601DE4'          ROW 25   COL  1\n         DC    X'11F3E41DE4'          ROW 26   COL  1\n         DC    X'11F5E81DE4'          ROW 27   COL  1\nNOTISSUD DC    CL18'COMMAND NOT ISSUED'\nHEADING1 DC    CL80'K S,DEL=                            99:99:99       X\n                             CONSOLE XX    '\nHELPMSG1 DC    CL80'PF-1   THIS DISPLAY         PF-2  STOP AUTO UPDATE X\n                 PF-3   END                '\nHELPMSG2 DC    CL80'PF-4   AUTO UPDATE 1 SEC    PF-5  ALTERNATE CONSOLEX\n                 PF-6   RESHOW LAST COMMAND'\nHELPMSG3 DC    CL80'PF-7   PAGE THRU MTT        PF-8  AUTO UPDATE 10 SEX\n               C PF-9   AUTO UPDATE 4 SEC  '\nHELPMSG4 DC    CL80'PF-10  NOT DEFINED          PF-11 AUTO UPDATE 2 SECX\n                 PF-12  IPL INFO           '\n         DC    CL80'****   ONLY JES2 COMMANDS ARE AUTHORIZED FOR THIS UX\n               SERID         ****          '\nWORKAREA DSECT\nSAVEAREA DS    18F\nUCMTABX  DS    F\nRDCM     DS    F\nWORKLINE DS    CL80\nREPLY    DS    CL80\nBLANKS   DS    CL80\nCMDLINE  DS    CL80\nHEADING  DS    CL80\nSIBPTR   DS    F                   PRT TO SCREEN IMAGE BUFFER\nUCMTAB   DS    F\n         DS    48F                PROVIDE SPACE FOR 48 UCM ADDRESSES\nUCMTABE  EQU   *\nNUMUCMS  DS    H\nOLDCONS  DS    F                   PREVIOUS CONSOLE NUMBER\n         SPACE 5\nCLEAR    DS    XL1                WCC - CLEAR SCREEN\n         DS    XL3                SBA TO ROW 1, COL 1\n         DS    XL1                IC AND REPEAT TO ADDRESS\nENDOFSCR DS    XL2                SBA TO ROW XX, COL 80\n         DS    XL2                FILL SCREEN WITH NULLS\nCURSOR   DS    XL2                SBA TO ROW 1, COL 1\n         DS    XL2                INSERT CURSOR\nLASTLINE DS    CL255' '           OPERATORS COMMAND INPUT LINE\nCONNUM   DS    CL2' 1'            CONSOLE NUMBER\nCTYPE    DS    CL4' '\nMASTER   DS    CL8' '             MASTER CONSOLE\nSYS      DS    CL4' '             SYS  AUTHORIZATION\nIO       DS    CL4' '             I/O  AUTHORIZATION\nCONS     DS    CL5' '             CONS AUTHORIZATION\n         DS    CL3' '\n*NIT     DS    CL4' '             UNIT ADDR OF CONSOLE\nTIME     DS    CL3' '             SECONDS REMAINING ON TIMER\nSLASH    DS    CL1'/'\nPAUSE    DS    CL3'1.0'           DELAY IN SECONDS\n         DS    CL2' '\nAREAA    DS    XL1\nCNSLFLAG DS    XL1\nTHRUFLAG DS    XL1\nAUTOFLAG DS    XL1\nISSUFLAG DS    XL1\nRESHOWFL DS    XL1\nHELPFLAG DS    XL1\nUSERFLAG DS    XL1\nCONSFLAG DS    XL1\nCLRFLAG  DS    XL1\nIPLFLAG  DS    XL1\nMOD5FLAG DS    XL1\nCMDFLAG  DS    XL1\nCONSOLE  DS    F                   CONSOLE TO BE LOOKED AT\nCONSASID DS    F                   'CONSOLE' ASID FOR CMS\nNUMLINES DS    F\nCONL     DS    F\nSAVECPPL DS    F\nTPUTLEN  DS    F\nTIMER    DS    F\nRTME     DS    H\nRNUM     DS    H\nUSER     DS    CL8            CONSOLE NAME\nTYPE     DS    CL1\nUSERID   DS    CL7\nTABAREA  DS    CL77\nSELCODE  DS    CL3            LINE SELECTION CODE\nSELSAVE  DS    CL3            LINE SELECTION CODE SAVE AREA\nWORK     DS    D\nIPLDATE  DS    F\nIPLTIME  DS    F\nDOUBLWD  DS    D\nWTOCMD   DS    CL104\nSCREEN   DS    XL1       SPACE FOR WCC\n         DS    43CL84\n         DS    CL124     EXTRA FOR MOD5\nBUF      DS    45CL133            OPERATORS SCREEN BUFFER\nWORKLENG EQU   *-WORKAREA\n         PRINT NOGEN\n         TITLE '*** PROTECTED STEP CONTROL BLOCK DSECT ***'\n         IKJPSCB                   COPY THE PSCB FORMAT DSECT\n         TITLE '*** COMMAND PROCESSOR PARAMETER LIST DSECT ***'\n         IKJCPPL                   COMMAND PROCESSOR PARM LIST\n         TITLE '*** TSO USER PROFILE TABLE DSECT ***'\n         IKJUPT                    TSO USER PROFILE TABLE\n         TITLE '*** COMMUNICATION VECTOR TABLE ***'\n         CVT   DSECT=YES\n         TITLE '*** J S C B ***'\n         IEZJSCB\n         TITLE '*** T  C  B ***'\n         IKJTCB DSECT=YES\n*        TITLE '*** RDCM DSECT ***'\n*EERDCM  DSECT ,\n*        IEECRDCM\n         TITLE '*** TDCM DSECT ***'\n         PRINT GEN\nIEETDCM  DSECT ,\n         IEECDCM\n         PRINT NOGEN\n         TITLE '*** MULTIPLE CONSOLE SUPPORT (MCS) UCM PREFIX ***'\n         IEECUCM FORMAT=NEW\n         IHAASVT\n         TITLE '*** ADDRESS SPACE CONTROL BLOCK ***'\n         IHAASCB\n         TITLE '*** TSB DSECT ***'\n         IKJTSB LIST=YES\n         TITLE '*** CHAIN     ***'\n         IEECHAIN\n         IEESMCA\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CONS390J": {"ttr": 1537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x98&\\x8f\\x00\\x98&\\x8f\\x15F\\x00>\\x00\\x19\\x00\\x00\\xd4\\xe4\\xd9\\xc6@@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1998-09-25T00:00:00", "modifydate": "1998-09-25T15:46:00", "lines": 62, "newlines": 25, "modlines": 0, "user": "MURF"}, "text": "//MURFC    JOB 6496,MURF,CLASS=T,MSGCLASS=T,NOTIFY=&SYSUID,REGION=8M\n//*******************************************************************   DOC FILE\n//*                                                                 *   DOC FILE\n//*            D I S C L A I M E R    S E C T I O N                 *   DOC FILE\n//*                                                                 *   DOC FILE\n//*******************************************************************   DOC FILE\n//*                                                                 *   DOC FILE\n//* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *   DOC FILE\n//* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        *   DOC FILE\n//* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *   DOC FILE\n//* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *   DOC FILE\n//* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *   DOC FILE\n//* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *   DOC FILE\n//* SUPPLIED .                                                      *   DOC FILE\n//*                                                                 *   DOC FILE\n//* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *   DOC FILE\n//* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *   DOC FILE\n//* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *   DOC FILE\n//* FUTURE .                                                        *   DOC FILE\n//*                                                                 *   DOC FILE\n//*******************************************************************   DOC FILE\n//*********************************************************************\n//*                                                                   *\n//* TEST THIS ON YOUR TEST SYSTEM.                                    *\n//* 1.  CHANGE SYSIN TO THE UNLOADED LIBRARY THAT CONTAINS THE PROGRAM*\n//* 2.  CHANGE SYSLMOD TO AN APF DSN ON YOUR SYSTEM IN LINKLIST OR    *\n//*     STEPLIB.  ISPLLIB WILL NOT WORK.                              *\n//*     CHANGE SYSLIB TO CORRECT FILE FOR THE SHARE TAPE FILE         *\n//* 3.  ZTPR0200 AND CONS NEED TO BE ADDED TO AUTHCMDS IN IKJTSO00:   *\n//*                                                                   *\n//*    ZTPR0200                  /* FOR CONS PROGRAM    */        +   *\n//*    CONS                      /* FOR CONS PROGRAM    */        +   *\n//*                                                                   *\n//* 4.  AFTER IKJTSOXX IS UPDATED, ISSUE COMMAND PARMLIB UPDATE(XX)   *\n//* 5.  REFRESH LLA IF IT'S IN THE LINKLIST.                          *\n//*                                                                   *\n//*********************************************************************\n//COM     EXEC PGM=IEV90,\n//    PARM='RENT'\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB\n//         DD  DISP=SHR,DSN=SYS1.MODGEN\n//         DD  DISP=SHR,DSN=MURF.FILE025.PDS\n//SYSLIN   DD  UNIT=VIO,DSN=&LOADSET,DISP=(MOD,PASS),\n//             SPACE=(CYL,(2,2)),DCB=BLKSIZE=1680\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(10,2))\n//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(12,2))\n//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(20,2))\n//SYSPUNCH DD  DUMMY\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSIN    DD  DSN=MURF.FILE025.PDS(CONS390),DISP=SHR\n//*\n//LKED         EXEC PGM=IEWL,REGION=1024K,COND=(4,LT),\n//             PARM='XREF,LET,LIST,RENT,REUS,AC(1)'\n//SYSPRINT     DD   SYSOUT=*\n//SYSUT1       DD   DSN=&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD      DD   DISP=SHR,DSN=SYS1.APF.LIBRARY\n//SYSLIN       DD   UNIT=SYSDA,DSN=&LOADSET,DISP=(OLD,DELETE)\n//             DD   DDNAME=SYSIN\n//SYSIN        DD   *\n ALIAS CONS\n NAME ZTPR0200(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IEBCOPY": {"ttr": 1539, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x95 \\x9f\\x00\\x98&\\x8f\\x15G\\x00\\x1e\\x00\\t\\x00\\x00\\xd4\\xe4\\xd9\\xc6@@@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1995-07-28T00:00:00", "modifydate": "1998-09-25T15:47:00", "lines": 30, "newlines": 9, "modlines": 0, "user": "MURF"}, "text": "//MURFC JOB (6496,B015),MURF,MSGCLASS=T,CLASS=T,NOTIFY=&SYSUID,\n// REGION=4M,TYPRUN=HOLD\n//*******************************************************************   DOC FILE\n//*                                                                 *   DOC FILE\n//*            D I S C L A I M E R    S E C T I O N                 *   DOC FILE\n//*                                                                 *   DOC FILE\n//*******************************************************************   DOC FILE\n//*                                                                 *   DOC FILE\n//* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *   DOC FILE\n//* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        *   DOC FILE\n//* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *   DOC FILE\n//* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *   DOC FILE\n//* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *   DOC FILE\n//* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *   DOC FILE\n//* SUPPLIED .                                                      *   DOC FILE\n//*                                                                 *   DOC FILE\n//* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *   DOC FILE\n//* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *   DOC FILE\n//* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *   DOC FILE\n//* FUTURE .                                                        *   DOC FILE\n//*                                                                 *   DOC FILE\n//*******************************************************************   DOC FILE\n//FIRST EXEC PGM=IEBCOPY\n//SYSPRINT DD SYSOUT=*\n//SYSUT1   DD DSN=MURF.FILE025.PDS,DISP=SHR\n//SYSUT2   DD DSN=MURF.FILE025.PDS,DISP=(,KEEP),\n//            UNIT=CART,VOL=SER=SHARTP,LABEL=(,SL,EXPDT=98000)\n//SYSUT3   DD UNIT=SYSDA,SPACE=(CYL,(40))\n//SYSUT4   DD UNIT=SYSDA,SPACE=(CYL,(40))\n//SYSIN    DD DUMMY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IKJTSO00": {"ttr": 1541, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93#o\\x00\\x93#o\\x14W\\x00\\x83\\x00\\x83\\x00\\x00\\xd4\\xe4\\xd9\\xc6@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-08-24T00:00:00", "modifydate": "1993-08-24T14:57:00", "lines": 131, "newlines": 131, "modlines": 0, "user": "MURF"}, "text": "AUTHCMD NAMES(               /* AUTHORIZED COMMANDS */        +\n   SETCACHE                  /* SETCACHE            */        +\n   RECEIVE                   /*  TSO COMMANDS       */        +\n   COFDMON                   /* HIPERBATCH MONITOR  */        +\n   TRANSMIT XMIT             /*                     */        +\n   LISTB    LISTBC           /*                     */        +\n   LISTD    LISTDS           /*                     */        +\n   SE       SEND             /*                     */        +\n   RACONVRT                  /*                     */        +\n   CONSPROF                  /*                     */        +\n   SYNC                      /*                     */        +\n   TESTAUTH TESTA            /*                     */        +\n   PARMLIB                   /*                     */        +\n   PRODLLA                   /*                     */        +\n   MPSSUB                    /*  AUTOSUB MPS JOB    */        +\n   AD       ADDSD            /*  RACF 5740-XXH      */      +\n   ADIR     ADDDIR           /*  RACF 5740-XXH      */      +\n   AF       ADDFILE          /*  RACF 5740-XXH      */      +\n   AG       ADDGROUP         /*  RACF 5740-XXH      */      +\n   AU       ADDUSER          /*  RACF 5740-XXH      */      +\n   ALG      ALTGROUP         /*  RACF 5740-XXH      */      +\n   ALD      ALTDSD           /*  RACF 5740-XXH      */      +\n   ALF      ALTFILE          /*  RACF 5740-XXH      */      +\n   ALTDIR                    /*  RACF 5740-XXH      */      +\n   ALU      ALTUSER          /*  RACF 5740-XXH      */      +\n   BLKUPD                    /*  RACF 5740-XXH      */      +\n   CO       CONNECT          /*  RACF 5740-XXH      */      +\n   DD       DELDSD           /*  RACF 5740-XXH      */      +\n   DDIR     DELDIR           /*  RACF 5740-XXH      */      +\n   DF       DELFILE          /*  RACF 5740-XXH      */      +\n   DG       DELGROUP         /*  RACF 5740-XXH      */      +\n   DU       DELUSER          /*  RACF 5740-XXH      */      +\n   LD       LISTDSD          /*  RACF 5740-XXH      */      +\n   LDIR     LDIRECT          /*  RACF 5740-XXH      */      +\n   LF       LFILE            /*  RACF 5740-XXH      */      +\n   LG       LISTGRP          /*  RACF 5740-XXH      */      +\n   LU       LISTUSER         /*  RACF 5740-XXH      */      +\n   RALT     RALTER           /*  RACF 5740-XXH      */      +\n   RDEF     RDEFINE          /*  RACF 5740-XXH      */      +\n   RDEL     RDELETE          /*  RACF 5740-XXH      */      +\n   RE       REMOVE           /*  RACF 5740-XXH      */      +\n   RL       RLIST            /*  RACF 5740-XXH      */      +\n   RVARY                     /*  RACF 5740-XXH      */      +\n   PW       PASSWORD         /*  RACF 5740-XXH      */      +\n   PE       PERMIT           /*  RACF 5740-XXH      */      +\n   PDIR     PERMDIR          /*  RACF 5740-XXH      */      +\n   PF       PERMFILE         /*  RACF 5740-XXH      */      +\n   SETR     SETROPTS         /*  RACF 5740-XXH      */      +\n   SR       SEARCH           /*  RACF 5740-XXH      */      +\n   SRDIR                     /*  RACF 5740-XXH      */      +\n   TMSTSO                    /*                     */      +\n   SRF      SRFILE           /*  RACF 5740-XXH      */      +\n   IRRDPI00                  /*  RACF 5740-XXH      */      +\n   SETPW                     /*                     */        +\n   SYSBLST                   /*                     */        +\n   OPERLST                   /*                     */        +\n   GETNAME                   /*                     */        +\n   GETGROUP                  /*                     */        +\n   MIMTSO                    /* MULTI-IMAGE MNGR    */        +\n   ZTPR0174                  /* FOR NON SVC PMM     */        +\n   DJOB                      /* FOR NON SVC PMM     */        +\n   ZTPR0200                  /* FOR NON SVC VERSION */        +\n   CONS                      /* FOR NON SVC VERSION */        +\n   ZTPR0204                  /* FOR NON SVC PMM     */        +\n   ZTPR0205                  /* FOR NON SVC PMM     */        +\n   MTT                       /* FOR NON SVC PMM     */        +\n   ZTPR0213                  /* FOR NON SVC PMM     */        +\n   TLIST                     /* LIST TSO USERS      */        +\n   VLFNOTE                   /* USED BY VLF         */        +\n   DB2PPREP)                 /*                     */\nAUTHPGM NAMES(               /* AUTHORIZED PROGRAMS */        +\n   IEBCOPY                   /* IBM COPY UTILITY    */        +\n   IKJEFF76          /* STATUS/SUBMIT/CANCEL/OUTPUT */        +\n   KM2STCOF                  /*                     */        +\n   KEPSTCTO                  /*                     */        +\n   OMSPFAU                   /*                     */        +\n   TMSTSO                    /*                     */        +\n   IMSCMDS                   /* IMS CMD PROGRAM (BEN*/        +\n   RECEIVE                   /*                     */        +\n   TRANSMIT                  /*                     */        +\n   XMIT                      /*                     */        +\n   ONCALLX1                  /* MKT   ONCALL        */        +\n   ONCALLXM                  /* MKT   ONCALL        */        +\n   ONCALLCK                  /* MKT   ONCALL        */        +\n   TXURC                     /* MKT                 */        +\n   SETTXU                    /* MKT                 */        +\n   DSNUTILB                  /* DB2 UTILITY         */        +\n   MIMTSO                    /*                     */        +\n   OBROUTR                   /* DB2 UTILITY         */        +\n   KOBROUTR                  /* OMEGAMON            */        +\n   OMEGAMON                  /*                     */        +\n   ICHUT100                  /*  RACF PROGRAMS      */        +\n   ICHUT200                  /*  RACF PROGRAMS      */        +\n   ICHDSM00                  /*  RACF PROGRAMS      */        +\n   ICHUT400                  /*  RACF PROGRAMS      */      +\n   IRRDPI00                  /*  RACF 5740-XXH      */      +\n   IRRUT100                  /*  RACF 5740-XXH      */      +\n   IRRUT200                  /*  RACF 5740-XXH      */      +\n   IRRUT400                  /*  RACF 5740-XXH      */      +\n   IRRDSC00                  /*  RACF 5740-XXH      */      +\n   ICHDSM00                  /*  RACF 5740-XXH      */      +\n   IRRDPI00    )             /*  RACF 5740-XXH      */\nNOTBKGND NAMES(        /*                           */        +\n   OPER     OPERATOR         /*                     */        +\n   TERM     TERMINAL)        /*                     */\nAUTHTSF NAMES(   /* PROGRAMS TO BE AUTHORIZED       */        +\n   IEBCOPY                   /*                     */        +\n   IKJEFF76                  /*                     */        +\n   VPEHSAUT)                 /*                     */\n\nSEND                       /* SEND COMMAND DEFAULTS */        +\n   OPERSEND(ON)              /*                     */        +\n   USERSEND(ON)              /*                     */        +\n   SAVE(ON)                  /*                     */        +\n   CHKBROD(OFF)              /*                     */        +\n   LOGNAME(SYS1.BRODCAST)    /*                     */\nALLOCATE                   /* ALLOCATE COMMAND DEFAULT*/      +\n   DEFAULT(OLD)              /*                     */\nTRANSREC NODESMF((N1,SYSA))      /*TRANSMIT/RECEIVE DEFAULTS*/ +\n         CIPHER(YES)              /*                       */  +\n         SPOOLCL(B)               /*                       */  +\n         OUTWARN(10000,5000)      /*                       */  +\n         OUTLIM(900000)           /*                       */  +\n         VIO(VIO)                 /*                       */  +\n         LOGSEL(TRAN)             /*                       */  +\n         LOGNAME(DATA)            /*                       */  +\n         DAPREFIX(USERID)         /*                       */\nCONSOLE INITUNUM(1000)            /* CONSOLE COMMAND DEFAULTS      */ +\n        INITSNUM(1000)            /*                               */ +\n        MAXUNUM(10000)            /*                               */ +\n        MAXSNUM(10000)            /*                               */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "KLEENUP": {"ttr": 1544, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x93\\x07_\\x00\\x98&\\x8f\\x15H\\x00U\\x00A\\x00\\x00\\xd4\\xe4\\xd9\\xc6@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1993-03-16T00:00:00", "modifydate": "1998-09-25T15:48:00", "lines": 85, "newlines": 65, "modlines": 0, "user": "MURF"}, "text": "/* REXX EXEC */\n/*******************************************************************/   DOC FILE\n/*                                                                 */   DOC FILE\n/*            D I S C L A I M E R    S E C T I O N                 */   DOC FILE\n/*                                                                 */   DOC FILE\n/*******************************************************************/   DOC FILE\n/*                                                                 */   DOC FILE\n/* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   */   DOC FILE\n/* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        */   DOC FILE\n/* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND */   DOC FILE\n/* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR */   DOC FILE\n/* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              */   DOC FILE\n/* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL */   DOC FILE\n/* SUPPLIED .                                                      */   DOC FILE\n/*                                                                 */   DOC FILE\n/* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE */   DOC FILE\n/* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS */   DOC FILE\n/* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE */   DOC FILE\n/* FUTURE .                                                        */   DOC FILE\n/*                                                                 */   DOC FILE\n/*******************************************************************/   DOC FILE\n/* CHANGED 2/9/93 FOR SMSDATA ADDING 3 LINES AND               */\n/*                SINCE SOME NEED A BACKUP TO MIGRATE I ADDED  */\n/*                THE HBACK COMMAND AS WELL              MURF  */\n/* REXX EXEC - NEEDS TO GO IN THE SYSPROC OR SYSEXEC DD.             */\n/* KLEENUP COMMAND FORMAT:                                           */\n/* KLEENUP GDGDSN MMM NNN                                            */\n/* IT WILL GENERATE HSM COMMANDS TO MIGRATE DISK GDG'S,  SPECIFY     */\n/* MIGRATIONLEVEL 1 OR 2 BY PUTTING ML1 OR ML2 AFTER THE DSN AT  MMM */\n/* CAN SPECIFY NUMBER TO KEEP ON DASD BY A NUMBER FOLLOWING THIS NNN */\n/* EXAMPLE:                                                          */\n/*           KLEENUP SYS2.LISTCAT.USERCAT ML2 1                      */\n/* THIS WILL ISSUE COMMANDS TO MIGRATE ALL BUT THE CURRENT GEN. TO   */\n/* MIGRATIONLEVEL 2.                                                 */\n/*           KLEENUP SYS2.LISTCAT.USERCAT                            */\n/* THIS WILL ISSUE COMMANDS TO MIGRATE ALL BUT THE CURRENT GEN. TO   */\n/* MIGRATIONLEVEL 1 BY DEFAULT.                                      */\nARG DS LVL NUM\nX=OUTTRAP('LN.')\n\"LISTC ENT(\" \"'\"DS\"'\" \") ALL\"\nX=OUTTRAP(OFF);\nIF LVL \u00ac= 'ML2' OR 'WAIT' OR 'NOWAIT' THEN\n        LVL = ' '\nIF NUM = '' THEN DO\n            SAY 'MIGRATING OFF ALL BUT CURRENT GENERATION ' DS\n            NUM = 1\n            END\nTOT=0\n    DO I= 1 TO LN.0\n/*  SAY \"LN.\"I \"=\" LN.I */\n    IF SUBSTR(LN.I,3,09) = 'NONVSAM' THEN DO\n       PARSE VALUE LN.I WITH NV DSH DSN\n       N=I+6\n       SMS=SUBSTR(LN.N,5,11)\n/*     SAY SMS                   */\n       IF SMS = 'SMSDATA' THEN N=N+4\n                          ELSE N=N+1\n       VOL=SUBSTR(LN.N,26,31)\n/*     DAT=SUBSTR(LN.N,1,79)     */\n/*     SAY DAT                   */\n/*     SAY VOL                   */\n       PUSH DSN\n       PUSH VOL\n       TOT=TOT+1\n       END\n    END\n    DO I = 1 TO TOT\n       PULL VOL\n       PULL DSN\n        IF SUBSTR(VOL,1,6) \u00ac= \"MIGRAT\"  THEN CALL HBACK\n       IF I > NUM THEN DO\n        IF SUBSTR(VOL,1,6) \u00ac= \"MIGRAT\"  THEN DO\n            CALL PRG\n            END\n        END\n    END\nRETURN\nPRG:\n /* SAY \"HMIGRATE (\" \"'\"DSN\"'\"  \")\" LVL */\n \"HMIGRATE (\" \"'\"DSN\"'\"  \")\" LVL\n           RETURN\nHBACK:\n /* SAY \"HBACKDS (\" \"'\"DSN\"'\"  \")\"   */\n \"HBACKDS (\" \"'\"DSN\"'\"  \")\"\n           RETURN\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "KLEENUPJ": {"ttr": 1547, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x98&\\x8f\\x00\\x98&\\x8f\\x15H\\x007\\x007\\x00\\x00\\xd4\\xe4\\xd9\\xc6@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1998-09-25T00:00:00", "modifydate": "1998-09-25T15:48:00", "lines": 55, "newlines": 55, "modlines": 0, "user": "MURF"}, "text": "//ICFCAT1  JOB (6496,3330),'ICF001  DIAG/LISTCAT',CLASS=A,MSGCLASS=0\n//*******************************************************************   DOC FILE\n//*                                                                 *   DOC FILE\n//*            D I S C L A I M E R    S E C T I O N                 *   DOC FILE\n//*                                                                 *   DOC FILE\n//*******************************************************************   DOC FILE\n//*                                                                 *   DOC FILE\n//* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *   DOC FILE\n//* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        *   DOC FILE\n//* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *   DOC FILE\n//* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *   DOC FILE\n//* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *   DOC FILE\n//* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *   DOC FILE\n//* SUPPLIED .                                                      *   DOC FILE\n//*                                                                 *   DOC FILE\n//* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *   DOC FILE\n//* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *   DOC FILE\n//* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *   DOC FILE\n//* FUTURE .                                                        *   DOC FILE\n//*                                                                 *   DOC FILE\n//*******************************************************************   DOC FILE\n//*********************************************************************\n//*  KLEENUP BATCH EXECUTION JCL SAMPLE - WE USE IT AFTER LISTCATS    *\n//*  AND EXPORTS THAT ARE DONE FOR CATALOG RECOVERY PURPOSES.         *\n//*  SEE LAST STEP.                                                   *\n//*********************************************************************\n//LISTCAT1 EXEC PGM=IDCAMS,REGION=8192K\n//SYSUDUMP DD SYSOUT=*\n//SYSPRINT DD UNIT=SYSDA,DSN=SYSX.LISTCAT.USERCAT1(+1),DISP=(,CATLG),\n// DCB=(MODEL1,RECFM=VBA,LRECL=125,BLKSIZE=22129),\n// SPACE=(CYL,(40,5),RLSE)\n//SYSIN DD DSN=SYSX.PARMLIB(LSTUCAT1),DISP=SHR\n//*********************************************************************\n//* DIAG   AND                                                        *\n//* LISTCAT FOR                                                       *\n//*     CATALOG(SYS1.ICFCAT.USERCAT1)  ALL                            *\n//*********************************************************************\n//EXPORT  EXEC PGM=IDCAMS,REGION=8192K\n//CATOUT   DD DSN=SYSX.EXPORT.USERCAT1(+1),DISP=(,CATLG),UNIT=SYSDA,\n//  SPACE=(CYL,(50,10),RLSE),DCB=MODEL1\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD DSN=SYSX.PARMLIB(ICFEXPU1),DISP=SHR\n//*********************************************************************\n//* EXPORT SYS1.ICFCAT.USERCAT1 -                                     *\n//*    OUTFILE(CATOUT) TEMPORARY                                      *\n//*********************************************************************\n//MIGRATE EXEC PGM=IKJEFT01\n//SYSPROC DD DSN=SYSX.TSO.CLIST,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//SYSTSIN DD *\n KLEENUP SYSX.LISTCAT.USERCAT1 ML2 1\n KLEENUP SYSX.EXPORT.USERCAT1 ML2 1\n//* MIGRATES ALL BUT CURRENT\n//*     GENERATION TO ML2\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MTTESA": {"ttr": 1549, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x93\\x07\\x8f\\x00\\x98&\\x8f\\x15C\\x02\\xca\\x02\\xa2\\x00\\x00\\xd4\\xe4\\xd9\\xc6@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1993-03-19T00:00:00", "modifydate": "1998-09-25T15:43:00", "lines": 714, "newlines": 674, "modlines": 0, "user": "MURF"}, "text": "*******************************************************************\n*                                                                 *\n*            D I S C L A I M E R    S E C T I O N                 *\n*                                                                 *\n*******************************************************************\n*                                                                 *\n* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *\n* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        *\n* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *\n* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *\n* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *\n* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *\n* SUPPLIED .                                                      *\n*                                                                 *\n* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *\n* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *\n* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *\n* FUTURE .                                                        *\n*                                                                 *\n*******************************************************************\n***********************************************************************\n*   TITLE: ZTPR0205                                                   *\n*   AUTHOR: MURPHY                                                    *\n*   DATE-WRITTEN: 10/16/84                                            *\n*                 11/08/88  -  CORRECT JOB#/TIME, ADD HL - PMM        *\n*                 04/06/90  -  UPDATED FOR APF FROM PARMLIB - PMM     *\n*   REFERENCE: OS/VS2 MVS SYSTEM PROGRAMMING LIBRARY:SUPERVISOR       *\n*              GC28-1046-1                                            *\n*   REMARKS:                                                          *\n*                                                                     *\n*        USE CROSS MEMORY SERVICES TO PAGE THROUGH CONSOLE MESSAGES   *\n*   IN THE MASTER TRACE TABLE IN THE MASTER ADDRESS SPACE.            *\n*                                                                     *\n***********************************************************************\nZTPR0205 CSECT\n         BEGIN PROGRAM=ZTPR0205\n*        SAVES REGISTERS AND INSERTS PROGRAM, DATE, AND TIME\n         LR    R12,R15            LOAD ADDRESS OF ENTRY POINT\n         LR    R2,R1              SAVE CPPL\n         USING ZTPR0205,R12       R12 BASE REGISTER\n         GETMAIN RC,LV=WORKL,SP=1 GETMAIN  FOR SAVEAREA/WORK\n         LTR   R15,R15            CHECK RETURN CODE\n         BNZ   GETMERR\n         LR    R3,R1              ADDRESS OF WORK AREA/SAVEAREA\n         USING SAVDSECT,R3        ADDRESSABILITY\n         ST    R13,SAVEAREA+4     STORE CALLER SAVEAREA ADDRESS (HSA)\n         ST    R3,8(,R13)         ADD OF PROGRAM SAVE IN CALLER(LSA)\n         LR    R13,R3             ADDRESS OF SAVEAREA IN R13\n         DROP  R3\n         USING SAVDSECT,R13\n         USING CPPL,R2\n         L     R6,CPPLPSCB\n         DROP  R2\n         USING PSCB,R6\n         MVC   USERID,PSCBUSER\n         MVC   USERIDL,PSCBUSRL\n         MVC   USERATTR,PSCBATR1  SAVE OPER AUTH INFO\n         MVI   USERFLAG,X'00'\n         MVI   CMDFLAG,X'00'\n         DROP  R6\n         ST    R2,CPPLSAVE\n         MVC   SCRTPUTL,=AL4(DSCREENL+41*80) LENGTH FOR TPUT 43 LINE\n         MVC   SCRLENG,=AL4(41*80) LENGTH FOR MOVE LONG 43 LINE DEFAULT\n         MVC   SCREEN(108),DSCREEN SCREEN IMAGE\n         GTSIZE\n         LTR   R0,R0\n         BZ    FREERET2            NON-DISPLAY TERMINAL\n         CH    R1,=H'80'           80 WIDE?\n         BNE   SETM2               NO - SET IT TO THIS\n         CH    R0,=H'43'           MOD 4?\n         BE    VERIFY\n         CH    R0,=H'32'           MOD 3?\n         BNE   SETM2\nMODEL3   MVC   SCRLENG,=AL4(28*80) 30 LINE DISPLAY\n         MVC   SCRTPUTL,=AL4(28*80+DSCREENL)\n         MVC   DSCRO3,=X'E6F0'     (32,1)\n         MVC   DSCRO4,=X'E7F7'     (32,72)\n         B     VERIFY\nSETM2    STSIZE SIZE=80,LINE=24\n         MVC   SCRLENG,=AL4(22*80) LENGTH FOR MOVE LONG\n         MVC   SCRTPUTL,=AL4(22*80+DSCREENL) LENGTH OF TPUT\n         MVC   DSCRO3,=X'5CF0'     24,1\n         MVC   DSCRO4,=X'5DF7'     24,72\nVERIFY   EQU   *\n         STFSMODE ON,INITIAL=YES\n         LA    R7,TABLEND\n         LA    R6,4\n         LA    R1,TABLE\nTBLOOP   CLC   0(4,R1),USERID\n         BE    USEROK\n         BXLE  R1,R6,TBLOOP\n         TM    USERATTR,X'80'   OPER AUTHORITY?\n         BZ    NOAUTH\n*        MVI   CMDFLAG,X'FF'\n         B     VEROK1\nUSEROK   MVI   USERFLAG,X'FF'\n         B     VEROK1\nFREEAX   MVI   FREEFLAG,X'FF'\n         B     VEROK1\nVEROK1   STAX  DEFER=YES         WE DO NOT WANT AN INTERRUPT WHILE\n         TESTAUTH FCTN=1\n         LTR   R15,R15\n         BZ    GOTAUTH\nGOTAUTH  MODESET MF=(E,SUPRMOD)\n         CLI   FREEFLAG,X'FF'\n         BNE   AXIT\n         AXFRE AXLIST=AXLIST     FREE    AN AUTHORIZATION INDEX IN A.T.\n         B     SCRENDEF\nNOTAUTH  TPUT  MSGNO2,6\n         B     FREERET2\nAXIT     AXRES AXLIST=AXLIST     RESERVE AN AUTHORIZATION INDEX IN A.T.\n         LA    R1,1              MASTER IS ASID 1\n         AXEXT ASID=(1)          DETERMINE AUTH TABLE VALUE OF ASID 1\n         AXSET AX=(0)            SET TO ASID 1'S AUTHORIZATION INDEX\nSCRENDEF CLI   FREEFLAG,X'FF'\n         BE    FREERET\n         MVC   COMMAND,COMMANDL\n         MVI   HEX40S,X'40'         SPACE\n         MVC   HEX40S+1(79),HEX40S  PROPAGATE SPACES TO INITIALIZE\n         L     R2,SCRLENG           SCREEN LENGTH\n         S     R2,=F'0160'          MINUS 2 LINES\n         LA    R5,DETAIL            ADDRESS OF SCREEN\n         ST    R5,FRSTLINE\n         LA    R2,0(R5,R2)          ADDRESS IN GETMAIN AREA\n         ST    R2,LASTLINE          SAVE THE ADDRESS\n         LA    R1,16\n         L     R1,0(R1)\n         USING CVT,R1\n         L     R1,CVTMSER\n         DROP  R1\n         USING BASE,R1\n         L     R3,BAMTTBL        ADDRESS OF MASTER TRACE TABLE\n         SR    R4,R4\n         ICM   R4,B'0111',BAMTLEN LENGTH OF MTT W/O FIRST BYTE OF WORD\n         BZ    NOTACTIV\n         ST    R4,MTTSIZE\n         ST    R3,MTTADDR\n         DROP  R1\n         GETMAIN RC,LV=(4)       LENGTH WAS IN R4\n         LTR   R15,R15\n         BNZ   GETMERR\n         LR    R11,R1            ADDRESS OF OUR FUTURE COPY OF MTT\nAUTHRIZE L     R9,MTTSIZE\n         L     R3,MTTADDR\n         SRA   R9,8             DIVIDE BY 256\n         BNP   NOTACTIV\n         LA    R1,1\n         SSAR  R1                SECONDARY ADDRESS SPACE OF ASID 1!!!\n         SR    R5,R5\n         LA    R6,0(R4,R11)      END OF GETMAIN AREA\n         LA    R7,256\n         LR    R10,R11\nMOVELOOP MVCP  0(R7,R10),0(R3),R5 MOVES MAX OF 256 BYTES\n         LA    R10,256(,R10)\n         LA    R3,256(,R3)\n         BCT   R9,MOVELOOP\n         B     ALLMOVED\nFREERET  L     R4,MTTSIZE\n         FREEMAIN RC,LV=(4),A=(11) FREE SECOND GETMAIN AREA\n         LTR   R15,R15            CHECK RETURN CODE\n         BNZ   FREEMERR\n*        SR    R1,R1                   ****************************\n*        L     R1,16                   *  A                       *\n*        USING CVT,R1                  *   D                      *\n*        L     R1,CVTTCBP              *    D      J              *\n*        DROP  R1                      *     R      S             *\n*        L     R1,4(R1)                *      E      C            *\n*        USING TCB,R1                  *       S      B           *\n*        L     R1,TCBJSCB              *        S                 *\n*        DROP  R1                      ****************************\n*        USING IEZJSCB,R1\n*        NI    JSCBOPTS,X'FF'-JSCBAUTH\n*        DROP  R1\n*        STAX  DEFER=NO                NOW THEY CAN INTERRUPT\nFREERET2 LR    R3,R13\n         L     R13,4(,R13)        ADDRESS OF CALLING PROGRAM SAVEAREA\n         FREEMAIN RC,LV=WORKL,A=(3),SP=1\n         LTR   R15,R15            CHECK RETURN CODE\n         BNZ   FREEERR2\n*        MODESET MF=(E,PROBMOD)        PROBLEM STATE\nRETURN   RETURN (14,12),,RC=(15)\nGETMERR  WTO   ' ZTPR0205 - GETMAIN ERROR, PLEASE NOTIFY TECH SUPPORT',X\n               ROUTCDE=2\n         L     R13,4(,R13)        RELOAD R13\n         B     RETURN\nBADLOAD  TPUT  BADLDMSG,25\nNOAUTH   TPUT  MSGNO1,13\n         B     FREERET2\nFREEMERR TPUT  MSG2,33\n         B     FREERET2\nFREEERR2 TPUT  MSG1,33\n         B     RETURN\nALLMOVED EPAR  R1             EXTRACT PRIMARY ASID INTO R1\n         SSAR  R1             SET SECONDARY TO OUR ASID\nADJUST   CLC   MTT,0(R11)     MTT HEADER\n         BNE   NOTACTIV\n         L     R9,4(,R11)     THIS IS THE CURRENT ENTRY IN MASTER\n         L     R8,MTTADDR     ADDRESS OF MTT IN MASTER ADDRESS SPACE\n         SR    R9,R8          DISPLACEMENT INTO OUR AREA OF FIRST ENT\n         LA    R9,0(R9,R11)   CURRENT ENTRY\n         ST    R9,MTTCLINE    MTT CURRENT LINE IN OUR AREA\n         L     R9,32(,R11)    FIRST ENTRY IN MTT\n         SR    R9,R8          DISPLACEMENT TO FIRST ENTRY\n         LA    R9,0(R9,R11)   ADDRESS IN OUR ADDRESS SPACE\n         ST    R9,MTTFLINE    SAVE IN MTT FIRST LINE\n         L     R9,12(,R11)    LAST BYTE\n         SR    R9,R8          GET DISPLACEMENT\n         LA    R9,0(R9,R11)   ADDRESS IN OUR AREAOF LAST BYTE\n         ST    R9,MTTLLINE    MTT LAST LINE -ACTUALLY ITS THE LAST BYTE\n         MVC   CURRLINE,MTTCLINE CURRENT LINE\nDISPLAY  L     R5,LASTLINE    ADDRESS OF WHERE TO MOVE CURRENT ENTRY\n         L     R6,CURRLINE    CURRENT LINE\n         MVI   UPFLAG,X'00'\n         MVI   WRAPFLAG,X'00'\n         MVI   FOUNDFLG,X'00'\n         MVC   BOTTOM,CURRLINE\nDISPLOOP SR    R7,R7\n         ICM   R7,B'0011',8(R6)  LOAD LENGTH\n         BNP   FINDNEXT\n         LA    R8,10(R7,R6)\n         CLI   SEARCHON,X'FF'\n         BE    DISPCHEK\n         CLI   UPFLAG,X'FF'\n         BNE   DISPSUB\nDISPCHEK CLC   CURRLINE,MTTCLINE\n         BNL   CHEKLINE\n         C     R8,MTTCLINE\n         BNL   ENDOFLST\nCHEKLINE C     R6,MTTCLINE\n         BNL   CHEKWRAP\n         C     R8,MTTCLINE\n         BNL   ENDOFLST\n         B     DISPSUB\nCHEKWRAP CLI   WRAPFLAG,X'FF'\n         BE    WRITEIT\nDISPSUB  CLI   SEARCHON,X'FF'\n         BE    SEARCHLN\n         S     R7,=F'51'      MINUS CONTROL STUFF\n         BNP   FINDNEXT\nDISPL    C     R7,SEVENTY9    > 80\n         BNH   MOVEDATA       NO - MOVE TO DISPLAY AREA\n         S     R7,EIGHTY\n         LA    R1,112(R6,R7)  LAST BYTE ADDRESS\n         S     R1,MTTLLINE    ADD OF 0C4 BYTE\n         BC    12,EX01\n         SR    R7,R1\n         BCTR  R7,0\n         BC    2,EX01\n         B     FINDNEXT\nEX01     EX    R7,DISPMOV2\n         S     R5,EIGHTY\n         C     R5,FRSTLINE\n         BNH   WRITEIT\n         LA    R7,62          MAX LENGTH IS 80\nMOVEDATA LA    R1,63(R6,R7)   LAST BYTE ADDRESS\n         S     R1,MTTLLINE    ADD OF 0C4 BYTE\n         BC    12,EX02\n         SR    R7,R1\n         BCTR  R7,0\n         BC    2,EX02\n         B     FINDNEXT\nEX02     EX    R7,DISPMOVE    MOVE IT TO TERMINAL AREA\n         MVC   10(9,R5),46(R6) SKIP CONTROL STUFF\n         CLC   =CL2'40',34(R6)\n         BE    SKIPTIM\n         MVC   00(8,R5),35(R6) SKIP CONTROL STUFF\n*        BAL   R2,SEARCHLN\nSKIPTIM  S     R5,EIGHTY\n         C     R5,FRSTLINE\n         BNH   WRITEIT\n*        CLI   UPFLAG,X'FF'\n*        BE    UP\nFINDNEXT ST    R6,CURRLINE\n         BAL   R2,PREVLINE    GET NEXT     LINE\n         B     DISPLOOP\nDOWN     CLC   BOTTOM,MTTCLINE IS THIS NEWEST PAGE?\n         BE    AUTHRIZE\n         MVI   FOUNDFLG,X'00'\n         BAL   R2,CLEARSCR    GET NEXT     LINE\n         LA    R5,DETAIL      ADDRESS OF WHERE TO MOVE CURRENT ENTRY\n         L     R6,BOTTOM      BECOMES TOP ON PAGE DOWN\n         ST    R6,CURRLINE    CURRENT LINE\n         ST    R6,TOP         CURRENT LINE\n         MVI   DOWNFLAG,X'FF'\n*GIVEN A STARTING POINT, WE WILL BE PAGING UP HERE *\nDOWNLOOP SR    R7,R7\n         ICM   R7,B'0011',8(R6)  LOAD LENGTH\n         BNP   FINDNXTD\n         LA    R8,10(R7,R6)   NEXT LINE\n         C     R8,MTTCLINE\n         BNH   DOWNSUB\n         C     R6,MTTCLINE\n         BNL   DOWNSUB\n         MVC   0(80,R5),CENDOFIT\n         B     WRITEITD\nDOWNSUB  S     R7,=F'51'      MINUS SIX\n         BNP   FINDNXTD\n         C     R7,SEVENTY9    > 80\n         BNH   MOVEDOWN       NO - MOVE TO DISPLAY AREA\n         S     R7,EIGHTY\n         LA    R1,112(R6,R7)  LAST BYTE ADDRESS\n         S     R1,MTTLLINE    ADD OF 0C4 BYTE\n         BC    12,EX03\n         SR    R7,R1\n         BCTR  R7,0\n         BC    2,EX03\n         B     FINDNXTD\nEX03     EX    R7,DISPMOV2\n         LA    R7,62          MAX LENGTH IS 80\n         A     R5,EIGHTY\n         C     R5,LASTLINE\n         BNL   WRITEITD\nMOVEDOWN LA    R1,63(R6,R7)   LAST BYTE ADDRESS\n         S     R1,MTTLLINE    ADD OF 0C4 BYTE\n         BC    12,EX04\n         SR    R7,R1\n         BCTR  R7,0\n         BC    2,EX04\n         B     FINDNXTD\nEX04     EX    R7,DISPMOVE    MOVE IT TO TERMINAL AREA\n         MVC   09(9,R5),44(R6) SKIP CONTROL STUFF\n         CLC   =CL2'40',33(R6)\n         BE    SKIPTIM2\n         MVC   00(8,R5),32(R6) SKIP CONTROL STUFF\n*        BAL   R2,SEARCHLN\nSKIPTIM2 A     R5,EIGHTY\n         C     R5,LASTLINE\n         BNL   WRITEITD\nFINDNXTD ST    R6,CURRLINE\n         BAL   R2,UPLINE      GET NEXT     LINE\n         B     DOWNLOOP\nUP       BAL   R2,UPLINE      PREVIOUS LINE\n         B     DISPLOOP\nSEARCHLN L     R10,ARGLENG\n         LA    R15,15(,R6)    START OF LINE\n         LR    R3,R7\n         SR    R3,R10\n         BNP   FINDNEXT\nCOMPLOOP EX    R10,COMPARE    COMPARE THIS TO ARGUMENT\n         BE    FOUNDIT\n         LA    R15,1(,R15)    NEXT BYTE\n         LA    R1,0(R15,R10)\n         C     R1,MTTLLINE\n         BNL   FINDNEXT\n         BCT   R3,COMPLOOP\n         B     FINDNEXT\nFOUNDIT  MVI   SEARCHON,X'00' RESET\n         MVI   FOUNDFLG,X'FF'\n         S     R7,=F'51'\n         ST    R6,SEARCHTP\n         ST    R6,CURRLINE\n         ST    R6,BOTTOM\n         B     DISPL\nUPLINE   LA    R8,1           INCREMENT 0F 1\n         L     R6,CURRLINE\n         CLC   R6,MTTFLINE    ARE WE AT TOP\n         BH    UPCONTIN       NO - SKIP\n         L     R6,MTTLLINE\n         S     R6,=F'05'\nUPCONTIN LNR   R8,R8          DECREMENT OF -1\n         L     R9,MTTFLINE    ADDRESS OF LOWEST ADDRESS IN MTT\n         MVI   STARTFLG,X'00' FLAG TO INDICATE FIRST TIME THRU\n*        L     R6,CURRLINE    ADDRESS OF CURRENT LINE\n         BCTR  R6,0           SUBTRACT  1\nUPLOOP   CLC   CBEGINLN,0(R6) BEGINNING OF LINE CHARACTER?\n         BE    PREVFND        YES, BRANCH\n         BCTR  R6,0           MINUS 1\n         CR    R6,R9\n         BNL   UPLOOP\n*   MEANS WE ARE AT THE LOWEST ADDRESS IN TABLE, NOW START AT THE    *\n*   VERY BOTTOM AND WORK BACKWARDS -                                 *\n         CLI   STARTFLG,X'00' WE BEEN THRU HERE BEFORE?\n         BNE   WRITEITD       YES - BRANCH\n         MVI   STARTFLG,X'FF' FLAG IT\n         L     R6,MTTLLINE    ADDRESS OF LAST LINE\n         S     R6,=F'05'      MINUS SIX\n         L     R9,MTTCLINE\n         B     UPLOOP         NOW FIND PREVIOUS\nPREVLINE LA    R8,1           INCREMENT 0F 1\n         L     R6,CURRLINE    ADDRESS OF CURRENT LINE\n         LA    R6,1(,R6)      INCREMENT\n         C     R6,MTTLLINE    LAST LINE?\n         BL    PREVCONT       NO, BRANCH\n         L     R6,MTTFLINE    START AT FIRST\n         MVI   WRAPFLAG,X'FF' SET TO DISPLAY IT HAS WRAPPED\nPREVCONT L     R9,MTTLLINE    ADDRESS OF LOWEST ADDRESS IN MTT\n         S     R9,=F'06'      CBEGINLN LENGTH\n         BNP   NOTACTIV       NOT POSITIVE, NOT A VALID ENTRY FOR US\n         MVI   STARTFLG,X'00' FLAG TO INDICATE FIRST TIME THRU\nPREVLOOP CLC   CBEGINLN,0(R6) BEGINNING OF LINE CHARACTER?\n         BE    PREVFND        YES, BRANCH\n         BXLE  R6,R8,PREVLOOP LOOP\n*   MEANS WE ARE AT THE LOWEST ADDRESS IN TABLE, NOW START AT THE    *\n*   VERY BOTTOM AND WORK BACKWARDS -                                 *\n         CLI   STARTFLG,X'00' WE BEEN THRU HERE BEFORE?\n         BNE   WRITEIT        YES - BRANCH\n         MVI   STARTFLG,X'FF' FLAG IT\n         L     R6,MTTFLINE    ADDRESS OF FRST LINE\n         B     PREVLOOP       NOW FIND PREVIOUS\nPREVFND  BR    R2             RETURN\nWRITEITD BAL   R2,TPUT        WRITE SCREEN\n         ST    R6,BOTTOM      SAVE WHERE WE WERE\n         B     TGET           GET NEXT INPUT FROM TERMINAL\nWRITEIT  EQU   *\n         BAL   R2,TPUT        WRITE SCREEN\n         ST    R6,TOP         SAVE ADDRESS OF WHERE WE WERE\nTGET     MVC   WORKLINE,HEX40S\n         MVI   SEARCHON,X'00' RESET SEARCH FLAG\n         BAL   R2,CLEARSCR\n         L     R5,LASTLINE    ADDRESS OF WHERE TO MOVE CURRENT ENTRY\n         L     R6,CURRLINE    CURRENT LINE\n         MVI   UPFLAG,X'00'   RESET UP FLAG\n         TGET  WORKLINE,70,ASIS\n         CLI   WORKLINE,X'7D' PFK USED?\n         BE    CHECKOUT       NO, CHECK COMMAND, IF ANY\n         NI    WORKLINE,X'0F'\n         CLI   WORKLINE,X'01' PF-1?\n         BE    HELPOUT        YES, DISPLAY HELP INFO\n         CLI   WORKLINE,X'03' PF-3?\n         BE    FREEAX         YES, END\n         CLI   WORKLINE,X'05' SEARCH REPEAT\n         BE    SEARCHRP\n*        CLI   WORKLINE,X'06' SEARCH REPEAT\n*        BE    ABEND\n         CLI   WORKLINE,X'07' UP?\n         BE    UPSET\n         CLI   WORKLINE,X'08'\n         BE    DOWN\n         CLI   WORKLINE,X'09'\n         BE    SETTOP\n         CLI   WORKLINE,X'0A'\n         BE    SETBOT\n         CLI   WORKLINE,C'>'  MESSAGE INPUT\n         BE    TGET\n         B     AUTHRIZE\nNOCMDS   BAL   R2,CLEARSCR    GO CLEAR OUR SCREEN\n         MVC   DETAIL+880(23),=C'COMMANDS NOT AUTHORIZED'\n         BAL   R2,TPUT\n         B     TGET\nCHECKOUT OC    WORKLINE+6(74),HEX40S\n         CLC   WORKLINE+6(4),HEX40S\n         BE    AUTHRIZE\n         MVC   CMDLINE,WORKLINE+6\n         CLC   =C'T  ',CMDLINE  TOP\n         BE    SETTOP\n         CLC   CMDLINE(3),=C'TOP'\n         BE    SETTOP\n         CLC   =C'B  ',CMDLINE  TOP\n         BE    SETBOT\n         CLC   XFINDQ,CMDLINE  F '\n         BE    FIND\n         CLC   CFIND,CMDLINE  FIND\n         BE    FIND\n         CLC   CMDLINE(3),=C'BOT'\n         BE    SETBOT\n         CLC   CMDLINE(3),=C'END'\n         BE    FREEAX\n         CLC   =C'Z ',CMDLINE  TOP\n         BE    FREEAX\n         CLC   =C'X ',CMDLINE  TOP\n         BE    FREEAX\n         CLI   CMDFLAG,X'FF'\n         BE    NOCMDS\n         CLI   USERFLAG,X'FF'\n         BNE   NOWTO\n         MVC   WTOCMD(100),WTOLIST\n         MVC   WTOCMD+8(72),CMDLINE\n         MVC   WTOCMD+78(4),USERID\n         LA    R7,WTOCMD\n         WTL   MF=(E,(R7))\nNOWTO    SLR   R0,0                    CLEAR REG 0\nISSUE    LA    R1,COMMAND              GET ADDRESS OF SVC 34 COMMAND\n         SVC   34                      ISSUE COMMAND\n         STIMER WAIT,BINTVL=ONE        WAIT ONE SO THAT IT SHOWS\n         MVC   CMDLINE,HEX40S\n         B     AUTHRIZE\n*    FIND OPERATION REQUESTED                                         *\nFIND     EQU   *\n         OC    WORKLINE+6(74),HEX40S      UPPER CASE\n         MVC   WORKLINE(74),WORKLINE+6    MOVE OVER\n         MVC   ARGUMENT(74),HEX40S        CLEAR OUT\n         LA    R8,1\n         LA    R6,WORKLINE\n         LA    R9,74(,R6)\n         LA    R7,ARGUMENT\nFINDQUOT CLI   0(R6),X'7D'\n         BE    FOUNQUOT\n         LA    R6,1(,R6)\n         CR    R6,R9\n         BL    FINDQUOT\n         B     REENTER\nFOUNQUOT LA    R6,1(,R6)\nARGLOOP  CLI   0(R6),X'7D'\n         BE    ARGDONE\n         MVC   0(1,R7),0(R6)\n         LA    R7,1(,R7)\n         BXLE  R6,R8,ARGLOOP\n*  IF IT GETS HERE - ARGUMENT WAS INVALID                             *\nREENTER  BAL   R2,CLEARSCR\n         MVC   DETAIL+418(43),CHELPLN7\n         BAL   R2,TPUT\n         B     TGET\n*EARCH   B     FREERET\nENDOFLST MVC   0(80,R5),CENDOFIT\n         CLI   SEARCHON,X'FF'\n         BNE   WRITEIT\n         MVC   24(09,R5),=C'NOT FOUND'\n         MVI   FOUNDFLG,X'00'\n         B     WRITEIT\nSEARCHRP CLI   SRCHFLAG,X'FF'\n         BNE   REENTER\n         CLI   FOUNDFLG,X'FF'\n         BNE   LOADCURR\n         MVC   CURRLINE,SEARCHTP WHERE TO PICK UP\nLOADCURR L     R6,CURRLINE\n         MVI   FOUNDFLG,X'00'\n         BAL   R2,PREVLINE\n         ST    R6,CURRLINE\n         MVI   SEARCHON,X'FF'\n         B     UPSET\nARGDONE  LA    R8,ARGUMENT\n         BCTR  R7,0\n         SR    R7,R8\n         BNP   REENTER\n         ST    R7,ARGLENG\n         MVI   FOUNDFLG,X'00' NOT FOUND YET\n         MVI   SRCHFLAG,X'FF' SEARCH ARGUMENT IS PRESENT\n         MVI   SEARCHON,X'FF' PLEASE SEARCH\n         L     R6,BOTTOM\n         B     SETBOT2\nSETBOT   L     R6,MTTCLINE\nSETBOT2  ST    R6,CURRLINE\n         L     R5,LASTLINE\n         B     DISPLOOP\nSETTOP   L     R6,MTTCLINE\n         ST    R6,CURRLINE\n         BAL   R2,UPLINE\n         ST    R6,CURRLINE\n         BAL   R2,UPLINE\n         ST    R6,BOTTOM\n         B     DOWN\nUPSET    MVI   UPFLAG,X'FF'\n         CLI   DOWNFLAG,X'FF'\n         BNE   UPSET2\n         MVC   CURRLINE,TOP\n         MVI   DOWNFLAG,X'00'\nUPSET2   L     R5,LASTLINE    ADDRESS OF WHERE TO MOVE CURRENT ENTRY\n         L     R6,CURRLINE    WHERE WE LEFT OFF\n         ST    R6,BOTTOM\n         MVI   FOUNDFLG,X'00'\n         B     DISPLOOP\nCOMPARE  CLC   0(0,R15),ARGUMENT  LOOK FOR SEARCH ARGUMENT\nDISPMOVE MVC   18(0,R5),63(R6) SKIP CONTROL STUFF\nDISPMOV2 MVC   0(0,R5),112(R6) SKIP CONTROL STUFF\nTPUT     LA    R1,SCREEN\n         L     R0,SCRTPUTL\n         TPUT  (1),(0),FULLSCR\n         BR    R2\nHELPOUT  BAL   R2,CLEARSCR    GO CLEAR OUR SCREEN\n*        MVC   DETAIL+80(80),CHELPLN1\n*        MVC   DETAIL+160(80),CHELPLN2\n         MVC   DETAIL+400(80),CHELPLN3\n         MVC   DETAIL+480(70),CHELPLN4\n         MVC   DETAIL+640(39),CHELPLN5\n         MVC   DETAIL+720(43),CHELPLN6\n         MVC   DETAIL+880(43),CHELPLN7\n         BAL   R2,TPUT\n         B     TGET\nNOTACTIV BAL   R2,CLEARSCR    GO CLEAR OUR SCREEN\n         MVC   DETAIL(16),=C'TRACE NOT ACTIVE'\n         BAL   R2,TPUT\n         STIMER WAIT,BINTVL=ONE\n         L     R2,CPPLSAVE\n         LINK  EP=ZTPR0200\n         B     FREEAX\n**   CLEAR THE SCREEN AREA AND RETURN TO ADDRESS IN REG 2            **\nCLEARSCR LA    R6,DETAIL\n         L     R7,SCRLENG\n         SR    R9,R9\n         ICM   R9,B'1001',HEX40S\n         LA    R8,HEX40S\n         MVCL  R6,R8\n         BR    R2\nTABLE    DC    CL4'MURF'          USERIDS VALID TO USE IT\n         DC    CL4'XXXX'\nTABLEND  DC    CL4'XXXX'          ROBERT CHAMBERLAIN\nDSCREEN  DS    0C             DISPLAY SCREEN\n         DC    X'03'          CONTROL\n         DC    X'00'          ERASE/WRITE ALTERNATE (132 COL)\n         DC    X'00115D7F1140403C404000' CLEAR SCREEN\n         DC    CL80'                  MASTER  TRACE  TABLE  DISPLAY    *\n                             PF-1 FOR HELP '\n         DC    X'11'          SET BUFFER ADDRESS\n         DC    X'F460'        (43,1)\n*        DC    C'_'\n         DC    X'1DC8'        MARK NEXT FIELD AS INPUT FIELD\n         DC    X'13'          SET CURSOR ADDRESS\n         DC    X'11'          SET BUFFER ADDRESS\n         DC    X'F5E7'        (43,72)\n         DC    X'1DF0'        TERMINATE INPUT FIELD\n         DC    C' '           INDICATES MORE TO BE DISPLAYED\n         DC    X'11'          SET BUFFER ADDRESS\n         DC    X'C150'        (2,1)\n*DLINE1  DC    40CL80' '      MESSAGE TEXT AREA (FOR 40X80 MAX)\nDSCREENL EQU   *-DSCREEN      LENGTH OF THIS PART\nFOUR     DC    F'4'\nBADLDMSG DC    CL25'ERROR LOADING IKJEFFUT  '\n         DS    0F\nAUTH     DC    CL4'AUTH'\nMTT      DC    CL3'MTT'       MASTER TRACE TABLE HEADER\nHEXFS    DC    XL4'FFFFFFFF'\nHEXZIP   DC    XL4'00000000'\nCMAINT   DC    XL5'1401091523'\nCOMMANDL DC    Y(76),Y(00)\nONE      DC    A(100)             1 SECOND\nCBEGINLN DC    XL4'00000001'\nEIGHTY   DC    F'080'             CONSTANT 80\nSEVENTY9 DC    F'079'             CONSTANT 79\nANDCHARS DC    XL8'3F3F3F3F3F3F3F3F'\nMSGNO1   DC    CL13'SYSTEM ACTIVE'\nMSGNO2   DC    CL6'NO APF'\nMSG1     DC    CL33'***FREEMAIN ERROR ON SAVEAREA ***'\nMSG2     DC    CL33'***FREEMAIN ERROR ON MTT AREA ***'\nXFINDQ   DC    XL3'C6407D'        HEX FOR F '\nCFIND    DC    CL4'FIND'          CHARACTER FIND\nCEND     DC    CL3'END'           CHARACTER END\nCZ       DC    CL1'Z'             CHARACTER Z\nPATTERN  DC    XL4'40202120'\nAXLIST   DC    H'1'\n         DC    H'0'\nWTOLIST  WTL   '                                                       X\n                                       ZTPR0200',MF=L\nSUPRMOD  MODESET MF=L,MODE=SUP,KEY=ZERO\nPROBMOD  MODESET MF=L,MODE=PROB,KEY=NZERO\n         LTORG\nCENDOFIT DC    CL80'* * * * * * * * * * * * E N D * * O F * * D A T A **\n               * * * * * * * * * * * * * * '\n*HELPLN1 DC    CL80'  THIS PROGRAM USES CROSS MEMORY SERVICES TO READ T*\n               HE MASTER TRACE TABLE IN    '\n*HELPLN2 DC    CL80'  THE MASTER ADDRESS SPACE. THE MASTER TRACE MUST B*\n               E ACTIVE TO PAGE UP/DOWN.   '\nCHELPLN3 DC    CL80'  PF-1  HELP            PF-3  END                PF*\n               -5  REPEAT FIND   PF-7  UP  '\nCHELPLN4 DC    CL70'  PF-8  PAGE DOWN       PF-9  TOP (OLDEST)       PF*\n               -10 BOTTOM (NEWEST)'\nCHELPLN5 DC    CL39'  T OR TOP MAY BE USED INSTEAD OF PF-9 '\nCHELPLN6 DC    CL43'  B OR BOTTOM MAY BE USED INSTEAD OF PF-10 '\nCHELPLN7 DC    CL43'  F OR FIND WITH ARGUMENT IN SINGLE QUOTES '\nSAVDSECT DSECT\nSAVEAREA DS    18F\nDOUBLWD  DS    D\nPARMWKAD DS    F\nCPPLSAVE DS    F\n         DS    0D\nWORKLINE DS    CL80\nHEX40S   DS    CL80\nWTOCMD   DS    CL100\nPARMWORK DS    CL44\nUSERID   DS    CL7\nUSERIDL  DS    XL1\nUSERATTR DS    XL1\nSTARTFLG DS    XL1\nSRCHFLAG DS    XL1\nUSERFLAG DS    XL1\nFREEFLAG DS    XL1\nCMDFLAG  DS    XL1\nFOUNDFLG DS    XL1\nSEARCHON DS    XL1\nUPFLAG   DS    XL1\nWRAPFLAG DS    XL1\nDOWNFLAG DS    XL1\nMTTSIZE  DS    F              SIZE OF MTT\nMTTADDR  DS    F              MTT ADDRESS IN MASTER ASID\nBOTTOM   DS    F              BOTTOM    OF SCREEN\nTOP      DS    F              TOP OF SCREEN\nSEARCHTP DS    F              CURRENT LINE FOR REPEAT SEARCH\nCURRLINE DS    F              CURRENT LINE FOR US\nFRSTLINE DS    F              FIRST LINE ON OUR DISPLAY\nLASTLINE DS    F              LAST  LINE ON OUR DISPLAY\nMTTFLINE DS    F              FIRST LINE IN OUR AREA\nMTTLLINE DS    F              LAST  LINE IN OUR AREA\nMTTCLINE DS    F              CURRENT LINE IN OUR AREA\nSCRLENG  DS    F\nSCRTPUTL DS    F\nARGLENG  DS    F\nARGUMENT DS    CL74\nCOMMAND  DS    F\nCMDLINE  DS    CL72\nSCREEN   DS    0CL108\n         DS    XL1            CONTROL\nDSCRO1   DS    XL1            ERASE/WRITE ALTERNATE (132 COL)\n         DS    XL11\n         DS    CL80\n         DS    XL1            SET BUFFER ADDRESS\nDSCRO3   DS    XL2            (43,1)\n*        DS    XL1\n         DS    XL2            MARK NEXT FIELD AS INPUT FIELD\n         DS    XL1            SET CURSOR ADDRESS\n         DS    XL1            SET BUFFER ADDRESS\nDSCRO4   DS    XL2\n         DS    XL2            TERMINATE INPUT FIELD\n         DS    XL2            SET BUFFER ADDRESS\nDSCRO5   DS    XL2\nDETAIL   DS    43CL80\nWORKL    EQU   *-SAVEAREA\n         CVT   DSECT=YES\n         IEZJSCB\n         IKJTCB DSECT=YES\n         IEEBASEA\n         IEECHAIN\n         IKJPSCB\n         IKJCPPL\n         IKJUPT\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MTTESAJ": {"ttr": 1802, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x93\\x07\\x8f\\x00\\x98&\\x8f\\x15I\\x00-\\x00\\x18\\x00\\x00\\xd4\\xe4\\xd9\\xc6@@@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1993-03-19T00:00:00", "modifydate": "1998-09-25T15:49:00", "lines": 45, "newlines": 24, "modlines": 0, "user": "MURF"}, "text": "//MURF2    JOB (6496,B014),MURF,CLASS=T,MSGCLASS=T,NOTIFY=&SYSUID,\n// REGION=4M\n//*******************************************************************   DOC FILE\n//*                                                                 *   DOC FILE\n//*            D I S C L A I M E R    S E C T I O N                 *   DOC FILE\n//*                                                                 *   DOC FILE\n//*******************************************************************   DOC FILE\n//*                                                                 *   DOC FILE\n//* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *   DOC FILE\n//* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        *   DOC FILE\n//* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *   DOC FILE\n//* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *   DOC FILE\n//* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *   DOC FILE\n//* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *   DOC FILE\n//* SUPPLIED .                                                      *   DOC FILE\n//*                                                                 *   DOC FILE\n//* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *   DOC FILE\n//* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *   DOC FILE\n//* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *   DOC FILE\n//* FUTURE .                                                        *   DOC FILE\n//*                                                                 *   DOC FILE\n//*******************************************************************   DOC FILE\n//COM     EXEC PGM=IEV90,\n//    PARM='LOAD,XREF(SHORT),LINECNT=55,NODECK'\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB,DCB=BLKSIZE=23440\n//         DD  DISP=SHR,DSN=SYS1.MODGEN\n//         DD  DSN=MURF.FILE025.PDS,DISP=SHR\n//SYSLIN   DD  UNIT=VIO,DSN=&LOADSET,DISP=(MOD,PASS),\n//             SPACE=(CYL,(2,2)),DCB=BLKSIZE=1680\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(10,2))\n//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(12,2))\n//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(20,2))\n//SYSPUNCH DD  DUMMY =*,DCB=FUNC=I\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSIN    DD  DSN=MURF.FILE025.PDS(MTTESA),DISP=SHR\n//LKED         EXEC PGM=IEWL,REGION=1024K,COND=(4,LT),\n//             PARM='XREF,LET,LIST,RENT,AC=1'\n//SYSPRINT     DD   SYSOUT=*\n//SYSUT1       DD   DSN=&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD      DD   DISP=SHR,DSN=SYST.LOADLIB(MTT)\n//SYSLIN       DD   UNIT=SYSDA,DSN=&LOADSET,DISP=(OLD,DELETE)\n//             DD   DDNAME=SYSIN\n//SYSIN        DD   *\n NAME MTT(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MTT390J": {"ttr": 1804, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x98&\\x8f\\x00\\x98&\\x8f\\x150\\x00*\\x00(\\x00\\x00\\xd4\\xe4\\xd9\\xc6@@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1998-09-25T00:00:00", "modifydate": "1998-09-25T15:30:00", "lines": 42, "newlines": 40, "modlines": 0, "user": "MURF"}, "text": "//NAMEM    JOB 6496,NAME,CLASS=T,MSGCLASS=T,NOTIFY=&SYSUID,REGION=8M\n//*********************************************************************\n//*                                                                   *\n//* TEST THIS ON YOUR TEST SYSTEM.                                    *\n//* 1.  CHANGE SYSIN TO THE UNLOADED LIBRARY THAT CONTAINS THE PROGRAM*\n//* 2.  CHANGE SYSLMOD TO AN APF DSN ON YOUR SYSTEM IN LINKLIST OR    *\n//*     STEPLIB.  ISPLLIB WILL NOT WORK.                              *\n//* 3   CHANGE SYSLIB TO CORRECT SHARE TAPE DSN.                      *\n//* 4.  ZTPR0200 AND CONS NEED TO BE ADDED TO AUTHCMDS IN IKJTSO00:   *\n//*                                                                   *\n//*    ZTPR0200                  /* FOR CONS PROGRAM    */        +   *\n//*    CONS                      /* FOR CONS PROGRAM    */        +   *\n//*                                                                   *\n//* 5.  AFTER IKJTSOXX IS UPDATED, ISSUE COMMAND PARMLIB UPDATE(XX)   *\n//* 6.  REFRESH LLA IF IT'S IN THE LINKLIST.                          *\n//*                                                                   *\n//*********************************************************************\n//COM     EXEC PGM=IEV90,\n//    PARM='RENT'\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB\n//         DD  DISP=SHR,DSN=SYS1.MODGEN\n//         DD  DISP=SHR,DSN=MURF.FILE025.PDS\n//SYSLIN   DD  UNIT=VIO,DSN=&LOADSET,DISP=(MOD,PASS),\n//             SPACE=(CYL,(2,2)),DCB=BLKSIZE=1680\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(10,2))\n//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(12,2))\n//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(20,2))\n//SYSPUNCH DD  DUMMY\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSIN    DD  DSN=MURF.FILE025.PDS(MTTESA),DISP=SHR\n//*\n//LKED         EXEC PGM=IEWL,REGION=1024K,COND=(4,LT),\n//             PARM='XREF,LET,LIST,RENT,REUS,AC(1)'\n//SYSPRINT     DD   SYSOUT=*\n//SYSUT1       DD   DSN=&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD      DD   DISP=SHR,DSN=SYS1.APF.LIBRARY\n//SYSLIN       DD   UNIT=SYSDA,DSN=&LOADSET,DISP=(OLD,DELETE)\n//             DD   DDNAME=SYSIN\n//SYSIN        DD   *\n ALIAS MTT\n NAME ZTPR0205(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OLDESAVR": {"ttr": 2049, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x98&\\x9f\\x00\\x98&\\x9f\"\\x01\\t\\xfd\\t\\xfd\\x00\\x00\\xd6\\xd3\\xc4\\xf4\\xf2\\xf2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1998-09-26T00:00:00", "modifydate": "1998-09-26T22:01:00", "lines": 2557, "newlines": 2557, "modlines": 0, "user": "OLD422"}, "text": "./ ADD NAME=$DISCLAM\n//*******************************************************************   DOC FILE\n//*                                                                 *   DOC FILE\n//*            D I S C L A I M E R    S E C T I O N                 *   DOC FILE\n//*                                                                 *   DOC FILE\n//*******************************************************************   DOC FILE\n//*                                                                 *   DOC FILE\n//* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *   DOC FILE\n//* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        *   DOC FILE\n//* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *   DOC FILE\n//* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *   DOC FILE\n//* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *   DOC FILE\n//* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *   DOC FILE\n//* SUPPLIED .                                                      *   DOC FILE\n//*                                                                 *   DOC FILE\n//* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *   DOC FILE\n//* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *   DOC FILE\n//* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *   DOC FILE\n//* FUTURE .                                                        *   DOC FILE\n//*                                                                 *   DOC FILE\n//*******************************************************************   DOC FILE\n./ ADD NAME=$DOC     0106-1993075-1993082-1958-00090-00234-00000-SBGCSC\n03/24/93 - NOTE FROM SAM GOLOB - MEMBER OLDVERS NOW CONTAINS THE\n           ESA 3.1.3 VERSIONS OF THIS CODE.  INCLUDED IN CASE YOU\n           NEED IT.\n________________________________________________________________________\n03/19/93 - PAT MURPHY 214-216-3139\n           03/16/93 - WORKS WITH MVS 4.2.2.  THERE IS A PROBLEM WHEN\n           LOOKING AT 24 LINE SCREEN SIZE ON SOME TERMINALS.\n\nCONESA   -  CONSOLE PROGRAM MODIFIED FOR ESA. DISPLAYS CONSOLES AS A\nTSO COMMAND UNDER ISPF OR TSO.  FEATURES:\n\n        HIGHLIGHTED MESSAGES ON CONSOLE ARE HIGHLIGHTED\n        AUTOMATIC UPDATE FEATURE\n        ENTER OPERATOR COMMANDS\n        DISPLAY LAST IPL AND IF CLPA WAS DONE\n\nINSTALL INSTRUCTIONS:\n1. UPDATE THE ASSEMBLY JCL CALLED CONSOLEJ TO REFLECT LIBRARIES AT\nYOUR INSTALLATION.\n2. ENTER 'TSO CONSOLE' FROM ISPF OR CONSOLE FROM THE READY STATE IN TSO.\n3. PF-1 WILL DISPLAY PFKEY DEFINITIONS.\n4. THE AUTOMATIC UPDATE AT LESS THAN 2 SECONDS IS HARD TO STOP ON\n3290'S. USE AUTOMATIC UPDATES OF 4 SECONDS OR MORE FOR THESE.\n5. DOES A TGET ON MOD2/5'S TO ALLOW FOR MOD 5'S THAT DID NOT DISPLAY\nCORRECTLY UNDER THE OLD ONE.\n6. ADDED AXFRE TO FREE THE AX TABLE ENTRY.\n\n________________________________________________________________________\n03/19/93 - PAT MURPHY 214-216-3139\n\nMTTESA   -  USES CROSS MEMORY SERVICES TO READ AND DISPLAY THE MASTER\nTRACE TABLE AS A TSO COMMAND PROCESSOR.  THIS IS THE XA VERSION\nOF THE PROGRAM THAT ORIGINATED AS MTT UNDER SP1.3.  FEATURES:\n        READ/DISPLAY MASTER TRACE TABLE\n        ENTER OPERATOR COMMANDS\n        CAN USE FIND TO SEARCH THE MASTER TRACE TABLE\n              F 'SEARCH ARGUMENT IN QUOTES'\n\nINSTALL INSTRUCTIONS:\n1.  INSERT MTT IN IKJTSOXX FOR THE MTT COMMAND,\nAND ISSUE THE TSO COMMAND FOR TSO/E 2.1.1 AND ABOVE,\n     PARMLIB UPDATE(XX)\nTHIS WILL INVOKE THE MTT COMMAND AUTHORIZED AND THE SVC CAN BE NOOP'D.\nHAS TO BE IN A LINKLIST OR STEPLIB - CAN'T BE AUTHORIZED FROM ISPLLIB.\n2. UPDATE THE ASSEMBLY JCL CALLED MTTESAJ TO REFLECT LIBRARIES AT\nYOUR INSTALLATION.\n3. ENTER 'TSO MTT' FROM ISPF OR MTT FROM THE READY STATE IN TSO.\n4. PF-1 WILL DISPLAY PFKEY DEFINITIONS.\n5. IKJTSO00 SAMPLE MEMBER PROVIDED.\n________________________________________________________________________\n04/09/90 - PAT MURPHY 214-216-3139 TEXAS UTILITIES SERVICES\n         - REVISED 02/09/93 FOR OFFSET TO MIGRAT IN LISTCAT OUTPUT\n           APPARENTLY THIS OFFSET CHANGED.  WE ARE NOW MVS 4.2.2\n           AND DFP 3.3.\nKLEENUP  -  REXX EXEC TO GENERATE HMIGRATE COMMANDS FOR ALL BUT\nTHE CURRENT GENERATIONS OF THE REQUESTED DISK DATASET.\n\n REXX EXEC - NEEDS TO GO IN THE SYSPROC OR SYSEXEC DD.\n KLEENUP COMMAND FORMAT:\n KLEENUP GDGDSN MMM NNN\n IT WILL GENERATE HSM COMMANDS TO MIGRATE DISK GDG'S,  SPECIFY\n MIGRATIONLEVEL 1 OR 2 BY PUTTING ML1 OR ML2 AFTER THE DSN AT  MMM\n CAN SPECIFY NUMBER TO KEEP ON DASD BY A NUMBER FOLLOWING THIS NNN\n EXAMPLE:\n           KLEENUP SYS2.LISTCAT.USERCAT ML2 1\n THIS WILL ISSUE COMMANDS TO MIGRATE ALL BUT THE CURRENT GEN. TO\n MIGRATIONLEVEL 2.\n           KLEENUP SYS2.LISTCAT.USERCAT\n THIS WILL ISSUE COMMANDS TO MIGRATE ALL BUT THE CURRENT GEN. TO\n MIGRATIONLEVEL 1 BY DEFAULT.\n\nINSTALL INSTRUCTIONS:\n1. COPY KLEENUP INTO THE SYSPROC OR SYSEXEC CONCATENATION.\n2. KLEENUPJ IS A SAMPLE OF HOW WE USE IT.\n\n________________________________________________________________________\n________________________________________________________________________\n04/10/90 - TOM BURNS  214-331-3151 TEXAS UTILITIES SERVICES\n\nSASSRCHD -SAS PROGRAM WRITTEN BY TOM BURNS, SENIOR SYSTEMS PROGRAMMER\n          AT TEXAS UTILITIES SERVICES, THAT READS SMF DATA AT MVS 3.1.3\n          LEVEL AND GIVES A REPORT ON WHO OPENED NONVSAM DATASETS, THEIR\n          BLOCKSIZE THAT THEY WERE OPENED WITH, AND WHO DELETED THEM.\n\nSASSRCHV - SAS PROGRAM WRITTEN BY TOM BURNS, SENIOR SYSTEMS PROGRAMMER\n           AT TEXAS UTILITIES SERVICES, THAT READS SMF DATA AT MVS 3.1.3\n           LEVEL AND GIVES A REPORT ON WHO OPENED VSAM DATASETS AND\n           WHO DELETED THEM.\n\n\n./ ADD NAME=BEGIN\n         MACRO\n         BEGIN &PROGRAM=\nR0       EQU   0\nR1       EQU   1                  R\nR2       EQU   2                    E\nR3       EQU   3                      G\nR4       EQU   4                        I\nR5       EQU   5                          S\nR6       EQU   6                            T\nR7       EQU   7                              E\nR8       EQU   8                                R\nR9       EQU   9                  E\nR10      EQU   10                   Q\nR11      EQU   11                     U\nR12      EQU   12                       A\nR13      EQU   13                         T\nR14      EQU   14                           E\nR15      EQU   15                             S\n         USING *,15\n         B     28(R15)\n         DC    CL8'&PROGRAM'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         STM   14,12,12(13)\n         DROP  15\n         EJECT\n         MEND\n./ ADD NAME=CONESA   0101-1993078-1993078-1150-00874-00901-00000-MURF\n         TITLE 'CONSOLE DISPLAY'\n***********************************************************************\n*        FOR AUTHORIZATION - INSERT USERIDS THAT CAN USE IT INTO THE  *\n*        TABLE.  TABLEND IS THE LAST ENTRY IN THE TABLE.              *\n*                                                                     *\n*        F TABLEND  LAST                                              *\n*                                                                     *\n*        DISPLAY MVS CONSOLE DISPLAY WITH AUTOMATIC REFRESH OF SCREEN *\n*        TO PRESENT A CONSOLE APPEARANCE.                             *\n*                                                                     *\n*        USED THE BASIC CROSS MEMORY CONSOLE BUFFER READ FROM THE     *\n*        CDF PROGRAM ON THE SHARE TAPE, AND MODIFIED TO A COMMAND     *\n*        PROCESSOR HIGHLIGHTING THE HIGHLIGHTED MESSAGES - P.MURPHY   *\n*                                                                     *\n*                                                                     *\n***********************************************************************\nZTPR0200 CSECT\n         BEGIN PROGRAM=ZTPR0200\n         LR    R12,R15\n         USING ZTPR0200,R12\n         LR    R2,R1\n         GETMAIN R,LV=WORKLENG\n         LR    R3,R1\n         ST    R13,4(R3)      SAVE THE CALLER'S R13\n         ST    R3,8(,R13)\n         LR    R13,R3\n         USING WORKAREA,R13\n         ST    R2,SAVECPPL\n         USING CPPL,R2\n         L     R6,CPPLPSCB\n         DROP  R2\n         USING PSCB,R6\n         MVC   USERID,PSCBUSER\n         DROP  R6\n         MVI   BLANKS,X'40'\n         MVC   BLANKS+1(79),BLANKS\n         MVI   USERFLAG,X'00'\n         MVI   CNSLFLAG,X'00'\n         MVI   THRUFLAG,X'00'\n         MVI   ISSUFLAG,X'00'\n         MVC   CMDLINE,BLANKS\n         LA    R7,TABLEND\n         LA    R6,4\n         LA    R5,TABLE\nTBLOOP   CLC   0(4,R5),USERID\n         BE    USEROK\n         BXLE  R5,R6,TBLOOP\n         B     NOAUTH\nUSEROK   MVI   USERFLAG,X'00'\n         MVI   AUTOFLAG,X'00' AUTO MODE FLAG\n         MVI   RESHOWFL,X'00' RESHOW INDICATOR\n         MVI   MOD5FLAG,X'00' FLAG FOR MOD 5\n         MVI   SCREEN,X'C3' WCC\n         MVC   CLEAR(13),CLR  CLEAR SCREEN CONTROL CHARS\n         GTSIZE\n         LTR   R0,R0              DISPLAY DEVICE?\n         BZ    FREESKIP           YES, GO FREE AND RETURN\n         CH    R1,EIGHTY          80 CHAR LINES\n         BNE   CHEKM5             NO, SET MODE 2\n         CH    R0,FORTY3          MOD 4?\n         BE    SETM4              YES, BRANCH\n         CH    R0,THIRTY2         MOD 3?\n         BE    SETM3              YES, BRANCH\nSETM2    TPUT  MOD2,3\n         TGET  REPLY,50\n         LA    R3,24              22 LINES PER SCREEN\n         MVC   CURSOR,=X'5CF0'    ROW 24 COL 2\n         MVC   ENDOFSCR,=X'5D7F'    ROW 24 COL 80\n         MVC   TPUTLEN,=AL4(24*84+1) LENGTH OF TPUT\n         B     PROCESS\nCHEKM5   CH    R0,=H'27'          27 LINES?\n         BNE   SETM2\n         CH    R1,=H'132'         132 WIDTH?\n         BNE   SETM2\nSETM5    LA    R3,27              27 LINES PER SCREEN\n         MVI   MOD5FLAG,X'FF'\n         MVC   TPUTLEN,=AL4(27*84+1) LENGTH OF TPUT\n         MVC   ENDOFSCR,=X'F76B'  ROW 27 COL 132\n         MVC   CURSOR,=X'F5E8'    ROW 27 COL 2 IC\n         B     PROCESS\nSETM3    LA    R3,32              22 LINES PER SCREEN\n         MVC   TPUTLEN,=AL4(32*84+1) LENGTH OF TPUT\n         MVC   ENDOFSCR,=X'E77E'  ROW 32 COL 80\n         MVC   CURSOR,=X'E6F0'    ROW 32 COL 2 IC\n         B     PROCESS\nSETM4    LA    R3,43              22 LINES PER SCREEN\n         MVC   TPUTLEN,=AL4(43*84+1) LENGTH OF TPUT\nPROCESS  ST    R3,NUMLINES\n         MVI   HELPFLAG,X'00'\n         MVI   CMDFLAG,X'00'\n         LA    R1,16\n         L     R1,0(R1)\n         USING CVT,R1\n         L     R1,CVTASVT\n         DROP  R1\n         USING ASVT,R1\n         L     R5,ASVTMAXU\n         LA    R15,ASVTENTY-4\nASVTLOOP BCTR  R5,0\n         LTR   R5,R5\n         BZ    CONABEND\n         LA    R15,4(,R15)\n         ICM   R6,15,0(R15)\n         BM    ASVTLOOP\n         USING ASCB,R6\n         ICM   R7,15,ASCBJBNS\n         BZ    ASVTLOOP\n         CLC   =C'CONSOLE',0(R7)\n         BNE   ASVTLOOP\n         SR    R1,R1\n         LH    R1,ASCBASID\n         DROP  R1,R6\nSTORECON ST    R1,CONSASID\n         BAL   R3,AUTHRIZ\n         AXRES AXLIST=AXLIST      RESERVE AN AX\n         L     R1,CONSASID        'CONSOLE' ASID\n         AXEXT ASID=(1)           EXTRACT AX OF 'CONSOLE'IN R0\n         AXSET AX=(0)             SET OUR AX TO THAT OF CONSOLE\n         B     SHOWCONS\nAXFREE   DS    0H\n         AXFRE AXLIST=AXLIST\n         BAL   R3,UNAUTH\nSHOWRTRN DS    0H\nFREESKIP LR    R3,R13\n         L     R13,SAVEAREA+4 RESTORE THE CALLER'S R13\n         FREEMAIN RC,A=(3),LV=WORKLENG\n         SR    R15,R15\n         RETURN (14,12),RC=(15)\nSHOWCONS DS    0H\n         STFSMODE ON,INITIAL=YES  FULL SCREEN MODE ON\n         TPUT  CLEAR,13,FULLSCR\n*---------------------------------------------------------------------*\n*          BUILD A TABLE OF UCM ADDRESSES (ONE PER CONSOLE)           *\n*---------------------------------------------------------------------*\nBLDUCMS  L     R4,16              R4 = ADDR OF CVT\n         USING CVT,R4\n         L     R4,CVTCUCB         R4 = ADDR OF 'CUCB' (UCM BASE)\n         DROP  R4\n         USING UCM,R4\n         L     R5,UCMVEA          R5 = ADDR OF FIRST UCM ENTRY\n         L     R6,UCMVEZ          R6 = LENGTH OF EACH UCM ENTRY\n         L     R7,UCMVEL          R7 = ADDR OF LAST UCM ENTRY\n         LA    R8,UCMTAB+4        R8 = ADDR OF UCMTAB\n         LA    R9,UCMTABE         R9 = ADDR OF END OF UCMTAB\n         XR    R2,R2              R2 = 0 (NUMBER OF VALID UCMS)\nUCMLOOP  ST    R5,0(0,R8)         SAVE UCM ADDRESS IN UCMTAB\n         LA    R2,1(0,R2)         R2  = R2  + 1  (ONE MORE UCM)\n         LA    R8,4(0,R8)         R8 = ADDR OF NEXT UCMTAB ENTRY\n         CR    R8,R9              DOES R8 POINT PAST END OF UCMTAB?\n         BNL   UCMDONE            YES; LEAVE LOOP\n         AR    R5,R6              R5 = ADDR OF NEXT UCM ENTRY\n         CR    R5,R7              DOES R5 POINT PAST UCM ENTRIES?\n         BL    UCMLOOP            NOPE; KEEP GOING\nUCMDONE  STH   R2,NUMUCMS         SAVE NUMBER OF UCMS FOUND\n         CLI   CNSLFLAG,X'FF'\n         BNE   SETMAST\n         MVC   OLDCONS,CONSOLE\n         L     R4,CONSOLE\n         LA    R4,1(,R4)\n         B     MASTSCAN\n         DROP  R4\n*---------------------------------------------------------------------*\n*        SCAN THE UCM FOR THE MASTER CONSOLE AS THE DEFAULT           *\n*---------------------------------------------------------------------*\nSETMAST  SR    R4,R4\n         ST    R4,CONSOLE\nMASTSCAN LA    R5,UCMTAB          SET POINTER TO UCM ADDRESS TABLE\nCKNUMUCM CH    R4,NUMUCMS         IS NUMBER TOO HIGH?\n         BNH   MASTCONT           NO, CONTINUE\n         CLI   CNSLFLAG,X'FF'\n         BNE   CONABEND\n         CLI   THRUFLAG,X'FF'\n         BE    CONABEND\n         MVI   THRUFLAG,X'FF'\n         SR    R4,R4              START W/ FIRST ENTRY\n         B     MASTCONT\nCONABEND ABEND 1\nMASTCONT SLL   R4,2               MAKE CONSOLE NUMBER TABLE INDEX\n         LA    R5,0(R5,R4)        SET POINTER TO UCM ADDRESS SLOT\n         L     R5,0(0,R5)         SET POINTER TO UCM\n         LTR   R5,R5\n         BZ    NEXT\n         USING UCMLIST,R5         TELL ASSEMBLER ABOUT UCM\n         CLI   CNSLFLAG,X'FF'\n         BE    SKIPMSTR\n         TM    UCMDISP1,UCMDISPA  IS THIS A MASTER CONSOLE?\n         BNZ   ACTIVCHK           YES ? FOUND THE MASTER CONSOLE ..\n         B     NEXT\nSKIPMSTR TM    UCMDISP1,UCMDISPC  GRAPHICS\n         BZ    NEXT\nACTIVCHK TM    UCMATR,UCMUF       ACTIVE?\n         BNZ   MASTFND\nNEXT     SRL   R4,2               RESET CONSOLE NUMBER TO RELATIVE\n         LA    R4,1(0,R4)         SET POINTER TO NEXT CONSOLE\n         B     MASTSCAN           CONTINUE MASTER CONSOLE SCAN LOOP\nMASTFND  SRL   R4,2               RESET CONSOLE NUMBER TO RELATIVE\n         ST    R4,CONSOLE         SET VALID CONSOLE NUMBER (MASTER)\n         DROP  R5                 DONT NEED UCM ADDRESSABILITY NOW\nNEXTPAGE LA    R5,UCMTAB          R5 = ADDR OF UCMTAB\n         ICM   R4,15,CONSOLE      R4 = CONSOLE TO BE DISPLAYED\n         BZ    WRTERR4            WE HAVE NO CONSOLE ZERO (MASTER)\n         CH    R4,NUMUCMS         IS NUMBER TOO HIGH?\n         BNH   GETUCM             NO, CONTINUE\nRESETCN  L     R4,OLDCONS         RESET TO OLD CONSOLE\n         ST    R4,CONSOLE         AND SAVE IT\nGETUCM   SLL   R4,2               MULTIPLY BY 4\n         LA    R5,0(R5,R4)        R5 = ADDR OF ADDR OF UCM\n         L     R5,0(0,R5)         R5 = ADDR OF UCM\n         USING UCMLIST,R5\n         L     R6,UCMXB           R6 = ADDR OF RDCM\n         ST    R6,UCMTABX\n         LTR   R6,R6              IS THIS A GRAPHICS CONSOLE?\n         BP    GRAPHICS           YES\n         LA    R5,UCMTAB          R5 = ADDR OF UCMTAB\nWRTERR4  DS    0H\n         B     RESETCN            RESET THE CONSOLE NUMBER\nGRAPHICS EQU   *\n         L     R6,UCMFEXTP        UCM FIXED EXTENSION\n         USING UCMEFEXT,R6        ADDRESSABILITY\n         MVC   USER,UCMEFCNM      LOGON ID\n         DROP  R6\nAUTHDONE EQU   *\n         MVC   OLDCONS,CONSOLE\n         MVC   HEADING,HEADING1\n         CLI   ISSUFLAG,X'FF'\n         BNE   CONSINIT\n         MVC   HEADING+45(18),NOTISSUD\n         MVI   ISSUFLAG,X'00'\nCONSINIT MVI   CNSLFLAG,X'00'\n*        BAL   R3,AUTHRIZ\n         L     R1,CONSASID        'CONSOLE' ASID\n         SSAR  R1                 SET 'CONSOLE' AS SECONDARY\n         PRINT ON,GEN\n         SLR   R0,R0              SECONDARY KEY\n         L     R6,UCMTABX\n         LA    R1,4               TRUE LENGTH\n         MVCP  RDCM(R1),0(R6),R0\n         L     R7,RDCM\n         USING STRTDCM,R7\n         LA    R1,L'LASTLINE      TRUE LENGTH\n         MVCP  LASTLINE(R1),DCMINPUT-STRTDCM(R7),R0\n         LA    R1,L'SIBPTR\n         SLR   R0,R0              SET STORAGE KEY\n         MVCP  SIBPTR(R1),DCMASCRN-STRTDCM(R7),R0 PT TO SCRN ADRJPB\n         LA    R1,2\n         MVCP  HEADING+8(R1),DCMDEL-STRTDCM(R7),R0   ROLL DELETE VAL\n         MVCP  RTME(R1),DCMRTME-STRTDCM(R7),R0       RTME\n         MVCP  RNUM(R1),DCMDL-STRTDCM(R7),R0       RTME\n         LA    R1,4\n         MVCP  CONL(R1),DCMLSCRN-STRTDCM(R7),R0\n         L     R8,SIBPTR          R8 = ADDR OF SCREEN IMAGE\n         L     R5,CONL\n         SR    R4,R4\n         SR    R5,R8\n         LA    R5,84(,R5)\n         ST    R5,CONL            SAVE IT\n         LA    R4,SCREEN          MY BUF\n         LA    R4,3737(,R4)\n         LR    R9,R5              BUFFER LEN\nMOVEBUFF DS    0H\n         SH    R8,=H'6'\n         SLR   R0,R0             RESET THE KEY\nMVCPLOOP DS    0H\n         MVCP  0(R5,R4),0(R8),R0 LOOP THRU THE CONSOLE BUFFER\n         BZ    GOTITALL\n         AL    R8,=F'256'        MAX LEN ALLOWED\n         AL    R4,=F'256'        MAX LEN ALLOWED\n         SL    R5,=F'256'        MAX LEN ALLOWED\n         B     MVCPLOOP\n*---------------------------------------------------------------------*\n*        IN ORDER TO ISSUE SVCS THE PRIMARY AND                       *\n*        SECONDARY ADDRSPC MUST BE THE SAME                           *\n*---------------------------------------------------------------------*\nGOTITALL DS    0H\n         EPAR  R1                EXTRACT PRIMARY ASN\n         SSAR  R1\n*        BAL   R3,UNAUTH\n         DROP  R5,R7\n         LA    R3,SCREEN         SET POINTER TO FIRST LINE OF BUF\n         LA    R3,3737(,R3)\n         LA    R9,HEADING+10\n         CLI   HEADING+9,C' '\n         BNE   RDMODE\n         LA    R9,HEADING+9\nRDMODE   MVC   0(6,R9),RTMEC\n         SR    R5,R5\n         LH    R5,RTME\n         CVD   R5,DOUBLWD\n         MVC   WORKLINE(5),PATTERN1\n         ED    WORKLINE(5),DOUBLWD+5\n         MVC   6(4,R9),WORKLINE+1\n         CLI   9(R9),C'0'\n         BE    PUTBLNK\n         MVC   7(2,R9),=C'1/'\n         B     PUTRNUM\nPUTBLNK  MVI   9(R9),C' '\nPUTRNUM  MVC   10(6,R9),RNUMC\n         SR    R5,R5\n         IC    R5,RNUM+1\n         CVD   R5,DOUBLWD\n         MVC   WORKLINE(5),PATTERN1\n         ED    WORKLINE(5),DOUBLWD+5\n         MVC   16(3,R9),WORKLINE+2\n         TIME  DEC\n         ST    R0,WORK\n         MVI   WORK+3,X'0C'\n         UNPK  DOUBLWD(7),WORK(4)\n         LA    R9,HEADING+36\n         MVC   0(2,R9),DOUBLWD\n         MVC   3(2,R9),DOUBLWD+2\n         MVC   6(2,R9),DOUBLWD+4\n         MVC   28(8,R9),USER\n         MVC   10(10,R9),BLANKS\n         CLI   AUTOFLAG,X'FF'\n         BNE   FIRSTL\n         MVC   10(10,R9),=C'AUTOUPDATE'\nFIRSTL   L     R9,NUMLINES       NUMBER OF LINES ON PROG TERMINAL\n         L     R5,CONL\n         SR    R4,R4\n         LA    R1,90\n         DR    R4,R1\n         LA    R5,2(,R5)\n         ST    R5,CONL\n         CR    R9,R5\n         BNL   FIRSTL1\n         SR    R5,R9\n         L     R1,CONL\n         SR    R4,R4\n         LA    R5,2(,R5)\n         SR    R1,R5\n         ST    R1,CONL\n         LA    R1,90\n         MR    R4,R1\n         LA    R3,0(R5,R3)\nFIRSTL1  LA    R5,SCREEN+1            ADDRESS OF FIRST LINE\n         LA    R6,PAGEDEF             LINES TO BE DISPLAYED\n         CLI   MOD5FLAG,X'FF'         MOD 5?\n         BNE   NOTMOD5\n         LA    R6,PAGEDEF5\nNOTMOD5  L     R1,CONL\n         SR    R9,R1\n         SR    R10,R10\n         BCTR  R9,0                   MINUS ONE\n         MVC   0(5,R5),0(R6)          CONTROL CHAR\n         MVC   5(79,R5),HEADING       HEADING\n         SR    R15,R15\n         IC    R15,CONSOLE+3\n         SRL   R15,4                  ONLY WANT LEFT BYTE\n         C     R15,TEN\n         BL    NUMERIC1\n         O     R15,CHAROR\n         B     SECONDCK\nNUMERIC1 O     R15,NUMBEROR\nSECONDCK STC   R15,78(R5)\n         IC    R15,CONSOLE+3\n         SLL   R15,28                 ONLY WANT LEFT BYTE\n         SRL   R15,28\n         C     R15,TEN\n         BL    NUMERIC2\n         O     R15,CHAROR\n         B     STORECHR\nNUMERIC2 O     R15,NUMBEROR\nSTORECHR STC   R15,79(R5)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R10,85(,R10)\n         LA    R6,5(,R6)              INCREMENT\n         BCTR  R1,0\n         CLI   HELPFLAG,X'FF'         HELP?\n         BNE   MOVESTUP\n         L     R9,NUMLINES\n         S     R9,=F'07'\n         MVC   0(5,R5),0(R6)\n         MVC   5(79,R5),BLANKS\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,05(,R6)             INCREMENT\n         MVC   0(5,R5),0(R6)\n         LA    R1,HEADING1\n         MVC   5(79,R5),80(R1)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,5(,R6)              INCREMENT\n         MVC   0(5,R5),0(R6)\n         LA    R1,80(,R1)\n         MVC   5(79,R5),80(R1)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,5(,R6)              INCREMENT\n         MVC   0(5,R5),0(R6)\n         MVC   5(79,R5),160(R1)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,5(,R6)              INCREMENT\n         MVC   0(5,R5),0(R6)\n         MVC   5(79,R5),240(R1)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,5(,R6)              INCREMENT\n         LA    R10,420(,R10)\n         B     SPACLOOP\nMOVESTUP LR    R15,R5\n*        MVC   0(4,R5),0(R6)          LINE ADDRESS\n*        MVC   4(1,R5),0(R3)          ATTRIBUTE BYTE\n*        B     MVIT2\nMOVELOOP CLI   CLRFLAG,X'FF'\n         BE    MVIT\n         CLC   5(74,R15),9(R3)        HAS THIS LINE CHANGED?\n         BNE   MVIT\n         CLC   4(1,R15),0(R3)         ATTRIBUTE BYTE CHANGED?\n         BE    SKPMV                  NO NEED SENDING DOWN THE LINE\nMVIT     MVC   0(4,R5),0(R6)          LINE ADDRESS\n         MVC   4(1,R5),0(R3)          ATTRIBUTE BYTE\n         MVI   CLRFLAG,X'FF'          SCREEN HAS CHANGED FROM HERE DOWN\nMVIT2    MVC   5(79,R5),9(R3)         MOVE LINE OF PRINT\n         MVC   80(4,R5),BLANKS\n         LA    R5,84(,R5)\n         LA    R10,84(,R10)\nSKPMV    LA    R6,05(,R6)             INCREMENT\n         LA    R3,90(,R3)             INCREMENT\n*        LA    R3,6(,R3)              INCREMENT\n         LA    R15,84(,R15)\n*        AP    HEADING(2),HEADING(2)\n         BCT   R1,MOVELOOP            LOOP\n         MVI   CLRFLAG,X'00'\nSPACLOOP LA    R6,05(,R6)             INCREMENT\n         BCTR  R9,0\n         C     R9,=F'0'\n         BH    SPACLOOP\n         MVC   0(5,R5),0(R6)          LINE ADDRESS\n         MVI   4(R5),X'C9'            ATTRIBUTE\n         MVI   5(R5),X'13'            INSERT CURSOR\n         CLI   HELPFLAG,X'FF'\n         BE    GOAHEAD2\n         CLI   IPLFLAG,X'FF'\n         BE    GOAHEAD2\n         CLI   AUTOFLAG,X'FF'\n         BE    AUTOROLL\nGOAHEAD  CLI   RESHOWFL,X'FF'\n         BNE   GOAHEAD2\n         MVI   RESHOWFL,X'00'\n         MVC   6(72,R5),CMDLINE+4\n         B     GOAHEAD3\nGOAHEAD2 MVC   6(79,R5),BLANKS        LAST LINE IS INPUT LINE\nGOAHEAD3 MVI   CMDFLAG,X'00'\n         LA    R10,84(,R10)\n         LR    R0,R10\n         LA    R1,SCREEN              ADDRESS OF SCREEN\n         TPUT  (1),(0),FULLSCR        TPUT\n         AP    HEADING(2),HEADING(2)\n         MVC   REPLY,BLANKS           CLEAR\nTGET1    TGET  REPLY,84,ASIS,WAIT     INPUT\n*        AP    HEADING(3),HEADING(3)\n         MVI   HELPFLAG,X'00'\n         B     CHEKOUT\nAUTOROLL EQU   *\n*        L     R0,TPUTLEN             LENGTH OF TPUT\n         LA    R1,SCREEN              ADDRESS OF SCREEN\n         CLI   RESHOWFL,X'FF'\n         BNE   GOAHEAD5\n         MVI   RESHOWFL,X'00'\n         MVC   6(72,R5),CMDLINE+4\n         MVC   REPLY,BLANKS\n         LA    R10,72(,R10)\n         B     GOAHEAD5\n*OAHEAD4 S     R0,=F'79'\nGOAHEAD5 CLI   CMDFLAG,X'FF'\n         BNE   AUTOTPUT\n         MVC   0(5,R5),0(R6)          LINE ADDRESS\n         MVI   4(R5),X'C9'            ATTRIBUTE\n         MVI   5(R5),X'13'            INSERT CURSOR\n         MVI   CMDFLAG,X'00'\nAUTOTPUT LA    R0,5(,R10)\n*        LR    R0,R10\n         TPUT  (1),(0),FULLSCR\n         TGET  REPLY,70,ASIS,NOWAIT\n         STIMER WAIT,BINTVL=TIMER\nCHEKOUT  CLI   REPLY,X'7D'\n         BE    GOTSTUFF\n         NI    REPLY,X'0F'\n         CLI   REPLY,X'01'\n         BE    HELP\n         CLI   REPLY,X'02'\n         BE    AUTOSTOP\n         CLI   REPLY,X'03'\n         BE    CHEKAUTO\n         CLI   REPLY,X'04'\n         BE    AUTOON\n         CLI   REPLY,X'05'\n         BE    CNSLSW\n         CLI   REPLY,X'06'\n         BE    RESHOW\n         CLI   REPLY,X'07'\n         BE    MTT\n         CLI   REPLY,X'08'\n         BE    AUTO10\n         CLI   REPLY,X'09'\n         BE    AUTO2\n         CLI   REPLY,X'0A'\n         BE    OMON\n         CLI   REPLY,X'0B'\n         BE    AUTO4\n         CLI   REPLY,X'0C'\n         BE    IPLINFO\nNOTIFY   MVI   CLRFLAG,X'FF'\n         MVI   CMDFLAG,X'FF'\n         B     AUTHDONE\nCHEKAUTO CLI   AUTOFLAG,X'FF'\n         BNE   AXFREE\n         MVI   AUTOFLAG,X'00'\n         B     AUTHDONE\nCNSLSW   MVI   CNSLFLAG,X'FF'\n         MVI   REPLY,X'00'\n         MVI   THRUFLAG,X'00'\n         MVI   CLRFLAG,X'FF'\n         B     SHOWCONS\nRESHOW   MVI   RESHOWFL,X'FF'\n         B     AUTHDONE\nIPLINFO  MVC   WORKLINE,BLANKS\n         MVC   WORKLINE+10(46),MESSAGE\n         LA    R1,16              HEX 10\n         L     R2,0(R1)           ADDRESS OV CVT\n         USING CVT,R2\n         L     R3,CVTSMCA         ADDRESS OF SMF CONTROL AREA\n         L     R1,CVTSYSAD\n         MVC   WORKLINE+72(3),13(1)\n         MVC   WORKLINE+65(7),=C'SYSRES='\n         USING SMCABASE,R3\n         MVC   IPLDATE,SMCAIDTE   IPL DATE\n         MVC   IPLTIME,SMCAITME   IPL TIME\n         DROP  R3\n         L     R3,CVTASMVT\n         TM    1(R3),X'08'     CLPA?\n         BNZ   NOCLPA             1 MEANS A QUICK START - NO CLPA WAS\n         MVC   WORKLINE+57(3),=C'YES'\n         B     DATEEDIT\nNOCLPA   MVC   WORKLINE+57(3),=C'NO '\nDATEEDIT MVC   WORKLINE+31(5),PATTERN1\n         ED    WORKLINE+31(5),IPLDATE+1 MAKE PRINTABLE\n         DROP  R2\n         L     R6,IPLTIME\n         SRDA  R6,32(0)\n         L     R3,THREE60\n         DR    R6,R3\n         CVD   R7,DOUBLWD\n         MVC   WORK(4),=X'40212020'\n         ED    WORK(4),DOUBLWD+6\n         MVC   WORKLINE+43(2),WORK+2\n         SRDA  R6,32              SHIFT REMAINDER\n         L     R3,SIXTY\n         DR    R6,R3\n         CVD   R7,DOUBLWD\n         MVC   WORK(4),=X'F0212020'\n         ED    WORK(4),DOUBLWD+6\n         MVC   WORKLINE+46(2),WORK+2\n         LA    R5,SCREEN+1            ADDRESS OF FIRST LINE\n         LA    R6,PAGEDEF             LINES TO BE DISPLAYED\n         LA    R10,85\n         CLI   MOD5FLAG,X'FF'\n         BNE   NONMOD5\n         LA    R6,PAGEDEF5\nNONMOD5  L     R9,NUMLINES\n         BCTR  R9,0\n         MVC   0(5,R5),0(R6)\n         MVC   5(79,R5),WORKLINE\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,05(,R6)             INCREMENT\n         BCTR  R9,0\n         TPUT  CLEAR,13,FULLSCR\n         MVI   IPLFLAG,X'FF'\n         TCLEARQ INPUT\n         B     SPACLOOP\nMTT      L     R1,SAVECPPL\n         LINK  EP=ZTPR0205\n         TPUT  CLEAR,13,FULLSCR\n         MVI   AUTOFLAG,X'00'\n         MVI   CLRFLAG,X'FF'\n         B     AUTHDONE\nOMON     L     R1,SAVECPPL\n         LINK  EP=ZTPR0204\n         TPUT  CLEAR,13,FULLSCR\n         MVI   AUTOFLAG,X'00'\n         MVI   CLRFLAG,X'FF'\n         B     AUTHDONE\nHELP     MVI   HELPFLAG,X'FF'\n         MVI   AUTOFLAG,X'00'\n         TPUT  CLEAR,13,FULLSCR\n         MVI   CLRFLAG,X'FF'\n         B     FIRSTL\nAUTOON   MVC   TIMER,ONE\n         CLI   USERFLAG,X'FF'\n         BE    AUTO2\n         B     AUTOSET\nAUTO2    MVC   TIMER,THREE\n         B     AUTOSET\nAUTO4    MVC   TIMER,FIVE\nAUTOSET  MVI   AUTOFLAG,X'FF'\n         MVC   5(72,R5),BLANKS\n         MVI   REPLY,X'00'\n         B     AUTHDONE\nAUTO10   MVC   TIMER,=F'990'            APP 10 SECS\n         B     AUTOSET\nAUTOSTOP MVI   AUTOFLAG,X'00'\n         B     AUTHDONE\nSKIPALL  MVI   ISSUFLAG,X'FF'\n         B     AUTHDONE\nGOTSTUFF DS    0H\n         CLI   REPLY+6,C'>'        IS IT NOTIFY MESSAGE?\n         BE    NOTIFY              THEN EXIT\n         OC    REPLY+6(74),BLANKS  ALL INPUT UPPER CASE\n         CLC   REPLY+6(70),BLANKS  COMMAND AREA IS SPACES?\n         BE    AUTHDONE            THEN A COMMAND WAS NOT ENTERED\n         MVC   CMDLINE+4(72),REPLY+6\n         MVC   CMDLINE(4),CMDFMT\n         MVC   REPLY,BLANKS\n         CLI   CMDLINE+4,C'Z'      IS IT END,\n         BE    CHEKAUTO            THEN EXIT\n         CLI   CMDLINE+4,C'X'      IS IT END,\n         BE    CHEKAUTO            THEN EXIT\n         CLC   CMDLINE+4(3),=C'END' IS IT END,\n         BE    AXFREE               THEN EXIT\nGOTCMD   TPUT  CLEAR,13,FULLSCR\n         MVI   CLRFLAG,X'FF'\nLOGLINE  MVC   WTOCMD(100),WTOLIST\n         MVC   WTOCMD+8(72),CMDLINE+4\n         MVC   WTOCMD+78(4),USERID\n         LA    R7,WTOCMD\n         WTL   MF=(E,(R7))\n*OWTO    BAL   R3,AUTHRIZ\nNOWTO    EQU   *\n         SLR   R0,0                 CLEAR REG 0\n         L     R0,CONSOLE\nISSUE    LA    R1,CMDLINE          GET ADDRESS OF COMMAND I SMF\n         SVC   34                  ISSUE COMMAND VIA SVC 34\n         STIMER WAIT,BINTVL=ONE\n         MVI   CMDFLAG,X'FF'\n         B     AUTHDONE\nNOAUTH   DELETE EP=IKJEFFUT\n         TPUT  MSGNO1,13\n         B     SHOWRTRN\nAUTHRIZ  STAX  DEFER=YES\n         MODESET MF=(E,SUPRMOD)  GET INTO SUPV STATE AND KEY ZERO\n         BR    R3                ****************************\nUNAUTH   DS    0H\n         MODESET MF=(E,PROBMOD)\n         STAX  DEFER=NO\n         BR    R3\n         EJECT\n         LTORG\n*---------------------------------------------------------------------*\n*                         C O N S T A N T S                           *\n*---------------------------------------------------------------------*\nCMDFMT   DC    Y(76),Y(00)            LENGTH OF COMMAND\nMESSAGE  DC    CL46'LAST SYSTEM IPL DATE XXXXX  TIME HH:MM  CLPA ='\nPATTERN1 DC    XL5'2120202020'\nTHREE60  DC    F'360000'\nSIXTY    DC    F'6000'\nAXLIST   DC    H'1',H'0'           AXRES PARMLIST\n         CNOP  0,8\n*---------------------------------------------------------------------*\n*               327X SCREEN CLEAR CONTROL CHARACTERS                  *\n*---------------------------------------------------------------------*\n*LR      DC    X'7E'              EWA\nCLR      DC    X'C3'              WCC - FREE KEYBOARD/RESET MDT\n*        DC    X'11F56F'          SBA TO ROW 43, COL 80\n         DC    X'114040'          SBA TO ROW 1, COL 1\n         DC    X'3C'              REPEAT TO ADDRESS\n         DC    X'F56F00'          FILL SCREEN WITH NULLS F56F=R43 COL80\n         DC    X'11F460'          ROW 43 COL 2\n         DC    X'00'              ATTRIBUTE\n         DC    X'13'              INSERT CURSOR\n*        DC    X'1DE913'          SBA TO ROW 1, COL 1 1DC813\nONE      DC    A(175)             1.75 SECOND\nFIVE     DC    A(444)             5 SECONDS\nTHREE    DC    A(220)             3 SECONDS\nTEN      DC    F'10'\nNUMBEROR DC    XL4'000000F0'\nCHAROR   DC    XL4'000000C0'\nHEXFS    DC    XL4'FFFFFFFF'\nHEXZIP   DC    2F'0000000000000000'\nMSGNO1   DC    CL13'SYSTEM ACTIVE'\n         DS    0F\nWTOLIST  WTL   '                                                       X\n                                       ZTPR0200',MF=L\n         DS    0F\nAUTH     DC    CL4'AUTH'\n         SPACE 5\nSUPRMOD  MODESET KEY=ZERO,MODE=SUP,MF=L\nPROBMOD  MODESET KEY=NZERO,MF=L\nTABLE    DC    CL4'MURF'          MURF CAN DO IT\nTABLEND  DC    CL4'JXCC'          CAN DO IT\nRTMEC    DC    CL6',RTME='\nRNUMC    DC    CL6',RNUM='\nMOD2     DC    CL3'***'\nFORTY3   DC    H'43'\nTHIRTY2  DC    H'32'\nEIGHTY   DC    H'80'\nPAGEDEF  DC    X'1140401DE8'          ROW  1   COL  1\n         DC    X'11C1501DC4'          ROW  2   COL  1\n         DC    X'11C2601DC4'          ROW  3   COL  1\n         DC    X'11C3F01DC4'          ROW  4   COL  1\n         DC    X'11C5401DC4'          ROW  5   COL  1\n         DC    X'11C6501DC4'          ROW  6   COL  1\n         DC    X'11C7601DC4'          ROW  7   COL  1\n         DC    X'11C8F01DC4'          ROW  8   COL  1\n         DC    X'114A401DC4'          ROW  9   COL  1\n         DC    X'114B501DC4'          ROW 10   COL  1\n         DC    X'114C601DC4'          ROW 11   COL  1\n         DC    X'114DF01DC4'          ROW 12   COL  1\n         DC    X'114F401DC4'          ROW 13   COL  1\n         DC    X'1150501DC4'          ROW 14   COL  1\n         DC    X'11D1601DC4'          ROW 15   COL  1\n         DC    X'11D2F01DC4'          ROW 16   COL  1\n         DC    X'11D4401DC4'          ROW 17   COL  1\n         DC    X'11D5501DC4'          ROW 18   COL  1\n         DC    X'11D6601DC4'          ROW 19   COL  1\n         DC    X'11D7F01DC4'          ROW 20   COL  1\n         DC    X'11D9401DC4'          ROW 21   COL  1\n         DC    X'115A501DC4'          ROW 22   COL  1\n         DC    X'115B601DC4'          ROW 23   COL  1\n         DC    X'115CF01DC4'          ROW 24   COL  1\n         DC    X'115E401DC4'          ROW 25   COL  1\n         DC    X'115F501DC4'          ROW 26   COL  1\n         DC    X'1160601DC4'          ROW 27   COL  1\n         DC    X'1161F01DC4'          ROW 28   COL  1\n         DC    X'11E3401DC4'          ROW 29   COL  1\n         DC    X'11E4501DC4'          ROW 30   COL  1\n         DC    X'11E5601DC4'          ROW 31   COL  1\n         DC    X'11E6F01DC4'          ROW 32   COL  1\n         DC    X'11E8401DC4'          ROW 33   COL  1\n         DC    X'11E9501DC4'          ROW 34   COL  1\n         DC    X'116A601DC4'          ROW 35   COL  1\n         DC    X'116BF01DC4'          ROW 36   COL  1\n         DC    X'116D401DC4'          ROW 37   COL  1\n         DC    X'116E501DC4'          ROW 38   COL  1\n         DC    X'116F601DC4'          ROW 39   COL  1\n         DC    X'11F0F01DC4'          ROW 40   COL  1\n         DC    X'11F2401DC4'          ROW 41   COL  1\n         DC    X'11F3501DC4'          ROW 42   COL  1\n         DC    X'11F4601DC8'          ROW 43   COL  1\nPAGEDEF5 DC    X'1140401DE8'          ROW  1   COL  1 MODEL 5\n         DC    X'11C2C41DE4'          ROW  2   COL  1\n         DC    X'11C4C81DE4'          ROW  3   COL  1\n         DC    X'11C64C1DE4'          ROW  4   COL  1\n         DC    X'11C8501DE4'          ROW  5   COL  1\n         DC    X'114AD41DE4'          ROW  6   COL  1\n         DC    X'114CD81DE4'          ROW  7   COL  1\n         DC    X'114E5C1DE4'          ROW  8   COL  1\n         DC    X'1150601DE4'          ROW  9   COL  1\n         DC    X'11D2E41DE4'          ROW 10   COL  1\n         DC    X'11D4E81DE4'          ROW 11   COL  1\n         DC    X'11D66C1DE4'          ROW 12   COL  1\n         DC    X'11D8F01DE4'          ROW 13   COL  1\n         DC    X'115AF41DE4'          ROW 14   COL  1\n         DC    X'115CF81DE4'          ROW 15   COL  1\n         DC    X'115E7C1DE4'          ROW 16   COL  1\n         DC    X'1161401DE4'          ROW 17   COL  1\n         DC    X'11E3C41DE4'          ROW 18   COL  1\n         DC    X'11E5C81DE4'          ROW 19   COL  1\n         DC    X'11E74C1DE4'          ROW 20   COL  1\n         DC    X'11E9501DE4'          ROW 21   COL  1\n         DC    X'116BD41DE4'          ROW 22   COL  1\n         DC    X'116DD81DE4'          ROW 23   COL  1\n         DC    X'116F5C1DE4'          ROW 24   COL  1\n         DC    X'11F1601DE4'          ROW 25   COL  1\n         DC    X'11F3E41DE4'          ROW 26   COL  1\n         DC    X'11F5E81DE4'          ROW 27   COL  1\nNOTISSUD DC    CL18'COMMAND NOT ISSUED'\nHEADING1 DC    CL80'K S,DEL=                            99:99:99       X\n                             CONSOLE XX    '\nHELPMSG1 DC    CL80'PF-1   THIS DISPLAY         PF-2  STOP AUTO UPDATE X\n                 PF-3   END                '\nHELPMSG2 DC    CL80'PF-4   AUTO UPDATE 1 SEC    PF-5  ALTERNATE CONSOLEX\n                 PF-6   RESHOW LAST COMMAND'\nHELPMSG3 DC    CL80'PF-7   PAGE THRU MTT        PF-8  AUTO UPDATE 10 SEX\n               C PF-9   AUTO UPDATE 4 SEC  '\nHELPMSG4 DC    CL80'PF-10  OMEGAMON             PF-11 AUTO UPDATE 2 SECX\n                 PF-12  IPL INFO           '\nWORKAREA DSECT\nSAVEAREA DS    18F\nUCMTABX  DS    F\nRDCM     DS    F\nWORKLINE DS    CL80\nREPLY    DS    CL80\nBLANKS   DS    CL80\nCMDLINE  DS    CL80\nHEADING  DS    CL80\nSIBPTR   DS    F                   PRT TO SCREEN IMAGE BUFFER\nUCMTAB   DS    F\n         DS    35F                PROVIDE SPACE FOR 20 UCM ADDRESSES\nUCMTABE  EQU   *\nNUMUCMS  DS    H\nOLDCONS  DS    F                   PREVIOUS CONSOLE NUMBER\n         SPACE 5\nCLEAR    DS    XL1                WCC - CLEAR SCREEN\n         DS    XL3                SBA TO ROW 1, COL 1\n         DS    XL1                IC AND REPEAT TO ADDRESS\nENDOFSCR DS    XL2                SBA TO ROW XX, COL 80\n         DS    XL2                FILL SCREEN WITH NULLS\nCURSOR   DS    XL2                SBA TO ROW 1, COL 1\n         DS    XL2                INSERT CURSOR\nLASTLINE DS    CL255' '           OPERATORS COMMAND INPUT LINE\nCONNUM   DS    CL2' 1'            CONSOLE NUMBER\nCTYPE    DS    CL4' '\nMASTER   DS    CL8' '             MASTER CONSOLE\nSYS      DS    CL4' '             SYS  AUTHORIZATION\nIO       DS    CL4' '             I/O  AUTHORIZATION\nCONS     DS    CL5' '             CONS AUTHORIZATION\n         DS    CL3' '\n*NIT     DS    CL4' '             UNIT ADDR OF CONSOLE\nTIME     DS    CL3' '             SECONDS REMAINING ON TIMER\nSLASH    DS    CL1'/'\nPAUSE    DS    CL3'1.0'           DELAY IN SECONDS\n         DS    CL2' '\nAREAA    DS    XL1\nCNSLFLAG DS    XL1\nTHRUFLAG DS    XL1\nAUTOFLAG DS    XL1\nISSUFLAG DS    XL1\nRESHOWFL DS    XL1\nHELPFLAG DS    XL1\nUSERFLAG DS    XL1\nCLRFLAG  DS    XL1\nIPLFLAG  DS    XL1\nMOD5FLAG DS    XL1\nCMDFLAG  DS    XL1\nCONSOLE  DS    F                   CONSOLE TO BE LOOKED AT\nCONSASID DS    F                   'CONSOLE' ASID FOR CMS\nNUMLINES DS    F\nCONL     DS    F\nSAVECPPL DS    F\nTPUTLEN  DS    F\nTIMER    DS    F\nRTME     DS    H\nRNUM     DS    H\nUSER     DS    CL8            CONSOLE NAME\nUSERID   DS    CL7\nTABAREA  DS    CL77\nSELCODE  DS    CL3            LINE SELECTION CODE\nSELSAVE  DS    CL3            LINE SELECTION CODE SAVE AREA\nWORK     DS    D\nIPLDATE  DS    F\nIPLTIME  DS    F\nDOUBLWD  DS    D\nWTOCMD   DS    CL104\nSCREEN   DS    XL1       SPACE FOR WCC\n         DS    43CL84\n         DS    CL124     EXTRA FOR MOD5\nBUF      DS    45CL133            OPERATORS SCREEN BUFFER\nWORKLENG EQU   *-WORKAREA\n         PRINT NOGEN\n         TITLE '*** PROTECTED STEP CONTROL BLOCK DSECT ***'\n         IKJPSCB                   COPY THE PSCB FORMAT DSECT\n         TITLE '*** COMMAND PROCESSOR PARAMETER LIST DSECT ***'\n         IKJCPPL                   COMMAND PROCESSOR PARM LIST\n         TITLE '*** TSO USER PROFILE TABLE DSECT ***'\n         IKJUPT                    TSO USER PROFILE TABLE\n         TITLE '*** COMMUNICATION VECTOR TABLE ***'\n         CVT   DSECT=YES\n         TITLE '*** J S C B ***'\n         IEZJSCB\n         TITLE '*** T  C  B ***'\n         IKJTCB DSECT=YES\n*        TITLE '*** RDCM DSECT ***'\n*EERDCM  DSECT ,\n*        IEECRDCM\n         TITLE '*** TDCM DSECT ***'\nIEETDCM  DSECT ,\n         IEECDCM\n         TITLE '*** MULTIPLE CONSOLE SUPPORT (MCS) UCM PREFIX ***'\n         IEECUCM FORMAT=NEW\n         IHAASVT\n         TITLE '*** ADDRESS SPACE CONTROL BLOCK ***'\n         IHAASCB\n         TITLE '*** TSB DSECT ***'\n         IKJTSB LIST=YES\n         TITLE '*** CHAIN     ***'\n         IEECHAIN\n         IEESMCA\n         END\n./ ADD NAME=CONESAJ  0100-1993078-1993078-1148-00030-00030-00000-MURF\n//MURFC    JOB (6496,B014),MURF,CLASS=O,MSGCLASS=3,NOTIFY=MURF\n//*********************************************************************\n//*1.CHANGE SYSIN AND SYSLIB DD TO CORRECT UNLOADED CBT FILE NAME.    *\n//*2.CHANGE SYSLMOD TO CORRECT LOAD LIB.                              *\n//*********************************************************************\n//COM     EXEC PGM=IEV90,REGION=512K,\n//    PARM='LOAD,XREF(SHORT),LINECNT=55,NODECK,RENT'\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB\n//         DD  DISP=SHR,DSN=SYS1.MODGEN\n//         DD  DISP=SHR,DSN=SYS1.AMODGEN\n//SYSLIN   DD  UNIT=VIO,DSN=&LOADSET,DISP=(MOD,PASS),\n//             SPACE=(CYL,(2,2)),DCB=BLKSIZE=1680\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(10,2))\n//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(12,2))\n//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(20,2))\n//SYSPUNCH DD  DUMMY =*,DCB=FUNC=I\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSIN    DD  DSN=SYSX.SOFT.WARE(CONS),DISP=SHR\n//*\n//LKED         EXEC PGM=IEWL,REGION=1024K,COND=(4,LT),\n//             PARM='XREF,LET,LIST,RENT,REUS,AC(1)'\n//SYSPRINT     DD   SYSOUT=*\n//SYSUT1       DD   DSN=&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD      DD   DISP=SHR,DSN=SYST.LOADLIB\n//SYSLIN       DD   UNIT=SYSDA,DSN=&LOADSET,DISP=(OLD,DELETE)\n//             DD   DDNAME=SYSIN\n//SYSIN        DD   *\n ALIAS CONS\n NAME ZTPR0200(R)\n./ ADD NAME=IKJTSO00\n/********************************************************************/\n/*                                                                  */\n/*      THIS IS A SAMPLE MEMBER WHICH MAY BE PLACED INTO            */\n/*  SYS1.PARMLIB(IKJTSO00).  THE DATA IN THE MEMBER IKJTSO00        */\n/*  IS USED AT IPL TIME TO DEFINE THE AUTHORIZED COMMAND            */\n/*  LIST, THE AUTHORIZED PROGRAM LIST, THE NOT BACKGROUND           */\n/*  COMMAND LIST, THE AUTHORIZED BY THE TSO SERVICE                 */\n/*  FACILITY LIST, AND TO CREATE THE DEFAULTS THE SEND COMMAND      */\n/*  WILL USE.                                                       */\n/*                                                                  */\n/*      THE DATA IN THIS MEMBER SHOULD BE MODIFIED AS APPROPRIATE   */\n/*  AND PLACED INTO THE DATA SET SYS1.PARMLIB(IKJTSO00).            */\n/*                                                                  */\n/*                                                                  */\n/*  TO DYNAMICALLY UPDATE AFTER TSO/E 2.1, USE THE COMMAND PARMLIB: */\n/*                                                                  */\n/*     PARMLIB UPDATE(00)                                           */\n/********************************************************************/\nAUTHCMD NAMES(               /* AUTHORIZED COMMANDS */        +\n   RECEIVE                   /*  TSO COMMANDS       */        +\n   TRANSMIT XMIT             /*                     */        +\n   LISTB    LISTBC           /*                     */        +\n   LISTD    LISTDS           /*                     */        +\n   SE       SEND             /*                     */        +\n   RACONVRT                  /*                     */        +\n   SYNC                      /*                     */        +\n   TESTAUTH TESTA            /*                     */        +\n   PARMLIB                   /*                     */        +\n   PRODLLA                   /*                     */        +\n   AD       ADDSD            /*  RACF COMMANDS      */        +\n   AG       ADDGROUP         /*                     */        +\n   AU       ADDUSER          /*                     */        +\n   ALG      ALTGROUP         /*                     */        +\n   ALD      ALTDSD           /*                     */        +\n   ALU      ALTUSER          /*                     */        +\n   BLKUPD                    /*                     */        +\n   CO       CONNECT          /*                     */        +\n   DD       DELDSD           /*                     */        +\n   DG       DELGROUP         /*                     */        +\n   DU       DELUSER          /*                     */        +\n   LD       LISTDSD          /*                     */        +\n   LG       LISTGRP          /*                     */        +\n   LU       LISTUSER         /*                     */        +\n   RALT     RALTER           /*                     */        +\n   RDEF     RDEFINE          /*                     */        +\n   RDEL     RDELETE          /*                     */        +\n   RE       REMOVE           /*                     */        +\n   RL       RLIST            /*                     */        +\n   RVARY                     /*                     */        +\n   PASSWORD PW               /*                     */        +\n   PE       PERMIT           /*                     */        +\n   SETR     SETROPTS         /*                     */        +\n   SR       SEARCH           /*                     */        +\n   SETPW                     /*                     */        +\n   GETNAME                   /*                     */        +\n   ZTPR0200                  /* MTT                 */        +\n   MTT                       /* MTT                 */        +\n   VLFNOTE                   /* USED BY VLF         */        +\n   MIMTSO                    /* MULTI-IMAGE MNGR    */        +\n   DB2PPREP)                 /*                     */\nAUTHPGM NAMES(               /* AUTHORIZED PROGRAMS */        +\n   IEBCOPY                   /* IBM COPY UTILITY    */        +\n   IKJEFF76          /* STATUS/SUBMIT/CANCEL/OUTPUT */        +\n   OMSPFAU                   /*                     */        +\n   RECEIVE                   /*                     */        +\n   TRANSMIT                  /*                     */        +\n   XMIT                      /*                     */        +\n   DSNUTILB                  /* DB2 UTILITY         */        +\n   OBROUTR                   /* DB2 UTILITY         */        +\n   OMEGAMON                  /*                     */        +\n   ICHUT100                  /*  RACF PROGRAMS      */        +\n   ICHUT200                  /*  RACF PROGRAMS      */        +\n   ICHDSM00                  /*  RACF PROGRAMS      */        +\n   ICHUT400)                 /*  RACF PROGRAMS      */\nNOTBKGND NAMES(        /*                           */        +\n   OPER     OPERATOR         /*                     */        +\n   TERM     TERMINAL)        /*                     */\nAUTHTSF NAMES(   /* PROGRAMS TO BE AUTHORIZED       */        +\n   IEBCOPY                   /*                     */        +\n   IKJEFF76)                 /*                     */\n\nSEND                       /* SEND COMMAND DEFAULTS */        +\n   OPERSEND(ON)              /*                     */        +\n   USERSEND(ON)              /*                     */        +\n   SAVE(ON)                  /*                     */        +\n   CHKBROD(OFF)              /*                     */        +\n   LOGNAME(SYS1.BRODCAST)    /*                     */\nALLOCATE                   /* ALLOCATE COMMAND DEFAULT*/      +\n   DEFAULT(OLD)              /*                     */\nTRANSREC NODESMF((N1,SYSA))      /*TRANSMIT/RECEIVE DEFAULTS*/ +\n         CIPHER(YES)              /*                       */  +\n         SPOOLCL(B)               /*                       */  +\n         OUTWARN(10000,5000)      /*                       */  +\n         OUTLIM(30000)            /*                       */  +\n         VIO(VIO)                 /*                       */  +\n         LOGSEL(TRAN)             /*                       */  +\n         LOGNAME(DATA)            /*                       */  +\n         DAPREFIX(USERID)         /*                       */\n./ ADD NAME=KLEENUP  0100-1993075-1993075-0927-00065-00065-00000-MURF\n/* REXX EXEC */\n/* CHANGED 2/9/93 FOR SMSDATA ADDING 3 LINES AND               */\n/*                SINCE SOME NEED A BACKUP TO MIGRATE I ADDED  */\n/*                THE HBACK COMMAND AS WELL              MURF  */\n/* REXX EXEC - NEEDS TO GO IN THE SYSPROC OR SYSEXEC DD.             */\n/* KLEENUP COMMAND FORMAT:                                           */\n/* KLEENUP GDGDSN MMM NNN                                            */\n/* IT WILL GENERATE HSM COMMANDS TO MIGRATE DISK GDG'S,  SPECIFY     */\n/* MIGRATIONLEVEL 1 OR 2 BY PUTTING ML1 OR ML2 AFTER THE DSN AT  MMM */\n/* CAN SPECIFY NUMBER TO KEEP ON DASD BY A NUMBER FOLLOWING THIS NNN */\n/* EXAMPLE:                                                          */\n/*           KLEENUP SYS2.LISTCAT.USERCAT ML2 1                      */\n/* THIS WILL ISSUE COMMANDS TO MIGRATE ALL BUT THE CURRENT GEN. TO   */\n/* MIGRATIONLEVEL 2.                                                 */\n/*           KLEENUP SYS2.LISTCAT.USERCAT                            */\n/* THIS WILL ISSUE COMMANDS TO MIGRATE ALL BUT THE CURRENT GEN. TO   */\n/* MIGRATIONLEVEL 1 BY DEFAULT.                                      */\nARG DS LVL NUM\nX=OUTTRAP('LN.')\n\"LISTC ENT(\" \"'\"DS\"'\" \") ALL\"\nX=OUTTRAP(OFF);\nIF LVL \u00ac= 'ML2' OR 'WAIT' OR 'NOWAIT' THEN\n        LVL = ' '\nIF NUM = '' THEN DO\n            SAY 'MIGRATING OFF ALL BUT CURRENT GENERATION ' DS\n            NUM = 1\n            END\nTOT=0\n    DO I= 1 TO LN.0\n/*  SAY \"LN.\"I \"=\" LN.I */\n    IF SUBSTR(LN.I,3,09) = 'NONVSAM' THEN DO\n       PARSE VALUE LN.I WITH NV DSH DSN\n       N=I+6\n       SMS=SUBSTR(LN.N,5,11)\n/*     SAY SMS                   */\n       IF SMS = 'SMSDATA' THEN N=N+4\n                          ELSE N=N+1\n       VOL=SUBSTR(LN.N,26,31)\n/*     DAT=SUBSTR(LN.N,1,79)     */\n/*     SAY DAT                   */\n/*     SAY VOL                   */\n       PUSH DSN\n       PUSH VOL\n       TOT=TOT+1\n       END\n    END\n    DO I = 1 TO TOT\n       PULL VOL\n       PULL DSN\n        IF SUBSTR(VOL,1,6) \u00ac= \"MIGRAT\"  THEN CALL HBACK\n       IF I > NUM THEN DO\n        IF SUBSTR(VOL,1,6) \u00ac= \"MIGRAT\"  THEN DO\n            CALL PRG\n            END\n        END\n    END\nRETURN\nPRG:\n /* SAY \"HMIGRATE (\" \"'\"DSN\"'\"  \")\" LVL */\n \"HMIGRATE (\" \"'\"DSN\"'\"  \")\" LVL\n           RETURN\nHBACK:\n /* SAY \"HBACKDS (\" \"'\"DSN\"'\"  \")\"   */\n \"HBACKDS (\" \"'\"DSN\"'\"  \")\"\n           RETURN\n./ ADD NAME=KLEENUPJ\n//ICFCAT1  JOB (6496,3330),'ICF001  DIAG/LISTCAT',CLASS=A,MSGCLASS=0\n//*********************************************************************\n//*  KLEENUP BATCH EXECUTION JCL SAMPLE - WE USE IT AFTER LISTCATS    *\n//*  AND EXPORTS THAT ARE DONE FOR CATALOG RECOVERY PURPOSES.         *\n//*  SEE LAST STEP.                                                   *\n//*********************************************************************\n//LISTCAT1 EXEC PGM=IDCAMS,REGION=8192K\n//SYSUDUMP DD SYSOUT=*\n//SYSPRINT DD UNIT=SYSDA,DSN=SYSX.LISTCAT.USERCAT1(+1),DISP=(,CATLG),\n// DCB=(MODEL1,RECFM=VBA,LRECL=125,BLKSIZE=22129),\n// SPACE=(CYL,(40,5),RLSE)\n//SYSIN DD DSN=SYSX.PARMLIB(LSTUCAT1),DISP=SHR\n//*********************************************************************\n//* DIAG   AND                                                        *\n//* LISTCAT FOR                                                       *\n//*     CATALOG(SYS1.ICFCAT.USERCAT1)  ALL                            *\n//*********************************************************************\n//EXPORT  EXEC PGM=IDCAMS,REGION=8192K\n//CATOUT   DD DSN=SYSX.EXPORT.USERCAT1(+1),DISP=(,CATLG),UNIT=SYSDA,\n//  SPACE=(CYL,(50,10),RLSE),DCB=MODEL1\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD DSN=SYSX.PARMLIB(ICFEXPU1),DISP=SHR\n//*********************************************************************\n//* EXPORT SYS1.ICFCAT.USERCAT1 -                                     *\n//*    OUTFILE(CATOUT) TEMPORARY                                      *\n//*********************************************************************\n//MIGRATE EXEC PGM=IKJEFT01\n//SYSPROC DD DSN=SYSX.TSO.CLIST,DISP=SHR\n//SYSTSPRT DD SYSOUT=*\n//SYSUDUMP DD SYSOUT=*\n//SYSTSIN DD *\n KLEENUP SYSX.LISTCAT.USERCAT1 ML2 1\n KLEENUP SYSX.EXPORT.USERCAT1 ML2 1\n//* MIGRATES ALL BUT CURRENT\n//*     GENERATION TO ML2\n./ ADD NAME=MTTESA   0101-1993078-1993078-1201-00694-00674-00000-MURF\n***********************************************************************\n*   TITLE: ZTPR0205                                                   *\n*   AUTHOR: MURPHY                                                    *\n*   DATE-WRITTEN: 10/16/84                                            *\n*                 11/08/88  -  CORRECT JOB#/TIME, ADD HL - PMM        *\n*                 04/06/90  -  UPDATED FOR APF FROM PARMLIB - PMM     *\n*   REFERENCE: OS/VS2 MVS SYSTEM PROGRAMMING LIBRARY:SUPERVISOR       *\n*              GC28-1046-1                                            *\n*   REMARKS:                                                          *\n*                                                                     *\n*        USE CROSS MEMORY SERVICES TO PAGE THROUGH CONSOLE MESSAGES   *\n*   IN THE MASTER TRACE TABLE IN THE MASTER ADDRESS SPACE.            *\n*                                                                     *\n***********************************************************************\nZTPR0205 CSECT\n         BEGIN PROGRAM=ZTPR0205\n*        SAVES REGISTERS AND INSERTS PROGRAM, DATE, AND TIME\n         LR    R12,R15            LOAD ADDRESS OF ENTRY POINT\n         LR    R2,R1              SAVE CPPL\n         USING ZTPR0205,R12       R12 BASE REGISTER\n         GETMAIN RC,LV=WORKL,SP=1 GETMAIN  FOR SAVEAREA/WORK\n         LTR   R15,R15            CHECK RETURN CODE\n         BNZ   GETMERR\n         LR    R3,R1              ADDRESS OF WORK AREA/SAVEAREA\n         USING SAVDSECT,R3        ADDRESSABILITY\n         ST    R13,SAVEAREA+4     STORE CALLER SAVEAREA ADDRESS (HSA)\n         ST    R3,8(,R13)         ADD OF PROGRAM SAVE IN CALLER(LSA)\n         LR    R13,R3             ADDRESS OF SAVEAREA IN R13\n         DROP  R3\n         USING SAVDSECT,R13\n         USING CPPL,R2\n         L     R6,CPPLPSCB\n         DROP  R2\n         USING PSCB,R6\n         MVC   USERID,PSCBUSER\n         MVC   USERIDL,PSCBUSRL\n         MVC   USERATTR,PSCBATR1  SAVE OPER AUTH INFO\n         MVI   USERFLAG,X'00'\n         MVI   CMDFLAG,X'00'\n         DROP  R6\n         ST    R2,CPPLSAVE\n         MVC   SCRTPUTL,=AL4(DSCREENL+41*80) LENGTH FOR TPUT 43 LINE\n         MVC   SCRLENG,=AL4(41*80) LENGTH FOR MOVE LONG 43 LINE DEFAULT\n         MVC   SCREEN(108),DSCREEN SCREEN IMAGE\n         GTSIZE\n         LTR   R0,R0\n         BZ    FREERET2            NON-DISPLAY TERMINAL\n         CH    R1,=H'80'           80 WIDE?\n         BNE   SETM2               NO - SET IT TO THIS\n         CH    R0,=H'43'           MOD 4?\n         BE    VERIFY\n         CH    R0,=H'32'           MOD 3?\n         BNE   SETM2\nMODEL3   MVC   SCRLENG,=AL4(28*80) 30 LINE DISPLAY\n         MVC   SCRTPUTL,=AL4(28*80+DSCREENL)\n         MVC   DSCRO3,=X'E6F0'     (32,1)\n         MVC   DSCRO4,=X'E7F7'     (32,72)\n         B     VERIFY\nSETM2    STSIZE SIZE=80,LINE=24\n         MVC   SCRLENG,=AL4(22*80) LENGTH FOR MOVE LONG\n         MVC   SCRTPUTL,=AL4(22*80+DSCREENL) LENGTH OF TPUT\n         MVC   DSCRO3,=X'5CF0'     24,1\n         MVC   DSCRO4,=X'5DF7'     24,72\nVERIFY   EQU   *\n         STFSMODE ON,INITIAL=YES\n         LA    R7,TABLEND\n         LA    R6,4\n         LA    R1,TABLE\nTBLOOP   CLC   0(4,R1),USERID\n         BE    USEROK\n         BXLE  R1,R6,TBLOOP\n         TM    USERATTR,X'80'   OPER AUTHORITY?\n         BZ    NOAUTH\n*        MVI   CMDFLAG,X'FF'\n         B     VEROK1\nUSEROK   MVI   USERFLAG,X'FF'\n         B     VEROK1\nFREEAX   MVI   FREEFLAG,X'FF'\n         B     VEROK1\nVEROK1   STAX  DEFER=YES         WE DO NOT WANT AN INTERRUPT WHILE\n         TESTAUTH FCTN=1\n         LTR   R15,R15\n         BZ    GOTAUTH\nGOTAUTH  MODESET MF=(E,SUPRMOD)\n         CLI   FREEFLAG,X'FF'\n         BNE   AXIT\n         AXFRE AXLIST=AXLIST     FREE    AN AUTHORIZATION INDEX IN A.T.\n         B     SCRENDEF\nNOTAUTH  TPUT  MSGNO2,6\n         B     FREERET2\nAXIT     AXRES AXLIST=AXLIST     RESERVE AN AUTHORIZATION INDEX IN A.T.\n         LA    R1,1              MASTER IS ASID 1\n         AXEXT ASID=(1)          DETERMINE AUTH TABLE VALUE OF ASID 1\n         AXSET AX=(0)            SET TO ASID 1'S AUTHORIZATION INDEX\nSCRENDEF CLI   FREEFLAG,X'FF'\n         BE    FREERET\n         MVC   COMMAND,COMMANDL\n         MVI   HEX40S,X'40'         SPACE\n         MVC   HEX40S+1(79),HEX40S  PROPAGATE SPACES TO INITIALIZE\n         L     R2,SCRLENG           SCREEN LENGTH\n         S     R2,=F'0160'          MINUS 2 LINES\n         LA    R5,DETAIL            ADDRESS OF SCREEN\n         ST    R5,FRSTLINE\n         LA    R2,0(R5,R2)          ADDRESS IN GETMAIN AREA\n         ST    R2,LASTLINE          SAVE THE ADDRESS\n         LA    R1,16\n         L     R1,0(R1)\n         USING CVT,R1\n         L     R1,CVTMSER\n         DROP  R1\n         USING BASE,R1\n         L     R3,BAMTTBL        ADDRESS OF MASTER TRACE TABLE\n         SR    R4,R4\n         ICM   R4,B'0111',BAMTLEN LENGTH OF MTT W/O FIRST BYTE OF WORD\n         BZ    NOTACTIV\n         ST    R4,MTTSIZE\n         ST    R3,MTTADDR\n         DROP  R1\n         GETMAIN RC,LV=(4)       LENGTH WAS IN R4\n         LTR   R15,R15\n         BNZ   GETMERR\n         LR    R11,R1            ADDRESS OF OUR FUTURE COPY OF MTT\nAUTHRIZE L     R9,MTTSIZE\n         L     R3,MTTADDR\n         SRA   R9,8             DIVIDE BY 256\n         BNP   NOTACTIV\n         LA    R1,1\n         SSAR  R1                SECONDARY ADDRESS SPACE OF ASID 1!!!\n         SR    R5,R5\n         LA    R6,0(R4,R11)      END OF GETMAIN AREA\n         LA    R7,256\n         LR    R10,R11\nMOVELOOP MVCP  0(R7,R10),0(R3),R5 MOVES MAX OF 256 BYTES\n         LA    R10,256(,R10)\n         LA    R3,256(,R3)\n         BCT   R9,MOVELOOP\n         B     ALLMOVED\nFREERET  L     R4,MTTSIZE\n         FREEMAIN RC,LV=(4),A=(11) FREE SECOND GETMAIN AREA\n         LTR   R15,R15            CHECK RETURN CODE\n         BNZ   FREEMERR\n*        SR    R1,R1                   ****************************\n*        L     R1,16                   *  A                       *\n*        USING CVT,R1                  *   D                      *\n*        L     R1,CVTTCBP              *    D      J              *\n*        DROP  R1                      *     R      S             *\n*        L     R1,4(R1)                *      E      C            *\n*        USING TCB,R1                  *       S      B           *\n*        L     R1,TCBJSCB              *        S                 *\n*        DROP  R1                      ****************************\n*        USING IEZJSCB,R1\n*        NI    JSCBOPTS,X'FF'-JSCBAUTH\n*        DROP  R1\n*        STAX  DEFER=NO                NOW THEY CAN INTERRUPT\nFREERET2 LR    R3,R13\n         L     R13,4(,R13)        ADDRESS OF CALLING PROGRAM SAVEAREA\n         FREEMAIN RC,LV=WORKL,A=(3),SP=1\n         LTR   R15,R15            CHECK RETURN CODE\n         BNZ   FREEERR2\n*        MODESET MF=(E,PROBMOD)        PROBLEM STATE\nRETURN   RETURN (14,12),,RC=(15)\nGETMERR  WTO   ' ZTPR0205 - GETMAIN ERROR, PLEASE NOTIFY TECH SUPPORT',X\n               ROUTCDE=2\n         L     R13,4(,R13)        RELOAD R13\n         B     RETURN\nBADLOAD  TPUT  BADLDMSG,25\nNOAUTH   TPUT  MSGNO1,13\n         B     FREERET2\nFREEMERR TPUT  MSG2,33\n         B     FREERET2\nFREEERR2 TPUT  MSG1,33\n         B     RETURN\nALLMOVED EPAR  R1             EXTRACT PRIMARY ASID INTO R1\n         SSAR  R1             SET SECONDARY TO OUR ASID\nADJUST   CLC   MTT,0(R11)     MTT HEADER\n         BNE   NOTACTIV\n         L     R9,4(,R11)     THIS IS THE CURRENT ENTRY IN MASTER\n         L     R8,MTTADDR     ADDRESS OF MTT IN MASTER ADDRESS SPACE\n         SR    R9,R8          DISPLACEMENT INTO OUR AREA OF FIRST ENT\n         LA    R9,0(R9,R11)   CURRENT ENTRY\n         ST    R9,MTTCLINE    MTT CURRENT LINE IN OUR AREA\n         L     R9,32(,R11)    FIRST ENTRY IN MTT\n         SR    R9,R8          DISPLACEMENT TO FIRST ENTRY\n         LA    R9,0(R9,R11)   ADDRESS IN OUR ADDRESS SPACE\n         ST    R9,MTTFLINE    SAVE IN MTT FIRST LINE\n         L     R9,12(,R11)    LAST BYTE\n         SR    R9,R8          GET DISPLACEMENT\n         LA    R9,0(R9,R11)   ADDRESS IN OUR AREAOF LAST BYTE\n         ST    R9,MTTLLINE    MTT LAST LINE -ACTUALLY ITS THE LAST BYTE\n         MVC   CURRLINE,MTTCLINE CURRENT LINE\nDISPLAY  L     R5,LASTLINE    ADDRESS OF WHERE TO MOVE CURRENT ENTRY\n         L     R6,CURRLINE    CURRENT LINE\n         MVI   UPFLAG,X'00'\n         MVI   WRAPFLAG,X'00'\n         MVI   FOUNDFLG,X'00'\n         MVC   BOTTOM,CURRLINE\nDISPLOOP SR    R7,R7\n         ICM   R7,B'0011',8(R6)  LOAD LENGTH\n         BNP   FINDNEXT\n         LA    R8,10(R7,R6)\n         CLI   SEARCHON,X'FF'\n         BE    DISPCHEK\n         CLI   UPFLAG,X'FF'\n         BNE   DISPSUB\nDISPCHEK CLC   CURRLINE,MTTCLINE\n         BNL   CHEKLINE\n         C     R8,MTTCLINE\n         BNL   ENDOFLST\nCHEKLINE C     R6,MTTCLINE\n         BNL   CHEKWRAP\n         C     R8,MTTCLINE\n         BNL   ENDOFLST\n         B     DISPSUB\nCHEKWRAP CLI   WRAPFLAG,X'FF'\n         BE    WRITEIT\nDISPSUB  CLI   SEARCHON,X'FF'\n         BE    SEARCHLN\n         S     R7,=F'51'      MINUS CONTROL STUFF\n         BNP   FINDNEXT\nDISPL    C     R7,SEVENTY9    > 80\n         BNH   MOVEDATA       NO - MOVE TO DISPLAY AREA\n         S     R7,EIGHTY\n         LA    R1,112(R6,R7)  LAST BYTE ADDRESS\n         S     R1,MTTLLINE    ADD OF 0C4 BYTE\n         BC    12,EX01\n         SR    R7,R1\n         BCTR  R7,0\n         BC    2,EX01\n         B     FINDNEXT\nEX01     EX    R7,DISPMOV2\n         S     R5,EIGHTY\n         C     R5,FRSTLINE\n         BNH   WRITEIT\n         LA    R7,62          MAX LENGTH IS 80\nMOVEDATA LA    R1,63(R6,R7)   LAST BYTE ADDRESS\n         S     R1,MTTLLINE    ADD OF 0C4 BYTE\n         BC    12,EX02\n         SR    R7,R1\n         BCTR  R7,0\n         BC    2,EX02\n         B     FINDNEXT\nEX02     EX    R7,DISPMOVE    MOVE IT TO TERMINAL AREA\n         MVC   10(9,R5),46(R6) SKIP CONTROL STUFF\n         CLC   =CL2'40',34(R6)\n         BE    SKIPTIM\n         MVC   00(8,R5),35(R6) SKIP CONTROL STUFF\n*        BAL   R2,SEARCHLN\nSKIPTIM  S     R5,EIGHTY\n         C     R5,FRSTLINE\n         BNH   WRITEIT\n*        CLI   UPFLAG,X'FF'\n*        BE    UP\nFINDNEXT ST    R6,CURRLINE\n         BAL   R2,PREVLINE    GET NEXT     LINE\n         B     DISPLOOP\nDOWN     CLC   BOTTOM,MTTCLINE IS THIS NEWEST PAGE?\n         BE    AUTHRIZE\n         MVI   FOUNDFLG,X'00'\n         BAL   R2,CLEARSCR    GET NEXT     LINE\n         LA    R5,DETAIL      ADDRESS OF WHERE TO MOVE CURRENT ENTRY\n         L     R6,BOTTOM      BECOMES TOP ON PAGE DOWN\n         ST    R6,CURRLINE    CURRENT LINE\n         ST    R6,TOP         CURRENT LINE\n         MVI   DOWNFLAG,X'FF'\n*GIVEN A STARTING POINT, WE WILL BE PAGING UP HERE *\nDOWNLOOP SR    R7,R7\n         ICM   R7,B'0011',8(R6)  LOAD LENGTH\n         BNP   FINDNXTD\n         LA    R8,10(R7,R6)   NEXT LINE\n         C     R8,MTTCLINE\n         BNH   DOWNSUB\n         C     R6,MTTCLINE\n         BNL   DOWNSUB\n         MVC   0(80,R5),CENDOFIT\n         B     WRITEITD\nDOWNSUB  S     R7,=F'51'      MINUS SIX\n         BNP   FINDNXTD\n         C     R7,SEVENTY9    > 80\n         BNH   MOVEDOWN       NO - MOVE TO DISPLAY AREA\n         S     R7,EIGHTY\n         LA    R1,112(R6,R7)  LAST BYTE ADDRESS\n         S     R1,MTTLLINE    ADD OF 0C4 BYTE\n         BC    12,EX03\n         SR    R7,R1\n         BCTR  R7,0\n         BC    2,EX03\n         B     FINDNXTD\nEX03     EX    R7,DISPMOV2\n         LA    R7,62          MAX LENGTH IS 80\n         A     R5,EIGHTY\n         C     R5,LASTLINE\n         BNL   WRITEITD\nMOVEDOWN LA    R1,63(R6,R7)   LAST BYTE ADDRESS\n         S     R1,MTTLLINE    ADD OF 0C4 BYTE\n         BC    12,EX04\n         SR    R7,R1\n         BCTR  R7,0\n         BC    2,EX04\n         B     FINDNXTD\nEX04     EX    R7,DISPMOVE    MOVE IT TO TERMINAL AREA\n         MVC   09(9,R5),44(R6) SKIP CONTROL STUFF\n         CLC   =CL2'40',33(R6)\n         BE    SKIPTIM2\n         MVC   00(8,R5),32(R6) SKIP CONTROL STUFF\n*        BAL   R2,SEARCHLN\nSKIPTIM2 A     R5,EIGHTY\n         C     R5,LASTLINE\n         BNL   WRITEITD\nFINDNXTD ST    R6,CURRLINE\n         BAL   R2,UPLINE      GET NEXT     LINE\n         B     DOWNLOOP\nUP       BAL   R2,UPLINE      PREVIOUS LINE\n         B     DISPLOOP\nSEARCHLN L     R10,ARGLENG\n         LA    R15,15(,R6)    START OF LINE\n         LR    R3,R7\n         SR    R3,R10\n         BNP   FINDNEXT\nCOMPLOOP EX    R10,COMPARE    COMPARE THIS TO ARGUMENT\n         BE    FOUNDIT\n         LA    R15,1(,R15)    NEXT BYTE\n         LA    R1,0(R15,R10)\n         C     R1,MTTLLINE\n         BNL   FINDNEXT\n         BCT   R3,COMPLOOP\n         B     FINDNEXT\nFOUNDIT  MVI   SEARCHON,X'00' RESET\n         MVI   FOUNDFLG,X'FF'\n         S     R7,=F'51'\n         ST    R6,SEARCHTP\n         ST    R6,CURRLINE\n         ST    R6,BOTTOM\n         B     DISPL\nUPLINE   LA    R8,1           INCREMENT 0F 1\n         L     R6,CURRLINE\n         CLC   R6,MTTFLINE    ARE WE AT TOP\n         BH    UPCONTIN       NO - SKIP\n         L     R6,MTTLLINE\n         S     R6,=F'05'\nUPCONTIN LNR   R8,R8          DECREMENT OF -1\n         L     R9,MTTFLINE    ADDRESS OF LOWEST ADDRESS IN MTT\n         MVI   STARTFLG,X'00' FLAG TO INDICATE FIRST TIME THRU\n*        L     R6,CURRLINE    ADDRESS OF CURRENT LINE\n         BCTR  R6,0           SUBTRACT  1\nUPLOOP   CLC   CBEGINLN,0(R6) BEGINNING OF LINE CHARACTER?\n         BE    PREVFND        YES, BRANCH\n         BCTR  R6,0           MINUS 1\n         CR    R6,R9\n         BNL   UPLOOP\n*   MEANS WE ARE AT THE LOWEST ADDRESS IN TABLE, NOW START AT THE    *\n*   VERY BOTTOM AND WORK BACKWARDS -                                 *\n         CLI   STARTFLG,X'00' WE BEEN THRU HERE BEFORE?\n         BNE   WRITEITD       YES - BRANCH\n         MVI   STARTFLG,X'FF' FLAG IT\n         L     R6,MTTLLINE    ADDRESS OF LAST LINE\n         S     R6,=F'05'      MINUS SIX\n         L     R9,MTTCLINE\n         B     UPLOOP         NOW FIND PREVIOUS\nPREVLINE LA    R8,1           INCREMENT 0F 1\n         L     R6,CURRLINE    ADDRESS OF CURRENT LINE\n         LA    R6,1(,R6)      INCREMENT\n         C     R6,MTTLLINE    LAST LINE?\n         BL    PREVCONT       NO, BRANCH\n         L     R6,MTTFLINE    START AT FIRST\n         MVI   WRAPFLAG,X'FF' SET TO DISPLAY IT HAS WRAPPED\nPREVCONT L     R9,MTTLLINE    ADDRESS OF LOWEST ADDRESS IN MTT\n         S     R9,=F'06'      CBEGINLN LENGTH\n         BNP   NOTACTIV       NOT POSITIVE, NOT A VALID ENTRY FOR US\n         MVI   STARTFLG,X'00' FLAG TO INDICATE FIRST TIME THRU\nPREVLOOP CLC   CBEGINLN,0(R6) BEGINNING OF LINE CHARACTER?\n         BE    PREVFND        YES, BRANCH\n         BXLE  R6,R8,PREVLOOP LOOP\n*   MEANS WE ARE AT THE LOWEST ADDRESS IN TABLE, NOW START AT THE    *\n*   VERY BOTTOM AND WORK BACKWARDS -                                 *\n         CLI   STARTFLG,X'00' WE BEEN THRU HERE BEFORE?\n         BNE   WRITEIT        YES - BRANCH\n         MVI   STARTFLG,X'FF' FLAG IT\n         L     R6,MTTFLINE    ADDRESS OF FRST LINE\n         B     PREVLOOP       NOW FIND PREVIOUS\nPREVFND  BR    R2             RETURN\nWRITEITD BAL   R2,TPUT        WRITE SCREEN\n         ST    R6,BOTTOM      SAVE WHERE WE WERE\n         B     TGET           GET NEXT INPUT FROM TERMINAL\nWRITEIT  EQU   *\n         BAL   R2,TPUT        WRITE SCREEN\n         ST    R6,TOP         SAVE ADDRESS OF WHERE WE WERE\nTGET     MVC   WORKLINE,HEX40S\n         MVI   SEARCHON,X'00' RESET SEARCH FLAG\n         BAL   R2,CLEARSCR\n         L     R5,LASTLINE    ADDRESS OF WHERE TO MOVE CURRENT ENTRY\n         L     R6,CURRLINE    CURRENT LINE\n         MVI   UPFLAG,X'00'   RESET UP FLAG\n         TGET  WORKLINE,70,ASIS\n         CLI   WORKLINE,X'7D' PFK USED?\n         BE    CHECKOUT       NO, CHECK COMMAND, IF ANY\n         NI    WORKLINE,X'0F'\n         CLI   WORKLINE,X'01' PF-1?\n         BE    HELPOUT        YES, DISPLAY HELP INFO\n         CLI   WORKLINE,X'03' PF-3?\n         BE    FREEAX         YES, END\n         CLI   WORKLINE,X'05' SEARCH REPEAT\n         BE    SEARCHRP\n*        CLI   WORKLINE,X'06' SEARCH REPEAT\n*        BE    ABEND\n         CLI   WORKLINE,X'07' UP?\n         BE    UPSET\n         CLI   WORKLINE,X'08'\n         BE    DOWN\n         CLI   WORKLINE,X'09'\n         BE    SETTOP\n         CLI   WORKLINE,X'0A'\n         BE    SETBOT\n         CLI   WORKLINE,C'>'  MESSAGE INPUT\n         BE    TGET\n         B     AUTHRIZE\nNOCMDS   BAL   R2,CLEARSCR    GO CLEAR OUR SCREEN\n         MVC   DETAIL+880(23),=C'COMMANDS NOT AUTHORIZED'\n         BAL   R2,TPUT\n         B     TGET\nCHECKOUT OC    WORKLINE+6(74),HEX40S\n         CLC   WORKLINE+6(4),HEX40S\n         BE    AUTHRIZE\n         MVC   CMDLINE,WORKLINE+6\n         CLC   =C'T  ',CMDLINE  TOP\n         BE    SETTOP\n         CLC   CMDLINE(3),=C'TOP'\n         BE    SETTOP\n         CLC   =C'B  ',CMDLINE  TOP\n         BE    SETBOT\n         CLC   XFINDQ,CMDLINE  F '\n         BE    FIND\n         CLC   CFIND,CMDLINE  FIND\n         BE    FIND\n         CLC   CMDLINE(3),=C'BOT'\n         BE    SETBOT\n         CLC   CMDLINE(3),=C'END'\n         BE    FREEAX\n         CLC   =C'Z ',CMDLINE  TOP\n         BE    FREEAX\n         CLC   =C'X ',CMDLINE  TOP\n         BE    FREEAX\n         CLI   CMDFLAG,X'FF'\n         BE    NOCMDS\n         CLI   USERFLAG,X'FF'\n         BNE   NOWTO\n         MVC   WTOCMD(100),WTOLIST\n         MVC   WTOCMD+8(72),CMDLINE\n         MVC   WTOCMD+78(4),USERID\n         LA    R7,WTOCMD\n         WTL   MF=(E,(R7))\nNOWTO    SLR   R0,0                    CLEAR REG 0\nISSUE    LA    R1,COMMAND              GET ADDRESS OF SVC 34 COMMAND\n         SVC   34                      ISSUE COMMAND\n         STIMER WAIT,BINTVL=ONE        WAIT ONE SO THAT IT SHOWS\n         MVC   CMDLINE,HEX40S\n         B     AUTHRIZE\n*    FIND OPERATION REQUESTED                                         *\nFIND     EQU   *\n         OC    WORKLINE+6(74),HEX40S      UPPER CASE\n         MVC   WORKLINE(74),WORKLINE+6    MOVE OVER\n         MVC   ARGUMENT(74),HEX40S        CLEAR OUT\n         LA    R8,1\n         LA    R6,WORKLINE\n         LA    R9,74(,R6)\n         LA    R7,ARGUMENT\nFINDQUOT CLI   0(R6),X'7D'\n         BE    FOUNQUOT\n         LA    R6,1(,R6)\n         CR    R6,R9\n         BL    FINDQUOT\n         B     REENTER\nFOUNQUOT LA    R6,1(,R6)\nARGLOOP  CLI   0(R6),X'7D'\n         BE    ARGDONE\n         MVC   0(1,R7),0(R6)\n         LA    R7,1(,R7)\n         BXLE  R6,R8,ARGLOOP\n*  IF IT GETS HERE - ARGUMENT WAS INVALID                             *\nREENTER  BAL   R2,CLEARSCR\n         MVC   DETAIL+418(43),CHELPLN7\n         BAL   R2,TPUT\n         B     TGET\n*EARCH   B     FREERET\nENDOFLST MVC   0(80,R5),CENDOFIT\n         CLI   SEARCHON,X'FF'\n         BNE   WRITEIT\n         MVC   24(09,R5),=C'NOT FOUND'\n         MVI   FOUNDFLG,X'00'\n         B     WRITEIT\nSEARCHRP CLI   SRCHFLAG,X'FF'\n         BNE   REENTER\n         CLI   FOUNDFLG,X'FF'\n         BNE   LOADCURR\n         MVC   CURRLINE,SEARCHTP WHERE TO PICK UP\nLOADCURR L     R6,CURRLINE\n         MVI   FOUNDFLG,X'00'\n         BAL   R2,PREVLINE\n         ST    R6,CURRLINE\n         MVI   SEARCHON,X'FF'\n         B     UPSET\nARGDONE  LA    R8,ARGUMENT\n         BCTR  R7,0\n         SR    R7,R8\n         BNP   REENTER\n         ST    R7,ARGLENG\n         MVI   FOUNDFLG,X'00' NOT FOUND YET\n         MVI   SRCHFLAG,X'FF' SEARCH ARGUMENT IS PRESENT\n         MVI   SEARCHON,X'FF' PLEASE SEARCH\n         L     R6,BOTTOM\n         B     SETBOT2\nSETBOT   L     R6,MTTCLINE\nSETBOT2  ST    R6,CURRLINE\n         L     R5,LASTLINE\n         B     DISPLOOP\nSETTOP   L     R6,MTTCLINE\n         ST    R6,CURRLINE\n         BAL   R2,UPLINE\n         ST    R6,CURRLINE\n         BAL   R2,UPLINE\n         ST    R6,BOTTOM\n         B     DOWN\nUPSET    MVI   UPFLAG,X'FF'\n         CLI   DOWNFLAG,X'FF'\n         BNE   UPSET2\n         MVC   CURRLINE,TOP\n         MVI   DOWNFLAG,X'00'\nUPSET2   L     R5,LASTLINE    ADDRESS OF WHERE TO MOVE CURRENT ENTRY\n         L     R6,CURRLINE    WHERE WE LEFT OFF\n         ST    R6,BOTTOM\n         MVI   FOUNDFLG,X'00'\n         B     DISPLOOP\nCOMPARE  CLC   0(0,R15),ARGUMENT  LOOK FOR SEARCH ARGUMENT\nDISPMOVE MVC   18(0,R5),63(R6) SKIP CONTROL STUFF\nDISPMOV2 MVC   0(0,R5),112(R6) SKIP CONTROL STUFF\nTPUT     LA    R1,SCREEN\n         L     R0,SCRTPUTL\n         TPUT  (1),(0),FULLSCR\n         BR    R2\nHELPOUT  BAL   R2,CLEARSCR    GO CLEAR OUR SCREEN\n*        MVC   DETAIL+80(80),CHELPLN1\n*        MVC   DETAIL+160(80),CHELPLN2\n         MVC   DETAIL+400(80),CHELPLN3\n         MVC   DETAIL+480(70),CHELPLN4\n         MVC   DETAIL+640(39),CHELPLN5\n         MVC   DETAIL+720(43),CHELPLN6\n         MVC   DETAIL+880(43),CHELPLN7\n         BAL   R2,TPUT\n         B     TGET\nNOTACTIV BAL   R2,CLEARSCR    GO CLEAR OUR SCREEN\n         MVC   DETAIL(16),=C'TRACE NOT ACTIVE'\n         BAL   R2,TPUT\n         STIMER WAIT,BINTVL=ONE\n         L     R2,CPPLSAVE\n         LINK  EP=ZTPR0200\n         B     FREEAX\n**   CLEAR THE SCREEN AREA AND RETURN TO ADDRESS IN REG 2            **\nCLEARSCR LA    R6,DETAIL\n         L     R7,SCRLENG\n         SR    R9,R9\n         ICM   R9,B'1001',HEX40S\n         LA    R8,HEX40S\n         MVCL  R6,R8\n         BR    R2\nTABLE    DC    CL4'MURF'          USERIDS VALID TO USE IT\n         DC    CL4'XXXX'\nTABLEND  DC    CL4'XXXX'          ROBERT CHAMBERLAIN\nDSCREEN  DS    0C             DISPLAY SCREEN\n         DC    X'03'          CONTROL\n         DC    X'00'          ERASE/WRITE ALTERNATE (132 COL)\n         DC    X'00115D7F1140403C404000' CLEAR SCREEN\n         DC    CL80'                  MASTER  TRACE  TABLE  DISPLAY    *\n                             PF-1 FOR HELP '\n         DC    X'11'          SET BUFFER ADDRESS\n         DC    X'F460'        (43,1)\n*        DC    C'_'\n         DC    X'1DC8'        MARK NEXT FIELD AS INPUT FIELD\n         DC    X'13'          SET CURSOR ADDRESS\n         DC    X'11'          SET BUFFER ADDRESS\n         DC    X'F5E7'        (43,72)\n         DC    X'1DF0'        TERMINATE INPUT FIELD\n         DC    C' '           INDICATES MORE TO BE DISPLAYED\n         DC    X'11'          SET BUFFER ADDRESS\n         DC    X'C150'        (2,1)\n*DLINE1  DC    40CL80' '      MESSAGE TEXT AREA (FOR 40X80 MAX)\nDSCREENL EQU   *-DSCREEN      LENGTH OF THIS PART\nFOUR     DC    F'4'\nBADLDMSG DC    CL25'ERROR LOADING IKJEFFUT  '\n         DS    0F\nAUTH     DC    CL4'AUTH'\nMTT      DC    CL3'MTT'       MASTER TRACE TABLE HEADER\nHEXFS    DC    XL4'FFFFFFFF'\nHEXZIP   DC    XL4'00000000'\nCMAINT   DC    XL5'1401091523'\nCOMMANDL DC    Y(76),Y(00)\nONE      DC    A(100)             1 SECOND\nCBEGINLN DC    XL4'00000001'\nEIGHTY   DC    F'080'             CONSTANT 80\nSEVENTY9 DC    F'079'             CONSTANT 79\nANDCHARS DC    XL8'3F3F3F3F3F3F3F3F'\nMSGNO1   DC    CL13'SYSTEM ACTIVE'\nMSGNO2   DC    CL6'NO APF'\nMSG1     DC    CL33'***FREEMAIN ERROR ON SAVEAREA ***'\nMSG2     DC    CL33'***FREEMAIN ERROR ON MTT AREA ***'\nXFINDQ   DC    XL3'C6407D'        HEX FOR F '\nCFIND    DC    CL4'FIND'          CHARACTER FIND\nCEND     DC    CL3'END'           CHARACTER END\nCZ       DC    CL1'Z'             CHARACTER Z\nPATTERN  DC    XL4'40202120'\nAXLIST   DC    H'1'\n         DC    H'0'\nWTOLIST  WTL   '                                                       X\n                                       ZTPR0200',MF=L\nSUPRMOD  MODESET MF=L,MODE=SUP,KEY=ZERO\nPROBMOD  MODESET MF=L,MODE=PROB,KEY=NZERO\n         LTORG\nCENDOFIT DC    CL80'* * * * * * * * * * * * E N D * * O F * * D A T A **\n               * * * * * * * * * * * * * * '\n*HELPLN1 DC    CL80'  THIS PROGRAM USES CROSS MEMORY SERVICES TO READ T*\n               HE MASTER TRACE TABLE IN    '\n*HELPLN2 DC    CL80'  THE MASTER ADDRESS SPACE. THE MASTER TRACE MUST B*\n               E ACTIVE TO PAGE UP/DOWN.   '\nCHELPLN3 DC    CL80'  PF-1  HELP            PF-3  END                PF*\n               -5  REPEAT FIND   PF-7  UP  '\nCHELPLN4 DC    CL70'  PF-8  PAGE DOWN       PF-9  TOP (OLDEST)       PF*\n               -10 BOTTOM (NEWEST)'\nCHELPLN5 DC    CL39'  T OR TOP MAY BE USED INSTEAD OF PF-9 '\nCHELPLN6 DC    CL43'  B OR BOTTOM MAY BE USED INSTEAD OF PF-10 '\nCHELPLN7 DC    CL43'  F OR FIND WITH ARGUMENT IN SINGLE QUOTES '\nSAVDSECT DSECT\nSAVEAREA DS    18F\nDOUBLWD  DS    D\nPARMWKAD DS    F\nCPPLSAVE DS    F\n         DS    0D\nWORKLINE DS    CL80\nHEX40S   DS    CL80\nWTOCMD   DS    CL100\nPARMWORK DS    CL44\nUSERID   DS    CL7\nUSERIDL  DS    XL1\nUSERATTR DS    XL1\nSTARTFLG DS    XL1\nSRCHFLAG DS    XL1\nUSERFLAG DS    XL1\nFREEFLAG DS    XL1\nCMDFLAG  DS    XL1\nFOUNDFLG DS    XL1\nSEARCHON DS    XL1\nUPFLAG   DS    XL1\nWRAPFLAG DS    XL1\nDOWNFLAG DS    XL1\nMTTSIZE  DS    F              SIZE OF MTT\nMTTADDR  DS    F              MTT ADDRESS IN MASTER ASID\nBOTTOM   DS    F              BOTTOM    OF SCREEN\nTOP      DS    F              TOP OF SCREEN\nSEARCHTP DS    F              CURRENT LINE FOR REPEAT SEARCH\nCURRLINE DS    F              CURRENT LINE FOR US\nFRSTLINE DS    F              FIRST LINE ON OUR DISPLAY\nLASTLINE DS    F              LAST  LINE ON OUR DISPLAY\nMTTFLINE DS    F              FIRST LINE IN OUR AREA\nMTTLLINE DS    F              LAST  LINE IN OUR AREA\nMTTCLINE DS    F              CURRENT LINE IN OUR AREA\nSCRLENG  DS    F\nSCRTPUTL DS    F\nARGLENG  DS    F\nARGUMENT DS    CL74\nCOMMAND  DS    F\nCMDLINE  DS    CL72\nSCREEN   DS    0CL108\n         DS    XL1            CONTROL\nDSCRO1   DS    XL1            ERASE/WRITE ALTERNATE (132 COL)\n         DS    XL11\n         DS    CL80\n         DS    XL1            SET BUFFER ADDRESS\nDSCRO3   DS    XL2            (43,1)\n*        DS    XL1\n         DS    XL2            MARK NEXT FIELD AS INPUT FIELD\n         DS    XL1            SET CURSOR ADDRESS\n         DS    XL1            SET BUFFER ADDRESS\nDSCRO4   DS    XL2\n         DS    XL2            TERMINATE INPUT FIELD\n         DS    XL2            SET BUFFER ADDRESS\nDSCRO5   DS    XL2\nDETAIL   DS    43CL80\nWORKL    EQU   *-SAVEAREA\n         CVT   DSECT=YES\n         IEZJSCB\n         IKJTCB DSECT=YES\n         IEEBASEA\n         IEECHAIN\n         IKJPSCB\n         IKJCPPL\n         IKJUPT\n         END\n./ ADD NAME=MTTESAJ  0102-1993078-1993078-1201-00024-00024-00000-MURF\n//MURF2    JOB (6496,B014),MURF,CLASS=T,MSGCLASS=3,NOTIFY=MURF\n//COM     EXEC PGM=IEV90,REGION=512K,\n//    PARM='LOAD,XREF(SHORT),LINECNT=55,NODECK'\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB,DCB=BLKSIZE=23440\n//         DD  DISP=SHR,DSN=SYS1.MODGEN\n//         DD  DSN=MURF.FILE025.PDS,DISP=SHR\n//SYSLIN   DD  UNIT=VIO,DSN=&LOADSET,DISP=(MOD,PASS),\n//             SPACE=(CYL,(2,2)),DCB=BLKSIZE=1680\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(10,2))\n//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(12,2))\n//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(20,2))\n//SYSPUNCH DD  DUMMY =*,DCB=FUNC=I\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSIN    DD  DSN=MURF.FILE025.PDS(MTTESA),DISP=SHR\n//LKED         EXEC PGM=IEWL,REGION=1024K,COND=(4,LT),\n//             PARM='XREF,LET,LIST,RENT,AC=1'\n//SYSPRINT     DD   SYSOUT=*\n//SYSUT1       DD   DSN=&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD      DD   DISP=SHR,DSN=SYST.LOADLIB(MTT)\n//SYSLIN       DD   UNIT=SYSDA,DSN=&LOADSET,DISP=(OLD,DELETE)\n//             DD   DDNAME=SYSIN\n//SYSIN        DD   *\n NAME MTT(R)\n./ ADD NAME=SASSRCHD\n//TDBC   JOB   (6496,B015),'TECH - TDB ',CLASS=O,MSGCLASS=T,\n// MSGLEVEL=(2,0),NOTIFY=TDB\n//*********************************************************************\n//*                                                                   *\n//*  THIS SAS CODE WRITTEN BY TOM BURNS AT TEXAS UTILITIES SERVICES   *\n//*  TO REPORT ON WHO WAS ACCESSING DELETING NONVSAM DATASETS. IT     *\n//*  NEEDS TYPE 14, 15, 17 AND 18 RECORDS TO PROVIDE ALL THE INFO,    *\n//*                                                                   *\n//*  INSTRUCTIONS:                                                    *\n//*                                                                   *\n//*  1.  CHANGE THE DSNAMES DD INPUT TO THE DATA AND INDEX NAMES IN   *\n//*      QUESTION.  THE CLUSTER NAME DOES NOT SHOW UP IN THESE RECORDS*\n//*                                                                   *\n//*  2.  CHANGE THE SMF INPUT DSN IN THE SMFTAPE DD TO THE SMF INPUT  *\n//*      DATASET FOR YOUR INSTALLATION.                               *\n//*                                                                   *\n//* OPTIONALLY, YOU CAN CHANGE THE DATE/TIME RANGE IN THE OPTIONS.    *\n//* WE NORMALLY JUST LEAVE IT THE WAY IT IS.                          *\n//*                                                                   *\n//*********************************************************************\n//DSLIST   EXEC SAS,REGION=1024K,\n// COPIES=1,SORT=99,OPTIONS='NOSTIMER,S=72'\n//WORK      DD  UNIT=SYSDA,SPACE=(CYL,(250,200))\n//FT11F001  DD  SYSOUT=*\n//SMFTAPE DD DSN=TUSS.SM.PNDSYSA.SMFRECS.DAILY.G1497V00,DISP=OLD\n//        DD DSN=TUSS.SM.PNDSYSB.SMFRECS.DAILY.G1473V00,DISP=OLD\n//DSNAMES   DD  *\nTUE0CDE.PRODPCL6.C1979.G0001V00\n//SYSIN     DD  *\nCOMMENT\n        THIS JOB SUMMARIZES USES OF DATASETS BY JOBS\nWRITTEN BY TOM BURNS AT TEXAS UTILITIES  ;\nOPTIONS SYSPARM='STARTDATE=01/03/00,STARTTIME=00:00:00,\nENDDATE=12/31/99,ENDTIME=23:59:59';\nDATA DSNAMES;\n   INFILE DSNAMES;\n   LABEL  DSN = DSNAME;\n   FORMAT DSN     $44.;\n   INPUT DSN : $44.;\n   OUTPUT DSNAMES;\n   RETURN;\nDATA TEMPACT\n          (KEEP = XX ACTDSN JNAM RECDATE RECTIME RDRDATE TYPE USERID\n                     DSORG RECFM LRECL BLKSIZE)\n TEMPREN  (KEEP = ACTDSN JNAM RECDATE RECTIME RDRDATE USERID NDSN)\n TEMPSCR  (KEEP = ACTDSN JNAM RECDATE RECTIME RDRDATE USERID VOL_ID);\n   LABEL  JNAM    = JOBNAME\n          TYPE    = TYPE\n          RECDATE = DATE\n          RECTIME = TIME\n          RDRDATE = READER DATE\n          USERID  = USERID\n          NDSN    = NEW DSNAME\n          DSORG   = DSORG\n          RECFM   = RECFM\n          LRECL   = LRECL\n          BLKSIZE = BLKSIZE;\n   FORMAT ACTDSN             $44.\n          XX                  $6.\n          JNAM                $8.\n          TYPE                $2.\n          RECDATE        MMDDYY8.\n          RECTIME          TIME8.\n          RDRDATE     DATETIME16.\n          USERID              $8.\n          VOL_ID              $6.\n          NDSN               $44.\n          DSORG               $3.\n          RECFM               $4.\n          LRECL                5.\n          BLKSIZE              5.;\n   INFILE SMFTAPE MISSOVER JFCB=JFCBMANX CLOSE=FREE;\n   IF _N_=1 THEN DO;\n      IF SUBSTR(JFCBMANX,100,1)='....1...'B\n         THEN SMFCOL1=5;\n      ELSE SMFCOL1=1;\n      FOUND=1; NPARM=1;\n      STRTDATE=0; STRTTIME=0; ENDDATE=0; ENDTIME=0;\n      DO WHILE(FOUND);\n         FOUND=0;\n         IF 'STARTDATE'=SCAN(SYSPARM(),NPARM,' ,=') THEN DO;\n            WORD=SCAN(SYSPARM(),NPARM+1,' ,=');\n            IF WORD='TODAY' THEN STRTDATE=TODAY();\n            ELSE STRTDATE=INPUT(WORD,MMDDYY8.);\n            FOUND=1;\n            END;\n         IF 'STARTTIME'=SCAN(SYSPARM(),NPARM,' ,=') THEN DO;\n            WORD=SCAN(SYSPARM(),NPARM+1,' ,=');\n            IF WORD='NOW' THEN STRTTIME=HMS(HOUR(DATETIME()),0,0);\n            ELSE STRTTIME=INPUT(WORD,TIME8.);\n            FOUND=1;\n            END;\n         IF 'ENDDATE'=SCAN(SYSPARM(),NPARM,' ,=') THEN DO;\n            WORD=SCAN(SYSPARM(),NPARM+1,' ,=');\n            IF WORD='TODAY' THEN ENDDATE=TODAY();\n            ELSE ENDDATE=INPUT(WORD,MMDDYY8.);\n            FOUND=1;\n            END;\n         IF 'ENDTIME'=SCAN(SYSPARM(),NPARM,' ,=') THEN DO;\n            WORD=SCAN(SYSPARM(),NPARM+1,' ,=');\n            IF WORD='NOW' THEN ENDTIME=HMS(1+HOUR(DATETIME()),0,0);\n            ELSE ENDTIME=INPUT(WORD,TIME8.);\n            FOUND=1;\n            END;\n         IF FOUND THEN NPARM=NPARM+2;\n         END;\n      IF ENDDATE=0 THEN ENDDATE=MDY(12,31,99);\n      IF ENDTIME=0 THEN ENDTIME=HMS(23,59,59);\n      RETAIN SMFCOL1 STRTDATE STRTTIME ENDDATE ENDTIME VOL_ID;\n      DROP SMFCOL1 STRTDATE STRTTIME ENDDATE ENDTIME FOUND NPARM;\n      END;\n   INPUT @SMFCOL1    SMFEOF   :      $12.\n         @SMFCOL1+ 1 ID             PIB1.@;\n   IF SMFEOF='SMFEOFMARK' THEN STOP; * END OF FILE ON INPUT;\n   TYPE='  ';\n   IF ID=14 THEN TYPE='I ';\n   IF ID=15 THEN TYPE='O ';\n   IF ID=17 THEN TYPE='S ';\n   IF ID=18 THEN TYPE='R ';\n   IF TYPE='  ' THEN RETURN;\n   INPUT @SMFCOL1+  2 SMFTIME       PIB4.\n              @SMFCOL1+  6 SMFDATE        PD4.\n              @SMFCOL1+ 14 JNAM            $8.\n              @SMFCOL1+ 22 RDRDATE  SMFSTAMP8.\n              @SMFCOL1+ 30 USERID          $8.\n              @SMFCOL1+ 90 VOL_ID          $6.@;\n   RECDATE=DATEJUL(SMFDATE);\n   SMFTIME=INT(SMFTIME/100);\n   HOURS=INT(SMFTIME/3600);\n   MINUTES=INT(MOD(SMFTIME,3600)/60);\n   RECTIME=HMS(HOURS,MINUTES,MOD(SMFTIME,60));\n   DROP ID SMFEOF SMFTIME SMFDATE HOURS MINUTES;\n   IF ID=14 OR ID=15 THEN DO;* CLOSE INPUT/OUTPUT DATASET;\n      IF RECDATE<STRTDATE THEN RETURN;\n      IF RECDATE>ENDDATE THEN RETURN;\n      IF RECDATE=STRTDATE AND RECTIME<STRTTIME THEN RETURN;\n      IF RECDATE=ENDDATE AND RECTIME>ENDTIME THEN RETURN;\n      INPUT @SMFCOL1+ 38 SMF14RIN  PIB2.\n            @SMFCOL1+ 64 ACTDSN   : $44.\n            @SMFCOL1+151 JFCBIND2  PIB1.@;\n      IF SMF14RIN='...1............'B THEN RETURN;* SKIP TEMPORARIES;\n      IF SMF14RIN='.......1........'B THEN RETURN;* SKIP VIO (TEMP);\n      IF JFCBIND2='.......1'B THEN RETURN;* SKIP TEMPORARIES;\n      IF ID=15 THEN DO;\n         INPUT @SMFCOL1+162 JFCDSORG      PIB2.\n               @SMFCOL1+164 JFCRECFM      PIB1.\n               @SMFCOL1+166 BLKSIZE       PIB2.\n               @SMFCOL1+168 LRECL         PIB2.\n               @SMFCOL1+256 RLSE          PIB4.@;\n         IF SMF14RIN='..1.............'B THEN\n            IF RLSE>0 THEN SUBSTR(TYPE,2,1)='*';\n         DSORG='***';\n         IF JFCDSORG='100...00........'B THEN DSORG='IS ';\n         IF JFCDSORG='100...01........'B THEN DSORG='ISU';\n         IF JFCDSORG='010...00........'B THEN DSORG='PS ';\n         IF JFCDSORG='010...01........'B THEN DSORG='PSU';\n         IF JFCDSORG='001...00........'B THEN DSORG='DA ';\n         IF JFCDSORG='001...01........'B THEN DSORG='DAU';\n         IF JFCDSORG='000...10........'B THEN DSORG='PO ';\n         IF JFCDSORG='000...11........'B THEN DSORG='POU';\n         IF JFCRECFM='11......'B THEN RECFMTYP='U';\n         ELSE IF JFCRECFM='10......'B THEN RECFMTYP='F';\n            ELSE IF JFCRECFM='01......'B THEN RECFMTYP='V';\n               ELSE RECFMTYP='*';\n         IF JFCRECFM='...1....'B THEN RECFMBLK='B';\n         ELSE RECFMBLK=' ';\n         IF JFCRECFM='....1...'B THEN RECFMSTD='S';\n         ELSE RECFMSTD=' ';\n         IF JFCRECFM='.....10.'B THEN RECFMCC='A';\n         ELSE IF JFCRECFM='.....01.'B THEN RECFMCC='M';\n            ELSE RECFMCC=' ';\n         RECFM=RECFMTYP||RECFMBLK||RECFMSTD||RECFMCC;\n         END;\n      DROP SMF14RIN JFCBIND2 JFCDSORG JFCRECFM\n           RECFMTYP RECFMBLK RECFMSTD RECFMCC;\n      OUTPUT TEMPACT;\n      END;\n   IF ID=17 THEN DO;* DATASET RENAME;\n      IF RECDATE<STRTDATE THEN RETURN;\n      IF RECDATE>ENDDATE THEN RETURN;\n      IF RECDATE=STRTDATE AND RECTIME<STRTTIME THEN RETURN;\n      IF RECDATE=ENDDATE AND RECTIME>ENDTIME THEN RETURN;\n      INPUT @SMFCOL1+40 ACTDSN : $44.@;\n      OUTPUT TEMPSCR;\n      END;\n   IF ID=18 THEN DO;* DATASET SCRATCH;\n      IF RECDATE<STRTDATE THEN RETURN;\n      IF RECDATE>ENDDATE THEN RETURN;\n      IF RECDATE=STRTDATE AND RECTIME<STRTTIME THEN RETURN;\n      IF RECDATE=ENDDATE AND RECTIME>ENDTIME THEN RETURN;\n      INPUT @SMFCOL1+40 ACTDSN : $44.\n            @SMFCOL1+84 NDSN   : $44.@;\n      OUTPUT TEMPREN;\n      END;\n   INPUT;\n   RETURN;\nPROC SORT DATA=DSNAMES OUT=DSNAMES; BY DSN;\nPROC SORT DATA=TEMPACT OUT=TEMPACT; BY ACTDSN;\nDATA ACTIVITY\n          (KEEP = DSN JNAM RECDATE RECTIME RDRDATE TYPE USERID\n                     DSORG RECFM LRECL BLKSIZE);\n   LABEL  DSN     = DSNAME\n          JNAM    = JOBNAME\n          RECDATE = DATE\n          RECTIME = TIME\n          RDRDATE = READER DATE\n          TYPE    = TYPE\n          USERID  = USERID\n          DSORG   = DSORG\n          RECFM   = RECFM\n          LRECL   = LRECL\n          BLKSIZE = BLKSIZE;\n   FORMAT DSN                $44.\n          JNAM                $8.\n          RECDATE        MMDDYY8.\n          RECTIME          TIME8.\n          RDRDATE     DATETIME16.\n          TYPE                $2.\n          USERID              $8.\n          DSORG               $3.\n          RECFM               $4.\n          LRECL                5.\n          BLKSIZE              5.;\n   IF _N_=1 THEN DO;\n      LINK RDACTA;\n      LINK RDDSNA;\n      END;\n   IF DSN<ACTDSN THEN DO;\n      LINK RDDSNA;\n      RETURN;\n      END;\n   IF DSN=ACTDSN THEN GOTO WRTUSES;\n   IF DSN>ACTDSN THEN DO;\n      LINK RDACTA;\n      RETURN;\n      END;\n WRTUSES: DROP ACTDSN; OUTPUT ACTIVITY; LINK RDACTA; RETURN;\n RDACTA: SET TEMPACT; RETURN;\n RDDSNA: SET DSNAMES; RETURN;\nPROC PRINT DATA=ACTIVITY UNIFORM LABEL;\n   ID DSN;\n   VAR JNAM USERID TYPE RECDATE RECTIME DSORG RECFM LRECL BLKSIZE;\n   TITLE 'DATASET USAGE: JOBNAME ORDER';\nPROC SORT DATA=TEMPREN OUT=TEMPREN; BY ACTDSN;\nDATA RENAMES(KEEP = DSN JNAM RECDATE RECTIME RDRDATE USERID NDSN);\n   LABEL  DSN     = DSNAME\n          JNAM    = JOBNAME\n          RECDATE = DATE\n          RECTIME = TIME\n          RDRDATE = READER DATE\n          NDSN    = NEW DSNAME;\n   FORMAT DSN                $44.\n          JNAM                $8.\n          RECDATE        MMDDYY8.\n          RECTIME          TIME8.\n          RDRDATE     DATETIME16.\n          USERID              $8.\n          NDSN               $44.;\n   IF _N_=1 THEN DO;\n      LINK RDREN;\n      LINK RDDSNR;\n      END;\n   IF DSN<ACTDSN THEN DO;\n      LINK RDDSNR;\n      RETURN;\n      END;\n   IF DSN=ACTDSN THEN GOTO WRTREN;\n   IF DSN>ACTDSN THEN DO;\n      LINK RDREN;\n      RETURN;\n      END;\n WRTREN: DROP ACTDSN; OUTPUT RENAMES; LINK RDREN; RETURN;\n RDREN: SET TEMPREN; RETURN;\n RDDSNR: SET DSNAMES; RETURN;\nPROC PRINT DATA=RENAMES UNIFORM LABEL;\n   ID DSN;\n   VAR JNAM USERID RECDATE RECTIME NDSN;\n   TITLE 'DATASET RENAMES';\nPROC SORT DATA=TEMPSCR OUT=TEMPSCR; BY ACTDSN;\nDATA SCRATCH(KEEP = DSN JNAM RECDATE RECTIME RDRDATE USERID VOL_ID);\n   LABEL  DSN     = DSNAME\n          JNAM    = JOBNAME\n          RECDATE = DATE\n          RECTIME = TIME\n          RDRDATE = READER DATE\n          USERID  = USER ID;\n   FORMAT DSN                $44.\n          JNAM                $8.\n          RECDATE        MMDDYY8.\n          RECTIME          TIME8.\n          RDRDATE     DATETIME16.\n          USERID              $8.;\n   IF _N_=1 THEN DO;\n      LINK RDSCR;\n      LINK RDDSNR;\n      END;\n   IF DSN<ACTDSN THEN DO;\n      LINK RDDSNR;\n      RETURN;\n      END;\n   IF DSN=ACTDSN THEN GOTO WRTSCR;\n   IF DSN>ACTDSN THEN DO;\n      LINK RDSCR;\n      RETURN;\n      END;\n WRTSCR: DROP ACTDSN; OUTPUT SCRATCH; LINK RDSCR; RETURN;\n RDSCR: SET TEMPSCR; RETURN;\n RDDSNR: SET DSNAMES; RETURN;\nPROC PRINT DATA=SCRATCH UNIFORM LABEL;\n   ID DSN;\n   VAR JNAM USERID RECDATE RECTIME VOL_ID;\n   TITLE 'DATASET SCRATCHES';\n./ ADD NAME=SASSRCHV\n//TDBJ   JOB   (6496,B015),'TECH - TDB ',CLASS=T,MSGCLASS=T,\n// MSGLEVEL=(2,0),NOTIFY=TDBF\n//*********************************************************************\n//*                                                                   *\n//*  THIS SAS CODE WRITTEN BY TOM BURNS AT TEXAS UTILITIES SERVICES   *\n//*  TO REPORT ON WHO WAS ACCESSING DELETING VSAM DATASETS.  IT NEEDS *\n//*  SOME OF THE TYPE 60 RECORDS TO BE CUT BY SMF.  WE ARE ON ICF,    *\n//*  BUT IT USED TO WORK WHEN WE HAD SOME VSAM CATALOGS ALSO.         *\n//*                                                                   *\n//*  INSTRUCTIONS:                                                    *\n//*                                                                   *\n//*  1.  CHANGE THE DSNAMES DD INPUT TO THE DATA AND INDEX NAMES IN   *\n//*      QUESTION.  THE CLUSTER NAME DOES NOT SHOW UP IN THESE RECORDS*\n//*                                                                   *\n//*  2.  CHANGE THE SMF INPUT DSN IN THE SMFTAPE DD TO THE SMF INPUT  *\n//*      DATASET FOR YOUR INSTALLATION.                               *\n//*                                                                   *\n//*                                                                   *\n//*********************************************************************\n//DSLIST   EXEC SAS,REGION=1024K,\n// COPIES=1,SORT=99,OPTIONS='NOSTIMER,S=72'\n//WORK      DD  UNIT=SYSDA,SPACE=(CYL,(250,200))\n//FT11F001  DD  SYSOUT=*\n//SMFTAPE  DD DSN=TUSS.SM.PNDSYSA.SMFRECS.DAILY(0),\n//            DISP=(OLD,KEEP)\n//         DD DSN=TUSS.SM.PNDSYSB.SMFRECS.DAILY(0),\n//            DISP=(OLD,KEEP),UNIT=AFF=SMFTAPE\n//DSNAMES   DD  *\nRECISV.DATA.RECEIVE.TRANS\nOLCISV.DATA.RECEIVE.TRANS\nRECISV.INDEX.RECEIVE.TRANS\nOLCISV.INDEX.RECEIVE.TRANS\n//SYSIN     DD  *\nCOMMENT\n        THIS JOB SUMMARIZES USES OF VSAM DATASETS BY JOBS\nWRITTEN BY TOM BURNS AT TEXAS UTILITIES  ;\nOPTIONS NOMACROGEN NOSYMBOLGEN\nSYSPARM='STARTDATE=02/01/88,STARTTIME=00:00:00,\nENDDATE=12/31/99,ENDTIME=23:59:59';\n%MACRO CONVTIME(TIMEIN);\n   %* <TIMEIN> MUST BE IN .01 SECOND UNITS;\n   %LOCAL HOURS MINUTES SECONDS;\n   %LET HOURS=INT(&TIMEIN/360000);\n   %LET MINUTES=INT(MOD(&TIMEIN,360000)/6000);\n   %LET SECONDS=INT(MOD(&TIMEIN,6000)/100);\n   %STR( HMS(&HOURS,&MINUTES,&SECONDS)+MOD(&TIMEIN,100)/100 )\n   %MEND CONVTIME;\n%MACRO DSNCULL(INPUT,OUTPUT);\n   %LOCAL RDINPUT RDDSN WRTUSES;\n   %LET RDINPUT=RDINP&SYSINDEX;\n   %LET RDDSN=RDDSN&SYSINDEX;\n   %LET WRTUSES=WRT&SYSINDEX;\n   IF _N_=1 THEN DO;\n      LINK &RDINPUT;\n      LINK &RDDSN;\n      END;\n   IF REQDSN<DSN THEN DO;\n      LINK &RDDSN;\n      RETURN;\n      END;\n   IF REQDSN=DSN THEN GOTO &WRTUSES;\n   IF REQDSN>DSN THEN DO;\n      LINK &RDINPUT;\n      RETURN;\n      END;\n &WRTUSES: OUTPUT &OUTPUT; LINK &RDINPUT; RETURN;\n &RDINPUT: SET &INPUT; RETURN;\n &RDDSN: SET DSNAMES; RETURN;\n   %MEND DSNCULL;\nDATA DSNAMES;\n   INFILE DSNAMES CLOSE=FREE;\n   LABEL  REQDSN = DSNAME;\n   FORMAT REQDSN     $44.;\n   INPUT REQDSN : $44.;\n   OUTPUT DSNAMES;\n   RETURN;\nDATA\n VSAMACT (KEEP = RDRDATE JNAM RECDATE RECTIME DSN USERID TYPE\n                 ERRE TRKREQ SMF64DIL SMF64DEX SMF64DLR SMF64DDE\n                 SMF64DIN  SMF64DUP SMF64DRE SMF64DFS SMF64DCS\n                 SMF64DAS  SMF64DEP SMF64DBS SMF64DCI SMF64DLS\n                 SMF64DKL  SMF64DDN)\n VSAMREN (KEEP = RDRDATE JNAM RECDATE RECTIME DSN USERID NDSN)\n VSAMSCR (KEEP = RDRDATE JNAM RECDATE RECTIME DSN TYPE USERID);\n   LABEL  JNAM    = JOBNAME\n          TYPE    = TYPE\n          RECDATE = DATE\n          RECTIME = TIME\n          RDRDATE = READER DATE\n          USERID  = USERID\n          NDSN    = NEW DSNAME;\n   FORMAT JNAM                $8.\n          TYPE                $8.\n          RECDATE        MMDDYY8.\n          RECTIME          TIME8.\n          RDRDATE     DATETIME16.\n          USERID              $8.\n          NDSN               $44.;\n   INFILE SMFTAPE MISSOVER JFCB=JFCBMANX CLOSE=FREE;\n   IF _N_=1 THEN DO;\n      IF SUBSTR(JFCBMANX,100,1)='....1...'B\n         THEN SMFCOL1=5;\n      ELSE SMFCOL1=1;\nOPTIONS NOSOURCE;* SKIP LISTING OF SYSPARM SCAN;\n      FOUND=1; NPARM=1;\n      STRTDATE=0; STRTTIME=0; ENDDATE=0; ENDTIME=0;\n      DO WHILE(FOUND);\n         FOUND=0;\n         IF 'STARTDATE'=SCAN(SYSPARM(),NPARM,' ,=') THEN DO;\n            WORD=SCAN(SYSPARM(),NPARM+1,' ,=');\n            IF WORD='TODAY' THEN STRTDATE=TODAY();\n            ELSE STRTDATE=INPUT(WORD,MMDDYY8.);\n            FOUND=1;\n            END;\n         IF 'STARTTIME'=SCAN(SYSPARM(),NPARM,' ,=') THEN DO;\n            WORD=SCAN(SYSPARM(),NPARM+1,' ,=');\n            IF WORD='NOW' THEN STRTTIME=HMS(HOUR(DATETIME()),0,0);\n            ELSE STRTTIME=INPUT(WORD,TIME8.);\n            FOUND=1;\n            END;\n         IF 'ENDDATE'=SCAN(SYSPARM(),NPARM,' ,=') THEN DO;\n            WORD=SCAN(SYSPARM(),NPARM+1,' ,=');\n            IF WORD='TODAY' THEN ENDDATE=TODAY();\n            ELSE ENDDATE=INPUT(WORD,MMDDYY8.);\n            FOUND=1;\n            END;\n         IF 'ENDTIME'=SCAN(SYSPARM(),NPARM,' ,=') THEN DO;\n            WORD=SCAN(SYSPARM(),NPARM+1,' ,=');\n            IF WORD='NOW' THEN ENDTIME=HMS(1+HOUR(DATETIME()),0,0);\n            ELSE ENDTIME=INPUT(WORD,TIME8.);\n            FOUND=1;\n            END;\n         NPARM=NPARM+2;\n         END;\n      IF ENDDATE=0 THEN ENDDATE=MDY(12,31,99);\n      IF ENDTIME=0 THEN ENDTIME=HMS(23,59,59);\nOPTIONS SOURCE;\n      RETAIN SMFCOL1 STRTDATE STRTTIME ENDDATE ENDTIME\n      TRKREQ ERRE SMF64ESL SMF64DIL SMF64DEX SMF64DLR SMF64DDE SMF64DIN\n      SMF64DUP SMF64DRE SMF64DFS SMF64DCS SMF64DAS SMF64DEP SMF64DBS\n      SMF64DCI SMF64DLS SMF64DKL SMF64DDN;\n      END;\n   INPUT @SMFCOL1    SMFEOF   :      $12.\n         @SMFCOL1+ 1 ID             PIB1.@;\n   IF SMFEOF='SMFEOFMARK' THEN STOP; * END OF FILE ON INPUT;\n   IF ID<60 OR 69<ID THEN RETURN;\n   ELSE INPUT @SMFCOL1+  2 SMFTIME       PIB4.\n              @SMFCOL1+  6 SMFDATE        PD4.@;\n   IF ID=60|ID=61|ID=65|ID=66 THEN\n      INPUT @SMFCOL1+ 46 JNAM            $8.\n            @SMFCOL1+ 54 RDRDATE  SMFSTAMP8.\n            @SMFCOL1+ 62 USERID          $8.@;\n   IF (62<=ID & ID<=64) | (67<=ID & ID<=69) THEN\n      INPUT @SMFCOL1+ 14 JNAM            $8.\n            @SMFCOL1+ 22 RDRDATE  SMFSTAMP8.\n            @SMFCOL1+ 30 USERID          $8.@;\n   RECDATE=DATEJUL(SMFDATE);\n   RECTIME=%CONVTIME(SMFTIME);\n   IF ID=62 THEN DO;* COMPONENT/CLUSTER OPEN;\n      IF RECDATE<STRTDATE THEN RETURN;\n      IF RECDATE>ENDDATE THEN RETURN;\n      IF RECDATE=STRTDATE AND RECTIME<STRTTIME THEN RETURN;\n      IF RECDATE=ENDDATE AND RECTIME>ENDTIME THEN RETURN;\n      INPUT @SMFCOL1+ 38 SMF62IND  PIB1.\n            @SMFCOL1+ 92 DSN      : $44.@;\n      TYPE = 'OPEN' ;\n      OUTPUT VSAMACT;\n      END;\n   IF ID=64 THEN DO;* CLOSE INPUT/OUTPUT DATASET;\n      IF RECDATE<STRTDATE THEN RETURN;\n      IF RECDATE>ENDDATE THEN RETURN;\n      IF RECDATE=STRTDATE AND RECTIME<STRTTIME THEN RETURN;\n      IF RECDATE=ENDDATE AND RECTIME>ENDTIME THEN RETURN;\n      INPUT @SMFCOL1+ 38 SMF64RIN  PIB1.\n            @SMFCOL1+ 39 SMF64DTY  PIB1.\n            @SMFCOL1+ 84 DSN      : $44.\n            @SMFCOL1+128 TRKREQ    PIB2.\n            @SMFCOL1+134 SMF64ESL  PIB2.@;\n      TYPE='CLUSTER ';\n      IF SMF64RIN='..1.....'B THEN ERRE='NO SPACE';\n      IF SMF64RIN='.....1..'B THEN ERRE='ABENDPRO';\n      IF SMF64DTY='1.......'B THEN TYPE='DATA    ';\n      IF SMF64DTY='.1......'B THEN TYPE='INDEX   ';\n      INPUT @SMFCOL1+48+136+SMF64ESL SMF64DIL PIB4.\n                                 SMF64DEX PIB4.\n                                 SMF64DLR PIB4.\n                                 SMF64DDE PIB4.\n                                 SMF64DIN PIB4.\n                                 SMF64DUP PIB4.\n                                 SMF64DRE PIB4.\n                                 SMF64DFS PIB4.\n                                 SMF64DCS PIB4.\n                                 SMF64DAS PIB4.\n                                 SMF64DEP PIB4.\n                                 SMF64DBS PIB4.\n                                 SMF64DCI PIB4.\n                                 SMF64DLS PIB4.\n                                 SMF64DKL PIB4.\n                                 SMF64DDN $8.@;\n*PUT DSN= TYPE=;\n      OFFSET=SMFCOL1+SMF64ESL+136;\n      INPUT @OFFSET+60 SMF64DDE PIB4.\n            @OFFSET+64 SMF64DIN PIB4.\n            @OFFSET+68 SMF64DUP PIB4.@;\n      INPUT @OFFSET+106 SMF64DDN $8.@;\n      TYPE = 'CLOSE' ;\n      OUTPUT VSAMACT;\n      END;\n   IF ID=67 THEN DO;* VSAM DATASET DELETE;\n      IF RECDATE<STRTDATE THEN RETURN;\n      IF RECDATE>ENDDATE THEN RETURN;\n      IF RECDATE=STRTDATE AND RECTIME<STRTTIME THEN RETURN;\n      IF RECDATE=ENDDATE AND RECTIME>ENDTIME THEN RETURN;\n      INPUT @SMFCOL1+39 SMF67IOD PIB1.\n            @SMFCOL1+84 DSN     : $44.@;\n      IF SMF67IOD='0000....'B THEN RETURN;\n      IF SMF67IOD='1.......'B THEN TYPE='CLUSTER ';\n      IF SMF67IOD='.1......'B THEN TYPE='DATA    ';\n      IF SMF67IOD='..1.....'B THEN TYPE='INDEX   ';\n      IF SMF67IOD='...1....'B THEN TYPE='CATALOG ';\n      IF SMF67IOD='....1...'B THEN TYPE='NON-VSAM';\n      IF SMF67IOD='.....1..'B THEN TYPE='GDG     ';\n      IF SMF67IOD='......1.'B THEN TYPE='ALIAS   ';\n      IF SMF67IOD='.......1'B THEN TYPE='*RESERV*';\n      OUTPUT VSAMSCR;\n      END;\n   IF ID=68 THEN DO;* VSAM DATASET RENAME;\n      IF RECDATE<STRTDATE THEN RETURN;\n      IF RECDATE>ENDDATE THEN RETURN;\n      IF RECDATE=STRTDATE AND RECTIME<STRTTIME THEN RETURN;\n      IF RECDATE=ENDDATE AND RECTIME>ENDTIME THEN RETURN;\n      INPUT @SMFCOL1+ 82 DSN    : $44.\n            @SMFCOL1+126 NDSN   : $44.@;\n      OUTPUT VSAMREN;\n      END;\n   INPUT;\n   RETURN;\nPROC SORT DATA=DSNAMES OUT=DSNAMES; BY REQDSN;\nPROC SORT DATA=VSAMACT OUT=VSAMACT; BY DSN;\nDATA ACTIVITY(KEEP= DSN JNAM RECDATE RECTIME\n                 SMF64DEX SMF64DLR SMF64DDE\n                 SMF64DIN  SMF64DUP SMF64DRE);\n   * CULL DATA TO ONLY REQUESTED DATASETS;\n   FORMAT DSN    $20.\n          REQDSN $20.;\n   %DSNCULL(VSAMACT,ACTIVITY);\nPROC SORT DATA=ACTIVITY OUT=ACTIVITY;\n   BY RECDATE RECTIME;\nPROC PRINT DATA=ACTIVITY UNIFORM LABEL;\n   ID DSN;\n*  VAR JNAM USERID RECDATE RECTIME TYPE;\n   TITLE 'VSAM DATASET USAGE';\nPROC SORT DATA=VSAMREN OUT=VSAMREN; BY DSN;\nDATA RENAMES(KEEP= DSN JNAM RECDATE RECTIME RDRDATE USERID NDSN);\n   * CULL DATA TO ONLY REQUESTED DATASETS;\n   FORMAT DSN    $44.\n          REQDSN $44.;\n   %DSNCULL(VSAMREN,RENAMES);\nPROC SORT DATA=RENAMES OUT=RENAMES;\n   BY RECDATE RECTIME;\nPROC PRINT DATA=RENAMES UNIFORM LABEL;\n   ID DSN;\n   VAR JNAM USERID RECDATE RECTIME NDSN;\n   TITLE 'VSAM DATASET RENAMES';\nPROC SORT DATA=VSAMSCR OUT=VSAMSCR; BY DSN;\nDATA SCRATCH(KEEP= DSN JNAM RECDATE RECTIME RDRDATE USERID TYPE);\n   * CULL DATA TO ONLY REQUESTED DATASETS;\n   FORMAT DSN    $44.\n          REQDSN $44.;\n   %DSNCULL(VSAMSCR,SCRATCH);\nPROC SORT DATA=SCRATCH OUT=SCRATCH;\n   BY RECDATE RECTIME;\nPROC PRINT DATA=SCRATCH UNIFORM LABEL;\n   ID DSN;\n   VAR JNAM USERID TYPE RECDATE RECTIME;\n   TITLE 'VSAM DATASET SCRATCHES';\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "OLDVERS": {"ttr": 3075, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x93\\x08/\\x00\\x93\\x08/\\x19X\\x06\\xc1\\x06\\xba\\x00\\x00\\xd6\\xd3\\xc4\\xf3\\xf1\\xf3@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1993-03-23T00:00:00", "modifydate": "1993-03-23T19:58:00", "lines": 1729, "newlines": 1722, "modlines": 0, "user": "OLD313"}, "text": "./ ADD NAME=$$$$DOCO 0100-93082-93082-1928-00006-00006-00000-OLDVERS\n\n  THIS MATERIAL IS THE ESA 3.1.3 VERSION OF THE CONSOLE PROGRAMS.\n  IT IS INCLUDED HERE FOR THOSE WITH OLDER SYSTEMS, IF FOR SOME\n  REASON THE NEWER STUFF DOESN'T WORK FOR THEM.\n         S.GOLOB - 212-206-5847   OR  908-901-0943\n\n./ ADD NAME=CONESA   0100-93082-93082-1928-00894-00894-00000-OLDVERS\n         TITLE 'CONSOLE DISPLAY'\n*******************************************************************     DOC FILE\n*                                                                 *     DOC FILE\n*            D I S C L A I M E R    C O M M E N T                 *     DOC FILE\n*                                                                 *     DOC FILE\n*******************************************************************     DOC FILE\n*                                                                 *     DOC FILE\n* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *     DOC FILE\n* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        *     DOC FILE\n* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *     DOC FILE\n* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *     DOC FILE\n* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *     DOC FILE\n* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *     DOC FILE\n* SUPPLIED .                                                      *     DOC FILE\n*                                                                 *     DOC FILE\n* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *     DOC FILE\n* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *     DOC FILE\n* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *     DOC FILE\n* FUTURE .                                                        *     DOC FILE\n*                                                                 *     DOC FILE\n*******************************************************************     DOC FILE\n***********************************************************************\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*        DISPLAY MVS CONSOLE DISPLAY WITH AUTOMATIC REFRESH OF SCREEN *\n*        TO PRESENT A CONSOLE APPEARANCE.                             *\n*                                                                     *\n*        USED THE BASIC CROSS MEMORY CONSOLE BUFFER READ FROM THE     *\n*        CDF PROGRAM ON THE SHARE TAPE, AND MODIFIED TO A COMMAND     *\n*        PROCESSOR HIGHLIGHTING THE HIGHLIGHTED MESSAGES - P.MURPHY   *\n*                                                                     *\n*                                                                     *\n***********************************************************************\nZTPR0200 CSECT\n         BEGIN PROGRAM=ZTPR0200\n         LR    R12,R15\n         USING ZTPR0200,R12\n         LR    R2,R1\n         GETMAIN R,LV=WORKLENG\n         LR    R3,R1\n         ST    R13,4(R3)      SAVE THE CALLER'S R13\n         ST    R3,8(,R13)\n         LR    R13,R3\n         USING WORKAREA,R13\n         ST    R2,SAVECPPL\n         USING CPPL,R2\n         L     R6,CPPLPSCB\n         DROP  R2\n         USING PSCB,R6\n* IF YOU HAVE OPER AUTHORITY - YOU ARE  AUTHORIZED.  IF NOT, THEN YOU *\n* NEED TO BE IN THE TABLE IN THIS PROGRAM TO USE IT.  ISSUES A WTL    *\n* WHEN USERFLAG IS SET TO X'FF'.                                      *\n         MVC   USERID,PSCBUSER\n         TM    PSCBATR1,PSCBCTRL\n         BZ    NOAUTH\n         DROP  R6\n         MVI   USERFLAG,X'00'\n         B     NOTUSER\nUSEROK   MVI   USERFLAG,X'FF'\nNOTUSER  MVI   AUTOFLAG,X'00' AUTO MODE FLAG\n         MVI   BLANKS,X'40'\n         MVC   BLANKS+1(79),BLANKS\n         MVI   CNSLFLAG,X'00'\n         MVI   THRUFLAG,X'00'\n         MVI   ISSUFLAG,X'00'\n         MVC   CMDLINE,BLANKS\n         MVI   RESHOWFL,X'00' RESHOW INDICATOR\n         MVI   MOD5FLAG,X'00' FLAG FOR MOD 5\n         MVI   SCREEN,X'03' WCC\n         MVC   CLEAR(17),CLR CLEAR SCREEN CONTROL CHARS\n         GTSIZE\n         LTR   R0,R0              DISPLAY DEVICE?\n         BZ    FREESKIP           YES, GO FREE AND RETURN\n         CH    R1,EIGHTY          80 CHAR LINES\n         BNE   CHEKM5             NO, SET MODE 2\n         CH    R0,FORTY3          MOD 4?\n         BE    SETM4              YES, BRANCH\n         CH    R0,THIRTY2         MOD 3?\n         BE    SETM3              YES, BRANCH\nSETM2    TPUT  MOD2,3\n         TGET  REPLY,50\n*        MVI   CLEAR,X'7E'\n*        LTR   R15,R15            ZERO RET CODE\n*        BNZ   FREESKIP           NO, RETURN\n         LA    R3,24              22 LINES PER SCREEN\n         MVC   CURSOR,=X'5CF0'    ROW 24 COL 2\n         MVC   ENDOFSCR,=X'5D7F'    ROW 24 COL 80\n         MVC   TPUTLEN,=AL4(24*84+1) LENGTH OF TPUT\n         B     PROCESS\nCHEKM5   CH    R0,=H'27'          27 LINES?\n         BNE   SETM2\n         CH    R1,=H'132'         132 WIDTH?\n         BNE   SETM2\nSETM5    LA    R3,27              27 LINES PER SCREEN\n*        MVI   CLEAR,X'7E'\n         MVI   MOD5FLAG,X'FF'\n         MVC   TPUTLEN,=AL4(27*84+1) LENGTH OF TPUT\n         MVC   ENDOFSCR,=X'F76B'  ROW 27 COL 132\n         MVC   CURSOR,=X'F5E8'    ROW 27 COL 2 IC\n         B     PROCESS\nSETM3    LA    R3,32              22 LINES PER SCREEN\n         MVC   TPUTLEN,=AL4(32*84+1) LENGTH OF TPUT\n         MVC   ENDOFSCR,=X'E77E'  ROW 32 COL 80\n         MVC   CURSOR,=X'E6F0'    ROW 32 COL 2 IC\n         B     PROCESS\nSETM4    LA    R3,43              22 LINES PER SCREEN\n         MVC   TPUTLEN,=AL4(43*84+1) LENGTH OF TPUT\nPROCESS  ST    R3,NUMLINES\n         MVI   HELPFLAG,X'00'\n         MVI   CMDFLAG,X'00'\n         LA    R1,16\n         L     R1,0(R1)\n         USING CVT,R1\n         L     R1,CVTASVT\n         DROP  R1\n         USING ASVT,R1\n         L     R5,ASVTMAXU\n         LA    R15,ASVTENTY-4\nASVTLOOP BCTR  R5,0\n         LTR   R5,R5\n         BZ    CONABEND\n         LA    R15,4(,R15)\n         ICM   R6,15,0(R15)\n         BM    ASVTLOOP\n         USING ASCB,R6\n         ICM   R7,15,ASCBJBNS\n         BZ    ASVTLOOP\n         CLC   =C'CONSOLE',0(R7)\n         BNE   ASVTLOOP\n         SR    R1,R1\n         LH    R1,ASCBASID\n         DROP  R1,R6\n*        TM    CVTDCB,CVTMVSE\n*        BZ    LOAD5\n*        DROP  R1\n*        LA    R1,7\nSTORECON ST    R1,CONSASID\n         BAL   R3,AUTHRIZ\n         AXRES AXLIST=AXLIST      RESERVE AN AX\n         L     R1,CONSASID        'CONSOLE' ASID\n         AXEXT ASID=(1)           EXTRACT AX OF 'CONSOLE'IN R0\n         AXSET AX=(0)             SET OUR AX TO THAT OF CONSOLE\n         BAL   R3,UNAUTH\n         B     SHOWCONS\nAXFREE   BAL   R3,AUTHRIZ\n         AXFRE AXLIST=AXLIST\n         BAL   R3,UNAUTH\nSHOWRTRN DS    0H\nFREESKIP LR    R3,R13\n         L     R13,SAVEAREA+4 RESTORE THE CALLER'S R13\n         FREEMAIN RC,A=(3),LV=WORKLENG\n         SR    R15,R15\n         RETURN (14,12),RC=(15)\nSHOWCONS DS    0H\n         STFSMODE ON,INITIAL=YES  FULL SCREEN MODE ON\n         TPUT  CLEAR,17,FULLSCR\n*---------------------------------------------------------------------*\n*          BUILD A TABLE OF UCM ADDRESSES (ONE PER CONSOLE)           *\n*---------------------------------------------------------------------*\nBLDUCMS  L     R4,16              R4 = ADDR OF CVT\n         USING CVT,R4\n         L     R4,CVTCUCB         R4 = ADDR OF 'CUCB' (UCM BASE)\n         DROP  R4\n         USING UCM,R4\n         L     R5,UCMVEA          R5 = ADDR OF FIRST UCM ENTRY\n         L     R6,UCMVEZ          R6 = LENGTH OF EACH UCM ENTRY\n         L     R7,UCMVEL          R7 = ADDR OF LAST UCM ENTRY\n         LA    R8,UCMTAB+4        R8 = ADDR OF UCMTAB\n         LA    R9,UCMTABE         R9 = ADDR OF END OF UCMTAB\n         XR    R2,R2              R2 = 0 (NUMBER OF VALID UCMS)\nUCMLOOP  ST    R5,0(0,R8)         SAVE UCM ADDRESS IN UCMTAB\n         LA    R2,1(0,R2)         R2  = R2  + 1  (ONE MORE UCM)\n         LA    R8,4(0,R8)         R8 = ADDR OF NEXT UCMTAB ENTRY\n         CR    R8,R9              DOES R8 POINT PAST END OF UCMTAB?\n         BNL   UCMDONE            YES; LEAVE LOOP\n         AR    R5,R6              R5 = ADDR OF NEXT UCM ENTRY\n         CR    R5,R7              DOES R5 POINT PAST UCM ENTRIES?\n         BL    UCMLOOP            NOPE; KEEP GOING\nUCMDONE  STH   R2,NUMUCMS         SAVE NUMBER OF UCMS FOUND\n         CLI   CNSLFLAG,X'FF'\n         BNE   SETMAST\n         MVC   OLDCONS,CONSOLE\n         L     R4,CONSOLE\n         LA    R4,1(,R4)\n         B     MASTSCAN\n         DROP  R4\n*---------------------------------------------------------------------*\n*        SCAN THE UCM FOR THE MASTER CONSOLE AS THE DEFAULT           *\n*        CONSOLE WHEN ENTERING THE \"JESOPER\" COMMAND.                 *\n*---------------------------------------------------------------------*\nSETMAST  SR    R4,R4\n         ST    R4,CONSOLE\nMASTSCAN LA    R5,UCMTAB          SET POINTER TO UCM ADDRESS TABLE\nCKNUMUCM CH    R4,NUMUCMS         IS NUMBER TOO HIGH?\n         BNH   MASTCONT           NO, CONTINUE\n         CLI   CNSLFLAG,X'FF'\n         BNE   CONABEND\n         CLI   THRUFLAG,X'FF'\n         BE    CONABEND\n         MVI   THRUFLAG,X'FF'\n         SR    R4,R4              START W/ FIRST ENTRY\n         B     MASTCONT\nCONABEND ABEND 1\nMASTCONT SLL   R4,2               MAKE CONSOLE NUMBER TABLE INDEX\n         LA    R5,0(R5,R4)        SET POINTER TO UCM ADDRESS SLOT\n         L     R5,0(0,R5)         SET POINTER TO UCM\n         LTR   R5,R5\n         BZ    NEXT\n         USING UCMLIST,R5         TELL ASSEMBLER ABOUT UCM\n         CLI   CNSLFLAG,X'FF'\n         BE    SKIPMSTR\n         TM    UCMDISP1,UCMDISPA  IS THIS A MASTER CONSOLE?\n         BNZ   ACTIVCHK           YES ? FOUND THE MASTER CONSOLE ..\n         B     NEXT\nSKIPMSTR TM    UCMDISP1,UCMDISPC  GRAPHICS\n         BZ    NEXT\nACTIVCHK TM    UCMATR,UCMUF       ACTIVE?\n         BNZ   MASTFND\nNEXT     SRL   R4,2               RESET CONSOLE NUMBER TO RELATIVE\n         LA    R4,1(0,R4)         SET POINTER TO NEXT CONSOLE\n         B     MASTSCAN           CONTINUE MASTER CONSOLE SCAN LOOP\nMASTFND  SRL   R4,2               RESET CONSOLE NUMBER TO RELATIVE\n         ST    R4,CONSOLE         SET VALID CONSOLE NUMBER (MASTER)\n         DROP  R5                 DONT NEED UCM ADDRESSABILITY NOW\nNEXTPAGE LA    R5,UCMTAB          R5 = ADDR OF UCMTAB\n         ICM   R4,15,CONSOLE      R4 = CONSOLE TO BE DISPLAYED\n         BZ    WRTERR4            WE HAVE NO CONSOLE ZERO (MASTER)\n         CH    R4,NUMUCMS         IS NUMBER TOO HIGH?\n         BNH   GETUCM             NO, CONTINUE\nRESETCN  L     R4,OLDCONS         RESET TO OLD CONSOLE\n         ST    R4,CONSOLE         AND SAVE IT\nGETUCM   SLL   R4,2               MULTIPLY BY 4\n         LA    R5,0(R5,R4)        R5 = ADDR OF ADDR OF UCM\n         L     R5,0(0,R5)         R5 = ADDR OF UCM\n         USING UCMLIST,R5\n         L     R6,UCMXB           R6 = ADDR OF RDCM\n         ST    R6,UCMTABX\n         LTR   R6,R6              IS THIS A GRAPHICS CONSOLE?\n         BP    GRAPHICS           YES\n         LA    R5,UCMTAB          R5 = ADDR OF UCMTAB\nWRTERR4  DS    0H\n         B     RESETCN            RESET THE CONSOLE NUMBER\nGRAPHICS EQU   *\nAUTHDONE EQU   *\n         MVC   OLDCONS,CONSOLE\n         MVC   HEADING,HEADING1\n         CLI   ISSUFLAG,X'FF'\n         BNE   CONSINIT\n         MVC   HEADING+45(18),NOTISSUD\n         MVI   ISSUFLAG,X'00'\nCONSINIT MVI   CNSLFLAG,X'00'\n         BAL   R3,AUTHRIZ\n         L     R1,CONSASID        'CONSOLE' ASID IS 5 370/ 6 XA\n         SSAR  R1                 SET 'CONSOLE' AS SECONDARY\n         PRINT ON,GEN\n         SLR   R0,R0              SECONDARY KEY\n         L     R6,UCMTABX\n         LA    R1,4               TRUE LENGTH\n         MVCP  RDCM(R1),0(R6),R0\n         L     R7,RDCM\n         USING STRTDCM,R7\n         LA    R1,L'LASTLINE      TRUE LENGTH\n         MVCP  LASTLINE(R1),DCMINPUT-STRTDCM(R7),R0\n         LA    R1,L'SIBPTR\n         SLR   R0,R0              SET STORAGE KEY\n         MVCP  SIBPTR(R1),DCMASCRN-STRTDCM(R7),R0 PT TO SCRN ADRJPB\n         LA    R1,2\n         MVCP  HEADING+8(R1),DCMDEL-STRTDCM(R7),R0   ROLL DELETE VAL\n         MVCP  RTME(R1),DCMRTME-STRTDCM(R7),R0       RTME\n         MVCP  RNUM(R1),DCMDL-STRTDCM(R7),R0       RTME\n         LA    R1,4\n         MVCP  CONL(R1),DCMLSCRN-STRTDCM(R7),R0\n         L     R8,SIBPTR          R8 = ADDR OF SCREEN IMAGE\n         L     R5,CONL\n         SR    R4,R4\n         SR    R5,R8\n         LA    R5,84(,R5)\n         ST    R5,CONL            SAVE IT\n         LA    R4,SCREEN          MY BUF\n         LA    R4,3737(,R4)\n         LR    R9,R5              BUFFER LEN\nMOVEBUFF DS    0H\n         SH    R8,=H'6'\n         SLR   R0,R0             RESET THE KEY\nMVCPLOOP DS    0H\n         MVCP  0(R5,R4),0(R8),R0 LOOP THRU THE CONSOLE BUFFER\n         BZ    GOTITALL\n         AL    R8,=F'256'        MAX LEN ALLOWED\n         AL    R4,=F'256'        MAX LEN ALLOWED\n         SL    R5,=F'256'        MAX LEN ALLOWED\n         B     MVCPLOOP\n*---------------------------------------------------------------------*\n*        IN ORDER TO ISSUE SVCS THE PRIMARY AND                       *\n*        SECONDARY ADDRSPC MUST BE THE SAME                           *\n*---------------------------------------------------------------------*\nGOTITALL DS    0H\n         EPAR  R1                EXTRACT PRIMARY ASN\n         SSAR  R1\n         BAL   R3,UNAUTH\n         DROP  R5,R7\n         LA    R3,SCREEN         SET POINTER TO FIRST LINE OF BUF\n         LA    R3,3737(,R3)\n         LA    R9,HEADING+10\n         CLI   HEADING+9,C' '\n         BNE   RDMODE\n         LA    R9,HEADING+9\nRDMODE   MVC   0(6,R9),RTMEC\n         SR    R5,R5\n         LH    R5,RTME\n         CVD   R5,DOUBLWD\n         MVC   WORKLINE(5),PATTERN1\n         ED    WORKLINE(5),DOUBLWD+5\n         MVC   6(3,R9),WORKLINE+2\n         MVC   09(6,R9),RNUMC\n         SR    R5,R5\n         IC    R5,RNUM+1\n         CVD   R5,DOUBLWD\n         MVC   WORKLINE(5),PATTERN1\n         ED    WORKLINE(5),DOUBLWD+5\n         MVC   15(3,R9),WORKLINE+2\n         TIME  DEC\n         ST    R0,WORK\n         MVI   WORK+3,X'0C'\n         UNPK  DOUBLWD(7),WORK(4)\n         LA    R9,HEADING+36\n         MVC   0(2,R9),DOUBLWD\n         MVC   3(2,R9),DOUBLWD+2\n         MVC   6(2,R9),DOUBLWD+4\nFIRSTL   L     R9,NUMLINES       NUMBER OF LINES ON PROG TERMINAL\n         L     R5,CONL\n         SR    R4,R4\n         LA    R1,90\n         DR    R4,R1\n         LA    R5,2(,R5)\n         ST    R5,CONL\n         CR    R9,R5\n         BNL   FIRSTL1\n         SR    R5,R9\n         L     R1,CONL\n         SR    R4,R4\n         LA    R5,2(,R5)\n         SR    R1,R5\n         ST    R1,CONL\n         LA    R1,90\n         MR    R4,R1\n         LA    R3,0(R5,R3)\nFIRSTL1  LA    R5,SCREEN+1            ADDRESS OF FIRST LINE\n         LA    R6,PAGEDEF             LINES TO BE DISPLAYED\n         CLI   MOD5FLAG,X'FF'         MOD 5?\n         BNE   NOTMOD5\n         LA    R6,PAGEDEF5\nNOTMOD5  L     R1,CONL\n         SR    R9,R1\n         SR    R10,R10\n         BCTR  R9,0                   MINUS ONE\n         MVC   0(5,R5),0(R6)          CONTROL CHAR\n         MVC   5(79,R5),HEADING       HEADING\n         SR    R15,R15\n         IC    R15,CONSOLE+3\n         SRL   R15,4                  ONLY WANT LEFT BYTE\n         C     R15,TEN\n         BL    NUMERIC1\n         O     R15,CHAROR\n         B     SECONDCK\nNUMERIC1 O     R15,NUMBEROR\nSECONDCK STC   R15,78(R5)\n         IC    R15,CONSOLE+3\n         SLL   R15,28                 ONLY WANT LEFT BYTE\n         SRL   R15,28\n         C     R15,TEN\n         BL    NUMERIC2\n         O     R15,CHAROR\n         B     STORECHR\nNUMERIC2 O     R15,NUMBEROR\nSTORECHR STC   R15,79(R5)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R10,85(,R10)\n         LA    R6,5(,R6)              INCREMENT\n         BCTR  R1,0\n         CLI   HELPFLAG,X'FF'         HELP?\n         BNE   MOVESTUP\n         L     R9,NUMLINES\n         S     R9,=F'07'\n         MVC   0(5,R5),0(R6)\n         MVC   5(79,R5),BLANKS\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,05(,R6)             INCREMENT\n         MVC   0(5,R5),0(R6)\n         LA    R1,HEADING1\n         MVC   5(79,R5),80(R1)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,5(,R6)              INCREMENT\n         MVC   0(5,R5),0(R6)\n         LA    R1,80(,R1)\n         MVC   5(79,R5),80(R1)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,5(,R6)              INCREMENT\n         MVC   0(5,R5),0(R6)\n         MVC   5(79,R5),160(R1)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,5(,R6)              INCREMENT\n         MVC   0(5,R5),0(R6)\n         MVC   5(79,R5),240(R1)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,5(,R6)              INCREMENT\n         LA    R10,420(,R10)\n         B     SPACLOOP\nMOVESTUP LR    R15,R5\n*        MVC   0(4,R5),0(R6)          LINE ADDRESS\n*        MVC   4(1,R5),0(R3)          ATTRIBUTE BYTE\n*        B     MVIT2\nMOVELOOP CLI   CLRFLAG,X'FF'\n         BE    MVIT\n         CLC   5(74,R15),9(R3)        HAS THIS LINE CHANGED?\n         BNE   MVIT\n         CLC   4(1,R15),0(R3)         ATTRIBUTE BYTE CHANGED?\n         BE    SKPMV                  NO NEED SENDING DOWN THE LINE\nMVIT     MVC   0(4,R5),0(R6)          LINE ADDRESS\n         MVC   4(1,R5),0(R3)          ATTRIBUTE BYTE\n         MVI   CLRFLAG,X'FF'          SCREEN HAS CHANGED FROM HERE DOWN\nMVIT2    MVC   5(79,R5),9(R3)         MOVE LINE OF PRINT\n         MVC   80(4,R5),BLANKS\n         LA    R5,84(,R5)\n         LA    R10,84(,R10)\nSKPMV    LA    R6,05(,R6)             INCREMENT\n         LA    R3,90(,R3)             INCREMENT\n*        LA    R3,6(,R3)              INCREMENT\n         LA    R15,84(,R15)\n*        AP    HEADING(2),HEADING(2)\n         BCT   R1,MOVELOOP            LOOP\n         MVI   CLRFLAG,X'00'\nSPACLOOP LA    R6,05(,R6)             INCREMENT\n         BCTR  R9,0\n         C     R9,=F'0'\n         BH    SPACLOOP\n         MVC   0(5,R5),0(R6)          LINE ADDRESS\n         MVI   4(R5),X'C9'            ATTRIBUTE\n         MVI   5(R5),X'13'            INSERT CURSOR\n         CLI   HELPFLAG,X'FF'\n         BE    GOAHEAD2\n         CLI   IPLFLAG,X'FF'\n         BE    GOAHEAD2\n         CLI   AUTOFLAG,X'FF'\n         BE    AUTOROLL\nGOAHEAD  CLI   RESHOWFL,X'FF'\n         BNE   GOAHEAD2\n         MVI   RESHOWFL,X'00'\n         MVC   6(72,R5),CMDLINE+4\n         B     GOAHEAD3\nGOAHEAD2 MVC   6(79,R5),BLANKS        LAST LINE IS INPUT LINE\nGOAHEAD3 MVI   CMDFLAG,X'00'\n         LA    R10,84(,R10)\n         LR    R0,R10\n         LA    R1,SCREEN              ADDRESS OF SCREEN\n         TPUT  (1),(0),FULLSCR        TPUT\n         MVC   REPLY,BLANKS           CLEAR\nTGET1    TGET  REPLY,84,ASIS,WAIT     INPUT\n         MVI   HELPFLAG,X'00'\n         B     CHEKOUT\nAUTOROLL EQU   *\n         LA    R1,SCREEN              ADDRESS OF SCREEN\n         CLI   RESHOWFL,X'FF'\n         BNE   GOAHEAD5\n         MVI   RESHOWFL,X'00'\n         MVC   6(72,R5),CMDLINE+4\n         MVC   REPLY,BLANKS\n         LA    R10,72(,R10)\n         B     GOAHEAD5\nGOAHEAD5 CLI   CMDFLAG,X'FF'\n         BNE   AUTOTPUT\n         MVC   0(5,R5),0(R6)          LINE ADDRESS\n         MVI   4(R5),X'C9'            ATTRIBUTE\n         MVI   5(R5),X'13'            INSERT CURSOR\n         MVI   CMDFLAG,X'00'\nAUTOTPUT LA    R0,5(,R10)\n*        LR    R0,R10\n         TPUT  (1),(0),FULLSCR\n         STIMER WAIT,BINTVL=TIMER\n         TGET  REPLY,70,ASIS,NOWAIT\nCHEKOUT  CLI   REPLY,X'7D'\n         BE    GOTSTUFF\n         NI    REPLY,X'0F'\n         CLI   REPLY,X'01'\n         BE    HELP\n         CLI   REPLY,X'02'\n         BE    AUTOSTOP\n         CLI   REPLY,X'03'\n         BE    AXFREE\n         CLI   REPLY,X'04'\n         BE    AUTOON\n         CLI   REPLY,X'05'\n         BE    CNSLSW\n         CLI   REPLY,X'06'\n         BE    RESHOW\n         CLI   REPLY,X'07'\n         BE    MTT\n         CLI   REPLY,X'08'\n         BE    AUTO10\n         CLI   REPLY,X'09'\n         BE    AUTO2\n         CLI   REPLY,X'0A'\n         BE    OMON\n         CLI   REPLY,X'0B'\n         BE    AUTO4\n         CLI   REPLY,X'0C'\n         BE    IPLINFO\nNOTIFY   MVI   CLRFLAG,X'FF'\n         MVI   CMDFLAG,X'FF'\n         B     AUTHDONE\nCNSLSW   MVI   CNSLFLAG,X'FF'\n         MVI   REPLY,X'00'\n         MVI   THRUFLAG,X'00'\n         MVI   CLRFLAG,X'FF'\n         B     SHOWCONS\nRESHOW   MVI   RESHOWFL,X'FF'\n         B     AUTHDONE\nIPLINFO  MVC   WORKLINE,BLANKS\n         MVC   WORKLINE+10(46),MESSAGE\n         LA    R1,16              HEX 10\n         L     R2,0(R1)           ADDRESS OV CVT\n         USING CVT,R2\n         L     R3,CVTSMCA         ADDRESS OF SMF CONTROL AREA\n         L     R1,CVTSYSAD\n         MVC   WORKLINE+72(3),13(1)\n         MVC   WORKLINE+65(7),=C'SYSRES='\n         USING SMCABASE,R3\n         MVC   IPLDATE,SMCAIDTE   IPL DATE\n         MVC   IPLTIME,SMCAITME   IPL TIME\n         DROP  R3\n         L     R3,CVTASMVT\n         TM    1(R3),X'08'     CLPA?\n         BNZ   NOCLPA             1 MEANS A QUICK START - NO CLPA WAS\n         MVC   WORKLINE+57(3),=C'YES'\n         B     DATEEDIT\nNOCLPA   MVC   WORKLINE+57(3),=C'NO '\nDATEEDIT MVC   WORKLINE+31(5),PATTERN1\n         ED    WORKLINE+31(5),IPLDATE+1 MAKE PRINTABLE\n         DROP  R2\n         L     R6,IPLTIME\n         SRDA  R6,32(0)\n         L     R3,THREE60\n         DR    R6,R3\n         CVD   R7,DOUBLWD\n         MVC   WORK(4),=X'40212020'\n         ED    WORK(4),DOUBLWD+6\n         MVC   WORKLINE+43(2),WORK+2\n         SRDA  R6,32              SHIFT REMAINDER\n         L     R3,SIXTY\n         DR    R6,R3\n         CVD   R7,DOUBLWD\n         MVC   WORK(4),=X'F0212020'\n         ED    WORK(4),DOUBLWD+6\n         MVC   WORKLINE+46(2),WORK+2\n         LA    R5,SCREEN+1            ADDRESS OF FIRST LINE\n         LA    R6,PAGEDEF             LINES TO BE DISPLAYED\n         LA    R10,85\n         CLI   MOD5FLAG,X'FF'\n         BNE   NONMOD5\n         LA    R6,PAGEDEF5\nNONMOD5  L     R9,NUMLINES\n         BCTR  R9,0\n         MVC   0(5,R5),0(R6)\n         MVC   5(79,R5),WORKLINE\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,05(,R6)             INCREMENT\n         BCTR  R9,0\n         TPUT  CLEAR,17,FULLSCR\n         MVI   IPLFLAG,X'FF'\n         TCLEARQ INPUT\n         B     SPACLOOP\nMTT      L     R1,SAVECPPL\n         LINK  EP=MTT\n         TPUT  CLEAR,17,FULLSCR\n         MVI   AUTOFLAG,X'00'\n         MVI   CLRFLAG,X'FF'\n         B     AUTHDONE\nOMON     L     R1,SAVECPPL\n         LINK  EP=RMFMON\n         TPUT  CLEAR,17,FULLSCR\n         MVI   AUTOFLAG,X'00'\n         MVI   CLRFLAG,X'FF'\n         B     AUTHDONE\nHELP     MVI   HELPFLAG,X'FF'\n         MVI   AUTOFLAG,X'00'\n         TPUT  CLEAR,17,FULLSCR\n         MVI   CLRFLAG,X'FF'\n*        TCLEARQ INPUT\n         B     FIRSTL\nAUTOON   MVC   TIMER,ONE\n         CLI   USERFLAG,X'FF'\n         BE    AUTO2\n         B     AUTOSET\nAUTO2    MVC   TIMER,THREE\n*        CLC   =X'5CF0',CURSOR     MOD2? KEEP MIKE FROM AUTOING AT 1SEC\n*        BE    AUTO4\n         B     AUTOSET\nAUTO4    MVC   TIMER,FIVE\nAUTOSET  MVI   AUTOFLAG,X'FF'\n         MVC   5(72,R5),BLANKS\n         MVI   REPLY,X'00'\n         B     AUTHDONE\nAUTO10   MVC   TIMER,=F'990'            APP 10 SECS\n         B     AUTOSET\nAUTOSTOP MVI   AUTOFLAG,X'00'\n         B     AUTHDONE\nSKIPALL  MVI   ISSUFLAG,X'FF'\n         B     AUTHDONE\nGOTSTUFF DS    0H\n         CLI   REPLY+6,C'>'        IS IT NOTIFY MESSAGE?\n         BE    NOTIFY              THEN EXIT\n         OC    REPLY+6(74),BLANKS  ALL INPUT UPPER CASE\n         CLC   REPLY+6(70),BLANKS  COMMAND AREA IS SPACES?\n         BE    AUTHDONE            THEN A COMMAND WAS NOT ENTERED\n         MVC   CMDLINE+4(72),REPLY+6\n         MVC   CMDLINE(4),CMDFMT\n         MVC   REPLY,BLANKS\n         CLI   CMDLINE+4,C'Z'      IS IT END,\n         BE    AXFREE              THEN EXIT\n         CLI   CMDLINE+4,C'X'      IS IT END,\n         BE    AXFREE              THEN EXIT\n         CLC   CMDLINE+4(3),=C'END' IS IT END,\n         BE    AXFREE               THEN EXIT\nGOTCMD   TPUT  CLEAR,17,FULLSCR\n         MVI   CLRFLAG,X'FF'\n         CLI   USERFLAG,X'FF'\n         BNE   NOWTO\nLOGLINE  MVC   WTOCMD(100),WTOLIST\n         MVC   WTOCMD+8(72),CMDLINE+4\n         MVC   WTOCMD+78(4),USERID\n         LA    R7,WTOCMD\n         WTL   MF=(E,(R7))\nNOWTO    BAL   R3,AUTHRIZ\n         SLR   R0,0                 CLEAR REG 0\n         L     R0,CONSOLE\nISSUE    LA    R1,CMDLINE          GET ADDRESS OF COMMAND I SMF\n         SVC   34                  ISSUE COMMAND VIA SVC 34\n         STIMER WAIT,BINTVL=ONE\n         BAL   R3,UNAUTH\n         MVI   CMDFLAG,X'FF'\n         B     AUTHDONE\nNOAUTH   LA    R7,TABLEND\n         LA    R6,4\n         LA    R5,TABLE\nTBLOOP   CLC   0(4,R5),USERID\n         BE    USEROK\n         BXLE  R5,R6,TBLOOP\n         TPUT  MSGNO1,13\n         B     SHOWRTRN\nAUTHRIZ  STAX  DEFER=YES\n         L     R1,AUTH\n         LA    R0,1\n         SYSDSVC SVC=244\n         MODESET MF=(E,SUPRMOD)  GET INTO SUPV STATE AND KEY ZERO\n         BR    R3                ****************************\nUNAUTH   L     R1,16             *  A                       *\n         USING CVT,R1            *   D                      *\n         L     R1,CVTTCBP        *    D      J              *\n         DROP  R1                *     R      S             *\n         L     R1,4(R1)          *      E      C            *\n         USING TCB,R1            *       S      B           *\n         L     R1,TCBJSCB        *        S                 *\n         DROP  R1                ****************************\n         NI    236(R1),X'FE'     SET AUTHORIZATION OFF\n         MODESET MF=(E,PROBMOD)\n         STAX  DEFER=NO\n         BR    R3\n         EJECT\n         LTORG\n*---------------------------------------------------------------------*\n*                         C O N S T A N T S                           *\n*---------------------------------------------------------------------*\nCMDFMT   DC    Y(76),Y(00)            LENGTH OF COMMAND\nMESSAGE  DC    CL46'LAST SYSTEM IPL DATE XXXXX  TIME HH:MM  CLPA ='\nPATTERN1 DC    XL5'2120202020'\nTHREE60  DC    F'360000'\nSIXTY    DC    F'6000'\nAXLIST   DC    H'1',H'0'           AXRES PARMLIST\n         CNOP  0,8\n*---------------------------------------------------------------------*\n*               327X SCREEN CLEAR CONTROL CHARACTERS                  *\n*---------------------------------------------------------------------*\nCLR      DC    X'7E'              WCC - CLEAR SCREEN\n         DC    X'11F56F'          SBA TO ROW 43, COL 80\n         DC    X'114040'          SBA TO ROW 1, COL 1\n         DC    X'3C404000'        FILL SCREEN WITH NULLS\n         DC    X'11F460'          ROW 43 COL 2\n         DC    X'1DE913'          SBA TO ROW 1, COL 1 1DC813\nONE      DC    A(175)             1.75 SECOND\nFIVE     DC    A(444)             5 SECONDS\nTHREE    DC    A(220)             3 SECONDS\nTEN      DC    F'10'\nNUMBEROR DC    XL4'000000F0'\nCHAROR   DC    XL4'000000C0'\nHEXFS    DC    XL4'FFFFFFFF'\nHEXZIP   DC    2F'0000000000000000'\nMSGNO1   DC    CL13'SYSTEM ACTIVE'\n         DS    0F\nWTOLIST  WTL   '                                                       X\n                                       ZTPR0200',MF=L\n         DS    0F\nAUTH     DC    CL4'AUTH'\n         SPACE 5\nSUPRMOD  MODESET KEY=ZERO,MODE=SUP,MF=L\nPROBMOD  MODESET KEY=NZERO,MODE=PROB,MF=L\nTABLE    DC    CL4'XXXX'\nTABLEND  DC    CL4'XXXX'\nRTMEC    DC    CL6',RTME='\nRNUMC    DC    CL6',RNUM='\nMOD2     DC    CL3'***'\nFORTY3   DC    H'43'\nTHIRTY2  DC    H'32'\nEIGHTY   DC    H'80'\nPAGEDEF  DC    X'1140401DE8'          ROW  1   COL  1\n         DC    X'11C1501DC4'          ROW  2   COL  1\n         DC    X'11C2601DC4'          ROW  3   COL  1\n         DC    X'11C3F01DC4'          ROW  4   COL  1\n         DC    X'11C5401DC4'          ROW  5   COL  1\n         DC    X'11C6501DC4'          ROW  6   COL  1\n         DC    X'11C7601DC4'          ROW  7   COL  1\n         DC    X'11C8F01DC4'          ROW  8   COL  1\n         DC    X'114A401DC4'          ROW  9   COL  1\n         DC    X'114B501DC4'          ROW 10   COL  1\n         DC    X'114C601DC4'          ROW 11   COL  1\n         DC    X'114DF01DC4'          ROW 12   COL  1\n         DC    X'114F401DC4'          ROW 13   COL  1\n         DC    X'1150501DC4'          ROW 14   COL  1\n         DC    X'11D1601DC4'          ROW 15   COL  1\n         DC    X'11D2F01DC4'          ROW 16   COL  1\n         DC    X'11D4401DC4'          ROW 17   COL  1\n         DC    X'11D5501DC4'          ROW 18   COL  1\n         DC    X'11D6601DC4'          ROW 19   COL  1\n         DC    X'11D7F01DC4'          ROW 20   COL  1\n         DC    X'11D9401DC4'          ROW 21   COL  1\n         DC    X'115A501DC4'          ROW 22   COL  1\n         DC    X'115B601DC4'          ROW 23   COL  1\n         DC    X'115CF01DC4'          ROW 24   COL  1\n         DC    X'115E401DC4'          ROW 25   COL  1\n         DC    X'115F501DC4'          ROW 26   COL  1\n         DC    X'1160601DC4'          ROW 27   COL  1\n         DC    X'1161F01DC4'          ROW 28   COL  1\n         DC    X'11E3401DC4'          ROW 29   COL  1\n         DC    X'11E4501DC4'          ROW 30   COL  1\n         DC    X'11E5601DC4'          ROW 31   COL  1\n         DC    X'11E6F01DC4'          ROW 32   COL  1\n         DC    X'11E8401DC4'          ROW 33   COL  1\n         DC    X'11E9501DC4'          ROW 34   COL  1\n         DC    X'116A601DC4'          ROW 35   COL  1\n         DC    X'116BF01DC4'          ROW 36   COL  1\n         DC    X'116D401DC4'          ROW 37   COL  1\n         DC    X'116E501DC4'          ROW 38   COL  1\n         DC    X'116F601DC4'          ROW 39   COL  1\n         DC    X'11F0F01DC4'          ROW 40   COL  1\n         DC    X'11F2401DC4'          ROW 41   COL  1\n         DC    X'11F3501DC4'          ROW 42   COL  1\n         DC    X'11F4601DC8'          ROW 43   COL  1\nPAGEDEF5 DC    X'1140401DE8'          ROW  1   COL  1 MODEL 5\n         DC    X'11C2C41DE4'          ROW  2   COL  1\n         DC    X'11C4C81DE4'          ROW  3   COL  1\n         DC    X'11C64C1DE4'          ROW  4   COL  1\n         DC    X'11C8501DE4'          ROW  5   COL  1\n         DC    X'114AD41DE4'          ROW  6   COL  1\n         DC    X'114CD81DE4'          ROW  7   COL  1\n         DC    X'114E5C1DE4'          ROW  8   COL  1\n         DC    X'1150601DE4'          ROW  9   COL  1\n         DC    X'11D2E41DE4'          ROW 10   COL  1\n         DC    X'11D4E81DE4'          ROW 11   COL  1\n         DC    X'11D66C1DE4'          ROW 12   COL  1\n         DC    X'11D8F01DE4'          ROW 13   COL  1\n         DC    X'115AF41DE4'          ROW 14   COL  1\n         DC    X'115CF81DE4'          ROW 15   COL  1\n         DC    X'115E7C1DE4'          ROW 16   COL  1\n         DC    X'1161401DE4'          ROW 17   COL  1\n         DC    X'11E3C41DE4'          ROW 18   COL  1\n         DC    X'11E5C81DE4'          ROW 19   COL  1\n         DC    X'11E74C1DE4'          ROW 20   COL  1\n         DC    X'11E9501DE4'          ROW 21   COL  1\n         DC    X'116BD41DE4'          ROW 22   COL  1\n         DC    X'116DD81DE4'          ROW 23   COL  1\n         DC    X'116F5C1DE4'          ROW 24   COL  1\n         DC    X'11F1601DE4'          ROW 25   COL  1\n         DC    X'11F3E41DE4'          ROW 26   COL  1\n         DC    X'11F5E81DE4'          ROW 27   COL  1\nNOTISSUD DC    CL18'COMMAND NOT ISSUED'\nHEADING1 DC    CL80'K S,DEL=                            99:99:99       X\n                             CONSOLE XX    '\nHELPMSG1 DC    CL80'PF-1   THIS DISPLAY         PF-2  STOP AUTO UPDATE X\n                 PF-3   END                '\nHELPMSG2 DC    CL80'PF-4   AUTO UPDATE 1 SEC    PF-5  ALTERNATE CONSOLEX\n                 PF-6   RESHOW LAST COMMAND'\nHELPMSG3 DC    CL80'PF-7   PAGE THRU MTT        PF-8  AUTO UPDATE 10 SEX\n               C PF-9   AUTO UPDATE 4 SEC  '\nHELPMSG4 DC    CL80'PF-10  RMFMON               PF-11 AUTO UPDATE 2 SECX\n                 PF-12  IPL INFO           '\nWORKAREA DSECT\nSAVEAREA DS    18F\nUCMTABX  DS    F\nRDCM     DS    F\nWORKLINE DS    CL80\nREPLY    DS    CL80\nBLANKS   DS    CL80\nCMDLINE  DS    CL80\nHEADING  DS    CL80\nSIBPTR   DS    F                   PRT TO SCREEN IMAGE BUFFER\nUCMTAB   DS    F\n         DS    35F                PROVIDE SPACE FOR 20 UCM ADDRESSES\nUCMTABE  EQU   *\nNUMUCMS  DS    H\nOLDCONS  DS    F                   PREVIOUS CONSOLE NUMBER\n         SPACE 5\nCLEAR    DS    XL2                WCC - CLEAR SCREEN\nENDOFSCR DS    XL2                SBA TO ROW XX, COL 80\n         DS    XL3                SBA TO ROW 1, COL 1\n         DS    XL5                FILL SCREEN WITH NULLS\nCURSOR   DS    XL2                SBA TO ROW 1, COL 1\n         DS    XL3                INSERT CURSOR\nLASTLINE DS    CL255' '           OPERATORS COMMAND INPUT LINE\nCONNUM   DS    CL2' 1'            CONSOLE NUMBER\nCTYPE    DS    CL4' '\nMASTER   DS    CL8' '             MASTER CONSOLE\nSYS      DS    CL4' '             SYS  AUTHORIZATION\nIO       DS    CL4' '             I/O  AUTHORIZATION\nCONS     DS    CL5' '             CONS AUTHORIZATION\n         DS    CL3' '\n*NIT     DS    CL4' '             UNIT ADDR OF CONSOLE\nTIME     DS    CL3' '             SECONDS REMAINING ON TIMER\nSLASH    DS    CL1'/'\nPAUSE    DS    CL3'1.0'           DELAY IN SECONDS\n         DS    CL2' '\nAREAA    DS    XL1\nCNSLFLAG DS    XL1\nTHRUFLAG DS    XL1\nAUTOFLAG DS    XL1\nISSUFLAG DS    XL1\nRESHOWFL DS    XL1\nHELPFLAG DS    XL1\nUSERFLAG DS    XL1\nCLRFLAG  DS    XL1\nIPLFLAG  DS    XL1\nMOD5FLAG DS    XL1\nCMDFLAG  DS    XL1\nCONSOLE  DS    F                   CONSOLE TO BE LOOKED AT\nCONSASID DS    F                   'CONSOLE' ASID FOR CMS\nNUMLINES DS    F\nCONL     DS    F\nSAVECPPL DS    F\nTPUTLEN  DS    F\nTIMER    DS    F\nRTME     DS    H\nRNUM     DS    H\nUSERID   DS    CL7\nTABAREA  DS    CL77\nSELCODE  DS    CL3            LINE SELECTION CODE\nSELSAVE  DS    CL3            LINE SELECTION CODE SAVE AREA\nWORK     DS    D\nIPLDATE  DS    F\nIPLTIME  DS    F\nDOUBLWD  DS    D\nWTOCMD   DS    CL104\nSCREEN   DS    XL1       SPACE FOR WCC\n         DS    43CL84\n         DS    CL124     EXTRA FOR MOD5\nBUF      DS    45CL133            OPERATORS SCREEN BUFFER\nWORKLENG EQU   *-WORKAREA\n         PRINT NOGEN\n         TITLE '*** PROTECTED STEP CONTROL BLOCK DSECT ***'\n         IKJPSCB                   COPY THE PSCB FORMAT DSECT\n         TITLE '*** COMMAND PROCESSOR PARAMETER LIST DSECT ***'\n         IKJCPPL                   COMMAND PROCESSOR PARM LIST\n         TITLE '*** TSO USER PROFILE TABLE DSECT ***'\n         IKJUPT                    TSO USER PROFILE TABLE\n         TITLE '*** COMMUNICATION VECTOR TABLE ***'\n         CVT   DSECT=YES\n         TITLE '*** J S C B ***'\n         IEZJSCB\n         TITLE '*** T  C  B ***'\n         IKJTCB DSECT=YES\n*        TITLE '*** RDCM DSECT ***'\n*EERDCM  DSECT ,\n*        IEECRDCM\n         TITLE '*** TDCM DSECT ***'\nIEETDCM  DSECT ,\n         IEECDCM\n         TITLE '*** MULTIPLE CONSOLE SUPPORT (MCS) UCM PREFIX ***'\n         IEECUCM FORMAT=NEW\n         IHAASVT\n         TITLE '*** ADDRESS SPACE CONTROL BLOCK ***'\n         IHAASCB\n         TITLE '*** TSB DSECT ***'\n         IKJTSB LIST=YES\n         TITLE '*** CHAIN     ***'\n         IEECHAIN\n         IEESMCA\n         END\n./ ADD NAME=CONESAJ  0100-93082-93082-1928-00030-00030-00000-OLDVERS\n//MURFC    JOB (6496,B014),MURF,CLASS=O,MSGCLASS=3,NOTIFY=MURF\n//*********************************************************************\n//*1.CHANGE SYSIN AND SYSLIB DD TO CORRECT UNLOADED CBT FILE NAME.    *\n//*2.CHANGE SYSLMOD TO CORRECT LOAD LIB.                              *\n//*********************************************************************\n//COM     EXEC PGM=IEV90,REGION=512K,\n//    PARM='LOAD,XREF(SHORT),LINECNT=55,NODECK,RENT'\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB\n//         DD  DISP=SHR,DSN=SYS1.AMODGEN\n//         DD  DSN=LBKQ.FILE025.PDS,DISP=SHR\n//SYSLIN   DD  UNIT=VIO,DSN=&LOADSET,DISP=(MOD,PASS),\n//             SPACE=(CYL,(2,2)),DCB=BLKSIZE=1680\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(10,2))\n//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(12,2))\n//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(20,2))\n//SYSPUNCH DD  DUMMY =*,DCB=FUNC=I\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSIN    DD  DSN=LBKQ.FILE025.PDS(CONESA),DISP=SHR\n//*\n//LKED         EXEC PGM=IEWL,REGION=1024K,COND=(4,LT),\n//             PARM='XREF,LET,LIST,RENT,REUS'\n//SYSPRINT     DD   SYSOUT=*\n//SYSUT1       DD   DSN=&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD      DD   DISP=SHR,DSN=SYSX.LOADLIB(ZTPR0200)\n//SYSLIN       DD   UNIT=SYSDA,DSN=&LOADSET,DISP=(OLD,DELETE)\n//             DD   DDNAME=SYSIN\n//SYSIN        DD   *\n ALIAS CONSOLE\n NAME ZTPR0200(R)\n./ ADD NAME=KLEENUP  0100-93082-93082-1928-00049-00049-00000-OLDVERS\n/* REXX EXEC - NEEDS TO GO IN THE SYSPROC OR SYSEXEC DD.             */\n/* KLEENUP COMMAND FORMAT:                                           */\n/* KLEENUP GDGDSN MMM NNN                                            */\n/* IT WILL GENERATE HSM COMMANDS TO MIGRATE DISK GDG'S,  SPECIFY     */\n/* MIGRATIONLEVEL 1 OR 2 BY PUTTING ML1 OR ML2 AFTER THE DSN AT  MMM */\n/* CAN SPECIFY NUMBER TO KEEP ON DASD BY A NUMBER FOLLOWING THIS NNN */\n/* EXAMPLE:                                                          */\n/*           KLEENUP SYS2.LISTCAT.USERCAT ML2 1                      */\n/* THIS WILL ISSUE COMMANDS TO MIGRATE ALL BUT THE CURRENT GEN. TO   */\n/* MIGRATIONLEVEL 2.                                                 */\n/*           KLEENUP SYS2.LISTCAT.USERCAT                            */\n/* THIS WILL ISSUE COMMANDS TO MIGRATE ALL BUT THE CURRENT GEN. TO   */\n/* MIGRATIONLEVEL 1 BY DEFAULT.                                      */\nARG DS LVL NUM\nX=OUTTRAP('LN.')\n\"LISTC ENT(\" \"'\"DS\"'\" \") ALL\"\nX=OUTTRAP(OFF);\nIF LVL \u00ac= 'ML2' OR 'WAIT' OR 'NOWAIT' THEN\n         LVL = ' '\nIF NUM = '' THEN DO\n            SAY 'MIGRATING OFF ALL BUT CURRENT GENERATION ' DS\n            NUM = 1\n            END\nTOT=0\n    DO I= 1 TO LN.0\n/*  SAY \"LN.\"I \"=\" LN.I */\n    IF SUBSTR(LN.I,3,09) = 'NONVSAM' THEN DO\n       PARSE VALUE LN.I WITH NV DSH DSN\n       N=I+6\n       VOL=SUBSTR(LN.N,26,31)\n       PUSH DSN\n       PUSH VOL\n       TOT=TOT+1\n       END\n    END\n    DO I = 1 TO TOT\n       PULL VOL\n       PULL DSN\n       IF I > NUM THEN DO\n        IF SUBSTR(VOL,1,6) \u00ac= \"MIGRAT\"  THEN DO\n            CALL PRG\n            END\n        END\n    END\nRETURN\nPRG:\nSAY \"HMIGRATE (\" \"'\"DSN\"'\"  \")\" LVL\n\"HMIGRATE (\" \"'\"DSN\"'\"  \")\" LVL\n           RETURN\n./ ADD NAME=MTTESA   0100-93082-93082-1928-00718-00718-00000-OLDVERS\n*******************************************************************     DOC FILE\n*                                                                 *     DOC FILE\n*                        D I S C L A I M E R                      *     DOC FILE\n*                                                                 *     DOC FILE\n*******************************************************************     DOC FILE\n*                                                                 *     DOC FILE\n* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *     DOC FILE\n* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        *     DOC FILE\n* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *     DOC FILE\n* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *     DOC FILE\n* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *     DOC FILE\n* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *     DOC FILE\n* SUPPLIED .                                                      *     DOC FILE\n*                                                                 *     DOC FILE\n* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *     DOC FILE\n* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *     DOC FILE\n* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *     DOC FILE\n* FUTURE .                                                        *     DOC FILE\n*                                                                 *     DOC FILE\n*******************************************************************     DOC FILE\n***********************************************************************\n*   TITLE: ZTPR0205                                                   *\n*   AUTHOR: MURPHY                                                    *\n*   DATE-WRITTEN: 10/16/84                                            *\n*                 11/08/88  -  CORRECT JOB#/TIME, ADD HL - PMM        *\n*                 04/06/90  -  UPDATED FOR APF FROM PARMLIB - PMM     *\n*   REFERENCE: OS/VS2 MVS SYSTEM PROGRAMMING LIBRARY:SUPERVISOR       *\n*              GC28-1046-1                                            *\n*   REMARKS:                                                          *\n*                                                                     *\n*        USE CROSS MEMORY SERVICES TO PAGE THROUGH CONSOLE MESSAGES   *\n*   IN THE MASTER TRACE TABLE IN THE MASTER ADDRESS SPACE.            *\n*                                                                     *\n***********************************************************************\nZTPR0205 CSECT\n         BEGIN PROGRAM=ZTPR0205\n*        SAVES REGISTERS AND INSERTS PROGRAM, DATE, AND TIME\n         LR    R12,R15            LOAD ADDRESS OF ENTRY POINT\n         LR    R2,R1              SAVE CPPL\n         USING ZTPR0205,R12       R12 BASE REGISTER\n         GETMAIN RC,LV=WORKL      GETMAIN  FOR SAVEAREA/WORK\n         LTR   R15,R15            CHECK RETURN CODE\n         BNZ   GETMERR\n         LR    R3,R1              ADDRESS OF WORK AREA/SAVEAREA\n         USING SAVDSECT,R3        ADDRESSABILITY\n         ST    R13,SAVEAREA+4     STORE CALLER SAVEAREA ADDRESS (HSA)\n         ST    R3,8(,R13)         ADD OF PROGRAM SAVE IN CALLER(LSA)\n         LR    R13,R3             ADDRESS OF SAVEAREA IN R13\n         DROP  R3\n         USING SAVDSECT,R13\n         USING CPPL,R2\n         L     R6,CPPLPSCB\n         DROP  R2\n         USING PSCB,R6\n         MVC   USERID,PSCBUSER\n         MVC   USERIDL,PSCBUSRL\n         MVC   USERATTR,PSCBATR1  SAVE OPER AUTH INFO\n         MVI   USERFLAG,X'00'\n         MVI   CMDFLAG,X'00'\n         DROP  R6\n         ST    R2,CPPLSAVE\n         MVC   SCRTPUTL,=AL4(DSCREENL+41*80) LENGTH FOR TPUT 43 LINE\n         MVC   SCRLENG,=AL4(41*80) LENGTH FOR MOVE LONG 43 LINE DEFAULT\n         MVC   SCREEN(108),DSCREEN SCREEN IMAGE\n         GTSIZE\n         LTR   R0,R0\n         BZ    FREERET2            NON-DISPLAY TERMINAL\n         CH    R1,=H'80'           80 WIDE?\n         BNE   SETM2               NO - SET IT TO THIS\n         CH    R0,=H'43'           MOD 4?\n         BE    VERIFY\n         CH    R0,=H'32'           MOD 3?\n         BNE   SETM2\nMODEL3   MVC   SCRLENG,=AL4(28*80) 30 LINE DISPLAY\n         MVC   SCRTPUTL,=AL4(28*80+DSCREENL)\n         MVC   DSCRO3,=X'E6F0'     (32,1)\n         MVC   DSCRO4,=X'E7F7'     (32,72)\n         B     VERIFY\nSETM2    STSIZE SIZE=80,LINE=24\n         MVC   SCRLENG,=AL4(22*80) LENGTH FOR MOVE LONG\n         MVC   SCRTPUTL,=AL4(22*80+DSCREENL) LENGTH OF TPUT\n         MVC   DSCRO3,=X'5CF0'     24,1\n         MVC   DSCRO4,=X'5DF7'     24,72\nVERIFY   EQU   *\n         STFSMODE ON,INITIAL=YES\n         LA    R7,TABLEND\n         LA    R6,4\n         LA    R1,TABLE\nTBLOOP   CLC   0(4,R1),USERID\n         BE    USEROK\n         BXLE  R1,R6,TBLOOP\n         TM    USERATTR,X'80'   OPER AUTHORITY?\n         BZ    NOAUTH\n         MVI   CMDFLAG,X'FF'\n         B     VEROK1\nUSEROK   MVI   USERFLAG,X'FF'\n         B     VEROK1\nFREEAX   MVI   FREEFLAG,X'FF'\n         B     VEROK1\n*EROK    DELETE EP=IKJEFFUT\nVEROK1   STAX  DEFER=YES         WE DO NOT WANT AN INTERRUPT WHILE\n         TESTAUTH FCTN=1\n         LTR   R15,R15\n         BZ    GOTAUTH\n         L     R1,AUTH\n         LA    R0,1\n         SYSDSVC\nGOTAUTH  MODESET MF=(E,SUPRMOD)\n         CLI   FREEFLAG,X'FF'\n         BNE   AXIT\n         AXFRE AXLIST=AXLIST     FREE    AN AUTHORIZATION INDEX IN A.T.\n         B     SCRENDEF\nNOTAUTH  TPUT  MSGNO2,6\n         B     FREERET2\nAXIT     AXRES AXLIST=AXLIST     RESERVE AN AUTHORIZATION INDEX IN A.T.\n         LA    R1,1              MASTER IS ASID 1\n         AXEXT ASID=(1)          DETERMINE AUTH TABLE VALUE OF ASID 1\n         AXSET AX=(0)            SET TO ASID 1'S AUTHORIZATION INDEX\nSCRENDEF CLI   FREEFLAG,X'FF'\n         BE    FREERET\n         MVC   COMMAND,COMMANDL\n         MVI   HEX40S,X'40'         SPACE\n         MVC   HEX40S+1(79),HEX40S  PROPAGATE SPACES TO INITIALIZE\n         L     R2,SCRLENG           SCREEN LENGTH\n         S     R2,=F'0160'          MINUS 2 LINES\n         LA    R5,DETAIL            ADDRESS OF SCREEN\n         ST    R5,FRSTLINE\n         LA    R2,0(R5,R2)          ADDRESS IN GETMAIN AREA\n         ST    R2,LASTLINE          SAVE THE ADDRESS\n         LA    R1,16\n         L     R1,0(R1)\n         USING CVT,R1\n         L     R1,CVTMSER\n         DROP  R1\n         USING BASE,R1\n         L     R3,BAMTTBL        ADDRESS OF MASTER TRACE TABLE\n         SR    R4,R4\n         ICM   R4,B'0111',BAMTLEN LENGTH OF MTT W/O FIRST BYTE OF WORD\n         BZ    NOTACTIV\n         ST    R4,MTTSIZE\n         ST    R3,MTTADDR\n         DROP  R1\n         GETMAIN RC,LV=(4)       LENGTH WAS IN R4\n         LTR   R15,R15\n         BNZ   GETMERR\n         LR    R11,R1            ADDRESS OF OUR FUTURE COPY OF MTT\nAUTHRIZE L     R9,MTTSIZE\n         L     R3,MTTADDR\n         SRA   R9,8             DIVIDE BY 256\n         BNP   NOTACTIV\n         LA    R1,1\n         SSAR  R1                SECONDARY ADDRESS SPACE OF ASID 1!!!\n         SR    R5,R5\n         LA    R6,0(R4,R11)      END OF GETMAIN AREA\n         LA    R7,256\n         LR    R10,R11\nMOVELOOP MVCP  0(R7,R10),0(R3),R5 MOVES MAX OF 256 BYTES\n         LA    R10,256(,R10)\n         LA    R3,256(,R3)\n         BCT   R9,MOVELOOP\n         B     ALLMOVED\nFREERET  L     R4,MTTSIZE\n         FREEMAIN RC,LV=(4),A=(11) FREE SECOND GETMAIN AREA\n         LTR   R15,R15            CHECK RETURN CODE\n         BNZ   FREEMERR\n         SR    R1,R1                   ****************************\n         L     R1,16                   *  A                       *\n         USING CVT,R1                  *   D                      *\n         L     R1,CVTTCBP              *    D      J              *\n         DROP  R1                      *     R      S             *\n         L     R1,4(R1)                *      E      C            *\n         USING TCB,R1                  *       S      B           *\n         L     R1,TCBJSCB              *        S                 *\n         DROP  R1                      ****************************\n         USING IEZJSCB,R1\n         NI    JSCBOPTS,X'FF'-JSCBAUTH\n         DROP  R1\n         MODESET MF=(E,PROBMOD)        PROBLEM STATE\n*        STAX  DEFER=NO                NOW THEY CAN INTERRUPT\nFREERET2 LR    R3,R13\n         L     R13,4(,R13)        ADDRESS OF CALLING PROGRAM SAVEAREA\n         FREEMAIN RC,LV=WORKL,A=(3) FREE STORAGE\n         LTR   R15,R15            CHECK RETURN CODE\n         BNZ   FREEERR2\nRETURN   RETURN (14,12),,RC=(15)\nGETMERR  WTO   ' ZTPR0205 - GETMAIN ERROR, PLEASE NOTIFY TECH SUPPORT',X\n               ROUTCDE=2\n         L     R13,4(,R13)        RELOAD R13\n         B     RETURN\nBADLOAD  TPUT  BADLDMSG,25\nNOAUTH   TPUT  MSGNO1,13\n         B     FREERET2\nFREEMERR TPUT  MSG2,33\n         B     FREERET2\nFREEERR2 TPUT  MSG1,33\n         B     RETURN\nALLMOVED EPAR  R1             EXTRACT PRIMARY ASID INTO R1\n         SSAR  R1             SET SECONDARY TO OUR ASID\nADJUST   CLC   MTT,0(R11)     MTT HEADER\n         BNE   NOTACTIV\n         L     R9,4(,R11)     THIS IS THE CURRENT ENTRY IN MASTER\n         L     R8,MTTADDR     ADDRESS OF MTT IN MASTER ADDRESS SPACE\n         SR    R9,R8          DISPLACEMENT INTO OUR AREA OF FIRST ENT\n         LA    R9,0(R9,R11)   CURRENT ENTRY\n         ST    R9,MTTCLINE    MTT CURRENT LINE IN OUR AREA\n         L     R9,32(,R11)    FIRST ENTRY IN MTT\n         SR    R9,R8          DISPLACEMENT TO FIRST ENTRY\n         LA    R9,0(R9,R11)   ADDRESS IN OUR ADDRESS SPACE\n         ST    R9,MTTFLINE    SAVE IN MTT FIRST LINE\n         L     R9,12(,R11)    LAST BYTE\n         SR    R9,R8          GET DISPLACEMENT\n         LA    R9,0(R9,R11)   ADDRESS IN OUR AREAOF LAST BYTE\n         ST    R9,MTTLLINE    MTT LAST LINE -ACTUALLY ITS THE LAST BYTE\n         MVC   CURRLINE,MTTCLINE CURRENT LINE\nDISPLAY  L     R5,LASTLINE    ADDRESS OF WHERE TO MOVE CURRENT ENTRY\n         L     R6,CURRLINE    CURRENT LINE\n         MVI   UPFLAG,X'00'\n         MVI   WRAPFLAG,X'00'\n         MVI   FOUNDFLG,X'00'\n         MVC   BOTTOM,CURRLINE\nDISPLOOP SR    R7,R7\n         ICM   R7,B'0011',8(R6)  LOAD LENGTH\n         BNP   FINDNEXT\n         LA    R8,10(R7,R6)\n         CLI   SEARCHON,X'FF'\n         BE    DISPCHEK\n         CLI   UPFLAG,X'FF'\n         BNE   DISPSUB\nDISPCHEK CLC   CURRLINE,MTTCLINE\n         BNL   CHEKLINE\n         C     R8,MTTCLINE\n         BNL   ENDOFLST\nCHEKLINE C     R6,MTTCLINE\n         BNL   CHEKWRAP\n         C     R8,MTTCLINE\n         BNL   ENDOFLST\n         B     DISPSUB\nCHEKWRAP CLI   WRAPFLAG,X'FF'\n         BE    WRITEIT\nDISPSUB  CLI   SEARCHON,X'FF'\n         BE    SEARCHLN\n         S     R7,=F'51'      MINUS CONTROL STUFF\n         BNP   FINDNEXT\nDISPL    C     R7,SEVENTY9    > 80\n         BNH   MOVEDATA       NO - MOVE TO DISPLAY AREA\n         S     R7,EIGHTY\n         LA    R1,112(R6,R7)  LAST BYTE ADDRESS\n         S     R1,MTTLLINE    ADD OF 0C4 BYTE\n         BC    12,EX01\n         SR    R7,R1\n         BCTR  R7,0\n         BC    2,EX01\n         B     FINDNEXT\nEX01     EX    R7,DISPMOV2\n         S     R5,EIGHTY\n         C     R5,FRSTLINE\n         BNH   WRITEIT\n         LA    R7,62          MAX LENGTH IS 80\nMOVEDATA LA    R1,63(R6,R7)   LAST BYTE ADDRESS\n         S     R1,MTTLLINE    ADD OF 0C4 BYTE\n         BC    12,EX02\n         SR    R7,R1\n         BCTR  R7,0\n         BC    2,EX02\n         B     FINDNEXT\nEX02     EX    R7,DISPMOVE    MOVE IT TO TERMINAL AREA\n         MVC   10(9,R5),46(R6) SKIP CONTROL STUFF\n         CLC   =CL2'40',34(R6)\n         BE    SKIPTIM\n         MVC   00(8,R5),35(R6) SKIP CONTROL STUFF\n*        BAL   R2,SEARCHLN\nSKIPTIM  S     R5,EIGHTY\n         C     R5,FRSTLINE\n         BNH   WRITEIT\n*        CLI   UPFLAG,X'FF'\n*        BE    UP\nFINDNEXT ST    R6,CURRLINE\n         BAL   R2,PREVLINE    GET NEXT     LINE\n         B     DISPLOOP\nDOWN     CLC   BOTTOM,MTTCLINE IS THIS NEWEST PAGE?\n         BE    AUTHRIZE\n         MVI   FOUNDFLG,X'00'\n         BAL   R2,CLEARSCR    GET NEXT     LINE\n         LA    R5,DETAIL      ADDRESS OF WHERE TO MOVE CURRENT ENTRY\n         L     R6,BOTTOM      BECOMES TOP ON PAGE DOWN\n         ST    R6,CURRLINE    CURRENT LINE\n         ST    R6,TOP         CURRENT LINE\n         MVI   DOWNFLAG,X'FF'\n*GIVEN A STARTING POINT, WE WILL BE PAGING UP HERE *\nDOWNLOOP SR    R7,R7\n         ICM   R7,B'0011',8(R6)  LOAD LENGTH\n         BNP   FINDNXTD\n         LA    R8,10(R7,R6)   NEXT LINE\n         C     R8,MTTCLINE\n         BNH   DOWNSUB\n         C     R6,MTTCLINE\n         BNL   DOWNSUB\n         MVC   0(80,R5),CENDOFIT\n         B     WRITEITD\nDOWNSUB  S     R7,=F'51'      MINUS SIX\n         BNP   FINDNXTD\n         C     R7,SEVENTY9    > 80\n         BNH   MOVEDOWN       NO - MOVE TO DISPLAY AREA\n         S     R7,EIGHTY\n         LA    R1,112(R6,R7)  LAST BYTE ADDRESS\n         S     R1,MTTLLINE    ADD OF 0C4 BYTE\n         BC    12,EX03\n         SR    R7,R1\n         BCTR  R7,0\n         BC    2,EX03\n         B     FINDNXTD\nEX03     EX    R7,DISPMOV2\n         LA    R7,62          MAX LENGTH IS 80\n         A     R5,EIGHTY\n         C     R5,LASTLINE\n         BNL   WRITEITD\nMOVEDOWN LA    R1,63(R6,R7)   LAST BYTE ADDRESS\n         S     R1,MTTLLINE    ADD OF 0C4 BYTE\n         BC    12,EX04\n         SR    R7,R1\n         BCTR  R7,0\n         BC    2,EX04\n         B     FINDNXTD\nEX04     EX    R7,DISPMOVE    MOVE IT TO TERMINAL AREA\n         MVC   09(9,R5),44(R6) SKIP CONTROL STUFF\n         CLC   =CL2'40',33(R6)\n         BE    SKIPTIM2\n         MVC   00(8,R5),32(R6) SKIP CONTROL STUFF\n*        BAL   R2,SEARCHLN\nSKIPTIM2 A     R5,EIGHTY\n         C     R5,LASTLINE\n         BNL   WRITEITD\nFINDNXTD ST    R6,CURRLINE\n         BAL   R2,UPLINE      GET NEXT     LINE\n         B     DOWNLOOP\nUP       BAL   R2,UPLINE      PREVIOUS LINE\n         B     DISPLOOP\nSEARCHLN L     R10,ARGLENG\n         LA    R15,15(,R6)    START OF LINE\n         LR    R3,R7\n         SR    R3,R10\n         BNP   FINDNEXT\nCOMPLOOP EX    R10,COMPARE    COMPARE THIS TO ARGUMENT\n         BE    FOUNDIT\n         LA    R15,1(,R15)    NEXT BYTE\n         LA    R1,0(R15,R10)\n         C     R1,MTTLLINE\n         BNL   FINDNEXT\n         BCT   R3,COMPLOOP\n         B     FINDNEXT\nFOUNDIT  MVI   SEARCHON,X'00' RESET\n         MVI   FOUNDFLG,X'FF'\n         S     R7,=F'51'\n         ST    R6,SEARCHTP\n         ST    R6,CURRLINE\n         ST    R6,BOTTOM\n         B     DISPL\nUPLINE   LA    R8,1           INCREMENT 0F 1\n         L     R6,CURRLINE\n         CLC   R6,MTTFLINE    ARE WE AT TOP\n         BH    UPCONTIN       NO - SKIP\n         L     R6,MTTLLINE\n         S     R6,=F'05'\nUPCONTIN LNR   R8,R8          DECREMENT OF -1\n         L     R9,MTTFLINE    ADDRESS OF LOWEST ADDRESS IN MTT\n         MVI   STARTFLG,X'00' FLAG TO INDICATE FIRST TIME THRU\n*        L     R6,CURRLINE    ADDRESS OF CURRENT LINE\n         BCTR  R6,0           SUBTRACT  1\nUPLOOP   CLC   CBEGINLN,0(R6) BEGINNING OF LINE CHARACTER?\n         BE    PREVFND        YES, BRANCH\n         BCTR  R6,0           MINUS 1\n         CR    R6,R9\n         BNL   UPLOOP\n*   MEANS WE ARE AT THE LOWEST ADDRESS IN TABLE, NOW START AT THE    *\n*   VERY BOTTOM AND WORK BACKWARDS -                                 *\n         CLI   STARTFLG,X'00' WE BEEN THRU HERE BEFORE?\n         BNE   WRITEITD       YES - BRANCH\n         MVI   STARTFLG,X'FF' FLAG IT\n         L     R6,MTTLLINE    ADDRESS OF LAST LINE\n         S     R6,=F'05'      MINUS SIX\n         L     R9,MTTCLINE\n         B     UPLOOP         NOW FIND PREVIOUS\nPREVLINE LA    R8,1           INCREMENT 0F 1\n         L     R6,CURRLINE    ADDRESS OF CURRENT LINE\n         LA    R6,1(,R6)      INCREMENT\n         C     R6,MTTLLINE    LAST LINE?\n         BL    PREVCONT       NO, BRANCH\n         L     R6,MTTFLINE    START AT FIRST\n         MVI   WRAPFLAG,X'FF' SET TO DISPLAY IT HAS WRAPPED\nPREVCONT L     R9,MTTLLINE    ADDRESS OF LOWEST ADDRESS IN MTT\n         S     R9,=F'06'      CBEGINLN LENGTH\n         BNP   NOTACTIV       NOT POSITIVE, NOT A VALID ENTRY FOR US\n         MVI   STARTFLG,X'00' FLAG TO INDICATE FIRST TIME THRU\nPREVLOOP CLC   CBEGINLN,0(R6) BEGINNING OF LINE CHARACTER?\n         BE    PREVFND        YES, BRANCH\n         BXLE  R6,R8,PREVLOOP LOOP\n*   MEANS WE ARE AT THE LOWEST ADDRESS IN TABLE, NOW START AT THE    *\n*   VERY BOTTOM AND WORK BACKWARDS -                                 *\n         CLI   STARTFLG,X'00' WE BEEN THRU HERE BEFORE?\n         BNE   WRITEIT        YES - BRANCH\n         MVI   STARTFLG,X'FF' FLAG IT\n         L     R6,MTTFLINE    ADDRESS OF FRST LINE\n         B     PREVLOOP       NOW FIND PREVIOUS\nPREVFND  BR    R2             RETURN\nWRITEITD BAL   R2,TPUT        WRITE SCREEN\n         ST    R6,BOTTOM      SAVE WHERE WE WERE\n         B     TGET           GET NEXT INPUT FROM TERMINAL\nWRITEIT  EQU   *\n         BAL   R2,TPUT        WRITE SCREEN\n         ST    R6,TOP         SAVE ADDRESS OF WHERE WE WERE\nTGET     MVC   WORKLINE,HEX40S\n         MVI   SEARCHON,X'00' RESET SEARCH FLAG\n         BAL   R2,CLEARSCR\n         L     R5,LASTLINE    ADDRESS OF WHERE TO MOVE CURRENT ENTRY\n         L     R6,CURRLINE    CURRENT LINE\n         MVI   UPFLAG,X'00'   RESET UP FLAG\n         TGET  WORKLINE,70,ASIS\n         CLI   WORKLINE,X'7D' PFK USED?\n         BE    CHECKOUT       NO, CHECK COMMAND, IF ANY\n         NI    WORKLINE,X'0F'\n         CLI   WORKLINE,X'01' PF-1?\n         BE    HELPOUT        YES, DISPLAY HELP INFO\n         CLI   WORKLINE,X'03' PF-3?\n         BE    FREEAX         YES, END\n         CLI   WORKLINE,X'05' SEARCH REPEAT\n         BE    SEARCHRP\n*        CLI   WORKLINE,X'06' SEARCH REPEAT\n*        BE    ABEND\n         CLI   WORKLINE,X'07' UP?\n         BE    UPSET\n         CLI   WORKLINE,X'08'\n         BE    DOWN\n         CLI   WORKLINE,X'09'\n         BE    SETTOP\n         CLI   WORKLINE,X'0A'\n         BE    SETBOT\n         CLI   WORKLINE,C'>'  MESSAGE INPUT\n         BE    TGET\n         B     AUTHRIZE\nNOCMDS   BAL   R2,CLEARSCR    GO CLEAR OUR SCREEN\n         MVC   DETAIL+880(23),=C'COMMANDS NOT AUTHORIZED'\n         BAL   R2,TPUT\n         B     TGET\nCHECKOUT OC    WORKLINE+6(74),HEX40S\n         CLC   WORKLINE+6(4),HEX40S\n         BE    AUTHRIZE\n         MVC   CMDLINE,WORKLINE+6\n         CLC   =C'T  ',CMDLINE  TOP\n         BE    SETTOP\n         CLC   CMDLINE(3),=C'TOP'\n         BE    SETTOP\n         CLC   =C'B  ',CMDLINE  TOP\n         BE    SETBOT\n         CLC   XFINDQ,CMDLINE  F '\n         BE    FIND\n         CLC   CFIND,CMDLINE  FIND\n         BE    FIND\n         CLC   CMDLINE(3),=C'BOT'\n         BE    SETBOT\n         CLC   CMDLINE(3),=C'END'\n         BE    FREEAX\n         CLC   =C'Z ',CMDLINE  TOP\n         BE    FREEAX\n         CLC   =C'X ',CMDLINE  TOP\n         BE    FREEAX\n         CLI   CMDFLAG,X'FF'\n         BE    NOCMDS\n         CLI   USERFLAG,X'FF'\n         BNE   NOWTO\n         MVC   WTOCMD(100),WTOLIST\n         MVC   WTOCMD+8(72),CMDLINE\n         MVC   WTOCMD+78(4),USERID\n         LA    R7,WTOCMD\n         WTL   MF=(E,(R7))\nNOWTO    SLR   R0,0                    CLEAR REG 0\nISSUE    LA    R1,COMMAND              GET ADDRESS OF SVC 34 COMMAND\n         SVC   34                      ISSUE COMMAND\n         STIMER WAIT,BINTVL=ONE        WAIT ONE SO THAT IT SHOWS\n         MVC   CMDLINE,HEX40S\n         B     AUTHRIZE\n*    FIND OPERATION REQUESTED                                         *\nFIND     EQU   *\n         OC    WORKLINE+6(74),HEX40S      UPPER CASE\n         MVC   WORKLINE(74),WORKLINE+6    MOVE OVER\n         MVC   ARGUMENT(74),HEX40S        CLEAR OUT\n         LA    R8,1\n         LA    R6,WORKLINE\n         LA    R9,74(,R6)\n         LA    R7,ARGUMENT\nFINDQUOT CLI   0(R6),X'7D'\n         BE    FOUNQUOT\n         LA    R6,1(,R6)\n         CR    R6,R9\n         BL    FINDQUOT\n         B     REENTER\nFOUNQUOT LA    R6,1(,R6)\nARGLOOP  CLI   0(R6),X'7D'\n         BE    ARGDONE\n         MVC   0(1,R7),0(R6)\n         LA    R7,1(,R7)\n         BXLE  R6,R8,ARGLOOP\n*  IF IT GETS HERE - ARGUMENT WAS INVALID                             *\nREENTER  BAL   R2,CLEARSCR\n         MVC   DETAIL+418(43),CHELPLN7\n         BAL   R2,TPUT\n         B     TGET\n*EARCH   B     FREERET\nENDOFLST MVC   0(80,R5),CENDOFIT\n         CLI   SEARCHON,X'FF'\n         BNE   WRITEIT\n         MVC   24(09,R5),=C'NOT FOUND'\n         MVI   FOUNDFLG,X'00'\n         B     WRITEIT\nSEARCHRP CLI   SRCHFLAG,X'FF'\n         BNE   REENTER\n         CLI   FOUNDFLG,X'FF'\n         BNE   LOADCURR\n         MVC   CURRLINE,SEARCHTP WHERE TO PICK UP\nLOADCURR L     R6,CURRLINE\n         MVI   FOUNDFLG,X'00'\n         BAL   R2,PREVLINE\n         ST    R6,CURRLINE\n         MVI   SEARCHON,X'FF'\n         B     UPSET\nARGDONE  LA    R8,ARGUMENT\n         BCTR  R7,0\n         SR    R7,R8\n         BNP   REENTER\n         ST    R7,ARGLENG\n         MVI   FOUNDFLG,X'00' NOT FOUND YET\n         MVI   SRCHFLAG,X'FF' SEARCH ARGUMENT IS PRESENT\n         MVI   SEARCHON,X'FF' PLEASE SEARCH\n         L     R6,BOTTOM\n         B     SETBOT2\nSETBOT   L     R6,MTTCLINE\nSETBOT2  ST    R6,CURRLINE\n         L     R5,LASTLINE\n         B     DISPLOOP\nSETTOP   L     R6,MTTCLINE\n         ST    R6,CURRLINE\n         BAL   R2,UPLINE\n         ST    R6,CURRLINE\n         BAL   R2,UPLINE\n         ST    R6,BOTTOM\n         B     DOWN\nUPSET    MVI   UPFLAG,X'FF'\n         CLI   DOWNFLAG,X'FF'\n         BNE   UPSET2\n         MVC   CURRLINE,TOP\n         MVI   DOWNFLAG,X'00'\nUPSET2   L     R5,LASTLINE    ADDRESS OF WHERE TO MOVE CURRENT ENTRY\n         L     R6,CURRLINE    WHERE WE LEFT OFF\n         ST    R6,BOTTOM\n         MVI   FOUNDFLG,X'00'\n         B     DISPLOOP\nCOMPARE  CLC   0(0,R15),ARGUMENT  LOOK FOR SEARCH ARGUMENT\nDISPMOVE MVC   18(0,R5),63(R6) SKIP CONTROL STUFF\nDISPMOV2 MVC   0(0,R5),112(R6) SKIP CONTROL STUFF\nTPUT     LA    R1,SCREEN\n         L     R0,SCRTPUTL\n         TPUT  (1),(0),FULLSCR\n         BR    R2\nHELPOUT  BAL   R2,CLEARSCR    GO CLEAR OUR SCREEN\n*        MVC   DETAIL+80(80),CHELPLN1\n*        MVC   DETAIL+160(80),CHELPLN2\n         MVC   DETAIL+400(80),CHELPLN3\n         MVC   DETAIL+480(70),CHELPLN4\n         MVC   DETAIL+640(39),CHELPLN5\n         MVC   DETAIL+720(43),CHELPLN6\n         MVC   DETAIL+880(43),CHELPLN7\n         BAL   R2,TPUT\n         B     TGET\nNOTACTIV BAL   R2,CLEARSCR    GO CLEAR OUR SCREEN\n         MVC   DETAIL(16),=C'TRACE NOT ACTIVE'\n         BAL   R2,TPUT\n         STIMER WAIT,BINTVL=ONE\n         L     R2,CPPLSAVE\n         LINK  EP=ZTPR0200\n         B     FREEAX\n**   CLEAR THE SCREEN AREA AND RETURN TO ADDRESS IN REG 2            **\nCLEARSCR LA    R6,DETAIL\n         L     R7,SCRLENG\n         SR    R9,R9\n         ICM   R9,B'1001',HEX40S\n         LA    R8,HEX40S\n         MVCL  R6,R8\n         BR    R2\nTABLE    DC    CL4'MURF'          USERIDS VALID TO USE IT\n         DC    CL4'XXXX'\nTABLEND  DC    CL4'XXXX'          ROBERT CHAMBERLAIN\nDSCREEN  DS    0C             DISPLAY SCREEN\n         DC    X'03'          CONTROL\n         DC    X'00'          ERASE/WRITE ALTERNATE (132 COL)\n         DC    X'00115D7F1140403C404000' CLEAR SCREEN\n         DC    CL80'                  MASTER  TRACE  TABLE  DISPLAY    *\n                             PF-1 FOR HELP '\n         DC    X'11'          SET BUFFER ADDRESS\n         DC    X'F460'        (43,1)\n*        DC    C'_'\n         DC    X'1DC8'        MARK NEXT FIELD AS INPUT FIELD\n         DC    X'13'          SET CURSOR ADDRESS\n         DC    X'11'          SET BUFFER ADDRESS\n         DC    X'F5E7'        (43,72)\n         DC    X'1DF0'        TERMINATE INPUT FIELD\n         DC    C' '           INDICATES MORE TO BE DISPLAYED\n         DC    X'11'          SET BUFFER ADDRESS\n         DC    X'C150'        (2,1)\n*DLINE1  DC    40CL80' '      MESSAGE TEXT AREA (FOR 40X80 MAX)\nDSCREENL EQU   *-DSCREEN      LENGTH OF THIS PART\nFOUR     DC    F'4'\nBADLDMSG DC    CL25'ERROR LOADING IKJEFFUT  '\n         DS    0F\nAUTH     DC    CL4'AUTH'\nMTT      DC    CL3'MTT'       MASTER TRACE TABLE HEADER\nHEXFS    DC    XL4'FFFFFFFF'\nHEXZIP   DC    XL4'00000000'\nCMAINT   DC    XL5'1401091523'\nCOMMANDL DC    Y(76),Y(00)\nONE      DC    A(100)             1 SECOND\nCBEGINLN DC    XL4'00000001'\nEIGHTY   DC    F'080'             CONSTANT 80\nSEVENTY9 DC    F'079'             CONSTANT 79\nANDCHARS DC    XL8'3F3F3F3F3F3F3F3F'\nMSGNO1   DC    CL13'SYSTEM ACTIVE'\nMSGNO2   DC    CL6'NO APF'\nMSG1     DC    CL33'***FREEMAIN ERROR ON SAVEAREA ***'\nMSG2     DC    CL33'***FREEMAIN ERROR ON MTT AREA ***'\nXFINDQ   DC    XL3'C6407D'        HEX FOR F '\nCFIND    DC    CL4'FIND'          CHARACTER FIND\nCEND     DC    CL3'END'           CHARACTER END\nCZ       DC    CL1'Z'             CHARACTER Z\nPATTERN  DC    XL4'40202120'\nAXLIST   DC    H'1'\n         DC    H'0'\nWTOLIST  WTL   '                                                       X\n                                       ZTPR0200',MF=L\nSUPRMOD  MODESET MF=L,MODE=SUP,KEY=ZERO\nPROBMOD  MODESET MF=L,MODE=PROB,KEY=NZERO\n         LTORG\nCENDOFIT DC    CL80'* * * * * * * * * * * * E N D * * O F * * D A T A **\n               * * * * * * * * * * * * * * '\n*HELPLN1 DC    CL80'  THIS PROGRAM USES CROSS MEMORY SERVICES TO READ T*\n               HE MASTER TRACE TABLE IN    '\n*HELPLN2 DC    CL80'  THE MASTER ADDRESS SPACE. THE MASTER TRACE MUST B*\n               E ACTIVE TO PAGE UP/DOWN.   '\nCHELPLN3 DC    CL80'  PF-1  HELP            PF-3  END                PF*\n               -5  REPEAT FIND   PF-7  UP  '\nCHELPLN4 DC    CL70'  PF-8  PAGE DOWN       PF-9  TOP (OLDEST)       PF*\n               -10 BOTTOM (NEWEST)'\nCHELPLN5 DC    CL39'  T OR TOP MAY BE USED INSTEAD OF PF-9 '\nCHELPLN6 DC    CL43'  B OR BOTTOM MAY BE USED INSTEAD OF PF-10 '\nCHELPLN7 DC    CL43'  F OR FIND WITH ARGUMENT IN SINGLE QUOTES '\nSAVDSECT DSECT\nSAVEAREA DS    18F\nDOUBLWD  DS    D\nPARMWKAD DS    F\nCPPLSAVE DS    F\n         DS    0D\nWORKLINE DS    CL80\nHEX40S   DS    CL80\nWTOCMD   DS    CL100\nPARMWORK DS    CL44\nUSERID   DS    CL7\nUSERIDL  DS    XL1\nUSERATTR DS    XL1\nSTARTFLG DS    XL1\nSRCHFLAG DS    XL1\nUSERFLAG DS    XL1\nFREEFLAG DS    XL1\nCMDFLAG  DS    XL1\nFOUNDFLG DS    XL1\nSEARCHON DS    XL1\nUPFLAG   DS    XL1\nWRAPFLAG DS    XL1\nDOWNFLAG DS    XL1\nMTTSIZE  DS    F              SIZE OF MTT\nMTTADDR  DS    F              MTT ADDRESS IN MASTER ASID\nBOTTOM   DS    F              BOTTOM    OF SCREEN\nTOP      DS    F              TOP OF SCREEN\nSEARCHTP DS    F              CURRENT LINE FOR REPEAT SEARCH\nCURRLINE DS    F              CURRENT LINE FOR US\nFRSTLINE DS    F              FIRST LINE ON OUR DISPLAY\nLASTLINE DS    F              LAST  LINE ON OUR DISPLAY\nMTTFLINE DS    F              FIRST LINE IN OUR AREA\nMTTLLINE DS    F              LAST  LINE IN OUR AREA\nMTTCLINE DS    F              CURRENT LINE IN OUR AREA\nSCRLENG  DS    F\nSCRTPUTL DS    F\nARGLENG  DS    F\nARGUMENT DS    CL74\nCOMMAND  DS    F\nCMDLINE  DS    CL72\nSCREEN   DS    0CL108\n         DS    XL1            CONTROL\nDSCRO1   DS    XL1            ERASE/WRITE ALTERNATE (132 COL)\n         DS    XL11\n         DS    CL80\n         DS    XL1            SET BUFFER ADDRESS\nDSCRO3   DS    XL2            (43,1)\n*        DS    XL1\n         DS    XL2            MARK NEXT FIELD AS INPUT FIELD\n         DS    XL1            SET CURSOR ADDRESS\n         DS    XL1            SET BUFFER ADDRESS\nDSCRO4   DS    XL2\n         DS    XL2            TERMINATE INPUT FIELD\n         DS    XL2            SET BUFFER ADDRESS\nDSCRO5   DS    XL2\nDETAIL   DS    43CL80\nWORKL    EQU   *-SAVEAREA\n         CVT   DSECT=YES\n         IEZJSCB\n         IKJTCB DSECT=YES\n         IEEBASEA\n         IEECHAIN\n         IKJPSCB\n         IKJCPPL\n         IKJUPT\n         END\n./ ADD NAME=MTTESAJ  0100-93082-93082-1928-00025-00025-00000-OLDVERS\n//MURF2    JOB (6496,B014),MURF,CLASS=O,MSGCLASS=3,NOTIFY=MURF\n//COM     EXEC PGM=IEV90,REGION=512K,\n//    PARM='LOAD,XREF(SHORT),LINECNT=55,NODECK'\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB,DCB=BLKSIZE=23440\n//         DD  DISP=SHR,DSN=SYS1.MODGEN\n//         DD  DSN=LBKQ.FILE025.PDS,DISP=SHR\n//SYSLIN   DD  UNIT=VIO,DSN=&LOADSET,DISP=(MOD,PASS),\n//             SPACE=(CYL,(2,2)),DCB=BLKSIZE=1680\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(10,2))\n//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(12,2))\n//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(20,2))\n//SYSPUNCH DD  DUMMY =*,DCB=FUNC=I\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSIN    DD  DSN=LBKQ.FILE025.PDS(MTTESA),DISP=SHR\n//LKED         EXEC PGM=IEWL,REGION=1024K,COND=(4,LT),\n//             PARM='XREF,LET,LIST,RENT,AC=1'\n//SYSPRINT     DD   SYSOUT=*\n//SYSUT1       DD   DSN=&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD      DD   DISP=SHR,DSN=SYSX.LOADLIB(ZTPR0205)\n//SYSLIN       DD   UNIT=SYSDA,DSN=&LOADSET,DISP=(OLD,DELETE)\n//             DD   DDNAME=SYSIN\n//SYSIN        DD   *\n ALIAS MTT\n NAME ZTPR0205(R)\n./ ENDUP       \"REVIEW\" PDS MEMBER OFFLOAD AT 19:30 ON 93/03/23\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RESTESA": {"ttr": 3594, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x98&\\x9f\\x00\\x98&\\x9f\"\\x07\\x0f\\x96\\x0f\\x96\\x00\\x00\\xd6\\xd3\\xc4\\xf4\\xf2\\xf2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1998-09-26T00:00:00", "modifydate": "1998-09-26T22:07:00", "lines": 3990, "newlines": 3990, "modlines": 0, "user": "OLD422"}, "text": "./ ADD NAME=$DOC1    0100-1993082-1993082-1926-00234-00234-00000-RESTDOC\n04/09/90 - PAT MURPHY 214-216-3139 TEXAS UTILITIES SERVICES\n\nKLEENUP  -  REXX EXEC TO GENERATE HMIGRATE COMMANDS FOR ALL BUT\nTHE CURRENT GENERATIONS OF THE REQUESTED DISK DATASET.\n\n REXX EXEC - NEEDS TO GO IN THE SYSPROC OR SYSEXEC DD.\n KLEENUP COMMAND FORMAT:\n KLEENUP GDGDSN MMM NNN\n IT WILL GENERATE HSM COMMANDS TO MIGRATE DISK GDG'S,  SPECIFY\n MIGRATIONLEVEL 1 OR 2 BY PUTTING ML1 OR ML2 AFTER THE DSN AT  MMM\n CAN SPECIFY NUMBER TO KEEP ON DASD BY A NUMBER FOLLOWING THIS NNN\n EXAMPLE:\n           KLEENUP SYS2.LISTCAT.USERCAT ML2 1\n THIS WILL ISSUE COMMANDS TO MIGRATE ALL BUT THE CURRENT GEN. TO\n MIGRATIONLEVEL 2.\n           KLEENUP SYS2.LISTCAT.USERCAT\n THIS WILL ISSUE COMMANDS TO MIGRATE ALL BUT THE CURRENT GEN. TO\n MIGRATIONLEVEL 1 BY DEFAULT.\n\nINSTALL INSTRUCTIONS:\n1. COPY KLEENUP INTO THE SYSPROC OR SYSEXEC CONCATENATION.\n2. KLEENUPJ IS A SAMPLE OF HOW WE USE IT.\n\n________________________________________________________________________\n04/10/90 - MARK TERRY 214-216-3122 TEXAS UTILITIES SERVICES\n\n\n GETOPR - WRITTEN BY MARK TERRY, SENIOR MVS SYSTEMS PROGRAMMER          DOC FILE\n          AT TEXAS UTILITIES SERVICES.                                  DOC FILE\n                                                                        DOC FILE\n MARK WROTE GETOPR FOR THE OPERATORS TO USE TO FINDOUT THE              DOC FILE\n RACF INFO ASSOCIATED WITH A GIVEN USERID AND DISPLAY IT ON THE         DOC FILE\n CONSOLE. THE OPERATOR STARTS A PROC CALLED GETOPER, WITH FORMAT:       DOC FILE\n                                                                        DOC FILE\n     S GETOPER,LID=XXXX                                                 DOC FILE\n                                                                        DOC FILE\n WHERE XXXX = USERID THAT THE INFO IS TO BE OBTAINED AND                DOC FILE\n DISPLAYED ON THE OPERATOR TERMINAL.                                    DOC FILE\n\nINSTALL INSTRUCTIONS:\n1. COPY GETOPER PROC INTO A PROCLIB ACCESSIBLE FOR STARTED STASKS.\n2. ASSEMBLE THE GETOPR PROGRAM, JCL IS WRAPPED AROUND IT.\n\n________________________________________________________________________\n04/10/90 - TOM BURNS  214-331-3151 TEXAS UTILITIES SERVICES\n\nSASSRCHD -SAS PROGRAM WRITTEN BY TOM BURNS, SENIOR SYSTEMS PROGRAMMER\n          AT TEXAS UTILITIES SERVICES, THAT READS SMF DATA AT MVS 3.1.3\n          LEVEL AND GIVES A REPORT ON WHO OPENED NONVSAM DATASETS, THEIR\n          BLOCKSIZE THAT THEY WERE OPENED WITH, AND WHO DELETED THEM.\n\nSASSRCHV - SAS PROGRAM WRITTEN BY TOM BURNS, SENIOR SYSTEMS PROGRAMMER\n           AT TEXAS UTILITIES SERVICES, THAT READS SMF DATA AT MVS 3.1.3\n           LEVEL AND GIVES A REPORT ON WHO OPENED VSAM DATASETS AND\n           WHO DELETED THEM.\n\n________________________________________________________________________\n04/10/90 - PAT MURPHY 214-216-3139\n\nCONESA   -  CONSOLE PROGRAM MODIFIED FOR ESA. DISPLAYS CONSOLES AS A\nTSO COMMAND UNDER ISPF OR TSO.  FEATURES:\n\n        HIGHLIGHTED MESSAGES ON CONSOLE ARE HIGHLIGHTED\n        AUTOMATIC UPDATE FEATURE\n        ENTER OPERATOR COMMANDS\n        DISPLAY LAST IPL AND IF CLPA WAS DONE\n\nPRESENTLY WORKS UNDER MVS/ESA 3.1.3 AND  DFP RELEASE 3.1.1.\nSOME OF THE CONTROL BLOCKS THAT IT USED WERE MOVED INTO THE CONSOLE\nADDRESS SPACE AFTER DFP 2.2.\n\nINSTALL INSTRUCTIONS:\n1. UPDATE SYSDSVC TO REFLECT PROPER PROCEDURE FOR AN AUTHORIZED SVC AT\nYOUR INSTALLATION.\n2. UPDATE THE ASSEMBLY JCL CALLED CONSOLEJ TO REFLECT LIBRARIES AT\nYOUR INSTALLATION.\n3. ENTER 'TSO CONSOLE' FROM ISPF OR CONSOLE FROM THE READY STATE IN TSO.\n4. PF-1 WILL DISPLAY PFKEY DEFINITIONS.\n5. THE AUTOMATIC UPDATE AT LESS THAN 2 SECONDS IS HARD TO STOP ON\n3290'S. USE AUTOMATIC UPDATES OF 4 SECONDS OR MORE FOR THESE.\n6. DOES A TGET ON MOD2/5'S TO ALLOW FOR MOD 5'S THAT DID NOT DISPLAY\nCORRECTLY UNDER THE OLD ONE.\n7. ADDED AXFRE TO FREE THE AX TABLE ENTRY.\n\n________________________________________________________________________\nNOT UPDATED SINCE 1987 - PMM\n\nCONSOLE  -  PROGRAM TO DISPLAY CONSOLE ACTIVITY AS A TSO COMMAND\nUNDER ISPF OR TSO.  FEATURES:\n\n        HIGHLIGHTED MESSAGES ON CONSOLE ARE HIGHLIGHTED\n        AUTOMATIC UPDATE FEATURE\n        ENTER OPERATOR COMMANDS\n        DISPLAY LAST IPL AND IF CLPA WAS DONE\n\nPRESENTLY WORKS UNDER MVS/XA UNDER DFP RELEASE 1 AND 2.1. IT HAS BEEN\n3 YEARS SINCE WE WERE SP, BUT IT USED TO WORK THERE AS WELL.\n\n\nINSTALL INSTRUCTIONS:\n1. UPDATE SYSDSVC TO REFLECT PROPER PROCEDURE FOR AN AUTHORIZED SVC AT\nYOUR INSTALLATION.\n2. UPDATE THE ASSEMBLY JCL CALLED CONSOLEJ TO REFLECT LIBRARIES AT\nYOUR INSTALLATION.\n3. ENTER 'TSO CONSOLE' FROM ISPF OR CONSOLE FROM THE READY STATE IN TSO.\n4. PF-1 WILL DISPLAY PFKEY DEFINITIONS.\n5. THE AUTOMATIC UPDATE AT LESS THAN 2 SECONDS IS HARD TO STOP ON\n3290'S. USE AUTOMATIC UPDATES OF 4 SECONDS OR MORE FOR THESE.\n\n________________________________________________________________________\n04/06/90 - PAT MURPHY 214-216-3139\n\nMTTESA   -  USES CROSS MEMORY SERVICES TO READ AND DISPLAY THE MASTER\nTRACE TABLE AS A TSO COMMAND PROCESSOR.  THIS IS THE XA VERSION\nOF THE PROGRAM THAT ORIGINATED AS MTT UNDER SP1.3.  FEATURES:\n        READ/DISPLAY MASTER TRACE TABLE\n        ENTER OPERATOR COMMANDS\n        CAN USE FIND TO SEARCH THE MASTER TRACE TABLE\n              F 'SEARCH ARGUMENT IN QUOTES'\n\nINSTALL INSTRUCTIONS:\n1. UPDATE SYSDSVC TO REFLECT PROPER PROCEDURE FOR AN AUTHORIZED SVC AT\nYOUR INSTALLATION, OR INSERT IN IKJTSOXX THE MTT COMMAND,\nAND ISSUE THE TSO COMMAND FOR TSO/E 2.1.1 AND ABOVE,\n     PARMLIB UPDATE(XX)\nTHIS WILL INVOKE THE MTT COMMAND AUTHORIZED AND THE SVC CAN BE NOOP'D.\n2. UPDATE THE ASSEMBLY JCL CALLED MTTESA TO REFLECT LIBRARIES AT\nYOUR INSTALLATION.\n3. ENTER 'TSO MTT' FROM ISPF OR MTT FROM THE READY STATE IN TSO.\n4. PF-1 WILL DISPLAY PFKEY DEFINITIONS.\n5. IKJTSO00 SAMPLE MEMBER PROVIDED.\n________________________________________________________________________\nNOT UPDATED SINCE 1987 - PMM\n\nMTTXA    -  USES CROSS MEMORY SERVICES TO READ AND DISPLAY THE MASTER\nTRACE TABLE AS A TSO COMMAND PROCESSOR.  THIS IS THE XA VERSION\nOF THE PROGRAM THAT ORIGINATED AS MTT UNDER SP1.3.  FEATURES:\n        READ/DISPLAY MASTER TRACE TABLE\n        ENTER OPERATOR COMMANDS\n        CAN USE FIND TO SEARCH THE MASTER TRACE TABLE\n              F 'SEARCH ARGUMENT IN QUOTES'\n\nINSTALL INSTRUCTIONS:\n1. UPDATE SYSDSVC TO REFLECT PROPER PROCEDURE FOR AN AUTHORIZED SVC AT\nYOUR INSTALLATION.\n2. UPDATE THE ASSEMBLY JCL CALLED MTTXAJ TO REFLECT LIBRARIES AT\nYOUR INSTALLATION.\n3. ENTER 'TSO MTTXA' FROM ISPF OR MTTXA FROM THE READY STATE IN TSO.\n4. PF-1 WILL DISPLAY PFKEY DEFINITIONS.\n________________________________________________________________________\nMTT      -  SAME AS ABOVE FOR SP1.X SYSTEMS. WE HAVE NOT USED FOR 3\nYEARS SINCE GOING TO XA.\n\nINSTALL INSTRUCTIONS:\n1. UPDATE SYSDSVC TO REFLECT PROPER PROCEDURE FOR AN AUTHORIZED SVC AT\nYOUR INSTALLATION.\n2. UPDATE THE ASSEMBLY JCL CALLED MTTJ TO REFLECT LIBRARIES AT\nYOUR INSTALLATION.\n3. ENTER 'TSO MTT' FROM ISPF OR MTT FROM THE READY STATE IN TSO.\n4. PF-1 WILL DISPLAY PFKEY DEFINITIONS.\n________________________________________________________________________\n04/10/90 - UPDATED FOR ASVTMAXU, WAS HARDCODED AT 210.  SECURITY CHECK\n           FOR ACCOUNT AUTHORITY. PAT MURPHY 214-216-3139\n\nSWAPIN   -  WILL SYSEVENT A JOB TO NEW PERFORMANCE GROUP.\n\nINSTALL INSTRUCTIONS:\n1. UPDATE SYSDSVC TO REFLECT PROPER PROCEDURE FOR AN AUTHORIZED SVC AT\nYOUR INSTALLATION.\n2. UPDATE THE ASSEMBLY JCL CALLED SWAPINJ TO REFLECT LIBRARIES AT\nYOUR INSTALLATION.\n3. ENTER 'TSO SWAPIN' FROM ISPF OR SWAPIN FROM THE READY STATE IN TSO.\n________________________________________________________________________\nNOT UPDATED SINCE 1987.\nAUTOWTOR -  MPF EXIT TO REPLY M. CAN USE FOR IEC701D WITH CARTRIDGES\nTO BE INITIALIZED (THAT IS THE WAY WE USE IT). THE OPERATOR SETS THE\nMPF TO THE PARMLIB MEMBER THAT HAS THE IEC701D AND AUTOWTOR (SEE\nMPFLST03 FOR AN EXAMPLE OF A PARMLIB MEMBER). THE AUTOWTOR WILL GIVE\nM TO THE IEC701D AND THE OPERATOR LOOKS AT THE VISUAL DISPLAY ON THE\n3480 TO SEE WHAT CARTTRIDGE NUMBER TO INSERT.\n\nINSTALL INSTRUCTIONS:\n1. UPDATE THE ASSEMBLY JCL CALLED AUTOWTOJ TO REFLECT LIBRARIES AT\nYOUR INSTALLATION.\n2. MODIFY A MEMBER IN SYS1.PARMLIB TO CONTAIN THE FOLLOWING LINE:\nIEC701D,SUP(NO),USEREXIT(AUTOWTOR)\nTHEN ISSUE THE OPERATOR COMMAND, SET MPF=XX WHERE XX IS THE MEMBER\nJUST UPDATED IN PARMLIB.\n________________________________________________________________________\n04/10/90 ADDED UPDATED VERSION WITH CHANGES BELOW.\nIGGPRE00 -  DADSM ALLOCATION EXIT TO KEEP CERTAIN PROBLEM DATASETS FROM\nBEING ALLOCATED ON PACKS BEGINNING WITH STG (STORAGE PACKS).\nYOU WOULD BE ABLE TO GET SOME IDEAS OFF OF THIS, BUT YOU WILL PROBABLY\nNEED TO CHANGE IT TO MATCH YOUR INSTALLATION NEEDS.\n\n         LOADS IGGPRETB THAT CONTAINS SOME PREFIXES OF DATASETS THAT\n HAVE BEEN FILLING STORAGE PACKS.  IT ALSO KEEPS PROGRAMMERS (RACF\n DEFAULT GROUP PGRB OR PGR) OFF OF PRODUCTION PACKS THAT START WITH\n VSM OR STG.  DEV OR DEVC IS WHERE THEY SHOULD BE.\n\n MODIFICATIONS:\n\n    3/01/87   DONT ALLOW ALLOCATION WITH EXPDT.          MKT\n    3/11/87   DONT ALLOW NONVSAM ALLOC ON A VSAM PACK.   MKT\n    9/10/87   DONT ALLOW DEVELOPMENT ALLOC ON PROD PACKS.MKT\n    5/22/88   PROBLEM WITH NEW ISPF - PMM\n    6/24/88   CHECK DEVV VSAM ONLY  - PMM\n    9/20/89   ISPF FIX AND CHANGE USER IDS AND ADD LIBXXX PACKS MKT\n\nIGGPRETB -  TABLE LOADED BY IGGPRE00 THAT CONTAINS THE FIRST 1 TO 12\nCHARACTERS OF DATASET NAMES NOT TO BE ALLOCATED ON THE PACKS BEGINNING\nWITH STG.\n\nINSTALL INSTRUCTIONS:\n1. UPDATE THE ASSEMBLY JCL CALLED IGGPREJ TO REFLECT LIBRARIES AT\nYOUR INSTALLATION.\n2. IPL WITH CLPA OR MODREP THE IGGPRE00 AND IGGPRETB MODULES IN LPALIB.\n________________________________________________________________________\nNOT UPDATED SINCE 1987.\nZTPP0210 -  PROGRAM TO WRITE HEX 'FF' TO FIRST PDS DIRECTORY ENTRY\nTHEREBY DELETING ALL MEMBERS OF THE PDS AND LEAVING THE LIBRARY.\n\nZTPP210J -  SAMPLE EXECUTION JCL TO RUN ZTPP0210.\n\nZTPPASM  -  JCL TO ASSEMBLE ZTPP0210.\n\nINSTALL INSTRUCTIONS:\n1. UPDATE THE ASSEMBLY JCL CALLED ZTPPASM TO REFLECT LIBRARIES AT\nYOUR INSTALLATION.\n2. SAMPLE EXECUTION JCL IS IN ZTPP210J.\n________________________________________________________________________\nSASTSOMN -  SAS PROGRAM TO PRINT TSOMON'S RECORDING OF COMMANDS ON\nTSO.\n\n./ ADD NAME=AUTOWTOJ\n//MURFAUTO JOB (6496,B014),MURF,CLASS=T,MSGCLASS=T,NOTIFY=MURF\n//*  JCL TO INSTALL AN MPF EXIT\n//*\n//*  CHANGE SYSLIB ACCORDING TO YOUR IPORES\n//*  CHANGE SYSLIB AND SYLMOD IN LKED STEP TO LINK LIST LIBRARY\n//*\n//COM     EXEC PGM=IEV90,REGION=512K,\n//    PARM='LOAD,XREF(SHORT),LINECNT=55,NODECK,RENT'\n//*\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB,DCB=BLKSIZE=23440\n//         DD  DISP=SHR,DSN=SYS1.AMODGEN\n//SYSLIN   DD  UNIT=VIO,DSN=&LOADSET,DISP=(MOD,PASS),\n//             SPACE=(CYL,(2,2)),DCB=BLKSIZE=1680\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(10,2))\n//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(12,2))\n//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(20,2))\n//SYSPUNCH DD  DUMMY =*,DCB=FUNC=I\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSIN    DD  DSN=MURF.SHARE.LIBRARY(AUTOWTOR),DISP=SHR\n//*\n//LKED         EXEC PGM=IEWL,REGION=1024K,COND=(4,LT),\n//             PARM='XREF,LET,LIST,RENT,REUS,AC=1'\n//SYSPRINT     DD   SYSOUT=*\n//SYSUT1       DD   DSN=&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD      DD   DISP=SHR,DSN=SYS1.LINKLIB(AUTOWTOR)\n//SYSLIN       DD   UNIT=SYSDA,DSN=&LOADSET,DISP=(OLD,DELETE)\n//             DD   DDNAME=SYSIN\n//SYSIN        DD   *\n NAME AUTOWTOR(R)\n./ ADD NAME=AUTOWTOR\nAUTOWTOR TITLE '***** AUTOMATIC REPLY TO WTORS *****'\n***********************************************************************\n*   TITLE: AUTOWTOR                                                   *\n*                                                                     *\n*   AUTHOR: MURPHY                                                    *\n*                                                                     *\n*   DATE-WRITTEN: 12/17/85                                            *\n*                                                                     *\n*   REMARKS:                                                          *\n*                                                                     *\n*        AUTOMATICALLY GIVE REPLY OF M TO MESSAGE IEC701D. IT WORKS   *\n*   WELL FOR CARTRIDGES - THE EXIT GIVES THE SYSTEM A U AND THE       *\n*   3480 WILL HAVE THE CARTRIDGE NUMBER FOR THE OPERATOR TO INSERT.   *\n*   IEC701D,SUP(NO),USEREXIT(AUTOWTOR) NEED TO GO IN MPF MEMBER IN    *\n*   SYS1.PARMLIB, THEN USE SET MPF=XX WHATEVER MEMBER YOU SET IT TO.  *\n*   SEE MPFLST03 FOR EXAMPLE.                                         *\n*                                                                     *\n***********************************************************************\nAUTOWTOR CSECT\nAUTOWTOR AMODE 31\nAUTOWTOR RMODE ANY\nCTXTPTR  EQU   5\n         BEGIN PROGRAM=AUTOWTOR\n*        SAVES REGISTERS AND INSERTS PROGRAM, DATE, AND TIME\n         LR    R12,R15            LOAD ADDRESS OF ENTRY POINT\n         USING AUTOWTOR,R12\n         LR    R9,R1\n         L     R5,0(,R1)\n         USING CTXT,R5            ADDRESSING CTXT\n         CLC   0(2,R5),=C'CT'\n         BNE   RETURN\n         GETMAIN RU,LV=WORKL,LOC=BELOW,SP=229\n         LR    R3,R1              ADDRESS OF WORK AREA/SAVEAREA\n         USING SAVDSECT,R3        ADDRESSABILITY\n         ST    R13,SAVEAREA+4     STORE CALLER SAVEAREA ADDRESS (HSA)\n         ST    R3,8(,R13)         ADD OF PROGRAM SAVE IN CALLER(LSA)\n         LR    R13,R3             ADDRESS OF SAVEAREA IN R13\n         L     R2,CTXTTXPJ\n         USING CTXTATTR,R2        MSG ATTRIBUTES\n         LA    R4,CTXTTMSG        ADDRESS OF TEXT AREA\n         USING MSGTEXT,R4\n         MVC   WTOEXEC,WTOLIST\n         MVC   WTOEXEC+24(8),MSGID   JOB NAME\n         XC    MGCRPL(MGCRLTH),MGCRPL  CLEAR PARAMETER LIST\n         MVC   MGCRTEXT(L'TXTINSRT),TXTINSRT MOVE IN REPLY BUFFER\n         MVC   REPLY,CTXTRPID     INSERT REPLY ID\n         LA    R1,(MGCRTEXT-MGCRPL)+L'TXTINSRT  GET MGCRPL LENGTH\n         STC   R1,MGCRLGTH        SAVE LENGTH IN MGCRPL\n         SR    R0,R0\n         MGCR  MGCRPL\n         DROP  R2,R4\n         WTO   MF=(E,WTOEXEC)\nFREERET  L     R13,4(,R13)        ADDRESS OF CALLING PROGRAM SAVEAREA\n         FREEMAIN RU,LV=WORKL,A=(3),SP=229\nRETURN   SR    R15,R15\n         RETURN (14,12),,RC=(15)\nTXTINSRT DC    CL11'REPLY XX,M '  REPLY\nWTOLIST  WTO   'AUTOWTOR REPLIED TO JOBNAME   - AS SELECTED BY MPF',   X\n               ROUTCDE=11,MF=L\nCNCLMSG  EQU   *-WTOLIST\nSAVDSECT DSECT\nSAVEAREA DS    18F\n         DS    0F\nWTOEXEC  DS    CL(CNCLMSG)\nMGCR     IEZMGCR DSECT=NO\n         ORG   MGCRTEXT\nCOMMAND  DS    CL6\nREPLY    DS    CL2\nREPLYMSG DS    CL3\n         ORG\nWORKL    EQU   *-SAVEAREA\nMSGTEXT  DSECT\nMSGID    DS    CL8\nJOBDATA  DS    CL8\n         ORG   MSGTEXT\n         DS    CL4\nWTORID   DS    CL8\nCTXTATTR DSECT\n         DS    CL6\nCTXTTMSG DS    CL126\nCTXT     DSECT\n         DS    CL8\nCTXTTXPJ DS    CL4          POINTER TO MAJOR LINE TEXT\nCTXTTXPN DS    CL4          POINTER TO MINOR LINE TEXT\n         DS    CL8\nCTXTRPID DS    CL2          REPLY ID\n         END\n./ ADD NAME=CONSOLE\n         TITLE 'CONSOLE DISPLAY'\n*******************************************************************     DOC FILE\n*                                                                 *     DOC FILE\n*            D I S C L A I M E R    S E C T I O N                 *     DOC FILE\n*                                                                 *     DOC FILE\n*******************************************************************     DOC FILE\n*                                                                 *     DOC FILE\n* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *     DOC FILE\n* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        *     DOC FILE\n* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *     DOC FILE\n* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *     DOC FILE\n* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *     DOC FILE\n* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *     DOC FILE\n* SUPPLIED .                                                      *     DOC FILE\n*                                                                 *     DOC FILE\n* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *     DOC FILE\n* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *     DOC FILE\n* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *     DOC FILE\n* FUTURE .                                                        *     DOC FILE\n*                                                                 *     DOC FILE\n*******************************************************************     DOC FILE\n***********************************************************************\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*        DISPLAY MVS CONSOLE DISPLAY WITH AUTOMATIC REFRESH OF SCREEN *\n*        TO PRESENT A CONSOLE APPEARANCE.                             *\n*                                                                     *\n*        USED THE BASIC CROSS MEMORY CONSOLE BUFFER READ FROM THE     *\n*        CDF PROGRAM ON THE SHARE TAPE, AND MODIFIED TO A COMMAND     *\n*        PROCESSOR WITH AUTO UPDATE/HIGHLIGHTED MESSAGES.             *\n*               PAT MURPHY - TEXAS UTILITIES SERVICES 214-289-5591    *\n*                                                                     *\n***********************************************************************\nCONSOLE CSECT\n         BEGIN PROGRAM=CONSOLE\n         LR    R12,R15\n         USING CONSOLE,R12\n         LR    R2,R1\n         GETMAIN R,LV=WORKLENG\n         LR    R3,R1\n         ST    R13,4(R3)      SAVE THE CALLER'S R13\n         ST    R3,8(,R13)\n         LR    R13,R3\n         USING WORKAREA,R13\n         ST    R2,SAVECPPL\n         USING CPPL,R2\n         L     R6,CPPLPSCB\n         DROP  R2\n         USING PSCB,R6\n         MVC   USERID,PSCBUSER\n         DROP  R6\n         MVI   BLANKS,X'40'\n         MVC   BLANKS+1(79),BLANKS\n         MVI   USERFLAG,X'00'\n         MVI   CNSLFLAG,X'00'\n         MVI   THRUFLAG,X'00'\n         MVC   CMDLINE,BLANKS\n         LA    R7,TABLEND\n         LA    R6,4\n         LA    R5,TABLE\nTBLOOP   CLC   0(4,R5),USERID\n         BE    USEROK\n         BXLE  R5,R6,TBLOOP\n*        B     NOAUTH\n*SEROK   MVI   USERFLAG,X'FF'\nUSEROK   EQU   *\nVEROK    DELETE EP=IKJEFFUT\n         MVI   AUTOFLAG,X'00' AUTO MODE FLAG\n         MVI   RESHOWFL,X'00' RESHOW INDICATOR\n         MVI   MOD5FLAG,X'00' FLAG FOR MOD 5\n         MVI   SCREEN,X'03' WCC\n         MVC   CLEAR(17),CLR CLEAR SCREEN CONTROL CHARS\n         GTSIZE ,                 TERMINAL CHARACTERISTICS\n         LTR   R0,R0              DISPLAY DEVICE?\n         BZ    FREESKIP           YES, GO FREE AND RETURN\n         CH    R1,EIGHTY          80 CHAR LINES\n         BNE   CHEKM5             NO, SET MODE 2\n         CH    R0,FORTY3          MOD 4?\n         BE    SETM4              YES, BRANCH\n         CH    R0,THIRTY2         MOD 3?\n         BE    SETM3              YES, BRANCH\nSETM2    STSIZE SIZE=80,LINE=24   SET MODEL 2\n         LTR   R15,R15            ZERO RET CODE\n         BNZ   FREESKIP           NO, RETURN\n         LA    R3,24              22 LINES PER SCREEN\n         MVC   CURSOR,=X'5CF0'    ROW 24 COL 2\n         MVC   ENDOFSCR,=X'5D7F'    ROW 24 COL 80\n         MVC   TPUTLEN,=AL4(24*84+1) LENGTH OF TPUT\n         B     PROCESS\nCHEKM5   CH    R0,=H'27'          27 LINES?\n         BNE   SETM2\n         CH    R1,=H'132'         132 WIDTH?\n         BNE   SETM2\nSETM5    LA    R3,27              27 LINES PER SCREEN\n         MVI   CLEAR,X'7E'\n         MVI   MOD5FLAG,X'FF'\n         MVC   TPUTLEN,=AL4(27*84+1) LENGTH OF TPUT\n         MVC   ENDOFSCR,=X'F76B'  ROW 27 COL 132\n         MVC   CURSOR,=X'F5E8'    ROW 27 COL 2 IC\n         B     PROCESS\nSETM3    LA    R3,32              22 LINES PER SCREEN\n         MVC   TPUTLEN,=AL4(32*84+1) LENGTH OF TPUT\n         MVC   ENDOFSCR,=X'E77E'  ROW 32 COL 80\n         MVC   CURSOR,=X'E6F0'    ROW 32 COL 2 IC\n         B     PROCESS\nSETM4    LA    R3,43              22 LINES PER SCREEN\n         MVC   TPUTLEN,=AL4(43*84+1) LENGTH OF TPUT\nPROCESS  ST    R3,NUMLINES\n         MVI   HELPFLAG,X'00'\n         MVI   CMDFLAG,X'00'\n         LA    R1,16\n         L     R1,0(R1)\n         USING CVT,R1\n         L     R1,CVTASVT\n         DROP  R1\n         USING ASVT,R1\n         L     R5,ASVTMAXU\n         LA    R15,ASVTENTY-4\nASVTLOOP BCTR  R5,0\n         LTR   R5,R5\n         BZ    CONABEND\n         LA    R15,4(,R15)\n         ICM   R6,15,0(R15)\n         BM    ASVTLOOP\n         USING ASCB,R6\n         ICM   R7,15,ASCBJBNS\n         BZ    ASVTLOOP\n         CLC   =C'CONSOLE',0(R7)\n         BNE   ASVTLOOP\n         SR    R1,R1\n         LH    R1,ASCBASID\n         DROP  R1,R6\n*        TM    CVTDCB,CVTMVSE\n*        BZ    LOAD5\n*        DROP  R1\n*        LA    R1,7\nSTORECON ST    R1,CONSASID\n         BAL   R3,AUTHRIZ\n         AXRES AXLIST=AXLIST      RESERVE AN AX\n         L     R1,CONSASID        'CONSOLE' ASID\n         AXEXT ASID=(1)           EXTRACT AX OF 'CONSOLE'IN R0\n         AXSET AX=(0)             SET OUR AX TO THAT OF CONSOLE\n         BAL   R3,UNAUTH\n         B     SHOWCONS\nSHOWRTRN DS    0H\nFREESKIP LR    R3,R13\n         L     R13,SAVEAREA+4 RESTORE THE CALLER'S R13\n         FREEMAIN RC,A=(3),LV=WORKLENG\n         SR    R15,R15\n         RETURN (14,12),RC=(15)\nLOAD5    LA    R1,5\n         B     STORECON\nSHOWCONS DS    0H\n         STFSMODE ON,INITIAL=YES  FULL SCREEN MODE ON\n         TPUT  CLEAR,17,FULLSCR\n*---------------------------------------------------------------------*\n*          BUILD A TABLE OF UCM ADDRESSES (ONE PER CONSOLE)           *\n*---------------------------------------------------------------------*\nBLDUCMS  L     R4,16              R4 = ADDR OF CVT\n         USING CVT,R4\n         L     R4,CVTCUCB         R4 = ADDR OF 'CUCB' (UCM BASE)\n         DROP  R4\n         USING UCM,R4\n         L     R5,UCMVEA          R5 = ADDR OF FIRST UCM ENTRY\n         L     R6,UCMVEZ          R6 = LENGTH OF EACH UCM ENTRY\n         L     R7,UCMVEL          R7 = ADDR OF LAST UCM ENTRY\n         LA    R8,UCMTAB+4        R8 = ADDR OF UCMTAB\n         LA    R9,UCMTABE         R9 = ADDR OF END OF UCMTAB\n         XR    R2,R2              R2 = 0 (NUMBER OF VALID UCMS)\nUCMLOOP  ST    R5,0(0,R8)         SAVE UCM ADDRESS IN UCMTAB\n         LA    R2,1(0,R2)         R2  = R2  + 1  (ONE MORE UCM)\n         LA    R8,4(0,R8)         R8 = ADDR OF NEXT UCMTAB ENTRY\n         CR    R8,R9              DOES R8 POINT PAST END OF UCMTAB?\n         BNL   UCMDONE            YES; LEAVE LOOP\n         AR    R5,R6              R5 = ADDR OF NEXT UCM ENTRY\n         CR    R5,R7              DOES R5 POINT PAST UCM ENTRIES?\n         BL    UCMLOOP            NOPE; KEEP GOING\nUCMDONE  STH   R2,NUMUCMS         SAVE NUMBER OF UCMS FOUND\n         CLI   CNSLFLAG,X'FF'\n         BNE   SETMAST\n         MVC   OLDCONS,CONSOL\n         L     R4,CONSOL\n         LA    R4,1(,R4)\n         B     MASTSCAN\n         DROP  R4\n*---------------------------------------------------------------------*\n*        SCAN THE UCM FOR THE MASTER CONSOLE AS THE DEFAULT           *\n*        CONSOLE WHEN ENTERING THE \"JESOPER\" COMMAND.                 *\n*---------------------------------------------------------------------*\nSETMAST  SR    R4,R4\n         ST    R4,CONSOL\nMASTSCAN LA    R5,UCMTAB          SET POINTER TO UCM ADDRESS TABLE\nCKNUMUCM CH    R4,NUMUCMS         IS NUMBER TOO HIGH?\n         BNH   MASTCONT           NO, CONTINUE\n         CLI   CNSLFLAG,X'FF'\n         BNE   CONABEND\n         CLI   THRUFLAG,X'FF'\n         BE    CONABEND\n         MVI   THRUFLAG,X'FF'\n         SR    R4,R4              START W/ FIRST ENTRY\n         B     MASTCONT\nCONABEND ABEND 1\nMASTCONT SLL   R4,2               MAKE CONSOLE NUMBER TABLE INDEX\n         LA    R5,0(R5,R4)        SET POINTER TO UCM ADDRESS SLOT\n         L     R5,0(0,R5)         SET POINTER TO UCM\n         LTR   R5,R5\n         BZ    NEXT\n         USING UCMLIST,R5         TELL ASSEMBLER ABOUT UCM\n         CLI   CNSLFLAG,X'FF'\n         BE    SKIPMSTR\n         TM    UCMDISP1,UCMDISPA  IS THIS A MASTER CONSOLE?\n         BNZ   ACTIVCHK           YES ? FOUND THE MASTER CONSOLE ..\n         B     NEXT\nSKIPMSTR TM    UCMDISP1,UCMDISPC  GRAPHICS\n         BZ    NEXT\nACTIVCHK TM    UCMATR,UCMUF       ACTIVE?\n         BNZ   MASTFND\nNEXT     SRL   R4,2               RESET CONSOLE NUMBER TO RELATIVE\n         LA    R4,1(0,R4)         SET POINTER TO NEXT CONSOLE\n         B     MASTSCAN           CONTINUE MASTER CONSOLE SCAN LOOP\nMASTFND  SRL   R4,2               RESET CONSOLE NUMBER TO RELATIVE\n         ST    R4,CONSOL          SET VALID CONSOLE NUMBER (MASTER)\n         DROP  R5                 DONT NEED UCM ADDRESSABILITY NOW\nNEXTPAGE LA    R5,UCMTAB          R5 = ADDR OF UCMTAB\n         ICM   R4,15,CONSOL       R4 = CONSOLE TO BE DISPLAYED\n         BZ    WRTERR4            WE HAVE NO CONSOLE ZERO (MASTER)\n         CH    R4,NUMUCMS         IS NUMBER TOO HIGH?\n         BNH   GETUCM             NO, CONTINUE\nRESETCN  L     R4,OLDCONS         RESET TO OLD CONSOLE\n         ST    R4,CONSOL          AND SAVE IT\nGETUCM   SLL   R4,2               MULTIPLY BY 4\n         LA    R5,0(R5,R4)        R5 = ADDR OF ADDR OF UCM\n         L     R5,0(0,R5)         R5 = ADDR OF UCM\n         USING UCMLIST,R5\n         L     R6,UCMXB           R6 = ADDR OF RDCM\n         ST    R6,UCMTABX\n         USING IEERDCM,R6\n         LTR   R6,R6              IS THIS A GRAPHICS CONSOLE?\n         BP    GRAPHICS           YES\n         LA    R5,UCMTAB          R5 = ADDR OF UCMTAB\nWRTERR4  DS    0H\n         B     RESETCN            RESET THE CONSOLE NUMBER\nGRAPHICS EQU   *\nAUTHDONE EQU   *\n         MVC   OLDCONS,CONSOL\n         MVC   HEADING,HEADING1\n         MVI   CNSLFLAG,X'00'\n         L     R6,UCMTABX\n         L     R7,DCMADTRN        GET ADDRESS OF TDCM\n         USING STRTDCM,R7\n         BAL   R3,AUTHRIZ\n         L     R1,CONSASID        'CONSOLE' ASID IS 5 370/ 6 XA\n         SSAR  R1                 SET 'CONSOLE' AS SECONDARY\n         PRINT ON,GEN\n         SLR   R0,R0              SECONDARY KEY\n         LA    R1,L'LASTLINE      TRUE LENGTH\n         MVCP  LASTLINE(R1),DCMINPUT-STRTDCM(R7),R0\n         LA    R1,L'SIBPTR\n         SLR   R0,R0              SET STORAGE KEY\n         MVCP  SIBPTR(R1),DCMASCRN-STRTDCM(R7),R0 PT TO SCRN ADRJPB\n         LA    R1,2\n         MVCP  HEADING+8(R1),DCMDEL-STRTDCM(R7),R0   ROLL DELETE VAL\n         MVCP  RTME(R1),DCMRTME-STRTDCM(R7),R0       RTME\n         MVCP  RNUM(R1),DCMDL-STRTDCM(R7),R0       RTME\n         LA    R1,4\n         MVCP  CONL(R1),DCMLSCRN-STRTDCM(R7),R0\n         L     R8,SIBPTR          R8 = ADDR OF SCREEN IMAGE\n         L     R5,CONL\n         SR    R4,R4\n         SR    R5,R8\n         LA    R5,84(,R5)\n         ST    R5,CONL            SAVE IT\n         LA    R4,SCREEN          MY BUF\n         LA    R4,3737(,R4)\n         LR    R9,R5              BUFFER LEN\nMOVEBUFF DS    0H\n         SH    R8,=H'6'\n         SLR   R0,R0             RESET THE KEY\nMVCPLOOP DS    0H\n         MVCP  0(R5,R4),0(R8),R0 LOOP THRU THE CONSOLE BUFFER\n         BZ    GOTITALL\n         AL    R8,=F'256'        MAX LEN ALLOWED\n         AL    R4,=F'256'        MAX LEN ALLOWED\n         SL    R5,=F'256'        MAX LEN ALLOWED\n         B     MVCPLOOP\n*---------------------------------------------------------------------*\n*        IN ORDER TO ISSUE SVCS THE PRIMARY AND                       *\n*        SECONDARY ADDRSPC MUST BE THE SAME                           *\n*---------------------------------------------------------------------*\nGOTITALL DS    0H\n         EPAR  R1                EXTRACT PRIMARY ASN\n         SSAR  R1\n         BAL   R3,UNAUTH\n         DROP  R5,R6,R7\n         LA    R3,SCREEN         SET POINTER TO FIRST LINE OF BUF\n         LA    R3,3737(,R3)\n         LA    R9,HEADING+10\n         CLI   HEADING+9,C' '\n         BNE   RDMODE\n         LA    R9,HEADING+9\nRDMODE   MVC   0(6,R9),RTMEC\n         SR    R5,R5\n         LH    R5,RTME\n         CVD   R5,DOUBLWD\n         MVC   WORKLINE(5),PATTERN1\n         ED    WORKLINE(5),DOUBLWD+5\n         MVC   6(3,R9),WORKLINE+2\n         MVC   09(6,R9),RNUMC\n         SR    R5,R5\n         IC    R5,RNUM+1\n         CVD   R5,DOUBLWD\n         MVC   WORKLINE(5),PATTERN1\n         ED    WORKLINE(5),DOUBLWD+5\n         MVC   15(3,R9),WORKLINE+2\n         TIME  DEC\n         ST    R0,WORK\n         MVI   WORK+3,X'0C'\n         UNPK  DOUBLWD(7),WORK(4)\n         LA    R9,HEADING+36\n         MVC   0(2,R9),DOUBLWD\n         MVC   3(2,R9),DOUBLWD+2\n         MVC   6(2,R9),DOUBLWD+4\nFIRSTL   L     R9,NUMLINES       NUMBER OF LINES ON PROG TERMINAL\n         L     R5,CONL\n         SR    R4,R4\n         LA    R1,80\n         DR    R4,R1\n         ST    R5,CONL\n         CR    R9,R5\n         BNL   FIRSTL1\n         SR    R5,R9\n         L     R1,CONL\n         SR    R4,R4\n         LA    R5,2(,R5)\n         SR    R1,R5\n         ST    R1,CONL\n         LA    R1,84\n         MR    R4,R1\n         LA    R3,0(R5,R3)\nFIRSTL1  LA    R5,SCREEN+1            ADDRESS OF FIRST LINE\n         LA    R6,PAGEDEF             LINES TO BE DISPLAYED\n         CLI   MOD5FLAG,X'FF'         MOD 5?\n         BNE   NOTMOD5\n         LA    R6,PAGEDEF5\nNOTMOD5  L     R1,CONL\n         SR    R9,R1\n         SR    R10,R10\n         BCTR  R9,0                   MINUS ONE\n         MVC   0(5,R5),0(R6)          CONTROL CHAR\n         MVC   5(79,R5),HEADING       HEADING\n         SR    R15,R15\n         IC    R15,CONSOL+3\n         SRL   R15,4                  ONLY WANT LEFT BYTE\n         C     R15,TEN\n         BL    NUMERIC1\n         O     R15,CHAROR\n         B     SECONDCK\nNUMERIC1 O     R15,NUMBEROR\nSECONDCK STC   R15,78(R5)\n         IC    R15,CONSOL+3\n         SLL   R15,28                 ONLY WANT LEFT BYTE\n         SRL   R15,28\n         C     R15,TEN\n         BL    NUMERIC2\n         O     R15,CHAROR\n         B     STORECHR\nNUMERIC2 O     R15,NUMBEROR\nSTORECHR STC   R15,79(R5)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R10,85(,R10)\n         LA    R6,5(,R6)              INCREMENT\n         BCTR  R1,0\n         CLI   HELPFLAG,X'FF'         HELP?\n         BNE   MOVESTUP\n         L     R9,NUMLINES\n         S     R9,=F'07'\n         MVC   0(5,R5),0(R6)\n         MVC   5(79,R5),BLANKS\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,05(,R6)             INCREMENT\n         MVC   0(5,R5),0(R6)\n         LA    R1,HEADING1\n         MVC   5(79,R5),80(R1)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,5(,R6)              INCREMENT\n         MVC   0(5,R5),0(R6)\n         LA    R1,80(,R1)\n         MVC   5(79,R5),80(R1)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,5(,R6)              INCREMENT\n         MVC   0(5,R5),0(R6)\n         MVC   5(79,R5),160(R1)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,5(,R6)              INCREMENT\n         MVC   0(5,R5),0(R6)\n         MVC   5(79,R5),240(R1)\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,5(,R6)              INCREMENT\n         LA    R10,420(,R10)\n         B     SPACLOOP\nMOVESTUP LR    R15,R5\nMOVELOOP CLI   CLRFLAG,X'FF'\n         BE    MVIT\n         CLC   5(74,R15),9(R3)        HAS THIS LINE CHANGED?\n         BNE   MVIT\n         CLC   4(1,R15),4(R3)         ATTRIBUTE BYTE CHANGED?\n         BE    SKPMV                  NO NEED SENDING DOWN THE LINE\nMVIT     MVC   0(4,R5),0(R6)          LINE ADDRESS\n         MVC   4(1,R5),4(R3)          ATTRIBUTE BYTE\n         MVC   5(79,R5),9(R3)         MOVE LINE OF PRINT\n         MVC   80(4,R5),BLANKS\n         LA    R5,84(,R5)\n         LA    R10,84(,R10)\nSKPMV    LA    R6,05(,R6)             INCREMENT\n         LA    R3,84(,R3)             INCREMENT\n         LA    R15,84(,R15)\n         MVI   CLRFLAG,X'FF'          SCREEN HAS CHANGED FROM HERE DOWN\n         BCT   R1,MOVELOOP            LOOP\n         MVI   CLRFLAG,X'00'\nSPACLOOP LA    R6,05(,R6)             INCREMENT\n         BCTR  R9,0\n         C     R9,=F'0'\n         BH    SPACLOOP\n         MVC   0(5,R5),0(R6)          LINE ADDRESS\n         MVI   4(R5),X'C9'            ATTRIBUTE\n         MVI   5(R5),X'13'            INSERT CURSOR\n         CLI   HELPFLAG,X'FF'\n         BE    GOAHEAD2\n         CLI   IPLFLAG,X'FF'\n         BE    GOAHEAD2\n         CLI   AUTOFLAG,X'FF'\n         BE    AUTOROLL\nGOAHEAD  CLI   RESHOWFL,X'FF'\n         BNE   GOAHEAD2\n         MVI   RESHOWFL,X'00'\n         MVC   6(72,R5),CMDLINE+4\n         B     GOAHEAD3\nGOAHEAD2 MVC   6(79,R5),BLANKS        LAST LINE IS INPUT LINE\nGOAHEAD3 MVI   CMDFLAG,X'00'\n         LA    R10,84(,R10)\n         LR    R0,R10\n         LA    R1,SCREEN              ADDRESS OF SCREEN\n         TPUT  (1),(0),FULLSCR        TPUT\n         MVC   REPLY,BLANKS           CLEAR\nTGET1    TGET  REPLY,84,ASIS,WAIT     INPUT\n         MVI   HELPFLAG,X'00'\n         B     CHEKOUT\nAUTOROLL EQU   *\n*        L     R0,TPUTLEN             LENGTH OF TPUT\n         LA    R1,SCREEN              ADDRESS OF SCREEN\n         CLI   RESHOWFL,X'FF'\n         BNE   GOAHEAD5\n         MVI   RESHOWFL,X'00'\n         MVC   6(72,R5),CMDLINE+4\n         MVC   REPLY,BLANKS\n         LA    R10,72(,R10)\n         B     GOAHEAD5\n*OAHEAD4 S     R0,=F'79'\nGOAHEAD5 CLI   CMDFLAG,X'FF'\n         BNE   AUTOTPUT\n         MVC   0(5,R5),0(R6)          LINE ADDRESS\n         MVI   4(R5),X'C9'            ATTRIBUTE\n         MVI   5(R5),X'13'            INSERT CURSOR\n         MVI   CMDFLAG,X'00'\nAUTOTPUT LA    R0,5(,R10)\n*        LR    R0,R10\n         TPUT  (1),(0),FULLSCR\n         STIMER WAIT,BINTVL=TIMER\n         TGET  REPLY,70,ASIS,NOWAIT\nCHEKOUT  CLI   REPLY,X'7D'\n         BE    GOTSTUFF\n         NI    REPLY,X'0F'\n         CLI   REPLY,X'01'\n         BE    HELP\n         CLI   REPLY,X'02'\n         BE    AUTOSTOP\n         CLI   REPLY,X'03'\n         BE    SHOWRTRN\n         CLI   REPLY,X'04'\n         BE    AUTOON\n         CLI   REPLY,X'05'\n         BE    CNSLSW\n         CLI   REPLY,X'06'\n         BE    RESHOW\n         CLI   REPLY,X'07'\n         BE    MTT\n         CLI   REPLY,X'08'\n         BE    AUTO10\n         CLI   REPLY,X'09'\n         BE    AUTO2\n         CLI   REPLY,X'0A'\n         BE    OMON\n         CLI   REPLY,X'0B'\n         BE    AUTO4\n         CLI   REPLY,X'0C'\n         BE    IPLINFO\nNOTIFY   MVI   CLRFLAG,X'FF'\n         MVI   CMDFLAG,X'FF'\n         B     AUTHDONE\nCNSLSW   MVI   CNSLFLAG,X'FF'\n         MVI   REPLY,X'00'\n         MVI   THRUFLAG,X'00'\n         MVI   CLRFLAG,X'FF'\n         B     SHOWCONS\nRESHOW   MVI   RESHOWFL,X'FF'\n         B     AUTHDONE\nIPLINFO  MVC   WORKLINE,BLANKS\n         MVC   WORKLINE+10(50),MESSAGE\n         LA    R1,16              HEX 10\n         L     R2,0(R1)           ADDRESS OV CVT\n         USING CVT,R2\n         L     R3,CVTSMCA         ADDRESS OF SMF CONTROL AREA\n         L     R1,CVTSYSAD\n         MVC   WORKLINE+72(3),13(1)\n         MVC   WORKLINE+65(7),=C'SYSRES='\n         USING SMCABASE,R3\n         MVC   IPLDATE,SMCAIDTE   IPL DATE\n         MVC   IPLTIME,SMCAITME   IPL TIME\n         DROP  R3\n         L     R3,CVTASMVT\n         TM    1(R3),X'08'     CLPA?\n         BNZ   NOCLPA             1 MEANS A QUICK START - NO CLPA WAS\n         MVC   WORKLINE+57(3),=C'YES'\n         B     DATEEDIT\nNOCLPA   MVC   WORKLINE+57(3),=C'NO '\nDATEEDIT MVC   WORKLINE+31(5),PATTERN1\n         ED    WORKLINE+31(5),IPLDATE+1 MAKE PRINTABLE\n         DROP  R2\n         L     R6,IPLTIME\n         SRDA  R6,32(0)\n         L     R3,THREE60\n         DR    R6,R3\n         CVD   R7,DOUBLWD\n         MVC   WORK(4),=X'40212020'\n         ED    WORK(4),DOUBLWD+6\n         MVC   WORKLINE+43(2),WORK+2\n         SRDA  R6,32              SHIFT REMAINDER\n         L     R3,SIXTY\n         DR    R6,R3\n         CVD   R7,DOUBLWD\n         MVC   WORK(4),=X'F0212020'\n         ED    WORK(4),DOUBLWD+6\n         MVC   WORKLINE+46(2),WORK+2\n         LA    R5,SCREEN+1            ADDRESS OF FIRST LINE\n         LA    R6,PAGEDEF             LINES TO BE DISPLAYED\n         LA    R10,85\n         CLI   MOD5FLAG,X'FF'\n         BNE   NONMOD5\n         LA    R6,PAGEDEF5\nNONMOD5  L     R9,NUMLINES\n         BCTR  R9,0\n         MVC   0(5,R5),0(R6)\n         MVC   5(79,R5),WORKLINE\n         LA    R5,84(,R5)             INCREMENT\n         LA    R6,05(,R6)             INCREMENT\n         BCTR  R9,0\n         TPUT  CLEAR,17,FULLSCR\n         MVI   IPLFLAG,X'FF'\n         TCLEARQ INPUT\n         B     SPACLOOP\nMTT      L     R1,SAVECPPL\n         LINK  EP=ZTPR0205\n         TPUT  CLEAR,17,FULLSCR\n         MVI   AUTOFLAG,X'00'\n         MVI   CLRFLAG,X'FF'\n         B     AUTHDONE\nOMON     L     R1,SAVECPPL\n         LINK  EP=RMFMON\n         TPUT  CLEAR,17,FULLSCR\n         MVI   AUTOFLAG,X'00'\n         MVI   CLRFLAG,X'FF'\n         B     AUTHDONE\nHELP     MVI   HELPFLAG,X'FF'\n         MVI   AUTOFLAG,X'00'\n         TPUT  CLEAR,17,FULLSCR\n         MVI   CLRFLAG,X'FF'\n         TCLEARQ INPUT\n         B     FIRSTL\nAUTOON   MVC   TIMER,ONE\n         B     AUTOSET\nAUTO2    MVC   TIMER,THREE\n         B     AUTOSET\nAUTO4    MVC   TIMER,FIVE\nAUTOSET  MVI   AUTOFLAG,X'FF'\n         MVC   5(72,R5),BLANKS\n         MVI   REPLY,X'00'\n         B     AUTHDONE\nAUTO10   MVC   TIMER,=F'990'            APP 10 SECS\n         B     AUTOSET\nAUTOSTOP MVI   AUTOFLAG,X'00'\n         B     AUTHDONE\nGOTSTUFF DS    0H\n         CLI   REPLY+6,C'>'        IS IT NOTIFY MESSAGE?\n         BE    NOTIFY              THEN EXIT\n         OC    REPLY+6(74),BLANKS  ALL INPUT UPPER CASE\n         CLC   REPLY+6(70),BLANKS  COMMAND AREA IS SPACES?\n         BE    AUTHDONE            THEN A COMMAND WAS NOT ENTERED\n         MVC   CMDLINE+4(72),REPLY+6\n         MVC   CMDLINE(4),CMDFMT\n         MVC   REPLY,BLANKS\n         CLI   CMDLINE+4,C'Z'      IS IT END,\n         BE    SHOWRTRN            THEN EXIT\n         CLI   CMDLINE+4,C'X'      IS IT END,\n         BE    SHOWRTRN            THEN EXIT\n         CLC   CMDLINE+4(3),=C'END' IS IT END,\n         BE    SHOWRTRN             THEN EXIT\nGOTCMD   TPUT  CLEAR,17,FULLSCR\n         MVI   CLRFLAG,X'FF'\n         CLI   USERFLAG,X'FF'\n         BNE   NOWTO\n         MVC   WTOCMD(100),WTOLIST\n         MVC   WTOCMD+8(72),CMDLINE+4\n         MVC   WTOCMD+78(4),USERID\n         LA    R7,WTOCMD\n         WTL   MF=(E,(R7))\nNOWTO    BAL   R3,AUTHRIZ\n         SLR   R0,0                 CLEAR REG 0\n         L     R0,CONSOL\nISSUE    LA    R1,CMDLINE          GET ADDRESS OF COMMAND I SMF\n         SVC   34                  ISSUE COMMAND VIA SVC 34\n         STIMER WAIT,BINTVL=ONE\n         BAL   R3,UNAUTH\n         MVI   CMDFLAG,X'FF'\n         B     AUTHDONE\nNOAUTH   DELETE EP=IKJEFFUT\n         TPUT  MSGNO1,13\n         B     SHOWRTRN\nAUTHRIZ  STAX  DEFER=YES\n         L     R1,AUTH\n         LA    R0,1\n         SYSDSVC SVC=244\n         MODESET MF=(E,SUPRMOD)  GET INTO SUPV STATE AND KEY ZERO\n         BR    R3                ****************************\nUNAUTH   L     R1,16             *  A                       *\n         USING CVT,R1            *   D                      *\n         L     R1,CVTTCBP        *    D      J              *\n         DROP  R1                *     R      S             *\n         L     R1,4(R1)          *      E      C            *\n         USING TCB,R1            *       S      B           *\n         L     R1,TCBJSCB        *        S                 *\n         DROP  R1                ****************************\n         NI    236(R1),X'FE'     SET AUTHORIZATION OFF\n         MODESET MF=(E,PROBMOD)\n         STAX  DEFER=NO\n         BR    R3\n         EJECT\n         LTORG\n*---------------------------------------------------------------------*\n*                         C O N S T A N T S                           *\n*---------------------------------------------------------------------*\nCMDFMT   DC    Y(76),Y(00)            LENGTH OF COMMAND\nMESSAGE  DC    CL50'LAST SYSTEM IPL DATE XXXXX  TIME HH:MM  CLPA = YN '\nPATTERN1 DC    XL5'2120202020'\nTHREE60  DC    F'360000'\nSIXTY    DC    F'6000'\nAXLIST   DC    H'1',H'0'           AXRES PARMLIST\n         CNOP  0,8\n*---------------------------------------------------------------------*\n*               327X SCREEN CLEAR CONTROL CHARACTERS                  *\n*---------------------------------------------------------------------*\nCLR      DC    X'03'              WCC - CLEAR SCREEN\n         DC    X'11F56F'          SBA TO ROW 43, COL 80\n         DC    X'114040'          SBA TO ROW 1, COL 1\n         DC    X'3C404000'        FILL SCREEN WITH NULLS\n         DC    X'11F460'          ROW 43 COL 2\n         DC    X'1DE913'          SBA TO ROW 1, COL 1 1DC813\nONE      DC    A(140)             1.4 SECOND\nFIVE     DC    A(420)             5 SECONDS\nTHREE    DC    A(220)             3 SECONDS\nTEN      DC    F'10'\nNUMBEROR DC    XL4'000000F0'\nCHAROR   DC    XL4'000000C0'\nHEXFS    DC    XL4'FFFFFFFF'\nHEXZIP   DC    2F'0000000000000000'\nMSGNO1   DC    CL13'SYSTEM ACTIVE'\n         DS    0F\nWTOLIST  WTL   '                                                       X\n                                       CONSOLE',MF=L\n         DS    0F\nAUTH     DC    CL4'AUTH'\n         SPACE 5\nSUPRMOD  MODESET KEY=ZERO,MODE=SUP,MF=L\nPROBMOD  MODESET KEY=NZERO,MODE=PROB,MF=L\nTABLE    DC    CL4'XXXX'          USERIDS\nTABLEND  DC    CL4'XXXX'\nRTMEC    DC    CL6',RTME='\nRNUMC    DC    CL6',RNUM='\nFORTY3   DC    H'43'\nTHIRTY2  DC    H'32'\nEIGHTY   DC    H'80'\nGETMSG   DC    CL50'CONSOLE-GETMAIN ERROR, PLEASE NOTIFY TECH SUPPORT'\nFREEMSG  DC    CL50'CONSOLE-FREEMAIN ERROR,PLEASE NOTIFY TECH SUPPORT'\nPAGEDEF  DC    X'1140401DE8'          ROW  1   COL  1\n         DC    X'11C1501DC4'          ROW  2   COL  1\n         DC    X'11C2601DC4'          ROW  3   COL  1\n         DC    X'11C3F01DC4'          ROW  4   COL  1\n         DC    X'11C5401DC4'          ROW  5   COL  1\n         DC    X'11C6501DC4'          ROW  6   COL  1\n         DC    X'11C7601DC4'          ROW  7   COL  1\n         DC    X'11C8F01DC4'          ROW  8   COL  1\n         DC    X'114A401DC4'          ROW  9   COL  1\n         DC    X'114B501DC4'          ROW 10   COL  1\n         DC    X'114C601DC4'          ROW 11   COL  1\n         DC    X'114DF01DC4'          ROW 12   COL  1\n         DC    X'114F401DC4'          ROW 13   COL  1\n         DC    X'1150501DC4'          ROW 14   COL  1\n         DC    X'11D1601DC4'          ROW 15   COL  1\n         DC    X'11D2F01DC4'          ROW 16   COL  1\n         DC    X'11D4401DC4'          ROW 17   COL  1\n         DC    X'11D5501DC4'          ROW 18   COL  1\n         DC    X'11D6601DC4'          ROW 19   COL  1\n         DC    X'11D7F01DC4'          ROW 20   COL  1\n         DC    X'11D9401DC4'          ROW 21   COL  1\n         DC    X'115A501DC4'          ROW 22   COL  1\n         DC    X'115B601DC4'          ROW 23   COL  1\n         DC    X'115CF01DC4'          ROW 24   COL  1\n         DC    X'115E401DC4'          ROW 25   COL  1\n         DC    X'115F501DC4'          ROW 26   COL  1\n         DC    X'1160601DC4'          ROW 27   COL  1\n         DC    X'1161F01DC4'          ROW 28   COL  1\n         DC    X'11E3401DC4'          ROW 29   COL  1\n         DC    X'11E4501DC4'          ROW 30   COL  1\n         DC    X'11E5601DC4'          ROW 31   COL  1\n         DC    X'11E6F01DC4'          ROW 32   COL  1\n         DC    X'11E8401DC4'          ROW 33   COL  1\n         DC    X'11E9501DC4'          ROW 34   COL  1\n         DC    X'116A601DC4'          ROW 35   COL  1\n         DC    X'116BF01DC4'          ROW 36   COL  1\n         DC    X'116D401DC4'          ROW 37   COL  1\n         DC    X'116E501DC4'          ROW 38   COL  1\n         DC    X'116F601DC4'          ROW 39   COL  1\n         DC    X'11F0F01DC4'          ROW 40   COL  1\n         DC    X'11F2401DC4'          ROW 41   COL  1\n         DC    X'11F3501DC4'          ROW 42   COL  1\n         DC    X'11F4601DC8'          ROW 43   COL  1\nPAGEDEF5 DC    X'1140401DE8'          ROW  1   COL  1 MODEL 5\n         DC    X'11C2C41DE4'          ROW  2   COL  1\n         DC    X'11C4C81DE4'          ROW  3   COL  1\n         DC    X'11C64C1DE4'          ROW  4   COL  1\n         DC    X'11C8501DE4'          ROW  5   COL  1\n         DC    X'114AD41DE4'          ROW  6   COL  1\n         DC    X'114CD81DE4'          ROW  7   COL  1\n         DC    X'114E5C1DE4'          ROW  8   COL  1\n         DC    X'1150601DE4'          ROW  9   COL  1\n         DC    X'11D2E41DE4'          ROW 10   COL  1\n         DC    X'11D4E81DE4'          ROW 11   COL  1\n         DC    X'11D66C1DE4'          ROW 12   COL  1\n         DC    X'11D8F01DE4'          ROW 13   COL  1\n         DC    X'115AF41DE4'          ROW 14   COL  1\n         DC    X'115CF81DE4'          ROW 15   COL  1\n         DC    X'115E7C1DE4'          ROW 16   COL  1\n         DC    X'1161401DE4'          ROW 17   COL  1\n         DC    X'11E3C41DE4'          ROW 18   COL  1\n         DC    X'11E5C81DE4'          ROW 19   COL  1\n         DC    X'11E74C1DE4'          ROW 20   COL  1\n         DC    X'11E9501DE4'          ROW 21   COL  1\n         DC    X'116BD41DE4'          ROW 22   COL  1\n         DC    X'116DD81DE4'          ROW 23   COL  1\n         DC    X'116F5C1DE4'          ROW 24   COL  1\n         DC    X'11F1601DE4'          ROW 25   COL  1\n         DC    X'11F3E41DE4'          ROW 26   COL  1\n         DC    X'11F5E81DE4'          ROW 27   COL  1\nHEADING1 DC    CL80'K S,DEL=                            99:99:99       X\n                             CONSOLE XX    '\nHELPMSG1 DC    CL80'PF-1   THIS DISPLAY         PF-2  STOP AUTO UPDATE X\n                 PF-3   END                '\nHELPMSG2 DC    CL80'PF-4   AUTO UPDATE 1 SEC    PF-5  ALTERNATE CONSOLEX\n                 PF-6   RESHOW LAST COMMAND'\nHELPMSG3 DC    CL80'PF-7   PAGE THRU MTT        PF-8  AUTO UPDATE 10 SEX\n               C PF-9   AUTO UPDATE 4 SEC  '\nHELPMSG4 DC    CL80'PF-10  RMFMON               PF-11 AUTO UPDATE 2 SECX\n                 PF-12  IPL INFO           '\nWORKAREA DSECT\nSAVEAREA DS    18F\nUCMTABX  DS    F\nWORKLINE DS    CL80\nREPLY    DS    CL80\nBLANKS   DS    CL80\nCMDLINE  DS    CL80\nHEADING  DS    CL80\nSIBPTR   DS    F                   PRT TO SCREEN IMAGE BUFFER\nUCMTAB   DS    F\n         DS    35F                PROVIDE SPACE FOR 20 UCM ADDRESSES\nUCMTABE  EQU   *\nNUMUCMS  DS    H\nOLDCONS  DS    F                   PREVIOUS CONSOLE NUMBER\n         SPACE 5\nCLEAR    DS    XL2                WCC - CLEAR SCREEN\nENDOFSCR DS    XL2                SBA TO ROW XX, COL 80\n         DS    XL3                SBA TO ROW 1, COL 1\n         DS    XL5                FILL SCREEN WITH NULLS\nCURSOR   DS    XL2                SBA TO ROW 1, COL 1\n         DS    XL3                INSERT CURSOR\nLASTLINE DS    CL255' '           OPERATORS COMMAND INPUT LINE\nCONNUM   DS    CL2' 1'            CONSOLE NUMBER\nCTYPE    DS    CL4' '\nMASTER   DS    CL8' '             MASTER CONSOLE\nSYS      DS    CL4' '             SYS  AUTHORIZATION\nIO       DS    CL4' '             I/O  AUTHORIZATION\nCONS     DS    CL5' '             CONS AUTHORIZATION\n         DS    CL3' '\n*NIT     DS    CL4' '             UNIT ADDR OF CONSOLE\nTIME     DS    CL3' '             SECONDS REMAINING ON TIMER\nSLASH    DS    CL1'/'\nPAUSE    DS    CL3'1.0'           DELAY IN SECONDS\n         DS    CL2' '\nAREAA    DS    XL1\nCNSLFLAG DS    XL1\nTHRUFLAG DS    XL1\nAUTOFLAG DS    XL1\nRESHOWFL DS    XL1\nHELPFLAG DS    XL1\nUSERFLAG DS    XL1\nCLRFLAG  DS    XL1\nIPLFLAG  DS    XL1\nMOD5FLAG DS    XL1\nCMDFLAG  DS    XL1\nCONSOL   DS    F                   CONSOLE TO BE LOOKED AT\nCONSASID DS    F                   'CONSOLE' ASID FOR CMS\nNUMLINES DS    F\nCONL     DS    F\nSAVECPPL DS    F\nTPUTLEN  DS    F\nTIMER    DS    F\nRTME     DS    H\nRNUM     DS    H\nUSERID   DS    CL7\nTABAREA  DS    CL77\nSELCODE  DS    CL3            LINE SELECTION CODE\nSELSAVE  DS    CL3            LINE SELECTION CODE SAVE AREA\nWORK     DS    D\nIPLDATE  DS    F\nIPLTIME  DS    F\nDOUBLWD  DS    D\nWTOCMD   DS    CL104\nDCMENTR2 DS    CL74\n         DS    0D\nSCREEN   DS    XL1       SPACE FOR WCC\n         DS    43CL84\n         DS    CL124     EXTRA FOR MOD5\nBUF      DS    45CL80             OPERATORS SCREEN BUFFER\nWORKLENG EQU   *-WORKAREA\n         PRINT NOGEN\n         TITLE '*** PROTECTED STEP CONTROL BLOCK DSECT ***'\n         IKJPSCB                   COPY THE PSCB FORMAT DSECT\n         TITLE '*** COMMAND PROCESSOR PARAMETER LIST DSECT ***'\n         IKJCPPL                   COMMAND PROCESSOR PARM LIST\n         TITLE '*** TSO USER PROFILE TABLE DSECT ***'\n         IKJUPT                    TSO USER PROFILE TABLE\n         TITLE '*** COMMUNICATION VECTOR TABLE ***'\n         CVT   DSECT=YES\n         TITLE '*** J S C B ***'\n         IEZJSCB\n         TITLE '*** T  C  B ***'\n         IKJTCB DSECT=YES\n         TITLE '*** RDCM DSECT ***'\nIEERDCM  DSECT ,\n         IEECRDCM\n         TITLE '*** TDCM DSECT ***'\nIEETDCM  DSECT ,\n         IEECDCM\n         TITLE '*** MULTIPLE CONSOLE SUPPORT (MCS) UCM PREFIX ***'\n         IEECUCM FORMAT=NEW\n         IHAASVT\n         TITLE '*** ADDRESS SPACE CONTROL BLOCK ***'\n         IHAASCB\n         TITLE '*** TSB DSECT ***'\n         IKJTSB LIST=YES\n         TITLE '*** CHAIN     ***'\n         IEECHAIN\n         IEESMCA\n         END\n./ ADD NAME=CONSOLEJ\n//MURFJ    JOB (6496,B014),MURF,CLASS=O,MSGCLASS=R,NOTIFY=MURF\n//*  JCL TO INSTALL CONSOLE\n//*\n//*  CHANGE SYSLIB ACCORDING TO YOUR IPORES\n//*  CHANGE SYSLIB AND SYLMOD IN LKED STEP TO LINK LIST LIBRARY\n//*\n//COM     EXEC PGM=IEV90,REGION=512K,\n//    PARM='LOAD,XREF(SHORT),LINECNT=55,NODECK,RENT'\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB\n//         DD  DISP=SHR,DSN=SYS1.AMODGEN\n//         DD  DISP=SHR,DSN=MURF.SHARE.LIBRARY\n//SYSLIN   DD  UNIT=VIO,DSN=&LOADSET,DISP=(MOD,PASS),\n//             SPACE=(CYL,(2,2)),DCB=BLKSIZE=1680\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(10,2))\n//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(12,2))\n//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(20,2))\n//SYSPUNCH DD  DUMMY =*,DCB=FUNC=I\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSIN    DD  DSN=MURF.SHARE.LIBRARY(CONSOLE),DISP=SHR\n//*\n//LKED     EXEC PGM=IEWL,REGION=1024K,COND=(4,LT),\n//             PARM='XREF,LET,LIST,RENT,REUS'\n//SYSPRINT DD   SYSOUT=*\n//SYSUT1   DD   DSN=&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD  DD   DISP=SHR,DSN=SYSX.LOADLIB(CONSOLE) LINKLIST OR STEPLIB\n//SYSLIN   DD   UNIT=SYSDA,DSN=&LOADSET,DISP=(OLD,DELETE)\n//         DD   DDNAME=SYSIN\n./ ADD NAME=GETOPER\n//GETOPER PROC LID=DUMMY\n//GETOPER EXEC PGM=GETOPR,PARM='&LID'\n//STEPLIB DD DSN=SYSX.LOADLIB,DISP=SHR\n./ ADD NAME=GETOPR\n//@MKTASM1 JOB (6496,B015),MARK,CLASS=T,MSGCLASS=T\n//COM     EXEC PGM=IEV90,REGION=512K,\n//    PARM='LOAD,XREF(SHORT),LINECNT=55,NODECK'\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB\n//         DD  DISP=SHR,DSN=SYS1.AMODGEN\n//         DD  DISP=SHR,DSN=SYSX.SP217.MODSRC\n//SYSLIN   DD  UNIT=VIO,DSN=&LOADSET,DISP=(MOD,PASS),\n//             SPACE=(CYL,(2,2)),DCB=BLKSIZE=1680\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(10,2))\n//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(12,2))\n//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(20,2))\n//SYSPUNCH DD  DUMMY =*,DCB=FUNC=I\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSIN    DD  *\nGETOPR   TITLE 'MARKS ROUTINE TO DISPLAY UID NAMES'                     000100\nGETOPR CSECT                                                            000500\n*******************************************************************     DOC FILE\n*                                                                 *     DOC FILE\n*                        D I S C L A I M E R                      *     DOC FILE\n*                                                                 *     DOC FILE\n*******************************************************************     DOC FILE\n*                                                                 *     DOC FILE\n* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *     DOC FILE\n* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        *     DOC FILE\n* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *     DOC FILE\n* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *     DOC FILE\n* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *     DOC FILE\n* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *     DOC FILE\n* SUPPLIED .                                                      *     DOC FILE\n*                                                                 *     DOC FILE\n* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *     DOC FILE\n* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *     DOC FILE\n* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *     DOC FILE\n* FUTURE .                                                        *     DOC FILE\n*                                                                 *     DOC FILE\n*******************************************************************     DOC FILE\n*******************************************************************     DOC FILE\n*                                                                 *     DOC FILE\n* GETOPR - WRITTEN BY MARK TERRY, SENIOR MVS SYSTEMS PROGRAMMER   *     DOC FILE\n*          AT TEXAS UTILITIES SERVICES.                           *     DOC FILE\n*                                                                 *     DOC FILE\n* MARK WROTE GETOPR FOR THE OPERATORS TO USE TO FINDOUT THE       *     DOC FILE\n* RACF INFO ASSOCIATED WITH A GIVEN USERID AND DISPLAY IT ON THE  *     DOC FILE\n* CONSOLE. THE OPERATOR STARTS A PROC CALLED GETOPER, WITH FORMAT:*     DOC FILE\n*                                                                 *     DOC FILE\n*     S GETOPER,LID=XXXX                                          *     DOC FILE\n*                                                                 *     DOC FILE\n* WHERE XXXX = USERID THAT THE INFO IS TO BE OBTAINED AND         *     DOC FILE\n* DISPLAYED ON THE OPERATOR TERMINAL.                             *     DOC FILE\n*******************************************************************     DOC FILE\n         BEGIN PROGRAM=GETOPR                                           000600\n         LR    R12,R15\n         USING GETOPR,R12\n         L     R2,0(R1)\n         LH    R6,0(R2)\n         LTR   R6,R6\n         BZ    RETURN\n         STC   R6,USERID\n         BCTR  R6,R0\n         EX    R6,MVCLID\n*MVCLID  MVC   USERID+1(R0),2(R2) MOVE LID TO RACF FIELD\n         LA    R6,WRKLEN\n         ST    R6,WRKAREA\n         ICHEINTY LOCATE,TYPE='USR',ENTRY=USERID,WKAREA=WRKAREA,       X\n               ACTIONS=(ACTNAME,ACTGROUP)\n         LTR   R15,R15\n         BNZ   RETURN\n         MVC   WTO+16(8),USERID+1\n         MVC   WTO+31(20),NAME\nWTO      WTO   'GETOPR  XXXXXXXX ====> NAME                    ',      X\n               ROUTCDE=2,DESC=(2,7)\n         STIMER WAIT,DINTVL=TENSECS\nRETURN   RETURN (14,12),RC=0\n*\nMVCLID   MVC   USERID+1(R0),2(R2) MOVE LID TO RACF FIELD\n*\nWRKAREA  DS    0F\n         DS    F\n         DS    CL24\nNAMELN   DS    CL2\nNAME     DS    CL20\nGROUPLN  DS    CL2\nGROUPS   DC    CL160' '\nWRKLEN   EQU   *-WRKAREA\nUSERID   DS    CL9\n         DS    0D\nTENSECS  DC    C'00001000' TEN SECONDS\n         LTORG\n*\n*   CONSTANTS AND SKELETONS\n*\n*\nACTNAME  ICHEACTN FIELD=PGMRNAME,MF=L\nACTGROUP ICHEACTN FIELD=CONGRPNM,MF=L\n         IKJCPPL\n         IKJPGPB\n         END   GETOPR                                                   005900\n//LNK  EXEC PGM=IEWL,\n//          PARM='LET,NCAL,XREF,LIST,AC=1',COND=(0,NE)\n//SYSPRINT DD SYSOUT=*\n//SYSLMOD DD DSN=SYSX.LOADLIB,DISP=SHR\n//SYSUT1 DD DSN=&&SYSUT1,SPACE=(TRK,(10,10)),UNIT=VIO\n//SYSLIN DD DSN=&LOADSET,DISP=(OLD,DELETE)\n//       DD DDNAME=SYSIN\n//SYSIN DD *\n  ENTRY GETOPR\n  NAME GETOPR(R)\n./ ADD NAME=IGGPREJ\n//@MKTPRE  JOB (6496,B014),MURF,CLASS=O,MSGCLASS=T\n//COM     EXEC PGM=IEV90,REGION=512K,\n//    PARM='LOAD,XREF(SHORT),LINECNT=55,NODECK,RENT'\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB,DCB=BLKSIZE=23440\n//         DD  DISP=SHR,DSN=SYS1.MODGEN\n//SYSLIN   DD  UNIT=VIO,DSN=&LOADSET,DISP=(MOD,PASS),\n//             SPACE=(CYL,(2,2)),DCB=BLKSIZE=1680\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(10,2))\n//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(12,2))\n//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(20,2))\n//SYSPUNCH DD  DUMMY =*,DCB=FUNC=I\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSIN    DD  DSN=LBKQ.FILE025.PDS(IGGPRE00),DISP=SHR\n//LKED    EXEC PGM=IEWL,REGION=1024K,COND=(4,LT),\n//        PARM='XREF,LET,LIST,RENT,REUS,AC=1'\n//SYSPRINT     DD   SYSOUT=*\n//SYSUT1       DD   DSN=&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD   DD DISP=SHR,DSN=SYS1.LPALIB,UNIT=3380,VOL=SER=MVSXA1\n//SYSLIN       DD   UNIT=SYSDA,DSN=&LOADSET,DISP=(OLD,DELETE)\n//  DD  DDNAME=SYSIN\n//SYSIN  DD *\n NAME IGGPRE00(R)\n//MURFTAB JOB (6496,B014),MURF,CLASS=O,MSGCLASS=T,NOTIFY=MURF\n//COM     EXEC PGM=IEV90,REGION=512K,\n//    PARM='LOAD,XREF(SHORT),LINECNT=55,NODECK,RENT,REUS'\n//*\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB,DCB=BLKSIZE=23440\n//         DD  DISP=SHR,DSN=SYS1.MODGEN\n//SYSLIN   DD  UNIT=VIO,DSN=&LOADSET,DISP=(MOD,PASS),\n//             SPACE=(CYL,(2,2)),DCB=BLKSIZE=1680\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(10,2))\n//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(12,2))\n//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(20,2))\n//SYSPUNCH DD  DUMMY =*,DCB=FUNC=I\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSIN    DD  DSN=LBKQ.FILE025.PDS(IGGPRETB),DISP=SHR\n//*\n//LKED         EXEC PGM=IEWL,REGION=1024K,COND=(4,LT),\n//             PARM='XREF,LET,LIST,RENT,REUS'\n//SYSPRINT     DD   SYSOUT=*\n//SYSUT1       DD   DSN=&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD DD DSN=SYS1.LPALIB(IGGPRETB),\n// DISP=SHR\n//SYSLIN       DD   UNIT=SYSDA,DSN=&LOADSET,DISP=(OLD,DELETE)\n//             DD   DDNAME=SYSIN\n./ ADD NAME=IGGPRETB\nIGGPRETB CSECT\n         DC    F'2',CL12'JX'              LENGTH GOES IN FIRST POSITION\n         DC    F'2',CL12'T.'              LENGTH GOES IN FIRST POSITION\n         DC    F'2',CL12'S.'         MKT  LENGTH GOES IN FIRST POSITION\n         DC    F'5',CL12'TEST.'           MAX LENGTH IS 12\n         DC    F'5',CL12'DEVC.'           MAX LENGTH IS 12\n         DC    F'5',CL12'FAP.T'           MAX LENGTH IS 12\n         DC    F'5',CL12'FRS.T'           MAX LENGTH IS 12\n         DC    F'5',CL12'EDD.T'           MAX LENGTH IS 12\n         DC    F'5',CL12'FRA.T'           MAX LENGTH IS 12\n         DC    F'5',CL12'CIS.T'           MAX LENGTH IS 12\n         DC    F'09',CL12'TPL.U0603'\n         DC    F'09',CL12'DPL.U0502'\n         DC    F'09',CL12'CF58.TEST'\n         DC    F'10',CL12'PREIS.TEST'\n         DC    F'6',CL12'IMSVS.'\n         DC    F'6',CL12'TPL.JX'\n         DC    F'3',CL12'CIX'\n         DC    F'4',CL12'PAC.'\n         DC    F'10',CL12'TUGCO.U411'\n         DC    F'09',CL12'TPL.U1503'\n         DC    F'09',CL12'TPL.T1913'\nTBLEND   DC    XL4'FFFFFFFF',XL12'FFFFFFFFFFFFFFFFFFFFFFFF'\n         END\n./ ADD NAME=IGGPRE00\nIGGPRE00 TITLE 'DADSM ALLOCATION EXIT TO KEEP JUNK OFF STORAGE PACKS'\n*******************************************************************\n*                                                                 *\n*                        D I S C L A I M E R                      *\n*                                                                 *\n*******************************************************************\n*                                                                 *\n* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *\n* KNOWLEDGE  IT IS  OPERATIONAL, HOWEVER  NO  WARRANTY            *\n* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *\n* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *\n* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *\n* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *\n* SUPPLIED .                                                      *\n*                                                                 *\n* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *\n* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *\n* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *\n* FUTURE .                                                        *\n*                                                                 *\n*******************************************************************\n***********************************************************************\n*                                                                     *\n* PROGRAM: IGGPRE00                                                   *\n* REFERENCE: MVS/XA SYSTEM DATA ADMINISTRATION  GC26-4010             *\n*                                                                     *\n* AUTHOR: P. MURPHY                                                   *\n*         WITH CHANGES FROM TYRONE TERRY - MKT SENIOR MVS SYSTEMS PROG*\n* PURPOSE: DADSM EXIT TO KEEP UNAUTHORIZED DATASETS OFF OF STORAGE    *\n* PACKS.                                                              *\n*                                                                     *\n*         LOADS IGGPRETB THAT CONTAINS SOME PREFIXES OF DATASETS THAT *\n* HAVE BEEN FILLING STORAGE PACKS.  IT ALSO KEEPS PROGRAMMERS (RACF   *\n* DEFAULT GROUP PGRB OR PGR) OFF OF PRODUCTION PACKS THAT START WITH  *\n* VSM OR STG.  DEV OR DEVC IS WHERE THEY SHOULD BE.                   *\n*                                                                     *\n* MODIFICATIONS:                                                      *\n*                                                                     *\n*    3/01/87   DONT ALLOW ALLOCATION WITH EXPDT.          MKT         *\n*    3/11/87   DONT ALLOW NONVSAM ALLOC ON A VSAM PACK.   MKT         *\n*    9/10/87   DONT ALLOW DEVELOPMENT ALLOC ON PROD PACKS.MKT         *\n*    5/22/88   PROBLEM WITH NEW ISPF - PMM                            *\n*    6/24/88   CHECK DEVV VSAM ONLY  - PMM                            *\n*    9/20/89   ISPF FIX AND CHANGE USER IDS AND ADD LIBXXX PACKS MKT  *\n*                                                                     *\n***********************************************************************\nIGGPRE00 CSECT\nIGGPRE00 AMODE 31\nR0       EQU   0\nR1       EQU   1                  R\nR2       EQU   2                    E\nR3       EQU   3                      G\nR4       EQU   4                        I\nR5       EQU   5                          S\nR6       EQU   6                            T\nR7       EQU   7                              E\nR8       EQU   8                                R\nR9       EQU   9                        E\nR10      EQU   10                         Q\nR11      EQU   11                           U\nR12      EQU   12                             A\nR13      EQU   13                               T\nR14      EQU   14                                 E\nR15      EQU   15                                   S\n         SAVE  (14,12),,*\n         LR    R12,R15            ADDRESSABILITY OF IEFUJI BY R12\n         USING IGGPRE00,R12       R12 BASE REG\n         USING PREPL,R2\n         USING PSA,0\n         LR    R2,R1              LOAD REGS 2-5 W/ 4 PARM ADDRESSES\n         SR    R15,R15            ZERO R15\n         CLI   5(R2),X'01'        ALLOCATE?\n         BNE   EXIT               NO, GO HOME\n         GETMAIN R,LV=AREALENG,SP=241 GETMAIN FOR SAVE AREA/WTO\n         LTR   R15,R15            CHECK FOR ZERO RETURN CODE\n         BNZ   GETMERR\n         LR    R11,R1             ADDRESS AREA DSECT\n         USING AREA,R11\n         LA    R7,SAVEAREA        ADDRESS OF PROGRAM SAVEAREA\n         ST    R13,SAVEAREA+4     HSA LINK\n         ST    R7,8(R13)          LSA LINK\n         LR    R13,R7\n         MVI   VSAMFLAG,X'00'\n*\n*  EXPIRATION DATE CHECK\n*\n         L     R9,IEXPTR1\n         USING INFMJFCB,R9\n         TM    JFCDSRG2,JFCORGAM      IS THIS A VSAM DATASET?\n         BZ    CHKISAM                NO, CHECK ISAM\n         MVI   VSAMFLAG,X'FF'\n         B     FINDACEE\nCHKISAM  TM    JFCDSRG1,JFCORGIS      IS THIS A ISAM DATASET?\n         BZ    CHKEXPDT               NO, CHECK FOR EXPDT\n         L     R6,IEXUCB              YES,\n         USING UCBCMSEG,R6              SEE IF ON\n         CLC   =C'UNMOV',UCBVOLI        UNMOVEX PACK\n         BE    RETURN0                  YES, GO ALLOG\nSETISAM  MVI   VSAMFLAG,X'0F'            PMM 8/88\n         B     FINDACEE                  PMM 8/88 GET USER INFO\nCHKEXPDT TM    JFCBFLG3,X'40'         EXPIRATION DATE?\n         BZ    FINDACEE               NO, CONT OTHER CHECKS\n         TM    JFCBIND2,JFCTEMP       TEMPORARY DATASET\n         BO    FINDACEE               YES, CONT OTHER CHECKS\n         CLC   =X'000000',JFCBXPDT\n         BE    FINDACEE\n         WTO   MF=(E,WTOMSG4)         NO, ISSUE MSG\n         MVI   VSAMFLAG,X'F0'         GO\nFINDACEE L     R4,PSAANEW                GET ASCB\n         USING ASCB,R4                   ADDRESS IT\n         L     R4,ASCBASXB               GET ASXB\n         USING ASXB,R4                   ADDRESS IT\n         L     R4,ASXBSENV               GET ACEE\n         LTR   R4,R4                     IS THERE ONE?\n         BZ    RETURN0                     NO - RETURN\n         USING ACEE,R4                     YES, ADDRESS IT\n         CLI   VSAMFLAG,X'0F'            IS THIS A ISAM DATASET?\n         BE    CANISAM                   YES, GO CAN IT.\n         L     R6,IEXUCB\n         USING UCBCMSEG,R6\n         CLI   VSAMFLAG,X'F0'\n         BNE   NOEXP\n         CLC   =C'GMC',ACEEUSRI\n         BNE   CHKTECH\n         DC    X'0000'\nCHKTECH  CLC   =C'JTECH',ACEEGRPN\n         BE    RETURN0\n         WTO   'IGGPRE00 NOT IN AUTHORIZED GROUP TO DO EXPDT'\n         B     CANCEL\nNOEXP    CLC   =C'LIB',UCBVOLI           IS THIS A LIB PACK?\n         BE    PRODPACK                  YES, GO THRU PROD CHECKS\n         CLC   =C'STG',UCBVOLI           IS THIS A STG PACK?\n         BNE   CHKVSAM                   NO, GO CHECK FOR VSM PACK\nPRODPACK CLI   VSAMFLAG,X'FF'            IS THIS A VSAM DATASET?\n         BE    VSAMSTG                   YES, GO SLAP THEIR HANDS\n         L     R6,IEXDSN                 IS THIS A SYSTEM DS?\n         CLC   =C'SYS',0(R6)\n         BE    RETURN0                   YES, GO HOME\n         LOAD  EP=IGGPRETB,ERRET=RETURN0 LOAD INVALID DSN TABLE\n         LR    R8,R0                     AND SEARCH,\nCLCLP    L     R5,0(,R8)                   IF BAD\n         C     R5,=X'FFFFFFFF'               DATASET\n         BE    DELRET                          IS\n         BCTR  R5,0                              FOUND,\n         EX    R5,CLCEX                            GO\n*CLCEX   CLC   4(0,R8),0(R6) CANCEL\n         BE    CANCEL                                IT\n         LA    R8,16(,R8)                INCREMENT\n         B     CLCLP                      AND LOOP\nVSAMSTG  WTO   MF=(E,WTOMSG8)            ISSUE MESSAGE FIRST\n         CLC   =C'JISO',ACEEGRPN         IS THIS DATA SECURITY?\n         BE    RETURN0                   YES, LET IT GO\n         CLC   =C'JTECH',ACEEGRPN        IS THIS TECHNICAL SUPPORT?\n         BE    RETURN0                   YES LET IT GO\n         WTO   MF=(E,WTOMSG8A)           ISSUE CANCEL MESSAGE\n         B     CANCEL                      THEN CAN IT\nCANISAM  WTO   MF=(E,WTOMSG7)            ISSUE MESSAGE\n         CLC   =C'JISO',ACEEGRPN         IS THIS DATA SECURITY?\n         BE    RETURN0                   YES, LET IT GO\n         CLC   =C'JTECH',ACEEGRPN        IS THIS TECHNICAL SUPPORT?\n         BE    RETURN0                   YES, LET IT GO\n         WTO   MF=(E,WTOMSG7A)           ISSUE CANCEL MESSAGE\n         B     CANCEL                      THEN CAN IT\nDELRET   DELETE EP=IGGPRETB              NO HIT FOUND, CHECK PGR/DBA\n         CLC   =C'PGRO',ACEEGRPN         IS THIS A OP SUPPORT?\n         BE    RETURN0                     YES, GO HOME\n         CLC   =C'PGR',ACEEGRPN          IS THIS A PROGRAMMER?\n         BE    CHCKIT                      YES, CHECKIT\n         CLC   =C'DBA',ACEEGRPN          IS THIS DBA?\n         BNE   RETURN0                     NO, RETURN\nCHCKIT   CLC   =C'JXA8',ACEEUSRI         IS THIS KUNKEL?\n         BE    RETURN0                     YES - RETURN\n         CLC   =C'JXM8',ACEEUSRI         IS THIS KUNKEL?\n         BE    RETURN0                     YES - RETURN\n         CLC   =C'JXV5',ACEEUSRI         IS SUE YEH?\n         BE    RETURN0                     YES - RETURN\n         WTO   MF=(E,WTOMSG5)              NO -\n         B     CANCEL                      THUS CANCEL\n*\n*  CHECK VSMXXX ALLOCATIONS\n*\nCHKVSAM  CLC   =C'DEVV',UCBVOLI      IS THIS A DEVVXX VOLUME\n         BE    CHKVSAM2              YES, CHECK FURTHER\n         CLC   =C'DEV0',UCBVOLI      IS THIS A DEV0XX-NO VSAM PMM 8/88\n         BE    CHKVSAMD              YES, CHECK FOR VSAM      PMM 8/88\n         CLC   =C'VSM',UCBVOLI       IS THIS A VSMXXX VOLUME\n         BNE   RETURN0               NO, ALLOW ALLOCATION\n         CLC   =C'PGR',ACEEGRPN      IS THIS A PROGRAMMER?\n         BE    CHCKIT2                 YES, CHECKIT\n         CLC   =C'DBA',ACEEGRPN      IS THIS DBA?\n         BNE   CHKVSAM2                NO, RETURN\nCHCKIT2  CLC   =C'JXA8',ACEEUSRI     IS THIS KUNKEL?\n         BE    CHKVSAM2                YES - CONTINUE CHECK\n         CLC   =C'JXM8',ACEEUSRI     IS THIS KUNKEL?\n         BE    CHKVSAM2                YES - CONTINUE CHECK\n         CLC   =C'JXV5',ACEEUSRI     IS THIS SUE YEH?\n         BE    CHKVSAM2                YES - CONTINUE CHECK\n         WTO   MF=(E,WTOMSG5)          NO - CANCEL\n         B     CANCEL\nCHKVSAMD CLI   VSAMFLAG,X'FF'        IS THIS A VSAM DATASET? PMM 8/88\n         BNE   RETURN0               NO,  ALLOW ALLOCATION   PMM 8/88\n         WTO   MF=(E,WTOMSG6)        NO VSAM ALLOCATIONS DEV0XX\n         WTO   MF=(E,WTOMSG6A)       ISSUE CANCEL MESSAGE\n         B     CANCEL                  AND CAN IT\nCHKVSAM2 CLI   VSAMFLAG,X'FF'        IS THIS A VSAM DATASET?\n         BE    RETURN0               YES, ALLOW ALLOCATION\n         L     R6,IEXDSN             GET ADD OF DSN\n         CLC   =C'SYS1.',0(R6)       DOES DSN START WITH SYS1\n         BE    RETURN0               YES, ALLOW\n         WTO   MF=(E,WTOMSG3)        NON VSAM DSET ON VSMXXX PACK\n         B     CANCEL                 THUS CANCEL\nCANCEL   DELETE EP=IGGPRETB\n         LA    R15,8\n         B     RETURN\nGETMERR  EQU   *\n         WTO   MF=(E,WTOMSG2)\n         SR    R15,R15\n         B     RETURN\nFREERROR EQU   *\n         WTO   MF=(E,WTOMSG1)\n         SR    R15,R15\n         B     RETURN\nRETURN0  SR    R15,R15            ZERO RETURN CODE\nRETURN   LR    R10,R15            R15 WILL BE WIPED OUT BY FREEMAIN\n         L     R13,4(R13)         RELOAD R13 HSA\n         FREEMAIN R,LV=AREALENG,A=(R11),SP=241\n         LTR   R15,R15\n         BNZ   FREERROR\n         LR    R15,R10            RELOAD R15\nEXIT     RETURN (14,12),,RC=(15)\nCLCEX    CLC   4(0,R8),0(R6)             |\nWTOMSG1  WTO   'IGGPRE00 FREEMAIN ERROR - NOTIFY TECHNICAL SUPPORT  ', X\n               ROUTCDE=1,MF=L,DESC=2\nWTOMSG2  WTO   'IGGPRE00 GETMAIN ERROR -  NOTIFY TECHNICAL SUPPORT  ', X\n               ROUTCDE=1,MF=L,DESC=2\nWTOMSG3  WTO   'IGGPRE00 ATTEMPT TO ALLOCATE NON-VSAM DATASET ON VSAM PX\n               ACK - ALLOCATION DENIED.',                              X\n               ROUTCDE=11,MF=L,DESC=3\nWTOMSG4  WTO   'IGGPRE00 ATTEMPT TO ALLOCATE DATASET WITH AN EXPIRATIONX\n                DATE - ALLOCATION DENIED.',                            X\n               ROUTCDE=11,MF=L,DESC=3\nWTOMSG5  WTO   'IGGPRE00 ATTEMPT TO ALLOCATE DATASET ON AN UNAUTHORIZEDX\n                 VOLUME - ALLOCATION DENIED.',                         X\n               ROUTCDE=11,MF=L,DESC=3\nWTOMSG6  WTO   'IGGPRE06 INVALID ATTEMPT TO ALLOCATE VSAM ON A NONVSAM X\n               VOLUME.',                                               X\n               ROUTCDE=11,MF=L,DESC=3\nWTOMSG6A WTO   'ALLOCATION HAS BEEN DENIED, USE DEVV01-04 VOLUMES FOR VX\n               SAM ALLOCATIONS ON DEV PACKS.',                         X\n               ROUTCDE=11,MF=L,DESC=3\nWTOMSG7  WTO   'IGGPRE07 INVALID ATTEMPT TO ALLOCATE ISAM ON A NON-ISAMX\n                VOLUME.',                                              X\n               ROUTCDE=11,MF=L,DESC=3\nWTOMSG7A WTO   'ALLOCATION HAS BEEN DENIED, USE UNMOV1 VOLUME FOR ISAM X\n                DATASETS.',                                            X\n               ROUTCDE=11,MF=L,DESC=3\nWTOMSG8  WTO   'IGGPRE08 INVALID ATTEMPT TO ALLOCATE VSAM ON A NON-VSAMX\n                VOLUME.',                                              X\n               ROUTCDE=11,MF=L,DESC=3\nWTOMSG8A WTO   'ALLOCATION HAS BEEN DENIED, USE VSMXXX VOLUMES FOR PRODX\n               UCTION VSAM DATASETS.',                                 X\n               ROUTCDE=11,MF=L,DESC=3\n         LTORG\nAREA     DSECT\nSAVEAREA DS    18F        SAVE AREA\nVSAMFLAG DS    XL1\nAREALENG EQU   *-AREA\n         IECIEXPL\n         PRINT OFF\n         IEFUCBOB\n         IHAASCB\n         IHAACEE\n         IHAPSA\n         IHAASXB\n         IEFJFCBN\n         END\n./ ADD NAME=MPFLST03\n$HASP100                     JOB ON READER\nCSV003I                      IPCS MODULE NOT FOUND\nDSI090                       NCCF LOAD FAILED\nIEA995I                      SYMPTOM DUMP\nIEF677I                      WARNING MESSAGE(S) FOR JOB\nCA044I\nCA045I\nCA046I\nCA050I\nCA051I\nCA052I\nCA053I\nCA054I\nCA060I\nCA061I\nCA062I\nCA069I\nCA070I\nCA071I\nCA078I\nCA122I\nIEC130I\nIEC701D,SUP(NO),USEREXIT(AUTOWTOR)\nMPFHCF=+                     SUPRESSED MESSAGE INDICATOR IN HARDCOPY\n./ ADD NAME=MTT\n***********************************************************************\n*   TITLE: MTT                                                        *\n*   AUTHOR: P.M.MURPHY                                                *\n*   DATE-WRITTEN: 10/16/84                                            *\n*   REFERENCE: OS/VS2 MVS SYSTEM PROGRAMMING LIBRARY:SUPERVISOR       *\n*              GC28-1046-1                                            *\n*   REMARKS:                                                          *\n*                                                                     *\n*        USE CROSS MEMORY SERVICES TO PAGE THROUGH CONSOLE MESSAGES   *\n*   IN THE MASTER TRACE TABLE IN THE MASTER ADDRESS SPACE. THIS IS    *\n*   A MVS/SP VERSION WHICH WE HAVE NOT USED SINCE XA IN 84.           *\n***********************************************************************\n*******************************************************************\n*                                                                 *\n*                       D I S C L A I M E R                       *\n*                                                                 *\n*******************************************************************\n*                                                                 *\n* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *\n* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        *\n* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *\n* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *\n* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *\n* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *\n* SUPPLIED .                                                      *\n*                                                                 *\n* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *\n* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *\n* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *\n* FUTURE .                                                        *\n*                                                                 *\n*******************************************************************\nMTT      CSECT\n         BEGIN PROGRAM=MTT\n*        SAVES REGISTERS AND INSERTS PROGRAM, DATE, AND TIME\n         LR    R12,R15            LOAD ADDRESS OF ENTRY POINT\n         LR    R2,R1              SAVE CPPL\n         USING MTT,R12            R12 BASE REGISTER\n         GETMAIN RC,LV=WORKL      GETMAIN  FOR SAVEAREA/WORK\n         LTR   R15,R15            CHECK RETURN CODE\n         BNZ   GETMERR\n         LR    R3,R1              ADDRESS OF WORK AREA/SAVEAREA\n         USING SAVDSECT,R3        ADDRESSABILITY\n         ST    R13,SAVEAREA+4     STORE CALLER SAVEAREA ADDRESS (HSA)\n         ST    R3,8(,R13)         ADD OF PROGRAM SAVE IN CALLER(LSA)\n         LR    R13,R3             ADDRESS OF SAVEAREA IN R13\n         DROP  R3\n         USING SAVDSECT,R13\n         USING CPPL,R2\n         L     R6,CPPLPSCB\n         DROP  R2\n         USING PSCB,R6\n         MVC   USERID,PSCBUSER\n         MVC   USERIDL,PSCBUSRL\n         MVC   USERATTR,PSCBATR2  USER ATTRIBUTE BYTE, IN CASE I USE IT\n         DROP  R6\n         ST    R2,CPPLSAVE\n         MVC   SCRTPUTL,=AL4(DSCREENL+41*80) LENGTH FOR TPUT 43 LINE\n         MVC   SCRLENG,=AL4(41*80) LENGTH FOR MOVE LONG 43 LINE DEFAULT\n         MVC   SCREEN(108),DSCREEN SCREEN IMAGE\n         GTSIZE\n         LTR   R0,R0\n         BZ    FREERET2            NON-DISPLAY TERMINAL\n         CH    R1,=H'80'           80 WIDE?\n         BNE   SETM2               NO - SET IT TO THIS\n         CH    R0,=H'43'           MOD 4?\n         BE    VERIFY\n         CH    R0,=H'32'           MOD 3?\n         BNE   SETM2\nMODEL3   MVC   SCRLENG,=AL4(28*80) 30 LINE DISPLAY\n         MVC   SCRTPUTL,=AL4(28*80+DSCREENL)\n         MVC   DSCRO3,=X'E6F0'     (32,1)\n         MVC   DSCRO4,=X'E7F7'     (32,72)\n         B     VERIFY\nSETM2    STSIZE SIZE=80,LINE=24\n         MVC   SCRLENG,=AL4(22*80) LENGTH FOR MOVE LONG\n         MVC   SCRTPUTL,=AL4(22*80+DSCREENL) LENGTH OF TPUT\n         MVC   DSCRO3,=X'5CF0'     24,1\n         MVC   DSCRO4,=X'5DF7'     24,72\nVERIFY   EQU   *\n         STFSMODE ON,INITIAL=YES\n         STAX  DEFER=YES         WE DO NOT WANT AN INTERRUPT\n         SYSDSVC\n         MODESET MF=(E,SUPRMOD)\n         AXRES AXLIST=AXLIST     RESERVE AN AUTHORIZATION INDEX IN A.T.\n         LA    R1,1              MASTER IS ASID 1\n         AXEXT ASID=(1)          DETERMINE AUTH TABLE VALUE OF ASID 1\n         AXSET AX=(0)            SET TO ASID 1'S AUTHORIZATION INDEX\n         L     R1,16\n         USING CVT,R1\n         L     R1,CVTTCBP\n         DROP  R1\n         L     R1,4(R1)\n         USING TCB,R1\n         L     R1,TCBJSCB\n         DROP  R1\n         USING IEZJSCB,R1\n         NI    JSCBOPTS,X'FF'-JSCBAUTH\n         DROP  R1\n         MODESET MF=(E,PROBMOD)\n         STAX  DEFER=NO\n         MVC   COMMAND,COMMANDL\n         MVI   HEX40S,X'40'         SPACE\n         MVC   HEX40S+1(79),HEX40S  PROPAGATE SPACES TO INITIALIZE\n         L     R2,SCRLENG           SCREEN LENGTH\n         S     R2,=F'0160'          MINUS 2 LINES\n         LA    R5,DETAIL            ADDRESS OF SCREEN\n         ST    R5,FRSTLINE\n         LA    R2,0(R5,R2)          ADDRESS IN GETMAIN AREA\n         ST    R2,LASTLINE          SAVE THE ADDRESS\n         LA    R1,16\n         L     R1,0(R1)\n         USING CVT,R1\n         L     R1,CVTMSER\n         DROP  R1\n         USING BASE,R1\n         L     R3,BAMTTBL        ADDRESS OF MASTER TRACE TABLE\n         ICM   R4,B'0111',BAMTLEN LENGTH OF MTT W/O FIRST BYTE OF WORD\n         BZ    NOTACTIV\n         ST    R4,MTTSIZE\n         ST    R3,MTTADDR\n         DROP  R1\n         GETMAIN RC,LV=(4)       LENGTH WAS IN R4\n         LTR   R15,R15\n         BNZ   GETMERR\n         LR    R11,R1            ADDRESS OF OUR FUTURE COPY OF MTT\n*        B     NOTACTIV\nAUTHRIZE STAX  DEFER=YES         WE DO NOT WANT AN INTERRUPT WHILE\n         L     R9,MTTSIZE\n         L     R3,MTTADDR\n         SRA   R9,8             DIVIDE BY 256\n         BNP   NOTACTIV\n         SYSDSVC\n         MODESET MF=(E,SUPRMOD)\n*        AXRES AXLIST=AXLIST     RESERVE AN AUTHORIZATION INDEX IN A.T.\n*        LA    R1,1              MASTER IS ASID 1\n*        AXEXT ASID=(1)          DETERMINE AUTH TABLE VALUE OF ASID 1\n*        AXSET AX=(0)            SET TO ASID 1'S AUTHORIZATION INDEX\n         LA    R1,1\n         SSAR  R1                SECONDARY ADDRESS SPACE OF ASID 1!!!\n         SR    R5,R5\n         LA    R6,0(R4,R11)      END OF GETMAIN AREA\n         LA    R7,256\n         LR    R10,R11\nMOVELOOP MVCP  0(R7,R10),0(R3),R5 MOVES MAX OF 256 BYTES\n         LA    R10,256(,R10)\n         LA    R3,256(,R3)\n         BCT   R9,MOVELOOP\n         B     ALLMOVED\nFREERET  L     R4,MTTSIZE\n         FREEMAIN RC,LV=(4),A=(11) FREE SECOND GETMAIN AREA\n         LTR   R15,R15            CHECK RETURN CODE\n         BNZ   FREEMERR\nFREERET2 LR    R3,R13\n         L     R13,4(,R13)        ADDRESS OF CALLING PROGRAM SAVEAREA\n         FREEMAIN RC,LV=WORKL,A=(3) FREE STORAGE\n         LTR   R15,R15            CHECK RETURN CODE\n         BNZ   FREEERR2\nRETURN   RETURN (14,12),,RC=(15)\nGETMERR  WTO   ' MTT - GETMAIN ERROR, PLEASE NOTIFY TECH SUPPORT',     X\n               ROUTCDE=2\n         L     R13,4(,R13)        RELOAD R13\n         B     RETURN\nNOAUTH   EQU   *\n         TPUT  MSGNO1,13\n         B     FREERET2\nBADLOAD  EQU   *\n         TPUT  MSG3,33\n         B     FREERET2\nFREEMERR TPUT  MSG2,33\n         B     FREERET2\nFREEERR2 TPUT  MSG1,33\n         B     RETURN\nALLMOVED EPAR  R1             EXTRACT PRIMARY ASID INTO R1\n         SSAR  R1             SET SECONDARY TO OUR ASID\n         L     R1,16\n         USING CVT,R1\n         L     R1,CVTTCBP\n         DROP  R1\n         L     R1,4(R1)\n         USING TCB,R1\n         L     R1,TCBJSCB\n         DROP  R1\n         USING IEZJSCB,R1\n         NI    JSCBOPTS,X'FF'-JSCBAUTH\n         DROP  R1\n         MODESET MF=(E,PROBMOD)\n         STAX  DEFER=NO\nADJUST   CLC   MTT,0(R11)     MTT HEADER\n         BNE   NOTACTIV\n         L     R9,4(,R11)     THIS IS THE CURRENT ENTRY IN MASTER\n         L     R8,MTTADDR     ADDRESS OF MTT IN MASTER ADDRESS SPACE\n         SR    R9,R8          DISPLACEMENT INTO OUR AREA OF FIRST ENT\n         LA    R9,0(R9,R11)   CURRENT ENTRY\n         ST    R9,MTTCLINE    MTT CURRENT LINE IN OUR AREA\n         L     R9,32(,R11)    FIRST ENTRY IN MTT\n         SR    R9,R8          DISPLACEMENT TO FIRST ENTRY\n         LA    R9,0(R9,R11)   ADDRESS IN OUR ADDRESS SPACE\n         ST    R9,MTTFLINE    SAVE IN MTT FIRST LINE\n         L     R9,12(,R11)    LAST BYTE\n         SR    R9,R8          GET DISPLACEMENT\n         LA    R9,0(R9,R11)   ADDRESS IN OUR AREAOF LAST BYTE\n         ST    R9,MTTLLINE    MTT LAST LINE -ACTUALLY ITS THE LAST BYTE\n         MVC   CURRLINE,MTTCLINE CURRENT LINE\nDISPLAY  L     R5,LASTLINE    ADDRESS OF WHERE TO MOVE CURRENT ENTRY\n         L     R6,CURRLINE    CURRENT LINE\n         MVI   UPFLAG,X'00'\n         MVI   WRAPFLAG,X'00'\n         MVI   FOUNDFLG,X'00'\n         MVC   BOTTOM,CURRLINE\nDISPLOOP SR    R7,R7\n         ICM   R7,B'0011',8(R6)  LOAD LENGTH\n         BNP   FINDNEXT\n         LA    R8,10(R7,R6)\n         CLI   SEARCHON,X'FF'\n         BE    DISPCHEK\n         CLI   UPFLAG,X'FF'\n         BNE   DISPSUB\nDISPCHEK CLC   CURRLINE,MTTCLINE\n         BNL   CHEKLINE\n         C     R8,MTTCLINE\n         BNL   ENDOFLST\nCHEKLINE C     R6,MTTCLINE\n         BNL   CHEKWRAP\n         C     R8,MTTCLINE\n         BNL   ENDOFLST\n         B     DISPSUB\nCHEKWRAP CLI   WRAPFLAG,X'FF'\n         BE    WRITEIT\nDISPSUB  S     R7,=F'06'      MINUS SIX\n         BNP   FINDNEXT\n         CLI   SEARCHON,X'FF'\n         BE    SEARCHLN\nDISPL    C     R7,SEVENTY9    > 80\n         BNH   MOVEDATA       NO - MOVE TO DISPLAY AREA\n         S     R7,EIGHTY\n         EX    R7,DISPMOV2\n         S     R5,EIGHTY\n         C     R5,FRSTLINE\n         BNH   WRITEIT\n         L     R7,SEVENTY9    MAX LENGTH IS 80\nMOVEDATA EX    R7,DISPMOVE    MOVE IT TO TERMINAL AREA\n*        BAL   R2,SEARCHLN\n         S     R5,EIGHTY\n         C     R5,FRSTLINE\n         BNH   WRITEIT\n*        CLI   UPFLAG,X'FF'\n*        BE    UP\nFINDNEXT ST    R6,CURRLINE\n         BAL   R2,PREVLINE    GET NEXT     LINE\n         B     DISPLOOP\nDOWN     CLC   BOTTOM,MTTCLINE IS THIS NEWEST PAGE?\n         BE    AUTHRIZE\n         MVI   FOUNDFLG,X'00'\n         BAL   R2,CLEARSCR    GET NEXT     LINE\n         LA    R5,DETAIL      ADDRESS OF WHERE TO MOVE CURRENT ENTRY\n         L     R6,BOTTOM      BECOMES TOP ON PAGE DOWN\n         ST    R6,CURRLINE    CURRENT LINE\n         ST    R6,TOP         CURRENT LINE\n         MVI   DOWNFLAG,X'FF'\n*GIVEN A STARTING POINT, WE WILL BE PAGING UP HERE *\nDOWNLOOP SR    R7,R7\n         ICM   R7,B'0011',8(R6)  LOAD LENGTH\n         BNP   FINDNXTD\n         LA    R8,10(R7,R6)   NEXT LINE\n         C     R8,MTTCLINE\n         BNH   DOWNSUB\n         C     R6,MTTCLINE\n         BNL   DOWNSUB\n         MVC   0(80,R5),CENDOFIT\n         B     WRITEITD\nDOWNSUB  S     R7,=F'06'      MINUS SIX\n         BNP   FINDNXTD\n         C     R7,SEVENTY9    > 80\n         BNH   MOVEDOWN       NO - MOVE TO DISPLAY AREA\n         S     R7,EIGHTY\n         EX    R7,DISPMOV2\n         L     R7,SEVENTY9    MAX LENGTH IS 80\n         A     R5,EIGHTY\n         C     R5,LASTLINE\n         BNL   WRITEITD\nMOVEDOWN EX    R7,DISPMOVE    MOVE IT TO TERMINAL AREA\n*        BAL   R2,SEARCHLN\n         A     R5,EIGHTY\n         C     R5,LASTLINE\n         BNL   WRITEITD\nFINDNXTD ST    R6,CURRLINE\n         BAL   R2,UPLINE      GET NEXT     LINE\n         B     DOWNLOOP\nUP       BAL   R2,UPLINE      PREVIOUS LINE\n         B     DISPLOOP\nSEARCHLN L     R10,ARGLENG\n         LA    R15,15(,R6)    START OF LINE\n         LR    R3,R7\n         BCTR  R10,0          MINUS ONE\n         SR    R3,R10\n         BNP   FINDNEXT\nCOMPLOOP EX    R10,COMPARE    COMPARE THIS TO ARGUMENT\n         BE    FOUNDIT\n         LA    R15,1(,R15)    NEXT BYTE\n         BCT   R3,COMPLOOP\n         B     FINDNEXT\nFOUNDIT  MVI   SEARCHON,X'00' RESET\n         MVI   FOUNDFLG,X'FF'\n         ST    R6,SEARCHTP\n         B     DISPL\nUPLINE   LA    R8,1           INCREMENT 0F 1\n         L     R6,CURRLINE\n         CLC   R6,MTTFLINE    ARE WE AT TOP\n         BH    UPCONTIN       NO - SKIP\n         L     R6,MTTLLINE\n         S     R6,=F'05'\nUPCONTIN LNR   R8,R8          DECREMENT OF -1\n         L     R9,MTTFLINE    ADDRESS OF LOWEST ADDRESS IN MTT\n         MVI   STARTFLG,X'00' FLAG TO INDICATE FIRST TIME THRU\n*        L     R6,CURRLINE    ADDRESS OF CURRENT LINE\n         BCTR  R6,0           SUBTRACT  1\nUPLOOP   CLC   CBEGINLN,0(R6) BEGINNING OF LINE CHARACTER?\n         BE    PREVFND        YES, BRANCH\n         BCTR  R6,0           MINUS 1\n         CR    R6,R9\n         BNL   UPLOOP\n*   MEANS WE ARE AT THE LOWEST ADDRESS IN TABLE, NOW START AT THE    *\n*   VERY BOTTOM AND WORK BACKWARDS -                                 *\n         CLI   STARTFLG,X'00' WE BEEN THRU HERE BEFORE?\n         BNE   WRITEITD       YES - BRANCH\n         MVI   STARTFLG,X'FF' FLAG IT\n         L     R6,MTTLLINE    ADDRESS OF LAST LINE\n         S     R6,=F'05'      MINUS SIX\n         L     R9,MTTCLINE\n         B     UPLOOP         NOW FIND PREVIOUS\nPREVLINE LA    R8,1           INCREMENT 0F 1\n         L     R6,CURRLINE    ADDRESS OF CURRENT LINE\n         LA    R6,1(,R6)      INCREMENT\n         C     R6,MTTLLINE    LAST LINE?\n         BL    PREVCONT       NO, BRANCH\n         L     R6,MTTFLINE    START AT FIRST\n         MVI   WRAPFLAG,X'FF' SET TO DISPLAY IT HAS WRAPPED\nPREVCONT L     R9,MTTLLINE    ADDRESS OF LOWEST ADDRESS IN MTT\n         S     R9,=F'06'      CBEGINLN LENGTH\n         BNP   NOTACTIV       NOT POSITIVE, NOT A VALID ENTRY FOR US\n         MVI   STARTFLG,X'00' FLAG TO INDICATE FIRST TIME THRU\nPREVLOOP CLC   CBEGINLN,0(R6) BEGINNING OF LINE CHARACTER?\n         BE    PREVFND        YES, BRANCH\n         BXLE  R6,R8,PREVLOOP LOOP\n*   MEANS WE ARE AT THE LOWEST ADDRESS IN TABLE, NOW START AT THE    *\n*   VERY BOTTOM AND WORK BACKWARDS -                                 *\n         CLI   STARTFLG,X'00' WE BEEN THRU HERE BEFORE?\n         BNE   WRITEIT        YES - BRANCH\n         MVI   STARTFLG,X'FF' FLAG IT\n         L     R6,MTTFLINE    ADDRESS OF FRST LINE\n         B     PREVLOOP       NOW FIND PREVIOUS\nPREVFND  BR    R2             RETURN\nWRITEITD BAL   R2,TPUT        WRITE SCREEN\n         ST    R6,BOTTOM      SAVE WHERE WE WERE\n         B     TGET           GET NEXT INPUT FROM TERMINAL\nWRITEIT  EQU   *\n         BAL   R2,TPUT        WRITE SCREEN\n         ST    R6,TOP         SAVE ADDRESS OF WHERE WE WERE\nTGET     MVC   WORKLINE,HEX40S\n         MVI   SEARCHON,X'00' RESET SEARCH FLAG\n         BAL   R2,CLEARSCR\n         L     R5,LASTLINE    ADDRESS OF WHERE TO MOVE CURRENT ENTRY\n         L     R6,CURRLINE    CURRENT LINE\n         MVI   UPFLAG,X'00'   RESET UP FLAG\n         TGET  WORKLINE,70,ASIS\n         CLI   WORKLINE,X'F1' PF-1?\n         BE    HELPOUT        YES, DISPLAY HELP INFO\n         CLI   WORKLINE,X'F3' PF-3?\n         BE    FREERET        YES, END\n         CLI   WORKLINE,X'F5' SEARCH REPEAT\n         BE    SEARCHRP\n         CLI   WORKLINE,X'F7' UP?\n         BE    UPSET\n         CLI   WORKLINE,X'F8'\n         BE    DOWN\n         CLI   WORKLINE,X'F9'\n         BE    SETTOP\n         CLI   WORKLINE,X'7A'\n         BE    SETBOT\n         CLI   WORKLINE,X'7D' PFK USED?\n         BE    CHECKOUT       NO, CHECK COMMAND, IF ANY\n         CLI   WORKLINE,C'>'  MESSAGE INPUT\n         BE    TGET\n         B     HELPOUT\nCHECKOUT OC    WORKLINE+6(74),HEX40S\n         CLC   WORKLINE+6(4),HEX40S\n         BE    AUTHRIZE\n         MVC   CMDLINE,WORKLINE+6\n         CLC   =C'T  ',CMDLINE  TOP\n         BE    SETTOP\n         CLC   =C'H  ',CMDLINE  TOP\n         BE    HELPOUT\n         CLC   CMDLINE(4),=C'HELP'\n         BE    HELPOUT\n         CLC   CMDLINE(3),=C'TOP'\n         BE    SETTOP\n         CLC   =C'B  ',CMDLINE  TOP\n         BE    SETBOT\n         CLC   XFINDQ,CMDLINE  F '\n         BE    FIND\n         CLC   CFIND,CMDLINE  FIND\n         BE    FIND\n         CLC   CMDLINE(3),=C'BOT'\n         BE    SETBOT\n         CLC   CMDLINE(3),=C'END'\n         BE    FREERET\n         CLC   =C'Z ',CMDLINE  TOP\n         BE    FREERET\n         CLC   =C'X ',CMDLINE  TOP\n         BE    FREERET\n         STAX  DEFER=YES\n         SYSDSVC SVC=244\n         MODESET MF=(E,SUPRMOD)\n         SLR   R0,0                    CLEAR REG 0\nISSUE    LA    R1,COMMAND              GET ADDRESS OF SVC 34 COMMAND\n         SVC   34                      ISSUE COMMAND\n         STIMER WAIT,BINTVL=ONE        WAIT ONE SO THAT IT SHOWS\n         SR    R1,R1                   ****************************\n         L     R1,16                   *  A                       *\n         USING CVT,R1                  *   D                      *\n         L     R1,CVTTCBP              *    D      J              *\n         DROP  R1                      *     R      S             *\n         L     R1,4(R1)                *      E      C            *\n         USING TCB,R1                  *       S      B           *\n         L     R1,TCBJSCB              *        S                 *\n         DROP  R1                      ****************************\n         NI    236(R1),X'FE'           SET AUTHORIZATION OFF\n         MODESET MF=(E,PROBMOD)        PROBLEM STATE\n         STAX  DEFER=NO                NOW THEY CAN INTERRUPT\n         MVC   CMDLINE,HEX40S\n         B     AUTHRIZE\n*    FIND OPERATION REQUESTED                                         *\nFIND     EQU   *\n         OC    WORKLINE+6(74),HEX40S      UPPER CASE\n         MVC   WORKLINE(74),WORKLINE+6    MOVE OVER\n         MVC   ARGUMENT(74),HEX40S        CLEAR OUT\n         LA    R8,1\n         LA    R6,WORKLINE\n         LA    R9,74(,R6)\n         LA    R7,ARGUMENT\nFINDQUOT CLI   0(R6),X'7D'\n         BE    FOUNQUOT\n         LA    R6,1(,R6)\n         CR    R6,R9\n         BL    FINDQUOT\n         B     REENTER\nFOUNQUOT LA    R6,1(,R6)\nARGLOOP  CLI   0(R6),X'7D'\n         BE    ARGDONE\n         MVC   0(1,R7),0(R6)\n         LA    R7,1(,R7)\n         BXLE  R6,R8,ARGLOOP\n*  IF IT GETS HERE - ARGUMENT WAS INVALID                             *\nREENTER  BAL   R2,CLEARSCR\n         MVC   DETAIL+258(30),=C'PLEASE REENTER SEARCH ARGUMENT'\n         MVC   DETAIL+418(25),=C'ENCLOSED IN SINGLE QUOTES'\n         BAL   R2,TPUT\n         B     TGET\nSEARCH   B     FREERET\nENDOFLST MVC   0(80,R5),CENDOFIT\n         CLI   SEARCHON,X'FF'\n         BNE   WRITEIT\n         MVC   24(25,R5),=C'SEARCH ARGUMENT NOT FOUND'\n         MVI   FOUNDFLG,X'00'\n         B     WRITEIT\nSEARCHRP CLI   SRCHFLAG,X'FF'\n         BNE   REENTER\n         CLI   FOUNDFLG,X'FF'\n         BNE   LOADCURR\n         MVC   CURRLINE,SEARCHTP WHERE TO PICK UP\nLOADCURR L     R6,CURRLINE\n         MVI   FOUNDFLG,X'00'\n         BAL   R2,PREVLINE\n         ST    R6,CURRLINE\n         MVI   SEARCHON,X'FF'\n         B     UPSET\nARGDONE  LA    R8,ARGUMENT\n         SR    R7,R8\n         BNP   REENTER\n         ST    R7,ARGLENG\n         MVI   FOUNDFLG,X'00' NOT FOUND YET\n         MVI   SRCHFLAG,X'FF' SEARCH ARGUMENT IS PRESENT\n         MVI   SEARCHON,X'FF' PLEASE SEARCH\n         L     R6,BOTTOM\n         B     SETBOT2\nSETBOT   L     R6,MTTCLINE\nSETBOT2  ST    R6,CURRLINE\n         L     R5,LASTLINE\n         B     DISPLOOP\nSETTOP   L     R6,MTTCLINE\n         ST    R6,CURRLINE\n         BAL   R2,UPLINE\n         ST    R6,CURRLINE\n         BAL   R2,UPLINE\n         ST    R6,BOTTOM\n         B     DOWN\nUPSET    MVI   UPFLAG,X'FF'\n         CLI   DOWNFLAG,X'FF'\n         BNE   UPSET2\n         MVC   CURRLINE,TOP\n         MVI   DOWNFLAG,X'00'\nUPSET2   L     R5,LASTLINE    ADDRESS OF WHERE TO MOVE CURRENT ENTRY\n         L     R6,CURRLINE    WHERE WE LEFT OFF\n         ST    R6,BOTTOM\n         MVI   FOUNDFLG,X'00'\n         B     DISPLOOP\nCOMPARE  CLC   0(0,R15),ARGUMENT  LOOK FOR SEARCH ARGUMENT\nDISPMOVE MVC   0(0,R5),15(R6) SKIP CONTROL STUFF\nDISPMOV2 MVC   0(0,R5),95(R6) SKIP CONTROL STUFF\nTPUT     LA    R1,SCREEN\n         L     R0,SCRTPUTL\n         TPUT  (1),(0),FULLSCR\n         BR    R2\nHELPOUT  BAL   R2,CLEARSCR    GO CLEAR OUR SCREEN\n         MVC   DETAIL+80(80),CHELPLN0\n         MVC   DETAIL+160(80),CHELPLN1\n         MVC   DETAIL+400(80),CHELPLN2\n         MVC   DETAIL+480(80),CHELPLN3\n         MVC   DETAIL+640(39),CHELPLN4\n         MVC   DETAIL+720(43),CHELPLN5\n         MVC   DETAIL+880(43),CHELPLN6\n         BAL   R2,TPUT\n         B     TGET\nNOTACTIV BAL   R2,CLEARSCR    GO CLEAR OUR SCREEN\n         MVC   DETAIL(26),=C'MASTER TRACE IS NOT ACTIVE'\n         BAL   R2,TPUT\n         STIMER WAIT,BINTVL=ONE\n         L     R2,CPPLSAVE\n         LINK  EP=ZTPR0200\n         B     FREERET\n**   CLEAR THE SCREEN AREA AND RETURN TO ADDRESS IN REG 2            **\nCLEARSCR LA    R6,DETAIL\n         L     R7,SCRLENG\n         SR    R9,R9\n         ICM   R9,B'1001',HEX40S\n         LA    R8,HEX40S\n         MVCL  R6,R8\n         BR    R2\nDSCREEN  DS    0C             DISPLAY SCREEN\n         DC    X'28'          CONTROL\n         DC    X'00'          ERASE/WRITE ALTERNATE (132 COL)\n         DC    X'00115D7F1140403C404000' CLEAR SCREEN\n         DC    CL80'                  MASTER  TRACE  TABLE  DISPLAY    *\n                             PF-1 FOR HELP '\n         DC    X'11'          SET BUFFER ADDRESS\n         DC    X'F460'        (43,1)\n*        DC    C'_'\n         DC    X'1DC8'        MARK NEXT FIELD AS INPUT FIELD\n         DC    X'13'          SET CURSOR ADDRESS\n         DC    X'11'          SET BUFFER ADDRESS\n         DC    X'F5E7'        (43,72)\n         DC    X'1DF0'        TERMINATE INPUT FIELD\n         DC    C' '           INDICATES MORE TO BE DISPLAYED\n         DC    X'11'          SET BUFFER ADDRESS\n         DC    X'C150'        (2,1)\n*DLINE1  DC    40CL80' '      MESSAGE TEXT AREA (FOR 40X80 MAX)\nDSCREENL EQU   *-DSCREEN      LENGTH OF THIS PART\nFOUR     DC    F'4'\nCENDOFIT DC    CL80'* * * * * * * * * * * * E N D * * O F * * D A T A **\n               * * * * * * * * * * * * * * '\nCHELPLN0 DC    CL80'  THIS PROGRAM USES CROSS MEMORY SERVICES TO READ T*\n               HE MASTER TRACE TABLE IN    '\nCHELPLN1 DC    CL80'  THE MASTER ADDRESS SPACE. THE MASTER TRACE MUST B*\n               E ACTIVE TO PAGE UP/DOWN.   '\nCHELPLN2 DC    CL80'  PF-1  HELP            PF-3  END                PF*\n               -5  REPEAT FIND   PF-7  UP  '\nCHELPLN3 DC    CL80'  PF-8  PAGE DOWN       PF-9  TOP (OLDEST)       PF*\n               -10 BOTTOM (NEWEST)         '\nCHELPLN4 DC    CL39'  T OR TOP MAY BE USED INSTEAD OF PF-9 '\nCHELPLN5 DC    CL43'  B OR BOTTOM MAY BE USED INSTEAD OF PF-10 '\nCHELPLN6 DC    CL43'  F OR FIND WITH ARGUMENT IN SINGLE QUOTES '\n         DS    0F\nAUTH     DC    CL4'AUTH'\nMTT      DC    CL3'MTT'       MASTER TRACE TABLE HEADER\nTBL      DS    0CL45\n         DC    XL3'080115'        HAN K\n         DC    XL3'260802'        WHB\n         DC    XL3'141301'        MLA\n         DC    XL3'041917'        DRP\n         DC    XL3'141223'        MKT\n         DC    XL3'030722'        CGS\n         DC    XL3'050614'        EFM\n         DC    XL3'051719'        EPR\n         DC    XL3'040226'        DBW\n         DC    XL3'122200'        KS\n         DC    XL3'122217'        KSP\n         DC    XL3'220422'        SDS\n* MISCELLANEOUS DP&L LOGONS                                           *\n         DC    XL3'071403'        GMC\n*        DC    XL3'022205'        BSE\n         DC    XL3'141308'        MLH\n         DC    XL3'010611'        AFJ\n         DC    XL3'130412'        LDK\n         DC    XL3'142419'        MUR F\n         DC    XL3'171414'        PMM  MURF AGAIN\n         DC    XL3'171303'        PLC\n         DC    XL3'190622'        RFS\n         DC    XL3'070323'        GCT\n         DC    XL3'140617'        MFP\n         DC    XL3'030123'        CAT\n         DC    XL3'061615'        FON\nHEXFS    DC    XL4'FFFFFFFF'\nHEXZIP   DC    XL4'00000000'\nCMAINT   DC    XL5'1401091523'\nCOMMANDL DC    Y(76),Y(00)\nONE      DC    A(100)             1 SECOND\nCBEGINLN DC    XL4'00000001'\nEIGHTY   DC    F'080'             CONSTANT 80\nSEVENTY9 DC    F'079'             CONSTANT 79\nANDCHARS DC    XL8'3F3F3F3F3F3F3F3F'\nMSGNO1   DC    CL13'SYSTEM ACTIVE'\nMSG1     DC    CL33'***FREEMAIN ERROR ON SAVEAREA ***'\nMSG2     DC    CL33'***FREEMAIN ERROR ON MTT AREA ***'\nMSG3     DC    CL33'***COULD NOT LOAD IKJEFFUT***'\nXFINDQ   DC    XL3'C6407D'        HEX FOR F '\nCFIND    DC    CL4'FIND'          CHARACTER FIND\nCEND     DC    CL3'END'           CHARACTER END\nCZ       DC    CL1'Z'             CHARACTER Z\nPATTERN  DC    XL4'40202120'\nAXLIST   DC    H'1'\n         DC    H'0'\nSUPRMOD  MODESET MF=L,MODE=SUP,KEY=ZERO\nPROBMOD  MODESET MF=L,MODE=PROB,KEY=NZERO\nSAVDSECT DSECT\nSAVEAREA DS    18F\nDOUBLWD  DS    D\nPARMWKAD DS    F\nCPPLSAVE DS    F\n         DS    0D\nWORKLINE DS    CL80\nHEX40S   DS    CL80\nPARMWORK DS    CL44\nUSERID   DS    CL7\nUSERIDL  DS    XL1\nUSERATTR DS    XL1\nSTARTFLG DS    XL1\nSRCHFLAG DS    XL1\nFOUNDFLG DS    XL1\nSEARCHON DS    XL1\nUPFLAG   DS    XL1\nWRAPFLAG DS    XL1\nDOWNFLAG DS    XL1\nMTTSIZE  DS    F              SIZE OF MTT\nMTTADDR  DS    F              MTT ADDRESS IN MASTER ASID\nBOTTOM   DS    F              BOTTOM    OF SCREEN\nTOP      DS    F              TOP OF SCREEN\nSEARCHTP DS    F              CURRENT LINE FOR REPEAT SEARCH\nCURRLINE DS    F              CURRENT LINE FOR US\nFRSTLINE DS    F              FIRST LINE ON OUR DISPLAY\nLASTLINE DS    F              LAST  LINE ON OUR DISPLAY\nMTTFLINE DS    F              FIRST LINE IN OUR AREA\nMTTLLINE DS    F              LAST  LINE IN OUR AREA\nMTTCLINE DS    F              CURRENT LINE IN OUR AREA\nSCRLENG  DS    F\nSCRTPUTL DS    F\nARGLENG  DS    F\nARGUMENT DS    CL74\nCOMMAND  DS    F\nCMDLINE  DS    CL72\nSCREEN   DS    0CL108\n         DS    XL1            CONTROL\nDSCRO1   DS    XL1            ERASE/WRITE ALTERNATE (132 COL)\n         DS    XL11\n         DS    CL80\n         DS    XL1            SET BUFFER ADDRESS\nDSCRO3   DS    XL2            (43,1)\n*        DS    XL1\n         DS    XL2            MARK NEXT FIELD AS INPUT FIELD\n         DS    XL1            SET CURSOR ADDRESS\n         DS    XL1            SET BUFFER ADDRESS\nDSCRO4   DS    XL2\n         DS    XL2            TERMINATE INPUT FIELD\n         DS    XL2            SET BUFFER ADDRESS\nDSCRO5   DS    XL2\nDETAIL   DS    43CL80\nWORKL    EQU   *-SAVEAREA\n         CVT   DSECT=YES\n         IEZJSCB\n         IKJTCB DSECT=YES\n         IEEBASEA\n         IEECHAIN\n         IKJPSCB\n         IKJCPPL\n         IKJUPT\n         END\n./ ADD NAME=MTTJ\n//MURFJ  JOB (6496,B),MURPHY,CLASS=T,MSGCLASS=T,NOTIFY=MURF\n//*\n//*  CHANGE SYSLIB ACCORDING TO YOUR IPORES\n//*  CHANGE SYSLIB AND SYLMOD IN LKED STEP TO LINK LIST LIBRARY\n//*\n//COM     EXEC PGM=IFOX00,REGION=512K,\n//    PARM='LOAD,XREF(SHORT),LINECNT=55,NODECK'\n//*\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.SMPMTS,DCB=BLKSIZE=23440\n//         DD  DISP=SHR,DSN=SYS1.MACLIB\n//         DD  DISP=SHR,DSN=SYS1.AMODGEN\n//         DD  DISP=SHR,DSN=MURF.SHARE.LIBRARY\n//SYSGO    DD  UNIT=VIO,DSN=&LOADSET,DISP=(MOD,PASS),\n//             SPACE=(CYL,(2,2)),DCB=BLKSIZE=1680\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(10,2))\n//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(12,2))\n//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(20,2))\n//SYSPUNCH DD  DUMMY =*,DCB=FUNC=I\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSIN    DD  DSN=MURF.SHARE.LIBRARY(MTT),DISP=SHR\n//*\n//LKED         EXEC PGM=IEWL,REGION=1024K,COND=(4,LT),\n//             PARM='XREF,LET,LIST,NCAL'\n//SYSPRINT     DD   SYSOUT=*\n//SYSUT1       DD   DSN=&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD      DD   DISP=SHR,DSN=SYS1.LINKLIB(MTT)\n//SYSLIN       DD   UNIT=SYSDA,DSN=&LOADSET,DISP=(OLD,DELETE)\n//             DD   DDNAME=SYSIN\n./ ADD NAME=MTTXA\n***********************************************************************\n*   TITLE: MTTXA                                                      *\n*   AUTHOR: P.M.MURPHY                                                *\n*   DATE-WRITTEN: 10/16/84                                            *\n*   REFERENCE: OS/VS2 MVS SYSTEM PROGRAMMING LIBRARY:SUPERVISOR       *\n*              GC28-1046-1                                            *\n*   REMARKS:                                                          *\n*                                                                     *\n*        USE CROSS MEMORY SERVICES TO PAGE THROUGH CONSOLE MESSAGES   *\n*   IN THE MASTER TRACE TABLE IN THE MASTER ADDRESS SPACE.            *\n*                                                                     *\n***********************************************************************\n*******************************************************************     DOC FILE\n*                                                                 *     DOC FILE\n*                     D I S C L A I M E R                         *     DOC FILE\n*                                                                 *     DOC FILE\n*******************************************************************     DOC FILE\n*                                                                 *     DOC FILE\n* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *     DOC FILE\n* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        *     DOC FILE\n* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *     DOC FILE\n* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *     DOC FILE\n* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *     DOC FILE\n* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *     DOC FILE\n* SUPPLIED .                                                      *     DOC FILE\n*                                                                 *     DOC FILE\n* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *     DOC FILE\n* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *     DOC FILE\n* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *     DOC FILE\n* FUTURE .                                                        *     DOC FILE\n*                                                                 *     DOC FILE\n*******************************************************************     DOC FILE\nMTTXA CSECT\n         BEGIN PROGRAM=MTTXA\n*        SAVES REGISTERS AND INSERTS PROGRAM, DATE, AND TIME\n         LR    R12,R15            LOAD ADDRESS OF ENTRY POINT\n         LR    R2,R1              SAVE CPPL\n         USING MTTXA,R12          R12 BASE REGISTER\n         GETMAIN RC,LV=WORKL      GETMAIN  FOR SAVEAREA/WORK\n         LTR   R15,R15            CHECK RETURN CODE\n         BNZ   GETMERR\n         LR    R3,R1              ADDRESS OF WORK AREA/SAVEAREA\n         USING SAVDSECT,R3        ADDRESSABILITY\n         ST    R13,SAVEAREA+4     STORE CALLER SAVEAREA ADDRESS (HSA)\n         ST    R3,8(,R13)         ADD OF PROGRAM SAVE IN CALLER(LSA)\n         LR    R13,R3             ADDRESS OF SAVEAREA IN R13\n         DROP  R3\n         USING SAVDSECT,R13\n         USING CPPL,R2\n         L     R6,CPPLPSCB\n         DROP  R2\n         USING PSCB,R6\n         MVC   USERID,PSCBUSER\n         MVC   USERIDL,PSCBUSRL\n*        MVC   USERATTR,PSCBATR2  USER ATTRIBUTE BYTE, IN CASE I USE IT\n         MVI   USERFLAG,X'00'\n         DROP  R6\n         ST    R2,CPPLSAVE\n         MVC   SCRTPUTL,=AL4(DSCREENL+41*80) LENGTH FOR TPUT 43 LINE\n         MVC   SCRLENG,=AL4(41*80) LENGTH FOR MOVE LONG 43 LINE DEFAULT\n         MVC   SCREEN(108),DSCREEN SCREEN IMAGE\n         GTSIZE\n         LTR   R0,R0\n         BZ    FREERET2            NON-DISPLAY TERMINAL\n         CH    R1,=H'80'           80 WIDE?\n         BNE   SETM2               NO - SET IT TO THIS\n         CH    R0,=H'43'           MOD 4?\n         BE    VERIFY\n         CH    R0,=H'32'           MOD 3?\n         BNE   SETM2\nMODEL3   MVC   SCRLENG,=AL4(28*80) 30 LINE DISPLAY\n         MVC   SCRTPUTL,=AL4(28*80+DSCREENL)\n         MVC   DSCRO3,=X'E6F0'     (32,1)\n         MVC   DSCRO4,=X'E7F7'     (32,72)\n         B     VERIFY\nSETM2    STSIZE SIZE=80,LINE=24\n         MVC   SCRLENG,=AL4(22*80) LENGTH FOR MOVE LONG\n         MVC   SCRTPUTL,=AL4(22*80+DSCREENL) LENGTH OF TPUT\n         MVC   DSCRO3,=X'5CF0'     24,1\n         MVC   DSCRO4,=X'5DF7'     24,72\nVERIFY   EQU   *\n         STFSMODE ON,INITIAL=YES\n         LA    R7,TABLEND\n         LA    R6,4\n         LA    R1,TABLE\nTBLOOP   CLC   0(4,R1),USERID\n         BE    USEROK\n         BXLE  R1,R6,TBLOOP\n         BE    NOAUTH\n*SEROK   MVI   USERFLAG,X'FF'\nUSEROK   EQU   *\nVEROK    STAX  DEFER=YES         WE DO NOT WANT AN INTERRUPT WHILE\n         SYSDSVC\n         MODESET MF=(E,SUPRMOD)\n         AXRES AXLIST=AXLIST     RESERVE AN AUTHORIZATION INDEX IN A.T.\n         LA    R1,1              MASTER IS ASID 1\n         AXEXT ASID=(1)          DETERMINE AUTH TABLE VALUE OF ASID 1\n         AXSET AX=(0)            SET TO ASID 1'S AUTHORIZATION INDEX\n         L     R1,16\n         USING CVT,R1\n         L     R1,CVTTCBP\n         DROP  R1\n         L     R1,4(R1)\n         USING TCB,R1\n         L     R1,TCBJSCB\n         DROP  R1\n         USING IEZJSCB,R1\n         NI    JSCBOPTS,X'FF'-JSCBAUTH\n         DROP  R1\n         MODESET MF=(E,PROBMOD)\n         STAX  DEFER=NO\n         MVC   COMMAND,COMMANDL\n         MVI   HEX40S,X'40'         SPACE\n         MVC   HEX40S+1(79),HEX40S  PROPAGATE SPACES TO INITIALIZE\n         L     R2,SCRLENG           SCREEN LENGTH\n         S     R2,=F'0160'          MINUS 2 LINES\n         LA    R5,DETAIL            ADDRESS OF SCREEN\n         ST    R5,FRSTLINE\n         LA    R2,0(R5,R2)          ADDRESS IN GETMAIN AREA\n         ST    R2,LASTLINE          SAVE THE ADDRESS\n         LA    R1,16\n         L     R1,0(R1)\n         USING CVT,R1\n         L     R1,CVTMSER\n         DROP  R1\n         USING BASE,R1\n         L     R3,BAMTTBL        ADDRESS OF MASTER TRACE TABLE\n         ICM   R4,B'0111',BAMTLEN LENGTH OF MTT W/O FIRST BYTE OF WORD\n         BZ    NOTACTIV\n         ST    R4,MTTSIZE\n         ST    R3,MTTADDR\n         DROP  R1\n         GETMAIN RC,LV=(4)       LENGTH WAS IN R4\n         LTR   R15,R15\n         BNZ   GETMERR\n         LR    R11,R1            ADDRESS OF OUR FUTURE COPY OF MTT\n*        B     NOTACTIV\nAUTHRIZE STAX  DEFER=YES         WE DO NOT WANT AN INTERRUPT WHILE\n         L     R9,MTTSIZE\n         L     R3,MTTADDR\n         SRA   R9,8             DIVIDE BY 256\n         BNP   NOTACTIV\n         SYSDSVC\n         MODESET MF=(E,SUPRMOD)\n*        AXRES AXLIST=AXLIST     RESERVE AN AUTHORIZATION INDEX IN A.T.\n*        LA    R1,1              MASTER IS ASID 1\n*        AXEXT ASID=(1)          DETERMINE AUTH TABLE VALUE OF ASID 1\n*        AXSET AX=(0)            SET TO ASID 1'S AUTHORIZATION INDEX\n         LA    R1,1\n         SSAR  R1                SECONDARY ADDRESS SPACE OF ASID 1!!!\n         SR    R5,R5\n         LA    R6,0(R4,R11)      END OF GETMAIN AREA\n         LA    R7,256\n         LR    R10,R11\nMOVELOOP MVCP  0(R7,R10),0(R3),R5 MOVES MAX OF 256 BYTES\n         LA    R10,256(,R10)\n         LA    R3,256(,R3)\n         BCT   R9,MOVELOOP\n         B     ALLMOVED\nFREERET  L     R4,MTTSIZE\n         FREEMAIN RC,LV=(4),A=(11) FREE SECOND GETMAIN AREA\n         LTR   R15,R15            CHECK RETURN CODE\n         BNZ   FREEMERR\nFREERET2 LR    R3,R13\n         L     R13,4(,R13)        ADDRESS OF CALLING PROGRAM SAVEAREA\n         FREEMAIN RC,LV=WORKL,A=(3) FREE STORAGE\n         LTR   R15,R15            CHECK RETURN CODE\n         BNZ   FREEERR2\nRETURN   RETURN (14,12),,RC=(15)\nGETMERR  WTO   ' MTTXA - GETMAIN ERROR, PLEASE NOTIFY TECH SUPPORT',   X\n               ROUTCDE=2\n         L     R13,4(,R13)        RELOAD R13\n         B     RETURN\nBADLOAD  TPUT  BADLDMSG,25\nNOAUTH   TPUT  MSGNO1,13\n         B     FREERET2\nFREEMERR TPUT  MSG2,33\n         B     FREERET2\nFREEERR2 TPUT  MSG1,33\n         B     RETURN\nALLMOVED EPAR  R1             EXTRACT PRIMARY ASID INTO R1\n         SSAR  R1             SET SECONDARY TO OUR ASID\n         L     R1,16\n         USING CVT,R1\n         L     R1,CVTTCBP\n         DROP  R1\n         L     R1,4(R1)\n         USING TCB,R1\n         L     R1,TCBJSCB\n         DROP  R1\n         USING IEZJSCB,R1\n         NI    JSCBOPTS,X'FF'-JSCBAUTH\n         DROP  R1\n         MODESET MF=(E,PROBMOD)\n         STAX  DEFER=NO\nADJUST   CLC   MTT,0(R11)     MTT HEADER\n         BNE   NOTACTIV\n         L     R9,4(,R11)     THIS IS THE CURRENT ENTRY IN MASTER\n         L     R8,MTTADDR     ADDRESS OF MTT IN MASTER ADDRESS SPACE\n         SR    R9,R8          DISPLACEMENT INTO OUR AREA OF FIRST ENT\n         LA    R9,0(R9,R11)   CURRENT ENTRY\n         ST    R9,MTTCLINE    MTT CURRENT LINE IN OUR AREA\n         L     R9,32(,R11)    FIRST ENTRY IN MTT\n         SR    R9,R8          DISPLACEMENT TO FIRST ENTRY\n         LA    R9,0(R9,R11)   ADDRESS IN OUR ADDRESS SPACE\n         ST    R9,MTTFLINE    SAVE IN MTT FIRST LINE\n         L     R9,12(,R11)    LAST BYTE\n         SR    R9,R8          GET DISPLACEMENT\n         LA    R9,0(R9,R11)   ADDRESS IN OUR AREAOF LAST BYTE\n         ST    R9,MTTLLINE    MTT LAST LINE -ACTUALLY ITS THE LAST BYTE\n         MVC   CURRLINE,MTTCLINE CURRENT LINE\nDISPLAY  L     R5,LASTLINE    ADDRESS OF WHERE TO MOVE CURRENT ENTRY\n         L     R6,CURRLINE    CURRENT LINE\n         MVI   UPFLAG,X'00'\n         MVI   WRAPFLAG,X'00'\n         MVI   FOUNDFLG,X'00'\n         MVC   BOTTOM,CURRLINE\nDISPLOOP SR    R7,R7\n         ICM   R7,B'0011',8(R6)  LOAD LENGTH\n         BNP   FINDNEXT\n         LA    R8,10(R7,R6)\n         CLI   SEARCHON,X'FF'\n         BE    DISPCHEK\n         CLI   UPFLAG,X'FF'\n         BNE   DISPSUB\nDISPCHEK CLC   CURRLINE,MTTCLINE\n         BNL   CHEKLINE\n         C     R8,MTTCLINE\n         BNL   ENDOFLST\nCHEKLINE C     R6,MTTCLINE\n         BNL   CHEKWRAP\n         C     R8,MTTCLINE\n         BNL   ENDOFLST\n         B     DISPSUB\nCHEKWRAP CLI   WRAPFLAG,X'FF'\n         BE    WRITEIT\nDISPSUB  CLI   SEARCHON,X'FF'\n         BE    SEARCHLN\n         S     R7,=F'51'      MINUS CONTROL STUFF\n         BNP   FINDNEXT\nDISPL    C     R7,SEVENTY9    > 80\n         BNH   MOVEDATA       NO - MOVE TO DISPLAY AREA\n         S     R7,EIGHTY\n         LA    R1,112(R6,R7)  LAST BYTE ADDRESS\n         S     R1,MTTLLINE    ADD OF 0C4 BYTE\n         BC    12,EX01\n         SR    R7,R1\n         BCTR  R7,0\n         BC    2,EX01\n         B     FINDNEXT\nEX01     EX    R7,DISPMOV2\n         S     R5,EIGHTY\n         C     R5,FRSTLINE\n         BNH   WRITEIT\n         LA    R7,62          MAX LENGTH IS 80\nMOVEDATA LA    R1,63(R6,R7)   LAST BYTE ADDRESS\n         S     R1,MTTLLINE    ADD OF 0C4 BYTE\n         BC    12,EX02\n         SR    R7,R1\n         BCTR  R7,0\n         BC    2,EX02\n         B     FINDNEXT\nEX02     EX    R7,DISPMOVE    MOVE IT TO TERMINAL AREA\n         MVC   09(9,R5),44(R6) SKIP CONTROL STUFF\n         CLC   =CL2'40',33(R6)\n         BE    SKIPTIM\n         MVC   00(8,R5),32(R6) SKIP CONTROL STUFF\n*        BAL   R2,SEARCHLN\nSKIPTIM  S     R5,EIGHTY\n         C     R5,FRSTLINE\n         BNH   WRITEIT\n*        CLI   UPFLAG,X'FF'\n*        BE    UP\nFINDNEXT ST    R6,CURRLINE\n         BAL   R2,PREVLINE    GET NEXT     LINE\n         B     DISPLOOP\nDOWN     CLC   BOTTOM,MTTCLINE IS THIS NEWEST PAGE?\n         BE    AUTHRIZE\n         MVI   FOUNDFLG,X'00'\n         BAL   R2,CLEARSCR    GET NEXT     LINE\n         LA    R5,DETAIL      ADDRESS OF WHERE TO MOVE CURRENT ENTRY\n         L     R6,BOTTOM      BECOMES TOP ON PAGE DOWN\n         ST    R6,CURRLINE    CURRENT LINE\n         ST    R6,TOP         CURRENT LINE\n         MVI   DOWNFLAG,X'FF'\n*GIVEN A STARTING POINT, WE WILL BE PAGING UP HERE *\nDOWNLOOP SR    R7,R7\n         ICM   R7,B'0011',8(R6)  LOAD LENGTH\n         BNP   FINDNXTD\n         LA    R8,10(R7,R6)   NEXT LINE\n         C     R8,MTTCLINE\n         BNH   DOWNSUB\n         C     R6,MTTCLINE\n         BNL   DOWNSUB\n         MVC   0(80,R5),CENDOFIT\n         B     WRITEITD\nDOWNSUB  S     R7,=F'51'      MINUS SIX\n         BNP   FINDNXTD\n         C     R7,SEVENTY9    > 80\n         BNH   MOVEDOWN       NO - MOVE TO DISPLAY AREA\n         S     R7,EIGHTY\n         LA    R1,112(R6,R7)  LAST BYTE ADDRESS\n         S     R1,MTTLLINE    ADD OF 0C4 BYTE\n         BC    12,EX03\n         SR    R7,R1\n         BCTR  R7,0\n         BC    2,EX03\n         B     FINDNXTD\nEX03     EX    R7,DISPMOV2\n         LA    R7,62          MAX LENGTH IS 80\n         A     R5,EIGHTY\n         C     R5,LASTLINE\n         BNL   WRITEITD\nMOVEDOWN LA    R1,63(R6,R7)   LAST BYTE ADDRESS\n         S     R1,MTTLLINE    ADD OF 0C4 BYTE\n         BC    12,EX04\n         SR    R7,R1\n         BCTR  R7,0\n         BC    2,EX04\n         B     FINDNXTD\nEX04     EX    R7,DISPMOVE    MOVE IT TO TERMINAL AREA\n         MVC   09(9,R5),44(R6) SKIP CONTROL STUFF\n         CLC   =CL2'40',33(R6)\n         BE    SKIPTIM2\n         MVC   00(8,R5),32(R6) SKIP CONTROL STUFF\n*        BAL   R2,SEARCHLN\nSKIPTIM2 A     R5,EIGHTY\n         C     R5,LASTLINE\n         BNL   WRITEITD\nFINDNXTD ST    R6,CURRLINE\n         BAL   R2,UPLINE      GET NEXT     LINE\n         B     DOWNLOOP\nUP       BAL   R2,UPLINE      PREVIOUS LINE\n         B     DISPLOOP\nSEARCHLN L     R10,ARGLENG\n         LA    R15,15(,R6)    START OF LINE\n         LR    R3,R7\n         SR    R3,R10\n         BNP   FINDNEXT\nCOMPLOOP EX    R10,COMPARE    COMPARE THIS TO ARGUMENT\n         BE    FOUNDIT\n         LA    R15,1(,R15)    NEXT BYTE\n         LA    R1,0(R15,R10)\n         C     R1,MTTLLINE\n         BNL   FINDNEXT\n         BCT   R3,COMPLOOP\n         B     FINDNEXT\nFOUNDIT  MVI   SEARCHON,X'00' RESET\n         MVI   FOUNDFLG,X'FF'\n         S     R7,=F'51'\n         ST    R6,SEARCHTP\n         ST    R6,CURRLINE\n         ST    R6,BOTTOM\n         B     DISPL\nUPLINE   LA    R8,1           INCREMENT 0F 1\n         L     R6,CURRLINE\n         CLC   R6,MTTFLINE    ARE WE AT TOP\n         BH    UPCONTIN       NO - SKIP\n         L     R6,MTTLLINE\n         S     R6,=F'05'\nUPCONTIN LNR   R8,R8          DECREMENT OF -1\n         L     R9,MTTFLINE    ADDRESS OF LOWEST ADDRESS IN MTT\n         MVI   STARTFLG,X'00' FLAG TO INDICATE FIRST TIME THRU\n*        L     R6,CURRLINE    ADDRESS OF CURRENT LINE\n         BCTR  R6,0           SUBTRACT  1\nUPLOOP   CLC   CBEGINLN,0(R6) BEGINNING OF LINE CHARACTER?\n         BE    PREVFND        YES, BRANCH\n         BCTR  R6,0           MINUS 1\n         CR    R6,R9\n         BNL   UPLOOP\n*   MEANS WE ARE AT THE LOWEST ADDRESS IN TABLE, NOW START AT THE    *\n*   VERY BOTTOM AND WORK BACKWARDS -                                 *\n         CLI   STARTFLG,X'00' WE BEEN THRU HERE BEFORE?\n         BNE   WRITEITD       YES - BRANCH\n         MVI   STARTFLG,X'FF' FLAG IT\n         L     R6,MTTLLINE    ADDRESS OF LAST LINE\n         S     R6,=F'05'      MINUS SIX\n         L     R9,MTTCLINE\n         B     UPLOOP         NOW FIND PREVIOUS\nPREVLINE LA    R8,1           INCREMENT 0F 1\n         L     R6,CURRLINE    ADDRESS OF CURRENT LINE\n         LA    R6,1(,R6)      INCREMENT\n         C     R6,MTTLLINE    LAST LINE?\n         BL    PREVCONT       NO, BRANCH\n         L     R6,MTTFLINE    START AT FIRST\n         MVI   WRAPFLAG,X'FF' SET TO DISPLAY IT HAS WRAPPED\nPREVCONT L     R9,MTTLLINE    ADDRESS OF LOWEST ADDRESS IN MTT\n         S     R9,=F'06'      CBEGINLN LENGTH\n         BNP   NOTACTIV       NOT POSITIVE, NOT A VALID ENTRY FOR US\n         MVI   STARTFLG,X'00' FLAG TO INDICATE FIRST TIME THRU\nPREVLOOP CLC   CBEGINLN,0(R6) BEGINNING OF LINE CHARACTER?\n         BE    PREVFND        YES, BRANCH\n         BXLE  R6,R8,PREVLOOP LOOP\n*   MEANS WE ARE AT THE LOWEST ADDRESS IN TABLE, NOW START AT THE    *\n*   VERY BOTTOM AND WORK BACKWARDS -                                 *\n         CLI   STARTFLG,X'00' WE BEEN THRU HERE BEFORE?\n         BNE   WRITEIT        YES - BRANCH\n         MVI   STARTFLG,X'FF' FLAG IT\n         L     R6,MTTFLINE    ADDRESS OF FRST LINE\n         B     PREVLOOP       NOW FIND PREVIOUS\nPREVFND  BR    R2             RETURN\nWRITEITD BAL   R2,TPUT        WRITE SCREEN\n         ST    R6,BOTTOM      SAVE WHERE WE WERE\n         B     TGET           GET NEXT INPUT FROM TERMINAL\nWRITEIT  EQU   *\n         BAL   R2,TPUT        WRITE SCREEN\n         ST    R6,TOP         SAVE ADDRESS OF WHERE WE WERE\nTGET     MVC   WORKLINE,HEX40S\n         MVI   SEARCHON,X'00' RESET SEARCH FLAG\n         BAL   R2,CLEARSCR\n         L     R5,LASTLINE    ADDRESS OF WHERE TO MOVE CURRENT ENTRY\n         L     R6,CURRLINE    CURRENT LINE\n         MVI   UPFLAG,X'00'   RESET UP FLAG\n         TGET  WORKLINE,70,ASIS\n         CLI   WORKLINE,X'7D' PFK USED?\n         BE    CHECKOUT       NO, CHECK COMMAND, IF ANY\n         NI    WORKLINE,X'0F'\n         CLI   WORKLINE,X'01' PF-1?\n         BE    HELPOUT        YES, DISPLAY HELP INFO\n         CLI   WORKLINE,X'03' PF-3?\n         BE    FREERET        YES, END\n         CLI   WORKLINE,X'05' SEARCH REPEAT\n         BE    SEARCHRP\n*        CLI   WORKLINE,X'06' SEARCH REPEAT\n*        BE    ABEND\n         CLI   WORKLINE,X'07' UP?\n         BE    UPSET\n         CLI   WORKLINE,X'08'\n         BE    DOWN\n         CLI   WORKLINE,X'09'\n         BE    SETTOP\n         CLI   WORKLINE,X'0A'\n         BE    SETBOT\n         CLI   WORKLINE,C'>'  MESSAGE INPUT\n         BE    TGET\n         B     AUTHRIZE\nABEND    AP    WORKLINE(3),WORKLINE(2)\nCHECKOUT OC    WORKLINE+6(74),HEX40S\n         CLC   WORKLINE+6(4),HEX40S\n         BE    AUTHRIZE\n         MVC   CMDLINE,WORKLINE+6\n         CLC   =C'T  ',CMDLINE  TOP\n         BE    SETTOP\n         CLC   =C'H  ',CMDLINE  TOP\n         BE    HELPOUT\n         CLC   CMDLINE(4),=C'HELP'\n         BE    HELPOUT\n         CLC   CMDLINE(3),=C'TOP'\n         BE    SETTOP\n         CLC   =C'B  ',CMDLINE  TOP\n         BE    SETBOT\n         CLC   XFINDQ,CMDLINE  F '\n         BE    FIND\n         CLC   CFIND,CMDLINE  FIND\n         BE    FIND\n         CLC   CMDLINE(3),=C'BOT'\n         BE    SETBOT\n         CLC   CMDLINE(3),=C'END'\n         BE    FREERET\n         CLC   =C'Z ',CMDLINE  TOP\n         BE    FREERET\n         CLC   =C'X ',CMDLINE  TOP\n         BE    FREERET\n         CLI   USERFLAG,X'FF'\n         BNE   NOWTO\n         MVC   WTOCMD(100),WTOLIST\n         MVC   WTOCMD+8(72),CMDLINE\n         MVC   WTOCMD+78(4),USERID\n         LA    R7,WTOCMD\n         WTL   MF=(E,(R7))\nNOWTO    STAX  DEFER=YES\n         SYSDSVC SVC=244\n         MODESET MF=(E,SUPRMOD)\n         SLR   R0,0                    CLEAR REG 0\nISSUE    LA    R1,COMMAND              GET ADDRESS OF SVC 34 COMMAND\n         SVC   34                      ISSUE COMMAND\n         STIMER WAIT,BINTVL=ONE        WAIT ONE SO THAT IT SHOWS\n         SR    R1,R1                   ****************************\n         L     R1,16                   *  A                       *\n         USING CVT,R1                  *   D                      *\n         L     R1,CVTTCBP              *    D      J              *\n         DROP  R1                      *     R      S             *\n         L     R1,4(R1)                *      E      C            *\n         USING TCB,R1                  *       S      B           *\n         L     R1,TCBJSCB              *        S                 *\n         DROP  R1                      ****************************\n         USING IEZJSCB,R1\n         NI    JSCBOPTS,X'FF'-JSCBAUTH\n         DROP  R1\n*        NI    236(R1),X'FE'           SET AUTHORIZATION OFF\n         MODESET MF=(E,PROBMOD)        PROBLEM STATE\n         STAX  DEFER=NO                NOW THEY CAN INTERRUPT\n         MVC   CMDLINE,HEX40S\n         B     AUTHRIZE\n*    FIND OPERATION REQUESTED                                         *\nFIND     EQU   *\n         OC    WORKLINE+6(74),HEX40S      UPPER CASE\n         MVC   WORKLINE(74),WORKLINE+6    MOVE OVER\n         MVC   ARGUMENT(74),HEX40S        CLEAR OUT\n         LA    R8,1\n         LA    R6,WORKLINE\n         LA    R9,74(,R6)\n         LA    R7,ARGUMENT\nFINDQUOT CLI   0(R6),X'7D'\n         BE    FOUNQUOT\n         LA    R6,1(,R6)\n         CR    R6,R9\n         BL    FINDQUOT\n         B     REENTER\nFOUNQUOT LA    R6,1(,R6)\nARGLOOP  CLI   0(R6),X'7D'\n         BE    ARGDONE\n         MVC   0(1,R7),0(R6)\n         LA    R7,1(,R7)\n         BXLE  R6,R8,ARGLOOP\n*  IF IT GETS HERE - ARGUMENT WAS INVALID                             *\nREENTER  BAL   R2,CLEARSCR\n         MVC   DETAIL+258(30),=C'PLEASE REENTER SEARCH ARGUMENT'\n         MVC   DETAIL+418(25),=C'ENCLOSED IN SINGLE QUOTES'\n         BAL   R2,TPUT\n         B     TGET\nSEARCH   B     FREERET\nENDOFLST MVC   0(80,R5),CENDOFIT\n         CLI   SEARCHON,X'FF'\n         BNE   WRITEIT\n         MVC   24(25,R5),=C'SEARCH ARGUMENT NOT FOUND'\n         MVI   FOUNDFLG,X'00'\n         B     WRITEIT\nSEARCHRP CLI   SRCHFLAG,X'FF'\n         BNE   REENTER\n         CLI   FOUNDFLG,X'FF'\n         BNE   LOADCURR\n         MVC   CURRLINE,SEARCHTP WHERE TO PICK UP\nLOADCURR L     R6,CURRLINE\n         MVI   FOUNDFLG,X'00'\n         BAL   R2,PREVLINE\n         ST    R6,CURRLINE\n         MVI   SEARCHON,X'FF'\n         B     UPSET\nARGDONE  LA    R8,ARGUMENT\n         BCTR  R7,0\n         SR    R7,R8\n         BNP   REENTER\n         ST    R7,ARGLENG\n         MVI   FOUNDFLG,X'00' NOT FOUND YET\n         MVI   SRCHFLAG,X'FF' SEARCH ARGUMENT IS PRESENT\n         MVI   SEARCHON,X'FF' PLEASE SEARCH\n         L     R6,BOTTOM\n         B     SETBOT2\nSETBOT   L     R6,MTTCLINE\nSETBOT2  ST    R6,CURRLINE\n         L     R5,LASTLINE\n         B     DISPLOOP\nSETTOP   L     R6,MTTCLINE\n         ST    R6,CURRLINE\n         BAL   R2,UPLINE\n         ST    R6,CURRLINE\n         BAL   R2,UPLINE\n         ST    R6,BOTTOM\n         B     DOWN\nUPSET    MVI   UPFLAG,X'FF'\n         CLI   DOWNFLAG,X'FF'\n         BNE   UPSET2\n         MVC   CURRLINE,TOP\n         MVI   DOWNFLAG,X'00'\nUPSET2   L     R5,LASTLINE    ADDRESS OF WHERE TO MOVE CURRENT ENTRY\n         L     R6,CURRLINE    WHERE WE LEFT OFF\n         ST    R6,BOTTOM\n         MVI   FOUNDFLG,X'00'\n         B     DISPLOOP\nCOMPARE  CLC   0(0,R15),ARGUMENT  LOOK FOR SEARCH ARGUMENT\nDISPMOVE MVC   18(0,R5),63(R6) SKIP CONTROL STUFF\nDISPMOV2 MVC   0(0,R5),112(R6) SKIP CONTROL STUFF\nTPUT     LA    R1,SCREEN\n         L     R0,SCRTPUTL\n         TPUT  (1),(0),FULLSCR\n         BR    R2\nHELPOUT  BAL   R2,CLEARSCR    GO CLEAR OUR SCREEN\n         MVC   DETAIL+80(80),CHELPLN0\n         MVC   DETAIL+160(80),CHELPLN1\n         MVC   DETAIL+400(80),CHELPLN2\n         MVC   DETAIL+480(80),CHELPLN3\n         MVC   DETAIL+640(39),CHELPLN4\n         MVC   DETAIL+720(43),CHELPLN5\n         MVC   DETAIL+880(43),CHELPLN6\n         BAL   R2,TPUT\n         B     TGET\nNOTACTIV BAL   R2,CLEARSCR    GO CLEAR OUR SCREEN\n         MVC   DETAIL(26),=C'MASTER TRACE IS NOT ACTIVE'\n         BAL   R2,TPUT\n         STIMER WAIT,BINTVL=ONE\n         L     R2,CPPLSAVE\n         LINK  EP=ZTPR0200\n         B     FREERET\n**   CLEAR THE SCREEN AREA AND RETURN TO ADDRESS IN REG 2            **\nCLEARSCR LA    R6,DETAIL\n         L     R7,SCRLENG\n         SR    R9,R9\n         ICM   R9,B'1001',HEX40S\n         LA    R8,HEX40S\n         MVCL  R6,R8\n         BR    R2\nTABLE    DC    CL4'XXXX'  USERID OF PEOPLE TO USE IT GOES HERE\nTABLEND  DC    CL4'XXXX'\nDSCREEN  DS    0C             DISPLAY SCREEN\n         DC    X'03'          CONTROL\n         DC    X'00'          ERASE/WRITE ALTERNATE (132 COL)\n         DC    X'00115D7F1140403C404000' CLEAR SCREEN\n         DC    CL80'                  MASTER  TRACE  TABLE  DISPLAY    *\n                             PF-1 FOR HELP '\n         DC    X'11'          SET BUFFER ADDRESS\n         DC    X'F460'        (43,1)\n*        DC    C'_'\n         DC    X'1DC8'        MARK NEXT FIELD AS INPUT FIELD\n         DC    X'13'          SET CURSOR ADDRESS\n         DC    X'11'          SET BUFFER ADDRESS\n         DC    X'F5E7'        (43,72)\n         DC    X'1DF0'        TERMINATE INPUT FIELD\n         DC    C' '           INDICATES MORE TO BE DISPLAYED\n         DC    X'11'          SET BUFFER ADDRESS\n         DC    X'C150'        (2,1)\n*DLINE1  DC    40CL80' '      MESSAGE TEXT AREA (FOR 40X80 MAX)\nDSCREENL EQU   *-DSCREEN      LENGTH OF THIS PART\nFOUR     DC    F'4'\nCHELPLN0 DC    CL80'  THIS PROGRAM USES CROSS MEMORY SERVICES TO READ T*\n               HE MASTER TRACE TABLE IN    '\nCHELPLN1 DC    CL80'  THE MASTER ADDRESS SPACE. THE MASTER TRACE MUST B*\n               E ACTIVE TO PAGE UP/DOWN.   '\nCHELPLN2 DC    CL80'  PF-1  HELP            PF-3  END                PF*\n               -5  REPEAT FIND   PF-7  UP  '\nCHELPLN3 DC    CL80'  PF-8  PAGE DOWN       PF-9  TOP (OLDEST)       PF*\n               -10 BOTTOM (NEWEST)         '\nCHELPLN4 DC    CL39'  T OR TOP MAY BE USED INSTEAD OF PF-9 '\nCHELPLN5 DC    CL43'  B OR BOTTOM MAY BE USED INSTEAD OF PF-10 '\nCHELPLN6 DC    CL43'  F OR FIND WITH ARGUMENT IN SINGLE QUOTES '\nBADLDMSG DC    CL25'ERROR LOADING IKJEFFUT  '\n         DS    0F\nAUTH     DC    CL4'AUTH'\nMTT      DC    CL3'MTT'       MASTER TRACE TABLE HEADER\nHEXFS    DC    XL4'FFFFFFFF'\nHEXZIP   DC    XL4'00000000'\nCMAINT   DC    XL5'1401091523'\nCOMMANDL DC    Y(76),Y(00)\nONE      DC    A(100)             1 SECOND\nCBEGINLN DC    XL4'00000001'\nEIGHTY   DC    F'080'             CONSTANT 80\nSEVENTY9 DC    F'079'             CONSTANT 79\nANDCHARS DC    XL8'3F3F3F3F3F3F3F3F'\nMSGNO1   DC    CL13'SYSTEM ACTIVE'\nMSG1     DC    CL33'***FREEMAIN ERROR ON SAVEAREA ***'\nMSG2     DC    CL33'***FREEMAIN ERROR ON MTT AREA ***'\nXFINDQ   DC    XL3'C6407D'        HEX FOR F '\nCFIND    DC    CL4'FIND'          CHARACTER FIND\nCEND     DC    CL3'END'           CHARACTER END\nCZ       DC    CL1'Z'             CHARACTER Z\nPATTERN  DC    XL4'40202120'\nAXLIST   DC    H'1'\n         DC    H'0'\nWTOLIST  WTL   '                                                       X\n                                       ZTPR0200',MF=L\nSUPRMOD  MODESET MF=L,MODE=SUP,KEY=ZERO\nPROBMOD  MODESET MF=L,MODE=PROB,KEY=NZERO\n         LTORG\nCENDOFIT DC    CL80'* * * * * * * * * * * * E N D * * O F * * D A T A **\n               * * * * * * * * * * * * * * '\nSAVDSECT DSECT\nSAVEAREA DS    18F\nDOUBLWD  DS    D\nPARMWKAD DS    F\nCPPLSAVE DS    F\n         DS    0D\nWORKLINE DS    CL80\nHEX40S   DS    CL80\nWTOCMD   DS    CL100\nPARMWORK DS    CL44\nUSERID   DS    CL7\nUSERIDL  DS    XL1\nUSERATTR DS    XL1\nSTARTFLG DS    XL1\nSRCHFLAG DS    XL1\nUSERFLAG DS    XL1\nFOUNDFLG DS    XL1\nSEARCHON DS    XL1\nUPFLAG   DS    XL1\nWRAPFLAG DS    XL1\nDOWNFLAG DS    XL1\nMTTSIZE  DS    F              SIZE OF MTT\nMTTADDR  DS    F              MTT ADDRESS IN MASTER ASID\nBOTTOM   DS    F              BOTTOM    OF SCREEN\nTOP      DS    F              TOP OF SCREEN\nSEARCHTP DS    F              CURRENT LINE FOR REPEAT SEARCH\nCURRLINE DS    F              CURRENT LINE FOR US\nFRSTLINE DS    F              FIRST LINE ON OUR DISPLAY\nLASTLINE DS    F              LAST  LINE ON OUR DISPLAY\nMTTFLINE DS    F              FIRST LINE IN OUR AREA\nMTTLLINE DS    F              LAST  LINE IN OUR AREA\nMTTCLINE DS    F              CURRENT LINE IN OUR AREA\nSCRLENG  DS    F\nSCRTPUTL DS    F\nARGLENG  DS    F\nARGUMENT DS    CL74\nCOMMAND  DS    F\nCMDLINE  DS    CL72\nSCREEN   DS    0CL108\n         DS    XL1            CONTROL\nDSCRO1   DS    XL1            ERASE/WRITE ALTERNATE (132 COL)\n         DS    XL11\n         DS    CL80\n         DS    XL1            SET BUFFER ADDRESS\nDSCRO3   DS    XL2            (43,1)\n*        DS    XL1\n         DS    XL2            MARK NEXT FIELD AS INPUT FIELD\n         DS    XL1            SET CURSOR ADDRESS\n         DS    XL1            SET BUFFER ADDRESS\nDSCRO4   DS    XL2\n         DS    XL2            TERMINATE INPUT FIELD\n         DS    XL2            SET BUFFER ADDRESS\nDSCRO5   DS    XL2\nDETAIL   DS    43CL80\nWORKL    EQU   *-SAVEAREA\n         CVT   DSECT=YES\n         IEZJSCB\n         IKJTCB DSECT=YES\n         IEEBASEA\n         IEECHAIN\n         IKJPSCB\n         IKJCPPL\n         IKJUPT\n         END\n./ ADD NAME=MTTXAJ\n//MURF2 JOB (6496,B014),MURF,CLASS=O,MSGCLASS=T,NOTIFY=MURF\n//*  JCL TO INSTALL MTTXA\n//*\n//*  CHANGE SYSLIB ACCORDING TO YOUR IPORES\n//*  CHANGE SYSLIB AND SYLMOD IN LKED STEP TO LINK LIST LIBRARY\n//*\n//COM     EXEC PGM=IEV90,REGION=512K,\n//    PARM='LOAD,XREF(SHORT),LINECNT=55,NODECK'\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB\n//         DD  DISP=SHR,DSN=SYS1.AMODGEN\n//         DD  DISP=SHR,DSN=MURF.SHARE.LIBRARY\n//SYSLIN   DD  UNIT=VIO,DSN=&LOADSET,DISP=(MOD,PASS),\n//             SPACE=(CYL,(2,2)),DCB=BLKSIZE=1680\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(10,2))\n//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(12,2))\n//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(20,2))\n//SYSPUNCH DD  DUMMY =*,DCB=FUNC=I\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSIN    DD  DSN=MURF.SHARE.LIBRARY(MTTXA),DISP=SHR\n//*\n//LKED         EXEC PGM=IEWL,REGION=1024K,COND=(4,LT),\n//             PARM='XREF,LET,LIST,RENT'\n//SYSPRINT     DD   SYSOUT=*\n//SYSUT1       DD   DSN=&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD      DD   DISP=SHR,DSN=SYSX.LOADLIB(MTTXA)\n//SYSLIN       DD   UNIT=SYSDA,DSN=&LOADSET,DISP=(OLD,DELETE)\n//             DD   DDNAME=SYSIN\n./ ADD NAME=SASTSOMN\n//MURFG   JOB (6496,F),MURF,CLASS=O,MSGCLASS=T,REGION=2500K,NOTIFY=MURF\n//S3    EXEC SAS,TIME=1400,\n// OPTIONS='GEN=0,NOSORTLIST,ERRORABEND,NOSTIMER'\n//FT12F001 DD SYSOUT=*\n//FT14F001 DD SYSOUT=*\n//SMFDD   DD DSN=SYS1.MAN1,DISP=SHR\n//SYSMSG DD SYSOUT=*\nOPTIONS DEVICE=IBM3287F,DEVADDR=(SAS,.,L000P009);\nGOPTIONS ROTATE VSIZE=10.5;\n\n\n\nMACRO    TOD  HH = FLOOR (TIM /360000);\n              MM = FLOOR ((TIM -360000*HH)/6000);\n              SS = FLOOR ((TIM -360000*HH-6000*MM)/100);\n\n              TIM= (HH * 10000) + (MM * 100) + SS; %\n\n DATA TSOMON\n  (KEEP = WEEKDAYS SMFDATE USER TIM TXN CMD);\n   INFILE SMFDD MISSOVER JFCB=JFCBMANX CLOSE=FREE;\n   IF _N_ = 1 THEN DO;\n            IF SUBSTR(JFCBMANX,100,1) = '....1...'B\n               THEN SMFCOL1 = 6 ;\n            ELSE SMFCOL1 = 2;\n            RETAIN SMFCOL1;\n            DROP SMFCOL1;\n            END;\n          INPUT @SMFCOL1 RECNO PIB1.\n                 EOFMARK $8. @;\n          IF EOFMARK = 'FEOFMARK' THEN STOP;\n   INPUT\n         @SMFCOL1+5    SMFDATE PD4.@ ;\n   IF RECNO = 200 OR RECNO = 199;\n   DAY = DATEJUL(SMFDATE);\n   FORMAT DAY MMDDYY6.;\n   WEEKDAYS = PUT(DAY,WEEKDATE3.) ;\n   IF RECNO = 199 THEN GOTO REC199;\n   INPUT @SMFCOL1+09 CPU    $4.\n         @SMFCOL1+13 OFFSET  PIB2.\n         @SMFCOL1+19 INTLEN   PIB4. @;\n   IF INTLEN = 0 THEN GOTO MULTSEG;\n   INPUT @SMFCOL1+39 TIM PIB4.\n         @SMFCOL1+87 MAX_USER  PIB2. @;\n   TOD\n   INTLEN  = INTLEN  / 38400;\n MULTSEG:\n*  REPEAT FOLLOWING CODE FOR INDIVIDUAL USER SEGMENTS;\n   IF OFFSET = 0 THEN RETURN;\n   N = SMFCOL1 + OFFSET - 1;\n   INPUT @N  USER $7.\n         @N+24 TRIVTM IB4.\n         @N+28 TOTSHORT PIB2.\n         @N+40 NTRIVTM PIB4.\n         @N+44 TOTMED  PIB2.\n         @N+46 UCBE    PIB2.\n         @N+56 LONGTM  PIB4.\n         @N+44 TOTLONG PIB2.\n         @N+70 OFFSET  PIB2.\n         @N+138 NRCMDS PIB1. @;\n   TRANS = 0;\n   IF TXNS     = . THEN TXNS  = 0;\n   TRIVTM = TRIVTM / 38400;\n   NTRIVTM = NTRIVTM / 38400;\n   LONGTM = LONGTM / 38400;\n   RESPONSE = TRIVTM + NTRIVTM + LONGTM;\n   TRANS = TOTSHORT + TOTMED + TOTLONG;\n   IF RESPONSE <= 0  OR TRANS <= 0 THEN RETURN;\n   RESPONSE = RESPONSE/ TRANS;\nLOOPCMD:\n    TXN = '        ';\n    IF NRCMDS <= 0 THEN GOTO RESTMON;\n       INPUT    CMD  $2.\n                NRTR PIB1. @;\n   IF CMD = 'A1' THEN TXN = 'ACCOUNT ';\n   IF CMD = 'A2' THEN TXN = 'ALLOCATE';\n   IF CMD = 'A4' THEN TXN = 'ASM     ';\n   IF CMD = 'A5' THEN TXN = 'ATTRIB  ';\n   IF CMD = 'CA' THEN TXN = 'CALL    ';\n   IF CMD = 'C3' THEN TXN = 'CALC    ';\n   IF CMD = 'C1' THEN TXN = 'CONVERT ';\n   IF CMD = 'C2' THEN TXN = 'COPY    ';\n   IF CMD = 'C4' THEN TXN = 'COBOL   ';\n   IF CMD = 'D1' THEN TXN = 'DELETE  ';\n   IF CMD = 'E2' THEN TXN = 'EDIT    ';\n   IF CMD = 'E$' THEN TXN = 'END     ';\n   IF CMD = 'E5' THEN TXN = 'EXEC    ';\n   IF CMD = 'F1' THEN TXN = 'FORMAT  ';\n   IF CMD = 'F2' THEN TXN = 'FREE    ';\n   IF CMD = 'F3' THEN TXN = 'FREEALL ';\n   IF CMD = 'F4' THEN TXN = 'FORT    ';\n   IF CMD = 'G1' THEN TXN = 'GOFORT  ';\n   IF CMD = 'H1' THEN TXN = 'HELP    ';\n   IF CMD = 'L1' THEN TXN = 'LINK    ';\n   IF CMD = 'L2' THEN TXN = 'LIST    ';\n   IF CMD = 'L3' THEN TXN = 'LISTALC ';\n   IF CMD = 'L5' THEN TXN = 'LISTBC  ';\n   IF CMD = 'L8' THEN TXN = 'LISTDS  ';\n   IF CMD = 'Y1' THEN TXN = 'LOGOFF  ';\n   IF CMD = 'LN' THEN TXN = 'LOGON   ';\n   IF CMD = 'Y2' THEN TXN = 'LOADGO  ';\n   IF CMD = 'M1' THEN TXN = 'MERGE   ';\n   IF CMD = 'O1' THEN TXN = 'OPERATOR';\n   IF CMD = 'P2' THEN TXN = 'PLI     ';\n   IF CMD = 'P3' THEN TXN = 'PLIC    ';\n   IF CMD = 'P4' THEN TXN = 'PROFILE ';\n   IF CMD = 'P5' THEN TXN = 'PROTECT ';\n   IF CMD = 'R3' THEN TXN = 'RENAME  ';\n   IF CMD = 'R4' THEN TXN = 'RUN     ';\n   IF CMD = 'S2' THEN TXN = 'SEND    ';\n   IF CMD = '$$' THEN TXN = 'ISPF    ';\n   IF CMD = 'T1' THEN TXN = 'TERMINAL';\n   IF CMD = 'T2' THEN TXN = 'TEST    ';\n   IF CMD = 'T3' THEN TXN = 'TESTCOB ';\n   IF CMD = 'T4' THEN TXN = 'TESTFORT';\n   IF CMD = 'T5' THEN TXN = 'TIME    ';\n   IF CMD = 'W5' THEN TXN = 'ALTER   ';\n   IF CMD = 'B2' THEN TXN = 'BLDINDEX';\n   IF CMD = '87' THEN TXN = 'CHKLIST ';\n   IF CMD = 'C5' THEN TXN = 'CNVTCAT ';\n   IF CMD = 'D2' THEN TXN = 'DEFINE  ';\n   IF CMD = 'E7' THEN TXN = 'EXPORT  ';\n   IF CMD = 'E8' THEN TXN = 'EXPORTRA';\n   IF CMD = 'I2' THEN TXN = 'IMPORT  ';\n   IF CMD = '88' THEN TXN = 'IMPORTRA';\n   IF CMD = 'Y4' THEN TXN = 'LISTCAT ';\n   IF CMD = 'Y5' THEN TXN = 'LISTCRA ';\n   IF CMD = 'P8' THEN TXN = 'PRINT   ';\n   IF CMD = 'R5' THEN TXN = 'REPRO   ';\n   IF CMD = 'R6' THEN TXN = 'RESETCAT';\n   IF CMD = 'V1' THEN TXN = 'VERIFY  ';\n   IF CMD = 'C6' THEN TXN = 'CANCEL  ';\n   IF CMD = 'S6' THEN TXN = 'SUBMIT  ';\n   IF CMD = 'W1' THEN TXN = 'WHEN    ';\n   IF CMD = '70' THEN TXN = 'RMFMON  ';\n   IF CMD = '71' THEN TXN = 'HALTERDS';\n   IF CMD = '72' THEN TXN = 'HBACKDS ';\n   IF CMD = '73' THEN TXN = 'HBDELETE';\n   IF CMD = '74' THEN TXN = 'HDELETE ';\n   IF CMD = '75' THEN TXN = 'HLIST   ';\n   IF CMD = '76' THEN TXN = 'HMIGRATE';\n   IF CMD = '77' THEN TXN = 'HQUERY  ';\n   IF CMD = '78' THEN TXN = 'HRECALL ';\n   IF CMD = '79' THEN TXN = 'HRECOVER';\n   IF CMD = '7A' THEN TXN = 'HSENDCMD';\n   IF CMD = '7B' THEN TXN = 'IPCS    ';\n   IF CMD = '7C' THEN TXN = 'IPCSDDIR';\n   IF CMD = '7D' THEN TXN = 'SYSDSCAN';\n   IF CMD = '7E' THEN TXN = 'ADDGROUP';\n   IF CMD = '7F' THEN TXN = 'ADDSD   ';\n   IF CMD = '7G' THEN TXN = 'ADDUSER ';\n   IF CMD = '7H' THEN TXN = 'ALTDSD  ';\n   IF CMD = '7I' THEN TXN = 'ALTGROUP';\n   IF CMD = '7J' THEN TXN = 'ALTUSER ';\n   IF CMD = '7K' THEN TXN = 'CONNECT ';\n   IF CMD = '7L' THEN TXN = 'DELDSD  ';\n   IF CMD = '7M' THEN TXN = 'DELGROUP';\n   IF CMD = '7N' THEN TXN = 'DELUSER ';\n   IF CMD = '7O' THEN TXN = 'LISTDSD ';\n   IF CMD = '7P' THEN TXN = 'LISTGRP ';\n   IF CMD = '7Q' THEN TXN = 'LISTUSER';\n   IF CMD = '7R' THEN TXN = 'PASSWORD';\n   IF CMD = '7S' THEN TXN = 'PERMIT  ';\n   IF CMD = '7T' THEN TXN = 'RALTER  ';\n   IF CMD = '7U' THEN TXN = 'RDEFINE ';\n   IF CMD = '7V' THEN TXN = 'RDELETE ';\n   IF CMD = '7W' THEN TXN = 'REMOVE  ';\n   IF CMD = '7X' THEN TXN = 'RLIST   ';\n   IF CMD = '7Y' THEN TXN = 'RVARY   ';\n   IF CMD = '7Z' THEN TXN = 'SEARCH  ';\n   IF CMD = '80' THEN TXN = 'SETROPTS';\n   IF CMD = '81' THEN TXN = 'SMCOPY  ';\n   IF CMD = '82' THEN TXN = 'SMFIND  ';\n   IF CMD = '83' THEN TXN = 'SMPUT   ';\n   IF CMD = 'P1' THEN TXN = 'ZTPR0194';\n   IF CMD = 'S1' THEN TXN = 'ZTPR0183';\n   IF CMD = 'A1' THEN TXN = 'ZTPR0186';\n   IF CMD = '$3' THEN TXN = 'BOTTOM  ';\n   IF CMD = '$4' THEN TXN = 'CHANGE  ';\n   IF CMD = '$6' THEN TXN = 'COPY    ';\n   IF CMD = '$7' THEN TXN = 'DELETE  ';\n   IF CMD = '$8' THEN TXN = 'DOWN    ';\n   IF CMD = '$2' THEN TXN = 'EDITDATA';\n   IF CMD = '$9' THEN TXN = 'END     ';\n   IF CMD = '$B' THEN TXN = 'FIND    ';\n   IF CMD = '$P' THEN TXN = 'FORMAT  ';\n   IF CMD = '84' THEN TXN = 'FSE-EDIT';\n   IF CMD = '85' THEN TXN = 'FULSEDIT';\n   IF CMD = '2A' THEN TXN = 'PF(EDIT)';\n   IF CMD = '2B' THEN TXN = 'PB      ';\n   IF CMD = '2C' THEN TXN = 'HF      ';\n   IF CMD = '2D' THEN TXN = 'HB      ';\n   IF CMD = '2E' THEN TXN = 'LS      ';\n   IF CMD = '2F' THEN TXN = 'SS      ';\n   IF CMD = '$H' THEN TXN = 'HELP    ';\n   IF CMD = '$E' THEN TXN = 'INPUT   ';\n   IF CMD = '$F' THEN TXN = 'INSERT  ';\n   IF CMD = '$2' THEN TXN = '*       ';\n   IF CMD = '$A' THEN TXN = 'LIST    ';\n   IF CMD = '$1' THEN TXN = 'MERGE   ';\n   IF CMD = '$M' THEN TXN = 'MOVE    ';\n   IF CMD = '$O' THEN TXN = 'RENUM   ';\n   IF CMD = '$Q' THEN TXN = 'RUN     ';\n   IF CMD = '$R' THEN TXN = 'SAVE    ';\n   IF CMD = '$S' THEN TXN = 'SCAN    ';\n   IF CMD = '$V' THEN TXN = 'TABSET  ';\n   IF CMD = '$X' THEN TXN = 'TOP     ';\n   IF CMD = '$Y' THEN TXN = 'UNNUM   ';\n   IF CMD = '$Z' THEN TXN = 'UP      ';\n   IF CMD = '$#' THEN TXN = 'VERIFY  ';\n   IF CMD = 'A2' THEN TXN = 'ALLOCATE';\n   IF CMD = 'A5' THEN TXN = 'ATTRIB  ';\n   IF CMD = '86' THEN TXN = 'CKPOINT ';\n   IF CMD = 'E5' THEN TXN = 'EXEC    ';\n   IF CMD = 'F2' THEN TXN = 'FREE    ';\n   IF CMD = 'P4' THEN TXN = 'PROFILE ';\n   IF CMD = 'S2' THEN TXN = 'SEND    ';\n   IF CMD = 'S6' THEN TXN = 'SUBMIT  ';\n   IF CMD = '#1' THEN TXN = 'ASSIGN  ';\n   IF CMD = '#2' THEN TXN = 'AT      ';\n   IF CMD = '#3' THEN TXN = 'CALL    ';\n   IF CMD = '#4' THEN TXN = 'COPY    ';\n   IF CMD = '#5' THEN TXN = 'DELETE  ';\n   IF CMD = '#6' THEN TXN = 'DROP    ';\n   IF CMD = '#7' THEN TXN = 'END     ';\n   IF CMD = '#8' THEN TXN = 'EQUATE  ';\n   IF CMD = '#9' THEN TXN = 'FREEMAIN';\n   IF CMD = '#A' THEN TXN = 'GETMAIN ';\n   IF CMD = '#B' THEN TXN = 'GO      ';\n   IF CMD = '#C' THEN TXN = 'HELP    ';\n   IF CMD = '#D' THEN TXN = 'LIST    ';\n   IF CMD = '#E' THEN TXN = 'LISTDCB ';\n   IF CMD = '#F' THEN TXN = 'LISTDEB ';\n   IF CMD = '#G' THEN TXN = 'LISTMAP ';\n   IF CMD = '#H' THEN TXN = 'LISTPSW ';\n   IF CMD = '#I' THEN TXN = 'LISTTCB ';\n   IF CMD = '#J' THEN TXN = 'LOAD    ';\n   IF CMD = '#K' THEN TXN = 'OFF     ';\n   IF CMD = '#M' THEN TXN = 'RUN     ';\n   IF CMD = '#L' THEN TXN = 'QUALIFY ';\n   IF CMD = '#N' THEN TXN = 'WHERE   ';\n   IF CMD = '@0' THEN TXN = 'SPFTERM ';\n   IF CMD = '@1' THEN TXN = 'SPFLOGL ';\n   IF CMD = '@2' THEN TXN = 'SPFEDIT ';\n   IF CMD = '@3' THEN TXN = 'BROWSE  ';\n   IF CMD = '@4' THEN TXN = 'LIBUTIL ';\n   IF CMD = '@5' THEN TXN = 'LIBUTILC';\n   IF CMD = '@6' THEN TXN = 'LIBUTILX';\n   IF CMD = '@7' THEN TXN = 'LIBUTILL';\n   IF CMD = '@8' THEN TXN = 'LIBUTILP';\n   IF CMD = '@9' THEN TXN = 'LIBUTILR';\n   IF CMD = '@A' THEN TXN = 'LIBUTILD';\n   IF CMD = '@B' THEN TXN = 'DSALLOC ';\n   IF CMD = '@C' THEN TXN = 'DSRENAME';\n   IF CMD = '@D' THEN TXN = 'DSDELETE';\n   IF CMD = '@E' THEN TXN = 'DSINFO  ';\n   IF CMD = '@F' THEN TXN = 'UTILMC  ';\n   IF CMD = '@G' THEN TXN = 'UTILCAT ';\n   IF CMD = '38' THEN TXN = 'UTILRESR';\n   IF CMD = '40' THEN TXN = 'UTILRESN';\n   IF CMD = '41' THEN TXN = 'UTILRESD';\n   IF CMD = '36' THEN TXN = 'UTLHCPYJ';\n   IF CMD = '37' THEN TXN = 'UTLHCPYL';\n   IF CMD = '@J' THEN TXN = 'FORASM  ';\n   IF CMD = '@K' THEN TXN = 'FORCOB  ';\n   IF CMD = '@L' THEN TXN = 'FORFORG1';\n   IF CMD = '@M' THEN TXN = 'FORPLIC ';\n   IF CMD = '@N' THEN TXN = 'FORPLIOP';\n   IF CMD = '@O' THEN TXN = 'FORLINK ';\n   IF CMD = '@P' THEN TXN = 'FORCOBID';\n   IF CMD = '@Q' THEN TXN = 'FORFORID';\n   IF CMD = '44' THEN TXN = 'FORPASCL';\n   IF CMD = '@R' THEN TXN = 'BCKASM  ';\n   IF CMD = '@S' THEN TXN = 'BCKCOB  ';\n   IF CMD = '@T' THEN TXN = 'BCKFORG1';\n   IF CMD = '@U' THEN TXN = 'BCKPLIC ';\n   IF CMD = '@V' THEN TXN = 'BCKPLIOP';\n   IF CMD = '@W' THEN TXN = 'BCKLINK ';\n   IF CMD = '45' THEN TXN = 'BCKPASCL';\n   IF CMD = '@X' THEN TXN = 'SPFVTOC ';\n   IF CMD = '@Y' THEN TXN = 'TUTORIAL';\n   IF CMD = '@Z' THEN TXN = 'SPFERR01';\n   IF CMD = '@@' THEN TXN = 'SPFERR02';\n   IF CMD = '@#' THEN TXN = 'SPFERR03';\n   IF CMD = '34' THEN TXN = 'SPFERR04';\n   IF CMD = '35' THEN TXN = 'SPFERR05';\n   IF CMD = '42' THEN TXN = 'SPFERR06';\n   IF CMD = '43' THEN TXN = 'SPFERR07';\n   IF CMD = '48' THEN TXN = 'SPFERR08';\n   IF CMD = '@?' THEN TXN = 'DATUTILC';\n   IF CMD = '@-' THEN TXN = 'DATUTILU';\n   IF CMD = '46' THEN TXN = 'CONVMNU ';\n   IF CMD = '47' THEN TXN = 'CONVMSG ';\n   IF CMD = '@+' THEN TXN = 'TESTMENU';\n   IF CMD = '@=' THEN TXN = 'SPFPK1  ';\n   IF CMD = '@!' THEN TXN = 'SPFPK2  ';\n   IF CMD = '@\u00ac' THEN TXN = 'SPFPK3  ';\n   IF CMD = '@:' THEN TXN = 'UTILBRWS';\n   IF CMD = '30' THEN TXN = 'UTILOUT ';\n   IF CMD = '31' THEN TXN = 'UTILOUTD';\n   IF CMD = '32' THEN TXN = 'UTILOUTP';\n   IF CMD = '33' THEN TXN = 'UTILOUTR';\n   IF CMD = '@;' THEN TXN = 'UTILOUTL';\n   IF CMD = '20' THEN TXN = 'SCRIPTD ';\n   IF CMD = '21' THEN TXN = 'SCRIPTF ';\n   IF CMD = '49' THEN TXN = 'PANBRWSE';\n   IF CMD = '4A' THEN TXN = 'PANEDIT ';\n   IF CMD = '4B' THEN TXN = 'PANCHNG ';\n   IF CMD = '4C' THEN TXN = 'AFTER   ';\n   IF CMD = '01' THEN TXN = 'BEFORE  ';\n   IF CMD = '02' THEN TXN = 'BOUNDS  ';\n   IF CMD = '03' THEN TXN = 'COLS    ';\n   IF CMD = '04' THEN TXN = 'COPY    ';\n   IF CMD = '05' THEN TXN = 'DELETE  ';\n   IF CMD = '06' THEN TXN = 'INSERT  ';\n   IF CMD = '07' THEN TXN = 'MASK    ';\n   IF CMD = '08' THEN TXN = 'MOVE    ';\n   IF CMD = '09' THEN TXN = 'OVERLAY ';\n   IF CMD = '0A' THEN TXN = 'REPEAT  ';\n   IF CMD = '0B' THEN TXN = 'DATASHFT';\n   IF CMD = '0C' THEN TXN = 'DATASHFT';\n   IF CMD = '0D' THEN TXN = 'TABS    ';\n   IF CMD = '0E' THEN TXN = 'SHOW    ';\n   IF CMD = '0F' THEN TXN = 'EXCLUDE ';\n   IF CMD = '0G' THEN TXN = 'FIRST   ';\n   IF CMD = '0H' THEN TXN = 'LAST    ';\n   IF CMD = '0I' THEN TXN = 'COLSHIFT';\n   IF CMD = '0J' THEN TXN = 'COLSHIFT';\n   IF CMD = '0K' THEN TXN = 'TXTENTRY';\n   IF CMD = '0L' THEN TXN = 'TXTFLOW ';\n   IF CMD = '0M' THEN TXN = 'TXTSPLIT';\n   IF CMD = '0N' THEN TXN = 'MOVE$   ';\n   IF CMD = '0O' THEN TXN = 'CANCEL  ';\n   IF CMD = '0P' THEN TXN = 'CHANGE  ';\n   IF CMD = '0Q' THEN TXN = 'FIND    ';\n   IF CMD = '0R' THEN TXN = 'LOCATE  ';\n   IF CMD = '0S' THEN TXN = 'PROFILE ';\n   IF CMD = '0T' THEN TXN = 'RESET   ';\n   IF CMD = '0U' THEN TXN = 'SAVE    ';\n   IF CMD = '0V' THEN TXN = 'SUBMIT  ';\n   IF CMD = '0W' THEN TXN = 'ASIS    ';\n   IF CMD = '0X' THEN TXN = 'AUTONUM ';\n   IF CMD = '0Y' THEN TXN = 'CAPS    ';\n   IF CMD = '0Z' THEN TXN = 'COPY$   ';\n   IF CMD = '10' THEN TXN = 'CREATE  ';\n   IF CMD = '12' THEN TXN = 'HEX     ';\n   IF CMD = '13' THEN TXN = 'NONULLS ';\n   IF CMD = '14' THEN TXN = 'NONUMBER';\n   IF CMD = '15' THEN TXN = 'NOTABS  ';\n   IF CMD = '16' THEN TXN = 'NULLS   ';\n   IF CMD = '17' THEN TXN = 'NUMBER  ';\n   IF CMD = '18' THEN TXN = 'PRINT   ';\n   IF CMD = '19' THEN TXN = 'RECOVERY';\n   IF CMD = '1A' THEN TXN = 'RENUMBER';\n   IF CMD = '1B' THEN TXN = 'REPLACE ';\n   IF CMD = '1C' THEN TXN = 'STATS   ';\n   IF CMD = '1D' THEN TXN = 'TABS    ';\n   IF CMD = '1E' THEN TXN = 'UNNUMBER';\n       OUTPUT TSOMON;\n       CMD = '  ';\n       NRCMDS = NRCMDS - 1;\n       GOTO LOOPCMD;\nRESTMON:\n   INPUT @N+UCBE TSMFEXIT PIB2.\n         @N+UCBE+14 NOCMDS PIB1.@;\nCYCLE:\n   INPUT @N+TSMFEXIT TXN $8.@;\n   NOCMDS = NOCMDS - 1;\n   OUTPUT TSOMON;\n   IF NOCMDS LE 0 THEN GOTO MULTSEG;\n   TSMFEXIT = TSMFEXIT + 10;\n   GOTO CYCLE;\nREC199:\n   INPUT\n         @SMFCOL1+15  USER   $8.\n         @SMFCOL1+31 TIM PIB4.\n         @SMFCOL1+43 TXN $8.\n         @SMFCOL1+51 TGETS PIB2.\n         @SMFCOL1+53 TPUTS PIB2.\n         @SMFCOL1+63 INCPUT PIB4.\n         @SMFCOL1+67 SRB PIB4.\n         @SMFCOL1+71 EXCP PIB4.\n         @SMFCOL1+121 SWAPOUT PIB2.\n         @SMFCOL1+147 SERVUNIT PIB4.\n         ;\n   TOD\n   TSOCPU = (INCPUT / 384)/100;\n   TSOSRB = (SRB  / 384)/100;\n   RESPONSE = TSOCPU+TSOSRB;\n   TRANS = 1;\n   OUTPUT TSOMON;\n   RETURN;\n   PROC PRINT DATA = TSOMON;\n./ ADD NAME=SWAPIN\nSWAPIN   CSECT\n*******************************************************************     DOC FILE\n*                                                                 *     DOC FILE\n*                        D I S C L A I M E R                      *     DOC FILE\n*                                                                 *     DOC FILE\n*******************************************************************     DOC FILE\n*                                                                 *     DOC FILE\n* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *     DOC FILE\n* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        *     DOC FILE\n* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *     DOC FILE\n* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *     DOC FILE\n* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *     DOC FILE\n* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *     DOC FILE\n* SUPPLIED .                                                      *     DOC FILE\n*                                                                 *     DOC FILE\n* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *     DOC FILE\n* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *     DOC FILE\n* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *     DOC FILE\n* FUTURE .                                                        *     DOC FILE\n*                                                                 *     DOC FILE\n*******************************************************************     DOC FILE\n**********************************************************************  DOC FILE\n*  04/10/90 - CHANGED TO CHECK FOR THE MAX NUMBER OF ADDRESS SPACES  *\n*  INSTEAD OF USING A HARD CODED VALUE THAT COULD CHANGE ON IPL.     *\n*  IS CODED TO WHERE ACCT AUTHORITY IS REQUIRED. THERE ARE ONLY A    *\n*  FEW PEOPLE THAT SHOULD HAVE ACCESS TO THIS.  PMM                  *\n**********************************************************************  DOC FILE\n         BEGIN PROGRAM=SWAPIN\n         LR    R12,R15            ESTABLISH ...\n         USING SWAPIN,R12         ... BASE REGISTER\n         LA    R3,SAVEAREA        COPY HIGH SAVE ADDR\n         ST    R3,8(,R13)         LOAD MY SAVE AREA ADDRESS\n         ST    R13,SAVEAREA+4     STORE MY SAVE ADDR IN HIGH SAVE\n         LR    R11,R13\n         LR    R13,R3\n         USING CPPL,R1\n         L     R6,CPPLPSCB\n         DROP  R1\n         USING PSCB,R6\n         MVC   USERID,PSCBUSER\n         TM    PSCBATR1,PSCBACCT  ACCOUNT AUTHORITY\n         BZ    RETURN0            NO, GET OUTTA HERE\n         DROP  R6\n         LA    R2,JOBNAME         GET REPLY AREA ADDRESS\n         TPUT  MESSAGE1,40\n         TGET  JOBNAME,8\n         OC    JOBNAME(8),SPACES\n         TPUT  MESSAGE2,40\n         TGET  REPLY,2\n         OC    REPLY(2),SPACES\n         CLI   REPLY+1,C' '\n         BNE   PACKIT\n         MVC   REPLY+1(1),REPLY\n         MVI   REPLY,X'F0'\nPACKIT   PACK  DOUBLWD(8),REPLY(2)\n         CVB   R1,DOUBLWD\n         ST    R1,RETCODE\n         B     AUTHRIZE\nAUTHRIZE MVC   REPLY(8),JOBNAME\n         XC    REPLY(8),=X'C0C0C0C0C0C0C0C0'\n         CLC   REPLY(5),=X'1127030380'\n         BE    SWTCH\n         CLC   REPLY(5),=X'1424190680'\n         BNE   LOADAUTH\nSWTCH    MVC   JOBNAME(7),USERID\nLOADAUTH L     R1,16                    POINT TO CVT\n         USING CVT,R1\n         L     R8,CVTMSER               POINT TO MSRDA\n         L     R1,CVTASVT\n         DROP  R1\n         USING ASVT,R1\n         L     R2,ASVTMAXU\n         DROP  R1\n         USING MSRDA,R8\nLOADBASE DS    0H\n         L     R8,BACHN                 POINT TO CSCB CHAIN\n         DROP  R8\n         USING CSCB,R8\n         LA    R8,0(,R8)                CLEAR HIGH ORDER BYTE\nCSCBLOOP DS    0H\n         C     R8,=F'0'                 ANY MORE CSCBS ?\n         BE    POSTERR                  NO ...\n         CLC   JOBNAME,CHKEY            IS THIS IT ?\n         BE    SETBIT                   YES ...\n         CLC   JOBNAME,CHCLS            IS THIS IT ?\n         BE    SETBIT                   YES ...\nBUMPADDR DS    0H\n         L     R8,CHPTR                 BUMP TO NEXT CSCB\n         LA    R8,0(,R8)                CLEAR HIGH ORDER BYTE\n         BCT   R2,CSCBLOOP              DECREMENT LOOP COUNTER\n         B     POSTERR\nSETBIT   DS    0H\n         MVC   ASID,CHASID              GET ASID\n         DROP  R8\n         STAX  DEFER=YES\n         L     1,AUTH\n         LA    R0,1\n         SYSDSVC\n         MODESET KEY=ZERO,MODE=SUP      SET KEY ZERO;SUPERVISOR STATE\n         LA    R0,31                    INDICATE SWAP IN\n         ICM   R0,B'1100',ASID          GET ASID\n         L     R1,RETCODE\n         SVC   95                       SWAP HIM IN (MAYBE)\nRETURN   SR    R1,R1\n         L     R1,16\n         USING CVT,R1\n         L     R1,CVTTCBP\n         L     R1,4(R1)\n         DROP  R1\n         USING TCB,R1\n         L     R1,TCBJSCB\n         NI    236(R1),X'FE'\n         DROP  R1\n         MODESET KEY=NZERO,MODE=PROB   TCB KEY;PROBLEM STATE\n         STAX  DEFER=NO\n         TPUT  COMPLETE,40\nRETURN0  LR    R13,R11\n         RETURN (14,12),RC=0        RETURN TO CALLER\nPOSTERR  DS    0H\n         TPUT  MESSAGE6,40\n         B     RETURN0\n         EJECT\n         LTORG\nPOSTMSG  DC    CL40'             POST ERROR                '\nCOMPLETE DC    CL40'PROCESSING COMPLETE                    '\n         DC    CL8'SAVEAREA'\nSAVEAREA DS    18F\nMESSAGE1 DC    CL40'PLEASE ENTER JOB NAME                  '\nMESSAGE2 DC    CL40'PERFORMANCE GROUP ?                    '\nMESSAGE6 DC    CL40'JOB NOT FOUND                          '\n         DS    0F\nAUTH     DC    CL4'AUTH'            YES = Y\nASID     DS    H\nDOUBLWD  DS    F                    WTOR ECB\nIN       DS    F                    WTOR ECB\nWTORECB  DS    F                    WTOR ECB\nDUMP     DC    CL4' '               YES = Y\nJOBNAME  DC    CL8' '               NAME OF JOB TO BE CANCELED\nMAJ      DC    CL8'SYSIEFSD'        MAJOR ENQUEUE NAME\nMIN      DC    CL3'Q10'             MINOR ENQUEUE NAME\nONESEC   DC    F'100'               ONE SECOND\nFOUNDIT  DC    X'00'                FOUND = X'FF'\nSPACES   DC    CL8'        '\nUSERID   DC    CL7'        '\nHEXZIP   DC    XL8'0000000000000000'\nHEXFS    DC    XL4'FFFFFFFF'\nREPLY    DC    CL80' '\n         DS    0F\nRETCODE  DS    F\nRETCD    DC    XL4'00000000'\n         CVT   DSECT=YES\n         IEEBASEA\nMSRDA    EQU   BASE\nCSCB     DSECT\n         IEECHAIN\n         IHAASVT DSECT=YES\n         IKJTCB DSECT=YES\n         IEZJSCB\n         IKJPSCB\n         IKJCPPL\n         END   SWAPIN\n./ ADD NAME=SWAPINJ\n//MURFJ    JOB (6496,B014),MURF,CLASS=O,MSGCLASS=3,NOTIFY=MURF\n//*  JCL TO INSTALL SWAPIN\n//*\n//*  CHANGE SYSLIB AND SYSIN ACCORDING TO THE UNLOADED CBT NAME\n//*  CHANGE SYLMOD IN LKED STEP TO LINK LIST LIBRARY OR ISPLLIB\n//*\n//COM     EXEC PGM=IEV90,REGION=512K,\n//    PARM='LOAD,XREF(SHORT),LINECNT=55,NODECK'\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB\n//         DD  DISP=SHR,DSN=SYS1.AMODGEN\n//         DD  DSN=LBKQ.FILE025.PDS,DISP=SHR\n//SYSLIN   DD  UNIT=VIO,DSN=&LOADSET,DISP=(MOD,PASS),\n//             SPACE=(CYL,(2,2)),DCB=BLKSIZE=1680\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(10,2))\n//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(12,2))\n//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(20,2))\n//SYSPUNCH DD  DUMMY =*,DCB=FUNC=I\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSIN    DD  DSN=LBKQ.FILE025.PDS(SWAPIN),DISP=SHR\n//*\n//LKED     EXEC PGM=IEWL,REGION=1024K,COND=(4,LT),\n//             PARM='XREF,LET,LIST'\n//SYSPRINT DD   SYSOUT=*\n//SYSUT1   DD   DSN=&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD  DD   DISP=SHR,DSN=SYSX.LOADLIB(SWAPIN) LINKLIST OR STEPLIB\n//SYSLIN   DD   UNIT=SYSDA,DSN=&LOADSET,DISP=(OLD,DELETE)\n//         DD   DDNAME=SYSIN\n./ ADD NAME=SYSDSVC\n         MACRO\n         SYSDSVC &SVC=244\n         L     R1,AUTH\n         LA    R0,1\n         SVC   &SVC\n         MEND\n./ ADD NAME=ZTPPASM\n//MURFC    JOB (6496,B014),MURF,CLASS=O,MSGCLASS=R,NOTIFY=MURF\n//*  JCL TO INSTALL ZTPP0210\n//*\n//*  CHANGE SYSLIB ACCORDING TO YOUR IPORES\n//*  CHANGE SYSLIB AND SYLMOD IN LKED STEP TO YOUR LIBRARY\n//*\n//COM     EXEC PGM=IEV90,REGION=512K,\n//    PARM='LOAD,XREF(SHORT),LINECNT=55,NODECK'\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB\n//         DD  DISP=SHR,DSN=SYS1.AMODGEN\n//SYSLIN   DD  UNIT=VIO,DSN=&LOADSET,DISP=(MOD,PASS),\n//             SPACE=(CYL,(2,2)),DCB=BLKSIZE=1680\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(10,2))\n//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(12,2))\n//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(20,2))\n//SYSPUNCH DD  DUMMY =*,DCB=FUNC=I\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSIN    DD  DSN=MURF.SHARE.LIBRARY(ZTPP0210),DISP=SHR\n//*\n//LKED         EXEC PGM=IEWL,REGION=1024K,COND=(4,LT),\n//             PARM='XREF,LET,LIST'\n//SYSPRINT     DD   SYSOUT=*\n//SYSUT1       DD   DSN=&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD      DD   DISP=SHR,DSN=YOUR.SYSLMOD(ZTPP0210)\n//SYSLIN       DD   UNIT=SYSDA,DSN=&LOADSET,DISP=(OLD,DELETE)\n//             DD   DDNAME=SYSIN\n//SYSIN        DD   *\n NAME ZTPP0210(R)\n./ ADD NAME=ZTPP0210\nZTPP0210 TITLE '***** CLEAR OFF PDS *****'\n***********************************************************************\n*   TITLE: ZTPP0210                                                   *\n*                                                                     *\n*   AUTHOR: MURPHY                                                    *\n*                                                                     *\n*   DATE-WRITTEN: 10/07/85                                            *\n*                                                                     *\n*   REFERENCE: MVS/XA SYSTEM PROGRAMMING LIBRARY:SYSTEM MACROS        *\n*              GC28-1150-2                                            *\n*                                                                     *\n*   REMARKS:                                                          *\n*                                                                     *\n*        WRITE HEX FF'S TO FIRST MEMBER IN DIRECTORY THUS DELETING    *\n*   ALL MEMBERS.                                                      *\n*                                                                     *\n***********************************************************************\nZTPP0210 CSECT\n         BEGIN PROGRAM=ZTPP0210\n*        SAVES REGISTERS AND INSERTS PROGRAM, DATE, AND TIME\n         LR    R12,R15            LOAD ADDRESS OF ENTRY POINT\n         LR    R2,R1              SAVE CPPL\n         USING ZTPP0210,R12       R12 BASE REGISTER\n         GETMAIN RC,LV=WORKL      GETMAIN  FOR SAVEAREA/WORK\n         LTR   R15,R15            CHECK RETURN CODE\n         BNZ   GETMERR\n         LR    R3,R1              ADDRESS OF WORK AREA/SAVEAREA\n         USING SAVDSECT,R3        ADDRESSABILITY\n         ST    R13,SAVEAREA+4     STORE CALLER SAVEAREA ADDRESS (HSA)\n         ST    R3,8(,R13)         ADD OF PROGRAM SAVE IN CALLER(LSA)\n         LR    R13,R3             ADDRESS OF SAVEAREA IN R13\n         MVC   TASKLIB(TASKL),TASKLIBL\n         MVC   OP(OPL),OPENL\n         LA    R10,TASKLIB\n         USING IHADCB,R10\n         LA    R11,DIRECTRY\n         MVC   DCBBLKSI,=H'256'   BLKSIZE\n         MVI   DCBRECFM,X'C0'     RECFM=U\n         OPEN  ((10),(UPDAT)),MF=(E,OP)\n         READ  DECB1,SF,(10),(11),256,MF=E\n         CHECK DECB1\n         MVC   DIRECTRY(10),=X'000EFFFFFFFFFFFFFFFF'\n         MVI   DIRECTRY+10,X'00'\n         MVC   DIRECTRY+11(244),DIRECTRY+10\n         WRITE DECB1,SF,(10),(11),256,MF=E\n         CHECK DECB1\nREADLOOP READ  DECB1,SF,(10),(11),256,MF=E\n         CHECK DECB1\n         MVI   DIRECTRY,X'00'\n         MVC   DIRECTRY+1(255),DIRECTRY\n         WRITE DECB1,SF,(10),(11),256,MF=E\n         CHECK DECB1\n         B     READLOOP\nCLOSE    WTO   'TASKLIB HAS BEEN CLEANED OFF',ROUTCDE=11\n         CLOSE ((10),DISP),MF=(E,CLO)\n         DROP  R10\nFREERET  L     R13,4(,R13)        ADDRESS OF CALLING PROGRAM SAVEAREA\n         FREEMAIN RC,LV=WORKL,A=(3) FREE STORAGE\n         LTR   R15,R15            CHECK RETURN CODE\n         BNZ   FREEMERR\nRETURN   RETURN (14,12),,RC=(15)\nGETMERR  TPUT  GETM,60\n         L     R13,4(,R13)        RELOAD R13\n         B     RETURN\nFREEMERR TPUT  FREEM,60\n         B     RETURN\nTERMNATE TPUT  MSG4,38\n         B     FREERET\nBADDD    TPUT  MSG5,38\n         B     FREERET\nIOERROR  STM   R13,R12,SYNADSV\n         LR    R6,R0            IOB ADDRESS\n         LR    R7,R1\n         LR    R8,R15\n         L     R4,16(,R6)\n         MVC   WORKLINE(15),0(R4)    ERROR CODES\n         SYNADAF ACSMETH=BSAM\n         MVC   WORKLINE+16(64),57(R1)\n         TPUT  WORKLINE,80\n         LA    R5,WORKLINE\n         AP    MSG1(2),MSG1(2)\n         SYNADRLS\n         LM    R13,R12,SYNADSV\n         BR    R14\nMOVEPARM MVC   DDNAME(0),0(R8)\nSPACES   DC    CL8'        '\nFREEM    DC    CL60' ZTPP0210 - FREEMAIN ERROR, PLEASE NOTIFY TECH SUPPX\n               ORT'\nGETM     DC    CL60' ZTPP0210 - GETMAIN ERROR, PLEASE NOTIFY TECH SUPPOX\n               RT '\nMSG1     DC    CL80' ZTPP0210 - PDS CLEAN  -    REPLY YES TO WIPE OUT AX\n               LL MEMBERS ON DDNAME XXXXXXXX '\nMSG2     DC    CL23' PDS CLEAN IN PROGRESS '\nMSG3     DC    CL26' PDS SUCCESSFULLY CLEANED '\nMSG4     DC    CL38' INVALID REPLY - PROCESSING TERMINATED'\nMSG5     DC    CL38' INVALID DDNAME- PROCESSING TERMINATED'\n*        DC    XL2'0000'\n*        DC    XL8'FFFFFFFFFFFFFFFF'\n*        DC    246X'00'\nOPENL    OPEN  (,(INPUT)),MF=L\nOPL      EQU   *-OPENL\nCLOSEL   CLOSE (TASKLIBL),MF=L\nCLOL     EQU   *-CLOSEL\nTASKLIBL DCB   DSORG=PS,DDNAME=TASKLIB,MACRF=(RP,WP),SYNAD=IOERROR,    X\n               EODAD=CLOSE\nTASKL    EQU   *-TASKLIBL\nSAVDSECT DSECT\nSAVEAREA DS    18F\nSYNADSV  DS    18F\nTTR      DS    F\nSAVBLKSZ DS    H\nSAVRECFM DS    H\nDDNAME   DS    CL8\nINPUT    DS    CL8\nWORKLINE DS    CL80\n         READ  DECB1,SF,MF=L\nCLO      CLOSE (,DISP),MF=L\nOP       OPEN  (,(INPUT)),MF=L\nTASKLIB  DCB   DSORG=PS,DDNAME=TASKLIB,MACRF=(R,W)\nDIRECTRY DS    CL256\n         DS    F\nWORKL    EQU   *-SAVEAREA\n         DCBD DSORG=PS\n         END\n./ ADD NAME=ZTPP210J\n//MURFZ    JOB (6496,B014),PMM,CLASS=O,NOTIFY=MURF,\n//        MSGLEVEL=(1,1),MSGCLASS=T\n//*********************************************************************\n//*  CLEANS OFF THE LIBRARY IN THE TASKLIB DD STATEMENT               *\n//*********************************************************************\n//AMODXXXX EXEC PGM=ZTPP0210,REGION=512K\n//STEPLIB  DD DSN=SYSX.LOADLIB,DISP=SHR\n//TASKLIB  DD DSN=SYST.PROCLIB,DISP=SHR\n//*********************************************************************\n//*  COMPRESSES DATASET TO START AT BEGINNING                         *\n//*********************************************************************\n//AMODCOPY EXEC PGM=IEBCOPY,REGION=256K\n//SYSPRINT  DD  SYSOUT=*\n//MVSXA1    DD  DSN=PROD.PROCLIB,DISP=SHR\n//SYSRES    DD  DSN=SYST.PROCLIB,DISP=SHR\n//SYSUT3    DD  UNIT=SYSDA,SPACE=(CYL,(10,10))\n//SYSUT4    DD  UNIT=SYSDA,SPACE=(CYL,(10,10))\n//SYSIN     DD  *\n    C O=SYSRES,I=SYSRES\n    C O=SYSRES,I=((MVSXA1,R))\n/*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SASSRCHD": {"ttr": 5380, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x98&\\x8f\\x00\\x98&\\x8f\\x15D\\x01N\\x01N\\x00\\x00\\xd4\\xe4\\xd9\\xc6@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1998-09-25T00:00:00", "modifydate": "1998-09-25T15:44:00", "lines": 334, "newlines": 334, "modlines": 0, "user": "MURF"}, "text": "//TDBC   JOB   (6496,B015),'TECH - TDB ',CLASS=O,MSGCLASS=T,\n// MSGLEVEL=(2,0),NOTIFY=TDB\n//*********************************************************************\n//*                                                                   *\n//******************************************************************* *\n//*                                                                 * *\n//*            D I S C L A I M E R    S E C T I O N                 * *\n//*                                                                 * *\n//******************************************************************* *\n//*                                                                 * *\n//* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   * *\n//* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        * *\n//* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND * *\n//* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR * *\n//* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              * *\n//* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL * *\n//* SUPPLIED .                                                      * *\n//*                                                                 * *\n//* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE * *\n//* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS * *\n//* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE * *\n//* FUTURE .                                                        * *\n//*                                                                 * *\n//******************************************************************* *\n//*                                                                   *\n//*                                                                   *\n//*  THIS SAS CODE WRITTEN BY TOM BURNS AT TEXAS UTILITIES SERVICES   *\n//*  TO REPORT ON WHO WAS ACCESSING DELETING NONVSAM DATASETS. IT     *\n//*  NEEDS TYPE 14, 15, 17 AND 18 RECORDS TO PROVIDE ALL THE INFO,    *\n//*                                                                   *\n//*  INSTRUCTIONS:                                                    *\n//*                                                                   *\n//*  1.  CHANGE THE DSNAMES DD INPUT TO THE DATA AND INDEX NAMES IN   *\n//*      QUESTION.  THE CLUSTER NAME DOES NOT SHOW UP IN THESE RECORDS*\n//*                                                                   *\n//*  2.  CHANGE THE SMF INPUT DSN IN THE SMFTAPE DD TO THE SMF INPUT  *\n//*      DATASET FOR YOUR INSTALLATION.                               *\n//*                                                                   *\n//* OPTIONALLY, YOU CAN CHANGE THE DATE/TIME RANGE IN THE OPTIONS.    *\n//* WE NORMALLY JUST LEAVE IT THE WAY IT IS.                          *\n//*                                                                   *\n//*********************************************************************\n//DSLIST   EXEC SAS,REGION=1024K,\n// COPIES=1,SORT=99,OPTIONS='NOSTIMER,S=72'\n//WORK      DD  UNIT=SYSDA,SPACE=(CYL,(250,200))\n//FT11F001  DD  SYSOUT=*\n//SMFTAPE DD DSN=TUSS.SM.PNDSYSA.SMFRECS.DAILY.G1497V00,DISP=OLD\n//        DD DSN=TUSS.SM.PNDSYSB.SMFRECS.DAILY.G1473V00,DISP=OLD\n//DSNAMES   DD  *\nTUE0CDE.PRODPCL6.C1979.G0001V00\n//SYSIN     DD  *\nCOMMENT\n        THIS JOB SUMMARIZES USES OF DATASETS BY JOBS\nWRITTEN BY TOM BURNS AT TEXAS UTILITIES  ;\nOPTIONS SYSPARM='STARTDATE=01/03/00,STARTTIME=00:00:00,\nENDDATE=12/31/99,ENDTIME=23:59:59';\nDATA DSNAMES;\n   INFILE DSNAMES;\n   LABEL  DSN = DSNAME;\n   FORMAT DSN     $44.;\n   INPUT DSN : $44.;\n   OUTPUT DSNAMES;\n   RETURN;\nDATA TEMPACT\n          (KEEP = XX ACTDSN JNAM RECDATE RECTIME RDRDATE TYPE USERID\n                     DSORG RECFM LRECL BLKSIZE)\n TEMPREN  (KEEP = ACTDSN JNAM RECDATE RECTIME RDRDATE USERID NDSN)\n TEMPSCR  (KEEP = ACTDSN JNAM RECDATE RECTIME RDRDATE USERID VOL_ID);\n   LABEL  JNAM    = JOBNAME\n          TYPE    = TYPE\n          RECDATE = DATE\n          RECTIME = TIME\n          RDRDATE = READER DATE\n          USERID  = USERID\n          NDSN    = NEW DSNAME\n          DSORG   = DSORG\n          RECFM   = RECFM\n          LRECL   = LRECL\n          BLKSIZE = BLKSIZE;\n   FORMAT ACTDSN             $44.\n          XX                  $6.\n          JNAM                $8.\n          TYPE                $2.\n          RECDATE        MMDDYY8.\n          RECTIME          TIME8.\n          RDRDATE     DATETIME16.\n          USERID              $8.\n          VOL_ID              $6.\n          NDSN               $44.\n          DSORG               $3.\n          RECFM               $4.\n          LRECL                5.\n          BLKSIZE              5.;\n   INFILE SMFTAPE MISSOVER JFCB=JFCBMANX CLOSE=FREE;\n   IF _N_=1 THEN DO;\n      IF SUBSTR(JFCBMANX,100,1)='....1...'B\n         THEN SMFCOL1=5;\n      ELSE SMFCOL1=1;\n      FOUND=1; NPARM=1;\n      STRTDATE=0; STRTTIME=0; ENDDATE=0; ENDTIME=0;\n      DO WHILE(FOUND);\n         FOUND=0;\n         IF 'STARTDATE'=SCAN(SYSPARM(),NPARM,' ,=') THEN DO;\n            WORD=SCAN(SYSPARM(),NPARM+1,' ,=');\n            IF WORD='TODAY' THEN STRTDATE=TODAY();\n            ELSE STRTDATE=INPUT(WORD,MMDDYY8.);\n            FOUND=1;\n            END;\n         IF 'STARTTIME'=SCAN(SYSPARM(),NPARM,' ,=') THEN DO;\n            WORD=SCAN(SYSPARM(),NPARM+1,' ,=');\n            IF WORD='NOW' THEN STRTTIME=HMS(HOUR(DATETIME()),0,0);\n            ELSE STRTTIME=INPUT(WORD,TIME8.);\n            FOUND=1;\n            END;\n         IF 'ENDDATE'=SCAN(SYSPARM(),NPARM,' ,=') THEN DO;\n            WORD=SCAN(SYSPARM(),NPARM+1,' ,=');\n            IF WORD='TODAY' THEN ENDDATE=TODAY();\n            ELSE ENDDATE=INPUT(WORD,MMDDYY8.);\n            FOUND=1;\n            END;\n         IF 'ENDTIME'=SCAN(SYSPARM(),NPARM,' ,=') THEN DO;\n            WORD=SCAN(SYSPARM(),NPARM+1,' ,=');\n            IF WORD='NOW' THEN ENDTIME=HMS(1+HOUR(DATETIME()),0,0);\n            ELSE ENDTIME=INPUT(WORD,TIME8.);\n            FOUND=1;\n            END;\n         IF FOUND THEN NPARM=NPARM+2;\n         END;\n      IF ENDDATE=0 THEN ENDDATE=MDY(12,31,99);\n      IF ENDTIME=0 THEN ENDTIME=HMS(23,59,59);\n      RETAIN SMFCOL1 STRTDATE STRTTIME ENDDATE ENDTIME VOL_ID;\n      DROP SMFCOL1 STRTDATE STRTTIME ENDDATE ENDTIME FOUND NPARM;\n      END;\n   INPUT @SMFCOL1    SMFEOF   :      $12.\n         @SMFCOL1+ 1 ID             PIB1.@;\n   IF SMFEOF='SMFEOFMARK' THEN STOP; * END OF FILE ON INPUT;\n   TYPE='  ';\n   IF ID=14 THEN TYPE='I ';\n   IF ID=15 THEN TYPE='O ';\n   IF ID=17 THEN TYPE='S ';\n   IF ID=18 THEN TYPE='R ';\n   IF TYPE='  ' THEN RETURN;\n   INPUT @SMFCOL1+  2 SMFTIME       PIB4.\n              @SMFCOL1+  6 SMFDATE        PD4.\n              @SMFCOL1+ 14 JNAM            $8.\n              @SMFCOL1+ 22 RDRDATE  SMFSTAMP8.\n              @SMFCOL1+ 30 USERID          $8.\n              @SMFCOL1+ 90 VOL_ID          $6.@;\n   RECDATE=DATEJUL(SMFDATE);\n   SMFTIME=INT(SMFTIME/100);\n   HOURS=INT(SMFTIME/3600);\n   MINUTES=INT(MOD(SMFTIME,3600)/60);\n   RECTIME=HMS(HOURS,MINUTES,MOD(SMFTIME,60));\n   DROP ID SMFEOF SMFTIME SMFDATE HOURS MINUTES;\n   IF ID=14 OR ID=15 THEN DO;* CLOSE INPUT/OUTPUT DATASET;\n      IF RECDATE<STRTDATE THEN RETURN;\n      IF RECDATE>ENDDATE THEN RETURN;\n      IF RECDATE=STRTDATE AND RECTIME<STRTTIME THEN RETURN;\n      IF RECDATE=ENDDATE AND RECTIME>ENDTIME THEN RETURN;\n      INPUT @SMFCOL1+ 38 SMF14RIN  PIB2.\n            @SMFCOL1+ 64 ACTDSN   : $44.\n            @SMFCOL1+151 JFCBIND2  PIB1.@;\n      IF SMF14RIN='...1............'B THEN RETURN;* SKIP TEMPORARIES;\n      IF SMF14RIN='.......1........'B THEN RETURN;* SKIP VIO (TEMP);\n      IF JFCBIND2='.......1'B THEN RETURN;* SKIP TEMPORARIES;\n      IF ID=15 THEN DO;\n         INPUT @SMFCOL1+162 JFCDSORG      PIB2.\n               @SMFCOL1+164 JFCRECFM      PIB1.\n               @SMFCOL1+166 BLKSIZE       PIB2.\n               @SMFCOL1+168 LRECL         PIB2.\n               @SMFCOL1+256 RLSE          PIB4.@;\n         IF SMF14RIN='..1.............'B THEN\n            IF RLSE>0 THEN SUBSTR(TYPE,2,1)='*';\n         DSORG='***';\n         IF JFCDSORG='100...00........'B THEN DSORG='IS ';\n         IF JFCDSORG='100...01........'B THEN DSORG='ISU';\n         IF JFCDSORG='010...00........'B THEN DSORG='PS ';\n         IF JFCDSORG='010...01........'B THEN DSORG='PSU';\n         IF JFCDSORG='001...00........'B THEN DSORG='DA ';\n         IF JFCDSORG='001...01........'B THEN DSORG='DAU';\n         IF JFCDSORG='000...10........'B THEN DSORG='PO ';\n         IF JFCDSORG='000...11........'B THEN DSORG='POU';\n         IF JFCRECFM='11......'B THEN RECFMTYP='U';\n         ELSE IF JFCRECFM='10......'B THEN RECFMTYP='F';\n            ELSE IF JFCRECFM='01......'B THEN RECFMTYP='V';\n               ELSE RECFMTYP='*';\n         IF JFCRECFM='...1....'B THEN RECFMBLK='B';\n         ELSE RECFMBLK=' ';\n         IF JFCRECFM='....1...'B THEN RECFMSTD='S';\n         ELSE RECFMSTD=' ';\n         IF JFCRECFM='.....10.'B THEN RECFMCC='A';\n         ELSE IF JFCRECFM='.....01.'B THEN RECFMCC='M';\n            ELSE RECFMCC=' ';\n         RECFM=RECFMTYP||RECFMBLK||RECFMSTD||RECFMCC;\n         END;\n      DROP SMF14RIN JFCBIND2 JFCDSORG JFCRECFM\n           RECFMTYP RECFMBLK RECFMSTD RECFMCC;\n      OUTPUT TEMPACT;\n      END;\n   IF ID=17 THEN DO;* DATASET RENAME;\n      IF RECDATE<STRTDATE THEN RETURN;\n      IF RECDATE>ENDDATE THEN RETURN;\n      IF RECDATE=STRTDATE AND RECTIME<STRTTIME THEN RETURN;\n      IF RECDATE=ENDDATE AND RECTIME>ENDTIME THEN RETURN;\n      INPUT @SMFCOL1+40 ACTDSN : $44.@;\n      OUTPUT TEMPSCR;\n      END;\n   IF ID=18 THEN DO;* DATASET SCRATCH;\n      IF RECDATE<STRTDATE THEN RETURN;\n      IF RECDATE>ENDDATE THEN RETURN;\n      IF RECDATE=STRTDATE AND RECTIME<STRTTIME THEN RETURN;\n      IF RECDATE=ENDDATE AND RECTIME>ENDTIME THEN RETURN;\n      INPUT @SMFCOL1+40 ACTDSN : $44.\n            @SMFCOL1+84 NDSN   : $44.@;\n      OUTPUT TEMPREN;\n      END;\n   INPUT;\n   RETURN;\nPROC SORT DATA=DSNAMES OUT=DSNAMES; BY DSN;\nPROC SORT DATA=TEMPACT OUT=TEMPACT; BY ACTDSN;\nDATA ACTIVITY\n          (KEEP = DSN JNAM RECDATE RECTIME RDRDATE TYPE USERID\n                     DSORG RECFM LRECL BLKSIZE);\n   LABEL  DSN     = DSNAME\n          JNAM    = JOBNAME\n          RECDATE = DATE\n          RECTIME = TIME\n          RDRDATE = READER DATE\n          TYPE    = TYPE\n          USERID  = USERID\n          DSORG   = DSORG\n          RECFM   = RECFM\n          LRECL   = LRECL\n          BLKSIZE = BLKSIZE;\n   FORMAT DSN                $44.\n          JNAM                $8.\n          RECDATE        MMDDYY8.\n          RECTIME          TIME8.\n          RDRDATE     DATETIME16.\n          TYPE                $2.\n          USERID              $8.\n          DSORG               $3.\n          RECFM               $4.\n          LRECL                5.\n          BLKSIZE              5.;\n   IF _N_=1 THEN DO;\n      LINK RDACTA;\n      LINK RDDSNA;\n      END;\n   IF DSN<ACTDSN THEN DO;\n      LINK RDDSNA;\n      RETURN;\n      END;\n   IF DSN=ACTDSN THEN GOTO WRTUSES;\n   IF DSN>ACTDSN THEN DO;\n      LINK RDACTA;\n      RETURN;\n      END;\n WRTUSES: DROP ACTDSN; OUTPUT ACTIVITY; LINK RDACTA; RETURN;\n RDACTA: SET TEMPACT; RETURN;\n RDDSNA: SET DSNAMES; RETURN;\nPROC PRINT DATA=ACTIVITY UNIFORM LABEL;\n   ID DSN;\n   VAR JNAM USERID TYPE RECDATE RECTIME DSORG RECFM LRECL BLKSIZE;\n   TITLE 'DATASET USAGE: JOBNAME ORDER';\nPROC SORT DATA=TEMPREN OUT=TEMPREN; BY ACTDSN;\nDATA RENAMES(KEEP = DSN JNAM RECDATE RECTIME RDRDATE USERID NDSN);\n   LABEL  DSN     = DSNAME\n          JNAM    = JOBNAME\n          RECDATE = DATE\n          RECTIME = TIME\n          RDRDATE = READER DATE\n          NDSN    = NEW DSNAME;\n   FORMAT DSN                $44.\n          JNAM                $8.\n          RECDATE        MMDDYY8.\n          RECTIME          TIME8.\n          RDRDATE     DATETIME16.\n          USERID              $8.\n          NDSN               $44.;\n   IF _N_=1 THEN DO;\n      LINK RDREN;\n      LINK RDDSNR;\n      END;\n   IF DSN<ACTDSN THEN DO;\n      LINK RDDSNR;\n      RETURN;\n      END;\n   IF DSN=ACTDSN THEN GOTO WRTREN;\n   IF DSN>ACTDSN THEN DO;\n      LINK RDREN;\n      RETURN;\n      END;\n WRTREN: DROP ACTDSN; OUTPUT RENAMES; LINK RDREN; RETURN;\n RDREN: SET TEMPREN; RETURN;\n RDDSNR: SET DSNAMES; RETURN;\nPROC PRINT DATA=RENAMES UNIFORM LABEL;\n   ID DSN;\n   VAR JNAM USERID RECDATE RECTIME NDSN;\n   TITLE 'DATASET RENAMES';\nPROC SORT DATA=TEMPSCR OUT=TEMPSCR; BY ACTDSN;\nDATA SCRATCH(KEEP = DSN JNAM RECDATE RECTIME RDRDATE USERID VOL_ID);\n   LABEL  DSN     = DSNAME\n          JNAM    = JOBNAME\n          RECDATE = DATE\n          RECTIME = TIME\n          RDRDATE = READER DATE\n          USERID  = USER ID;\n   FORMAT DSN                $44.\n          JNAM                $8.\n          RECDATE        MMDDYY8.\n          RECTIME          TIME8.\n          RDRDATE     DATETIME16.\n          USERID              $8.;\n   IF _N_=1 THEN DO;\n      LINK RDSCR;\n      LINK RDDSNR;\n      END;\n   IF DSN<ACTDSN THEN DO;\n      LINK RDDSNR;\n      RETURN;\n      END;\n   IF DSN=ACTDSN THEN GOTO WRTSCR;\n   IF DSN>ACTDSN THEN DO;\n      LINK RDSCR;\n      RETURN;\n      END;\n WRTSCR: DROP ACTDSN; OUTPUT SCRATCH; LINK RDSCR; RETURN;\n RDSCR: SET TEMPSCR; RETURN;\n RDDSNR: SET DSNAMES; RETURN;\nPROC PRINT DATA=SCRATCH UNIFORM LABEL;\n   ID DSN;\n   VAR JNAM USERID RECDATE RECTIME VOL_ID;\n   TITLE 'DATASET SCRATCHES';\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SASSRCHV": {"ttr": 5386, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x98&\\x8f\\x00\\x98&\\x8f\\x15D\\x01*\\x01*\\x00\\x00\\xd4\\xe4\\xd9\\xc6@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1998-09-25T00:00:00", "modifydate": "1998-09-25T15:44:00", "lines": 298, "newlines": 298, "modlines": 0, "user": "MURF"}, "text": "//TDBJ   JOB   (6496,B015),'TECH - TDB ',CLASS=T,MSGCLASS=T,\n// MSGLEVEL=(2,0),NOTIFY=TDBF\n//*********************************************************************\n//*                                                                   *\n//******************************************************************* *\n//*                                                                 * *\n//*            D I S C L A I M E R    S E C T I O N                 * *\n//*                                                                 * *\n//******************************************************************* *\n//*                                                                 * *\n//* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   * *\n//* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        * *\n//* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND * *\n//* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR * *\n//* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              * *\n//* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL * *\n//* SUPPLIED .                                                      * *\n//*                                                                 * *\n//* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE * *\n//* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS * *\n//* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE * *\n//* FUTURE .                                                        * *\n//*                                                                 * *\n//******************************************************************* *\n//*                                                                   *\n//*                                                                   *\n//*  THIS SAS CODE WRITTEN BY TOM BURNS AT TEXAS UTILITIES SERVICES   *\n//*  TO REPORT ON WHO WAS ACCESSING DELETING VSAM DATASETS.  IT NEEDS *\n//*  SOME OF THE TYPE 60 RECORDS TO BE CUT BY SMF.  WE ARE ON ICF,    *\n//*  BUT IT USED TO WORK WHEN WE HAD SOME VSAM CATALOGS ALSO.         *\n//*                                                                   *\n//*  INSTRUCTIONS:                                                    *\n//*                                                                   *\n//*  1.  CHANGE THE DSNAMES DD INPUT TO THE DATA AND INDEX NAMES IN   *\n//*      QUESTION.  THE CLUSTER NAME DOES NOT SHOW UP IN THESE RECORDS*\n//*                                                                   *\n//*  2.  CHANGE THE SMF INPUT DSN IN THE SMFTAPE DD TO THE SMF INPUT  *\n//*      DATASET FOR YOUR INSTALLATION.                               *\n//*                                                                   *\n//*                                                                   *\n//*********************************************************************\n//DSLIST   EXEC SAS,REGION=1024K,\n// COPIES=1,SORT=99,OPTIONS='NOSTIMER,S=72'\n//WORK      DD  UNIT=SYSDA,SPACE=(CYL,(250,200))\n//FT11F001  DD  SYSOUT=*\n//SMFTAPE  DD DSN=TUSS.SM.PNDSYSA.SMFRECS.DAILY(0),\n//            DISP=(OLD,KEEP)\n//         DD DSN=TUSS.SM.PNDSYSB.SMFRECS.DAILY(0),\n//            DISP=(OLD,KEEP),UNIT=AFF=SMFTAPE\n//DSNAMES   DD  *\nRECISV.DATA.RECEIVE.TRANS\nOLCISV.DATA.RECEIVE.TRANS\nRECISV.INDEX.RECEIVE.TRANS\nOLCISV.INDEX.RECEIVE.TRANS\n//SYSIN     DD  *\nCOMMENT\n        THIS JOB SUMMARIZES USES OF VSAM DATASETS BY JOBS\nWRITTEN BY TOM BURNS AT TEXAS UTILITIES  ;\nOPTIONS NOMACROGEN NOSYMBOLGEN\nSYSPARM='STARTDATE=02/01/88,STARTTIME=00:00:00,\nENDDATE=12/31/99,ENDTIME=23:59:59';\n%MACRO CONVTIME(TIMEIN);\n   %* <TIMEIN> MUST BE IN .01 SECOND UNITS;\n   %LOCAL HOURS MINUTES SECONDS;\n   %LET HOURS=INT(&TIMEIN/360000);\n   %LET MINUTES=INT(MOD(&TIMEIN,360000)/6000);\n   %LET SECONDS=INT(MOD(&TIMEIN,6000)/100);\n   %STR( HMS(&HOURS,&MINUTES,&SECONDS)+MOD(&TIMEIN,100)/100 )\n   %MEND CONVTIME;\n%MACRO DSNCULL(INPUT,OUTPUT);\n   %LOCAL RDINPUT RDDSN WRTUSES;\n   %LET RDINPUT=RDINP&SYSINDEX;\n   %LET RDDSN=RDDSN&SYSINDEX;\n   %LET WRTUSES=WRT&SYSINDEX;\n   IF _N_=1 THEN DO;\n      LINK &RDINPUT;\n      LINK &RDDSN;\n      END;\n   IF REQDSN<DSN THEN DO;\n      LINK &RDDSN;\n      RETURN;\n      END;\n   IF REQDSN=DSN THEN GOTO &WRTUSES;\n   IF REQDSN>DSN THEN DO;\n      LINK &RDINPUT;\n      RETURN;\n      END;\n &WRTUSES: OUTPUT &OUTPUT; LINK &RDINPUT; RETURN;\n &RDINPUT: SET &INPUT; RETURN;\n &RDDSN: SET DSNAMES; RETURN;\n   %MEND DSNCULL;\nDATA DSNAMES;\n   INFILE DSNAMES CLOSE=FREE;\n   LABEL  REQDSN = DSNAME;\n   FORMAT REQDSN     $44.;\n   INPUT REQDSN : $44.;\n   OUTPUT DSNAMES;\n   RETURN;\nDATA\n VSAMACT (KEEP = RDRDATE JNAM RECDATE RECTIME DSN USERID TYPE\n                 ERRE TRKREQ SMF64DIL SMF64DEX SMF64DLR SMF64DDE\n                 SMF64DIN  SMF64DUP SMF64DRE SMF64DFS SMF64DCS\n                 SMF64DAS  SMF64DEP SMF64DBS SMF64DCI SMF64DLS\n                 SMF64DKL  SMF64DDN)\n VSAMREN (KEEP = RDRDATE JNAM RECDATE RECTIME DSN USERID NDSN)\n VSAMSCR (KEEP = RDRDATE JNAM RECDATE RECTIME DSN TYPE USERID);\n   LABEL  JNAM    = JOBNAME\n          TYPE    = TYPE\n          RECDATE = DATE\n          RECTIME = TIME\n          RDRDATE = READER DATE\n          USERID  = USERID\n          NDSN    = NEW DSNAME;\n   FORMAT JNAM                $8.\n          TYPE                $8.\n          RECDATE        MMDDYY8.\n          RECTIME          TIME8.\n          RDRDATE     DATETIME16.\n          USERID              $8.\n          NDSN               $44.;\n   INFILE SMFTAPE MISSOVER JFCB=JFCBMANX CLOSE=FREE;\n   IF _N_=1 THEN DO;\n      IF SUBSTR(JFCBMANX,100,1)='....1...'B\n         THEN SMFCOL1=5;\n      ELSE SMFCOL1=1;\nOPTIONS NOSOURCE;* SKIP LISTING OF SYSPARM SCAN;\n      FOUND=1; NPARM=1;\n      STRTDATE=0; STRTTIME=0; ENDDATE=0; ENDTIME=0;\n      DO WHILE(FOUND);\n         FOUND=0;\n         IF 'STARTDATE'=SCAN(SYSPARM(),NPARM,' ,=') THEN DO;\n            WORD=SCAN(SYSPARM(),NPARM+1,' ,=');\n            IF WORD='TODAY' THEN STRTDATE=TODAY();\n            ELSE STRTDATE=INPUT(WORD,MMDDYY8.);\n            FOUND=1;\n            END;\n         IF 'STARTTIME'=SCAN(SYSPARM(),NPARM,' ,=') THEN DO;\n            WORD=SCAN(SYSPARM(),NPARM+1,' ,=');\n            IF WORD='NOW' THEN STRTTIME=HMS(HOUR(DATETIME()),0,0);\n            ELSE STRTTIME=INPUT(WORD,TIME8.);\n            FOUND=1;\n            END;\n         IF 'ENDDATE'=SCAN(SYSPARM(),NPARM,' ,=') THEN DO;\n            WORD=SCAN(SYSPARM(),NPARM+1,' ,=');\n            IF WORD='TODAY' THEN ENDDATE=TODAY();\n            ELSE ENDDATE=INPUT(WORD,MMDDYY8.);\n            FOUND=1;\n            END;\n         IF 'ENDTIME'=SCAN(SYSPARM(),NPARM,' ,=') THEN DO;\n            WORD=SCAN(SYSPARM(),NPARM+1,' ,=');\n            IF WORD='NOW' THEN ENDTIME=HMS(1+HOUR(DATETIME()),0,0);\n            ELSE ENDTIME=INPUT(WORD,TIME8.);\n            FOUND=1;\n            END;\n         NPARM=NPARM+2;\n         END;\n      IF ENDDATE=0 THEN ENDDATE=MDY(12,31,99);\n      IF ENDTIME=0 THEN ENDTIME=HMS(23,59,59);\nOPTIONS SOURCE;\n      RETAIN SMFCOL1 STRTDATE STRTTIME ENDDATE ENDTIME\n      TRKREQ ERRE SMF64ESL SMF64DIL SMF64DEX SMF64DLR SMF64DDE SMF64DIN\n      SMF64DUP SMF64DRE SMF64DFS SMF64DCS SMF64DAS SMF64DEP SMF64DBS\n      SMF64DCI SMF64DLS SMF64DKL SMF64DDN;\n      END;\n   INPUT @SMFCOL1    SMFEOF   :      $12.\n         @SMFCOL1+ 1 ID             PIB1.@;\n   IF SMFEOF='SMFEOFMARK' THEN STOP; * END OF FILE ON INPUT;\n   IF ID<60 OR 69<ID THEN RETURN;\n   ELSE INPUT @SMFCOL1+  2 SMFTIME       PIB4.\n              @SMFCOL1+  6 SMFDATE        PD4.@;\n   IF ID=60|ID=61|ID=65|ID=66 THEN\n      INPUT @SMFCOL1+ 46 JNAM            $8.\n            @SMFCOL1+ 54 RDRDATE  SMFSTAMP8.\n            @SMFCOL1+ 62 USERID          $8.@;\n   IF (62<=ID & ID<=64) | (67<=ID & ID<=69) THEN\n      INPUT @SMFCOL1+ 14 JNAM            $8.\n            @SMFCOL1+ 22 RDRDATE  SMFSTAMP8.\n            @SMFCOL1+ 30 USERID          $8.@;\n   RECDATE=DATEJUL(SMFDATE);\n   RECTIME=%CONVTIME(SMFTIME);\n   IF ID=62 THEN DO;* COMPONENT/CLUSTER OPEN;\n      IF RECDATE<STRTDATE THEN RETURN;\n      IF RECDATE>ENDDATE THEN RETURN;\n      IF RECDATE=STRTDATE AND RECTIME<STRTTIME THEN RETURN;\n      IF RECDATE=ENDDATE AND RECTIME>ENDTIME THEN RETURN;\n      INPUT @SMFCOL1+ 38 SMF62IND  PIB1.\n            @SMFCOL1+ 92 DSN      : $44.@;\n      TYPE = 'OPEN' ;\n      OUTPUT VSAMACT;\n      END;\n   IF ID=64 THEN DO;* CLOSE INPUT/OUTPUT DATASET;\n      IF RECDATE<STRTDATE THEN RETURN;\n      IF RECDATE>ENDDATE THEN RETURN;\n      IF RECDATE=STRTDATE AND RECTIME<STRTTIME THEN RETURN;\n      IF RECDATE=ENDDATE AND RECTIME>ENDTIME THEN RETURN;\n      INPUT @SMFCOL1+ 38 SMF64RIN  PIB1.\n            @SMFCOL1+ 39 SMF64DTY  PIB1.\n            @SMFCOL1+ 84 DSN      : $44.\n            @SMFCOL1+128 TRKREQ    PIB2.\n            @SMFCOL1+134 SMF64ESL  PIB2.@;\n      TYPE='CLUSTER ';\n      IF SMF64RIN='..1.....'B THEN ERRE='NO SPACE';\n      IF SMF64RIN='.....1..'B THEN ERRE='ABENDPRO';\n      IF SMF64DTY='1.......'B THEN TYPE='DATA    ';\n      IF SMF64DTY='.1......'B THEN TYPE='INDEX   ';\n      INPUT @SMFCOL1+48+136+SMF64ESL SMF64DIL PIB4.\n                                 SMF64DEX PIB4.\n                                 SMF64DLR PIB4.\n                                 SMF64DDE PIB4.\n                                 SMF64DIN PIB4.\n                                 SMF64DUP PIB4.\n                                 SMF64DRE PIB4.\n                                 SMF64DFS PIB4.\n                                 SMF64DCS PIB4.\n                                 SMF64DAS PIB4.\n                                 SMF64DEP PIB4.\n                                 SMF64DBS PIB4.\n                                 SMF64DCI PIB4.\n                                 SMF64DLS PIB4.\n                                 SMF64DKL PIB4.\n                                 SMF64DDN $8.@;\n*PUT DSN= TYPE=;\n      OFFSET=SMFCOL1+SMF64ESL+136;\n      INPUT @OFFSET+60 SMF64DDE PIB4.\n            @OFFSET+64 SMF64DIN PIB4.\n            @OFFSET+68 SMF64DUP PIB4.@;\n      INPUT @OFFSET+106 SMF64DDN $8.@;\n      TYPE = 'CLOSE' ;\n      OUTPUT VSAMACT;\n      END;\n   IF ID=67 THEN DO;* VSAM DATASET DELETE;\n      IF RECDATE<STRTDATE THEN RETURN;\n      IF RECDATE>ENDDATE THEN RETURN;\n      IF RECDATE=STRTDATE AND RECTIME<STRTTIME THEN RETURN;\n      IF RECDATE=ENDDATE AND RECTIME>ENDTIME THEN RETURN;\n      INPUT @SMFCOL1+39 SMF67IOD PIB1.\n            @SMFCOL1+84 DSN     : $44.@;\n      IF SMF67IOD='0000....'B THEN RETURN;\n      IF SMF67IOD='1.......'B THEN TYPE='CLUSTER ';\n      IF SMF67IOD='.1......'B THEN TYPE='DATA    ';\n      IF SMF67IOD='..1.....'B THEN TYPE='INDEX   ';\n      IF SMF67IOD='...1....'B THEN TYPE='CATALOG ';\n      IF SMF67IOD='....1...'B THEN TYPE='NON-VSAM';\n      IF SMF67IOD='.....1..'B THEN TYPE='GDG     ';\n      IF SMF67IOD='......1.'B THEN TYPE='ALIAS   ';\n      IF SMF67IOD='.......1'B THEN TYPE='*RESERV*';\n      OUTPUT VSAMSCR;\n      END;\n   IF ID=68 THEN DO;* VSAM DATASET RENAME;\n      IF RECDATE<STRTDATE THEN RETURN;\n      IF RECDATE>ENDDATE THEN RETURN;\n      IF RECDATE=STRTDATE AND RECTIME<STRTTIME THEN RETURN;\n      IF RECDATE=ENDDATE AND RECTIME>ENDTIME THEN RETURN;\n      INPUT @SMFCOL1+ 82 DSN    : $44.\n            @SMFCOL1+126 NDSN   : $44.@;\n      OUTPUT VSAMREN;\n      END;\n   INPUT;\n   RETURN;\nPROC SORT DATA=DSNAMES OUT=DSNAMES; BY REQDSN;\nPROC SORT DATA=VSAMACT OUT=VSAMACT; BY DSN;\nDATA ACTIVITY(KEEP= DSN JNAM RECDATE RECTIME\n                 SMF64DEX SMF64DLR SMF64DDE\n                 SMF64DIN  SMF64DUP SMF64DRE);\n   * CULL DATA TO ONLY REQUESTED DATASETS;\n   FORMAT DSN    $20.\n          REQDSN $20.;\n   %DSNCULL(VSAMACT,ACTIVITY);\nPROC SORT DATA=ACTIVITY OUT=ACTIVITY;\n   BY RECDATE RECTIME;\nPROC PRINT DATA=ACTIVITY UNIFORM LABEL;\n   ID DSN;\n*  VAR JNAM USERID RECDATE RECTIME TYPE;\n   TITLE 'VSAM DATASET USAGE';\nPROC SORT DATA=VSAMREN OUT=VSAMREN; BY DSN;\nDATA RENAMES(KEEP= DSN JNAM RECDATE RECTIME RDRDATE USERID NDSN);\n   * CULL DATA TO ONLY REQUESTED DATASETS;\n   FORMAT DSN    $44.\n          REQDSN $44.;\n   %DSNCULL(VSAMREN,RENAMES);\nPROC SORT DATA=RENAMES OUT=RENAMES;\n   BY RECDATE RECTIME;\nPROC PRINT DATA=RENAMES UNIFORM LABEL;\n   ID DSN;\n   VAR JNAM USERID RECDATE RECTIME NDSN;\n   TITLE 'VSAM DATASET RENAMES';\nPROC SORT DATA=VSAMSCR OUT=VSAMSCR; BY DSN;\nDATA SCRATCH(KEEP= DSN JNAM RECDATE RECTIME RDRDATE USERID TYPE);\n   * CULL DATA TO ONLY REQUESTED DATASETS;\n   FORMAT DSN    $44.\n          REQDSN $44.;\n   %DSNCULL(VSAMSCR,SCRATCH);\nPROC SORT DATA=SCRATCH OUT=SCRATCH;\n   BY RECDATE RECTIME;\nPROC PRINT DATA=SCRATCH UNIFORM LABEL;\n   ID DSN;\n   VAR JNAM USERID TYPE RECDATE RECTIME;\n   TITLE 'VSAM DATASET SCRATCHES';\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ZTPPWTO": {"ttr": 5637, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x95 \\x9f\\x00\\x98&\\x8f\\x15D\\x00f\\x00R\\x00\\x14\\xd4\\xe4\\xd9\\xc6@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1995-07-28T00:00:00", "modifydate": "1998-09-25T15:44:00", "lines": 102, "newlines": 82, "modlines": 20, "user": "MURF"}, "text": "//MURFW    JOB (6496,B014),MURF,CLASS=T,MSGCLASS=3,NOTIFY=MURF\n//COM     EXEC PGM=IEV90,REGION=512K,\n//    PARM='LOAD,XREF(SHORT),LINECNT=55,NODECK'\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.MACLIB\n//         DD  DISP=SHR,DSN=SYS1.AMODGEN\n//SYSLIN   DD  UNIT=VIO,DSN=&LOADSET,DISP=(MOD,PASS),\n//             SPACE=(CYL,(2,2)),DCB=BLKSIZE=1680\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(10,2))\n//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,(12,2))\n//SYSUT3   DD  UNIT=VIO,SPACE=(CYL,(20,2))\n//SYSPUNCH DD  DUMMY =*,DCB=FUNC=I\n//SYSPRINT DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//SYSIN    DD  *\n*******************************************************************\n*                                                                 *\n*            D I S C L A I M E R    S E C T I O N                 *\n*                                                                 *\n*******************************************************************\n*                                                                 *\n* THIS MATERIAL HAS BEEN USED SUCCESSFULLY & TO THE BEST OF OUR   *\n* KNOWLEDGE  THEY  ARE  OPERATIONAL, HOWEVER  NO  WARRANTY        *\n* IS MADE TO THE ACCURACY OF THE PROGRAMS OR RELATED MATERIAL AND *\n* NO RESPONSIBILITY IS ASSUMED  FOR ANY MODIFICATION  DIRECTLY OR *\n* INDIRECTLY  CAUSED BY  THEIR USE.  IT IS THE USERS              *\n* RESPONSIBILITY  TO  EVALUATE THE  USEFULLNESS  OF THE  MATERIAL *\n* SUPPLIED .                                                      *\n*                                                                 *\n* WE DO NOT GUARANTEE TO  KEEP ANY  MATERIAL PROVIDED  UP TO DATE *\n* NOR DO WE GUARANTEE TO  PROVIDE ANY  CORRECTIONS OR  EXTENSIONS *\n* DESCRIBED BY THE USER OR  CORRECTIONS OR EXTENSIONS MADE IN THE *\n* FUTURE .                                                        *\n*                                                                 *\n*******************************************************************\n***********************************************************************\n*                                                                     *\n*        PROGRAM: ZTPPWTO                                 07/11/95    *\n*                                                                     *\n*        PURPOSE: TO READ INPUT DD SYSIN AND WTO THEM TO THE CONSOLE. *\n*                                                                     *\n***********************************************************************\n         MACRO\n         BEGIN &PROGRAM=\nR0       EQU   0\nR1       EQU   1                  R\nR2       EQU   2                    E\nR3       EQU   3                      G\nR4       EQU   4                        I\nR5       EQU   5                          S\nR6       EQU   6                            T\nR7       EQU   7                              E\nR8       EQU   8                                R\nR9       EQU   9                        E\nR10      EQU   10                         Q\nR11      EQU   11                           U\nR12      EQU   12                             A\nR13      EQU   13                               T\nR14      EQU   14                                 E\nR15      EQU   15                                   S\n         USING *,15\n         B     28(R15)\n         DC    CL8'&PROGRAM'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         STM   14,12,12(13)\n         DROP  15\n         EJECT\n         MEND\nZTPPWTO CSECT\n         BEGIN PROGRAM=ZTPPWTO         REG EQUATES AND STM 14,12,12(14)\n         LR    R12,R15                 ENTRY ADDRESS\n         USING ZTPPWTO,R12             ADDRESSABILITY\n         LA    R3,SAVEAREA             ADD OF PROGRAM SAVE AREA\n         ST    R13,SAVEAREA+4          HL LINKAGE\n         ST    R3,8(,R13)              LL LINKAGE\n         LR    R13,R3                  SAVEAREA ADD IN R13\n         OPEN  (ASMDCB,INPUT)     OPEN FOR INPUT\nPROGMOVE GET   ASMDCB,WTOLINE     READ 80  BYTE RECORD\n         MVC   WTOL+4(80),WTOLINE\n         WTO   MF=(E,WTOL)\n         B     PROGMOVE\nRETURN0  CLOSE (ASMDCB,DISP)\n         SR    R15,R15\nRETURN   L     13,4(,R13)              RELOAD R13\n         RETURN (14,12),,RC=(15)       RETURN\nWTOL     WTO   '1234567890123456789012345678901234567890123456789012345X\n               6789012345678901234567890',ROUTCDE=11,MF=L\nASMDCB   DCB   DDNAME=INPUT,MACRF=GM,                                  X\n               DSORG=PS,EODAD=RETURN0\nSAVEAREA DS    18F\nECB      DS    F\nWTOLINE  DS    CL80\n         END\n//LKED         EXEC PGM=IEWL,REGION=1024K,COND=(4,LT),\n//             PARM='XREF,LET,LIST,REUS,AC=1'\n//SYSPRINT     DD   SYSOUT=*\n//SYSUT1       DD   DSN=&SYSUT1,UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSLMOD      DD   DISP=SHR,DSN=SYS1.PROGPROD(ZTPPWTO)\n//SYSLIN       DD   UNIT=SYSDA,DSN=&LOADSET,DISP=(OLD,DELETE)\n//             DD   DDNAME=SYSIN\n//SYSIN        DD   *\n NAME ZTPPWTO(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT025/FILE025.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT025", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}