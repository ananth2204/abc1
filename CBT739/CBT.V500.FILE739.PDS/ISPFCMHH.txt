)PANEL KEYLIST(ISRHLP2,ISR)
/*-------------------------- ISPFCMHH --------------------------------*/
/*  HELP Panel for display of ISPF commands (ISPFCMDS)                */
/*  - displayed by exec ISPFCMDS ("ISPF Commands" tool)   Version 7.1 */
/*--------------------------------------------------------------------*/
)ATTR DEFAULT($@_)
# TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
ß TYPE(TEXT) INTENS(HIGH) COLOR(TURQ)
{ TYPE(TEXT) INTENS(HIGH) COLOR(RED)
$ TYPE(TEXT) INTENS(HIGH) COLOR(WHITE)
@ TYPE(TEXT) INTENS(LOW)  COLOR(BLUE)
~ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)
§ AREA(SCRL) EXTEND(ON)
)BODY EXPAND(ÖÖ)
@HELP-Ö-Ö-#ISPF Commands@-Ö-Ö-HELP
@Command ===>_ZCMD
~                               $HINTS AND TIPS
§INFO                                                                          §
)AREA INFO
~
   #"ISPF Commands"~tool makes it easy for you to create and maintain your own
  ~ table of ISPF commands.  It also can be used to display and/or modify any
  ~ other ISPF command tables.  This HELP has many topics about ISPF commands
  ~ and how best to use this tool.
~
~
# HELP for "ISPF Commands" ~
# ----------------------- ~
  ~ There are many HELP panels with this tool.  Any time you are not certain
  ~ about the use of any "ISPF Commands" panel - try theßHELP~command (it is
    usually theßF1~key) to see appropriate help information.
~
~
# ISPF Command Tables ~
# ------------------- ~
  ~ Most of the primary commands that you use in ISPF are defined in command
    tables, with each row specifying a command and an action.  There can be
    up to four active command tables concatenated when you are using an ISPF
    application.  The order is Application table first, the User table next,
    then the Site and System tables, as is shown at the top right of all the
    "ISPF Commands" displays.

    The System table is calledßISPCMDS~and it is always required by ISPF,
    but the other tables are not always present.  User and Site tables can
    only be used when their names are specified in the ISPF configuration
    module, which is in the LINKLIST, or in a STEPLIB or ISPLLIB library.

    See COMMAND TABLE CONFIGURATION help for more details.
  ~
  ~
# Create your own User command table ~
# ---------------------------------- ~
    The best place for your personal ISPF commands is in your own User table
    which you can create via theßNEWUSER~command in#"ISPF Commands"~tool.
    See CREATING A NEW USER COMMAND TABLE help for more details.

    Your User table will always be active, concatenated ahead of System and
    Site tables.


# Create your own commands~
# ------------------------~
  ~ Use this tool to add commands for many of the common actions you use
    in ISPF.  This should be in your User table.

    When you insert a new command you will see a panel for you to supply the
    command name, truncation, action and description like the following:

   @+---------------------------------------------------------------------+
   @|               Insert command after CMDS in table USERCMDS           |
   @| Command ==>                                                         |
   @|                                                                     |
   @| ~ Make any changes then use the cursor to selectßUpdate~orßCancel  @|
   @| ~ Alternatively pressßF3~to UPDATE, or pressßF12~to CANCEL.        @|
   @|                                                                     |
   @| ~ Command . .ßmy                                                   @|
   @| ~ Trunc . . .ß0                                                    @|
   @| ~ Action  . .ßselect cmd(%newcmd &&zparm)                          @|
   @|                                                                     |
   @|                                                                     |
   @|                                                                     |
   @| ~ Descriptionßinvoke my newcmd exec, with an optional parameter    @|
   @|              ßHELP(myhlpnl)                                        @|
   @|                                                                     |
   @|                       ßUpdate                   Cancel             @|
   @|                                                                     |
   @+---------------------------------------------------------------------+

 ~  - Command names must start with A - Z.  Make them short, then they are
        easier to type, and thus more convenient for you to use.
    - Check that your command names are not the same as any selection options
        in any other ISPF application panels that you regularly use.
    - Watch out that your new commands do not accidentally override any
        existing commands (then a$'*'~or$'+'~will be shown before the name
        when it is displayed in a list).
    - Include a Description.  It makes it easier to recognise the function
        of your commands, and you can use theß'F xxx'~command to find them.
    - If you have an ISPF HELP panel for a command putß'HELP(panel-name)'~
        in the Description, then line command#H~will display the HELP panel.
        A good convention is to put the description text on the first line
        and the 'HELP(pppp)' on the second line, as shown above.
    - Provide a valid Action.  ISPF ignores commands with null, blank or
        uninitialised-variables as Actions.
    - When you create new commands - remember to save the command table to
        disk via theß'SAVE'~command.  Otherwise they are lost when you leave
        ISPF.


# Create a command to invoke ISPFCMDS  ~
# -----------------------------------  ~
  ~ "ISPF Commands" is designed to be used from any ISPF application, so
    it is most convenient if you have a command to invoke it, stored in
    either the Site or User command table.  Here is the suggested syntax:
      @Command . . :ßCMDS
      @Trunc . . . :ß0
      @Action  . . :ßSELECT CMD(%ISPFCMDS &&ZPARM) SCRNAME(CMDS)
      @Description :ßISPF Commands tool

  ~ If ISPCMDS is compiled the invocation should be slightly different:
      @Action  . . :ßSELECT CMD(ISPFCMDS &&ZPARM) SCRNAME(CMDS) LANG(CREX)

  ~ Note that the action does not need 'SUSPEND' because ISPFCMDS removes
    any Pop-up window by itself when it starts.


# Starting ISPFCMDS  ~
# -----------------  ~
  ~ You can start "ISPF Commands" tool from the command line of any ISPF
    application.
    Just enter: ßCMDS           @when you have the command recommended above
          ~ or: ßTSO ISPFCMDS   @if you have no special command

  ~ You can use a parameter to list only the command(s) which have names
    beginning with a particular string.
    For example:ßCMDS IS        @to list of all commands that start with 'IS'
          ~ or: ßTSO ISPFCMDS IS@

  ~ You can also start "ISPF Commands" to run in a particular ISPF Appl-Id.
    It checks all command overrides, but it lists only your selected table.
    For example:ßCMDS APPL(LL)  @to open the LLCMDS table (Appl-Id = 'LL')
          ~ or: ßTSO ISPFCMDS APPL(LL)@

  ~ - If that application is already running in your TSO/ISPF session "ISPF
      Commands" will display the command table that is already open (if one
      exists).  This enables you to run an ISPF application in one logical
      screen, and simultaneously run "ISPF Commands" in another logical screen
      to display/update the commands in that application.
      Thus you could update the commands from that table, but if you used the
     ßSAVEAPPL~command to save them to disk you would be prompted to specify
      a library name.

  ~ - This could also be used by an ISPF application developer to open their
      Application command table when that application is not running.  You
      would be prompted to confirm or specify the command table library, and
      if the table doesn't exist - it can create a table with one dummy entry.

  ~ You can even start "ISPF Commands" to open a particular ISPF Appl-Id, but
    only list commands (from the selected table) which begin with a particular
    string, like the following:
           ßCMDS APPL(TOOL) D   @only commands from TOOLCMDS starting with 'D'
      ~ or:ßTSO ISPFCMDS APPL(TOOL) D@


# Finding a particular command ~
# ---------------------------- ~
    Sometimes you may want to find a command whose name you have forgotten.
  ~ The command definitions have descriptions and actions which can be
    searched by theß'F xxx'~command.  When you use this command the list is
    redisplayed showing only the commands that have the character string
    'xxx' in their Action or Description fields.
    Useß'F  '~to reset the FIND argument, to show all commands again.

    SORT the list to make it easier to find a command.  Useß'SORT C'~to sort
    all active commands by alphabetically by COMMAND NAME, or useß'SORT T'~
    to sort the commands alphabetically within each table.

    If you know the name of the command you want to find, useß'L xxx'~; it
    locates the command named 'xxx' and puts the cursor next to it, ready
    for you to enter a line command.
    If it cannot find the command, it scrolls the list to where the command
    would be in alphabetical order.  This can be useful when it is already
    sorted in COMMAND NAME order.  For example, if you useß'L R'~it will
    scroll the list to the top of all the command names which begin with 'R'.

    If you want to list only the command names beginning with a particular
    string you can useß'S xxx'~. For example, 'S REF' would show only
    commands that start with 'REF'.
    Useß'S  '~to reset the SELECT argument, to show all commands again.


# Excluding particular commands ~
# ----------------------------- ~
    You can exclude commands from a list.  The simplest method is to enter
    the line commandß'X'~beside each command to be excluded from the list.

    To exclude all commands which have a particular string in their action
  ~ or description use theß'X xxx'~orß'F ¬ xxx'~primary command.
    Useß'F  '~to reset the FIND argument, to show all commands again.



# HELP for Commands ~
# ----------------- ~
    HELP information is automatically available for many commands.
    Enterß'H'~beside any listed command and the appropriate HELP panel will
    be displayed (if one is defined).

    - any command can have a HELP panel defined in its Description field, as
         shown in the "Create your own User Commands" section above.
    - for any command in the ISPCMDS table - it will show the standard IBM
         HELP panel for that command, (if one is available).
    - all commands from "ISPF TOOLS" have HELP panels defined


# Empty tables ~
# ------------ ~
    If an empty table is active there will be a command list line like the
    following:
     @ Command   Table  Description / Action
      {--------  ----- -----------------------------------
        #--------ßMY  ~<<< no commands in this table >>>

    This cannot be invoked, but it is possible to update it to a normal valid
    ISPF command via theßE~orßU~line command.  The new command will be active
    immediately, and the updated table can then be saved to disk via one of
    theß3~,ßSAVE~,ßSAVEA~orßSAVES~primary commands.


# Overriding a Command~
# --------------------~
    When you enter a command name, ISPF searches the command tables in the
    row order until it finds the FIRST matching command definition.  Thus
    it is easy for a user to define their own command, ahead of a standard
    command definition, to override the one from the Sytem or Site table.

    Use line commandß'R'~in "ISPF Commands" tool to REPEAT the existing
    command.  When you see the Update window - change the Action to whatever
    you want (and update the Description to show that it is YOUR command).
    This new command will be inserted one row BEFORE the old command, and it
    will be active until the command table is closed.


# Temporarily disabling a command ~
# ------------------------------- ~
    When you enter a command string, ISPF first looks for a matching ISPF
    command table definition.  If it doesn't find one, the string is passed
    to the application.  If the application is showing a selection panel it
    will look for a matching option, otherwise the string is passed to the
    active application program.

    Hence it is possible that an ISPF command table definition could prevent
    you from selecting a panel option, or passing a command string to an
    application.  In such a case you can use the "ISPF Commands" tool to
    temporarily disable that command.

    Here are three different methods to disable a command:
    - Change the command name.
    - Insertß&&Z~into the Action, before whatever else is there.
    - Repeat the command (via theß'R'~line command) and set the Action
       toßPASSTHRU~(this new command will be ahead of the old one).

    Remember to put it back to normal again when you are finished.


# What to do if your desired command is overridden ~
# ------------------------------------------------ ~
    Sometimes you want to use a command which is overridden by another
    command.  In such a case use the "ISPF Commands" tool.

    Here are three different methods:
    - Use line commandß'S'~to invoke it; this works with most commands.
    - Change the name (or truncation) of the overriding command, then
       exit from "ISPF Commands" to use your command.
    - Copy or Move your desired command before the overriding command
       (via theß'C'~orß'M'~line command), then exit from "ISPF Commands"
       to use your command.

    Remember to put it back to normal again when you are finished.


# Execute commands via the 'S' line command ~
# ----------------------------------------- ~
  ~ - Use this to test new or updated commands before saving the command
        table to disk.
    - Overridden commands can be invoked this way.
    - It cannot invoke commands with actions that are (a) null
        (b) a symbolic variable, or (c) ALIAS with no matching action.
    - All updates and other line commands are processed before invoking
        the commands withß'S'~.
    - Multiple selections are invoked in the order they are shown in the
        list; the command list is displayed between the invocations with
        the message:ß*** Press ENTER for pending command ***~.


# Saving a table to disk ~
# ---------------------- ~
    "ISPF Commands" tool can save Application, User or Site tables to disk
    via theßSAVEAPPL SAVE~orßSAVESITE~commands.  If you have multiple active
    User or Site tables you will be prompted to select which one you wish to
    save.  But it will not save the System table, because that table should
    not be (permanently) modified by users.

    When a table is being saved to disk you see a confirmation panel, which
    shows the target library for the SAVE, and advises if it will REPLACE an
    existing member.  The default target library is the one the table came
    from.  The table member is updated 'in place' where possible, so you
    usually cannot restore the old table member with any special PDS tools.

    You can save the table to a different library by changing the target
    library name and/or volume-serial fields on the panel, and if you are
    saving an Application table you can change the member name too.  As long
    as you have UPDATE access to the library - the SAVE should be successful.

    "ISPF Commands" will save an empty table the same as one with commands.
    If you want to delete the disk copy - you must delete the library member
    by other normal methods.


# Checking ALIAS Actions~
# ---------------------- ~
    If you want to check the effective action of a command which has the
   ßALIAS~action - use the line commandß'V'~and it will display the complete
    command definition plus a message box which shows the effective action.
      eg.  for command BOTTOM
          ß.------------------------------------------------------.
          ß| ** The effective action of this command is to invoke |
          ß|    Command: DOWN MAX                                 |
          ß|    Table  : ISPCMDS                                  |
          ß|    Action : SETVERB                                  |
          ß'------------------------------------------------------'

  ~ In addition,ß'V'~command searches for any commands which are ALIAS of
    your selected command and shows them in a message box.
      eg.  for command DOWN
          ß.----------------------------------------------------.
          ß| ** Commands: BOTTOM,FORWARD  are ALIAS of DOWN     |
          ß'----------------------------------------------------'

  ~ The update line commandsß'E'~andß'U'~will also show these message boxes.

  ~ HELP for ALIAS has detailed explanation of commands with ALIAS action.


# Checking Overridden Commands~
# ---------------------------- ~
    Overridden commands are marked with$'-'~or$'.'~before their name in a
    command list.  If you want to check which commands override (or partly
    override) such a command - use the line commandß'V'~and it will display
    the complete command definition plus a message box.
      eg.  for command BOTTOM
          ß.------------------------------------------------------------.
          ß| ** This command cannot be invoked (directly) because it is |
          ß| OVERRIDDEN by command BOTTOM in table EJESCMDS             |
          ß'------------------------------------------------------------'
  ~   eg.  for command CANCEL
          ß.-------------------------------------------------------------------.
          ß| ** This command can be invoked only by entering CAN or CANCEL ,   |
          ß| since it is PARTLY OVERRIDDEN by command CANCER in table USERCMDS |
          ß'-------------------------------------------------------------------'
  ~ The update line commandsß'E'~andß'U'~will also show the same message box.

  ~ Sometimes it is helpful to use the primary commandß'S xxxxx'~to restrict
  ~ your list of commands to see both the overriding and overridden commands
      eg. fromß'S BO'
         @Command   Table  Description / Action
         {BO        ----- ------------------------
         $*#BOTTOM  ßEJES~BOTTOM COMMAND
         {  --       PASSTHRU
         $-#BOTTOM  ßISP ~SCROLL TO BOTTOM
         {           ALIAS DOWN MAX

  ~   eg. fromß'S CANC'
         @Command   Table  Description / Action
         {CANC      ----- ------------------------
         $+#CANCER  ßUSER~display zodiac information for CANCER
         {  ----     SELECT CMD(%ZODIAC CANCER)
         $.#CANCEL  ßISP ~CANCEL
         {  ---      CANCEL

  ~ HELP for OVERRIDE has detailed explanation of command overrides.


# Copying Commands to another table
# --------------------------------- ~
    "ISPF Commands" tool can copy commands from one table to another in two
    different ways:
     #1~When both tables are active and displayed - use line commandßC~orßM~
        (Copy or Move) with line commandßA~orßB~(After or Before).
        This copies only one command at a time.

     #2~When at least the source table(s) are active and displayed - use the
        primary commandßCOPY~and line commandßS~to select the commands to be
        copied.  Press ENTER and a window will be displayed, asking you to
        specify the target table name.  If necessary you can specify the
        target library name too.  If the target table does not already exist
        in the target library - it can create a new table for the copying.
        Use HELP from the COPY window to see more details of this function.
        This can copy many commands at a time.

    If the target table was ALREADY ACTIVE - the COPY changes are immediately
    active, but they are only temporary (ie. not copied to disk).

    If the target table was NOT ACTIVE - the COPY changes are permanent (ie.
    written in the table member on disk).


# Creating new Command Tables
# --------------------------- ~
    "ISPF Commands" tool can create new command tables for User or Site
    tables (via theßNEWUSER~orßNEWSITE~commands).  The new table names are
    based on the definitions in your ISPF configuration module.  Note that
    Site tables are normally created only by System Programmers, to hold
    commands for sharing by all users.  The process for creating a Site table
    by "ISPF Commands" is almost the same as creating a User table.  That is
    explained in HELP for CREATING A NEW USER COMMAND TABLE.

    System commands (ISPCMDS) are supplied as part of ISPF, and Application
    command tables should be supplied with each application (if they are
    needed).  Therefore you should not normally need to create such tables.

    "ISPF Commands" tool can create new Application tables in two different
    ways:
     #1~Start it via commandßCMDS APPL(xxx)~where 'xxx' is the new Appl-Id.
        Then it will show the "Open Table" window with the message "table not
        found in your ISPTLIB libraries".  Specify the desired library name
        and press ENTER.  Next it shows the "Create new table" window.  Press
        ENTER to confirm the new table creation.  The new table, which will
        have one dummy command, will be immediately active and displayed for
        you to update and use.  CommandßSAVEAPPL~saves your updates to disk.

     #2~When "ISPF Commands" tool is already started enterßNEWAPPL~command.
        Then it shows the "Create new table" window.  Initially it shows the
        table name for current Appl-Id and you can change that to whatever
        name you want.  The desired library name should also be specified.
        Then press ENTER to confirm the new table creation.  The new table,
        with one dummy command, will be written to disk, but it will not be
        active.

    Warning: these 'NEWxxxx' commands can create a new table toßREPLACE~an
    existing table, and if that is done accidentally you may not be able to
    recover the previous version of the table.

    "ISPF Commands" tool has no facility to copy or delete complete tables.
    You can simply copy or delete the library members by normal methods.
    Note that if you copy a table member to a different member name - ISPF
    can then open it as a table with the name of the new member, (using that
    new member as the table source).


# Passing parameters to Actions~
# --------------------------- ~
    If you enter a command name folowed by parameters - ISPF will put those
    parameters into variable ZPARM.  If the command's action is ßSETVERB~-
    the parameters are automatically appended.  All other actions ignore the
    parameters unlessß&&ZPARM~is included in the definition.

    Other variables can also be included.  The contents of the variables (in
    the active ISPF application) are then inserted into the command when it
    is invoked.  Here are some examples:
         @Command   Table  Description / Action
         {--------  ----- &&
         $ #TSO     ßISP ~INVOKE A TSO SERVICE
         {           SELECT SUSPEND CMD(&&ZPARM)
         $ #DTST    ßUSER~ISPF dialog test (using the current APPLID)
         {           SELECT PGM(ISPYXDR) PARM(&&ZAPPLID) NOCHECK
         $ #RUNPGM  ßAPPL~application supplies program name, user enters parms
         {           SELECT PGM(&&PGMNAME) PARM(&&ZPARM) SUSPEND
         $*#CAN     ßAPPL~use application's CAN action instead of ISPF default
         {           &&CAN

~   See HELP for ALIAS for more examples of passing parameters, and how that
    works with ALIAS commands.


# Adding parameters to Actions~
# --------------------------- ~
    Some command actions cannot have parameters directly added to them.
    For example, if you want to create a command with the actionßSWAP LIST~
    you must create one with actionßALIAS SWAP LIST~and place it before
    the standard SWAP command in ISPCMDS table.  This technique is necessary
    for actionsßSPLIT SWAP SCRNAME~andßSETVERB~; (action SETVERB is used by
    commands RCHANGE RFIND UP DOWN LEFT and RIGHT).


# Function Keys in "ISPF Commands"~
# -------------------------------- ~
    The "ISPF Commands" panels all have Command fields and you can also use
    Program Funtion Keys.  It setsß'KEYLIST ON'~for all the window-box panels
    to use the function key definitions from a keylist (ISRSNAB).  These
    definitions are checked, and the panels give advice about what keys to
    press (eg. 'press$F12~to CANCEL').  If no appropriate key definition is
    found the panels advise what command to use (eg. 'enter$CAN~to CANCEL').
~
    Any HELP panels which can be scrolled, also set 'KEYLIST ON' and use the
    ISRHLP2 keylist so you can scroll UP and DOWN via$F7~and$F8~keys.
~
    If you use ISPF with 'KEYLIST OFF', note that it will temporarily change
    to 'KEYLIST ON' while any of those panels is displayed, but it will
    revert to 'KEYLIST OFF' immediately after.
~
~
~
)INIT
&ZCONT = ISPFCMH0
.HHELP = ISP00006
 VGET ZKLUSE PROFILE
 &KLUSE = &ZKLUSE
 IF (&ZKLUSE = N)                      /* user has KEYLIST OFF */
     &ZKLUSE = Y                       /* turn it ON           */
     VPUT ZKLUSE PROFILE
)PROC
 IF (.RESP = END)
     IF (&KLUSE = N)                   /* user had KEYLIST OFF */
         &ZKLUSE = N                   /* turn it OFF again    */
         VPUT ZKLUSE PROFILE
)END
