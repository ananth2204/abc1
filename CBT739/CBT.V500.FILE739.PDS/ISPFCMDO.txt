//jobname  JOB 'ISPFCMDO',MSGCLASS=?,CLASS=?,NOTIFY=&SYSUID
//*
//ASM      EXEC PGM=ASMA90,
//         PARM='NODECK,LIST,OBJECT'
//SYSIN    DD  *
         TITLE 'MARK COMMAND OVERRIDES FOR ISPF COMMANDS TOOL'
*-----------------------*  FUNCTION  *--------------------------------*
* ISPFCMDO                                                            *
* --------                                                            *
* To mark all overrides in the "ISPF Commands" command list table.    *
*                                                                     *
*---------------------------------------------------------------------*
*   Written by : Ron Brown - June 2000                                *
*   Updated by : Ron Brown - Jan  2006 (length CMDTORD: CL1 -> CL2)   *
*---------------------------------------------------------------------*
*                                                                     *
*  RETURN CODE : 0  = ALL OK                                          *
*                                                                     *
***********************************************************************
ISPFCMDO RMODE ANY
ISPFCMDO AMODE 31
ISPFCMDO CSECT
         SAVE  (14,12)                   SAVE CALLERS REGISTERS
         BALR  R12,0                     SET BASE REGISTER
         USING *,R12                     BASE REGISTER ESTABLISHED
         LR    R5,R1                     SAVE REGISTER 1
         LA    R15,SAVEAREA              R15 = ADDRESS OF SAVEAREA
         ST    R13,4(R15)                CHAIN BACKWARDS
         ST    R15,8(R13)                CHAIN FORWARDS
         LR    R13,R15
         B     START                     GO AROUND EYECATCHER
*
PROGNAME DC    CL8'ISPFCMDO'             EYECATCHER
         DC    CL8' VERSION'
VERSION  DC    CL6' 01.01'
DATE_ASM DC    CL11' &SYSDATE'           DATE ASSEMBLED
TIME_ASM DC    CL8' &SYSTIME'            TIME ASSEMBLED
*
*---------------------------------------------------------------------*
*        PROCESS PARM - GET THE TABLE NAME
*---------------------------------------------------------------------*
START    DS    0H
         LR    R1,R5                     RESTORE REGISTER 1
         LTR   R1,R1                     ANY PARMS ?
         BZ    NOPARM                    NO, EXIT RC=1
         ICM   R1,B'1111',0(R1)          -> PARMS
         BZ    MTPARM                    IF EMPTY PARM, EXIT RC=2
         CLC   0(2,R1),=AL2(L'TABLNAME)  GOOD LENGTH ?
         BH    BADLEN                     NO, EXIT RC=3

         LA    R2,2(R1)                  -> PARM
         LA    R3,L'TABLNAME             R3 = LENGTH OF PARM
         LA    R8,TABLNAME
         LR    R9,R3
         MVCL  R8,R2                     SET TABLNAME
*
*---------------------------------------------------------------------*
*        DEFINE ISPF VARIABLES
*---------------------------------------------------------------------*
         CALL  ISPLINK,(VDEFINE,NCMDTAB,CMDTAB,CHAR,L4),VL
         CALL  ISPLINK,(VDEFINE,NCMDTORD,CMDTORD,CHAR,L2),VL
         CALL  ISPLINK,(VDEFINE,NCMDOVER,CMDOVER,CHAR,L1),VL
         CALL  ISPLINK,(VDEFINE,NCMDSEL,CMDSEL,CHAR,L1),VL
         CALL  ISPLINK,(VDEFINE,NCMDALIAS,CMDALIAS,CHAR,L4),VL
         CALL  ISPLINK,(VDEFINE,NCMDNUM,CMDNUM,CHAR,L4),VL
         CALL  ISPLINK,(VDEFINE,NCMDFND,CMDFND,CHAR,L35),VL
         CALL  ISPLINK,(VDEFINE,NCMDTRUNC,CMDTRUNC,CHAR,L8),VL
         CALL  ISPLINK,(VDEFINE,NCMDMINL,CMDMINL,CHAR,L1),VL
         CALL  ISPLINK,(VDEFINE,NZCTVERB,ZCTVERB,CHAR,L8),VL
         CALL  ISPLINK,(VDEFINE,NZCTTRUNC,ZCTTRUNC,CHAR,L1),VL
         CALL  ISPLINK,(VDEFINE,NZCTDESC,ZCTDESC,CHAR,L80),VL
         CALL  ISPLINK,(VDEFINE,NZCTACT,ZCTACT,CHAR,L240),VL
*
*---------------------------------------------------------------------*
*        ENSURE ALL CMDOVER COLUMNS ARE BLANK
*---------------------------------------------------------------------*
         CALL  ISPLINK,(TBTOP,TABLNAME),VL
*        MVI   CMDOVER,C' '
*
BLNKLOOP DS    0H
         CALL  ISPLINK,(TBSCAN,TABLNAME,ARGLIST1,,,NEXT,,,CNDLIST1),VL
         LTR   R15,R15
         BH    PROCTABL                 ALL BLANK; NOW PROCESS TABLE
         MVI   CMDOVER,C' '
         CALL  ISPLINK,(TBPUT,TABLNAME,,ORDER),VL
         B     BLNKLOOP                 THAT WAS FUN, LET'S DO IT AGAIN
*
*---------------------------------------------------------------------*
*        SCAN TABLE FOR EVERY ROW - UPDATE CMDOVER WHEN NECESSARY
*---------------------------------------------------------------------*
PROCTABL DS    0H
         CALL  ISPLINK,(CONTROL,ERRORS,CANCEL),VL
         CALL  ISPLINK,(TBTOP,TABLNAME),VL
*---------------------------------------------------------------------*
*        SKIP THROUGH EVERY ROW OF THE TABLE
*---------------------------------------------------------------------*
SKIPLOOP DS    0H
         CALL  ISPLINK,(TBSKIP,TABLNAME),VL
         LTR   R15,R15
         BH    NORMEND                  NO MORE ROWS; FINISHED
*
         CLI   CMDOVER,C'-'
         BE    SKIPLOOP                 IT'S OVERRIDDEN; TRY NEXT ROW
         CLC   ZCTACT,BLANKS
         BE    SKIPLOOP                 NO ACTION; TRY NEXT ROW
         CLI   ZCTVERB,C' '
         BE    SKIPLOOP                 1ST CHAR IS BLANK; TRY NEXT ROW
         CLI   ZCTVERB+1,C' '
         BE    SKIPLOOP                 2ND CHAR IS BLANK; TRY NEXT ROW
         CLC   ZCTVERB,EMPTVERB
         BNE   SCANPREP                 IT'S NOT A DUMMY 'EMPTY' ROW
         CLC   ZCTDESC,EMPTDESC
         BE    SKIPLOOP                 IT'S OVERRIDDEN; TRY NEXT ROW
*
SCANPREP DS    0H
         MVI   OVERRIDE,C' '
         MVC   THISNUM,CMDNUM
         MVC   THISLENG,CMDMINL
         MVC   THISVERB,ZCTVERB
         MVC   THISVGEN,ZCTVERB         = ZCTVERB ARGUMENT FOR TBSCAN
         CLI   CMDMINL,C'8'
         BE    SCANROWS
LENG7    CLI   CMDMINL,C'7'
         BNE   LENG6
         MVI   THISVGEN+7,C'*'
         B     SCANROWS
LENG6    CLI   CMDMINL,C'6'
         BNE   LENG5
         MVC   THISVGEN+6(2),=C'* '          ASTERIX
         B     SCANROWS
LENG5    CLI   CMDMINL,C'5'
         BNE   LENG4
         MVC   THISVGEN+5(3),=C'*  '         ASTERIX
         B     SCANROWS
LENG4    CLI   CMDMINL,C'4'
         BNE   LENG3
         MVC   THISVGEN+4(4),=C'*   '        ASTERIX
         B     SCANROWS
LENG3    CLI   CMDMINL,C'3'
         BNE   LENG2
         MVC   THISVGEN+3(5),=C'*    '       ASTERIX
         B     SCANROWS
LENG2    CLI   CMDMINL,C'2'
         BNE   SKIPLOOP                INVALID CMDMINL; TRY NEXT ROW
         MVC   THISVGEN+2(6),=C'*     '      ASTERIX
         B     SCANROWS
*---------------------------------------------------------------------*
*        SCAN THROUGH THE FOLLOWING ROWS LOOKING FOR A MATCHING VERB
*---------------------------------------------------------------------*
SCANROWS DS    0H
         MVC   ZCTVERB,THISVGEN
         MVC   ZCTACT,BLANKS
         CALL  ISPLINK,(TBSCAN,TABLNAME,ARGLIST2,,,NEXT,,,CNDLIST2),VL
         LTR   R15,R15
         BH    UPCMDOVR                END OF TABLE; UPDATE CMDOVER
*---------------------------------------------------------------------*
*        UPDATE CMDOVER FOR THE OVERRIDDEN COMMAND IN THE TABLE
*---------------------------------------------------------------------*
         CLI   ZCTVERB+2,C' '
         BNE   SCLEN3
         CLC   ZCTVERB(2),THISVERB
         BE    CHKMINL
         B     NOSUBSET
SCLEN3   CLI   ZCTVERB+3,C' '
         BNE   SCLEN4
         CLC   ZCTVERB(3),THISVERB
         BE    CHKMINL
         B     NOSUBSET
SCLEN4   CLI   ZCTVERB+4,C' '
         BNE   SCLEN5
         CLC   ZCTVERB(4),THISVERB
         BE    CHKMINL
         B     NOSUBSET
SCLEN5   CLI   ZCTVERB+5,C' '
         BNE   SCLEN6
         CLC   ZCTVERB(5),THISVERB
         BE    CHKMINL
         B     NOSUBSET
SCLEN6   CLI   ZCTVERB+6,C' '
         BNE   SCLEN7
         CLC   ZCTVERB(6),THISVERB
         BE    CHKMINL
         B     NOSUBSET
SCLEN7   CLI   ZCTVERB+7,C' '
         BNE   SCLEN8
         CLC   ZCTVERB(7),THISVERB
         BE    CHKMINL
         B     NOSUBSET
SCLEN8   CLC   ZCTVERB,THISVERB
         BNE   NOSUBSET
*
CHKMINL  DS    0H
         CLC   CMDMINL,THISLENG
         BL    PARTOVER               CMDMINL < THISLENG; PART OVERRIDE
         MVI   OVERRIDE,C'*'
         MVI   CMDOVER,C'-'
         B     PUTOVER                  NOW UPDATE THE ROW
*
NOSUBSET DS    0H
         CLI   CMDMINL,C'2'
         BNE   SCLNG3
         CLC   ZCTVERB(2),THISVERB
         BE    PARTOVER
         B     MINL
SCLNG3   CLI   CMDMINL,C'3'
         BNE   SCLNG4
         CLC   ZCTVERB(3),THISVERB
         BE    PARTOVER
         B     MINL
SCLNG4   CLI   CMDMINL,C'4'
         BNE   SCLNG5
         CLC   ZCTVERB(4),THISVERB
         BE    PARTOVER
         B     MINL
SCLNG5   CLI   CMDMINL,C'5'
         BNE   SCLNG6
         CLC   ZCTVERB(5),THISVERB
         BE    PARTOVER
         B     MINL
SCLNG6   CLI   CMDMINL,C'6'
         BNE   SCLNG7
         CLC   ZCTVERB(6),THISVERB
         BE    PARTOVER
         B     MINL
SCLNG7   CLI   CMDMINL,C'7'
         BNE   SCANROWS
         CLC   ZCTVERB(7),THISVERB
         BE    PARTOVER
*
MINL     DS    0H
         CLC   CMDMINL,THISLENG
         BH    SCANROWS                CMDMINL > THISLENG; NEW SCAN
*
PARTOVER DS    0H                      PARTIALLY OVERRIDDEN COMMAND
         CLI   OVERRIDE,C'*'
         BE    PARTO2
         MVI   OVERRIDE,C'+'
PARTO2   CLI   CMDOVER,C'-'
         BE    PUTOVER
         MVI   CMDOVER,C'.'
PUTOVER  DS    0H
         CALL  ISPLINK,(TBPUT,TABLNAME,,ORDER),VL        UPDATE THE ROW
         B     SCANROWS                 SCAN FOR NEXT MATCHING ROW
*
*
*---------------------------------------------------------------------*
*        UPDATE CMDOVER FOR THIS OVERRIDING CMD (IF OVERRIDE = * OR +)
*---------------------------------------------------------------------*
UPCMDOVR DS    0H
         MVC   CMDNUM,THISNUM          RESTORE CMDNUM
         CALL  ISPLINK,(TBSCAN,TABLNAME,ARGLIST3,,,NEXT),VL  GET ROW
         CLI   CMDOVER,C'.'
         BE    SKIPLOOP                 PROCESS NEXT ROW
         CLI   CMDOVER,C'-'
         BE    SKIPLOOP                 PROCESS NEXT ROW
         CLI   OVERRIDE,C'.'
         BE    SKIPLOOP                 PROCESS NEXT ROW
         CLI   OVERRIDE,C'-'
         BE    SKIPLOOP                 PROCESS NEXT ROW
         CLI   OVERRIDE,C' '
         BE    SKIPLOOP                 PROCESS NEXT ROW
         MVC   CMDOVER,OVERRIDE
         CALL  ISPLINK,(TBPUT,TABLNAME,,ORDER),VL        UPDATE THE ROW
         B     SKIPLOOP                 PROCESS NEXT ROW
*
*
*---------------------------------------------------------------------*
* SETTING RETURN CODES FOR EXIT
*---------------------------------------------------------------------*
NORMEND  DS    0H                        NORMAL END
         LA    R15,0                     RETURN CODE = 0
         B     EXIT                      RETURN TO CALLER
*
NOPARM   DS    0H                        NO PARM
         LA    R15,1                     RETURN CODE = 1
         B     EXIT                      RETURN TO CALLER
*
MTPARM   DS    0H                        EMPTY PARM
         LA    R15,2                     RETURN CODE = 2
         B     EXIT                      RETURN TO CALLER
*
BADLEN   DS    0H                        BAD PARM LENGTH
         LA    R15,3                     RETURN CODE = 3
         B     EXIT                      RETURN TO CALLER
*
*---------------------------------------------------------------------*
*        THAT'S ALL FOLKS
*---------------------------------------------------------------------*
EXIT     DS    0H
         L     R13,4(R13)                RESTORE ADDR OF OLD SAVEAREA
         RETURN (14,12),RC=(15)          RETURN TO CALLER
         EJECT
***********************************************************************
         LTORG
*
CONSTNTS DS    0D
SAVEAREA DS    18A
TABLNAME DS    CL8
*
NCMDTAB   DC   C'(CMDTAB)'      table name prefix
NCMDTORD  DC   C'(CMDTORD)'     table order (1,2x,3x or 4x)
NCMDOVER  DC   C'(CMDOVER)'     override chars (*,+,- or .)
NCMDSEL   DC   C'(CMDSEL)'      mark rows with / to be selected by SCAN
NCMDALIAS DC   C'(CMDALIAS)'    alias group number (initially blank)
NCMDNUM   DC   C'(CMDNUM)'      command order numbers (for sorting)
NCMDFND   DC   C'(CMDFND)'      Description/Action find string
NCMDTRUNC DC   C'(CMDTRUNC)'    real truncation length ('-' chars)
NCMDMINL  DC   C'(CMDMINL)'     real minimum truncation length
NZCTVERB  DC   C'(ZCTVERB)'     VERB  (command name)
NZCTTRUNC DC   C'(ZCTTRUNC)'    TRUNC (truncation)
NZCTDESC  DC   C'(ZCTDESC)'     DESC  (description)
NZCTACT   DC   C'(ZCTACT)'      ACT   (action)
CMDTAB   DS    CL4
CMDTORD  DS    CL2
CMDOVER  DS    CL1
CMDSEL   DS    CL1
CMDALIAS DS    CL4
CMDNUM   DS    CL4
CMDFND   DS    CL35
CMDTRUNC DS    CL8
CMDMINL  DS    CL1
ZCTVERB  DS    CL8
ZCTTRUNC DS    CL1
ZCTDESC  DS    CL80
ZCTACT   DS    CL240
*
CONTROL  DC    CL8'CONTROL '
ERRORS   DC    CL8'ERRORS  '
RETURN   DC    CL8'RETURN  '
CANCEL   DC    CL8'CANCEL  '
VDEFINE  DC    CL8'VDEFINE '
TBTOP    DC    CL8'TBTOP   '
TBSCAN   DC    CL8'TBSCAN  '
TBSKIP   DC    CL8'TBSKIP  '
TBPUT    DC    CL8'TBPUT   '
NEXT     DC    CL8'NEXT    '
NE       DC    CL8'NE      '
ORDER    DC    CL8'ORDER   '
ARGLIST1 DC    C'(CMDOVER)'
CNDLIST1 DC    C'(NE)'
ARGLIST2 DC    C'(ZCTVERB,ZCTACT)'
CNDLIST2 DC    C'(EQ,NE)'
ARGLIST3 DC    C'(CMDNUM)'
CHAR     DC    CL4'CHAR'
L1       DC    F'1'
L2       DC    F'2'
L4       DC    F'4'
L8       DC    F'8'
L35      DC    F'35'
L80      DC    F'80'
L240     DC    F'240'
*
EMPTVERB DC    CL8'--------'
EMPTDESC DC    CL80'<<< no commands in this table >>>'
OVERRIDE DS    CL1
THISVERB DS    CL8
THISVGEN DS    CL8
THISLENG DS    CL1
THISNUM  DS    CL4
BLANKS   DC    CL240' '
*
         YREGS
*
         END   ISPFCMDO
/*
//****************************************************************
//SYSLIN   DD  DSN=&&TEMPOBJ,DISP=(NEW,PASS),UNIT=VIO,
//             SPACE=(TRK,(2,2),RLSE),DCB=(RECFM=FB,LRECL=80)
//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(3,5))
//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR
//         DD  DSN=SYS1.MODGEN,DISP=SHR
//SYSPRINT DD  SYSOUT=*
//****************************************************************
//*   LINK EDIT
//****************************************************************
//LINK    EXEC PGM=IEWL,COND=(4,LT,ASM),REGION=6M,
// PARM='XREF,LIST,LET'
//SYSLMOD  DD  DSN=your.ISPF.Load.library,DISP=SHR   <== CHANGE
//SYSUT1   DD  UNIT=SYSDA,SPACE=(1024,(50,20))
//SYSUT2   DD  UNIT=SYSDA,SPACE=(1024,(50,20))
//SYSPRINT DD  SYSOUT=*
//SYSLIB   DD  DSN=SYS1.LINKLIB,DISP=SHR
//         DD  DSN=ISP.SISPLOAD,DISP=SHR
//SYSLIN   DD  DSN=*.ASM.SYSLIN,DISP=(SHR,DELETE)
//         DD  *
 NAME ISPFCMDO(R)
/*
//
