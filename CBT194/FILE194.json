{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011454000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE194.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE194.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\r'", "DS1TRBAL": "b'P\\x16'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\x83\\x00\\x00\\x01\\x83\\x00\\x02\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$MEMO": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x93\\x13\\x0f\\x00\\x93\\x13\\x0f\\x18\\x15\\x00\\n\\x00\\r\\x00\\x00\\xd4\\xc1\\xd9\\xe2\\xc8\\xd3\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-05-10T00:00:00", "modifydate": "1993-05-10T18:15:00", "lines": 10, "newlines": 13, "modlines": 0, "user": "MARSHLL"}, "text": "\n\n\n    Enclosed are two ISPF Edit macros,  CUT and PASTE.  Just put them\ninto your CLIST library and you are in.  Am told they are just the\nsame as the CUT and PASTE which is a part of SPF/2.\n\n\n\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CUT": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93\\x13\\x0f\\x00\\x93\\x13\\x0f\\x18\\x10\\x00\\xc1\\x00\\xc1\\x00\\x00\\xd4\\xc1\\xd9\\xe2\\xc8\\xd3\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-05-10T00:00:00", "modifydate": "1993-05-10T18:10:00", "lines": 193, "newlines": 193, "modlines": 0, "user": "MARSHLL"}, "text": "/* REXX ***************************************************************/\n/***                                                                  */\n/*** ISPF/PDF edit macro to write lines from a file to the user       */\n/*** PROFILE pool for later inclusion by the PASTE macro.             */\n/***                                                                  */\n/*** To run:                                                          */\n/***  Enter CUT on the COMMAND line and use the C or M line commands  */\n/***  (in any form) to select the lines to be cut.                    */\n/***                                                                  */\n/***  If the M line command is used, the lines will be deleted.       */\n/***                                                                  */\n/***  A parameter of R or REPLACE can be specified to replace any     */\n/***  previously CUT lines (that have not yet been PASTEd) with the   */\n/***  newly selected lines.  Otherwise, the selected lines will be    */\n/***  added to any previously CUT lines.                              */\n/***                                                                  */\n/***  An arbitrary limit of 1000 lines is set in the macro but this   */\n/***  can be changed by providing a new limit on the macro call.      */\n/***  For example, to process up to 2000 lines enter CUT 2000 on the  */\n/***  COMMAND line.  Be aware that each line gets stored in your      */\n/***  PROFILE.                                                        */\n/***                                                                  */\n/**********************************************************************/\nTrace\nAddress ISPEXEC\n'ISREDIT MACRO (PARM1) NOPROCESS'\nparm1 = translate(parm1)\nIf parm1 = '?' Then\n  Do\n    Call help\n    Exit\n  End\n\nIf parm1 \u00ac= ' ' & parm1 \u00ac= 'R' & parm1 \u00ac= 'REPLACE' Then\n  Do\n    If datatype(parm1,w) = 1 & parm1 > 0 Then\n      Do\n        /* set new limit for maximum number of lines cut to profile */\n        cutlimit = parm1\n        'VPUT (CUTLIMIT) PROFILE'\n      End\n    Else\n      Do\n        zedsmsg = 'Invalid parameter'\n        msg = 'Use a whole number > 0, ? for help,'\n        zedlmsg = msg 'R or REPLACE to replace previous lines'\n        'SETMSG MSG(ISRZ001)'\n        Exit 12\n      End\n  End\n\n/* Process line commands, check if C or M was specified              */\n'ISREDIT PROCESS RANGE C M'\nSelect\n  When rc = 0 Then\n    Do\n      'ISREDIT (CMD) = RANGE_CMD'          /* Get the command        */\n      'ISREDIT (LINE1) = LINENUM .ZFRANGE' /* Get first line in range*/\n      'ISREDIT (LINE2) = LINENUM .ZLRANGE' /* Get last line in range */\n      linestocut = line2 - line1 + 1\n    End\n  When rc <= 4 Then /* No C or M entered */\n    Do\n      zedsmsg = 'Enter \"C\"/\"M\" line cmd'\n      zedlmsg = 'CUT requires a \"C\" or \"M\" line command'\n      'SETMSG MSG(ISRZ001)'\n      Exit 12\n    End\n  Otherwise  /* Line command conflict - Edit will create message*/\n    Exit 12\nEnd\n\n/* Get the number of lines that have been cut but not pasted,        */\n/* initialize to zero if first time.                                 */\n'VGET (CUTCNTMX) PROFILE'\nIf rc \u00ac= 0 Then\n  cutcntmx = 0\n\n/* Get the maximum number of lines to be stored in the profile,      */\n/* initialize to 1000 if first time.                                 */\n'VGET (CUTLIMIT) PROFILE'\nIf rc \u00ac= 0 Then\n  Do\n    cutlimit = 1000\n    'VPUT (CUTLIMIT) PROFILE'\n  End\n\nIf parm1 = 'R' | parm1 = 'REPLACE' Then\n  Do\n    If linestocut < cutcntmx Then\n      Do\n        /* delete variables that will not be overwritten */\n        'VGET (ZENVIR) SHARED'\n        Do i = 1 to cutcntmx by 1\n          'VERASE (CL'i') PROFILE'\n        End\n      End\n    cutcntmx = 0\n  End\ncutcntmxsave = cutcntmx\n/* Check to see if the limit will be exceeded by storing the lines   */\n/* into the profile.                                                 */\ncount = cutcntmx + linestocut\nIf count > cutlimit Then\n  Do\n    zedsmsg = '> 'cutlimit 'lines to cut'\n    zedlmsg = 'Reduce the range or change limit with CUT 'count\n    'SETMSG MSG(ISRZ001)'\n    Exit 12\n  End\n\n\n/* cut the lines to the profile */\ncutcnt = cutcntmx\nDo i = line1 to line2\n  cutcnt = cutcnt + 1\n  'ISREDIT (CL'cutcnt') = LINE' i\n\n  Interpret \"CL\"cutcnt\"= Strip(CL\"cutcnt\",'T')\"\n\n  'VPUT (CL'cutcnt') PROFILE'\nEnd\n\n\n/* Put the number of lines cut into the profile for use by PASTE     */\n'VPUT (CUTCNT) PROFILE'\n\n/* If the number of lines cut this time is greater than the maximum  */\n/* cut, then save the new maximum.  PASTE will set this variable to  */\n/* zero if it deletes the variables.                                 */\nIf cutcnt > cutcntmx Then\n  Do\n    cutcntmx = cutcnt\n    'VPUT (CUTCNTMX) PROFILE'\n  End\n\nIf cmd = 'M' Then\n  Do\n    'ISREDIT DELETE 'line1 line2\n    If cutcntmxsave = 0 Then\n      Do\n        zedsmsg = linestocut 'lines cut and deleted'\n        msg = 'lines were cut and deleted from the current file'\n        zedlmsg = linestocut msg\n      End\n    Else\n      Do\n        zedsmsg = linestocut 'lines cut and deleted'\n        msg ='A total of 'cutcntmx' lines have been cut'\n        zedlmsg = msg '- last 'linestocut' were deleted'\n      End\n    'SETMSG MSG(ISRZ000)'\n  End\nElse\n  Do\n    If cutcntmxsave = 0 Then\n      Do\n        zedsmsg = linestocut 'lines cut'\n        zedlmsg = linestocut 'lines were cut from the current file'\n      End\n    Else\n      Do\n        zedsmsg = linestocut' lines plus 'cutcntmxsave 'lines cut'\n        zedlmsg ='A total of 'cutcntmx' lines have been cut'\n      End\n    'SETMSG MSG(ISRZ000)'\n  End\n\nExit\n\nhelp:\nSay '                                                                '\nSay ' ISPF/PDF edit macro to write lines from a file to the user     '\nSay ' PROFILE pool for later inclusion by the PASTE macro.           '\nSay '                                                                '\nSay ' To run:                                                        '\nSay '  Enter CUT on the COMMAND line and use the C or M line commands'\nSay '  (in any form) to select the lines to be cut.                  '\nSay '                                                                '\nSay '  If the M line command is used, the lines will be deleted.     '\nSay '                                                                '\nSay '  A parameter of R or REPLACE can be specified to replace any   '\nSay '  previously CUT lines (that have not yet been PASTEd) with the '\nSay '  newly selected lines.  Otherwise, the selected lines will be  '\nSay '  added to any previously CUT lines.                            '\nSay '                                                                '\nSay '  An arbitrary limit of 1000 lines is set in the macro but this '\nSay '  can be changed by providing a new limit on the macro call.    '\nSay '  For example, to process up to 2000 lines enter CUT 2000 on the'\nSay '  COMMAND line.  Be aware that each line gets stored in your    '\nSay '  PROFILE.                                                      '\nSay '                                                                '\nReturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PASTE": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93\\x13\\x0f\\x00\\x93\\x13\\x0f\\x18\\x10\\x00\\x8d\\x00\\x8d\\x00\\x00\\xd4\\xc1\\xd9\\xe2\\xc8\\xd3\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-05-10T00:00:00", "modifydate": "1993-05-10T18:10:00", "lines": 141, "newlines": 141, "modlines": 0, "user": "MARSHLL"}, "text": "/* REXX ***************************************************************/\n/***                                                                  */\n/*** ISPF/PDF edit macro to write lines from the user PROFILE pool    */\n/*** into the current file.  This macro is used in conjunction with   */\n/*** the CUT macro.                                                   */\n/***                                                                  */\n/*** To run:                                                          */\n/***   Enter PASTE on the COMMAND line and use the A or B line        */\n/***   command to specify where the lines are to be pasted.           */\n/***                                                                  */\n/***   A parameter of K or KEEP can be specified to prevent the macro */\n/***   from setting the profile variables to null after the lines     */\n/***   have been pasted into the file.                                */\n/***                                                                  */\n/***   If line truncation occurs, the profile variables will not be   */\n/***   set to null.  When this occurs, edit a data set with a large   */\n/***   enough record length or use CUT REPLACE to replace the lines   */\n/***   in the PROFILE pool.                                           */\n/**********************************************************************/\nTrace\nAddress ISPEXEC\n\n'ISREDIT MACRO (PARM1) NOPROCESS'\nparm1 = translate(parm1)\nIf parm1 = '?' Then\n  Do\n    Call help\n    Exit\n  End\n\nIf parm1 \u00ac= ' ' & parm1 \u00ac= 'K' & parm1 \u00ac= 'KEEP' Then\n  Do\n    zedsmsg = 'Invalid parameter'\n    zedlmsg = 'Use ? for help, K or KEEP to prevent variable deletion'\n    'SETMSG MSG(ISRZ001)'\n    Exit 12\n  End\n\n/* Process line commands, check if A or B was specified              */\n'CONTROL ERRORS RETURN'\n'ISREDIT PROCESS DEST'\nSelect\n  When rc = 0 Then\n    'ISREDIT (ZDEST) = LINENUM .ZDEST'\n  When rc <= 8 Then /* No A or B entered */\n    Do\n       zedsmsg = 'Enter \"A\"/\"B\" line cmd'\n       zedlmsg = 'PASTE requires an \"A\" or \"B\" line command'\n       'SETMSG MSG(ISRZ001)'\n       Exit 12\n    End\n  When rc < 20 Then /* Conflicting line commands - edit sets message */\n    Exit 12\n  When rc = 20 Then\n    zdest = 0\n  Otherwise\n    Exit 12\nEnd\n'CONTROL ERRORS CANCEL'\n\n/* Get the number of lines variable                                  */\n'VGET (CUTCNT,CUTCNTMX) PROFILE'\nIf rc \u00ac= 0 Then\n  Do\n    zedsmsg = 'Use CUT before PASTE'\n    zedlmsg = 'The CUTCNT profile variable was not found-use CUT first'\n    'SETMSG MSG(ISRZ001)'\n    Exit 12\n  End\nIf cutcnt <= 0 Then\n  Do\n    zedsmsg = 'Use CUT before PASTE'\n    zedlmsg = 'No data has been stored via the CUT macro'\n    'SETMSG MSG(ISRZ001)'\n    Exit 12\n  End\n\ntrunccnt = 0\ncutcount = cutcnt\n/* get each cut line from the profile and add it to the file         */\nDo i = cutcnt to 1 by -1\n  'VGET (CL'i') PROFILE'\n  'ISREDIT LINE_AFTER 'zdest' = DATALINE (CL'i')'\n  If rc = 4 Then trunccnt = trunccnt + 1\nEnd\n\n\n/* If KEEP parameter not given and no lines were truncated, set to    */\n/* null all variables stored in the profile.  Variable cutcntmx       */\n/* contains the number of lines cut but not deleted.                  */\nIf parm1 \u00ac= 'K' & parm1 \u00ac= 'KEEP' & trunccnt = 0 Then\n  Do\n    'VGET (ZENVIR) SHARED'\n    Do i = 1 to cutcntmx by 1\n      'VERASE (CL'i') PROFILE'\n    End\n    cutcnt   = 0\n    cutcntmx = 0\n    'VPUT (CUTCNT,CUTCNTMX) PROFILE'\n  End\n\n/* Check if truncation occurred, if so display message                */\nIf trunccnt > 0 Then\n  Do\n    zedsmsg = trunccnt 'lines truncated'\n    msg     = 'Current record length shorter than origin'\n    zedlmsg = msg '-' trunccnt 'of' cutcount 'records were truncated'\n    'SETMSG MSG(ISRZ001)'\n  End\nElse\n  Do\n    zedsmsg = cutcount 'lines pasted'\n    zedlmsg = cutcount 'lines were pasted into the current file'\n    'SETMSG MSG(ISRZ000)'\n  End\n\nline1 = zdest + 1\n'ISREDIT CURSOR = 'line1 0\nExit\n\nhelp:\nSay '                                                                '\nSay ' ISPF/PDF edit macro to write lines from the user PROFILE pool  '\nSay ' into the current file. This macro is used in conjunction with  '\nSay ' the CUT macro.                                                 '\nSay '                                                                '\nSay ' To run:                                                        '\nSay '  Enter PASTE on the COMMAND line and use the A or B line       '\nSay '  command to specify where the lines are to be pasted.          '\nSay '                                                                '\nSay '  A parameter of K or KEEP can be specified to prevent the macro'\nSay '  from setting the profile variables to null after the lines    '\nSay '  have been pasted into the file.  If you want to paste the same'\nSay '  set of lines many places, specify the K or KEEP parameter.    '\nSay '                                                                '\nSay '  If line truncation occurs, the profile variables will not be  '\nSay '  set to null.  If this occurs, edit a data set with a large    '\nSay '  enough record length or use CUT REPLACE to replace the lines  '\nSay '  in the PROFILE pool.                                          '\nSay '                                                                '\nReturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT194/FILE194.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT194", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}