{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011520000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 646646, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE218.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 646646, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 646646, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE218.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x0b\\x08'", "DS1TRBAL": "b'@&'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\x93\\x00\\x04\\x01\\x94\\x00\\x00\\x00\\x0c'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$DOCERB": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "                 MPL & ASM MONITOR UNDER \"RMFMON\"\n\n REPORTS MPL ADJUSTMENT CONSTANTS AND DOMAIN INFORMATION.  ALSO ASM\n DATA SET SUMMARY.  THIS IS AN \"RMFMON\" USER COMMAND.  IT MUST BE LINKED\n AS REENTRANT (RENT). THE OBJECT DECK TO INSTALL IS:\n\n             FOR SYSTEM              PDS MEMBER\n            ------------            ------------\n              MVS 3.8                  MVSOBJ\n              MVS/SE2                  SE2OBJ\n             MVS/SP1.X                 SE2OBJ\n           MVS/SP2.1.0-2              SP212OBJ\n            MVS/SP2.1.3               SP213OBJ\n\n THE EASIEST WAY TO INSTALL THIS IS TO COPY THE CORRECT MEMBER INTO A\n DATASET WITH BLKSIZE=3200 AND ISSUE THE TSO COMMAND:\n      LINK dataset LOAD('SYS1.LINKLIB') RENT PRINT(*) LIST XREF\n\n BEFORE INSTALLATION, ENTER \"RMFMON\" TO USE IBM'S RMF MONITOR II AND\n THEN KEY \"USER\" ON THE COMMAND LINE.  THE MESSAGE \"INSTALLATION DOES\n NOT SUPPORT A USER PICTURE\" OR SOMETHING TO THAT EFFECT SHOULD APPEAR.\n IF ANOTHER MESSAGE OR SCREEN APPEARS, A USER PICTURE IS ALREADY\n INSTALLED AND WILL CONFLICT WITH THE INSTALLATION OF THIS ONE.\n\n TO OPERATE, KEY THE FOLLOWING ON THE COMMAND LINE:\n   \"RMFMON\"       -- TO USE IBM'S RMF MONITOR II\n   \"USER ASM\"     -- FOR ASM DATA SET SUMMARY (NOT AVAILABLE FOR MVS/XA)\n   \"USER MPL\"     -- FOR MPL ADJUSTMENT CONSTANTS\n   \"USER HELP\"    -- FOR OTHER AVAILABLE OPTIONS (IF ANY)\n\n INCLUDES:\n   FIX FOR ABEND0C9 IN ERBUSASM (CAUSED BY NO SWAP DATA SETS).\n   VERSION FOR MVS 3.8.\n   CHANGE TO ERBUSMPL TO EXCLUDE SPECIAL PURPOSE DOMAINS (WHERE MIN=MAX=\n     CMPL=1) FROM THE DISPLAY.  THEY ARE USUALLY FOR STARTED TASKS THAT\n     ARE NON-SWAPABLE ANYWAY.\n   TESTED MVS RELEASES INCLUDED IN THE COMMENTS OF THE SOURCE CODE OF\n     EACH MODULE.\n   FIX FOR SRM INTERVAL DURATION PROBLEM IN ERBUSMPL.  THIS IS CAUSED\n     BY AN INCORRECT MACRO \"IRARMEP\" IN APVTMACS.\n\n\n\n\n\n\n\n\n SUPPORTED BY:\n      JAMES F. COOK\n      THE COCA-COLA COMPANY\n      310 NORTH AVENUE, N.W.\n      ATLANTA, GA  30313\n      (404) 765-1522\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CBTJCL": {"ttr": 518, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//CBT1269 JOB 527TSO000S0008,'VSAMMAPP',CLASS=B,MSGCLASS=6,\n// NOTIFY=TS15500\n/*JOBPARM ROOM=F04L\n//STEP01   EXEC BANNER,P='CBT1269!!VSAMMAPP',COPY=3\n// EXEC PLIX,SO=6\n//SYSIN DD DISP=SHR,DSN=TS15500.CBT1269.PDS(VSAMMAPP)\n// EXEC LINKX,SO=6,NAME=CBT1269,LIB='SYS2.MLINKLIB'\n ALIAS VSAMMAPP\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ERBRUS99": {"ttr": 520, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "ERBRUS99 TITLE 'ERBRUS99 -- RMF USER REPORT INTERACTIVE ONLY MODULE'\n***********************************************************************\n**                                                                   **\n**     THIS MODULE MUST BE LINK EDITED INTO LINKLIB OR INTO A TSO    **\n**     USER'S STEPLIB AS \"ERBRUS99\".  MODULE \"ERBGUS99\" IS NOT       **\n**     TO BE MODIFIED FOR THIS ROUTINE. THIS MODULE MUST BE \"RENT\"   **\n**     AND ALL EXTERNAL REFERENCES MUST BE RESOLVED.  THIS ASSEMBLY  **\n**     REQUIRES THE \"AAPVT\" COMPONENT FROM THE SYSTEM OPTIONAL       **\n**     MACHINE READABLE MATERIAL AS A MACLIB.                        **\n**                                                                   **\n***********************************************************************\n**                                                                   **\n**     TO USE THIS MODULE, ENTER ON TSO:                             **\n**          RMFMON                                                   **\n**          USER HELP      TO DISPLAY THE AVAILABLE OPTIONS          **\n**          USER OPTION    FOR THE PARTICULAR OPTION                 **\n**                                                                   **\n***********************************************************************\nERBRUS99 CSECT\nERBRUS99 AMODE 31\nERBRUS99 RMODE ANY\n         USING *,15\n         B     BYMODULE\n         DC    AL1(23)\n         DC    CL8'ERBRUS99'\n         DC    CL7' &SYSTIME'\n         DC    CL8'&SYSDATE'\nF2       DC    F'2'\n         PRINT NOGEN\nBYMODULE SAVE  (14,12)\n         LR    R3,R1\n         USING PARMFLD,R3\n         L     R1,PARMCODE\n         CLC   F2,0(R1)       IS THE ERBFMENU SET UP CORRECTLY?\n         BE    MENUOK\n         LA    R15,8           NO, RETURN CODE IMMEDIATELY\n         L     R13,4(,R13)\n         B     EXITQ\nMENUOK   L     R4,PARMSUBP    LOAD SUBPOOL NUMBER FOR GETMAIN\n         SR    R6,R6\n         IC    R6,0(,R4)\n         L     R5,GETMAINL    LENGTH OF THE GETMAINED AREA\n         GETMAIN R,LV=(R5),SP=(R6)\n         ST    R1,8(,R13)     SAVE FORWARD POINTER\n         ST    R13,4(,R1)     SAVE BACKWARD POINTER\n         LR    R13,R1         SET UP REGISTER FOR SAVE AREA\n         USING GETMAINA,R13\n         ST    R3,PARMFLDA    SAVE ADDRESS OF RMF PARAMETERS\n         ST    R13,GOTMAINA\n         ST    R6,GOTMAINS\n         DROP  R15\n         BALR  R12,0\n         USING *,R12\n         MVC   EYECATCH(L'EYELIT),EYELIT\n         MVC   PUTLPLCB,PARMPLCB MOVE IN PUTLINE CONTROL BLOCK ADDRESS\n         OI    PUTLPLCB,X'80'\n         L     R5,PARMPUTL    MOVE IN PUTLINE ENTRY ADDRESS\n         MVC   PUTLINEA,0(R5)\n         LA    R5,L'PRTLINE   SET LENGTH OF DISPLAY\n         STH   R5,PRTDTL\n         LA    R5,DSPLHI      SAVE ADDRESSES FOR THE OPTIONS\n         ST    R5,DSPLHIA\n         LA    R5,DSPLLOW\n         ST    R5,DSPLLOWA\n         LA    R5,HDRLHD\n         ST    R5,HDRLHDA\n         LA    R5,HDRLDT\n         ST    R5,HDRLDTA\n         MVC   PINDHOLD,=CL4' '\n         LA    R5,16          POINTER TO THE CVT\n         L     R5,0(,R5)\n         USING CVT,R5\n         ST    R5,CVTA        SAVE THE CVT ADDRESS\n         L     R11,CVTOPCTP   POINTER TO THE RMCT\n         DROP  R5\n         USING RMCT,R11\n         CLC   =CL4'RMCT',RMCTNAME IS THE POINTER CORRECT?\n         BE    *+8             YES, CONTINUE\n         SR    R4,R4           NO, BLOW UP\n         DR    R8,R4\n         ST    R11,RMCTA      SAVE ADDRESS OF THE RMCT\n         SPACE 3\n         LA    R8,VALIDOPT    POINTER TO VALID OPTIONS\n         L     R10,PARMOPER   DECIDE THE REPORT TO PRESENT\n         LH    R9,0(,R10)     LOAD LENGTH OF THE REPORT OPTION\n         CH    R9,=H'4'       CHECK FOR THE \"TEST\" OPTION\n         BNE   OPTLOOP\n         SPACE 1\n***********************************************************************\n**                                                                   **\n**  THIS SHORT SECTION ALLOWS DEVELOPING A NEW SUBROUTINE WITHOUT    **\n**  EXCESSIVE IMPACT ON THE OTHER \"USER XXX\" ROUTINES. CODE THE      **\n**  NEW ROUTINE WITH A CSECT NAME AND LOAD MODULE NAME OF \"ERBRUSTS\" **\n**  AND LINK THAT ROUTINE INTO YOUR TSO USERID STEPLIB. ENTER        **\n**  \"USER TEST\" TO TEST THE NEW SUBROUTINE.  WHEN THE NEW SUBROUTINE **\n**  IS CORRECT, CHANGE THE CSECT NAME TO WHATEVER YOU LIKE AND       **\n**  INSERT THE CSECT NAME INTO THE \"VALIDOPT\" TABLE BELOW.  THEN     **\n**  LINK THE NEW SUBROUTINE WITH THIS CSECT AS LOAD MODULE ERBRUS99. **\n**                                                                   **\n***********************************************************************\n         SPACE 1\n         CLC   =C'TEST',2(R10)\n         BNE   OPTLOOP\n         LINK  EP=ERBRUSTS,DCB=0\n         LTR   R15,R15        TEST FOR BAD RETURN CODE\n         BNZ   EXITF\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         LA    R1,HEADE99\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         B     EXIT\n         SPACE 1\nOPTLOOP  LTR   R9,R9\n         BNP   OPTLOOP9\n         BCTR  R9,0\n         CH    R9,=H'2'       USE A MAXIMUM OF THREE CHAR FOR COMPARE\n         BNH   *+8\n         LA    R9,2\n         LA    R8,L'VALIDOPT(,R8)\n         L     R7,VALIDLEN    NUMBER OF ENTRIES\n         BCTR  R7,0\nOPTLOOP1 EX    R9,OPTCOMPR    TEST FOR A MATCH\n         BE    OPTLOOP9\n         LA    R8,L'VALIDOPT(,R8)\n         BCT   R7,OPTLOOP1\n         B     HELPRPT\nOPTLOOP9 L     R15,4(R8)      LOAD ADDRESS OF THE CORRECT MODULE\n         CALL  (15),ID=73\n         B     EXITF\n         SPACE 1\nOPTCOMPR CLC   2(0,R10),0(R8)\n         SPACE 3\nVALIDHD1 DC    H'18',CL18'VALID OPTIONS ARE:'\n         SPACE 1\nVALIDOPT DS    0D             VALID OPTIONS FOR THE \"USER\" COMMAND\nVALIDESC DC    CL4'HELP',V(ERBUSMPL) DEFAULT OPTION--MUST BE FIRST\n         DC    CL4'ASMD',V(ERBUSASM) ASM DATA SETS\n         DC    CL4'MPLC',V(ERBUSMPL) MPL ADJUSTMENT CONSTANTS\nVALIDEND DS    0C\n         SPACE 1\nVALIDLEN DC    A((VALIDEND-VALIDOPT)/L'VALIDOPT)\n         SPACE 3\nHELPRPT  MVC   PUTLHDRL,HDRLDTA HANDLE INVALID OPTION ON \"USER\"\n         MVC   PUTLDSPL,DSPLHIA\n         LA    R1,VALIDHD1\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         LA    R4,PRTDTL\n         ST    R4,PUTLRECD\n         LA    R7,VALIDOPT    START OF TABLE\n         L     R3,VALIDLEN    LENGTH OF TABLE\nVALIDLOP LA    R5,PRTLINE+1   START OF PRINT LINE\n         LA    R6,1           LENGTH OF THE CURRENT PRINT LINE\n         MVI   PRTLINE,C' '\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\nVALIDLP1 LA    R6,L'VALIDESC+1(,R6) LENGTH AFTER THIS IS ADDED\n         CH    R6,PRTDTL      WILL THIS OPTION FIT ON THE LINE?\n         BH    VALIDLP2         NO, PRINT THIS AND GO TO NEXT\n         MVC   0(L'VALIDESC,R5),0(R7) MOVE IN THE VALID OPTION\n         LA    R7,L'VALIDOPT(,R7)\n         LA    R5,L'VALIDESC+1(,R5)\n         BCT   R3,VALIDLP1\nVALIDLP2 BAL   R4,PUTLINE\n         LTR   R3,R3\n         BNZ   VALIDLOP\n         SPACE 3\nEXIT     SR    R15,R15        NORMAL RETURN\nEXITF    LR    R2,R15         SAVE RETURN CODE\n         L     R6,GOTMAINA\n         L     R5,GETMAINL\n         L     R4,GOTMAINS    LOAD SUBPOOL FOR FREEMAIN\n         L     R13,4(,R13)    RESTORE REGISTER 13\n         FREEMAIN R,SP=(R4),LV=(R5),A=(R6)\n         LR    R15,R2         RESTORE RETURN CODE\nEXITQ    L     R14,12(R13,0)\n         LM    R0,R12,20(R13)\n         MVI   12(R13),X'FF'\n         BR    R14\n         SPACE 1\nPUTLINE  LA    R1,PUTLRECD    LOAD ADDRESS OF PARAMETERS\n         L     R15,PUTLINEA   ADDRESS OF PUTLINE ROUTINE\n         BALR  R14,R15        GO DISPLAY THE REQUEST\n         LTR   R15,R15        WAS THE PUTLINE SUCCESSFUL?\n         BZR   R4              YES, CONTINUE THE PROCESSING\n         LA    R15,12          NO, RETURN TO RMF CONTROL\n         B     EXITF\n         SPACE 3\nGETMAINL DC    A(GETMAINE-GETMAINA) LENGTH OF THE GETMAINED AREA\nDSPLHI   DC    X'80'          HIGH INTENSITY DISPLAY\nDSPLLOW  DC    X'00'          LOW INTENSITY DISPLAY\nHDRLHD   DC    C'HD'          RECORD IS A HEADER LINE\nHDRLDT   DC    C'DT'          RECORD IS A DETAIL LINE\nEYELIT   DC    CL16' ERBRUS99 DATA'\n         SPACE 1\nHEADE99  DC    H'79',CL80'1234567810123456782012345678301234567840123456\n               6785012345678601234567870123456789'\n         SPACE 1\n         LTORG\n         SPACE 3\n*  IGNORE ANY ASSEMBLY ERRORS IN THIS MACRO\n         PRINT GEN\n         IRARMCT\n         SPACE 3\n         ERBUSDTA\n         SPACE 3\n         PRINT NOGEN\n         REGS\n         CVT   DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ERBUSASM": {"ttr": 524, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "ERBUSASM TITLE 'ERBUSASM -- RMF USER ASM DATA SET REPORT'\n***********************************************************************\n**                                                                   **\n**     THIS MODULE MUST BE LINK EDITED INTO MODULE \"ERBRUS99\" AS     **\n**     \"RENT\".  THIS ASSEMBLY REQUIRES THE \"AAPVT\" COMPONENT FROM    **\n**     THE SYSTEM OPTIONAL MACHINE READABLE MATERIAL AS A MACLIB.    **\n**                                                                   **\n**     MVS/SE2 MVS/SP1.1.0 MVS/SP1.1.1 MVS/SP1.3.1 MVS/SP1.3.2       **\n**     MVS/SP1.3.3 MVS/SP1.3.4                                       **\n**                                                                   **\n***********************************************************************\nERBUSASM CSECT\n         USING *,15\n         B     BYMODULE\n         DC    AL1(23)\n         DC    CL8'ERBUSASM'\n         DC    CL7' &SYSTIME'\n         DC    CL8'&SYSDATE'\n         DC    C' MVS/SE2'\n         PRINT NOGEN\nBYMODULE SAVE  (14,12)\n         USING GETMAINA,R13\n         LA    R1,SAVEARE1\n         ST    R1,8(,R13)\n         ST    R13,4(,R1)\n         LR    R13,R1\n         DROP  R13,R15\n         USING SAVEARE1,R13\n         BALR  R12,0\n         USING *,R12\n         SPACE 3\n         L     R5,CVTA        ADDRESS OF THE CVT\n         USING CVT,R5\n         L     R10,CVTASMVT   POINTER TO THE ASMVT\n         DROP  R5\n         USING ASMVT,R10\n         L     R9,ASMPART     POINTER TO THE PART\n         USING PART,R9\n         CLC   =CL4'PART',PARTIDEN IS THE POINTER CORRECT?\n         BE    *+8             YES, CONTINUE\n         SR    R4,R4           NO, BLOW UP\n         DR    R8,R4\n         MVC   PUTLHDRL,HDRLHDA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLHIA\n         LA    R1,ASMDHDR1\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         TM    ASMFLAG1,ASMNODPX TEST FOR DUPLEXING SUSPENDED\n         BNO   ASMVTER1\n         LA    R1,ASMDERR2\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\nASMVTER1 TM    ASMFLAG1,ASMPLPAF TEST FOR PLPA DATA SET FULL\n         BNO   ASMVTER2\n         LA    R1,ASMDERR3\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\nASMVTER2 TM    ASMFLAG1,ASMCOMMF TEST FOR COMMON PAGE DATA SET FULL\n         BNO   ASMVTER3\n         LA    R1,ASMDERR4\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\nASMVTER3 TM    ASMFLAG1,ASMPLPAS TEST FOR PLPA SPILL AT IPL\n         BNO   ASMVTER4\n         LA    R1,ASMDERR5\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\nASMVTER4 TM    ASMFLAG2,ASMNOSAV TEST FOR SYS1.STGINDEX UNAVAILABLE\n         BNO   ASMVTNM1\n         LA    R1,ASMDERR6\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\nASMVTNM1 MVC   PUTLDSPL,DSPLLOWA\n         TM    ASMFLAG2,ASMQUICK TEST FOR CLPA AT LAST IPL\n         BO    ASMVTNM9\n         LA    R1,ASMDNML1\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\nASMVTNM9 MVI   PRTLINE,C' '                       PAGE DATA SETS HEADER\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   PRTLINE(32),=CL32'PAGE DATA SETS:  SERVICE BURST ='\n         SR    R4,R4\n         L     R5,ASMBURST\n         D     R4,=F'1000'    CONVERT TO MILLISECONDS\n         CVD   R5,AVGVALUE\n         MVC   PRTLINE+32(L'MASKL6),MASKL6\n         ED    PRTLINE+32(L'MASKL6),AVGVALUE+5\n         MVC   PRTLINE+39(2),=CL2'MS'\n         L     R4,ASMIOCNT    SIO COUNT NOT COMPLETE ***DELETED SP1.3.X\n         LTR   R4,R4            CATCH ANYTHING?\n         BZ    ASMDRPT1         NO, SKIP IT\n         CVD   R4,AVGVALUE\n         MVC   PRTLINE+44(16),=CL16'SIO NOT COMPLETE'\n         MVC   PRTLINE+62(L'MASKL4),MASKL4\n         ED    PRTLINE+62(L'MASKL4),AVGVALUE+6\nASMDRPT1 L     R4,ASMSRBCT    SRB COUNT NOT COMPLETE ***DELETED SP1.3.X\n         LTR   R4,R4\n         BZ    ASMDRPT2\n         CVD   R4,AVGVALUE\n         MVC   PRTLINE+69(8),=CL8'SRB \u00acCMP'\n         MVC   PRTLINE+77(2),=XL2'4021'\n         ED    PRTLINE+77(2),AVGVALUE+7\nASMDRPT2 MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLHIA\n         LA    R1,PRTDTL\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         LA    R1,ASMDHDR2\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         SR    R4,R4          COUNT OF NUMBER OF ENTRIES\n         ST    R4,LOWTHRES\n         LA    R8,PARTENTS\n         USING PARTENT,R8\nASMDDLP1 TM    PAREFLG1,PARENUSE IS THIS PARTE IN USE?\n         BO    ASMDDLP9         NO, SKIP IT\n         MVI   PRTLINE,C' '                       PAGE DATA SETS DETAIL\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         L     R3,PARESZSL    NUMBER OF SLOTS IN DATASET\n         CVD   R3,AVGVALUE\n         MVC   M4SLOTS,MASKL8\n         ED    M4SLOTS,AVGVALUE+4\n         TM    PARETYPE,PAREPLPA WHAT TYPE PAGE DATA SET IS THIS?\n         BNO   *+10\n         MVC   M4TYPE,=CL6'PLPA'\n         TM    PARETYPE,PARECOMM\n         BNO   *+10\n         MVC   M4TYPE,=CL6'COMMON'\n         TM    PARETYPE,PAREDPLX\n         BNO   *+10\n         MVC   M4TYPE,=CL6'DUPLEX'\n         TM    PARETYPE,PARELOCL\n         BNO   *+10\n         MVC   M4TYPE,=CL6'LOCAL'\n         TM    PAREFLG1,PAREDSBD IS THIS DATASET OK?\n         BO    ASMDDLP5            NO, SAY SO\n         LR    R5,R3          % OF PAGE DATA SET USED\n         S     R5,PARESLTA\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         MVC   M4USED(L'MASKL4PC),MASKL4PC\n         ED    M4USED,AVGVALUE+6\n         B     ASMDDLP6\nASMDDLP5 MVC   M4SLOTS+2(10),=CL10'BAD DATAST'\nASMDDLP6 TM    PAREFLG1,PAREINCP IS DUPLEX INTERCEPT ACTIVE?\n         BNO   ASMDDLP7            NO, FORGET IT\n         TM    ASMFLAG1,ASMDUPLX   MAYBE, TEST MORE\n         BNO   ASMDDLP7              NO, FORGET IT\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLHIA\n         LA    R1,ASMDERR1\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\nASMDDLP7 L     R5,PAREUCBP    FIND VOLUME SERIAL NUMBER\n         USING UCBCMSEG,R5\n         MVC   M4VOLSER,UCBVOLI\n         DROP  R5\n         L     R6,PAREPCTP    FIND THE DEVICE TYPE\n         USING PCT,R6\n         CLC   =CL4'PCT ',PCTID IS THE POINTER CORRECT?\n         BE    *+8             YES, CONTINUE\n         SR    R4,R4           NO, BLOW UP\n         DR    R8,R4\n         MVC   M4DEVTYP,PCTDTYPE\n         DROP  R6\n         L     R5,PARERRCT    FIND THE NUMBER OF PERM I/O ERRORS\n         CVD   R5,AVGVALUE\n         MVC   M4IOERR,MASKL8\n         ED    M4IOERR,AVGVALUE+4\n         LH    R5,PARENN      MOVE IN DATA SET NAME\n         M     R4,=F'44'\n         L     R4,PARTDSNL\n         LA    R5,0(R4,R5)\n         MVC   M4DSN,0(R5)\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLLOWA\n         LA    R1,PRTDTL\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\nASMDDLP9 LA    R8,L'PARTENT(,R8) SET UP FOR NEXT ENTRY\n         L     R3,LOWTHRES    CHECK FOR END OF TABLE\n         LA    R3,1(,R3)        INCREMENT BY ONE\n         LH    R4,PARENN      CHECK FOR END OF TABLE\n         ST    R4,LOWTHRES\n         C     R3,PARTEUSE\n         BL    ASMDDLP1\n         DROP  R8\n         MVI   PRTLINE,C' '                LOCAL PAGE DATA SETS SUMMARY\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         L     R3,ASMSLOTS    TOTAL LOCAL SLOTS IN ALL LOCALS\n         CVD   R3,AVGVALUE\n         MVC   M4SLOTS,MASKL8\n         ED    M4SLOTS,AVGVALUE+4\n         LR    R5,R3          % OF LOCAL PAGE SPACE USED\n         S     R5,ASMBKSLT\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         MVC   M4USED(L'MASKL4PC),MASKL4PC\n         ED    M4USED,AVGVALUE+6\n         L     R4,ASMERRS     BAD SLOTS FOUND ON LOCAL DATA SETS\n         CVD   R4,AVGVALUE\n         MVC   M4IOERR,MASKL8\n         ED    M4IOERR,AVGVALUE+4\n         MVC   M4DSN(28),=CL28' LOCAL PAGE DATA SET SUMMARY'\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '            LOCAL PAGE DATA SETS VIO SUMMARY\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         L     R5,ASMVSC      TOTAL LOCAL SLOTS ALLOCATED TO VIO\n         CVD   R5,AVGVALUE\n         MVC   M4SLOTS,MASKL8\n         ED    M4SLOTS,AVGVALUE+4\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         MVC   M4USED(L'MASKL4PC),MASKL4PC\n         ED    M4USED,AVGVALUE+6\n         MVC   M4VOLSER(31),=CL31' LOCAL PAGE DATA SET VIO IMPACT'\n         BAL   R4,PUTLINE\n         L     R9,ASMSART     POINTER TO THE SART\n         USING SART,R9\n         CLC   =CL4'SART',SARID IS THE POINTER CORRECT?\n         BE    *+8             YES, CONTINUE\n         SR    R4,R4           NO, BLOW UP\n         DR    R8,R4\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLLOWA\n         LA    R1,HEADER0\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '                       PAGE DATA SETS HEADER\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   PRTLINE(33),=CL33'SWAP DATA SETS:  NO. PAGES/SLOT ='\n         L     R5,SARSETSZ\n         CVD   R5,AVGVALUE\n         MVC   PRTLINE+33(L'MASKL4),MASKL4\n         ED    PRTLINE+33(L'MASKL4),AVGVALUE+6\n         L     R4,SARSRBCT    SRB COUNT NOT COMPLETE\n         LTR   R4,R4\n         BZ    ASMSRPT1\n         CVD   R4,AVGVALUE\n         MVC   PRTLINE+69(8),=CL8'SRB \u00acCMP'\n         MVC   PRTLINE+77(2),=XL2'4021'\n         ED    PRTLINE+77(2),AVGVALUE+7\nASMSRPT1 MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLHIA\n         LA    R1,PRTDTL\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         L     R4,SARUSE      ARE THERE ANY SWAP DATASETS?\n         LTR   R4,R4\n         BNP   SWPCOD0\n         LA    R1,ASMSHDR2\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         LA    R8,SARENTS\n         SR    R4,R4          COUNT OF NUMBER OF ENTRIES\n         ST    R4,LOWTHRES\n         ST    R4,HIGTHRES\n         USING SARTE,R8\nASMSDLP1 TM    SREFLG,SRENUSE IS THIS SARTE IN USE?\n         BO    ASMSDLP9         NO, SKIP IT\n         MVI   PRTLINE,C' '                       PAGE DATA SETS DETAIL\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         L     R3,SRETOTSL    NUMBER OF SLOTS IN DATASET\n         CVD   R3,AVGVALUE\n         MVC   M4SLOTS,MASKL8\n         ED    M4SLOTS,AVGVALUE+4\n         L     R4,HIGTHRES      TOTAL NUMBER OF SWAP SETS ON SYSTEM\n         AR    R4,R3\n         ST    R4,HIGTHRES\n         TM    SREFLG,SREDSBD IS THIS DATASET OK?\n         BO    ASMSDLP5            NO, SAY SO\n         LR    R5,R3          % OF PAGE DATA SET USED\n         S     R5,SREAVLSL\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         MVC   M4USED(L'MASKL4PC),MASKL4PC\n         ED    M4USED,AVGVALUE+6\n         B     ASMSDLP6\nASMSDLP5 MVC   M4SLOTS+2(10),=CL10'BAD DATAST'\nASMSDLP6 L     R5,SREUCB      FIND VOLUME SERIAL NUMBER\n         USING UCBCMSEG,R5\n         MVC   M4VOLSER,UCBVOLI\n         DROP  R5\n         L     R6,SRESDCTE    FIND THE DEVICE TYPE\n         MVC   M4DEVTYP,0(R6)\n         L     R5,SRERRCNT    FIND THE NUMBER OF PERM I/O ERRORS\n         CVD   R5,AVGVALUE\n         MVC   M4IOERR,MASKL8\n         ED    M4IOERR,AVGVALUE+4\n         LH    R5,SRENN      MOVE IN DATA SET NAME\n         M     R4,=F'44'\n         L     R4,SARDSNL\n         LA    R5,0(R4,R5)\n         MVC   M4DSN,0(R5)\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLLOWA\n         LA    R1,PRTDTL\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\nASMSDLP9 LA    R8,L'SARTE(,R8) SET UP FOR NEXT ENTRY\n         L     R3,LOWTHRES    CHECK FOR END OF TABLE\n         LA    R3,1(,R3)        INCREMENT BY ONE\n         LH    R4,SRENN      CHECK FOR END OF TABLE\n         ST    R4,LOWTHRES\n         C     R3,SARUSE\n         BL    ASMSDLP1\n         DROP  R8\n         MVI   PRTLINE,C' '                       SWAP DATA SET SUMMARY\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         L     R3,HIGTHRES    TOTAL SLOTS IN ALL SWAP DATA SETS\n         CVD   R3,AVGVALUE\n         MVC   M4SLOTS,MASKL8\n         ED    M4SLOTS,AVGVALUE+4\n         LR    R5,R3          % OF SWAP SPACE USED\n         S     R5,SARSETCT\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         MVC   M4USED(L'MASKL4PC),MASKL4PC\n         ED    M4USED,AVGVALUE+6\n         MVC   M4VOLSER(28),=CL28' SWAP DATA SET SUMMARY'\n         DROP  R9,R10\n         BAL   R4,PUTLINE\nSWPCOD0  L     R11,RMCTA      POINTER TO THE RMCT\n         USING RMCT,R11\n         L     R10,RMCTRMCA   POINTER TO THE RMCA\n         USING RMCA,R10\n         CLC   =CL4'RMCA',RMCANAME IS THE POINTER CORRECT?\n         BE    *+8             YES, CONTINUE\n         SR    R4,R4           NO, BLOW UP\n         DR    R8,R4\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLLOWA\n         LA    R1,HEADER0\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         MVC   PUTLDSPL,DSPLHIA\n         LA    R1,SWPCHDR1\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         LA    R1,SWPCHDR2\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '                       SWAP COUNTS BY REASON\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         SR    R3,R3          FIND THE TOTAL OF ALL OF THEM\n         L     R4,RMCATOSC\n         A     R4,RMCATISC\n         CVD   R4,AVGVALUE\n         AR    R3,R4\n         MVC   M5TOSC,MASKL8\n         ED    M5TOSC,AVGVALUE+4\n         L     R4,RMCALWSC\n         CVD   R4,AVGVALUE\n         AR    R3,R4\n         MVC   M5LWSC,MASKL8\n         ED    M5LWSC,AVGVALUE+4\n         L     R4,RMCAXSSC\n         CVD   R4,AVGVALUE\n         AR    R3,R4\n         MVC   M5XSSC,MASKL6\n         ED    M5XSSC,AVGVALUE+5\n         L     R4,RMCARSSC\n         CVD   R4,AVGVALUE\n         AR    R3,R4\n         MVC   M5RSSC,MASKL6\n         ED    M5RSSC,AVGVALUE+5\n         L     R4,RMCARQSC\n         CVD   R4,AVGVALUE\n         AR    R3,R4\n         MVC   M5RQSC,MASKL6\n         ED    M5RQSC,AVGVALUE+5\n         L     R4,RMCADWSC\n         CVD   R4,AVGVALUE\n         AR    R3,R4\n         MVC   M5DWSC,MASKL8\n         ED    M5DWSC,AVGVALUE+4\n         L     R4,RMCANQSC\n         CVD   R4,AVGVALUE\n         AR    R3,R4\n         MVC   M5NQSC,MASKL6\n         ED    M5NQSC,AVGVALUE+5\n         L     R4,RMCAEXSC\n         CVD   R4,AVGVALUE\n         AR    R3,R4\n         MVC   M5EXSC,MASKL6\n         ED    M5EXSC,AVGVALUE+5\n         L     R4,RMCAUSSC\n         CVD   R4,AVGVALUE\n         AR    R3,R4\n         MVC   M5USSC,MASKL6\n         ED    M5USSC,AVGVALUE+5\n         L     R4,RMCATSSC\n         CVD   R4,AVGVALUE\n         AR    R3,R4\n         MVC   M5TSSC,MASKL6\n         ED    M5TSSC,AVGVALUE+5\n         L     R4,RMCALSSC\n         CVD   R4,AVGVALUE\n         MVC   M5LSSC,MASKL8\n         ED    M5LSSC,AVGVALUE+4\n         L     R4,RMCALFSC\n         CVD   R4,AVGVALUE\n         MVC   M5LFSC,MASKL6\n         ED    M5LFSC,AVGVALUE+5\n         MVC   PUTLDSPL,DSPLLOWA\n         LA    R1,PRTDTL\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '                            SWAP % BY REASON\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         LTR   R3,R3\n         BZ    SWPCOD12\n         L     R5,RMCATOSC\n         A     R5,RMCATISC\n         SR    R4,R4\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         BZ    SWPCOD1\n         MVC   M5TOSC+3(L'MASKL4PC),MASKL4PC\n         ED    M5TOSC+3(L'MASKL4PC-1),AVGVALUE+6\nSWPCOD1  L     R5,RMCALWSC\n         SR    R4,R4\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         BZ    SWPCOD2\n         MVC   M5LWSC+3(L'MASKL4PC),MASKL4PC\n         ED    M5LWSC+3(L'MASKL4PC-1),AVGVALUE+6\nSWPCOD2  L     R5,RMCAXSSC\n         SR    R4,R4\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         BZ    SWPCOD3\n         MVC   M5XSSC+1(L'MASKL4PC),MASKL4PC\n         ED    M5XSSC+1(L'MASKL4PC-1),AVGVALUE+6\nSWPCOD3  L     R5,RMCARSSC\n         SR    R4,R4\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         BZ    SWPCOD4\n         MVC   M5RSSC+1(L'MASKL4PC),MASKL4PC\n         ED    M5RSSC+1(L'MASKL4PC-1),AVGVALUE+6\nSWPCOD4  L     R5,RMCARQSC\n         SR    R4,R4\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         BZ    SWPCOD5\n         MVC   M5RQSC+1(L'MASKL4PC),MASKL4PC\n         ED    M5RQSC+1(L'MASKL4PC-1),AVGVALUE+6\nSWPCOD5  L     R5,RMCADWSC\n         SR    R4,R4\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         BZ    SWPCOD6\n         MVC   M5DWSC+3(L'MASKL4PC),MASKL4PC\n         ED    M5DWSC+3(L'MASKL4PC-1),AVGVALUE+6\nSWPCOD6  L     R5,RMCANQSC\n         SR    R4,R4\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         BZ    SWPCOD7\n         MVC   M5NQSC+1(L'MASKL4PC),MASKL4PC\n         ED    M5NQSC+1(L'MASKL4PC-1),AVGVALUE+6\nSWPCOD7  L     R5,RMCAEXSC\n         SR    R4,R4\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         BZ    SWPCOD8\n         MVC   M5EXSC+1(L'MASKL4PC),MASKL4PC\n         ED    M5EXSC+1(L'MASKL4PC-1),AVGVALUE+6\nSWPCOD8  L     R5,RMCAUSSC\n         SR    R4,R4\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         BZ    SWPCOD9\n         MVC   M5USSC+1(L'MASKL4PC),MASKL4PC\n         ED    M5USSC+1(L'MASKL4PC-1),AVGVALUE+6\nSWPCOD9  L     R5,RMCATSSC\n         SR    R4,R4\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         BZ    SWPCOD10\n         MVC   M5TSSC+1(L'MASKL4PC),MASKL4PC\n         ED    M5TSSC+1(L'MASKL4PC-1),AVGVALUE+6\nSWPCOD10 L     R5,RMCALFSC\n         SR    R4,R4\n         M     R4,=F'1000'\n         CLC   RMCALSSC,=F'0'\n         BE    SWPCOD11\n         D     R4,RMCALSSC\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         BZ    SWPCOD1\n         MVC   M5LFSC+1(L'MASKL4PC),MASKL4PC\n         ED    M5LFSC+1(L'MASKL4PC-1),AVGVALUE+6\nSWPCOD11 BAL   R4,PUTLINE\nSWPCOD12 CLC   RMCADFCT,=F'0'                       SWAP IN FAIL COUNTS\n         BNE   SWPCOD13\n         CLC   RMCASFCT,=F'0'\n         BE    SWPCOD14\nSWPCOD13 MVI   PRTLINE,C' '\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M5TOSC(25),=CL25'SWAP IN FAIL--THRESHOLD ='\n         LH    R4,RMCASFET\n         CVD   R4,AVGVALUE\n         MVC   M5TOSC+25(L'MASKL6),MASKL6\n         ED    M5TOSC+25(L'MASKL6),AVGVALUE+5\n         MVC   M5TOSC+35(16),=CL16'DEFERRED USERS ='\n         LH    R4,RMCADFCT\n         CVD   R4,AVGVALUE\n         MVC   M5TOSC+51(L'MASKL6),MASKL6\n         ED    M5TOSC+51(L'MASKL6),AVGVALUE+5\n         MVC   M5TOSC+58(13),=CL13'SYSTEM FAIL ='\n         LH    R4,RMCASFCT\n         CVD   R4,AVGVALUE\n         MVC   M5TOSC+72(L'MASKL6),MASKL6\n         ED    M5TOSC+72(L'MASKL6),AVGVALUE+5\n         BAL   R4,PUTLINE\nSWPCOD14 CLC   RMCAFHLD,=F'0'                       SWAP IN FAIL COUNTS\n         BE    SWPCOD15\n         MVI   PRTLINE,C' '\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M5TOSC(16),=CL16'HOLD SYSEVENTS ='\n         L     R4,RMCANHLD\n         CVD   R4,AVGVALUE\n         MVC   M5TOSC+16(L'MASKL8),MASKL8\n         ED    M5TOSC+16(L'MASKL8),AVGVALUE+4\n         MVC   M5TOSC+26(28),=CL28'RESULTING SWAP TURN AROUND ='\n         L     R4,RMCAFHLD\n         CVD   R4,AVGVALUE\n         MVC   M5TOSC+54(L'MASKL8),MASKL8\n         ED    M5TOSC+54(L'MASKL8),AVGVALUE+4\n         BAL   R4,PUTLINE\nSWPCOD15 B     EXIT\nASMDHDR1 DC    H'45',CL45'                                ASM DATA SETSX\n               '\nASMDHDR2 DC    H'79',CL80' TYPE   SLOTS USED VOLSER DEVTYP BAD SLOT    X\n                     DATA SET NAME               '\nASMDERR1 DC    H'56',CL56'PLPA OR COMMON DATA SET NOT AVAILABLE--DUPLEXX\n               ING IN USE'\nASMDERR2 DC    H'38',CL38'ASMNODPX--DUPLEXING HAS BEEN SUSPENDED'\nASMDERR3 DC    H'32',CL32'ASMPLPAF--PLPA DATA SET IS FULL'\nASMDERR4 DC    H'38',CL38'ASMCOMMF--COMMON PAGE DATA SET IS FULL'\nASMDERR5 DC    H'44',CL44'ASMPLPAS--PLPA DATA SPILLED TO COMMON AT IPL'\nASMDERR6 DC    H'44',CL44'ASMNOSAV--SYS1.STGINDEX UNAVAILABLE OR FULL'\nASMDNML1 DC    H'42',CL42'ASMQUICK--A CLPA WAS DONE AT THE LAST IPL'\n         SPACE 1\nASMSHDR2 DC    H'79',CL80'   SWAP SETS  USED VOLSER DEVTYP BAD SETS    X\n                     DATA SET NAME               '\n         SPACE 1\nSWPCHDR1 DC    H'22',CL22'SWAP COUNTS BY REASON:'\nSWPCHDR2 DC    H'79',CL80' TERM-WT LONG-WT AUXST REALS  DET-WT  REQ ENQX\n               -X RECOM UNLAT TRANS LOGIC-SW FAIL'\n         SPACE 2\nEXIT     SR    R15,R15\nEXITF    L     R13,4(,R13)    RESTORE REGISTER 13\n         L     R14,12(0,R13)\n         LM    R0,R12,20(R13)\n         MVI   12(R13),X'FF'\n         BR    R14\n         SPACE 1\nPUTLINE  LA    R1,PUTLRECD    LOAD ADDRESS OF PARAMETERS\n         L     R15,PUTLINEA   ADDRESS OF PUTLINE ROUTINE\n         BALR  R14,R15        GO DISPLAY THE REQUEST\n         LTR   R15,R15        WAS THE PUTLINE SUCCESSFUL?\n         BZR   R4              YES, CONTINUE THE PROCESSING\n         LA    R15,12          NO, RETURN TO RMF CONTROL\n         B     EXITF\n         SPACE 3\nMASKL6   DC    XL6'402020202120'\nMASKL4   DC    XL4'40202120'\nMASKL4PC DC    XL5'402021206C'\nMASKL8   DC    XL8'4020202020202120'\nHEADER0  DC    H'2',C'  '\n         SPACE 1\n         LTORG\n         EJECT\n         PRINT NOGEN\n*  IGNORE ASSEMBLY ERRORS IN THIS MACRO\n         IRARMCT\n         EJECT\n         PRINT GEN\n         ILRASMVT\n         SPACE 3\n         IRARMCA\n         SPACE 3\nPART     DSECT\nPARTIDEN DS    CL4            PART IDENTIFIER\nPARTSIZE DS    F              TOTAL NUMBER OF PART ENTRIES\nPARTEUSE DS    F              NUMBER OF PARTE'S IN USE\nPARTAIAE DS    F              AIA ERROR QUEUE\n         DS    2F             NEXT PARTE QUEUES\nPARTDSNL DS    F              ADDRESS OF DATASET NAME LIST IN CSA\nPARTPCTQ DS    F              ADDRESS OF CHAIN OF PCT'S\nPARTLCNT DS    H              COUNT OF ACTIVE LOCAL PAGE DATASETS\n         DS    H\n         DS    11F\nPARTENTS DS    0F\n         SPACE 1\nPARTENTX DSECT\nPARTENT  DS    0CL64        PART ENTRY REPRESENTING A PAGE DATA SET\nPAREPARE DS    F              POINTER TO NEXT PARTE IN USE\nPARELKUP DS    F              LOCK FOR THIS PARTE\nPARETYPE DS    X              PAGE DATA SET TYPE FLAGS\nPAREPLPA EQU   B'10000000'      PARTE FOR PLPA DATA SET\nPARECOMM EQU   B'01000000'      PARTE FOR COMMON DATA SET\nPAREDPLX EQU   B'00100000'      PARTE FOR DUPLEX COMMON DATA SET\nPARELOCL EQU   B'00010000'      PARTE FOR LOCAL DATA SET\nPAREFLG1 DS    X              PARTE FLAGS\nPARENUSE EQU   B'10000000'     PARTE NOT IN USE\nPAREDSBD EQU   B'01000000'     DATA SET BAD FLAG\nPAREINCP EQU   B'00100000'     INTERCEPTED FLAG\nPARENN   DS    H              PART NUMBER FOR THIS PARTE\nPAREIOEQ DS    F              ADDRESS OF FIRST IOE ON UNSORTED QUEUE\nPARESZSL DS    F              SIZE OF PAGE DATASET IN SLOTS\nPARESLTA DS    F              NUMBER OF SLOTS AVAILABLE\nPARERRCT DS    F              NUMBER OF PERM I/O ERRORS ON DATASET\nPAREIORB DS    F              POINTER TO FIRST IORB\nPAREPATP DS    F              POINTER TO PAT FOR THIS PAGE DATA SET\nPAREPCTP DS    F              POINTER TO PCT FOR THIS PAGE DATASET TYPE\nPAREEDBP DS    F              POINTER TO EDB FOR PAGE DATA SET\nPAREUCBP DS    F              POINTER TO UCB FOR PAGE DATA SET\n         SPACE 3\nSART     DSECT\nSARID    DS    CL4            SART IDENTIFIER\nSARSIZE  DS    F              TOTAL NUMBER OF SART ENTRIES\nSARUSE   DS    F              NUMBER OF SARTE'S IN USE\n         DS    3F\nSARDSNL  DS    F              ADDRESS OF DATASET NAME LIST IN CSA\nSARSDCT  DS    F              ADDRESS OF SWAP DEVICE TABLE\n         DS    F\nSARSETCT DS    F              NUMBER OF SWAP SETS AVAILABLE\n         DS    3F\nSARSRBCT DS    F              SRBS SCHEDULED BUT NOT DISPATCHED\nSARSETSZ DS    F              NO OF PAGES/SLOT IN SWAP SET\n         DS    5F\nSARENTS  DS    0F\n         SPACE 1\nSARTEX   DSECT\nSARTE    DS    0CL48        SART ENTRY REPRESENTING A SWAP DATA SET\nSRENEXT  DS    F              POINTER TO NEXT SARTE IN CIRCULAR CHAIN\nSRELOCK  DS    F              LOCK TO SERIALIZE SWAP\n         DS    X\nSREFLG   DS    X              SARTE FLAGS\nSRENUSE  EQU   B'10000000'     SARTE NOT IN USE\nSREDSBD  EQU   B'01000000'     DATA SET BAD FLAG\nSREFIXED EQU   B'00010000'     FIXED HEAD FILE FLAG\nSRENN    DS    H              SART NUMBER FOR THIS SARTE\n         DS    F\nSRETOTSL DS    F              NUMBER OF SWAP SETS IN THIS DATA SET\nSREAVLSL DS    F              AVAILABLE SWAP SETS ON THIS DATA SET\nSRERRCNT DS    F              ERROR SWAP SETS ON THIS DATA SET\n         DS    F\nSRESAT   DS    F              POINTER TO SAT FOR THIS SWAP DATA SET\nSRESDCTE DS    F              POINTER TO SDCTE FOR THIS SWAP DATA SET\nSREEDB   DS    F              POINTER TO EDB FOR SWAP DATA SET\nSREUCB   DS    F              POINTER TO UCB FOR SWAP DATA SET\n         SPACE 3\nPCT      DSECT\nPCTID    DS    CL4            PCT IDENTIFIER\nPCTDTYPE DS    CL6            DEVICE TYPE IN EBCDIC\n         SPACE 3\n         ERBUSDTA\n         ORG   PRTLINE\nM4TYPE   DS    CL6            TYPE OF PAGE DATASET\n         ORG   *-1\nM4SLOTS  DS    CL8            SLOTS ON THE DEVICE\nM4USED   DS    CL4            % OF DATA SET THAT IS USED\n         DS    CL2\nM4VOLSER DS    CL6            VOLUME SERIAL OF THE DATA SET\n         DS    C\nM4DEVTYP DS    CL6            DEVICE TYPE OF THE DATA SET\nM4IOERR  DS    CL8            NUMBER OF PERM I/O ERRORS ON DATA SET\n         DS    C\nM4DSN    DS    CL38           DATA SET NAME\n         ORG   PRTLINEE\n         ORG   PRTLINE\nM5TOSC   DS    CL8            SWAP COUNTS\nM5LWSC   DS    CL8\nM5XSSC   DS    CL6\nM5RSSC   DS    CL6\nM5DWSC   DS    CL8\n         ORG   *-1\nM5RQSC   DS    CL6\nM5NQSC   DS    CL6\nM5EXSC   DS    CL6\nM5USSC   DS    CL6\nM5TSSC   DS    CL6\nM5LSSC   DS    CL8\nM5LFSC   DS    CL6\n         ORG   PRTLINEE\n         SPACE 3\n         PRINT NOGEN\n         REGS\n         IEFUCBOB\n         CVT   DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ERBUSDTA": {"ttr": 777, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n         ERBUSDTA\nPARMFLD  DSECT\nPARMCODE DS    F              ENTRY CODE\nPARMMODE DS    F              REPORT MODE INDICATOR\nPARMOPER DS    F              OPERANDS SPECIFIED BY USER\nPARMDFLT DS    F              DEFAULT OPERANDS\nPARMCSMF DS    F              CURRENT SMF BUFFER\nPARMPSMF DS    F              PREVIOUS SMF BUFFER\nPARMUSR1 DS    F              USER FIELD 1\nPARMUSR2 DS    F              USER FIELD 2\nPARMSUBP DS    F              NUMBER OF SUBPOOL OF GETMAINS\nPARMPUTL DS    F              ADDRESS OF THE RMF PUTLINE ROUTINE\nPARMPLCB DS    F              CONTROL BLOCK ADDRESS TO PUTLINE ROUTINE\n         SPACE 3\nGETMAINA DSECT\nSAVEAREA DS    9D             SAVE AREA\nSAVEARE1 DS    9D             SAVE AREA FOR CALLED ROUTINES\nEYECATCH DS    2D             EYE CATCHER IN DUMP FOR THIS AREA\nAVGVALUE DS    D              AVERAGE VALUE HOLD AREA\nPUTLRECD DS    F              RECORD THAT HAS BEEN FORMATTED\nPUTLHDRL DS    F              'HD' OR 'DT' RECORD\nPUTLDSPL DS    F              HIGH OR LOW INTENSITY\nPUTLPLCB DS    F              CONTROL BLOCK ADDRESS TO PUTLINE ROUTINE\nDSPLHIA  DS    F              ADDRESS FOR HIGH INTENSITY DISPLAY\nDSPLLOWA DS    F              ADDRESS FOR LOW INTENSITY DISPLAY\nHDRLHDA  DS    F              ADDRESS FOR RECORD IS A MPLHDR LINE\nHDRLDTA  DS    F              ADDRESS FOR RECORD IS A DETAIL LINE\nPUTLINEA DS    F              ADDRESS OF THE PUTLINE ROUTINE\nGOTMAINA DS    F              ADDRESS OF THIS AREA\nGOTMAINS DS    F              STORAGE SUBPOOL OF THIS AREA\nWRKMAINA DS    F              ADDRESS OF CONTROL BLOCK AREA FOR DEBUG\nWRKMAINS DS    F              SUBPOOL OF CONTROL BLOCK AREA FOR DEBUG\nPARMFLDA DS    F              ADDRESS OF THE RMF PARMFLD AREA\nRMCTA    DS    F              ADDRESS OF THE RMCT\nCVTA     DS    F              ADDRESS OF THE CVT\nLOWTHRES DS    D              LOW THRESHOLD HOLD AREA\nHIGTHRES DS    D              HIGH THRESHOLD HOLD AREA\nPINDHOLD DS    CL4            HOLD AREA FOR THE INDICATOR\n         SPACE 1\nPRTDTL   DS    H              DETAIL LINE FOR DISPLAYING DATA\nPRTLINE  DS    CL79      DISPLAY AREA\nPRTLINEE DS    0C             END OF THE PRINT LINE\nGETMAINE DS    0D\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ERBUSMPL": {"ttr": 779, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "ERBUSMPL TITLE 'ERBUSMPL -- RMF USER MPL ADJUSTMENT CONSTANTS'\n***********************************************************************\n**                                                                   **\n**     THIS MODULE MUST BE LINK EDITED INTO MODULE \"ERBRUS99\" AS     **\n**     \"RENT\".  THIS ASSEMBLY REQUIRES THE \"AAPVT\" COMPONENT FROM    **\n**     THE SYSTEM OPTIONAL MACHINE READABLE MATERIAL AS A MACLIB.    **\n**                                                                   **\n**     MVS/SE2 MVS/SP1.1.0 MVS/SP1.1.1                               **\n**      ALSO WORKS ON MVS/SP1.3.1 BUT DOES NOT PRINT EVERYTHING      **\n**      ALSO WORKS ON MVS/SP1.3.2 BUT DOES NOT PRINT EVERYTHING      **\n**      ALSO WORKS ON MVS/SP1.3.3 BUT DOES NOT PRINT EVERYTHING      **\n**      ALSO WORKS ON MVS/SP1.3.4 BUT DOES NOT PRINT EVERYTHING      **\n**                                                                   **\n***********************************************************************\nERBUSMPL CSECT\n         USING *,15\n         B     BYMODULE\n         DC    AL1(23)\n         DC    CL8'ERBUSMPL'\n         DC    CL7' &SYSTIME'\n         DC    CL8'&SYSDATE'\n         DC    C' MVS/SE2'\n         PRINT NOGEN\nBYMODULE SAVE  (14,12)\n         USING GETMAINA,R13\n         LA    R1,SAVEARE1\n         ST    R1,8(,R13)     SAVE FORWARD POINTER\n         ST    R13,4(,R1)     SAVE BACKWARD POINTER\n         LR    R13,R1         SET UP REGISTER FOR SAVE AREA\n         DROP  R13\n         USING SAVEARE1,R13\n         DROP  R15\n         BALR  R12,0\n         USING *,R12\n         L     R11,RMCTA      POINTER TO THE RMCT\n         USING RMCT,R11\n         SPACE 2\n*     THE FIRST SECTION OF THIS REPORT IS FROM THE \"IRARMRMR\" MODULE.\n         SPACE 1\n         L     R10,RMCTRCT    POINTER TO THE RCT\n         USING RCT,R10\n         CLC   =CL4'RCT',RCTRCT IS THE POINTER CORRECT?\n         BE    *+8             YES, CONTINUE\n         SR    R4,R4           NO, BLOW UP\n         DR    R8,R4\n         MVC   PUTLHDRL,HDRLHDA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLHIA\n         L     R5,RMCTEPBG\n         USING EPAT,R5\n         LA    R5,RMEPBRM2\n         DROP  R5\n         USING RMEP,R5\n         MVI   PRTLINE,C' '  HEADING SECTION -- MPL INVOCATION INTERVAL\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1AVG(24),=CL24'MPL ADJUSTMENT'\n         MVC   M2IND,=CL4' SEC'\n         MVC   M2AVG,MASKL6\n         L     R4,RMEPINT\n         CVD   R4,AVGVALUE\n         SRP   AVGVALUE,64-3,5\n         ED    M2AVG,AVGVALUE+5\n         MVC   M2HT+2(5),=CL5'EVERY'\n         DROP  R5\n         LA    R1,PRTDTL\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLHIA\n         LA    R1,MPLHDR2\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- PAGE FAULT RATE\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1AVG,MASKL6   CURRENT AVERAGE\n         LH    R5,RCVPTR\n         CVD   R5,AVGVALUE\n         ED    M1AVG,AVGVALUE+5\n         MVC   M1HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCPTRTH\n         CVD   R5,HIGTHRES\n         ED    M1HT,HIGTHRES+5\n         MVC   M1LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCPTRTL\n         CVD   R5,LOWTHRES\n         ED    M1LT,LOWTHRES+5\n         MVC   M1VAR,=CL19'PAGE FAULT RATE'\n         BAL   R4,SETINDIC\n         MVC   M1IND,PINDHOLD\n         MVC   M2AVG,MASKL6        PRINT SECTION -- UNREF. INTVL. COUNT\n         LH    R5,RCVUICA     CURRENT AVERAGE\n         CVD   R5,AVGVALUE\n         ED    M2AVG,AVGVALUE+5\n         MVC   M2HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCUICTH\n         CVD   R5,HIGTHRES\n         ED    M2HT,HIGTHRES+5\n         MVC   M2LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCUICTL\n         CVD   R5,LOWTHRES\n         ED    M2LT,LOWTHRES+5\n         MVC   M2VAR,=CL19'UNREF. INTVL. COUNT'\n         BAL   R4,SETINDID\n         MVC   M2IND,PINDHOLD\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- AUXSTM QUEUE LENGTH\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1AVG,MASKL6   CURRENT AVERAGE\n         LH    R5,RCVASMQA\n         CVD   R5,AVGVALUE\n         ED    M1AVG,AVGVALUE+5\n         MVC   M1HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCASMTH\n         CVD   R5,HIGTHRES\n         ED    M1HT,HIGTHRES+5\n         MVC   M1LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCASMTL\n         CVD   R5,LOWTHRES\n         ED    M1LT,LOWTHRES+5\n         MVC   M1VAR,=CL19'AUXSTM QUEUE LENGTH'\n         BAL   R4,SETINDIC\n         MVC   M1IND,PINDHOLD\n*                                  PRINT SECTION -- DPR & (CPU | PD)\n         LH    R5,RCVMSPP     PAGE DELAY\n         CH    R5,RCCMSPTH\n         BNH   *+10\n         MVC   M2AVG,=CL6' &&PD'\n         LH    R5,RCVCPUA     CPU UTILIZATION\n         CH    R5,RCCCPUPH\n         BNH   *+10\n         MVC   M2HT,=CL6' &&CPU'\n         LH    R5,RCVDPR      DEMAND PAGING RATE\n         CH    R5,RCCDPRTH\n         BNH   *+10\n         MVC   M2LT,=CL6'  DPR'\n         CLC   M2LT,=CL6' '     SET INDICATOR?\n         BE    DPRPDEND\n         CLC   M2HT,=CL6' '\n         BNE   DPRPDMVC\n         CLC   M2AVG,=CL6' '\n         BE    DPRPDEND\nDPRPDMVC MVC   M2IND,=C'<***'\nDPRPDEND MVC   M2VAR,=CL19'DPR && (CPU | PD)'\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- DEFERRED I/O UTIL.\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1AVG,MASKL6   CURRENT AVERAGE\n         LH    R5,RCVTOTDF\n         CVD   R5,AVGVALUE\n         ED    M1AVG,AVGVALUE+5\n         MVC   M1HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCTOTUT\n         CVD   R5,HIGTHRES\n         ED    M1HT,HIGTHRES+5\n         ZAP   LOWTHRES,HIGTHRES\n         MVC   M1VAR,=CL19'DEFERRED I/O UTIL.'\n         BAL   R4,SETINDIC\n         MVC   M1IND,PINDHOLD\n         MVC   M2AVG,MASKL6        PRINT SECTION -- DEMAND PAGING RATE\n         LH    R5,RCVDPR      CURRENT AVERAGE\n         CVD   R5,AVGVALUE\n         ED    M2AVG,AVGVALUE+5\n         MVC   M2HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCDPRTH\n         CVD   R5,HIGTHRES\n         ED    M2HT,HIGTHRES+5\n         MVC   M2LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCDPRTL\n         CVD   R5,LOWTHRES\n         ED    M2LT,LOWTHRES+5\n         MVC   M2VAR,=CL19'DEMAND PAGING RATE'\n         BAL   R4,SETINDIC\n         MVC   M2IND,PINDHOLD\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- CPU UTILIZATION\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1AVG,MASKL6   CURRENT AVERAGE\n         LH    R5,RCVCPUA\n         SRA   R5,4 /16\n         CVD   R5,AVGVALUE\n         ED    M1AVG,AVGVALUE+5\n         MVC   M1HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCCPUTH\n         SRA   R5,4 /16\n         CVD   R5,HIGTHRES\n         ED    M1HT,HIGTHRES+5\n         MVC   M1LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCCPUTL\n         SRA   R5,4 /16\n         CVD   R5,LOWTHRES\n         ED    M1LT,LOWTHRES+5\n         MVC   M1VAR,=CL19'CPU UTILIZATION'\n         BAL   R4,SETINDIC\n         MVC   M1IND,PINDHOLD\n         MVC   M2AVG,MASKL6        PRINT SECTION -- CPU & DEMAND PAGING\n         ED    M2AVG,AVGVALUE+5 CURRENT AVERAGE\n         MVC   M2HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCCPUPH\n         SRA   R5,4 /16\n         CVD   R5,HIGTHRES\n         ED    M2HT,HIGTHRES+5\n         MVC   M2LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCCPUPL\n         SRA   R5,4 /16\n         CVD   R5,LOWTHRES\n         ED    M2LT,LOWTHRES+5\n         MVC   M2VAR,=CL19'CPU && DEMAND PAGING'\n         BAL   R4,SETINDIC\n         MVC   M2IND,PINDHOLD\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- PAGE DELAY(MS)\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1AVG,MASKL6   CURRENT AVERAGE\n         LH    R5,RCVMSPP\n         CVD   R5,AVGVALUE\n         ED    M1AVG,AVGVALUE+5\n         MVC   M1HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCPDLTH\n         CVD   R5,HIGTHRES\n         ED    M1HT,HIGTHRES+5\n         MVC   M1LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCPDLTL\n         CVD   R5,LOWTHRES\n         ED    M1LT,LOWTHRES+5\n         MVC   M1VAR,=CL19'PAGE DELAY(MS)'\n         BAL   R4,SETINDIC\n         MVC   M1IND,PINDHOLD\n         MVC   M2AVG,MASKL6        PRINT SECTION -- PG DLAY & DMAND PG\n         ED    M2AVG,AVGVALUE+5 CURRENT AVERAGE\n         MVC   M2HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCMSPTH\n         CVD   R5,HIGTHRES\n         ED    M2HT,HIGTHRES+5\n         MVC   M2LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCMSPTL\n         CVD   R5,LOWTHRES\n         ED    M2LT,LOWTHRES+5\n         MVC   M2VAR,=CL19'PG DLAY && DMAND PG'\n         BAL   R4,SETINDIC\n         MVC   M2IND,PINDHOLD\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- ANY LOGICAL CHAN TH\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         ZAP   AVGVALUE,=P'0'\n         MVC   M1HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCLCHUT\n         CVD   R5,HIGTHRES\n         ED    M1HT,HIGTHRES+5\n         ZAP   LOWTHRES,HIGTHRES NO LOW THRESHOLD\n         MVC   M1VAR,=CL19'ANY LOGICAL CHAN TH'\n         BAL   R4,SETINDIC\n         MVC   M1IND,PINDHOLD\n         ZAP   AVGVALUE,=P'0'      PRINT SECTION -- ANY LOGICAL CH EXCP\n         MVC   M2HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCLCHRR\n         CVD   R5,HIGTHRES\n         ED    M2HT,HIGTHRES+5\n         ZAP   LOWTHRES,HIGTHRES NO LOW THRESHOLD\n         MVC   M2VAR,=CL19'ANY LOGICAL CH EXCP'\n         BAL   R4,SETINDIC\n         MVC   M2IND,PINDHOLD\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- CONT. INDX EXCH. TH\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1HT+3(9),=XL9'402020202020212060'\n         LH    R5,RCCDCITL\n         CVD   R5,HIGTHRES\n         ED    M1HT+3(9),HIGTHRES+4\n         MVC   M1VAR,=CL19'CONT. INDX EXCH. TH'\n*                                  PRINT SECTION -- NUMBER OF AVQ LOWS\n         MVC   M2HT+3(9),=XL9'402020202020212060'\n         LH    R5,RCVAVQC\n         CVD   R5,HIGTHRES\n         ED    M2HT+3(9),HIGTHRES+4\n         MVC   M2VAR,=CL19'NUMBER OF AVQ LOWS'\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- AVAILABLE FRAME AVG\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1HT+3(9),=XL9'402020202020212060'\n         LH    R5,RCVAFQA\n         CVD   R5,HIGTHRES\n         ED    M1HT+3(9),HIGTHRES+4\n         MVC   M1VAR,=CL19'AVAILABLE FRAME AVG'\n*                                  PRINT SECTION -- TOTAL PAGING RATE\n         MVC   M2HT+3(9),=XL9'402020202020212060'\n         LH    R5,RCVPAGRT\n         CVD   R5,HIGTHRES\n         ED    M2HT+3(9),HIGTHRES+4\n         MVC   M2VAR,=CL19'TOTAL PAGING RATE'\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLHIA\n         LA    R1,HEADER0\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         SPACE 3\n         LA    R1,MPLHDR3\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         MVC   PUTLHDRL,HDRLHDA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         L     R8,RMCTDMDT    LOAD ADDRESS OF THE FIRST DMDT\n         USING DMDT,R8\nDMDTLOOP C     R8,RMCTDMDE    IS THIS THE END OF THE TABLE?\n         BH    DMDTLEND\n         CLI   DMDTHI,X'01'   *** DROP SPECIAL PURPOSE DOMAINS FROM ***\n         BNE   DMDTLOP1       *** THE DISPLAY (MUCH SHORTER)        ***\n         CLI   DMDTLO,X'01'\n         BNE   DMDTLOP1\n         CLC   DMDTCMPL,=H'1'\n         BE    DMDTLOP6\nDMDTLOP1 MVI   PRTLINE,C' '        PRINT SECTION -- DEFERED I/O UTIL.\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         TM    DMDTFLGS,DMDTRTO RTO DOMAIN?\n         BNO   DMDTLOP3\n         L     R3,DMDTTRNC    SET UP TRANSACTION COUNT\n         CVD   R3,AVGVALUE\n         MVC   M3TRNC,MASKL4\n         ED    M3TRNC,AVGVALUE+6\n         CP    AVGVALUE,=P'0' PREVENT ZERO DIVIDE\n         BE    DMDTLOP2\n         L     R5,DMDTTRNT    SET UP CURRENT ELAPSED TIME AVERAGE\n         LTR   R5,R5\n         BZ    DMDTLOP2\n         SR    R4,R4\n         D     R4,DMDTTRNC\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-2,5\n         MVC   M3TRNTC,MASKL5D\n         ED    M3TRNTC,AVGVALUE+6\nDMDTLOP2 L     R3,DMDTTWET    SET UP ELAPSED TIME AVERAGE FOR RTO\n         LTR   R3,R3\n         BZ    DMDTLOP3\n         CVD   R3,AVGVALUE\n         SRP   AVGVALUE,64-2,5\n         MVC   M3TWET,MASKL5D\n         ED    M3TWET,AVGVALUE+6\nDMDTLOP3 L     R3,DMDTTWSR    SET UP WEIGHTED INTERVAL DOMAIN SERVICE\n         CVD   R3,AVGVALUE\n         MVC   M3TWSR,MASKL4\n         ED    M3TWSR,AVGVALUE+6\n         CP    AVGVALUE,=P'1000'\n         BNH   DMDTLOP4\n         SRP   AVGVALUE,64-3,5\n         MP    AVGVALUE,=P'10'\n         MVC   M3TWSR,MASKL4\n         ED    M3TWSR,AVGVALUE+6\n         MVI   M3TWSR+L'M3TWSR-1,C'K'\n         CP    AVGVALUE,=P'10000'\n         BNH   DMDTLOP4\n         SRP   AVGVALUE,64-4,5\n         MP    AVGVALUE,=P'10'\n         MVC   M3TWSR,MASKL4\n         ED    M3TWSR,AVGVALUE+6\n         MVI   M3TWSR+L'M3TWSR-1,C'M'\nDMDTLOP4 L     R3,DMDTWMS     SET UP INTERVAL DOMAIN SERVICE ACCUMUL\n         CVD   R3,AVGVALUE\n         MVC   M3TWMS,MASKL6\n         ED    M3TWMS,AVGVALUE+5\n         CP    AVGVALUE,=P'1000'\n         BNH   DMDTLOP5\n         SRP   AVGVALUE,64-3,5\n         MP    AVGVALUE,=P'10'\n         MVC   M3TWMS,MASKL6\n         ED    M3TWMS,AVGVALUE+5\n         MVI   M3TWMS+L'M3TWMS-1,C'K'\n         CP    AVGVALUE,=P'10000'\n         BNH   DMDTLOP5\n         SRP   AVGVALUE,64-4,5\n         MP    AVGVALUE,=P'10'\n         MVC   M3TWMS,MASKL6\n         ED    M3TWMS,AVGVALUE+5\n         MVI   M3TWMS+L'M3TWMS-1,C'M'\nDMDTLOP5 LH    R3,DMDTRUMX    SET UP MAX # READY USERS IN INTERVAL\n         CVD   R3,AVGVALUE\n         MVC   M3RUMX,MASKL4\n         ED    M3RUMX,AVGVALUE+6\n         LH    R3,DMDTNSW     SET UP CURRENT # NONSWAPPABLE IN USERS\n         CVD   R3,AVGVALUE\n         MVC   M3NSW,MASKL4\n         ED    M3NSW,AVGVALUE+6\n         LH    R3,DMDTOUTU    SET UP CURRENT # USERS ON OUT Q\n         CVD   R3,AVGVALUE\n         MVC   M3OUTU,MASKL4\n         ED    M3OUTU,AVGVALUE+6\n         LH    R3,DMDTGOOU    SET UP CURRENT # USERS GOING OUT\n         CVD   R3,AVGVALUE\n         MVC   M3GOOU,MASKL4\n         ED    M3GOOU,AVGVALUE+6\n         LH    R3,DMDTINCU    SET UP CURRENT # SWAPPABLE INCORE USERS\n         CVD   R3,AVGVALUE\n         MVC   M3INCU,MASKL4\n         ED    M3INCU,AVGVALUE+6\n         LH    R3,DMDTCMPL    SET UP CURRENT MPL\n         CVD   R3,AVGVALUE\n         MVC   M3DMPL,MASKL6\n         ED    M3DMPL,AVGVALUE+5\n         LH    R3,DMDTCIDX    SET UP CONTENTION INDEX\n         CVD   R3,AVGVALUE\n         MVC   M3CIDX,MASKL4\n         ED    M3CIDX,AVGVALUE+6\n         LH    R3,DMDTMPLT    SET UP CURRENT MPL TARGET\n         CVD   R3,AVGVALUE\n         MVC   M3MPLT,MASKL4\n         ED    M3MPLT,AVGVALUE+6\n         LH    R4,DMDTRUA     SET UP AVERAGE NUMBER OF READY USERS\n         SRDA  R4,4           SEPARATE FRACTION\n         SRL   R5,28\n         CVD   R4,AVGVALUE\n         M     R4,=F'100'\n         D     R4,=F'16'\n         CVD   R5,LOWTHRES\n         SRP   LOWTHRES,64-1,5\n         MVC   M3RUA+1(5),MASKL5D\n         ED    M3RUA+1(5),LOWTHRES+6\n         MVC   M3RUA(4),MASKL4\n         ED    M3RUA(4),AVGVALUE+6\n         SR    R3,R3          SET UP WEIGHTING FACTOR\n         IC    R3,DMDTWT\n         MVI   M3RUA,C'W'\n         CVD   R3,AVGVALUE\n         MVC   M3WT,MASKL4\n         ED    M3WT,AVGVALUE+6\n         SR    R3,R3          SET UP MAXIMUM MPL NUMBER\n         IC    R3,DMDTHI\n         CVD   R3,AVGVALUE\n         MVC   M3HI,MASKL4\n         ED    M3HI,AVGVALUE+6\n         SR    R3,R3          SET UP MINIMUM MPL NUMBER\n         IC    R3,DMDTLO\n         MVI   M3HI,C'/'\n         CVD   R3,AVGVALUE\n         MVC   M3LO,MASKL4\n         ED    M3LO,AVGVALUE+6\n         SR    R3,R3          SET UP DOMAIN NUMBER\n         IC    R3,DMDTNO\n         CVD   R3,AVGVALUE\n         UNPK  M3NO,AVGVALUE+6(2)\n         OI    M3NO+2,X'F0'\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLLOWA\n         LA    R1,PRTDTL\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\nDMDTLOP6 LA    R8,DMDTEND\n         B     DMDTLOOP\n         DROP  R8,R10\nDMDTLEND B     EXIT\nMPLHDR2  DC    H'79',CL80'    VARIABLE          LT   HT  AVG           X\n               VARIABLE         LT   HT  AVG     '\nMPLHDR3  DC    H'79',CL80'DMN  CONSTRAINT   RUA TAR  CI  CMPL SIC  GO  X\n               OT  NS MAX  SERV WSR  WET ET/C  C '\n         SPACE 3\nEXIT     SR    R15,R15\nEXITF    L     R13,4(0,R13)\n         L     R14,12(0,R13)\n         LM    R0,R12,20(R13)\n         MVI   12(R13),X'FF'\n         BR    R14\n         SPACE 1\nSETINDIC MVC   PINDHOLD,=CL6' ' SET THE INDICATOR AS APPROPRIATE\n         CP    AVGVALUE,LOWTHRES\n         BLR   R4\n         MVC   PINDHOLD,=CL4'  -'\n         CP    AVGVALUE,HIGTHRES\n         BNHR  R4\n         MVC   PINDHOLD,=CL4'<---'\n         BR    R4\n         SPACE 1\nSETINDID MVC   PINDHOLD,=CL6' ' SET THE INDICATOR AS APPROPRIATE\n         CP    AVGVALUE,HIGTHRES\n         BHR   R4\n         MVC   PINDHOLD,=CL4'  -'\n         CP    AVGVALUE,LOWTHRES\n         BNLR  R4\n         MVC   PINDHOLD,=CL4'<---'\n         BR    R4\n         SPACE 1\nPUTLINE  LA    R1,PUTLRECD    LOAD ADDRESS OF PARAMETERS\n         L     R15,PUTLINEA   ADDRESS OF PUTLINE ROUTINE\n         BALR  R14,R15        GO DISPLAY THE REQUEST\n         LTR   R15,R15        WAS THE PUTLINE SUCCESSFUL?\n         BZR   R4              YES, CONTINUE THE PROCESSING\n         LA    R15,12          NO, RETURN TO RMF CONTROL\n         B     EXITF\n         SPACE 3\nHEADER0  DC    H'2',CL2' '\nMASKL6   DC    XL6'402020202120'\nMASKL4   DC    XL4'40202120'\nMASKL5D  DC    XL5'4021204B20'\n         SPACE 1\n         LTORG\n         EJECT\n*   IGNORE ANY ASSEMBLY ERRORS IN THIS MACRO\n         IRARMCT\n         EJECT\n         PRINT GEN\n         IRARCT\n         SPACE 3\n         IRADMDT\n         SPACE 3\n*   IGNORE ANY ASSEMBLY ERRORS IN THIS MACRO\n         IRAEPAT\n         SPACE 3\n         IRARMEP\n         SPACE 3\n         ERBUSDTA\n         ORG   PRTLINE    DISPLAY AREA\nM1VAR    DS    CL19           DESCRIPTION 1\n         ORG   *-1\nM1LT     DS    CL6            LOW THRESHOLD VALUE\n         ORG   *-1\nM1HT     DS    CL6            HIGH THRESHOLD VALUE\n         ORG   *-1\nM1AVG    DS    CL6            CURRENT AVERAGE VALUE\nM1IND    DS    CL4            INDICATOR FOR OVER/UNDER\n         DS    CL2\nM2VAR    DS    CL19           DESCRIPTION 2\n         ORG   *-1\nM2LT     DS    CL6            LOW THRESHOLD VALUE\n         ORG   *-1\nM2HT     DS    CL6            HIGH THRESHOLD VALUE\n         ORG   *-1\nM2AVG    DS    CL6            CURRENT AVERAGE VALUE\nM2IND    DS    CL4            INDICATOR FOR OVER/UNDER\n         ORG   PRTLINE\nM3NO     DS    CL3            DOMAIN NUMBER\nM3LO     DS    CL4            MINIMUM MPL NUMBER\nM3HI     DS    CL4            MAXIMUM MPL NUMBER\nM3WT     DS    CL4            WEIGHTING FACTOR\nM3RUA    DS    CL6            AVERAGE NUMBER OF READY USERS\nM3MPLT   DS    CL4            CURRENT MPL TARGET\nM3CIDX   DS    CL4            CONTENTION INDEX\nM3DMPL   DS    CL6            CURRENT MPL\nM3INCU   DS    CL4            CURRENT # SWAPPABLE INCORE USERS\nM3GOOU   DS    CL4            CURRENT # OF USERS GOING OUT\nM3OUTU   DS    CL4            CURRENT # USERS ON OUT Q\nM3NSW    DS    CL4            CURRENT # NONSWAPPABLE IN USERS\nM3RUMX   DS    CL4            MAX # READY USERS IN INTERVAL\nM3TWMS   DS    CL6            INTVL DMN SVCE ACCUM\nM3TWSR   DS    CL4            WEIGHTED INTVL DMN SVCE\nM3TWET   DS    CL5            ELAPSED TIME AVG FOR RTO\nM3TRNTC  DS    CL5            CURRENT ELAPSED TIME AVG FOR RTO\nM3TRNC   DS    CL4            XACTION COUNT FOR RTO\n         SPACE 3\n         PRINT NOGEN\n         REGS\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MVSOBJ": {"ttr": 1034, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "MVSUSASM": {"ttr": 1282, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "MVSUSASM TITLE 'ERBUSASM -- RMF USER ASM DATA SET REPORT'\n***********************************************************************\n**                                                                   **\n**     THIS MODULE MUST BE LINK EDITED INTO MODULE \"ERBRUS99\" AS     **\n**     \"RENT\".  THIS ASSEMBLY REQUIRES THE \"AAPVT\" COMPONENT FROM    **\n**     THE SYSTEM OPTIONAL MACHINE READABLE MATERIAL AS A MACLIB.    **\n**                                                                   **\n**     MVS/3.8                                                       **\n**                                                                   **\n***********************************************************************\nERBUSASM CSECT\n         USING *,15\n         B     BYMODULE\n         DC    AL1(23)\n         DC    CL8'ERBUSASM'\n         DC    CL7' &SYSTIME'\n         DC    CL8'&SYSDATE'\n         DC    C' MVS/3.8'\n         PRINT NOGEN\nBYMODULE SAVE  (14,12)\n         USING GETMAINA,R13\n         LA    R1,SAVEARE1\n         ST    R1,8(,R13)\n         ST    R13,4(,R1)\n         LR    R13,R1\n         DROP  R13,R15\n         USING SAVEARE1,R13\n         BALR  R12,0\n         USING *,R12\n         SPACE 3\n         L     R5,CVTA        ADDRESS OF THE CVT\n         USING CVT,R5\n         L     R10,CVTASMVT   POINTER TO THE ASMVT\n         DROP  R5\n         USING ASMVT,R10\n         L     R9,ASMPART     POINTER TO THE PART\n         USING PART,R9\n         CLC   =CL4'PART',PARTIDEN IS THE POINTER CORRECT?\n         BE    *+8             YES, CONTINUE\n         SR    R4,R4           NO, BLOW UP\n         DR    R8,R4\n         MVC   PUTLHDRL,HDRLHDA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLHIA\n         LA    R1,ASMDHDR1\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         TM    ASMFLAG1,ASMNODPX TEST FOR DUPLEXING SUSPENDED\n         BNO   ASMVTER1\n         LA    R1,ASMDERR2\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\nASMVTER1 TM    ASMFLAG1,ASMPLPAF TEST FOR PLPA DATA SET FULL\n         BNO   ASMVTER2\n         LA    R1,ASMDERR3\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\nASMVTER2 TM    ASMFLAG1,ASMCOMMF TEST FOR COMMON PAGE DATA SET FULL\n         BNO   ASMVTER3\n         LA    R1,ASMDERR4\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\nASMVTER3 TM    ASMFLAG1,ASMPLPAS TEST FOR PLPA SPILL AT IPL\n         BNO   ASMVTER4\n         LA    R1,ASMDERR5\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\nASMVTER4 TM    ASMFLAG2,ASMNOSAV TEST FOR SYS1.STGINDEX UNAVAILABLE\n         BNO   ASMVTNM1\n         LA    R1,ASMDERR6\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\nASMVTNM1 MVC   PUTLDSPL,DSPLLOWA\n         TM    ASMFLAG2,ASMQUICK TEST FOR CLPA AT LAST IPL\n         BO    ASMVTNM9\n         LA    R1,ASMDNML1\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\nASMVTNM9 MVI   PRTLINE,C' '                       PAGE DATA SETS HEADER\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   PRTLINE(32),=CL32'PAGE DATA SETS:  SERVICE BURST ='\n         SR    R4,R4\n         L     R5,ASMBURST\n         D     R4,=F'1000'    CONVERT TO MILLISECONDS\n         CVD   R5,AVGVALUE\n         MVC   PRTLINE+32(L'MASKL6),MASKL6\n         ED    PRTLINE+32(L'MASKL6),AVGVALUE+5\n         MVC   PRTLINE+39(2),=CL2'MS'\n         L     R4,ASMIOCNT    SIO COUNT NOT COMPLETE\n         LTR   R4,R4            CATCH ANYTHING?\n         BZ    ASMDRPT1         NO, SKIP IT\n         CVD   R4,AVGVALUE\n         MVC   PRTLINE+44(16),=CL16'SIO NOT COMPLETE'\n         MVC   PRTLINE+62(L'MASKL4),MASKL4\n         ED    PRTLINE+62(L'MASKL4),AVGVALUE+6\nASMDRPT1 L     R4,ASMSRBCT    SRB COUNT NOT COMPLETE\n         LTR   R4,R4\n         BZ    ASMDRPT2\n         CVD   R4,AVGVALUE\n         MVC   PRTLINE+69(8),=CL8'SRB \u00acCMP'\n         MVC   PRTLINE+77(2),=XL2'4021'\n         ED    PRTLINE+77(2),AVGVALUE+7\nASMDRPT2 MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLHIA\n         LA    R1,PRTDTL\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         LA    R1,ASMDHDR2\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         SR    R4,R4          COUNT OF NUMBER OF ENTRIES\n         ST    R4,LOWTHRES\n         LA    R8,PARTENTS\n         USING PARTENT,R8\nASMDDLP1 TM    PAREFLG1,PARENUSE IS THIS PARTE IN USE?\n         BO    ASMDDLP9         NO, SKIP IT\n         MVI   PRTLINE,C' '                       PAGE DATA SETS DETAIL\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         L     R3,PARESZSL    NUMBER OF SLOTS IN DATASET\n         CVD   R3,AVGVALUE\n         MVC   M4SLOTS,MASKL8\n         ED    M4SLOTS,AVGVALUE+4\n         TM    PARETYPE,PAREPLPA WHAT TYPE PAGE DATA SET IS THIS?\n         BNO   *+10\n         MVC   M4TYPE,=CL6'PLPA'\n         TM    PARETYPE,PARECOMM\n         BNO   *+10\n         MVC   M4TYPE,=CL6'COMMON'\n         TM    PARETYPE,PAREDPLX\n         BNO   *+10\n         MVC   M4TYPE,=CL6'DUPLEX'\n         TM    PARETYPE,PARELOCL\n         BNO   *+10\n         MVC   M4TYPE,=CL6'LOCAL'\n         TM    PAREFLG1,PAREDSBD IS THIS DATASET OK?\n         BO    ASMDDLP5            NO, SAY SO\n         LR    R5,R3          % OF PAGE DATA SET USED\n         S     R5,PARESLTA\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         MVC   M4USED(L'MASKL4PC),MASKL4PC\n         ED    M4USED,AVGVALUE+6\n         B     ASMDDLP6\nASMDDLP5 MVC   M4SLOTS+2(10),=CL10'BAD DATAST'\nASMDDLP6 TM    PAREFLG1,PAREINCP IS DUPLEX INTERCEPT ACTIVE?\n         BNO   ASMDDLP7            NO, FORGET IT\n         TM    ASMFLAG1,ASMDUPLX   MAYBE, TEST MORE\n         BNO   ASMDDLP7              NO, FORGET IT\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLHIA\n         LA    R1,ASMDERR1\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\nASMDDLP7 L     R5,PAREUCBP    FIND VOLUME SERIAL NUMBER\n         USING UCBCMSEG,R5\n         MVC   M4VOLSER,UCBVOLI\n         DROP  R5\n         L     R6,PAREPCTP    FIND THE DEVICE TYPE\n         USING PCT,R6\n         CLC   =CL4'PCT ',PCTID IS THE POINTER CORRECT?\n         BE    *+8             YES, CONTINUE\n         SR    R4,R4           NO, BLOW UP\n         DR    R8,R4\n         MVC   M4DEVTYP,PCTDTYPE\n         DROP  R6\n         L     R5,PARERRCT    FIND THE NUMBER OF PERM I/O ERRORS\n         CVD   R5,AVGVALUE\n         MVC   M4IOERR,MASKL8\n         ED    M4IOERR,AVGVALUE+4\n         LH    R5,PARENN      MOVE IN DATA SET NAME\n         M     R4,=F'44'\n         L     R4,PARTDSNL\n         LA    R5,0(R4,R5)\n         MVC   M4DSN,0(R5)\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLLOWA\n         LA    R1,PRTDTL\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\nASMDDLP9 LA    R8,L'PARTENT(,R8) SET UP FOR NEXT ENTRY\n         L     R3,LOWTHRES    CHECK FOR END OF TABLE\n         LA    R3,1(,R3)        INCREMENT BY ONE\n         LH    R4,PARENN      CHECK FOR END OF TABLE\n         ST    R4,LOWTHRES\n         C     R3,PARTEUSE\n         BL    ASMDDLP1\n         DROP  R8\n         MVI   PRTLINE,C' '                LOCAL PAGE DATA SETS SUMMARY\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         L     R3,ASMSLOTS    TOTAL LOCAL SLOTS IN ALL LOCALS\n         CVD   R3,AVGVALUE\n         MVC   M4SLOTS,MASKL8\n         ED    M4SLOTS,AVGVALUE+4\n         LR    R5,R3          % OF LOCAL PAGE SPACE USED\n         S     R5,ASMBKSLT\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         MVC   M4USED(L'MASKL4PC),MASKL4PC\n         ED    M4USED,AVGVALUE+6\n         L     R4,ASMERRS     BAD SLOTS FOUND ON LOCAL DATA SETS\n         CVD   R4,AVGVALUE\n         MVC   M4IOERR,MASKL8\n         ED    M4IOERR,AVGVALUE+4\n         MVC   M4DSN(28),=CL28' LOCAL PAGE DATA SET SUMMARY'\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '            LOCAL PAGE DATA SETS VIO SUMMARY\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         L     R5,ASMVSC      TOTAL LOCAL SLOTS ALLOCATED TO VIO\n         CVD   R5,AVGVALUE\n         MVC   M4SLOTS,MASKL8\n         ED    M4SLOTS,AVGVALUE+4\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         MVC   M4USED(L'MASKL4PC),MASKL4PC\n         ED    M4USED,AVGVALUE+6\n         MVC   M4VOLSER(31),=CL31' LOCAL PAGE DATA SET VIO IMPACT'\n         BAL   R4,PUTLINE\n         L     R9,ASMSART     POINTER TO THE SART\n         USING SART,R9\n         CLC   =CL4'SART',SARID IS THE POINTER CORRECT?\n         BE    *+8             YES, CONTINUE\n         SR    R4,R4           NO, BLOW UP\n         DR    R8,R4\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLLOWA\n         LA    R1,HEADER0\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '                       PAGE DATA SETS HEADER\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   PRTLINE(33),=CL33'SWAP DATA SETS:  NO. PAGES/SLOT ='\n         L     R5,SARSETSZ\n         CVD   R5,AVGVALUE\n         MVC   PRTLINE+33(L'MASKL4),MASKL4\n         ED    PRTLINE+33(L'MASKL4),AVGVALUE+6\n         L     R4,SARSRBCT    SRB COUNT NOT COMPLETE\n         LTR   R4,R4\n         BZ    ASMSRPT1\n         CVD   R4,AVGVALUE\n         MVC   PRTLINE+69(8),=CL8'SRB \u00acCMP'\n         MVC   PRTLINE+77(2),=XL2'4021'\n         ED    PRTLINE+77(2),AVGVALUE+7\nASMSRPT1 MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLHIA\n         LA    R1,PRTDTL\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         L     R4,SARUSE      ARE THERE ANY SWAP DATASETS?\n         LTR   R4,R4\n         BNP   SWPCOD0\n         LA    R1,ASMSHDR2\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         LA    R8,SARENTS\n         SR    R4,R4          COUNT OF NUMBER OF ENTRIES\n         ST    R4,LOWTHRES\n         ST    R4,HIGTHRES\n         USING SARTE,R8\nASMSDLP1 TM    SREFLG,SRENUSE IS THIS SARTE IN USE?\n         BO    ASMSDLP9         NO, SKIP IT\n         MVI   PRTLINE,C' '                       PAGE DATA SETS DETAIL\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         L     R3,SRETOTSL    NUMBER OF SLOTS IN DATASET\n         CVD   R3,AVGVALUE\n         MVC   M4SLOTS,MASKL8\n         ED    M4SLOTS,AVGVALUE+4\n         L     R4,HIGTHRES      TOTAL NUMBER OF SWAP SETS ON SYSTEM\n         AR    R4,R3\n         ST    R4,HIGTHRES\n         TM    SREFLG,SREDSBD IS THIS DATASET OK?\n         BO    ASMSDLP5            NO, SAY SO\n         LR    R5,R3          % OF PAGE DATA SET USED\n         S     R5,SREAVLSL\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         MVC   M4USED(L'MASKL4PC),MASKL4PC\n         ED    M4USED,AVGVALUE+6\n         B     ASMSDLP6\nASMSDLP5 MVC   M4SLOTS+2(10),=CL10'BAD DATAST'\nASMSDLP6 L     R5,SREUCB      FIND VOLUME SERIAL NUMBER\n         USING UCBCMSEG,R5\n         MVC   M4VOLSER,UCBVOLI\n         DROP  R5\n         L     R6,SRESDCTE    FIND THE DEVICE TYPE\n         MVC   M4DEVTYP,0(R6)\n         L     R5,SRERRCNT    FIND THE NUMBER OF PERM I/O ERRORS\n         CVD   R5,AVGVALUE\n         MVC   M4IOERR,MASKL8\n         ED    M4IOERR,AVGVALUE+4\n         LH    R5,SRENN      MOVE IN DATA SET NAME\n         M     R4,=F'44'\n         L     R4,SARDSNL\n         LA    R5,0(R4,R5)\n         MVC   M4DSN,0(R5)\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLLOWA\n         LA    R1,PRTDTL\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\nASMSDLP9 LA    R8,L'SARTE(,R8) SET UP FOR NEXT ENTRY\n         L     R3,LOWTHRES    CHECK FOR END OF TABLE\n         LA    R3,1(,R3)        INCREMENT BY ONE\n         LH    R4,SRENN      CHECK FOR END OF TABLE\n         ST    R4,LOWTHRES\n         C     R3,SARUSE\n         BL    ASMSDLP1\n         DROP  R8\n         MVI   PRTLINE,C' '                       SWAP DATA SET SUMMARY\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         L     R3,HIGTHRES    TOTAL SLOTS IN ALL SWAP DATA SETS\n         CVD   R3,AVGVALUE\n         MVC   M4SLOTS,MASKL8\n         ED    M4SLOTS,AVGVALUE+4\n         LR    R5,R3          % OF SWAP SPACE USED\n         S     R5,SARSETCT\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         MVC   M4USED(L'MASKL4PC),MASKL4PC\n         ED    M4USED,AVGVALUE+6\n         MVC   M4VOLSER(28),=CL28' SWAP DATA SET SUMMARY'\n         DROP  R9,R10\n         BAL   R4,PUTLINE\nSWPCOD0  L     R11,RMCTA      POINTER TO THE RMCT\n         USING RMCT,R11\n         L     R10,RMCTRMCA   POINTER TO THE RMCA\n         USING RMCA,R10\n         CLC   =CL4'RMCA',RMCANAME IS THE POINTER CORRECT?\n         BE    *+8             YES, CONTINUE\n         SR    R4,R4           NO, BLOW UP\n         DR    R8,R4\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLLOWA\n         LA    R1,HEADER0\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         MVC   PUTLDSPL,DSPLHIA\n         LA    R1,SWPCHDR1\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         LA    R1,SWPCHDR2\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '                       SWAP COUNTS BY REASON\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         SR    R3,R3          FIND THE TOTAL OF ALL OF THEM\n         L     R4,RMCATOSC\n         A     R4,RMCATISC\n         CVD   R4,AVGVALUE\n         AR    R3,R4\n         MVC   M5TOSC,MASKL8\n         ED    M5TOSC,AVGVALUE+4\n         L     R4,RMCALWSC\n         CVD   R4,AVGVALUE\n         AR    R3,R4\n         MVC   M5LWSC,MASKL8\n         ED    M5LWSC,AVGVALUE+4\n         L     R4,RMCAXSSC\n         CVD   R4,AVGVALUE\n         AR    R3,R4\n         MVC   M5XSSC,MASKL6\n         ED    M5XSSC,AVGVALUE+5\n         L     R4,RMCARSSC\n         CVD   R4,AVGVALUE\n         AR    R3,R4\n         MVC   M5RSSC,MASKL6\n         ED    M5RSSC,AVGVALUE+5\n         L     R4,RMCARQSC\n         CVD   R4,AVGVALUE\n         AR    R3,R4\n         MVC   M5RQSC,MASKL6\n         ED    M5RQSC,AVGVALUE+5\n         L     R4,RMCADWSC\n         CVD   R4,AVGVALUE\n         AR    R3,R4\n         MVC   M5DWSC,MASKL8\n         ED    M5DWSC,AVGVALUE+4\n         L     R4,RMCANQSC\n         CVD   R4,AVGVALUE\n         AR    R3,R4\n         MVC   M5NQSC,MASKL6\n         ED    M5NQSC,AVGVALUE+5\n         L     R4,RMCAEXSC\n         CVD   R4,AVGVALUE\n         AR    R3,R4\n         MVC   M5EXSC,MASKL6\n         ED    M5EXSC,AVGVALUE+5\n         L     R4,RMCAUSSC\n         CVD   R4,AVGVALUE\n         AR    R3,R4\n         MVC   M5USSC,MASKL6\n         ED    M5USSC,AVGVALUE+5\n         MVC   M5LSSC,=CL8'N/A'\n         MVC   PUTLDSPL,DSPLLOWA\n         LA    R1,PRTDTL\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '                            SWAP % BY REASON\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         LTR   R3,R3\n         BZ    EXIT\n         L     R5,RMCATOSC\n         A     R5,RMCATISC\n         SR    R4,R4\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         BZ    SWPCOD1\n         MVC   M5TOSC+3(L'MASKL4PC),MASKL4PC\n         ED    M5TOSC+3(L'MASKL4PC-1),AVGVALUE+6\nSWPCOD1  L     R5,RMCALWSC\n         SR    R4,R4\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         BZ    SWPCOD2\n         MVC   M5LWSC+3(L'MASKL4PC),MASKL4PC\n         ED    M5LWSC+3(L'MASKL4PC-1),AVGVALUE+6\nSWPCOD2  L     R5,RMCAXSSC\n         SR    R4,R4\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         BZ    SWPCOD3\n         MVC   M5XSSC+1(L'MASKL4PC),MASKL4PC\n         ED    M5XSSC+1(L'MASKL4PC-1),AVGVALUE+6\nSWPCOD3  L     R5,RMCARSSC\n         SR    R4,R4\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         BZ    SWPCOD4\n         MVC   M5RSSC+1(L'MASKL4PC),MASKL4PC\n         ED    M5RSSC+1(L'MASKL4PC-1),AVGVALUE+6\nSWPCOD4  L     R5,RMCARQSC\n         SR    R4,R4\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         BZ    SWPCOD5\n         MVC   M5RQSC+1(L'MASKL4PC),MASKL4PC\n         ED    M5RQSC+1(L'MASKL4PC-1),AVGVALUE+6\nSWPCOD5  L     R5,RMCADWSC\n         SR    R4,R4\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         BZ    SWPCOD6\n         MVC   M5DWSC+3(L'MASKL4PC),MASKL4PC\n         ED    M5DWSC+3(L'MASKL4PC-1),AVGVALUE+6\nSWPCOD6  L     R5,RMCANQSC\n         SR    R4,R4\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         BZ    SWPCOD7\n         MVC   M5NQSC+1(L'MASKL4PC),MASKL4PC\n         ED    M5NQSC+1(L'MASKL4PC-1),AVGVALUE+6\nSWPCOD7  L     R5,RMCAEXSC\n         SR    R4,R4\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         BZ    SWPCOD8\n         MVC   M5EXSC+1(L'MASKL4PC),MASKL4PC\n         ED    M5EXSC+1(L'MASKL4PC-1),AVGVALUE+6\nSWPCOD8  L     R5,RMCAUSSC\n         SR    R4,R4\n         M     R4,=F'1000'\n         DR    R4,R3\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-1,5\n         BZ    SWPCOD11\n         MVC   M5USSC+1(L'MASKL4PC),MASKL4PC\n         ED    M5USSC+1(L'MASKL4PC-1),AVGVALUE+6\nSWPCOD11 BAL   R4,PUTLINE\n         B     EXIT\nASMDHDR1 DC    H'45',CL45'                                ASM DATA SETSX\n               '\nASMDHDR2 DC    H'79',CL80' TYPE   SLOTS USED VOLSER DEVTYP BAD SLOT    X\n                     DATA SET NAME               '\nASMDERR1 DC    H'56',CL56'PLPA OR COMMON DATA SET NOT AVAILABLE--DUPLEXX\n               ING IN USE'\nASMDERR2 DC    H'38',CL38'ASMNODPX--DUPLEXING HAS BEEN SUSPENDED'\nASMDERR3 DC    H'32',CL32'ASMPLPAF--PLPA DATA SET IS FULL'\nASMDERR4 DC    H'38',CL38'ASMCOMMF--COMMON PAGE DATA SET IS FULL'\nASMDERR5 DC    H'44',CL44'ASMPLPAS--PLPA DATA SPILLED TO COMMON AT IPL'\nASMDERR6 DC    H'44',CL44'ASMNOSAV--SYS1.STGINDEX UNAVAILABLE OR FULL'\nASMDNML1 DC    H'42',CL42'ASMQUICK--A CLPA WAS DONE AT THE LAST IPL'\n         SPACE 1\nASMSHDR2 DC    H'79',CL80'   SWAP SETS  USED VOLSER DEVTYP BAD SETS    X\n                     DATA SET NAME               '\n         SPACE 1\nSWPCHDR1 DC    H'22',CL22'SWAP COUNTS BY REASON:'\nSWPCHDR2 DC    H'79',CL80' TERM-WT LONG-WT AUXST REALS  DET-WT  REQ ENQX\n               -X RECOM UNLAT TRANS LOGIC-SW FAIL'\n         SPACE 2\nEXIT     SR    R15,R15\nEXITF    L     R13,4(,R13)    RESTORE REGISTER 13\n         L     R14,12(0,R13)\n         LM    R0,R12,20(R13)\n         MVI   12(R13),X'FF'\n         BR    R14\n         SPACE 1\nPUTLINE  LA    R1,PUTLRECD    LOAD ADDRESS OF PARAMETERS\n         L     R15,PUTLINEA   ADDRESS OF PUTLINE ROUTINE\n         BALR  R14,R15        GO DISPLAY THE REQUEST\n         LTR   R15,R15        WAS THE PUTLINE SUCCESSFUL?\n         BZR   R4              YES, CONTINUE THE PROCESSING\n         LA    R15,12          NO, RETURN TO RMF CONTROL\n         B     EXITF\n         SPACE 3\nMASKL6   DC    XL6'402020202120'\nMASKL4   DC    XL4'40202120'\nMASKL4PC DC    XL5'402021206C'\nMASKL8   DC    XL8'4020202020202120'\nHEADER0  DC    H'2',C'  '\n         SPACE 1\n         LTORG\n         EJECT\n         PRINT NOGEN\n*  IGNORE ASSEMBLY ERRORS IN THIS MACRO\n         IRARMCT\n         EJECT\n         PRINT GEN\n         ILRASMVT\n         SPACE 3\n         IRARMCA\n         SPACE 3\nPART     DSECT\nPARTIDEN DS    CL4            PART IDENTIFIER\nPARTSIZE DS    F              TOTAL NUMBER OF PART ENTRIES\nPARTEUSE DS    F              NUMBER OF PARTE'S IN USE\nPARTAIAE DS    F              AIA ERROR QUEUE\n         DS    2F             NEXT PARTE QUEUES\nPARTDSNL DS    F              ADDRESS OF DATASET NAME LIST IN CSA\nPARTPCTQ DS    F              ADDRESS OF CHAIN OF PCT'S\nPARTLCNT DS    H              COUNT OF ACTIVE LOCAL PAGE DATASETS\n         DS    H\n         DS    11F\nPARTENTS DS    0F\n         SPACE 1\nPARTENTX DSECT\nPARTENT  DS    0CL64        PART ENTRY REPRESENTING A PAGE DATA SET\nPAREPARE DS    F              POINTER TO NEXT PARTE IN USE\nPARELKUP DS    F              LOCK FOR THIS PARTE\nPARETYPE DS    X              PAGE DATA SET TYPE FLAGS\nPAREPLPA EQU   B'10000000'      PARTE FOR PLPA DATA SET\nPARECOMM EQU   B'01000000'      PARTE FOR COMMON DATA SET\nPAREDPLX EQU   B'00100000'      PARTE FOR DUPLEX COMMON DATA SET\nPARELOCL EQU   B'00010000'      PARTE FOR LOCAL DATA SET\nPAREFLG1 DS    X              PARTE FLAGS\nPARENUSE EQU   B'10000000'     PARTE NOT IN USE\nPAREDSBD EQU   B'01000000'     DATA SET BAD FLAG\nPAREINCP EQU   B'00100000'     INTERCEPTED FLAG\nPARENN   DS    H              PART NUMBER FOR THIS PARTE\nPAREIOEQ DS    F              ADDRESS OF FIRST IOE ON UNSORTED QUEUE\nPARESZSL DS    F              SIZE OF PAGE DATASET IN SLOTS\nPARESLTA DS    F              NUMBER OF SLOTS AVAILABLE\nPARERRCT DS    F              NUMBER OF PERM I/O ERRORS ON DATASET\nPAREIORB DS    F              POINTER TO FIRST IORB\nPAREPATP DS    F              POINTER TO PAT FOR THIS PAGE DATA SET\nPAREPCTP DS    F              POINTER TO PCT FOR THIS PAGE DATASET TYPE\nPAREEDBP DS    F              POINTER TO EDB FOR PAGE DATA SET\nPAREUCBP DS    F              POINTER TO UCB FOR PAGE DATA SET\n         SPACE 3\nSART     DSECT\nSARID    DS    CL4            SART IDENTIFIER\nSARSIZE  DS    F              TOTAL NUMBER OF SART ENTRIES\nSARUSE   DS    F              NUMBER OF SARTE'S IN USE\n         DS    3F\nSARDSNL  DS    F              ADDRESS OF DATASET NAME LIST IN CSA\nSARSDCT  DS    F              ADDRESS OF SWAP DEVICE TABLE\n         DS    F\nSARSETCT DS    F              NUMBER OF SWAP SETS AVAILABLE\n         DS    3F\nSARSRBCT DS    F              SRBS SCHEDULED BUT NOT DISPATCHED\nSARSETSZ DS    F              NO OF PAGES/SLOT IN SWAP SET\n         DS    5F\nSARENTS  DS    0F\n         SPACE 1\nSARTEX   DSECT\nSARTE    DS    0CL48        SART ENTRY REPRESENTING A SWAP DATA SET\nSRENEXT  DS    F              POINTER TO NEXT SARTE IN CIRCULAR CHAIN\nSRELOCK  DS    F              LOCK TO SERIALIZE SWAP\n         DS    X\nSREFLG   DS    X              SARTE FLAGS\nSRENUSE  EQU   B'10000000'     SARTE NOT IN USE\nSREDSBD  EQU   B'01000000'     DATA SET BAD FLAG\nSREFIXED EQU   B'00010000'     FIXED HEAD FILE FLAG\nSRENN    DS    H              SART NUMBER FOR THIS SARTE\n         DS    F\nSRETOTSL DS    F              NUMBER OF SWAP SETS IN THIS DATA SET\nSREAVLSL DS    F              AVAILABLE SWAP SETS ON THIS DATA SET\nSRERRCNT DS    F              ERROR SWAP SETS ON THIS DATA SET\n         DS    F\nSRESAT   DS    F              POINTER TO SAT FOR THIS SWAP DATA SET\nSRESDCTE DS    F              POINTER TO SDCTE FOR THIS SWAP DATA SET\nSREEDB   DS    F              POINTER TO EDB FOR SWAP DATA SET\nSREUCB   DS    F              POINTER TO UCB FOR SWAP DATA SET\n         SPACE 3\nPCT      DSECT\nPCTID    DS    CL4            PCT IDENTIFIER\nPCTDTYPE DS    CL6            DEVICE TYPE IN EBCDIC\n         SPACE 3\n         ERBUSDTA\n         ORG   PRTLINE\nM4TYPE   DS    CL6            TYPE OF PAGE DATASET\n         ORG   *-1\nM4SLOTS  DS    CL8            SLOTS ON THE DEVICE\nM4USED   DS    CL4            % OF DATA SET THAT IS USED\n         DS    CL2\nM4VOLSER DS    CL6            VOLUME SERIAL OF THE DATA SET\n         DS    C\nM4DEVTYP DS    CL6            DEVICE TYPE OF THE DATA SET\nM4IOERR  DS    CL8            NUMBER OF PERM I/O ERRORS ON DATA SET\n         DS    C\nM4DSN    DS    CL38           DATA SET NAME\n         ORG   PRTLINEE\n         ORG   PRTLINE\nM5TOSC   DS    CL8            SWAP COUNTS\nM5LWSC   DS    CL8\nM5XSSC   DS    CL6\nM5RSSC   DS    CL6\nM5DWSC   DS    CL8\n         ORG   *-1\nM5RQSC   DS    CL6\nM5NQSC   DS    CL6\nM5EXSC   DS    CL6\nM5USSC   DS    CL6\nM5TSSC   DS    CL6\nM5LSSC   DS    CL8\nM5LFSC   DS    CL6\n         ORG   PRTLINEE\n         SPACE 3\n         PRINT NOGEN\n         REGS\n         IEFUCBOB\n         CVT   DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MVSUSMPL": {"ttr": 1539, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "MVSUSMPL TITLE 'ERBUSMPL -- RMF USER MPL ADJUSTMENT CONSTANTS'\n***********************************************************************\n**                                                                   **\n**     THIS MODULE MUST BE LINK EDITED INTO MODULE \"ERBRUS99\" AS     **\n**     \"RENT\".  THIS ASSEMBLY REQUIRES THE \"AAPVT\" COMPONENT FROM    **\n**     THE SYSTEM OPTIONAL MACHINE READABLE MATERIAL AS A MACLIB.    **\n**                                                                   **\n**     MVS/3.8                                                       **\n**                                                                   **\n***********************************************************************\nERBUSMPL CSECT\n         USING *,15\n         B     BYMODULE\n         DC    AL1(23)\n         DC    CL8'ERBUSMPL'\n         DC    CL7' &SYSTIME'\n         DC    CL8'&SYSDATE'\n         DC    C' MVS/3.8'\n         PRINT NOGEN\nBYMODULE SAVE  (14,12)\n         USING GETMAINA,R13\n         LA    R1,SAVEARE1\n         ST    R1,8(,R13)     SAVE FORWARD POINTER\n         ST    R13,4(,R1)     SAVE BACKWARD POINTER\n         LR    R13,R1         SET UP REGISTER FOR SAVE AREA\n         DROP  R13\n         USING SAVEARE1,R13\n         DROP  R15\n         BALR  R12,0\n         USING *,R12\n         L     R11,RMCTA      POINTER TO THE RMCT\n         USING RMCT,R11\n         SPACE 2\n*     THE FIRST SECTION OF THIS REPORT IS FROM THE \"IRARMRMR\" MODULE.\n         SPACE 1\n         LA    R10,X'1F8'(R11,0) POINTER TO THE RCT\n         USING RCT,R10\n         CLC   =CL4'RCT',RCTRCT IS THE POINTER CORRECT?\n         BE    *+8             YES, CONTINUE\n         SR    R4,R4           NO, BLOW UP\n         DR    R8,R4\n         MVC   PUTLHDRL,HDRLHDA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLHIA\n         L     R5,RMCTEPBG\n         USING EPAT,R5\n         LA    R5,RMEPBRM2\n         DROP  R5\n         USING RMEP,R5\n         MVI   PRTLINE,C' '  HEADING SECTION -- MPL INVOCATION INTERVAL\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1AVG(24),=CL24'MPL ADJUSTMENT'\n         MVC   M2IND,=CL4' SEC'\n         MVC   M2AVG,MASKL6\n         L     R4,RMEPINT\n         CVD   R4,AVGVALUE\n         SRP   AVGVALUE,64-3,5\n         ED    M2AVG,AVGVALUE+5\n         MVC   M2HT+2(5),=CL5'EVERY'\n         DROP  R5\n         LA    R1,PRTDTL\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLHIA\n         LA    R1,MPLHDR2\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- PAGE FAULT RATE\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1AVG,MASKL6   CURRENT AVERAGE\n         LH    R5,RCVPTR\n         CVD   R5,AVGVALUE\n         ED    M1AVG,AVGVALUE+5\n         MVC   M1HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCPTRTH\n         CVD   R5,HIGTHRES\n         ED    M1HT,HIGTHRES+5\n         MVC   M1LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCPTRTL\n         CVD   R5,LOWTHRES\n         ED    M1LT,LOWTHRES+5\n         MVC   M1VAR,=CL19'PAGE FAULT RATE'\n         BAL   R4,SETINDIC\n         MVC   M1IND,PINDHOLD\n         MVC   M2AVG,MASKL6        PRINT SECTION -- UNREF. INTVL. COUNT\n         LH    R5,RCVUICA     CURRENT AVERAGE\n         CVD   R5,AVGVALUE\n         ED    M2AVG,AVGVALUE+5\n         MVC   M2HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCUICTH\n         CVD   R5,HIGTHRES\n         ED    M2HT,HIGTHRES+5\n         MVC   M2LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCUICTL\n         CVD   R5,LOWTHRES\n         ED    M2LT,LOWTHRES+5\n         MVC   M2VAR,=CL19'UNREF. INTVL. COUNT'\n         BAL   R4,SETINDID\n         MVC   M2IND,PINDHOLD\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- AUXSTM QUEUE LENGTH\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1AVG,MASKL6   CURRENT AVERAGE\n         LH    R5,RCVASMQA\n         CVD   R5,AVGVALUE\n         ED    M1AVG,AVGVALUE+5\n         MVC   M1HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCASMTH\n         CVD   R5,HIGTHRES\n         ED    M1HT,HIGTHRES+5\n         MVC   M1LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCASMTL\n         CVD   R5,LOWTHRES\n         ED    M1LT,LOWTHRES+5\n         MVC   M1VAR,=CL19'AUXSTM QUEUE LENGTH'\n         BAL   R4,SETINDIC\n         MVC   M1IND,PINDHOLD\n         MVC   M2HT,=CL6' N/A'     PRINT SECTION -- DPR & (CPU | PD)\n         MVC   M2VAR,=CL19'DPR && (CPU | PD)'\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- DEFERRED I/O UTIL.\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1AVG,MASKL6   CURRENT AVERAGE\n         LH    R5,RCVTOTDF\n         CVD   R5,AVGVALUE\n         ED    M1AVG,AVGVALUE+5\n         MVC   M1HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCTOTUT\n         CVD   R5,HIGTHRES\n         ED    M1HT,HIGTHRES+5\n         ZAP   LOWTHRES,HIGTHRES\n         MVC   M1VAR,=CL19'DEFERRED I/O UTIL.'\n         BAL   R4,SETINDIC\n         MVC   M1IND,PINDHOLD\n         MVC   M2HT,=CL6' N/A'     PRINT SECTION -- DEMAND PAGING RATE\n         MVC   M2VAR,=CL19'DEMAND PAGING RATE'\n         BAL   R4,SETINDIC\n         MVC   M2IND,PINDHOLD\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- CPU UTILIZATION\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1AVG,MASKL6   CURRENT AVERAGE\n         LH    R5,RCVCPUA\n         SRA   R5,4 /16\n         CVD   R5,AVGVALUE\n         ED    M1AVG,AVGVALUE+5\n         MVC   M1HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCCPUTH\n         SRA   R5,4 /16\n         CVD   R5,HIGTHRES\n         ED    M1HT,HIGTHRES+5\n         MVC   M1LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCCPUTL\n         SRA   R5,4 /16\n         CVD   R5,LOWTHRES\n         ED    M1LT,LOWTHRES+5\n         MVC   M1VAR,=CL19'CPU UTILIZATION'\n         BAL   R4,SETINDIC\n         MVC   M1IND,PINDHOLD\n         MVC   M2HT,=CL6' N/A'     PRINT SECTION -- CPU & DEMAND PAGING\n         MVC   M2VAR,=CL19'CPU && DEMAND PAGING'\n         BAL   R4,SETINDIC\n         MVC   M2IND,PINDHOLD\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- ANY LOGICAL CHAN TH\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         ZAP   AVGVALUE,=P'0'\n         MVC   M1HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCLCHUT\n         CVD   R5,HIGTHRES\n         ED    M1HT,HIGTHRES+5\n         ZAP   LOWTHRES,HIGTHRES NO LOW THRESHOLD\n         MVC   M1VAR,=CL19'ANY LOGICAL CHAN TH'\n         BAL   R4,SETINDIC\n         MVC   M1IND,PINDHOLD\n         ZAP   AVGVALUE,=P'0'      PRINT SECTION -- ANY LOGICAL CH EXCP\n         MVC   M2HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCLCHRR\n         CVD   R5,HIGTHRES\n         ED    M2HT,HIGTHRES+5\n         ZAP   LOWTHRES,HIGTHRES NO LOW THRESHOLD\n         MVC   M2VAR,=CL19'ANY LOGICAL CH EXCP'\n         BAL   R4,SETINDIC\n         MVC   M2IND,PINDHOLD\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- CONT. INDX EXCH. TH\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1HT,=CL6' N/A'\n         MVC   M1VAR,=CL19'CONT. INDX EXCH. TH'\n*                                  PRINT SECTION -- NUMBER OF AVQ LOWS\n         MVC   M2HT+3(9),=XL9'402020202020212060'\n         LH    R5,RCVAVQC\n         CVD   R5,HIGTHRES\n         ED    M2HT+3(9),HIGTHRES+4\n         MVC   M2VAR,=CL19'NUMBER OF AVQ LOWS'\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLHIA\n         LA    R1,HEADER0\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         SPACE 3\n         LA    R1,MPLHDR3\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         MVC   PUTLHDRL,HDRLHDA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         L     R8,RMCTDMDT    LOAD ADDRESS OF THE FIRST DMDT\n         USING DMDT,R8\nDMDTLOOP C     R8,RMCTDMDE    IS THIS THE END OF THE TABLE?\n         BH    DMDTLEND\n         CLI   DMDTHI,X'01'   *** DROP SPECIAL PURPOSE DOMAINS FROM ***\n         BNE   DMDTLOP0       *** THE DISPLAY (MUCH SHORTER)        ***\n         CLI   DMDTLO,X'01'\n         BNE   DMDTLOP0\n         CLC   DMDTCMPL,=H'1'\n         BE    DMDTLOP5\nDMDTLOP0 MVI   PRTLINE,C' '        PRINT SECTION -- DEFERED I/O UTIL.\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M3TRNTC,=CL6' N/A'\n         MVC   M3RUMX,=CL4'N/A'\n         LH    R3,DMDTOUTU    SET UP CURRENT # USERS ON OUT Q\n         CVD   R3,AVGVALUE\n         MVC   M3OUTU,MASKL4\n         ED    M3OUTU,AVGVALUE+6\n         LH    R3,DMDTGOOU    SET UP CURRENT # USERS GOING OUT\n         CVD   R3,AVGVALUE\n         MVC   M3GOOU,MASKL4\n         ED    M3GOOU,AVGVALUE+6\n         LH    R3,DMDTINCU    SET UP CURRENT # SWAPPABLE INCORE USERS\n         CVD   R3,AVGVALUE\n         MVC   M3INCU,MASKL4\n         ED    M3INCU,AVGVALUE+6\n         LH    R3,DMDTCMPL    SET UP CURRENT MPL\n         CVD   R3,AVGVALUE\n         MVC   M3DMPL,MASKL6\n         ED    M3DMPL,AVGVALUE+5\n*                             SET UP CONTENTION INDEX\n         MVC   M3CIDX,=CL6' N/A'\n         LH    R3,DMDTMPLT    SET UP CURRENT MPL TARGET\n         CVD   R3,AVGVALUE\n         MVC   M3MPLT,MASKL4\n         ED    M3MPLT,AVGVALUE+6\n         LH    R4,DMDTRUA     SET UP AVERAGE NUMBER OF READY USERS\n         SRDA  R4,4           SEPARATE FRACTION\n         SRL   R5,28\n         CVD   R4,AVGVALUE\n         M     R4,=F'100'\n         D     R4,=F'16'\n         CVD   R5,LOWTHRES\n         SRP   LOWTHRES,64-1,5\n         MVC   M3RUA+1(5),MASKL5D\n         ED    M3RUA+1(5),LOWTHRES+6\n         MVC   M3RUA(4),MASKL4\n         ED    M3RUA(4),AVGVALUE+6\n         SR    R3,R3          SET UP WEIGHTING FACTOR\n         IC    R3,DMDTWT\n         MVI   M3RUA,C'W'\n         CVD   R3,AVGVALUE\n         MVC   M3WT,MASKL4\n         ED    M3WT,AVGVALUE+6\n         SR    R3,R3          SET UP MAXIMUM MPL NUMBER\n         IC    R3,DMDTHI\n         CVD   R3,AVGVALUE\n         MVC   M3HI,MASKL4\n         ED    M3HI,AVGVALUE+6\n         SR    R3,R3          SET UP MINIMUM MPL NUMBER\n         IC    R3,DMDTLO\n         MVI   M3HI,C'/'\n         CVD   R3,AVGVALUE\n         MVC   M3LO,MASKL4\n         ED    M3LO,AVGVALUE+6\n         SR    R3,R3          SET UP DOMAIN NUMBER\n         IC    R3,DMDTNO\n         CVD   R3,AVGVALUE\n         UNPK  M3NO,AVGVALUE+6(2)\n         OI    M3NO+2,X'F0'\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLLOWA\n         LA    R1,PRTDTL\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\nDMDTLOP5 LA    R8,DMDTEND\n         B     DMDTLOOP\n         DROP  R8,R10\nDMDTLEND B     EXIT\nMPLHDR2  DC    H'79',CL80'    VARIABLE          LT   HT  AVG           X\n               VARIABLE         LT   HT  AVG     '\nMPLHDR3  DC    H'79',CL80'DMN  CONSTRAINT   RUA TAR  CI  CMPL SIC  GO  X\n               OT  NS MAX  SERV WSR  WET ET/C  C '\n         SPACE 3\nEXIT     SR    R15,R15\nEXITF    L     R13,4(0,R13)\n         L     R14,12(0,R13)\n         LM    R0,R12,20(R13)\n         MVI   12(R13),X'FF'\n         BR    R14\n         SPACE 1\nSETINDIC MVC   PINDHOLD,=CL6' ' SET THE INDICATOR AS APPROPRIATE\n         CP    AVGVALUE,LOWTHRES\n         BLR   R4\n         MVC   PINDHOLD,=CL4'  -'\n         CP    AVGVALUE,HIGTHRES\n         BNHR  R4\n         MVC   PINDHOLD,=CL4'<---'\n         BR    R4\n         SPACE 1\nSETINDID MVC   PINDHOLD,=CL6' ' SET THE INDICATOR AS APPROPRIATE\n         CP    AVGVALUE,HIGTHRES\n         BHR   R4\n         MVC   PINDHOLD,=CL4'  -'\n         CP    AVGVALUE,LOWTHRES\n         BNLR  R4\n         MVC   PINDHOLD,=CL4'<---'\n         BR    R4\n         SPACE 1\nPUTLINE  LA    R1,PUTLRECD    LOAD ADDRESS OF PARAMETERS\n         L     R15,PUTLINEA   ADDRESS OF PUTLINE ROUTINE\n         BALR  R14,R15        GO DISPLAY THE REQUEST\n         LTR   R15,R15        WAS THE PUTLINE SUCCESSFUL?\n         BZR   R4              YES, CONTINUE THE PROCESSING\n         LA    R15,12          NO, RETURN TO RMF CONTROL\n         B     EXITF\n         SPACE 3\nHEADER0  DC    H'2',CL2' '\nMASKL6   DC    XL6'402020202120'\nMASKL4   DC    XL4'40202120'\nMASKL5D  DC    XL5'4021204B20'\n         SPACE 1\n         LTORG\n         EJECT\n*   IGNORE ANY ASSEMBLY ERRORS IN THIS MACRO\n         IRARMCT\n         EJECT\n         PRINT GEN\n         IRARCT\n         SPACE 3\n         IRADMDT\n         SPACE 3\n*   IGNORE ANY ASSEMBLY ERRORS IN THIS MACRO\n         IRAEPAT\n         SPACE 3\n         IRARMEP\n         SPACE 3\n         ERBUSDTA\n         ORG   PRTLINE    DISPLAY AREA\nM1VAR    DS    CL19           DESCRIPTION 1\n         ORG   *-1\nM1LT     DS    CL6            LOW THRESHOLD VALUE\n         ORG   *-1\nM1HT     DS    CL6            HIGH THRESHOLD VALUE\n         ORG   *-1\nM1AVG    DS    CL6            CURRENT AVERAGE VALUE\nM1IND    DS    CL4            INDICATOR FOR OVER/UNDER\n         DS    CL2\nM2VAR    DS    CL19           DESCRIPTION 2\n         ORG   *-1\nM2LT     DS    CL6            LOW THRESHOLD VALUE\n         ORG   *-1\nM2HT     DS    CL6            HIGH THRESHOLD VALUE\n         ORG   *-1\nM2AVG    DS    CL6            CURRENT AVERAGE VALUE\nM2IND    DS    CL4            INDICATOR FOR OVER/UNDER\n         ORG   PRTLINE\nM3NO     DS    CL3            DOMAIN NUMBER\nM3LO     DS    CL4            MINIMUM MPL NUMBER\nM3HI     DS    CL4            MAXIMUM MPL NUMBER\nM3WT     DS    CL4            WEIGHTING FACTOR\nM3RUA    DS    CL6            AVERAGE NUMBER OF READY USERS\nM3MPLT   DS    CL4            CURRENT MPL TARGET\nM3CIDX   DS    CL4            CONTENTION INDEX\nM3DMPL   DS    CL6            CURRENT MPL\nM3INCU   DS    CL4            CURRENT # SWAPPABLE INCORE USERS\nM3GOOU   DS    CL4            CURRENT # OF USERS GOING OUT\nM3OUTU   DS    CL4            CURRENT # USERS ON OUT Q\nM3NSW    DS    CL4            CURRENT # NONSWAPPABLE IN USERS\nM3RUMX   DS    CL4            MAX # READY USERS IN INTERVAL\nM3TWMS   DS    CL6            INTVL DMN SVCE ACCUM\nM3TWSR   DS    CL4            WEIGHTED INTVL DMN SVCE\nM3TWET   DS    CL5            ELAPSED TIME AVG FOR RTO\nM3TRNTC  DS    CL5            CURRENT ELAPSED TIME AVG FOR RTO\nM3TRNC   DS    CL4            XACTION COUNT FOR RTO\n         SPACE 3\n         PRINT NOGEN\n         REGS\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SAMPLE": {"ttr": 1546, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "3033MP 16MEG SP1.1.0XSWP              CPU= 81 UIC= 60 PDT= 374 DPR= 77\n                            MPL ADJUSTMENT                       EVERY  20 SEC\n    VARIABLE          LT   HT  AVG           VARIABLE         LT   HT  AVG\nPAGE FAULT RATE       40   50   46  -   UNREF. INTVL. COUNT    0    0  108\nAUXSTM QUEUE LENGTH   50  100  123 <--- DPR & (CPU | PD)\nDEFERRED I/O UTIL.        100   30      DEMAND PAGING RATE   100  100   77\nCPU UTILIZATION      100  101   66      CPU & DEMAND PAGING  100  100   66\nPAGE DELAY(MS)     3276732767  374      PG DLAY & DMAND PG 3276732767  374\nANY LOGICAL CHAN TH       100           ANY LOGICAL CH EXCP        50\nCONT. INDX EXCH. TH              0      NUMBER OF AVQ LOWS              13\nAVAILABLE FRAME AVG            130      TOTAL PAGING RATE              329\n\nDMN  CONSTRAINT   RUA TAR  CI  CMPL SIC  GO  OT  NS MAX  SERV WSR  WET ET/C  C\n000 255/255   1W  1.7 255   0     2   1   0   0   1   3     4  47\n001   4/ 20   1W 10.9   4   2     4   2   0   7   2  11    1K 210\n002   8/ 30  16W 10.1  10  17    10   8   0   7   0  20    3K 286  1.6  2.5  34\n003   5/ 30   8W  2.0   5   4     5   3   0   0   0   5    3K 226\n004   2/ 30   4W 12.9   7   6     7   5   0   7   0  14   10K  1K\n005   5/  5   1W  4.9   5   1     5   0   0   0   5   5     0 563\n006   4/ 16   1W  3.9   4   1     4   0   0   0   4   4     0 135\n007   4/ 16   1W  2.8   4   0     3   2   0   0   1   4   288  29\n008   2/  2   1W  1.9   2   1     2   0   0   0   2   2     0 124\n099   0/  0   1W  0.9   0   1     0   0   0   1   0   1     0   0\n\n\n\n                                      CPU= 79 UIC= 66 PDT= 436 DPR= 85\n                                ASM DATA SETS\nPAGE DATA SETS:  SERVICE BURST =    50 MS   SIO NOT COMPLETE     1\n TYPE   SLOTS USED VOLSER DEVTYP I/O-ERR           DATA SET NAME\nPLPA     2600  57% DASDR3 3350         0 SYS1.PAGER3A\nCOMMON   2600  26% DASDR3 3350         0 SYS1.PAGER3B\nLOCAL   10400  54% DASDR8 3350         0 SYS1.PAGER8\nLOCAL   10400  52% DASDRC 3350         0 SYS1.PAGERC\n        20800  42%                     0  LOCAL PAGE DATA SET SUMMARY\n         2915  14%  LOCAL PAGE DATA SET VIO IMPACT\n\nSWAP DATA SETS:  NO. PAGES/SLOT =  12\n   SWAP SETS  USED VOLSER DEVTYP SET-ERR           DATA SET NAME\n          400  10% DISK23 3350         0 SYS1.SWAP23\n          600   8% DASDR7 3350         0 SYS1.SWAPR7\n          800   6% DASDR9 3350         0 SYS1.SWAPR9\n          800   5% DISK49 3350         0 SYS1.SWAP49\n         2600   7%  SWAP DATA SET SUMMARY\n\nSWAP COUNTS BY REASON:\n TERM-WT LONG-WT AUXST REALS  DET-WT  REQ ENQ-X RECOM UNLAT TRANS LOGIC-SW FAIL\n   30101    4404     0     0    2797    1    38    18  1051   127    7399   531\n     78%     11%                  7%                     3%                  7%\nSWAP IN FAIL--THRESHOLD =    62    DEFERRED USERS =     0 SYSTEM FAIL =    484\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SE2OBJ": {"ttr": 1548, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "SHAREHDR": {"ttr": 1795, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "K VSAM PL1 PLI VOLMAP VTOC CATALOG ERBRUS99 RMF RMFMON MPL ASM\n\n THIS FILE CONTAINS CONTRIBUTIONS BY:\n\n      JAMES F. COOK\n      THE COCA-COLA COMPANY\n      310 NORTH AVENUE, N.W.\n      ATLANTA, GA  30313\n      (404) 765-1522\n\n CONTENTS:\n   A PL/I (OPTIMIZER) PROGRAM TO PROVIDE A VSAM VOLUME MAP OF ALL VOLUMES\n   IN A PARTICULAR VSAM CATALOG.  IT MAPS EACH DATA SPACE AND EACH DATA\n   AND INDEX COMPONENT WITHIN THE DATA SPACE BY STARTING AND ENDING CCHH.\n\n   AN RMF USER EXIT TO PROVIDE THE MPL CONTENTION INDICATORS AND PAGE\n   DATA SET INFORMATION IN AN RMF MONITOR II SESSION.\n$EOM\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SP2RUS99": {"ttr": 1797, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SP2RUS99 TITLE 'ERBRUS99 -- RMF USER REPORT INTERACTIVE ONLY MODULE'\n***********************************************************************\n**                                                                   **\n**     THIS MODULE MUST BE LINK EDITED INTO LINKLIB OR INTO A TSO    **\n**     USER'S STEPLIB AS \"ERBRUS99\".  MODULE \"ERBGUS99\" IS NOT       **\n**     TO BE MODIFIED FOR THIS ROUTINE. THIS MODULE MUST BE \"RENT\"   **\n**     AND ALL EXTERNAL REFERENCES MUST BE RESOLVED.  THIS ASSEMBLY  **\n**     REQUIRES THE \"AAPVT\" COMPONENT FROM THE SYSTEM OPTIONAL       **\n**     MACHINE READABLE MATERIAL AS A MACLIB.                        **\n**                                                                   **\n**  USED IN SP2.1.X                                                  **\n**                                                                   **\n***********************************************************************\n**                                                                   **\n**     TO USE THIS MODULE, ENTER ON TSO:                             **\n**          RMFMON                                                   **\n**          USER HELP      TO DISPLAY THE AVAILABLE OPTIONS          **\n**          USER OPTION    FOR THE PARTICULAR OPTION                 **\n**                                                                   **\n***********************************************************************\nERBRUS99 CSECT\nERBRUS99 AMODE 31\nERBRUS99 RMODE ANY\n         USING *,15\n         B     BYMODULE\n         DC    AL1(23)\n         DC    CL8'ERBRUS99'\n         DC    CL7' &SYSTIME'\n         DC    CL8'&SYSDATE'\n         DC    CL8'SP2RUS99'\nFW2      DC    F'2'\n         PRINT NOGEN\nBYMODULE SAVE  (14,12)\n         LR    R3,R1\n         USING PARMFLD,R3\n         L     R1,PARMCODE\n         CLC   FW2,0(R1)      IS THE ERBFMENU SET UP CORRECTLY?\n         BE    MENUOK\n         LA    R15,8           NO, RETURN CODE IMMEDIATELY\n         L     R13,4(,R13)\n         B     EXITQ\nMENUOK   L     R4,PARMSUBP    LOAD SUBPOOL NUMBER FOR GETMAIN\n         SR    R6,R6\n         IC    R6,0(,R4)\n         L     R5,GETMAINL    LENGTH OF THE GETMAINED AREA\n         GETMAIN R,LV=(R5),SP=(R6)\n         ST    R1,8(,R13)     SAVE FORWARD POINTER\n         ST    R13,4(,R1)     SAVE BACKWARD POINTER\n         LR    R13,R1         SET UP REGISTER FOR SAVE AREA\n         USING GETMAINA,R13\n         ST    R3,PARMFLDA    SAVE ADDRESS OF RMF PARAMETERS\n         ST    R13,GOTMAINA\n         ST    R6,GOTMAINS\n         DROP  R15\n         BALR  R12,0\n         USING *,R12\n         MVC   EYECATCH(L'EYELIT),EYELIT\n         MVC   PUTLPLCB,PARMPLCB MOVE IN PUTLINE CONTROL BLOCK ADDRESS\n         OI    PUTLPLCB,X'80'\n         L     R5,PARMPUTL    MOVE IN PUTLINE ENTRY ADDRESS\n         MVC   PUTLINEA,0(R5)\n         LA    R5,L'PRTLINE   SET LENGTH OF DISPLAY\n         STH   R5,PRTDTL\n         LA    R5,DSPLHI      SAVE ADDRESSES FOR THE OPTIONS\n         ST    R5,DSPLHIA\n         LA    R5,DSPLLOW\n         ST    R5,DSPLLOWA\n         LA    R5,HDRLHD\n         ST    R5,HDRLHDA\n         LA    R5,HDRLDT\n         ST    R5,HDRLDTA\n         MVC   PINDHOLD,=CL4' '\n         LA    R5,16          POINTER TO THE CVT\n         L     R5,0(,R5)\n         USING CVT,R5\n         ST    R5,CVTA        SAVE THE CVT ADDRESS\n         L     R11,CVTOPCTP   POINTER TO THE RMCT\n         DROP  R5\n         USING RMCT,R11\n         CLC   =CL4'RMCT',RMCTNAME IS THE POINTER CORRECT?\n         BE    *+8             YES, CONTINUE\n         SR    R4,R4           NO, BLOW UP\n         DR    R8,R4\n         ST    R11,RMCTA      SAVE ADDRESS OF THE RMCT\n         SPACE 3\n         LA    R8,VALIDOPT    POINTER TO VALID OPTIONS\n         L     R10,PARMOPER   DECIDE THE REPORT TO PRESENT\n         LH    R9,0(,R10)     LOAD LENGTH OF THE REPORT OPTION\n         CH    R9,=H'4'       CHECK FOR THE \"TEST\" OPTION\n         BNE   OPTLOOP\n         SPACE 1\n***********************************************************************\n**                                                                   **\n**  THIS SHORT SECTION ALLOWS DEVELOPING A NEW SUBROUTINE WITHOUT    **\n**  EXCESSIVE IMPACT ON THE OTHER \"USER XXX\" ROUTINES. CODE THE      **\n**  NEW ROUTINE WITH A CSECT NAME AND LOAD MODULE NAME OF \"ERBRUSTS\" **\n**  AND LINK THAT ROUTINE INTO YOUR TSO USERID STEPLIB. ENTER        **\n**  \"USER TEST\" TO TEST THE NEW SUBROUTINE.  WHEN THE NEW SUBROUTINE **\n**  IS CORRECT, CHANGE THE CSECT NAME TO WHATEVER YOU LIKE AND       **\n**  INSERT THE CSECT NAME INTO THE \"VALIDOPT\" TABLE BELOW.  THEN     **\n**  LINK THE NEW SUBROUTINE WITH THIS CSECT AS LOAD MODULE ERBRUS99. **\n**                                                                   **\n***********************************************************************\n         SPACE 1\n         CLC   =C'TEST',2(R10)\n         BNE   OPTLOOP\n         LINK  EP=ERBRUSTS,DCB=0\n         LTR   R15,R15        TEST FOR BAD RETURN CODE\n         BNZ   EXITF\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         LA    R1,HEADE99\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         B     EXIT\n         SPACE 1\nOPTLOOP  LTR   R9,R9\n         BNP   OPTLOOP9\n         BCTR  R9,0\n         CH    R9,=H'2'       USE A MAXIMUM OF THREE CHAR FOR COMPARE\n         BNH   *+8\n         LA    R9,2\n         LA    R8,L'VALIDOPT(,R8)\n         L     R7,VALIDLEN    NUMBER OF ENTRIES\n         BCTR  R7,0\nOPTLOOP1 EX    R9,OPTCOMPR    TEST FOR A MATCH\n         BE    OPTLOOP9\n         LA    R8,L'VALIDOPT(,R8)\n         BCT   R7,OPTLOOP1\n         B     HELPRPT\nOPTLOOP9 L     R15,4(R8)      LOAD ADDRESS OF THE CORRECT MODULE\n         CALL  (15),ID=73\n         B     EXITF\n         SPACE 1\nOPTCOMPR CLC   2(0,R10),0(R8)\n         SPACE 3\nVALIDHD1 DC    H'18',CL18'VALID OPTIONS ARE:'\n         SPACE 1\nVALIDOPT DS    0D             VALID OPTIONS FOR THE \"USER\" COMMAND\nVALIDESC DC    CL4'HELP',V(ERBUSMPL) DEFAULT OPTION--MUST BE FIRST\n         DC    CL4'MPLC',V(ERBUSMPL) MPL ADJUSTMENT CONSTANTS\nVALIDEND DS    0C\n         SPACE 1\nVALIDLEN DC    A((VALIDEND-VALIDOPT)/L'VALIDOPT)\n         SPACE 3\nHELPRPT  MVC   PUTLHDRL,HDRLDTA HANDLE INVALID OPTION ON \"USER\"\n         MVC   PUTLDSPL,DSPLHIA\n         LA    R1,VALIDHD1\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         LA    R4,PRTDTL\n         ST    R4,PUTLRECD\n         LA    R7,VALIDOPT    START OF TABLE\n         L     R3,VALIDLEN    LENGTH OF TABLE\nVALIDLOP LA    R5,PRTLINE+1   START OF PRINT LINE\n         LA    R6,1           LENGTH OF THE CURRENT PRINT LINE\n         MVI   PRTLINE,C' '\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\nVALIDLP1 LA    R6,L'VALIDESC+1(,R6) LENGTH AFTER THIS IS ADDED\n         CH    R6,PRTDTL      WILL THIS OPTION FIT ON THE LINE?\n         BH    VALIDLP2         NO, PRINT THIS AND GO TO NEXT\n         MVC   0(L'VALIDESC,R5),0(R7) MOVE IN THE VALID OPTION\n         LA    R7,L'VALIDOPT(,R7)\n         LA    R5,L'VALIDESC+1(,R5)\n         BCT   R3,VALIDLP1\nVALIDLP2 BAL   R4,PUTLINE\n         LTR   R3,R3\n         BNZ   VALIDLOP\n         SPACE 3\nEXIT     SR    R15,R15        NORMAL RETURN\nEXITF    LR    R2,R15         SAVE RETURN CODE\n         L     R6,GOTMAINA\n         L     R5,GETMAINL\n         L     R4,GOTMAINS    LOAD SUBPOOL FOR FREEMAIN\n         L     R13,4(,R13)    RESTORE REGISTER 13\n         FREEMAIN R,SP=(R4),LV=(R5),A=(R6)\n         LR    R15,R2         RESTORE RETURN CODE\nEXITQ    L     R14,12(R13,0)\n         LM    R0,R12,20(R13)\n         MVI   12(R13),X'FF'\n         BR    R14\n         SPACE 1\nPUTLINE  LA    R1,PUTLRECD    LOAD ADDRESS OF PARAMETERS\n         L     R15,PUTLINEA   ADDRESS OF PUTLINE ROUTINE\n         BALR  R14,R15        GO DISPLAY THE REQUEST\n         LTR   R15,R15        WAS THE PUTLINE SUCCESSFUL?\n         BZR   R4              YES, CONTINUE THE PROCESSING\n         LA    R15,12          NO, RETURN TO RMF CONTROL\n         B     EXITF\n         SPACE 3\nGETMAINL DC    A(GETMAINE-GETMAINA) LENGTH OF THE GETMAINED AREA\nDSPLHI   DC    X'80'          HIGH INTENSITY DISPLAY\nDSPLLOW  DC    X'00'          LOW INTENSITY DISPLAY\nHDRLHD   DC    C'HD'          RECORD IS A HEADER LINE\nHDRLDT   DC    C'DT'          RECORD IS A DETAIL LINE\nEYELIT   DC    CL16' ERBRUS99 DATA'\n         SPACE 1\nHEADE99  DC    H'79',CL80'1234567810123456782012345678301234567840123456\n               6785012345678601234567870123456789'\n         SPACE 1\n         LTORG\n         SPACE 3\n*  IGNORE ANY ASSEMBLY ERRORS IN THIS MACRO\n         PRINT GEN\n         IRARMCT\n         SPACE 3\n         ERBUSDTA\n         SPACE 3\n         PRINT NOGEN\n         REGS\n         CVT   DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SP212MPL": {"ttr": 1802, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SP212MPL TITLE 'ERBUSMPL -- RMF USER MPL ADJUSTMENT CONSTANTS'\n***********************************************************************\n**                                                                   **\n**     THIS MODULE MUST BE LINK EDITED INTO MODULE \"ERBRUS99\" AS     **\n**     \"RENT\".  THIS ASSEMBLY REQUIRES THE \"AAPVT\" COMPONENT FROM    **\n**     THE SYSTEM OPTIONAL MACHINE READABLE MATERIAL AS A MACLIB.    **\n**                                                                   **\n**     TESTED ON: MVS/SP2.1.2                                        **\n**                                                                   **\n***********************************************************************\nERBUSMPL CSECT\nERBUSMPL AMODE 31\nERBUSMPL RMODE ANY\n         USING *,15\n         B     BYMODULE\n         DC    AL1(31)\n         DC    CL8'ERBUSMPL'\n         DC    CL7' &SYSTIME'\n         DC    CL8'&SYSDATE'\n         DC    C' MVS/SP212'\n         PRINT NOGEN\nBYMODULE SAVE  (14,12)\n         USING GETMAINA,R13\n         LA    R1,SAVEARE1\n         ST    R1,8(,R13)     SAVE FORWARD POINTER\n         ST    R13,4(,R1)     SAVE BACKWARD POINTER\n         LR    R13,R1         SET UP REGISTER FOR SAVE AREA\n         DROP  R13\n         USING SAVEARE1,R13\n         DROP  R15\n         BALR  R12,0\n         USING *,R12\n         L     R11,RMCTA      POINTER TO THE RMCT\n         USING RMCT,R11\n         CLC   =CL4'RMCT',RMCTNAME IS THE POINTER CORRECT?\n         BE    *+8             YES, CONTINUE\n         SR    R4,R4           NO, BLOW UP\n         DR    R8,R4\n         SPACE 2\n*     THE FIRST SECTION OF THIS REPORT IS FROM THE \"IRARMRMR\" MODULE.\n         SPACE 1\n         L     R10,RMCTRCT    POINTER TO THE RCT\n         USING RCT,R10\n*        MVC   DUMPER(RCTLEN),RCT ****** FOR DEBUGGING ONLY ***********\n*        LA    R10,DUMPER         ****** FOR DEBUGGING ONLY ***********\n         CLC   =CL4'RCT',RCTRCT IS THE POINTER CORRECT?\n         BE    *+8             YES, CONTINUE\n         SR    R4,R4           NO, BLOW UP\n         DR    R8,R4\n         MVC   PUTLHDRL,HDRLHDA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLHIA\n         L     R5,RMCTEPBG\n         USING EPAT,R5\n*        MVC   DUMPER(255),EPAT   ****** FOR DEBUGGING ONLY ***********\n*        MVC   DUMPER+255(255),EPAT+255 ***** FOR DEBUGGING ONLY ******\n*        MVC   DUMPER+510(255),EPAT+510 ***** FOR DEBUGGING ONLY ******\n*        MVC   DUMPER+765(255),EPAT+765 ***** FOR DEBUGGING ONLY ******\n         LA    R5,RMEPBRM2\n         DROP  R5\n         MVI   PRTLINE,C' '  HEADING SECTION -- MPL INVOCATION INTERVAL\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1AVG(24),=CL24'MPL ADJUSTMENT'\n         MVC   M2IND,=CL4' SEC'\n         MVC   M2AVG,MASKL6\n         L     R4,36(R5)\n         CVD   R4,AVGVALUE\n         SRP   AVGVALUE,64-3,5\n         ED    M2AVG,AVGVALUE+5\n         MVC   M2HT+2(5),=CL5'EVERY'\n         LA    R1,PRTDTL\n         ST    R1,PUTLRECD\n         SPACE 3\n         BAL   R4,PUTLINE\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLHIA\n         LA    R1,MPLHDR2\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- PAGE FAULT RATE\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1AVG,MASKL6   CURRENT AVERAGE\n         LH    R5,RCVPTR\n         CVD   R5,AVGVALUE\n         ED    M1AVG,AVGVALUE+5\n         MVC   M1HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCPTRTH\n         CVD   R5,HIGTHRES\n         ED    M1HT,HIGTHRES+5\n         MVC   M1LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCPTRTL\n         CVD   R5,LOWTHRES\n         ED    M1LT,LOWTHRES+5\n         MVC   M1VAR,=CL19'PAGE FAULT RATE'\n         BAL   R4,SETINDIC\n         MVC   M1IND,PINDHOLD\n         MVC   M2AVG,MASKL6        PRINT SECTION -- UNREF. INTVL. COUNT\n         LH    R5,RCVUICA     CURRENT AVERAGE\n         CVD   R5,AVGVALUE\n         ED    M2AVG,AVGVALUE+5\n         MVC   M2HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCUICTH\n         CVD   R5,HIGTHRES\n         ED    M2HT,HIGTHRES+5\n         MVC   M2LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCUICTL\n         CVD   R5,LOWTHRES\n         ED    M2LT,LOWTHRES+5\n         MVC   M2VAR,=CL19'UNREF. INTVL. COUNT'\n         BAL   R4,SETINDID\n         MVC   M2IND,PINDHOLD\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- AUXSTM QUEUE LENGTH\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1AVG,MASKL6   CURRENT AVERAGE\n         LH    R5,RCVASMQA\n         CVD   R5,AVGVALUE\n         ED    M1AVG,AVGVALUE+5\n         MVC   M1HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCASMTH\n         CVD   R5,HIGTHRES\n         ED    M1HT,HIGTHRES+5\n         MVC   M1LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCASMTL\n         CVD   R5,LOWTHRES\n         ED    M1LT,LOWTHRES+5\n         MVC   M1VAR,=CL19'AUXSTM QUEUE LENGTH'\n         BAL   R4,SETINDIC\n         MVC   M1IND,PINDHOLD\n*                                  PRINT SECTION -- DPR & (CPU | PD)\n         LH    R5,RCVMSPP     PAGE DELAY\n         CH    R5,RCCMSPTH\n         BNH   *+10\n         MVC   M2AVG,=CL6' &&PD'\n         LH    R5,RCVCPUA     CPU UTILIZATION\n         CH    R5,RCCCPUPH\n         BNH   *+10\n         MVC   M2HT,=CL6' &&CPU'\n         LH    R5,RCVDPR      DEMAND PAGING RATE\n         CH    R5,RCCDPRTH\n         BNH   *+10\n         MVC   M2LT,=CL6'  DPR'\n         CLC   M2LT,=CL6' '     SET INDICATOR?\n         BE    DPRPDEND\n         CLC   M2HT,=CL6' '\n         BNE   DPRPDMVC\n         CLC   M2AVG,=CL6' '\n         BE    DPRPDEND\nDPRPDMVC MVC   M2IND,=C'<***'\nDPRPDEND MVC   M2VAR,=CL19'DPR && (CPU | PD)'\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- DEFERRED I/O UTIL.\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n*        MVC   M1AVG,MASKL6   CURRENT AVERAGE\n*        LH    R5,RCVTOTDF\n*        CVD   R5,AVGVALUE\n*        ED    M1AVG,AVGVALUE+5\n*        MVC   M1HT,MASKL6    HIGH THRESHOLD\n*        LH    R5,RCCTOTUT\n*        CVD   R5,HIGTHRES\n*        ED    M1HT,HIGTHRES+5\n*        ZAP   LOWTHRES,HIGTHRES\n*        MVC   M1VAR,=CL19'DEFERRED I/O UTIL.'\n*        BAL   R4,SETINDIC\n*        MVC   M1IND,PINDHOLD\n         MVC   M2AVG,MASKL6        PRINT SECTION -- DEMAND PAGING RATE\n         LH    R5,RCVDPR      CURRENT AVERAGE\n         CVD   R5,AVGVALUE\n         ED    M2AVG,AVGVALUE+5\n         MVC   M2HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCDPRTH\n         CVD   R5,HIGTHRES\n         ED    M2HT,HIGTHRES+5\n         MVC   M2LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCDPRTL\n         CVD   R5,LOWTHRES\n         ED    M2LT,LOWTHRES+5\n         MVC   M2VAR,=CL19'DEMAND PAGING RATE'\n         BAL   R4,SETINDIC\n         MVC   M2IND,PINDHOLD\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- CPU UTILIZATION\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1AVG,MASKL6   CURRENT AVERAGE\n         LH    R5,RCVCPUA\n         SRA   R5,4 /16\n         CVD   R5,AVGVALUE\n         ED    M1AVG,AVGVALUE+5\n         MVC   M1HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCCPUTH\n         SRA   R5,4 /16\n         CVD   R5,HIGTHRES\n         ED    M1HT,HIGTHRES+5\n         MVC   M1LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCCPUTL\n         SRA   R5,4 /16\n         CVD   R5,LOWTHRES\n         ED    M1LT,LOWTHRES+5\n         MVC   M1VAR,=CL19'CPU UTILIZATION'\n         BAL   R4,SETINDIC\n         MVC   M1IND,PINDHOLD\n         MVC   M2AVG,MASKL6        PRINT SECTION -- CPU & DEMAND PAGING\n         ED    M2AVG,AVGVALUE+5 CURRENT AVERAGE\n         MVC   M2HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCCPUPH\n         SRA   R5,4 /16\n         CVD   R5,HIGTHRES\n         ED    M2HT,HIGTHRES+5\n         MVC   M2LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCCPUPL\n         SRA   R5,4 /16\n         CVD   R5,LOWTHRES\n         ED    M2LT,LOWTHRES+5\n         MVC   M2VAR,=CL19'CPU && DEMAND PAGING'\n         BAL   R4,SETINDIC\n         MVC   M2IND,PINDHOLD\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- PAGE DELAY(MS)\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1AVG,MASKL6   CURRENT AVERAGE\n         LH    R5,RCVMSPP\n         CVD   R5,AVGVALUE\n         ED    M1AVG,AVGVALUE+5\n         MVC   M1HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCPDLTH\n         CVD   R5,HIGTHRES\n         ED    M1HT,HIGTHRES+5\n         MVC   M1LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCPDLTL\n         CVD   R5,LOWTHRES\n         ED    M1LT,LOWTHRES+5\n         MVC   M1VAR,=CL19'PAGE DELAY(MS)'\n         BAL   R4,SETINDIC\n         MVC   M1IND,PINDHOLD\n         MVC   M2AVG,MASKL6        PRINT SECTION -- PG DLAY & DMAND PG\n         ED    M2AVG,AVGVALUE+5 CURRENT AVERAGE\n         MVC   M2HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCMSPTH\n         CVD   R5,HIGTHRES\n         ED    M2HT,HIGTHRES+5\n         MVC   M2LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCMSPTL\n         CVD   R5,LOWTHRES\n         ED    M2LT,LOWTHRES+5\n         MVC   M2VAR,=CL19'PG DLAY && DMAND PG'\n         BAL   R4,SETINDIC\n         MVC   M2IND,PINDHOLD\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- ONLINE STORAGE %\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1AVG,MASKL6   CURRENT AVERAGE\n         LH    R5,RCVFXIOP\n         CVD   R5,AVGVALUE\n         ED    M1AVG,AVGVALUE+5\n         MVC   M1HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCFXTTH\n         CVD   R5,HIGTHRES\n         ED    M1HT,HIGTHRES+5\n         MVC   M1LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCFXTTL\n         CVD   R5,LOWTHRES\n         ED    M1LT,LOWTHRES+5\n         MVC   M1VAR,=CL19'ONLINE STORAGE %'\n         BAL   R4,SETINDIC\n         MVC   M1IND,PINDHOLD\n*                                  PRINT SECTION -- STORAGE BELOW 16M\n         MVC   M2AVG,MASKL6   CURRENT AVERAGE\n         LH    R5,RCVMFXA\n         CVD   R5,AVGVALUE\n         ED    M2AVG,AVGVALUE+5\n         MVC   M2HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCFXETH\n         CVD   R5,HIGTHRES\n         ED    M2HT,HIGTHRES+5\n         MVC   M2LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCFXETL\n         CVD   R5,LOWTHRES\n         ED    M2LT,LOWTHRES+5\n         MVC   M2VAR,=CL19'STORAGE BELOW 16M %'\n         BAL   R4,SETINDIC\n         MVC   M2IND,PINDHOLD\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- CONT. INDX EXCH. TH\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1HT+3(9),=XL9'402020202020212060'\n         LH    R5,RCCDCITL\n         CVD   R5,HIGTHRES\n         ED    M1HT+3(9),HIGTHRES+4\n         MVC   M1VAR,=CL19'CONT. INDX EXCH. TH'\n*                                  PRINT SECTION -- NUMBER OF AVQ LOWS\n         MVC   M2HT+3(9),=XL9'402020202020212060'\n         LH    R5,RCVAVQC\n         CVD   R5,HIGTHRES\n         ED    M2HT+3(9),HIGTHRES+4\n         MVC   M2VAR,=CL19'NUMBER OF AVQ LOWS'\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- AVAILABLE FRAME AVG\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1HT+3(9),=XL9'402020202020212060'\n         LH    R5,RCVAFQA\n         CVD   R5,HIGTHRES\n         ED    M1HT+3(9),HIGTHRES+4\n         MVC   M1VAR,=CL19'AVAILABLE FRAME AVG'\n*                                  PRINT SECTION -- TOTAL PAGING RATE\n         MVC   M2HT+3(9),=XL9'402020202020212060'\n         LH    R5,RCVPAGRT\n         CVD   R5,HIGTHRES\n         ED    M2HT+3(9),HIGTHRES+4\n         MVC   M2VAR,=CL19'TOTAL PAGING RATE'\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLHIA\n         LA    R1,HEADER0\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         SPACE 3\n         LA    R1,MPLHDR3\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         MVC   PUTLHDRL,HDRLHDA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         L     R8,RMCTDMDT    LOAD ADDRESS OF THE FIRST DMDT\n         USING DMDT,R8\n*        MVC   DUMPER(255),DMDT   ****** FOR DEBUGGING ONLY ***********\nDMDTLOOP C     R8,RMCTDMDE    IS THIS THE END OF THE TABLE?\n         BH    DMDTLEND\n         CLI   DMDTHI,X'01'   *** DROP SPECIAL PURPOSE DOMAINS FROM ***\n         BNE   DMDTLOP1       *** THE DISPLAY (MUCH SHORTER)        ***\n         CLI   DMDTLO,X'01'\n         BNE   DMDTLOP1\n         CLC   DMDTCMPL,=H'1'\n         BE    DMDTLOP6\nDMDTLOP1 MVI   PRTLINE,C' '        PRINT SECTION -- DEFERED I/O UTIL.\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         TM    DMDTFLGS,DMDTRTO RTO DOMAIN?\n         BNO   DMDTLOP3\n         L     R3,DMDTTRNC    SET UP TRANSACTION COUNT\n         CVD   R3,AVGVALUE\n         MVC   M3TRNC,MASKL4\n         ED    M3TRNC,AVGVALUE+6\n         CP    AVGVALUE,=P'0' PREVENT ZERO DIVIDE\n         BE    DMDTLOP2\n         L     R5,DMDTTRNT    SET UP CURRENT ELAPSED TIME AVERAGE\n         LTR   R5,R5\n         BZ    DMDTLOP2\n         SR    R4,R4\n         D     R4,DMDTTRNC\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-2,5\n         MVC   M3TRNTC,MASKL5D\n         ED    M3TRNTC,AVGVALUE+6\nDMDTLOP2 L     R3,DMDTTWET    SET UP ELAPSED TIME AVERAGE FOR RTO\n         LTR   R3,R3\n         BZ    DMDTLOP3\n         CVD   R3,AVGVALUE\n         SRP   AVGVALUE,64-2,5\n         MVC   M3TWET,MASKL5D\n         ED    M3TWET,AVGVALUE+6\nDMDTLOP3 L     R3,DMDTTWSR    SET UP WEIGHTED INTERVAL DOMAIN SERVICE\n         CVD   R3,AVGVALUE\n         MVC   M3TWSR,MASKL4\n         ED    M3TWSR,AVGVALUE+6\n         CP    AVGVALUE,=P'1000'\n         BNH   DMDTLOP4\n         SRP   AVGVALUE,64-3,5\n         MP    AVGVALUE,=P'10'\n         MVC   M3TWSR,MASKL4\n         ED    M3TWSR,AVGVALUE+6\n         MVI   M3TWSR+L'M3TWSR-1,C'K'\n         CP    AVGVALUE,=P'10000'\n         BNH   DMDTLOP4\n         SRP   AVGVALUE,64-4,5\n         MP    AVGVALUE,=P'10'\n         MVC   M3TWSR,MASKL4\n         ED    M3TWSR,AVGVALUE+6\n         MVI   M3TWSR+L'M3TWSR-1,C'M'\nDMDTLOP4 L     R3,DMDTWMS     SET UP INTERVAL DOMAIN SERVICE ACCUMUL\n         CVD   R3,AVGVALUE\n         MVC   M3TWMS,MASKL6\n         ED    M3TWMS,AVGVALUE+5\n         CP    AVGVALUE,=P'1000'\n         BNH   DMDTLOP5\n         SRP   AVGVALUE,64-3,5\n         MP    AVGVALUE,=P'10'\n         MVC   M3TWMS,MASKL6\n         ED    M3TWMS,AVGVALUE+5\n         MVI   M3TWMS+L'M3TWMS-1,C'K'\n         CP    AVGVALUE,=P'10000'\n         BNH   DMDTLOP5\n         SRP   AVGVALUE,64-4,5\n         MP    AVGVALUE,=P'10'\n         MVC   M3TWMS,MASKL6\n         ED    M3TWMS,AVGVALUE+5\n         MVI   M3TWMS+L'M3TWMS-1,C'M'\nDMDTLOP5 LH    R3,DMDTRUMX    SET UP MAX # READY USERS IN INTERVAL\n         CVD   R3,AVGVALUE\n         MVC   M3RUMX,MASKL4\n         ED    M3RUMX,AVGVALUE+6\n         LH    R3,DMDTNSW     SET UP CURRENT # NONSWAPPABLE IN USERS\n         CVD   R3,AVGVALUE\n         MVC   M3NSW,MASKL4\n         ED    M3NSW,AVGVALUE+6\n         LH    R3,DMDTOUTU    SET UP CURRENT # USERS ON OUT Q\n         CVD   R3,AVGVALUE\n         MVC   M3OUTU,MASKL4\n         ED    M3OUTU,AVGVALUE+6\n         LH    R3,DMDTGOOU    SET UP CURRENT # USERS GOING OUT\n         CVD   R3,AVGVALUE\n         MVC   M3GOOU,MASKL4\n         ED    M3GOOU,AVGVALUE+6\n         LH    R3,DMDTINCU    SET UP CURRENT # SWAPPABLE INCORE USERS\n         CVD   R3,AVGVALUE\n         MVC   M3INCU,MASKL4\n         ED    M3INCU,AVGVALUE+6\n         LH    R3,DMDTCMPL    SET UP CURRENT MPL\n         CVD   R3,AVGVALUE\n         MVC   M3DMPL,MASKL6\n         ED    M3DMPL,AVGVALUE+5\n         LH    R3,DMDTCIDX    SET UP CONTENTION INDEX\n         CVD   R3,AVGVALUE\n         MVC   M3CIDX,MASKL4\n         ED    M3CIDX,AVGVALUE+6\n         LH    R3,DMDTMPLT    SET UP CURRENT MPL TARGET\n         CVD   R3,AVGVALUE\n         MVC   M3MPLT,MASKL4\n         ED    M3MPLT,AVGVALUE+6\n         LH    R4,DMDTRUA     SET UP AVERAGE NUMBER OF READY USERS\n         SRDA  R4,4           SEPARATE FRACTION\n         SRL   R5,28\n         CVD   R4,AVGVALUE\n         M     R4,=F'100'\n         D     R4,=F'16'\n         CVD   R5,LOWTHRES\n         SRP   LOWTHRES,64-1,5\n         MVC   M3RUA+1(5),MASKL5D\n         ED    M3RUA+1(5),LOWTHRES+6\n         MVC   M3RUA(4),MASKL4\n         ED    M3RUA(4),AVGVALUE+6\n         SR    R3,R3          SET UP WEIGHTING FACTOR\n         IC    R3,DMDTWT\n         MVI   M3RUA,C'W'\n         CVD   R3,AVGVALUE\n         MVC   M3WT,MASKL4\n         ED    M3WT,AVGVALUE+6\n         SR    R3,R3          SET UP MAXIMUM MPL NUMBER\n         IC    R3,DMDTHI\n         CVD   R3,AVGVALUE\n         MVC   M3HI,MASKL4\n         ED    M3HI,AVGVALUE+6\n         SR    R3,R3          SET UP MINIMUM MPL NUMBER\n         IC    R3,DMDTLO\n         MVI   M3HI,C'/'\n         CVD   R3,AVGVALUE\n         MVC   M3LO,MASKL4\n         ED    M3LO,AVGVALUE+6\n         SR    R3,R3          SET UP DOMAIN NUMBER\n         IC    R3,DMDTNO\n         CVD   R3,AVGVALUE\n         UNPK  M3NO,AVGVALUE+6(2)\n         OI    M3NO+2,X'F0'\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLLOWA\n         LA    R1,PRTDTL\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\nDMDTLOP6 LA    R8,DMDTEND\n*        MVC   DUMPER(DMDTLEN),DMDT **** FOR DEBUGGING ONLY ***********\n         B     DMDTLOOP\n         DROP  R8,R10\nDMDTLEND B     EXIT\nMPLHDR2  DC    H'79',CL80'    VARIABLE          LT   HT  AVG           X\n               VARIABLE         LT   HT  AVG     '\nMPLHDR3  DC    H'79',CL80'DMN  CONSTRAINT   RUA TAR  CI  CMPL SIC  GO  X\n               OT  NS MAX  SERV WSR  WET ET/C  C '\n         SPACE 3\nEXIT     SR    R15,R15\nEXITF    L     R13,4(0,R13)\n         L     R14,12(0,R13)\n         LM    R0,R12,20(R13)\n         MVI   12(R13),X'FF'\n         BR    R14\n         SPACE 1\nSETINDIC MVC   PINDHOLD,=CL6' ' SET THE INDICATOR AS APPROPRIATE\n         CP    AVGVALUE,LOWTHRES\n         BLR   R4\n         MVC   PINDHOLD,=CL4'  -'\n         CP    AVGVALUE,HIGTHRES\n         BNHR  R4\n         MVC   PINDHOLD,=CL4'<---'\n         BR    R4\n         SPACE 1\nSETINDID MVC   PINDHOLD,=CL6' ' SET THE INDICATOR AS APPROPRIATE\n         CP    AVGVALUE,HIGTHRES\n         BHR   R4\n         MVC   PINDHOLD,=CL4'  -'\n         CP    AVGVALUE,LOWTHRES\n         BNLR  R4\n         MVC   PINDHOLD,=CL4'<---'\n         BR    R4\n         SPACE 1\nPUTLINE  LA    R1,PUTLRECD    LOAD ADDRESS OF PARAMETERS\n         L     R15,PUTLINEA   ADDRESS OF PUTLINE ROUTINE\n         BALR  R14,R15        GO DISPLAY THE REQUEST\n         LTR   R15,R15        WAS THE PUTLINE SUCCESSFUL?\n         BZR   R4              YES, CONTINUE THE PROCESSING\n         LA    R15,12          NO, RETURN TO RMF CONTROL\n         B     EXITF\n         SPACE 3\nHEADER0  DC    H'2',CL2' '\nMASKL6   DC    XL6'402020202120'\nMASKL4   DC    XL4'40202120'\nMASKL5D  DC    XL5'4021204B20'\n         SPACE 1\n         LTORG\n         EJECT\n         PRINT GEN\n         IRARMCT\n         EJECT\n         IRARCT\n         SPACE 3\n         IRADMDT\n         SPACE 3\n         PRINT NOGEN\n* IGNORE ANY ASSEMBLY ERRORS IN THE FOLLOWING MACRO\n         IRAEPAT\n         SPACE 3\n         PRINT GEN\n         ERBUSDTA\n         ORG   PRTLINE    DISPLAY AREA\nM1VAR    DS    CL19           DESCRIPTION 1\n         ORG   *-1\nM1LT     DS    CL6            LOW THRESHOLD VALUE\n         ORG   *-1\nM1HT     DS    CL6            HIGH THRESHOLD VALUE\n         ORG   *-1\nM1AVG    DS    CL6            CURRENT AVERAGE VALUE\nM1IND    DS    CL4            INDICATOR FOR OVER/UNDER\n         DS    CL2\nM2VAR    DS    CL19           DESCRIPTION 2\n         ORG   *-1\nM2LT     DS    CL6            LOW THRESHOLD VALUE\n         ORG   *-1\nM2HT     DS    CL6            HIGH THRESHOLD VALUE\n         ORG   *-1\nM2AVG    DS    CL6            CURRENT AVERAGE VALUE\nM2IND    DS    CL4            INDICATOR FOR OVER/UNDER\n         ORG   PRTLINE\nM3NO     DS    CL3            DOMAIN NUMBER\nM3LO     DS    CL4            MINIMUM MPL NUMBER\nM3HI     DS    CL4            MAXIMUM MPL NUMBER\nM3WT     DS    CL4            WEIGHTING FACTOR\nM3RUA    DS    CL6            AVERAGE NUMBER OF READY USERS\nM3MPLT   DS    CL4            CURRENT MPL TARGET\nM3CIDX   DS    CL4            CONTENTION INDEX\nM3DMPL   DS    CL6            CURRENT MPL\nM3INCU   DS    CL4            CURRENT # SWAPPABLE INCORE USERS\nM3GOOU   DS    CL4            CURRENT # OF USERS GOING OUT\nM3OUTU   DS    CL4            CURRENT # USERS ON OUT Q\nM3NSW    DS    CL4            CURRENT # NONSWAPPABLE IN USERS\nM3RUMX   DS    CL4            MAX # READY USERS IN INTERVAL\nM3TWMS   DS    CL6            INTVL DMN SVCE ACCUM\nM3TWSR   DS    CL4            WEIGHTED INTVL DMN SVCE\nM3TWET   DS    CL5            ELAPSED TIME AVG FOR RTO\nM3TRNTC  DS    CL5            CURRENT ELAPSED TIME AVG FOR RTO\nM3TRNC   DS    CL4            XACTION COUNT FOR RTO\n         SPACE 3\n         PRINT NOGEN\n         REGS\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SP212OBJ": {"ttr": 2055, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "SP213MPL": {"ttr": 2058, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SP213MPL TITLE 'ERBUSMPL -- RMF USER MPL ADJUSTMENT CONSTANTS'\n***********************************************************************\n**                                                                   **\n**     THIS MODULE MUST BE LINK EDITED INTO MODULE \"ERBRUS99\" AS     **\n**     \"RENT\".  THIS ASSEMBLY REQUIRES THE \"AAPVT\" COMPONENT FROM    **\n**     THE SYSTEM OPTIONAL MACHINE READABLE MATERIAL AS A MACLIB.    **\n**                                                                   **\n**     MVS/SP2.1.3                                                   **\n**                                                                   **\n***********************************************************************\nERBUSMPL CSECT\nERBUSMPL AMODE 31\nERBUSMPL RMODE ANY\n         USING *,15\n         B     BYMODULE\n         DC    AL1(31)\n         DC    CL8'ERBUSMPL'\n         DC    CL7' &SYSTIME'\n         DC    CL8'&SYSDATE'\n         DC    C' MVS/SP213'\n         PRINT NOGEN\nBYMODULE SAVE  (14,12)\n         USING GETMAINA,R13\n         LA    R1,SAVEARE1\n         ST    R1,8(,R13)     SAVE FORWARD POINTER\n         ST    R13,4(,R1)     SAVE BACKWARD POINTER\n         LR    R13,R1         SET UP REGISTER FOR SAVE AREA\n         DROP  R13\n         USING SAVEARE1,R13\n         DROP  R15\n         BALR  R12,0\n         USING *,R12\n         L     R11,RMCTA      POINTER TO THE RMCT\n         USING RMCT,R11\n         CLC   =CL4'RMCT',RMCTNAME IS THE POINTER CORRECT?\n         BE    *+8             YES, CONTINUE\n         SR    R4,R4           NO, BLOW UP\n         DR    R8,R4\n         SPACE 2\n*     THE FIRST SECTION OF THIS REPORT IS FROM THE \"IRARMRMR\" MODULE.\n         SPACE 1\n         L     R10,RMCTRCT    POINTER TO THE RCT\n         USING RCT,R10\n*        MVC   DUMPER(RCTLEN),RCT ****** FOR DEBUGGING ONLY ***********\n*        LA    R10,DUMPER         ****** FOR DEBUGGING ONLY ***********\n         CLC   =CL4'RCT',RCTRCT IS THE POINTER CORRECT?\n         BE    *+8             YES, CONTINUE\n         SR    R4,R4           NO, BLOW UP\n         DR    R8,R4\n         MVC   PUTLHDRL,HDRLHDA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLHIA\n         L     R5,RMCTEPBG\n         USING EPAT,R5\n*        MVC   DUMPER(255),EPAT   ****** FOR DEBUGGING ONLY ***********\n*        MVC   DUMPER+255(255),EPAT+255 ***** FOR DEBUGGING ONLY ******\n*        MVC   DUMPER+510(255),EPAT+510 ***** FOR DEBUGGING ONLY ******\n*        MVC   DUMPER+765(255),EPAT+765 ***** FOR DEBUGGING ONLY ******\n         LA    R5,RMEPBRM2\n         DROP  R5\n         MVI   PRTLINE,C' '  HEADING SECTION -- MPL INVOCATION INTERVAL\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1AVG(24),=CL24'MPL ADJUSTMENT'\n         MVC   M2IND,=CL4' SEC'\n         MVC   M2AVG,MASKL6\n         L     R4,36(R5)\n         CVD   R4,AVGVALUE\n         SRP   AVGVALUE,64-3,5\n         ED    M2AVG,AVGVALUE+5\n         MVC   M2HT+2(5),=CL5'EVERY'\n         LA    R1,PRTDTL\n         ST    R1,PUTLRECD\n         SPACE 3\n         BAL   R4,PUTLINE\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLHIA\n         LA    R1,MPLHDR2\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- PAGE FAULT RATE\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1AVG,MASKL6   CURRENT AVERAGE\n         LH    R5,RCVPTR\n         CVD   R5,AVGVALUE\n         ED    M1AVG,AVGVALUE+5\n         MVC   M1HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCPTRTH\n         CVD   R5,HIGTHRES\n         ED    M1HT,HIGTHRES+5\n         MVC   M1LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCPTRTL\n         CVD   R5,LOWTHRES\n         ED    M1LT,LOWTHRES+5\n         MVC   M1VAR,=CL19'PAGE FAULT RATE'\n         BAL   R4,SETINDIC\n         MVC   M1IND,PINDHOLD\n         MVC   M2AVG,MASKL6        PRINT SECTION -- UNREF. INTVL. COUNT\n         LH    R5,RCVUICA     CURRENT AVERAGE\n         CVD   R5,AVGVALUE\n         ED    M2AVG,AVGVALUE+5\n         MVC   M2HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCUICTH\n         CVD   R5,HIGTHRES\n         ED    M2HT,HIGTHRES+5\n         MVC   M2LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCUICTL\n         CVD   R5,LOWTHRES\n         ED    M2LT,LOWTHRES+5\n         MVC   M2VAR,=CL19'UNREF. INTVL. COUNT'\n         BAL   R4,SETINDID\n         MVC   M2IND,PINDHOLD\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- AUXSTM QUEUE LENGTH\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1AVG,MASKL6   CURRENT AVERAGE\n         LH    R5,RCVASMQA\n         CVD   R5,AVGVALUE\n         ED    M1AVG,AVGVALUE+5\n         MVC   M1HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCASMTH\n         CVD   R5,HIGTHRES\n         ED    M1HT,HIGTHRES+5\n         MVC   M1LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCASMTL\n         CVD   R5,LOWTHRES\n         ED    M1LT,LOWTHRES+5\n         MVC   M1VAR,=CL19'AUXSTM QUEUE LENGTH'\n         BAL   R4,SETINDIC\n         MVC   M1IND,PINDHOLD\n*                                  PRINT SECTION -- DPR & (CPU | PD)\n         LH    R5,RCVMSPP     PAGE DELAY\n         CH    R5,RCCMSPTH\n         BNH   *+10\n         MVC   M2AVG,=CL6' &&PD'\n         LH    R5,RCVCPUA     CPU UTILIZATION\n         CH    R5,RCCCPUPH\n         BNH   *+10\n         MVC   M2HT,=CL6' &&CPU'\n         LH    R5,RCVDPR      DEMAND PAGING RATE\n         CH    R5,RCCDPRTH\n         BNH   *+10\n         MVC   M2LT,=CL6'  DPR'\n         CLC   M2LT,=CL6' '     SET INDICATOR?\n         BE    DPRPDEND\n         CLC   M2HT,=CL6' '\n         BNE   DPRPDMVC\n         CLC   M2AVG,=CL6' '\n         BE    DPRPDEND\nDPRPDMVC MVC   M2IND,=C'<***'\nDPRPDEND MVC   M2VAR,=CL19'DPR && (CPU | PD)'\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- DEFERRED I/O UTIL.\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n*        MVC   M1AVG,MASKL6   CURRENT AVERAGE\n*        LH    R5,RCVTOTDF\n*        CVD   R5,AVGVALUE\n*        ED    M1AVG,AVGVALUE+5\n*        MVC   M1HT,MASKL6    HIGH THRESHOLD\n*        LH    R5,RCCTOTUT\n*        CVD   R5,HIGTHRES\n*        ED    M1HT,HIGTHRES+5\n*        ZAP   LOWTHRES,HIGTHRES\n*        MVC   M1VAR,=CL19'DEFERRED I/O UTIL.'\n*        BAL   R4,SETINDIC\n*        MVC   M1IND,PINDHOLD\n         MVC   M2AVG,MASKL6        PRINT SECTION -- DEMAND PAGING RATE\n         LH    R5,RCVDPR      CURRENT AVERAGE\n         CVD   R5,AVGVALUE\n         ED    M2AVG,AVGVALUE+5\n         MVC   M2HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCDPRTH\n         CVD   R5,HIGTHRES\n         ED    M2HT,HIGTHRES+5\n         MVC   M2LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCDPRTL\n         CVD   R5,LOWTHRES\n         ED    M2LT,LOWTHRES+5\n         MVC   M2VAR,=CL19'DEMAND PAGING RATE'\n         BAL   R4,SETINDIC\n         MVC   M2IND,PINDHOLD\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- CPU UTILIZATION\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1AVG,MASKL6   CURRENT AVERAGE\n         LH    R5,RCVCPUA\n         SRA   R5,4 /16\n         CVD   R5,AVGVALUE\n         ED    M1AVG,AVGVALUE+5\n         MVC   M1HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCCPUTH\n         SRA   R5,4 /16\n         CVD   R5,HIGTHRES\n         ED    M1HT,HIGTHRES+5\n         MVC   M1LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCCPUTL\n         SRA   R5,4 /16\n         CVD   R5,LOWTHRES\n         ED    M1LT,LOWTHRES+5\n         MVC   M1VAR,=CL19'CPU UTILIZATION'\n         BAL   R4,SETINDIC\n         MVC   M1IND,PINDHOLD\n         MVC   M2AVG,MASKL6        PRINT SECTION -- CPU & DEMAND PAGING\n         ED    M2AVG,AVGVALUE+5 CURRENT AVERAGE\n         MVC   M2HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCCPUPH\n         SRA   R5,4 /16\n         CVD   R5,HIGTHRES\n         ED    M2HT,HIGTHRES+5\n         MVC   M2LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCCPUPL\n         SRA   R5,4 /16\n         CVD   R5,LOWTHRES\n         ED    M2LT,LOWTHRES+5\n         MVC   M2VAR,=CL19'CPU && DEMAND PAGING'\n         BAL   R4,SETINDIC\n         MVC   M2IND,PINDHOLD\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- PAGE DELAY(MS)\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1AVG,MASKL6   CURRENT AVERAGE\n         LH    R5,RCVMSPP\n         CVD   R5,AVGVALUE\n         ED    M1AVG,AVGVALUE+5\n         MVC   M1HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCPDLTH\n         CVD   R5,HIGTHRES\n         ED    M1HT,HIGTHRES+5\n         MVC   M1LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCPDLTL\n         CVD   R5,LOWTHRES\n         ED    M1LT,LOWTHRES+5\n         MVC   M1VAR,=CL19'PAGE DELAY(MS)'\n         BAL   R4,SETINDIC\n         MVC   M1IND,PINDHOLD\n         MVC   M2AVG,MASKL6        PRINT SECTION -- PG DLAY & DMAND PG\n         ED    M2AVG,AVGVALUE+5 CURRENT AVERAGE\n         MVC   M2HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCMSPTH\n         CVD   R5,HIGTHRES\n         ED    M2HT,HIGTHRES+5\n         MVC   M2LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCMSPTL\n         CVD   R5,LOWTHRES\n         ED    M2LT,LOWTHRES+5\n         MVC   M2VAR,=CL19'PG DLAY && DMAND PG'\n         BAL   R4,SETINDIC\n         MVC   M2IND,PINDHOLD\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- ONLINE STORAGE %\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1AVG,MASKL6   CURRENT AVERAGE\n         LH    R5,RCVFXIOP\n         CVD   R5,AVGVALUE\n         ED    M1AVG,AVGVALUE+5\n         MVC   M1HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCFXTTH\n         CVD   R5,HIGTHRES\n         ED    M1HT,HIGTHRES+5\n         MVC   M1LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCFXTTL\n         CVD   R5,LOWTHRES\n         ED    M1LT,LOWTHRES+5\n         MVC   M1VAR,=CL19'ONLINE STORAGE %'\n         BAL   R4,SETINDIC\n         MVC   M1IND,PINDHOLD\n*                                  PRINT SECTION -- STORAGE BELOW 16M\n         MVC   M2AVG,MASKL6   CURRENT AVERAGE\n         LH    R5,RCVMFXA\n         CVD   R5,AVGVALUE\n         ED    M2AVG,AVGVALUE+5\n         MVC   M2HT,MASKL6    HIGH THRESHOLD\n         LH    R5,RCCFXETH\n         CVD   R5,HIGTHRES\n         ED    M2HT,HIGTHRES+5\n         MVC   M2LT,MASKL6    LOW THRESHOLD\n         LH    R5,RCCFXETL\n         CVD   R5,LOWTHRES\n         ED    M2LT,LOWTHRES+5\n         MVC   M2VAR,=CL19'STORAGE BELOW 16M %'\n         BAL   R4,SETINDIC\n         MVC   M2IND,PINDHOLD\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- CONT. INDX EXCH. TH\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1HT+3(9),=XL9'402020202020212060'\n         LH    R5,RCCDCITL\n         CVD   R5,HIGTHRES\n         ED    M1HT+3(9),HIGTHRES+4\n         MVC   M1VAR,=CL19'CONT. INDX EXCH. TH'\n*                                  PRINT SECTION -- NUMBER OF AVQ LOWS\n         MVC   M2HT+3(9),=XL9'402020202020212060'\n         LH    R5,RCVAVQC\n         CVD   R5,HIGTHRES\n         ED    M2HT+3(9),HIGTHRES+4\n         MVC   M2VAR,=CL19'NUMBER OF AVQ LOWS'\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVI   PRTLINE,C' '        PRINT SECTION -- AVAILABLE FRAME AVG\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         MVC   M1HT+3(9),=XL9'402020202020212060'\n         LH    R5,RCVAFQA\n         CVD   R5,HIGTHRES\n         ED    M1HT+3(9),HIGTHRES+4\n         MVC   M1VAR,=CL19'AVAILABLE FRAME AVG'\n*                                  PRINT SECTION -- TOTAL PAGING RATE\n         MVC   M2HT+3(9),=XL9'402020202020212060'\n         LH    R5,RCVPAGRT\n         CVD   R5,HIGTHRES\n         ED    M2HT+3(9),HIGTHRES+4\n         MVC   M2VAR,=CL19'TOTAL PAGING RATE'\n         LA    R5,PRTDTL\n         ST    R5,PUTLRECD\n         MVC   PUTLHDRL,HDRLDTA\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLHIA\n         LA    R1,HEADER0\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         SPACE 3\n         LA    R1,MPLHDR3\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\n         MVC   PUTLHDRL,HDRLHDA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLLOWA\n         BAL   R4,PUTLINE\n         L     R8,RMCTDMDT    LOAD ADDRESS OF THE FIRST DMDT\n         USING DMDT,R8\n*        MVC   DUMPER(255),DMDT   ****** FOR DEBUGGING ONLY ***********\nDMDTLOOP C     R8,RMCTDMDE    IS THIS THE END OF THE TABLE?\n         BH    DMDTLEND\n         CLC   DMDTHI,=H'1'   *** DROP SPECIAL PURPOSE DOMAINS FROM ***\n         BNE   DMDTLOP1       *** THE DISPLAY (MUCH SHORTER)        ***\n         CLC   DMDTLO,=H'1'\n         BNE   DMDTLOP1\n         CLC   DMDTCMPL,=H'1'\n         BE    DMDTLOP6\nDMDTLOP1 MVI   PRTLINE,C' '        PRINT SECTION -- DEFERED I/O UTIL.\n         MVC   PRTLINE+1(L'PRTLINE-1),PRTLINE\n         TM    DMDTFLGS,DMDTRTO RTO DOMAIN?\n         BNO   DMDTLOP3\n         L     R3,DMDTTRNC    SET UP TRANSACTION COUNT\n         CVD   R3,AVGVALUE\n         MVC   M3TRNC,MASKL4\n         ED    M3TRNC,AVGVALUE+6\n         CP    AVGVALUE,=P'0' PREVENT ZERO DIVIDE\n         BE    DMDTLOP2\n         L     R5,DMDTTRNT    SET UP CURRENT ELAPSED TIME AVERAGE\n         LTR   R5,R5\n         BZ    DMDTLOP2\n         SR    R4,R4\n         D     R4,DMDTTRNC\n         CVD   R5,AVGVALUE\n         SRP   AVGVALUE,64-2,5\n         MVC   M3TRNTC,MASKL5D\n         ED    M3TRNTC,AVGVALUE+6\nDMDTLOP2 L     R3,DMDTTWET    SET UP ELAPSED TIME AVERAGE FOR RTO\n         LTR   R3,R3\n         BZ    DMDTLOP3\n         CVD   R3,AVGVALUE\n         SRP   AVGVALUE,64-2,5\n         MVC   M3TWET,MASKL5D\n         ED    M3TWET,AVGVALUE+6\nDMDTLOP3 L     R3,DMDTTWSR    SET UP WEIGHTED INTERVAL DOMAIN SERVICE\n         CVD   R3,AVGVALUE\n         MVC   M3TWSR,MASKL4\n         ED    M3TWSR,AVGVALUE+6\n         CP    AVGVALUE,=P'1000'\n         BNH   DMDTLOP4\n         SRP   AVGVALUE,64-3,5\n         MP    AVGVALUE,=P'10'\n         MVC   M3TWSR,MASKL4\n         ED    M3TWSR,AVGVALUE+6\n         MVI   M3TWSR+L'M3TWSR-1,C'K'\n         CP    AVGVALUE,=P'10000'\n         BNH   DMDTLOP4\n         SRP   AVGVALUE,64-4,5\n         MP    AVGVALUE,=P'10'\n         MVC   M3TWSR,MASKL4\n         ED    M3TWSR,AVGVALUE+6\n         MVI   M3TWSR+L'M3TWSR-1,C'M'\nDMDTLOP4 L     R3,DMDTWMS     SET UP INTERVAL DOMAIN SERVICE ACCUMUL\n         CVD   R3,AVGVALUE\n         MVC   M3TWMS,MASKL6\n         ED    M3TWMS,AVGVALUE+5\n         CP    AVGVALUE,=P'1000'\n         BNH   DMDTLOP5\n         SRP   AVGVALUE,64-3,5\n         MP    AVGVALUE,=P'10'\n         MVC   M3TWMS,MASKL6\n         ED    M3TWMS,AVGVALUE+5\n         MVI   M3TWMS+L'M3TWMS-1,C'K'\n         CP    AVGVALUE,=P'10000'\n         BNH   DMDTLOP5\n         SRP   AVGVALUE,64-4,5\n         MP    AVGVALUE,=P'10'\n         MVC   M3TWMS,MASKL6\n         ED    M3TWMS,AVGVALUE+5\n         MVI   M3TWMS+L'M3TWMS-1,C'M'\nDMDTLOP5 LH    R3,DMDTRUMX    SET UP MAX # READY USERS IN INTERVAL\n         CVD   R3,AVGVALUE\n         MVC   M3RUMX,MASKL4\n         ED    M3RUMX,AVGVALUE+6\n         LH    R3,DMDTNSW     SET UP CURRENT # NONSWAPPABLE IN USERS\n         CVD   R3,AVGVALUE\n         MVC   M3NSW,MASKL4\n         ED    M3NSW,AVGVALUE+6\n         LH    R3,DMDTOUTU    SET UP CURRENT # USERS ON OUT Q\n         CVD   R3,AVGVALUE\n         MVC   M3OUTU,MASKL4\n         ED    M3OUTU,AVGVALUE+6\n         LH    R3,DMDTGOOU    SET UP CURRENT # USERS GOING OUT\n         CVD   R3,AVGVALUE\n         MVC   M3GOOU,MASKL4\n         ED    M3GOOU,AVGVALUE+6\n         LH    R3,DMDTINCU    SET UP CURRENT # SWAPPABLE INCORE USERS\n         CVD   R3,AVGVALUE\n         MVC   M3INCU,MASKL4\n         ED    M3INCU,AVGVALUE+6\n         LH    R3,DMDTCMPL    SET UP CURRENT MPL\n         CVD   R3,AVGVALUE\n         MVC   M3DMPL,MASKL6\n         ED    M3DMPL,AVGVALUE+5\n         LH    R3,DMDTCIDX    SET UP CONTENTION INDEX\n         CVD   R3,AVGVALUE\n         MVC   M3CIDX,MASKL4\n         ED    M3CIDX,AVGVALUE+6\n         LH    R3,DMDTMPLT    SET UP CURRENT MPL TARGET\n         CVD   R3,AVGVALUE\n         MVC   M3MPLT,MASKL4\n         ED    M3MPLT,AVGVALUE+6\n         LH    R4,DMDTRUA     SET UP AVERAGE NUMBER OF READY USERS\n         SRDA  R4,4           SEPARATE FRACTION\n         SRL   R5,28\n         CVD   R4,AVGVALUE\n         M     R4,=F'100'\n         D     R4,=F'16'\n         CVD   R5,LOWTHRES\n         SRP   LOWTHRES,64-1,5\n         MVC   M3RUA+1(5),MASKL5D\n         ED    M3RUA+1(5),LOWTHRES+6\n         MVC   M3RUA(4),MASKL4\n         ED    M3RUA(4),AVGVALUE+6\n         SR    R3,R3          SET UP WEIGHTING FACTOR\n         IC    R3,DMDTWT\n         MVI   M3RUA,C'W'\n         CVD   R3,AVGVALUE\n         MVC   M3WT,MASKL4\n         ED    M3WT,AVGVALUE+6\n         SR    R3,R3          SET UP MAXIMUM MPL NUMBER\n         LH    R3,DMDTHI\n         CVD   R3,AVGVALUE\n         MVC   M3HI,MASKL4\n         ED    M3HI,AVGVALUE+6\n         SR    R3,R3          SET UP MINIMUM MPL NUMBER\n         LH    R3,DMDTLO\n         MVI   M3HI,C'/'\n         CVD   R3,AVGVALUE\n         MVC   M3LO,MASKL4\n         ED    M3LO,AVGVALUE+6\n         SR    R3,R3          SET UP DOMAIN NUMBER\n         IC    R3,DMDTNO\n         CVD   R3,AVGVALUE\n         UNPK  M3NO,AVGVALUE+6(2)\n         OI    M3NO+2,X'F0'\n         MVC   PUTLHDRL,HDRLDTA MOVE IN ADDRESS OF THE PARAMETERS\n         MVC   PUTLDSPL,DSPLLOWA\n         LA    R1,PRTDTL\n         ST    R1,PUTLRECD\n         BAL   R4,PUTLINE\nDMDTLOP6 LA    R8,DMDTEND\n*        MVC   DUMPER(DMDTLEN),DMDT **** FOR DEBUGGING ONLY ***********\n         B     DMDTLOOP\n         DROP  R8,R10\nDMDTLEND B     EXIT\nMPLHDR2  DC    H'79',CL80'    VARIABLE          LT   HT  AVG           X\n               VARIABLE         LT   HT  AVG     '\nMPLHDR3  DC    H'79',CL80'DMN  CONSTRAINT   RUA TAR  CI  CMPL SIC  GO  X\n               OT  NS MAX  SERV WSR  WET ET/C  C '\n         SPACE 3\nEXIT     SR    R15,R15\nEXITF    L     R13,4(0,R13)\n         L     R14,12(0,R13)\n         LM    R0,R12,20(R13)\n         MVI   12(R13),X'FF'\n         BR    R14\n         SPACE 1\nSETINDIC MVC   PINDHOLD,=CL6' ' SET THE INDICATOR AS APPROPRIATE\n         CP    AVGVALUE,LOWTHRES\n         BLR   R4\n         MVC   PINDHOLD,=CL4'  -'\n         CP    AVGVALUE,HIGTHRES\n         BNHR  R4\n         MVC   PINDHOLD,=CL4'<---'\n         BR    R4\n         SPACE 1\nSETINDID MVC   PINDHOLD,=CL6' ' SET THE INDICATOR AS APPROPRIATE\n         CP    AVGVALUE,HIGTHRES\n         BHR   R4\n         MVC   PINDHOLD,=CL4'  -'\n         CP    AVGVALUE,LOWTHRES\n         BNLR  R4\n         MVC   PINDHOLD,=CL4'<---'\n         BR    R4\n         SPACE 1\nPUTLINE  LA    R1,PUTLRECD    LOAD ADDRESS OF PARAMETERS\n         L     R15,PUTLINEA   ADDRESS OF PUTLINE ROUTINE\n         BALR  R14,R15        GO DISPLAY THE REQUEST\n         LTR   R15,R15        WAS THE PUTLINE SUCCESSFUL?\n         BZR   R4              YES, CONTINUE THE PROCESSING\n         LA    R15,12          NO, RETURN TO RMF CONTROL\n         B     EXITF\n         SPACE 3\nHEADER0  DC    H'2',CL2' '\nMASKL6   DC    XL6'402020202120'\nMASKL4   DC    XL4'40202120'\nMASKL5D  DC    XL5'4021204B20'\n         SPACE 1\n         LTORG\n         EJECT\n         PRINT GEN\n         IRARMCT\n         EJECT\n         IRARCT\n         SPACE 3\n         IRADMDT\n         SPACE 3\n         PRINT NOGEN\n* IGNORE ANY ASSEMBLY ERRORS IN THE FOLLOWING MACRO\n         IRAEPAT\n         SPACE 3\n         PRINT GEN\n         ERBUSDTA\n         ORG   PRTLINE    DISPLAY AREA\nM1VAR    DS    CL19           DESCRIPTION 1\n         ORG   *-1\nM1LT     DS    CL6            LOW THRESHOLD VALUE\n         ORG   *-1\nM1HT     DS    CL6            HIGH THRESHOLD VALUE\n         ORG   *-1\nM1AVG    DS    CL6            CURRENT AVERAGE VALUE\nM1IND    DS    CL4            INDICATOR FOR OVER/UNDER\n         DS    CL2\nM2VAR    DS    CL19           DESCRIPTION 2\n         ORG   *-1\nM2LT     DS    CL6            LOW THRESHOLD VALUE\n         ORG   *-1\nM2HT     DS    CL6            HIGH THRESHOLD VALUE\n         ORG   *-1\nM2AVG    DS    CL6            CURRENT AVERAGE VALUE\nM2IND    DS    CL4            INDICATOR FOR OVER/UNDER\n         ORG   PRTLINE\nM3NO     DS    CL3            DOMAIN NUMBER\nM3LO     DS    CL4            MINIMUM MPL NUMBER\nM3HI     DS    CL4            MAXIMUM MPL NUMBER\nM3WT     DS    CL4            WEIGHTING FACTOR\nM3RUA    DS    CL6            AVERAGE NUMBER OF READY USERS\nM3MPLT   DS    CL4            CURRENT MPL TARGET\nM3CIDX   DS    CL4            CONTENTION INDEX\nM3DMPL   DS    CL6            CURRENT MPL\nM3INCU   DS    CL4            CURRENT # SWAPPABLE INCORE USERS\nM3GOOU   DS    CL4            CURRENT # OF USERS GOING OUT\nM3OUTU   DS    CL4            CURRENT # USERS ON OUT Q\nM3NSW    DS    CL4            CURRENT # NONSWAPPABLE IN USERS\nM3RUMX   DS    CL4            MAX # READY USERS IN INTERVAL\nM3TWMS   DS    CL6            INTVL DMN SVCE ACCUM\nM3TWSR   DS    CL4            WEIGHTED INTVL DMN SVCE\nM3TWET   DS    CL5            ELAPSED TIME AVG FOR RTO\nM3TRNTC  DS    CL5            CURRENT ELAPSED TIME AVG FOR RTO\nM3TRNC   DS    CL4            XACTION COUNT FOR RTO\n         SPACE 3\n         PRINT NOGEN\n         REGS\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SP213OBJ": {"ttr": 2312, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "VSAMMAPC": {"ttr": 2315, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//VSAMMAP  PROC SYSOUT='*',LIST='*'\n//*\n//*        VSAMMAP REQUIRES THAT YOU SUPPLY A STEPCAT AND A\n//*        REPRO CONTROL CARD FOR THE FIRST STEP. FOR EXAMPLE:\n//*\n//*    //         EXEC VSAMMAP\n//*     REPRO INDATASET ( MASTRCAT / MSTRPSWD ) OUTFILE ( VSAMCAT )\n//*    //STEPCAT  DD  DSN=MASTRCAT,DISP=SHR\n//*\n//*        THE ONLY VARIABLES ARE \"MASTRCAT\" AND \"MSTRPSWD\".\n//*\n//REPROFLE EXEC PGM=IDCAMS,REGION=1024K\n//SYSPRINT DD  SYSOUT=&SYSOUT.\n//VSAMCAT  DD  DSN=&&VSAMCAT,DISP=(,PASS),UNIT=SYSDA,\n//             SPACE=(CYL,(30,10)),DCB=(BLKSIZE=19060,RECFM=VB)\n//*\n//ALLOCFLE EXEC PGM=IDCAMS,REGION=512K,COND=(0,LT)\n//SYSIN    DD  *\n DEFINE CLUSTER ( NAME ( BILLKEY ) VOLUME( COKET2 ) REUSE -\n   INDEXED KEYS(3 1) RECORDSIZE(505 505) REPLICATE IMBED ERASE ) -\n  DATA ( CYLINDERS ( 30 10 ) ) -\n  INDEX ( TRACKS ( 3 1 ) )\n REPRO INFILE ( VSAMCAT ) OUTDATASET ( BILLKEY ) REUSE\n LISTCAT ENTRIES ( BILLKEY ) ALL\n//SYSPRINT DD  SYSOUT=&SYSOUT.\n//VSAMCAT  DD  DSN=&&VSAMCAT,DISP=(OLD,PASS)\n//*\n//O9291B15 EXEC PGM=O9291B15,REGION=1024K,\n//             COND=((0,LT,REPROFLE),(12,LT,ALLOCFLE))\n//VSAMCAT  DD  DSN=&&VSAMCAT,DISP=(OLD,DELETE)\n//VSAMKEY  DD  DSN=BILLKEY,DISP=OLD\n//VOLMIN   DD  UNIT=SYSDA,SPACE=(TRK,(15,5)),\n//             DCB=(LRECL=75,BLKSIZE=19050,RECFM=FB)\n//VOLMOUT  DD  UNIT=SYSDA,SPACE=(TRK,(15,5)),\n//             DCB=(LRECL=75,BLKSIZE=19050,RECFM=FB)\n//VOLMWK01 DD  UNIT=SYSDA,SPACE=(TRK,15)\n//VOLMWK02 DD  UNIT=SYSDA,SPACE=(TRK,15)\n//VOLMWK03 DD  UNIT=SYSDA,SPACE=(TRK,15)\n//DETLIN   DD  UNIT=SYSDA,SPACE=(TRK,(30,15)),\n//             DCB=(LRECL=109,BLKSIZE=18966,RECFM=FB)\n//DETLOUT  DD  UNIT=SYSDA,SPACE=(TRK,(30,15)),\n//             DCB=(LRECL=109,BLKSIZE=18966,RECFM=FB)\n//DETLWK01 DD  UNIT=SYSDA,SPACE=(TRK,30)\n//DETLWK02 DD  UNIT=SYSDA,SPACE=(TRK,30)\n//DETLWK03 DD  UNIT=SYSDA,SPACE=(TRK,30)\n//SYSPRINT DD  SYSOUT=&SYSOUT.\n//SYSOUT   DD  SYSOUT=&SYSOUT.\n//PRTFILE  DD  SYSOUT=&LIST.,\n//             DCB=(LRECL=133,BLKSIZE=133,RECFM=FBA)\n//DISKTBL  DD  *\n*DEVIC UNITTYPE TRK/CYL CYL/DEV BYTES/TRACK\n2305-1 00000110    8       48     14576\n2305-2 00000111    8       96     14660\n2314   00001000   20      200      7294\n3330   00001001   19      404     13030\n3340   00001010   12      698      8368\n3350   00001011   30      560     19069\n3330-1 00001101   19      815     13030\n//*\n//DELETEFL EXEC PGM=IDCAMS,REGION=512K,COND=EVEN\n//SYSIN    DD  *\n DELETE ( BILLKEY ) FORCE\n DELETE ( BILLKEY )\n//SYSPRINT DD  SYSOUT=R\n// PEND\n//*\n//*\n// EXEC VSAMMAP\n REPRO INDATASET ( MASTCAT / MSTRPSWD ) -\n   OUTFILE ( VSAMCAT )\n//STEPCAT  DD  DSN=MASTCAT,DISP=OLD\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "VSAMMAPP": {"ttr": 2561, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "        /* DATA SET O9291B15   AT LEVEL 003 AS OF 12/24/80    */\n        /* DATA SET O9291B15   AT LEVEL 002 AS OF 05/12/80    */\n O9291B15: PROCEDURE OPTIONS ( MAIN ) REORDER;\n0  DEFAULT RANGE ( I:N )    VALUE ( FIXED BINARY (31) );\n   DEFAULT RANGE(*)         STATIC;\n-  DECLARE\n      DETLIN            FILE SEQUENTIAL RECORD OUTPUT,\n      DETLOUT           FILE SEQUENTIAL RECORD INPUT,\n      VOLMIN            FILE SEQUENTIAL RECORD OUTPUT,\n      VOLMOUT           FILE SEQUENTIAL RECORD INPUT,\n      VSAMCAT           FILE SEQUENTIAL RECORD INPUT,\n      DISKTBL           FILE SEQUENTIAL RECORD INPUT,\n      VSAMKEY           FILE DIRECT INPUT ENVIRONMENT( VSAM )\n                        RECORD KEYED,\n   /* DEBUGPT           FILE STREAM OUTPUT PRINT, */\n      PRTFILE           FILE SEQUENTIAL RECORD OUTPUT;\n0  DECLARE 1 DETAIL_CLUSTER,\n      2  DC_VOLSER      CHAR (6) INIT (' '),\n      2  DC_CCHHCCHH    BIT (64) INIT ('0'B),\n      2  DC_CLUSTER     CHAR (44) INIT (' '),\n      2  DC_DATASET     CHAR (44) INIT (' '),\n      2  DC_NTRACKS     FIXED BINARY (31) INIT (0),\n      2  DC_ANCHOR_RBA  BIT (24) INIT ('0'B);\n0  DECLARE 1 DETAIL_VOLUME,\n      2  DV_ENTNAME          CHAR (44),  /* VOLUME SERIAL NUMBER */\n      2  DV_VOLSTMP          BIT (64),   /* VOLUME TIME STAMP */\n      2  DV_VOLDVCHR,                    /* DEVICE CHARACTERISTICS */\n          3  VDEVT           BIT (32),   /* DEVICE TYPE */\n          3  VMAX_BLOCK      BIT (32),   /* MAXIMUM BLOCK SIZE */\n          3  VCYL_VOL        BIT (16),   /* CYLINDERS/VOLUME */\n          3  VTRK_CYL        BIT (16),   /* TRACKS/CYLINDER */\n          3  VBYTES_TRK      BIT (16),   /* BYTES/TRACK */\n          3  VGAP_BYTES      BIT (8),    /* BYTES REQUIRED FOR GAPS */\n          3  VGAPL_BYTES     BIT (8),    /* BYTES FOR GAPS FOR LAST */\n          3  VNKEY_BYTES     BIT (8),    /* BYTES SUB FOR NOT KEYED */\n          3  VOLDFLAGS       BIT (8),    /* FLAGS */\n          3  VTOLERANCE      BIT (16),   /* TOLERANCE FACTOR */\n      2  DV_ANCHOR_RBA       BIT (24);   /* RBA FOR CLUSTER BASE */\n0  DECLARE 1 CAT_GENERAL BASED ( VSAMPTR ),\n      2  ZZA                 BIT (8),\n      2  CURRBA              BIT (24),\n      2  ZZB                 BIT (320),\n      2  ENTYPE              CHAR (1);   /* RECORD TYPE */\n0  DECLARE 1 CAT_TYPE_C BASED ( VSAMPTR ),\n      2  ZZA                 BIT (392),\n      2  CENTNAME            CHAR (44);  /* CLUSTER NAME */\n0  DECLARE 1 CAT_TYPE_V BASED ( VSAMPTR ),\n      2  ZZA                 BIT (392),\n      2  VENTNAME            CHAR (8);   /* VOLUME SERIAL NUMBER */\n0  DECLARE\n      ( ADDR, BIT, DATE, HIGH, ONCHAR, PLIRETC, SUBSTR, TIME, UNSPEC )\n                        BUILTIN,\n      ( I, J )          FIXED BINARY (31) INIT (0),\n      VSAMPTR           POINTER,\n      NEW_RECORD        CHAR (505) INIT (' '),\n      TRK_CYL           FIXED BINARY (31) INIT (0),\n      DATA_EXTENTS(DATA_EXTENTS_SIZE) BIT (64) INIT ('0'B) CONTROLLED,\n      DATA_EXTENTS_SIZE FIXED BINARY (31) INIT (124),\n      OLD_KEYS(OLD_KEYS_SIZE) CHAR (3) INIT (' ') CONTROLLED,\n      OLD_KEYS_SIZE     FIXED BINARY (31) INIT (60),\n      RETURN_CODE       FIXED BINARY (31) INIT (0);\n-         ON ERROR BEGIN;\n              ON ERROR SYSTEM;\n              PUT DATA;\n              GO TO END_VSAM3;\n              END;\n          SUBSTR( VH1_DATE, 1, 2 ) = SUBSTR( DATE(), 3, 2 );\n          SUBSTR( VH1_DATE, 4, 2 ) = SUBSTR( DATE(), 5, 2 );\n          SUBSTR( VH1_DATE, 7, 2 ) = SUBSTR( DATE(), 1, 2 );\n          SUBSTR( VH1_TIME, 1, 2 ) = SUBSTR( TIME(), 1, 2 );\n          SUBSTR( VH1_TIME, 4, 2 ) = SUBSTR( TIME(), 3, 2 );\n          ALLOCATE DATA_EXTENTS, OLD_KEYS;\n          OPEN FILE ( VSAMCAT ), FILE ( VSAMKEY ),\n              FILE ( DETLIN ), FILE ( VOLMIN );\n          ON ENDFILE ( VSAMCAT ) GO TO END_VSAM;\n READ_VSAM: READ FILE ( VSAMCAT ) INTO ( NEW_RECORD );\n          VSAMPTR = ADDR( NEW_RECORD );\n          DC_DATASET = ' ';\n          OLD_KEYS = HIGH(3);\n0         IF ENTYPE = 'V' THEN V0: DO;\n              DC_CLUSTER = '              DATA SPACE  RBA=';\n              DC_ANCHOR_RBA = CURRBA;\n              DV_ANCHOR_RBA = CURRBA;\n              CALL PROCESS_VSAM_VOLUME( NEW_RECORD, ENTYPE );\n              END V0;\n0         IF ENTYPE = 'C' THEN DO;\n              DC_CLUSTER = CENTNAME;\n              DC_ANCHOR_RBA = CURRBA;\n           /* PUT FILE ( DEBUGPT ) DATA ( DETAIL_CLUSTER ) SKIP(3); */\n              CALL PROCESS_VSAM_CLUSTER( NEW_RECORD, ENTYPE );\n              END;\n0         GO TO READ_VSAM;\n1PROCESS_VSAM_CLUSTER: PROCEDURE ( CURRENT_RECORD, CURRENT_TYPE )\n           OPTIONS( REENTRANT ) RECURSIVE REORDER;\n-  DEFAULT RANGE(*)         AUTOMATIC;\n   DECLARE\n     ( VSAMPTR, VSAMPTR1, VSAMPTR3, VSAMPTR4 )\n                        POINTER,\n     VSAMPTR1A          DEFINED ( VSAMPTR1 ) FIXED BINARY (31)\n                        UNALIGNED POSITION (1),\n     VSAMPTR3A          DEFINED ( VSAMPTR3 ) FIXED BINARY (31)\n                        UNALIGNED POSITION (1),\n     VSAMPTR4A          DEFINED ( VSAMPTR4 ) FIXED BINARY (31)\n                        UNALIGNED POSITION (1),\n     ( I, J, K )        FIXED BINARY (31) INIT (0),\n     CURRENT_RECORD     CHAR (505),\n     NEW_RECORD         CHAR (505) INIT (' '),\n     CHAR3              CHAR (3) INIT (' '),\n     CURRENT_TYPE       CHAR (1);\n DECLARE BIT24 BIT (24) INIT ('0'B);\n0         VSAMPTR = ADDR( CURRENT_RECORD );\n       /* PUT FILE ( DEBUGPT ) EDIT ( 'PROCESS_VSAM_CLUSTER--', ENTYPE,\n              '  CURRENT_TYPE--',CURRENT_TYPE)(SKIP(3),A,A,A,A);\n          PUT FILE ( DEBUGPT ) DATA ( CAT_TYPE_C ) SKIP;\n          PUT FILE ( DEBUGPT ) DATA ( DC_ANCHOR_RBA ) SKIP; */\n-         IF ENTYPE = 'C' | ENTYPE = 'G' THEN C_G: DO;\n              VSAMPTR1 = VSAMPTR;\n              VSAMPTR1A = VSAMPTR1A + CLEN_FIX_FLDS;\n           /* IF ENTYPE = 'C' THEN DO;\n                  PUT FILE ( DEBUGPT ) DATA ( CENTNAME );\n                  PUT FILE ( DEBUGPT ) DATA ( CAT_TYPE_C.ZZA ) SKIP;\n                  END; */\n              DATA_EXTENTS = '0'B;\n              J = SNO_SOF;\n              IF J > SREC_SUBSCRIPT THEN DO;\n                  PUT EDIT ( 'PROCESS_VSAM_CLUSTER--C' ) ( SKIP(5), A );\n                  PUT EDIT ( 'NUMBER OF FIELDS IN THE SET OF FIELDS ',\n                      'IS GREATER THAN THE DEFAULT MAXIMUM.' )\n                     ( SKIP, A, A );\n                  PUT DATA ( SET_OF_FIELDS ) SKIP;\n                  RETURN_CODE = 88;\n                  GO TO END_VSAM2;\n                  END;\n              IF OLD_KEYS( OLD_KEYS_SIZE ) \u00ac= HIGH(3) THEN\n                  CALL OLD_KEYS_SMALL;\n              DO I = 1 TO J;\n                  IF SREC_GROUP_CD( I ) = 2 THEN DO;\n                      VSAMPTR3 = VSAMPTR1;\n                      VSAMPTR3A = VSAMPTR3A + 6 + 5 * J\n                          + SUBSTR( SREC_CINUM( I ), 9, 16 );\n                      IF ASSOC_TYPE = 'D' THEN D4: DO;\n                      D5: DO K = 1 TO OLD_KEYS_SIZE;\n                              IF OLD_KEYS( K ) = ASSOC_NAME THEN\n                                  LEAVE D4;\n                              IF OLD_KEYS( K ) = HIGH(3) THEN DO;\n                                  OLD_KEYS( K ) = ASSOC_NAME;\n                                  LEAVE D5;\n                                  END;\n                              END D5;\n                          READ FILE ( VSAMKEY ) INTO ( NEW_RECORD )\n                              KEY ( ASSOC_NAME );\n                          CALL PROCESS_VSAM_CLUSTER( NEW_RECORD,\n                              ENTYPE );\n                          END D4;\n                      END;\n                  END;\n              IF OLD_KEYS( OLD_KEYS_SIZE ) \u00ac= HIGH(3) THEN\n                  CALL OLD_KEYS_SMALL;\n              DO I = 1 TO J;\n                  IF SREC_GROUP_CD( I ) = 2 THEN DO;\n                      VSAMPTR3 = VSAMPTR1;\n                      VSAMPTR3A = VSAMPTR3A + 6 + 5 * J\n                          + SUBSTR( SREC_CINUM( I ), 9, 16 );\n                      IF ASSOC_TYPE = 'I' THEN D6: DO;\n                      D7: DO K = 1 TO OLD_KEYS_SIZE;\n                              IF OLD_KEYS( K ) = ASSOC_NAME THEN\n                                  LEAVE D6;\n                              IF OLD_KEYS( K ) = HIGH(3) THEN DO;\n                                  OLD_KEYS( K ) = ASSOC_NAME;\n                                  LEAVE D7;\n                                  END;\n                              END D7;\n                          READ FILE ( VSAMKEY ) INTO ( NEW_RECORD )\n                              KEY ( ASSOC_NAME );\n                          CALL PROCESS_VSAM_CLUSTER( NEW_RECORD,\n                              ENTYPE );\n                          END D6;\n                      END;\n                  END;\n              IF OLD_KEYS( OLD_KEYS_SIZE ) \u00ac= HIGH(3) THEN\n                  CALL OLD_KEYS_SMALL;\n              DO I = 1 TO J;\n                  IF SREC_GROUP_CD( I ) = 2 THEN DO;\n                      VSAMPTR3 = VSAMPTR1;\n                      VSAMPTR3A = VSAMPTR3A + 6 + 5 * J\n                          + SUBSTR( SREC_CINUM( I ), 9, 16 );\n                      IF ASSOC_TYPE = 'G' THEN D8: DO;\n                      D9: DO K = 1 TO OLD_KEYS_SIZE;\n                              IF OLD_KEYS( K ) = ASSOC_NAME THEN\n                                  LEAVE D8;\n                              IF OLD_KEYS( K ) = HIGH(3) THEN DO;\n                                  OLD_KEYS( K ) = ASSOC_NAME;\n                                  LEAVE D9;\n                                  END;\n                              END D9;\n                          READ FILE ( VSAMKEY ) INTO ( NEW_RECORD )\n                              KEY ( ASSOC_NAME );\n                          CALL PROCESS_VSAM_CLUSTER( NEW_RECORD,\n                              ENTYPE );\n                          END D8;\n                      END;\n                  END;\n              IF OLD_KEYS( OLD_KEYS_SIZE ) \u00ac= HIGH(3) THEN\n                  CALL OLD_KEYS_SMALL;\n              IF SHO_GROUP_CD \u00ac= '0'B | SHO_SEQ_NO \u00ac= '0'B |\n                  UNSPEC( SHO_CINUM ) \u00ac= '0'B THEN D12: DO;\n                 D13: DO K = 1 TO OLD_KEYS_SIZE;\n                          IF OLD_KEYS( K ) = SHO_CINUM THEN LEAVE D12;\n                          IF OLD_KEYS( K ) = HIGH(3) THEN DO;\n                              OLD_KEYS( K ) = SHO_CINUM;\n                              LEAVE D13;\n                              END;\n                          END D13;\n                      READ FILE ( VSAMKEY ) INTO ( NEW_RECORD )\n                          KEY ( SHO_CINUM );\n                      CALL PROCESS_VSAM_CLUSTER( NEW_RECORD,\n                         ENTYPE );\n                  END D12;\n              END C_G;\n-         IF ENTYPE = 'E' THEN E: DO;\n              VSAMPTR1 = VSAMPTR;\n              VSAMPTR1A = VSAMPTR1A + ELEN_FIX_FLDS;\n              J = SNO_SOF;\n              IF J > SREC_SUBSCRIPT THEN DO;\n                  PUT EDIT ( 'PROCESS_VSAM_CLUSTER--E' ) ( SKIP(5), A );\n                  PUT EDIT ( 'NUMBER OF FIELDS IN THE SET OF FIELDS ',\n                      'IS GREATER THAN THE DEFAULT MAXIMUM.' )\n                     ( SKIP, A, A );\n                  PUT DATA ( SET_OF_FIELDS ) SKIP;\n                  RETURN_CODE = 88;\n                  GO TO END_VSAM2;\n                  END;\n              IF OLD_KEYS( OLD_KEYS_SIZE ) \u00ac= HIGH(3) THEN\n                  CALL OLD_KEYS_SMALL;\n              DO I = 1 TO J;\n                  IF SREC_GROUP_CD( I ) = '00000010'B THEN DO;\n                      VSAMPTR3 = VSAMPTR1;\n                      VSAMPTR3A = VSAMPTR3A + 6 + 5 * J\n                          + SUBSTR( SREC_CINUM( I ), 9, 16 );\n                      IF ASSOC_TYPE = 'D' | ASSOC_TYPE = 'I'\n                          | ( ASSOC_TYPE = 'G' & CURRENT_TYPE = 'C' )\n                          THEN D10: DO;\n /* THIS SECTION NOT DEBUGGED YET BECAUSE CONDITIONS WERE NOT MET */\n RETURN_CODE = 88; PUT EDIT ( 'ENTYPE E1' ) ( SKIP(2), A );\n PUT DATA ( CAT_TYPE_E, SET_OF_FIELDS ) SKIP;\n                          BIT24 = UNSPEC( ASSOC_NAME );\n                          PUT DATA ( ASSOC_TYPE, BIT24 ) SKIP(2);\n                     D11: DO K = 1 TO OLD_KEYS_SIZE;\n                              IF OLD_KEYS( K ) = ASSOC_NAME THEN\n                                  LEAVE D10;\n                              IF OLD_KEYS( K ) = HIGH(3) THEN DO;\n                                  OLD_KEYS( K ) = ASSOC_NAME;\n                                  LEAVE D11;\n                                  END;\n                              END D11;\n                          READ FILE ( VSAMKEY ) INTO ( NEW_RECORD )\n                              KEY ( ASSOC_NAME );\n                          CALL PROCESS_VSAM_CLUSTER( NEW_RECORD,\n                              CURRENT_TYPE );\n                          END D10;\n                      END;\n                  IF SREC_GROUP_CD( I ) = '10000010'B THEN D18: DO;\n /* THIS SECTION NOT DEBUGGED YET BECAUSE CONDITIONS WERE NOT MET */\n RETURN_CODE = 88; PUT EDIT ( 'ENTYPE E2' ) ( SKIP(2), A );\n PUT DATA ( CAT_TYPE_E, SET_OF_FIELDS ) SKIP;\n                      UNSPEC( CHAR3 ) = SREC_CINUM( I );\n                 D19: DO K = 1 TO OLD_KEYS_SIZE;\n                          IF OLD_KEYS( K ) = CHAR3 THEN LEAVE D18;\n                          IF OLD_KEYS( K ) = HIGH(3) THEN DO;\n                              OLD_KEYS( K ) = CHAR3;\n                              LEAVE D19;\n                              END;\n                          END D19;\n                      READ FILE ( VSAMKEY ) INTO ( NEW_RECORD )\n                          KEY ( CHAR3 );\n                      CALL PROCESS_VSAM_CLUSTER( NEW_RECORD,\n                          CURRENT_TYPE );\n                      END D18;\n                  IF SREC_GROUP_CD( I ) = '00000011'B & ( CURRENT_TYPE\n                      = 'D' | CURRENT_TYPE = 'I' ) THEN DO;\n                      VSAMPTR4 = VSAMPTR1;\n                      VSAMPTR4A = VSAMPTR4A + 6 + 5 * J\n                          + SUBSTR( SREC_CINUM( I ), 9, 16 );\n                      CALL PULL_VOLUME( VSAMPTR4, CURRENT_TYPE );\n                      END;\n                  IF SREC_GROUP_CD( I ) = '10000011'B THEN D14: DO;\n /* THIS SECTION NOT DEBUGGED YET BECAUSE CONDITIONS WERE NOT MET */\n RETURN_CODE = 88; PUT EDIT ( 'ENTYPE E4' ) ( SKIP(2), A );\n PUT DATA ( CAT_TYPE_E, SET_OF_FIELDS ) SKIP;\n                      UNSPEC( CHAR3 ) = SREC_CINUM( I );\n                 D15: DO K = 1 TO OLD_KEYS_SIZE;\n                          IF OLD_KEYS( K ) = CHAR3 THEN LEAVE D14;\n                          IF OLD_KEYS( K ) = HIGH(3) THEN DO;\n                              OLD_KEYS( K ) = CHAR3;\n                              LEAVE D15;\n                              END;\n                          END D15;\n                      READ FILE ( VSAMKEY ) INTO ( NEW_RECORD )\n                          KEY ( CHAR3 );\n                      CALL PROCESS_VSAM_CLUSTER( NEW_RECORD,\n                          CURRENT_TYPE );\n                      END D14;\n                  END;\n              IF OLD_KEYS( OLD_KEYS_SIZE ) \u00ac= HIGH(3) THEN\n                  CALL OLD_KEYS_SMALL;\n              IF SHO_GROUP_CD \u00ac= '0'B | SHO_SEQ_NO \u00ac= '0'B |\n                  UNSPEC( SHO_CINUM ) \u00ac= '0'B THEN D20: DO;\n                 D21: DO K = 1 TO OLD_KEYS_SIZE;\n                          IF OLD_KEYS( K ) = SHO_CINUM THEN LEAVE D20;\n                          IF OLD_KEYS( K ) = HIGH(3) THEN DO;\n                              OLD_KEYS( K ) = SHO_CINUM;\n                              LEAVE D21;\n                              END;\n                          END D21;\n                      READ FILE ( VSAMKEY ) INTO ( NEW_RECORD )\n                          KEY ( SHO_CINUM );\n                      CALL PROCESS_VSAM_CLUSTER( NEW_RECORD,\n                          CURRENT_TYPE );\n                  END D20;\n              END E;\n-         IF ENTYPE = 'D' | ENTYPE = 'I' THEN D_I: DO;\n              DC_DATASET = DENTNAME;\n              VSAMPTR1 = VSAMPTR;\n              VSAMPTR1A = VSAMPTR1A + DLEN_FIX_FLDS;\n           /* PUT FILE ( DEBUGPT )\n                  DATA ( CAT_TYPE_D_I, SET_OF_FIELDS ) SKIP; */\n              J = SNO_SOF;\n              IF J > SREC_SUBSCRIPT THEN DO;\n                  PUT EDIT ( 'PROCESS_VSAM_CLUSTER--D' ) ( SKIP(5), A );\n                  PUT EDIT ( 'NUMBER OF FIELDS IN THE SET OF FIELDS ',\n                      'IS GREATER THAN THE DEFAULT MAXIMUM.' )\n                     ( SKIP, A, A );\n                  PUT DATA ( SET_OF_FIELDS ) SKIP;\n                  RETURN_CODE = 88;\n                  GO TO END_VSAM2;\n                  END;\n              IF OLD_KEYS( OLD_KEYS_SIZE ) \u00ac= HIGH(3) THEN\n                  CALL OLD_KEYS_SMALL;\n              DO I = 1 TO J;\n                  IF SREC_GROUP_CD( I ) = '00000011'B THEN DO;\n                      VSAMPTR4 = VSAMPTR1;\n                      VSAMPTR4A = VSAMPTR4A + 6 + 5 * J\n                          + SUBSTR( SREC_CINUM( I ), 9, 16 );\n                      CALL PULL_VOLUME( VSAMPTR4, ENTYPE );\n                      END;\n                  IF SREC_GROUP_CD( I ) = '10000011'B THEN D16: DO;\n                      UNSPEC( CHAR3 ) = SREC_CINUM( I );\n                 D17: DO K = 1 TO OLD_KEYS_SIZE;\n                          IF OLD_KEYS( K ) = CHAR3 THEN LEAVE D16;\n                          IF OLD_KEYS( K ) = HIGH(3) THEN DO;\n                              OLD_KEYS( K ) = CHAR3;\n                              LEAVE D17;\n                              END;\n                          END D17;\n                      READ FILE ( VSAMKEY ) INTO ( NEW_RECORD )\n                          KEY ( CHAR3 );\n                      CALL PROCESS_VSAM_CLUSTER( NEW_RECORD,\n                          ENTYPE );\n                      END D16;\n                  END;\n              IF SHO_GROUP_CD \u00ac= '0'B | SHO_SEQ_NO \u00ac= '0'B |\n                  UNSPEC( SHO_CINUM ) \u00ac= '0'B THEN D22: DO;\n                 D23: DO K = 1 TO OLD_KEYS_SIZE;\n                          IF OLD_KEYS( K ) = SHO_CINUM THEN LEAVE D22;\n                          IF OLD_KEYS( K ) = HIGH(3) THEN DO;\n                              OLD_KEYS( K ) = SHO_CINUM;\n                              LEAVE D23;\n                              END;\n                          END D23;\n                      READ FILE ( VSAMKEY ) INTO ( NEW_RECORD )\n                          KEY ( SHO_CINUM );\n                      CALL PROCESS_VSAM_CLUSTER( NEW_RECORD,\n                         ENTYPE );\n                  END D22;\n              END D_I;\n       /* PUT FILE ( DEBUGPT )\n              EDIT ( 'LEAVE PROCESS_VSAM_CLUSTER--', ENTYPE,\n              '  CURRENT_TYPE--',CURRENT_TYPE)(SKIP(2),A,A,A,A); */\n-PULL_VOLUME: PROCEDURE ( C_VOLUME, CURRENT_TYPE )\n          REORDER OPTIONS ( REENTRANT ) RECURSIVE;\n   DECLARE\n     ( C_VOLUME, VSAMPTR4, VSAMPTR5 )\n                        POINTER,\n     CURRENT_TYPE       CHAR (1),\n     WORK_SPACE         FIXED BINARY (31) INIT (0),\n     VSAMPTR5A          DEFINED ( VSAMPTR5 ) FIXED BINARY (31)\n                        UNALIGNED POSITION (1),\n     ( I, J, K )        FIXED BINARY (31) INIT (0);\n0         VSAMPTR4 = C_VOLUME;\n       /* PUT FILE ( DEBUGPT )\n              EDIT ( 'PULL_VOLUME--', CURRENT_TYPE )(SKIP(2),A,A); */\n          IF VOL_OFFSET > 2 THEN DC_VOLSER = VOL_VOLSER;\n          VSAMPTR5 = VSAMPTR4;\n          VSAMPTR5A = VSAMPTR5A + VOL_OFFSET;\n          VSAMPTR5A = VSAMPTR5A + VOL_VFLDLEN + 2;\n          VSAMPTR5A = VSAMPTR5A + VOL_VFLDLEN + 2;\n  /****** IF J \u00ac= VOL_VFLDLEN / 20 THEN DO;\n              PUT EDIT ( 'NUMBER OF FIELDS IN THE NUMBER OF EXTENTS ',\n                  'FOR A VOLUME DOES NOT MATCH THE LENGTH OF THE FIELD')\n                  ( SKIP(5), A, A );\n              PUT DATA ( VOLUME_GC3, VOL_VFLDLEN ) SKIP;\n              RETURN_CODE = 88;\n              GO TO END_VSAM2;\n              END; ***************** REMOVED BECAUSE AN ERROR BUT\n  NOT REMOVED FROM VERSION SENT TO SHARE MVS MODS TAPE ****************/\n          J = VOL_VFLDLEN / 20;\n      D0: DO I = 1 TO J;\n              DC_CCHHCCHH = VOL_CCHHCCHH( I );\n              DC_NTRACKS = VOL_TRKS( I );\n              IF CURRENT_TYPE = 'D' THEN\n              D1: DO K = 1 TO DATA_EXTENTS_SIZE;\n                  IF DATA_EXTENTS( K ) = '0'B THEN DO;\n                      DATA_EXTENTS( K ) = DC_CCHHCCHH;\n                      WRITE FILE ( DETLIN ) FROM ( DETAIL_CLUSTER );\n                      LEAVE D1;\n                      END;\n                  END D1;\n                 ELSE IF CURRENT_TYPE = 'I' THEN DO;\n                      DO K = 1 TO DATA_EXTENTS_SIZE;\n                      IF DATA_EXTENTS( K ) = DC_CCHHCCHH THEN LEAVE D0;\n                      IF DATA_EXTENTS( K ) = '0'B THEN LEAVE;\n                      END;\n                  WRITE FILE ( DETLIN ) FROM ( DETAIL_CLUSTER );\n                  END;\n              END D0;\n-  DECLARE 1 VOLUME_GC3 BASED ( VSAMPTR4 ),\n      2  VOL_NO_VLF          BIT (8),    /* NUMBER OF VAR-LEN FLDS */\n      2  VOL_OFFSET          BIT (8),    /* OFFSET TO VAR_LEN FLDS */\n      2  ZZA                 BIT (32),\n      2  VOL_VOLSER          CHAR (6);   /* VOLUME SERIAL NUMBER */\n-  DECLARE VOL_NO_VFIELD     FIXED BINARY (31) INIT (21);\n /* INIT VALUE MUST BE EQUAL TO NUMBER OF SUBSCRIPTS FOR VOL_VFIELD */\n   DECLARE 1 VOLUME_GC3_VAR BASED ( VSAMPTR5 ),\n      2  VOL_VFLDLEN         BIT (16),   /* LENGTH OF THE FIELD */\n      2  VOL_VFIELD(21),                 /* DATA FIELD */\n         3  ZZA              BIT (16),\n         3  VOL_CCHHCCHH     BIT (64),   /* LOW & HIGH CYL & HEAD */\n         3  VOL_TRKS         BIT (16),   /* NUMBER OF TRACKS */\n         3  ZZB              BIT (64);\n0         END PULL_VOLUME;\n-  DECLARE 1 CAT_TYPE_C BASED ( VSAMPTR ),\n      2  ZZA                 BIT (352),\n      2  ENTYPE              CHAR (1),   /* RECORD TYPE */\n      2  ZZB                 BIT (24),\n      2  CLEN_FIX_FLDS       BIT (8);    /* LENGTH OF FIX LEN FIELDS */\n-  DECLARE 1 CAT_TYPE_D_I BASED ( VSAMPTR ),\n      2  ZZA                 BIT (384),\n      2  DLEN_FIX_FLDS       BIT (8),    /* LENGTH OF FIX LEN FIELDS */\n      2  DENTNAME            CHAR (44),  /* THE DATA SET'S DSNAME */\n      2  ZZB                 BIT (112),\n      2  DATTR1              BIT (8);    /* DATA SET ATTRIBUTES */\n-  DECLARE SREC_SUBSCRIPT    FIXED BINARY (31) INIT (10);\n /* INIT VALUE MUST BE EQUAL TO NUMBER OF SUBSCRIPTS FOR SREC BELOW */\n   DECLARE 1 SET_OF_FIELDS BASED ( VSAMPTR1 ),\n      2  SHOREXT,\n          3  SHO_CINUM       CHAR (3),   /* CINO OF EXTENSION RECORD */\n          3  SHO_GROUP_CD    BIT (8),    /* GROUP CODE NUMBER */\n          3  SHO_SEQ_NO      BIT (8),    /* SET NO OF SOF POINTED TO */\n      2  SNO_SOF             BIT (8),    /* NUMBER OF SOF POINTERS */\n      2  SREC(10),           /* POINTERS TO SOF IN THE RECORD */\n          3  SREC_CINUM      BIT (24),   /* CINUM OF EXTENSION REC &\n                                            DSPL OF SOF FROM BEGIN */\n          3  SREC_GROUP_CD   BIT (8),    /* GROUP CODE NUMBER */\n          3  ZZA             BIT (8);\n-  DECLARE 1 ASSOC_GC2 BASED ( VSAMPTR3 ),\n      2  ZZA                 BIT (16),\n      2  ASSOC_TYPE          CHAR (1),   /* ALLOC RECORD TYPE */\n      2  ASSOC_NAME          CHAR (3);   /* CI NUMBER OF CLUSTER */\n-  DECLARE 1 CAT_TYPE_E BASED ( VSAMPTR ),\n      2  ZZA                 BIT (384),\n      2  ELEN_FIX_FLDS       BIT (8);    /* LENGTH OF FIX LEN FIELDS */\n0         END PROCESS_VSAM_CLUSTER;\n1PROCESS_VSAM_VOLUME: PROCEDURE ( CURRENT_RECORD, CURRENT_TYPE )\n           OPTIONS( REENTRANT ) RECURSIVE REORDER;\n-  DEFAULT RANGE(*)         AUTOMATIC;\n   DECLARE\n     ( VSAMPTR, VSAMPTR1, VSAMPTR3 )\n                        POINTER,\n     VSAMPTR1A          DEFINED ( VSAMPTR1 ) FIXED BINARY (31)\n                        UNALIGNED POSITION (1),\n     VSAMPTR3A          DEFINED ( VSAMPTR3 ) FIXED BINARY (31)\n                        UNALIGNED POSITION (1),\n     ( I, J, K )        FIXED BINARY (31) INIT (0),\n     CURRENT_RECORD     CHAR (505),\n     NEW_RECORD         CHAR (505) INIT (' '),\n     CHAR3              CHAR (3) INIT (' '),\n     HOLD_RBA           BIT (24) INIT ('0'B),\n     CURRENT_TYPE       CHAR (1);\n DECLARE BIT24 BIT (24) INIT ('0'B);\n0         VSAMPTR = ADDR( CURRENT_RECORD );\n       /* PUT FILE ( DEBUGPT )\n              EDIT ( 'PROCESS_VSAM_VOLUME--', ENTYPE,\n              '  CURRENT_TYPE--', CURRENT_TYPE ) (SKIP(3),A,A,A,A);\n          PUT FILE ( DEBUGPT ) DATA ( DC_ANCHOR_RBA ) SKIP; */\n-         IF ENTYPE = 'V' THEN V: DO;\n              VSAMPTR1 = VSAMPTR;\n              VSAMPTR1A = VSAMPTR1A + VLEN_FIX_FLDS;\n           /* PUT FILE ( DEBUGPT )\n                  DATA ( CAT_TYPE_V, SREC_CINUM, SREC_GROUP_CD,\n                  SNO_SOF ) SKIP; */\n              DC_VOLSER = SUBSTR( VENTNAME, 1, 6 );\n              DV_ENTNAME = VENTNAME;\n              DV_VOLSTMP = VVOLSTMP;\n              DV_VOLDVCHR = VVOLDVCHR;\n              WRITE FILE ( VOLMIN ) FROM ( DETAIL_VOLUME );\n           /* PUT FILE ( DEBUGPT ) DATA ( DETAIL_VOLUME ) SKIP(2); */\n              TRK_CYL = VTRK_CYL;\n              J = SNO_SOF;\n              IF J > SREC_SUBSCRIPT THEN DO;\n                  PUT EDIT ( 'PROCESS_VSAM_VOLUME--V' ) ( SKIP(5), A );\n                  PUT EDIT ( 'NUMBER OF FIELDS IN THE SET OF FIELDS ',\n                      'IS GREATER THAN THE DEFAULT MAXIMUM.' )\n                     ( SKIP, A, A );\n                  PUT DATA ( SET_OF_FIELDS ) SKIP;\n                  RETURN_CODE = 88;\n                  GO TO END_VSAM2;\n                  END;\n              IF OLD_KEYS( OLD_KEYS_SIZE ) \u00ac= HIGH(3) THEN\n                  CALL OLD_KEYS_SMALL;\n              DO I = 1 TO J;\n                  IF SREC_GROUP_CD( I ) = '00000110'B THEN DO;\n                      VSAMPTR3 = VSAMPTR1;\n                      VSAMPTR3A = VSAMPTR3A + 6 + 6 * J\n                          + SUBSTR( SREC_CINUM( I ), 9, 16 );\n                      CALL PULL_VVOLUME( VSAMPTR3 );\n                      END;\n                  IF SREC_GROUP_CD( I ) = '10000110'B THEN D2: DO;\n                      HOLD_RBA = DC_ANCHOR_RBA;\n                      DC_ANCHOR_RBA = SREC_CINUM( I );\n                      UNSPEC( CHAR3 ) = SREC_CINUM( I );\n                  D3: DO K = 1 TO OLD_KEYS_SIZE;\n                          IF OLD_KEYS( K ) = CHAR3 THEN LEAVE D2;\n                          IF OLD_KEYS( K ) = HIGH(3) THEN DO;\n                              OLD_KEYS( K ) = CHAR3;\n                              LEAVE D3;\n                              END;\n                          END D3;\n                      READ FILE ( VSAMKEY ) INTO ( NEW_RECORD )\n                          KEY ( CHAR3 );\n                      CALL PROCESS_VSAM_VOLUME( NEW_RECORD,\n                         ENTYPE );\n                      DC_ANCHOR_RBA = HOLD_RBA;\n                      END D2;\n                  END;\n              IF SHO_GROUP_CD \u00ac= '0'B | SHO_SEQ_NO \u00ac= '0'B |\n                  UNSPEC( SHO_CINUM ) \u00ac= '0'B THEN D6: DO;\n                      HOLD_RBA = DC_ANCHOR_RBA;\n                      DC_ANCHOR_RBA = UNSPEC( SHO_CINUM );\n                  D7: DO K = 1 TO OLD_KEYS_SIZE;\n                          IF OLD_KEYS( K ) = SHO_CINUM THEN LEAVE D6;\n                          IF OLD_KEYS( K ) = HIGH(3) THEN DO;\n                              OLD_KEYS( K ) = SHO_CINUM;\n                              LEAVE D7;\n                              END;\n                          END D7;\n                      READ FILE ( VSAMKEY ) INTO ( NEW_RECORD )\n                          KEY ( SHO_CINUM );\n                      CALL PROCESS_VSAM_VOLUME( NEW_RECORD,\n                         ENTYPE );\n                      DC_ANCHOR_RBA = HOLD_RBA;\n                  END D6;\n              END V;\n-         IF ENTYPE = 'W' THEN W: DO;\n              VSAMPTR1 = VSAMPTR;\n              VSAMPTR1A = VSAMPTR1A + WLEN_FIX_FLDS;\n              J = SNO_SOF;\n           /* PUT FILE ( DEBUGPT )\n                  DATA ( CAT_TYPE_W, SET_OF_FIELDS ) SKIP; */\n              IF J > SREC_SUBSCRIPT THEN DO;\n                  PUT EDIT ( 'PROCESS_VSAM_VOLUME--W' ) ( SKIP(5), A );\n                  PUT EDIT ( 'NUMBER OF FIELDS IN THE SET OF FIELDS ',\n                      'IS GREATER THAN THE DEFAULT MAXIMUM.' )\n                     ( SKIP, A, A );\n                  PUT DATA ( SET_OF_FIELDS ) SKIP;\n                  RETURN_CODE = 88;\n                  GO TO END_VSAM2;\n                  END;\n              IF OLD_KEYS( OLD_KEYS_SIZE ) \u00ac= HIGH(3) THEN\n                  CALL OLD_KEYS_SMALL;\n              DO I = 1 TO J;\n                  IF SREC_GROUP_CD( I ) = '00000110'B THEN DO;\n                      VSAMPTR3 = VSAMPTR1;\n                      VSAMPTR3A = VSAMPTR3A + 6 + 6 * J\n                          + SUBSTR( SREC_CINUM( I ), 9, 16 );\n                      CALL PULL_VVOLUME( VSAMPTR3 );\n                      END;\n                  IF SREC_GROUP_CD( I ) = '10000110'B THEN D4: DO;\n                      HOLD_RBA = DC_ANCHOR_RBA;\n                      DC_ANCHOR_RBA = SREC_CINUM( I );\n                      UNSPEC( CHAR3 ) = SREC_CINUM( I );\n                  D5: DO K = 1 TO OLD_KEYS_SIZE;\n                          IF OLD_KEYS( K ) = CHAR3 THEN LEAVE D4;\n                          IF OLD_KEYS( K ) = HIGH(3) THEN DO;\n                              OLD_KEYS( K ) = CHAR3;\n                              LEAVE D5;\n                              END;\n                          END D5;\n                      READ FILE ( VSAMKEY ) INTO ( NEW_RECORD )\n                          KEY ( CHAR3 );\n                      CALL PROCESS_VSAM_VOLUME( NEW_RECORD,\n                          CURRENT_TYPE );\n                      DC_ANCHOR_RBA = HOLD_RBA;\n                      END D4;\n                  END;\n              IF SHO_GROUP_CD \u00ac= '0'B | SHO_SEQ_NO \u00ac= '0'B |\n                  UNSPEC( SHO_CINUM ) \u00ac= '0'B THEN D10: DO;\n                  HOLD_RBA = DC_ANCHOR_RBA;\n                  DC_ANCHOR_RBA = UNSPEC( SHO_CINUM );\n             D11: DO K = 1 TO OLD_KEYS_SIZE;\n                      IF OLD_KEYS( K ) = SHO_CINUM THEN LEAVE D10;\n                      IF OLD_KEYS( K ) = HIGH(3) THEN DO;\n                          OLD_KEYS( K ) = SHO_CINUM;\n                          LEAVE D11;\n                          END;\n                      END D11;\n                  READ FILE ( VSAMKEY ) INTO ( NEW_RECORD )\n                      KEY ( SHO_CINUM );\n                  CALL PROCESS_VSAM_VOLUME( NEW_RECORD,\n                      ENTYPE );\n                  DC_ANCHOR_RBA = HOLD_RBA;\n                  END D10;\n              END W;\n       /* PUT FILE ( DEBUGPT )\n              EDIT ( 'LEAVE PROCESS_VSAM_VOLUME--', ENTYPE,\n              '  CURRENT_TYPE--', CURRENT_TYPE ) (SKIP(2),A,A,A,A); */\n-PULL_VVOLUME: PROCEDURE ( C_VOLUME )\n          REORDER OPTIONS ( REENTRANT ) RECURSIVE;\n   DECLARE\n     ( C_VOLUME, VSAMPTR4 )\n                        POINTER,\n     WORK_SPACE         FIXED BINARY (31) INIT (0),\n     BIT4               BIT (4) INIT ('0'B),\n     HEXCHAR            CHAR (16) INIT ('0123456789ABCDEF'),\n     VSAMPTR4A          DEFINED ( VSAMPTR4 ) FIXED BINARY (31)\n                        UNALIGNED POSITION (1),\n     ( I, J, K )        FIXED BINARY (31) INIT (0);\n0         VSAMPTR4 = C_VOLUME;\n       /* PUT FILE ( DEBUGPT ) EDIT ( 'PULL_V_VOLUME' ) (SKIP(2),A);\n          PUT FILE ( DEBUGPT ) DATA ( DATASPACE_GC6 ) SKIP; */\n          DO I = 1 TO DSP_NODSPEXT;\n              K = DSP_SPEXTST( I );\n              WORK_SPACE = K / TRK_CYL;\n              J = K - ( WORK_SPACE * TRK_CYL );\n           /* PUT FILE ( DEBUGPT ) DATA ( K, WORK_SPACE, J ) SKIP; */\n              SUBSTR( DC_CCHHCCHH, 1, 32 ) =\n                  SUBSTR( WORK_SPACE, 16, 16 ) || SUBSTR( J, 16, 16 );\n              K = DSP_SPEXTST( I ) + DSP_SPEXTNT( I ) - 1;\n              WORK_SPACE = K / TRK_CYL;\n              J = K - ( WORK_SPACE * TRK_CYL );\n           /* PUT FILE ( DEBUGPT )\n                  DATA ( K, WORK_SPACE, J, TRK_CYL ) SKIP; */\n              SUBSTR( DC_CCHHCCHH, 33, 32 ) =\n                  SUBSTR( WORK_SPACE, 16, 16 ) || SUBSTR( J, 16, 16 );\n              DC_NTRACKS = DSP_SPEXTNT( I );\n              DO K = 1 TO 6;\n                  BIT4 = SUBSTR( DC_ANCHOR_RBA, 1 + ( K - 1 ) * 4, 4 );\n                  J = BIT4;\n                  SUBSTR( DC_CLUSTER, K + 30, 1 ) =\n                      SUBSTR( HEXCHAR, J + 1, 1 );\n                  END; /* I CHANGED TO K IN THIS LOOP TO FIX ERROR */\n           /* PUT FILE ( DEBUGPT )\n                  DATA ( DETAIL_CLUSTER ) SKIP; */\n              WRITE FILE ( DETLIN ) FROM ( DETAIL_CLUSTER );\n              END;\n-  DECLARE 1 DATASPACE_GC6 BASED ( VSAMPTR4 ),\n      2  DSP_NO_VLF          BIT (8),    /* NUMBER OF VAR-LEN FLDS */\n      2  DSP_OFFSET          BIT (8),    /* OFFSET TO VAR_LEN FLDS */\n      2  DSP_DSCBTS          BIT (64),   /* FORMAT-1 DSCB TIME STAMP */\n      2  DSP_DSCBPTR         BIT (40),   /* CCHHR OF THE FORMAT-1 DSCB*/\n      2  DSP_SPHDFLG         BIT (8),    /* DATA SPACE FLAGS */\n      2  DSP_NODSPEXT        BIT (8),    /* NUMBER OF DS EXTENTS */\n      2  DSP_DSPSOPTS        BIT (8),    /* SPACE OPTIONS FOR DS */\n      2  DSP_DSPSSQ          BIT (24),   /* SECONDARY SPACE ALLOC */\n      2  DSP_SPEXTENT(16),               /* EXTENT DESCRIPTORS */\n         3  DSP_SPEXTST      BIT (16),   /* EXTENT STARTING TRACK */\n         3  DSP_SPEXTNT      BIT (16);   /* TRACKS IN THE EXTENT */\n0         END PULL_VVOLUME;\n-  DECLARE 1 CAT_TYPE_V BASED ( VSAMPTR ),\n      2  ZZA                 BIT (352),\n      2  ENTYPE              CHAR (1),   /* RECORD TYPE */\n      2  ZZB                 BIT (24),\n      2  VLEN_FIX_FLDS       BIT (8),    /* LENGTH OF FIX LEN FIELDS */\n      2  VENTNAME            CHAR (44),  /* VOLUME SERIAL NUMBER */\n      2  VVOLSTMP            BIT (64),   /* VOLUME TIME STAMP */\n      2  VVOLDVCHR,                      /* DEVICE CHARACTERISTICS */\n          3  VDEVT           BIT (32),   /* DEVICE TYPE */\n          3  VMAX_BLOCK      BIT (32),   /* MAXIMUM BLOCK SIZE */\n          3  VCYL_VOL        BIT (16),   /* CYLINDERS/VOLUME */\n          3  VTRK_CYL        BIT (16),   /* TRACKS/CYLINDER */\n          3  VBYTES_TRK      BIT (16),   /* BYTES/TRACK */\n          3  VGAP_BYTES      BIT (8),    /* BYTES REQUIRED FOR GAPS */\n          3  VGAPL_BYTES     BIT (8),    /* BYTES FOR GAPS FOR LAST */\n          3  VNKEY_BYTES     BIT (8),    /* BYTES SUB FOR NOT KEYED */\n          3  VOLDFLAGS       BIT (8),    /* FLAGS */\n          3  VTOLERANCE      BIT (16);   /* TOLERANCE FACTOR */\n-  DECLARE SREC_SUBSCRIPT    FIXED BINARY (31) INIT (100);\n /* INIT VALUE MUST BE EQUAL TO NUMBER OF SUBSCRIPTS FOR SREC BELOW */\n   DECLARE 1 SET_OF_FIELDS BASED ( VSAMPTR1 ),\n      2  SHOREXT,\n          3  SHO_CINUM       CHAR (3),   /* CINO OF EXTENSION RECORD */\n          3  SHO_GROUP_CD    BIT (8),    /* GROUP CODE NUMBER */\n          3  SHO_SEQ_NO      BIT (8),    /* SET NO OF SOF POINTED TO */\n      2  SNO_SOF             BIT (8),    /* NUMBER OF SOF POINTERS */\n      2  SREC(100),          /* POINTERS TO SOF IN THE RECORD */\n          3  SREC_CINUM      BIT (24),   /* CINUM OF EXTENSION REC &\n                                            DSPL OF SOF FROM BEGIN */\n          3  SREC_GROUP_CD   BIT (8),    /* GROUP CODE NUMBER */\n          3  ZZA             BIT (16);\n-  DECLARE 1 CAT_TYPE_W BASED ( VSAMPTR ),\n      2  ZZA                 BIT (384),\n      2  WLEN_FIX_FLDS       BIT (8);    /* LENGTH OF FIX LEN FIELDS */\n-         END PROCESS_VSAM_VOLUME;\n1END_VSAM: CLOSE FILE ( VSAMCAT ), FILE ( VSAMKEY ),\n              FILE ( DETLIN ) ENVIRONMENT ( REREAD ),\n              FILE ( VOLMIN ) ENVIRONMENT ( REREAD );\n          FREE DATA_EXTENTS, OLD_KEYS;\n0OLD_KEYS_SMALL: PROCEDURE REORDER;\n              PUT EDIT ( 'PROCESS_VSAM_CLUSTER--THE SIZE OF \"OLD_',\n                  'KEYS\" IS NOT LARGE ENOUGH, EXPAND IT AND RERUN ',\n                  'THE JOB.') ( SKIP(5), A, A, A );\n              PUT DATA ( OLD_KEYS_SIZE ) SKIP;\n              RETURN_CODE = 88;\n              GO TO END_VSAM2;\n              END OLD_KEYS_SMALL;\n          IF RETURN_CODE \u00ac= 0 THEN GO TO END_VSAM2;\n          CALL PLISRTA (\n              ' SORT FIELDS=(1,10,CH,A,15,4,CH,A) ',\n              ' RECORD TYPE=F,LENGTH=(109) ',\n              129000, RETURN_CODE, 'DETL' );\n          IF RETURN_CODE \u00ac= 0 THEN GO TO END_VSAM2;\n          CALL PLISRTA (\n              ' SORT FIELDS=(1,6,CH,A) ',\n              ' RECORD TYPE=F,LENGTH=(75) ',\n              129000, RETURN_CODE, 'VOLM' );\n          IF RETURN_CODE \u00ac= 0 THEN GO TO END_VSAM2;\n-  DECLARE 1 DISK_CHARACTERISTICS( DISK_CHARACTERISTICS_SIZE )\n                        CONTROLLED,\n      2  DEVT           CHAR (6),\n      2  UCBTYP         BIT (8),\n      2  TRACKCYL       FIXED DECIMAL (5),\n      2  CYLDEVICE      FIXED DECIMAL (7),\n      2  BYTESTRACK     FIXED DECIMAL (10),\n      2  VERIFIED       BIT (1) INIT ('1'B),\n0  1 PDISK_CHARCTR UNALIGNED,\n      2  PDEVIC         CHAR (6),\n      2  ZZA            CHAR (1),\n      2  PUNITTYPE      CHAR (8),\n      2  ZZB            CHAR (1),\n      2  PTRK_CYL       CHAR (7),\n      2  ZZC            CHAR (1),\n      2  PCYL_DEV       CHAR (7),\n      2  ZZD            CHAR (1),\n      2  PBYTES_TRACK   CHAR (11),\n      2  ZZE            CHAR (37),\n0  DISK_CHARACTERISTICS_SIZE FIXED BINARY (31) INIT(0);\n-         OPEN FILE ( DISKTBL );\n          ON ENDFILE ( DISKTBL ) GO TO END_DISKTBL1;\n          DO I = 1 BY 1;\n              READ FILE ( DISKTBL ) INTO ( PDISK_CHARCTR );\n              IF SUBSTR( PDEVIC, 1, 1 ) \u00ac= '*' THEN\n                  DISK_CHARACTERISTICS_SIZE =\n                      DISK_CHARACTERISTICS_SIZE + 1;\n              END;\n END_DISKTBL1: CLOSE FILE ( DISKTBL ) ENVIRONMENT ( REREAD );\n          ALLOCATE DISK_CHARACTERISTICS;\n          ON CONVERSION ONCHAR = '0';\n          OPEN FILE ( DISKTBL );\n          ON ENDFILE ( DISKTBL ) GO TO END_DISKTBL2;\n          READ FILE ( DISKTBL ) INTO ( PDISK_CHARCTR );\n          IF PDEVIC \u00ac= '*DEVIC' THEN DO;\n              PUT DATA ( PDISK_CHARCTR, DISK_CHARACTERISTICS )\n                  SKIP(3);\n              RETURN_CODE = 88;\n              GO TO END_VSAM2;\n              END;\n          DO I = 1 TO DISK_CHARACTERISTICS_SIZE;\n              READ FILE ( DISKTBL ) INTO ( PDISK_CHARCTR );\n              DEVT( I ) = PDEVIC;\n              UCBTYP( I ) = BIT( PUNITTYPE, 8 );\n              TRACKCYL( I ) = PTRK_CYL;\n              CYLDEVICE( I ) = PCYL_DEV;\n              BYTESTRACK( I ) = PBYTES_TRACK;\n              VERIFIED( I ) = '1'B;\n              END;\n END_DISKTBL2: CLOSE FILE ( DISKTBL );\n1  DECLARE\n      ERROR_LINE        CHAR (133) INIT (\n       '0======> ERROR IN CATALOG, SKIPPING TO NEXT VOLUME <======' ),\n      LINE_CNT          FIXED DECIMAL (3) INIT (0),\n      DTL_HD3           CHAR (133) INIT (' '),\n      C_VOLUME          CHAR (6) INIT (' '),\n      H_DATASET         CHAR (44) INIT (' '),\n      H_CCHHCCHH        BIT (64) INIT ('0'B),\n      ( FCCB, FHHB, LCCB, LHHB )\n                        BIT (16) INIT ('0'B),\n      ( FCC, FHH, LCC, LHH, FCCH, FHHH, LCCH, LHHH, RTRKS, HTRKS,\n      FCC_S, FHH_S, LCC_S, LHH_S, TRACKS_CYL )\n                        FIXED BINARY (31) INIT (0),\n      PRT_AVAIL         BIT (1) INIT ('0'B),\n      DETL_EOF          BIT (1) INIT ('0'B),\n      VOLM_EOF          BIT (1) INIT ('0'B);\n-  DECLARE 1 VOL_HD1,\n      2  VH1_CC         CHAR (1) INIT (' '),\n      2  VH1_VOLUME     CHAR (6) INIT (' '),\n      2  ZZB            CHAR (26) INIT (' '),\n      2  ZZC            CHAR (38) INIT\n                        ('VSAM TRACK ALLOCATION MAP FOR VOLUME \"'),\n      2  VH1_VOLUME1    CHAR (6) INIT (' '),\n      2  ZZD            CHAR (25) INIT ('\"'),\n      2  VH1_DATE       CHAR (10) INIT ('MM/DD/YY'),\n      2  VH1_TIME       CHAR (5) INIT ('HH:MM'),\n      2  ZZE            CHAR (10) INIT ('     PAGE '),\n      2  VH1_PAGE       PIC 'ZZ,ZZ9' INIT (0);\n-  DECLARE 1 VOL_HD2,\n      2  ZZA            CHAR (27) INIT ('0DEVICE DESCRIPTION:  TYPE='),\n      2  VH2_TYPE       CHAR (6) INIT (' '),\n      2  ZZB            CHAR (22) INIT ('     DISK PACK NOCYLS='),\n      2  VH2_NOCYLS     PIC 'ZZZZ9' INIT (0),\n      2  ZZC            CHAR (14) INIT ('     TRKS/CYL='),\n      2  VH2_TRKCYL     PIC 'ZZZ9' INIT (0),\n      2  ZZD            CHAR (13) INIT ('     TRKSIZE='),\n      2  VH2_TRKSIZE    PIC 'ZZZ,ZZ9' INIT (0),\n      2  ZZE            CHAR (20) INIT ('     MAX BLOCK SIZE='),\n      2  VH2_MAXBLOCK   PIC 'ZZZ,ZZZ,ZZZ,ZZ9';\n-  DECLARE 1 DTL_HD1,\n      2  ZZA            CHAR (27) INIT ('-'),\n      2  ZZB            CHAR (23) INIT ('CLUSTER NAME'),\n      2  ZZC            CHAR (28) INIT ('FIRST TRK   LAST TRK'),\n      2  ZZD            CHAR (15) INIT ('#TRKS'),\n      2  ZZG            CHAR (40) INIT ('DSNAME, DATA SPACE, OR USAGE');\n-  DECLARE 1 DTL_HD2,\n      2  ZZA            CHAR (27) INIT ('+'),\n      2  ZZB            CHAR (23) INIT ('_______ ____'),\n      2  ZZC            CHAR (28) INIT ('_____ ___   ____ ___'),\n      2  ZZD            CHAR (15) INIT ('_____'),\n      2  ZZG            CHAR (40) INIT ('______  ____ _____  __ _____');\n-  DECLARE 1 DTL_LINE,\n      2  ZZA            CHAR (2) INIT (' '),\n      2  DT4_CLUSTER    CHAR (44) INIT (' '),\n      2  ZZB            CHAR (4) INIT (' '),\n      2  DT4_FCC        CHAR (4) INIT (' '),\n      2  ZZC            CHAR (1) INIT ('.'),\n      2  DT4_FHH        CHAR (4) INIT (' '),\n      2  ZZD            CHAR (2) INIT (' '),\n      2  DT4_LCC        CHAR (4) INIT (' '),\n      2  ZZE            CHAR (1) INIT ('.'),\n      2  DT4_LHH        CHAR (4) INIT (' '),\n      2  ZZF            CHAR (4) INIT (' '),\n      2  DT4_NTRACKS    PIC '--------9' INIT (0),\n      2  ZZG            CHAR (4) INIT (' '),\n      2  DT4_DATASET    CHAR (46) INIT (' ');\n-         FCCH, FHHH, LCCH, LHHH, RTRKS = 0;\n          OPEN FILE ( DETLOUT ), FILE ( VOLMOUT ), FILE ( PRTFILE );\n          ON ENDFILE ( DETLOUT ) DETL_EOF = '1'B;\n          ON ENDFILE ( VOLMOUT ) VOLM_EOF = '1'B;\n          READ FILE ( VOLMOUT ) INTO ( DETAIL_VOLUME );\n          READ FILE ( DETLOUT ) INTO ( DETAIL_CLUSTER );\n          DO UNTIL ( DETL_EOF & VOLM_EOF );\n              C_VOLUME = SUBSTR( DV_ENTNAME, 1, 6 );\n              DO WHILE ( C_VOLUME > DC_VOLSER ) UNTIL ( DETL_EOF );\n                  READ FILE ( DETLOUT ) INTO ( DETAIL_CLUSTER );\n                  END;\n              VH1_VOLUME, VH1_VOLUME1 = C_VOLUME;\n              VH1_PAGE = 1;\n              WRITE FILE ( PRTFILE ) FROM ( VOL_HD1 );\n              VH1_CC = '1';\n              VH2_NOCYLS = VCYL_VOL;\n              VH2_TRKCYL = VTRK_CYL;\n              RTRKS = 0;\n              VH2_TRKSIZE = VBYTES_TRK;\n              VH2_MAXBLOCK = VMAX_BLOCK;\n              DO I = 1 TO DISK_CHARACTERISTICS_SIZE\n                  UNTIL ( UCBTYP( I ) = SUBSTR( VDEVT, 25, 8 ) );\n                  END;\n              IF I > DISK_CHARACTERISTICS_SIZE THEN DO;\n                  PUT EDIT ( 'NO DEVICE TYPE RECORD IN THE \"DISKTBL\" ',\n                      'TABLE FOR THE DEVICE--', C_VOLUME )\n                      ( SKIP(4), A, A, A );\n                  PUT DATA(DETAIL_VOLUME,DISK_CHARACTERISTICS) SKIP(8);\n                  RETURN_CODE = 88;\n                  GO TO END_VSAM2;\n                  END;\n              VH2_TYPE = DEVT( I );\n              IF ( TRACKCYL( I ) \u00ac= VTRK_CYL | CYLDEVICE( I ) \u00ac=\n                  VCYL_VOL | BYTESTRACK( I ) \u00ac= VMAX_BLOCK )\n                  & VERIFIED( I ) THEN DO;\n                  PUT EDIT ( 'VALUES IN \"DISKTBL\" TABLE FOR TRK/CYL, ',\n                      'BYTES/TRK, OR CYL/DEV IS INCORRECT.' )\n                      ( SKIP(4), A, A );\n                  PUT DATA(DETAIL_VOLUME,DISK_CHARACTERISTICS) SKIP(2);\n               /* RETURN_CODE = 99;\n                  GO TO END_VSAM2; */\n                  END;\n              VERIFIED( I ) = '0'B;\n              WRITE FILE ( PRTFILE ) FROM ( VOL_HD2 );\n              WRITE FILE ( PRTFILE ) FROM ( DTL_HD1 );\n              WRITE FILE ( PRTFILE ) FROM ( DTL_HD2 );\n              WRITE FILE ( PRTFILE ) FROM ( DTL_HD3 );\n              LINE_CNT = 7;\n              H_DATASET = ' ';\n              H_CCHHCCHH = '0'B;\n         D24: DO WHILE ( DC_VOLSER = C_VOLUME ) UNTIL ( DETL_EOF );\n               /* PUT DATA ( DETAIL_CLUSTER ) SKIP(2); */\n                  FCCB = SUBSTR( DC_CCHHCCHH, 1, 16);\n                  FHHB = SUBSTR( DC_CCHHCCHH, 17, 16);\n                  LCCB = SUBSTR( DC_CCHHCCHH, 33, 16);\n                  LHHB = SUBSTR( DC_CCHHCCHH, 49, 16);\n                  FCC = FCCB;\n                  FHH = FHHB;\n                  LCC = LCCB;\n                  LHH = LHHB;\n                  IF ( LCC - FCC ) * VTRK_CYL + LHH - FHH + 1\n                      \u00ac= DC_NTRACKS THEN DO;\n                      PUT EDIT ( 'THE NUMBER OF TRACKS IN THIS ',\n                          'EXTENT DOES NOT EQUAL THE CCHH-CCHH.  ',\n                          'PROBABLE GARBAGE IN THE CATALOG RECORD.' )\n                          ( SKIP(4), A, A, A );\n                      PUT DATA ( DETAIL_CLUSTER, DETAIL_VOLUME,\n                          FCC, FHH, LCC, LHH ) SKIP;\n                      WRITE FILE ( PRTFILE ) FROM ( ERROR_LINE );\n                      RETURN_CODE = 106;\n                      LEAVE D24;\n                      END;\n                  IF LINE_CNT > 58 THEN CALL PRINT_HEADER;\n                  IF SUBSTR( DC_CLUSTER, 1, 24 ) =\n                      '              DATA SPACE' & RTRKS \u00ac= 0 THEN DO;\n                      PRT_AVAIL = '1'B;\n                      CALL CONV_HEX( SUBSTR( FCC_S, 16, 16 ),\n                          DT4_FCC );\n                      CALL CONV_HEX( SUBSTR( FHH_S, 16, 16 ),\n                          DT4_FHH );\n                      HTRKS = ( LCC_S - FCC_S ) * TRACKS_CYL +\n                          LHH_S - FHH_S + 1;\n                      CALL CONV_HEX( SUBSTR( LCC_S, 16, 16 ),\n                          DT4_LCC );\n                      CALL CONV_HEX( SUBSTR( LHH_S, 16, 16 ),\n                          DT4_LHH );\n                      DT4_CLUSTER = ' ';\n                      DT4_NTRACKS = HTRKS;\n                      DT4_DATASET = '***** AVAILABLE *****';\n                      RTRKS = RTRKS - HTRKS;\n                      WRITE FILE ( PRTFILE ) FROM ( DTL_LINE );\n                      IF RTRKS < 0 THEN DO;\n                          PUT EDIT ( 'DATASET(S) LARGER THAN ASSOCIATE',\n                              'D DATA SPACE, OBVIOUS PROBLEM SOMEWHERE')\n                              ( SKIP(4), A, A);\n                          PUT DATA ( DETAIL_VOLUME, DETAIL_CLUSTER,\n                              HTRKS, RTRKS ) SKIP;\n                          WRITE FILE ( PRTFILE ) FROM ( ERROR_LINE );\n                          RETURN_CODE = 108;\n                          LEAVE D24;\n                          END;\n                      LINE_CNT = LINE_CNT + 1;\n                      PRT_AVAIL = '0'B;\n                      END;\n                  IF RTRKS \u00ac= 0 THEN D10: DO;\n                      IF FCC_S = FCC & FHH_S = FHH THEN LEAVE;\n                      PRT_AVAIL = '0'B;\n                      IF FCC_S = FCC & FHH_S \u00ac= FHH THEN DO;\n                          PRT_AVAIL = '1'B;\n                          CALL CONV_HEX( FCCB, DT4_FCC );\n                          CALL CONV_HEX( SUBSTR( FHH_S, 16, 16 ),\n                              DT4_FHH );\n                          END;\n                      IF FCC_S \u00ac= FCC THEN DO;\n                          PRT_AVAIL = '1'B;\n                          CALL CONV_HEX( SUBSTR( FCC_S, 16, 16 ),\n                              DT4_FCC );\n                          CALL CONV_HEX( SUBSTR( FHH_S, 16, 16 ),\n                              DT4_FHH );\n                          END;\n                      IF LCC > LCC_S | ( LCC = LCC_S & LHH > LHH_S )\n                          THEN DO;\n                          PUT EDIT ( 'DATASET LARGER THAN ASSOCIATED ',\n                              'DATA SPACE, OBVIOUS PROBLEM SOMEWHERE.' )\n                              ( SKIP(4), A, A );\n                          PUT DATA ( DETAIL_VOLUME, DETAIL_CLUSTER, LCC,\n                              LHH, LCC_S, LHH_S, FCC_S, FHH_S ) SKIP;\n                          RETURN_CODE = 104;\n                          GO TO END_VSAM2;\n                          END;\n                      IF PRT_AVAIL THEN DO;\n                          LCCH = FCC;\n                          LHHH = FHH;\n                          LHHH = LHHH - 1;\n                          IF LHHH < 0 THEN DO;\n                              LCCH = LCCH - 1;\n                              LHHH = TRACKS_CYL - 1;\n                              END;\n                          HTRKS = ( LCCH - FCC_S ) * TRACKS_CYL +\n                              LHHH - FHH_S + 1;\n                          CALL CONV_HEX( SUBSTR( LCCH, 16, 16 ),\n                              DT4_LCC );\n                          CALL CONV_HEX( SUBSTR( LHHH, 16, 16 ),\n                              DT4_LHH );\n                          DT4_CLUSTER = ' ';\n                          DT4_NTRACKS = HTRKS;\n                          DT4_DATASET = '***** AVAILABLE *****';\n                          RTRKS = RTRKS - HTRKS;\n                          WRITE FILE ( PRTFILE ) FROM ( DTL_LINE );\n                          IF RTRKS < 0 THEN DO;\n                              PUT EDIT ( 'DATASET(S) LARGER THAN ',\n                                  'ASSOCIATED DATA SPACE, OBVIOUS ',\n                                  'PROBLEM SOMEWHERE' ) ( SKIP(4), A,A);\n                              PUT DATA ( DETAIL_VOLUME, DETAIL_CLUSTER,\n                                  HTRKS, RTRKS ) SKIP;\n                              WRITE FILE ( PRTFILE ) FROM ( ERROR_LINE);\n                              RETURN_CODE = 112;\n                              LEAVE D24;\n                              END;\n                          LINE_CNT = LINE_CNT + 1;\n                          PRT_AVAIL = '0'B;\n                          END;\n                      END D10;\n                  IF SUBSTR( DC_CLUSTER, 1, 24 ) =\n                      '              DATA SPACE' THEN DO;\n                      FCC_S = FCC;\n                      FHH_S = FHH;\n                      LCC_S = LCC;\n                      LHH_S = LHH;\n                      TRACKS_CYL = VTRK_CYL;\n                      RTRKS = DC_NTRACKS;\n                      END;\n                     ELSE DO;\n                      RTRKS = RTRKS - DC_NTRACKS;\n                      IF RTRKS < 0 THEN DO;\n                          PUT EDIT ( 'DATASET(S) LARGER THAN ASSOCIATE',\n                              'D DATA SPACE, OBVIOUS PROBLEM SOMEWHERE')\n                              ( SKIP(4), A, A);\n                          PUT DATA ( DETAIL_VOLUME, DETAIL_CLUSTER,\n                              RTRKS ) SKIP;\n                          WRITE FILE ( PRTFILE ) FROM ( ERROR_LINE );\n                          RETURN_CODE = 116;\n                          LEAVE D24;\n                          END;\n                      FCC_S = LCC;\n                      FHH_S = LHH + 1;\n                      IF FHH_S >= TRACKS_CYL THEN DO;\n                          FCC_S = FCC_S + 1;\n                          FHH_S = FHH_S - TRACKS_CYL;\n                          END;\n                      END;\n                  IF LINE_CNT > 58 THEN CALL PRINT_HEADER;\n                  DT4_CLUSTER = DC_CLUSTER;\n                  DT4_NTRACKS = DC_NTRACKS;\n                  DT4_DATASET = DC_DATASET;\n                  CALL CONV_HEX( FCCB, DT4_FCC );\n                  CALL CONV_HEX( FHHB, DT4_FHH );\n                  CALL CONV_HEX( LCCB, DT4_LCC );\n                  CALL CONV_HEX( LHHB, DT4_LHH );\n                  WRITE FILE ( PRTFILE ) FROM ( DTL_LINE );\n                  LINE_CNT = LINE_CNT + 1;\n                  READ FILE ( DETLOUT ) INTO ( DETAIL_CLUSTER );\n                  END D24;\n              READ FILE ( VOLMOUT ) INTO ( DETAIL_VOLUME );\n              END;\n-CONV_HEX: PROCEDURE ( BIT16, CHAR4 ) REORDER;\n0         DECLARE\n             BIT16      BIT (16),\n             CHAR4      CHAR (4),\n             BIT4       BIT (4) INIT ('0'B),\n             ( I, J )   FIXED BINARY (15) INIT (0),\n             HEXCHAR    CHAR (16) INIT ('0123456789ABCDEF');\n0         DO I = 1 TO 4;\n              BIT4 = SUBSTR( BIT16, 1 + ( I - 1 ) * 4, 4 );\n              J = BIT4;\n              SUBSTR( CHAR4, I, 1 ) = SUBSTR( HEXCHAR, J + 1, 1 );\n              END;\n          END CONV_HEX;\n-PRINT_HEADER: PROCEDURE REORDER;\n          VH1_PAGE = VH1_PAGE + 1;\n          WRITE FILE ( PRTFILE ) FROM ( VOL_HD1 );\n          WRITE FILE ( PRTFILE ) FROM ( DTL_HD1 );\n          WRITE FILE ( PRTFILE ) FROM ( DTL_HD2 );\n          WRITE FILE ( PRTFILE ) FROM ( DTL_HD3 );\n          LINE_CNT = 5;\n          END PRINT_HEADER;\n-END_VSAM2: IF RETURN_CODE \u00ac= 0 THEN CALL PLIRETC(RETURN_CODE);\n               ELSE CALL PLIRETC(0);\n END_VSAM3: END O9291B15;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT218/FILE218.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT218", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}