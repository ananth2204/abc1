{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012232000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE508.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE508.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\x02'", "DS1TRBAL": "b'\\xd1\\x94'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03\\xd6\\x00\\x0b\\x03\\xd6\\x00\\x0e\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04W\\x005\\x01\\x13\\x17O\\x01\\x13\\x17O\\x11\\x06\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf7@@@'", "ispf": {"version": "04.87", "flags": 0, "createdate": "2013-06-23T00:00:00", "modifydate": "2013-06-23T11:06:35", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-487"}, "text": "REGULAR CBT TAPE - VERSION 487    FILE:  508\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT487.FILE508\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 7 MEMBERS COUNTED; CUMULATIVE SIZE IS 548 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   06/23/13    11:06:35    UTC-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTES": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x01\\x05\\x8f\\x01\\x01\\x05\\x8f\\x15H\\x001\\x001\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2001-02-27T00:00:00", "modifydate": "2001-02-27T15:48:00", "lines": 49, "newlines": 49, "modlines": 0, "user": "WSBG"}, "text": "Golob, Sam\nFrom:   alrichards@ra.rockwell.com\nSent:   Wednesday, February 21, 2001 10:35 AM\nTo:     Golob, Sam\nSubject:        RE: clist/command processor\n\n\nI found an example of the command processor calling a clist in an\nold Rockwell program written by R.A.SUNDELL. I have made a sample\nversion of it.  It will invoke whatever is passed in the parm\nfield. I.E.  EXCMD %clistxx,  or EXCMD clistxx. The documentation\ncan be found in the TSO/E programming services manual. The utility\nis the TSO/E Service Facility Routine 'IKJEFTSR'.\n\nAL Richards\nRockwell Automation\nalrichards@ra.rockwell.com\n414.382-2859\n\n\n  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n  Note from Sam Golob:  This command as written, appears to destroy\n   the ISPF environment, so it may be useful to invoke, in a situation\n   where you can't easily get out of ISPF, and you want to run a clist\n   or TSO command that needs to run without ISPF.\n\n  Example:   TSO EXCMD cmdname    (where cmdname does not \"like\" ISPF)\n\n  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n\n\nOriginal Question:\n\nSam\n\nI am looking for a sample of how to invoke an REXX or Clist from\na TSO command processor written in Assembler. I have searched\nthrough the cbt index and downloaded a few of the files.  I have\nnot found what I am looking for.\n\nThanks\n\nAL Richards\n\nalrichards@ra.rockwell.com\n\n\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$NOTE1": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x009\\x01\\x01\\x06o\\x01\\x13\\x17O\\x10Y\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2001-03-07T00:00:00", "modifydate": "2013-06-23T10:59:39", "lines": 12, "newlines": 12, "modlines": 0, "user": "SBGOLOB"}, "text": "Hello Sam\n\nI found out how to preserve the ISPF environment.  In the TSO/E\nProgramming Services Manual ch. 23, it explains how the isolated\nand unisolated flags work.  By setting the flag to x'01' an\nUN-Isolated environment is built and then the current services\nare available.  If set to x'00' an Isolated environment is created\nand no current services are available.  Attached is a sample\nprogram EXCMD01.  Give it a try.\n\nAL\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE508": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04W\\x00#\\x01\\x13\\x17O\\x01\\x13\\x17O\\x11\\x06\\x00\\x17\\x00\\x17\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf7@@@'", "ispf": {"version": "04.87", "flags": 0, "createdate": "2013-06-23T00:00:00", "modifydate": "2013-06-23T11:06:23", "lines": 23, "newlines": 23, "modlines": 0, "user": "CBT-487"}, "text": "//***FILE 508 is from A.L. Richards and contains 2 commands         *   FILE 508\n//*           written in Assembler, to call a CLIST or REXX exec    *   FILE 508\n//*           under TSO.  The reason these commands were written,   *   FILE 508\n//*           was to execute CLISTs or REXX execs related to LOGON  *   FILE 508\n//*           processing, when a program is the only thing that     *   FILE 508\n//*           can be used for the purpose.                          *   FILE 508\n//*                                                                 *   FILE 508\n//*           email:   alrichards@ra.rockwell.com                   *   FILE 508\n//*                                                                 *   FILE 508\n//*           EXCMD     -  Program which invokes a TSO command      *   FILE 508\n//*                        and destroys the ISPF environment,       *   FILE 508\n//*                        so if you are under ISPF and can't       *   FILE 508\n//*                        get out of it, and you need to execute   *   FILE 508\n//*                        a program which can't run under ISPF,    *   FILE 508\n//*                        this is the tool to use.                 *   FILE 508\n//*                                                                 *   FILE 508\n//*           EXCMDI    -  Program which invokes a TSO command      *   FILE 508\n//*                        and preserves the ISPF environment.      *   FILE 508\n//*                        See member $$NOTE1 in this pds, for      *   FILE 508\n//*                        some more details, or you can compare    *   FILE 508\n//*                        the two source programs to see the       *   FILE 508\n//*                        differences.                             *   FILE 508\n//*                                                                 *   FILE 508\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "EXCMD": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x05/\\x01\\x01\\x05/\\x12C\\x00\\xcc\\x00\\xcc\\x00\\x00\\xd9\\xc9\\xc3\\xc8\\xd9\\xc4\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-02-21T00:00:00", "modifydate": "2001-02-21T12:43:00", "lines": 204, "newlines": 204, "modlines": 0, "user": "RICHRDS"}, "text": "  TITLE  'COMMAND PROCESSOR TO INVOKE CLISTS                      '\n*\n**********************************************************************\n*  EXCMD:                                                            *\n*     THIS COMMAND PROCESSOR WILL INVOKE THE CLIST PASSED IN THE     *\n*     PARM STRING                                                    *\n*     THE PROGRAM PERFORMS THE FOLLOWING TASKS:                      *\n*     1. THE CPPL IS SAVED                                           *\n*     2. THE TSOSERVICE ROUTINE PARAMETER LIST IS SET UP TO INDICATE *\n*        A COMMAND IS TO BE EXECUTED.                                *\n*     3. THE DATA IN THE CPPLBUF WLL BE MOVED TO                     *\n*       THE COMMAND BUFFER AND PASSED TO THE TSOSERVICE ROUTINE.     *\n*     4. THE TSOSERVICE ROUTINE IS CALLED.                           *\n*     5. CONTROL IS PASSED BACK TO THE USER.                         *\n*                                                                    *\n*  MAINTENANCE:                                                      *\n*     WRITTEN: 02/20/01 A.L.RICHARDS                                 *\n*     MODELED AFTER THE 'PROFILE' PROGRAM FROM ROCKWELL INT.         *\n*     MODIFICATION LIST:                                             *\n*     @P001 -  XX/XX/XX X.X.XXXXXXX                                  *\n*                                                                    *\n**********************************************************************\n         EJECT\n**********************************************************************\n*                                                                    *\n*   R E G I S T E R   D E F I N I T I O N S                          *\n*                                                                    *\n**********************************************************************\n*\n**********************************************************************\n*                REGISTER USAGE                                      *\n*   R0         UNUSED                                                *\n*   R1         CPPL (AT ENTRY)                                       *\n*   R2         UNUSED                                                *\n*   R3         CPPL ADDRESS                                          *\n*   R4         CPPLCBUF                                              *\n*   R5         WORK REGISTER                                         *\n*   R6         WORK REGISTER                                         *\n*   R7         WORK REGISTER                                         *\n*   R8         UNUSED                                                *\n*   R9         UNUSED                                                *\n*   R10        UNUSED                                                *\n*   R11        UNUSED                                                *\n*   R12        PRIMARY BASE REGISTER                                 *\n*   R13        SAVE AREA                                             *\n*   R14        SYSTEM ROUTINE RETURN ADDRESS                         *\n*   R15        BRANCH ADDRESS                                        *\n**********************************************************************\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         EJECT\n**********************************************************************\n*                                                                    *\n*        H O U S E   K E E P I N G   A R E A                         *\n*                                                                    *\n**********************************************************************\n*\nEXCMD    CSECT\n         USING EXCMD,R12              ADDRESSIBILITY OF CSECT\n         SAVE  (14,12),T,EXCMD-&SYSDATE-&SYSTIME    SAVE CALLERS REGS\n         LR    R12,R15                GET ENTRY POINT ADDRESS\n         LA    R1,REGSAVE             ADDRESS OF SAVE AREA\n         ST    R1,8(,R13)             CHAIN\n         ST    R13,4(R1)                    WORK\n         LR    R13,R1                           AREAS\n         L     R1,4(0,R13)            RESTORE REG 0 AND 1\n         LM    R0,R1,20(R1)                 FROM CALLERS SAVE AREA\n         B     ROCKPROF               BRANCH TO START\n**********************************************************************\n*                                                                    *\n*    P R O G R A M   R E T U R N   A R E A                           *\n*                                                                    *\n**********************************************************************\nRETURN   DS    0H\n         L     R15,RETCODE             GET COMMAND RETURN CODE\n         L     R13,4(,R13)             GET OLD SAVE AREA ADDRESS\n         L     R1,8(,R13)              GET WORK AREA ADDRESS\n         RETURN (14,12),RC=(15)        RETURN TO CALLER\n         EJECT\n********************************************************************\n*                                                                  *\n*     MAIN PROCESSING AREA                                         *\n*                                                                  *\n********************************************************************\n*\nROCKPROF EQU   *\n         LR    R3,R1                   SAVE CPPL ADDRESS\n         USING CPPL,R3                 CPPL ADDRESSABILITY\n*** SETUP COMMAND BUFFER ***\n         MVC   CMDBUF,SPACES           CLEAR BUFFER\n         XC    FLAGS,FLAGS             CLEAR FLAGS\n         MVI   ENVIRFLG,ISOLATED       X'00' ISOLATED ENVIRONMENT\n         MVI   FUNCFLGS,CL_RX_05       X'05' COMMAND EXECUTION\n*** GET PARAMETERS FROMM CPPL COMMAND BUFFER ***\n         L     R4,CPPLCBUF             ADDRESS OF COMMAND BUFFER\n         LH    R5,0(R4)                LENGTH OF BUFFER\n         LH    R6,2(R4)                LENGTH OF COMMAND\n         SH    R5,=H'4'                SUBTRACT HEADER\n         SR    R5,R6                   SUBTRACT LENGTH OF COMMAND\n         BZ    TSR                     IF ZERO, NO PARMETER PASSED\n         LA    R6,4(R6)                LENGTH OF HEADER + CMD\n         AR    R6,R4                   POINT TO PARAMETER\n         LR    R7,R5                   POINT LENGTH IN R7\n         AR    R7,R6                   ADD TO COMMAND ADDRESS\nBLNKLOOP EQU   *\n         BCTR  R5,0                    SUBTRACT 1 FROM CMD (FOR EXEC)\n         BCTR  R7,0                    POINT TO END OF BUFFER\n         CR    R7,R6                   COMPARE TO START\n         BNH   TSR                     NO PARMS\n         CLI   0(R7),X'40'             IS IT A BLANK\n         BE    BLNKLOOP                CHECK PREVIOUS BYTE\n*** MOVE PARAMETERS AND SET TO UPPERCASE ***\n         EX    R5,MOVEPARM             MOVE IN PARAMETERS\n         EX    R5,CASE                 COVERT TO UPPER CASE\n*** TSO SERVICE ROUTINE CALL ***\n         LA    R5,1(R5)                GET BACK ORIGINAL LL\n         ST    R5,CMDLEN               SAVE LL\n*        L     R5,CMDLEN\n*        TPUT  CMDBUF,(R5)\nTSR      EQU   *\n         LA    R15,16                  CVT POINTER\n         L     R15,0(,R15)             CVT ADDRESS\n         USING CVT,R15\n         L     R15,CVTTVT              TSR\n         DROP  R15\n         USING TSVT,R15\n         L     R15,TSVTASF-TSVT(,R15)  ADDRESSABILITY\n         DROP  R15\n         CALL  (15),(FLAGS,CMDBUF,CMDLEN,RETCODE,RSNCODE,ABNDCODE),VL\n         B     RETURN                  EXIT\n         EJECT\n********************************************************************\n*                                                                  *\n*     PROGRAM CONSTANTS                                            *\n*                                                                  *\n********************************************************************\n*\nMOVEPARM MVC   CMDBUF(0),0(R6)         GET PARMLIST\nCASE     OC    CMDBUF(0),SPACES\nSPACES   DC    256X'40'                LOTS OF SPACES\n         EJECT\n********************************************************************\n*                                                                  *\n*          WORKING STORAGE  USED  IN  THIS  PROGRAM                *\n*                                                                  *\n********************************************************************\n*\nREGSAVE  DS    9D              REGISTER SAVE\nCMDLEN   DS    F                       LENGTH OF BUFFER\nCMDBUF   DS    CL255\n         DC    CL20'END OF COMMAND BUFFER'\nRETCODE  DS    F               RETURN CODE FROM COMMAND\nRSNCODE  DS    F               REASON CODE FROM COMMAND\nABNDCODE DS    F               ABEND CODE FROM COMMAND\n* FLAG VALUES, SEE TSO/E PROGRAMMING SERVICES\n*                  TOS/E SERVICE FACILITY 'IKJEFTSR'\nFLAGS    DS    0F              TSR FLAGS\nFLAG1    DS    X               X'00'\nENVIRFLG DS    X\nISOLATED EQU   X'00'           FOR AUTHORIZED PGMS\nUNISOLAT EQU   X'01'           FOR UNAUTHORIZED PGMS\nABENDFLG DS    X               X'01' CAUSES DUMP IF ABEND\nFUNCFLGS DS    X               X'01' CAUSES COMMAND TO BE EXECUSTED\nCL_RX_01 EQU   X'01'           INVOKE A CLIST OR REXX AND\n*                              IF ENVIRFLG = '00' (ISOLATED)\n*                              NOT RUN IMMEDIATELY BEFORE RETURN\n*                              OR\n*                              IF ENVIRFLG = '01' (UNISOLATED)\n*                              RUN IMMEDIATELY BEFORE RETURN\nCL_RX_05 EQU   X'05'           INVOKE A CLIST OR REXX AND\n*                              IF ENVIRFLG = '00' (UNISOLATED)\n*                              RUN IMMEDIATELY BEFORE RETURN\nPGM      EQU   X'02'           INVOKE PROGRAM\n         SPACE 5\n         LTORG\n         SPACE 5\n********************************************************************\n*                                                                  *\n*          MAPPING MACROS USED  IN  THIS  PROGRAM                  *\n*                                                                  *\n********************************************************************\n*\n         PRINT GEN\n         CVT   DSECT=YES\n         SPACE 2\n         IKJCPPL\n         SPACE 2\n         IKJTSVT\n         SPACE 5\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EXCMDI": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x01\\x06o\\x01\\x01\\x06o\\x10\\x12\\x00\\xca\\x00\\xca\\x00\\x00\\xd9\\xc9\\xc3\\xc8\\xd9\\xc4\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-03-07T00:00:00", "modifydate": "2001-03-07T10:12:00", "lines": 202, "newlines": 202, "modlines": 0, "user": "RICHRDS"}, "text": "  TITLE  'COMMAND PROCESSOR TO INVOKE CLISTS                      '\n*\n**********************************************************************\n*  EXCMD:                                                            *\n*     THIS COMMAND PROCESSOR WILL INVOKE THE CLIST PASSED IN THE     *\n*     PARM STRING                                                    *\n*     THE PROGRAM PERFORMS THE FOLLOWING TASKS:                      *\n*     1. THE CPPL IS SAVED                                           *\n*     2. THE TSOSERVICE ROUTINE PARAMETER LIST IS SET UP TO INDICATE *\n*        A COMMAND IS TO BE EXECUTED.                                *\n*     3. THE DATA IN THE CPPLBUF WLL BE MOVED TO                     *\n*       THE COMMAND BUFFER AND PASSED TO THE TSOSERVICE ROUTINE.     *\n*     4. THE TSOSERVICE ROUTINE IS CALLED.                           *\n*     5. CONTROL IS PASSED BACK TO THE USER.                         *\n*                                                                    *\n*  MAINTENANCE:                                                      *\n*     WRITTEN: 02/20/01 A.L.RICHARDS                                 *\n*     MODELED AFTER THE 'PROFILE' PROGRAM FROM ROCKWELL INT.         *\n*     MODIFICATION LIST:                                             *\n*     @P001 -  XX/XX/XX X.X.XXXXXXX                                  *\n*                                                                    *\n**********************************************************************\n         EJECT\n**********************************************************************\n*                                                                    *\n*   R E G I S T E R   D E F I N I T I O N S                          *\n*                                                                    *\n**********************************************************************\n*\n**********************************************************************\n*                REGISTER USAGE                                      *\n*   R0         UNUSED                                                *\n*   R1         CPPL (AT ENTRY)                                       *\n*   R2         UNUSED                                                *\n*   R3         CPPL ADDRESS                                          *\n*   R4         CPPLCBUF                                              *\n*   R5         WORK REGISTER                                         *\n*   R6         WORK REGISTER                                         *\n*   R7         WORK REGISTER                                         *\n*   R8         UNUSED                                                *\n*   R9         UNUSED                                                *\n*   R10        UNUSED                                                *\n*   R11        UNUSED                                                *\n*   R12        PRIMARY BASE REGISTER                                 *\n*   R13        SAVE AREA                                             *\n*   R14        SYSTEM ROUTINE RETURN ADDRESS                         *\n*   R15        BRANCH ADDRESS                                        *\n**********************************************************************\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         EJECT\n**********************************************************************\n*                                                                    *\n*        H O U S E   K E E P I N G   A R E A                         *\n*                                                                    *\n**********************************************************************\n*\nEXMCD01  CSECT\n         USING EXMCD01,R12            ADDRESSIBILITY OF CSECT\n         SAVE  (14,12),T,EXMCD01-&SYSDATE-&SYSTIME  SAVE CALLERS REGS\n         LR    R12,R15                GET ENTRY POINT ADDRESS\n         LA    R1,REGSAVE             ADDRESS OF SAVE AREA\n         ST    R1,8(,R13)             CHAIN\n         ST    R13,4(R1)                    WORK\n         LR    R13,R1                           AREAS\n         L     R1,4(0,R13)            RESTORE REG 0 AND 1\n         LM    R0,R1,20(R1)                 FROM CALLERS SAVE AREA\n         B     ROCKPROF               BRANCH TO START\n**********************************************************************\n*                                                                    *\n*    P R O G R A M   R E T U R N   A R E A                           *\n*                                                                    *\n**********************************************************************\nRETURN   DS    0H\n         L     R15,RETCODE             GET COMMAND RETURN CODE\n         L     R13,4(,R13)             GET OLD SAVE AREA ADDRESS\n         L     R1,8(,R13)              GET WORK AREA ADDRESS\n         RETURN (14,12),RC=(15)        RETURN TO CALLER\n         EJECT\n********************************************************************\n*                                                                  *\n*     MAIN PROCESSING AREA                                         *\n*                                                                  *\n********************************************************************\n*\nROCKPROF EQU   *\n         LR    R3,R1                   SAVE CPPL ADDRESS\n         USING CPPL,R3                 CPPL ADDRESSABILITY\n*** SETUP COMMAND BUFFER ***\n         MVC   CMDBUF,SPACES           CLEAR BUFFER\n         XC    FLAGS,FLAGS             CLEAR FLAGS\n         MVI   ENVIRFLG,UNISOLAT       X'01' UN-ISOLATED ENVIRONMENT\n         MVI   FUNCFLGS,CL_RX_01       X'01' COMMAND EXECUTION\n*** GET PARAMETERS FROMM CPPL COMMAND BUFFER ***\n         L     R4,CPPLCBUF             ADDRESS OF COMMAND BUFFER\n         LH    R5,0(R4)                LENGTH OF BUFFER\n         LH    R6,2(R4)                LENGTH OF COMMAND\n         SH    R5,=H'4'                SUBTRACT HEADER\n         SR    R5,R6                   SUBTRACT LENGTH OF COMMAND\n         BZ    TSR                     IF ZERO, NO PARMETER PASSED\n         LA    R6,4(R6)                LENGTH OF HEADER + CMD\n         AR    R6,R4                   POINT TO PARAMETER\n         LR    R7,R5                   POINT LENGTH IN R7\n         AR    R7,R6                   ADD TO COMMAND ADDRESS\nBLNKLOOP EQU   *\n         BCTR  R5,0                    SUBTRACT 1 FROM CMD (FOR EXEC)\n         BCTR  R7,0                    POINT TO END OF BUFFER\n         CR    R7,R6                   COMPARE TO START\n         BNH   TSR                     NO PARMS\n         CLI   0(R7),X'40'             IS IT A BLANK\n         BE    BLNKLOOP                CHECK PREVIOUS BYTE\n*** MOVE PARAMETERS AND SET TO UPPERCASE ***\n         EX    R5,MOVEPARM             MOVE IN PARAMETERS\n         EX    R5,CASE                 COVERT TO UPPER CASE\n*** TSO SERVICE ROUTINE CALL ***\n         LA    R5,1(R5)                GET BACK ORIGINAL LL\n*        TPUT  CMDBUF,(R5)\nTSR      EQU   *\n         LA    R15,16                  CVT POINTER\n         L     R15,0(,R15)             CVT ADDRESS\n         USING CVT,R15\n         L     R15,CVTTVT              TSR\n         DROP  R15\n         USING TSVT,R15\n         L     R15,TSVTASF-TSVT(,R15)  ADDRESSABILITY\n         DROP  R15\n         CALL  (15),(FLAGS,CMDBUF,CMDLEN,RETCODE,RSNCODE,ABNDCODE),VL\n         B     RETURN                  EXIT\n         EJECT\n********************************************************************\n*                                                                  *\n*     PROGRAM CONSTANTS                                            *\n*                                                                  *\n********************************************************************\n*\nMOVEPARM MVC   CMDBUF(0),0(R6)         GET PARMLIST\nCASE     OC    CMDBUF(0),SPACES\nCMDLEN   DC    F'256'                  LENGTH OF BUFFER\nSPACES   DC    256X'40'                LOTS OF SPACES\n         EJECT\n********************************************************************\n*                                                                  *\n*          WORKING STORAGE  USED  IN  THIS  PROGRAM                *\n*                                                                  *\n********************************************************************\n*\nREGSAVE  DS    9D              REGISTER SAVE\nCMDBUF   DS    CL256\nRETCODE  DS    F               RETURN CODE FROM COMMAND\nRSNCODE  DS    F               REASON CODE FROM COMMAND\nABNDCODE DS    F               ABEND CODE FROM COMMAND\n* FLAG VALUES, SEE TSO/E PROGRAMMING SERVICES\n*                  TOS/E SERVICE FACILITY 'IKJEFTSR'\nFLAGS    DS    0F              TSR FLAGS\nFLAG1    DS    X               X'00'\nENVIRFLG DS    X\nISOLATED EQU   X'00'           FOR AUTHORIZED PGMS\nUNISOLAT EQU   X'01'           FOR UNAUTHORIZED PGMS\nABENDFLG DS    X               X'01' CAUSES DUMP IF ABEND\nFUNCFLGS DS    X               X'01' CAUSES COMMAND TO BE EXECUSTED\nCL_RX_01 EQU   X'01'           INVOKE A CLIST OR REXX AND\n*                              IF ENVIRFLG = '00' (ISOLATED)\n*                              NOT RUN IMMEDIATELY BEFORE RETURN\n*                              OR\n*                              IF ENVIRFLG = '01' (UNISOLATED)\n*                              RUN IMMEDIATELY BEFORE RETURN\nCL_RX_05 EQU   X'05'           INVOKE A CLIST OR REXX AND\n*                              IF ENVIRFLG = '00' (UNISOLATED)\n*                              RUN IMMEDIATELY BEFORE RETURN\nPGM      EQU   X'02'           INVOKE PROGRAM\n         SPACE 5\n         LTORG\n         SPACE 5\n********************************************************************\n*                                                                  *\n*          MAPPING MACROS USED  IN  THIS  PROGRAM                  *\n*                                                                  *\n********************************************************************\n*\n         PRINT GEN\n         CVT   DSECT=YES\n         SPACE 2\n         IKJCPPL\n         SPACE 2\n         IKJTSVT\n         SPACE 5\n         END   EXMCD01\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LOADLIB": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x13\\x17O\\x01\\x13\\x17O\\x11\\x06\\x00.\\x00.\\x00\\x00\\xd3\\xd6\\xc1\\xc4\\xd3\\xc9\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2013-06-23T00:00:00", "modifydate": "2013-06-23T11:06:00", "lines": 46, "newlines": 46, "modlines": 0, "user": "LOADLIB"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT508/FILE508.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT508", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}