         TITLE 'OFMTHEX - CONVERT HEX DATA TO PRINTABLE CHARACTERS'
* ******************************************************************* *
*                                                                     *
*    OOOOO  FFFFFFF M     M TTTTTTTT HH   HH EEEEEE  XX   XX          *
*   OO   OO FF      MM   MM    TT    HH   HH EE      XX   XX          *
*   OO   OO FF      MMM MMM    TT    HH   HH EE       XX XX           *
*   OO   OO FFFFF   MMMMMMM    TT    HHHHHHH EEEE      XXX            *
*   OO   OO FF      MM M MM    TT    HH   HH EE        XXX            *
*   OO   OO FF      MM   MM    TT    HH   HH EE       XX XX           *
*   OO   OO FF      MM   MM    TT    HH   HH EE      XX   XX          *
*    OOOOO  FF      MM   MM    TT    HH   HH EEEEEEE XX   XX          *
*                                                                     *
* ******************************************************************* *
* THIS SUBROUTINE READS AN INPUT FIELD AND CONVERTS EACH BYTE TO      *
* THE CORRESPONDING CHARACTER REPRESENTATION OF THE 2 HEX DIGITS      *
* THAT CORRESPOND TO THE ORIGINAL BYTE.                               *
*                                                                     *
* NONE OF THE INITIALIZED VARIABLES ARE CHANGED DURING THE ROUTINE'S  *
* EXECUTION AND THERE ARE NO INTERNAL DATA FIELDS. ALL MANIPULATION   *
* IS DONE THROUGH REGISTERS. THE ROUTINE IS COMPLETELY REENTRANT.     *
*                                                                     *
* THREE FIELDS ARE PASSED AS PARAMETERS TO THE ROUTINE:               *
*                                                                     *
*   1. A FIELD OF VARYING LENGTH CONTAINING THE INPUT CHARACTERS,     *
*   2. A 2 BYTE FIELD (IN BINARY FORMAT) CONTAINING THE LENGTH OF     *
*      THE INPUT FIELD, AND                                           *
*   3. A FIELD TO CONTAIN THE GENERATED OUTPUT.                       *
*                                                                     *
* SUGGESTED CALLING SYNTAX FOR ALC CALLERS:                           *
*                                                                     *
*              CALL OFMTHEX,(INFIELD,INLENGTH,OUTFIELD)               *
*                 . . .                                               *
*     INFIELD  DS   XL5'C180F0F140'                                   *
*     INLENGTH DS   H'5'                                              *
*     OUTFIELD DS   CL10'C180F0F140'                                  *
*                                                                     *
* SUGGESTED CALLING SYNTAX FOR COBOL CALLERS:                         *
*                                                                     *
*     01  INPUT-FIELD           PIC X(5) VALUE X'C180F0F140'.         *
*     01  INPUT-FIELD-LENGTH    PIC S9(4) COMP VALUE 5.               *
*     01  OUTPUT-FIELD          PIC X(10).                            *
*                                                                     *
*     CALL 'OFMTHEX' USING INPUT-FIELD, INPUT-FIELD-LENGTH,           *
*                          OUTPUT-FIELD.                              *
*                                                                     *
* NOTE: THE SIZE OF THE OUTPUT FIELD MUST BE TWICE THAT OF THE INPUT  *
*       FIELD.                                                        *
*                                                                     *
* POSSIBLE RETURN CODE VALUES:                                        *
*     0 - FIELD SUCCESSFULLY CONVERTED                                *
* ******************************************************************* *
* ******************************************************************* *
         EJECT
         PRINT NOGEN
OFMTHEX  CSECT
         EYEC  'CONVERT HEX DIGITS TO PRINTABLE CHARACTERS'
BEGIN    SAVE  (14,12)                 SAVE CALLER'S REGISTERS
*
         BALR  BASE,0                  ESTABLISH BASE REGISTER
         USING *,BASE                  ASSUME BASE REGISTER
*
         LM    INREG,OUTREG,0(R1)      LOAD ADDRESSES OF PARAMETERS
*
         SR    R15,R15                 ASSUME RETURN CODE OF ZERO
*
         LH    LGTHREG,0(,LGTHREG)     LOAD FIELD LENGTH
         LTR   LGTHREG,LGTHREG         IS INPUT FIELD LENGTH ZERO?
         BZ    RETURN                     IF YES, RETURN TO CALLER
*
*    OUTER LOOP EXECUTES 1 PASS FOR EACH INPUT CHARACTER
*
BYTELOOP LA    R4,2                    CONVERT 2 NIBBLES (1 BYTE)
         ICM   R3,B'1000',0(INREG)     GET 1 BYTE TO CONVERT
*
*    INNER LOOP EXECUTES 2 PASSES FOR EACH INPUT CHARACTER
*
NIBLLOOP SR    R2,R2                   CLEAR EVEN WORK REGISTER
         SLDL  R2,4                    SHIFT LEFT 1 NIBBLE
         C     R2,=F'10'               COMPARE VALUE WITH DECIMAL 10
         BM    DIGITS                  BRANCH IF DIGIT 0-9
         LA    R2,X'C0'-9(,R2)         ADD X'C0'-9 TO REGISTER 2
         B     SAVENIBL                STORE THE CHARACTER
DIGITS   LA    R2,X'F0'(,R2)           ADD X'F0' TO REGISTER 2
SAVENIBL STC   R2,0(,OUTREG)           STORE CONVERTED BYTE
         LA    OUTREG,1(,OUTREG)       BUMP OUTPUT ADDRESS
         BCT   R4,NIBLLOOP             CONVERT 2ND NIBBLE
*
         LA    INREG,1(,INREG)         BUMP INPUT ADDRESS
         BCT   LGTHREG,BYTELOOP        CONVERT NEXT BYTE
*
*    RETURN TO CALLER WITH RETURN CODE IN REGISTER 15
*
RETURN   RETURN (14,12),RC=(15)
*
* ******************************************************************* *
* *************************** CONSTANTS ***************************** *
* ******************************************************************* *
         LTORG
         EJECT
* ******************************************************************* *
* ***************************** EQUATES ***************************** *
* ******************************************************************* *
R0       EQU   0                       REGISTER 0
R1       EQU   1                       REGISTER 1
R2       EQU   2                       REGISTER 2
R3       EQU   3                       REGISTER 3
R4       EQU   4                       REGISTER 4
INREG    EQU   5                       INPUT FIELD
LGTHREG  EQU   6                       INPUT FIELD LENGTH
OUTREG   EQU   7                       OUTPUT FIELD
R8       EQU   8                       REGISTER 8
R9       EQU   9                       REGISTER 9
R10      EQU   10                      REGISTER 10
R11      EQU   11                      REGISTER 11
BASE     EQU   12                      BASE REGISTER
R13      EQU   13                      REGISTER 13
R14      EQU   14                      REGISTER 14
R15      EQU   15                      REGISTER 15
         END
