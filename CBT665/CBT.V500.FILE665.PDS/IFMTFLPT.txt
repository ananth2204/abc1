         TITLE 'IFMTFLPT - PARSE SIGNED FLOATING POINT INPUT FIELD'
* ******************************************************************* *
*                                                                     *
*    IIII   FFFFFFF M     M TTTTTTTT FFFFFFF LL      PPPPPP TTTTTTTT  *
*     II    FF      MM   MM    TT    FF      LL      PP   PP   TT     *
*     II    FF      MMM MMM    TT    FF      LL      PP   PP   TT     *
*     II    FFFFF   MMMMMMM    TT    FFFFF   LL      PP   PP   TT     *
*     II    FF      MM M MM    TT    FF      LL      PPPPPP    TT     *
*     II    FF      MM   MM    TT    FF      LL      PP        TT     *
*     II    FF      MM   MM    TT    FF      LL      PP        TT     *
*    IIII   FF      MM   MM    TT    FF      LLLLLLL PP        TT     *
*                                                                     *
* ******************************************************************* *
* THIS SUBROUTINE SCANS AN INPUT FIELD (DISPLAY FORMAT) ASSUMED TO    *
* CONTAIN A FLOATING POINT NUMERIC VALUE. THE EXPECTED FORMAT IS:     *
*                                                                     *
*    1. ANY NUMBER OF LEADING OR TRAILING SPACES (WILL BE IGNORED)    *
*    2. A LEADING OR TRAILING SIGN (+ OR - CHARACTER; OPTIONAL)       *
*    3. ONE TO ELEVEN DIGITS REPRESENTING THE INTEGRAL (WHOLE) VALUE  *
*    4. A DECIMAL POINT (OPTIONAL)                                    *
*    5. ONE TO SEVEN DIGITS REPRESENTING THE DECIMAL VALUE (OPTIONAL) *
*                                                                     *
*  NONE OF THE INITIALIZED VARIABLES ARE CHANGED DURING THE ROUTINE'S *
*  EXECUTION AND THERE ARE NO INTERNAL DATA FIELDS. ALL MANIPULATION  *
*  IS DONE THROUGH REGISTERS. THE ROUTINE IS COMPLETELY REENTRANT.    *
*                                                                     *
* THREE FIELDS ARE PASSED AS PARAMETERS TO THE ROUTINE:               *
*                                                                     *
*    1. A FIELD OF VARYING LENGTH CONTAINING THE INPUT CHARACTERS,    *
*    2. A 2 BYTE FIELD (IN BINARY FORMAT) CONTAINING THE LENGTH OF    *
*       THE FIELD IN THE FIRST PARAMETER, AND                         *
*    4. AN 18 BYTE FIELD (ZONED-DECIMAL FORMAT) TO RECEIVE THE        *
*       EXTRACTED NUMERIC DATA.                                       *
*                                                                     *
* SUGGESTED CALLING SYNTAX FOR ALC CALLERS:                           *
*                                                                     *
*              CALL IFMTFLPT,(INFIELD,INLEN,OUTFIELD)                 *
*                 . . .                                               *
*     INFIELD  DS   CL10'  -107.10 '                                  *
*     INLEN    DS   H'10'                                             *
*     OUTFIELD DS   ZL18                                              *
*                                                                     *
* SUGGESTED CALLING SYNTAX FOR COBOL CALLERS:                         *
*                                                                     *
*     01  IFMTFLPT-PARMS.                                             *
*         02  INPUT-FIELD         PIC X(10) VALUE '  -107.10 '.       *
*         02  INPUT-FIELD-LENGTH  PIC S9(4) COMP VALUE 10.            *
*         02  OUTPUT-FIELD        PIC X9(11)V9(7).                    *
*                                                                     *
*     CALL 'IFMTFLPT' USING INPUT-FIELD, INPUT-FIELD-LENGTH,          *
*                           OUTPUT-FIELD.                             *
*                                                                     *
* THE POSSIBLE VALUE FOR THE RETURN CODE ARE:                         *
*                                                                     *
*     0 - FIELD SUCCESSFULLY CONVERTED                                *
*     8 - INPUT FIELD DOES NOT CONFORM TO ACCEPTABLE FORMAT RULES     *
* ******************************************************************* *
* ******************************************************************* *
         EJECT
         PRINT NOGEN
IFMTFLPT CSECT
         EYEC  'EXTRACT NUMERIC VALUE FROM FLOATING POINT INPUT FIELD'
         SAVE  (14,12)                 SAVE CALLER'S REGISTERS
*
         BALR  BASE,0                  ESTABLISH BASE REGISTER
         USING *,BASE                  ASSUME BASE REGISTER
*
         LM    INREG,OUTREG,0(R1)      LOAD ADDRESSES OF PARAMETERS
*
         LH    FLDLEN,0(,FLDLEN)       LOAD LENGTH OF INPUT FIELD
*
         SR    R15,R15                 ASSUME GOOD RETURN
*
         ICM   STATUS,B'0001',=C'0'    INITIAL STATUS IS "FIELD BEGIN"
         ICM   STATUS,B'0010',=C'+'    DEFAULT SIGN IS POSITIVE
         SR    INTBEG,INTBEG           ZERO TO INTEGER BEGIN,
         SR    INTLEN,INTLEN                    INTEGER LENGTH
         SR    DECBEG,DECBEG                    DECIMAL BEGIN,
         SR    DECLEN,DECLEN                    DECIMAL LENGTH
*
         MVI   0(OUTREG),C'0'          SET OUTPUT FIELD TO
         MVC   1(17,OUTREG),0(OUTREG)     ALL ZEROS
*
         LTR   FLDLEN,FLDLEN           IS INPUT LENGTH ZERO?
         BZ    RETURN                     YES, RETURN TO CALLER
*
LOOP     CLI   0(INREG),C' '           IS CHARACTER BLANK?
         BE    INBLANK                    YES, PROCESS
         CLI   0(INREG),C'-'           IS CHARACTER MINUS SIGN?
         BE    INSIGN                     YES, PROCESS
         CLI   0(INREG),C'+'           IS CHARACTER PLUS SIGN?
         BE    INSIGN                     YES, PROCESS
         CLI   0(INREG),C'.'           IS CHARACTER DECIMAL POINT?
         BE    INPOINT                    YES, PROCESS
*
DIGIT    CLI   0(INREG),X'F0'          IS CHARACTER LESS THAN 0?
         BL    ERROR                      YES, RETURN ERROR CODE
         CLI   0(INREG),X'F9'          IS CHARACTER GREATER THAN 9?
         BH    ERROR                      YES, RETURN ERROR CODE
DIGIT0   CLM   STATUS,B'0001',=C'0'    AT "FIELD BEGIN"?
         BNE   DIGIT2                     NO, TEST FURTHER
DIGIT1   ICM   STATUS,B'0001',=C'2'    SET STATUS "INTEGER STARTED"
         LR    INTBEG,INREG            STORE INTEGER BEGINNING ADDR
         LA    INTLEN,1                INITIALIZE INTEGER LENGTH
         B     NEXT                    CONTINUE SCANNING
DIGIT2   CLM   STATUS,B'0001',=C'1'    AT "FIELD STARTED"?
         BE    DIGIT1                     PROCESS SAME AS "FIELD BEGIN"
         CLM   STATUS,B'0001',=C'2'    IS "INTEGER STARTED"?
         BNE   DIGIT3                     NO, TEST FURTHER
         LA    INTLEN,1(,INTLEN)       INCREASE INTEGER COUNT
         B     NEXT                    CONTINUE SCANNING
DIGIT3   CLM   STATUS,B'0001',=C'3'    IS "DECIMAL STARTED"?
         BNE   ERROR                      NO, RETURN ERROR CODE
         LA    DECLEN,1(,DECLEN)       INCREASE DECIMAL COUNT
*
NEXT     LA    INREG,1(,INREG)         ADDRESS NEXT INPUT CHARACTER
         BCT   FLDLEN,LOOP              AND CONTINUE UNTIL INPUT END
*
         CH    INTLEN,=H'11'           IF INTEGER LENGTH IS GREATER
         BH    ERROR                      THAN 11 RETURN ERROR CODE
         CH    DECLEN,=H'7'            IF DECIMAL LENGTH IS GREATER
         BH    ERROR                      THAN 7 RETURN ERROR CODE
INTEGER  LTR   INTLEN,INTLEN           IS INTEGER LENGTH ZERO?
         BZ    DECIMAL                    YES, GO CHECK DECIMAL
         LA    R3,11(,OUTREG)          RIGHT ADJUST INTEGER IN
         SR    R3,INTLEN                  OUTPUT FIELD
         BCTR  INTLEN,0                DECREASE BY 1 FOR EXECUTE
         EX    INTLEN,MOVEINT          MOVE INTEGER TO OUTPUT FIELD
DECIMAL  LTR   DECLEN,DECLEN           IS DECIMAL LENGTH ZERO?
         BZ    SETSIGN                    YES, GO SET SIGN
         LA    R3,11(,OUTREG)          LEFT ADJUST DECIMAL IN OUTPUT
         BCTR  DECLEN,0                DECREASE BY 1 FOR EXECUTE
         EX    DECLEN,MOVEDEC          MOVE DECIMAL TO OUTPUT FIELD
*
SETSIGN  CLM   STATUS,B'0010',=C'-'    WAS INPUT SIGN NEGATIVE?
         BE    SEGSIGN0                   YES, GO SET NEGATIVE
         NI    17(OUTREG),X'CF'        SET POSITIVE
         B     RETURN                   AND RETURN TO CALLER
SEGSIGN0 NI    17(OUTREG),X'DF'        SET NEGATIVE
         B     RETURN                   AND RETURN TO CALLER
*
INBLANK  CLM   STATUS,B'0001',=C'0'    AT "FIELD BEGIN"?
         BE    NEXT                       YES, CONTINUE SCANNING
         CLM   STATUS,B'0001',=C'2'    IS "INTEGER STARTED"?
         BE    INBLANKX                   YES, MARK END OF FIELD
         CLM   STATUS,B'0001',=C'3'    IS "DECIMAL STARTED"?
         BE    INBLANKX                   YES, MARK END OF FIELD
         CLM   STATUS,B'0001',=C'4'    AT "FIELD END"?
         BE    NEXT                       YES, CONTINUE SCANNING
         B     ERROR                   EMBEDDED BLANK, RETURN ERROR
INBLANKX ICM   STATUS,B'0001',=C'4'    SET STATUS "FIELD END"
         B     NEXT                    CONTINUE SCANNING
*
INSIGN   CLM   STATUS,B'0001',=C'0'    AT "FIELD BEGIN"?
         BE    INSIGN1                    YES, STORE SIGN/UPDATE STATUS
         CLM   STATUS,B'0001',=C'2'    IS "INTEGER STARTED"?
         BE    INSIGN2                    YES, STORE SIGN/UPDATE STATUS
         CLM   STATUS,B'0001',=C'3'    IS "DECIMAL STARTED"?
         BE    INSIGN2                    YES, STORE SIGN/UPDATE STATUS
         B     ERROR                   BAD SIGN LOCATION
INSIGN1  ICM   STATUS,B'0010',0(INREG) STORE SIGN
         ICM   STATUS,B'0001',=C'1'    SET STATUS "FIELD STARTED"
         B     NEXT                    CONTINUE SCANNING
INSIGN2  ICM   STATUS,B'0010',0(INREG) STORE SIGN
         ICM   STATUS,B'0001',=C'4'    SET STATUS "FIELD END"
         B     NEXT                    CONTINUE SCANNING
*
INPOINT  CLM   STATUS,B'0001',=C'0'    AT "FIELD BEGIN"?
         BE    INPOINTX                   YES, STORE ADDR/UPDATE STATUS
         CLM   STATUS,B'0001',=C'1'    AT "FIELD STARTED"?
         BE    INPOINTX                   YES, STORE ADDR/UPDATE STATUS
         CLM   STATUS,B'0001',=C'2'    IS "INTEGER STARTED"?
         BNE   ERROR                      BAD PERIOD LOCATION
INPOINTX ICM   STATUS,B'0001',=C'3'    SET STATUS "DECIMAL STARTED"
         LA    DECBEG,1(,INREG)        STORE DECIMAL BEGIN ADDRESS
         B     NEXT                    CONTINUE SCANNING
*
ERROR    LA    R15,8                   RETURN CODE OF 8
RETURN   RETURN (14,12),RC=(15)        RETURN TO CALLER
*
MOVEINT  MVC   0(0,R3),0(INTBEG)       MOVE INTEGER TO OUTPUT FIELD
MOVEDEC  MVC   0(0,R3),0(DECBEG)       MOVE DECIMAL TO OUTPUT FIELD
*
* ******************************************************************* *
* *************************** CONSTANTS ***************************** *
* ******************************************************************* *
         LTORG
* ******************************************************************* *
* **************************** EQUATES ****************************** *
* ******************************************************************* *
R0       EQU   0                       REGISTER 0
R1       EQU   1                       REGISTER 1
R2       EQU   2                       REGISTER 2
R3       EQU   3                       REGISTER 3
STATUS   EQU   4                       STATUS OF EXTRACTION
INREG    EQU   5                       INPUT FIELD ADDRESS
FLDLEN   EQU   6                       INPUT FIELD LENGTH
OUTREG   EQU   7                       OUTPUT FIELD ADDRESS
INTBEG   EQU   8                       INTEGER BEGIN ADDRES
INTLEN   EQU   9                       INTEGER LENGTH
DECBEG   EQU   10                      DECIMAL BEGIN ADDRESS
DECLEN   EQU   11                      DECIMAL LENGTH
BASE     EQU   12                      BASE REGISTER
R13      EQU   13                      REGISTER 13
R14      EQU   14                      REGISTER 14
R15      EQU   15                      REGISTER 15
         EJECT
         END
