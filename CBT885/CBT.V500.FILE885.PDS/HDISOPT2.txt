**************************************************************
*   OPCODE E700-EDFF
**************************************************************
*   DC  X'E700',CL8'VLEB ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector
*   DC  X'E701',CL8'VLEH ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E702',CL8'VLEG ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E703',CL8'VLEF ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E704',CL8'VLLEZ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E705',CL8'VLREP',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   VLREP B/H/F/G
*   DC  X'E706',CL8'VL   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Load
*   DC  X'E707',CL8'VLBB ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Load Start Set
*   DC  X'E708',CL8'VSTEB',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Store Element of VR1 indexed by M3 to second operand
*   DC  X'E709',CL8'VSTEH',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E70A',CL8'VSTEG',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E70B',CL8'VSTEF',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E70E',CL8'VST  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Store
*   DC  X'E712',CL8'VGEG ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E713',CL8'VGEF ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E71A',CL8'VSCEG',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Store Element
*   DC  X'E71B',CL8'VSCEF',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Store Element
*   DC  X'E722',CL8'VLVG ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Load VR Element from GR  VLVG B/H/F/G
*   DC  X'E727',CL8'LCBB ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E730',CL8'VESL ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Element Shift Left
*   DC  X'E733',CL8'VERLL',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Element Rotate Left
    DC  X'E736',CL6'VLM  ',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Load Multiple
*   DC  X'E737',CL8'VLL  ',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Load String
*   DC  X'E738',CL8'VESRL',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E73A',CL8'VESRA',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'E73E',CL6'VSTM ',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Store Multiple
*   DC  X'E73F',CL8'VSTL  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Store with length
*   DC  X'E740',CL8'VLEIB ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E741',CL8'VLEIH ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E742',CL8'VLEIG ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E743',CL8'VLEIF ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E744',CL8'VZERO ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E745',CL8'VREPI ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   VREP   B/H/F/G
*   DC  X'E746',CL8'VGM   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E74A',CL8'VFTCI  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                  'WFTCIDB'
*   DC  X'E74D',CL8'VREP  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   VREP   B/H/F/G
*   DC  X'E750',CL8'VPOPCT',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Population Count
*   DC  X'E752',CL8'VCTZ  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Count Trailing Zeros
*   DC  X'E753',CL8'VCLZ  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Count Leading Zeros
*   DC  X'E756',CL8'VLR  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Load Register
*   DC  X'E75C',CL8'VISTR ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E75F',CL8'VSEG  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E760',CL8'VMRL  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Merge Low
*   DC  X'E761',CL8'VMRH  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Merge High
*   DC  X'E762',CL8'VLVGP ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Load VR from GR PAIR DISJOINT
*   DC  X'E764',CL8'VSUM ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Sum Across Word            VSUM  B/H
*   DC  X'E765',CL8'VSUMG',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Sum Across Doubleword      VSUMG F/H
*   DC  X'E766',CL8'VCKSM ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Checksum
*   DC  X'E767',CL8'VSUMQ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Sum Across Quadword         VSUMQ F/H
*   DC  X'E768',CL8'VN    ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vectore And
*   DC  X'E769',CL8'VNC   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector AND with compliment
*   DC  X'E76A',CL8'VO    ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vectore Or
*   DC  X'E76B',CL8'VNO   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E76D',CL8'VX    ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vectore Exclusive OR
*   DC  X'E770',CL8'VESLV ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E772',CL8'VERIM ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   VERIM  DW/W/HW/B
*       Vector Rotate and Insert Under Mask
*   DC  X'E773',CL8'VERLLV',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E774',CL8'VSL   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Shift Left by bit
*   DC  X'E775',CL8'VSLB  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Shift Left by byte
*   DC  X'E777',CL8'VSLDB ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E778',CL8'VESRLV',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Element Shift Right Logical
*   DC  X'E77A',CL8'VESRAV',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Element Shift Right Arithmetic
*   DC  X'E77C',CL8'VSRL  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Element Shift Right Logical
*   DC  X'E77D',CL8'VSRLB ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E77E',CL8'VSRA  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Element Shift Right Arithmetic
*   DC  X'E77F',CL8'VSRAB ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E780',CL8'VFEE  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Find Element  VFREE  B/BS/F/FS/H/HS
*                            VFRREZ B/BS/F/FS/H/HS
*   DC  X'E781',CL8'VFENEHS',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Compare String
*   DC  X'E782',CL8'VFAE   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E784',CL8'VPDI   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E78A',CL8'VSTRC  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   VSTRC B/BS/F/FS/H/HS/ZB/ZBS/ZF/ZFS/ZH/ZHS
*   DC  X'E78C',CL8'VPERM  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E78D',CL8'VSEL   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E78E',CL8'VFMS   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   WFMSDB
*   DC  X'E78F',CL8'VFMA    ,AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   WFPSODB
*   DC  X'E794',CL8'VPK    ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Pack (modulo)
*   DC  X'E795',CL8'VPKLS  ' ,AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Pack Logical Saturate
*   DC  X'E797',CL8'VPKS   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Pack Saturate
*   DC  X'E7A1',CL8'VMLH   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E7A2',CL8'VML    ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Multiply Low
*   DC  X'E7A3',CL8'VMH    ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Multiply High
*   DC  X'E7A4',CL8'VMLE   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E7A5',CL8'VMLO   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E7A6',CL8'VME    ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Multiply Even
*   DC  X'E7A7',CL8'VMO    ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Multiply Odd
*   DC  X'E7A9',CL8'VMALH  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Multiply and Add High Logical   VMALH B/F/H/W
*   DC  X'E7AA',CL8'VMAL   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Multiply and Add Low            VMAL  B/F/H
*   DC  X'E7AB',CL8'VMAH   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Multiply and Add High           VMAH  B/F/H
*   DC  X'E7AC',CL8'VMALE  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Multiply and Add Even Logical   VMALE B/F/H
*   DC  X'E7AD',CL8'VMALO  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Multiply and Add Odd Logical    VMALO B/F/H
*   DC  X'E7AE',CL8'VMAE   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Multiply and Add Even           VMAE  B/F/H
*   DC  X'E7AF',CL8'VMAO   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Multiply and Add Odd   VMAO B/F/H
*   DC  X'E7B4',CL8'VGFM   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E7B9',CL8'VACCC  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   VACCCQ
*       Vector Add with Carry Compute Carry
*   DC  X'E7BB',CL8'VAC    ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Add With Carry
*   DC  X'E7BC',CL8'VGFMA  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E7BD',CL8'VSBCBI ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E7BF',CL8'VSBI   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*         Vector Subtract with Borrow Compute Borrow Indication
*   DC  X'E7C0',CL8'VCLGD  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E7C1',CL8'VCDLG  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E7C2',CL8'VCGD   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E7C3',CL8'VCDG   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E7C4',CL8'VLDE   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   WLDEB
*   DC  X'E7C5',CL8'VLED   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   VLED   B/H/F/G  WLEDB
*   DC  X'E7C7',CL8'VFI    ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   WFIDB
*   DC  X'E7CA',CL8'WFK    ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   WFKDB
*   DC  X'E7CB',CL8'WFC  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   WFCDB
*   DC  X'E7CC',CL8'VFPSO ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   WFLCDB/WFLNDB/WFLPDB/WFPSODB
*   DC  X'E7CE',CL8'VFSQ   ,AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   WFSQDB
*   DC  X'E7D4',CL8'VUPLL',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   VUPLL  B/F/H     Unpack Low  (unsigned)
*   DC  X'E7D5',CL8'VUPLH',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   VUPLH  B/F/H/W   Unpack High (unsigned)
*   DC  X'E7D6',CL8'VUPL ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   VUPL   B/F       Unpack Low  (signed)
*   DC  X'E7D7',CL8'VUPH ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   VUPH   B/F/H     Unpack High (signed)
*   DC  X'E7D8',CL8'VTM     ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E7D9',CL8'VECL    ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E7DB',CL8'VEC     ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E7DE',CL8'VLC     ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Load Complement
*   DC  X'E7DF',CL8'VLP     ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Load Positive
*   DC  X'E7E2',CL8'VFS     ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   WFSDB
*   DC  X'E7E3',CL8'VFA     ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E7E5',CL8'VFD     ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   WFDDB
*   DC  X'E7E7',CL8'VFM     ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E7E8',CL8'VFCE    ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   WFCEDB  WFCEDBS
*   DC  X'E7EA',CL8'VFCHE   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   WFCHEDB WFCHEDBS
*   DC  X'E7EB',CL8'VFCH    ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   WFCHDB  WFCHDBS
*   DC  X'E7F0',CL8'VAVGL   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Average Logical      VAVGL B/F/G/H
*   DC  X'E7F1',CL8'VACC    ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Add Compute Carries  VACC  B/F/G/H
*   DC  X'E7F2',CL8'VAV     ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Average              VAV   B/H/F/G/Q
*   DC  X'E7F3',CL8'VA   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Add                  VA    B/H/F/G/Q
*   DC  X'E7F5',CL8'VSCBI',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Subtract with Borrow Compute Borrow Indication
*   DC  X'E7F7',CL8'VS   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*       Vector Subtract             VS    B/H/F/G/Q
*   DC  X'E7F8',CL8'VCEQ ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   VCEQ B/BS/QF/QFS/QG/QGS/QH/QHS
*   DC  X'E7F9',CL8'VCHL ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*                   VCHL B/BS/LF/LFS/LG/LGS/LH/LHS
*   DC  X'E7FB',CL6'VCH  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E7FC',CL6'VMNL ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E7FD',CL6'VMXL ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E7FE',CL6'VMN  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'E7FF',CL6'VMX  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EB04',CL6'LMG  ',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EB0A',CL6'SRAG ',AL1(RSY),AL1(NPSA),AL1(0),AL1(CLT),X'06'
    DC  X'EB0B',CL6'SLAG ',AL1(RSY),AL1(NPSA),AL1(0),AL1(0),X'06'
    DC  X'EB0C',CL6'SRLG ',AL1(RSY),AL1(NPSA),AL1(0),AL1(0),X'06'
    DC  X'EB0D',CL6'SLLG ',AL1(RSY),AL1(NPSA),AL1(0),AL1(0),X'06'
    DC  X'EB0F',CL6'TRACG',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EB14',CL6'CSY  ',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EB17',CL6'STCCTM',AL1(RSY2),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EB1C',CL6'RLLG ',AL1(RSY),AL1(NPSA),AL1(0),AL1(0),X'06'
    DC  X'EB1D',CL6'RLL  ',AL1(RSY),AL1(NPSA),AL1(0),AL1(0),X'06'
    DC  X'EB20',CL6'CLMH ',AL1(RSY),AL1(0),AL1(T8),AL1(CMP),X'06'
    DC  X'EB21',CL6'CLMY ',AL1(RSY),AL1(0),AL1(T8),AL1(CMP),X'06'
*   DC  X'EB22',CL6'CAD  ',AL1(RSY),AL1(0),AL1(T8),AL1(CMP),X'06'
    DC  X'EB23',CL6'CLT  ',AL1(RSY2),AL1(0),AL1(T8),AL1(CMP),X'06'
    DC  X'EB24',CL6'STMG ',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EB25',CL6'STCTG',AL1(RSY),AL1(CR),AL1(S2),AL1(0),X'06'
    DC  X'EB26',CL6'STMH ',AL1(RSY),AL1(0),AL1(E4+S2),AL1(0),X'06'
    DC  X'EB2B',CL6'CLGT ',AL1(RSY2),AL1(0),AL1(T8),AL1(CMP),X'06'
    DC  X'EB2C',CL6'STCMH',AL1(RSY),AL1(0),AL1(T8+S2),AL1(0),X'06'
    DC  X'EB2D',CL6'STCMY',AL1(RSY),AL1(0),AL1(T8+S2),AL1(0),X'06'
    DC  X'EB2F',CL6'LCTLG',AL1(RSY),AL1(PRIV+CR),AL1(S2),AL1(0),X'06'
    DC  X'EB30',CL6'CSG  ',AL1(RSY),AL1(PRIV),AL1(S2),AL1(CCS),X'06'
    DC  X'EB31',CL6'CDSY ',AL1(RSY),AL1(PRIV),AL1(S2),AL1(CCS),X'06'
   DC  X'EB3E',CL6'CDSG',AL1(RSY),AL1(PRIV),AL1(E4+EPR),AL1(CCS),X'06'
    DC  X'EB44',CL6'BXHG',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EB45',CL6'BXLEG',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EB4C',CL6'ECAG ',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EB51',CL6'TMY  ',AL1(SIY),AL1(BMP),AL1(T8),AL1(CTM),X'06'
    DC  X'EB52',CL6'MVIY ',AL1(SIY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EB54',CL6'NIY  ',AL1(SIY),AL1(0),AL1(0),AL1(CZRO),X'06'
    DC  X'EB55',CL6'CLIY ',AL1(SIY),AL1(BMP),AL1(0),AL1(CMP),X'06'
    DC  X'EB56',CL6'OIY  ',AL1(SIY),AL1(BMP),AL1(0),AL1(CZRO),X'06'
    DC  X'EB57',CL6'XIY  ',AL1(SIY),AL1(0),AL1(0),AL1(CZRO),X'06'
    DC  X'EB60',CL6'?EB60',AL1(SIY),AL1(PRIV),AL1(0),AL1(0),X'06'
    DC  X'EB61',CL6'?EB61',AL1(SIY),AL1(PRIV),AL1(0),AL1(0),X'06'
    DC  X'EB6A',CL6'ASI  ',AL1(SIY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EB6E',CL6'ALSI ',AL1(SIY),AL1(0),AL1(0),AL1(CA2),X'06'
    DC  X'EB7A',CL6'AGSI ',AL1(SIY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EB7E',CL6'ALGSI',AL1(SIY),AL1(0),AL1(0),AL1(CA2),X'06'
    DC  X'EB80',CL6'ICMH',AL1(RSY),AL1(0),AL1(T8+S2),AL1(CICM),X'06'
    DC  X'EB81',CL6'ICMY',AL1(RSY),AL1(0),AL1(T8+S2),AL1(CICM),X'06'
    DC  X'EB8E',CL6'MVCLU',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EB8F',CL6'CLCLU',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EB90',CL6'STMY',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EB96',CL6'LMH',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EB98',CL6'LMY',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EB9A',CL6'LAMY',AL1(RSY),AL1(AR2),AL1(0),AL1(0),X'06'
    DC  X'EB9B',CL6'STAMY',AL1(RSY),AL1(AR2),AL1(0),AL1(0),X'06'
    DC  X'EBC0',CL6'TP',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EBDC',CL6'SRAK',AL1(RSY),AL1(0),AL1(0),AL1(CLT),X'06'
    DC  X'EBDD',CL6'SLAK',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EBDE',CL6'SRLK',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EBDF',CL6'SLLK',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'EBE0',CL8'LOCFH  ',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'EBE1',CL8'STOCFH ',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EBE2',CL6'LOCG',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EBE3',CL6'STOCG',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EBE4',CL6'LANG',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EBE6',CL6'LAOG',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EBE7',CL6'LAXG',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EBE8',CL6'LAAG',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EBEA',CL6'LAALG',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EBF2',CL6'LOC  ',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EBF3',CL6'STOC ',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EBF4',CL6'LAN  ',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EBF6',CL6'LAO  ',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EBF7',CL6'LAX  ',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EBF8',CL6'LAA  ',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'EBFA',CL6'LAAL ',AL1(RSY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'EC98',CL6'RISBGN',AL1(RIE4),AL1(0),AL1(0),AL1(CA2),X'06'
*   DC  X'ECDA',CL6'ALHSIK',AL1(RIE4),AL1(0),AL1(0),AL1(CA2),X'06'
*   DC  X'ECDB',CL7'ALGHSIK',AL1(RIE4),AL1(0),AL1(0),AL1(CA2),X'06'
*   DC  X'ECE4',CL7'CGRB   ',AL1(RRS),AL1(0),AL1(0),AL1(CA2),X'06'
*   DC  X'ECE5',CL7'CLGRB  ',AL1(RRS),AL1(0),AL1(0),AL1(CA2),X'06'
*   DC  X'ECF6',CL7'CRB    ',AL1(RRS),AL1(0),AL1(0),AL1(CA2),X'06'
*   DC  X'ECF7',CL7'CLRB   ',AL1(RRS),AL1(0),AL1(0),AL1(CA2),X'06'
*   DC  X'ECFC',CL7'CGIB   ',AL1(RIS),AL1(0),AL1(0),AL1(CA2),X'06'
*   DC  X'ECFD',CL7'CLGIB  ',AL1(RIS),AL1(0),AL1(0),AL1(CA2),X'06'
*   DC  X'ECFE',CL7'CIB    ',AL1(RIS),AL1(0),AL1(0),AL1(CA2),X'06'
*   DC  X'ECFF',CL7'CLIB   ',AL1(RIS),AL1(0),AL1(0),AL1(CA2),X'06'
*   DC  X'ED04',CL6'LDEB   ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED05',CL6'LXDB   ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED06',CL6'LXEB   ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED07',CL6'MXDB   ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED08',CL6'KEB    ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED09',CL6'CEB    ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED0A',CL6'AEB    ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED0B',CL6'SEB    ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED0C',CL6'MDEB   ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED0D',CL6'DEB    ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED0E',CL6'MAEB   ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED0F',CL6'MSEB   ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED10',CL6'TCEB   ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED11',CL6'TCDB   ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED12',CL6'TCXB   ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED14',CL6'SQEB   ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED15',CL6'SQDB   ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED17',CL6'MEEB   ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED18',CL6'KDB    ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED19',CL6'CDB    ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED1A',CL6'ADB    ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED1B',CL6'SDB    ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED1C',CL6'MDB    ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED1D',CL6'DDB    ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED1E',CL6'MADB   ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED1F',CL6'MSDB   ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED24',CL6'LDE    ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED25',CL6'LXD    ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED26',CL6'LXE    ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED2E',CL6'MAE    ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED2F',CL6'MSE    ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED34',CL6'SQE    ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED35',CL6'SQD    ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED37',CL6'MEE    ,AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED38',CL6'MYAL   ,AL1(RXF),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED39',CL6'MYL    ,AL1(RXF),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED3A',CL6'MAY    ,AL1(RXF),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED3B',CL6'MY     ,AL1(RXF),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED3C',CL6'MAYH   ,AL1(RXF),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED3D',CL6'MYH    ,AL1(RXF),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED3E',CL6'MAD    ,AL1(RXF),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED3F',CL6'MSD    ,AL1(RXF),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED40',CL6'SLDT   ,AL1(RXF),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED41',CL6'SRDT   ,AL1(RXF),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED48',CL6'SLXT   ,AL1(RXF),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'ED49',CL6'SRXT   ,AL1(RXF),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'ED50',CL6'TDCET ',AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'ED51',CL6'TDGET ',AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'ED55',CL6'TDGDT ',AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'ED58',CL6'TDCXT ',AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'ED59',CL6'TDGXT ',AL1(RXE),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'ED64',CL6'LEY   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'ED65',CL6'LDY   ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'ED66',CL6'STEY  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'ED67',CL6'STDY  ',AL1(RXY),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'EDA8',CL6'CZDT  ',AL1(RSL2),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'EDA9',CL6'CZXT  ',AL1(RSL2),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'EDAA',CL6'CDZT  ',AL1(RSL2),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'EDAB',CL6'CXZT  ',AL1(RSL2),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'EDAC',CL6'CPDT  ',AL1(RSL2),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'EDAD',CL6'CPXT  ',AL1(RSL2),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'EDAE',CL6'CDPT  ',AL1(RSL2),AL1(0),AL1(0),AL1(0),X'06'
*   DC  X'EDAF',CL6'CXPT  ',AL1(RSL2),AL1(0),AL1(0),AL1(0),X'06'
    DC  X'FFFF'                 TABLE END
