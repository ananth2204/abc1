*-----------------------------------------------------------------
* INPUT : TEXT
*
* 1) COPY DSECT NAME FROM COMMENT FIELD FOR THE FOLLOWING INSTRUCTION
*    LLGT, LLGH, LGF, L, IC, AND LG (IE ICLASS = LIOP)
* 2) IF CLEAR DSECT NAME OP CODES (IE ICLASS = CDOP), CLEAR DSECT NAME
*    LA, LHI, AHI AND ETC
* 3) REMOVE INVALID ENTRY FROM DSECT TABLE
* 4) CLASS LROP (IE LR, LTR, LGR OR LLGTR)
*    COPY TARGET DSECT TO SOURCE DSECT
*                                  R1 ---> CVT
*    EXAMPLE:
*        L    R4,16
*        LR   R1,R4                R4 ---> CVT
*                                  R1 ---> CVT
* 6) SUPPORT FIELD STATEMENT
*-----------------------------------------------------------------
WRITEOUT CSECT
WRITEOUT RMODE ANY
WRITEOUT AMODE 31
         J     BEGIN
         DC    C'WRITEOUT'             PROGRAM NAME
         DC    C'01.01'                VERSION NUMBER
         DC    C'&SYSDATE &SYSTIME'    ASSEMBLE DATE AND TIME
BEGIN    DS    0H                      WRITE OUTPUT RECORDS
         BAKR  R14,0
         LARL  R3,WRITEOUT
         USING WRITEOUT,R3
         USING COMMPARM,R5
         L     R0,TEXT                 LOAD TEXT INTO R15
         NILH  R0,X'FF0F'              MASK OFF REGISTER
         LARL  R15,OPCODE_TBL1
         CLI   COMMENT,X'00'
         JNE   WRTOPL1
         MVI   COMMENT,X'40'
WRTOPL1  CLI   0(R15),X'FF'            END OF TABLE
         JE    WRTAHI1                 BRANCH IF YES
         C     R0,0(R15)               OPCODE MATCH ?
         JE    WRTLHI                  BRANCH IF YES
         AHI   R15,4                   POINT TO NEXT TABLE ENTRY
         J     WRTOPL1                 LOOP
WRTAHI1  LARL  R15,OPCODE_TBL2         LOCATE OPCODE_TBL2
WRTAHI2  CLI   0(R15),X'FF'            END OF TABLE ??
         JE    WRT0050                 BRANCH IF YES
         C     R0,0(R15)               OPCODE MATCH ?
         JE    WRTAHI3                 BRANCH IF YES
         AHI   R15,4                   POINT TO NEXT TABLE ENTRY
         J     WRTAHI2                 LOOP
WRTAHI3  JAS   R14,AHINNN
         J     WRTCOMMT                BRANCH 1ST REG = 0
WRTLHI   JAS   R14,CNVTNNN
         J     WRTCOMMT                BRANCH 1ST REG = 0
WRT0050  CLI   ICLASS,LROP             LR/LTR/LLGTR OP CODE ??
         JE    WRTILR                  BRANCH IF YES
         CLC   S_ALGR,MNEMONIC         ALGR OP CODE ??
         JE    WRTNEWP2                BRANCH IF YES
         CLC   S_SLGR,MNEMONIC         ALGR OP CODE ??
         JE    WRTNEWP2                BRANCH IF YES
         CLC   S_ALGR(3),MNEMONIC      ALG  OP CODE ??
         JE    WRTNEWP1                BRANCH IF YES
         CLI   TEXT,X'5E'              AL  OP CODE ??
         JE    WRTNEWP1                BRANCH IF YES
         CLI   TEXT,X'1E'              ALR OP CODE ??
         JE    WRTNEWP1                BRANCH IF YES
         CLI   TEXT,X'1F'              SLR OP CODE ??
         JE    WRTNEWP1                BRANCH IF YES
         CLI   TEXT,X'BF'              ICM OP CODE ??
         JE    WRTICM                  BRANCH IF YES
         CLI   COMMENT-1,C'!'          GLOBAL DSECT MAPPING?
         JE    WRTCBASR                BRANCH IF YES
         CLI   COMMENT-1,C'%'          PROGRAM DSECT MAPPING?
         JE    WRTCBASR                BRANCH IF YES
         TM    ICLASS,X'10'            LIOP/CDOP/CDOPA/CDOR ?
         JO    WRTCBASR                BRANCH IF YES CLR BASEREG
         CLI   ICLASS,NPSA             NPSA ?
         JE    WRTCBASR                BRANCH IF YES CLR BASEREG
         J     WRTCOMMT
WRTNEWP2 JAS   R14,NEWPTR2             GET NEW POINTER
         J     WRTCHK
WRTNEWP1 JAS   R14,NEWPTR1             GET NEW POINTER
WRTCHK   TM    FLAG1,FLGNF
         JO    WRTCBASR
         J     WRTCOMMT                BRANCH
WRTILR   SR    R1,R1                   CLEAR R1 FOR IC
         CLI   TEXT,X'B9'              DOUBLE BYTE LROP INSTR?
         JE    WRTDBOP
         IC    R1,TEXT+1               GET SOURCE AND TARGET REG
         J     WRTCPY
WRTDBOP  IC    R1,TEXT+3               GET SOURCE AND TARGET REG
WRTCPY   JAS   R14,CPYDSCT             COPY TARGET DSECT REG
         J     WRTCOMMT                BRANCH 1ST REG = 0
WRTICM   TM    TEXT+1,X'07'            MASK 15/7 ??
         JNO   WRTCOMMT                BRANCH IF NOT ONE
* --------------------------------------------------------------
* GET THE TARGET REGISTER AND INITIALISE THE CORRESPONDING
* DSECT REGISTER NAME TABLE ENTRY TO BLANK
* ---------------------------------------------------------------
WRTCBASR SR    R1,R1                   CLEAR R1
         CLI   ITYPE,RXY               RXY INSTRUCTION  ??
         JE    WRT0100                 BRANCH IF YES
         CLI   ITYPE,RRE2              RRE2 INSTRUCTION ??
         JNE   WRT0100                 BRANCH IF NO
         IC    R1,TEXT+3               GET RR
         J     WRT0200
WRT0100  IC    R1,TEXT+1               GET RR
WRT0200  SRL   R1,4                    GET BASE REGISTER ONLY
         MHI   R1,DSREGEL
         LA    R4,DSREGTBL             DSECT REGISTER NAME TABLE
         AR    R4,R1
         CLI   COMMENT,C'+'            GLOBAL DSECT MAPPING ?
         JE    CPYDSNAL                YES
         CLI   ICLASS,CDOPA            CDOPA
         JE    CLRDSCTA                BRANCH IF YES
         CLI   ICLASS,CDOPA            CDOPA
         JE    CLRDSCTA                BRANCH IF YES
         CLI   ICLASS,CDOP             CDOP INSTRUCTION OP CODE ?
         JE    CLRDSCTE                BRANCH IF YES
         CLI   COMMENT,C'>'            GLOBAL DSECT MAPPING ?
         JE    CPYDSNAL                YES
         CLI   COMMENT,C'<'            LOCAL DSECT MAPPING ?
         JE    CPYDSNAL                YES
         CLI   COMMENT,C'('            LOCAL DSECT MAPPING ??
         JE    CPYDSNAL                YES
         CLI   COMMENT,C')'            GLOBAL DSECT MAPPING ??
         JE    CPYDSNAL                YES
         CLI   COMMENT,C'!'            LA DSECT GLOBAL MAPPING?
         JE    CPYDSNAL                YES
         CLI   COMMENT,C'%'            LA DSECT LOCAL MAPPING?
         JE    CPYDSNAL                YES
         CLC   MNEMONIC(2),S_LAY       LA or LAY  OP ??
         JNE   CPYDSNAM                BRANCH IF NOT LA/LAY INSTR
         CLI   COMMENT,C'@'
         JNE   CLRDSCTA                BRANCH IF NO
         MVI   4(R4),C'>'              CHANGE TO INDIRECT MAPPING
         MVC   5(DSREGL,R4),COMMENT+1  SAVE CNTL BLOCK DSECT NAME
         J     WRTCOMMT
CLRDSCTA CLI   COMMENT,C'+'            GLOBAL OFFSET INDICATOR
         JNE   CLRDSCTE                JUMP IF NOT EQUAL
* COPY DSECT NAME FROM COMMENT TO DSECT REGISTER
CPYDSNAL DS    0H
         CLC   MNEMONIC(2),S_STM       ST/STG INSTRUCTION
         JNE   CPYDSNAK                BRANCH IF NO
         CLI   COMMENT+7,C'@'
         JE    CHKDSCI                 BRANCH IF YES
         CLC   S_ZV,5(R4)              DSECT ZVBK
         JE    CPYDSNAK                BRANCH IF NO
         CLC   S_ZG,5(R4)              DSECT ZGM
         JE    CPYDSNAK                BRANCH IF NO
         CLI   5(R4),C' '              DSECT PHB
         JNE   CHKDSCI                 BRANCH IF YES
CPYDSNAK MVC   4(DSREGL+1,R4),COMMENT  SAVE CNTL BLOCK DSECT NAME
CHKDSCI  CLI   COMMENT,C'%'            LA LOCAL MAPPING?
         JE    SETLDSC                 BRANCH IF YES
         CLI   COMMENT,C'>'            INDIRECT GLOBAL MAPPING 1
         JE    SETLDSC1                BRANCH IF YES
         CLI   COMMENT,C'<'            INDIRECT LOCAL  MAPPING 1
         JE    SETLDSC0                BRANCH IF YES
         CLI   COMMENT,C')'            INDIRECT GLOBAL MAPPING 2
         JE    SETLDSC2                BRANCH IF YES
         CLI   COMMENT,C'*'            OFFSET ADDRESS INDICATOR
         JE    SETLDSC3                BRANCH IF YES
         CLI   COMMENT,C'('            INDIRECT LOCAL  MAPPING 2
         JE    SETLDSC                 BRANCH IF YES
         CLI   COMMENT,C'!'            LA GLOBAL MAPPING?
         JNE   WRTCOMMT                JUMP IF NOT EQUAL
         MVI   4(R4),C'@'              SET GLOBAL DSECT INDICATOR
         J     WRTCOMMT                JUMP
SETLDSC  MVI   4(R4),C'$'              SET LOCAL DSECT INDICATOR
         J     WRTCOMMT                JUMP
SETLDSC0 MVI   4(R4),C'('              SET LOCAL DSECT INDICATOR
         J     WRTCOMMT                JUMP
SETLDSC1 MVI   4(R4),C')'              SET GLOBAL DSECT INDICATOR
         J     WRTCOMMT                JUMP
SETLDSC2 MVI   4(R4),C'@'              SET GLOBAL DSECT INDICATOR
         J     WRTCOMMT                JUMP
SETLDSC3 MVI   4(R4),C'+'              SET GLOBAL DSECT INDICATOR
         J     WRTCOMMT                JUMP
CPYDSNAM CLI   COMMENT,C'+'            OFFSET INDICATOR ?
         JE    CPYDSNAL                JUMP IF EQUAL
         CLI   COMMENT,C'@'            GLOBAL DSECT INDICATOR ?
         JE    CPYDSNAL                JUMP IF EQUAL
         CLI   COMMENT,C'*'            OFFSET ADDRESS INDICATOR ?
         JE    CPYDSNAL                JUMP IF EQUAL
         CLI   COMMENT,C'$'            LOCAL DSECT INDICATOR?
         JE    CPYDSNAL                JUMP IF EQUAL
CLRDSCTE CLI   4(R4),C'*'
         JNE   CLRDSCTF                JUMP IF NOT EQUAL
         CLC   TXTOFST,ENDOFST
         JL    WRTCOMMT
CLRDSCTF CLI   COMMENT,C')'            INDIRECT MAPPING
         JE    WRTCOMMT                JUMP IF EQUAL
         TM    ICLASS,X'10'            LIOP/CDOP/CDOPA/CDOR ?
         JNO   WRTCOMMT                BRANCH IF NOT CLR BASEREG
         CLC   MNEMONIC(2),S_STM       SKIP IF ST/STG INSTR
         JE    WRTCOMMT                JUMP IF EQUAL
         MVC   4(DSREGL+1,R4),BLANX    CLEAR DSECT
WRTCOMMT DS    0H
         CLI   COMMENTS-4,C' '        COMMNT FIELD IS OVERWRITTEN @06A
         JNE   WRTCOMT4               BRANCH IF NO                @06A
*        MVC   COMMENTS-5(L'COMMENTS),COMMENTS                    @06A
         MVC   COMMENTS-4(L'COMMENTS),COMMENTS                    @06A
WRTCOMT4 DS    0H                                                 @06A
         CLC   S_DC,MNEMONIC           DC ??
         JE    EXIT                    BRANCH IF YES
         CLI   COMMENTS,C' '           COMMENT FIELD OVERWRITTEN?
         JNE   EXIT                    BRANCH IF YES
         CLC   OPNDSSP(2),BLANX        BLANK ??
         JNE   SHF1SP                  BRANCH IF NON-BLANK
         CLC   OPNDS+25(3),BLANX       SHORT OPERANDS ?
         JNE   MLNORMC                 BRANCH IF NOT BLANK
         MVC   OPNDS+26(L'COMMENTS+5),COMMENT
         J     EXIT                    JUMP
MLNORMC  DS    0H
         MVC   COMMENTS,COMMENT        COPY COMMENT
         CLI   COMMENT,C'@'            GLOBAL DSECT INDICATOR ?
         JE    ML1SPCE                 JUMP IF TRUE
         CLI   COMMENT,C'$'            PROGRAM DSECT INDICATOR ?
         JNE   EXIT                    JUMP IF NOT TRUE
ML1SPCE  MVC   COMMENTS,COMMENT+1      COPY COMMENT
         PR                            RETURN
SHF1SP   MVC   COMMENTS+1(L'COMMENTS-1),COMMENT
EXIT     PR                            RETURN
* --------------------------------------------------------------
* COPY SOURCE REGISTER DSECT TO TARGET REGISTER DSECT
* INPUT R1 ->  TEXT+1 FOR LR  TEXT+3 FOR LGR / LLGTR
*              Example : 1834 R1 = x'34'
*                        Copy DSECT name from R4 to R3
* --------------------------------------------------------------
CPYDSCT  BAKR  R14,0                   SAVE REGISTERS
         LR    R2,R1                   SAVE R1
         SRL   R1,4                    GET TARGET REGISTER
         NILL  R2,X'000F'              GET SOURCE REGISTER
         CR    R1,R2                   SAME REGISTER ?
         JE    CPYEXIT                 JUMP IF YES
         MHI   R2,DSREGEL
         LA    R4,DSREGTBL             LOCATE DSECT TABLE
         AR    R4,R2
         MHI   R1,DSREGEL
         LA    R7,DSREGTBL             LOCATE DSECT TABLE
         AR    R7,R1
         MVC   4(DSREGL+1,R7),4(R4)    COPY TARGET TO SOURCE
         CLI   5(R4),C' '              DUMMY DSECT ?
         JE    CPYEXIT                 BRANCH IF YES
         CLI   5(R4),X'00'             DUMMY DSECT ?
         JE    CPYEXIT                 BRANCH IF YES
         MVC   COMMENT(L'S_USING),S_USING
         MVC   COMMENT+L'S_USING+1(DSREGL+1),4(R4)
*                                               GET DSECT NAME
CPYEXIT  PR                            RETURN TO CALLER
* --------------------------------------------------------------
* INPUT : TEXT
* FUNCTION:
* R1 -> 1st Register
* R2 -> 2nd Register
* --------------------------------------------------------------
NEWPTR2  BAKR  R14,0                   SAVE REGISTERS
         SR    R1,R1                   CLEAR R1 FOR IC
         IC    R1,TEXT+3
         LR    R2,R1                   SAVE R1
         SRL   R1,4                    GET 1ST REGISTER
         NILL  R2,X'000F'              GET 2nd REGISTER
         CR    R1,R2                   SAME REGISTER ?
         JE    NEWPT99                 JUMP IF YES
         J     NEWDSCT
* --------------------------------------------------------------
* INPUT : TEXT
* FUNCTION:
* R1 -> 1st Register
* R2 -> 2nd Register
* --------------------------------------------------------------
NEWPTR1  BAKR  R14,0                   SAVE REGISTERS
         SR    R1,R1                   CLEAR R1 FOR IC
         IC    R1,TEXT+1
         LR    R2,R1                   SAVE R1
         SRL   R1,4                    GET 1ST REGISTER
         NILL  R2,X'000F'              GET 2ND REGISTER
         CLC   S_ALGR(3),MNEMONIC      ALG  OP CODE ??
         JE    NEWDSCT                 BRANCH IF YES
         CR    R1,R2                   SAME REGISTER ?
         JE    NEWPT99                 JUMP IF YES
NEWDSCT  MHI   R1,DSREGEL
         LA    R7,DSREGTBL             LOCATE DSECT TABLE
         AR    R7,R1                   R7 -> 1st REG DSECT entry
         MHI   R2,DSREGEL
         LA    R8,DSREGTBL             LOCATE DSECT TABLE
         AR    R8,R2                   R8 -> 2nd REG DSECT entry
         CLC   S_ALGR,MNEMONIC         ALGR OPCODE ?
         JE    NEWPT05                 JUMP IF ALGR OPCODE
         CLC   S_ALGR(3),MNEMONIC      ALG  OPCODE ?
         JE    NEWPT10                 JUMP IF ALGR OPCODE
         CLC   S_SLGR,MNEMONIC         SLGR OPCODE ?
         JE    NEWPT15                 JUMP IF SLGR OPCODE
         CLI   TEXT,X'5E'              AL OPCODE ?
         JE    NEWPT40                 JUMP IF YES
         CLI   TEXT,X'1F'              SLR OPCODE ?
         JE    NEWPTSL                 JUMP IF SLR OPCODE
NEWPT00  LARL  R9,TBL_ALR              LOCATE FIRST ALR ENTRY
         J     NEWPT20
NEWPT05  LARL  R9,TBL_ALGR             LOCATE FIRST ALGR ENTRY
         J     NEWPT20                 SCAN ACTION TABLE
NEWPT10  LARL  R9,TBL_ALG              LOCATE FIRST ALG ENTRY
         J     NEWPT50                 SCAN ACTION TABLE
NEWPT15  LARL  R9,TBL_SLGR             LOCATE FIRST SLGR ENTRY
         J     NEWPT20                 LOOP
NEWPTSL  LARL  R9,TBL_SLR              LOCATE FIRST SLR ENTRY
NEWPT20  CLI   0(R9),X'FF'               END OF TABLE ?
         JE    NEWPT99                   BRANCH IF YES
         CLC   D1OPND-DTBL(6,R9),4(R7)   1st OPERAND MATCH ??
         JNE   NEWPT30                   JUMP IF NOT MATCH
         CLC   D2OPND-DTBL(6,R9),4(R8)   2nd OPERAND MATCH
         JE    NEWPT70                   JUMP IF EQUAL
NEWPT30  AHI   R9,DTBLL                NEXT TABLE ENTRY
         J     NEWPT20                 LOOP
*  AL  ALG
NEWPT40  LARL  R9,TBL_ALR              LOCATE FIRST ENTRY
NEWPT50  CLI   0(R9),X'FF'             END OF TABLE ?
         JE    NEWPT99                 BRANCH IF YES
         CLC   D1OPND-DTBL(6,R9),4(R7)    1st DSECT NAME MATCH?
         JNE   NEWPT60                    JUMP IF NOT MATCH
         CLC   D2OPND-DTBL(6,R9),COMMENT  2nd DSECT NAME MATCH?
         JE    NEWPT70                 JUMP IF MATCH
NEWPT60  AHI   R9,DTBLL                NEXT TABLE ENTRY
         J     NEWPT50                 LOOP
NEWPT70  MVC   4(DSREGL+1,R7),DCTLBK-DTBL(R9) Copy control block
         MVC   COMMENT(2),OPNDS
         CLI   OPNDS+1,C','
         JNE   NEWPT80
         MVI   COMMENT+1,C' '
NEWPT80  MVC   COMMENT(2),OPNDS        COPY REGISTERS
         MVC   COMMENT-6+L'S_USING+1(DSREGL),0(R7) Copy Register
         MVC   COMMENT+3(3),S41        '-> '
         MVC   COMMENT+6(5),5(R7)
         MVC   COMMENT+11(10),BLANX    INIT TO BLANKS
         NI    FLAG1,255-FLGNF
         PR                            RETURN TO CALLER
NEWPT99  OI    FLAG1,FLGNF
         PR                            RETURN TO CALLER
* --------------------------------------------------------------
* CONVERT OPERAND TO CHARACTER AND COPY IT TO CORRESPONDING DSECT
* REGISTER ENTRY
* INPUT  : TEXT
* OUTPUT : DSECT REGISTER ENTRY OF AHI/AGHI IS UPDATED
* --------------------------------------------------------------
AHINNN   BAKR  R14,0                   SAVE REGISTERS
         SR    R1,R1                   CLEAR R1 FOR IC
         IC    R1,TEXT+1
         NILL  R1,X'00F0'              MASK OFF OPCODE
         SRL   R1,4                    GET TARGER REGISTER NO.
         MHI   R1,DSREGEL
         LA    R4,DSREGTBL             LOCATE DSECT TABLE
         AR    R4,R1                   R4 -> DSECT ENTRY
         LARL  R9,TBL_AHI              LOCATE TABLE ENTRY
AHI_100  CLI   0(R9),X'FF'             END OF TABLE
         JE    AHI_999                 BRANCH IF END OF TABLE
         CLC   0(6,R9),4(R4)           DSECT NAME FOUND
         JNE   AHI_400                 JUMP IF NOT EQUAL
         CLC   6(2,R9),TEXT+2          DISPLACMENT MATCH ?
         JE    AHI_600                 JUMP IF EQUAL
AHI_400  AHI   R9,14                   NEXT TABLE ENTRY
         J     AHI_100                 LOOP
AHI_600  MVC   4(DSREGL+1,R4),8(R9)    COPY DSECT NAME
         MVC   COMMENT-6+L'S_USING+1(DSREGL+1),8(R9)
AHI_999  PR                            RETURN TO CALLER
TBL_AHI  DC    C'@DBD  ',X'FFF0',C'@DBDP '  AHGI R4,-16
         DC    C'@DBDP ',X'0010',C'@DBD  '  AHGI R4,16
         DC    C'@RB   ',X'FFE0',C'>XSB  '  AHI  R4,-32
         DC    C'@RB   ',X'FFC0',C'@RBPRX'  AHI  R4,-64
         DC    C'@RBPRX',X'0040',C'@RB   '  AHI  R4,64
         DC    C'@UCBC ',X'FFE0',C'>UCBP '  AHI  R4,-32
         DC    C'@UCBC ',X'FFF0',C'>DCE  '  AHI  R4,-16
         DC    X'FF'
* --------------------------------------------------------------
* CONVERT OPERAND TO CHARACTER AND COPY IT TO CORRESPINDING
* DSECT REGISTER ENTRY
* INPUT  : TEXT
* OUTPUT : DSECT REGISTER TABLE ENTRY IS UPDATED
* --------------------------------------------------------------
CNVTNNN  BAKR  R14,0                   SAVE REGISTERS
         SR    R1,R1                   CLEAR R1 FOR IC
         IC    R1,TEXT+1
         NILL  R1,X'00F0'              MASK OFF OPCODE
         SRL   R1,4                    GET TARGER REGISTER NO.
         MHI   R1,DSREGEL
         LA    R4,DSREGTBL             LOCATE DSECT TABLE
         AR    R4,R1                   R4 -> DSECT ENTRY
         LH    R1,TEXT+2
         CVD   R1,DBLWD                CONVERT TO PACKED
         UNPK  DBLWD(5),DBLWD+5(3)       UNPACK
         OI    DBLWD+4,C'0'            CLEAR SIGN
         MVI   4(R4),C'#'              COPY #
         MVC   5(5,R4),DBLWD
         MVC   COMMENT-6+L'S_USING+1(DSREGEL),0(R4)
         PR                            RETURN TO CALLER
S41      DC    C'-> '
S_ZG     DC    C'ZF'
S_ZV     DC    C'ZV'
S_LAY    DC    C'LAY'
S_ALGR   DC    C'ALGR'
S_SLGR   DC    C'SLGR'
ABEND    DC    X'0000'

OPCODE_TBL1    DS 0H
         DC    XL4'41000020'           LA   RX,32
         DC    XL4'A70800C8'           LHI  RX,200
         DC    XL4'A7080118'           LHI  RX,280
         DC    XL4'A7080140'           LHI  RX,320
         DC    XL4'A7080200'           LHI  RX,512
         DC    XL4'A7080304'           LHI  RX,772
         DC    XL4'A7080040'           LHI  RX,64
         DC    XL4'A7080028'           LHI  RX,40
         DC    XL4'A7080020'           LHI  RX,32
         DC    XL4'A7080018'           LHI  RX,24
         DC    XL4'A7080000'           LHI  RX,0
         DC    XL4'A7080001'           LHI  RX,1
         DC    XL4'A7080004'           LHI  RX,4
         DC    XL4'A7080008'           LHI  RX,8
         DC    XL4'A7090000'           LGHI RX,0
         DC    XL4'A7090004'           LGHI RX,4
         DC    XL4'A7090008'           LGHI RX,8
         DC    XL4'A7090010'           LGHI RX,16
         DC    XL4'A7090014'           LGHI RX,20
         DC    XL4'A709008C'           LGHI RX,140
         DC    XL4'A70900C0'           LGHI RX,192
         DC    XL4'A70900C8'           LGHI RX,200
         DC    XL4'A7090118'           LGHI RX,280
         DC    XL4'A7090148'           LGHI RX,320
         DC    XL4'A70901C0'           LGHI RX,448
         DC    XL4'A7090280'           LGHI RX,640
         DC    XL4'A7091368'           LGHI RX,4968
         DC    XL4'A7091900'           LGHI RX,6400
         DC    XL2'FFFF'
OPCODE_TBL2    DS 0H
         DC    XL4'A70A0040'           AHI  RX,64
         DC    XL4'A70AFFC0'           AHI  RX,-64
         DC    XL4'A70AFFE0'           AHI  RX,-32
         DC    XL4'A70AFFF0'           AHI  RX,-16
         DC    XL4'A70BFFE0'           AGHI RX,-32
         DC    XL4'A70BFFF0'           AGHI RX,-16
         DC    XL2'FFFF'
*             01234567890123456789
TBL_ALR  DC C'#00040@UCBP >DLW  ' ALR R1,R2  R1=#040  R2=UCBP
         DC C'#00032@FRRE @FRRE ' AL  R1,XX  R1=#032  R2=FRRE
         DC C'#00512@UCB  @UCBC ' ALR R1,R2  R1=#512  R2=UCB
         DC C'#00772@CVT  >SFT  ' AL  R1,XX  R1=#772  R2=>SFT
         DC C'+SXSB @SXSB @XSB  ' ALR R1,R2  R1=+SXSB R2=@SXSB
         DC C'@SXSB +SXSB @XSB  ' ALR R1,R2  R1=@SXSB R2=+SXSB
         DC C'@UCBP #00040>DLW  ' ALR R1,R2  R1=UCBP  R2=#040
         DC C'@UCB  #00512@UCBC ' ALR R1,R2  R1=UCB   R2=#512
         DC C'@VRA  +VRA  @VRA  ' ALR R1,R2  R1=@VRA  R2=+VRA
         DC C'+VRA  @VRA  @VRA  ' ALR R1,R2  R1=@VRA  R2=+VRA
         DC C'+XSB  @XSB  @SXSB ' ALR R1,R2  R1=+XSB  R2=@XSB
         DC X'FFFF'
TBL_SLR  DC C'@OENF #00032@FREE ' SLR R1,R2  R1=OENF R2=#032
         DC C'@RB   #00064@RBPRX' SLR R1,R2  R1=RB   R2=#064
         DC C'@UCBC #00512@UCB  ' SLR R1,R2  R1=UCBC R2=#512
         DC C'@UCBC #00032>UCBP ' SLR R1,R2  R1=UCBC R2=#032
         DC C'$IWK  #00024@CSKS ' SLR R1,R2  R1=$IWK R2=#024
         DC X'FFFF'
*             01234567890123456789
TBL_ALGR DC C'+BBRM @BBRYP@BBRM '            ALGR R1,R2
         DC C'@BBRYP#06400@BBRY '
         DC C'@CSO  +CSO  @CSO  '
         DC C'@CTDX #00320@CTDX3'
         DC C'+CUTB @CUTB @CUTB '
         DC C'@CUTB +CUTB @CUTB '
         DC C'@CVT  #00140@ECVT '
         DC C'+DATA @PGS  @XBUF '
         DC C'@DBD  +OBDF @OBDF '
         DC C'+DBD  @DBDP @DBD  '
         DC C'@DBDP +DBD  @DBD  '
         DC C'+FLDA @XBUF @FLDA '
         DC C'+FLD  @XBUF @FLD  '
         DC C'+OBDF @DBD  @OBDF '
         DC C'+OBDF @OBDF @OBDF '
         DC C'@OBDF +OBDF @OBDF '
         DC C'@OBDF +OBDFS@OBDFS'
         DC C'+OBDF @OBDFS@OBDFS'             ??
         DC C'+OBDFE@OBDF @OBDFE'             ??
         DC C'+OBDFI@OBDFE@OBDFI'             ??
         DC C'+OBDKT@OBDFS@OBDKT'             ??
         DC C'@OBDFS+OBDF @OBDFS'
         DC C'+OBDFS@OBDF @OBDFS'
         DC C'@OBDFS+OBDFS@OBDFS'
         DC C'+OBDFS@OBDFS@OBDFS'
*        DC C'@OBDFS+OBDKT@OBDKT'             ??
         DC C'+OBDFS@SHOI @SHOI '
         DC C'+OBDFX@OBDFS@OBDFX'
         DC C'+OBDLM@OBDPS@OBDLM'
         DC C'+OBDP2@OBDPX@OBDP2'
*        DC C'+OBDPS@OBDF @OBDPS'
*        DC C'+OBDPS@OBDPS@OBDPS'
         DC C'@OBDPS+OBDPS@OBDPS'
         DC C'+OBDPX@OBDPS@OBDPX'
         DC C'+OBDR @OBDR @OBDR '
         DC C'@OBDR +OBDRO@OBDR '   **
         DC C'@OBDR +OBDRO@OBDR '   **
         DC C'@OBDR +OBDR @OBDR '
         DC C'+OBDR @OBX2 @OBDR '   OBDPRIME
         DC C'+OBDR1@OBDR1@OBDR1'
         DC C'+OBDRA@OBDR @OBDRA'
         DC C'+OBDRC@OBDR @OBDRC'
         DC C'+OBDRO@OBDR @OBDR '
         DC C'+OBDRX@OBDR @OBDRX'
         DC C'+OBDTC@OBDX @OBDTC'
         DC C'+OBDU @OBDX @OBDU '
         DC C'+OBDUC@OBDV @OBDUC'
         DC C'+OBDV @OBDU @OBDV '
         DC C'+OBDX @OBDR @OBDX '
         DC C'@OBDX +OBX2 @OBX2 '
         DC C'+OBX2 @OBDX @OBX2 '
         DC C'+PGB  @XBUF @PGB  '
         DC C'+PGB  @PG   @PGB  '
         DC C'@PSFI #00280@BB   '
         DC C'@PSFIA+PSFIA@PSFIA'
         DC C'@PSI  #00200@BB   '
         DC C'@RIDB1#00192@RIDB2'
         DC C'@RIDM #00192@RIDBH'
         DC C'@SGDA #00024@SGVS '
         DC C'+SHOI @SHOI @SHOI '
         DC C'+SQLDB@SQLD @SQLDB'
         DC C'@UCO  +UCO  @UCO  '
         DC C'@UKIT +UKIT @UKIT '
         DC C'+UKIT @UKIT @UKIT '
         DC C'@URF  #00336@URF  '
         DC C'@USO  #00136@USO  '
         DC C'@USO  +USO  @USO  '
         DC C'@XBUF +FLD  @XBUF '
         DC C'@XBUF +XBUF @XBUF '
         DC C'+XBUF @PG   @XBUF '
         DC C'+XBUF @XBUF @XBUF '
         DC C'#00024@SGDA @SGVD '
         DC C'#00136@USO  @USO  '
         DC C'#00320@CTDX @CTDX3'
         DC C'#04968@SCCP @SCCP1'
         DC C'#06400@BBRYP@BBRY '
         DC X'FFFF'
TBL_ALG  DC C'@CUTB +CUTB @CUTB ' ALG  R1,xxx
         DC C'@DBD  +OBDF @OBDF '
         DC C'@CTDX #00320@CTDX3'
         DC C'+DATA @PGS  @XBUF '
         DC C'+FLD  @XBUF @FLD  '
         DC C'@OBDF +OBDF @OBDF '
         DC C'@OBDF +OBDFS@OBDFS'
         DC C'@OBDF +OBDPS@DBD  '              ??
         DC C'@OBDFS+OBDFS@OBDFS'
         DC C'+OBDFS@OBDFS@OBDFS'
         DC C'+OBDR @OBDK @OBDK '
         DC C'+OBDR @OBDR @OBDR '
         DC C'+OBDX @OBDR @OBDX '
         DC C'+PGB  @PG   @PGB  '
         DC C'+PGB  @XBUF @PGB  '
         DC C'@PSFIA+PSFIA@PSFIA'
         DC C'@XBUF +XBUF @XBUF '
         DC C'+XBUF @PG   @PGB  '
         DC C'+XBUF @XBUF @XBUF '
         DC C'#00200@PSI  @BB   '
         DC C'#00280@PSFI @BB   '
         DC C'#00320@CTDX @CTDX3'
         DC C'#00448@CTDY @WCPL '
         DC C'#00640@MSIB @MSIF '
*        DC C'+BBRM @BBRA @BBRM '   ??
*        DC C'+BBRY @BBRA @BBRY '
         DC X'FFFF'
*             01234567890123456789
TBL_SLGR DC C'@DBD  #00016@DBDP ' SLGR R1,R2
         DC C'@OENF #00032@FREE '
         DC C'@F4SA #00016@S38  '
         DC C'@XBUF #00020@PGB  '
         DC C'@XBUF +DATA @PGS  '
HIGHVALU DC X'FFFFFF'
         COPY  HDISTD
COMMPARM DSECT ,                       COMMON AREAS
         COPY  HDISTC
         END
