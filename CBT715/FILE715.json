{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012643000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE715.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE715.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\x08'", "DS1TRBAL": "b'Ir'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04\\xf4\\x00\\x02\\x04\\xf4\\x00\\x05\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04E\\x00\\x00\\x01\\x05\\x08o\\x01\\x05\\x08o\\x10\\x07\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf9@@@'", "ispf": {"version": "04.69", "flags": 0, "createdate": "2005-03-27T00:00:00", "modifydate": "2005-03-27T10:07:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-469"}, "text": "REGULAR CBT TAPE - VERSION 469    FILE:  715\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT469.FILE715\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 8 MEMBERS COUNTED; CUMULATIVE SIZE IS 943 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   03/27/05    10:07:58    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$DSEDOC": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x11\\x01\\x05\\x08o\\x01\\x05\\x08o\\t6\\x007\\x007\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2005-03-27T00:00:00", "modifydate": "2005-03-27T09:36:11", "lines": 55, "newlines": 55, "modlines": 0, "user": "SBGOLOB"}, "text": "************************************************************************\n*\nSHORT DESCRIPTION (FOR INCLUSION ON THE INDEX OF THE MVSMOD TAPE)\n*\nPROGRAMM TO ERASE A TAPE STARTING AFTER A GIVEN DATASET UNTIL IT\nREACHES THE REFLECTIVE SPOT, THEREAFTER IT WRITES SOME ERASE GAPS\nTO BE 200 PERCENT SURE.\nTHIS PROGRAMM HANDLES SL AND NL TAPES, AND USES THE DATA-SECURITY-\nERASE HARDWARE COMMAND TO DO THE JOB. NO CHANNEL BUSY, NO CPU-BUSY\nMERELY THE CONTROL UNIT IS BUSY.\n*\n************************************************************************\n*\nLONGER DESCRIPTION\n*\nWITH THIS PROGRAMM YOU CAN ERASE BOTH SL AND NL TAPES.\nALL YOU HAVE TO DO IS SUPPLY THE LAST DATASET NAME THAT\nSHOULD REMAIN ON THE VOLUME.\n*\nTHE PROGRAMM HANDLES ALL POSSIBLE CONDITIONS F.I.\n   IT CHECKS THAT THERE IS A FILE-PROTECT RING ON THE TAPE\n   IT CHECKS THE CONDITION THAT THE FILE ALREADY REACHED THE\n             REFLECTIVE SPOT\n*\nNORMAL OPERATION FOR A MULTI-VOLUME DATASET IS THAT THE\nPROGRAMM TAKES THE LAST VOLUME AND ERASES IT,\nYOU CAN SUPPLY A PARM VALUE OF 'H', IN THAT CASE THE PROGRAMM\nTAKES EVERY VOLUME OF A MULTI-VOLUME DATASET AND ERASES IT,\nTHIS WAS TO HANDLE A SITUATION IN OUR INSTALLATION WHERE A\nPROGRAMM HAD TO WRITE A GIVEN AMOUNT OF BLOCKS ON EVERY SINGLE\nREEL OF A MULTI-VOLUME DATASET AND THEN SWITCHED THE VOLUME\nUSING FORCED-END-OF-VOLUME.\n*\n************************************************************************\n*** SAMPLE JCL TO ERASE A TAPE AFTER A CATALOGUED DATASET\n//DSE   EXEC PGM=XXX\n//SYSUDUMP DD SYSOUT=*\n//TAPE DD DSN=DSNAME,DISP=(OLD,KEEP),UNIT=(TAPE,,DEFER)\n*\n************************************************************************\n*** SAMPLE JCL TO ERASE MULTIPLE VOLUMES OF A\n*** CATALOGUED MULTI-VOLUME DATASET\n*** THAT USED FEOV TO SWITCH VOLUMES BEFORE REACHING THE\n*** REFECTIVE SPOT ON THE VOLUME(S)\n//DSE   EXEC PGM=XXX,PARM='H'\n//SYSUDUMP DD SYSOUT=*\n//TAPE DD DSN=DSNAME,DISP=(OLD,KEEP),UNIT=(TAPE,,DEFER)\n*\n************************************************************************\n*** SAMPLE JCL TO ERASE A TAPE AFTER A NON-CATALOGUED DATASET\n//DSE   EXEC PGM=XXX\n//SYSUDUMP DD SYSOUT=*\n//TAPE DD DSN=DSNAME,DISP=(OLD,KEEP),UNIT=(TAPE,,DEFER),VOL=SER=123456\n*\n************************************************************************\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE715": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04E\\x00\\x00\\x01\\x05\\x08o\\x01\\x05\\x08o\\x10\\x07\\x00<\\x00<\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf9@@@'", "ispf": {"version": "04.69", "flags": 0, "createdate": "2005-03-27T00:00:00", "modifydate": "2005-03-27T10:07:00", "lines": 60, "newlines": 60, "modlines": 0, "user": "CBT-469"}, "text": "//***FILE 715 is a revival of the Tape Erase program that used to   *   FILE 715\n//*           be on File 370 of the CBT Tape Version 249 from July  *   FILE 715\n//*           1985.  This is an old program from the Federal Bank   *   FILE 715\n//*           of (West) Germany from the very early 1980s.          *   FILE 715\n//*                                                                 *   FILE 715\n//*       Questions or problems about this program should be        *   FILE 715\n//*       directed to Sam Golob:   sbgolob@cbttape.org              *   FILE 715\n//*                                                                 *   FILE 715\n//*       Two versions of this program are presented.  The first    *   FILE 715\n//*       is called DSE, and the second, for MVS systems that are   *   FILE 715\n//*       too primitive to have the OPEN with EXTEND option, is     *   FILE 715\n//*       called DSEALT.  The original two programs and instruc-    *   FILE 715\n//*       tions are presented unchanged, as member DSEORIG.         *   FILE 715\n//*                                                                 *   FILE 715\n//*       Modern assembly-linkedit JCL is member DSE$, and some     *   FILE 715\n//*       sample run JCL is presented as member DSE@.  Below is     *   FILE 715\n//*       the original description of the program from CBT Tape     *   FILE 715\n//*       File 001, with only the German spelling of the word       *   FILE 715\n//*       \"programm\" changed to the spelling \"program\".             *   FILE 715\n//*                                                                 *   FILE 715\n//*  Original description of this program...                        *   FILE 715\n//*                                                                 *   FILE 715\n//*          FILE 370 IS A TAPE ERASE PROGRAM FROM THE              *   FILE 715\n//*          FEDERAL BANK OF WEST GERMANY.  THE FOLLOWING           *   FILE 715\n//*          IS A DETAILED DESCRIPTION.                             *   FILE 715\n//*                                                                 *   FILE 715\n//*          PROGRAM TO ERASE A TAPE STARTING AFTER A               *   FILE 715\n//*          GIVEN DATASET UNTIL IT REACHES THE REFLECTIVE          *   FILE 715\n//*          SPOT, THEREAFTER IT WRITES SOME ERASE GAPS TO          *   FILE 715\n//*          BE 200 PERCENT SURE.                                   *   FILE 715\n//*                                                                 *   FILE 715\n//*          THIS PROGRAM HANDLES SL AND NL TAPES, AND              *   FILE 715\n//*          USES THE DATA-SECURITY-ERASE HARDWARE                  *   FILE 715\n//*          COMMAND TO DO THE JOB. NO CHANNEL BUSY, NO             *   FILE 715\n//*          CPU-BUSY. MERELY THE CONTROL UNIT IS BUSY.             *   FILE 715\n//*                                                                 *   FILE 715\n//*          WITH THIS PROGRAM YOU CAN ERASE BOTH SL AND            *   FILE 715\n//*          NL TAPES.  ALL YOU HAVE TO DO IS SUPPLY THE            *   FILE 715\n//*          LAST DATASET NAME THAT SHOULD REMAIN ON THE            *   FILE 715\n//*          VOLUME.                                                *   FILE 715\n//*                                                                 *   FILE 715\n//*          THE PROGRAM HANDLES ALL POSSIBLE CONDITIONS            *   FILE 715\n//*                                                                 *   FILE 715\n//*             IT CHECKS THAT THERE IS A FILE-PROTECT              *   FILE 715\n//*             RING ON THE TAPE.                                   *   FILE 715\n//*                                                                 *   FILE 715\n//*             IT CHECKS THE CONDITION THAT THE FILE               *   FILE 715\n//*             ALREADY REACHED THE REFLECTIVE SPOT.                *   FILE 715\n//*                                                                 *   FILE 715\n//*          NORMAL OPERATION FOR A MULTI-VOLUME DATASET            *   FILE 715\n//*          IS THAT THE PROGRAM TAKES THE LAST VOLUME              *   FILE 715\n//*          AND ERASES IT, YOU CAN SUPPLY A PARM VALUE OF          *   FILE 715\n//*          'H', IN THAT CASE THE PROGRAM TAKES EVERY              *   FILE 715\n//*          VOLUME OF A MULTI-VOLUME DATASET AND ERASES            *   FILE 715\n//*          IT, THIS WAS TO HANDLE A SITUATION IN OUR              *   FILE 715\n//*          INSTALLATION WHERE A PROGRAM HAD TO WRITE A            *   FILE 715\n//*          GIVEN AMOUNT OF BLOCKS ON EVERY SINGLE REEL            *   FILE 715\n//*          OF A MULTI-VOLUME DATASET AND THEN SWITCHED            *   FILE 715\n//*          THE VOLUME USING FORCED-END-OF-VOLUME.                 *   FILE 715\n//*                                                                 *   FILE 715\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSE": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x001\\x01\\x05\\x08\\x0f\\x01\\x05\\x08?\\x17\\x11\\x00\\xac\\x00\\xab\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2005-03-21T00:00:00", "modifydate": "2005-03-24T17:11:31", "lines": 172, "newlines": 171, "modlines": 0, "user": "SBGOLOB"}, "text": "         MACRO\n&NAME    BEGIN &REG1=3,&REG2=4,&PGM=XXXXXXXX,&DATE=00000000\n&NAME    START\n         STM   14,12,12(13)            SAVE REGISTERS\n         BALR  &REG1,0       LOAD 1ST BASE REGISTER\n         USING *,&REG1,&REG1+1,&REG1+2,&REG1+3\nA0ZE     ST    13,SAVE+4\n         LR    12,13\n         LA    13,SAVE\n         ST    13,8(12)\n         LM    &REG1,&REG2,BASEADDR\n         B     SAVE+72             BRANCH AROUND CONSTANTS\n         DC    CL8'&PGM'           PROGRAM NAME\n         DC    CL8'&DATE'          CREATION DATE\nBASEADDR DC    A(A0ZE,A0ZE+4096,A0ZE+8192,A0ZE+12288)\nSAVE     DS    9D                      SAVEAREA\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         EJECT\n         MEND\nDSEPROG  BEGIN PGM=DSEPROG\n         L     R1,0(R1)\n         LH    R2,0(R1)\n         LTR   R2,R2\n         BZ    NOPARM\n         MVC   PARM,2(R1)\nNOPARM   EQU   *\nWTOR     WTO   '*** MOUNT TAPES WITH FILE-PROTECT RING AND       ',    *\n               ROUTCDE=(2,7),DESC=(2)\n         WTO   '* REPLY U TO OVERWRITE FILES                     ',    *\n               ROUTCDE=(2,7),DESC=(2)\n         USING INFMJFCB,R7\n         LA    R7,JFCB\n         RDJFCB DSETAPE\n         SR    R5,R5\n         IC    R5,JFCBNVOL\n         LA    R6,1\n         CLI   PARM,C'H'\n         BE    LOOP\n         STH   R5,JFCBVLSQ\n         LA    R5,1\n         OPEN  (DSETAPE,(EXTEND)),TYPE=J\n         B     PROCEED\nLOOP     STH   R6,JFCBVLSQ\n         OPEN  (DSETAPE,(INPUT)),TYPE=J\n         EXCP  IOBSNS\n         WAIT  ECB=ECB\n         TM    INPUT+1,X'02'\n         BNZ   REMOUNT\nPROCEED  L     R4,=F'2'\n         TM    JFCBLTYP,X'01'\n         BZ    LOOP1\n         BCTR  R4,R0\nLOOP1    EXCP  IOBFSF\n         WAIT  ECB=ECB\n         BCT   R4,LOOP1\n         EXCP  IOBWTM\n         WAIT  ECB=ECB\n         EXCP  IOBOUT\n         WAIT  ECB=ECB\n         CLI   ECB,X'7F'\n         BE    ERGAP\n         EXCP  IOBSNS\n         WAIT  ECB=ECB\n         TM    INPUT+4,X'20'\n         BZ    FEHLER\nERGAP    MVI   ERGCCW+4,X'20'\n         L     R4,=F'8'\nEXCP     EXCP  IOBOUT\n         WAIT  ECB=ECB\n         BCT   R4,EXCP\n         EXCP  IOBWTM\n         WAIT  ECB=ECB\nCLOSE    CLOSE DSETAPE\n         LA    R6,1(,R6)\n         MVI   ERGCCW+4,X'60'\n         BCT   R5,LOOP\n         L     R13,SAVE+4\n        RETURN (14,12),RC=0\nREMOUNT  EQU   *\n         CLOSE DSETAPE\n         WTO   '*** THE MOUNTED TAPE HAS NO FILE-PROTECT RING    ',    *\n               ROUTCDE=(2,7),DESC=(2)\n         WTO   '* UNLOAD THE TAPE, PUT A FILE-PROTECT RING ON IT  ',   *\n               ROUTCDE=(2,7),DESC=(2)\n         WTO   '* AND MOUNT IT ON THE SAME UNIT                ',      *\n               ROUTCDE=(2,7),DESC=(2)\nREPEAT   MVC   ECB,=F'0'\n         WTOR  '* THEN REPLY WITH   Y          ',REPLY,1,ECB,          *\n               ROUTCDE(2,7)\n         WAIT  ECB=ECB\n         CLI   REPLY,C'Y'\n         BE    LOOP\n         B     REPEAT\nFEHLER   WTO   '*** ERASE PROGRAMM           ****',ROUTCDE=(2,7,11)\n         WTO   '*** ERROR IN CHANNEL PROGRAMM **',ROUTCDE=(2,7,11)\n         WTO   '** TAPE IS NOT COMPLETELY ERASED    ',ROUTCDE=(2,7,11)\n         CLOSE DSETAPE\n         L     R13,SAVE+4\n         ABEND 4090,DUMP\n         DS    0D\nSNSCCW   CCW   X'04',INPUT,X'20',10\nFSFCCW   CCW   X'3F',INPUT,X'20',10\nERGCCW   CCW   X'17',INPUT,X'60',10\nDSECCW   CCW   X'97',INPUT,X'60',10\nNOOPCCW  CCW   X'03',INPUT,X'20',10\nWTMCCW   CCW   X'1F',INPUT,X'20',10\nIOBOUT   DC    X'02',4X'00'\n         DC    AL3(ECB)\n         DC    6X'00'\n         DS    CL2\n         DC    X'00'\n         DC    AL3(ERGCCW)\n         DC    X'00'\n         DC    AL3(DSETAPE)\n         DC    4X'00',H'1',10X'00'\nIOBWTM   DC    X'02',4X'00'\n         DC    AL3(ECB)\n         DC    6X'00'\n         DS    CL2\n         DC    X'00'\n         DC    AL3(WTMCCW)\n         DC    X'00'\n         DC    AL3(DSETAPE)\n         DC    4X'00',H'1',10X'00'\nIOBFSF   DC    X'02',4X'00'\n         DC    AL3(ECB)\n         DC    6X'00'\n         DS    CL2\n         DC    X'00'\n         DC    AL3(FSFCCW)\n         DC    X'00'\n         DC    AL3(DSETAPE)\n         DC    4X'00',H'1',10X'00'\nIOBSNS   DC    X'02',4X'00'\n         DC    AL3(ECB)\n         DC    6X'00'\n         DS    CL2\n         DC    X'00'\n         DC    AL3(SNSCCW)\n         DC    X'00'\n         DC    AL3(DSETAPE)\n         DC    4X'00',H'1',10X'00'\nECB      DS    F\nDSETAPE  DCB   DEVD=TA,DSORG=PS,DDNAME=TAPE,MACRF=E,EXLST=EXITJFCB\nREPLY    DC    C' '\nPARM     DC    C'F'\n         LTORG\n         DC    F'0'\nEXITJFCB DS    0F\n         DC    X'87'\n         DC    AL3(JFCB)\n         DS    0F\nJFCB     DS    CL176\nINPUT    DS    CL10\n         DSECT\n         IEFJFCBN\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DSE$": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00@\\x01\\x05\\x08\\x0f\\x01\\x05\\x08/ %\\x00\\x1e\\x00\\x1e\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2005-03-21T00:00:00", "modifydate": "2005-03-23T20:25:40", "lines": 30, "newlines": 30, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBU JOB (CCMVS),ASMLINK,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X,COND=(1,LT)\n//*\n//*     ASM LINKEDIT FROM SOURCE ASM\n//*\n//ASMH EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,BATCH,FLAG(5))\n//SYSLIB   DD DISP=SHR,DSN=SBGOLOB.R16.MACLIB\n//         DD DISP=SHR,DSN=SBGOLOB.R16.MODGEN\n//         DD DISP=SHR,DSN=CBT.CBT468.FILE229.PDS\n//SYSIN    DD DISP=SHR,DSN=SBGOLOB.B.ASM(DSE1)\n//SYSUT1   DD UNIT=VIO,SPACE=(CYL,2)\n//SYSPRINT DD SYSOUT=*\n//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200,\n//            DSN=&&TEMP\n//*\n//LKED   EXEC  PGM=HEWL,\n//       PARM='NCAL,MAP,LIST,LET'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(2048,(200,20))\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=SBGOLOB.LOAD\n//SYSLMOD  DD  DISP=SHR,DSN=SBGOLOB.LOAD\n//OBJECT   DD  DISP=(OLD,DELETE),DSN=&&TEMP\n//SYSLIN   DD  *\n INCLUDE OBJECT\n ENTRY   DSEPROG\n SETCODE AC(1)\n SETSSI  CB469715\n NAME    DSE(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DSE@": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00$\\x01\\x05\\x08/\\x01\\x05\\x08o\\tF\\x00\\x14\\x00\\x08\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2005-03-23T00:00:00", "modifydate": "2005-03-27T09:46:24", "lines": 20, "newlines": 8, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBD JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//* --------------------------------------------------------------- *//\n//*   Sample job to run the DSE program.  Please notice that the    *//\n//*   dataset name in the //TAPE DD card should equal the dataset   *//\n//*   name that is in the tape label for the last file to be kept   *//\n//*   on the tape.                                                  *//\n//*                                                                 *//\n//*   Please note that this program should work on P/390 or FLEX-ES *//\n//*   systems where the tape is emulated, but it may abend with     *//\n//*   this program's designated User Abend, 4090.  This is because  *//\n//*   the Data Security Erase EXCP command may not work properly.   *//\n//*   Nevertheless, the tape does get erased after the file number  *//\n//*   that is specified.                                            *//\n//* --------------------------------------------------------------- *//\n//DSE     EXEC PGM=DSE\n//STEPLIB  DD  DISP=SHR,DSN=SBGOLOB.W$$.LINKLIB\n//SYSUDUMP DD  SYSOUT=*\n//TAPE     DD  DISP=(OLD,KEEP),UNIT=(562,,DEFER),VOL=SER=V468MT,\n//             DSN=FILE0100,LABEL=(100,SL)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DSEALT": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00B\\x01\\x05\\x08\\x0f\\x01\\x05\\x08o\\t3\\x00\\xad\\x00\\xa9\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2005-03-21T00:00:00", "modifydate": "2005-03-27T09:33:42", "lines": 173, "newlines": 169, "modlines": 0, "user": "SBGOLOB"}, "text": "* ---------------------------------------------------------------- *\n*  ALTERNATE VERSION OF THE DSE PROGRAM IF OPEN WITH EXTEND DOES   *\n*  NOT WORK ON YOUR VERSION OF MVS.                                *\n* ---------------------------------------------------------------- *\n         MACRO\n&NAME    BEGIN &REG1=3,&REG2=4,&PGM=XXXXXXXX,&DATE=00000000\n&NAME    START\n         STM   14,12,12(13)            SAVE REGISTERS\n         BALR  &REG1,0       LOAD 1ST BASE REGISTER\n         USING *,&REG1,&REG1+1,&REG1+2,&REG1+3\nA0ZE     ST    13,SAVE+4\n         LR    12,13\n         LA    13,SAVE\n         ST    13,8(12)\n         LM    &REG1,&REG2,BASEADDR\n         B     SAVE+72             BRANCH AROUND CONSTANTS\n         DC    CL8'&PGM'           PROGRAM NAME\n         DC    CL8'&DATE'          CREATION DATE\nBASEADDR DC    A(A0ZE,A0ZE+4096,A0ZE+8192,A0ZE+12288)\nSAVE     DS    9D                      SAVEAREA\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         EJECT\n         MEND\nDSEPROG  BEGIN PGM=DSEPROG\n         L     R1,0(R1)\n         LH    R2,0(R1)\n         LTR   R2,R2\n         BZ    NOPARM\n         MVC   PARM,2(R1)\nNOPARM   EQU   *\n         USING INFMJFCB,R7\n         LA    R7,JFCB\n         RDJFCB DSETAPE\n         SR    R5,R5\n         IC    R5,JFCBNVOL\n         LA    R6,1\n         CLI   PARM,C'H'\n         BE    WTOR\n         LR    R6,R5\n         LA    R5,1\n         B     WTOR\nLOOP     EQU   *\n         STH   R6,JFCBVLSQ\n         OPEN  (DSETAPE,(INPUT)),TYPE=J\n         EXCP  IOBSNS\n         WAIT  ECB=ECB\n         TM    INPUT+1,X'02'\n         BNZ   REMOUNT\nPROCEED  L     R4,=F'2'\n         TM    JFCBLTYP,X'01'\n         BZ    LOOP1\n         BCTR  R4,0\nLOOP1    EQU   *\n         EXCP  IOBFSF\n         WAIT  ECB=ECB\n         BCT   R4,LOOP1\n         EXCP  IOBWTM\n         WAIT  ECB=ECB\n         EXCP  IOBOUT\n         WAIT  ECB=ECB\n         CLI   ECB,X'7F'\n         BE    ERGAP\n         EXCP  IOBSNS\n         WAIT  ECB=ECB\n         TM    INPUT+4,X'20'\n         BZ    FEHLER\nERGAP    MVI   ERGCCW+4,X'20'\n         L     R4,=F'8'\nEXCP     EXCP  IOBOUT\n         WAIT  ECB=ECB\n         BCT   R4,EXCP\n         EXCP  IOBWTM\n         WAIT  ECB=ECB\nCLOSE    CLOSE DSETAPE\n         LA    R6,1(R6)\n         MVI   ERGCCW+4,X'60'\n         BCT   R5,LOOP\n         L     13,SAVE+4\n        RETURN (14,12),RC=0\nWTOR     WTO   '*** MOUNT TAPES WITH FILE-PROTECT RING AND       ',    *\n               ROUTCDE=(2,7),DESC=(2)\n         WTO   '* REPLY U TO OVERWRITE FILES                     ',    *\n               ROUTCDE=(2,7),DESC=(2)\n         B     LOOP\nREMOUNT  EQU   *\n         CLOSE DSETAPE\n         WTO   '*** THE TAPE HAS NO FILE-PROTECT RING ',ROUTCDE=(7,11)\n         WTO   '* UNLOAD THE TAPE, PUT A PROTECT RING',ROUTCDE=(7,11)\n         WTO   '* ON IT, MOUNT THE TAPE ON THE SAME  ',ROUTCDE=(7,11)\n         MVC   ECB,=F'0'\n         WTOR  '* UNIT AND REPLY   Y    ',REPLY,1,ECB,ROUTCDE=(7,11)\nWAIT     WAIT  ECB=ECB\n         CLI   REPLY,C'Y'\n         BE    LOOP\n         MVC   ECB,=F'0'\n         WTOR  '***  REPLY: Y  ***',REPLY,1,ECB,ROUTCDE=(7,11)\n         B     WAIT\nFEHLER   WTO   '*** ERASE PROGRAMM           ****',ROUTCDE=(2,7,11)\n         WTO   '*** ERROR IN CHANNEL PROGRAMM **',ROUTCDE=(2,7,11)\n         WTO   '** TAPE IS NOT COMPLETELY ERASED    ',ROUTCDE=(2,7,11)\n         CLOSE DSETAPE\n         L     13,SAVE+4\n         ABEND 4090,DUMP\n         DS    0D\nSNSCCW   CCW   X'04',INPUT,X'20',10\nFSFCCW   CCW   X'3F',INPUT,X'20',10\nERGCCW   CCW   X'17',INPUT,X'60',10\nDSECCW   CCW   X'97',INPUT,X'20',10\nWTMCCW   CCW   X'1F',INPUT,X'20',10\nIOBOUT   DC    X'02',4X'00'\n         DC    AL3(ECB)\n         DC    6X'00'\n         DS    CL2\n         DC    X'00'\n         DC    AL3(ERGCCW)\n         DC    X'00'\n         DC    AL3(DSETAPE)\n         DC    4X'00',H'1',10X'00'\nIOBWTM   DC    X'02',4X'00'\n         DC    AL3(ECB)\n         DC    6X'00'\n         DS    CL2\n         DC    X'00'\n         DC    AL3(WTMCCW)\n         DC    X'00'\n         DC    AL3(DSETAPE)\n         DC    4X'00',H'1',10X'00'\nIOBFSF   DC    X'02',4X'00'\n         DC    AL3(ECB)\n         DC    6X'00'\n         DS    CL2\n         DC    X'00'\n         DC    AL3(FSFCCW)\n         DC    X'00'\n         DC    AL3(DSETAPE)\n         DC    4X'00',H'1',10X'00'\nIOBSNS   DC    X'02',4X'00'\n         DC    AL3(ECB)\n         DC    6X'00'\n         DS    CL2\n         DC    X'00'\n         DC    AL3(SNSCCW)\n         DC    X'00'\n         DC    AL3(DSETAPE)\n         DC    4X'00',H'1',10X'00'\nECB      DS    F\nDSETAPE  DCB   DEVD=TA,DSORG=PS,DDNAME=TAPE,MACRF=E,EXLST=EXITJFC\nREPLY    DC    C' '\nPARM     DC    C'F'\n         LTORG\nEXITJFC  DS    0F\n         DC    X'87',AL3(JFCB)\n         DS    0F\nJFCB     DS    CL176\nINPUT    DS    CL10\n         DSECT\n         IEFJFCBN\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DSEORIG": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x05\\x08\\x0f\\x01\\x05\\x08\\x0f\\x12R\\x01\\xa5\\x01\\xa5\\x00\\x00\\xd6\\xd9\\xc9\\xc7\\xd5\\xc1\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2005-03-21T00:00:00", "modifydate": "2005-03-21T12:52:00", "lines": 421, "newlines": 421, "modlines": 0, "user": "ORIGNAL"}, "text": "************************************************************************\n*\nSHORT DESCRIPTION (FOR INCLUSION ON THE INDEX OF THE MVSMOD TAPE)\n*\nPROGRAMM TO ERASE A TAPE STARTING AFTER A GIVEN DATASET UNTIL IT\nREACHES THE REFLECTIVE SPOT, THEREAFTER IT WRITES SOME ERASE GAPS\nTO BE 200 PERCENT SURE.\nTHIS PROGRAMM HANDLES SL AND NL TAPES, AND USES THE DATA-SECURITY-\nERASE HARDWARE COMMAND TO DO THE JOB. NO CHANNEL BUSY, NO CPU-BUSY\nMERELY THE CONTROL UNIT IS BUSY.\n*\n************************************************************************\n*\nLONGER DESCRIPTION\n*\nWITH THIS PROGRAMM YOU CAN ERASE BOTH SL AND NL TAPES.\nALL YOU HAVE TO DO IS SUPPLY THE LAST DATASET NAME THAT\nSHOULD REMAIN ON THE VOLUME.\n*\nTHE PROGRAMM HANDLES ALL POSSIBLE CONDITIONS F.I.\n   IT CHECKS THAT THERE IS A FILE-PROTECT RING ON THE TAPE\n   IT CHECKS THE CONDITION THAT THE FILE ALREADY REACHED THE\n             REFLECTIVE SPOT\n*\nNORMAL OPERATION FOR A MULTI-VOLUME DATASET IS THAT THE\nPROGRAMM TAKES THE LAST VOLUME AND ERASES IT,\nYOU CAN SUPPLY A PARM VALUE OF 'H', IN THAT CASE THE PROGRAMM\nTAKES EVERY VOLUME OF A MULTI-VOLUME DATASET AND ERASES IT,\nTHIS WAS TO HANDLE A SITUATION IN OUR INSTALLATION WHERE A\nPROGRAMM HAD TO WRITE A GIVEN AMOUNT OF BLOCKS ON EVERY SINGLE\nREEL OF A MULTI-VOLUME DATASET AND THEN SWITCHED THE VOLUME\nUSING FORCED-END-OF-VOLUME.\n*\n************************************************************************\n*** SAMPLE JCL TO ERASE A TAPE AFTER A CATALOGUED DATASET\n//DSE   EXEC PGM=XXX\n//SYSUDUMP DD SYSOUT=*\n//TAPE DD DSN=DSNAME,DISP=(OLD,KEEP),UNIT=(TAPE,,DEFER)\n*\n************************************************************************\n*** SAMPLE JCL TO ERASE MULTIPLE VOLUMES OF A\n*** CATALOGUED MULTI-VOLUME DATASET\n*** THAT USED FEOV TO SWITCH VOLUMES BEFORE REACHING THE\n*** REFECTIVE SPOT ON THE VOLUME(S)\n//DSE   EXEC PGM=XXX,PARM='H'\n//SYSUDUMP DD SYSOUT=*\n//TAPE DD DSN=DSNAME,DISP=(OLD,KEEP),UNIT=(TAPE,,DEFER)\n*\n************************************************************************\n*** SAMPLE JCL TO ERASE A TAPE AFTER A NON-CATALOGUED DATASET\n//DSE   EXEC PGM=XXX\n//SYSUDUMP DD SYSOUT=*\n//TAPE DD DSN=DSNAME,DISP=(OLD,KEEP),UNIT=(TAPE,,DEFER),VOL=SER=123456\n*\n************************************************************************\n*\nJOB TO ASSEMBLE AND LINK THE DSE PROGRAMM USING OPEN EXTEND.\nYOU NEED THE SYS1.AMODGEN DATASET.\n*\nTHIS IS THE NORMAL JOB.\n*\n************************************************************************\n//XXX      JOB\n//A   EXEC ASMHCL,MAC2='SYS1.AMODGEN'\n//C.SYSIN DD *\n         MACRO\n&NAME    BEGIN &REG1=3,&REG2=4,&PGM=XXXXXXXX,&DATE=00000000\n&NAME    START\n         STM   14,12,12(13)            SAVE REGISTERS\n         BALR  &REG1,0       LOAD 1ST BASE REGISTER\n         USING *,&REG1,&REG1+1,&REG1+2,&REG1+3\nA0ZE     ST    13,SAVE+4\n         LR    12,13\n         LA    13,SAVE\n         ST    13,8(12)\n         LM    &REG1,&REG2,BASEADDR\n         B     SAVE+72             BRANCH AROUND CONSTANTS\n         DC    CL8'&PGM'           PROGRAM NAME\n         DC    CL8'&DATE'          CREATION DATE\nBASEADDR DC    A(A0ZE,A0ZE+4096,A0ZE+8192,A0ZE+12288)\nSAVE     DS    9D                      SAVEAREA\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         EJECT\n         MEND\nDSEPROG  BEGIN PGM=DSEPROG\n         L     R1,0(R1)\n         LH    R2,0(R1)\n         LTR   R2,R2\n         BZ    NOPARM\n         MVC   PARM,2(R1)\nNOPARM   EQU   *\nWTOR     WTO   '*** MOUNT TAPES WITH FILE-PROTECT RING AND       ',    *\n               ROUTCDE=(2,7),DESC=(2)\n         WTO   '* REPLY U TO OVERWRITE FILES                     ',    *\n               ROUTCDE=(2,7),DESC=(2)\n         USING INFMJFCB,R7\n         LA    R7,JFCB\n         RDJFCB DSETAPE\n         SR    R5,R5\n         IC    R5,JFCBNVOL\n         LA    R6,1\n         CLI   PARM,C'H'\n         BE    LOOP\n         STH   R5,JFCBVLSQ\n         LA    R5,1\n         OPEN  (DSETAPE,(EXTEND)),TYPE=J\n         B     PROCEED\nLOOP     STH   R6,JFCBVLSQ\n         OPEN  (DSETAPE,(INPUT)),TYPE=J\n         EXCP  IOBSNS\n         WAIT  ECB=ECB\n         TM    INPUT+1,X'02'\n         BNZ   REMOUNT\nPROCEED  L     R4,=F'2'\n         TM    JFCBLTYP,X'01'\n         BZ    LOOP1\n         BCTR  R4,R0\nLOOP1    EXCP  IOBFSF\n         WAIT  ECB=ECB\n         BCT   R4,LOOP1\n         EXCP  IOBWTM\n         WAIT  ECB=ECB\n         EXCP  IOBOUT\n         WAIT  ECB=ECB\n         CLI   ECB,X'7F'\n         BE    ERGAP\n         EXCP  IOBSNS\n         WAIT  ECB=ECB\n         TM    INPUT+4,X'20'\n         BZ    FEHLER\nERGAP    MVI   ERGCCW+4,X'20'\n         L     R4,=F'8'\nEXCP     EXCP  IOBOUT\n         WAIT  ECB=ECB\n         BCT   R4,EXCP\n         EXCP  IOBWTM\n         WAIT  ECB=ECB\nCLOSE    CLOSE DSETAPE\n         LA    R6,1(R6)\n         MVI   ERGCCW+4,X'60'\n         BCT   R5,LOOP\n         L     R13,SAVE+4\n        RETURN (14,12),RC=0\nREMOUNT  EQU   *\n         CLOSE DSETAPE\n         WTO   '*** THE MOUNTED TAPE HAS NO FILE-PROTECT RING    ',    *\n               ROUTCDE=(2,7),DESC=(2)\n         WTO   '* UNLOAD THE TAPE, PUT A FILE-PROTECT RING ON IT  ',   *\n               ROUTCDE=(2,7),DESC=(2)\n         WTO   '* AND MOUNT IT ON THE SAME UNIT                ',      *\n               ROUTCDE=(2,7),DESC=(2)\nREPEAT   MVC   ECB,=F'0'\n         WTOR  '* THEN REPLY WITH   Y          ',REPLY,1,ECB,          *\n               ROUTCDE(2,7)\n         WAIT  ECB=ECB\n         CLI   REPLY,C'Y'\n         BE    LOOP\n         B     REPEAT\nFEHLER   WTO   '*** ERASE PROGRAMM           ****',ROUTCDE=(2,7,11)\n         WTO   '*** ERROR IN CHANNEL PROGRAMM **',ROUTCDE=(2,7,11)\n         WTO   '** TAPE IS NOT COMPLETELY ERASED    ',ROUTCDE=(2,7,11)\n         CLOSE DSETAPE\n         L     R13,SAVE+4\n         ABEND 4090,DUMP\n         DS    0D\nSNSCCW   CCW   X'04',INPUT,X'20',10\nFSFCCW   CCW   X'3F',INPUT,X'20',10\nERGCCW   CCW   X'17',INPUT,X'60',10\nDSECCW   CCW   X'97',INPUT,X'20',10\nWTMCCW   CCW   X'1F',INPUT,X'20',10\nIOBOUT   DC    X'02',4X'00'\n         DC    AL3(ECB)\n         DC    6X'00'\n         DS    CL2\n         DC    X'00'\n         DC    AL3(ERGCCW)\n         DC    X'00'\n         DC    AL3(DSETAPE)\n         DC    4X'00',H'1',10X'00'\nIOBWTM   DC    X'02',4X'00'\n         DC    AL3(ECB)\n         DC    6X'00'\n         DS    CL2\n         DC    X'00'\n         DC    AL3(WTMCCW)\n         DC    X'00'\n         DC    AL3(DSETAPE)\n         DC    4X'00',H'1',10X'00'\nIOBFSF   DC    X'02',4X'00'\n         DC    AL3(ECB)\n         DC    6X'00'\n         DS    CL2\n         DC    X'00'\n         DC    AL3(FSFCCW)\n         DC    X'00'\n         DC    AL3(DSETAPE)\n         DC    4X'00',H'1',10X'00'\nIOBSNS   DC    X'02',4X'00'\n         DC    AL3(ECB)\n         DC    6X'00'\n         DS    CL2\n         DC    X'00'\n         DC    AL3(SNSCCW)\n         DC    X'00'\n         DC    AL3(DSETAPE)\n         DC    4X'00',H'1',10X'00'\nECB      DS    F\nDSETAPE  DCB   DEVD=TA,DSORG=PS,DDNAME=TAPE,MACRF=E,EXLST=EXITJFCB\nREPLY    DC    C' '\nPARM     DC    C'F'\n         LTORG\n         DC    F'0'\nEXITJFCB DS    0F\n         DC    X'87'\n         DC    AL3(JFCB)\n         DS    0F\nJFCB     DS    CL176\nINPUT    DS    CL10\n         DSECT\n         IEFJFCBN\n         END\n/*\n//L.SYSLMOD DD DSN=XXX(XXX),DISP=SHR\n************************************************************************\n*\nJOB TO ASSEMBLE AND LINK THE DSE PROGRAMM\nIN CASE OPEN EXTEND DOES NOT WORK IN YOUR INSTALLATION.\n*\n************************************************************************\n//YYY      JOB\n//  EXEC ASMHCL,MAC2='SYS1.AMODGEN'\n//C.SYSIN DD *\n         MACRO\n&NAME    BEGIN &REG1=3,&REG2=4,&PGM=XXXXXXXX,&DATE=00000000\n&NAME    START\n         STM   14,12,12(13)            SAVE REGISTERS\n         BALR  &REG1,0       LOAD 1ST BASE REGISTER\n         USING *,&REG1,&REG1+1,&REG1+2,&REG1+3\nA0ZE     ST    13,SAVE+4\n         LR    12,13\n         LA    13,SAVE\n         ST    13,8(12)\n         LM    &REG1,&REG2,BASEADDR\n         B     SAVE+72             BRANCH AROUND CONSTANTS\n         DC    CL8'&PGM'           PROGRAM NAME\n         DC    CL8'&DATE'          CREATION DATE\nBASEADDR DC    A(A0ZE,A0ZE+4096,A0ZE+8192,A0ZE+12288)\nSAVE     DS    9D                      SAVEAREA\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         EJECT\n         MEND\nDSEPROG  BEGIN PGM=DSEPROG\n         L     R1,0(R1)\n         LH    R2,0(R1)\n         LTR   R2,R2\n         BZ    NOPARM\n         MVC   PARM,2(R1)\nNOPARM   EQU   *\n         USING INFMJFCB,R7\n         LA    R7,JFCB\n         RDJFCB DSETAPE\n         SR    R5,R5\n         IC    R5,JFCBNVOL\n         LA    R6,1\n         CLI   PARM,C'H'\n         BE    WTOR\n         LR    R6,R5\n         LA    R5,1\n         B     WTOR\nLOOP     EQU   *\n         STH   R6,JFCBVLSQ\n         OPEN  (DSETAPE,(INPUT)),TYPE=J\n         EXCP  IOBSNS\n         WAIT  ECB=ECB\n         TM    INPUT+1,X'02'\n         BNZ   REMOUNT\nPROCEED  L     R4,=F'2'\n         TM    JFCBLTYP,X'01'\n         BZ    LOOP1\n         BCTR  R4,0\nLOOP1    EQU   *\n         EXCP  IOBFSF\n         WAIT  ECB=ECB\n         BCT   R4,LOOP1\n         EXCP  IOBWTM\n         WAIT  ECB=ECB\n         EXCP  IOBOUT\n         WAIT  ECB=ECB\n         CLI   ECB,X'7F'\n         BE    ERGAP\n         EXCP  IOBSNS\n         WAIT  ECB=ECB\n         TM    INPUT+4,X'20'\n         BZ    FEHLER\nERGAP    MVI   ERGCCW+4,X'20'\n         L     R4,=F'8'\nEXCP     EXCP  IOBOUT\n         WAIT  ECB=ECB\n         BCT   R4,EXCP\n         EXCP  IOBWTM\n         WAIT  ECB=ECB\nCLOSE    CLOSE DSETAPE\n         LA    R6,1(R6)\n         MVI   ERGCCW+4,X'60'\n         BCT   R5,LOOP\n         L     13,SAVE+4\n        RETURN (14,12),RC=0\nWTOR     WTO   '*** MOUNT TAPES WITH FILE-PROTECT RING AND       ',    *\n               ROUTCDE=(2,7),DESC=(2)\n         WTO   '* REPLY U TO OVERWRITE FILES                     ',    *\n               ROUTCDE=(2,7),DESC=(2)\n         B     LOOP\nREMOUNT  EQU   *\n         CLOSE DSETAPE\n         WTO   '*** THE TAPE HAS NO FILE-PROTECT RING ',ROUTCDE=(7,11)\n         WTO   '* UNLOAD THE TAPE, PUT A PROTECT RING',ROUTCDE=(7,11)\n         WTO   '* ON IT, MOUNT THE TAPE ON THE SAME  ',ROUTCDE=(7,11)\n         MVC   ECB,=F'0'\n         WTOR  '* UNIT AND REPLY   Y    ',REPLY,1,ECB,ROUTCDE=(7,11)\nWAIT     WAIT  ECB=ECB\n         CLI   REPLY,C'Y'\n         BE    LOOP\n         MVC   ECB,=F'0'\n         WTOR  '***  REPLY: Y  ***',REPLY,1,ECB,ROUTCDE=(7,11)\n         B     WAIT\nFEHLER   WTO   '*** ERASE PROGRAMM           ****',ROUTCDE=(2,7,11)\n         WTO   '*** ERROR IN CHANNEL PROGRAMM **',ROUTCDE=(2,7,11)\n         WTO   '** TAPE IS NOT COMPLETELY ERASED    ',ROUTCDE=(2,7,11)\n         CLOSE DSETAPE\n         L     13,SAVE+4\n         ABEND 4090,DUMP\n         DS    0D\nSNSCCW   CCW   X'04',INPUT,X'20',10\nFSFCCW   CCW   X'3F',INPUT,X'20',10\nERGCCW   CCW   X'17',INPUT,X'60',10\nDSECCW   CCW   X'97',INPUT,X'20',10\nWTMCCW   CCW   X'1F',INPUT,X'20',10\nIOBOUT   DC    X'02',4X'00'\n         DC    AL3(ECB)\n         DC    6X'00'\n         DS    CL2\n         DC    X'00'\n         DC    AL3(ERGCCW)\n         DC    X'00'\n         DC    AL3(DSETAPE)\n         DC    4X'00',H'1',10X'00'\nIOBWTM   DC    X'02',4X'00'\n         DC    AL3(ECB)\n         DC    6X'00'\n         DS    CL2\n         DC    X'00'\n         DC    AL3(WTMCCW)\n         DC    X'00'\n         DC    AL3(DSETAPE)\n         DC    4X'00',H'1',10X'00'\nIOBFSF   DC    X'02',4X'00'\n         DC    AL3(ECB)\n         DC    6X'00'\n         DS    CL2\n         DC    X'00'\n         DC    AL3(FSFCCW)\n         DC    X'00'\n         DC    AL3(DSETAPE)\n         DC    4X'00',H'1',10X'00'\nIOBSNS   DC    X'02',4X'00'\n         DC    AL3(ECB)\n         DC    6X'00'\n         DS    CL2\n         DC    X'00'\n         DC    AL3(SNSCCW)\n         DC    X'00'\n         DC    AL3(DSETAPE)\n         DC    4X'00',H'1',10X'00'\nECB      DS    F\nDSETAPE  DCB   DEVD=TA,DSORG=PS,DDNAME=TAPE,MACRF=E,EXLST=EXITJFC\nREPLY    DC    C' '\nPARM     DC    C'F'\n         LTORG\nEXITJFC  DS    0F\n         DC    X'87',AL3(JFCB)\n         DS    0F\nJFCB     DS    CL176\nINPUT    DS    CL10\n         DSECT\n         IEFJFCBN\n         END\n/*\n//L.SYSLMOD DD DSN=XXX,DISP=SHR\n//L.SYSIN DD *\n NAME XXX(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT715/FILE715.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT715", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}