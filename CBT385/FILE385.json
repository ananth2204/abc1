{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011907000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE385.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE385.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\x0c'", "DS1TRBAL": "b'#\\x98'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x02\\xc2\\x00\\x0e\\x02\\xc3\\x00\\x01\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"LPACOMP": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "LPACOMP  TITLE 'LPALIB COMPARE PROGRAM'\n***********************************************************************\n*                                                                     *\n*                      LPACOMP                                        *\n*                                                                     *\n*        JERRY LAWSON                                                 *\n*        HARTFORD INSURANCE GROUP                                     *\n*        690 ASYLUM AVENUE                                            *\n*        HARTFORD CT. 06115                                           *\n*        203-547-5000   X2960                                         *\n*                                                                     *\n*        THIS PROGRAM IS DESIGNED TO COMPARE TWO COPIES               *\n*        OF LPALIB AND REPORT ON DIFFERENCES IN THEM.                 *\n*        IT ALSO COMPARES ONE OF THE LPALIB COPIES TO LINKLIB         *\n*        TO REPORT ON DUPLICATE MEMBERS. JCL IS AS FOLLOWS:           *\n*              OLDLPA   - POINTS TO THE 'OLD' COPY OF LPALIB          *\n*              NEWLPA   - POINTS TO THE 'NEW' COPY OF LPALIB          *\n*              LINKLIB  - OPTIONAL, POINTS TO A COPY OF LINKLIB       *\n*                     THAT IS COMPARED TO THE NEWLPA DD. IF NOT       *\n*                      DESIRED, DUMMY THIS DD STATEMENT.\n*              REPORT1  - MEMBERS IN OLDLPA THAT ARE NOT IN THE       *\n*                     THE NEWLPA                                      *\n*              REPORT2  - MEMBERS IN NEWLPA THAT ARE NOT IN THE       *\n*                     OLDLPA                                          *\n*              REPORT 3  - DUPLICATE MEMBERS BETWEEN LPALIB AND       *\n*                     LINKLIB                                         *\n*              REPORT4  - CHANGES IN MODULE LENGTH OF MEMBERS THAT    *\n*                     OCCUR IN BOTH OLDLPA AND NEWLPA.                *\n*        ALL REPORTS GIVE MODULE SIZE, INDICATE ALIAS ENTRIES,        *\n*              (NO SIZE GIVEN FOR ALIASES, AND REPORT ON TOTAL        *\n*              DIFFERENCES. REPORT 4 WILL SHOW THE DIFFENCE IN SIZE   *\n*              OF TWO COPIES OF THE SAME MODULE, AND WILL REPORT      *\n*              ON THE TOTAL SIZE DIFFERENCE OF THE MODULES LISTED.    *\n*                                                                     *\n*                                                                     *\n*                       NOTE                                          *\n*        WE ARE A JES3 SHOP, AND SO I USED THE JES3 MACRO             *\n*        IATYREG FOR REGISTER EQUATES. IF YOU ARE NOT JES3,           *\n*        YOU HAVE MY SYMPATHY, ALSO I SUGGEST YOU CHANGE THE          *\n*        MACRO STATEMENT (NEXT TO LAST LINE OF PROGRAM)               *\n*        TO SOMETHING YOU FEEL BETTER ABOUT, OR INSERT                *\n*        SOME EQUATES FOR R1   EQU  1, ETC                            *\n*                                                                     *\n*          SAMPLE JCL FOLLOWS :                                       *\n*                                                                     *\n*//SYMF0099 JOB SY212ZZJWL1100A035,' ** JERRY LAWSON **',MSGCLASS=1,\n*// MSGLEVEL=1,NOTIFY=       TSSY99,REGION=300K\n*//*\n*//*\n*//*                         TSSY99.SYSTEM.CNTL(LPACOMP)\n*//*\n*//*\n*//*\n*//STEP1    EXEC PGM=LPACOMP\n*//STEPLIB  DD  DSN=TECH.SY.SMPLIBN,DISP=SHR,UNIT=D,VOL=SER=SYSJN0\n*//OLDLPA   DD  DSN=SYS1.LPALIB,VOL=SER=SYSR8B,UNIT=D,DISP=SHR\n*//NEWLPA   DD  DSN=SYS1.LPALIB,VOL=SER=SYSRC0,UNIT=D,DISP=SHR\n*//LINKLIB  DD  DSN=SYS1.LINKLIB,VOL=SER=SYSRC0,UNIT=D,DISP=SHR\n*//REPORT1  DD  SYSOUT=*\n*//REPORT2  DD  SYSOUT=*\n*//REPORT3  DD  SYSOUT=*\n*//REPORT4  DD  SYSOUT=*\n*//SYSUDUMP DD  SYSOUT=*\n*//\n*                                                                     *\n***********************************************************************\nLPACOMP  CSECT\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         USING LPACOMP,R12\n*        IATYMOD BR=YES,LEVEL=R1.2\n         LA    R11,SAVE\n         ST    R13,SAVE+4\n         ST    R11,8(R13)\n         LR    R13,R11\n         OPEN  (INDCB1,INPUT,INDCB2,INPUT,INDCB3,INPUT)\n         OPEN  (OUTDCB1,OUTPUT,OUTDCB2,OUTPUT,OUTDCB3,OUTPUT)\n         OPEN  (OUTDCB4,OUTPUT)\n         BAL   R10,GETOLPA         READ FIRST OLD LPA MEMBER\n         BAL   R10,GETNLPA         READ FIRST NEW LPA MEMBER\n         BAL   R10,GETLINK         READ FIRST LINKLIB MEMBER\n         EJECT\nCOMPLPA  EQU   *\n         CLC   0(8,R4),0(R2)       NEWLPA = OLDLPA?\n         BH    OLDLPA              NEW HIGHER THAN OLD - DO OLD\n         BL    NEWLPA              NEW LOWER THAN OLD - DO NEW\n         CLI   0(R4),X'FF'         EQUAL - THEN LAST VALID MEMBER?\n         BE    EOF                 YES - THEN WE'RE DONE\n         TM    11(R2),X'80'        OLD LPA AN ALIAS?\n         BO    LINKCHK             YES - BYPASS THIS FUN\n         TM    11(R4),X'80'        NEW LPA AN ALIAS?\n         BO    LINKCHK             YES - DISREGARD OLD\n         CLC   22(3,R2),22(R4)     LENGTHS EQUAL?\n         BE    LINKCHK             YES - THEN WE DONT WANT THIS GUY\n         MVC   OMEM,0(R2)          NO - THEN WRITE OUT - GET NAME\n         UNPK  OLENT(7),22(4,R2)   GET OLD LENGTH\n         TR    OLENT+0(6),TRTAB-240 MAKE IT PRINTABLE\n         MVI   OLENT+6,C','        INSERT COMMA IN MESSAGE\n         UNPK  NLENT(7),22(4,R4)   GET NEW LENGTH\n         TR    NLENT+0(6),TRTAB-240 MAKE IT PRINTABLE\n         MVI   NLENT+6,C' '        CLEAR OUT THE JUNK\n         CP    DLC,=P'0'           ANYTHING WRITTEN YET?\n         BE    DHDR                NO - GO WRITE HEADERS\n         CP    DLC,=P'58'          WHAT ABOUT A FULL PAGE?\n         BH    DHDR                YES - THEN GO WRITE IT\nLINE     EQU   *\n         PUT   OUTDCB4,DUPMSG      WRITE OUT DATA LINE\n         AP    DLC,TWO             ADD TO LINE COUNT\n         XR    R8,R8               CLEAR WORK\n         XR    R11,R11                        REGISTERS\n         ICM   R11,7,22(R4)        GET NEW LPA LENGTH\n         ICM   R8,7,22(R2)         GET OLD LPA LENGTH\n         SR    R11,R8              CALCULATE GROWTH\n         L     R8,TOTDIFF          GET SIZE CHANGE TO DATE\n         AR    R8,R11              CALCULATE NEW TOTAL CHANGE\n         ST    R8,TOTDIFF          SAVE FOR LATER\n         B     LINKCHK             ON WITH THE SHOW\nDHDR     EQU   *\n         PUT   OUTDCB4,DUPHDR      WRITE HEADER MSG\n         ZAP   DLC,TWO             RESET LINE COUNT\n         B     LINE                GO WRITE DATA LINE\n         SPACE 2\nLINKCHK  EQU   *\n         BAL   R9,LINKCOMP         NO - THEN SEE IF IT IS IN LINKLIB\n         BAL   R9,OLPALOOP         GET NEXT OLD LPA MEMBER\n         BAL   R9,NLPALOOP         GET NEXT NEW LPA MEMBER\n         B     COMPLPA             BACK AND DO IT AGAIN\n         SPACE 3\nOLDLPA   EQU   *\n         CP    OLDLC,=P'0'         ANYTHING WRITTEN YET\n         BE    OLDHDR              NO - GO WRITE HDR\n         CP    OLDLC,=P'58'        PAGE FULL?\n         BNH   OLDOK               NO - THEN GO WRITE DATALINE\nOLDHDR   EQU   *\n         PUT   OUTDCB1,OHDR        WRITE THE HEADER\n         ZAP   OLDLC,TWO           INITIALIZE THE COUNTER\nOLDOK    EQU   *\n         MVC   DATA+0(8),0(R2)     MOVE IN THE DATA\n         TM    11(R2),X'80'        IS THIS AN ALIAS?\n         BO    OALIAS              YES - SKIP LENGTH PRINT\n         TM    30(R2),X'80'        MEMBER PROCESSED BY IEWL?\n         BNO   OLDPUT              NO - THEN DATA QUESTIONABLE - SKIP\n         UNPK  LENGTH(7),22(4,R2)  CHANGE DATA FORMAT\n         TR    LENGTH+0(6),TRTAB-240 MAKE IT PRINTABLE\n         MVI   LENGTH+6,C' '       CLEAR OUT THE LAST BYTE OF TRASH\n         L     R8,OLEN             GET TOTAL LENGTH TO DATE\n         XR    R11,R11             CLEAR WORK REG\n         ICM   R11,7,22(R2)        GET LENGTH THIS MODULE\n         AR    R8,R11              ADD TO TOTAL\n         ST    R8,OLEN             SAVE UPDATED LENGTH\n         B     OLDPUT              BRANCH AROUND ALIAS FLAG\nOALIAS   EQU   *\n         MVC   ALIAS,=C'ALIAS'     SHOW THAT THIS IS AN ALIAS\nOLDPUT   EQU   *\n         PUT   OUTDCB1,DATALINE    WRITE OUT THE OFFENDER\n         MVC   ALIAS,=C'     '     UNCONDITIONALLY CLEAR THE FIELD\n         MVC   LENGTH,=C'       '  UNCONDITIONALLY CLEAR THE FIELD\n         AP    OLDLC,TWO           ADD TO THE LINE COUNT\n         BAL   R9,OLPALOOP         POINT TO NEXT OLD LPA MEMBER\n         B     COMPLPA             BACK AND TRY AGAIN\n         SPACE 3\nNEWLPA   EQU   *\n         CP    NEWLC,=P'0'         ANYTHING WRITTEN YET?\n         BE    NEWHDR              NO - THEN GO WRITE THE HDR\n         CP    NEWLC,=P'58'        IS THE PAGE FULL?\n         BNH   NEWOK               NO - SKIP HDR PUT\nNEWHDR   EQU   *\n         PUT   OUTDCB2,NHDR        WRITE THE HEADER\n         ZAP   NEWLC,TWO           INITIALIZE THE COUNTER\nNEWOK    EQU   *\n         MVC   DATA+0(8),0(R4)     MOVE IN THE DATA\n         TM    11(R4),X'80'        IS THIS AN ALIAS?\n         BO    NALIAS              YES - THEN GO FLAG AS SUCH\n         TM    30(R4),X'80'        MEMBER CREATED BY IEWL?\n         BNO   NEWPUT              NO - SKIP LENGTH CALC\n         UNPK  LENGTH(7),22(4,R4)  CHANGE FORMAT\n         TR    LENGTH+0(6),TRTAB-240 MAKE IT PRINTABLE\n         MVI   LENGTH+6,C' '       CLEAR OUT TRASH BYTE\n         L     R8,NLEN             GET TOTAL LENGTH TO DATE\n         XR    R11,R11             CLEAR WORK REG\n         ICM   R11,7,22(R4)        GET LENGTH THIS MEMBER\n         AR    R8,R11              CALCULATE NEW TOTAL LENGTH\n         ST    R8,NLEN             SAVE IT\n         B     NEWPUT              BRANCH AROUND ALIAS STUFF\nNALIAS   EQU   *\n         MVC   ALIAS,=C'ALIAS'     INDICATE AN ALIAS\nNEWPUT   EQU   *\n         PUT   OUTDCB2,DATALINE    WRITE OUT THE OFFENDER\n         MVC   ALIAS,=C'     '     CLEAR IT OUT EITHER WAY\n         MVC   LENGTH,=C'       '  CLEAR IT OUT EITHER WAY\n         AP    NEWLC,TWO           ADD TO THE LINE COUNT\n         BAL   R9,LINKCOMP         GO CHECK AGAINST LINKLIB\n         BAL   R9,NLPALOOP         GO GET NEXT NEW LPA MEMBER\n         B     COMPLPA             BACK TO THE HEAD\n         TITLE 'SUBROUTINES AND MORE SUBROUTINES'\nOLPALOOP EQU   *\n         CLI   0(R2),X'FF'         LAST VALID DIRECTORY ENTRY?\n         BE    OLOOPEND            YES - LEAVE THE SCENE\n         LA    R2,11(R2)           POINT TO USER HALFWORD INFO\n         SH    R3,=H'12'           SUBTRACT LENGTH OF BASE ENTRY\n         IC    R11,0(R2)           INSERT USER HALFWORD DATA\n         N     R11,=X'0000001F'    TURN OFF ALL BUT LAST 5 BITS\n         SLA   R11,1                MULTIPLY BY 2\n         SR    R3,R11              SUBTRACT LENGTH OF HALFWORDS\n         LA    R2,1(R2)            POINT TO BEGINNING OF USER DATA\n         AR    R2,R11              SKIP OVER USER DATA\n         C     R3,=F'0'            END OF BLOCK?\n         BH    OLOOPEND            NO - ON TO THE RETURN\n         BAL   R10,GETOLPA         YES - GO GET NEXT BLOCK\nOLOOPEND EQU   *\n         BR    R9                  RETURN TO CALLER\n         SPACE 3\nGETOLPA  EQU   *\n         GET   INDCB1\n         LR    R2,R1               SAVE BUFFER POINTER\n         LH    R3,0(R2)            LOAD LENGTH OF THIS DIR. BLOCK\n         LA    R2,2(R2)            POINT TO FIRST ENTRY\n         SH    R3,=H'2'            SUBTRACT LENGTH OF LENGTH\n         BR    R10                 RETURN TO CALLER\n         SPACE 3\nNLPALOOP EQU   *\n         CLI   0(R4),X'FF'         LAST GOOD MEMBER?\n         BE    NLOOPEND            YES - THEN SKIP ALL THIS JUNK\n         LA    R4,11(R4)           NO - THEN POINT TO USER HALFWORDS\n         SH    R5,=H'12'           SUBTRACT LENGTH OF BASE ENTRY\n         IC    R11,0(R4)           INSERT USER HALFWORD DATA\n         N     R11,=X'0000001F'    CLEAR OUT THE EXTRAS\n         SLA   R11,1               MULTIPLY BY 2\n         SR    R5,R11              SUBTRACT LENGTH OF HALFWORDS\n         LA    R4,1(R4)            POINT TO BEGINNING OF USER DATA\n         AR    R4,R11              SKIP OVER USER HALFWORDS\n         C     R5,=F'0'            ANYTHING LEFT IN BLOCK?\n         BH    NLOOPEND            YES - THEN OFF TO THE RETURN\n         BAL   R10,GETNLPA         NO - THEN GET NEW BLOCK\nNLOOPEND EQU   *\n         BR    R9                  RETURN TO CALLER\n         SPACE 3\nGETNLPA  EQU   *\n         GET   INDCB2              GET NEXT BLOCK\n         LR    R4,R1               POINT TO BEGINNING OF BLOCK\n         LH    R5,0(R4)            GET LENGTH OF BLOCK\n         LA    R4,2(R4)            POINT TO FIRST MEMBER\n         SH    R5,=H'2'            SUBTRACT LENGTH OF LENGTH\n         BR    R10                 RETURN TO CALLER\n         SPACE 3\nLINKLOOP EQU   *\n         CLI   0(R6),X'FF'         LAST GOOD MEMBER?\n         BE    LINKEND             YES - THEN SKIP ALL THE FUN\n         TM    FLAG1,EOFLINK       EOF ON LINKLIB?\n         BO    LINKEND             SKIP THE PARTY\n         LA    R6,11(R6)           NO - THEN POINT TO USER INFO\n         SH    R7,=H'12'           SUBTRACT LENGTH OF BASE ENTRY\n         IC    R11,0(R6)           GET USER HALFWORD DATA\n         N     R11,=X'0000001F'    TURN OFF ALL THE JUNK\n         SLA   R11,1               MULTIPLY BY 2\n         SR    R7,R11              SUBTRACT LENGTH OF USER HALFWORDS\n         LA    R6,1(R6)            POINT TO THE USER HALFWORDS\n         AR    R6,R11              SKIP OVER THE USER DATA\n         C     R7,=F'0'            ANYTHING LEFT IN THIS BLOCK?\n         BH    LINKEND             YES - THEN RETURN TO CALLER\n         BAL   R10,GETLINK         NO - THEN GET ANOTHER BLOCK\nLINKEND  EQU   *\n         BR    R9                  RETURN TO CALLER\n         SPACE 3\nGETLINK  EQU   *\n         GET   INDCB3\n         LR    R6,R1               SAVE BUFFER ADDRESS\n         LH    R7,0(R6)            GET LENGTH OF BUFFER\n         LA    R6,2(R6)            POINT TO FIRST ENTRY\n         SH    R7,=H'2'            SUBTRACT LENGTH OF LENGTH\n         BR    R10                 RETURN TO CALLER\n         SPACE 3\nLINKCOMP EQU   *\n         CLC   0(8,R4),0(R6)       MEMBER IN LINKLIB?\n         BL    LINKCEND            LOW = NO, GOOD - THEN GO TO RETURN\n         BH    LINKNEXT            HIGH = ? - GET NEXT LINK MEMBER\n         BAL   R10,LINKPUT         MATCH - TELL THE WORLD\n         B     LINKEND             BACK TO CALLER\nLINKNEXT EQU   *\n         LR    R8,R9               SAVE RETURN REGISTER\n         BAL   R9,LINKLOOP         GO GET NEXT MEMBER\n         LR    R9,R8               RESTORE RETURN REGISTER\n         TM    FLAG1,EOFLINK       EOF ON LINKLIB?\n         BO    LINKCEND            SKIP THE PARTY\n         B     LINKCOMP            BACK TO TOP OF SUBROUTINE\nLINKCEND EQU   *\n         BR    R9                  RETURN TO CALLER\n         SPACE 3\nLINKPUT  EQU   *\n         CP    LINKLC,=P'0'        ANYTHING WRITTEN YET?\n         BE    LINKHDR             NO - THEN GO WRITE HDR\n         CP    LINKLC,=P'58'       PAGE FULL?\n         BNH   LINKOK              NO - THEN GO WRITE DATA\nLINKHDR  EQU   *\n         PUT   OUTDCB3,LHDR        WRITE THE HEADER\n         ZAP   LINKLC,TWO          INITIALIZE THE COUNTER\nLINKOK   EQU   *\n         MVC   DATA+0(8),0(R6)     MOVE IN MEMBER NAME\n         TM    11(R6),X'80'        IS THIS AN ALIAS?\n         BO    LALIAS              YES - THEN GO FLAG AS SUCH\n         TM    30(R6),X'80'        MEMBER CREATED BY IEWL?\n         BNO   LINKPUTL            NO - SKIP LENGTH CALC\n         UNPK  LENGTH(7),22(4,R6)  CHANGE FORMAT\n         TR    LENGTH+0(6),TRTAB-240 MAKE IT PRINTABLE\n         MVI   LENGTH+6,C' '       CLEAR OUT TRASH BYTE\n         L     R8,LLEN             GET TOTAL LENGTH TO DATE\n         XR    R11,R11             CLEAR WORK REG\n         ICM   R11,7,22(R6)        GET LENGTH THIS MEMBER\n         AR    R8,R11              CALCULATE NEW TOTAL LENGTH\n         ST    R8,LLEN             SAVE IT\n         B     LINKPUTL            BRANCH AROUND ALIAS STUFF\nLALIAS   EQU   *\n         MVC   ALIAS,=C'ALIAS'     YES - INDICATE ALIAS\nLINKPUTL EQU   *\n         PUT   OUTDCB3,DATALINE    WRITE OUT THE DATA\n         MVC   ALIAS,=C'     '     CLEAR THE FIELD ALWAYS\n         MVC   LENGTH,=C'       '  CLEAR THE FIELD ALWAYS\n         AP    LINKLC,TWO          ADD TO LINE COUNTER\n         BR    R10                 RETURN TO CALLER\n         EJECT\nLINKEOF  EQU   *\n         UNPK  LENGTH(7),LLEN+1(4) CHANGE FORMATS\n         TR    LENGTH+0(6),TRTAB-240 MAKE IT PRINTABLE\n         MVI   LENGTH+6,C' '       CLEAR OUT THE GARBAGE\n         PUT   OUTDCB3,DATALINE\n         OI    FLAG1,EOFLINK       SHOW EOF/NULLFILE\n         BR    R10                 RETURN TO CALLER\nOLPAEOF  EQU   *\nNLPAEOF  EQU   *\nEOF      EQU   *\n         MVC   DATA+0(14),=C'TOTAL LENGTH =' INSERT TITLE\n         UNPK  LENGTH(7),OLEN+1(4) CHANGE FORMATS\n         TR    LENGTH+0(6),TRTAB-240 MAKE IT PRINTABLE\n         MVI   LENGTH+6,C' '       CLEAR OUT THE GARBAGE\n         PUT   OUTDCB1,DATALINE\n         UNPK  LENGTH(7),NLEN+1(4) CHANGE FORMATS\n         TR    LENGTH+0(6),TRTAB-240 MAKE IT PRINTABLE\n         MVI   LENGTH+6,C' '       CLEAR OUT THE GARBAGE\n         PUT   OUTDCB2,DATALINE\n         TM    FLAG1,EOFLINK       HAVE WE REACHED EOF ON LINKLIB?\n         BO    LINKDONE            YES - BRANCH AROUND BAL\n         BAL   R10,LINKEOF         GO WRITE OUT LAST LINE\nLINKDONE EQU   *\n         CP    DLC,=P'0'           ANY LENGTH CHANGES?\n         BNE   HDROK               YES - SKIP HEADER WRITE\n         PUT   OUTDCB4,DUPHDR\nHDROK    EQU   *\n         L     R8,TOTDIFF          GET TOTAL LENGTH DIFFERENCE\n         C     R8,=F'0'            IS NET CHANGE NEGATIVE?\n         BNL   POS                 NO - BRANCH AROUND SIGN CHANGE\n         MH    R8,=H'-1'           FORCE SIGN CHANGE\n         MVI   SIGN+0,C'-'         INSERT MINUS SIGN\n         ST    R8,TOTDIFF          REPLACE WITH POSITIVE NUMBER\nPOS      EQU   *\n         UNPK  INCLEN(7),TOTDIFF+1(4) CHANGE FORMATS\n         TR    INCLEN+0(6),TRTAB-240 MAKE IT PRINTABLE\n         MVI   INCLEN+6,C' '       CLEAN UP OUR ACT\n         PUT   OUTDCB4,INCMESS\n         CLOSE INDCB1\n         CLOSE INDCB2\n         CLOSE INDCB3\n         CLOSE OUTDCB1\n         CLOSE OUTDCB2\n         CLOSE OUTDCB3\n         CLOSE OUTDCB4\n         CP    OLDLC,=P'0'         ANY UNIQUE MEMBERS HERE?\n         BNE   SETRC4              YES - THEN OUT\n         CP    NEWLC,=P'0'         HOW ABOUT HERE?\n         BNE   SETRC4              YES - THEN OUT\n         CP    LINKLC,=P'0'        ANY DUPS IN LINKLIB?\n         BNE   SETRC4              YES - THEN SHOW IT\n         SR    R15,R15             NO - THEN SET 0 RETURN CODE\n         B     RESTORE             BRANCH AROUND SETRC4\nSETRC4   EQU   *\n         LA    R15,4               SET RETURN CODE OF 4\nRESTORE  EQU   *\n         L     R13,SAVE+4\n         L     R14,12(R13)         RESTORE REG 14\n         LM    R0,R12,20(R13)      RESTORE 0 - 12\n         BR    R14                 RETURN TO CALLER\n         EJECT\nINDCB1   DCB   DSORG=PS,MACRF=GL,DDNAME=OLDLPA,RECFM=FB,LRECL=256,     X\n               BLKSIZE=256,EODAD=OLPAEOF\n         EJECT\nINDCB2   DCB   DSORG=PS,MACRF=GL,DDNAME=NEWLPA,RECFM=FB,LRECL=256,     X\n               BLKSIZE=256,EODAD=NLPAEOF\n         EJECT\nINDCB3   DCB   DSORG=PS,MACRF=GL,DDNAME=LINKLIB,RECFM=FB,LRECL=256,    X\n               BLKSIZE=256,EODAD=LINKEOF\n         EJECT\nOUTDCB1  DCB   DSORG=PS,MACRF=PM,DDNAME=REPORT1,RECFM=VBA,LRECL=137,   X\n               BLKSIZE=4000\n         EJECT\nOUTDCB2  DCB   DSORG=PS,MACRF=PM,DDNAME=REPORT2,RECFM=VBA,LRECL=137,   X\n               BLKSIZE=4000\n         EJECT\nOUTDCB3  DCB   DSORG=PS,MACRF=PM,DDNAME=REPORT3,RECFM=VBA,LRECL=137,   X\n               BLKSIZE=4000\n         EJECT\nOUTDCB4  DCB   DSORG=PS,MACRF=PM,DDNAME=REPORT4,RECFM=VBA,LRECL=137,   X\n               BLKSIZE=4000\n         TITLE 'CONSTANTS AND DATA AREAS'\nSAVE     DS    18F\nFLAG1    DC      XL1'00'           USER FLAGS\nEOFLINK  EQU     X'80'             EOF ON LINKLIB DD HAS BEEN REACHED\nTWO      DC      PL1'2'\nOLDLC    DC      PL2'0'\nNEWLC    DC      PL2'0'\nLINKLC   DC      PL2'0'\nDLC      DC      PL2'0'\nTRTAB    DC      CL16'0123456789ABCDEF'\n         DS     0F\nOLEN     DC      F'0'\nNLEN     DC      F'0'\nLLEN     DC      F'0'\nTOTDIFF  DC      F'0'\nDATALINE DC      AL2(DATAEND-DATALINE)\n         DC      H'0'\n         DC      CL1'0'\nDATA     DS      CL8\n         DC      CL1' '\nALIAS    DC      CL5'     '\n         DC      CL1' '\nLENGTH   DC      CL7'       '\nDATAEND EQU    *\n         DS     0F\nOHDR     DC      AL2(OLDEND-OHDR)\n         DC      H'0'\n         DC      CL1'1'\n         DC      C'MEMBERS IN DD OLDLPA THAT ARE NOT IN DD NEWLPA'\nOLDEND   EQU   *\n         DS     0F\nNHDR     DC      AL2(NEWEND-NHDR)\n         DC      H'0'\n         DC      CL1'1'\n         DC      C'MEMBERS IN DD NEWLPA THAT ARE NOT IN DD OLDLPA'\nNEWEND   EQU   *\n         DS     0F\nLHDR     DC      AL2(LINKHEND-LHDR)\n         DC      H'0'\n         DC      CL1'1'\n         DC      C'DUPLICATE MEMBERS BETWEEN DD NEWLPA AND LINKLIB'\nLINKHEND EQU   *\n         DS     0F\nDUPHDR   DC      AL2(DUPEND-DUPHDR)\n         DC      H'0'\n         DC      CL1'1'\n         DC      C'LPALIB MEMBERS WHOSE LENGTH HAS CHANGED'\nDUPEND   EQU   *\n         DS     0F\nDUPMSG   DC      AL2(DUPENDM-DUPMSG)\n         DC      H'0'\n         DC      CL1'0'\nOMEM     DC      CL8'        '\n         DC      C' OLD LENGTH IS '\nOLENT    DC      CL7'       '\n         DC      C' NEW LENGTH IS '\nNLENT    DC      CL7'       '\nDUPENDM  EQU   *\nINCMESS  DC      AL2(INCEND-INCMESS)\n         DC      H'0'\n         DC      CL1'0'\n         DC      CL24'INCREASE IN LPA SIZE IS '\nSIGN     DC      CL1' '\nINCLEN   DC      CL7'       '\nINCEND   EQU   *\n         SPACE 5\n*        IATYREG                   SYS1.AJES3MAC\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\nRA       EQU   10\nRB       EQU   11\nRC       EQU   12\nRD       EQU   13\nRE       EQU   14\nRF       EQU   15\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT385/FILE385.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT385", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}