
 OVERVIEW:
  PLEASE READ THIS ENTIRE MEMBER FIRST, AND THEN BEGIN THE INSTALL -
  MEMBERS INST01 - INST04 ARE PROVIDED AS A STEP BY STEP GUIDE.


  THE STLSPACE OR SIMPLY LSPACE COMMAND CONSISTS OF;
      TWO MEMBERS TO BE ASSEMBLED

          STUCBSCN  AND STLSPACE


      AND ONE PANEL MEMBER TO BE ADDED TO THE ISPPLIB CONCATENATION.

          STLSTB01

===========================================================================

  THE ASSEMBLER MODULES SHOULD BOTH BE ASSEMBLED AS
       "AMODE=24,RMODE=24,AC=1,REUS=REFR"
  THERE ARE PUNCH STATEMENTS IN EACH MODULE TO SET THE PROPER OPTIONS,
  JUST MAKE SURE THEY ARE NOT OVERRIDEN, OR CHANGED, YOU WILL STILL NEED TO
  PROVIDE AN ENTRY AND NAME STATEMENT FOR EACH MODULE IN YOUR ASMLNK JCL:

    SAMPLE JCL TO ASSEMBLE STUCBSCN IS IN MEMBER @INST01.
    MAKE JCL CHANGES AS NEEDED, INCLUDING REPLACING THE JOBCARD.

    SAMPLE JCL TO ASSEMBLE STLSPACE IS IN MEMBER @INST02.
    MAKE JCL CHANGES AS NEEDED, INCLUDING REPLACING THE JOBCARD.


  MEMBER STUCBSCN SHOULD BE ASSEMBLED FIRST - IT IS INCLUDED BY STLSPACE.


  THE MODULES SHOULD BE ASSEMBLED INTO AN APF AUTHORIZED LIBRARY
  THAT IS ACCESSABLE FROM WITHIN THE ISPF ENVIRONMENT - YOU CAN PUT
  THEM IN THE ISPPLIB CONCATENATION OR ANY LINKLISTED LIBRARY.

  WHEN YOU ASSEMBLE YOU WILL NEED TO REFERENCE YOUR SYSTEM LIBRARIES,
  SPECIFICALLY MAKE SURE THE FOLLOWING ARE IN THE SYSLIB CONCATENATION -
      MACLIB,  MODGEN,  AND SASMMAC2 - CHECK WITH YOUR SYSPROG TO WEE WHAT
  THE ACTUAL NAMES OF THE LIBRARIES ARE IN YOUR SHOP.  THEY MAY NOT MATCH
  WHAT WAS USED WHEN MY SYSTEM WAS BUILT.



** MACRO DEFINITIONS ARE ALL EMBEDDED WITHIN THE SOURCE SO YOU DON'T NEED
   A SPECIAL MACLIB (OTHER THAN THE SYSTEM LIBRARIES) WHEN THE PROGRAMS ARE
   ASSEMBLED AND BOUND.

   MEMBER STLSTB01 NEEDS TO BE COPIED TO A 'PANEL' LIBRARY, ONE OF THE DATASETS
   IN YOUR ISPPLIB CONCATENATION.  BE CAREFUL NOT TO ADD LINE NUMBERS TO THE
   MEMBER WHEN YOU COPY IT.  IF THE PANEL MEMBER IS DESTROYED BY AN ACCIDENTAL
   EDIT, THERE IS ANOTHER COPY IN MEMBER STLSTB0X, OR JUST RELOAD THIS DATASET
   FROM WHEREVER YOU GOT IT TO BEGIN WITH.


  BEFORE YOU CAN USE THE COMMAND, YOU NEED TO UPDATE IKJTSOXX MEMBER OF PARMLIB.
  JUST ADD STUCBSCN AND STLSPACE AND LSPACE

  TO THE AUTHTSF SECTION OF IKJTSOXX, AND ADD STUCBSCN TO THE AUTHPGM SECTION
  OF YOUR IKJTSOXX MEMBER.  NEXT APPLY THE PARMLIB CHANGES IN IKJTSOXX BY
  EITHER IPLING, OR USING THE PARMLIB UPDATE(XX) COMMAND.


  AFTER YOU HAVE ASSEMBLED AND LINKED THE TWO ASM SOURCE MODULES INTO AN
  APF AUTHORIZED LIBRARY THAT IS INCLUDED IN THE ISPLLIB CONCATENATION OR
  OR IS IN THE LINKLIST (OR EVEN IN LPA ALTHOUGH THAT IS NOT RECOMMENDED),
  AND AFTER THE IJKTSOXX MEMBER HAS BEEN UPDATED, AND AFTER YOU HAVE COPEID
  MEMBER STLSTB01 TO A LIBRARY IN THE ISPPLIB CONCATENATION - YOU SHOULD BE
  DONE WITH THE INSTALL.

  LOGOFF AND LOG BACK ONTO TSO AND GET INTO ISPF IF NEEDED.  THEN
  FROM A TSO PROMPT ISSUE - 'TSO LSPACE ' OR 'TSO STLSPACE ' AND HIT ENTER.
   (LSPACE IS AN ALIAS OF STLSPACE)
  YOU SHOULD GET THE HELP RESPONSE - IT SHOULD LOOK SOMETHING LIKE...



HELP FOR "LSPACE" COMMAND...
YOU MAY INVOKE HELP VIA "LSPACE HELP", "LSPACE /H", OR "LSPACE" WITH NO OPERAND
LSPACE WILL "LIST SPACE" INFO. ABOUT SELECTED DASD VOLUMES.

  COMMAND FORMAT:

    LSPACE  VOLSER    <-- A SINGLE VOLUME
    LSPACE  (VOLSER)  <-- A SINGLE VOLUME
    LSPACE  (VOLSER,VOLSER,VOLSER)  <-- A LIST OF VOLUMES.
    LSPACE  *         <-- TO DISPLAY ALL DASD VOLUMES
    LSPACE  U=XXXX    <-- TO DISPLAY A UCB BY 4 DIGIT UCB NUMBER
    LSPACE  U=(XXXX,XXXX,XXXX)      <-- A LIST OF UNIT NUMBERS.






 NEXT YOU SHOULD PROBABLY TRY -
   TSO LSPACE *

  THIS SHOULD RESULT IN A SIMILAR SCROLLABLE LIST OF VOLUMES -
==============================================================================
ADCD                                                         ROW 1 TO 27 OF 27

                       - MVS GROUP STLSPACE COMMAND -
                 RETURN SPACE INFORMATION FOR SELECTED UNITS

USE    PF3/END TO EXIT
SELECT OPTION ===>                                           SCROLL ===> CSR

       UNIT MNT  RES. FREE   FREE    FREE  LARGEST LARGEST VTOC  SMS  31-BIT
VOLSER ADDR ATR  STAT EXTNT  TRACKS  CYLS  TRACKS    CYLS  IND.  IND UCB ADDR
=============================================================================
ZCRES1 0A80 PRVT SYSR     7    1712    112    1181      78 ACTIV NOT 00F501D0
ZCRES2 0A81 PRVT PRES     2   12253    816   12215     814 ACTIV NOT 00F50268
ZCSYS1 0A82 STOR PRES    20    2100    132    1854     123 ACTIV NOT 00F50300
ZCSYS2 0A83 STOR PRES     7     850     55     810      54 ACTIV NOT 00F50398
ZCSYS3 0A84 STOR PRES    10    1902    124    1140      76 ACTIV NOT 00F50430
ZCPRD1 0A85 PRVT PRES     6   27361   1823   27349    1823 ACTIV NOT 00F504C8
ZCPRD2 0A86 PRVT PRES     4   16831   1121   16815    1121 ACTIV NOT 00F50560
ZCPRD3 0A87 PRVT PRES     1   17336   1155   17336    1155 ACTIV NOT 00F505F8
ZCDIS1 0A88 PRVT PRES     2   12814    853   12805     853 ACTIV NOT 00F50690
ZCDIS2 0A89 PRVT PRES     1   19043   1269   19043    1269 ACTIV NOT 00F50728
ZCDIS3 0A8A PRVT PRES     3   14981    998   14974     998 ACTIV NOT 00F507C0
ZCDIS4 0A8B PRVT PRES     3   16420   1094   16410    1094 ACTIV NOT 00F50858
ZCDIS5 0A8C PRVT PRES     2    5169    344    5160     344 ACTIV NOT 00F508F0
ZCDIS6 0A8D PRVT PRES     1   22884   1525   22884    1525 ACTIV NOT 00F50988
TSTA8E 0A8E STOR PRES     2   39310   2620   39300    2620 ACTIV NOT 00F50A20
TSTA8F 0A8F STOR PRES     2   37303   2486   37290    2486 ACTIV NOT 00F50AB8
USER01 0A90 PRVT PRES     1       2      0       2       0 ACTIV NOT 00F50B50
USER02 0A91 PRVT PRES     2    6976    465    6975     465 ACTIV NOT 00F50BE8
WORK01 0A92 STOR PRES    17    7008    462    1654     110 EXIST NOT 00F50C80
WORK02 0A93 STOR PRES    10   36974   2463   14880     992 ACTIV NOT 00F50D18
ZCUSS1 0A94 PRVT PRES     2     112      7     107       7 ACTIV NOT 00F50DB0
SCCI31 0A95 PRVT PRES     3   28105   1873   28095    1873 ACTIV NOT 00F50E48
SPOOL1 0A96 STOR PRES     5   48362   3223   48276    3218 ACTIV NOT 00F50EE0
HFS001 0A97 STOR PRES     2   14628    975   14625     975 ACTIV NOT 00F50F78
UCAT01 0A98 STOR PRES     4   48988   3265   48975    3265 ACTIV NOT 00F51010
CF0001 0A9E STOR PRES    10    9021    599    8973     598 ACTIV NOT 00F513A0
                    ********** END OF DATA **********
================================================================================

USE PF3 OR THE END COMMAND TO END AND RETURN - YOU MAY ALSO RESORT THE LIST
BY USING THE SORT COMMAND - "SORT (ANY COLUMN HEADING NAME) A|D"
FOR EXAMPLE ' SORT LARGEST TRACKS ' WILL RESORT THE DISPLAY BASED ON # TRACKS.
            ' SORT VOLSER D' WILL SORT BY VOLSER IN DECENDING SEQUENCE.
            ' SORT VOLSER A' WILL SORT BY VOLSER IN ASCENDING SEQUENCE.

SCROLL UP AND DOWN AS YOU WOULD WITH ANY OTHER ISPF TABLE DISPLAY.

WHEN INVOKING STLSPACE YOU CAN MASK THE VOLSER USING AN '*' TO INDICATE ANY
CHARACTER OR CHARACTERS.  FOR INSTANCE USING THE SYSTEM DISPLAYED ABOVE THE
RESULT FOR "TSO LSPACE ZC*1" RESULTS IN -

ADCD                                                           ROW 1 TO 5 OF 5

                       - MVS GROUP STLSPACE COMMAND -
                 RETURN SPACE INFORMATION FOR SELECTED UNITS

USE    PF3/END TO EXIT
SELECT OPTION ===>                                           SCROLL ===> CSR

       UNIT MNT  RES. FREE   FREE    FREE  LARGEST LARGEST VTOC  SMS  31-BIT
VOLSER ADDR ATR  STAT EXTNT  TRACKS  CYLS  TRACKS    CYLS  IND.  IND UCB ADDR
=============================================================================
ZCRES1 0A80 PRVT SYSR     7    1712    112    1181      78 ACTIV NOT 00F501D0
ZCSYS1 0A82 STOR PRES    20    2100    132    1854     123 ACTIV NOT 00F50300
ZCPRD1 0A85 PRVT PRES     6   27361   1823   27349    1823 ACTIV NOT 00F504C8
ZCDIS1 0A88 PRVT PRES     2   12814    853   12805     853 ACTIV NOT 00F50690
ZCUSS1 0A94 PRVT PRES     2     112      7     107       7 ACTIV NOT 00F50DB0
                    ********** END OF DATA **********

IF YOU INVOKE LSPACE FROM TSO READY  (OUTSIDE OF ISPF) YOU WILL GET A RESPONSE
THAT IS CREATED USING TPUT.  YOU CAN 'FORCE' A TSO STYLE RESPONSE FROM WITHIN
ISPF BY USING THE TSO OPTION - FOR EXAMPLE; "TSO LSPACE Z*2,TSO" GIVES YOU
BACK THE FOLLOWING;




       UNIT MNT  RES. FREE   FREE    FREE  LARGEST LARGEST VTOC  SMS  31-BIT
VOLSER ADDR ATR  STAT EXTNT  TRACKS  CYLS  TRACKS    CYLS  IND   IND UCB ADDR
ZCRES2 0A81 PRVT PRES     2   12253    816   12215     814 ACTIV NOT 00F50268
ZCSYS2 0A83 STOR PRES     7     850     55     810      54 ACTIV NOT 00F50398
ZCPRD2 0A86 PRVT PRES     4   16831   1121   16815    1121 ACTIV NOT 00F50560
ZCDIS2 0A89 PRVT PRES     1   19043   1269   19043    1269 ACTIV NOT 00F50728
***


OBVIOUSLY YOU CAN NOT SCROLL IT, UNLESS YOU ARE USING SESSION MANAGER, BUT
THE SAME THING IN TPUT FORMAT IS OCCASIONALLY USEFUL.
       Â¨R

  THIS IS A SIMPLE UTILITY THAT I USE IN MY OWN SHOP;
        MCCOLLEY SYSTEMS SOFTWARE INC.
        WWW.MVSPROGRAMMER.COM
        EMAIL - STEPHEN.MCCOLLEY@MVSPROGRAMMER.COM OR CALL - 770-704-8123.





ADDITIONAL NOTE:

  WHO AM I?

  I AM STEPHEN MCCOLLEY FROM
  MCCOLLEY SYSTEMS SOFTWARE INC.
  SUITE #62
  2288 MARIETTA HWY. CANTON GA 30114
  770-704-8123 OR EMAIL - STEPHEN.MCCOLLEY@MVSPROGRAMMER.COM

  I PROVIDED LSPACE BECAUSE I I THOUGHT IT MIGHT HELP SOMEONE - IT IS FREE!

  BUT I REALLY WANTED TO TELL YOU ABOUT ESSM AN ADD ON PRODUCT FOR JES2.


  I CREATED THE ESSM PRODUCT FOR JES2 -

 ==> "BECAUSE YOU DESRVE MORE CONTROL FROM YOUR JOB CONTROL LANGUAGE" <==


  ESSM FOR JES2 CAN BE USED TO BETTER CONTROL WHEN AND WHERE BATCH JOBS RUN
 RELATIVE TO:
                OTHER BATCH JOBS,
                STARTED TASKS,
                THE CLOCK,  (TIME OF DAY RELEASE & DELAY FOR A FIXED TIME)
                AD-HOC RESOURCE AVAIALBILITY,
                'INTELLIGENT' RESOURCES.
 OUR ESSM RESOURCES CAN BE DEFINED ANYWHERE IN A JES2 MAS WITHOUT INVOLVING WLM
 SCHEDULING ENVIRONMENTS.  ANY OR ALL OR MULTIPLES OF THESE CONTRAINTS CAN BE
 USED WITH ANY JES2 JOB.


  ESSM CAN ALSO HANDLE ALLMOST ALL JES3 / JOBNET CONSTRUCTS, WITHOUT ANY JCL
 CHANGES AND SO IT WOULD BE A GREAT AID TO ANYONE MIGRATING FROM JES3 TO JES2 OR
 ANYONE NEEDING THE FEATURE RICH SCHEDULING CAPABILITIES OF JES3 IN A JES2
 ENVIRONMENT.


 ESSM WILL ALSO REPLACE THE MELLON SHARED SPL MODS WITHOUT CHANGES TO YOUR JCL.
  (THERE ARE CURRENTLY KNOWN PROBLEMS WITH THE MELLON SHARES SPOOL MODS!)


  ALL OF THE FEATURES OF ESSM, EXCEPT FOR CREATING SYSTEM LEVEL RESOURCES, ARE
 IMPLEMENTED AND MANAGED BY THE END USER THROUGH SIMPLE JCL STATMENTS - NO
 CENTRALIZED CONTROL DEPARTMENT (OR PERSON) IS NEEDED TO USE THESE FEATURES.


  SO, IF YOU RUN JES2 AND JES3 - OR YOU NEED TO ELIMINATE THE MELLON SHARED
 SPOOL MODS, OR YOU NEED TO HAVE MORE FLEXIBLE JOB ROUTING RESOURCES - OR IF
 YOU JUST WANT MORE CONTROL OVER YOUR BATCH WORKLOAD - YOU OWE IT TO YOUR SHOP
 TO GIVE ME A CALL FOR A FREE EVALUATION LICENSE AND HELP SETTING UP ESSM IN
 YOUR SHOP TODAY!

                                                      THANKS,
                                                      STEPHEN MCCOLLEY
                                                      770-704-8123




      - END OF FILE -
