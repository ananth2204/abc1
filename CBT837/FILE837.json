{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012922000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE837.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE837.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\x0f'", "DS1TRBAL": "b'?\\xe2'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x05\\xce\\x00\\x05\\x05\\xce\\x00\\x07\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04P\\x00W\\x01\\x10%_\\x01\\x10%_\\x02&\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf0@@@'", "ispf": {"version": "04.80", "flags": 0, "createdate": "2010-09-12T00:00:00", "modifydate": "2010-09-12T02:26:57", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-480"}, "text": "REGULAR CBT TAPE - VERSION 480    FILE:  837\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT480.FILE837\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 4 MEMBERS COUNTED; CUMULATIVE SIZE IS 378 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   09/12/10    02:26:57    GMT-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE837": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04P\\x00H\\x01\\x10%_\\x01\\x10%_\\x02&\\x00\\x11\\x00\\x11\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf0@@@'", "ispf": {"version": "04.80", "flags": 0, "createdate": "2010-09-12T00:00:00", "modifydate": "2010-09-12T02:26:48", "lines": 17, "newlines": 17, "modlines": 0, "user": "CBT-480"}, "text": "//***FILE 837 is from Bruce Bordonaro and contains 2 exits which    *   FILE 837\n//*           are necessary to implement, when you want to inform   *   FILE 837\n//*           TSO users that there is a file waiting for them to    *   FILE 837\n//*           RECEIVE under TSO/E.  The exits are:                  *   FILE 837\n//*                                                                 *   FILE 837\n//*       HASX13    - JES2 exit 13 to issue a $HASP549 message      *   FILE 837\n//*                   that a dataset is waiting to be RECEIVEd      *   FILE 837\n//*                   from another node.                            *   FILE 837\n//*                                                                 *   FILE 837\n//*       INMXZ02   - XMIT exit 2, to receive control when a        *   FILE 837\n//*                   dataset is waiting to be RECEIVEd from a      *   FILE 837\n//*                   local node.  In this case, JES2 exit 13       *   FILE 837\n//*                   does not receive control.                     *   FILE 837\n//*                                                                 *   FILE 837\n//*           email:  sbgolob@cbttape.org     or                    *   FILE 837\n//*                   sbgolob@attglobal.net                         *   FILE 837\n//*                                                                 *   FILE 837\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "HASX13": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00D\\x01\\x10%_\\x01\\x10%_\\x02\\x15\\x00\\x83\\x00\\x83\\x00\\x00\\xc2\\xc2\\xd6\\xd9\\xc4\\xd6\\xd5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2010-09-12T00:00:00", "modifydate": "2010-09-12T02:15:44", "lines": 131, "newlines": 131, "modlines": 0, "user": "BBORDON"}, "text": "HASX13   TITLE 'JES2 EXIT 13 NOTIFY'\n*****************************************************************\n* DESCRIPTIVE NAME = USER EXIT TO NOTIFY TSO USER OF INCOMING   *\n*                    DATA TO BE RECEIVED.                       *\n*                                                               *\n* FUNCTION = PROVIDE SUPPORT FOR TSO/E TO NOTIFY THE TS USER    *\n*            WHEN A FILE IS WAITING ON THE RECEIVE QUEUE.       *\n*                                                               *\n* ENTRY POINT = EXIT13                                          *\n*****************************************************************\n         COPY  $HASPGBL           COPY HASP GLOBALS\nHASX13   $MODULE TITLE='JES2 EXIT 13 NOTIFY',                          +\n               ENVIRON=JES2,                                           +\n               RMODE=ANY,                                          @430+\n               $HCT,                        HASP HCT DSECT             +\n               $BUFFER,                     HASP BUFFER DSECT          +\n               RPL,                         HASP RPL   DSECT           +\n               $JCT,                        HASP JCT DSECT             +\n               $JQE,                        HASP JQE DSECT             +\n               $JOE,                        HASP JOE DSECT             +\n               $DCT,                        HASP DCT DSECT             +\n               $PCE,                        HASP PCE DSECT             +\n               $QSE,                        HASP QSE DSECT             +\n               $CAT,                        HASP CAT DSECT             +\n               $MIT,                        HASP MIT DSECT             +\n               $PDDB,                       HASP PDDB DSECT            +\n               $NHD,                        HASP NHD DSECT             +\n               $HASPEQU                     HASP EQUATES\nEXIT13   $ENTRY BASE=R12                    ESTABLISH ADDRESSABILITY\n         $SAVE                              SAVE CALLERS REGISTERS\n         LR    R12,R15                      ESTABLISH BASE\n         L     R2,0(,R1)                    GET NJH ADDR\n         L     R3,8(,R1)                    GET PDDB ADDR\n         GETMAIN RC,LV=X13LEN               GETMAIN BUFFER\n         LTR   R15,R15                      GETMAIN OK?\n         BNZ   RETURN8                      RETURN W/NOTIFY USER\n         LR    R9,R1                        SAVE THE RETURN ADDR\n         USING X13WORK,R9                   ESTABLISH ADDRESSBILITY\n         TIME  DEC                          GET SYSTEM TIME\n         ST    R0,DWORK                     SAVE TIME\n         ST    R1,DWORK+4                   SAVE DATE\n         OI    DWORK+3,X'0F'                PUT SIGN ON\n         MVC   DDATE-1(7),=X'4021204B202020'     MAKE DATE READABLE\n         ED    DDATE-1(7),DWORK+5           SAME\n         MVC   CTME1-1(11),=X'F021207A20207A20207A20'\n         ED    CTME1-1(11),DWORK            SAME\n         MVC   MSGAREA(SE549LEN),SE549HDR   MOVE IN '$HASP549...'\n         MVC   MSGAREA+DATEJ-SE549HDR(6),DDATE   MOVE IN SYSDATE\n         MVC   MSGAREA+TIME1-SE549HDR(8),CTME1   MOVE IN SYSTIME\n         LA    R5,MSGAREA+SE549LEN          POINT TO THE END\n         MVC   0(8,R5),NJHGORGN-NJH(R2)     MOVE ORIGIN NODE\n         LA    R4,NJHGORGN-NJH+7(R2)        POINTS TO LAST BYTE\n         LA    R1,3                         FLOAT FOR 3 BYTES\nMOVNODE  CLI   0(R4),C' '                   IS THIS A BLANK?\n         BNE   MOVSLASH                     NO, GO MOVE IN '/'\n         BCTR  R4,0                         DECREASE R4 BY 1\n         BCT   R1,MOVNODE                   GO CHECK NODE LENGTH\nMOVSLASH LA    R5,5(R1,R5)                  BUMP TO THE END\n         MVI   0(R5),C'/'                   MOVE IN '/'\n         LA    R5,1(R5)                     BUMP TO THE END\n         MVC   0(8,R5),NJHGJNAM-NJH(R2)     MOVE ORIGIN SENDER\n         LA    R5,8(R5)                     POINT TO THE END\n         CLI   NJHGJNAM-NJH+7(R2),C' '      IS SENDER NAME 7 BYTES?\n         BNE   MOVRECS                      NO, GO MOVE IN RECORDS\n         BCTR  R5,0                         DECREASE R5 BY 1\nMOVRECS  MVC   0(L'SE549REC,R5),SE549REC    MOVE IN ') RECORDS('\n         LA    R5,L'SE549REC(R5)            BUMP TO THE END\n         ICM   R7,15,PDBRECCT-PDB(R3)       GET RECORD COUNT\n         CVD   R7,DWORK                     CONVERT TO PACK DECIMAL\n         MVC   DDWORK,=X'4020202020202120'  MOVE IN PATTERN MASK\n         LA    R1,DDWORK+7                  MIN 1 BYTE REC COUNT\n         LR    R4,R1                        COPY THE ADDRESS\n         EDMK  DDWORK(8),DWORK+4            CONVERT TO PRINTABLE\n         MVC   0(8,R5),0(R1)                MOVE TO SVC34 MSGAREA\n         SR    R4,R1                        CALC RECORD BYTE COUNT\n         LA    R5,1(R4,R5)                  BUMP TO THE END\n         MVC   0(L'SE549LGN,R5),SE549LGN    MOVE IN 'LOGON,NOWAIT,..'\n         LA    R5,L'SE549LGN(R5)            BUMP TO THE END\n         MVC   0(8,R5),PDBUSER-PDB(R3)      MOVE USERID OF RECVR\n         LA    R4,PDBUSER-PDB+7(R3)         POINT TO THE END OF USERID\n         LA    R1,8                         MAX USERID LENGTH\n         SR    R0,R0                        CLEAR FLAG\nCHKUSER  CLI   0(R4),C' '                   IS THIS A BLANK\n         BNE   MOVCLOP                      NO, GO MOVE IN ')'\n         BCTR  R4,0                         DEC R4 BY 1, BUMP BACKWARD\n         BCT   R1,CHKUSER                   DEC R1 BY 1 & GO CHECK ID\nMOVCLOP  LTR   R1,R1                        IS LENGTH ZERO\n         BNZ   MOVCLOP1                     NO, THEN MOVE IT TO OUTPUT\n         LTR   R0,R0                        IS THIS PDBUSER ALREADY?\n         BNZ   RETURN4                      YES, RETURN & NOTIFY\n         LA    R0,1(,R0)                    REMEMBER IT IS PDBUSER\n         MVC   0(8,R5),PDBWTRID-PDB(R3)     MOVE IN USERID\n         LA    R4,PDBWTRID-PDB+7(R3)        POINT TO THE END OF USERID\n         LA    R1,8                         MAX USERID LENGTH\n         B     CHKUSER                      GO CHECK USERID AGAIN\nMOVCLOP1 LA    R5,0(R1,R5)                  BUMP TO THE END\n         MVI   0(R5),C')'                   MOVE IN CLOSE ')'\n         LA    R5,1(R5)                     BUMP TO THE END\n         SR    R0,R0                        CLEAR R0 FOR WTO SVC\n         LA    R1,MSGAREA                   LOAD R1 W/ADDR OF MSGAREA\n         SR    R5,R1                        CALC SEND PARM. LENGTH\n         STH   R5,MSGAREA                   STORE SVC34 PARM. LENGTH\n         SVC   34                           ISSUE WTO SVC\n         FREEMAIN RC,LV=X13LEN,A=(9)        FREE THE STORAGE\n         $RETURN RC=0                       RETURN DO NOT NOTIFY\nRETURN4  FREEMAIN RC,LV=X13LEN,A=(9)        FREE THE STORAGE\nRETURN8  $RETURN RC=8                       RETURN & NOTIFY USER\n*****************************************************************\n         LTORG\nSE549HDR DS    0F\n         DC    H'0'\n         DC    H'0'\n         DC    C'SE '''\nDATEJ    DC    CL6'YY.DDD',C' '\nTIME1    DC    C'HH.MM.SS'\n         DC    C' $HASP549 MAIL FROM('\nSE549LEN EQU   *-SE549HDR\nSE549REC DC    C') RECORDS('\nSE549LGN DC    C')'',LOGON,NOWAIT,USER=('\n*******************************************************************\nX13WORK  DSECT\nMSGAREA  DS    0F,CL128\nDWORK    DS    D\n         DS    CL1\nDDATE    DS    CL7\nCTME1    DS    CL10\nDDWORK   DS    CL8\nX13LEN   EQU   *-X13WORK\nHASX13   CSECT\n         $MODEND ,\n         END   ,\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INMXZ02": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x01\\x01\\x10%_\\x01\\x10%_\\x02\\x17\\x00\\xda\\x00\\xda\\x00\\x00\\xc2\\xc2\\xd6\\xd9\\xc4\\xd6\\xd5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2010-09-12T00:00:00", "modifydate": "2010-09-12T02:17:01", "lines": 218, "newlines": 218, "modlines": 0, "user": "BBORDON"}, "text": "*%A LOAD('TSOBBOR.LOAD') AMODGEN\n***********************************************************************\n*   MODULE NAME:  INMXZ02                                             *\n*                                                                     *\n*   DESCRIPTION:  TSO/E TRANSMIT TERMINATION EXIT                     *\n*                                                                     *\n*      FUNCTION:  ISSUE EQUIVALENT OF \"$HASP549 MAIL FROM\" MESSAGE    *\n*                 TO NOTIFY RECEIVING USERS OF LOCAL NODE TRANSMIT.   *\n*                 (LOCAL TRANSMIT DOES NOT PASS THROUGH JES EXIT 13). *\n*                                                                     *\n*     OPERATION:  -  SEARCH ADDRESS LIST FOR LOCAL NODE.              *\n*                 -  IF FOUND, VERIFY OUTPUT TARGET IS JES SYSOUT     *\n*                      AND TRANSMISSION SUCCESSFULLY COMPLETED.       *\n*                 -  ISSUE \"SE '$HASP549...',USER=(),LOGON,NOWAIT     *\n*                           VIA SVC34                                 *\n*                 -  ALWAYS RETURN CONDITION ZERO (CONTINUE TRANSMIT).*\n*                                                                     *\n*    ATTRIBUTES:  KEY 8, PROBLEM STATE, APF ON, REENTRANT             *\n*                                                                     *\n*         INPUT:  R1, POINTER TO PARAMETER LIST, SEE PL@LIST          *\n*                                                                     *\n*        OUTPUT:  TSO MAIL MESSAGE ISSUED VIA OPERATOR SEND COMMAND   *\n*                                                                     *\n***********************************************************************\nINMXZ02  CSECT\n         YREGS\n         SAVE  (14,12),,'INMXZ02-&SYSDATE'\n         LR    R12,R15                 SAVE ENTRY POINT\n         USING INMXZ02,R12             SET UP BASE REGISTER\n         LR    R11,R1                  COPY PARM LIST ADDRESS\n         USING PL@LIST,R11             ESTABLISH ADDRESSABILITY\n         GETMAIN RU,LV=WORKLEN         OBTAIN STORAGE\n         ST    R13,4(,R1)              CHAIN SAVE AREAS\n         ST    R1,8(,R13)\n         LR    R13,R1                  NEW SAVEAREA\n         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY\n***********************************************************************\n*        VERIFY DATA WAS SENT TO SYSOUT (NOT TO DATASET OR DDNAME)    *\n***********************************************************************\n         L     R2,PLSTAFLG             ADDRESS 1 BYTE STATUS FLAGS\n         TM    0(R2),PLNOTJES          DID OUTPUT GO NON-JES ?\n         BO    RETURN0                 YES, DONE (NOTHING REALLY XMITD)\n***********************************************************************\n*        ONE OF THE ENRTY PARAMETERS POINTS TO A TWO TEXT UNIT LIST   *\n*        THAT DESCRIBES THE TRANSMITTING USER:                        *\n*        PARM  ==> +0 POINTER ==> USERID TEXT UNIT                    *\n*                  +4 POINTER ==> NODE TEXT UNIT                      *\n*                                                                     *\n*        NOTE: EVERY TEXT UNIT (T/U) IS OF THE FOLLOWING FORMAT       *\n*      +0  KEY   DS  XL2    TYPE OF T/U               (EG. X'1011'  ) *\n*      +2  NUM   DS  XL2    NUMBER OF LEN+PARM PAIRS  (    X'0001'  ) *\n*      +4  LEN   DS  XL2    LENGTH OF PARM VALUE      (    X'0006'  ) *\n*      +6  PARM  DS  ....   ACTUAL PARAMETER          (    C'SFTEST') *\n***********************************************************************\n         L     R2,PLFUTXTU             ADDRESS \"FROM\" T/U POINTER LIST\n         L     R3,4(,R2)               ADDRESS SECOND T/U\n         LH    R4,4(,R3)               GET LENGTH OF FROM-NODE\n         BCTR  R4,0                    DECREMENT FOR EXECUTE\n         LA    R3,6(,R3)               POINT TO FROM-NODE NAME\n*\n         L     R6,0(,R2)               ADDRESS FIRST T/U\n         LH    R7,4(,R6)               GET LENGTH OF FROM-USER\n         BCTR  R7,0                    DECREMENT FOR EXECUTE\n         LA    R6,6(,R6)               POINT TO FROM-USER ID\n*\n         L     R2,PLNUMREC             ADDRESS NUMBER RECORDS XMITED\n         L     R2,0(,R2)               GET NUMBER\n         CVD   R2,DBLWORD              CONVERT TO PACKED DECIMAL FORMAT\n         MVC   RECSXMIT,RECXMASK       MOVE IN PATTERN MASK\n         LA    R1,RECSXMIT+7           DEFAULT TO LAST DIGIT AS SIGNIF\n         LR    R8,R1                   SAVE FOR LENGTH COMPUTATION\n         EDMK  RECSXMIT,DBLWORD+4      CONVERT TO PRINTABLE\n         MVC   RECSXMIT(7),0(R1)       SLIDE RESULT LEFT (MAX 7 CHARS)\n         SR    R8,R1                   GET MACHINE LENGTH OF RESULT\n***********************************************************************\n*        SEARCH ADDRESS LIST FOR LOCAL NODE                           *\n***********************************************************************\n         LA    R5,PLTULIST             POINT TO ADDRESS OF DATA CHAIN\n         USING AL@LIST,R5\nNEXTUSER ICM   R5,B'1111',ALNEXT       ADDRESS NEXT TO-USER DATA\n         BZ    RETURN0                 END OF CHAIN\n         EX    R4,CLCNODE              COMPARE FROM/TO NODE NAMES\n         BNE   NEXTUSER                NOT EQUAL, RECV JES2 WILL VERIFY\n***********************************************************************\n*        VERIFY TRANSMISSION WAS SUCCESSFULLY COMPLETED               *\n***********************************************************************\n         TM    ALFLAG,ALXMITOK         TRANSMIT SUCCESSFUL ?\n         BNO   NEXTUSER                NO, IGNORE\n***********************************************************************\n*        ISSUE: YY.DDD HH.MM.SS $HASP549 MAIL FROM(NODENAME/USERID)   *\n*               RECORDS(NNNNNNNN)                                     *\n*           BY: SE '$HASP549 ...',LOGON,USER=(USERID)                 *\n*        USING: SVC 34 TO GENERATE AN \"INTERNAL CONSOLE COMMAND\"      *\n***********************************************************************\n         TIME  DEC                     GET SYSTEM TIME\n         ST    R0,DBLWORD              SAVE TIME\n         ST    R1,DBLWORD+4            SAVE DATE\n         OI    DBLWORD+3,X'0F'         PUT SIGN ON\n         MVC   DDATE-1(7),=X'4021204B202020'     MAKE DATE READABLE\n         ED    DDATE-1(7),DBLWORD+5    SAME\n         CLI   DDATE,C' '\n         BNE   SKIPZERO\n         MVI   DDATE,C'0'\nSKIPZERO MVC   CTME1-1(11),=X'F021207A20207A20207A20'\n         ED    CTME1-1(11),DBLWORD     SAME\n         MVC   MSGAREA(SE549LEN),SE549HDR  MOVE \"SE '$HASP549 \" HEADER\n         MVC   MSGAREA+DATEJ-SE549HDR(6),DDATE       FILL IN DATE\n         MVC   MSGAREA+TIME1-SE549HDR(8),CTME1       FILL IN TIME\n         LA    R1,MSGAREA+SE549LEN     POINT TO NEXT BYTE FOR NODENAME\n         EX    R4,MVCNODE              MOVE IN FROM-NODE\n         LA    R1,1(R4,R1)             POINT TO BYTE AFTER NODENAME\n         MVI   0(R1),C'/'              MOVE IN SEPARATOR SLASH\n         EX    R7,MVCFUID              MOVE IN FROM-USER ID\n         LA    R1,2(R7,R1)             POINT TO BYTE AFTER FROM-USER ID\n         MVC   0(L'SE549REC,R1),SE549REC  MOVE IN ') RECORDS(' LITERAL\n         EX    R8,MVCRECX              MOVE IN NUMBER RECORDS XMITED\n         LA    R1,L'SE549REC+1(R8,R1)  POINT TO BYTE AFTER NUM REC XMIT\n         MVC   0(L'SE549LGN,R1),SE549LGN  MOVE IN 'LOGON,USER=' LITERAL\n         LH    R2,ALUSERL              GET LENGTH OF TO-USER ID\n         BCTR  R2,0                    DECREMENT FOR MACHINE LENGTH\n         EX    R2,MVCTUID              MOVE IN TO-USER ID\n         LA    R1,L'SE549LGN+1(R2,R1)  POINT TO BYTE AFTER TO-USER ID\n         MVI   0(R1),C')'              MOVE IN FINAL RIGHT PARENTHESIS\n         LA    R2,MSGAREA-1            POINT TO BEGINNING (MINUS 1)\n         SR    R1,R2                   GET REAL LENGTH OF COMPLETE MSG\n         STH   R1,MSGAREA              STORE IN FIRST HALFWORD FOR SVC\n         MODESET KEY=ZERO\n         SR    R0,R0                   NO CONSOLE NUMBER\n         LA    R1,MSGAREA              POINT TO PARAMETER\n         SVC   34                      ISSUE COMMAND\n         MODESET KEY=NZERO\n         B     NEXTUSER                GO CHECK THE NEXT TO-USER\n***********************************************************************\n*        SET ZERO RETURN CODE                                         *\n***********************************************************************\nRETURN0  SR    R2,R2                   ZERO RETURN CODE\n***********************************************************************\n*        RETURN ROUTINE                                               *\n***********************************************************************\nRETURN   LR    R1,R13                  SAVE POINTER OF STORAGE\n         L     R13,4(,R13)             GET OLD SAVEAREA ADDRESS\n         FREEMAIN RU,LV=WORKLEN,A=(1)  FREE STORAGE\n         LR    R15,R2                  PASS RETURN CODE TO R15\n         RETURN (14,12),RC=(15)        AND RETURN\n***********************************************************************\n*        LITERALS AND CONSTANTS                                       *\n***********************************************************************\nCLCNODE  CLC   0(0,R3),ALNODE          (EXECUTED) COMPARE FROM/TO NODE\nMVCNODE  MVC   0(0,R1),0(R3)           (EXECUTED) MOVE FROM-NODE TO MSG\nMVCFUID  MVC   1(0,R1),0(R6)           (EXECUTED) MOVE FROM-USER TO MSG\nMVCRECX  MVC   L'SE549REC(0,R1),RECSXMIT (EXECUTED) MOVE NUM RECS XMITD\nMVCTUID  MVC   L'SE549LGN(0,R1),ALUSER   (EXECUTED) MOVE TO-USER TO MSG\nRECXMASK DC    X'4020202020202120'     PATTERN MASK TO EDITMARK REC NUM\n*\nSE549HDR DS    0F                      SVC34 PARMS MUST BE WORD BOUNDRY\n         DC    H'0'                    LENGTH INCLUDING PREFIX\n         DC    H'0'                    FILLER REQUIRED BY SVC34\n         DC    C'SE '''\nDATEJ    DC    CL6'YY.DDD',C' '\nTIME1    DC    C'HH.MM.SS',C' '\n         DC    C'$HASP549 MAIL FROM('\nSE549LEN EQU   *-SE549HDR              LENGTH OF HEADER\nSE549REC DC    C') RECORDS('\nSE549LGN DC    C')'',LOGON,NOWAIT,USER=('\n*\n         LTORG\n***********************************************************************\n*        DSECTS AND MAPPING MACROES                                   *\n***********************************************************************\nWORKAREA DSECT\nSAVEAREA DS    9D                      STANDARD REGISTER SAVEAREA\nDBLWORD  DS    D                       DOUBLE WORD FOR CONVERT-PRINT\n         DS    CL1                     DUMMY FIELD\nDDATE    DS    CL7                     WORK FIELD FOR FORMAT DATE\nCTME1    DS    CL10                    WORK FIELD FOR FORMAT TIME\nRECSXMIT DS    XL8                     RECORDS TRANSMITTED (PRINTABLE)\nMSGAREA  DS    0F,CL128                MSG CREATION AREA (ON FULLWORD!)\nWORKLEN  EQU   *-WORKAREA\n***********************************************************************\n*        LOCAL MAPPING FOR INMZX02 ENTRY PARAMETER LIST               *\n***********************************************************************\nPL@LIST  DSECT                         ENTRY PARAMETER LIST\nPLUSERWD DS    A                       ADDR OF A USER WORD\nPLXMKWDP DS    A                       ADDR OF KEYWORD PARM('STRING')\nPLACTFLG DS    A                       ADDR OF 1 BYTE ACTION FLAGS\nPLTSCPPL DS    A                       ADDR OF TSO CMD PROCSR PARM LIST\nPLXMEMSG DS    A                       ADDR OF ERR MSG XMIT TO ISSUE\nPLSTAFLG DS    A                       ADDR OF 1 BYTE STATUS FLAGS\nPLNOTJES EQU   X'80'                     OUTPUT NOT JES (IS DSN OR DD)\nPLFUTXTU DS    A                       ADDR OF FROM-USER TEXT UNITS\nPLFDTXTU DS    A                       ADDR OF FROM-DATASET TEXT UNITS\nPLTULIST DS    A                       ADDR OF TO-USER DATA CHAIN\nPLNUMREC DS    A                       ADDR OF WORD, NUM RECORDS XMITED\nPLXMITRC DS    A                       ADDR OF WORD, TRANSMIT CMD RETCD\n***********************************************************************\n*        LOCAL MAPPING FOR ADDRESS LIST DATA CHAIN OF TO-USERS        *\n***********************************************************************\nAL@LIST  DSECT                         ADDRESS LIST CHAIN OF TO-USERS\nALNEXT   DS    A                       ADDR OF NEXT ENTRY, OR ZERO\nALNODEL  DS    H                       LENGTH OF TARGET NODE NAME\nALNODE   DS    CL8                     TARGET NODE NAME\nALUSERL  DS    H                       LENGTH OF TARGET USERID\nALUSER   DS    CL8                     TARGET USERID\nALNICKL  DS    H                       LENGTH OF NICKNAME, OR ZERO\nALNICK   DS    CL8                     NICKNAME OF USERID\nALNAMEL  DS    H                       LENGTH OF NAME TAG, OR ZERO\nALNAME   DS    CL30                    NAME TAG OF USERID\nALFLAG   DS    X                       FLAG BYTE\nALNOTIFY EQU   X'80'                     REQUEST NOTIFY FOR THIS USERID\nALXMITOK EQU   X'20'                     XMIT SUCCESFULLY COMPLETED\n         DS    X                       (RESERVED)\nALPARML  DS    H                       LENGTH OF PARM TAG, OR ZERO\nALPARM   DS    CL30                    PARM TAG OF USERID\n***********************************************************************\n*        XMIT/RECEIVE TEXT UNIT MAPPING                               *\n***********************************************************************\n         INMTEXTU\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT837/FILE837.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT837", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}