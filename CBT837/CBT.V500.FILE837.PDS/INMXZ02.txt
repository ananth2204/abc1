*%A LOAD('TSOBBOR.LOAD') AMODGEN
***********************************************************************
*   MODULE NAME:  INMXZ02                                             *
*                                                                     *
*   DESCRIPTION:  TSO/E TRANSMIT TERMINATION EXIT                     *
*                                                                     *
*      FUNCTION:  ISSUE EQUIVALENT OF "$HASP549 MAIL FROM" MESSAGE    *
*                 TO NOTIFY RECEIVING USERS OF LOCAL NODE TRANSMIT.   *
*                 (LOCAL TRANSMIT DOES NOT PASS THROUGH JES EXIT 13). *
*                                                                     *
*     OPERATION:  -  SEARCH ADDRESS LIST FOR LOCAL NODE.              *
*                 -  IF FOUND, VERIFY OUTPUT TARGET IS JES SYSOUT     *
*                      AND TRANSMISSION SUCCESSFULLY COMPLETED.       *
*                 -  ISSUE "SE '$HASP549...',USER=(),LOGON,NOWAIT     *
*                           VIA SVC34                                 *
*                 -  ALWAYS RETURN CONDITION ZERO (CONTINUE TRANSMIT).*
*                                                                     *
*    ATTRIBUTES:  KEY 8, PROBLEM STATE, APF ON, REENTRANT             *
*                                                                     *
*         INPUT:  R1, POINTER TO PARAMETER LIST, SEE PL@LIST          *
*                                                                     *
*        OUTPUT:  TSO MAIL MESSAGE ISSUED VIA OPERATOR SEND COMMAND   *
*                                                                     *
***********************************************************************
INMXZ02  CSECT
         YREGS
         SAVE  (14,12),,'INMXZ02-&SYSDATE'
         LR    R12,R15                 SAVE ENTRY POINT
         USING INMXZ02,R12             SET UP BASE REGISTER
         LR    R11,R1                  COPY PARM LIST ADDRESS
         USING PL@LIST,R11             ESTABLISH ADDRESSABILITY
         GETMAIN RU,LV=WORKLEN         OBTAIN STORAGE
         ST    R13,4(,R1)              CHAIN SAVE AREAS
         ST    R1,8(,R13)
         LR    R13,R1                  NEW SAVEAREA
         USING WORKAREA,R13            ESTABLISH ADDRESSABILITY
***********************************************************************
*        VERIFY DATA WAS SENT TO SYSOUT (NOT TO DATASET OR DDNAME)    *
***********************************************************************
         L     R2,PLSTAFLG             ADDRESS 1 BYTE STATUS FLAGS
         TM    0(R2),PLNOTJES          DID OUTPUT GO NON-JES ?
         BO    RETURN0                 YES, DONE (NOTHING REALLY XMITD)
***********************************************************************
*        ONE OF THE ENRTY PARAMETERS POINTS TO A TWO TEXT UNIT LIST   *
*        THAT DESCRIBES THE TRANSMITTING USER:                        *
*        PARM  ==> +0 POINTER ==> USERID TEXT UNIT                    *
*                  +4 POINTER ==> NODE TEXT UNIT                      *
*                                                                     *
*        NOTE: EVERY TEXT UNIT (T/U) IS OF THE FOLLOWING FORMAT       *
*      +0  KEY   DS  XL2    TYPE OF T/U               (EG. X'1011'  ) *
*      +2  NUM   DS  XL2    NUMBER OF LEN+PARM PAIRS  (    X'0001'  ) *
*      +4  LEN   DS  XL2    LENGTH OF PARM VALUE      (    X'0006'  ) *
*      +6  PARM  DS  ....   ACTUAL PARAMETER          (    C'SFTEST') *
***********************************************************************
         L     R2,PLFUTXTU             ADDRESS "FROM" T/U POINTER LIST
         L     R3,4(,R2)               ADDRESS SECOND T/U
         LH    R4,4(,R3)               GET LENGTH OF FROM-NODE
         BCTR  R4,0                    DECREMENT FOR EXECUTE
         LA    R3,6(,R3)               POINT TO FROM-NODE NAME
*
         L     R6,0(,R2)               ADDRESS FIRST T/U
         LH    R7,4(,R6)               GET LENGTH OF FROM-USER
         BCTR  R7,0                    DECREMENT FOR EXECUTE
         LA    R6,6(,R6)               POINT TO FROM-USER ID
*
         L     R2,PLNUMREC             ADDRESS NUMBER RECORDS XMITED
         L     R2,0(,R2)               GET NUMBER
         CVD   R2,DBLWORD              CONVERT TO PACKED DECIMAL FORMAT
         MVC   RECSXMIT,RECXMASK       MOVE IN PATTERN MASK
         LA    R1,RECSXMIT+7           DEFAULT TO LAST DIGIT AS SIGNIF
         LR    R8,R1                   SAVE FOR LENGTH COMPUTATION
         EDMK  RECSXMIT,DBLWORD+4      CONVERT TO PRINTABLE
         MVC   RECSXMIT(7),0(R1)       SLIDE RESULT LEFT (MAX 7 CHARS)
         SR    R8,R1                   GET MACHINE LENGTH OF RESULT
***********************************************************************
*        SEARCH ADDRESS LIST FOR LOCAL NODE                           *
***********************************************************************
         LA    R5,PLTULIST             POINT TO ADDRESS OF DATA CHAIN
         USING AL@LIST,R5
NEXTUSER ICM   R5,B'1111',ALNEXT       ADDRESS NEXT TO-USER DATA
         BZ    RETURN0                 END OF CHAIN
         EX    R4,CLCNODE              COMPARE FROM/TO NODE NAMES
         BNE   NEXTUSER                NOT EQUAL, RECV JES2 WILL VERIFY
***********************************************************************
*        VERIFY TRANSMISSION WAS SUCCESSFULLY COMPLETED               *
***********************************************************************
         TM    ALFLAG,ALXMITOK         TRANSMIT SUCCESSFUL ?
         BNO   NEXTUSER                NO, IGNORE
***********************************************************************
*        ISSUE: YY.DDD HH.MM.SS $HASP549 MAIL FROM(NODENAME/USERID)   *
*               RECORDS(NNNNNNNN)                                     *
*           BY: SE '$HASP549 ...',LOGON,USER=(USERID)                 *
*        USING: SVC 34 TO GENERATE AN "INTERNAL CONSOLE COMMAND"      *
***********************************************************************
         TIME  DEC                     GET SYSTEM TIME
         ST    R0,DBLWORD              SAVE TIME
         ST    R1,DBLWORD+4            SAVE DATE
         OI    DBLWORD+3,X'0F'         PUT SIGN ON
         MVC   DDATE-1(7),=X'4021204B202020'     MAKE DATE READABLE
         ED    DDATE-1(7),DBLWORD+5    SAME
         CLI   DDATE,C' '
         BNE   SKIPZERO
         MVI   DDATE,C'0'
SKIPZERO MVC   CTME1-1(11),=X'F021207A20207A20207A20'
         ED    CTME1-1(11),DBLWORD     SAME
         MVC   MSGAREA(SE549LEN),SE549HDR  MOVE "SE '$HASP549 " HEADER
         MVC   MSGAREA+DATEJ-SE549HDR(6),DDATE       FILL IN DATE
         MVC   MSGAREA+TIME1-SE549HDR(8),CTME1       FILL IN TIME
         LA    R1,MSGAREA+SE549LEN     POINT TO NEXT BYTE FOR NODENAME
         EX    R4,MVCNODE              MOVE IN FROM-NODE
         LA    R1,1(R4,R1)             POINT TO BYTE AFTER NODENAME
         MVI   0(R1),C'/'              MOVE IN SEPARATOR SLASH
         EX    R7,MVCFUID              MOVE IN FROM-USER ID
         LA    R1,2(R7,R1)             POINT TO BYTE AFTER FROM-USER ID
         MVC   0(L'SE549REC,R1),SE549REC  MOVE IN ') RECORDS(' LITERAL
         EX    R8,MVCRECX              MOVE IN NUMBER RECORDS XMITED
         LA    R1,L'SE549REC+1(R8,R1)  POINT TO BYTE AFTER NUM REC XMIT
         MVC   0(L'SE549LGN,R1),SE549LGN  MOVE IN 'LOGON,USER=' LITERAL
         LH    R2,ALUSERL              GET LENGTH OF TO-USER ID
         BCTR  R2,0                    DECREMENT FOR MACHINE LENGTH
         EX    R2,MVCTUID              MOVE IN TO-USER ID
         LA    R1,L'SE549LGN+1(R2,R1)  POINT TO BYTE AFTER TO-USER ID
         MVI   0(R1),C')'              MOVE IN FINAL RIGHT PARENTHESIS
         LA    R2,MSGAREA-1            POINT TO BEGINNING (MINUS 1)
         SR    R1,R2                   GET REAL LENGTH OF COMPLETE MSG
         STH   R1,MSGAREA              STORE IN FIRST HALFWORD FOR SVC
         MODESET KEY=ZERO
         SR    R0,R0                   NO CONSOLE NUMBER
         LA    R1,MSGAREA              POINT TO PARAMETER
         SVC   34                      ISSUE COMMAND
         MODESET KEY=NZERO
         B     NEXTUSER                GO CHECK THE NEXT TO-USER
***********************************************************************
*        SET ZERO RETURN CODE                                         *
***********************************************************************
RETURN0  SR    R2,R2                   ZERO RETURN CODE
***********************************************************************
*        RETURN ROUTINE                                               *
***********************************************************************
RETURN   LR    R1,R13                  SAVE POINTER OF STORAGE
         L     R13,4(,R13)             GET OLD SAVEAREA ADDRESS
         FREEMAIN RU,LV=WORKLEN,A=(1)  FREE STORAGE
         LR    R15,R2                  PASS RETURN CODE TO R15
         RETURN (14,12),RC=(15)        AND RETURN
***********************************************************************
*        LITERALS AND CONSTANTS                                       *
***********************************************************************
CLCNODE  CLC   0(0,R3),ALNODE          (EXECUTED) COMPARE FROM/TO NODE
MVCNODE  MVC   0(0,R1),0(R3)           (EXECUTED) MOVE FROM-NODE TO MSG
MVCFUID  MVC   1(0,R1),0(R6)           (EXECUTED) MOVE FROM-USER TO MSG
MVCRECX  MVC   L'SE549REC(0,R1),RECSXMIT (EXECUTED) MOVE NUM RECS XMITD
MVCTUID  MVC   L'SE549LGN(0,R1),ALUSER   (EXECUTED) MOVE TO-USER TO MSG
RECXMASK DC    X'4020202020202120'     PATTERN MASK TO EDITMARK REC NUM
*
SE549HDR DS    0F                      SVC34 PARMS MUST BE WORD BOUNDRY
         DC    H'0'                    LENGTH INCLUDING PREFIX
         DC    H'0'                    FILLER REQUIRED BY SVC34
         DC    C'SE '''
DATEJ    DC    CL6'YY.DDD',C' '
TIME1    DC    C'HH.MM.SS',C' '
         DC    C'$HASP549 MAIL FROM('
SE549LEN EQU   *-SE549HDR              LENGTH OF HEADER
SE549REC DC    C') RECORDS('
SE549LGN DC    C')'',LOGON,NOWAIT,USER=('
*
         LTORG
***********************************************************************
*        DSECTS AND MAPPING MACROES                                   *
***********************************************************************
WORKAREA DSECT
SAVEAREA DS    9D                      STANDARD REGISTER SAVEAREA
DBLWORD  DS    D                       DOUBLE WORD FOR CONVERT-PRINT
         DS    CL1                     DUMMY FIELD
DDATE    DS    CL7                     WORK FIELD FOR FORMAT DATE
CTME1    DS    CL10                    WORK FIELD FOR FORMAT TIME
RECSXMIT DS    XL8                     RECORDS TRANSMITTED (PRINTABLE)
MSGAREA  DS    0F,CL128                MSG CREATION AREA (ON FULLWORD!)
WORKLEN  EQU   *-WORKAREA
***********************************************************************
*        LOCAL MAPPING FOR INMZX02 ENTRY PARAMETER LIST               *
***********************************************************************
PL@LIST  DSECT                         ENTRY PARAMETER LIST
PLUSERWD DS    A                       ADDR OF A USER WORD
PLXMKWDP DS    A                       ADDR OF KEYWORD PARM('STRING')
PLACTFLG DS    A                       ADDR OF 1 BYTE ACTION FLAGS
PLTSCPPL DS    A                       ADDR OF TSO CMD PROCSR PARM LIST
PLXMEMSG DS    A                       ADDR OF ERR MSG XMIT TO ISSUE
PLSTAFLG DS    A                       ADDR OF 1 BYTE STATUS FLAGS
PLNOTJES EQU   X'80'                     OUTPUT NOT JES (IS DSN OR DD)
PLFUTXTU DS    A                       ADDR OF FROM-USER TEXT UNITS
PLFDTXTU DS    A                       ADDR OF FROM-DATASET TEXT UNITS
PLTULIST DS    A                       ADDR OF TO-USER DATA CHAIN
PLNUMREC DS    A                       ADDR OF WORD, NUM RECORDS XMITED
PLXMITRC DS    A                       ADDR OF WORD, TRANSMIT CMD RETCD
***********************************************************************
*        LOCAL MAPPING FOR ADDRESS LIST DATA CHAIN OF TO-USERS        *
***********************************************************************
AL@LIST  DSECT                         ADDRESS LIST CHAIN OF TO-USERS
ALNEXT   DS    A                       ADDR OF NEXT ENTRY, OR ZERO
ALNODEL  DS    H                       LENGTH OF TARGET NODE NAME
ALNODE   DS    CL8                     TARGET NODE NAME
ALUSERL  DS    H                       LENGTH OF TARGET USERID
ALUSER   DS    CL8                     TARGET USERID
ALNICKL  DS    H                       LENGTH OF NICKNAME, OR ZERO
ALNICK   DS    CL8                     NICKNAME OF USERID
ALNAMEL  DS    H                       LENGTH OF NAME TAG, OR ZERO
ALNAME   DS    CL30                    NAME TAG OF USERID
ALFLAG   DS    X                       FLAG BYTE
ALNOTIFY EQU   X'80'                     REQUEST NOTIFY FOR THIS USERID
ALXMITOK EQU   X'20'                     XMIT SUCCESFULLY COMPLETED
         DS    X                       (RESERVED)
ALPARML  DS    H                       LENGTH OF PARM TAG, OR ZERO
ALPARM   DS    CL30                    PARM TAG OF USERID
***********************************************************************
*        XMIT/RECEIVE TEXT UNIT MAPPING                               *
***********************************************************************
         INMTEXTU
         END
