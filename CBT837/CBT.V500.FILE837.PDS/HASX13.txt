HASX13   TITLE 'JES2 EXIT 13 NOTIFY'
*****************************************************************
* DESCRIPTIVE NAME = USER EXIT TO NOTIFY TSO USER OF INCOMING   *
*                    DATA TO BE RECEIVED.                       *
*                                                               *
* FUNCTION = PROVIDE SUPPORT FOR TSO/E TO NOTIFY THE TS USER    *
*            WHEN A FILE IS WAITING ON THE RECEIVE QUEUE.       *
*                                                               *
* ENTRY POINT = EXIT13                                          *
*****************************************************************
         COPY  $HASPGBL           COPY HASP GLOBALS
HASX13   $MODULE TITLE='JES2 EXIT 13 NOTIFY',                          +
               ENVIRON=JES2,                                           +
               RMODE=ANY,                                          @430+
               $HCT,                        HASP HCT DSECT             +
               $BUFFER,                     HASP BUFFER DSECT          +
               RPL,                         HASP RPL   DSECT           +
               $JCT,                        HASP JCT DSECT             +
               $JQE,                        HASP JQE DSECT             +
               $JOE,                        HASP JOE DSECT             +
               $DCT,                        HASP DCT DSECT             +
               $PCE,                        HASP PCE DSECT             +
               $QSE,                        HASP QSE DSECT             +
               $CAT,                        HASP CAT DSECT             +
               $MIT,                        HASP MIT DSECT             +
               $PDDB,                       HASP PDDB DSECT            +
               $NHD,                        HASP NHD DSECT             +
               $HASPEQU                     HASP EQUATES
EXIT13   $ENTRY BASE=R12                    ESTABLISH ADDRESSABILITY
         $SAVE                              SAVE CALLERS REGISTERS
         LR    R12,R15                      ESTABLISH BASE
         L     R2,0(,R1)                    GET NJH ADDR
         L     R3,8(,R1)                    GET PDDB ADDR
         GETMAIN RC,LV=X13LEN               GETMAIN BUFFER
         LTR   R15,R15                      GETMAIN OK?
         BNZ   RETURN8                      RETURN W/NOTIFY USER
         LR    R9,R1                        SAVE THE RETURN ADDR
         USING X13WORK,R9                   ESTABLISH ADDRESSBILITY
         TIME  DEC                          GET SYSTEM TIME
         ST    R0,DWORK                     SAVE TIME
         ST    R1,DWORK+4                   SAVE DATE
         OI    DWORK+3,X'0F'                PUT SIGN ON
         MVC   DDATE-1(7),=X'4021204B202020'     MAKE DATE READABLE
         ED    DDATE-1(7),DWORK+5           SAME
         MVC   CTME1-1(11),=X'F021207A20207A20207A20'
         ED    CTME1-1(11),DWORK            SAME
         MVC   MSGAREA(SE549LEN),SE549HDR   MOVE IN '$HASP549...'
         MVC   MSGAREA+DATEJ-SE549HDR(6),DDATE   MOVE IN SYSDATE
         MVC   MSGAREA+TIME1-SE549HDR(8),CTME1   MOVE IN SYSTIME
         LA    R5,MSGAREA+SE549LEN          POINT TO THE END
         MVC   0(8,R5),NJHGORGN-NJH(R2)     MOVE ORIGIN NODE
         LA    R4,NJHGORGN-NJH+7(R2)        POINTS TO LAST BYTE
         LA    R1,3                         FLOAT FOR 3 BYTES
MOVNODE  CLI   0(R4),C' '                   IS THIS A BLANK?
         BNE   MOVSLASH                     NO, GO MOVE IN '/'
         BCTR  R4,0                         DECREASE R4 BY 1
         BCT   R1,MOVNODE                   GO CHECK NODE LENGTH
MOVSLASH LA    R5,5(R1,R5)                  BUMP TO THE END
         MVI   0(R5),C'/'                   MOVE IN '/'
         LA    R5,1(R5)                     BUMP TO THE END
         MVC   0(8,R5),NJHGJNAM-NJH(R2)     MOVE ORIGIN SENDER
         LA    R5,8(R5)                     POINT TO THE END
         CLI   NJHGJNAM-NJH+7(R2),C' '      IS SENDER NAME 7 BYTES?
         BNE   MOVRECS                      NO, GO MOVE IN RECORDS
         BCTR  R5,0                         DECREASE R5 BY 1
MOVRECS  MVC   0(L'SE549REC,R5),SE549REC    MOVE IN ') RECORDS('
         LA    R5,L'SE549REC(R5)            BUMP TO THE END
         ICM   R7,15,PDBRECCT-PDB(R3)       GET RECORD COUNT
         CVD   R7,DWORK                     CONVERT TO PACK DECIMAL
         MVC   DDWORK,=X'4020202020202120'  MOVE IN PATTERN MASK
         LA    R1,DDWORK+7                  MIN 1 BYTE REC COUNT
         LR    R4,R1                        COPY THE ADDRESS
         EDMK  DDWORK(8),DWORK+4            CONVERT TO PRINTABLE
         MVC   0(8,R5),0(R1)                MOVE TO SVC34 MSGAREA
         SR    R4,R1                        CALC RECORD BYTE COUNT
         LA    R5,1(R4,R5)                  BUMP TO THE END
         MVC   0(L'SE549LGN,R5),SE549LGN    MOVE IN 'LOGON,NOWAIT,..'
         LA    R5,L'SE549LGN(R5)            BUMP TO THE END
         MVC   0(8,R5),PDBUSER-PDB(R3)      MOVE USERID OF RECVR
         LA    R4,PDBUSER-PDB+7(R3)         POINT TO THE END OF USERID
         LA    R1,8                         MAX USERID LENGTH
         SR    R0,R0                        CLEAR FLAG
CHKUSER  CLI   0(R4),C' '                   IS THIS A BLANK
         BNE   MOVCLOP                      NO, GO MOVE IN ')'
         BCTR  R4,0                         DEC R4 BY 1, BUMP BACKWARD
         BCT   R1,CHKUSER                   DEC R1 BY 1 & GO CHECK ID
MOVCLOP  LTR   R1,R1                        IS LENGTH ZERO
         BNZ   MOVCLOP1                     NO, THEN MOVE IT TO OUTPUT
         LTR   R0,R0                        IS THIS PDBUSER ALREADY?
         BNZ   RETURN4                      YES, RETURN & NOTIFY
         LA    R0,1(,R0)                    REMEMBER IT IS PDBUSER
         MVC   0(8,R5),PDBWTRID-PDB(R3)     MOVE IN USERID
         LA    R4,PDBWTRID-PDB+7(R3)        POINT TO THE END OF USERID
         LA    R1,8                         MAX USERID LENGTH
         B     CHKUSER                      GO CHECK USERID AGAIN
MOVCLOP1 LA    R5,0(R1,R5)                  BUMP TO THE END
         MVI   0(R5),C')'                   MOVE IN CLOSE ')'
         LA    R5,1(R5)                     BUMP TO THE END
         SR    R0,R0                        CLEAR R0 FOR WTO SVC
         LA    R1,MSGAREA                   LOAD R1 W/ADDR OF MSGAREA
         SR    R5,R1                        CALC SEND PARM. LENGTH
         STH   R5,MSGAREA                   STORE SVC34 PARM. LENGTH
         SVC   34                           ISSUE WTO SVC
         FREEMAIN RC,LV=X13LEN,A=(9)        FREE THE STORAGE
         $RETURN RC=0                       RETURN DO NOT NOTIFY
RETURN4  FREEMAIN RC,LV=X13LEN,A=(9)        FREE THE STORAGE
RETURN8  $RETURN RC=8                       RETURN & NOTIFY USER
*****************************************************************
         LTORG
SE549HDR DS    0F
         DC    H'0'
         DC    H'0'
         DC    C'SE '''
DATEJ    DC    CL6'YY.DDD',C' '
TIME1    DC    C'HH.MM.SS'
         DC    C' $HASP549 MAIL FROM('
SE549LEN EQU   *-SE549HDR
SE549REC DC    C') RECORDS('
SE549LGN DC    C')'',LOGON,NOWAIT,USER=('
*******************************************************************
X13WORK  DSECT
MSGAREA  DS    0F,CL128
DWORK    DS    D
         DS    CL1
DDATE    DS    CL7
CTME1    DS    CL10
DDWORK   DS    CL8
X13LEN   EQU   *-X13WORK
HASX13   CSECT
         $MODEND ,
         END   ,
