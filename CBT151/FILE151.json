{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011344000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE151.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE151.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\t'", "DS1TRBAL": "b'\\x98V'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\x14\\x00\\x05\\x01\\x14\\x00\\x08\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$$$DOC": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "1\n      This file contains a modified LISTCAT from the U.S. Airforce\n      and MURPHY (i'm not sure which file I found it on).  The\n      LISTCAT modifications create an INFO/MVS V3 data base file\n      for a complete searchable LISTCAT ALL of the system catalogs.\n      This data set is an IEBCOPY unloaded partition data set on\n      a no label 6250 BPI tape.  *LABEL=(1,NL,EXPDT=98000)*\n0\n0 file name            content\n+ _________            ______________________________________________\n\n0 $$$$$DOC             This documentation file\n0 INFOCAT              PL/I program source.  Takes in the LISTCAT ALL\n                       and outputs a file for processing by BLGOZUD.\n                       Output file is LRECL=80,BLKSIZE=32640.\n0 INFOJCL              Complete job to create INFO/MVS data base from\n                       LISTCAT.\n0 INFOPLI              PL/I compile job for member INFOCAT\n0 INFSSASM             Memeber to assemble INFO/MVS session parameters\n                       tables (INFSS00) session 00 and (INFSS11)\n                       session 11.\n0 INFSS00              INFO/MVS session member for sess=00\n0 INFSS11              INFO/MVS session member for sess=11\n0 ISR@PRIM             Primary ISPF option Menu.  Shows invocation of\n                       INFO/MVS for both SESS00 and SESS11.\n0 MURPHY               Added to MURPHY source.  Try it you'll like it.\n0\n0 The above has been successfuly run in an MVS/XA system running\n  INFO/MVS/MANAGEMENT V3, ISPF/PDF 2.2.0, and TSO/E.\n0\n0 John D. Sostrom\n  Senior Systems Consultant\n  Dayco Products Inc.\n  333 West First Street\n  Dayton,  Ohio  45401\n\n  (513)226-5747\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "INFOCAT": {"ttr": 518, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*PROCESS GN,SEQ(73,77),A,OF;                                            00001**4\n INFOCAT: PROC REORDER OPTIONS(MAIN);                                   00002\n-/*---------------------------------------------------------------------00003\n   THIS PROGRAM READS THE OUTPUT OF IDCAMS \"LISTCAT ALL\" AND PRODUCES   00004\n   INPUT FOR INFO/MVS BLGOZB PROGRAM.  BLGOZC MAY BE USED TO CREATE     00005**6\n   AN INFO/MVS-SEARCHABLE DATA BASE.                                    00006\n   CHANGED 10/21/88 JDS MODIFIED TO PRODUCE INFO/MVS R3 OUTPUT.\n   CHANGED 10/26/88 JDS ADDED CHECKS FOR NEW KEYWORDS ON CREATION DATE\n                        AND DEVICE TYPES OF DASD AND TAPE.\n ---------------------------------------------------------------------*/00007\n         DCL INREC CHAR(255) VARYING STATIC,                            00008\n             CARD  CHAR(80)  STATIC     INIT((80)' '),                  00009**6\n             SYSIN  FILE RECORD SEQUENTIAL INPUT,                       00010**6\n             SYSUT1 FILE RECORD SEQUENTIAL INPUT,                       00011**6\n             SYSUT2 FILE RECORD SEQUENTIAL OUTPUT                       00012\n                    ENV(FB RECSIZE(80) BLKSIZE(32640) TOTAL),           00013\n             1 OUT1 STATIC,     /* HEADER LINE */                       00014\n               2 ID      CHAR(2)        INIT('H '),                     00016**6\n               2 ENTRYL  CHAR(1)        INIT('U'),                      00017**6\n               2 ENTRYN  PIC '999999'   INIT(0),                        00018**6\n               2 FIL102  CHAR(63)       INIT((63)' '),                  00019**6\n               2 FIL103  CHAR(8)        INIT((8)' '),                   00015\n             1 OUT2 STATIC,     /* TITLE LINE 1 */                      00021\n               2 ID      CHAR(2)        INIT('T '),                     00023**6\n               2 TIMEX   CHAR(15)       INIT((15)' '),                  00024**6\n               2 DATET   CHAR(09)       INIT((09)' '),                  00025**6\n               2 FIL201  CHAR(05)       INIT('CAT: '),                  00026**6\n               2 CATNAME CHAR(41)       INIT((41)' '),                  00027**6\n               2 FIL202  CHAR(8)        INIT((8)' '),                   00015\n             1 OUT3 STATIC,     /* TITLE LINE 2 */                      00028\n               2 ID      CHAR(2)        INIT('T '),                     00030**6\n               2 FIL301  CHAR(7)        INIT('ENTRY: '),                00031**6\n               2 ENTRYT  CHAR(11)       INIT((11)' '),                  00032**6\n               2 FIL302  CHAR(1)        INIT(' '),                      00033**6\n               2 ENTRY   CHAR(44)       INIT((44)' '),                  00034**6\n               2 FIL303  CHAR(7)        INIT((7)' '),                   00033**6\n               2 FIL304  CHAR(8)        INIT((8)' '),                   00015\n             1 OUT4 STATIC,     /* KEYWORD LINE */                      00035\n               2 ID      CHAR(2)        INIT('K '),                     00037**6\n               2 TEXT4   CHAR(70)       INIT((70)' '),                  00038**6\n               2 FIL401  CHAR(8)        INIT((8)' '),                   00015\n             1 OUT5 STATIC,     /* BLANK LINE BETWEEN KEYWORD / TEXT */ 00039\n               2 FIL501  CHAR(1)        INIT(' '),                      00033**6\n               2 TEXT5   CHAR(71)       INIT((71)' '),                  00041**6\n               2 FIL502  CHAR(8)        INIT((8)' '),                   00015\n             1 OUT6 STATIC,     /* TEXT LINE */                         00042\n               2 FIL601  CHAR(1)        INIT(' '),                      00033**6\n               2 TEXT6   CHAR(71)       INIT((71)' '),                  00044**6\n               2 FIL602  CHAR(8)        INIT((8)' '),                   00015\n             1 OUT7 STATIC,     /* END LINE */                          00045\n               2 ID      CHAR(4)        INIT('$EOM'),                   00047**6\n               2 FIL701  CHAR(68)       INIT((68)' '),                  00033**6\n               2 FIL702  CHAR(8)        INIT((8)' '),                   00015\n             1 OUT8 STATIC,     /* END LINE */                          00045\n               2 ID      CHAR(9)        INIT('H G000001'),              00047**6\n               2 FIL801  CHAR(63)       INIT((63)' '),                  00033**6\n               2 FIL802  CHAR(8)        INIT((8)' '),                   00015\n             1 OUT9 STATIC,     /* END LINE */                          00045\n               2 ID      CHAR(2)        INIT('T '),                     00047**6\n               2 TEXT9   CHAR(21)       INIT('DATA BASE TITLE ENTRY'),\n               2 FIL901  CHAR(49)       INIT((49)' '),                  00033**6\n               2 FIL902  CHAR(8)        INIT((8)' '),                   00015\n             G3REC CHAR(80) VARYING STATIC INIT(' '),                   00048**6\n             (EOF1,EOF2) CHAR(1) STATIC INIT('N'),                      00049**6\n             KEY(1024)  CHAR(16) VARYING STATIC,                        00050*12\n             LINE(1024) CHAR(72) VARYING STATIC,                        00051\n             TKEY CHAR(16) VARYING STATIC,\n             FYEAR CHAR(2) STATIC INIT('00'),\n             FDAY  CHAR(3) STATIC INIT('000'),\n             (ENT#,NK,P,I,NT,LX,#IN),                                   00052\n             FIXED BIN(15) STATIC INIT(0);                              00053\n         ON ENDFILE(SYSUT1) EOF1 = 'Y';                                 00054\n         ON ENDFILE(SYSIN)  EOF2 = 'Y';                                 00055**6\n         ON UNDEFINEDFILE(SYSIN)  EOF2 = 'Y';                           00056**6\n0/*      CREATE DATA BASE TITLE ENTRY */                                00057**6\n0        WRITE FILE(SYSUT2) FROM(OUT8);                                 00060**6\n         WRITE FILE(SYSUT2) FROM(OUT9);                                 00063**6\n         READ FILE(SYSIN) INTO(CARD);                                   00064**6\n         DO WHILE (EOF2 = 'N');                                         00065**6\n           SUBSTR(TEXT6,1,71) = SUBSTR(CARD,1,71);                      00068**8\n           WRITE FILE(SYSUT2) FROM(OUT6);                               00069**7\n           READ FILE(SYSIN) INTO(CARD);                                 00070**6\n           END;                                                         00071**6\n         WRITE FILE(SYSUT2) FROM(OUT7);                                 00074**8\n0/*      READ FIRST RECORD */                                           00075\n0        READ FILE(SYSUT1) INTO(INREC);                                 00076\n         #IN = 1;                                                       00077\n0/*      CREATE FIRST ENTRY */                                          00078\n0        CALL KEYWORD('TITLE');                                         00079\n         CALL ADD('THIS FILE (U) IS THE OUTPUT FROM IDCAMS \"LISTCAT ALL\"00080\n .');                                                                   00081\n         CALL WRITE;                                                    00082\n0/*      LOOP WHILE READING INPUT */                                    00083\n0        DO WHILE (EOF1 = 'N');                                         00084\n0/*        PAGE HEADING */                                              00085\n0          IF SUBSTR(INREC,1,9) = '1IDCAMS  ' THEN DO;                  00086\n             IF TIMEX = ' ' THEN DO;                                    00087\n               TIMEX = SUBSTR(INREC,68,15);                             00088\n               DATET = SUBSTR(INREC,90,09);                             00089\n               END;                                                     00090\n             GO TO READ;                                                00091\n             END;                                                       00092\n0/*        PAGE SUB-HEADING */                                          00093\n0          IF SUBSTR(INREC,1,1) = '-' THEN                              00094\n           IF SUBSTR(INREC,31,24) = 'LISTING FROM CATALOG -- ' THEN DO; 00095\n             IF SUBSTR(INREC,55) \u00ac= CATNAME THEN DO;                    00096\n               CALL WRITE;                                              00097\n               CATNAME = SUBSTR(INREC,55);                              00098\n               END;                                                     00099\n             GO TO READ;                                                00100\n             END;                                                       00101\n0/*        NEW ENTRY */                                                 00102**6\n0          IF SUBSTR(INREC,1,7)  = '0ALIAS '                            00103**6\n            | SUBSTR(INREC,1,9)  = '0CLUSTER '                          00104**6\n            | SUBSTR(INREC,1,9)  = '0NONVSAM '                          00105**6\n            | SUBSTR(INREC,1,13) = '0USERCATALOG '                      00107**6\n            | SUBSTR(INREC,1,11) = '0PAGESPACE '                        00107**6\n            | SUBSTR(INREC,1,10) = '0GDG BASE '                         00107**6\n            | SUBSTR(INREC,1,8)  = '0VOLUME ' THEN DO;                  00108**6\n             CALL WRITE;                                                00109\n             ENTRYT = SUBSTR(INREC,2,INDEX(INREC,' ')-2);               00110\n             CALL KEYWORD(SUBSTR(INREC,2,INDEX(INREC,' ')-2));          00111\n             ENTRY = SUBSTR(INREC,18);                                  00112\n             CALL KEYWORD(SUBSTR(INREC,18));                            00113\n             IF SUBSTR(INREC,26,1) \u00ac= ' ' THEN DO;\n                CALL KEYWORD(SUBSTR(INREC,18,                           00113\n                INDEX(SUBSTR(INREC,18,9),'.')-1));                      00113\n                END;                                                    00114\n             END;                                                       00114\n0          IF SUBSTR(INREC,2,45) =                                      00115\n           '         THE NUMBER OF ENTRIES PROCESSED WAS:' THEN DO;     00116\n             CALL WRITE;                                                00117\n             ENTRYT  = 'STATISTICS';                                    00118*10\n             ENTRY   = 'ENTRY';                                         00119*10\n             CALL KEYWORD('STATISTICS');                                00120\n             END;                                                       00121\n0          IF SUBSTR(INREC,38,16) = 'CREATION--------' THEN DO;\n             FYEAR = SUBSTR(INREC,56,2);\n             FDAY  = SUBSTR(INREC,59,3);\n             SUBSTR(G3REC,1,7) = 'CRDATE/';\n             SUBSTR(G3REC,8,2) = FYEAR;\n             SUBSTR(G3REC,10,3) = FDAY;\n             CALL KEYWORD(SUBSTR(G3REC,1,12));\n             SUBSTR(G3REC,1,7) = 'CRYEAR/';\n             SUBSTR(G3REC,8,2) = FYEAR;\n             SUBSTR(G3REC,10,3) = FDAY;\n             CALL KEYWORD(SUBSTR(G3REC,1,9));\n             END;\n0          IF SUBSTR(INREC,38,10) = 'DEVTYPE---' THEN DO;\n             IF SUBSTR(INREC,53,4) = '3010' THEN\n             CALL KEYWORD('DASD');\n             IF SUBSTR(INREC,53,4) = '3200' THEN\n             CALL KEYWORD('TAPE');\n             END;\n0          IF SUBSTR(INREC,9,10) = 'DEVTYPE---' THEN DO;\n             IF SUBSTR(INREC,24,4) = '3010' THEN\n             CALL KEYWORD('DASD');\n             IF SUBSTR(INREC,24,4) = '3200' THEN\n             CALL KEYWORD('TAPE');\n             END;\n0          IF SUBSTR(INREC,2,16) = '   DATA ------- '                   00122\n            | SUBSTR(INREC,2,16) = '   INDEX ------ '                   00123\n            | SUBSTR(INREC,2,16) = '       ALIAS----'                   00124\n            | SUBSTR(INREC,2,16) = '       USERCAT--'                   00124\n            | SUBSTR(INREC,2,16) = '       NONVSAM--' THEN              00125\n           CALL KEYWORD(SUBSTR(INREC,18));                              00126\n0          IF SUBSTR(INREC,2,16) = '         DSN----' THEN              00127\n           CALL KEYWORD(SUBSTR(INREC,18,                                00128\n           INDEX(SUBSTR(INREC,18,45),' ')-1));                          00129\n0          IF SUBSTR(INREC,2,25) = '       VOLSER------------' THEN     00130\n           CALL KEYWORD(SUBSTR(INREC,27,                                00131\n           INDEX(SUBSTR(INREC,27,7),' ')-1));                           00132\n0          IF SUBSTR(INREC,2,25) = '       OWNER-IDENT-------' THEN     00133\n           IF SUBSTR(INREC,27,6) \u00ac= '(NULL)' THEN                       00134\n           CALL KEYWORD(SUBSTR(INREC,27,                                00135\n           INDEX(SUBSTR(INREC,27,9),' ')-1));                           00136\n0          I = LENGTH(INREC);                                           00137\n           DO WHILE (SUBSTR(INREC,I,1) = ' ');                          00138\n             I = I - 1;                                                 00139\n             END;                                                       00140\n           IF I > 71 THEN DO;                                           00141\n             CALL ADD(SUBSTR(INREC,2,64));                              00142\n             CALL ADD(SUBSTR(INREC,62));                                00143\n             END;                                                       00144\n           ELSE DO;                                                     00145\n             CALL ADD(SUBSTR(INREC,2));                                 00146\n             END;                                                       00147\n READ:     READ FILE(SYSUT1) INTO(INREC);                               00148\n           #IN = #IN + 1;                                               00149\n           END;                                                         00150\n         CALL WRITE;                                                    00151\n         RETURN;                                                        00152\n1/*      ADD A LINE OF TEXT TO THE CURRENT ENTRY */                     00153\n0ADD:    PROC(X);                                                       00154\n         DCL X CHAR(*);                                                 00155\n         IF NT < 1024 THEN DO;                                          00156\n           NT = NT + 1;                                                 00157\n           LINE(NT) = ' '||X;                                           00158\n           END;                                                         00159\n         ELSE DO;                                                       00160\n           PUT SKIP(2) EDIT ('MAXIMUM ENTRY LINES EXECEEDED.  ',        00161\n           'INPUT RECORD NUMBER ',#IN,'.',                              00162\n           'LINE IGNORED: \"',X,'\".')(2 A,P 'ZZ,ZZZ,ZZ9',A,SKIP,3 A);    00163\n           END;                                                         00164\n         RETURN;                                                        00165\n         END ADD;                                                       00166\n1/*      WRITE OUT THE CURRENT ENTRY */                                 00167\n0WRITE:  PROC;                                                          00168\n         IF NK = 0 THEN RETURN;                                         00169\n         ENT# = ENT# + 1;                                               00170\n         ENTRYN = ENT#;                                                 00171\n         NPIC = NT + 5;                                                 00174**3\n         WRITE FILE(SYSUT2) FROM(OUT1);                                 00175\n         WRITE FILE(SYSUT2) FROM(OUT2);                                 00178\n         WRITE FILE(SYSUT2) FROM(OUT3);                                 00181\n         P = 1;                                                         00182\n         TEXT4 = (70)' ';                                               00183\n         DO I = 1 TO NK;                                                00184\n           IF P + LENGTH(KEY(I)) > 70 THEN                              00185\n             DO;                                                        00186\n             WRITE FILE(SYSUT2) FROM(OUT4);                             00189\n             P = 1;                                                     00190\n             TEXT4 = (70)' ';                                           00191\n             END;                                                       00192\n           SUBSTR(TEXT4,P,LENGTH(KEY(I))) = KEY(I);                     00193\n           P = P + LENGTH(KEY(I)) + 1;                                  00194\n           END;                                                         00195\n         WRITE FILE(SYSUT2) FROM(OUT4);                                 00198\n         WRITE FILE(SYSUT2) FROM(OUT5);                                 00201\n         DO I = 1 TO NT;                                                00202\n           TEXT6 = LINE(I);                                             00205\n           WRITE FILE(SYSUT2) FROM(OUT6);                               00206\n           END;                                                         00207\n         WRITE FILE(SYSUT2) FROM(OUT7);                                 00210\n         NK,NT = 0;                                                     00211\n         RETURN;                                                        00212\n         END;                                                           00213\n1/*      ADD A KEYWORD TO THE CURRENT ENTRY */                          00214\n0KEYWORD: PROC(X);                                                      00215\n         DCL X CHAR(*);                                                 00216*13\n         IF VERIFY(X,' ') = 0 | LENGTH(X) < 2 THEN RETURN;              00217\n         IF NK = 0 THEN DO;                                             00218\n           NK = 1;                                                      00219\n           KEY(1) = X;                                                  00220*13\n           RETURN;                                                      00221\n           END;                                                         00222\n         ELSE IF NK < 1024 THEN DO;                                     00223\n           TKEY = X;\n           DO I = 1 TO NK;                                              00224\n             IF TKEY = KEY(I) THEN RETURN;                              00225*13\n             END;                                                       00226\n           NK = NK + 1;                                                 00227\n           KEY(NK) = X;                                                 00228*13\n           END;                                                         00229\n         ELSE DO;                                                       00230\n           PUT SKIP(2) EDIT ('MAXIMUM KEYWORDS EXECEEDED.  ',           00231\n           'INPUT RECORD NUMBER ',#IN,'.',                              00232\n           'KEYWORD IGNORED: \"',X,'\".')(2 A,P 'ZZ,ZZZ,ZZ9',A,SKIP,3 A); 00233\n           END;                                                         00234\n         RETURN;                                                        00235\n         END KEYWORD;                                                   00236\n         END;                                                           00237\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "INFOJCL": {"ttr": 523, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//T800960T JOB (99999,JDS),'JOHN SOSTROM',\n//         CLASS=I,MSGCLASS=X,NOTIFY=T800960\n/*JOBPARM LINES=9999\n//*-----------------------------------------------------------------***\n//*                                                                 ***\n//* SECTION 1 - INSURE OLD WORK FILES ARE GONE                      ***\n//*                                                                 ***\n//*-----------------------------------------------------------------***\n//JSTP0010 EXEC PGM=IEFBR14\n//SYSPRINT  DD SYSOUT=*\n//LISTCAT   DD UNIT=WORK,SPACE=(CYL,(100,10)),DISP=(MOD,DELETE),\n//             DSN=SYSPSPRD.INFO.LISTCAT\n//INFOCAT   DD UNIT=WORK,SPACE=(CYL,(100,10),RLSE),DISP=(MOD,DELETE),\n//             DSN=SYSPSPRD.INFO.TECVSAM\n//*-----------------------------------------------------------------***\n//*                                                                 ***\n//* SECTION 2 - CREATE LISTCAT ALL CATALOG LISTING                  ***\n//*                                                                 ***\n//*-----------------------------------------------------------------***\n//JSTP0020 EXEC PGM=IDCAMS,REGION=1024K\n//SYSPRINT  DD UNIT=WORK,SPACE=(CYL,(100,10)),DISP=(NEW,CATLG),\n//             DSN=SYSPSPRD.INFO.LISTCAT\n//SYSIN     DD *\n    LISTC ALL CATALOG(SYS1.MASTER.CATALOG.VRESCAT)\n    LISTC ALL CATALOG(CATALOG.MVSICF1.VSMPWRK)\n    LISTC ALL CATALOG(CATALOG.NVSMPRD)\n    LISTC ALL CATALOG(CATALOG.NVSMTRN)\n    LISTC ALL CATALOG(CATALOG.NVSMTST)\n    LISTC ALL CATALOG(CATALOG.TMPTECH)\n    LISTC ALL CATALOG(CATALOG.TSUSERS)\n    LISTC ALL CATALOG(CATALOG.VPRD080)\n    LISTC ALL CATALOG(CATALOG.VPRD081)\n    LISTC ALL CATALOG(CATALOG.VPRD082)\n    LISTC ALL CATALOG(CATALOG.VSAMPRD)\n    LISTC ALL CATALOG(CATALOG.VSAMTRN)\n    LISTC ALL CATALOG(CATALOG.VSAMTST)\n    LISTC ALL CATALOG(CATALOG.VTEST01)\n    LISTC ALL CATALOG(CATALOG.V3380A1)\n    LISTC ALL CATALOG(CATALOG.V3380BB)\n    LISTC ALL CATALOG(CATALOG.V3380B2)\n    LISTC ALL CATALOG(CATALOG.MVS220M.VSMPWRK)\n    LISTC ALL CATALOG(CATALOG.MVS2201.VMVSD1A)\n    LISTC ALL CATALOG(CATALOG.MVS2201.VMVSR1A)\n    LISTC ALL CATALOG(CATALOG.MVS2201.VSMPVOL)\n    LISTC ALL CATALOG(SYS1.MVS220M.MASTCAT.VPAGE01)\n/*\n//*-----------------------------------------------------------------***\n//*                                                                 ***\n//* SECTION 3 - PROCESS LISTCAT OUTPUT                              ***\n//*                                                                 ***\n//*-----------------------------------------------------------------***\n//JSTP0030 EXEC PGM=INFOCAT,COND=(4,LT)\n//SYSUDUMP  DD SYSOUT=*\n//SYSPRINT  DD SYSOUT=*\n//SYSUT1    DD DSN=SYSPSPRD.INFO.LISTCAT,DISP=(OLD,KEEP)\n//SYSUT2    DD UNIT=WORK,SPACE=(CYL,(100,10),RLSE),DISP=(NEW,CATLG),\n//             DSN=SYSPSPRD.INFO.TECVSAM\n//SYSIN     DD * (THIS DATA WILL BECOME ENTRY G00003)\n\n THIS DATA BASE CONTAINS:\n\n    OUTPUT PRODUCED BY \"LISTCAT ALL\" AGAINST ALL XXX MASTER\n    CATALOGS: (AND SELECTED USER CATALOGS)\n\n        SYS1.MASTER.CATALOG.VRESCAT    SYSTEM MASTER CATALOG\n        CATALOG.MVSICF1.VSMPWRK        MISC SYSTEM FILE CATALOG\n        CATALOG.NVSMPRD                NON-VSAM PRODUCTION\n        CATALOG.NVSMTRN                NON-VSAM TRAINING\n        CATALOG.NVSMTST                NON-VSAM TEST\n        CATALOG.TMPTECH                TEMPORARY TECH CATALOG\n        CATALOG.TSUSERS                TSO USER ID CATALOG\n        CATALOG.VPRD080\n        CATALOG.VPRD081\n        CATALOG.VPRD082\n        CATALOG.VSAMPRD                VSAM PRODUCTION\n        CATALOG.VSAMTRN                VSAM TRAINING\n        CATALOG.VSAMTST                VSAM TEST\n        CATALOG.VTEST01\n        CATALOG.V3380A1\n        CATALOG.V3380BB\n        CATALOG.V3380B2\n        CATALOG.MVS220M.VSMPWRK        CBIPO SMP WORK CATALOG\n        CATALOG.MVS2201.VMVSD1A        CBIPO DLIB VOLUME CATALOG\n        CATALOG.MVS2201.VMVSR1A        CBIPO RES VOLUME CATALOG\n        CATALOG.MVS2201.VSMPVOL        CBIPO SMP CATALOG\n        SYS1.MVS220M.MASTCAT.VPAGE01   CBIPO TEMP MASTER CATALOG\n\n\n PLEASE ADDRESS ANY QUESTIONS ABOUT THIS DATA BASE TO JOHN SOSTROM,\n EXTENSION 5747.\n/*\n//*-----------------------------------------------------------------***\n//*                                                                 ***\n//* SECTION 4 - REALLOCATE NEW INFO/MVS VSAM FILES                  ***\n//*                                                                 ***\n//*-----------------------------------------------------------------***\n//JSTP0040 EXEC PGM=IDCAMS,COND=(4,LT)\n//SYSPRINT  DD SYSOUT=*\n//SYSIN     DD *\n  DELETE SYSVSPRD.INFO.LISTCAT.SDDS CL PRG\n  DEF CL(                                           -\n         NAME(SYSVSPRD.INFO.LISTCAT.SDDS)           -\n         VOLUMES(WORK03)                            -\n         INDEXED                                    -\n         KEYS(8 0)                                  -\n         SHAREOPTIONS(3)                            -\n         UNIQUE                                     -\n        )                                           -\n    DATA(                                           -\n         NAME(SYSVSPRD.INFO.LISTCAT.SDDS.DATA)      -\n         CYLINDERS(50 10)                           -\n         CISZ(8192)                                 -\n         RECORDSIZE(2000 8185)                      -\n         FREESPACE(30 30)                           -\n         SPEED                                      -\n        )                                           -\n   INDEX(                                           -\n         NAME(SYSVSPRD.INFO.LISTCAT.SDDS.INDEX)     -\n         CYLINDERS(2 1)                             -\n         CISZ(512)                                  -\n         IMBED                                      -\n         REPLICATE                                  -\n        )\n  DELETE SYSVSPRD.INFO.LISTCAT.SDIDS CL PRG\n  DEF CL(                                           -\n         NAME(SYSVSPRD.INFO.LISTCAT.SDIDS)          -\n         VOLUMES(WORK04)                            -\n         INDEXED                                    -\n         KEYS(16 0)                                 -\n         SHAREOPTIONS(3)                            -\n         UNIQUE                                     -\n        )                                           -\n    DATA(                                           -\n         NAME(SYSVSPRD.INFO.LISTCAT.SDIDS.DATA)     -\n         CISZ(4095)                                 -\n         CYLINDERS(50 10)                           -\n         RECORDSIZE(35 1017)                        -\n         FREESPACE(10 10)                           -\n         SPEED                                      -\n        )                                           -\n   INDEX(                                           -\n         NAME(SYSVSPRD.INFO.LISTCAT.SDIDS.INDEX)    -\n         CYLINDERS(2 1)                             -\n         CISZ(2048)                                 -\n         IMBED                                      -\n         REPLICATE                                  -\n        )\n/*\n//*-----------------------------------------------------------------***\n//*                                                                 ***\n//* SECTION 5 - INITIALIZE SDDS DATA BASE FILE                      ***\n//*                                                                 ***\n//*-----------------------------------------------------------------***\n//JSTP0050 EXEC PGM=BLGUT2\n//STEPLIB   DD DISP=SHR,DSN=SYSPOPRD.INFO.BLGMOD1\n//          DD DISP=SHR,DSN=SYSPOPRD.INFO.LINKLIB\n//SYSPRINT  DD SYSOUT=*\n//BLGSD     DD DISP=OLD,DSN=SYSVSPRD.INFO.LISTCAT.SDDS\n//*-----------------------------------------------------------------***\n//*                                                                 ***\n//* SECTION 6 - INITIALIZE SDIDS DATA BASE FILE                     ***\n//*                                                                 ***\n//*-----------------------------------------------------------------***\n//JSTP0060 EXEC PGM=BLGUT2,COND=(4,LT)\n//STEPLIB   DD DISP=SHR,DSN=SYSPOPRD.INFO.BLGMOD1\n//          DD DISP=SHR,DSN=SYSPOPRD.INFO.LINKLIB\n//SYSPRINT  DD SYSOUT=*\n//BLGSD     DD DISP=OLD,DSN=SYSVSPRD.INFO.LISTCAT.SDIDS\n//*-----------------------------------------------------------------***\n//*                                                                 ***\n//* SECTION 7 - LOAD NEW DATA BASE                                  ***\n//*                                                                 ***\n//*-----------------------------------------------------------------***\n//JSTP0070 EXEC PGM=BLGOZUD,PARM='SESS=11,NAME=1',COND=(4,LT)\n//STEPLIB   DD DISP=SHR,DSN=SYSPOPRD.INFO.BLGMOD1\n//          DD DISP=SHR,DSN=SYSPOPRD.INFO.LINKLIB\n//SYSPRINT  DD SYSOUT=*\n//SYSIN     DD DISP=SHR,DSN=SYSPSPRD.INFO.TECVSAM\n//*-----------------------------------------------------------------***\n//*                                                                 ***\n//* SECTION 8 - DELETE WORK FILES                                   ***\n//*                                                                 ***\n//*-----------------------------------------------------------------***\n//JSTP0010 EXEC PGM=IEFBR14,COND=(0,NE)\n//SYSPRINT  DD SYSOUT=*\n//LISTCAT   DD UNIT=WORK,SPACE=(CYL,(100,10)),DISP=(MOD,DELETE),\n//             DSN=SYSPSPRD.INFO.LISTCAT\n//INFOCAT   DD UNIT=WORK,SPACE=(CYL,(100,10),RLSE),DISP=(MOD,DELETE),\n//             DSN=SYSPSPRD.INFO.TECVSAM\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "INFOPLI": {"ttr": 527, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//T800960L JOB (99999,JDS),'JOHN SOSTROM',\n//         CLASS=I,MSGCLASS=X,NOTIFY=T800960\n/*JOBPARM LINES=9999\n//*-----------------------------------------------------------------***\n//PLIXCL   PROC MEMBER=\n//PLI      EXEC PGM=IEL0AA,PARM='OBJECT,NODECK',REGION=1024K\n//STEPLIB   DD DISP=SHR,DSN=PLI.PLICOMP\n//SYSPRINT  DD SYSOUT=*\n//SYSLIN    DD DISP=(,PASS),UNIT=WORK,SPACE=(80,(250,100))\n//SYSUT1    DD UNIT=WORK,SPACE=(1024,(200,50),,CONTIG,ROUND)\n//SYSIN     DD DISP=SHR,DSN=SYSPOPRD.LISTCAT.SOURCE(&MEMBER)\n//*-----------------------------------------------------------------***\n//LKED     EXEC PGM=HEWL,PARM='XREF,LIST',COND=(9,LT,PLI),REGION=1024K\n//SYSLIB    DD DISP=SHR,DSN=PLI.PLIBASE\n//SYSLMOD   DD DISP=SHR,DSN=SYS1.TEST.INSTALLS(&MEMBER)\n//SYSUT1    DD UNIT=WORK,SPACE=(1024,(200,50),,CONTIG,ROUND)\n//SYSPRINT  DD SYSOUT=*\n//SYSLIN    DD DSN=*.PLI.SYSLIN,DISP=(OLD,DELETE)\n//         PEND\n//INFOCAT EXEC PLIXCL,MEMBER=INFOCAT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INFSSASM": {"ttr": 529, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//T800960Y JOB (99999,T),'JOHN SOSTROM',CLASS=I,MSGCLASS=X,\n//         NOTIFY=T800960\n//*-------------------------------------------------------------------*\n//*                                                                   *\n//* ASSEMBLE AND LINK SESSION 00 PARAMETERS                           *\n//*                                                                   *\n//*-------------------------------------------------------------------*\n//JSTP0010 EXEC ASMHCL\n//C.SYSLIB  DD DSN=SYSPOPRD.INFO.BLGMACS,DISP=SHR\n//          DD DSN=SYS1.MACLIB,DISP=SHR\n//          DD DSN=SYS1.AMODGEN,DISP=SHR\n//C.SYSIN   DD DSN=SYSPOPRD.LISTCAT.SOURCE(INFSS00),DISP=SHR\n//L.SYSLMOD DD DSN=SYSPOPRD.INFO.LINKLIB,DISP=SHR\n//L.SYSIN   DD *\n ENTRY BLGVDSN\n NAME BLGSES00(R)\n//*-------------------------------------------------------------------*\n//*                                                                   *\n//* ASSEMBLE AND LINK SESSION 11 PARAMETERS                           *\n//*                                                                   *\n//*-------------------------------------------------------------------*\n//JSTP0020 EXEC ASMHCL\n//C.SYSLIB  DD DSN=SYSPOPRD.INFO.BLGMACS,DISP=SHR\n//          DD DSN=SYS1.MACLIB,DISP=SHR\n//          DD DSN=SYS1.AMODGEN,DISP=SHR\n//C.SYSIN   DD DSN=SYSPOPRD.LISTCAT.SOURCE(INFSS11),DISP=SHR\n//L.SYSLMOD DD DSN=SYSPOPRD.INFO.LINKLIB,DISP=SHR\n//L.SYSIN   DD *\n ENTRY BLGVDSN\n NAME BLGSES11(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INFSS00": {"ttr": 769, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "* SESS PARAMETER 00\n         TITLE 'BLGVDSN INFO SESSION PARAMETERS'\nBLGVDSN  CSECT\n         BLGPARMS DICTDS=DICTDS,                                       X\n               RFTDS=RFTS,                                             X\n               RPANLDS=(TPANEL,DPANEL,IPANEL),                         X\n               WPANLDS=WPANELS\nSYSTEM   BLGCLUST NAME=5,               * INFO MANAGEMENT   *          X\n               PRODUCT=MGMT,                                           X\n               SDDS=MGTSDDS,                                           X\n               SDIDS=MGTSDIDS,                                         X\n               SDLDS=MGTSDLDS\nMVS      BLGCLUST NAME=0,               * INFO MVS          *          X\n               PRODUCT=MVS,                                            X\n               SDDS=MVSSDDS,                                           X\n               SDIDS=MVSSDIDS\nSHAREMOD BLGCLUST NAME=1,               * GUIDE SHARE MODS  *          X\n               PRODUCT=MVS,                                            X\n               SDDS=SHSDDS,                                            X\n               SDIDS=SHSDIDS\nCBTMODS  BLGCLUST NAME=2,               * CBT MODS BASE     *          X\n               PRODUCT=MVS,                                            X\n               SDDS=CBTSDDS,                                           X\n               SDIDS=CBTSDIDS\nJES2MODS BLGCLUST NAME=3,               * JES2 SHARE MODS   *          X\n               PRODUCT=MVS,                                            X\n               SDDS=JESSDDS,                                           X\n               SDIDS=JESSDIDS\nMGTSDDS  BLGCLDSN DSN=SYSVSPRD.INFO.SDDS\nMGTSDIDS BLGCLDSN DSN=SYSVSPRD.INFO.SDIDS\nMGTSDLDS BLGCLDSN DSN=SYSVSPRD.INFO.SDLDS\nMVSSDDS  BLGCLDSN DSN=SYSVSPRD.INFOMVS.SDDS\nMVSSDIDS BLGCLDSN DSN=SYSVSPRD.INFOMVS.SDIDS\nDICTDS   BLGCLDSN DSN=SYSVSPRD.INFO.DICT\nRFTS     BLGCLDSN DSN=SYSPOPRD.INFO.RFTDS,FILE=RFTDD\nIPANEL   BLGCLDSN DSN=SYSVSPRD.INFO.PIDPNLS\nDPANEL   BLGCLDSN DSN=SYSVSPRD.INFO.PRODPNLS\nTPANEL   BLGCLDSN DSN=SYSVSPRD.INFO.TESTPNLS\nWPANELS  BLGCLDSN DSN=SYSVSPRD.INFO.WPANELS\nSHSDDS   BLGCLDSN DSN=SYSVSPRD.INFO.SHAREMOD.SDDS\nSHSDIDS  BLGCLDSN DSN=SYSVSPRD.INFO.SHAREMOD.SDIDS\nCBTSDDS  BLGCLDSN DSN=SYSVSPRD.INFO.CBTMODS.SDDS\nCBTSDIDS BLGCLDSN DSN=SYSVSPRD.INFO.CBTMODS.SDIDS\nJESSDDS  BLGCLDSN DSN=SYSVSPRD.INFO.JESMODS.SDDS\nJESSDIDS BLGCLDSN DSN=SYSVSPRD.INFO.JESMODS.SDIDS\n         BLGGEN\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INFSS11": {"ttr": 771, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "* SESS PARAMETER 11\n         TITLE 'BLGVDSN INFO SESSION PARAMETERS'\nBLGVDSN  CSECT\n         BLGPARMS DICTDS=DICTDS,                                       X\n               RFTDS=RFTS,                                             X\n               RPANLDS=(TPANEL,DPANEL,IPANEL),                         X\n               WPANLDS=WPANELS\nSYSTEM   BLGCLUST NAME=5,               * INFO MANAGEMENT   *          X\n               PRODUCT=MGMT,                                           X\n               SDDS=MGTSDDS,                                           X\n               SDIDS=MGTSDIDS,                                         X\n               SDLDS=MGTSDLDS\nMVS      BLGCLUST NAME=0,               * INFO MVS          *          X\n               PRODUCT=MVS,                                            X\n               SDDS=MVSSDDS,                                           X\n               SDIDS=MVSSDIDS\nLISTCAT  BLGCLUST NAME=1,               * LISTCAT DATA BASE *          X\n               PRODUCT=MVS,                                            X\n               SDDS=LCTSDDS,                                           X\n               SDIDS=LCTSDIDS\nMGTSDDS  BLGCLDSN DSN=SYSVSPRD.INFO.SDDS\nMGTSDIDS BLGCLDSN DSN=SYSVSPRD.INFO.SDIDS\nMGTSDLDS BLGCLDSN DSN=SYSVSPRD.INFO.SDLDS\nMVSSDDS  BLGCLDSN DSN=SYSVSPRD.INFOMVS.SDDS\nMVSSDIDS BLGCLDSN DSN=SYSVSPRD.INFOMVS.SDIDS\nDICTDS   BLGCLDSN DSN=SYSVSPRD.INFO.DICT\nRFTS     BLGCLDSN DSN=SYSPOPRD.INFO.RFTDS,FILE=RFTDD\nIPANEL   BLGCLDSN DSN=SYSVSPRD.INFO.PIDPNLS\nDPANEL   BLGCLDSN DSN=SYSVSPRD.INFO.PRODPNLS\nTPANEL   BLGCLDSN DSN=SYSVSPRD.INFO.TESTPNLS\nWPANELS  BLGCLDSN DSN=SYSVSPRD.INFO.WPANELS\nLCTSDDS  BLGCLDSN DSN=SYSVSPRD.INFO.LISTCAT.SDDS\nLCTSDIDS BLGCLDSN DSN=SYSVSPRD.INFO.LISTCAT.SDIDS\n         BLGGEN\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ISR@PRIM": {"ttr": 773, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(%+_)\n %   TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)\n +   TYPE(TEXT) INTENS(LOW) COLOR(GREEN)\n \\   TYPE(TEXT) INTENS(LOW) COLOR(WHITE)\n _   TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) COLOR(RED)\n\u00a2 ATTN(ON) TYPE(TEXT) INTENS(HIGH)\n)BODY\n%------------ DAYCO TECHNICAL SUPPORT ISPF/PDF PRIMARY OPTION MENU  ------------\n%OPTION  ===>_ZCMD                                           \\- ISPF 2.2.0    -\n%                                                           +USERID  \\- &ZUSER\n%   0 +ISPF PARMS  - Specify terminal and user parameters   +TIME    \\- &ZTIME\n%   1 +BROWSE      - Display source data or output listings +TERMINAL\\- &ZTERM\n%   2 +EDIT        - Create or change source data           +PF KEYS \\- &ZKEYS\n%   3 +UTILITIES   - Perform utility functions              +DATE    \\- &ZDATE\n%   4 +FOREGROUND  - Invoke foreground language processors  +JULIAN  \\- &ZJDATE\n%   5 +BATCH       - Submit job for language processing\n%   6 +COMMAND     - Enter TSO command or CLIST\n%   7 +DIALOG TEST - Perform dialog testing            \\  &ZCPU\n%   8 +DFHSM       - DFHSM space maintenance\n%   C +CHANGES     - Display summary of changes for this release\n% DAY +Dayco Menu  - Non-standard ISPF functions\n%   L +LM UTILITIES- Perform library management utility functions\n%   P +PANVALET    - Browse, edit, and utilities\n%   R +RACF        - Perform RACF services\n%   S +SMP/E       - System Modification Program Extended\n%   T +TUTORIAL    - Display information about ISPF/PDF\n%   X +EXIT        - Terminate ISPF using log and list defaults\n%\n+Enter%END+command to terminate ISPF.\n)INIT\n  .HELP = ISR00003\n  &ZPRIM = YES        /* ALWAYS A PRIMARY OPTION MENU      */\n  &ZHTOP = ISR00003   /* TUTORIAL TABLE OF CONTENTS        */\n  &ZHINDEX = ISR91000 /* TUTORIAL INDEX - 1ST PAGE         */\n)PROC\n  &VMCOPT = TRUNC(&ZCMD,'.')\n  &VMCOPT = .TRAIL\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n                0,'PANEL(ISPOPTA)'\n                1,'PGM(ISRBRO) PARM(ISRBRO01)'\n                2,'PGM(ISREDIT) PARM(P,ISREDM01)'\n                3,'PANEL(ISRUTIL)'\n                4,'PANEL(ISRFPA)'\n                5,'PGM(ISRJB1) PARM(ISRJPA) NOCHECK'\n                6,'PGM(ISRPTC)'\n                7,'PGM(ISRYXDR) NOCHECK'\n                8,'PGM(DFQFMD01) NEWAPPL(HSM)'\n                C,'PGM(ISPTUTOR) PARM(ISR00005)'\n              CDF,'CMD(CDF)'\n              CEL,'CMD(CNOCELL)'\n              CHG,'PANEL(INITIAL)'\n           CHGTST,'PANEL(CHG@PRIM)'\n              CON,'CMD(SHOW)'\n              DAY 'PANEL(ISR@PRM1)'\n             DAYT,'PGM(ISPTUTOR) PARM(DAYC0001)'\n                G,'CMD(IGIX)'\n                I,'PGM(BLGINIT) PARM(SESS(00))'\n                J,'PGM(CACTVATE) NEWAPPL(CACT)'\n              JCL,'PGM(ISPTUTOR) PARM(JCL@PRIM)'\n                L,'PANEL(ISRLPRIM)'\n             LSTC,'PGM(BLGINIT) PARM(SESS(11))'\n                M,'CMD(IBMPROD)'\n              MEG,'CMD(MEGACALC)'\n                P,'PGM(IPNINIT) NOCHECK'\n              POF,'CMD(VMAC)'\n             PANS,'PANEL(PSPOOLSL)'\n                R,'PANEL(ICHP00)'\n                S,'PGM(GIMISCV) PARM(&ZCMD) NEWAPPL(SMP2) NOCHECK'\n              SLR,'PANEL(DREBPRIM) NEWAPPL(DRE)'\n             SLSS,'PANEL(SLSS#P)'\n                Q,'CMD(BFCG010) NEWAPPL(BFG) NEWPOOL'\n              QUE,'CMD(QUE)'\n                T,'PGM(ISPTUTOR) PARM(ISR00000)'\n              TMS,'PGM(U01IOPRI) NOCHECK NEWAPPL(U01)'\n                V,'PANEL(VPS@PRIM)'\n             VMCF,'PGM(VM50ISPF) NEWAPPL(VMCF) NOCHECK PARM(&VMCOPT)'\n              XMT,'CMD(XMITRECV) NEWAPPL(XMTR)'\n              ' ',' '\n                X,'EXIT'\n                *,'?' )\n  &ZTRAIL = .TRAIL\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "MURPHY": {"ttr": 776, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "THIS CODE LIVES IN FILE 472 WHICH IS AN UN DOCUMENTED FILE OF THE CBT\nMVS MODS TAPE. THIS FILE IS IN IEBUPDTE SYSIN FORMAT AND IS COMPRESSED\nLIKE ALL THE OTHER SOURCE ON THE MODS TAPE.   ARNIE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT151/FILE151.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT151", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}