{"INMR01": {"INMLRECL": 80, "INMFNODE": "NODENAME", "INMFUID": "ESA", "INMTNODE": "JES2P390", "INMTUID": "ESA", "INMFTIME": "20121130073641000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1363148, "INMDSORG": "PO", "INMTYPE": "Data Library", "INMLRECL": 255, "INMBLKSZ": 32760, "INMRECFM": "VB", "INMDIR": 1, "INMDSNAM": "ESA.PRJ.CBTDSSN.HPP", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1363148, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1363148, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"ESA.PRJ.CBTDSSN.HPP": {"COPYR1": {"type": "PDSE", "DS1DSORG": 512, "DS1BLKL": 32760, "DS1LRECL": 255, "DS1RECFM": "VB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 8, "DVACLASS": 32, "DVAUNIT": 0, "DVAMAXRC": 32760, "DVACYL": 256, "DVATRK": 256, "DVATRKLN": 65535, "DVAOVHD": 0, "num_header_records": 0}, "COPYR2": {"deb": "b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x00\\x00\\x00\\x04\\x00\\x00\\x00'", "extents": ["b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x00\\x00\\x00\\x04\\x00\\x00\\x00'", "b'\\x00\\x03\\xb0p\\x00\\x00\\x00\\x00\\x00\\x00\\x00~\\x00\\xff\\x7f\\x00'", "b'\\x00\\x03\\xb0p\\x00\\x00\\x00\\x7f\\x00\\x00\\x00\\xfd\\x00\\xff\\x7f\\x00'", "b'\\x00\\x03\\xb0p\\x00\\x00\\x00\\xfe\\x00\\x00\\x00\\xff\\x00\\xff\\x02\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"ADREIB": {"ttr": 2571, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct adreib \u00e4\n  short int      eidllen;     /* LENGTH OF ADREIB - 2      @V22 */\n  unsigned char  eiid\u00c44\u00dc;     /* BLOCK IDENTIFIER EBCDIC \"EID0\" */\n  int            eitskid;     /* TASK ID NUM OF CALLER @LA02135 */\n  struct \u00e4\n    unsigned char  _eixalow0; /* ALLOWANCE OPTIONS BYTE 1 */\n    unsigned char  _eixalow1; /* ALLOWANCE OPTIONS BYTE 2 */\n    unsigned char  _eixalow2; /* ALLOWANCE OPTIONS BYTE 3 */\n    unsigned char  _eixalow3; /* ALLOWANCE OPTIONS BYTE 4 */\n    \u00fc eixallow;\n  short int      eioption;    /* PROCESSING OPTION              */\n  short int      eiretcod;    /* EXIT RETURN CODE               */\n  int            eirecaln;    /* RECORD AREA LENGTH    @LA02135 */\n  int            eireclen;    /* ORIGINAL RECORD LEN   @LA02135 */\n  int            eirecptr;    /* ORIGINAL RECORD ADDR  @LA02135 */\n  int            eiuseptr;    /* USER DATA AREA PTR    @V23N253 */\n  struct \u00e4\n    int            _eixmwpl; /* EIOP11 WTO PLIST PTR  @OW36779 */\n    \u00fc eiddid;\n  struct \u00e4\n    unsigned char  _eixflag0; /* FLAG BYTE 0           @LA09760 */\n    unsigned char  _eixflag1; /* FLAG BYTE 1           @LA09760 */\n    unsigned char  _eixflag2; /* FLAG BYTE 2           @LA09760 */\n    unsigned char  _eixflag3; /* FLAG BYTE 3           @LA09760 */\n    \u00fc eixflags;\n  unsigned char  _filler1\u00c42\u00dc;\n  \u00fc;\n\n#define eixalow0 eixallow._eixalow0\n#define eixalow1 eixallow._eixalow1\n#define eixalow2 eixallow._eixalow2\n#define eixalow3 eixallow._eixalow3\n#define eixmwpl  eiddid._eixmwpl\n#define eixflag0 eixflags._eixflag0\n#define eixflag1 eixflags._eixflag1\n#define eixflag2 eixflags._eixflag2\n#define eixflag3 eixflags._eixflag3\n\n/* Values for field \"eixalow0\" */\n#define eixrep   0x80 /* ALLOW REPLACE OF RECORD        */\n#define eixins   0x40 /* ALLOW INSERT OF RECORD         */\n#define eixdel   0x20 /* ALLOW DELETE OF RECORD         */\n#define eixmod   0x10 /* ALLOW MODIFICATION OF RECORD   */\n#define eixdis   0x08 /* ALLOW DISCONNECT OF EXIT       */\n#define eixwtor  0x04 /* ALLOW WTOR RESPONSE            */\n#define eixstat  0x02 /* ALLOW SELECTION OF USER STATS  */\n#define eixterm  0x01 /* ALLOW TERMINATION OF FUNC @V22 */\n\n/* Values for field \"eixalow1\" */\n#define eixtdset 0x80 /* ALLOW DATA SET TERMINATION@V25 */\n\n/* Values for field \"eixalow3\" */\n#define eixerr   0x80 /* DIS-ALLOWED OPTION    @V23N298 */\n\n/* Values for field \"eixflag0\" */\n#define eixabend 0x80 /* ABEND MESSAGE FLAG    @LA09760 */\n#define eixnterr 0x40 /* NON-TAPE ERR MSG FLAG @LA09760 */\n#define eixwngok 0x20 /* WARNINGS ARE OK  FLAG @LA54862 */\n#define eixtrker 0x10 /* track is in error     @OW07425 */\n\n/* Values for field \"eixflag1\" */\n#define eixtrc32 0x80 /* UIM SET EIRETCOD 32   @OW33495 */\n#define eixtdums 0x20 /* DUMMY SOURCE TAPE     @OW13783 */\n#define eixtdumt 0x10 /* DUMMY TARGET TAPE     @OW13783 */\n#define eixtisxm 0x08 /* APPL USING XMAPI      @OW13783 */\n#define eixdasys 0x04 /* XMAPI ALLOCATION ERR  @OW21750 */\n#define eixtwerr 0x02 /* XMAPI TAPE WRITE ERR  @OW22314 */\n#define eixtrerr 0x01 /* XMAPI TAPE READ ERR   @OW22673 */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "ADRUFOB": {"ttr": 2569, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct adrufob \u00e4\n  struct \u00e4\n    unsigned char  _ufid\u00c44\u00dc;  /* IDENTIFIER OF EBCDIC \"UFO \"         */\n    short int      _uflen;    /* LENGTH OF PARM LIST                 */\n    short int      _ufbdyoff; /* OFFSET TO UFOFUNCT OR UFOPARM       */\n    void          *_ufvoli_;  /* ADDR OF INPUT VOLUME LIST OR 0      */\n    void          *_ufvolo_;  /* ADDR OF OUTPUT VOLUME LIST OR 0     */\n    struct \u00e4\n      unsigned char  _uffunct1; /* FUNCTION BYTE 1                   */\n      unsigned char  _uffunct2; /* FUNCTION BYTE TWO            @V21 */\n      \u00fc uffunct;\n    unsigned char  _uffind;   /* FUNCTIONAL INDICATORS               */\n    unsigned char  _ufaiflgs; /* APPLICATION INTERFACE FLAGS    @V21 */\n    \u00fc ufohdr;\n  unsigned char  ufflags;     /* FLAGS                      @LA64541 */\n  unsigned char  _filler1\u00c43\u00dc; /* RESERVED                   @LA64541 */\n  \u00fc;\n\n#define ufid     ufohdr._ufid\n#define uflen    ufohdr._uflen\n#define ufbdyoff ufohdr._ufbdyoff\n#define ufvoli_  ufohdr._ufvoli_\n#define ufvolo_  ufohdr._ufvolo_\n#define uffunct1 ufohdr.uffunct._uffunct1\n#define uffunct2 ufohdr.uffunct._uffunct2\n#define uffind   ufohdr._uffind\n#define ufaiflgs ufohdr._ufaiflgs\n\n/* Values for field \"uffunct1\" */\n#define uffudef  0x80 /* DEFRAG OPERATION                    */\n#define uffucopy 0x40 /* COPY OPERATION                      */\n#define uffurest 0x20 /* RESTORE OPERATION                   */\n#define uffudump 0x10 /* DUMP OPERATION                      */\n#define uffuprt  0x08 /* PRINT OPERATION                     */\n#define uffucpyd 0x04 /* COPYDUMP OPERATION                  */\n#define uffucomp 0x01 /* COMPRESS OPERATION           @V21   */\n\n/* Values for field \"uffunct2\" */\n#define uffurlse 0x80 /* RELEASE OPERATION            @V21   */\n#define uffuconv 0x40 /* CONVERTV OPERATION           @V24   */\n#define uffublsa 0x20 /* BUILDSA  OPERATION       @OW14835   */\n#define uffucgcr 0x08 /* CGCREATED OPERATION            @P7C */\n#define uffucons 0x04 /* CONSOLIDATE OPERATION          @P6C */\n\n/* Values for field \"uffind\" */\n#define uffifull 0x80 /* FULL VOLUME REQUEST                 */\n#define uffipart 0x40 /* PARTIAL (TRACKS) REQUEST            */\n#define uffifilt 0x20 /* REQUEST BY FILTER/DSNAME            */\n#define uffiprtv 0x10 /* PRINT VTOC                          */\n#define ufflogcl 0x08 /* LOGICAL PROCESSING FOR COPY,   @RLV */\n\n/* Values for field \"ufaiflgs\" */\n#define ufaiinv  0x80 /* INVOKED BY APPL. INTERFACE     @V21 */\n#define ufuimal  0x40 /* ADRUIM NOT TO BE GIVEN CONTROL @V21 */\n#define ufuimch  0x20 /* DO NOT ALLOW UIM TO MODIFY     @V21 */\n#define ufstop   0x10 /* TERMINATE OPERATION ( SAME AS  @V21 */\n#define ufsysin  0x08 /* SYSIN OR ALTERNATE NOT PRESENT @V21 */\n#define ufsyspr  0x04 /* SYSPRINT/ALTERNATE NOT PRESENT @V21 */\n#define ufnoin   0x02 /* NO INPUT TAPE - FOR RESTORE    @V21 */\n#define ufnoout  0x01 /* NO OUTPUT TAPE - FOR DUMP ONLY @V21 */\n\n/* Values for field \"ufflags\" */\n#define ufbyfcck 0x80 /* 1=BYPASS FACILITY CLASS CHECKS      */\n#define ufsafok  0x40 /* 1=IT IS OK TO USE THE SAF INTERFACE */\n#define uffrewcl 0x20 /* 1=Rewind on close              @FST */\n#define ufigctnn 0x10 /* 1=IGNORE CATALOG ENTRIES FOR NEW    */\n#define uffcfrrt 0x08 /* 1=RETRY FLASHCOPY WITHOUT FAST      */\n#define ufbyfrvf 0x04 /* 1=BYPASS CHECKING FOR EXISTING      */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "ASMIF": {"ttr": 2559, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct asmdsect \u00e4\n  void          *asm_save\u00c418\u00dc;                   /* save in asm                       */\n  void          *asm_mvs;                        /* mvs object pointer                */\n  void          *asm_baseregs\u00c44\u00dc;                /* base regs                         */\n  void          *asm_crab;                       /* crab pointer                      */\n  int            asm_rc;                         /* function return                   */\n  int            asm_reason;                     /* function reason code              */\n  void          *asm_ieantcr;                    /* ieantcr address                   */\n  void          *asm_ieantrt;                    /* ieantrt address                   */\n  void          *asm_ieantdl;                    /* ieantdl address                   */\n  void          *asm_timx\u00c416\u00dc;                   /* timer exit area                   */\n  void          *asm_timer_ecbp;                 /* timer ecb pointer                 */\n  void          *asm_event0_ecbp;                /* event0 ecb                        */\n  void          *asm_event1_ecbp;                /* event1 ecb                        */\n  void          *asm_event2_ecbp;                /* event2 ecb                        */\n  void          *asm_event3_ecbp;                /* event3 ecb                        */\n  void          *asm_timer_ecb;                  /* timer ecb                         */\n  unsigned char  asm_function_code;              /* function code                     */\n  unsigned char  asm_key;                        /* psw key save                      */\n  unsigned char  asm_srb_mode;                   /* srb mode flag                     */\n  unsigned char  _filler1;\n  void          *asm_srb_save\u00c416\u00dc;               /* srb register save area            */\n  int            asm_srb_return;                 /* srb return address                */\n  void          *asm_parms\u00c48\u00dc;                   /* parameters                        */\n  void          *asm_calllist\u00c48\u00dc;                /* call parameters                   */\n  unsigned char  asm_work\u00c4128\u00dc;                  /* work area                         */\n  unsigned char  asm_jobname\u00c48\u00dc;                 /* jobname                           */\n  unsigned char  asm_programname\u00c48\u00dc;             /* actual programname                */\n  void          *asm_workecbs;                   /* start of work ecb pool            */\n  void          *asm_workecbp;                   /* work ecb pointer                  */\n  void          *asm_workecbe;                   /* work ecb end address              */\n  struct \u00e4\n    unsigned char  _asm_iarv_xversion;  /* ++ INPUT XVERSION */\n    unsigned char  _asm_iarv_xservice;  /* ++  XSERVICE      */\n    unsigned char  _asm_iarv_xflags1;   /* ++ FIELD_LABEL    */\n    unsigned char  _asm_iarv_xflags2;   /* ++ FIELD_LABEL    */\n    int            _asm_iarv_xnumrange; /* ++   XNUMRANGE    */\n    \u00fc asm_iarv;\n  void          *asm_iarv_xranglist;             /* ++   XRANGLIST                    */\n  struct \u00e4\n    unsigned char  _filler2;  /* .SERVICE TYPE CODE */\n    unsigned char  _filler3;  /* .OPTIONS FLAG BYTE */\n    short int      _filler4;  /* .RESERVED          */\n    \u00fc asm_aleservl;\n  void          *_filler5;                       /* .ALET                             */\n  unsigned char  _filler6\u00c48\u00dc;                    /* .STOKEN (SPACE TOKEN)             */\n  unsigned char  _filler7;                       /* PELLAST flag byte.        X02113  */\n  unsigned char  _filler8;                       /* PELMILEN - RNAME length.          */\n  unsigned char  _filler9;\n  unsigned char  _filler10;                      /* PELRET - return code byte.        */\n  void          *_filler11;                      /* QNAME ADDRESS                     */\n  void          *_filler12;                      /* RNAME ADDRESS                     */\n  void          *asm_option\u00c44\u00dc;                  /* option fields                     */\n  double         asm_sleep;                      /* double word for timer             */\n  unsigned char  asm_iarvrl\u00c428\u00dc;                 /* iarvrl area                       */\n  void          *asm_iarvrla;                    /* iarvrl area address               */\n  void          *asm_extract_l;                  /* LIST ADDRESS                      */\n  void          *_filler13;                      /* TCB ADDRESS                       */\n  void          *_filler14;\n  void          *asm_post_l;                     /* . 1ST WORD - ECB ADDRESS          */\n  void          *_filler15;                      /* . 2ND WORD - ASCB ADDRESS         */\n  void          *_filler16;                      /* . 3RD WORD - ERRET ADDRESS        */\n  void          *_filler17;                      /* . 4TH WORD - BYTE0,ECBKEY@ZA15373 */\n  void          *asm_comptr;                     /* comm area pointer                 */\n  void          *asm_comtoken;                   /* comm token                        */\n  void          *asm_comecbpt;                   /* stop/modify ecb pointer           */\n  struct \u00e4\n    short int      _filler18;     /* TEXT LENGTH            @YA17152 */\n    unsigned char  _filler19\u00c42\u00dc;  /* MCSFLAGS                        */\n    \u00fc asm_wtol;\n  unsigned char  _filler20\u00c4110\u00dc;                 /* MESSAGE TEXT               @L6C   */\n  unsigned char  _filler21;                      /* VERSION LEVEL              @PJC   */\n  unsigned char  _filler22;                      /* MISCELLANEOUS FLAGS        @L2A   */\n  unsigned char  _filler23;                      /* REPLY LENGTH               @L2A   */\n  unsigned char  _filler24;                      /* RESERVED                   @PJA   */\n  unsigned char  _filler25\u00c42\u00dc;                   /* EXTENDED MCS FLAGS         @L2A   */\n  short int      _filler26;                      /* RESERVED                   @L2A   */\n  void          *_filler27;                      /* REPLY BUFFER ADDRESS       @P7C   */\n  void          *_filler28;                      /* REPLY ECB ADDRESS          @P7C   */\n  void          *_filler29;                      /* CONNECT ID                 @01C   */\n  unsigned char  _filler30\u00c42\u00dc;                   /* DESCRIPTOR CODES           @L2A   */\n  short int      _filler31;                      /* RESERVED                   @L2A   */\n  unsigned char  _filler32\u00c416\u00dc;                  /* EXTENDED ROUTING CODES     @L2A   */\n  unsigned char  _filler33\u00c42\u00dc;                   /* MESSAGE TYPE               @L2A   */\n  short int      _filler34;                      /* MESSAGE'S PRIORITY         @L2A   */\n  unsigned char  _filler35\u00c48\u00dc;                   /* JOB ID                     @L2A   */\n  unsigned char  _filler36\u00c48\u00dc;                   /* JOB NAME                   @L2A   */\n  unsigned char  _filler37\u00c48\u00dc;                   /* RETRIEVAL KEY              @L2A   */\n  void          *_filler38;                      /* TOKEN FOR DOM              @P1C   */\n  void          *_filler39;                      /* CONSOLE ID                 @P1C   */\n  unsigned char  _filler40\u00c48\u00dc;                   /* SYSTEM NAME                @L2A   */\n  void          *_filler41;                      /* RESERVED                   @PJA   */\n  void          *_filler42;                      /* RESERVED                   @PJA   */\n  unsigned char  _filler43\u00c42\u00dc;\n  void          *asm_bpx1\u00c432\u00dc;                   /* BPX1 parm list                    */\n  int            asm_bpx1_retval;                /* return value                      */\n  int            asm_bpx1_retcode;               /* return code                       */\n  int            asm_bpx1_rsncode;               /* reason code                       */\n  void          *asm_bpx1_list_length_r;         /* list length read                  */\n  void          *asm_bpx1_list_length_w;         /* list length write                 */\n  void          *asm_bpx1_list_length_e;         /* list length exception             */\n  void          *asm_bpx1_numfds;                /* number of FD's                    */\n  void          *asm_bpx1_timeout;               /* timeout pointer                   */\n  void          *asm_bpx1_option;                /* option value                      */\n  unsigned char  _filler44\u00c44\u00dc;\n  double         asm_stck;                       /* stck area                         */\n  union \u00e4\n    struct \u00e4\n      unsigned char  _asm_ieatdump_xplistname\u00c44\u00dc; /* ++ CONSTANT  XPLISTNAME */\n      unsigned char  _asm_ieatdump_xword1\u00c44\u00dc;     /* ++ FIELD_LABEL  XWORD1  */\n      \u00fc asm_ieatdump;\n    struct \u00e4\n      unsigned char  _filler45\u00c44\u00dc;\n      unsigned char  _asm_ieatdump_xplistlen\u00c42\u00dc; /* ++ INPUT  XPLISTLEN   */\n      unsigned char  _asm_ieatdump_xversion;     /* ++ INPUT XVERSION     */\n      unsigned char  _asm_ieatdump_xrsv0001;     /* ++ RESERVED  XRSV0001 */\n      \u00fc _asmdsect_struct1;\n    \u00fc _asmdsect_union1;\n  unsigned char  asm_ieatdump_xsdata1;           /* ++ FIELD_LABEL                    */\n  unsigned char  asm_ieatdump_xsdata2;           /* ++ FIELD_LABEL                    */\n  unsigned char  asm_ieatdump_xflags1;           /* ++ FIELD_LABEL                    */\n  unsigned char  asm_ieatdump_xrsv0002;          /* ++ RESERVED  XRSV0002             */\n  unsigned char  asm_ieatdump_xdsp_stoken\u00c48\u00dc;    /* ++   XDSP_STOKEN                  */\n  void          *asm_ieatdump_xdsp_origin;       /* ++   XDSP_ORIGIN                  */\n  void          *asm_ieatdump_xdsp_records_;     /* ++   XDSP_RECORDS@                */\n  unsigned char  asm_ieatdump_xddname\u00c48\u00dc;        /* ++   XDDNAME                      */\n  union \u00e4\n    void          *_asm_ieatdump_xdsnad;    /* ++   XDSNAD   */\n    void          *_asm_ieatdump_xdsn_addr; /* ++  ADDR XDSN */\n    \u00fc _asmdsect_union2;\n  int            asm_ieatdump_xdsn_alet;         /* ++  ALET XDSN                     */\n  union \u00e4\n    void          *_asm_ieatdump_xhdrad;    /* ++   XHDRAD   */\n    void          *_asm_ieatdump_xhdr_addr; /* ++  ADDR XHDR */\n    \u00fc _asmdsect_union3;\n  int            asm_ieatdump_xhdr_alet;         /* ++  ALET XHDR                     */\n  union \u00e4\n    void          *_asm_ieatdump_xidxad;    /* ++   XIDXAD   */\n    void          *_asm_ieatdump_xidx_addr; /* ++  ADDR XIDX */\n    \u00fc _asmdsect_union4;\n  int            asm_ieatdump_xidx_alet;         /* ++  ALET XIDX                     */\n  union \u00e4\n    void          *_asm_ieatdump_xsymrecad;    /* ++   XSYMRECAD   */\n    void          *_asm_ieatdump_xsymrec_addr; /* ++  ADDR XSYMREC */\n    \u00fc _asmdsect_union5;\n  int            asm_ieatdump_xsymrec_alet;      /* ++  ALET XSYMREC                  */\n  union \u00e4\n    void          *_asm_ieatdump_xintokenad;    /* ++   XINTOKENAD   */\n    void          *_asm_ieatdump_xintoken_addr; /* ++  ADDR XINTOKEN */\n    \u00fc _asmdsect_union6;\n  int            asm_ieatdump_xintoken_alet;     /* ++  ALET XINTOKEN                 */\n  union \u00e4\n    void          *_asm_ieatdump_xremotead;    /* ++   XREMOTEAD   */\n    void          *_asm_ieatdump_xremote_addr; /* ++  ADDR XREMOTE */\n    \u00fc _asmdsect_union7;\n  int            asm_ieatdump_xremote_alet;      /* ++  ALET XREMOTE                  */\n  union \u00e4\n    void          *_asm_ieatdump_xprobdescad;    /* ++   XPROBDESCAD   */\n    void          *_asm_ieatdump_xprobdesc_addr; /* ++  ADDR XPROBDESC */\n    \u00fc _asmdsect_union8;\n  int            asm_ieatdump_xprobdesc_alet;    /* ++  ALET XPROBDESC                */\n  union \u00e4\n    void          *_asm_ieatdump_xlistad;    /* ++   XLISTAD   */\n    void          *_asm_ieatdump_xlist_addr; /* ++  ADDR XLIST */\n    \u00fc _asmdsect_union9;\n  int            asm_ieatdump_xlist_alet;        /* ++  ALET XLIST                    */\n  union \u00e4\n    void          *_asm_ieatdump_xsubplstad;    /* ++   XSUBPLSTAD   */\n    void          *_asm_ieatdump_xsubplst_addr; /* ++  ADDR XSUBPLST */\n    \u00fc _asmdsect_union10;\n  int            asm_ieatdump_xsubplst_alet;     /* ++  ALET XSUBPLST                 */\n  union \u00e4\n    void          *_asm_ieatdump_xdsplistad;    /* ++   XDSPLISTAD   */\n    void          *_asm_ieatdump_xdsplist_addr; /* ++  ADDR XDSPLIST */\n    \u00fc _asmdsect_union11;\n  int            asm_ieatdump_xdsplist_alet;     /* ++  ALET XDSPLIST                 */\n  union \u00e4\n    void          *_asm_ieatdump_xecbad;    /* ++   XECBAD   */\n    void          *_asm_ieatdump_xecb_addr; /* ++  ADDR XECB */\n    \u00fc _asmdsect_union12;\n  int            asm_ieatdump_xecb_alet;         /* ++  ALET XECB                     */\n  unsigned char  asm_tdump_name;                 /* name length                       */\n  unsigned char  _filler46\u00c4100\u00dc;                 /* name                              */\n  unsigned char  asm_tdump_desc;                 /* desc length                       */\n  unsigned char  _filler47\u00c4100\u00dc;                 /* desc                              */\n  unsigned char  asm_streamname\u00c426\u00dc;             /* stream name                       */\n  unsigned char  asm_streamtoken\u00c416\u00dc;            /* stream token                      */\n  void          *asm_logger_length;\n  void          *asm_logger_buffer;              /* logger buffer pointer             */\n  void          *asm_logger_bufflen;             /* buffer length                     */\n  void          *asm_logger_buffer_offset;       /* actual buffer offset              */\n  void          *asm_logger_browse_token;        /* browse token                      */\n  void          *asm_logger_direction;           /* browse direction 2-3              */\n  struct \u00e4\n    void          *_asm_ixgconn_xplistptr;     /* ++ INPUT          */\n    unsigned char  _asm_ixgconn_xversion;      /* ++ INPUT XVERSION */\n    unsigned char  _asm_ixgconn_xixgflags;     /* ++ FIELD_LABEL    */\n    unsigned char  _asm_ixgconn_xkeyusedflags; /* ++ FIELD_LABEL    */\n    unsigned char  _asm_ixgconn_xformatlvl;    /* ++ CONSTANT       */\n    \u00fc asm_ixgconn;\n  void          *asm_ixgconn_xansarea;           /* ++                                */\n  void          *asm_ixgconn_xcompleteexit;      /* ++                                */\n  unsigned char  asm_ixgconn_xrmname\u00c48\u00dc;         /* ++                                */\n  void          *asm_ixgconn_xrmexit;            /* ++                                */\n  unsigned char  asm_ixgconn_xrmdata\u00c48\u00dc;         /* ++                                */\n  unsigned char  asm_ixgconn_xlsversion\u00c48\u00dc;      /* ++                                */\n  unsigned char  asm_ixgconn_xixgflags2;         /* ++ FIELD_LABEL                    */\n  unsigned char  asm_ixgconn_xrsv0002\u00c43\u00dc;        /* ++ RESERVED                       */\n  int            asm_ixgconn_xanslen;            /* ++                                */\n  unsigned char  asm_ixgconn_xstructname\u00c416\u00dc;    /* ++                                */\n  int            asm_ixgconn_xavgbufsize;        /* ++                                */\n  int            asm_ixgconn_xmaxbufsize;        /* ++                                */\n  int            asm_ixgconn_xelementsize;       /* ++                                */\n  unsigned char  asm_ixgconn_xuserdata\u00c464\u00dc;      /* ++                                */\n  unsigned char  asm_ixgconn_xstreamname\u00c426\u00dc;    /* ++                                */\n  unsigned char  asm_ixgconn_xstreamtoken\u00c416\u00dc;   /* ++                                */\n  unsigned char  _filler48\u00c46\u00dc;\n  struct \u00e4\n    unsigned char  _asm_ixgwrite_xversion;    /* ++ INPUT XVERSION */\n    unsigned char  _asm_ixgwrite_xixgflags;   /* ++ FIELD_LABEL    */\n    unsigned char  _asm_ixgwrite_xrsv0001\u00c42\u00dc; /* ++ RESERVED       */\n    void          *_asm_ixgwrite_xplistptr;   /* ++ INPUT          */\n    \u00fc asm_ixgwrite;\n  int            asm_ixgwrite_xrsncode;          /* ++                                */\n  void          *asm_ixgwrite_xbuffer_addr;      /* ++  ADDR                          */\n  int            asm_ixgwrite_xblocklen;         /* ++                                */\n  int            asm_ixgwrite_xbuffalet;         /* ++                                */\n  int            asm_ixgwrite_xbuffkey;          /* ++                                */\n  void          *asm_ixgwrite_xecb_addr;         /* ++  ADDR                          */\n  void          *asm_ixgwrite_xansarea;          /* ++                                */\n  int            asm_ixgwrite_xanslen;           /* ++                                */\n  void          *asm_ixgwrite_xretblockid_addr;  /* ++  ADDR                          */\n  void          *asm_ixgwrite_xtimestamp_addr;   /* ++  ADDR                          */\n  unsigned char  asm_ixgwrite_xstreamtoken\u00c416\u00dc;  /* ++                                */\n  struct \u00e4\n    unsigned char  _asm_ixgbrwse_xversion;     /* ++ INPUT XVERSION */\n    unsigned char  _asm_ixgbrwse_xrequest;     /* ++  XREQUEST      */\n    unsigned char  _asm_ixgbrwse_xixgflags\u00c42\u00dc; /* ++ FIELD_LABEL    */\n    void          *_asm_ixgbrwse_xplistptr;    /* ++ INPUT          */\n    \u00fc asm_ixgbrwse;\n  void          *asm_ixgbrwse_xbuffer_addr;      /* ++  ADDR                          */\n  int            asm_ixgbrwse_xbuffkey;          /* ++                                */\n  int            asm_ixgbrwse_xbufflen;          /* ++                                */\n  int            asm_ixgbrwse_xbuffalet;         /* ++                                */\n  void          *asm_ixgbrwse_xblksize_addr;     /* ++  ADDR                          */\n  void          *asm_ixgbrwse_xecb_addr;         /* ++  ADDR                          */\n  void          *asm_ixgbrwse_xansarea;          /* ++                                */\n  int            asm_ixgbrwse_xanslen;           /* ++                                */\n  unsigned char  asm_ixgbrwse_xstreamtoken\u00c416\u00dc;  /* ++                                */\n  void          *asm_ixgbrwse_xbrowsetoken_addr; /* ++  ADDR                          */\n  unsigned char  asm_ixgbrwse_xsearch\u00c48\u00dc;        /* ++                                */\n  void          *asm_ixgbrwse_xretblockid_addr;  /* ++  ADDR                          */\n  unsigned char  asm_ixgbrwse_xstartblockid\u00c48\u00dc;  /* ++                                */\n  void          *asm_ixgbrwse_xtimestamp_addr;   /* ++  ADDR                          */\n  unsigned char  asm_ixgbrwse_xblockid\u00c48\u00dc;       /* ++                                */\n  unsigned char  asm_logger_convval\u00c416\u00dc;\n  unsigned char  asm_logger_stck\u00c416\u00dc;\n  unsigned char  _filler49\u00c432\u00dc;\n  unsigned char  _filler50\u00c44\u00dc;\n  struct \u00e4\n    unsigned char  _asm_ieamschd_xversion; /* ++ INPUT XVERSION */\n    unsigned char  _asm_ieamschd_xflag1;   /* ++ FIELD_LABEL    */\n    unsigned char  _asm_ieamschd_xflag2;   /* ++ FIELD_LABEL    */\n    unsigned char  _asm_ieamschd_xflag3;   /* ++ FIELD_LABEL    */\n    void          *_asm_ieamschd_xepaddr;  /* ++                */\n    \u00fc asm_ieamschd;\n  unsigned char  asm_ieamschd_xtargetstoken\u00c48\u00dc;  /* ++                                */\n  unsigned char  asm_ieamschd_xenclavetoken\u00c48\u00dc;  /* ++                                */\n  unsigned char  asm_ieamschd_xminorpriority;    /* ++                                */\n  unsigned char  asm_ieamschd_xkeyvalue;         /* ++                                */\n  unsigned char  asm_ieamschd_xcpumask\u00c42\u00dc;       /* ++                                */\n  int            asm_ieamschd_xparm;             /* ++                                */\n  union \u00e4\n    void          *_asm_ieamschd_xfrraddr; /* ++ */\n    struct \u00e4\n      unsigned char  _asm_ieamschd_xrsv0001\u00c43\u00dc; /* ++ RESERVED    */\n      unsigned char  _asm_ieamschd_xfrrflag;    /* ++ FIELD_LABEL */\n      \u00fc _asmdsect_struct2;\n    \u00fc _asmdsect_union13;\n  void          *asm_ieamschd_xrmtraddr;         /* ++                                */\n  unsigned char  asm_ieamschd_xpurgestoken\u00c48\u00dc;   /* ++                                */\n  void          *asm_ieamschd_xptcbaddr;         /* ++                                */\n  unsigned char  asm_ieamschd_xclientstoken\u00c48\u00dc;  /* ++                                */\n  int            asm_ieamschd_comp;              /* IEAMSCHD comp                     */\n  int            asm_ieamschd_code;              /* IEAMSCHD code                     */\n  int            asm_ieamschd_rsn;               /* IEAMSCHD reason                   */\n  unsigned char  asm_ansarea\u00c440\u00dc;\n  void          *asm_vtoc_dcb;                   /* DCB address below the line        */\n  unsigned char  asm_vtoc_ddname\u00c48\u00dc;             /* DDNAME                            */\n  unsigned char  asm_vtoc_filter\u00c444\u00dc;            /* name filter                       */\n  struct \u00e4\n    unsigned char  _filler51;       /* Option byte        */\n    int            _filler52 : 24;  /* DCB or ACB address */\n    \u00fc asm_vtoc_openlist;\n  unsigned char  asm_vtoc_fcl\u00c424\u00dc;\n  unsigned char  asm_vtoc_bfl\u00c420\u00dc;\n  unsigned char  _filler53\u00c44\u00dc;                   /* EBCDIC 'CVPL'                     */\n  short int      _filler54;                      /* LENGTH OF CVPL                    */\n  unsigned char  _filler55;                      /* FUNCTION CODE                     */\n  unsigned char  _filler56;                      /* STATUS INFORMATION                */\n  unsigned char  _filler57;                      /* FIRST FLAG BYTE                   */\n  unsigned char  _filler58;                      /* SECOND FLAG BYTE                  */\n  unsigned char  _filler59;                      /* THIRD FLAG BYTE                   */\n  unsigned char  _filler60;                      /* Fourth Flag Byte           @LVC   */\n  void          *_filler61;                      /* UCB ADDRESS                       */\n  void          *_filler62;                      /* FILTER CRITERIA LIST ADDRESS      */\n  void          *_filler63;                      /* BUFFER LIST ADDRESS               */\n  void          *_filler64;                      /* INDEX VIR'S BUFFER LIST ADDRESS   */\n  void          *_filler65;                      /* MAP VIR'S BUFFER LIST ADDRESS     */\n  void          *_filler66;                      /* I/O AREA ADDRESS                  */\n  void          *_filler67;                      /* DEB ADDRESS                       */\n  void          *_filler68;                      /* ARGUMENT ADDRESS                  */\n  void          *_filler69;                      /* SPACE PARAMETER LIST ADDRESS      */\n  void          *_filler70;                      /* EXTENT TABLE ADDRESS              */\n  void          *_filler71;                      /* NEW VRF VIXM BUFFER LIST ADDR     */\n  void          *_filler72;                      /* VRF DATA ADDRESS                  */\n  void          *_filler73;                      /* COUNT AREA ADDRESS                */\n  void          *_filler74;                      /* FILTER SAVE AREA ADDRESS          */\n  unsigned char  asm_vtoc_buffer\u00c4140\u00dc;\n  void          *asm_camlst\u00c44\u00dc;\n  void          *asm_testauth;\n  void          *asm_diagnose_flag;\n  void          *asm_diagnose_addr;\n  void          *asm_vsmlist_ascbaddr;           /* address of the ascb               */\n  short int      asm_vsmlist_myascbid;           /* my own ASCB id                    */\n  unsigned char  _filler75\u00c42\u00dc;\n  int            asm_vsmlist_myascb;             /* address of my ASCB                */\n  int            asm_vsmlist_mytcb;              /* my own TCB addr                   */\n  void          *asm_vsmlist_storage;            /* SRB work area address             */\n  void          *asm_mutex_vector\u00c432\u00dc;\n  \u00fc;\n\n#define asm_iarv_xversion           asm_iarv._asm_iarv_xversion\n#define asm_iarv_xservice           asm_iarv._asm_iarv_xservice\n#define asm_iarv_xflags1            asm_iarv._asm_iarv_xflags1\n#define asm_iarv_xflags2            asm_iarv._asm_iarv_xflags2\n#define asm_iarv_xnumrange          asm_iarv._asm_iarv_xnumrange\n#define asm_ieatdump_xplistname     _asmdsect_union1.asm_ieatdump._asm_ieatdump_xplistname\n#define asm_ieatdump_xword1         _asmdsect_union1.asm_ieatdump._asm_ieatdump_xword1\n#define asm_ieatdump_xplistlen      _asmdsect_union1._asmdsect_struct1._asm_ieatdump_xplistlen\n#define asm_ieatdump_xversion       _asmdsect_union1._asmdsect_struct1._asm_ieatdump_xversion\n#define asm_ieatdump_xrsv0001       _asmdsect_union1._asmdsect_struct1._asm_ieatdump_xrsv0001\n#define asm_ieatdump_xdsnad         _asmdsect_union2._asm_ieatdump_xdsnad\n#define asm_ieatdump_xdsn_addr      _asmdsect_union2._asm_ieatdump_xdsn_addr\n#define asm_ieatdump_xhdrad         _asmdsect_union3._asm_ieatdump_xhdrad\n#define asm_ieatdump_xhdr_addr      _asmdsect_union3._asm_ieatdump_xhdr_addr\n#define asm_ieatdump_xidxad         _asmdsect_union4._asm_ieatdump_xidxad\n#define asm_ieatdump_xidx_addr      _asmdsect_union4._asm_ieatdump_xidx_addr\n#define asm_ieatdump_xsymrecad      _asmdsect_union5._asm_ieatdump_xsymrecad\n#define asm_ieatdump_xsymrec_addr   _asmdsect_union5._asm_ieatdump_xsymrec_addr\n#define asm_ieatdump_xintokenad     _asmdsect_union6._asm_ieatdump_xintokenad\n#define asm_ieatdump_xintoken_addr  _asmdsect_union6._asm_ieatdump_xintoken_addr\n#define asm_ieatdump_xremotead      _asmdsect_union7._asm_ieatdump_xremotead\n#define asm_ieatdump_xremote_addr   _asmdsect_union7._asm_ieatdump_xremote_addr\n#define asm_ieatdump_xprobdescad    _asmdsect_union8._asm_ieatdump_xprobdescad\n#define asm_ieatdump_xprobdesc_addr _asmdsect_union8._asm_ieatdump_xprobdesc_addr\n#define asm_ieatdump_xlistad        _asmdsect_union9._asm_ieatdump_xlistad\n#define asm_ieatdump_xlist_addr     _asmdsect_union9._asm_ieatdump_xlist_addr\n#define asm_ieatdump_xsubplstad     _asmdsect_union10._asm_ieatdump_xsubplstad\n#define asm_ieatdump_xsubplst_addr  _asmdsect_union10._asm_ieatdump_xsubplst_addr\n#define asm_ieatdump_xdsplistad     _asmdsect_union11._asm_ieatdump_xdsplistad\n#define asm_ieatdump_xdsplist_addr  _asmdsect_union11._asm_ieatdump_xdsplist_addr\n#define asm_ieatdump_xecbad         _asmdsect_union12._asm_ieatdump_xecbad\n#define asm_ieatdump_xecb_addr      _asmdsect_union12._asm_ieatdump_xecb_addr\n#define asm_ixgconn_xplistptr       asm_ixgconn._asm_ixgconn_xplistptr\n#define asm_ixgconn_xversion        asm_ixgconn._asm_ixgconn_xversion\n#define asm_ixgconn_xixgflags       asm_ixgconn._asm_ixgconn_xixgflags\n#define asm_ixgconn_xkeyusedflags   asm_ixgconn._asm_ixgconn_xkeyusedflags\n#define asm_ixgconn_xformatlvl      asm_ixgconn._asm_ixgconn_xformatlvl\n#define asm_ixgwrite_xversion       asm_ixgwrite._asm_ixgwrite_xversion\n#define asm_ixgwrite_xixgflags      asm_ixgwrite._asm_ixgwrite_xixgflags\n#define asm_ixgwrite_xrsv0001       asm_ixgwrite._asm_ixgwrite_xrsv0001\n#define asm_ixgwrite_xplistptr      asm_ixgwrite._asm_ixgwrite_xplistptr\n#define asm_ixgbrwse_xversion       asm_ixgbrwse._asm_ixgbrwse_xversion\n#define asm_ixgbrwse_xrequest       asm_ixgbrwse._asm_ixgbrwse_xrequest\n#define asm_ixgbrwse_xixgflags      asm_ixgbrwse._asm_ixgbrwse_xixgflags\n#define asm_ixgbrwse_xplistptr      asm_ixgbrwse._asm_ixgbrwse_xplistptr\n#define asm_ieamschd_xversion       asm_ieamschd._asm_ieamschd_xversion\n#define asm_ieamschd_xflag1         asm_ieamschd._asm_ieamschd_xflag1\n#define asm_ieamschd_xflag2         asm_ieamschd._asm_ieamschd_xflag2\n#define asm_ieamschd_xflag3         asm_ieamschd._asm_ieamschd_xflag3\n#define asm_ieamschd_xepaddr        asm_ieamschd._asm_ieamschd_xepaddr\n#define asm_ieamschd_xfrraddr       _asmdsect_union13._asm_ieamschd_xfrraddr\n#define asm_ieamschd_xrsv0001       _asmdsect_union13._asmdsect_struct2._asm_ieamschd_xrsv0001\n#define asm_ieamschd_xfrrflag       _asmdsect_union13._asmdsect_struct2._asm_ieamschd_xfrrflag\n\n/* Values for field \"asm_iarv_xservice\" */\n#define asm_iarv_share                     1      /* ++ XSERVICE.SHARE KEYWORD        */\n#define asm_iarv_unshare                   2      /* ++ XSERVICE.UNSHARE KEYWORD      */\n#define asm_iarv_changeaccess              3      /* ++ XSERVICE.CHANGEACCESS KEYWORD */\n#define asm_iarv_shareseg                  4      /* ++ XSERVICE.SHARESEG KEYWORD     */\n\n/* Values for field \"asm_iarv_xflags1\" */\n#define asm_iarv_target_view_ro            0x80\n#define asm_iarv_target_view_sw            0x40\n#define asm_iarv_target_view_uw            0x20\n#define asm_iarv_target_view_tw            0x10\n#define asm_iarv_target_view_ls            0x08\n#define asm_iarv_target_view_na            0x04\n#define asm_iarv_copynow                   0x02   /* ++ KEYUSED.COPYNOW KEYWORD       */\n#define asm_iarv_retain_yes                0x01\n\n/* Values for field \"asm_iarv_xflags2\" */\n#define asm_iarv_xpartialpage_yes          0x80\n\n/* Values for field \"asm_iarv_xranglist\" */\n#define asm_iarvl                          0x0C   /* ++ LENGTH OF PLIST               */\n\n/* Values for field \"_filler42\" */\n#define asm_wtol_text_length               110    /* text length                      */\n\n/* Values for field \"asm_ieatdump_xsdata1\" */\n#define asm_ieatdump_xsdata_defs           0x80\n#define asm_ieatdump_xsdata_allnuc         0x40\n#define asm_ieatdump_xsdata_csa            0x20\n#define asm_ieatdump_xsdata_grsq           0x10\n#define asm_ieatdump_xsdata_lpa            0x08\n#define asm_ieatdump_xsdata_lsqa           0x04\n#define asm_ieatdump_xsdata_nuc            0x02\n#define asm_ieatdump_xsdata_rgn            0x01\n\n/* Values for field \"asm_ieatdump_xsdata2\" */\n#define asm_ieatdump_xsdata_sqa            0x80\n#define asm_ieatdump_xsdata_sum            0x40\n#define asm_ieatdump_xsdata_swa            0x20\n#define asm_ieatdump_xsdata_trt            0x10\n#define asm_ieatdump_xsdata_psa            0x08\n\n/* Values for field \"asm_ieatdump_xflags1\" */\n#define asm_ieatdump_keyused_ddname        0x40\n\n/* Values for field \"asm_ieatdump_xecb_addr\" */\n#define asm_ieatdumpl                      0x7C   /* ++ LENGTH OF PLIST               */\n\n/* Values for field \"asm_ixgconn_xixgflags\" */\n#define asm_ixgconn_xrequest_connect       0x80\n#define asm_ixgconn_xauth_read             0x40\n#define asm_ixgconn_xauth_write            0x20\n#define asm_ixgconn_ximportconnect_yes     0x10\n#define asm_ixgconn_xrmevents_lbwrite      0x08\n#define asm_ixgconn_xrmevents_lbdelete     0x04\n\n/* Values for field \"asm_ixgconn_xkeyusedflags\" */\n#define asm_ixgconn_keyused_userdata       0x80\n#define asm_ixgconn_keyused_avgbufsize     0x40\n#define asm_ixgconn_keyused_maxbufsize     0x20\n#define asm_ixgconn_keyused_elementsize    0x10\n#define asm_ixgconn_keyused_structname     0x08\n#define asm_ixgconn_keyused_completeexit   0x04\n#define asm_ixgconn_keyused_rmname         0x02\n#define asm_ixgconn_keyused_lsversion      0x01\n\n/* Values for field \"asm_ixgconn_xixgflags2\" */\n#define asm_ixgconn_keyused_diag           0x80\n#define asm_ixgconn_xdiag_no_diag          0x40\n#define asm_ixgconn_xdiag_yes              0x20\n\n/* Values for field \"asm_ixgconn_xstreamtoken\" */\n#define asm_ixgconnl                       0xBA   /* ++ LENGTH OF PLIST               */\n\n/* Values for field \"asm_ixgwrite_xixgflags\" */\n#define asm_ixgwrite_xmode_sync            0x80\n#define asm_ixgwrite_keyused_buffkey       0x40\n#define asm_ixgwrite_keyused_timestamp     0x20\n#define asm_ixgwrite_xmode_syncexit        0x10\n#define asm_ixgwrite_xmode_asyncnoresponse 0x08\n#define asm_ixgwrite_keyused_retblockid    0x04\n#define asm_ixgwrite_macused_ixgimprt      0x02\n#define asm_ixgwrite_keyused_buffer64      0x01\n\n/* Values for field \"asm_ixgbrwse_xrequest\" */\n#define asm_ixgbrwse_xrequest_start        1      /* ++ XREQUEST.START KEYWORD        */\n#define asm_ixgbrwse_xrequest_readcursor   2\n#define asm_ixgbrwse_xrequest_readblock    3\n#define asm_ixgbrwse_xrequest_reset        4      /* ++ XREQUEST.RESET KEYWORD        */\n#define asm_ixgbrwse_xrequest_end          5      /* ++ XREQUEST.END KEYWORD          */\n\n/* Values for field \"asm_ixgbrwse_xixgflags\" */\n#define asm_ixgbrwse_xdirection_youngtoold 0x8000\n#define asm_ixgbrwse_xmode_sync            0x4000\n#define asm_ixgbrwse_xgmt_yes              0x2000\n#define asm_ixgbrwse_keyused_startblockid  0x1000\n#define asm_ixgbrwse_keyused_oldest        0x800\n#define asm_ixgbrwse_keyused_youngest      0x400\n#define asm_ixgbrwse_keyused_search        0x200\n#define asm_ixgbrwse_keyused_buffkey       0x100\n#define asm_ixgbrwse_xposition_youngest    0x80\n#define asm_ixgbrwse_xmode_syncexit        0x40\n#define asm_ixgbrwse_xview_active          0x20\n#define asm_ixgbrwse_xview_all             0x10\n#define asm_ixgbrwse_keyused_view          0x08\n#define asm_ixgbrwse_keyused_multiblock    0x04\n#define asm_ixgbrwse_xmultiblock_yes       0x02\n#define asm_ixgbrwse_keyused_buffer64      0x01\n\n/* Values for field \"asm_ieamschd_xflag1\" */\n#define asm_ieamschd_xenv_stoken           0x08\n#define asm_ieamschd_xenv_fullxm           0x04\n#define asm_ieamschd_xenv_primary          0x02\n#define asm_ieamschd_xenv_home             0x01\n\n/* Values for field \"asm_ieamschd_xflag2\" */\n#define asm_ieamschd_keyused_dualpooltoken 0x20\n#define asm_ieamschd_xsynch_yes            0x10\n#define asm_ieamschd_keyused_keyvalue      0x08\n#define asm_ieamschd_xllock_yes            0x04\n#define asm_ieamschd_xfeature_cpmask       0x02\n#define asm_ieamschd_xfeature_crypto       0x01\n\n/* Values for field \"asm_ieamschd_xflag3\" */\n#define asm_ieamschd_xpriority_client      0x20\n#define asm_ieamschd_xpriority_enclave     0x10\n#define asm_ieamschd_xpriority_preempt     0x08\n#define asm_ieamschd_xpriority_current     0x04\n#define asm_ieamschd_xpriority_global      0x02\n#define asm_ieamschd_xpriority_local       0x01\n\n/* Values for field \"asm_ieamschd_xfrrflag\" */\n#define asm_ieamschd_xsdwaloc31_yes        0x01\n#define asm_ieamschdl                      0x3C   /* ++ LENGTH OF PLIST               */\n\n/* Values for field \"asm_diagnose_addr\" */\n#define asm_diagnose_length                4095\n#define asm_diagnose_fix                   1\n#define asm_diagnose_dontswap              2\n#define asm_diagnose_keep                  4\n#define asm_diagnose_all                   7\n\n/* Values for field \"asm_vsmlist_storage\" */\n#define sym_cleanup                        0      /* + symb equ                       */\n#define sym_gettoken                       1      /* + symb equ                       */\n#define sym_createtoken                    2      /* + symb equ                       */\n#define sym_deletetoken                    3      /* + symb equ                       */\n#define sym_allocatepages                  4      /* + symb equ                       */\n#define sym_freepages                      5      /* + symb equ                       */\n#define sym_enq                            6      /* + symb equ                       */\n#define sym_deq                            7      /* + symb equ                       */\n#define sym_sleep                          8      /* + symb equ                       */\n#define sym_getecb                         9      /* + symb equ                       */\n#define sym_wait                           10     /* + symb equ                       */\n#define sym_post                           11     /* + symb equ                       */\n#define sym_reset                          12     /* + symb equ                       */\n#define sym_select                         13     /* + symb equ                       */\n#define sym_connectshmem                   14     /* + symb equ                       */\n#define sym_disconnectshmem                15     /* + symb equ                       */\n#define sym_oper                           16     /* + symb equ                       */\n#define sym_wto                            17     /* + symb equ                       */\n#define sym_malloc                         18     /* + symb equ                       */\n#define sym_free                           19     /* + symb equ                       */\n#define sym_svc                            20     /* + symb equ                       */\n#define sym_attachmvs                      21     /* + symb equ                       */\n#define sym_clock                          22     /* + symb equ                       */\n#define sym_timeused                       23     /* + symb equ                       */\n#define sym_tdump                          24     /* + symb equ                       */\n#define sym_logger                         25     /* + symb equ                       */\n#define sym_vtoc                           26     /* + symb equ                       */\n#define sym_srb                            27     /* + symb equ                       */\n#define sym_wlm                            28     /* + symb equ                       */\n#define sym_obtain                         29     /* + symb equ                       */\n#define sym_testauth                       30     /* + symb equ                       */\n#define sym_diagnose                       31     /* + symb equ                       */\n#define sym_vsmlist                        32     /* + symb equ                       */\n\n/* Values for field \"asm_mutex_vector\" */\n#define asm_length                         0x978  /* dsect length                     */\n#define r0                                 0\n#define r1                                 1\n#define r2                                 2\n#define r3                                 3\n#define r4                                 4\n#define r5                                 5\n#define r6                                 6\n#define r7                                 7\n#define r8                                 8\n#define r9                                 9\n#define r10                                10\n#define r11                                11\n#define r12                                12\n#define r13                                13\n#define rdsa                               0x0D   /* DSA POINTER                      */\n#define r14                                14\n#define r15                                15\n#define fr0                                0\n#define fr2                                2\n#define fr4                                4\n#define fr6                                6\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "CASMIF": {"ttr": 2385, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/casmif.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\n\n#ifndef INCLUDE_CASMIF\n#define INCLUDE_CASMIF\n\n#if defined(ISIS_PF_MU) == 1 ]] defined(ISIS_PF_MI) == 1\n#define DEFINE_ENCLAVESRB(n) \u00d6\n\tpMvsInterface n;\n#define ENTER_ENCLAVESRB(n)  if (MvsInterface::zIIP) \u00d6\n\u00e4printf(\" Enter %s %d\u00d6n\",__FILE__,__LINE__);\tn =\tmvs()->enterSrb();\u00fc\n#define EXIT_ENCLAVESRB(n)  if (MvsInterface::zIIP) \u00d6\n\u00e4\tn->exitSrb(); printf(\" Exit %s %d\u00d6n\",__FILE__,__LINE__);\u00fc\n\n\n#define ASM_OPER_QUEUE \"ASMOPERQ\"\n#define ASM_OPER_SECONDS    10\n#define ASM_OPER_DESCRIPTOR 28\n\n#include \"asmif.hpp\"\n#include <stdio.h>\n#include <stdlib.h>\n\nclass   SUBTASK;\nclass   MvsInterface;\ntypedef MvsInterface * pMvsInterface;\ntypedef struct asmdsect ASM;\ntypedef ASM * pasm;\ntypedef unsigned long pcsul;\ntypedef unsigned long handle;\ntypedef unsigned long pcshandle;\ntypedef long pcsl;\nextern \"C\" typedef int CFUNC(void *);\nMvsInterface * mvs();\n#ifndef PSA_CONST\n#define PSA_CONST\nconst  unsigned PSATOLD = 0x21c;\nconst  unsigned PSAAOLD = 0x224;\nconst  unsigned TCBFSA  = 0x70/4;\nconst  unsigned TCBUSER = 0xA8;\nconst  unsigned tcbuser = 0xa8;\nconst  unsigned SAVEr1 =  0x18/4;\nstatic unsigned POSTcode = 0x40000000;\nstatic unsigned WAITcode = 0x80000000;\nstatic unsigned offPostWait = 0x3fffffff;\n#endif\nconst  unsigned long  CICS_NULL= 0xff000000;\nconst  unsigned long  LOW_PRIORITY  = 1;\nconst  unsigned long  RUN_PRIORITY  = 15;\nconst  unsigned long  HIGH_PRIORITY = 255;\n\n#ifndef SUBRUN_INCLUDE\n\n\n#if defined(MEM_SUPPORT)\n#ifndef IF_SASC_REPLACE_NEW_DELETE\n#define IF_SASC_REPLACE_NEW_DELETE\n#endif\nextern void * asmm;\nISIS_EXT_ASM void *  ASMMINI(size_t,size_t);\nISIS_EXT_ASM void *  ASMMALL(size_t, void *);\nISIS_EXT_ASM void    ASMMFRE(void *, void *);\nISIS_EXT_ASM void    ASMMTER(void *);\n#define ASMM_MAX 4*1024*1024\n#define ASMM_MIN  128*1024\n\nvoid * OwnMalloc(size_t s)\n\t\u00e4\n\tif ( asmm == 0 ) asmm = ASMMINI(ASMM_MAX,ASMM_MIN);\n\treturn (ASMMALL(s,asmm));\n\t\u00fc\n\nvoid OwnFree(void * s)\n\t\u00e4\n\tASMFREE(s,asmm);\n\t\u00fc\n\nvoid * OwnRealloc(void *, size_t);\n#endif\n\n\n#ifndef TMsg\n#define TMsg( n ) \u00d6\n\tMsg( n +2 )<<(void * )(::mvs()->GetTCB())<<(void *)_eibptr\n#endif\n\n#ifndef SMsg\n#define SMsg( n ) \u00d6\n\tMsg( n +1 )<<(int)(::mvs()->GetTCB())\n#endif\n\n#ifndef TRACE\n#define TRACE( c , t ) \u00d6\n\tif ( GlobalTraceFlag >= c ) \u00d6\n\t\u00e4 MsgEnq();::mvs()->trace( t );MsgDeq();\u00fc\n\n#define TRACEDUMP( c , t , p ,l ) \u00d6\n\tif ( GlobalTraceFlag >= c ) \u00d6\n\t\u00e4 MsgEnq();::mvs()->tracedump( t , p , l );MsgDeq();\u00fc\n#endif\n\n#define mytcb (void *)(::mvs()->GetTCB())\n#define ZIIP_MAJOR  \"ZIIP_MAJ\"\n#define ZIIP_MINOR  \"ZIIP_MIN\"\nclass MvsInterface\u00e4\nprotected:\n\tpcsul wt\u00c44\u00dc;\n\tchar  jobname\u00c49\u00dc;\n\tchar  programname\u00c49\u00dc;\n\tint  rc;\n\tint   reason;\n\tint   critical;\n\tbool  srb;\n\tpasm  pASM;\n\tFILE  * file;\npublic:\n\t//szm\n\tstatic bool zIIP;\n\tstatic pcsul wlmEnclave;\n\tstatic int initEnclave();\n\n\tinline pMvsInterface enterSrb()\n\t\t\u00e4\n\t\tif (wlmEnclave==0)\n\t\t\tinitEnclave();\n\t\tif (|srb)\n\t\t\tSrb();\n\t\treturn this;\n\t\t\u00fc\n\n\tinline int exitSrb()\n\t\t\u00e4\n\t\tif (srb)\n\t\t\t\u00e4\n\t\t\tSrb();\n\t\t\t\u00fc\n\t\treturn 1;\n\t\t\u00fc\n\t//szm\n\n\tMvsInterface();\n\tvirtual \u00dfMvsInterface();\n\tvirtual pcsul GetTCB();                // get actual TCB address\n\tvirtual pcsul GetASCB();               // get actual ASCB address\n\tvirtual int CheckASCB(pcsul);          // check ASCB if valid\n\tvirtual pcsul GetToken(char *);        // Get TOKEN\n\tvirtual pcsul CreateToken(char *,pcsul *);//Create token\n\tvirtual void DeleteToken(char*);       // delete token\n\tvirtual int WaitEcb(pcsul,void *,void * = 0, void * =0,void * =0);\n\tvirtual int PostEcb(void *,pcsul=0);   // post event\n\tvirtual int Enq(char *,int);           // Exc Enq with minorname an    d max wait\n\tvirtual int Deq(char *);               // Deq\n\tvirtual void Chap(pcsul,int);          // change relative priority\n\tvirtual pcsul Attach(char *,char **,pcsul); // start subtask\n\tvirtual void Detach(pcsul);            // Detach Subtask\n\tvirtual void Sleep(int);               // Sleep - task wait\n\tvirtual int  Oper(char *,const size_t);// Oper comm\n\tvirtual void Wto(const char *,const int= ASM_OPER_DESCRIPTOR);//Wto\n\tvirtual void * Malloc(size_t);\n\tvirtual void Free(void *);\n\tvirtual int  Svc(int,void *);\n\tvirtual int  AttachMvs(const char *,const char *);\n\tvirtual void Clock(void *);\n\tvirtual void Timeused(void *);           //szm 20050301used CPU time\n\tvirtual int  Tdump(const char *,const char *,int); //szm200503265 TDUMP\n\tvirtual int  LoggerOpen(const char *);   //szm20051118 logger support\n\tvirtual int  Logger(const char *,size_t = 0);\n\tvirtual int  LoggerClose();\n\t//virtual int  BrowseLogger(const char *&,size_t&,int=0,int = 0); //szm\n\tvirtual int  BrowseLogger(const char * & addr,size_t *  & length,int direction,int all,char * date_time);\n\tvirtual int  VtocOpen(const char * ddname,const char * mask,char * dscb);\n\tvirtual int  Vtoc(char * dscb);\n\tvirtual int  VtocClose();\n\tvirtual int  Srb();\n\tvirtual int  Wlm(const char * =0,const char * =0);\n\tvirtual int  Obtain(const char * dsn, const char * volser,char * dscb);\n\tvirtual int Testauth();\n\tvirtual int Diagnose(int,void *);\n\tvirtual int Vsmlist(void *,void *,int);\n\tvirtual int  TCPCALL(int,void * =0, void * =0, void * =0, void * =0,\n\t\tvoid * =0, void * =0, void * =0, void * =0);\n\tchar* GetJobName()\u00e4return jobname;\u00fc\n\tchar* GetProgramName()\u00e4return programname;\u00fc\n\tvoid   trace(char *);\n\tvoid   tracedump(char *,void *,int);\n\tvoid   tracedump(char * t , const void * a,int l)\n\t\t\u00e4tracedump(t,(void *)a,l);\u00fc\n\tvoid   diag(const char * a)\n\t\t\u00e4\n\t\tprintf(\" %s function rc:%d reason:%d\u00d6n\",a,rc,reason);\n\t\tprintf(\"    retval:%d retcode:%d reason:%8.8x\u00d6n\",pASM->asm_bpx1_retval,pASM->asm_bpx1_retcode,pASM->asm_bpx1_rsncode);\n\t\t\u00fc\n\tvoid   extractOper(char *);\n\tvirtual int EnterCritical() \u00e4return 0;\u00fc        //enter critical section\n\tvirtual int LeaveCritical()\u00e4return 0;\u00fc         //leave critical\n\tvirtual pcsul GetECB()\u00e4return 0;\u00fc              //get a local ECB\n\tvirtual pcsul FreeECB(void *)\u00e4return 0;\u00fc       //free a local ECB\n\tvirtual int WaitEvent(pcsul,int)\u00e4return 0;\u00fc    //wait for the ECB\n\tvirtual int PostEvent(pcsul)\u00e4return 0;\u00fc        //post event with\n\tvirtual int ResetEvent(pcsul)\u00e4return 0;\u00fc       //clear ECB post\n\tvirtual int Select(pcsul,void *,void *,void *, void *);// select BPX1\n\tvirtual int ConnectShmem(pcsul,pcsul,int)\u00e4return 0;\u00fc//connect\n\tvirtual int DisconnectShmem(pcsul)\u00e4return 0;\u00fc  //disconnect\n\tvirtual pcsul AllocatePages(int)\u00e4return 0;\u00fc    //allocate pages SHMEM\n\tvirtual int FreePages(pcsul,int)\u00e4return 0 ;\u00fc   //free pages\n\tvirtual int getReasonCode()\u00e4return reason;\u00fc  //szm20071005 get back reason code\n\tvirtual pasm getpasm()\n\t\u00e4\n\t\treturn pASM;\n\t\u00fc\nprotected:\n\tint  CASMIF(int,\n\t\tvoid * = 0 ,void * = 0 ,void * = 0 ,void * = 0,\n\t\tvoid * = 0 ,void * = 0 ,void * = 0 ,void * = 0);\n\tint check(int,char *,char * );\n\tint check(int,int ,char * );\n\t\u00fc;\n\nlong long clock_mvs(); //szm\nint  tdump(const char *,const char *,int=0); //szm\nint  mvsReasonCode();  //szm20071005 get back reason code\n\nint            MsgEnq();\nint            MsgDeq();\nint            isCics();\nextern         int GlobalTraceFlag;\nextern         int GlobalCicsFlag;\n\n#endif                             // SUBRUN_INCLUDE\n\n//KV\n#if defined(ISIS_PF_MI) ]] defined (ISIS_PF_MU)\n#if defined(__alignmem)==0\n#define __alignmem\n#endif\n#endif\n\n__alignmem class SyncVar\n\t\u00e4\n\tprivate:\n\t\tpcsul var;\n\t\tpcsul wait;\n\t\tpcsul ecb;\n\tpublic:\n\t\tSyncVar(pcsul = 24*60*60*1000);\n\t\tSyncVar(const SyncVar&);\n\t\t\u00dfSyncVar();\n\t\tSyncVar& operator=(pcsul);\n\t\toperator int();\n\t\tfriend pcsul waitSyncVar(SyncVar&);\n\t\tfriend pcsul waitSyncVars(SyncVar&,SyncVar&);\n\t\u00fc;\n\npcsul waitSyncVar(SyncVar&);\npcsul waitSyncVars(SyncVar&,SyncVar&);\n\n#define MAXSECOND  359999\n#define TWAMAXECB  512\n\n#if defined(ISIS_PF_MI) ]] defined (ISIS_PF_MU)\n\n#define __Tjoin(x,y)  x ## y\n#define __ENQ_E 0\n#define __ENQ_S 0x80\n#define __ENQ_STEP 0\n#define __ENQ_SYSTEM 0x40\n#define __ENQ_SYSTEMS 0x48\n#define __ENQ_RET_NONE 0\n#define __ENQ_RET_HAVE 1\n#define __ENQ_RET_CHNG 2\n#define __ENQ_RET_USE 3\n#define __ENQ_RET_TEST 7\n#define __DEQ_RET_NONE 0\n#define __DEQ_RET_HAVE 1\n\nextern inline int _enq(char *qn, char *rn, int rlen, int flags) \u00e4\n\tstatic const struct __ENQ_plist \u00e4\n\t\tchar flags;\n\t\tchar rname_len;\n\t\tchar parms;\n\t\tchar rc;\n\t\tchar *qname;\n\t\tchar *rname;\n\t\t\u00fc __plist_init = \u00e4 0xc0, 0, 0, 0, 0, 0 \u00fc;\n\tstruct __ENQ_plist __plist;\n\t__plist = __plist_init;\n\t__plist.rname_len = (char) rlen; __plist.qname = qn;\n\t__plist.rname = rn; __plist.parms ]= flags;\n\tif (mvs()->Svc(56,&__plist)==0)\n\t\treturn 0;\n\telse return __plist.rc;\n\t\u00fc\n\n#define ENQ(qn, rn, excl, rlen, scope, ret) \u00d6\n\t_enq(qn, rn, rlen, __Tjoin(__ENQ_, excl) ] __Tjoin(__ENQ_, scope) ] \u00d6\n\t__Tjoin(__ENQ_RET_, ret))\n\nextern inline int _deq(char *qn, char *rn, int rlen, int flags)\n\t\u00e4\n\tstatic const struct __DEQ_plist\n\t\t\u00e4\n\t\tchar flags;\n\t\tchar rname_len;\n\t\tchar parms;\n\t\tchar rc;\n\t\tchar *qname;\n\t\tchar *rname;\n\n\t\t\u00fc __plist_init = \u00e4 0xc0, 0, 0, 0, 0, 0 \u00fc;\n\n\tstruct __DEQ_plist __plist;\n\t__plist = __plist_init;\n\t__plist.rname_len = (char) rlen; __plist.qname = qn;\n\t__plist.rname = rn; __plist.parms ]= flags;\n\tif (mvs()->Svc(48,&__plist)==0)\n\t\treturn 0;\n\telse\n\t\treturn __plist.rc;\n\t\u00fc\n\n#define DEQ(qn, rn, rlen, scope, ret) \u00d6\n\t_deq(qn, rn, rlen, __Tjoin(__ENQ_, scope) ] \u00d6\n\t__Tjoin(__DEQ_RET_, ret))\n#define WAIT1(ecbaddr) \u00d6\n\t(_ldregs(R0+R1, 1, ecbaddr), _ossvc(1))\n#define WAITM(n, ecblist) \u00d6\n\t(_ldregs(R0+R1, n, ecblist), LCR(1,1), _ossvc(1))\n#define POST(ecbaddr, code) \u00d6\n\t(_ldregs(R0+R1, code, ecbaddr), _ossvc(2))\n\n#define _Aep 1                    /* ATTACH macro keyword tokens    */\n#define _Adcb 2\n#define _Alpmod 3\n#define _Adpmod 4\n#define _Aparam 5\n#define _Aecb 6\n#define _Aetxr 7\n#define _Ashspl 8\n#define _Agspl 9\n#define _Aszerono 10\n#define _Atasklib 11\n#define _Aend 0\n\nextern int ATTACH(void **, ...);\n\n#define __DETACH_NOSTAE 0\n#define __DETACH_STAE 0x\n\nextern int _detach(void **, unsigned);\n\n#define DETACH(tcbptr, staeopt) \u00d6\n\t_detach(tcbptr, __Tjoin(__DETACH_, staeopt))\n#define CHAP(incr, tcbptr) \u00d6\n\t(_ldregs(R0+R1, incr, tcbptr), _ossvc(44))\n\n#define __STATUS_STOP 6\n#define __STATUS_START 7\n\n#ifdef STATUS /* handle nameser.h conflict */\n#undef STATUS\n#endif\n\n#define STATUS(action, tcbptr) \u00d6\n\t(_ldregs(R0+R1, __Tjoin(__STATUS_, action), tcbptr), _ossvc(79))\n\n\n#endif\n\n#else\n#define ENTER_ENCLAVESRB\n#define EXIT_ENCLAVESRB\n#endif\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DEFLATE": {"ttr": 2341, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* deflate.h -- internal compression state\n * Copyright (C) 1995-2002 Jean-loup Gailly\n * For conditions of distribution and use, see copyright notice in zlib.h\n */\n\n/* WARNING: this file should *not* be used by applications. It is\n   part of the implementation of the compression library and is\n   subject to change. Applications should only use zlib.h.\n */\n\n/* \u00a7(#) $Id: deflate.h,v 1.2 2003/09/11 11:16:22 matthiasw Exp $ */\n\n#ifndef _DEFLATE_H\n#define _DEFLATE_H\n\n#include \"zutil.h\"\n\n/* ===========================================================================\n * Internal compression state.\n */\n\n#define LENGTH_CODES 29\n/* number of length codes, not counting the special END_BLOCK code */\n\n#define LITERALS  256\n/* number of literal bytes 0..255 */\n\n#define L_CODES (LITERALS+1+LENGTH_CODES)\n/* number of Literal or Length codes, including the END_BLOCK code */\n\n#define D_CODES   30\n/* number of distance codes */\n\n#define BL_CODES  19\n/* number of codes used to transfer the bit lengths */\n\n#define HEAP_SIZE (2*L_CODES+1)\n/* maximum heap size */\n\n#define MAX_BITS 15\n/* All codes must not exceed MAX_BITS bits */\n\n#define INIT_STATE    42\n#define BUSY_STATE   113\n#define FINISH_STATE 666\n/* Stream status */\n\n\n/* Data structure describing a single value and its code string. */\ntypedef struct ct_data_s \u00e4\n    union \u00e4\n        ush  freq;       /* frequency count */\n        ush  code;       /* bit string */\n    \u00fc fc;\n    union \u00e4\n        ush  dad;        /* father node in Huffman tree */\n        ush  len;        /* length of bit string */\n    \u00fc dl;\n\u00fc FAR ct_data;\n\n#define Freq fc.freq\n#define Code fc.code\n#define Dad  dl.dad\n#define Len  dl.len\n\ntypedef struct static_tree_desc_s  static_tree_desc;\n\ntypedef struct tree_desc_s \u00e4\n    ct_data *dyn_tree;           /* the dynamic tree */\n    int     max_code;            /* largest code with non zero frequency */\n    static_tree_desc *stat_desc; /* the corresponding static tree */\n\u00fc FAR tree_desc;\n\ntypedef ush Pos;\ntypedef Pos FAR Posf;\ntypedef unsigned IPos;\n\n/* A Pos is an index in the character window. We use short instead of int to\n * save space in the various tables. IPos is used only for parameter passing.\n */\n\ntypedef struct internal_state \u00e4\n    z_streamp strm;      /* pointer back to this zlib stream */\n    int   status;        /* as the name implies */\n    Bytef *pending_buf;  /* output still pending */\n    ulg   pending_buf_size; /* size of pending_buf */\n    Bytef *pending_out;  /* next pending byte to output to the stream */\n    int   pending;       /* nb of bytes in the pending buffer */\n    int   noheader;      /* suppress zlib header and adler32 */\n    Byte  data_type;     /* UNKNOWN, BINARY or ASCII */\n    Byte  method;        /* STORED (for zip only) or DEFLATED */\n    int   last_flush;    /* value of flush param for previous deflate call */\n\n                /* used by deflate.c: */\n\n    uInt  w_size;        /* LZ77 window size (32K by default) */\n    uInt  w_bits;        /* log2(w_size)  (8..16) */\n    uInt  w_mask;        /* w_size - 1 */\n\n    Bytef *window;\n    /* Sliding window. Input bytes are read into the second half of the window,\n     * and move to the first half later to keep a dictionary of at least wSize\n     * bytes. With this organization, matches are limited to a distance of\n     * wSize-MAX_MATCH bytes, but this ensures that IO is always\n     * performed with a length multiple of the block size. Also, it limits\n     * the window size to 64K, which is quite useful on MSDOS.\n     * To do: use the user input buffer as sliding window.\n     */\n\n    ulg window_size;\n    /* Actual size of window: 2*wSize, except when the user input buffer\n     * is directly used as sliding window.\n     */\n\n    Posf *prev;\n    /* Link to older string with same hash index. To limit the size of this\n     * array to 64K, this link is maintained only for the last 32K strings.\n     * An index in this array is thus a window index modulo 32K.\n     */\n\n    Posf *head; /* Heads of the hash chains or NIL. */\n\n    uInt  ins_h;          /* hash index of string to be inserted */\n    uInt  hash_size;      /* number of elements in hash table */\n    uInt  hash_bits;      /* log2(hash_size) */\n    uInt  hash_mask;      /* hash_size-1 */\n\n    uInt  hash_shift;\n    /* Number of bits by which ins_h must be shifted at each input\n     * step. It must be such that after MIN_MATCH steps, the oldest\n     * byte no longer takes part in the hash key, that is:\n     *   hash_shift * MIN_MATCH >= hash_bits\n     */\n\n    long block_start;\n    /* Window position at the beginning of the current output block. Gets\n     * negative when the window is moved backwards.\n     */\n\n    uInt match_length;           /* length of best match */\n    IPos prev_match;             /* previous match */\n    int match_available;         /* set if previous match exists */\n    uInt strstart;               /* start of string to insert */\n    uInt match_start;            /* start of matching string */\n    uInt lookahead;              /* number of valid bytes ahead in window */\n\n    uInt prev_length;\n    /* Length of the best match at previous step. Matches not greater than this\n     * are discarded. This is used in the lazy match evaluation.\n     */\n\n    uInt max_chain_length;\n    /* To speed up deflation, hash chains are never searched beyond this\n     * length.  A higher limit improves compression ratio but degrades the\n     * speed.\n     */\n\n    uInt max_lazy_match;\n    /* Attempt to find a better match only when the current match is strictly\n     * smaller than this value. This mechanism is used only for compression\n     * levels >= 4.\n     */\n#   define max_insert_length  max_lazy_match\n    /* Insert new strings in the hash table only if the match length is not\n     * greater than this length. This saves time but degrades compression.\n     * max_insert_length is used only for compression levels <= 3.\n     */\n\n    int level;    /* compression level (1..9) */\n    int strategy; /* favor or force Huffman coding*/\n\n    uInt good_match;\n    /* Use a faster search when the previous match is longer than this */\n\n    int nice_match; /* Stop searching when current match exceeds this */\n\n                /* used by trees.c: */\n    /* Didn't use ct_data typedef below to supress compiler warning */\n    struct ct_data_s dyn_ltree\u00c4HEAP_SIZE\u00dc;   /* literal and length tree */\n    struct ct_data_s dyn_dtree\u00c42*D_CODES+1\u00dc; /* distance tree */\n    struct ct_data_s bl_tree\u00c42*BL_CODES+1\u00dc;  /* Huffman tree for bit lengths */\n\n    struct tree_desc_s l_desc;               /* desc. for literal tree */\n    struct tree_desc_s d_desc;               /* desc. for distance tree */\n    struct tree_desc_s bl_desc;              /* desc. for bit length tree */\n\n    ush bl_count\u00c4MAX_BITS+1\u00dc;\n    /* number of codes at each bit length for an optimal tree */\n\n    int heap\u00c42*L_CODES+1\u00dc;      /* heap used to build the Huffman trees */\n    int heap_len;               /* number of elements in the heap */\n    int heap_max;               /* element of largest frequency */\n    /* The sons of heap\u00c4n\u00dc are heap\u00c42*n\u00dc and heap\u00c42*n+1\u00dc. heap\u00c40\u00dc is not used.\n     * The same heap array is used to build all trees.\n     */\n\n    uch depth\u00c42*L_CODES+1\u00dc;\n    /* Depth of each subtree used as tie breaker for trees of equal frequency\n     */\n\n    uchf *l_buf;          /* buffer for literals or lengths */\n\n    uInt  lit_bufsize;\n    /* Size of match buffer for literals/lengths.  There are 4 reasons for\n     * limiting lit_bufsize to 64K:\n     *   - frequencies can be kept in 16 bit counters\n     *   - if compression is not successful for the first block, all input\n     *     data is still in the window so we can still emit a stored block even\n     *     when input comes from standard input.  (This can also be done for\n     *     all blocks if lit_bufsize is not greater than 32K.)\n     *   - if compression is not successful for a file smaller than 64K, we can\n     *     even emit a stored file instead of a stored block (saving 5 bytes).\n     *     This is applicable only for zip (not gzip or zlib).\n     *   - creating new Huffman trees less frequently may not provide fast\n     *     adaptation to changes in the input data statistics. (Take for\n     *     example a binary file with poorly compressible code followed by\n     *     a highly compressible string table.) Smaller buffer sizes give\n     *     fast adaptation but have of course the overhead of transmitting\n     *     trees more frequently.\n     *   - I can't count above 4\n     */\n\n    uInt last_lit;      /* running index in l_buf */\n\n    ushf *d_buf;\n    /* Buffer for distances. To simplify the code, d_buf and l_buf have\n     * the same number of elements. To use different lengths, an extra flag\n     * array would be necessary.\n     */\n\n    ulg opt_len;        /* bit length of current block with optimal trees */\n    ulg static_len;     /* bit length of current block with static trees */\n    uInt matches;       /* number of string matches in current block */\n    int last_eob_len;   /* bit length of EOB code for last block */\n\n#ifdef DEBUG\n    ulg compressed_len; /* total bit length of compressed file mod 2\u00ac32 */\n    ulg bits_sent;      /* bit length of compressed data sent mod 2\u00ac32 */\n#endif\n\n    ush bi_buf;\n    /* Output buffer. bits are inserted starting at the bottom (least\n     * significant bits).\n     */\n    int bi_valid;\n    /* Number of valid bits in bi_buf.  All bits above the last valid bit\n     * are always zero.\n     */\n\n\u00fc FAR deflate_state;\n\n/* Output a byte on the stream.\n * IN assertion: there is enough room in pending_buf.\n */\n#define put_byte(s, c) \u00e4s->pending_buf\u00c4s->pending++\u00dc = (c);\u00fc\n\n\n#define MIN_LOOKAHEAD (MAX_MATCH+MIN_MATCH+1)\n/* Minimum amount of lookahead, except at the end of the input file.\n * See deflate.c for comments about the MIN_MATCH+1.\n */\n\n#define MAX_DIST(s)  ((s)->w_size-MIN_LOOKAHEAD)\n/* In order to simplify the code, particularly on 16 bit machines, match\n * distances are limited to MAX_DIST instead of WSIZE.\n */\n\n        /* in trees.c */\nvoid _tr_init         OF((deflate_state *s));\nint  _tr_tally        OF((deflate_state *s, unsigned dist, unsigned lc));\nvoid _tr_flush_block  OF((deflate_state *s, charf *buf, ulg stored_len,\n\t\t\t  int eof));\nvoid _tr_align        OF((deflate_state *s));\nvoid _tr_stored_block OF((deflate_state *s, charf *buf, ulg stored_len,\n                          int eof));\n\n#define d_code(dist) \u00d6\n   ((dist) < 256 ? _dist_code\u00c4dist\u00dc : _dist_code\u00c4256+((dist)>>7)\u00dc)\n/* Mapping from a distance to a distance code. dist is the distance - 1 and\n * must not have side effects. _dist_code\u00c4256\u00dc and _dist_code\u00c4257\u00dc are never\n * used.\n */\n\n#ifndef DEBUG\n/* Inline versions of _tr_tally for speed: */\n\n#if defined(GEN_TREES_H) ]] |defined(STDC)\n  extern uch _length_code\u00c4\u00dc;\n  extern uch _dist_code\u00c4\u00dc;\n#else\n  extern const uch _length_code\u00c4\u00dc;\n  extern const uch _dist_code\u00c4\u00dc;\n#endif\n\n# define _tr_tally_lit(s, c, flush) \u00d6\n  \u00e4 uch cc = (c); \u00d6\n    s->d_buf\u00c4s->last_lit\u00dc = 0; \u00d6\n    s->l_buf\u00c4s->last_lit++\u00dc = cc; \u00d6\n    s->dyn_ltree\u00c4cc\u00dc.Freq++; \u00d6\n    flush = (s->last_lit == s->lit_bufsize-1); \u00d6\n   \u00fc\n# define _tr_tally_dist(s, distance, length, flush) \u00d6\n  \u00e4 uch len = (length); \u00d6\n    ush dist = (distance); \u00d6\n    s->d_buf\u00c4s->last_lit\u00dc = dist; \u00d6\n    s->l_buf\u00c4s->last_lit++\u00dc = len; \u00d6\n    dist--; \u00d6\n    s->dyn_ltree\u00c4_length_code\u00c4len\u00dc+LITERALS+1\u00dc.Freq++; \u00d6\n    s->dyn_dtree\u00c4d_code(dist)\u00dc.Freq++; \u00d6\n    flush = (s->last_lit == s->lit_bufsize-1); \u00d6\n  \u00fc\n#else\n# define _tr_tally_lit(s, c, flush) flush = _tr_tally(s, 0, c)\n# define _tr_tally_dist(s, distance, length, flush) \u00d6\n              flush = _tr_tally(s, distance, length)\n#endif\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSNAMEUT": {"ttr": 2361, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/dsnameut.h,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   dataset name utilities, also called from C programs\n*******************************************************************************/\n\n\n#ifndef DSNAMEUT_H\n#define DSNAMEUT_H\n\n\n//KV20060329 buffer nm to avoid static variable\nISIS_EXT_C\nchar * genOpenName(const char *name, char *nm);\n\n#endif\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DSSCLAS": {"ttr": 2411, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef DEFINE_DSSCLAS\n#define DEFINE_DSSCLAS\n\n#ifndef array_0\n#define array_0 1\n#endif\n\n#include <stdlib.h>\n\n\ntypedef void * address;\nstruct DSSPARM;\nextern \"OS\" \u00e4typedef  int (* adrdssu_address)(...);\u00fc\nextern \"C\"  \u00e4typedef  void(* fetch_type)();\u00fc\nclass   DssJob;\n\nstruct  DSSPARM\n\u00e4\n        short length;\n        char  data\u00c4array_0\u00dc;\n\u00fc;\n\nDSSPARM * makeDSSPARM(size_t,void *);\n\nclass DSS\n\u00e4\npublic:\nenum DSS_FUNCTION\n\t\u00e4\n     invalid =  0,\n   \t dump \t=  1,\n   \t restore =  2 \u00fc;\nprivate:\n        address         crab;\n        static char     ddnamelist\u00c448\u00dc;\n        static char     pagenumber\u00c44\u00dc;\n        static address  uim;\n        adrdssu_address adrdssu;\n        DSSPARM *       dssparm\u00c45\u00dc;\n        DssJob *        job;\n\npublic:\n        DSS(char *,DssJob * = NULL);\n        \u00dfDSS();\n        int run(DssJob *);\n        DssJob * getJob()\u00e4 return job;\u00fc\n        void     setJob(DssJob *j)\u00e4 job = j;\u00fc\n        DSS_FUNCTION    function;\nprivate:\n        adrdssu_address load(const char*);\n        void    unload(const char *);\n        int     call(address,DSSPARM **);\n        void     exit(int);\n\u00fc;\n\n#endif\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSSDATA": {"ttr": 2375, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n#if !defined(_CL133)\n#define _CL133\ntypedef char CL133(|133|);\n#endif\n\n#if !defined(_XL6)\n#define _XL6\ntypedef char XL6(|6|);\n#endif\n\n#if !defined(_XL20)\n#define _XL20\ntypedef char XL20(|20|);\n#endif\n\n#if !defined(_XL4)\n#define _XL4\ntypedef struct\n  {\n  char BF : 32;\n  } XL4;\n#endif\n\n#if !defined(_XL2)\n#define _XL2\ntypedef struct\n  {\n  char BF : 16;\n  } XL2;\n#endif\n\n#if !defined(_BL2)\n#define _BL2\ntypedef struct\n  {\n  char BF : 16;\n  } BL2;\n#endif\n\n#if !defined(_BL12)\n#define _BL12\ntypedef char BL12(|12|);\n#endif\n\n#if !defined(_AL3)\n#define _AL3\ntypedef struct\n  {\n  char BF : 24;\n  } AL3;\n#endif\n\n#if !defined(_AL4)\n#define _AL4\ntypedef struct\n  {\n  char BF : 32;\n  } AL4;\n#endif\n\n#if !defined(_CL4)\n#define _CL4\ntypedef char CL4(|4|);\n#endif\n\n#if !defined(_CL8)\n#define _CL8\ntypedef char CL8(|8|);\n#endif\n\n#if !defined(_XL8)\n#define _XL8\ntypedef char XL8(|8|);\n#endif\n\n#if !defined(_CL10)\n#define _CL10\ntypedef char CL10(|10|);\n#endif\n\n#if !defined(_AL2)\n#define _AL2\ntypedef struct\n  {\n  char BF : 16;\n  } AL2;\n#endif\n\n#if !defined(_CL32)\n#define _CL32\ntypedef char CL32(|32|);\n#endif\n\n#define R0 0                            /* */\n#define R1 1                            /* */\n#define R2 2                            /* */\n#define R3 3                            /* */\n#define R4 4                            /* */\n#define R5 5                            /* */\n#define R6 6                            /* */\n#define R7 7                            /* */\n#define R8 8                            /* */\n#define R9 9                            /* */\n#define R10 10                          /* */\n#define R11 11                          /* */\n#define R12 12                          /* */\n#define R13 13                          /* */\n#define R14 14                          /* */\n#define R15 15                          /* */\n\nstruct DSSDATA\n  {\n/*                                                                                          */\n/*                    GENERAL SECTION                                                       */\n/*                                                                                          */\n  CL32 _f0;                             /* */\n/*                                                                                          */\n/*                    DSSCALL SECTION                                                       */\n/*                                                                                          */\n  CL32 _f1;                             /* */\n  void *dsscsave(|18|);                 /* */\n  void *dsscparm(|5|);                  /* */\n  AL2 dsscop;                           /* */\n  CL10 dsscopt;                         /* */\n#define DSSCOPL 10                      /* */\n  AL2 dsscdds;                          /* */\n  XL8 dsscddss(|4|);                    /*            RESERVED                             */\n  CL8 _f2;                              /*          SYSIN                                */\n  CL8 _f3;                              /*       SYSPRINT                             */\n#define DSSCDDSL 48                     /*          LIST LENGTH                          */\n  AL2 dsscpage;                         /*      LIST LENGTH                          */\n  CL4 dsscpg;                           /*           FIRST PAGE                           */\n#define DSSCPAGEL 4                     /*            LIST LENGTH                          */\n  AL2 dsscuim;                          /*       LENGTH                               */\n  AL4 dsscuima;                         /* MODULE ADDRESS                   */\n#define DSSCUIML 4                      /*          LENGTH DEF                           */\n  AL2 dsscdata;                         /*      LENGTH                               */\n  void *dsscdataa;                      /*          ADDRESS                              */\n#define DSSCDATAL 4                     /*         LENGTH                               */\n  void *dsscaddr;                       /*                START OF THE ADRDSSU                 */\n  CL32 _f4;                             /* */\n/*                   SSOPENL OPEN  (0,INPUT),MF=L,MODE=31        OPEN LIST FORM             */\n  int dssopenl(|0|);                    /*                             ALIGN LIST TO FULLWORD */\n  char _f5;                             /*                     OPTION BYTE                 */\n  AL3 _f6;                              /*                       RESERVED               @L1A */\n  void *_f7;                            /*                         DCB ADDRESS            @L1A */\n/*                   DSSLOG  DCB   DCBE=DSSLOGE,DDNAME=DSSLOG,DSORG=PS,MACRF=(PM),          */\n/*                                 RECFM=FBA,LRECL=133,BLKSIZE=13300                        */\n/*                                          DATA CONTROL BLOCK                              */\n/*                                                                                          */\n  int dsslog(|0|);                      /*          ORIGIN ON WORD BOUNDARY                   */\n/*                                          DIRECT ACCESS DEVICE INTERFACE                  */\n  void *_f8;                            /*     DCBE ADDRESS                              */\n  BL12 _f9;                             /*        FDAD, DVTBL                               */\n  void *_f10;                           /*           KEYLEN, DEVT, TRBAL                       */\n/*                                          COMMON ACCESS METHOD INTERFACE                  */\n  char _f11;                            /*         BUFNO, NUMBER OF BUFFERS                  */\n  AL3 _f12;                             /*         BUFCB, BUFFER POOL CONTROL BLOCK          */\n  AL2 _f13;                             /*         BUFL, BUFFER LENGTH                       */\n  BL2 _f14;                             /* DSORG, DATA SET ORGANIZATION       */\n  void *_f15;                           /*           IOBAD FOR EXCP OR RESERVED                */\n/*                                          FOUNDATION EXTENSION                            */\n  char _f16;                            /*  BFTEK, BFALN, DCBE INDICATORS             */\n  AL3 _f17;                             /*         EODAD (END OF DATA ROUTINE ADDRESS)       */\n  char _f18;                            /*  RECFM (RECORD FORMAT)                     */\n  AL3 _f19;                             /*         EXLST (EXIT LIST ADDRESS)                 */\n/*                                          FOUNDATION BLOCK                                */\n  CL8 _f20;                             /*    DDNAME                                    */\n  char _f21;                            /*  OFLGS (OPEN FLAGS)                        */\n  char _f22;                            /*  IFLGS (IOS FLAGS)                         */\n  BL2 _f23;                             /* MACR (MACRO FORMAT)                */\n/*                                          BSAM-BPAM-QSAM INTERFACE                        */\n  char _f24;                            /*  OPTCD, OPTION CODES                       */\n  AL3 _f25;                             /*         CHECK OR INTERNAL QSAM SYNCHRONIZING RTN. */\n  void *_f26;                           /*           SYNAD, SYNCHRONOUS ERROR RTN. (3 BYTES)   */\n  short _f27;                           /*           INTERNAL ACCESS METHOD FLAGS              */\n  AL2 _f28;                             /*     BLKSIZE, BLOCK SIZE                       */\n  int _f29;                             /*           INTERNAL ACCESS METHOD FLAGS              */\n  void *_f30;                           /*           INTERNAL ACCESS METHOD USE                */\n/*                                               QSAM INTERFACE                             */\n  void *_f31;                           /*           EOBAD                                     */\n  void *_f32;                           /*           RECAD                                     */\n  short _f33;                           /*           QSWS (FLAGS) AND EITHER DIRCT OR BUFOFF   */\n  AL2 _f34;                             /*       LRECL                                     */\n  char _f35;                            /*  EROPT, ERROR OPTION                       */\n  AL3 _f36;                             /*         CNTRL                                     */\n  short _f37(|2|);                      /*         RESERVED AND PRECL                        */\n  void *_f38;                           /*           EOB, INTERNAL ACCESS METHOD FIELD         */\n#define DSSLOGL 96                      /*      LENGTH OF DSSLOG DCB                       */\n/*                   DSSLOGE DCBE  RMODE31=BUFF                                             */\n/*                      DATA CONTROL BLOCK EXTENSION.                                       */\n  int dssloge(|0|);                     /*  0  ALIGNMENT AND IDENTIFIER               */\n  CL4 _f39;                             /* */\n  short _f40;                           /*          4  LENGTH OF DCBE, MINIMUM IS 56          */\n  XL2 _f41;                             /*        6  RESERVED, SHOULD BE ZERO               */\n  void *_f42;                           /*           8  0 IF NOT OPEN, OPEN POINTS TO DCB      */\n  XL4 _f43;                             /*         C  DISK ADDRESS OF CURRENT MEMBER         */\n  char _f44;                            /*          10  FLAGS SET BY SYSTEM                    */\n  char _f45;                            /*   11  FLAGS SET BY USER                      */\n  short _f46;                           /*          12  NUMBER OF STRIPES OR ZERO              */\n  XL20 _f47;                            /*       14  RESERVED & NUMBER OF BLOCKS IN DS      */\n  void *_f48;                           /*          28  END OF DATA ROUTINE ADDRESS OR 0       */\n  void *_f49;                           /*          2C  I/O ERROR ROUTINE (SYNCHRONOUS) OR 0   */\n  XL6 _f50;                             /*        30  RESERVED, SHOULD BE ZERO               */\n  char _f51(|2|);                       /*      36  MULTACC AND MULTSDN                    */\n/*                   DSSHFS  DCB   DCBE=DSSHFSE,DDNAME=DSSHFS,DSORG=PS,MACRF=(PM,GM),       */\n/*                                 RECFM=U,LRECL=0,BLKSIZE=32760,EODAD=RGET_EODAD           */\n/*                                          DATA CONTROL BLOCK                              */\n/*                                                                                          */\n  int dsshfs(|0|);                      /*          ORIGIN ON WORD BOUNDARY                   */\n/*                                          DIRECT ACCESS DEVICE INTERFACE                  */\n  void *_f52;                           /*     DCBE ADDRESS                              */\n  BL12 _f53;                            /*        FDAD, DVTBL                               */\n  void *_f54;                           /*           KEYLEN, DEVT, TRBAL                       */\n/*                                          COMMON ACCESS METHOD INTERFACE                  */\n  char _f55;                            /*         BUFNO, NUMBER OF BUFFERS                  */\n  AL3 _f56;                             /*         BUFCB, BUFFER POOL CONTROL BLOCK          */\n  AL2 _f57;                             /*         BUFL, BUFFER LENGTH                       */\n  BL2 _f58;                             /* DSORG, DATA SET ORGANIZATION       */\n  void *_f59;                           /*           IOBAD FOR EXCP OR RESERVED                */\n/*                                          FOUNDATION EXTENSION                            */\n  char _f60;                            /*  BFTEK, BFALN, DCBE INDICATORS             */\n  AL3 _f61;                             /*                                          */\n                                        /*                EODAD (END OF DATA ROUTINE ADDRESS)       */\n  char _f62;                            /*  RECFM (RECORD FORMAT)                     */\n  AL3 _f63;                             /*         EXLST (EXIT LIST ADDRESS)                 */\n/*                                          FOUNDATION BLOCK                                */\n  CL8 _f64;                             /*    DDNAME                                    */\n  char _f65;                            /*  OFLGS (OPEN FLAGS)                        */\n  char _f66;                            /*  IFLGS (IOS FLAGS)                         */\n  BL2 _f67;                             /* MACR (MACRO FORMAT)                */\n/*                                          BSAM-BPAM-QSAM INTERFACE                        */\n  char _f68;                            /*  OPTCD, OPTION CODES                       */\n  AL3 _f69;                             /*         CHECK OR INTERNAL QSAM SYNCHRONIZING RTN. */\n  void *_f70;                           /*           SYNAD, SYNCHRONOUS ERROR RTN. (3 BYTES)   */\n  short _f71;                           /*           INTERNAL ACCESS METHOD FLAGS              */\n  AL2 _f72;                             /*     BLKSIZE, BLOCK SIZE                       */\n  int _f73;                             /*           INTERNAL ACCESS METHOD FLAGS              */\n  void *_f74;                           /*           INTERNAL ACCESS METHOD USE                */\n/*                                               QSAM INTERFACE                             */\n  void *_f75;                           /*           EOBAD                                     */\n  void *_f76;                           /*           RECAD                                     */\n  short _f77;                           /*           QSWS (FLAGS) AND EITHER DIRCT OR BUFOFF   */\n  AL2 _f78;                             /*         LRECL                                     */\n  char _f79;                            /*  EROPT, ERROR OPTION                       */\n  AL3 _f80;                             /*         CNTRL                                     */\n  short _f81(|2|);                      /*         RESERVED AND PRECL                        */\n  void *_f82;                           /*           EOB, INTERNAL ACCESS METHOD FIELD         */\n#define DSSHFSL 96                      /*      LENGTH OF DSSHFS DCB                       */\n/*                   DSSHFSE DCBE  RMODE31=BUFF                                             */\n/*                      DATA CONTROL BLOCK EXTENSION.                                       */\n  int dsshfse(|0|);                     /*  0  ALIGNMENT AND IDENTIFIER               */\n  CL4 _f83;                             /* */\n  short _f84;                           /*          4  LENGTH OF DCBE, MINIMUM IS 56          */\n  XL2 _f85;                             /*        6  RESERVED, SHOULD BE ZERO               */\n  void *_f86;                           /*           8  0 IF NOT OPEN, OPEN POINTS TO DCB      */\n  XL4 _f87;                             /*         C  DISK ADDRESS OF CURRENT MEMBER         */\n  char _f88;                            /*          10  FLAGS SET BY SYSTEM                    */\n  char _f89;                            /*   11  FLAGS SET BY USER                      */\n  short _f90;                           /*          12  NUMBER OF STRIPES OR ZERO              */\n  XL20 _f91;                            /*       14  RESERVED & NUMBER OF BLOCKS IN DS      */\n  void *_f92;                           /*          28  END OF DATA ROUTINE ADDRESS OR 0       */\n  void *_f93;                           /*          2C  I/O ERROR ROUTINE (SYNCHRONOUS) OR 0   */\n  XL6 _f94;                             /*        30  RESERVED, SHOULD BE ZERO               */\n  char _f95(|2|);                       /*      36  MULTACC AND MULTSDN                    */\n  CL133 dsslog_buff;                    /*         LOG BUFFER                             */\n  char _f96(|3|);                       /* Padding added for alignment by DSECT2C */\n  void *dssrdw_save;                    /*             SAVE RDW HERE                          */\n  void *dsseof_flag;                    /*             EOF FLAG                               */\n  void *dssu_pointer;                   /*               U BUFFER POINTER                     */\n  short dssu_length;                    /*               U BUFFER LENGTH                      */\n  char dsshfs_buff(|65536|);            /*   HFS BUFFER                             */\n  char dssu_buffer(|32768|);            /*       U BUFFER                             */\n#define DSSDATA_LENGTH 99038            /* */\n  };\n\n\n\n\n#define DSSCADDR                        dsscaddr\n#define DSSCDATA                        dsscdata\n#define DSSCDATAA                       dsscdataa\n#define DSSCDDS                         dsscdds\n#define DSSCDDSS                        dsscddss\n#define DSSCOP                          dsscop\n#define DSSCOPT                         dsscopt\n#define DSSCPAGE                        dsscpage\n#define DSSCPARM                        dsscparm\n#define DSSCPG                          dsscpg\n#define DSSCSAVE                        dsscsave\n#define DSSCUIM                         dsscuim\n#define DSSCUIMA                        dsscuima\n#define DSSEOF_FLAG                     dsseof_flag\n#define DSSHFS                          dsshfs(|0|)\n#define DSSHFS_BUFF                     dsshfs_buff\n#define DSSHFSE                         dsshfse(|0|)\n#define DSSLOG                          dsslog(|0|)\n#define DSSLOG_BUFF                     dsslog_buff\n#define DSSLOGE                         dssloge(|0|)\n#define DSSOPENL                        dssopenl(|0|)\n#define DSSRDW_SAVE                     dssrdw_save\n#define DSSU_BUFFER                     dssu_buffer\n#define DSSU_LENGTH                     dssu_length\n#define DSSU_POINTER                    dssu_pointer\n\n\n\n\n\n\n\n\n/*\nSYMBOL         OFFSET     SIZE     TYPE      C-TYPE               C-NAME\nDSSCADDR       0000EC    000004    A         void *               dsscaddr\nDSSCDATA       0000E6    000002    AL2       AL2                  dsscdata\nDSSCDATAA      0000E8    000004    A         void *               dsscdataa\nDSSCDDS        0000A8    000002    AL2       AL2                  dsscdds\nDSSCDDSS       0000AA    000020    4XL8      XL8 (|4|)            dsscddss\nDSSCOP         00009C    000002    AL2       AL2                  dsscop\nDSSCOPT        00009E    00000A    C         CL10                 dsscopt\nDSSCPAGE       0000DA    000002    AL2       AL2                  dsscpage\nDSSCPARM       000088    000014    A         void * (|5|)         dsscparm\nDSSCPG         0000DC    000004    CL4       CL4                  dsscpg\nDSSCSAVE       000040    000048    18A       void * (|18|)        dsscsave\nDSSCUIM        0000E0    000002    AL2       AL2                  dsscuim\nDSSCUIMA       0000E2    000004    AL4       AL4                  dsscuima\nDSSDATA        000000    000000\nDSSEOF_FLAG    0002D4    000004    A         void *               dsseof_flag\nDSSHFS         0001B0    000000    0F        int (|0|)            dsshfs\nDSSHFS_BUFF    0002DE    010000    (32768... char (|65536|)       dsshfs_buff\nDSSHFSE        000210    000000    0F        int (|0|)            dsshfse\nDSSLOG         000118    000000    0F        int (|0|)            dsslog\nDSSLOG_BUFF    000248    000085    CL133     CL133                dsslog_buff\nDSSLOGE        000178    000000    0F        int (|0|)            dssloge\nDSSOPENL       000110    000000    0F        int (|0|)            dssopenl\nDSSRDW_SAVE    0002D0    000004    A         void *               dssrdw_save\nDSSU_BUFFER    0102DE    008000    (32768)X  char (|32768|)       dssu_buffer\nDSSU_LENGTH    0002DC    000002    H         short                dssu_length\nDSSU_POINTER   0002D8    000004    A         void *               dssu_pointer\n\n\n*/\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DSSDB": {"ttr": 2443, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_DSSDB\n#define INCLUDE_DSSDB\n\n#include \"merror.hpp\"\n#include \"mvsbase.hpp\"\n//#include \"archsql.hpp\" szm\n#include \"mchain.hpp\"\n#include \"jobenv.hpp\"\n#define assign(t,f) \u00d6\n\u00e4  t.len = \u00d6\n  short(min(sizeof(t.arr),strlen((char *)f))); \u00d6\n  strncpy(t.arr,(char *)f,t.len); \u00d6\n\u00fc\n\n#ifndef VARCHAR\n #define VARCHAR( n , l) \u00d6\n struct \u00e4  \u00d6\n  short len; \u00d6\n  char arr \u00c4 l \u00dc ; \u00d6\n  \u00fc n\n#endif\n\n#define LONGINT( var )  long  int var\n#define SHORTINT( var ) short int var\n\ntypedef struct _TIMESTAMP\n\u00e4\n  short len;\n  char  arr\u00c428\u00dc;\n\u00fc TIMESTAMP;\n\nstruct _DssDatasetRecord\n\u00e4\n   VARCHAR(key,28);\n   VARCHAR(job,28);\n   VARCHAR(dataset,45);\n   VARCHAR(volumes,37);\n   long int type;\n   long int recordsize;\n\u00fc DssDatasetRecord;\n\nclass TcbARCHSQL:public chainE\n\u00e4\nprivate:\n   ARCHSQL * archsql;\npublic:\n   TcbARCHSQL(char * t,ARCHSQL * a):chainE(t),archsql(a)\n   \u00e4\u00fc\n   ARCHSQL * get()\u00e4return archsql;\u00fc\n\u00fc;\n\nstatic char * initDynamicSql();\n\nclass SQLINTERFACE:\n public  mERROR\n\u00e4\nprotected:\n static char * plan;\n static char * subsystem;\n static mCHAIN  tasks;\n static ERROR_MESSAGE * error_message;\nprotected:\n static char * dSql;\npublic:\n\tstatic bool useDB2;\n\tstatic FILE * fileDB2;\npublic:\n SQLINTERFACE();\n   \u00dfSQLINTERFACE();\n   void diag(char *);\n   int  commit();\n   enum Error_Action\u00e4 Abort, Continue\u00fc;\n   void Error(char *,Error_Action);\n   ARCHSQL * connectDB();\n   void tryToConnect();\n\u00fc;\n\nclass DssJob:\n public SQLINTERFACE,\n public mCHAIN,\n public CHAINITER,\n public chainE\n\u00e4\nprivate:\n   VARCHAR(t,28);\n   VARCHAR(record_key,28);\n   VARCHAR(record_job,28);\n   VARCHAR(record_dataset,45);\n   VARCHAR(record_volumes,37);\n   LONGINT(record_type);\n   LONGINT(record_size);\npublic:\n   VARCHAR(timestamp,28);\n   VARCHAR(jobName,9);\n   VARCHAR(jobNumber,9);\n   VARCHAR(program,9);\n   VARCHAR(dataset,255);\n   LONGINT(datasetcount);\n   VARCHAR(joblog,30000);\n   VARCHAR(dynamicSql,32000);\npublic:\n  static mCHAIN dssJobs;\n  static int    allOnline();\n  int    doWeNeed(const char *);\npublic:\n DssJob();\n DssJob(TIMESTAMP&);\n DssJob(const char *);\n virtual \u00dfDssJob();\n int insert();\n int query(mCHAIN*,char * =0);\n char * getDatasetName()\n\u00e4\n  return ((char *)dataset.arr);\n\u00fc\nprivate:\n void init();\n\u00fc;\n\nclass DssDataset:\n public SQLINTERFACE,\n public chainE\n\u00e4\nprivate:\n DssJob * job;\npublic:\n   VARCHAR(timestamp,28);\n   VARCHAR(dataset,45);\n   VARCHAR(volumes,37);\n   LONGINT( type);\n   LONGINT(recordsize);\npublic:\n DssDataset(DssJob *,char *,char *,int = 0,int =0);\n int compare(const char *n)\n   \u00e4\n   for(int i =0;i<45&&dataset.arr\u00c4i\u00dc&&dataset.arr\u00c4i\u00dc-' '&&n\u00c4i\u00dc&&n\u00c4i\u00dc-' ';i++)\n     if (dataset.arr\u00c4i\u00dc - n\u00c4i\u00dc) return 0;\n   return 1;\n   \u00fc\n   virtual \u00dfDssDataset();\n   int insert();\n\u00fc;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSSFILE": {"ttr": 2365, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_DSSFILE\n#define INCLUDE_DSSFILE\n#include <stdio.h>\n#include <stdlib.h>\n#include \"mvsbase.hpp\"\n#include \"casmif.hpp\"\n#include \"zlib.h\"\n\nenum\nDSSFILE_TYPE \u00e4  DSSFILE_input,\n                DSSFILE_output\u00fc;\n\nconst size_t DSSFILE_MAX_BUFFER = 1024*1024;\n\nclass  DSSFILE: public mERROR\n\u00e4\nprivate:\n        mvsSTRING fileName;\n        mvsSTRING datasetName;\n        int  file;\n        FILE * fileF;\n        z_streamp zStream;\n        UCHAR *   buff;\n        size_t    buff_size;\n        size_t    count;\n        size_t    compressedCount;\n        size_t    ioLength;\n        int       seqNo;\n        DSSFILE_TYPE type;\npublic:\n        DSSFILE(const char *,DSSFILE_TYPE,\n                size_t = DSSFILE_MAX_BUFFER);\n        \u00dfDSSFILE();\n        int put(void *,size_t);\n        int get(void *);\n        int flush();\n        size_t getCount()\u00e4return count;\u00fc\n        size_t getCompressedCount()\u00e4return compressedCount;\u00fc\n        mvsSTRING getFileName()\u00e4return fileName;\u00fc\n        mvsSTRING getDatasetName()\u00e4return datasetName;\u00fc;\nprivate:\n        int zRc;\n        int ok;\n        int _put(void *,size_t,int = Z_NO_FLUSH);\n        int _get(void *,size_t,int = Z_NO_FLUSH);\n        int init();\n        int term();\n\t\t  enum\n\t\t  Error_Action\u00e4Continue,\n\t\t\t\t Abort\u00fc;\n        void Error(char *,Error_Action);\n\u00fc;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSSMAIN": {"ttr": 2371, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_DSSMAIN\n#define INCLUDE_DSSMAIN\n\n#ifndef array_0\n#define array_0 1 //it need langlvl(zeroextarry) but is is only in z/OS 1.4\n#endif\n\nconst short  eiop00  = 0;\nconst short  eiop01  = 1;\nconst short  eiop02  = 2;\nconst short  eiop03  = 3;\nconst short  eiop04  = 4;\nconst short  eiop05  = 5;\nconst short  eiop06  = 6;\nconst short  eiop07  = 7;\nconst short  eiop08  = 8;\nconst short  eiop09  = 9;\nconst short  eiop10  =10;\nconst short  eiop11  =11;\nconst short  eiop12  =12;\nconst short  eiop13  =13;\nconst short  eiop14  =14;\nconst short  eiop15  =15;\nconst short  eiop16  =16;\nconst short  eiop17  =17;\nconst short  eiop18  =18;\nconst short  eiop19  =19;\nconst short  eiop20  =20;\nconst short  eiop21  =21;\nconst short  eiop22  =22;\nconst short  eiop23  =23;\nconst short  eiop24  =24;\nconst short  eiop25  =25;\nconst short  eiop26  =26;\n\nconst int eirc_ok    = 0;\nconst int eirc_replace    = 4;\nconst int eirc_insert    = 8;\nconst int eirc_delete    = 12;\nconst int eirc_modified  = 16;\nconst int eirc_disconnect  = 20;\nconst int eirc_disconnect_after = 24;\nconst int eirc_wtor        = 28;\nconst int eirc_end_function= 32;\nconst int eirc_end_dataset = 36;\n\n\nextern const char * ADRDSSU;\nextern const char * KEYWORD_INCLUDE_MARK;\nextern const char * KEYWORD_DUMP;\nextern const char * KEYWORD_RESTORE;\nextern const char * KEYWORD_DB_PLAN;\nextern const char * KEYWORD_DB_SUBSYS;\nextern const char * KEYWORD_PREFIX;\nextern const char * KEYWORD_SYSIN;\nextern const char * KEYWORD_ADR012I;\nextern const char * KEYWORD_DEBUG;\nextern const char * KEYWORD_COMPR;\nextern const char * KEYWORD_REFDT;\nextern const char * KEYWORD_SQLFILE;\nextern const char * KEYWORD_DIRECT;\nextern const char * KEYWORD_MAXLENGTH;\nextern const char * KEYWORD_USEDB2;\nextern const char * KEYWORD_USEDB2_FILE;\n\n#include \"mvsbase.hpp\"\n#define  _XOPEN_SOURCE_EXTENDED 1\n\n//extern __asm int UIMASM(...);\n//extern \"OS_UPSTACK\" int UIMASM(...);\nextern \"OS\" int UIMASM(...);\n\n#ifndef memcmpi\n#define memcmpi strncasecmp\n#endif\n\n#ifndef strcmpi\n#define strcmpi strcasecmp\n#endif\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EBCDICUT": {"ttr": 2429, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/isislib/ebcdicut.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   utility functions to convert from and to ebcdic charset\n*******************************************************************************/\n\n#ifndef __EBCDICUT_HPP__\n#define __EBCDICUT_HPP__\n\nextern const unsigned char isis_etoa\u00c4256\u00dc;\nextern const unsigned char isis_atoe\u00c4256\u00dc;\nextern const unsigned char isis_etoa_ISO8859_1\u00c4256\u00dc;\nextern const unsigned char isis_atoe_ISO8859_1\u00c4256\u00dc;\n\n\n/**\n * functions for ebcdic/ascii conversion\n * codesetConversion: helper function which does the conversion\n * local2ascii, ascii2local: generally called functions\n *   on ebcdic platforms they convert characters between ebcdic and ascii\n *   on ascii platforms they don't change the characters\n * local2latin1, latin12local: generally called functions\n *   on ebcdic platforms they convert characters between ebcdic (IBM-273) and ascii (ISO8859-1)\n *   on ascii platforms they don't change the characters\n * local2ebcdic, ebcdic2local: generally called functions\n *   on ascii platforms they convert characters between ebcdic and ascii\n *   on ebcdic platforms they don't change the characters\n * latin12ebcdic, ebcdic2latin1: generally called functions\n *   on ascii platforms they convert characters between ebcdic (IBM-273) and ascii (ISO8859-1)\n *   on ebcdic platforms they don't change the characters\n * ascii2ebcdic, ebcdic2ascii: converts on ascii as well as on ebcdic platforms\n */\n\n\ninline char* codesetConversion(char* dest, const char* src,const unsigned char * convtab)\n\u00e4\n    char *d = dest;\n    for(;*src;++src,++d)\n    \u00e4\n        *d=convtab\u00c4(unsigned char)*src\u00dc;\n    \u00fc\n    *d=0;\n    return dest;\n\u00fc\n\ninline char* codesetConversion(char* dest, const char* src,const unsigned char * convtab,int len)\n\u00e4\n\n    for(int i=0;i<len;++i)\n    \u00e4\n        dest\u00c4i\u00dc=convtab\u00c4(unsigned char) src\u00c4i\u00dc\u00dc;\n    \u00fc\n    return dest;\n\u00fc\n\ninline char* local2ascii(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_etoa);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* local2ascii(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_etoa,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* local2ascii(char* str)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_etoa);\n#else\n    return str;\n#endif\n\u00fc\n\n#if ' ' == 0x40\ninline char* local2ascii(char* str,int len)\n#else\ninline char* local2ascii(char* str,int)\n#endif\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_etoa,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline unsigned char local2ascii(unsigned char c)\n\u00e4\n#if ' ' == 0x40\n    return isis_etoa\u00c4c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\ninline char local2ascii(char c)\n\u00e4\n    return local2ascii((unsigned char)c);\n\u00fc\n\n\n// 16-bit wide character conversion\n// converts  the last byte of c from local(native) to ascii codepage\n// (returns c unchanged on ascii platforms)\ninline u_int16 local2ascii(u_int16 c)\n\u00e4\n#if ' ' == 0x40\n    u_int16 ret=c;\n    char* char_ret=(char*)&ret;\n    // convert last byte of return to local(native) codepage\n    char_ret\u00c4sizeof(ret)-1\u00dc=local2ascii(char_ret\u00c4sizeof(ret)-1\u00dc);\n    return ret;\n#else\n    return c;\n#endif\n\u00fc\n\n\n\ninline char* ascii2local(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_atoe);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* ascii2local(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_atoe,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* ascii2local(char* str)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_atoe);\n#else\n    return str;\n#endif\n\u00fc\n\n\n\n#if ' ' == 0x40\ninline char* ascii2local(char* str,int len)\n#else\ninline char* ascii2local(char* str,int)\n#endif\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_atoe,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline unsigned char ascii2local(unsigned char c)\n\u00e4\n#if ' ' == 0x40\n    return isis_atoe\u00c4c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\ninline char ascii2local(char c)\n\u00e4\n    return ascii2local((unsigned char)c);\n\u00fc\n\n// 16-bit wide character conversion\n// converts  the last byte of c from ascii to local(native) codepage\n// (returns c unchanged on ascii platforms)\ninline u_int16 ascii2local(u_int16 c)\n\u00e4\n#if ' ' == 0x40\n    u_int16 ret=c;\n    char* char_ret=(char*)&ret;\n    // convert last byte of return to local(native) codepage\n    char_ret\u00c4sizeof(ret)-1\u00dc=ascii2local(char_ret\u00c4sizeof(ret)-1\u00dc);\n    return ret;\n#else\n    return c;\n#endif\n\u00fc\n\ninline char* local2ebcdic(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_atoe);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* local2ebcdic(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_atoe,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* local2ebcdic(char* str)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_atoe);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char* local2ebcdic(char* str,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_atoe,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char local2ebcdic(char c)\n\u00e4\n#if ' ' == 0x20\n    return isis_atoe\u00c4(unsigned char)c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\n\n\ninline char* ebcdic2local(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_etoa);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* ebcdic2local(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_etoa,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* ebcdic2local(char* str)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_etoa);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char* ebcdic2local(char* str,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_etoa,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char ebcdic2local(char c)\n\u00e4\n#if ' ' == 0x20\n    return isis_etoa\u00c4(unsigned char) c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\n\n\n\ninline char* ebcdic2ascii(char* str)\n\u00e4\n    return codesetConversion(str,str,isis_etoa);\n\u00fc\n\ninline char* ascii2ebcdic(char* str)\n\u00e4\n    return codesetConversion(str,str,isis_atoe);\n\u00fc\n\ninline char ebcdic2ascii(char c)\n\u00e4\n    return (char) isis_etoa\u00c4(unsigned char) c\u00dc;\n\u00fc\n\ninline unsigned char ebcdic2ascii(unsigned char c)\n\u00e4\n    return isis_etoa\u00c4c\u00dc;\n\u00fc\n\ninline char ascii2ebcdic(char c)\n\u00e4\n    return (char)isis_atoe\u00c4(unsigned char) c\u00dc;\n\u00fc\n\ninline unsigned char ascii2ebcdic(unsigned char c)\n\u00e4\n    return isis_atoe\u00c4c\u00dc;\n\u00fc\n\n/* new functions */\n\ninline char* local2latin1(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_etoa_ISO8859_1);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* local2latin1(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_etoa_ISO8859_1,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* local2latin1(char* str)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_etoa_ISO8859_1);\n#else\n    return str;\n#endif\n\u00fc\n\n#if ' ' == 0x40\ninline char* local2latin1(char* str,int len)\n#else\ninline char* local2latin1(char* str,int)\n#endif\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_etoa_ISO8859_1,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline unsigned char local2latin1(unsigned char c)\n\u00e4\n#if ' ' == 0x40\n    return isis_etoa_ISO8859_1\u00c4c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\ninline char local2latin1(char c)\n\u00e4\n    return local2latin1((unsigned char)c);\n\u00fc\n\n\n// 16-bit wide character conversion\n// converts  the last byte of c from local(native) to ascii codepage\n// (returns c unchanged on ascii platforms)\ninline u_int16 local2latin1(u_int16 c)\n\u00e4\n#if ' ' == 0x40\n    u_int16 ret=c;\n    char* char_ret=(char*)&ret;\n    // convert last byte of return to local(native) codepage\n    char_ret\u00c4sizeof(ret)-1\u00dc=local2latin1(char_ret\u00c4sizeof(ret)-1\u00dc);\n    return ret;\n#else\n    return c;\n#endif\n\u00fc\n\n\n\ninline char* latin12local(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_atoe_ISO8859_1);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* latin12local(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_atoe_ISO8859_1,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* latin12local(char* str)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_atoe_ISO8859_1);\n#else\n    return str;\n#endif\n\u00fc\n\n\n\n#if ' ' == 0x40\ninline char* latin12local(char* str,int len)\n#else\ninline char* latin12local(char* str,int)\n#endif\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_atoe_ISO8859_1,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline unsigned char latin12local(unsigned char c)\n\u00e4\n#if ' ' == 0x40\n    return isis_atoe_ISO8859_1\u00c4c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\ninline char latin12local(char c)\n\u00e4\n    return latin12local((unsigned char)c);\n\u00fc\n\n// 16-bit wide character conversion\n// converts  the last byte of c from ascii to local(native) codepage\n// (returns c unchanged on ascii platforms)\ninline u_int16 latin12local(u_int16 c)\n\u00e4\n#if ' ' == 0x40\n    u_int16 ret=c;\n    char* char_ret=(char*)&ret;\n    // convert last byte of return to local(native) codepage\n    char_ret\u00c4sizeof(ret)-1\u00dc=latin12local(char_ret\u00c4sizeof(ret)-1\u00dc);\n    return ret;\n#else\n    return c;\n#endif\n\u00fc\n\ninline char* latin12ebcdic(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_atoe_ISO8859_1);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* latin12ebcdic(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_atoe_ISO8859_1,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* latin12ebcdic(char* str)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_atoe_ISO8859_1);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char* latin12ebcdic(char* str,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_atoe_ISO8859_1,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char latin12ebcdic(char c)\n\u00e4\n#if ' ' == 0x20\n    return isis_atoe_ISO8859_1\u00c4(unsigned char)c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\n\n\ninline char* ebcdic2latin1(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_etoa_ISO8859_1);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* ebcdic2latin1(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_etoa_ISO8859_1,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* ebcdic2latin1(char* str)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_etoa_ISO8859_1);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char* ebcdic2latin1(char* str,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_etoa_ISO8859_1,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char ebcdic2latin1(char c)\n\u00e4\n#if ' ' == 0x20\n    return isis_etoa_ISO8859_1\u00c4(unsigned char) c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\n\n/* new functions end */\n\n// for backwards compatibility\ninline unsigned char etoa(unsigned char c)\n\u00e4\n    return isis_etoa\u00c4 c\u00dc;\n\u00fc\n\ninline unsigned char atoe(unsigned char c)\n\u00e4\n    return isis_atoe\u00c4 c\u00dc;\n\u00fc\n\n// Ascii representation of a string\n// useful if you need the ascii representation of a text independently from the platform's codeset\n// there is an overhead also on ascii platforms -> avoid frequent constructor calls, use macro ASCIITEMP instead if possible\n// usage samples:\n// strcmp(fontName,AsciiString(\"Arial\"));\n// const AsciiString fontlist\u00c4\u00dc=\u00e4\"X1\",X2,\"X3\"\u00fc;\nclass AsciiString\n\u00e4\nprotected:\n    char * str;\npublic:\n    AsciiString(const char* s)\n    \u00e4\n        if(s)\n        \u00e4\n            str=new char\u00c4strlen(s)+1\u00dc;\n            local2ascii(str,s);\n        \u00fc\n        else\n        \u00e4\n            str=NULL;\n        \u00fc\n    \u00fc\n\n    \u00dfAsciiString()\n    \u00e4\n        delete\u00c4\u00dc str;\n    \u00fc\n\n    operator const char* () const\n    \u00e4\n        return str;\n    \u00fc\n\u00fc;\n\n// representation of a string in local(native) codepage\n// useful if you need the native-codepage-representation of an ascii-text\n// analoguous to AsciiString\nclass LocalString\n\u00e4\nprotected:\n    char * str;\npublic:\n    LocalString(const char* s)\n    \u00e4\n        if(s)\n        \u00e4\n            str=new char\u00c4strlen(s)+1\u00dc;\n            ascii2local(str,s);\n        \u00fc\n        else\n        \u00e4\n            str=NULL;\n        \u00fc\n    \u00fc\n\n    \u00dfLocalString()\n    \u00e4\n        delete\u00c4\u00dc str;\n    \u00fc\n\n    operator const char* () const\n    \u00e4\n        return str;\n    \u00fc\n\u00fc;\n\n// macro ASCIITEMP to get a temporary object with ascii representation of x\n// macro LOCALTEMP to get a temporary object with representation of x in local (native) codepage\n// on ascii platforms these macros do nothing (expand to expression x)\n#if ' ' == 0x20\n#define ASCIITEMP(x) (x)\n#define LOCALTEMP(x) (x)\n#else\n#define ASCIITEMP(x) (const char*)AsciiString(x)\n#define LOCALTEMP(x) (const char*)LocalString(x)\n#endif\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EIRC20": {"ttr": 2489, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct eirec20 \u00e4\n  unsigned char  ei20dsn\u00c444\u00dc; /* DATA SET NAME/CLUSTER NAME     */\n  unsigned char  ei20flgs;    /* SOME FLAGS:               @V24 */\n  unsigned char  _filler1;    /* RESERVED                  @V24 */\n  unsigned char  ei20da_;     /* NUMBER OF DATA COMPONENTS @V24 */\n  unsigned char  ei20ix_;     /* NUMBER OF INDEX COMPONENTS     */\n  void          *ei20da_;     /* POINTER TO DATA COMPONENT      */\n  void          *ei20ix_;     /* POINTER TO INDEX COMPONENT     */\n  unsigned char  ei20scnt\u00c42\u00dc; /* TOTAL STRIPE COUNT FOR         */\n  unsigned char  ei20dsha\u00c44\u00dc; /* VSAM DATA COMPONENT            */\n  unsigned char  ei20isha\u00c44\u00dc; /* VSAM INDEX COMPONENT           */\n  \u00fc;\n\n/* Values for field \"ei20flgs\" */\n#define ei20vsam 0x80 /* 1=DATA SET IS VSAM             */\n#define ei20racf 0x40 /* 1=DATA SET IS PROTECTED BY A   */\n#define ei20lvol 0x20 /* 1=LAST VOLUME INDICATOR        */\n#define e20f9att 0x10 /* F9 ATTRS LOST FLAG        @P0A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "EIRC21": {"ttr": 2491, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct eirec21 \u00e4\n  unsigned char  ei21dsn\u00c444\u00dc; /* DATA SET/CLUSTER NAME     @V25 */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "EIRC23": {"ttr": 2493, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct eirec23 \u00e4\n  unsigned char  ei23dsn\u00c444\u00dc;      /* DATA SET/CLUSTER NAME     @V25 */\n  unsigned char  ei23newn\u00c444\u00dc;     /* NEW DATA SET/CLUSTER NAME @V25 */\n  unsigned char  ei23dsrc\u00c42\u00dc;      /* RETURN CODE FOR DATA SET       */\n  struct \u00e4\n    unsigned char  _e23ssmsf;    /* SOURCE SMS FLAGS               */\n    unsigned char  _e23sdsrg\u00c42\u00dc; /* SOURCE DATA SET ORG            */\n    unsigned char  _e23svflg\u00c42\u00dc; /* VSAM DATA SET FLAGS:      @V25 */\n    \u00fc ei23sflg;\n  struct \u00e4\n    unsigned char  _e23tsmsf;    /* TARGET SMS FLAGS               */\n    unsigned char  _e23tdsrg\u00c42\u00dc; /* TARGET DATA SET ORG            */\n    unsigned char  _e23tvflg\u00c42\u00dc; /* VSAM DATA SET FLAGS:      @V25 */\n    \u00fc ei23tflg;\n  struct \u00e4\n    unsigned char  _ei23gmt\u00c48\u00dc; /* RLS GMT TIME STAMP        @RLS */\n    unsigned char  _ei23loc\u00c48\u00dc; /* RLS LOCAL TIME STAMP      @RLS */\n    \u00fc ei23rlst;\n  unsigned char  e23bytes\u00c48\u00dc;      /* TOTAL TRACK BYTES RESTORED,    */\n  unsigned char  e23flgs;          /* MISC FLAGS            @OW11555 */\n  unsigned char  ei23devt\u00c46\u00dc;      /* REQUIRED DEVICE TYPE  @K131935 */\n  unsigned char  _filler1\u00c49\u00dc;      /* AVAILABLE             @K131935 */\n  unsigned char  ei23vol_;         /* NUMBER OF VOLUMES         @V25 */\n  unsigned char  ei23vser\u00c4118\u00dc\u00c46\u00dc; /* VOLSER ARRAY              @V25 */\n  \u00fc;\n\n#define e23ssmsf ei23sflg._e23ssmsf\n#define e23sdsrg ei23sflg._e23sdsrg\n#define e23svflg ei23sflg._e23svflg\n#define e23tsmsf ei23tflg._e23tsmsf\n#define e23tdsrg ei23tflg._e23tdsrg\n#define e23tvflg ei23tflg._e23tvflg\n#define ei23gmt  ei23rlst._ei23gmt\n#define ei23loc  ei23rlst._ei23loc\n\n/* Values for field \"e23svflg\" */\n#define e23sesds 0x80 /* 1=ESDS DATA SET           @V25 */\n#define e23sksds 0x40 /* 1=KSDS DATA SET           @V25 */\n#define e23skrds 0x20 /* 1=KRDS DATA SET           @V25 */\n#define e23slds  0x10 /* 1=LINEAR DATA SET         @V25 */\n#define e23srrds 0x08 /* 1=RRDS DATA SET           @V25 */\n#define e23spssi 0x04 /* 1=PAGE/SWAP/STGINDEX, ETC.     */\n#define e23svvds 0x02 /* 1=VVDS DATA SET           @V25 */\n#define e23sbcs  0x01 /* 1=BCS DATA SET            @V25 */\n#define e23bcsel 0x40 /* 1=VRRDS DATA SET      @LA82401 */\n#define e23svrrd 0x20 /* 1=VRRDS DATA SET      @LA82401 */\n#define ei23rrb  0x10 /* RECOVERY REQUIRED         @RLS */\n\n/* Values for field \"e23tvflg\" */\n#define e23tesds 0x80 /* 1=ESDS DATA SET           @V25 */\n#define e23tksds 0x40 /* 1=KSDS DATA SET           @V25 */\n#define e23tkrds 0x20 /* 1=KRDS DATA SET           @V25 */\n#define e23tlds  0x10 /* 1=LINEAR DATA SET         @V25 */\n#define e23trrds 0x08 /* 1=RRDS DATA SET           @V25 */\n#define e23tpssi 0x04 /* 1=PAGE/SWAP/STGINDEX, ETC.     */\n#define e23tvvds 0x02 /* 1=VVDS DATA SET           @V25 */\n#define e23tbcs  0x01 /* 1=BCS DATA SET            @V25 */\n#define e23taix  0x80 /* 1=AIX DATA SET        @LA82401 */\n#define e23tvrrd 0x40 /* 1=VRRDS DATA SET      @LA82401 */\n\n/* Values for field \"e23flgs\" */\n#define e23bset  0x80 /* 1=E23BYTES SET        @OW11555 */\n#define e23bpds  0x40 /* PDS IS BROKEN         @K131935 */\n#define e23bpse  0x20 /* E23BYTES IS FOR PSE   @OW25343 */\n#define e23f9att 0x10 /* F9 ATTRIBUTES NOT RESTD   @P0A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "EIREC20": {"ttr": 2563, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct eirec20 \u00e4\n  unsigned char  ei20dsn\u00c444\u00dc; /* DATA SET NAME/CLUSTER NAME     */\n  unsigned char  ei20flgs;    /* SOME FLAGS:               @V24 */\n  unsigned char  _filler1;    /* RESERVED                  @V24 */\n  unsigned char  ei20da_;     /* NUMBER OF DATA COMPONENTS @V24 */\n  unsigned char  ei20ix_;     /* NUMBER OF INDEX COMPONENTS     */\n  void          *ei20da_;     /* POINTER TO DATA COMPONENT      */\n  void          *ei20ix_;     /* POINTER TO INDEX COMPONENT     */\n  unsigned char  ei20scnt\u00c42\u00dc; /* TOTAL STRIPE COUNT FOR         */\n  unsigned char  ei20dsha\u00c44\u00dc; /* VSAM DATA COMPONENT            */\n  unsigned char  ei20isha\u00c44\u00dc; /* VSAM INDEX COMPONENT           */\n  \u00fc;\n\n/* Values for field \"ei20flgs\" */\n#define ei20vsam 0x80 /* 1=DATA SET IS VSAM             */\n#define ei20racf 0x40 /* 1=DATA SET IS PROTECTED BY A   */\n#define ei20lvol 0x20 /* 1=LAST VOLUME INDICATOR        */\n#define e20f9att 0x10 /* F9 ATTRS LOST FLAG        @P0A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "EIREC21": {"ttr": 2565, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct eirec21 \u00e4\n  unsigned char  ei21dsn\u00c444\u00dc; /* DATA SET/CLUSTER NAME     @V25 */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "EIREC23": {"ttr": 2567, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct eirec23 \u00e4\n  unsigned char  ei23dsn\u00c444\u00dc;      /* DATA SET/CLUSTER NAME     @V25 */\n  unsigned char  ei23newn\u00c444\u00dc;     /* NEW DATA SET/CLUSTER NAME @V25 */\n  unsigned char  ei23dsrc\u00c42\u00dc;      /* RETURN CODE FOR DATA SET       */\n  struct \u00e4\n    unsigned char  _e23ssmsf;    /* SOURCE SMS FLAGS               */\n    unsigned char  _e23sdsrg\u00c42\u00dc; /* SOURCE DATA SET ORG            */\n    unsigned char  _e23svflg\u00c42\u00dc; /* VSAM DATA SET FLAGS:      @V25 */\n    \u00fc ei23sflg;\n  struct \u00e4\n    unsigned char  _e23tsmsf;    /* TARGET SMS FLAGS               */\n    unsigned char  _e23tdsrg\u00c42\u00dc; /* TARGET DATA SET ORG            */\n    unsigned char  _e23tvflg\u00c42\u00dc; /* VSAM DATA SET FLAGS:      @V25 */\n    \u00fc ei23tflg;\n  struct \u00e4\n    unsigned char  _ei23gmt\u00c48\u00dc; /* RLS GMT TIME STAMP        @RLS */\n    unsigned char  _ei23loc\u00c48\u00dc; /* RLS LOCAL TIME STAMP      @RLS */\n    \u00fc ei23rlst;\n  unsigned char  e23bytes\u00c48\u00dc;      /* TOTAL TRACK BYTES RESTORED,    */\n  unsigned char  e23flgs;          /* MISC FLAGS            @OW11555 */\n  unsigned char  ei23devt\u00c46\u00dc;      /* REQUIRED DEVICE TYPE  @K131935 */\n  unsigned char  _filler1\u00c49\u00dc;      /* AVAILABLE             @K131935 */\n  unsigned char  ei23vol_;         /* NUMBER OF VOLUMES         @V25 */\n  unsigned char  ei23vser\u00c4118\u00dc\u00c46\u00dc; /* VOLSER ARRAY              @V25 */\n  \u00fc;\n\n#define e23ssmsf ei23sflg._e23ssmsf\n#define e23sdsrg ei23sflg._e23sdsrg\n#define e23svflg ei23sflg._e23svflg\n#define e23tsmsf ei23tflg._e23tsmsf\n#define e23tdsrg ei23tflg._e23tdsrg\n#define e23tvflg ei23tflg._e23tvflg\n#define ei23gmt  ei23rlst._ei23gmt\n#define ei23loc  ei23rlst._ei23loc\n\n/* Values for field \"e23svflg\" */\n#define e23sesds 0x80 /* 1=ESDS DATA SET           @V25 */\n#define e23sksds 0x40 /* 1=KSDS DATA SET           @V25 */\n#define e23skrds 0x20 /* 1=KRDS DATA SET           @V25 */\n#define e23slds  0x10 /* 1=LINEAR DATA SET         @V25 */\n#define e23srrds 0x08 /* 1=RRDS DATA SET           @V25 */\n#define e23spssi 0x04 /* 1=PAGE/SWAP/STGINDEX, ETC.     */\n#define e23svvds 0x02 /* 1=VVDS DATA SET           @V25 */\n#define e23sbcs  0x01 /* 1=BCS DATA SET            @V25 */\n#define e23bcsel 0x40 /* 1=VRRDS DATA SET      @LA82401 */\n#define e23svrrd 0x20 /* 1=VRRDS DATA SET      @LA82401 */\n#define ei23rrb  0x10 /* RECOVERY REQUIRED         @RLS */\n\n/* Values for field \"e23tvflg\" */\n#define e23tesds 0x80 /* 1=ESDS DATA SET           @V25 */\n#define e23tksds 0x40 /* 1=KSDS DATA SET           @V25 */\n#define e23tkrds 0x20 /* 1=KRDS DATA SET           @V25 */\n#define e23tlds  0x10 /* 1=LINEAR DATA SET         @V25 */\n#define e23trrds 0x08 /* 1=RRDS DATA SET           @V25 */\n#define e23tpssi 0x04 /* 1=PAGE/SWAP/STGINDEX, ETC.     */\n#define e23tvvds 0x02 /* 1=VVDS DATA SET           @V25 */\n#define e23tbcs  0x01 /* 1=BCS DATA SET            @V25 */\n#define e23taix  0x80 /* 1=AIX DATA SET        @LA82401 */\n#define e23tvrrd 0x40 /* 1=VRRDS DATA SET      @LA82401 */\n\n/* Values for field \"e23flgs\" */\n#define e23bset  0x80 /* 1=E23BYTES SET        @OW11555 */\n#define e23bpds  0x40 /* PDS IS BROKEN         @K131935 */\n#define e23bpse  0x20 /* E23BYTES IS FOR PSE   @OW25343 */\n#define e23f9att 0x10 /* F9 ATTRIBUTES NOT RESTD   @P0A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IBMDEBUG": {"ttr": 2431, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_IBMDEBUG\n#define INCLUDE_IBMDEBUG\n\n#include <ctest.h>\n\n#if ( defined(ISIS_PF_MI) == 1 ]] defined(ISIS_PF_MU) == 1 ) && defined(ISIS_DEBUG) == 1\nstatic int _isis_pf_mi_debug=getenv(\"ISIS_IBMDEBUG\")?1:0;\n#ifndef ISIS_PF_MS\n  #define HOST_IBM_TRACE_x(x) \u00e4if(_isis_pf_mi_debug) fprintf(stderr,\"%s\u00d6n%s:%x\u00d6n\",__FUNCTION__,#x,x);\u00fc\n  #define HOST_IBM_TRACE_s(s1) \u00e4if(_isis_pf_mi_debug) fprintf(stderr,\"%s\u00d6n%s:%s\u00d6n\",__FUNCTION__,#s1,s1);\u00fc\n  #define HOST_IBM_TRACE_ss(s1,s2) \u00e4if(_isis_pf_mi_debug) fprintf(stderr,\"%s\u00d6n%s:%s\u00d6n%s:%s\u00d6n\",__FUNCTION__,#s1,s1,#s2,s2);\u00fc\n\t#define HOST_IBM_TRACE_sd(s1,s2) \u00e4if(_isis_pf_mi_debug) fprintf(stderr,\"%s\u00d6n%s:%s\u00d6n%s:%d\u00d6n\",__FUNCTION__,#s1,s1,#s2,s2);\u00fc\n  #define HOST_IBM_TRACE_sss(s1,s2,s3) \u00e4if(_isis_pf_mi_debug) fprintf(stderr,\"%s\u00d6n%s:%s\u00d6n%s:%s\u00d6n%s:%s\u00d6n\",__FUNCTION__,#s1,s1,#s2,s2,#s3,s3);\u00fc\n  #define HOST_IBM_TRACE_d(p) \u00e4if(_isis_pf_mi_debug) fprintf(stderr,\"%s\u00d6n%s:%d\u00d6n\",__FUNCTION__,#p,p);\u00fc\n  #define HOST_IBM_TRACE_dd(p,p1) \u00e4if(_isis_pf_mi_debug) fprintf(stderr,\"%s\u00d6n%s:%d %s:%d\u00d6n\",__FUNCTION__,#p,p,#p1,p1);\u00fc\n  #define HOST_IBM_TRACE_ddd(p,p1,p2) \u00e4if(_isis_pf_mi_debug) fprintf(stderr,\"%s\u00d6n%s:%d %s:%d %s:%d\u00d6n\",__FUNCTION__,#p,p,#p1,p1,#p2,p2);\u00fc\n  #define HOST_CALL_DEBUG(s) ctest(s);\n\n\n#else\n#if defined(OWN_STDIO) == 1\n#include \"stdio.hpp\"\n#else\n#endif\n#define HOST_IBM_TRACE_x(x) \u00e4printf(\"%s %d\u00d6n%s:%x\u00d6n\",__FILE__,__LINE__,#x,x);\u00fc\n#define HOST_IBM_TRACE_s(s1) \u00e4printf(\"%s %d\u00d6n%s:%s\u00d6n\",__FILE__,__LINE__,#s1,s1);\u00fc\n#define HOST_IBM_TRACE_ss(s1,s2) \u00e4printf(\"%s %d\u00d6n%s:%s\u00d6n%s:%s\u00d6n\",__FILE__,__LINE__,#s1,s1,#s2,s2);\u00fc\n#define HOST_IBM_TRACE_sd(s1,s2) \u00e4printf(\"%s %d\u00d6n%s:%s\u00d6n%s:%d\u00d6n\",__FILE__,__LINE__,#s1,s1,#s2,s2);\u00fc\n#define HOST_IBM_TRACE_sss(s1,s2,s3) \u00e4printf(\"%s %d\u00d6n%s:%s\u00d6n%s:%s\u00d6n%s:%s\u00d6n\",__FILE__,__LINE__,#s1,s1,#s2,s2,#s3,s3);\u00fc\n#define HOST_IBM_TRACE_d(p) \u00e4printf(\"%s %d\u00d6n%s:%d\u00d6n\",__FILE__,__LINE__,#p,p);\u00fc\n#define HOST_IBM_TRACE_dd(p,p1) \u00e4printf(\"%s %d\u00d6n%s:%d %s:%d\u00d6n\",__FILE__,__LINE__,#p,p,#p1,p1);\u00fc\n#define HOST_IBM_TRACE_ddd(p,p1,p2) \u00e4printf(\"%s %d\u00d6n%s:%d %s:%d %s:%d\u00d6n\",__FILE__,__LINE__,#p,p,#p1,p1,#p2,p2);\u00fc\n#define HOST_CALL_DEBUG(s)\n#endif\n\n#else\n  #define HOST_IBM_TRACE_x(x)\n  #define HOST_IBM_TRACE_s(s1)\n  #define HOST_IBM_TRACE_ss(s1,s2)\n  #define HOST_IBM_TRACE_sd(s1,s2)\n  #define HOST_IBM_TRACE_sss(s1,s2,s3)\n  #define HOST_IBM_TRACE_d(p)\n  #define HOST_IBM_TRACE_dd(p,p1)\n  #define HOST_IBM_TRACE_ddd(p,p1,p2)\n  #define HOST_CALL_DEBUG(s)\n#endif\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IEZJSCB": {"ttr": 2441, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(1)\n\nstruct iezjscb \u00e4\n  unsigned char  _filler1\u00c4188\u00dc;\n  int            jscrsv01;      /* -            RESERVED                                  */\n  struct \u00e4\n    unsigned char  _jscrsv32;      /* -            RESERVED                           ICB459 */\n    int            _jschpcea : 24; /* -          ADDRESS OF OPTIONAL JOB ENTRY SUBSYSTEM     */\n    \u00fc jschpce;\n  void          *jscbshr;       /* -            ADDRESS OF ASSEMBLY CHAIN (VSAM)   ICB434 */\n  void          *jscbtcp;       /* -            ADDRESS OF TIOT CHAINING ELEMENT CHAIN    */\n  void          *jscbpcc;       /* -            ADDRESS OF PRIVATE CATALOG CONTROL BLOCK  */\n  void          *jscbtcbp;      /* -            ADDRESS OF INITIATOR'S TCB (VSAM)  ICB434 */\n  void          *jscbijsc;      /* -            ADDRESS OF JSCB OF THE INITIATOR THAT     */\n  void          *jscbdbtb;      /* -            ADDRESS OF THE DEB TABLE FOR THIS JOB     */\n  unsigned char  jscbid\u00c44\u00dc;     /* -          JOB SERIAL NUMBER (OS/VS1)                  */\n  struct \u00e4\n    unsigned char  _jscrsv02;      /* -            RESERVED                             */\n    int            _jscbdcba : 24; /* -          ADDRESS OF DCB FOR DATA SET CONTAINING */\n    \u00fc jscbdcb;\n  char           jscbstep;      /* -          CURRENT STEP NUMBER.  THE FIRST STEP IS     */\n  unsigned char  jscrsv03\u00c43\u00dc;   /* -          RESERVED                                    */\n  void          *jscbsecb;      /* -            ECB FOR COMMUNICATION BETWEEN    @ZMC1264 */\n  int            jscrsv04  : 1, /* -  RESERVED                                            */\n                 jscrsv05  : 1, /* -  RESERVED                                            */\n                 jscblong  : 1, /* -        THE PARTITION CANNOT BE REDEFINED BECAUSE     */\n                 jscrsv06  : 1, /* -  RESERVED                                            */\n                 jscrsv07  : 1, /* -  RESERVED                                            */\n                 jscrsv08  : 1, /* -  RESERVED                                            */\n                 jscsiots  : 1, /* -        CHECKPOINT MUST SCAN SIOT          MDC018     */\n                 jscbauth  : 1; /* -        THE STEP REPRESENTED BY THIS JSCB IS          */\n  unsigned char  jscrsv10\u00c43\u00dc;   /* -          RESERVED                           ICB351   */\n  unsigned char  jscrsv17\u00c43\u00dc;   /* -          Reserved                             @P2C   */\n  int            jscbpass  : 1, /* -        WHEN THIS BIT IS SET TO ONE AND A             */\n                 jscrsv11  : 1, /* -  RESERVED                                            */\n                 jscrsv12  : 1, /* -  RESERVED                                            */\n                 jscrsv13  : 1, /* -  RESERVED                                            */\n                 jscrsv14  : 1, /* -  RESERVED                                            */\n                 jscrsv15  : 1, /* -  RESERVED                                            */\n                 jscrsv16  : 1, /* -  RESERVED                             @01C           */\n                 jscbpmsg  : 1; /* -        A MESSAGE HAS BEEN ISSUED BECAUSE THE         */\n  void          *jscbqmpi;      /* -            ADDRESS OF THE QUEUE MANAGER PARAMETER    */\n  void          *jscbjesw;      /* -            ADDRESS OF THE JES WORKAREA      @YA01530 */\n  struct \u00e4\n    int            _jscbiofg : 1, /* -        THE PREVIOUS WTP I/O OPERATION HAD AN       */\n                   _jscbret  : 1, /* -        TEXT BREAKING INDICATOR, ADDITIONAL         */\n                   _jscbbmo  : 1, /* -              Buffer Messages Only flag.  Set       */\n                   _jscrsv19 : 1, /* -  RESERVED                                          */\n                   _jscrsv20 : 1, /* -  RESERVED                                          */\n                   _jscrsv21 : 1, /* -  RESERVED                                          */\n                   _jscrsv22 : 1, /* -  RESERVED                                          */\n                   _jscrsv23 : 1; /* -  RESERVED                                          */\n    char           _jscbwtsp;     /* -          NUMBER OF THE LAST JOB STEP TO ISSUE WTP  */\n    short int      _jscbpmg;      /* -            NUMBER OF WTP OPERATIONS ISSUED FOR THE */\n    \u00fc jscbwtp;\n  void          *jscbcscb;      /* -            ADDRESS OF COMMAND SCHEDULING CONTROL     */\n  struct \u00e4\n    unsigned char  _jscrsv24; /* -            RESERVED                           ICB351 */\n    struct \u00e4\n      unsigned char  _jscbjcta\u00c43\u00dc; /* -          SVA of JCT, use SWAREQ to convert    @P2C */\n      \u00fc jscjctp;\n    \u00fc jscbjct;\n  void          *jscbpscb;      /* -            ADDRESS OF TSO PROTECTED STEP CONTROL     */\n  struct \u00e4\n    short int      _jscbtjid; /* -            TSO TERMINAL JOB IDENTIFIER */\n    \u00fc jscbasid;\n  int            jscbrv01  : 1, /* -  RESERVED                                            */\n                 jscbadsp  : 1, /* -        AUTOMATIC DATA SET PROTECTION FOR THIS        */\n                 jscbrv02  : 1, /* -  RESERVED                                            */\n                 jscbrv03  : 1, /* -  RESERVED                                            */\n                 jscbsjfy  : 1, /* -  Used by BB131                        @P4C           */\n                 jscbsjfn  : 1, /* -  Used by BB131                        @P4C           */\n                 jscbrv06  : 1, /* -  RESERVED                                            */\n                 jscbrv07  : 1; /* -  RESERVED                                            */\n  unsigned char  jscbrv08;      /* -            RESERVED                                  */\n  int            jscbiecb;      /* -            ECB USED FOR COMMUNICATION BETWEEN        */\n  unsigned char  jscbjrba\u00c48\u00dc;   /* -          JOB JOURNAL RELATIVE BYTE ADDRESS (RBA)     */\n  void          *jscbaloc;      /* -            ADDRESS OF THE ALLOCATION WORK   @ZMC1264 */\n  struct \u00e4\n    int            _jscbjnln  : 1, /* -        NOTHING SHOULD BE WRITTEN IN              */\n                   _jscbjnlf  : 1, /* -        NO JOB JOURNAL                     MDC017 */\n                   _jscbjnle  : 1, /* -        ERROR IN JOURNAL, DO NOT WRITE     ICB332 */\n                              : 1,\n                   _jscbjsbi  : 1, /* -        JOB HAS NOT ENTERED ALLOCATION FOR THE    */\n                   _jscbjsba  : 1, /* -        JOB HAS ENTERED ALLOCATION         ICB332 */\n                   _jscbjsbx  : 1, /* -        JOB HAS COMPLETED ALLOCATION       ICB332 */\n                   _jscbjsbt  : 1; /* -        JOB HAS ENTERED TERMINATION        ICB332 */\n    int            _jscbjnla : 24; /* -          INITIATOR JSCB ONLY - ADDRESS OF JSCB   */\n    \u00fc jscbjnl;\n  void          *jscbjnlr;      /* -            POINTER TO JOB JOURNAL RPL         MDC023 */\n  void          *jscbsmlr;      /* -            ADDRESS OF SYSTEM MESSAGE DATA            */\n  struct \u00e4\n    unsigned char  _jscrsv31;      /* -            RESERVED                           ICB333 */\n    int            _jscbsuba : 24; /* -          ADDRESS OF JES-SUBTL FOR THIS JOB           */\n    \u00fc jscbsub;\n  short int      jscbsono;      /* -            THE NUMBER OF SYSOUT DATA SETS PLUS       */\n  short int      jscrsv28;      /* -            RESERVED                                  */\n  unsigned char  jscbfrba\u00c48\u00dc;   /* -          RELATIVE BYTE ADDRESS (RBA) OF THE FIRST    */\n  void          *jscbssib;      /* -            ADDRESS OF THE SUBSYSTEM IDENTIFICATION   */\n  void          *jscdsabq;      /* -            ADDRESS OF QDB FOR DSAB CHAIN      MDC007 */\n  void          *jscbasw2;      /* -            POINTER TO THE ALLOCATION STAE WORK AREA  */\n  struct \u00e4\n    unsigned char  _jscrsv55;   /* -          RESERVED                                  */\n    unsigned char  _jscsctp\u00c43\u00dc; /* -          SVA of SCT, use SWAREQ to convert    @P2C */\n    \u00fc jscsct;\n  void          *jsctmcor;      /* -            ADDRESS OF TIOT MAIN STORAGE MANAGEMENT   */\n  void          *jscbvata;      /* -            ADDRESS OF VAT USED DURING SYSTEM RESTART */\n  short int      jscddnno;      /* -            COUNTER USED BY DYNAMIC ALLOCATION TO     */\n  short int      jscbodno;      /* -            COUNTER USED BY DYNAMIC OUTPUT TO    @D1C */\n  short int      jscddnum;      /* -            NUMBER OF DD ENTRIES CURRENTLY ALLOCATED  */\n  unsigned char  jscrsv33;      /* -            RESERVED                           MDC019 */\n  char           jscbswsp;      /* -          SWA SUBPOOL                        MDC015   */\n  void          *jscbact;       /* -            POINTER TO ACTIVE JSCB             MDC014 */\n  void          *jscbufpt;      /* -            ADDRESS OF ALLOCATION/UNALLOCATION        */\n  void          *jscbaswa;      /* -            POINTER TO THE LAST ALLOCATION ESTAE WORK */\n  struct \u00e4\n    void          *_jscbecb1; /* -            ADDR OF CANCEL ECB WHILE         @ZMC1510 */\n    void          *_jscbecb2; /* -            ADDR OF WAIT FOR REGION ECB      @ZMC1510 */\n    \u00fc jscbpgmn;\n  void          *jscdsnqp;      /* -            Pointer to the first DSENQ Table     @L5C */\n  void          *jscbcscx;      /* -            ADDRESS OF CSCX EXTENSION TO CSCB    @L2C */\n  int            jscamcpl;      /* -            ALLOCATION MESSAGE CELLPOOL ID   @YC19251 */\n  \u00fc;\n\n#define jscrsv32 jschpce._jscrsv32\n#define jschpcea jschpce._jschpcea\n#define jscrsv02 jscbdcb._jscrsv02\n#define jscbdcba jscbdcb._jscbdcba\n#define jscbiofg jscbwtp._jscbiofg\n#define jscbret jscbwtp._jscbret\n#define jscbbmo jscbwtp._jscbbmo\n#define jscrsv19 jscbwtp._jscrsv19\n#define jscrsv20 jscbwtp._jscrsv20\n#define jscrsv21 jscbwtp._jscrsv21\n#define jscrsv22 jscbwtp._jscrsv22\n#define jscrsv23 jscbwtp._jscrsv23\n#define jscbwtsp jscbwtp._jscbwtsp\n#define jscbpmg  jscbwtp._jscbpmg\n#define jscrsv24 jscbjct._jscrsv24\n#define jscbjcta jscbjct.jscjctp._jscbjcta\n#define jscbtjid jscbasid._jscbtjid\n#define jscbjnln jscbjnl._jscbjnln\n#define jscbjnlf jscbjnl._jscbjnlf\n#define jscbjnle jscbjnl._jscbjnle\n#define jscbjsbi jscbjnl._jscbjsbi\n#define jscbjsba jscbjnl._jscbjsba\n#define jscbjsbx jscbjnl._jscbjsbx\n#define jscbjsbt jscbjnl._jscbjsbt\n#define jscbjnla jscbjnl._jscbjnla\n#define jscrsv31 jscbsub._jscrsv31\n#define jscbsuba jscbsub._jscbsuba\n#define jscrsv55 jscsct._jscrsv55\n#define jscsctp  jscsct._jscsctp\n#define jscbecb1 jscbpgmn._jscbecb1\n#define jscbecb2 jscbpgmn._jscbecb2\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IHAASCB": {"ttr": 2391, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ascb \u00e4\n  struct \u00e4\n    unsigned char  _ascbascb\u00c44\u00dc; /* -               ACRONYM IN EBCDIC -ASCB-             */\n    void          *_ascbfwdp;    /* -                 ADDRESS OF NEXT ASCB ON ASCB READY */\n    \u00fc ascbegin;\n  void          *ascbbwdp;    /* -                 ADDRESS OF PREVIOUS ASCB ON ASCB     */\n  void          *ascbltcs;    /* -                 TCB and preemptable-class SRB   @07C */\n  struct \u00e4\n    void          *_ascbsvrb; /* -                 SVRB POOL ADDRESS.  THIS OFFSET      */\n    int            _ascbsync; /* -                 COUNT USED TO SYNCHRONIZE SVRB POOL. */\n    \u00fc ascbsupc;\n  void          *ascbiosp;    /* -                 POINTER TO IOS PURGE INTERFACE       */\n  struct \u00e4\n    unsigned char  _ascbr01c\u00c42\u00dc; /* RESERVED, MUST BE ZERO          @L8A */\n    short int      _ascbwqid;    /* LOGICAL CPU ID OF THE PROCESSOR @L8A */\n    \u00fc ascbwqlk;\n  void          *ascbsawq;    /* -                 ADDRESS OF ADDRESS SPACE SRB WEB     */\n  struct \u00e4\n    short int      _ascbasid; /* -                 ADDRESS SPACE IDENTIFIER FOR THE */\n    \u00fc ascbasn;\n  unsigned char  ascbr026\u00c42\u00dc; /* -               RESERVED                        @L4C   */\n  unsigned char  ascbll5;     /* -                 FLAGS. SERIALIZATION - LOCAL    @D2A */\n  char           ascbhlhi;    /* -               INDICATION OF SUSPEND LOCKS     @L4C   */\n  struct \u00e4\n    char           _ascbdphi; /* -               HIGH ORDER BYTE OF HALFWORD     @L4A */\n    char           _ascbdp;   /* -               DISPATCHING PRIORITY RANGE FROM      */\n    \u00fc ascbdph;\n  int            ascbtcbe;    /* -               Count of ready tcbs in the      @LCC   */\n  void          *ascblda;     /* -                 POINTER TO LOCAL DATA AREA PART OF   */\n  unsigned char  ascbrsmf;    /* -                 RSM ADDRESS SPACE FLAGS              */\n  unsigned char  ascbflg3;    /* -               Flags needing no serialization  @LDA   */\n  short int      ascbhasi;    /* -               Local lock owning ASID          @PAC   */\n  void          *ascbcscb;    /* -                 ADDRESS OF CSCB                      */\n  void          *ascbtsb;     /* -                 ADDRESS OF TSB                       */\n  double         ascbejst;    /* -                 ELAPSED JOB STEP TIMING  UNSIGNED    */\n  double         ascbewst;    /* -                 TIME OF DAY WHENEVER I-STREAM IS     */\n  int            ascbjstl;    /* -                 CPU TIME LIMIT FOR THE JOB STEP      */\n  int            ascbecb;     /* -                 RCT'S WORK ECB                       */\n  int            ascbubet;    /* -                 TIME STAMP WHEN USER BECOMES READY   */\n  void          *ascbtlch;    /* -                 CHAIN FIELD FOR TIME LIMIT EXCEEDED  */\n  void          *ascbdump;    /* -                 SVC DUMP TASK TCB ADDRESS            */\n  struct \u00e4\n    short int      _ascbaffn; /* -                 CPU AFFINITY INDICATOR              */\n    unsigned char  _ascbrctf; /* -                 FLAGS FOR RCT SERIALIZED BY COMPARE */\n    unsigned char  _ascbflg1; /* -                 FLAG FIELD                          */\n    \u00fc ascbfw1;\n  int            ascbtmch;    /* -                 TERMINATION QUEUE CHAIN              */\n  void          *ascbasxb;    /* -                 POINTER TO ADDRESS SPACE EXTENSION   */\n  struct \u00e4\n    short int      _ascbswct; /* -                 NUMBER OF TIMES MEMORY ENTERS SHORT */\n    unsigned char  _ascbdsp1; /* -                 NONDISPATCHABILITY FLAGS.           */\n    unsigned char  _ascbflg2; /* -                 FLAG BYTE.                          */\n    \u00fc ascbfw2;\n  struct \u00e4\n    short int      _filler1;  /* -                 FIRST HALFWORD OF ASCBSCNT MUST BE */\n    short int      _ascbsrbs; /* -                 COUNT OF SRB'S SUSPENDED IN THIS   */\n    \u00fc ascbscnt;\n  void          *ascbllwq;    /* -                 ADDRESS SPACE LOCAL LOCK        @04C */\n  void          *ascbrctp;    /* -                 POINTER TO REGION CONTROL TASK (RCT) */\n  struct \u00e4\n    int            _ascblock; /* -                 LOCAL LOCK.  THIS OFFSET FIXED BY    */\n    void          *_ascblswq; /* -                 ADDRESS SPACE LOCAL LOCK WEB    @L8C */\n    \u00fc ascblkgp;\n  int            ascbqecb;    /* -                 QUIESCE ECB                          */\n  int            ascbmecb;    /* -                 MEMORY CREATE/DELETE ECB             */\n  void          *ascboucb;    /* -                 SYSTEM RESOURCES MANAGER (SRM) USER  */\n  void          *ascbouxb;    /* -                 SYSTEM RESOURCES MANAGER (SRM) USER  */\n  struct \u00e4\n    short int      _ascbfmct; /* -                 RESERVED. ALLOCATED PAGE FRAME  @L6C */\n    unsigned char  _ascblevl; /* -                 LEVEL NUMBER OF ASCB            @D3A */\n    unsigned char  _ascbfl2a; /* -                 FLAG BYTE.                      @DAA */\n    \u00fc ascbfw2a;\n  void          *ascbhreq;    /* -                 Local lock requestor address    @PAC */\n  void          *ascbiqea;    /* -                 POINTER TO IQE FOR ATCAM             */\n  void          *ascbrtmc;    /* -                 ANCHOR FOR SQA SDWA QUEUE            */\n  unsigned char  ascbmcc\u00c44\u00dc;  /* -               USED TO HOLD A MEMORY TERMINATION      */\n  void          *ascbjbni;    /* -                 POINTER TO JOBNAME FIELD FOR         */\n  void          *ascbjbns;    /* -                 POINTER TO JOBNAME FIELD FOR         */\n  struct \u00e4\n    unsigned char  _ascbsrq1; /* -                 FIRST BYTE OF ASCBSRQ  */\n    unsigned char  _ascbsrq2; /* -                 SECOND BYTE OF ASCBSRQ */\n    unsigned char  _ascbsrq3; /* -                 THIRD BYTE OF ASCBSRQ  */\n    unsigned char  _ascbsrq4; /* -                 FOURTH BYTE OF ASCBSRQ */\n    \u00fc ascbsrq;\n  void          *ascbvgtt;    /* -                 ADDRESS OF VSAM GLOBAL TERMINATION   */\n  void          *ascbpctt;    /* -                 ADDRESS OF PRIVATE CATALOG           */\n  short int      ascbssrb;    /* -                 COUNT OF STATUS STOP SRB'S           */\n  char           ascbsmct;    /* -               NUMBER OF OUTSTANDING STEP MUST        */\n  unsigned char  ascbsrbm;    /* -                 MODEL PSW BYTE 0 USED BY SRB         */\n  int            ascbswtl;    /* -                 STEP WAIT TIME LIMIT          MDC029 */\n  double         ascbsrbt;    /* -                 ACCUMULATED SRB TIME          MDC030 */\n  void          *ascbltcb;    /* -                 TCB and preemptable-class SRB   @07C */\n  int            ascbltcn;    /* -                 Count of TCB and preemptable-   @07A */\n  int            ascbtcbs;    /* -                 NUMBER OF READY TCB'S.          @L8A */\n  int            ascblsqt;    /* -                 NUMBER OF TCBS ON A LOCAL LOCK  @L8A */\n  void          *ascbwprb;    /* -                 ADDRESS OF WAIT POST REQUEST BLOCK   */\n  struct \u00e4\n    char           _ascbndp;  /* -               NEW DISPATCHING PRIORITY             */\n    char           _ascbtndp; /* -               NEW TIME SLICE DISPATCHING PRIORITY  */\n    char           _ascbntsg; /* -               NEW TIME SLICE GROUP                 */\n    char           _ascbiodp; /* -               I/O PRIORITY (MDC374)       @G50IP9A */\n    \u00fc ascbsrdp;\n  void          *ascbloci;    /* -                 LOCK IMAGE, ADDRESS OF ASCB          */\n  void          *ascbcmlw;    /* -                 ADDRESS OF THE WEB REPRESENTING @L8C */\n  int            ascbcmlc;    /* -                 COUNT OF CML LOCKS HELD BY           */\n  struct \u00e4\n    unsigned char  _ascbsso1\u00c43\u00dc; /* -               SPACE SWITCH EVENT OWNER    @G381P9A   */\n    unsigned char  _ascbsso4;    /* -                 SPACE SWITCH EVENT OWNER    @G381P9A */\n    \u00fc ascbssom;\n  void          *ascbaste;    /* -                 VIRTUAL ADDRESS OF ADDRESS  @G381P9A */\n  void          *ascbltov;    /* -                 VIRTUAL ADDRESS OF THE      @G381P9A */\n  void          *ascbatov;    /* -                 VIRTUAL ADDRESS OF          @G381P9A */\n  short int      ascbetc;     /* -                 NUMBER OF ENTRY TABLES      @G381P9A */\n  short int      ascbetcn;    /* -                 NUMBER OF CONNECTIONS TO    @G381P9A */\n  short int      ascblxr;     /* -                 NUMBER OF LINKAGE INDEXES   @G381P9A */\n  short int      ascbaxr;     /* -                 NUMBER OF AUTHORIZATION     @G381P9A */\n  void          *ascbstkh;    /* -                 ADDRESS OF LOCAL STACK POOL @G381P9A */\n  int            ascbgqel;    /* -                 ADDRESS SPACE GLOBAL        @G381P9A */\n  int            ascblqel;    /* -                 ADDRESS SPACE LOCAL         @G381P9A */\n  int            ascbgsyn;    /* -                 GRS SYNCHRONIZATION         @G381P9A */\n  void          *ascbxtcb;    /* -                 ADDRESS OF THE JOB STEP @G381P9A     */\n  struct \u00e4\n    unsigned char  _ascbcs1;     /* -                 FIRST BYTE OF COMPARE AND            */\n    unsigned char  _ascbcs2;     /* -                 SECOND BYTE OF COMPARE AND SWAP @P5A */\n    unsigned char  _ascbr122\u00c42\u00dc; /* -               RESERVED.                       @P5C   */\n    \u00fc ascbfw3;\n  void          *ascbgxl;     /* -                 ADDRESS OF GLOBALLY LOADED MODULE    */\n  double         ascbeatt;    /* -                 EXPENDED AND ACCOUNTED TASK TIME.    */\n  double         ascbints;    /* -                 JOB SELECTION TIME STAMP.            */\n  struct \u00e4\n    unsigned char  _ascbll1; /* -                 FIRST BYTE OF FLAGS.        @G381P9A */\n    unsigned char  _ascbll2; /* -                 SECOND BYTE OF FLAGS.       @G381P9A */\n    unsigned char  _ascbll3; /* -                 THIRD BYTE OF FLAGS.        @G381P9A */\n    unsigned char  _ascbll4; /* -                 FOURTH BYTE OF FLAGS.       @G381P9A */\n    \u00fc ascbfw4;\n  void          *ascbrcms;    /* ADDRESS OF THE REQUESTED    @G381PXU                   */\n  int            ascbiosc;    /* -                 I/O SERVICE MEASURE.        @G381PXU */\n  short int      ascbpkml;    /* -              PKM OF LAST TASK DISPATCHED             */\n  short int      ascbxcnt;    /* -                 EXCP COUNT FIELD.               @L1A */\n  void          *ascbnsqa;    /* -                 ADDRESS OF THE SQA RESIDENT          */\n  void          *ascbasm;     /* -                 ADDRESS OF THE ASM HEADER.      @L2A */\n  void          *ascbassb;    /* -                 POINTER TO ADDRESS SPACE        @D6C */\n  void          *ascbtcme;    /* -                 POINTER TO TCXTB.               @D1A */\n  struct \u00e4\n    unsigned char  _filler2;     /* -               BYTE 0 OF ASCBGQIR              @O3A */\n    unsigned char  _filler3\u00c42\u00dc;  /* -               BYTE 1 AND 2 OF ASCBGQIR        @O3A */\n    unsigned char  _ascbgqi3;    /* -               BYTE 3 OF ASCBGQIR              @O3A */\n    \u00fc ascbgqir;\n  int            ascblsqe;    /* -                 Number of Enclave TCBs that are on   */\n  double         ascbiosx;    /* -                 I/O service measure extended.   @0AC */\n  unsigned char  ascbr168\u00c44\u00dc; /* -              RESERVED.                       @0AC    */\n  void          *ascbrsme;    /* -               POINTER TO RSM ADDRESS SPACE    @D5A   */\n  struct \u00e4\n    unsigned char  _ascbavm1; /* -                 FIRST BYTE OF ASCBAVM.          @01A */\n    unsigned char  _ascbavm2; /* -                 SECOND BYTE OF ASCBAVM.         @01A */\n    short int      _ascbagen; /* -                 AVM ASID REUSE GENERATION       @01A */\n    \u00fc ascbavm;\n  int            ascbarc;     /* -                 REASON CODE ON MEMTERM.              */\n  struct \u00e4\n    void          *_ascbrsma; /* -               ADDRESS OF RSM'S CONTROL BLOCK */\n    \u00fc ascbrsm;\n  int            ascbdcti;    /* -              ACCUMULATED CHANNEL CONNECT TIME        */\n  double         ascbend;     /* -                END OF ASCB                     @L7C  */\n  \u00fc;\n\n#define ascbascb ascbegin._ascbascb\n#define ascbfwdp ascbegin._ascbfwdp\n#define ascbsvrb ascbsupc._ascbsvrb\n#define ascbsync ascbsupc._ascbsync\n#define ascbr01c ascbwqlk._ascbr01c\n#define ascbwqid ascbwqlk._ascbwqid\n#define ascbasid ascbasn._ascbasid\n#define ascbdphi ascbdph._ascbdphi\n#define ascbdp   ascbdph._ascbdp\n#define ascbaffn ascbfw1._ascbaffn\n#define ascbrctf ascbfw1._ascbrctf\n#define ascbflg1 ascbfw1._ascbflg1\n#define ascbswct ascbfw2._ascbswct\n#define ascbdsp1 ascbfw2._ascbdsp1\n#define ascbflg2 ascbfw2._ascbflg2\n#define ascbsrbs ascbscnt._ascbsrbs\n#define ascblock ascblkgp._ascblock\n#define ascblswq ascblkgp._ascblswq\n#define ascbfmct ascbfw2a._ascbfmct\n#define ascblevl ascbfw2a._ascblevl\n#define ascbfl2a ascbfw2a._ascbfl2a\n#define ascbsrq1 ascbsrq._ascbsrq1\n#define ascbsrq2 ascbsrq._ascbsrq2\n#define ascbsrq3 ascbsrq._ascbsrq3\n#define ascbsrq4 ascbsrq._ascbsrq4\n#define ascbndp  ascbsrdp._ascbndp\n#define ascbtndp ascbsrdp._ascbtndp\n#define ascbntsg ascbsrdp._ascbntsg\n#define ascbiodp ascbsrdp._ascbiodp\n#define ascbsso1 ascbssom._ascbsso1\n#define ascbsso4 ascbssom._ascbsso4\n#define ascbcs1  ascbfw3._ascbcs1\n#define ascbcs2  ascbfw3._ascbcs2\n#define ascbr122 ascbfw3._ascbr122\n#define ascbll1  ascbfw4._ascbll1\n#define ascbll2  ascbfw4._ascbll2\n#define ascbll3  ascbfw4._ascbll3\n#define ascbll4  ascbfw4._ascbll4\n#define ascbgqi3 ascbgqir._ascbgqi3\n#define ascbavm1 ascbavm._ascbavm1\n#define ascbavm2 ascbavm._ascbavm2\n#define ascbagen ascbavm._ascbagen\n#define ascbrsma ascbrsm._ascbrsma\n\n/* Values for field \"ascbsawq\" */\n#define ascburrq 0x80 /* -             SYSEVENT USER READY REQUIRED    @L8C */\n\n/* Values for field \"ascbll5\" */\n#define ascbs3s  0x20 /* -             STAGE II EXIT EFECTOR HAS       @D2M */\n\n/* Values for field \"ascbrsmf\" */\n#define ascb2lpu 0x80 /* -             SECOND LEVEL PREFERRED USER.  THIS   */\n#define ascb1lpu 0x40 /* -             FIRST LEVEL PREFERRED USER           */\n#define ascbn2lp 0x20 /* -             SRM IN SYSEVENT TRANSWAP SHOULD NOT  */\n#define ascbveqr 0x10 /* -             V=R ADDRESS SPACE  (MDC372) @ZA17355 */\n\n/* Values for field \"ascbflg3\" */\n#define ascbcnip 0x80 /* -             Address space created during NIP     */\n#define ascbreus 0x40 /* -             This is a reusable ASID. It may be   */\n\n/* Values for field \"ascbrctf\" */\n#define ascbtmno 0x80 /* -             MEMORY IS BEING QUIESCED, IS         */\n#define ascbfrs  0x40 /* -             RESTORE REQUEST                      */\n#define ascbfqu  0x20 /* -             QUIESCE REQUEST                      */\n#define ascbjste 0x10 /* -             JOB STEP TIME EXCEEDED. NOT USED BY  */\n#define ascbwait 0x08 /* -             LONG WAIT INDICATOR                  */\n#define ascbout  0x04 /* -             ADDRESS SPACE CONSIDERED SWAPPED OUT */\n#define ascbtmlw 0x02 /* -             MEMORY IS IN A LONG WAIT             */\n#define ascbtoff 0x01 /* -             MEMORY SHOULD NOT BE CHECKED FOR JOB */\n\n/* Values for field \"ascbflg1\" */\n#define ascblsas 0x80 /* -             ADDRESS SPACE IS LOGICALLY SWAPPED   */\n#define ascbdstk 0x40 /* -             SRM REQUIRES A TIME STAMP TO    @P6C */\n#define ascbdstz 0x40 /* -             Bit constant for bit position  @P7A  */\n#define ascbterm 0x10 /* -             ADDRESS SPACE TERMINATING NORMALLY   */\n#define ascbabnt 0x08 /* -             ADDRESS SPACE TERMINATING ABNORMALLY */\n#define ascbmemp 0x04 /* -             Memory Termination PURGEDQ flag @LBA */\n\n/* Values for field \"ascbdsp1\" */\n#define ascbssnd 0x80 /* -             SYSTEM SET NONDISPATCHABLE AND THIS  */\n#define ascbfail 0x40 /* -             A FAILURE HAS OCCURRED WITHIN THE    */\n#define ascbsnqs 0x20 /* -             STATUS STOP NON-QUIESCABLE LEVEL     */\n#define ascbssss 0x10 /* -             STATUS STOP SRB SUMMARY              */\n#define ascbstnd 0x08 /* -             TCB'S NONDISPATCHABLE                */\n#define ascbuwnd 0x04 /* -             STATUS SET UNLOCKED WORKUNITS   @LAA */\n#define ascbnoq  0x02 /* -             ASCB NOT ON SWAPPED IN QUEUE    @L4A */\n\n/* Values for field \"ascbflg2\" */\n#define ascbxmpt 0x80 /* -             ASCB EXEMPT FROM SYSTEM              */\n#define ascbpxmt 0x40 /* -             ASCB PERMANENTLY EXEMPT FROM SYSTEM  */\n#define ascbcext 0x20 /* -             CANCEL TIMER EXTENSION BECAUSE EOT   */\n#define ascbs2s  0x10 /* -             FOR LOCK MANAGER, ENTRY MADE TO      */\n#define ascbncml 0x08 /* -             ASCB NOT ELIGIBLE FOR CML LOCK       */\n#define ascbnomt 0x04 /* -             ADDRESS SPACE MUST NOT BE MEMTERMED  */\n#define ascbnomd 0x02 /* -             IF ON,ADDRESS SPACE CANNOT BE        */\n\n/* Values for field \"ascblswq\" */\n#define ascbs3nl 0x80 /* -             THE LOCAL LOCK IS NEEDED BY THE @L8A */\n#define ascbltcl 0x01 /* -            THE LOCAL LOCK IS NEEDED BY SOME      */\n\n/* Values for field \"ascblevl\" */\n#define ascbvs00 0x00 /* -             HBB2102 (NOT IN BASE)       @ZA68643 */\n#define ascbvs01 0x01 /* -             JBB2110                         @D3A */\n#define ascbvs02 0x02 /* -             JBB2133                         @H1A */\n#define ascbvs03 0x03 /* -             HBB4410                         @L7A */\n#define ascbvers 0x03 /* -             LEVEL OF THIS MAPPING           @L7C */\n\n/* Values for field \"ascbfl2a\" */\n#define ascbnopr 0x80 /* -             NO PREEMPTION FLAG              @DAA */\n\n/* Values for field \"ascbsrq1\" */\n#define ascbdsg4 0x80 /* -             SIGNAL WAITING PROCESSORS WHEN       */\n#define ascbdflt 0x40 /* -             DEFAULT LOCAL INTERSECT              */\n\n/* Values for field \"ascbsrq2\" */\n#define ascbdsg3 0x80 /* -             SIGNAL WAITING PROCESSORS WHEN       */\n#define ascbsrm1 0x02 /* -             SYSTEM RESOURCE MANAGER (SRM)        */\n#define ascbqver 0x01 /* -             QUEUE VERIFICATION INTERSECTING      */\n\n/* Values for field \"ascbsrq3\" */\n#define ascbdsg2 0x80 /* -             SIGNAL WAITING PROCESSORS WHEN       */\n#define ascbrcti 0x40 /* -             REGION CONTROL TASK (RCT)            */\n#define ascbtcbv 0x20 /* -             TCB VERIFICATION INTERSECTING        */\n#define ascbacha 0x10 /* -             ASCB CHAP INTERSECTING               */\n#define ascbmter 0x04 /* -             MEMORY TERMINATION INTERSECTING      */\n#define ascbmini 0x02 /* -             MEMORY INITIALIZATION INTERSECTING   */\n#define ascbcbve 0x01 /* -             CONTROL BLOCK VERIFICATION           */\n\n/* Values for field \"ascbsrq4\" */\n#define ascbdsg1 0x80 /* -             SIGNAL WAITING PROCESSORS WHEN       */\n#define ascbdeta 0x40 /* -             DETACH INTERSECTING                  */\n#define ascbatta 0x20 /* -             ATTACH INTERSECTING                  */\n#define ascbrtm2 0x10 /* -             RTM2 INTERSECTING  (MDC351) @G50DP9A */\n#define ascbrtm1 0x08 /* -             RTM1 INTERSECTING  (MDC352) @G50DP9A */\n#define ascbchap 0x04 /* -             CHAP INTERSECTING  (MDC353) @G50DP9A */\n#define ascbstat 0x02 /* -             STATUS INTERSECTING                  */\n#define ascbpurd 0x01 /* -             PURGEDQ INTERSECTING                 */\n\n/* Values for field \"ascbsrbm\" */\n#define ascbper  0x40 /* -             PER BIT IN ASCBSRBM - ALSO USED TO   */\n\n/* Values for field \"ascbsso4\" */\n#define ascbsssp 0x02 /* -             SLIP/PER REQUESTED          @G381P9A */\n#define ascbssjs 0x01 /* -             JOB STEP TERMINATION        @G381P9A */\n\n/* Values for field \"ascbcs1\" */\n#define ascbxmet 0x80 /* -             IF ONE, THE ADDRESS SPACE IS    @L3C */\n#define ascbxmec 0x40 /* -             CROSS MEMORY ENTRY TABLES   @G381P9A */\n#define ascbxmpa 0x20 /* -             IF ONE, THE ADDRESS SPACE IS    @L3A */\n#define ascbxmlk 0x10 /* -             IF ONE, THE ADDRESS SPACE IS    @L3A */\n#define ascbpers 0x08 /* -             COMMUNICATION BIT FOR       @G381P9A */\n#define ascbdter 0x04 /* -             A DAT ERROR HAS OCCURRED    @G381P9A */\n#define ascbpero 0x02 /* -             PER PROCESSING NEEDS TO BE      @L5A */\n#define ascbswop 0x01 /* -             ADDRESS SPACE IS SWAPPED OUT    @L5A */\n\n/* Values for field \"ascbcs2\" */\n#define ascbsas  0x80 /* -             INDICATES THAT STORAGE          @P5M */\n#define ascbsmgr 0x40 /* -             This space is or has been associated */\n#define ascbdtin 0x20 /* -             This space is or has been associated */\n\n/* Values for field \"ascbll1\" */\n#define ascbsspc 0x80 /* -             STATUS STOP TASKS PENDING   @G381P9A */\n\n/* Values for field \"ascbll4\" */\n#define ascbtyp1 0x02 /* -             TYPE 1 SVC HAS CONTROL.  THIS OFFSET */\n\n/* Values for field \"_filler2\" */\n#define ascbgqab 0x80 /* -             ISGQSCAN INFORMATION            @O3A */\n\n/* Values for field \"ascbgqi3\" */\n#define ascbgqds 0x01 /* -             ISGQSCAN INFORMATION            @O3A */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IHAASSB": {"ttr": 2369, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct assb \u00e4\n  struct \u00e4\n    unsigned char  _assbassb\u00c44\u00dc; /* ACRONYM IN EBCDIC - ASSB.            */\n    int            _assbvafn;    /* COUNT OF TASKS IN THE           @D5C */\n    \u00fc assbegin;\n  double         assbevst;     /* ELAPSED VECTOR USAGE TIME.      @H1A */\n  double         assbvfat;     /* ELAPSED VECTOR AFFINITY TIME.   @D1A */\n  unsigned char  assbxmf1;     /* CROSS MEMORY FLAGS 1            @L4A */\n  unsigned char  assbxmf2;     /* CROSS MEMORY FLAGS 2            @L4A */\n  short int      assbxmcc;     /* CROSS MEMORY CONNECTIONS COUNT. @L1A */\n  void          *assbcbtp;     /* POINTER TO IHAACBT              @LEC */\n  int            assbvsc;      /* VIO SLOT ALLOCATED COUNT.       @D3A */\n  int            assbnvsc;     /* NON-VIO SLOT ALLOCATED COUNT.   @D3A */\n  int            assbasrr;     /* ADDRESS SPACE RE-READS TO BE    @D4C */\n  void          *assbdexp;     /* POINTER TO IHADEXP              @LDC */\n  struct \u00e4\n    int            _assbstw1; /* FIRST WORD OF ASSBSTKN.         @L2C */\n    int            _assbisqn; /* INITIAL ADDRESS SPACE SEQUENCE  @L2C */\n    \u00fc assbstkn;\n  void          *assbbpsa;     /* IBMPM ANCHOR BLOCK.             @02C */\n  int            assbcsct;     /* CACHING FACILITY STOP COUNT     @LGA */\n  void          *assbbalv;     /* VIRTUAL ADDRESS OF THE BASIC    @L2C */\n  void          *assbbald;     /* BASIC ACCESS LIST DESIGNATOR.   @L2C */\n  void          *assbxmse;     /* ADDRESS OF XMSE FOR THIS        @L2A */\n  int            assbtsqn;     /* NEXT TTOKEN SEQUENCE NUMBER.    @L3A */\n  int            assbvcnt;     /* COUNT OF CURRENT TASKS WITH     @D5A */\n  void          *assbpalv;     /* PASN ACCESS LIST VIRTUAL        @D6C */\n  void          *assbasei;     /* ADDRESS OF ADDRESS SPACE        @D6C */\n  void          *assbrma;      /* ADDRESS OF ADDRESS SPACE        @D6C */\n  double         assbhst;      /* RSM SERVICE TIME FOR HIPERSPACE @L8C */\n  double         assbiipt;     /* IOS I/O INTERRUPT PROCESSING    @L5A */\n  int            assbanec;     /* ALESERV ADD WITH NO EAX COUNT.  @L6A */\n  void          *assbsdov;     /* ADDRESS OF SHARED DATA OBJECT   @LDC */\n  int            assbmcso;     /* NUMBER OF CONSOLE IDS ACTIVATED @LAA */\n  void          *assbdfas;     /* ADDRESS OF DFP=SMSX STRUCTURE   @L7A */\n  struct \u00e4\n    unsigned char  _assbflg0; /* ASSB FLAG BYTE 0.               @D7C */\n    unsigned char  _assbflg1; /* ASSB FLAG BYTE 1                @LIC */\n    unsigned char  _assbflg2; /* ASSB FLAG BYTE 2.               @D7C */\n    unsigned char  _assbflg3; /* ASSB FLAG BYTE 3 - RESERVED.    @D7C */\n    \u00fc assbflgs;\n  void          *assbascb;     /* ADDRESS OF ASCB.                @L9C */\n  void          *assbasrf;     /* CREATED ASSB FORWARD POINTER.   @L9A */\n  void          *assbasrb;     /* CREATED ASSB BACKWARD POINTER.  @L9A */\n  void          *assbssd;      /* ADDRESS OF THE SUSPENDED SRB    @D8A */\n  void          *assbmqma;     /* CONTROL BLOCK ANCHOR FOR        @06C */\n  double         assblasb;     /* TOKEN INDICATING IF MVS/APPC    @LBC */\n  void          *assbsch;      /* POINTER TO APPC SCHEDULER       @LBA */\n  int            assbfsc;      /* COUNT ACCUMULATED BY IEAMFCNT   @01A */\n  void          *assbjsab;     /* ADDRESS OF JOB SCHEDULER        @D9A */\n  void          *assbrctw;     /* ADDRESS OF RCT's WEB.           @LSA */\n  int            assbcreq;     /* COUNT OF CONCURRENT GQSCAN AND  @04A */\n  int            assbcrqa;     /* COUNT OF CONCURRENT AUTHORIZED  @04A */\n  void          *assbtlmi;     /* ADDRESS OF TAILORED LOCK        @LOA */\n  void          *assbsdas;     /* POINTER TO WORKING STORAGE      @DBA */\n  int            assbtpin;     /* THE COUNT OF UCB PIN REQUESTS   @LFA */\n  int            assbspin;     /* THE COUNT OF UCB PIN REQUESTS   @LFA */\n  int            assbect1;     /* THE COUNT OF ALLOCATION         @H2A */\n  int            assbect2;     /* THE COUNT OF ALLOCATION         @H2A */\n  int            assbmt_;      /* MEMTERM DISABLE COUNT.  WHEN    @DAA */\n  unsigned char  assbdfp\u00c44\u00dc;   /* RESERVED FOR USE BY DFP.        @03A */\n  short int      assbnter;     /* Count of Tasks simultaneously   @0AA */\n  short int      assbsnew;     /* Count of SASN=NEW connections        */\n  void          *assbnttp;     /* ADDRESS OF ADDRESS SPACE LEVEL  @LIA */\n  struct \u00e4\n    unsigned char  _assboepc; /* POST CODE: '81'X=>BPX1EXC       @LMA */\n    struct \u00e4\n      unsigned char  _filler1\u00c42\u00dc;  /* Unused.                         @LMA */\n      unsigned char  _assboees;    /* Exit Status passed on BPX1EXI.  @LMA */\n      \u00fc assboecd;\n    \u00fc assboecb;\n  void          *assboasb;     /* OpenMVS ADDRESS SPACE BLOCK.    @LLA */\n  void          *assbxsba;     /* XSB POOL QUEUE.                 @LKA */\n  void          *assbdlcb;     /* Contains the address of the Dynamic  */\n  void          *assbvab;      /* ADDRESS OF VSM ADDRESS SPACE    @LNC */\n  void          *assblmab;     /* LATCH MANAGER ADDRESS SPACE     @LNC */\n  unsigned char  assbr0f8\u00c48\u00dc;  /* Reserved.                       @LYC */\n  int            assbxrct;     /* XES REQUEST COUNT               @LQA */\n  int            assbetsc;     /* Enclave TCB Summary Count       @M5C */\n  void          *assbtasb;     /* TCPIP ASSB Extension            @07A */\n  int            assbtpma;     /* OWNER:  IOS.                    @DCA */\n  int            assbrosu;     /* OWNER:  IOS.                    @DCA */\n  int            assbtpmt;     /* OWNER:  IOS.                    @DCA */\n  unsigned char  assbssdt\u00c44\u00dc;  /* SSD Trailer                     @LSC */\n  void          *assbtawq;     /* ADDRESS OF TASK WEB QUEUE.      @LSA */\n  void          *assbwcml;     /* ADDRESS OF CML PROMOTION WEB.   @LSA */\n  void          *assbws3s;     /* ADDRESS OF ASYNCHRONOUS EXIT    @LSA */\n  void          *assbwsss;     /* ADDRESS OF SUSPENDED STATUS     @LSA */\n  void          *assbcapq;     /* ADDRESS OF FIRST WEB ON THE     @LSC */\n  void          *assbptar;     /* Pointer used by RTM processing  @09C */\n  int            assbwtct;     /* When this counter is non-zero,       */\n  int            assbsbct;     /* XES-owned count of requests     @05A */\n  void          *assbarbp;     /* ARM (Automatic Restart Manager) @LVA */\n  void          *assbrctr;     /* ADDRESS OF RCT's RB                  */\n  void          *assbscah;     /* Address of the SCA (SPIE/ESPIE  @PAA */\n  unsigned char  assbttfl;     /* Transaction Trace flags.        @MCA */\n  unsigned char  assbwmf1;     /* WLM flags                       @M8A */\n  short int      assbpswc;     /* Preemptable-class SRB short     @P5A */\n  void          *assbixga;     /* Pointer to SLC address space    @LXC */\n  double         assbjbni;     /* Jobname for the Initiated       @P1A */\n  double         assbjbns;     /* Jobname for the START/MOUNT/    @P1A */\n  double         assbasst;     /* Additional SRB Service Time.    @LYA */\n  double         assbphtm;     /* Preemptable-class SRB Time. The @LYA */\n  void          *assbcrwq;     /* Client Related WEB Queue.       @LYA */\n  void          *assbscwq;     /* Suspended Client related WEB    @LYA */\n  int            assblcnt;     /* Number of latched operations    @LZA */\n  int            assbacnt;     /* Number of asynchronous requests @M1C */\n  int            assblcpd;     /* CPOOLID of the cpool created    @M1A */\n  void          *assbpqel;     /* Queue of outstanding GQSCAN     @M2A */\n  void          *assbpvtc;     /* Queue of privately managed      @M4A */\n  struct \u00e4\n    unsigned char  _assbctxf;    /* Context Services flags          @MAM */\n    unsigned char  _assbctx2\u00c43\u00dc; /* Reserved context services.      @MAA */\n    \u00fc assbctx;\n  unsigned char  assbhale\u00c416\u00dc; /* Copy of Home ALE                @P7A */\n  void          *assbrtls;     /* Address of RTLSA                @M6A */\n  int            assbsrsn;     /* Suspend/Resume sequence number       */\n  void          *assbwlms;     /* Address of WLM managed server   @M8A */\n  void          *assbbcba;     /* Address of SOMObjects data structure */\n  unsigned char  assbcsm\u00c44\u00dc;   /* CSM user bitmap                 @P9A */\n  int            assbpect;     /* Number of Pause elements allocated   */\n  void          *assbrrsa;     /* RRS data area pointer           @0EA */\n  struct \u00e4\n    unsigned char  _assbofl0; /* ASSB USS flag byte 0            @DEA */\n    unsigned char  _assbofl1; /* ASSB USS flag byte 1            @DEA */\n    \u00fc assboflg;\n  unsigned char  assbscaf\u00c42\u00dc;  /* CPU affinity indicator          @MDA */\n  int            assbctxc;     /* Number of private contexts owned by  */\n  int            assbrmct;     /* Number of PKM 8 to 15 resource       */\n  void          *assblrba;     /* License manager resource block  @MFA */\n  unsigned char  assbr1cc\u00c411\u00dc; /* Reserved.                       @MFC */\n  char           assbcsdp;     /* Channel Subsystem I/O Priority. @MEA */\n  double         assbend;      /* END OF ASSB.                         */\n  \u00fc;\n\n#define assbassb assbegin._assbassb\n#define assbvafn assbegin._assbvafn\n#define assbstw1 assbstkn._assbstw1\n#define assbisqn assbstkn._assbisqn\n#define assbflg0 assbflgs._assbflg0\n#define assbflg1 assbflgs._assbflg1\n#define assbflg2 assbflgs._assbflg2\n#define assbflg3 assbflgs._assbflg3\n#define assboepc assboecb._assboepc\n#define assboees assboecb.assboecd._assboees\n#define assbctxf assbctx._assbctxf\n#define assbctx2 assbctx._assbctx2\n#define assbofl0 assboflg._assbofl0\n#define assbofl1 assboflg._assbofl1\n\n/* Values for field \"assbxmf1\" */\n#define assbxeax 0x80 /* ADDRESS SPACE OWNS ENTRY TABLES @L4A */\n\n/* Values for field \"assbstw1\" */\n#define assbstyp 0xF0 /* FIRST 4 BITS REPRESENT STOKEN   @L3A */\n\n/* Values for field \"assbflg0\" */\n#define assbbsdn 0x80 /* BYPASS SVC DUMP                 @D7C */\n#define assbcdsi 0x40 /* CDSI Resources Held             @DDA */\n#define assbpsch 0x20 /* Parallel Detach SRB scheduled   @09A */\n\n/* Values for field \"assbflg1\" */\n#define assbntar 0x80 /* NAME/TOKEN ADDRESS SPACE        @LIA */\n#define assbnttr 0x40 /* NAME/TOKEN JOB STEP TASK        @LIA */\n#define assbntsl 0x20 /* JOB STEP HAS CREATED            @LIA */\n#define assbfrst 0x10 /* The first pool of SVRBs has     @0CA */\n\n/* Values for field \"assbflg2\" */\n#define assbenfl 0x80 /* IF ON, INDICATES ADDRESS SPACE  @LRA */\n#define assbnswf 0x40 /* If on, indicates IEAVEGR found  @LSA */\n#define assbpran 0x20 /* No longer set - kept for        @09C */\n\n/* Values for field \"assbflg3\" */\n#define assbarm  0x80 /* The job or STC running in this  @LVA */\n#define assbnrst 0x40 /* The Automatic Restart Manager   @LVA */\n#define assbgdps 0x20 /* If on, indicates this is the         */\n\n/* Values for field \"assbmt_\" */\n#define assbmtp  0x80 /* MEMTERM PENDING.  TURNED ON     @DAA */\n\n/* Values for field \"assbdfp\" */\n#define assboam  0x80 /* ADDRESS SPACE IS A USER OF OAM  @03A */\n\n/* Values for field \"assbttfl\" */\n#define assbttrc 0x80 /* Transaction Trace has been used.@MCA */\n\n/* Values for field \"assbwmf1\" */\n#define assbwini 0x80 /* WLM Managed Batch initiator     @M8A */\n#define assbfsas 0x40 /* WLM Managed OE Forked/Spawned   @M8A */\n\n/* Values for field \"assbctxf\" */\n#define assbncl  0x80 /* There is no limit to the number @MAM */\n#define assbmsgi 0x40 /* The message to relax the above  @MAM */\n#define assburmx 0x20 /* There is no limit to the number @MAA */\n#define assburmm 0x10 /* The message to relax the above  @MAA */\n\n/* Values for field \"assbofl0\" */\n#define assbomsc 0x80 /* USS address space must remain   @DEA */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IHACDE": {"ttr": 2401, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct cdentry \u00e4\n  int            cdchain;   /* -            Address of next CDE in queue (either JPAQ */\n  int            cdrrbp;    /* -            If the module is REENTERABLE, this field  */\n  unsigned char  cdname\u00c48\u00dc; /* -          8-byte name                                 */\n  union \u00e4\n    int            _cdentpt; /* -            Module's relocated Entry Point address */\n    struct \u00e4\n      unsigned char  _filler1\u00c43\u00dc;  /* Bytes 0-2 of CDENTPT                 @L8A */\n      unsigned char  _cdentpt3;    /* Byte 3 of CDENTPT                    @L8A */\n      \u00fc _cdentry_struct1;\n    \u00fc _cdentry_union1;\n  int            cdxlmjp;   /* -            Extent list address or Major CDE address  */\n  short int      cduse;     /* -            Value contains the total module use       */\n  unsigned char  cdattrb;   /* -            Flag byte                        @G860P35 */\n  unsigned char  cdsp;      /* Module SUBPOOL ID                @G381P2A              */\n  unsigned char  cdattr;    /* -            Attribute flags                           */\n  unsigned char  cdattr2;   /* -            Second attribute field                    */\n  unsigned char  cdattr3;   /* -            3rd attribute field                  @L3C */\n  unsigned char  cdattr4;   /* -            RESERVED                             @L3A */\n  \u00fc;\n\n#define cdentpt  _cdentry_union1._cdentpt\n#define cdentpt3 _cdentry_union1._cdentry_struct1._cdentpt3\n\n/* Values for field \"cdentpt\" */\n#define cdemode  0x80 /* Routine runs in 31 bit mode      @G860P35          */\n\n/* Values for field \"cdentpt3\" */\n#define cdemod64 0x01 /* Routine runs in 64 bit mode          @L8A          */\n\n/* Values for field \"cdattrb\" */\n#define cdeom    0x80 /* -        ON=Delete module at memory termination    */\n#define cdidenty 0x40 /* -        ON = CDE built by IDENTIFY  @02C @ZA47842 */\n#define cdracdty 0x20 /* -        ON = MODULE WAS LOADED BY 'DIRTY' TASK    */\n#define cdcdex   0x10 /* -        ON = CDE extension exists            @L2A */\n#define cdelpde  0x08 /* -        OFF=CDE, ON=LPDE (Used to distinguish a   */\n#define cdglobal 0x04 /* -        ON = Module LOADED to GLOBAL         @L1A */\n#define cdcontmn 0x02 /* -        ON = Module is contaminated. A module is  */\n#define cdracf   0x01 /* -        Used by external security manager.        */\n\n/* Values for field \"cdattr\" */\n#define cdnip    0x80 /* -        Module loaded by NIP or FLPA/MLPA         */\n#define cdnic    0x40 /* -        Module is in process of being loaded      */\n#define cdren    0x20 /* -        Module is REENTERABLE                     */\n#define cdser    0x10 /* -        Module is SERIALLY REUSABLE               */\n#define cdnfn    0x08 /* -        Module is NOT REUSABLE (NON-FUNCTIONAL)   */\n#define cdmin    0x04 /* -        This is a MINOR CDE                       */\n#define cdjpa    0x02 /* -        Module is in JOB PACK AREA                */\n#define cdnlr    0x01 /* -        Module is NOT LOADABLE-ONLY               */\n\n/* Values for field \"cdattr2\" */\n#define cdspz    0x80 /* -        Module is in SUBPOOL ZERO                 */\n#define cdrel    0x40 /* -        Module is INACTIVE and MAY BE RELEASED    */\n#define cdxle    0x20 /* -        EXTENT LIST has been built for module.    */\n#define cdrlc    0x10 /* -        This CDE contains a MINOR ENTRY POINT     */\n#define cdeanym  0x08 /* Routine runs in ANY mode         @G860P35          */\n#define cdoly    0x04 /* -        Module is in OVERLAY format        A27026 */\n#define cdsyslib 0x02 /* -        AUTHORIZED LIBRARY module                 */\n#define cdauth   0x01 /* -        PROGRAM AUTHORIZATION FLAG         ICB360 */\n\n/* Values for field \"cdattr3\" */\n#define cdpathn  0x80 /* -        ON = The module represented by this CDE   */\n#define cdpml    0x40 /* -        OFF = PML was not complete when module    */\n#define cdesplit 0x20 /* -        Split RMODE program object           @L5A */\n#define cdsyshlb 0x10 /* -        HFS System Shared Library Module     @L7A */\n#define cdertls  0x08 /* -        RTLS                                 @L5A */\n#define cdedylpa 0x04 /* -        Dynamic LPA. Only on for CDE on active    */\n#define cdeprotp 0x02 /* -        Only whole pages are page-protected, as   */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IHACVT": {"ttr": 2415, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct cvt \u00e4\n  void          *cvttcbp;      /* -  Address of PSATNEW.                   @PTC          */\n  void          *cvt0ef00;     /* - ADDRESS OF ROUTINE TO SCHEDULE                       */\n  void          *cvtlink;      /* -  ADDRESS OF DCB FOR SYS1.LINKLIB DATA SET.           */\n  void          *cvtauscb;     /* - ADDRESS OF ASSIGN/UNASSIGN SERVICE    @H1A           */\n  void          *cvtbuf;       /* -        ADDRESS OF THE BUFFER OF THE RESIDENT         */\n  void          *cvtxapg;      /* -  ADDRESS OF I/O SUPERVISOR APPENDAGE VECTOR          */\n  void          *cvt0vl00;     /* - ADDRESS OF ENTRY POINT OF THE TASK                   */\n  void          *cvtpcnvt;     /* - ADDRESS OF ENTRY POINT OF THE ROUTINE                */\n  void          *cvtprltv;     /* - ADDRESS OF ENTRY POINT OF THE ROUTINE                */\n  void          *cvtllcb;      /* -  ADDRESS OF THE LLCB.                  @P1M          */\n  void          *cvtlltrm;     /* - ADDRESS OF LLA'S MEMORY TERNIMATION   @P1M           */\n  void          *cvtxtler;     /* - ADDRESS OF ERROR RECOVERY PROCEDURE (ERP)            */\n  void          *cvtsysad;     /* -        UCB ADDRESS FOR THE SYSTEM RESIDENCE          */\n  void          *cvtbterm;     /* - ADDRESS OF ENTRY POINT OF THE ABTERM                 */\n  int            cvtdate;      /* -        CURRENT DATE IN PACKED DECIMAL                */\n  void          *cvtmslt;      /* -  ADDRESS OF THE MASTER COMMON AREA IN                */\n  void          *cvtzdtab;     /* - ADDRESS OF I/O DEVICE                                */\n  void          *cvtxitp;      /* -  ADDRESS OF ERROR INTERPRETER ROUTINE                */\n  void          *cvt0ef01;     /* ENTRY POINT IN STAGE II EXIT EFFECTOR @02C             */\n  struct \u00e4\n    short int      _cvtvss;  /* VECTOR SECTION SIZE                   @D5A */\n    short int      _cvtvpsm; /* VECTOR PARTIAL SUM NUMBER             @D5A */\n    \u00fc cvtvprm;\n  short int      cvtexit;      /* -           AN SVC 3 INSTRUCTION.  EXIT TO        @PBA */\n  short int      cvtbret;      /* -           A BR 14 INSTRUCTION.  RETURN TO       @PBA */\n  void          *cvtsvdcb;     /* - ADDRESS OF THE DCB FOR THE SYS1.SVCLIB               */\n  void          *cvttpc;       /* -   ADDRESS OF THE TIMER SUPERVISOR WORK AREA          */\n  struct \u00e4\n    unsigned char  _cvtflgc0; /* -   Flags                                 @0IA */\n    unsigned char  _cvtflgc1; /* -   Flags                                 @0IA */\n    short int      _cvticpid; /* -   IPL'ED CPU PHYSICAL ID            @ZA51978 */\n    \u00fc cvtflgcs;\n  unsigned char  cvtcvt\u00c44\u00dc;    /* -   CVT ACRONYM IN EBCDIC (EYE-CATCHER)   @PCA         */\n  void          *cvtcucb;      /* -  ADDRESS OF THE UNIT CONTOL MODULE (UCM)             */\n  void          *cvtqte00;     /* - ADDRESS OF THE TIMER ENQUEUE ROUTINE FOR             */\n  void          *cvtqtd00;     /* - ADDRESS OF THE TIMER DEQUEUE ROUTINE FOR             */\n  void          *cvtstb;       /* -   ADDRESS OF THE I/O DEVICE             @LDC         */\n  unsigned char  cvtdcb;       /* -     OPERATING SYSTEM FOR                  @LGC       */\n  int            cvtdcba : 24; /* - ADDRESS OF THE DCB FOR THE SYS1.LOGREC               */\n  int            cvtsv76m;     /* -        SVC 76 MESSAGE COUNT FIELD (OS/VS2)           */\n  void          *cvtixavl;     /* - ADDRESS OF THE I/O SUPERVISOR'S FREELIST             */\n  void          *cvtnucb;      /* -        RESERVED                (MDCXXX)  @YA19285    */\n  void          *cvtfbosv;     /* - ADDRESS OF PROGRAM FETCH ROUTINE  @G860P46           */\n  void          *cvt0ds;       /* -   ADDRESS OF ENTRY POINT OF THE DISPATCHER           */\n  void          *cvtecvt;      /* -  POINTER TO THE EXTENDED CVT           @LJC          */\n  void          *cvtdairx;     /* -        ADDRESS OF THE 31- BIT ENTRY          @L4A    */\n  void          *cvtmser;      /* -  ADDRESS OF DATA AREA OF MASTER SCHEDULER            */\n  void          *cvt0pt01;     /* - ADDRESS OF BRANCH ENTRY POINT OF POST                */\n  void          *cvttvt;       /* -        ADDRESS OF TSO VECTOR TABLE       @ZA65725    */\n  int            cvt040id;     /* -        IFB040I WTO MESSAGE ID.               @09C    */\n  unsigned char  cvtmz00\u00c44\u00dc;   /* - HIGHEST ADDRESS IN VIRTUAL STORAGE FOR               */\n  void          *cvt1ef00;     /* -        ADDRESS OF ROUTINE WHICH CREATES IRB'S        */\n  void          *cvtqocr;      /* -        GRAPHICS INTERFACE TASK (GFX) FIELD.          */\n  void          *cvtqmwr;      /* -  ADDRESS OF THE ALLOCATION COMMUNICATION             */\n  short int      cvtsnctr;     /* -        SERIAL NUMBER COUNTER FOR ASSIGNING SERIAL    */\n  unsigned char  cvtopta;      /* -     OPTION INDICATORS                     @LBC       */\n  unsigned char  cvtoptb;      /* -     MISCELLANEOUS FLAGS                   @LBC       */\n  void          *cvtqcdsr;     /* - CDE SEARCH ROUTINE ADDRESS  (OS/VS2)                 */\n  void          *cvtqlpaq;     /* - ADDRESS OF POINTER TO MOST RECENT ENTRY              */\n  void          *cvtenfct;     /* EVENT NOTIFICATION CONTROL TABLE                       */\n  void          *cvtsmca;      /* -        ADDRESS OF THE SYSTEM MANAGEMENT CONTROL      */\n  void          *cvtabend;     /* -  ADDRESS OF SECONDARY CVT FOR ABEND IN EOT           */\n  void          *cvtuser;      /* -        A WORD AVAILABLE TO THE USER                  */\n  void          *cvtmdlds;     /* -        RESERVED FOR MODEL-DEPENDENT SUPPORT          */\n  short int      cvtqabst;     /* -           AN SVC 13 (ABEND) INVOCATION (OS/VS2) @PDA */\n  short int      cvtlnksc;     /* -           AN SVC  6 (LINK) INVOCATION           @PDA */\n  void          *cvttsce;      /* -        ADDRESS OF THE FIRST TIME SLICE CONTROL       */\n  void          *cvtpatch;     /* - ADDRESS OF A 200-BYTE FE PATCH AREA                  */\n  void          *cvtrms;       /* -   RECOVERY MANAGEMENT SUPPORT (RMS)                  */\n  void          *cvtspdme;     /* -        SERVICE PROCESSOR DAMAGE MONITOR  @ZA57793    */\n  void          *cvt0scr1;     /* - ADDRESS OF THE SECTOR CALCULATION ROUTINE            */\n  struct \u00e4\n    unsigned char  _cvtgtfst;     /* -      GTF FLAG BYTES                      ICB312 */\n    int            _cvtgtfa : 24; /* -ADDRESS OF MAIN MONITOR CALL ROUTING             */\n    \u00fc cvtgtf;\n  struct \u00e4\n    unsigned char  _cvttcmfg;      /* -       TCAM FLAGS            */\n    int            _cvtaqavb : 24; /* -      SAME AS CVTAQAVT ABOVE */\n    \u00fc cvtaqavt;\n  unsigned char  cvtrs0f4\u00c44\u00dc;  /* RESERVED                              @LFC             */\n  void          *cvtsaf;       /* -        ADDRESS OF ROUTER VECTOR TABLE.       @L5A    */\n  void          *cvtext1;      /* - ADDRESS OF OS - OS/VS COMMON EXTENSION               */\n  void          *cvtcbsp;      /* -        ADDRESS OF ACCESS METHOD CONTROL BLOCK        */\n  struct \u00e4\n    unsigned char  _filler1;       /* -     RESERVED - FIRST BYTE OF CVTPURG      @LFC  */\n    int            _cvtpurga : 24; /* -      ADDRESS OF SUBSYSTEM PURGE ROUTINE  ICB330 */\n    \u00fc cvtpurg;\n  unsigned char  cvtamff\u00c44\u00dc;   /* -     RESERVED FOR ACCESS METHOD FLAGS    ICB436       */\n  void          *cvtqmsg;      /* - ADDRESS OF INFORMATION TO BE      @G860P46           */\n  struct \u00e4\n    unsigned char  _cvtdmsrf;      /* -     OPEN/CLOSE/EOV FLAG BYTE.  SETTING BOTH    */\n    int            _cvtdmsra : 24; /* -      ADDRESS OF THE OPEN/CLOSE/EOV SUPERVISORY */\n    \u00fc cvtdmsr;\n  void          *cvtsfr;       /* - ADDRESS OF SETFRR ROUTINE         @G383P9A           */\n  void          *cvtgxl;       /* - ADDRESS OF CONTENTS SUPERVISION   @G860P46           */\n  void          *cvtreal;      /* -        ADDRESS OF THE VIRTUAL STORAGE    @G860P46    */\n  void          *cvtptrv;      /* -  ADDRESS OF PAGING SUPERVISOR GENERAL  @L1C          */\n  void          *cvtihvp;      /* - POINTER TO IHV$COMM. INITIALIZED TO   @06C           */\n  void          *cvtjesct;     /* - ADDRESS OF JOB ENTRY SUBSYSTEM (JES)                 */\n  unsigned char  cvtrs12c\u00c44\u00dc;  /* -     RESERVED                              @LFC       */\n  int            cvttz;        /* -        DIFFERENCE BETWEEN LOCAL TIME AND     @LBC    */\n  void          *cvtmchpr;     /* -        ADDRESS OF MACHINE CHECK PARAMETER LIST       */\n  void          *cvteorm;      /* -        POTENTIAL REAL HIGH STORAGE ADDRESS.  @LBC    */\n  void          *cvtptrv3;     /* - ADDRESS OF PAGING SUPERVISOR ROUTINE  @L1A           */\n  void          *cvtlkrm;      /* ADDRESS OF CML LOCK RESOURCE      @G860P46             */\n  struct \u00e4\n    unsigned char  _filler2;      /* -     RESERVED - FIRST BYTE OF CVTAPF       @LFC */\n    int            _cvtapfa : 24; /* ADDRESS OF BRANCH ENTRY POINT IN                 */\n    \u00fc cvtapf;\n  struct \u00e4\n    unsigned char  _filler3;       /* -     RESERVED - FIRST BYTE OF CVTEXT2      @LFC */\n    int            _cvtext2a : 24; /* SAME AS CVTEXT2 ABOVE               ICB330       */\n    \u00fc cvtext2;\n  struct \u00e4\n    unsigned char  _filler4;       /* -     RESERVED - FIRST BYTE OF CVTHJES      @LFC */\n    int            _cvthjesa : 24; /* -      ADDRESS OF OPTIONAL JOB ENTRY SUBSYSTEM   */\n    \u00fc cvthjes;\n  struct \u00e4\n    unsigned char  _cvtrstcp;    /* -     LOGICAL CPU ADDRESS OF TARGET OF  @ZA84941 */\n    unsigned char  _cvtrstrs;    /* -     RESTART REASON.                   @ZA84941 */\n    unsigned char  _filler5\u00c42\u00dc;  /* -     RESERVED FOR RESTART FLIH         @ZA84941 */\n    \u00fc cvtrstw2;\n  unsigned char  cvtsname\u00c48\u00dc;  /* SYSTEM NAME FOR CURRENT SYSTEM.                        */\n  void          *cvtgetl;      /* -        ADDRESS OF IKJGETL, TSO GET LINE ROUTINE      */\n  void          *cvtlpdsr;     /* - ADDRESS OF LINK PACK AREA (LPA) DIRECTORY            */\n  void          *cvtpvtp;      /* -  ADDRESS OF PAGE VECTOR TABLE                        */\n  struct \u00e4\n    unsigned char  _cvtdirst;      /* -       FLAG BYTE                         @ZA65734 */\n    int            _cvtlpdir : 24; /* -      ADDRESS OF LINK PACK AREA (LPA) DIRECTORY   */\n    \u00fc cvtlpdia;\n  void          *cvtrbcb;      /* -        ADDRESS OF THE RECORD BUFFER'S        @LEC    */\n  unsigned char  cvtrs170\u00c44\u00dc;  /* -     RESERVED                              @LFC       */\n  struct \u00e4\n    unsigned char  _cvtsylk;      /* -       SUPERVISOR LOCK.  ONLY ENABLED TASKS MAY  */\n    int            _cvtslid : 24; /* -      SAME AS CVTSLIDA ABOVE            @ZA65734 */\n    \u00fc cvtslida;\n  struct \u00e4\n    unsigned char  _cvtflag1; /* -     FLAG BYTE                             @0CC */\n    unsigned char  _cvtflag2; /* -     FLAG BYTE                             @0CA */\n    unsigned char  _cvtflag3; /* -     FLAG BYTE                             @0CA */\n    unsigned char  _cvtflag4; /* -     FLAG BYTE                             @0CA */\n    \u00fc cvtflags;\n  void          *cvtrt03;      /* - ADDRESS OF SRB TIMING             @G383P9A           */\n  unsigned char  cvtrs180\u00c48\u00dc;  /* - RESERVED                              @LOC           */\n  void          *cvtexsnr;     /* - ADDRESS OF EXCESSIVE SPIN NOTIFICATION               */\n  unsigned char  cvtexsnl;     /* -     SERIALIZATION BYTE FOR EXCESSIVE SPIN            */\n  unsigned char  cvtspvlk;     /* -      NUMBER OF TASKS WHICH HAVE TERMINATED           */\n  unsigned char  cvtctlfg;     /* -     SYSTEM CONTROL FLAGS                  @LBC       */\n  char           cvtapg;       /* -      DISPATCHING PRIORITY OF AUTOMATIC PRIORITY      */\n  unsigned char  cvttrace\u00c42\u00dc;  /* -          RESERVED             @(DCR670)    @G860P46  */\n  unsigned char  cvttrac2\u00c42\u00dc;  /* -          RESERVED             @(DCR670)    @G860P46  */\n  void          *cvtrscn;      /* - ADDRESS OF ROUTINE TO SCAN TCB TREE                  */\n  void          *cvttas;       /* -        ADDRESS OF ROUTINE TO TRANSFER ADDRESS        */\n  void          *cvttrcrm;     /* -        ADDRESS POINTER OF THE SYSTEM     @G860P46    */\n  void          *cvtshrvm;     /* -        LOWEST ADDRESS OF SHARED VIRTUAL STORAGE      */\n  void          *cvt0vl01;     /* - ENTRY POINT ADDRESS OF VALIDITY CHECK                */\n  void          *cvtppgmx;     /* -  ADDRESS POINTER FOR MVS/370-XA.   @G860P46          */\n  unsigned char  cvtgrsst;     /* -     GRS status. SERIALIZATION: None.      @0DA       */\n  unsigned char  cvtrs1ad\u00c43\u00dc;  /* -     Reserved                              @0DC       */\n  void          *cvtgvt;       /* -      ADDRESS OF THE GRS VECTOR TABLE   @G383P9A      */\n  void          *cvtascrf;     /* -        CREATED ASCB QUEUE HEADER                     */\n  void          *cvtascrl;     /* -        CREATED ASCB QUEUE TRAILER                    */\n  void          *cvtputl;      /* -        ADDRESS OF IKJPUTL, TSO PUT LINE ROUTINE      */\n  void          *cvtsrbrt;     /* - DISPATCHER RETURN ADDRESS FOR SRB ROUTINES           */\n  void          *cvtolt0a;     /* - BRANCH ENTRY TO OLTEP MEMORY TERMINATION             */\n  void          *cvtsmfex;     /* - BRANCH ENTRY TO SYSTEM MANAGEMENT                    */\n  void          *cvtcspie;     /* -        ENTRY POINT ADDRESS OF THE SUPERVISOR         */\n  void          *cvtptgt;      /* -        ADDRESS OF IKJPTGT, TSO PUTGET ROUTINE        */\n  unsigned char  cvtsigpt;     /* -     SIGP TIMEOUT VALUE.                   @07A       */\n  unsigned char  cvtspdmc;     /* -     SERVICE PROCESSOR DAMAGE MACHINE  @ZA57793       */\n  unsigned char  cvtdssac;     /* -     DYNAMIC SUPPORT SYSTEM (DSS) ACTIVATED           */\n  unsigned char  cvtrs1d7;     /* -     RESERVED                              @LFC       */\n  void          *cvtstck;      /* -        ADDRESS OF IKJSTCK, TSO STACK ROUTINE         */\n  short int      cvtmaxmp;     /* -        MAXIMUM PHYSICAL CPU ADDRESS      @G860P46    */\n  unsigned char  cvtbsm2\u00c42\u00dc;   /* -     RETURN VIA REG 2, BSM 0,2.            @L4A       */\n  void          *cvtscan;      /* -        ADDRESS OF IKJSCAN, TSO SCAN ROUTINE          */\n  void          *cvtauthl;     /* -        POINTER TO AUTHORIZED LIBRARY TABLE.  @LWC    */\n  void          *cvtbldcp;     /* - BRANCH ENTRY TO BUILD POOL          MDC003           */\n  void          *cvtgetcl;     /* - BRANCH ENTRY TO GET CELL            MDC004           */\n  void          *cvtfrecl;     /* - BRANCH ENTRY TO FREE CELL           MDC005           */\n  void          *cvtdelcp;     /* - BRANCH ENTRY TO DELETE POOL         MDC006           */\n  void          *cvtcrmn;      /* - BRANCH ENTRY TO SVC 120 (GETMAIN/FREEMAIN            */\n  void          *cvtcras;      /* - POINTER DEFINED ADDRESS OF BRANCH  @G860PVB          */\n  void          *cvtqsas;      /* - POINTER DEFINED ADDRESS OF        @G860PVB           */\n  void          *cvtfras;      /* - POINTER DEFINED ENTRY TO TASK      @G860PVB          */\n  void          *cvts1ee;      /* - BRANCH ENTRY TO STAGE 1 EXIT EFFECTOR                */\n  void          *cvtpars;      /* -        ADDRESS OF IKJPARS, TSO PARSE ROUTINE         */\n  void          *cvtquis;      /* - BRANCH ENTRY TO QUIESCE             MDC013           */\n  void          *cvtstxu;      /* -        BRANCH ENTRY TO ATTENTION EXIT EPILOGUE       */\n  void          *cvtopte;      /* - BRANCH ENTRY ADDRESS TO SYSEVENT    MDC015           */\n  void          *cvtsdrm;      /* -        BRANCH ENTRY ADDRESS OF THE RESOURCE          */\n  void          *cvtcsrt;      /* - POINTER TO CALLABLE SERVICE REQUEST   @D9C           */\n  void          *cvtaqtop;     /* - POINTER TO THE ALLOCATION QUEUE   @G860P46           */\n  void          *cvtvvmdi;     /* -        CONSTANT USED BY PAGED LINK PACK AREA         */\n  void          *cvtasvt;      /* -        POINTER TO ADDRESS SPACE VECTOR TABLE         */\n  void          *cvtgda;       /* -        POINTER TO GLOBAL DATA AREA (GDA) IN SQA      */\n  void          *cvtascbh;     /* - POINTER TO HIGHEST PRIORITY ADDRESS SPACE            */\n  void          *cvtascbl;     /* - POINTER TO LOWEST PRIORITY ASCB ON THE               */\n  void          *cvtrtmct;     /* -        POINTER TO RECOVERY/TERMINATION CONTROL       */\n  void          *cvtsv60;      /* - BRANCH ENTRY ADDRESS FOR              @D8C           */\n  void          *cvtsdmp;      /* - ADDRESS OF SVC DUMP BRANCH        @G860P46           */\n  void          *cvtscbp;      /* - ADDRESS OF SCB PURGE RESOURCE     @G860P46           */\n  unsigned char  cvtsdbf\u00c44\u00dc;   /* - ADDRESS OF 4K SQA BUFFER USED BY SVC                 */\n  void          *cvtrtms;      /* -        ADDRESS OF SERVICABILITY LEVEL INDICATOR      */\n  void          *cvttpios;     /* -        ADDRESS OF THE TELEPROCESSING I/O             */\n  void          *cvtsic;       /* -        BRANCH ADDRESS OF THE ROUTINE TO SCHEDULE     */\n  void          *cvtopctp;     /* - ADDRESS OF SYSTEM RESOURCES MANAGER (SRM)            */\n  void          *cvtexpro;     /* - ADDRESS OF EXIT PROLOGUE/TYPE 1 EXIT                 */\n  void          *cvtgsmq;      /* -  ADDRESS OF GLOBAL SERVICE MANAGER QUEUE             */\n  void          *cvtlsmq;      /* -  ADDRESS OF LOCAL SERVICE MANAGER QUEUE              */\n  unsigned char  cvtrs26c\u00c44\u00dc;  /* -  RESERVED.                             @LZC          */\n  void          *cvtvwait;     /* - ADDRESS OF WAIT ROUTINE             MDC048           */\n  void          *cvtparrl;     /* - ADDRESS OF PARTIALLY LOADED       @G860P46           */\n  void          *cvtapft;      /* -        ADDRESS OF AUTHORIZED PROGRAM FACILITY        */\n  void          *cvtqcs01;     /* - BRANCH ENTRY ADDRESS TO PROGRAM MANAGER              */\n  int            cvtfqcb;      /* -        FORMERLY USED BY ENQ/DEQ.         @G383P9A    */\n  int            cvtlqcb;      /* -        FORMERLY USED BY ENQ/DEQ.         @G383P9A    */\n  void          *cvtrenq;      /* - RESOURCE MANAGER ADDRESS FOR ENQ  @G860P46           */\n  void          *cvtrspie;     /* -  RESOURCE MANAGER FOR              @G860P46          */\n  void          *cvtlkrma;     /* - RESOURCE MANAGER ADDRESS FOR LOCK @G860P46           */\n  void          *cvtcsd;       /* -        VIRTUAL ADDRESS OF COMMON SYSTEM DATA AREA    */\n  void          *cvtdqiqe;     /* - RESOURCE MANAGER FOR EXIT         @G860P46           */\n  void          *cvtrpost;     /* - RESOURCE MANAGER FOR POST.        @G860P46           */\n  void          *cvt062r1;     /* - BRANCH ENTRY TO DETACH              MDC060           */\n  void          *cvtveac0;     /* - ASCBCHAP BRANCH ENTRY               MDC061           */\n  void          *cvtglmn;      /* - GLOBAL BRANCH ENTRY ADDRESS FOR                      */\n  void          *cvtspsa;      /* - POINTER TO GLOBAL WORK/SAVE AREA VECTOR              */\n  void          *cvtwsal;      /* - ADDRESS OF TABLE OF LENGTHS OF LOCAL                 */\n  void          *cvtwsag;      /* - ADDRESS OF TABLE OF LENGTHS OF GLOBAL                */\n  void          *cvtwsac;      /* - ADDRESS OF TABLE OF LENGTHS OF CPU                   */\n  void          *cvtrecrq;     /* - ADDRESS OF THE RECORDING REQUEST  @G860P46           */\n  void          *cvtasmvt;     /* -    POINTER TO AUXILIARY STORAGE MANAGEMENT           */\n  void          *cvtiobp;      /* - ADDRESS OF THE BLOCK PROCESSOR CVT                   */\n  void          *cvtspost;     /* - POST RESOURCE MANAGER TERMINATION ROUTINE            */\n  struct \u00e4\n    short int      _cvtrstci;    /* -        CPU ID OF THE CPU HOLDING THE     @ZA84941 */\n    unsigned char  _cvtrstri\u00c42\u00dc; /* -     IDENTIFIER OF OWNING ROUTINE      @ZA84941    */\n    \u00fc cvtrstwd;\n  void          *cvtfetch;     /* - ADDRESS OF ENTRY POINT FOR BASIC  @G860P46           */\n  void          *cvt044r2;     /* - ADDRESS OF IGC044R2 IN CHAP SERVICE                  */\n  void          *cvtperfm;     /* -        ADDRESS OF THE PERFORMANCE WORK AREA.         */\n  void          *cvtdair;      /* -        ADDRESS OF IKJDAIR, TSO DYNAMIC               */\n  void          *cvtehdef;     /* -        ADDRESS OF IKJEHDEF, TSO DEFAULT  @G860P46    */\n  void          *cvtehcir;     /* -        ADDRESS OF IKJEHCIR, TSO CATALOG  @G860P46    */\n  void          *cvtssap;      /* -        ADDRESS OF SYSTEM SAVE AREA       @ZA65734    */\n  void          *cvtaidvt;     /* -        POINTER TO APPENDAGE ID VECTOR TABLE          */\n  void          *cvtipcds;     /* - BRANCH ENTRY FOR DIRECT SIGNAL                       */\n  void          *cvtipcri;     /* - BRANCH ENTRY FOR REMOTE IMMEDIATE                    */\n  void          *cvtipcrp;     /* - BRANCH ENTRY FOR REMOTE PENDABLE                     */\n  void          *cvtpccat;     /* -        POINTER TO PHYSICAL CCA VECTOR TABLE          */\n  void          *cvtlccat;     /* -        POINTER TO LOGICAL CCA VECTOR TABLE           */\n  void          *cvtxsft;      /* - ADDRESS OF SYSTEM FUNCTION TABLE  @G383P9A           */\n  void          *cvtxstks;     /* - ADDRESS OF PCLINK STACK           @G383P9A           */\n  void          *cvtxstkn;     /* - ADDRESS OF PCLINK STACK (SAVE=NO) @G383P9A           */\n  void          *cvtxunss;     /* - ADDRESS OF PCLINK UNSTACK         @G383P9A           */\n  void          *cvtpwi;       /* -        ADDRESS OF THE WINDOW INTERCEPT ROUTINE       */\n  void          *cvtpvbp;      /* -        ADDRESS OF THE VIRTUAL BLOCK PROCESSOR        */\n  void          *cvtmfctl;     /* -        POINTER TO MEASUREMENT FACILITY CONTROL       */\n  void          *cvtmfrtr;     /* -  IF MEASUREMENT FACILITY IS ACTIVE,                  */\n  void          *cvtvpsib;     /* - BRANCH ENTRY TO PAGE SERVICES     @G860PVB           */\n  void          *cvtvsi;       /* - POINTER DEFINED, BRANCH ENTRY     @G860P46           */\n  void          *cvtexcl;      /* - ADDRESS POINTER TO THE EXCP           @D3A           */\n  void          *cvtxunsn;     /* - ADDRESS OF PCLINK UNSTACK         @G383P9A           */\n  void          *cvtisnbr;     /* - ENTRY POINT ADDRESS OF DISABLED       @LLA           */\n  void          *cvtxextr;     /* - ADDRESS OF PCLINK EXTRACT ROUTINE                    */\n  void          *cvtmsfrm;     /* - ADDRESS OF THE PROCESSOR          @G860P46           */\n  void          *cvtscpin;     /* -        ADDRESS OF SCPINFO DATA           @G871A9A    */\n  void          *cvtwsma;      /* ADDRESS OF WAIT STATE MESSAGE AREA    @LLC             */\n  void          *cvtrmbr;      /* - ADDRESS OF REGMAIN BRANCH ENTRY.    MDC123           */\n  void          *cvtlfrm;      /* - LIST FORMAT FREEMAIN BRANCH ENTRY   MDC124           */\n  void          *cvtgmbr;      /* - LIST FORMAT GETMAIN BRANCH ENTRY    MDC125           */\n  void          *cvt0tc0a;     /* -        ADDRESS OF TASK CLOSE MODULE        MDC128    */\n  int            cvtrlstg;     /* -        SIZE OF ACTUAL REAL STORAGE ONLINE  @0GC      */\n  void          *cvtspfrr;     /* - 'SUPER FRR' ADDRESS (ADDRESS OF   @G860P46           */\n  unsigned char  cvtrs360\u00c44\u00dc;  /* - RESERVED.                             @LZC           */\n  void          *cvtsvt;       /* - ADDRESS POINTER FOR FETCH                            */\n  void          *cvtirecm;     /* -        ADDRESS OF INITIATOR RESOURCE       MDC158    */\n  void          *cvtdarcm;     /* -        ADDRESS OF DEVICE ALLOCATION        MDC159    */\n  void          *cvt0pt02;     /* - ADDRESS OF POST ENTRY POINT         MDC160           */\n  unsigned char  cvtrs374\u00c44\u00dc;  /* RESERVED                              @LOC             */\n  void          *cvtwtcb;      /* -  ADDRESS OF WAIT STATE TCB.          MDC164          */\n  void          *cvtvacr;      /* -        ACR/VARY CPU CHANNEL RECOVERY       MDC178    */\n  void          *cvtrecon;     /* -        VARY CPU SHUTDOWN ROUTINE         @G860PVB    */\n  void          *cvtgtfr8;     /* - GENERALIZED TRACE FACILITY (GTF)    MDC180           */\n  void          *cvtvstop;     /* - ADDRESS OF VARY CPU STOP CPU        MDC169           */\n  void          *cvtvpsa;      /* -        ADDRESS OF COPY OF SYSGEN'ED PSA -  MDC170    */\n  void          *cvtrmptt;     /* -        ADDRESS OF ISTRAMA1, THE VTAM     @Z30AP9A    */\n  void          *cvtrmpmt;     /* -        ADDRESS OF ISTRAMA2, THE VTAM     @Z30AP9A    */\n  void          *cvtexp1;      /* - ADDRESS OF EXIT PROLOGUE WHICH      MDC173           */\n  void          *cvtcsdrl;     /* -        REAL ADDRESS OF COMMON SYSTEM DATA  MDC174    */\n  void          *cvtssrb;      /* - STATUS STOP SRB ENTRY.              MDC175           */\n  unsigned char  cvtrs3a4\u00c44\u00dc;  /* -     RESERVED                              @LFC       */\n  void          *cvtqv1;       /* - ADDRESS OF QUEUE VERIFICATION FOR   MDC181           */\n  void          *cvtqv2;       /* - ADDRESS OF QUEUE VERIFICATION FOR   MDC182           */\n  void          *cvtqv3;       /* - ADDRESS OF QUEUE VERIFICATION FOR   MDC183           */\n  void          *cvtgsda;      /* - ADDRESS OF GLOBAL SYSTEM DUPLEX       @L7C           */\n  void          *cvtadv;       /* - ADDRESS OF ADDRESS VERIFICATION     MDC186           */\n  void          *cvttpio;      /* -   ADDRESS OF VTAM TPIO (SVC 124)      MDC193         */\n  unsigned char  cvtrs3c0\u00c44\u00dc;  /* -     RESERVED                              @LFC       */\n  void          *cvtevent;     /* - BRANCH ENTRY ADDRESS TO EVENTS    @G860P46           */\n  void          *cvtsscr;      /* -        ADDRESS OF STORAGE SYSTEM         @Z30LP9A    */\n  void          *cvtcbbr;      /* - BRANCH ENTRY ADDRESS TO           @Z30EN9A           */\n  void          *cvteff02;     /* -        ADDRESS OF IKJEFF02, TSO MESSAGE  @ZM30972    */\n  void          *cvtlsch;      /* - ADDRESS OF LOCAL SCHEDULE.        @G50EP9A           */\n  void          *cvtcdeq;      /* -        ADDRESS OF PROGRAM MANAGER        @G50EP9A    */\n  void          *cvthsm;       /* -        POINTER TO HIERARCHICAL STORAGE   @ZA27771    */\n  void          *cvtrac;       /* -        ADDRESS OF ACCESS CONTROL CVT.    @Z40RP9A    */\n  void          *cvtcgk;       /* -  ADDRESS OF ROUTINE USED TO CHANGE @G860P46          */\n  void          *cvtsrm;       /* - ADDRESS OF ENTRY TABLE FOR SRM,   @G50IP9A           */\n  void          *cvt0pt0e;     /* - ENTRY POINT TO IDENTIFY POST EXIT @Z40EP9A           */\n  void          *cvt0pt03;     /* - POST REINVOCATION ENTRY POINT     @Z40EP9A           */\n  void          *cvttcasp;     /* -        POINTER TO THE TSO/VTAM TERMINAL  @Z40DQ9A    */\n  void          *cvtcttvt;     /* -        CTT VT                                @PVC    */\n  void          *cvtjterm;     /* - POINTER DEFINED ADDRESS OF        @G860PVB           */\n  void          *cvtrsume;     /* - ADDRESS OF RESUME FUNCTION.       @G383P9A           */\n  void          *cvttctl;      /* - ADDRESS OF TRANSFER CONTROL       @Z40FP9A           */\n  void          *cvtrmt;       /* -        ADDRESS OF RESOURCE MANAGER           @LGC    */\n  void          *cvtt6svc;     /* - ENTRY POINT ADDRESS FOR TYPE 6    @Z40FP9A           */\n  void          *cvtsusp;      /* - ADDRESS OF SUSPEND ROUTINE.       @Z40FP9A           */\n  void          *cvtihasu;     /* - ADDRESS OF BIT STRING.  (MDC355)  @Z404P9A           */\n  void          *cvtsfv;       /* - ADDRESS OF SETFRR ROUTINE ABOVE 16M   @N3A           */\n  void          *cvtidevn;     /* - ADDRESS OF DEVICE NUMBER CONVERSION   @LGC           */\n  void          *cvtsmf83;     /* -        ADDRESS OF BRANCH ENTRY TO        @G741P9A    */\n  void          *cvtsmfsp;     /* - ADDRESS OF SMF SUSPEND HANDLER.   @G860P46           */\n  void          *cvtmsfcb;     /* -        ADDRESS OF MAINTENANCE AND        @G871A9A    */\n  void          *cvthid;       /* -  ADDRESS OF SCP HOST ID. @(DCR819) @G860P46          */\n  void          *cvtpsxm;      /* - ADDRESS OF CROSS MEMORY PAGE      @G860PVB           */\n  void          *cvtucbsc;     /* - ADDRESS OF UCB SCAN               @G860P46           */\n  void          *cvttpur;      /* -        DDR QUEUE OF TAPE UNIT-RECORD         @L2A    */\n  void          *cvtdpur;      /* -        DDR QUEUE OF DASD SWAP REQUESTS.      @L2A    */\n  void          *cvttrpos;     /* -        DDR QUEUE OF TAPES TO BE              @L2A    */\n  void          *cvtrestx;     /* - VIRTUAL ADDRESS OF TEXT TO BE         @L2A           */\n  short int      cvtxcpct;     /* -      MAXIMUM EXCP COUNT PER ADDRESS        @L2A      */\n  short int      cvtcall;      /* -           A BASSM 14,15 INSTRUCTION.  POINTER   @PDA */\n  void          *cvtvfind;     /* - THE POINTER TO VIRTUAL FETCH BUILD    @L8A           */\n  void          *cvtvfget;     /* - THE POINTER TO VIRTUAL FETCH GET      @L8A           */\n  void          *cvtvfmem;     /* RESERVED. THIS FIELD IS NO LONGER    @MLC              */\n  void          *cvtvfcb;      /* -        THE POINTER TO VIRTUAL FETCH INTERNAL @L8A    */\n  void          *cvtpgser;     /* - POINTER DEFINED ADDRESS OF ENTRY   @G860P46          */\n  void          *cvttski;      /* - POINTER DEFINED ADDRESS OF TASK   @G860PVB           */\n  void          *cvtcpgub;     /* - POINTER DEFINED ADDRESS OF CPOOL  @G860PVB           */\n  void          *cvtcpgup;     /* - POINTER DEFINED ADDRESS OF CPOOL  @G860PVB           */\n  void          *cvtcpgtc;     /* - POINTER DEFINED ADDRESS OF GET    @G860PVB           */\n  void          *cvtcpfre;     /* - POINTER DEFINED ADDRESS OF CPOOL  @G860PVB           */\n  void          *cvtslist;     /* - POINTER DEFINED ADDRESS OF VSM    @G860PVB           */\n  void          *cvtsregn;     /* - POINTER DEFINED ADDRESS OF VSM    @G860PVB           */\n  void          *cvtsloc;      /* - POINTER DEFINED ADDRESS OF VSM     @G860PVB          */\n  void          *cvtcpbdb;     /* - POINTER DEFINED ADDRESS OF CPOOL  @G860PVB           */\n  void          *cvtcpdlb;     /* - POINTER DEFINED ADDRESS OF CPOOL  @G860PVB           */\n  void          *cvtdoffs;     /* -        STARTING REAL ADDRESS OF DAT-OFF  @G860PVB    */\n  void          *cvtdoffe;     /* -        ENDING REAL ADDRESS OF DAT-OFF    @G860PVB    */\n  void          *cvtrcep;      /* - ADDRESS OF THE RSM CONTROL AND    @G860PVB           */\n  void          *cvtcpgus;     /* - ADDRESS OF CPOOL GET              @G860P46           */\n  void          *cvtgrrgn;     /* - POINTER DEFINED ADDRESS OF GET    @G860PVB           */\n  void          *cvtgvrgn;     /* - POINTER DEFINED ADDRESS OF GET    @G860PVB           */\n  unsigned char  cvtionlv;     /* -     DEFAULT VALUE OF                  @G860P46       */\n  unsigned char  cvtrs4a1\u00c43\u00dc;  /* -     RESERVED                              @LFC       */\n  unsigned char  cvtrczrt\u00c42\u00dc;  /* -       SET REGISTER 15 TO ZERO.          @G860PVB     */\n  unsigned char  _filler6\u00c42\u00dc;  /* -   RETURN VIA A BSM.                 @G860PVB         */\n  unsigned char  cvtfunc\u00c44\u00dc;   /* -     Reserved for solution/offering use.   @M6A       */\n  void          *cvtsmext;     /* - ADDRESS OF STORAGE MAP EXTENSION. @G860PVB           */\n  void          *cvtnucmp;     /* -        ADDRESS OF NUCLEUS MAP.           @G860PVB    */\n  unsigned char  cvtxafl;      /* -     FLAG BYTE FOR MVS/XA PROCESSING.  @G860P46       */\n  unsigned char  cvtrs4b5\u00c43\u00dc;  /* -     RESERVED                              @LFC       */\n  void          *cvtvtam;      /* -        ADDRESS OF VTAM COMMAND PROCESSOR @G860P46    */\n  void          *cvtspip;      /* -        ADDRESS OF RTM INTERFACE TO       @ZA65734    */\n  struct \u00e4\n    void          *_cvtdfa; /* - ADDRESS OF DFP ID TABLE, MAPPED BY    @P8A */\n    \u00fc cvtckras;\n  void          *cvtnvt0;      /* - ADDRESS OF DATA IN DAT-ON NUCLEUS @G860P46           */\n  void          *cvtcsomf;     /* -        OWNER OF CHANNEL MEASUREMENT      @G860P46    */\n  void          *cvtcsoal;     /* -        OWNER OF ADDRESS LIMIT FACILITY.  @G860P46    */\n  void          *cvtichpt;     /* -        ADDRESS OF THE INSTALLED CHANNEL  @G860P46    */\n  void          *cvtcsocr;     /* -        CHANNEL SUBSYSTEM OWNER - CHANNEL @G860P46    */\n  void          *cvtcsocs;     /* -        CHANNEL SUBSYSTEM OWNER - CHANNEL @G860P46    */\n  void          *cvtllta;      /* -        LINK LIST TABLE ADDRESS.          @G860P46    */\n  void          *cvtdcqa;      /* -   ADDRESS OF DEVICE CLASS QUEUE         @LDC         */\n  void          *cvtucba;      /* -   ADDRESS OF THE FIRST UCB IN THE       @LDC         */\n  void          *cvtvestu;     /* - ADDRESS OF THE ENTRY POINT OF THE @G860P46           */\n  void          *cvtnuclu;     /* - ADDRESS TO SUPPORT THE NUCLEUS    @G860P46           */\n  struct \u00e4\n    unsigned char  _cvtoslv0; /* BYTE 0 OF CVTOSLVL                    @LRC */\n    unsigned char  _cvtoslv1; /* BYTE 1 OF CVTOSLVL                    @MBC */\n    unsigned char  _cvtoslv2; /* BYTE 2 OF CVTOSLVL                    @PTC */\n    unsigned char  _cvtoslv3; /* BYTE 3 OF CVTOSLVL                    @N5C */\n    unsigned char  _cvtoslv4; /* BYTE 4 OF CVTOSLVL                    @H5C */\n    unsigned char  _cvtoslv5; /* BYTE 5 OF CVTOSLVL                    @N2C */\n    unsigned char  _cvtoslv6; /* BYTE 6 OF CVTOSLVL                    @LGA */\n    unsigned char  _cvtoslv7; /* BYTE 7 OF CVTOSLVL                    @LGA */\n    unsigned char  _cvtoslv8; /* BYTE 8 OF CVTOSLVL                    @0MC */\n    unsigned char  _cvtoslv9; /* BYTE 9 OF CVTOSLVL                    @LGA */\n    unsigned char  _cvtoslva; /* BYTE 10 OF CVTOSLVL                   @LGA */\n    unsigned char  _cvtoslvb; /* BYTE 11 OF CVTOSLVL                   @LGA */\n    unsigned char  _cvtoslvc; /* BYTE 12 OF CVTOSLVL                   @LGA */\n    unsigned char  _cvtoslvd; /* BYTE 13 OF CVTOSLVL                   @LGA */\n    unsigned char  _cvtoslve; /* BYTE 14 OF CVTOSLVL                   @LGA */\n    unsigned char  _cvtoslvf; /* BYTE 15 OF CVTOSLVL                   @LGA */\n    \u00fc cvtoslvl;\n  \u00fc;\n\n#define cvtvss   cvtvprm._cvtvss\n#define cvtvpsm  cvtvprm._cvtvpsm\n#define cvtflgc0 cvtflgcs._cvtflgc0\n#define cvtflgc1 cvtflgcs._cvtflgc1\n#define cvticpid cvtflgcs._cvticpid\n#define cvtgtfst cvtgtf._cvtgtfst\n#define cvtgtfa  cvtgtf._cvtgtfa\n#define cvttcmfg cvtaqavt._cvttcmfg\n#define cvtaqavb cvtaqavt._cvtaqavb\n#define cvtpurga cvtpurg._cvtpurga\n#define cvtdmsrf cvtdmsr._cvtdmsrf\n#define cvtdmsra cvtdmsr._cvtdmsra\n#define cvtapfa  cvtapf._cvtapfa\n#define cvtext2a cvtext2._cvtext2a\n#define cvthjesa cvthjes._cvthjesa\n#define cvtrstcp cvtrstw2._cvtrstcp\n#define cvtrstrs cvtrstw2._cvtrstrs\n#define cvtdirst cvtlpdia._cvtdirst\n#define cvtlpdir cvtlpdia._cvtlpdir\n#define cvtsylk  cvtslida._cvtsylk\n#define cvtslid  cvtslida._cvtslid\n#define cvtflag1 cvtflags._cvtflag1\n#define cvtflag2 cvtflags._cvtflag2\n#define cvtflag3 cvtflags._cvtflag3\n#define cvtflag4 cvtflags._cvtflag4\n#define cvtrstci cvtrstwd._cvtrstci\n#define cvtrstri cvtrstwd._cvtrstri\n#define cvtdfa   cvtckras._cvtdfa\n#define cvtoslv0 cvtoslvl._cvtoslv0\n#define cvtoslv1 cvtoslvl._cvtoslv1\n#define cvtoslv2 cvtoslvl._cvtoslv2\n#define cvtoslv3 cvtoslvl._cvtoslv3\n#define cvtoslv4 cvtoslvl._cvtoslv4\n#define cvtoslv5 cvtoslvl._cvtoslv5\n#define cvtoslv6 cvtoslvl._cvtoslv6\n#define cvtoslv7 cvtoslvl._cvtoslv7\n#define cvtoslv8 cvtoslvl._cvtoslv8\n#define cvtoslv9 cvtoslvl._cvtoslv9\n#define cvtoslva cvtoslvl._cvtoslva\n#define cvtoslvb cvtoslvl._cvtoslvb\n#define cvtoslvc cvtoslvl._cvtoslvc\n#define cvtoslvd cvtoslvl._cvtoslvd\n#define cvtoslve cvtoslvl._cvtoslve\n#define cvtoslvf cvtoslvl._cvtoslvf\n\n/* Values for field \"cvtflgc0\" */\n#define cvtmulnf        0x80 /* -   For users of IFAUSAGE, REQUEST=FUNCTIONxxx     */\n\n/* Values for field \"cvtdcb\" */\n#define cvtmvse         0x80 /* -       S/370-XA MODE EXECUTION           @G860PVB */\n#define cvt1sss         0x40 /* -       OPTION 1 (PCP) SSS. ALSO, LANGUAGE    @H3C */\n#define cvt2sps         0x20 /* -       OPTION 2 (MFT) SPS, OS/VS1, VSE       @PHC */\n#define cvt4ms1         0x10 /* -       OPTION 4 (MVT) MS1, OS/VS2                 */\n#define cvtosext        0x08 /* -       INDICATOR THAT THE CVTOSLVL AREA IS   @LGA */\n#define cvt4mps         0x04 /* -       MODEL 65 MULTIPROCESSING                   */\n#define cvt6dat         0x02 /* -       DYNAMIC ADDRESS TRANSLATION BY CPU         */\n#define cvtmvs2         0x01 /* -       MULTIPLE MEMORY OPTION OF OS/VS2 IS        */\n#define cvt8aos2        0x12 /* - OS/VS2 SYSTEM                                    */\n\n/* Values for field \"cvtopta\" */\n#define cvtcch          0x80 /* -       CHANNEL CHECK HANDLER (CCH) OPTION PRESENT */\n#define cvtapr          0x40 /* -       ALTERNATE PATH RETRY (APR) OPTION PRESENT  */\n#define cvtddr          0x20 /* -       DYNAMIC DEVICE RECONFIGURATION (DDR)       */\n#define cvtnip          0x10 /* -       NIP IS EXECUTING                           */\n#define cvt121tr        0x04 /* - DO NOT TRANSLATE EXCP V=R.        @ZA45816       */\n#define cvtascii        0x02 /* -       ASCII TAPE PROCESSING IS GENERATED IN      */\n#define cvtxpfp         0x01 /* -       CPU HAS EXTENDED PRECISION FLOATING POINT  */\n\n/* Values for field \"cvtoptb\" */\n#define cvtprot         0x80 /* -       CPU HAS STORE PROTECTION FEATURE (OS/VS1)  */\n#define cvtctims        0x40 /* -       IF ON, HARDWARE HAS THE CLOCK COMPARATOR   */\n#define cvttod          0x20 /* -       CPU HAS TIME-OF-DAY CLOCK FEATURE          */\n#define cvtnlog         0x10 /* -       SYS1.LOGREC IS UNAVAILABLE FOR ERROR       */\n#define cvtapthr        0x08 /* -       NIP SETS THIS BIT TO 1 WHEN DEVICE TESTING */\n#define cvtfp           0x04 /* -       CPU HAS FETCH PROTECTION FEATURE (OS/VS1)  */\n#define cvtvs1a         0x02 /* -       VS1 ASSIST IS AVAILABLE FOR USE (OS/VS1)   */\n#define cvtvs1b         0x01 /* -       VS1 ASSIST SUBSET IS AVAILABLE FOR USE     */\n\n/* Values for field \"cvtgtfst\" */\n#define cvtgtfav        0x80 /* -       IF ZERO, GTF NOT ACTIVE.  IF ONE, GTF      */\n#define cvtspd          0x40 /* -       SERVICE PROCESSOR DAMAGE.         @ZA57793 */\n#define cvtwspr         0x20 /* -       WAITING FOR SERVICE PROCESSOR     @ZA57793 */\n#define cvtusr          0x04 /* -       TRACE=USR SPECIFIED.  USER-REQUESTED TRACE */\n#define cvtrnio         0x02 /* -       GTF IS ACTIVE AND TRACING RNIO EVENTS      */\n\n/* Values for field \"cvttcmfg\" */\n#define cvttcrdy        0x80 /* -       TCAM IS READY TO ACCEPT USERS              */\n#define cvtldev         0x40 /* -       LOCAL DEVICE ATTACHED TO TCAM              */\n#define cvtnwtcm        0x20 /* -       MULTIPLE TCAM FEATURE ACTIVE.         @D1A */\n\n/* Values for field \"cvtdmsrf\" */\n#define cvtsdump        0x80 /* -       SET BY COREZAP.  WILL CAUSE AN SDUMP TO BE */\n#define cvtudump        0x40 /* -       SET BY COREZAP.  WILL CAUSE AN ABEND DUMP  */\n\n/* Values for field \"cvtdirst\" */\n#define cvtdicom        0x80 /* -       LPA DIRECTORY HAS BEEN INITIALIZED BY NIP  */\n\n/* Values for field \"cvtsylk\" */\n#define cvtsylks        0xFF /* -       SET LOCK BYTE                              */\n#define cvtsylkr        0x00 /* -       RESET LOCK BYTE                            */\n\n/* Values for field \"cvtflag1\" */\n#define cvtrsmwd        0x80 /* -       IF ONE REAL STORAGE MANAGER WINDOW    @L1A */\n#define cvtsvprc        0x40 /* -       SERVICE PROCESSOR ARCHITECTURE        @H3C */\n#define cvtcuse         0x20 /* -       CUSE. SET BY NIP                      @03A */\n#define cvtmvpg         0x10 /* -       IF ONE, MOVEPAGE CAPABILITY IS        @LIA */\n#define cvtover         0x08 /* -       SUBPOOL OVERRIDE IS SUPPORTED.        @LRA */\n#define cvtcstr         0x04 /* -       IF ONE, CSTRING FACILITY IS PRESENT   @DCA */\n#define cvtsubsp        0x02 /* -       IF ONE, SUBSPACE FACILITY IS PRESENT  @LVA */\n#define cvtkpar         0x01 /* -       RESERVED FOR USE BY RTM ONLY.         @M2A */\n\n/* Values for field \"cvtflag2\" */\n#define cvtcmpsc        0x80 /* -       IF ONE, INDICATES PRESENCE OF MVS     @0CA */\n#define cvtcmpsh        0x40 /* -       IF ONE, INDICATES PRESENCE OF CMPSC   @0CA */\n#define cvtsopf         0x20 /* -       IF ONE, INDICATES PRESENCE OF THE     @M9A */\n#define cvtbfph         0x10 /* -       If one, indicates presence of              */\n#define cvtper2         0x08 /* -       If one, indicates presence of              */\n#define cvtiqd          0x04 /* -       If one, indicates that Internal       @MRC */\n#define cvtalr          0x02 /* -       If one, indicates ASN and LX Reuse    @MXA */\n\n/* Values for field \"cvtflag3\" */\n#define cvtesame        0x80 /* -                                                  */\n#define cvtzarch        0x80 /* -       If one, indicates presence of              */\n\n/* Values for field \"cvtflag4\" */\n#define cvtp001i        0x80 /* If one, indicates that P001 support                */\n#define cvtp001a        0x40 /* If one, indicates that the system is               */\n#define cvtznalc        0x20 /* zNALC                                 @0JA         */\n\n/* Values for field \"cvtctlfg\" */\n#define cvtdstat        0x10 /* -       DEVSTAT OPTION IN EFFECT.  DEVICE ADDRESS  */\n#define cvtdrmod        0x08 /* -       Set on when DRMODE=YES was specified. @MZA */\n#define cvtnomp         0x04 /* -       MULTIPROCESSING CODE IS NOT IN THE SYSTEM. */\n#define cvtgtrce        0x02 /* -       GENERALIZED TRACE FACILITY (GTF) HAS       */\n#define cvtsdtrc        0x01 /* -       SVC DUMP HAS SUPPRESSED SUPERVISOR TRACE.  */\n\n/* Values for field \"cvtgrsst\" */\n#define cvte51gn        0x80 /* -       When on, global resource contention        */\n#define cvte51ln        0x40 /* -       When on, local resource contention         */\n\n/* Values for field \"cvtmfrtr\" */\n#define cvtmfact        0x80 /* -       IF ONE, I/O SUPERVISOR AND TIMER SECOND    */\n\n/* Values for field \"cvtgsda\" */\n#define cvtgsdab        0x80 /* -       IF HIGH-ORDER BIT IS ONE, THERE IS  MDC185 */\n\n/* Values for field \"cvtfunc\" */\n#define cvtsoln         0x80 /* -       If high order bit is on, this is not  @M6A */\n\n/* Values for field \"cvtxafl\" */\n#define cvtcsrim        0x80 /* -       EXPLICIT LOAD PROCESSING REQUIRED @G860PVB */\n\n/* Values for field \"cvtoslv0\" */\n#define cvth3310        0x80 /* HBB3310 FUNCTIONS ARE PRESENT         @DBA         */\n#define cvtesa          0x80 /* ESA/370 IS SUPPORTED                  @LQA         */\n#define cvtxax          0x80 /* ESA/370 IS SUPPORTED (XAX - OLD NAME) @LQC         */\n#define cvth4420        0x40 /* HBB4420 FUNCTIONS ARE PRESENT.        @LPA         */\n#define cvtj3313        0x20 /* JBB3313 FUNCTIONS ARE PRESENT         @LHA         */\n#define cvtj3311        0x10 /* JBB3311 FUNCTIONS ARE PRESENT         @DBA         */\n#define cvthiper        0x10 /* HIPERSPACES ARE SUPPORTED             @DAA         */\n#define cvth4410        0x08 /* HBB4410 FUNCTIONS ARE PRESENT.        @LKA         */\n#define cvtlkr          0x08 /* SPIN LOCK RESTRUCTURE INDICATOR.      @LJA         */\n#define cvtucbsv        0x08 /* UCB SERVICES INSTALLED.               @LMA         */\n#define cvtcads         0x04 /* SCOPE=COMMON DATA SPACES SUPPORTED    @04A         */\n#define cvtcrptl        0x02 /* ENCRYPTION ASYMMETRIC FEATURE IS      @05A         */\n#define cvtj4422        0x01 /* JBB4422 FUNCTIONS ARE PRESENT         @LTA         */\n\n/* Values for field \"cvtoslv1\" */\n#define cvth4430        0x80 /* HBB4430 FUNCTIONS ARE PRESENT         @LQA         */\n#define cvtdyapf        0x80 /* DYNAMIC APF, THROUGH CSVAPF, PRESENT  @LQA         */\n#define cvtwlm          0x40 /* WORKLOAD MANAGER IS INSTALLED         @LYA         */\n#define cvth5510        0x20 /* HBB5510 FUNCTIONS ARE PRESENT         @M1A         */\n#define cvtdynex        0x20 /* CSVDYNEX FOR DYNAMIC EXITS IS PRESENT @LXA         */\n#define cvth5520        0x10 /* HBB5520 FUNCTIONS ARE PRESENT         @M3A         */\n#define cvtenclv        0x10 /* ENCLAVES FUNCTION IS PRESENT          @M4A         */\n#define cvtj5522        0x08 /* JBB5522 FUNCTIONS ARE PRESENT         @M8A         */\n#define cvth5530        0x04 /* HBB6603 FUNCTIONS ARE PRESENT         @MBA         */\n#define cvth6603        0x04 /* HBB6603 FUNCTIONS ARE PRESENT         @MDA         */\n#define cvtos390_010300 0x04 /* OS/390 R3                             @MEA         */\n#define cvtos390_r3     0x04 /* OS/390 R3                             @MEA         */\n#define cvtdynl         0x04 /* Dynamic LNKLST, via CSVDYNL, is present            */\n#define cvth6601        0x02 /* OS/390 release 1                      @M9A         */\n#define cvtos390        0x02 /* OS/390 release 1                      @M9A         */\n#define cvtos390_010100 0x02 /* OS/390 R1                             @MEA         */\n#define cvtos390_r1     0x02 /* OS/390 R1                             @MEA         */\n#define cvtprded        0x02 /* Product enable/disable (IFAEDxxx)     @M9A         */\n#define cvtj6602        0x01 /* OS/390 release 2                      @MAA         */\n#define cvtos390_010200 0x01 /* OS/390 R2                             @MEA         */\n#define cvtos390_r2     0x01 /* OS/390 R2                             @MEA         */\n#define cvtparmc        0x01 /* Logical Parmlib Service is available               */\n\n/* Values for field \"cvtoslv2\" */\n#define cvtos390_010400 0x80 /* OS/390 R4                             @MEA         */\n#define cvtos390_020400 0x80 /* OS/390 R4                             @PPA         */\n#define cvtos390_r4     0x80 /* OS/390 R4                             @MEA         */\n#define cvtj6604        0x80 /* OS/390 R4                             @MEA         */\n#define cvtdylpa        0x80 /* Dynamic LPA (CSVDYLPA) available      @MEA         */\n#define cvtrtls         0x80 /* Runtime Library Services (CSVRTLS)    @MEA         */\n#define cvtos390_020500 0x40 /* OS/390 R5                             @MFA         */\n#define cvtos390_r5     0x40 /* OS/390 R5                             @MFA         */\n#define cvth6605        0x40 /* OS/390 R5                             @MFA         */\n#define cvtos390_020600 0x20 /* OS/390 R6                             @MGA         */\n#define cvtos390_r6     0x20 /* OS/390 R6                             @MGA         */\n#define cvth6606        0x20 /* OS/390 R6                             @MGA         */\n#define cvtbfp          0x10 /* Binary Floating Point support         @MGA         */\n#define cvtos390_020700 0x08 /* OS/390 R7                             @MHA         */\n#define cvtos390_r7     0x08 /* OS/390 R7                             @MHA         */\n#define cvtj6607        0x08 /* OS/390 R7                             @MHA         */\n#define cvtos390_020800 0x04 /* OS/390 R8                             @MIA         */\n#define cvtos390_r8     0x04 /* OS/390 R8                             @MIA         */\n#define cvth6608        0x04 /* OS/390 R8                             @MIA         */\n#define cvtos390_020900 0x02 /* OS/390 R9                             @MJA         */\n#define cvtos390_r9     0x02 /* OS/390 R9                             @MJA         */\n#define cvtj6609        0x02 /* OS/390 R9                             @MJA         */\n#define cvth6609        0x02 /* OS/390 R9                             @MJA         */\n#define cvtos390_021000 0x01 /* OS/390 R10                            @PUC         */\n#define cvtos390_r10    0x01 /* OS/390 R10                            @MLA         */\n#define cvth7703        0x01 /* OS/390 R10                            @MLA         */\n\n/* Values for field \"cvtoslv3\" */\n#define cvtpause        0x80 /* Pause/Release services are present    @MKA         */\n#define cvtpaus2        0x40 /* IEAVAPE2 and related services, and    @N5A         */\n#define cvtzos          0x20 /* z/OS V1R1                             @MMA         */\n#define cvtzos_010100   0x20 /* z/OS V1R1                             @MMA         */\n#define cvtzos_v1r1     0x20 /* z/OS V1R1                             @MMA         */\n#define cvtj7713        0x20 /* JBB7713                               @MMA         */\n#define cvtlparc        0x20 /* LPAR Clustering is present.           @PWA         */\n#define cvtzos_010200   0x10 /* z/OS V1R2                             @MQA         */\n#define cvtzos_v1r2     0x10 /* z/OS V1R2                             @MQA         */\n#define cvth7705        0x10 /* HBB7705                               @MQA         */\n#define cvtv64          0x10 /* 64-bit virtual services are present.  @MQA         */\n#define cvtzos_010300   0x08 /* z/OS V1R3                             @MSA         */\n#define cvtzos_v1r3     0x08 /* z/OS V1R3                             @MSA         */\n#define cvth7706        0x08 /* HBB7706                               @MSA         */\n#define cvtzos_010400   0x04 /* z/OS V1R4                             @MUA         */\n#define cvtzos_v1r4     0x04 /* z/OS V1R4                             @MUA         */\n#define cvth7707        0x04 /* HBB7707                               @MUA         */\n#define cvtzos_010500   0x02 /* z/OS V1R5                             @MVA         */\n#define cvtzos_v1r5     0x02 /* z/OS V1R5                             @MVA         */\n#define cvth7708        0x02 /* HBB7708                               @MVA         */\n#define cvtzos_010600   0x01 /* z/OS V1R6                             @MWA         */\n#define cvtzos_v1r6     0x01 /* z/OS V1R6                             @MWA         */\n#define cvth7709        0x01 /* HBB7709                               @MWA         */\n\n/* Values for field \"cvtoslv4\" */\n#define cvtcsrsi        0x80 /* CSRSI service is available            @0EA         */\n#define cvtunics        0x40 /* Unicode callable services available   @MLA         */\n#define cvtcsrun        0x20 /* CSRUNIC callable service available    @MLA         */\n#define cvtilm          0x10 /* IBM License Manager functions are     @PYM         */\n#define cvtalrs         0x08 /* ASN-and-LX-Reuse architecture is      @MXA         */\n#define cvtziip         0x02 /* zIIP support is present               @H5A         */\n#define cvtsup          0x02 /* zIIP support is present               @H5A         */\n#define cvtifar         0x01 /* IFA routine is present                @H4A         */\n\n/* Values for field \"cvtoslv5\" */\n#define cvtzose         0x80 /* z/OS.e                                @MTA         */\n#define cvtzosas        0x80 /* z/OS.e                                @MTA         */\n#define cvtpuma         0x80 /* z/OS.e                                @MTA         */\n#define cvtzos_010700   0x40 /* z/OS V1R7                             @Q3C         */\n#define cvtzos_v1r7     0x40 /* z/OS V1R7                             @Q3C         */\n#define cvth7720        0x40 /* HBB7720                               @MYA         */\n#define cvtzos_010800   0x20 /* z/OS V1R8                             @N2A         */\n#define cvtzos_v1r8     0x20 /* z/OS V1R8                             @N2A         */\n#define cvth7730        0x20 /* HBB7730                               @N2A         */\n\n/* Values for field \"cvtoslv8\" */\n#define cvtpaus4        0x40 /* Pause with checkpoint-OK              @0MA         */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IHAECVT": {"ttr": 2399, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct ecvt \u00e4\n  unsigned char  ecvtecvt\u00c44\u00dc;  /* ECVT ACRONYM                                        */\n  void          *ecvtcplx;     /* -              ADDRESS OF IXCCPLX CONTROL           */\n  unsigned char  ecvtsplx\u00c48\u00dc;  /* -           SYSPLEX NAME USED FOR           @D1A    */\n  int            ecvtsple;     /* -              SYSPLEX PARTITIONING ECB THAT   @D1A */\n  void          *ecvtsplq;     /* -              SYSPLEX PARTITIONING QUEUE.     @D1A */\n  void          *ecvtstc1;     /* -       STCKSYNC, NON-AR MODE,          @L1A        */\n  void          *ecvtstc2;     /* -       STCKSYNC, NON-AR MODE,          @L1A        */\n  void          *ecvtstc3;     /* -       STCKSYNC, AR MODE,              @L1A        */\n  void          *ecvtstc4;     /* -       STCKSYNC, AR MODE,              @L1A        */\n  void          *ecvtappc;     /* -           ANCHOR FOR APPC DATA STRUCTURES @L5C    */\n  void          *ecvtsch;      /* -           ANCHOR FOR APPC SCHEDULER       @L5A    */\n  struct \u00e4\n    unsigned char  _ecvtios1; /* -           IOS FLAGS BYTE 1                @L7A */\n    unsigned char  _ecvtios2; /* -           RESERVED.                       @L7A */\n    unsigned char  _ecvtios3; /* -           RESERVED.                       @L7A */\n    unsigned char  _ecvtios4; /* -           RESERVED.                       @L7A */\n    \u00fc ecvtiosf;\n  void          *ecvtomda;     /* -           ADDRESS OF THE OPERATIONS       @L3A    */\n  unsigned char  ecvtr038\u00c43\u00dc;  /* -           RESERVED.                       @09C    */\n  unsigned char  ecvtaloc;     /* -           Ownership: Allocation           @09A    */\n  void          *ecvtbpms;     /* -           BELOW 16M, PAGEABLE DEVICE      @L4A    */\n  void          *ecvtbpme;     /* -           BELOW 16M, PAGEABLE DEVICE      @L4A    */\n  void          *ecvtapms;     /* -           ABOVE 16M, PAGEABLE DEVICE      @L4A    */\n  void          *ecvtapme;     /* -           ABOVE 16M, PAGEABLE DEVICE      @L4A    */\n  void          *ecvtqucb;     /* -           XCF DATA AREA (IXCYQUCB)        @D2C    */\n  struct \u00e4\n    void          *_ecvtssdf; /* -           THE ADDRESS OF THE FREE SSD     @D3A */\n    int            _ecvtssds; /* -           SEQUENCE NUMBER INCREMENTED     @D3A */\n    \u00fc ecvtssdd;\n  unsigned char  ecvtr058\u00c44\u00dc;  /* -           RESERVED                        @PCC    */\n  void          *ecvtsrbt;     /* -           THE ADDRESS OF THE SSD          @D3A    */\n  void          *ecvtdpqh;     /* Queue of DU-AL Pools (DPHs)     @D6C                */\n  void          *ecvttcre;     /* -           IEAVTCRE ENTRY POINT ADDRESS.   @L9A    */\n  unsigned char  ecvtxcfg\u00c416\u00dc; /* SYSPLEX CONFIGURATION           @L6A                */\n  void          *ecvtr078;     /* -           RESERVED. DO NOT USE.           @LAC    */\n  void          *ecvtr07c;     /* -           RESERVED. DO NOT USE.           @LAA    */\n  void          *ecvtscha;     /* -       THE ADDRESS OF IEAVSCHA.        @LBC        */\n  unsigned char  ecvtr084\u00c44\u00dc;  /* -           RESERVED.                       @LAA    */\n  void          *ecvtdlcb;     /* Address of DLCB (CSVDLCB)                           */\n  void          *ecvtnttp;     /* -           ADDRESS OF SYSTEM LEVEL         @LHA    */\n  unsigned char  ecvtr090\u00c48\u00dc;  /* -           RESERVED.                       @LHC    */\n  void          *ecvtmsch;     /* -          THE ADDRESS OF SLM MESSAGE      @LNA     */\n  void          *ecvtcal;      /* -          THE ADDRESS OF SLM COMMON AREA  @LNA     */\n  unsigned char  ecvtload\u00c48\u00dc;  /* -          EDITED MVS LOAD PARAMETER       @P1C     */\n  unsigned char  ecvtmlpr\u00c48\u00dc;  /* -           LOAD parameter used for this    @P1C    */\n  void          *ecvttcp;      /* -           Token used by TCP/IP            @02A    */\n  unsigned char  ecvtr0b4\u00c44\u00dc;  /* -           RESERVED.                       @02C    */\n  void          *ecvtnvdm;     /* -           NETVIEW DM TCP ID BLOCK POINTER @D4C    */\n  unsigned char  ecvtr0bc\u00c44\u00dc;  /* -           RESERVED. DO NOT USE.           @D4C    */\n  void          *ecvtgrmp;     /* -           GRM DATA BLOCK POINTER          @LCA    */\n  void          *ecvtwlm;      /* -          WLM VECTOR TABLE POINTER        @LQC     */\n  void          *ecvtcsm;      /* -           Pointer to Communication        @03A    */\n  void          *ecvtctbl;     /* Customer anchor table.                              */\n  void          *ecvtpmcs;     /* STATUS SET,MC,PROCESS           @D5C                */\n  void          *ecvtpmcr;     /* STATUS RESET,MC,PROCESS         @D5C                */\n  void          *ecvtstx1;     /* STAX DEFER=YES,LINKAGE=BRANCH   @LDA                */\n  void          *ecvtstx2;     /* STAX DEFER=NO,LINKAGE=BRANCH    @LDA                */\n  unsigned char  ecvtslid\u00c44\u00dc;  /* -          CONTAINS THE SLIP PER TRAP ID   @LFA     */\n  void          *ecvtcsvt;     /* -           CSV TABLE.                      @LGA    */\n  void          *ecvtasa;      /* -           ASA TABLE.                      @LIA    */\n  void          *ecvtexpm;     /* -       GETXSB SERVICE ROUTINE.         @LLA        */\n  void          *ecvtocvt;     /* -           ANCHOR FOR OpenMVS              @LKA    */\n  void          *ecvtoext;     /* -           ANCHOR FOR OpenMVS              @LKA    */\n  void          *ecvtcmps;     /* -       Address of the                  @P2A        */\n  void          *ecvtnucp;     /* -           Pointer to nucleus dataset      @P3A    */\n  void          *ecvtxrat;     /* -           XES anchor table for branch     @LOA    */\n  void          *ecvtpwvt;     /* -           Address of the Processor        @LPA    */\n  unsigned char  ecvtclon\u00c42\u00dc;  /* -           1 or 2 character value used to  @LRA    */\n  unsigned char  ecvtgmod;     /* GRS mode of operation           @LUA                */\n  unsigned char  ecvtr10b\u00c415\u00dc; /* -          RESERVED.                       @07C     */\n  short int      ecvtptim;     /* Time value for Parallel Detach  @07A                */\n  void          *ecvtjcct;     /* -           Address of the JES              @LVA    */\n  void          *ecvtlsab;     /* -        Pointer to Logger Services      @P4C       */\n  void          *ecvtetpe;     /* Addr of routine IEAVETPE.       @MLA                */\n  void          *ecvtsymt;     /* Address of the system static    @LXC                */\n  void          *ecvtesym;     /* Address of IEAVESYM routine.    @LXC                */\n  struct \u00e4\n    unsigned char  _ecvtflg1;    /* First miscellaneous flag        @LXA */\n    unsigned char  _filler1\u00c43\u00dc;  /* @LXA                                 */\n    \u00fc ecvtflgs;\n  void          *ecvtesy1;     /* Address of routine IEAVESY1.    @LXA                */\n  void          *ecvtpetm;     /* Addr of routine IEAVPETM        @MHA                */\n  void          *ecvtetpt;     /* Addr of routine IEAVETPT        @MHA                */\n  void          *ecvtenvt;     /* -           Pointer to Enclave Vector Table @LWA    */\n  int            ecvtvser;     /* Reserved for use by VSE         @P7C                */\n  void          *ecvtlsen;     /* Address of module IEAVLSEN      @04A                */\n  void          *ecvtdgnb;     /* Address of DGNB                 @D7A                */\n  unsigned char  ecvthdnm\u00c48\u00dc;  /* Hardware name of the processor  @LXA                */\n  unsigned char  ecvtlpnm\u00c48\u00dc;  /* LPAR name of the processor      @LXA                */\n  unsigned char  ecvtvmnm\u00c48\u00dc;  /* VM userid of the virtual        @LXA                */\n  void          *ecvtgrm;      /* Address of routine CRG52GRM     @M3C                */\n  void          *ecvtseif;     /* Address of routine CRG52SEI.    @M3C                */\n  void          *ecvtaes;      /* Address of routine IEAVEAES.    @05A                */\n  void          *ecvtrsmt;     /* Address of registration         @05A                */\n  unsigned char  ecvtmmem\u00c416\u00dc; /* Exit manager name of the   @05A                     */\n  void          *ecvtipa;      /* Address of the Initialization   @LZA                */\n  unsigned char  ecvtmmet\u00c416\u00dc; /* -          Exit Manager Token of the MVS   @M3A     */\n  void          *ecvtmmeq;     /* MVS Miscellaneous Event Exit    @M3A                */\n  void          *ecvtmmea;     /* Address of the MVS              @M3A                */\n  void          *ecvteaex;     /* Address of routine IEAVEAEX.    @05A                */\n  void          *ecvteaux;     /* Address of routine IEAVEAUX.    @M3A                */\n  void          *ecvtmmec;     /* Count of RMs registered with    @M3A                */\n  void          *ecvtipst;     /* Address of IPST                 @PAA                */\n  void          *ecvtrrsw;     /* Address of the RRS world object @M3A                */\n  void          *ecvtrrtt;     /* RRS EOT Resmgr address          @0AA                */\n  void          *ecvtrrmt;     /* RRS EOM Resmgr Address          @0AA                */\n  void          *ecvtpred;     /* Product Enable/Disable block    @LYA                */\n  unsigned char  ecvtcemt\u00c416\u00dc; /* -          Exit Manager Token of the       @M4A     */\n  void          *ecvtceme;     /* Address of routine CTXEMGRE.    @M4A                */\n  void          *ecvtcemr;     /* Address of routine CTXCEMGR.    @M4A                */\n  int            ecvtpseq;     /* Product sequence number.                            */\n  unsigned char  ecvtpown\u00c416\u00dc; /* Product owner                   @LYA                */\n  unsigned char  ecvtpnam\u00c416\u00dc; /* Product name.                   @LYA                */\n  unsigned char  ecvtpver\u00c42\u00dc;  /* Product version                 @LYA                */\n  unsigned char  ecvtprel\u00c42\u00dc;  /* Product release                 @LYA                */\n  unsigned char  ecvtpmod\u00c42\u00dc;  /* Product mod level               @LYA                */\n  unsigned char  ecvtr206;     /* Reserved                        @MIC                */\n  unsigned char  ecvtttfl;     /* Transaction Trace flags.        @MIA                */\n  void          *ecvtcurx;     /* Address of routine CTXCSURX.    @M4A                */\n  void          *ecvtctxr;     /* Addr of routine CTXRSMGR.       @M7A                */\n  void          *ecvtcrgr;     /* Addr of routine CRGRSMGR.       @M8A                */\n  void          *ecvtcsrb;     /* Addr of routine CTXSRB.         @MBA                */\n  void          *ecvtrem1;     /* Addr of routine CRGRREM1 entry  @M6A                */\n  void          *ecvtrem2;     /* Addr of routine CRGRREM2 entry  @M9A                */\n  void          *ecvtxfr3;     /* Addr of routine IEAVXFR3 entry  @PCC                */\n  void          *ecvtr224;     /* Reserved                        @MCA                */\n  void          *ecvtdlpf;     /* Address of first CDE on dynamic @MCA                */\n  void          *ecvtdlpl;     /* Address of last CDE on dynamic  @MCA                */\n  void          *ecvtsrbr;     /* Return for T6EXIT RETURN=SRBSUSP                    */\n  void          *ecvtbcba;     /* Address of SOMObjects data structure                */\n  unsigned char  ecvtpidn\u00c48\u00dc;  /* PID number                      @MEA                */\n  struct \u00e4\n    void          *_ecvtrmdp; /* CRGREMD Parameter List Free Pool Ptr */\n    int            _ecvtrmds; /* CRGREMD Parameter List Free Pool     */\n    \u00fc ecvtrmd;\n  void          *ecvtrsu1;     /* Addr of routine IEAVRSU1 (Resume                    */\n  void          *ecvtpest;     /* Address of the Pause Element Segment                */\n  struct \u00e4\n    void          *_ecvtcdyn; /* Context Services Dynamic Area   @MFA */\n    void          *_ecvtcdys; /* Context Services Dynamic Area   @MFA */\n    \u00fc ecvtcdya;\n  unsigned char  ecvteorm\u00c48\u00dc;  /* -           Potential real high storage address     */\n  void          *ecvtcbls;     /* Addr of IEAVCBLS (see IHACBLS)  @MMA                */\n  void          *ecvtrins;     /* Address of RRS installed function                   */\n  void          *ecvtttca;     /* Address of Transaction Trace    @MMA                */\n  void          *ecvtlcxt;     /* Address of LCCXVT               @MMA                */\n  unsigned char  ecvtoesi\u00c44\u00dc;  /* -          When non-zero, orig SCCBMESI    @0BA     */\n  unsigned char  ecvtoxsb\u00c44\u00dc;  /* -          When non-zero, orig SCCBNXSB    @0BA     */\n  void          *ecvtestu;     /* SVC update service              @MMA                */\n  void          *ecvtrbup;     /* -          IEARBUP service                 @MMA     */\n  unsigned char  ecvtosai\u00c44\u00dc;  /* -          When non-zero, orig SCCBSAIX    @MMA     */\n  unsigned char  ecvtosar\u00c42\u00dc;  /* -          When non-zero, original SCCBSAR @MMA     */\n  unsigned char  ecvtr286\u00c42\u00dc;  /* -          Reserved                        @MMA     */\n  void          *ecvtcrdt;     /* Entry for RACF to get CDRACDTY bits                 */\n  unsigned char  ecvtr28c\u00c48\u00dc;\n  void          *ecvtxpcb;\n  unsigned char  ecvtlpub\u00c416\u00dc; /* -         IBM Publisher ID for ILM        @MNA      */\n  unsigned char  ecvtlpid\u00c48\u00dc;  /* -          IBM Product ID for ILM          @MNA     */\n  unsigned char  ecvtlvid\u00c48\u00dc;  /* -           IBM Version ID for ILM          @MNA    */\n  unsigned char  ecvtlkln\u00c44\u00dc;  /* -           Length of IBM Key for ILM       @MNA    */\n  void          *ecvtlkad;     /* -           Address of IBM Key for ILM      @MNA    */\n  unsigned char  ecvtr2c0\u00c416\u00dc; /* -          Reserved.                       @MNA     */\n  unsigned char  ecvtr2d0\u00c416\u00dc; /* -          Reserved.                       @MNA     */\n  unsigned char  ecvtr2e0\u00c416\u00dc; /* -          Reserved.                       @MNA     */\n  unsigned char  ecvtr2f0\u00c416\u00dc; /* -          Reserved.                       @MNA     */\n  void          *ecvtslca;     /* -          Owner: LE                       @MNA     */\n  unsigned char  ecvtr304\u00c412\u00dc; /* -          Reserved.                       @MNA     */\n  void          *ecvt4qv1;     /* IEAV4QV1                        @MQA                */\n  void          *ecvt4qv2;     /* IEAV4QV2                        @MQA                */\n  void          *ecvt4qv3;     /* IEAV4QV3                        @MQA                */\n  void          *ecvt4qv4;     /* IEAV4QV4                        @MQA                */\n  void          *ecvt4qv5;     /* IEAV4QV5                        @MQA                */\n  void          *ecvt4qv6;     /* IEAV4QV6                        @MQA                */\n  void          *ecvt4qv7;     /* IEAV4QV7                        @MQA                */\n  void          *ecvttenc;     /* Timeused Enclave                @H1A                */\n  void          *ecvtscf;      /* IEAVSCAF                        @MSA                */\n  void          *ecvttsth;     /* IEAVTSTH                        @PJC                */\n  void          *ecvtstc5;     /* -       STCKSYNC, AR MODE,              @MVA        */\n  void          *ecvtstc6;     /* -       STCKSYNC, NON-AR MODE,          @MVA        */\n  void          *ecvtch1;      /* IEAVECH1 Storage Check Service  @PLA                */\n  void          *ecvtch2;      /* IEAVECH2 Storage Check Service  @PLA                */\n  void          *ecvtceab;     /* CEAB                            @MYA                */\n  void          *ecvtaxrb;     /* AXRB                            @MYA                */\n  void          *ecvtect;      /* IEAVEECT service                @MYA                */\n  unsigned char  ecvtr354\u00c428\u00dc; /* @MYC                                                */\n  double         ecvtend;      /* End of the ECVT.                @M4A                */\n  \u00fc;\n\n#define ecvtios1 ecvtiosf._ecvtios1\n#define ecvtios2 ecvtiosf._ecvtios2\n#define ecvtios3 ecvtiosf._ecvtios3\n#define ecvtios4 ecvtiosf._ecvtios4\n#define ecvtssdf ecvtssdd._ecvtssdf\n#define ecvtssds ecvtssdd._ecvtssds\n#define ecvtflg1 ecvtflgs._ecvtflg1\n#define ecvtrmdp ecvtrmd._ecvtrmdp\n#define ecvtrmds ecvtrmd._ecvtrmds\n#define ecvtcdyn ecvtcdya._ecvtcdyn\n#define ecvtcdys ecvtcdya._ecvtcdys\n\n/* Values for field \"ecvtios1\" */\n#define ecvtchsc 0x80 /* -           RESERVED FOR IBM USE            @L7A */\n\n/* Values for field \"ecvtaloc\" */\n#define ecvtwarn 0x80 /* -           Warn about allocations          @09A */\n#define ecvtfail 0x40 /* -           Fail allocations                @09A */\n\n/* Values for field \"ecvtocvt\" */\n#define ecvtomvs 0x80 /* If on, OpenMVS is up and        @LMA             */\n\n/* Values for field \"ecvtgmod\" */\n#define ecvtgnon 0x00 /* GRS operating with option NONE. @LUA             */\n#define ecvtgrng 0x01 /* GRS operating in ring mode.     @LUA             */\n#define ecvtgsta 0x02 /* GRS operating in star mode.     @M1A             */\n\n/* Values for field \"ecvtflg1\" */\n#define ecvtclnu 0x80 /* When set, this flag indicates   @LXA             */\n#define ecvtpmac 0x40 /* Serialization: None.            @MOA             */\n\n/* Values for field \"ecvtttfl\" */\n#define ecvtttrc 0x80 /* Transaction Trace has been      @MIA             */\n#define ecvttatf 0x40 /* If set on, TTrace is not active @MIA             */\n#define ecvttesf 0x20 /* If set on, TTrace is not active @MIA             */\n#define ecvttgmf 0x10 /* If set on, TTrace is not active @MIA             */\n#define ecvttabt 0x08 /* If set on, TTrace is not active @MKA             */\n\n/* Values for field \"ecvtceab\" */\n#define ecvtceat 0x80 /* CEA has terminated              @MZA             */\n\n/* Values for field \"ecvtaxrb\" */\n#define ecvtaxrt 0x80 /* AXR has terminated              @MZA             */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IHALDA": {"ttr": 2403, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct lda \u00e4\n  unsigned char  ldaid\u00c44\u00dc;     /* CONTROL BLOCK IDENTIFIER                          */\n  union \u00e4\n    int            _ldaqanc\u00c46\u00dc; /* LSQA queue anchors */\n    struct \u00e4\n      void          *_ldasqat;    /* Address of the LSQA SQAT */\n      void          *_ldaaqat;    /* Address of the LSQA AQAT */\n      int            _ldadfeq\u00c44\u00dc; /* LSQA DFE queue header    */\n      \u00fc _lda_struct1;\n    struct \u00e4\n      unsigned char  _filler1\u00c48\u00dc;\n      void          *_ldaadf;      /* Address of first DFE on the LSQA address queue */\n      void          *_ldaadl;      /* Address of last DFE on the LSQA address queue  */\n      void          *_ldaszf;      /* Address of first DFE on LSQA size queue        */\n      void          *_ldaszl;      /* Address of last DFE on LSQA size queue         */\n      \u00fc _lda_struct2;\n    \u00fc _lda_union1;\n  union \u00e4\n    int            _ldaeanc\u00c46\u00dc; /* LSQA queue anchors - Extended */\n    struct \u00e4\n      void          *_ldaesqat;    /* Address of the LSQA SQAT */\n      void          *_ldaeaqat;    /* Address of the LSQA AQAT */\n      int            _ldaedfeq\u00c44\u00dc; /* LSQA DFE queue header    */\n      \u00fc _lda_struct3;\n    struct \u00e4\n      unsigned char  _filler2\u00c48\u00dc;\n      void          *_ldaeadf;     /* Address of first DFE on the LSQA address queue */\n      void          *_ldaeadl;     /* Address of last DFE on the LSQA address queue  */\n      void          *_ldaeszf;     /* Address of first DFE on LSQA size queue        */\n      void          *_ldaeszl;     /* Address of last DFE on LSQA size queue         */\n      \u00fc _lda_struct4;\n    \u00fc _lda_union2;\n  union \u00e4\n    int            _ldaard\u00c44\u00dc; /* Address Space Region Descriptor */\n    struct \u00e4\n      void          *_ldafbqaf; /* Address of first FBQE on the address space FBQE */\n      void          *_ldafbqal; /* Address of last FBQE on the address space FBQE  */\n      void          *_ldastrta; /* Low address of Address Space Region             */\n      int            _ldasiza;  /* Size of Address Space Region                    */\n      \u00fc _lda_struct5;\n    \u00fc _lda_union3;\n  union \u00e4\n    int            _ldaeard\u00c44\u00dc; /* Address Space Region Descriptor - Extended */\n    struct \u00e4\n      void          *_ldaefbaf; /* Address of first FBQE on the address space FBQE */\n      void          *_ldaefbal; /* Address of last FBQE on the address space FBQE  */\n      void          *_ldaestra; /* Low address of Address Space Region             */\n      int            _ldaesiza; /* Size of Address Space Region                    */\n      \u00fc _lda_struct6;\n    \u00fc _lda_union4;\n  union \u00e4\n    int            _ldasrd\u00c44\u00dc; /* System Region Descriptor */\n    struct \u00e4\n      void          *_ldafbqsf; /* Address of the first FBQE on the System Region FBQE */\n      void          *_ldafbqsl; /* Address of the last FBQE on the System Region FBQE  */\n      void          *_ldastrts; /* Low address of System Region                        */\n      int            _ldasizs;  /* Size of System Region                               */\n      \u00fc _lda_struct7;\n    \u00fc _lda_union5;\n  union \u00e4\n    int            _ldaesrd\u00c44\u00dc; /* System Region Descriptor - Extended */\n    struct \u00e4\n      void          *_ldaefbsf; /* Address of the first FBQE on the System Region FBQE */\n      void          *_ldaefbsl; /* Address of the last FBQE on the System Region FBQE  */\n      void          *_ldaestrs; /* Low address of System Region                        */\n      int            _ldaesizs; /* Size of System Region                               */\n      \u00fc _lda_struct8;\n    \u00fc _lda_union6;\n  union \u00e4\n    int            _ldarrd\u00c44\u00dc; /* V=R Region Descriptor */\n    struct \u00e4\n      void          *_ldafbqrf; /* Address of the first FBQE on the V=R Region FBQE */\n      void          *_ldafbqrl; /* Address of the last FBQE on the V=R Region FBQE  */\n      void          *_ldastrtr; /* Low address of the V=R Region                    */\n      int            _ldasizr;  /* Size of the V=R Region                           */\n      \u00fc _lda_struct9;\n    \u00fc _lda_union7;\n  union \u00e4\n    int            _ldaerrd\u00c44\u00dc; /* V=R Region Descriptor - Extended */\n    struct \u00e4\n      void          *_ldaefbrf; /* Address of the first FBQE on the V=R Region FBQE */\n      void          *_ldaefbrl; /* Address of the last FBQE on the V=R Region FBQE  */\n      void          *_ldaestrr; /* Low address of the V=R Region                    */\n      int            _ldaesizr; /* Size of the V=R Region                           */\n      \u00fc _lda_struct10;\n    \u00fc _lda_union8;\n  void          *ldaaqtad;     /* Address of the first AQAT stack on                */\n  void          *ldacrgtp;     /* Current high address of PRIVATE AREA Region       */\n  void          *ldaergtp;     /* Current high address of PRIVATE AREA Region -     */\n  void          *ldadefq;      /* Address of DEFERRED RELEASE queue                 */\n  void          *ldaaqtst;     /* Address of the next free AQAT in the              */\n  union \u00e4\n    int            _ldacpanc\u00c43\u00dc; /* LSQA CELL POOL HEADER */\n    struct \u00e4\n      void          *_ldacpadr; /* Address of LSQA CELL POOL                    */\n      int            _ldacpcnt; /* NUMBER of FREE CELLS IN LSQA CELL POOL       */\n      void          *_ldafcadr; /* Address of first FREE CELL IN LSQA CELL POOL */\n      \u00fc _lda_struct11;\n    \u00fc _lda_union9;\n  void          *ldawrka;      /* Address of LOCAL WORK AREA                        */\n  void          *ldaascb;      /* Address of ASCB FOR THIS ADDRESS SPACE            */\n  void          *ldappd;       /* Address of LOCAL PPD queue                        */\n  unsigned char  _filler3\u00c44\u00dc;  /* Reserved                                          */\n  unsigned char  ldaflgs;      /* MISC. FLAGS                                       */\n  unsigned char  _filler4\u00c43\u00dc;  /* Reserved                                          */\n  union \u00e4\n    unsigned char  _ldasizes\u00c424\u00dc; /* MISC. sizes */\n    struct \u00e4\n      unsigned char  _ldauflgs;    /* USER FLAGS                   */\n      unsigned char  _filler5\u00c43\u00dc;  /* Reserved                     */\n      int            _ldaregrq;    /* Region size REQUESTED        */\n      void          *_ldalimit;    /* < 16M V=V Region limit value */\n      void          *_ldavvrg;     /* < 16M V=V Region high value  */\n      void          *_ldaelim;     /* > 16M V=V Region limit value */\n      void          *_ldaevvrg;    /* > 16M V=V Region high value  */\n      \u00fc _lda_struct12;\n    \u00fc _lda_union10;\n  union \u00e4\n    int            _ldanonfm\u00c42\u00dc; /* NON-FREEMAINABLE PRIVATE AREAS           */\n    int            _ldasm\u00c42\u00dc;    /* NON-FREEMAINABLE STORAGE MANAGEMENT AREA */\n    struct \u00e4\n      void          *_ldasmad; /* Address of AREA */\n      int            _ldasmsz; /* Size of AREA    */\n      \u00fc _lda_struct13;\n    \u00fc _lda_union11;\n  union \u00e4\n    int            _ldaalloc\u00c44\u00dc; /* ALLOCATION VALUES */\n    struct \u00e4\n      int            _ldaloal;  /* < 16M USER Region alloc value */\n      int            _ldahial;  /* < 16M AUTH Region alloc value */\n      int            _ldaeloal; /* > 16M USER Region alloc value */\n      int            _ldaehial; /* > 16M AUTH Region alloc value */\n      \u00fc _lda_struct14;\n    \u00fc _lda_union12;\n  union \u00e4\n    int            _ldasmf\u00c44\u00dc; /* Limit values set by SMF                  @ZA67822 */\n    struct \u00e4\n      int            _ldasmfl;  /* < 16M V=V SMF LDALIMIT VALUE                 @D1C */\n      int            _ldasmfr;  /* < 16M V=V SMF LDAVVRG VALUE                  @D1C */\n      int            _ldasmfel; /* > 16M V=V SMF LDAELIM VALUE                  @D1C */\n      int            _ldasmfer; /* > 16M V=V SMF LDAEVVRG VALUE                 @D1C */\n      \u00fc _lda_struct15;\n    \u00fc _lda_union13;\n  union \u00e4\n    int            _ldaean05\u00c46\u00dc; /* LSQA 205 queue anchors - Extended            @L3A */\n    struct \u00e4\n      void          *_ldasqt05;    /* Address of the LSQA 205 SQAT                 @L3A */\n      void          *_ldaaqt05;    /* Address of the LSQA 205 AQAT                 @L3A */\n      int            _ldadfe05\u00c44\u00dc; /* LSQA 205 DFE queue header                    @L3A */\n      \u00fc _lda_struct16;\n    struct \u00e4\n      unsigned char  _filler6\u00c48\u00dc;\n      void          *_ldaadf05;    /* Addr of first DFE on the LSQA 205 addr queue @L3A */\n      void          *_ldaadl05;    /* Addr of last DFE on the LSQA 205 addr queue  @L3A */\n      void          *_ldaszf05;    /* Address of first DFE on LSQA 205 size queue  @L3A */\n      void          *_ldaszl05;    /* Address of last DFE on LSQA 205 size queue   @L3A */\n      \u00fc _lda_struct17;\n    \u00fc _lda_union14;\n  union \u00e4\n    int            _ldaean15\u00c46\u00dc; /* LSQA 215 queue anchors - Extended            @L3A */\n    struct \u00e4\n      void          *_ldasqt15;    /* Address of the LSQA 215 SQAT                 @L3A */\n      void          *_ldaaqt15;    /* Address of the LSQA 215 AQAT                 @L3A */\n      int            _ldadfe15\u00c44\u00dc; /* LSQA 215 DFE queue header                    @L3A */\n      \u00fc _lda_struct18;\n    struct \u00e4\n      unsigned char  _filler7\u00c48\u00dc;\n      void          *_ldaadf15;    /* Addr of first DFE on the LSQA 215 addr queue @L3A */\n      void          *_ldaadl15;    /* Addr of last DFE on the LSQA 215 addr queue  @L3A */\n      void          *_ldaszf15;    /* Address of first DFE on LSQA 215 size queue  @L3A */\n      void          *_ldaszl15;    /* Address of last DFE on LSQA 215 size queue   @L3A */\n      \u00fc _lda_struct19;\n    \u00fc _lda_union15;\n  union \u00e4\n    int            _ldaean25\u00c46\u00dc; /* LSQA 225 queue anchors - Extended            @L2A */\n    struct \u00e4\n      void          *_ldasqt25;    /* Address of the LSQA 225 SQAT                 @L2A */\n      void          *_ldaaqt25;    /* Address of the LSQA 225 AQAT                 @L2A */\n      int            _ldadfe25\u00c44\u00dc; /* LSQA 225 DFE queue header                    @L2A */\n      \u00fc _lda_struct20;\n    struct \u00e4\n      unsigned char  _filler8\u00c48\u00dc;\n      void          *_ldaadf25;    /* Addr of first DFE on the LSQA 225 addr queue @L2A */\n      void          *_ldaadl25;    /* Addr of last DFE on the LSQA 225 addr queue  @L2A */\n      void          *_ldaszf25;    /* Address of first DFE on LSQA 225 size queue  @L2A */\n      void          *_ldaszl25;    /* Address of last DFE on LSQA 225 size queue   @L2A */\n      \u00fc _lda_struct21;\n    \u00fc _lda_union16;\n  void          *ldaa2gfa;     /* Above 2G free area address                   @L5A */\n  void          *ldaa2gaa;     /* Above 2G alloc area address                  @L5A */\n  int            ldamrg24;     /* Maximum region below 16MB before                  */\n  int            ldamrg31;     /* Maximum region above 16MB before                  */\n  union \u00e4\n    int            _ldaqancr64\u00c46\u00dc; /* LSQA queue anchors R64                       @L7A */\n    struct \u00e4\n      void          *_ldasqatr64;    /* Address of the LSQA SQAT                     @L7A */\n      void          *_ldaaqatr64;    /* Address of the LSQA AQAT                     @L7A */\n      int            _ldadfeqr64\u00c44\u00dc; /* LSQA DFE queue header                        @L7A */\n      \u00fc _lda_struct22;\n    struct \u00e4\n      unsigned char  _filler9\u00c48\u00dc;\n      void          *_ldaadfr64;   /* Addr of first DFE on the LSQA address queue  @L7A */\n      void          *_ldaadlr64;   /* Addr of last DFE on the LSQA address queue   @L7A */\n      void          *_ldaszfr64;   /* Address of first DFE on LSQA size queue      @L7A */\n      void          *_ldaszlr64;   /* Address of last DFE on LSQA size queue       @L7A */\n      \u00fc _lda_struct23;\n    \u00fc _lda_union17;\n  union \u00e4\n    int            _ldaeancr64\u00c46\u00dc; /* LSQA queue anchors - Extended R64            @L7A */\n    struct \u00e4\n      void          *_ldaesqatr64;    /* Address of the LSQA SQAT                     @L7A */\n      void          *_ldaeaqatr64;    /* Address of the LSQA AQAT                     @L7A */\n      int            _ldaedfeqr64\u00c44\u00dc; /* LSQA DFE queue header                        @L7A */\n      \u00fc _lda_struct24;\n    struct \u00e4\n      unsigned char  _filler10\u00c48\u00dc;\n      void          *_ldaeadfr64;   /* Addr of first DFE on the LSQA address queue  @L7A */\n      void          *_ldaeadlr64;   /* Addr of last DFE on the LSQA address queue   @L7A */\n      void          *_ldaeszfr64;   /* Address of first DFE on LSQA size queue      @L7A */\n      void          *_ldaeszlr64;   /* Address of last DFE on LSQA size queue       @L7A */\n      \u00fc _lda_struct25;\n    \u00fc _lda_union18;\n  union \u00e4\n    int            _ldaean05r64\u00c46\u00dc; /* LSQA 205 queue anchors - Extended R64        @L7A */\n    struct \u00e4\n      void          *_ldasqt05r64;    /* Address of the LSQA 205 SQAT                 @L7A */\n      void          *_ldaaqt05r64;    /* Address of the LSQA 205 AQAT                 @L7A */\n      int            _ldadfe05r64\u00c44\u00dc; /* LSQA 205 DFE queue header                    @L7A */\n      \u00fc _lda_struct26;\n    struct \u00e4\n      unsigned char  _filler11\u00c48\u00dc;\n      void          *_ldaadf05r64;  /* Addr of first DFE on the LSQA 205 addr queue @L7A */\n      void          *_ldaadl05r64;  /* Addr of last DFE on the LSQA 205 addr queue  @L7A */\n      void          *_ldaszf05r64;  /* Address of first DFE on LSQA 205 size queue  @L7A */\n      void          *_ldaszl05r64;  /* Address of last DFE on LSQA 205 size queue   @L7A */\n      \u00fc _lda_struct27;\n    \u00fc _lda_union19;\n  union \u00e4\n    int            _ldaean15r64\u00c46\u00dc; /* LSQA 215 queue anchors - Extended R64        @L7A */\n    struct \u00e4\n      void          *_ldasqt15r64;    /* Address of the LSQA 215 SQAT                 @L7A */\n      void          *_ldaaqt15r64;    /* Address of the LSQA 215 AQAT                 @L7A */\n      int            _ldadfe15r64\u00c44\u00dc; /* LSQA 215 DFE queue header                    @L7A */\n      \u00fc _lda_struct28;\n    struct \u00e4\n      unsigned char  _filler12\u00c48\u00dc;\n      void          *_ldaadf15r64;  /* Addr of first DFE on the LSQA 215 addr queue @L7A */\n      void          *_ldaadl15r64;  /* Addr of last DFE on the LSQA 215 addr queue  @L7A */\n      void          *_ldaszf15r64;  /* Address of first DFE on LSQA 215 size queue  @L7A */\n      void          *_ldaszl15r64;  /* Address of last DFE on LSQA 215 size queue   @L7A */\n      \u00fc _lda_struct29;\n    \u00fc _lda_union20;\n  union \u00e4\n    int            _ldaean25r64\u00c46\u00dc; /* LSQA 225 queue anchors - Extended R64        @L7A */\n    struct \u00e4\n      void          *_ldasqt25r64;    /* Address of the LSQA 225 SQAT                 @L7A */\n      void          *_ldaaqt25r64;    /* Address of the LSQA 225 AQAT                 @L7A */\n      int            _ldadfe25r64\u00c44\u00dc; /* LSQA 225 DFE queue header                    @L7A */\n      \u00fc _lda_struct30;\n    struct \u00e4\n      unsigned char  _filler13\u00c48\u00dc;\n      void          *_ldaadf25r64;  /* Addr of first DFE on the LSQA 225 addr queue @L7A */\n      void          *_ldaadl25r64;  /* Addr of last DFE on the LSQA 225 addr queue  @L7A */\n      void          *_ldaszf25r64;  /* Address of first DFE on LSQA 225 size queue  @L7A */\n      void          *_ldaszl25r64;  /* Address of last DFE on LSQA 225 size queue   @L7A */\n      \u00fc _lda_struct31;\n    \u00fc _lda_union21;\n  union \u00e4\n    int            _ldaprivbuf\u00c42\u00dc; /* PrivateBuffer values used for this job       @P1A */\n    struct \u00e4\n      void          *_ldaprivbuf24; /* Below 16M                                    @P1A */\n      void          *_ldaprivbuf31; /* Above 16M                                    @P1A */\n      \u00fc _lda_struct32;\n    \u00fc _lda_union22;\n  union \u00e4\n    int            _ldasmfprivbuf\u00c42\u00dc; /* PrivateBuffer values requested by */\n    struct \u00e4\n      void          *_ldasmfprivbuf24; /* Below 16M                                   @P1A */\n      void          *_ldasmfprivbuf31; /* Above 16M                                   @P1A */\n      \u00fc _lda_struct33;\n    \u00fc _lda_union23;\n  unsigned char  _filler14\u00c48\u00dc; /* Reserved                                     @L5A */\n  \u00fc;\n\n#define ldaqanc         _lda_union1._ldaqanc\n#define ldasqat         _lda_union1._lda_struct1._ldasqat\n#define ldaaqat         _lda_union1._lda_struct1._ldaaqat\n#define ldadfeq         _lda_union1._lda_struct1._ldadfeq\n#define ldaadf          _lda_union1._lda_struct2._ldaadf\n#define ldaadl          _lda_union1._lda_struct2._ldaadl\n#define ldaszf          _lda_union1._lda_struct2._ldaszf\n#define ldaszl          _lda_union1._lda_struct2._ldaszl\n#define ldaeanc         _lda_union2._ldaeanc\n#define ldaesqat        _lda_union2._lda_struct3._ldaesqat\n#define ldaeaqat        _lda_union2._lda_struct3._ldaeaqat\n#define ldaedfeq        _lda_union2._lda_struct3._ldaedfeq\n#define ldaeadf         _lda_union2._lda_struct4._ldaeadf\n#define ldaeadl         _lda_union2._lda_struct4._ldaeadl\n#define ldaeszf         _lda_union2._lda_struct4._ldaeszf\n#define ldaeszl         _lda_union2._lda_struct4._ldaeszl\n#define ldaard          _lda_union3._ldaard\n#define ldafbqaf        _lda_union3._lda_struct5._ldafbqaf\n#define ldafbqal        _lda_union3._lda_struct5._ldafbqal\n#define ldastrta        _lda_union3._lda_struct5._ldastrta\n#define ldasiza         _lda_union3._lda_struct5._ldasiza\n#define ldaeard         _lda_union4._ldaeard\n#define ldaefbaf        _lda_union4._lda_struct6._ldaefbaf\n#define ldaefbal        _lda_union4._lda_struct6._ldaefbal\n#define ldaestra        _lda_union4._lda_struct6._ldaestra\n#define ldaesiza        _lda_union4._lda_struct6._ldaesiza\n#define ldasrd          _lda_union5._ldasrd\n#define ldafbqsf        _lda_union5._lda_struct7._ldafbqsf\n#define ldafbqsl        _lda_union5._lda_struct7._ldafbqsl\n#define ldastrts        _lda_union5._lda_struct7._ldastrts\n#define ldasizs         _lda_union5._lda_struct7._ldasizs\n#define ldaesrd         _lda_union6._ldaesrd\n#define ldaefbsf        _lda_union6._lda_struct8._ldaefbsf\n#define ldaefbsl        _lda_union6._lda_struct8._ldaefbsl\n#define ldaestrs        _lda_union6._lda_struct8._ldaestrs\n#define ldaesizs        _lda_union6._lda_struct8._ldaesizs\n#define ldarrd          _lda_union7._ldarrd\n#define ldafbqrf        _lda_union7._lda_struct9._ldafbqrf\n#define ldafbqrl        _lda_union7._lda_struct9._ldafbqrl\n#define ldastrtr        _lda_union7._lda_struct9._ldastrtr\n#define ldasizr         _lda_union7._lda_struct9._ldasizr\n#define ldaerrd         _lda_union8._ldaerrd\n#define ldaefbrf        _lda_union8._lda_struct10._ldaefbrf\n#define ldaefbrl        _lda_union8._lda_struct10._ldaefbrl\n#define ldaestrr        _lda_union8._lda_struct10._ldaestrr\n#define ldaesizr        _lda_union8._lda_struct10._ldaesizr\n#define ldacpanc        _lda_union9._ldacpanc\n#define ldacpadr        _lda_union9._lda_struct11._ldacpadr\n#define ldacpcnt        _lda_union9._lda_struct11._ldacpcnt\n#define ldafcadr        _lda_union9._lda_struct11._ldafcadr\n#define ldasizes        _lda_union10._ldasizes\n#define ldauflgs        _lda_union10._lda_struct12._ldauflgs\n#define ldaregrq        _lda_union10._lda_struct12._ldaregrq\n#define ldalimit        _lda_union10._lda_struct12._ldalimit\n#define ldavvrg         _lda_union10._lda_struct12._ldavvrg\n#define ldaelim         _lda_union10._lda_struct12._ldaelim\n#define ldaevvrg        _lda_union10._lda_struct12._ldaevvrg\n#define ldanonfm        _lda_union11._ldanonfm\n#define ldasm           _lda_union11._ldasm\n#define ldasmad         _lda_union11._lda_struct13._ldasmad\n#define ldasmsz         _lda_union11._lda_struct13._ldasmsz\n#define ldaalloc        _lda_union12._ldaalloc\n#define ldaloal         _lda_union12._lda_struct14._ldaloal\n#define ldahial         _lda_union12._lda_struct14._ldahial\n#define ldaeloal        _lda_union12._lda_struct14._ldaeloal\n#define ldaehial        _lda_union12._lda_struct14._ldaehial\n#define ldasmf          _lda_union13._ldasmf\n#define ldasmfl         _lda_union13._lda_struct15._ldasmfl\n#define ldasmfr         _lda_union13._lda_struct15._ldasmfr\n#define ldasmfel        _lda_union13._lda_struct15._ldasmfel\n#define ldasmfer        _lda_union13._lda_struct15._ldasmfer\n#define ldaean05        _lda_union14._ldaean05\n#define ldasqt05        _lda_union14._lda_struct16._ldasqt05\n#define ldaaqt05        _lda_union14._lda_struct16._ldaaqt05\n#define ldadfe05        _lda_union14._lda_struct16._ldadfe05\n#define ldaadf05        _lda_union14._lda_struct17._ldaadf05\n#define ldaadl05        _lda_union14._lda_struct17._ldaadl05\n#define ldaszf05        _lda_union14._lda_struct17._ldaszf05\n#define ldaszl05        _lda_union14._lda_struct17._ldaszl05\n#define ldaean15        _lda_union15._ldaean15\n#define ldasqt15        _lda_union15._lda_struct18._ldasqt15\n#define ldaaqt15        _lda_union15._lda_struct18._ldaaqt15\n#define ldadfe15        _lda_union15._lda_struct18._ldadfe15\n#define ldaadf15        _lda_union15._lda_struct19._ldaadf15\n#define ldaadl15        _lda_union15._lda_struct19._ldaadl15\n#define ldaszf15        _lda_union15._lda_struct19._ldaszf15\n#define ldaszl15        _lda_union15._lda_struct19._ldaszl15\n#define ldaean25        _lda_union16._ldaean25\n#define ldasqt25        _lda_union16._lda_struct20._ldasqt25\n#define ldaaqt25        _lda_union16._lda_struct20._ldaaqt25\n#define ldadfe25        _lda_union16._lda_struct20._ldadfe25\n#define ldaadf25        _lda_union16._lda_struct21._ldaadf25\n#define ldaadl25        _lda_union16._lda_struct21._ldaadl25\n#define ldaszf25        _lda_union16._lda_struct21._ldaszf25\n#define ldaszl25        _lda_union16._lda_struct21._ldaszl25\n#define ldaqancr64      _lda_union17._ldaqancr64\n#define ldasqatr64      _lda_union17._lda_struct22._ldasqatr64\n#define ldaaqatr64      _lda_union17._lda_struct22._ldaaqatr64\n#define ldadfeqr64      _lda_union17._lda_struct22._ldadfeqr64\n#define ldaadfr64       _lda_union17._lda_struct23._ldaadfr64\n#define ldaadlr64       _lda_union17._lda_struct23._ldaadlr64\n#define ldaszfr64       _lda_union17._lda_struct23._ldaszfr64\n#define ldaszlr64       _lda_union17._lda_struct23._ldaszlr64\n#define ldaeancr64      _lda_union18._ldaeancr64\n#define ldaesqatr64     _lda_union18._lda_struct24._ldaesqatr64\n#define ldaeaqatr64     _lda_union18._lda_struct24._ldaeaqatr64\n#define ldaedfeqr64     _lda_union18._lda_struct24._ldaedfeqr64\n#define ldaeadfr64      _lda_union18._lda_struct25._ldaeadfr64\n#define ldaeadlr64      _lda_union18._lda_struct25._ldaeadlr64\n#define ldaeszfr64      _lda_union18._lda_struct25._ldaeszfr64\n#define ldaeszlr64      _lda_union18._lda_struct25._ldaeszlr64\n#define ldaean05r64     _lda_union19._ldaean05r64\n#define ldasqt05r64     _lda_union19._lda_struct26._ldasqt05r64\n#define ldaaqt05r64     _lda_union19._lda_struct26._ldaaqt05r64\n#define ldadfe05r64     _lda_union19._lda_struct26._ldadfe05r64\n#define ldaadf05r64     _lda_union19._lda_struct27._ldaadf05r64\n#define ldaadl05r64     _lda_union19._lda_struct27._ldaadl05r64\n#define ldaszf05r64     _lda_union19._lda_struct27._ldaszf05r64\n#define ldaszl05r64     _lda_union19._lda_struct27._ldaszl05r64\n#define ldaean15r64     _lda_union20._ldaean15r64\n#define ldasqt15r64     _lda_union20._lda_struct28._ldasqt15r64\n#define ldaaqt15r64     _lda_union20._lda_struct28._ldaaqt15r64\n#define ldadfe15r64     _lda_union20._lda_struct28._ldadfe15r64\n#define ldaadf15r64     _lda_union20._lda_struct29._ldaadf15r64\n#define ldaadl15r64     _lda_union20._lda_struct29._ldaadl15r64\n#define ldaszf15r64     _lda_union20._lda_struct29._ldaszf15r64\n#define ldaszl15r64     _lda_union20._lda_struct29._ldaszl15r64\n#define ldaean25r64     _lda_union21._ldaean25r64\n#define ldasqt25r64     _lda_union21._lda_struct30._ldasqt25r64\n#define ldaaqt25r64     _lda_union21._lda_struct30._ldaaqt25r64\n#define ldadfe25r64     _lda_union21._lda_struct30._ldadfe25r64\n#define ldaadf25r64     _lda_union21._lda_struct31._ldaadf25r64\n#define ldaadl25r64     _lda_union21._lda_struct31._ldaadl25r64\n#define ldaszf25r64     _lda_union21._lda_struct31._ldaszf25r64\n#define ldaszl25r64     _lda_union21._lda_struct31._ldaszl25r64\n#define ldaprivbuf      _lda_union22._ldaprivbuf\n#define ldaprivbuf24    _lda_union22._lda_struct32._ldaprivbuf24\n#define ldaprivbuf31    _lda_union22._lda_struct32._ldaprivbuf31\n#define ldasmfprivbuf   _lda_union23._ldasmfprivbuf\n#define ldasmfprivbuf24 _lda_union23._lda_struct33._ldasmfprivbuf24\n#define ldasmfprivbuf31 _lda_union23._lda_struct33._ldasmfprivbuf31\n\n/* Values for field \"_filler4\" */\n#define ldadefer 0x80 /* IF ONE DEFERRED RELEASE CONDITION EXISTS          */\n#define ldadefed 0x40 /* IF ONE FREE ASSOCIATED PAGE CONDITION EXISTS @L1A */\n\n/* Values for field \"ldauflgs\" */\n#define ldalimcl 0x80 /* IF ZERO CALL IEALIMIT ROUTINE                     */\n#define ldaulim  0x40 /* IF ZERO DO FBQE CHECK BELOW 16M             @D1A  */\n#define ldaeulim 0x20 /* IF ONE DO FBQE CHECK ABOVE 16M              @D1A  */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IHALLT": {"ttr": 2423, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct llt \u00e4\n  unsigned char  lltid\u00c44\u00dc; /* BLOCK ACRONYM     */\n  int            lltcount; /* NUMBER OF ENTRIES */\n  struct \u00e4\n    char           _lltdslth;   /* DSNAME LENGTH AFTER TRUNCATION */\n    unsigned char  _lltdsn\u00c444\u00dc; /* DATA SET NAME                  */\n    \u00fc lltentry;\n  \u00fc;\n\n#define lltdslth lltentry._lltdslth\n#define lltdsn   lltentry._lltdsn\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IHAPSA": {"ttr": 2381, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct psa \u00e4\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcrnpsw\u00c44\u00dc; /* -RESTART NEW PSW (AFTER IPL)        MDC001   */\n      void          *_filler1;     /* -  SECOND HALF OF RESTART NEW PSW     MDC128 */\n      \u00fc flcippsw;\n    struct \u00e4\n      unsigned char  _flceippsw\u00c48\u00dc; /* FLCE 0x: IPL PSW */\n      \u00fc flcesame;\n    \u00fc _psa_union1;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcropsw\u00c48\u00dc; /* -      RESTART OLD PSW (AFTER IPL) */\n      \u00fc flciccw1;\n    unsigned char  _flceiccw1\u00c48\u00dc; /* FLCE 8x: IPL CCW1 */\n    \u00fc _psa_union2;\n  union \u00e4\n    struct \u00e4\n      void          *_flccvt;      /* -    ADDRESS OF CVT (AFTER IPL).  THIS OFFSET    */\n      unsigned char  _filler2\u00c44\u00dc;  /* -      RESERVED (AFTER IPL)  (MDC431)   @ZM48214 */\n      \u00fc flciccw2;\n    unsigned char  _flceiccw2\u00c48\u00dc; /* FLCE 10x: IPL CCW1 */\n    \u00fc _psa_union3;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flceopsw\u00c48\u00dc; /* -      EXTERNAL OLD PSW                          */\n      unsigned char  _flcsopsw\u00c48\u00dc; /* -      SVC OLD PSW.  THIS OFFSET FIXED BY        */\n      unsigned char  _flcpopsw\u00c48\u00dc; /* -      PROGRAM CHECK OLD PSW                     */\n      unsigned char  _flcmopsw\u00c48\u00dc; /* -      MACHINE CHECK OLD PSW                     */\n      unsigned char  _flciopsw\u00c48\u00dc; /* -      INPUT/OUTPUT OLD PSW                      */\n      unsigned char  _filler3\u00c48\u00dc;  /* -      RESERVED                         @G860PXK */\n      struct \u00e4\n        unsigned char  _filler4\u00c44\u00dc;  /* -      1st 4 bytes are 0                    @H3A */\n        void          *_flccvt2;     /* -    ADDRESS OF CVT - USED BY DUMP               */\n        \u00fc flccvt64;\n      unsigned char  _filler5\u00c44\u00dc;  /* -      RESERVED                         @G860PXH */\n      unsigned char  _filler6\u00c44\u00dc;  /* -      RESERVED - FLCTRACE DELETED DUE TO        */\n      unsigned char  _flcenpsw\u00c44\u00dc; /* -EXTERNAL NEW PSW                                */\n      void          *_filler7;     /* -  SECOND HALF OF EXTERNAL NEW PSW               */\n      unsigned char  _flcsnpsw\u00c44\u00dc; /* -SVC NEW PSW                                     */\n      void          *_filler8;     /* -  SECOND HALF OF SVC NEW PSW                    */\n      unsigned char  _flcpnpsw\u00c44\u00dc; /* - PROGRAM CHECK NEW PSW, DISABLED FOR @02C       */\n      void          *_filler9;     /* -  SECOND HALF OF PROGRAM CHECK NEW PSW          */\n      unsigned char  _flcmnpsw\u00c44\u00dc; /* -MACHINE CHECK NEW PSW              MDC003       */\n      void          *_filler10;    /* -  SECOND HALF OF MACHINE CHECK NEW PSW          */\n      unsigned char  _flcinpsw\u00c44\u00dc; /* -INPUT/OUTPUT NEW PSW                            */\n      void          *_filler11;    /* -  SECOND HALF OF I/O NEW PSW                    */\n      \u00fc _psa_struct1;\n    unsigned char  _flcer018\u00c4104\u00dc; /* FLCE 18x: reserved */\n    \u00fc _psa_union4;\n  union \u00e4\n    int            _psaeparm;     /* -         EXTERNAL INTERRUPTION PARAMETER  @G871A9A */\n    unsigned char  _flceeparm\u00c44\u00dc; /* FLCE 80x: External interruption parameter           */\n    \u00fc _psa_union5;\n  union \u00e4\n    struct \u00e4\n      short int      _psaspad;  /* -         ISSUING PROCESSOR'S PHYSICAL ADDRESS */\n      short int      _flceicod; /* -         EXTERNAL INTERRUPTION CODE           */\n      \u00fc psaeepsw;\n    struct \u00e4\n      unsigned char  _flcecpuad\u00c42\u00dc;  /* FLCE 84x: CPU address                */\n      unsigned char  _flceeicode\u00c42\u00dc; /* FLCE 86x: External interruption code */\n      \u00fc _psa_struct2;\n    \u00fc _psa_union6;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _filler12;  /* -      RESERVED - SET TO ZERO                   */\n      char           _flcsvilc;  /* -       SVC INSTRUCTION LENGTH COUNTER - NUMBER */\n      short int      _flcsvcn;   /* -         SVC INTERRUPTION CODE - SVC NUMBER.   */\n      \u00fc psaespsw;\n    unsigned char  _flcesdata\u00c44\u00dc; /* FLCE 88x: Additional SVC interruption data */\n    struct \u00e4\n      unsigned char  _flcesdatabyte0\u00c42\u00dc; /* FLCE 88x: */\n      unsigned char  _filler13\u00c42\u00dc;\n      \u00fc _psa_struct3;\n    struct \u00e4\n      unsigned char  _filler14;      /* FLCE 88x: Reserved                     */\n      unsigned char  _flcesilc;      /* FLCE 89x: SVC interruption length code */\n      unsigned char  _flcesicode\u00c42\u00dc; /* FLCE 8Ax: SVC interruption code        */\n      \u00fc _psa_struct4;\n    \u00fc _psa_union7;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _filler15;  /* -      RESERVED - SET TO ZERO                     */\n      char           _flcpiilc;  /* -       PROGRAM INTERRUPT LENGTH COUNTER - NUMBER */\n      struct \u00e4\n        char           _psaeecod; /* -       EXCEPTION-EXTENSION CODE.            @03C */\n        char           _psapicod; /* -       8-BIT INTERRUPT CODE.  THIS OFFSET FIXED  */\n        \u00fc flcpicod;\n      struct \u00e4\n        unsigned char  _filler16\u00c43\u00dc;  /* -                                           @L8A */\n        struct \u00e4\n          unsigned char  _flcteab3; /* -      LAST BYTE OF TEA.                    @L8A */\n          \u00fc flcdxc;\n        \u00fc flctea;\n      \u00fc psaeppsw;\n    struct \u00e4\n      unsigned char  _flcepdata\u00c44\u00dc; /* FLCE 8Cx: Additional Program interruption */\n      unsigned char  _filler17\u00c44\u00dc;\n      \u00fc _psa_struct5;\n    struct \u00e4\n      unsigned char  _flcepdatabyte0\u00c42\u00dc; /* FLCE 8Cx: */\n      unsigned char  _filler18\u00c46\u00dc;\n      \u00fc _psa_struct6;\n    struct \u00e4\n      unsigned char  _filler19;      /* FLCE 8Cx: Reserved                         */\n      unsigned char  _flcepilc;      /* FLCE 8Dx: Program interruption length code */\n      unsigned char  _flcepicode\u00c42\u00dc; /* FLCE 8Ex: Program interruption code        */\n      unsigned char  _filler20\u00c44\u00dc;\n      \u00fc _psa_struct7;\n    struct \u00e4\n      unsigned char  _filler21\u00c42\u00dc;\n      unsigned char  _flcepicode0;          /* FLCE 8Ex: Exception extension code */\n      unsigned char  _flcepicode1;          /* FLCE 8Fx: 8-bit interruption code  */\n      unsigned char  _flcepiinformation\u00c44\u00dc; /* FLCE 90x:                          */\n      \u00fc _psa_struct8;\n    struct \u00e4\n      unsigned char  _filler22\u00c44\u00dc;\n      unsigned char  _filler23\u00c43\u00dc;\n      unsigned char  _flcedxc;      /* FLCE 93x: Data exception code for PI 7 */\n      \u00fc _psa_struct9;\n    \u00fc _psa_union8;\n  union \u00e4\n    unsigned char  _flcemcnum\u00c42\u00dc; /* FLCE 94x: Monitor class number */\n    struct \u00e4\n      unsigned char  _filler24;\n      unsigned char  _flcmcnum;     /* -      MONITOR CLASS NUMBER */\n      \u00fc _psa_struct10;\n    \u00fc _psa_union9;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcpercd; /* -      PROGRAM EVENT RECORDING CODE              */\n      unsigned char  _flcatmid; /* -      ATM ID                               @LSA */\n      \u00fc _psa_struct11;\n    unsigned char  _flcepercode\u00c42\u00dc; /* FLCE 96x: PER code */\n    struct \u00e4\n      unsigned char  _flcepercode0; /* FLCE 96x: Byte 0                              */\n      unsigned char  _flceperatmid; /* FLCE 97x: PER addressing and translation mode */\n      \u00fc _psa_struct12;\n    \u00fc _psa_union10;\n  union \u00e4\n    struct \u00e4\n      void          *_flcper;      /* -         PER ADDRESS - ESA/390            @G860PXK */\n      unsigned char  _filler25;    /* -      RESERVED - SET TO ZERO                       */\n      unsigned char  _flcmtrcd\u00c43\u00dc; /* -      MONITOR CODE (ESA/390)                       */\n      \u00fc _psa_struct13;\n    unsigned char  _flceper\u00c48\u00dc; /* FLCE 98x: PER address */\n    struct \u00e4\n      unsigned char  _flceperw0\u00c44\u00dc; /* FLCE 98x: PER address word 0 */\n      void          *_flceperw1;    /* FLCE 9Cx: PER address word 1 */\n      \u00fc _psa_struct14;\n    \u00fc _psa_union11;\n  union \u00e4\n    unsigned char  _flctearn; /* -      CONTAINS THE ACCESS REGISTER NUMBER  @L8C */\n    unsigned char  _flceeaid; /* FLCE A0x: Exception access ID (The AR number     */\n    \u00fc _psa_union12;\n  union \u00e4\n    unsigned char  _flcperrn;   /* -      CONTAINS THE PER STORAGE ACCESS      @L8A */\n    unsigned char  _flceperaid; /* FLCE A1x: PER access ID (the access register     */\n    \u00fc _psa_union13;\n  unsigned char  flceopacid;         /* FLCE A2x:                                              */\n  union \u00e4\n    unsigned char  _flcarch;   /* -      Architecture information             @LSA */\n    unsigned char  _flceamdid; /* FLCE A3x: Architecture mode ID (See FLCARCH      */\n    \u00fc _psa_union14;\n  union \u00e4\n    void          *_psampl;  /* -    MPL ADDRESS.  THIS OFFSET FIXED BY */\n    void          *_flcempl; /* FLCE A4x: MPL address                   */\n    \u00fc _psa_union15;\n  union \u00e4\n    unsigned char  _flceteid\u00c48\u00dc;      /* FLCE A8x: Translation exception         */\n    unsigned char  _flcetea\u00c48\u00dc;       /* FLCE A8x: Translation exception address */\n    struct \u00e4\n      unsigned char  _filler26\u00c47\u00dc;\n      unsigned char  _flcetea7;     /* FLCE AFx: Byte 7 of FlceTEA */\n      \u00fc _psa_struct15;\n    unsigned char  _flceteasninfo\u00c48\u00dc; /* FLCE A8x: ASN Info                      */\n    struct \u00e4\n      unsigned char  _filler27\u00c46\u00dc;\n      short int      _flceteasn;    /* FLCE AEx: ASN */\n      \u00fc _psa_struct16;\n    unsigned char  _flcetepcinfo\u00c48\u00dc;  /* FLCE A8x: PC Info                       */\n    struct \u00e4\n      unsigned char  _filler28\u00c44\u00dc;\n      int            _flcepcnum;    /* FLCE ACx: PC#. Bits 0-10 are 0, bit 11 is 1, */\n      \u00fc _psa_struct17;\n    \u00fc _psa_union16;\n  unsigned char  flcemonitorcode\u00c48\u00dc; /* FLCE B0x: Monitor Code                                 */\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcsid\u00c44\u00dc;  /* -      SUBSYSTEM ID                     @G860PVB */\n      unsigned char  _flciofp\u00c44\u00dc; /* -      I/O INTERRUPTION PARAMETER       @G860PVB */\n      \u00fc flciocdp;\n    struct \u00e4\n      unsigned char  _flcessid\u00c44\u00dc;      /* FLCE B8x: Subsystem ID word          */\n      unsigned char  _flceiointparm\u00c44\u00dc; /* FLCE BCx: I/O interruption parameter */\n      \u00fc _psa_struct18;\n    \u00fc _psa_union17;\n  unsigned char  flceiointid\u00c44\u00dc;     /* FLCE C0x: I/O interruption ID                          */\n  unsigned char  flcer0c4\u00c44\u00dc;        /* FLCE C4x: Reserved                                     */\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcfacl0;     /* Byte 0 of FLCFACL                    @LVA        */\n      unsigned char  _flcfacl1;     /* Byte 1 of FLCFACL                    @LVA        */\n      unsigned char  _flcfacl2;     /* Byte 2 of FLCFACL                    @LVA        */\n      unsigned char  _flcfacl3;     /* Byte 3 of FLCFACL                    @LVA        */\n      unsigned char  _flcfacl4;     /* Byte 4 of FLCFACL                    @PHA        */\n      unsigned char  _flcfacl5;     /* Byte 5 of FLCFACL                    @PHA        */\n      unsigned char  _flcfacl6;     /* Byte 6 of FLCFACL                    @PHA        */\n      unsigned char  _flcfacl7;     /* Byte 7 of FLCFACL                    @PHA        */\n      unsigned char  _filler29\u00c48\u00dc;  /* -      RESERVED                             @PHC */\n      \u00fc flcfacl;\n    unsigned char  _flcefacilitieslist\u00c416\u00dc; /* FLCE C8x: Facilities list stored by STFL */\n    struct \u00e4\n      unsigned char  _flcefacilitieslistbyte0; /* FLCE C8x */\n      unsigned char  _flcefacilitieslistbyte1; /* FLCE C9x */\n      unsigned char  _flcefacilitieslistbyte2; /* FLCE CAx */\n      unsigned char  _flcefacilitieslistbyte3; /* FLCE CBx */\n      unsigned char  _flcefacilitieslistbyte4; /* FLCE CCx */\n      unsigned char  _flcefacilitieslistbyte5; /* FLCE CDx */\n      unsigned char  _flcefacilitieslistbyte6; /* FLCE CEx */\n      unsigned char  _flcefacilitieslistbyte7; /* FLCE CFx */\n      unsigned char  _flcefacilitieslistbyte8; /* FLCE D0x */\n      unsigned char  _flcefacilitieslistbyte9; /* FLCE D1x */\n      unsigned char  _flcefacilitieslistbytea; /* FLCE D2x */\n      unsigned char  _flcefacilitieslistbyteb; /* FLCE D3x */\n      unsigned char  _flcefacilitieslistbytec; /* FLCE D4x */\n      unsigned char  _flcefacilitieslistbyted; /* FLCE D5x */\n      unsigned char  _flcefacilitieslistbytee; /* FLCE D6x */\n      unsigned char  _flcefacilitieslistbytef; /* FLCE D7x */\n      \u00fc _psa_struct19;\n    \u00fc _psa_union18;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcctsa\u00c48\u00dc; /* -      CPU-TIMER SAVE AREA (FROM STORE-     @LHA */\n      unsigned char  _flcccsa\u00c48\u00dc; /* -      CLOCK-COMPARATOR SAVE AREA (FROM     @LHA */\n      \u00fc _psa_struct20;\n    struct \u00e4\n      unsigned char  _flcer0d8\u00c412\u00dc;      /* FLCE D8x: Reserved    */\n      unsigned char  _flcecpusignals\u00c44\u00dc; /* FLCE E4x: CPU signals */\n      \u00fc _psa_struct21;\n    \u00fc _psa_union19;\n  union \u00e4\n    unsigned char  _flcmcic\u00c48\u00dc;  /* -      MACHINE-CHECK INTERRUPTION CODE  @G860PVB */\n    unsigned char  _flcemcic\u00c48\u00dc; /* FLCE E8x: Machine check interruption code        */\n    \u00fc _psa_union20;\n  unsigned char  flcemcice\u00c44\u00dc;       /* FLCE F0x: Machine check interruption code              */\n  unsigned char  flceedcode\u00c44\u00dc;      /* FLCE F4x: External damage code                         */\n  union \u00e4\n    struct \u00e4\n      void          *_flcfsa;       /* -         FAILING STORAGE ADDRESS          @G860PXK */\n      unsigned char  _filler30\u00c44\u00dc;  /* -      RESERVED - SET TO ZERO           @G860PXK    */\n      \u00fc _psa_struct22;\n    unsigned char  _flcefsa\u00c48\u00dc; /* FLCE F8x: Failing storage address */\n    \u00fc _psa_union21;\n  union \u00e4\n    unsigned char  _flcfla\u00c416\u00dc;   /* -     FIXED LOGOUT AREA. SIZE FIXED BY     @L9C */\n    unsigned char  _flcer100\u00c416\u00dc; /* FLCE 100x: Reserved                             */\n    \u00fc _psa_union22;\n  union \u00e4\n    unsigned char  _flcrv110\u00c416\u00dc; /* -     RESERVED.                            @L9A */\n    struct \u00e4\n      unsigned char  _flcebea\u00c48\u00dc;  /* FLCE 110x: Breaking event address */\n      unsigned char  _flcer118\u00c48\u00dc; /* FLCE 118x: Reserved               */\n      \u00fc _psa_struct23;\n    \u00fc _psa_union23;\n  union \u00e4\n    int            _flcarsav\u00c416\u00dc; /* -     ACCESS REGISTER SAVE AREA            @L9A */\n    struct \u00e4\n      unsigned char  _flceropsw\u00c416\u00dc; /* FLCE 120x: Restart old PSW  */\n      unsigned char  _flceeopsw\u00c416\u00dc; /* FLCE 130x: External old PSW */\n      unsigned char  _flcesopsw\u00c416\u00dc; /* FLCE 140x: SVC old PSW      */\n      unsigned char  _flcepopsw\u00c416\u00dc; /* FLCE 150x: Program old PSW  */\n      \u00fc _psa_struct24;\n    \u00fc _psa_union24;\n  union \u00e4\n    unsigned char  _flcfpsav\u00c432\u00dc; /* -     FLOATING POINT REGISTER SAVE AREA */\n    struct \u00e4\n      unsigned char  _flcemopsw\u00c416\u00dc; /* FLCE 160x: Machine check old PSW */\n      unsigned char  _flceiopsw\u00c416\u00dc; /* FLCE 170x: I/O old PSW           */\n      \u00fc _psa_struct25;\n    \u00fc _psa_union25;\n  union \u00e4\n    int            _flcgrsav\u00c416\u00dc; /* -       GENERAL REGISTER SAVE AREA */\n    struct \u00e4\n      unsigned char  _flcer180\u00c432\u00dc;  /* FLCE 180x: reserved         */\n      unsigned char  _flcernpsw\u00c416\u00dc; /* FLCE 1A0x: Restart new PSW  */\n      unsigned char  _flceenpsw\u00c416\u00dc; /* FLCE 1B0x: External new PSW */\n      \u00fc _psa_struct26;\n    \u00fc _psa_union26;\n  union \u00e4\n    int            _flccrsav\u00c416\u00dc; /* -       CONTROL REGISTER SAVE AREA */\n    struct \u00e4\n      unsigned char  _flcesnpsw\u00c416\u00dc; /* FLCE 1C0x: SVC new PSW           */\n      unsigned char  _flcepnpsw\u00c416\u00dc; /* FLCE 1D0x: Program new PSW       */\n      unsigned char  _flcemnpsw\u00c416\u00dc; /* FLCE 1E0x: Machine check new PSW */\n      unsigned char  _flceinpsw\u00c416\u00dc; /* FLCE 1F0x: I/O new PSW           */\n      \u00fc _psa_struct27;\n    \u00fc _psa_union27;\n  struct \u00e4\n    unsigned char  _psapsa\u00c44\u00dc; /* -    CONTROL BLOCK ACRONYM IN EBCDIC                */\n    short int      _psacpupa;  /* -         PHYSICAL CPU ADDRESS (CHANGED DURING ACR) */\n    short int      _psacpula;  /* -         LOGICAL CPU ADDRESS                       */\n    \u00fc flchdend;\n  void          *psapccav;           /* -         VIRTUAL ADDRESS OF PCCA                      */\n  void          *psapccar;           /* -         REAL ADDRESS OF PCCA                         */\n  void          *psalccav;           /* -         VIRTUAL ADDRESS OF LCCA                      */\n  void          *psalccar;           /* -         REAL ADDRESS OF LCCA                         */\n  void          *psatnew;            /* -         TCB pointer. Field maintained for code       */\n  void          *psatold;            /* -         Pointer to current TCB or zero if in SRB     */\n  void          *psaanew;            /* ASCB pointer.  Field maintained for code               */\n  void          *psaaold;            /* -         Pointer to the home (current) ASCB.          */\n  struct \u00e4\n    unsigned char  _psasup1; /* -      FIRST BYTE OF PSASUPER  */\n    unsigned char  _psasup2; /* -      SECOND BYTE OF PSASUPER */\n    unsigned char  _psasup3; /* -      THIRD BYTE OF PSASUPER  */\n    unsigned char  _psasup4; /* -      FOURTH BYTE OF PSASUPER */\n    \u00fc psasuper;\n  unsigned char  psarv22c\u00c412\u00dc;       /* -     RESERVED                             @H5C        */\n  unsigned char  psadiag\u00c42\u00dc;         /* -     Reserved                             @H5A        */\n  union \u00e4\n    unsigned char  _psaprocclass\u00c42\u00dc;         /* -     PROCESSOR WUQ Offset.             */\n    unsigned char  _psa_bylpar_procclass\u00c42\u00dc; /* - PROCESSOR WUQ Offset.            @H5A */\n    struct \u00e4\n      unsigned char  _psaprocclass_byte0; /* @H4A */\n      unsigned char  _psaprocclass_byte1; /* @H4A */\n      \u00fc _psa_struct28;\n    struct \u00e4\n      unsigned char  _psa_bylpar_procclass_byte0; /* @H5A */\n      unsigned char  _psa_bylpar_procclass_byte1; /* @H5A */\n      \u00fc _psa_struct29;\n    \u00fc _psa_union28;\n  unsigned char  psaptype;           /* -      PROCESSOR TYPE INDICATOR             @H1A       */\n  unsigned char  psails;             /* -      INTERRUPT HANDLER LINKAGE STACK      @L9C       */\n  unsigned char  psalsvci\u00c42\u00dc;        /* -      LAST SVC ISSUED ON THIS PROCESSOR    @L6A       */\n  unsigned char  psaflags;           /* -      SYSTEM FLAGS                         @LOA       */\n  unsigned char  psarv241\u00c410\u00dc;       /* RESERVED FOR FUTURE USE - SC1C5.     @LOC              */\n  unsigned char  psascaff;           /* $$SCAFFOLD                                             */\n  void          *psalkcrf;           /* LINKAGE STACK POINTER SAVE AREA.     @D4A              */\n  unsigned char  psampsw\u00c48\u00dc;         /* - SETLOCK MODEL PSW                                    */\n  unsigned char  psamchex\u00c48\u00dc;        /* -      MCH EXIT PSW                                    */\n  int            psatclin;           /* -            STOSM PSASLSA,X'00' INSTRUCTION      @P5A */\n  int            psaintin;           /* -            STOSM PSASLSA,X'00' INSTRUCTION      @P5A */\n  int            psaipcin;           /* -            STOSM PSASLSA,X'00' INSTRUCTION      @P5A */\n  int            psaems2s;           /* -            STOSM PSASLSA,X'00' INSTRUCTION      @P5A */\n  int            psastosm;           /* -            STOSM PSASLSA,X'00' INSTRUCTION.     @P5A */\n  int            psahlhis;           /* -         SAVE AREA FOR PSAHLHI              MDC050    */\n  unsigned char  psarecur;           /* -      RESTART FLIH RECURSION INDICATOR.  IF           */\n  unsigned char  psarssm;            /* -      STNSM AREA FOR IEAVERES              @L5C       */\n  unsigned char  psasnsm2;           /* -      STNSM AREA FOR IEAVTRT1 (MDC470) @G65RP9A       */\n  unsigned char  psartm1s;           /* -      BITS 0-7 OF THE CURRENT PSW ARE  @G383P9A       */\n  void          *psalwtsa;           /* -         REAL ADDRESS OF SAVE AREA USED WHEN  @LHC    */\n  struct \u00e4\n    struct \u00e4\n      void          *_psadispl; /* -  GLOBAL DISPATCHER LOCK  (MDC315) @G50DP9A        */\n      void          *_psaasml;  /* -         AUXILIARY STORAGE MANAGEMENT (ASM) LOCK   */\n      void          *_psasalcl; /* -  SPACE ALLOCATION LOCK  (MDC316)  @G50DP9A        */\n      void          *_psaiossl; /* -         IOS SYNCHRONIZATION LOCK           MDC010 */\n      void          *_psarsmdl; /* -         ADDRESS OF THE RSM DATA SPACE LOCK   @LBC */\n      void          *_psaiosul; /* -         IOS UNIT CONTROL BLOCK LOCK        MDC005 */\n      void          *_psarvlk1; /* -         RESERVED FOR LOCK EXPANSION      @G860PXK */\n      void          *_psarv29c; /* -         RESERVED FOR LOCK EXPANSION          @LDC */\n      void          *_psarv2a0; /* -         RESERVED FOR LOCK EXPANSION          @LDC */\n      void          *_psatpacl; /* -         TCAM'S TPACBDEB LOCK               MDC009 */\n      void          *_psaoptl;  /* -   OPTIMIZER LOCK  (MDC317)         @G50DP9A       */\n      void          *_psarsmgl; /* -         RSM GLOBAL LOCK                  @G860PXH */\n      void          *_psavfixl; /* VSM FIXED SUBPOOLS LOCK          @G860PXH           */\n      void          *_psaasmgl; /* -         ASM GLOBAL LOCK                  @G860PXH */\n      void          *_psarsmsl; /* -         RSM STEAL LOCK                   @G860PXH */\n      void          *_psarsmxl; /* -         RSM CROSS MEMORY LOCK            @G860PXH */\n      void          *_psarsmal; /* -         RSM ADDRESS SPACE LOCK           @G860PXH */\n      void          *_psavpagl; /* VSM PAGEABLE SUBPOOLS LOCK       @G860PXH           */\n      void          *_psarsmcl; /* RSM COMMON LOCK                  @G860PXK           */\n      void          *_psarvlk2; /* RESERVED FOR LOCK EXPANSION      @G860PXH           */\n      \u00fc psaclht1;\n    struct \u00e4\n      void          *_psarsml;  /* RSM GLOBAL FUNCTION/RECOVERY                        */\n      void          *_psatrcel; /* TRACE BUFFER MANAGEMENT LOCK     @G860PXH           */\n      void          *_psaiosl;  /* -   IOS LOCK                             @D3C       */\n      void          *_psarvlk4; /* -         RESERVED FOR LOCK EXPANSION      @G50NP9A */\n      \u00fc psaclht2;\n    struct \u00e4\n      void          *_psacpul;  /* CPU TABLE LOCKS                  @G860PXH           */\n      void          *_psarvlk5; /* -         RESERVED FOR LOCK EXPANSION      @G50NP9A */\n      \u00fc psaclht3;\n    struct \u00e4\n      void          *_psacmsl;  /* -         CROSS MEMORY SERVICES LOCK                */\n      void          *_psalocal; /* -         LOCAL LOCK                                */\n      void          *_psarvlk6; /* -         RESERVED FOR LOCK EXPANSION      @G50NP9A */\n      \u00fc psaclht4;\n    \u00fc psaclht;\n  void          *psalcpua;           /* -         LOGICAL CPU ADDRESS FOR LOCK INSTRUCTION.    */\n  struct \u00e4\n    struct \u00e4\n      unsigned char  _psaclhs1; /* -      FIRST BYTE OF PSACLHS. (MDC384)  @G860PXH */\n      unsigned char  _psaclhs2; /* -      SECOND BYTE OF PSACLHS. (MDC385) @G860PXH */\n      unsigned char  _psaclhs3; /* -      THIRD BYTE OF PSACLHS  (MDC386)  @G50EP9A */\n      unsigned char  _psaclhs4; /* -      FOURTH BYTE OF PSACLHS  (MDC392) @G50EP9A */\n      \u00fc psaclhs;\n    \u00fc psahlhi;\n  void          *psalita;            /* -  ADDRESS OF LOCK INTERFACE TABLE.                    */\n  unsigned char  psastor8\u00c48\u00dc;        /* -      8-BYTE value for master's STO        @LSA       */\n  int            psacr0;             /* -         SAVE AREA FOR CONTROL REGISTER 0             */\n  unsigned char  psamchfl;           /* -      MCH RECURSION FLAGS                             */\n  unsigned char  psasymsk;           /* -      THIS FIELD WILL BE USED IN CONJUNCTION          */\n  unsigned char  psaactcd;           /* -      ACTION CODE SUPPLIED BY OPERATOR     @LHC       */\n  unsigned char  psamchic;           /* -      MCH INITIALIZATION COMPLETE FLAGS  MDC098       */\n  void          *psawkrap;           /* -         REAL ADDRESS OF VARY CPU PARAMETER LIST      */\n  void          *psawkvap;           /* -         VIRTUAL ADDRESS OF VARY CPU PARAMETER        */\n  short int      psavstap;           /* -         WORK AREA FOR VARY CPU             MDC108    */\n  short int      psacpusa;           /* -         PHYSICAL CPU ADDRESS (STATIC)  (MDC131)      */\n  int            psastor;            /* -         MASTER MEMORY'S SEGMENT TABLE ORIGIN         */\n  unsigned char  psaidawk\u00c490\u00dc;       /* -     WORK SAVE AREA FOR private                       */\n  short int      psaret;             /* -            BSM 0,14 BRANCH RETURN TO CALLER     @P5A */\n  short int      psaretcd;           /* -            BSM 0,14 BRANCH RETURN TO CALLER     @P5A */\n  unsigned char  psarv37e\u00c42\u00dc;        /* -      RESERVED                             @PJC       */\n  struct \u00e4\n    struct \u00e4\n      void          *_psacstk;  /* -         ADDRESS OF CURRENTLY USED FUNCTIONAL      */\n      void          *_psanstk;  /* -         ADDRESS OF NORMAL FRR STACK        MDC062 */\n      void          *_psasstk;  /* -         ADDRESS OF SVC-I/O-DISPATCHER FRR STACK   */\n      void          *_psassav;  /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      void          *_psamstk;  /* -         ADDRESS OF MCH FRR STACK           MDC067 */\n      void          *_psamsav;  /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      void          *_psapstk;  /* -         ADDRESS OF PROGRAM CHECK FLIH FRR STACK   */\n      void          *_psapsav;  /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      void          *_psaestk1; /* -         ADDRESS OF EXTERNAL FLIH FRR STACK FOR    */\n      void          *_psaesav1; /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      void          *_psaestk2; /* -         ADDRESS OF EXTERNAL FLIH FRR STACK FOR    */\n      void          *_psaesav2; /* -         ADDRESS OF INTERRUPTED STACK SAVE BY      */\n      void          *_psaestk3; /* -         ADDRESS OF EXTERNAL FLIH FRR STACK FOR    */\n      void          *_psaesav3; /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      void          *_psarstk;  /* -         ADDRESS OF RESTART FLIH FRR STACK  MDC077 */\n      void          *_psarsav;  /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      \u00fc psarsvte;\n    \u00fc psarsvt;\n  unsigned char  psalwpsw\u00c48\u00dc;        /* -      PSW OF WORK INTERRUPTED WHEN A       @LHC       */\n  unsigned char  psarspsw\u00c48\u00dc;        /* -      RESUME PSW FIELD FOR RESTART INTERRUPT          */\n  void          *psatstk;            /* -         ADDRESS OF RTM RECOVERY STACK.               */\n  void          *psatsav;            /* -         ADDRESS OF ERROR STACK SAVED BY RTM  @L7A    */\n  void          *psaastk;            /* -         ADDRESS OF ACR FRR STACK.            @L7A    */\n  void          *psaasav;            /* -         ADDRESS OF INTERRUPT STACK SAVED BY  @L7A    */\n  unsigned char  psartpsw\u00c48\u00dc;        /* -      RESUME PSW FOR RTM SETRP RETRY       @L7A       */\n  unsigned char  psarv3e8\u00c48\u00dc;        /* -      RESERVED                             @L7C       */\n  unsigned char  psasfacc\u00c44\u00dc;        /* - SETFRR ABEND COMPLETION CODE USED WHEN               */\n  int            psalsfcc;           /* -            L  1,PSASFACC INSTRUCTION TO LOAD    @P5A */\n  short int      psasvc13;           /* -            AN SVC 13 INSTRUCTION                @P5A */\n  unsigned char  psarv3fa;           /* -      RESERVED                             @PJC       */\n  unsigned char  psainte;            /* -      FLAGS FOR CPU TIMER  (MDC466)    @ZM48078       */\n  int            psartm1r;           /* -            STOSM PSARTM1S,X'00' INSTRUCTION     @P5A */\n  unsigned char  psarv400\u00c48\u00dc;        /* -      Reserved                             @LVC       */\n  void          *psaatcvt;           /* -         ADDRESS OF VTAM ATCVT.  INITIALIZED BY       */\n  void          *psawtcod;           /* -         WAIT STATE CODE LOADED               @LHC    */\n  void          *psascwa;            /* -         ADDRESS OF SUPERVISOR CONTROL CPU            */\n  void          *psarsmsa;           /* -         ADDRESS OF RSM CPU RELATED WORK              */\n  unsigned char  psascpsw\u00c44\u00dc;        /* - MODEL PSW                                            */\n  void          *_filler31;          /* -         MODEL PSW SECOND HALF  (MDC325)  @G50DP9A    */\n  unsigned char  psasmpsw\u00c44\u00dc;        /* - SRB DISPATCH PSW  (MDC326)      @G50DP9A             */\n  void          *_filler32;          /* -         DISPATCH PSW SECOND HALF                     */\n  unsigned char  psapcpsw\u00c416\u00dc;       /* =     TEMPORARY OLD PSW STORAGE FOR PROGRAM            */\n  unsigned char  psarv438\u00c448\u00dc;       /* =     Reserved                             @LVC        */\n  unsigned char  psapswsv\u00c48\u00dc;        /* -      PSW SAVE AREA FOR DISPATCHER AND ACR            */\n  unsigned char  psacput\u00c48\u00dc;         /* -      SUPERVISOR CPU TIMER SAVE AREA                  */\n  struct \u00e4\n    unsigned char  _psapcfb1; /* -      FUNCTION VALUE  (MDC484)         @G383P9A */\n    unsigned char  _psapcfb2; /* -      FUNCTION FLAGS  (MDC491)         @G383P9A */\n    unsigned char  _psapcfb3; /* -      RECURSION FLAGS  (MDC494)        @G383P9A */\n    unsigned char  _psapcfb4; /* -      RECURSION FLAGS                           */\n    \u00fc psapcfun;\n  short int      psapcps2;           /* -         PASID AT TIME OF SECOND LEVEL    @G383P9A    */\n  unsigned char  psarv47e\u00c42\u00dc;        /* -      RESERVED                         @G860PXK       */\n  unsigned char  psapcwka\u00c424\u00dc;       /* -     Work area for PC FLIH. Must be                   */\n  short int      psapcps3;           /* -         PASID AT TIME OF THIRD LEVEL     @G383P9A    */\n  short int      psapcps4;           /* -         PASID AT TIME OF FOURTH LEVEL                */\n  struct \u00e4\n    unsigned char  _filler33;  /* -      RESERVED - FIRST BYTE OF PSAMODEW         */\n    unsigned char  _psamflgs;  /* -      SECOND BYTE OF PSAMODEW (MDC604) @G383P9A */\n    unsigned char  _psamodeh;  /* -      SECOND HALFWORD OF PSAMODEW.     @G383P9A */\n    unsigned char  _psamode;   /* -      SYSTEM MODE INDICATOR AND DISPLACEMENT    */\n    \u00fc psamodew;\n  unsigned char  _filler34\u00c43\u00dc;       /* -      RESERVED                         @G860PXK       */\n  unsigned char  psastnsm;           /* -      STNSM TARGET USED BY EXIT PROLOGUE              */\n  int            psalkjw;            /* -         LOCAL LOCK RELEASE SRB JOURNAL   @G383P9A    */\n  struct \u00e4\n    int            _psafzero;  /* -         FULLWORD OF ZERO     (MDC612)    @G383P9A */\n    int            _filler35;  /* -         FULLWORD OF ZERO     (MDC612)    @G383P9A */\n    \u00fc psadzero;\n  int            psalkjw2;           /* -         CMS LOCK RELEASE JOURNAL WORD.   @G383P9A    */\n  void          *psalkpt;            /* -   SETLOCK TEST,TYPE=HIER                             */\n  void          *psalaa;             /* -      LE Anchor Area. Owner: LE            @LVA       */\n  void          *psalit2;            /* -  POINTER TO THE EXTENDED LOCK         @LDA           */\n  void          *psaecltp;           /* -   POINTER TO THE EXTENDED CURRENT      @LDA          */\n  struct \u00e4\n    unsigned char  _psalheb0; /* -      BYTE 0 OF THE CURRENT LOCK HELD      @LDA */\n    unsigned char  _psalheb1; /* -      BYTE 1 OF THE CURRENT LOCK HELD      @LDA */\n    unsigned char  _psalheb2; /* -      BYTE 2 OF THE CURRENT LOCK HELD      @LDA */\n    unsigned char  _psalheb3; /* -      BYTE 3 OF THE CURRENT LOCK HELD      @LDA */\n    \u00fc psaclhse;\n  unsigned char  psarv4c8\u00c48\u00dc;        /* -    RESERVED FOR FUTURE LOCK EXPANSION.  @LDA         */\n  unsigned char  psarv4d0\u00c4184\u00dc;      /* -    RESERVED.                            @LDA         */\n  unsigned char  psahwfb;            /* -      HARDWARE FLAG BYTE.                  @L3A       */\n  unsigned char  psacr0cb;           /* -      CR0 CONTROL BYTE USED BY PROTPSA MACRO          */\n  unsigned char  psarv58a\u00c42\u00dc;        /* -      RESERVED                             @PJC       */\n  int            psacr0sv;           /* -         CR0 SAVE AREA USED BY PROTPSA MACRO          */\n  int            psapccr0;           /* -         PROGRAM CHECK FLIH CR0 SAVE AREA             */\n  int            psarcr0;            /* -         RESTART FLIH CR0 SAVE AREA                   */\n  struct \u00e4\n    short int      _psatkn; /* -         CURRENT STACK TOKEN     (MDC610) @G383P9A */\n    short int      _psaasd; /* -         CURRENT STACK ADDRESS SPACE               */\n    int            _psasel; /* -         CURRENT STACK ELEMENTS ADDRESS            */\n    \u00fc psastke;\n  unsigned char  psaskpsw\u00c44\u00dc;        /* PCLINK STACK/UNSTACK MODEL PSW                         */\n  void          *psaskps2;           /* -         PCLINK PSW ADDRESS      (MDC604) @G383P9A    */\n  void          *psacpcls;           /* -      PCLINK WORKAREA - CURRENT STACK      @L9C       */\n  unsigned char  psarv5ac\u00c44\u00dc;        /* -      RESERVED.                            @L9A       */\n  void          *psascfs;            /* -      ADDRESS OF THE SUPERVISOR CONTROL    @L8C       */\n  void          *psapawa;            /* -      ADDRESS OF PC/AUTH WORK AREA.        @L8A       */\n  unsigned char  psascfb;            /* -      SUPERVISOR CONTROL FLAG BYTE.        @L1A       */\n  unsigned char  psarv5b9\u00c43\u00dc;        /* -      RESERVED                             @PJC       */\n  unsigned char  psacr0m1\u00c44\u00dc;        /* MASK OF CR0 WITH EXTERNAL MASK BITS  @04A              */\n  unsigned char  psacr0m2\u00c44\u00dc;        /* MASK OF CR0 WITH ONLY EXTERNAL MASK  @04A              */\n  unsigned char  psarv5c4\u00c4148\u00dc;      /* -    RESERVED                             @03A         */\n  double         psatime;            /* -         CURRENT SRB'S ACCUMULATED CPU TIME   @01C    */\n  int            psasrsav;           /* -        ADDRESS OF CURRENT FRR STACK     @G383P9A     */\n  unsigned char  psaesc8\u00c412\u00dc;        /* -     Save area for IEAVESC8               @LPA        */\n  unsigned char  psadexmw\u00c48\u00dc;        /* -         Work area for dispatcher CR3/4       @LVC    */\n  unsigned char  psadsars\u00c464\u00dc;       /* -     DISPATCHER ACCESS REGISTER SAVE AREA @L9C        */\n  double         psarv6b8;           /* -            RESERVED                             @LVC */\n  union \u00e4\n    double         _psadtsav;    /* -            CPU TIMER VALUE AT LAST DISPATCH,    @01C */\n    unsigned char  _psaff6c0\u00c48\u00dc; /* INITIALIZE FIELD PSADTSAV     @ZMC3284                 */\n    \u00fc _psa_union29;\n  struct \u00e4\n    struct \u00e4\n      int            _psadsins; /* -        DISPATCHER Secondary ASTE Inst# S/A  @LVA */\n      struct \u00e4\n        short int      _psadpkm; /* -        DISPATCHER PROGRAM KEY MASK SAVE AREA */\n        short int      _psadsas; /* -        DISPATCHER SECONDARY ASID SAVE AREA   */\n        \u00fc psadpksa;\n      \u00fc psadcr3;\n    struct \u00e4\n      int            _psadpins; /* -        DISPATCHER Primary ASTE Inst# S/A    @LVA */\n      struct \u00e4\n        short int      _psadax;  /* -        DISPATCHER  AUTHORIZATION        @G383P9A */\n        short int      _psadpas; /* -        DISPATCHER PRIMARY ASID SAVE     @G383P9A */\n        \u00fc psadaxpa;\n      \u00fc psadcr4;\n    \u00fc psadexms;\n  unsigned char  psarv6d8\u00c4216\u00dc;      /* -    RESERVED                         @G860PXK         */\n  unsigned char  psadatlk\u00c448\u00dc;       /* -    AREA FOR DAT-OFF ASSIST LINKAGE CODE              */\n  void          *psadatof;           /* -         REAL STORAGE ADDRESS OF THE DAT-OFF          */\n  int            psadatln;           /* -        LENGTH OF THE DAT-OFF INDEX TABLE             */\n  union \u00e4\n    unsigned char  _psarv7e8\u00c44\u00dc; /* -          RESERVED FOR SYSTEM TRACE.       @G860PXK */\n    unsigned char  _psaff7e8\u00c44\u00dc; /* INITIALIZE FIELD PSARV7E8     @ZMC3284               */\n    \u00fc _psa_union30;\n  unsigned char  psatrace;           /* -      SYSTEM TRACE FLAGS.              @G860PXK       */\n  unsigned char  psarv7ed\u00c43\u00dc;        /* -      RESERVED FOR SYSTEM TRACE.           @PJC       */\n  void          *psatbvtr;           /* -         REAL ADDRESS OF SYSTEM TRACE BUFFER          */\n  void          *psatbvtv;           /* -         VIRTUAL ADDRESS CORRESPONDING TO             */\n  void          *psatrvt;            /* -  ADDRESS OF SYSTEM TRACE VECTOR                      */\n  void          *psatot;             /* -  ADDRESS OF SYSTEM TRACE OPERAND                     */\n  union \u00e4\n    struct \u00e4\n      double         _psaus2st;     /* START SECOND SET OF ASSIGNED     @G383PXU */\n      unsigned char  _filler36\u00c48\u00dc;\n      \u00fc _psa_struct30;\n    struct \u00e4\n      int            _psacdsae; /* CALLDISP REGISTER 14 SAVE AREA   @G383PXU */\n      int            _psacdsaf; /* CALLDISP REGISTER 15 SAVE AREA   @G383PXU */\n      int            _psacdsa0; /* CALLDISP REGISTER 0  SAVE AREA   @G383PXU */\n      int            _psacdsa1; /* CALLDISP REGISTER 1  SAVE AREA   @G383PXU */\n      \u00fc psacdsav;\n    \u00fc _psa_union31;\n  int            psagspsw;           /* GLOBAL SCHEDULE SYSTEM MASK SAVE @ZA63674              */\n  int            psagsrgs;           /* GLOBAL SCHEDULE REGISTER SAVE    @ZA63674              */\n  unsigned char  psarv818\u00c44\u00dc;        /* -     RESERVED                             @PAC        */\n  int            psasv01r;           /* IEAVTRG1 register 1 save area.       @PAA              */\n  int            psasv14r;           /* IEAVTRG1 register 14 save area.      @PAA              */\n  int            psaems2r;           /* -        REGISTER SAVE AREA                            */\n  struct \u00e4\n    int            _psatrgr0; /* -        TRACE REGISTER 0 SAVE AREA.      @G860PXH */\n    int            _psatrgr1; /* -        TRACE REGISTER 1 SAVE AREA.      @G860PXH */\n    int            _psatrgr2; /* -        TRACE REGISTER 2 SAVE AREA.      @G860PXH */\n    int            _psatrgr3; /* -        TRACE REGISTER 3 SAVE AREA.      @G860PXH */\n    int            _psatrgr4; /* -        TRACE REGISTER 4 SAVE AREA.      @G860PXH */\n    int            _psatrgr5; /* -        TRACE REGISTER 5 SAVE AREA.      @G860PXH */\n    int            _psatrgr6; /* -        TRACE REGISTER 6 SAVE AREA.      @G860PXH */\n    int            _psatrgr7; /* -        TRACE REGISTER 7 SAVE AREA.      @G860PXH */\n    int            _psatrgr8; /* -        TRACE REGISTER 8 SAVE AREA.      @G860PXH */\n    int            _psatrgr9; /* -        TRACE REGISTER 9 SAVE AREA.      @G860PXH */\n    int            _psatrgra; /* -        TRACE REGISTER 10 SAVE AREA.     @G860PXH */\n    int            _psatrgrb; /* -        TRACE REGISTER 11 SAVE AREA.     @G860PXH */\n    int            _psatrgrc; /* -        TRACE REGISTER 12 SAVE AREA.     @G860PXH */\n    int            _psatrgrd; /* -        TRACE REGISTER 13 SAVE AREA.     @G860PXH */\n    int            _psatrgre; /* -        TRACE REGISTER 14 SAVE AREA.     @G860PXH */\n    int            _psatrgrf; /* -        TRACE REGISTER 15 SAVE AREA.     @G860PXH */\n    \u00fc psatrsav;\n  unsigned char  psarv868\u00c456\u00dc;       /* -     RESERVED.                            @09C        */\n  unsigned char  psagsavh\u00c48\u00dc;        /* -     Register save area used by           @09C        */\n  union \u00e4\n    unsigned char  _psagsav\u00c464\u00dc;  /* -         REGISTER SAVE AREA USED BY   */\n    unsigned char  _psaff8a8\u00c464\u00dc; /* INITIALIZE FIELD PSAGSAV      @ZMC3284 */\n    \u00fc _psa_union32;\n  int            psascrg1;           /* -        GLOBAL SCHEDULE REGISTER SAVE AREA            */\n  int            psascrg2;           /* -        GLOBAL SCHEDULE REGISTER SAVE AREA            */\n  int            psagpreg\u00c43\u00dc;        /* -       REGISTER SAVE AREA FOR SVC FLIH                */\n  int            psarsreg;           /* -        RESTART FLIH REGISTER SAVE       @G860PXK     */\n  int            psapcgr8;           /* -        PROGRAM FLIH REGISTER 8 SAVE AREA             */\n  int            psapcgr9;           /* -        PROGRAM FLIH REGISTER 9 SAVE AREA             */\n  struct \u00e4\n    int            _psapcgra; /* -        PROGRAM FLIH REGISTER 10 SAVE AREA */\n    int            _psapcgrb; /* -        PROGRAM FLIH REGISTER 11 SAVE AREA */\n    \u00fc psapcgab;\n  struct \u00e4\n    int            _psalkr0;  /* -        IEAVELK REGISTER 0 SAVE AREA     @G860PXK */\n    int            _psalkr1;  /* -        IEAVELK REGISTER 1 SAVE AREA     @G860PXK */\n    int            _psalkr2;  /* -        IEAVELK REGISTER 2 SAVE AREA     @G860PXK */\n    int            _psalkr3;  /* -        IEAVELK REGISTER 3 SAVE AREA     @G860PXK */\n    int            _psalkr4;  /* -        IEAVELK REGISTER 4 SAVE AREA     @G860PXK */\n    int            _psalkr5;  /* -        IEAVELK REGISTER 5 SAVE AREA     @G860PXK */\n    int            _psalkr6;  /* -        IEAVELK REGISTER 6 SAVE AREA     @G860PXK */\n    int            _psalkr7;  /* -        IEAVELK REGISTER 7 SAVE AREA     @G860PXK */\n    int            _psalkr8;  /* -        IEAVELK REGISTER 8 SAVE AREA     @G860PXK */\n    int            _psalkr9;  /* -        IEAVELK REGISTER 9 SAVE AREA     @G860PXK */\n    int            _psalkr10; /* -        IEAVELK REGISTER 10 SAVE AREA    @G860PXK */\n    int            _psalkr11; /* -        IEAVELK REGISTER 11 SAVE AREA    @G860PXK */\n    int            _psalkr12; /* -        IEAVELK REGISTER 12 SAVE AREA    @G860PXK */\n    int            _psalkr13; /* -        IEAVELK REGISTER 13 SAVE AREA    @G860PXK */\n    int            _psalkr14; /* -        IEAVELK REGISTER 14 SAVE AREA    @G860PXK */\n    int            _psalkr15; /* -        IEAVELK REGISTER 15 SAVE AREA    @G860PXK */\n    \u00fc psalksa;\n  union \u00e4\n    unsigned char  _psaslsa\u00c472\u00dc;  /* -         SINGLE LEVEL SAVE AREA USED BY DISABLED */\n    unsigned char  _psaff950\u00c472\u00dc; /* INITIALIZE FIELD PSASLSA       @ZMC3284           */\n    \u00fc _psa_union33;\n  union \u00e4\n    unsigned char  _psajstsa\u00c464\u00dc; /* -     SAVE AREA FOR JOB STEP TIMING        @H1A */\n    unsigned char  _psaff998\u00c464\u00dc; /* INITIALIZE FIELD PSAJSTSA         @H1A          */\n    \u00fc _psa_union34;\n  union \u00e4\n    struct \u00e4\n      double         _psaus2nd;      /* END SECOND SET OF ASSIGNED           @H1M */\n      unsigned char  _filler37\u00c456\u00dc;\n      \u00fc _psa_struct31;\n    struct \u00e4\n      int            _psaslkr0; /* -        IEAVESLK REGISTER 0 SAVE AREA        @P4A */\n      int            _psaslkr1; /* -        IEAVESLK REGISTER 1 SAVE AREA        @P4A */\n      int            _psaslkr2; /* -        IEAVESLK REGISTER 2 SAVE AREA        @P4A */\n      int            _psaslkr3; /* -        IEAVESLK REGISTER 3 SAVE AREA        @P4A */\n      int            _psaslkr4; /* -        IEAVESLK REGISTER 4 SAVE AREA        @P4A */\n      int            _psaslkr5; /* -        IEAVESLK REGISTER 5 SAVE AREA        @P4A */\n      int            _psaslkr6; /* -        IEAVESLK REGISTER 6 SAVE AREA        @P4A */\n      int            _psaslkr7; /* -        IEAVESLK REGISTER 7 SAVE AREA        @P4A */\n      int            _psaslkr8; /* -        IEAVESLK REGISTER 8 SAVE AREA        @P4A */\n      int            _psaslkr9; /* -        IEAVESLK REGISTER 9 SAVE AREA        @P4A */\n      int            _psaslkra; /* -        IEAVESLK REGISTER 10 SAVE AREA       @P4A */\n      int            _psaslkrb; /* -        IEAVESLK REGISTER 11 SAVE AREA       @P4A */\n      int            _psaslkrc; /* -        IEAVESLK REGISTER 12 SAVE AREA       @P4A */\n      int            _psaslkrd; /* -        IEAVESLK REGISTER 13 SAVE AREA       @P4A */\n      int            _psaslkre; /* -        IEAVESLK REGISTER 14 SAVE AREA       @P4A */\n      int            _psaslkrf; /* -        IEAVESLK REGISTER 15 SAVE AREA       @P4A */\n      \u00fc psaslksa;\n    \u00fc _psa_union35;\n  unsigned char  psarva18\u00c436\u00dc;       /* -    RESERVED                             @P4A         */\n  unsigned char  psascsav\u00c464\u00dc;       /* IEAVESC0 save area                   @P7A              */\n  unsigned char  psasflgs;           /* Schedule flags                       @P8A              */\n  unsigned char  psamiscf;           /* Miscellaneous flags                  @LVA              */\n  unsigned char  psarva7e\u00c42\u00dc;        /* Reserved for future use - SC1C5      @LVC              */\n  unsigned char  psarva80\u00c4188\u00dc;      /* -    RESERVED                             @P8C         */\n  void          *psagsch7;           /* -  ENABLED GLOBAL SCHEDULE ENTRY                       */\n  void          *psagsch8;           /* -  DISABLED GLOBAL SCHEDULE ENTRY                      */\n  void          *psalsch1;           /* -  ENABLED SCHEDULE ENTRY POINT                        */\n  void          *psalsch2;           /* -  DISABLED SCHEDULE ENTRY POINT                       */\n  void          *psasvt;             /* -  ADDRESS OF SUPERVISOR VECTOR TABLE                  */\n  void          *psasvtx;            /* Address of Supervisor Vector Table   @LNC              */\n  unsigned char  psarvb54\u00c444\u00dc;       /* -     Reserved                             @LNC        */\n  unsigned char  psastak\u00c41112\u00dc;      /* -   NORMAL FRR STACK                     @LVC          */\n  unsigned char  psarvfd8\u00c440\u00dc;       /* -    RESERVED FOR EXPANSION OF            @PJC         */\n  double         psaend;             /* -           END OF PSA            (MDC612)   @G383P9A  */\n  \u00fc;\n\n#define flcrnpsw                   _psa_union1.flcippsw._flcrnpsw\n#define flceippsw                  _psa_union1.flcesame._flceippsw\n#define flcropsw                   _psa_union2.flciccw1._flcropsw\n#define flceiccw1                  _psa_union2._flceiccw1\n#define flccvt                     _psa_union3.flciccw2._flccvt\n#define flceiccw2                  _psa_union3._flceiccw2\n#define flceopsw                   _psa_union4._psa_struct1._flceopsw\n#define flcsopsw                   _psa_union4._psa_struct1._flcsopsw\n#define flcpopsw                   _psa_union4._psa_struct1._flcpopsw\n#define flcmopsw                   _psa_union4._psa_struct1._flcmopsw\n#define flciopsw                   _psa_union4._psa_struct1._flciopsw\n#define flccvt2                    _psa_union4._psa_struct1.flccvt64._flccvt2\n#define flcenpsw                   _psa_union4._psa_struct1._flcenpsw\n#define flcsnpsw                   _psa_union4._psa_struct1._flcsnpsw\n#define flcpnpsw                   _psa_union4._psa_struct1._flcpnpsw\n#define flcmnpsw                   _psa_union4._psa_struct1._flcmnpsw\n#define flcinpsw                   _psa_union4._psa_struct1._flcinpsw\n#define flcer018                   _psa_union4._flcer018\n#define psaeparm                   _psa_union5._psaeparm\n#define flceeparm                  _psa_union5._flceeparm\n#define psaspad                    _psa_union6.psaeepsw._psaspad\n#define flceicod                   _psa_union6.psaeepsw._flceicod\n#define flcecpuad                  _psa_union6._psa_struct2._flcecpuad\n#define flceeicode                 _psa_union6._psa_struct2._flceeicode\n#define flcsvilc                   _psa_union7.psaespsw._flcsvilc\n#define flcsvcn                    _psa_union7.psaespsw._flcsvcn\n#define flcesdata                  _psa_union7._flcesdata\n#define flcesdatabyte0             _psa_union7._psa_struct3._flcesdatabyte0\n#define flcesilc                   _psa_union7._psa_struct4._flcesilc\n#define flcesicode                 _psa_union7._psa_struct4._flcesicode\n#define flcpiilc                   _psa_union8.psaeppsw._flcpiilc\n#define psaeecod                   _psa_union8.psaeppsw.flcpicod._psaeecod\n#define psapicod                   _psa_union8.psaeppsw.flcpicod._psapicod\n#define flcteab3                   _psa_union8.psaeppsw.flctea.flcdxc._flcteab3\n#define flcepdata                  _psa_union8._psa_struct5._flcepdata\n#define flcepdatabyte0             _psa_union8._psa_struct6._flcepdatabyte0\n#define flcepilc                   _psa_union8._psa_struct7._flcepilc\n#define flcepicode                 _psa_union8._psa_struct7._flcepicode\n#define flcepicode0                _psa_union8._psa_struct8._flcepicode0\n#define flcepicode1                _psa_union8._psa_struct8._flcepicode1\n#define flcepiinformation          _psa_union8._psa_struct8._flcepiinformation\n#define flcedxc                    _psa_union8._psa_struct9._flcedxc\n#define flcemcnum                  _psa_union9._flcemcnum\n#define flcmcnum                   _psa_union9._psa_struct10._flcmcnum\n#define flcpercd                   _psa_union10._psa_struct11._flcpercd\n#define flcatmid                   _psa_union10._psa_struct11._flcatmid\n#define flcepercode                _psa_union10._flcepercode\n#define flcepercode0               _psa_union10._psa_struct12._flcepercode0\n#define flceperatmid               _psa_union10._psa_struct12._flceperatmid\n#define flcper                     _psa_union11._psa_struct13._flcper\n#define flcmtrcd                   _psa_union11._psa_struct13._flcmtrcd\n#define flceper                    _psa_union11._flceper\n#define flceperw0                  _psa_union11._psa_struct14._flceperw0\n#define flceperw1                  _psa_union11._psa_struct14._flceperw1\n#define flctearn                   _psa_union12._flctearn\n#define flceeaid                   _psa_union12._flceeaid\n#define flcperrn                   _psa_union13._flcperrn\n#define flceperaid                 _psa_union13._flceperaid\n#define flcarch                    _psa_union14._flcarch\n#define flceamdid                  _psa_union14._flceamdid\n#define psampl                     _psa_union15._psampl\n#define flcempl                    _psa_union15._flcempl\n#define flceteid                   _psa_union16._flceteid\n#define flcetea                    _psa_union16._flcetea\n#define flcetea7                   _psa_union16._psa_struct15._flcetea7\n#define flceteasninfo              _psa_union16._flceteasninfo\n#define flceteasn                  _psa_union16._psa_struct16._flceteasn\n#define flcetepcinfo               _psa_union16._flcetepcinfo\n#define flcepcnum                  _psa_union16._psa_struct17._flcepcnum\n#define flcsid                     _psa_union17.flciocdp._flcsid\n#define flciofp                    _psa_union17.flciocdp._flciofp\n#define flcessid                   _psa_union17._psa_struct18._flcessid\n#define flceiointparm              _psa_union17._psa_struct18._flceiointparm\n#define flcfacl0                   _psa_union18.flcfacl._flcfacl0\n#define flcfacl1                   _psa_union18.flcfacl._flcfacl1\n#define flcfacl2                   _psa_union18.flcfacl._flcfacl2\n#define flcfacl3                   _psa_union18.flcfacl._flcfacl3\n#define flcfacl4                   _psa_union18.flcfacl._flcfacl4\n#define flcfacl5                   _psa_union18.flcfacl._flcfacl5\n#define flcfacl6                   _psa_union18.flcfacl._flcfacl6\n#define flcfacl7                   _psa_union18.flcfacl._flcfacl7\n#define flcefacilitieslist         _psa_union18._flcefacilitieslist\n#define flcefacilitieslistbyte0    _psa_union18._psa_struct19._flcefacilitieslistbyte0\n#define flcefacilitieslistbyte1    _psa_union18._psa_struct19._flcefacilitieslistbyte1\n#define flcefacilitieslistbyte2    _psa_union18._psa_struct19._flcefacilitieslistbyte2\n#define flcefacilitieslistbyte3    _psa_union18._psa_struct19._flcefacilitieslistbyte3\n#define flcefacilitieslistbyte4    _psa_union18._psa_struct19._flcefacilitieslistbyte4\n#define flcefacilitieslistbyte5    _psa_union18._psa_struct19._flcefacilitieslistbyte5\n#define flcefacilitieslistbyte6    _psa_union18._psa_struct19._flcefacilitieslistbyte6\n#define flcefacilitieslistbyte7    _psa_union18._psa_struct19._flcefacilitieslistbyte7\n#define flcefacilitieslistbyte8    _psa_union18._psa_struct19._flcefacilitieslistbyte8\n#define flcefacilitieslistbyte9    _psa_union18._psa_struct19._flcefacilitieslistbyte9\n#define flcefacilitieslistbytea    _psa_union18._psa_struct19._flcefacilitieslistbytea\n#define flcefacilitieslistbyteb    _psa_union18._psa_struct19._flcefacilitieslistbyteb\n#define flcefacilitieslistbytec    _psa_union18._psa_struct19._flcefacilitieslistbytec\n#define flcefacilitieslistbyted    _psa_union18._psa_struct19._flcefacilitieslistbyted\n#define flcefacilitieslistbytee    _psa_union18._psa_struct19._flcefacilitieslistbytee\n#define flcefacilitieslistbytef    _psa_union18._psa_struct19._flcefacilitieslistbytef\n#define flcctsa                    _psa_union19._psa_struct20._flcctsa\n#define flcccsa                    _psa_union19._psa_struct20._flcccsa\n#define flcer0d8                   _psa_union19._psa_struct21._flcer0d8\n#define flcecpusignals             _psa_union19._psa_struct21._flcecpusignals\n#define flcmcic                    _psa_union20._flcmcic\n#define flcemcic                   _psa_union20._flcemcic\n#define flcfsa                     _psa_union21._psa_struct22._flcfsa\n#define flcefsa                    _psa_union21._flcefsa\n#define flcfla                     _psa_union22._flcfla\n#define flcer100                   _psa_union22._flcer100\n#define flcrv110                   _psa_union23._flcrv110\n#define flcebea                    _psa_union23._psa_struct23._flcebea\n#define flcer118                   _psa_union23._psa_struct23._flcer118\n#define flcarsav                   _psa_union24._flcarsav\n#define flceropsw                  _psa_union24._psa_struct24._flceropsw\n#define flceeopsw                  _psa_union24._psa_struct24._flceeopsw\n#define flcesopsw                  _psa_union24._psa_struct24._flcesopsw\n#define flcepopsw                  _psa_union24._psa_struct24._flcepopsw\n#define flcfpsav                   _psa_union25._flcfpsav\n#define flcemopsw                  _psa_union25._psa_struct25._flcemopsw\n#define flceiopsw                  _psa_union25._psa_struct25._flceiopsw\n#define flcgrsav                   _psa_union26._flcgrsav\n#define flcer180                   _psa_union26._psa_struct26._flcer180\n#define flcernpsw                  _psa_union26._psa_struct26._flcernpsw\n#define flceenpsw                  _psa_union26._psa_struct26._flceenpsw\n#define flccrsav                   _psa_union27._flccrsav\n#define flcesnpsw                  _psa_union27._psa_struct27._flcesnpsw\n#define flcepnpsw                  _psa_union27._psa_struct27._flcepnpsw\n#define flcemnpsw                  _psa_union27._psa_struct27._flcemnpsw\n#define flceinpsw                  _psa_union27._psa_struct27._flceinpsw\n#define psapsa                     flchdend._psapsa\n#define psacpupa                   flchdend._psacpupa\n#define psacpula                   flchdend._psacpula\n#define psasup1                    psasuper._psasup1\n#define psasup2                    psasuper._psasup2\n#define psasup3                    psasuper._psasup3\n#define psasup4                    psasuper._psasup4\n#define psaprocclass               _psa_union28._psaprocclass\n#define psa_bylpar_procclass       _psa_union28._psa_bylpar_procclass\n#define psaprocclass_byte0         _psa_union28._psa_struct28._psaprocclass_byte0\n#define psaprocclass_byte1         _psa_union28._psa_struct28._psaprocclass_byte1\n#define psa_bylpar_procclass_byte0 _psa_union28._psa_struct29._psa_bylpar_procclass_byte0\n#define psa_bylpar_procclass_byte1 _psa_union28._psa_struct29._psa_bylpar_procclass_byte1\n#define psadispl                   psaclht.psaclht1._psadispl\n#define psaasml                    psaclht.psaclht1._psaasml\n#define psasalcl                   psaclht.psaclht1._psasalcl\n#define psaiossl                   psaclht.psaclht1._psaiossl\n#define psarsmdl                   psaclht.psaclht1._psarsmdl\n#define psaiosul                   psaclht.psaclht1._psaiosul\n#define psarvlk1                   psaclht.psaclht1._psarvlk1\n#define psarv29c                   psaclht.psaclht1._psarv29c\n#define psarv2a0                   psaclht.psaclht1._psarv2a0\n#define psatpacl                   psaclht.psaclht1._psatpacl\n#define psaoptl                    psaclht.psaclht1._psaoptl\n#define psarsmgl                   psaclht.psaclht1._psarsmgl\n#define psavfixl                   psaclht.psaclht1._psavfixl\n#define psaasmgl                   psaclht.psaclht1._psaasmgl\n#define psarsmsl                   psaclht.psaclht1._psarsmsl\n#define psarsmxl                   psaclht.psaclht1._psarsmxl\n#define psarsmal                   psaclht.psaclht1._psarsmal\n#define psavpagl                   psaclht.psaclht1._psavpagl\n#define psarsmcl                   psaclht.psaclht1._psarsmcl\n#define psarvlk2                   psaclht.psaclht1._psarvlk2\n#define psarsml                    psaclht.psaclht2._psarsml\n#define psatrcel                   psaclht.psaclht2._psatrcel\n#define psaiosl                    psaclht.psaclht2._psaiosl\n#define psarvlk4                   psaclht.psaclht2._psarvlk4\n#define psacpul                    psaclht.psaclht3._psacpul\n#define psarvlk5                   psaclht.psaclht3._psarvlk5\n#define psacmsl                    psaclht.psaclht4._psacmsl\n#define psalocal                   psaclht.psaclht4._psalocal\n#define psarvlk6                   psaclht.psaclht4._psarvlk6\n#define psaclhs1                   psahlhi.psaclhs._psaclhs1\n#define psaclhs2                   psahlhi.psaclhs._psaclhs2\n#define psaclhs3                   psahlhi.psaclhs._psaclhs3\n#define psaclhs4                   psahlhi.psaclhs._psaclhs4\n#define psacstk                    psarsvt.psarsvte._psacstk\n#define psanstk                    psarsvt.psarsvte._psanstk\n#define psasstk                    psarsvt.psarsvte._psasstk\n#define psassav                    psarsvt.psarsvte._psassav\n#define psamstk                    psarsvt.psarsvte._psamstk\n#define psamsav                    psarsvt.psarsvte._psamsav\n#define psapstk                    psarsvt.psarsvte._psapstk\n#define psapsav                    psarsvt.psarsvte._psapsav\n#define psaestk1                   psarsvt.psarsvte._psaestk1\n#define psaesav1                   psarsvt.psarsvte._psaesav1\n#define psaestk2                   psarsvt.psarsvte._psaestk2\n#define psaesav2                   psarsvt.psarsvte._psaesav2\n#define psaestk3                   psarsvt.psarsvte._psaestk3\n#define psaesav3                   psarsvt.psarsvte._psaesav3\n#define psarstk                    psarsvt.psarsvte._psarstk\n#define psarsav                    psarsvt.psarsvte._psarsav\n#define psapcfb1                   psapcfun._psapcfb1\n#define psapcfb2                   psapcfun._psapcfb2\n#define psapcfb3                   psapcfun._psapcfb3\n#define psapcfb4                   psapcfun._psapcfb4\n#define psamflgs                   psamodew._psamflgs\n#define psamodeh                   psamodew._psamodeh\n#define psamode                    psamodew._psamode\n#define psafzero                   psadzero._psafzero\n#define psalheb0                   psaclhse._psalheb0\n#define psalheb1                   psaclhse._psalheb1\n#define psalheb2                   psaclhse._psalheb2\n#define psalheb3                   psaclhse._psalheb3\n#define psatkn                     psastke._psatkn\n#define psaasd                     psastke._psaasd\n#define psasel                     psastke._psasel\n#define psadtsav                   _psa_union29._psadtsav\n#define psaff6c0                   _psa_union29._psaff6c0\n#define psadsins                   psadexms.psadcr3._psadsins\n#define psadpkm                    psadexms.psadcr3.psadpksa._psadpkm\n#define psadsas                    psadexms.psadcr3.psadpksa._psadsas\n#define psadpins                   psadexms.psadcr4._psadpins\n#define psadax                     psadexms.psadcr4.psadaxpa._psadax\n#define psadpas                    psadexms.psadcr4.psadaxpa._psadpas\n#define psarv7e8                   _psa_union30._psarv7e8\n#define psaff7e8                   _psa_union30._psaff7e8\n#define psaus2st                   _psa_union31._psa_struct30._psaus2st\n#define psacdsae                   _psa_union31.psacdsav._psacdsae\n#define psacdsaf                   _psa_union31.psacdsav._psacdsaf\n#define psacdsa0                   _psa_union31.psacdsav._psacdsa0\n#define psacdsa1                   _psa_union31.psacdsav._psacdsa1\n#define psatrgr0                   psatrsav._psatrgr0\n#define psatrgr1                   psatrsav._psatrgr1\n#define psatrgr2                   psatrsav._psatrgr2\n#define psatrgr3                   psatrsav._psatrgr3\n#define psatrgr4                   psatrsav._psatrgr4\n#define psatrgr5                   psatrsav._psatrgr5\n#define psatrgr6                   psatrsav._psatrgr6\n#define psatrgr7                   psatrsav._psatrgr7\n#define psatrgr8                   psatrsav._psatrgr8\n#define psatrgr9                   psatrsav._psatrgr9\n#define psatrgra                   psatrsav._psatrgra\n#define psatrgrb                   psatrsav._psatrgrb\n#define psatrgrc                   psatrsav._psatrgrc\n#define psatrgrd                   psatrsav._psatrgrd\n#define psatrgre                   psatrsav._psatrgre\n#define psatrgrf                   psatrsav._psatrgrf\n#define psagsav                    _psa_union32._psagsav\n#define psaff8a8                   _psa_union32._psaff8a8\n#define psapcgra                   psapcgab._psapcgra\n#define psapcgrb                   psapcgab._psapcgrb\n#define psalkr0                    psalksa._psalkr0\n#define psalkr1                    psalksa._psalkr1\n#define psalkr2                    psalksa._psalkr2\n#define psalkr3                    psalksa._psalkr3\n#define psalkr4                    psalksa._psalkr4\n#define psalkr5                    psalksa._psalkr5\n#define psalkr6                    psalksa._psalkr6\n#define psalkr7                    psalksa._psalkr7\n#define psalkr8                    psalksa._psalkr8\n#define psalkr9                    psalksa._psalkr9\n#define psalkr10                   psalksa._psalkr10\n#define psalkr11                   psalksa._psalkr11\n#define psalkr12                   psalksa._psalkr12\n#define psalkr13                   psalksa._psalkr13\n#define psalkr14                   psalksa._psalkr14\n#define psalkr15                   psalksa._psalkr15\n#define psaslsa                    _psa_union33._psaslsa\n#define psaff950                   _psa_union33._psaff950\n#define psajstsa                   _psa_union34._psajstsa\n#define psaff998                   _psa_union34._psaff998\n#define psaus2nd                   _psa_union35._psa_struct31._psaus2nd\n#define psaslkr0                   _psa_union35.psaslksa._psaslkr0\n#define psaslkr1                   _psa_union35.psaslksa._psaslkr1\n#define psaslkr2                   _psa_union35.psaslksa._psaslkr2\n#define psaslkr3                   _psa_union35.psaslksa._psaslkr3\n#define psaslkr4                   _psa_union35.psaslksa._psaslkr4\n#define psaslkr5                   _psa_union35.psaslksa._psaslkr5\n#define psaslkr6                   _psa_union35.psaslksa._psaslkr6\n#define psaslkr7                   _psa_union35.psaslksa._psaslkr7\n#define psaslkr8                   _psa_union35.psaslksa._psaslkr8\n#define psaslkr9                   _psa_union35.psaslksa._psaslkr9\n#define psaslkra                   _psa_union35.psaslksa._psaslkra\n#define psaslkrb                   _psa_union35.psaslksa._psaslkrb\n#define psaslkrc                   _psa_union35.psaslksa._psaslkrc\n#define psaslkrd                   _psa_union35.psaslksa._psaslkrd\n#define psaslkre                   _psa_union35.psaslksa._psaslkre\n#define psaslkrf                   _psa_union35.psaslksa._psaslkrf\n\n/* Values for field \"flcsvilc\" */\n#define flcsilcb                        0x07       /* -        SIGNIFICANT BITS IN ILC FIELD - LAST      */\n\n/* Values for field \"flcesilc\" */\n#define flcesilcb                       0x07       /* FLCE 89x: Significant bits in ILC. Last bit        */\n\n/* Values for field \"flcpiilc\" */\n#define flcpilcb                        0x07       /* -        SIGNIFICANT BITS IN ILC FIELD - LAST      */\n\n/* Values for field \"psapicod\" */\n#define psapiper                        0x80       /* -        PER INTERRUPT OCCURRED             MDC089 */\n#define psapimc                         0x40       /* -        MONITOR CALL INTERRUPT OCCURRED    MDC090 */\n#define psapipc                         0x3F       /* -        AN UNSOLICITED PROGRAM CHECK HAS          */\n\n/* Values for field \"_filler16\" */\n#define flcteaxm                        0x80       /* -      IF 0 FLCTEA IS RELATIVE TO THE PRIMARY      */\n\n/* Values for field \"flcteab3\" */\n#define flcsopi                         0x04       /* -      Suppression on protection flag       @LQA   */\n#define flctstdp                        0x00       /* -      IF 1, THE PRIMARY STD WAS USED.      @L8A   */\n#define flctstda                        0x01       /* -      IF 1, THE STD WAS AR QUALIFIED.      @L8A   */\n#define flctstds                        0x02       /* -      IF 1, THE SECONDARY STD WAS USED.    @L8A   */\n#define flctstdh                        0x03       /* -      IF 1, THE HOME STD WAS USED.         @L8A   */\n#define flcteacl                        0x7FFFF000 /* Mask to leave only TEA address       @LSA          */\n\n/* Values for field \"flcepilc\" */\n#define flcepilcb                       0x07       /* FLCE 8Dx: Significant bits in ILC. Last bit        */\n\n/* Values for field \"flcepicode1\" */\n#define flcepiper                       0x80       /* FLCE 8Fx: PER interruption code                    */\n#define flcepimc                        0x40       /* FLCE 8Fx: Monitor Call interruption code           */\n#define flcepipc                        0x3F       /* FLCE 8Fx: An unsolicited program interruption      */\n\n/* Values for field \"flcatmid\" */\n#define flcpswb4                        0x80       /* PSW.4 part of ATMID                  @LSA          */\n\n/* Values for field \"flcepercode0\" */\n#define flcepersb                       0x80       /* FLCE 96x: PER successful branch event              */\n#define flceperif                       0x40       /* FLCE 96x: PER instruction fetch event              */\n#define flcepersa                       0x20       /* FLCE 96x: PER storage alteration event             */\n#define flcepersar                      0x08       /* FLCE 96x: PER storage alteration using real        */\n\n/* Values for field \"flceperatmid\" */\n#define flceperpsw4                     0x80       /* FLCE 97x: PER PSW bit 4                            */\n#define flceperatmidvalid               0x40       /* FLCE 97x: When 1, the ATMID bits are valid         */\n#define flceperpsw32                    0x20       /* FLCE 97x: PER PSW bit 32                           */\n#define flceperpsw5                     0x10       /* FLCE 97x: PER PSW bit 5                            */\n#define flceperpsw16                    0x08       /* FLCE 97x: PER PSW bit 16                           */\n#define flceperpsw17                    0x04       /* FLCE 97x: PER PSW bit 17                           */\n#define flceperasceid                   0x03       /* FLCE 97x: PER ASCE identification. If a            */\n\n/* Values for field \"flceeaid\" */\n#define flceeaid0                       0x80       /* Bit 0 of EAID. Zero                                */\n#define flceeaid1                       0x40       /* Bit 1 of EAID. Zero                                */\n#define flceeaid2                       0x20       /* Bit 2 of EAID. Set only when PIC 2C for PTI        */\n#define flceeaid3                       0x10       /* Bit 3 of EAID. Set only when PIC 2C for SSAIR      */\n#define flceeaid_arnum                  0x0F       /* AR number. Zero when Bit 1 or Bit 2 is set         */\n\n/* Values for field \"flcarch\" */\n#define psazarch                        0x01       /* -      z/Architecture                       @LSA   */\n#define psaesame                        0x01       /* -      z/Architecture                       @LSA   */\n\n/* Values for field \"flceamdid\" */\n#define flceloeme                       0x01       /* Logout is Z/Architecture                           */\n\n/* Values for field \"flcetea7\" */\n#define flcepealc                       0x08       /* FLCE AFx: Protection exception due to              */\n#define flcesopi                        0x04       /* FLCE AFx: Suppress on protection indication        */\n#define flceteastd                      0x03       /* FLCE AFx: Segment table designation for TEA:       */\n\n/* Values for field \"flcfacl0\" */\n#define flcfn3                          0x80       /* -     N3 installed                         @LVA    */\n#define flcfzari                        0x40       /* -     z/Architecture installed             @LVA    */\n#define flcfzara                        0x20       /* -     z/Architecture active                @LVA    */\n#define flcfaslx                        0x02       /* -     ASN & LX reuse facility installed    @LVA    */\n\n/* Values for field \"flcfacl1\" */\n#define flcfsrs                         0x40       /* Sense-running-status                 @LZA          */\n#define flcfsske                        0x20       /* Cond. SSKE instruction installed     @0AA          */\n#define flcfctop                        0x10       /* STSI-enhancement                     @LYA          */\n\n/* Values for field \"flcfacl2\" */\n#define flcfetf2                        0x80       /* Extended Translation facility 2      @LVA          */\n#define flcfcrya                        0x40       /* Cryptographic assist                 @LVA          */\n#define flcfld                          0x20       /* Long Displacement facility           @LVA          */\n#define flcfldhp                        0x10       /* Long Displacement High Performance   @LVA          */\n#define flcfhmas                        0x08       /* HFP Multiply Add/Subtract            @LVA          */\n#define flcfeimm                        0x04       /* Extended immediate when z/Arch       @LVA          */\n#define flcfetf3                        0x02       /* Extended Translation Facility 3 when @LVA          */\n#define flcfhun                         0x01       /* HFP unnormalized extension           @LVA          */\n\n/* Values for field \"flcfacl3\" */\n#define flcfet2e                        0x80       /* ETF2-enhancement                   031215          */\n#define flcfstkf                        0x40       /* STCKF-enhancement                    @PIA          */\n#define flcfet3e                        0x02       /* ETF3-enhancement                   040512          */\n#define flcfect                         0x01       /* ECT-facility                         @LXA          */\n\n/* Values for field \"flcfacl4\" */\n#define flcfcssf                        0x80       /* Compare-and-swap-and-store           @LXA          */\n#define flcfcsf2                        0x40       /* Compare-and-swap-and-store 2         @LXA          */\n\n/* Values for field \"flcefacilitieslistbyte0\" */\n#define flcezarchn3                     0x80       /* Instructions marked \"N3\" in the instruction        */\n#define flceesamen3                     0x80       /* Instructions marked \"N3\" in the instruction        */\n#define flcezarchinstalled              0x40       /* The z/Architecture mode is installed on            */\n#define flceesameinstalled              0x40       /* The z/Architecture mode is installed on            */\n#define flcezarch                       0x20       /* The z/Architecture mode is active on the CPU       */\n#define flceesame                       0x20       /* The z/Architecture mode is active on the CPU       */\n#define flceidteinstalled               0x10       /* IDTE is installed                                  */\n#define flceidteclearingcombinedsegment 0x08       /* IDTE does clearing of                              */\n#define flceidteclearingcombinedregion  0x04       /* IDTE does clearing of                              */\n#define flceasnandlxreuseinstalled      0x02       /* The ASN and LX reuse facility is                   */\n#define flcestfle                       0x01       /* STFLE instruction is available                     */\n\n/* Values for field \"flcefacilitieslistbyte1\" */\n#define flcesenserunningstatus          0x40       /* sense-running-status facility                      */\n#define flcecondsskeinstalled           0x20       /* The conditional SSKE instruction is                */\n#define flceconfigurationtopology       0x10       /* STSI-enhancement for configuration                 */\n\n/* Values for field \"flcefacilitieslistbyte2\" */\n#define flceetf2                        0x80       /* Extended translation facility 2 is present         */\n#define flcecryptoassist                0x40       /* The cryptographic assist is present                */\n#define flcemessagesecurityassist       0x40       /* The message security assist is                     */\n#define flcelongdisplacement            0x20       /* The long displacement facility is                  */\n#define flcelongdisplacementhp          0x10       /* The long displacement facility has                 */\n#define flcehfpmas                      0x08       /* The HFP Multiply add/subtract facility is          */\n#define flceextendedimmediate           0x04       /* The extended immediate facility is                 */\n#define flceetf3                        0x02       /* The extended translaction facility 3 is            */\n#define flcehfpunnormextension          0x01       /* The HFP unnormalized extension                     */\n\n/* Values for field \"flcefacilitieslistbyte3\" */\n#define flceetf2e                       0x80       /* ETF2 enhancement is present 031215                 */\n#define flcestckf                       0x40       /* STCKF enhancement is present                       */\n#define flceetf3e                       0x02       /* ETF3 enhancement is present 040512                 */\n#define flceectf                        0x01       /* Extract Cpu Time facility                          */\n\n/* Values for field \"flcefacilitieslistbyte4\" */\n#define flcecssf                        0x80       /* Compare-and-swap-and-store facility                */\n#define flcecssf2                       0x40       /* Compare-and-swap-and-store facility 2              */\n\n/* Values for field \"flcecpusignals\" */\n#define flcewarningtrack                0x80       /* Warning track has occurred                         */\n\n/* Values for field \"flceinpsw\" */\n#define flcesame_len                    0x200\n#define bit0                            0x80\n#define bit1                            0x40\n#define bit2                            0x20\n#define bit3                            0x10\n#define bit4                            0x08\n#define bit5                            0x04\n#define bit6                            0x02\n#define bit7                            0x01\n\n/* Values for field \"psasup1\" */\n#define psaio                           0x80       /* -        I/O FLIH                                  */\n#define psasvc                          0x40       /* -        SVC FLIH                                  */\n#define psaext                          0x20       /* -        EXTERNAL FLIH                             */\n#define psapi                           0x10       /* -        PROGRAM CHECK FLIH                        */\n#define psalock                         0x08       /* -        LOCK ROUTINE                              */\n#define psadisp                         0x04       /* -        DISPATCHER                                */\n#define psatctl                         0x02       /* -        TCTL RECOVERY FLAG  (MDC310)     @Z40FP9A */\n#define psatype6                        0x01       /* -        TYPE 6 SVC IN CONTROL  (MDC311)  @Z40FP9A */\n\n/* Values for field \"psasup2\" */\n#define psaipcri                        0x80       /* -        REMOTE IMMEDIATE SIGNAL SERVICE ROUTINE   */\n#define psasvcr                         0x40       /* -        SUPER FRR USES FOR SVC FLIH      @ZMC3227 */\n#define psasvcrr                        0x20       /* -        SVC RECOVERY RECURSION INDICATOR.         */\n#define psaacr                          0x04       /* -        AUTOMATIC CPU RECONFIGURATION (ACR) IN    */\n#define psartm                          0x02       /* -        RECOVERY TERMINATION MONITOR (RTM) IN     */\n#define psalcr                          0x01       /* -        USED BY RTM TO SERIALIZE CALLS OF    @L5C */\n\n/* Values for field \"psasup3\" */\n#define psaiosup                        0x80       /* -        IF ON, A MAINLINE IOS COMPONENT SUCH AS   */\n#define psaspr                          0x10       /* -        SUPER FRR IS ACTIVE  (MDC305)    @ZA02995 */\n#define psaesta                         0x08       /* -        SVC 60 RECOVERY ROUTINE ACTIVE            */\n#define psarsm                          0x04       /* -        REAL STORAGE MANAGER (RSM) ENTERED FOR    */\n#define psaulcms                        0x02       /* -        LOCK MANAGER UNCONDITIONAL LOCAL OR       */\n#define psaslip                         0x01       /* -        IEAVTSLP RECURSION CONTROL BIT            */\n\n/* Values for field \"psasup4\" */\n#define psaldwt                         0x80       /* -        BLWLDWT IS IN CONTROL TO LOAD A      @LHC */\n#define psasmf                          0x40       /* -        SMF SUSPEND/RESET     (MDC599)   @G743PBB */\n#define psaesar                         0x20       /* -        SUPERVISOR ANALYSIS ROUTER IS ACTIVE @L5C */\n#define psamch                          0x10       /* -        Machine Check Handler is active.     @PKA */\n\n/* Values for field \"psaprocclass_byte1\" */\n#define psaprocclass_cp                 0x00       /* Standard CP. 0 is offset to SWUQ     @H4A          */\n#define psaprocclass_zaap               0x02       /* zAAP.                                @H4A          */\n#define psaprocclass_ziip               0x04       /* zIIP.                                @H5A          */\n#define psaprocclass_sup                0x04       /* zIIP.                                @H4A          */\n\n/* Values for field \"psaptype\" */\n#define psaifa                          0x40       /* Indicates Special Processor          @H3C          */\n#define psa_bylpar_zaap                 0x40       /* @H5A                                               */\n#define psa_bylpar_ifa                  0x40       /* @H5A                                               */\n#define psaifads                        0x20       /* zAAP (IFA) that is different                       */\n#define psadscrp                        0x10       /* Discretionary Processor              @LYA          */\n#define psaziip                         0x08       /* zIIP                                 @H4A          */\n#define psa_bylpar_ziip                 0x08       /* @H5A                                               */\n#define psasup                          0x08       /* zIIP                                 @H4A          */\n#define psa_bylpar_sup                  0x08       /* @H5A                                               */\n#define psaziipds                       0x04       /* zIIP that is different speed than CP @H4A          */\n#define psasupds                        0x04       /* zIIP that is different speed than CP @H4A          */\n\n/* Values for field \"psails\" */\n#define psailsio                        0x80       /* -      THE I/O FLIH IS USING THE            @L9A   */\n#define psailsex                        0x40       /* -      THE EXTERNAL FLIH IS USING THE       @L9A   */\n#define psailspc                        0x20       /* -      THE PROGRAM FLIH IS USING THE        @L9A   */\n#define psailsds                        0x10       /* -      THE DISPATCHER IS USING THE          @L9A   */\n#define psailsrs                        0x08       /* -      THE RESTART FLIH IS USING THE        @L9A   */\n#define psailsor                        0x04       /* -      EXIT IS USING THE INTERRUPT HANDLER  @LAA   */\n#define psailst6                        0x02       /* -      TYPE 6 SVC IS USING THE INTERRUPT    @D2A   */\n#define psailslk                        0x01       /* -      THE INTERRUPT HANDLER LINKAGE STACK  @D4A   */\n\n/* Values for field \"psaflags\" */\n#define psaaeit                         0x80       /* -      ADDRESSING ENVIRONMENT IS IN         @LOA   */\n#define psafpac                         0x40       /* FP simulation is active on this CPU. @08A          */\n#define psafppe                         0x20       /* Program-interrupt expected (i.e.,                  */\n\n/* Values for field \"psascaff\" */\n#define psaemema                        0x80       /* $$SCAFFOLD: z/Architecture                         */\n\n/* Values for field \"psampsw\" */\n#define psapiom                         0x02       /* INPUT/OUTPUT INTERRUPT MASK      @G860PXK          */\n#define psapexm                         0x01       /* EXTERNAL INTERRUPT MASK          @G860PXK          */\n\n/* Values for field \"psarsmcl\" */\n#define psalks1                         0x13       /* COUNT OF LOCKS IN CLHT1          @G860PXK          */\n\n/* Values for field \"psarsml\" */\n#define psarsmex                        0x80       /* -        BIT 0 OF PSARSML. IF ON, THE RSM          */\n\n/* Values for field \"psatrcel\" */\n#define psatrcex                        0x80       /* -        BIT 0 OF PSATRCEL. IF ON THE TRACE        */\n\n/* Values for field \"psaiosl\" */\n#define psaiosex                        0x80       /* -        BIT 0 OF PSAIOSL. IF ON THE IOS      @D3A */\n#define psalks2                         0x03       /* COUNT OF LOCKS IN CLHT2              @D3C          */\n\n/* Values for field \"psacpul\" */\n#define psalks3                         0x01       /* COUNT OF LOCKS IN CLHT3          @G860PXH          */\n\n/* Values for field \"psalocal\" */\n#define psalks4                         0x02       /* COUNT OF LOCKS IN CLHT4          @G860PXH          */\n\n/* Values for field \"psaclhs1\" */\n#define psacpuli                        0x80       /* -        CPU LOCK INDICATOR               @G860PXH */\n#define psasum                          0x10       /* -        SUMMARY BIT. IF ON, AT LEAST ONE     @LDA */\n#define psarsmli                        0x08       /* -        RSM LOCK INDICATOR               @G860PXH */\n#define psatrcei                        0x04       /* -        TRACE LOCK INDICATOR             @G860PXH */\n#define psaiosi                         0x02       /* -        IOS LOCK INDICATOR                   @D3A */\n\n/* Values for field \"psaclhs2\" */\n#define psarsmci                        0x10       /* -        RSM COMMON LOCK INDICATOR        @G860PXK */\n#define psarsmgi                        0x08       /* -        RSM GLOBAL LOCK INDICATOR        @G860PXH */\n#define psavfixi                        0x04       /* -        VSM FIX LOCK INDICATOR           @G860PXH */\n#define psaasmgi                        0x02       /* -        ASM GLOBAL LOCK INDICATOR        @G860PXH */\n#define psarsmsi                        0x01       /* -        RSM STEAL LOCK INDICATOR         @G860PXH */\n\n/* Values for field \"psaclhs3\" */\n#define psarsmxi                        0x80       /* -        RSM CROSS MEMORY LOCK INDICATOR  @G860PXH */\n#define psarsmai                        0x40       /* -        RSM ADDRESS SPACE LOCK INDICATOR @G860PXH */\n#define psavpagi                        0x20       /* -        VSM PAGE LOCK INDICATOR          @G860PXH */\n#define psadspli                        0x10       /* -        DISPATCHER LOCK INDICATOR                 */\n#define psaasmli                        0x08       /* -        ASM LOCK INDICATOR  (MDC388)     @G50EP9A */\n#define psasalli                        0x04       /* -        SPACE ALLOCATION LOCK INDICATOR           */\n#define psaiosli                        0x02       /* -        IOS SYNCHRONIZATION LOCK INDICATOR        */\n#define psarsmdi                        0x01       /* -        RSM DATA SPACE LOCK INDICATOR        @LBA */\n\n/* Values for field \"psaclhs4\" */\n#define psaiouli                        0x80       /* -        IOS UCB LOCK INDICATOR  (MDC393) @G50EP9A */\n#define psatpali                        0x08       /* -        TPACBDEB LOCK INDICATOR (MDC397) @G50EP9A */\n#define psasrmli                        0x04       /* -        SYSTEM RESOURCE MANAGER (SRM) LOCK        */\n#define psacmsli                        0x02       /* -        CROSS MEMORY SERVICES LOCK INDICATOR      */\n#define psalclli                        0x01       /* -        LOCAL LOCK INDICATOR  (MDC400)   @G50EP9A */\n\n/* Values for field \"psainte\" */\n#define psanuin                         0x80       /* -        CPU TIMER CANNOT BE USED                  */\n\n/* Values for field \"psapcfb1\" */\n#define psapcmc                         0x01       /* -        MC INTERRUPT      (MDC605)       @G383P9A */\n#define psapcpf                         0x02       /* -        PAGE FAULT                       @G383P9A */\n#define psapcps                         0x03       /* -        PER/SPACE SWITCH INTERRUPT       @G383PXU */\n#define psapcad                         0x04       /* -        ADDRESSING EXCEPTION  (MDC488)   @G383P9A */\n#define psapctr                         0x05       /* -        TRANSLATION EXCEPTION  (MDC489)  @G383P9A */\n#define psapcpc                         0x06       /* -        PROGRAM CHECK  (MDC490)          @G383P9A */\n#define psapctrc                        0x07       /* -        TRACE INTERRUPT                  @G860PXK */\n#define psapcaf                         0x08       /* -        NEW VALUE FOR PROGRAM INTERRUPT      @03A */\n#define psapcls                         0x09       /* -        LINKAGE STACK INTERRUPT FUNCTION     @L8A */\n#define psapcart                        0x0A       /* -        ACCESS REGISTER TRANSLATION          @L8A */\n#define psapcdpf                        0x0B       /* -        DISABLED PAGE/SEGMENT FAULT          @LCA */\n#define psapcdar                        0x0C       /* -        DISABLED ART PIC X'2B' FUNCTION      @LCA */\n#define psapcprt                        0x0D       /* -        Protection exception function value  @LQA */\n#define psapcmax                        0x0D       /* -        MAXIMUM VALID FUNCTION VALUE         @LQC */\n\n/* Values for field \"psapcfb2\" */\n#define psapctrr                        0x80       /* -        TRACE INTERRUPT RECURSION        @YA01102 */\n#define psapcmt                         0x40       /* -        TRACE RECURSION FLAG  (MDC493)   @G383P9A */\n\n/* Values for field \"psapcfb3\" */\n#define psapcp1                         0x80       /* -        FIRST LEVEL PROGRAM CHECK        @G383P9A */\n#define psapcp2                         0x40       /* -        SECOND LEVEL PROGRAM CHECK       @G383P9A */\n#define psapcde                         0x20       /* -        DAT ERROR CONDITION  (MDC497)    @G383P9A */\n#define psapclv                         0x10       /* -        0=REGISTERS IN LCCA, 1=REGISTERS @G383P9A */\n#define psapcp3                         0x08       /* -        THIRD LEVEL PROGRAM CHECK        @G383P9A */\n#define psapcp4                         0x04       /* -        FOURTH LEVEL PROGRAM CHECK       @G383P9A */\n#define psapcpfr                        0x02       /* -        RECURSIVE PAGE FAULT INDICATOR       @LAA */\n#define psapcavr                        0x01       /* -        RECURSIVE ASTE VALIDITY INDICATOR    @LCA */\n\n/* Values for field \"psapcfb4\" */\n#define psapcdnv                        0x80       /* -        DUCT validity indicator              @PBA */\n#define psapclsr                        0x40       /* -        IEAVLSIH has invoked IARPTEPR and    @PEA */\n\n/* Values for field \"psamflgs\" */\n#define psanss                          0x80       /* -        ENABLED UNLOCKED TASK WITH FRR   @G383P9A */\n#define psaprsrb                        0x40       /* -        Preemptable-class SRB                @LPA */\n\n/* Values for field \"psamode\" */\n#define psataskm                        0x00       /* -        TASK MODE VALUE  (MDC338)        @G50DP9A */\n#define psasrbm                         0x04       /* -        SRB MODE VALUE  (MDC339)         @G50DP9A */\n#define psawaitm                        0x08       /* -        WAIT MODE VALUE  (MDC340)        @G50DP9A */\n#define psadispm                        0x10       /* -        DISPATCHER MODE VALUE  (MDC342)  @G50DP9A */\n#define psapsrbm                        0x20       /* -        PSEUDO SRB MODE FLAG BIT.  THIS BIT MAY   */\n\n/* Values for field \"psalheb0\" */\n#define psablsdi                        0x80       /* -        BMFLSD LOCK INDICATOR.               @LGA */\n#define psaxdsi                         0x40       /* -        XCFDS LOCK INDICATOR.                @LEA */\n#define psaxresi                        0x20       /* -        XCFRES LOCK INDICATOR.               @LEA */\n#define psaxqi                          0x10       /* -        XCFQ LOCK INDICATOR.                 @LEA */\n#define psaeseti                        0x08       /* -        ETRSET LOCK INDICATOR.               @LFA */\n#define psaixsci                        0x04       /* -        IXLSCH LOCK INDICATOR.               @LMC */\n#define psaixshi                        0x02       /* -        IXLSHR LOCK INDICATOR.               @LMC */\n#define psaixdsi                        0x01       /* -        IXLDS LOCK INDICATOR.                @LLA */\n\n/* Values for field \"psalheb1\" */\n#define psaixlli                        0x80       /* -        IXLSHELL LOCK INDICATOR.             @LMC */\n#define psauluti                        0x40       /* -        IOSULUT LOCK INDICATOR.              @LJA */\n#define psaixlri                        0x20       /* -        IXLREQST LOCK INDICATOR.             @05A */\n#define psawlmri                        0x10       /* -        WLMRES LOCK INDICATOR                @LRA */\n#define psawlmqi                        0x08       /* -        WLMQ LOCK INDICATOR.                 @LRA */\n#define psacntxi                        0x04       /* -        CONTEXT LOCK INDICATOR               @LRA */\n#define psaregsi                        0x02       /* -        REGSRV LOCK INDICATOR.               @LRA */\n#define psassdli                        0x01       /* -        SSD LOCK INDICATOR.                  @LTA */\n\n/* Values for field \"psacr0cb\" */\n#define psaenabl                        0x10       /* -        TO ENABLE PSA PROTECTION                  */\n#define psadsabl                        0x00       /* -        TO DISABLE PSA PROTECTION                 */\n\n/* Values for field \"psacr0sv\" */\n#define psacr0en                        0x10       /* -        IF 0, PSA PROTECT DISABLED.  IF 1, PSA    */\n#define psacr0al                        0x08       /* -        IF 1, ASN & LX Reuse facility is          */\n#define psacr0fp                        0x04       /* -        IF 1, extended floating point is          */\n#define psacr0vi                        0x02       /* -        IF 1, vector instructions are             */\n\n/* Values for field \"psarcr0\" */\n#define psarpen                         0x10       /* -        IF 0, PSA PROTECT DISABLED.  IF 1, PSA    */\n\n/* Values for field \"psascfb\" */\n#define psaiopr                         0x80       /* -        INDICATES IF INTERRUPTED TASK SHOULD @L1A */\n#define psaiorty                        0x40       /* -        I/O FLIH RECOVERY FLAG. IF 1,        @L5A */\n\n/* Values for field \"psatrace\" */\n#define psatroff                        0x80       /* -        IF ON, SYSTEM TRACE SUSPENDED ON THIS     */\n\n/* Values for field \"psasflgs\" */\n#define psaschda                        0x80       /* Schedule is active                   @LPA          */\n#define psamcha                         0x40       /* Machine Check is active              @06A          */\n#define psarsta                         0x20       /* Restart is active                    @06A          */\n#define psaegra                         0x10       /* Global Recovery is active            @06A          */\n#define psartma                         0x08       /* Selected RTM functions are active    @06A          */\n\n/* Values for field \"psamiscf\" */\n#define psaalr                          0x80       /* Equivalent to CVTALR                 @LVA          */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IHARB": {"ttr": 2405, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct rbprfx \u00e4\n  void          *rbrsv012; /* -            RESERVED                                  */\n  void          *rbrsv013; /* -            RESERVED                                  */\n  short int      rbrsv014; /* -            RESERVED                                  */\n  unsigned char  rbrsv015; /* -            RESERVED                                  */\n  unsigned char  rbrsv016; /* -            RESERVED                                  */\n  unsigned char  rbrsv017; /* -            RESERVED                                  */\n  unsigned char  rbrsv018; /* -            RESERVED                                  */\n  unsigned char  rbrsv019; /* -            RESERVED                                  */\n  unsigned char  rbrsv028; /* -            RESERVED                                  */\n  void          *rbrsv037; /* -            RESERVED                                  */\n  void          *rbrsv038; /* -            RESERVED                                  */\n  short int      rbrsv039; /* -            RESERVED                                  */\n  unsigned char  rbrsv040; /* -            RESERVED                                  */\n  unsigned char  rbrsv041; /* -            RESERVED                                  */\n  void          *rbrsv050; /* -            RESERVED                                  */\n  struct \u00e4\n    void          *_rbxsb;    /* -            ADDRESS OF EXTENDED STATUS BLOCK @G381P9A */\n    short int      _rbrsv052; /* -            RESERVED                                  */\n    unsigned char  _rbkeysta; /* -            THE KEY AND STATE OF THE IRB ROUTINE      */\n    unsigned char  _rbflags2; /* -            SECOND FLAG BYTE                 @G860PXB */\n    \u00fc rbprfxst;\n  struct \u00e4\n    unsigned char  _rbrtpsw1\u00c48\u00dc; /* -          FIRST DOUBLE WORD OF PSW - SYSTEM AND */\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _rbrsv160; /* -          RESERVED - SET TO ZERO IN LOW CORE BY       */\n        char           _rbrtilc;  /* -          INSTRUCTION LENGTH COUNTER - NUMBER OF      */\n        short int      _rbrtincd; /* -            INTERRUPT CODE                     MDC019 */\n        \u00fc rbrticil;\n      void          *_rbrtran; /* -            VIRTUAL ADDRESS CAUSING TRANSLATION */\n      \u00fc rbrtpsw2;\n    \u00fc rbrtopsw;\n  unsigned char  rbflags1; /* -            FLAG BYTE                                 */\n  unsigned char  rbflags3; /* -        FLAG BYTE. SERIALIZATION:LOCAL LOCK  @D2C     */\n  short int      rbxwaiti; /* -            EXPLICIT WAIT INDEX  (MDC342)    @G50CP9A */\n  struct \u00e4\n    char           _rbwcsa; /* -          NUMBER OF REQUESTS WAITING AT TIME OF */\n    struct \u00e4\n      unsigned char  _rbinlnth;    /* -          INSTRUCTION LENGTH CODE - 4 HIGH-ORDER */\n      unsigned char  _rbintcod\u00c42\u00dc; /* -          INTERRUPT CODE.  THIS OFFSET FIXED BY  */\n      \u00fc rbintcda;\n    \u00fc rbwlic;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _rbtmfld;     /* -            INDICATORS FOR TIMER ROUTINES.  WHEN */\n      unsigned char  _filler1\u00c47\u00dc;  /* -          LAST 7 BYTES OF RBEXRTNM               */\n      \u00fc rbexrtnm;\n    struct \u00e4\n      unsigned char  _rbprfxnd;    /* -           END OF RB PREFIX */\n      unsigned char  _filler2\u00c47\u00dc;\n      \u00fc _rbprfx_struct1;\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _filler3;       /* -            RBTMFLD                                */\n        int            _rbppsav1 : 24; /* -          ADDRESS OF PROBLEM PROGRAM REGISTER SAVE */\n        \u00fc rbppsav;\n      unsigned char  _rbabopsw\u00c44\u00dc; /* -          AFTER EXECUTION OF TRANSIENT AREA HANDLER */\n      \u00fc _rbprfx_struct2;\n    \u00fc _rbprfx_union1;\n  short int      rbsize;   /* -            SIZE OF THIS RB IN DOUBLEWORDS (ALL RB'S) */\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        struct \u00e4\n          unsigned char  _xstab1; /* -            SAME AS RBSTAB1 */\n          \u00fc rbstab1;\n        struct \u00e4\n          unsigned char  _xstab2; /* -            SAME AS RBSTAB2 */\n          \u00fc rbstab2;\n        \u00fc xstab;\n      \u00fc rbstab;\n    struct \u00e4\n      unsigned char  _filler4;  /* -            RBSTAB1 */\n      unsigned char  _filler5;  /* -            RBSTAB2 */\n      \u00fc _rbprfx_struct3;\n    \u00fc _rbprfx_union2;\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _filler6\u00c43\u00dc;  /* -          FIRST 3 BYTES OF EP ADDRESS      @G860PXB */\n        unsigned char  _rbeplbyt;    /* BITS 0-6 = BITS 24-30 OF EP ADDR                     */\n        \u00fc rbepa;\n      \u00fc rbep;\n    struct \u00e4\n      unsigned char  _rbcdflgs;    /* -            CONTROL FLAGS                         */\n      int            _rbcde1 : 24; /* -          ADDRESS OF CDE, ADDRESS OF LPDE OR ZERO */\n      \u00fc rbcde;\n    void          *_filler7;  /* -            SYSTEM-DEPENDENT FIELD */\n    \u00fc _rbprfx_union3;\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _rbopswb1; /* -            OLD PSW BYTE 1  (MDC309)         @G65RP9A */\n        unsigned char  _rbopswb2; /* -            OLD PSW BYTE 2  (MDC304)         @X50AD9A */\n        unsigned char  _filler8;  /* -          OLD PSW BYTE 3                   @G860PVB   */\n        unsigned char  _rbopswb4; /* -            OLD PSW BYTE 4                       @L2A */\n        void          *_rbopswa;  /* -            OLD PSW BYTES 5-8 (ADDRESS)      @G860PVB */\n        \u00fc xrbpsw;\n      \u00fc rbopsw;\n    unsigned char  _filler9\u00c48\u00dc;  /* -          RBOPSW */\n    \u00fc _rbprfx_union4;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _filler10;     /* -            ZERO                                    */\n      int            _rbpgmq1 : 24; /* -          ADDRESS OF RB INDICATING A REQUEST TO USE */\n      \u00fc rbpgmq;\n    struct \u00e4\n      char           _filler11;    /* -          RBUSE - CONTAINS ZEROS             */\n      int            _rbsqea : 24; /* -          CHAIN OF SUPERVISOR QUEUE ELEMENTS */\n      \u00fc rbsqe;\n    struct \u00e4\n      char           _rbuse;       /* -          USE COUNT USED BY ATTACH (IRB) */\n      int            _rbiqe1 : 24; /* -          LIST ORIGIN FOR IQE (IRB)      */\n      \u00fc rbiqe;\n    struct \u00e4\n      int            _rbiqea; /* -            LIST ORIGIN FOR RQE (IRB WITH 4-BYTE LINK */\n      \u00fc rbiqe2;\n    void          *_filler12;  /* -            SYSTEM-DEPENDENT FIELD */\n    \u00fc _rbprfx_union5;\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        struct \u00e4\n          char           _xrbwt; /* -          SAME AS RBWCF (ALL RB'S EXCEPT LPRB AND */\n          \u00fc rbwcf;\n        int            _xrblnka : 24; /* -          SAME AS RBLINKB (ALL RB'S EXCEPT LPRB AND */\n        \u00fc xrblnk;\n      \u00fc rblink;\n    struct \u00e4\n      char           _rbscf;          /* -          RB SUSPENDED COUNT  (MDC339)     @Z40FP9A */\n      int            _filler13 : 24;  /* -          RBLINKB                                   */\n      \u00fc _rbprfx_struct4;\n    \u00fc _rbprfx_union6;\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        struct \u00e4\n          int            _xrbreg0; /* -            SAME AS RBGRS0 */\n          \u00fc rbgrs0;\n        struct \u00e4\n          int            _xrbreg1; /* -            SAME AS RBGRS1 */\n          \u00fc rbgrs1;\n        struct \u00e4\n          int            _xrbreg2; /* -            SAME AS RBGRS2 */\n          \u00fc rbgrs2;\n        struct \u00e4\n          int            _xrbreg3; /* -            SAME AS RBGRS3 */\n          \u00fc rbgrs3;\n        struct \u00e4\n          int            _xrbreg4; /* -            SAME AS RBGRS4 */\n          \u00fc rbgrs4;\n        struct \u00e4\n          int            _xrbreg5; /* -            SAME AS RBGRS5 */\n          \u00fc rbgrs5;\n        struct \u00e4\n          int            _xrbreg6; /* -            SAME AS RBGRS6 */\n          \u00fc rbgrs6;\n        struct \u00e4\n          int            _xrbreg7; /* -            SAME AS RBGRS7 */\n          \u00fc rbgrs7;\n        struct \u00e4\n          int            _xrbreg8; /* -            SAME AS RBGRS8 */\n          \u00fc rbgrs8;\n        struct \u00e4\n          int            _xrbreg9; /* -            SAME AS RBGRS9 */\n          \u00fc rbgrs9;\n        struct \u00e4\n          int            _xrbreg10; /* -            SAME AS RBGRS10 */\n          \u00fc rbgrs10;\n        struct \u00e4\n          int            _xrbreg11; /* -            SAME AS RBGRS11 */\n          \u00fc rbgrs11;\n        struct \u00e4\n          int            _xrbreg12; /* -            SAME AS RBGRS12 */\n          \u00fc rbgrs12;\n        struct \u00e4\n          int            _xrbreg13; /* -            SAME AS RBGRS13 */\n          \u00fc rbgrs13;\n        struct \u00e4\n          int            _xrbreg14; /* -            SAME AS RBGRS14 */\n          \u00fc rbgrs14;\n        struct \u00e4\n          int            _xrbreg15; /* -            SAME AS RBGRS15 */\n          \u00fc rbgrs15;\n        \u00fc xrbreg;\n      \u00fc rbgrsave;\n    unsigned char  _filler14\u00c464\u00dc;  /* -         RBGRSAVE */\n    \u00fc _rbprfx_union7;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _rbexsave\u00c448\u00dc;  /* -        EXTENDED SAVE AREA FOR SVC ROUTINES */\n      unsigned char  _filler15\u00c448\u00dc;\n      \u00fc _rbprfx_struct5;\n    struct \u00e4\n      struct \u00e4\n        void          *_rbrsv135; /* -            RESERVED */\n        \u00fc irbend;\n      short int      _rbrsv136;      /* -            RESERVED */\n      unsigned char  _rbrsv137;      /* -            RESERVED */\n      unsigned char  _rbrsv138;      /* -            RESERVED */\n      struct \u00e4\n        int            _tirbend; /* -           END OF TIRB */\n        \u00fc prbend;\n      unsigned char  _filler16\u00c484\u00dc;\n      \u00fc _rbprfx_struct6;\n    struct \u00e4\n      double         _xrbesa\u00c410\u00dc;    /* -          SVRB - EXTENDED SAVE AREA OF UP TO TEN */\n      unsigned char  _filler17\u00c416\u00dc;\n      \u00fc _rbprfx_struct7;\n    struct \u00e4\n      void          *_rbnexav;       /* -            ADDRESS OF NEXT AVAILABLE IQE (IRB) */\n      int            _rbiqewrk;      /* -            IQE WORK SPACE, VARIABLE LENGTH,    */\n      unsigned char  _filler18\u00c488\u00dc;\n      \u00fc _rbprfx_struct8;\n    struct \u00e4\n      unsigned char  _rbsirbwa\u00c464\u00dc;  /* -         SIRB WORK AREA                     MDC022 */\n      void          *_rbrsv161;      /* -            RESERVED - RBRSV148 FOLLOWS THIS FIELD */\n      unsigned char  _filler19\u00c428\u00dc;\n      \u00fc _rbprfx_struct9;\n    struct \u00e4\n      unsigned char  _filler20\u00c48\u00dc;\n      unsigned char  _filler21\u00c440\u00dc;  /* -         LAST 40 BYTES OF RBEXSAVE                   */\n      struct \u00e4\n        void          *_rbschain; /* -            POINTER TO NEXT SCB ON CHAIN              */\n        void          *_rbsexit;  /* -            POINTER TO USER WRITTEN EXIT ROUTINE      */\n        struct \u00e4\n          unsigned char  _rbsflgs1;      /* -            FIRST FLAG BYTE  (MDC309)        @Z40FP9A */\n          int            _rbsparma : 24; /* -          ADDRESS OF PARAMETER LIST FOR STA EXIT      */\n          \u00fc rbsparm;\n        struct \u00e4\n          unsigned char  _rbsflgs2;      /* -            SECOND FLAG BYTE  (MDC320)       @Z40FP9A */\n          int            _rbsownra : 24; /* -          RB ADDRESS IF STAE/STAR, TCB ADDRESS IF     */\n          \u00fc rbsownr;\n        struct \u00e4\n          unsigned char  _rbsflg3;  /* -            OPTION FLAGS  (MDC327)           @Z40FP9A */\n          unsigned char  _rbspkey;  /* -            PROGRAM KEY  (MDC334)            @Z40FP9A */\n          unsigned char  _rbsid;    /* -            SCB IDENTIFIER  (MDC335)         @Z40FP9A */\n          unsigned char  _rbrsv169; /* -            RESERVED  (MDC336)               @Z40FP9A */\n          \u00fc rbsdata;\n        void          *_rbsxptr;  /* -            POINTER TO SCB EXTENSION (SCBX)  @G381P9A */\n        \u00fc rbscbb;\n      int            _sirbend;       /* -           END OF SIRB                 MDC021-MDC022 */\n      unsigned char  _filler22\u00c420\u00dc;\n      \u00fc _rbprfx_struct10;\n    struct \u00e4\n      unsigned char  _filler23\u00c472\u00dc;\n      int            _rbfeparm\u00c46\u00dc;   /* -           PARAMETER AREA FOR ROUTINES THAT USE */\n      \u00fc _rbprfx_struct11;\n    \u00fc _rbprfx_union8;\n  struct \u00e4\n    unsigned char  _filler24\u00c412\u00dc;  /* -         FIRST 12 BYTES OF RBSCBX         @G860PXB    */\n    void          *_rbsxparm;      /* -            31-BIT PARAMETER LIST ADDRESS    @G860PXB */\n    \u00fc rbscbx;\n  int            svrbend;  /* -           END OF SVRB (BOTH)  (MDC338)     @Z40FP9A  */\n  \u00fc;\n\n#define rbxsb     rbprfxst._rbxsb\n#define rbrsv052  rbprfxst._rbrsv052\n#define rbkeysta  rbprfxst._rbkeysta\n#define rbflags2  rbprfxst._rbflags2\n#define rbrtpsw1  rbrtopsw._rbrtpsw1\n#define rbrsv160  rbrtopsw.rbrtpsw2.rbrticil._rbrsv160\n#define rbrtilc   rbrtopsw.rbrtpsw2.rbrticil._rbrtilc\n#define rbrtincd  rbrtopsw.rbrtpsw2.rbrticil._rbrtincd\n#define rbrtran   rbrtopsw.rbrtpsw2._rbrtran\n#define rbwcsa    rbwlic._rbwcsa\n#define rbinlnth  rbwlic.rbintcda._rbinlnth\n#define rbintcod  rbwlic.rbintcda._rbintcod\n#define rbtmfld   _rbprfx_union1.rbexrtnm._rbtmfld\n#define rbprfxnd  _rbprfx_union1._rbprfx_struct1._rbprfxnd\n#define rbppsav1  _rbprfx_union1._rbprfx_struct2.rbppsav._rbppsav1\n#define rbabopsw  _rbprfx_union1._rbprfx_struct2._rbabopsw\n#define xstab1    _rbprfx_union2.rbstab.xstab.rbstab1._xstab1\n#define xstab2    _rbprfx_union2.rbstab.xstab.rbstab2._xstab2\n#define rbeplbyt  _rbprfx_union3.rbep.rbepa._rbeplbyt\n#define rbcdflgs  _rbprfx_union3.rbcde._rbcdflgs\n#define rbcde1    _rbprfx_union3.rbcde._rbcde1\n#define rbopswb1  _rbprfx_union4.rbopsw.xrbpsw._rbopswb1\n#define rbopswb2  _rbprfx_union4.rbopsw.xrbpsw._rbopswb2\n#define rbopswb4  _rbprfx_union4.rbopsw.xrbpsw._rbopswb4\n#define rbopswa   _rbprfx_union4.rbopsw.xrbpsw._rbopswa\n#define rbpgmq1   _rbprfx_union5.rbpgmq._rbpgmq1\n#define rbsqea    _rbprfx_union5.rbsqe._rbsqea\n#define rbuse     _rbprfx_union5.rbiqe._rbuse\n#define rbiqe1    _rbprfx_union5.rbiqe._rbiqe1\n#define rbiqea    _rbprfx_union5.rbiqe2._rbiqea\n#define xrbwt     _rbprfx_union6.rblink.xrblnk.rbwcf._xrbwt\n#define xrblnka   _rbprfx_union6.rblink.xrblnk._xrblnka\n#define rbscf     _rbprfx_union6._rbprfx_struct4._rbscf\n#define xrbreg0   _rbprfx_union7.rbgrsave.xrbreg.rbgrs0._xrbreg0\n#define xrbreg1   _rbprfx_union7.rbgrsave.xrbreg.rbgrs1._xrbreg1\n#define xrbreg2   _rbprfx_union7.rbgrsave.xrbreg.rbgrs2._xrbreg2\n#define xrbreg3   _rbprfx_union7.rbgrsave.xrbreg.rbgrs3._xrbreg3\n#define xrbreg4   _rbprfx_union7.rbgrsave.xrbreg.rbgrs4._xrbreg4\n#define xrbreg5   _rbprfx_union7.rbgrsave.xrbreg.rbgrs5._xrbreg5\n#define xrbreg6   _rbprfx_union7.rbgrsave.xrbreg.rbgrs6._xrbreg6\n#define xrbreg7   _rbprfx_union7.rbgrsave.xrbreg.rbgrs7._xrbreg7\n#define xrbreg8   _rbprfx_union7.rbgrsave.xrbreg.rbgrs8._xrbreg8\n#define xrbreg9   _rbprfx_union7.rbgrsave.xrbreg.rbgrs9._xrbreg9\n#define xrbreg10  _rbprfx_union7.rbgrsave.xrbreg.rbgrs10._xrbreg10\n#define xrbreg11  _rbprfx_union7.rbgrsave.xrbreg.rbgrs11._xrbreg11\n#define xrbreg12  _rbprfx_union7.rbgrsave.xrbreg.rbgrs12._xrbreg12\n#define xrbreg13  _rbprfx_union7.rbgrsave.xrbreg.rbgrs13._xrbreg13\n#define xrbreg14  _rbprfx_union7.rbgrsave.xrbreg.rbgrs14._xrbreg14\n#define xrbreg15  _rbprfx_union7.rbgrsave.xrbreg.rbgrs15._xrbreg15\n#define rbexsave  _rbprfx_union8._rbprfx_struct5._rbexsave\n#define rbrsv135  _rbprfx_union8._rbprfx_struct6.irbend._rbrsv135\n#define rbrsv136  _rbprfx_union8._rbprfx_struct6._rbrsv136\n#define rbrsv137  _rbprfx_union8._rbprfx_struct6._rbrsv137\n#define rbrsv138  _rbprfx_union8._rbprfx_struct6._rbrsv138\n#define tirbend   _rbprfx_union8._rbprfx_struct6.prbend._tirbend\n#define xrbesa    _rbprfx_union8._rbprfx_struct7._xrbesa\n#define rbnexav   _rbprfx_union8._rbprfx_struct8._rbnexav\n#define rbiqewrk  _rbprfx_union8._rbprfx_struct8._rbiqewrk\n#define rbsirbwa  _rbprfx_union8._rbprfx_struct9._rbsirbwa\n#define rbrsv161  _rbprfx_union8._rbprfx_struct9._rbrsv161\n#define rbschain  _rbprfx_union8._rbprfx_struct10.rbscbb._rbschain\n#define rbsexit   _rbprfx_union8._rbprfx_struct10.rbscbb._rbsexit\n#define rbsflgs1  _rbprfx_union8._rbprfx_struct10.rbscbb.rbsparm._rbsflgs1\n#define rbsparma  _rbprfx_union8._rbprfx_struct10.rbscbb.rbsparm._rbsparma\n#define rbsflgs2  _rbprfx_union8._rbprfx_struct10.rbscbb.rbsownr._rbsflgs2\n#define rbsownra  _rbprfx_union8._rbprfx_struct10.rbscbb.rbsownr._rbsownra\n#define rbsflg3   _rbprfx_union8._rbprfx_struct10.rbscbb.rbsdata._rbsflg3\n#define rbspkey   _rbprfx_union8._rbprfx_struct10.rbscbb.rbsdata._rbspkey\n#define rbsid     _rbprfx_union8._rbprfx_struct10.rbscbb.rbsdata._rbsid\n#define rbrsv169  _rbprfx_union8._rbprfx_struct10.rbscbb.rbsdata._rbrsv169\n#define rbsxptr   _rbprfx_union8._rbprfx_struct10.rbscbb._rbsxptr\n#define sirbend   _rbprfx_union8._rbprfx_struct10._sirbend\n#define rbfeparm  _rbprfx_union8._rbprfx_struct11._rbfeparm\n#define rbsxparm  rbscbx._rbsxparm\n\n/* Values for field \"rbrsv019\" */\n#define rbrsv020 0x80 /* -  RESERVED                                           */\n#define rbrsv021 0x40 /* -  RESERVED                                           */\n#define rbrsv022 0x20 /* -  RESERVED                                           */\n#define rbrsv023 0x10 /* -  RESERVED                                           */\n#define rbrsv024 0x08 /* -  RESERVED                                           */\n#define rbrsv025 0x04 /* -  RESERVED                                           */\n#define rbrsv026 0x02 /* -  RESERVED                                           */\n#define rbrsv027 0x01 /* -  RESERVED                                           */\n\n/* Values for field \"rbrsv028\" */\n#define rbrsv029 0x80 /* -  RESERVED                                           */\n#define rbrsv030 0x40 /* -  RESERVED                                           */\n#define rbrsv031 0x20 /* -  RESERVED                                           */\n#define rbrsv032 0x10 /* -  RESERVED                                           */\n#define rbrsv033 0x08 /* -  RESERVED                                           */\n#define rbrsv034 0x04 /* -  RESERVED                                           */\n#define rbrsv035 0x02 /* -  RESERVED                                           */\n#define rbrsv036 0x01 /* -  RESERVED                                           */\n\n/* Values for field \"rbrsv041\" */\n#define rbrsv042 0x80 /* -  RESERVED                                           */\n#define rbrsv043 0x40 /* -  RESERVED                                           */\n#define rbrsv044 0x20 /* -  RESERVED                                           */\n#define rbrsv045 0x10 /* -  RESERVED                                           */\n#define rbrsv046 0x08 /* -  RESERVED                                           */\n#define rbrsv047 0x04 /* -  RESERVED                                           */\n#define rbrsv048 0x02 /* -  RESERVED                                           */\n#define rbrsv049 0x01 /* -  RESERVED                                           */\n\n/* Values for field \"rbkeysta\" */\n#define rbkey    0xF0 /* THE KEY OF THE IRB ROUTINE           @01A             */\n#define rbcirb   0x0C /* THIS IRB WAS CREATED BY CIRB         @01A             */\n#define rbstate  0x01 /* PROBLEM STATE IRB ROUTINE INDICATOR  @01A             */\n\n/* Values for field \"rbflags2\" */\n#define rbxwaita 0x80 /* -         AMODE OF WAITER WHO HAS ENTERED EXPLICIT    */\n#define rbrsv056 0x40 /* -  RESERVED                                           */\n#define rbrsv057 0x20 /* -  RESERVED                                           */\n#define rbrsv058 0x10 /* -  RESERVED                                           */\n#define rbrsv059 0x08 /* -  RESERVED                                           */\n#define rbrsv060 0x04 /* -  RESERVED                                           */\n#define rbrsv061 0x02 /* -  RESERVED                                           */\n#define rbrsv062 0x01 /* -  RESERVED                                           */\n\n/* Values for field \"rbflags1\" */\n#define rbslock  0x80 /* -         INDICATES THAT THIS RB IS                   */\n#define rbxwait  0x40 /* -         INDICATES THAT THE PROGRAM OPERATING        */\n#define rbabend  0x20 /* -         ABEND SVRB  (SVRB-BOTH)                     */\n#define rbxwprm  0x10 /* -         WAIT POST RESOURCE MANAGER REQUEST          */\n#define rbasir   0x08 /* -         ASIR IS RUNNING UNDER THIS RB      ICB444   */\n#define rblongwt 0x04 /* -         LONG WAIT ISSUED UNDER THIS RB     MDC009   */\n#define rbscb    0x02 /* -         SET BY SVC 60 TO INDICATE RB HAS AN         */\n#define rbsssyn  0x01 /* -         SYNCHRONIZED STATUS STOP PENDING FOR        */\n\n/* Values for field \"rbflags3\" */\n#define rbwtecb  0x80 /* -        WAIT WAS ISSUED WITH AN ECB PROVIDED @D2A    */\n\n/* Values for field \"rbtmfld\" */\n#define rbtmque  0x80 /* -         TIMER ELEMENT NOT ON QUEUE                  */\n#define rbtmtod  0x40 /* -         LOCAL TIME-OF-DAY OPTION IS USED            */\n#define rbrsv005 0x20 /* -   RESERVED                                          */\n#define rbwlim   0x10 /* -         WAIT LIMIT EXCEEDED                MDC001   */\n#define rbtmcmp  0x08 /* -         INTERVAL HAS EXPIRED                        */\n#define rbtmind2 0x04 /* -         EXIT SPECIFIED WITH TASK OR REAL REQUEST    */\n#define rbtmind3 0x03 /* -    TYPE OF REQUEST                                  */\n#define rbtreq   0x00 /* -        TASK REQUEST                                 */\n#define rbwreq   0x01 /* -         WAIT REQUEST                                */\n#define rbrreq   0x03 /* -    REAL REQUEST                                     */\n\n/* Values for field \"xstab1\" */\n#define rbftckpt 0x04 /* -         A CHECKPOINT MAY BE TAKEN IN A USER EXIT    */\n#define xrbckpt  0x04 /* -         SAME AS RBFTCKPT                            */\n\n/* Values for field \"xstab2\" */\n#define rbtcbnxt 0x80 /* -         RBLINK FIELD POINTS TO TCB (ALL RB'S)       */\n#define xrbtcbp  0x80 /* -         SAME AS RBTCBNXT                            */\n#define rbfactv  0x40 /* -         IRB OR SIRB IS QUEUED TO TCB - PROGRAM IS   */\n#define xrbactv  0x40 /* -         ACTIVE PROGRAM (ALL RB'S EXCEPT LPRB AND    */\n#define rbfdyn   0x02 /* -         RB STORAGE CAN BE FREED AT EXIT             */\n#define xrbfrrb  0x02 /* -         SAME AS RBFDYN                              */\n#define rbecbwt  0x01 /* -         IF ZERO, WAIT FOR A SINGLE EVENT OR ALL     */\n#define xrbwait  0x01 /* -         SAME AS RBECBWT                             */\n\n/* Values for field \"_filler4\" */\n#define rbftp    0xE0 /* TYPE OF RB                                            */\n#define rbftprb  0x00 /* -        PRB                                          */\n#define rbfttirb 0x60 /* -    TIRB                               ICB417        */\n#define rbftirb  0x40 /* -         IRB                                         */\n#define rbftsirb 0x80 /* -         SIRB                                        */\n#define rbftsvrb 0xC0 /* -    SVRB                                             */\n#define rbtrsvrb 0x10 /* -         IF RBTRSVRB=0 AND RBCDE=0, THEN TYPE 2      */\n#define rbfnsvrb 0x10 /* -         ALIAS FOR RBTRSVRB                          */\n#define rbwaitp  0x08 /* -         INDICATES THAT AN ECB IS POINTING AT THE    */\n#define rbatnxit 0x02 /* -         THIS IRB IS AN ATTENTION IRB       ICB444   */\n#define rbpmsvrb 0x01 /* -         THIS IS A PROGRAM MANAGER SVRB - VALID      */\n\n/* Values for field \"_filler5\" */\n#define rbattn   0x20 /* -         EXITING PROGRAM IS AN ATTENTION EXIT        */\n#define rbetxr   0x10 /* -         IRB IS FOR AN ETXR EXIT ROUTINE             */\n#define rbusiqe  0x10 /* -         SAME AS RBETXR                     ICB444   */\n#define rbiqetp  0x0C /* -                                                     */\n#define rbrqenr  0x00 /* -        REQUEST QUEUE ELEMENT IS NOT TO BE           */\n#define rbirbaer 0x04 /* -         IRB HAS QUEUE ELEMENTS FOR ASYNCHRONOUSLY   */\n#define rbiqenr  0x08 /* -         IQE IS NOT TO BE RETURNED AT EXIT           */\n#define rbirbaiq 0x0C /* -    IRB HAS QUEUE ELEMENTS FOR ASYNCHRONOUSLY        */\n\n/* Values for field \"rbeplbyt\" */\n#define rbeppd   0x01 /* -        BIT 31 INDICATES RBEP IS POINTER-DEFINED     */\n\n/* Values for field \"rbep\" */\n#define rbepm    0x80 /* -        ADDRESSING MODE OF ROUTINE, IF               */\n\n/* Values for field \"rbcdflgs\" */\n#define rbnocell 0x80 /* -         EXIT SHOULD FREEMAIN THIS SVRB RATHER       */\n#define rbrsv009 0x40 /* -   RESERVED                                          */\n#define rbcdatch 0x20 /* -         CONTENTS SUPERVISION HAS BEEN ENTERED       */\n#define rbcdsave 0x10 /* -         EXIT WILL LOAD REGISTERS FROM PRB ON        */\n#define rbcdnode 0x08 /* -         NO DE SAVE AREA REQUIRED           ICB444   */\n#define rbcdsync 0x04 /* -         SYNCH MACRO INSTRUCTION REQUESTED           */\n#define rbcdxctl 0x02 /* -         XCTL MACRO INSTRUCTION REQUESTED            */\n#define rbcdload 0x01 /* -         LOAD MACRO INSTRUCTION REQUESTED            */\n\n/* Values for field \"rbopswb1\" */\n#define rboper   0x40 /* -        PER BIT IN RBOPSWB1  (MDC310)    @G65RP9A    */\n\n/* Values for field \"rbopswb2\" */\n#define rbopswps 0x01 /* -        PROBLEM STATE BIT IN OLD PSW                 */\n\n/* Values for field \"rbopswb4\" */\n#define rbopsw64 0x01 /* AMODE 64                             @L2A             */\n\n/* Values for field \"rbopswa\" */\n#define rbopswm  0x80 /* -        ADDRESSING MODE OF OLD PSW       @G860PVB    */\n#define rbopsw31 0x80 /* -        ADDRESSING MODE OF OLD PSW           @L2A    */\n\n/* Values for field \"rbrsv138\" */\n#define rbrsv139 0x80 /* -  RESERVED                                           */\n#define rbrsv140 0x40 /* -  RESERVED                                           */\n#define rbrsv141 0x20 /* -  RESERVED                                           */\n#define rbrsv142 0x10 /* -  RESERVED                                           */\n#define rbrsv143 0x08 /* -  RESERVED                                           */\n#define rbrsv144 0x04 /* -  RESERVED                                           */\n#define rbrsv145 0x02 /* -  RESERVED                                           */\n#define rbrsv146 0x01 /* -  RESERVED                                           */\n\n/* Values for field \"rbrsv161\" */\n#define sirbwaln 64   /* -           LENGTH OF RBSIRBWA                 MDC023 */\n#define rbprfxln 0x40 /* - TOTAL PREFIX LENGTH INCLUDING                       */\n#define rbprflna 0x20 /* - ASSIGNED PREFIX LENGTH                              */\n#define prblen   0x88 /* -   REAL PRB LENGTH FOR GETMAIN                       */\n#define sirblen  0xC8 /* -  REAL SIRB LENGTH FOR GETMAIN                       */\n#define tirblen  0x88 /* -  REAL TIRB LENGTH FOR GETMAIN                       */\n#define irblen   0x80 /* -   REAL IRB LENGTH FOR GETMAIN UNLESS                */\n#define svrblen  0xF0 /* -  REAL SVRB LENGTH FOR GETMAIN                       */\n\n/* Values for field \"rbsflgs1\" */\n#define rbsstai  0x80 /* -         STAI SCB  (MDC310)               @Z40FP9A   */\n#define rbsstar  0x40 /* -         STAR SCB.  SCB IF FOR STAE IF NEITHER       */\n#define rbsdummy 0x20 /* -         DUMMY SCB (WILL NOT BE SCHEDULED)           */\n#define rbsestae 0x10 /* -         ESTAE INDICATOR  (MDC313)        @Z40FP9A   */\n#define rbrsv162 0x08 /* -         RESERVED                         @Z40FP9A   */\n#define rbsasync 0x04 /* -         ALLOW ASYNCHRONOUS INTERRUPTS               */\n#define rbsioprc 0x03 /* -    I/O PROCESSING OPTION.  BOTH BITS OFF            */\n#define rbsnoiop 0x02 /* -         BYPASS I/O INTERVENTION (MDC316) @Z40FP9A   */\n#define rbshalt  0x01 /* -         HALT I/O  (MDC317)               @Z40FP9A   */\n\n/* Values for field \"rbsflgs2\" */\n#define rbsamode 0x80 /* -         USER IS IN 31 BIT                           */\n#define rbsxctl2 0x40 /* -         RETAIN THIS SCB ACROSS XCTL                 */\n#define rbrsv164 0x20 /* -         RESERVED                         @Z40FP9A   */\n#define rbsinuse 0x10 /* -         THIS SCB IN USE  (MDC322)        @Z40FP9A   */\n#define rbrsv165 0x08 /* -         RESERVED                         @Z40FP9A   */\n#define rbrsv166 0x04 /* -         RESERVED                         @Z40FP9A   */\n#define rbskey0  0x02 /* -         USER IN KEY 0  (MDC323)          @Z40FP9A   */\n#define rbssuper 0x01 /* -         USER IN SUPERVISOR MODE (MDC324) @Z40FP9A   */\n\n/* Values for field \"rbsflg3\" */\n#define rbrsv167 0x80 /* -         RESERVED                         @Z40FP9A   */\n#define rbstermi 0x40 /* -         AUTHORIZED FOR TERM PROCESSING              */\n#define rbsrecrd 0x20 /* -         ERROR RECORD TO BE WRITTEN TO THE LOGREC    */\n#define rbscncel 0x10 /* -         SCB IS LOGICALLY CANCELED                   */\n#define rbsprntr 0x08 /* -         SCB IS PREVIOUSLY ENTERED                   */\n#define rbsbrntr 0x04 /* -         BRANCH ENTERED SVC 60  (MDC332)  @Z40FP9A   */\n#define rbstermo 0x02 /* -         TERM PROCESSING ONLY  (MDC333)   @Z40FP9A   */\n#define rbrsv168 0x01 /* -         RESERVED                         @Z40FP9A   */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "IHASCVT": {"ttr": 2389, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct scvtsect \u00e4\n  void          *scvtpgtm;     /* -       ADDR OF EOT TIMER PURGE     @G860P46           */\n  void          *scvtpgwr;     /* -       ADDRESS OF WTO/WTOR RESOURCE                   */\n  void          *scvtdspa;     /* -              ANCHOR FOR SYSTEM/370 SNA/DS    @D6A    */\n  short int      scvtbr14;     /* -                 A BR 14 INSTRUCTION.  RETURN    @P2A */\n  short int      scvtvlfc;     /* -             COUNT OF THE NUMBER OF TIMES    @05C     */\n  void          *_filler1;     /* -              ** SCVTTERAS FIELD UNUSED   @G860P46    */\n  void          *scvtbwto;     /* -       ADDRESS OF BRANCH-ENTRY WTO AND @LCA           */\n  void          *scvtbdom;     /* -       ADDRESS OF BRANCH-ENTRY DOM.    @LCA           */\n  void          *scvtrmbr;     /* -       ADDR OF REGMAIN BRANCH ENTRY                   */\n  void          *scvtchsi;     /* -              POINTER TO THE IOS CHANNEL      @01C    */\n  void          *scvtrace;     /* -             ADDR OF POINTER TO TRACE ROUTINE         */\n  void          *scvthscs;     /* -       ADDRESS OF SLIH FOR HPPI                       */\n  void          *scvtsorm;     /* -              ADDRESS OF SDOM RESOURCE        @LDC    */\n  void          *scvtlfrm;     /* -       LIST FORMAT FREEMAIN BRANCH ENT PT             */\n  void          *scvtsdob;     /* -              ADDRESS OF SHARED DATA OBJECT   @LDC    */\n  void          *scvtmca;      /* -              ANCHOR FOR GLOBAL MVS MESSAGE   @D7A    */\n  void          *scvtnetv;     /* -              NETVIEW CONTROL STRUCTURE       @03C    */\n  void          *scvtrptr;     /* -              ADDR OF TRACE TABLE POINTERS  YM2703    */\n  void          *scvtgmbr;     /* -       LIST FORMAT GETMAIN BRANCH ENTRY               */\n  void          *scvtrg2;      /* -              ENTRY POINT ADDRESS OF IEAVTRG2,        */\n  void          *scvtrg2b;     /* -              ADDRESS OF SECOND ENTRY POINT IN        */\n  void          *scvtrtxt;     /* ADDRESS OF MODULE IEECB867.  MODULE                    */\n  int            scvtamsp;     /* -              ADDRESS OF SYSTEM           @ZA93009    */\n  void          *scvtasrs;     /* POINTER TO SYMPTOM RECORDS      @L8A                   */\n  void          *scvtsymr;     /* ADDRESS OF THE SYMREC           @D2A                   */\n  void          *scvtdopx;     /* ADDRESS OF IEAVTRDX ROUTINE     @LAC                   */\n  void          *scvtcpls;     /* ADDRESS OF VSM CELL POOL LIST   @D3C                   */\n  void          *scvtdiv;      /* POINTER TO THE DIV INFORMATION  @L9C                   */\n  void          *scvtdivm;     /* POINTER TO THE DIV RESOURCE     @L9C                   */\n  void          *scvtctr1;     /* -              RESERVED                        @L4C    */\n  void          *scvtctab;     /* -              COMPONENT TRACE ANCHOR BLOCK.   @D4C    */\n  void          *scvtrxlq;     /* -              ADDR OF RECOVERY EXTENT LIST            */\n  void          *scvtcgt;      /* -              POINTER TO IHACGT               @LDC    */\n  void          *scvtjopn;     /* ADDR OF THE IDAVJOPN RTN        @LEC                   */\n  void          *scvtsvct;     /* -       ORIGIN OF SVC TABLE           MDC005           */\n  void          *scvtsvcr;     /* -       ADDRESS OF SVC UPDATE RECORDING @L5A           */\n  void          *scvttqe;      /* -       ADDR OF TSO SUBSYSTEM'S TQE                    */\n  void          *scvtttrm;     /* -              TSO TASK TERMINATION RESOUCE            */\n  void          *scvtstat;     /* -       ADDR OF SVC STATUS ROUTINE    ICB339           */\n  void          *scvtqcbr;     /* -       BRANCH ENTRY POINT TO GETMAIN/                 */\n  void          *scvtvlfb;     /* -              VLF COMMON DATA BLOCK ADDRESS.  @D5C    */\n  void          *scvthsct;     /* -              ADDRESS OF HPPI                         */\n  void          *scvtptrm;     /* -       ADDRESS OF PAGING           @G860P46           */\n  void          *scvtdfcs;     /* -              ANCHOR FOR SMSX GLOBAL CONTROL  @LBC    */\n  void          *scvtpiqe;     /* -       ADDR OF RESIDENT SUBROUTINE IN EOT             */\n  void          *scvtgamp;     /* -              POINTER TO GAM CONTROL BLOCKS.  @LFA    */\n  void          *scvtgams;     /* -              POINTER TO GAM SQA AREA.        @LFA    */\n  void          *scvtccvt;     /* -              POINTER TO THE CRYPTOGRAPHY     @02A    */\n  void          *scvtdis;      /* ENTRY POINT OF MEMTERM          @D8A                   */\n  unsigned char  scvtr0c0\u00c48\u00dc;  /* RESERVED.                       @D8A                   */\n  void          *scvtqopn;     /* ADDR OF THE IGGQJOPN RTN        @LEC                   */\n  void          *scvtdlfb;     /* -              ANCHOR TO THE DLF CONTROL BLOCK @P1A    */\n  unsigned char  scvtr0d0\u00c416\u00dc; /* RESERVED.                       @P1C                   */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IKJRB": {"ttr": 2387, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(packed)\n\nstruct rbprfx \u00e4\n  void          *rbrsv012; /* -            RESERVED                                  */\n  void          *rbrsv013; /* -            RESERVED                                  */\n  short int      rbrsv014; /* -            RESERVED                                  */\n  unsigned char  rbrsv015; /* -            RESERVED                                  */\n  unsigned char  rbrsv016; /* -            RESERVED                                  */\n  unsigned char  rbrsv017; /* -            RESERVED                                  */\n  unsigned char  rbrsv018; /* -            RESERVED                                  */\n  unsigned char  rbrsv019; /* -            RESERVED                                  */\n  unsigned char  rbrsv028; /* -            RESERVED                                  */\n  void          *rbrsv037; /* -            RESERVED                                  */\n  void          *rbrsv038; /* -            RESERVED                                  */\n  short int      rbrsv039; /* -            RESERVED                                  */\n  unsigned char  rbrsv040; /* -            RESERVED                                  */\n  unsigned char  rbrsv041; /* -            RESERVED                                  */\n  void          *rbrsv050; /* -            RESERVED                                  */\n  struct \u00e4\n    void          *_rbxsb;    /* -            ADDRESS OF EXTENDED STATUS BLOCK @G381P9A */\n    short int      _rbrsv052; /* -            RESERVED                                  */\n    unsigned char  _rbkeysta; /* -            THE KEY AND STATE OF THE IRB ROUTINE      */\n    unsigned char  _rbflags2; /* -            SECOND FLAG BYTE                 @G860PXB */\n    \u00fc rbprfxst;\n  struct \u00e4\n    unsigned char  _rbrtpsw1\u00c48\u00dc; /* -          FIRST DOUBLE WORD OF PSW - SYSTEM AND */\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _rbrsv160; /* -          RESERVED - SET TO ZERO IN LOW CORE BY       */\n        char           _rbrtilc;  /* -          INSTRUCTION LENGTH COUNTER - NUMBER OF      */\n        short int      _rbrtincd; /* -            INTERRUPT CODE                     MDC019 */\n        \u00fc rbrticil;\n      void          *_rbrtran; /* -            VIRTUAL ADDRESS CAUSING TRANSLATION */\n      \u00fc rbrtpsw2;\n    \u00fc rbrtopsw;\n  unsigned char  rbflags1; /* -            FLAG BYTE                                 */\n  unsigned char  rbflags3; /* -        FLAG BYTE. SERIALIZATION:LOCAL LOCK  @D2C     */\n  short int      rbxwaiti; /* -            EXPLICIT WAIT INDEX  (MDC342)    @G50CP9A */\n  struct \u00e4\n    char           _rbwcsa; /* -          NUMBER OF REQUESTS WAITING AT TIME OF */\n    struct \u00e4\n      unsigned char  _rbinlnth;    /* -          INSTRUCTION LENGTH CODE - 4 HIGH-ORDER */\n      unsigned char  _rbintcod\u00c42\u00dc; /* -          INTERRUPT CODE.  THIS OFFSET FIXED BY  */\n      \u00fc rbintcda;\n    \u00fc rbwlic;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _rbtmfld;     /* -            INDICATORS FOR TIMER ROUTINES.  WHEN */\n      unsigned char  _filler1\u00c47\u00dc;  /* -          LAST 7 BYTES OF RBEXRTNM               */\n      \u00fc rbexrtnm;\n    struct \u00e4\n      unsigned char  _rbprfxnd;    /* -           END OF RB PREFIX */\n      unsigned char  _filler2\u00c47\u00dc;\n      \u00fc _rbprfx_struct1;\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _filler3;       /* -            RBTMFLD                                */\n        int            _rbppsav1 : 24; /* -          ADDRESS OF PROBLEM PROGRAM REGISTER SAVE */\n        \u00fc rbppsav;\n      unsigned char  _rbabopsw\u00c44\u00dc; /* -          AFTER EXECUTION OF TRANSIENT AREA HANDLER */\n      \u00fc _rbprfx_struct2;\n    \u00fc _rbprfx_union1;\n  short int      rbsize;   /* -            SIZE OF THIS RB IN DOUBLEWORDS (ALL RB'S) */\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        struct \u00e4\n          unsigned char  _xstab1; /* -            SAME AS RBSTAB1 */\n          \u00fc rbstab1;\n        struct \u00e4\n          unsigned char  _xstab2; /* -            SAME AS RBSTAB2 */\n          \u00fc rbstab2;\n        \u00fc xstab;\n      \u00fc rbstab;\n    struct \u00e4\n      unsigned char  _filler4;  /* -            RBSTAB1 */\n      unsigned char  _filler5;  /* -            RBSTAB2 */\n      \u00fc _rbprfx_struct3;\n    \u00fc _rbprfx_union2;\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _filler6\u00c43\u00dc;  /* -          FIRST 3 BYTES OF EP ADDRESS      @G860PXB */\n        unsigned char  _rbeplbyt;    /* BITS 0-6 = BITS 24-30 OF EP ADDR                     */\n        \u00fc rbepa;\n      \u00fc rbep;\n    struct \u00e4\n      unsigned char  _rbcdflgs;    /* -            CONTROL FLAGS                         */\n      int            _rbcde1 : 24; /* -          ADDRESS OF CDE, ADDRESS OF LPDE OR ZERO */\n      \u00fc rbcde;\n    void          *_filler7;  /* -            SYSTEM-DEPENDENT FIELD */\n    \u00fc _rbprfx_union3;\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        unsigned char  _rbopswb1; /* -            OLD PSW BYTE 1  (MDC309)         @G65RP9A */\n        unsigned char  _rbopswb2; /* -            OLD PSW BYTE 2  (MDC304)         @X50AD9A */\n        unsigned char  _filler8;  /* -          OLD PSW BYTE 3                   @G860PVB   */\n        unsigned char  _rbopswb4; /* -            OLD PSW BYTE 4                       @L2A */\n        void          *_rbopswa;  /* -            OLD PSW BYTES 5-8 (ADDRESS)      @G860PVB */\n        \u00fc xrbpsw;\n      \u00fc rbopsw;\n    unsigned char  _filler9\u00c48\u00dc;  /* -          RBOPSW */\n    \u00fc _rbprfx_union4;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _filler10;     /* -            ZERO                                    */\n      int            _rbpgmq1 : 24; /* -          ADDRESS OF RB INDICATING A REQUEST TO USE */\n      \u00fc rbpgmq;\n    struct \u00e4\n      char           _filler11;    /* -          RBUSE - CONTAINS ZEROS             */\n      int            _rbsqea : 24; /* -          CHAIN OF SUPERVISOR QUEUE ELEMENTS */\n      \u00fc rbsqe;\n    struct \u00e4\n      char           _rbuse;       /* -          USE COUNT USED BY ATTACH (IRB) */\n      int            _rbiqe1 : 24; /* -          LIST ORIGIN FOR IQE (IRB)      */\n      \u00fc rbiqe;\n    struct \u00e4\n      int            _rbiqea; /* -            LIST ORIGIN FOR RQE (IRB WITH 4-BYTE LINK */\n      \u00fc rbiqe2;\n    void          *_filler12;  /* -            SYSTEM-DEPENDENT FIELD */\n    \u00fc _rbprfx_union5;\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        struct \u00e4\n          char           _xrbwt; /* -          SAME AS RBWCF (ALL RB'S EXCEPT LPRB AND */\n          \u00fc rbwcf;\n        int            _xrblnka : 24; /* -          SAME AS RBLINKB (ALL RB'S EXCEPT LPRB AND */\n        \u00fc xrblnk;\n      \u00fc rblink;\n    struct \u00e4\n      char           _rbscf;          /* -          RB SUSPENDED COUNT  (MDC339)     @Z40FP9A */\n      int            _filler13 : 24;  /* -          RBLINKB                                   */\n      \u00fc _rbprfx_struct4;\n    \u00fc _rbprfx_union6;\n  union \u00e4\n    struct \u00e4\n      struct \u00e4\n        struct \u00e4\n          int            _xrbreg0; /* -            SAME AS RBGRS0 */\n          \u00fc rbgrs0;\n        struct \u00e4\n          int            _xrbreg1; /* -            SAME AS RBGRS1 */\n          \u00fc rbgrs1;\n        struct \u00e4\n          int            _xrbreg2; /* -            SAME AS RBGRS2 */\n          \u00fc rbgrs2;\n        struct \u00e4\n          int            _xrbreg3; /* -            SAME AS RBGRS3 */\n          \u00fc rbgrs3;\n        struct \u00e4\n          int            _xrbreg4; /* -            SAME AS RBGRS4 */\n          \u00fc rbgrs4;\n        struct \u00e4\n          int            _xrbreg5; /* -            SAME AS RBGRS5 */\n          \u00fc rbgrs5;\n        struct \u00e4\n          int            _xrbreg6; /* -            SAME AS RBGRS6 */\n          \u00fc rbgrs6;\n        struct \u00e4\n          int            _xrbreg7; /* -            SAME AS RBGRS7 */\n          \u00fc rbgrs7;\n        struct \u00e4\n          int            _xrbreg8; /* -            SAME AS RBGRS8 */\n          \u00fc rbgrs8;\n        struct \u00e4\n          int            _xrbreg9; /* -            SAME AS RBGRS9 */\n          \u00fc rbgrs9;\n        struct \u00e4\n          int            _xrbreg10; /* -            SAME AS RBGRS10 */\n          \u00fc rbgrs10;\n        struct \u00e4\n          int            _xrbreg11; /* -            SAME AS RBGRS11 */\n          \u00fc rbgrs11;\n        struct \u00e4\n          int            _xrbreg12; /* -            SAME AS RBGRS12 */\n          \u00fc rbgrs12;\n        struct \u00e4\n          int            _xrbreg13; /* -            SAME AS RBGRS13 */\n          \u00fc rbgrs13;\n        struct \u00e4\n          int            _xrbreg14; /* -            SAME AS RBGRS14 */\n          \u00fc rbgrs14;\n        struct \u00e4\n          int            _xrbreg15; /* -            SAME AS RBGRS15 */\n          \u00fc rbgrs15;\n        \u00fc xrbreg;\n      \u00fc rbgrsave;\n    unsigned char  _filler14\u00c464\u00dc;  /* -         RBGRSAVE */\n    \u00fc _rbprfx_union7;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _rbexsave\u00c448\u00dc;  /* -        EXTENDED SAVE AREA FOR SVC ROUTINES */\n      unsigned char  _filler15\u00c448\u00dc;\n      \u00fc _rbprfx_struct5;\n    struct \u00e4\n      struct \u00e4\n        void          *_rbrsv135; /* -            RESERVED */\n        \u00fc irbend;\n      short int      _rbrsv136;      /* -            RESERVED */\n      unsigned char  _rbrsv137;      /* -            RESERVED */\n      unsigned char  _rbrsv138;      /* -            RESERVED */\n      struct \u00e4\n        int            _tirbend; /* -           END OF TIRB */\n        \u00fc prbend;\n      unsigned char  _filler16\u00c484\u00dc;\n      \u00fc _rbprfx_struct6;\n    struct \u00e4\n      double         _xrbesa\u00c410\u00dc;    /* -          SVRB - EXTENDED SAVE AREA OF UP TO TEN */\n      unsigned char  _filler17\u00c416\u00dc;\n      \u00fc _rbprfx_struct7;\n    struct \u00e4\n      void          *_rbnexav;       /* -            ADDRESS OF NEXT AVAILABLE IQE (IRB) */\n      int            _rbiqewrk;      /* -            IQE WORK SPACE, VARIABLE LENGTH,    */\n      unsigned char  _filler18\u00c488\u00dc;\n      \u00fc _rbprfx_struct8;\n    struct \u00e4\n      unsigned char  _rbsirbwa\u00c464\u00dc;  /* -         SIRB WORK AREA                     MDC022 */\n      void          *_rbrsv161;      /* -            RESERVED - RBRSV148 FOLLOWS THIS FIELD */\n      unsigned char  _filler19\u00c428\u00dc;\n      \u00fc _rbprfx_struct9;\n    struct \u00e4\n      unsigned char  _filler20\u00c48\u00dc;\n      unsigned char  _filler21\u00c440\u00dc;  /* -         LAST 40 BYTES OF RBEXSAVE                   */\n      struct \u00e4\n        void          *_rbschain; /* -            POINTER TO NEXT SCB ON CHAIN              */\n        void          *_rbsexit;  /* -            POINTER TO USER WRITTEN EXIT ROUTINE      */\n        struct \u00e4\n          unsigned char  _rbsflgs1;      /* -            FIRST FLAG BYTE  (MDC309)        @Z40FP9A */\n          int            _rbsparma : 24; /* -          ADDRESS OF PARAMETER LIST FOR STA EXIT      */\n          \u00fc rbsparm;\n        struct \u00e4\n          unsigned char  _rbsflgs2;      /* -            SECOND FLAG BYTE  (MDC320)       @Z40FP9A */\n          int            _rbsownra : 24; /* -          RB ADDRESS IF STAE/STAR, TCB ADDRESS IF     */\n          \u00fc rbsownr;\n        struct \u00e4\n          unsigned char  _rbsflg3;  /* -            OPTION FLAGS  (MDC327)           @Z40FP9A */\n          unsigned char  _rbspkey;  /* -            PROGRAM KEY  (MDC334)            @Z40FP9A */\n          unsigned char  _rbsid;    /* -            SCB IDENTIFIER  (MDC335)         @Z40FP9A */\n          unsigned char  _rbrsv169; /* -            RESERVED  (MDC336)               @Z40FP9A */\n          \u00fc rbsdata;\n        void          *_rbsxptr;  /* -            POINTER TO SCB EXTENSION (SCBX)  @G381P9A */\n        \u00fc rbscbb;\n      int            _sirbend;       /* -           END OF SIRB                 MDC021-MDC022 */\n      unsigned char  _filler22\u00c420\u00dc;\n      \u00fc _rbprfx_struct10;\n    struct \u00e4\n      unsigned char  _filler23\u00c472\u00dc;\n      int            _rbfeparm\u00c46\u00dc;   /* -           PARAMETER AREA FOR ROUTINES THAT USE */\n      \u00fc _rbprfx_struct11;\n    \u00fc _rbprfx_union8;\n  struct \u00e4\n    unsigned char  _filler24\u00c412\u00dc;  /* -         FIRST 12 BYTES OF RBSCBX         @G860PXB    */\n    void          *_rbsxparm;      /* -            31-BIT PARAMETER LIST ADDRESS    @G860PXB */\n    \u00fc rbscbx;\n  int            svrbend;  /* -           END OF SVRB (BOTH)  (MDC338)     @Z40FP9A  */\n  \u00fc;\n\n#define rbxsb     rbprfxst._rbxsb\n#define rbrsv052  rbprfxst._rbrsv052\n#define rbkeysta  rbprfxst._rbkeysta\n#define rbflags2  rbprfxst._rbflags2\n#define rbrtpsw1  rbrtopsw._rbrtpsw1\n#define rbrsv160  rbrtopsw.rbrtpsw2.rbrticil._rbrsv160\n#define rbrtilc   rbrtopsw.rbrtpsw2.rbrticil._rbrtilc\n#define rbrtincd  rbrtopsw.rbrtpsw2.rbrticil._rbrtincd\n#define rbrtran   rbrtopsw.rbrtpsw2._rbrtran\n#define rbwcsa    rbwlic._rbwcsa\n#define rbinlnth  rbwlic.rbintcda._rbinlnth\n#define rbintcod  rbwlic.rbintcda._rbintcod\n#define rbtmfld   _rbprfx_union1.rbexrtnm._rbtmfld\n#define rbprfxnd  _rbprfx_union1._rbprfx_struct1._rbprfxnd\n#define rbppsav1  _rbprfx_union1._rbprfx_struct2.rbppsav._rbppsav1\n#define rbabopsw  _rbprfx_union1._rbprfx_struct2._rbabopsw\n#define xstab1    _rbprfx_union2.rbstab.xstab.rbstab1._xstab1\n#define xstab2    _rbprfx_union2.rbstab.xstab.rbstab2._xstab2\n#define rbeplbyt  _rbprfx_union3.rbep.rbepa._rbeplbyt\n#define rbcdflgs  _rbprfx_union3.rbcde._rbcdflgs\n#define rbcde1    _rbprfx_union3.rbcde._rbcde1\n#define rbopswb1  _rbprfx_union4.rbopsw.xrbpsw._rbopswb1\n#define rbopswb2  _rbprfx_union4.rbopsw.xrbpsw._rbopswb2\n#define rbopswb4  _rbprfx_union4.rbopsw.xrbpsw._rbopswb4\n#define rbopswa   _rbprfx_union4.rbopsw.xrbpsw._rbopswa\n#define rbpgmq1   _rbprfx_union5.rbpgmq._rbpgmq1\n#define rbsqea    _rbprfx_union5.rbsqe._rbsqea\n#define rbuse     _rbprfx_union5.rbiqe._rbuse\n#define rbiqe1    _rbprfx_union5.rbiqe._rbiqe1\n#define rbiqea    _rbprfx_union5.rbiqe2._rbiqea\n#define xrbwt     _rbprfx_union6.rblink.xrblnk.rbwcf._xrbwt\n#define xrblnka   _rbprfx_union6.rblink.xrblnk._xrblnka\n#define rbscf     _rbprfx_union6._rbprfx_struct4._rbscf\n#define xrbreg0   _rbprfx_union7.rbgrsave.xrbreg.rbgrs0._xrbreg0\n#define xrbreg1   _rbprfx_union7.rbgrsave.xrbreg.rbgrs1._xrbreg1\n#define xrbreg2   _rbprfx_union7.rbgrsave.xrbreg.rbgrs2._xrbreg2\n#define xrbreg3   _rbprfx_union7.rbgrsave.xrbreg.rbgrs3._xrbreg3\n#define xrbreg4   _rbprfx_union7.rbgrsave.xrbreg.rbgrs4._xrbreg4\n#define xrbreg5   _rbprfx_union7.rbgrsave.xrbreg.rbgrs5._xrbreg5\n#define xrbreg6   _rbprfx_union7.rbgrsave.xrbreg.rbgrs6._xrbreg6\n#define xrbreg7   _rbprfx_union7.rbgrsave.xrbreg.rbgrs7._xrbreg7\n#define xrbreg8   _rbprfx_union7.rbgrsave.xrbreg.rbgrs8._xrbreg8\n#define xrbreg9   _rbprfx_union7.rbgrsave.xrbreg.rbgrs9._xrbreg9\n#define xrbreg10  _rbprfx_union7.rbgrsave.xrbreg.rbgrs10._xrbreg10\n#define xrbreg11  _rbprfx_union7.rbgrsave.xrbreg.rbgrs11._xrbreg11\n#define xrbreg12  _rbprfx_union7.rbgrsave.xrbreg.rbgrs12._xrbreg12\n#define xrbreg13  _rbprfx_union7.rbgrsave.xrbreg.rbgrs13._xrbreg13\n#define xrbreg14  _rbprfx_union7.rbgrsave.xrbreg.rbgrs14._xrbreg14\n#define xrbreg15  _rbprfx_union7.rbgrsave.xrbreg.rbgrs15._xrbreg15\n#define rbexsave  _rbprfx_union8._rbprfx_struct5._rbexsave\n#define rbrsv135  _rbprfx_union8._rbprfx_struct6.irbend._rbrsv135\n#define rbrsv136  _rbprfx_union8._rbprfx_struct6._rbrsv136\n#define rbrsv137  _rbprfx_union8._rbprfx_struct6._rbrsv137\n#define rbrsv138  _rbprfx_union8._rbprfx_struct6._rbrsv138\n#define tirbend   _rbprfx_union8._rbprfx_struct6.prbend._tirbend\n#define xrbesa    _rbprfx_union8._rbprfx_struct7._xrbesa\n#define rbnexav   _rbprfx_union8._rbprfx_struct8._rbnexav\n#define rbiqewrk  _rbprfx_union8._rbprfx_struct8._rbiqewrk\n#define rbsirbwa  _rbprfx_union8._rbprfx_struct9._rbsirbwa\n#define rbrsv161  _rbprfx_union8._rbprfx_struct9._rbrsv161\n#define rbschain  _rbprfx_union8._rbprfx_struct10.rbscbb._rbschain\n#define rbsexit   _rbprfx_union8._rbprfx_struct10.rbscbb._rbsexit\n#define rbsflgs1  _rbprfx_union8._rbprfx_struct10.rbscbb.rbsparm._rbsflgs1\n#define rbsparma  _rbprfx_union8._rbprfx_struct10.rbscbb.rbsparm._rbsparma\n#define rbsflgs2  _rbprfx_union8._rbprfx_struct10.rbscbb.rbsownr._rbsflgs2\n#define rbsownra  _rbprfx_union8._rbprfx_struct10.rbscbb.rbsownr._rbsownra\n#define rbsflg3   _rbprfx_union8._rbprfx_struct10.rbscbb.rbsdata._rbsflg3\n#define rbspkey   _rbprfx_union8._rbprfx_struct10.rbscbb.rbsdata._rbspkey\n#define rbsid     _rbprfx_union8._rbprfx_struct10.rbscbb.rbsdata._rbsid\n#define rbrsv169  _rbprfx_union8._rbprfx_struct10.rbscbb.rbsdata._rbrsv169\n#define rbsxptr   _rbprfx_union8._rbprfx_struct10.rbscbb._rbsxptr\n#define sirbend   _rbprfx_union8._rbprfx_struct10._sirbend\n#define rbfeparm  _rbprfx_union8._rbprfx_struct11._rbfeparm\n#define rbsxparm  rbscbx._rbsxparm\n\n/* Values for field \"rbrsv019\" */\n#define rbrsv020 0x80 /* -  RESERVED                                           */\n#define rbrsv021 0x40 /* -  RESERVED                                           */\n#define rbrsv022 0x20 /* -  RESERVED                                           */\n#define rbrsv023 0x10 /* -  RESERVED                                           */\n#define rbrsv024 0x08 /* -  RESERVED                                           */\n#define rbrsv025 0x04 /* -  RESERVED                                           */\n#define rbrsv026 0x02 /* -  RESERVED                                           */\n#define rbrsv027 0x01 /* -  RESERVED                                           */\n\n/* Values for field \"rbrsv028\" */\n#define rbrsv029 0x80 /* -  RESERVED                                           */\n#define rbrsv030 0x40 /* -  RESERVED                                           */\n#define rbrsv031 0x20 /* -  RESERVED                                           */\n#define rbrsv032 0x10 /* -  RESERVED                                           */\n#define rbrsv033 0x08 /* -  RESERVED                                           */\n#define rbrsv034 0x04 /* -  RESERVED                                           */\n#define rbrsv035 0x02 /* -  RESERVED                                           */\n#define rbrsv036 0x01 /* -  RESERVED                                           */\n\n/* Values for field \"rbrsv041\" */\n#define rbrsv042 0x80 /* -  RESERVED                                           */\n#define rbrsv043 0x40 /* -  RESERVED                                           */\n#define rbrsv044 0x20 /* -  RESERVED                                           */\n#define rbrsv045 0x10 /* -  RESERVED                                           */\n#define rbrsv046 0x08 /* -  RESERVED                                           */\n#define rbrsv047 0x04 /* -  RESERVED                                           */\n#define rbrsv048 0x02 /* -  RESERVED                                           */\n#define rbrsv049 0x01 /* -  RESERVED                                           */\n\n/* Values for field \"rbkeysta\" */\n#define rbkey    0xF0 /* THE KEY OF THE IRB ROUTINE           @01A             */\n#define rbcirb   0x0C /* THIS IRB WAS CREATED BY CIRB         @01A             */\n#define rbstate  0x01 /* PROBLEM STATE IRB ROUTINE INDICATOR  @01A             */\n\n/* Values for field \"rbflags2\" */\n#define rbxwaita 0x80 /* -         AMODE OF WAITER WHO HAS ENTERED EXPLICIT    */\n#define rbrsv056 0x40 /* -  RESERVED                                           */\n#define rbrsv057 0x20 /* -  RESERVED                                           */\n#define rbrsv058 0x10 /* -  RESERVED                                           */\n#define rbrsv059 0x08 /* -  RESERVED                                           */\n#define rbrsv060 0x04 /* -  RESERVED                                           */\n#define rbrsv061 0x02 /* -  RESERVED                                           */\n#define rbrsv062 0x01 /* -  RESERVED                                           */\n\n/* Values for field \"rbflags1\" */\n#define rbslock  0x80 /* -         INDICATES THAT THIS RB IS                   */\n#define rbxwait  0x40 /* -         INDICATES THAT THE PROGRAM OPERATING        */\n#define rbabend  0x20 /* -         ABEND SVRB  (SVRB-BOTH)                     */\n#define rbxwprm  0x10 /* -         WAIT POST RESOURCE MANAGER REQUEST          */\n#define rbasir   0x08 /* -         ASIR IS RUNNING UNDER THIS RB      ICB444   */\n#define rblongwt 0x04 /* -         LONG WAIT ISSUED UNDER THIS RB     MDC009   */\n#define rbscb    0x02 /* -         SET BY SVC 60 TO INDICATE RB HAS AN         */\n#define rbsssyn  0x01 /* -         SYNCHRONIZED STATUS STOP PENDING FOR        */\n\n/* Values for field \"rbflags3\" */\n#define rbwtecb  0x80 /* -        WAIT WAS ISSUED WITH AN ECB PROVIDED @D2A    */\n\n/* Values for field \"rbtmfld\" */\n#define rbtmque  0x80 /* -         TIMER ELEMENT NOT ON QUEUE                  */\n#define rbtmtod  0x40 /* -         LOCAL TIME-OF-DAY OPTION IS USED            */\n#define rbrsv005 0x20 /* -   RESERVED                                          */\n#define rbwlim   0x10 /* -         WAIT LIMIT EXCEEDED                MDC001   */\n#define rbtmcmp  0x08 /* -         INTERVAL HAS EXPIRED                        */\n#define rbtmind2 0x04 /* -         EXIT SPECIFIED WITH TASK OR REAL REQUEST    */\n#define rbtmind3 0x03 /* -    TYPE OF REQUEST                                  */\n#define rbtreq   0x00 /* -        TASK REQUEST                                 */\n#define rbwreq   0x01 /* -         WAIT REQUEST                                */\n#define rbrreq   0x03 /* -    REAL REQUEST                                     */\n\n/* Values for field \"xstab1\" */\n#define rbftckpt 0x04 /* -         A CHECKPOINT MAY BE TAKEN IN A USER EXIT    */\n#define xrbckpt  0x04 /* -         SAME AS RBFTCKPT                            */\n\n/* Values for field \"xstab2\" */\n#define rbtcbnxt 0x80 /* -         RBLINK FIELD POINTS TO TCB (ALL RB'S)       */\n#define xrbtcbp  0x80 /* -         SAME AS RBTCBNXT                            */\n#define rbfactv  0x40 /* -         IRB OR SIRB IS QUEUED TO TCB - PROGRAM IS   */\n#define xrbactv  0x40 /* -         ACTIVE PROGRAM (ALL RB'S EXCEPT LPRB AND    */\n#define rbfdyn   0x02 /* -         RB STORAGE CAN BE FREED AT EXIT             */\n#define xrbfrrb  0x02 /* -         SAME AS RBFDYN                              */\n#define rbecbwt  0x01 /* -         IF ZERO, WAIT FOR A SINGLE EVENT OR ALL     */\n#define xrbwait  0x01 /* -         SAME AS RBECBWT                             */\n\n/* Values for field \"_filler4\" */\n#define rbftp    0xE0 /* TYPE OF RB                                            */\n#define rbftprb  0x00 /* -        PRB                                          */\n#define rbfttirb 0x60 /* -    TIRB                               ICB417        */\n#define rbftirb  0x40 /* -         IRB                                         */\n#define rbftsirb 0x80 /* -         SIRB                                        */\n#define rbftsvrb 0xC0 /* -    SVRB                                             */\n#define rbtrsvrb 0x10 /* -         IF RBTRSVRB=0 AND RBCDE=0, THEN TYPE 2      */\n#define rbfnsvrb 0x10 /* -         ALIAS FOR RBTRSVRB                          */\n#define rbwaitp  0x08 /* -         INDICATES THAT AN ECB IS POINTING AT THE    */\n#define rbatnxit 0x02 /* -         THIS IRB IS AN ATTENTION IRB       ICB444   */\n#define rbpmsvrb 0x01 /* -         THIS IS A PROGRAM MANAGER SVRB - VALID      */\n\n/* Values for field \"_filler5\" */\n#define rbattn   0x20 /* -         EXITING PROGRAM IS AN ATTENTION EXIT        */\n#define rbetxr   0x10 /* -         IRB IS FOR AN ETXR EXIT ROUTINE             */\n#define rbusiqe  0x10 /* -         SAME AS RBETXR                     ICB444   */\n#define rbiqetp  0x0C /* -                                                     */\n#define rbrqenr  0x00 /* -        REQUEST QUEUE ELEMENT IS NOT TO BE           */\n#define rbirbaer 0x04 /* -         IRB HAS QUEUE ELEMENTS FOR ASYNCHRONOUSLY   */\n#define rbiqenr  0x08 /* -         IQE IS NOT TO BE RETURNED AT EXIT           */\n#define rbirbaiq 0x0C /* -    IRB HAS QUEUE ELEMENTS FOR ASYNCHRONOUSLY        */\n\n/* Values for field \"rbeplbyt\" */\n#define rbeppd   0x01 /* -        BIT 31 INDICATES RBEP IS POINTER-DEFINED     */\n\n/* Values for field \"rbep\" */\n#define rbepm    0x80 /* -        ADDRESSING MODE OF ROUTINE, IF               */\n\n/* Values for field \"rbcdflgs\" */\n#define rbnocell 0x80 /* -         EXIT SHOULD FREEMAIN THIS SVRB RATHER       */\n#define rbrsv009 0x40 /* -   RESERVED                                          */\n#define rbcdatch 0x20 /* -         CONTENTS SUPERVISION HAS BEEN ENTERED       */\n#define rbcdsave 0x10 /* -         EXIT WILL LOAD REGISTERS FROM PRB ON        */\n#define rbcdnode 0x08 /* -         NO DE SAVE AREA REQUIRED           ICB444   */\n#define rbcdsync 0x04 /* -         SYNCH MACRO INSTRUCTION REQUESTED           */\n#define rbcdxctl 0x02 /* -         XCTL MACRO INSTRUCTION REQUESTED            */\n#define rbcdload 0x01 /* -         LOAD MACRO INSTRUCTION REQUESTED            */\n\n/* Values for field \"rbopswb1\" */\n#define rboper   0x40 /* -        PER BIT IN RBOPSWB1  (MDC310)    @G65RP9A    */\n\n/* Values for field \"rbopswb2\" */\n#define rbopswps 0x01 /* -        PROBLEM STATE BIT IN OLD PSW                 */\n\n/* Values for field \"rbopswb4\" */\n#define rbopsw64 0x01 /* AMODE 64                             @L2A             */\n\n/* Values for field \"rbopswa\" */\n#define rbopswm  0x80 /* -        ADDRESSING MODE OF OLD PSW       @G860PVB    */\n#define rbopsw31 0x80 /* -        ADDRESSING MODE OF OLD PSW           @L2A    */\n\n/* Values for field \"rbrsv138\" */\n#define rbrsv139 0x80 /* -  RESERVED                                           */\n#define rbrsv140 0x40 /* -  RESERVED                                           */\n#define rbrsv141 0x20 /* -  RESERVED                                           */\n#define rbrsv142 0x10 /* -  RESERVED                                           */\n#define rbrsv143 0x08 /* -  RESERVED                                           */\n#define rbrsv144 0x04 /* -  RESERVED                                           */\n#define rbrsv145 0x02 /* -  RESERVED                                           */\n#define rbrsv146 0x01 /* -  RESERVED                                           */\n\n/* Values for field \"rbrsv161\" */\n#define sirbwaln 0x40 /* -           LENGTH OF RBSIRBWA                 MDC023 */\n#define rbprfxln 0x40 /* - TOTAL PREFIX LENGTH INCLUDING                       */\n#define rbprflna 0x20 /* - ASSIGNED PREFIX LENGTH                              */\n#define prblen   0x88 /* -   REAL PRB LENGTH FOR GETMAIN                       */\n#define sirblen  0xC8 /* -  REAL SIRB LENGTH FOR GETMAIN                       */\n#define tirblen  0x88 /* -  REAL TIRB LENGTH FOR GETMAIN                       */\n#define irblen   0x80 /* -   REAL IRB LENGTH FOR GETMAIN UNLESS                */\n#define svrblen  0xF0 /* -  REAL SVRB LENGTH FOR GETMAIN                       */\n\n/* Values for field \"rbsflgs1\" */\n#define rbsstai  0x80 /* -         STAI SCB  (MDC310)               @Z40FP9A   */\n#define rbsstar  0x40 /* -         STAR SCB.  SCB IF FOR STAE IF NEITHER       */\n#define rbsdummy 0x20 /* -         DUMMY SCB (WILL NOT BE SCHEDULED)           */\n#define rbsestae 0x10 /* -         ESTAE INDICATOR  (MDC313)        @Z40FP9A   */\n#define rbrsv162 0x08 /* -         RESERVED                         @Z40FP9A   */\n#define rbsasync 0x04 /* -         ALLOW ASYNCHRONOUS INTERRUPTS               */\n#define rbsioprc 0x03 /* -    I/O PROCESSING OPTION.  BOTH BITS OFF            */\n#define rbsnoiop 0x02 /* -         BYPASS I/O INTERVENTION (MDC316) @Z40FP9A   */\n#define rbshalt  0x01 /* -         HALT I/O  (MDC317)               @Z40FP9A   */\n\n/* Values for field \"rbsflgs2\" */\n#define rbsamode 0x80 /* -         USER IS IN 31 BIT                           */\n#define rbsxctl2 0x40 /* -         RETAIN THIS SCB ACROSS XCTL                 */\n#define rbrsv164 0x20 /* -         RESERVED                         @Z40FP9A   */\n#define rbsinuse 0x10 /* -         THIS SCB IN USE  (MDC322)        @Z40FP9A   */\n#define rbrsv165 0x08 /* -         RESERVED                         @Z40FP9A   */\n#define rbrsv166 0x04 /* -         RESERVED                         @Z40FP9A   */\n#define rbskey0  0x02 /* -         USER IN KEY 0  (MDC323)          @Z40FP9A   */\n#define rbssuper 0x01 /* -         USER IN SUPERVISOR MODE (MDC324) @Z40FP9A   */\n\n/* Values for field \"rbsflg3\" */\n#define rbrsv167 0x80 /* -         RESERVED                         @Z40FP9A   */\n#define rbstermi 0x40 /* -         AUTHORIZED FOR TERM PROCESSING              */\n#define rbsrecrd 0x20 /* -         ERROR RECORD TO BE WRITTEN TO THE LOGREC    */\n#define rbscncel 0x10 /* -         SCB IS LOGICALLY CANCELED                   */\n#define rbsprntr 0x08 /* -         SCB IS PREVIOUSLY ENTERED                   */\n#define rbsbrntr 0x04 /* -         BRANCH ENTERED SVC 60  (MDC332)  @Z40FP9A   */\n#define rbstermo 0x02 /* -         TERM PROCESSING ONLY  (MDC333)   @Z40FP9A   */\n#define rbrsv168 0x01 /* -         RESERVED                         @Z40FP9A   */\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "INFBLOCK": {"ttr": 2345, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* infblock.h -- header to use infblock.c\n * Copyright (C) 1995-2002 Mark Adler\n * For conditions of distribution and use, see copyright notice in zlib.h\n */\n\n/* WARNING: this file should *not* be used by applications. It is\n   part of the implementation of the compression library and is\n   subject to change. Applications should only use zlib.h.\n */\n\nstruct inflate_blocks_state;\ntypedef struct inflate_blocks_state FAR inflate_blocks_statef;\n\nextern inflate_blocks_statef * inflate_blocks_new OF((\n    z_streamp z,\n    check_func c,               /* check function */\n    uInt w));                   /* window size */\n\nextern int inflate_blocks OF((\n    inflate_blocks_statef *,\n    z_streamp ,\n    int));                      /* initial return code */\n\nextern void inflate_blocks_reset OF((\n    inflate_blocks_statef *,\n    z_streamp ,\n    uLongf *));                  /* check value on output */\n\nextern int inflate_blocks_free OF((\n    inflate_blocks_statef *,\n    z_streamp));\n\nextern void inflate_set_dictionary OF((\n    inflate_blocks_statef *s,\n    const Bytef *d,  /* dictionary */\n    uInt  n));       /* dictionary length */\n\nextern int inflate_blocks_sync_point OF((\n    inflate_blocks_statef *s));\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "INFCODES": {"ttr": 2339, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* infcodes.h -- header to use infcodes.c\n * Copyright (C) 1995-2002 Mark Adler\n * For conditions of distribution and use, see copyright notice in zlib.h\n */\n\n/* WARNING: this file should *not* be used by applications. It is\n   part of the implementation of the compression library and is\n   subject to change. Applications should only use zlib.h.\n */\n\nstruct inflate_codes_state;\ntypedef struct inflate_codes_state FAR inflate_codes_statef;\n\nextern inflate_codes_statef *inflate_codes_new OF((\n    uInt, uInt,\n    inflate_huft *, inflate_huft *,\n    z_streamp ));\n\nextern int inflate_codes OF((\n    inflate_blocks_statef *,\n    z_streamp ,\n    int));\n\nextern void inflate_codes_free OF((\n    inflate_codes_statef *,\n    z_streamp ));\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "INFFAST": {"ttr": 2357, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* inffast.h -- header to use inffast.c\n * Copyright (C) 1995-2002 Mark Adler\n * For conditions of distribution and use, see copyright notice in zlib.h\n */\n\n/* WARNING: this file should *not* be used by applications. It is\n   part of the implementation of the compression library and is\n   subject to change. Applications should only use zlib.h.\n */\n\nextern int inflate_fast OF((\n    uInt,\n    uInt,\n    inflate_huft *,\n    inflate_huft *,\n    inflate_blocks_statef *,\n    z_streamp ));\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "INFFIXED": {"ttr": 2353, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* inffixed.h -- table for decoding fixed codes\n * Generated automatically by the maketree.c program\n */\n\n/* WARNING: this file should *not* be used by applications. It is\n   part of the implementation of the compression library and is\n   subject to change. Applications should only use zlib.h.\n */\n\nlocal uInt fixed_bl = 9;\nlocal uInt fixed_bd = 5;\nlocal inflate_huft fixed_tl\u00c4\u00dc = \u00e4\n    \u00e4\u00e4\u00e496,7\u00fc\u00fc,256\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,80\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,16\u00fc, \u00e4\u00e4\u00e484,8\u00fc\u00fc,115\u00fc,\n    \u00e4\u00e4\u00e482,7\u00fc\u00fc,31\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,112\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,48\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,192\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,10\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,96\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,32\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,160\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,0\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,128\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,64\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,224\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,6\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,88\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,24\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,144\u00fc,\n    \u00e4\u00e4\u00e483,7\u00fc\u00fc,59\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,120\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,56\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,208\u00fc,\n    \u00e4\u00e4\u00e481,7\u00fc\u00fc,17\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,104\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,40\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,176\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,8\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,136\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,72\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,240\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,4\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,84\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,20\u00fc, \u00e4\u00e4\u00e485,8\u00fc\u00fc,227\u00fc,\n    \u00e4\u00e4\u00e483,7\u00fc\u00fc,43\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,116\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,52\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,200\u00fc,\n    \u00e4\u00e4\u00e481,7\u00fc\u00fc,13\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,100\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,36\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,168\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,4\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,132\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,68\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,232\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,8\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,92\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,28\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,152\u00fc,\n    \u00e4\u00e4\u00e484,7\u00fc\u00fc,83\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,124\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,60\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,216\u00fc,\n    \u00e4\u00e4\u00e482,7\u00fc\u00fc,23\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,108\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,44\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,184\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,12\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,140\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,76\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,248\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,3\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,82\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,18\u00fc, \u00e4\u00e4\u00e485,8\u00fc\u00fc,163\u00fc,\n    \u00e4\u00e4\u00e483,7\u00fc\u00fc,35\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,114\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,50\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,196\u00fc,\n    \u00e4\u00e4\u00e481,7\u00fc\u00fc,11\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,98\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,34\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,164\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,2\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,130\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,66\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,228\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,7\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,90\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,26\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,148\u00fc,\n    \u00e4\u00e4\u00e484,7\u00fc\u00fc,67\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,122\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,58\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,212\u00fc,\n    \u00e4\u00e4\u00e482,7\u00fc\u00fc,19\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,106\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,42\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,180\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,10\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,138\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,74\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,244\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,5\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,86\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,22\u00fc, \u00e4\u00e4\u00e4192,8\u00fc\u00fc,0\u00fc,\n    \u00e4\u00e4\u00e483,7\u00fc\u00fc,51\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,118\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,54\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,204\u00fc,\n    \u00e4\u00e4\u00e481,7\u00fc\u00fc,15\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,102\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,38\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,172\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,6\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,134\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,70\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,236\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,9\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,94\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,30\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,156\u00fc,\n    \u00e4\u00e4\u00e484,7\u00fc\u00fc,99\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,126\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,62\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,220\u00fc,\n    \u00e4\u00e4\u00e482,7\u00fc\u00fc,27\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,110\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,46\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,188\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,14\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,142\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,78\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,252\u00fc,\n    \u00e4\u00e4\u00e496,7\u00fc\u00fc,256\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,81\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,17\u00fc, \u00e4\u00e4\u00e485,8\u00fc\u00fc,131\u00fc,\n    \u00e4\u00e4\u00e482,7\u00fc\u00fc,31\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,113\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,49\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,194\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,10\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,97\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,33\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,162\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,1\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,129\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,65\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,226\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,6\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,89\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,25\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,146\u00fc,\n    \u00e4\u00e4\u00e483,7\u00fc\u00fc,59\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,121\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,57\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,210\u00fc,\n    \u00e4\u00e4\u00e481,7\u00fc\u00fc,17\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,105\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,41\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,178\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,9\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,137\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,73\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,242\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,4\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,85\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,21\u00fc, \u00e4\u00e4\u00e480,8\u00fc\u00fc,258\u00fc,\n    \u00e4\u00e4\u00e483,7\u00fc\u00fc,43\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,117\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,53\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,202\u00fc,\n    \u00e4\u00e4\u00e481,7\u00fc\u00fc,13\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,101\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,37\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,170\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,5\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,133\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,69\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,234\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,8\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,93\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,29\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,154\u00fc,\n    \u00e4\u00e4\u00e484,7\u00fc\u00fc,83\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,125\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,61\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,218\u00fc,\n    \u00e4\u00e4\u00e482,7\u00fc\u00fc,23\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,109\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,45\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,186\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,13\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,141\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,77\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,250\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,3\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,83\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,19\u00fc, \u00e4\u00e4\u00e485,8\u00fc\u00fc,195\u00fc,\n    \u00e4\u00e4\u00e483,7\u00fc\u00fc,35\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,115\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,51\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,198\u00fc,\n    \u00e4\u00e4\u00e481,7\u00fc\u00fc,11\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,99\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,35\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,166\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,3\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,131\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,67\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,230\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,7\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,91\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,27\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,150\u00fc,\n    \u00e4\u00e4\u00e484,7\u00fc\u00fc,67\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,123\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,59\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,214\u00fc,\n    \u00e4\u00e4\u00e482,7\u00fc\u00fc,19\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,107\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,43\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,182\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,11\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,139\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,75\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,246\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,5\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,87\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,23\u00fc, \u00e4\u00e4\u00e4192,8\u00fc\u00fc,0\u00fc,\n    \u00e4\u00e4\u00e483,7\u00fc\u00fc,51\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,119\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,55\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,206\u00fc,\n    \u00e4\u00e4\u00e481,7\u00fc\u00fc,15\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,103\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,39\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,174\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,7\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,135\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,71\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,238\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,9\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,95\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,31\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,158\u00fc,\n    \u00e4\u00e4\u00e484,7\u00fc\u00fc,99\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,127\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,63\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,222\u00fc,\n    \u00e4\u00e4\u00e482,7\u00fc\u00fc,27\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,111\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,47\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,190\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,15\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,143\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,79\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,254\u00fc,\n    \u00e4\u00e4\u00e496,7\u00fc\u00fc,256\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,80\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,16\u00fc, \u00e4\u00e4\u00e484,8\u00fc\u00fc,115\u00fc,\n    \u00e4\u00e4\u00e482,7\u00fc\u00fc,31\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,112\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,48\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,193\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,10\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,96\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,32\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,161\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,0\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,128\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,64\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,225\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,6\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,88\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,24\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,145\u00fc,\n    \u00e4\u00e4\u00e483,7\u00fc\u00fc,59\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,120\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,56\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,209\u00fc,\n    \u00e4\u00e4\u00e481,7\u00fc\u00fc,17\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,104\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,40\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,177\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,8\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,136\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,72\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,241\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,4\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,84\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,20\u00fc, \u00e4\u00e4\u00e485,8\u00fc\u00fc,227\u00fc,\n    \u00e4\u00e4\u00e483,7\u00fc\u00fc,43\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,116\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,52\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,201\u00fc,\n    \u00e4\u00e4\u00e481,7\u00fc\u00fc,13\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,100\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,36\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,169\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,4\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,132\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,68\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,233\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,8\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,92\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,28\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,153\u00fc,\n    \u00e4\u00e4\u00e484,7\u00fc\u00fc,83\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,124\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,60\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,217\u00fc,\n    \u00e4\u00e4\u00e482,7\u00fc\u00fc,23\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,108\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,44\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,185\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,12\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,140\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,76\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,249\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,3\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,82\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,18\u00fc, \u00e4\u00e4\u00e485,8\u00fc\u00fc,163\u00fc,\n    \u00e4\u00e4\u00e483,7\u00fc\u00fc,35\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,114\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,50\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,197\u00fc,\n    \u00e4\u00e4\u00e481,7\u00fc\u00fc,11\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,98\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,34\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,165\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,2\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,130\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,66\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,229\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,7\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,90\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,26\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,149\u00fc,\n    \u00e4\u00e4\u00e484,7\u00fc\u00fc,67\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,122\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,58\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,213\u00fc,\n    \u00e4\u00e4\u00e482,7\u00fc\u00fc,19\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,106\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,42\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,181\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,10\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,138\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,74\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,245\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,5\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,86\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,22\u00fc, \u00e4\u00e4\u00e4192,8\u00fc\u00fc,0\u00fc,\n    \u00e4\u00e4\u00e483,7\u00fc\u00fc,51\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,118\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,54\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,205\u00fc,\n    \u00e4\u00e4\u00e481,7\u00fc\u00fc,15\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,102\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,38\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,173\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,6\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,134\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,70\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,237\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,9\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,94\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,30\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,157\u00fc,\n    \u00e4\u00e4\u00e484,7\u00fc\u00fc,99\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,126\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,62\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,221\u00fc,\n    \u00e4\u00e4\u00e482,7\u00fc\u00fc,27\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,110\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,46\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,189\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,14\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,142\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,78\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,253\u00fc,\n    \u00e4\u00e4\u00e496,7\u00fc\u00fc,256\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,81\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,17\u00fc, \u00e4\u00e4\u00e485,8\u00fc\u00fc,131\u00fc,\n    \u00e4\u00e4\u00e482,7\u00fc\u00fc,31\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,113\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,49\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,195\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,10\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,97\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,33\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,163\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,1\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,129\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,65\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,227\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,6\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,89\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,25\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,147\u00fc,\n    \u00e4\u00e4\u00e483,7\u00fc\u00fc,59\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,121\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,57\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,211\u00fc,\n    \u00e4\u00e4\u00e481,7\u00fc\u00fc,17\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,105\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,41\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,179\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,9\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,137\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,73\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,243\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,4\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,85\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,21\u00fc, \u00e4\u00e4\u00e480,8\u00fc\u00fc,258\u00fc,\n    \u00e4\u00e4\u00e483,7\u00fc\u00fc,43\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,117\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,53\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,203\u00fc,\n    \u00e4\u00e4\u00e481,7\u00fc\u00fc,13\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,101\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,37\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,171\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,5\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,133\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,69\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,235\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,8\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,93\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,29\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,155\u00fc,\n    \u00e4\u00e4\u00e484,7\u00fc\u00fc,83\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,125\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,61\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,219\u00fc,\n    \u00e4\u00e4\u00e482,7\u00fc\u00fc,23\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,109\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,45\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,187\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,13\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,141\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,77\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,251\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,3\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,83\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,19\u00fc, \u00e4\u00e4\u00e485,8\u00fc\u00fc,195\u00fc,\n    \u00e4\u00e4\u00e483,7\u00fc\u00fc,35\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,115\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,51\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,199\u00fc,\n    \u00e4\u00e4\u00e481,7\u00fc\u00fc,11\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,99\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,35\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,167\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,3\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,131\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,67\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,231\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,7\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,91\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,27\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,151\u00fc,\n    \u00e4\u00e4\u00e484,7\u00fc\u00fc,67\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,123\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,59\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,215\u00fc,\n    \u00e4\u00e4\u00e482,7\u00fc\u00fc,19\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,107\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,43\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,183\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,11\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,139\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,75\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,247\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,5\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,87\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,23\u00fc, \u00e4\u00e4\u00e4192,8\u00fc\u00fc,0\u00fc,\n    \u00e4\u00e4\u00e483,7\u00fc\u00fc,51\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,119\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,55\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,207\u00fc,\n    \u00e4\u00e4\u00e481,7\u00fc\u00fc,15\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,103\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,39\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,175\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,7\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,135\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,71\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,239\u00fc,\n    \u00e4\u00e4\u00e480,7\u00fc\u00fc,9\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,95\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,31\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,159\u00fc,\n    \u00e4\u00e4\u00e484,7\u00fc\u00fc,99\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,127\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,63\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,223\u00fc,\n    \u00e4\u00e4\u00e482,7\u00fc\u00fc,27\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,111\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,47\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,191\u00fc,\n    \u00e4\u00e4\u00e40,8\u00fc\u00fc,15\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,143\u00fc, \u00e4\u00e4\u00e40,8\u00fc\u00fc,79\u00fc, \u00e4\u00e4\u00e40,9\u00fc\u00fc,255\u00fc\n  \u00fc;\nlocal inflate_huft fixed_td\u00c4\u00dc = \u00e4\n    \u00e4\u00e4\u00e480,5\u00fc\u00fc,1\u00fc, \u00e4\u00e4\u00e487,5\u00fc\u00fc,257\u00fc, \u00e4\u00e4\u00e483,5\u00fc\u00fc,17\u00fc, \u00e4\u00e4\u00e491,5\u00fc\u00fc,4097\u00fc,\n    \u00e4\u00e4\u00e481,5\u00fc\u00fc,5\u00fc, \u00e4\u00e4\u00e489,5\u00fc\u00fc,1025\u00fc, \u00e4\u00e4\u00e485,5\u00fc\u00fc,65\u00fc, \u00e4\u00e4\u00e493,5\u00fc\u00fc,16385\u00fc,\n    \u00e4\u00e4\u00e480,5\u00fc\u00fc,3\u00fc, \u00e4\u00e4\u00e488,5\u00fc\u00fc,513\u00fc, \u00e4\u00e4\u00e484,5\u00fc\u00fc,33\u00fc, \u00e4\u00e4\u00e492,5\u00fc\u00fc,8193\u00fc,\n    \u00e4\u00e4\u00e482,5\u00fc\u00fc,9\u00fc, \u00e4\u00e4\u00e490,5\u00fc\u00fc,2049\u00fc, \u00e4\u00e4\u00e486,5\u00fc\u00fc,129\u00fc, \u00e4\u00e4\u00e4192,5\u00fc\u00fc,24577\u00fc,\n    \u00e4\u00e4\u00e480,5\u00fc\u00fc,2\u00fc, \u00e4\u00e4\u00e487,5\u00fc\u00fc,385\u00fc, \u00e4\u00e4\u00e483,5\u00fc\u00fc,25\u00fc, \u00e4\u00e4\u00e491,5\u00fc\u00fc,6145\u00fc,\n    \u00e4\u00e4\u00e481,5\u00fc\u00fc,7\u00fc, \u00e4\u00e4\u00e489,5\u00fc\u00fc,1537\u00fc, \u00e4\u00e4\u00e485,5\u00fc\u00fc,97\u00fc, \u00e4\u00e4\u00e493,5\u00fc\u00fc,24577\u00fc,\n    \u00e4\u00e4\u00e480,5\u00fc\u00fc,4\u00fc, \u00e4\u00e4\u00e488,5\u00fc\u00fc,769\u00fc, \u00e4\u00e4\u00e484,5\u00fc\u00fc,49\u00fc, \u00e4\u00e4\u00e492,5\u00fc\u00fc,12289\u00fc,\n    \u00e4\u00e4\u00e482,5\u00fc\u00fc,13\u00fc, \u00e4\u00e4\u00e490,5\u00fc\u00fc,3073\u00fc, \u00e4\u00e4\u00e486,5\u00fc\u00fc,193\u00fc, \u00e4\u00e4\u00e4192,5\u00fc\u00fc,24577\u00fc\n  \u00fc;\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "INFTREES": {"ttr": 2359, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* inftrees.h -- header to use inftrees.c\n * Copyright (C) 1995-2002 Mark Adler\n * For conditions of distribution and use, see copyright notice in zlib.h\n */\n\n/* WARNING: this file should *not* be used by applications. It is\n   part of the implementation of the compression library and is\n   subject to change. Applications should only use zlib.h.\n */\n\n/* Huffman code lookup table entry--this entry is four bytes for machines\n   that have 16-bit pointers (e.g. PC's in the small or medium model). */\n\ntypedef struct inflate_huft_s FAR inflate_huft;\n\nstruct inflate_huft_s \u00e4\n  union \u00e4\n    struct \u00e4\n      Byte Exop;        /* number of extra bits or operation */\n      Byte Bits;        /* number of bits in this code or subcode */\n    \u00fc what;\n    uInt pad;           /* pad structure to a power of 2 (4 bytes for */\n  \u00fc word;               /*  16-bit, 8 bytes for 32-bit int's) */\n  uInt base;            /* literal, length base, distance base,\n                           or table offset */\n\u00fc;\n\n/* Maximum size of dynamic tree.  The maximum found in a long but non-\n   exhaustive search was 1004 huft structures (850 for length/literals\n   and 154 for distances, the latter actually the result of an\n   exhaustive search).  The actual maximum is not known, but the\n   value below is more than safe. */\n#define MANY 1440\n\nextern int inflate_trees_bits OF((\n    uIntf *,                    /* 19 code lengths */\n    uIntf *,                    /* bits tree desired/actual depth */\n    inflate_huft * FAR *,       /* bits tree result */\n    inflate_huft *,             /* space for trees */\n    z_streamp));                /* for messages */\n\nextern int inflate_trees_dynamic OF((\n    uInt,                       /* number of literal/length codes */\n    uInt,                       /* number of distance codes */\n    uIntf *,                    /* that many (total) code lengths */\n    uIntf *,                    /* literal desired/actual bit depth */\n    uIntf *,                    /* distance desired/actual bit depth */\n    inflate_huft * FAR *,       /* literal/length tree result */\n    inflate_huft * FAR *,       /* distance tree result */\n    inflate_huft *,             /* space for trees */\n    z_streamp));                /* for messages */\n\nextern int inflate_trees_fixed OF((\n    uIntf *,                    /* literal desired/actual bit depth */\n    uIntf *,                    /* distance desired/actual bit depth */\n    inflate_huft * FAR *,       /* literal/length tree result */\n    inflate_huft * FAR *,       /* distance tree result */\n    z_streamp));                /* for memory allocation */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "INFUTIL": {"ttr": 2343, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* infutil.h -- types and macros common to blocks and codes\n * Copyright (C) 1995-2002 Mark Adler\n * For conditions of distribution and use, see copyright notice in zlib.h\n */\n\n/* WARNING: this file should *not* be used by applications. It is\n   part of the implementation of the compression library and is\n   subject to change. Applications should only use zlib.h.\n */\n\n#ifndef _INFUTIL_H\n#define _INFUTIL_H\n\ntypedef enum \u00e4\n      TYPE,     /* get type bits (3, including end bit) */\n      LENS,     /* get lengths for stored */\n      STORED,   /* processing stored block */\n      TABLE,    /* get table lengths */\n      BTREE,    /* get bit lengths tree for a dynamic block */\n      DTREE,    /* get length, distance trees for a dynamic block */\n      CODES,    /* processing fixed or dynamic block */\n      DRY,      /* output remaining window bytes */\n      DONE,     /* finished last block, done */\n      BAD\u00fc      /* got a data error--stuck here */\ninflate_block_mode;\n\n/* inflate blocks semi-private state */\nstruct inflate_blocks_state \u00e4\n\n  /* mode */\n  inflate_block_mode  mode;     /* current inflate_block mode */\n\n  /* mode dependent information */\n  union \u00e4\n    uInt left;          /* if STORED, bytes left to copy */\n    struct \u00e4\n      uInt table;               /* table lengths (14 bits) */\n      uInt index;               /* index into blens (or border) */\n      uIntf *blens;             /* bit lengths of codes */\n      uInt bb;                  /* bit length tree depth */\n      inflate_huft *tb;         /* bit length decoding tree */\n    \u00fc trees;            /* if DTREE, decoding info for trees */\n    struct \u00e4\n      inflate_codes_statef\n         *codes;\n    \u00fc decode;           /* if CODES, current state */\n  \u00fc sub;                /* submode */\n  uInt last;            /* true if this block is the last block */\n\n  /* mode independent information */\n  uInt bitk;            /* bits in bit buffer */\n  uLong bitb;           /* bit buffer */\n  inflate_huft *hufts;  /* single malloc for tree space */\n  Bytef *window;        /* sliding window */\n  Bytef *end;           /* one byte after sliding window */\n  Bytef *read;          /* window read pointer */\n  Bytef *write;         /* window write pointer */\n  check_func checkfn;   /* check function */\n  uLong check;          /* check on output */\n\n\u00fc;\n\n\n/* defines for inflate input/output */\n/*   update pointers and return */\n#define UPDBITS \u00e4s->bitb=b;s->bitk=k;\u00fc\n#define UPDIN \u00e4z->avail_in=n;z->total_in+=p-z->next_in;z->next_in=p;\u00fc\n#define UPDOUT \u00e4s->write=q;\u00fc\n#define UPDATE \u00e4UPDBITS UPDIN UPDOUT\u00fc\n#define LEAVE \u00e4UPDATE return inflate_flush(s,z,r);\u00fc\n/*   get bytes and bits */\n#define LOADIN \u00e4p=z->next_in;n=z->avail_in;b=s->bitb;k=s->bitk;\u00fc\n#define NEEDBYTE \u00e4if(n)r=Z_OK;else LEAVE\u00fc\n#define NEXTBYTE (n--,*p++)\n#define NEEDBITS(j) \u00e4while(k<(j))\u00e4NEEDBYTE;b]=((uLong)NEXTBYTE)<<k;k+=8;\u00fc\u00fc\n#define DUMPBITS(j) \u00e4b>>=(j);k-=(j);\u00fc\n/*   output bytes */\n#define WAVAIL (uInt)(q<s->read?s->read-q-1:s->end-q)\n#define LOADOUT \u00e4q=s->write;m=(uInt)WAVAIL;\u00fc\n#define WRAP \u00e4if(q==s->end&&s->read|=s->window)\u00e4q=s->window;m=(uInt)WAVAIL;\u00fc\u00fc\n#define FLUSH \u00e4UPDOUT r=inflate_flush(s,z,r); LOADOUT\u00fc\n#define NEEDOUT \u00e4if(m==0)\u00e4WRAP if(m==0)\u00e4FLUSH WRAP if(m==0) LEAVE\u00fc\u00fcr=Z_OK;\u00fc\n#define OUTBYTE(a) \u00e4*q++=(Byte)(a);m--;\u00fc\n/*   load local pointers */\n#define LOAD \u00e4LOADIN LOADOUT\u00fc\n\n/* masks for lower bits (size given to avoid silly warnings with Visual C++) */\nextern uInt inflate_mask\u00c417\u00dc;\n\n/* copy as much as possible from the sliding window to the output area */\nextern int inflate_flush OF((\n    inflate_blocks_statef *,\n    z_streamp ,\n    int));\n\nstruct internal_state      \u00e4int dummy;\u00fc; /* for buggy compilers */\n\n#endif\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ISISDEF": {"ttr": 2347, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#ifndef INCLUDE_ISISDEF\n#define INCLUDE_ISISDEF\n        #define ISIS_PF_SID             \"mi\"\n        #define ISIS_PF_NAME            \"zOS\"\n        #define ISIS_PF_LID             IPL_OS390_ZOS\n        #define ISIS_PF_32BIT           1\n        #define ISIS_PF_BIGENDIAN       1\n        #define ISIS_PF_HOST            1\n        #define  ISIS_PF_POSIX           1 /*szm20041027*/\n        #define  ISIS_PF_POSIX_THR       1\n        #define  ISIS_PF_POSIX_TSH       1\n        #define  ISIS_PF_POSIX_CX        1\n        #define ISIS_PF_ATOMIC           1 /*szm20050308*/\n        #define  ISIS_PF_ATOMIC_COUNTER32 1\n        #undef  ISIS_PF_ATOMIC_COUNTER64\n        #define ISIS_PF_EBCDIC          1\n\t\t#define ISIS_EXT_C \t\t\textern \"C\"\n\t\t#define ISIS_EXT_ASM \t\textern \"OS_UPSTACK\"\n\t\t/*\n  * distinction between different compilers at this platform\n  */\n        #ifdef __IBMCPP__\n            #define ISIS_PF_HOST_IBM    __IBMCPP__\n        #elif  __IBMC__\n            #define ISIS_PF_HOST_IBM   __IBMC__\n        #endif\n /*\n  * special characters for this platform\n  */\n        #define NOT\t    \t\t\t\t|\n        #define NEQ\t    \t\t\t\t|=\n  \t    #define _export _Export\n        #define ISIS_BOOLEAN        \t1   /* KV20030430 */\n        #define CHBSL\t    \t\t\t'/'\n        #define STBSL\t\t    \t\t\"/\"\n        #define CHPATHSEP               ':'     /* JRY 021030 Path element separator */\n        #define STPATHSEP               \":\"\n /*\n  * definition of compiler capabilities\n  */\n        #define ISIS_TEMPLATES          1\n        #define ISIS_NEWCASTS           1\n        #define ISIS_STL                1\n        #define ISIS_BOOLEAN            1\n        #define ISIS_EXPLICIT           1\n        #define ISIS_MUTABLE            1\n\n        #define _POSIX_SOURCE           1\n        #define _OPEN_THREADS           1\n        #define _OPEN_SYS_SOCK_EXT      1\n        #define _XOPEN_SOURCE_EXTENDED  1\n        #define _ALL_SOURCE             1\n        #define _VARARG_EXT_            1\n\n /*\n  * set old definitions for compatibility, DO NOT USE FOR NEW CODE\n  */\n    \t#define _SYS32_                 1\n        #define __SYS32__               1\n\n/*  oz070626 switching large file handling on +++++++++++++++++++++++ */\n        #ifndef USE_HUGE_FILES\n                #define USE_HUGE_FILES          1\n        #endif\n\n        #ifndef _LARGEFILE_SOURCE\n                #define _LARGEFILE_SOURCE       1\n        #endif\n\n        #ifndef _FILE_OFFSET_BITS\n                #define _FILE_OFFSET_BITS       64\n        #endif\n/******************************************************************************\n ** macros to correct inspection functions\n ******************************************************************************/\n#define i_isalpha(p)  isalpha((int)(unsigned char)(p))\n#define i_isupper(p)  isupper((int)(unsigned char)(p))\n#define i_islower(p)  islower((int)(unsigned char)(p))\n#define i_isdigit(p)  isdigit((int)(unsigned char)(p))\n#define i_isxdigit(p) isxdigit((int)(unsigned char)(p))\n#define i_isspace(p)  isspace((int)(unsigned char)(p))\n#define i_ispunct(p)  ispunct((int)(unsigned char)(p))\n#define i_isalnum(p)  isalnum((int)(unsigned char)(p))\n#define i_isprint(p)  isprint((int)(unsigned char)(p))\n#define i_isgraph(p)  isgraph((int)(unsigned char)(p))\n#define i_iscntrl(p)  iscntrl((int)(unsigned char)(p))\n#define i_toupper(p)  toupper((int)(unsigned char)(p))\n#define i_tolower(p)  tolower((int)(unsigned char)(p))\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JOBENV": {"ttr": 2413, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/jobenv.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\n\n#ifndef INCLUDE_JOBENV\n#define INCLUDE_JOBENV\n\n#include \"mvsbase.hpp\"\n\nclass JOBENV\n\u00e4\npublic:\nenum JOBENV_ACTION\n\u00e4\n\tAbort,\n   Continue\n\u00fc;\npublic:\n    mvsSTRING jobName;\n    mvsSTRING jobId;\n    mvsSTRING stepName;\n    mvsSTRING procStepName;\n    mvsSTRING program;\n\t\tmvsSTRING programRb;\n    static int  debug;\npublic:\n    JOBENV(char *);\n    \u00dfJOBENV()\u00e4\u00fc\n    void print();\n    void static Error(char *,JOBENV_ACTION);\n    int  static DEBUG(int,char*);\n    int  static DEBUG(int,char*,int);\n    int  static DEBUG(int,size_t);\n    int  static DEBUG(int,char*,char*);\n    int  static DEBUG(int,char*,char*,char*);\n    int  static DEBUG(int,char*,char*,char*,char*);\n    int  static DEBUG(int,char*,char *,int);\n\u00fc;\n\nextern JOBENV * jobEnv;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MCHAIN": {"ttr": 2437, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/mchain.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\n\n#ifndef INCLUDE_MCHAIN\n#define INCLUDE_MCHAIN\n\n#include \"mvsbase.hpp\"\n\nstruct chainE \u00e4\n\n\tchainE * prev ;\n\tchainE * next ;\n\tchar * chainEid   ;\n\tint    chainEidl  ;\n\n\tchainE()\u00e4chainEid = 0; chainEidl = 0; prev = next = 0;\u00fc\n\n\tchainE(char * i,int l =0)\n\t\u00e4\n\t\tif (i)\n\t\t\u00e4\n\t\t\tif ( l ) chainEidl = l; else chainEidl =int(strlen(i));\n\t\t\tchainEid = new char\u00c4chainEidl+1\u00dc; memcpy(chainEid,i,chainEidl+1);\n\t\t\u00fc\n\t\telse chainEid =0;\n\t\tprev=next=0;\n\t\u00fc\n\n\tchainE(const char * i,int l =0)\n\t\u00e4\n\t\tif (i)\n\t\t\u00e4\n\t\t\tif ( l ) chainEidl = l; else chainEidl =int(strlen(i));\n\t\t\tchainEid = new char\u00c4chainEidl+1\u00dc; memcpy(chainEid,i,chainEidl+1);\n\t\t\u00fc\n\t\telse chainEid =0;\n\t\tprev=next=0;\n\t\u00fc\n\n\tchainE(const mvsSTRING * s)\n\t\u00e4\n\t\tif (s)\n\t\t\u00e4\n\t\t\tchainEidl = int((mvsSTRING *)s->lengthOf());\n\t\t\tchainEid = new char\u00c4chainEidl+1\u00dc;\n\t\t\tmemcpy(chainEid,(char *)mvsSTRING(*s),chainEidl+1);\n\t\t\u00fc\n\t\telse chainEid =0;\n\t\tprev=next=0;\n\t\u00fc\n\tvirtual \u00dfchainE()\n\t\u00e4\n\t\tdelete chainEid ;\n\t\u00fc\n\tvirtual void print()\u00e4\u00fc\n\u00fc;\n\n\nclass mCHAIN \u00e4\n\nprotected:\n\tchainE * first;\n\tchainE * last ;\n\n\tchainE * pgo;\n\tlong int    counter;\npublic:\n\tfriend class CHAINITER ;\n\n\tmCHAIN()\n\t\u00e4\n\n\t\tfirst = last = pgo = 0; counter = 0;\n\t\u00fc\n\n\tmCHAIN(chainE * nc)\n\t\u00e4\n\t\tpgo = 0;\n\t\tfirst = nc ; last = nc ;\n\t\tcounter = 1;\n\t\u00fc\n\n\tvirtual \u00dfmCHAIN();\n\tvirtual   long int    add(chainE * nc,chainE * c,long int code = 1);\n\tvirtual long int addfirst(chainE * nc )\n\t\u00e4 return add(nc,first,-1) ; \u00fc\n\tvirtual long int addlast(chainE * nc )\n\t\u00e4 return add(nc,last,+1) ; \u00fc\n\tvirtual long int before(chainE * nc , chainE * c)\n\t\u00e4return add(nc,c,-1);\u00fc\n\tvirtual long int after(chainE * nc , chainE * c)\n\t\u00e4return add(nc,c,+1);\u00fc\n\tvirtual long int del(chainE * c);\n\tvirtual void swap(chainE * a , chainE * b);\n\n\n\n\tvirtual chainE* goNext();\n\tvirtual chainE* goPrev();\n\tvirtual chainE* goFirst();\n\tvirtual chainE* goLast();\n\tvirtual chainE* go(int);\n\tvirtual chainE * searchEQ(const char * id,size_t =0);\n\tvirtual chainE * search(const char * id,size_t =0);\n\tvirtual chainE * search(const mvsSTRING &);\n\tvirtual chainE * search(char *id,size_t length =0)\u00e4 return search((const char *)id,length);\u00fc\n\tvirtual chainE * search(mvsSTRING &s)\u00e4 return search((const mvsSTRING&)s);\u00fc\n\n\tvirtual void sort(long int direction);\n\tvirtual void print_all_ids();\n\tvirtual void print();\n\tfriend int idcmp(chainE* , chainE*);\n\u00fc;\n\nenum SORTEDTYPE\u00e4UNIQUE =0 ,NOUNIQUE =1 \u00fc;\n\nclass SORTEDmCHAIN:public mCHAIN\n\u00e4\nprivate:\n\tSORTEDTYPE unique;\npublic:\n\tSORTEDmCHAIN(SORTEDTYPE st = UNIQUE):\n\t\t\tmCHAIN(), unique(st)\u00e4\u00fc;\n\t\t\tSORTEDmCHAIN(chainE *nc, SORTEDTYPE st = UNIQUE)\n\t\t\t\t:mCHAIN(nc), unique(st)\u00e4\u00fc;\n\t\t\tlong int add(chainE * nc,chainE * = 0,long int = 0);\n\t\t\tvirtual \u00dfSORTEDmCHAIN()\u00e4\u00fc\n\u00fc;\n\nclass mSTACK:public mCHAIN\n\u00e4\nprivate:\npublic:\n\tmSTACK():mCHAIN()\u00e4\u00fc\n\tmSTACK(chainE * nc):mCHAIN(nc)\u00e4\u00fc\n\n\tvirtual long int push(chainE * nc)\u00e4return addlast(nc);\u00fc\n\tvirtual chainE * examine(int i = 0 )\n\t\u00e4\n\t\tif ( i >= 0 ) return last;\n\t\ti = -i;\n\t\tif ( counter-i < 0 ) return NULL;\n\t\treturn go(counter-i);\n\n\t\u00fc\n\tvirtual chainE * pop()\u00e4chainE * r = last; if (last) del(last);return r;\u00fc\n\u00fc;\n\nclass mHASH:public mCHAIN\n\u00e4\nprivate:\n\tchainE * * table;\n\tint    hash;\n\tint\t\tpi;\npublic:\n\tmHASH(int h = 1023);\n\t\u00dfmHASH();\n\tlong int add(chainE *);\n\tlong int del(chainE *);\n\tchainE * next();\n\tchainE * search(chainE *);\nprivate:\n\tsize_t  hashCode(chainE *c)\n\t\u00e4\n\t\tint r = 0;\n\t\tif (c->chainEid)\n\t\t\tfor (int i = c->chainEidl;i;i--)\n\t\t\t\tr = (r<<1) \u00ac (c->chainEid\u00c4i-1\u00dc) ;\n\t\treturn size_t(r<0 ? -r:r);\n\t\u00fc\n\u00fc;\n\nclass CHAINITER\u00e4\nprivate:\n\tmCHAIN * c;\n\tchainE * a;\npublic:\n\tCHAINITER(mCHAIN &ch) \u00e4c = &ch ; a = (c->first ? c->first:0) ; \u00fc\n\tCHAINITER(mCHAIN *ch) \u00e4c =  ch ; a = (c->first ? c->first:0) ; \u00fc\n\t\u00dfCHAINITER()\u00e4\u00fc\n\tchainE * next() \u00e4\n\n\t\tchainE * r = a ;\n\t\tif ( a == 0 ) a =c->first ;\n\t\telse a = a->next ;\n\t\treturn r;\n\t\u00fc\n\tchainE * operator()()\u00e4 return next(); \u00fc\n\tvoid reset() \u00e4 a = (c ? c->first:0);\u00fc\n\u00fc;\n\nint idcmp(chainE* , chainE*);\n\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MERROR": {"ttr": 2367, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/merror.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\n\n#ifndef INCLUDE_MERROR\n#define INCLUDE_MERROR\n\n\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n\n\n\n\n\n#ifndef mERRORP\n#define mERRORP mERROR *\n#endif\n\nclass mERROR;\n\nclass mERRORPSTACK \u00e4\nprivate:\n   long int ip;\n   long int max;\n   mERRORP * sp;\npublic:\n   mERRORPSTACK(long int size=256);\n   void push(mERRORP value);\n   mERRORP examine();\n   int    callNextHandler(int);\n   mERRORP pop();\n   void  reset();\n  \u00dfmERRORPSTACK();\n\n\u00fc;\n\n\nclass mERROR\n\u00e4\nprotected:\n   char err;\n   int (* handler)(int);\nenum ERROR_ACTION\u00e4Warning, Abort\u00fc;\npublic:\n\nstatic int max_rc;\n\nfriend class mERRORPSTACK;\n   mERROR();\n   mERROR(int (*)(int) );\n\t virtual \u00dfmERROR()\u00e4\u00fc;\n   long int iserror()\u00e4return err;\u00fc\n   int  markerror(int code = 1)\n   \u00e4\n    err = 1;\n    if (handler) return (handler(code));\n    else return 0;\n   \u00fc\n   void clearerror()\u00e4err = 0;\u00fc\n   void setmERRORHandler(int (*h)(int))\u00e4handler = h;\u00fc\n   int error(char *,ERROR_ACTION);\n\u00fc;\n\nextern mERRORPSTACK mErrorPStack;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MISC": {"ttr": 2383, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/misc.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\n\n#ifndef INCLUDE_MISC\n#define INCLUDE_MISC\n\n#ifdef OWN_STDIO\n#include \"stdio.hpp\"\n#else\n#include <stdio.h>\n#endif\n\n#include <time.h>\n#include \"mvsbase.hpp\"\n#include <stdlib.h>\n\n#ifndef TRUE    /* stl 20090508 */\n#define TRUE 1\n#endif          /* stl 20090508 */\n#ifndef FALSE    /* stl 20090508 */\n#define FALSE 0\n#endif          /* stl 20090508 */\n\nunsigned long cvb(unsigned long,unsigned long = 8);\nunsigned long cvd(unsigned long);\nvoid    formatTime(char *,int,char *); //szm20061221 needed by dssn\n\n#if defined(CICSAPPL)  ]]  defined(MU_STANDALONE) //szm\nint dump(FILE *,char *, char *,  int );\nint dump(FILE *,char *, void * , int );\nint dump(char *,int, char *, int);\n\nint  fromInt(char *,long ,int  = sizeof(long));\nlong toInt(char *,int);\nlong toInt(unsigned char *,int);\nint  roundToInt(double);\n\nint   Char2Hex(char *);\nchar * Hex2Char(char );\nint   isnull(char *,int = 0 );\n\n#if 0\nunsigned char miscEtoa(unsigned char );\nunsigned char miscAtoe(unsigned char );\n// start of lines inserted from older MISC            PB n:2002.06.18.\nunsigned char miscetoa(unsigned char );\nunsigned char miscatoe(unsigned char );\n// end   of lines inserted from older MISC            PB n:2002.06.18.\nint   ActualtoE(char *,char *, int = 0);\nint   ActualtoA(char *,char *, int = 0);\nint   EtoActual(char *,char *, int = 0);\nint   AtoActual(char *,char *, int = 0);\nint   miscEtoA(char *,char *, int = 0);\nint   miscAtoE(char *,char *, int = 0);\nint   miscAtoActual(char *, char * =0, int = 0);\nint   miscActualtoA(char *, char * =0, int = 0);\nchar*  miscActualtoAp(char *f,char *t=0, int l= 0);\n#endif\n//void  getUniqueKey(char *); //szm20050323 moved to rarcsql.hpp\n\nchar*   getTimeStemp();\nint     DatetoTm(tm&,char *);\nchar *  DatetoString(tm, char *);\n#endif  //szm\n\nvoid  getUniqueKEY(char *);\nvoid  getUniqueLongKEY(char *);\nchar*   DatetoString();\nchar *\tDatetoIBM(char * from);\n\n\n//KV20040824 conflicting declaration in miscmq.hpp\n//char* StrTok(char *, char *);\n//KV20050426 naming conflict with class List in pocxxhcl/qdir.cpp\n// did not fine use of this function\n//int   List(const char *,const char *\u00c4\u00dc);\nint   strcmpiList(const char *,const char *\u00c4\u00dc,int &);\n\nchar *strrev(char *s);         /*szm20020927*/\n\nmvsSTRING makemvsSTRING(char *,int);\n\n#if defined(ISIS_PF_MI) ]] defined(ISIS_PF_MU)\n  int stcpma(char * ,const char * );\n  void * memcpyp(void *,const void*,size_t,size_t,int);\n    #ifndef max\n        #define max(a,b) (((a)<(b))?(b):(a))\n    #endif\n    #ifndef min\n        #define min(a,b) (((a)>(b))?(b):(a))\n    #endif\n#endif\n\n#if defined(ISIS_PF_HOST) == 1 //ZA030923\n\n// start of lines inserted from older MISC            PB n:2002.06.18.\nchar * Astrupr(char *, int);\nchar * ConvertmvsSTRINGToAscii( char *, int);\nchar aup(char);\n//unsigned int  ungerade(int); //ZA030924\nvoid  swab( char *,char *, int);\nchar *  StrDup(char *);\n#endif\n\nchar   bit_rotate(unsigned char);\nmvsSTRING makemvsSTRING(char *,int);\nextern char __test__ ;\n\nextern unsigned char ETOA\u00c4256\u00dc;\nextern unsigned char ATOE\u00c4256\u00dc;\n#if defined(ISIS_PF_MU) ]] defined(ISIS_PF_MI)\n//szm\n#if defined(OWN_STDIO) == 0 //ZA050715\ninline int ffixed(FILE * f)\n\u00e4\n      fldata_t ft;\n      char fn\u00c4256\u00dc;\n      if (fldata(f,fn,&ft) == 0)\n         return (ft.__recfmF);\n      else\n\t\t\t\treturn 0;\n\u00fc\n#endif\n//szm\ninline void  strerror_r(int err, char *errmsg, int size)\n\u00e4\n    const char* msg=strerror(err);\n    if(strlen(msg)>size-1)\n    \u00e4\n        strncpy(errmsg,msg,size-1);\n        errmsg\u00c4size-1\u00dc='\u00d60';\n    \u00fc\n    else\n    \u00e4\n        strcpy(errmsg,msg);\n    \u00fc\n\u00fc\n#endif\n\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MSGMGR": {"ttr": 2435, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/msgmgr.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\n\n\n#ifndef INCLUDE_MSGMGR\n#define INCLUDE_MSGMGR\n\n#ifndef OWN_STDIO\n#include <stdio.h>\n#endif\n#include \"mvsbase.hpp\"\n#include \"misc.hpp\"\n\nnamespace isis_ns_mvs\n\t\u00e4\n\n\t/*--------------------------------------------------------------------+\n\t|                                                                     |\n\t| Message generation                                                  |\n\t|                                                                     |\n\t+--------------------------------------------------------------------*/\n\n\n\tenum MSGETypes\u00e4msgundef = 0, msgint    = 1,\n\t\tmsgshort = 2, msgcharp  = 3,\n\t\tmsgchar  = 4,  msgmvsSTRING = 5\u00fc;\n\n\n\tenum MSGEForm\u00e4msgfundef = 0, msgfd = 1, msgfs = 2, msgfx =3 , msgfc = 4\u00fc;\n\tclass MSGE\n\t\t\u00e4\n\t\tprivate:\n\t\t\tint         length;\n\t\t\tMSGEForm    form;\n\t\t\tMSGETypes   type;\n\t\t\tchar *      to;\n\t\t\tunion\u00e4\n\t\t\t\tchar     mchar;\n\t\t\t\tint      mint;\n\t\t\t\tshort    mshort;\n\t\t\t\tchar   * mcharp;\n\t\t\t\tmvsSTRING * mmvsSTRING;\n\t\t\t\t\u00fc;\n\t\tpublic:\n\t\t\tMSGE();\n\t\t\tMSGE(int i,int l=sizeof(int), MSGEForm f = msgfd);\n\t\t\tMSGE(short s,int l = sizeof(short), MSGEForm f= msgfd);\n\t\t\tMSGE(char * c,int l = 0, MSGEForm f = msgfs);\n\t\t\tMSGE(const mvsSTRING &s,int l = 0,MSGEForm f = msgfs );\n\t\t\tMSGE(char c);\n\n\t\t\t\u00dfMSGE()\n\t\t\t\t\u00e4\n\t\t\t\tif ( type == msgmvsSTRING) delete mmvsSTRING;\n\t\t\t\tif ( to ) delete \u00c4\u00dc to;\n\t\t\t\t\u00fc\n\t\t\tchar * format();\n\t\t\u00fc;\n\n\n\tclass EOL\u00e4\n\t\t\u00fc;\n\tconst EOL eol=EOL();\n\n\tMSGE * tCHARp(char * ,int  = 0);\n\n\tMSGE * tINT(int ,int = sizeof(int));\n\n\tMSGE * tSHORT(int ,int  = sizeof(short));\n\n\tMSGE * tmvsSTRING(mvsSTRING & ,int  = 0);\n\n\tMSGE * tHEX(int  ,int = (sizeof(int)*2) );\n\n\tMSGE * tHEX(char * , int);\n\n\n\n\t/* structure table for the used ENTRY     panels                      */\n\tenum FLAG_VALUE\u00e4 FLAG_TEXT = 5, FLAG_IO = 4\u00fc;\n\n\ttypedef   struct  ENTRY\n\t\t\u00e4\n\t\tchar * name     ;\n\t\tchar flag       ;\n\t\tint  xcoord     ;\n\t\tint  ycoord     ;\n\t\tint  length     ;\n\t\tchar attrib     ;\n\t\tint  access     ;\n\t\tchar fieldtype  ;\n\t\tchar align      ;\n\t\tchar caps       ;\n\t\tchar * defvalue ;\n\t\t\u00fc\n\tentry               ;\n\n\n\t/* the HELP and LIST panels and the messages need no structure defin's*/\n\t/* structure table for the used SELECTION panels                      */\n\n\ttypedef   struct  SELECTION\n\t\t\u00e4\n\t\tchar * line     ;\n\t\tint  access     ;\n\t\t\u00fc\n\tselection           ;\n\tstruct et\n\t\t\u00e4\n\t\tchar *   cid ;\n\t\tchar * * ett;\n\t\t\u00fc ;\n\n\n\n\n\n\tstruct TEXTENTRY\n\t\t\u00e4\n\t\tint i;\n\t\tchar * t;\n\t\t\u00fc;\n\n\n\tclass  MessageTEXT\n\t\t\u00e4\n\t\tprivate:\n\t\t\tchar timestemp;\n\t\t\tint (*printfv)(char *);\n\t\t\tchar * msgfilename;\n\t\t\tbool   logger;\n\t\t\tbool   onlylogger;\n\t\t\tFILE  * msgfile;\n\t\t\tTEXTENTRY *  vector;\n\t\t\tMSGE * v\u00c48\u00dc;\n\t\t\tint    vi;\n\t\t\tint    number;\n\t\t\tchar   deflt\u00c4256\u00dc;\n\n\t\tpublic:\n\t\t\tMessageTEXT(char * = 0,char * = 0);\n\t\t\t\u00dfMessageTEXT();\n\t\t\tMessageTEXT& operator<<(char *);\n\t\t\tMessageTEXT& operator<<(const mvsSTRING &);\n\t\t\t//MessageTEXT& operator<<(short);\n\t\t\tMessageTEXT& operator<<(int );\n\t\t\tchar *       operator<<(const EOL);\n\t\t\tMessageTEXT& operator<<(void *);\n\t\t\tchar * getText(int);\n\t\t\tint    copyText(int, char *, int);\n\t\t\tchar * print(char *);\n\t\t\tvoid   resetPrintFv()\u00e4 printfv = 0;\u00fc\n\t\tvoid   setPrintFv(int (*pfv)(char *))\u00e4 printfv= pfv;\u00fc\n\tvoid   setLogger(const char *);\n\tvoid   setOnlyLogger(const char * l)\n\t\t\u00e4\n\t\tsetLogger(l);\n\t\tonlylogger = logger;\n\t\t\u00fc\n\tvoid   setFILE(FILE *);\n\tFILE*  getFILE()\u00e4return msgfile;\u00fc\nvoid   setFileName(char *);\nvoid   setTimeStempFlag(char c = 1)\u00e4timestemp = c;\u00fc\nchar   getTimeStempFlag()\u00e4 return timestemp;\u00fc\nvoid   setNumber(int n);\n\t\t\u00fc;\n\n\tISIS_EXT_C typedef void * (*EXT_C_fp)();\n\n\n\tclass ExternalTEXT\n\t\t\u00e4\n\t\tprivate:\n\t\t\tEXT_C_fp fp;\n\t\t\tchar   language;\n\t\t\tchar   modulname\u00c48\u00dc;\n\t\t\tvoid * text ;\n\t\t\tvoid init(char * name);\n\t\tpublic:\n\t\t\tExternalTEXT(char * name,char lang);\n\t\t\tExternalTEXT(char * name);\n\n\t\t\t//???~TEXT(){if (fp) unloadm(fp);}\n\t\t\tint         MSGTEXT(int id, char * buff,int len);\n\t\t\tchar      * HelpText(char * hid);\n\t\t\tentry     * EntryText(char * hid);\n\t\t\tselection * SelectionText(char * hid);\n\t\t\u00fc;\n\n\textern ExternalTEXT * externaltext;\n\n\n\n\textern  MessageTEXT * messagetext;\n\tint initMessageText();\n\n\tint     Error(int , ...);\n\tchar *  Message(int , ...);\n\tchar *  getErrorText();\n\tchar *  getMessageText();\n\tMessageTEXT& Err(int);\n\tMessageTEXT& Msg(int);\n\n\t\u00fc //namespace isis_ns_mvs\n\nusing namespace isis_ns_mvs;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MSGTEXT": {"ttr": 2409, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/msgtext.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\nt(1,\"UPR0001E unable to allocate '%s' bytes\")\nt(2,\"UPR0002E open error for '%s' in '%s' mode\")\nt(3,\"UPR0003E error in '%s' function, errorcode:'%s'\")\nt(100,\"UPR0100I UPR program starts\")\nt(101,\"UPR0101I trace: '%s'\")\nt(102,\"UPR0102I trace: '%s' '%s'\")\nt(103,\"UPR0103I trace: '%s' '%s' '%s'\")\nt(104,\"UPR0104I trace: '%s' '%s' '%s' '%s'\")\nt(105,\"UPR0105I trace: '%s' '%s' '%s' '%s' '%s'\")\nt(110,\"UPR0110E unable to open:'%s'\")\nt(111,\"UPR0111E serious error above, execution terminating\")\nt(112,\"UPR0112I %s\")\nt(113,\"UPR0113I including from :'%s\")\nt(114,\"UPR0114I starting DUMP function\")\nt(115,\"UPR0115I starting RESTORE function\")\nt(301,\"UPR0301E function %s returned %s code\")\nt(201,\"UPR0201E the error above prevents continuations\")\nt(202,\"UPR0202E abnormal termination\")\nt(301,\"UPR0301E SUBTASK error, MVS function '%s' returned with rc:%s\")\nt(302,\"UPR0302E SUBTASK error, unable to load '%s\")\nt(400,\"UPR0400I job: %s(%s) in %s program\")\nt(500,\"UPR0500I terminating for user request's\")\n\n//*\n//* UPRUN   1000\n//*\nt(1000,\"UPR1000I Starting Up and Running address space %s(%s) Version:%s Compiled :%s\")\nt(1001,\"UPR1001I %s module will start the programs\")\nt(1002,\"UPR1002I starting subtask %s with : '%s'\")\nt(1003,\"UPR1003I started %s subtask with %s PID \")\nt(1004,\"UPR1004I '%s' command entered\")\nt(1005,\"UPR1005I Up and Running address space is stopping\")\nt(1006,\"UPR1006I started %s subtask RESTARTED with %s PID \")\nt(1009,\"UPR1009E unable to open '%s, aborted\")\nt(1010,\"UPR1010E in '%s' serious error: %s\")\nt(1020,\"UPR1020I pipe: '%s' blocked for %s\")\nt(1021,\"UPR1021I unable to restart %s subtask, suspect a loop, %s\")\nt(1022,\"UPR1022E no active task, we terminate now\")\nt(1023,\"UPR1023I %s %s\")\nt(1030,\"UPR1030I a STOP command received\")\nt(1031,\"UPR1031A %s job, reply with P (stop) or F ( modify)\")\n//*\n//* FILESYS 1100\n//*\nt(1101,\"HTW1101E Invalid file mode for '%s' file, '%s' ignored\")\nt(1102,\"HTW1102E READ/WRITE open mode for '%s' ignored\")\nt(1103,\"HTW1103E TRUNC/EXCL option ignored for '%s'\")\nt(1104,\"HTW1104E Unable to open '%s' as '%s' file\")\nt(1105,\"HTW1105E Unable to create LBUFF for  '%s'\")\nt(1106,\"HTW1106E Unable to create RBUFF for  '%s'\")\nt(1107,\"HTW1107I Using Email:%s for Userid:%s\")\n//*\n//* STR???   1200\n//*\n\nt(1200,\"STR0000I ISIS Information Systems   %s Program, Version: %s Compiled: %s\")\nt(1201,\"STR1201E unable to open '%s' parameterfile\")\nt(1202,\"STR1202I %s\")\nt(1203,\"STR1203W invalid keyword '%s', ignored\")\nt(1204,\"STR1204E unable to open pipe '%s'\")\nt(1205,\"STR1205E unable to open file '%s'\")\nt(1206,\"STR1206I >> %s\")\nt(1207,\"STR1207E write error for '%s' file\")\nt(1211,\"STR1211I transfered %s bytes over '%s'\")\nt(1212,\"STR1212I received %s bytes over '%s'\")\nt(1214,\"STR1214I '%s' ended with 0, Runtime:%s Cputime:%s\")\nt(1215,\"STR1215W no output generated, '%s' ended with 4, Runtime:%s Cputime:%s\")\nt(1216,\"STR1216E pipe name '%s' invalid\")\nt(1217,\"STR1217I '%s' primary pipe selected\")\nt(1218,\"STR1218I using %s pipe's and waiting for %s seconds\")\nt(1220,\"STR1220E timeout occured for '%s' pipe\")\nt(1221,\"STR1221E %s error occured for '%s' pipe, ERRNO: %s(%s)\")\nt(1222,\"STR1222E '%s' pipe is in invalid status\")\nt(1223,\"STR1223E %s\")\nt(1224,\"STR1224E timeout occured for '%s' pipe and '%s' pipe\")\nt(1225,\"STR1225E %s error occured for '%s' pipe, and '%s' pipe ERRNO: %s(%s)\")\nt(1299,\"STR1299E serious error occured\")\n\nt(1300,\"PPH1300E Product licence expired , contact with ISIS\")\nt(1301,\"PPH1301E DocumentQueue feature inactive, contact with ISIS\")\n//*\n//* IQC 1400\n//*\nt(1400,\"IQC1400E %s communication error %s - %s code: %s %s\")\nt(1401,\"IQC1401W %s waiting for connection, I will try in every %s second\")\nt(1500,\"EML1500I ISIS Information Systems Program:%s ,Version:%s Compileed:%s\")\nt(1501,\"EML1501E unable to open %s\")\nt(1502,\"EML1502I %s\")\nt(1503,\"EML1503W inavlid keyword:%s, ignored\")\nt(1507,\"EML1507I Email address:'%s' will be used for %s user\")\nt(1514,\"EML1514I %s ended with 0, Sent:%s bytes, Runtime:%s Cputime:%s\")\nt(1515,\"EML1515W no output generated, %s ended with 4, Runtime:%s Cputime:%s\")\nt(1527,\"EML1527I opening %s , to copy the attachments\")\nt(1528,\"EML1528I opening %s to attach as %s\")\nt(1528,\"EML1529I opening %s to attach as plain/text\")\nt(1530,\"EML1530I %s\")\nt(1599,\"EML1599E serious error occured\")\n//*\nt(2000,\"PPH2000E CICS error : '%s' function\")\nt(2001,\"PPH2001E file '%s' open error in '%s' mode\")\nt(2002,\"PPH2002E file '%s' WRITE error\")\nt(2003,\"PPH2003E file '%s' READ error\")\nt(2004,\"PPH2004I trace about '%s' function\")\nt(2005,\"PPH2005E invalid general CICS file '%s'\")\nt(2006,\"PPH2006E unable to get resource '%s'\")\nt(2007,\"PPH2007W waiting for resource '%s'\")\nt(2100,\"PPH2100E CICS error %s \")\nt(2101,\"PPH2101E open error for the library\")\nt(2101,\"PPH2101E open error for the library\")\nt(2102,\"PPH2102E open error for the library directory\")\nt(2102,\"PPH2102E open error for the library directory\" )\nt(2103,\"PPH2103E member not found:'%s' ; return code:'%s'\")\nt(2103,\"PPH2103E member not found:'%s' ; return code:'%s'\" )\nt(2104,\"PPH2104E file length RDF:'%s' AFPDS length:'%s' '%s'\")\nt(2104,\"PPH2104E file length missmatch RDF:'%s' AFPDS length:'%s' '%s'\" )\nt(2105,\"PPH2105E file too long record:'%s'\")\nt(2105,\"PPH2105E file too long record:'%s'\")\nt(2106,\"PPH2106E error during a READ operation \")\nt(2106,\"PPH2106E error during a READ operation \")\nt(2110,\"PPH2110E file error, operation:'%s' key:'%s'\")\nt(2110,\"PPH2110E file error, operation:'%s' key:'%s'\")\nt(2111,\"PPH2111E already ENQ'd the resource:'%s'\")\nt(2111,\"PPH2111E already ENQ'd the resource:'%s'\")\nt(2112,\"PPH2112E resource '%s' allocated to another user\")\nt(2112,\"PPH2112E resource '%s' allocated to another user\")\nt(2113,\"PPH2113E error during ''%s'' function\")\nt(2113,\"PPH2113E error during ''%s'' function\")\nt(2120,\"PPH2120E error , unable to take a socket from the TCP/IP listener, errno:%s\")\nt(2121,\"PPH2121I Socket '%s' taken , Client name: '%s' Client subtask: '%s'\")\nt(2122,\"PPH2122E '%s' connection - error in '%s' function, errorcode:%s\")\nt(2123,\"PPH2123I '%s'<%s> connected on %s port\")\nt(2124,\"PPH2124E unable to convert symbolic host addres '%s', use explicit IP address\")\nt(2125,\"PPH2125E TCPACCESS error : '%s'\")\nt(2130,\"PPH2130A unable to allocate session with '%s' system, reply 'R' for retry 'A' for abort\")\nt(2131,\"PPH2131A communication error '%s', reply 'C' to continue\")\nt(2132,\"PPH2132A communication error  by partner '%s' reply  'C' to continue\")\nt(2133,\"PPH2133A TS QUEUE %s near to full reply 'C' to continue\")\nt(2134,\"PPH2134A PPHC log queue full, queue will be deleted, reply 'C' to continue\")\nt(2160,\"PPH2160A unable to allocate session with '%s' system\")\nt(2161,\"PPH2161A communication error '%s'\")\nt(2162,\"PPH2162A communication error  by partner '%s'\")\nt(2163,\"PPH2163A TS QUEUE %s near to full\")\nt(2164,\"PPH2164A PPHC log queue full, queue will be deleted\")\nt(2402,\"PPH2402W undefined selection panel '%s' \")\nt(2403,\"PPH2403W undefined list panel '%s' \")\nt(2404,\"PPH2404W undefined entry panel '%s' \")\nt(2501,\"PPH2501E the field should have a value\")\nt(2502,\"PPH2502E invalid listbox value\")\nt(2503,\"PPH2503E invalid field type\")\nt(2504,\"PPH2504E invalid value\")\n//*\n//* TSO 2600\n//*\nt(2601,\"HTW2601E open error for the library\")\nt(2602,\"HTW2602E open error for the library directory\" )\nt(2603,\"HTW2603E member not found:'%s' ; return code:'%s'\")\nt(2604,\"HTW2604E file length missmatch RDF:'%s' AFPDS length:'%s' '%s'\")\nt(2605,\"HTW2605E file too long record:'%s'\")\nt(2606,\"HTW2606E error during a READ operation \" )\nt(2607,\"HTW2607E VDELETE error for '%s' rc;'%s'\" )\nt(2608,\"HTW2608E VDEFINE error for '%s' rc;'%s'\")\nt(2609,\"HTW2609E display error\")\nt(2610,\"HTW2610E file error, operation:'%s' key:'%s'\")\nt(2611,\"HTW2611E already ENQ'd the resource:'%s'\")\nt(2612,\"HTW2612E resource '%s' allocated to another user\")\nt(2613,\"HTW2613E error during '%s' function\")\nt(2614,\"HTW2614E %s\")\n\n#if 0\nt(2601,\"PPH2601E Invalid file mode for '%s' file, '%s' ignored\")\nt(2602,\"PPH2602E READ/WRITE open mode for '%s' ignored\")\nt(2603,\"PPH2603E TRUNC/EXCL option ignored for '%s'\")\nt(2604,\"PPH2604E Unable to open '%s' as '%s' file\")\nt(2605,\"PPH2605E Unable to create LBUFF for  '%s'\")\nt(2606,\"PPH2606E Unable to create RBUFF for  '%s'\")\n#endif\nt(2801,\"PPH2801E open error for the library\")\nt(2802,\"PPH2802E open error for the library directory\" )\nt(2803,\"PPH2803E member not found:'%s' ; return code:'%s'\")\nt(2804,\"PPH2804E file length missmatch RDF:'%s' AFPDS length:'%s' '%s'\")\nt(2805,\"PPH2805E file too long record:'%s'\")\nt(2806,\"PPH2806E error during a READ operation \" )\nt(2807,\"PPH2807E VDELETE error for '%s' rc;'%s'\" )\nt(2808,\"PPH2808E VDEFINE error for '%s' rc;'%s'\")\nt(2809,\"PPH2809E display error\")\nt(2810,\"PPH2810E file error, operation:'%s' key:'%s'\")\nt(2811,\"PPH2811E already ENQ'd the resource:'%s'\")\nt(2812,\"PPH2812E resource '%s' allocated to another user\")\nt(2813,\"PPH2813E error during '%s' function\")\nt(3001,\"PPH3001A Confirm request to delete '%s'\")\nt(3002,\"PPH3002E unable to get from :'%s' file :'<%s>%s.%s - request send error\")\nt(3003,\"PPH3003E unable to get from :'%s' file :'<%s>%s.%s - receive timeout\")\nt(3004,\"PPH3004I receiving file : '<%s>%s.%s'\")\nt(3005,\"PPH3005W no insert into the request queue\")\nt(3006,\"PPH3006I sending file : '<%s>%s.%s'\")\nt(3101,\"PPH3101A confirm to delete %s \")\nt(3102,\"PPH3102E name field empty\")\nt(3103,\"PPH3103E name already defined\")\nt(3201,\"PPH3201A Confirm request to delete '%s'\")\nt(3202,\"PPH3202E Input file '%s' open error\")\nt(3210,\"PPH3210E PPHCEXIT routine replied with ABORT for %s request\")\nt(3211,\"PPH3211I '%s' request %s opened '%s'\")\nt(3212,\"PPH3212I '%s' request %s processed by PPHCEXIT\")\n#if defined(CICS_MSG) == 1\nt(4000,\"<JobIdentification>\")\nt(4001,\" Jobname=%s\")\nt(4002,\" JobID=%s\")\nt(4003,\" UserID=%s\")\nt(4004,\" Programmer=%s\")\nt(4005,\" Room=%s\")\nt(4006,\" ProcStepName=%s\")\nt(4007,\" StepName=%s\")\nt(4008,\" DDName=%s\")\nt(4009,\" DatasetName=%s\")\nt(4010,\" Group=%s\")\nt(4011,\" GroupID1=%s\")\nt(4012,\" GroupID2=%s\")\nt(4013,\" DatasetId=%s\")\nt(4014,\" Device=%s\")\nt(4015,\" Version=%s %s\")\nt(4016,\" OutputProfile=%s\")\nt(4017,\" DocexecProfile=%s\")\nt(4018,\" RequestID=%s\")\nt(4019,\" TimeStemp=%s\")\nt(4920,\" Connection = %s %s\")\nt(4020,\"<JesParms>\")\nt(4021,\" %s=%s\")\nt(4022,\" Sysout=%s\")\nt(4023,\"<USERDATAParms>\")\nt(4031,\" %s=%s\")\nt(4032,\" USERDATA=%s=%s\")\nt(4040,\"<Data>\")\nt(4041,\" DataProfile=%s\")\nt(4042,\" DataMember=%s\")\nt(4043,\" DataExtension=%s\")\nt(4044,\" DataRecordCount=%s\")\nt(4045,\" DataSetSize in K bytes=%s\")\nt(4050,\"<Resource>\")\nt(4051,\" SendResource=%s\")\nt(4052,\" ResourceProfile=%s\")\nt(4062,\" ArchiveRecord=%s\")\nt(4063,\" TargetProfile=%s Member=%s Extension= %s RecordCount= %s\")\nt(4071,\"*Resource Name=%s Type=%s not found\")\nt(4080,\"<Control>\")\nt(4081,\" ControlProfile= %s\")\nt(4082,\" ControlMember=%s\")\nt(4083,\" ControlExtension=%s\")\nt(4084,\" ControlRecordCount=%s\")\nt(4101,\"PPH4101A Confirm request to delete %s USER\")\nt(4102,\"PPH4102E Unable to get the record:%s from the UDFILE\")\nt(4103,\"PPH4104E Already defined %s\")\nt(4104,\"PPH4104E Blank key not allowed\")\nt(4120,\" FON         =%s/%s/<%s>\")\nt(4121,\" CHS         =%s/%s/<%s>\")\nt(4122,\" CDP         =%s/%s/<%s>\")\nt(4123,\" OVL         =%s/%s/<%s>\")\nt(4124,\" FDF         =%s/%s/<%s>\")\nt(4125,\" PDF         =%s/%s/<%s>\")\nt(4126,\" PSG         =%s/%s/<%s>\")\nt(4127,\" DFD         =%s/%s/<%s>\")\nt(4128,\" DFT         =%s/%s/<%s>\")\nt(4129,\" DFA         =%s/%s/<%s>\")\nt(4132,\" RECFM       =%s\")\nt(4133,\" LRECL       =%s\")\nt(4134,\" CC          =%s\")\nt(4135,\" TRC         =%s\")\nt(4136,\" ASCII       =%s\")\nt(4137,\" FORMDEF     =%s/%s/%s.%s\")\nt(4138,\" PAGEDEF     =%s/%s/%s.%s\")\nt(4161,\" CHAR1       =%s\")\nt(4162,\" CHAR2       =%s\")\nt(4163,\" CHAR3       =%s\")\nt(4164,\" CHAR4       =%s\")\nt(4220,\" FON         =%s/<%s>\")\nt(4221,\" CHS         =%s/<%s>\")\nt(4222,\" CDP         =%s/<%s>\")\nt(4223,\" OVL         =%s/<%s>\")\nt(4224,\" FDF         =%s/<%s>\")\nt(4225,\" PDF         =%s/<%s>\")\nt(4226,\" PSG         =%s/<%s>\")\nt(4227,\" DFD         =%s/<%s>\")\nt(4228,\" DFT         =%s/<%s>\")\nt(4229,\" DFA         =%s/<%s>\")\nt(4237,\" FORMDEF     =%s/%s.%s\")\nt(4238,\" PAGEDEF     =%s/%s.%s\")\nt(4300,\" For PRTDEF=%s option sending definition from %s (%s)\")\nt(4301,\"<PrinterParms>\")\nt(4302,\" %s\")\nt(4999,\"<End>\")\nt(3407,\"Invalid document structure around page '%s' \")\nt(3408,\"The last record: %s %s %s %s %s \")\nt(5001,\"PPH5001E unable to get TD queue '%s'\")\nt(5002,\"PPH5002W %s unable to get partner profile'%s'\")\nt(5003,\"PPH5003E %s profile '%s' error - '%s'\")\nt(5004,\"PPH5004E %s profile '%s' error - '%s'\")\nt(5005,\"PPH5005E %s TP session allocation error for '%s' - '%s'\")\nt(5006,\"PPH5006E %s input open error for '%s'\")\nt(5007,\"PPH5007W %s unable to get DOCEXEC profile'%s'\")\nt(5008,\"PPH5008W %s unable to get OUTPUT profile'%s'\")\nt(5010,\"PPH5010E %s control file generate error '%s'\")\nt(5011,\"PPH5011E %s input error for '%s'\")\nt(5012,\"PPH5012E %s output error for '%s'\")\nt(5013,\"PPH5013I %s << %s \")\nt(5015,\"PPH5015E %s input empty '%s'\")\nt(5016,\"PPH5016I %s will not send control file to  '%s'\")\nt(5050,\"PPH5050I %s =  '%s'\")\nt(5060,\"PPH5060I %s request requeued\")\nt(5061,\"PPH5060E %s request lost\")\nt(5100,\"PPH5101I PPH manager terminating\")\nt(5200,\"PPH5200I PPHR ended \")\nt(5301,\"PPH5301E facility '%s' is not APPC - TCPIP capable\")\nt(5302,\"PPH5302E facility '%s' receive error, length '%s'\")\nt(5303,\"PPH5303E facility '%s' unexpected record type %s\")\nt(5304,\"PPH5304E facility '%s' TS QUEUE '%s' write error\")\nt(5340,\"PPH5340I facility '%s' >>>>>> '%s'\")\nt(5341,\"PPH5341I facility '%s' %s : %s\")\nt(5342,\"PPH5342I facility '%s' %s new status is %s\")\nt(5310,\"PPH5310I facility '%s' from partner '%s' data arrived into '%s' queue\")\nt(5311,\"PPH5311I facility '%s' received %s records, %s K bytes\")\nt(5320,\"PPH5320E facility '%s' received the following message: %s\")\nt(5400,\"PPH5400I PPHU will restart after every %s seconds\")\nt(5401,\"PPH5401I checking '%s' request\")\nt(5402,\"PPH5402I new status for '%s' is '%s'\")\nt(5403,\"PPH5403E '%s' request/document file update error for '%s'\")\nt(5404,\"PPH5404I '%s' request %s opened '%s'\")\nt(5405,\"PPH5405E '%s' request unable to get '%s' profile\")\nt(5406,\"PPH5406E PPHU already active\")\nt(5420,\"PPH5420I PPHU update transaction termination  status\")\nt(5421,\"PPH5421E status for '%s' '%s' invalid\")\nt(5422,\"PPH5422E internal error during store %s\")\nt(5425,\"PPH5425I %s partner ==========================\")\nt(5426,\"PPH5426I %8.8s : %s\")\nt(5430,\"PPH5430I PPHU update transaction terminating\")\nt(5440,\"PPH5440I request %s - in status :%s deleted\")\nt(5441,\"PPH5441E unable to delete %s - %s\")\nt(5450,\"PPH5450A serious error, check logs and reply with any character to continue\")\nt(5460,\"PPH5460I %s request requeued\")\nt(5461,\"PPH5461A PPHU quit requested, but there are %s active requests\")\nt(5500,\"PPH5500I PPHD document queue terminating\")\n#endif\n\n// Used id's :\n// 5500      AUTH\n// 5600      AUTHINF\n// 5700      MODULE\n//\nt(5500,\"AUT5500I ISIS Information Systems %s %s Compiled:%s\")\nt(5501,\"AUT5501E invalid argument '%s', it can be LIST or AUTH or INFO or?\")\nt(5502,\"AUT5502E invalid line\")\nt(5503,\"AUT5503I %s\")\nt(5504,\"AUT5504E invalid here the statement above\")\nt(5505,\"AUT5505E 'Customer' missing\")\nt(5506,\"AUT5506E 'Product' missing\")\nt(5507,\"AUT5507E 'Version' missing\")\nt(5508,\"AUT5508E FromDate only with EXPDATE\")\nt(5509,\"AUT5509E 'AuthKey' missing\")  //szm\nt(5520,\"AUT5520E 'DEFINE' error\")\nt(5521,\"AUT5521E unable to open 'DEFINE'file (%s) %s\")\nt(5522,\"AUT5522E invalid define '%s'\")\nt(5523,\"AUT5523E product feature for %s %s is missing\")\nt(5550,\" The ISISAUT program is the tool to authorize your ISIS products in your OS/390 enviroment\")\nt(5551,\" -----------------------------------------------------------------------------------------\")\nt(5552,\" To call the program specify the following DD statements in the JCL : \")\nt(5553,\" SYSLIB  - the load library contains the ISIS product to authorize\")\nt(5554,\" SYSPRINT - the message output\")\nt(5555,\" SYSIN    - the authorization deck from ISIS\")\nt(5601,\"AUT5601E invalid CPU id'%s' ( it should be 12 char long , vvppNNNNMMMM\")\nt(5602,\"AUT5602E keyword '%s' already defined, it will be ignored\")\nt(5610,\"AUT5610E you can authorize your product only after '%s'\")\nt(5622,\"AUT5622E invalid date format '%s', it should be in dd/mm/yyyy form\")\nt(5623,\"AUT5623E EXPDATE date '%s' is not higher as FROM '%s'\")\nt(5630,\"AUT5630E invalid key '%s'\")\nt(5631,\"AUT5631E invalid key '%s'\")\nt(5632,\"AUT5632E invalid key code '%s'\")\nt(5633,\"AUT5633E unable to open GEN file (%s) %s\")\nt(5634,\"AUT5634E no CPUID\")\nt(5640,\"AUT5640E invalid feature '%s'\")\nt(5650,\"AUT5650E invalid product, version %s - %s\")\nt(5670,\"AUT5670E invalid authKey '%s'\")\nt(5671,\"AUT5671E unable to authorize '%s' module\")\nt(5672,\"AUT5672E error during '%s' module authorization\")\nt(5673,\"AUT5673I no authorized CPUID\")\nt(5674,\"AUT5674I no Option\")\nt(5675,\"AUT5675I no Expiration\")\nt(5680,\"AUT5680I Product=%s Version= %s\")\nt(5681,\"AUT5681I Feature=%s Module=%s\")\nt(5682,\"AUT5682W unable to find '%s' module\")\nt(5683,\"AUT5683W unable to get authorization info for '%s' module\")\nt(5684,\"AUT5684I   CPUID      = %s\")\nt(5685,\"AUT5685I   Expiration = %s\")\nt(5686,\"AUT5686I   Option     = %s\")\nt(5689,\"AUT6889I     -----------------------\")\nt(5690,\"ISIS Information Systems %s %s %s = %s\")\nt(5691,\"Customer=%s\")\nt(5692,\"Product=%s\")\nt(5693,\"Version=%s\")\nt(5694,\"Option=%s\")\nt(5695,\"FeatureModule=%s\")\nt(5696,\"BaseModule=%s\")\nt(5697,\"CPUID=%s\")\nt(5698,\"Expire=%s\")\nt(5699,\"Period=%s days\")\nt(5700,\"ValidFrom=%s\")\nt(5701,\"AuthKey=%s\")\nt(5710,\"AUT5710E read error for the '%s' module\")\nt(5711,\"AUT5711W in SYSLIB unable to find '%s' module\")\nt(5712,\"AUT5712E authorization error for '%s' module\")\nt(5713,\"AUT5713E You can't change the 'PERIOD' for %s\")\nt(5714,\"AUT5714W in SYSLIB unable to find '%s' '%s' CSECT\")\nt(5715,\"AUT5715W in SYSLIB unable to load '%s' '%s' CSECT  \u00d6n\u00d6\n   IEWBIND return:%s reason:%s\")\nt(5716,\"AUT5716W in SYSLIB unable to authorise %s' '%s' CSECT  \u00d6n\u00d6\n   IEWBIND return:%s reason:%s\")\nt(5717,\"AUT5717E error in ISITMGD query  for %s'  \u00d6n\u00d6\n   ISITMGD return:%s reason:%s\")\nt(5718,\"AUT5718E error in DESERV get_names   %s'  \u00d6n\u00d6\n   DESERV  return:%s reason:%s \")\nt(5719,\"AUT5719W error occured during BSAM acces for %s(%s) in %s operation\u00d6n     \u00d6\n    return:%s(R15) reason:%s(R0) \")\nt(5720,\"AUT5720E unable to update %s, opened for INPUT only\")\nt(5799,\"AUT5799E authorization error, Please check your JCL and/or send this problem report to ISIS\")\nt(5900,\"INF5900I Informations about the running environment:\u00d6n\u00d6n\")\nt(5901,\"INF5901I Jobname:%s JobID:%s Program:%s\u00d6n\")\nt(5902,\"INF5902I CpuNumber:%s\u00d6n\")\nt(5903,\"INF5903I error during obtain system info, CSRSI return code%s\u00d6n\")\nt(5904,\"INF5904I CPU manufacturer:%s type:%s model:%s\u00d6n\")\nt(5905,\"INF5905I Operating system:%s %s %s %s %s\u00d6n\")\nt(5906,\"INF5906I Requested region size:%s Mb\u00d6n\")\nt(5907,\"INF5907I Under 16Mb region limit:%10s Mb, region high value:%10s Mb\u00d6n\")\nt(5908,\"INF5908I Over  16Mb region limit:%10s Mb, region high value:%10s Mb\u00d6n\")\nt(5910,\"INF5910I Ths USS limits:\u00d6n\u00d6n\")\nt(5911,\"INF5911I MaxProcSystem: %12s  MaxProcUser:    %12s  MaxUids:%12s\u00d6n\")\nt(5912,\"INF5912I MaxFileProc:   %12s  MaxPtysr:       %12s\u00d6n\")\nt(5913,\"INF5913I MaxThreads:    %12s  MaxThreadTasks: %12s\u00d6n\")\nt(5914,\"INF5914I MaxMmaparea:   %12s  MaxRtys:        %12s\u00d6n\")\nt(5915,\"INF5915I MaxFilesize:   %12s  MaxCoresize:    %12s\u00d6n\")\nt(5916,\"INF5916I MaxAssize:     %12s  MaxCputime:     %12s\u00d6n\")\nt(5917,\"INF5917I MaxSharepages: %12s  MaxQueuidsigs:  %12s\u00d6n\")\nt(5918,\"INF5918I IPC MessageQqueue Ids:%10s Qbytes:%10s Qnum:  %10s\")\nt(5919,\"INF5919I IPC SharedMemeory Ids:%10s Spages:%10s Mpages:%10s Nsegs:%10s\")\nt(5920,\"INF5920I IPC Semaphores    Ids:%10s Nsems: %10s Nops:  %10s\")\nt(5930,\"INF5930I Sending '%s' command to the USS shell\")\nt(5931,\"INF5931I : %s\")\nt(5932,\"INF5932E shell call error %s\")\nt(5934,\"INF5934I calling LE dump with %s options\")\nt(5935,\"INF5935E LE dump error, %s\")\nt(5940,\"INF5940I the used LNKLST is %s, it has %s entries\")\nt(5941,\"INF5941I %s  %s     %s\")\nt(5970,\"INF5970I >>>>>>>>>>>>>>>>>>>> System Information <<<<<<<<<<<<<<<<<<<<\")\nt(5971,\"INF5971I >>>>>>>>>>>>>>>>>>>> Library Information <<<<<<<<<<<<<<<<<<<\")\nt(5972,\"INF5972I >>>>>>>>>>>>>>>>>>>> Module Information <<<<<<<<<<<<<<<<<<<<\")\nt(5973,\"INF5973I >>>>>>>>>>>>>>>>>>>> USS Informations <<<<<<<<<<<<<<<<<<<<<<\")\nt(5974,\"INF5974I >>>>>>>>>>>>>>>>>>>> Actual APF List  <<<<<<<<<<<<<<<<<<<<<<\")\nt(5979,\"INF5970I >>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\")\n\nt(5980,\"INF5980E error during %s access, return:%s reason:%s\u00d6n\u00d6n\")\nt(5981,\"INF5981I    \u00d6t\u00d6t%s\")\nt(5982,\"INF5982I    \u00d6t\u00d6t%s \u00d6t%s\")\nt(5983,\"INF5983I    \u00d6t\u00d6t%s \u00d6t%s \u00d6t%s\")\nt(5984,\"INF5984I    \u00d6t\u00d6t%s \u00d6t%s \u00d6t%s \u00d6t%s\")\nt(5985,\"INF5985I    \u00d6t\u00d6t%s \u00d6t%s \u00d6t%s \u00d6t%s \u00d6t%s\")\nt(5986,\"INF5986I    \u00d6t\u00d6t%s \u00d6t%s \u00d6t%s \u00d6t%s \u00d6t%s \u00d6t%s\")\nt(5990,\"INF5990I====================================================================\u00d6n\u00d6n\")\nt(5991,\"INF5991I %s\")\nt(5992,\"INF5992I %s \u00d6t%s\")\nt(5993,\"INF5993I %s \u00d6t%s \u00d6t%s\")\nt(5994,\"INF5994I %s \u00d6t%s \u00d6t%s \u00d6t%s\")\nt(5995,\"INF5995I %s \u00d6t%s \u00d6t%s \u00d6t%s \u00d6t%s\")\nt(5996,\"INF5996I %s \u00d6t%s \u00d6t%s \u00d6t%s \u00d6t%s \u00d6t%s\")\n\nt(5998,\"INF5991E invalid option:%s\")\nt(5999,\"INF5999I ISIS Information Systems %s %s Compiled:%s\")\nt(6000,\"ARC6000I ISIS Information Systems %s %s Compiled:%s\")\nt(6001,\"ARC6001E unable to open %s \u00d6n %s\")\nt(6002,\"ARC6002P %s\")\nt(6003,\"ARC6003E invalid paramter %s\")\nt(6004,\"ARC6004E DYNALLOC error for %44.44s, rc:%s reason:%s\")\nt(6005,\"ARC6005I dataset %44.44s migrated as %44.44s already on %6.6s volume\")\nt(6006,\"ARC6006E unable to open %s \u00d6n %s\")\nt(6007,\"ARC6007W read %s blocks, but it should be %s \")\nt(6008,\"ARC6008I restored %44.44s(%44.44s) to %6.6s (%s blocks)\")\nt(6009,\"ARC6009E we can't restore %44.44s, as %s and %s difference greater as delta\")\nt(6010,\"ARC6010E unable to get file status for %s \u00d6n %s\")\nt(6011,\"ARC6011E %s read error or empty file, rc:%s\u00d6n %s\")\nt(6020,\"ARC6020E ML2 volume list '%s' is invalid\")\nt(6021,\"ARC6021E unable to process %s volume\")\nt(6022,\"ARC6022E VTOC CVAF error , retrived volser:%s, requested:%s\")\nt(6023,\"ARC6023E unable to allocate %s on %s\")\nt(6024,\"ARC6024E write error for %s\u00d6n %s\")\nt(6025,\"ARC6025I copied %s to %s , %s 2K blocks\")\nt(6026,\"ARC6026E remove/delete error for %s\u00d6n %s\u00d6n\")\nt(6027,\"ARC6027I removed %s\")\nt(6028,\"ARC6028I no dataset found with %s prefix on %s volume\")\nt(6029,\"ARC6029I migrating %s from %s volume\")\nt(6030,\"ARC6030I restoring %44.44s\")\nt(6031,\"ARC6031I migrating %s from ML1 to ML2 as %s, (not used since %s days)\")\nt(6050,\"ARC6050E unable to open MCDS:%s(%s)\")\nt(6051,\"ARC6051I read %s MCDS valid ML2 migration records\")\nt(6052,\"ARC6052I MCSD dsn:%s RKP:%s keylen:%s\")\nt(6053,\"ARC6053E path:%s invalid(%s)\")\nt(6054,\"ARC6054I Total MCDS record:%s in ML2:%s Removed:%s\")\nt(6055,\"ARC6055I ML2 path:%s\")\n#if defined(CICS_MSG) == 1\nt(5801,\"PPH5801E TCP/IP function '%s' error, code : %s\")\nt(5802,\"PPH5802E listener format failure , %s \")\nt(5810,\"PPH5810I PPHN listener transaction is listening on port %s - %s\")\nt(5812,\"PPH5812I Starting '%s' - '%s'\")\nt(5814,\"PPH5814I listener socket call trace , about '%s' function\")\nt(5820,\"PPH5820I Listener transaction starting\")\nt(5821,\"PPH5821I Listener transaction terminating\")\nt(5901,\"PPH5901E TCPACCESS function '%s' error, code : %s\")\nt(5902,\"PPH5902E listener format failure , %s \")\nt(5910,\"PPH5910I PPHA listener transaction is listening on port %s - %s\")\nt(5912,\"PPH5912I Starting '%s' - '%s'\")\nt(5914,\"PPH5914I listener socket call trace , about '%s' function\")\nt(5920,\"PPH5920I TCPACCESS Listener transaction starting\")\nt(5921,\"PPH5921I TCPACCESS Listener transaction terminating\")\nt(6501,\"PPH6501A Confirm %s request \")\nt(6502,\"PPH6502E Unable to get %s bytes\")\nt(6591,\"PPH6591T %s\")\nt(6592,\"PPH6592T %s %s\")\nt(6593,\"PPH6593T %s %s %s\")\nt(6594,\"PPH6594T %s %s %s %s\")\nt(6595,\"PPH6595T %s %s %s %s %s\")\nt(6596,\"PPH6596T %s %s %s %s %s %s\")\nt(6597,\"PPH6597T %s %s %s %s %s %s %s\")\nt(6598,\"PPH6598T %s %s %s %s %s %s %s %s\")\nt(6599,\"PPH6599T %s %s %s %s %s %s %s %s %s\")\nt(6701,\"PPH6701E Invalid documnet name\")\nt(6702,\"PPH6702E already defined '%s'\")\nt(6703,\"PPH6703E Unable to open file '%s'\")\nt(6704,\"PPH6704A Confirm request to delete '%s'\")\nt(6705,\"PPH6705I No more page\")\nt(6706,\"PPH6706I Top of data\")\nt(6707,\"PPH6707E '%s' error at '%s' errorno: %s\")\nt(6708,\"PPH6708E '%s' error at page '%s'\")\n#endif\n//\n// mphttp 7700\n//\nt(7701,\"MPTE7701I waiting for %s %s\")\nt(7702,\"MPTE7702E error %s %s %s\")\nt(7703,\"MPTE7703I %s times in %s  sec\")\nt(7704,\"MPTE7704I Average:%s sec\")\nt(7705,\"MPTE7705I send:%s receive:%s\")\n\n//\n// mptester 7800\n//\nt(7801,\"MPTE7801I %s\")\n\n#if defined(OMS_MSG) == 1\nt(8200,\"MIG8200I OMS Migrate Utility V1R0M0 %s         ISIS Information Systems\")\nt(8201,\"MIG8201E unable to connect to OMS via '%s' shared memory\")\nt(8202,\"MIG8202E unable to open '%s' file\")\nt(8203,\"MIG8203E unable to get VSAM definition folder '%s'\")\nt(8204,\"MIG8204E unable to get migraetion start object '%s'\")\nt(8205,\"MIG8205E error during generation of '%s' COPYBOOK\")\nt(8206,\"MIG8206E error during object migrate '%s'\")\nt(8210,\"MIG8210I Option '%s' = '%s'\")\nt(8211,\"MIG8211E Option '%s' = '%s' error\")\nt(8212,\"MIG8212I Flag   '%s' set\")\nt(8213,\"MIG8213E invalid option'%s'\")\nt(8214,\"MIG8214I /Copybook option specified so we generate COPYBOOK into '%s'\")\nt(8215,\"MIG8215I /Rebuild option set so we make an unconditional migrate\")\nt(8216,\"MIG8216I /Dfafile option set so we generate DFA file(s) in '%s'\")\nt(8217,\"MIG8217I /Datafile option set so we generate test DATA file(s) in '%s'\")\n\nt(8221,\"MIG8221I miration ending with return code 0\")\nt(8230,\"MIG8230E serious error during %s record creation\")\nt(8231,\"MIG8231E serious error during %s record creation\")\nt(8299,\"MIG8299I Migration utility starting at %s\")\n\nt(8221,\"MIG8221I miration ending with return code %s\")\nt(8222,\"MIG8222I Generation statistic:\")\nt(8223,\"MIG8223I %s record(s) from %s\")\nt(8224,\"MIG8224E runtime error:%s\")\nt(8301,\"MIG8301E COBOL syntax error '%s' about %s code %s\")\nt(8302,\"MIG8302W for '%s' data length (%s) is larger as field length(%s)\")\nt(8303,\"MIG8303E structure error, '%s' is an aggregate without data field\")\nt(8304,\"MIG8304E invalid attribute type for '%s' '%s' check VSAM def\")\nt(8310,\"Field:%s in %s length from %s offset\")\nt(8320,\"MIG8320E Internal error, unable to store %s record\")\nt(8321,\"MIG8321E Write error for %s , recordlength %s , recordcount %s\")\nt(8301,\"Field:%s in %s length from %s offset\")\nt(8328,\"----------------------------------\")\nt(8329,\"Record:%s\")\nt(8330,\"Copybook generated at %s\")\nt(8401,\"MIG8401I Attribute '%s' refrences:\")\nt(8402,\"MIG8402I '%s' record as '%s' field\")\nt(8403,\"MIG8403I Object '%s'refrences:\")\n#else\nt(8000,\"SJB8000I JOBSEND utility %s %s Isis Information Systems Ver:%s Comp:%s\")\nt(8001,\"SJB8001I JOBSEND ending with rc:%s\")\nt(8010,\"SJB8010E unable to open %s (%s)\")\nt(8011,\"SJB8011E invalid keyword:%s\")\nt(8012,\"SJB8012I %s\")\nt(8013,\"SJB8013E I/O error during %s (%s)\")\nt(8014,\"SJB8014E error during JESJCL parse\")\nt(8015,\"SJB8015E error during DUMP/RESTORE\")\nt(8020,\"SJB8020I dumping Job:%s Jobid:%s Step:%s ProcStep:%s\")\nt(8021,\"SJB8021E error during close:%s (%s)\")\nt(8022,\"SJB8022I closeing %s DUMP file\")\nt(8030,\"SJB8030I skipping TERSE\")\nt(8031,\"SJB8031I skipping UNTERSE\")\nt(8032,\"SJB8032I skipping DUMP/RESTORE\")\n\n\nt(8100,\"SJB8100E nothing to dump/restore\")\nt(8110,\"SJB8110I start to process:%s\")\nt(8111,\"SJB8111I end of process:%s (%s Kbytes) rc:%s\")\nt(8112,\"SJB8112I %s dataset(s) marked for restore\")\nt(8113,\"SJB8113I %s dataset(s) marked for dump\")\nt(8120,\"SJB8120I %s\")\nt(8122,\"SJB8122I %s marked for restore\")\nt(8123,\"SJB81223 %s marked for dump\")\n\nt(8200,\"SJB8200E SAPI error:%s (at %s %s)\")\nt(8201,\"SJB8201W SAPI message:%s\")\nt(8202,\"SJB8202I UserId:%s Jobname:%s JobId:%s\")\nt(8203,\"SJB8203I using %44.44s for JESJCLIN ddn:%s\")\nt(8204,\"SJB8204E allocation error for JESJCLIN dsn:%44.44s rc:%s\")\nt(8205,\"SJB8205I Step:%8.8s DDname:%8.8s in SYSOUT class:%s Open %8.8s\")\nt(8206,\"SJB8206I %s\")\nt(8207,\"SJB8207I job submitted as %s\")\nt(8208,\"SJB8208E unable to get JESJCL\")\nt(8210,\"SJB8210I %s\")\n\nt(8300,\"SJB8300E unable to load TERSE pgm:%s\")\nt(8301,\"SJB8301I starting TERSE Pgm:%s, Option:%s Sysut1:%s Sysut2:%s\")\nt(8302,\"SJB8302I ending TERSE pgm:%s with rc:%s\")\n\nt(8400,\"SJB8400I %s\")\nt(8401,\"SJB8401E invalid content type above\")\nt(8402,\"SJB4002I restoring Job:%s Jobid:%s Step:%s ProcStep:%s\")\nt(8403,\"SJB8203I JES: %s %s copied %s record(s)\")\nt(8404,\"SJB8204I dataset:%s marked for RESTORE, DDnames:%s\")\nt(8405,\"SJB8405I restore from:%s\")\nt(8406,\"SJB8406I JCL in:%s\")\nt(8407,\"SJB8407I JESJCL lines in:%s\")\nt(8408,\"SJB8408W nothing to restore\")\n\n#endif\nt(9004,\"PPH9004E FILESYSTEM error for '%s' '%s'\")\nt(9001,\"HTW9001E the program '%s' called from '%s' ended with %s return code\")\nt(9002,\"HTW9002E the received line length %s is too long\")\nt(9003,\"HTW9003E invalid HTTP header record '%s'\")\nt(9004,\"HTW9004E the request header format is invalid '%s'\")\nt(9005,\"HTW9005E unable to load the '%s' program\")\nt(9006,\"HTW9006E unable to open '%s' file for '%s' HTML\")\nt(9007,\"HTW9007E unable to open cache-list '%s'\")\nt(9008,\"HTW9008E internal variable access error '%s'\")\nt(9009,\"HTW9009E the program '%s' called from '%s' is ABENDED\")\nt(9010,\"HTW9010E service unavailable '%s'\")\nt(9011,\"HTW9011E bad request for '%s'\")\nt(9012,\"HTW9012E unable to processs '%s' request\")\nt(9013,\"HTW9013E requested URL '%s' is not in the access list\")\nt(9019,\"HTW9019E TIMEOUT for the program '%s' called from '%s'\")\nt(9020,\"HTW9020E invalid query '%s'\")\nt(9021,\"HTW9021E error from DB/2:'%s'\")\nt(9022,\"HTW9022E nothing selected\")\nt(9024,\"HTW9024E nothing selected\")\nt(9025,\"HTW9025E invalid skeleton '%s'\")\nt(9030,\"HTW9030E error during 'PUT' process for '%s'\")\nt(9031,\"HTW9031E error during open in 'PUT' process for '%s'\")\nt(9032,\"HTW9032I stored '%s'\")\nt(9040,\"HTW9040E session abort in %s function\")\nt(9050,\"HTW9050E invalid multpart/form-data format %s\")\nt(9051,\"HTW9051E invalid entry in multipart/form-data %s\")\nt(9052,\"HTW9052E invalid content type:%s\")\nt(9053,\"HTW9053E boundary missing\")\nt(9054,\"HTW9054E invalid AFP input data\")\nt(9091,\" %s\")\nt(9092,\" %s %s\")\nt(9093,\" %s %s %s\")\nt(9120,\"HTW9120E invalid URL entry '%s' in '%s' URL\")\nt(9121,\"HTW9121E logic error for '%s' in '%s' URL\")\nt(9122,\"HTW9122E unable to open '%s'\")\nt(9123,\"HTW9123E unable to get '%s' skeleton HTML\")\nt(9124,\"HTW9124E unable to get'%s' directory\")\nt(9125,\"HTW9125E unable toget '%s' from catalog\")\nt(9126,\"HTW9126E invalid URL '%s'\")\nt(9127,\"HTW9127W directory access not allowed for '%s'\")\n//*\n//* TSO 9400\n//*\nt(9401,\n\"DSS9401I start '%s' request for '%s' - '%s'\")\nt(9402,\n\"DSS9402I ended with %s - %s return code\")\nt(9403,\n\"DSS9403W Warning '%s' completed with %s secondary rc for '%s' - '%s'\")\nt(9404,\n\"DSS9404E Error '%s' completed with %s secondary rc for '%s' - '%s'\")\nt(9405,\n\"DSS9405E Secondary error message from OAM:'%s'\")\nt(9406,\n\"DSS9406E Buffer are %s * %s is full\")\n\n//*\n//* CICS FEPI and EXCI 9500\n//*\nt(9500,\"TS09500I ISIS CICS FEPI interface %s %s %s\")\nt(9501,\"TS09501I try to allocate a session with '%s' pool, into '%s' target\")\nt(9510,\"TSO9510E Mvs Interface Error : '%s' '%s' '%s'\")\nt(9520,\"TSO9520E CICS FEPI Interface Error\")\nt(9521,\"TSO9521E CICS FEPI Interface Error : '%s'\")\nt(9522,\"TSO9523E CICS FEPI Interface Error : '%s' '%s'\")\nt(9523,\"TSO9523E CICS FEPI Interface Error : '%s' '%s' '%s'\")\nt(9524,\"TSO9524E CICS FEPI Interface Error : '%s' '%s' '%s' '%s'\")\nt(9525,\"TSO9525E CICS FEPI Interface Error : '%s' '%s' '%s' '%s' '%s'\")\nt(9550,\"TS09550I ISIS CICS EXCI interface %s %s %s\")\nt(9551,\"TS09551E unable to get COMMAREA\")\nt(9552,\"TS09552E unable to get ISIS_EXCI_PROGRAMM\")\n\nt(9560,\"TSO9560I ISIS CICS EXCI interface %s %s %s\")\nt(9561,\"TSO9561I called from %s program, input:%s output:%s\")\nt(9562,\"TSO9562E variable processing error from:%s\")\nt(9563,\"TSO9563Eunable to open:'%s'\")\nt(9570,\"TSO9570E program:%s for user:%s in transaction:%s\")\nt(9571,\"TSO9571E resp:%s resp2:%s abendcode:%s\")\nt(9581,\"TSO9581E EXCI error in %s call, resp:%s resp2:%s, subreason:%s\")\nt(9582,\"TSO9582E message from CICS:'%s'\")\nt(9583,\"TSO9583E unable to get %s storage\")\nt(9590,\"TSO9590T\")\nt(9591,\"TSO9591T %s \")\nt(9592,\"TSO9592T %s %s\")\nt(9593,\"TSO9593T %s %s %s\")\nt(9594,\"TSO9594T %s %s %s %s\")\nt(9595,\"TSO9595T %s %s %s %s %s\")\nt(9596,\"TSO9595T %s %s %s %s %s %s\")\nt(9597,\"TSO9595T %s %s %s %s %s %s %s\")\n\n//TODO: KV20030627 check if TSO or OMS\n/*\nt(9500,\"OMS9500T\")\nt(9501,\"OMS9501T %s \")\nt(9502,\"OMS9502T %s %s\")\nt(9503,\"OMS9503T %s %s %s\")\nt(9504,\"OMS9504T %s %s %s %s\")\nt(9505,\"OMS9505T %s %s %s %s %s\")\nt(9506,\"OMS9505T %s %s %s %s %s %s\")\nt(9507,\"OMS9505T %s %s %s %s %s %s %s\")\nt(9510,\"OMS9510E Mvs Interface Error : '%s' '%s' '%s'\")\nt(9520,\"OMS9520E OMS CICS Interface Error\")\nt(9521,\"OMS9521E OMS CICS Interface Error : '%s'\")\nt(9522,\"OMS9523E OMS CICS Interface Error : '%s' '%s'\")\nt(9523,\"OMS9523E OMS CICS Interface Error : '%s' '%s' '%s'\")\nt(9524,\"OMS9524E OMS CICS Interface Error : '%s' '%s' '%s' '%s'\")\nt(9525,\"OMS9525E OMS CICS Interface Error : '%s' '%s' '%s' '%s' '%s'\")\n*/\n//\n// WSSLINI 9600\n//\nt(9601,\" SSL init %s = '%s'\")\nt(9602,\" SSL init %s = %s\")\nt(9603,\" SSL init error, rc: %s(%s) errno:%s(%s)\")\n//\n// WSSL 9700\n//\nt(9701,\" secure socket init  %s = '%s'\")\nt(9702,\" Client Cerificate  %s = %s\")\nt(9703,\" error during secure socket init: %s(%s) errno:%s(%s)\")\nt(9704,\" %s error, rc: %s(%s) errno:%s(%s)\")\nt(9705,\" Client Certificate Error\")\nt(9706,\" unable to proces '%s'\")\nt(9707,\" RACF %s %s - %s %s(%s)\")\nt(9708,\" RACF %s %s(%s)\")\nt(9709,\" unable to find a match for the client certificate\")\nt(9720,\" socket timeout (%s sec) for %s\")\nt(9721,\" socket select error %s(%s)\")\n//\n// RARCSQL 9800 //ZA030519\n//\nt(9801,\"VIA9801E DB2 CONNECT error %s reason code %s\")\nt(9802,\"VIA9802E DB2 DISCONNECT error %s reason code %s\")\nt(9804,\"VIA9804E SQL ERROR: %s\")\nt(9805,\"VIA9805W SQL WARNING: %s\")\nt(9806,\"VIA9804E SQL NOTFOUND: %s\")\nt(9807,\"VIA9807E unable to get SQL error messages : %s\")\nt(9808,\"VIA9808E SQL : %s\")\nt(9811,\"VIA9811E DB2 OPEN error %s reason code %s\")\nt(9812,\"VIA9812E DB2 CLOSE error %s reason code %s\")\nt(9821,\"VIA9821E DB2 RRS %s error %s reason code %s\")\n//------------------------------------------------------------------------------------------\n//------------------------------------------------------------------------------------------\n//------------------------------------------------------------------------------------------\nt(10000+1,\"DSS0001E unable to allocate '%s' bytes\")\nt(10000+2,\"DSS0002E open error for '%s' in '%s' type, '%s' mode \u00d6n %s\")\nt(10000+3,\"DSS0003E error in '%s' function, errorcode:'%s'\")\nt(10000+12,\"DSS0012E open error for '%s',in '%s' mode \u00d6n %s\")\nt(10000+13,\"DSS0013I opening '%s'\")\nt(10000+100,\"DSS0100I DSS program starts\")\nt(10000+101,\"DSS0101I trace: '%s'\")\nt(10000+102,\"DSS0102I trace: '%s' '%s'\")\nt(10000+103,\"DSS0103I trace: '%s' '%s' '%s'\")\nt(10000+104,\"DSS0104I trace: '%s' '%s' '%s' '%s'\")\nt(10000+105,\"DSS0105I trace: '%s' '%s' '%s' '%s' '%s'\")\nt(10000+110,\"DSS0110E unable to open:'%s'\")\nt(10000+111,\"DSS0111E serious error above, execution terminating\")\nt(10000+112,\"DSS0112I %s\")\nt(10000+113,\"DSS0113I including from :'%s'\")\nt(10000+114,\"DSS0114I starting DUMP function\")\nt(10000+115,\"DSS0115I starting RESTORE function\")\nt(10000+116,\"DSS0116I date limit is %s (%s)\")\nt(10000+117,\"DSS0117W nothing selected to restore\")\nt(10000+118,\"DSS0118E not all the dataset's are online, please restore the datasets and try again\")\nt(10000+119,\"DSS0119I DSS program ending with %s return code\")\nt(10000+120,\"DSS0120E unable to open:'%s' , reson:'%s'\")\nt(10000+121,\"DSS0121E invalid element in the Dynamic Sql '%s'\")\nt(10000+122,\"DSS0122I we will use '%s' Sql\")\nt(10000+123,\"DSS0123I the generated Sql '%s'\")\nt(10000+124,\"DSS0124I for restore selected '%s'\")\nt(10000+125,\"DSS0125I for restore NOT selected '%s'\")\nt(10000+126,\"DSS0126I Try to restore from: '%s'\")\nt(10000+130,\"DSS0130I DSS/OMVS dump restore version:%s compiled:%s\")\nt(10000+201,\"DSS0201E the error above prevents continuations\")\nt(10000+202,\"DSS0202E abnormal termination\")\nt(10000+301,\"DSS0301E SUBTASK error, MVS function '%s' returned with rc:%s\")\nt(10000+302,\"DSS0302E SUBTASK error, unable to load '%s\")\nt(10000+400,\"DSS0400I job: %s(%s) in %s program\")\nt(10000+1000,\"DSS1000I DSS program connects to '%s' subsystem with '%s' plan, TCB: '%s'\")\nt(10000+1001,\"DSS1001E Sql error during '%s' \u00d6n SQLCODE:'%s' '%s'\")\nt(10000+1002,\"DSS1002E error during insert for %s\")\nt(10000+1003,\"DSS1003I working without DB2\")\nt(10000+3900,\"DSS3900I %s(%s) = '%s'\")\nt(10000+3901,\"DSS3901E undefined index for '%s' '%s'\")\nt(10000+3902,\"DSS3902E unable to open '%s' file\")\nt(10000+3903,\"DSS3903E undefined keyword '%s'\")\nt(10000+3904,\"DSS3904E too many values for '%s'  '%s'\")\nt(10000+3910,\"DSS3910I %s< %s >  =  '%s'\")\nt(10000+3911,\"DSS3911I                 = '%s'\")\nt(10000+9401,\n\"DSS9401I start '%s' request for '%s' - '%s'\")\nt(10000+9402,\n\"DSS9402I ended with %s - %s return code\")\nt(10000+9403,\n\"DSS9403W Warning '%s' completed with %s secondary rc for '%s' - '%s'\")\nt(10000+9404,\n\"DSS9404E Error '%s' completed with %s secondary rc for '%s' - '%s'\")\nt(10000+9405,\n\"DSS9405E Secondary error message from OAM:'%s'\")\nt(10000+9406,\n\"DSS9406E Buffer are %s * %s is full\")\nt(10000+9500,\"DSS9500I Visual Info - Archive utilty Version:%s Compiled:%s\")\nt(10000+9503,\"DSS9503I ending with return code :%s\")\nt(10000+9504,\"DSS9504E ending withh error code :%s\")\nt(10000+9601,\"DSS9601E unable to open '%s' file\")\nt(10000+9602,\"DSS9602E unable to get buffer for '%s' file\")\nt(10000+9603,\"DSS9603I closing file '%s' , read %s records\")\nt(10000+9611,\"DSS9611E not an AFPDS record in file '%s'-  about %s record\")\nt(10000+9612,\"DSS9612E AFPDS record length invalid in file '%s' - about %s record\")\nt(10000+9613,\"DSS9613E invalid record sequence %s - %s\")\nt(10000+9614,\"DSS9614E invalid record type %s\")\nt(10000+9615,\"DSS9615E invalid triplet in a IEL record %s -  about %s record\")\nt(10000+9616,\"DSS9616E invalid FQN triplet in a IEL record %s -  about %s record\")\nt(10000+9620,\"DSS9620E no Index parameter defined\")\nt(10000+9621,\"DSS9621E attribute name '%s' is not definded as an index\")\nt(10000+9630,\"DSS9630E missmatch beetwen the actual and requested object %s - %s , %s -%s\")\nt(10000+9650,\"DSS9650I object '%s' stored by OAM in %s size\")\nt(10000+9651,\"DSS9651I object '%s' inserted with the following attributes.\")\nt(10000+9652,\"DSS9652I '%s' = '%s'\")\nt(10000+9654,\"DSS9654I from %s page groups %s succesfully commited\")\nt(10000+9701,\"DSS9701E DB2 CONNECT error %s reason code %s\")\nt(10000+9702,\"DSS9702E DB2 DISCONNECT error %s reason code %s\")\nt(10000+9704,\"DSS9704E SQL ERROR: %s\")\nt(10000+9705,\"DSS9705W SQL WARNING: %s\")\nt(10000+9706,\"DSS9704E SQL NOTFOUND: %s\")\nt(10000+9707,\"DSS9707E unable to get SQL error messages : %s\")\nt(10000+9708,\"DSS9708E SQL : %s\")\nt(10000+9709,\"DSS9709E DB2 problem , %s occured, check DB2\")//szm\nt(10000+9711,\"DSS9711E DB2 OPEN error %s reason code %s\")\nt(10000+9712,\"DSS9712E DB2 CLOSE error %s reason code %s\")\nt(10000+9801,\"DSS9801E DB2 CONNECT error %s reason code %s\")\nt(10000+9802,\"DSS9802E DB2 DISCONNECT error %s reason code %s\")\nt(10000+9804,\"DSS9804E SQL ERROR: %s\")\nt(10000+9805,\"DSS9805W SQL WARNING: %s\")\nt(10000+9806,\"DSS9804E SQL NOTFOUND: %s\")\nt(10000+9807,\"DSS9807E unable to get SQL error messages : %s\")\nt(10000+9808,\"DSS9808E SQL : %s\")\nt(10000+9811,\"DSS9811E DB2 OPEN error %s reason code %s\")\nt(10000+9812,\"DSS9812E DB2 CLOSE error %s reason code %s\")\nt(10000+9821,\"DSS9821E DB2 RRS %s error %s reason code %s\")\nt(10000+9999,\"DSS9999E ABORT(U1210) due to an error above\")\n\n/* -------------- last line, do not delete it| -------------- */\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MVSBASE": {"ttr": 2417, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/mvsbase.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\n#ifndef _MVSBASE\n#define _MVSBASE\n#include \"merror.hpp\"\n#include \"dsnameut.h\" //KV20060404 genOpenName moved to dsnameut.h file to make it callable from C programs\n\n#ifndef  ISIS_PF_HOST\n    //szm0050403 change all STRING to mvsSTRING in mvs directory\n    #define INCL_DOSMEMMGR\n    #ifdef __OS2__  //HL what #ifndef __MSDOS__\n        #include <os2def.h>\n        #ifndef far\n            #define far _far16\n        #endif\n    #endif\n\n    #ifndef ISIS_PF_MU\n        #include <wtypes.h>\n    #endif\n    #ifndef __builtin\n        #define __builtin\n    #endif\n    #ifndef __ref\n        #define __ref\n    #endif\n#else\n#endif\n\n#include <stdlib.h>\n#if defined(OWN_STDIO) == 1\n#include \"stdio.hpp\"\n#else\n#include <assert.h>\n#endif\n\n#ifndef DSNAME_PREFIX\n  #define DSNAME_PREFIX  \"\"\n  #define DDNAME_PREFIX   \"dd:\"\n  #define DSNAME_NULLFILE \"/dev/null\"\n  #define HFS_PREFIX      \"///\"\n  #define MEM_PREFIX      \"mem:\" //szm0040909\n#endif\n#ifndef __asm\n  #define __asm \"OS\"\n#endif\n#ifndef null\n#define null '\u00d6x00'\n#endif\n\n#if 0\n#ifndef ff\n#define ff '\u00d6xff'\n#endif\n\n#ifndef blank\n#define blank ' '\n#endif\n#endif\n\n#ifndef nulls\n#define nulls \"\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\u00d6x00\"\n#endif\n\n#if 0 //szm20030429  mvsSTRINGs.h\n#ifndef ffs\n#define ffs  \"\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\u00d6xff\"\n#endif\n#endif\n\n#define HEX1(a) char(0x ## a)\n#define HEX2(a1,a2) Ushort(0x ## a1 ## a2)\n#define HEX3(a1,a2,a3) INT3(0x ## a1 ## a2 ## a3 )\n#define HEX4(a1,a2,a3,a4) int(0x ## a1 ## a2 ## a3 ## a4 )\n\n#if defined(UTYPES) == 0 && ( defined(ISIS_PF_HOST) == 1 ]] defined(ISIS_PF_MU) == 1 )\n  #define UTYPES\n  #ifndef USHORT\n    #define USHORT unsigned short\n  #endif\n  #ifndef UCHAR\n   #define UCHAR unsigned char\n  #endif\n  #ifndef ULONG\n    #define ULONG unsigned long\n  #endif\n#endif\n\nenum genOpenNameType\n\u00e4  sas_hfs,\n   ibm_hfs,\n   sas_ddn,\n   ibm_ddn,\n   sas_dsn,\n   ibm_dsn,\n   ont_dsn, //KV20050403 prefix ont_ to avoid name conflicts\n   ont_ddn,\n   ont_mem,   //szm0040909\n   ont_unknown,\n   genOpenNameType_int = -1\n\u00fc;\n\ngenOpenNameType genOpenType(const char *);\nchar * stripMemberName(const char *name, char* nm);\nchar * onlyMemberName(const char *name, char* nm);\n\n\n\nUSHORT  Ushort(int i);\nUSHORT  Ushort(short s);\nUSHORT  Ushort(char c);\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n#define copyS( t , f )    \u00d6\nif ( t  && f ) memcpyp( t , f , sizeof( t ) , sizeof( f ) , ' ')\n\n#define clearS( t ) \u00d6\nif ( t )  \u00d6\n \u00e4   size_t  sl = sizeof ( t ) ;  \u00d6\n    memset( t , 0 , sl ) ; \u00fc\n\n#define blankS( t )   \u00d6\nif ( t ) memset( t , ' ', sizeof( t  ))\n\nvoid * memcpyp(void * target , const void * source, size_t tsize, size_t ssize, int pad);\n\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n\n\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n\nenum ALIGNTYPE\u00e4aLEFT=1, aRIGHT=3, aCENTER=2, aASIS=0, ALINGNTYPE_int = -1 \u00fc;\nenum CAPSTYPE\u00e4cUPPER=3, cLOWER=4, cWORD=2, cASIS=0, CAPSTYPE_int = -1\u00fc;\nenum FIELDTYPE\u00e4\n                      fCHAR =0,\n                      fALPHANUMERIC=1,\n                      fALPHABETIC=2,\n                      fNUMERIC= 3,\n                      fSLLTAG = 20,\n                      fLOGICAL=4 ,fHEXA=16,\n                      fBINARY=17 ,fDATE=5 ,fFTIME=6, fLISTBOX = 19,\n                      FIELDTYPE_int = -1\u00fc;\n//\n//--------------------------------------------------\n//\n\nclass FORMAT\n\u00e4\n   protected:\n   public:\n   ALIGNTYPE falign;\n   CAPSTYPE fcaps;\n  FORMAT() :  fcaps(cUPPER),\n    falign(aLEFT)\u00e4\u00fc\n\n  FORMAT(ALIGNTYPE a ,CAPSTYPE c=cASIS )\n  \u00e4\n\n    falign = a;\n      fcaps = c;\n  \u00fc\n  \u00dfFORMAT()\u00e4\u00fc\n\u00fc;\n\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n\nextern FORMAT F_alcu;\nextern FORMAT F_alcw;\nextern FORMAT F_arcu;\n//\n//--------------------------------------------------\n//\nstruct str \u00e4\nenum status \u00e4 _VALID, _INVALID, status_int = -1 \u00fc;\nenum length \u00e4 FIX, VARIABLE \u00fc;\nchar  * c;\nchar  * lls;\nlong int     l;\nstatus type;\nlength ltype;\nstr()\u00e4 c = lls = NULL; l = 0; type = _VALID; ltype = VARIABLE; \u00fc\n      \u00fc;\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n\nclass sLL;\n\nclass mvsSTRING \u00e4\n   protected:\n   str st;\n   public:\n   static char parseSepCh;\n   mvsSTRING();\n   mvsSTRING(const char *);\n   mvsSTRING(const mvsSTRING &);\n   mvsSTRING(const char *,long int l );\n   mvsSTRING(const char , const long int l);\n\n\t\tvirtual \u00dfmvsSTRING();\n\n  virtual mvsSTRING& operator=(const char * );\n  virtual mvsSTRING& operator=(const mvsSTRING &);\n\t\tvirtual mvsSTRING& operator=(const sLL &);\n\n  virtual operator char *() const\n  \u00e4\n  if ( st.type == str::_VALID )\n      return st.c;\n// perror(\"maybe _INVALID mvsSTRING in place of char *\");\n   return st.c;\n   \u00fc\n   virtual operator unsigned char *() const\n  \u00e4\n  if ( st.type == str::_VALID )\n      return (unsigned char *)st.c;\n// perror(\"maybe _INVALID mvsSTRING in place of char *\");\n   return (unsigned char *)st.c;\n   \u00fc\n   virtual operator const char *() const\n   \u00e4\n    return (const char *)st.c;\n   \u00fc\n   virtual operator const unsigned char *() const\n   \u00e4\n    return (const unsigned char *)st.c;\n   \u00fc\n   friend long int operator==(const mvsSTRING & , const mvsSTRING &);\n   friend long int operator|=(const mvsSTRING & , const mvsSTRING &);\n   friend mvsSTRING operator+(const mvsSTRING & , const mvsSTRING &);\n //mvsSTRING operator+(const mvsSTRING&);\n   mvsSTRING& operator+=(const mvsSTRING&);\n   void operator<<(long int );\n   void operator>>(long int );\n\n   virtual char& operator\u00c4\u00dc(int);\n   virtual char& byte(int);\n   mvsSTRING operator()(const long int , long int );\n\n   long int hashcode();\n  char * nameOf();\n   long int  lengthOf() const\u00e4return st.l;\u00fc\n   long int toint()\n          \u00e4 long int ret = 0;\n             if ( st.l >= sizeof(long int) )\n                     ret = * (long int *)(st.c);\n           else if ( st.l == sizeof(short) )\n              ret = * (short *)(st.c);\n           else if ( st.l == 1)\n              ret = *st.c;\n         return ret ;\n       \u00fc\n   void fromint(long int i)\n       \u00e4\n             if ( st.l >= sizeof(long int) )\n                      *(long int *)(st.c) = i;\n           else if ( st.l == sizeof(short) )\n              *(short *)(st.c) = (short )i;\n           else if ( st.l == 1)\n          *st.c =(char) i;\n       \u00fc\n  void changeAll(char ,char );\n  void align(ALIGNTYPE );\n  void caps(CAPSTYPE);\n  mvsSTRING & strip();\n  int  isEmpty();\n  mvsSTRING& stripmvsSTRING();\n    mvsSTRING& format(FORMAT *);\n  void parse(mvsSTRING&, char, mvsSTRING&);\n  void parse(mvsSTRING&, char, mvsSTRING&, char ,mvsSTRING &);\n  void parse(mvsSTRING&, char *,mvsSTRING&);\n  void parse(mvsSTRING&, char *, mvsSTRING&, char *,mvsSTRING &);\n  void split(mvsSTRING&, char *, mvsSTRING&,char *,mvsSTRING &);\n\tvoid split(mvsSTRING&, char *, mvsSTRING&,char *,mvsSTRING &,char *,mvsSTRING &);\n\tvoid split(mvsSTRING&, char *, mvsSTRING&,char *,mvsSTRING &,char *,mvsSTRING &,char *,mvsSTRING&);\n\tvoid parse(mvsSTRING&, char *, mvsSTRING&, char *,mvsSTRING &,char *,mvsSTRING &);\n\tvoid dump(const char * ,int);\n  char * getLlmvsSTRING();\n\u00fc;\n\n\textern mvsSTRING nullstring; //szm\n//\n//--------------------------------------------------\n//\nextern mvsSTRING nullmvsSTRING;\n//\n//--------------------------------------------------\n//\nclass LLC_mvsSTRING : public mvsSTRING\n\u00e4\n   short codev;\n  public:\n  LLC_mvsSTRING():mvsSTRING(), codev(0)\u00e4\u00fc\n  LLC_mvsSTRING(char * s):mvsSTRING(),codev(0)\n    \u00e4\n     short l = *(short*) s;\n     if ( l >= 4 )\n\t\t\t\t//\t\u00e4(mvsSTRING)(*this)= mvsSTRING(s+4,l-4); codev = *(short *)(s+2); \u00fc szm\n\t\t\t\t\u00e4\n\t\t\t\tmvsSTRING x = mvsSTRING(s+4,l-4);\n\t\t\t\tmvsSTRING::operator=(x);\n\t\t\t\tcodev = *(short *)(s+2);\n\t\t\t\t\u00fc\n    \u00fc\n   LLC_mvsSTRING(long int c):mvsSTRING() , codev(c)\u00e4\u00fc\n  \u00dfLLC_mvsSTRING()\u00e4\u00fc\n   long int   code(void)\u00e4return codev;\u00fc\n operator long int()\n       \u00e4 long int ret = 0;\n          if ( st.l == sizeof(long int) )\n                  ret = * (long int *)(st.c);\n         else if ( st.l == sizeof(short) )\n            ret = * (short *)(st.c);\n       else if ( st.l == 1)\n            ret = *st.c;\n       return ret ;\n    \u00fc\n\u00fc;\n//\n//--------------------------------------------------\n//\n\nmvsSTRING patternchng(mvsSTRING input , mvsSTRING mask,\n  mvsSTRING (*function)(mvsSTRING));\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n//\n\n\n#ifndef USHORT\n#define USHORT unsigned short\n#endif\n\nclass mvsSTRING;\nclass mERROR;\n\n\n\n\n#ifndef INCLUDE_SLL\n#define INCLUDE_SLL\n\n\n\n#ifndef USHORT\n#define USHORT unsigned short\n#endif\n\nclass mvsSTRING;\nclass mERROR;\n\nclass INT3\n\u00e4\nprivate :\n   long v;\npublic:\n   INT3(long u)\u00e4 v = u;\u00fc\n   operator long()\u00e4return v;\u00fc\n   INT3 & operator=(long u)\u00e4 v = u;return *this;\u00fc\n\n\u00fc;\n\n\n#endif\n\n//--------------------------------------------------------------\n//--------------------------------------------------------------\n//-----smaLL storage chunk in L.. data form\n//--------------------------------------------------------------\n\n#define MAX_sLL 1024\n\nenum sLLUsage \u00e4 sLLinput , sLLoutput , sLLoutputVar\u00fc ;\n\n   // input\n   // fix size output\n   // var size output\n\nenum sLLType   \u00e4sLLt0 = 0, sLLt1 = 1  ,sLLt2 = 2 , sLLt3 = 3 , sLLt4 = 4 \u00fc;\nenum sLLStatus \u00e4sLLOk = 0, sLLUf = 1  ,sLLOf = 2\u00fc;\n\nclass sLL;\n\n\nclass sLLskip\u00e4\nprivate:\n   int i;\npublic:\n   sLLskip(int v):i(v)\u00e4\u00fc\n   operator int()\u00e4return i;\u00fc\n\u00fc;\n\nclass sLL:public  mERROR\n\u00e4\n\nprotected:\n\n      int length;\n      int offset;\n      int llength;\n      int allocl;\n      int storedl;\n\n      sLL * base;\n      sLL * child;\n\n\n      char * start;\n      char * cursor;\n      sLLType type;\n      sLLStatus status;\n      char   dummy;\n\t\t\tmvsSTRING  string; //szm\nprotected:\n      sLLUsage usage;\n\nprotected:\n\n    void init(sLL *,int,sLLType);\n    int storeOk(int);\n\npublic:\n\n//\n//contruct /desctuct/copy/assign\n//\n\n    sLL (sLLType = sLLt2,\n            sLLUsage = sLLoutput,int=MAX_sLL );\n    sLL (sLL * , int ,\n            sLLType = sLLt2);\n    sLL (sLL * ,char *,\n            sLLType = sLLt2);\n    sLL (char *,\n            sLLType = sLLt2);\n      sLL (char *,\n                   int );\n\n\n    sLL (const sLL &);\n\n    virtual \u00dfsLL ();\n\n    virtual sLL & operator=(sLL &);\n\n//\n//\n//\n\n      operator int();\n\n\n    char & operator\u00c4\u00dc(int);\n\n\t\t\tint   getLength() const\n\t\t\t\t\u00e4\n\t\t\t\tif ( usage == sLLinput ) return length;\n\t\t\t\telse return storedl;\n\t\t\t\t\u00fc\n\n\t\t\tchar * getStart() const\n\t\t\t\t\u00e4 return start; \u00fc\n\n    sLL * getBase();\n    int   getOffset();\n    sLL * getChild();\n\n\n    int   getFullLength();\n    int   getRemainderLength();\n    int   getStoredLength();\n\n    char * getCursor();\n\t\t\tmvsSTRING  getString();//szm\n    void  setChild(sLL*);\n    void  setBase(sLL *);\n\n\n    void   setLength();\n    virtual void resetCursor();\n\n    char * goCursor(int);\n    void   setUsage(sLLUsage);\n\n//\n//\n//\n\n    sLL * next();\n    sLL * iterate(sLLType,int = 0);\n    void remove(sLL& );\n\n//\n// retrieve\n//\n\n\n    sLL& operator>>(int&);\n    sLL& operator>>(short&);\n    sLL& operator>>(unsigned short&);\n    sLL& operator>>(char &);\n    sLL& operator>>(char * &);\n    sLL& operator>>(mvsSTRING &);\n    sLL& operator>>(sLL &);\n    sLL& operator>>(INT3 &);\n    sLL& operator>>(sLLskip &);\n//\n// store\n//\n\n    sLL& operator<<(int);\n    sLL& operator<<(short);\n    sLL& operator<<(unsigned short);\n    sLL& operator<<(char );\n    sLL& operator<<(char *);\n    sLL& operator<<(mvsSTRING &);\n    sLL& operator<<(sLL& );\n    sLL& operator<<(INT3 &);\n    sLL& operator<<(sLLskip &);\n    sLL& store(char *,int);\n\n\n//\n// dump print etc.\n//\n\n   int write(void *);\n   friend sLL * readsLL(void *,sLLType);\n\t\t\tvirtual void dump(const char *,int);\n\n\u00fc;\n\nclass sLLTag: public sLL\n\u00e4\nprivate:\n   short      code;\n   char       * name;\n   short      searchcode;\n   void       init(short);\npublic:\n   sLLTag();\n   sLLTag(short);\n\n   sLLTag(char *);\n   sLLTag(sLL * , char *);\n   sLLTag(const sLLTag &);\n\n   \u00dfsLLTag()\u00e4\u00fc\n\t\tsLLTag& operator=(sLLTag&);\n\n   short      getCode()\u00e4 return code;\u00fc\n   char *     getName()\u00e4 return name ;\u00fc\n   sLLTag *   search(short=0);\n   void       resetCursor();\n   void       remove(sLLTag &);\n   sLLTag *   update(sLLTag& );\n   sLLTag *   next();\n   sLLTag *   iterate();\n\t virtual void dump(const char *,int);\n\u00fc;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MVSEBCDI": {"ttr": 2447, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/mvsebcdic.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   utility functions to convert from and to ebcdic charset\n*******************************************************************************/\n\n#ifndef __EBCDICUT_HPP__\n#define __EBCDICUT_HPP__\n\n\nextern const unsigned char isis_etoa\u00c4256\u00dc;\nextern const unsigned char isis_atoe\u00c4256\u00dc;\n\n\n/**\n * functions for ebcdic/ascii conversion\n * codesetConversion: helper function which does the conversion\n * local2ascii, ascii2local: generally called functions\n *   on ebcdic platforms they convert characters between ebcdic ascii\n *   on ascii platforms they don't change the characters\n * ascii2ebcdic, ebcdic2ascii: converts on ascii as well as on ebcdic platforms\n */\n\n\ninline char* codesetConversion(char* dest, const char* src,const unsigned char * convtab)\n\u00e4\n    char *d = dest;\n    for(;*src;++src,++d)\n    \u00e4\n        *d=convtab\u00c4(unsigned char)*src\u00dc;\n    \u00fc\n    *d=0;\n    return dest;\n\u00fc\n\ninline char* codesetConversion(char* dest, const char* src,const unsigned char * convtab,int len)\n\u00e4\n\n    for(int i=0;i<len;++i)\n    \u00e4\n        dest\u00c4i\u00dc=convtab\u00c4(unsigned char) src\u00c4i\u00dc\u00dc;\n    \u00fc\n    return dest;\n\u00fc\n\ninline char* local2ascii(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_etoa);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* local2ascii(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_etoa,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* local2ascii(char* str)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_etoa);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char* local2ascii(char* str,int len)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_etoa,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char local2ascii(char c)\n\u00e4\n#if ' ' == 0x40\n    return isis_etoa\u00c4(unsigned char)c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\n\n\ninline char* ascii2local(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_atoe);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* ascii2local(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(dest,src,isis_atoe,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* ascii2local(char* str)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_atoe);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char* ascii2local(char* str,int len)\n\u00e4\n#if ' ' == 0x40\n    return codesetConversion(str,str,isis_atoe,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char ascii2local(char c)\n\u00e4\n#if ' ' == 0x40\n    return isis_atoe\u00c4(unsigned char) c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\n\ninline char* local2ebcdic(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_atoe);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* local2ebcdic(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_atoe,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* local2ebcdic(char* str)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_atoe);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char* local2ebcdic(char* str,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_atoe,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char local2ebcdic(char c)\n\u00e4\n#if ' ' == 0x20\n    return isis_atoe\u00c4(unsigned char)c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\n\n\ninline char* ebcdic2local(char* dest, const char* src)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_etoa);\n#else\n    return strcpy(dest,src);\n#endif\n\u00fc\n\ninline char* ebcdic2local(char* dest, const char* src,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(dest,src,isis_etoa,len);\n#else\n    return (char*)memcpy(dest,src,len);\n#endif\n\u00fc\n\ninline char* ebcdic2local(char* str)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_etoa);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char* ebcdic2local(char* str,int len)\n\u00e4\n#if ' ' == 0x20\n    return codesetConversion(str,str,isis_etoa,len);\n#else\n    return str;\n#endif\n\u00fc\n\ninline char ebcdic2local(char c)\n\u00e4\n#if ' ' == 0x20\n    return isis_etoa\u00c4(unsigned char) c\u00dc;\n#else\n    return c;\n#endif\n\u00fc\n\n\n\ninline char* ebcdic2ascii(char* str)\n\u00e4\n    return codesetConversion(str,str,isis_etoa);\n\u00fc\n\ninline char* ascii2ebcdic(char* str)\n\u00e4\n    return codesetConversion(str,str,isis_atoe);\n\u00fc\n\ninline char ebcdic2ascii(char c)\n\u00e4\n    return (char) isis_etoa\u00c4(unsigned char) c\u00dc;\n\u00fc\n\ninline unsigned char ebcdic2ascii(unsigned char c)\n\u00e4\n    return isis_etoa\u00c4c\u00dc;\n\u00fc\n\ninline char ascii2ebcdic(char c)\n\u00e4\n    return (char)isis_atoe\u00c4(unsigned char) c\u00dc;\n\u00fc\n\ninline unsigned char ascii2ebcdic(unsigned char c)\n\u00e4\n    return isis_atoe\u00c4c\u00dc;\n\u00fc\n\n// for backwards compatibility\ninline unsigned char etoa(unsigned char c)\n\u00e4\n    return isis_etoa\u00c4 c\u00dc;\n\u00fc\n\ninline unsigned char atoe(unsigned char c)\n\u00e4\n    return isis_atoe\u00c4 c\u00dc;\n\u00fc\n\n// Ascii representation of a string\n// useful if you need the ascii representation of a text independently from the platform's codeset\n// there is an overhead also on ascii platforms -> avoid frequent constructor calls\n// usage samples:\n// strcmp(fontName,AsciiString(\"Arial\"));\n// const AsciiString fontlist\u00c4\u00dc=\u00e4\"X1\",X2,\"X3\"\u00fc;\nclass AsciiString\n\u00e4\nprotected:\n    char * str;\npublic:\n    AsciiString(const char* s)\n    \u00e4\n        if(s)\n        \u00e4\n            str=new char\u00c4strlen(s)+1\u00dc;\n            local2ascii(str,s);\n        \u00fc\n        else\n        \u00e4\n            str=NULL;\n        \u00fc\n    \u00fc\n\n    \u00dfAsciiString()\n    \u00e4\n        delete\u00c4\u00dc str;\n    \u00fc\n\n    operator const char* () const\n    \u00e4\n        return str;\n    \u00fc\n\u00fc;\n\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MVSTIME": {"ttr": 2373, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/mvstime.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\n\n#ifndef INCLUDE_MVSTIME\n#define INCLUDE_MVSTIME\n\n#include <time.h>\n\ntypedef void (*printfv_t)(const char *);\n\nclass MvsTimer\n\u00e4\npublic:\n   static char pb\u00c41024\u00dc;\n   static int  status;\n   static printfv_t printfv;\n   char * command;\n   int    count;\n   int    time;\n   int    time_max;\n   int    time_min;\n   int    total;\n   clock_t start_t;\n   clock_t stop_t;\n   MvsTimer(char *);\n    \u00dfMvsTimer()\u00e4\u00fc\n   char * print();\n   void start();\n   void stop();\n   void reset();\n   void set(int);\nprivate:\n   void storeclock(clock_t&);\n   int timediff(clock_t,clock_t);\n\u00fc;\n\nvoid InitMvsTimers(char* *,printfv_t);\nvoid ResetMvsTimers();\nvoid PrintMvsTimers();\nint  ToggleMvsTimers();\nvoid StartMvsTimer(int);\nvoid StopMvsTimer(int);\nvoid SetMvsTimer(int,int);\n\n#endif\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PSA": {"ttr": 2427, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(1)\n\nstruct psa \u00e4\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcrnpsw\u00c44\u00dc; /* -RESTART NEW PSW (AFTER IPL)        MDC001   */\n      void          *_filler1;     /* -  SECOND HALF OF RESTART NEW PSW     MDC128 */\n      \u00fc flcippsw;\n    struct \u00e4\n      unsigned char  _flceippsw\u00c48\u00dc; /* FLCE 0x: IPL PSW */\n      \u00fc flcesame;\n    \u00fc _psa_union1;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcropsw\u00c48\u00dc; /* -      RESTART OLD PSW (AFTER IPL) */\n      \u00fc flciccw1;\n    unsigned char  _flceiccw1\u00c48\u00dc; /* FLCE 8x: IPL CCW1 */\n    \u00fc _psa_union2;\n  union \u00e4\n    struct \u00e4\n      void          *_flccvt;      /* -    ADDRESS OF CVT (AFTER IPL).  THIS OFFSET    */\n      unsigned char  _filler2\u00c44\u00dc;  /* -      RESERVED (AFTER IPL)  (MDC431)   @ZM48214 */\n      \u00fc flciccw2;\n    unsigned char  _flceiccw2\u00c48\u00dc; /* FLCE 10x: IPL CCW1 */\n    \u00fc _psa_union3;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flceopsw\u00c48\u00dc;  /* -      EXTERNAL OLD PSW                          */\n      unsigned char  _flcsopsw\u00c48\u00dc;  /* -      SVC OLD PSW.  THIS OFFSET FIXED BY        */\n      unsigned char  _flcpopsw\u00c48\u00dc;  /* -      PROGRAM CHECK OLD PSW                     */\n      unsigned char  _flcmopsw\u00c48\u00dc;  /* -      MACHINE CHECK OLD PSW                     */\n      unsigned char  _flciopsw\u00c48\u00dc;  /* -      INPUT/OUTPUT OLD PSW                      */\n      unsigned char  _filler3\u00c412\u00dc;  /* -     RESERVED                         @G860PXK  */\n      void          *_flccvt2;      /* -    ADDRESS OF CVT - USED BY DUMP               */\n      unsigned char  _filler4\u00c44\u00dc;   /* -      RESERVED                         @G860PXH */\n      unsigned char  _filler5\u00c44\u00dc;   /* -      RESERVED - FLCTRACE DELETED DUE TO        */\n      unsigned char  _flcenpsw\u00c44\u00dc;  /* -EXTERNAL NEW PSW                                */\n      void          *_filler6;      /* -  SECOND HALF OF EXTERNAL NEW PSW               */\n      unsigned char  _flcsnpsw\u00c44\u00dc;  /* -SVC NEW PSW                                     */\n      void          *_filler7;      /* -  SECOND HALF OF SVC NEW PSW                    */\n      unsigned char  _flcpnpsw\u00c44\u00dc;  /* - PROGRAM CHECK NEW PSW, DISABLED FOR @02C       */\n      void          *_filler8;      /* -  SECOND HALF OF PROGRAM CHECK NEW PSW          */\n      unsigned char  _flcmnpsw\u00c44\u00dc;  /* -MACHINE CHECK NEW PSW              MDC003       */\n      void          *_filler9;      /* -  SECOND HALF OF MACHINE CHECK NEW PSW          */\n      unsigned char  _flcinpsw\u00c44\u00dc;  /* -INPUT/OUTPUT NEW PSW                            */\n      void          *_filler10;     /* -  SECOND HALF OF I/O NEW PSW                    */\n      \u00fc _psa_struct1;\n    unsigned char  _flcer018\u00c4104\u00dc; /* FLCE 18x: reserved */\n    \u00fc _psa_union4;\n  union \u00e4\n    int            _psaeparm;     /* -         EXTERNAL INTERRUPTION PARAMETER  @G871A9A */\n    unsigned char  _flceeparm\u00c44\u00dc; /* FLCE 80x: External interruption parameter           */\n    \u00fc _psa_union5;\n  union \u00e4\n    struct \u00e4\n      short int      _psaspad;  /* -         ISSUING PROCESSOR'S PHYSICAL ADDRESS */\n      short int      _flceicod; /* -         EXTERNAL INTERRUPTION CODE           */\n      \u00fc psaeepsw;\n    struct \u00e4\n      unsigned char  _flcecpuad\u00c42\u00dc;  /* FLCE 84x: CPU address                */\n      unsigned char  _flceeicode\u00c42\u00dc; /* FLCE 86x: External interruption code */\n      \u00fc _psa_struct2;\n    \u00fc _psa_union6;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _filler11;     /* -      RESERVED - SET TO ZERO                 */\n      int                      : 5,\n                     _flcsilcb : 3; /* -        SIGNIFICANT BITS IN ILC FIELD - LAST */\n      short int      _flcsvcn;      /* -         SVC INTERRUPTION CODE - SVC NUMBER. */\n      \u00fc psaespsw;\n    unsigned char  _flcesdata\u00c44\u00dc; /* FLCE 88x: Additional SVC interruption data */\n    struct \u00e4\n      unsigned char  _flcesdatabyte0\u00c42\u00dc; /* FLCE 88x: */\n      unsigned char  _filler12\u00c42\u00dc;\n      \u00fc _psa_struct3;\n    struct \u00e4\n      unsigned char  _filler13;      /* FLCE 88x: Reserved                          */\n      int                       : 5,\n                     _flcesilcb : 3; /* FLCE 89x: Significant bits in ILC. Last bit */\n      unsigned char  _flcesicode\u00c42\u00dc; /* FLCE 8Ax: SVC interruption code             */\n      \u00fc _psa_struct4;\n    \u00fc _psa_union7;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _filler14;     /* -      RESERVED - SET TO ZERO                 */\n      int                      : 5,\n                     _flcpilcb : 3; /* -        SIGNIFICANT BITS IN ILC FIELD - LAST */\n      struct \u00e4\n        char           _psaeecod;     /* -       EXCEPTION-EXTENSION CODE.            @03C  */\n        int            _psapiper : 1, /* -        PER INTERRUPT OCCURRED             MDC089 */\n                       _psapimc  : 1, /* -        MONITOR CALL INTERRUPT OCCURRED    MDC090 */\n                       _psapipc  : 6; /* -        AN UNSOLICITED PROGRAM CHECK HAS          */\n        \u00fc flcpicod;\n      struct \u00e4\n        int            _flcteaxm  : 1, /* -      IF 0 FLCTEA IS RELATIVE TO THE PRIMARY */\n                                 : 23;\n        struct \u00e4\n          unsigned char  _flcteab3; /* -      LAST BYTE OF TEA.                    @L8A */\n          \u00fc flcdxc;\n        \u00fc flctea;\n      \u00fc psaeppsw;\n    struct \u00e4\n      unsigned char  _flcepdata\u00c44\u00dc; /* FLCE 8Cx: Additional Program interruption */\n      unsigned char  _filler15\u00c44\u00dc;\n      \u00fc _psa_struct5;\n    struct \u00e4\n      unsigned char  _flcepdatabyte0\u00c42\u00dc; /* FLCE 8Cx: */\n      unsigned char  _filler16\u00c46\u00dc;\n      \u00fc _psa_struct6;\n    struct \u00e4\n      unsigned char  _filler17;      /* FLCE 8Cx: Reserved                          */\n      int                       : 5,\n                     _flcepilcb : 3; /* FLCE 8Dx: Significant bits in ILC. Last bit */\n      unsigned char  _flcepicode\u00c42\u00dc; /* FLCE 8Ex: Program interruption code         */\n      unsigned char  _filler18\u00c44\u00dc;\n      \u00fc _psa_struct7;\n    struct \u00e4\n      unsigned char  _filler19\u00c42\u00dc;\n      char           _flcepicode0;          /* FLCE 8Ex: Exception extension code            */\n      int            _flcepiper        : 1, /* FLCE 8Fx: PER interruption code               */\n                     _flcepimc         : 1, /* FLCE 8Fx: Monitor Call interruption code      */\n                     _flcepipc         : 6; /* FLCE 8Fx: An unsolicited program interruption */\n      unsigned char  _flcepiinformation\u00c44\u00dc; /* FLCE 90x:                                     */\n      \u00fc _psa_struct8;\n    struct \u00e4\n      unsigned char  _filler20\u00c44\u00dc;\n      unsigned char  _filler21\u00c43\u00dc;\n      char           _flcedxc;      /* FLCE 93x: Data exception code for PI 7 */\n      \u00fc _psa_struct9;\n    \u00fc _psa_union8;\n  union \u00e4\n    unsigned char  _flcemcnum\u00c42\u00dc; /* FLCE 94x: Monitor class number */\n    struct \u00e4\n      unsigned char  _filler22;\n      unsigned char  _flcmcnum;     /* -      MONITOR CLASS NUMBER */\n      \u00fc _psa_struct10;\n    \u00fc _psa_union9;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcpercd;     /* -      PROGRAM EVENT RECORDING CODE       */\n      int            _flcpswb4 : 1, /* PSW.4 part of ATMID                  @LSA */\n                               : 7;\n      \u00fc _psa_struct11;\n    unsigned char  _flcepercode\u00c42\u00dc; /* FLCE 96x: PER code */\n    struct \u00e4\n      int            _flcepersb         : 1, /* FLCE 96x: PER successful branch event       */\n                     _flceperif         : 1, /* FLCE 96x: PER instruction fetch event       */\n                     _flcepersa         : 1, /* FLCE 96x: PER storage alteration event      */\n                                        : 1,\n                     _flcepersar        : 1, /* FLCE 96x: PER storage alteration using real */\n                                        : 3;\n      int            _flceperpsw4       : 1, /* FLCE 97x: PER PSW bit 4                     */\n                     _flceperatmidvalid : 1, /* FLCE 97x: When 1, the ATMID bits are valid  */\n                     _flceperpsw32      : 1, /* FLCE 97x: PER PSW bit 32                    */\n                     _flceperpsw5       : 1, /* FLCE 97x: PER PSW bit 5                     */\n                     _flceperpsw16      : 1, /* FLCE 97x: PER PSW bit 16                    */\n                     _flceperpsw17      : 1, /* FLCE 97x: PER PSW bit 17                    */\n                     _flceperasceid     : 2; /* FLCE 97x: PER ASCE identification. If a     */\n      \u00fc _psa_struct12;\n    \u00fc _psa_union10;\n  union \u00e4\n    struct \u00e4\n      void          *_flcper;      /* -         PER ADDRESS - ESA/390            @G860PXK */\n      unsigned char  _filler23;    /* -      RESERVED - SET TO ZERO                       */\n      unsigned char  _flcmtrcd\u00c43\u00dc; /* -      MONITOR CODE (ESA/390)                       */\n      \u00fc _psa_struct13;\n    unsigned char  _flceper\u00c48\u00dc; /* FLCE 98x: PER address */\n    struct \u00e4\n      unsigned char  _flceperw0\u00c44\u00dc; /* FLCE 98x: PER address word 0 */\n      void          *_flceperw1;    /* FLCE 9Cx: PER address word 1 */\n      \u00fc _psa_struct14;\n    \u00fc _psa_union11;\n  union \u00e4\n    unsigned char  _flctearn; /* -      CONTAINS THE ACCESS REGISTER NUMBER  @L8C */\n    char           _flceeaid; /* FLCE A0x: Exception access ID (The AR number     */\n    \u00fc _psa_union12;\n  union \u00e4\n    unsigned char  _flcperrn;   /* -      CONTAINS THE PER STORAGE ACCESS      @L8A */\n    char           _flceperaid; /* FLCE A1x: PER access ID (the access register     */\n    \u00fc _psa_union13;\n  char           flceopacid;           /* FLCE A2x:                                              */\n  union \u00e4\n    int                       : 7,\n                   _psaesame  : 1; /* -      ESAME                                @LSA */\n    int                       : 7,\n                   _flceloeme : 1; /* Logout is ESAME                                  */\n    \u00fc _psa_union14;\n  union \u00e4\n    void          *_psampl;  /* -    MPL ADDRESS.  THIS OFFSET FIXED BY */\n    void          *_flcempl; /* FLCE A4x: MPL address                   */\n    \u00fc _psa_union15;\n  union \u00e4\n    unsigned char  _flceteid\u00c48\u00dc;      /* FLCE A8x: Translation exception         */\n    unsigned char  _flcetea\u00c48\u00dc;       /* FLCE A8x: Translation exception address */\n    struct \u00e4\n      unsigned char  _filler24\u00c47\u00dc;\n      int                        : 4,\n                     _flcepealc  : 1, /* FLCE AFx: Protection exception due to        */\n                     _flcesopi   : 1, /* FLCE AFx: Suppress on protection indication  */\n                     _flceteastd : 2; /* FLCE AFx: Segment table designation for TEA: */\n      \u00fc _psa_struct15;\n    unsigned char  _flceteasninfo\u00c48\u00dc; /* FLCE A8x: ASN Info                      */\n    struct \u00e4\n      unsigned char  _filler25\u00c46\u00dc;\n      short int      _flceteasn;    /* FLCE AEx: ASN */\n      \u00fc _psa_struct16;\n    unsigned char  _flcetepcinfo\u00c48\u00dc;  /* FLCE A8x: PC Info                       */\n    struct \u00e4\n      unsigned char  _filler26\u00c44\u00dc;\n      int            _flcepcnum;    /* FLCE ACx: PC#. Bits 0-10 are 0, bit 11 is 1, */\n      \u00fc _psa_struct17;\n    \u00fc _psa_union16;\n  unsigned char  flcemonitorcode\u00c48\u00dc;   /* FLCE B0x: Monitor Code                                 */\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcsid\u00c44\u00dc;  /* -      SUBSYSTEM ID                     @G860PVB */\n      unsigned char  _flciofp\u00c44\u00dc; /* -      I/O INTERRUPTION PARAMETER       @G860PVB */\n      \u00fc flciocdp;\n    struct \u00e4\n      unsigned char  _flcessid\u00c44\u00dc;      /* FLCE B8x: Subsystem ID word          */\n      unsigned char  _flceiointparm\u00c44\u00dc; /* FLCE BCx: I/O interruption parameter */\n      \u00fc _psa_struct18;\n    \u00fc _psa_union17;\n  unsigned char  flceiointid\u00c44\u00dc;       /* FLCE C0x: I/O interruption ID                          */\n  unsigned char  flcer0c4\u00c44\u00dc;          /* FLCE C4x: Reserved                                     */\n  union \u00e4\n    unsigned char  _flcfacl\u00c44\u00dc;            /* -     Facilities List. See FLCEFacilitiesList */\n    unsigned char  _flcefacilitieslist\u00c44\u00dc; /* FLCE C8x: Facilities list stored by STFL      */\n    struct \u00e4\n      int            _flceesamen3         : 1, /* Instructions marked \"N3\" in the instruction   */\n                     _flceesameinstalled  : 1, /* The ESAME architectural mode is installed     */\n                     _flceesame           : 1, /* The ESAME architectural mode is active on the */\n                                          : 5;\n      unsigned char  _flcefacilitieslistbyte1; /* FLCE C9x                                      */\n      unsigned char  _flcefacilitieslistbyte2; /* FLCE CAx                                      */\n      unsigned char  _flcefacilitieslistbyte3; /* FLCE CBx                                      */\n      \u00fc _psa_struct19;\n    \u00fc _psa_union18;\n  unsigned char  flcer0cc\u00c48\u00dc;          /* FLCE CCx: Reserved                                     */\n  union \u00e4\n    void          *_flcesar;     /* -      Absolute address of 4k extended      @LRA */\n    unsigned char  _flcer0d4\u00c44\u00dc; /* FLCE D4x: Reserved                               */\n    \u00fc _psa_union19;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcctsa\u00c48\u00dc; /* -      CPU-TIMER SAVE AREA (FROM STORE-     @LHA */\n      unsigned char  _flcccsa\u00c48\u00dc; /* -      CLOCK-COMPARATOR SAVE AREA (FROM     @LHA */\n      \u00fc _psa_struct20;\n    unsigned char  _flcer0d8\u00c416\u00dc; /* FLCE D8x: Reserved */\n    \u00fc _psa_union20;\n  union \u00e4\n    unsigned char  _flcmcic\u00c48\u00dc;  /* -      MACHINE-CHECK INTERRUPTION CODE  @G860PVB */\n    unsigned char  _flcemcic\u00c48\u00dc; /* FLCE E8x: Machine check interruption code        */\n    \u00fc _psa_union21;\n  unsigned char  flcemcice\u00c44\u00dc;         /* FLCE F0x: Machine check interruption code              */\n  unsigned char  flceedcode\u00c44\u00dc;        /* FLCE F4x: External damage code                         */\n  union \u00e4\n    struct \u00e4\n      void          *_flcfsa;       /* -         FAILING STORAGE ADDRESS          @G860PXK */\n      unsigned char  _filler27\u00c44\u00dc;  /* -      RESERVED - SET TO ZERO           @G860PXK    */\n      \u00fc _psa_struct21;\n    unsigned char  _flcefsa\u00c48\u00dc; /* FLCE F8x: Failing storage address */\n    \u00fc _psa_union22;\n  union \u00e4\n    struct \u00e4\n      unsigned char  _flcfla\u00c416\u00dc;   /* -     FIXED LOGOUT AREA. SIZE FIXED BY     @L9C */\n      unsigned char  _flcrv110\u00c416\u00dc; /* -     RESERVED.                            @L9A */\n      \u00fc _psa_struct22;\n    unsigned char  _flcer100\u00c432\u00dc; /* FLCE 100x: Reserved */\n    \u00fc _psa_union23;\n  union \u00e4\n    int            _flcarsav\u00c416\u00dc; /* -     ACCESS REGISTER SAVE AREA            @L9A */\n    struct \u00e4\n      unsigned char  _flceropsw\u00c416\u00dc; /* FLCE 120x: Restart old PSW  */\n      unsigned char  _flceeopsw\u00c416\u00dc; /* FLCE 130x: External old PSW */\n      unsigned char  _flcesopsw\u00c416\u00dc; /* FLCE 140x: SVC old PSW      */\n      unsigned char  _flcepopsw\u00c416\u00dc; /* FLCE 150x: Program old PSW  */\n      \u00fc _psa_struct23;\n    \u00fc _psa_union24;\n  union \u00e4\n    unsigned char  _flcfpsav\u00c432\u00dc; /* -     FLOATING POINT REGISTER SAVE AREA */\n    struct \u00e4\n      unsigned char  _flcemopsw\u00c416\u00dc; /* FLCE 160x: Machine check old PSW */\n      unsigned char  _flceiopsw\u00c416\u00dc; /* FLCE 170x: I/O old PSW           */\n      \u00fc _psa_struct24;\n    \u00fc _psa_union25;\n  union \u00e4\n    int            _flcgrsav\u00c416\u00dc; /* -       GENERAL REGISTER SAVE AREA */\n    struct \u00e4\n      unsigned char  _flcer180\u00c432\u00dc;  /* FLCE 180x: reserved         */\n      unsigned char  _flcernpsw\u00c416\u00dc; /* FLCE 1A0x: Restart new PSW  */\n      unsigned char  _flceenpsw\u00c416\u00dc; /* FLCE 1B0x: External new PSW */\n      \u00fc _psa_struct25;\n    \u00fc _psa_union26;\n  union \u00e4\n    int            _flccrsav\u00c416\u00dc; /* -       CONTROL REGISTER SAVE AREA */\n    struct \u00e4\n      unsigned char  _flcesnpsw\u00c416\u00dc; /* FLCE 1C0x: SVC new PSW           */\n      unsigned char  _flcepnpsw\u00c416\u00dc; /* FLCE 1D0x: Program new PSW       */\n      unsigned char  _flcemnpsw\u00c416\u00dc; /* FLCE 1E0x: Machine check new PSW */\n      unsigned char  _flceinpsw\u00c416\u00dc; /* FLCE 1F0x: I/O new PSW           */\n      \u00fc _psa_struct26;\n    \u00fc _psa_union27;\n  struct \u00e4\n    unsigned char  _psapsa\u00c44\u00dc; /* -    CONTROL BLOCK ACRONYM IN EBCDIC                */\n    short int      _psacpupa;  /* -         PHYSICAL CPU ADDRESS (CHANGED DURING ACR) */\n    short int      _psacpula;  /* -         LOGICAL CPU ADDRESS                       */\n    \u00fc flchdend;\n  void          *psapccav;             /* -         VIRTUAL ADDRESS OF PCCA                      */\n  void          *psapccar;             /* -         REAL ADDRESS OF PCCA                         */\n  void          *psalccav;             /* -         VIRTUAL ADDRESS OF LCCA                      */\n  void          *psalccar;             /* -         REAL ADDRESS OF LCCA                         */\n  void          *psatnew;              /* -         TCB pointer. Field maintained for code       */\n  void          *psatold;              /* -         Pointer to current TCB or zero if in SRB     */\n  void          *psaanew;              /* ASCB pointer.  Field maintained for code               */\n  void          *psaaold;              /* -         Pointer to the home (current) ASCB.          */\n  struct \u00e4\n    int            _psaio    : 1, /* -        I/O FLIH                                  */\n                   _psasvc   : 1, /* -        SVC FLIH                                  */\n                   _psaext   : 1, /* -        EXTERNAL FLIH                             */\n                   _psapi    : 1, /* -        PROGRAM CHECK FLIH                        */\n                   _psalock  : 1, /* -        LOCK ROUTINE                              */\n                   _psadisp  : 1, /* -        DISPATCHER                                */\n                   _psatctl  : 1, /* -        TCTL RECOVERY FLAG  (MDC310)     @Z40FP9A */\n                   _psatype6 : 1; /* -        TYPE 6 SVC IN CONTROL  (MDC311)  @Z40FP9A */\n    int            _psaipcri : 1, /* -        REMOTE IMMEDIATE SIGNAL SERVICE ROUTINE   */\n                   _psasvcr  : 1, /* -        SUPER FRR USES FOR SVC FLIH      @ZMC3227 */\n                   _psasvcrr : 1, /* -        SVC RECOVERY RECURSION INDICATOR.         */\n                             : 2,\n                   _psaacr   : 1, /* -        AUTOMATIC CPU RECONFIGURATION (ACR) IN    */\n                   _psartm   : 1, /* -        RECOVERY TERMINATION MONITOR (RTM) IN     */\n                   _psalcr   : 1; /* -        USED BY RTM TO SERIALIZE CALLS OF    @L5C */\n    int            _psaiosup : 1, /* -        IF ON, A MAINLINE IOS COMPONENT SUCH AS   */\n                             : 2,\n                   _psaspr   : 1, /* -        SUPER FRR IS ACTIVE  (MDC305)    @ZA02995 */\n                   _psaesta  : 1, /* -        SVC 60 RECOVERY ROUTINE ACTIVE            */\n                   _psarsm   : 1, /* -        REAL STORAGE MANAGER (RSM) ENTERED FOR    */\n                   _psaulcms : 1, /* -        LOCK MANAGER UNCONDITIONAL LOCAL OR       */\n                   _psaslip  : 1; /* -        IEAVTSLP RECURSION CONTROL BIT            */\n    int            _psaldwt  : 1, /* -        BLWLDWT IS IN CONTROL TO LOAD A      @LHC */\n                   _psasmf   : 1, /* -        SMF SUSPEND/RESET     (MDC599)   @G743PBB */\n                   _psaesar  : 1, /* -        SUPERVISOR ANALYSIS ROUTER IS ACTIVE @L5C */\n                             : 5;\n    \u00fc psasuper;\n  unsigned char  psarv22c\u00c416\u00dc;         /* -     RESERVED                             @H1C        */\n  int            psaaxp           : 1, /* INDICATES AXP                        @H1A              */\n                                  : 7;\n  int            psailsio         : 1, /* -      THE I/O FLIH IS USING THE            @L9A       */\n                 psailsex         : 1, /* -      THE EXTERNAL FLIH IS USING THE       @L9A       */\n                 psailspc         : 1, /* -      THE PROGRAM FLIH IS USING THE        @L9A       */\n                 psailsds         : 1, /* -      THE DISPATCHER IS USING THE          @L9A       */\n                 psailsrs         : 1, /* -      THE RESTART FLIH IS USING THE        @L9A       */\n                 psailsor         : 1, /* -      EXIT IS USING THE INTERRUPT HANDLER  @LAA       */\n                 psailst6         : 1, /* -      TYPE 6 SVC IS USING THE INTERRUPT    @D2A       */\n                 psailslk         : 1; /* -      THE INTERRUPT HANDLER LINKAGE STACK  @D4A       */\n  unsigned char  psalsvci\u00c42\u00dc;          /* -      LAST SVC ISSUED ON THIS PROCESSOR    @L6A       */\n  int            psaaeit          : 1, /* -      ADDRESSING ENVIRONMENT IS IN         @LOA       */\n                 psafpac          : 1, /* FP simulation is active on this CPU. @08A              */\n                 psafppe          : 1, /* Program-interrupt expected (i.e.,                      */\n                                  : 5;\n  unsigned char  psarv241\u00c410\u00dc;         /* RESERVED FOR FUTURE USE - SC1C5.     @LOC              */\n  int            psaemema         : 1, /* $$SCAFFOLD: ESAME                                      */\n                                  : 7;\n  void          *psalkcrf;             /* LINKAGE STACK POINTER SAVE AREA.     @D4A              */\n  unsigned char  psampsw\u00c48\u00dc;           /* - SETLOCK MODEL PSW                                    */\n  unsigned char  psamchex\u00c48\u00dc;          /* -      MCH EXIT PSW                                    */\n  int            psatclin;             /* -            STOSM PSASLSA,X'00' INSTRUCTION      @P5A */\n  int            psaintin;             /* -            STOSM PSASLSA,X'00' INSTRUCTION      @P5A */\n  int            psaipcin;             /* -            STOSM PSASLSA,X'00' INSTRUCTION      @P5A */\n  int            psaems2s;             /* -            STOSM PSASLSA,X'00' INSTRUCTION      @P5A */\n  int            psastosm;             /* -            STOSM PSASLSA,X'00' INSTRUCTION.     @P5A */\n  int            psahlhis;             /* -         SAVE AREA FOR PSAHLHI              MDC050    */\n  unsigned char  psarecur;             /* -      RESTART FLIH RECURSION INDICATOR.  IF           */\n  unsigned char  psarssm;              /* -      STNSM AREA FOR IEAVERES              @L5C       */\n  unsigned char  psasnsm2;             /* -      STNSM AREA FOR IEAVTRT1 (MDC470) @G65RP9A       */\n  unsigned char  psartm1s;             /* -      BITS 0-7 OF THE CURRENT PSW ARE  @G383P9A       */\n  void          *psalwtsa;             /* -         REAL ADDRESS OF SAVE AREA USED WHEN  @LHC    */\n  struct \u00e4\n    struct \u00e4\n      void          *_psadispl; /* -  GLOBAL DISPATCHER LOCK  (MDC315) @G50DP9A        */\n      void          *_psaasml;  /* -         AUXILIARY STORAGE MANAGEMENT (ASM) LOCK   */\n      void          *_psasalcl; /* -  SPACE ALLOCATION LOCK  (MDC316)  @G50DP9A        */\n      void          *_psaiossl; /* -         IOS SYNCHRONIZATION LOCK           MDC010 */\n      void          *_psarsmdl; /* -         ADDRESS OF THE RSM DATA SPACE LOCK   @LBC */\n      void          *_psaiosul; /* -         IOS UNIT CONTROL BLOCK LOCK        MDC005 */\n      void          *_psarvlk1; /* -         RESERVED FOR LOCK EXPANSION      @G860PXK */\n      void          *_psarv29c; /* -         RESERVED FOR LOCK EXPANSION          @LDC */\n      void          *_psarv2a0; /* -         RESERVED FOR LOCK EXPANSION          @LDC */\n      void          *_psatpacl; /* -         TCAM'S TPACBDEB LOCK               MDC009 */\n      void          *_psaoptl;  /* -   OPTIMIZER LOCK  (MDC317)         @G50DP9A       */\n      void          *_psarsmgl; /* -         RSM GLOBAL LOCK                  @G860PXH */\n      void          *_psavfixl; /* VSM FIXED SUBPOOLS LOCK          @G860PXH           */\n      void          *_psaasmgl; /* -         ASM GLOBAL LOCK                  @G860PXH */\n      void          *_psarsmsl; /* -         RSM STEAL LOCK                   @G860PXH */\n      void          *_psarsmxl; /* -         RSM CROSS MEMORY LOCK            @G860PXH */\n      void          *_psarsmal; /* -         RSM ADDRESS SPACE LOCK           @G860PXH */\n      void          *_psavpagl; /* VSM PAGEABLE SUBPOOLS LOCK       @G860PXH           */\n      void          *_psarsmcl; /* RSM COMMON LOCK                  @G860PXK           */\n      void          *_psarvlk2; /* RESERVED FOR LOCK EXPANSION      @G860PXH           */\n      \u00fc psaclht1;\n    struct \u00e4\n      int            _psarsmex    : 1, /* -        BIT 0 OF PSARSML. IF ON, THE RSM           */\n                                 : 31;\n      int            _psatrcex    : 1, /* -        BIT 0 OF PSATRCEL. IF ON THE TRACE         */\n                                 : 31;\n      int            _psaiosex    : 1, /* -        BIT 0 OF PSAIOSL. IF ON THE IOS      @D3A  */\n                                  : 5,\n                     _psalks2     : 2, /* COUNT OF LOCKS IN CLHT2              @D3C           */\n                                 : 24;\n      void          *_psarvlk4;        /* -         RESERVED FOR LOCK EXPANSION      @G50NP9A */\n      \u00fc psaclht2;\n    struct \u00e4\n      int                      : 7,\n                     _psalks3  : 1, /* COUNT OF LOCKS IN CLHT3          @G860PXH           */\n                              : 24;\n      void          *_psarvlk5;     /* -         RESERVED FOR LOCK EXPANSION      @G50NP9A */\n      \u00fc psaclht3;\n    struct \u00e4\n      void          *_psacmsl;      /* -         CROSS MEMORY SERVICES LOCK                */\n      int                      : 6,\n                     _psalks4  : 1, /* COUNT OF LOCKS IN CLHT4          @G860PXH           */\n                              : 25;\n      void          *_psarvlk6;     /* -         RESERVED FOR LOCK EXPANSION      @G50NP9A */\n      \u00fc psaclht4;\n    \u00fc psaclht;\n  void          *psalcpua;             /* -         LOGICAL CPU ADDRESS FOR LOCK INSTRUCTION.    */\n  struct \u00e4\n    struct \u00e4\n      int            _psacpuli : 1, /* -        CPU LOCK INDICATOR               @G860PXH */\n                               : 2,\n                     _psasum   : 1, /* -        SUMMARY BIT. IF ON, AT LEAST ONE     @LDA */\n                     _psarsmli : 1, /* -        RSM LOCK INDICATOR               @G860PXH */\n                     _psatrcei : 1, /* -        TRACE LOCK INDICATOR             @G860PXH */\n                     _psaiosi  : 1, /* -        IOS LOCK INDICATOR                   @D3A */\n                               : 1;\n      int                      : 3,\n                     _psarsmci : 1, /* -        RSM COMMON LOCK INDICATOR        @G860PXK */\n                     _psarsmgi : 1, /* -        RSM GLOBAL LOCK INDICATOR        @G860PXH */\n                     _psavfixi : 1, /* -        VSM FIX LOCK INDICATOR           @G860PXH */\n                     _psaasmgi : 1, /* -        ASM GLOBAL LOCK INDICATOR        @G860PXH */\n                     _psarsmsi : 1; /* -        RSM STEAL LOCK INDICATOR         @G860PXH */\n      int            _psarsmxi : 1, /* -        RSM CROSS MEMORY LOCK INDICATOR  @G860PXH */\n                     _psarsmai : 1, /* -        RSM ADDRESS SPACE LOCK INDICATOR @G860PXH */\n                     _psavpagi : 1, /* -        VSM PAGE LOCK INDICATOR          @G860PXH */\n                     _psadspli : 1, /* -        DISPATCHER LOCK INDICATOR                 */\n                     _psaasmli : 1, /* -        ASM LOCK INDICATOR  (MDC388)     @G50EP9A */\n                     _psasalli : 1, /* -        SPACE ALLOCATION LOCK INDICATOR           */\n                     _psaiosli : 1, /* -        IOS SYNCHRONIZATION LOCK INDICATOR        */\n                     _psarsmdi : 1; /* -        RSM DATA SPACE LOCK INDICATOR        @LBA */\n      int            _psaiouli : 1, /* -        IOS UCB LOCK INDICATOR  (MDC393) @G50EP9A */\n                               : 3,\n                     _psatpali : 1, /* -        TPACBDEB LOCK INDICATOR (MDC397) @G50EP9A */\n                     _psasrmli : 1, /* -        SYSTEM RESOURCE MANAGER (SRM) LOCK        */\n                     _psacmsli : 1, /* -        CROSS MEMORY SERVICES LOCK INDICATOR      */\n                     _psalclli : 1; /* -        LOCAL LOCK INDICATOR  (MDC400)   @G50EP9A */\n      \u00fc psaclhs;\n    \u00fc psahlhi;\n  void          *psalita;              /* -  ADDRESS OF LOCK INTERFACE TABLE.                    */\n  unsigned char  psastor8\u00c48\u00dc;          /* -      8-BYTE value for master's STO        @LSA       */\n  int            psacr0;               /* -         SAVE AREA FOR CONTROL REGISTER 0             */\n  unsigned char  psamchfl;             /* -      MCH RECURSION FLAGS                             */\n  unsigned char  psasymsk;             /* -      THIS FIELD WILL BE USED IN CONJUNCTION          */\n  unsigned char  psaactcd;             /* -      ACTION CODE SUPPLIED BY OPERATOR     @LHC       */\n  unsigned char  psamchic;             /* -      MCH INITIALIZATION COMPLETE FLAGS  MDC098       */\n  void          *psawkrap;             /* -         REAL ADDRESS OF VARY CPU PARAMETER LIST      */\n  void          *psawkvap;             /* -         VIRTUAL ADDRESS OF VARY CPU PARAMETER        */\n  short int      psavstap;             /* -         WORK AREA FOR VARY CPU             MDC108    */\n  short int      psacpusa;             /* -         PHYSICAL CPU ADDRESS (STATIC)  (MDC131)      */\n  int            psastor;              /* -         MASTER MEMORY'S SEGMENT TABLE ORIGIN         */\n  unsigned char  psaidawk\u00c490\u00dc;         /* -     WORK SAVE AREA FOR INTERNAL                      */\n  short int      psaret;               /* -            BSM 0,14 BRANCH RETURN TO CALLER     @P5A */\n  short int      psaretcd;             /* -            BSM 0,14 BRANCH RETURN TO CALLER     @P5A */\n  unsigned char  _filler28\u00c42\u00dc;         /* -      RESERVED                         @G860PVB       */\n  struct \u00e4\n    struct \u00e4\n      void          *_psacstk;  /* -         ADDRESS OF CURRENTLY USED FUNCTIONAL      */\n      void          *_psanstk;  /* -         ADDRESS OF NORMAL FRR STACK        MDC062 */\n      void          *_psasstk;  /* -         ADDRESS OF SVC-I/O-DISPATCHER FRR STACK   */\n      void          *_psassav;  /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      void          *_psamstk;  /* -         ADDRESS OF MCH FRR STACK           MDC067 */\n      void          *_psamsav;  /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      void          *_psapstk;  /* -         ADDRESS OF PROGRAM CHECK FLIH FRR STACK   */\n      void          *_psapsav;  /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      void          *_psaestk1; /* -         ADDRESS OF EXTERNAL FLIH FRR STACK FOR    */\n      void          *_psaesav1; /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      void          *_psaestk2; /* -         ADDRESS OF EXTERNAL FLIH FRR STACK FOR    */\n      void          *_psaesav2; /* -         ADDRESS OF INTERRUPTED STACK SAVE BY      */\n      void          *_psaestk3; /* -         ADDRESS OF EXTERNAL FLIH FRR STACK FOR    */\n      void          *_psaesav3; /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      void          *_psarstk;  /* -         ADDRESS OF RESTART FLIH FRR STACK  MDC077 */\n      void          *_psarsav;  /* -         ADDRESS OF INTERRUPTED STACK SAVED BY     */\n      \u00fc psarsvte;\n    \u00fc psarsvt;\n  unsigned char  psalwpsw\u00c48\u00dc;          /* -      PSW OF WORK INTERRUPTED WHEN A       @LHC       */\n  unsigned char  psarspsw\u00c48\u00dc;          /* -      RESUME PSW FIELD FOR RESTART INTERRUPT          */\n  void          *psatstk;              /* -         ADDRESS OF RTM RECOVERY STACK.               */\n  void          *psatsav;              /* -         ADDRESS OF ERROR STACK SAVED BY RTM  @L7A    */\n  void          *psaastk;              /* -         ADDRESS OF ACR FRR STACK.            @L7A    */\n  void          *psaasav;              /* -         ADDRESS OF INTERRUPT STACK SAVED BY  @L7A    */\n  unsigned char  psartpsw\u00c48\u00dc;          /* -      RESUME PSW FOR RTM SETRP RETRY       @L7A       */\n  unsigned char  psarv3e8\u00c48\u00dc;          /* -      RESERVED                             @L7C       */\n  unsigned char  psasfacc\u00c44\u00dc;          /* - SETFRR ABEND COMPLETION CODE USED WHEN               */\n  int            psalsfcc;             /* -            L  1,PSASFACC INSTRUCTION TO LOAD    @P5A */\n  short int      psasvc13;             /* -            AN SVC 13 INSTRUCTION                @P5A */\n  unsigned char  _filler29;            /* -      RESERVED                         @G860PXK       */\n  int            psanuin          : 1, /* -        CPU TIMER CANNOT BE USED                      */\n                                  : 7;\n  int            psartm1r;             /* -            STOSM PSARTM1S,X'00' INSTRUCTION     @P5A */\n  unsigned char  psapcpsw\u00c48\u00dc;          /* -      TEMPORARY OLD PSW STORAGE FOR PROGRAM           */\n  void          *psaatcvt;             /* -         ADDRESS OF VTAM ATCVT.  INITIALIZED BY       */\n  void          *psawtcod;             /* -         WAIT STATE CODE LOADED               @LHC    */\n  void          *psascwa;              /* -         ADDRESS OF SUPERVISOR CONTROL CPU            */\n  void          *psarsmsa;             /* -         ADDRESS OF RSM CPU RELATED WORK              */\n  unsigned char  psascpsw\u00c44\u00dc;          /* - MODEL PSW                                            */\n  void          *_filler30;            /* -         MODEL PSW SECOND HALF  (MDC325)  @G50DP9A    */\n  unsigned char  psasmpsw\u00c44\u00dc;          /* - SRB DISPATCH PSW  (MDC326)      @G50DP9A             */\n  void          *_filler31;            /* -         DISPATCH PSW SECOND HALF                     */\n  unsigned char  psarv428\u00c464\u00dc;         /* -     RESERVED                         @G860PXK        */\n  unsigned char  psapswsv\u00c48\u00dc;          /* -      PSW SAVE AREA FOR DISPATCHER AND ACR            */\n  unsigned char  psacput\u00c48\u00dc;           /* -      SUPERVISOR CPU TIMER SAVE AREA                  */\n  struct \u00e4\n    unsigned char  _psapcfb1;     /* -      FUNCTION VALUE  (MDC484)         @G383P9A   */\n    int            _psapctrr : 1, /* -        TRACE INTERRUPT RECURSION        @YA01102 */\n                   _psapcmt  : 1, /* -        TRACE RECURSION FLAG  (MDC493)   @G383P9A */\n                             : 6;\n    int            _psapcp1  : 1, /* -        FIRST LEVEL PROGRAM CHECK        @G383P9A */\n                   _psapcp2  : 1, /* -        SECOND LEVEL PROGRAM CHECK       @G383P9A */\n                   _psapcde  : 1, /* -        DAT ERROR CONDITION  (MDC497)    @G383P9A */\n                   _psapclv  : 1, /* -        0=REGISTERS IN LCCA, 1=REGISTERS @G383P9A */\n                   _psapcp3  : 1, /* -        THIRD LEVEL PROGRAM CHECK        @G383P9A */\n                   _psapcp4  : 1, /* -        FOURTH LEVEL PROGRAM CHECK       @G383P9A */\n                   _psapcpfr : 1, /* -        RECURSIVE PAGE FAULT INDICATOR       @LAA */\n                   _psapcavr : 1; /* -        RECURSIVE ASTE VALIDITY INDICATOR    @LCA */\n    int            _psapcdnv : 1, /* -        DUCT validity indicator              @PBA */\n                   _psapclsr : 1, /* -        IEAVLSIH has invoked IARPTEPR and    @PEA */\n                             : 6;\n    \u00fc psapcfun;\n  short int      psapcps2;             /* -         PASID AT TIME OF SECOND LEVEL    @G383P9A    */\n  unsigned char  psarv47e\u00c42\u00dc;          /* -      RESERVED                         @G860PXK       */\n  unsigned char  psapcwka\u00c424\u00dc;         /* -     Work area for PC FLIH. Must be                   */\n  short int      psapcps3;             /* -         PASID AT TIME OF THIRD LEVEL     @G383P9A    */\n  short int      psapcps4;             /* -         PASID AT TIME OF FOURTH LEVEL                */\n  struct \u00e4\n    unsigned char  _filler32;     /* -      RESERVED - FIRST BYTE OF PSAMODEW           */\n    int            _psanss   : 1, /* -        ENABLED UNLOCKED TASK WITH FRR   @G383P9A */\n                   _psaprsrb : 1, /* -        Preemptable-class SRB                @LPA */\n                             : 6;\n    unsigned char  _psamodeh;     /* -      SECOND HALFWORD OF PSAMODEW.     @G383P9A   */\n    unsigned char  _psamode;      /* -      SYSTEM MODE INDICATOR AND DISPLACEMENT      */\n    \u00fc psamodew;\n  unsigned char  _filler33\u00c43\u00dc;         /* -      RESERVED                         @G860PXK       */\n  unsigned char  psastnsm;             /* -      STNSM TARGET USED BY EXIT PROLOGUE              */\n  int            psalkjw;              /* -         LOCAL LOCK RELEASE SRB JOURNAL   @G383P9A    */\n  struct \u00e4\n    int            _psafzero;  /* -         FULLWORD OF ZERO     (MDC612)    @G383P9A */\n    int            _filler34;  /* -         FULLWORD OF ZERO     (MDC612)    @G383P9A */\n    \u00fc psadzero;\n  int            psalkjw2;             /* -         CMS LOCK RELEASE JOURNAL WORD.   @G383P9A    */\n  void          *psalkpt;              /* -   SETLOCK TEST,TYPE=HIER                             */\n  unsigned char  psarv4b8\u00c44\u00dc;          /* -      RESERVED.                            @LDC       */\n  void          *psalit2;              /* -  POINTER TO THE EXTENDED LOCK         @LDA           */\n  void          *psaecltp;             /* -   POINTER TO THE EXTENDED CURRENT      @LDA          */\n  struct \u00e4\n    int            _psablsdi : 1, /* -        BMFLSD LOCK INDICATOR.               @LGA */\n                   _psaxdsi  : 1, /* -        XCFDS LOCK INDICATOR.                @LEA */\n                   _psaxresi : 1, /* -        XCFRES LOCK INDICATOR.               @LEA */\n                   _psaxqi   : 1, /* -        XCFQ LOCK INDICATOR.                 @LEA */\n                   _psaeseti : 1, /* -        ETRSET LOCK INDICATOR.               @LFA */\n                   _psaixsci : 1, /* -        IXLSCH LOCK INDICATOR.               @LMC */\n                   _psaixshi : 1, /* -        IXLSHR LOCK INDICATOR.               @LMC */\n                   _psaixdsi : 1; /* -        IXLDS LOCK INDICATOR.                @LLA */\n    int            _psaixlli : 1, /* -        IXLSHELL LOCK INDICATOR.             @LMC */\n                   _psauluti : 1, /* -        IOSULUT LOCK INDICATOR.              @LJA */\n                   _psaixlri : 1, /* -        IXLREQST LOCK INDICATOR.             @05A */\n                   _psawlmri : 1, /* -        WLMRES LOCK INDICATOR                @LRA */\n                   _psawlmqi : 1, /* -        WLMQ LOCK INDICATOR.                 @LRA */\n                   _psacntxi : 1, /* -        CONTEXT LOCK INDICATOR               @LRA */\n                   _psaregsi : 1, /* -        REGSRV LOCK INDICATOR.               @LRA */\n                             : 1;\n    unsigned char  _psalheb2;     /* -      BYTE 2 OF THE CURRENT LOCK HELD      @LDA   */\n    unsigned char  _psalheb3;     /* -      BYTE 3 OF THE CURRENT LOCK HELD      @LDA   */\n    \u00fc psaclhse;\n  unsigned char  psarv4c8\u00c48\u00dc;          /* -    RESERVED FOR FUTURE LOCK EXPANSION.  @LDA         */\n  unsigned char  psarv4d0\u00c4184\u00dc;        /* -    RESERVED.                            @LDA         */\n  unsigned char  psahwfb;              /* -      HARDWARE FLAG BYTE.                  @L3A       */\n  unsigned char  psacr0cb;             /* -      CR0 CONTROL BYTE USED BY PROTPSA MACRO          */\n  unsigned char  _filler35\u00c42\u00dc;         /* -      RESERVED                         @G50NP9A       */\n  int                             : 3,\n                 psacr0en         : 1, /* -        IF 0, PSA PROTECT DISABLED.  IF 1, PSA        */\n                                  : 1,\n                 psacr0fp         : 1, /* -        IF 1, extended floating point is              */\n                 psacr0vi         : 1, /* -        IF 1, vector instructions are                 */\n                                 : 25;\n  int            psapccr0;             /* -         PROGRAM CHECK FLIH CR0 SAVE AREA             */\n  int                             : 3,\n                 psarpen          : 1, /* -        IF 0, PSA PROTECT DISABLED.  IF 1, PSA        */\n                                 : 28;\n  struct \u00e4\n    short int      _psatkn; /* -         CURRENT STACK TOKEN     (MDC610) @G383P9A */\n    short int      _psaasd; /* -         CURRENT STACK ADDRESS SPACE               */\n    int            _psasel; /* -         CURRENT STACK ELEMENTS ADDRESS            */\n    \u00fc psastke;\n  unsigned char  psaskpsw\u00c44\u00dc;          /* PCLINK STACK/UNSTACK MODEL PSW                         */\n  void          *psaskps2;             /* -         PCLINK PSW ADDRESS      (MDC604) @G383P9A    */\n  void          *psacpcls;             /* -      PCLINK WORKAREA - CURRENT STACK      @L9C       */\n  unsigned char  psarv5ac\u00c44\u00dc;          /* -      RESERVED.                            @L9A       */\n  void          *psascfs;              /* -      ADDRESS OF THE SUPERVISOR CONTROL    @L8C       */\n  void          *psapawa;              /* -      ADDRESS OF PC/AUTH WORK AREA.        @L8A       */\n  int            psaiopr          : 1, /* -        INDICATES IF INTERRUPTED TASK SHOULD @L1A     */\n                 psaiorty         : 1, /* -        I/O FLIH RECOVERY FLAG. IF 1,        @L5A     */\n                                  : 6;\n  unsigned char  _filler36\u00c43\u00dc;         /* -      RESERVED                         @G860PXK       */\n  unsigned char  psacr0m1\u00c44\u00dc;          /* MASK OF CR0 WITH EXTERNAL MASK BITS  @04A              */\n  unsigned char  psacr0m2\u00c44\u00dc;          /* MASK OF CR0 WITH ONLY EXTERNAL MASK  @04A              */\n  unsigned char  psarv5c4\u00c4148\u00dc;        /* -    RESERVED                             @03A         */\n  double         psatime;              /* -         CURRENT SRB'S ACCUMULATED CPU TIME   @01C    */\n  int            psasrsav;             /* -        ADDRESS OF CURRENT FRR STACK     @G383P9A     */\n  unsigned char  psaesc8\u00c412\u00dc;          /* -     Save area for IEAVESC8               @LPA        */\n  struct \u00e4\n    struct \u00e4\n      short int      _psadpkmi; /* -        PKM IMAGE                        @G387PXH */\n      short int      _psadsasi; /* -        SECONDARY ASID                   @G387PXH */\n      \u00fc psadcr3i;\n    struct \u00e4\n      short int      _psadaxi;  /* -        AUTHORIZATION INDEX              @G387PXH */\n      short int      _psadpasi; /* -        PRIMARY ASID                     @G387PXH */\n      \u00fc psadcr4i;\n    \u00fc psadxmsi;\n  unsigned char  psadsars\u00c464\u00dc;         /* -     DISPATCHER ACCESS REGISTER SAVE AREA @L9C        */\n  struct \u00e4\n    struct \u00e4\n      short int      _psadpkm; /* -        DISPATCHER PROGRAM KEY MASK SAVE AREA */\n      short int      _psadsas; /* -        DISPATCHER SECONDARY ASID SAVE AREA   */\n      \u00fc psadcr3;\n    struct \u00e4\n      short int      _psadax;  /* -        DISPATCHER  AUTHORIZATION        @G383P9A */\n      short int      _psadpas; /* -        DISPATCHER PRIMARY ASID SAVE     @G383P9A */\n      \u00fc psadcr4;\n    \u00fc psadxmsv;\n  union \u00e4\n    double         _psadtsav;    /* -            CPU TIMER VALUE AT LAST DISPATCH,    @01C */\n    unsigned char  _psaff6c0\u00c48\u00dc; /* INITIALIZE FIELD PSADTSAV     @ZMC3284                 */\n    \u00fc _psa_union28;\n  unsigned char  psarv6c8\u00c4232\u00dc;        /* -    RESERVED                         @G860PXK         */\n  unsigned char  psadatlk\u00c448\u00dc;         /* -    AREA FOR DAT-OFF ASSIST LINKAGE CODE              */\n  void          *psadatof;             /* -         REAL STORAGE ADDRESS OF THE DAT-OFF          */\n  int            psadatln;             /* -        LENGTH OF THE DAT-OFF INDEX TABLE             */\n  union \u00e4\n    unsigned char  _psarv7e8\u00c44\u00dc; /* -          RESERVED FOR SYSTEM TRACE.       @G860PXK */\n    unsigned char  _psaff7e8\u00c44\u00dc; /* INITIALIZE FIELD PSARV7E8     @ZMC3284               */\n    \u00fc _psa_union29;\n  int            psatroff         : 1, /* -        IF ON, SYSTEM TRACE SUSPENDED ON THIS         */\n                                  : 7;\n  unsigned char  _filler37\u00c43\u00dc;         /* -      RESERVED FOR SYSTEM TRACE.       @G860PXK       */\n  void          *psatbvtr;             /* -         REAL ADDRESS OF SYSTEM TRACE BUFFER          */\n  void          *psatbvtv;             /* -         VIRTUAL ADDRESS CORRESPONDING TO             */\n  void          *psatrvt;              /* -  ADDRESS OF SYSTEM TRACE VECTOR                      */\n  void          *psatot;               /* -  ADDRESS OF SYSTEM TRACE OPERAND                     */\n  union \u00e4\n    struct \u00e4\n      double         _psaus2st;     /* START SECOND SET OF ASSIGNED     @G383PXU */\n      unsigned char  _filler38\u00c48\u00dc;\n      \u00fc _psa_struct27;\n    struct \u00e4\n      int            _psacdsae; /* CALLDISP REGISTER 14 SAVE AREA   @G383PXU */\n      int            _psacdsaf; /* CALLDISP REGISTER 15 SAVE AREA   @G383PXU */\n      int            _psacdsa0; /* CALLDISP REGISTER 0  SAVE AREA   @G383PXU */\n      int            _psacdsa1; /* CALLDISP REGISTER 1  SAVE AREA   @G383PXU */\n      \u00fc psacdsav;\n    \u00fc _psa_union30;\n  int            psagspsw;             /* GLOBAL SCHEDULE SYSTEM MASK SAVE @ZA63674              */\n  int            psagsrgs;             /* GLOBAL SCHEDULE REGISTER SAVE    @ZA63674              */\n  unsigned char  psarv818\u00c44\u00dc;          /* -     RESERVED                             @PAC        */\n  int            psasv01r;             /* IEAVTRG1 register 1 save area.       @PAA              */\n  int            psasv14r;             /* IEAVTRG1 register 14 save area.      @PAA              */\n  int            psaems2r;             /* -        REGISTER SAVE AREA                            */\n  struct \u00e4\n    int            _psatrgr0; /* -        TRACE REGISTER 0 SAVE AREA.      @G860PXH */\n    int            _psatrgr1; /* -        TRACE REGISTER 1 SAVE AREA.      @G860PXH */\n    int            _psatrgr2; /* -        TRACE REGISTER 2 SAVE AREA.      @G860PXH */\n    int            _psatrgr3; /* -        TRACE REGISTER 3 SAVE AREA.      @G860PXH */\n    int            _psatrgr4; /* -        TRACE REGISTER 4 SAVE AREA.      @G860PXH */\n    int            _psatrgr5; /* -        TRACE REGISTER 5 SAVE AREA.      @G860PXH */\n    int            _psatrgr6; /* -        TRACE REGISTER 6 SAVE AREA.      @G860PXH */\n    int            _psatrgr7; /* -        TRACE REGISTER 7 SAVE AREA.      @G860PXH */\n    int            _psatrgr8; /* -        TRACE REGISTER 8 SAVE AREA.      @G860PXH */\n    int            _psatrgr9; /* -        TRACE REGISTER 9 SAVE AREA.      @G860PXH */\n    int            _psatrgra; /* -        TRACE REGISTER 10 SAVE AREA.     @G860PXH */\n    int            _psatrgrb; /* -        TRACE REGISTER 11 SAVE AREA.     @G860PXH */\n    int            _psatrgrc; /* -        TRACE REGISTER 12 SAVE AREA.     @G860PXH */\n    int            _psatrgrd; /* -        TRACE REGISTER 13 SAVE AREA.     @G860PXH */\n    int            _psatrgre; /* -        TRACE REGISTER 14 SAVE AREA.     @G860PXH */\n    int            _psatrgrf; /* -        TRACE REGISTER 15 SAVE AREA.     @G860PXH */\n    \u00fc psatrsav;\n  unsigned char  psarv868\u00c464\u00dc;         /* -     RESERVED.                            @L8C        */\n  union \u00e4\n    unsigned char  _psagsav\u00c464\u00dc;  /* -         REGISTER SAVE AREA USED BY   */\n    unsigned char  _psaff8a8\u00c464\u00dc; /* INITIALIZE FIELD PSAGSAV      @ZMC3284 */\n    \u00fc _psa_union31;\n  int            psascrg1;             /* -        GLOBAL SCHEDULE REGISTER SAVE AREA            */\n  int            psascrg2;             /* -        GLOBAL SCHEDULE REGISTER SAVE AREA            */\n  int            psagpreg\u00c43\u00dc;          /* -       REGISTER SAVE AREA FOR SVC FLIH                */\n  int            psarsreg;             /* -        RESTART FLIH REGISTER SAVE       @G860PXK     */\n  int            psapcgr8;             /* -        PROGRAM FLIH REGISTER 8 SAVE AREA             */\n  int            psapcgr9;             /* -        PROGRAM FLIH REGISTER 9 SAVE AREA             */\n  struct \u00e4\n    int            _psapcgra; /* -        PROGRAM FLIH REGISTER 10 SAVE AREA */\n    int            _psapcgrb; /* -        PROGRAM FLIH REGISTER 11 SAVE AREA */\n    \u00fc psapcgab;\n  struct \u00e4\n    int            _psalkr0;  /* -        IEAVELK REGISTER 0 SAVE AREA     @G860PXK */\n    int            _psalkr1;  /* -        IEAVELK REGISTER 1 SAVE AREA     @G860PXK */\n    int            _psalkr2;  /* -        IEAVELK REGISTER 2 SAVE AREA     @G860PXK */\n    int            _psalkr3;  /* -        IEAVELK REGISTER 3 SAVE AREA     @G860PXK */\n    int            _psalkr4;  /* -        IEAVELK REGISTER 4 SAVE AREA     @G860PXK */\n    int            _psalkr5;  /* -        IEAVELK REGISTER 5 SAVE AREA     @G860PXK */\n    int            _psalkr6;  /* -        IEAVELK REGISTER 6 SAVE AREA     @G860PXK */\n    int            _psalkr7;  /* -        IEAVELK REGISTER 7 SAVE AREA     @G860PXK */\n    int            _psalkr8;  /* -        IEAVELK REGISTER 8 SAVE AREA     @G860PXK */\n    int            _psalkr9;  /* -        IEAVELK REGISTER 9 SAVE AREA     @G860PXK */\n    int            _psalkr10; /* -        IEAVELK REGISTER 10 SAVE AREA    @G860PXK */\n    int            _psalkr11; /* -        IEAVELK REGISTER 11 SAVE AREA    @G860PXK */\n    int            _psalkr12; /* -        IEAVELK REGISTER 12 SAVE AREA    @G860PXK */\n    int            _psalkr13; /* -        IEAVELK REGISTER 13 SAVE AREA    @G860PXK */\n    int            _psalkr14; /* -        IEAVELK REGISTER 14 SAVE AREA    @G860PXK */\n    int            _psalkr15; /* -        IEAVELK REGISTER 15 SAVE AREA    @G860PXK */\n    \u00fc psalksa;\n  union \u00e4\n    unsigned char  _psaslsa\u00c472\u00dc;  /* -         SINGLE LEVEL SAVE AREA USED BY DISABLED */\n    unsigned char  _psaff950\u00c472\u00dc; /* INITIALIZE FIELD PSASLSA       @ZMC3284           */\n    \u00fc _psa_union32;\n  union \u00e4\n    unsigned char  _psajstsa\u00c464\u00dc; /* -     SAVE AREA FOR JOB STEP TIMING        @H1A */\n    unsigned char  _psaff998\u00c464\u00dc; /* INITIALIZE FIELD PSAJSTSA         @H1A          */\n    \u00fc _psa_union33;\n  union \u00e4\n    struct \u00e4\n      double         _psaus2nd;      /* END SECOND SET OF ASSIGNED           @H1M */\n      unsigned char  _filler39\u00c456\u00dc;\n      \u00fc _psa_struct28;\n    struct \u00e4\n      int            _psaslkr0; /* -        IEAVESLK REGISTER 0 SAVE AREA        @P4A */\n      int            _psaslkr1; /* -        IEAVESLK REGISTER 1 SAVE AREA        @P4A */\n      int            _psaslkr2; /* -        IEAVESLK REGISTER 2 SAVE AREA        @P4A */\n      int            _psaslkr3; /* -        IEAVESLK REGISTER 3 SAVE AREA        @P4A */\n      int            _psaslkr4; /* -        IEAVESLK REGISTER 4 SAVE AREA        @P4A */\n      int            _psaslkr5; /* -        IEAVESLK REGISTER 5 SAVE AREA        @P4A */\n      int            _psaslkr6; /* -        IEAVESLK REGISTER 6 SAVE AREA        @P4A */\n      int            _psaslkr7; /* -        IEAVESLK REGISTER 7 SAVE AREA        @P4A */\n      int            _psaslkr8; /* -        IEAVESLK REGISTER 8 SAVE AREA        @P4A */\n      int            _psaslkr9; /* -        IEAVESLK REGISTER 9 SAVE AREA        @P4A */\n      int            _psaslkra; /* -        IEAVESLK REGISTER 10 SAVE AREA       @P4A */\n      int            _psaslkrb; /* -        IEAVESLK REGISTER 11 SAVE AREA       @P4A */\n      int            _psaslkrc; /* -        IEAVESLK REGISTER 12 SAVE AREA       @P4A */\n      int            _psaslkrd; /* -        IEAVESLK REGISTER 13 SAVE AREA       @P4A */\n      int            _psaslkre; /* -        IEAVESLK REGISTER 14 SAVE AREA       @P4A */\n      int            _psaslkrf; /* -        IEAVESLK REGISTER 15 SAVE AREA       @P4A */\n      \u00fc psaslksa;\n    \u00fc _psa_union34;\n  unsigned char  psarva18\u00c436\u00dc;         /* -    RESERVED                             @P4A         */\n  unsigned char  psascsav\u00c464\u00dc;         /* IEAVESC0 save area                   @P7A              */\n  int            psaschda         : 1, /* Schedule is active                   @LPA              */\n                 psamcha          : 1, /* Machine Check is active              @06A              */\n                 psarsta          : 1, /* Restart is active                    @06A              */\n                 psaegra          : 1, /* Global Recovery is active            @06A              */\n                 psartma          : 1, /* Selected RTM functions are active    @06A              */\n                                  : 3;\n  unsigned char  psarva7d\u00c43\u00dc;          /* Reserved for future use - SC1C5      @P8A              */\n  unsigned char  psarva80\u00c4188\u00dc;        /* -    RESERVED                             @P8C         */\n  void          *psagsch7;             /* -  ENABLED GLOBAL SCHEDULE ENTRY                       */\n  void          *psagsch8;             /* -  DISABLED GLOBAL SCHEDULE ENTRY                      */\n  void          *psalsch1;             /* -  ENABLED SCHEDULE ENTRY POINT                        */\n  void          *psalsch2;             /* -  DISABLED SCHEDULE ENTRY POINT                       */\n  void          *psasvt;               /* -  ADDRESS OF SUPERVISOR VECTOR TABLE                  */\n  void          *psasvtx;              /* Address of Supervisor Vector Table   @LNC              */\n  unsigned char  psarvb54\u00c484\u00dc;         /* -     Reserved                             @LNC        */\n  int            psaxstk;              /* -        OFFSET TO AND LENGTH OF THE ARRAY OF          */\n  unsigned char  psarvbac\u00c484\u00dc;         /* -     RESERVED                         @G387PXH        */\n  unsigned char  psastak\u00c4856\u00dc;         /* -   NORMAL FRR STACK                     @D5C          */\n  unsigned char  _filler40\u00c4168\u00dc;       /* -   RESERVED FOR EXPANSION OF            @D5C          */\n  double         psaend;               /* -           END OF PSA            (MDC612)   @G383P9A  */\n  \u00fc;\n\n#define flcrnpsw                _psa_union1.flcippsw._flcrnpsw\n#define flceippsw               _psa_union1.flcesame._flceippsw\n#define flcropsw                _psa_union2.flciccw1._flcropsw\n#define flceiccw1               _psa_union2._flceiccw1\n#define flccvt                  _psa_union3.flciccw2._flccvt\n#define flceiccw2               _psa_union3._flceiccw2\n#define flceopsw                _psa_union4._psa_struct1._flceopsw\n#define flcsopsw                _psa_union4._psa_struct1._flcsopsw\n#define flcpopsw                _psa_union4._psa_struct1._flcpopsw\n#define flcmopsw                _psa_union4._psa_struct1._flcmopsw\n#define flciopsw                _psa_union4._psa_struct1._flciopsw\n#define flccvt2                 _psa_union4._psa_struct1._flccvt2\n#define flcenpsw                _psa_union4._psa_struct1._flcenpsw\n#define flcsnpsw                _psa_union4._psa_struct1._flcsnpsw\n#define flcpnpsw                _psa_union4._psa_struct1._flcpnpsw\n#define flcmnpsw                _psa_union4._psa_struct1._flcmnpsw\n#define flcinpsw                _psa_union4._psa_struct1._flcinpsw\n#define flcer018                _psa_union4._flcer018\n#define psaeparm                _psa_union5._psaeparm\n#define flceeparm               _psa_union5._flceeparm\n#define psaspad                 _psa_union6.psaeepsw._psaspad\n#define flceicod                _psa_union6.psaeepsw._flceicod\n#define flcecpuad               _psa_union6._psa_struct2._flcecpuad\n#define flceeicode              _psa_union6._psa_struct2._flceeicode\n#define flcsilcb                _psa_union7.psaespsw._flcsilcb\n#define flcsvcn                 _psa_union7.psaespsw._flcsvcn\n#define flcesdata               _psa_union7._flcesdata\n#define flcesdatabyte0          _psa_union7._psa_struct3._flcesdatabyte0\n#define flcesilcb                _psa_union7._psa_struct4._flcesilcb\n#define flcesicode              _psa_union7._psa_struct4._flcesicode\n#define flcpilcb                _psa_union8.psaeppsw._flcpilcb\n#define psaeecod                _psa_union8.psaeppsw.flcpicod._psaeecod\n#define psapiper                _psa_union8.psaeppsw.flcpicod._psapiper\n#define psapimc                _psa_union8.psaeppsw.flcpicod._psapimc\n#define psapipc                _psa_union8.psaeppsw.flcpicod._psapipc\n#define flcteaxm                        _psa_union8.psaeppsw.flctea._flcteaxm\n#define flcteab3                _psa_union8.psaeppsw.flctea.flcdxc._flcteab3\n#define flcepdata               _psa_union8._psa_struct5._flcepdata\n#define flcepdatabyte0          _psa_union8._psa_struct6._flcepdatabyte0\n#define flcepilcb                _psa_union8._psa_struct7._flcepilcb\n#define flcepicode              _psa_union8._psa_struct7._flcepicode\n#define flcepicode0             _psa_union8._psa_struct8._flcepicode0\n#define flcepiper             _psa_union8._psa_struct8._flcepiper\n#define flcepimc             _psa_union8._psa_struct8._flcepimc\n#define flcepipc             _psa_union8._psa_struct8._flcepipc\n#define flcepiinformation       _psa_union8._psa_struct8._flcepiinformation\n#define flcedxc                 _psa_union8._psa_struct9._flcedxc\n#define flcemcnum               _psa_union9._flcemcnum\n#define flcmcnum                _psa_union9._psa_struct10._flcmcnum\n#define flcpercd                _psa_union10._psa_struct11._flcpercd\n#define flcpswb4                _psa_union10._psa_struct11._flcpswb4\n#define flcepercode             _psa_union10._flcepercode\n#define flcepersb            _psa_union10._psa_struct12._flcepersb\n#define flceperif            _psa_union10._psa_struct12._flceperif\n#define flcepersa            _psa_union10._psa_struct12._flcepersa\n#define flcepersar            _psa_union10._psa_struct12._flcepersar\n#define flceperpsw4            _psa_union10._psa_struct12._flceperpsw4\n#define flceperatmidvalid            _psa_union10._psa_struct12._flceperatmidvalid\n#define flceperpsw32            _psa_union10._psa_struct12._flceperpsw32\n#define flceperpsw5            _psa_union10._psa_struct12._flceperpsw5\n#define flceperpsw16            _psa_union10._psa_struct12._flceperpsw16\n#define flceperpsw17            _psa_union10._psa_struct12._flceperpsw17\n#define flceperasceid            _psa_union10._psa_struct12._flceperasceid\n#define flcper                  _psa_union11._psa_struct13._flcper\n#define flcmtrcd                _psa_union11._psa_struct13._flcmtrcd\n#define flceper                 _psa_union11._flceper\n#define flceperw0               _psa_union11._psa_struct14._flceperw0\n#define flceperw1               _psa_union11._psa_struct14._flceperw1\n#define flctearn                _psa_union12._flctearn\n#define flceeaid                _psa_union12._flceeaid\n#define flcperrn                _psa_union13._flcperrn\n#define flceperaid              _psa_union13._flceperaid\n#define psaesame                 _psa_union14._psaesame\n#define flceloeme               _psa_union14._flceloeme\n#define psampl                  _psa_union15._psampl\n#define flcempl                 _psa_union15._flcempl\n#define flceteid                _psa_union16._flceteid\n#define flcetea                 _psa_union16._flcetea\n#define flcepealc                _psa_union16._psa_struct15._flcepealc\n#define flcesopi                _psa_union16._psa_struct15._flcesopi\n#define flceteastd                _psa_union16._psa_struct15._flceteastd\n#define flceteasninfo           _psa_union16._flceteasninfo\n#define flceteasn               _psa_union16._psa_struct16._flceteasn\n#define flcetepcinfo            _psa_union16._flcetepcinfo\n#define flcepcnum               _psa_union16._psa_struct17._flcepcnum\n#define flcsid                  _psa_union17.flciocdp._flcsid\n#define flciofp                 _psa_union17.flciocdp._flciofp\n#define flcessid                _psa_union17._psa_struct18._flcessid\n#define flceiointparm           _psa_union17._psa_struct18._flceiointparm\n#define flcfacl                 _psa_union18._flcfacl\n#define flcefacilitieslist      _psa_union18._flcefacilitieslist\n#define flceesamen3 _psa_union18._psa_struct19._flceesamen3\n#define flceesameinstalled _psa_union18._psa_struct19._flceesameinstalled\n#define flceesame _psa_union18._psa_struct19._flceesame\n#define flcefacilitieslistbyte1 _psa_union18._psa_struct19._flcefacilitieslistbyte1\n#define flcefacilitieslistbyte2 _psa_union18._psa_struct19._flcefacilitieslistbyte2\n#define flcefacilitieslistbyte3 _psa_union18._psa_struct19._flcefacilitieslistbyte3\n#define flcesar                 _psa_union19._flcesar\n#define flcer0d4                _psa_union19._flcer0d4\n#define flcctsa                 _psa_union20._psa_struct20._flcctsa\n#define flcccsa                 _psa_union20._psa_struct20._flcccsa\n#define flcer0d8                _psa_union20._flcer0d8\n#define flcmcic                 _psa_union21._flcmcic\n#define flcemcic                _psa_union21._flcemcic\n#define flcfsa                  _psa_union22._psa_struct21._flcfsa\n#define flcefsa                 _psa_union22._flcefsa\n#define flcfla                  _psa_union23._psa_struct22._flcfla\n#define flcrv110                _psa_union23._psa_struct22._flcrv110\n#define flcer100                _psa_union23._flcer100\n#define flcarsav                _psa_union24._flcarsav\n#define flceropsw               _psa_union24._psa_struct23._flceropsw\n#define flceeopsw               _psa_union24._psa_struct23._flceeopsw\n#define flcesopsw               _psa_union24._psa_struct23._flcesopsw\n#define flcepopsw               _psa_union24._psa_struct23._flcepopsw\n#define flcfpsav                _psa_union25._flcfpsav\n#define flcemopsw               _psa_union25._psa_struct24._flcemopsw\n#define flceiopsw               _psa_union25._psa_struct24._flceiopsw\n#define flcgrsav                _psa_union26._flcgrsav\n#define flcer180                _psa_union26._psa_struct25._flcer180\n#define flcernpsw               _psa_union26._psa_struct25._flcernpsw\n#define flceenpsw               _psa_union26._psa_struct25._flceenpsw\n#define flccrsav                _psa_union27._flccrsav\n#define flcesnpsw               _psa_union27._psa_struct26._flcesnpsw\n#define flcepnpsw               _psa_union27._psa_struct26._flcepnpsw\n#define flcemnpsw               _psa_union27._psa_struct26._flcemnpsw\n#define flceinpsw               _psa_union27._psa_struct26._flceinpsw\n#define psapsa                  flchdend._psapsa\n#define psacpupa                flchdend._psacpupa\n#define psacpula                flchdend._psacpula\n#define psaio                 psasuper._psaio\n#define psasvc                 psasuper._psasvc\n#define psaext                 psasuper._psaext\n#define psapi                 psasuper._psapi\n#define psalock                 psasuper._psalock\n#define psadisp                 psasuper._psadisp\n#define psatctl                 psasuper._psatctl\n#define psatype6                 psasuper._psatype6\n#define psaipcri                 psasuper._psaipcri\n#define psasvcr                 psasuper._psasvcr\n#define psasvcrr                 psasuper._psasvcrr\n#define psaacr                 psasuper._psaacr\n#define psartm                 psasuper._psartm\n#define psalcr                 psasuper._psalcr\n#define psaiosup                 psasuper._psaiosup\n#define psaspr                 psasuper._psaspr\n#define psaesta                 psasuper._psaesta\n#define psarsm                 psasuper._psarsm\n#define psaulcms                 psasuper._psaulcms\n#define psaslip                 psasuper._psaslip\n#define psaldwt                 psasuper._psaldwt\n#define psasmf                 psasuper._psasmf\n#define psaesar                 psasuper._psaesar\n#define psadispl                psaclht.psaclht1._psadispl\n#define psaasml                 psaclht.psaclht1._psaasml\n#define psasalcl                psaclht.psaclht1._psasalcl\n#define psaiossl                psaclht.psaclht1._psaiossl\n#define psarsmdl                psaclht.psaclht1._psarsmdl\n#define psaiosul                psaclht.psaclht1._psaiosul\n#define psarvlk1                psaclht.psaclht1._psarvlk1\n#define psarv29c                psaclht.psaclht1._psarv29c\n#define psarv2a0                psaclht.psaclht1._psarv2a0\n#define psatpacl                psaclht.psaclht1._psatpacl\n#define psaoptl                 psaclht.psaclht1._psaoptl\n#define psarsmgl                psaclht.psaclht1._psarsmgl\n#define psavfixl                psaclht.psaclht1._psavfixl\n#define psaasmgl                psaclht.psaclht1._psaasmgl\n#define psarsmsl                psaclht.psaclht1._psarsmsl\n#define psarsmxl                psaclht.psaclht1._psarsmxl\n#define psarsmal                psaclht.psaclht1._psarsmal\n#define psavpagl                psaclht.psaclht1._psavpagl\n#define psarsmcl                psaclht.psaclht1._psarsmcl\n#define psarvlk2                psaclht.psaclht1._psarvlk2\n#define psarsmex                 psaclht.psaclht2._psarsmex\n#define psatrcex                psaclht.psaclht2._psatrcex\n#define psaiosex                 psaclht.psaclht2._psaiosex\n#define psalks2                 psaclht.psaclht2._psalks2\n#define psarvlk4                psaclht.psaclht2._psarvlk4\n#define psalks3                 psaclht.psaclht3._psalks3\n#define psarvlk5                psaclht.psaclht3._psarvlk5\n#define psacmsl                 psaclht.psaclht4._psacmsl\n#define psalks4                psaclht.psaclht4._psalks4\n#define psarvlk6                psaclht.psaclht4._psarvlk6\n#define psacpuli                psahlhi.psaclhs._psacpuli\n#define psasum                psahlhi.psaclhs._psasum\n#define psarsmli                psahlhi.psaclhs._psarsmli\n#define psatrcei                psahlhi.psaclhs._psatrcei\n#define psaiosi                psahlhi.psaclhs._psaiosi\n#define psarsmci                psahlhi.psaclhs._psarsmci\n#define psarsmgi                psahlhi.psaclhs._psarsmgi\n#define psavfixi                psahlhi.psaclhs._psavfixi\n#define psaasmgi                psahlhi.psaclhs._psaasmgi\n#define psarsmsi                psahlhi.psaclhs._psarsmsi\n#define psarsmxi                psahlhi.psaclhs._psarsmxi\n#define psarsmai                psahlhi.psaclhs._psarsmai\n#define psavpagi                psahlhi.psaclhs._psavpagi\n#define psadspli                psahlhi.psaclhs._psadspli\n#define psaasmli                psahlhi.psaclhs._psaasmli\n#define psasalli                psahlhi.psaclhs._psasalli\n#define psaiosli                psahlhi.psaclhs._psaiosli\n#define psarsmdi                psahlhi.psaclhs._psarsmdi\n#define psaiouli                psahlhi.psaclhs._psaiouli\n#define psatpali                psahlhi.psaclhs._psatpali\n#define psasrmli                psahlhi.psaclhs._psasrmli\n#define psacmsli                psahlhi.psaclhs._psacmsli\n#define psalclli                psahlhi.psaclhs._psalclli\n#define psacstk                 psarsvt.psarsvte._psacstk\n#define psanstk                 psarsvt.psarsvte._psanstk\n#define psasstk                 psarsvt.psarsvte._psasstk\n#define psassav                 psarsvt.psarsvte._psassav\n#define psamstk                 psarsvt.psarsvte._psamstk\n#define psamsav                 psarsvt.psarsvte._psamsav\n#define psapstk                 psarsvt.psarsvte._psapstk\n#define psapsav                 psarsvt.psarsvte._psapsav\n#define psaestk1                psarsvt.psarsvte._psaestk1\n#define psaesav1                psarsvt.psarsvte._psaesav1\n#define psaestk2                psarsvt.psarsvte._psaestk2\n#define psaesav2                psarsvt.psarsvte._psaesav2\n#define psaestk3                psarsvt.psarsvte._psaestk3\n#define psaesav3                psarsvt.psarsvte._psaesav3\n#define psarstk                 psarsvt.psarsvte._psarstk\n#define psarsav                 psarsvt.psarsvte._psarsav\n#define psapcfb1                psapcfun._psapcfb1\n#define psapctrr                psapcfun._psapctrr\n#define psapcmt                psapcfun._psapcmt\n#define psapcp1                psapcfun._psapcp1\n#define psapcp2                psapcfun._psapcp2\n#define psapcde                psapcfun._psapcde\n#define psapclv                psapcfun._psapclv\n#define psapcp3                psapcfun._psapcp3\n#define psapcp4                psapcfun._psapcp4\n#define psapcpfr                psapcfun._psapcpfr\n#define psapcavr                psapcfun._psapcavr\n#define psapcdnv                psapcfun._psapcdnv\n#define psapclsr                psapcfun._psapclsr\n#define psanss                psamodew._psanss\n#define psaprsrb                psamodew._psaprsrb\n#define psamodeh                psamodew._psamodeh\n#define psamode                 psamodew._psamode\n#define psafzero                psadzero._psafzero\n#define psablsdi                psaclhse._psablsdi\n#define psaxdsi                psaclhse._psaxdsi\n#define psaxresi                psaclhse._psaxresi\n#define psaxqi                psaclhse._psaxqi\n#define psaeseti                psaclhse._psaeseti\n#define psaixsci                psaclhse._psaixsci\n#define psaixshi                psaclhse._psaixshi\n#define psaixdsi                psaclhse._psaixdsi\n#define psaixlli                psaclhse._psaixlli\n#define psauluti                psaclhse._psauluti\n#define psaixlri                psaclhse._psaixlri\n#define psawlmri                psaclhse._psawlmri\n#define psawlmqi                psaclhse._psawlmqi\n#define psacntxi                psaclhse._psacntxi\n#define psaregsi                psaclhse._psaregsi\n#define psalheb2                psaclhse._psalheb2\n#define psalheb3                psaclhse._psalheb3\n#define psatkn                  psastke._psatkn\n#define psaasd                  psastke._psaasd\n#define psasel                  psastke._psasel\n#define psadpkmi                psadxmsi.psadcr3i._psadpkmi\n#define psadsasi                psadxmsi.psadcr3i._psadsasi\n#define psadaxi                 psadxmsi.psadcr4i._psadaxi\n#define psadpasi                psadxmsi.psadcr4i._psadpasi\n#define psadpkm                 psadxmsv.psadcr3._psadpkm\n#define psadsas                 psadxmsv.psadcr3._psadsas\n#define psadax                  psadxmsv.psadcr4._psadax\n#define psadpas                 psadxmsv.psadcr4._psadpas\n#define psadtsav                _psa_union28._psadtsav\n#define psaff6c0                _psa_union28._psaff6c0\n#define psarv7e8                _psa_union29._psarv7e8\n#define psaff7e8                _psa_union29._psaff7e8\n#define psaus2st                _psa_union30._psa_struct27._psaus2st\n#define psacdsae                _psa_union30.psacdsav._psacdsae\n#define psacdsaf                _psa_union30.psacdsav._psacdsaf\n#define psacdsa0                _psa_union30.psacdsav._psacdsa0\n#define psacdsa1                _psa_union30.psacdsav._psacdsa1\n#define psatrgr0                psatrsav._psatrgr0\n#define psatrgr1                psatrsav._psatrgr1\n#define psatrgr2                psatrsav._psatrgr2\n#define psatrgr3                psatrsav._psatrgr3\n#define psatrgr4                psatrsav._psatrgr4\n#define psatrgr5                psatrsav._psatrgr5\n#define psatrgr6                psatrsav._psatrgr6\n#define psatrgr7                psatrsav._psatrgr7\n#define psatrgr8                psatrsav._psatrgr8\n#define psatrgr9                psatrsav._psatrgr9\n#define psatrgra                psatrsav._psatrgra\n#define psatrgrb                psatrsav._psatrgrb\n#define psatrgrc                psatrsav._psatrgrc\n#define psatrgrd                psatrsav._psatrgrd\n#define psatrgre                psatrsav._psatrgre\n#define psatrgrf                psatrsav._psatrgrf\n#define psagsav                 _psa_union31._psagsav\n#define psaff8a8                _psa_union31._psaff8a8\n#define psapcgra                psapcgab._psapcgra\n#define psapcgrb                psapcgab._psapcgrb\n#define psalkr0                 psalksa._psalkr0\n#define psalkr1                 psalksa._psalkr1\n#define psalkr2                 psalksa._psalkr2\n#define psalkr3                 psalksa._psalkr3\n#define psalkr4                 psalksa._psalkr4\n#define psalkr5                 psalksa._psalkr5\n#define psalkr6                 psalksa._psalkr6\n#define psalkr7                 psalksa._psalkr7\n#define psalkr8                 psalksa._psalkr8\n#define psalkr9                 psalksa._psalkr9\n#define psalkr10                psalksa._psalkr10\n#define psalkr11                psalksa._psalkr11\n#define psalkr12                psalksa._psalkr12\n#define psalkr13                psalksa._psalkr13\n#define psalkr14                psalksa._psalkr14\n#define psalkr15                psalksa._psalkr15\n#define psaslsa                 _psa_union32._psaslsa\n#define psaff950                _psa_union32._psaff950\n#define psajstsa                _psa_union33._psajstsa\n#define psaff998                _psa_union33._psaff998\n#define psaus2nd                _psa_union34._psa_struct28._psaus2nd\n#define psaslkr0                _psa_union34.psaslksa._psaslkr0\n#define psaslkr1                _psa_union34.psaslksa._psaslkr1\n#define psaslkr2                _psa_union34.psaslksa._psaslkr2\n#define psaslkr3                _psa_union34.psaslksa._psaslkr3\n#define psaslkr4                _psa_union34.psaslksa._psaslkr4\n#define psaslkr5                _psa_union34.psaslksa._psaslkr5\n#define psaslkr6                _psa_union34.psaslksa._psaslkr6\n#define psaslkr7                _psa_union34.psaslksa._psaslkr7\n#define psaslkr8                _psa_union34.psaslksa._psaslkr8\n#define psaslkr9                _psa_union34.psaslksa._psaslkr9\n#define psaslkra                _psa_union34.psaslksa._psaslkra\n#define psaslkrb                _psa_union34.psaslksa._psaslkrb\n#define psaslkrc                _psa_union34.psaslksa._psaslkrc\n#define psaslkrd                _psa_union34.psaslksa._psaslkrd\n#define psaslkre                _psa_union34.psaslksa._psaslkre\n#define psaslkrf                _psa_union34.psaslksa._psaslkrf\n\n#pragma pack(reset)\n", "mimetype": "text/x-c", "datatype": "ebcdic", "extension": ".x-c"}, "RARCSQL": {"ttr": 2439, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/rarcsql.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\n\n#ifndef  INCLUDE_RARCSQL\n#define  INCLUDE_RARCSQL\n\n#include \"mvsbase.hpp\"\n#include \"msgmgr.hpp\"\n#include \"misc.hpp\"\n#include \"merror.hpp\"\n#include <stdio.h>\n#include <stdlib.h>\n\nextern \"OS\" int  SQLASM(void);\n\nextern \"OS\" int  DSNALI(...);\nextern \"OS\" int  DSNTIAR(...);\nextern \"OS\" void DSNHLI(void *);\n\nconst int data_dim = 30;\nconst int data_len = 72;\n\n\ntypedef struct varchar\n\u00e4\n  short len;\n  char  value\u00c44096\u00dc;\n\u00fc VARCHAR;\n\ntypedef struct\n \u00e4\n  short error_len;\n  char error_text\u00c4data_dim\u00dc\u00c4data_len\u00dc;\n \u00fc ERROR_MESSAGE;\n\nenum  CallType\u00e4Connect,\n       Disconnect,\n       Commit,\n       Rollback,\n       Prepare,\n       Open,\n       Close,\n       Execute\u00fc;\n\n//  Communication :\n//  The constructor will call the Assembler init function with the LoadList\n//  pointer\n//  The Assembler init function loads the required DB2 modules and put the addresses into\n//  the LoadList vector\n//  Before every DB2 call (dsnhali dsnali etc ) there is a callback to the\n//  getLoadList routine to get the proper address\n\n\n\n\nclass ARCHSQL:public mERROR\n\u00e4\nprivate:\n  int rc;\n  void * tecb,* secb,* ribptr,* eibptr;\n  long retcode , reasoncode;\n  char function\u00c413\u00dc;\n  char ssnm\u00c45\u00dc;\n  char plan\u00c49\u00dc;\n  char reuse\u00c49\u00dc;\n  char collection\u00c419\u00dc;\n  char correlation_id\u00c413\u00dc;\n  char accounting_token\u00c423\u00dc;\n  char accounting_interval\u00c47\u00dc;\n  int  rrs;\n  int status;\n  ERROR_MESSAGE error_message;\n  void * loadlist\u00c48\u00dc;\npublic:\n  ARCHSQL();\n  \u00dfARCHSQL();\n  int call(CallType);\n  void setDynamicSQL(char *);\n  void * getLoadlist()\u00e4 return loadlist\u00c40\u00dc;\u00fc\n  void setSubSystem(char *n)\u00e4memcpy(ssnm,n,4);ssnm\u00c44\u00dc = 0;\u00fc\n  void setPlan(char * p)\u00e4memcpyp(plan,p,8,strlen(p),' '); plan\u00c48\u00dc = 0;\u00fc\n  void setCollection(char * p)\u00e4memcpyp(collection,p,8,strlen(p),' '); collection\u00c48\u00dc = 0;\u00fc\n  void setPlanName(char *n)\u00e4memcpy(plan,n,8);plan\u00c48\u00dc = 0;\u00fc // KRUBE 141100\n\u00fc;\n\nvoid  getUniqueKey(char *);\nvoid  getUniqueKEY(char *);\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SSIB": {"ttr": 2445, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(1)\n\nstruct ssib \u00e4\n  unsigned char  ssibid\u00c44\u00dc;    /* CONTROL BLOCK IDENTIFIER              */\n  short int      ssiblen;      /* SSIB LENGTH                           */\n  int            ssibpjes : 1, /* THIS SSIB IS USED TO START THE        */\n                 ssibnsvc : 1, /* NO SVC INDICATOR             @G38RP2Q */\n                          : 6;\n  unsigned char  ssibssid;     /* SUBSYSTEM IDENTIFIER. SET    @YC01974 */\n  unsigned char  ssibssnm\u00c44\u00dc;  /* Subsystem name to which a        @P1C */\n  unsigned char  ssibjbid\u00c48\u00dc;  /* Job Identifier or Subsystem name @P1C */\n  unsigned char  ssibdest\u00c48\u00dc;  /* DEFAULT USERID FOR SYSOUT DESTINATION */\n  int            ssibrsv1;     /* RESERVED                              */\n  int            ssibsuse;     /* RESERVED FOR SUBSYSTEM USAGE          */\n  \u00fc;\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SUBTASK": {"ttr": 2421, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/subtask.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\n\n#ifndef INCLUDE_SUBTASK\n#define INCLUDE_SUBTASK\n#include \"merror.hpp\"\n#include \"mvsbase.hpp\"\n#include \"msgmgr.hpp\"\n\n#if defined(ISIS_PF_MI) ]] defined (ISIS_PF_MU) //szm\n#define\t\t__alignmem\n#define\t\t__local\n#endif\n\n#ifndef PSA_CONST\n#define PSA_CONST\nconst  unsigned PSATOLD = 0x21c;\nconst  unsigned PSAAOLD = 0x224;\nconst  unsigned TCBFSA  = 0x70/4;\nconst  unsigned TCBUSER = 0xA8;\nconst  unsigned tcbuser = 0xa8;\nconst  unsigned SAVEr1  = 0x18/4;\nstatic unsigned POSTcode = 0x40000000;\nstatic unsigned WAITcode = 0x80000000;\n#endif\n\nclass SUBTASK;\nclass JOBENV;\n\n\ntypedef void       (*SUBTASK_FUNCTION)(void*);\ntypedef void       * addressP;\ninline addressP getASCB()\u00e4return(*(addressP*)PSAAOLD);\u00fc\ninline addressP getTCB()\u00e4return (*(addressP *)PSATOLD);\u00fc\n\n\nenum SUBTASK_STATUS\n\u00e4\n    Reset,\n    Started,\n    WaitingForWork,\n    WaitingForMain,\n    Working,\n    Stopping\n\u00fc;\ntypedef struct PROGRAM_ARGUMENTS \u00e4\n  short  arg_l;\n  char   arg_v\u00c41024\u00dc;\n  \u00fc programArguments;\n\n__alignmem class SUBTASK: public mERROR\n\u00e4\nprivate:\n  char * dll;\nprotected:\n  MessageTEXT * messageText;\n  JOBENV *      jobEnv;\n  void * TCB;\n  unsigned ECB;\n  unsigned StopECB;\n  unsigned WorkECB;\n  unsigned MainECB;\n  unsigned SuspendECB;\n  unsigned *  ecblist\u00c42\u00dc;\n  __local void(* address)(void);\n  void (*subrun)();\n  int R15 ;\n  SUBTASK_FUNCTION functions\u00c44\u00dc;\n  void  * arg\u00c44\u00dc;\n  int subtask_rc;\n  int suspendflag;\n  SUBTASK_STATUS status;\n  char   name\u00c49\u00dc;\n  char   subtaskposted;\n  char   first_start;\n  int    timeout;\npublic:\n  friend void run();\n  SUBTASK();\n  SUBTASK(char *);\n  SUBTASK(addressP,SUBTASK_FUNCTION,char*);\n  SUBTASK(int,char * *,char *,char *);\n  virtual \u00dfSUBTASK();\n  virtual int    attach();\n  virtual int    detach();\n  virtual int    callAsync(int);\n  virtual int    callSync(int);\n  virtual int    waitForSubtask();\n  virtual int    waitForEndOfSubtask();\n  virtual void   start();\n  virtual void   stop();\n  virtual void   chap(int);\n  virtual void   exit(int);\n  virtual int    isTerminated()\u00e4 return (ECB&0x7fffffff);\u00fc\n  SUBTASK_STATUS askStatus()\u00e4return status;\u00fc\n  MessageTEXT * getMessageText()\u00e4return messageText;\u00fc\n  JOBENV      * getJobEnv()\u00e4return jobEnv;\u00fc\n  addressP      getParam()\u00e4return(addressP(argV));\u00fc\n  addressP      getTCB()\u00e4return(addressP(TCB));\u00fc\n  int           getTimeout()\u00e4return timeout;\u00fc\n  char *        getDllName()\u00e4 return dll;\u00fc\n  void          setDllName(char *d)\u00e4 dll = d;\u00fc\n  char * *  argV;\n  int       argC;\n\nstatic addressP GetTCB()\u00e4return (*(addressP *)PSATOLD);\u00fc\nstatic addressP GetASCB()\u00e4return(*(addressP*)PSAAOLD);\u00fc\n\nprotected:\n  int    checkR15(char *);\n  void   init(char *);\n  void   error(char *);\n\u00fc;\n\n__alignmem class DLL_SUBTASK\n\u00e4\nprivate:\npublic:\n  SUBTASK * subtask;\n  DLL_SUBTASK(int,char * *,char *,char * = \"SUBRUN \");\n  \u00dfDLL_SUBTASK();\n  void      start()\u00e4subtask->start();\u00fc\n  void      stop()\u00e4subtask->stop();\u00fc\n  int       detach()\u00e4return(subtask->detach());\u00fc\n  addressP  getTCB()\u00e4return(subtask->getTCB());\u00fc\n\u00fc;\n\n__alignmem class MAIN_SUBTASK:public SUBTASK\n\u00e4\nprivate:\nmvsSTRING startmvsSTRING;\n void * plist\u00c41\u00dc;\nprogramArguments   argument;\nprogramArguments * argumentP;\npublic:\n MAIN_SUBTASK();\n MAIN_SUBTASK(int,char * *,char *);\n MAIN_SUBTASK(programArguments *,char * );\n virtual int  attach();\n\u00fc;\n\n#endif\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TCBFIX": {"ttr": 2395, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(1)\n\nstruct tcbfix \u00e4\n  struct \u00e4\n    double         _tcbfrs0; /* -     SAVE AREA FOR FLOATING POINT REGISTER 0 */\n    double         _tcbfrs2; /* -     SAVE AREA FOR FLOATING POINT REGISTER 2 */\n    double         _tcbfrs4; /* -     SAVE AREA FOR FLOATING POINT REGISTER 4 */\n    double         _tcbfrs6; /* -     SAVE AREA FOR FLOATING POINT REGISTER 6 */\n    \u00fc tcbfrs;\n  void          *tcbrbp;        /* -     ADDRESS OF THE RB FOR EXECUTING PROGRAM.  THIS   */\n  void          *tcbpie;        /* -     Address of SPIE/ESPIE Control Area          @P6C */\n  void          *tcbdeb;        /* -     ADDRESS OF THE DEB QUEUE                         */\n  void          *tcbtio;        /* -     ADDRESS OF THE TASK I/O TABLE (TIOT)             */\n  struct \u00e4\n    unsigned char  _tcbcmpf;    /* -     INDICATOR FLAGS                        */\n    unsigned char  _tcbcmpc\u00c43\u00dc; /* -   SYSTEM COMPLETION CODE IN FIRST 12 BITS, */\n    \u00fc tcbcmp;\n  struct \u00e4\n    int            _tcbmod91 : 1, /* - BOTH TESTRAN AND DECIMAL SIMULATOR ON A MOD 91  */\n                   _tcbnochk : 1, /* - SUPPRESS TAKING CHECKPOINTS FOR THIS STEP       */\n                   _tcbgrph  : 1, /* - GAM/SP ACTIVE FOR THIS TASK                     */\n                             : 1,\n                   _tcbtcpp  : 1, /* - TCAM POST-PENDING  (RORI)                       */\n                   _tcbtcp   : 1, /* - TEST TASK - USED BY TEST SVC                    */\n                   _tcboltep : 1, /* - OLTEP FUNCTIONS REQUIRE CLEANUP BEFORE ABNORMAL */\n                             : 1;\n    int            _tcbtrnb : 24; /* -   ADDRESS OF TESTRAN CONTROL CORE TABLE         */\n    \u00fc tcbtrn;\n  struct \u00e4\n    unsigned char  _filler1;      /* -     HIGH ORDER BYTE OF TCBMSS                   @H2C */\n    int            _tcbmssb : 24; /* -   SAME AS TCBMSS                              @L6C   */\n    \u00fc tcbmss;\n  int            tcbflag   : 4, /* - STORAGE PROTECTION KEY                               */\n                 tcbzero   : 4; /* - MUST BE ZERO                                         */\n  struct \u00e4\n    int            _tcbfa    : 1, /* - May be on when a task is being abnormally   @L6C   */\n                   _tcbfe    : 1, /* - On when the system is calling resource      @L6C   */\n                   _tcbfera  : 1, /* - ENTER ABEND ERASE ROUTINE WHEN IN CONTROL AGAIN    */\n                   _tcbnonpr : 1, /* - TASK IS NON-PREEMPTABLE                            */\n                   _tcbpdump : 1, /* - PREVENT DUMP INDICATOR                             */\n                   _tcbft    : 1, /* - TOP TASK IN TREE BEING ABTERMED                    */\n                   _tcbfs    : 1, /* - ABTERM DUMP COMPLETED                              */\n                   _tcbfx    : 1; /* - PROHIBIT QUEUEING OF ASYNCHRONOUS EXITS FOR        */\n    int            _tcbfoinp : 1, /* - THE TASK IS ABENDING AND IS IN THE PROCESS OF      */\n                   _tcbfsti  : 1, /* - SECOND JOB STEP INTERVAL HAS EXPIRED               */\n                   _tcbfabop : 1, /* - IF 1, THE SYSABEND DUMP DATA SET HAS BEEN OPENED   */\n                   _tcbfsmc  : 1, /* - TASK HAS ISSUED A SYSTEM-MUST-COMPLETE AND SET     */\n                   _tcbfjmc  : 1, /* - TASK HAS ISSUED A STEP-MUST-COMPLETE AND TURNED    */\n                   _tcbfdsop : 1, /* - SYSABEND OPEN FOR JOB STEP                         */\n                   _tcbfetxr : 1, /* - ETXR TO BE SCHEDULED                               */\n                   _tcbfts   : 1; /* - THIS TASK IS A MEMBER OF A TIME-SLICED GROUP       */\n    int            _tcbfsm   : 1, /* - ALL PSW'S IN SUPERVISOR STATE                      */\n                   _tcbrt1s  : 1, /* - RTM1 HAS INVOKED SLIP FOR A TASK IN EUT MODE.      */\n                   _tcbabtrm : 1, /* - ABTERM BIT TO PREVENT MULTIPLE ABENDS              */\n                   _tcbfxset : 1, /* - TCBFX WAS SET BY STATUS MCSTEP              @04A   */\n                             : 1,\n                   _tcbkey9  : 1, /* - TCB was attached using KEY=NINE and so is to be    */\n                   _tcbenqrm : 1, /* - ENQ/DEQ RESOURCE MANAGER HAS RECEIVED   @G381P9A   */\n                   _tcbdwsta : 1; /* - THIS TASK WAS DETACHED WITH STAE=YES OPTION        */\n    int            _tcbndump : 1, /* - ABDUMP NONDISPATCHABILITY INDICATOR                */\n                   _tcbser   : 1, /* - SER1 NONDISPATCHABILITY INDICATOR                  */\n                   _tcbrqena : 1, /* - I/O RQE'S EXHAUSTED                                */\n                   _tcbhndsp : 1, /* - TASK OR JOB STEP IS MOMENTARILY 'FROZEN' UNTIL     */\n                   _tcbuxndv : 1, /* - TASK IS TEMPORARILY NONDISPATCHABLE BECAUSE        */\n                   _tcbrbwf  : 1, /* - TOP RB IS IN WAIT STATE                 @G50DP9A   */\n                             : 1,\n                   _tcbondsp : 1; /* - TASK TERMINATING AND NONDISPATCHABLE BECAUSE       */\n    unsigned char  _tcbflgs5;     /* -     MORE NONDISPATCHABILITY FLAGS.   IF ANY BIT IN */\n    \u00fc tcbflgs;\n  char           tcblmp;        /* -   TASK LIMIT PRIORITY                                */\n  char           tcbdsp;        /* -   DISPATCHING PRIORITY FOR THIS TASK                 */\n  void          *tcblls;        /* -     ADDRESS OF LAST LOAD LIST ELEMENT (LLE) IN LOAD  */\n  void          *tcbjlb;        /* -     ADDRESS OF A JOBLIB DCB                          */\n  struct \u00e4\n    int            _tcbjpqf  : 1, /* - JPQ PURGE FLAG                                     */\n                             : 7;\n    int            _tcbjpqb : 24; /* -   LOW ORDER 24-BITS OF TCBJPQ             @G860PXB */\n    \u00fc tcbjpq;\n  struct \u00e4\n    int            _tcbgrs0;  /* -     SAVE AREA FOR GENERAL REGISTER 0  */\n    int            _tcbgrs1;  /* -     SAVE AREA FOR GENERAL REGISTER 1  */\n    int            _tcbgrs2;  /* -     SAVE AREA FOR GENERAL REGISTER 2  */\n    int            _tcbgrs3;  /* -     SAVE AREA FOR GENERAL REGISTER 3  */\n    int            _tcbgrs4;  /* -     SAVE AREA FOR GENERAL REGISTER 4  */\n    int            _tcbgrs5;  /* -     SAVE AREA FOR GENERAL REGISTER 5  */\n    int            _tcbgrs6;  /* -     SAVE AREA FOR GENERAL REGISTER 6  */\n    int            _tcbgrs7;  /* -     SAVE AREA FOR GENERAL REGISTER 7  */\n    int            _tcbgrs8;  /* -     SAVE AREA FOR GENERAL REGISTER 8  */\n    int            _tcbgrs9;  /* -     SAVE AREA FOR GENERAL REGISTER 9  */\n    int            _tcbgrs10; /* -     SAVE AREA FOR GENERAL REGISTER 10 */\n    int            _tcbgrs11; /* -     SAVE AREA FOR GENERAL REGISTER 11 */\n    int            _tcbgrs12; /* -     SAVE AREA FOR GENERAL REGISTER 12 */\n    int            _tcbgrs13; /* -     SAVE AREA FOR GENERAL REGISTER 13 */\n    int            _tcbgrs14; /* -     SAVE AREA FOR GENERAL REGISTER 14 */\n    int            _tcbgrs15; /* -     SAVE AREA FOR GENERAL REGISTER 15 */\n    \u00fc tcbgrs;\n  struct \u00e4\n    char           _filler2;      /* -   FIRST BYTE OF TCBFSA                    @G381P9A */\n    int            _tcbfsab : 24; /* -   ADDRESS OF THE FIRST PROBLEM PROGRAM SAVE AREA   */\n    \u00fc tcbfsa;\n  void          *tcbtcb;        /* -     Queue of TCBs in an address space.          @L5C */\n  int            tcbtqet   : 1, /* - IF ZERO, TASK TYPE TQE.                              */\n                          : 31;\n  struct \u00e4\n    unsigned char  _filler3;       /* -     HIGH ORDER BYTE OF TCBJSTCB             @G860PXB */\n    int            _tcbjstca : 24; /* -   LOW ORDER 24 BITS OF TCBJSTCB           @G860PXB   */\n    \u00fc tcbjstcb;\n  void          *tcbntc;        /* -     ADDRESS OF THE TCB FOR THE TASK PREVIOUSLY       */\n  void          *tcbotc;        /* -     ADDRESS OF THE TCB FOR THE TASK (THE ORIGINATING */\n  void          *tcbltc;        /* -     ADDRESS OF THE TCB FOR THE TASK LAST ATTACHED BY */\n  void          *tcbiqe;        /* -     ADDRESS OF AN INTERRUPTION QUEUE ELEMENT (IQE)   */\n  void          *tcbecb;        /* -     ADDRESS OF THE ECB THAT WILL BE POSTED BY THE    */\n  int            tcbtstsk  : 1, /* - SWAPPED TIME SHARING TASK (OS/VS1)                   */\n                 tcbstppr  : 1, /* - TASK SHOULD BE MADE NONDISPATCHABLE VIA TCBSTPP      */\n                 tcbatt    : 1, /* - TASK SHOULD NOT HAVE ATTENTION EXITS SCHEDULED       */\n                 tcbtiotg  : 1, /* - PURGE TGET/TPUT AFTER ATTENTION                      */\n                 tcbsmcp   : 1, /* - STATUS MCSTEP PENDING,TASK IS SUSPENDED     @L4A     */\n                           : 1,\n                 tcbdydsp  : 1, /* - M195 TASK IS MEMBER OF DYNAMIC DISPATCHING           */\n                 tcbcpubn  : 1; /* - FOR M195, ZERO MEANS I/O BOUND AND ONE MEANS         */\n  char           tcbstpct;      /* -   NUMBER OF SETTASK STARTS WHICH MUST BE             */\n  char           tcbtslp;       /* -   LIMIT PRIORITY OF TIME SHARING TASK                */\n  unsigned char  tcbtsdp;       /* -     DISPATCHING PRIORITY OF TIME SHARING TASK        */\n  void          *tcbrd;         /* POINTER TO DPQE MINUS 8 FOR THE JOB STEP               */\n  void          *tcbae;         /* LIST ORIGIN OF AQE(S) FOR THIS TASK                    */\n  struct \u00e4\n    int            _tcbstabe  : 1, /* - ABEND ENTERED BECAUSE OF ERROR IN STAE           */\n                   _tcbquies  : 1, /* - STAE INVOKED PURGE I/O ROUTINE WITH QUIESCE I/O  */\n                   _tcb33e    : 1, /* - A 33E ABEND HAS OCCURRED FOR TASK                */\n                   _tcbppsup  : 1, /* - 1=SUPERVISOR MODE,0=PROBLEM PROGRAM MODE         */\n                   _tcbhalt   : 1, /* - PURGE I/O ROUTINE DID NOT SUCCESSFULLY QUIESCE   */\n                   _tcbsynch  : 1, /* - SYNCH ISSUED BY ASIR TO SCHEDULE EXIT ROUTINE    */\n                              : 1,\n                   _tcbstcur  : 1; /* - STAE RECURSION VALID                      ICB443 */\n    int            _tcbstabb : 24; /* -   ADDRESS OF THE CURRENT STAE CONTROL BLOCK      */\n    \u00fc tcbstab;\n  struct \u00e4\n    int            _tcbsmfgf : 1, /* - IF ZERO, THE TCT CORE TABLE IS NOT TO BE       */\n                             : 7;\n    int            _tcbtctb : 24; /* -   ADDRESS OF THE TIMING CONTROL TABLE (TCT) IF */\n    \u00fc tcbtct;\n  void          *tcbuser;       /* -     A WORD AVAILABLE TO THE USER                     */\n  struct \u00e4\n    struct \u00e4\n      unsigned char  _tcbndsp0;     /* -     BYTE 0                                       */\n      unsigned char  _tcbndsp1;     /* -     BYTE 1                                       */\n      int            _tcbabd   : 1, /* - ABDUMP IS PROCESSING  (OS/VS1)                   */\n                     _tcbstpp  : 1, /* - TASK SET NONDISPATCHABLE BY SETTASK              */\n                     _tcbndsvc : 1, /* - TASK IS NONDISPATCHABLE BECAUSE SVC DUMP IS      */\n                     _tcbndts  : 1, /* - TASK IS NONDISPATCHABLE BECAUSE IT IS BEING      */\n                     _tcbiwait : 1, /* - TASK IS NONDISPATCHABLE DUE TO AN INPUT WAIT     */\n                     _tcbowait : 1, /* - TASK IS NONDISPATCHABLE DUE TO AN OUTPUT WAIT    */\n                     _tcbdss   : 1, /* - DYNAMIC SUPPORT SYSTEM (DSS) HAS SET THIS        */\n                     _tcbabe   : 1; /* - ABEND ROUTINE WAS ENTERED FOR THIS TASK WHILE    */\n      int            _tcbljsnd : 1, /* - TASK IS ABENDING AND NONDISPATCHABLE BECAUSE IT  */\n                     _tcbndnyi : 1, /* - RCT TASK IS NONDISPATCHABLE BECAUSE ADDRESS @P4A */\n                     _tcbsrbnd : 1, /* - TCB NONDISPATCHABLE BECAUSE SRB'S ARE STOPPED    */\n                     _tcbslper : 1, /* - SET NONDISPATCHABLE SO THAT SLIP/PER CAN ALTER   */\n                     _tcbs3mr  : 1, /* - STAGE 3 EXIT EFFECTOR MUST RUN TO SYNCHRONIZE    */\n                     _tcbareq  : 1, /* - TSO AUTHORIZED REQUEST PROCESSING ACTIVE         */\n                     _tcbndsmf : 1, /* - Indicates task is stopped because its CPU   @03A */\n                     _tcbndint : 1; /* - INITIATOR SETS THIS BIT TO PREVENT JOB STEP      */\n      \u00fc tcbndsp;\n    \u00fc tcbscndy;\n  int            tcbmdids;      /* -     RESERVED FOR MODEL-DEPENDENT SUPPORT AND FOR     */\n  struct \u00e4\n    unsigned char  _tcbrecde;      /* -     ABEND RECURSION BYTE                      ICB456 */\n    int            _tcbjscbb : 24; /* -   ADDRESS OF THE JOB STEP CONTROL BLOCK              */\n    \u00fc tcbjscb;\n  void          *tcbssat;       /* -     ADDRESS OF THE SUBSYSTEM AFFINITY TABLE @G381P9A */\n  void          *tcbiobrc;      /* -     ADDRESS OF IOB RESTORE CHAIN FOR I/O QUIESCED    */\n  void          *tcbexcpd;      /* -     ADDRESS OF EXCP DEBUG AREA                YM4297 */\n  struct \u00e4\n    unsigned char  _filler4;       /* -     RESERVED.                                   @H2C */\n    int            _tcbext1a : 24; /* -   ADDRESS OF OS-OS/VS COMMON TCB EXTENSION  ICB311   */\n    \u00fc tcbext1;\n  struct \u00e4\n    unsigned char  _tcbndsp4;     /* -     SECONDARY NONDISPATCHABILITY FLAGS COMMON TO */\n    unsigned char  _tcbndsp5;     /* -     SECONDARY NONDISPATCHABILITY FLAGS UNIQUE TO */\n    int            _tcbrv    : 1, /* - THE PARTITION IS FIXED IN REAL STORAGE.  VIRTUAL */\n                   _tcbpie17 : 1, /* - PAGE FAULT INTERRUPT IS TO BE PASSED TO THE      */\n                   _tcbcpu   : 1, /* - TASK IS CPU-BOUND MEMBER OF AUTOMATIC PRIORITY   */\n                   _tcbspvlk : 1, /* - TASK SCHEDULED FOR ABTERM WHILE OWNING           */\n                             : 1,\n                   _tcbmigr  : 1, /* - REGION SELECTED FOR MIGRATION FROM PRIMARY       */\n                   _tcbapg   : 1, /* - TASK IS IN AUTOMATIC PRIORITY GROUP (APG)        */\n                   _tcbntjs  : 1; /* - JOB STEP TASK BUT NOT HIGHEST IN FAILING TREE    */\n    int            _tcbgpecb : 1, /* - TASK IS IN AN ECB WAIT FOR A GETPART             */\n                             : 1,\n                   _tcbsvcsp : 1, /* - IF 1, SVC SCREENING IS TO BE PROPAGATED TO       */\n                   _tcbstack : 1, /* - SET IN JOB STEP TCB TO INDICATE THAT A TASK IN   */\n                   _tcbsvcs  : 1, /* - IF 1, SVC SCREENING IS REQUIRED FOR THE TASK.    */\n                   _tcbrstsk : 1, /* - RESIDENT SYSTEM TASK                             */\n                   _tcbadmp  : 1, /* - ALL OTHER TASKS IN JOB STEP HAVE BEEN SET        */\n                   _tcbgtofm : 1; /* - GENERALIZED TRACE FACILITY (GTF) TRACING HAS     */\n    \u00fc tcbbits;\n  unsigned char  tcbdar;        /* -     DAMAGE ASSESSMENT ROUTINE (DAR) FLAGS            */\n  unsigned char  tcbrsv37;      /* -     RESERVED FOR USER                                */\n  char           tcbsysct;      /* -   NUMBER OF OUTSTANDING SYSTEM-MUST-COMPLETE         */\n  char           tcbstmct;      /* -   NUMBER OF OUTSTANDING STEP-MUST-COMPLETE           */\n  struct \u00e4\n    unsigned char  _filler5;       /* -     FIRST BYTE OF TCBEXT2                   @G381P9A */\n    int            _tcbext2a : 24; /* -   ADDRESS OF OS/VS1 - OS/VS2 COMMON EXTENSION        */\n    \u00fc tcbext2;\n  int            tcbaecb;       /* -     ABEND ECB.  POSTED BY A MOTHER TASK IN RTM2      */\n  void          *tcbxsb;        /* -     ADDRESS OF CURRENT XSB FOR TASK.        @G381P9A */\n  void          *tcbback;       /* -     ADDRESS OF PREVIOUS TCB ON READY QUEUE.  ZERO    */\n  void          *tcbrtwa;       /* -     POINTER TO CURRENT RTM2 WORK AREA                */\n  int            tcbnssqa  : 1, /* - NORMAL STACK SAVED IN SQA INDICATOR.    @G38CPXB     */\n                          : 31;\n  void          *tcbxlas;       /* -     ASCB ADDRESS OF THE CML LOCK HELD WHILE @G381PXU */\n  unsigned char  tcbabcur;      /* -     ABEND RECURSION BYTE                             */\n  char           tcbfjmct;      /* -   NUMBER OF OUTSTANDING STEP-MUST-COMPLETE@YA02725   */\n  unsigned char  tcbtid;        /* -     TASK ID NUMBER                            ICB374 */\n  int            tcbdying  : 1, /* - IF ON, INDICATES THAT THE SYSTEM HAS        @P1A     */\n                 tcbnoirb  : 1, /* - If on, IRBs will not be queued to this TCB. @08A     */\n                           : 6;\n  struct \u00e4\n    int            _tcbactiv : 1, /* - BIT ON MEANS THIS TCB IS CURRENTLY ACTIVE ON A     */\n                   _tcbs3a   : 1, /* - STAGE 3 EXIT EFFECTOR/RESUME/TCTL INTERSECT FLAG   */\n                   _tcbllreq : 1, /* - TASK REQUESTED LOCAL LOCK               @G50DP9A   */\n                             : 1,\n                   _tcbtdorm : 1, /* - Turned on to detect dormant Tasks by        @06A   */\n                             : 3;\n    int            _tcbcmlf  : 1, /* - CML RESOURCE MANAGER PROCESSING         @G381P9A   */\n                   _tcbllnew : 1, /* - Lock Manager has given this task the local  @L5A   */\n                             : 6;\n    short int      _tcbccpvi;     /* -     ID OF THE CURRENT CPU RUNNING THIS TASK.  USED */\n    \u00fc tcbxsct;\n  struct \u00e4\n    unsigned char  _filler6;      /* -     RESERVED.                                   @H2C */\n    int            _tcbfoea : 24; /* -   ADDRESS OF FIRST FIX OWNERSHIP ELEMENT (FOE)       */\n    \u00fc tcbfoe;\n  void          *tcbswa;        /* -     ADDRESS OF FIRST SCHEDULER WORK AREA (SWA) SPQE  */\n  void          *tcbstawa;      /* -     ESTAE ROUTINE WORK AREA POINTER         @Z40FP9A */\n  unsigned char  tcbtcbid\u00c44\u00dc;   /* -   CONTAINS BLOCK ID - 'TCB '                         */\n  void          *tcbrtm12;      /* -     POINTER TO PARAMETER AREAS PASSED FROM RTM1 TO   */\n  struct \u00e4\n    unsigned char  _tcbscbky;     /* -     KEY IN WHICH SYNCH IS TO PASS CONTROL          */\n    int            _tcbeterm : 1, /* - ESTAE EXIT ENTERED WITH TERM OPTION                */\n                   _tcbstafx : 1, /* - SERIALIZED BY TCB ACTIVE                @ZA30005   */\n                             : 6;\n    char           _tcbertyp;     /* -   TYPE OF ERROR CAUSING ENTRY TO THE RTM.  SET     */\n    char           _tcbmode;      /* -   MASK INDICATING MODE OF SYSTEM AT TIME OF ERROR. */\n    \u00fc tcbestae;\n  void          *tcbukysp;      /* -     ADDRESS OF SPQE'S FOR SUBPOOLS 229 AND 230       */\n  unsigned char  tcbr272\u00c42\u00dc;    /* -   RESERVED.                                   @L5C   */\n  unsigned char  tcbaffn\u00c42\u00dc;    /* -   CPU AFFINITY INDICATOR                             */\n  int            tcbeotfm  : 1, /* - END OF TASK FLAG FOR FREEMAIN.  SET TO 1 BY TASK     */\n                 tcbrtm1e  : 1, /* - RTM1 IS CURRENTLY PROCESSING EUT FRR'S  @G381PXU     */\n                 tcbndios  : 1, /* - TASK HAS BEEN SET NONDISPATCHABLE VIA STATUSND       */\n                 tcbpgnly  : 1, /* - SET BY RTM2 TO INDICATE ONLY PURGE PHASE TO BE       */\n                 tcbrtm2   : 1, /* - SET BY RTM2 TO INDICATE RTM2 HAS BEEN ENTERED        */\n                 tcbeot    : 1, /* - SET BY RTM2 TO INDICATE TO EXIT THAT END OF TASK     */\n                 tcbsattn  : 1, /* - SYNCHRONIZATION OF ATTENTION INTERRUPT REQUIRED      */\n                 tcbllh    : 1; /* - Task was interrupted holding the local lock.         */\n  int            tcbcncb   : 1, /* - SET BY RTM2 IN THE JOB STEP TCB WHEN IT HAS BEEN     */\n                 tcbfmw    : 1, /* - MOTHER WAITING FLAG.  TURNED ON IN A SUBTASK IN      */\n                 tcbfdw    : 1, /* - DAUGHTER WAITING FLAG.  TURNED ON IN A MOTHER        */\n                 tcbfprap  : 1, /* - SET BY RTM2 TO PREVENT PERCOLATION TO THE TASK       */\n                 tcbrt1nr  : 1, /* - IF 1, ERROR PROPAGATED FROM RTM1 IS         @D1A     */\n                 tcbecbnv  : 1, /* - IF 1, ECB POINTED TO BY TCBECB IS NOT TO BE          */\n                 tcbsspc   : 1, /* - STATUS STOP PENDING,TASK HOLDS A CML LOCK            */\n                 tcbrtm1c  : 1; /* - A TASK WITH EUT FRRS HAS BEEN CANCELLED. THIS        */\n  int            tcbexp    : 1, /* - EXPANDED VERSION OF THE TCB             @ZA72701     */\n                 tcbnctl   : 1, /* - IF 1, INDICATES USER PROGRAM IS LOADED  @ZA84893     */\n                 tcbrtmde  : 1, /* - DETACH HAS BEEN CALLED BY RTM           @ZA93650     */\n                           : 5;\n  int            tcbpmc    : 1, /* - IF 1, INDICATES TASK IS IN PROCESS MUST     @D2C     */\n                 tcbnojlb  : 1, /* - If 1, indicates that TCBJLB is not to be used        */\n                           : 6;\n  void          *tcbrpt;        /* -     ADDRESS OF RADIX PARTITION TREE FOR LOCAL        */\n  void          *tcbvat;        /* -     ADDRESS OF THE VAT (VSAM). THERE IS ONE @ZA63673 */\n  void          *tcbswasa;      /* -     ADDRESS OF SAVE AREA USED BY SWA MANAGER         */\n  void          *tcbsvca2;      /* -     ADDRESS OF SVC SCREENING TABLE          @G50EP9A */\n  void          *tcberd;        /* EXTENDED REGION DESCRIPTOR.             @G860PXU       */\n  void          *tcbeae;        /* EXTENDED ALLOCATED ELEMENT QUEUE        @G860PXU       */\n  void          *tcbarc;        /* REASON CODE FOR ABEND                   @G860PXB       */\n  int            tcbgres;       /* -     TASK GLOBAL RESOURCE COUNT - NUMBER OF GLOBAL    */\n  void          *tcbstcb;       /* ADDRESS OF STCB                             @H2C       */\n  unsigned char  tcbttime\u00c48\u00dc;   /* -  TCB'S ACCUMULATED CPU TIME                  @01A    */\n  void          *tcbcelap;      /* -  COMMON EXECUTION LIBRARY ANCHOR POINTER     @02A    */\n  unsigned char  tcbr148\u00c42\u00dc;    /* -  RESERVED                                    @05C    */\n  int            tcbpvict  : 1, /* - If 1, indicates that the associated task    @05M     */\n                 tcbpking  : 1, /* - If 1, indicates that the associated Task has         */\n                 tcbpcand  : 1, /* - If 1, indicates that this Task has requested         */\n                 tcbptop   : 1, /* - If 1, indicates that this Task is at the top         */\n                           : 4;\n  unsigned char  tcblevel;      /* -     LEVEL NUMBER OF TCB                     @ZA72701 */\n  void          *tcbbdt;        /* -     ADDRESS OF BDT'S GSD LINKAGE            @ZA72701 */\n  int            tcbndaxp;      /* -     COUNT OF NUMBER OF CONSECUTIVE DISPATCHES   @H1A */\n  void          *tcbsenv;       /* -     ADDRESS OF ACEE FOR THE TASK.               @H1A */\n  \u00fc;\n\n#define tcbfrs0  tcbfrs._tcbfrs0\n#define tcbfrs2  tcbfrs._tcbfrs2\n#define tcbfrs4  tcbfrs._tcbfrs4\n#define tcbfrs6  tcbfrs._tcbfrs6\n#define tcbcmpf  tcbcmp._tcbcmpf\n#define tcbcmpc  tcbcmp._tcbcmpc\n#define tcbmod91   tcbtrn._tcbmod91\n#define tcbnochk   tcbtrn._tcbnochk\n#define tcbgrph   tcbtrn._tcbgrph\n#define tcbtcpp   tcbtrn._tcbtcpp\n#define tcbtcp   tcbtrn._tcbtcp\n#define tcboltep   tcbtrn._tcboltep\n#define tcbtrnb  tcbtrn._tcbtrnb\n#define tcbmssb  tcbmss._tcbmssb\n#define tcbfa tcbflgs._tcbfa\n#define tcbfe tcbflgs._tcbfe\n#define tcbfera tcbflgs._tcbfera\n#define tcbnonpr tcbflgs._tcbnonpr\n#define tcbpdump tcbflgs._tcbpdump\n#define tcbft tcbflgs._tcbft\n#define tcbfs tcbflgs._tcbfs\n#define tcbfx tcbflgs._tcbfx\n#define tcbfoinp tcbflgs._tcbfoinp\n#define tcbfsti tcbflgs._tcbfsti\n#define tcbfabop tcbflgs._tcbfabop\n#define tcbfsmc tcbflgs._tcbfsmc\n#define tcbfjmc tcbflgs._tcbfjmc\n#define tcbfdsop tcbflgs._tcbfdsop\n#define tcbfetxr tcbflgs._tcbfetxr\n#define tcbfts tcbflgs._tcbfts\n#define tcbfsm tcbflgs._tcbfsm\n#define tcbrt1s tcbflgs._tcbrt1s\n#define tcbabtrm tcbflgs._tcbabtrm\n#define tcbfxset tcbflgs._tcbfxset\n#define tcbkey9 tcbflgs._tcbkey9\n#define tcbenqrm tcbflgs._tcbenqrm\n#define tcbdwsta tcbflgs._tcbdwsta\n#define tcbndump tcbflgs._tcbndump\n#define tcbser tcbflgs._tcbser\n#define tcbrqena tcbflgs._tcbrqena\n#define tcbhndsp tcbflgs._tcbhndsp\n#define tcbuxndv tcbflgs._tcbuxndv\n#define tcbrbwf tcbflgs._tcbrbwf\n#define tcbondsp tcbflgs._tcbondsp\n#define tcbflgs5 tcbflgs._tcbflgs5\n#define tcbjpqf tcbjpq._tcbjpqf\n#define tcbjpqb  tcbjpq._tcbjpqb\n#define tcbgrs0  tcbgrs._tcbgrs0\n#define tcbgrs1  tcbgrs._tcbgrs1\n#define tcbgrs2  tcbgrs._tcbgrs2\n#define tcbgrs3  tcbgrs._tcbgrs3\n#define tcbgrs4  tcbgrs._tcbgrs4\n#define tcbgrs5  tcbgrs._tcbgrs5\n#define tcbgrs6  tcbgrs._tcbgrs6\n#define tcbgrs7  tcbgrs._tcbgrs7\n#define tcbgrs8  tcbgrs._tcbgrs8\n#define tcbgrs9  tcbgrs._tcbgrs9\n#define tcbgrs10 tcbgrs._tcbgrs10\n#define tcbgrs11 tcbgrs._tcbgrs11\n#define tcbgrs12 tcbgrs._tcbgrs12\n#define tcbgrs13 tcbgrs._tcbgrs13\n#define tcbgrs14 tcbgrs._tcbgrs14\n#define tcbgrs15 tcbgrs._tcbgrs15\n#define tcbfsab  tcbfsa._tcbfsab\n#define tcbjstca tcbjstcb._tcbjstca\n#define tcbstabe tcbstab._tcbstabe\n#define tcbquies tcbstab._tcbquies\n#define tcb33e tcbstab._tcb33e\n#define tcbppsup tcbstab._tcbppsup\n#define tcbhalt tcbstab._tcbhalt\n#define tcbsynch tcbstab._tcbsynch\n#define tcbstcur tcbstab._tcbstcur\n#define tcbstabb tcbstab._tcbstabb\n#define tcbsmfgf tcbtct._tcbsmfgf\n#define tcbtctb  tcbtct._tcbtctb\n#define tcbndsp0 tcbscndy.tcbndsp._tcbndsp0\n#define tcbndsp1 tcbscndy.tcbndsp._tcbndsp1\n#define tcbabd tcbscndy.tcbndsp._tcbabd\n#define tcbstpp tcbscndy.tcbndsp._tcbstpp\n#define tcbndsvc tcbscndy.tcbndsp._tcbndsvc\n#define tcbndts tcbscndy.tcbndsp._tcbndts\n#define tcbiwait tcbscndy.tcbndsp._tcbiwait\n#define tcbowait tcbscndy.tcbndsp._tcbowait\n#define tcbdss tcbscndy.tcbndsp._tcbdss\n#define tcbabe tcbscndy.tcbndsp._tcbabe\n#define tcbljsnd tcbscndy.tcbndsp._tcbljsnd\n#define tcbndnyi tcbscndy.tcbndsp._tcbndnyi\n#define tcbsrbnd tcbscndy.tcbndsp._tcbsrbnd\n#define tcbslper tcbscndy.tcbndsp._tcbslper\n#define tcbs3mr tcbscndy.tcbndsp._tcbs3mr\n#define tcbareq tcbscndy.tcbndsp._tcbareq\n#define tcbndsmf tcbscndy.tcbndsp._tcbndsmf\n#define tcbndint tcbscndy.tcbndsp._tcbndint\n#define tcbrecde tcbjscb._tcbrecde\n#define tcbjscbb tcbjscb._tcbjscbb\n#define tcbext1a tcbext1._tcbext1a\n#define tcbndsp4 tcbbits._tcbndsp4\n#define tcbndsp5 tcbbits._tcbndsp5\n#define tcbrv tcbbits._tcbrv\n#define tcbpie17 tcbbits._tcbpie17\n#define tcbcpu tcbbits._tcbcpu\n#define tcbspvlk tcbbits._tcbspvlk\n#define tcbmigr tcbbits._tcbmigr\n#define tcbapg tcbbits._tcbapg\n#define tcbntjs tcbbits._tcbntjs\n#define tcbgpecb tcbbits._tcbgpecb\n#define tcbsvcsp tcbbits._tcbsvcsp\n#define tcbstack tcbbits._tcbstack\n#define tcbsvcs tcbbits._tcbsvcs\n#define tcbrstsk tcbbits._tcbrstsk\n#define tcbadmp tcbbits._tcbadmp\n#define tcbgtofm tcbbits._tcbgtofm\n#define tcbext2a tcbext2._tcbext2a\n#define tcbactiv tcbxsct._tcbactiv\n#define tcbs3a tcbxsct._tcbs3a\n#define tcbllreq tcbxsct._tcbllreq\n#define tcbtdorm tcbxsct._tcbtdorm\n#define tcbcmlf tcbxsct._tcbcmlf\n#define tcbllnew tcbxsct._tcbllnew\n#define tcbccpvi tcbxsct._tcbccpvi\n#define tcbfoea  tcbfoe._tcbfoea\n#define tcbscbky tcbestae._tcbscbky\n#define tcbeterm tcbestae._tcbeterm\n#define tcbstafx tcbestae._tcbstafx\n#define tcbertyp tcbestae._tcbertyp\n#define tcbmode  tcbestae._tcbmode\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TIOT1": {"ttr": 2377, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*******************************************************************************\n* Copyright ISIS Papyrus Technologies Limited\n*-------------------------------------------------------------------------------\n* File:              $Source: /data/cvs/src/mvs/tiot1.hpp,v $\n*-------------------------------------------------------------------------------\n* Description:\n*   ???\n*******************************************************************************/\n\n\n\n#if  defined(_CL4)== 0\n#define _CL4\ntypedef char CL4\u00c44\u00dc;\n#endif\n\n#if defined(_AL3) == 0\n#define _AL3\ntypedef struct\n\u00e4\n  char BF\u00c43\u00dc;\n\u00fc AL3;\n#endif\n\n#if defined(_CL3) == 0\n#define _CL3\ntypedef char CL3\u00c43\u00dc;\n#endif\n\n#if defined(_CL2) == 0\n#define _CL2\ntypedef char CL2\u00c42\u00dc;\n#endif\n\n#if defined(_CL16) == 0\n#define _CL16\ntypedef char CL16\u00c416\u00dc;\n#endif\n\n#if defined(_CL8) == 0\n#define _CL8\ntypedef char CL8\u00c48\u00dc;\n#endif\n\n/*\n#define SSIBPJES 0x80 */                /*              THIS SSIB IS USED TO START THE          */\n#define SSIBNSVC 0x40                   /*              NO SVC INDICATOR             @G38RP2Q   */\n#define SSIBUNKN 0x00                   /*              UNKNOWN SUBSYSTEM ID         @YA01974   */\n#define SSIBJES2 0x02                   /*              JES2 SUBSYSTEM ID            @YA01974   */\n#define SSIBJES3 0x03                   /*              JES3 SUBSYSTEM ID            @YA01974   */\n#define FLCSILCB 0x07                   /* -        SIGNIFICANT BITS IN ILC FIELD - LAST        */\n#define FLCPILCB 0x07                   /* -        SIGNIFICANT BITS IN ILC FIELD - LAST        */\n#define PSAPIPER 0x80                   /* -        PER INTERRUPT OCCURRED             MDC089   */\n#define PSAPIMC 0x40                    /* -        MONITOR CALL INTERRUPT OCCURRED    MDC090   */\n#define PSAPIPC 0x3F                    /* -        AN UNSOLICITED PROGRAM CHECK HAS            */\n#define FLCTEAXM 0x80                   /*   -      IF 0 FLCTEA IS RELATIVE TO THE PRIMARY      */\n#define FLCSOPI 0x04                    /*   -      SUPPRESSION ON PROTECTION FLAG       @LQA   */\n#define FLCTSTDP 0x00                   /*   -      IF 1, THE PRIMARY STD WAS USED.      @L8A   */\n#define FLCTSTDA 0x01                   /*   -      IF 1, THE STD WAS AR QUALIFIED.      @L8A   */\n#define FLCTSTDS 0x02                   /*   -      IF 1, THE SECONDARY STD WAS USED.    @L8A   */\n#define FLCTSTDH 0x03                   /*   -      IF 1, THE HOME STD WAS USED.         @L8A   */\n#define PSAIO 0x80                      /* -        I/O FLIH                                    */\n#define PSASVC 0x40                     /* -        SVC FLIH                                    */\n#define PSAEXT 0x20                     /* -        EXTERNAL FLIH                               */\n#define PSAPI 0x10                      /* -        PROGRAM CHECK FLIH                          */\n#define PSALOCK 0x08                    /* -        LOCK ROUTINE                                */\n#define PSADISP 0x04                    /* -        DISPATCHER                                  */\n#define PSATCTL 0x02                    /* -        TCTL RECOVERY FLAG  (MDC310)     @Z40FP9A   */\n#define PSATYPE6 0x01                   /* -        TYPE 6 SVC IN CONTROL  (MDC311)  @Z40FP9A   */\n#define PSAIPCRI 0x80                   /* -        REMOTE IMMEDIATE SIGNAL SERVICE ROUTINE     */\n#define PSASVCR 0x40                    /* -        SUPER FRR USES FOR SVC FLIH      @ZMC3227   */\n#define PSASVCRR 0x20                   /* -        SVC RECOVERY RECURSION INDICATOR.           */\n#define PSAACR 0x04                     /* -        AUTOMATIC CPU RECONFIGURATION (ACR) IN      */\n#define PSARTM 0x02                     /* -        RECOVERY TERMINATION MONITOR (RTM) IN       */\n#define PSALCR 0x01                     /* -        USED BY RTM TO SERIALIZE CALLS OF    @L5C   */\n#define PSAIOSUP 0x80                   /* -        IF ON, A MAINLINE IOS COMPONENT SUCH AS     */\n#define PSASPR 0x10                     /* -        SUPER FRR IS ACTIVE  (MDC305)    @ZA02995   */\n#define PSAESTA 0x08                    /* -        SVC 60 RECOVERY ROUTINE ACTIVE              */\n#define PSARSM 0x04                     /* -        REAL STORAGE MANAGER (RSM) ENTERED FOR      */\n#define PSAULCMS 0x02                   /* -        LOCK MANAGER UNCONDITIONAL LOCAL OR         */\n#define PSASLIP 0x01                    /* -        IEAVTSLP RECURSION CONTROL BIT              */\n#define PSALDWT 0x80                    /* -        BLWLDWT IS IN CONTROL TO LOAD A      @LHC   */\n#define PSASMF 0x40                     /* -        SMF SUSPEND/RESET     (MDC599)   @G743PBB   */\n#define PSAESAR 0x20                    /* -        SUPERVISOR ANALYSIS ROUTER IS ACTIVE @L5C   */\n#define PSAAXP 0x80                     /*          INDICATES AXP                        @H1A   */\n#define PSAILSIO 0x80                   /*   -      THE I/O FLIH IS USING THE            @L9A   */\n#define PSAILSEX 0x40                   /*   -      THE EXTERNAL FLIH IS USING THE       @L9A   */\n#define PSAILSPC 0x20                   /*   -      THE PROGRAM FLIH IS USING THE        @L9A   */\n#define PSAILSDS 0x10                   /*   -      THE DISPATCHER IS USING THE          @L9A   */\n#define PSAILSRS 0x08                   /*   -      THE RESTART FLIH IS USING THE        @L9A   */\n#define PSAILSOR 0x04                   /*   -      EXIT IS USING THE INTERRUPT HANDLER  @LAA   */\n#define PSAILST6 0x02\n/*   -      TYPE 6 SVC IS USING THE INTERRUPT    @D2A   */\n#define PSAILSLK 0x01                   /*   -      THE INTERRUPT HANDLER LINKAGE STACK  @D4A   */\n#define PSAAEIT 0x80                    /*   -      ADDRESSING ENVIRONMENT IS IN         @LOA   */\n#define PSAPIOM 0x02                    /*          INPUT/OUTPUT INTERRUPT MASK      @G860PXK   */\n#define PSAPEXM 0x01                    /*          EXTERNAL INTERRUPT MASK          @G860PXK   */\n#define PSALKS1 19                      /*             COUNT OF LOCKS IN CLHT1          @G860PXK   */\n#define PSARSMEX 0x80                   /* -        BIT 0 OF PSARSML. IF ON, THE RSM            */\n#define PSATRCEX 0x80                   /* -        BIT 0 OF PSATRCEL. IF ON THE TRACE          */\n#define PSAIOSEX 0x80                   /* -        BIT 0 OF PSAIOSL. IF ON THE IOS      @D3A   */\n#define PSALKS2 3                       /*              COUNT OF LOCKS IN CLHT2              @D3C   */\n#define PSALKS3 1                       /*              COUNT OF LOCKS IN CLHT3          @G860PXH   */\n#define PSALKS4 2                       /*              COUNT OF LOCKS IN CLHT4          @G860PXH   */\n#define PSACPULI 0x80                   /* -        CPU LOCK INDICATOR               @G860PXH   */\n#define PSASUM 0x10                     /* -        SUMMARY BIT. IF ON, AT LEAST ONE     @LDA   */\n#define PSARSMLI 0x08                   /* -        RSM LOCK INDICATOR               @G860PXH   */\n#define PSATRCEI 0x04                   /* -        TRACE LOCK INDICATOR             @G860PXH   */\n#define PSAIOSI 0x02                    /* -        IOS LOCK INDICATOR                   @D3A   */\n#define PSARSMCI 0x10                   /* -        RSM COMMON LOCK INDICATOR        @G860PXK   */\n#define PSARSMGI 0x08                   /* -        RSM GLOBAL LOCK INDICATOR        @G860PXH   */\n#define PSAVFIXI 0x04                   /* -        VSM FIX LOCK INDICATOR           @G860PXH   */\n#define PSAASMGI 0x02                   /* -        ASM GLOBAL LOCK INDICATOR        @G860PXH   */\n#define PSARSMSI 0x01                   /* -        RSM STEAL LOCK INDICATOR         @G860PXH   */\n#define PSARSMXI 0x80                   /* -        RSM CROSS MEMORY LOCK INDICATOR  @G860PXH   */\n#define PSARSMAI 0x40                   /* -        RSM ADDRESS SPACE LOCK INDICATOR @G860PXH   */\n#define PSAVPAGI 0x20                   /* -        VSM PAGE LOCK INDICATOR          @G860PXH   */\n#define PSADSPLI 0x10                   /* -        DISPATCHER LOCK INDICATOR                   */\n#define PSAASMLI 0x08                   /* -        ASM LOCK INDICATOR  (MDC388)     @G50EP9A   */\n#define PSASALLI 0x04                   /* -        SPACE ALLOCATION LOCK INDICATOR             */\n#define PSAIOSLI 0x02                   /* -        IOS SYNCHRONIZATION LOCK INDICATOR          */\n#define PSARSMDI 0x01                   /* -        RSM DATA SPACE LOCK INDICATOR        @LBA   */\n#define PSAIOULI 0x80                   /* -        IOS UCB LOCK INDICATOR  (MDC393) @G50EP9A   */\n#define PSATPALI 0x08                   /* -        TPACBDEB LOCK INDICATOR (MDC397) @G50EP9A   */\n#define PSASRMLI 0x04                   /* -        SYSTEM RESOURCE MANAGER (SRM) LOCK          */\n#define PSACMSLI 0x02                   /* -        CROSS MEMORY SERVICES LOCK INDICATOR        */\n#define PSALCLLI 0x01                   /* -        LOCAL LOCK INDICATOR  (MDC400)   @G50EP9A   */\n#define PSANUIN 0x80                    /* -        CPU TIMER CANNOT BE USED                    */\n#define PSAPCMC 0x01                    /* -        MC INTERRUPT      (MDC605)       @G383P9A   */\n#define PSAPCPF 0x02                    /* -        PAGE FAULT                       @G383P9A   */\n#define PSAPCPS 0x03                    /* -        PER/SPACE SWITCH INTERRUPT       @G383PXU   */\n#define PSAPCAD 0x04                    /* -        ADDRESSING EXCEPTION  (MDC488)   @G383P9A   */\n#define PSAPCTR 0x05                    /* -        TRANSLATION EXCEPTION  (MDC489)  @G383P9A   */\n#define PSAPCPC 0x06                    /* -        PROGRAM CHECK  (MDC490)          @G383P9A   */\n#define PSAPCTRC 0x07                   /* -        TRACE INTERRUPT                  @G860PXK   */\n#define PSAPCAF 0x08                    /* -        NEW VALUE FOR PROGRAM INTERRUPT      @03A   */\n#define PSAPCLS 0x09                    /* -        LINKAGE STACK INTERRUPT FUNCTION     @L8A   */\n#define PSAPCART 0x0A                   /* -        ACCESS REGISTER TRANSLATION          @L8A   */\n#define PSAPCDPF 0x0B                   /* -        DISABLED PAGE/SEGMENT FAULT          @LCA   */\n#define PSAPCDAR 0x0C                   /* -        DISABLED ART PIC X'2B' FUNCTION      @LCA   */\n#define PSAPCPRT 0x0D                   /* -        PROTECTION EXCEPTION FUNCTION VALUE  @LQA   */\n#define PSAPCMAX 0x0D                   /* -        MAXIMUM VALID FUNCTION VALUE         @LQC   */\n#define PSAPCTRR 0x80                   /* -        TRACE INTERRUPT RECURSION        @YA01102   */\n#define PSAPCMT 0x40                    /* -        TRACE RECURSION FLAG  (MDC493)   @G383P9A   */\n#define PSAPCP1 0x80                    /* -        FIRST LEVEL PROGRAM CHECK        @G383P9A   */\n#define PSAPCP2 0x40                    /* -        SECOND LEVEL PROGRAM CHECK       @G383P9A   */\n#define PSAPCDE 0x20                    /* -        DAT ERROR CONDITION  (MDC497)    @G383P9A   */\n#define PSAPCLV 0x10                    /* -        0=REGISTERS IN LCCA, 1=REGISTERS @G383P9A   */\n#define PSAPCP3 0x08                    /* -        THIRD LEVEL PROGRAM CHECK        @G383P9A   */\n#define PSAPCP4 0x04                    /* -        FOURTH LEVEL PROGRAM CHECK       @G383P9A   */\n#define PSAPCPFR 0x02                   /* -        RECURSIVE PAGE FAULT INDICATOR       @LAA   */\n#define PSAPCAVR 0x01                   /* -        RECURSIVE ASTE VALIDITY INDICATOR    @LCA   */\n#define PSAPCDNV 0x80                   /* -        DUCT VALIDITY INDICATOR              @PBA   */\n#define PSAPCLSR 0x40                   /* -        IEAVLSIH HAS INVOKED IARPTEPR AND    @PEA   */\n#define PSANSS 0x80                     /* -        ENABLED UNLOCKED TASK WITH FRR   @G383P9A   */\n#define PSAPRSRB 0x40                   /* -        PREEMPTABLE-CLASS SRB                @LPA   */\n#define PSATASKM 0x00                   /* -        TASK MODE VALUE  (MDC338)        @G50DP9A   */\n#define PSASRBM 0x04                    /* -        SRB MODE VALUE  (MDC339)         @G50DP9A   */\n#define PSAWAITM 0x08                   /* -        WAIT MODE VALUE  (MDC340)        @G50DP9A   */\n#define PSADISPM 0x10                   /* -        DISPATCHER MODE VALUE  (MDC342)  @G50DP9A   */\n#define PSAPSRBM 0x20                   /* -        PSEUDO SRB MODE FLAG BIT.  THIS BIT MAY     */\n#define PSABLSDI 0x80                   /* -        BMFLSD LOCK INDICATOR.               @LGA   */\n#define PSAXDSI 0x40                    /* -        XCFDS LOCK INDICATOR.                @LEA   */\n#define PSAXRESI 0x20                   /* -        XCFRES LOCK INDICATOR.               @LEA   */\n#define PSAXQI 0x10                     /* -        XCFQ LOCK INDICATOR.                 @LEA   */\n#define PSAESETI 0x08                   /* -        ETRSET LOCK INDICATOR.               @LFA   */\n#define PSAIXSCI 0x04                   /* -        IXLSCH LOCK INDICATOR.               @LMC   */\n#define PSAIXSHI 0x02                   /* -        IXLSHR LOCK INDICATOR.               @LMC   */\n#define PSAIXDSI 0x01                   /* -        IXLDS LOCK INDICATOR.                @LLA   */\n#define PSAIXLLI 0x80                   /* -        IXLSHELL LOCK INDICATOR.             @LMC   */\n#define PSAULUTI 0x40                   /* -        IOSULUT LOCK INDICATOR.              @LJA   */\n#define PSAIXLRI 0x20                   /* -        IXLREQST LOCK INDICATOR.             @05A   */\n#define PSAWLMRI 0x10                   /* -        WLMRES LOCK INDICATOR                @LRA   */\n#define PSAWLMQI 0x08                   /* -        WLMQ LOCK INDICATOR.                 @LRA   */\n#define PSACNTXI 0x04                   /* -        CONTEXT LOCK INDICATOR               @LRA   */\n#define PSAREGSI 0x02                   /* -        REGSRV LOCK INDICATOR.               @LRA   */\n#define PSAENABL 0x10                   /* -        TO ENABLE PSA PROTECTION                    */\n#define PSADSABL 0x00                   /* -        TO DISABLE PSA PROTECTION                   */\n#define PSACR0EN 0x10                   /* -        IF 0, PSA PROTECT DISABLED.  IF 1, PSA      */\n#define PSACR0FP 0x04                   /* -        IF 1, EXTENDED FLOATING POINT IS            */\n#define PSACR0VI 0x02                   /* -        IF 1, VECTOR INSTRUCTIONS ARE               */\n#define PSARPEN 0x10                    /* -        IF 0, PSA PROTECT DISABLED.  IF 1, PSA      */\n#define PSAIOPR 0x80                    /* -        INDICATES IF INTERRUPTED TASK SHOULD @L1A   */\n#define PSAIORTY 0x40                   /* -        I/O FLIH RECOVERY FLAG. IF 1,        @L5A   */\n#define PSATROFF 0x80                   /* -        IF ON, SYSTEM TRACE SUSPENDED ON THIS       */\n#define PSASCHDA 0x80                   /*          SCHEDULE IS ACTIVE                   @LPA   */\n#define PSAMCHA 0x40                    /*          MACHINE CHECK IS ACTIVE              @06A   */\n#define PSARSTA 0x20                    /*          RESTART IS ACTIVE                    @06A   */\n#define PSAEGRA 0x10                    /*          GLOBAL RECOVERY IS ACTIVE            @06A   */\n#define PSARTMA 0x08                    /*          SELECTED RTM FUNCTIONS ARE ACTIVE    @06A   */\n#define TCBPM 0x0F                      /* - PROGRAM MASK AT TIME OF SPIE INITIATION.  MASK     */\n#define TCBCREQ 0x80                    /* - A DUMP HAS BEEN REQUESTED                          */\n#define TCBCSTEP 0x40                   /* - A STEP ABEND HAS BEEN REQUESTED                    */\n#define TCBCPP 0x20                     /* - SOME PROBLEM PROGRAM STORAGE WAS OVERLAID BY THE   */\n#define TCBDMPO 0x20                    /* - DUMP OPTIONS WERE PROVIDED ON CALLRTM OR SETRP     */\n#define TCBSTCC 0x10                    /* - COMPLETION CODE IS NOT TO BE STORED IN TCBCMPC     */\n#define TCBNOCC 0x10                    /* - A COMPLETION CODE WAS NOT PROVIDED ON CALLRTM      */\n#define TCBCDBL 0x08                    /* - A DOUBLE ABEND HAS OCCURRED (OS/VS1)               */\n#define TCBCASID 0x08                   /* - ABEND WAS SCHEDULED VIA CROSS MEMORY ABTERM        */\n#define TCBCWTO 0x04                    /* - A DUMP MESSAGE (WTO) IS TO BE ISSUED TO THE        */\n#define TCBRV316 0x04                   /* - INDICATES REASON CODE (TCBARC) IS VALID            */\n#define TCBCIND 0x02                    /* - ABEND TO OUTPUT AN INDICATIVE DUMP  (OS/VS1)       */\n#define TCBCMSG 0x01                    /* - AN ABEND MESSAGE IS PROVIDED TO BE PRINTED BY      */\n#define TCBMOD91 0x80                   /* - BOTH TESTRAN AND DECIMAL SIMULATOR ON A MOD 91     */\n#define TCBNOCHK 0x40                   /* - SUPPRESS TAKING CHECKPOINTS FOR THIS STEP          */\n#define TCBGRPH 0x20                    /* - GAM/SP ACTIVE FOR THIS TASK                        */\n#define TCBTCPP 0x08                    /* - TCAM POST-PENDING  (RORI)                          */\n#define TCBTCP 0x04                     /* - TEST TASK - USED BY TEST SVC                       */\n#define TCBOLTEP 0x02                   /* - OLTEP FUNCTIONS REQUIRE CLEANUP BEFORE ABNORMAL    */\n#define TCBFLAG 0xF0                    /* - STORAGE PROTECTION KEY                             */\n#define TCBZERO 0x0F                    /* - MUST BE ZERO                                       */\n#define TCBFA 0x80                      /* - MAY BE ON WHEN A TASK IS BEING ABNORMALLY   @L6C   */\n#define TCBFE 0x40                      /* - ON WHEN THE SYSTEM IS CALLING RESOURCE      @L6C   */\n#define TCBFERA 0x20                    /* - ENTER ABEND ERASE ROUTINE WHEN IN CONTROL AGAIN    */\n#define TCBNONPR 0x10                   /* - TASK IS NON-PREEMPTABLE                            */\n#define TCBPDUMP 0x08                   /* - PREVENT DUMP INDICATOR                             */\n#define TCBFT 0x04                      /* - TOP TASK IN TREE BEING ABTERMED                    */\n#define TCBFS 0x02                      /* - ABTERM DUMP COMPLETED                              */\n#define TCBFX 0x01                      /* - PROHIBIT QUEUEING OF ASYNCHRONOUS EXITS FOR        */\n#define TCBFOINP 0x80                   /* - THE TASK IS ABENDING AND IS IN THE PROCESS OF      */\n#define TCBFSTI 0x40                    /* - SECOND JOB STEP INTERVAL HAS EXPIRED               */\n#define TCBFABOP 0x20                   /* - IF 1, THE SYSABEND DUMP DATA SET HAS BEEN OPENED   */\n#define TCBFSMC 0x10                    /* - TASK HAS ISSUED A SYSTEM-MUST-COMPLETE AND SET     */\n#define TCBFJMC 0x08                    /* - TASK HAS ISSUED A STEP-MUST-COMPLETE AND TURNED    */\n#define TCBFDSOP 0x04                   /* - SYSABEND OPEN FOR JOB STEP                         */\n#define TCBFETXR 0x02                   /* - ETXR TO BE SCHEDULED                               */\n#define TCBFTS 0x01                     /* - THIS TASK IS A MEMBER OF A TIME-SLICED GROUP       */\n#define TCBFSM 0x80                     /* - ALL PSW'S IN SUPERVISOR STATE                      */\n#define TCBRT1S 0x40                    /* - RTM1 HAS INVOKED SLIP FOR A TASK IN EUT MODE.      */\n#define TCBABTRM 0x20                   /* - ABTERM BIT TO PREVENT MULTIPLE ABENDS              */\n#define TCBFXSET 0x10                   /* - TCBFX WAS SET BY STATUS MCSTEP              @04A   */\n#define TCBENQRM 0x02                   /* - ENQ/DEQ RESOURCE MANAGER HAS RECEIVED   @G381P9A   */\n#define TCBDWSTA 0x01                   /* - THIS TASK WAS DETACHED WITH STAE=YES OPTION        */\n#define TCBNDUMP 0x80                   /* - ABDUMP NONDISPATCHABILITY INDICATOR                */\n#define TCBSER 0x40                     /* - SER1 NONDISPATCHABILITY INDICATOR                  */\n#define TCBRQENA 0x20                   /* - I/O RQE'S EXHAUSTED                                */\n#define TCBHNDSP 0x10                   /* - TASK OR JOB STEP IS MOMENTARILY 'FROZEN' UNTIL     */\n#define TCBUXNDV 0x08                   /* - TASK IS TEMPORARILY NONDISPATCHABLE BECAUSE        */\n#define TCBRBWF 0x04                    /* - TOP RB IS IN WAIT STATE                 @G50DP9A   */\n#define TCBONDSP 0x01                   /* - TASK TERMINATING AND NONDISPATCHABLE BECAUSE       */\n#define TCBFC 0x80                      /* - TASK TERMINATED                                    */\n#define TCBABWF 0x40                    /* - ABNORMAL WAIT                                      */\n#define TCBUXNDF 0x40                   /* - TASK IS TEMPORARILY NONDISPATCHABLE BECAUSE        */\n#define TCBPAGE 0x20                    /* - TASK IS NONDISPATCHABLE DUE TO EXCESSIVE PAGING    */\n#define TCBANDSP 0x10                   /* - TASK IS TEMPORARILY NONDISPATCHABLE BECAUSE IT     */\n#define TCBSYS 0x08                     /* - ANOTHER TASK IS IN SYSTEM-MUST-COMPLETE STATUS     */\n#define TCBSTP 0x04                     /* - ANOTHER TASK IN THIS JOB STEP IS IN                */\n#define TCBFCD1 0x02                    /* - INITIATOR WAITING FOR REGION                       */\n#define TCBPNDSP 0x01                   /* - PRIMARY NONDISPATCHABILITY BIT.   THIS BIT IS      */\n#define TCBJPQF 0x80                    /* - JPQ PURGE FLAG                                     */\n#define TCBTQET 0x80                    /* - IF ZERO, TASK TYPE TQE.                            */\n#define TCBTSTSK 0x80                   /* - SWAPPED TIME SHARING TASK (OS/VS1)                 */\n#define TCBSTPPR 0x40                   /* - TASK SHOULD BE MADE NONDISPATCHABLE VIA TCBSTPP    */\n#define TCBATT 0x20                     /* - TASK SHOULD NOT HAVE ATTENTION EXITS SCHEDULED     */\n#define TCBTIOTG 0x10                   /* - PURGE TGET/TPUT AFTER ATTENTION                    */\n#define TCBSMCP 0x08                    /* - STATUS MCSTEP PENDING,TASK IS SUSPENDED     @L4A   */\n#define TCBDYDSP 0x02                   /* - M195 TASK IS MEMBER OF DYNAMIC DISPATCHING         */\n#define TCBCPUBN 0x01                   /* - FOR M195, ZERO MEANS I/O BOUND AND ONE MEANS       */\n#define TCBSTABE 0x80                   /* - ABEND ENTERED BECAUSE OF ERROR IN STAE             */\n#define TCBQUIES 0x40                   /* - STAE INVOKED PURGE I/O ROUTINE WITH QUIESCE I/O    */\n#define TCB33E 0x20                     /* - A 33E ABEND HAS OCCURRED FOR TASK                  */\n#define TCBPPSUP 0x10                   /* - 1=SUPERVISOR MODE,0=PROBLEM PROGRAM MODE           */\n#define TCBHALT 0x08                    /* - PURGE I/O ROUTINE DID NOT SUCCESSFULLY QUIESCE     */\n#define TCBSYNCH 0x04                   /* - SYNCH ISSUED BY ASIR TO SCHEDULE EXIT ROUTINE      */\n#define TCBSTCUR 0x01                   /* - STAE RECURSION VALID                      ICB443   */\n#define TCBSMFGF 0x80                   /* - IF ZERO, THE TCT CORE TABLE IS NOT TO BE           */\n#define TCBDARTN 0x80                   /* - THE TASK IS TEMPORARILY NONDISPATCHABLE -          */\n#define TNONDISP 0x80                   /* * ALIAS *                                         */\n#define TCBDARPN 0x40                   /* - THE TASK IS PERMANENTLY NONDISPATCHABLE -          */\n#define PNONDISP 0x40                   /* * ALIAS *                                         */\n#define TCBRSTND 0x20                   /* - THE TASK IS TEMPORARILY NONDISPATCHABLE -          */\n#define TCBRSPND 0x10                   /* - THE TASK IS PERMANENTLY NONDISPATCHABLE -          */\n#define TCBDDRND 0x08                   /* - THE TASK IS IN DEVICE ALLOCATION AND DYNAMIC       */\n#define TCBTPSP 0x04                    /* - DISPATCHING OF TCAM TASK MUST BE DELAYED UNTIL     */\n#define TCBPIEND 0x02                   /* - SRB IS TO BE SCHEDULED TO PERFORM PIE/PICA         */\n#define TCBABTIN 0x01                   /* - THE TASK IS TEMPORARILY NONDISPATCHABLE WHILE      */\n#define TCBABD 0x80                     /* - ABDUMP IS PROCESSING  (OS/VS1)                     */\n#define TCBSTPP 0x40                    /* - TASK SET NONDISPATCHABLE BY SETTASK                */\n#define TCBNDSVC 0x20                   /* - TASK IS NONDISPATCHABLE BECAUSE SVC DUMP IS        */\n#define TCBNDTS 0x10                    /* - TASK IS NONDISPATCHABLE BECAUSE IT IS BEING        */\n#define TCBIWAIT 0x08                   /* - TASK IS NONDISPATCHABLE DUE TO AN INPUT WAIT       */\n#define TCBOWAIT 0x04                   /* - TASK IS NONDISPATCHABLE DUE TO AN OUTPUT WAIT      */\n#define TCBDSS 0x02                     /* - DYNAMIC SUPPORT SYSTEM (DSS) HAS SET THIS          */\n#define TCBABE 0x01                     /* - ABEND ROUTINE WAS ENTERED FOR THIS TASK WHILE      */\n#define TCBLJSND 0x80                   /* - TASK IS ABENDING AND NONDISPATCHABLE BECAUSE IT    */\n#define TCBNDNYI 0x40                   /* - RCT TASK IS NONDISPATCHABLE BECAUSE ADDRESS @P4A   */\n#define TCBSRBND 0x20                   /* - TCB NONDISPATCHABLE BECAUSE SRB'S ARE STOPPED      */\n#define TCBSLPER 0x10                   /* - SET NONDISPATCHABLE SO THAT SLIP/PER CAN ALTER     */\n#define TCBS3MR 0x08                    /* - STAGE 3 EXIT EFFECTOR MUST RUN TO SYNCHRONIZE      */\n#define TCBAREQ 0x04                    /* - TSO AUTHORIZED REQUEST PROCESSING ACTIVE           */\n#define TCBNDSMF 0x02                   /* - INDICATES TASK IS STOPPED BECAUSE ITS CPU   @03A   */\n#define TCBNDINT 0x01                   /* - INITIATOR SETS THIS BIT TO PREVENT JOB STEP        */\n#define TCBREC 0x80                     /* - VALID REENTRY TO ABEND IF NON-ZERO VALUE IN        */\n#define TCBOPEN 0x01                    /* - OPEN DUMP DATA SET                        ICB456   */\n#define TCBCLOSD 0x02                   /* - CLOSE DIRECT SYSOUT ON TAPE               ICB456   */\n#define TCBCLOSE 0x03                   /* - CLOSE OPEN DATA SETS                      ICB456   */\n#define TCBCLOSF 0x04                   /* - RESERVED.                                 ICB456   */\n#define TCBGREC 0x05                    /* - GRAPHICS                                  ICB456   */\n#define TCBADUMP 0x07                   /* - ABDUMP                                    ICB456   */\n#define TCBPTAXE 0x08                   /* - PURGE TAXE                                ICB456   */\n#define TCBMESG 0x09                    /* - MESSAGE RECURSION                         ICB456   */\n#define TCBDYNAM 0x0A                   /* - DD-DYNAM TIOT CLEANUP                     ICB456   */\n#define TCBDAMSG 0x0B                   /* - ABEND IS ISSUING A WTOR ASKING WHETHER THE JOB     */\n#define TCBQTIP 0x0C                    /* - PURGE TSO INTERPARTITION POSTS            ICB456   */\n#define TCBTCAMP 0x0D                   /* - PURGE TCAM INTERPARTITION POSTS           ICB456   */\n#define TCBINDRC 0x0E                   /* - INDICATIVE DUMP (LOAD 8 OF ABEND) HAS ABENDED.     */\n#define TCBSAVCD 0x0F                   /* - ASIR RECURSION.  SAVE OLD COMPLETION CODE ICB456   */\n#define TCBTYP1W 0x10                   /* - TYPE 1 MESSAGE WRITE TO PROGRAMMER        ICB456   */\n#define TCBWTPSE 0x20                   /* - WRITE-TO-PROGRAMMER (WTP) FAILED.  JOB STEP        */\n#define TCBVTAM1 0x21                   /* - ABEND IS ENTERING FIRST VTAM INTERFACE,            */\n#define TCBVTAM2 0x22                   /* - ABEND IS ENTERING SECOND VTAM INTERFACE,           */\n#define TCBVTAM3 0x23                   /* - ABEND IS ENTERING FIRST VTAM INTERFACE,            */\n#define TCBVTAM4 0x24                   /* - ABEND IS ENTERING SECOND VTAM INTERFACE,           */\n#define TCBNOSTA 0x30                   /* - STAE/STAI NOT TO BE HONORED               ICB456   */\n#define TCBSTRET 0x31                   /* - RETURN FROM DUMP PROCESSING               ICB456   */\n#define TCBCONVR 0x32                   /* - CONVERT TO STEP ABEND                     ICB456   */\n#define TCBDARET 0x33                   /* - RETURN FROM DAMAGE ASSESSMENT ROUTINES    ICB456   */\n#define TCBTYP1R 0x34                   /* - RETURN FROM TYPE 1 MESSAGE MODULE         ICB456   */\n#define TCBNEWRB 0x35                   /* - ABEND ISSUED SVC 13 TO TRANSFER CONTROL (XCTL)     */\n#define TCBMCCNS 0x40                   /* - A MUST COMPLETE TASK HAS ABNORMALLY TERMINATED     */\n#define TCBRV 0x80                      /* - THE PARTITION IS FIXED IN REAL STORAGE.  VIRTUAL   */\n#define TCBPIE17 0x40                   /* - PAGE FAULT INTERRUPT IS TO BE PASSED TO THE        */\n#define TCBCPU 0x20                     /* - TASK IS CPU-BOUND MEMBER OF AUTOMATIC PRIORITY     */\n#define TCBSPVLK 0x10                   /* - TASK SCHEDULED FOR ABTERM WHILE OWNING             */\n#define TCBMIGR 0x04                    /* - REGION SELECTED FOR MIGRATION FROM PRIMARY         */\n#define TCBAPG 0x02                     /* - TASK IS IN AUTOMATIC PRIORITY GROUP (APG)          */\n#define TCBNTJS 0x01                    /* - JOB STEP TASK BUT NOT HIGHEST IN FAILING TREE      */\n#define TCBGPECB 0x80                   /* - TASK IS IN AN ECB WAIT FOR A GETPART               */\n#define TCBSVCSP 0x20                   /* - IF 1, SVC SCREENING IS TO BE PROPAGATED TO         */\n#define TCBSTACK 0x10                   /* - SET IN JOB STEP TCB TO INDICATE THAT A TASK IN     */\n#define TCBSVCS 0x08                    /* - IF 1, SVC SCREENING IS REQUIRED FOR THE TASK.      */\n#define TCBRSTSK 0x04                   /* - RESIDENT SYSTEM TASK                               */\n#define TCBADMP 0x02                    /* - ALL OTHER TASKS IN JOB STEP HAVE BEEN SET          */\n#define TCBGTOFM 0x01                   /* - GENERALIZED TRACE FACILITY (GTF) TRACING HAS       */\n#define TCBDARP 0x80                    /* - PRIMARY DAR RECURSION.  DAR HAS BEEN ENTERED FOR   */\n#define TCBDARS 0x40                    /* - SECONDARY DAR RECURSION.  IF DAR IS REENTERED,     */\n#define TCBDARD 0x20                    /* - A DUMP HAS BEEN REQUESTED FOR A WRITER OR          */\n#define TCBDARC 0x10                    /* - RECURSION PERMITTED IN CLOSE -                     */\n#define TCBDARMC 0x10                   /* - DAR HAS BEEN ENTERED TO HANDLE A VALID RECURSION   */\n#define TCBDARO 0x08                    /* - SYSTEM ERROR TASK IS FAILING.  DAR DUMP SHOULD     */\n#define TCBDARWT 0x04                   /* - A WTO OPERATION WITH A 'REINSTATEMENT FAILURE'     */\n#define TCBDARMS 0x02                   /* - WTO OPERATION WITH A 'DAR IN PROGRESS' MESSAGE     */\n#define TCBEXSVC 0x01                   /* - THE DUMP SVC ROUTINE IS EXECUTING FOR THIS TASK    */\n#define TCBNSSQA 0x80                   /* - NORMAL STACK SAVED IN SQA INDICATOR.    @G38CPXB   */\n#define TCBPAGID 255                    /* -   ID FOR PAGING SUPERVISOR TASK             ICB403   */\n#define TCBSYERR 254                    /* -   ID FOR SYSTEM ERROR TASK                  ICB403   */\n#define TCBCOMM 253                     /* -   ID FOR COMMUNCIATIONS TASK                ICB403   */\n#define TCBIORMS 252                    /* -   ID FOR I/O RMS TASK                       ICB403   */\n#define TCBMASTR 251                    /* -   ID FOR MASTER SCHEDULER TASK              ICB403   */\n#define TCBJES 250                      /* -   ID FOR JOB ENTRY SUBSYSTEM (JES) MONITOR TASK      */\n#define TCBDSSID 249                    /* -   ID FOR DYNAMIC SUPPORT SYSTEM (DSS) TASK  ICB403   */\n#define TCBLOGID 248                    /* -   ID FOR SYSTEM LOG TASK                             */\n#define TCBDYING 0x80                   /* - IF ON, INDICATES THAT THE SYSTEM HAS        @P1A   */\n#define TCBACTIV 0x80                   /* - BIT ON MEANS THIS TCB IS CURRENTLY ACTIVE ON A     */\n#define TCBS3A 0x40                     /* - STAGE 3 EXIT EFFECTOR/RESUME/TCTL INTERSECT FLAG   */\n#define TCBLLREQ 0x20                   /* - TASK REQUESTED LOCAL LOCK               @G50DP9A   */\n#define TCBTDORM 0x08                   /* - TURNED ON TO DETECT DORMANT TASKS BY        @06A   */\n#define TCBCMLF 0x80                    /* - CML RESOURCE MANAGER PROCESSING         @G381P9A   */\n#define TCBLLNEW 0x40                   /* - LOCK MANAGER HAS GIVEN THIS TASK THE LOCAL  @L5A   */\n#define TCBETERM 0x80                   /* - ESTAE EXIT ENTERED WITH TERM OPTION                */\n#define TCBSTAFX 0x40                   /* - SERIALIZED BY TCB ACTIVE                @ZA30005   */\n#define TCBEOTFM 0x80                   /* - END OF TASK FLAG FOR FREEMAIN.  SET TO 1 BY TASK   */\n#define TCBRTM1E 0x40                   /* - RTM1 IS CURRENTLY PROCESSING EUT FRR'S  @G381PXU   */\n#define TCBNDIOS 0x20                   /* - TASK HAS BEEN SET NONDISPATCHABLE VIA STATUSND     */\n#define TCBPGNLY 0x10                   /* - SET BY RTM2 TO INDICATE ONLY PURGE PHASE TO BE     */\n#define TCBRTM2 0x08                    /* - SET BY RTM2 TO INDICATE RTM2 HAS BEEN ENTERED      */\n#define TCBEOT 0x04                     /* - SET BY RTM2 TO INDICATE TO EXIT THAT END OF TASK   */\n#define TCBSATTN 0x02                   /* - SYNCHRONIZATION OF ATTENTION INTERRUPT REQUIRED    */\n#define TCBLLH 0x01                     /* - TASK WAS INTERRUPTED HOLDING THE LOCAL LOCK.       */\n#define TCBCNCB 0x80                    /* - SET BY RTM2 IN THE JOB STEP TCB WHEN IT HAS BEEN   */\n#define TCBFMW 0x40                     /* - MOTHER WAITING FLAG.  TURNED ON IN A SUBTASK IN    */\n#define TCBFDW 0x20                     /* - DAUGHTER WAITING FLAG.  TURNED ON IN A MOTHER      */\n#define TCBFPRAP 0x10                   /* - SET BY RTM2 TO PREVENT PERCOLATION TO THE TASK     */\n#define TCBRT1NR 0x08                   /* - IF 1, ERROR PROPAGATED FROM RTM1 IS         @D1A   */\n#define TCBECBNV 0x04                   /* - IF 1, ECB POINTED TO BY TCBECB IS NOT TO BE        */\n#define TCBSSPC 0x02                    /* - STATUS STOP PENDING,TASK HOLDS A CML LOCK          */\n#define TCBRTM1C 0x01                   /* - A TASK WITH EUT FRRS HAS BEEN CANCELLED. THIS      */\n#define TCBEXP 0x80                     /* - EXPANDED VERSION OF THE TCB             @ZA72701   */\n#define TCBNCTL 0x40                    /* - IF 1, INDICATES USER PROGRAM IS LOADED  @ZA84893   */\n#define TCBRTMDE 0x20                   /* - DETACH HAS BEEN CALLED BY RTM           @ZA93650   */\n#define TCBPMC 0x80                     /* - IF 1, INDICATES TASK IS IN PROCESS MUST     @D2C   */\n#define TCBNOJLB 0x40                   /* - IF 1, INDICATES THAT TCBJLB IS NOT TO BE USED      */\n#define TCBPVICT 0x80                   /* - IF 1, INDICATES THAT THE ASSOCIATED TASK    @05M   */\n#define TCBPKING 0x40                   /* - IF 1, INDICATES THAT THE ASSOCIATED TASK HAS       */\n#define TCBPCAND 0x20                   /* - IF 1, INDICATES THAT THIS TASK HAS REQUESTED       */\n#define TCBPTOP 0x10                    /* - IF 1, INDICATES THAT THIS TASK IS AT THE TOP       */\n#define TCBVS02A 0x02                   /* - JBB2110 (NOT IN BASE)                   @ZA72701   */\n#define TCBVS02B 0x02                   /* - JBB2125                                 @ZA72701   */\n#define TCBVS03 0x03                    /* - JBB2133                                     @H1A   */\n#define TCBVERS 0x03                    /* - LEVEL OF THIS MAPPING                       @H1C   */\n#define TCBASYNC 0x80                   /* - GTF ASYNCHRONOUS GATHER ROUTINE IS IN CONTROL      */\n#define TCBERRTN 0x40                   /* - GTF ASYNCHRONOUS GATHER ERROR ROUTINE IS IN        */\n#define TCBDSPIT 0x20                   /* - MACHINE CHECK INTERRUPTION HANDLER SHOULD          */\n#define TCBRCVRY 0x80                   /* - TASK IS IN RECOVERY.                    @G381P9A   */\n\nstruct TIOT1\n\u00e4\n/*                   %TIOTL1 : ;                                                            */\n/*                                                                                          */\n/*                     * START OF SPECIFICATIONS ***************************************    */\n/*                                 TASK INPUT/OUTPUT TABLE                                  */\n/*                                                                                          */\n/*                     01* MACRO NAME: IEFTIOT1                                             */\n/*                                                                                          */\n/*                     01* DESCRIPTIVE-NAME: TASK INPUT/OUTPUT TABLE                        */\n/*                                                                                          */\n/*                     01* EXTERNAL CLASSIFICATION:                                         */\n/*                         DMTI: BASE                                                       */\n/*                         GUPI: FIELDS                                                     */\n/*                         TIOCNJOB TIOCSTEP TIOCSTPN TIOCPSTN TIOCJSTN                     */\n/*                         TIOEDDNM TIOEJFCB TIOEFSRT TIOELNGH TIOEWTCT                     */\n/*                                                                                          */\n/*                     01* END OF EXTERNAL CLASSIFICATION:                                  */\n/*                                                                                          */\n/*                     01* PROPRIETARY STATEMENT=                                           */\n/*                     **PROPRIETARY_STATEMENT*******************************************   */\n/*                                                                                          */\n/*                                                                                          */\n/*                      LICENSED MATERIALS - PROPERTY OF IBM                                */\n/*                      THIS MACRO IS \"RESTRICTED MATERIALS OF IBM\"                         */\n/*                      5645-001 (C) COPYRIGHT IBM CORP. 1980,1996                          */\n/*                                                                                          */\n/*                      STATUS= JBB6602                                                     */\n/*                                                                                          */\n/*                     **END_OF_PROPRIETARY_STATEMENT************************************   */\n/*                                                                                          */\n/*                     01* DSECT NAME:                                                      */\n/*                         NO DSECT CARD PUT OUT BY MACRO. TIOT1 MAY BE USED IN THE         */\n/*                         USING STATEMENT.                                                 */\n/*                                                                                          */\n/*                     01* COMPONENT = ALLOCATION/UNALLOCATION (SC1B4)                      */\n/*                                                                                          */\n/*                     01* EYE CATCHER = NONE                                               */\n/*                     02*   OFFSET = N/A                                                   */\n/*                     02*   LENGTH = N/A                                                   */\n/*                                                                                          */\n/*                     01* STORAGE ATTRIBUTES =                                             */\n/*                                                                                          */\n/*                                                                                          */\n/*                     01* SIZE: VARIABLE (INSTALLATION DEFINED)                            */\n/*                     01*   MAIN STORAGE = NO                                              */\n/*                     01*   VIRTUAL STORAGE = YES                                          */\n/*                     01*   DATA SPACE = NO                                                */\n/*                     01*   SUBPOOL = 237 (OBTAINED FROM JSCBSWSP)                  @P2C   */\n/*                     01*   KEY = 1                                                        */\n/*                     01*   RESIDENCY = BELOW (NORMAL TIOT) OR ABOVE (XTIOT) 16M           */\n/*                     01*   FREQUENCY = ONE PER JOBSTEP                                    */\n/*                                                                                          */\n/*                     01* CREATED BY: DEVICE ALLOCATION                                    */\n/*                                                                                          */\n/*                     01* POINTED TO BY:                                                   */\n/*                      TCBTIO FIELD OF THE TCB DATA AREA                            @P2A   */\n/*                      DCBTIOT FIELD OF THE DCB DATA AREA                                  */\n/*                      DSABTIOT FIELD OF THE DSAB DATA AREA (DD ENTRY TIOT)                */\n/*                      JCTSTIOT FIELD OF THE JCT DATA AREA                                 */\n/*                      SMCATIOT FIELD OF THE SMCA DATA AREA (MASTER SCHEDULER TIOT)        */\n/*                     01* SERIALIZATION: ENQ ON SYSZTIOT                                   */\n/*                                                                                          */\n/*                     01* FUNCTION: PROVIDES THE I/O SUPPORT ROUTINES WITH POINTERS        */\n/*                         TO JFCBS AND TO ALLOCATED DEVICES.                               */\n/*                                                                                          */\n/*                     02* -  EACH DD STATEMENT, WHETHER IT IS A MEMBER OF A         @P2A   */\n/*                            CONCATENATION OR NOT, HAS ITS OWN TIOT DD ENTRY. THERE @P2A   */\n/*                            WILL BE ONE DD STATEMENT FOR EACH GDG DATA SET FOR A   @P2A   */\n/*                            GDGALL REQUEST.                                        @P2A   */\n/*                                                                                          */\n/*                     02* -  WITHIN EACH DD ENTRY THERE WILL BE ONE DEVICE ENTRY    @P2A   */\n/*                            FOR EACH DEVICE ALLOCATED TO THAT DD STATEMENT.        @P2A   */\n/*                            SINGLE DEVICE DOES NOT ALWAYS MEAN \"NOT A MULTI-VOLUME\"@P2A   */\n/*                            DATA SET.  FOR PERMRES DEVICES (E.G., D/T3390), DEVICE @P2A   */\n/*                            AND VOLUME ARE SYNONYMOUS.  HOWEVER, FOR TAPE REQUESTS @P2A   */\n/*                            DEVICE AND VOLUME ARE NOT SYNONYMOUS SINCE A TAPE      @P2A   */\n/*                            VOLUME CAN BE MOUNTED ON ANY ONE OF MANY TAPE DEVICES. @P2A   */\n/*                                                                                          */\n/*                     01* METHOD OF ACCESS:                                                */\n/*                           A DSECT CARD SHOULD PRECEDE THE MACRO CALL. USING ON           */\n/*                           TIOT1 GIVES ADDRESSABILITY FOR ALL SYMBOLS.                    */\n/*                     01* METHOD OF PL/S ACCESS:                                           */\n/*                           PL/S - DCL TIOTPTR PTR                                         */\n/*                                                                                          */\n/*                       DEPENDENCY - ANY CHANGES TO THE TIOENTRY STRUCTURE OF THIS  @L0A   */\n/*                                    MAPPING SHOULD BE REFLECTED IN THE IPCS        @L0A   */\n/*                                    MODEL IEFMTIOE.                                @L0A   */\n/*                                                                                          */\n/*                       CHANGE ACTIVITY - L0                                               */\n/*                        $L0= DDPERF   HBB4420 900406 PDDS: DDLPERFIPCS DD LIMIT           */\n/*                                                                       PERFORMANCE @L0A   */\n/*                        $P1= PSD0454  JBB6602 950921 PDXB: FIX TIOEJFCB COMMENT,   @P1A   */\n/*                                                           ADD TIOCSTEP SUBFIELDS. @P1A   */\n/*                        $P2= PSD0771  JBB6602 960208 PDNN: UPDATES TO THE PROLOG   @P2A   */\n/*                                                                                          */\n/*                      ****************************************************************    */\n/*                      C - ADDED TCBTIO UNDER POINTED TO BY AND ADDED ADDITIONAL    @P2A   */\n/*                          EXPLANATIONS ON TIOT ENTRIES.                            @P2A   */\n/*                      C - CHANGE COMMENT ON TIOEJFCB. ADD SUBFIELDS TO TIOCSTEP.   @P1A   */\n/*                      A - ADD DEPENDENCY NOTE FOR IPCS TIOT ENTRY CONTROL BLOCK    @L0A   */\n/*                          MODEL                                                    @L0A   */\n/*                     ** END OF SPECIFICATIONS ****************************************    */\n/*                                                                                          */\n/*                   %GOTO TIOTL2;                                                          */\n  //int _f0\u00c40\u00dc;                         /* */\n  CL8 tiocnjob;                         /*  -         JOB NAME                                  */\n  //CL16 tiocstep\u00c40\u00dc;                   /* -         STEP INFORMATION                    @P1C  */\n  //CL8 tiocstpn\u00c40\u00dc;                    /*  -         8-BYTE STEP NAME FOR NON-PROCS      @P1A  */\n  CL8 tiocpstn;                         /*   -         8-BYTE PROC STEP NAME FOR PROCS     @P1A  */\n  CL8 tiocjstn;                         /*   -         8-BYTE JOBSTEP NAME FOR PROCS       @P1A  */\n/*                   ********************************************************************** */\n/*                                                                                        * */\n/*                      DD ENTRY                                                          * */\n/*                                                                                        * */\n/*                           THERE IS A 16-BYTE DD ENTRY FOR EACH DD STATEMENT IN THE     * */\n/*                           JOB STEP OR PROCEDURE STEP.  (REFERENCES TO GDG (ALL) DATA   * */\n/*                           SETS, THE JOBLIB DATA SET OR PGM=*.DDNAME CREATE STILL       * */\n/*                           OTHER DD ENTRIES.)                                           * */\n/*                                                                                        * */\n/*                           A DD ENTRY INCLUDES A DEVICE ENTRY.  BEFORE ALLOCATION,      * */\n/*                           THERE MAY BE SEVERAL DEVICE ENTRIES IN EACH DD ENTRY.        * */\n/*                                                                                        * */\n/*                   ********************************************************************** */\n#define TIOENTRY 24                     /* -            TIODDPTR                                  */\n  signed char tioelngh;                 /* -          LENGTH, IN BYTES, OF THIS ENTRY           */\n/*                                                (INCLUDING ALL DEVICE ENTRIES)            */\n  char tioestta;                        /* -            STATUS BYTE A                             */\n#define TIOSLTYP 0x80                   /* -        NONSTANDARD LABEL (TAPE) (OS/VS1)         */\n/*                                                FREED TIOT ENTRY (OS/VS2)        @ZA45994 */\n#define TIOSPLTP 0x40                   /* -        DURING ALLOCATION, SPLIT CYLINDER         */\n/*                                                PRIMARY.  (THIS IS THE FIRST DD ENTRY FOR */\n/*                                                A SPLIT CYLINDER.)                        */\n/*                                                DURING STEP TERMINATION, NO UNALLOCATION  */\n/*                                                NECESSARY.                                */\n#define TIOSPLTS 0x20                   /* -        DURING ALLOCATION, SPLIT CYLINDER         */\n/*                                                SECONDARY.  (THIS IS NOT THE FIRST DD     */\n/*                                                ENTRY FOR A SPLIT CYLINDER.)              */\n/*                                                DURING STEP TERMINATION, REWIND BUT NO    */\n/*                                                UNLOADING.                                */\n#define TIOSJBLB 0x10                   /* -        JOBLIB INDICATOR                          */\n#define TIOSDADS 0x08                   /* -        DADSM ALLOCATION NECESSRY                 */\n#define TIOSLABL 0x04                   /* -        LABELED TAPE.  IF BIT 0 IS OFF, SL OR     */\n/*                                                SUL.  IF BIT 0 IS ALSO ON, AL OR AUL.     */\n#define TIOSDSP1 0x02                   /* -        REWIND/UNLOAD THE TAPE VOLUME (TAPE)      */\n/*                                                PRIVATE VOLUME (DIRECT ACCESS)     MDC001 */\n#define TIOSDSP2 0x01                   /* -        REWIND THE TAPE VOLUME (TAPE)             */\n/*                                                PUBLIC VOLUME (DIRECT ACCESS)      MDC002 */\n  //CL2 tioerloc\u00c40\u00dc;                    /* -         RELATIVE LOCATION OF POOL                 */\n  char tioewtct;                        /* -          DURING ALLOCATION, NUMBER OF DEVICES      */\n/*                                                REQUESTED FOR THIS DATA SET               */\n  char tioelink;                        /* -          DURING ALLOCATION, LINK TO THE            */\n/*                                                APPROPRIATE PRIME SPLIT, UNIT AFFINITY,   */\n/*                                                VOLUME AFFINITY OR SUBALLOCATE TIOT       */\n/*                                                ENTRY.  AFTER ALLOCATION, FLAG BYTE.      */\n#define TIOSYOUT 0x80                   /* -        THIS IS A SYSOUT DATA SET THAT CONTAINS   */\n/*                                                DATA (AFTER CLOSE)                        */\n#define TIOTRV01 0x40                   /* -        RESERVED                           MDC006 */\n#define TIOTTERM 0x20                   /* -        DEVICE IS A TERMINAL                      */\n#define TIOEDYNM 0x10                   /* -        DYNAM CODED ON DD STATEMENT               */\n#define TIOEQNAM 0x08                   /* -        QNAME CODED ON DD STATEMENT               */\n#define TIOESYIN 0x04                   /* -        ENTRY FOR SPOOLED SYSIN DATA SET          */\n/*                                                (OS/VS1)                           MDC003 */\n#define TIOESYOT 0x02                   /* -        ENTRY FOR SPOOLED SYSOUT DATA SET         */\n/*                                                (OS/VS1)                           MDC004 */\n#define TIOESSDS 0x02                   /* -        ENTRY FOR A SUBSYSTEM DATA SET            */\n/*                                                (OS/VS2)                           MDC005 */\n#define TIOTREM 0x01                    /* -        ENTRY FOR A REMOTE DEVICE          ICB340 */\n  CL8 tioeddnm;                         /* -          DD NAME                                   */\n  CL3 tioejfcb;                         /* -          SWA VIRTUAL ADDRESS TOKEN, MAPPED         */\n/*                                                BY SWAREQ MACRO. REFER TO THAT MACRO FOR  */\n/*                                                FURTHER INFORMATION.                 @P1C */\n  char tioesttc;                        /* -            STATUS BYTE C.  USED DURING ALLOCATION    */\n/*                                                ONLY.  SET TO ZEROS AT END OF ALLOCATION. */\n#define TIOSDKCR 0x80                   /* -        MAIN STORAGE OR DASD ADDRESS              */\n#define TIOSDEFR 0x40                   /* -        DEFERRED MOUNT                            */\n#define TIOSAFFP 0x20                   /* -        PRIMARY UNIT AFFINITY                     */\n#define TIOSAFFS 0x10                   /* -        SECONDARY UNIT AFFINITY                   */\n#define TIOSVOLP 0x08                   /* -        PRIMARY VOLUME AFFINITY                   */\n#define TIOSVOLS 0x04                   /* -        SECONDARY VOLUME AFFINITY                 */\n#define TIOSBALP 0x02                   /* -        PRIMARY SUBALLOCATE                       */\n#define TIOSBALS 0x01                   /* -        SECONDARY SUBALLOCATE                     */\n/*                   ********************************************************************** */\n/*                                                                                        * */\n/*                      DEVICE ENTRIES                                                    * */\n/*                                                                                        * */\n/*                         1. DURING ALLOCATION -                                         * */\n/*                                   ONE DEVICE ENTRY FOR EACH DEVICE REQUIRED, OR FOR    * */\n/*                                   EACH PUBLIC DEVICE ELIGIBLE.                         * */\n/*                                                                                        * */\n/*                         2. DURING PROBLEM PROGRAM -                                    * */\n/*                                   ONE DEVICE ENTRY FOR EACH ALLOCATED DEVICE.          * */\n/*                                                                                        * */\n/*                   ********************************************************************** */\n  char tioesttb;                        /* -            STATUS BYTE B - DURING ALLOCATION AND     */\n/*                                                DURING PROBLEM PROGRAM                    */\n#define TIOSUSED 0x80                   /* -        DATA SET IS ON DEVICE                     */\n#define TIOSREQD 0x40                   /* -        DATA SET WILL USE DEVICE                  */\n#define TIOSPVIO 0x20                   /* -        DEVICE VIOLATES SEPARATION                */\n#define TIOSVLSR 0x10                   /* -        VOLUME SERIAL PRESENT                     */\n#define TIOSSETU 0x08                   /* -        SETUP MESSAGE REQUIRED                    */\n#define TIOSMNTD 0x04                   /* -        IF 0, DELETE UNLOADED VOLUME IF UNLOAD    */\n/*                                                REQUIRED.  IF 1, RETAIN UNLOADED VOLUME   */\n/*                                                IF UNLOAD REQUIRED.                       */\n#define TIOSUNLD 0x02                   /* -        UNLOAD REQUIRED                           */\n#define TIOSVERF 0x01                   /* -        VERIFICATION REQUIRED                     */\n  AL3 tioefsrt;                         /* -          DURING PROBLEM PROGRAM, ADDRESS OF UCB.   */\n/*                                                DURING ALLOCATION, BITS 0-11 CONTAIN      */\n/*                                                OFFSET, IN THE UCB LOOK-UP TABLE, TO AN   */\n/*                                                ADDRESS FOR A DEVICE REQUIRED OR ELIGIBLE */\n/*                                                FOR THIS DATA SET.  THE UCB LOOK-UP TABLE */\n/*                                                HAS ADDRESSES OF UCB'S.  BITS 12-23       */\n/*                                                CONTAIN OFFSET, IN THE STEP VOLUME TABLE  */\n/*                                                (VOLT), TO THE VOLUME SERIAL NUMBER FOR   */\n/*                                                THE VOLUME REQUIRED OR ELIGIBLE FOR THIS  */\n/*                                                DATA SET.                                 */\n/*                           TIOT POOL ENTRY                                                */\n#define POOLSTAR 44                     /* */\n  char _f1;                             /* -          RESERVED                                  */\n  signed char tiopnslt;                 /* -          NUMBER OF SLOTS FOR POOL                  */\n  char _f2;                             /* -          RESERVED                                  */\n  signed char tiopnsrt;                 /* -          NUMBER OF DEVICES (FILLED SLOTS)          */\n  CL8 tioppool;                         /* -          POOL NAME                                 */\n  char tiopsttb;                        /* -          STATUS OF SLOT                            */\n  AL3 tiopslot;                         /* -          UCB ADDRESS OR EMPTY SLOT                 */\n  CL4 tiotfend;                         /* -          FINAL END OF THE TIOT - BINARY ZEROS      */\n/*                   %JSCBL1 : ;                                                            */\n/*                                                                                          */\n/*                      START OF SPECIFICATIONS *****************************************   */\n/*                                                                                          */\n/*                     01* MACRO NAME:  IEZJSCB                                      @L1C   */\n/*                                                                                          */\n/*                     01* DESCRIPTIVE NAME:  JOB/STEP CONTROL BLOCK                        */\n/*                                                                                          */\n/*                     02*  ACRONYM:  JSCB                                                  */\n/*                                                                                          */\n/*                     01* PROPRIETARY STATEMENT=                                           */\n/*                     **PROPRIETARY_STATEMENT*******************************************   */\n/*                                                                                          */\n/*                                                                                          */\n/*                      LICENSED MATERIALS - PROPERTY OF IBM                                */\n/*                      THIS MACRO IS \"RESTRICTED MATERIALS OF IBM\"                         */\n/*                      5647-A01 (C) COPYRIGHT IBM CORP. 1979, 1998                         */\n/*                                                                                          */\n/*                      STATUS= HBB6606                                                     */\n/*                                                                                          */\n/*                     **END_OF_PROPRIETARY_STATEMENT************************************   */\n/*                                                                                          */\n/*                     01* DSECT NAME:                                                      */\n/*                          IEZJSCB                                                         */\n/*                                                                                          */\n/*                     01* COMPONENT:  INITIATOR (SC1B6)                                    */\n/*                                                                                          */\n/*                     01* EYE-CATCHER:  NONE                                               */\n/*                                                                                          */\n/*                     01* STORAGE ATTRIBUTES:                                              */\n/*                     02*  SUBPOOL:  253                                                   */\n/*                     02*  KEY:  0                                                         */\n/*                     02*  RESIDENCY:  BELOW 16 MB IN VIRTUAL STORAGE.                     */\n/*                                                                                          */\n/*                     01* SIZE:  192 BYTES                                                 */\n/*                                                                                          */\n/*                     01* CREATED BY:                                                      */\n/*                          IEESB601                                                        */\n/*                          IEESB606                                                        */\n/*                          IEFIB600                                                        */\n/*                                                                                          */\n/*                     01* POINTED TO BY:                                                   */\n/*                          TCBJSCB FIELD OF DATA AREA TCB                                  */\n/*                          JSCBACT FIELD OF DATA AREA JSCB (ACTIVE JSCB)                   */\n/*                                                                                          */\n/*                     01* SERIALIZATION:                                                   */\n/*                          NONE REQUIRED                                                   */\n/*                                                                                          */\n/*                     01* FUNCTION:                                                        */\n/*                     02*  COMMUNICATION OF JOB OR STEP RELATED DATA ITEMS.  THIS IS       */\n/*                          THE BASE FOR THE JOB STEP ENVIRONMENT, IN PARTICULAR SWA        */\n/*                          AND ALLOCATION.                                                 */\n/*                                                                                          */\n/*                     01* METHOD OF ACCESS:                                                */\n/*                     02*  ASM:    L     REG,TCBJSCB                                       */\n/*                                  USING IEZJSCB,REG                                       */\n/*                                                                                          */\n/*                                  WHERE REG IS ANY REGISTER OTHER THAN ZERO GIVES         */\n/*                                  ADDRESSABILITY FOR ALL SYMBOLS.                         */\n/*                     02*  PL/AS:                                                          */\n/*                                  %INCLUDE SYSLIB(IKJTCB)                          @L1C   */\n/*                                  %INCLUDE SYSLIB(IEZJSCB)                         @L1A   */\n/*                                  SET %IEZJSCB_GENEQU='NO' IF YOU WANT CONSTANTS          */\n/*                                   INSTEAD OF THE GENERATED EQUATES.                      */\n/*                                                                                          */\n/*                     01* DELETED BY: IEFINSWD                                             */\n/*                                                                                          */\n/*                     01* FREQUENCY: ONE PER 'JOB STEP ENVIRONMENT'                        */\n/*                                                                                          */\n/*                     01* EXTERNAL CLASSIFICATION:                                  @P4A   */\n/*                     02*    DMTI:  BASE                                                   */\n/*                     02*    PSPI:  FIELDS                                                 */\n/*                                                                                          */\n/*                              JSCBPASS                                                    */\n/*                              JSCBAUTH                                                    */\n/*                     02*    GUPI:  FIELDS                                                 */\n/*                                                                                          */\n/*                              JSCBACT                                                     */\n/*                              JSCBPGMN                                                    */\n/*                              JSCBQMPI                                                    */\n/*                              JSCBSTEP                                                    */\n/*                                                                                          */\n/*                     01* END OF EXTERNAL CLASSIFICATION:                                  */\n/*                                                                                          */\n/*                     01* DEPENDENCIES:                                                    */\n/*                         - CHANGES TO THIS MACRO SHOULD BE REFLECTED IN IPCS              */\n/*                           MODEL IEZMJSCB                                          @L3A   */\n/*                         - SVAS IN THIS MACRO SHOULD BE RESOLVED TO REAL ADDRESSES        */\n/*                           BY USING SWAREQ                                         @P2A   */\n/*                         - MOST ENVIRONMENTS SHOULD USE PSATOLD -> TCBJSCB -> JCSBACT     */\n/*                           TO LOCATE THE 'ACTIVE JSCB'.                            @P2A   */\n/*                                                                                          */\n/*                     01* NOTES:                                                           */\n/*                          THE JSCB IS ALSO POINTED TO BY THE LCTJSCB FIELD OF DATA        */\n/*                          AREA LCT.                                                       */\n/*                                                                                          */\n/*                     01* DISTRIBUTION LIBRARY:                                            */\n/*                                                                                          */\n/*                       CHANGE ACTIVITY = L1,OZ95568,OY01530,D1,OY19251,L2,L3,T1,01,       */\n/*                                         P4                                        @P4A   */\n/*                      THE ABOVE SECTION OF THE CHANGE ACTIVITY IS NO LONGER UPDATED.      */\n/*                                                                                          */\n/*                      $L1= SMSSTG2 JBB2223 860324 PDT4: STOR MGMT SUBSYS STG2 SUPT @L1A   */\n/*                      $D1= DCR0023 JBB2223 861117 PDFF: DYNAMIC OUTPUT SUPPORT     @D1A   */\n/*                      $T1= OY39346 JBB2223 901001 PDIB: ADDED FIELD JSCBRSWA       @T1A   */\n/*                      $L2= EMVS2   HBB4410 881107 PDKK: CSCB VSCR                  @L2A   */\n/*                      $P1= PEO3967 HBB4410 900328 PDH1: FIXED RESTRICTION LIFTED   @P1A   */\n/*                      $L3= DDPERF  HBB4420 900406 PDDS: DDLPERFIPCS DD LIMIT              */\n/*                                                                    PERFORMANCE    @L3A   */\n/*                      $P2= PKB1814 HBB4430 920429 PDCC: 10X DEFECT ELIMINATION     @P2A   */\n/*                                                        SHOWHDR FORMAT COMPLETE    @P2A   */\n/*                      $01= OY55080 JBB2223 920423 PDIB: DELETED JSCBRSWA           @01A   */\n/*                      $P4= PIG4009 HBB5510 930421 PDJY: CONTINUOUS IMPROVEMENT PTM @P4A   */\n/*                      $P5= PIG4163 HBB5510 930909 PDDZ: CDPI CLEANUP               @P5A   */\n/*                      $L4= PR530   HBB6603 950415 PDXB: PL/X CONSTANTS             @L4A   */\n/*                      $L5= ALLEN   HBB6606 971231 PDNN: DDLIMIT SUPPORT            @L5A   */\n/*                                                                                          */\n/*                           CODE HAS BEEN ADDED FOR THE FOLLOWING SUPPORT                  */\n/*                           CODES: @G860PB2, PCC0915, PCC1264, PCC1510          @ZMC1510   */\n/*                                                                                          */\n/*                       NOTE:                                                              */\n/*                           IN ADDITION TO THE MANDATORY USE OF THIS MACRO FOR             */\n/*                           REFERENCES TO THE JSCB, MODULES IN 0S/VS1 AND OS/VS2 WHICH     */\n/*                           ALLOCATE AND/OR FREE THE JSCB ARE REQUIRED TO USE THE          */\n/*                           GETJSCB AND FREEJSCB MACROS.                                   */\n/*                                                                                          */\n/*                      END OF SPECIFICATIONS *******************************************   */\n/*                      JSCBECB1 - ADDRESS OF THE CANCEL ECB IN THE CSCB WHILE   @ZMC1510   */\n/*                                 THE INITIATOR IS WAITING FOR A REGION. THIS   @ZMC1510   */\n/*                                 IS THE FIRST ECB IN A LIST OF TWO ECBS.       @ZMC1510   */\n/*                      JSCBECB2 - ADDRESS OF THE WAIT FOR REGION ECB WHILE THE  @ZMC1510   */\n/*                                 INITIATOR IS WAITING FOR A REGION. THIS IS    @ZMC1510   */\n/*                                 THE SECOND ECB IN A LIST OF TWO ECBS.         @ZMC1510   */\n/*                              THESE TWO ECBS OCCUPY THE SAME SPACE AS JSCBPGMN @ZMC1510   */\n/*                              SINCE ALL THE FIELDS ARE ONLY USED IN IEFSD263,  @ZMC1510   */\n/*                              AND THE ECBS ARE USED (IF NEEDED) BEFORE THE     @ZMC1510   */\n/*                              THE AREA IS REFERENCED AS JSCBPGMN.              @ZMC1510   */\n/*                      JSCBALOC - ADDRESS OF THE ALLOCATION WORK AREA. THIS     @ZMC1264   */\n/*                                 FIELD WAS MOVED TO PREVIOUSLY RESERVED FIELD  @ZMC1264   */\n/*                                 WHICH REPLACED JSCBSWAB. THIS FIELD WAS AFTER @ZMC1264   */\n/*                                 JSCBJRBA.                                     @ZMC1264   */\n/*                      JSCBSECB - RESTORED. THIS FIELD NEEDS TO BE IN THE JSCB  @ZMC1264   */\n/*                                 WHICH IS FIXED RATHER THAN IN THE LCT WHICH   @ZMC1264   */\n/*                                 WHICH IS PAGEABLE. THE ECB NEEDS TO BE FIXED  @ZMC1264   */\n/*                                 BECAUSE WHILE WAITING FOR A REGION, IF THE    @ZMC1264   */\n/*                                 ECB IS IN PAGEABLE STORAGE IT COULD BE PAGED  @ZMC1264   */\n/*                                 OUT TO GET THE NECESSARY SPACE FOR THE REGION.@ZMC1264   */\n/*                      JSCBALOC - ADDRESS OF THE ALLOCATION WORK AREA. THIS     @ZMC0915   */\n/*                                 FIELD REPLACES THE RESERVED FIELD MADE BY     @ZMC0915   */\n/*                                 THE REMOVAL OF JSCBSECB.                      @ZMC0915   */\n/*                      JSCBSECB - NO LONGER NEEDED. FIELD CHANGED TO RESERVED.  @G860PB2   */\n/*                      JSCRIUCP - ADDRESS OF THE DYNAMIC ALLOCATION             @ZA95568   */\n/*                                 COMMUNICATION TABLE                           @ZA95568   */\n/*                      JSCBASW2 - ADDED POINTER TO THE ALLOCATION STAE WORKAREA     @L1A   */\n/*                      JSCBJESW - ADDED ADDRESS OF A JES WORK AREA IN SUPPORT   @YA01530   */\n/*                                 OF JES3 PTM PB50691                           @YA01530   */\n/*                      JSCBODNO - A COUNTER USED BY DYNAMIC OUTPUT TO GENERATE      @D1A   */\n/*                                 OUTPUT DESCRIPTOR NAMES.                          @D1A   */\n/*                      JSCAMCPL - A DEFINED NEW FIELD TO CONTAIN THE ALLOCATION @YA19251   */\n/*                                 MESSAGE CELLPOOL ID IN SUPPORT OF OY15987     @YA19251   */\n/*                                 REPLACES RESERVED FIELD JSCRSV52.             @YA19251   */\n/*                                                                                   @L2A   */\n/*                      A - ADDED JSCBCSCX FIELD TO STORE AMODE24 EXTENSION OF CSCB  @L2A   */\n/*                      C - JSCBSECB COMMENT BECAUSE REQUIREMENT THAT THE            @P1A   */\n/*                          ECB MUST BE IN FIXED STORAGE HAS BEEN LIFTED AND IS NO   @P1A   */\n/*                          LONGER A REQUIREMENT.                                    @P1A   */\n/*                      A - ADDED DEPENDENCY NOTE FOR IPCS CONTROL BLOCK MODEL       @L3A   */\n/*                      C - CHANGED JSCRIUCP TO JSCRSV34 BECAUSE FIELD IS NO LONGER  @L3A   */\n/*                          USED                                                     @L3A   */\n/*                      JSCBRSWA - A DEFINED NEW FIELD TO INDICATE IF SWA            @T1A   */\n/*                                 ALLOCATIONS AND DELETIONS ARE TO BE ALLOWED       @T1A   */\n/*                      C - CHANGED APPROPRIATE TTRS TO SVAS, REMOVED JSCBTTTR       @P2A   */\n/*                      JSCBRSWA - CHANGED JSCBRSWA TO RESERVED                      @01A   */\n/*                      C - CHANGED BITS JSCBRV04 AND JSCBRV05 TO BE JSCBSJFY AND    @P4A   */\n/*                          JSCBSJFN, RESPECTIVELY.                                  @P4A   */\n/*                      A - CDPI CHANGES                                             @P4A   */\n/*                      C - REMOVED JSCDSABQ FROM LIST OF INTENDED FIELDS            @P5A   */\n/*                      A - ADDED IEZJSCB_GENEQU SUPPORT, SO USERS COULD GET PL/X    @L4A   */\n/*                          CONSTANTS INSTEAD OF GEN'D EQUATES                       @L4A   */\n/*                      C - CHANGED JSCRSV34 TO JSCDSNQP FOR THE DD LIMIT SUPPORT    @L5A   */\n/*                                                                                          */\n/*                   %GOTO JSCBL2;                                                          */\n/*                                                                                          */\n \u00fc;\n\n\n\n\n#define TIOCJSTN                        tiocjstn\n#define TIOCNJOB                        tiocnjob\n#define TIOCPSTN                        tiocpstn\n#define TIOCSTEP                        tiocstep\u00c40\u00dc\n#define TIOCSTPN                        tiocstpn\u00c40\u00dc\n#define TIOEDDNM                        tioeddnm\n#define TIOEFSRT                        tioefsrt\n#define TIOEJFCB                        tioejfcb\n#define TIOELINK                        tioelink\n#define TIOELNGH                        tioelngh\n#define TIOERLOC                        tioerloc\u00c40\u00dc\n#define TIOESTTA                        tioestta\n#define TIOESTTB                        tioesttb\n#define TIOESTTC                        tioesttc\n#define TIOEWTCT                        tioewtct\n#define TIOPNSLT                        tiopnslt\n#define TIOPNSRT                        tiopnsrt\n#define TIOPPOOL                        tioppool\n#define TIOPSLOT                        tiopslot\n#define TIOPSTTB                        tiopsttb\n#define TIOTFEND                        tiotfend\n\n\n\n\n\n\n\n\n/*\nSYMBOL         OFFSET     SIZE     TYPE      C-TYPE               C-NAME\nTIOCJSTN       000010    000008    CL8       CL8                  tiocjstn\nTIOCNJOB       000000    000008    CL8       CL8                  tiocnjob\nTIOCPSTN       000008    000008    CL8       CL8                  tiocpstn\nTIOCSTEP       000008    000000    0CL16     CL16 \u00c40\u00dc           tiocstep\nTIOCSTPN       000008    000000    0CL8      CL8 \u00c40\u00dc            tiocstpn\nTIOEDDNM       00001C    000008    CL8       CL8                  tioeddnm\nTIOEFSRT       000029    000003    AL3       AL3                  tioefsrt\nTIOEJFCB       000024    000003    CL3       CL3                  tioejfcb\nTIOELINK       00001B    000001    CL1       char                 tioelink\nTIOELNGH       000018    000001    FL1       signed char          tioelngh\nTIOERLOC       00001A    000000    0CL2      CL2 \u00c40\u00dc            tioerloc\nTIOESTTA       000019    000001    B         char                 tioestta\nTIOESTTB       000028    000001    B         char                 tioesttb\nTIOESTTC       000027    000001    B         char                 tioesttc\nTIOEWTCT       00001A    000001    CL1       char                 tioewtct\nTIOPNSLT       00002D    000001    FL1       signed char          tiopnslt\nTIOPNSRT       00002F    000001    FL1       signed char          tiopnsrt\nTIOPPOOL       000030    000008    CL8       CL8                  tioppool\nTIOPSLOT       000039    000003    AL3       AL3                  tiopslot\nTIOPSTTB       000038    000001    XL1       char                 tiopsttb\nTIOTFEND       00003C    000004    CL4       CL4                  tiotfend\n\n\n*/\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TIOT1DS": {"ttr": 2407, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "#pragma pack(1)\n\nstruct tiot1ds \u00e4\n  unsigned char  tiocnjob\u00c48\u00dc;   /* -         JOB NAME                                 */\n  struct \u00e4\n    struct \u00e4\n      unsigned char  _tiocpstn\u00c48\u00dc; /* -         8-BYTE PROC STEP NAME FOR PROCS     @P1A */\n      \u00fc tiocstpn;\n    unsigned char  _tiocjstn\u00c48\u00dc; /* -         8-BYTE JOBSTEP NAME FOR PROCS       @P1A */\n    \u00fc tiocstep;\n  char           tioelngh;      /* -          LENGTH, IN BYTES, OF THIS ENTRY         */\n  int            tiosltyp  : 1, /* -        NONSTANDARD LABEL (TAPE) (OS/VS1)         */\n                 tiospltp  : 1, /* -        DURING ALLOCATION, SPLIT CYLINDER         */\n                 tiosplts  : 1, /* -        DURING ALLOCATION, SPLIT CYLINDER         */\n                 tiosjblb  : 1, /* -        JOBLIB INDICATOR                          */\n                 tiosdads  : 1, /* -        DADSM ALLOCATION NECESSRY                 */\n                 tioslabl  : 1, /* -        LABELED TAPE.  IF BIT 0 IS OFF, SL OR     */\n                 tiosdsp1  : 1, /* -        REWIND/UNLOAD THE TAPE VOLUME (TAPE)      */\n                 tiosdsp2  : 1; /* -        REWIND THE TAPE VOLUME (TAPE)             */\n  struct \u00e4\n    unsigned char  _tioewtct; /* -          DURING ALLOCATION, NUMBER OF DEVICES */\n    unsigned char  _tioelink; /* -          DURING ALLOCATION, LINK TO THE       */\n    \u00fc tioerloc;\n  unsigned char  tioeddnm\u00c48\u00dc;   /* -          DD NAME                                 */\n  unsigned char  tioejfcb\u00c43\u00dc;   /* -          SWA virtual address token, mapped       */\n  int            tiosdkcr  : 1, /* -        MAIN STORAGE OR DASD ADDRESS              */\n                 tiosdefr  : 1, /* -        DEFERRED MOUNT                            */\n                 tiosaffp  : 1, /* -        PRIMARY UNIT AFFINITY                     */\n                 tiosaffs  : 1, /* -        SECONDARY UNIT AFFINITY                   */\n                 tiosvolp  : 1, /* -        PRIMARY VOLUME AFFINITY                   */\n                 tiosvols  : 1, /* -        SECONDARY VOLUME AFFINITY                 */\n                 tiosbalp  : 1, /* -        PRIMARY SUBALLOCATE                       */\n                 tiosbals  : 1; /* -        SECONDARY SUBALLOCATE                     */\n  int            tiosused  : 1, /* -        DATA SET IS ON DEVICE                     */\n                 tiosreqd  : 1, /* -        DATA SET WILL USE DEVICE                  */\n                 tiospvio  : 1, /* -        DEVICE VIOLATES SEPARATION                */\n                 tiosvlsr  : 1, /* -        VOLUME SERIAL PRESENT                     */\n                 tiossetu  : 1, /* -        SETUP MESSAGE REQUIRED                    */\n                 tiosmntd  : 1, /* -        IF 0, DELETE UNLOADED VOLUME IF UNLOAD    */\n                 tiosunld  : 1, /* -        UNLOAD REQUIRED                           */\n                 tiosverf  : 1; /* -        VERIFICATION REQUIRED                     */\n  int            tioefsrt : 24; /* -          DURING PROBLEM PROGRAM, ADDRESS OF UCB. */\n  unsigned char  _filler1;      /* -          RESERVED                                */\n  char           tiopnslt;      /* -          NUMBER OF SLOTS FOR POOL                */\n  unsigned char  _filler2;      /* -          RESERVED                                */\n  char           tiopnsrt;      /* -          NUMBER OF DEVICES (FILLED SLOTS)        */\n  unsigned char  tioppool\u00c48\u00dc;   /* -          POOL NAME                               */\n  unsigned char  tiopsttb;      /* -          STATUS OF SLOT                          */\n  int            tiopslot : 24; /* -          UCB ADDRESS OR EMPTY SLOT               */\n  unsigned char  tiotfend\u00c44\u00dc;   /* -          FINAL END OF THE TIOT - BINARY ZEROS    */\n  \u00fc;\n\n#define tiocpstn tiocstep.tiocstpn._tiocpstn\n#define tiocjstn tiocstep._tiocjstn\n#define tioewtct tioerloc._tioewtct\n#define tioelink tioerloc._tioelink\n\n#pragma pack(reset)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TREES": {"ttr": 2349, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* header created automatically with -DGEN_TREES_H */\n\nlocal const ct_data static_ltree\u00c4L_CODES+2\u00dc = \u00e4\n\u00e4\u00e4 12\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4140\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 76\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4204\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 44\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4172\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4108\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4236\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 28\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4156\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4 92\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4220\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 60\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4188\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4124\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4252\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4  2\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4130\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 66\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4194\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4 34\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4162\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 98\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4226\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 18\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4146\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 82\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4210\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 50\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4178\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4114\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4242\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 10\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4138\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 74\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4202\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 42\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4170\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4106\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4234\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4 26\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4154\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 90\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4218\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 58\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4186\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4122\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4250\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4  6\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4134\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4 70\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4198\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 38\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4166\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4102\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4230\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 22\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4150\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 86\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4214\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4 54\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4182\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4118\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4246\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 14\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4142\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 78\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4206\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 46\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4174\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4110\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4238\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 30\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4158\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 94\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4222\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 62\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4190\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4126\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4254\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4  1\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4129\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 65\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4193\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 33\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4161\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 97\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4225\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 17\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4145\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4 81\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4209\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 49\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4177\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4113\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4241\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4  9\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4137\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 73\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4201\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4 41\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4169\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4105\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4233\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 25\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4153\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 89\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4217\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 57\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4185\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4121\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4249\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4  5\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4133\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 69\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4197\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 37\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4165\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4101\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4229\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4 21\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4149\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 85\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4213\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 53\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4181\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4117\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4245\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 13\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4141\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4 77\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4205\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 45\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4173\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4109\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4237\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 29\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4157\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 93\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4221\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4 61\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4189\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4125\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4253\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 19\u00fc,\u00e4  9\u00fc\u00fc,\n\u00e4\u00e4275\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4147\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4403\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4 83\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4339\u00fc,\u00e4  9\u00fc\u00fc,\n\u00e4\u00e4211\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4467\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4 51\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4307\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4179\u00fc,\u00e4  9\u00fc\u00fc,\n\u00e4\u00e4435\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4115\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4371\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4243\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4499\u00fc,\u00e4  9\u00fc\u00fc,\n\u00e4\u00e4 11\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4267\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4139\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4395\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4 75\u00fc,\u00e4  9\u00fc\u00fc,\n\u00e4\u00e4331\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4203\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4459\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4 43\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4299\u00fc,\u00e4  9\u00fc\u00fc,\n\u00e4\u00e4171\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4427\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4107\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4363\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4235\u00fc,\u00e4  9\u00fc\u00fc,\n\u00e4\u00e4491\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4 27\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4283\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4155\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4411\u00fc,\u00e4  9\u00fc\u00fc,\n\u00e4\u00e4 91\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4347\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4219\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4475\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4 59\u00fc,\u00e4  9\u00fc\u00fc,\n\u00e4\u00e4315\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4187\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4443\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4123\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4379\u00fc,\u00e4  9\u00fc\u00fc,\n\u00e4\u00e4251\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4507\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4  7\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4263\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4135\u00fc,\u00e4  9\u00fc\u00fc,\n\u00e4\u00e4391\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4 71\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4327\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4199\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4455\u00fc,\u00e4  9\u00fc\u00fc,\n\u00e4\u00e4 39\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4295\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4167\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4423\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4103\u00fc,\u00e4  9\u00fc\u00fc,\n\u00e4\u00e4359\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4231\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4487\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4 23\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4279\u00fc,\u00e4  9\u00fc\u00fc,\n\u00e4\u00e4151\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4407\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4 87\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4343\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4215\u00fc,\u00e4  9\u00fc\u00fc,\n\u00e4\u00e4471\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4 55\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4311\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4183\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4439\u00fc,\u00e4  9\u00fc\u00fc,\n\u00e4\u00e4119\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4375\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4247\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4503\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4 15\u00fc,\u00e4  9\u00fc\u00fc,\n\u00e4\u00e4271\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4143\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4399\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4 79\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4335\u00fc,\u00e4  9\u00fc\u00fc,\n\u00e4\u00e4207\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4463\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4 47\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4303\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4175\u00fc,\u00e4  9\u00fc\u00fc,\n\u00e4\u00e4431\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4111\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4367\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4239\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4495\u00fc,\u00e4  9\u00fc\u00fc,\n\u00e4\u00e4 31\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4287\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4159\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4415\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4 95\u00fc,\u00e4  9\u00fc\u00fc,\n\u00e4\u00e4351\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4223\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4479\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4 63\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4319\u00fc,\u00e4  9\u00fc\u00fc,\n\u00e4\u00e4191\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4447\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4127\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4383\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4255\u00fc,\u00e4  9\u00fc\u00fc,\n\u00e4\u00e4511\u00fc,\u00e4  9\u00fc\u00fc, \u00e4\u00e4  0\u00fc,\u00e4  7\u00fc\u00fc, \u00e4\u00e4 64\u00fc,\u00e4  7\u00fc\u00fc, \u00e4\u00e4 32\u00fc,\u00e4  7\u00fc\u00fc, \u00e4\u00e4 96\u00fc,\u00e4  7\u00fc\u00fc,\n\u00e4\u00e4 16\u00fc,\u00e4  7\u00fc\u00fc, \u00e4\u00e4 80\u00fc,\u00e4  7\u00fc\u00fc, \u00e4\u00e4 48\u00fc,\u00e4  7\u00fc\u00fc, \u00e4\u00e4112\u00fc,\u00e4  7\u00fc\u00fc, \u00e4\u00e4  8\u00fc,\u00e4  7\u00fc\u00fc,\n\u00e4\u00e4 72\u00fc,\u00e4  7\u00fc\u00fc, \u00e4\u00e4 40\u00fc,\u00e4  7\u00fc\u00fc, \u00e4\u00e4104\u00fc,\u00e4  7\u00fc\u00fc, \u00e4\u00e4 24\u00fc,\u00e4  7\u00fc\u00fc, \u00e4\u00e4 88\u00fc,\u00e4  7\u00fc\u00fc,\n\u00e4\u00e4 56\u00fc,\u00e4  7\u00fc\u00fc, \u00e4\u00e4120\u00fc,\u00e4  7\u00fc\u00fc, \u00e4\u00e4  4\u00fc,\u00e4  7\u00fc\u00fc, \u00e4\u00e4 68\u00fc,\u00e4  7\u00fc\u00fc, \u00e4\u00e4 36\u00fc,\u00e4  7\u00fc\u00fc,\n\u00e4\u00e4100\u00fc,\u00e4  7\u00fc\u00fc, \u00e4\u00e4 20\u00fc,\u00e4  7\u00fc\u00fc, \u00e4\u00e4 84\u00fc,\u00e4  7\u00fc\u00fc, \u00e4\u00e4 52\u00fc,\u00e4  7\u00fc\u00fc, \u00e4\u00e4116\u00fc,\u00e4  7\u00fc\u00fc,\n\u00e4\u00e4  3\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4131\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 67\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4195\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 35\u00fc,\u00e4  8\u00fc\u00fc,\n\u00e4\u00e4163\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4 99\u00fc,\u00e4  8\u00fc\u00fc, \u00e4\u00e4227\u00fc,\u00e4  8\u00fc\u00fc\n\u00fc;\n\nlocal const ct_data static_dtree\u00c4D_CODES\u00dc = \u00e4\n\u00e4\u00e4 0\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e416\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e4 8\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e424\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e4 4\u00fc,\u00e4 5\u00fc\u00fc,\n\u00e4\u00e420\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e412\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e428\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e4 2\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e418\u00fc,\u00e4 5\u00fc\u00fc,\n\u00e4\u00e410\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e426\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e4 6\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e422\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e414\u00fc,\u00e4 5\u00fc\u00fc,\n\u00e4\u00e430\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e4 1\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e417\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e4 9\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e425\u00fc,\u00e4 5\u00fc\u00fc,\n\u00e4\u00e4 5\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e421\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e413\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e429\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e4 3\u00fc,\u00e4 5\u00fc\u00fc,\n\u00e4\u00e419\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e411\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e427\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e4 7\u00fc,\u00e4 5\u00fc\u00fc, \u00e4\u00e423\u00fc,\u00e4 5\u00fc\u00fc\n\u00fc;\n\nconst uch _dist_code\u00c4DIST_CODE_LEN\u00dc = \u00e4\n 0,  1,  2,  3,  4,  4,  5,  5,  6,  6,  6,  6,  7,  7,  7,  7,  8,  8,  8,  8,\n 8,  8,  8,  8,  9,  9,  9,  9,  9,  9,  9,  9, 10, 10, 10, 10, 10, 10, 10, 10,\n10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,\n11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,\n12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13,\n13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,\n13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,\n14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,\n14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,\n14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15,\n15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,\n15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,\n15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  0,  0, 16, 17,\n18, 18, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22,\n23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,\n26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,\n26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27,\n27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27,\n27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28,\n28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28,\n28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28,\n28, 28, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29,\n29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29,\n29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29,\n29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29\n\u00fc;\n\nconst uch _length_code\u00c4MAX_MATCH-MIN_MATCH+1\u00dc= \u00e4\n 0,  1,  2,  3,  4,  5,  6,  7,  8,  8,  9,  9, 10, 10, 11, 11, 12, 12, 12, 12,\n13, 13, 13, 13, 14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16,\n17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19,\n19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,\n21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22,\n22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23,\n23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,\n25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26,\n26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,\n26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27,\n27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 28\n\u00fc;\n\nlocal const int base_length\u00c4LENGTH_CODES\u00dc = \u00e4\n0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 16, 20, 24, 28, 32, 40, 48, 56,\n64, 80, 96, 112, 128, 160, 192, 224, 0\n\u00fc;\n\nlocal const int base_dist\u00c4D_CODES\u00dc = \u00e4\n    0,     1,     2,     3,     4,     6,     8,    12,    16,    24,\n   32,    48,    64,    96,   128,   192,   256,   384,   512,   768,\n 1024,  1536,  2048,  3072,  4096,  6144,  8192, 12288, 16384, 24576\n\u00fc;\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZCONF": {"ttr": 2355, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* zconf.h -- configuration of the zlib compression library\n * Copyright (C) 1995-2002 Jean-loup Gailly.\n * For conditions of distribution and use, see copyright notice in zlib.h\n */\n\n/* \u00a7(#) $Id: zconf.h,v 1.2 2003/09/11 11:16:22 matthiasw Exp $ */\n\n#ifndef _ZCONF_H\n#define _ZCONF_H\n\n/*\n * If you *really* need a unique prefix for all types and library functions,\n * compile with -DZ_PREFIX. The \"standard\" zlib should be compiled without it.\n */\n#ifdef Z_PREFIX\n#  define deflateInit_\tz_deflateInit_\n#  define deflate\tz_deflate\n#  define deflateEnd\tz_deflateEnd\n#  define inflateInit_ \tz_inflateInit_\n#  define inflate\tz_inflate\n#  define inflateEnd\tz_inflateEnd\n#  define deflateInit2_\tz_deflateInit2_\n#  define deflateSetDictionary z_deflateSetDictionary\n#  define deflateCopy\tz_deflateCopy\n#  define deflateReset\tz_deflateReset\n#  define deflateParams\tz_deflateParams\n#  define inflateInit2_\tz_inflateInit2_\n#  define inflateSetDictionary z_inflateSetDictionary\n#  define inflateSync\tz_inflateSync\n#  define inflateSyncPoint z_inflateSyncPoint\n#  define inflateReset\tz_inflateReset\n#  define compress\tz_compress\n#  define compress2\tz_compress2\n#  define uncompress\tz_uncompress\n#  define adler32\tz_adler32\n#  define crc32\t\tz_crc32\n#  define get_crc_table z_get_crc_table\n\n#  define Byte\t\tz_Byte\n#  define uInt\t\tz_uInt\n#  define uLong\t\tz_uLong\n#  define Bytef\t        z_Bytef\n#  define charf\t\tz_charf\n#  define intf\t\tz_intf\n#  define uIntf\t\tz_uIntf\n#  define uLongf\tz_uLongf\n#  define voidpf\tz_voidpf\n#  define voidp\t\tz_voidp\n#endif\n\n#if (defined(_WIN32) ]] defined(__WIN32__)) && |defined(WIN32)\n#  define WIN32\n#endif\n#if defined(__GNUC__) ]] defined(WIN32) ]] defined(__386__) ]] defined(i386)\n#  ifndef __32BIT__\n#    define __32BIT__\n#  endif\n#endif\n#if defined(__MSDOS__) && |defined(MSDOS)\n#  define MSDOS\n#endif\n\n/*\n * Compile with -DMAXSEG_64K if the alloc function cannot allocate more\n * than 64k bytes at a time (needed on systems with 16-bit int).\n */\n#if defined(MSDOS) && |defined(__32BIT__)\n#  define MAXSEG_64K\n#endif\n#ifdef MSDOS\n#  define UNALIGNED_OK\n#endif\n\n#if (defined(MSDOS) ]] defined(_WINDOWS) ]] defined(WIN32))  && |defined(STDC)\n#  define STDC\n#endif\n#if defined(__STDC__) ]] defined(__cplusplus) ]] defined(__OS2__)\n#  ifndef STDC\n#    define STDC\n#  endif\n#endif\n\n#ifndef STDC\n#  ifndef const /* cannot use |defined(STDC) && |defined(const) on Mac */\n#    define const\n#  endif\n#endif\n\n/* Some Mac compilers merge all .h files incorrectly: */\n#if defined(__MWERKS__) ]] defined(applec) ]]defined(THINK_C) ]]defined(__SC__)\n#  define NO_DUMMY_DECL\n#endif\n\n/* Old Borland C incorrectly complains about missing returns: */\n#if defined(__BORLANDC__) && (__BORLANDC__ < 0x500)\n#  define NEED_DUMMY_RETURN\n#endif\n\n\n/* Maximum value for memLevel in deflateInit2 */\n#ifndef MAX_MEM_LEVEL\n#  ifdef MAXSEG_64K\n#    define MAX_MEM_LEVEL 8\n#  else\n#    define MAX_MEM_LEVEL 9\n#  endif\n#endif\n\n/* Maximum value for windowBits in deflateInit2 and inflateInit2.\n * WARNING: reducing MAX_WBITS makes minigzip unable to extract .gz files\n * created by gzip. (Files created by minigzip can still be extracted by\n * gzip.)\n */\n#ifndef MAX_WBITS\n#  define MAX_WBITS   15 /* 32K LZ77 window */\n#endif\n\n/* The memory requirements for deflate are (in bytes):\n            (1 << (windowBits+2)) +  (1 << (memLevel+9))\n that is: 128K for windowBits=15  +  128K for memLevel = 8  (default values)\n plus a few kilobytes for small objects. For example, if you want to reduce\n the default memory requirements from 256K to 128K, compile with\n     make CFLAGS=\"-O -DMAX_WBITS=14 -DMAX_MEM_LEVEL=7\"\n Of course this will generally degrade compression (there's no free lunch).\n\n   The memory requirements for inflate are (in bytes) 1 << windowBits\n that is, 32K for windowBits=15 (default value) plus a few kilobytes\n for small objects.\n*/\n\n                        /* Type declarations */\n\n#ifndef OF /* function prototypes */\n#  ifdef STDC\n#    define OF(args)  args\n#  else\n#    define OF(args)  ()\n#  endif\n#endif\n\n/* The following definitions for FAR are needed only for MSDOS mixed\n * model programming (small or medium model with some far allocations).\n * This was tested only with MSC; for other MSDOS compilers you may have\n * to define NO_MEMCPY in zutil.h.  If you don't need the mixed model,\n * just define FAR to be empty.\n */\n#if (defined(M_I86SM) ]] defined(M_I86MM)) && |defined(__32BIT__)\n   /* MSC small or medium model */\n#  define SMALL_MEDIUM\n#  ifdef _MSC_VER\n#    define FAR _far\n#  else\n#    define FAR far\n#  endif\n#endif\n#if defined(__BORLANDC__) && (defined(__SMALL__) ]] defined(__MEDIUM__))\n#  ifndef __32BIT__\n#    define SMALL_MEDIUM\n#    define FAR _far\n#  endif\n#endif\n\n/* Compile with -DZLIB_DLL for Windows DLL support */\n#if defined(ZLIB_DLL)\n#  if defined(_WINDOWS) ]] defined(WINDOWS)\n#    ifdef FAR\n#      undef FAR\n#    endif\n#    include <windows.h>\n#    define ZEXPORT  WINAPI\n#    ifdef WIN32\n#      define ZEXPORTVA  WINAPIV\n#    else\n#      define ZEXPORTVA  FAR _cdecl _export\n#    endif\n#  endif\n#  if defined (__BORLANDC__)\n#    if (__BORLANDC__ >= 0x0500) && defined (WIN32)\n#      include <windows.h>\n#      define ZEXPORT __declspec(dllexport) WINAPI\n#      define ZEXPORTRVA __declspec(dllexport) WINAPIV\n#    else\n#      if defined (_Windows) && defined (__DLL__)\n#        define ZEXPORT _export\n#        define ZEXPORTVA _export\n#      endif\n#    endif\n#  endif\n#endif\n\n#if defined (__BEOS__)\n#  if defined (ZLIB_DLL)\n#    define ZEXTERN extern __declspec(dllexport)\n#  else\n#    define ZEXTERN extern __declspec(dllimport)\n#  endif\n#endif\n\n#ifndef ZEXPORT\n#  define ZEXPORT\n#endif\n#ifndef ZEXPORTVA\n#  define ZEXPORTVA\n#endif\n#ifndef ZEXTERN\n#  define ZEXTERN extern\n#endif\n\n#ifndef FAR\n#   define FAR\n#endif\n\n#if |defined(MACOS) && |defined(TARGET_OS_MAC)\ntypedef unsigned char  Byte;  /* 8 bits */\n#endif\ntypedef unsigned int   uInt;  /* 16 bits or more */\ntypedef unsigned long  uLong; /* 32 bits or more */\n\n#ifdef SMALL_MEDIUM\n   /* Borland C/C++ and some old MSC versions ignore FAR inside typedef */\n#  define Bytef Byte FAR\n#else\n   typedef Byte  FAR Bytef;\n#endif\ntypedef char  FAR charf;\ntypedef int   FAR intf;\ntypedef uInt  FAR uIntf;\ntypedef uLong FAR uLongf;\n\n#ifdef STDC\n   typedef void FAR *voidpf;\n   typedef void     *voidp;\n#else\n   typedef Byte FAR *voidpf;\n   typedef Byte     *voidp;\n#endif\n\n#ifdef HAVE_UNISTD_H\n#  include <sys/types.h> /* for off_t */\n#  include <unistd.h>    /* for SEEK_* and off_t */\n#  define z_off_t  off_t\n#endif\n#ifndef SEEK_SET\n#  define SEEK_SET        0       /* Seek from beginning of file.  */\n#  define SEEK_CUR        1       /* Seek from current position.  */\n#  define SEEK_END        2       /* Set file pointer to EOF plus \"offset\" */\n#endif\n#ifndef z_off_t\n#  define  z_off_t long\n#endif\n\n/* MVS linker does not support external names larger than 8 bytes */\n#if defined(__MVS__)\n#   pragma map(deflateInit_,\"DEIN\")\n#   pragma map(deflateInit2_,\"DEIN2\")\n#   pragma map(deflateEnd,\"DEEND\")\n#   pragma map(inflateInit_,\"ININ\")\n#   pragma map(inflateInit2_,\"ININ2\")\n#   pragma map(inflateEnd,\"INEND\")\n#   pragma map(inflateSync,\"INSY\")\n#   pragma map(inflateSetDictionary,\"INSEDI\")\n#   pragma map(inflate_blocks,\"INBL\")\n#   pragma map(inflate_blocks_new,\"INBLNE\")\n#   pragma map(inflate_blocks_free,\"INBLFR\")\n#   pragma map(inflate_blocks_reset,\"INBLRE\")\n#   pragma map(inflate_codes_free,\"INCOFR\")\n#   pragma map(inflate_codes,\"INCO\")\n#   pragma map(inflate_fast,\"INFA\")\n#   pragma map(inflate_flush,\"INFLU\")\n#   pragma map(inflate_mask,\"INMA\")\n#   pragma map(inflate_set_dictionary,\"INSEDI2\")\n#   pragma map(inflate_copyright,\"INCOPY\")\n#   pragma map(inflate_trees_bits,\"INTRBI\")\n#   pragma map(inflate_trees_dynamic,\"INTRDY\")\n#   pragma map(inflate_trees_fixed,\"INTRFI\")\n#   pragma map(inflate_trees_free,\"INTRFR\")\n#endif\n\n#endif /* _ZCONF_H */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZLIB": {"ttr": 2351, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* zlib.h -- interface of the 'zlib' general purpose compression library\n  version 1.1.4, March 11th, 2002\n\n  Copyright (C) 1995-2002 Jean-loup Gailly and Mark Adler\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n\n  Jean-loup Gailly        Mark Adler\n  jloup\u00a7gzip.org          madler\u00a7alumni.caltech.edu\n\n\n  The data format used by the zlib library is described by RFCs (Request for\n  Comments) 1950 to 1952 in the files ftp://ds.internic.net/rfc/rfc1950.txt\n  (zlib format), rfc1951.txt (deflate format) and rfc1952.txt (gzip format).\n*/\n\n#ifndef _ZLIB_H\n#define _ZLIB_H\n\n#include \"zconf.h\"\n\n#ifdef __cplusplus\nextern \"C\" \u00e4\n#endif\n\n#define ZLIB_VERSION \"1.1.4\"\n\n/*\n     The 'zlib' compression library provides in-memory compression and\n  decompression functions, including integrity checks of the uncompressed\n  data.  This version of the library supports only one compression method\n  (deflation) but other algorithms will be added later and will have the same\n  stream interface.\n\n     Compression can be done in a single step if the buffers are large\n  enough (for example if an input file is mmap'ed), or can be done by\n  repeated calls of the compression function.  In the latter case, the\n  application must provide more input and/or consume the output\n  (providing more output space) before each call.\n\n     The library also supports reading and writing files in gzip (.gz) format\n  with an interface similar to that of stdio.\n\n     The library does not install any signal handler. The decoder checks\n  the consistency of the compressed data, so the library should never\n  crash even in case of corrupted input.\n*/\n\ntypedef voidpf (*alloc_func) OF((voidpf opaque, uInt items, uInt size));\ntypedef void   (*free_func)  OF((voidpf opaque, voidpf address));\n\nstruct internal_state;\n\ntypedef struct z_stream_s \u00e4\n    Bytef    *next_in;  /* next input byte */\n    uInt     avail_in;  /* number of bytes available at next_in */\n    uLong    total_in;  /* total nb of input bytes read so far */\n\n    Bytef    *next_out; /* next output byte should be put there */\n    uInt     avail_out; /* remaining free space at next_out */\n    uLong    total_out; /* total nb of bytes output so far */\n\n    char     *msg;      /* last error message, NULL if no error */\n    struct internal_state FAR *state; /* not visible by applications */\n\n    alloc_func zalloc;  /* used to allocate the internal state */\n    free_func  zfree;   /* used to free the internal state */\n    voidpf     opaque;  /* private data object passed to zalloc and zfree */\n\n    int     data_type;  /* best guess about the data type: ascii or binary */\n    uLong   adler;      /* adler32 value of the uncompressed data */\n    uLong   reserved;   /* reserved for future use */\n\u00fc z_stream;\n\ntypedef z_stream FAR *z_streamp;\n\n/*\n   The application must update next_in and avail_in when avail_in has\n   dropped to zero. It must update next_out and avail_out when avail_out\n   has dropped to zero. The application must initialize zalloc, zfree and\n   opaque before calling the init function. All other fields are set by the\n   compression library and must not be updated by the application.\n\n   The opaque value provided by the application will be passed as the first\n   parameter for calls of zalloc and zfree. This can be useful for custom\n   memory management. The compression library attaches no meaning to the\n   opaque value.\n\n   zalloc must return Z_NULL if there is not enough memory for the object.\n   If zlib is used in a multi-threaded application, zalloc and zfree must be\n   thread safe.\n\n   On 16-bit systems, the functions zalloc and zfree must be able to allocate\n   exactly 65536 bytes, but will not be required to allocate more than this\n   if the symbol MAXSEG_64K is defined (see zconf.h). WARNING: On MSDOS,\n   pointers returned by zalloc for objects of exactly 65536 bytes *must*\n   have their offset normalized to zero. The default allocation function\n   provided by this library ensures this (see zutil.c). To reduce memory\n   requirements and avoid any allocation of 64K objects, at the expense of\n   compression ratio, compile the library with -DMAX_WBITS=14 (see zconf.h).\n\n   The fields total_in and total_out can be used for statistics or\n   progress reports. After compression, total_in holds the total size of\n   the uncompressed data and may be saved for use in the decompressor\n   (particularly if the decompressor wants to decompress everything in\n   a single step).\n*/\n\n                        /* constants */\n\n#define Z_NO_FLUSH      0\n#define Z_PARTIAL_FLUSH 1 /* will be removed, use Z_SYNC_FLUSH instead */\n#define Z_SYNC_FLUSH    2\n#define Z_FULL_FLUSH    3\n#define Z_FINISH        4\n/* Allowed flush values; see deflate() below for details */\n\n#define Z_OK            0\n#define Z_STREAM_END    1\n#define Z_NEED_DICT     2\n#define Z_ERRNO        (-1)\n#define Z_STREAM_ERROR (-2)\n#define Z_DATA_ERROR   (-3)\n#define Z_MEM_ERROR    (-4)\n#define Z_BUF_ERROR    (-5)\n#define Z_VERSION_ERROR (-6)\n/* Return codes for the compression/decompression functions. Negative\n * values are errors, positive values are used for special but normal events.\n */\n\n#define Z_NO_COMPRESSION         0\n#define Z_BEST_SPEED             1\n#define Z_BEST_COMPRESSION       9\n#define Z_DEFAULT_COMPRESSION  (-1)\n/* compression levels */\n\n#define Z_FILTERED            1\n#define Z_HUFFMAN_ONLY        2\n#define Z_DEFAULT_STRATEGY    0\n/* compression strategy; see deflateInit2() below for details */\n\n#define Z_BINARY   0\n#define Z_ASCII    1\n#define Z_UNKNOWN  2\n/* Possible values of the data_type field */\n\n#define Z_DEFLATED   8\n/* The deflate compression method (the only one supported in this version) */\n\n#define Z_NULL  0  /* for initializing zalloc, zfree, opaque */\n\n#define zlib_version zlibVersion()\n/* for compatibility with versions < 1.0.2 */\n\n                        /* basic functions */\n\nZEXTERN const char * ZEXPORT zlibVersion OF((void));\n/* The application can compare zlibVersion and ZLIB_VERSION for consistency.\n   If the first character differs, the library code actually used is\n   not compatible with the zlib.h header file used by the application.\n   This check is automatically made by deflateInit and inflateInit.\n */\n\n/*\nZEXTERN int ZEXPORT deflateInit OF((z_streamp strm, int level));\n\n     Initializes the internal stream state for compression. The fields\n   zalloc, zfree and opaque must be initialized before by the caller.\n   If zalloc and zfree are set to Z_NULL, deflateInit updates them to\n   use default allocation functions.\n\n     The compression level must be Z_DEFAULT_COMPRESSION, or between 0 and 9:\n   1 gives best speed, 9 gives best compression, 0 gives no compression at\n   all (the input data is simply copied a block at a time).\n   Z_DEFAULT_COMPRESSION requests a default compromise between speed and\n   compression (currently equivalent to level 6).\n\n     deflateInit returns Z_OK if success, Z_MEM_ERROR if there was not\n   enough memory, Z_STREAM_ERROR if level is not a valid compression level,\n   Z_VERSION_ERROR if the zlib library version (zlib_version) is incompatible\n   with the version assumed by the caller (ZLIB_VERSION).\n   msg is set to null if there is no error message.  deflateInit does not\n   perform any compression: this will be done by deflate().\n*/\n\n\nZEXTERN int ZEXPORT deflate OF((z_streamp strm, int flush));\n/*\n    deflate compresses as much data as possible, and stops when the input\n  buffer becomes empty or the output buffer becomes full. It may introduce some\n  output latency (reading input without producing any output) except when\n  forced to flush.\n\n    The detailed semantics are as follows. deflate performs one or both of the\n  following actions:\n\n  - Compress more input starting at next_in and update next_in and avail_in\n    accordingly. If not all input can be processed (because there is not\n    enough room in the output buffer), next_in and avail_in are updated and\n    processing will resume at this point for the next call of deflate().\n\n  - Provide more output starting at next_out and update next_out and avail_out\n    accordingly. This action is forced if the parameter flush is non zero.\n    Forcing flush frequently degrades the compression ratio, so this parameter\n    should be set only when necessary (in interactive applications).\n    Some output may be provided even if flush is not set.\n\n  Before the call of deflate(), the application should ensure that at least\n  one of the actions is possible, by providing more input and/or consuming\n  more output, and updating avail_in or avail_out accordingly; avail_out\n  should never be zero before the call. The application can consume the\n  compressed output when it wants, for example when the output buffer is full\n  (avail_out == 0), or after each call of deflate(). If deflate returns Z_OK\n  and with zero avail_out, it must be called again after making room in the\n  output buffer because there might be more output pending.\n\n    If the parameter flush is set to Z_SYNC_FLUSH, all pending output is\n  flushed to the output buffer and the output is aligned on a byte boundary, so\n  that the decompressor can get all input data available so far. (In particular\n  avail_in is zero after the call if enough output space has been provided\n  before the call.)  Flushing may degrade compression for some compression\n  algorithms and so it should be used only when necessary.\n\n    If flush is set to Z_FULL_FLUSH, all output is flushed as with\n  Z_SYNC_FLUSH, and the compression state is reset so that decompression can\n  restart from this point if previous compressed data has been damaged or if\n  random access is desired. Using Z_FULL_FLUSH too often can seriously degrade\n  the compression.\n\n    If deflate returns with avail_out == 0, this function must be called again\n  with the same value of the flush parameter and more output space (updated\n  avail_out), until the flush is complete (deflate returns with non-zero\n  avail_out).\n\n    If the parameter flush is set to Z_FINISH, pending input is processed,\n  pending output is flushed and deflate returns with Z_STREAM_END if there\n  was enough output space; if deflate returns with Z_OK, this function must be\n  called again with Z_FINISH and more output space (updated avail_out) but no\n  more input data, until it returns with Z_STREAM_END or an error. After\n  deflate has returned Z_STREAM_END, the only possible operations on the\n  stream are deflateReset or deflateEnd.\n\n    Z_FINISH can be used immediately after deflateInit if all the compression\n  is to be done in a single step. In this case, avail_out must be at least\n  0.1% larger than avail_in plus 12 bytes.  If deflate does not return\n  Z_STREAM_END, then it must be called again as described above.\n\n    deflate() sets strm->adler to the adler32 checksum of all input read\n  so far (that is, total_in bytes).\n\n    deflate() may update data_type if it can make a good guess about\n  the input data type (Z_ASCII or Z_BINARY). In doubt, the data is considered\n  binary. This field is only for information purposes and does not affect\n  the compression algorithm in any manner.\n\n    deflate() returns Z_OK if some progress has been made (more input\n  processed or more output produced), Z_STREAM_END if all input has been\n  consumed and all output has been produced (only when flush is set to\n  Z_FINISH), Z_STREAM_ERROR if the stream state was inconsistent (for example\n  if next_in or next_out was NULL), Z_BUF_ERROR if no progress is possible\n  (for example avail_in or avail_out was zero).\n*/\n\n\nZEXTERN int ZEXPORT deflateEnd OF((z_streamp strm));\n/*\n     All dynamically allocated data structures for this stream are freed.\n   This function discards any unprocessed input and does not flush any\n   pending output.\n\n     deflateEnd returns Z_OK if success, Z_STREAM_ERROR if the\n   stream state was inconsistent, Z_DATA_ERROR if the stream was freed\n   prematurely (some input or output was discarded). In the error case,\n   msg may be set but then points to a static string (which must not be\n   deallocated).\n*/\n\n\n/*\nZEXTERN int ZEXPORT inflateInit OF((z_streamp strm));\n\n     Initializes the internal stream state for decompression. The fields\n   next_in, avail_in, zalloc, zfree and opaque must be initialized before by\n   the caller. If next_in is not Z_NULL and avail_in is large enough (the exact\n   value depends on the compression method), inflateInit determines the\n   compression method from the zlib header and allocates all data structures\n   accordingly; otherwise the allocation will be deferred to the first call of\n   inflate.  If zalloc and zfree are set to Z_NULL, inflateInit updates them to\n   use default allocation functions.\n\n     inflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough\n   memory, Z_VERSION_ERROR if the zlib library version is incompatible with the\n   version assumed by the caller.  msg is set to null if there is no error\n   message. inflateInit does not perform any decompression apart from reading\n   the zlib header if present: this will be done by inflate().  (So next_in and\n   avail_in may be modified, but next_out and avail_out are unchanged.)\n*/\n\n\nZEXTERN int ZEXPORT inflate OF((z_streamp strm, int flush));\n/*\n    inflate decompresses as much data as possible, and stops when the input\n  buffer becomes empty or the output buffer becomes full. It may some\n  introduce some output latency (reading input without producing any output)\n  except when forced to flush.\n\n  The detailed semantics are as follows. inflate performs one or both of the\n  following actions:\n\n  - Decompress more input starting at next_in and update next_in and avail_in\n    accordingly. If not all input can be processed (because there is not\n    enough room in the output buffer), next_in is updated and processing\n    will resume at this point for the next call of inflate().\n\n  - Provide more output starting at next_out and update next_out and avail_out\n    accordingly.  inflate() provides as much output as possible, until there\n    is no more input data or no more space in the output buffer (see below\n    about the flush parameter).\n\n  Before the call of inflate(), the application should ensure that at least\n  one of the actions is possible, by providing more input and/or consuming\n  more output, and updating the next_* and avail_* values accordingly.\n  The application can consume the uncompressed output when it wants, for\n  example when the output buffer is full (avail_out == 0), or after each\n  call of inflate(). If inflate returns Z_OK and with zero avail_out, it\n  must be called again after making room in the output buffer because there\n  might be more output pending.\n\n    If the parameter flush is set to Z_SYNC_FLUSH, inflate flushes as much\n  output as possible to the output buffer. The flushing behavior of inflate is\n  not specified for values of the flush parameter other than Z_SYNC_FLUSH\n  and Z_FINISH, but the current implementation actually flushes as much output\n  as possible anyway.\n\n    inflate() should normally be called until it returns Z_STREAM_END or an\n  error. However if all decompression is to be performed in a single step\n  (a single call of inflate), the parameter flush should be set to\n  Z_FINISH. In this case all pending input is processed and all pending\n  output is flushed; avail_out must be large enough to hold all the\n  uncompressed data. (The size of the uncompressed data may have been saved\n  by the compressor for this purpose.) The next operation on this stream must\n  be inflateEnd to deallocate the decompression state. The use of Z_FINISH\n  is never required, but can be used to inform inflate that a faster routine\n  may be used for the single inflate() call.\n\n     If a preset dictionary is needed at this point (see inflateSetDictionary\n  below), inflate sets strm-adler to the adler32 checksum of the\n  dictionary chosen by the compressor and returns Z_NEED_DICT; otherwise\n  it sets strm->adler to the adler32 checksum of all output produced\n  so far (that is, total_out bytes) and returns Z_OK, Z_STREAM_END or\n  an error code as described below. At the end of the stream, inflate()\n  checks that its computed adler32 checksum is equal to that saved by the\n  compressor and returns Z_STREAM_END only if the checksum is correct.\n\n    inflate() returns Z_OK if some progress has been made (more input processed\n  or more output produced), Z_STREAM_END if the end of the compressed data has\n  been reached and all uncompressed output has been produced, Z_NEED_DICT if a\n  preset dictionary is needed at this point, Z_DATA_ERROR if the input data was\n  corrupted (input stream not conforming to the zlib format or incorrect\n  adler32 checksum), Z_STREAM_ERROR if the stream structure was inconsistent\n  (for example if next_in or next_out was NULL), Z_MEM_ERROR if there was not\n  enough memory, Z_BUF_ERROR if no progress is possible or if there was not\n  enough room in the output buffer when Z_FINISH is used. In the Z_DATA_ERROR\n  case, the application may then call inflateSync to look for a good\n  compression block.\n*/\n\n\nZEXTERN int ZEXPORT inflateEnd OF((z_streamp strm));\n/*\n     All dynamically allocated data structures for this stream are freed.\n   This function discards any unprocessed input and does not flush any\n   pending output.\n\n     inflateEnd returns Z_OK if success, Z_STREAM_ERROR if the stream state\n   was inconsistent. In the error case, msg may be set but then points to a\n   static string (which must not be deallocated).\n*/\n\n                        /* Advanced functions */\n\n/*\n    The following functions are needed only in some special applications.\n*/\n\n/*\nZEXTERN int ZEXPORT deflateInit2 OF((z_streamp strm,\n                                     int  level,\n                                     int  method,\n                                     int  windowBits,\n                                     int  memLevel,\n                                     int  strategy));\n\n     This is another version of deflateInit with more compression options. The\n   fields next_in, zalloc, zfree and opaque must be initialized before by\n   the caller.\n\n     The method parameter is the compression method. It must be Z_DEFLATED in\n   this version of the library.\n\n     The windowBits parameter is the base two logarithm of the window size\n   (the size of the history buffer).  It should be in the range 8..15 for this\n   version of the library. Larger values of this parameter result in better\n   compression at the expense of memory usage. The default value is 15 if\n   deflateInit is used instead.\n\n     The memLevel parameter specifies how much memory should be allocated\n   for the internal compression state. memLevel=1 uses minimum memory but\n   is slow and reduces compression ratio; memLevel=9 uses maximum memory\n   for optimal speed. The default value is 8. See zconf.h for total memory\n   usage as a function of windowBits and memLevel.\n\n     The strategy parameter is used to tune the compression algorithm. Use the\n   value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a\n   filter (or predictor), or Z_HUFFMAN_ONLY to force Huffman encoding only (no\n   string match).  Filtered data consists mostly of small values with a\n   somewhat random distribution. In this case, the compression algorithm is\n   tuned to compress them better. The effect of Z_FILTERED is to force more\n   Huffman coding and less string matching; it is somewhat intermediate\n   between Z_DEFAULT and Z_HUFFMAN_ONLY. The strategy parameter only affects\n   the compression ratio but not the correctness of the compressed output even\n   if it is not set appropriately.\n\n      deflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough\n   memory, Z_STREAM_ERROR if a parameter is invalid (such as an invalid\n   method). msg is set to null if there is no error message.  deflateInit2 does\n   not perform any compression: this will be done by deflate().\n*/\n\nZEXTERN int ZEXPORT deflateSetDictionary OF((z_streamp strm,\n                                             const Bytef *dictionary,\n                                             uInt  dictLength));\n/*\n     Initializes the compression dictionary from the given byte sequence\n   without producing any compressed output. This function must be called\n   immediately after deflateInit, deflateInit2 or deflateReset, before any\n   call of deflate. The compressor and decompressor must use exactly the same\n   dictionary (see inflateSetDictionary).\n\n     The dictionary should consist of strings (byte sequences) that are likely\n   to be encountered later in the data to be compressed, with the most commonly\n   used strings preferably put towards the end of the dictionary. Using a\n   dictionary is most useful when the data to be compressed is short and can be\n   predicted with good accuracy; the data can then be compressed better than\n   with the default empty dictionary.\n\n     Depending on the size of the compression data structures selected by\n   deflateInit or deflateInit2, a part of the dictionary may in effect be\n   discarded, for example if the dictionary is larger than the window size in\n   deflate or deflate2. Thus the strings most likely to be useful should be\n   put at the end of the dictionary, not at the front.\n\n     Upon return of this function, strm->adler is set to the Adler32 value\n   of the dictionary; the decompressor may later use this value to determine\n   which dictionary has been used by the compressor. (The Adler32 value\n   applies to the whole dictionary even if only a subset of the dictionary is\n   actually used by the compressor.)\n\n     deflateSetDictionary returns Z_OK if success, or Z_STREAM_ERROR if a\n   parameter is invalid (such as NULL dictionary) or the stream state is\n   inconsistent (for example if deflate has already been called for this stream\n   or if the compression method is bsort). deflateSetDictionary does not\n   perform any compression: this will be done by deflate().\n*/\n\nZEXTERN int ZEXPORT deflateCopy OF((z_streamp dest,\n                                    z_streamp source));\n/*\n     Sets the destination stream as a complete copy of the source stream.\n\n     This function can be useful when several compression strategies will be\n   tried, for example when there are several ways of pre-processing the input\n   data with a filter. The streams that will be discarded should then be freed\n   by calling deflateEnd.  Note that deflateCopy duplicates the internal\n   compression state which can be quite large, so this strategy is slow and\n   can consume lots of memory.\n\n     deflateCopy returns Z_OK if success, Z_MEM_ERROR if there was not\n   enough memory, Z_STREAM_ERROR if the source stream state was inconsistent\n   (such as zalloc being NULL). msg is left unchanged in both source and\n   destination.\n*/\n\nZEXTERN int ZEXPORT deflateReset OF((z_streamp strm));\n/*\n     This function is equivalent to deflateEnd followed by deflateInit,\n   but does not free and reallocate all the internal compression state.\n   The stream will keep the same compression level and any other attributes\n   that may have been set by deflateInit2.\n\n      deflateReset returns Z_OK if success, or Z_STREAM_ERROR if the source\n   stream state was inconsistent (such as zalloc or state being NULL).\n*/\n\nZEXTERN int ZEXPORT deflateParams OF((z_streamp strm,\n\t\t\t\t      int level,\n\t\t\t\t      int strategy));\n/*\n     Dynamically update the compression level and compression strategy.  The\n   interpretation of level and strategy is as in deflateInit2.  This can be\n   used to switch between compression and straight copy of the input data, or\n   to switch to a different kind of input data requiring a different\n   strategy. If the compression level is changed, the input available so far\n   is compressed with the old level (and may be flushed); the new level will\n   take effect only at the next call of deflate().\n\n     Before the call of deflateParams, the stream state must be set as for\n   a call of deflate(), since the currently available input may have to\n   be compressed and flushed. In particular, strm->avail_out must be non-zero.\n\n     deflateParams returns Z_OK if success, Z_STREAM_ERROR if the source\n   stream state was inconsistent or if a parameter was invalid, Z_BUF_ERROR\n   if strm->avail_out was zero.\n*/\n\n/*\nZEXTERN int ZEXPORT inflateInit2 OF((z_streamp strm,\n                                     int  windowBits));\n\n     This is another version of inflateInit with an extra parameter. The\n   fields next_in, avail_in, zalloc, zfree and opaque must be initialized\n   before by the caller.\n\n     The windowBits parameter is the base two logarithm of the maximum window\n   size (the size of the history buffer).  It should be in the range 8..15 for\n   this version of the library. The default value is 15 if inflateInit is used\n   instead. If a compressed stream with a larger window size is given as\n   input, inflate() will return with the error code Z_DATA_ERROR instead of\n   trying to allocate a larger window.\n\n      inflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough\n   memory, Z_STREAM_ERROR if a parameter is invalid (such as a negative\n   memLevel). msg is set to null if there is no error message.  inflateInit2\n   does not perform any decompression apart from reading the zlib header if\n   present: this will be done by inflate(). (So next_in and avail_in may be\n   modified, but next_out and avail_out are unchanged.)\n*/\n\nZEXTERN int ZEXPORT inflateSetDictionary OF((z_streamp strm,\n                                             const Bytef *dictionary,\n                                             uInt  dictLength));\n/*\n     Initializes the decompression dictionary from the given uncompressed byte\n   sequence. This function must be called immediately after a call of inflate\n   if this call returned Z_NEED_DICT. The dictionary chosen by the compressor\n   can be determined from the Adler32 value returned by this call of\n   inflate. The compressor and decompressor must use exactly the same\n   dictionary (see deflateSetDictionary).\n\n     inflateSetDictionary returns Z_OK if success, Z_STREAM_ERROR if a\n   parameter is invalid (such as NULL dictionary) or the stream state is\n   inconsistent, Z_DATA_ERROR if the given dictionary doesn't match the\n   expected one (incorrect Adler32 value). inflateSetDictionary does not\n   perform any decompression: this will be done by subsequent calls of\n   inflate().\n*/\n\nZEXTERN int ZEXPORT inflateSync OF((z_streamp strm));\n/*\n    Skips invalid compressed data until a full flush point (see above the\n  description of deflate with Z_FULL_FLUSH) can be found, or until all\n  available input is skipped. No output is provided.\n\n    inflateSync returns Z_OK if a full flush point has been found, Z_BUF_ERROR\n  if no more input was provided, Z_DATA_ERROR if no flush point has been found,\n  or Z_STREAM_ERROR if the stream structure was inconsistent. In the success\n  case, the application may save the current current value of total_in which\n  indicates where valid compressed data was found. In the error case, the\n  application may repeatedly call inflateSync, providing more input each time,\n  until success or end of the input data.\n*/\n\nZEXTERN int ZEXPORT inflateReset OF((z_streamp strm));\n/*\n     This function is equivalent to inflateEnd followed by inflateInit,\n   but does not free and reallocate all the internal decompression state.\n   The stream will keep attributes that may have been set by inflateInit2.\n\n      inflateReset returns Z_OK if success, or Z_STREAM_ERROR if the source\n   stream state was inconsistent (such as zalloc or state being NULL).\n*/\n\n\n                        /* utility functions */\n\n/*\n     The following utility functions are implemented on top of the\n   basic stream-oriented functions. To simplify the interface, some\n   default options are assumed (compression level and memory usage,\n   standard memory allocation functions). The source code of these\n   utility functions can easily be modified if you need special options.\n*/\n\nZEXTERN int ZEXPORT compress OF((Bytef *dest,   uLongf *destLen,\n                                 const Bytef *source, uLong sourceLen));\n/*\n     Compresses the source buffer into the destination buffer.  sourceLen is\n   the byte length of the source buffer. Upon entry, destLen is the total\n   size of the destination buffer, which must be at least 0.1% larger than\n   sourceLen plus 12 bytes. Upon exit, destLen is the actual size of the\n   compressed buffer.\n     This function can be used to compress a whole file at once if the\n   input file is mmap'ed.\n     compress returns Z_OK if success, Z_MEM_ERROR if there was not\n   enough memory, Z_BUF_ERROR if there was not enough room in the output\n   buffer.\n*/\n\nZEXTERN int ZEXPORT compress2 OF((Bytef *dest,   uLongf *destLen,\n                                  const Bytef *source, uLong sourceLen,\n                                  int level));\n/*\n     Compresses the source buffer into the destination buffer. The level\n   parameter has the same meaning as in deflateInit.  sourceLen is the byte\n   length of the source buffer. Upon entry, destLen is the total size of the\n   destination buffer, which must be at least 0.1% larger than sourceLen plus\n   12 bytes. Upon exit, destLen is the actual size of the compressed buffer.\n\n     compress2 returns Z_OK if success, Z_MEM_ERROR if there was not enough\n   memory, Z_BUF_ERROR if there was not enough room in the output buffer,\n   Z_STREAM_ERROR if the level parameter is invalid.\n*/\n\nZEXTERN int ZEXPORT uncompress OF((Bytef *dest,   uLongf *destLen,\n                                   const Bytef *source, uLong sourceLen));\n/*\n     Decompresses the source buffer into the destination buffer.  sourceLen is\n   the byte length of the source buffer. Upon entry, destLen is the total\n   size of the destination buffer, which must be large enough to hold the\n   entire uncompressed data. (The size of the uncompressed data must have\n   been saved previously by the compressor and transmitted to the decompressor\n   by some mechanism outside the scope of this compression library.)\n   Upon exit, destLen is the actual size of the compressed buffer.\n     This function can be used to decompress a whole file at once if the\n   input file is mmap'ed.\n\n     uncompress returns Z_OK if success, Z_MEM_ERROR if there was not\n   enough memory, Z_BUF_ERROR if there was not enough room in the output\n   buffer, or Z_DATA_ERROR if the input data was corrupted.\n*/\n\n\ntypedef voidp gzFile;\n\nZEXTERN gzFile ZEXPORT gzopen  OF((const char *path, const char *mode));\n/*\n     Opens a gzip (.gz) file for reading or writing. The mode parameter\n   is as in fopen (\"rb\" or \"wb\") but can also include a compression level\n   (\"wb9\") or a strategy: 'f' for filtered data as in \"wb6f\", 'h' for\n   Huffman only compression as in \"wb1h\". (See the description\n   of deflateInit2 for more information about the strategy parameter.)\n\n     gzopen can be used to read a file which is not in gzip format; in this\n   case gzread will directly read from the file without decompression.\n\n     gzopen returns NULL if the file could not be opened or if there was\n   insufficient memory to allocate the (de)compression state; errno\n   can be checked to distinguish the two cases (if errno is zero, the\n   zlib error is Z_MEM_ERROR).  */\n\nZEXTERN gzFile ZEXPORT gzdopen  OF((int fd, const char *mode));\n/*\n     gzdopen() associates a gzFile with the file descriptor fd.  File\n   descriptors are obtained from calls like open, dup, creat, pipe or\n   fileno (in the file has been previously opened with fopen).\n   The mode parameter is as in gzopen.\n     The next call of gzclose on the returned gzFile will also close the\n   file descriptor fd, just like fclose(fdopen(fd), mode) closes the file\n   descriptor fd. If you want to keep fd open, use gzdopen(dup(fd), mode).\n     gzdopen returns NULL if there was insufficient memory to allocate\n   the (de)compression state.\n*/\n\nZEXTERN int ZEXPORT gzsetparams OF((gzFile file, int level, int strategy));\n/*\n     Dynamically update the compression level or strategy. See the description\n   of deflateInit2 for the meaning of these parameters.\n     gzsetparams returns Z_OK if success, or Z_STREAM_ERROR if the file was not\n   opened for writing.\n*/\n\nZEXTERN int ZEXPORT    gzread  OF((gzFile file, voidp buf, unsigned len));\n/*\n     Reads the given number of uncompressed bytes from the compressed file.\n   If the input file was not in gzip format, gzread copies the given number\n   of bytes into the buffer.\n     gzread returns the number of uncompressed bytes actually read (0 for\n   end of file, -1 for error). */\n\nZEXTERN int ZEXPORT    gzwrite OF((gzFile file,\n\t\t\t\t   const voidp buf, unsigned len));\n/*\n     Writes the given number of uncompressed bytes into the compressed file.\n   gzwrite returns the number of uncompressed bytes actually written\n   (0 in case of error).\n*/\n\nZEXTERN int ZEXPORTVA   gzprintf OF((gzFile file, const char *format, ...));\n/*\n     Converts, formats, and writes the args to the compressed file under\n   control of the format string, as in fprintf. gzprintf returns the number of\n   uncompressed bytes actually written (0 in case of error).\n*/\n\nZEXTERN int ZEXPORT gzputs OF((gzFile file, const char *s));\n/*\n      Writes the given null-terminated string to the compressed file, excluding\n   the terminating null character.\n      gzputs returns the number of characters written, or -1 in case of error.\n*/\n\nZEXTERN char * ZEXPORT gzgets OF((gzFile file, char *buf, int len));\n/*\n      Reads bytes from the compressed file until len-1 characters are read, or\n   a newline character is read and transferred to buf, or an end-of-file\n   condition is encountered.  The string is then terminated with a null\n   character.\n      gzgets returns buf, or Z_NULL in case of error.\n*/\n\nZEXTERN int ZEXPORT    gzputc OF((gzFile file, int c));\n/*\n      Writes c, converted to an unsigned char, into the compressed file.\n   gzputc returns the value that was written, or -1 in case of error.\n*/\n\nZEXTERN int ZEXPORT    gzgetc OF((gzFile file));\n/*\n      Reads one byte from the compressed file. gzgetc returns this byte\n   or -1 in case of end of file or error.\n*/\n\nZEXTERN int ZEXPORT    gzflush OF((gzFile file, int flush));\n/*\n     Flushes all pending output into the compressed file. The parameter\n   flush is as in the deflate() function. The return value is the zlib\n   error number (see function gzerror below). gzflush returns Z_OK if\n   the flush parameter is Z_FINISH and all output could be flushed.\n     gzflush should be called only when strictly necessary because it can\n   degrade compression.\n*/\n\nZEXTERN z_off_t ZEXPORT    gzseek OF((gzFile file,\n\t\t\t\t      z_off_t offset, int whence));\n/*\n      Sets the starting position for the next gzread or gzwrite on the\n   given compressed file. The offset represents a number of bytes in the\n   uncompressed data stream. The whence parameter is defined as in lseek(2);\n   the value SEEK_END is not supported.\n     If the file is opened for reading, this function is emulated but can be\n   extremely slow. If the file is opened for writing, only forward seeks are\n   supported; gzseek then compresses a sequence of zeroes up to the new\n   starting position.\n\n      gzseek returns the resulting offset location as measured in bytes from\n   the beginning of the uncompressed stream, or -1 in case of error, in\n   particular if the file is opened for writing and the new starting position\n   would be before the current position.\n*/\n\nZEXTERN int ZEXPORT    gzrewind OF((gzFile file));\n/*\n     Rewinds the given file. This function is supported only for reading.\n\n   gzrewind(file) is equivalent to (int)gzseek(file, 0L, SEEK_SET)\n*/\n\nZEXTERN z_off_t ZEXPORT    gztell OF((gzFile file));\n/*\n     Returns the starting position for the next gzread or gzwrite on the\n   given compressed file. This position represents a number of bytes in the\n   uncompressed data stream.\n\n   gztell(file) is equivalent to gzseek(file, 0L, SEEK_CUR)\n*/\n\nZEXTERN int ZEXPORT gzeof OF((gzFile file));\n/*\n     Returns 1 when EOF has previously been detected reading the given\n   input stream, otherwise zero.\n*/\n\nZEXTERN int ZEXPORT    gzclose OF((gzFile file));\n/*\n     Flushes all pending output if necessary, closes the compressed file\n   and deallocates all the (de)compression state. The return value is the zlib\n   error number (see function gzerror below).\n*/\n\nZEXTERN const char * ZEXPORT gzerror OF((gzFile file, int *errnum));\n/*\n     Returns the error message for the last error which occurred on the\n   given compressed file. errnum is set to zlib error number. If an\n   error occurred in the file system and not in the compression library,\n   errnum is set to Z_ERRNO and the application may consult errno\n   to get the exact error code.\n*/\n\n                        /* checksum functions */\n\n/*\n     These functions are not related to compression but are exported\n   anyway because they might be useful in applications using the\n   compression library.\n*/\n\nZEXTERN uLong ZEXPORT adler32 OF((uLong adler, const Bytef *buf, uInt len));\n\n/*\n     Update a running Adler-32 checksum with the bytes buf\u00c40..len-1\u00dc and\n   return the updated checksum. If buf is NULL, this function returns\n   the required initial value for the checksum.\n   An Adler-32 checksum is almost as reliable as a CRC32 but can be computed\n   much faster. Usage example:\n\n     uLong adler = adler32(0L, Z_NULL, 0);\n\n     while (read_buffer(buffer, length) |= EOF) \u00e4\n       adler = adler32(adler, buffer, length);\n     \u00fc\n     if (adler |= original_adler) error();\n*/\n\nZEXTERN uLong ZEXPORT crc32   OF((uLong crc, const Bytef *buf, uInt len));\n/*\n     Update a running crc with the bytes buf\u00c40..len-1\u00dc and return the updated\n   crc. If buf is NULL, this function returns the required initial value\n   for the crc. Pre- and post-conditioning (one's complement) is performed\n   within this function so it shouldn't be done by the application.\n   Usage example:\n\n     uLong crc = crc32(0L, Z_NULL, 0);\n\n     while (read_buffer(buffer, length) |= EOF) \u00e4\n       crc = crc32(crc, buffer, length);\n     \u00fc\n     if (crc |= original_crc) error();\n*/\n\n\n                        /* various hacks, don't look :) */\n\n/* deflateInit and inflateInit are macros to allow checking the zlib version\n * and the compiler's view of z_stream:\n */\nZEXTERN int ZEXPORT deflateInit_ OF((z_streamp strm, int level,\n                                     const char *version, int stream_size));\nZEXTERN int ZEXPORT inflateInit_ OF((z_streamp strm,\n                                     const char *version, int stream_size));\nZEXTERN int ZEXPORT deflateInit2_ OF((z_streamp strm, int  level, int  method,\n                                      int windowBits, int memLevel,\n                                      int strategy, const char *version,\n                                      int stream_size));\nZEXTERN int ZEXPORT inflateInit2_ OF((z_streamp strm, int  windowBits,\n                                      const char *version, int stream_size));\n#define deflateInit(strm, level) \u00d6\n        deflateInit_((strm), (level),       ZLIB_VERSION, sizeof(z_stream))\n#define inflateInit(strm) \u00d6\n        inflateInit_((strm),                ZLIB_VERSION, sizeof(z_stream))\n#define deflateInit2(strm, level, method, windowBits, memLevel, strategy) \u00d6\n        deflateInit2_((strm),(level),(method),(windowBits),(memLevel),\u00d6\n                      (strategy),           ZLIB_VERSION, sizeof(z_stream))\n#define inflateInit2(strm, windowBits) \u00d6\n        inflateInit2_((strm), (windowBits), ZLIB_VERSION, sizeof(z_stream))\n\n\n#if |defined(_Z_UTIL_H) && |defined(NO_DUMMY_DECL)\n    struct internal_state \u00e4int dummy;\u00fc; /* hack for buggy compilers */\n#endif\n\nZEXTERN const char   * ZEXPORT zError           OF((int err));\nZEXTERN int            ZEXPORT inflateSyncPoint OF((z_streamp z));\nZEXTERN const uLongf * ZEXPORT get_crc_table    OF((void));\n\n#ifdef __cplusplus\n\u00fc\n#endif\n\n#endif /* _ZLIB_H */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ZUTIL": {"ttr": 2363, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* zutil.h -- internal interface and configuration of the compression library\n * Copyright (C) 1995-2002 Jean-loup Gailly.\n * For conditions of distribution and use, see copyright notice in zlib.h\n */\n\n/* WARNING: this file should *not* be used by applications. It is\n   part of the implementation of the compression library and is\n   subject to change. Applications should only use zlib.h.\n */\n\n/* \u00a7(#) $Id: zutil.h,v 1.2 2003/09/11 11:16:22 matthiasw Exp $ */\n\n#ifndef _Z_UTIL_H\n#define _Z_UTIL_H\n\n#include \"zlib.h\"\n\n#ifdef STDC\n#  include <stddef.h>\n#  include <string.h>\n#  include <stdlib.h>\n#endif\n#ifdef NO_ERRNO_H\n    extern int errno;\n#else\n#   include <errno.h>\n#endif\n\n#ifndef local\n#  define local static\n#endif\n/* compile with -Dlocal if your debugger can't find static symbols */\n\ntypedef unsigned char  uch;\ntypedef uch FAR uchf;\ntypedef unsigned short ush;\ntypedef ush FAR ushf;\ntypedef unsigned long  ulg;\n\nextern const char *z_errmsg\u00c410\u00dc; /* indexed by 2-zlib_error */\n/* (size given to avoid silly warnings with Visual C++) */\n\n#define ERR_MSG(err) z_errmsg\u00c4Z_NEED_DICT-(err)\u00dc\n\n#define ERR_RETURN(strm,err) \u00d6\n  return (strm->msg = (char*)ERR_MSG(err), (err))\n/* To be used only when the state is known to be valid */\n\n        /* common constants */\n\n#ifndef DEF_WBITS\n#  define DEF_WBITS MAX_WBITS\n#endif\n/* default windowBits for decompression. MAX_WBITS is for compression only */\n\n#if MAX_MEM_LEVEL >= 8\n#  define DEF_MEM_LEVEL 8\n#else\n#  define DEF_MEM_LEVEL  MAX_MEM_LEVEL\n#endif\n/* default memLevel */\n\n#define STORED_BLOCK 0\n#define STATIC_TREES 1\n#define DYN_TREES    2\n/* The three kinds of block type */\n\n#define MIN_MATCH  3\n#define MAX_MATCH  258\n/* The minimum and maximum match lengths */\n\n#define PRESET_DICT 0x20 /* preset dictionary flag in zlib header */\n\n        /* target dependencies */\n\n#ifdef MSDOS\n#  define OS_CODE  0x00\n#  if defined(__TURBOC__) ]] defined(__BORLANDC__)\n#    if(__STDC__ == 1) && (defined(__LARGE__) ]] defined(__COMPACT__))\n       /* Allow compilation with ANSI keywords only enabled */\n       void _Cdecl farfree( void *block );\n       void *_Cdecl farmalloc( unsigned long nbytes );\n#    else\n#     include <alloc.h>\n#    endif\n#  else /* MSC or DJGPP */\n#    include <malloc.h>\n#  endif\n#endif\n\n#ifdef OS2\n#  define OS_CODE  0x06\n#endif\n\n#ifdef WIN32 /* Window 95 & Windows NT */\n#  define OS_CODE  0x0b\n#endif\n\n#if defined(VAXC) ]] defined(VMS)\n#  define OS_CODE  0x02\n#  define F_OPEN(name, mode) \u00d6\n     fopen((name), (mode), \"mbc=60\", \"ctx=stm\", \"rfm=fix\", \"mrs=512\")\n#endif\n\n#ifdef AMIGA\n#  define OS_CODE  0x01\n#endif\n\n#if defined(ATARI) ]] defined(atarist)\n#  define OS_CODE  0x05\n#endif\n\n#if defined(MACOS) ]] defined(TARGET_OS_MAC)\n#  define OS_CODE  0x07\n#  if defined(__MWERKS__) && __dest_os |= __be_os && __dest_os |= __win32_os\n#    include <unix.h> /* for fdopen */\n#  else\n#    ifndef fdopen\n#      define fdopen(fd,mode) NULL /* No fdopen() */\n#    endif\n#  endif\n#endif\n\n#ifdef __50SERIES /* Prime/PRIMOS */\n#  define OS_CODE  0x0F\n#endif\n\n#ifdef TOPS20\n#  define OS_CODE  0x0a\n#endif\n\n#if defined(_BEOS_) ]] defined(RISCOS)\n#  define fdopen(fd,mode) NULL /* No fdopen() */\n#endif\n\n#if (defined(_MSC_VER) && (_MSC_VER > 600))\n#  define fdopen(fd,type)  _fdopen(fd,type)\n#endif\n\n\n        /* Common defaults */\n\n#ifndef OS_CODE\n#  define OS_CODE  0x03  /* assume Unix */\n#endif\n\n#ifndef F_OPEN\n#  define F_OPEN(name, mode) fopen((name), (mode))\n#endif\n\n         /* functions */\n\n#ifdef HAVE_STRERROR\n   extern char *strerror OF((int));\n#  define zstrerror(errnum) strerror(errnum)\n#else\n#  define zstrerror(errnum) \"\"\n#endif\n\n#if defined(pyr)\n#  define NO_MEMCPY\n#endif\n#if defined(SMALL_MEDIUM) && |defined(_MSC_VER) && |defined(__SC__)\n /* Use our own functions for small and medium model with MSC <= 5.0.\n  * You may have to use the same strategy for Borland C (untested).\n  * The __SC__ check is for Symantec.\n  */\n#  define NO_MEMCPY\n#endif\n#if defined(STDC) && |defined(HAVE_MEMCPY) && |defined(NO_MEMCPY)\n#  define HAVE_MEMCPY\n#endif\n#ifdef HAVE_MEMCPY\n#  ifdef SMALL_MEDIUM /* MSDOS small or medium model */\n#    define zmemcpy _fmemcpy\n#    define zmemcmp _fmemcmp\n#    define zmemzero(dest, len) _fmemset(dest, 0, len)\n#  else\n#    define zmemcpy memcpy\n#    define zmemcmp memcmp\n#    define zmemzero(dest, len) memset(dest, 0, len)\n#  endif\n#else\n   extern void zmemcpy  OF((Bytef* dest, const Bytef* source, uInt len));\n   extern int  zmemcmp  OF((const Bytef* s1, const Bytef* s2, uInt len));\n   extern void zmemzero OF((Bytef* dest, uInt len));\n#endif\n\n/* Diagnostic functions */\n#ifdef DEBUG\n#  include <stdio.h>\n   extern int z_verbose;\n   extern void z_error    OF((char *m));\n#  define Assert(cond,msg) \u00e4if(|(cond)) z_error(msg);\u00fc\n#  define Trace(x) \u00e4if (z_verbose>=0) fprintf x ;\u00fc\n#  define Tracev(x) \u00e4if (z_verbose>0) fprintf x ;\u00fc\n#  define Tracevv(x) \u00e4if (z_verbose>1) fprintf x ;\u00fc\n#  define Tracec(c,x) \u00e4if (z_verbose>0 && (c)) fprintf x ;\u00fc\n#  define Tracecv(c,x) \u00e4if (z_verbose>1 && (c)) fprintf x ;\u00fc\n#else\n#  define Assert(cond,msg)\n#  define Trace(x)\n#  define Tracev(x)\n#  define Tracevv(x)\n#  define Tracec(c,x)\n#  define Tracecv(c,x)\n#endif\n\n\ntypedef uLong (ZEXPORT *check_func) OF((uLong check, const Bytef *buf,\n\t\t\t\t       uInt len));\nvoidpf zcalloc OF((voidpf opaque, unsigned items, unsigned size));\nvoid   zcfree  OF((voidpf opaque, voidpf ptr));\n\n#define ZALLOC(strm, items, size) \u00d6\n           (*((strm)->zalloc))((strm)->opaque, (items), (size))\n#define ZFREE(strm, addr)  (*((strm)->zfree))((strm)->opaque, (voidpf)(addr))\n#define TRY_FREE(s, p) \u00e4if (p) ZFREE(s, p);\u00fc\n\n#endif /* _Z_UTIL_H */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT880/CBT.V500.FILE880.PDS/HPP.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT880/CBT.V500.FILE880.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}