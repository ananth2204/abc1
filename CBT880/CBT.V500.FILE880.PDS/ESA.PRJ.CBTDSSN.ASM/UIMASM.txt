         TITLE ' UIMASM DFDSS OMVS exit'
***********************************************************************
*                                                                     *
* UIMASM exit  dump/restore to HFS drives                             *
*                                                                     *
***********************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
        PRINT ON,GEN
        BPX1EQUS
        BPXYCONS
        BPXYSIGH
***********************************************************************
* UIMASM exit  IBM part                                               *
*                                                                     *
* Called from the DSSOMVS module wit UIM style parm list              *
* The module loads/start the ADRDSSU and gets back the control via    *
* UIM exit and call further the UIM function in C                     *
***********************************************************************
*IMASM   ceeentry ppa=ceeppa,nab=yes,main=no,base=(r11),               *
               AUTO=WORKSIZE
UIMASM   XATTR LINKAGE(OS)
*UIM      XATTR LINKAGE(OS)
*UIMASM    XATTR LINKAGE(XPLINK)
UIMASM   CEEENTRY PPA=CEEPPA,NAB=YES,MAIN=NO,BASE=(R11),               *
               AUTO=WORKSIZE
         USING WORK,R13           base on work area
         USING PSA,R0             base on PSA
         STM   R0,R15,ENTRYREGS   back entry regs
         ST    R1,EPARM           save entry parm list
         MVC   PARMLIST(20),0(R1) copy parm list
* set default dub to DUBTASKACEE
         L     R14,FLCCVT         get CVT common vector table
         L     R14,544(R14)       get CSRTABLE
         L     R14,24(R14)        CSR slot list
         L     R15,BPX1SDD(,R14)  get BPX1SDD address
*        CALL  (15),(=A(DUBTASKACEE),                                  *
               RETURN_VALUE,RETURN_CODE,REASON_CODE),VL,               *
               MF=(E,CALL_S1DD)
         CALL  (15),(=A(DUBTASKACEE),                                  *
               RETURN_VALUE,RETURN_CODE,REASON_CODE),VL,               *
               MF=(E,CALL_S1DD)
         ICM   R0,15,RETURN_VALUE    get reurn value
         JZ    DUBOK                 jump if it was o.k
         DC    A(0)                  dump from here
DUBOK    DS    0H
*        load  eploc=epadrdssu       load adrdssu
         LOAD  EPLOC=EPADRDSSU       load adrdssu
         LTR   R15,R15            test return
         JNZ   ERR_LOAD           if not o.k.
         ST    R0,ADRDSSU         save addr
         SPACE 1
         MVC   DSSCUIM,=AL2(DSSCUIML) set length
         LA    R1,UIMEXIT         get uim exit address
         ST    R1,DSSCUIMA        save exit address
         OI    DSSCUIMA,X'80'     indicate 31 bit mode
         LA    R1,DSSCUIM         get UIM exit address pointer
         ST    R1,PARMLIST+12     set in parmlist
         SPACE 1
         L     R1,PARMLIST+16     get user area address
         MVC   USERAREA,2(R1)     save userarea
         MVC   DSSCDATA,=AL2(DSSCDATAL) set length
         LA    R1,DSSCDATA        get exit parm pointer
         ST    R1,PARMLIST+16     save in parmlist
         OI    PARMLIST+16,X'80'  high order bit in parmlist
         ST    R13,DSSCDATAA      save work area address
         BAS   R14,CALLDSS        call DSS
         J     RET                call return
         SPACE 1
CALLDSS  BAKR  R14,0              all in stack
         LA    R1,PARMLIST        get parmlist address
         L     R15,ADRDSSU        get module address
         LA    R13,CALLSAVE       new save are
         BASR  R14,R15            call adrdssu module
         PR    ,                  return back
ERR_LOAD DS 0H
*rr_load  CALL  CEEMOUT,(unable,ceedest),VL,MF=(E,CALLMOUT)
*ERR_LOAD  CALL  CEEMOUT,(UNABLE,CEEDEST),VL,MF=(E,CALLMOUT)
         ABEND 001,DUMP,,SYSTEM,REASON=0001
         LA    R15,8              get code
*ET      ceeterm rc=(r15)         epilog
RET      CEETERM RC=(R15)         epilog
         USING ADREIB,R10         base on UIM exit parm list
UIMEXIT  STM   R14,R12,12(R13)     save regs
         L     R11,UIMASMA-UIMEXIT(R15) back base
         L     R10,0(,R1)         get UIM parm address
         LR    R0,R13             new save area address here
         ICM   R13,15,EIUSEPTR    back r13 from
         ST    R0,NEWSAVE         save new save address
         ST    R1,UIMPARM         save UIM parm
         MVC   EIUSEPTR,USERAREA  set user area
         LR    R2,R10             save UFO base
         LR    R3,R13             save save area
         BAS   R14,CALLBACK       callback routinr
         LR    R10,R2             back UFO
         LR    R13,R3             back save
         STCM  R13,R15,EIUSEPTR   set back our pointer
         L     R13,NEWSAVE        save new save address
         ST    R15,16(R13)         store code
         LM    R14,R12,12(R13)     back regs
         BSM   0,R14              back from the routine
CALLBACK STM   R14,R12,CALLREGS   all in save area
         LM    R4,R15,ENTRYREGS+4*4   back entry regs
         L     R15,UIM            get UIM address
         L     R1,UIMPARM         get UIM address
         BALR  R14,R15            call it
         LM    R14,R12,CALLREGS   back all
         BSM   0,R14              back all
*eeppa   ceeppa  ,                prolog area
CEEPPA   CEEPPA  ,                prolog area
EPADRDSSU DC   CL8'ADRDSSU'       module address
UIM      DC    V(UIM)             UIM function pointer
CEEDEST  DC    A(2)               message dest code
UIMASMA  DC    A(UIMASM)          module start address
UNABLE   DC    Y(UNABLEME-UNABLEME) length
UNABLEM  DC    C' unable to load ADRDSSU'
UNABLEME EQU  *
         LTORG
WORK     DSECT
         ORG  *+CEEDSASZ         space for fix part of DSA
CALLSAVE  DC  18A(0)             call save area
PARMLIST DC    5A(0)             parmlist with 5 entries
EPARM    DC    A(0)              entry parm
         CNOP  2,4               align half word
DSSCUIM  DC    AL2(DSSCUIML)     length
DSSCUIMA DC    AL4(0)            MODULE address
DSSCUIML EQU   *-DSSCUIMA        length def
         CNOP  2,4               align half word
DSSCDATA  DC   AL2(DSSCDATAL)    length
DSSCDATAA DC   AL4(0)            address
DSSCDATAL EQU  *-DSSCDATAA       length
ADRDSSU  DC    A(0)              adrdssu address
*ALLMOUT CALL  ,(,,),VL,MF=L     3-argument parameter list
CALLMOUT CALL  ,(,,),VL,MF=L     3-argument parameter list
USERAREA  DC  A(0)               user area pointer
NEWSAVE   DC  A(0)               secondary save
ENTRYREGS DC  16A(0)             entry regs from C/C++
UIMPARM  DC    A(0)              UIM parm
CALLREGS  DC  18A(0)             call save area
RETURN_VALUE DC A(0)             return value
RETURN_CODE  DC A(0)             return code
REASON_CODE  DC A(0)             reason code
CALL_S1DD CALL ,(,,,,),VL,MF=L
WORKSIZE EQU  *-WORK             work area size
*        ceecaa ,
         CEECAA ,
*        ceedsa ,
         CEEDSA ,
*        ADREID0
         ADREID0
         PRINT OFF,NOGEN
         CVT   DSECT=YES
         IHAPSA
         END
