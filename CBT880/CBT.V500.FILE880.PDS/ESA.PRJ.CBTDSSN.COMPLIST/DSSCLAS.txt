
15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(DSSCLAS)'                      30.11.12 08:25:24
0                                      * * * * *   P R O L O G   * * * * *
    Compiler options. . . . . . . :AGGRCOPY(NOOVERLAP)             ANSIALIAS       ARCH(7)         ARGPARSE        NOASCII
                                  :NOATTRIBUTE     ASSERT(RESTRICT)                BITFIELD(UNSIGNED)              CHARS(UNSIGNED)
                                  :NOCOMPACT       NOCOMPRESS      CVFT            NODFP           DIGRAPH         DLL(CALLBACKANY)
                                  :ENUMSIZE(SMALL) NOEVENTS        EXECOPS         EXH             NOEXPMAC        NOEXPORTALL
                                  :NOFASTTEMPINC   FLAG(I)         NOGOFF          GONUMBER        HALT(16)
                                  :NOHGPR(NOPRESERVE)              NOHOT           NOIGNERRNO      ILP32           NOINITAUTO
                                  :NOINLRPT        NOLIBANSI       NOLIST          LONGNAME        NOMAKEDEP       NOMARGINS
                                  :MAXMEM(2097152) MEMORY          NAMEMANGLING(zOSV1R2)           NESTINC(255)    OBJECT
                                  :OBJECTMODEL(COMPAT)             NOOE            NOOFFSET        OPTIMIZE(2)     PLIST(HOST)
                                  :NOPORT          NOPPONLY        PREFETCH        REDIR           NOREPORT        ROSTRING
                                  :ROCONST         RTTI(ALL)       NOSEQUENCE      NOSHOWINC       NOSHOWMACROS    SOURCE
                                  :SKIPSRC(SHOW)   SPILL(3600)     START           NOSTATICINLINE  STRICT
                                  :NOSTRICT_INDUCTION              TARGET(LE,CURRENT)              TEMPLATEDEPTH(300)
                                  :NOTEMPLATEREGISTRY              TEMPLATERECOMPILE               TERMINAL        TEST(HOOK)
                                  :TMPLPARSE(NO)   TUNE(7)         UNROLL(AUTO)    UTF             NOWARN0X        NOWARN64
                                  :NOWSIZEOF       NOXREF
                                  :NOCICS
                                  :NOCONVLIT
                                  :NOCSECT
                                  :DEBUG(FORMAT(ISD),LEVEL(0),HOOK(NOLINE,NOBLOCK,NOPATH,CALL,FUNC),NOSYMBOL)
                                  :DEFINE(__OS390__=1,_POSIX_SOURCE=1,_XOPEN_SOURCE_EXTENDED=1,MU_STANDALONE=1,ISIS_PF_MU=1)
                                  :FLOAT(HEX,FOLD,NOMAF,AFP(NOVOLATILE)) ROUND(Z)
                                  :NOHALTONMSG
                                  :INFO(LAN)
                                  :INLINE(AUTO,NOREPORT,100,1000)
                                  :NOIPA
                                  :KEYWORD(bool,explicit,export,false,mutable,namespace,true,typename,using,restrict,__restrict__,
                                   __restrict,_Pragma,__alignof__,__asm__,__attribute__,__const__,__extension__,__volatile__,
                                   __inline__,__signed__,__typeof__,__I,_Complex,__complex__,__real__,__imag__)
                                  :NOKEYWORD(char16_t,char32_t,decltype,static_assert,typeof)
                                  :LANGLVL(ANONSTRUCT,ANONUNION,ANSIFOR,ANSISINIT,NOAUTOTYPEDEDUCTION,C99VLA,C99__FUNC__,
                                   NOC99LONGLONG,NOC99PREPROCESSOR,NOCOMPATRVALUEBINDING,NODBCS,NODECLTYPE,NODELEGATINGCTORS,
                                   DEPENDENTBASELOOKUP,NODOLLARINNAMES,EMPTYSTRUCT,NOEXTENDEDFRIEND,NOEXTENDEDINTEGERSAFE,
                                   EXTERNTEMPLATE,ILLPTOM,IMPLICITINT,NOINLINENAMESPACE,LIBEXT,LONGLONG,NONEWEXCP,OFFSETNONPOD,
                                   NOOLDDIGRAPH,OLDFRIEND,NOOLDMATH,NOOLDSTR,OLDTEMPACC,NOOLDTMPLALIGN,OLDTMPLSPEC,NOSTATIC_ASSERT,
                                   NOTEMPSASLOCALS,NOTEXTAFTERENDIF,GNU_LABELVALUE,GNU_COMPUTEDGOTO,TRAILENUM,TYPEDEFCLASS,NOUCS,
                                   VARARGMACROS,NOVARIADICTEMPLATES,GNU_INCLUDE_NEXT,ZEROEXTARRAY,NOC99COMPLEX,NOC99COMPLEXHEADER,
                                   NOGNU_COMPLEX,GNU_SUFFIXIJ)
                                  :LOCALE(DE_DE.IBM-273)
                                  :NOLSEARCH
                                  :OPTFILE(DD:OPTFILE)
                                  :NORTCHECK
                                  :SEARCH(//'CEE.SCEEH.+', //'CBC.SCLBH.+', CEE.SCEEH.+, CBC.SCLBH.+, DD:USERLIB)
                                  :NOSERVICE
                                  :NOSQL
                                  :NOSUPPRESS
                                  :TEMPINC(./tempinc)
                                  :NOXPLINK(NOBACKCHAIN,NOCALLBACK,GUARD,OSCALL(UPSTACK),NOSTOREARGS)
    Version Macros. . . . . . . . : __COMPILER_VER__=0x410D0000
                                  : __LIBREL__=0x410D0000
                                  : __TARGET_LIB__=0x410D0000
    Source margins. . . . . . . . :
      Varying length. . . . . . . : 1 - 32760
      Fixed length. . . . . . . . : 1 - 32760
    Sequence columns. . . . . . . :
      Varying length. . . . . . . : none
      Fixed length. . . . . . . . : none
    Locale name . . . . . . . . . : DE_DE.IBM-273
    Code set. . . . . . . . . . . : IBM-273
    Listing name. . . . . . . . . : DD:SYSCPRT
0                                 * * * * *   E N D   O F   P R O L O G   * * * * *
-
15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(DSSCLAS)'                      30.11.12 08:25:24
-
                                       * * * * *   S O U R C E   * * * * *
0            1 | #include "isisdef.h"
             2 | #include <stdlib.h>
             3 | #include <string.h>
             4 | #include "dssclas.hpp"
             5 | #include "dssmain.hpp"
             6 | #include "jobenv.hpp"
             7 |
             8 |
             9 | char 			DSS::ddnamelistÄ48Ü;
            10 | char 			DSS::pagenumberÄ4Ü;
            11 | address 	DSS::uim = NULL;
            12 |
            13 | DSSPARM * makeDSSPARM(size_t l,void * v)
            14 | ä
            15 |  DSSPARM * rc = (DSSPARM *)malloc(l+2);
            16 |  rc->length = short(l);
            17 |  memcpy(rc->data,v,l);
            18 |  return rc;
            19 | ü
            20 |
            21 |
            22 | DSS::DSS(char * argv,DssJob * j)
            23 | ä
            24 |         JOBENV::DEBUG(1,"DSS construct");
            25 |         adrdssu = load(ADRDSSU);
            26 |         dssparmÄ0Ü = makeDSSPARM(strlen(argv),(address)argv);
            27 |         memset(ddnamelist,0,sizeof(ddnamelist));
            28 |         memcpy(ddnamelist+32,"SYSIN   ",8);
            29 |         memcpy(ddnamelist+40,"SYSPRINT",8);
            30 |         dssparmÄ1Ü = makeDSSPARM(sizeof(ddnamelist),(address)ddnamelist);
            31 |         memcpy(pagenumber,"0001",4);
            32 |         dssparmÄ2Ü = makeDSSPARM(sizeof(pagenumber),(address)pagenumber);
            33 |         uim        = (address)UIMASM;
            34 | 		    uim        = address(0x80000000 +long(uim));
            35 |         dssparmÄ3Ü = makeDSSPARM(4,(address)&uim);
            36 |         address pthis =(address) this;
            37 |         dssparmÄ4Ü = makeDSSPARM(4,(address)&pthis);
            38 |         dssparmÄ4Ü = (DSSPARM *)(0x80000000 +long(dssparmÄ4Ü));
            39 |         function   = invalid;
            40 |         job        = j;
            41 | ü
            42 |
            43 | DSS::ßDSS()
            44 | ä
            45 |         JOBENV::DEBUG(1,"DSS destruct");
            46 |         unload(ADRDSSU);
            47 |         for(int i =0;i<5;i++)
            48 |                 free(dssparmÄiÜ);
            49 |         exit(0);
            50 | ü
            51 |
            52 | int DSS::run(DssJob * j)
            53 | ä
            54 |         JOBENV::DEBUG(1,"DSS run");
            55 |         job = j;
            56 |         return (call(adrdssu,dssparm));
            57 | ü
            58 |
            59 | adrdssu_address DSS::load(const char * name)
            60 | ä
            61 | 				adrdssu_address rc = 0;
            62 |         return rc;
            63 | ü
            64 |
            65 | void DSS::unload(const char * name)
            66 | ä
            67 |
            68 | ü
            69 |
            70 | int DSS::call(address a,DSSPARM **p)
            71 | ä
            72 | int rc = 0;
            73 | 				rc = UIMASM(dssparmÄ0Ü,dssparmÄ1Ü,dssparmÄ2Ü,dssparmÄ3Ü,dssparmÄ4Ü);
            74 |         return rc;
            75 | ü
            76 |
            77 |
            78 | void DSS::exit(int rc)
            79 | ä
            80 | 			exit(rc);
            81 | ü
            82 |
0                                   * * * * *   E N D   O F   S O U R C E   * * * * *
-

15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(DSSCLAS)'                      30.11.12 08:25:24
0                                    * * * * *   I N C L U D E S   * * * * *
     1  =  //'ESA.PRJ.CBTDSSN.HPP(ISISDEF)'
     2  =  //'CEE.SCEEH.H(STDLIB)'
     3  =  //'CEE.SCEEH.H(FEATURES)'
     4  =  //'CEE.SCEEH.H(BUILTINS)'
     5  =  //'CEE.SCEEH.H(STDDEF)'
     6  =  //'CEE.SCEEH.H(STRING)'
     7  =  //'ESA.PRJ.CBTDSSN.HPP(DSSCLAS)'
     8  =  //'ESA.PRJ.CBTDSSN.HPP(DSSMAIN)'
     9  =  //'ESA.PRJ.CBTDSSN.HPP(MVSBASE)'
    10  =  //'ESA.PRJ.CBTDSSN.HPP(MERROR)'
    11  =  //'ESA.PRJ.CBTDSSN.HPP(DSNAMEUT)'
    12  =  //'CEE.SCEEH.H(ASSERT)'
    13  =  //'CEE.SCEEH.H(STDIO)'
    14  =  //'CEE.SCEEH.SYS.H(TYPES)'
    15  =  //'ESA.PRJ.CBTDSSN.HPP(JOBENV)'
-                                 * * * * *   E N D   O F   I N C L U D E S   * * * * *
0
15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(DSSCLAS)'                      30.11.12 08:25:24
-                           * * * * *   M E S S A G E   S U M M A R Y   * * * * *
0TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL
                (U)       (S)         (E)        (W)          (I)
     0           0         0           0          0            0
0                    * * * * *   E N D   O F   M E S S A G E   S U M M A R Y   * * * * *
0                        * * * * *   E N D   O F   C O M P I L A T I O N   * * * * *
