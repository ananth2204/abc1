#pragma pack(packed)

struct asmdsect ä
  void          *asm_saveÄ18Ü;                   /* save in asm                       */
  void          *asm_mvs;                        /* mvs object pointer                */
  void          *asm_baseregsÄ4Ü;                /* base regs                         */
  void          *asm_crab;                       /* crab pointer                      */
  int            asm_rc;                         /* function return                   */
  int            asm_reason;                     /* function reason code              */
  void          *asm_ieantcr;                    /* ieantcr address                   */
  void          *asm_ieantrt;                    /* ieantrt address                   */
  void          *asm_ieantdl;                    /* ieantdl address                   */
  void          *asm_timxÄ16Ü;                   /* timer exit area                   */
  void          *asm_timer_ecbp;                 /* timer ecb pointer                 */
  void          *asm_event0_ecbp;                /* event0 ecb                        */
  void          *asm_event1_ecbp;                /* event1 ecb                        */
  void          *asm_event2_ecbp;                /* event2 ecb                        */
  void          *asm_event3_ecbp;                /* event3 ecb                        */
  void          *asm_timer_ecb;                  /* timer ecb                         */
  unsigned char  asm_function_code;              /* function code                     */
  unsigned char  asm_key;                        /* psw key save                      */
  unsigned char  asm_srb_mode;                   /* srb mode flag                     */
  unsigned char  _filler1;
  void          *asm_srb_saveÄ16Ü;               /* srb register save area            */
  int            asm_srb_return;                 /* srb return address                */
  void          *asm_parmsÄ8Ü;                   /* parameters                        */
  void          *asm_calllistÄ8Ü;                /* call parameters                   */
  unsigned char  asm_workÄ128Ü;                  /* work area                         */
  unsigned char  asm_jobnameÄ8Ü;                 /* jobname                           */
  unsigned char  asm_programnameÄ8Ü;             /* actual programname                */
  void          *asm_workecbs;                   /* start of work ecb pool            */
  void          *asm_workecbp;                   /* work ecb pointer                  */
  void          *asm_workecbe;                   /* work ecb end address              */
  struct ä
    unsigned char  _asm_iarv_xversion;  /* ++ INPUT XVERSION */
    unsigned char  _asm_iarv_xservice;  /* ++  XSERVICE      */
    unsigned char  _asm_iarv_xflags1;   /* ++ FIELD_LABEL    */
    unsigned char  _asm_iarv_xflags2;   /* ++ FIELD_LABEL    */
    int            _asm_iarv_xnumrange; /* ++   XNUMRANGE    */
    ü asm_iarv;
  void          *asm_iarv_xranglist;             /* ++   XRANGLIST                    */
  struct ä
    unsigned char  _filler2;  /* .SERVICE TYPE CODE */
    unsigned char  _filler3;  /* .OPTIONS FLAG BYTE */
    short int      _filler4;  /* .RESERVED          */
    ü asm_aleservl;
  void          *_filler5;                       /* .ALET                             */
  unsigned char  _filler6Ä8Ü;                    /* .STOKEN (SPACE TOKEN)             */
  unsigned char  _filler7;                       /* PELLAST flag byte.        X02113  */
  unsigned char  _filler8;                       /* PELMILEN - RNAME length.          */
  unsigned char  _filler9;
  unsigned char  _filler10;                      /* PELRET - return code byte.        */
  void          *_filler11;                      /* QNAME ADDRESS                     */
  void          *_filler12;                      /* RNAME ADDRESS                     */
  void          *asm_optionÄ4Ü;                  /* option fields                     */
  double         asm_sleep;                      /* double word for timer             */
  unsigned char  asm_iarvrlÄ28Ü;                 /* iarvrl area                       */
  void          *asm_iarvrla;                    /* iarvrl area address               */
  void          *asm_extract_l;                  /* LIST ADDRESS                      */
  void          *_filler13;                      /* TCB ADDRESS                       */
  void          *_filler14;
  void          *asm_post_l;                     /* . 1ST WORD - ECB ADDRESS          */
  void          *_filler15;                      /* . 2ND WORD - ASCB ADDRESS         */
  void          *_filler16;                      /* . 3RD WORD - ERRET ADDRESS        */
  void          *_filler17;                      /* . 4TH WORD - BYTE0,ECBKEY@ZA15373 */
  void          *asm_comptr;                     /* comm area pointer                 */
  void          *asm_comtoken;                   /* comm token                        */
  void          *asm_comecbpt;                   /* stop/modify ecb pointer           */
  struct ä
    short int      _filler18;     /* TEXT LENGTH            @YA17152 */
    unsigned char  _filler19Ä2Ü;  /* MCSFLAGS                        */
    ü asm_wtol;
  unsigned char  _filler20Ä110Ü;                 /* MESSAGE TEXT               @L6C   */
  unsigned char  _filler21;                      /* VERSION LEVEL              @PJC   */
  unsigned char  _filler22;                      /* MISCELLANEOUS FLAGS        @L2A   */
  unsigned char  _filler23;                      /* REPLY LENGTH               @L2A   */
  unsigned char  _filler24;                      /* RESERVED                   @PJA   */
  unsigned char  _filler25Ä2Ü;                   /* EXTENDED MCS FLAGS         @L2A   */
  short int      _filler26;                      /* RESERVED                   @L2A   */
  void          *_filler27;                      /* REPLY BUFFER ADDRESS       @P7C   */
  void          *_filler28;                      /* REPLY ECB ADDRESS          @P7C   */
  void          *_filler29;                      /* CONNECT ID                 @01C   */
  unsigned char  _filler30Ä2Ü;                   /* DESCRIPTOR CODES           @L2A   */
  short int      _filler31;                      /* RESERVED                   @L2A   */
  unsigned char  _filler32Ä16Ü;                  /* EXTENDED ROUTING CODES     @L2A   */
  unsigned char  _filler33Ä2Ü;                   /* MESSAGE TYPE               @L2A   */
  short int      _filler34;                      /* MESSAGE'S PRIORITY         @L2A   */
  unsigned char  _filler35Ä8Ü;                   /* JOB ID                     @L2A   */
  unsigned char  _filler36Ä8Ü;                   /* JOB NAME                   @L2A   */
  unsigned char  _filler37Ä8Ü;                   /* RETRIEVAL KEY              @L2A   */
  void          *_filler38;                      /* TOKEN FOR DOM              @P1C   */
  void          *_filler39;                      /* CONSOLE ID                 @P1C   */
  unsigned char  _filler40Ä8Ü;                   /* SYSTEM NAME                @L2A   */
  void          *_filler41;                      /* RESERVED                   @PJA   */
  void          *_filler42;                      /* RESERVED                   @PJA   */
  unsigned char  _filler43Ä2Ü;
  void          *asm_bpx1Ä32Ü;                   /* BPX1 parm list                    */
  int            asm_bpx1_retval;                /* return value                      */
  int            asm_bpx1_retcode;               /* return code                       */
  int            asm_bpx1_rsncode;               /* reason code                       */
  void          *asm_bpx1_list_length_r;         /* list length read                  */
  void          *asm_bpx1_list_length_w;         /* list length write                 */
  void          *asm_bpx1_list_length_e;         /* list length exception             */
  void          *asm_bpx1_numfds;                /* number of FD's                    */
  void          *asm_bpx1_timeout;               /* timeout pointer                   */
  void          *asm_bpx1_option;                /* option value                      */
  unsigned char  _filler44Ä4Ü;
  double         asm_stck;                       /* stck area                         */
  union ä
    struct ä
      unsigned char  _asm_ieatdump_xplistnameÄ4Ü; /* ++ CONSTANT  XPLISTNAME */
      unsigned char  _asm_ieatdump_xword1Ä4Ü;     /* ++ FIELD_LABEL  XWORD1  */
      ü asm_ieatdump;
    struct ä
      unsigned char  _filler45Ä4Ü;
      unsigned char  _asm_ieatdump_xplistlenÄ2Ü; /* ++ INPUT  XPLISTLEN   */
      unsigned char  _asm_ieatdump_xversion;     /* ++ INPUT XVERSION     */
      unsigned char  _asm_ieatdump_xrsv0001;     /* ++ RESERVED  XRSV0001 */
      ü _asmdsect_struct1;
    ü _asmdsect_union1;
  unsigned char  asm_ieatdump_xsdata1;           /* ++ FIELD_LABEL                    */
  unsigned char  asm_ieatdump_xsdata2;           /* ++ FIELD_LABEL                    */
  unsigned char  asm_ieatdump_xflags1;           /* ++ FIELD_LABEL                    */
  unsigned char  asm_ieatdump_xrsv0002;          /* ++ RESERVED  XRSV0002             */
  unsigned char  asm_ieatdump_xdsp_stokenÄ8Ü;    /* ++   XDSP_STOKEN                  */
  void          *asm_ieatdump_xdsp_origin;       /* ++   XDSP_ORIGIN                  */
  void          *asm_ieatdump_xdsp_records_;     /* ++   XDSP_RECORDS@                */
  unsigned char  asm_ieatdump_xddnameÄ8Ü;        /* ++   XDDNAME                      */
  union ä
    void          *_asm_ieatdump_xdsnad;    /* ++   XDSNAD   */
    void          *_asm_ieatdump_xdsn_addr; /* ++  ADDR XDSN */
    ü _asmdsect_union2;
  int            asm_ieatdump_xdsn_alet;         /* ++  ALET XDSN                     */
  union ä
    void          *_asm_ieatdump_xhdrad;    /* ++   XHDRAD   */
    void          *_asm_ieatdump_xhdr_addr; /* ++  ADDR XHDR */
    ü _asmdsect_union3;
  int            asm_ieatdump_xhdr_alet;         /* ++  ALET XHDR                     */
  union ä
    void          *_asm_ieatdump_xidxad;    /* ++   XIDXAD   */
    void          *_asm_ieatdump_xidx_addr; /* ++  ADDR XIDX */
    ü _asmdsect_union4;
  int            asm_ieatdump_xidx_alet;         /* ++  ALET XIDX                     */
  union ä
    void          *_asm_ieatdump_xsymrecad;    /* ++   XSYMRECAD   */
    void          *_asm_ieatdump_xsymrec_addr; /* ++  ADDR XSYMREC */
    ü _asmdsect_union5;
  int            asm_ieatdump_xsymrec_alet;      /* ++  ALET XSYMREC                  */
  union ä
    void          *_asm_ieatdump_xintokenad;    /* ++   XINTOKENAD   */
    void          *_asm_ieatdump_xintoken_addr; /* ++  ADDR XINTOKEN */
    ü _asmdsect_union6;
  int            asm_ieatdump_xintoken_alet;     /* ++  ALET XINTOKEN                 */
  union ä
    void          *_asm_ieatdump_xremotead;    /* ++   XREMOTEAD   */
    void          *_asm_ieatdump_xremote_addr; /* ++  ADDR XREMOTE */
    ü _asmdsect_union7;
  int            asm_ieatdump_xremote_alet;      /* ++  ALET XREMOTE                  */
  union ä
    void          *_asm_ieatdump_xprobdescad;    /* ++   XPROBDESCAD   */
    void          *_asm_ieatdump_xprobdesc_addr; /* ++  ADDR XPROBDESC */
    ü _asmdsect_union8;
  int            asm_ieatdump_xprobdesc_alet;    /* ++  ALET XPROBDESC                */
  union ä
    void          *_asm_ieatdump_xlistad;    /* ++   XLISTAD   */
    void          *_asm_ieatdump_xlist_addr; /* ++  ADDR XLIST */
    ü _asmdsect_union9;
  int            asm_ieatdump_xlist_alet;        /* ++  ALET XLIST                    */
  union ä
    void          *_asm_ieatdump_xsubplstad;    /* ++   XSUBPLSTAD   */
    void          *_asm_ieatdump_xsubplst_addr; /* ++  ADDR XSUBPLST */
    ü _asmdsect_union10;
  int            asm_ieatdump_xsubplst_alet;     /* ++  ALET XSUBPLST                 */
  union ä
    void          *_asm_ieatdump_xdsplistad;    /* ++   XDSPLISTAD   */
    void          *_asm_ieatdump_xdsplist_addr; /* ++  ADDR XDSPLIST */
    ü _asmdsect_union11;
  int            asm_ieatdump_xdsplist_alet;     /* ++  ALET XDSPLIST                 */
  union ä
    void          *_asm_ieatdump_xecbad;    /* ++   XECBAD   */
    void          *_asm_ieatdump_xecb_addr; /* ++  ADDR XECB */
    ü _asmdsect_union12;
  int            asm_ieatdump_xecb_alet;         /* ++  ALET XECB                     */
  unsigned char  asm_tdump_name;                 /* name length                       */
  unsigned char  _filler46Ä100Ü;                 /* name                              */
  unsigned char  asm_tdump_desc;                 /* desc length                       */
  unsigned char  _filler47Ä100Ü;                 /* desc                              */
  unsigned char  asm_streamnameÄ26Ü;             /* stream name                       */
  unsigned char  asm_streamtokenÄ16Ü;            /* stream token                      */
  void          *asm_logger_length;
  void          *asm_logger_buffer;              /* logger buffer pointer             */
  void          *asm_logger_bufflen;             /* buffer length                     */
  void          *asm_logger_buffer_offset;       /* actual buffer offset              */
  void          *asm_logger_browse_token;        /* browse token                      */
  void          *asm_logger_direction;           /* browse direction 2-3              */
  struct ä
    void          *_asm_ixgconn_xplistptr;     /* ++ INPUT          */
    unsigned char  _asm_ixgconn_xversion;      /* ++ INPUT XVERSION */
    unsigned char  _asm_ixgconn_xixgflags;     /* ++ FIELD_LABEL    */
    unsigned char  _asm_ixgconn_xkeyusedflags; /* ++ FIELD_LABEL    */
    unsigned char  _asm_ixgconn_xformatlvl;    /* ++ CONSTANT       */
    ü asm_ixgconn;
  void          *asm_ixgconn_xansarea;           /* ++                                */
  void          *asm_ixgconn_xcompleteexit;      /* ++                                */
  unsigned char  asm_ixgconn_xrmnameÄ8Ü;         /* ++                                */
  void          *asm_ixgconn_xrmexit;            /* ++                                */
  unsigned char  asm_ixgconn_xrmdataÄ8Ü;         /* ++                                */
  unsigned char  asm_ixgconn_xlsversionÄ8Ü;      /* ++                                */
  unsigned char  asm_ixgconn_xixgflags2;         /* ++ FIELD_LABEL                    */
  unsigned char  asm_ixgconn_xrsv0002Ä3Ü;        /* ++ RESERVED                       */
  int            asm_ixgconn_xanslen;            /* ++                                */
  unsigned char  asm_ixgconn_xstructnameÄ16Ü;    /* ++                                */
  int            asm_ixgconn_xavgbufsize;        /* ++                                */
  int            asm_ixgconn_xmaxbufsize;        /* ++                                */
  int            asm_ixgconn_xelementsize;       /* ++                                */
  unsigned char  asm_ixgconn_xuserdataÄ64Ü;      /* ++                                */
  unsigned char  asm_ixgconn_xstreamnameÄ26Ü;    /* ++                                */
  unsigned char  asm_ixgconn_xstreamtokenÄ16Ü;   /* ++                                */
  unsigned char  _filler48Ä6Ü;
  struct ä
    unsigned char  _asm_ixgwrite_xversion;    /* ++ INPUT XVERSION */
    unsigned char  _asm_ixgwrite_xixgflags;   /* ++ FIELD_LABEL    */
    unsigned char  _asm_ixgwrite_xrsv0001Ä2Ü; /* ++ RESERVED       */
    void          *_asm_ixgwrite_xplistptr;   /* ++ INPUT          */
    ü asm_ixgwrite;
  int            asm_ixgwrite_xrsncode;          /* ++                                */
  void          *asm_ixgwrite_xbuffer_addr;      /* ++  ADDR                          */
  int            asm_ixgwrite_xblocklen;         /* ++                                */
  int            asm_ixgwrite_xbuffalet;         /* ++                                */
  int            asm_ixgwrite_xbuffkey;          /* ++                                */
  void          *asm_ixgwrite_xecb_addr;         /* ++  ADDR                          */
  void          *asm_ixgwrite_xansarea;          /* ++                                */
  int            asm_ixgwrite_xanslen;           /* ++                                */
  void          *asm_ixgwrite_xretblockid_addr;  /* ++  ADDR                          */
  void          *asm_ixgwrite_xtimestamp_addr;   /* ++  ADDR                          */
  unsigned char  asm_ixgwrite_xstreamtokenÄ16Ü;  /* ++                                */
  struct ä
    unsigned char  _asm_ixgbrwse_xversion;     /* ++ INPUT XVERSION */
    unsigned char  _asm_ixgbrwse_xrequest;     /* ++  XREQUEST      */
    unsigned char  _asm_ixgbrwse_xixgflagsÄ2Ü; /* ++ FIELD_LABEL    */
    void          *_asm_ixgbrwse_xplistptr;    /* ++ INPUT          */
    ü asm_ixgbrwse;
  void          *asm_ixgbrwse_xbuffer_addr;      /* ++  ADDR                          */
  int            asm_ixgbrwse_xbuffkey;          /* ++                                */
  int            asm_ixgbrwse_xbufflen;          /* ++                                */
  int            asm_ixgbrwse_xbuffalet;         /* ++                                */
  void          *asm_ixgbrwse_xblksize_addr;     /* ++  ADDR                          */
  void          *asm_ixgbrwse_xecb_addr;         /* ++  ADDR                          */
  void          *asm_ixgbrwse_xansarea;          /* ++                                */
  int            asm_ixgbrwse_xanslen;           /* ++                                */
  unsigned char  asm_ixgbrwse_xstreamtokenÄ16Ü;  /* ++                                */
  void          *asm_ixgbrwse_xbrowsetoken_addr; /* ++  ADDR                          */
  unsigned char  asm_ixgbrwse_xsearchÄ8Ü;        /* ++                                */
  void          *asm_ixgbrwse_xretblockid_addr;  /* ++  ADDR                          */
  unsigned char  asm_ixgbrwse_xstartblockidÄ8Ü;  /* ++                                */
  void          *asm_ixgbrwse_xtimestamp_addr;   /* ++  ADDR                          */
  unsigned char  asm_ixgbrwse_xblockidÄ8Ü;       /* ++                                */
  unsigned char  asm_logger_convvalÄ16Ü;
  unsigned char  asm_logger_stckÄ16Ü;
  unsigned char  _filler49Ä32Ü;
  unsigned char  _filler50Ä4Ü;
  struct ä
    unsigned char  _asm_ieamschd_xversion; /* ++ INPUT XVERSION */
    unsigned char  _asm_ieamschd_xflag1;   /* ++ FIELD_LABEL    */
    unsigned char  _asm_ieamschd_xflag2;   /* ++ FIELD_LABEL    */
    unsigned char  _asm_ieamschd_xflag3;   /* ++ FIELD_LABEL    */
    void          *_asm_ieamschd_xepaddr;  /* ++                */
    ü asm_ieamschd;
  unsigned char  asm_ieamschd_xtargetstokenÄ8Ü;  /* ++                                */
  unsigned char  asm_ieamschd_xenclavetokenÄ8Ü;  /* ++                                */
  unsigned char  asm_ieamschd_xminorpriority;    /* ++                                */
  unsigned char  asm_ieamschd_xkeyvalue;         /* ++                                */
  unsigned char  asm_ieamschd_xcpumaskÄ2Ü;       /* ++                                */
  int            asm_ieamschd_xparm;             /* ++                                */
  union ä
    void          *_asm_ieamschd_xfrraddr; /* ++ */
    struct ä
      unsigned char  _asm_ieamschd_xrsv0001Ä3Ü; /* ++ RESERVED    */
      unsigned char  _asm_ieamschd_xfrrflag;    /* ++ FIELD_LABEL */
      ü _asmdsect_struct2;
    ü _asmdsect_union13;
  void          *asm_ieamschd_xrmtraddr;         /* ++                                */
  unsigned char  asm_ieamschd_xpurgestokenÄ8Ü;   /* ++                                */
  void          *asm_ieamschd_xptcbaddr;         /* ++                                */
  unsigned char  asm_ieamschd_xclientstokenÄ8Ü;  /* ++                                */
  int            asm_ieamschd_comp;              /* IEAMSCHD comp                     */
  int            asm_ieamschd_code;              /* IEAMSCHD code                     */
  int            asm_ieamschd_rsn;               /* IEAMSCHD reason                   */
  unsigned char  asm_ansareaÄ40Ü;
  void          *asm_vtoc_dcb;                   /* DCB address below the line        */
  unsigned char  asm_vtoc_ddnameÄ8Ü;             /* DDNAME                            */
  unsigned char  asm_vtoc_filterÄ44Ü;            /* name filter                       */
  struct ä
    unsigned char  _filler51;       /* Option byte        */
    int            _filler52 : 24;  /* DCB or ACB address */
    ü asm_vtoc_openlist;
  unsigned char  asm_vtoc_fclÄ24Ü;
  unsigned char  asm_vtoc_bflÄ20Ü;
  unsigned char  _filler53Ä4Ü;                   /* EBCDIC 'CVPL'                     */
  short int      _filler54;                      /* LENGTH OF CVPL                    */
  unsigned char  _filler55;                      /* FUNCTION CODE                     */
  unsigned char  _filler56;                      /* STATUS INFORMATION                */
  unsigned char  _filler57;                      /* FIRST FLAG BYTE                   */
  unsigned char  _filler58;                      /* SECOND FLAG BYTE                  */
  unsigned char  _filler59;                      /* THIRD FLAG BYTE                   */
  unsigned char  _filler60;                      /* Fourth Flag Byte           @LVC   */
  void          *_filler61;                      /* UCB ADDRESS                       */
  void          *_filler62;                      /* FILTER CRITERIA LIST ADDRESS      */
  void          *_filler63;                      /* BUFFER LIST ADDRESS               */
  void          *_filler64;                      /* INDEX VIR'S BUFFER LIST ADDRESS   */
  void          *_filler65;                      /* MAP VIR'S BUFFER LIST ADDRESS     */
  void          *_filler66;                      /* I/O AREA ADDRESS                  */
  void          *_filler67;                      /* DEB ADDRESS                       */
  void          *_filler68;                      /* ARGUMENT ADDRESS                  */
  void          *_filler69;                      /* SPACE PARAMETER LIST ADDRESS      */
  void          *_filler70;                      /* EXTENT TABLE ADDRESS              */
  void          *_filler71;                      /* NEW VRF VIXM BUFFER LIST ADDR     */
  void          *_filler72;                      /* VRF DATA ADDRESS                  */
  void          *_filler73;                      /* COUNT AREA ADDRESS                */
  void          *_filler74;                      /* FILTER SAVE AREA ADDRESS          */
  unsigned char  asm_vtoc_bufferÄ140Ü;
  void          *asm_camlstÄ4Ü;
  void          *asm_testauth;
  void          *asm_diagnose_flag;
  void          *asm_diagnose_addr;
  void          *asm_vsmlist_ascbaddr;           /* address of the ascb               */
  short int      asm_vsmlist_myascbid;           /* my own ASCB id                    */
  unsigned char  _filler75Ä2Ü;
  int            asm_vsmlist_myascb;             /* address of my ASCB                */
  int            asm_vsmlist_mytcb;              /* my own TCB addr                   */
  void          *asm_vsmlist_storage;            /* SRB work area address             */
  void          *asm_mutex_vectorÄ32Ü;
  ü;

#define asm_iarv_xversion           asm_iarv._asm_iarv_xversion
#define asm_iarv_xservice           asm_iarv._asm_iarv_xservice
#define asm_iarv_xflags1            asm_iarv._asm_iarv_xflags1
#define asm_iarv_xflags2            asm_iarv._asm_iarv_xflags2
#define asm_iarv_xnumrange          asm_iarv._asm_iarv_xnumrange
#define asm_ieatdump_xplistname     _asmdsect_union1.asm_ieatdump._asm_ieatdump_xplistname
#define asm_ieatdump_xword1         _asmdsect_union1.asm_ieatdump._asm_ieatdump_xword1
#define asm_ieatdump_xplistlen      _asmdsect_union1._asmdsect_struct1._asm_ieatdump_xplistlen
#define asm_ieatdump_xversion       _asmdsect_union1._asmdsect_struct1._asm_ieatdump_xversion
#define asm_ieatdump_xrsv0001       _asmdsect_union1._asmdsect_struct1._asm_ieatdump_xrsv0001
#define asm_ieatdump_xdsnad         _asmdsect_union2._asm_ieatdump_xdsnad
#define asm_ieatdump_xdsn_addr      _asmdsect_union2._asm_ieatdump_xdsn_addr
#define asm_ieatdump_xhdrad         _asmdsect_union3._asm_ieatdump_xhdrad
#define asm_ieatdump_xhdr_addr      _asmdsect_union3._asm_ieatdump_xhdr_addr
#define asm_ieatdump_xidxad         _asmdsect_union4._asm_ieatdump_xidxad
#define asm_ieatdump_xidx_addr      _asmdsect_union4._asm_ieatdump_xidx_addr
#define asm_ieatdump_xsymrecad      _asmdsect_union5._asm_ieatdump_xsymrecad
#define asm_ieatdump_xsymrec_addr   _asmdsect_union5._asm_ieatdump_xsymrec_addr
#define asm_ieatdump_xintokenad     _asmdsect_union6._asm_ieatdump_xintokenad
#define asm_ieatdump_xintoken_addr  _asmdsect_union6._asm_ieatdump_xintoken_addr
#define asm_ieatdump_xremotead      _asmdsect_union7._asm_ieatdump_xremotead
#define asm_ieatdump_xremote_addr   _asmdsect_union7._asm_ieatdump_xremote_addr
#define asm_ieatdump_xprobdescad    _asmdsect_union8._asm_ieatdump_xprobdescad
#define asm_ieatdump_xprobdesc_addr _asmdsect_union8._asm_ieatdump_xprobdesc_addr
#define asm_ieatdump_xlistad        _asmdsect_union9._asm_ieatdump_xlistad
#define asm_ieatdump_xlist_addr     _asmdsect_union9._asm_ieatdump_xlist_addr
#define asm_ieatdump_xsubplstad     _asmdsect_union10._asm_ieatdump_xsubplstad
#define asm_ieatdump_xsubplst_addr  _asmdsect_union10._asm_ieatdump_xsubplst_addr
#define asm_ieatdump_xdsplistad     _asmdsect_union11._asm_ieatdump_xdsplistad
#define asm_ieatdump_xdsplist_addr  _asmdsect_union11._asm_ieatdump_xdsplist_addr
#define asm_ieatdump_xecbad         _asmdsect_union12._asm_ieatdump_xecbad
#define asm_ieatdump_xecb_addr      _asmdsect_union12._asm_ieatdump_xecb_addr
#define asm_ixgconn_xplistptr       asm_ixgconn._asm_ixgconn_xplistptr
#define asm_ixgconn_xversion        asm_ixgconn._asm_ixgconn_xversion
#define asm_ixgconn_xixgflags       asm_ixgconn._asm_ixgconn_xixgflags
#define asm_ixgconn_xkeyusedflags   asm_ixgconn._asm_ixgconn_xkeyusedflags
#define asm_ixgconn_xformatlvl      asm_ixgconn._asm_ixgconn_xformatlvl
#define asm_ixgwrite_xversion       asm_ixgwrite._asm_ixgwrite_xversion
#define asm_ixgwrite_xixgflags      asm_ixgwrite._asm_ixgwrite_xixgflags
#define asm_ixgwrite_xrsv0001       asm_ixgwrite._asm_ixgwrite_xrsv0001
#define asm_ixgwrite_xplistptr      asm_ixgwrite._asm_ixgwrite_xplistptr
#define asm_ixgbrwse_xversion       asm_ixgbrwse._asm_ixgbrwse_xversion
#define asm_ixgbrwse_xrequest       asm_ixgbrwse._asm_ixgbrwse_xrequest
#define asm_ixgbrwse_xixgflags      asm_ixgbrwse._asm_ixgbrwse_xixgflags
#define asm_ixgbrwse_xplistptr      asm_ixgbrwse._asm_ixgbrwse_xplistptr
#define asm_ieamschd_xversion       asm_ieamschd._asm_ieamschd_xversion
#define asm_ieamschd_xflag1         asm_ieamschd._asm_ieamschd_xflag1
#define asm_ieamschd_xflag2         asm_ieamschd._asm_ieamschd_xflag2
#define asm_ieamschd_xflag3         asm_ieamschd._asm_ieamschd_xflag3
#define asm_ieamschd_xepaddr        asm_ieamschd._asm_ieamschd_xepaddr
#define asm_ieamschd_xfrraddr       _asmdsect_union13._asm_ieamschd_xfrraddr
#define asm_ieamschd_xrsv0001       _asmdsect_union13._asmdsect_struct2._asm_ieamschd_xrsv0001
#define asm_ieamschd_xfrrflag       _asmdsect_union13._asmdsect_struct2._asm_ieamschd_xfrrflag

/* Values for field "asm_iarv_xservice" */
#define asm_iarv_share                     1      /* ++ XSERVICE.SHARE KEYWORD        */
#define asm_iarv_unshare                   2      /* ++ XSERVICE.UNSHARE KEYWORD      */
#define asm_iarv_changeaccess              3      /* ++ XSERVICE.CHANGEACCESS KEYWORD */
#define asm_iarv_shareseg                  4      /* ++ XSERVICE.SHARESEG KEYWORD     */

/* Values for field "asm_iarv_xflags1" */
#define asm_iarv_target_view_ro            0x80
#define asm_iarv_target_view_sw            0x40
#define asm_iarv_target_view_uw            0x20
#define asm_iarv_target_view_tw            0x10
#define asm_iarv_target_view_ls            0x08
#define asm_iarv_target_view_na            0x04
#define asm_iarv_copynow                   0x02   /* ++ KEYUSED.COPYNOW KEYWORD       */
#define asm_iarv_retain_yes                0x01

/* Values for field "asm_iarv_xflags2" */
#define asm_iarv_xpartialpage_yes          0x80

/* Values for field "asm_iarv_xranglist" */
#define asm_iarvl                          0x0C   /* ++ LENGTH OF PLIST               */

/* Values for field "_filler42" */
#define asm_wtol_text_length               110    /* text length                      */

/* Values for field "asm_ieatdump_xsdata1" */
#define asm_ieatdump_xsdata_defs           0x80
#define asm_ieatdump_xsdata_allnuc         0x40
#define asm_ieatdump_xsdata_csa            0x20
#define asm_ieatdump_xsdata_grsq           0x10
#define asm_ieatdump_xsdata_lpa            0x08
#define asm_ieatdump_xsdata_lsqa           0x04
#define asm_ieatdump_xsdata_nuc            0x02
#define asm_ieatdump_xsdata_rgn            0x01

/* Values for field "asm_ieatdump_xsdata2" */
#define asm_ieatdump_xsdata_sqa            0x80
#define asm_ieatdump_xsdata_sum            0x40
#define asm_ieatdump_xsdata_swa            0x20
#define asm_ieatdump_xsdata_trt            0x10
#define asm_ieatdump_xsdata_psa            0x08

/* Values for field "asm_ieatdump_xflags1" */
#define asm_ieatdump_keyused_ddname        0x40

/* Values for field "asm_ieatdump_xecb_addr" */
#define asm_ieatdumpl                      0x7C   /* ++ LENGTH OF PLIST               */

/* Values for field "asm_ixgconn_xixgflags" */
#define asm_ixgconn_xrequest_connect       0x80
#define asm_ixgconn_xauth_read             0x40
#define asm_ixgconn_xauth_write            0x20
#define asm_ixgconn_ximportconnect_yes     0x10
#define asm_ixgconn_xrmevents_lbwrite      0x08
#define asm_ixgconn_xrmevents_lbdelete     0x04

/* Values for field "asm_ixgconn_xkeyusedflags" */
#define asm_ixgconn_keyused_userdata       0x80
#define asm_ixgconn_keyused_avgbufsize     0x40
#define asm_ixgconn_keyused_maxbufsize     0x20
#define asm_ixgconn_keyused_elementsize    0x10
#define asm_ixgconn_keyused_structname     0x08
#define asm_ixgconn_keyused_completeexit   0x04
#define asm_ixgconn_keyused_rmname         0x02
#define asm_ixgconn_keyused_lsversion      0x01

/* Values for field "asm_ixgconn_xixgflags2" */
#define asm_ixgconn_keyused_diag           0x80
#define asm_ixgconn_xdiag_no_diag          0x40
#define asm_ixgconn_xdiag_yes              0x20

/* Values for field "asm_ixgconn_xstreamtoken" */
#define asm_ixgconnl                       0xBA   /* ++ LENGTH OF PLIST               */

/* Values for field "asm_ixgwrite_xixgflags" */
#define asm_ixgwrite_xmode_sync            0x80
#define asm_ixgwrite_keyused_buffkey       0x40
#define asm_ixgwrite_keyused_timestamp     0x20
#define asm_ixgwrite_xmode_syncexit        0x10
#define asm_ixgwrite_xmode_asyncnoresponse 0x08
#define asm_ixgwrite_keyused_retblockid    0x04
#define asm_ixgwrite_macused_ixgimprt      0x02
#define asm_ixgwrite_keyused_buffer64      0x01

/* Values for field "asm_ixgbrwse_xrequest" */
#define asm_ixgbrwse_xrequest_start        1      /* ++ XREQUEST.START KEYWORD        */
#define asm_ixgbrwse_xrequest_readcursor   2
#define asm_ixgbrwse_xrequest_readblock    3
#define asm_ixgbrwse_xrequest_reset        4      /* ++ XREQUEST.RESET KEYWORD        */
#define asm_ixgbrwse_xrequest_end          5      /* ++ XREQUEST.END KEYWORD          */

/* Values for field "asm_ixgbrwse_xixgflags" */
#define asm_ixgbrwse_xdirection_youngtoold 0x8000
#define asm_ixgbrwse_xmode_sync            0x4000
#define asm_ixgbrwse_xgmt_yes              0x2000
#define asm_ixgbrwse_keyused_startblockid  0x1000
#define asm_ixgbrwse_keyused_oldest        0x800
#define asm_ixgbrwse_keyused_youngest      0x400
#define asm_ixgbrwse_keyused_search        0x200
#define asm_ixgbrwse_keyused_buffkey       0x100
#define asm_ixgbrwse_xposition_youngest    0x80
#define asm_ixgbrwse_xmode_syncexit        0x40
#define asm_ixgbrwse_xview_active          0x20
#define asm_ixgbrwse_xview_all             0x10
#define asm_ixgbrwse_keyused_view          0x08
#define asm_ixgbrwse_keyused_multiblock    0x04
#define asm_ixgbrwse_xmultiblock_yes       0x02
#define asm_ixgbrwse_keyused_buffer64      0x01

/* Values for field "asm_ieamschd_xflag1" */
#define asm_ieamschd_xenv_stoken           0x08
#define asm_ieamschd_xenv_fullxm           0x04
#define asm_ieamschd_xenv_primary          0x02
#define asm_ieamschd_xenv_home             0x01

/* Values for field "asm_ieamschd_xflag2" */
#define asm_ieamschd_keyused_dualpooltoken 0x20
#define asm_ieamschd_xsynch_yes            0x10
#define asm_ieamschd_keyused_keyvalue      0x08
#define asm_ieamschd_xllock_yes            0x04
#define asm_ieamschd_xfeature_cpmask       0x02
#define asm_ieamschd_xfeature_crypto       0x01

/* Values for field "asm_ieamschd_xflag3" */
#define asm_ieamschd_xpriority_client      0x20
#define asm_ieamschd_xpriority_enclave     0x10
#define asm_ieamschd_xpriority_preempt     0x08
#define asm_ieamschd_xpriority_current     0x04
#define asm_ieamschd_xpriority_global      0x02
#define asm_ieamschd_xpriority_local       0x01

/* Values for field "asm_ieamschd_xfrrflag" */
#define asm_ieamschd_xsdwaloc31_yes        0x01
#define asm_ieamschdl                      0x3C   /* ++ LENGTH OF PLIST               */

/* Values for field "asm_diagnose_addr" */
#define asm_diagnose_length                4095
#define asm_diagnose_fix                   1
#define asm_diagnose_dontswap              2
#define asm_diagnose_keep                  4
#define asm_diagnose_all                   7

/* Values for field "asm_vsmlist_storage" */
#define sym_cleanup                        0      /* + symb equ                       */
#define sym_gettoken                       1      /* + symb equ                       */
#define sym_createtoken                    2      /* + symb equ                       */
#define sym_deletetoken                    3      /* + symb equ                       */
#define sym_allocatepages                  4      /* + symb equ                       */
#define sym_freepages                      5      /* + symb equ                       */
#define sym_enq                            6      /* + symb equ                       */
#define sym_deq                            7      /* + symb equ                       */
#define sym_sleep                          8      /* + symb equ                       */
#define sym_getecb                         9      /* + symb equ                       */
#define sym_wait                           10     /* + symb equ                       */
#define sym_post                           11     /* + symb equ                       */
#define sym_reset                          12     /* + symb equ                       */
#define sym_select                         13     /* + symb equ                       */
#define sym_connectshmem                   14     /* + symb equ                       */
#define sym_disconnectshmem                15     /* + symb equ                       */
#define sym_oper                           16     /* + symb equ                       */
#define sym_wto                            17     /* + symb equ                       */
#define sym_malloc                         18     /* + symb equ                       */
#define sym_free                           19     /* + symb equ                       */
#define sym_svc                            20     /* + symb equ                       */
#define sym_attachmvs                      21     /* + symb equ                       */
#define sym_clock                          22     /* + symb equ                       */
#define sym_timeused                       23     /* + symb equ                       */
#define sym_tdump                          24     /* + symb equ                       */
#define sym_logger                         25     /* + symb equ                       */
#define sym_vtoc                           26     /* + symb equ                       */
#define sym_srb                            27     /* + symb equ                       */
#define sym_wlm                            28     /* + symb equ                       */
#define sym_obtain                         29     /* + symb equ                       */
#define sym_testauth                       30     /* + symb equ                       */
#define sym_diagnose                       31     /* + symb equ                       */
#define sym_vsmlist                        32     /* + symb equ                       */

/* Values for field "asm_mutex_vector" */
#define asm_length                         0x978  /* dsect length                     */
#define r0                                 0
#define r1                                 1
#define r2                                 2
#define r3                                 3
#define r4                                 4
#define r5                                 5
#define r6                                 6
#define r7                                 7
#define r8                                 8
#define r9                                 9
#define r10                                10
#define r11                                11
#define r12                                12
#define r13                                13
#define rdsa                               0x0D   /* DSA POINTER                      */
#define r14                                14
#define r15                                15
#define fr0                                0
#define fr2                                2
#define fr4                                4
#define fr6                                6

#pragma pack(reset)
