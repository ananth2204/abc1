
#if !defined(_CL133)
#define _CL133
typedef char CL133(|133|);
#endif

#if !defined(_XL6)
#define _XL6
typedef char XL6(|6|);
#endif

#if !defined(_XL20)
#define _XL20
typedef char XL20(|20|);
#endif

#if !defined(_XL4)
#define _XL4
typedef struct
  {
  char BF : 32;
  } XL4;
#endif

#if !defined(_XL2)
#define _XL2
typedef struct
  {
  char BF : 16;
  } XL2;
#endif

#if !defined(_BL2)
#define _BL2
typedef struct
  {
  char BF : 16;
  } BL2;
#endif

#if !defined(_BL12)
#define _BL12
typedef char BL12(|12|);
#endif

#if !defined(_AL3)
#define _AL3
typedef struct
  {
  char BF : 24;
  } AL3;
#endif

#if !defined(_AL4)
#define _AL4
typedef struct
  {
  char BF : 32;
  } AL4;
#endif

#if !defined(_CL4)
#define _CL4
typedef char CL4(|4|);
#endif

#if !defined(_CL8)
#define _CL8
typedef char CL8(|8|);
#endif

#if !defined(_XL8)
#define _XL8
typedef char XL8(|8|);
#endif

#if !defined(_CL10)
#define _CL10
typedef char CL10(|10|);
#endif

#if !defined(_AL2)
#define _AL2
typedef struct
  {
  char BF : 16;
  } AL2;
#endif

#if !defined(_CL32)
#define _CL32
typedef char CL32(|32|);
#endif

#define R0 0                            /* */
#define R1 1                            /* */
#define R2 2                            /* */
#define R3 3                            /* */
#define R4 4                            /* */
#define R5 5                            /* */
#define R6 6                            /* */
#define R7 7                            /* */
#define R8 8                            /* */
#define R9 9                            /* */
#define R10 10                          /* */
#define R11 11                          /* */
#define R12 12                          /* */
#define R13 13                          /* */
#define R14 14                          /* */
#define R15 15                          /* */

struct DSSDATA
  {
/*                                                                                          */
/*                    GENERAL SECTION                                                       */
/*                                                                                          */
  CL32 _f0;                             /* */
/*                                                                                          */
/*                    DSSCALL SECTION                                                       */
/*                                                                                          */
  CL32 _f1;                             /* */
  void *dsscsave(|18|);                 /* */
  void *dsscparm(|5|);                  /* */
  AL2 dsscop;                           /* */
  CL10 dsscopt;                         /* */
#define DSSCOPL 10                      /* */
  AL2 dsscdds;                          /* */
  XL8 dsscddss(|4|);                    /*            RESERVED                             */
  CL8 _f2;                              /*          SYSIN                                */
  CL8 _f3;                              /*       SYSPRINT                             */
#define DSSCDDSL 48                     /*          LIST LENGTH                          */
  AL2 dsscpage;                         /*      LIST LENGTH                          */
  CL4 dsscpg;                           /*           FIRST PAGE                           */
#define DSSCPAGEL 4                     /*            LIST LENGTH                          */
  AL2 dsscuim;                          /*       LENGTH                               */
  AL4 dsscuima;                         /* MODULE ADDRESS                   */
#define DSSCUIML 4                      /*          LENGTH DEF                           */
  AL2 dsscdata;                         /*      LENGTH                               */
  void *dsscdataa;                      /*          ADDRESS                              */
#define DSSCDATAL 4                     /*         LENGTH                               */
  void *dsscaddr;                       /*                START OF THE ADRDSSU                 */
  CL32 _f4;                             /* */
/*                   SSOPENL OPEN  (0,INPUT),MF=L,MODE=31        OPEN LIST FORM             */
  int dssopenl(|0|);                    /*                             ALIGN LIST TO FULLWORD */
  char _f5;                             /*                     OPTION BYTE                 */
  AL3 _f6;                              /*                       RESERVED               @L1A */
  void *_f7;                            /*                         DCB ADDRESS            @L1A */
/*                   DSSLOG  DCB   DCBE=DSSLOGE,DDNAME=DSSLOG,DSORG=PS,MACRF=(PM),          */
/*                                 RECFM=FBA,LRECL=133,BLKSIZE=13300                        */
/*                                          DATA CONTROL BLOCK                              */
/*                                                                                          */
  int dsslog(|0|);                      /*          ORIGIN ON WORD BOUNDARY                   */
/*                                          DIRECT ACCESS DEVICE INTERFACE                  */
  void *_f8;                            /*     DCBE ADDRESS                              */
  BL12 _f9;                             /*        FDAD, DVTBL                               */
  void *_f10;                           /*           KEYLEN, DEVT, TRBAL                       */
/*                                          COMMON ACCESS METHOD INTERFACE                  */
  char _f11;                            /*         BUFNO, NUMBER OF BUFFERS                  */
  AL3 _f12;                             /*         BUFCB, BUFFER POOL CONTROL BLOCK          */
  AL2 _f13;                             /*         BUFL, BUFFER LENGTH                       */
  BL2 _f14;                             /* DSORG, DATA SET ORGANIZATION       */
  void *_f15;                           /*           IOBAD FOR EXCP OR RESERVED                */
/*                                          FOUNDATION EXTENSION                            */
  char _f16;                            /*  BFTEK, BFALN, DCBE INDICATORS             */
  AL3 _f17;                             /*         EODAD (END OF DATA ROUTINE ADDRESS)       */
  char _f18;                            /*  RECFM (RECORD FORMAT)                     */
  AL3 _f19;                             /*         EXLST (EXIT LIST ADDRESS)                 */
/*                                          FOUNDATION BLOCK                                */
  CL8 _f20;                             /*    DDNAME                                    */
  char _f21;                            /*  OFLGS (OPEN FLAGS)                        */
  char _f22;                            /*  IFLGS (IOS FLAGS)                         */
  BL2 _f23;                             /* MACR (MACRO FORMAT)                */
/*                                          BSAM-BPAM-QSAM INTERFACE                        */
  char _f24;                            /*  OPTCD, OPTION CODES                       */
  AL3 _f25;                             /*         CHECK OR INTERNAL QSAM SYNCHRONIZING RTN. */
  void *_f26;                           /*           SYNAD, SYNCHRONOUS ERROR RTN. (3 BYTES)   */
  short _f27;                           /*           INTERNAL ACCESS METHOD FLAGS              */
  AL2 _f28;                             /*     BLKSIZE, BLOCK SIZE                       */
  int _f29;                             /*           INTERNAL ACCESS METHOD FLAGS              */
  void *_f30;                           /*           INTERNAL ACCESS METHOD USE                */
/*                                               QSAM INTERFACE                             */
  void *_f31;                           /*           EOBAD                                     */
  void *_f32;                           /*           RECAD                                     */
  short _f33;                           /*           QSWS (FLAGS) AND EITHER DIRCT OR BUFOFF   */
  AL2 _f34;                             /*       LRECL                                     */
  char _f35;                            /*  EROPT, ERROR OPTION                       */
  AL3 _f36;                             /*         CNTRL                                     */
  short _f37(|2|);                      /*         RESERVED AND PRECL                        */
  void *_f38;                           /*           EOB, INTERNAL ACCESS METHOD FIELD         */
#define DSSLOGL 96                      /*      LENGTH OF DSSLOG DCB                       */
/*                   DSSLOGE DCBE  RMODE31=BUFF                                             */
/*                      DATA CONTROL BLOCK EXTENSION.                                       */
  int dssloge(|0|);                     /*  0  ALIGNMENT AND IDENTIFIER               */
  CL4 _f39;                             /* */
  short _f40;                           /*          4  LENGTH OF DCBE, MINIMUM IS 56          */
  XL2 _f41;                             /*        6  RESERVED, SHOULD BE ZERO               */
  void *_f42;                           /*           8  0 IF NOT OPEN, OPEN POINTS TO DCB      */
  XL4 _f43;                             /*         C  DISK ADDRESS OF CURRENT MEMBER         */
  char _f44;                            /*          10  FLAGS SET BY SYSTEM                    */
  char _f45;                            /*   11  FLAGS SET BY USER                      */
  short _f46;                           /*          12  NUMBER OF STRIPES OR ZERO              */
  XL20 _f47;                            /*       14  RESERVED & NUMBER OF BLOCKS IN DS      */
  void *_f48;                           /*          28  END OF DATA ROUTINE ADDRESS OR 0       */
  void *_f49;                           /*          2C  I/O ERROR ROUTINE (SYNCHRONOUS) OR 0   */
  XL6 _f50;                             /*        30  RESERVED, SHOULD BE ZERO               */
  char _f51(|2|);                       /*      36  MULTACC AND MULTSDN                    */
/*                   DSSHFS  DCB   DCBE=DSSHFSE,DDNAME=DSSHFS,DSORG=PS,MACRF=(PM,GM),       */
/*                                 RECFM=U,LRECL=0,BLKSIZE=32760,EODAD=RGET_EODAD           */
/*                                          DATA CONTROL BLOCK                              */
/*                                                                                          */
  int dsshfs(|0|);                      /*          ORIGIN ON WORD BOUNDARY                   */
/*                                          DIRECT ACCESS DEVICE INTERFACE                  */
  void *_f52;                           /*     DCBE ADDRESS                              */
  BL12 _f53;                            /*        FDAD, DVTBL                               */
  void *_f54;                           /*           KEYLEN, DEVT, TRBAL                       */
/*                                          COMMON ACCESS METHOD INTERFACE                  */
  char _f55;                            /*         BUFNO, NUMBER OF BUFFERS                  */
  AL3 _f56;                             /*         BUFCB, BUFFER POOL CONTROL BLOCK          */
  AL2 _f57;                             /*         BUFL, BUFFER LENGTH                       */
  BL2 _f58;                             /* DSORG, DATA SET ORGANIZATION       */
  void *_f59;                           /*           IOBAD FOR EXCP OR RESERVED                */
/*                                          FOUNDATION EXTENSION                            */
  char _f60;                            /*  BFTEK, BFALN, DCBE INDICATORS             */
  AL3 _f61;                             /*                                          */
                                        /*                EODAD (END OF DATA ROUTINE ADDRESS)       */
  char _f62;                            /*  RECFM (RECORD FORMAT)                     */
  AL3 _f63;                             /*         EXLST (EXIT LIST ADDRESS)                 */
/*                                          FOUNDATION BLOCK                                */
  CL8 _f64;                             /*    DDNAME                                    */
  char _f65;                            /*  OFLGS (OPEN FLAGS)                        */
  char _f66;                            /*  IFLGS (IOS FLAGS)                         */
  BL2 _f67;                             /* MACR (MACRO FORMAT)                */
/*                                          BSAM-BPAM-QSAM INTERFACE                        */
  char _f68;                            /*  OPTCD, OPTION CODES                       */
  AL3 _f69;                             /*         CHECK OR INTERNAL QSAM SYNCHRONIZING RTN. */
  void *_f70;                           /*           SYNAD, SYNCHRONOUS ERROR RTN. (3 BYTES)   */
  short _f71;                           /*           INTERNAL ACCESS METHOD FLAGS              */
  AL2 _f72;                             /*     BLKSIZE, BLOCK SIZE                       */
  int _f73;                             /*           INTERNAL ACCESS METHOD FLAGS              */
  void *_f74;                           /*           INTERNAL ACCESS METHOD USE                */
/*                                               QSAM INTERFACE                             */
  void *_f75;                           /*           EOBAD                                     */
  void *_f76;                           /*           RECAD                                     */
  short _f77;                           /*           QSWS (FLAGS) AND EITHER DIRCT OR BUFOFF   */
  AL2 _f78;                             /*         LRECL                                     */
  char _f79;                            /*  EROPT, ERROR OPTION                       */
  AL3 _f80;                             /*         CNTRL                                     */
  short _f81(|2|);                      /*         RESERVED AND PRECL                        */
  void *_f82;                           /*           EOB, INTERNAL ACCESS METHOD FIELD         */
#define DSSHFSL 96                      /*      LENGTH OF DSSHFS DCB                       */
/*                   DSSHFSE DCBE  RMODE31=BUFF                                             */
/*                      DATA CONTROL BLOCK EXTENSION.                                       */
  int dsshfse(|0|);                     /*  0  ALIGNMENT AND IDENTIFIER               */
  CL4 _f83;                             /* */
  short _f84;                           /*          4  LENGTH OF DCBE, MINIMUM IS 56          */
  XL2 _f85;                             /*        6  RESERVED, SHOULD BE ZERO               */
  void *_f86;                           /*           8  0 IF NOT OPEN, OPEN POINTS TO DCB      */
  XL4 _f87;                             /*         C  DISK ADDRESS OF CURRENT MEMBER         */
  char _f88;                            /*          10  FLAGS SET BY SYSTEM                    */
  char _f89;                            /*   11  FLAGS SET BY USER                      */
  short _f90;                           /*          12  NUMBER OF STRIPES OR ZERO              */
  XL20 _f91;                            /*       14  RESERVED & NUMBER OF BLOCKS IN DS      */
  void *_f92;                           /*          28  END OF DATA ROUTINE ADDRESS OR 0       */
  void *_f93;                           /*          2C  I/O ERROR ROUTINE (SYNCHRONOUS) OR 0   */
  XL6 _f94;                             /*        30  RESERVED, SHOULD BE ZERO               */
  char _f95(|2|);                       /*      36  MULTACC AND MULTSDN                    */
  CL133 dsslog_buff;                    /*         LOG BUFFER                             */
  char _f96(|3|);                       /* Padding added for alignment by DSECT2C */
  void *dssrdw_save;                    /*             SAVE RDW HERE                          */
  void *dsseof_flag;                    /*             EOF FLAG                               */
  void *dssu_pointer;                   /*               U BUFFER POINTER                     */
  short dssu_length;                    /*               U BUFFER LENGTH                      */
  char dsshfs_buff(|65536|);            /*   HFS BUFFER                             */
  char dssu_buffer(|32768|);            /*       U BUFFER                             */
#define DSSDATA_LENGTH 99038            /* */
  };




#define DSSCADDR                        dsscaddr
#define DSSCDATA                        dsscdata
#define DSSCDATAA                       dsscdataa
#define DSSCDDS                         dsscdds
#define DSSCDDSS                        dsscddss
#define DSSCOP                          dsscop
#define DSSCOPT                         dsscopt
#define DSSCPAGE                        dsscpage
#define DSSCPARM                        dsscparm
#define DSSCPG                          dsscpg
#define DSSCSAVE                        dsscsave
#define DSSCUIM                         dsscuim
#define DSSCUIMA                        dsscuima
#define DSSEOF_FLAG                     dsseof_flag
#define DSSHFS                          dsshfs(|0|)
#define DSSHFS_BUFF                     dsshfs_buff
#define DSSHFSE                         dsshfse(|0|)
#define DSSLOG                          dsslog(|0|)
#define DSSLOG_BUFF                     dsslog_buff
#define DSSLOGE                         dssloge(|0|)
#define DSSOPENL                        dssopenl(|0|)
#define DSSRDW_SAVE                     dssrdw_save
#define DSSU_BUFFER                     dssu_buffer
#define DSSU_LENGTH                     dssu_length
#define DSSU_POINTER                    dssu_pointer








/*
SYMBOL         OFFSET     SIZE     TYPE      C-TYPE               C-NAME
DSSCADDR       0000EC    000004    A         void *               dsscaddr
DSSCDATA       0000E6    000002    AL2       AL2                  dsscdata
DSSCDATAA      0000E8    000004    A         void *               dsscdataa
DSSCDDS        0000A8    000002    AL2       AL2                  dsscdds
DSSCDDSS       0000AA    000020    4XL8      XL8 (|4|)            dsscddss
DSSCOP         00009C    000002    AL2       AL2                  dsscop
DSSCOPT        00009E    00000A    C         CL10                 dsscopt
DSSCPAGE       0000DA    000002    AL2       AL2                  dsscpage
DSSCPARM       000088    000014    A         void * (|5|)         dsscparm
DSSCPG         0000DC    000004    CL4       CL4                  dsscpg
DSSCSAVE       000040    000048    18A       void * (|18|)        dsscsave
DSSCUIM        0000E0    000002    AL2       AL2                  dsscuim
DSSCUIMA       0000E2    000004    AL4       AL4                  dsscuima
DSSDATA        000000    000000
DSSEOF_FLAG    0002D4    000004    A         void *               dsseof_flag
DSSHFS         0001B0    000000    0F        int (|0|)            dsshfs
DSSHFS_BUFF    0002DE    010000    (32768... char (|65536|)       dsshfs_buff
DSSHFSE        000210    000000    0F        int (|0|)            dsshfse
DSSLOG         000118    000000    0F        int (|0|)            dsslog
DSSLOG_BUFF    000248    000085    CL133     CL133                dsslog_buff
DSSLOGE        000178    000000    0F        int (|0|)            dssloge
DSSOPENL       000110    000000    0F        int (|0|)            dssopenl
DSSRDW_SAVE    0002D0    000004    A         void *               dssrdw_save
DSSU_BUFFER    0102DE    008000    (32768)X  char (|32768|)       dssu_buffer
DSSU_LENGTH    0002DC    000002    H         short                dssu_length
DSSU_POINTER   0002D8    000004    A         void *               dssu_pointer


*/
