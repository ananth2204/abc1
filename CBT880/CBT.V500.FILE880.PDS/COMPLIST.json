{"INMR01": {"INMLRECL": 80, "INMFNODE": "NODENAME", "INMFUID": "ESA", "INMTNODE": "JES2P390", "INMTUID": "ESA", "INMFTIME": "20121130073624000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 9408921, "INMDSORG": "PO", "INMTYPE": "Data Library", "INMLRECL": 133, "INMBLKSZ": 32718, "INMRECFM": "FBA", "INMDIR": 1, "INMDSNAM": "ESA.PRJ.CBTDSSN.COMPLIST", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 9408921, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 9408921, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"ESA.PRJ.CBTDSSN.COMPLIST": {"COPYR1": {"type": "PDSE", "DS1DSORG": 512, "DS1BLKL": 32718, "DS1LRECL": 133, "DS1RECFM": "FBA", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 8, "DVACLASS": 32, "DVAUNIT": 0, "DVAMAXRC": 32760, "DVACYL": 256, "DVATRK": 256, "DVATRKLN": 65535, "DVAOVHD": 0, "num_header_records": 0}, "COPYR2": {"deb": "b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x00\\x00\\x00\\x04\\x00\\x00\\x00'", "extents": ["b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x00\\x00\\x00\\x04\\x00\\x00\\x00'", "b'\\x00\\x03\\xb0p\\x00\\x00\\x00\\x00\\x00\\x00\\x00~\\x00\\xff\\x7f\\x00'", "b'\\x00\\x03\\xb0p\\x00\\x00\\x00\\x7f\\x00\\x00\\x00\\xfd\\x00\\xff\\x7f\\x00'", "b'\\x00\\x03\\xb0p\\x00\\x00\\x00\\xfe\\x00\\x00\\x00\\xff\\x00\\xff\\x02\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"ADLER32": {"ttr": 2631, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "ASMIF": {"ttr": 2627, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "1                                         High Level Assembler Option Summary                   (PTF UK75466)   Page    1\n-                                                                                            HLASM R6.0  2012/11/30 08.23\n0  No Overriding ASMAOPT Parameters\n   Overriding Parameters-  OBJECT,NODECK,LIST,TERM,NOXREF,GOFF,FLAG(PAGE0),ADATA\n   No Process Statements\n\n ** ASMA434N GOFF/XOBJECT option specified, option LIST(133) will be used\n\n   Options for this Assembly\n03   ADATA\n     ALIGN\n     ASA\n     BATCH\n     CODEPAGE(047C)\n   NOCOMPAT\n   NODBCS\n 3 NODECK\n     DXREF\n     ESD\n   NOEXIT\n 3   FLAG(0,ALIGN,CONT,EXLITW,NOIMPLEN,PAGE0,PUSH,RECORD,NOSUBSTR,USING0)\n   NOFOLD\n 3   GOFF(NOADATA)\n   NOINFO\n     LANGUAGE(EN)\n   NOLIBMAC\n     LINECOUNT(60)\n 3   LIST(133)\n     MACHINE(,NOLIST)\n     MXREF(SOURCE)\n 3   OBJECT\n     OPTABLE(UNI,NOLIST)\n   NOPCONTROL\n   NOPESTOP\n   NOPROFILE\n   NORA2\n   NORENT\n     RLD\n     RXREF\n     SECTALGN(8)\n     SIZE(MAX)\n   NOSUPRWARN\n     SYSPARM()\n 3   TERM(WIDE)\n   NOTEST\n     THREAD\n   NOTRANSLATE\n     TYPECHECK(MAGNITUDE,REGISTER)\n     USING(NOLIMIT,MAP,WARN(15))\n   NOWORKFILE\n 3 NOXREF\n\n   No Overriding DD Names\n1                                              External Symbol Dictionary                                       Page    2\n-Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                            HLASM R6.0  2012/11/30 08.23\n0ASMIF     SD 00000001\n B_IDRL    ED 00000002                    00000001\n B_PRV     ED 00000003                    00000001\n B_TEXT    ED 00000004 00000000 00001FC4  00000001   06\n ASMIF     LD 00000005 00000000           00000004   06\n BPX1ATM   ER 00000006                    00000001\n BPX1SEL   ER 00000007                    00000001\n1                                                                                                               Page    3\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                               1          COPY $$SYSTEM\n                                                2=* 04/01/04 ARM SUPPORT\n                                                3=* 20/04/04 VERSION NAME TO 609\n                                                4=* 10/07/04 SAPI MODIFICATION\n                                                5=* 23/07/04 EXCI MODIFICATION\n                                                6=* 23/07/04 DB2\n                                                7=* 19/01/05 WLM\n                                                8=* 15/02/05 MS\n                                                9=* 30/09/05 VERSION NAME TO 620\n                                               10=* 12/12/05 WEB CONTROL\n                                               11=* 27/93/09 VERSION NAME TO 700\n                                               12=         GBLC &SYSTEM\n                                               13=         GBLA &SYSTEMC\n                                               14=         GBLC &PROJECT\n                                               15=         GBLC &VERSION\n                                               16=         GBLC &VERSION_SHORT\n                                               17=         GBLC &MSGPREF\n                                               18=         GBLC &CVTYPE\n                                               19=         GBLC &PRODUCT\n                                               20=         GBLB &MQS\n                                               21=         GBLB &SAPI\n                                               22=         GBLB &EXCI\n                                               23=         GBLB &DB2\n                                               24=         GBLB &TLIB\n                                               25=         GBLB &HTTP\n                                               26=         GBLB &ARM\n                                               27=         GBLB &WLM\n                                               28=         GBLB &WLMAE\n                                               29=         GBLB &MS\n                                               30=         AIF   (&SYSTEMC GT 1).NO\n                                               31=&SYSTEMC SETA &SYSTEMC+1\n                                               32=&MSGPREF SETC 'QSF'\n                                               33=         AIF  ('&SYSTEM' NE '').SYSOK\n                                               34=&SYSTEM  SETC 'MVS/ESA'\n                                               35=.SYSOK   ANOP\n                                               36=&PROJECT SETC 'QFSS'\n                                               37=&VERSION SETC 'V7R0M0'\n                                               38=&VERSION_SHORT SETC 'V700'\n                                               39=&CVTYPE  SETC 'TCBUSER'\n                                               40=&PRODUCT SETC 'PAPYRUS HOST'\n                                               41=&MQS     SETB  1\n                                               42=&SAPI    SETB  1\n                                               43=&EXCI    SETB  1\n                                               44=&DB2     SETB  0\n                                               45=&TLIB    SETB  0\n                                               46=&HTTP    SETB  1\n                                               47=&ARM     SETB  1\n                                               48=&WLM     SETB  1\n                                               49=&WLMAE   SETB  1\n                                               50=&MS      SETB  1\n                                               51=&SYSCVTR SETC  ''\n ** ASMA254I *** MNOTE ***                     52      0,*******************************************\n ** ASMA254I *** MNOTE ***                     53      0,*\n                                               54=         MNOTE 0,'* &SYSTEM                                  '\n ** ASMA254I *** MNOTE ***                       +     0,* MVS/ESA\n1                                                                                                               Page    4\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                              55=         MNOTE 0,'* &PROJECT                                 '\n ** ASMA254I *** MNOTE ***                       +     0,* QFSS\n                                               56=         MNOTE 0,'* &VERSION                                 '\n ** ASMA254I *** MNOTE ***                       +     0,* V7R0M0\n                                               57=         MNOTE 0,'* &MSGPREF                                 '\n ** ASMA254I *** MNOTE ***                       +     0,* QSF\n                                               58=         MNOTE 0,'* &CVTYPE                                  '\n ** ASMA254I *** MNOTE ***                       +     0,* TCBUSER\n                                               59=         MNOTE 0,'* &PRODUCT                                 '\n ** ASMA254I *** MNOTE ***                       +     0,* PAPYRUS HOST\n                                               60=         MNOTE 0,'* MQS = &MQS                               '\n ** ASMA254I *** MNOTE ***                       +     0,* MQS = 1\n                                               61=         MNOTE 0,'* HTTP = &HTTP                             '\n ** ASMA254I *** MNOTE ***                       +     0,* HTTP = 1\n                                               62=         MNOTE 0,'* ARM = &ARM                               '\n ** ASMA254I *** MNOTE ***                       +     0,* ARM = 1\n                                               63=         MNOTE 0,'* SAPI = &SAPI                             '\n ** ASMA254I *** MNOTE ***                       +     0,* SAPI = 1\n                                               64=         MNOTE 0,'* EXCI = &EXCI                             '\n ** ASMA254I *** MNOTE ***                       +     0,* EXCI = 1\n                                               65=         MNOTE 0,'* DB2 = &DB2                               '\n ** ASMA254I *** MNOTE ***                       +     0,* DB2 = 0\n                                               66=         MNOTE 0,'* WLM = &WLM                               '\n ** ASMA254I *** MNOTE ***                       +     0,* WLM = 1\n                                               67=         MNOTE 0,'* WLMAE = &WLMAE                           '\n ** ASMA254I *** MNOTE ***                       +     0,* WLMAE = 1\n                                               68=         MNOTE 0,'* MS = &MS                                 '\n ** ASMA254I *** MNOTE ***                       +     0,* MS = 1\n ** ASMA254I *** MNOTE ***                     69      0,******************************************\n                                               70=.NO      ANOP\n                                               71 ASMIF    $$ASMIF TYPE=PROGRAM\n1          asmif asm interfcae module                                                                           Page    5\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                              73+         PUSH PRINT                                                     01-$$ASMIF\n                                               74+         PRINT OFF                                                      01-$$ASMIF\n                                              372+         PRINT OFF                                                      01-$$ASMIF\n                                              373+         PRINT NOGEN                                                    01-$$ASMIF\n                                             3591+         POP  PRINT                                                     01-$$ASMIF\n                                             3592+* 16/11/06 RMODE warning from binder\n 00000000                00000000 00001FC4   3593+ASMIF    CSECT                                                          01-$$ASMIF\n                                             3594+ASMIF    AMODE 31                                                       01-$$ASMIF\n                                             3595+ASMIF    RMODE ANY                                                      01-$$ASMIF\n                                             3596+* 16/11/06 RMODE warning from binder\n                                             3597+***********************************************************************\n                                             3598+*                                                                     *\n                                             3599+* asmif                                                               *\n                                             3600+*                                                                     *\n                                             3601+* function:                                                           *\n                                             3602+*  asm     interfcae routines                                         *\n                                             3603+*  called from the c++ mvsif module                                   *\n                                             3604+* processing:                                                         *\n                                             3605+*  the function code defines the  functions to execute                *\n                                             3606+*                                                                     *\n                                             3607+*                                                                     *\n                                             3608+* register assignment :                                               *\n                                             3609+*                                                                     *\n                                             3610+*                                                                     *\n                                             3611+*                                                                     *\n                                             3612+* the routine is getting the control in problem state,  user key      *\n                                             3613+*                                                                     *\n                                             3614+* the module is reentrant                                             *\n                                             3615+*                                                                     *\n                                             3616+* amode(31) , rmode(any)                                              *\n                                             3617+*                                                                     *\n                                             3618+***********************************************************************\n0                        00000A00            3620+MAX_ECBS  EQU   128*20             max ecb                              01-$$ASMIF\n                         00000FF0            3621+MAX_ASM_BUFFER  EQU 4080           page - prefix size                   01-$$ASMIF\n                         00000400            3622+MAX_ASM_SOCKETS EQU 1024           max sockets                          01-$$ASMIF\n                         00000400            3623+MAX_ASM_MUTEX   EQU 1024           max mutex                            01-$$ASMIF\n                         0000001C            3624+VRL_LEN         EQU   28           VRL len                              01-$$ASMIF\n                                             3625+*        iarvrl   ,                VRL map\n                                             3627+*                                                                    */\n                                             3628+* %PLXVRL0:;\n                                             3629+* /*******************************************************************/\n                                             3630+* /*                                                                 */\n                                             3631+* /*            VRL  -  IARVSERV Virtual Range List Entry            */\n                                             3632+* /*                                03/28/94                         */\n                                             3633+* /*                                                                 */\n                                             3634+* /*******************************************************************/\n                                             3635+* %GOTO PLXVRL1; /*\n 00000000                00000000 0000001C   3636+VRL      DSECT ,             Maps the IARVSERV range list (VRL) entry   02-IARVRL\n 00000000                                    3637+VRLSVSA  DS    A             Starting virtual storage address of the    02-IARVRL\n                                             3638+*                            source data to be made shared.  This\n                                             3639+*                            field is ignored for the UNSHARE request.\n                                             3640+*\n 00000004                                    3641+VRLSSTKN DS    0XL8          STOKEN of the space in which the source    02-IARVRL\n                                             3642+*                            data resides.  If ALET is used rather\n1          asmif asm interfcae module                                                                           Page    6\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            3643+*                            than STOKEN, then the first 4 bytes must\n                                             3644+*                            be zero.  This field is ignored for the\n                                             3645+*                            UNSHARE request.\n                                             3646+*                            Note: an STOKEN may be specified for data\n                                             3647+*                            space storage only.\n                                             3648+*\n 00000004                                    3649+VRLSSTK1 DS    XL4           First word of source STOKEN.  When this    02-IARVRL\n                                             3650+*                            word is zero, VRLSALET contains an ALET\n                                             3651+*\n 00000008                                    3652+VRLSALET DS    F             ALET which corresponds to the space in     02-IARVRL\n                                             3653+*                            which the source data resides.  This\n                                             3654+*                            field is ignored for the UNSHARE request.\n                                             3655+*\n 0000000C                                    3656+VRLNUMPG DS    A             Number of pages in the SOURCE and/or       02-IARVRL\n                                             3657+*                            TARGET area.  This field is required for\n                                             3658+*                            both the SHARE and the UNSHARE requests.\n                                             3659+*\n 00000010                                    3660+VRLTVSA  DS    A             Starting virtual storage address of the    02-IARVRL\n                                             3661+*                            target data to be made shared or\n                                             3662+*                            unshared.  This field is required for\n                                             3663+*                            both the SHARE and the UNSHARE requests.\n                                             3664+*\n 00000014                                    3665+VRLTSTKN DS    0XL8          STOKEN of the space in which the target    02-IARVRL\n                                             3666+*                            data resides.  If ALET is used rather\n                                             3667+*                            than STOKEN, then the first 4 bytes must\n                                             3668+*                            be zero.  This field is required for both\n                                             3669+*                            the SHARE and the UNSHARE requests.\n                                             3670+*                            Note: an STOKEN may be specified for data\n                                             3671+*                            space storage only.\n                                             3672+*\n 00000014                                    3673+VRLTSTK1 DS    XL4           First word of target STOKEN.  When this    02-IARVRL\n                                             3674+*                            word is zero, VRLSALET contains an ALET\n                                             3675+*\n 00000018                                    3676+VRLTALET DS    F             ALET which corresponds to the space in     02-IARVRL\n                                             3677+*                            which the target data resides.  This\n                                             3678+*                            field is required for both the SHARE and\n                                             3679+*                            the UNSHARE requests.\n                                             3680+*\n 0000001C                                    3681+VRLEND   DS    0F            End of IARVSERV range list (VRL) entry     02-IARVRL\n                                             3682+*                            mapping\n                                             3683+*\n                         0000001C            3684+VRLLEN   EQU   VRLEND-VRL    Length of a VRL                            02-IARVRL\n 00000000                00000000 000000B8   3685+FRRAREA  DSECT                                                          01-$$ASMIF\n 00000000 0000000000000000                   3686+FRRSAVE  DC    18A(0)                                                   01-$$ASMIF\n 00000048                                    3689+FRRSDUMPX_L DS 0F                           SDUMP PARAMETER LIST        02-SDUMPX\n 00000048 02                                 3690+         DC    AL1(2)                       FLAG BYTE                   02-SDUMPX\n 00000049 A1                                 3691+         DC    AL1(161)                     FLAG BYTE                   02-SDUMPX\n 0000004A 00                                 3692+         DC    AL1(0)                       FLAG BYTE                   02-SDUMPX\n 0000004B 00                                 3693+         DC    AL1(0)                       FLAG BYTE                   02-SDUMPX\n 0000004C 00000000                           3694+         DC    A(0)                         ADDRESS OF DCB              02-SDUMPX\n 00000050 00000000                           3695+         DC    A(0)                         ADDRESS OF STORAGE LIST     02-SDUMPX\n 00000054 00000000                           3696+         DC    A(0)                         ADDRESS OF USER DATA        02-SDUMPX\n 00000058 00000000                           3697+         DC    A(0)                         ADDRESS OF ECB/SRB     @L4C 02-SDUMPX\n 0000005C 0000                               3698+         DC    AL2(0)                       CURRENT ASID                02-SDUMPX\n 0000005E 0000                               3699+         DC    AL2(0)                       OTHER ASID                  02-SDUMPX\n1          asmif asm interfcae module                                                                           Page    7\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000060 00000000                           3700+         DC    A(0)                         ADDRESS OF ASID LIST        02-SDUMPX\n 00000064 00000000                           3701+         DC    A(0)           ADDRESS OF SUMLIST/SUMLSTA LIST  @G383P1U 02-SDUMPX\n 00000068 00000000                           3702+         DC    A(0)                      RESERVED              @G33VPHD 02-SDUMPX\n 0000006C 00000000                           3703+         DC    A(0)                      RESERVED              @G33VPHD 02-SDUMPX\n 00000070 00                                 3704+         DC    AL1(0)                    FLAG BYTE             @G383P1U 02-SDUMPX\n 00000071 C0                                 3705+         DC    AL1(192)                  CONTROL FLAG BYTE     @G860P31 02-SDUMPX\n 00000072 00                                 3706+         DC    AL1(0)                    TYPE FLAG BYTE        @G383P1U 02-SDUMPX\n 00000073 01                                 3707+         DC    AL1(1)                    VERSION                   @T1P 02-SDUMPX\n 00000074 00                                 3708+         DC    AL1(0)                    EXIT FLAG BYTE        @G383P1U 02-SDUMPX\n 00000075 00                                 3709+         DC    AL1(0)                    EXIT FLAG BYTE            @LEC 02-SDUMPX\n 00000076 00                                 3710+         DC    AL1(0)                    SDATA OPTIONS             @T1P 02-SDUMPX\n 00000077 00                                 3711+         DC    AL1(0)                    RESERVED SDATA OPTIONS    @T1P 02-SDUMPX\n 00000078 00000000                           3712+         DC    A(0)                      ADDRESS OF SUBPLST    @G860P31 02-SDUMPX\n 0000007C 00000000                           3713+         DC    A(0)                      ADDRESS OF KEYLIST    @G860P31 02-SDUMPX\n 00000080 00000000                           3714+         DC    A(0)                      RESERVED                  @T1P 02-SDUMPX\n 00000084 00000000                           3715+         DC    A(0)                      ALET OF DCB PARAMETER     @L3A 02-SDUMPX\n 00000088 00000000                           3716+         DC    A(0)                      ALET OF STORAGE PARAM     @L3A 02-SDUMPX\n 0000008C 00000000                           3717+         DC    A(0)                      ALET OF HDR PARAMETER     @L3A 02-SDUMPX\n 00000090 00000000                           3718+         DC    A(0)                      ALET OF ASIDLST PARAM     @L3A 02-SDUMPX\n 00000094 00000000                           3719+         DC    A(0)                      ALET OF SUMLIST PARAM     @L3A 02-SDUMPX\n 00000098 00000000                           3720+         DC    A(0)                      ALET OF SUBPLST PARAM     @L3A 02-SDUMPX\n 0000009C 00000000                           3721+         DC    A(0)                      ALET OF KEYLIST PARAM     @L3A 02-SDUMPX\n 000000A0 00000000                           3722+         DC    A(0)                      No LIST64/LISTD           @LFC 02-SDUMPX\n 000000A4 00000000                           3723+         DC    A(0)                      No ALET for LISTD/LIST64  @LFC 02-SDUMPX\n 000000A8 00000000                           3724+         DC    A(0)                      No SUMLSTL or SUMLIST64   @LFC 02-SDUMPX\n 000000AC 00000000                           3725+         DC    A(0)                      ALET SUMLSTL or SUMLIST64 @L5A 02-SDUMPX\n 000000B0 0000000000000000                   3726+         DC    2A(0)                     RESERVED                  @T1P 02-SDUMPX\n                         000000B8            3727+FRRAREA_L   EQU *-FRRAREA                                               01-$$ASMIF\n000000000                00000000 00000978   3729+ASMDSECT DSECT                                                          01-$$ASMIF\n 00000000 0000000000000000                   3730+ASM_SAVE DC    18A(0)              save in asm                          01-$$ASMIF\n 00000048 00000000                           3731+ASM_MVS      DC A(0)               mvs object pointer                   01-$$ASMIF\n 0000004C 0000000000000000                   3732+ASM_BASEREGS DC 4A(0)              base regs                            01-$$ASMIF\n 0000005C 00000000                           3733+ASM_CRAB     DC A(0)               crab pointer                         01-$$ASMIF\n 00000060 00000000                           3734+ASM_RC       DC F'0'               function return                      01-$$ASMIF\n 00000064 00000000                           3735+ASM_REASON   DC F'0'               function reason code                 01-$$ASMIF\n 00000068 00000000                           3736+ASM_IEANTCR  DC A(0)               ieantcr address                      01-$$ASMIF\n 0000006C 00000000                           3737+ASM_IEANTRT  DC A(0)               ieantrt address                      01-$$ASMIF\n 00000070 00000000                           3738+ASM_IEANTDL  DC A(0)               ieantdl address                      01-$$ASMIF\n 00000074 0000000000000000                   3739+ASM_TIMX     DC  16A(0)            timer exit area                      01-$$ASMIF\n 000000B4 00000000                           3740+ASM_TIMER_ECBP  DC A(0)            timer ecb pointer                    01-$$ASMIF\n 000000B8 00000000                           3741+ASM_EVENT0_ECBP DC A(0)            event0 ecb                           01-$$ASMIF\n 000000BC 00000000                           3742+ASM_EVENT1_ECBP DC A(0)            event1 ecb                           01-$$ASMIF\n 000000C0 00000000                           3743+ASM_EVENT2_ECBP DC A(0)            event2 ecb                           01-$$ASMIF\n 000000C4 00000000                           3744+ASM_EVENT3_ECBP DC A(0)            event3 ecb                           01-$$ASMIF\n 000000C8 00000000                           3745+ASM_TIMER_ECB  DC A(0)             timer ecb                            01-$$ASMIF\n 000000CC 00                                 3746+ASM_FUNCTION_CODE DC AL1(0)        function code                        01-$$ASMIF\n 000000CD 00                                 3747+ASM_KEY      DC AL1(0)             psw key save                         01-$$ASMIF\n                                             3748+* 19/11/08 SRB callback\n 000000CE 00                                 3749+ASM_SRB_MODE DC AL1(0)             srb mode flag                        01-$$ASMIF\n 000000CF 00                                     +\n 000000D0 0000000000000000                   3750+ASM_SRB_SAVE DC 16A(0)             srb register save area               01-$$ASMIF\n 00000110 00000000                           3751+ASM_SRB_RETURN DC F'0'             srb return address                   01-$$ASMIF\n                                             3752+* 19/11/08 SRB callback\n 00000114                                    3753+             DC 0F'0'              align it                             01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page    8\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000114 0000000000000000                   3754+ASM_PARMS    DC 8A(0)              parameters                           01-$$ASMIF\n-\n 00000134 0000000000000000                   3756+ASM_CALLLIST DC 8A(0)              call parameters                      01-$$ASMIF\n 00000154 4040404040404040                   3757+ASM_WORK     DC CL128' '           work area                            01-$$ASMIF\n 000001D4 4040404040404040                   3758+ASM_JOBNAME  DC CL8' '             jobname                              01-$$ASMIF\n 000001DC 4040404040404040                   3759+ASM_PROGRAMNAME DC CL8' '          actual programname                   01-$$ASMIF\n 000001E4 00000000                           3760+ASM_WORKECBS DC A(0)               start of work ecb pool               01-$$ASMIF\n 000001E8 00000000                           3761+ASM_WORKECBP DC A(0)               work ecb pointer                     01-$$ASMIF\n 000001EC 00000000                           3762+ASM_WORKECBE DC A(0)               work ecb end address                 01-$$ASMIF\n                                             3763+*ms_iarvservl iarvserv mf=(l,asm_iarv)  iarvserv list form\n                                             3765+*                  MACDATE -12/04/00-<0>\n                                             3766+              PUSH  PRINT                                               02-IARVSERV\n                                             3767+                  PRINT ON                                              02-IARVSERV\n                         000001F0            3768+ASM_IARVSERVL EQU ASM_IARV        ++ IARVSERV NAME                      02-IARVSERV\n 000001F0                                    3769+ASM_IARV DS    0D                 ++ IARVSERV PARM LIST                 02-IARVSERV\n 000001F0                                    3770+ASM_IARV_XVERSION DS XL1          ++ INPUT XVERSION                     02-IARVSERV\n 000001F1                                    3771+ASM_IARV_XSERVICE DS XL1          ++  XSERVICE                          02-IARVSERV\n                         00000001            3772+ASM_IARV_SHARE EQU 1              ++ XSERVICE.SHARE KEYWORD             02-IARVSERV\n                         00000002            3773+ASM_IARV_UNSHARE EQU 2            ++ XSERVICE.UNSHARE KEYWORD           02-IARVSERV\n                         00000003            3774+ASM_IARV_CHANGEACCESS EQU 3       ++ XSERVICE.CHANGEACCESS KEYWORD      02-IARVSERV\n                         00000004            3775+ASM_IARV_SHARESEG EQU 4           ++ XSERVICE.SHARESEG KEYWORD          02-IARVSERV\n 000001F2                                    3776+ASM_IARV_XFLAGS1 DS BL.8          ++ FIELD_LABEL                        02-IARVSERV\n                         00000080            3777+ASM_IARV_TARGET_VIEW_RO EQU B'10000000'                                X02-IARVSERV\n                                                 +                                  ++ XTARGET_VIEW.READONLY KEYWORD\n                         00000040            3778+ASM_IARV_TARGET_VIEW_SW EQU B'01000000'                                X02-IARVSERV\n                                                 +                                  ++ XTARGET_VIEW.SHAREDWRITE KEYWORD\n                         00000020            3779+ASM_IARV_TARGET_VIEW_UW EQU B'00100000'                                X02-IARVSERV\n                                                 +                                  ++ XTARGET_VIEW.UNIQUEWRITE KEYWORD\n                         00000010            3780+ASM_IARV_TARGET_VIEW_TW EQU B'00010000'                                X02-IARVSERV\n                                                 +                                  ++ XTARGET_VIEW.TARGETWRITE KEYWORD\n                         00000008            3781+ASM_IARV_TARGET_VIEW_LS EQU B'00001000'                                X02-IARVSERV\n                                                 +                                  ++ XTARGET_VIEW.LIKESOURCE KEYWORD\n                         00000004            3782+ASM_IARV_TARGET_VIEW_NA EQU B'00000100'                                X02-IARVSERV\n                                                 +                                  ++ XTARGET_VIEW.HIDDEN KEYWORD\n                         00000002            3783+ASM_IARV_COPYNOW EQU B'00000010'  ++ KEYUSED.COPYNOW KEYWORD            02-IARVSERV\n                         00000001            3784+ASM_IARV_RETAIN_YES EQU B'00000001'                                    X02-IARVSERV\n                                                 +                                  ++ XRETAIN.YES KEYWORD\n 000001F3                                    3785+ASM_IARV_XFLAGS2 DS BL.8          ++ FIELD_LABEL                        02-IARVSERV\n                         00000080            3786+ASM_IARV_XPARTIALPAGE_YES EQU B'10000000'                              X02-IARVSERV\n                                                 +                                  ++ XPARTIALPAGE.YES KEYWORD\n 000001F4                                    3787+ASM_IARV_XNUMRANGE DS F           ++   XNUMRANGE                        02-IARVSERV\n 000001F8                                    3788+ASM_IARV_XRANGLIST DS A           ++   XRANGLIST                        02-IARVSERV\n                         0000000C            3789+ASM_IARVL EQU  *-ASM_IARV         ++ LENGTH OF PLIST                    02-IARVSERV\n0                                            3791+         POP   PRINT                                                    02-IARVSERV\n                                             3792+*                                            IARVSERV-0\n0                                            3794+*ms_aleservl  aleserv  mf=l             aleserv  list form\n                                             3796+*              MACDATE = 06/13/1996                                @D1A\n 000001FC                                    3797+ASM_ALESERVL DS 0F                  .ALESERV PC PARAMETER LIST          02-ALESERV\n 000001FC 00                                 3798+         DC    XL1'00'              .SERVICE TYPE CODE                  02-ALESERV\n 000001FD 00                                 3799+         DC    XL1'00'              .OPTIONS FLAG BYTE                  02-ALESERV\n 000001FE 0000                               3800+         DC    AL2(0)               .RESERVED                           02-ALESERV\n1          asmif asm interfcae module                                                                           Page    9\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000200 00000000                           3801+         DC    A(0)                 .ALET                               02-ALESERV\n 00000204 0000000000000000                   3802+         DC    XL8'0'               .STOKEN (SPACE TOKEN)               02-ALESERV\n                                             3803+*ms_enql     enq (0,0,e,0,step),mf=l   list enq\n                                             3806+*         MACRO-DATE = 06/24/03                                    @05C\n 0000020C                                    3807+         DS    0F                      ESTABLISH A FULLWORD BOUNDARY    02-ENQ\n                         0000020C            3808+ASM_ENQL EQU   *                                                 X02113 02-ENQ\n 0000020C C0                                 3809+         DC    AL1(192)                PELLAST flag byte.        X02113 02-ENQ\n 0000020D 00                                 3810+         DC    AL1(0)                  PELMILEN - RNAME length.         02-ENQ\n 0000020E 00                                 3811+         DC    BL1'00000000'                                            02-ENQ\n                                             3812+*                                      PELFLAG - flag byte 2.\n 0000020F 00                                 3813+         DC    AL1(0)                  PELRET - return code byte.       02-ENQ\n 00000210 00000000                           3814+         DC    A(0)                    QNAME ADDRESS                    02-ENQ\n 00000214 00000000                           3815+         DC    A(0)                    RNAME ADDRESS                    02-ENQ\n 00000218 0000000000000000                   3816+ASM_OPTION   DC 4A(0)              option fields                        01-$$ASMIF\n 00000228 0000000000000000                   3817+ASM_SLEEP    DC D'0'               double word for timer                01-$$ASMIF\n 00000230 0000000000000000                   3818+ASM_IARVRL   DC (VRL_LEN)X'00'     iarvrl area                          01-$$ASMIF\n 0000024C 00000000                           3819+ASM_IARVRLA  DC A(0)               iarvrl area address                  01-$$ASMIF\n                                             3820+*ms_extract_l extract mf=l         extract list form\n 00000250                                    3822+         DS    0F                                                       02-EXTRACT\n 00000250 00000000                           3823+ASM_EXTRACT_L DC A(0)                            LIST ADDRESS           02-EXTRACT\n 00000254 00000000                           3824+         DC    A(0)                              TCB ADDRESS            02-EXTRACT\n 00000258 00000000                           3825+         DC A(0)                                                        02-EXTRACT\n                                             3826+*ms_post_l    post ascb=0,ecbkey=yes,mf=l list form\n                                             3828+*        MACDATE  03/11/11                                         @L4C\n 0000025C 00000000                           3830+ASM_POST_L DC  A(0)                   . 1ST WORD - ECB ADDRESS          02-POST\n 00000260 00000000                           3831+         DC    A(0)                   . 2ND WORD - ASCB ADDRESS         02-POST\n 00000264 00000000                           3832+         DC    A(0)                   . 3RD WORD - ERRET ADDRESS        02-POST\n 00000268 00000000                           3833+         DC    A(0)                   . 4TH WORD - BYTE0,ECBKEY@ZA15373 02-POST\n 0000026C 00000000                           3834+ASM_COMPTR   DC A(0)               comm area pointer                    01-$$ASMIF\n 00000270 00000000                           3835+ASM_COMTOKEN DC A(0)               comm token                           01-$$ASMIF\n 00000274 00000000                           3836+ASM_COMECBPT DC A(0)               stop/modify ecb pointer              01-$$ASMIF\n 00000278                                    3839+ASM_WTOL DS    0F                                                       02-WTO\n 00000278 0072                               3840+         DC    AL2(114)                 TEXT LENGTH            @YA17152 02-WTO\n 0000027A 8010                               3841+         DC    B'1000000000010000'      MCSFLAGS                        02-WTO\n 0000027C F0F1F2F3F4F5F6F7                   3842+         DC    C'012345678901234567890123456789012345678901234567890123X02-WTO\n 00000284 F8F9F0F1F2F3F4F5                       +               45678901234567890123456789012345678901234567890123456789X\n 0000028C F6F7F8F9F0F1F2F3                       +               '                        MESSAGE TEXT               @L6C\n 000002EA 01                                 3843+         DC    AL1(1)                   VERSION LEVEL              @PJC 02-WTO\n 000002EB 00                                 3844+         DC    B'00000000'              MISCELLANEOUS FLAGS        @L2A 02-WTO\n 000002EC 00                                 3845+         DC    AL1(0)                   REPLY LENGTH               @L2A 02-WTO\n 000002ED 00                                 3846+         DC    AL1(0)                   RESERVED                   @PJA 02-WTO\n 000002EE 0000                               3847+         DC    B'0000000000000000'      EXTENDED MCS FLAGS         @L2A 02-WTO\n 000002F0 0000                               3848+         DC    AL2(0)                   RESERVED                   @L2A 02-WTO\n 000002F2 00000000                           3849+         DC    AL4(0)                   REPLY BUFFER ADDRESS       @P7C 02-WTO\n 000002F6 00000000                           3850+         DC    AL4(0)                   REPLY ECB ADDRESS          @P7C 02-WTO\n 000002FA 00000000                           3851+         DC    AL4(0)                   CONNECT ID                 @01C 02-WTO\n 000002FE 0400                               3852+         DC    B'0000010000000000'      DESCRIPTOR CODES           @L2A 02-WTO\n 00000300 0000                               3853+         DC    AL2(0)                   RESERVED                   @L2A 02-WTO\n 00000302 0000080000000000                   3854+         DC    XL16'00000800000000000000000000000000'                  X02-WTO\n 0000030A 0000000000000000                       +                                        EXTENDED ROUTING CODES     @L2A\n 00000312 0000                               3855+         DC    B'0000000000000000'      MESSAGE TYPE               @L2A 02-WTO\n 00000314 0000                               3856+         DC    AL2(0)                   MESSAGE'S PRIORITY         @L2A 02-WTO\n 00000316 4040404040404040                   3857+         DC    CL8'        '            JOB ID                     @L2A 02-WTO\n 0000031E 4040404040404040                   3858+         DC    CL8'        '            JOB NAME                   @L2A 02-WTO\n 00000326 4040404040404040                   3859+         DC    CL8'        '            RETRIEVAL KEY              @L2A 02-WTO\n1          asmif asm interfcae module                                                                           Page   10\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000032E 00000000                           3860+         DC    AL4(0)                   TOKEN FOR DOM              @P1C 02-WTO\n 00000332 00000000                           3861+         DC    AL4(0)                   CONSOLE ID                 @P1C 02-WTO\n 00000336 4040404040404040                   3862+         DC    CL8'        '            SYSTEM NAME                @L2A 02-WTO\n 0000033E 00000000                           3863+         DC    AL4(0)                   RESERVED                   @PJA 02-WTO\n 00000342 00000000                           3864+         DC    AL4(0)                   RESERVED                   @PJA 02-WTO\n                         0000006E            3865+ASM_WTOL_TEXT_LENGTH EQU 110       text length                          01-$$ASMIF\n 00000346 0000                                   +\n 00000348 0000000000000000                   3866+ASM_BPX1    DC  32A(0)             BPX1 parm list                       01-$$ASMIF\n 000003C8 00000000                           3867+ASM_BPX1_RETVAL  DC F'0'           return value                         01-$$ASMIF\n 000003CC 00000000                           3868+ASM_BPX1_RETCODE DC F'0'           return code                          01-$$ASMIF\n 000003D0 00000000                           3869+ASM_BPX1_RSNCODE DC F'0'           reason code                          01-$$ASMIF\n 000003D4 00000000                           3870+ASM_BPX1_LIST_LENGTH_R DC A(0)     list length read                     01-$$ASMIF\n 000003D8 00000000                           3871+ASM_BPX1_LIST_LENGTH_W DC A(0)     list length write                    01-$$ASMIF\n 000003DC 00000000                           3872+ASM_BPX1_LIST_LENGTH_E DC A(0)     list length exception                01-$$ASMIF\n 000003E0 00000000                           3873+ASM_BPX1_NUMFDS      DC A(0)       number of FD's                       01-$$ASMIF\n 000003E4 00000000                           3874+ASM_BPX1_TIMEOUT     DC A(0)       timeout pointer                      01-$$ASMIF\n 000003E8 00000000                           3875+ASM_BPX1_OPTION      DC A(0)       option value                         01-$$ASMIF\n 000003EC 00000000                               +\n 000003F0 0000000000000000                   3876+ASM_STCK    DC D'0'                stck area                            01-$$ASMIF\n                                             3877+*           ieatdump mf=(l,asm_ieatdump)\n                                             3879+*                  MACDATE -03/03/06-<1>\n                                             3880+              PUSH  PRINT                                               02-IEATDUMP\n                                             3881+                  PRINT ON                                              02-IEATDUMP\n                         000003F8            3882+M00M0018 EQU   ASM_IEATDUMP       ++ IEATDUMP NAME                      02-IEATDUMP\n 000003F8                                    3883+ASM_IEATDUMP DS 0D                ++ IEATDUMP PARM LIST                 02-IEATDUMP\n 000003F8                                    3884+ASM_IEATDUMP_XPLISTNAME DS CL4    ++ CONSTANT  XPLISTNAME               02-IEATDUMP\n 000003FC                                    3885+ASM_IEATDUMP_XWORD1 DS CL4        ++ FIELD_LABEL  XWORD1                02-IEATDUMP\n 00000400                                    3886+ASM_IEATDUMP_XSDATA1 DS BL.8      ++ FIELD_LABEL                        02-IEATDUMP\n                         00000080            3887+ASM_IEATDUMP_XSDATA_DEFS EQU B'10000000'                               X02-IEATDUMP\n                                                 +                                  ++ XSDATA.DEFS KEYWORD\n                         00000040            3888+ASM_IEATDUMP_XSDATA_ALLNUC EQU B'01000000'                             X02-IEATDUMP\n                                                 +                                  ++ XSDATA.ALLNUC KEYWORD\n                         00000020            3889+ASM_IEATDUMP_XSDATA_CSA EQU B'00100000'                                X02-IEATDUMP\n                                                 +                                  ++ XSDATA.CSA KEYWORD\n                         00000010            3890+ASM_IEATDUMP_XSDATA_GRSQ EQU B'00010000'                               X02-IEATDUMP\n                                                 +                                  ++ XSDATA.GRSQ KEYWORD\n                         00000008            3891+ASM_IEATDUMP_XSDATA_LPA EQU B'00001000'                                X02-IEATDUMP\n                                                 +                                  ++ XSDATA.LPA KEYWORD\n                         00000004            3892+ASM_IEATDUMP_XSDATA_LSQA EQU B'00000100'                               X02-IEATDUMP\n                                                 +                                  ++ XSDATA.LSQA KEYWORD\n                         00000002            3893+ASM_IEATDUMP_XSDATA_NUC EQU B'00000010'                                X02-IEATDUMP\n                                                 +                                  ++ XSDATA.NUC KEYWORD\n                         00000001            3894+ASM_IEATDUMP_XSDATA_RGN EQU B'00000001'                                X02-IEATDUMP\n                                                 +                                  ++ XSDATA.RGN KEYWORD\n 00000401                                    3895+ASM_IEATDUMP_XSDATA2 DS BL.8      ++ FIELD_LABEL                        02-IEATDUMP\n                         00000080            3896+ASM_IEATDUMP_XSDATA_SQA EQU B'10000000'                                X02-IEATDUMP\n                                                 +                                  ++ XSDATA.SQA KEYWORD\n                         00000040            3897+ASM_IEATDUMP_XSDATA_SUM EQU B'01000000'                                X02-IEATDUMP\n                                                 +                                  ++ XSDATA.SUM KEYWORD\n                         00000020            3898+ASM_IEATDUMP_XSDATA_SWA EQU B'00100000'                                X02-IEATDUMP\n                                                 +                                  ++ XSDATA.SWA KEYWORD\n                         00000010            3899+ASM_IEATDUMP_XSDATA_TRT EQU B'00010000'                                X02-IEATDUMP\n                                                 +                                  ++ XSDATA.TRT KEYWORD\n                         00000008            3900+ASM_IEATDUMP_XSDATA_PSA EQU B'00001000'                                X02-IEATDUMP\n                                                 +                                  ++ XSDATA.PSA KEYWORD\n1          asmif asm interfcae module                                                                           Page   11\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000402                                    3901+ASM_IEATDUMP_XFLAGS1 DS BL.8      ++ FIELD_LABEL                        02-IEATDUMP\n                         00000040            3902+ASM_IEATDUMP_KEYUSED_DDNAME EQU B'01000000'                            X02-IEATDUMP\n                                                 +                                  ++ KEYUSED.DDNAME KEYWORD\n 00000403                                    3903+ASM_IEATDUMP_XRSV0002 DS CL1      ++ RESERVED  XRSV0002                 02-IEATDUMP\n 00000404                                    3904+ASM_IEATDUMP_XDSP_STOKEN DS CL8   ++   XDSP_STOKEN                      02-IEATDUMP\n 0000040C                                    3905+ASM_IEATDUMP_XDSP_ORIGIN DS A     ++   XDSP_ORIGIN                      02-IEATDUMP\n 00000410                                    3906+ASM_IEATDUMP_XDSP_RECORDS@ DS A   ++   XDSP_RECORDS@                    02-IEATDUMP\n 00000414                                    3907+ASM_IEATDUMP_XDDNAME DS CL8       ++   XDDNAME                          02-IEATDUMP\n 0000041C                                    3908+ASM_IEATDUMP_XDSNAD DS A          ++   XDSNAD                           02-IEATDUMP\n 00000420                                    3909+ASM_IEATDUMP_XDSN_ALET DS F       ++  ALET XDSN                         02-IEATDUMP\n 00000424                                    3910+ASM_IEATDUMP_XHDRAD DS A          ++   XHDRAD                           02-IEATDUMP\n 00000428                                    3911+ASM_IEATDUMP_XHDR_ALET DS F       ++  ALET XHDR                         02-IEATDUMP\n 0000042C                                    3912+ASM_IEATDUMP_XIDXAD DS A          ++   XIDXAD                           02-IEATDUMP\n 00000430                                    3913+ASM_IEATDUMP_XIDX_ALET DS F       ++  ALET XIDX                         02-IEATDUMP\n 00000434                                    3914+ASM_IEATDUMP_XSYMRECAD DS A       ++   XSYMRECAD                        02-IEATDUMP\n 00000438                                    3915+ASM_IEATDUMP_XSYMREC_ALET DS F    ++  ALET XSYMREC                      02-IEATDUMP\n 0000043C                                    3916+ASM_IEATDUMP_XINTOKENAD DS A      ++   XINTOKENAD                       02-IEATDUMP\n 00000440                                    3917+ASM_IEATDUMP_XINTOKEN_ALET DS F   ++  ALET XINTOKEN                     02-IEATDUMP\n 00000444                                    3918+ASM_IEATDUMP_XREMOTEAD DS A       ++   XREMOTEAD                        02-IEATDUMP\n 00000448                                    3919+ASM_IEATDUMP_XREMOTE_ALET DS F    ++  ALET XREMOTE                      02-IEATDUMP\n 0000044C                                    3920+ASM_IEATDUMP_XPROBDESCAD DS A     ++   XPROBDESCAD                      02-IEATDUMP\n 00000450                                    3921+ASM_IEATDUMP_XPROBDESC_ALET DS F  ++  ALET XPROBDESC                    02-IEATDUMP\n 00000454                                    3922+ASM_IEATDUMP_XLISTAD DS A         ++   XLISTAD                          02-IEATDUMP\n 00000458                                    3923+ASM_IEATDUMP_XLIST_ALET DS F      ++  ALET XLIST                        02-IEATDUMP\n 0000045C                                    3924+ASM_IEATDUMP_XSUBPLSTAD DS A      ++   XSUBPLSTAD                       02-IEATDUMP\n 00000460                                    3925+ASM_IEATDUMP_XSUBPLST_ALET DS F   ++  ALET XSUBPLST                     02-IEATDUMP\n 00000464                                    3926+ASM_IEATDUMP_XDSPLISTAD DS A      ++   XDSPLISTAD                       02-IEATDUMP\n 00000468                                    3927+ASM_IEATDUMP_XDSPLIST_ALET DS F   ++  ALET XDSPLIST                     02-IEATDUMP\n 0000046C                                    3928+ASM_IEATDUMP_XECBAD DS A          ++   XECBAD                           02-IEATDUMP\n 00000470                                    3929+ASM_IEATDUMP_XECB_ALET DS F       ++  ALET XECB                         02-IEATDUMP\n                         00000474            3930+ASM_IEATDUMP_PL_END EQU *         ++ END OF BASE PLIST                  02-IEATDUMP\n 00000474                00000474 000003FC   3931+         ORG   ASM_IEATDUMP+4                                           02-IEATDUMP\n 000003FC                                    3932+ASM_IEATDUMP_XPLISTLEN DS XL2     ++ INPUT  XPLISTLEN                   02-IEATDUMP\n 000003FE                                    3933+ASM_IEATDUMP_XVERSION DS XL1      ++ INPUT XVERSION                     02-IEATDUMP\n 000003FF                                    3934+ASM_IEATDUMP_XRSV0001 DS CL01     ++ RESERVED  XRSV0001                 02-IEATDUMP\n 00000400                00000400 0000041C   3935+         ORG   ASM_IEATDUMP+36                                          02-IEATDUMP\n 0000041C                                    3936+ASM_IEATDUMP_XDSN_ADDR DS A       ++  ADDR XDSN                         02-IEATDUMP\n 00000420                00000420 00000424   3937+         ORG   ASM_IEATDUMP+44                                          02-IEATDUMP\n 00000424                                    3938+ASM_IEATDUMP_XHDR_ADDR DS A       ++  ADDR XHDR                         02-IEATDUMP\n 00000428                00000428 0000042C   3939+         ORG   ASM_IEATDUMP+52                                          02-IEATDUMP\n 0000042C                                    3940+ASM_IEATDUMP_XIDX_ADDR DS A       ++  ADDR XIDX                         02-IEATDUMP\n 00000430                00000430 00000434   3941+         ORG   ASM_IEATDUMP+60                                          02-IEATDUMP\n 00000434                                    3942+ASM_IEATDUMP_XSYMREC_ADDR DS A    ++  ADDR XSYMREC                      02-IEATDUMP\n 00000438                00000438 0000043C   3943+         ORG   ASM_IEATDUMP+68                                          02-IEATDUMP\n 0000043C                                    3944+ASM_IEATDUMP_XINTOKEN_ADDR DS A   ++  ADDR XINTOKEN                     02-IEATDUMP\n 00000440                00000440 00000444   3945+         ORG   ASM_IEATDUMP+76                                          02-IEATDUMP\n 00000444                                    3946+ASM_IEATDUMP_XREMOTE_ADDR DS A    ++  ADDR XREMOTE                      02-IEATDUMP\n 00000448                00000448 0000044C   3947+         ORG   ASM_IEATDUMP+84                                          02-IEATDUMP\n 0000044C                                    3948+ASM_IEATDUMP_XPROBDESC_ADDR DS A  ++  ADDR XPROBDESC                    02-IEATDUMP\n 00000450                00000450 00000454   3949+         ORG   ASM_IEATDUMP+92                                          02-IEATDUMP\n 00000454                                    3950+ASM_IEATDUMP_XLIST_ADDR DS A      ++  ADDR XLIST                        02-IEATDUMP\n 00000458                00000458 0000045C   3951+         ORG   ASM_IEATDUMP+100                                         02-IEATDUMP\n 0000045C                                    3952+ASM_IEATDUMP_XSUBPLST_ADDR DS A   ++  ADDR XSUBPLST                     02-IEATDUMP\n 00000460                00000460 00000464   3953+         ORG   ASM_IEATDUMP+108                                         02-IEATDUMP\n 00000464                                    3954+ASM_IEATDUMP_XDSPLIST_ADDR DS A   ++  ADDR XDSPLIST                     02-IEATDUMP\n1          asmif asm interfcae module                                                                           Page   12\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000468                00000468 0000046C   3955+         ORG   ASM_IEATDUMP+116                                         02-IEATDUMP\n 0000046C                                    3956+ASM_IEATDUMP_XECB_ADDR DS A       ++  ADDR XECB                         02-IEATDUMP\n 00000470                00000470 00000474   3957+         ORG   ASM_IEATDUMP_PL_END RESET LOCATION COUNTER               02-IEATDUMP\n                         0000007C            3958+ASM_IEATDUMPL EQU *-ASM_IEATDUMP  ++ LENGTH OF PLIST                    02-IEATDUMP\n0                                            3960+         POP   PRINT                                                    02-IEATDUMP\n                                             3961+*                                            IEATDUMP-1\n000000474 00                                 3963+ASM_TDUMP_NAME DC    AL1(0)        name length                          01-$$ASMIF\n 00000475 4040404040404040                   3964+               DC    CL100' '      name                                 01-$$ASMIF\n 000004D9 00                                 3965+ASM_TDUMP_DESC DC    AL1(0)        desc length                          01-$$ASMIF\n 000004DA 4040404040404040                   3966+               DC    CL100' '      desc                                 01-$$ASMIF\n                                             3967+* 18/11/05 LOGGER support\n 0000053E 4040404040404040                   3968+ASM_STREAMNAME       DC CL26' '    stream name                          01-$$ASMIF\n 00000558 0000000000000000                   3969+ASM_STREAMTOKEN      DC XL16'00'   stream token                         01-$$ASMIF\n 00000568 00000000                           3970+ASM_LOGGER_LENGTH    DC A(0)                                            01-$$ASMIF\n 0000056C 00000000                           3971+ASM_LOGGER_BUFFER    DC A(0)      logger buffer pointer                 01-$$ASMIF\n 00000570 00000000                           3972+ASM_LOGGER_BUFFLEN   DC A(0)      buffer length                         01-$$ASMIF\n 00000574 00000000                           3973+ASM_LOGGER_BUFFER_OFFSET DC A(0)  actual buffer offset                  01-$$ASMIF\n 00000578 00000000                           3974+ASM_LOGGER_BROWSE_TOKEN  DC  A(0) browse token                          01-$$ASMIF\n 0000057C 00000000                           3975+ASM_LOGGER_DIRECTION     DC  A(0) browse direction 2-3                  01-$$ASMIF\n                                             3976+*       ixgconn  mf=(l,asm_ixgconn)\n                                             3978+*                   MACDATE -09/11/24-<2>\n                                             3979+              PUSH  PRINT                                               02-IXGCONN\n                                             3980+                   PRINT ON                                             02-IXGCONN\n                         00000580            3981+M00M0019 EQU   ASM_IXGCONN        ++ IXGCONN NAME                       02-IXGCONN\n 00000580                                    3982+ASM_IXGCONN DS 0D                 ++ IXGCONN PARM LIST                  02-IXGCONN\n 00000580                                    3983+ASM_IXGCONN_XPLISTPTR DS A        ++ INPUT                              02-IXGCONN\n 00000584                                    3984+ASM_IXGCONN_XVERSION DS XL1       ++ INPUT XVERSION                     02-IXGCONN\n 00000585                                    3985+ASM_IXGCONN_XIXGFLAGS DS BL.8     ++ FIELD_LABEL                        02-IXGCONN\n                         00000080            3986+ASM_IXGCONN_XREQUEST_CONNECT EQU B'10000000'                           X02-IXGCONN\n                                                 +                                  ++ XREQUEST.CONNECT KEYWORD\n                         00000040            3987+ASM_IXGCONN_XAUTH_READ EQU B'01000000'                                 X02-IXGCONN\n                                                 +                                  ++ XAUTH.READ KEYWORD\n                         00000020            3988+ASM_IXGCONN_XAUTH_WRITE EQU B'00100000'                                X02-IXGCONN\n                                                 +                                  ++ XAUTH.WRITE KEYWORD\n                         00000010            3989+ASM_IXGCONN_XIMPORTCONNECT_YES EQU B'00010000'                         X02-IXGCONN\n                                                 +                                  ++ XIMPORTCONNECT.YES KEYWORD\n                         00000008            3990+ASM_IXGCONN_XRMEVENTS_LBWRITE EQU B'00001000'                          X02-IXGCONN\n                                                 +                                  ++ XRMEVENTS.LBWRITE KEYWORD\n                         00000004            3991+ASM_IXGCONN_XRMEVENTS_LBDELETE EQU B'00000100'                         X02-IXGCONN\n                                                 +                                  ++ XRMEVENTS.LBDELETE KEYWORD\n 00000586                                    3992+ASM_IXGCONN_XKEYUSEDFLAGS DS BL.8 ++ FIELD_LABEL                        02-IXGCONN\n                         00000080            3993+ASM_IXGCONN_KEYUSED_USERDATA EQU B'10000000'                           X02-IXGCONN\n                                                 +                                  ++ KEYUSED.USERDATA KEYWORD\n                         00000040            3994+ASM_IXGCONN_KEYUSED_AVGBUFSIZE EQU B'01000000'                         X02-IXGCONN\n                                                 +                                  ++ KEYUSED.AVGBUFSIZE KEYWORD\n                         00000020            3995+ASM_IXGCONN_KEYUSED_MAXBUFSIZE EQU B'00100000'                         X02-IXGCONN\n                                                 +                                  ++ KEYUSED.MAXBUFSIZE KEYWORD\n                         00000010            3996+ASM_IXGCONN_KEYUSED_ELEMENTSIZE EQU B'00010000'                        X02-IXGCONN\n                                                 +                                  ++ KEYUSED.ELEMENTSIZE KEYWORD\n                         00000008            3997+ASM_IXGCONN_KEYUSED_STRUCTNAME EQU B'00001000'                         X02-IXGCONN\n                                                 +                                  ++ KEYUSED.STRUCTNAME KEYWORD\n                         00000004            3998+ASM_IXGCONN_KEYUSED_COMPLETEEXIT EQU B'00000100'                       X02-IXGCONN\n                                                 +                                  ++ KEYUSED.COMPLETEEXIT KEYWORD\n1          asmif asm interfcae module                                                                           Page   13\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000002            3999+ASM_IXGCONN_KEYUSED_RMNAME EQU B'00000010'                             X02-IXGCONN\n                                                 +                                  ++ KEYUSED.RMNAME KEYWORD\n                         00000001            4000+ASM_IXGCONN_KEYUSED_LSVERSION EQU B'00000001'                          X02-IXGCONN\n                                                 +                                  ++ KEYUSED.LSVERSION KEYWORD\n 00000587                                    4001+ASM_IXGCONN_XFORMATLVL DS XL1     ++ CONSTANT                           02-IXGCONN\n 00000588                                    4002+ASM_IXGCONN_XANSAREA DS A         ++                                    02-IXGCONN\n 0000058C                                    4003+ASM_IXGCONN_XCOMPLETEEXIT DS A    ++                                    02-IXGCONN\n 00000590                                    4004+ASM_IXGCONN_XRMNAME DS CL8        ++                                    02-IXGCONN\n 00000598                                    4005+ASM_IXGCONN_XRMEXIT DS A          ++                                    02-IXGCONN\n 0000059C                                    4006+ASM_IXGCONN_XRMDATA DS CL8        ++                                    02-IXGCONN\n 000005A4                                    4007+ASM_IXGCONN_XLSVERSION DS BL.64   ++                                    02-IXGCONN\n 000005AC                                    4008+ASM_IXGCONN_XIXGFLAGS2 DS BL.8    ++ FIELD_LABEL                        02-IXGCONN\n                         00000080            4009+ASM_IXGCONN_KEYUSED_DIAG EQU B'10000000'                               X02-IXGCONN\n                                                 +                                  ++ KEYUSED.DIAG KEYWORD\n                         00000040            4010+ASM_IXGCONN_XDIAG_NO_DIAG EQU B'01000000'                              X02-IXGCONN\n                                                 +                                  ++ XDIAG.NO_DIAG KEYWORD\n                         00000020            4011+ASM_IXGCONN_XDIAG_YES EQU B'00100000'                                  X02-IXGCONN\n                                                 +                                  ++ XDIAG.YES KEYWORD\n 000005AD                                    4012+ASM_IXGCONN_XRSV0002 DS CL3       ++ RESERVED                           02-IXGCONN\n 000005B0                                    4013+ASM_IXGCONN_XANSLEN DS F          ++                                    02-IXGCONN\n 000005B4                                    4014+ASM_IXGCONN_XSTRUCTNAME DS CL16   ++                                    02-IXGCONN\n 000005C4                                    4015+ASM_IXGCONN_XAVGBUFSIZE DS F      ++                                    02-IXGCONN\n 000005C8                                    4016+ASM_IXGCONN_XMAXBUFSIZE DS F      ++                                    02-IXGCONN\n 000005CC                                    4017+ASM_IXGCONN_XELEMENTSIZE DS F     ++                                    02-IXGCONN\n 000005D0                                    4018+ASM_IXGCONN_XUSERDATA DS CL64     ++                                    02-IXGCONN\n 00000610                                    4019+ASM_IXGCONN_XSTREAMNAME DS CL26   ++                                    02-IXGCONN\n 0000062A                                    4020+ASM_IXGCONN_XSTREAMTOKEN DS CL16  ++                                    02-IXGCONN\n                         000000BA            4021+ASM_IXGCONNL EQU *-ASM_IXGCONN    ++ LENGTH OF PLIST                    02-IXGCONN\n0                                            4023+         POP   PRINT                                                    02-IXGCONN\n                                             4024+*                                            IXGCONN-2\n0                                            4026+*       ixgwrite mf=(l,asm_ixgwrite)\n                                             4028+*                     MACDATE -09/11/24-<2>\n                                             4029+              PUSH  PRINT                                               02-IXGWRITE\n                                             4030+                     PRINT ON                                           02-IXGWRITE\n                         00000640            4031+M00M0020 EQU   ASM_IXGWRITE       ++ IXGWRITE NAME                      02-IXGWRITE\n 00000640                                    4032+ASM_IXGWRITE DS 0D                ++ IXGWRITE PARM LIST                 02-IXGWRITE\n 00000640                                    4033+ASM_IXGWRITE_XVERSION DS XL1      ++ INPUT XVERSION                     02-IXGWRITE\n 00000641                                    4034+ASM_IXGWRITE_XIXGFLAGS DS BL.8    ++ FIELD_LABEL                        02-IXGWRITE\n                         00000080            4035+ASM_IXGWRITE_XMODE_SYNC EQU B'10000000'                                X02-IXGWRITE\n                                                 +                                  ++ XMODE.SYNC KEYWORD\n                         00000040            4036+ASM_IXGWRITE_KEYUSED_BUFFKEY EQU B'01000000'                           X02-IXGWRITE\n                                                 +                                  ++ KEYUSED.BUFFKEY KEYWORD\n                         00000020            4037+ASM_IXGWRITE_KEYUSED_TIMESTAMP EQU B'00100000'                         X02-IXGWRITE\n                                                 +                                  ++ KEYUSED.TIMESTAMP KEYWORD\n                         00000010            4038+ASM_IXGWRITE_XMODE_SYNCEXIT EQU B'00010000'                            X02-IXGWRITE\n                                                 +                                  ++ XMODE.SYNCEXIT KEYWORD\n                         00000008            4039+ASM_IXGWRITE_XMODE_ASYNCNORESPONSE EQU B'00001000'                     X02-IXGWRITE\n                                                 +                                  ++ XMODE.ASYNCNORESPONSE KEYWORD\n                         00000004            4040+ASM_IXGWRITE_KEYUSED_RETBLOCKID EQU B'00000100'                        X02-IXGWRITE\n                                                 +                                  ++ KEYUSED.RETBLOCKID KEYWORD\n                         00000002            4041+ASM_IXGWRITE_MACUSED_IXGIMPRT EQU B'00000010'                          X02-IXGWRITE\n                                                 +                                  ++ MACUSED.IXGIMPRT KEYWORD\n1          asmif asm interfcae module                                                                           Page   14\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000001            4042+ASM_IXGWRITE_KEYUSED_BUFFER64 EQU B'00000001'                          X02-IXGWRITE\n                                                 +                                  ++ KEYUSED.BUFFER64 KEYWORD\n 00000642                                    4043+ASM_IXGWRITE_XRSV0001 DS CL2      ++ RESERVED                           02-IXGWRITE\n 00000644                                    4044+ASM_IXGWRITE_XPLISTPTR DS A       ++ INPUT                              02-IXGWRITE\n 00000648                                    4045+ASM_IXGWRITE_XRSNCODE DS F        ++                                    02-IXGWRITE\n 0000064C                                    4046+ASM_IXGWRITE_XBUFFER_ADDR DS A    ++  ADDR                              02-IXGWRITE\n 00000650                                    4047+ASM_IXGWRITE_XBLOCKLEN DS F       ++                                    02-IXGWRITE\n 00000654                                    4048+ASM_IXGWRITE_XBUFFALET DS F       ++                                    02-IXGWRITE\n 00000658                                    4049+ASM_IXGWRITE_XBUFFKEY DS F        ++                                    02-IXGWRITE\n 0000065C                                    4050+ASM_IXGWRITE_XECB_ADDR DS A       ++  ADDR                              02-IXGWRITE\n 00000660                                    4051+ASM_IXGWRITE_XANSAREA DS A        ++                                    02-IXGWRITE\n 00000664                                    4052+ASM_IXGWRITE_XANSLEN DS F         ++                                    02-IXGWRITE\n 00000668                                    4053+ASM_IXGWRITE_XRETBLOCKID_ADDR DS A                                     X02-IXGWRITE\n                                                 +                                  ++  ADDR\n 0000066C                                    4054+ASM_IXGWRITE_XTIMESTAMP_ADDR DS A ++  ADDR                              02-IXGWRITE\n 00000670                                    4055+ASM_IXGWRITE_XSTREAMTOKEN DS CL16 ++                                    02-IXGWRITE\n                         00000680            4056+ASM_IXGWRITE_PL_END EQU *         ++ END OF BASE PLIST                  02-IXGWRITE\n                         00000040            4057+ASM_IXGWRITEL EQU *-ASM_IXGWRITE  ++ LENGTH OF PLIST                    02-IXGWRITE\n0                                            4059+         POP   PRINT                                                    02-IXGWRITE\n                                             4060+*                                            IXGWRITE-2\n0                                            4062+*       ixgbrwse mf=(l,asm_ixgbrwse)\n                                             4064+*                     MACDATE -10/02/17-<3>\n                                             4065+              PUSH  PRINT                                               02-IXGBRWSE\n                                             4066+                     PRINT ON                                           02-IXGBRWSE\n                         00000680            4067+M00M0021 EQU   ASM_IXGBRWSE       ++ IXGBRWSE NAME                      02-IXGBRWSE\n 00000680                                    4068+ASM_IXGBRWSE DS 0D                ++ IXGBRWSE PARM LIST                 02-IXGBRWSE\n 00000680                                    4069+ASM_IXGBRWSE_XVERSION DS XL1      ++ INPUT XVERSION                     02-IXGBRWSE\n 00000681                                    4070+ASM_IXGBRWSE_XREQUEST DS XL1      ++  XREQUEST                          02-IXGBRWSE\n                         00000001            4071+ASM_IXGBRWSE_XREQUEST_START EQU 1 ++ XREQUEST.START KEYWORD             02-IXGBRWSE\n                         00000002            4072+ASM_IXGBRWSE_XREQUEST_READCURSOR EQU 2                                 X02-IXGBRWSE\n                                                 +                                  ++ XREQUEST.READCURSOR KEYWORD\n                         00000003            4073+ASM_IXGBRWSE_XREQUEST_READBLOCK EQU 3                                  X02-IXGBRWSE\n                                                 +                                  ++ XREQUEST.READBLOCK KEYWORD\n                         00000004            4074+ASM_IXGBRWSE_XREQUEST_RESET EQU 4 ++ XREQUEST.RESET KEYWORD             02-IXGBRWSE\n                         00000005            4075+ASM_IXGBRWSE_XREQUEST_END EQU 5   ++ XREQUEST.END KEYWORD               02-IXGBRWSE\n 00000682                                    4076+ASM_IXGBRWSE_XIXGFLAGS DS BL.16   ++ FIELD_LABEL                        02-IXGBRWSE\n                         00008000            4077+ASM_IXGBRWSE_XDIRECTION_YOUNGTOOLD EQU B'1000000000000000'             X02-IXGBRWSE\n                                                 +                                   ++ XDIRECTION.YOUNGTOOLD KEYWORD\n                         00004000            4078+ASM_IXGBRWSE_XMODE_SYNC EQU B'0100000000000000'                        X02-IXGBRWSE\n                                                 +                                   ++ XMODE.SYNC KEYWORD\n                         00002000            4079+ASM_IXGBRWSE_XGMT_YES EQU B'0010000000000000'                          X02-IXGBRWSE\n                                                 +                                   ++ XGMT.YES KEYWORD\n                         00001000            4080+ASM_IXGBRWSE_KEYUSED_STARTBLOCKID EQU B'0001000000000000'              X02-IXGBRWSE\n                                                 +                                   ++ KEYUSED.STARTBLOCKID KEYWORD\n                         00000800            4081+ASM_IXGBRWSE_KEYUSED_OLDEST EQU B'0000100000000000'                    X02-IXGBRWSE\n                                                 +                                   ++ KEYUSED.OLDEST KEYWORD\n                         00000400            4082+ASM_IXGBRWSE_KEYUSED_YOUNGEST EQU B'0000010000000000'                  X02-IXGBRWSE\n                                                 +                                   ++ KEYUSED.YOUNGEST KEYWORD\n                         00000200            4083+ASM_IXGBRWSE_KEYUSED_SEARCH EQU B'0000001000000000'                    X02-IXGBRWSE\n                                                 +                                   ++ KEYUSED.SEARCH KEYWORD\n                         00000100            4084+ASM_IXGBRWSE_KEYUSED_BUFFKEY EQU B'0000000100000000'                   X02-IXGBRWSE\n                                                 +                                   ++ KEYUSED.BUFFKEY KEYWORD\n1          asmif asm interfcae module                                                                           Page   15\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000080            4085+ASM_IXGBRWSE_XPOSITION_YOUNGEST EQU B'0000000010000000'                X02-IXGBRWSE\n                                                 +                                   ++ XPOSITION.YOUNGEST KEYWORD\n                         00000040            4086+ASM_IXGBRWSE_XMODE_SYNCEXIT EQU B'0000000001000000'                    X02-IXGBRWSE\n                                                 +                                   ++ XMODE.SYNCEXIT KEYWORD\n                         00000020            4087+ASM_IXGBRWSE_XVIEW_ACTIVE EQU B'0000000000100000'                      X02-IXGBRWSE\n                                                 +                                   ++ XVIEW.ACTIVE KEYWORD\n                         00000010            4088+ASM_IXGBRWSE_XVIEW_ALL EQU B'0000000000010000'                         X02-IXGBRWSE\n                                                 +                                   ++ XVIEW.ALL KEYWORD\n                         00000008            4089+ASM_IXGBRWSE_KEYUSED_VIEW EQU B'0000000000001000'                      X02-IXGBRWSE\n                                                 +                                   ++ KEYUSED.VIEW KEYWORD\n                         00000004            4090+ASM_IXGBRWSE_KEYUSED_MULTIBLOCK EQU B'0000000000000100'                X02-IXGBRWSE\n                                                 +                                   ++ KEYUSED.MULTIBLOCK KEYWORD\n                         00000002            4091+ASM_IXGBRWSE_XMULTIBLOCK_YES EQU B'0000000000000010'                   X02-IXGBRWSE\n                                                 +                                   ++ XMULTIBLOCK.YES KEYWORD\n                         00000001            4092+ASM_IXGBRWSE_KEYUSED_BUFFER64 EQU B'0000000000000001'                  X02-IXGBRWSE\n                                                 +                                   ++ KEYUSED.BUFFER64 KEYWORD\n 00000684                                    4093+ASM_IXGBRWSE_XPLISTPTR DS A       ++ INPUT                              02-IXGBRWSE\n 00000688                                    4094+ASM_IXGBRWSE_XBUFFER_ADDR DS A    ++  ADDR                              02-IXGBRWSE\n 0000068C                                    4095+ASM_IXGBRWSE_XBUFFKEY DS F        ++                                    02-IXGBRWSE\n 00000690                                    4096+ASM_IXGBRWSE_XBUFFLEN DS F        ++                                    02-IXGBRWSE\n 00000694                                    4097+ASM_IXGBRWSE_XBUFFALET DS F       ++                                    02-IXGBRWSE\n 00000698                                    4098+ASM_IXGBRWSE_XBLKSIZE_ADDR DS A   ++  ADDR                              02-IXGBRWSE\n 0000069C                                    4099+ASM_IXGBRWSE_XECB_ADDR DS A       ++  ADDR                              02-IXGBRWSE\n 000006A0                                    4100+ASM_IXGBRWSE_XANSAREA DS A        ++                                    02-IXGBRWSE\n 000006A4                                    4101+ASM_IXGBRWSE_XANSLEN DS F         ++                                    02-IXGBRWSE\n 000006A8                                    4102+ASM_IXGBRWSE_XSTREAMTOKEN DS CL16 ++                                    02-IXGBRWSE\n 000006B8                                    4103+ASM_IXGBRWSE_XBROWSETOKEN_ADDR DS A                                    X02-IXGBRWSE\n                                                 +                                  ++  ADDR\n 000006BC                                    4104+ASM_IXGBRWSE_XSEARCH DS BL.64     ++                                    02-IXGBRWSE\n 000006C4                                    4105+ASM_IXGBRWSE_XRETBLOCKID_ADDR DS A                                     X02-IXGBRWSE\n                                                 +                                  ++  ADDR\n 000006C8                                    4106+ASM_IXGBRWSE_XSTARTBLOCKID DS CL8 ++                                    02-IXGBRWSE\n 000006D0                                    4107+ASM_IXGBRWSE_XTIMESTAMP_ADDR DS A ++  ADDR                              02-IXGBRWSE\n 000006D4                                    4108+ASM_IXGBRWSE_XBLOCKID DS CL8      ++                                    02-IXGBRWSE\n                         000006DC            4109+ASM_IXGBRWSE_PL_END EQU *         ++ END OF BASE PLIST                  02-IXGBRWSE\n                         0000005C            4110+ASM_IXGBRWSEL EQU *-ASM_IXGBRWSE  ++ LENGTH OF PLIST                    02-IXGBRWSE\n0                                            4112+         POP   PRINT                                                    02-IXGBRWSE\n                                             4113+*                                            IXGBRWSE-3\n0                                            4115+* 16/07/10 LOGGER browse TIME search\n 000006DC 0000000000000000                   4116+ASM_LOGGER_CONVVAL DC 16X'00'                                           01-$$ASMIF\n 000006EC 0000000000000000                   4117+ASM_LOGGER_STCK    DC 16X'00'                                           01-$$ASMIF\n                                             4118+*sm_logger_convtod convtod mf=l\n                                             4120+*        MACDATE  05/30/98                                         @L1C\n 000006FC                                    4122+ASM_LOGGER_CONVTOD DS 0F                                                02-CONVTOD\n 000006FC                                    4123+         DS    XL32                                                     02-CONVTOD\n                                             4124+* 16/07/10 LOGGER browse TIME search\n                                             4125+* 19/11/08 SRB callback\n                                             4126+*       IEAMSCHD MF=(L,ASM_IEAMSCHD)\n                                             4128+*                   MACDATE -01/11/11-<2>\n                                             4129+              PUSH  PRINT                                               02-IEAMSCHD\n                                             4130+                   PRINT ON                                             02-IEAMSCHD\n                         00000720            4131+M00M0024 EQU   ASM_IEAMSCHD       ++ IEAMSCHD NAME                      02-IEAMSCHD\n 00000720                                    4132+ASM_IEAMSCHD DS 0D                ++ IEAMSCHD PARM LIST                 02-IEAMSCHD\n1          asmif asm interfcae module                                                                           Page   16\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000720                                    4133+ASM_IEAMSCHD_XVERSION DS XL1      ++ INPUT XVERSION                     02-IEAMSCHD\n 00000721                                    4134+ASM_IEAMSCHD_XFLAG1 DS BL.8       ++ FIELD_LABEL                        02-IEAMSCHD\n                         00000008            4135+ASM_IEAMSCHD_XENV_STOKEN EQU B'00001000'                               X02-IEAMSCHD\n                                                 +                                  ++ XENV.STOKEN KEYWORD\n                         00000004            4136+ASM_IEAMSCHD_XENV_FULLXM EQU B'00000100'                               X02-IEAMSCHD\n                                                 +                                  ++ XENV.FULLXM KEYWORD\n                         00000002            4137+ASM_IEAMSCHD_XENV_PRIMARY EQU B'00000010'                              X02-IEAMSCHD\n                                                 +                                  ++ XENV.PRIMARY KEYWORD\n                         00000001            4138+ASM_IEAMSCHD_XENV_HOME EQU B'00000001'                                 X02-IEAMSCHD\n                                                 +                                  ++ XENV.HOME KEYWORD\n 00000722                                    4139+ASM_IEAMSCHD_XFLAG2 DS BL.8       ++ FIELD_LABEL                        02-IEAMSCHD\n                         00000020            4140+ASM_IEAMSCHD_KEYUSED_DUALPOOLTOKEN EQU B'00100000'                     X02-IEAMSCHD\n                                                 +                                  ++ KEYUSED.DUALPOOLTOKEN KEYWORD\n                         00000010            4141+ASM_IEAMSCHD_XSYNCH_YES EQU B'00010000'                                X02-IEAMSCHD\n                                                 +                                  ++ XSYNCH.YES KEYWORD\n                         00000008            4142+ASM_IEAMSCHD_KEYUSED_KEYVALUE EQU B'00001000'                          X02-IEAMSCHD\n                                                 +                                  ++ KEYUSED.KEYVALUE KEYWORD\n                         00000004            4143+ASM_IEAMSCHD_XLLOCK_YES EQU B'00000100'                                X02-IEAMSCHD\n                                                 +                                  ++ XLLOCK.YES KEYWORD\n                         00000002            4144+ASM_IEAMSCHD_XFEATURE_CPMASK EQU B'00000010'                           X02-IEAMSCHD\n                                                 +                                  ++ XFEATURE.CPMASK KEYWORD\n                         00000001            4145+ASM_IEAMSCHD_XFEATURE_CRYPTO EQU B'00000001'                           X02-IEAMSCHD\n                                                 +                                  ++ XFEATURE.CRYPTO KEYWORD\n 00000723                                    4146+ASM_IEAMSCHD_XFLAG3 DS BL.8       ++ FIELD_LABEL                        02-IEAMSCHD\n                         00000020            4147+ASM_IEAMSCHD_XPRIORITY_CLIENT EQU B'00100000'                          X02-IEAMSCHD\n                                                 +                                  ++ XPRIORITY.CLIENT KEYWORD\n                         00000010            4148+ASM_IEAMSCHD_XPRIORITY_ENCLAVE EQU B'00010000'                         X02-IEAMSCHD\n                                                 +                                  ++ XPRIORITY.ENCLAVE KEYWORD\n                         00000008            4149+ASM_IEAMSCHD_XPRIORITY_PREEMPT EQU B'00001000'                         X02-IEAMSCHD\n                                                 +                                  ++ XPRIORITY.PREEMPT KEYWORD\n                         00000004            4150+ASM_IEAMSCHD_XPRIORITY_CURRENT EQU B'00000100'                         X02-IEAMSCHD\n                                                 +                                  ++ XPRIORITY.CURRENT KEYWORD\n                         00000002            4151+ASM_IEAMSCHD_XPRIORITY_GLOBAL EQU B'00000010'                          X02-IEAMSCHD\n                                                 +                                  ++ XPRIORITY.GLOBAL KEYWORD\n                         00000001            4152+ASM_IEAMSCHD_XPRIORITY_LOCAL EQU B'00000001'                           X02-IEAMSCHD\n                                                 +                                  ++ XPRIORITY.LOCAL KEYWORD\n 00000724                                    4153+ASM_IEAMSCHD_XEPADDR DS A         ++                                    02-IEAMSCHD\n 00000728                                    4154+ASM_IEAMSCHD_XTARGETSTOKEN DS BL.64                                    X02-IEAMSCHD\n                                                 +                                  ++\n 00000730                                    4155+ASM_IEAMSCHD_XENCLAVETOKEN DS CL8 ++                                    02-IEAMSCHD\n 00000738                                    4156+ASM_IEAMSCHD_XMINORPRIORITY DS BL.8                                    X02-IEAMSCHD\n                                                 +                                  ++\n 00000739                                    4157+ASM_IEAMSCHD_XKEYVALUE DS BL.8    ++                                    02-IEAMSCHD\n 0000073A                                    4158+ASM_IEAMSCHD_XCPUMASK DS BL.16    ++                                    02-IEAMSCHD\n 0000073C                                    4159+ASM_IEAMSCHD_XPARM DS F           ++                                    02-IEAMSCHD\n 00000740                                    4160+ASM_IEAMSCHD_XFRRADDR DS A        ++                                    02-IEAMSCHD\n 00000744                                    4161+ASM_IEAMSCHD_XRMTRADDR DS A       ++                                    02-IEAMSCHD\n 00000748                                    4162+ASM_IEAMSCHD_XPURGESTOKEN DS BL.64                                     X02-IEAMSCHD\n                                                 +                                  ++\n 00000750                                    4163+ASM_IEAMSCHD_XPTCBADDR DS A       ++                                    02-IEAMSCHD\n 00000754                                    4164+ASM_IEAMSCHD_XCLIENTSTOKEN DS BL.64                                    X02-IEAMSCHD\n                                                 +                                  ++\n                         0000075C            4165+ASM_IEAMSCHD_PL_END EQU *         ++ END OF BASE PLIST                  02-IEAMSCHD\n 0000075C                0000075C 00000740   4166+         ORG   ASM_IEAMSCHD+32                                          02-IEAMSCHD\n 00000740                                    4167+ASM_IEAMSCHD_XRSV0001 DS CL3      ++ RESERVED                           02-IEAMSCHD\n1          asmif asm interfcae module                                                                           Page   17\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000743                                    4168+ASM_IEAMSCHD_XFRRFLAG DS BL.8     ++ FIELD_LABEL                        02-IEAMSCHD\n                         00000001            4169+ASM_IEAMSCHD_XSDWALOC31_YES EQU B'00000001'                            X02-IEAMSCHD\n                                                 +                                  ++ XSDWALOC31.YES KEYWORD\n 00000744                00000744 0000075C   4170+         ORG   ASM_IEAMSCHD_PL_END RESET LOCATION COUNTER               02-IEAMSCHD\n                         0000003C            4171+ASM_IEAMSCHDL EQU *-ASM_IEAMSCHD  ++ LENGTH OF PLIST                    02-IEAMSCHD\n0                                            4173+         POP   PRINT                                                    02-IEAMSCHD\n                                             4174+*                                            IEAMSCHD-2\n00000075C 00000000                           4176+ASM_IEAMSCHD_COMP DC F'0'        IEAMSCHD comp                          01-$$ASMIF\n 00000760 00000000                           4177+ASM_IEAMSCHD_CODE DC F'0'        IEAMSCHD code                          01-$$ASMIF\n 00000764 00000000                           4178+ASM_IEAMSCHD_RSN  DC F'0'        IEAMSCHD reason                        01-$$ASMIF\n                                             4179+* 19/11/08 SRB callback\n 00000768 0000000000000000                   4180+ASM_ANSAREA DC          XL(ANSAA_LEN)'00'                               01-$$ASMIF\n                                             4181+* 18/11/05 LOGGER support\n                                             4182+* 21/11/05 VTOC access\n 00000790                                    4183+ASM_VTOC   DC   0D'0'              vtoc access                          01-$$ASMIF\n 00000790 00000000                           4184+ASM_VTOC_DCB    DC A(0)            DCB address below the line           01-$$ASMIF\n 00000794 4040404040404040                   4185+ASM_VTOC_DDNAME DC CL8' '          DDNAME                               01-$$ASMIF\n 0000079C 4040404040404040                   4186+ASM_VTOC_FILTER DC CL44' '         name filter                          01-$$ASMIF\n                                             4187+*SM_VTOC_OPENLIST OPEN (0,INPUT),MF=L list form for open\n 000007C8                                    4190+ASM_VTOC_OPENLIST DC 0F'0'              ALIGN LIST TO WORD              02-OPEN\n 000007C8 80                                 4191+         DC    AL1(128)                 Option byte                     02-OPEN\n 000007C9 000000                             4192+         DC    AL3(0)                   DCB or ACB address              02-OPEN\n 000007CC 0000000000000000                   4193+ASM_VTOC_FCL     DC       XL(FCLHDLEN+FCLDSNEL)'00'                     01-$$ASMIF\n 000007E4 0000000000000000                   4194+ASM_VTOC_BFL     DC       XL(BFLHLN+BFLELN)'00'                         01-$$ASMIF\n                                             4195+*SM_VTOC_CVAFFILT CVAFFILT MF=L,BRANCH=NO,FLTAREA=KEEP\n 000007F8                                    4197+         CNOP  0,4                                                      02-CVAFFILT\n                         000007F8            4198+ASM_VTOC_CVAFFILT EQU *                                                 02-CVAFFILT\n 000007F8 C3E5D7D3                           4199+         DC    CL4'CVPL'                EBCDIC 'CVPL'                   02-CVAFFILT\n 000007FC 0044                               4200+         DC    AL2(ICV27E-ASM_VTOC_CVAFFILT)                           X02-CVAFFILT\n                                                 +                                        LENGTH OF CVPL\n 000007FE 0E                                 4201+         DC    XL1'0E'                  FUNCTION CODE                   02-CVAFFILT\n 000007FF 00                                 4202+         DC    XL1'00'                  STATUS INFORMATION              02-CVAFFILT\n 00000800 00                                 4203+         DC    B'00000000'              FIRST FLAG BYTE                 02-CVAFFILT\n 00000801 00                                 4204+         DC    B'00000000'              SECOND FLAG BYTE                02-CVAFFILT\n 00000802 80                                 4205+         DC    B'10000000'              THIRD FLAG BYTE                 02-CVAFFILT\n 00000803 00                                 4206+         DC    B'00000000'              Fourth Flag Byte           @LVC 02-CVAFFILT\n 00000804 00000000                           4207+         DC    A(0)                     UCB ADDRESS                     02-CVAFFILT\n 00000808 00000000                           4208+         DC    A(0)                     FILTER CRITERIA LIST ADDRESS    02-CVAFFILT\n 0000080C 00000000                           4209+         DC    A(0)                     BUFFER LIST ADDRESS             02-CVAFFILT\n 00000810 00000000                           4210+         DC    A(0)                     INDEX VIR'S BUFFER LIST ADDRESS 02-CVAFFILT\n 00000814 00000000                           4211+         DC    A(0)                     MAP VIR'S BUFFER LIST ADDRESS   02-CVAFFILT\n 00000818 00000000                           4212+         DC    A(0)                     I/O AREA ADDRESS                02-CVAFFILT\n 0000081C 00000000                           4213+         DC    A(0)                     DEB ADDRESS                     02-CVAFFILT\n 00000820 00000000                           4214+         DC    A(0)                     ARGUMENT ADDRESS                02-CVAFFILT\n 00000824 00000000                           4215+         DC    A(0)                     SPACE PARAMETER LIST ADDRESS    02-CVAFFILT\n 00000828 00000000                           4216+         DC    A(0)                     EXTENT TABLE ADDRESS            02-CVAFFILT\n 0000082C 00000000                           4217+         DC    A(0)                     NEW VRF VIXM BUFFER LIST ADDR   02-CVAFFILT\n 00000830 00000000                           4218+         DC    A(0)                     VRF DATA ADDRESS                02-CVAFFILT\n 00000834 00000000                           4219+         DC    A(0)                     COUNT AREA ADDRESS              02-CVAFFILT\n 00000838 00000000                           4220+         DC    A(0)                     FILTER SAVE AREA ADDRESS        02-CVAFFILT\n                         0000083C            4221+ICV27E   EQU   *                        END OF CVPL                     02-CVAFFILT\n 0000083C 0000000000000000                   4222+ASM_VTOC_BUFFER  DC       XL(F1DSCB_SIZE)'00'                           01-$$ASMIF\n                                             4223+* 04/03/10 OBTAIN DSCB\n1          asmif asm interfcae module                                                                           Page   18\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000008C8 0000000000000000                   4224+ASM_CAMLST DC    4A(0)                                                  01-$$ASMIF\n                                             4225+* 04/03/10 OBTAIN DSCB\n                                             4226+* 21/11/05 VTOC access\n                                             4227+* 06/03/12 TESTAUTH DIAGNOSE extension\n 000008D8 00000000                           4228+ASM_TESTAUTH DC A(0)                                                    01-$$ASMIF\n 000008DC 00000000                           4229+ASM_DIAGNOSE_FLAG DC A(0)                                               01-$$ASMIF\n 000008E0 00000000                           4230+ASM_DIAGNOSE_ADDR DC A(0)                                               01-$$ASMIF\n                         00000FFF            4231+ASM_DIAGNOSE_LENGTH EQU 4095                                            01-$$ASMIF\n                         00000001            4232+ASM_DIAGNOSE_FIX    EQU 1                                               01-$$ASMIF\n                         00000002            4233+ASM_DIAGNOSE_DONTSWAP EQU 2                                             01-$$ASMIF\n                         00000004            4234+ASM_DIAGNOSE_KEEP   EQU   4                                             01-$$ASMIF\n                         00000007            4235+ASM_DIAGNOSE_ALL    EQU   7                                             01-$$ASMIF\n 000008E4 00000000                           4236+ASM_VSMLIST_ASCBADDR DC A(0)       address of the ascb                  01-$$ASMIF\n 000008E8 0000                               4237+ASM_VSMLIST_MYASCBID DC H'0'       my own ASCB id                       01-$$ASMIF\n 000008EA 0000                                   +\n 000008EC 00000000                           4238+ASM_VSMLIST_MYASCB DC F'0'         address of my ASCB                   01-$$ASMIF\n 000008F0 00000000                           4239+ASM_VSMLIST_MYTCB DC F'0'          my own TCB addr                      01-$$ASMIF\n 000008F4 00000000                           4240+ASM_VSMLIST_STORAGE DC A(0)        SRB work area address                01-$$ASMIF\n0                                            4242+*\n                                             4243+* eq symbols for the branch table\n                                             4244+*\n                                             4246+* 29/11/07 struct asm include\n0                        00000000            4248+SYM_CLEANUP   EQU 1-1         + symb equ                                02-$$\n                         00000001            4249+SYM_GETTOKEN  EQU 2-1         + symb equ                                02-$$\n                         00000002            4250+SYM_CREATETOKEN EQU 3-1       + symb equ                                02-$$\n                         00000003            4251+SYM_DELETETOKEN EQU 4-1       + symb equ                                02-$$\n                         00000004            4252+SYM_ALLOCATEPAGES EQU 5-1     + symb equ                                02-$$\n                         00000005            4253+SYM_FREEPAGES EQU 6-1         + symb equ                                02-$$\n                         00000006            4254+SYM_ENQ       EQU 7-1         + symb equ                                02-$$\n                         00000007            4255+SYM_DEQ       EQU 8-1         + symb equ                                02-$$\n                         00000008            4256+SYM_SLEEP     EQU 9-1         + symb equ                                02-$$\n                         00000009            4257+SYM_GETECB    EQU 10-1        + symb equ                                02-$$\n                         0000000A            4258+SYM_WAIT      EQU 11-1        + symb equ                                02-$$\n                         0000000B            4259+SYM_POST      EQU 12-1        + symb equ                                02-$$\n                         0000000C            4260+SYM_RESET     EQU 13-1        + symb equ                                02-$$\n                         0000000D            4261+SYM_SELECT    EQU 14-1        + symb equ                                02-$$\n                         0000000E            4262+SYM_CONNECTSHMEM EQU 15-1     + symb equ                                02-$$\n                         0000000F            4263+SYM_DISCONNECTSHMEM EQU 16-1  + symb equ                                02-$$\n                         00000010            4264+SYM_OPER      EQU 17-1        + symb equ                                02-$$\n                         00000011            4265+SYM_WTO       EQU 18-1        + symb equ                                02-$$\n                         00000012            4266+SYM_MALLOC    EQU 19-1        + symb equ                                02-$$\n                         00000013            4267+SYM_FREE      EQU 20-1        + symb equ                                02-$$\n                         00000014            4268+SYM_SVC       EQU 21-1        + symb equ                                02-$$\n                         00000015            4269+SYM_ATTACHMVS EQU 22-1        + symb equ                                02-$$\n                         00000016            4270+SYM_CLOCK     EQU 23-1        + symb equ                                02-$$\n                         00000017            4271+SYM_TIMEUSED  EQU 24-1        + symb equ                                02-$$\n                         00000018            4272+SYM_TDUMP     EQU 25-1        + symb equ                                02-$$\n                         00000019            4273+SYM_LOGGER    EQU 26-1        + symb equ                                02-$$\n                         0000001A            4274+SYM_VTOC      EQU 27-1        + symb equ                                02-$$\n                         0000001B            4275+SYM_SRB       EQU 28-1        + symb equ                                02-$$\n                         0000001C            4276+SYM_WLM       EQU 29-1        + symb equ                                02-$$\n                         0000001D            4277+SYM_OBTAIN    EQU 30-1        + symb equ                                02-$$\n                         0000001E            4278+SYM_TESTAUTH  EQU 31-1        + symb equ                                02-$$\n1          asmif asm interfcae module                                                                           Page   19\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        0000001F            4279+SYM_DIAGNOSE  EQU 32-1        + symb equ                                02-$$\n                         00000020            4280+SYM_VSMLIST   EQU 33-1        + symb equ                                02-$$\n 000008F8 0000000000000000                   4281+ASM_MUTEX_VECTOR  DC (MAX_ASM_MUTEX/32)A(0)                             01-$$ASMIF\n                         00000978            4282+ASM_LENGTH   EQU *-ASMDSECT        dsect length                         01-$$ASMIF\n                                             4283+*        cregs\n                         00000000            4285+R0       EQU   0                                                        02-CREGS\n                         00000001            4286+R1       EQU   1                                                        02-CREGS\n                         00000002            4287+R2       EQU   2                                                        02-CREGS\n                         00000003            4288+R3       EQU   3                                                        02-CREGS\n                         00000004            4289+R4       EQU   4                                                        02-CREGS\n                         00000005            4290+R5       EQU   5                                                        02-CREGS\n                         00000006            4291+R6       EQU   6                                                        02-CREGS\n                         00000007            4292+R7       EQU   7                                                        02-CREGS\n                         00000008            4293+R8       EQU   8                                                        02-CREGS\n                         00000009            4294+R9       EQU   9                                                        02-CREGS\n                         0000000A            4295+R10      EQU   10                                                       02-CREGS\n                         0000000B            4296+R11      EQU   11                                                       02-CREGS\n                         0000000C            4297+R12      EQU   12                                                       02-CREGS\n                         0000000D            4298+R13      EQU   13                                                       02-CREGS\n                         0000000D            4299+RDSA     EQU   R13                DSA POINTER                           02-CREGS\n                         0000000E            4300+R14      EQU   14                                                       02-CREGS\n                         0000000F            4301+R15      EQU   15                                                       02-CREGS\n                         00000000            4302+FR0      EQU   0                                                        02-CREGS\n                         00000002            4303+FR2      EQU   2                                                        02-CREGS\n                         00000004            4304+FR4      EQU   4                                                        02-CREGS\n                         00000006            4305+FR6      EQU   6                                                        02-CREGS\n                     R:0 00000000            4306+         USING PSA,R0              base on psa                          01-$$ASMIF\n-\n-                                            4308+* SRB work area in sp 245 address passed in parm\n000000000                00000000 00002080   4310+SRBWORK  DSECT                                                          01-$$ASMIF\n 00000000                                    4311+SRBWORK_SAVESYS DS 18F              secondary save in the SRB           01-$$ASMIF\n 00000048 00000000                           4312+SRBWORK_ECB DC A(0)     SRB complete srbwork_ecb                        01-$$ASMIF\n 00000050                                    4313+SRBWORK_STOKEN DS D                 stoken value                        01-$$ASMIF\n 00000058                                    4314+SRBWORK_ALET   DS A                 alet value                          01-$$ASMIF\n                                             4315+*rbworK_LALESERV ALESERV MF=L       list form\n                                             4317+*              MACDATE = 06/13/1996                                @D1A\n 0000005C                                    4318+SRBWORK_LALESERV DS 0F              .ALESERV PC PARAMETER LIST          02-ALESERV\n 0000005C 00                                 4319+         DC    XL1'00'              .SERVICE TYPE CODE                  02-ALESERV\n 0000005D 00                                 4320+         DC    XL1'00'              .OPTIONS FLAG BYTE                  02-ALESERV\n 0000005E 0000                               4321+         DC    AL2(0)               .RESERVED                           02-ALESERV\n 00000060 00000000                           4322+         DC    A(0)                 .ALET                               02-ALESERV\n 00000064 0000000000000000                   4323+         DC    XL8'0'               .STOKEN (SPACE TOKEN)               02-ALESERV\n 0000006C                                    4324+SRBWORK_RETCODE DS F                return code from aleserv            01-$$ASMIF\n 00000070                                    4325+SRBWORK_MYASCB DS F                 my own ASCB addr                    01-$$ASMIF\n 00000074 00000000                           4326+SRBWORK_REPLY_ADDRESS DC A(0)                                           01-$$ASMIF\n 00000078 00000000                           4327+SRBWORK_REPLY_LENGTH  DC A(0)                                           01-$$ASMIF\n 0000007C 00000000                               +\n 00000080                                    4328+                DC     0D'0'                                            01-$$ASMIF\n 00000080 0000000000000000                   4329+SRBWORK_VSMLIST_REPLY  DC 8192X'00'                                     01-$$ASMIF\n                         00002000            4330+SRBWORK_VSMLIST_REPLY_LENGTH EQU *-SRBWORK_VSMLIST_REPLY                01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   20\n   Active Usings: PSA,R0\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00002080            4331+SRBWORKL EQU   *-SRBWORK           length of the work area              01-$$ASMIF\n000000000                00000000 00000000   4333+DDDUMM       DSECT                                                      01-$$ASMIF\n000000000                00000000 00001000   4335+ASM_BUFFER   DSECT                 SOCKET dynamic dsect                 01-$$ASMIF\n 00000000 00000000                           4336+ASM_BUFFER_SOCKET    DC A(0)       socket number                        01-$$ASMIF\n 00000004 00000000                           4337+ASM_BUFFER_OFFSET    DC A(0)       offset in the buffer                 01-$$ASMIF\n 00000008 00000000                           4338+ASM_BUFFER_REMAINDER DC A(0)       remainder length                     01-$$ASMIF\n 0000000C 00000000                           4339+ASM_BUFFER_          DC A(0)       buffer received length               01-$$ASMIF\n 00000010 0000000000000000                   4340+ASM_BUFFER_BUFFER    DC (MAX_ASM_BUFFER)X'00'                           01-$$ASMIF\n                         00001000            4341+ASM_BUFFER_LENGTH    EQU *-ASM_BUFFER                                   01-$$ASMIF\n0                        00001000            4343+PAGE_SIZE    EQU 4096              page size                            01-$$ASMIF\n                                             4344+*        BPXYSEL  ,\n                                             4346+** BPXYSEL: Select Options\n                                             4347+**  Used By: SEL\n 00000000                00000000 00000004   4348+SEL                  DSECT ,                                            02-BPXYSEL\n 00000000                                    4349+SELBEGIN             DS    0F                                           02-BPXYSEL\n                                             4350+*\n 00000000                                    4351+SELBITS              DS    0XL4    Flag Bits.8F FF FF FF Reserved       02-BPXYSEL\n 00000000                                    4352+SELPOLLFLAGS         DS    XL2     Select flags / Poll (r)events @D3A   02-BPXYSEL\n                                             4353+*-----------------------------------------------------\n                                             4354+* Select flags\n                                             4355+*-----------------------------------------------------\n 00000002                00000002 00000000   4356+SELFLAGS             ORG   SELPOLLFLAGS                                 02-BPXYSEL\n 00000000                                    4357+                     DS    XL1                                   @D3A   02-BPXYSEL\n                                             4358+*                    EQU   X'80'   Never use this bit\n                         00000040            4359+SELREAD              EQU   X'40'   Descriptor ready for read.           02-BPXYSEL\n                         00000020            4360+SELWRITE             EQU   X'20'   Descriptor ready for write.          02-BPXYSEL\n                         00000010            4361+SELXCEPT             EQU   X'10'   Descriptor ready for exception.      02-BPXYSEL\n 00000001                                    4362+                     DS    XL1     Available byte                @D3A   02-BPXYSEL\n0                                            4364+*-----------------------------------------------------\n                                             4365+* Poll Events/Returned Events\n                                             4366+*-----------------------------------------------------\n 00000002                00000002 00000000   4367+SELPOLLEVENTS        ORG   SELPOLLFLAGS                                 02-BPXYSEL\n 00000000                                    4368+                     DS    XL2     Mapped by PollEvents(BPXYPOLL) @D3A  02-BPXYSEL\n 00000002                00000002 00000000   4369+SELPOLLREVENTS       ORG   SELPOLLFLAGS                                 02-BPXYSEL\n 00000000                                    4370+                     DS    XL2     Mapped by PollRevents(BPXYPOLL) @D3A 02-BPXYSEL\n                                             4371+*\n 00000002                                    4372+                     DS    XL1     Available byte                @D3A   02-BPXYSEL\n 00000003                                    4373+                     DS    XL1     Reserved for internal use     @D3A   02-BPXYSEL\n                                             4374+*\n                                             4375+*   Constants\n                                             4376+*\n                         00000004            4377+SEL#LENGTH           EQU   *-SEL   Length of SEL                        02-BPXYSEL\n                         00000001            4378+SEL#QUERY            EQU   1       Query function                       02-BPXYSEL\n                         00000002            4379+SEL#CANCEL           EQU   2       Cancel function                      02-BPXYSEL\n                         00000003            4380+SEL#BATSELQ          EQU   3       Batch-Select Query function          02-BPXYSEL\n                         00000004            4381+SEL#BATSELC          EQU   4       Batch-Select Cancel function         02-BPXYSEL\n                         00000005            4382+SEL#POLLQUERY        EQU   5       Poll Query function           @D3A   02-BPXYSEL\n                         00000006            4383+SEL#BATPOLLQ         EQU   6       Batch-Poll Query function     @D3A   02-BPXYSEL\n                         00000007            4384+SEL#BATPOLLC         EQU   7       Batch-Poll Cancel function    @D3A   02-BPXYSEL\n                         00000008            4385+SEL#POLLCANCEL       EQU   8       Poll Cancel function          @D3A   02-BPXYSEL\n                         00000000            4386+SEL#BITSBACKWARD     EQU   0       Bit Backward Order by word @P1A      02-BPXYSEL\n1          asmif asm interfcae module                                                                           Page   21\n   Active Usings: PSA,R0\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000001            4387+SEL#BITSFORWARD      EQU   1       Bit Forward Order by word  @P1A      02-BPXYSEL\n                         00000003            4388+SEL#TYPES            EQU   3       3 TYPES (Read Write Except) @D2A     02-BPXYSEL\n                         00000040            4389+SEL#RBIT             EQU   64      Read bit position in byte   @D2A     02-BPXYSEL\n                         00000020            4390+SEL#WBIT             EQU   32      Write bit position in byte  @D2A     02-BPXYSEL\n                         00000010            4391+SEL#XBIT             EQU   16      Xcept bit position in byte  @D2A     02-BPXYSEL\n                                             4392+** BPXYSEL End\n-\n                                             4394+***      USING CRAB,R12            base on crab\n                     R:7 00000000            4395+         USING ASMDSECT,R7         base on asm                          01-$$ASMIF\n                                             4396+* 19/11/08 SRB callback\n 00000000                00000000 00001FC4   4397+ASMIF    CSECT                                                          01-$$ASMIF\n 00000000 1801                               4398+         LR    R0,R1               save r1                              01-$$ASMIF\n 00000002 5810 1000               00000000   4399+         L     R1,0(,R1)           back asm base                        01-$$ASMIF\n 00000006 4110 1000               00000000   4400+         LA    R1,0(,R1)           off high order byte                  01-$$ASMIF\n 0000000A 1211                               4401+         LTR   R1,R1               test it                              01-$$ASMIF\n 0000000C A784 000F               0000002A   4402+         JZ    ASMIF_PROLOG        if not created yet                   01-$$ASMIF\n 00000010 9501 10CE      000000CE            4403+         CLI   ASM_SRB_MODE-ASM_SAVE(R1),1 SRB mode                     01-$$ASMIF\n 00000014 A774 000B               0000002A   4404+         JNE   ASMIF_PROLOG        if not created yet                   01-$$ASMIF\n 00000018 50E0 D00C               0000000C   4405+         ST    R14,12(,R13)        return address save                  01-$$ASMIF\n 0000001C 902C D01C               0000001C   4406+         STM   R2,R12,28(R13)      registers                            01-$$ASMIF\n 00000020 58E0 1110               00000110   4407+         L     R14,ASM_SRB_RETURN-ASM_SAVE(,R1)                         01-$$ASMIF\n 00000024 50D0 1004               00000004   4408+         ST    R13,4(,R1)          backchain LE DSA                     01-$$ASMIF\n 00000028 07FE                               4409+         BR    R14                                                      01-$$ASMIF\n 0000002A 1810                               4410+ASMIF_PROLOG LR R1,R0                                                   01-$$ASMIF\n 0000002C 90EC D00C               0000000C   4411+         STM   R14,12,12(R13)      save all in higher save              01-$$ASMIF\n 00000030 C0B0 0000 0DEC          00001C08   4412+         LARL  R11,DATAASMIF       base on data                         01-$$ASMIF\n                     R:B 00001C08            4413+         USING (DATAASMIF,DATAASMIFEND),R11 assign base                 01-$$ASMIF\n 00000036 5870 1000               00000000   4414+         L     R7,0(,R1)           back asm base                        01-$$ASMIF\n 0000003A 4170 7000               00000000   4415+         LA    R7,0(,R7)           off high order byte                  01-$$ASMIF\n 0000003E 1277                               4416+         LTR   R7,R7               test it                              01-$$ASMIF\n 00000040 A784 0014               00000068   4419+         BRC   8,ASMIF_INIT  (BC)                                       03-\n                                             4420+* 10/01/12 cleanup register\n 00000044 1B88                               4421+         SR    R8,R8                                                    01-$$ASMIF\n 00000046 4380 70CC               000000CC   4422+         IC    R8,ASM_FUNCTION_CODE                                     01-$$ASMIF\n 0000004A C0E5 0000 0088          0000015A   4423+         BRASL R14,ASMIF_PROCESS   call process                         01-$$ASMIF\n 00000050 1288                               4424+         LTR   R8,R8                                                    01-$$ASMIF\n 00000052 A774 0007               00000060   4427+         BRC   7,ASMIF_RETURN_NOCLEANUP  (BC)                           03-\n 00000056 58E0 D00C               0000000C   4428+         L     R14,12(,R13)                                             01-$$ASMIF\n 0000005A 982C D01C               0000001C   4429+         LM    R2,R12,28(R13)     back regs                             01-$$ASMIF\n 0000005E 051E                               4430+         BALR  R1,R14                                                   01-$$ASMIF\n 00000060                                    4431+ASMIF_RETURN_NOCLEANUP DS 0H                                            01-$$ASMIF\n                                             4432+* 10/01/12 cleanup register\n 00000060 18D7                               4433+         LR    R13,R7              save area adress                     01-$$ASMIF\n 00000062 A7F4 0075               0000014C   4436+         BRC   15,ASMIF_EXIT  (BC)                                      03-\n 00000068                                    4437+         LTORG                                                          01-$$ASMIF\n 00000068                                    4438+ASMIF_INIT DS 0H                                                        01-$$ASMIF\n                                             4439+*        storage obtain,length=asm_length,checkzero=yes\n 00000068 5800 B030               00001C38   4442+         L      0,=A(ASM_LENGTH)             .STORAGE LENGTH       @P9C 02-STORAGE\n 0000006C 58F0 B034               00001C3C   4443+         L      15,=AL1(B'00001000',(0*16),(0),B'00000010')            X02-STORAGE\n                                                 +                                             .CONTROL INFORMATION  @P9C\n 00000070 58E0 0010               00000010   4444+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 00000074 58EE 0304               00000304   4445+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 00000078 58EE 00A0               000000A0   4446+         L      14,160(14,0)                 .OBTAIN LX/EX FOR OBTAIN   02-STORAGE\n1          asmif asm interfcae module                                                                           Page   22\n   Active Usings: PSA,R0  ASMDSECT,R7  DATAASMIF(X'FFF'),R11\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000007C B218 E000      00000000            4447+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 00000080 1871                               4448+         LR    R7,R1               set addr                             01-$$ASMIF\n 00000082 1801                               4449+         LR    R0,R1               same in 0                            01-$$ASMIF\n 00000084 A7FE 0014               00000014   4450+         CHI   R15,X'14'           already cleared                      01-$$ASMIF\n 00000088 A784 0005               00000092   4451+         JE    ASMIF_CLEARED       jump if cleared                      01-$$ASMIF\n 0000008C 5810 B030               00001C38   4452+         L     R1,=A(ASM_LENGTH)   length here                          01-$$ASMIF\n 00000090 0E0E                               4453+         MVCL  R0,R14              clear storage                        01-$$ASMIF\n 00000092                                    4454+ASMIF_CLEARED DS 0H                                                     01-$$ASMIF\n 00000092 5070 D008               00000008   4455+         ST    R7,8(,R13)          chain new save                       01-$$ASMIF\n 00000096 50C0 705C               0000005C   4456+         ST    R12,ASM_CRAB        save crab                            01-$$ASMIF\n 0000009A 50D0 7004               00000004   4457+         ST    R13,4(,R7)          save higher save area                01-$$ASMIF\n 0000009E 41D0 7000               00000000   4458+         LA    R13,ASM_SAVE        get temp save                        01-$$ASMIF\n                                             4459+         DROP  R7                  drop asm base                        01-$$ASMIF\n                     R:D 00000000            4460+         USING ASM_SAVE,R13        base on asm area                     01-$$ASMIF\n 000000A2 D217 D074 B3A4 00000074 00001FAC   4461+         MVC   ASM_TIMX(MDL_TIMXL),MDL_TIMX copy timer exit             01-$$ASMIF\n 000000A8 D20B D20C B108 0000020C 00001D10   4462+         MVC   ASM_ENQL(MDL_ENQLL),MDL_ENQL copy enq list               01-$$ASMIF\n 000000AE 0700                               4465+         CNOP  0,4                                                 @L2P 02-LOAD\n 000000B0 A7F5 0006               000000BC   4466+         BRAS  15,LOAD2_0040      BRANCH AROUND CONSTANT(S)             02-LOAD\n 000000B4                                    4467+LD2_0040    DS 0H                                                       02-LOAD\n 000000B4 C9C5C1D5E3C3D940                   4468+LE2_0040    DC CL8'IEANTCR'       ENTRY POINT NAME                      02-LOAD\n 000000BC                                    4469+LOAD2_0040    DS 0H                                                     02-LOAD\n 000000BC 4100 F000               00000000   4470+         LA    0,LE2_0040-LD2_0040(,15)         ADDR OF PARAMETER       02-LOAD\n 000000C0 1B11                               4471+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 000000C2 0A08                               4472+         SVC   8                                                        02-LOAD\n 000000C4 5000 D068               00000068   4473+         ST    R0,ASM_IEANTCR      save address                         01-$$ASMIF\n 000000C8                                    4476+         CNOP  0,4                                                 @L2P 02-LOAD\n 000000C8 A7F5 0006               000000D4   4477+         BRAS  15,LOAD2_0042      BRANCH AROUND CONSTANT(S)             02-LOAD\n 000000CC                                    4478+LD2_0042    DS 0H                                                       02-LOAD\n 000000CC C9C5C1D5E3D9E340                   4479+LE2_0042    DC CL8'IEANTRT'       ENTRY POINT NAME                      02-LOAD\n 000000D4                                    4480+LOAD2_0042    DS 0H                                                     02-LOAD\n 000000D4 4100 F000               00000000   4481+         LA    0,LE2_0042-LD2_0042(,15)         ADDR OF PARAMETER       02-LOAD\n 000000D8 1B11                               4482+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 000000DA 0A08                               4483+         SVC   8                                                        02-LOAD\n 000000DC 5000 D06C               0000006C   4484+         ST    R0,ASM_IEANTRT      save address                         01-$$ASMIF\n 000000E0                                    4487+         CNOP  0,4                                                 @L2P 02-LOAD\n 000000E0 A7F5 0006               000000EC   4488+         BRAS  15,LOAD2_0044      BRANCH AROUND CONSTANT(S)             02-LOAD\n 000000E4                                    4489+LD2_0044    DS 0H                                                       02-LOAD\n 000000E4 C9C5C1D5E3C4D340                   4490+LE2_0044    DC CL8'IEANTDL'       ENTRY POINT NAME                      02-LOAD\n 000000EC                                    4491+LOAD2_0044    DS 0H                                                     02-LOAD\n 000000EC 4100 F000               00000000   4492+         LA    0,LE2_0044-LD2_0044(,15)         ADDR OF PARAMETER       02-LOAD\n 000000F0 1B11                               4493+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 000000F2 0A08                               4494+         SVC   8                                                        02-LOAD\n 000000F4 5000 D070               00000070   4495+         ST    R0,ASM_IEANTDL      save address                         01-$$ASMIF\n 000000F8 5820 021C               0000021C   4496+         L     R2,PSATOLD          tcb address                          01-$$ASMIF\n                     R:2 00000020            4497+         USING TCB,R2              get tcb addr                         01-$$ASMIF\n 000000FC 58E0 200C               0000002C   4498+         L     R14,TCBTIO          get tiot add                         01-$$ASMIF\n                     R:E 00000468            4499+         USING TIOT1,R14           base on tiot1                        01-$$ASMIF\n 00000100 D207 D1D4 E000 000001D4 00000468   4500+         MVC   ASM_JOBNAME,TIOCNJOB copy jobname                        01-$$ASMIF\n 00000106 D207 D1DC B020 000001DC 00001C28   4501+         MVC   ASM_PROGRAMNAME,=CL8' ' init it                          01-$$ASMIF\n                                             4502+* 06/03/12 TESTAUTH DIAGNOSE extension\n 0000010C D203 D8D8 B038 000008D8 00001C40   4503+         MVC   ASM_TESTAUTH,=F'-1' init TESTAUTH                        01-$$ASMIF\n 00000112 C0E5 0000 0845          0000119C   4504+         BRASL R14,TESTAUTH_INTERN  call TESTAUTH                       01-$$ASMIF\n                                             4505+* 06/03/12 TESTAUTH DIAGNOSE extension\n 00000118 58E0 2000               00000020   4506+         L     R14,TCBRBP          get highest rb pointer               01-$$ASMIF\n                                             4507+         DROP  R14                 drop reg                             01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   23\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  RBBASIC,R14\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                    R:E 00000040            4508+         USING RBBASIC,R14         base on rb                           01-$$ASMIF\n 0000011C 91C0 E00A      0000004A            4509+ASMIF_RBLOOP TM RBSTAB1,B'11000000' check rb type                       01-$$ASMIF\n 00000120 A784 000D               0000013A   4512+         BRC   8,ASMIF_PRB  (BC)                                        03-\n 00000124 9180 E00B      0000004B            4513+ASMIF_RBNEXT TM RBSTAB2,RBTCBNXT   test link tcb pointer                01-$$ASMIF\n 00000128 A714 0011               0000014A   4516+         BRC   1,ASMIF_PRBOK  (BC)                                      03-\n 0000012C 58E0 E01C               0000005C   4517+         L     R14,RBLINK          get rb link                          01-$$ASMIF\n 00000130 12EE                               4518+         LTR   R14,R14             test it                              01-$$ASMIF\n 00000132 A774 FFF5               0000011C   4521+         BRC   7,ASMIF_RBLOOP  (BC)                                     03-\n 00000136 A7F4 000A               0000014A   4524+         BRC   15,ASMIF_PRBOK  (BC)                                     03-\n 0000013A 58F0 E00C               0000004C   4525+ASMIF_PRB L    R15,RBCDE           get cde addr                         01-$$ASMIF\n 0000013E 12FF                               4526+         LTR   R15,R15             test it                              01-$$ASMIF\n 00000140 A784 FFF2               00000124   4529+         BRC   8,ASMIF_RBNEXT  (BC)                                     03-\n                     R:F 00000000            4530+         USING CDENTRY,R15         base on cde                          01-$$ASMIF\n 00000144 D207 D1DC F008 000001DC 00000008   4531+         MVC   ASM_PROGRAMNAME,CDNAME move program name                 01-$$ASMIF\n                                             4532+         DROP  R14,R15             drop temp regs                       01-$$ASMIF\n 0000014A                                    4533+ASMIF_PRBOK DS 0H                                                       01-$$ASMIF\n 0000014A 18F7                               4534+         LR    R15,R7              back asm address                     01-$$ASMIF\n 0000014C                                    4535+ASMIF_EXIT DS   0H                 back from here                       01-$$ASMIF\n 0000014C 58D0 D004               00000004   4536+         L     R13,4(,R13)         higher save address                  01-$$ASMIF\n 00000150 58E0 D00C               0000000C   4537+         L     R14,12(,R13)                                             01-$$ASMIF\n 00000154 982C D01C               0000001C   4538+         LM    R2,R12,28(R13)     back regs                             01-$$ASMIF\n 00000158 051E                               4539+         BALR  R1,R14                                                   01-$$ASMIF\n                                             4540+         DROP  R13                                                      01-$$ASMIF\n 0000015A B240 00E0                          4541+ASMIF_PROCESS BAKR     R14,0       all in stack                         01-$$ASMIF\n                     R:7 00000000            4542+         USING ASMDSECT,R7         base on asm                          01-$$ASMIF\n 0000015E 5070 D008               00000008   4543+         ST    R7,8(,R13)          chain new save                       01-$$ASMIF\n 00000162 50C0 705C               0000005C   4544+         ST    R12,ASM_CRAB        save crab                            01-$$ASMIF\n 00000166 50D0 7004               00000004   4545+         ST    R13,4(,R7)          save higher save area                01-$$ASMIF\n 0000016A 41D0 7000               00000000   4546+         LA    R13,ASM_SAVE        get temp save                        01-$$ASMIF\n 0000016E D707 7060 7060 00000060 00000060   4547+         XC    ASM_RC(8),ASM_RC    clear rc                             01-$$ASMIF\n                                             4548+         DROP  R7                drop asm base                          01-$$ASMIF\n                     R:D 00000000            4549+         USING ASM_SAVE,R13      base on asm area                       01-$$ASMIF\n                                             4551+* 29/11/07 struct asm include\n000000174 E3F0 D0CC 0090          000000CC   4553+         LLGC  R15,ASM_FUNCTION_CODE                                   X02-$$\n                                                 +                                 + get code\n 0000017A 89F0 0002               00000002   4554+         SLL   R15,2             + by four                              02-$$\n 0000017E 5AF0 B03C               00001C44   4555+         A     R15,=A(BR0056)    + table addrerss                       02-$$\n 00000182 07FF                               4556+         BR    R15               + jump into table                      02-$$\n 00000184                                    4557+BR0056    DS 0F                                                         02-$$\n 00000184 A7F4 0B64               0000184C   4558+         J     CLEANUP           +if &I*4 branch to &CASE(&I)           02-$$\n 00000188 A7F4 0049               0000021A   4559+         J     GETTOKEN          +if &I*4 branch to &CASE(&I)           02-$$\n 0000018C A7F4 006A               00000260   4560+         J     CREATETOKEN       +if &I*4 branch to &CASE(&I)           02-$$\n 00000190 A7F4 008D               000002AA   4561+         J     DELETETOKEN       +if &I*4 branch to &CASE(&I)           02-$$\n 00000194 A7F4 00BA               00000308   4562+         J     ALLOCATEPAGES     +if &I*4 branch to &CASE(&I)           02-$$\n 00000198 A7F4 00CE               00000334   4563+         J     FREEPAGES         +if &I*4 branch to &CASE(&I)           02-$$\n 0000019C A7F4 00E1               0000035E   4564+         J     ENQ               +if &I*4 branch to &CASE(&I)           02-$$\n 000001A0 A7F4 010E               000003BC   4565+         J     DEQ               +if &I*4 branch to &CASE(&I)           02-$$\n 000001A4 A7F4 06C8               00000F34   4566+         J     SLEEP             +if &I*4 branch to &CASE(&I)           02-$$\n 000001A8 A7F4 06E0               00000F68   4567+         J     GETECB            +if &I*4 branch to &CASE(&I)           02-$$\n 000001AC A7F4 0716               00000FD8   4568+         J     WAIT              +if &I*4 branch to &CASE(&I)           02-$$\n 000001B0 A7F4 07C4               00001138   4569+         J     POST              +if &I*4 branch to &CASE(&I)           02-$$\n 000001B4 A7F4 07EC               0000118C   4570+         J     RESET             +if &I*4 branch to &CASE(&I)           02-$$\n 000001B8 A7F4 09FD               000015B2   4571+         J     SELECT            +if &I*4 branch to &CASE(&I)           02-$$\n 000001BC A7F4 0A5E               00001678   4572+         J     CONNECTSHMEM      +if &I*4 branch to &CASE(&I)           02-$$\n1          asmif asm interfcae module                                                                           Page   24\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000001C0 A7F4 0AE6               0000178C   4573+         J     DISCONNECTSHMEM   +if &I*4 branch to &CASE(&I)           02-$$\n 000001C4 A7F4 0BE6               00001990   4574+         J     OPER              +if &I*4 branch to &CASE(&I)           02-$$\n 000001C8 A7F4 0C63               00001A8E   4575+         J     WTO               +if &I*4 branch to &CASE(&I)           02-$$\n 000001CC A7F4 0C7B               00001AC2   4576+         J     MALLOC            +if &I*4 branch to &CASE(&I)           02-$$\n 000001D0 A7F4 0CAB               00001B26   4577+         J     FREESTOR          +if &I*4 branch to &CASE(&I)           02-$$\n 000001D4 A7F4 0118               00000404   4578+         J     SVC               +if &I*4 branch to &CASE(&I)           02-$$\n 000001D8 A7F4 011E               00000414   4579+         J     ATTACHMVS         +if &I*4 branch to &CASE(&I)           02-$$\n 000001DC A7F4 0147               0000046A   4580+         J     CLOCK             +if &I*4 branch to &CASE(&I)           02-$$\n 000001E0 A7F4 014B               00000476   4581+         J     TIMEUSED          +if &I*4 branch to &CASE(&I)           02-$$\n 000001E4 A7F4 0162               000004A8   4582+         J     TDUMP             +if &I*4 branch to &CASE(&I)           02-$$\n 000001E8 A7F4 020C               00000600   4583+         J     LOGGER            +if &I*4 branch to &CASE(&I)           02-$$\n 000001EC A7F4 055C               00000CA4   4584+         J     VTOC              +if &I*4 branch to &CASE(&I)           02-$$\n 000001F0 A7F4 0666               00000EBC   4585+         J     SRB_              +if &I*4 branch to &CASE(&I)           02-$$\n 000001F4 A7F4 0665               00000EBE   4586+         J     WLM               +if &I*4 branch to &CASE(&I)           02-$$\n 000001F8 A7F4 0664               00000EC0   4587+         J     OBTAIN            +if &I*4 branch to &CASE(&I)           02-$$\n 000001FC A7F4 07D2               000011A0   4588+         J     TESTAUTH          +if &I*4 branch to &CASE(&I)           02-$$\n 00000200 A7F4 07E2               000011C4   4589+         J     DIAGNOSE          +if &I*4 branch to &CASE(&I)           02-$$\n 00000204 A7F4 0867               000012D2   4590+         J     VSMLIST           +if &I*4 branch to &CASE(&I)           02-$$\n 00000208 D203 D060 B040 00000060 00001C48   4591+         MVC   ASM_RC,=A(128)      get code                             01-$$ASMIF\n 0000020E 0000                                   +\n 00000210 00000000                           4592+         DC    A(0)                                                     01-$$ASMIF\n 00000214 0101                               4593+         PR    ,                   return back                          01-$$ASMIF\n                     R:D 00000000            4594+         USING ASM_SAVE,R13      base on asm area                       01-$$ASMIF\n                                             4595+*---------------------------------------------------------------------*\n                                             4596+* gettoken - ask for the name/token pair                              *\n                                             4597+* +0     name pointer                                                 *\n                                             4598+* +4     retrieved token address                                      *\n                                             4599+* back : r15 = ieantrt return code                                    *\n                                             4600+*---------------------------------------------------------------------*\n 00000216 B240 00E0                          4601+GETTOKEN_CALLED BAKR R14,0                                              01-$$ASMIF\n 0000021A                                    4602+GETTOKEN DS    0H                                                       01-$$ASMIF\n 0000021A 9823 D114               00000114   4603+         LM    R2,R3,ASM_PARMS     name/token pointers                  01-$$ASMIF\n 0000021E 1812                               4604+         LR    R1,R2               same in r1                           01-$$ASMIF\n 00000220 C0E5 0000 0CC9          00001BB2   4605+         BRASL R14,COPYSTR         copy it                              01-$$ASMIF\n 00000226 4120 D154               00000154   4606+         LA    R2,ASM_WORK         addr in work                         01-$$ASMIF\n                                             4607+* 17/11/11 GetToken in SYSTEM_LEVEL\n 0000022A D203 D218 B044 00000218 00001C4C   4608+         MVC   ASM_OPTION,=A(IEANT_SYSTEM_LEVEL)                        01-$$ASMIF\n                                             4609+*        MVC   ASM_OPTION,=A(IEANT_HOME_LEVEL)\n                                             4610+* 17/11/11 GetToken in SYSTEM_LEVEL\n 00000230 58F0 D06C               0000006C   4611+         L     R15,ASM_IEANTRT     get retrieve addr                    01-$$ASMIF\n                                             4612+*        call  (15),(asm_option,(r2),(r3),asm_rc),   call              X\n                                                 +               MF=(E,ASM_CALLLIST),                                    X\n                                                 +               ID=0001\n 00000234                                    4615+         DS    0H                                                       02-CALL\n 00000234 4110 D134               00000134   4620+         LA    1,ASM_CALLLIST                    LOAD PARAMETER REG 1   04-IHBINNRR\n 00000238 4100 D218               00000218   4621+         LA    0,ASM_OPTION       PICKUP  PARAMETER                     03-IHBOPLTX\n 0000023C 5000 1000               00000000   4622+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000240 5020 1004               00000004   4623+         ST    (R2),4(0,1)                       STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000244 5030 1008               00000008   4624+         ST    (R3),8(0,1)                       STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000248 4100 D060               00000060   4625+         LA    0,ASM_RC           PICKUP  PARAMETER                     03-IHBOPLTX\n 0000024C 5000 100C               0000000C   4626+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000250 05EF                               4627+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 00000252 4700                               4628+         DC    X'4700'                           NOP INSTRUCTION WITH   02-CALL\n 00000254 0001                               4629+         DC    AL2(0001)                         ID IN LAST TWO BYTES   02-CALL\n 00000256 90F0 D060               00000060   4630+         STM   R15,R0,ASM_RC       save return/reason                   01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   25\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000025A 0101                               4631+         PR    ,                   return back                          01-$$ASMIF\n                                             4632+*---------------------------------------------------------------------*\n                                             4633+* createtoken - create a system level name/token pair                 *\n                                             4634+* +0     name pointer                                                 *\n                                             4635+* +4     retrieved token address                                      *\n                                             4636+* back : r15 = ieantcr return code                                    *\n                                             4637+*---------------------------------------------------------------------*\n 0000025C B240 00E0                          4638+CREATETOKEN_CALLED BAKR R14,0                                           01-$$ASMIF\n 00000260                                    4639+CREATETOKEN DS 0H                                                       01-$$ASMIF\n                                             4640+* 21/04/08 name/token service in user/problem state\n                                             4641+***      MVC   ASM_OPTION(8),=A(IEANT_SYSTEM_LEVEL,IEANT_NOPERSIST)\n 00000260 D207 D218 B028 00000218 00001C30   4642+         MVC   ASM_OPTION(8),=A(IEANT_HOME_LEVEL,IEANT_NOPERSIST)       01-$$ASMIF\n 00000266 58F0 D068               00000068   4643+         L     R15,ASM_IEANTCR     create address                       01-$$ASMIF\n 0000026A 9823 D114               00000114   4644+         LM    R2,R3,ASM_PARMS     nam/token pointers                   01-$$ASMIF\n 0000026E 1812                               4645+         LR    R1,R2               same in r1                           01-$$ASMIF\n 00000270 C0E5 0000 0CA1          00001BB2   4646+         BRASL R14,COPYSTR         copy it                              01-$$ASMIF\n 00000276 4120 D154               00000154   4647+         LA    R2,ASM_WORK         addr in work                         01-$$ASMIF\n                                             4648+*        call  (15),(asm_option,(r2),(r3),asm_option+4,asm_rc),        X\n                                                 +               MF=(E,ASM_CALLLIST),                                    X\n                                                 +               ID=0002\n 0000027A                                    4651+         DS    0H                                                       02-CALL\n 0000027A 4110 D134               00000134   4656+         LA    1,ASM_CALLLIST                    LOAD PARAMETER REG 1   04-IHBINNRR\n 0000027E 4100 D218               00000218   4657+         LA    0,ASM_OPTION       PICKUP  PARAMETER                     03-IHBOPLTX\n 00000282 5000 1000               00000000   4658+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000286 5020 1004               00000004   4659+         ST    (R2),4(0,1)                       STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000028A 5030 1008               00000008   4660+         ST    (R3),8(0,1)                       STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000028E 4100 D21C               0000021C   4661+         LA    0,ASM_OPTION+4     PICKUP  PARAMETER                     03-IHBOPLTX\n 00000292 5000 100C               0000000C   4662+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000296 4100 D060               00000060   4663+         LA    0,ASM_RC           PICKUP  PARAMETER                     03-IHBOPLTX\n 0000029A 5000 1010               00000010   4664+         ST    0,16(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000029E 05EF                               4665+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 000002A0 4700                               4666+         DC    X'4700'                           NOP INSTRUCTION WITH   02-CALL\n 000002A2 0002                               4667+         DC    AL2(0002)                         ID IN LAST TWO BYTES   02-CALL\n 000002A4 90F0 D060               00000060   4668+         STM   R15,R0,ASM_RC       save return/reason                   01-$$ASMIF\n 000002A8 0101                               4669+         PR    ,                   return back                          01-$$ASMIF\n                                             4670+*---------------------------------------------------------------------*\n                                             4671+* deletetoken - delete a system level name/token pair                 *\n                                             4672+* +0     name pointer                                                 *\n                                             4673+* back : r15 = ieantdl return code                                    *\n                                             4674+*---------------------------------------------------------------------*\n 000002AA                                    4675+DELETETOKEN DS 0H                                                       01-$$ASMIF\n                                             4676+*        modeset mode=sup        supervisor state\n                                             4678+* MACDATE Y-3 81030                                                @D1A\n 000002AA 0700                               4680+         CNOP  0,4                                                      02-MODESET\n 000002AC A715 0004               000002B4   4681+         BRAS  1,*+8                                                    02-MODESET\n 000002B0 0000000C                           4682+         DC    B'00000000000000000000000000001100'                      02-MODESET\n 000002B4 5810 1000               00000000   4683+         L     1,0(0,1)                                          YM1995 02-MODESET\n 000002B8 0A6B                               4684+         SVC   107                                                      02-MODESET\n 000002BA D203 D218 B048 00000218 00001C50   4685+         MVC   ASM_OPTION,=A(IEANT_HOME_LEVEL)                          01-$$ASMIF\n 000002C0 58F0 D070               00000070   4686+         L     R15,ASM_IEANTDL     delete address                       01-$$ASMIF\n                                             4687+*        $$setkey key=zero,save=asm_key key key=zero and save it\n                                             4688+***      $$SETKEY KEY=ZERO,SAVE=ASM_KEY key key=zero and save it\n 000002C4 5820 D114               00000114   4689+         L     R2,ASM_PARMS        name pointer                         01-$$ASMIF\n 000002C8 1812                               4690+         LR    R1,R2               same in r1                           01-$$ASMIF\n 000002CA C0E5 0000 0C74          00001BB2   4691+         BRASL R14,COPYSTR         copy it                              01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   26\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000002D0 4120 D154               00000154   4692+         LA    R2,ASM_WORK         addr in work                         01-$$ASMIF\n                                             4693+*        call  (15),(asm_option,(r2),asm_rc), call                     X\n                                                 +               MF=(E,ASM_CALLLIST),                                    X\n                                                 +               ID=0003\n 000002D4                                    4696+         DS    0H                                                       02-CALL\n 000002D4 4110 D134               00000134   4701+         LA    1,ASM_CALLLIST                    LOAD PARAMETER REG 1   04-IHBINNRR\n 000002D8 4100 D218               00000218   4702+         LA    0,ASM_OPTION       PICKUP  PARAMETER                     03-IHBOPLTX\n 000002DC 5000 1000               00000000   4703+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 000002E0 5020 1004               00000004   4704+         ST    (R2),4(0,1)                       STORE INTO PARAM. LIST 03-IHBOPLTX\n 000002E4 4100 D060               00000060   4705+         LA    0,ASM_RC           PICKUP  PARAMETER                     03-IHBOPLTX\n 000002E8 5000 1008               00000008   4706+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 000002EC 05EF                               4707+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 000002EE 4700                               4708+         DC    X'4700'                           NOP INSTRUCTION WITH   02-CALL\n 000002F0 0003                               4709+         DC    AL2(0003)                         ID IN LAST TWO BYTES   02-CALL\n 000002F2 90F0 D060               00000060   4710+         STM   R15,R0,ASM_RC       save return/reason                   01-$$ASMIF\n                                             4711+*        $$setkey back,save=asm_key key key=zero and save it\n                                             4712+***      $$SETKEY BACK,SAVE=ASM_KEY key key=zero and save it\n                                             4713+*        modeset mode=prob       supervisor state\n                                             4715+* MACDATE Y-3 81030                                                @D1A\n 000002F6 0700                               4717+         CNOP  0,4                                                      02-MODESET\n 000002F8 A715 0004               00000300   4718+         BRAS  1,*+8                                                    02-MODESET\n 000002FC 00000004                           4719+         DC    B'00000000000000000000000000000100'                      02-MODESET\n 00000300 5810 1000               00000000   4720+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00000304 0A6B                               4721+         SVC   107                                                      02-MODESET\n 00000306 0101                               4722+         PR    ,                   return back                          01-$$ASMIF\n                                             4723+* 21/04/08 name/token service in user/problem state\n                                             4724+*---------------------------------------------------------------------*\n                                             4725+* allocatepages - allocate pages on page bndry for shmem serv         *\n                                             4726+* +0     size required                                                *\n                                             4727+* back : r15 = storage return code                                    *\n                                             4728+*---------------------------------------------------------------------*\n 00000308                                    4729+ALLOCATEPAGES DS    0H                                                  01-$$ASMIF\n 00000308 9823 D114               00000114   4730+         LM    R2,R3,ASM_PARMS     requested size and address           01-$$ASMIF\n 0000030C 5A20 B04C               00001C54   4731+         A     R2,=A(PAGE_SIZE-1)  add page size                        01-$$ASMIF\n 00000310 5420 B050               00001C58   4732+         N     R2,=X'0FFFF000'     and round                            01-$$ASMIF\n                                             4733+*        storage obtain,                                               X\n                                                 +               LENGTH=(R2),                                            X\n                                                 +               ADDR=0(,R3),                                            X\n                                                 +               BNDRY=PAGE,                                             X\n                                                 +               LOC=(ANY,ANY)\n 00000314 1802                               4736+         LR     0,R2                         .STORAGE LENGTH            02-STORAGE\n 00000316 58F0 B054               00001C5C   4737+         L      15,=AL1(B'00000000',(0*16),(0),B'01110110')            X02-STORAGE\n                                                 +                                             .CONTROL INFORMATION  @P9C\n 0000031A 58E0 0010               00000010   4738+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 0000031E 58EE 0304               00000304   4739+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 00000322 58EE 00A0               000000A0   4740+         L      14,160(14,0)                 .OBTAIN LX/EX FOR OBTAIN   02-STORAGE\n 00000326 B218 E000      00000000            4741+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 0000032A 5010 3000               00000000   4742+         ST     1,0(,R3)                     .SAVE ADDR OF STORAGE      02-STORAGE\n 0000032E 50F0 D060               00000060   4743+         ST    R15,ASM_RC          save return/reason                   01-$$ASMIF\n 00000332 0101                               4744+         PR    ,                   return back                          01-$$ASMIF\n                                             4745+*---------------------------------------------------------------------*\n                                             4746+* freepages - free pages on page bndry for shmem serv                 *\n                                             4747+* +0     size  to free                                                *\n                                             4748+* +4     address                                                      *\n                                             4749+* back : r15 = ieantcr return code                                    *\n1          asmif asm interfcae module                                                                           Page   27\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            4750+*---------------------------------------------------------------------*\n 00000334                                    4751+FREEPAGES DS   0H                                                       01-$$ASMIF\n 00000334 9823 D114               00000114   4752+         LM    R2,R3,ASM_PARMS     requested size and address           01-$$ASMIF\n 00000338 5A20 B04C               00001C54   4753+         A     R2,=A(PAGE_SIZE-1)  add page size                        01-$$ASMIF\n 0000033C 5420 B050               00001C58   4754+         N     R2,=X'0FFFF000'     and round                            01-$$ASMIF\n                                             4755+*        storage release,                                              X\n                                                 +               LENGTH=(R2),                                            X\n                                                 +               ADDR=(R3)\n 00000340 1802                               4758+         LR     0,R2                         .STORAGE LENGTH            02-STORAGE\n 00000342 1813                               4759+         LR     1,R3                         .ADDRESS OF STORAGE        02-STORAGE\n 00000344 A7F8 0003               00000003   4760+         LHI    15,X'0003'                   .Add in parameters    @PCA 02-STORAGE\n 00000348 58E0 0010               00000010   4761+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 0000034C 58EE 0304               00000304   4762+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 00000350 58EE 00CC               000000CC   4763+         L      14,204(14,0)                 .OBTAIN LX/EX FOR RELEASE  02-STORAGE\n 00000354 B218 E000      00000000            4764+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 00000358 50F0 D060               00000060   4765+         ST    R15,ASM_RC          save return/reason                   01-$$ASMIF\n 0000035C 0101                               4766+         PR    ,                   return back                          01-$$ASMIF\n                                             4767+*---------------------------------------------------------------------*\n                                             4768+* enq -  enq exclusive for reource                                    *\n                                             4769+* +0     major name                                                   *\n                                             4770+* +4     minor name                                                   *\n                                             4771+* +8     minor name length                                            *\n                                             4772+* +c     max wait in milli sec                                        *\n                                             4773+* back : r15 = ieantcr return code                                    *\n                                             4774+*---------------------------------------------------------------------*\n 0000035E                                    4775+ENQ      DS    0H                                                       01-$$ASMIF\n 0000035E 9825 D114               00000114   4776+         LM    R2,R5,ASM_PARMS    requested size and address            01-$$ASMIF\n 00000362                                    4777+         DS    0H                                                       01-$$ASMIF\n 00000362                                    4778+ENQ_UNCOND DS 0H                                                        01-$$ASMIF\n                                             4779+*        enq   ((r2),(r3),e,(r4),systems),ret=none,                    X\n                                                 +               MF=(E,ASM_ENQL)\n                                             4782+*         MACRO-DATE = 06/24/03                                    @05C\n 00000362                                    4783+         DS    0H                                                  @04A 02-ENQ\n 00000362 4110 D20C               0000020C   4786+         LA    1,ASM_ENQL                    ADDR OF PARAM IN REG  @L1C 03-IHBSETR\n 00000366 4240 1001               00000001   4787+         STC   R4,1(0,1)                                                02-ENQ\n 0000036A 9430 1002      00000002            4788+         NI    2(1),48                   SET OPTIONS SPECIFIED @ZA00466 02-ENQ\n 0000036E 9648 1002      00000002            4789+         OI    2(1),72                   FOR THIS ELEMENT      @ZA00466 02-ENQ\n 00000372 18E1                               4790+         LR    14,1                      PRESERVE REG 1            @L4C 02-ENQ\n 00000374 9180 E000      00000000            4791+         TM    0(14),128                 IS IT END OF LIST     @ZA00466 02-ENQ\n 00000378 A714 0008               00000388   4792+         JO    *+16                      YES, GET OUT OF LOOP      @PDA 02-ENQ\n 0000037C 41EE 000C               0000000C   4793+         LA    14,12(14)                 INDEX TO NEXT ENTRY   @ZA00466 02-ENQ\n 00000380 94F8 E002      00000002            4794+         NI    2(14),248                 SET RET AND SMC IN ALL@ZA53727 02-ENQ\n 00000384 A7F4 FFF8               00000374   4795+         J     *-16                      STAY IN LOOP              @PDA 02-ENQ\n 00000388 5020 1004               00000004   4796+         ST    R2,4(0,1)                 STORE QNAME ADDRESS            02-ENQ\n 0000038C 5030 1008               00000008   4797+         ST    R3,8(0,1)                 STORE RNAME ADDRESS            02-ENQ\n 00000390 0A38                               4798+         SVC   56                                                       02-ENQ\n 00000392 12FF                               4799+         LTR   R15,R15           test rc                                01-$$ASMIF\n 00000394 A784 0008               000003A4   4802+         BRC   8,ENQ_00  (BC)                                           03-\n 00000398 BFFF F000               00000000   4803+         ICM   R15,15,0(R15)     get code                               01-$$ASMIF\n 0000039C 54F0 B058               00001C60   4804+         N     R15,=X'000000FF'  get it proper                          01-$$ASMIF\n 000003A0 A7F4 000B               000003B6   4807+         BRC   15,ENQ_XX  (BC)                                          03-\n 000003A4 1BFF                               4808+ENQ_00   SR    R15,R15           clear reg                              01-$$ASMIF\n 000003A6 A7F4 0008               000003B6   4811+         BRC   15,ENQ_XX  (BC)                                          03-\n 000003AA 41F0 0008               00000008   4812+ENQ_08   LA    R15,8             get code                               01-$$ASMIF\n 000003AE A7F4 0004               000003B6   4815+         BRC   15,ENQ_XX  (BC)                                          03-\n1          asmif asm interfcae module                                                                           Page   28\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000003B2 58F0 B038               00001C40   4816+ENQ_FF   L     R15,=F'-1'        get code                               01-$$ASMIF\n 000003B6 50F0 D060               00000060   4817+ENQ_XX   ST    R15,ASM_RC       back code                               01-$$ASMIF\n 000003BA 0101                               4818+         PR    ,                   branch back                          01-$$ASMIF\n                                             4819+*---------------------------------------------------------------------*\n                                             4820+* deq -  deq resource                                                 *\n                                             4821+* +0     major name                                                   *\n                                             4822+* +4     minor name                                                   *\n                                             4823+* +8     minor name length                                            *\n                                             4824+* back : r15 = ieantcr return code                                    *\n                                             4825+*---------------------------------------------------------------------*\n 000003BC 9824 D114               00000114   4826+DEQ      LM    R2,R4,ASM_PARMS     get parms                            01-$$ASMIF\n                                             4827+*        deq   ((r2),(r3),(r4),systems),ret=none,                      X\n                                                 +               MF=(E,ASM_ENQL)     deq resoure\n                                             4829+*        MACRO-DATE = 10/06/2004                                   @P2C\n 000003C0                                    4832+         DS    0H                                                  @04A 03-ENQ\n 000003C0 4110 D20C               0000020C   4835+         LA    1,ASM_ENQL                    ADDR OF PARAM IN REG  @L1C 04-IHBSETR\n 000003C4 4240 1001               00000001   4836+         STC   R4,1(0,1)                                                03-ENQ\n 000003C8 94B0 1002      00000002            4837+         NI    2(1),176                  SET OPTIONS SPECIFIED @ZA00466 03-ENQ\n 000003CC 9648 1002      00000002            4838+         OI    2(1),72                   FOR THIS ELEMENT      @ZA00466 03-ENQ\n 000003D0 18E1                               4839+         LR    14,1                      PRESERVE REG 1            @L4C 03-ENQ\n 000003D2 9180 E000      00000000            4840+         TM    0(14),128                 IS IT END OF LIST     @ZA00466 03-ENQ\n 000003D6 A714 0008               000003E6   4841+         JO    *+16                      YES, GET OUT OF LOOP      @PDA 03-ENQ\n 000003DA 41EE 000C               0000000C   4842+         LA    14,12(14)                 INDEX TO NEXT ENTRY   @ZA00466 03-ENQ\n 000003DE 94F8 E002      00000002            4843+         NI    2(14),248                 SET RET AND SMC IN ALL@ZA53727 03-ENQ\n 000003E2 A7F4 FFF8               000003D2   4844+         J     *-16                      STAY IN LOOP              @PDA 03-ENQ\n 000003E6 5020 1004               00000004   4845+         ST    R2,4(0,1)                 STORE QNAME ADDRESS            03-ENQ\n 000003EA 5030 1008               00000008   4846+         ST    R3,8(0,1)                 STORE RNAME ADDRESS            03-ENQ\n 000003EE 0A30                               4847+         SVC   48                                                  SDS1 02-DEQ\n 000003F0 12FF                               4848+         LTR   R15,R15           test rc                                01-$$ASMIF\n 000003F2 A784 0006               000003FE   4851+         BRC   8,DEQ_XX  (BC)                                           03-\n 000003F6 BFFF F000               00000000   4852+         ICM   R15,15,0(R15)     get code                               01-$$ASMIF\n 000003FA 54F0 B058               00001C60   4853+         N     R15,=X'000000FF'  get it proper                          01-$$ASMIF\n 000003FE 50F0 D060               00000060   4854+DEQ_XX   ST    R15,ASM_RC        save code                              01-$$ASMIF\n 00000402 0101                               4855+         PR    ,                   return back                          01-$$ASMIF\n                                             4856+*---------------------------------------------------------------------*\n                                             4857+* SVC -  SVC call                                                     *\n                                             4858+* +0     SVC number                                                   *\n                                             4859+* +4     parm list                                                    *\n                                             4860+* back : r15 = ieantcr return code                                    *\n                                             4861+*---------------------------------------------------------------------*\n 00000404 9801 D114               00000114   4862+SVC      LM    R0,R1,ASM_PARMS     get parms                            01-$$ASMIF\n 00000408 1820                               4863+         LR    R2,R0              get SVC                               01-$$ASMIF\n 0000040A 4420 B26E               00001E76   4864+         EX    R2,SVC_EXE         exec SVC                              01-$$ASMIF\n 0000040E 50F0 D060               00000060   4865+SVC_XX   ST    R15,ASM_RC        save code                              01-$$ASMIF\n 00000412 0101                               4866+         PR    ,                 return back                            01-$$ASMIF\n                                             4867+*---------------------------------------------------------------------*\n                                             4868+* attachmvs - ATTACH an MVS subtask as processs                       *\n                                             4869+* +0     program name length                                          *\n                                             4870+* +4     program name                                                 *\n                                             4871+* +8     parm length                                                  *\n                                             4872+* +12    parm                                                         *\n                                             4873+* back : r15 = ieantcr return code                                    *\n                                             4874+*---------------------------------------------------------------------*\n 00000414 9825 D114               00000114   4875+ATTACHMVS LM   R2,R5,ASM_PARMS     get parms                            01-$$ASMIF\n                                             4876+*        call  bpx1atm,                                                X\n1          asmif asm interfcae module                                                                           Page   29\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                                +               ((R2),                                                  X\n                                                 +               (R3),                                                   X\n                                                 +               (R4),                                                   X\n                                                 +               (R5),                                                   X\n                                                 +               =A(0),                                                  X\n                                                 +               =A(0),                                                  X\n                                                 +               ASM_BPX1_RETVAL,                                        X\n                                                 +               ASM_BPX1_RETCODE,                                       X\n                                                 +               ASM_BPX1_RSNCODE),                                      X\n                                                 +               VL,MF=(E,ASM_BPX1)\n 00000418                                    4879+         DS    0H                                                       02-CALL\n 00000418 4110 D348               00000348   4884+         LA    1,ASM_BPX1                        LOAD PARAMETER REG 1   04-IHBINNRR\n 0000041C 18E2                               4885+         LR    14,(R2)                           PICK UP PARAMETER      03-IHBOPLTX\n 0000041E 18F3                               4886+         LR    15,(R3)                           PICK UP PARAMETER      03-IHBOPLTX\n 00000420 1804                               4887+         LR    0,(R4)                            PICK UP PARAMETER      03-IHBOPLTX\n 00000422 90E0 1000               00000000   4888+         STM   14,0,0(1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000426 18E5                               4889+         LR    14,(R5)                           PICK UP PARAMETER      03-IHBOPLTX\n 00000428 41F0 B05C               00001C64   4890+         LA    15,=A(0)           PICKUP PARAMETER                      03-IHBOPLTX\n 0000042C 4100 B05C               00001C64   4891+         LA    0,=A(0)            PICKUP PARAMETER                      03-IHBOPLTX\n 00000430 90E0 100C               0000000C   4892+         STM   14,0,12(1)                        STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000434 41E0 D3C8               000003C8   4893+         LA    14,ASM_BPX1_RETVAL PICKUP PARAMETER                      03-IHBOPLTX\n 00000438 41F0 D3CC               000003CC   4894+         LA    15,ASM_BPX1_RETCODE                                     X03-IHBOPLTX\n                                                 +                                  PICKUP PARAMETER\n 0000043C 4100 D3D0               000003D0   4895+         LA    0,ASM_BPX1_RSNCODE PICKUP PARAMETER                      03-IHBOPLTX\n 00000440 90E0 1018               00000018   4896+         STM   14,0,24(1)                        STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000444 9680 1020      00000020            4897+         OI    32(1),X'80'                SET LAST WORD BIT ON @G860P40 03-IHBOPLTX\n 00000448                                    4898+         CNOP  0,4                                                      02-CALL\n 00000448 A7F5 0004               00000450   4899+         BRAS  15,*+8                            BRANCH AROUND VCON     02-CALL\n 0000044C 00000000                           4900+         DC    V(BPX1ATM)                        ENTRY POINT ADDRESS    02-CALL\n 00000450 58FF 0000               00000000   4901+         L     15,0(15,0)                        LOAD 15 WITH ENTRY ADR 02-CALL\n 00000454 05EF                               4902+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 00000456 58F0 D3CC               000003CC   4903+         L     R15,ASM_BPX1_RETCODE get reason                          01-$$ASMIF\n 0000045A 50F0 D064               00000064   4904+         ST    R15,ASM_REASON    save it                                01-$$ASMIF\n 0000045E 58F0 D3C8               000003C8   4905+         L     R15,ASM_BPX1_RETVAL  get code                            01-$$ASMIF\n 00000462 50F0 D060               00000060   4906+         ST    R15,ASM_RC        save it                                01-$$ASMIF\n 00000466 0101                               4907+         PR    ,                 return back                            01-$$ASMIF\n 00000468 0101                               4908+         PR    ,                 return back                            01-$$ASMIF\n                                             4909+*---------------------------------------------------------------------*\n                                             4910+* clock - ask for STCK                                                *\n                                             4911+* +0     stck reply addres                                            *\n                                             4912+*---------------------------------------------------------------------*\n 0000046A 5820 D114               00000114   4913+CLOCK    L     R2,ASM_PARMS       get parms                             01-$$ASMIF\n 0000046E B205 2000      00000000            4914+         STCK  0(R2)              get clock                             01-$$ASMIF\n 00000472 1BFF                               4915+         SR    R15,R15                                                  01-$$ASMIF\n 00000474 0101                               4916+         PR    ,                                                        01-$$ASMIF\n                                             4917+*---------------------------------------------------------------------*\n                                             4918+* timeused return the used CPU time in long long MIC                  *\n                                             4919+* +0     timeused reply address                                       *\n                                             4920+*---------------------------------------------------------------------*\n 00000476 5820 D114               00000114   4921+TIMEUSED L     R2,ASM_PARMS       get parms                             01-$$ASMIF\n                                             4922+*        timeused storadr=(r2),cpu=TOD,LINKAGE=SYSTEM\n                                             4924+*        MACDATE 04/06/2005                                        @L3C\n 0000047A 58E0 0010               00000010   4926+         L     14,16(0,0)         CVT ADDRESS                      @L1A 02-TIMEUSED\n 0000047E 58EE 0304               00000304   4927+         L     14,772(14,0)       SFT ADDRESS                      @L1A 02-TIMEUSED\n 00000482 58EE 00F4               000000F4   4928+         L     14,244(14,0)       LX/EX FOR SERVICE ROUTINE        @L1A 02-TIMEUSED\n1          asmif asm interfcae module                                                                           Page   30\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000486 4100 0000               00000000   4929+         LA    0,0                SET TIMING FLAG TO CPU/TOD       @D1A 02-TIMEUSED\n 0000048A B218 E000      00000000            4930+         PC    0(14)              PC TO TIMEUSED SERVICE ROUTINE   @L1A 02-TIMEUSED\n 0000048E 12FF                               4931+         LTR   15,15              CHECK THE RETURN CODE            @L1A 02-TIMEUSED\n 00000490 A774 0004               00000498   4932+         JNZ   *+8                BAD RETURN CODE SO SKIP STORE    @L1A 02-TIMEUSED\n 00000494 9001 2000               00000000   4933+         STM   0,1,0(R2)          AREA FOR RETURN OF TIME VALUE    @L1A 02-TIMEUSED\n 00000498 9801 2000               00000000   4934+         LM   R0,R1,0(R2)          get tod                              01-$$ASMIF\n 0000049C 8C00 000C               0000000C   4935+         SRDL R0,12                proper pos                           01-$$ASMIF\n 000004A0 9001 2000               00000000   4936+         STM  R0,R1,0(R2)          back in MIC                          01-$$ASMIF\n 000004A4 1BFF                               4937+         SR    R15,R15                                                  01-$$ASMIF\n 000004A6 0101                               4938+         PR    ,                                                        01-$$ASMIF\n                                             4939+*---------------------------------------------------------------------*\n                                             4940+* issue an IEATDUMP                                                   *\n                                             4941+* +0     name pattern                                                 *\n                                             4942+* +4     dump title\n                                             4943+* +8     DDNAME flag\n                                             4944+*---------------------------------------------------------------------*\n 000004A8 D232 D474 B276 00000474 00001E7E   4945+TDUMP    MVC   ASM_TDUMP_NAME(L'TDUMP_DEF_NAMEL+1),TDUMP_DEF_NAME       01-$$ASMIF\n 000004AE D20D D4D9 B2A9 000004D9 00001EB1   4946+         MVC   ASM_TDUMP_DESC(L'TDUMP_DEF_DESCL+1),TDUMP_DEF_DESC       01-$$ASMIF\n 000004B4 5810 D114               00000114   4947+         L     R1,ASM_PARMS       get parms                             01-$$ASMIF\n 000004B8 1211                               4948+         LTR   R1,R1              test                                  01-$$ASMIF\n 000004BA A784 0015               000004E4   4949+         JZ    TDUMP_NAME_OK      if o.k.                               01-$$ASMIF\n 000004BE 4130 D474               00000474   4950+         LA    R3,ASM_TDUMP_NAME  target                                01-$$ASMIF\n 000004C2 C0E5 0000 0B8F          00001BE0   4951+         BRASL R14,STRLEN         length                                01-$$ASMIF\n 000004C8 12FF                               4952+         LTR   R15,R15            test length                           01-$$ASMIF\n 000004CA A7D4 000D               000004E4   4953+         JNP   TDUMP_NAME_OK      if default                            01-$$ASMIF\n 000004CE A7FE 0064               00000064   4954+         CHI   R15,100            o.k ?                                 01-$$ASMIF\n 000004D2 A744 0004               000004DA   4955+         JL    TDUMP_NAME         jump if o.k                           01-$$ASMIF\n 000004D6 A7F8 0064               00000064   4956+         LHI   R15,100            set def                               01-$$ASMIF\n 000004DA 42F0 D474               00000474   4957+TDUMP_NAME STC R15,ASM_TDUMP_NAME store                                 01-$$ASMIF\n 000004DE 06F0                               4958+         BCTR  R15,0              decr                                  01-$$ASMIF\n 000004E0 44F0 B270               00001E78   4959+         EX    R15,TDUMP_COPY     copy                                  01-$$ASMIF\n 000004E4                                    4960+TDUMP_NAME_OK DS 0H                                                     01-$$ASMIF\n 000004E4 5810 D118               00000118   4961+         L     R1,ASM_PARMS+4     get parms                             01-$$ASMIF\n 000004E8 1211                               4962+         LTR   R1,R1              test length                           01-$$ASMIF\n 000004EA A784 0015               00000514   4963+         JZ    TDUMP_DESC_OK      if ok                                 01-$$ASMIF\n 000004EE 4130 D4D9               000004D9   4964+         LA    R3,ASM_TDUMP_DESC  target                                01-$$ASMIF\n 000004F2 C0E5 0000 0B77          00001BE0   4965+         BRASL R14,STRLEN         length                                01-$$ASMIF\n 000004F8 12FF                               4966+         LTR   R15,R15            test length                           01-$$ASMIF\n 000004FA A7D4 000D               00000514   4967+         JNP   TDUMP_DESC_OK      if default                            01-$$ASMIF\n 000004FE A7FE 0064               00000064   4968+         CHI   R15,100            o.k ?                                 01-$$ASMIF\n 00000502 A744 0004               0000050A   4969+         JL    TDUMP_DESC         jump if o.k                           01-$$ASMIF\n 00000506 A7F8 0064               00000064   4970+         LHI   R15,100            set def                               01-$$ASMIF\n 0000050A 42F0 D4D9               000004D9   4971+TDUMP_DESC STC R15,ASM_TDUMP_DESC store                                 01-$$ASMIF\n 0000050E 06F0                               4972+         BCTR  R15,0              decr                                  01-$$ASMIF\n 00000510 44F0 B270               00001E78   4973+         EX    R15,TDUMP_COPY     copy                                  01-$$ASMIF\n                                             4974+* 19/12/11 IEATDUMP with DDNAME\n 00000514                                    4975+TDUMP_DESC_OK DS 0H                                                     01-$$ASMIF\n 00000514 D503 D11C B194 0000011C 00001D9C   4987+                CLC             ASM_PARMS+8,ZERO                        04-ASMMPOPI\n 0000051A A784 0038               0000058A   4988+           BRC          8,#@LB1                                         03-ASMMIFPR\n                                             4990+*        IEATDUMP DDNAME=ASM_TDUMP_NAME+1,                             X\n                                                 +               HDR=ASM_TDUMP_DESC,                                     X\n                                                 +               MF=(E,ASM_IEATDUMP,COMPLETE)\n                                             4992+*                  MACDATE -03/03/06-<1>\n 0000051E                                    4993+M00M0119 DS    0H                             IEATDUMP-1                02-IEATDUMP\n                                             4994+              PUSH  PRINT                                               02-IEATDUMP\n1          asmif asm interfcae module                                                                           Page   31\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            4995+                  PRINT ON                                              02-IEATDUMP\n 0000051E 4110 D3F8               000003F8   4996+         LA    1,ASM_IEATDUMP     ++ LOCATE ARG PARMS                   02-IEATDUMP\n 00000522 D77B 1000 1000 00000000 00000000   4997+         XC    0(124,1),0(1)      ++ INITIALIZE                         02-IEATDUMP\n 00000528 D203 1000 B060 00000000 00001C68   4998+         MVC   0(4,1),=CL4'TDMP'  ++ CL4 CONSTANT                       02-IEATDUMP\n 0000052E 9680 1008      00000008            4999+         OI    8(1),B'10000000'   ++ INPUT BL1                          02-IEATDUMP\n 00000532 9640 100A      0000000A            5000+         OI    10(1),B'01000000'  ++ INPUT BL1                          02-IEATDUMP\n 00000536 D207 101C D475 0000001C 00000475   5001+         MVC   28(8,1),ASM_TDUMP_NAME+1 ++ INPUT XDDNAME                02-IEATDUMP\n 0000053C D203 1034 B064 00000034 00001C6C   5002+         MVC   52(4,1),=AL4(0)    ++ INPUT XIDXAD                       02-IEATDUMP\n 00000542 D203 103C B064 0000003C 00001C6C   5003+         MVC   60(4,1),=AL4(0)    ++ INPUT XSYMRECAD                    02-IEATDUMP\n 00000548 D203 1044 B064 00000044 00001C6C   5004+         MVC   68(4,1),=AL4(0)    ++ INPUT XINTOKENAD                   02-IEATDUMP\n 0000054E D203 104C B064 0000004C 00001C6C   5005+         MVC   76(4,1),=AL4(0)    ++ INPUT XREMOTEAD                    02-IEATDUMP\n 00000554 D203 1054 B064 00000054 00001C6C   5006+         MVC   84(4,1),=AL4(0)    ++ INPUT XPROBDESCAD                  02-IEATDUMP\n 0000055A D203 105C B064 0000005C 00001C6C   5007+         MVC   92(4,1),=AL4(0)    ++ INPUT XLISTAD                      02-IEATDUMP\n 00000560 D203 1064 B064 00000064 00001C6C   5008+         MVC   100(4,1),=AL4(0)   ++ INPUT XSUBPLSTAD                   02-IEATDUMP\n 00000566 D203 106C B064 0000006C 00001C6C   5009+         MVC   108(4,1),=AL4(0)   ++ INPUT XDSPLISTAD                   02-IEATDUMP\n 0000056C D203 1074 B064 00000074 00001C6C   5010+         MVC   116(4,1),=AL4(0)   ++ INPUT XECBAD                       02-IEATDUMP\n 00000572 D201 1004 B0EC 00000004 00001CF4   5011+         MVC   4(2,1),=AL2(124)   ++ INPUT XPLISTLEN XL2                02-IEATDUMP\n 00000578 9201 1006      00000006            5012+         MVI   6(1),1             ++ INPUT XVERSION XL1                 02-IEATDUMP\n 0000057C 41E0 D4D9               000004D9   5013+         LA    14,ASM_TDUMP_DESC  ++ INPUT XHDR                         02-IEATDUMP\n 00000580 50E0 102C               0000002C   5014+         ST    14,44(,1)          ++ INPUT XHDR                         02-IEATDUMP\n 00000584 0A33                               5015+         SVC 51      Invoke Transaction dump via SVC                    02-IEATDUMP\n 00000586                                    5016+AMGE0119 DS    0H                 ++ BYPASS INVOCATION                  02-IEATDUMP\n                                             5017+         POP   PRINT                                                    02-IEATDUMP\n                                             5018+*                                            IEATDUMP-1\n000000586 A7F4 0035               000005F0   5025+         BRC   15,#@LB3                                                 02-\n 0000058A                                    5026+#@LB1    DC    0H                                                       02-\n                                             5028+* 05/10/07 STORE IEATDUMP REASON CODE\n                                             5029+*        IEATDUMP dsn=ASM_TDUMP_NAME,                                  X\n                                                 +               HDR=ASM_TDUMP_DESC,                                     X\n                                                 +               MF=(E,ASM_IEATDUMP,COMPLETE)\n                                             5031+*                  MACDATE -03/03/06-<1>\n 0000058A                                    5032+M00M0123 DS    0H                             IEATDUMP-1                02-IEATDUMP\n                                             5033+              PUSH  PRINT                                               02-IEATDUMP\n                                             5034+                  PRINT ON                                              02-IEATDUMP\n 0000058A 4110 D3F8               000003F8   5035+         LA    1,ASM_IEATDUMP     ++ LOCATE ARG PARMS                   02-IEATDUMP\n 0000058E D77B 1000 1000 00000000 00000000   5036+         XC    0(124,1),0(1)      ++ INITIALIZE                         02-IEATDUMP\n 00000594 D203 1000 B060 00000000 00001C68   5037+         MVC   0(4,1),=CL4'TDMP'  ++ CL4 CONSTANT                       02-IEATDUMP\n 0000059A 9680 1008      00000008            5038+         OI    8(1),B'10000000'   ++ INPUT BL1                          02-IEATDUMP\n 0000059E D203 1034 B064 00000034 00001C6C   5039+         MVC   52(4,1),=AL4(0)    ++ INPUT XIDXAD                       02-IEATDUMP\n 000005A4 D203 103C B064 0000003C 00001C6C   5040+         MVC   60(4,1),=AL4(0)    ++ INPUT XSYMRECAD                    02-IEATDUMP\n 000005AA D203 1044 B064 00000044 00001C6C   5041+         MVC   68(4,1),=AL4(0)    ++ INPUT XINTOKENAD                   02-IEATDUMP\n 000005B0 D203 104C B064 0000004C 00001C6C   5042+         MVC   76(4,1),=AL4(0)    ++ INPUT XREMOTEAD                    02-IEATDUMP\n 000005B6 D203 1054 B064 00000054 00001C6C   5043+         MVC   84(4,1),=AL4(0)    ++ INPUT XPROBDESCAD                  02-IEATDUMP\n 000005BC D203 105C B064 0000005C 00001C6C   5044+         MVC   92(4,1),=AL4(0)    ++ INPUT XLISTAD                      02-IEATDUMP\n 000005C2 D203 1064 B064 00000064 00001C6C   5045+         MVC   100(4,1),=AL4(0)   ++ INPUT XSUBPLSTAD                   02-IEATDUMP\n 000005C8 D203 106C B064 0000006C 00001C6C   5046+         MVC   108(4,1),=AL4(0)   ++ INPUT XDSPLISTAD                   02-IEATDUMP\n 000005CE D203 1074 B064 00000074 00001C6C   5047+         MVC   116(4,1),=AL4(0)   ++ INPUT XECBAD                       02-IEATDUMP\n 000005D4 D201 1004 B0EC 00000004 00001CF4   5048+         MVC   4(2,1),=AL2(124)   ++ INPUT XPLISTLEN XL2                02-IEATDUMP\n 000005DA 9201 1006      00000006            5049+         MVI   6(1),1             ++ INPUT XVERSION XL1                 02-IEATDUMP\n 000005DE 41E0 D474               00000474   5050+         LA    14,ASM_TDUMP_NAME  ++ INPUT XDSN                         02-IEATDUMP\n 000005E2 50E0 1024               00000024   5051+         ST    14,36(,1)          ++ INPUT XDSN                         02-IEATDUMP\n 000005E6 41E0 D4D9               000004D9   5052+         LA    14,ASM_TDUMP_DESC  ++ INPUT XHDR                         02-IEATDUMP\n 000005EA 50E0 102C               0000002C   5053+         ST    14,44(,1)          ++ INPUT XHDR                         02-IEATDUMP\n 000005EE 0A33                               5054+         SVC 51      Invoke Transaction dump via SVC                    02-IEATDUMP\n1          asmif asm interfcae module                                                                           Page   32\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000005F0                                    5055+AMGE0123 DS    0H                 ++ BYPASS INVOCATION                  02-IEATDUMP\n                                             5056+         POP   PRINT                                                    02-IEATDUMP\n                                             5057+*                                            IEATDUMP-1\n0000005F0                                    5064+#@LB3    DC    0H                                                       02-\n                                             5066+* 19/12/11 IEATDUMP with DDNAME\n 000005F0 50F0 D060               00000060   5067+         ST    R15,ASM_RC                                               01-$$ASMIF\n 000005F4 5000 D064               00000064   5068+         ST    R0,ASM_REASON                                            01-$$ASMIF\n 000005F8 12FF                               5069+         LTR   R15,R15                                                  01-$$ASMIF\n 000005FA A784 0002               000005FE   5072+         BRC   8,TDUMP_NODUMP  (BC)                                     03-\n 000005FE                                    5073+TDUMP_NODUMP DS 0H                                                      01-$$ASMIF\n                                             5074+* 05/10/07 store IEATDUMP reason code\n 000005FE 0101                               5075+         PR    ,                 return back                            01-$$ASMIF\n                                             5076+* 18/11/05 LOGGER support\n                                             5077+* 13/01/06 browse logger\n                                             5078+*---------------------------------------------------------------------*\n                                             5079+* LOGGER support                                                      *\n                                             5080+* +0 0 connect to logger stream                                       *\n                                             5081+*   -1 discoonect                                                     *\n                                             5082+*    1 log a request                                                  *\n                                             5083+*    2 read logger from oldtoyoung                                    *\n                                             5084+*    3 read log from youngtoold (parm+8 contain addr , length)        *\n                                             5085+*    a stream to log                                                  *\n                                             5086+* +4 stream or logger name address                                    *\n                                             5087+* +8 length of the stream                                             *\n                                             5088+* +c time stemp field pointer                                         *\n                                             5089+*    +0 binary time value in .01 sec                                  *\n                                             5090+*    +4 DATE in YYYYDDD    char format                                *\n                                             5091+*---------------------------------------------------------------------*\n 00000600 9824 D114               00000114   5092+LOGGER   LM    R2,R4,ASM_PARMS     get parms                            01-$$ASMIF\n 00000604 5850 D124               00000124   5093+         L     R5,ASM_PARMS+16     get time                             01-$$ASMIF\n 00000608 1BFF                               5094+         SR    R15,R15             clear return                         01-$$ASMIF\n 0000060A 1222                               5095+         LTR   R2,R2               test code                            01-$$ASMIF\n 0000060C A744 004E               000006A8   5096+         JM    LOGGER_DISCO        disconnect                           01-$$ASMIF\n 00000610 A724 007C               00000708   5097+         JP    LOGGER_LOG          log                                  01-$$ASMIF\n 00000614 1244                               5098+         LTR   R4,R4               test length                          01-$$ASMIF\n 00000616 A7D4 033D               00000C90   5099+         JNP   LOGGER_08           return if not o.k.                   01-$$ASMIF\n 0000061A D219 D53E B114 0000053E 00001D1C   5100+         MVC   ASM_STREAMNAME,BLANKS init stream name                   01-$$ASMIF\n 00000620 A74E 001A               0000001A   5101+         CHI   R4,L'ASM_STREAMNAME TEST LENGTH                          01-$$ASMIF\n 00000624 A744 0004               0000062C   5102+         JL    *+8                  jump if ok.k                        01-$$ASMIF\n 00000628 A748 001A               0000001A   5103+         LHI   R4,L'ASM_STREAMNAME GET LENGTH                           01-$$ASMIF\n 0000062C A74A FFFF               FFFFFFFF   5104+         AHI   R4,-1               decr it                              01-$$ASMIF\n 00000630 4440 B360               00001F68   5105+         EX    R4,LOGGER_SETSTREAM set stream                           01-$$ASMIF\n 00000634 D519 D53E B114 0000053E 00001D1C   5106+         CLC   ASM_STREAMNAME,BLANKS active                             01-$$ASMIF\n 0000063A A784 032B               00000C90   5107+         JE    LOGGER_08           if no stream name                    01-$$ASMIF\n 0000063E D70F D558 D558 00000558 00000558   5108+         XC    ASM_STREAMTOKEN,ASM_STREAMTOKEN                          01-$$ASMIF\n                                             5109+*        ixgconn request=connect,                                      X\n                                                 +               STREAMNAME=ASM_STREAMNAME,                              X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               AUTH=WRITE,                                             X\n                                                 +               ANSAREA=ASM_ANSAREA,                                    X\n                                                 +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               RETCODE=ASM_RC,                                         X\n                                                 +               MF=(E,ASM_IXGCONN)\n                                             5111+*                   MACDATE -09/11/24-<2>\n1          asmif asm interfcae module                                                                           Page   33\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000644                                    5112+M00M0129 DS    0H                             IXGCONN-2                 02-IXGCONN\n                                             5113+              PUSH  PRINT                                               02-IXGCONN\n                                             5114+                   PRINT ON                                             02-IXGCONN\n 00000644 4110 D580               00000580   5115+         LA    1,ASM_IXGCONN      ++ LOCATE ARG PARMS                   02-IXGCONN\n 00000648 D7B9 1000 1000 00000000 00000000   5116+         XC    0(186,1),0(1)      ++ INITIALIZE                         02-IXGCONN\n 0000064E 9201 1004      00000004            5117+         MVI   4(1),1             ++ INPUT XVERSION XL1                 02-IXGCONN\n 00000652 96A8 1005      00000005            5118+         OI    5(1),B'10101000'   ++ INPUT BL1                          02-IXGCONN\n 00000656 9202 1007      00000007            5119+         MVI   7(1),2             ++ XL1 CONSTANT                       02-IXGCONN\n 0000065A 41E0 D768               00000768   5120+         LA    14,ASM_ANSAREA     ++ OUTPUT XANSAREA                    02-IXGCONN\n 0000065E 50E0 1008               00000008   5121+         ST    14,8(,1)           ++ OUTPUT XANSAREA                    02-IXGCONN\n 00000662 9640 102C      0000002C            5122+         OI    44(1),B'01000000'  ++ INPUT BL1                          02-IXGCONN\n 00000666 D203 1030 B068 00000030 00001C70   5123+         MVC   48(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGCONN\n 0000066C D219 1090 D53E 00000090 0000053E   5124+         MVC   144(26,1),ASM_STREAMNAME ++ INPUT XSTREAMNAME            02-IXGCONN\n 00000672 5010 1000               00000000   5125+         ST    1,0(,1)            ++ STORE ADDR OF PARM LIST            02-IXGCONN\n 00000676 4110 1000               00000000   5126+         LA    1,0(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGCONN\n 0000067A 58F0 0010               00000010   5127+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGCONN\n 0000067E 58FF 008C               0000008C   5128+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGCONN\n 00000682 58FF 0120               00000120   5129+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGCONN\n 00000686 58FF 007C               0000007C   5130+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGCONN\n 0000068A 4100 0007               00000007   5131+         LA    0,7                  EX OF CONNECT/DISCONNECT SERVICE    02-IXGCONN\n 0000068E 05EF                               5132+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGCONN\n 00000690 5810 1000               00000000   5133+         L     1,0(,1)            ++ RESTORE ADDR OF PARM LIST          02-IXGCONN\n 00000694 D20F D558 10AA 00000558 000000AA   5134+         MVC   ASM_STREAMTOKEN(16),170(1) ++ XSTREAMTOKEN CL16          02-IXGCONN\n 0000069A 50F0 D060               00000060   5135+         ST    15,ASM_RC          ++ SET RETURN CODE                    02-IXGCONN\n                                             5136+         POP   PRINT                                                    02-IXGCONN\n                                             5137+*                                            IXGCONN-2\n00000069E 12FF                               5139+         LTR   R15,R15             test code                            01-$$ASMIF\n 000006A0 A774 02F8               00000C90   5140+         JNZ   LOGGER_ERROR                                             01-$$ASMIF\n                                             5141+*        stimer wait,bintvl=logger_onesec wait a sec\n                                             5142+***      STIMER WAIT,BINTVL=LOGGER_ONESEC wait a sec\n 000006A4 A7F4 02FA               00000C98   5143+         J     LOGGER_00           jump out                             01-$$ASMIF\n 000006A8                                    5144+LOGGER_DISCO DS 0H                                                      01-$$ASMIF\n 000006A8 D40F D558 D558 00000558 00000558   5145+         NC    ASM_STREAMTOKEN,ASM_STREAMTOKEN                          01-$$ASMIF\n 000006AE A784 02F6               00000C9A   5146+         JZ    LOGGER_XX           jump if no                           01-$$ASMIF\n                                             5147+*        ixgconn request=disconnect,                                   X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               ANSAREA=ASM_ANSAREA,                                    X\n                                                 +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               RETCODE=ASM_RC,                                         X\n                                                 +               MF=(E,ASM_IXGCONN)\n                                             5149+*                   MACDATE -09/11/24-<2>\n 000006B2                                    5150+M00M0130 DS    0H                             IXGCONN-2                 02-IXGCONN\n                                             5151+              PUSH  PRINT                                               02-IXGCONN\n                                             5152+                   PRINT ON                                             02-IXGCONN\n 000006B2 4110 D580               00000580   5153+         LA    1,ASM_IXGCONN      ++ LOCATE ARG PARMS                   02-IXGCONN\n 000006B6 D7B9 1000 1000 00000000 00000000   5154+         XC    0(186,1),0(1)      ++ INITIALIZE                         02-IXGCONN\n 000006BC 9201 1004      00000004            5155+         MVI   4(1),1             ++ INPUT XVERSION XL1                 02-IXGCONN\n 000006C0 9202 1007      00000007            5156+         MVI   7(1),2             ++ XL1 CONSTANT                       02-IXGCONN\n 000006C4 41E0 D768               00000768   5157+         LA    14,ASM_ANSAREA     ++ OUTPUT XANSAREA                    02-IXGCONN\n 000006C8 50E0 1008               00000008   5158+         ST    14,8(,1)           ++ OUTPUT XANSAREA                    02-IXGCONN\n 000006CC D203 1030 B068 00000030 00001C70   5159+         MVC   48(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGCONN\n 000006D2 D20F 10AA D558 000000AA 00000558   5160+         MVC   170(16,1),ASM_STREAMTOKEN ++ INPUT XSTREAMTOKEN          02-IXGCONN\n 000006D8 5010 1000               00000000   5161+         ST    1,0(,1)            ++ STORE ADDR OF PARM LIST            02-IXGCONN\n 000006DC 4110 1000               00000000   5162+         LA    1,0(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGCONN\n1          asmif asm interfcae module                                                                           Page   34\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000006E0 58F0 0010               00000010   5163+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGCONN\n 000006E4 58FF 008C               0000008C   5164+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGCONN\n 000006E8 58FF 0120               00000120   5165+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGCONN\n 000006EC 58FF 007C               0000007C   5166+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGCONN\n 000006F0 4100 0007               00000007   5167+         LA    0,7                  EX OF CONNECT/DISCONNECT SERVICE    02-IXGCONN\n 000006F4 05EF                               5168+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGCONN\n 000006F6 5810 1000               00000000   5169+         L     1,0(,1)            ++ RESTORE ADDR OF PARM LIST          02-IXGCONN\n 000006FA 50F0 D060               00000060   5170+         ST    15,ASM_RC          ++ SET RETURN CODE                    02-IXGCONN\n                                             5171+         POP   PRINT                                                    02-IXGCONN\n                                             5172+*                                            IXGCONN-2\n0000006FE 12FF                               5174+         LTR   R15,R15             test code                            01-$$ASMIF\n 00000700 A774 02C8               00000C90   5175+         JNZ   LOGGER_ERROR        jump out                             01-$$ASMIF\n 00000704 A7F4 02CA               00000C98   5176+         J     LOGGER_00           jump back                            01-$$ASMIF\n 00000708                                    5177+LOGGER_LOG DS 0H                                                        01-$$ASMIF\n 00000708 D40F D558 D558 00000558 00000558   5178+         NC    ASM_STREAMTOKEN,ASM_STREAMTOKEN                          01-$$ASMIF\n 0000070E A784 02C6               00000C9A   5179+         JZ    LOGGER_XX           return if not                        01-$$ASMIF\n 00000712 A72E 0001               00000001   5180+         CHI   R2,1                check if log                         01-$$ASMIF\n 00000716 A724 0031               00000778   5181+         JH    LOGGER_BROWSE       jump if browse                       01-$$ASMIF\n 0000071A 1244                               5182+         LTR   R4,R4               test length                          01-$$ASMIF\n 0000071C A7D4 02BA               00000C90   5183+         JNP   LOGGER_08           jump if not positive                 01-$$ASMIF\n 00000720 1233                               5184+         LTR   R3,R3               test data                            01-$$ASMIF\n 00000722 A784 02B7               00000C90   5185+         JZ    LOGGER_08           jump if not data                     01-$$ASMIF\n 00000726 5040 D568               00000568   5186+         ST    R4,ASM_LOGGER_LENGTH save length                         01-$$ASMIF\n                                             5187+*        ixgwrite buffer=(r3),                                         X\n                                                 +               BLOCKLEN=ASM_LOGGER_LENGTH,                             X\n                                                 +               MODE=ASYNCNORESPONSE,                                   X\n                                                 +               ANSAREA=ASM_ANSAREA,                                    X\n                                                 +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               MF=(E,ASM_IXGWRITE)\n                                             5189+*                     MACDATE -09/11/24-<2>\n 0000072A                                    5190+M00M0131 DS    0H                             IXGWRITE-2                02-IXGWRITE\n                                             5191+              PUSH  PRINT                                               02-IXGWRITE\n                                             5192+                     PRINT ON                                           02-IXGWRITE\n 0000072A 4110 D640               00000640   5193+         LA    1,ASM_IXGWRITE     ++ LOCATE ARG PARMS                   02-IXGWRITE\n 0000072E D73F 1000 1000 00000000 00000000   5194+         XC    0(64,1),0(1)       ++ INITIALIZE                         02-IXGWRITE\n 00000734 9608 1001      00000001            5195+         OI    1(1),B'00001000'   ++ INPUT BL1                          02-IXGWRITE\n 00000738 5030 100C               0000000C   5196+         ST    R3,12(,1)          ++ INPUT XBUFFER                      02-IXGWRITE\n 0000073C D203 1010 D568 00000010 00000568   5197+         MVC   16(4,1),ASM_LOGGER_LENGTH ++ INPUT XBLOCKLEN             02-IXGWRITE\n 00000742 41E0 D768               00000768   5198+         LA    14,ASM_ANSAREA     ++ INPUT XANSAREA                     02-IXGWRITE\n 00000746 50E0 1020               00000020   5199+         ST    14,32(,1)          ++ INPUT XANSAREA                     02-IXGWRITE\n 0000074A D203 1024 B068 00000024 00001C70   5200+         MVC   36(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGWRITE\n 00000750 D20F 1030 D558 00000030 00000558   5201+         MVC   48(16,1),ASM_STREAMTOKEN ++ INPUT XSTREAMTOKEN           02-IXGWRITE\n 00000756 5010 1004               00000004   5202+         ST    1,4(,1)            ++ STORE ADDR OF PARM LIST            02-IXGWRITE\n 0000075A 4110 1004               00000004   5203+         LA    1,4(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGWRITE\n 0000075E 58F0 0010               00000010   5204+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGWRITE\n 00000762 58FF 008C               0000008C   5205+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGWRITE\n 00000766 58FF 0120               00000120   5206+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGWRITE\n 0000076A 58FF 007C               0000007C   5207+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGWRITE\n 0000076E 4100 0002               00000002   5208+         LA    0,2                  EX OF WRITE SERVICE                 02-IXGWRITE\n 00000772 05EF                               5209+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGWRITE\n                                             5210+         POP   PRINT                                                    02-IXGWRITE\n                                             5211+*                                            IXGWRITE-2\n1          asmif asm interfcae module                                                                           Page   35\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000774 A7F4 0293               00000C9A   5213+         J     LOGGER_XX           jump if ok                           01-$$ASMIF\n                                             5214+* 13/01/06 Logger Browse\n 00000778                                    5215+LOGGER_BROWSE DS  0H                                                    01-$$ASMIF\n 00000778 1233                               5216+         LTR  R3,R3                test addr pointer                    01-$$ASMIF\n 0000077A A784 028B               00000C90   5217+         JZ    LOGGER_08           jump if zero                         01-$$ASMIF\n 0000077E 1244                               5218+         LTR   R4,R4               test length addr                     01-$$ASMIF\n 00000780 A784 0288               00000C90   5219+         JZ    LOGGER_08           jump if zero                         01-$$ASMIF\n 00000784 D703 3000 3000 00000000 00000000   5220+         XC    0(4,R3),0(R3)       no addr                              01-$$ASMIF\n 0000078A D703 4000 4000 00000000 00000000   5221+         XC    0(4,R4),0(R4)       no length                            01-$$ASMIF\n 00000790 D503 D56C B194 0000056C 00001D9C   5222+         CLC   ASM_LOGGER_BUFFER,ZERO check buff                        01-$$ASMIF\n 00000796 A774 017D               00000A90   5223+         JNZ   LOGGER_BROWSE_STARTED jump if alaredy got                01-$$ASMIF\n 0000079A D203 D570 B368 00000570 00001F70   5224+         MVC   ASM_LOGGER_BUFFLEN,LOGGER_MAX_BUFFER                     01-$$ASMIF\n 000007A0 5840 D570               00000570   5225+         L     R4,ASM_LOGGER_BUFFLEN get length                         01-$$ASMIF\n                                             5226+*        storage obtain,length=(r4)\n 000007A4 1804                               5229+         LR     0,R4                         .STORAGE LENGTH            02-STORAGE\n 000007A6 58F0 B06C               00001C74   5230+         L      15,=AL1(B'00000000',(0*16),(0),B'00000010')            X02-STORAGE\n                                                 +                                             .CONTROL INFORMATION  @P9C\n 000007AA 58E0 0010               00000010   5231+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 000007AE 58EE 0304               00000304   5232+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 000007B2 58EE 00A0               000000A0   5233+         L      14,160(14,0)                 .OBTAIN LX/EX FOR OBTAIN   02-STORAGE\n 000007B6 B218 E000      00000000            5234+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 000007BA 12FF                               5235+         LTR   R15,R15             test return                          01-$$ASMIF\n 000007BC A774 026A               00000C90   5236+         JNZ   LOGGER_08           if no storage                        01-$$ASMIF\n 000007C0 5010 D56C               0000056C   5237+         ST    R1,ASM_LOGGER_BUFFER save buffer address                 01-$$ASMIF\n 000007C4 D203 D574 B05C 00000574 00001C64   5238+         MVC   ASM_LOGGER_BUFFER_OFFSET,=A(0)                           01-$$ASMIF\n 000007CA A72E 0002               00000002   5239+         CHI   R2,2                oldest requested                     01-$$ASMIF\n 000007CE A774 0065               00000898   5240+         JNE   LOGGER_BROWSE_START_YOUNGEST start youngest              01-$$ASMIF\n 000007D2 D503 B194 D120 00001D9C 00000120   5241+         CLC   ZERO,ASM_PARMS+12   active                               01-$$ASMIF\n 000007D8 A774 0031               0000083A   5242+         JNE   LOGGER_BROWSE_START_OLDEST_ALL jump if not               01-$$ASMIF\n                                             5243+*        IXGBRWSE REQUEST=START,                                       X\n                                                 +               OLDEST,                                                 X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               BROWSETOKEN=ASM_LOGGER_BROWSE_TOKEN,                    X\n                                                 +               MODE=SYNC,                                              X\n                                                 +               VIEW=ACTIVE,                                            X\n                                                 +               RETCODE=ASM_RC,                                         X\n                                                 +               RSNCODE=ASM_REASON,                                     X\n                                                 +               ANSAREA=ASM_ANSAREA,                                    X\n                                                 +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               MF=(E,ASM_IXGBRWSE)\n                                             5245+*                     MACDATE -10/02/17-<3>\n 000007DC                                    5246+M00M0134 DS    0H                             IXGBRWSE-3                02-IXGBRWSE\n                                             5247+              PUSH  PRINT                                               02-IXGBRWSE\n                                             5248+                     PRINT ON                                           02-IXGBRWSE\n 000007DC 4110 D680               00000680   5249+         LA    1,ASM_IXGBRWSE     ++ LOCATE ARG PARMS                   02-IXGBRWSE\n 000007E0 D75B 1000 1000 00000000 00000000   5250+         XC    0(92,1),0(1)       ++ INITIALIZE                         02-IXGBRWSE\n 000007E6 9201 1001      00000001            5251+         MVI   1(1),1             ++ INPUT XREQUEST                     02-IXGBRWSE\n 000007EA D601 1002 B0EE 00000002 00001CF6   5252+         OC    2(2,1),=BL2'0100100000101000' ++ INPUT BL2               02-IXGBRWSE\n 000007F0 41E0 D768               00000768   5253+         LA    14,ASM_ANSAREA     ++ INPUT XANSAREA                     02-IXGBRWSE\n 000007F4 50E0 1020               00000020   5254+         ST    14,32(,1)          ++ INPUT XANSAREA                     02-IXGBRWSE\n 000007F8 D203 1024 B068 00000024 00001C70   5255+         MVC   36(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGBRWSE\n 000007FE D20F 1028 D558 00000028 00000558   5256+         MVC   40(16,1),ASM_STREAMTOKEN ++ INPUT XSTREAMTOKEN           02-IXGBRWSE\n 00000804 41E0 D578               00000578   5257+         LA    14,ASM_LOGGER_BROWSE_TOKEN ++ INPUT XBROWSETOKEN         02-IXGBRWSE\n 00000808 50E0 1038               00000038   5258+         ST    14,56(,1)          ++ INPUT XBROWSETOKEN                 02-IXGBRWSE\n 0000080C 5010 1004               00000004   5259+         ST    1,4(,1)            ++ STORE ADDR OF PARM LIST            02-IXGBRWSE\n1          asmif asm interfcae module                                                                           Page   36\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000810 4110 1004               00000004   5260+         LA    1,4(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGBRWSE\n 00000814 58F0 0010               00000010   5261+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGBRWSE\n 00000818 58FF 008C               0000008C   5262+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGBRWSE\n 0000081C 58FF 0120               00000120   5263+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGBRWSE\n 00000820 58FF 007C               0000007C   5264+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGBRWSE\n 00000824 4100 0005               00000005   5265+         LA    0,5                  EX OF BROWSE SERVICE                02-IXGBRWSE\n 00000828 05EF                               5266+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGBRWSE\n 0000082A 5810 1000               00000000   5267+         L     1,0(,1)              RESTORE PARMLIST ADDRESS            02-IXGBRWSE\n 0000082E 50F0 D060               00000060   5268+         ST    15,ASM_RC          ++ SET RETURN CODE                    02-IXGBRWSE\n 00000832 5000 D064               00000064   5269+         ST    0,ASM_REASON       ++ SET REASON CODE                    02-IXGBRWSE\n                                             5270+         POP   PRINT                                                    02-IXGBRWSE\n                                             5271+*                                            IXGBRWSE-3\n000000836 A7F4 0126               00000A82   5273+         J     LOGGER_BROWSE_START_CHECK check start                    01-$$ASMIF\n 0000083A                                    5274+LOGGER_BROWSE_START_OLDEST_ALL DS 0H                                    01-$$ASMIF\n                                             5275+*        IXGBRWSE REQUEST=START,                                       X\n                                                 +               OLDEST,                                                 X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               BROWSETOKEN=ASM_LOGGER_BROWSE_TOKEN,                    X\n                                                 +               MODE=SYNC,                                              X\n                                                 +               VIEW=ALL,                                               X\n                                                 +               RETCODE=ASM_RC,                                         X\n                                                 +               RSNCODE=ASM_REASON,                                     X\n                                                 +               ANSAREA=ASM_ANSAREA,                                    X\n                                                 +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               MF=(E,ASM_IXGBRWSE)\n                                             5277+*                     MACDATE -10/02/17-<3>\n 0000083A                                    5278+M00M0135 DS    0H                             IXGBRWSE-3                02-IXGBRWSE\n                                             5279+              PUSH  PRINT                                               02-IXGBRWSE\n                                             5280+                     PRINT ON                                           02-IXGBRWSE\n 0000083A 4110 D680               00000680   5281+         LA    1,ASM_IXGBRWSE     ++ LOCATE ARG PARMS                   02-IXGBRWSE\n 0000083E D75B 1000 1000 00000000 00000000   5282+         XC    0(92,1),0(1)       ++ INITIALIZE                         02-IXGBRWSE\n 00000844 9201 1001      00000001            5283+         MVI   1(1),1             ++ INPUT XREQUEST                     02-IXGBRWSE\n 00000848 D601 1002 B0F0 00000002 00001CF8   5284+         OC    2(2,1),=BL2'0100100000011000' ++ INPUT BL2               02-IXGBRWSE\n 0000084E 41E0 D768               00000768   5285+         LA    14,ASM_ANSAREA     ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000852 50E0 1020               00000020   5286+         ST    14,32(,1)          ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000856 D203 1024 B068 00000024 00001C70   5287+         MVC   36(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGBRWSE\n 0000085C D20F 1028 D558 00000028 00000558   5288+         MVC   40(16,1),ASM_STREAMTOKEN ++ INPUT XSTREAMTOKEN           02-IXGBRWSE\n 00000862 41E0 D578               00000578   5289+         LA    14,ASM_LOGGER_BROWSE_TOKEN ++ INPUT XBROWSETOKEN         02-IXGBRWSE\n 00000866 50E0 1038               00000038   5290+         ST    14,56(,1)          ++ INPUT XBROWSETOKEN                 02-IXGBRWSE\n 0000086A 5010 1004               00000004   5291+         ST    1,4(,1)            ++ STORE ADDR OF PARM LIST            02-IXGBRWSE\n 0000086E 4110 1004               00000004   5292+         LA    1,4(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGBRWSE\n 00000872 58F0 0010               00000010   5293+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGBRWSE\n 00000876 58FF 008C               0000008C   5294+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGBRWSE\n 0000087A 58FF 0120               00000120   5295+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGBRWSE\n 0000087E 58FF 007C               0000007C   5296+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGBRWSE\n 00000882 4100 0005               00000005   5297+         LA    0,5                  EX OF BROWSE SERVICE                02-IXGBRWSE\n 00000886 05EF                               5298+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGBRWSE\n 00000888 5810 1000               00000000   5299+         L     1,0(,1)              RESTORE PARMLIST ADDRESS            02-IXGBRWSE\n 0000088C 50F0 D060               00000060   5300+         ST    15,ASM_RC          ++ SET RETURN CODE                    02-IXGBRWSE\n 00000890 5000 D064               00000064   5301+         ST    0,ASM_REASON       ++ SET REASON CODE                    02-IXGBRWSE\n                                             5302+         POP   PRINT                                                    02-IXGBRWSE\n                                             5303+*                                            IXGBRWSE-3\n000000894 A7F4 00F7               00000A82   5305+         J     LOGGER_BROWSE_START_CHECK check start                    01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   37\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000898                                    5306+LOGGER_BROWSE_START_YOUNGEST DS 0H                                      01-$$ASMIF\n 00000898 A72E 0003               00000003   5307+         CHI   R2,3                oldest requested                     01-$$ASMIF\n 0000089C A774 0065               00000966   5308+         JNE   LOGGER_BROWSE_START_SEARCH   start search                01-$$ASMIF\n 000008A0 D503 B194 D120 00001D9C 00000120   5309+         CLC   ZERO,ASM_PARMS+12   active                               01-$$ASMIF\n 000008A6 A774 0031               00000908   5310+         JNE   LOGGER_BROWSE_START_YOUNGEST_ALL jump if not             01-$$ASMIF\n                                             5311+*        IXGBRWSE REQUEST=START,                                       X\n                                                 +               YOUNGEST,                                               X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               BROWSETOKEN=ASM_LOGGER_BROWSE_TOKEN,                    X\n                                                 +               MODE=SYNC,                                              X\n                                                 +               VIEW=ACTIVE,                                            X\n                                                 +               RETCODE=ASM_RC,                                         X\n                                                 +               RSNCODE=ASM_REASON,                                     X\n                                                 +               ANSAREA=ASM_ANSAREA,                                    X\n                                                 +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               MF=(E,ASM_IXGBRWSE)\n                                             5313+*                     MACDATE -10/02/17-<3>\n 000008AA                                    5314+M00M0136 DS    0H                             IXGBRWSE-3                02-IXGBRWSE\n                                             5315+              PUSH  PRINT                                               02-IXGBRWSE\n                                             5316+                     PRINT ON                                           02-IXGBRWSE\n 000008AA 4110 D680               00000680   5317+         LA    1,ASM_IXGBRWSE     ++ LOCATE ARG PARMS                   02-IXGBRWSE\n 000008AE D75B 1000 1000 00000000 00000000   5318+         XC    0(92,1),0(1)       ++ INITIALIZE                         02-IXGBRWSE\n 000008B4 9201 1001      00000001            5319+         MVI   1(1),1             ++ INPUT XREQUEST                     02-IXGBRWSE\n 000008B8 D601 1002 B0F2 00000002 00001CFA   5320+         OC    2(2,1),=BL2'0100010000101000' ++ INPUT BL2               02-IXGBRWSE\n 000008BE 41E0 D768               00000768   5321+         LA    14,ASM_ANSAREA     ++ INPUT XANSAREA                     02-IXGBRWSE\n 000008C2 50E0 1020               00000020   5322+         ST    14,32(,1)          ++ INPUT XANSAREA                     02-IXGBRWSE\n 000008C6 D203 1024 B068 00000024 00001C70   5323+         MVC   36(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGBRWSE\n 000008CC D20F 1028 D558 00000028 00000558   5324+         MVC   40(16,1),ASM_STREAMTOKEN ++ INPUT XSTREAMTOKEN           02-IXGBRWSE\n 000008D2 41E0 D578               00000578   5325+         LA    14,ASM_LOGGER_BROWSE_TOKEN ++ INPUT XBROWSETOKEN         02-IXGBRWSE\n 000008D6 50E0 1038               00000038   5326+         ST    14,56(,1)          ++ INPUT XBROWSETOKEN                 02-IXGBRWSE\n 000008DA 5010 1004               00000004   5327+         ST    1,4(,1)            ++ STORE ADDR OF PARM LIST            02-IXGBRWSE\n 000008DE 4110 1004               00000004   5328+         LA    1,4(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGBRWSE\n 000008E2 58F0 0010               00000010   5329+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGBRWSE\n 000008E6 58FF 008C               0000008C   5330+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGBRWSE\n 000008EA 58FF 0120               00000120   5331+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGBRWSE\n 000008EE 58FF 007C               0000007C   5332+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGBRWSE\n 000008F2 4100 0005               00000005   5333+         LA    0,5                  EX OF BROWSE SERVICE                02-IXGBRWSE\n 000008F6 05EF                               5334+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGBRWSE\n 000008F8 5810 1000               00000000   5335+         L     1,0(,1)              RESTORE PARMLIST ADDRESS            02-IXGBRWSE\n 000008FC 50F0 D060               00000060   5336+         ST    15,ASM_RC          ++ SET RETURN CODE                    02-IXGBRWSE\n 00000900 5000 D064               00000064   5337+         ST    0,ASM_REASON       ++ SET REASON CODE                    02-IXGBRWSE\n                                             5338+         POP   PRINT                                                    02-IXGBRWSE\n                                             5339+*                                            IXGBRWSE-3\n000000904 A7F4 00BF               00000A82   5341+         J     LOGGER_BROWSE_START_CHECK check start                    01-$$ASMIF\n 00000908                                    5342+LOGGER_BROWSE_START_YOUNGEST_ALL  DS 0H                                 01-$$ASMIF\n                                             5343+*        IXGBRWSE REQUEST=START,                                       X\n                                                 +               YOUNGEST,                                               X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               BROWSETOKEN=ASM_LOGGER_BROWSE_TOKEN,                    X\n                                                 +               MODE=SYNC,                                              X\n                                                 +               VIEW=ALL,                                               X\n                                                 +               RETCODE=ASM_RC,                                         X\n                                                 +               RSNCODE=ASM_REASON,                                     X\n                                                 +               ANSAREA=ASM_ANSAREA,                                    X\n1          asmif asm interfcae module                                                                           Page   38\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                                +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               MF=(E,ASM_IXGBRWSE)\n                                             5345+*                     MACDATE -10/02/17-<3>\n 00000908                                    5346+M00M0137 DS    0H                             IXGBRWSE-3                02-IXGBRWSE\n                                             5347+              PUSH  PRINT                                               02-IXGBRWSE\n                                             5348+                     PRINT ON                                           02-IXGBRWSE\n 00000908 4110 D680               00000680   5349+         LA    1,ASM_IXGBRWSE     ++ LOCATE ARG PARMS                   02-IXGBRWSE\n 0000090C D75B 1000 1000 00000000 00000000   5350+         XC    0(92,1),0(1)       ++ INITIALIZE                         02-IXGBRWSE\n 00000912 9201 1001      00000001            5351+         MVI   1(1),1             ++ INPUT XREQUEST                     02-IXGBRWSE\n 00000916 D601 1002 B0F4 00000002 00001CFC   5352+         OC    2(2,1),=BL2'0100010000011000' ++ INPUT BL2               02-IXGBRWSE\n 0000091C 41E0 D768               00000768   5353+         LA    14,ASM_ANSAREA     ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000920 50E0 1020               00000020   5354+         ST    14,32(,1)          ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000924 D203 1024 B068 00000024 00001C70   5355+         MVC   36(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGBRWSE\n 0000092A D20F 1028 D558 00000028 00000558   5356+         MVC   40(16,1),ASM_STREAMTOKEN ++ INPUT XSTREAMTOKEN           02-IXGBRWSE\n 00000930 41E0 D578               00000578   5357+         LA    14,ASM_LOGGER_BROWSE_TOKEN ++ INPUT XBROWSETOKEN         02-IXGBRWSE\n 00000934 50E0 1038               00000038   5358+         ST    14,56(,1)          ++ INPUT XBROWSETOKEN                 02-IXGBRWSE\n 00000938 5010 1004               00000004   5359+         ST    1,4(,1)            ++ STORE ADDR OF PARM LIST            02-IXGBRWSE\n 0000093C 4110 1004               00000004   5360+         LA    1,4(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGBRWSE\n 00000940 58F0 0010               00000010   5361+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGBRWSE\n 00000944 58FF 008C               0000008C   5362+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGBRWSE\n 00000948 58FF 0120               00000120   5363+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGBRWSE\n 0000094C 58FF 007C               0000007C   5364+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGBRWSE\n 00000950 4100 0005               00000005   5365+         LA    0,5                  EX OF BROWSE SERVICE                02-IXGBRWSE\n 00000954 05EF                               5366+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGBRWSE\n 00000956 5810 1000               00000000   5367+         L     1,0(,1)              RESTORE PARMLIST ADDRESS            02-IXGBRWSE\n 0000095A 50F0 D060               00000060   5368+         ST    15,ASM_RC          ++ SET RETURN CODE                    02-IXGBRWSE\n 0000095E 5000 D064               00000064   5369+         ST    0,ASM_REASON       ++ SET REASON CODE                    02-IXGBRWSE\n                                             5370+         POP   PRINT                                                    02-IXGBRWSE\n                                             5371+*                                            IXGBRWSE-3\n000000962 A7F4 0090               00000A82   5373+         J     LOGGER_BROWSE_START_CHECK check start                    01-$$ASMIF\n                                             5374+* 16/07/10 LOGGER browse TIME search\n 00000966                                    5375+LOGGER_BROWSE_START_SEARCH DS 0H                                        01-$$ASMIF\n 00000966 A728 0002               00000002   5376+         LHI   R2,2                oldest requested                     01-$$ASMIF\n 0000096A 1255                               5377+         LTR  R5,R5                                                     01-$$ASMIF\n 0000096C A784 FF06               00000778   5378+         JZ   LOGGER_BROWSE                                             01-$$ASMIF\n 00000970 D700 D6DC D6DC 000006DC 000006DC   5379+         XC    ASM_LOGGER_CONVVAL,ASM_LOGGER_CONVVAL                    01-$$ASMIF\n 00000976 D203 D6DC 5000 000006DC 00000000   5380+         MVC   ASM_LOGGER_CONVVAL(4),0(R5)                              01-$$ASMIF\n 0000097C F248 D6E4 5004 000006E4 00000004   5381+         PACK  ASM_LOGGER_CONVVAL+8(5),4(9,R5)                          01-$$ASMIF\n 00000982 D700 D6E8 D6E8 000006E8 000006E8   5382+         XC    ASM_LOGGER_CONVVAL+12,ASM_LOGGER_CONVVAL+12              01-$$ASMIF\n                                             5383+*        convtod TIMETYPE=bin,datetype=yyyyddd,todval=asm_logger_stck, X\n                                                 +               CONVVAL=ASM_LOGGER_CONVVAL,MF=(E,ASM_LOGGER_CONVTOD)\n                                             5385+*        MACDATE  05/30/98                                         @L1C\n 00000988 5110 D6FC               000006FC   5387+         LAE   1,ASM_LOGGER_CONVTOD    PARAMETER LIST ADDRESS           02-CONVTOD\n 0000098C D71F 1000 1000 00000000 00000000   5388+         XC    0(32,1),0(1)            CLEAR PARAMETER LIST             02-CONVTOD\n 00000992 9200 1002      00000002            5389+         MVI   2(1),0                  SET DATETYPE FLAGS IN PARM LIST  02-CONVTOD\n 00000996 9201 1003      00000003            5390+         MVI   3(1),1                  SET TIMETYPE FLAGS IN PARM LIST  02-CONVTOD\n 0000099A 51E0 D6DC               000006DC   5391+         LAE   14,ASM_LOGGER_CONVVAL   ADDRESS OF CONVVAL               02-CONVTOD\n 0000099E D20F 1008 E000 00000008 00000000   5392+         MVC   8(16,1),0(14)           SET CONVVAL IN PARM LIST    @P1C 02-CONVTOD\n 000009A4 58E0 0010               00000010   5393+         L     14,16(0,0)              CVT ADDRESS                      02-CONVTOD\n 000009A8 58EE 0304               00000304   5394+         L     14,772(14,0)            SFT ADDRESS                      02-CONVTOD\n 000009AC 58EE 0160               00000160   5395+         L     14,352(14,0)            LX/EX FOR SERVICE ROUTINE        02-CONVTOD\n 000009B0 B218 E000      00000000            5396+         PC    0(14)                                                    02-CONVTOD\n 000009B4 51E0 D6EC               000006EC   5397+         LAE   14,ASM_LOGGER_STCK      ADDRESS OF TODVAL                02-CONVTOD\n 000009B8 D207 E000 1018 00000000 00000018   5398+         MVC   0(8,14),24(1)           MOVE OUTPUT FROM PARM LIST       02-CONVTOD\n1          asmif asm interfcae module                                                                           Page   39\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            5399+*                                      TO TODVAL AREA\n                                             5400+**       CLC   ZERO,ASM_PARMS+12   active\n                                             5401+**       JNE   LOGGER_BROWSE_START_SEARCH_ALL  jump if not\n                                             5402+*        IXGBRWSE REQUEST=START,                                       X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               BROWSETOKEN=ASM_LOGGER_BROWSE_TOKEN,                    X\n                                                 +               MODE=SYNC,                                              X\n                                                 +               VIEW=ACTIVE,                                            X\n                                                 +               SEARCH=ASM_LOGGER_STCK,                                 X\n                                                 +               GMT=NO,                                                 X\n                                                 +               RETCODE=ASM_RC,                                         X\n                                                 +               RSNCODE=ASM_REASON,                                     X\n                                                 +               ANSAREA=ASM_ANSAREA,                                    X\n                                                 +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               MF=(E,ASM_IXGBRWSE)\n                                             5404+*                     MACDATE -10/02/17-<3>\n 000009BE                                    5405+M00M0140 DS    0H                             IXGBRWSE-3                02-IXGBRWSE\n                                             5406+              PUSH  PRINT                                               02-IXGBRWSE\n                                             5407+                     PRINT ON                                           02-IXGBRWSE\n 000009BE 4110 D680               00000680   5408+         LA    1,ASM_IXGBRWSE     ++ LOCATE ARG PARMS                   02-IXGBRWSE\n 000009C2 D75B 1000 1000 00000000 00000000   5409+         XC    0(92,1),0(1)       ++ INITIALIZE                         02-IXGBRWSE\n 000009C8 9201 1001      00000001            5410+         MVI   1(1),1             ++ INPUT XREQUEST                     02-IXGBRWSE\n 000009CC D601 1002 B0F6 00000002 00001CFE   5411+         OC    2(2,1),=BL2'0100001000101000' ++ INPUT BL2               02-IXGBRWSE\n 000009D2 41E0 D768               00000768   5412+         LA    14,ASM_ANSAREA     ++ INPUT XANSAREA                     02-IXGBRWSE\n 000009D6 50E0 1020               00000020   5413+         ST    14,32(,1)          ++ INPUT XANSAREA                     02-IXGBRWSE\n 000009DA D203 1024 B068 00000024 00001C70   5414+         MVC   36(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGBRWSE\n 000009E0 D20F 1028 D558 00000028 00000558   5415+         MVC   40(16,1),ASM_STREAMTOKEN ++ INPUT XSTREAMTOKEN           02-IXGBRWSE\n 000009E6 41E0 D578               00000578   5416+         LA    14,ASM_LOGGER_BROWSE_TOKEN ++ INPUT XBROWSETOKEN         02-IXGBRWSE\n 000009EA 50E0 1038               00000038   5417+         ST    14,56(,1)          ++ INPUT XBROWSETOKEN                 02-IXGBRWSE\n 000009EE D207 103C D6EC 0000003C 000006EC   5418+         MVC   60(8,1),ASM_LOGGER_STCK ++ INPUT XSEARCH                 02-IXGBRWSE\n 000009F4 5010 1004               00000004   5419+         ST    1,4(,1)            ++ STORE ADDR OF PARM LIST            02-IXGBRWSE\n 000009F8 4110 1004               00000004   5420+         LA    1,4(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGBRWSE\n 000009FC 58F0 0010               00000010   5421+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGBRWSE\n 00000A00 58FF 008C               0000008C   5422+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGBRWSE\n 00000A04 58FF 0120               00000120   5423+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGBRWSE\n 00000A08 58FF 007C               0000007C   5424+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGBRWSE\n 00000A0C 4100 0005               00000005   5425+         LA    0,5                  EX OF BROWSE SERVICE                02-IXGBRWSE\n 00000A10 05EF                               5426+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGBRWSE\n 00000A12 5810 1000               00000000   5427+         L     1,0(,1)              RESTORE PARMLIST ADDRESS            02-IXGBRWSE\n 00000A16 50F0 D060               00000060   5428+         ST    15,ASM_RC          ++ SET RETURN CODE                    02-IXGBRWSE\n 00000A1A 5000 D064               00000064   5429+         ST    0,ASM_REASON       ++ SET REASON CODE                    02-IXGBRWSE\n                                             5430+         POP   PRINT                                                    02-IXGBRWSE\n                                             5431+*                                            IXGBRWSE-3\n000000A1E A7F4 0032               00000A82   5433+         J     LOGGER_BROWSE_START_CHECK check start                    01-$$ASMIF\n 00000A22                                    5434+LOGGER_BROWSE_START_SEARCH_ALL  DS 0H                                   01-$$ASMIF\n                                             5435+*        IXGBRWSE REQUEST=START,                                       X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               BROWSETOKEN=ASM_LOGGER_BROWSE_TOKEN,                    X\n                                                 +               MODE=SYNC,                                              X\n                                                 +               VIEW=ALL,                                               X\n                                                 +               SEARCH=ASM_LOGGER_STCK,                                 X\n                                                 +               GMT=NO,                                                 X\n                                                 +               RETCODE=ASM_RC,                                         X\n                                                 +               RSNCODE=ASM_REASON,                                     X\n1          asmif asm interfcae module                                                                           Page   40\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                                +               ANSAREA=ASM_ANSAREA,                                    X\n                                                 +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               MF=(E,ASM_IXGBRWSE)\n                                             5437+*                     MACDATE -10/02/17-<3>\n 00000A22                                    5438+M00M0141 DS    0H                             IXGBRWSE-3                02-IXGBRWSE\n                                             5439+              PUSH  PRINT                                               02-IXGBRWSE\n                                             5440+                     PRINT ON                                           02-IXGBRWSE\n 00000A22 4110 D680               00000680   5441+         LA    1,ASM_IXGBRWSE     ++ LOCATE ARG PARMS                   02-IXGBRWSE\n 00000A26 D75B 1000 1000 00000000 00000000   5442+         XC    0(92,1),0(1)       ++ INITIALIZE                         02-IXGBRWSE\n 00000A2C 9201 1001      00000001            5443+         MVI   1(1),1             ++ INPUT XREQUEST                     02-IXGBRWSE\n 00000A30 D601 1002 B0F8 00000002 00001D00   5444+         OC    2(2,1),=BL2'0100001000011000' ++ INPUT BL2               02-IXGBRWSE\n 00000A36 41E0 D768               00000768   5445+         LA    14,ASM_ANSAREA     ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000A3A 50E0 1020               00000020   5446+         ST    14,32(,1)          ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000A3E D203 1024 B068 00000024 00001C70   5447+         MVC   36(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGBRWSE\n 00000A44 D20F 1028 D558 00000028 00000558   5448+         MVC   40(16,1),ASM_STREAMTOKEN ++ INPUT XSTREAMTOKEN           02-IXGBRWSE\n 00000A4A 41E0 D578               00000578   5449+         LA    14,ASM_LOGGER_BROWSE_TOKEN ++ INPUT XBROWSETOKEN         02-IXGBRWSE\n 00000A4E 50E0 1038               00000038   5450+         ST    14,56(,1)          ++ INPUT XBROWSETOKEN                 02-IXGBRWSE\n 00000A52 D207 103C D6EC 0000003C 000006EC   5451+         MVC   60(8,1),ASM_LOGGER_STCK ++ INPUT XSEARCH                 02-IXGBRWSE\n 00000A58 5010 1004               00000004   5452+         ST    1,4(,1)            ++ STORE ADDR OF PARM LIST            02-IXGBRWSE\n 00000A5C 4110 1004               00000004   5453+         LA    1,4(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGBRWSE\n 00000A60 58F0 0010               00000010   5454+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGBRWSE\n 00000A64 58FF 008C               0000008C   5455+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGBRWSE\n 00000A68 58FF 0120               00000120   5456+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGBRWSE\n 00000A6C 58FF 007C               0000007C   5457+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGBRWSE\n 00000A70 4100 0005               00000005   5458+         LA    0,5                  EX OF BROWSE SERVICE                02-IXGBRWSE\n 00000A74 05EF                               5459+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGBRWSE\n 00000A76 5810 1000               00000000   5460+         L     1,0(,1)              RESTORE PARMLIST ADDRESS            02-IXGBRWSE\n 00000A7A 50F0 D060               00000060   5461+         ST    15,ASM_RC          ++ SET RETURN CODE                    02-IXGBRWSE\n 00000A7E 5000 D064               00000064   5462+         ST    0,ASM_REASON       ++ SET REASON CODE                    02-IXGBRWSE\n                                             5463+         POP   PRINT                                                    02-IXGBRWSE\n                                             5464+*                                            IXGBRWSE-3\n0                                            5466+* 16/07/10 LOGGER browse TIME search\n 00000A82                                    5467+LOGGER_BROWSE_START_CHECK DS 0H                                         01-$$ASMIF\n 00000A82 A7FE 0004               00000004   5468+         CHI   R15,4               maybe o                              01-$$ASMIF\n 00000A86 A724 0105               00000C90   5469+         JH    LOGGER_ERROR        error                                01-$$ASMIF\n 00000A8A 1BFF                               5470+         SR    R15,R15             clear reg                            01-$$ASMIF\n 00000A8C 5020 D57C               0000057C   5471+         ST    R2,ASM_LOGGER_DIRECTION savedirection                    01-$$ASMIF\n 00000A90                                    5472+LOGGER_BROWSE_STARTED DS 0H                                             01-$$ASMIF\n 00000A90 D503 D574 B194 00000574 00001D9C   5473+         CLC   ASM_LOGGER_BUFFER_OFFSET,ZERO  check offset              01-$$ASMIF\n 00000A96 A774 00D1               00000C38   5474+         JNE   LOGGER_READCURSOR_INBLOCK jump if in the block           01-$$ASMIF\n 00000A9A D203 D574 B070 00000574 00001C78   5475+         MVC   ASM_LOGGER_BUFFER_OFFSET,=A(8) init offset               01-$$ASMIF\n 00000AA0 BF3F D56C               0000056C   5476+         ICM   R3,15,ASM_LOGGER_BUFFER   get buffer addr                01-$$ASMIF\n 00000AA4 9502 D57F      0000057F            5477+         CLI   ASM_LOGGER_DIRECTION+3,2  oldtoyoung requested           01-$$ASMIF\n 00000AA8 A774 003B               00000B1E   5478+         JNE   LOGGER_READCURSOR_YOUNGEST start youngest                01-$$ASMIF\n                                             5479+*        IXGBRWSE REQUEST=READCURSOR,                                  X\n                                                 +               DIRECTION=OLDTOYOUNG,                                   X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               BROWSETOKEN=ASM_LOGGER_BROWSE_TOKEN,                    X\n                                                 +               BUFFER=(R3),                                            X\n                                                 +               BUFFLEN=ASM_LOGGER_BUFFLEN,                             X\n                                                 +               MULTIBLOCK=YES,                                         X\n                                                 +               RETBLOCKINFO=YES,                                       X\n                                                 +               MODE=SYNC,                                              X\n                                                 +               RETCODE=ASM_RC,                                         X\n1          asmif asm interfcae module                                                                           Page   41\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                                +               ANSAREA=ASM_ANSAREA,                                    X\n                                                 +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               RSNCODE=ASM_REASON,                                     X\n                                                 +               MF=(E,ASM_IXGBRWSE)\n                                             5481+*                     MACDATE -10/02/17-<3>\n 00000AAC                                    5482+M00M0142 DS    0H                             IXGBRWSE-3                02-IXGBRWSE\n                                             5483+              PUSH  PRINT                                               02-IXGBRWSE\n                                             5484+                     PRINT ON                                           02-IXGBRWSE\n 00000AAC 4110 D680               00000680   5485+         LA    1,ASM_IXGBRWSE     ++ LOCATE ARG PARMS                   02-IXGBRWSE\n 00000AB0 D777 1000 1000 00000000 00000000   5486+         XC    0(120,1),0(1)      ++ INITIALIZE                         02-IXGBRWSE\n 00000AB6 9202 1000      00000000            5487+         MVI   0(1),2             ++ INPUT XVERSION XL1                 02-IXGBRWSE\n 00000ABA 9202 1001      00000001            5488+         MVI   1(1),2             ++ INPUT XREQUEST                     02-IXGBRWSE\n 00000ABE D601 1002 B0FA 00000002 00001D02   5489+         OC    2(2,1),=BL2'0100000000000110' ++ INPUT BL2               02-IXGBRWSE\n 00000AC4 5030 1008               00000008   5490+         ST    R3,8(,1)           ++ INPUT XBUFFER                      02-IXGBRWSE\n 00000AC8 D203 1010 D570 00000010 00000570   5491+         MVC   16(4,1),ASM_LOGGER_BUFFLEN ++ INPUT XBUFFLEN             02-IXGBRWSE\n 00000ACE 41E0 D768               00000768   5492+         LA    14,ASM_ANSAREA     ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000AD2 50E0 1020               00000020   5493+         ST    14,32(,1)          ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000AD6 D203 1024 B068 00000024 00001C70   5494+         MVC   36(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGBRWSE\n 00000ADC D20F 1028 D558 00000028 00000558   5495+         MVC   40(16,1),ASM_STREAMTOKEN ++ INPUT XSTREAMTOKEN           02-IXGBRWSE\n 00000AE2 41E0 D578               00000578   5496+         LA    14,ASM_LOGGER_BROWSE_TOKEN ++ INPUT XBROWSETOKEN         02-IXGBRWSE\n 00000AE6 50E0 1038               00000038   5497+         ST    14,56(,1)          ++ INPUT XBROWSETOKEN                 02-IXGBRWSE\n 00000AEA D603 1064 B074 00000064 00001C7C   5498+         OC    100(4,1),=BL4'00011000000000000000000000000000' ++ INPUTX02-IXGBRWSE\n                                                 +                BL4\n 00000AF0 5010 1004               00000004   5499+         ST    1,4(,1)            ++ STORE ADDR OF PARM LIST            02-IXGBRWSE\n 00000AF4 4110 1004               00000004   5500+         LA    1,4(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGBRWSE\n 00000AF8 58F0 0010               00000010   5501+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGBRWSE\n 00000AFC 58FF 008C               0000008C   5502+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGBRWSE\n 00000B00 58FF 0120               00000120   5503+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGBRWSE\n 00000B04 58FF 007C               0000007C   5504+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGBRWSE\n 00000B08 4100 0005               00000005   5505+         LA    0,5                  EX OF BROWSE SERVICE                02-IXGBRWSE\n 00000B0C 05EF                               5506+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGBRWSE\n 00000B0E 5810 1000               00000000   5507+         L     1,0(,1)              RESTORE PARMLIST ADDRESS            02-IXGBRWSE\n 00000B12 50F0 D060               00000060   5508+         ST    15,ASM_RC          ++ SET RETURN CODE                    02-IXGBRWSE\n 00000B16 5000 D064               00000064   5509+         ST    0,ASM_REASON       ++ SET REASON CODE                    02-IXGBRWSE\n                                             5510+         POP   PRINT                                                    02-IXGBRWSE\n                                             5511+*                                            IXGBRWSE-3\n000000B1A A7F4 0039               00000B8C   5513+         J     LOGGER_READCURSOR_CHECK check start                      01-$$ASMIF\n 00000B1E                                    5514+LOGGER_READCURSOR_YOUNGEST DS 0H                                        01-$$ASMIF\n                                             5515+*        IXGBRWSE REQUEST=READCURSOR,                                  X\n                                                 +               DIRECTION=YOUNGTOOLD,                                   X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               BROWSETOKEN=ASM_LOGGER_BROWSE_TOKEN,                    X\n                                                 +               BUFFER=(R3),                                            X\n                                                 +               BUFFLEN=ASM_LOGGER_BUFFLEN,                             X\n                                                 +               MULTIBLOCK=YES,                                         X\n                                                 +               RETBLOCKINFO=YES,                                       X\n                                                 +               MODE=SYNC,                                              X\n                                                 +               RETCODE=ASM_RC,                                         X\n                                                 +               RSNCODE=ASM_REASON,                                     X\n                                                 +               ANSAREA=ASM_ANSAREA,                                    X\n                                                 +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               MF=(E,ASM_IXGBRWSE)\n                                             5517+*                     MACDATE -10/02/17-<3>\n 00000B1E                                    5518+M00M0143 DS    0H                             IXGBRWSE-3                02-IXGBRWSE\n1          asmif asm interfcae module                                                                           Page   42\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            5519+              PUSH  PRINT                                               02-IXGBRWSE\n                                             5520+                     PRINT ON                                           02-IXGBRWSE\n 00000B1E 4110 D680               00000680   5521+         LA    1,ASM_IXGBRWSE     ++ LOCATE ARG PARMS                   02-IXGBRWSE\n 00000B22 D777 1000 1000 00000000 00000000   5522+         XC    0(120,1),0(1)      ++ INITIALIZE                         02-IXGBRWSE\n 00000B28 9202 1000      00000000            5523+         MVI   0(1),2             ++ INPUT XVERSION XL1                 02-IXGBRWSE\n 00000B2C 9202 1001      00000001            5524+         MVI   1(1),2             ++ INPUT XREQUEST                     02-IXGBRWSE\n 00000B30 D601 1002 B0FC 00000002 00001D04   5525+         OC    2(2,1),=BL2'1100000000000110' ++ INPUT BL2               02-IXGBRWSE\n 00000B36 5030 1008               00000008   5526+         ST    R3,8(,1)           ++ INPUT XBUFFER                      02-IXGBRWSE\n 00000B3A D203 1010 D570 00000010 00000570   5527+         MVC   16(4,1),ASM_LOGGER_BUFFLEN ++ INPUT XBUFFLEN             02-IXGBRWSE\n 00000B40 41E0 D768               00000768   5528+         LA    14,ASM_ANSAREA     ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000B44 50E0 1020               00000020   5529+         ST    14,32(,1)          ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000B48 D203 1024 B068 00000024 00001C70   5530+         MVC   36(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGBRWSE\n 00000B4E D20F 1028 D558 00000028 00000558   5531+         MVC   40(16,1),ASM_STREAMTOKEN ++ INPUT XSTREAMTOKEN           02-IXGBRWSE\n 00000B54 41E0 D578               00000578   5532+         LA    14,ASM_LOGGER_BROWSE_TOKEN ++ INPUT XBROWSETOKEN         02-IXGBRWSE\n 00000B58 50E0 1038               00000038   5533+         ST    14,56(,1)          ++ INPUT XBROWSETOKEN                 02-IXGBRWSE\n 00000B5C D603 1064 B074 00000064 00001C7C   5534+         OC    100(4,1),=BL4'00011000000000000000000000000000' ++ INPUTX02-IXGBRWSE\n                                                 +                BL4\n 00000B62 5010 1004               00000004   5535+         ST    1,4(,1)            ++ STORE ADDR OF PARM LIST            02-IXGBRWSE\n 00000B66 4110 1004               00000004   5536+         LA    1,4(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGBRWSE\n 00000B6A 58F0 0010               00000010   5537+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGBRWSE\n 00000B6E 58FF 008C               0000008C   5538+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGBRWSE\n 00000B72 58FF 0120               00000120   5539+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGBRWSE\n 00000B76 58FF 007C               0000007C   5540+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGBRWSE\n 00000B7A 4100 0005               00000005   5541+         LA    0,5                  EX OF BROWSE SERVICE                02-IXGBRWSE\n 00000B7E 05EF                               5542+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGBRWSE\n 00000B80 5810 1000               00000000   5543+         L     1,0(,1)              RESTORE PARMLIST ADDRESS            02-IXGBRWSE\n 00000B84 50F0 D060               00000060   5544+         ST    15,ASM_RC          ++ SET RETURN CODE                    02-IXGBRWSE\n 00000B88 5000 D064               00000064   5545+         ST    0,ASM_REASON       ++ SET REASON CODE                    02-IXGBRWSE\n                                             5546+         POP   PRINT                                                    02-IXGBRWSE\n                                             5547+*                                            IXGBRWSE-3\n000000B8C                                    5549+LOGGER_READCURSOR_CHECK DS 0H                                           01-$$ASMIF\n 00000B8C A7FE 0008               00000008   5550+         CHI   R15,8               maybe o                              01-$$ASMIF\n 00000B90 A744 0054               00000C38   5551+         JL    LOGGER_READCURSOR_OK if acceptable                       01-$$ASMIF\n 00000B94 A724 007E               00000C90   5552+         JH    LOGGER_ERROR        error                                01-$$ASMIF\n 00000B98 A70E 0848               00000848   5553+         CHI   R0,X'0848'          check r0                             01-$$ASMIF\n 00000B9C A774 007A               00000C90   5554+         JNE   LOGGER_ERROR        if not, error                        01-$$ASMIF\n 00000BA0                                    5555+LOGGER_READCURSOR_NOMORE DS 0H                                          01-$$ASMIF\n 00000BA0 BF3F D56C               0000056C   5556+         ICM   R3,15,ASM_LOGGER_BUFFER get buffer address               01-$$ASMIF\n 00000BA4 A784 0013               00000BCA   5557+         JZ    LOGGER_READCURSOR_END_NOFREE                             01-$$ASMIF\n 00000BA8 5840 D570               00000570   5558+         L     R4,ASM_LOGGER_BUFFLEN get length                         01-$$ASMIF\n                                             5559+*        storage release,addr=(r3),length=(r4)\n 00000BAC 1804                               5562+         LR     0,R4                         .STORAGE LENGTH            02-STORAGE\n 00000BAE 1813                               5563+         LR     1,R3                         .ADDRESS OF STORAGE        02-STORAGE\n 00000BB0 A7F8 0003               00000003   5564+         LHI    15,X'0003'                   .Add in parameters    @PCA 02-STORAGE\n 00000BB4 58E0 0010               00000010   5565+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 00000BB8 58EE 0304               00000304   5566+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 00000BBC 58EE 00CC               000000CC   5567+         L      14,204(14,0)                 .OBTAIN LX/EX FOR RELEASE  02-STORAGE\n 00000BC0 B218 E000      00000000            5568+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 00000BC4 D703 D56C D56C 0000056C 0000056C   5569+         XC    ASM_LOGGER_BUFFER,ASM_LOGGER_BUFFER clear                01-$$ASMIF\n 00000BCA                                    5570+LOGGER_READCURSOR_END_NOFREE DS 0H                                      01-$$ASMIF\n                                             5571+*        IXGBRWSE REQUEST=END,                                         X\n                                                 +               STREAMTOKEN=ASM_STREAMTOKEN,                            X\n                                                 +               BROWSETOKEN=ASM_LOGGER_BROWSE_TOKEN,                    X\n                                                 +               RETCODE=ASM_RC,                                         X\n1          asmif asm interfcae module                                                                           Page   43\n   Active Usings: PSA,R0  TCB,R2  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                                +               RSNCODE=ASM_REASON,                                     X\n                                                 +               ANSAREA=ASM_ANSAREA,                                    X\n                                                 +               ANSLEN==A(L'ASM_ANSAREA),                               X\n                                                 +               MF=(E,ASM_IXGBRWSE)\n                                             5573+*                     MACDATE -10/02/17-<3>\n 00000BCA                                    5574+M00M0146 DS    0H                             IXGBRWSE-3                02-IXGBRWSE\n                                             5575+              PUSH  PRINT                                               02-IXGBRWSE\n                                             5576+                     PRINT ON                                           02-IXGBRWSE\n 00000BCA 4110 D680               00000680   5577+         LA    1,ASM_IXGBRWSE     ++ LOCATE ARG PARMS                   02-IXGBRWSE\n 00000BCE D75B 1000 1000 00000000 00000000   5578+         XC    0(92,1),0(1)       ++ INITIALIZE                         02-IXGBRWSE\n 00000BD4 9205 1001      00000001            5579+         MVI   1(1),5             ++ INPUT XREQUEST                     02-IXGBRWSE\n 00000BD8 D601 1002 B0FE 00000002 00001D06   5580+         OC    2(2,1),=BL2'0100000000000000' ++ INPUT BL2               02-IXGBRWSE\n 00000BDE 41E0 D768               00000768   5581+         LA    14,ASM_ANSAREA     ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000BE2 50E0 1020               00000020   5582+         ST    14,32(,1)          ++ INPUT XANSAREA                     02-IXGBRWSE\n 00000BE6 D203 1024 B068 00000024 00001C70   5583+         MVC   36(4,1),=A(L'ASM_ANSAREA) ++ INPUT XANSLEN               02-IXGBRWSE\n 00000BEC D20F 1028 D558 00000028 00000558   5584+         MVC   40(16,1),ASM_STREAMTOKEN ++ INPUT XSTREAMTOKEN           02-IXGBRWSE\n 00000BF2 41E0 D578               00000578   5585+         LA    14,ASM_LOGGER_BROWSE_TOKEN ++ INPUT XBROWSETOKEN         02-IXGBRWSE\n 00000BF6 50E0 1038               00000038   5586+         ST    14,56(,1)          ++ INPUT XBROWSETOKEN                 02-IXGBRWSE\n 00000BFA 5010 1004               00000004   5587+         ST    1,4(,1)            ++ STORE ADDR OF PARM LIST            02-IXGBRWSE\n 00000BFE 4110 1004               00000004   5588+         LA    1,4(,1)            ++ LOAD ADDR OF PARM LIST PTR INTO R1 02-IXGBRWSE\n 00000C02 58F0 0010               00000010   5589+         L     15,16(0,0)           GET CVT ADDRESS                     02-IXGBRWSE\n 00000C06 58FF 008C               0000008C   5590+         L     15,140(15,0)         GET ECVT ADDRESS                    02-IXGBRWSE\n 00000C0A 58FF 0120               00000120   5591+         L     15,288(15,0)         GET LSAB ADDRESS                    02-IXGBRWSE\n 00000C0E 58FF 007C               0000007C   5592+         L     15,124(15,0)         GET ENTRY POINT ADDRESS             02-IXGBRWSE\n 00000C12 4100 0005               00000005   5593+         LA    0,5                  EX OF BROWSE SERVICE                02-IXGBRWSE\n 00000C16 05EF                               5594+         BALR  14,15                INVOKE SERVICE ROUTINE              02-IXGBRWSE\n 00000C18 5810 1000               00000000   5595+         L     1,0(,1)              RESTORE PARMLIST ADDRESS            02-IXGBRWSE\n 00000C1C 50F0 D060               00000060   5596+         ST    15,ASM_RC          ++ SET RETURN CODE                    02-IXGBRWSE\n 00000C20 5000 D064               00000064   5597+         ST    0,ASM_REASON       ++ SET REASON CODE                    02-IXGBRWSE\n                                             5598+         POP   PRINT                                                    02-IXGBRWSE\n                                             5599+*                                            IXGBRWSE-3\n000000C24 A7FE 0004               00000004   5601+        CHI    R15,4               test code                            01-$$ASMIF\n 00000C28 A724 0034               00000C90   5602+        JH     LOGGER_ERROR        jump if in error                     01-$$ASMIF\n 00000C2C 41F0 0004               00000004   5603+        LA     R15,4               set code                             01-$$ASMIF\n 00000C30 50F0 D060               00000060   5604+        ST     R15,ASM_RC          set code                             01-$$ASMIF\n 00000C34 A7F4 0033               00000C9A   5605+        J      LOGGER_XX           jump back                            01-$$ASMIF\n 00000C38                                    5606+LOGGER_READCURSOR_OK      DS 0H                                         01-$$ASMIF\n 00000C38                                    5607+LOGGER_READCURSOR_INBLOCK DS 0H                                         01-$$ASMIF\n 00000C38 5840 D574               00000574   5608+        L      R4,ASM_LOGGER_BUFFER_OFFSET get offset                   01-$$ASMIF\n 00000C3C BF3F D56C               0000056C   5609+        ICM    R3,15,ASM_LOGGER_BUFFER block address                    01-$$ASMIF\n 00000C40 A784 0028               00000C90   5610+        JZ     LOGGER_08           if no addr                           01-$$ASMIF\n                     R:3 00000000            5611+        USING  IXGBRMHD,R3         base on header                       01-$$ASMIF\n 00000C44 4143 4000               00000000   5612+        LA     R4,0(R3,R4)         actual block address                 01-$$ASMIF\n                     R:4 00000000            5613+        USING  IXGBRMLT,R4         base on log block                    01-$$ASMIF\n 00000C48 D203 D574 400C 00000574 0000000C   5614+        MVC    ASM_LOGGER_BUFFER_OFFSET,IXGBRMLT_NEXTOFFSET next off    01-$$ASMIF\n 00000C4E 9180 4003      00000003            5615+        TM     IXGBRMLT_FLAGS,IXGBRMLT_DATARETURNED data returned       01-$$ASMIF\n 00000C52 A714 0004               00000C5A   5616+        JO     LOGGER_READCURSOR_DATA   no more data                    01-$$ASMIF\n                                             5617+***LOOP*J      LOGGER_READCURSOR_INBLOCK try it\n 00000C56 A7F4 FFA5               00000BA0   5618+        J      LOGGER_READCURSOR_NOMORE  it                             01-$$ASMIF\n 00000C5A                                    5619+LOGGER_READCURSOR_DATA DS 0H                                            01-$$ASMIF\n 00000C5A 9140 4003      00000003            5620+        TM     IXGBRMLT_FLAGS,IXGBRMLT_RETBLOCKINFO info returned       01-$$ASMIF\n 00000C5E A784 0006               00000C6A   5621+        JZ     LOGGER_READCURSOR_NOINFO                                 01-$$ASMIF\n 00000C62 4150 402C               0000002C   5622+        LA     R5,IXGBRMLT_RETINFOEND  start of data                    01-$$ASMIF\n 00000C66 A7F4 0004               00000C6E   5623+        J      LOGGER_READCURSOR_DO jump to nextoffset                  01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   44\n   Active Usings: PSA,R0  TCB,R2  IXGBRMHD,R3  IXGBRMLT,R4  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000C6A                                    5624+LOGGER_READCURSOR_NOINFO DS 0H                                          01-$$ASMIF\n 00000C6A 4150 4010               00000010   5625+        LA     R5,IXGBRMLT_COMMONEND adress of the block                01-$$ASMIF\n 00000C6E                                    5626+LOGGER_READCURSOR_DO DS 0H                                              01-$$ASMIF\n 00000C6E D503 D574 3004 00000574 00000004   5627+       CLC     ASM_LOGGER_BUFFER_OFFSET,IXGBRMHD_LASTBRMLTOFFSET        01-$$ASMIF\n 00000C74 A774 0002               00000C78   5628+       JNE     LOGGER_READCURSOR_NOTLAST                                01-$$ASMIF\n                                             5629+***    MVC     IXGBRMLT_NEXTOFFSET,ZERO\n 00000C78                                    5630+LOGGER_READCURSOR_NOTLAST DS 0H                                         01-$$ASMIF\n 00000C78 5860 400C               0000000C   5631+        L      R6,IXGBRMLT_NEXTOFFSET length of block                   01-$$ASMIF\n 00000C7C 1A63                               5632+        AR     R6,R3               next addr                            01-$$ASMIF\n 00000C7E 1B65                               5633+        SR     R6,R5               length of block                      01-$$ASMIF\n 00000C80 9812 D118               00000118   5634+        LM     R1,R2,ASM_PARMS+4   get addr buff                        01-$$ASMIF\n 00000C84 5051 0000               00000000   5635+        ST     R5,0(R1)            save addr                            01-$$ASMIF\n 00000C88 5062 0000               00000000   5636+        ST     R6,0(R2)            save length                          01-$$ASMIF\n 00000C8C A7F4 0006               00000C98   5637+        J     LOGGER_00           jump out                              01-$$ASMIF\n 00000C90                                    5638+LOGGER_ERROR DS 0H                                                      01-$$ASMIF\n                                             5639+*       DC     A(0)\n 00000C90 41F0 0008               00000008   5640+LOGGER_08 LA   R15,8               get code                             01-$$ASMIF\n 00000C94 A7F4 0003               00000C9A   5641+         J     LOGGER_XX           jump out                             01-$$ASMIF\n 00000C98 1BFF                               5642+LOGGER_00 SR   R15,R15             set code                             01-$$ASMIF\n 00000C9A                                    5643+LOGGER_XX DS 0H                                                         01-$$ASMIF\n 00000C9A 50F0 D060               00000060   5644+         ST    R15,ASM_RC       back code                               01-$$ASMIF\n 00000C9E 5000 D064               00000064   5645+         ST    R0,ASM_REASON    back reason                             01-$$ASMIF\n 00000CA2 0101                               5646+         PR     ,                                                       01-$$ASMIF\n                                             5647+         DROP  R3,R4               drop regs                            01-$$ASMIF\n                                             5648+* 21/11/05 VTOC access\n                                             5649+*---------------------------------------------------------------------*\n                                             5650+* VTOC access                                                         *\n                                             5651+* +0 request type                                                     *\n                                             5652+*    0 connect , open                                                 *\n                                             5653+*    1 next , gives back the next entry                               *\n                                             5654+* +4 address of the DDNAME allocated to the volume                    *\n                                             5655+* +8 address of the dataset mask to retrieve  , +0 length (1 byte)    *\n                                             5656+* +c address of are to return the DSCB                                *\n                                             5657+* return : 0 DSCB returned , and more exist                           *\n                                             5658+*          4 last DSCB returned, no more                              *\n                                             5659+*          8 no DSCB found                                            *\n                                             5660+*         12 error occured                                            *\n                                             5661+*---------------------------------------------------------------------*\n                     R:6 00000000            5662+         USING IHADCB,R6           base on DCB                          01-$$ASMIF\n                     R:5 00000000            5663+         USING IEFJFCBN,R5         base on JFCB                         01-$$ASMIF\n                   D 7CC 00000000 000007CC   5664+         USING FCL_MAP,ASM_VTOC_FCL  base on FCL                        01-$$ASMIF\n                   D 7E4 00000000 000007E4   5665+         USING BFL_MAP,ASM_VTOC_BFL  base on bfl                        01-$$ASMIF\n                   D 7F8 00000000 000007F8   5666+         USING CVAFFILT_MAP,ASM_VTOC_CVAFFILT base on CVAFFILT          01-$$ASMIF\n 00000CA4 9825 D114               00000114   5667+VTOC     LM    R2,R5,ASM_PARMS     get parms                            01-$$ASMIF\n 00000CA8 D703 D064 D064 00000064 00000064   5668+         XC    ASM_REASON,ASM_REASON  clear resaon                      01-$$ASMIF\n 00000CAE 1222                               5669+         LTR   R2,R2               test request                         01-$$ASMIF\n 00000CB0 A724 00A3               00000DF6   5670+         JP    VTOC_NEXT           if next request                      01-$$ASMIF\n 00000CB4 A744 00A8               00000E04   5671+         JM    VTOC_GOT_LAST       if the last entry                    01-$$ASMIF\n 00000CB8 4100 0001               00000001   5672+         LA    R0,1                first parm                           01-$$ASMIF\n 00000CBC 1233                               5673+         LTR   R3,R3               test DDNAME addr                     01-$$ASMIF\n 00000CBE A784 00EF               00000E9C   5674+         JZ    VTOC_ERR_PARM       jump if no DDNAME                    01-$$ASMIF\n 00000CC2 4100 0002               00000002   5675+         LA    R0,2                second parm                          01-$$ASMIF\n 00000CC6 1244                               5676+         LTR   R4,R4               test name                            01-$$ASMIF\n 00000CC8 A784 00EA               00000E9C   5677+         JZ    VTOC_ERR_PARM       jump if invalid                      01-$$ASMIF\n 00000CCC 4100 0003               00000003   5678+         LA    R0,3                third parm                           01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   45\n   Active Usings: PSA,R0  TCB,R2  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000CD0 1255                               5679+         LTR   R5,R5               test DSCB return address             01-$$ASMIF\n 00000CD2 A784 00E5               00000E9C   5680+         JZ    VTOC_ERR_PARM       jump if invalid                      01-$$ASMIF\n 00000CD6 D207 D794 3000 00000794 00000000   5681+         MVC   ASM_VTOC_DDNAME,0(3) copy DDNAME                         01-$$ASMIF\n 00000CDC D22B D79C 4000 0000079C 00000000   5682+         MVC   ASM_VTOC_FILTER,0(R4) copy filter                        01-$$ASMIF\n                                             5683+*        storgae obtain,LENGTH=VTOC_MODEL_DCB_LENGTH+184,LOC=BELOW\n 00000CE2 5800 B078               00001C80   5686+         L      0,=A(VTOC_MODEL_DCB_LENGTH+184)                        X02-STORAGE\n                                                 +                                             .STORAGE LENGTH       @P9C\n 00000CE6 58F0 B07C               00001C84   5687+         L      15,=AL1(B'00000000',(0*16),(0),B'00010010')            X02-STORAGE\n                                                 +                                             .CONTROL INFORMATION  @P9C\n 00000CEA 58E0 0010               00000010   5688+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 00000CEE 58EE 0304               00000304   5689+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 00000CF2 58EE 00A0               000000A0   5690+         L      14,160(14,0)                 .OBTAIN LX/EX FOR OBTAIN   02-STORAGE\n 00000CF6 B218 E000      00000000            5691+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 00000CFA 5010 D790               00000790   5692+         ST    R1,ASM_VTOC_DCB     save                                 01-$$ASMIF\n 00000CFE 1261                               5693+         LTR   R6,R1               test storage                         01-$$ASMIF\n 00000D00 A784 00C5               00000E8A   5694+         JZ    VTOC_ERR_STORAGE    if no storage                        01-$$ASMIF\n 00000D04 A728 0057               00000057   5695+         LHI   R2,VTOC_MODEL_DCB_LENGTH-1 get length                    01-$$ASMIF\n 00000D08 4420 B2B8               00001EC0   5696+         EX    R2,VTOC_COPY_DCB    copy dcb                             01-$$ASMIF\n 00000D0C D207 6028 D794 00000028 00000794   5697+         MVC   DCBDDNAM,ASM_VTOC_DDNAME copy DDNAME                     01-$$ASMIF\n 00000D12 4150 6058               00000058   5698+         LA    R5,VTOC_MODEL_DCB_LENGTH(,R6) after DCB                  01-$$ASMIF\n 00000D16 9680 D7C8      000007C8            5699+         OI    ASM_VTOC_OPENLIST,X'80' indicate end of list             01-$$ASMIF\n 00000D1A 4140 6108               00000108   5700+         LA    R4,(VTOC_MODEL_DCB_LENGTH+176)(,R6) open list            01-$$ASMIF\n 00000D1E 4110 4004               00000004   5701+         LA    R1,4(,R4)           exit list addr                       01-$$ASMIF\n 00000D22 BE17 6025               00000025   5702+         STCM  R1,7,DCBEXLSA       save exit list addr                  01-$$ASMIF\n 00000D26 5051 0000               00000000   5703+         ST    R5,0(R1)            save exit addr                       01-$$ASMIF\n 00000D2A 9287 1000      00000000            5704+         MVI   0(R1),X'87'         indicate JFCB exit                   01-$$ASMIF\n 00000D2E 9280 4000      00000000            5705+         MVI   0(R4),X'80'         open list                            01-$$ASMIF\n                                             5706+*        rdjfcb ((r6)),mf=(e,(r4))\n                                             5711+*                                                                 1@L1D\n                                             5712+*                                                                 1@L1D\n 00000D32 1814                               5714+         LR    1,R4                              LOAD PARAMETER REG 1   04-IHBINNRA\n 00000D34 BE67 1001               00000001   5715+         STCM  R6,B'0111',0+1(1)         Store DCB or ACB address  @L3C 03-OPEN\n 00000D38 0A40                               5716+         SVC   64                                ISSUE RDJFCB SVC       02-RDJFCB\n 00000D3A 12FF                               5717+         LTR   R15,R15             test code                            01-$$ASMIF\n 00000D3C A774 009F               00000E7A   5718+         JNZ   VTOC_ERR_RDJFCB     jump if RDJFCB error                 01-$$ASMIF\n 00000D40 9204 5000      00000000            5719+         MVI   JFCBDSNM,X'04'      init first byte                      01-$$ASMIF\n 00000D44 D22A 5001 5000 00000001 00000000   5720+         MVC   JFCBDSNM+1(43),JFCBDSNM copy rest                        01-$$ASMIF\n                                             5721+*        open  ((r6),input),mf=(e,(r4)),type=j\n                                             5725+*                                                                 1@L1D\n                                             5726+*                                                                 1@L1D\n 00000D4A 1814                               5728+         LR    1,R4                              LOAD PARAMETER REG 1   03-IHBINNRA\n 00000D4C 94F0 1000      00000000            5729+         NI    0(1),X'F0'               CLEAR OPTION 1 BITS        @L3M 02-OPEN\n 00000D50 BE67 1001               00000001   5730+         STCM  R6,B'0111',0+1(1)         Store DCB or ACB address  @L3C 02-OPEN\n 00000D54 0A16                               5731+         SVC   22                       Issue OPEN TYPE=J SVC           02-OPEN\n 00000D56 9110 6030      00000030            5732+         TM    DCBOFLGS,DCBOFOPN   test open flag                       01-$$ASMIF\n 00000D5A A784 0094               00000E82   5733+         JZ    VTOC_ERR_OPEN       jump if open error                   01-$$ASMIF\n 00000D5E D243 D7F8 B318 000007F8 00001F20   5734+         MVC   ASM_VTOC_CVAFFILT(VTOC_MODEL_CVAFFL),VTOC_MODEL_CVAFFILT 01-$$ASMIF\n 00000D64 D717 D7CC D7CC 000007CC 000007CC   5735+         XC    ASM_VTOC_FCL(FCLHDLEN+FCLDSNEL),ASM_VTOC_FCL   init fcl  01-$$ASMIF\n 00000D6A D203 D7CC B080 00000000 00001C88   5736+         MVC   FCLID,=CL4'FCL'       set fcl id                         01-$$ASMIF\n 00000D70 D201 D7D0 B100 00000004 00001D08   5737+         MVC   FCLCOUNT,=H'1'        set number of fcl elements         01-$$ASMIF\n 00000D76 4120 D7DC               00000010   5738+         LA    R2,FCLHDEND           r2 addr of fcl elemnent            01-$$ASMIF\n                     R:2 00000000            5739+         USING FCLDSN,R2             establish addressability           01-$$ASMIF\n 00000D7A D200 2001 D79C 00000001 0000079C   5740+         MVC   FCLDSNLG,ASM_VTOC_FILTER set length                      01-$$ASMIF\n 00000D80 4110 D79D               0000079D   5741+         LA    R1,ASM_VTOC_FILTER+1  filter address                     01-$$ASMIF\n 00000D84 5010 2004               00000004   5742+         ST    R1,FCLDSNA            set addr(dsn pattern)              01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   46\n   Active Usings: PSA,R0  FCLDSN,R2  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000D88 D200 2001 D79C 00000001 0000079C   5743+         MVC   FCLDSNLG,ASM_VTOC_FILTER set length                      01-$$ASMIF\n                                             5744+         DROP  R2                                                       01-$$ASMIF\n 00000D8E D713 D7E4 D7E4 000007E4 000007E4   5745+         XC    ASM_VTOC_BFL(BFLHLN+BFLELN),ASM_VTOC_BFL clear           01-$$ASMIF\n 00000D94 9201 D7E4      00000000            5746+         MVI   BFLHNOE,1             one buffe                          01-$$ASMIF\n 00000D98 9604 D7E5      00000001            5747+         OI    BFLHFL,BFLHDSCB       identify as dscb bufr elemnt       01-$$ASMIF\n 00000D9C 4120 D7EC               000007EC   5748+         LA    R2,ASM_VTOC_BFL+BFLHLN first buffer                      01-$$ASMIF\n                     R:2 00000000            5749+         USING BFLE,R2               establish addressability           01-$$ASMIF\n 00000DA0 9640 2000      00000000            5750+         OI    BFLEFL,BFLECHR        request cchhr on return            01-$$ASMIF\n 00000DA4 928C 2002      00000002            5751+         MVI   BFLELTH,F1DSCB_SIZE   set bufr lngth to full dscb        01-$$ASMIF\n 00000DA8 4110 D83C               0000083C   5752+         LA    R1,ASM_VTOC_BUFFER    get buffer address                 01-$$ASMIF\n 00000DAC 5010 2008               00000008   5753+         ST    R1,BFLEBUF            set addr(dscb buffer)              01-$$ASMIF\n                                             5754+         DROP  R2                                                       01-$$ASMIF\n 00000DB0 1B11                               5755+         SR    R1,R1               clear r1                             01-$$ASMIF\n 00000DB2 BF17 602D               0000002D   5756+         ICM   R1,7,DCBDEBA        get deb addr                         01-$$ASMIF\n 00000DB6 5010 D81C               00000024   5757+         ST    R1,CVDEB            save in CVAF parm list               01-$$ASMIF\n                                             5758+*        cvaffilt access=read,                                         X\n                                                 +               FCL=ASM_VTOC_FCL,                                       X\n                                                 +               BUFLIST=ASM_VTOC_BFL,                                   X\n                                                 +               MF=(E,ASM_VTOC_CVAFFILT)\n                                             5761+*                                                                 1@L1D\n                                             5762+*                                                                 1@L1D\n 00000DBA 4110 D7F8               000007F8   5764+         LA    1,ASM_VTOC_CVAFFILT               LOAD PARAMETER REG 1   03-IHBINNRA\n 00000DBE 920E 1006      00000006            5765+         MVI   6(1),X'0E'               SET FUNCTION CODE               02-CVAFFILT\n 00000DC2 41F0 D7CC               000007CC   5766+         LA    15,ASM_VTOC_FCL          GET FCL ADDRESS AND             02-CVAFFILT\n 00000DC6 50F0 1010               00000010   5767+         ST    15,16(,1)                STORE FCL PTR IN PARM LIST      02-CVAFFILT\n 00000DCA 41F0 D7E4               000007E4   5768+         LA    15,ASM_VTOC_BFL          GET BUFLIST ADDRESS AND         02-CVAFFILT\n 00000DCE 50F0 1014               00000014   5769+         ST    15,20(,1)                STORE BUFLIST PTR IN PARM LIST  02-CVAFFILT\n 00000DD2 0A8B                               5770+         SVC   139                                                      02-CVAFFILT\n 00000DD4 12FF                               5771+VTOC_CHECK  LTR R15,R15            test return                          01-$$ASMIF\n 00000DD6 A784 0017               00000E04   5772+         JZ    VTOC_GOT_LAST       jump if the last one                 01-$$ASMIF\n 00000DDA A7FE 0004               00000004   5773+         CHI   R15,4               check if rc4                         01-$$ASMIF\n 00000DDE A774 005A               00000E92   5774+         JNE   VTOC_CVAFFILT_ERR   jump if filter error                 01-$$ASMIF\n 00000DE2 9501 D7FF      00000007            5775+         CLI   CVSTAT,STAT001      nothing found                        01-$$ASMIF\n 00000DE6 A784 0063               00000EAC   5776+         JE    VTOC_08             jump if it is                        01-$$ASMIF\n 00000DEA 9540 D7FF      00000007            5777+         CLI   CVSTAT,STAT064      more                                 01-$$ASMIF\n 00000DEE A774 0052               00000E92   5778+         JNE   VTOC_CVAFFILT_ERR   jump if any other error              01-$$ASMIF\n 00000DF2 A7F4 0039               00000E64   5779+         J     VTOC_COPY_DSCB      jump to copy DSCB                    01-$$ASMIF\n 00000DF6                                    5780+VTOC_NEXT      DS                  0H                                   01-$$ASMIF\n                                             5781+*        cvaffilt access=resume,                                       X\n                                                 +               MF=(E,ASM_VTOC_CVAFFILT)\n                                             5784+*                                                                 1@L1D\n                                             5785+*                                                                 1@L1D\n 00000DF6 4110 D7F8               000007F8   5787+         LA    1,ASM_VTOC_CVAFFILT               LOAD PARAMETER REG 1   03-IHBINNRA\n 00000DFA 920F 1006      00000006            5788+         MVI   6(1),X'0F'               SET FUNCTION CODE               02-CVAFFILT\n 00000DFE 0A8B                               5789+         SVC   139                                                      02-CVAFFILT\n 00000E00 A7F4 FFEA               00000DD4   5790+         J     VTOC_CHECK          jump to check                        01-$$ASMIF\n 00000E04                                    5791+VTOC_GOT_LAST DS 0H                                                     01-$$ASMIF\n 00000E04 D403 D790 D790 00000790 00000790   5792+         NC    ASM_VTOC_DCB,ASM_VTOC_DCB already closed                 01-$$ASMIF\n 00000E0A A784 0055               00000EB4   5793+         JZ    VTOC_00             jump if so                           01-$$ASMIF\n                                             5794+*        cvaffilt accESS=RLSE,fcl=0,BUFLIST=0,FLTAREA=NOKEEP,          X\n                                                 +               MF=(E,ASM_VTOC_CVAFFILT)\n                                             5797+*                                                                 1@L1D\n                                             5798+*                                                                 1@L1D\n 00000E0E 4110 D7F8               000007F8   5800+         LA    1,ASM_VTOC_CVAFFILT               LOAD PARAMETER REG 1   03-IHBINNRA\n 00000E12 9210 1006      00000006            5801+         MVI   6(1),X'10'               SET FUNCTION CODE               02-CVAFFILT\n1          asmif asm interfcae module                                                                           Page   47\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'\n   BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000E16 947F 100A      0000000A            5802+         NI    10(1),B'01111111'        RESET CVAF FLAGS OFF            02-CVAFFILT\n 00000E1A 41F0 0000               00000000   5803+         LA    15,0                     GET FCL ADDRESS AND             02-CVAFFILT\n 00000E1E 50F0 1010               00000010   5804+         ST    15,16(,1)                STORE FCL PTR IN PARM LIST      02-CVAFFILT\n 00000E22 41F0 0000               00000000   5805+         LA    15,0                     GET BUFLIST ADDRESS AND         02-CVAFFILT\n 00000E26 50F0 1014               00000014   5806+         ST    15,20(,1)                STORE BUFLIST PTR IN PARM LIST  02-CVAFFILT\n 00000E2A 0A8B                               5807+         SVC   139                                                      02-CVAFFILT\n                                             5808+*        close ((r6)),mf=(e,asm_vtoc_openlist),mode=31\n                                             5812+*                                                                 1@L1D\n                                             5813+*                                                                 1@L1D\n 00000E2C 4110 D7C8               000007C8   5815+         LA    1,ASM_VTOC_OPENLIST               LOAD PARAMETER REG 1   03-IHBINNRA\n 00000E30 5060 1004               00000004   5816+         ST    R6,0+4(,1)               STORE DCB OR ACB ADDRESS   @L3C 02-CLOSE\n 00000E34 1801                               5817+         LR    0,1                      Copy parameter list address@L1A 02-CLOSE\n 00000E36 1B11                               5818+         SR    1,1                      Set indicator of 31-bit    @L1A 02-CLOSE\n 00000E38 0A14                               5819+         SVC   20                       ISSUE CLOSE SVC                 02-CLOSE\n                                             5820+*        storage release,addr=asm_vtoc_dcb,                            X\n                                                 +               LENGTH=VTOC_MODEL_DCB_LENGTH+184\n 00000E3A 5800 B078               00001C80   5823+         L      0,=A(VTOC_MODEL_DCB_LENGTH+184)                        X02-STORAGE\n                                                 +                                             .STORAGE LENGTH       @P9C\n 00000E3E 5810 D790               00000790   5824+         L      1,ASM_VTOC_DCB               .ADDRESS OF STORAGE        02-STORAGE\n 00000E42 A7F8 0003               00000003   5825+         LHI    15,X'0003'                   .Add in parameters    @PCA 02-STORAGE\n 00000E46 58E0 0010               00000010   5826+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 00000E4A 58EE 0304               00000304   5827+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 00000E4E 58EE 00CC               000000CC   5828+         L      14,204(14,0)                 .OBTAIN LX/EX FOR RELEASE  02-STORAGE\n 00000E52 B218 E000      00000000            5829+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 00000E56 D703 D790 D790 00000790 00000790   5830+         XC    ASM_VTOC_DCB,ASM_VTOC_DCB release DCB arae               01-$$ASMIF\n 00000E5C 41F0 0004               00000004   5831+         LA    R15,4               get return code                      01-$$ASMIF\n 00000E60 A7F4 0003               00000E66   5832+         J     VTOC_COPY_DSCB+2    jump to copy                         01-$$ASMIF\n 00000E64 1BFF                               5833+VTOC_COPY_DSCB SR R15,R15          clear rc                             01-$$ASMIF\n 00000E66 BF0F D120               00000120   5834+         ICM   R0,15,ASM_PARMS+12  target address                       01-$$ASMIF\n 00000E6A A718 008C               0000008C   5835+         LHI   R1,F1DSCB_SIZE      get DSCB size                        01-$$ASMIF\n 00000E6E 4120 D83C               0000083C   5836+         LA    R2,ASM_VTOC_BUFFER  from address                         01-$$ASMIF\n 00000E72 1831                               5837+         LR    R3,R1               same length                          01-$$ASMIF\n 00000E74 0E02                               5838+         MVCL  R0,R2               copy DSCB                            01-$$ASMIF\n 00000E76 A7F4 0020               00000EB6   5839+         J     VTOC_XX             jump out                             01-$$ASMIF\n 00000E7A 9206 D066      00000066            5840+VTOC_ERR_RDJFCB    MVI ASM_REASON+2,6 JFCB error                        01-$$ASMIF\n 00000E7E A7F4 0013               00000EA4   5841+         J     VTOC_12             jump out                             01-$$ASMIF\n 00000E82 9205 D066      00000066            5842+VTOC_ERR_OPEN    MVI ASM_REASON+2,5 open error                          01-$$ASMIF\n 00000E86 A7F4 000F               00000EA4   5843+         J     VTOC_12             jump out                             01-$$ASMIF\n 00000E8A 9204 D066      00000066            5844+VTOC_ERR_STORAGE MVI ASM_REASON+2,4 no storage                          01-$$ASMIF\n 00000E8E A7F4 000B               00000EA4   5845+         J     VTOC_12             jump out                             01-$$ASMIF\n 00000E92                                    5846+VTOC_CVAFFILT_ERR DS 0H                                                 01-$$ASMIF\n 00000E92 D200 D067 D7FF 00000067 00000007   5847+         MVC   ASM_REASON+3(1),CVSTAT copy status code                  01-$$ASMIF\n 00000E98 A7F4 0006               00000EA4   5848+         J     VTOC_12             jump out                             01-$$ASMIF\n 00000E9C 4200 D066               00000066   5849+VTOC_ERR_PARM STC R0,ASM_REASON+2 set reason                            01-$$ASMIF\n 00000EA0 A7F4 0002               00000EA4   5850+         J     VTOC_12             jump out                             01-$$ASMIF\n 00000EA4 41F0 000C               0000000C   5851+VTOC_12  LA    R15,12              get code                             01-$$ASMIF\n 00000EA8 A7F4 0007               00000EB6   5852+         J     VTOC_XX             jump out                             01-$$ASMIF\n 00000EAC 41F0 0008               00000008   5853+VTOC_08  LA    R15,8               get code                             01-$$ASMIF\n 00000EB0 A7F4 0003               00000EB6   5854+         J     VTOC_XX             jump out                             01-$$ASMIF\n 00000EB4 1BFF                               5855+VTOC_00  SR    R15,R15             get code                             01-$$ASMIF\n 00000EB6                                    5856+VTOC_XX  DS    0H                  return back                          01-$$ASMIF\n 00000EB6 50F0 D060               00000060   5857+         ST    R15,ASM_RC          back code                            01-$$ASMIF\n 00000EBA 0101                               5858+         PR    ,                   return back                          01-$$ASMIF\n                                             5859+* 19/11/08 SRB callback\n                                             5860+*---------------------------------------------------------------------*\n1          asmif asm interfcae module                                                                           Page   48\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'\n   BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            5861+* SRB call                                                            *\n                                             5862+* call an SRB routine and from the SRB call back a C function         *\n                                             5863+* +0 function addres to call                                          *\n                                             5864+* +4 paramter area address                                            *\n                                             5865+*                                                                     *\n                                             5866+*---------------------------------------------------------------------*\n 00000EBC                                    5867+SRB_     DS   0H                                                        01-$$ASMIF\n 00000EBC 0101                               5868+         PR    ,                                                        01-$$ASMIF\n                                             5869+* 24/11/08 WLM enclave\n                                             5870+*---------------------------------------------------------------------*\n                                             5871+* WLM service create/delete enclave                                   *\n                                             5872+* +0     SUBSYSTEM name                                               *\n                                             5873+* back : r15 = return code                                            *\n                                             5874+*----------------- ---------------------------------------------------*\n 00000EBE 0101                               5875+WLM      PR    ,                                                        01-$$ASMIF\n                                             5876+* 24/11/08 WLM enclave\n                                             5877+* 04/03/10 OBTAIN DSCB\n                                             5878+*---------------------------------------------------------------------*\n                                             5879+* OBTAIN routine                                                      *\n                                             5880+* +0 dataset name                                                     *\n                                             5881+* +4 volser                                                           *\n                                             5882+* +8 F1DSCB area                                                      *\n                                             5883+*---------------------------------------------------------------------*\n000000EC0                                    5885+OBTAIN   DS    0H                                                       01-$$ASMIF\n 00000EC0 9812 D114               00000114   5886+         LM    R1,R2,ASM_PARMS                                          01-$$ASMIF\n 00000EC4 A7F8 FFFF               FFFFFFFF   5887+         LHI   R15,-1                                                   01-$$ASMIF\n 00000EC8 BF1F D114               00000114   5888+         ICM   R1,15,ASM_PARMS                                          01-$$ASMIF\n 00000ECC A784 002F               00000F2A   5889+         JZ    OBTAIN_XX                                                01-$$ASMIF\n 00000ED0 9540 1000      00000000            5901+                CLI             0(R1),C' '                              04-ASMMPOPI\n 00000ED4 A744 0019               00000F06   5902+           BRC          4,#@LB4                                         03-ASMMIFPR\n 00000ED8 D62B 1000 B114 00000000 00001D1C   5904+         OC    0(44,R1),BLANKS                                          01-$$ASMIF\n 00000EDE BF1F D118               00000118   5905+         ICM   R1,15,ASM_PARMS+4                                        01-$$ASMIF\n 00000EE2 A784 0024               00000F2A   5906+         JZ    OBTAIN_XX                                                01-$$ASMIF\n 00000EE6 D605 1000 B114 00000000 00001D1C   5907+         OC    0(6,R1),BLANKS                                           01-$$ASMIF\n 00000EEC D20F D8C8 B384 000008C8 00001F8C   5908+         MVC   ASM_CAMLST(CAMLST_L),CAMLST copy camlst                  01-$$ASMIF\n 00000EF2 D20B D8CC D114 000008CC 00000114   5909+         MVC   ASM_CAMLST+4(12),ASM_PARMS                               01-$$ASMIF\n                                             5910+* 16/08/11 OBTAIN EADSCB=OK for EAV volumes\n                                             5911+*        OBTAIN asm_camlst,EADSCB=OK ISSUE OBTAIN\n                                             5914+*                                                                 1@L1D\n                                             5915+*                                                                 1@L1D\n 00000EF8 4110 D8C8               000008C8   5917+         LA    1,ASM_CAMLST                      LOAD PARAMETER REG 1   03-IHBINNRA\n 00000EFC 9608 1002      00000002            5918+         OI    2(1),B'00001000'     Set Obtain option flags on     @LVA 02-OBTAIN\n 00000F00 0A1B                               5919+         SVC   27                   Issue OBTAIN SVC               @LVC 02-OBTAIN\n                                             5920+* 16/08/11 OBTAIN EADSCB=OK for EAV volumes\n 00000F02 A7F4 0014               00000F2A   5926+         BRC   15,#@LB6                                                 02-\n 00000F06                                    5927+#@LB4    DC    0H                                                       02-\n                                             5929+* 10/09/12 CAMLST SEEK for OBTAIN\n 00000F06 BF1F D118               00000118   5930+         ICM   R1,15,ASM_PARMS+4                                        01-$$ASMIF\n 00000F0A A784 0010               00000F2A   5931+         JZ    OBTAIN_XX                                                01-$$ASMIF\n 00000F0E D605 1000 B114 00000000 00001D1C   5932+         OC    0(6,R1),BLANKS                                           01-$$ASMIF\n 00000F14 D20F D8C8 B394 000008C8 00001F9C   5933+         MVC   ASM_CAMLST(CAMLST_L),CAMLST_SEEK copy camlst             01-$$ASMIF\n 00000F1A D20B D8CC D114 000008CC 00000114   5934+         MVC   ASM_CAMLST+4(12),ASM_PARMS                               01-$$ASMIF\n                                             5935+* 16/08/11 OBTAIN EADSCB=OK for EAV volumes\n                                             5936+*        OBTAIN asm_camlst,EADSCB=OK ISSUE OBTAIN\n1          asmif asm interfcae module                                                                           Page   49\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'\n   BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            5939+*                                                                 1@L1D\n                                             5940+*                                                                 1@L1D\n 00000F20 4110 D8C8               000008C8   5942+         LA    1,ASM_CAMLST                      LOAD PARAMETER REG 1   03-IHBINNRA\n 00000F24 9608 1002      00000002            5943+         OI    2(1),B'00001000'     Set Obtain option flags on     @LVA 02-OBTAIN\n 00000F28 0A1B                               5944+         SVC   27                   Issue OBTAIN SVC               @LVC 02-OBTAIN\n 00000F2A                                    5950+#@LB6    DC    0H                                                       02-\n                                             5952+* 10/09/12 CAMLST SEEK for OBTAIN\n 00000F2A                                    5953+OBTAIN_XX DS 0H                                                         01-$$ASMIF\n 00000F2A 50F0 D060               00000060   5954+         ST    R15,ASM_RC          back code                            01-$$ASMIF\n 00000F2E 0101                               5955+         PR    ,                                                        01-$$ASMIF\n0                                            5957+* 04/03/10 OBTAIN DSCB\n                                             5958+*---------------------------------------------------------------------*\n                                             5959+* sleep  wait for n ms                                                *\n                                             5960+* +0     wait time in ms                                              *\n                                             5961+* back : r15 = ieantcr return code                                    *\n                                             5962+*---------------------------------------------------------------------*\n 00000F30 B240 00E0                          5963+SLEEP_INTERN BAKR R14,0          all in linkage stack                   01-$$ASMIF\n 00000F34 5810 D114               00000114   5964+SLEEP    L     R1,ASM_PARMS      get in msec                            01-$$ASMIF\n 00000F38 1211                               5965+         LTR   R1,R1             test it                                01-$$ASMIF\n 00000F3A A784 000F               00000F58   5968+         BRC   8,SLEEP_00  (BC)                                         03-\n 00000F3E A7D4 0010               00000F5E   5971+         BRC   13,SLEEP_08  (BC)                                        03-\n 00000F42 C0E5 0000 062B          00001B98   5972+         BRASL R14,MILLSEC       call mill sec conv                     01-$$ASMIF\n                                             5973+*        stimer wait,micvl=asm_sleep     wait here\n                                             5976+*        MACDATE = 08/19/88                                        @L1C\n 00000F48 4110 D228               00000228   5977+         LA    1,ASM_SLEEP                        LOAD ADDR TIME VALUE  02-STIMER\n 00000F4C 1BFF                               5978+         SR    15,15                              INDICATE NO EXIT      02-STIMER\n 00000F4E 4100 00A1               000000A1   5979+         LA    0,161(0,0)                        LOAD FLAG BYTE         02-STIMER\n 00000F52 8900 0018               00000018   5980+         SLL   0,24(0)                           SHIFT TO HI-ORDER BYTE 02-STIMER\n 00000F56 0A2F                               5981+         SVC   47                                ISSUE STIMER SVC       02-STIMER\n 00000F58 1BFF                               5982+SLEEP_00 SR    R15,R15           clear return                           01-$$ASMIF\n 00000F5A A7F4 0004               00000F62   5985+         BRC   15,SLEEP_XX  (BC)                                        03-\n 00000F5E 41F0 0008               00000008   5986+SLEEP_08 LA    R15,8             get code                               01-$$ASMIF\n 00000F62 50F0 D060               00000060   5987+SLEEP_XX ST    R15,ASM_RC        set rc                                 01-$$ASMIF\n 00000F66 0101                               5988+         PR    ,                 return back                            01-$$ASMIF\n                                             5989+*---------------------------------------------------------------------*\n                                             5990+* getecb get a work ecb address                                       *\n                                             5991+* back : r15 = ieantcr return code                                    *\n                                             5992+*---------------------------------------------------------------------*\n 00000F68 5820 D114               00000114   5993+GETECB   L     R2,ASM_PARMS      get in msec                            01-$$ASMIF\n 00000F6C 5830 D1E8               000001E8   5994+         L     R3,ASM_WORKECBP   get pointer                            01-$$ASMIF\n 00000F70 D503 2000 B194 00000000 00001D9C   5995+         CLC   0(4,R2),ZERO      init or free                           01-$$ASMIF\n 00000F76 A774 001A               00000FAA   5998+         BRC   7,GETECB_FREE  (BC)                                      03-\n 00000F7A 5830 D1E4               000001E4   5999+         L     R3,ASM_WORKECBS   get start                              01-$$ASMIF\n 00000F7E                                    6000+GETECB_FIND_LOOP DS 0H                                                  01-$$ASMIF\n 00000F7E D503 3000 B194 00000000 00001D9C   6001+         CLC   0(4,R3),ZERO      empty                                  01-$$ASMIF\n 00000F84 A784 000A               00000F98   6004+         BRC   8,GETECB_FIND  (BC)                                      03-\n 00000F88 4130 3014               00000014   6005+         LA    R3,20(,R3)        inr addr                               01-$$ASMIF\n 00000F8C 5930 D1EC               000001EC   6006+         C     R3,ASM_WORKECBE   check imit                             01-$$ASMIF\n 00000F90 A7B4 001F               00000FCE   6009+         BRC   11,GETECB_08  (BC)                                       03-\n 00000F94 A7F4 FFF5               00000F7E   6012+         BRC   15,GETECB_FIND_LOOP  (BC)                                03-\n 00000F98                                    6013+GETECB_FIND DS 0H                                                       01-$$ASMIF\n 00000F98 D203 3000 B038 00000000 00001C40   6014+         MVC   0(4,R3),=F'-1'    reserved flag                          01-$$ASMIF\n 00000F9E 4130 3004               00000004   6015+         LA    R3,4(,R3)         proper start                           01-$$ASMIF\n 00000FA2 5032 0000               00000000   6016+         ST    R3,0(R2)          store it                               01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   50\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'\n   BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000FA6 A7F4 0011               00000FC8   6019+         BRC   15,GETECB_00  (BC)                                       03-\n 00000FAA 5830 2000               00000000   6020+GETECB_FREE L  R3,0(,R2)         get addr                               01-$$ASMIF\n 00000FAE 4B30 B102               00001D0A   6021+         SH    R3,=Y(4)          decr it                                01-$$ASMIF\n 00000FB2 5930 D1E4               000001E4   6022+         C     R3,ASM_WORKECBS   if lower                               01-$$ASMIF\n 00000FB6 A744 000C               00000FCE   6025+         BRC   4,GETECB_08  (BC)                                        03-\n 00000FBA 5930 D1EC               000001EC   6026+         C     R3,ASM_WORKECBE   if lower                               01-$$ASMIF\n 00000FBE A724 0008               00000FCE   6029+         BRC   2,GETECB_08  (BC)                                        03-\n 00000FC2 D713 3000 3000 00000000 00000000   6030+         XC    0(20,R3),0(R3)    clean slot                             01-$$ASMIF\n 00000FC8 1BFF                               6031+GETECB_00 SR   R15,R15           clear reg                              01-$$ASMIF\n 00000FCA A7F4 0004               00000FD2   6034+         BRC   15,GETECB_XX  (BC)                                       03-\n 00000FCE 41F0 0008               00000008   6035+GETECB_08 LA   R15,8             get code                               01-$$ASMIF\n 00000FD2 50F0 D060               00000060   6036+GETECB_XX ST   R15,ASM_RC        save rc                                01-$$ASMIF\n 00000FD6 0101                               6037+         PR    ,                 return back                            01-$$ASMIF\n                                             6038+*---------------------------------------------------------------------*\n                                             6039+* wait for an event or give up after n ms                             *\n                                             6040+* +0     wait time in ms                                              *\n                                             6041+* +4     ecb pointer's                                                *\n                                             6042+* back : r15 = ieantcr return code                                    *\n                                             6043+*---------------------------------------------------------------------*\n 00000FD8 5820 D114               00000114   6044+WAIT     L     R2,ASM_PARMS      get parms                              01-$$ASMIF\n 00000FDC 1222                               6045+         LTR   R2,R2             test time                              01-$$ASMIF\n 00000FDE A784 000A               00000FF2   6048+         BRC   8,WAIT_TIME_VALID  (BC)                                  03-\n 00000FE2 A744 0006               00000FEE   6051+         BRC   4,WAIT_TIME_INVALID  (BC)                                03-\n 00000FE6 5920 B378               00001F80   6052+         C     R2,ADAY           check it                               01-$$ASMIF\n 00000FEA A744 0004               00000FF2   6055+         BRC   4,WAIT_TIME_VALID  (BC)                                  03-\n 00000FEE                                    6056+WAIT_TIME_INVALID DS 0H                                                 01-$$ASMIF\n 00000FEE 5820 B378               00001F80   6057+         L     R2,ADAY           get it                                 01-$$ASMIF\n 00000FF2                                    6058+WAIT_TIME_VALID DS 0H                                                   01-$$ASMIF\n 00000FF2 5020 D114               00000114   6059+         ST    R2,ASM_PARMS      save time value                        01-$$ASMIF\n 00000FF6 4120 D118               00000118   6060+         LA    R2,ASM_PARMS+4    next ECB                               01-$$ASMIF\n 00000FFA 4130 D0B4               000000B4   6061+         LA    R3,ASM_EVENT0_ECBP-4 next pointer                        01-$$ASMIF\n 00000FFE 4140 0004               00000004   6062+         LA    R4,4              max count                              01-$$ASMIF\n 00001002 4150 D134               00000134   6063+         LA    R5,ASM_CALLLIST   temp addr                              01-$$ASMIF\n 00001006 D71F D134 D134 00000134 00000134   6064+         XC    ASM_CALLLIST(32),ASM_CALLLIST                            01-$$ASMIF\n 0000100C D503 2000 B194 00000000 00001D9C   6065+WAIT_ECBP_LOOP CLC 0(4,R2),ZERO  end of list                            01-$$ASMIF\n 00001012 A784 0026               0000105E   6068+         BRC   8,WAIT_ECBP_LOOP_END  (BC)                               03-\n 00001016 4130 3004               00000004   6069+         LA    R3,4(,R3)         next ECBP                              01-$$ASMIF\n 0000101A 5812 0000               00000000   6070+         L     R1,0(R2)          get ECB addr                           01-$$ASMIF\n 0000101E 9140 1000      00000000            6071+         TM    0(R1),X'40'       is it posted                           01-$$ASMIF\n 00001022 A714 005D               000010DC   6074+         BRC   1,WAIT_COMPLETED  (BC)                                   03-\n                                             6075+*26/04/04\n 00001026 D403 1000 B084 00000000 00001C8C   6076+         NC    0(4,R1),=X'7FFFFFFF' off wait flag                       01-$$ASMIF\n 0000102C 5010 3000               00000000   6077+         ST    R1,0(,R3)          store in the list                     01-$$ASMIF\n                                             6078+*25/08/04\n                                             6079+*        enq   (wait_maj,0(r3),e,4,step),mf=(e,asm_enql)\n                                             6082+*         MACRO-DATE = 06/24/03                                    @05C\n 00001030                                    6083+         DS    0H                                                  @04A 02-ENQ\n 00001030 4110 D20C               0000020C   6086+         LA    1,ASM_ENQL                    ADDR OF PARAM IN REG  @L1C 03-IHBSETR\n 00001034 9204 1001      00000001            6087+         MVI   1(1),4                  PELMILEN - RNAME length.         02-ENQ\n 00001038 9437 1002      00000002            6088+         NI    2(1),55                   SET OPTIONS SPECIFIED @ZA00466 02-ENQ\n 0000103C 41E0 B37C               00001F84   6089+         LA    14,WAIT_MAJ               GET QNAME ADDRESS              02-ENQ\n 00001040 50E0 1004               00000004   6090+         ST    14,4(0,1)                 STORE QNAME ADDRESS            02-ENQ\n 00001044 41E3 0000               00000000   6091+         LA    14,0(R3)                  GET RNAME ADDRESS              02-ENQ\n 00001048 50E0 1008               00000008   6092+         ST    14,8(0,1)                 STORE RNAME ADDRESS            02-ENQ\n 0000104C 0A38                               6093+         SVC   56                                                       02-ENQ\n1          asmif asm interfcae module                                                                           Page   51\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'\n   BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000104E 5030 5000               00000000   6094+         ST    R3,0(,R5)         save it                                01-$$ASMIF\n 00001052 4150 5004               00000004   6095+         LA    R5,4(,R5)         next                                   01-$$ASMIF\n                                             6096+*25/08/04\n 00001056 4120 2004               00000004   6097+         LA    R2,4(,R2)         next ECBP                              01-$$ASMIF\n 0000105A A746 FFD9               0000100C   6099+         BRCT  R4,WAIT_ECBP_LOOP  (BCT)                                 02-\n 0000105E                                    6100+WAIT_ECBP_LOOP_END DS 0H                                                01-$$ASMIF\n 0000105E 9680 3000      00000000            6101+         OI    0(R3),X'80'       high order on                          01-$$ASMIF\n 00001062 4140 D0C8               000000C8   6102+         LA    R4,ASM_TIMER_ECB  get timer ecb                          01-$$ASMIF\n 00001066 5040 D0B4               000000B4   6103+         ST    R4,ASM_TIMER_ECBP set it                                 01-$$ASMIF\n 0000106A D703 D0C8 D0C8 000000C8 000000C8   6104+         XC    ASM_TIMER_ECB,ASM_TIMER_ECB cear ecb                     01-$$ASMIF\n 00001070 4150 D074               00000074   6105+         LA    R5,ASM_TIMX       get timx addr                          01-$$ASMIF\n 00001074 5810 D114               00000114   6106+         L     R1,ASM_PARMS      time here                              01-$$ASMIF\n 00001078 C0E5 0000 0590          00001B98   6107+         BRASL R14,MILLSEC       call millsec routine                   01-$$ASMIF\n                                             6108+*        stimer real,(r5),micvl=asm_sleep get address\n                                             6111+*        MACDATE = 08/19/88                                        @L1C\n 0000107E 4110 D228               00000228   6112+         LA    1,ASM_SLEEP                        LOAD ADDR TIME VALUE  02-STIMER\n 00001082 18F5                               6113+         LR    15,R5                              LOAD EXIT ADDRESS     02-STIMER\n 00001084 4100 00A3               000000A3   6114+         LA    0,163(0,0)                        LOAD FLAG BYTE         02-STIMER\n 00001088 8900 0018               00000018   6115+         SLL   0,24(0)                           SHIFT TO HI-ORDER BYTE 02-STIMER\n 0000108C 0A2F                               6116+         SVC   47                                ISSUE STIMER SVC       02-STIMER\n                                             6117+*        wait  ecblist=asm_timer_ecbp,linkage=system\n                                             6119+*        MACDATE  10/20/88                                         @01C\n 0000108E 4100 0001               00000001   6121+         LA    0,1(0,0)                    COUNT OMITTED,1 USED    @L1C 02-WAIT\n                                             6123+*                                                                 1@L1D\n                                             6124+*                                                                 1@L1D\n 00001092 4110 D0B4               000000B4   6126+         LA    1,ASM_TIMER_ECBP                  LOAD PARAMETER REG 1   03-IHBINNRA\n 00001096 1311                               6127+         LCR   1,1                         INDICATE ECBLIST USED        02-WAIT\n 00001098 58E0 0010               00000010   6128+         L     14,16(0,0)                  CVT ADDRESS             @L1A 02-WAIT\n 0000109C 58E0 E304               00000304   6129+         L     14,772(,14)                 SYSTEM FUNCTION TABLE   @L1A 02-WAIT\n 000010A0 58E0 E0A8               000000A8   6130+         L     14,168(,14)                 GET LX/EX FROM SFT      @L1A 02-WAIT\n 000010A4 B218 E000      00000000            6131+         PC    0(14)                       PC TO WAIT SERVICE RTNE @L1A 02-WAIT\n                                             6132+*        ttimer cancel           cancel timer\n                                             6134+*        MACDATE  02/26/90                                         @P1C\n 000010A8 4110 0001               00000001   6135+         LA    1,1(0,0)                     LOAD 1 TO SET FLAG BYTE     02-TTIMER\n 000010AC 0A2E                               6136+         SVC   46                           ISSUE TTIMER                02-TTIMER\n                                             6137+*25/08/04\n 000010AE 41F0 D0B8               000000B8   6138+         LA    R15,ASM_EVENT0_ECBP get ecb pointer                      01-$$ASMIF\n 000010B2 41E0 0004               00000004   6139+         LA    R14,4             max ecb                                01-$$ASMIF\n 000010B6 BF1F F000               00000000   6140+WAIT_POSTED_LOOP ICM R1,15,0(R15) get next                              01-$$ASMIF\n 000010BA 4110 1000               00000000   6141+         LA    R1,0(,R1)         get rid of high order                  01-$$ASMIF\n 000010BE 1211                               6142+         LTR   R1,R1             test it                                01-$$ASMIF\n 000010C0 A784 000A               000010D4   6145+         BRC   8,WAIT_POSTED_TIME  (BC)                                 03-\n 000010C4 9140 1000      00000000            6146+         TM    0(R1),X'40'       is it posted                           01-$$ASMIF\n 000010C8 A714 000A               000010DC   6149+         BRC   1,WAIT_COMPLETED  (BC)                                   03-\n 000010CC 41F0 F004               00000004   6150+         LA    R15,4(,R15)       next ecbp                              01-$$ASMIF\n 000010D0 A7E6 FFF3               000010B6   6152+         BRCT  R14,WAIT_POSTED_LOOP  (BCT)                              02-\n 000010D4                                    6153+WAIT_POSTED_TIME DS 0H                                                  01-$$ASMIF\n 000010D4 9140 D0C8      000000C8            6154+         TM    ASM_TIMER_ECB,X'40' timer occured                        01-$$ASMIF\n 000010D8 A714 000D               000010F2   6157+         BRC   1,WAIT_08  (BC)                                          03-\n 000010DC                                    6158+WAIT_COMPLETED DS 0H                                                    01-$$ASMIF\n 000010DC 1211                               6159+         LTR   R1,R1             test r1                                01-$$ASMIF\n 000010DE A784 0005               000010E8   6162+         BRC   8,WAIT_00  (BC)                                          03-\n 000010E2 D403 1000 B088 00000000 00001C90   6163+         NC    0(4,R1),=X'3FFFFFFF' clear wait and post flags           01-$$ASMIF\n 000010E8 1BFF                               6164+WAIT_00  SR    R15,R15           clear code                             01-$$ASMIF\n 000010EA BFFF 1000               00000000   6165+         ICM   R15,15,0(R1)      get code                               01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   52\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'\n   BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000010EE A7F4 0004               000010F6   6168+         BRC   15,WAIT_XX  (BC)                                         03-\n 000010F2 58F0 B038               00001C40   6169+WAIT_08  L     R15,=F'-1'        get code                               01-$$ASMIF\n 000010F6 50F0 D060               00000060   6170+WAIT_XX  ST    R15,ASM_RC        back code                              01-$$ASMIF\n                                             6171+*25/08/04\n 000010FA 4150 D134               00000134   6172+         LA    R5,ASM_CALLLIST    get ecb pointer                       01-$$ASMIF\n 000010FE 4140 0004               00000004   6173+         LA    R4,4              max ecb                                01-$$ASMIF\n 00001102 BF3F 5000               00000000   6174+WAIT_DEQ_LOOP ICM R3,15,0(R5) get next                                  01-$$ASMIF\n 00001106 A784 0018               00001136   6177+         BRC   8,WAIT_DEQ_DONE  (BC)                                    03-\n 0000110A D403 3000 B084 00000000 00001C8C   6178+         NC    0(4,R3),=X'7FFFFFFF' off high bit                        01-$$ASMIF\n                                             6179+*        deq   (wait_maj,0(r3),4,step),mf=(e,asm_enql)\n                                             6181+*        MACRO-DATE = 10/06/2004                                   @P2C\n 00001110                                    6184+         DS    0H                                                  @04A 03-ENQ\n 00001110 4110 D20C               0000020C   6187+         LA    1,ASM_ENQL                    ADDR OF PARAM IN REG  @L1C 04-IHBSETR\n 00001114 9204 1001      00000001            6188+         MVI   1(1),4                  PELMILEN - RNAME length.         03-ENQ\n 00001118 94B7 1002      00000002            6189+         NI    2(1),183                  SET OPTIONS SPECIFIED @ZA00466 03-ENQ\n 0000111C 41E0 B37C               00001F84   6190+         LA    14,WAIT_MAJ               GET QNAME ADDRESS              03-ENQ\n 00001120 50E0 1004               00000004   6191+         ST    14,4(0,1)                 STORE QNAME ADDRESS            03-ENQ\n 00001124 41E3 0000               00000000   6192+         LA    14,0(R3)                  GET RNAME ADDRESS              03-ENQ\n 00001128 50E0 1008               00000008   6193+         ST    14,8(0,1)                 STORE RNAME ADDRESS            03-ENQ\n 0000112C 0A30                               6194+         SVC   48                                                  SDS1 02-DEQ\n 0000112E 4150 5004               00000004   6195+         LA    R5,4(,R5)       next ecbp                                01-$$ASMIF\n 00001132 A746 FFE8               00001102   6197+         BRCT  R4,WAIT_DEQ_LOOP  (BCT)                                  02-\n 00001136                                    6198+WAIT_DEQ_DONE DS 0H                                                     01-$$ASMIF\n                                             6199+*        LR    R15,R5            back rc\n 00001136 0101                               6200+         PR    ,                 return back                            01-$$ASMIF\n                                             6201+*        DROP  R2\n                                             6202+*---------------------------------------------------------------------*\n                                             6203+* post for an event                                                   *\n                                             6204+* +0     ECB pointer                                                  *\n                                             6205+* +4     post code                                                    *\n                                             6206+* back : r15 = returrn code                                           *\n                                             6207+*---------------------------------------------------------------------*\n                     R:4 00000000            6208+         USING EVENT_TOKEN,R4    base on even token                     01-$$ASMIF\n 00001138 9845 D114               00000114   6209+POST     LM    R4,R5,ASM_PARMS   get parms                              01-$$ASMIF\n 0000113C 5864 0000               00000000   6210+         L     R6,0(R4)            get ecb                              01-$$ASMIF\n 00001140 1266                               6211+         LTR   R6,R6               test ECB                             01-$$ASMIF\n 00001142 A744 0016               0000116E   6214+         BRC   4,POSTBR_X  (BC)                                         03-\n 00001146 5460 B088               00001C90   6215+         N     R6,=X'3FFFFFFF'     off wait post bit                    01-$$ASMIF\n 0000114A 5810 B08C               00001C94   6216+         L     R1,=X'40000000'     get posted                           01-$$ASMIF\n 0000114E 1615                               6217+         OR    R1,R5               get code                             01-$$ASMIF\n 00001150 BA61 4000               00000000   6218+         CS    R6,R1,0(R4)         check it                             01-$$ASMIF\n 00001154 A784 0011               00001176   6221+         BRC   8,POSTED_X  (BC)                                         03-\n 00001158 1266                               6222+         LTR   R6,R6               test wait bit                        01-$$ASMIF\n 0000115A A744 000A               0000116E   6225+         BRC   4,POSTBR_X  (BC)                                         03-\n 0000115E 5460 B08C               00001C94   6226+         N     R6,=X'40000000'     test if already posted               01-$$ASMIF\n 00001162 A784 0006               0000116E   6229+         BRC   8,POSTBR_X  (BC)                                         03-\n 00001166 BE57 4001               00000001   6230+         STCM  R5,7,1(R4)          set new code                         01-$$ASMIF\n 0000116A A7F4 0006               00001176   6233+         BRC   15,POSTED_X  (BC)                                        03-\n 0000116E                                    6234+POSTBR_X DS 0H                                                          01-$$ASMIF\n                                             6235+*        post  (r4),(r5)           issue POST\n                                             6237+*        MACDATE  03/11/11                                         @L4C\n 0000116E 1805                               6239+         LR    0,R5                   . SET POST CODE              @D1A 02-POST\n 00001170 4110 4000               00000000   6240+         LA    1,0(0,R4)              . LOAD ECB, CLEAR HI BYTE    @D1A 02-POST\n 00001174 0A02                               6241+         SVC   2                      . ISSUE THE POST SVC         @D1A 02-POST\n 00001176 D203 D060 B194 00000060 00001D9C   6242+POSTED_X MVC   ASM_RC,ZERO         clear rc                             01-$$ASMIF\n1          asmif asm interfcae module                                                                           Page   53\n   Active Usings: PSA,R0  EVENT_TOKEN,R4  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000117C A7F4 0005               00001186   6245+         BRC   15,POST_XX  (BC)                                         03-\n 00001180 D203 D060 B070 00000060 00001C78   6246+POSTERR_X MVC  ASM_RC,=A(8)        set code                             01-$$ASMIF\n 00001186 58F0 D060               00000060   6247+POST_XX  L     R15,ASM_RC          get code                             01-$$ASMIF\n 0000118A 0101                               6248+         PR    ,                   return                               01-$$ASMIF\n                                             6249+         DROP  R4                                                       01-$$ASMIF\n                                             6250+*---------------------------------------------------------------------*\n                                             6251+* reset reset event  ecb                                              *\n                                             6252+* +0     event token pointer                                          *\n                                             6253+* back : r15 = returrn code                                           *\n                                             6254+*---------------------------------------------------------------------*\n                     R:4 00000000            6255+         USING EVENT_TOKEN,R4    base on even token                     01-$$ASMIF\n 0000118C 9845 D114               00000114   6256+RESET    LM    R4,R5,ASM_PARMS   get parms                              01-$$ASMIF\n 00001190 5830 4008               00000008   6257+         L     R3,EVENT_TOKEN_ECBP   get ecb pointer                    01-$$ASMIF\n                                             6258+****     xc    0(4,r3),0(r3)      leave as it is\n 00001194 1BFF                               6259+         SR    R15,R15            clear ret                             01-$$ASMIF\n 00001196 58F0 D060               00000060   6260+         L     R15,ASM_RC          get code                             01-$$ASMIF\n 0000119A 0101                               6261+         PR    ,                   return                               01-$$ASMIF\n                                             6262+         DROP  R4                                                       01-$$ASMIF\n                                             6263+* 06/03/12 TESTAUTH DIAGNOSE extension\n                                             6264+*---------------------------------------------------------------------*\n                                             6265+* TESTAUTH test if APF authorized                                     *\n                                             6266+* back : r15 = returrn code                                           *\n                                             6267+*---------------------------------------------------------------------*\n 0000119C B240 00E0                          6268+TESTAUTH_INTERN BAKR R14,0                                              01-$$ASMIF\n 000011A0                                    6269+TESTAUTH  DS  0H                                                        01-$$ASMIF\n 000011A0 BFFF D8D8               000008D8   6281+                ICM R15,15,ASM_TESTAUTH                                 04-ASMMPOPI\n 000011A4 A7B4 000D               000011BE   6282+           BRC          11,#@LB7                                        03-ASMMIFPR\n                                             6284+*         testauth fctn=1\n 000011A8 4110 0001               00000001   6286+         LA    1,1(0,0)       SPECIFY FUNCTION CODE              YM1995 02-TESTAUTH\n 000011AC 4100 0FFF               00000FFF   6287+         LA    0,X'FFF'       NO AUTH CODE SPECIFIED --        @G860PXB 02-TESTAUTH\n 000011B0 8900 0014               00000014   6288+         SLL   0,20             REG 0 NEGATIVE                 @G860PXB 02-TESTAUTH\n 000011B4 0A77                               6289+         SVC   119                                                      02-TESTAUTH\n 000011B6 50F0 D8D8               000008D8   6290+          ST  R15,ASM_TESTAUTH                                          01-$$ASMIF\n 000011BA A7F4 0004               000011C2   6296+         BRC   15,#@LB9                                                 02-\n 000011BE                                    6297+#@LB7    DC    0H                                                       02-\n 000011BE BFFF D8D8               000008D8   6299+          ICM  R15,15,ASM_TESTAUTH                                      01-$$ASMIF\n 000011C2                                    6305+#@LB9    DC    0H                                                       02-\n 000011C2 0101                               6307+          PR   ,                                                        01-$$ASMIF\n                                             6308+* 06/03/12 TESTAUTH DIAGNOSE extension\n                                             6309+*---------------------------------------------------------------------*\n                                             6310+* DIAGNOSE test if APF authorized                                     *\n                                             6311+* +0     diag x'0204' code                                            *\n                                             6312+* +4     reply area address\n                                             6313+* back : r15 = returrn code                                           *\n                                             6314+*---------------------------------------------------------------------*\n 000011C4 9823 D114               00000114   6315+DIAGNOSE LM    R2,R3,ASM_PARMS     get parms                            01-$$ASMIF\n 000011C8                                    6324+DIAGNOSE_LEAVE DC 0H                                                    03-ASMMDOPR\n 000011C8                                    6325+#@LB11                 DC  0H                                           03-ASMMDOPR\n 000011C8 BFFF D8D8               000008D8   6338+                ICM R15,15,ASM_TESTAUTH                                 04-ASMMPOPI\n 000011CC A774 0082               000012D0   6339+           BRC          7,#@LB12                                        03-ASMMIFPR\n                                             6341+*        modeset mode=sup,key=zero supervisor state\n                                             6343+* MACDATE Y-3 81030                                                @D1A\n 000011D0                                    6345+         CNOP  0,4                                                      02-MODESET\n 000011D0 A715 0004               000011D8   6346+         BRAS  1,*+8                                                    02-MODESET\n 000011D4 0000003C                           6347+         DC    B'00000000000000000000000000111100'                      02-MODESET\n1          asmif asm interfcae module                                                                           Page   54\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'\n   BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000011D8 5810 1000               00000000   6348+         L     1,0(0,1)                                          YM1995 02-MODESET\n 000011DC 0A6B                               6349+         SVC   107                                                      02-MODESET\n 000011DE D403 D8DC B090 000008DC 00001C98   6361+                NC              ASM_DIAGNOSE_FLAG,=A(ASM_DIAGNOSE_FIX)  04-ASMMPOPI\n 000011E4 A774 002B               0000123A   6362+           BRC          7,#@LB14                                        03-ASMMIFPR\n 000011E8 BF4F D8E0               000008E0   6375+                ICM R4,15,ASM_DIAGNOSE_ADDR                             04-ASMMPOPI\n 000011EC A774 0016               00001218   6376+           BRC          7,#@LB16                                        03-ASMMIFPR\n                                             6378+*        storage obtain,length=asm_diagnose_length,bndry=page\n 000011F0 5800 B094               00001C9C   6381+         L      0,=A(ASM_DIAGNOSE_LENGTH)    .STORAGE LENGTH       @P9C 02-STORAGE\n 000011F4 58F0 B098               00001CA0   6382+         L      15,=AL1(B'00000000',(0*16),(0),B'00000110')            X02-STORAGE\n                                                 +                                             .CONTROL INFORMATION  @P9C\n 000011F8 58E0 0010               00000010   6383+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 000011FC 58EE 0304               00000304   6384+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 00001200 58EE 00A0               000000A0   6385+         L      14,160(14,0)                 .OBTAIN LX/EX FOR OBTAIN   02-STORAGE\n 00001204 B218 E000      00000000            6386+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 00001208 12FF                               6398+                LTR             R15,R15                                 04-ASMMPOPI\n 0000120A A784 0004               00001212   6399+           BRC          8,#@LB18                                        03-ASMMIFPR\n 0000120E A7F4 0061               000012D0   6404+         BRC   15,#@LB10                                                02-\n 00001212                                    6411+#@LB18   DC    0H                                                       02-\n 00001212 5010 D8E0               000008E0   6413+  ST  R1,ASM_DIAGNOSE_ADDR                                              01-$$ASMIF\n 00001216 1841                               6414+  LR  R4,R1                                                             01-$$ASMIF\n 00001218                                    6420+#@LB16   DC    0H                                                       02-\n                                             6422+* PGSER R,FIX,A=(R4),EA=4095(,R4),ECB=0\n 00001218 1F00                               6425+         SLR   0,0              NO ECB --- FORCE REG 0 TO EQUAL ZERO    02-PGSER\n 0000121A 1814                               6426+         LR    1,(R4)           LOAD POINTER TO START OF VIRTUAL       X02-PGSER\n                                                 +                                  ADDRESS RANGE INTO PARAMETER REG\n 0000121C A516 7FFF               00007FFF   6427+         NILH  1,X'7FFF'        FORCE BIT0 TO ZERO                 @L5A 02-PGSER\n 00001220 41F0 4FFF               00000FFF   6428+         LA    15,4095(,R4)     LOAD END ADDRESS                        02-PGSER\n 00001224 41E0 010C               0000010C   6429+         LA    14,X'0100'+B'00001100'(0,0)                             X02-PGSER\n                                                 +                                   SET FUNCTION CODE AND OPTION FLAGS\n 00001228 0A8A                               6430+         SVC   138              INVOKE PAGE SERVICE PROCESSOR SVC       02-PGSER\n 0000122A 12FF                               6442+                LTR             R15,R15                                 04-ASMMPOPI\n 0000122C A784 0004               00001234   6443+           BRC          8,#@LB20                                        03-ASMMIFPR\n 00001230 A7F4 0050               000012D0   6448+         BRC   15,#@LB10                                                02-\n 00001234                                    6455+#@LB20   DC    0H                                                       02-\n 00001234 D603 D8DC B090 000008DC 00001C98   6457+  OC  ASM_DIAGNOSE_FLAG,=A(ASM_DIAGNOSE_FIX)                            01-$$ASMIF\n 0000123A                                    6463+#@LB14   DC    0H                                                       02-\n 0000123A D403 D8DC B09C 000008DC 00001CA4   6476+                NC              ASM_DIAGNOSE_FLAG,=A(ASM_DIAGNOSE_DONTSX04-ASMMPOPI\n                                                 +               WAP)\n 00001240 A774 000D               0000125A   6477+           BRC          7,#@LB22                                        03-ASMMIFPR\n                                             6479+* sysevent dontswap\n 00001244 4100 0029               00000029   6481+         LA    0,41(0,0)               SYSEVENT CODE                    02-SYSEVENT\n 00001248 0A5F                               6482+         SVC   95                      SYSTEM RESOURCES MANAGER SVC     02-SYSEVENT\n 0000124A 12FF                               6494+                LTR             R15,R15                                 04-ASMMPOPI\n 0000124C A784 0004               00001254   6495+           BRC          8,#@LB24                                        03-ASMMIFPR\n 00001250 A7F4 0040               000012D0   6500+         BRC   15,#@LB10                                                02-\n 00001254                                    6507+#@LB24   DC    0H                                                       02-\n 00001254 D603 D8DC B09C 000008DC 00001CA4   6509+  OC  ASM_DIAGNOSE_FLAG,=A(ASM_DIAGNOSE_DONTSWAP)                       01-$$ASMIF\n 0000125A                                    6515+#@LB22   DC    0H                                                       02-\n 0000125A 1832                               6517+  LR  R3,R2                                                             01-$$ASMIF\n 0000125C B120 4000               00000000   6518+  LRA R2,0(,R4)                                                         01-$$ASMIF\n                                             6520+**********************************************************************\n                                             6521+*  Licensed Materials - Property of IBM\n                                             6522+*  This product contains \"Restricted Materials of IBM\"\n                                             6523+*  5735-FAL (C) Copyright IBM Corp. 1991.\n                                             6524+*  5655-HAL (C) Copyright IBM Corp. 1991, 1994.\n1          asmif asm interfcae module                                                                           Page   55\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'\n   BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            6525+*  All rights reserved.\n                                             6526+*  US Government Users Restricted Rights -\n                                             6527+*  Use, duplication or disclosure restricted by GSA ADP Schedule\n                                             6528+*  Contract with IBM Corp.\n                                             6529+*  See IBM Copyright Instructions.\n                                             6530+**********************************************************************\n 00001260 83230204                           6531+         DC    0H'0',X'83',AL.4(R2,R3),Y(X'0204')                       02-DIAG\n 00001264 5800 D118               00000118   6532+  L    R0,ASM_PARMS+4                                                   01-$$ASMIF\n 00001268 A718 0FFF               00000FFF   6533+  LHI  R1,4095                                                          01-$$ASMIF\n 0000126C 1851                               6534+  LR  R5,R1                                                             01-$$ASMIF\n 0000126E 1824                               6535+  LR   R2,R4                                                            01-$$ASMIF\n 00001270 0E04                               6536+  MVCL R0,R4                                                            01-$$ASMIF\n 00001272 D403 D8DC B0A0 000008DC 00001CA8   6548+                NC              ASM_DIAGNOSE_FLAG,=A(ASM_DIAGNOSE_KEEP) 04-ASMMPOPI\n 00001278 A774 0024               000012C0   6549+           BRC          7,#@LB26                                        03-ASMMIFPR\n                                             6551+* SYSEVENT OKSWAP\n 0000127C 4100 002A               0000002A   6553+         LA    0,42(0,0)               SYSEVENT CODE                    02-SYSEVENT\n 00001280 0A5F                               6554+         SVC   95                      SYSTEM RESOURCES MANAGER SVC     02-SYSEVENT\n 00001282 D403 D8DC B0A4 000008DC 00001CAC   6555+  NC   ASM_DIAGNOSE_FLAG,=A(ASM_DIAGNOSE_ALL-ASM_DIAGNOSE_DONTSWAP)     01-$$ASMIF\n                                             6556+* PGSER R,FREE,A=(R4),EA=4095(,R4),ECB=0\n 00001288 1F00                               6559+         SLR   0,0              NO ECB --- FORCE REG 0 TO EQUAL ZERO    02-PGSER\n 0000128A 1814                               6560+         LR    1,(R4)           LOAD POINTER TO START OF VIRTUAL       X02-PGSER\n                                                 +                                  ADDRESS RANGE INTO PARAMETER REG\n 0000128C A516 7FFF               00007FFF   6561+         NILH  1,X'7FFF'        FORCE BIT0 TO ZERO                 @L5A 02-PGSER\n 00001290 41F0 4FFF               00000FFF   6562+         LA    15,4095(,R4)     LOAD END ADDRESS                        02-PGSER\n 00001294 41E0 0200               00000200   6563+         LA    14,X'0200'+B'00000000'(0,0)                             X02-PGSER\n                                                 +                                   SET FUNCTION CODE AND OPTION FLAGS\n 00001298 0A8A                               6564+         SVC   138              INVOKE PAGE SERVICE PROCESSOR SVC       02-PGSER\n 0000129A D403 D8DC B0A8 000008DC 00001CB0   6565+  NC   ASM_DIAGNOSE_FLAG,=A(ASM_DIAGNOSE_ALL-ASM_DIAGNOSE_FIX)          01-$$ASMIF\n                                             6566+*        storage release,length=asm_diagnose_length,addr=(r2)\n 000012A0 5800 B094               00001C9C   6569+         L      0,=A(ASM_DIAGNOSE_LENGTH)    .STORAGE LENGTH       @P9C 02-STORAGE\n 000012A4 1812                               6570+         LR     1,R2                         .ADDRESS OF STORAGE        02-STORAGE\n 000012A6 A7F8 0003               00000003   6571+         LHI    15,X'0003'                   .Add in parameters    @PCA 02-STORAGE\n 000012AA 58E0 0010               00000010   6572+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 000012AE 58EE 0304               00000304   6573+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 000012B2 58EE 00CC               000000CC   6574+         L      14,204(14,0)                 .OBTAIN LX/EX FOR RELEASE  02-STORAGE\n 000012B6 B218 E000      00000000            6575+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 000012BA D703 D8E0 D8E0 000008E0 000008E0   6576+  XC    ASM_DIAGNOSE_ADDR,ASM_DIAGNOSE_ADDR                             01-$$ASMIF\n 000012C0                                    6582+#@LB26   DC    0H                                                       02-\n                                             6584+* modeset mode=prob,key=nzero\n                                             6586+* MACDATE Y-3 81030                                                @D1A\n 000012C0                                    6588+         CNOP  0,4                                                      02-MODESET\n 000012C0 A715 0004               000012C8   6589+         BRAS  1,*+8                                                    02-MODESET\n 000012C4 00000024                           6590+         DC    B'00000000000000000000000000100100'                      02-MODESET\n 000012C8 5810 1000               00000000   6591+         L     1,0(0,1)                                          YM1995 02-MODESET\n 000012CC 0A6B                               6592+         SVC   107                                                      02-MODESET\n 000012CE 1BFF                               6593+  SR   R15,R15                                                          01-$$ASMIF\n 000012D0                                    6599+#@LB12   DC    0H                                                       02-\n 000012D0                                    6606+#@LB10                DC                    0H                          03-ASMMPOPI\n 000012D0 0101                               6609+ PR ,                                                                   01-$$ASMIF\n                                             6610+***********************************************************************\n                                             6611+* VSMLIST                                                             *\n                                             6612+*  function : the routine  builds an SRB and schedules it             *\n                                             6613+*             issue a VSMLIST commandinthe traget address space       *\n                                             6614+*             XM communication                                        *\n                                             6615+* parms :                                                             *\n1          asmif asm interfcae module                                                                           Page   56\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'\n   BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            6616+* +0 target ascb address                                              *\n                                             6617+* +4 reply area                                                       *\n                                             6618+* +8 reply area  length                                               *\n                                             6619+***********************************************************************\n 000012D2 5820 D114               00000114   6620+VSMLIST  L     R2,ASM_PARMS       gett parms                            01-$$ASMIF\n 000012D6 5020 D8E4               000008E4   6621+         ST    R2,ASM_VSMLIST_ASCBADDR save ASCB addr                   01-$$ASMIF\n 000012DA 5810 0010               00000010   6622+         L     R1,X'10'            get cvt addr                         01-$$ASMIF\n ** ASMA309W Operand X'10' resolved to a displacement with no base register\n ** ASMA435I Record 1685 in ESA.PRJ.CBTDSSN.ASM($$ASMIF) on volume: USER01\n 000012DE 5811 0000               00000000   6623+         L     R1,CVTTCBP-CVT(R1)  get TCB list addr                    01-$$ASMIF\n 000012E2 D203 D8F0 1004 000008F0 00000004   6624+         MVC   ASM_VSMLIST_MYTCB,4(R1) save the TCB addr                01-$$ASMIF\n 000012E8 5811 000C               0000000C   6625+         L     R1,12(R1)           get my ASCB addr                     01-$$ASMIF\n 000012EC 5010 D8EC               000008EC   6626+         ST    R1,ASM_VSMLIST_MYASCB save ascb addr                     01-$$ASMIF\n 000012F0 D201 D8E8 1024 000008E8 00000024   6627+         MVC   ASM_VSMLIST_MYASCBID,ASCBASID-ASCB(R1)                   01-$$ASMIF\n 000012F6                                    6636+#@LB29                 DC  0H                                           03-ASMMDOPR\n                                             6638+*        MODESET MODE=SUP,KEY=ZERO  into key0 sup state\n                                             6640+* MACDATE Y-3 81030                                                @D1A\n 000012F6 0700                               6642+         CNOP  0,4                                                      02-MODESET\n 000012F8 A715 0004               00001300   6643+         BRAS  1,*+8                                                    02-MODESET\n 000012FC 0000003C                           6644+         DC    B'00000000000000000000000000111100'                      02-MODESET\n 00001300 5810 1000               00000000   6645+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00001304 0A6B                               6646+         SVC   107                                                      02-MODESET\n                                             6647+*        GETMAIN RU,LV=SRBSIZE+SRBWORKL,SP=245 from SQA\n 00001306                                    6650+         DS    0H                                                  @P5C 02-GETMAIN\n 00001306                                    6651+IHB0421C DS     0H                                                      02-GETMAIN\n 00001306 5800 B0AC               00001CB4   6652+         L     0,=A(SRBSIZE+SRBWORKL)                                  X02-GETMAIN\n                                                 +                                  LOAD LENGTH\n 0000130A 58F0 B0B0               00001CB8   6653+         L     15,=AL1(B'00000000',(0),(245),B'00000010')              X02-GETMAIN\n                                                 +                                                 LOAD GETMAIN PARMS\n 0000130E 1B11                               6654+         SR    1,1                     ZERO RESERVED REG 1              02-GETMAIN\n 00001310 0A78                               6655+         SVC   120                     ISSUE GETMAIN SVC                02-GETMAIN\n 00001312 5010 D8F4               000008F4   6656+         ST    R1,ASM_VSMLIST_STORAGE                                   01-$$ASMIF\n 00001316 1891                               6657+         LR    R9,R1               base on SRB area                     01-$$ASMIF\n                     R:9 00000000            6658+         USING SRBSECT,R9          assign base                          01-$$ASMIF\n 00001318 4180 902C               0000002C   6659+         LA    R8,SRBSIZE(,R9)     base on srb work area                01-$$ASMIF\n                     R:8 00000000            6660+         USING SRBWORK,R8          assign base on srb work area         01-$$ASMIF\n 0000131C D72B 9000 9000 00000000 00000000   6661+         XC    SRBSECT(SRBSIZE),SRBSECT clear area                      01-$$ASMIF\n 00001322 D203 9000 B0B4 00000000 00001CBC   6662+         MVC   SRBID,=CL4'SRB'     set id                               01-$$ASMIF\n 00001328 D203 9008 D8E4 00000008 000008E4   6663+         MVC   SRBASCB,ASM_VSMLIST_ASCBADDR  save ascb addr             01-$$ASMIF\n 0000132E D201 900E D8E8 0000000E 000008E8   6664+         MVC   SRBPASID,ASM_VSMLIST_MYASCBID set my ascb id             01-$$ASMIF\n 00001334 D203 9010 D8F0 00000010 000008F0   6665+         MVC   SRBPTCB,ASM_VSMLIST_MYTCB set TCB addr for PURGEDQ       01-$$ASMIF\n 0000133A C020 0000 0077          00001428   6666+         LARL  R2,XMSRB            get SRB addr                         01-$$ASMIF\n 00001340 0B20                               6667+         BSM   R2,0                set mode                             01-$$ASMIF\n 00001342 5020 9014               00000014   6668+         ST    R2,SRBEP            move entry                           01-$$ASMIF\n 00001346 C020 0000 0135          000015B0   6669+         LARL  R2,XMFRR            get FRR addr                         01-$$ASMIF\n 0000134C 0B20                               6670+         BSM   R2,0                set mode                             01-$$ASMIF\n 0000134E 5020 9018               00000018   6671+         ST    R2,SRBRMTR          set it resoure manager               01-$$ASMIF\n 00001352 5020 9028               00000028   6672+         ST    R2,SRBFRRA           and FRR                             01-$$ASMIF\n 00001356 5080 901C               0000001C   6673+         ST    R8,SRBPARM          same as work area                    01-$$ASMIF\n 0000135A D207 8074 D118 00000074 00000118   6674+         MVC   SRBWORK_REPLY_ADDRESS(8),ASM_PARMS+4 set addr/length     01-$$ASMIF\n                                             6675+*        ALESERV EXTRACTH,STOKEN=srbwork_stoken,                       X\n                                                 +               MF=(E,SRBWORK_LALESERV)\n                                             6677+*              MACDATE = 06/13/1996                                @D1A\n 00001360                                    6678+         DS    0H                   .ALESERV SERVICE ROUTINE CALL       02-ALESERV\n 00001360 5110 805C               0000005C   6679+         LAE   1,SRBWORK_LALESERV   .ALESERV PARAMETER LIST ADDRESS     02-ALESERV\n1          asmif asm interfcae module                                                                           Page   57\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000001364 9206 1000      00000000            6680+         MVI   0(1),X'06'           .SET SERVICE TYPE CODE BYTE         02-ALESERV\n 00001368 9200 1001      00000001            6681+         MVI   1(1),0               .SET OPTIONS IN OPTIONS BYTE        02-ALESERV\n 0000136C 58E0 0010               00000010   6682+         L     14,16(0,0)           .GET ADDR OF CVT                    02-ALESERV\n 00001370 58EE 0304               00000304   6683+         L     14,772(14,0)         .GET ADDR OF SYSTEM FUNCTION TABLE  02-ALESERV\n 00001374 58EE 00C4               000000C4   6684+         L     14,196(14,0)         .GET LX/EX FOR SERVICE ROUTINE      02-ALESERV\n 00001378 B218 E000      00000000            6685+         PC    0(14)                .PC TO ALESERV SERVICE              02-ALESERV\n 0000137C 51E0 8050               00000050   6686+         LAE   14,SRBWORK_STOKEN    .GET AR MODE S-TYPE STOKEN ADDRESS  02-ALESERV\n 00001380 D207 E000 1008 00000000 00000008   6687+         MVC   0(8,14),8(1)         .STORE STOKEN FROM THE PARM LIST    02-ALESERV\n 00001386 12FF                               6699+                LTR             R15,R15                                 04-ASMMPOPI\n 00001388 A784 0004               00001390   6700+           BRC          8,#@LB30                                        03-ASMMIFPR\n 0000138C A7F4 0038               000013FC   6705+         BRC   15,#@LB28                                                02-\n 00001390                                    6712+#@LB30   DC    0H                                                       02-\n 00001390 D703 8048 8048 00000048 00000048   6714+         XC    SRBWORK_ECB,SRBWORK_ECB clear srbwork_ecb                01-$$ASMIF\n 00001396 D203 8070 D8EC 00000070 000008EC   6715+         MVC   SRBWORK_MYASCB,ASM_VSMLIST_MYASCB move ascb addr         01-$$ASMIF\n                                             6716+*        SETLOCK TEST,TYPE=LOCAL,BRANCH=(HELD,VSMLIST_LOCK)\n                                             6721+*        MACDATE = 12/31/2009                                      @LHC\n 0000139C 9101 02FB      000002FB            6722+         TM    PSACLHS-PSA+3(0),1           IS LOCAL/CML HELD?     @L8C 02-SETLOCK\n 000013A0 A784 0007               000013AE   6723+         JZ    IHA0437B             BRANCH ON NOTHELD              @P6C 02-SETLOCK\n 000013A4 D503 02EC 04A8 000002EC 000004A8   6724+         CLC   PSALOCAL-PSA(4,0),PSAFZERO-PSA(0) IS LOCAL LOCK @ZMP0008 02-SETLOCK\n                                             6725+*                                                HELD?\n 000013AA A784 000E               000013C6   6726+         JE    VSMLIST_LOCK         BRANCH ON HELD                 @P6C 02-SETLOCK\n 000013AE                                    6727+IHA0437B DC    0H'0'                                           @G387PXR 02-SETLOCK\n                                             6728+*        SETLOCK OBTAIN,TYPE=LOCAL,REGS=USE,MODE=UNCOND\n                                             6733+*        MACDATE = 12/31/2009                                      @LHC\n 000013AE 18FB                               6734+         LR    15,11                SAVE REGISTER 11                    02-SETLOCK\n 000013B0 180C                               6735+         LR    0,12                 SAVE REGISTER 12                    02-SETLOCK\n 000013B2 181D                               6736+         LR    1,13                 SAVE REGISTER 13                    02-SETLOCK\n 000013B4 58E0 02FC               000002FC   6737+         L     14,PSALITA-PSA(0,0)  LOCK INTERFACE TABLE ADDRESS   @P1A 02-SETLOCK\n 000013B8 58DE 0248               00000248   6738+         L     13,576+8(14,0)       LOAD ADDRESS OF LOCK RTN       @L8C 02-SETLOCK\n 000013BC 05ED                               6739+         BALR  14,13                BRANCH ENTER LOCK ROUTINE           02-SETLOCK\n 000013BE 18BF                               6740+         LR    11,15                RESTORE REGISTER 11                 02-SETLOCK\n 000013C0 18FD                               6741+         LR    15,13                PUT RETURN CODE IN REGISTER 15      02-SETLOCK\n 000013C2 18C0                               6742+         LR    12,0                 RESTORE REGISTER 12                 02-SETLOCK\n 000013C4 18D1                               6743+         LR    13,1                 RESTORE REGISTER 13                 02-SETLOCK\n 000013C6                                    6744+VSMLIST_LOCK    DS 0H                                                   01-$$ASMIF\n                                             6745+*        SCHEDULE SRB=(R9),SCOPE=GLOBAL schedule the SRB\n                                             6749+*        MACDATE = 01/15/93                                        @D2C\n 000013C6                                    6750+         DS    0H                                                       02-SCHEDULE\n 000013C6 1819                               6751+         LR    1,R9                    .COPY SRB ADDRESS                02-SCHEDULE\n 000013C8 58F0 0B3C               00000B3C   6752+         L     15,X'B3C'(0,0)          .LOAD REG 15 WITH ADDRESS OF    X02-SCHEDULE\n                                                 +                                       .SCHEDULE ROUTINE\n 000013CC 050F                               6753+         BALR  0,15                    .LINK TO SCHEDULE ROUTINE   @L3C 02-SCHEDULE\n                                             6754+*        SETLOCK RELEASE,TYPE=LOCAL,REGS=USE\n                                             6759+*        MACDATE = 12/31/2009                                      @LHC\n 000013CE 18FB                               6760+         LR    15,11                SAVE REGISTER 11                    02-SETLOCK\n 000013D0 180C                               6761+         LR    0,12                 SAVE REGISTER 12                    02-SETLOCK\n 000013D2 181D                               6762+         LR    1,13                 SAVE REGISTER 13                    02-SETLOCK\n 000013D4 58E0 02FC               000002FC   6763+         L     14,PSALITA-PSA(0,0)  LOCK INTERFACE TABLE ADDRESS   @P1A 02-SETLOCK\n 000013D8 58DE 0254               00000254   6764+         L     13,588+8(14,0)       LOAD ADDRESS OF LOCK RTN       @L8C 02-SETLOCK\n 000013DC 05ED                               6765+         BALR  14,13                BRANCH ENTER LOCK ROUTINE           02-SETLOCK\n 000013DE 18BF                               6766+         LR    11,15                RESTORE REGISTER 11                 02-SETLOCK\n 000013E0 18FD                               6767+         LR    15,13                PUT RETURN CODE IN REGISTER 15      02-SETLOCK\n 000013E2 18C0                               6768+         LR    12,0                 RESTORE REGISTER 12                 02-SETLOCK\n 000013E4 18D1                               6769+         LR    13,1                 RESTORE REGISTER 13                 02-SETLOCK\n                                             6770+*        WAIT  ECB=srbwork_ecb wait for SRB completion\n1          asmif asm interfcae module                                                                           Page   58\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            6772+*        MACDATE  10/20/88                                         @01C\n 000013E6 4100 0001               00000001   6774+         LA    0,1(0,0)                    COUNT OMITTED,1 USED    @L1C 02-WAIT\n                                             6776+*                                                                 1@L1D\n                                             6777+*                                                                 1@L1D\n 000013EA 4110 8048               00000048   6779+         LA    1,SRBWORK_ECB                     LOAD PARAMETER REG 1   03-IHBINNRA\n 000013EE 0A01                               6780+         SVC   1                           LINK TO WAIT ROUTINE    @L1C 02-WAIT\n 000013F0 D203 D060 806C 00000060 0000006C   6781+         MVC   ASM_RC,SRBWORK_RETCODE                                   01-$$ASMIF\n 000013F6 D203 D064 8078 00000064 00000078   6782+         MVC   ASM_REASON,SRBWORK_REPLY_ADDRESS+4                       01-$$ASMIF\n 000013FC                                    6788+#@LB28                DC                    0H                          03-ASMMPOPI\n 000013FC BF9F D8F4               000008F4   6802+                ICM R9,15,ASM_VSMLIST_STORAGE                           04-ASMMPOPI\n 00001400 A784 000B               00001416   6803+           BRC          8,#@LB32                                        03-ASMMIFPR\n                                             6805+*        FREEMAIN RU,A=(R9),LV=SRBSIZE+SRBWORKL,SP=245 free the SRB\n 00001404                                    6808+         DS    0H                                                  @P2A 02-FREEMAIN\n 00001404 5800 B0AC               00001CB4   6809+         L     0,=A(SRBSIZE+SRBWORKL)            LOAD LENGTH       @P2A 02-FREEMAIN\n 00001408 1819                               6810+         LR    1,R9                              LOAD AREA ADDRESS      02-FREEMAIN\n 0000140A 58F0 B0B8               00001CC0   6811+         L     15,=AL1(B'00000000',(0),(245),B'00000011')              X02-FREEMAIN\n                                                 +                                                 LOAD PARAMETERS\n 0000140E 0A78                               6812+         SVC   120                               ISSUE FREEMAIN SVC     02-FREEMAIN\n 00001410 D703 D8F4 D8F4 000008F4 000008F4   6813+         XC     ASM_VSMLIST_STORAGE,ASM_VSMLIST_STORAGE                 01-$$ASMIF\n 00001416                                    6819+#@LB32   DC    0H                                                       02-\n                                             6821+*        MODESET MODE=PROB,KEY=NZERO back to user key problem state\n                                             6823+* MACDATE Y-3 81030                                                @D1A\n 00001416 0700                               6825+         CNOP  0,4                                                      02-MODESET\n 00001418 A715 0004               00001420   6826+         BRAS  1,*+8                                                    02-MODESET\n 0000141C 00000024                           6827+         DC    B'00000000000000000000000000100100'                      02-MODESET\n 00001420 5810 1000               00000000   6828+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00001424 0A6B                               6829+         SVC   107                                                      02-MODESET\n 00001426 0101                               6830+         PR ,                                                           01-$$ASMIF\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   59\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0\n-\n0                                            6833+* at entry the SRB routine is in supervisor state , primary ASC\n                                             6834+* the regsisters area :\n                                             6835+* r0 address of the SRB\n                                             6836+* r1 same as SRB parm\n                                             6837+* r14 return address\n                                             6838+* r15 entry address\n0                    R:C 00000000            6840+         USING ASCB,R12                                                 01-$$ASMIF\n 00001428 C0B0 0000 03F0          00001C08   6841+XMSRB    LARL  R11,DATAASMIF       base on data                         01-$$ASMIF\n 0000142E 189E                               6842+         LR    R9,R14              save the return addr                 01-$$ASMIF\n 00001430 1881                               6843+         LR    R8,R1               base on the work area                01-$$ASMIF\n                     R:8 00000000            6844+         USING SRBWORK,R8          assign on parm area                  01-$$ASMIF\n 00001432 58C0 0224               00000224   6845+         L     R12,PSAAOLD                                              01-$$ASMIF\n 00001436 41D0 8000               00000000   6846+         LA    R13,SRBWORK_SAVESYS                                      01-$$ASMIF\n 0000143A                                    6855+VSMLOOP  DC    0H                                                       03-ASMMDOPR\n 0000143A                                    6856+#@LB35                 DC  0H                                           03-ASMMDOPR\n                                             6858+*        ALESERV ADD,STOKEN=SRBWORK_STOKEN,                            X\n                                                 +               ALET=SRBWORK_ALET,CHKEAX=NO,ACCESS=PUBLIC,              X\n                                                 +               AL=PASN,                                                X\n                                                 +               MF=(E,SRBWORK_LALESERV)\n                                             6860+*              MACDATE = 06/13/1996                                @D1A\n 0000143A                                    6861+         DS    0H                   .ALESERV SERVICE ROUTINE CALL       02-ALESERV\n 0000143A 5110 805C               0000005C   6862+         LAE   1,SRBWORK_LALESERV   .ALESERV PARAMETER LIST ADDRESS     02-ALESERV\n 0000143E 9201 1000      00000000            6863+         MVI   0(1),X'01'           .SET SERVICE TYPE CODE BYTE         02-ALESERV\n 00001442 9206 1001      00000001            6864+         MVI   1(1),6               .SET OPTIONS IN OPTIONS BYTE        02-ALESERV\n 00001446 51E0 8050               00000050   6865+         LAE   14,SRBWORK_STOKEN    .GET AR MODE S-TYPE STOKEN ADDRESS  02-ALESERV\n 0000144A D207 1008 E000 00000008 00000000   6866+         MVC   8(8,1),0(14)         .STORE STOKEN INTO THE PARM LIST    02-ALESERV\n 00001450 58E0 0010               00000010   6867+         L     14,16(0,0)           .GET ADDR OF CVT                    02-ALESERV\n 00001454 58EE 0304               00000304   6868+         L     14,772(14,0)         .GET ADDR OF SYSTEM FUNCTION TABLE  02-ALESERV\n 00001458 58EE 00BC               000000BC   6869+         L     14,188(14,0)         .GET LX/EX FOR SERVICE ROUTINE      02-ALESERV\n 0000145C B218 E000      00000000            6870+         PC    0(14)                .PC TO ALESERV SERVICE              02-ALESERV\n 00001460 51E0 8058               00000058   6871+         LAE   14,SRBWORK_ALET      .GET AR MODE S-TYPE ALET ADDRESS    02-ALESERV\n 00001464 D203 E000 1004 00000000 00000004   6872+         MVC   0(4,14),4(1)         .STORE ALET FROM THE PARM LIST      02-ALESERV\n 0000146A 12FF                               6884+                LTR             R15,R15                                 04-ASMMPOPI\n 0000146C A784 0004               00001474   6885+           BRC          8,#@LB36                                        03-ASMMIFPR\n 00001470 A7F4 0053               00001516   6890+         BRC   15,#@LB34                                                02-\n 00001474                                    6897+#@LB36   DC    0H                                                       02-\n 00001474 D703 8080 8080 00000080 00000080   6899+         XC   SRBWORK_VSMLIST_REPLY(4),SRBWORK_VSMLIST_REPLY            01-$$ASMIF\n                                             6904+*        MACDATE = 12/31/2009                                      @LHC\n 0000147A 9101 02FB      000002FB            6905+         TM    PSACLHS-PSA+3(0),1           IS LOCAL/CML HELD?     @L8C 02-SETLOCK\n 0000147E A784 0007               0000148C   6906+         JZ    IHA0496B             BRANCH ON NOTHELD              @P6C 02-SETLOCK\n 00001482 D503 02EC 04A8 000002EC 000004A8   6907+         CLC   PSALOCAL-PSA(4,0),PSAFZERO-PSA(0) IS LOCAL LOCK @ZMP0008 02-SETLOCK\n                                             6908+*                                                HELD?\n 00001488 A784 000E               000014A4   6909+         JE    XMSRB_LOCKHELD       BRANCH ON HELD                 @P6C 02-SETLOCK\n 0000148C                                    6910+IHA0496B DC    0H'0'                                           @G387PXR 02-SETLOCK\n                                             6915+*        MACDATE = 12/31/2009                                      @LHC\n 0000148C 18FB                               6916+         LR    15,11                SAVE REGISTER 11                    02-SETLOCK\n 0000148E 180C                               6917+         LR    0,12                 SAVE REGISTER 12                    02-SETLOCK\n 00001490 181D                               6918+         LR    1,13                 SAVE REGISTER 13                    02-SETLOCK\n 00001492 58E0 02FC               000002FC   6919+         L     14,PSALITA-PSA(0,0)  LOCK INTERFACE TABLE ADDRESS   @P1A 02-SETLOCK\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   60\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASCB,R12  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000001496 58DE 0248               00000248   6920+         L     13,576+8(14,0)       LOAD ADDRESS OF LOCK RTN       @L8C 02-SETLOCK\n 0000149A 05ED                               6921+         BALR  14,13                BRANCH ENTER LOCK ROUTINE           02-SETLOCK\n 0000149C 18BF                               6922+         LR    11,15                RESTORE REGISTER 11                 02-SETLOCK\n 0000149E 18FD                               6923+         LR    15,13                PUT RETURN CODE IN REGISTER 15      02-SETLOCK\n 000014A0 18C0                               6924+         LR    12,0                 RESTORE REGISTER 12                 02-SETLOCK\n 000014A2 18D1                               6925+         LR    13,1                 RESTORE REGISTER 13                 02-SETLOCK\n 000014A4                                    6926+XMSRB_LOCKHELD  DS 0H                                                   01-$$ASMIF\n 000014A4 A7F8 0004               00000004   6927+         LHI  R15,4                                                     01-$$ASMIF\n 000014A8 9867 8074               00000074   6928+         LM   R6,R7,SRBWORK_REPLY_ADDRESS                               01-$$ASMIF\n 000014AC 58C0 C07C               0000007C   6929+        L   R12,ASCBRCTP                                                01-$$ASMIF\n                                             6930+        DROP R12                                                        01-$$ASMIF\n 000014B0 A7F4 002B               00001506   6939+                 BRC           15,#@LB39                                03-ASMMDOPR\n 000014B4                                    6941+#@LB40               DC 0H                                              03-ASMMDOPR\n                                             6951+*        VSMLIST SP=PVT,tcb=((r12),all),space=free,                    X\n                                                 +               LOC=31,LINKAGE=BRANCH,                                  X\n                                                 +               PVTSP=ALL,                                              X\n                                                 +               WKAREA=(SRBWORK_VSMLIST_REPLY,                          X\n                                                 +               SRBWORK_VSMLIST_REPLY_LENGTH)\n 000014B4 4110 8080               00000080   6954+         LA  1,SRBWORK_VSMLIST_REPLY                                   X02-VSMLIST\n                                                 +                                    ADDRESS OF WORK AREA\n 000014B8 58F0 B0BC               00001CC4   6955+         L   15,=A(SRBWORK_VSMLIST_REPLY_LENGTH)                        02-VSMLIST\n 000014BC 50F0 100C               0000000C   6956+         ST  15,12(,1)              LENGTH OF WORK AREA                 02-VSMLIST\n 000014C0 58F0 B0C0               00001CC8   6957+         L   15,=F'50446336'                                            02-VSMLIST\n 000014C4 50F0 1010               00000010   6958+         ST  15,16(,1)              CONTROL INFORMATION                 02-VSMLIST\n 000014C8 50C0 1014               00000014   6959+         ST  R12,20(,1)             TCB ADDRESS                         02-VSMLIST\n 000014CC 1FFF                               6960+         SLR 15,15                                                      02-VSMLIST\n 000014CE 50F0 1018               00000018   6961+         ST  15,24(,1)              SUBPOOL LIST ADDRESS                02-VSMLIST\n 000014D2 50F0 101C               0000001C   6962+         ST  15,28(,1)              RESERVED FIELD                      02-VSMLIST\n 000014D6 58F0 0010               00000010   6963+         L   15,16(,0)              OBTAIN CVT ADDRESS                  02-VSMLIST\n 000014DA 58F0 F474               00000474   6964+         L   15,1140(,15)           VSMLIST ENTRY ADDRESS               02-VSMLIST\n 000014DE 0CEF                               6965+         BASSM 14,15                BRANCH TO VSMLIST ROUTINE           02-VSMLIST\n 000014E0 A7FE 0004               00000004   6977+                CHI             R15,4                                   04-ASMMPOPI\n 000014E4 A724 000F               00001502   6978+           BRC          2,#@LB43                                        03-ASMMIFPR\n 000014E8 B219 0200      00000200            6980+        SAC 512                                                         01-$$ASMIF\n                                             6982+*        THE VALUE OF SYSSTATE IS NOW SET TO ASCENV=AR AMODE64=NO ARCHLX02-SYSSTATE\n                                                 +               VL=2 OSREL=00000000\n 000014EC 9801 8084               00000084   6983+         LM    R0,R1,SRBWORK_VSMLIST_REPLY+4                            01-$$ASMIF\n 000014F0 9A00 B194               00001D9C   6984+         LAM   R0,R0,ZERO                                               01-$$ASMIF\n 000014F4 9A66 8058               00000058   6985+         LAM   R6,R6,SRBWORK_ALET                                       01-$$ASMIF\n 000014F8 0E60                               6986+         MVCL  R6,R0                                                    01-$$ASMIF\n                                             6988+*        THE VALUE OF SYSSTATE IS NOW SET TO ASCENV=P AMODE64=NO ARCHLVX02-SYSSTATE\n                                                 +               L=2 OSREL=00000000\n 000014FA B219 0000      00000000            6989+         SAC 0                                                          01-$$ASMIF\n 000014FE A7F4 0004               00001506   6995+         BRC   15,#@LB45                                                02-\n 00001502                                    6996+#@LB43   DC    0H                                                       02-\n 00001502 A7F4 000A               00001516   7001+         BRC   15,#@LB34                                                02-\n 00001506                                    7008+#@LB45   DC    0H                                                       02-\n 00001506                                    7015+#@LB39          DC              0H                                      03-ASMMPOPI\n 00001506 A7FE 0004               00000004   7016+                CHI             R15,4                                   03-ASMMPOPI\n 0000150A A784 FFD5               000014B4   7017+                BRC             8,#@LB40                                03-ASMMPOPI\n 0000150E 50F0 806C               0000006C   7020+         ST     R15,SRBWORK_RETCODE                                     01-$$ASMIF\n 00001512 9067 8074               00000074   7021+    STM   R6,R7,SRBWORK_REPLY_ADDRESS                                   01-$$ASMIF\n 00001516                                    7027+#@LB34                DC                    0H                          03-ASMMPOPI\n                                             7030+*        SETLOCK RELEASE,TYPE=LOCAL,REGS=USE\n                                             7035+*        MACDATE = 12/31/2009                                      @LHC\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   61\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000001516 18FB                               7036+         LR    15,11                SAVE REGISTER 11                    02-SETLOCK\n 00001518 180C                               7037+         LR    0,12                 SAVE REGISTER 12                    02-SETLOCK\n 0000151A 181D                               7038+         LR    1,13                 SAVE REGISTER 13                    02-SETLOCK\n 0000151C 58E0 02FC               000002FC   7039+         L     14,PSALITA-PSA(0,0)  LOCK INTERFACE TABLE ADDRESS   @P1A 02-SETLOCK\n 00001520 58DE 0254               00000254   7040+         L     13,588+8(14,0)       LOAD ADDRESS OF LOCK RTN       @L8C 02-SETLOCK\n 00001524 05ED                               7041+         BALR  14,13                BRANCH ENTER LOCK ROUTINE           02-SETLOCK\n 00001526 18BF                               7042+         LR    11,15                RESTORE REGISTER 11                 02-SETLOCK\n 00001528 18FD                               7043+         LR    15,13                PUT RETURN CODE IN REGISTER 15      02-SETLOCK\n 0000152A 18C0                               7044+         LR    12,0                 RESTORE REGISTER 12                 02-SETLOCK\n 0000152C 18D1                               7045+         LR    13,1                 RESTORE REGISTER 13                 02-SETLOCK\n                                             7046+*        ALESERV delete,alet=srbwork_alet,                             X\n                                                 +               CHKEAX=NO,                                              X\n                                                 +               MF=(E,SRBWORK_LALESERV)\n                                             7048+*              MACDATE = 06/13/1996                                @D1A\n 0000152E                                    7049+         DS    0H                   .ALESERV SERVICE ROUTINE CALL       02-ALESERV\n 0000152E 5110 805C               0000005C   7050+         LAE   1,SRBWORK_LALESERV   .ALESERV PARAMETER LIST ADDRESS     02-ALESERV\n 00001532 9203 1000      00000000            7051+         MVI   0(1),X'03'           .SET SERVICE TYPE CODE BYTE         02-ALESERV\n 00001536 9204 1001      00000001            7052+         MVI   1(1),4               .SET OPTIONS IN OPTIONS BYTE        02-ALESERV\n 0000153A 51E0 8058               00000058   7053+         LAE   14,SRBWORK_ALET      .GET AR MODE S-TYPE ALET ADDRESS    02-ALESERV\n 0000153E D203 1004 E000 00000004 00000000   7054+         MVC   4(4,1),0(14)         .STORE ALET INTO THE PARM LIST      02-ALESERV\n 00001544 58E0 0010               00000010   7055+         L     14,16(0,0)           .GET ADDR OF CVT                    02-ALESERV\n 00001548 58EE 0304               00000304   7056+         L     14,772(14,0)         .GET ADDR OF SYSTEM FUNCTION TABLE  02-ALESERV\n 0000154C 58EE 00C0               000000C0   7057+         L     14,192(14,0)         .GET LX/EX FOR SERVICE ROUTINE      02-ALESERV\n 00001550 B218 E000      00000000            7058+         PC    0(14)                .PC TO ALESERV SERVICE              02-ALESERV\n 00001554 12FF                               7070+                LTR             R15,R15                                 04-ASMMPOPI\n 00001556 A784 0005               00001560   7071+           BRC          8,#@LB46                                        03-ASMMIFPR\n 0000155A 0000                                   +\n 0000155C 00000000                           7073+          DC A(0)                                                       01-$$ASMIF\n 00001560                                    7079+#@LB46   DC    0H                                                       02-\n 00001560 4110 8048               00000048   7081+            LA    R1,SRBWORK_ECB      get srbwork_ecb addr              01-$$ASMIF\n 00001564 5820 8048               00000048   7082+            L     R2,SRBWORK_ECB      get srbwork_ecb contents          01-$$ASMIF\n 00001568 58F0 B08C               00001C94   7083+            L     R15,=X'40000000'    get post code                     01-$$ASMIF\n 0000156C 1222                               7095+                LTR             R2,R2                                   04-ASMMPOPI\n 0000156E A744 000A               00001582   7096+           BRC          4,#@LB48                                        03-ASMMIFPR\n 00001572 A7F4 0002               00001576   7106+                 BRC           15,#@LB51                                03-ASMMDOPR\n 00001576                                    7108+#@LB52               DC 0H                                              03-ASMMDOPR\n 00001576                                    7123+#@LB51          DC              0H                                      03-ASMMPOPI\n 00001576 BA2F 8048               00000048   7124+                CS R2,R15,SRBWORK_ECB                                   03-ASMMPOPI\n 0000157A A774 FFFE               00001576   7125+                BRC             7,#@LB52                                03-ASMMPOPI\n 0000157E A7F4 0017               000015AC   7133+         BRC   15,#@LB55                                                02-\n 00001582                                    7134+#@LB48   DC    0H                                                       02-\n 00001582 18AF                               7136+         LR     R10,R15            get post code                        01-$$ASMIF\n 00001584 1B00                               7137+         SR    R0,R0               CLEAR srbwork_ecb KEY REG            01-$$ASMIF\n 00001586 BFA8 B106               00001D0E   7138+         ICM   R10,8,=X'80'        indicate XM post                     01-$$ASMIF\n 0000158A 5870 B0C4               00001CCC   7139+         L     R7,=X'80000000'     indicate XMPOST                      01-$$ASMIF\n 0000158E 58C0 B0C4               00001CCC   7140+         L     R12,=X'80000000'    indicate XM post                     01-$$ASMIF\n 00001592 41B0 8048               00000048   7141+         LA    R11,SRBWORK_ECB     get the srbwork_ecb addr             01-$$ASMIF\n 00001596 16B7                               7142+         OR    R11,R7                                                   01-$$ASMIF\n 00001598 58D0 8070               00000070   7143+         L     R13,SRBWORK_MYASCB  address of the ascb                  01-$$ASMIF\n 0000159C 58F0 0010               00000010   7144+         L     R15,CVTPTR          get cvt addr                         01-$$ASMIF\n ** ASMA309W Operand CVTPTR resolved to a displacement with no base register\n ** ASMA435I Record 1835 in ESA.PRJ.CBTDSSN.ASM($$ASMIF) on volume: USER01\n 000015A0 58F0 F098               00000098   7145+         L     R15,CVT0PT01-CVT(,R15) get post addr                     01-$$ASMIF\n 000015A4 05EF                               7146+         BALR  R14,R15                                                  01-$$ASMIF\n 000015A6 C0B0 0000 0331          00001C08   7147+         LARL  R11,DATAASMIF       base on data                         01-$$ASMIF\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   62\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000015AC                                    7153+#@LB55   DC    0H                                                       02-\n 000015AC 07F9                               7155+         BR    R9                  branch back to the control program   01-$$ASMIF\n                                             7156+*\n                                             7157+* SRB FRR error routine\n                                             7158+*\n 000015AE 0000                                   +\n 000015B0                                    7159+XMFRR    DC    0D'0'                                                    01-$$ASMIF\n 000015B0 07FE                               7160+         BR    R14                back to the control program           01-$$ASMIF\n                                             7161+*---------------------------------------------------------------------*\n                                             7162+* bselect   determines the number of ready file descriptors           *\n                                             7163+* int        select(int nfds, fd_set *readfds, fd_set *writefds,      *\n                                             7164+*            fd_set *exceptfds, const struct timeval *timeout);       *\n                                             7165+* back : r15 = return code        0                                   *\n                                             7166+*---------------------------------------------------------------------*\n0000015B2                                    7168+SELECT  DS    0H                 CALL TO CHECK                          01-$$ASMIF\n 000015B2 9826 D114               00000114   7169+         LM    R2,R6,ASM_PARMS     get parms                            01-$$ASMIF\n 000015B6 5020 D3E0               000003E0   7170+         ST    R2,ASM_BPX1_NUMFDS  store num of FDs                     01-$$ASMIF\n 000015BA 1802                               7171+         LR    R0,R2               number of fd's                       01-$$ASMIF\n 000015BC 8800 0003               00000003   7172+         SRL   R0,3                divide by 8                          01-$$ASMIF\n 000015C0 5000 D3D4               000003D4   7173+         ST    R0,ASM_BPX1_LIST_LENGTH_R store into list                01-$$ASMIF\n 000015C4 5000 D3D8               000003D8   7174+         ST    R0,ASM_BPX1_LIST_LENGTH_W store into list                01-$$ASMIF\n 000015C8 5000 D3DC               000003DC   7175+         ST    R0,ASM_BPX1_LIST_LENGTH_E store into list                01-$$ASMIF\n 000015CC 1233                               7176+         LTR   R3,R3               test first addr                      01-$$ASMIF\n 000015CE A774 0007               000015DC   7179+         BRC   7,*+14  (BC)                                             03-\n 000015D2 4130 B194               00001D9C   7180+         LA    R3,ZERO             get zero addr                        01-$$ASMIF\n 000015D6 D703 D3D4 D3D4 000003D4 000003D4   7181+         XC    ASM_BPX1_LIST_LENGTH_R,ASM_BPX1_LIST_LENGTH_R no r       01-$$ASMIF\n 000015DC 1244                               7182+         LTR   R4,R4               test first addr                      01-$$ASMIF\n 000015DE A774 0007               000015EC   7185+         BRC   7,*+14  (BC)                                             03-\n 000015E2 4140 B194               00001D9C   7186+         LA    R4,ZERO             get zero addr                        01-$$ASMIF\n 000015E6 D703 D3D8 D3DC 000003D8 000003DC   7187+         XC    ASM_BPX1_LIST_LENGTH_W,ASM_BPX1_LIST_LENGTH_E no w       01-$$ASMIF\n 000015EC 1255                               7188+         LTR   R5,R5               test first addr                      01-$$ASMIF\n 000015EE A774 0007               000015FC   7191+         BRC   7,*+14  (BC)                                             03-\n 000015F2 4150 B194               00001D9C   7192+         LA    R5,ZERO             get zero addr                        01-$$ASMIF\n 000015F6 D703 D3DC D3DC 000003DC 000003DC   7193+         XC    ASM_BPX1_LIST_LENGTH_E,ASM_BPX1_LIST_LENGTH_E no e       01-$$ASMIF\n 000015FC 5060 D3E4               000003E4   7194+         ST    R6,ASM_BPX1_TIMEOUT set timeout                          01-$$ASMIF\n 00001600 D203 D3E8 B0C8 000003E8 00001CD0   7195+         MVC   ASM_BPX1_OPTION,=A(SEL#BITSBACKWARD) copy option         01-$$ASMIF\n 00001606 D70B D3C8 D3C8 000003C8 000003C8   7196+         XC    ASM_BPX1_RETVAL(12),ASM_BPX1_RETVAL clear return         01-$$ASMIF\n                                             7197+*        call  bpx1sel,                                                X\n                                                 +               (ASM_BPX1_NUMFDS,                                       X\n                                                 +               ASM_BPX1_LIST_LENGTH_R,                                 X\n                                                 +               (R3),                                                   X\n                                                 +               ASM_BPX1_LIST_LENGTH_W,                                 X\n                                                 +               (R4),                                                   X\n                                                 +               ASM_BPX1_LIST_LENGTH_E,                                 X\n                                                 +               (R5),                                                   X\n                                                 +               ASM_BPX1_TIMEOUT,                                       X\n                                                 +               =A(0),                                                  X\n                                                 +               ASM_BPX1_OPTION,                                        X\n                                                 +               ASM_BPX1_RETVAL,                                        X\n                                                 +               ASM_BPX1_RETCODE,                                       X\n                                                 +               ASM_BPX1_RSNCODE),                                      X\n                                                 +               VL,MF=(E,ASM_BPX1)\n 0000160C                                    7200+         DS    0H                                                       02-CALL\n 0000160C 4110 D348               00000348   7205+         LA    1,ASM_BPX1                        LOAD PARAMETER REG 1   04-IHBINNRR\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   63\n   Active Usings: PSA,R0  IEFJFCBN,R5  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000001610 41E0 D3E0               000003E0   7206+         LA    14,ASM_BPX1_NUMFDS PICKUP PARAMETER                      03-IHBOPLTX\n 00001614 41F0 D3D4               000003D4   7207+         LA    15,ASM_BPX1_LIST_LENGTH_R                               X03-IHBOPLTX\n                                                 +                                  PICKUP PARAMETER\n 00001618 1803                               7208+         LR    0,(R3)                            PICK UP PARAMETER      03-IHBOPLTX\n 0000161A 90E0 1000               00000000   7209+         STM   14,0,0(1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000161E 41E0 D3D8               000003D8   7210+         LA    14,ASM_BPX1_LIST_LENGTH_W                               X03-IHBOPLTX\n                                                 +                                  PICKUP PARAMETER\n 00001622 18F4                               7211+         LR    15,(R4)                           PICK UP PARAMETER      03-IHBOPLTX\n 00001624 4100 D3DC               000003DC   7212+         LA    0,ASM_BPX1_LIST_LENGTH_E                                X03-IHBOPLTX\n                                                 +                                  PICKUP PARAMETER\n 00001628 90E0 100C               0000000C   7213+         STM   14,0,12(1)                        STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000162C 18E5                               7214+         LR    14,(R5)                           PICK UP PARAMETER      03-IHBOPLTX\n 0000162E 41F0 D3E4               000003E4   7215+         LA    15,ASM_BPX1_TIMEOUT                                     X03-IHBOPLTX\n                                                 +                                  PICKUP PARAMETER\n 00001632 4100 B05C               00001C64   7216+         LA    0,=A(0)            PICKUP PARAMETER                      03-IHBOPLTX\n 00001636 90E0 1018               00000018   7217+         STM   14,0,24(1)                        STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000163A 41E0 D3E8               000003E8   7218+         LA    14,ASM_BPX1_OPTION PICKUP PARAMETER                      03-IHBOPLTX\n 0000163E 41F0 D3C8               000003C8   7219+         LA    15,ASM_BPX1_RETVAL PICKUP PARAMETER                      03-IHBOPLTX\n 00001642 4100 D3CC               000003CC   7220+         LA    0,ASM_BPX1_RETCODE PICKUP PARAMETER                      03-IHBOPLTX\n 00001646 90E0 1024               00000024   7221+         STM   14,0,36(1)                        STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000164A 41E0 D3D0               000003D0   7222+         LA    14,ASM_BPX1_RSNCODE                                     X03-IHBOPLTX\n                                                 +                                  PICKUP PARAMETER\n 0000164E 50E0 1030               00000030   7223+         ST    14,48(0,1)                        STORE INTO PARAM. LIST 03-IHBOPLTX\n 00001652 9680 1030      00000030            7224+         OI    48(1),X'80'                SET LAST WORD BIT ON @G860P40 03-IHBOPLTX\n 00001656 0700                               7225+         CNOP  0,4                                                      02-CALL\n 00001658 A7F5 0004               00001660   7226+         BRAS  15,*+8                            BRANCH AROUND VCON     02-CALL\n 0000165C 00000000                           7227+         DC    V(BPX1SEL)                        ENTRY POINT ADDRESS    02-CALL\n 00001660 58FF 0000               00000000   7228+         L     15,0(15,0)                        LOAD 15 WITH ENTRY ADR 02-CALL\n 00001664 05EF                               7229+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 00001666 58F0 D3CC               000003CC   7230+         L     R15,ASM_BPX1_RETCODE get reason                          01-$$ASMIF\n 0000166A 50F0 D064               00000064   7231+         ST    R15,ASM_REASON    save it                                01-$$ASMIF\n 0000166E 58F0 D3C8               000003C8   7232+         L     R15,ASM_BPX1_RETVAL  get code                            01-$$ASMIF\n 00001672 50F0 D060               00000060   7233+         ST    R15,ASM_RC        save it                                01-$$ASMIF\n 00001676 0101                               7234+         PR    ,                 return back                            01-$$ASMIF\n0                                            7236+*---------------------------------------------------------------------*\n                                             7237+* connectshmem connect a target to a share group                      *\n                                             7238+* +0     shmem token pointer                                          *\n                                             7239+* +4     area address                                                 *\n                                             7240+* back : r15 = ieantcr return code                                    *\n                                             7241+*---------------------------------------------------------------------*\n                     R:2 00000000            7242+         USING SHMEM_TOKEN,R2    base on shmem token                    01-$$ASMIF\n                     R:4 00000000            7243+         USING  VRL,R4           base on iarvrl                         01-$$ASMIF\n 00001678                                    7244+CONNECTSHMEM DS 0H                                                      01-$$ASMIF\n                                             7245+*        modeset mode=sup        supervisor state\n                                             7247+* MACDATE Y-3 81030                                                @D1A\n 00001678                                    7249+         CNOP  0,4                                                      02-MODESET\n 00001678 A715 0004               00001680   7250+         BRAS  1,*+8                                                    02-MODESET\n 0000167C 0000000C                           7251+         DC    B'00000000000000000000000000001100'                      02-MODESET\n 00001680 5810 1000               00000000   7252+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00001684 0A6B                               7253+         SVC   107                                                      02-MODESET\n                                             7254+*        $$setkey key=zero,save=asm_key key key=zero\n                                             7256+* 29/11/07 struct asm include\n 00001686                                    7257+         DS     0H                                                      02-$$SETKEY\n 00001686 B20B 0000                          7258+         IPK    ,                  + get actual key in r2               02-$$SETKEY\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   64\n   Active Usings: PSA,R0  SHMEM_TOKEN,R2  VRL,R4  IEFJFCBN,R5  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11\n   ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0** ASMA254I *** MNOTE ***                   7259+     0, KEY in R2                                                       02-$$SETKEY\n 0000168A 4220 D0CD               000000CD   7260+         STC    R2,ASM_KEY         + save key                           02-$$SETKEY\n 0000168E 4110 0000               00000000   7261+         LA     R1,X'00'(0,0)     + get value                           02-$$SETKEY\n                                             7263+* MACDATE Y-3 81030                                                @D1A\n 00001692 B20A 1000      00000000            7265+         SPKA  0(R1)               SET PSW KEY                     @D1A 03-MODESET\n 00001696 9823 D114               00000114   7266+         LM    R2,R3,ASM_PARMS   get parms                              01-$$ASMIF\n 0000169A 4140 D230               00000230   7267+         LA    R4,ASM_IARVRL     base on iarvrl area                    01-$$ASMIF\n 0000169E D71B 4000 4000 00000000 00000000   7268+         XC    0(VRLLEN,R4),0(R4) clear iarvrl dsect                    01-$$ASMIF\n 000016A4 D203 4000 2004 00000000 00000004   7269+         MVC   VRLSVSA,SHMEM_TOKEN_ADDR copy sourece addr               01-$$ASMIF\n 000016AA 5850 2000               00000000   7270+         L     R5,SHMEM_TOKEN_ASCB get ascb                             01-$$ASMIF\n                     R:5 00000000            7271+         USING ASCB,R5           base on ascb                           01-$$ASMIF\n 000016AE 5850 5150               00000150   7272+         L     R5,ASCBASSB       get assb addr                          01-$$ASMIF\n                     R:5 00000000            7273+         USING ASSB,R5           base on assb                           01-$$ASMIF\n                                             7274+*        aleserv add,stoken=assbstkn,alet=vrlsstkn+4,chkeax=no,        X\n                                                 +               MF=(E,ASM_ALESERVL)\n                                             7276+*              MACDATE = 06/13/1996                                @D1A\n 000016B2                                    7277+         DS    0H                   .ALESERV SERVICE ROUTINE CALL       02-ALESERV\n 000016B2 5110 D1FC               000001FC   7278+         LAE   1,ASM_ALESERVL       .ALESERV PARAMETER LIST ADDRESS     02-ALESERV\n 000016B6 9201 1000      00000000            7279+         MVI   0(1),X'01'           .SET SERVICE TYPE CODE BYTE         02-ALESERV\n 000016BA 9204 1001      00000001            7280+         MVI   1(1),4               .SET OPTIONS IN OPTIONS BYTE        02-ALESERV\n 000016BE 51E0 5030               00000030   7281+         LAE   14,ASSBSTKN          .GET AR MODE S-TYPE STOKEN ADDRESS  02-ALESERV\n 000016C2 D207 1008 E000 00000008 00000000   7282+         MVC   8(8,1),0(14)         .STORE STOKEN INTO THE PARM LIST    02-ALESERV\n 000016C8 58E0 0010               00000010   7283+         L     14,16(0,0)           .GET ADDR OF CVT                    02-ALESERV\n 000016CC 58EE 0304               00000304   7284+         L     14,772(14,0)         .GET ADDR OF SYSTEM FUNCTION TABLE  02-ALESERV\n 000016D0 58EE 00BC               000000BC   7285+         L     14,188(14,0)         .GET LX/EX FOR SERVICE ROUTINE      02-ALESERV\n 000016D4 B218 E000      00000000            7286+         PC    0(14)                .PC TO ALESERV SERVICE              02-ALESERV\n 000016D8 51E0 4008               00000008   7287+         LAE   14,VRLSSTKN+4        .GET AR MODE S-TYPE ALET ADDRESS    02-ALESERV\n 000016DC D203 E000 1004 00000000 00000004   7288+         MVC   0(4,14),4(1)         .STORE ALET FROM THE PARM LIST      02-ALESERV\n 000016E2 5800 2008               00000008   7289+         L     R0,SHMEM_TOKEN_LGTH get length                           01-$$ASMIF\n 000016E6 5A00 B04C               00001C54   7290+         A     R0,=A(PAGE_SIZE-1)  add page size                        01-$$ASMIF\n 000016EA 5400 B050               00001C58   7291+         N     R0,=X'0FFFF000'     and round                            01-$$ASMIF\n 000016EE 8800 000C               0000000C   7292+         SRL   R0,12             in pages                               01-$$ASMIF\n 000016F2 5000 400C               0000000C   7293+         ST    R0,VRLNUMPG       number of pages                        01-$$ASMIF\n 000016F6 5850 0224               00000224   7294+         L     R5,PSAAOLD        get target ascb                        01-$$ASMIF\n                     R:5 00000000            7295+         USING ASCB,R5           base on ascb                           01-$$ASMIF\n 000016FA 5850 5150               00000150   7296+         L     R5,ASCBASSB       get assb addr                          01-$$ASMIF\n                     R:5 00000000            7297+         USING ASSB,R5           base on assb                           01-$$ASMIF\n                                             7298+*        aleserv add,stoken=assbstkn,alet=vrltstkn+4,chkeax=no,        X\n                                                 +               MF=(E,ASM_ALESERVL)\n                                             7300+*              MACDATE = 06/13/1996                                @D1A\n 000016FE                                    7301+         DS    0H                   .ALESERV SERVICE ROUTINE CALL       02-ALESERV\n 000016FE 5110 D1FC               000001FC   7302+         LAE   1,ASM_ALESERVL       .ALESERV PARAMETER LIST ADDRESS     02-ALESERV\n 00001702 9201 1000      00000000            7303+         MVI   0(1),X'01'           .SET SERVICE TYPE CODE BYTE         02-ALESERV\n 00001706 9204 1001      00000001            7304+         MVI   1(1),4               .SET OPTIONS IN OPTIONS BYTE        02-ALESERV\n 0000170A 51E0 5030               00000030   7305+         LAE   14,ASSBSTKN          .GET AR MODE S-TYPE STOKEN ADDRESS  02-ALESERV\n 0000170E D207 1008 E000 00000008 00000000   7306+         MVC   8(8,1),0(14)         .STORE STOKEN INTO THE PARM LIST    02-ALESERV\n 00001714 58E0 0010               00000010   7307+         L     14,16(0,0)           .GET ADDR OF CVT                    02-ALESERV\n 00001718 58EE 0304               00000304   7308+         L     14,772(14,0)         .GET ADDR OF SYSTEM FUNCTION TABLE  02-ALESERV\n 0000171C 58EE 00BC               000000BC   7309+         L     14,188(14,0)         .GET LX/EX FOR SERVICE ROUTINE      02-ALESERV\n 00001720 B218 E000      00000000            7310+         PC    0(14)                .PC TO ALESERV SERVICE              02-ALESERV\n 00001724 51E0 4018               00000018   7311+         LAE   14,VRLTSTKN+4        .GET AR MODE S-TYPE ALET ADDRESS    02-ALESERV\n 00001728 D203 E000 1004 00000000 00000004   7312+         MVC   0(4,14),4(1)         .STORE ALET FROM THE PARM LIST      02-ALESERV\n 0000172E 5030 4010               00000010   7313+         ST    R3,VRLTVSA        copy taget address                     01-$$ASMIF\n 00001732 5040 D24C               0000024C   7314+         ST    R4,ASM_IARVRLA    set addr                               01-$$ASMIF\n 00001736 4140 D24C               0000024C   7315+         LA    R4,ASM_IARVRLA    set pointer to it                      01-$$ASMIF\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   65\n   Active Usings: PSA,R0  SHMEM_TOKEN,R2  VRL,R4  ASSB,R5  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11\n   ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            7316+*        iarvserv share,ranglist=(r4),                                 X\n                                                 +               TARGET_VIEW=SHAREDWRITE,                                X\n                                                 +               MF=(E,ASM_IARVSERVL)\n                                             7318+*                  MACDATE -12/04/00-<0>\n 0000173A                                    7319+M00M0617 DS    0H                             IARVSERV-0                02-IARVSERV\n                                             7320+              PUSH  PRINT                                               02-IARVSERV\n                                             7321+                  PRINT ON                                              02-IARVSERV\n 0000173A 4110 D1F0               000001F0   7322+         LA    1,ASM_IARVSERVL    ++ LOCATE ARG PARMS                   02-IARVSERV\n 0000173E D70B 1000 1000 00000000 00000000   7323+         XC    0(12,1),0(1)       ++ INITIALIZE                         02-IARVSERV\n 00001744 9201 1001      00000001            7324+         MVI   1(1),1             ++ INPUT XSERVICE                     02-IARVSERV\n 00001748 9640 1002      00000002            7325+         OI    2(1),B'01000000'   ++ INPUT BL1                          02-IARVSERV\n 0000174C D203 1004 B0CC 00000004 00001CD4   7326+         MVC   4(4,1),=FL4'1'     ++ INPUT XNUMRANGE                    02-IARVSERV\n 00001752 D203 1008 4000 00000008 00000000   7327+         MVC   8(4,1),0(R4)       ++ INPUT XRANGLIST                    02-IARVSERV\n 00001758 58E0 0010               00000010   7328+         L     14,16(0,0)        GET CVT ADDRESS                        02-IARVSERV\n 0000175C 58EE 0304               00000304   7329+         L     14,772(14,0)      GET SYSTEM FUNCTION TABLE ADDRESS      02-IARVSERV\n 00001760 58EE 00D0               000000D0   7330+         L     14,208(14,0)      GET LX/EX FOR SERVICE ROUTINE          02-IARVSERV\n 00001764 41F0 000C               0000000C   7331+         LA    15,12             EX OFFSET FOR IARVSERV ASSIGN          02-IARVSERV\n 00001768 16EF                               7332+         OR    14,15             GENERATE LX/EX COMBINATION             02-IARVSERV\n 0000176A B218 E000      00000000            7333+         PC    0(14)             PC TO IARVSERV SERVICE                 02-IARVSERV\n                                             7334+         POP   PRINT                                                    02-IARVSERV\n                                             7335+*                                            IARVSERV-0\n00000176E 90F0 D060               00000060   7337+         STM   R15,R0,ASM_RC     save return/reason code                01-$$ASMIF\n                                             7338+*        $$setkey back,save=asm_key back to user\n                                             7340+* 29/11/07 struct asm include\n 00001772                                    7341+         DS     0H                                                      02-$$SETKEY\n 00001772 1B22                               7342+         SR      R2,R2             + clear reg                          02-$$SETKEY\n 00001774 4320 D0CD               000000CD   7343+         IC      R2,ASM_KEY        + back key                           02-$$SETKEY\n                                             7345+* MACDATE Y-3 81030                                                @D1A\n 00001778 B20A 2000      00000000            7347+         SPKA  0((R2))             SET PSW KEY                     @D1A 03-MODESET\n                                             7348+*        modeset mode=prob       supervisor state\n                                             7350+* MACDATE Y-3 81030                                                @D1A\n 0000177C                                    7352+         CNOP  0,4                                                      02-MODESET\n 0000177C A715 0004               00001784   7353+         BRAS  1,*+8                                                    02-MODESET\n 00001780 00000004                           7354+         DC    B'00000000000000000000000000000100'                      02-MODESET\n 00001784 5810 1000               00000000   7355+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00001788 0A6B                               7356+         SVC   107                                                      02-MODESET\n 0000178A 0101                               7357+         PR                                                             01-$$ASMIF\n                                             7358+         DROP  R4,R5             drop work regs                         01-$$ASMIF\n                                             7359+*---------------------------------------------------------------------*\n                                             7360+* disconnectshmem disconnect from a shared group                      *\n                                             7361+* +0     shmem token pointer                                          *\n                                             7362+* +4     area address                                                 *\n                                             7363+* back : r15 = ieantcr return code                                    *\n                                             7364+*---------------------------------------------------------------------*\n                     R:2 00000000            7365+         USING SHMEM_TOKEN,R2    base on shmem token                    01-$$ASMIF\n                     R:4 00000000            7366+         USING  VRL,R4           base on iarvrl                         01-$$ASMIF\n 0000178C 9823 D114               00000114   7367+DISCONNECTSHMEM LM R2,R3,ASM_PARMS get parms                            01-$$ASMIF\n 00001790 4140 D24C               0000024C   7368+         LA    R4,ASM_IARVRLA    set pointer to it                      01-$$ASMIF\n                                             7369+*        modeset mode=sup        supervisor state\n                                             7371+* MACDATE Y-3 81030                                                @D1A\n 00001794                                    7373+         CNOP  0,4                                                      02-MODESET\n 00001794 A715 0004               0000179C   7374+         BRAS  1,*+8                                                    02-MODESET\n 00001798 0000000C                           7375+         DC    B'00000000000000000000000000001100'                      02-MODESET\n 0000179C 5810 1000               00000000   7376+         L     1,0(0,1)                                          YM1995 02-MODESET\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   66\n   Active Usings: PSA,R0  SHMEM_TOKEN,R2  VRL,R4  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000017A0 0A6B                               7377+         SVC   107                                                      02-MODESET\n                                             7378+*        $$setkey key=zero,save=asm_key key key=zero\n                                             7380+* 29/11/07 struct asm include\n 000017A2                                    7381+         DS     0H                                                      02-$$SETKEY\n 000017A2 B20B 0000                          7382+         IPK    ,                  + get actual key in r2               02-$$SETKEY\n ** ASMA254I *** MNOTE ***                   7383+     0, KEY in R2                                                       02-$$SETKEY\n 000017A6 4220 D0CD               000000CD   7384+         STC    R2,ASM_KEY         + save key                           02-$$SETKEY\n 000017AA 4110 0000               00000000   7385+         LA     R1,X'00'(0,0)     + get value                           02-$$SETKEY\n                                             7387+* MACDATE Y-3 81030                                                @D1A\n 000017AE B20A 1000      00000000            7389+         SPKA  0(R1)               SET PSW KEY                     @D1A 03-MODESET\n                                             7390+*        aleserv delete,alet=vrlsstkn+4,                               X\n                                                 +               MF=(E,ASM_ALESERVL)\n                                             7392+*              MACDATE = 06/13/1996                                @D1A\n 000017B2                                    7393+         DS    0H                   .ALESERV SERVICE ROUTINE CALL       02-ALESERV\n 000017B2 5110 D1FC               000001FC   7394+         LAE   1,ASM_ALESERVL       .ALESERV PARAMETER LIST ADDRESS     02-ALESERV\n 000017B6 9203 1000      00000000            7395+         MVI   0(1),X'03'           .SET SERVICE TYPE CODE BYTE         02-ALESERV\n 000017BA 9200 1001      00000001            7396+         MVI   1(1),0               .SET OPTIONS IN OPTIONS BYTE        02-ALESERV\n 000017BE 51E0 4008               00000008   7397+         LAE   14,VRLSSTKN+4        .GET AR MODE S-TYPE ALET ADDRESS    02-ALESERV\n 000017C2 D203 1004 E000 00000004 00000000   7398+         MVC   4(4,1),0(14)         .STORE ALET INTO THE PARM LIST      02-ALESERV\n 000017C8 58E0 0010               00000010   7399+         L     14,16(0,0)           .GET ADDR OF CVT                    02-ALESERV\n 000017CC 58EE 0304               00000304   7400+         L     14,772(14,0)         .GET ADDR OF SYSTEM FUNCTION TABLE  02-ALESERV\n 000017D0 58EE 00C0               000000C0   7401+         L     14,192(14,0)         .GET LX/EX FOR SERVICE ROUTINE      02-ALESERV\n 000017D4 B218 E000      00000000            7402+         PC    0(14)                .PC TO ALESERV SERVICE              02-ALESERV\n                                             7403+*        aleserv delete,alet=vrltstkn+4,                               X\n                                                 +               MF=(E,ASM_ALESERVL)\n                                             7405+*              MACDATE = 06/13/1996                                @D1A\n 000017D8                                    7406+         DS    0H                   .ALESERV SERVICE ROUTINE CALL       02-ALESERV\n 000017D8 5110 D1FC               000001FC   7407+         LAE   1,ASM_ALESERVL       .ALESERV PARAMETER LIST ADDRESS     02-ALESERV\n 000017DC 9203 1000      00000000            7408+         MVI   0(1),X'03'           .SET SERVICE TYPE CODE BYTE         02-ALESERV\n 000017E0 9200 1001      00000001            7409+         MVI   1(1),0               .SET OPTIONS IN OPTIONS BYTE        02-ALESERV\n 000017E4 51E0 4018               00000018   7410+         LAE   14,VRLTSTKN+4        .GET AR MODE S-TYPE ALET ADDRESS    02-ALESERV\n 000017E8 D203 1004 E000 00000004 00000000   7411+         MVC   4(4,1),0(14)         .STORE ALET INTO THE PARM LIST      02-ALESERV\n 000017EE 58E0 0010               00000010   7412+         L     14,16(0,0)           .GET ADDR OF CVT                    02-ALESERV\n 000017F2 58EE 0304               00000304   7413+         L     14,772(14,0)         .GET ADDR OF SYSTEM FUNCTION TABLE  02-ALESERV\n 000017F6 58EE 00C0               000000C0   7414+         L     14,192(14,0)         .GET LX/EX FOR SERVICE ROUTINE      02-ALESERV\n 000017FA B218 E000      00000000            7415+         PC    0(14)                .PC TO ALESERV SERVICE              02-ALESERV\n                                             7416+*        iarvserv unshare,ranglist=(r4),                               X\n                                                 +               RETAIN=NO,                                              X\n                                                 +               MF=(E,ASM_IARVSERVL)\n                                             7418+*                  MACDATE -12/04/00-<0>\n 000017FE                                    7419+M00M0630 DS    0H                             IARVSERV-0                02-IARVSERV\n                                             7420+              PUSH  PRINT                                               02-IARVSERV\n                                             7421+                  PRINT ON                                              02-IARVSERV\n 000017FE 4110 D1F0               000001F0   7422+         LA    1,ASM_IARVSERVL    ++ LOCATE ARG PARMS                   02-IARVSERV\n 00001802 D70B 1000 1000 00000000 00000000   7423+         XC    0(12,1),0(1)       ++ INITIALIZE                         02-IARVSERV\n 00001808 9202 1001      00000001            7424+         MVI   1(1),2             ++ INPUT XSERVICE                     02-IARVSERV\n 0000180C D203 1004 B0CC 00000004 00001CD4   7425+         MVC   4(4,1),=FL4'1'     ++ INPUT XNUMRANGE                    02-IARVSERV\n 00001812 D203 1008 4000 00000008 00000000   7426+         MVC   8(4,1),0(R4)       ++ INPUT XRANGLIST                    02-IARVSERV\n 00001818 58E0 0010               00000010   7427+         L     14,16(0,0)        GET CVT ADDRESS                        02-IARVSERV\n 0000181C 58EE 0304               00000304   7428+         L     14,772(14,0)      GET SYSTEM FUNCTION TABLE ADDRESS      02-IARVSERV\n 00001820 58EE 00D0               000000D0   7429+         L     14,208(14,0)      GET LX/EX FOR SERVICE ROUTINE          02-IARVSERV\n 00001824 41F0 000C               0000000C   7430+         LA    15,12             EX OFFSET FOR IARVSERV ASSIGN          02-IARVSERV\n 00001828 16EF                               7431+         OR    14,15             GENERATE LX/EX COMBINATION             02-IARVSERV\n 0000182A B218 E000      00000000            7432+         PC    0(14)             PC TO IARVSERV SERVICE                 02-IARVSERV\n                                             7433+         POP   PRINT                                                    02-IARVSERV\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   67\n   Active Usings: PSA,R0  SHMEM_TOKEN,R2  VRL,R4  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            7434+*                                            IARVSERV-0\n00000182E 90F0 D060               00000060   7436+         STM   R15,R0,ASM_RC     save return/reason code                01-$$ASMIF\n                                             7437+*        $$setkey back,save=asm_key back to user\n                                             7439+* 29/11/07 struct asm include\n 00001832                                    7440+         DS     0H                                                      02-$$SETKEY\n 00001832 1B22                               7441+         SR      R2,R2             + clear reg                          02-$$SETKEY\n 00001834 4320 D0CD               000000CD   7442+         IC      R2,ASM_KEY        + back key                           02-$$SETKEY\n                                             7444+* MACDATE Y-3 81030                                                @D1A\n 00001838 B20A 2000      00000000            7446+         SPKA  0((R2))             SET PSW KEY                     @D1A 03-MODESET\n                                             7447+*        modeset mode=prob       supervisor state\n                                             7449+* MACDATE Y-3 81030                                                @D1A\n 0000183C                                    7451+         CNOP  0,4                                                      02-MODESET\n 0000183C A715 0004               00001844   7452+         BRAS  1,*+8                                                    02-MODESET\n 00001840 00000004                           7453+         DC    B'00000000000000000000000000000100'                      02-MODESET\n 00001844 5810 1000               00000000   7454+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00001848 0A6B                               7455+         SVC   107                                                      02-MODESET\n 0000184A 0101                               7456+         PR                                                             01-$$ASMIF\n                                             7457+         DROP R4                                                        01-$$ASMIF\n                                             7458+*---------------------------------------------------------------------*\n                                             7459+* cleanup free asm area , delete modules                              *\n                                             7460+* back : r15 = ieantcr return code                                    *\n                                             7461+*---------------------------------------------------------------------*\n 0000184C                                    7462+CLEANUP  DS    0H                                                       01-$$ASMIF\n 0000184C D503 D068 B194 00000068 00001D9C   7463+         CLC   ASM_IEANTCR,ZERO    is there ieantcr                     01-$$ASMIF\n 00001852 A784 0009               00001864   7466+         BRC   8,CLEANUP_NOCR  (BC)                                     03-\n 00001856 A705 0006               00001862   7469+         BRAS  0,*+12  (BAL)                                            03-\n 0000185A C9C5C1D5E3C3D940                   7470+         DC    CL8'IEANTCR'                      EP SYMBOL              02-DELETE\n 00001862 0A09                               7471+         SVC   9                                 ISSUE DELETE SVC       02-DELETE\n 00001864                                    7472+CLEANUP_NOCR DS 0H                                                      01-$$ASMIF\n 00001864 D503 D06C B194 0000006C 00001D9C   7473+         CLC   ASM_IEANTRT,ZERO    is there ieantcr                     01-$$ASMIF\n 0000186A A784 0009               0000187C   7476+         BRC   8,CLEANUP_NORT  (BC)                                     03-\n 0000186E A705 0006               0000187A   7479+         BRAS  0,*+12  (BAL)                                            03-\n 00001872 C9C5C1D5E3D9E340                   7480+         DC    CL8'IEANTRT'                      EP SYMBOL              02-DELETE\n 0000187A 0A09                               7481+         SVC   9                                 ISSUE DELETE SVC       02-DELETE\n 0000187C                                    7482+CLEANUP_NORT DS 0H                                                      01-$$ASMIF\n 0000187C D503 D070 B194 00000070 00001D9C   7483+         CLC   ASM_IEANTDL,ZERO    is there ieantcr                     01-$$ASMIF\n 00001882 A784 0009               00001894   7486+         BRC   8,CLEANUP_NODL  (BC)                                     03-\n 00001886 A705 0006               00001892   7489+         BRAS  0,*+12  (BAL)                                            03-\n 0000188A C9C5C1D5E3C4D340                   7490+         DC    CL8'IEANTDL'                      EP SYMBOL              02-DELETE\n 00001892 0A09                               7491+         SVC   9                                 ISSUE DELETE SVC       02-DELETE\n 00001894                                    7492+CLEANUP_NODL DS 0H                                                      01-$$ASMIF\n 00001894                                    7493+CLEANUP_NOTCPIP DS 0H                                                   01-$$ASMIF\n 00001894 1B33                               7494+         SR    R3,R3              clear reg                             01-$$ASMIF\n 00001896 BF3F D1E4               000001E4   7495+         ICM   R3,15,ASM_WORKECBS get start                             01-$$ASMIF\n 0000189A A784 002C               000018F2   7498+         BRC   8,CLEANUP_NOCSA  (BC)                                    03-\n                                             7499+*        modeset mode=sup        supervisor state\n                                             7501+* MACDATE Y-3 81030                                                @D1A\n 0000189E 0700                               7503+         CNOP  0,4                                                      02-MODESET\n 000018A0 A715 0004               000018A8   7504+         BRAS  1,*+8                                                    02-MODESET\n 000018A4 0000000C                           7505+         DC    B'00000000000000000000000000001100'                      02-MODESET\n 000018A8 5810 1000               00000000   7506+         L     1,0(0,1)                                          YM1995 02-MODESET\n 000018AC 0A6B                               7507+         SVC   107                                                      02-MODESET\n                                             7508+*        $$setkey key=zero,save=asm_key key key=zero and save it\n                                             7510+* 29/11/07 struct asm include\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   68\n   Active Usings: PSA,R0  SHMEM_TOKEN,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000018AE                                    7511+         DS     0H                                                      02-$$SETKEY\n 000018AE B20B 0000                          7512+         IPK    ,                  + get actual key in r2               02-$$SETKEY\n ** ASMA254I *** MNOTE ***                   7513+     0, KEY in R2                                                       02-$$SETKEY\n 000018B2 4220 D0CD               000000CD   7514+         STC    R2,ASM_KEY         + save key                           02-$$SETKEY\n 000018B6 4110 0000               00000000   7515+         LA     R1,X'00'(0,0)     + get value                           02-$$SETKEY\n                                             7517+* MACDATE Y-3 81030                                                @D1A\n 000018BA B20A 1000      00000000            7519+         SPKA  0(R1)               SET PSW KEY                     @D1A 03-MODESET\n                                             7520+*        storage release,length=max_ecbs,addr=(r3),key=8,sp=231\n 000018BE 5800 B0D0               00001CD8   7523+         L      0,=A(MAX_ECBS)               .STORAGE LENGTH       @P9C 02-STORAGE\n 000018C2 1813                               7524+         LR     1,R3                         .ADDRESS OF STORAGE        02-STORAGE\n 000018C4 58F0 B0D4               00001CDC   7525+         L      15,=AL1(B'00000000',(8*16),(231),B'00000011')          X02-STORAGE\n                                                 +                                             .CONTROL INFORMATION  @P9C\n 000018C8 58E0 0010               00000010   7526+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 000018CC 58EE 0304               00000304   7527+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 000018D0 58EE 00CC               000000CC   7528+         L      14,204(14,0)                 .OBTAIN LX/EX FOR RELEASE  02-STORAGE\n 000018D4 B218 E000      00000000            7529+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n                                             7530+*        $$setkey back,save=asm_key key key=zero and save it\n                                             7532+* 29/11/07 struct asm include\n 000018D8                                    7533+         DS     0H                                                      02-$$SETKEY\n 000018D8 1B22                               7534+         SR      R2,R2             + clear reg                          02-$$SETKEY\n 000018DA 4320 D0CD               000000CD   7535+         IC      R2,ASM_KEY        + back key                           02-$$SETKEY\n                                             7537+* MACDATE Y-3 81030                                                @D1A\n 000018DE B20A 2000      00000000            7539+         SPKA  0((R2))             SET PSW KEY                     @D1A 03-MODESET\n                                             7540+*        modeset mode=prob       supervisor state\n                                             7542+* MACDATE Y-3 81030                                                @D1A\n 000018E2 0700                               7544+         CNOP  0,4                                                      02-MODESET\n 000018E4 A715 0004               000018EC   7545+         BRAS  1,*+8                                                    02-MODESET\n 000018E8 00000004                           7546+         DC    B'00000000000000000000000000000100'                      02-MODESET\n 000018EC 5810 1000               00000000   7547+         L     1,0(0,1)                                          YM1995 02-MODESET\n 000018F0 0A6B                               7548+         SVC   107                                                      02-MODESET\n 000018F2                                    7549+CLEANUP_NOCSA DS 0H                                                     01-$$ASMIF\n 000018F2 D403 D8DC B0A0 000008DC 00001CA8   7565+                NC              ASM_DIAGNOSE_FLAG,=A(ASM_DIAGNOSE_KEEP) 04-ASMMPOPI\n 000018F8 A7E4 003D               00001972   7566+                BRC             14,#@LB56                               04-ASMMPOPI\n 000018FC D503 D8D8 B194 000008D8 00001D9C   7567+                CLC             ASM_TESTAUTH,ZERO                       04-ASMMPOPI\n 00001902 A774 0038               00001972   7568+           BRC          7,#@LB56                                        03-ASMMIFPR\n                                             7570+* modeset mode=sup,key=zero\n                                             7572+* MACDATE Y-3 81030                                                @D1A\n 00001906 0700                               7574+         CNOP  0,4                                                      02-MODESET\n 00001908 A715 0004               00001910   7575+         BRAS  1,*+8                                                    02-MODESET\n 0000190C 0000003C                           7576+         DC    B'00000000000000000000000000111100'                      02-MODESET\n 00001910 5810 1000               00000000   7577+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00001914 0A6B                               7578+         SVC   107                                                      02-MODESET\n                                             7579+* SYSEVENT OKSWAP\n 00001916 4100 002A               0000002A   7581+         LA    0,42(0,0)               SYSEVENT CODE                    02-SYSEVENT\n 0000191A 0A5F                               7582+         SVC   95                      SYSTEM RESOURCES MANAGER SVC     02-SYSEVENT\n 0000191C D403 D8DC B0A4 000008DC 00001CAC   7583+  NC   ASM_DIAGNOSE_FLAG,=A(ASM_DIAGNOSE_ALL-ASM_DIAGNOSE_DONTSWAP)     01-$$ASMIF\n 00001922 BF4F D8E0               000008E0   7595+                ICM R4,15,ASM_DIAGNOSE_ADDR                             04-ASMMPOPI\n 00001926 A784 001E               00001962   7596+           BRC          8,#@LB58                                        03-ASMMIFPR\n                                             7598+* PGSER R,FREE,A=(R4),EA=4095(,R4),ECB=0\n 0000192A 1F00                               7601+         SLR   0,0              NO ECB --- FORCE REG 0 TO EQUAL ZERO    02-PGSER\n 0000192C 1814                               7602+         LR    1,(R4)           LOAD POINTER TO START OF VIRTUAL       X02-PGSER\n                                                 +                                  ADDRESS RANGE INTO PARAMETER REG\n 0000192E A516 7FFF               00007FFF   7603+         NILH  1,X'7FFF'        FORCE BIT0 TO ZERO                 @L5A 02-PGSER\n 00001932 41F0 4FFF               00000FFF   7604+         LA    15,4095(,R4)     LOAD END ADDRESS                        02-PGSER\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   69\n   Active Usings: PSA,R0  SHMEM_TOKEN,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000001936 41E0 0200               00000200   7605+         LA    14,X'0200'+B'00000000'(0,0)                             X02-PGSER\n                                                 +                                   SET FUNCTION CODE AND OPTION FLAGS\n 0000193A 0A8A                               7606+         SVC   138              INVOKE PAGE SERVICE PROCESSOR SVC       02-PGSER\n 0000193C D403 D8DC B0A8 000008DC 00001CB0   7607+  NC   ASM_DIAGNOSE_FLAG,=A(ASM_DIAGNOSE_ALL-ASM_DIAGNOSE_FIX)          01-$$ASMIF\n                                             7608+*        storage release,length=asm_diagnose_length,addr=(r2)\n 00001942 5800 B094               00001C9C   7611+         L      0,=A(ASM_DIAGNOSE_LENGTH)    .STORAGE LENGTH       @P9C 02-STORAGE\n 00001946 1812                               7612+         LR     1,R2                         .ADDRESS OF STORAGE        02-STORAGE\n 00001948 A7F8 0003               00000003   7613+         LHI    15,X'0003'                   .Add in parameters    @PCA 02-STORAGE\n 0000194C 58E0 0010               00000010   7614+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 00001950 58EE 0304               00000304   7615+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 00001954 58EE 00CC               000000CC   7616+         L      14,204(14,0)                 .OBTAIN LX/EX FOR RELEASE  02-STORAGE\n 00001958 B218 E000      00000000            7617+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 0000195C D703 D8E0 D8E0 000008E0 000008E0   7618+  XC    ASM_DIAGNOSE_ADDR,ASM_DIAGNOSE_ADDR                             01-$$ASMIF\n 00001962                                    7624+#@LB58   DC    0H                                                       02-\n                                             7626+* modeset mode=prob,key=nzero\n                                             7628+* MACDATE Y-3 81030                                                @D1A\n 00001962 0700                               7630+         CNOP  0,4                                                      02-MODESET\n 00001964 A715 0004               0000196C   7631+         BRAS  1,*+8                                                    02-MODESET\n 00001968 00000024                           7632+         DC    B'00000000000000000000000000100100'                      02-MODESET\n 0000196C 5810 1000               00000000   7633+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00001970 0A6B                               7634+         SVC   107                                                      02-MODESET\n 00001972                                    7640+#@LB56   DC    0H                                                       02-\n                                             7642+*        storage release,length=asm_length,addr=(r7) release\n 00001972 5800 B030               00001C38   7645+         L      0,=A(ASM_LENGTH)             .STORAGE LENGTH       @P9C 02-STORAGE\n 00001976 1817                               7646+         LR     1,R7                         .ADDRESS OF STORAGE        02-STORAGE\n 00001978 A7F8 0003               00000003   7647+         LHI    15,X'0003'                   .Add in parameters    @PCA 02-STORAGE\n 0000197C 58E0 0010               00000010   7648+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 00001980 58EE 0304               00000304   7649+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 00001984 58EE 00CC               000000CC   7650+         L      14,204(14,0)                 .OBTAIN LX/EX FOR RELEASE  02-STORAGE\n 00001988 B218 E000      00000000            7651+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 0000198C 1BFF                               7652+         SR     R15,R15           clear all                             01-$$ASMIF\n 0000198E 0101                               7653+         PR                                                             01-$$ASMIF\n                                             7654+*---------------------------------------------------------------------*\n                                             7655+* oper operator communication                                         *\n                                             7656+* +0     area pointer                                                 *\n                                             7657+* +4     area length                                                  *\n                                             7658+* back : r15 = return code        0 start/modify command              *\n                                             7659+*                                 4 stop command                      *\n                                             7660+*---------------------------------------------------------------------*\n                     R:4 00000000            7661+         USING COMLIST,R4        base on comlist                        01-$$ASMIF\n                     R:5 00000000            7662+         USING CIBNEXT,R5        base on cib                            01-$$ASMIF\n 00001990                                    7663+OPER     DS    0H                                                       01-$$ASMIF\n 00001990 D503 D26C B194 0000026C 00001D9C   7664+         CLC   ASM_COMPTR,ZERO   already init                           01-$$ASMIF\n 00001996 A774 0024               000019DE   7667+         BRC   7,OPER_COMMAND  (BC)                                     03-\n 0000199A 4120 D250               00000250   7668+         LA    R2,ASM_EXTRACT_L  get list form address                  01-$$ASMIF\n 0000199E 4130 D26C               0000026C   7669+         LA    R3,ASM_COMPTR     comand pointer                         01-$$ASMIF\n                                             7670+*        extract (r3),'S',mf=(e,(r2)),fields=comm extract comm\n                                             7673+*                                                                 1@L1D\n                                             7674+*                                                                 1@L1D\n 000019A2 1812                               7676+         LR    1,R2                              LOAD PARAMETER REG 1   03-IHBINNRA\n 000019A4 5031 0000               00000000   7677+         ST    R3,0(1,0)                         STORE LIST ADDRESS     02-EXTRACT\n 000019A8 1BEE                               7678+         SR    14,14                             INDICATE ISSUING TASK  02-EXTRACT\n 000019AA 50E1 0004               00000004   7679+         ST    14,4(1,0)                         TCB TO BE USED         02-EXTRACT\n 000019AE 9201 1008      00000008            7680+         MVI   8(1),1                            MOVE IN FIELDS BYTE    02-EXTRACT\n 000019B2 9200 1009      00000009            7681+         MVI   9(1),0        .         MOVE IN FIELD BYTE 2       20021 02-EXTRACT\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   70\n   Active Usings: PSA,R0  SHMEM_TOKEN,R2  COMLIST,R4  CIBNEXT,R5  IHADCB,R6  SRBWORK,R8  SRBSECT,R9\n   DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'\n   CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000019B6 0A28                               7682+         SVC   40                                ISSUE EXTRACT SVC      02-EXTRACT\n 000019B8 1B44                               7683+         SR    R4,R4             clear r4                               01-$$ASMIF\n 000019BA BF4F D26C               0000026C   7684+         ICM   R4,15,ASM_COMPTR get com ptr                             01-$$ASMIF\n 000019BE A784 0039               00001A30   7687+         BRC   8,OPER_RET_08  (BC)                                      03-\n 000019C2 5850 4004               00000004   7688+         L     R5,COMCIBPT       get cib pointer                        01-$$ASMIF\n 000019C6 C0E5 0000 003A          00001A3A   7689+         BRASL R14,OPER_CIB      process data                           01-$$ASMIF\n                                             7690+*        qedit origin=comcibpt,cibctr=9  prepare for comand\n 000019CC 4110 0009               00000009   7692+         LA    1,9                   OBTAIN POSITIVE PARAMETER @YA00842 02-QEDIT\n 000019D0 1111                               7693+         LNR   1,1       -          NEGATE OBTAINED PARAMETER           02-QEDIT\n 000019D2 4100 4004               00000004   7694+         LA    0,COMCIBPT            OBTAIN POSITIVE PARAMETER @YA00842 02-QEDIT\n 000019D6 1100                               7695+         LNR   0,0       -          NEGATE OBTAINED PARAMETER           02-QEDIT\n 000019D8 0A22                               7696+         SVC   34 -                 INVOKE COMMAND SCHEDULER            02-QEDIT\n 000019DA A7F4 0024               00001A22   7699+         BRC   15,OPER_RET_00  (BC)                                     03-\n 000019DE                                    7700+OPER_COMMAND DS 0H                                                      01-$$ASMIF\n 000019DE 1B44                               7701+         SR    R4,R4             clear r4                               01-$$ASMIF\n 000019E0 BF4F D26C               0000026C   7702+         ICM   R4,15,ASM_COMPTR get com ptr                             01-$$ASMIF\n 000019E4 1B55                               7703+         SR    R5,R5             clear it                               01-$$ASMIF\n 000019E6 BF5F 4004               00000004   7704+         ICM   R5,15,COMCIBPT       get cib pointer                     01-$$ASMIF\n 000019EA A784 0006               000019F6   7707+         BRC   8,OPER_COMMAND_WAIT  (BC)                                03-\n 000019EE 9540 5004      00000004            7708+         CLI   CIBVERB,CIBSTOP   stop commad                            01-$$ASMIF\n 000019F2 A784 001B               00001A28   7711+         BRC   8,OPER_RET_04  (BC)                                      03-\n 000019F6                                    7712+OPER_COMMAND_WAIT DS 0H                                                 01-$$ASMIF\n 000019F6 5820 4000               00000000   7713+         L     R2,COMECBPT       get ecb pointer                        01-$$ASMIF\n 000019FA 9140 2000      00000000            7714+         TM    0(R2),X'40'       if posted                              01-$$ASMIF\n 000019FE A714 0007               00001A0C   7717+         BRC   1,OPER_COMMAND_PROCESS  (BC)                             03-\n                                             7718+*        wait ecb=(r2)           issue wait\n                                             7720+*        MACDATE  10/20/88                                         @01C\n 00001A02 4100 0001               00000001   7722+         LA    0,1(0,0)                    COUNT OMITTED,1 USED    @L1C 02-WAIT\n 00001A06 4110 2000               00000000   7723+         LA    1,0(0,R2)                   CLEAR HIGH BIT/BYTE     @L1C 02-WAIT\n 00001A0A 0A01                               7724+         SVC   1                           LINK TO WAIT ROUTINE    @L1C 02-WAIT\n 00001A0C                                    7725+OPER_COMMAND_PROCESS DS  0H                                             01-$$ASMIF\n 00001A0C 5850 4004               00000004   7726+         L     R5,COMCIBPT       get cib pointer                        01-$$ASMIF\n 00001A10 9540 5004      00000004            7727+         CLI   CIBVERB,CIBSTOP   stop commad                            01-$$ASMIF\n 00001A14 A784 000A               00001A28   7730+         BRC   8,OPER_RET_04  (BC)                                      03-\n 00001A18 C0E5 0000 0011          00001A3A   7731+         BRASL R14,OPER_CIB      process it                             01-$$ASMIF\n 00001A1E A7F4 000B               00001A34   7734+         BRC   15,OPER_RET_XX  (BC)                                     03-\n 00001A22 1BFF                               7735+OPER_RET_00 SR R15,R15           clear reg                              01-$$ASMIF\n 00001A24 A7F4 0008               00001A34   7738+         BRC   15,OPER_RET_XX  (BC)                                     03-\n 00001A28 41F0 0004               00000004   7739+OPER_RET_04 LA R15,4             get code                               01-$$ASMIF\n 00001A2C A7F4 0004               00001A34   7742+         BRC   15,OPER_RET_XX  (BC)                                     03-\n 00001A30 41F0 0008               00000008   7743+OPER_RET_08 LA R15,8             get code                               01-$$ASMIF\n 00001A34                                    7744+OPER_RET_XX DS 0H                branch back                            01-$$ASMIF\n 00001A34 90F0 D060               00000060   7745+         STM   R15,R0,ASM_RC       save return/reason                   01-$$ASMIF\n 00001A38 0101                               7746+         PR    ,                 back                                   01-$$ASMIF\n 00001A3A B240 00E0                          7747+OPER_CIB BAKR  R14,0             all in stack                           01-$$ASMIF\n 00001A3E 1BFF                               7748+         SR    R15,R15           clear ret                              01-$$ASMIF\n 00001A40 1255                               7749+OPER_CIB_DO LTR   R5,R5             test cib                            01-$$ASMIF\n 00001A42 A784 0025               00001A8C   7752+         BRC   8,OPER_CIB_RET  (BC)                                     03-\n 00001A46 41F0 0004               00000004   7753+         LA    R15,4             get code                               01-$$ASMIF\n 00001A4A 9540 5004      00000004            7754+         CLI   CIBVERB,CIBSTOP   modify commad                          01-$$ASMIF\n 00001A4E A784 001F               00001A8C   7757+         BRC   8,OPER_CIB_RET  (BC)                                     03-\n 00001A52 9544 5004      00000004            7758+         CLI   CIBVERB,CIBMODFY  modify commad                          01-$$ASMIF\n 00001A56 A774 0012               00001A7A   7761+         BRC   7,OPER_CIB_FREE  (BC)                                    03-\n 00001A5A 9823 D114               00000114   7762+         LM    R2,R3,ASM_PARMS   get data length                        01-$$ASMIF\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   71\n   Active Usings: PSA,R0  SHMEM_TOKEN,R2  COMLIST,R4  CIBNEXT,R5  IHADCB,R6  SRBWORK,R8  SRBSECT,R9\n   DATAASMIF(X'FFF'),R11  ASM_SAVE,R13  FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'\n   CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000001A5E 1222                               7763+         LTR   R2,R2             test addr                              01-$$ASMIF\n 00001A60 A784 000D               00001A7A   7766+         BRC   8,OPER_CIB_FREE  (BC)                                    03-\n 00001A64 41E0 5010               00000010   7767+         LA    R14,CIBDATA       get data                               01-$$ASMIF\n 00001A68 48F0 500E               0000000E   7768+         LH    R15,CIBDATLN      get length                             01-$$ASMIF\n 00001A6C 193F                               7769+         CR    R3,R15            check length                           01-$$ASMIF\n 00001A6E A744 0003               00001A74   7772+         BRC   4,*+6  (BC)                                              03-\n 00001A72 183F                               7773+         LR    R3,R15            set data length                        01-$$ASMIF\n 00001A74 0E2E                               7774+         MVCL  R2,R14            copy text                              01-$$ASMIF\n 00001A76 9200 2000      00000000            7775+         MVI   0(R2),X'00'       keep hapy c++                          01-$$ASMIF\n 00001A7A                                    7776+OPER_CIB_FREE DS 0H                                                     01-$$ASMIF\n                                             7777+*        qedit origin=comcibpt,block=(r5) prepare for comand\n 00001A7A 1115                               7779+         LNR   1,R5        -         OBTAIN NEGATIVE PARAMETER          02-QEDIT\n 00001A7C 4100 4004               00000004   7780+         LA    0,COMCIBPT            OBTAIN POSITIVE PARAMETER @YA00842 02-QEDIT\n 00001A80 0A22                               7781+         SVC   34 -                 INVOKE COMMAND SCHEDULER            02-QEDIT\n 00001A82 BF5F 5000               00000000   7782+         ICM   R5,15,0(R5)     next                                     01-$$ASMIF\n 00001A86 A774 FFDD               00001A40   7785+         BRC   7,OPER_CIB_DO  (BC)                                      03-\n 00001A8A 1BFF                               7786+         SR    R15,R15           now ok                                 01-$$ASMIF\n 00001A8C 0101                               7787+OPER_CIB_RET PR ,                back                                   01-$$ASMIF\n                                             7788+         DROP  R4                drop it                                01-$$ASMIF\n                                             7789+         DROP  R5                drop cib                               01-$$ASMIF\n                                             7790+*---------------------------------------------------------------------*\n                                             7791+* wto  operator communication                                         *\n                                             7792+* +0     area pointer                                                 *\n                                             7793+* +4     area length                                                  *\n                                             7794+* +8     descriptor code                                              *\n                                             7795+* back : r15 = return code        0                                   *\n                                             7796+*---------------------------------------------------------------------*\n 00001A8E                                    7797+WTO      DS    0H                                                       01-$$ASMIF\n 00001A8E D2CD D278 B1A0 00000278 00001DA8   7798+         MVC   ASM_WTOL(MDL_WTOL_L),MDL_WTOL copy wtol                  01-$$ASMIF\n 00001A94 9824 D114               00000114   7799+         LM    R2,R4,ASM_PARMS     get parms                            01-$$ASMIF\n 00001A98 1BFF                               7800+         SR    R15,R15             get code                             01-$$ASMIF\n 00001A9A 58E0 B0D8               00001CE0   7801+         L     R14,=X'00010000'    code                                 01-$$ASMIF\n 00001A9E 8CE0 4000               00000000   7802+         SRDL  R14,0(R4)           shit it                              01-$$ASMIF\n 00001AA2 40E0 D302               00000302   7803+         STH   R14,ASM_WTOL+138  higher part                            01-$$ASMIF\n 00001AA6 50F0 D304               00000304   7804+         ST    R15,ASM_WTOL+140  lower part                             01-$$ASMIF\n 00001AAA 4140 D27C               0000027C   7805+         LA    R4,ASM_WTOL+4       to addr                              01-$$ASMIF\n 00001AAE 4150 006E               0000006E   7806+         LA    R5,ASM_WTOL_TEXT_LENGTH max text length                  01-$$ASMIF\n 00001AB2 BF38 B114               00001D1C   7807+         ICM   R3,8,BLANKS         get pad                              01-$$ASMIF\n 00001AB6 0E42                               7808+         MVCL  R4,R2               copy text                            01-$$ASMIF\n                                             7809+*        wto   mf=(e,asm_wtol)     issue wto\n 00001AB8 4110 D278               00000278   7814+         LA    1,ASM_WTOL                        LOAD PARAMETER REG 1   03-IHBINNRR\n 00001ABC 0A23                               7815+         SVC   35                       ISSUE SVC 35               @L6A 02-WTO\n 00001ABE 1BFF                               7816+         SR    R15,R15             test return                          01-$$ASMIF\n 00001AC0 0101                               7817+         PR    ,                   branch back                          01-$$ASMIF\n                                             7818+*---------------------------------------------------------------------*\n                                             7819+* malloc allocate the storage under the jstcb                         *\n                                             7820+* +0     area length                                                  *\n                                             7821+* +4     rely addr                                                    *\n                                             7822+* back : r15 = return code        0                                   *\n                                             7823+*---------------------------------------------------------------------*\n 00001AC2                                    7824+MALLOC   DS    0H                                                       01-$$ASMIF\n                                             7825+*        modeset mode=sup        supervisor state\n                                             7827+* MACDATE Y-3 81030                                                @D1A\n 00001AC2 0700                               7829+         CNOP  0,4                                                      02-MODESET\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   72\n   Active Usings: PSA,R0  SHMEM_TOKEN,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000001AC4 A715 0004               00001ACC   7830+         BRAS  1,*+8                                                    02-MODESET\n 00001AC8 0000000C                           7831+         DC    B'00000000000000000000000000001100'                      02-MODESET\n 00001ACC 5810 1000               00000000   7832+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00001AD0 0A6B                               7833+         SVC   107                                                      02-MODESET\n                     R:2 00000020            7834+         USING   TCB,R2          base on tcb                            01-$$ASMIF\n 00001AD2 5820 021C               0000021C   7835+         L     R2,PSATOLD        get tcb                                01-$$ASMIF\n 00001AD6 5820 207C               0000009C   7836+         L     R2,TCBJSTCB       get jstcb addr                         01-$$ASMIF\n 00001ADA 9834 D114               00000114   7837+         LM    R3,R4,ASM_PARMS   get size reply                         01-$$ASMIF\n 00001ADE 4130 3008               00000008   7838+         LA    R3,8(,R3)         add head                               01-$$ASMIF\n                                             7839+*        storage obtain,tcbaddr=(r2),length=(r3)\n 00001AE2 1803                               7842+         LR     0,R3                         .STORAGE LENGTH            02-STORAGE\n 00001AE4 B24E 0002                          7843+         SAR    0,R2                         .TCB ADDRESS         @D4A  02-STORAGE\n 00001AE8 58F0 B0DC               00001CE4   7844+         L      15,=AL1(B'00000100',(0*16),(0),B'00000010')            X02-STORAGE\n                                                 +                                             .CONTROL INFORMATION  @P9C\n 00001AEC 58E0 0010               00000010   7845+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 00001AF0 58EE 0304               00000304   7846+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 00001AF4 58EE 00A0               000000A0   7847+         L      14,160(14,0)                 .OBTAIN LX/EX FOR OBTAIN   02-STORAGE\n 00001AF8 B218 E000      00000000            7848+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 00001AFC 5031 0000               00000000   7849+         ST    R3,0(R1)          save length                            01-$$ASMIF\n 00001B00 D203 1004 B0E0 00000004 00001CE8   7850+         MVC   4(4,R1),=C'stor'  add id                                 01-$$ASMIF\n 00001B06 4110 1008               00000008   7851+         LA    R1,8(,R1)         proper addr                            01-$$ASMIF\n 00001B0A 5010 4000               00000000   7852+         ST    R1,0(,R4)         set back                               01-$$ASMIF\n 00001B0E 185F                               7853+         LR    R5,R15            save rc                                01-$$ASMIF\n                                             7854+*        modeset mode=prob       supervisor state\n                                             7856+* MACDATE Y-3 81030                                                @D1A\n 00001B10                                    7858+         CNOP  0,4                                                      02-MODESET\n 00001B10 A715 0004               00001B18   7859+         BRAS  1,*+8                                                    02-MODESET\n 00001B14 00000004                           7860+         DC    B'00000000000000000000000000000100'                      02-MODESET\n 00001B18 5810 1000               00000000   7861+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00001B1C 0A6B                               7862+         SVC   107                                                      02-MODESET\n 00001B1E 18F5                               7863+         LR    R15,R5            save rc                                01-$$ASMIF\n 00001B20 50F0 D060               00000060   7864+         ST    R15,ASM_RC        set result                             01-$$ASMIF\n 00001B24 0101                               7865+         PR    ,                 return back                            01-$$ASMIF\n                                             7866+*---------------------------------------------------------------------*\n                                             7867+* free   free allocated storage under the jstcb                       *\n                                             7868+* +0     area address                                                 *\n                                             7869+* back : r15 = return code        0                                   *\n                                             7870+*---------------------------------------------------------------------*\n 00001B26                                    7871+FREESTOR DS    0H                                                       01-$$ASMIF\n                                             7872+*        modeset mode=sup        supervisor state\n                                             7874+* MACDATE Y-3 81030                                                @D1A\n 00001B26 0700                               7876+         CNOP  0,4                                                      02-MODESET\n 00001B28 A715 0004               00001B30   7877+         BRAS  1,*+8                                                    02-MODESET\n 00001B2C 0000000C                           7878+         DC    B'00000000000000000000000000001100'                      02-MODESET\n 00001B30 5810 1000               00000000   7879+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00001B34 0A6B                               7880+         SVC   107                                                      02-MODESET\n                     R:2 00000020            7881+         USING   TCB,R2          base on tcb                            01-$$ASMIF\n 00001B36 5820 021C               0000021C   7882+         L     R2,PSATOLD        get tcb                                01-$$ASMIF\n 00001B3A 5820 207C               0000009C   7883+         L     R2,TCBJSTCB       get jstcb addr                         01-$$ASMIF\n 00001B3E 5830 D114               00000114   7884+         L     R3,ASM_PARMS      get addr                               01-$$ASMIF\n 00001B42 1BFF                               7885+         SR    R15,R15           clear ret                              01-$$ASMIF\n 00001B44 1233                               7886+         LTR   R3,R3             test it                                01-$$ASMIF\n 00001B46 A7D4 0019               00001B78   7889+         BRC   13,FREESTOR_OUT  (BC)                                    03-\n 00001B4A 4B30 B104               00001D0C   7890+         SH    R3,=Y(8)          proper addr                            01-$$ASMIF\n 00001B4E 5840 3000               00000000   7891+         L     R4,0(,R3)         get length                             01-$$ASMIF\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   73\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000001B52 D503 3004 B0E0 00000004 00001CE8   7892+         CLC   4(4,R3),=C'stor'  check it                               01-$$ASMIF\n 00001B58 A774 0010               00001B78   7895+         BRC   7,FREESTOR_OUT  (BC)                                     03-\n                                             7896+*        storage release,tcbaddr=(r2),addr=(r3),length=(r4)\n 00001B5C 1804                               7899+         LR     0,R4                         .STORAGE LENGTH            02-STORAGE\n 00001B5E B24E 0002                          7900+         SAR    0,R2                         .TCB ADDRESS         @D4A  02-STORAGE\n 00001B62 1813                               7901+         LR     1,R3                         .ADDRESS OF STORAGE        02-STORAGE\n 00001B64 58F0 B0E4               00001CEC   7902+         L      15,=AL1(B'00000100',(0*16),(0),B'00000011')            X02-STORAGE\n                                                 +                                             .CONTROL INFORMATION  @P9C\n 00001B68 58E0 0010               00000010   7903+         L      14,16(0,0)                   .CVT ADDRESS               02-STORAGE\n 00001B6C 58EE 0304               00000304   7904+         L      14,772(14,0)                 .ADDR SYST LINKAGE TABLE   02-STORAGE\n 00001B70 58EE 00CC               000000CC   7905+         L      14,204(14,0)                 .OBTAIN LX/EX FOR RELEASE  02-STORAGE\n 00001B74 B218 E000      00000000            7906+         PC     0(14)                        .PC TO STORAGE RTN         02-STORAGE\n 00001B78 185F                               7907+FREESTOR_OUT LR R5,R15           save rc                                01-$$ASMIF\n                                             7908+*        modeset mode=prob       supervisor state\n                                             7910+* MACDATE Y-3 81030                                                @D1A\n 00001B7A 0700                               7912+         CNOP  0,4                                                      02-MODESET\n 00001B7C A715 0004               00001B84   7913+         BRAS  1,*+8                                                    02-MODESET\n 00001B80 00000004                           7914+         DC    B'00000000000000000000000000000100'                      02-MODESET\n 00001B84 5810 1000               00000000   7915+         L     1,0(0,1)                                          YM1995 02-MODESET\n 00001B88 0A6B                               7916+         SVC   107                                                      02-MODESET\n 00001B8A 18F5                               7917+         LR    R15,R5            save rc                                01-$$ASMIF\n 00001B8C 50F0 D060               00000060   7918+         ST    R15,ASM_RC        set result                             01-$$ASMIF\n 00001B90 0101                               7919+FREESTOR_RET PR ,                return back                            01-$$ASMIF\n 00001B92 0000                                   +\n 00001B94 00000000                           7920+FREESTOR_ABEND DC A(0)           abend here                             01-$$ASMIF\n                                             7921+*---------------------------------------------------------------------*\n                                             7922+* millsec  convert microsec to millsec and store                      *\n                                             7923+*---------------------------------------------------------------------*\n 00001B98 B240 00E0                          7924+MILLSEC  BAKR   R14,0            save in stack                          01-$$ASMIF\n 00001B9C 1B22                               7925+         SR    R2,R2             clear r0                               01-$$ASMIF\n 00001B9E 1831                               7926+         LR    R3,R1             get it                                 01-$$ASMIF\n 00001BA0 5C20 B0E8               00001CF0   7927+         M     R2,=A(1000)       in micro sec                           01-$$ASMIF\n 00001BA4 4130 3001               00000001   7928+         LA    R3,1(,R3)         add one ( no zero time )               01-$$ASMIF\n 00001BA8 8D20 000C               0000000C   7929+         SLDL  R2,12             into mic form                          01-$$ASMIF\n 00001BAC 9023 D228               00000228   7930+         STM   R2,R3,ASM_SLEEP   save it                                01-$$ASMIF\n 00001BB0 0101                               7931+         PR    ,                 return back                            01-$$ASMIF\n                                             7932+*---------------------------------------------------------------------*\n                                             7933+* copystr  - copy string routine                                      *\n                                             7934+*---------------------------------------------------------------------*\n 00001BB2 B240 00E0                          7935+COPYSTR  BAKR  R14,0               all in satck                         01-$$ASMIF\n 00001BB6 D27F D154 B114 00000154 00001D1C   7936+         MVC   ASM_WORK,BLANKS     blank out                            01-$$ASMIF\n 00001BBC 4120 D154               00000154   7937+         LA    R2,ASM_WORK         output addr                          01-$$ASMIF\n 00001BC0 4130 0040               00000040   7938+         LA    R3,64               max length                           01-$$ASMIF\n 00001BC4 9500 1000      00000000            7939+COPYSTR_LOOP CLI 0(R1),0           end of string                        01-$$ASMIF\n 00001BC8 A784 000B               00001BDE   7942+         BRC   8,COPYSTR_00  (BC)                                       03-\n 00001BCC D200 2000 1000 00000000 00000000   7943+         MVC   0(1,R2),0(R1)       copy a byte                          01-$$ASMIF\n 00001BD2 4110 1001               00000001   7944+         LA    R1,1(,R1)           incr from                            01-$$ASMIF\n 00001BD6 4120 2001               00000001   7945+         LA    R2,1(,R2)           incr to                              01-$$ASMIF\n 00001BDA A736 FFF5               00001BC4   7947+         BRCT  R3,COPYSTR_LOOP  (BCT)                                   02-\n 00001BDE 0101                               7948+COPYSTR_00 PR ,                    back                                 01-$$ASMIF\n                                             7949+*---------------------------------------------------------------------*\n                                             7950+* strlen  - he length of the null term string                         *\n                                             7951+*---------------------------------------------------------------------*\n 00001BE0 B240 00E0                          7952+STRLEN   BAKR  R14,0              all in satck                          01-$$ASMIF\n 00001BE4 4120 0100               00000100   7953+         LA    R2,256             max length                            01-$$ASMIF\n1         XMSRB SRB routine to get back the primary STOKEN                                                      Page   74\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000001BE8 9500 1000      00000000            7954+STRLEN_LOOP CLI 0(R1),0           string term                           01-$$ASMIF\n 00001BEC A784 0006               00001BF8   7957+         BRC   8,STRLEN_BREAK  (BC)                                     03-\n 00001BF0 4110 1001               00000001   7958+         LA    R1,1(,R1)          next char                             01-$$ASMIF\n 00001BF4 A726 FFFA               00001BE8   7960+         BRCT  R2,STRLEN_LOOP  (BCT)                                    02-\n 00001BF8 41F0 0100               00000100   7961+STRLEN_BREAK LA R15,256           here also                             01-$$ASMIF\n 00001BFC B249 0011                          7962+         EREG  R1,R1             back from stack                        01-$$ASMIF\n 00001C00 1BF2                               7963+         SR    R15,R2            get length                             01-$$ASMIF\n 00001C02 0101                               7964+         PR    .                 back to caller                         01-$$ASMIF\n1         data areas                                                                                            Page   75\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            7966+*---------------------------------------------------------------------*\n                                             7967+* DATA area                                                           *\n                                             7968+*---------------------------------------------------------------------*\n                                             7969+*        $$DBASE\n 00001C04 00000000                               +\n 00001C08                                    7971+DATAASMIF      DC  0D'0'                                                02-$$DBASE\n 00001C08 001DE2D9C37AC1E2                   7972+         DC    AL2(START0766-*),C'SRC:ASMIF '                           02-$$DBASE\n 00001C14 40F1F161F3F061F1                   7973+         DC    C' 11/30/12 '                                            02-$$DBASE\n 00001C1E E5F7D9F0D4F0                       7974+         DC    C'V7R0M0'                                                02-$$DBASE\n 00001C24 00                                 7975+         DC    X'00'                                                    02-$$DBASE\n                         00001C25            7976+START0766    EQU *                                                      02-$$DBASE\n 00001C25 000000                                 +\n 00001C28                                    7977+         DC    0D'0'                                                    02-$$DBASE\n 00001C28                00001C28 00001FC4   7978+$$BASE         LOCTR                                                    02-$$DBASE\n 00001C28                                    7979+               LTORG                                                    02-$$DBASE\n 00001C28 4040404040404040                   7980                =CL8' '\n 00001C30 0000000200000000                   7981                =A(IEANT_HOME_LEVEL,IEANT_NOPERSIST)\n 00001C38 00000978                           7982                =A(ASM_LENGTH)\n 00001C3C 08000002                           7983                =AL1(B'00001000',(0*16),(0),B'00000010')\n 00001C40 FFFFFFFF                           7984                =F'-1'\n 00001C44 00000184                           7985                =A(BR0056)\n 00001C48 00000080                           7986                =A(128)\n 00001C4C 00000004                           7987                =A(IEANT_SYSTEM_LEVEL)\n 00001C50 00000002                           7988                =A(IEANT_HOME_LEVEL)\n 00001C54 00000FFF                           7989                =A(PAGE_SIZE-1)\n 00001C58 0FFFF000                           7990                =X'0FFFF000'\n 00001C5C 00000076                           7991                =AL1(B'00000000',(0*16),(0),B'01110110')\n 00001C60 000000FF                           7992                =X'000000FF'\n 00001C64 00000000                           7993                =A(0)\n 00001C68 E3C4D4D7                           7994                =CL4'TDMP'\n 00001C6C 00000000                           7995                =AL4(0)\n 00001C70 00000028                           7996                =A(L'ASM_ANSAREA)\n 00001C74 00000002                           7997                =AL1(B'00000000',(0*16),(0),B'00000010')\n 00001C78 00000008                           7998                =A(8)\n 00001C7C 18000000                           7999                =BL4'00011000000000000000000000000000'\n 00001C80 00000110                           8000                =A(VTOC_MODEL_DCB_LENGTH+184)\n 00001C84 00000012                           8001                =AL1(B'00000000',(0*16),(0),B'00010010')\n 00001C88 C6C3D340                           8002                =CL4'FCL'\n 00001C8C 7FFFFFFF                           8003                =X'7FFFFFFF'\n 00001C90 3FFFFFFF                           8004                =X'3FFFFFFF'\n 00001C94 40000000                           8005                =X'40000000'\n 00001C98 00000001                           8006                =A(ASM_DIAGNOSE_FIX)\n 00001C9C 00000FFF                           8007                =A(ASM_DIAGNOSE_LENGTH)\n 00001CA0 00000006                           8008                =AL1(B'00000000',(0*16),(0),B'00000110')\n 00001CA4 00000002                           8009                =A(ASM_DIAGNOSE_DONTSWAP)\n 00001CA8 00000004                           8010                =A(ASM_DIAGNOSE_KEEP)\n 00001CAC 00000005                           8011                =A(ASM_DIAGNOSE_ALL-ASM_DIAGNOSE_DONTSWAP)\n 00001CB0 00000006                           8012                =A(ASM_DIAGNOSE_ALL-ASM_DIAGNOSE_FIX)\n 00001CB4 000020AC                           8013                =A(SRBSIZE+SRBWORKL)\n 00001CB8 0000F502                           8014                =AL1(B'00000000',(0),(245),B'00000010')\n 00001CBC E2D9C240                           8015                =CL4'SRB'\n 00001CC0 0000F503                           8016                =AL1(B'00000000',(0),(245),B'00000011')\n 00001CC4 00002000                           8017                =A(SRBWORK_VSMLIST_REPLY_LENGTH)\n 00001CC8 0301C000                           8018                =F'50446336'\n 00001CCC 80000000                           8019                =X'80000000'\n1         data areas                                                                                            Page   76\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000001CD0 00000000                           8020                =A(SEL#BITSBACKWARD)\n 00001CD4 00000001                           8021                =FL4'1'\n 00001CD8 00000A00                           8022                =A(MAX_ECBS)\n 00001CDC 0080E703                           8023                =AL1(B'00000000',(8*16),(231),B'00000011')\n 00001CE0 00010000                           8024                =X'00010000'\n 00001CE4 04000002                           8025                =AL1(B'00000100',(0*16),(0),B'00000010')\n 00001CE8 A2A39699                           8026                =C'stor'\n 00001CEC 04000003                           8027                =AL1(B'00000100',(0*16),(0),B'00000011')\n 00001CF0 000003E8                           8028                =A(1000)\n 00001CF4 007C                               8029                =AL2(124)\n 00001CF6 4828                               8030                =BL2'0100100000101000'\n 00001CF8 4818                               8031                =BL2'0100100000011000'\n 00001CFA 4428                               8032                =BL2'0100010000101000'\n 00001CFC 4418                               8033                =BL2'0100010000011000'\n 00001CFE 4228                               8034                =BL2'0100001000101000'\n 00001D00 4218                               8035                =BL2'0100001000011000'\n 00001D02 4006                               8036                =BL2'0100000000000110'\n 00001D04 C006                               8037                =BL2'1100000000000110'\n 00001D06 4000                               8038                =BL2'0100000000000000'\n 00001D08 0001                               8039                =H'1'\n 00001D0A 0004                               8040                =Y(4)\n 00001D0C 0008                               8041                =Y(8)\n 00001D0E 80                                 8042                =X'80'\n                         00002C07            8043+DATAASMIFEND   EQU DATAASMIF+4095                                       02-$$DBASE\n 00001D10                                    8044+         LTORG                                                          01-$$ASMIF\n                                             8045+*dl_enql     enq (0,0,e,0,step),mf=l   list enq\n                                             8048+*         MACRO-DATE = 06/24/03                                    @05C\n 00001D10                                    8049+         DS    0F                      ESTABLISH A FULLWORD BOUNDARY    02-ENQ\n                         00001D10            8050+MDL_ENQL EQU   *                                                 X02113 02-ENQ\n 00001D10 C0                                 8051+         DC    AL1(192)                PELLAST flag byte.        X02113 02-ENQ\n 00001D11 00                                 8052+         DC    AL1(0)                  PELMILEN - RNAME length.         02-ENQ\n 00001D12 00                                 8053+         DC    BL1'00000000'                                            02-ENQ\n                                             8054+*                                      PELFLAG - flag byte 2.\n 00001D13 00                                 8055+         DC    AL1(0)                  PELRET - return code byte.       02-ENQ\n 00001D14 00000000                           8056+         DC    A(0)                    QNAME ADDRESS                    02-ENQ\n 00001D18 00000000                           8057+         DC    A(0)                    RNAME ADDRESS                    02-ENQ\n                         0000000C            8058+MDL_ENQLL EQU *-MDL_ENQL            enq length                          01-$$ASMIF\n-\n 00001D1C 4040404040404040                   8060+BLANKS   DC    CL128' '            long blank                           01-$$ASMIF\n 00001D9C 00000000                           8061+ZERO     DC    A(0)                zero                                 01-$$ASMIF\n 00001DA0 0000000000000000                   8062+NULLS    DC    XL8'00'                                                  01-$$ASMIF\n                         00000008            8063+KEY8     EQU   8                   key 8 user key                       01-$$ASMIF\n 00001DA8                                    8064+         LTORG                                                          01-$$ASMIF\n                                             8065+*dl_wtol wto  '01234567890123456789012345678901234567890123456789012345X\n                                                 +               678901234567890123456789012345678901234567890123456789',X\n                                                 +               ROUTCDE=(21),DESC=(6),MF=L\n 00001DA8                                    8068+MDL_WTOL DS    0F                                                       02-WTO\n 00001DA8 0072                               8069+         DC    AL2(114)                 TEXT LENGTH            @YA17152 02-WTO\n 00001DAA 8010                               8070+         DC    B'1000000000010000'      MCSFLAGS                        02-WTO\n 00001DAC F0F1F2F3F4F5F6F7                   8071+         DC    C'012345678901234567890123456789012345678901234567890123X02-WTO\n 00001DB4 F8F9F0F1F2F3F4F5                       +               45678901234567890123456789012345678901234567890123456789X\n 00001DBC F6F7F8F9F0F1F2F3                       +               '                        MESSAGE TEXT               @L6C\n 00001E1A 01                                 8072+         DC    AL1(1)                   VERSION LEVEL              @PJC 02-WTO\n1         data areas                                                                                            Page   77\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000001E1B 00                                 8073+         DC    B'00000000'              MISCELLANEOUS FLAGS        @L2A 02-WTO\n 00001E1C 00                                 8074+         DC    AL1(0)                   REPLY LENGTH               @L2A 02-WTO\n 00001E1D 00                                 8075+         DC    AL1(0)                   RESERVED                   @PJA 02-WTO\n 00001E1E 0000                               8076+         DC    B'0000000000000000'      EXTENDED MCS FLAGS         @L2A 02-WTO\n 00001E20 0000                               8077+         DC    AL2(0)                   RESERVED                   @L2A 02-WTO\n 00001E22 00000000                           8078+         DC    AL4(0)                   REPLY BUFFER ADDRESS       @P7C 02-WTO\n 00001E26 00000000                           8079+         DC    AL4(0)                   REPLY ECB ADDRESS          @P7C 02-WTO\n 00001E2A 00000000                           8080+         DC    AL4(0)                   CONNECT ID                 @01C 02-WTO\n 00001E2E 0400                               8081+         DC    B'0000010000000000'      DESCRIPTOR CODES           @L2A 02-WTO\n 00001E30 0000                               8082+         DC    AL2(0)                   RESERVED                   @L2A 02-WTO\n 00001E32 0000080000000000                   8083+         DC    XL16'00000800000000000000000000000000'                  X02-WTO\n 00001E3A 0000000000000000                       +                                        EXTENDED ROUTING CODES     @L2A\n 00001E42 0000                               8084+         DC    B'0000000000000000'      MESSAGE TYPE               @L2A 02-WTO\n 00001E44 0000                               8085+         DC    AL2(0)                   MESSAGE'S PRIORITY         @L2A 02-WTO\n 00001E46 4040404040404040                   8086+         DC    CL8'        '            JOB ID                     @L2A 02-WTO\n 00001E4E 4040404040404040                   8087+         DC    CL8'        '            JOB NAME                   @L2A 02-WTO\n 00001E56 4040404040404040                   8088+         DC    CL8'        '            RETRIEVAL KEY              @L2A 02-WTO\n 00001E5E 00000000                           8089+         DC    AL4(0)                   TOKEN FOR DOM              @P1C 02-WTO\n 00001E62 00000000                           8090+         DC    AL4(0)                   CONSOLE ID                 @P1C 02-WTO\n 00001E66 4040404040404040                   8091+         DC    CL8'        '            SYSTEM NAME                @L2A 02-WTO\n 00001E6E 00000000                           8092+         DC    AL4(0)                   RESERVED                   @PJA 02-WTO\n 00001E72 00000000                           8093+         DC    AL4(0)                   RESERVED                   @PJA 02-WTO\n                         000000CE            8094+MDL_WTOL_L EQU *-MDL_WTOL           text length                         01-$$ASMIF\n 00001E76 0A00                               8095+SVC_EXE  SVC   *-*               exec only                              01-$$ASMIF\n 00001E78 D200 3001 1000 00000001 00000000   8096+TDUMP_COPY MVC 1(*-*,R3),0(R1)    copy text                             01-$$ASMIF\n 00001E7E 32                                 8097+TDUMP_DEF_NAME   DC AL1(L'TDUMP_DEF_NAMEL)                              01-$$ASMIF\n 00001E7F C9E2C9E24BE3C4E4                   8098+TDUMP_DEF_NAMEL  DC C'ISIS.TDUMP.D&&YYMMDD..T&&HHMMSS..&&SYSNAME..&&JOBX01-$$ASMIF\n 00001E87 D4D74BC450E8E8D4                       +               NAME.'\n 00001EB1 0D                                 8099+TDUMP_DEF_DESC   DC AL1(L'TDUMP_DEF_DESCL)                              01-$$ASMIF\n 00001EB2 C9E2C9E240848586                   8100+TDUMP_DEF_DESCL  DC C'ISIS default '                                    01-$$ASMIF\n 00001EBF 00                                     +\n 00001EC0 D200 6000 B2C0 00000000 00001EC8   8101+VTOC_COPY_DCB MVC 0(*-*,R6),VTOC_MODEL_DCB copy model DCB               01-$$ASMIF\n                                             8102+*TOC_MODEL_DCB DCB DSORG=PS,MACRF=(R)\n                                             8106+*,***  IHB061  DDNAME NOT SPECIFIED                                     03-IHBERMAC\n0                                            8108+*                       DATA CONTROL BLOCK\n                                             8109+*\n 00001EC6 0000                                   +\n 00001EC8                                    8110+VTOC_MODEL_DCB DC 0F'0'       ORIGIN ON WORD BOUNDARY                   02-DCB\n                                             8111+*                       DIRECT ACCESS DEVICE INTERFACE\n 00001EC8 0000000000000000                   8112+         DC    BL16'0'        FDAD, DVTBL                               02-DCB\n 00001ED8 00000000                           8113+         DC    A(0)           KEYLEN, DEVT, TRBAL                       02-DCB\n                                             8114+*                       COMMON ACCESS METHOD INTERFACE\n 00001EDC 00                                 8115+         DC    AL1(0)         BUFNO, NUMBER OF BUFFERS                  02-DCB\n 00001EDD 000001                             8116+         DC    AL3(1)         BUFCB, BUFFER POOL CONTROL BLOCK          02-DCB\n 00001EE0 0000                               8117+         DC    AL2(0)         BUFL, BUFFER LENGTH                       02-DCB\n 00001EE2 4000                               8118+         DC    BL2'0100000000000000' DSORG, DATA SET ORGANIZATION       02-DCB\n 00001EE4 00000001                           8119+         DC    A(1)           IOBAD FOR EXCP OR RESERVED                02-DCB\n                                             8120+*                       FOUNDATION EXTENSION\n 00001EE8 00                                 8121+         DC    BL1'00000000'  BFTEK, BFALN, DCBE INDICATORS             02-DCB\n 00001EE9 000001                             8122+         DC    AL3(1)         EODAD (END OF DATA ROUTINE ADDRESS)       02-DCB\n 00001EEC 00                                 8123+         DC    BL1'00000000'  RECFM (RECORD FORMAT)                     02-DCB\n 00001EED 000000                             8124+         DC    AL3(0)         EXLST (EXIT LIST ADDRESS)                 02-DCB\n                                             8125+*                       FOUNDATION BLOCK\n 00001EF0 F040404040404040                   8126+         DC    CL8'0'         DDNAME                                    02-DCB\n1         data areas                                                                                            Page   78\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000001EF8 02                                 8127+         DC    BL1'00000010'  OFLGS (OPEN FLAGS)                        02-DCB\n 00001EF9 00                                 8128+         DC    BL1'00000000'  IFLGS (IOS FLAGS)                         02-DCB\n 00001EFA 2000                               8129+         DC    BL2'0010000000000000' MACR (MACRO FORMAT)                02-DCB\n                                             8130+*                       BSAM-BPAM-QSAM INTERFACE\n 00001EFC 00                                 8131+         DC    BL1'00000000'  OPTCD, OPTION CODES                       02-DCB\n 00001EFD 000001                             8132+         DC    AL3(1)         CHECK OR INTERNAL QSAM SYNCHRONIZING RTN. 02-DCB\n 00001F00 00000001                           8133+         DC    A(1)           SYNAD, SYNCHRONOUS ERROR RTN. (3 BYTES)   02-DCB\n 00001F04 0000                               8134+         DC    H'0'           INTERNAL ACCESS METHOD FLAGS              02-DCB\n 00001F06 0000                               8135+         DC    AL2(0)         BLKSIZE, BLOCK SIZE                       02-DCB\n 00001F08 00000000                           8136+         DC    F'0'           INTERNAL ACCESS METHOD FLAGS              02-DCB\n 00001F0C 00000001                           8137+         DC    A(1)           INTERNAL ACCESS METHOD USE                02-DCB\n                                             8138+*                         BSAM-BPAM INTERFACE\n 00001F10 00                                 8139+         DC    AL1(0)         NCP, MAX NUM OF OUTSTANDING READ/WRITES   02-DCB\n 00001F11 000001                             8140+         DC    AL3(1)         EOBR, INTERNAL ACCESS METHOD USE          02-DCB\n 00001F14 00000001                           8141+         DC    A(1)           EOBW, INTERNAL ACCESS METHOD USE          02-DCB\n 00001F18 0000                               8142+         DC    AL1(0,0)       FLAGS AND EITHER DIRCT OR BUFOFF          02-DCB\n 00001F1A 0000                               8143+         DC    AL2(0)         LRECL                                     02-DCB\n 00001F1C 00000001                           8144+         DC    A(1)           CNTRL, NOTE, POINT                        02-DCB\n0                        00000058            8146+VTOC_MODEL_DCB_LENGTH EQU *-VTOC_MODEL_DCB                              01-$$ASMIF\n                                             8147+*TOC_MODEL_CVAFFILT CVAFFILT MF=L,FLTAREA=KEEP\n 00001F20                                    8149+         CNOP  0,4                                                      02-CVAFFILT\n                         00001F20            8150+VTOC_MODEL_CVAFFILT EQU *                                               02-CVAFFILT\n 00001F20 C3E5D7D3                           8151+         DC    CL4'CVPL'                EBCDIC 'CVPL'                   02-CVAFFILT\n 00001F24 0044                               8152+         DC    AL2(ICV774E-VTOC_MODEL_CVAFFILT)                        X02-CVAFFILT\n                                                 +                                        LENGTH OF CVPL\n 00001F26 0E                                 8153+         DC    XL1'0E'                  FUNCTION CODE                   02-CVAFFILT\n 00001F27 00                                 8154+         DC    XL1'00'                  STATUS INFORMATION              02-CVAFFILT\n 00001F28 00                                 8155+         DC    B'00000000'              FIRST FLAG BYTE                 02-CVAFFILT\n 00001F29 00                                 8156+         DC    B'00000000'              SECOND FLAG BYTE                02-CVAFFILT\n 00001F2A 80                                 8157+         DC    B'10000000'              THIRD FLAG BYTE                 02-CVAFFILT\n 00001F2B 00                                 8158+         DC    B'00000000'              Fourth Flag Byte           @LVC 02-CVAFFILT\n 00001F2C 00000000                           8159+         DC    A(0)                     UCB ADDRESS                     02-CVAFFILT\n 00001F30 00000000                           8160+         DC    A(0)                     FILTER CRITERIA LIST ADDRESS    02-CVAFFILT\n 00001F34 00000000                           8161+         DC    A(0)                     BUFFER LIST ADDRESS             02-CVAFFILT\n 00001F38 00000000                           8162+         DC    A(0)                     INDEX VIR'S BUFFER LIST ADDRESS 02-CVAFFILT\n 00001F3C 00000000                           8163+         DC    A(0)                     MAP VIR'S BUFFER LIST ADDRESS   02-CVAFFILT\n 00001F40 00000000                           8164+         DC    A(0)                     I/O AREA ADDRESS                02-CVAFFILT\n 00001F44 00000000                           8165+         DC    A(0)                     DEB ADDRESS                     02-CVAFFILT\n 00001F48 00000000                           8166+         DC    A(0)                     ARGUMENT ADDRESS                02-CVAFFILT\n 00001F4C 00000000                           8167+         DC    A(0)                     SPACE PARAMETER LIST ADDRESS    02-CVAFFILT\n 00001F50 00000000                           8168+         DC    A(0)                     EXTENT TABLE ADDRESS            02-CVAFFILT\n 00001F54 00000000                           8169+         DC    A(0)                     NEW VRF VIXM BUFFER LIST ADDR   02-CVAFFILT\n 00001F58 00000000                           8170+         DC    A(0)                     VRF DATA ADDRESS                02-CVAFFILT\n 00001F5C 00000000                           8171+         DC    A(0)                     COUNT AREA ADDRESS              02-CVAFFILT\n 00001F60 00000000                           8172+         DC    A(0)                     FILTER SAVE AREA ADDRESS        02-CVAFFILT\n                         00001F64            8173+ICV774E  EQU   *                        END OF CVPL                     02-CVAFFILT\n                         00000044            8174+VTOC_MODEL_CVAFFL EQU *-VTOC_MODEL_CVAFFILT                             01-$$ASMIF\n 00001F64 00000064                           8175+LOGGER_ONESEC      DC A(100*1)            one sec                       01-$$ASMIF\n 00001F68 D200 D53E 3000 0000053E 00000000   8176+LOGGER_SETSTREAM   MVC ASM_STREAMNAME(*-*),0(R3) copy straem            01-$$ASMIF\n                                             8177+*OGGER_MAX_BUFFER  DC  A(1024*128) max logger buffer\n 00001F6E 0000                                   +\n 00001F70 00800000                           8178+LOGGER_MAX_BUFFER  DC  A(1024*1024*8) max logger buffer                 01-$$ASMIF\n 00001F74 00                                 8179+WLM_CONNTKN_KEY  DC X'00'         connection token key                  01-$$ASMIF\n 00001F75 E6D3D46DC5D5C3D3                   8180+WLM_ENCLAVE_TOKENNAME DC C'WLM_ENCLAVE'                                 01-$$ASMIF\n1         data areas                                                                                            Page   79\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   FCL_MAP(X'834'),R13+X'7CC'  BFL_MAP(X'81C'),R13+X'7E4'  CVAFFILT_MAP(X'808'),R13+X'7F8'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000001F80 05265C00                           8181+ADAY     DC    A(24*60*60*1000)  a day in milli sec                     01-$$ASMIF\n 00001F84 E6C1C9E3D4C1D1D6                   8182+WAIT_MAJ DC    CL8'WAITMAJOR'    ENQ/DEQ MAJOR NAME                     01-$$ASMIF\n                                             8183+* 04/03/10 OBTAIN DSCB\n                                             8184+*AMLST   CAMLST SEARCH,0,0,0\n 00001F8C                                    8186+CAMLST   DS    0F                                ALIGN ON FULL WORD     02-CAMLST\n 00001F8C C1                                 8187+         DC    AL1(193)                          THREE BYTES OF FLAGS   02-CAMLST\n 00001F8D 00                                 8188+         DC    AL1(0)                            INDICATING THE FUNC-   02-CAMLST\n 00001F8E 00                                 8189+         DC    AL1(0)                            TION TO BE PERFORMED   02-CAMLST\n 00001F8F 00                                 8190+         DC    AL1(0)                            NO OPTION THREE        02-CAMLST\n 00001F90 00000000                           8191+         DC    A(0)                              PARAMETER TWO          02-CAMLST\n 00001F94 00000000                           8192+         DC    A(0)                              PARAMETER THREE        02-CAMLST\n 00001F98 00000000                           8193+         DC    A(0)                              PARAMETER FOUR         02-CAMLST\n                         00000010            8194+CAMLST_L EQU    *-CAMLST                                                01-$$ASMIF\n                                             8195+* 04/03/10 OBTAIN DSCB\n                                             8196+* 10/09/12 CAMLST SEEK for OBTAIN\n                                             8197+*amlst_seek CAMLST SEEK,0,0,0\n 00001F9C                                    8199+CAMLST_SEEK DS 0F                                ALIGN ON FULL WORD     02-CAMLST\n 00001F9C C0                                 8200+         DC    AL1(192)                          THREE BYTES OF FLAGS   02-CAMLST\n 00001F9D 80                                 8201+         DC    AL1(128)                          INDICATING THE FUNC-   02-CAMLST\n 00001F9E 00                                 8202+         DC    AL1(0)                            TION TO BE PERFORMED   02-CAMLST\n 00001F9F 00                                 8203+         DC    AL1(0)                            NO OPTION THREE        02-CAMLST\n 00001FA0 00000000                           8204+         DC    A(0)                              PARAMETER TWO          02-CAMLST\n 00001FA4 00000000                           8205+         DC    A(0)                              PARAMETER THREE        02-CAMLST\n 00001FA8 00000000                           8206+         DC    A(0)                              PARAMETER FOUR         02-CAMLST\n                         00000010            8207+CAMLST_SEEK_L EQU *-CAMLST_SEEK                                         01-$$ASMIF\n                                             8208+* 10/09/12 CAMLST SEEK for OBTAIN\n-                                            8211+* timer exit modell\n0                                            8213+         PUSH USING                                                     01-$$ASMIF\n                                             8214+         DROP R13                                                       01-$$ASMIF\n 00001FAC 05F0                               8215+MDL_TIMX BALR R15,0               timer exit area                       01-$$ASMIF\n                     R:F 00000076            8216+         USING ASM_TIMX+2,R15     temp base  base                       01-$$ASMIF\n 00001FAE 90EC D00C               0000000C   8217+         STM   R14,R12,12(R13)     save regs                            01-$$ASMIF\n 00001FB2 4120 F052               000000C8   8218+         LA    R2,ASM_TIMER_ECB   get ecb addr                          01-$$ASMIF\n                                             8220+*        MACDATE  03/11/11                                         @L4C\n 00001FB6 1B00                               8222+         SR    0,0                    . SET POST CODE              @D1A 02-POST\n 00001FB8 4110 2000               00000000   8223+         LA    1,0(0,R2)              . LOAD ECB, CLEAR HI BYTE    @D1A 02-POST\n 00001FBC 0A02                               8224+         SVC   2                      . ISSUE THE POST SVC         @D1A 02-POST\n 00001FBE 98EC D00C               0000000C   8225+         LM    R14,R12,12(R13)     save regs                            01-$$ASMIF\n 00001FC2 0B0E                               8226+         BSM   0,R14                 return back                        01-$$ASMIF\n                                             8227+         DROP  R15                                                      01-$$ASMIF\n                         00000018            8228+MDL_TIMXL EQU *-MDL_TIMX   routine length                               01-$$ASMIF\n                                             8229+         POP   USING                                                    01-$$ASMIF\n1          refrenced dsects                                                                                     Page   80\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n   Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            8232+* 29/11/07 struct asm include\n                                             8233+         PUSH PRINT                                                     02-$$GLOBAL\n                                             8234+         PRINT ON                                                       02-$$GLOBAL\n0                                            8236+* SYSTEM CONTROL BLOCKS\n0                                            8238+         PRINT    OFF,NOGEN                                             02-$$GLOBAL\n                                             8436+         PRINT OFF                                                      03-CVT\n                                             9749+         PRINT OFF                                                      03-IHASCVT\n                                            10007+         PRINT OFF                                                 @D6A 03-IHAASCB\n                                            10763+         PRINT OFF                                                 @L3A 03-IHAASXB\n                                            11031+         PRINT OFF                                                      03-IHAASSB\n                                            12188+         PRINT OFF                                                      03-IHAECVT\n                                            15588+         PRINT OFF                                                 @H1A 03-IHAASVT\n                                            15754+         PRINT OFF                                                      03-IHAPSA\n                                            17281+         PRINT OFF                                                @L1A  04-IHARB\n                                            17415+         PRINT ON                                                  @L1A 05-IKJRB\n                                            17519+         PRINT OFF                                                @L1A  05-IKJRB\n                                            24578+         PRINT OFF                                                      03-IAZJSAB\n                                            27810+                PRINT ON                                                03-IWMQCXIT\n                                            27975+         PRINT OFF                                                      03-IKJTCB\n                                            28936+         PRINT OFF                                                      03-IHASTCB\n                                            34743+         PRINT OFF                                                      03-IEZDEB\n                                            37295+         PRINT OFF                                                      03-IEFJFCBN\n                                            40127+         PRINT OFF                                                      03-IAZCHK\n                                            40311+         PRINT OFF                                                      03-IAZJSPA\n                                            40505+         PRINT OFF                                                      03-IAZIDX\n                                            40676+         PRINT OFF                                                      03-IAZFSIP\n                                            41645+         PRINT OFF                                                      03-IAZRESPA\n                                            41709+         PRINT OFF                                                      03-IAZFSCT\n                                            41751+         PRINT OFF                                                      03-IAZFSVT\n                                            41867+         PRINT OFF                                                 @H2A 03-IHASVT\n                                            47897+         PRINT   GEN                                                    02-$$GLOBAL\n                                            53002+         PRINT NOGEN                                                    03-ASMAXITP\n                                            55121+         PRINT ON,GEN                                                   02-$$GLOBAL\n 00000000                00000000 00000004  55122+IOCC     DSECT                                                          02-$$GLOBAL\n 00000000 00000000                          55123+IOCC_DUMMY DC A(0)                                                      02-$$GLOBAL\n                                            55124+*        BPXYIOCC\n                                            55126+** BPXYIOCC: Ioctl Command Constant Definitions\n                                            55127+**  Used By: Ioctl syscalls\n                                            55128+*   Ioctl command constants - Range 1-255 reserved for OpenMVS\n                                            55129+*  Authorized/Tcpip CMD values\n                         00001388           55130+IOCC#TCI             EQU   5000 Cmd for Tcpip Initialization            03-BPXYIOCC\n                         00001389           55131+IOCC#TCC             EQU   5001 Cmd for Complete Tcpip Initialization   03-BPXYIOCC\n                         0000138A           55132+IOCC#TCS             EQU   5002 Cmd for Tcpip Path Sever                03-BPXYIOCC\n                         0000138B           55133+IOCC#TCR             EQU   5003 Cmd for Tcpip Reply/Post call           03-BPXYIOCC\n                         0000138C           55134+IOCC#TCG             EQU   5004 Cmd for Tcpip SiGnal call         @p3a  03-BPXYIOCC\n                         0000138E           55135+IOCC#TCCE            EQU   5006 Cmd for Tcpip End Registration    @D5A  03-BPXYIOCC\n                         0000138F           55136+SIOCMSDELRT          EQU   5007 Cmd for Delete Route                    03-BPXYIOCC\n                                            55137+*                                         (Pre-Router wrap)       @D5A\n                         00001390           55138+SIOCMSADDRT          EQU   5008 Cmd for Add Route                       03-BPXYIOCC\n                                            55139+*                                         (Pre-Router wrap)       @D5A\n                         00001391           55140+SIOCMSSIFADDR        EQU   5009 Cmd for Set Interface address           03-BPXYIOCC\n                                            55141+*                                         (Pre-Router wrap)       @D5A\n                         00001392           55142+SIOCMSSIFFLAGS       EQU   5010 Cmd for Set Interface Flags             03-BPXYIOCC\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   81\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           55143+*                                         (Pre-Router wrap)       @D5A\n                         00001393           55144+SIOCMSSIFDSTADDR     EQU   5011 Cmd for Set point-to-point interface    03-BPXYIOCC\n                                            55145+*                                 address (Pre-Router wrap)       @D5A\n                         00001394           55146+SIOCMSSIFBRDADDR     EQU   5012 Cmd for Set Broadcast address           03-BPXYIOCC\n                                            55147+*                                         (Pre-Router wrap)       @D5A\n                         00001395           55148+SIOCMSSIFNETMASK     EQU   5013 Cmd for Set interface network           03-BPXYIOCC\n                                            55149+*                                 mask for an Internet address\n                                            55150+*                                         (Pre-Router wrap)       @D5A\n                         00001396           55151+SIOCMSSIFMETRIC      EQU   5014 Cmd for Set Interface routing metric    03-BPXYIOCC\n                                            55152+*                                         (Pre-Router wrap)       @D5A\n                         00001397           55153+SIOCMSRBRTTABLE      EQU   5015 Cmd for Set Routing table required      03-BPXYIOCC\n                                            55154+*                                         required request\n                                            55155+*                                         (Pre-Router wrap)       @D5A\n                         00001398           55156+SIOMSMETRIC1RT       EQU   5016 Cmd for Set metric1                     03-BPXYIOCC\n                                            55157+*                                         (Pre-Router wrap)       @D5A\n                         00001399           55158+SIOCMSICMPREDIRECT   EQU   5017 Cmd for Propagating ICMP redirects      03-BPXYIOCC\n                                            55159+*                                         (Pre-Router wrap)       @D5A\n                         8008139A           55160+SIOCSETTKN           EQU   X'8008139A' 5018 Set Tcp/Ip master Tkn @P6A  03-BPXYIOCC\n                                            55161+*\n                         8044F604           55162+SIOCMSADDRT6         EQU   X'8044F604'     Add IPV6 Route         @DDA  03-BPXYIOCC\n                                            55163+*\n                         8044F605           55164+SIOCMSDELRT6         EQU   X'8044F605'     Delete IPV6 Route      @DDA  03-BPXYIOCC\n                                            55165+*\n                         C014F606           55166+SIOCGRT6TABLE        EQU   X'C014F606' Get IPV6 Network Routing         03-BPXYIOCC\n                                            55167+*                                         Table                   @DDA\n                         C018F606           55168+SIOCGRT6TABLE64      EQU   X'C018F606' Get IPV6 Network Routing         03-BPXYIOCC\n                                            55169+*                                         Table  64-BIT           @PFC\n                         8000F607           55170+SIOCMSRBRT6TABLE     EQU   X'8000F607' Rebuild IPV6 Route Tables  @DDA  03-BPXYIOCC\n                                            55171+*\n                         C014F608           55172+SIOCGHOMEIF6         EQU   X'C014F608'  Get IPV6 Home Interface         03-BPXYIOCC\n                                            55173+*                                         Configuration           @PBC\n                         C018F608           55174+SIOCGHOMEIF664       EQU   X'C018F608'  Get IPV6 Home Interface         03-BPXYIOCC\n                                            55175+*                                         Configuration 64-Bit    @PFC\n                         8000F609           55176+SIOCMSRBHOMEIF6      EQU   X'8000F609' Rebuild IPV6 Home Interface@PBC  03-BPXYIOCC\n                                            55177+*\n                         8044F60A           55178+SIOCMSCHGRT6METRIC   EQU   X'8044F60A' Change IPV6 route's metric @PDA  03-BPXYIOCC\n                                            55179+*\n                         8008F60B           55180+SIOCMSMODHOMEIF6     EQU   X'8008F60B' Modify IPV6 Home Interface @DHA  03-BPXYIOCC\n                                            55181+*\n                         8058F60C           55182+SIOCMSADDRT6V2       EQU   X'8058F60C' Add IPV6 route version 2   @PGA  03-BPXYIOCC\n                                            55183+*\n                         8058F60D           55184+SIOCMSDELRT6V2       EQU   X'8058F60D' Del IPV6 route version 2   @PGA  03-BPXYIOCC\n                                            55185+*\n                         8058F60E           55186+SIOCMSCHGRT6METRICV2 EQU   X'8058F60E' Change IPV6 route's metric @PGA  03-BPXYIOCC\n                                            55187+*\n                                            55188+* Connection type and security credentials on TCPIP sockets.      @DRA\n                                            55189+*   Refer to: Comm Svr: IP Programmer's Guide and References.     @DRA\n                         C000F612           55190+SIOCGPARTNERINFO     EQU   X'C000F612'  Get Info                  @DRA  03-BPXYIOCC\n                         8004F613           55191+SIOCSPARTNERINFO     EQU   X'8004F613'  Set Optimization          @DRA  03-BPXYIOCC\n                                            55192+*  Ioctl Command Constants - terminal control\n                         4008A368           55193+TIOCGWINSZ           EQU   X'4008A368'  get window size           @D3A  03-BPXYIOCC\n                         8008A367           55194+TIOCSWINSZ           EQU   X'8008A367'  set window size           @D3A  03-BPXYIOCC\n                         8001A364           55195+TIOCNOTIFY           EQU   X'8001A364'  notify master by packet   @P7A  03-BPXYIOCC\n                                            55196+*  Constants for argument when TIOCNOTIFY is specified            @P7A\n                         00000001           55197+IOCC#PWBEGIN         EQU   1            Begin secure data         @P7A  03-BPXYIOCC\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   82\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000002           55198+IOCC#PWEND           EQU   2            End   secure data         @P7A  03-BPXYIOCC\n                                            55199+*\n                                            55200+* Ioctl command constants - for Router query                      @D5A\n                         C008C980           55201+SIOCGRTTABLE         EQU   X'C008C980'  Gets Network Routing Tab  @D5A  03-BPXYIOCC\n                         C00CC980           55202+SIOCGRTTABLE64       EQU   X'C00CC980'  Get NRT for 64-Bit C Pgm  @PCA  03-BPXYIOCC\n                                            55203+*\n                         8008C981           55204+SIOCSETRTTD          EQU   X'8008C981'  Set Socket to be attached to    03-BPXYIOCC\n                                            55205+*                                         1 TD                    @D5A\n                                            55206+*\n                         8008C983           55207+SIOCMSMODHOMEIF      EQU   X'8008C983'  Modify Home Interface     @DHA  03-BPXYIOCC\n                                            55208+*\n                         8016C984           55209+SIOCMSMODHOMEIFV2    EQU   X'8016C984'  Modify Home Interface V2  @PIA  03-BPXYIOCC\n                                            55210+*\n                         8054C985           55211+SIOCMSADDRTV2        EQU   X'8054C985'  Cmd for Add Route V2      @PIA  03-BPXYIOCC\n                                            55212+*\n                         8054C986           55213+SIOCMSDELRTV2        EQU   X'8054C986'  Cmd for Delete Route V2   @PIA  03-BPXYIOCC\n                                            55214+*\n                         8054C987           55215+SIOMSMETRIC1RTV2     EQU   X'8054C987'  Cmd for Set Metric1 V2    @PIA  03-BPXYIOCC\n                                            55216+*\n                         8004A77E           55217+FIONBIO              EQU   X'8004A77E'  set/reset nonblock I/O          03-BPXYIOCC\n                         4004A77F           55218+FIONREAD             EQU   X'4004A77F'  get number of readable bytes    03-BPXYIOCC\n                                            55219+*                                     available\n                         4004A78A           55220+FIONWRITE            EQU   X'4004A78A'  get number of writeable bytes   03-BPXYIOCC\n                                            55221+*                                     available                   @DIA\n                         8004A77D           55222+FIOASYNC             EQU   X'8004A77D'  set/clear async I/O       @D5A  03-BPXYIOCC\n                         8004A77C           55223+FIOSETOWN            EQU   X'8004A77C'  set owner                 @D5A  03-BPXYIOCC\n                         4004A77B           55224+FIOGETOWN            EQU   X'4004A77B'  get owner                 @D5A  03-BPXYIOCC\n                         4010E401           55225+SECIGET              EQU   X'4010E401'  get security information        03-BPXYIOCC\n                         4028E403           55226+SECIGET_T            EQU   X'4028E403'  Get peer task security    @DIA  03-BPXYIOCC\n                         8004E404           55227+SIOCTIEDESTHRD       EQU   X'8004E404'  Tie descriptor to thread  @DIA  03-BPXYIOCC\n                         C012A78B           55228+SIOCSECENVR          EQU   X'C012A78B'  SET/GET Client Security   @DLA  03-BPXYIOCC\n                                            55229+*                                        Environment              @DLA\n                         8030A70A           55230+SIOCADDRT            EQU   X'8030A70A'  IBM use only, Add routing       03-BPXYIOCC\n                                            55231+*                                     table entry\n                         4004A707           55232+SIOCATMARK           EQU   X'4004A707'  Is current location pointing    03-BPXYIOCC\n                                            55233+*                                     to out-of-band data?\n                         8004A708           55234+SIOCSPGRP            EQU   X'8004A708'  Set process group          @DDA 03-BPXYIOCC\n                         4004A709           55235+SIOCGPGRP            EQU   X'4004A709'  Get process group          @DDA 03-BPXYIOCC\n                         8030A70B           55236+SIOCDELRT            EQU   X'8030A70B'  IBM use only, Delete routing    03-BPXYIOCC\n                                            55237+*                                     table entry\n                         8030A70C           55238+SIOMETRIC1RT         EQU   X'8030A70C'  IBM use only, Set metric1 @D5A  03-BPXYIOCC\n                         8020A70C           55239+SIOCSIFADDR          EQU   X'8020A70C'  Set Network interface addr@D5A  03-BPXYIOCC\n                         C020A70D           55240+SIOCGIFADDR          EQU   X'C020A70D'  Get Network interface address   03-BPXYIOCC\n                         C020A712           55241+SIOCGIFBRDADDR       EQU   X'C020A712'  Get Network interface           03-BPXYIOCC\n                                            55242+*                                     Broadcast Address\n                         8020A713           55243+SIOCSIFBRDADDR       EQU   X'8020A713'  Sets Network interface          03-BPXYIOCC\n                                            55244+*                                     Broadcast Address           @D5A\n                         C008A714           55245+SIOCGIFCONF          EQU   X'C008A714'  Get Network interface Config    03-BPXYIOCC\n                         C00CA714           55246+SIOCGIFCONF64        EQU   X'C00CA714'    for 64-Bit C Pgms             03-BPXYIOCC\n                         C018A722           55247+SIOCGIFCONF6         EQU   X'C018A722'  Get IPv6 Network IfConf  @DJA   03-BPXYIOCC\n                                            55248+*\n                         C020A726           55249+SIOCGIFMTU           EQU   X'C020A726'  Get MTU Size             @DQA   03-BPXYIOCC\n                                            55250+*\n                         C020A70F           55251+SIOCGIFDSTADDR       EQU   X'C020A70F'  Get Network interface           03-BPXYIOCC\n                                            55252+*                                     Destination Address\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   83\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        C020A711           55253+SIOCGIFFLAGS         EQU   X'C020A711'  Get Network interface Flags     03-BPXYIOCC\n                         C020A717           55254+SIOCGIFMETRIC        EQU   X'C020A717'  IBM use only, Gets Network      03-BPXYIOCC\n                                            55255+*                                     Interface Routing Metric\n                         C020A715           55256+SIOCGIFNETMASK       EQU   X'C020A715'  Get Network interface           03-BPXYIOCC\n                                            55257+*                                     Network Mask\n                         8020A716           55258+SIOCSIFNETMASK       EQU   X'8020A716'  Set Network interface           03-BPXYIOCC\n                                            55259+*                                     Network Mask                @D5A\n                         8020A70E           55260+SIOCSIFDSTADDR       EQU   X'8020A70E'  IBM use only, Sets Network      03-BPXYIOCC\n                                            55261+*                                     Interface Destination Address\n                         8020A710           55262+SIOCSIFFLAGS         EQU   X'8020A710'  IBM use only, Sets Network      03-BPXYIOCC\n                                            55263+*                                     Interface Flags\n                         8020A718           55264+SIOCSIFMETRIC        EQU   X'8020A718'  IBM use only, Sets Network      03-BPXYIOCC\n                                            55265+*                                     Interface Routing Metric\n                         8024A71E           55266+SIOCSARP             EQU   X'8024A71E'  IBM use only, Sets ARP          03-BPXYIOCC\n                                            55267+*                                     Entry                      @D5A\n                         C024A71F           55268+SIOCGARP             EQU   X'C024A71F'  IBM use only, Gets ARP          03-BPXYIOCC\n                                            55269+*                                     Entry                      @D5A\n                         8024A720           55270+SIOCDARP             EQU   X'8024A720'  IBM use only, Deletes ARP       03-BPXYIOCC\n                                            55271+*                                     Entry                      @D5A\n                         8004A700           55272+SIOCSHIWAT           EQU   X'8004A700'  Set High Water Mark             03-BPXYIOCC\n                                            55273+*                                         (Not Supported)        @D5A\n                         4004A701           55274+SIOCGHIWAT           EQU   X'4004A701'  Get High Water Mark             03-BPXYIOCC\n                                            55275+*                                         (Not Supported)        @D5A\n                         8004A702           55276+SIOCSLOWAT           EQU   X'8004A702'  Set Low Water Mark              03-BPXYIOCC\n                                            55277+*                                         (Not Supported)        @D5A\n                         4004A703           55278+SIOCGLOWAT           EQU   X'4004A703'  Get Low Water Mark              03-BPXYIOCC\n                                            55279+*                                         (Not Supported)        @D5A\n                         0000E402           55280+FIOFCTLNBIO          EQU   X'0000E402'  change blocking/nonblocking     03-BPXYIOCC\n                                            55281+*               STREAMS\n                         4004E21A           55282+IOCC#ILINK           EQU   X'4004E21A'  I_LINK                   @D9A   03-BPXYIOCC\n                                            55283+*               DFS ACLs\n                         2000C100           55284+IOCC#EDITACL         EQU   X'2000C100'  Edit ACL                 @P5A   03-BPXYIOCC\n                                            55285+*               RACF ACLs\n                         0000D301           55286+SETFACL              EQU   X'0000D301'  SET FILE ACL             @DBA   03-BPXYIOCC\n                         0000D301           55287+IOCC#SETFACL         EQU   X'0000D301'  SET FILE ACL             @DCA   03-BPXYIOCC\n                         0000D302           55288+GETFACL              EQU   X'0000D302'  GET FILE ACL             @DBA   03-BPXYIOCC\n                         0000D302           55289+IOCC#GETFACL         EQU   X'0000D302'  GET FILE ACL             @DCA   03-BPXYIOCC\n                                            55290+*\n                                            55291+*   Get Port of Entry for Multilevel Security                      @DDA\n                                            55292+*   Get Port of Entry Attributes for a Socket Resource             @DDA\n                         4000D305           55293+SIOCGSOCKPOEATTRS    EQU   X'4000D305'                           @DDA   03-BPXYIOCC\n                                            55294+*   Get Port of Entry Attributes for a non-Socket Resource         @DGA\n                         4000D306           55295+SIOCGFDPOEATTRS      EQU   X'4000D306'                           @DDA   03-BPXYIOCC\n                                            55296+*   Get Multilevel Security info for a Socket Resource           @DKA\n                         4000D307           55297+SIOCGSOCKMLSINFO     EQU   X'4000D307'                           @DKA   03-BPXYIOCC\n                                            55298+*  Constants for argument when FIONBIO is specified\n                         00000000           55299+IOCC#BLOCK           EQU   X'00000000'  Allow blocking to occur         03-BPXYIOCC\n                         00000001           55300+IOCC#NONBLOCK        EQU   X'00000001'  Do not allow blocking to occur  03-BPXYIOCC\n                                            55301+*  Constants for argument when SIOCTIEDESTHRD is specified         @DIA\n                         00000001           55302+SIOC#TIESD           EQU   X'00000001'  Tie descriptor to thread   @DIA 03-BPXYIOCC\n                         00000000           55303+SIOC#UNTIESD         EQU   X'00000000'  UnTie descriptor from thrd @DIA 03-BPXYIOCC\n                                            55304+*  Constants for argument when SIOCSECENVR is specified            @DLA\n                         00000001           55305+SIOC#SETENVR         EQU   X'00000001'  SET Security Environment   @DLA 03-BPXYIOCC\n                         00000002           55306+SIOC#GETENVR         EQU   X'00000002'  GET Security Envrionment   @DLA 03-BPXYIOCC\n                                            55307+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   84\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           55308+***********************************************************************\n                                            55309+*                                                                     *\n                                            55310+*                        I P v 6                                 @DDA *\n                                            55311+*                                                                     *\n                                            55312+***********************************************************************\n                                            55313+*        IPv6 Ioctls\n                         4000F601           55314+SIOCGIFVERSION       EQU   X'4000F601'  Get Interface Ver   Out         03-BPXYIOCC\n                         C000F602           55315+SIOCGSRCIPADDR       EQU   X'C000F602'  Get Source Addr   InOut         03-BPXYIOCC\n                         4000F603           55316+SIOCGIFNAMEINDEX     EQU   X'4000F603'  Get If Name/Index   Out         03-BPXYIOCC\n                                            55317+***********************************************************************\n                                            55318+*                                                                     *\n                                            55319+* Get and Set ip_msfilter                                             *\n                                            55320+*                                                                     *\n                                            55321+****************************************************************** @DMA\n                                            55322+* Get and Set ip_msfilter (IPv4 only)                              @DMA\n                         C000A724           55323+SIOCGIPMSFILTER      EQU   X'C000A724'                             @DMA 03-BPXYIOCC\n                         8000A725           55324+SIOCSIPMSFILTER      EQU   X'8000A725'                             @DMA 03-BPXYIOCC\n                                            55325+***********************************************************************\n                                            55326+*                                                                     *\n                                            55327+* Get and Set group_filter                                            *\n                                            55328+*                                                                     *\n                                            55329+****************************************************************** @DMA\n                                            55330+* Get and Set group_filter (IPv6 or IPv4)                          @DMA\n                         C000F610           55331+SIOCGMSFILTER        EQU   X'C000F610'                             @DMA 03-BPXYIOCC\n                         8000F611           55332+SIOCSMSFILTER        EQU   X'8000F611'                             @DMA 03-BPXYIOCC\n                                            55333+***********************************************************************\n                                            55334+* Packet mode or Extended Packet mode data record control data.   @D7C*\n                                            55335+*                                                                     *\n                                            55336+* Returned on master read when no control information is pending.     *\n                                            55337+* In packet mode one byte is returned.  In extended packet mode, four *\n                                            55338+* bytes are returned.  Data follows the control data.                 *\n                                            55339+***********************************************************************\n                         00000000           55340+TIOC_DATA            EQU   X'00'        Data packet                @D3A 03-BPXYIOCC\n                                            55341+***********************************************************************\n                                            55342+* Packet mode control byte - returned on master read()            @D7C*\n                                            55343+*                                                                     *\n                                            55344+* A single control byte is returned in packet mode.  In extended      *\n                                            55345+* packet mode, four bytes are returned, with the non-extended bits    *\n                                            55346+* in the fourth byte.  The equates below can be used against the      *\n                                            55347+* fourth byte (with TM, OI and NI) or against all four bytes (with    *\n                                            55348+* OC, NC, etc.).                                                      *\n                                            55349+***********************************************************************\n                         00000001           55350+TIOCPKT_FLUSHREAD    EQU   X'01'        Input was flushed          @D3A 03-BPXYIOCC\n                         00000002           55351+TIOCPKT_FLUSHWRITE   EQU   X'02'        Output was flushed         @D3A 03-BPXYIOCC\n                         00000004           55352+TIOCPKT_STOP         EQU   X'04'        Stop output                @D3A 03-BPXYIOCC\n                         00000008           55353+TIOCPKT_START        EQU   X'08'        Start output               @D3A 03-BPXYIOCC\n                         00000010           55354+TIOCPKT_NOSTOP       EQU   X'10'        STOP/START not standard    @D3A 03-BPXYIOCC\n                         00000020           55355+TIOCPKT_DOSTOP       EQU   X'20'        STOP/START standard        @D3A 03-BPXYIOCC\n                                            55356+***********************************************************************\n                                            55357+* Extended Packet mode control byte - returned on master read()   @D7C*\n                                            55358+***********************************************************************\n                         00000100           55359+TIOCXPKT_PASSTHRU    EQU   X'00000100'  3270 Passthrough mode     @D7C  03-BPXYIOCC\n                         00000200           55360+TIOCXPKT_NOPASSTHRU  EQU   X'00000200'  Not 3270 Passthrough mode @D7C  03-BPXYIOCC\n                         00000400           55361+TIOCXPKT_ECHO        EQU   X'00000400'  ECHO set on               @D7A  03-BPXYIOCC\n                         00000800           55362+TIOCXPKT_NOECHO      EQU   X'00000800'  ECHO set off              @D7A  03-BPXYIOCC\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   85\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00001000           55363+TIOCXPKT_CHCP        EQU   X'00001000'  Code page change          @D7A  03-BPXYIOCC\n                         00002000           55364+TIOCXPKT_PWBEGIN     EQU   X'00002000'  Begin secure data         @P7A  03-BPXYIOCC\n                         00004000           55365+TIOCXPKT_PWEND       EQU   X'00004000'  End   secure data         @P7A  03-BPXYIOCC\n                                            55366+**********************************************************************\n                                            55367+* Get Pathname                                                    @DOA\n                         00000011           55368+IOCC#GETPATHNAME     EQU   17           Absolute name             @DOA  03-BPXYIOCC\n                         00000013           55369+IOCC#GETPATHNAMEREL  EQU   19           Relative name             @DOA  03-BPXYIOCC\n                                            55370+**********************************************************************\n                                            55371+* UPDTOFTE                                                        @D8C\n                                            55372+**********************************************************************\n                         00000014           55373+IOCC#UPDTOFTE        EQU   20         UPDATE OFTE CMD             @D8A  03-BPXYIOCC\n                                            55374+*                                                                 @DDA\n 00000000                00000000 0000000C  55375+IOCUOFTE             DSECT ,          ARGUMENT BUFFER             @DDA  03-BPXYIOCC\n                                            55376+*                                                                 @DDA\n 00000000                                   55377+IOCUOCMD             DS     F         SUBCMD                      @D8A  03-BPXYIOCC\n                         00000001           55378+IOCUO#READ           EQU    1           READ                      @D8A  03-BPXYIOCC\n                         00000002           55379+IOCUO#WRITE          EQU    2           WRITE                     @D8A  03-BPXYIOCC\n                         00000003           55380+IOCUO#CS             EQU    3           COMPARE & SWAP            @D8A  03-BPXYIOCC\n 00000004                                   55381+IOCUOVALUEBUFF       DS     0F        VALUE TO/FROM STATE AREA    @D8A  03-BPXYIOCC\n 00000004                                   55382+IOCUOVOFFSET         DS     F            OFFSET  (>=0)            @D8A  03-BPXYIOCC\n 00000008                                   55383+IOCUOVLEN            DS     F            LENGTH  (>0)             @D8A  03-BPXYIOCC\n 0000000C                                   55384+IOCUOVDATA           DS     0C           DATA                     @D8A  03-BPXYIOCC\n                                            55385+*                                                                 @DDA\n 00000000                00000000 00000008  55386+IOCUOCSBUFF          DSECT ,          COMPARE VALUE FOR CS SUBCMD @DDA  03-BPXYIOCC\n                                            55387+*                                                                 @DDA\n 00000000                                   55388+IOCUOCSOFFSET        DS     CL4          OFFSET (BYTE BDY)        @D8A  03-BPXYIOCC\n 00000004                                   55389+IOCUOCSLEN           DS     CL4          LENGTH (BYTE BDY)        @D8A  03-BPXYIOCC\n 00000008                                   55390+IOCUOCSDATA          DS     0C           DATA                     @D8A  03-BPXYIOCC\n                                            55391+*\n                         00000015           55392+IOCC#REGFILEINT      EQU   21         REGISTER FILE INTR          @DAA  03-BPXYIOCC\n                         00000016           55393+IOCC#FASTPATH        EQU   22         Set FastPath Ops            @P9A  03-BPXYIOCC\n                                            55394+*\n                         00000017           55395+IOCC#DEVCONSOLE      EQU   23         /dev/console behavior       @DEA  03-BPXYIOCC\n                         00000001           55396+IOCC#DEVCONSUPPRESS  EQU   1          /dev/console - set suppress @DEA  03-BPXYIOCC\n                         00000000           55397+IOCC#DEVCONUNSUPPRS  EQU   0          /dev/console -   unsuppress @DEA  03-BPXYIOCC\n                                            55398+*\n                         0000001B           55399+IOCC#DEVFD           EQU   27         /dev/fd behavior            @DFA  03-BPXYIOCC\n                                            55400+*                     LFS/Cinet Level Ioctls                      @DDA\n                         00000018           55401+IOCC#GETSTACKS       EQU   24         Get Stack Names             @DDA  03-BPXYIOCC\n                         00000019           55402+IOCC#DIRIOCTL        EQU   25         Directed Ioctl              @DDA  03-BPXYIOCC\n                         0000001A           55403+IOCC#GRTRSELECT      EQU   26         Get PreRtr Select           @DDA  03-BPXYIOCC\n                                            55404+*\n                                            55405+***********************************************************************\n                                            55406+*                                                                 @DDA*\n                                            55407+*   Iocc#GetStacks -                                                  *\n                                            55408+*      Get the names of the stacks that are attached to a socket.     *\n                                            55409+*                                                                     *\n                                            55410+***********************************************************************\n                                            55411+*\n 00000000                00000000 00000018  55412+IOCSTACKINFO         DSECT ,                                      @DDA  03-BPXYIOCC\n 00000000                                   55413+IOCSTACKINFOHEADER   DS    CL8                                          03-BPXYIOCC\n 00000008                00000008 00000000  55414+                     ORG   IOCSTACKINFOHEADER                           03-BPXYIOCC\n 00000000                                   55415+IOCSTACKINFOFLAGS    DS    X             Flags                          03-BPXYIOCC\n                         00000080           55416+IOCSTACKCINET        EQU   X'80'         Cinet socket                   03-BPXYIOCC\n 00000001                                   55417+                     DS    CL3                                          03-BPXYIOCC\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   86\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000004                                   55418+IOCSTACKENTRIES      DS    F             Number of Names returned       03-BPXYIOCC\n 00000008                00000008 00000008  55419+                     ORG                                                03-BPXYIOCC\n 00000008                                   55420+IOCSTACKNAMES        DS    CL16          Array of stack names           03-BPXYIOCC\n                                            55421+***********************************************************************\n                                            55422+*   Array of IOCSTACKNAMES                                            *\n                                            55423+***********************************************************************\n                                            55424+*\n 00000000                00000000 00000010  55425+IOCSTACKNAMESD       DSECT ,                                      @DDA  03-BPXYIOCC\n 00000000                                   55426+IOCSTACKNAME         DS    CL8           Stack name                     03-BPXYIOCC\n 00000008                                   55427+IOCSTACKTDINDEX      DS    X             Cinet Stack TdIndex            03-BPXYIOCC\n 00000009                                   55428+IOCSTACKFLAGS        DS    X             Flags                          03-BPXYIOCC\n                         00000080           55429+IOCSTACK_ACTIVE          EQU  X'80'      Active                         03-BPXYIOCC\n                         00000040           55430+IOCSTACK_IPV6_SUPPORT    EQU  X'40'      IPv6 is supported              03-BPXYIOCC\n                         00000020           55431+IOCSTACK_IPV6_INTERFACES EQU  X'20'      IPv6 Home Interfaces           03-BPXYIOCC\n                         00000010           55432+IOCSTACK_IPV4_INTERFACES EQU  X'10'      IPv4 Home Interfaces           03-BPXYIOCC\n 0000000A                                   55433+                     DS    CL6                                          03-BPXYIOCC\n                                            55434+***********************************************************************\n                                            55435+*                                                                 @DDA*\n                                            55436+*   Iocc#DirIoctl  - Directed Ioctl                                   *\n                                            55437+*      Passes the imbedded ioctl to the specified stack.              *\n                                            55438+*                                                                     *\n                                            55439+***********************************************************************\n                                            55440+*\n 00000000                00000000 00000011  55441+IOCDIRIOCTL          DSECT ,                                      @DDA  03-BPXYIOCC\n 00000000                                   55442+IOCDIRHDR            DS    CL16                                         03-BPXYIOCC\n 00000010                00000010 00000000  55443+                     ORG   IOCDIRHDR                                    03-BPXYIOCC\n 00000000                                   55444+IOCDIRNAME           DS    CL8    Target Stack Name                     03-BPXYIOCC\n 00000008                                   55445+IOCDIRCMD            DS    XL4    Imbedded ioctl Command                03-BPXYIOCC\n 0000000C                                   55446+IOCDIRARGLEN         DS    F      Imbedded ioctl Argument Length        03-BPXYIOCC\n 00000010                00000010 00000010  55447+                     ORG                                                03-BPXYIOCC\n 00000010                                   55448+IOCDIRARG            DS    C      Imbedded ioctl Argument               03-BPXYIOCC\n                                            55449+***********************************************************************\n                                            55450+*                                                                 @DDA*\n                                            55451+*   Iocc#GRtrSelect - Get Cinet PreRouter's selected stack for each   *\n                                            55452+*          of an array of specified destination IP addresses.         *\n                                            55453+*                                                                     *\n                                            55454+***********************************************************************\n                                            55455+*\n 00000000                00000000 00000018  55456+IOCRTRSELECT         DSECT ,                                      @DDA  03-BPXYIOCC\n 00000000                                   55457+IOCRTRIPADDR         DS    CL16     Input IP Address                    03-BPXYIOCC\n 00000010                                   55458+IOCRTRSTACK          DS    CL8      Output Selected Stack Name          03-BPXYIOCC\n 00000018                00000018 00000010  55459+                     ORG   IOCRTRSTACK                                  03-BPXYIOCC\n 00000010                                   55460+IOCRTRERRTEST        DS    CL1      Error if = 0                        03-BPXYIOCC\n 00000011                                   55461+                     DS    CL1                                          03-BPXYIOCC\n 00000012                                   55462+IOCRTRERRNO          DS    XL2      Error RC (Errno)                    03-BPXYIOCC\n 00000014                                   55463+IOCRTRRSN            DS    XL4      Error Rsn (ErrnoJr)                 03-BPXYIOCC\n 00000018                00000018 00000018  55464+                     ORG                                                03-BPXYIOCC\n                         00000000           55465+IOCRTRERROR          EQU   X'00'  IocRtrErrTest value to test for error 03-BPXYIOCC\n                                            55466+***********************************************************************\n                                            55467+*                                                                 @DDA*\n                                            55468+*   SiocGIfNameIndex - Get Interface Name/Index Table                 *\n                                            55469+*                                                                     *\n                                            55470+***********************************************************************\n                                            55471+*\n 00000000                00000000 00000018  55472+IF_NAMEINDEXENTRY    DSECT ,                                      @DDA  03-BPXYIOCC\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   87\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000000                                   55473+IF_NIINDEX           DS    F         Interface Index                    03-BPXYIOCC\n 00000004                00000004 00000000  55474+                     ORG   IF_NIINDEX                                   03-BPXYIOCC\n 00000000                                   55475+IF_NITDINDEX         DS    H         CInet Td Index                     03-BPXYIOCC\n 00000002                                   55476+IF_NIIFINDEX         DS    H         Stack Interface Index              03-BPXYIOCC\n 00000004                00000004 00000004  55477+                     ORG                                                03-BPXYIOCC\n 00000004                                   55478+IF_NINAME            DS    CL16      Interface Name, blank padded       03-BPXYIOCC\n 00000014                                   55479+IF_NIEXT             DS    CL4                                          03-BPXYIOCC\n 00000018                00000018 00000014  55480+                     ORG   IF_NIEXT                                     03-BPXYIOCC\n 00000014                                   55481+IF_NINAMETERM        DS    CL1       Null for C for Name len=16         03-BPXYIOCC\n 00000015                                   55482+IF_NIFLAGS           DS    X         Name Index Flags             @PKA  03-BPXYIOCC\n                         00000080           55483+IF_NIOSM             EQU   X'80'     1 = OSM Interface            @PKA  03-BPXYIOCC\n 00000016                                   55484+                     DS    CL2       Reserved                     @PKC  03-BPXYIOCC\n 00000018                00000018 00000018  55485+                     ORG                                                03-BPXYIOCC\n                         00000018           55486+IF_NAMEINDEXENTRYL   EQU   *-IF_NAMEINDEXENTRY                    @DDA  03-BPXYIOCC\n 00000000                00000000 00000020  55487+IF_NAMEINDEX         DSECT ,                                      @DDA  03-BPXYIOCC\n 00000000                                   55488+IF_NIHEADER          DS    2F                                           03-BPXYIOCC\n 00000008                00000008 00000000  55489+                     ORG   IF_NIHEADER                                  03-BPXYIOCC\n 00000000                                   55490+IF_NITOTALIF         DS    F      Total Active Interfaces on System     03-BPXYIOCC\n 00000004                                   55491+IF_NIENTRIES         DS    F      Number of entries returned            03-BPXYIOCC\n 00000008                00000008 00000008  55492+                     ORG                                                03-BPXYIOCC\n 00000008                                   55493+IF_NITABLE           DS    CL(IF_NAMEINDEXENTRYL)                       03-BPXYIOCC\n                                            55494+***********************************************************************\n                                            55495+*                                                                @DDA *\n                                            55496+*   SiocGSockPoeAttrs - Socket Port of Entry Attributes               *\n                                            55497+*                                                                     *\n                                            55498+***********************************************************************\n                                            55499+*\n 00000000                00000000 00000060  55500+IOCPOEATTR           DSECT ,                                      @DDA  03-BPXYIOCC\n 00000000                                   55501+IOCPOEPEERIPADDR     DS    CL16          Peer IP Address                03-BPXYIOCC\n 00000010                00000010 00000000  55502+                     ORG   IOCPOEPEERIPADDR                             03-BPXYIOCC\n 00000000                                   55503+IOCPOEPEERIPV6PREFIX DS    CL12                                         03-BPXYIOCC\n 0000000C                                   55504+IOCPOEPEERIPV4ADDR   DS    F                                            03-BPXYIOCC\n 00000010                00000010 00000010  55505+                     ORG                                                03-BPXYIOCC\n 00000010                                   55506+IOCPOETERMID         DS    CL8           TERMINAL Profile Name          03-BPXYIOCC\n 00000018                                   55507+IOCPOELABEL          DS    CL8           Security Label                 03-BPXYIOCC\n 00000020                                   55508+IOCPOEPROFILE        DS    CL64          SERVAUTH Resource Name         03-BPXYIOCC\n                                            55509+***********************************************************************\n                                            55510+*                                                                @DKA *\n                                            55511+*   SiocGSockMLSINFO  - Socket Multilevel Security Information        *\n                                            55512+*     IocPoeProfile returns full resource name                        *\n                                            55513+*     IocMlsProfile returns actual profile name in use                *\n                                            55514+*                                                                     *\n                                            55515+***********************************************************************\n                                            55516+*\n 00000000                00000000 00000080  55517+IOCMLSINFO           DSECT ,                                      @DKA  03-BPXYIOCC\n 00000000                                   55518+IOCMLSMVSNAME        DS    CL8           MVS System Name          @DKA  03-BPXYIOCC\n 00000008                                   55519+IOCMLSSTKNAME        DS    CL8           Stack Job Name           @DKA  03-BPXYIOCC\n 00000010                                   55520+IOCMLSNAZNAME        DS    CL8           NetAccess Zone Name      @DKA  03-BPXYIOCC\n 00000018                                   55521+IOCMLSUSRNAME        DS    CL8           Caller UserID            @DKA  03-BPXYIOCC\n 00000020                                   55522+IOCMLSUSRLBL         DS    CL8           Caller Security Label    @DKA  03-BPXYIOCC\n 00000028                                   55523+IOCMLSSTKLBL         DS    CL8           Stack  Security Label    @DKA  03-BPXYIOCC\n 00000030                                   55524+IOCMLSNAZLBL         DS    CL8           Zone   Security Label    @DKA  03-BPXYIOCC\n 00000038                                   55525+IOCMLSCONLBL         DS    CL8           Connct Security Label    @DKA  03-BPXYIOCC\n 00000040                                   55526+IOCMLSPROFILE        DS    CL64          SERVAUTH Profile Name    @DKA  03-BPXYIOCC\n                                            55527+*---------------------------------------------------------------------*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   88\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           55528+*     Multicast Source Filter Structures from RFC 3678                *\n                                            55529+*                                                                     *\n                                            55530+*   *** These require the inclusion of BPXYSOCK ***                   *\n                                            55531+*----------------------------------------------------------------- @DMA\n                                            55532+*                                                                  @DMA\n                                            55533+***********************************************************************\n                                            55534+* SIOCGRTTABLE - Obtain route information. Returns information for    *\n                                            55535+*                IPv4 routes from the TCP/IP stack's main route table.*\n                                            55536+*                                                                     *\n                                            55537+*                The Route entry structures returned can either be    *\n                                            55538+*                Version 1, Version 2, or Version 3 structures.       *\n                                            55539+*                  Version 1                                          *\n                                            55540+*                    - Field IOCN_IPADDRRTMSGHOMEIF contains an IP    *\n                                            55541+*                      address                                        *\n                                            55542+*                  Version 2                                          *\n                                            55543+*                    - IOCN_RTMSGTYPE structure is the same size      *\n                                            55544+*                      as Version 1                                   *\n                                            55545+*                    - Field IOCN_IPADDRRTMSGHOMEIF contains an       *\n                                            55546+*                      interface index.                               *\n                                            55547+*                  Version 3                                          *\n                                            55548+*                    - IOCN_RTMSGTYPE structure is larger than the    *\n                                            55549+*                      Version 1 or 2 size                            *\n                                            55550+*                    - Field IOCN_IPADDRRTMSGHOMEIF contains an       *\n                                            55551+*                      interface index                                *\n                                            55552+*                    - New MTU field added                            *\n                                            55553+*                The RTEV3 macro variable controls whether the        *\n                                            55554+*                Version 3 Route entry structure is generated by      *\n                                            55555+*                this macro.  By default, the macro generates the     *\n                                            55556+*                Version 3 Route entry structure.                     *\n                                            55557+*                                                                     *\n                                            55558+*                When requesting Version 2 or Version 3 output in a   *\n                                            55559+*                CINET environment, invoking applications must either *\n                                            55560+*                have stack affinity or use the IOCC#DIRIOCTL to      *\n                                            55561+*                invoke this ioctl.  Otherwise, the output from the   *\n                                            55562+*                first stack will be in the requested version format  *\n                                            55563+*                but, the output from subsequent stacks will be in    *\n                                            55564+*                Version 1 format.                                    *\n                                            55565+*                                                                     *\n                                            55566+* Input     - Input to the ioctl is a buffer length and a buffer      *\n                                            55567+*             address.  By default, Version 1 Route entry structures  *\n                                            55568+*             are returned.                                           *\n                                            55569+*                                                                     *\n                                            55570+*             To obtain Version 2 or 3 Route entry output, an         *\n                                            55571+*             IOCN_RTMSGHDRTYPE structure must be setup at the        *\n                                            55572+*             beginning of the output buffer, before invoking the     *\n                                            55573+*             ioctl.  The following fields must be set:               *\n                                            55574+*               - IOCN_RTMSGHDRVER set to Version 2 or 3              *\n                                            55575+*               - IOCN_RTMSGHDREYEID set to the correct eyecatcher    *\n                                            55576+*                 value.                                              *\n                                            55577+*                                                                     *\n                                            55578+*                                                                     *\n                                            55579+* Output    - Return_value = 0                                        *\n                                            55580+*                  - IOCN_RTMSGHDRTYPE structure returned with        *\n                                            55581+*                    field IOCN_RTMSGHDRNUMENT set to the number      *\n                                            55582+*                    of Route entry structures returned.  In the      *\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   89\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           55583+*                    output buffer, the header is followed by the     *\n                                            55584+*                    Route entry structures.                          *\n                                            55585+*                  - The IOCN_RTMSGHDRVER and IOCN_RTMSGHDRSUBVER     *\n                                            55586+*                    fields indicate whether Version 1, 2, or 3       *\n                                            55587+*                    of the Route entry structures was returned.      *\n                                            55588+*                  - IOCN_RTMSGHDRNUMENT - number of either Version   *\n                                            55589+*                    1, 2, or 3 Route entry structures returned.      *\n                                            55590+*           - Return_value = -1                                       *\n                                            55591+*                  - Return_code = EBADMSG                            *\n                                            55592+*                    This means that the output buffer is not large   *\n                                            55593+*                    enough for one IOCN_RTMSGHDRTYPE structure       *\n                                            55594+*                    and one Route entry structure.                   *\n                                            55595+*                  - Return_code = ERANGE                             *\n                                            55596+*                    This means that the output buffer is not large   *\n                                            55597+*                    enough for all the Route entry structures which  *\n                                            55598+*                    can be returned. In this case, only the          *\n                                            55599+*                    IOCN_RTMSGHDRTYPE structure will be returned.    *\n                                            55600+*                    Field IOCN_RTMSGHDRNUMENT in this header will    *\n                                            55601+*                    contain the number of Route entry structures     *\n                                            55602+*                    which can be returned.  Field IOCN_RTMSGHDRVER   *\n                                            55603+*                    will indicate which version of the Route entry   *\n                                            55604+*                    structures will be returned.                     *\n                                            55605+*                                                                @PIA *\n                                            55606+***********************************************************************\n                                            55607+*                                                                @PIA\n                                            55608+* Header structure - IOCN_RTMSGHDRTYPE                           @PIA\n                                            55609+*                                                                @PIA\n 00000000                00000000 00000048  55610+IOCN_RTMSGHDRTYPE    DSECT ,      Route header                   @PIA   03-BPXYIOCC\n                                            55611+*\n 00000000                                   55612+IOCN_RTMSGHDRLEN     DS     H     Length of header               @PIA   03-BPXYIOCC\n 00000002                                   55613+IOCN_RTMSGHDRVER     DS     FL1   Version of Route entry structures     03-BPXYIOCC\n                                            55614+*                                 returned                       @PIA\n 00000003                                   55615+                     DS     CL1   Reserved                       @PIA   03-BPXYIOCC\n 00000004                                   55616+IOCN_RTMSGHDREYEID   DS     CL4   Eye catcher 'Rmsg'             @PIA   03-BPXYIOCC\n                         D994A287           55617+IOCN_RTMSGHDREYEC    EQU    C'Rmsg'  Eye catcher constant        @PIA   03-BPXYIOCC\n 00000008                                   55618+IOCN_RTMSGHDRSUBVER  DS     FL1   Version of Route entry structures     03-BPXYIOCC\n                                            55619+*                                 returned                       @PIA\n 00000009                                   55620+                     DS     CL3   Reserved                       @PIA   03-BPXYIOCC\n 0000000C                                   55621+IOCN_RTMSGHDRIOCTLNUM  DS   F     Set to x'10' to indicate the          03-BPXYIOCC\n                                            55622+*                                 SIOCGRTTABLE ioctl             @PIA\n 00000010                                   55623+IOCN_RTMSGHDRNUMENT  DS     F     Output - number of Route entries      03-BPXYIOCC\n                                            55624+*                                 returned                       @PIA\n 00000014                                   55625+                     DS     CL52  Reserved                       @PIA   03-BPXYIOCC\n                         00000048           55626+IOCN_RTMSGHDR#LEN    EQU    *-IOCN_RTMSGHDRTYPE  Length of header@PIA   03-BPXYIOCC\n                                            55627+*\n                                            55628+* Version constants for fields IOCN_RTMSGHDRVER  and\n                                            55629+* IOCN_RTMSGHDRSUBVER                                            @PIA\n                                            55630+*\n                         00000001           55631+IOCN_RTMSGTYPEV1     EQU    1       Version 1                    @PIA   03-BPXYIOCC\n                         00000002           55632+IOCN_RTMSGTYPEV2     EQU    2       Version 2                    @PIA   03-BPXYIOCC\n                         00000003           55633+IOCN_RTMSGTYPEV3     EQU    3       Version 3                    @PIA   03-BPXYIOCC\n                                            55634+*                                                                @PIA\n                                            55635+* Version 1 and Version 2 Route entry structure - IOCN_RTMSGTYPE @PIA\n                                            55636+*                                                                @PIA\n 00000000                00000000 00000030  55637+IOCN_RTMSGTYPE       DSECT ,      Route entry structure          @PIA   03-BPXYIOCC\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   90\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           55638+*\n 00000000                                   55639+IOCN_IPADDRRTMSGDEST DS     CL4   Destination IP address         @PIA   03-BPXYIOCC\n 00000004                                   55640+IOCN_IPADDRRTMSGMASK DS     CL4   Subnet mask                    @PIA   03-BPXYIOCC\n 00000008                                   55641+IOCN_IPADDRRTMSGGATE DS     CL4   Gateway IP address             @PIA   03-BPXYIOCC\n 0000000C                                   55642+IOCN_IPADDRRTMSGHOMEIF  DS  F     Version 1 = IP address         @PIA   03-BPXYIOCC\n                                            55643+*                                 Other versions = interface\n                                            55644+*                                 index                          @PIA\n 00000010                                   55645+IOCN_RTMSGMETRICTYPE DS     F     Metric type is always 1, meaning      03-BPXYIOCC\n                                            55646+*                                 metric value is in hop counts  @PIA\n 00000014                                   55647+IOCN_RTMSGMETRIC     DS     F     Metric value in hop counts     @PIA   03-BPXYIOCC\n 00000018                                   55648+                     DS     CL3   Reserved                       @PIA   03-BPXYIOCC\n 0000001B                                   55649+IOCN_RTATTRRTMSG     DS     XL1   Route flags                    @PIA   03-BPXYIOCC\n                         00000080           55650+IOCN_BRTATTRLOOPBACK EQU    X'80'   1 = Loopback interface       @PIA   03-BPXYIOCC\n                         00000040           55651+IOCN_BRTATTRLOCAL    EQU    X'40'   1 = Local/Home IP address    @PIA   03-BPXYIOCC\n                         00000010           55652+IOCN_BRTATTRDYNBUILT EQU    X'10'   1 = Dynamically built, e.g.         03-BPXYIOCC\n                                            55653+*                                       by ICMP redirect         @PIA\n                         00000004           55654+IOCN_BRTATTRHOST     EQU    X'04'   1 = Host route, 0 = Network         03-BPXYIOCC\n                                            55655+*                                   route                        @PIA\n                         00000002           55656+IOCN_BRTATTRGATEWAY  EQU    X'02'   1 = Gateway                  @PIA   03-BPXYIOCC\n                         00000001           55657+IOCN_BRTATTRRTUP     EQU    X'01'   1 = Route is active, 0 = Route      03-BPXYIOCC\n                                            55658+*                                   is inactive                  @PIA\n 0000001C                                   55659+IOCN_RTMSGRTETYPE    DS     XL1   Route type                     @PIA   03-BPXYIOCC\n                         00000001           55660+IOCN_RTOTHER         EQU    1       Other (default, direct)      @PIA   03-BPXYIOCC\n                         00000002           55661+IOCN_RTLOCAL         EQU    2       Static (configured)          @PIA   03-BPXYIOCC\n                         00000004           55662+IOCN_RTICMP          EQU    4       ICMP                         @PIA   03-BPXYIOCC\n                         00000008           55663+IOCN_RTRIP           EQU    8       RIP                          @PIA   03-BPXYIOCC\n                         0000000D           55664+IOCN_RTOSPF          EQU    13      OSPF                         @PIA   03-BPXYIOCC\n                         00000082           55665+IOCN_RTREPSTAT       EQU    130     Replaceable static           @PIA   03-BPXYIOCC\n 0000001D                                   55666+                     DS     CL3   Reserved                       @PIA   03-BPXYIOCC\n                         00000020           55667+IOCN_RTMSGV1#LEN     EQU    *-IOCN_RTMSGTYPE V1 Route entry len  @PIA   03-BPXYIOCC\n                         00000020           55668+IOCN_RTMSGV2#LEN     EQU    *-IOCN_RTMSGTYPE V2 Route entry len  @PIA   03-BPXYIOCC\n                                            55669+*                                                                @PIA\n                                            55670+* Version 3 Route entry structure - additional field             @PIA\n                                            55671+*                                                                @PIA\n 00000020                                   55672+IOCN_RTMSGMTU        DS     H     Route's MTU value              @PIA   03-BPXYIOCC\n 00000022                                   55673+                     DS     H     Reserved                       @PIA   03-BPXYIOCC\n 00000024                                   55674+                     DS     F     Reserved                       @PIA   03-BPXYIOCC\n 00000028                                   55675+                     DS     F     Reserved                       @PIA   03-BPXYIOCC\n 0000002C                                   55676+                     DS     F     Reserved                       @PIA   03-BPXYIOCC\n                         00000030           55677+IOCN_RTMSGV3#LEN     EQU    *-IOCN_RTMSGTYPE  V3 Route entry len @PIA   03-BPXYIOCC\n                                            55678+*\n                                            55679+***********************************************************************\n                                            55680+* IOCN_IFREQ                                                      @DQA*\n                                            55681+*  Mapping that defines the network interface block that is used      *\n                                            55682+*  on ioctls that transfer network interface information              *\n                                            55683+*                                                                     *\n                                            55684+*  This is equivalent to the C ifreq structure from in.h              *\n                                            55685+*  This is the ASM version of the PL/X IOCN_IfType from BPXZIOCN.     *\n                                            55686+*                                                                     *\n                                            55687+***********************************************************************\n                                            55688+*\n 00000000                00000000 00000020  55689+IOCN_IFREQ DSECT         Mapping for network interface information      03-BPXYIOCC\n 00000000                                   55690+IOCN_IFTYPE   DS 0F      Structure Name from BPXZIOCN.                  03-BPXYIOCC\n 00000000                                   55691+IOCN_IFNAME   DS CL16     Interface name.                               03-BPXYIOCC\n 00000010                                   55692+IOCN_IFUNION  DS 0CL16    Union of fields:                              03-BPXYIOCC\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   91\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000010                00000010 00000010  55693+         ORG   IOCN_IFUNION                                             03-BPXYIOCC\n 00000010                                   55694+IOCN_SADDRIF     DS CL16  The address of the interface                  03-BPXYIOCC\n 00000020                00000020 00000010  55695+         ORG   IOCN_IFUNION                                             03-BPXYIOCC\n 00000010                                   55696+IOCN_SADDRIFDEST DS CL16  Destination address in a point to point link  03-BPXYIOCC\n 00000020                00000020 00000010  55697+         ORG   IOCN_IFUNION                                             03-BPXYIOCC\n 00000010                                   55698+IOCN_SADDRIFBROADCAST DS CL16 Address for Broadcasting                  03-BPXYIOCC\n 00000020                00000020 00000010  55699+         ORG   IOCN_IFUNION                                             03-BPXYIOCC\n 00000010                                   55700+IOCN_IFMETRIC    DS F     Interface metric                              03-BPXYIOCC\n 00000014                00000014 00000010  55701+         ORG   IOCN_IFUNION                                             03-BPXYIOCC\n 00000010                                   55702+IOCN_PIFDATA     DS A     Pointer to an area set by TCPIP               03-BPXYIOCC\n 00000014                00000014 00000010  55703+         ORG   IOCN_IFUNION                                             03-BPXYIOCC\n 00000010                                   55704+IOCN_MTUSIZE     DS F     MTU size.  Used with SIOCGIFMTU.              03-BPXYIOCC\n 00000014                00000014 00000010  55705+         ORG   IOCN_IFUNION                                             03-BPXYIOCC\n 00000010                                   55706+IOCN_IFATTRIF    DS 0BL2  Flag area.                                    03-BPXYIOCC\n                                            55707+*\n 00000010                                   55708+IOCN_IFATTRBYTE1    DS 0CL1                                             03-BPXYIOCC\n                         00000020           55709+IOCN_BIFATTRSNAP        EQU X'20'                                       03-BPXYIOCC\n                         00000010           55710+IOCN_BIFATTRTOKBRIDGE   EQU X'10'                                       03-BPXYIOCC\n                         00000004           55711+IOCN_BIFATTRCHECKSUM    EQU X'04'                                       03-BPXYIOCC\n                         00000002           55712+IOCN_BIFATTRALLMULTI    EQU X'02'                                       03-BPXYIOCC\n                         00000001           55713+IOCN_BIFATTRALLPACKSUPT EQU X'01'                                       03-BPXYIOCC\n 00000010                00000010 00000011  55714+         ORG   IOCN_IFATTRBYTE1+1                                       03-BPXYIOCC\n 00000011                                   55715+IOCN_IFATTRBYTE2    DS 0CL1                                             03-BPXYIOCC\n                         00000080           55716+IOCN_BIFATTRARPNOTSUPT  EQU X'80'                                       03-BPXYIOCC\n                         00000040           55717+IOCN_BIFATTRRESALLOC    EQU X'40'                                       03-BPXYIOCC\n                         00000020           55718+IOCN_BIFATTRNOTRAILER   EQU X'20'                                       03-BPXYIOCC\n                         00000010           55719+IOCN_BIFATTRPTTOPT      EQU X'10'                                       03-BPXYIOCC\n                         00000008           55720+IOCN_BIFATTRLOOPBACK    EQU X'08'                                       03-BPXYIOCC\n                         00000004           55721+IOCN_BIFATTRDEBUG       EQU X'04'                                       03-BPXYIOCC\n                         00000002           55722+IOCN_BIFATTRBROADCAST   EQU X'02'                                       03-BPXYIOCC\n                         00000001           55723+IOCN_BIFATTRUP          EQU X'01'                                       03-BPXYIOCC\n                                            55724+*\n 00000011                00000011 00000020  55725+         ORG   IOCN_IFUNION+16                                          03-BPXYIOCC\n 00000020                                   55726+IOCN_IFEND       DS   0C  End of structure                              03-BPXYIOCC\n                         00000020           55727+IOCN_IFREQ_LEN   EQU *-IOCN_IFREQ Length of Structure                   03-BPXYIOCC\n                         00000010           55728+IOCN_#IFNAMESIZE EQU 16   Size of the name field                        03-BPXYIOCC\n                                            55729+*\n                                            55730+** BPXYIOCC End\n-\n                                            55732+* SMF RECORDS\n 00000000                00000000 000001B4  55733+SMF14    DSECT                                                          02-$$GLOBAL\n                                            55734+*        IFASMFR 14\n                                            55736+*%IFABGN1: ;\n                                            55737+* /*                                                                 */\n                                            55738+* /* METHOD OF ACCESS                                                */\n                                            55739+* /*  PL/S - USER DEFINES MACRO VARIABLE IFARXX WHERE XX=RECORD NUM  */\n                                            55740+* /*         DECLARE SMFXXPTR PTR(31) OR RESPECIFY FOR BASE          */\n                                            55741+* /*         INCLUDE MACRO FROM LIBRARY                              */\n                                            55742+* /*          EXAMPLE %IFAR08 = 'YES',           NOTE. THE COMMA REP-*/\n                                            55743+* /*                  DCL SMF08PTR PTR(31),      RESENTS A SEMI-COLON*/\n                                            55744+* /*                  %INCLUDE SYSLIB(IFASMFR),  BUT ISN'T TO AVIOD  */\n                                            55745+* /*                                             A DIAGNOSTIC.       */\n                                            55746+* /*                                                                 */\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   92\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           55747+* /*                                                                 */\n                                            55748+* /*         THIS MACRO PROCESSES RECORDS IN THE RANGE 00-06. IT     */\n                                            55749+* /*         ACTS AS A ROUTER TO OTHER MACROS TO PROCESS OTHER       */\n                                            55750+* /*         RECORDS AS FOLLOWS:                                     */\n                                            55751+* /*                                                                 */\n                                            55752+* /*             MACRO        RECORDS                                */\n                                            55753+* /*            ********      *******                                */\n                                            55754+* /*            IFASMFR1      07-19                                  */\n                                            55755+* /*            IFASMFR2      20-27                                  */\n                                            55756+* /*            IFASMFR3      28-36                                  */\n                                            55757+* /*            IFASMFR4      37-46                                  */\n                                            55758+* /*            IFASMFR5      47-54                                  */\n                                            55759+* /*            IFASMFR6      55-69                                  */\n                                            55760+* /*            IFASMFR9      80-84                              @07C*/\n                                            55761+* /*            IFASMFRA      85-103                             @07C*/\n                                            55762+* /*            IFASMFRB      104-113                                */\n                                            55763+* /*            IFASMFRC      114-123                                */\n                                            55764+* /*            IFASMFRD      124-127                                */\n                                            55765+*%GOTO IFABGN2;   /*\n                                            55766+*  THIS IS AN SMF MACRO WHICH CONTROLS THE BUILDING OF SMF RECORDS. THE\n                                            55767+*  REQUIRED FORMAT IS\n                                            55768+*\n                                            55769+*        IFASMFR  &RECTYPE\n                                            55770+*\n                                            55771+*  NOTE: VALUES FOR &RECTYPE MUST BE ENCLOSED IN PARENS(UNLESS ONLY 1).\n                                            55772+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   93\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           55776+*\n                                            55777+* THIS RECORD WRITTEN WHEN A USER'S DATA SET IS CLOSED OR PROCESSED\n                                            55778+* BY EOV. LENGTH IS VARIABLE, MINIMUM OF 292 BYTES.               @02C\n                                            55779+* RECORD TYPE: 14-DATA SET OPENED FOR INPUT/RDBACK\n                                            55780+*              15-DATA SET OPENED FOR OUTPUT/INOUT/OUTIN/UPDAT\n                                            55781+*\n 00000000                                   55782+         DS    0F        ALIGN TO FULL WORD BOUNDARY                    05-IFGSMF14\n                         00000000           55783+SMF14HDR EQU   *         HEADER SEGMENT FOR RECORD TYPE 14/15           05-IFGSMF14\n 00000000                                   55784+SMF14LEN DS    BL2'0'    RECORD LENGTH                                  05-IFGSMF14\n 00000002                                   55785+SMF14SEG DS    BL2'0'    SEGMENT DESCRIPTOR                             05-IFGSMF14\n 00000004                                   55786+SMF14FLG DS    BL1'0'    HEADER FLAG BYTE                               05-IFGSMF14\n 00000005                                   55787+SMF14RTY DS    BL1'0'    RECORD TYPE 14                                 05-IFGSMF14\n 00000006                                   55788+SMF14TME DS    BL4'0'    TIME OF DAY OF EOV OR CLOSE, USING TIME        05-IFGSMF14\n                                            55789+*                        MACRO W/ BIN INTVL(HUNDREDTHS OF A SECOND)\n 0000000A                                   55790+SMF14DTE DS    PL4'0000' DATE OF EOV OR CLOSE,PACKED DECIMAL (00YYDDDF) 05-IFGSMF14\n 0000000E                                   55791+SMF14SID DS    CL4' '    SYSTEM ID                                      05-IFGSMF14\n 00000012                                   55792+SMF14JBN DS    CL8' '    JOB NAME                                       05-IFGSMF14\n 0000001A                                   55793+SMF14RST DS    BL4'0'    READER START TIME                              05-IFGSMF14\n 0000001E                                   55794+SMF14RSD DS    PL4'0000' READER START DATE, PK/DEC FORM: 00YYDDDF       05-IFGSMF14\n 00000022                                   55795+SMF14UID DS    CL8' '    USERID                                         05-IFGSMF14\n 0000002A                                   55796+SMF14RIN DS    BL2'0'    RECORD INDICATORS:                             05-IFGSMF14\n                         00000080           55797+SMF14RV0 EQU   128       RESERVED                                       05-IFGSMF14\n                         00000040           55798+SMF14EOV EQU   64        RECORD WRITTEN BY EOV                          05-IFGSMF14\n                         00000020           55799+SMF14DAD EQU   32        DASD DEVICE                                    05-IFGSMF14\n                         00000010           55800+SMF14TDS EQU   16        TEMPORARY DATA SET                             05-IFGSMF14\n                         00000008           55801+SMF14DDA EQU   8         DCBDSORG = DA                                  05-IFGSMF14\n                         00000004           55802+SMF14IS  EQU   4         DCBDSORG = IS                                  05-IFGSMF14\n                         00000002           55803+SMF14JIS EQU   2         JFCDSORG = IS                                  05-IFGSMF14\n                         00000001           55804+SMF14VIO EQU   1         VIO DATA SET ACCESS                            05-IFGSMF14\n                         00000080           55805+SMF14IPD EQU   X'80'     PDSE DATA SET                                  05-IFGSMF14\n                         00000040           55806+SMF14TRC EQU   X'40'     QSAM TRUNC MACRO HAS BEEN ISSUED FOR A PDSE    05-IFGSMF14\n                         00000020           55807+SMF14NSG EQU   X'20'     NULL SEGMENT ENCOUNTERED IN DATA SET           05-IFGSMF14\n                         00000010           55808+SMF14STR EQU   X'10'     EXTENDED FORMAT SEQUENTIAL DATA SET      @P1C  05-IFGSMF14\n                         00000008           55809+SMF14HBT EQU   X'08'     HIPERBATCH SECTION PRESENT               @L1A  05-IFGSMF14\n                         00000004           55810+SMF14XSG EQU   X'04'     EXTENDED INFORMATION SEGMENT PRESENT     @L1A  05-IFGSMF14\n                         00000002           55811+SMF14TCL EQU   X'02'     TASK TERMINATION CLOSED DCB              @0CC  05-IFGSMF14\n                         00000001           55812+SMF14ABD EQU   X'01'     TASK IS ABENDING                         @0CA  05-IFGSMF14\n 0000002C                                   55813+SMF14SDC DS    BL1'0'    SIZE OF DCB/DEB SEGMENT                        05-IFGSMF14\n 0000002D                                   55814+SMF14NUC DS    BL1'0'    NO. UCB SEGMENTS                               05-IFGSMF14\n 0000002E                                   55815+SMF14SUC DS    BL1'0'    SIZE OF EACH UCB SEGMENT                       05-IFGSMF14\n 0000002F                                   55816+SMF14SET DS    BL1'0'    SIZE OF ISAM EXTENSION SEGMENT                 05-IFGSMF14\n 00000030                                   55817+SMF14OPE DS    BL4'0'    TIME OF OPEN USING TIME BIN INTV.              05-IFGSMF14\n                         00000034           55818+SMFTIOT  EQU   *         TIOT SEGMENT (FROM DD ENTRY)                   05-IFGSMF14\n 00000034                                   55819+SMFTIOE1 DS    BL1'0'    TIOELNGH                                       05-IFGSMF14\n 00000035                                   55820+SMFTIOE2 DS    BL1'0'    TIOESSTA                                       05-IFGSMF14\n 00000036                                   55821+SMFTIOE3 DS    BL1'0'    TIOEWTCT                                       05-IFGSMF14\n 00000037                                   55822+SMFTIOE4 DS    BL1'0'    TIOELINK                                       05-IFGSMF14\n 00000038                                   55823+SMFTIOE5 DS    CL8' '    TIOEDDNM                                       05-IFGSMF14\n 00000040                                   55824+SMFTIOE6 DS    BL3'0'    TIOEJFCB                                       05-IFGSMF14\n 00000043                                   55825+SMFTIOE7 DS    BL1'0'    TIOESTTC                                       05-IFGSMF14\n                                            55826+*\n 00000044                                   55827+SMFJFCB1 DS    XL176'0'  JFCB SEGMENT (ENTIRE JFCB)                     05-IFGSMF14\n                                            55828+*\n                         000000F4           55829+SMFDCBDE EQU   *         DCB/DEB SEGMENT (TAPE AND DASD)                05-IFGSMF14\n 000000F4                                   55830+SMFDCBOR DS    BL2'0'    DCBDSORG                                       05-IFGSMF14\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   94\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000000F6                                   55831+SMFDCBRF DS    BL1'0'    DCBRECFM                                       05-IFGSMF14\n 000000F7                                   55832+SMFDCBMF DS    BL2'0'    DCBMACRF                                       05-IFGSMF14\n 000000F9                                   55833+SMFDCBFL DS    BL1'0'    DCBOFLGS                                       05-IFGSMF14\n 000000FA                                   55834+SMFDCBOP DS    BL1'0'    DCBOPTCD                                       05-IFGSMF14\n 000000FB                                   55835+SMF14RV2 DS    BL1'0'    RESERVED                                       05-IFGSMF14\n 000000FC                                   55836+SMFDEBFL DS    BL1'0'    DEBOFLGS                                       05-IFGSMF14\n 000000FD                                   55837+SMFDEBOP DS    BL1'0'    DEBOPATB                                       05-IFGSMF14\n 000000FE                                   55838+SMFDEBVL DS    BL2'0'    DEBVOLSQ                                       05-IFGSMF14\n                         00000100           55839+SMFTDDEX EQU   *         TAPE DCB/DEB EXTENSION                         05-IFGSMF14\n 00000100                                   55840+SMFDCBBL DS    BL4'0'    DCBBLKCT                                       05-IFGSMF14\n 00000104                                   55841+SMFDSSNO DS    BL6'0'    DATA SET SERIAL NUMBER                         05-IFGSMF14\n 0000010A                                   55842+SMF14RV3 DS    BL1'0'    RESERVED                                  @L7A 05-IFGSMF14\n 0000010B                                   55843+SMF14TDA DS    BL1'0'    Tape data set authorization flags         @L7A 05-IFGSMF14\n                         00000080           55844+SMF148WN EQU   X'80'     RACF RC8 chg'd to RC0 (TAPEAUTHRC8=WARN)  @L7A 05-IFGSMF14\n 0000010C                                   55845+SMF14OPD DS    PL4'0000' DATE OF OPEN, PACKED DECIMAL (00YYDDF)    @02M 05-IFGSMF14\n 00000110                00000110 00000100  55846+         ORG   SMFTDDEX  DASD DCB/DEB EXTENSION                    @LDA 05-IFGSMF14\n 00000100                                   55847+SMF14NTU DS    BL4'0'    If SMF14STR=0, relative track & record    @P1C 05-IFGSMF14\n                                            55848+*                        addr of last user block in basic or large @P1C\n                                            55849+*                        format sequential data set. TTR0 if       @P1C\n                                            55850+*                        SMF14LGE=0, TTTR if SMF14LGE=1. If        @P1C\n                                            55851+*                        SMF14STR=1, then TTTT(NUMBER OF TRACKS    @P1C\n                                            55852+*                        ACCUMULATED ACROSS ALL VOLUMES of         @P1C\n                                            55853+*                        extended format data set.)                @P1A\n 00000104                                   55854+SMF14NTR DS    BL4'0'    NUMBER OF TRACKS RELEASED BY DADSM RELSE RTN   05-IFGSMF14\n 00000108                                   55855+SMF14NER DS    BL1'0'    NUMBER OF EXTENTS RELEASED                     05-IFGSMF14\n 00000109                                   55856+SMF14EDI DS    BL1'0'    EDI flag byte                             @L5A 05-IFGSMF14\n                         00000080           55857+SMF14EXT EQU   X'80'     Data set name found in EDI exclusion table@L5A 05-IFGSMF14\n                         00000040           55858+SMF14OPO EQU   X'40'     Data set being opened for output but is   @L5A 05-IFGSMF14\n                                            55859+*                        currently opened for output               @L5A\n                         00000020           55860+SMF14INO EQU   X'20'     Data set being opened for input but is    @L5A 05-IFGSMF14\n                                            55861+*                        currently opened for output               @L5A\n                         00000010           55862+SMF14EPS EQU   X'10'     Application requested EDI processing be   @L5A 05-IFGSMF14\n                                            55863+*                        bypassed\n 0000010A                                   55864+SMF14FG1 DS    BL1'0'    Flag byte                                 @L6A 05-IFGSMF14\n                         00000080           55865+SMF14LGE EQU   X'80'     Large format sequential data set.         @P1C 05-IFGSMF14\n                                            55866+*                         SMF14NTU is in TTTR format.              @P1C\n                         00000040           55867+SMF14EXCPBAM EQU  X'40'  EAV BAM DETECTED ONE OR MORE EXCP OR      @LCA 05-IFGSMF14\n                                            55868+*                         XDAP ISSUANCES-DEB2XEXCP FLAG IS ON      @LCA\n 0000010B                                   55869+SMF14RV4 DS    BL1'0'    RESERVED                                  @L6C 05-IFGSMF14\n 0000010C                                   55870+         DS    PL4'0000' SAME AS SMF14OPD. MUST STAY AT SAME       @02A 05-IFGSMF14\n                                            55871+*                        RELATIVE POSITION FROM BEGINNING OF       @02A\n                                            55872+*                        DCB/DEB EXTENSION FOR BOTH TAPE AND DASD  @02A\n                         00000110           55873+SMF14UCB EQU   *         UCB SEGMENT(ONE FOR EACH UCB FOR THE DATA SET) 05-IFGSMF14\n 00000110                                   55874+SMFUCBDV DS    0BL2'0'   UCBCHAN  DEVICE NUMBER                         05-IFGSMF14\n 00000110                                   55875+SMFUCBCH DS    BL1'0'    UCBCHA                                         05-IFGSMF14\n 00000111                                   55876+SMFUCBUA DS    BL1'0'    UCBUA                                          05-IFGSMF14\n 00000112                                   55877+SMFSRTEV DS    BL6'0'    SRTEVOLI                                       05-IFGSMF14\n 00000118                                   55878+SMFUCBTY DS    BL4'0'    UCBTYP                                         05-IFGSMF14\n 0000011C                                   55879+SMFSRTES DS    BL1'0'    SRTESTAB                                       05-IFGSMF14\n 0000011D                                   55880+SMF14NEX DS    BL1'0'    NUMBER EXTENTS                                 05-IFGSMF14\n 0000011E                                   55881+SMF14RV5 DS    BL2'0'    RESERVED                                       05-IFGSMF14\n 00000120                                   55882+SMFEXCP  DS    BL4'0'    EXCP COUNT SO FAR IN STEP. FOR PDSE DATA SETS  05-IFGSMF14\n                                            55883+*                        THE NUMBER OF 4K BLOCKS THAT WERE READ OR\n                                            55884+*                        WRITTEN. FOR COMPRESSED FORMAT DATA SETS THE\n                                            55885+*                        NUMBER OF PHYSICAL BLOCKS(SEE SMF14CIS FOR\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   95\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           55886+*                        THE PHYSICAL BLOCK SIZE) THAT WERE READ OR\n                                            55887+*                        WRITTEN.\n                         00000124           55888+SMFTAPEX EQU   *         SMF TAPE EXTENSION                             05-IFGSMF14\n                                            55889+*        THIS SECTION DESCRIBES THE UCB TAPE EXTENSION SEGMENT\n 00000124                                   55890+SMFSRTEF DS    BL2'0'    SRTEFSCT                                       05-IFGSMF14\n 00000126                                   55891+SMFSRTEQ DS    BL2'0'    SRTEFSEQ                                       05-IFGSMF14\n 00000128                00000128 00000124  55892+         ORG   SMFTAPEX                                                 05-IFGSMF14\n                                            55893+*        THIS SECTION DESCRIBES THE UCB DASD EXTENSION SEGMENT\n 00000124                                   55894+SMF14NTA DS    BL4'0'    NUMBER TRACKS ALLOCATED                        05-IFGSMF14\n                         00000128           55895+SMF14UCE EQU   *         UCB SEGMENT END                                05-IFGSMF14\n                                            55896+*        THIS SECTION DESCRIBES THE DASD INFO ACQUIRED FROM\n                                            55897+*        HIPERSPACE CACHING VIA THE DATA LOOKASIDE FACILITY (DLF)\n                         00000128           55898+SMFHBTCH EQU   *         HIPERBATCH INFORMATION                         05-IFGSMF14\n 00000128                                   55899+SMFIOREQ DS    BL4'0'    NUMBER OF IO REQUESTS ISSUED                   05-IFGSMF14\n 0000012C                                   55900+SMFCHITS DS    BL4'0'    NUMBER OF CACHE HITS                           05-IFGSMF14\n 00000130                                   55901+SMFNMWTS DS    BL4'0'    NUMBER OF WAITS                                05-IFGSMF14\n 00000134                                   55902+SMFPHIOS DS    BL4'0'    NUMBER OF PHYSICAL IO REQUESTS                 05-IFGSMF14\n 00000138                                   55903+SMFCIOS  DS    BL4'0'    NUMBER OF CACHED IO REQUESTS                   05-IFGSMF14\n                         0000013C           55904+SMFHBEND EQU   *         END OF HIPERBATCH INFORMATION                  05-IFGSMF14\n                                            55905+*\n 0000013C                0000013C 00000110  55906+         ORG   SMF14UCB                                                 05-IFGSMF14\n                         00000110           55907+SMFISAMX EQU   *         ISAM EXTENSION SEG.(FOR DCBDSORG = IS)         05-IFGSMF14\n 00000110                                   55908+SMF14RV6 DS    BL2'0'    RESERVED                                       05-IFGSMF14\n 00000112                                   55909+SMFDCBMA DS    BL1'0'    DCBMAC                                         05-IFGSMF14\n 00000113                                   55910+SMFDCBNL DS    BL1'0'    DCBNLEV                                        05-IFGSMF14\n 00000114                                   55911+SMFDCBR3 DS    BL4'0'    DCBRORG3                                       05-IFGSMF14\n 00000118                                   55912+SMFDCBNR DS    BL4'0'    DCBNREC                                        05-IFGSMF14\n 0000011C                                   55913+SMFDCBR2 DS    BL2'0'    DCBRORG2                                       05-IFGSMF14\n 0000011E                                   55914+SMFDCBNO DS    BL2'0'    DCBNOREC                                       05-IFGSMF14\n 00000120                                   55915+SMFDCBR1 DS    BL2'0'    DCBRORG1                                       05-IFGSMF14\n 00000122                                   55916+SMF14RV7 DS    BL1'0'    RESERVED                                       05-IFGSMF14\n 00000123                                   55917+SMFDEBNI DS    BL1'0'    DEBNIEE                                        05-IFGSMF14\n 00000124                                   55918+SMFDEBNP DS    BL1'0'    DEBNPEE                                        05-IFGSMF14\n 00000125                                   55919+SMFDEBNO DS    BL1'0'    DEBNOEE                                        05-IFGSMF14\n 00000126                                   55920+SMFNCYLS DS    BL2'0'    # CYL'S IN INDEPENDENT INDEX AREA              05-IFGSMF14\n 00000128                                   55921+SMFNPCYL DS    BL2'0'    NUMBER OF CYL'S IN PRIME AREA                  05-IFGSMF14\n 0000012A                                   55922+SMFNOCYL DS    BL2'0'    NUMBER OF CYL'S IN INDEPENDENT OVFL AREA       05-IFGSMF14\n 0000012C                0000012C 00000110  55923+         ORG   SMFISAMX                                            @05A 05-IFGSMF14\n                                            55924+*\n                                            55925+*        THIS SECTION DESCRIBES THE EXTENDED INFORMATION SEGMENT.  @L1A\n                                            55926+*        THE EXTENDED INFORMATION SEGMENT CONTAINS A HALFWORD      @L1A\n                                            55927+*        SEGMENT LENGTH FIELD WHICH IS THE LENGTH OF ALL SECTIONS  @L1A\n                                            55928+*        THAT ARE CONTAINED IN IT. EACH SECTION CONTAINS A         @L1A\n                                            55929+*        HALFWORD SECTION LENGTH FIELD, A SECTION TYPE CODE,       @L1A\n                                            55930+*        AND THEN VARIABLE LENGTH INFORMATION DEPENDING UPON       @L1A\n                                            55931+*        THE SECTION TYPE.                                         @05C\n                                            55932+*\n                         00000110           55933+SMF14XIS EQU   *         EXTENDED INFORMATION SEGMENT              @L1A 05-IFGSMF14\n 00000110                                   55934+SMF14SXS DS    HL2'0'    SIZE OF EXTENDED INFO SEGMENT(ALL SECTIONS@L1A 05-IFGSMF14\n                                            55935+*                        INCLUDING THIS LENGTH FIELD)              @L1A\n                                            55936+*\n                                            55937+*        EACH SECTION WITHIN THE EXTENDED INFORMATION SEGMENT      @L1A\n                                            55938+*        BEGINS WITH THE FOLLOWING FOUR BYTES.                     @L1A\n                                            55939+*\n                         00000112           55940+SMF14XIC EQU   *         EXTENDED INFO SECTION CONTROL DATA        @L1A 05-IFGSMF14\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   96\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000112                                   55941+SMF14ESL DS    HL2'0'    LENGTH OF SECTION IN EXTENDED INFORMATION @L1A 05-IFGSMF14\n                                            55942+*                        SEGMENT(INCLUDING THESE FOUR BYTES)       @L1A\n 00000114                                   55943+         DS    HL1'0'    RESERVED                                  @L1A 05-IFGSMF14\n 00000115                                   55944+SMF14STY DS    HL1'0'    SECTION TYPE                              @L1A 05-IFGSMF14\n                         00000001           55945+SMF14XDS EQU   1         COMPRESSED FORMAT D/S TYPE CODE IS 1      @02C 05-IFGSMF14\n                         00000002           55946+SMF14SMS EQU   2         SMS CLASS INFORMATION TYPE CODE IS 2      @03A 05-IFGSMF14\n                         00000003           55947+SMF14STP EQU   3         STEP INFORMATION TYPE CODE IS 3           @L2A 05-IFGSMF14\n                         00000004           55948+SMF14AV4 EQU   4         ANSI VERSION 4 CCSID TYPE CODE IS 4       @L3A 05-IFGSMF14\n                         00000005           55949+SMF14ADC EQU   5         ADDTIONAL DATA SET CHARACTERISTICS TYPE   @L4A 05-IFGSMF14\n                                            55950+*                         CODE IS 5                                @L4A\n                         00000006           55951+SMF14PDSE EQU  6         PDSE STATISTICS TYPE CODE IS 6            @L8A 05-IFGSMF14\n                         00000007           55952+SMF14KEKL EQU  7         KEK LABEL DATA FOR TAPE ENCRYPTION        @L9A 05-IFGSMF14\n                         00000008           55953+SMF14RAS8 EQU  8         RAS CODE IS 8                             @LFA 05-IFGSMF14\n                         00000116           55954+SMF14COM EQU   *         COMMON CONTINUATION OF SECTION IN         @L1A 05-IFGSMF14\n                                            55955+*                        EXTENDED INFORMATION SEGMENT.             @L1A\n                                            55956+*\n                                            55957+*        THIS DESCRIBES THE COMPRESSED FORMAT DATA SET SECTION OF  @02C\n                                            55958+*        EXTENDED INFORMATION SEGMENT. THE COMPRESSED FORMAT DATA  @02C\n                                            55959+*        SET SECTION HAS A TYPE CODE OF 1. IT CONTAINS INFORMATION @02C\n                                            55960+*        CONCERNING COMPRESSED FORMAT DATA SETS.                   @02C\n                                            55961+*\n                         00000116           55962+SMF14CSB EQU   *         COMPRESSED FORMAT DATA SET SECTION        @02C 05-IFGSMF14\n 00000116                                   55963+SMF14XF1 DS    BL1'0'    EXTENDED SEGMENT INDICATOR FLAG BYTE 1    @L1A 05-IFGSMF14\n                         00000080           55964+SMF14LBD EQU   X'80'     COMPRESSED FORMAT DATA SET SIZE VALUES    @02C 05-IFGSMF14\n                                            55965+*                        (SMF14CDS AND SMF14UDS) ARE INVALID       @L1A\n                         00000040           55966+SMF14CRJ EQU   X'40'     COMPRESSION OF THIS DATA SET HAS BEEN     @L1A 05-IFGSMF14\n                                            55967+*                        REJECTED                                  @L1A\n                                            55968+*        BITS  2-7       RESERVED                                  @L1A\n 00000117                                   55969+SMF14XF2 DS    BL1'0'    EXTENDED SEGMENT INDICATOR FLAG BYTE 2    @L1A 05-IFGSMF14\n                                            55970+*        BITS  0-7       RESERVED                                  @L1A\n 00000118                                   55971+SMF14CDL DS    BL8'0'    NUMBER OF BYTES OF COMPRESSED DATA READ   @L1A 05-IFGSMF14\n                                            55972+*                        OR WRITTEN SINCE THIS OPEN                @L1A\n 00000120                                   55973+SMF14UDL DS    BL8'0'    NUMBER OF BYTES OF DATA READ OR WRITTEN   @L1A 05-IFGSMF14\n                                            55974+*                        SINCE THIS OPEN(DATA LENGTH PRIOR TO      @L1A\n                                            55975+*                        COMPRESSION)                              @L1A\n 00000128                                   55976+SMF14CDS DS    BL8'0'    COMPRESSED FORMAT DATA SET SIZE TO THIS   @02C 05-IFGSMF14\n                                            55977+*                        POINT-NUMBER OF COMPRESSED USER DATA BYTES@L1A\n 00000130                                   55978+SMF14UDS DS    BL8'0'    COMPRESSED FORMAT DATA SET SIZE TO THIS   @02C 05-IFGSMF14\n                                            55979+*                        POINT-NUMBER OF UNCOMPRESSED USER DATA    @L1A\n                                            55980+*                        BYTES                                     @L1A\n 00000138                                   55981+SMF14CIS DS    BL4'0'    PHYSICAL BLOCK SIZE OF COMPRESSED FORMAT  @02C 05-IFGSMF14\n                                            55982+*                        DATA SET                                  @L1A\n 0000013C                                   55983+SMF14TKL DS    HL2'0'    DICTIONARY TOKEN LENGTH(NOT INCLUDING     @L1A 05-IFGSMF14\n                                            55984+*                        THIS LENGTH FIELD)                        @L1A\n                         00000024           55985+SMF14T36 EQU   36        CURRENTLY TOKEN LENGTH IS 36 ONLY         @L1A 05-IFGSMF14\n 0000013E                                   55986+SMF14TKN DS    BL36'0'   DICTIONARY TOKEN FOR COMPRESSED FORMAT    @02C 05-IFGSMF14\n                                            55987+*                        DATA SET                                  @L1A\n                         00000162           55988+SMF14CSE EQU   *         END OF COMPRESSED FORMAT DATA SET SECTION @02C 05-IFGSMF14\n 00000162                00000162 00000116  55989+         ORG   SMF14COM                                            @L3A 05-IFGSMF14\n                                            55990+*                                                                  @03A\n                                            55991+*              THIS DESCRIBES THE SMS CLASS INFORMATION SECTION OF @03A\n                                            55992+*              THE EXTENDED INFORMATION SEGMENT. THE SMS CLASS     @03A\n                                            55993+*              INFORMATION HAS A TYPE CODE OF 2. IT CONTAINS THE   @03A\n                                            55994+*              FIELDS USED TO STORE THE DATA, STORAGE, AND         @03A\n                                            55995+*              MANAGEMENT CLASS RETURNED FROM THE CASF CALL.       @03A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   97\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           55996+*                                                                  @03A\n                         00000116           55997+SMF14SCI EQU   *         SMS CLASS INFORMATION SECTION             @03A 05-IFGSMF14\n 00000116                                   55998+SMF14MCN DS    CL8' '    SMS MANAGEMENT CLASS NAME                 @03A 05-IFGSMF14\n 0000011E                                   55999+SMF14DCN DS    CL8' '    SMS DATA CLASS NAME                       @03A 05-IFGSMF14\n 00000126                                   56000+SMF14SCN DS    CL8' '    SMS STORAGE CLASS NAME                    @03A 05-IFGSMF14\n                         0000012E           56001+SMF14SCE EQU   *                                                   @03A 05-IFGSMF14\n 0000012E                0000012E 00000116  56002+         ORG   SMF14COM                                            @L3A 05-IFGSMF14\n                                            56003+*                                                                  @L2A\n                                            56004+*              THIS DESCRIBES THE STEP INFORMATION SECTION OF THE  @L2A\n                                            56005+*              EXTENDED INFORMATION SEGMENT. THE JOB INFORMATION   @L2A\n                                            56006+*              HAS A TYPE CODE OF 3. IT CONTAINS THE STEP NAME     @L2A\n                                            56007+*              AND ACTIVE PROGRAM NAME OF THE JOB.                 @L2A\n                                            56008+*                                                                  @L2A\n                         00000116           56009+SMF14SPI EQU   *         STEP INFORMATION SECTION                  @L2A 05-IFGSMF14\n 00000116                                   56010+SMF14SPN DS    CL8' '    STEP NAME                                 @L2A 05-IFGSMF14\n 0000011E                                   56011+SMF14PGN DS    CL8' '    ACTIVE PROGRAM NAME                       @L2A 05-IFGSMF14\n                         00000126           56012+SMF14SPE EQU   *         END OF STEP INFORMATION SECTION           @L2A 05-IFGSMF14\n 00000126                00000126 00000116  56013+         ORG   SMF14COM                                            @L3A 05-IFGSMF14\n                                            56014+*                                                                  @L3A\n                                            56015+*              THIS DESCRIBES THE ANSI VERSION 4 CCSID INFORMATION @L3A\n                                            56016+*              SECTION OF THE EXTENDED INFORMATION SEGMENT.        @L3A\n                                            56017+*              THE CCSID INFORMATION  HAS A TYPE OF 4. IT CONTAINS @L3A\n                                            56018+*              THE CCSID BEING USED BY THE APPLICATION, THE        @L3A\n                                            56019+*              CCSID BEING USED TO PROCESS THE VERSION 4 TAPE      @L3A\n                                            56020+*              AND THE CCSID SPECIFIED IN THE TAPE LABELS IF       @L3A\n                                            56021+*              THIS IS EITHER AN IBM VERSION 4 TAPE BEING READ OR  @L3A\n                                            56022+*              AN IBM VERSION 4 TAPE BEING WRITTEN TO WITH         @L3A\n                                            56023+*              DISP=MOD SPECIFIED. THERE ARE ALSO FLAGS DEFINED    @L3A\n                                            56024+*              TO INDICATE WHETHER THE SOURCE OR TARGET CCSID      @L3A\n                                            56025+*              WERE DEFAULTED AND WHETHER THE CCSID SPECIFIED ON   @L3A\n                                            56026+*              THE DD STATEMENT WAS IGNORED.                       @L3A\n                         00000116           56027+SMF14A4I EQU   *         ANSI VERSION 4 CCSID INFORMATION SECTION  @L3A 05-IFGSMF14\n 00000116                                   56028+SMF14CFG DS    BL1'0'    CCSID FLAGS                               @L3A 05-IFGSMF14\n                         00000080           56029+SMF14IBM EQU   X'80'     IBM VERSION 4 CREATED TAPE                @L3A 05-IFGSMF14\n                         00000040           56030+SMF14OUT EQU   X'40'     OPENED FOR OUTPUT NOT DISP=MOD            @L3A 05-IFGSMF14\n                         00000020           56031+SMF14MOD EQU   X'20'     OPENED FOR OUTPUT DISP=MOD                @L3A 05-IFGSMF14\n                         00000010           56032+SMF14UDF EQU   X'10'     USR CCSID DEFAULTED                       @L3A 05-IFGSMF14\n                         00000008           56033+SMF14TDF EQU   X'08'     TAPE CCSID DEFAULTED                      @L3A 05-IFGSMF14\n                         00000004           56034+SMF14IGN EQU   X'04'     TAPE CCSID WAS IGNORED                    @L3A 05-IFGSMF14\n 00000117                                   56035+SMF14USR DS    BL4'0'    CCSID BEING USED BY APPLICATION(SPECIFIED @L3A 05-IFGSMF14\n                                            56036+*                          ON JOB/EXEC STATEMENT OR DEFAULTED)     @L3A\n 0000011B                                   56037+SMF14TPE DS    BL4'0'    CCSID BEING USED TO PROCESS TAPE(SPECIFIED@L3A 05-IFGSMF14\n                                            56038+*                          ON DD STATEMENT OR IN TAPE LABEL)       @L3A\n 0000011F                                   56039+SMF14LBL DS    BL4'0'    CCSID SPECIFIED IN THE TAPE LABELS OF AN  @L3A 05-IFGSMF14\n                                            56040+*                          EXISTING TAPE                           @L3A\n                         00000123           56041+SMF14A4E EQU   *         END OF ANSI V4 CCSID INFORMATION SECTION  @L3A 05-IFGSMF14\n 00000123                00000123 00000116  56042+         ORG   SMF14COM                                            @L4A 05-IFGSMF14\n                                            56043+*                                                                  @L4A\n                                            56044+*              THIS DESCRIBES THE ADDITIONAL DATA SET              @L4A\n                                            56045+*              CHARACTERISTICS SECTION OF THE EXTENDED INFORMATION @L4A\n                                            56046+*              SEGMENT. THIS SECTION HAS A TYPE OF 5. IT CONTAINS  @L4A\n                                            56047+*              ADDITIONAL DATA SET CHARACTERISTICS INFORMATION.    @L4A\n                                            56048+*                                                                 4@LFD\n                                            56049+*                                                                  @L4A\n                         00000116           56050+SMF14ADI EQU   *         ADDITIONAL D/S CHARACTERISTICS SECTION    @L4A 05-IFGSMF14\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   98\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000116                                   56051+SMF14BFG DS    0BL2'0'   ADC FLAGS(DEFINES INFORMATION PRESENT)    @LEC 05-IFGSMF14\n 00000116                                   56052+SMF14BFG0 DS BL1'0'      ADC FLAGS BYTE 1                          @LEA 05-IFGSMF14\n                         00000080           56053+SMF14BLK EQU   X'80'     BLOCK SIZE PRESENT                        @L4A 05-IFGSMF14\n                         00000040           56054+SMF14FLGP EQU  X'40'     FLAG FIELD PRESENT                        @L9A 05-IFGSMF14\n                                            56055+*        BIT   2-7       RESERVED                                  @LEC\n 00000117                                   56056+SMF14BFG1 DS BL1'0'      ADC FLAGS BYTE 2                          @LEA 05-IFGSMF14\n                                            56057+*        BIT   8-15      RESERVED                                  @LEA\n 00000118                                   56058+SMF14LBS DS    BL8'0'    BLOCK SIZE VALUE                          @L4A 05-IFGSMF14\n 00000120                                   56059+SMF14FLGS DS   0BL2'0'   FLAGS                                     @LAC 05-IFGSMF14\n 00000120                                   56060+SMF14FLG1 DS   BL1'0'    FLAG BYTE 1                               @LAA 05-IFGSMF14\n                         00000080           56061+SMF14UPF EQU   X'80'     BSAM USER PGFIX OPTION FLAG(DEB2XUPF)     @L9A 05-IFGSMF14\n                         00000040           56062+SMF14EADSCB EQU X'40'    DCBEEADSCBOK FLAG(ON - DCBEADSCB=OK       @LAA 05-IFGSMF14\n                                            56063+*                          SPECIFIED. OFF - DCBEADSCB=OK NOT       @LAA\n                                            56064+*                          SPECIFIED OR NO DCBE)                   @LAA\n                         00000020           56065+SMF14EX31 EQU  X'20'     DCBE SPECIFIED LOC=ANY                    @MXA 05-IFGSMF14\n                         00000010           56066+SMF14XTIO EQU  X'10'     DD ALLOCATED WITH XTIOT                   @MXA 05-IFGSMF14\n                                            56067+*        BIT   4-7       RESERVED                                  @LAC\n 00000121                                   56068+SMF14FLG2 DS   BL1'0'    FLAG BYTE 2                               @LAA 05-IFGSMF14\n                                            56069+*        BIT   0-7       RESERVED                                  @LAA\n 00000122                                   56070+         DS    BL10'0'   RESERVED                                  @L9C 05-IFGSMF14\n                         0000012C           56071+SMF14ADE EQU   *         END OF ADC SECTION                        @L4A 05-IFGSMF14\n 0000012C                0000012C 00000116  56072+         ORG   SMF14COM                                            @L8A 05-IFGSMF14\n                                            56073+*                                                                  @L8A\n                                            56074+*              THIS DESCRIBES THE ADDITIONAL DATA SET              @L8A\n                                            56075+*              CHARACTERISTICS SECTION OF THE EXTENDED INFORMATION @L8A\n                                            56076+*              SEGMENT. THIS SECTION HAS A TYPE OF 6. IT CONTAINS  @L8A\n                                            56077+*              STATISTICAL INFORMATION ABOUT A PDSE.               @L8A\n                                            56078+*                                                                  @L8A\n                         00000116           56079+SMF14PSI EQU   *         PDSE STATISTIC SECTION                    @L8A 05-IFGSMF14\n 00000116                                   56080+SMF14DRD DS    BL4'0'    DIRECTORY READ REQUEST COUNT              @L8A 05-IFGSMF14\n 0000011A                                   56081+SMF14DRDH DS   BL4'0'    DIRECTORY READ HIT COUNT                  @L8A 05-IFGSMF14\n 0000011E                                   56082+SMF14MRD DS    BL4'0'    MEMBER READ REQUEST COUNT                 @L8A 05-IFGSMF14\n 00000122                                   56083+SMF14MRDH DS   BL4'0'    MEMBER READ HIT COUNT                     @L8A 05-IFGSMF14\n 00000126                                   56084+SMF14MCE DS    BL4'0'    MEMBER CACHE ELIGIBLE                     @L8A 05-IFGSMF14\n 0000012A                                   56085+SMF14MST DS    BL4'0'    MEMBER CACHE STOLEN                       @L8A 05-IFGSMF14\n 0000012E                                   56086+SMF14MNC DS    BL4'0'    MEMBER CACHE ELIGIBLE BUT NOT CACHED      @L8A 05-IFGSMF14\n 00000132                                   56087+SMF14MCF DS    BL4'0'    MEMBER CACHE ELIGIBLE BUT CACHE FULL      @L8A 05-IFGSMF14\n                         00000136           56088+SMF14PSE EQU   *         END OF PDSE SECTION                       @L8A 05-IFGSMF14\n 00000136                00000136 00000116  56089+         ORG   SMF14COM                                            @L9A 05-IFGSMF14\n                                            56090+*                                                                  @L9A\n                                            56091+*              THIS DESCRIBES THE KEK LABELS AND ENCODING          @L9A\n                                            56092+*              MECHANISMS FOR A TAPE DATA ENCRYPTED DATA SET.      @L9A\n                                            56093+*              THIS SECTION HAS A TYPE OF 7.                       @L9A\n                                            56094+*                                                                  @L9A\n                         00000116           56095+SMF14ENC EQU   *         TAPE ENCRYPTION DATA SECTION              @L9A 05-IFGSMF14\n 00000116                                   56096+SMF14KL1 DS    CL64' '   KEY LABEL 1                               @L9A 05-IFGSMF14\n 00000156                                   56097+SMF14CD1 DS    CL1' '    ENCODING MECHANISM FOR KEY LABEL 1        @L9A 05-IFGSMF14\n 00000157                                   56098+SMF14KL2 DS    CL64' '   KEY LABEL 2                               @L9A 05-IFGSMF14\n 00000197                                   56099+SMF14CD2 DS    CL1' '    ENCODING MECHANISM FOR KEY LABEL 2        @L9A 05-IFGSMF14\n 00000198                                   56100+SMF14KET DS    BL4'0'    KEY EXCHANGE TIME IN HUNDREDTHS SECONDS.  @0BA 05-IFGSMF14\n                                            56101+*                        THE KEY EXCHANGE (ENCRYPTION OVERHEAD)    @0BA\n                                            56102+*                        TIME IS ONLY APPLICABLE FOR THE SMF 15    @0BA\n                                            56103+*                        OUTPUT RECORD AND ONLY FOR NON-PARALLEL   @0BA\n                                            56104+*                        OPEN PROCESSING WRITING FILE SEQUENCE 1   @0BA\n                                            56105+*                        FROM LOADPOINT. OTHERWISE THIS VALUE IS   @0BA\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page   99\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           56106+*                        SET TO ZERO.                              @0BA\n                         0000019C           56107+SMF14ENE EQU   *         END OF TAPE ENCRYPTION SECTION            @L9A 05-IFGSMF14\n                                            56108+*                                                                  @LFA\n                                            56109+*              THIS DESCRIBES THE RAS SECTION OF THE EXTENDED      @LFA\n                                            56110+*              INFORMATION SEGMENT. THIS SECTION HAS A TYPE OF 8   @LFA\n                                            56111+*              IT CONTAINS ANY RAS INFORMATION NEEDED.             @LFA\n                                            56112+*                                                                  @LFA\n                         0000019C           56113+SMF14RASI EQU  *         RAS DATA SECTION                          @LFA 05-IFGSMF14\n 0000019C                                   56114+SMF14RFG  DS   0BL4'0'   RAS FLAGS(DEFINE INFO IS PRESENT)         @LFA 05-IFGSMF14\n 0000019C                                   56115+SMF14RFG0 DS   BL1'0'    FLAG BYTE 1                               @LFA 05-IFGSMF14\n                         00000080           56116+SMF14DCBEREJ EQU X'80'   DCBE REJECT FLAGS AVAILABLE               @LFA 05-IFGSMF14\n                         00000040           56117+SMF14PREL EQU X'40'      PARTREL FLAGS AVAILABLE                   @LGA 05-IFGSMF14\n                                            56118+*         BIT  2-7       RESERVED                                  @LGC\n 0000019D                                   56119+SMF14RFG1 DS   BL1'0'    FLAG BYTE 2                               @LFA 05-IFGSMF14\n                                            56120+*         BIT  0-7       RESERVED                                  @LFA\n 0000019E                                   56121+SMF14RFG2 DS   BL1'0'    FLAG BYTE 3                               @LFA 05-IFGSMF14\n                                            56122+*         BIT  0-7       RESERVED                                  @LFA\n 0000019F                                   56123+SMF14RFG3 DS   BL1'0'    FLAG BYTE 4                               @LFA 05-IFGSMF14\n                                            56124+*         BIT  0-7       RESERVED                                  @LFA\n 000001A0                                   56125+SMF14RASDATA DS  0BL20'0' RAS DATA                                 @LFA 05-IFGSMF14\n 000001A0                                   56126+SMF14RASDATA0 DS  BL1'0'  RAS DATA BYTE 1                          @LFA 05-IFGSMF14\n                         00000080           56127+SMF14DCBEEXCP EQU X'80'   DCBE INVALIDATED BECAUSE EXCP AND NO     @LFA 05-IFGSMF14\n                                            56128+*                           FOUNDATION EXTENSION PRESENT           @LFA\n                         00000040           56129+SMF14DCBEDSORG EQU X'40'  DCBE INVALIDATED BECAUSE DSORG IS NOT    @LFA 05-IFGSMF14\n                                            56130+*                           PS, PO OR DA                           @LFA\n                         00000020           56131+SMF14DCBEFREE EQU X'20'   DCBE INVALIDATED BECAUSE STORAGE IS      @LFA 05-IFGSMF14\n                                            56132+*                           NOT ADDRESSABLE                        @LFA\n                         00000010           56133+SMF14DCBEKEY  EQU X'10'   DCBE INVALIDATED BECAUSE DCBE STORAGE    @LFA 05-IFGSMF14\n                                            56134+*                           IS NOT IN USER KEY                     @LFA\n                         00000008           56135+SMF14DCBEID   EQU X'08'   DCBE INVALIDATED BECAUSE THE DCBEID IS   @LFA 05-IFGSMF14\n                                            56136+*                           NOT 'DCBE'                             @LFA\n                         00000004           56137+SMF14DCBEMIN  EQU X'04'   DCBE INVALIDATED BECAUSE IT IS NOT AT    @LFA 05-IFGSMF14\n                                            56138+*                           LEAST THE MINIMUM LENGTH REQURIED(56   @LFA\n                                            56139+*                           BYTES)                                 @LFA\n                         00000002           56140+SMF14NODCBE   EQU X'02'   DCBE INVALIDATED BECAUSE DCBHIARC FLAGS  @LFA 05-IFGSMF14\n                                            56141+*                           ON BUT NO DCBE IN DCB                  @LFA\n 000001A1                                   56142+SMF14RASDATA1 DS  BL1'0'  RAS DATA BYTE 2                          @LGA 05-IFGSMF14\n                         00000080           56143+SMF14PRELVIO  EQU X'80'   PARTIAL RELEASE NOT CALLED BY CLOSE      @LGA 05-IFGSMF14\n                                            56144+*                           BECAUSE THIS IS A VIO DATA SET         @LGA\n                         00000040           56145+SMF14PRELABD  EQU X'40'   PARTIAL RELEASE NOT CALLED BY CLOSE      @LGA 05-IFGSMF14\n                                            56146+*                           BECAUSE TASK IS ABENDING               @LGA\n                         00000020           56147+SMF14PRELINP  EQU X'20'   PARTIAL RELEASE NOT CALLED BY CLOSE      @LGA 05-IFGSMF14\n                                            56148+*                           BECAUSE NOT OPENED FOR OUTPUT          @LGA\n                         00000010           56149+SMF14PRELEXCP EQU X'10'   PARTIAL RELEASE NOT CALLED BY CLOSE      @LGA 05-IFGSMF14\n                                            56150+*                           BECAUSE EXCP DCB BUT NO DA DEVICE      @LGA\n                                            56151+*                           DEPENDENT SECTION PRESENT              @LGA\n                         00000008           56152+SMF14PRELNOUT EQU X'08'   PARTIAL RELEASE NOT CALLED BY CLOSE      @LGA 05-IFGSMF14\n                                            56153+*                           BECAUSE EVEN THOUGH OPENED FOR OUTPUT  @LGA\n                                            56154+*                           LAST IO WAS NOT FOR OUTPUT             @LGA\n                         00000004           56155+SMF14PRELIO   EQU X'04'   AN I/O ERROR OCCURRED DURING PARTIAL     @LGA 05-IFGSMF14\n                                            56156+*                         RELEASE                                  @LGA\n 000001A2                                   56157+          DS   BL18'0'   RESERVED                                  @LGC 05-IFGSMF14\n                         000001B4           56158+SMF14RASE EQU  *         END OF RAS SECTION                        @LFA 05-IFGSMF14\n                                            56159+* Remove Inline Declares                                         99@01D\n                                            56160+*        IFASMFR 30\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  100\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           56162+*%IFABGN1: ;\n                                            56163+* /*                                                                 */\n                                            56164+* /* METHOD OF ACCESS                                                */\n                                            56165+* /*  PL/S - USER DEFINES MACRO VARIABLE IFARXX WHERE XX=RECORD NUM  */\n                                            56166+* /*         DECLARE SMFXXPTR PTR(31) OR RESPECIFY FOR BASE          */\n                                            56167+* /*         INCLUDE MACRO FROM LIBRARY                              */\n                                            56168+* /*          EXAMPLE %IFAR08 = 'YES',           NOTE. THE COMMA REP-*/\n                                            56169+* /*                  DCL SMF08PTR PTR(31),      RESENTS A SEMI-COLON*/\n                                            56170+* /*                  %INCLUDE SYSLIB(IFASMFR),  BUT ISN'T TO AVIOD  */\n                                            56171+* /*                                             A DIAGNOSTIC.       */\n                                            56172+* /*                                                                 */\n                                            56173+* /*                                                                 */\n                                            56174+* /*         THIS MACRO PROCESSES RECORDS IN THE RANGE 00-06. IT     */\n                                            56175+* /*         ACTS AS A ROUTER TO OTHER MACROS TO PROCESS OTHER       */\n                                            56176+* /*         RECORDS AS FOLLOWS:                                     */\n                                            56177+* /*                                                                 */\n                                            56178+* /*             MACRO        RECORDS                                */\n                                            56179+* /*            ********      *******                                */\n                                            56180+* /*            IFASMFR1      07-19                                  */\n                                            56181+* /*            IFASMFR2      20-27                                  */\n                                            56182+* /*            IFASMFR3      28-36                                  */\n                                            56183+* /*            IFASMFR4      37-46                                  */\n                                            56184+* /*            IFASMFR5      47-54                                  */\n                                            56185+* /*            IFASMFR6      55-69                                  */\n                                            56186+* /*            IFASMFR9      80-84                              @07C*/\n                                            56187+* /*            IFASMFRA      85-103                             @07C*/\n                                            56188+* /*            IFASMFRB      104-113                                */\n                                            56189+* /*            IFASMFRC      114-123                                */\n                                            56190+* /*            IFASMFRD      124-127                                */\n                                            56191+*%GOTO IFABGN2;   /*\n                                            56192+*  THIS IS AN SMF MACRO WHICH CONTROLS THE BUILDING OF SMF RECORDS. THE\n                                            56193+*  REQUIRED FORMAT IS\n                                            56194+*\n                                            56195+*        IFASMFR  &RECTYPE\n                                            56196+*\n                                            56197+*  NOTE: VALUES FOR &RECTYPE MUST BE ENCLOSED IN PARENS(UNLESS ONLY 1).\n                                            56198+*\n                                            56200+*  PROPRIETARY STATEMENT:                                             *\n                                            56201+*  **PROPRIETARY_STATEMENT*********************************************\n                                            56202+*                                                                     *\n                                            56203+*                                                                     *\n                                            56204+*   LICENSED MATERIALS - PROPERTY OF IBM                              *\n                                            56205+*   5694-A01 COPYRIGHT IBM CORP. 1977, 2011                           *\n                                            56206+*                                                                     *\n                                            56207+*   STATUS= HBB7780                                                   *\n                                            56208+*                                                                     *\n                                            56209+*  **END_OF_PROPRIETARY_STATEMENT**************************************\n                                            56210+*                                                                     *\n                                            56211+***************************************************************@G742PJW\n                                            56212+*                                                              @G742PJW\n                                            56213+*        THIS RECORD IS WRITTEN AT NORMAL OR ABNORMAL          @G742PJW\n                                            56214+*        TERMINATION OF THE FOLLOWING:                         @G742PJW\n                                            56215+*            A BATCH JOB STEP                                  @G742PJW\n                                            56216+*            A BATCH JOB                                       @G742PJW\n                                            56217+*            A TSO SESSION                                     @G742PJW\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  101\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           56218+*            A STARTED TASK                                    @G742PJW\n                                            56219+*                                                              @G742PJW\n                                            56220+*            THE EXPIRATION OF THE ACCOUNTING INTERVAL FOR ANY @G742PJW\n                                            56221+*            OF THE ABOVE WORK CLASSES.                        @G742PJW\n                                            56222+*                                                              @G742PJW\n                                            56223+*        THE RECORD LENGTH IS VARIABLE. MINIMUM OF XXX.        @G742PJW\n                                            56224+*                                                              @G742PJW\n                                            56225+***********************************************************************\n 00000000                00000000 000000B0  56226+SMFRCD30 DSECT                                                 @G742PJW 04-IFASMFR3\n                                            56227+*                                                              @G742PJW\n                                            56228+*        SMF RECORD HEADER SEGMENT                             @G742PJW\n                                            56229+*                                                              @G742PJW\n 00000000                                   56230+         DS    0D                                              @G742PJW 04-IFASMFR3\n 00000000                                   56231+SMF30RPS DS    0CL176' '               FIXED LENGTH HEADER         @LFC 04-IFASMFR3\n 00000000                                   56232+SMF30RHD DS    0CL24' '                RECORD HEADER SECTION       @02C 04-IFASMFR3\n 00000000                                   56233+SMF30LEN DS    BL2'0'                  RECORD LENGTH           @G742PJW 04-IFASMFR3\n 00000002                                   56234+SMF30SEG DS    BL2'0'                  SEGMENT DESCRIPTOR      @G742PJW 04-IFASMFR3\n 00000004 00                                56235+SMF30FLG DC    BL1'0'                  HEADER FLAG BYTE -      @G742PJW 04-IFASMFR3\n                                            56236+*                                      SYSTEM INDICATOR\n                                            56237+*                                      BIT 0 - SUBSYSTEM IDENTIFICATION\n                                            56238+*                                              FOLLOWS SYSTEM\n                                            56239+*                                              IDENTIFICATION\n                                            56240+*                                      BIT 1 - SUBTYPES USED       @D7A\n                                            56241+*                                      BIT 2   RESERVED            @DOC\n                                            56242+*                                      BIT 3-6 VERSION INDICATORS  @D2C\n                                            56243+*                                                                 3@D2D\n                                            56244+*                                      BIT 7 - RESERVED            @D2C\n                                            56245+*                                      See 'Standard SMF Record    @D2C\n                                            56246+*                                      Header' for details.        @D2C\n 00000005 00                                56247+SMF30RTY DC    BL1'0'                  RECORD TYPE 30          @G742PJW 04-IFASMFR3\n 00000006 40404040                          56248+SMF30TME DC    CL4' '                  TIME RECORD WAS MOVED            04-IFASMFR3\n                                            56249+*                                      TO SMF BUFFER, IN HUNDREDTHS\n                                            56250+*                                      OF A SECOND.            @VS49840\n 0000000A 0000000C                          56251+SMF30DTE DC    PL4'0000'               DATE THAT THE RECORD             04-IFASMFR3\n                                            56252+*                                      WAS MOVED TO THE SMF BUFFER,\n                                            56253+*                                      IN THE FORM OcyydddF(WHERE\n                                            56254+*                                      F IS THE SIGN). FOR A TSO\n                                            56255+*                                      SESSION, THE DATE IS THE LOGOFF\n                                            56256+*                                      DATE.                   @G742PJW\n 0000000E 40404040                          56257+SMF30SID DC    CL4' '                  SYSTEM IDENTIFICATION   @G742PJW 04-IFASMFR3\n 00000012 F0404040                          56258+SMF30WID DC    CL4'0'     OUCBSUBN     SUBSYSTEM IDENTIFIER    @G743PJW 04-IFASMFR3\n 00000016 0001                              56259+SMF30STP DC    BL2'01'                 RECORD SUBTYPE          @G860P27 04-IFASMFR3\n                                            56260+*\n                                            56261+*        SELF DEFINING SECTION                                 @G742PJW\n                                            56262+*\n 00000018                                   56263+SMF30SDS DS    0CL152' '              SELF DEFINING SECTION        @LFC 04-IFASMFR3\n 00000018                                   56264+SMF30SOF DS    F                      OFFSET TO SUBSYSTEM SEGTION       04-IFASMFR3\n                                            56265+*                                     FROM START OF RECORD, INCLUDING\n                                            56266+*                                     THE RDW\n                                            56267+*                                                              @VS49902\n 0000001C 0000                              56268+SMF30SLN DC    BL2'0'                 LENGTH OF SUBSYSTEM SECTION       04-IFASMFR3\n                                            56269+*                                                              @G742PJW\n 0000001E 0000                              56270+SMF30SON DC    BL2'0'                 NUMBER OF SUBSYSTEM SECTIONS      04-IFASMFR3\n                                            56271+*                                                              @G742PJW\n 00000020                                   56272+SMF30IOF DS    F                      OFFSET TO IDENTIFICATION          04-IFASMFR3\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  102\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           56273+*                                     SECTION FROM START OF RECORD,\n                                            56274+*                                     INCLUDING THE RDW        @VS49902\n 00000024 0000                              56275+SMF30ILN DC    BL2'0'                 LENGTH OF IDENTIFICATION          04-IFASMFR3\n                                            56276+*                                     SECTION                  @G742PJW\n 00000026 0000                              56277+SMF30ION DC    BL2'0'                 NUMBER OF IDENTIFICATION          04-IFASMFR3\n                                            56278+*                                     SECTIONS                 @G742PJW\n 00000028                                   56279+SMF30UOF DS    F                      OFFSET TO I/O ACTIVITY SECTION    04-IFASMFR3\n                                            56280+*                                     FROM START OF RECORD, INCLUDING\n                                            56281+*                                     THE RDW                  @VS49902\n 0000002C 0000                              56282+SMF30ULN DC    BL2'0'                 LENGTH OF I/O ACTIVITY SECTION    04-IFASMFR3\n                                            56283+*                                                              @G742PJW\n 0000002E 0000                              56284+SMF30UON DC    BL2'0'                 NUMBER OF I/O ACTIVITY SECTIONS   04-IFASMFR3\n                                            56285+*                                                              @G742PJW\n 00000030                                   56286+SMF30TOF DS    F                      OFFSET TO COMPLETION SECTION      04-IFASMFR3\n                                            56287+*                                     FROM START OF RECORD, INCLUDING\n                                            56288+*                                     THE RDW                  @VS49902\n 00000034 0000                              56289+SMF30TLN DC    BL2'0'                 LENGTH OF COMPLETION SECTION      04-IFASMFR3\n                                            56290+*                                                              @VS49902\n 00000036 0000                              56291+SMF30TON DC    BL2'0'                 NUMBER OF COMPLETION SECTIONS     04-IFASMFR3\n                                            56292+*                                                              @G742PJW\n 00000038                                   56293+SMF30COF DS    F                      OFFSET TO PROCESSOR SECTION       04-IFASMFR3\n                                            56294+*                                     FROM START OF RECORD, INCLUDING\n                                            56295+*                                     THE RDW                  @VS49902\n 0000003C 0000                              56296+SMF30CLN DC    BL2'0'                 LENGTH OF PROCESSOR SECTION       04-IFASMFR3\n                                            56297+*                                                              @G742PJW\n 0000003E 0000                              56298+SMF30CON DC    BL2'0'                 NUMBER OF PROCESSOR SECTIONS      04-IFASMFR3\n                                            56299+*                                                              @G742PJW\n 00000040                                   56300+SMF30AOF DS    F                      OFFSET TO ACCOUNTING SECTION      04-IFASMFR3\n                                            56301+*                                     FROM START OF RECORD, INCLUDING\n                                            56302+*                                     THE RDW                  @VS49902\n 00000044 0000                              56303+SMF30ALN DC    BL2'0'                 LENGTH OF ACCOUNTING SECTION      04-IFASMFR3\n                                            56304+*                                                              @G742PJW\n 00000046 0000                              56305+SMF30AON DC    BL2'0'                 NUMBER OF ACCOUNTING SECTIONS     04-IFASMFR3\n                                            56306+*                                                              @G742PJW\n 00000048                                   56307+SMF30ROF DS    F                      OFFSET TO STORAGE SECTION         04-IFASMFR3\n                                            56308+*                                     FROM START OF RECORD, INCLUDING\n                                            56309+*                                     THE RDW                  @VS49902\n 0000004C 0000                              56310+SMF30RLN DC    BL2'0'                 LENGTH OF STORAGE SECTION         04-IFASMFR3\n                                            56311+*                                                              @G742PJW\n 0000004E 0000                              56312+SMF30RON DC    BL2'0'                 NUMBER OF STORAGE SECTIONS        04-IFASMFR3\n                                            56313+*                                                              @G742PJW\n 00000050                                   56314+SMF30POF DS    F                      OFFSET TO PERFORMANCE SECTION     04-IFASMFR3\n                                            56315+*                                     FROM START OF RECORD, INCLUDING\n                                            56316+*                                     THE RDW                  @VS49902\n 00000054 0000                              56317+SMF30PLN DC    BL2'0'                 LENGTH OF PERFORMANCE SECTIONS    04-IFASMFR3\n                                            56318+*                                                              @G742PJW\n 00000056 0000                              56319+SMF30PON DC    BL2'0'                 NUMBER OF PERFORMANCE SECTIONS    04-IFASMFR3\n                                            56320+*                                                              @G742PJW\n 00000058                                   56321+SMF30OOF DS    F                      OFFSET TO OPERATOR SECTION        04-IFASMFR3\n                                            56322+*                                     FROM START OF RECORD, INCLUDING\n                                            56323+*                                     THE RDW                  @VS49902\n 0000005C 0000                              56324+SMF30OLN DC    BL2'0'                 LENGTH OF OPERATOR SECTION        04-IFASMFR3\n                                            56325+*                                                              @G742PJW\n 0000005E 0000                              56326+SMF30OON DC    BL2'0'                 NUMBER OF OPERATOR SECTIONS       04-IFASMFR3\n                                            56327+*                                                              @G742PJW\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  103\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000060                                   56328+SMF30EOF DS    F                      OFFSET TO EXCP SECTION            04-IFASMFR3\n                                            56329+*                                     FROM START OF RECORD, INCLUDING\n                                            56330+*                                     THE RDW                  @VS49902\n 00000064 0000                              56331+SMF30ELN DC    BL2'0'                 LENGTH OF EXCP SECTIONS IN THIS   04-IFASMFR3\n                                            56332+*                                     RECORD                   @VS49902\n 00000066 0000                              56333+SMF30EON DC    BL2'0'                 NUMBER OF EXCP SECTIONS IN THIS   04-IFASMFR3\n                                            56334+*                                     RECORD                   @VS49902\n 00000068 0000                              56335+SMF30EOR DC    XL2'0'                 NUMBER OF EXCP SEGMENTS IN        04-IFASMFR3\n                                            56336+*                                     SUBSEQUENT RECORDS. WHEN THIS\n                                            56337+*                                     NUMBER EXCEEDS TWO BYTES, IT IS\n                                            56338+*                                     INVALID. SEE SMF30EOS FOR THE\n                                            56339+*                                     CORRECT VALUE.               @01C\n 0000006A 0000                              56340+SMF30RVD DC    BL2'0'                 RESERVED                     @01C 04-IFASMFR3\n 0000006C 00000000                          56341+SMF30EOS DC    BL4'0'                 NUMBER OF EXCP SECTIONS           04-IFASMFR3\n                                            56342+*                                     IN SUBSEQUENT RECORDS        @01C\n 00000070 00000000                          56343+SMF30DRO DC    BL4'0'                 Offset of APPC/MVS                04-IFASMFR3\n                                            56344+*                                     Resource Section from start of\n                                            56345+*                                     record, including the RDW    @04C\n 00000074 0000                              56346+SMF30DRL DC    BL2'0'                 Length of APPC/MVS                04-IFASMFR3\n                                            56347+*                                     Resource Section             @04A\n 00000076 0000                              56348+SMF30DRN DC    BL2'0'                 Number of APPC/MVS                04-IFASMFR3\n                                            56349+*                                     Resource Sections in this record.\n                                            56350+*                                     The number should be 0 or 1. @04A\n                                            56351+*                                                                 2@DPD\n 00000078 00000000                          56352+SMF30ARO DC    BL4'0'                 Offset of APPC/MVS Cumulative     04-IFASMFR3\n                                            56353+*                                     Resource Section from start of\n                                            56354+*                                     record, including the RDW    @LMA\n 0000007C 0000                              56355+SMF30ARL DC    BL2'0'                 Length of APPC/MVS Cumulative     04-IFASMFR3\n                                            56356+*                                     Resource Section             @LMA\n 0000007E 0000                              56357+SMF30ARN DC    BL2'0'                 Number of APPC/MVS Cumulative     04-IFASMFR3\n                                            56358+*                                     Resource Sections in this record.\n                                            56359+*                                     The number should be 0 or 1. @LMA\n 00000080 00000000                          56360+SMF30OPO DC    BL4'0'                 Offset of OpenMVS Process         04-IFASMFR3\n                                            56361+*                                     Sections                     @0OC\n 00000084 0000                              56362+SMF30OPL DC    BL2'0'                 Length of OpenMVS Process         04-IFASMFR3\n                                            56363+*                                     Section                      @0OC\n 00000086 0000                              56364+SMF30OPN DC    BL2'0'                 Number of OpenMVS Process         04-IFASMFR3\n                                            56365+*                                     Sections in This Record      @0OC\n 00000088 00000000                          56366+SMF30OPM DC    BL4'0'                 Number of OpenMVS Process         04-IFASMFR3\n                                            56367+*                                     Sections in Subsequent Records\n                                            56368+*                                                                  @0OC\n 0000008C 00000000                          56369+SMF30UDO DC    F'0'                   Offset of Usage Sections     @06A 04-IFASMFR3\n 00000090 0000                              56370+SMF30UDL DC    XL2'0'                 Length of Usage Section      @06A 04-IFASMFR3\n 00000092 0000                              56371+SMF30UDN DC    XL2'0'                 Number of Usage Sections in  @06C 04-IFASMFR3\n                                            56372+*                                     This Record                  @06A\n 00000094 00000000                          56373+SMF30UDS DC    F'0'                   Number of Usage Sections in  @06C 04-IFASMFR3\n                                            56374+*                                     Subsequent Records           @06A\n 00000098 00000000                          56375+SMF30RMO DC    BL4'0'                 Offset of first ARM Section       04-IFASMFR3\n                                            56376+*                                     from beginning of record\n                                            56377+*                                     (including the RDW)          @L3A\n 0000009C 0000                              56378+SMF30RML DC    BL2'0'                 Length of each ARM Section        04-IFASMFR3\n                                            56379+*                                     on the record                @L3A\n 0000009E 0000                              56380+SMF30RMN DC    BL2'0'                 Number of ARM sections on         04-IFASMFR3\n                                            56381+*                                     this record                  @L3A\n 000000A0 00000000                          56382+SMF30RMS DC    BL4'0'                 Number of ARM sections on         04-IFASMFR3\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  104\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           56383+*                                     subsequent records           @L3A\n 000000A4 00000000                          56384+SMF30MOF DC    BL4'0'                 Offset to MultiSystem Enclave     04-IFASMFR3\n                                            56385+*                                     Remote System Data section.  @LFA\n 000000A8 0000                              56386+SMF30MLN DC    BL2'0'                 Length of MultiSystem Enclave     04-IFASMFR3\n                                            56387+*                                     Remote System Data section   @LFA\n 000000AA 0000                              56388+SMF30MNO DC    BL2'0'                 Number of MultiSystem Enclave     04-IFASMFR3\n                                            56389+*                                     Remote System Data sections\n                                            56390+*                                     in this record.              @LFA\n 000000AC 00000000                          56391+SMF30MOS DC    BL4'0'                 Number of MultiSystem Enclave     04-IFASMFR3\n                                            56392+*                                     Remote System Data sections\n                                            56393+*                                     in subsequent records.       @LFA\n                                            56394+*\n                                            56395+*        PRODUCT OR SUBSYSTEM SECTION                          @G742PJW\n                                            56396+*\n 00000000                00000000 00000026  56397+SMF30PSS DSECT ,                                               @G742PJW 04-IFASMFR3\n 00000000 0000                              56398+SMF30TYP DC    BL2'0'            SUB TYPE IDENTIFICATION FOR            04-IFASMFR3\n                                            56399+*                                  TYPE 30                     @G742PJW\n                                            56400+*                                  1 = JOB START               @G742PJW\n                                            56401+*                                  2 = INTERVAL RECORD         @G742PJW\n                                            56402+*                                  3 = STEP TERMINATION DELTA\n                                            56403+*                                  PRODUCED ONLY WHEN INTERVAL\n                                            56404+*                                  ACCOUNTING IS SPECIFIED. THE DATA\n                                            56405+*                                  REPRESENTS ACTIVITY SINCE THE LAST\n                                            56406+*                                  INTERVAL WAS WRITTEN.       @G742PJW\n                                            56407+*                                  4 = STEP TOTAL              @G744PJW\n                                            56408+*                                  5 = JOB TERMINATION         @G742PJW\n                                            56409+*                                  6 = SYSTEM ADDRESS SPACE    @G742PJW\n 00000002 F040                              56410+SMF30RS1 DC    CL2'0'            RESERVED                      @G744PJW 04-IFASMFR3\n 00000004 F040                              56411+SMF30RVN DC    CL2'0'            RECORD VERSION NUMBER C'05'       @D2C 04-IFASMFR3\n                                            56412+*                                VALUE          MEANING\n                                            56413+*\n                                            56414+*                                  5            MVS/SP VERSION 5\n                                            56415+*                                  4            MVS/SP VERSION 4\n                                            56416+*                                  3            MVS/SP VERSION 3\n                                            56417+*                                  2            MVS/SP VERSION 2\n                                            56418+*                                  1            VS2\n 00000006 F040404040404040                  56419+SMF30PNM DC    CL8'0'            SUBSYTEM OR PRODUCT NAME- SMF @G742PJW 04-IFASMFR3\n 0000000E 4040404040404040                  56420+SMF30OSL DC    CL8' '            MVS PRODUCT LEVEL                 @DOA 04-IFASMFR3\n 00000016 4040404040404040                  56421+SMF30SYN DC    CL8' '            Current System Name Value         @L3A 04-IFASMFR3\n                                            56422+*                                (from SYSNAME Parmlib Option)     @L3A\n 0000001E 4040404040404040                  56423+SMF30SYP DC    CL8' '            Sysplex name                      @05A 04-IFASMFR3\n                                            56424+*\n                                            56425+*        JOB / SESSION IDENTIFICATION                          @G742PJW\n                                            56426+*\n 00000000                00000000 000000BA  56427+SMF30ID  DSECT ,                                               @G742PJW 04-IFASMFR3\n 00000000 4040404040404040                  56428+SMF30JBN DC    CL8' '      JMRJOB      JOB OR SESSION NAME. THE JOB     04-IFASMFR3\n                                            56429+*                                      NAME AND THE TIME AND DATE THAT\n                                            56430+*                                      THE READER RECOGNIZED THE JOB\n                                            56431+*                                      CARD FOR THIS JOB CONSTITUTE\n                                            56432+*                                      THE JOB LOG IDENTIFICATION.\n                                            56433+*                                                              @G742PJW\n 00000008 4040404040404040                  56434+SMF30PGM DC    CL8' '      SCTPGMNM    PROGRAM NAME (TAKEN FROM PGM=    04-IFASMFR3\n                                            56435+*                                      PARAMETER ON EXEC CARD.) IF\n                                            56436+*                                      A BACKWARD REFERENCE WAS USED\n                                            56437+*                                      (SCTTYPE EQUALS X'80') THEN\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  105\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           56438+*                                      THIS FIELD CONTAINS PGM=*.DD.\n                                            56439+*                                                              @G742PJW\n 00000010 4040404040404040                  56440+SMF30STM DC    CL8' '      SCTSNAME    STEP NAME (TAKEN FROM NAME ON    04-IFASMFR3\n                                            56441+*                                      EXEC CARD)              @G742PJW\n 00000018 4040404040404040                  56442+SMF30UIF DC    CL8' '      JMRUSEID    User identification (taken       04-IFASMFR3\n                                            56443+*                                      from common exit parameter\n                                            56444+*                                      area, not from USER= parameter\n                                            56445+*                                      on the job statement)       @0FC\n 00000020 4040404040404040                  56446+SMF30JNM DC    CL8' '      SSIB        JES JOB IDENTIFIER      @G742PJW 04-IFASMFR3\n 00000028 0000                              56447+SMF30STN DC    BL2'0'      SCTSNUMB    STEP NUMBER (FIRST STEP = 1,     04-IFASMFR3\n                                            56448+*                                      ETC.)                       @LQC\n 0000002A F0                                56449+SMF30CLS DC    CL1'0'      JCTJCSMF    JOB CLASS. ZERO FOR TSO SESSION  04-IFASMFR3\n                                            56450+*                                      OR STARTED TASKS        @G742PJW\n 0000002B 00                                56451+SMF30JF1 DC    BL1'0'                  Job / Session ID section flag    04-IFASMFR3\n                                            56452+*                                                                  @PBC\n                         00000080           56453+SMF30PGF EQU  X'80'                    SMF30PGN is invalid         @PBA 04-IFASMFR3\n 0000002C 0000                              56454+SMF30PGN DC    BL2'0'      OUCBNPG     Job performance group number     04-IFASMFR3\n                                            56455+*                                      - Valid only if workload    @L2A\n                                            56456+*                                        management compatibility  @L2A\n                                            56457+*                                        mode in effect.           @L2A\n                                            56458+*                                      - Zero if workload          @L2A\n                                            56459+*                                        management goal mode in   @L2A\n                                            56460+*                                        effect when the Type 30   @L2A\n                                            56461+*                                        is generated.             @L2A\n                                            56462+*                                                              @G742PJW\n 0000002E 0000                              56463+SMF30JPT DC    BL2'0'      JCTJPRTY    JES INPUT PRIORITY. IF NO VALUE  04-IFASMFR3\n                                            56464+*                                      IS SPECIFIED FOR THE PRTY\n                                            56465+*                                      PARAMETER ON THE JOB CARD, THIS\n                                            56466+*                                      FIELD CONTAINS:\n                                            56467+*                                        * FOR JES3, THE DEFAULT\n                                            56468+*                                          PRIORITY SPECIFIED ON THE\n                                            56469+*                                          JES3 STANDARDS\n                                            56470+*                                          INITIALIZATION CARD\n                                            56471+*                                        * FOR JES2, A ZERO\n                                            56472+*                            NOTE: THAT JES2 DOES NOT USE THE PRIORITY\n                                            56473+*                                  VALUE REPORTED IN THE FIELD. (THE\n                                            56474+*                                  JES2 JOB SELECTION PRIORITY IS\n                                            56475+*                                  REQUESTED VIA THE JES2 PRIORITY\n                                            56476+*                                  CONTROL STATEMENT.)\n 00000030 00000000                          56477+SMF30AST DC    F'0'        TCTAST      DEVICE ALLOCATION START TIME     04-IFASMFR3\n                                            56478+*                                      IN HUNDREDTHS OF A SECOND\n                                            56479+*                                                              @G742PJW\n 00000034 00000000                          56480+SMF30PPS DC    F'0'        TCTPPST     PROBLEM PROGRAM START TIME       04-IFASMFR3\n                                            56481+*                                      IN HUNDREDTHS OF A SECOND\n                                            56482+*                                                              @G742PJW\n 00000038 00000000                          56483+SMF30SIT DC    F'0'        JCTJMRSS    TIME, IN HUNDREDTHS OF A SECOND  04-IFASMFR3\n                                            56484+*                                      INITIATOR SELECTED THIS STEP\n                                            56485+*                                      OR JOB                  @G742PJW\n 0000003C 0000000C                          56486+SMF30STD DC    PL4'0000'   JCTSSD      DATE INITIATOR SELECTED THIS     04-IFASMFR3\n                                            56487+*                                      STEP, IN THE FORM OcyydddF\n                                            56488+*                                      WHERE F IS THE SIGN     @G742PJW\n 00000040 00000000                          56489+SMF30RST DC    F'0'        JMRENTRY    TIME, IN HUNDREDTHS OF A SECOND  04-IFASMFR3\n                                            56490+*                                      READER RECOGNIZED THE JOB CARD\n                                            56491+*                                      FOR THIS JOB            @G742PJW\n 00000044 0000000C                          56492+SMF30RSD DC    PL4'0000'   JMREDATE    DATE READER RECOGNIZED THE JOB   04-IFASMFR3\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  106\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           56493+*                                      CARD FOR THIS JOB, IN THE FORM\n                                            56494+*                                      OcyydddF (WHERE F IS THE SIGN).\n                                            56495+*                                                              @G744PJW\n 00000048                                   56496+SMF30RDE DC    0CL8'0'                 READER END TIME/DATE    @G744PJW 04-IFASMFR3\n                                            56497+*\n 00000048 00000000                          56498+SMF30RET DC    F'0'                    TIME, IN HUNDREDTHS OF A SECOND, 04-IFASMFR3\n                                            56499+*                                      READER RECOGNIZED THE END OF THE\n                                            56500+*                                      JOB OR STARTED TASK (READER STOP\n                                            56501+*                                      TIME). FOR TSO THIS IS THE LOGON\n                                            56502+*                                      ENQUEUE TIME.\n 0000004C 0000000C                          56503+SMF30RED DC    PL4'0000'               DATE READER RECOGNIZED THE END   04-IFASMFR3\n                                            56504+*                                      OF THE BATCH JOB OR STARTED TASK\n                                            56505+*                                      (READER STOP DATE), IN THE FORM\n                                            56506+*                                      OcyydddF (WHERE F IS THE SIGN).\n                                            56507+*                                      FOR TSO IT IS THE LOGON ENQUEUE\n                                            56508+*                                      DATE.                   @G742PJW\n 00000050 4040404040404040                  56509+SMF30USR DC    CL20' '     ACTPRGNM    PROGRAMMERS NAME        @G742PJW 04-IFASMFR3\n 00000064 4040404040404040                  56510+SMF30GRP DC    CL8' '      ACEEGRPN    RACF GROUP ID. 0=RACF NOT ACTIVE 04-IFASMFR3\n                                            56511+*                                                              @G742PJW\n 0000006C 4040404040404040                  56512+SMF30RUD DC    CL8' '      ACEEUSRI    RACF USER ID. 0=RACF NOT ACTIVE  04-IFASMFR3\n                                            56513+*                                                              @G742PJW\n 00000074 4040404040404040                  56514+SMF30TID DC    CL8' '      ACEETRMF    RACF TERMINAL ID. THE FIELD IS   04-IFASMFR3\n                                            56515+*                                      ZERO IF RACF IS NOT ACTIVE OR\n                                            56516+*                                      THE USER IS NOT A TERMINAL USER.\n                                            56517+*                                                              @G724PJW\n 0000007C 4040404040404040                  56518+SMF30TSN DC    CL8' '      TSBTRMID    TERMINAL SYMBOLIC NAME      @DCA 04-IFASMFR3\n 00000084 4040404040404040                  56519+SMF30PSN DC    CL8' '      SCTSCLPC    THE NAME OF THE STEP THAT        04-IFASMFR3\n                                            56520+*                                      INVOKED THE PROCEDURE. THIS\n                                            56521+*                                      FIELD WILL BE BLANKS WHEN STEP\n                                            56522+*                                      IS NOT PART OF AN EXPANDED\n                                            56523+*                                      PROCEDURE.                  @08A\n 0000008C 4040404040404040                  56524+SMF30CL8 DC    CL8' '      LCTCLASS    8-CHARACTER JOB CLASS.  BLANK    04-IFASMFR3\n                                            56525+*                             OR       FOR TSO SESSION OR STARTED TASKS\n                                            56526+*                          JCTJCSMF    IF JES3 JOB CLASS SPECIFIED THEN\n                                            56527+*                                      OBTAINED FROM LCTCLASS, ELSE\n                                            56528+*                                      OBTAINED FROM JCTJCSMF.     @0LA\n 00000094 4040404040404040                  56529+SMF30ISS DC    CL8' '      TCTISS      Interval Start Time for          04-IFASMFR3\n                                            56530+*                                      Subtype 2 and 3 Records\n                                            56531+*                                      (STCK Format)               @DVA\n 0000009C 4040404040404040                  56532+SMF30IET DC    CL8' '      SMCXINTE    Interval End Time for            04-IFASMFR3\n                                            56533+*                                      Subtype 2, 3 and 6\n                                            56534+*                                      records. (STCK Format)      @LRA\n 000000A4 00000000                          56535+SMF30SSN DC    F'0'        SCTSSNUM    Sub-Step Number             @LQA 04-IFASMFR3\n 000000A8 4040404040404040                  56536+SMF30EXN DC    CL16' '                 OpenMVS Exec'ed program     @L5A 04-IFASMFR3\n                                            56537+*                                      name                        @L5A\n 000000B8 0000                              56538+SMF30ASI DC    H'0'        ASCBASID    Address space identifier    @PHA 04-IFASMFR3\n                                            56539+*\n                                            56540+*        I/O ACTIVITY SEGMENT                                  @G742PJW\n                                            56541+*\n 00000000                00000000 0000004C  56542+SMF30URA DSECT ,                                               @G742PJW 04-IFASMFR3\n 00000000 00000000                          56543+SMF30INP DC    F'0'        SCTSMF      NUMBER OF CARD IMAGE RECORDS IN  04-IFASMFR3\n                                            56544+*                                      DD DATE AND DD * DATA SETS\n                                            56545+*                                      READ BY THE READER FOR THE MAP.\n                                            56546+*                                      THIS FIELD IS NOT SET FOR\n                                            56547+*                                      SUBTYPES 2 OR 3.        @G724PJW\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  107\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000004 00000000                          56548+SMF30TEP DC    F'0'   D    ASCBIOSC    Total blocks transferred         04-IFASMFR3\n                                            56549+*                                      (Accumulated EXCP counts -\n                                            56550+*                                       valid up to 'FFFFFFFE'x,\n                                            56551+*                                       zero and invalid when\n                                            56552+*                                       SMF30TEF is set)           @0EC\n 00000008 00000000                          56553+SMF30TPT DC    F'0'   D    TCTLOUT     NUMBER OF TPUTS FOR A TSO        04-IFASMFR3\n                                            56554+*                                      SESSION. IF A BATCH JOB OR\n                                            56555+*                                      STARTED TASK SUCCESSFULLY\n                                            56556+*                                      PROCESSES TPUTs, THIS FIELD\n                                            56557+*                                      MIGHT BE NON-ZERO FOR BATCH JOBS\n                                            56558+*                                      OR STARTED TASKS.       @G724PJW\n 0000000C 00000000                          56559+SMF30TGT DC    F'0'   D    TCTLIN      NUMBER OF TGETS FOR A TSO        04-IFASMFR3\n                                            56560+*                                      SESSION.                @G742PJW\n 00000010 40                                56561+SMF30RDR DC    CL1' '      JMRRDR      READER DEVICE CLASS     @G742PJW 04-IFASMFR3\n                                            56562+*\n                                            56563+*                                      0-FOR TSO SESSIONS OR STARTED\n                                            56564+*                                        TASKS\n                                            56565+*\n 00000011 40                                56566+SMF30RDT DC    CL1' '      JMRRDR      READER DEVICE TYPE      @G742PJW 04-IFASMFR3\n                                            56567+*\n                                            56568+*                                      0-FOR TSO SESSIONS OR STARTED\n                                            56569+*                                        TASKS\n                                            56570+*\n 00000012 00000000                          56571+SMF30TCN DC    BL4'0'      ASCBDCTI    TOTAL DEVICE CONNECT TIME FOR    04-IFASMFR3\n                                            56572+*                                      THIS ADDRESS SPACE. FOR A DIV\n                                            56573+*                                      OBJECT, THIS FIELD CONTAINS\n                                            56574+*                                      TOTAL DEVICE CONNECT TIME FOR\n                                            56575+*                                      READS, WRITES AND RE-READS.\n                                            56576+*                                                              @G860P27\n 00000016 00                                56577+SMF30DCF DC    BL1'0'                   DEVICE CONNECT FLAGS   @ZMC2889 04-IFASMFR3\n                         00000080           56578+SMF30MFL EQU   X'80'                    DEVICE CONNECT TIME MAY BE      04-IFASMFR3\n                                            56579+*                                       INCORRECT              @G860P27\n                                            56580+*\n                                            56581+*                                       IF THIS FLAG IS SET, SRM\n                                            56582+*                                       DISABLED THE CHANNEL\n                                            56583+*                                       MEASUREMENT WHILE THE JOB WAS\n                                            56584+*                                       RUNNING. IF CHANNEL\n                                            56585+*                                       MEASUREMENT IS DISABLED, DEVICE\n                                            56586+*                                       CONNECT TIME IS NOT RECORDED.\n                                            56587+*                                       THUS, IF THIS BIT IS SET,\n                                            56588+*                                       SMF30TCN AND SMF30DCT REFLECT\n                                            56589+*                                       LESS THAN THE ACTUAL TOTAL\n                                            56590+*                                       CONNECT TIME.\n                         00000040           56591+SMF30IIN EQU   X'40'                    The following fields contain    04-IFASMFR3\n                                            56592+*                                       incomplete data: (SRM could\n                                            56593+*                                       not deliver deltas or values\n                                            56594+*                                       for this interval)\n                                            56595+*                                       SMF30AIC  SMF30EIC\n                                            56596+*                                       SMF30AID  SMF30EID\n                                            56597+*                                       SMF30AIW  SMF30EIW\n                                            56598+*                                       SMF30AIS  SMF30EIS         @PBA\n                         00000020           56599+SMF30TEF EQU   X'20'                    SMF30TEP invalid when set  @0EA 04-IFASMFR3\n 00000017 F04040                            56600+SMF30RS2 DC    CL3'0'                   RESERVED               @ZMC2889 04-IFASMFR3\n 0000001A 0000                              56601+SMF30RSB DC    H'0'                     RESERVED FOR BOUNDARY      @D9A 04-IFASMFR3\n                                            56602+*                                        ALIGNMENT                 @D9A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  108\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000001C 00000000                          56603+SMF30TRR DC    F'0'        ASSBASRR-   TOTAL ADDRESS SPACE RE-READ @D9A 04-IFASMFR3\n                                            56604+*                           TCTRRCT    COUNT.                      @D9A\n 00000020 00000000                          56605+SMF30AIC DC    F'0'                    DASD I/O connect time for        04-IFASMFR3\n                                            56606+*                                      address space plus dependent\n                                            56607+*                                      enclaves\n                                            56608+*                                      in 128-microsecond units    @DWA\n 00000024 00000000                          56609+SMF30AID DC    F'0'                    DASD I/O disconnect time for     04-IFASMFR3\n                                            56610+*                                      address space plus dependent\n                                            56611+*                                      enclaves\n                                            56612+*                                      in 128-microsecond units    @DWA\n 00000028 00000000                          56613+SMF30AIW DC    F'0'                    DASD I/O pending plus control    04-IFASMFR3\n                                            56614+*                                      unit queue time for\n                                            56615+*                                      address space plus dependent\n                                            56616+*                                      enclaves\n                                            56617+*                                      in 128-microsecond units    @DWA\n 0000002C 00000000                          56618+SMF30AIS DC    F'0'                    DASD I/O start subchannel count  04-IFASMFR3\n                                            56619+*                                      for address space plus dependent\n                                            56620+*                                      enclaves\n 00000030 00000000                          56621+SMF30EIC DC    F'0'                    DASD I/O connect time for        04-IFASMFR3\n                                            56622+*                                      independent enclaves\n                                            56623+*                                      owned by the address space\n                                            56624+*                                      in 128-microsecond units    @DWA\n 00000034 00000000                          56625+SMF30EID DC    F'0'                    DASD I/O disconnect time for     04-IFASMFR3\n                                            56626+*                                      independent enclaves\n                                            56627+*                                      owned by the address space\n                                            56628+*                                      in 128-microsecond units    @DWA\n 00000038 00000000                          56629+SMF30EIW DC    F'0'                    DASD I/O pending plus control    04-IFASMFR3\n                                            56630+*                                      unit queue time for\n                                            56631+*                                      independent enclaves\n                                            56632+*                                      owned by the address space\n                                            56633+*                                      in 128-microsecond units    @DWA\n 0000003C 00000000                          56634+SMF30EIS DC    F'0'                    DASD I/O start subchannel count  04-IFASMFR3\n                                            56635+*                                      for independent enclaves\n                                            56636+*                                                                  @DWA\n 00000040 0000000000000000                  56637+SMF30TEX DC    D'0'   D    ASCBIOSX    Total blocks transferred         04-IFASMFR3\n                                            56638+*                                      - Accumulated EXCP counts -\n                                            56639+*                                      This is the 8-byte equivalent\n                                            56640+*                                      of SMF30TEP. This field remains\n                                            56641+*                                      valid after SMF30TEP is\n                                            56642+*                                      invalid                     @0FA\n 00000048 00000000                          56643+SMF30DAS DC    F'0'                    Number of DDs which had their    04-IFASMFR3\n                                            56644+*                                      DD Accounting information\n                                            56645+*                                      suppressed                  @LXA\n                                            56646+*\n                                            56647+*        COMPLETION SEGMENT                                    @G742PJW\n                                            56648+*\n 00000000                00000000 00000008  56649+SMF30CMP DSECT ,                                               @G742PJW 04-IFASMFR3\n 00000000 0000                              56650+SMF30SCC DC    BL2'0'      TCTCMPC     STEP COMPLETION CODE    @G742PJW 04-IFASMFR3\n                                            56651+*\n                                            56652+*                                      WHERE X'Occc' INDICATES SYSTEM\n                                            56653+*                                      ABEND IN THE JOB STEP WHERE ccc\n                                            56654+*                                      IS THE SYSTEM ABEND CODE. (SEE\n                                            56655+*                                      SYSTEM CODES).\n                                            56656+*\n                                            56657+*                                      WHERE X'8ccc' INDICATES USER\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  109\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           56658+*                                      ABEND IN THE JOB STEP WHERE ccc\n                                            56659+*                                      IS THE USER ABEND CODE.\n                                            56660+*\n                                            56661+*                                      WHERE 'nnnn' INDICATES NORMAL\n                                            56662+*                                      COMPLETION WHERE nnnn IS THE\n                                            56663+*                                      CONTENTS OF THE TWO LOW-ORDER\n                                            56664+*                                      BYTES IN REGISTER 15 AT\n                                            56665+*                                      TERMINATION.\n                                            56666+*\n                                            56667+*                                      X'0000' INDICATES EITHER:\n                                            56668+*\n                                            56669+*                                      1. THE JOB STEP WAS FLUSHED\n                                            56670+*                                         (NOT PROCESSED) BECAUSE OF AN\n                                            56671+*                                         ERROR DURING ALLOCATION OR IN\n                                            56672+*                                         A PRECEDING JOB STEP, OR\n                                            56673+*\n                                            56674+*                                      2. NORMAL COMPLETION CODE WITH\n                                            56675+*                                         A RETURN CODE OF 0.\n                                            56676+*\n                         00000080           56677+SMF30UAB EQU   X'80'                   BIT0 - USER ABEND          @PEA  04-IFASMFR3\n 00000002 0000                              56678+SMF30STI DC    2BL1'0'                 STEP TERMINATION INDICATOR       04-IFASMFR3\n                                            56679+*                                                              @G742PJW\n                         00000080           56680+SMF30RS3 EQU   X'80'                   BIT0 - RESERVED            @PEC  04-IFASMFR3\n                         00000040           56681+SMF30UJV EQU   X'40'       JCTJMRCL    BIT1 - CANCELLED BY EXIT IEFUJV  04-IFASMFR3\n                                            56682+*                                                              @G742PJW\n                         00000020           56683+SMF30UJI EQU   X'20'                   BIT2 - CANCELLED BY EXIT IEFUJI  04-IFASMFR3\n                                            56684+*                                                              @G742PJW\n                         00000010           56685+SMF30USI EQU   X'10'                   BIT3 - CANCELLED BY EXIT IEFUSI  04-IFASMFR3\n                                            56686+*                                                              @G742PJW\n                         00000008           56687+SMF30TRT EQU   X'08'                   BIT4 -CANCELLED BY EXIT IEFACTRT 04-IFASMFR3\n                                            56688+*                                                              @G742PJW\n                         00000004           56689+SMF30SRS EQU   X'04'                   BIT5 - STEP IS TO BE RESTARTED   04-IFASMFR3\n                                            56690+*                                                              @G742PJW\n                         00000002           56691+SMF30ABD EQU   X'02'       TCBFA       BIT6 - IF ZERO, NORMAL           04-IFASMFR3\n                                            56692+*                                             COMPLETION. IF 1, ABEND.\n                                            56693+*                                             IF STEP COMPLETION CODE\n                                            56694+*                                             EQUALS 0322 OR 0522,\n                                            56695+*                                             IEFUTL CAUSED ABEND. IF\n                                            56696+*                                             STEP COMPLETION CODE\n                                            56697+*                                             EQUALS 0722, IEFUSO\n                                            56698+*                                             CAUSED ABEND.\n                         00000001           56699+SMF30FLH EQU   X'01'       TCTHWM      BIT7 - IF 0, NORMAL COMPLETION.  04-IFASMFR3\n                                            56700+*                                             IF 1, STEP WAS FLUSHED.\n                                            56701+*                                                              @G742PJW\n                         00000080           56702+SMF30EXF EQU   X'80'       TCTIEX      BIT0 - EXCP COUNTS MIGHT BE      04-IFASMFR3\n                                            56703+*                                             INCORRECT BECAUSE THE\n                                            56704+*                                             RECORD DID NOT INCLUDE\n                                            56705+*                                             ALL THE DD STATEMENTS.\n                                            56706+*                                                              @G742PJW\n                         00000040           56707+SMF30ISK EQU   X'40'       TCTISK      BIT1 - PREVIOUS INTERVAL RECORD  04-IFASMFR3\n                                            56708+*                                             WAS NOT WRITTEN BECAUSE\n                                            56709+*                                             AN ERROR OCCURED. THE\n                                            56710+*                                             CUMULATIVE COUNT MIGHT BE\n                                            56711+*                                             INCORRECT BECAUSE THE\n                                            56712+*                                             COUNTERS WERE CLEARED.\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  110\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           56713+*                                                              @G742PJW\n                         00000020           56714+SMF30NEX EQU   X'20'                   BIT2 - EXCP SECTIONS NOT MERGED  04-IFASMFR3\n                                            56715+*                                                              @ZA44071\n                         00000010           56716+SMF30SYE EQU   X'10'                   BIT3 - STEP ENDED WITH POST      04-IFASMFR3\n                                            56717+*                                        EXECUTION ERROR           @0MA\n                         00000008           56718+SMF30ERE EQU   X'08'                   BIT4 - STEP ENDED DUE TO OpenMVS 04-IFASMFR3\n                                            56719+*                                             EXEC() FUNCTION REQUEST\n                                            56720+*                                                                  @0OC\n                         00000004           56721+SMF30CDE EQU   X'04'                   BIT5 - JOB abnormally ended @0NA 04-IFASMFR3\n                                            56722+*                                      because of COND= condition  @0NA\n                                            56723+*                                      on the JOB card. This flag  @0NA\n                                            56724+*                                      will be set on in the       @0NA\n                                            56725+*                                      subtype 5 job termination   @0NA\n                                            56726+*                                      record only.                @0NA\n                                            56727+*                                                                  @0NA\n                                            56728+*                                      BITS 6-7 RESERVED           @0NC\n 00000004 00000000                          56729+SMF30ARC DC    F'0'         TCBARC     ABEND REASON CODE       @G860P27 04-IFASMFR3\n                                            56730+*\n                                            56731+*        CPU ACCOUNTING SEGMENT                                @G742PJW\n                                            56732+*\n 00000000                00000000 000000B0  56733+SMF30CAS DSECT ,                                               @G742PJW 04-IFASMFR3\n 00000000 0000                              56734+SMF30PTY DC   BL2'0'       SCTSDP      ADDRESS SPACE DISPATCHING        04-IFASMFR3\n                                            56735+*                                      PRIORITY (TAKEN FROM DPRTY=\n                                            56736+*                                      PARAMETER ON EXEC CARD OR THE\n                                            56737+*                                      APG VALUE IN CVTAPG).   @G742PJW\n                                            56738+*                                      - Valid only if workload    @L2A\n                                            56739+*                                        management compatibility  @L2A\n                                            56740+*                                        mode in effect.           @L2A\n                                            56741+*                                      - Zero if workload          @L2A\n                                            56742+*                                        management goal mode in   @L2A\n                                            56743+*                                        effect when the Type 30   @L2A\n                                            56744+*                                        is generated.             @L2A\n 00000002 0000                              56745+SMF30RV3 DC   BL2'0'                   RESERVED                @G744PJW 04-IFASMFR3\n 00000004                00000004 00000002  56746+         ORG SMF30RV3                                                   04-IFASMFR3\n 00000002 0000                              56747+SMF30TFL DC   2BL1'0'                  TIMER FLAGS-ALIAS           @0KA 04-IFASMFR3\n                         00000080           56748+SMF30TFO EQU  X'80'                    BIT 0 - TIMER FLAGS ARE USED@0KA 04-IFASMFR3\n                         00000040           56749+SMF30CTF EQU  X'40'                    BIT 1 - SMF30CPT INVALID    @0KA 04-IFASMFR3\n                         00000020           56750+SMF30CSF EQU  X'20'                    BIT 2 - SMF30CPS INVALID    @0KA 04-IFASMFR3\n                         00000010           56751+SMF30VUF EQU  X'10'                    BIT 3 - SMF30JVU INVALID    @0KA 04-IFASMFR3\n                         00000008           56752+SMF30VAF EQU  X'08'                    BIT 4 - SMF30JVA INVALID    @0KA 04-IFASMFR3\n                         00000004           56753+SMF30ISF EQU  X'04'                    BIT 5 - SMF30ISB INVALID    @0KA 04-IFASMFR3\n                         00000002           56754+SMF30ICF EQU  X'02'                    BIT 6 - SMF30ICU INVALID    @0KA 04-IFASMFR3\n                         00000001           56755+SMF30IVF EQU  X'01'                    BIT 7 - SMF30IVU INVALID    @0KA 04-IFASMFR3\n                         00000080           56756+SMF30IAF EQU  X'80'                    BIT 0 - SMF30IVA INVALID    @0KA 04-IFASMFR3\n                         00000040           56757+SMF30IIF EQU  X'40'                    BIT 1 - SMF30IIP INVALID    @0KA 04-IFASMFR3\n                         00000020           56758+SMF30HPF EQU  X'20'                    BIT 2 - SMF30HPT INVALID    @0KA 04-IFASMFR3\n                         00000010           56759+SMF30RCF EQU  X'10'                    BIT 3 - SMF30RCT INVALID    @0KA 04-IFASMFR3\n                         00000008           56760+SMF30ASF EQU  X'08'                    BIT 4 - SMF30ASR INVALID    @L7A 04-IFASMFR3\n                         00000004           56761+SMF30ENF EQU  X'04'                    BIT 5 - SMF30ENC INVALID    @L7A 04-IFASMFR3\n                         00000002           56762+SMF30DEF EQU  X'02'                    BIT 6 - SMF30DET INVALID    @DWA 04-IFASMFR3\n                         00000001           56763+SMF30CIN EQU  X'01'                    BIT 7 - SMF30CEP INVALID    @PBA 04-IFASMFR3\n 00000004 00000000                          56764+SMF30CPT DC   F'0'   D    ASCBEJST OR  STEP CPU TIME UNDER TCB @G744PJW 04-IFASMFR3\n                                            56765+*                        (ACTJTIME     IN HUNDREDTHS OF A      @G744PJW\n                                            56766+*                         + ASSBASST   SECOND (INCLUDING ENCLAVE   @L7C\n                                            56767+*                         + RQSVECPT   TIME).  THIS TIME WAS       @L7A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  111\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           56768+*                                      FORMERLY RECORDED IN RECORD\n                                            56769+*                                      TYPES 4,5,34 AND 35.\n                                            56770+*                                      Note that time on an IFA\n                                            56771+*                                      is not included.\n                                            56772+*                         - TCTEJST)                           @G744PJW\n                                            56773+*                                      SMF30CPT only includes the\n                                            56774+*                                      consumption of standard CPs, not\n                                            56775+*                                      those of zAAPs and/or zIIPs\n 00000008 00000000                          56776+SMF30CPS DC   F'0'   D    ASCBSRBT OR  STEP CPU TIME UNDER SRB @G744PJW 04-IFASMFR3\n                                            56777+*                        (SCTSRBT      IN HUNDREDTHS OF A      @G744PJW\n                                            56778+*                                      SECOND\n                                            56779+*                         - TCTSRBT)                           @G744PJW\n 0000000C 00000000                          56780+SMF30ICU DC   F'0'   D    ASCBEJST +   INITIATOR CPU TIME UNDER TCB     04-IFASMFR3\n                                            56781+*                         TCTITCB      IN HUNDREDTHS OF A SECOND\n                                            56782+*                                                             @G744P2W\n                                            56783+*                                      NOTE: This is the total working\n                                            56784+*                                      CPU time for the initiator under\n                                            56785+*                                      the TCB. The values in the\n                                            56786+*                                      following fields are included in\n                                            56787+*                                      the value in SMF30ICU:\n                                            56788+*                                      SMF30ICU_Step_Term (which is the\n                                            56789+*                                      time spent in termination of the\n                                            56790+*                                      previous step) and\n                                            56791+*                                      SMF30ICU_Step_Init (which is the\n                                            56792+*                                      time spent in initialization of\n                                            56793+*                                      the current step).         @PLC\n 00000010 00000000                          56794+SMF30ISB DC   F'0'   D    ASCBSRBT +   INITIATOR CPU TIME UNDER SRB     04-IFASMFR3\n                                            56795+*                         TCTISRB      IN HUNDREDTHS OF A      @G744PJW\n                                            56796+*                                      SECOND\n                                            56797+*                                      NOTE: This is the total working\n                                            56798+*                                      CPU time for the initiator under\n                                            56799+*                                      any SRB. The values in the\n                                            56800+*                                      following fields are included in\n                                            56801+*                                      the value in SMF30SBU:\n                                            56802+*                                      SMF30ISB_Step_Term (which is the\n                                            56803+*                                      time spent in termination of the\n                                            56804+*                                      previous step) and\n                                            56805+*                                      SMF30ISB_Step_Init (which is the\n                                            56806+*                                      time spent in initialization of\n                                            56807+*                                      the current step).          @PLC\n 00000014 00000000                          56808+SMF30JVU DC   F'0'   D    ASCBEVST OR  STEP VECTOR USAGE TIME      @H4A 04-IFASMFR3\n                                            56809+*                        (SCTTVFUT     IN HUNDREDTHS OF A SECOND   @H4A\n                                            56810+*                         -TCTEVFUT)                               @H4A\n 00000018 00000000                          56811+SMF30IVU DC   F'0'   D    ASCBEVST +   INITIATOR VECTOR USAGE TIME      04-IFASMFR3\n                                            56812+*                         TCTIVFUT     IN HUNDREDTHS OF A SECOND   @H4A\n 0000001C 00000000                          56813+SMF30JVA DC   F'0'   D    ASCBVFAT OR  STEP VECTOR AFFINITY TIME   @D6A 04-IFASMFR3\n                                            56814+*                        (SCTTVFAT     IN HUNDREDTHS OF A SECOND   @D6A\n                                            56815+*                         -TCTEVFAT)                               @D6A\n 00000020 00000000                          56816+SMF30IVA DC   F'0'   D    ASCBVFAT +   INITIATOR VECTOR AFFINITY TIME   04-IFASMFR3\n                                            56817+*                         TCTIVFAT     IN HUNDREDTHS OF A SECOND   @D6A\n 00000024 00000000                          56818+SMF30IST DC    F'0'                    INTERVAL START TIME, IN          04-IFASMFR3\n                                            56819+*                                      HUNDREDTHS OF A SECOND, FOR\n                                            56820+*                                      SUBTYPE 2 AND 3 RECORDS     @L4A\n 00000028 0000000C                          56821+SMF30IDT DC    PL4'0000'               INTERVAL START DATE FOR     @L4A 04-IFASMFR3\n                                            56822+*                                      TYPE 30 SUBTYPE 2 AND 3\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  112\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           56823+*                                      RECORDS. IN THE FORM\n                                            56824+*                                      OcyydddF (where F is the sign)\n 0000002C 00000000                          56825+SMF30IIP DC   F'0'   D    ASSBIIPT     AMOUNT OF PROCESSOR TIME USED TO 04-IFASMFR3\n                                            56826+*                         - TCTEIIP    PROCESS I/O INTERRUPTS IN\n                                            56827+*                                      HUNDREDTHS OF A SECOND      @LBA\n 00000030 00000000                          56828+SMF30RCT DC   F'0'   D    TCBTTIME     AMOUNT OF PROCESSOR TIME USED BY 04-IFASMFR3\n                                            56829+*                         - TCTERCT    REGION CONTROL TASK (RCT)\n                                            56830+*                                      IN HUNDREDTHS OF A SECOND   @LBA\n 00000034 00000000                          56831+SMF30HPT DC   F'0'   D    ASSBHST      PROCESSOR TIME CONSUMED FOR THE  04-IFASMFR3\n                                            56832+*                         - TCTEHPT    STEP, IN HUNDREDTHS OF A SECOND,\n                                            56833+*                                      TO SUPPORT REQUESTS FOR DATA TO\n                                            56834+*                                      BE TRANSFERRED BETWEEN A\n                                            56835+*                                      HIPERSPACE AND AN ADDRESS SPACE,\n                                            56836+*                                      WHEN THE HIPERSPACE IS BACKED\n                                            56837+*                                      BY EXPANDED STORAGE. IT MAY VARY\n                                            56838+*                                      DEPENDING ON THE AVAILABILITY\n                                            56839+*                                      OF EXPANDED STORAGE.        @LBA\n 00000038 00000000                          56840+SMF30CSC DC   F'0'   D    ASSBFSC      INTEGRATED CRYPTOGRAPHIC SERVICE 04-IFASMFR3\n                                            56841+*                         - TCTANSC    FACILITY (ICSF) SERVICE\n                                            56842+*                                      COUNT                       @TEA\n 0000003C 00000000                          56843+SMF30DMI DC   F'0'   D    ASSBTPMT     Number of pages moved with ADMF  04-IFASMFR3\n                                            56844+*                         - TCTADMFW   WRITE operation             @03A\n 00000040 00000000                          56845+SMF30DMO DC   F'0'   D    ASSBTPMA     Number of pages moved with ADMF  04-IFASMFR3\n                                            56846+*                         - TCTADMFR   READ operation              @03A\n 00000044 00000000                          56847+SMF30ASR DC   F'0'   D    ASSBASST     Additional CPU time, in          04-IFASMFR3\n                                            56848+*                                      hundredths of a second,\n                                            56849+*                                      accumulated by the Preemptable\n                                            56850+*                                      SRB's and Client SRB's for this\n                                            56851+*                                      job.  This value is also\n                                            56852+*                                      contained within the value in\n                                            56853+*                                      SMF30CPT.                   @L7A\n 00000048 00000000                          56854+SMF30ENC DC   F'0'   D    RQSVECPT     Independent                      04-IFASMFR3\n                                            56855+*                                      enclave CPU time for the step\n                                            56856+*                                      (or job) in hundredths of a\n                                            56857+*                                      second.  This value is also\n                                            56858+*                                      contained within the value in\n                                            56859+*                                      SMF30CPT.\n                                            56860+*                                      Note that time on zAAP and zIIP\n                                            56861+*                                      is not included.            @H5C\n 0000004C 00000000                          56862+SMF30DET DC   F'0'   D    RQSVDET      Dependent                        04-IFASMFR3\n                                            56863+*                                      enclave CPU time for the step\n                                            56864+*                                      (or job) in hundredths of a\n                                            56865+*                                      second.  This value is also\n                                            56866+*                                      contained within the value in\n                                            56867+*                                      SMF30CPT.\n                                            56868+*                                      Note that time on zAAP and zIIP\n                                            56869+*                                      is not included.            @H5C\n                                            56870+*\n 00000050 00000000                          56871+SMF30CEP DC   F'0'        RqsvCPUtimeConsumedWhileENQpromoted           04-IFASMFR3\n                                            56872+*                                      CPU time consumed for an A/S\n                                            56873+*                                      or Job while enqueue promoted.\n                                            56874+*                                      1.024 milliseconds unit\n                                            56875+*                                      Unlike SMF30CEPI, this field\n                                            56876+*                                      is \"cumulative\" even for\n                                            56877+*                                      interval records.\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  113\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           56878+*                                                                  @PAC\n 00000054 00                                56879+SMF30TF2 DC   1BL1'0'                  More failure flags. Each flag   X04-IFASMFR3\n                                                 +                                       name is of the form xxxx_F and  X\n                                                 +                                       indicates that field xxxx is    X\n                                                 +                                       not valid.                  @H6C\n                         00000080           56880+SMF30_TIME_ON_IFA_F                EQU X'80'                       @H5A 04-IFASMFR3\n                         00000040           56881+SMF30_ENCLAVE_TIME_ON_IFA_F        EQU X'40'                       @H5A 04-IFASMFR3\n                         00000020           56882+SMF30_DEP_ENCLAVE_TIME_ON_IFA_F    EQU X'20'                       @H5A 04-IFASMFR3\n                         00000010           56883+SMF30_TIME_IFA_ON_CP_F             EQU X'10'                       @H5A 04-IFASMFR3\n                         00000008           56884+SMF30_ENCLAVE_TIME_IFA_ON_CP_F     EQU X'08'                       @H5A 04-IFASMFR3\n                         00000004           56885+SMF30_DEP_ENCLAVE_TIME_IFA_ON_CP_F EQU X'04'                       @H5A 04-IFASMFR3\n                         00000002           56886+SMF30_CEPI_F                       EQU X'02' Failure in SMF30CEPI  @PAA 04-IFASMFR3\n                         00000001           56887+SMF30CRP_F                         EQU X'01' Failure in SMF30CRP   @LJA 04-IFASMFR3\n 00000055 00                                56888+SMF30T32 DC   1BL1'0'                  More failure flags. Each flag   X04-IFASMFR3\n                                                 +                                       name is of the form xxxx_F and  X\n                                                 +                                       indicates that field xxxx is    X\n                                                 +                                       not valid.                  @H6A\n                         00000080           56889+SMF30_TIME_ON_zIIP_F               EQU X'80'                       @H6A 04-IFASMFR3\n                         00000080           56890+SMF30_TIME_ON_SUP_F                EQU X'80'                       @H6A 04-IFASMFR3\n                         00000040           56891+SMF30_ENCLAVE_TIME_ON_zIIP_F       EQU X'40'                       @H6A 04-IFASMFR3\n                         00000040           56892+SMF30_ENCLAVE_TIME_ON_SUP_F        EQU X'40'                       @H6A 04-IFASMFR3\n                         00000020           56893+SMF30_DEPENC_TIME_ON_zIIP_F        EQU X'20'                       @H6A 04-IFASMFR3\n                         00000020           56894+SMF30_DEPENC_TIME_ON_SUP_F         EQU X'20'                       @H6A 04-IFASMFR3\n                         00000010           56895+SMF30_TIME_zIIP_ON_CP_F            EQU X'10'                       @H6A 04-IFASMFR3\n                         00000010           56896+SMF30_TIME_SUP_ON_CP_F             EQU X'10'                       @H6A 04-IFASMFR3\n                         00000008           56897+SMF30_ENCLAVE_TIME_zIIP_ON_CP_F    EQU X'08'                       @H6A 04-IFASMFR3\n                         00000008           56898+SMF30_ENCLAVE_TIME_SUP_ON_CP_F     EQU X'08'                       @H6A 04-IFASMFR3\n                         00000004           56899+SMF30_DEPENC_TIME_zIIP_ON_CP_F EQU X'04'                           @H6A 04-IFASMFR3\n                         00000004           56900+SMF30_DEPENC_TIME_SUP_ON_CP_F EQU X'04'                            @H6A 04-IFASMFR3\n 00000056 00                                56901+SMF30T33 DC   1BL1'0'                  More failure flags. Each flag   X04-IFASMFR3\n                                                 +                                       name is of the form xxxx_F and  X\n                                                 +                                       indicates that field xxxx is    X\n                                                 +                                       not valid.                  @H6A\n                         00000080           56902+SMF30_ENCLAVE_TIME_ON_zIIP_N_F     EQU X'80'                       @H6A 04-IFASMFR3\n                         00000080           56903+SMF30_ENCLAVE_TIME_ON_SUP_N_F      EQU X'80'                       @H6A 04-IFASMFR3\n                         00000040           56904+SMF30_DEPENC_TIME_ON_zIIP_N_F      EQU X'40'                       @H6A 04-IFASMFR3\n                         00000040           56905+SMF30_DEPENC_TIME_ON_SUP_N_F       EQU X'40'                       @H6A 04-IFASMFR3\n                         00000020           56906+SMF30_ENCLAVE_TIME_zIIP_QUAL_F     EQU X'20'                       @H6A 04-IFASMFR3\n                         00000020           56907+SMF30_ENCLAVE_TIME_SUP_QUAL_F      EQU X'20'                       @H6A 04-IFASMFR3\n                         00000010           56908+SMF30_DEPENC_TIME_zIIP_QUAL_F      EQU X'10'                       @H6A 04-IFASMFR3\n                         00000010           56909+SMF30_DEPENC_TIME_SUP_QUAL_F       EQU X'10'                       @H6A 04-IFASMFR3\n 00000057 00                                56910+         DC   1BL1'0'                  Reserved                    @H6C 04-IFASMFR3\n 00000058 00000000                          56911+SMF30_TIME_ON_IFA DC F'0'  ASSB_Time_On_IFA Time spent on IFA          X04-IFASMFR3\n                                                 +                                       In hundredths of a second       X\n                                                 +                                       (including enclave time)    @H5A\n 0000005C 00000000                          56912+SMF30_ENCLAVE_TIME_ON_IFA DC F'0'      Rqsv_Enclave_Time_On_IFA        X04-IFASMFR3\n                                                 +                                       Enclave time spent on IFA       X\n                                                 +                                       In hundredths of a second   @H5A\n 00000060 00000000                          56913+SMF30_DEP_ENCLAVE_TIME_ON_IFA DC F'0'  Rqsv_Dep_Enclave_Time_On_IFA    X04-IFASMFR3\n                                                 +                                       Dependent enclave time spent on X\n                                                 +                                       IFA. In hundredths of a second\n 00000064 00000000                          56914+SMF30_TIME_IFA_ON_CP DC F'0' ASSB_Time_IFA_ON_CP IFA CPU time spent on X04-IFASMFR3\n                                                 +                                       CP. In hundredths of a second   X\n                                                 +                                       (including enclave time)    @H5A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  114\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000068 00000000                          56915+SMF30_ENCLAVE_TIME_IFA_ON_CP DC F'0'   Rqsv_Enclave_Time_IFA_ON_CP     X04-IFASMFR3\n                                                 +                                       IFA Enclave time spent on CP.   X\n                                                 +                                       In hundredths of a second   @H5A\n 0000006C 00000000                          56916+SMF30_DEP_ENCLAVE_TIME_IFA_ON_CP DC F'0'                               X04-IFASMFR3\n                                                 +                                       Rqsv_Dep_Enclave_Time_IFA_ON_CP X\n                                                 +                                       IFA Dependent enclave time spentX\n                                                 +                                       on CP.                          X\n                                                 +                                       In hundredths of a second   @H5A\n 00000070 00000000                          56917+SMF30CEPI DC  F'0'        RqsvCPUtimeConsumedWhileENQpromoted           04-IFASMFR3\n                                            56918+*                                      CPU time consumed for an A/S\n                                            56919+*                                      or Job while enqueue promoted.\n                                            56920+*                                      1.024 milliseconds unit\n                                            56921+*                                      Unlike SMF30CEP,\n                                            56922+*                                      for interval records, this field\n                                            56923+*                                      contains only the time consumed\n                                            56924+*                                      during the interval itself.\n                                            56925+*                                                                  @PAA\n 00000074                                   56926+SMF30_TIME_ON_zIIP DC 0F'0' ASSB_Time_On_zIIP Time spent on zIIP       X04-IFASMFR3\n                                                 +                                       In hundredths of a second       X\n                                                 +                                       (including enclave time)    @H6A\n 00000074 00000000                          56927+SMF30_TIME_ON_SUP DC F'0'                                               04-IFASMFR3\n 00000078                                   56928+SMF30_ENCLAVE_TIME_ON_zIIP DC 0F'0'    Rqsv_Enclave_Time_On_SUP        X04-IFASMFR3\n                                                 +                                       Enclave time spent on zIIP      X\n                                                 +                                       In hundredths of a second   @H6A\n 00000078 00000000                          56929+SMF30_ENCLAVE_TIME_ON_SUP DC F'0'                                       04-IFASMFR3\n 0000007C                                   56930+SMF30_DEPENC_TIME_ON_zIIP DC 0F'0'     Rqsv_DEPENC_Time_On_SUP         X04-IFASMFR3\n                                                 +                                       Dependent enclave time spent on X\n                                                 +                                       zIIP. In hundredths of a second\n 0000007C 00000000                          56931+SMF30_DEPENC_TIME_ON_SUP DC F'0'                                        04-IFASMFR3\n 00000080                                   56932+SMF30_TIME_zIIP_ON_CP DC 0F'0' ASSB_Time_zIIP_ON_CP zIIP CPU time spentX04-IFASMFR3\n                                                 +                                    on CP. When zAAPzIIP=YES is in     X\n                                                 +                                    effect, zAAP-eligible work is      X\n                                                 +                                    included in zIIP CPU time spent    X\n                                                 +                                    on CP.                             X\n                                                 +                                    In hundredths of a second          X\n                                                 +                                       (including enclave time)    @H6A\n 00000080 00000000                          56933+SMF30_TIME_SUP_ON_CP DC F'0'                                            04-IFASMFR3\n 00000084                                   56934+SMF30_ENCLAVE_TIME_zIIP_ON_CP DC 0F'0' Rqsv_Enclave_Time_SUP_ON_CP     X04-IFASMFR3\n                                                 +                                       zIIP Enclave time spent on CP.  X\n                                                 +                                       When zAAPzIIP=YES is in         X\n                                                 +                                       effect, zAAP-eligible work is   X\n                                                 +                                       included in zIIP enclave time   X\n                                                 +                                       spent on CP.                    X\n                                                 +                                       In hundredths of a second   @H6A\n 00000084 00000000                          56935+SMF30_ENCLAVE_TIME_SUP_ON_CP DC F'0'                                    04-IFASMFR3\n 00000088                                   56936+SMF30_DEPENC_TIME_zIIP_ON_CP DC 0F'0' Rqsv_DEPENC_Time_SUP_ON_CP       X04-IFASMFR3\n                                                 +                                      zIIP Dependent enclave time spentX\n                                                 +                                      on CP. When zAAPzIIP=YES is in   X\n                                                 +                                      effect, zAAP-eligible work is    X\n                                                 +                                      included in zIIP Dependent       X\n                                                 +                                      enclave time spent on CP.        X\n                                                 +                                      In hundredths of a second    @H6A\n 00000088 00000000                          56937+SMF30_DEPENC_TIME_SUP_ON_CP DC F'0'                                     04-IFASMFR3\n 0000008C                                   56938+SMF30_ENCLAVE_TIME_zIIP_QUAL DC 0F'0'  Rqsv_Enclave_TIME_SUP_QUAL      X04-IFASMFR3\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  115\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                                +                                       Normalized                      X\n                                                 +                                       Enclave time spent on zIIP      X\n                                                 +                                       In hundredths of a second   @H6A\n 0000008C 00000000                          56939+SMF30_ENCLAVE_TIME_SUP_QUAL DC F'0'                                     04-IFASMFR3\n 00000090                                   56940+SMF30_DEPENC_TIME_zIIP_QUAL DC 0F'0'   Rqsv_DepEnc_TIME_SUP_QUAL       X04-IFASMFR3\n                                                 +                                       Normalized                      X\n                                                 +                                       Dependent enclave time spent on X\n                                                 +                                       zIIP. In hundredths of a second\n 00000090 00000000                          56941+SMF30_DEPENC_TIME_SUP_QUAL DC F'0'                                      04-IFASMFR3\n 00000094 00000000                          56942+SMF30CRP DC   F'0'         RqsvCPUtimeConsumedWhileCRMpromoted          04-IFASMFR3\n                                            56943+*                                      CPU time consumed for an address\n                                            56944+*                                      space or job while promoted due\n                                            56945+*                                      to chronic resource contention\n                                            56946+*                                      (in 1024 millisecond units). For\n                                            56947+*                                      interval records, this field\n                                            56948+*                                      contains only the time consumed\n                                            56949+*                                      during the interval itself. @LJA\n 00000098 00000000                          56950+SMF30ICU_Step_Term  DC F'0'            CPU TCB time spent by the        04-IFASMFR3\n                                            56951+*                                      Initiator during job step\n                                            56952+*                                      termination processing. This\n                                            56953+*                                      is the step termination portion\n                                            56954+*                                      of SMF30ICU which is reported\n                                            56955+*                                      in the next step end record\n                                            56956+*                                                                  @LTA\n 0000009C 00000000                          56957+SMF30ICU_Step_Init  DC F'0'            CPU TCB time spent by the        04-IFASMFR3\n                                            56958+*                                      Initiator during job step\n                                            56959+*                                      initialization processing. This\n                                            56960+*                                      is the step initialization\n                                            56961+*                                      portion of SMF30ICU for this\n                                            56962+*                                      step end record.            @LTA\n 000000A0 00000000                          56963+SMF30ISB_Step_Term  DC F'0'            CPU SRB time spent by the        04-IFASMFR3\n                                            56964+*                                      Initiator during job step\n                                            56965+*                                      termination processing. This\n                                            56966+*                                      is the step termination portion\n                                            56967+*                                      of SMF30ISB which is reported\n                                            56968+*                                      in the next step end record\n                                            56969+*                                                                  @LTA\n 000000A4 00000000                          56970+SMF30ISB_Step_Init  DC F'0'            CPU SRB time spent by the        04-IFASMFR3\n                                            56971+*                                      Initiator during job step\n                                            56972+*                                      initialization processing. This\n                                            56973+*                                      is the step initialization\n                                            56974+*                                      portion of SMF30ISB for this\n                                            56975+*                                      step end record.            @LTA\n 000000A8                                   56976+SMF30_Missed_SMF30BLK DS F'0'          Accumulated value of I/O block   04-IFASMFR3\n                                            56977+*                                      counts when serialization could\n                                            56978+*                                      not be obtained for\n                                            56979+*                                      accumulating the value to\n                                            56980+*                                      SMF30BLK. This value is\n                                            56981+*                                      maintained at the job step\n                                            56982+*                                      level as opposed to the DD\n                                            56983+*                                      level of its SMF30BLK\n                                            56984+*                                      counterpart. This field\n                                            56985+*                                      contains zero for started\n                                            56986+*                                      tasks.                      @0IA\n 000000AC                                   56987+SMF30_Missed_SMF30DCT DS F'0'          Accumulated value of device      04-IFASMFR3\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  116\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           56988+*                                      connect time when serialization\n                                            56989+*                                      could not be obtained for\n                                            56990+*                                      accumulating the value to\n                                            56991+*                                      SMF30DCT. This value is\n                                            56992+*                                      maintained at the job step\n                                            56993+*                                      level as opposed to the DD\n                                            56994+*                                      level of its SMF30DCT\n                                            56995+*                                      counterpart. This field\n                                            56996+*                                      contains zero for started\n                                            56997+*                                      tasks.                      @0IA\n                                            56998+*        EXCP SECTION                                          @G742PJW\n                                            56999+*\n                                            57000+*\n                                            57001+*        FOR EACH DEVICE ASSIGNED TO EACH DATA SET THERE IS A 30 BYTE\n                                            57002+*        ENTRY HAVING THE FOLLOWING FORMAT:                    @G860P27\n                                            57003+*\n 00000000                00000000 0000001E  57004+SMF30EXP DSECT ,                       Dataset Access Information  @LYC 04-IFASMFR3\n                                            57005+*                                                                  @LYA\n                                            57006+*     Note: Virtual I/O Devices are identified by the following:   @LYA\n                                            57007+*           Device Class 0                                         @LYA\n                                            57008+*           Unit Type 0                                            @LYA\n                                            57009+*           Device Number x'7FFF'                                  @LYA\n                                            57010+*\n 00000000                                   57011+SMF30KEY DS    0CL12' '                SECTION KEY             @G742PJW 04-IFASMFR3\n 00000000 00                                57012+SMF30DEV DC    BL1'0'      UCBTBYT3    DEVICE CLASS            @G742PJW 04-IFASMFR3\n 00000001 00                                57013+SMF30UTP DC    BL1'0'      UCBTBYT3    UNIT TYPE               @G742PJW 04-IFASMFR3\n 00000002 0000                              57014+SMF30CUA DC    BL2'0'      UCBCHAN     Device number               @LYC 04-IFASMFR3\n                                            57015+*                                                                 1@LYD\n 00000004 4040404040404040                  57016+SMF30DDN DC    CL8' '      TIOEDDNM    DD NAME USED TO ACCESS THE DATA  04-IFASMFR3\n                                            57017+*                                      SET                     @G742PJW\n 0000000C 00000000                          57018+SMF30BLK DC    F'0'  D     TCTDCTR     COUNT OF BLOCKS ISSUED FOR THE   04-IFASMFR3\n                                            57019+*                                      DEVICE AGAINST THE DATA SET\n                                            57020+*                                                              @G742PJW\n 00000010 0000                              57021+SMF30BSZ DC    BL2'0'      TCTBLKSZ    LARGEST BLOCKSIZE OF THE DATA    04-IFASMFR3\n                                            57022+*                                      SET                     @G742PJW\n                         00000080           57023+SMF30CBS EQU   X'80'                   INDICATES CHANGED BLOCKSIZE FOR  04-IFASMFR3\n                                            57024+*                                      THE DATASET. POST PROCESSORS\n                                            57025+*                                      SHOULD USE THIS FIELD TO AVOID\n                                            57026+*                                      THE POSSIBILITY OF NEGATIVE\n                                            57027+*                                      NUMBERS.                @G742PJW\n 00000012 00000000                          57028+SMF30DCT DC    BL4'0'                  DEVICE CONNECT TIME FOR THIS     04-IFASMFR3\n                                            57029+*                                      DATA SET (IN 128 MICRO-SECOND\n                                            57030+*                                      UNITS). FOR DIV OBJECT, DEVICE\n                                            57031+*                                      CONNECT TIME IS NOT COLLECTED\n                                            57032+*                                      BY SMF, HOWEVER, THIS FIELD MAY\n                                            57033+*                                      NOT ALWAYS BE 0. FOR EXAMPLE,\n                                            57034+*                                      IF A USER IS USING A DIV DATA\n                                            57035+*                                      SET AND CALLS A VSAM UTILITY TO\n                                            57036+*                                      PROCESS IT USING THE SAME DD\n                                            57037+*                                      STATEMENT, THIS WILL RESULT IN\n                                            57038+*                                      DEVICE CONNECT TIME BEING\n                                            57039+*                                      CHARGED BY VSAM TO THE DIV\n                                            57040+*                                      OBJECT.\n 00000016                                   57041+SMF30XBS DS    XL8'0'      TCTXBLKS    BLOCKSIZE >32K              @LGA 04-IFASMFR3\n                                            57042+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  117\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           57043+*\n                                            57044+*        ACCOUNTING SECTION                                    @G742PJW\n                                            57045+*\n                                            57046+*\n                                            57047+*        EACH ENTRY FOR AN ACCOUNTING FIELD CONTAINS THE LENGTH OF THE\n                                            57048+*        FIELD (1 BYTE,BINARY), FOLLOWED BY THE FIELD(EBCDIC).AN\n                                            57049+*        OMITTED FIELD IS REPRESENTED BY A LENGTH INDICATOR OF 0.\n                                            57050+*                                                              @G742PJW\n                                            57051+*\n 00000000                00000000 00000001  57052+SMF30ACS DSECT ,                                               @G742PJW 04-IFASMFR3\n 00000000 00                                57053+SMF30ACL DC    BL1'0'                  LENGTH OF ACCOUNTING SECTION,    04-IFASMFR3\n                                            57054+*                                      EXCLUDING THIS FIELD    @G742PJW\n 00000001                                   57055+SMF30ACT DS    0C                      JOB OR STEP ACCOUNTING FIELD     04-IFASMFR3\n                                            57056+*                                                              @G742PJW\n                                            57057+*\n                                            57058+*        STORAGE AND PAGING SECTION                            @G742PJW\n                                            57059+*\n 00000000                00000000 000000E8  57060+SMF30SAP DSECT ,                                               @G742PJW 04-IFASMFR3\n 00000000 0000                              57061+SMF30RSV DC    BL2'0'                  RESERVED - NOTE THAT SMF30RGN,   04-IFASMFR3\n                                            57062+*                                      FORMERLY A TWO-BYTE FIELD AT\n                                            57063+*                                      THIS OFFSET, HAS BEEN INCREASED\n                                            57064+*                                      TO 4 BYTES AND MOVED TO THE END\n                                            57065+*                                      OF THE STORAGE AND PAGING\n                                            57066+*                                      SECTION.                    @PVC\n 00000002 00                                57067+SMF30SFL DC    BL1'0'                  STORAGE FLAGS. IF STORAGE WAS    04-IFASMFR3\n                                            57068+*                                      NOT ALLOCATED (JOB STEP WAS\n                                            57069+*                                      FLUSHED), THESE FIELDS EQUAL\n                                            57070+*                                      ZERO.                   @G742PJW\n                         00000080           57071+SMF30VQR EQU   X'80'  EAADDRBT BIT     V=R IS SPECIFIED. THIS BIT HAS   04-IFASMFR3\n                                            57072+*                                      NO MEANING FOR SUBTYPE 5 RECORDS\n                                            57073+*                                                              @G742PJW\n                         00000040           57074+SMF30UCL EQU   X'40'  IEFUSI-REGION    IEFUSI CHANGED REGION LIMIT      04-IFASMFR3\n                                            57075+*                                      VALUES FOR THE EXTENDED PRIVATE\n                                            57076+*                                      AREA                    @G860P27\n                         00000020           57077+SMF30UCM EQU   X'20'  IEFUSI-MEMLIMIT  IEFUSI CHANGED MEMLIMIT          04-IFASMFR3\n                                            57078+*                                      VALUE                       @LHA\n                         00000010           57079+SMF30SIN EQU   X'10'                   The following fields contain     04-IFASMFR3\n                                            57080+*                                      incomplete data: (SRM could\n                                            57081+*                                      not deliver deltas or values\n                                            57082+*                                      for this interval)\n                                            57083+*                                      SMF30ERS  SMF30KIE  SMF30POA\n                                            57084+*                                      SMF30BIA  SMF30KOA  SMF30POE\n                                            57085+*                                      SMF30BIE  SMF30KOE  SMF30PSC\n                                            57086+*                                      SMF30BOA  SMF30LPI  SMF30PSF\n                                            57087+*                                      SMF30BOE  SMF30NSW  SMF30PSO\n                                            57088+*                                      SMF30CPI  SMF30PAI  SMF30PST\n                                            57089+*                                      SMF30CPM  SMF30PEI  SMF30VPI\n                                            57090+*                                      SMF30HPI  SMF30PIA  SMF30VPO\n                                            57091+*                                      SMF30HPO  SMF30PIE  SMF30VPR\n                                            57092+*                                      SMF30KIA                   @PBA\n                         00000008           57093+SMF30NHU EQU   X'08'  SCTNHUSI         When on, indicates that the      04-IFASMFR3\n                                            57094+*                                      NOHONORIEFUSIREGION (no honor\n                                            57095+*                                      IEFUSI region settings) was set\n                                            57096+*                                      in the Program Properties Table\n                                            57097+*                                      (PPT).  Region and MEMLIMIT\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  118\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           57098+*                                      values and limits set or\n                                            57099+*                                      affected by the IEFUSI exit\n                                            57100+*                                      are not honored when this\n                                            57101+*                                      bit is on.                  @PFA\n 00000003 00                                57102+SMF30SPK DC    BL1'0' TCBPKF           STORAGE PROTECT KEY, IN THE FORM 04-IFASMFR3\n                                            57103+*                                      xxxx0000 WHERE xxxx IS THE KEY\n                                            57104+*                                                              @G742PJW\n 00000004 0000                              57105+SMF30PRV DC    BL2'0' TCTHWM/1024      LARGEST AMOUNT OF STORAGE USED   04-IFASMFR3\n                                            57106+*                                      FROM BOTTOM OF USERS PRIVATE\n                                            57107+*                                      AREA, IN 1 K UNITS. THIS STORAGE\n                                            57108+*                                      AREA INCLUDES SUBPOOLS 0-127,\n                                            57109+*                                      251 AND 252. IF ADDRSPC=REAL IS\n                                            57110+*                                      SPECIFIED, THIS FIELD EQUALS THE\n                                            57111+*                                      AMOUNT OF CONTIGUOUS REAL\n                                            57112+*                                      STORAGE THAT WAS USED.  @G860P27\n 00000006 0000                              57113+SMF30SYS DC    BL2'0'  TCTLWM          LARGEST AMOUNT OF STORAGE USED   04-IFASMFR3\n                                            57114+*                                      FROM TOP OF PRIVATE AREA, IN 1\n                                            57115+*                                      K UNITS. THIS STORAGE AREA\n                                            57116+*                                      INCLUDES THE LSQA AND SWA\n                                            57117+*                                      (SUBPOOLS 229,230,236,237 AND\n                                            57118+*                                      253-255). IF ADDRSPC=REAL IS\n                                            57119+*                                      SPECIFIED, THIS FIELD EQUALS THE\n                                            57120+*                                      AMOUNT OF STORAGE USED THAT WAS\n                                            57121+*                                      NOT FROM CONTIGUOUS REAL STORAGE\n                                            57122+*                                      RESERVED FOR THE PROGRAM.\n                                            57123+*                                                              @G86OP27\n 00000008                                   57124+SMF30PGI DS    F'0' D OUXBPIN +        NUMBER OF PAGES THAT WERE PAGED  04-IFASMFR3\n                                            57125+*                     OUCBPIN          IN FROM AUXILIARY STORAGE\n                                            57126+*                                                              @G742PJW\n 0000000C                0000000C 00000008  57127+         ORG   SMF30PGI                RESET LOCATION COUNTER      @LLA 04-IFASMFR3\n 00000008                                   57128+SMF30PIA DS    F'0' D OUXBPIN +        NUMBER OF PAGE-INS ALIAS    @LLA 04-IFASMFR3\n                                            57129+*                     OUCBPIN\n 0000000C                                   57130+SMF30PGO DS    F'0' D OUXBPOUT +       NUMBER OF PAGES THAT WERE PAGED  04-IFASMFR3\n                                            57131+*                     OUCBPOUT         OUT TO AUXILIARY STORAGE\n                                            57132+*                                                              @G742PJW\n 00000010                00000010 0000000C  57133+         ORG   SMF30PGO                RESET LOCATION COUNTER      @LLA 04-IFASMFR3\n 0000000C                                   57134+SMF30POA DS    F'0' D OUXBPOUT +       NUMBER OF PAGE-OUTS ALIAS   @LLA 04-IFASMFR3\n                                            57135+*                     OUCBPOUT\n 00000010                                   57136+SMF30CPM DS    F'0' D OUXB             NUMBER OF ATTEMPTS TO READ DATA  04-IFASMFR3\n                                            57137+*                                      FROM AN EXPANDED STORAGE ONLY\n                                            57138+*                                      HIPERSPACE THAT WERE NOT\n                                            57139+*                                      SATISFIED BECAUSE THE DATA HAS\n                                            57140+*                                      BEEN DELETED.               @DFC\n 00000014                                   57141+SMF30NSW DS    F'0' D OUXBSWCT         NUMBER OF ADDRESS SPACE SWAP     04-IFASMFR3\n                                            57142+*                                      SEQUENCE. (A SWAP SEQUENCE\n                                            57143+*                                      CONSISTS OF AN ADDRESS SPACE\n                                            57144+*                                      SWAP-OUT AND SWAP-IN. LOGICAL\n                                            57145+*                                      SWAP-OUT AND SWAP-IN ARE NOT\n                                            57146+*                                      INCLUDED.)              @G742PJW\n 00000018                                   57147+SMF30PSI DS    F'0' D OUXBSPIN +       NUMBER OF PAGES SWAPPED IN. THIS 04-IFASMFR3\n                                            57148+*                     OUCBSPIN         FIELD INCLUDES: (LSQA, FIXED\n                                            57149+*                                      PAGES, AND PAGES THAT THE REAL\n                                            57150+*                                      STORAGE MANAGER DETERMINED TO BE\n                                            57151+*                                      ACTIVE WHEN THE ADDRESS SPACE\n                                            57152+*                                      WAS SWAPPING IN. IT DOES NOT\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  119\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           57153+*                                      INCLUDE PAGE RECLAIMS OR PAGES\n                                            57154+*                                      FOUND IN STORAGE DURING THE\n                                            57155+*                                      SWAP-IN PROCESS (SUCH AS PAGES\n                                            57156+*                                      BROUGHT IN VIA SRB'S) STARTED\n                                            57157+*                                      AFTER COMPLETION OF SWAP-IN\n                                            57158+*                                      STAGE 1 PROCESSING).    @G742PJW\n 0000001C                                   57159+SMF30PSO DS    F'0' D OUXBSPOT +       NUMBER OF PAGES SWAPPED OUT.     04-IFASMFR3\n                                            57160+*                     OUCBSPOT         THIS FIELD INCLUDES: LSQA,\n                                            57161+*                                      PRIVATE AREA FIXED PAGES, AND\n                                            57162+*                                      PRIVATE AREA NON-FIXED CHANGED\n                                            57163+*                                      PAGES.                  @G742PJW\n 00000020                                   57164+SMF30VPI DS    F'0' D OUXBVAMI +       NUMBER OF VIO PAGE INS FOR THIS  04-IFASMFR3\n                                            57165+*                     OUCBVAMI         STEP. THIS FIELD INCLUDES PAGE-\n                                            57166+*                                      IN RESULTING FROM PAGE FAULTS OR\n                                            57167+*                                      SPECIFIC PAGE REQUESTS ON A VIO\n                                            57168+*                                      WINDOW. IT DOES NOT INCLUDE VIO\n                                            57169+*                                      SWAP-IN OR PAGE-INS FOR THE\n                                            57170+*                                      COMMON AREA.            @G742PJW\n 00000024                                   57171+SMF30VPO DS    F'0' D OUXBVAMO +       NUMBER OF VIO PAGE OUTS FOR THIS 04-IFASMFR3\n                                            57172+*                     OUCBVAMO         STEP. THIS FIELD INCLUDES PAGE-\n                                            57173+*                                      OUTS RESULTING FROM SPECIFIC\n                                            57174+*                                      PAGE REQUESTS ON A VIO WINDOW AS\n                                            57175+*                                      WELL AS THOSE PAGES STOLEN BY\n                                            57176+*                                      THE PAGING SUPERVISOR THROUGH\n                                            57177+*                                      INFREQUENT USE. IT DOES NOT\n                                            57178+*                                      INCLUDE VIO SWAP-OUTS OR PAGE-\n                                            57179+*                                      OUTS FOR THE COMMON AREA.\n                                            57180+*                                                              @G742PJW\n 00000028                                   57181+SMF30VPR DS    F'0' D OUXBVAMR +       NUMBER OF VIO RECLAIMS  @G742PJW 04-IFASMFR3\n                                            57182+*                     OUCBVAMR                                 @G742PJW\n 0000002C                                   57183+SMF30CPI DS    F'0' D OUXBCAPI +       NUMBER OF COMMON AREA PAGE-INS   04-IFASMFR3\n                                            57184+*                     OUCBCAPI         (LPA + CSA)             @G742PJW\n 00000030                                   57185+SMF30HPI DS    F'0' D OUXBHSPI         NUMBER OF HIPERSPACE PAGE-INS    04-IFASMFR3\n                                            57186+*                                      FROM AUXILIARY TO PROCESSOR\n                                            57187+*                                      STORAGE.                    @LBC\n 00000034                                   57188+SMF30LPI DS    F'0' D OUXBLPAI         NUMBER OF LPA PAGE-INS  @G742PJW 04-IFASMFR3\n                                            57189+*\n 00000038                                   57190+SMF30HPO DS    F'0' D OUXBHSPO         NUMBER OF HIPERSPACE PAGE-OUTS   04-IFASMFR3\n                                            57191+*                                      FROM PROCESSOR TO AUXILIARY\n                                            57192+*                                      STORAGE.                    @LBC\n 0000003C                                   57193+SMF30PST DS    F'0' D OUXBSTCT +       NUMBER OF PAGES STOLEN FROM      04-IFASMFR3\n                                            57194+*                     OUCBSTCT         THIS ADDRESS SPACE      @G742PJW\n 00000040                                   57195+SMF30PSC DS    D'0' D OUCBPSS          NUMBER OF CPU PAGE SECONDS FOR   04-IFASMFR3\n                                            57196+*                                      THIS ADDRESS SPACE, IN PAGE\n                                            57197+*                                      MILLISECOND UNITS       @G742PJW\n 00000048                                   57198+SMF30RGB DS    F'0'   TCTRGNB        PRIVATE AREA SIZE IN BYTES, BELOW  04-IFASMFR3\n                                            57199+*                                    16 MEGABYTES                  @PVC\n 0000004C                                   57200+SMF30ERG DS    F'0'   TCTERGNB       PRIVATE AREA SIZE IN BYTES, ABOVE  04-IFASMFR3\n                                            57201+*                                    16 MEGABYTES                  @PVC\n 00000050                                   57202+SMF30ARB DS    F'0'   TCTHWM         MAXIMUM VIRTUAL STORAGE IN BYTES   04-IFASMFR3\n                                            57203+*                                    ALLOCATED FROM THE LSQA AND SWA\n                                            57204+*                                    SUBPOOLS BELOW 16 MEGABYTES\n                                            57205+*                                                              @G860P27\n 00000054                                   57206+SMF30EAR DS    F'0'   TCTEHWM        MAXIMUM VIRTUAL STORAGE IN BYTES   04-IFASMFR3\n                                            57207+*                                    ALLOCATED FROM THE LSQA AND SWA\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  120\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           57208+*                                    SUBPOOLS ABOVE 16 MEGABYTES\n                                            57209+*                                                              @G860P27\n 00000058                                   57210+SMF30URB DS    F'0'   TCTLWM         MAXIMUM VIRTUAL STORAGE IN BYTES   04-IFASMFR3\n                                            57211+*                                    ALLOCATED FROM THE USER SUBPOOLS\n                                            57212+*                                    BELOW 16 MEGABYTES        @G860P27\n 0000005C                                   57213+SMF30EUR DS    F'0'   TCTELWM        MAXIMUM VIRTUAL STORAGE IN BYTES   04-IFASMFR3\n                                            57214+*                                    ALLOCATED FROM THE USER SUBPOOLS\n                                            57215+*                                    ABOVE 16 MEGABYTES        @G860P27\n 00000060 00000000                          57216+SMF30RGN DC    BL4'0' TCTRSZ*2       REGION SIZE ESTABLISHED, IN 1K     04-IFASMFR3\n                                            57217+*                                    UNITS TAKEN FROM THE REGION=\n                                            57218+*                                    PARAMETER IN THE JCL, AND ROUNDED\n                                            57219+*                                    UP TO A 4K BOUNDARY. IF ADDRSPC=\n                                            57220+*                                    REAL IS SPECIFIED, THIS FIELD\n                                            57221+*                                    EQUALS THE AMOUNT OF CONTIGUOUS\n                                            57222+*                                    REAL STORAGE RESERVED FOR THE\n                                            57223+*                                    PROGRAM. IF THE REGION REQUESTED\n                                            57224+*                                    WAS GREATER THAN 16 MEGABYTES, THE\n                                            57225+*                                    REGION ESTABLISHED RESIDES ABOVE\n                                            57226+*                                    16 MEGABYTES, AND THIS FIELD WILL\n                                            57227+*                                    CONTAIN A MINIMUM VALUE OF 32\n                                            57228+*                                    MEGABYTES.                    @PVM\n 00000064                                   57229+SMF30DSV DS    F'0'   RAXDSHWM       AMOUNT OF USER KEY DATA SPACE      04-IFASMFR3\n                                            57230+*                                    STORAGE (HIGH WATER MARK) USED\n                                            57231+*                                    DURING THE STEP/JOB (IN MEGABYTES)\n                                            57232+*                                                                  @P5C\n 00000068                                   57233+SMF30PIE DS    F'0'                  NUMBER OF UNBLOCKED PAGES THAT     04-IFASMFR3\n                                            57234+*                                    WERE PAGED IN FROM EXPANDED\n                                            57235+*                                    STORAGE.                      @LLA\n 0000006C                                   57236+SMF30POE DS    F'0'                  NUMBER OF UNBLOCKED PAGES THAT     04-IFASMFR3\n                                            57237+*                                    WERE PAGED OUT TO EXPANDED STORAGE\n                                            57238+*                                                                  @LLA\n 00000070                                   57239+SMF30BIA DS    F'0'                  NUMBER OF BLOCKED PAGES THAT WERE  04-IFASMFR3\n                                            57240+*                                    PAGED IN FROM FROM AUXILIARY\n                                            57241+*                                    STORAGE                       @LLA\n 00000074                                   57242+SMF30BOA DS    F'0'                  NUMBER OF BLOCKED PAGES THAT WERE  04-IFASMFR3\n                                            57243+*                                    PAGED OUT TO AUXILIARY STORAGE\n                                            57244+*                                                                  @LLA\n 00000078                                   57245+SMF30BIE DS    F'0'                  NUMBER OF BLOCKED PAGES THAT WERE  04-IFASMFR3\n                                            57246+*                                    PAGED IN FROM EXPANDED STORAGE\n                                            57247+*                                                                  @LLA\n 0000007C                                   57248+SMF30BOE DS    F'0'                  NUMBER OF BLOCKED PAGES THAT WERE  04-IFASMFR3\n                                            57249+*                                    PAGED OUT TO EXPANDED STORAGE.\n                                            57250+*                                                                  @LLA\n 00000080                                   57251+SMF30KIA DS    F'0'                  NUMBER OF BLOCKS THAT WERE PAGED   04-IFASMFR3\n                                            57252+*                                    IN FROM AUXILIARY STORAGE.    @LLA\n 00000084                                   57253+SMF30KOA DS    F'0'                  NUMBER OF BLOCKS THAT WERE PAGED   04-IFASMFR3\n                                            57254+*                                    OUT TO AUXILIARY STORAGE      @LLA\n 00000088                                   57255+SMF30KIE DS    F'0'                  NUMBER OF BLOCKS THAT WERE PAGED   04-IFASMFR3\n                                            57256+*                                    IN FROM EXPANDED STORAGE      @LLA\n 0000008C                                   57257+SMF30KOE DS    F'0'                  NUMBER OF BLOCKS THAT WERE PAGED   04-IFASMFR3\n                                            57258+*                                    OUT TO EXPANDED STORAGE       @LLA\n 00000090                                   57259+SMF30PSF DS    D'0'                  Number of CPU page seconds for the 04-IFASMFR3\n                                            57260+*                                    shared central storage frames in\n                                            57261+*                                    use by this address space, in page\n                                            57262+*                                    millisecond units             @L8A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  121\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000098                                   57263+SMF30PAI DS    F'0'                  Number of shared pages that were   04-IFASMFR3\n                                            57264+*                                    paged in from auxiliary storage in\n                                            57265+*                                    this address space            @L8A\n 0000009C                                   57266+SMF30PEI DS    F'0'                  Number of shared pages that were   04-IFASMFR3\n                                            57267+*                                    paged in from expanded storage in\n                                            57268+*                                    this address space            @L8A\n 000000A0                                   57269+SMF30ERS DS    CL8' '                Expanded storage page residency    04-IFASMFR3\n                                            57270+*                                    time in page-milliseconds     @DWA\n                                            57271+*\n 000000A8                                   57272+SMF30MEM DS    CL8'0'                MEMLIMIT value in 1MB units as     04-IFASMFR3\n                                            57273+*                                    determined at step initialization\n                                            57274+*                                    time, after IEFUSI processing.\n                                            57275+*                                    An increase in the system default\n                                            57276+*                                    memlimit value is not reflected\n                                            57277+*                                    here.                         @0AC\n                                            57278+*                                    This field's maximum value is\n                                            57279+*                                    '00000FFFFFFFF000'x which is\n                                            57280+*                                    equivalent to MEMLIMIT having\n                                            57281+*                                    no limit.                     @PKA\n 000000B0                                   57282+SMF30MES DS    CL1'0'                MEMLIMIT source               @0AA 04-IFASMFR3\n 000000B1                                   57283+         DS    CL7'0'                Reserved                      @LNC 04-IFASMFR3\n 000000B8                                   57284+SMF30HVR DS    D'0' RAXHVGPAGESINREAL  High water mark for the          04-IFASMFR3\n                                            57285+*                                    number of real storage frames used\n                                            57286+*                                    to back 64-bit private storage\n                                            57287+*                                                                  @PJC\n 000000C0                                   57288+SMF30HVA DS    D'0' RAXHVGAUXSLOTS   High water mark for the            04-IFASMFR3\n                                            57289+*                                    number of auxiliary storage slots\n                                            57290+*                                    used to back 64-bit private\n                                            57291+*                                    storage                       @PJC\n 000000C8                                   57292+SMF30HVO DS    D'0' RAXLVABYTES      Amount of 64-bit private storage   04-IFASMFR3\n                                            57293+*                                    in bytes obtained by this step/job\n                                            57294+*                                    This includes guarded virtual\n                                            57295+*                                    storage                       @PIC\n 000000D0                                   57296+SMF30HVH DS    D'0' RAXLVGBYTES      High water mark for the number of  04-IFASMFR3\n                                            57297+*                                    usable bytes of 64-bit private\n                                            57298+*                                    obtained by this step/job. This\n                                            57299+*                                    does not include guarded virtual\n                                            57300+*                                    storage                       @LNA\n 000000D8                                   57301+SMF30HSO DS    D'0' RAXLVSHRBYTES    Amount of 64-bit shared storage in 04-IFASMFR3\n                                            57302+*                                    bytes this step/job has\n                                            57303+*                                    addressability or access to   @LNA\n 000000E0                                   57304+SMF30HSH DS    D'0' RAXLVSHRGBYTES   High water mark for the number of  04-IFASMFR3\n                                            57305+*                                    bytes of 64-bit shared\n                                            57306+*                                    this step/job has access to   @LNA\n                                            57307+*        PERFORMANCE SECTION                                   @G742PJW\n                                            57308+*\n 00000000                00000000 000000D2  57309+SMF30PRF DSECT ,                                               @G742PJW 04-IFASMFR3\n 00000000                                   57310+SMF30SRV DS    F'0' D OUXBJBS +        TOTAL SERVICE UNITS     @G742PJW 04-IFASMFR3\n                                            57311+*                     OUXBTRS                                  @G742PJW\n                                            57312+*                                      This field grows to 'FFFFFFFF'x\n                                            57313+*                                      and then wraps back to zero and\n                                            57314+*                                      continues growing. Once wrapping\n                                            57315+*                                      occurs, SMF30SRV_INV will be set\n                                            57316+*                                      to on. SMF30SRV_L is the 8 byte\n                                            57317+*                                      equivalent of this field.   @LOA\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  122\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000004                                   57318+SMF30CSU DS    F'0' D OUXBCPU          CPU SERVICE UNITS       @G742PJW 04-IFASMFR3\n                                            57319+*                                      This field grows to 'FFFFFFFF'x\n                                            57320+*                                      and then wraps back to zero and\n                                            57321+*                                      continues growing. Once wrapping\n                                            57322+*                                      occurs, SMF30CSU_INV will be set\n                                            57323+*                                      to on. SMF30CSU_L is the 8 byte\n                                            57324+*                                      equivalent of this field.   @LOA\n 00000008                                   57325+SMF30SRB DS    F'0' D OUXBSRB          SRB SERVICE UNITS       @G742PJW 04-IFASMFR3\n                                            57326+*                                      This field grows to 'FFFFFFFF'x\n                                            57327+*                                      and then wraps back to zero and\n                                            57328+*                                      continues growing. Once wrapping\n                                            57329+*                                      occurs, SMF30SRB_INV will be set\n                                            57330+*                                      to on. SMF30SRB_L is the 8 byte\n                                            57331+*                                      equivalent of this field.   @LOA\n 0000000C                                   57332+SMF30IO  DS    F'0' D OUXBIOC          I/O SERVICE UNITS       @G742PJW 04-IFASMFR3\n                                            57333+*                                      This field grows to 'FFFFFFFF'x\n                                            57334+*                                      and then wraps back to zero and\n                                            57335+*                                      continues growing. Once wrapping\n                                            57336+*                                      occurs, SMF30IO_INV will be set\n                                            57337+*                                      to on. SMF30IO_L is the 8 byte\n                                            57338+*                                      equivalent of this field.   @LOA\n 00000010                                   57339+SMF30MSO DS    F'0' D OUXBMSO          MSO SERVICE UNITS       @G742PJW 04-IFASMFR3\n                                            57340+*                                      This field grows to 'FFFFFFFF'x\n                                            57341+*                                      and then wraps back to zero and\n                                            57342+*                                      continues growing. Once wrapping\n                                            57343+*                                      occurs, SMF30MSO_INV will be set\n                                            57344+*                                      to on. SMF30MSO_L is the 8 byte\n                                            57345+*                                      equivalent of this field.   @LOA\n 00000014                                   57346+SMF30TAT DS    F'0' D OUXBJBT +        TRANSACTION ACTIVE TIME IN 1024- 04-IFASMFR3\n                                            57347+*                     OUXBTRT          MICROSECOND UNITS       @G742PJW\n 00000018                                   57348+SMF30SUS DS    F'0' D                  Copy of RmctAdjC when this SMF   04-IFASMFR3\n                                            57349+*                                      record was produced,\n                                            57350+*                                      number of sixteenths of one\n                                            57351+*                                      CPU microsecond per\n                                            57352+*                                      CPU service unit            @DWA\n                                            57353+*                                                              @G742PJW\n                                            57354+*                                      Note: The value in this field\n                                            57355+*                                            will change when a\n                                            57356+*                                            processor capacity change\n                                            57357+*                                            occurs                @LVA\n 0000001C                                   57358+SMF30RES DS    F'0' D OUXBJBR          TRANSACTION RESIDENCY TIME IN    04-IFASMFR3\n                                            57359+*                                      1024 MICRO-SECOND UNITS. THAT\n                                            57360+*                                      IS THE AMOUNT OF TIME THE\n                                            57361+*                                      TRANSACTION WAS IN REAL STORAGE.\n                                            57362+*                                                              @G742PJW\n 00000020                                   57363+SMF30TRS DS    F'0' D OUXBTRC          NUMBER OF TRANSACTIONS  @G742PJW 04-IFASMFR3\n 00000024                                   57364+SMF30WLM DS    CL8' '                  Workload Name               @L1A 04-IFASMFR3\n                                            57365+*                                      - Blanks if the system is\n                                            57366+*                                        operating in workload\n                                            57367+*                                        management compatibility mode.\n 0000002C                                   57368+SMF30SCN DS    CL8' '                  Service Class Name          @L1A 04-IFASMFR3\n                                            57369+*                                      - Blanks if the system is\n                                            57370+*                                        operating in workload\n                                            57371+*                                        management compatibility mode.\n 00000034                                   57372+SMF30GRN DS    CL8' '                  Resource Group Name         @L1A 04-IFASMFR3\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  123\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           57373+*                                      - Blanks if the system is\n                                            57374+*                                        operating in workload\n                                            57375+*                                        management compatibility mode.\n 0000003C                                   57376+SMF30RCN DS    CL8' '                  Reporting Class Name        @L1A 04-IFASMFR3\n                                            57377+*                                      - Blanks if the system is\n                                            57378+*                                        operating in workload\n                                            57379+*                                        management compatibility mode.\n 00000044                                   57380+SMF30ETA DS    F'0' D RQSVETIM         Independent Enclave Transaction  04-IFASMFR3\n                                            57381+*                                      Active time                 @P6C\n 00000048                                   57382+SMF30ESU DS    F'0' D RQSVECPU         Independent Enclave CPU          04-IFASMFR3\n                                            57383+*                                      Service Units               @P6C\n                                            57384+*                                      This field grows to 'FFFFFFFF'x\n                                            57385+*                                      and then wraps back to zero and\n                                            57386+*                                      continues growing. Once wrapping\n                                            57387+*                                      occurs, SMF30ESU_INV will be set\n                                            57388+*                                      to on. SMF30ESU_L is the 8 byte\n                                            57389+*                                      equivalent of this field.   @LOA\n 0000004C                                   57390+SMF30ETC DS    F'0' D RQSVETRC         Independent Enclave Transaction  04-IFASMFR3\n                                            57391+*                                      Count                       @P6C\n 00000050                                   57392+SMF30PFL DS    CL16' ' D RQSVSCHEDENV  JCL SCHEDENV value          @LEA 04-IFASMFR3\n 00000060                                   57393+SMF30JQT DS    F'0' D RQSVJCLCONVERSIONTIME JCL conversion time for     04-IFASMFR3\n                                            57394+*                                           batch jobs, 0 for other\n                                            57395+*                                           types of work.\n                                            57396+*                                           1.024 millisecond units\n                                            57397+*                                                                  @LEA\n 00000064                                   57398+SMF30RQT DS    F'0' D RqsvSysOrResAffTime Resource and/or system        04-IFASMFR3\n                                            57399+*                                         affinity hold time for batch\n                                            57400+*                                         jobs, 0 for other types of\n                                            57401+*                                         work.\n                                            57402+*                                         1.024 millisecond units  @LEA\n 00000068                                   57403+SMF30HQT DS    F'0' D RqsvIneligibleTime Hold time not due to system    04-IFASMFR3\n                                            57404+*                                        affinity, resource affinity,\n                                            57405+*                                        TYPRUN=HOLD or TYPRUN=JCLHOLD\n                                            57406+*                                        for batch jobs, 0 for other\n                                            57407+*                                        types of work.\n                                            57408+*                                        1.024 millisecond units   @LEA\n 0000006C                                   57409+SMF30SQT DS    F'0' D RqsvQueueTime    Time that job was eligible for   04-IFASMFR3\n                                            57410+*                                      execution: not held, waiting for\n                                            57411+*                                      for an initiator. Valid for all\n                                            57412+*                                      types or work.\n                                            57413+*                                      1.024 millisecond units     @LEA\n 00000070                                   57414+SMF30PF1 DS    BL1'0'                  Performance section flags   @LEA 04-IFASMFR3\n                         00000080           57415+SMF30PFJ EQU   X'80' D RqsvResetBeforeInitiation Reset before           04-IFASMFR3\n                                            57416+*                                                initiation        @LEA\n                         00000040           57417+SMF30PFR EQU   X'40' D RqsvResetAfterInitiation  Reset after            04-IFASMFR3\n                                            57418+*                                                initiation        @LEA\n                         00000020           57419+SMF30PFF EQU   X'20' D RqsvOperatorForcedInitiation                     04-IFASMFR3\n                                            57420+*                                      Operation requested immediate\n                                            57421+*                                      initiation                  @LEA\n                         00000010           57422+SMF30RTR EQU   X'10' D RqsvJobReincarnated                              04-IFASMFR3\n                                            57423+*                                      Job has been restarted      @LEA\n                         00000008           57424+SMF30MSI EQU   X'08' D RqsvRSDIncomplete                                04-IFASMFR3\n                                            57425+*                                      Remote System Data is       @LFA\n                                            57426+*                                      incomplete.                 @LFA\n                         00000004           57427+SMF30WMI EQU   X'04'                   Job is executing in a workload   04-IFASMFR3\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  124\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           57428+*                                      manager batch initiator     @P7A\n                         00000002           57429+SMF30CCP EQU   X'02' RasdCProtCpu      Service class assigned was       04-IFASMFR3\n                                            57430+*                                      designated CPU-critical @WLMPGMC\n                         00000001           57431+SMF30CSP EQU   X'01' RasdCProtStg      Service class served was         04-IFASMFR3\n                                            57432+*                                      designated stg-critical @WLMPGMS\n 00000071                                   57433+SMF30PF2 DS    BL1'0'                  Performance section flags        04-IFASMFR3\n                                            57434+*                                                              @WLMPGMC\n                         00000080           57435+SMF30ASP EQU   X'80' RasdASProtStg     Address space was                04-IFASMFR3\n                                            57436+*                                      designated stg-critical @WLMPGMS\n                         00000040           57437+SMF30SME EQU   X'40' RasdTrxnMgmtExempt Address space cannot be         04-IFASMFR3\n                                            57438+*                                      managed to trxn goals   @WLMPGMT\n                         00000020           57439+SMF30CPR EQU   X'20' RasdCpuProtected  Address space is currently       04-IFASMFR3\n                                            57440+*                                      CPU-protected           @WLMPGMC\n                         00000010           57441+SMF30SPR EQU   X'10' RasdStgProtected  Address space is currently       04-IFASMFR3\n                                            57442+*                                      stg-protected           @WLMPGMS\n                         00000008           57443+SMF30PIN EQU   X'08'                   The following fields contain     04-IFASMFR3\n                                            57444+*                                      incomplete data: (SRM could\n                                            57445+*                                      not deliver deltas or values\n                                            57446+*                                      for this interval)\n                                            57447+*                                      SMF30CSU   SMF30MSO  SMF30SPR\n                                            57448+*                                      SMF30ESU   SMF30PFL  SMF30SQT\n                                            57449+*                                      SMF30ETA   SMF30PFR  SMF30SRB\n                                            57450+*                                      SMF30ETC   SMF30RCN  SMF30SRV\n                                            57451+*                                      SMF30GRN   SMF30RES  SMF30SUS\n                                            57452+*                                      SMF30HQT   SMF30RQT  SMF30TAT\n                                            57453+*                                      SMF30IO    SMF30RTR  SMF30TRS\n                                            57454+*                                      SMF30JPN   SMF30SCN  SMF30WLM\n                                            57455+*                                      SMF30JQT   SMF30SME  SMF30CRM\n                                            57456+*                                      SMF30SRV_L SMF30CSU_L\n                                            57457+*                                      SMF30SRB_L SMF30IO_L\n                                            57458+*                                      SMF30MSO_L SMF30ESU_L       @PPC\n                         00000004           57459+SMF30CRM EQU   X'04' RqsvTrxnMgmtBoth  The address space matched a      04-IFASMFR3\n                                            57460+*                                      classification rule which\n                                            57461+*                                      specified \"manage region using\n                                            57462+*                                      goals of both\", which means it\n                                            57463+*                                      is managed towards the\n                                            57464+*                                      velocity goal of the region.\n                                            57465+*                                      But, transaction completions\n                                            57466+*                                      are reported and used for\n                                            57467+*                                      management of the transaction\n                                            57468+*                                      service classes with response\n                                            57469+*                                      time goals. This option should\n                                            57470+*                                      only be used with CICS TORs,\n                                            57471+*                                      the associated AORs should\n                                            57472+*                                      remain at the default \"manage\n                                            57473+*                                      region using goals of\n                                            57474+*                                      transaction\".               @PPA\n 00000072 00                                57475+SMF30INV DC    BL1'0'                  Flag byte                   @LOC 04-IFASMFR3\n                         00000080           57476+SMF30SRV_INV  EQU X'80'                Bit 0 When on, indicates that    04-IFASMFR3\n                                            57477+*                                            the value in SMF30SRV\n                                            57478+*                                            has grown past its 4\n                                            57479+*                                            byte maximum value\n                                            57480+*                                            capacity of 'FFFFFFFF'x\n                                            57481+*                                            and has wrapped back to\n                                            57482+*                                            zero.  SMF30SRV_L is the\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  125\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           57483+*                                            8 byte equivalent of\n                                            57484+*                                            SMF30SRV.             @LOA\n                         00000040           57485+SMF30CSU_INV  EQU X'40'                Bit 1 When on, indicates that    04-IFASMFR3\n                                            57486+*                                            the value in SMF30CSU\n                                            57487+*                                            has grown past its 4\n                                            57488+*                                            byte maximum value\n                                            57489+*                                            capacity of 'FFFFFFFF'x\n                                            57490+*                                            and has wrapped back to\n                                            57491+*                                            zero.  SMF30CSU_L is the\n                                            57492+*                                            8 byte equivalent of\n                                            57493+*                                            SMF30CSU.             @LOA\n                         00000020           57494+SMF30SRB_INV  EQU X'20'                Bit 2 When on, indicates that    04-IFASMFR3\n                                            57495+*                                            the value in SMF30SRB\n                                            57496+*                                            has grown past its 4\n                                            57497+*                                            byte maximum value\n                                            57498+*                                            capacity of 'FFFFFFFF'x\n                                            57499+*                                            and has wrapped back to\n                                            57500+*                                            zero.  SMF30SRB_L is the\n                                            57501+*                                            8 byte equivalent of\n                                            57502+*                                            SMF30SRB.             @LOA\n                         00000010           57503+SMF30IO_INV   EQU X'10'                Bit 3 When on, indicates that    04-IFASMFR3\n                                            57504+*                                            the value in SMF30IO has\n                                            57505+*                                            grown past its 4 byte\n                                            57506+*                                            maximum value capacity\n                                            57507+*                                            of 'FFFFFFFF'x and has\n                                            57508+*                                            wrapped back to zero.\n                                            57509+*                                            SMF30IO_L is the 8 byte\n                                            57510+*                                            equivalent of\n                                            57511+*                                            SMF30IO.             @LOA\n                         00000008           57512+SMF30MSO_INV  EQU X'08'                Bit 4 When on, indicates that    04-IFASMFR3\n                                            57513+*                                            the value in SMF30MSO\n                                            57514+*                                            has grown past its 4\n                                            57515+*                                            byte maximum value\n                                            57516+*                                            capacity of 'FFFFFFFF'x\n                                            57517+*                                            and has wrapped back to\n                                            57518+*                                            zero.  SMF30MSO_L is the\n                                            57519+*                                            8 byte equivalent of\n                                            57520+*                                            SMF30MSO.             @LOA\n                         00000004           57521+SMF30ESU_INV  EQU X'04'                Bit 5 When on, indicates that    04-IFASMFR3\n                                            57522+*                                            the value in SMF30ESU\n                                            57523+*                                            has grown past its 4\n                                            57524+*                                            byte maximum value\n                                            57525+*                                            capacity of 'FFFFFFFF'x\n                                            57526+*                                            and has wrapped back to\n                                            57527+*                                            zero.  SMF30ESU_L is the\n                                            57528+*                                            8 byte equivalent of\n                                            57529+*                                            SMF30ESU.             @LOA\n 00000073 00                                57530+SMF30ZEP DC    X'00'                   Contains information associated  04-IFASMFR3\n                                            57531+*                                      with a potential future\n                                            57532+*                                      function, no further details\n                                            57533+*                                      are available at this time  @0HC\n 00000074 4040404040404040                  57534+SMF30JPN DC    CL8' ' IWMCLSFY SUBCOLN Subsystem collection name        04-IFASMFR3\n                                            57535+*                                      for address space       @WLMPGMY\n 0000007C 00000000                          57536+SMF30MSC DC    F'0'                    MSO SDC, scaled by 10000    @0CA 04-IFASMFR3\n 00000080 0000                              57537+SMF30CPC DC    H'0'                    CPU SDC, scaled by 10       @0CA 04-IFASMFR3\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  126\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000082 0000                              57538+SMF30LOC DC    H'0'                    IOC SDC, scaled by 10       @0CA 04-IFASMFR3\n 00000084 0000                              57539+SMF30SRC DC    H'0'                    SRB SDC, scaled by 10       @0CA 04-IFASMFR3\n 00000086 0000                              57540+SMF30ZNF DC    H'0'                    zAAP Normalization Factor        04-IFASMFR3\n                                            57541+*                                      for IFA service time. Used to\n                                            57542+*                                      convert between real IFA times\n                                            57543+*                                      and normalized IFA times,\n                                            57544+*                                      that is, the equivalent time\n                                            57545+*                                      on a standard CP. Multiply\n                                            57546+*                                      SMF30_TIME_ON_IFA by this value\n                                            57547+*                                      and divide by 256 to calculate\n                                            57548+*                                      the normalized IFA time.    @0DA\n 00000088 0000                              57549+SMF30SNF DC    H'0'                    zIIP Normalization Factor        04-IFASMFR3\n                                            57550+*                                      for zIIP service time. Used to\n                                            57551+*                                      convert between real zIIP times\n                                            57552+*                                      and normalized zIIP times,\n                                            57553+*                                      that is, the equivalent time\n                                            57554+*                                      on a standard CP. Multiply\n                                            57555+*                                      SMF30_TIME_ON_zIIP by this value\n                                            57556+*                                      and divide by 256 to calculate\n                                            57557+*                                      the normalized zIIP time.   @H6A\n 0000008A 404040404040                      57558+SMF30RS6   DC  CL6' '                  Reserved for alignment of        04-IFASMFR3\n                                            57559+*                                      SMF30SRV_L                  @LOA\n 00000090                                   57560+SMF30SRV_L DS  D'0'   RQSVSRVL         TOTAL SERVICE UNITS              04-IFASMFR3\n                                            57561+*                                      This is the 8 byte equivalent of\n                                            57562+*                                      SMF30SRV. Its value continues\n                                            57563+*                                      to grow after SMF30SRV_INV\n                                            57564+*                                      is set.                     @LOA\n 00000098                                   57565+SMF30CSU_L DS  D'0'   RQSVCPUL         CPU SERVICE UNITS                04-IFASMFR3\n                                            57566+*                                      This is the 8 byte equivalent of\n                                            57567+*                                      SMF30CSU. Its value continues\n                                            57568+*                                      to grow after SMF30CSU_INV\n                                            57569+*                                      is set.                     @LOA\n 000000A0                                   57570+SMF30SRB_L DS  D'0'   RQSVSRBL         SRB SERVICE UNITS                04-IFASMFR3\n                                            57571+*                                      This is the 8 byte equivalent of\n                                            57572+*                                      SMF30SRB. Its value continues\n                                            57573+*                                      to grow after SMF30SRB_INV\n                                            57574+*                                      is set.                     @LOA\n 000000A8                                   57575+SMF30IO_L  DS  D'0'   RQSVIOCL         I/O SERVICE UNITS                04-IFASMFR3\n                                            57576+*                                      This is the 8 byte equivalent of\n                                            57577+*                                      SMF30IO. Its value continues\n                                            57578+*                                      to grow after SMF30IO_INV\n                                            57579+*                                      is set.                     @LOA\n 000000B0                                   57580+SMF30MSO_L DS  D'0'   RQSVMSOL         MSO SERVICE UNITS                04-IFASMFR3\n                                            57581+*                                      This is the 8 byte equivalent of\n                                            57582+*                                      SMF30MSO. Its value continues\n                                            57583+*                                      to grow after SMF30MSO_INV\n                                            57584+*                                      is set.                     @LOA\n 000000B8                                   57585+SMF30ESU_L DS  D'0'   RQSVECPL         MSO SERVICE UNITS                04-IFASMFR3\n                                            57586+*                                      This is the 8 byte equivalent of\n                                            57587+*                                      SMF30ESU. Its value continues\n                                            57588+*                                      to grow after SMF30ESU_INV\n                                            57589+*                                      is set.                     @LOA\n 000000C0 F0                                57590+SMF30ACB DC    CL1'0'                  Contains information associated  04-IFASMFR3\n                                            57591+*                                      with a potential future\n                                            57592+*                                      function, no further details are\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  127\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           57593+*                                      available at this time      @LPA\n                         00000080           57594+SMF30LGA EQU  X'80'                    Contains information associated  04-IFASMFR3\n                                            57595+*                                      with a potential future\n                                            57596+*                                      function, no further details are\n                                            57597+*                                      available at this time      @LPA\n                         00000040           57598+SMF30P1A EQU  X'40'                    Contains information associated  04-IFASMFR3\n                                            57599+*                                      with a potential future\n                                            57600+*                                      function, no further details are\n                                            57601+*                                      available at this time      @LWA\n 000000C1 F0                                57602+SMF30CR  DC    CL1'0'                  Contains information associated  04-IFASMFR3\n                                            57603+*                                      with a potential future\n                                            57604+*                                      function, no further details are\n                                            57605+*                                      available at this time      @LPA\n 000000C2                                   57606+SMF30_Capacity_Change_Cnt     DS H The number of processor capacity     04-IFASMFR3\n                                            57607+*                                  changes that occurred since the\n                                            57608+*                                  previous interval or event\n                                            57609+*                                  interval.  This number will be\n                                            57610+*                                  greater than 1 when the number of\n                                            57611+*                                  processor capacity changes exceeded\n                                            57612+*                                  the number  specified in the\n                                            57613+*                                  MAXEVENTINTRECS parmlib option  @LVA\n 000000C4                                   57614+SMF30_RCTPCPUA_Actual         DS F Physical CPU adjustment factor       04-IFASMFR3\n                                            57615+*                                  (i.e. adjustment factor for\n                                            57616+*                                  converting CPU time to equivalent\n                                            57617+*                                  service, in basic-mode with\n                                            57618+*                                  all processors online). Based on\n                                            57619+*                                  Model Capacity Rating.          @LVA\n 000000C8                                   57620+SMF30_RCTPCPUA_Nominal        DS F Physical CPU adjustment factor       04-IFASMFR3\n                                            57621+*                                  (i.e. adjustment factor for\n                                            57622+*                                  converting CPU time to equivalent\n                                            57623+*                                  service in basic-mode with all\n                                            57624+*                                  processors online).  Based on\n                                            57625+*                                  Nominal Model Capacity Rating.  @LVA\n 000000CC                                   57626+SMF30_RCTPCPUA_scaling_factor DS F scaling factor for                   04-IFASMFR3\n                                            57627+*                                  SMF30_RCTPCPUA_actual and\n                                            57628+*                                  SMF30_RCTPCPUA_nominal.         @LVA\n 000000D0                                   57629+SMF30_Capacity_Adjustment_Ind DS XL1  When zero, the indication         04-IFASMFR3\n                                            57630+*                                  is not reported. When in the range\n                                            57631+*                                  1-99, some amount of reduction is\n                                            57632+*                                  indicated. When 100, the machine is\n                                            57633+*                                  operating at normal capacity.\n                                            57634+*                                  Primary CPUs and all secondary-type\n                                            57635+*                                  CPUs are similarly affected.    @LVA\n 000000D1                                   57636+SMF30_Capacity_Change_Rsn     DS XL1 Indicates the reason which is      04-IFASMFR3\n                                            57637+*                                  associated with the present\n                                            57638+*                                  value contained in\n                                            57639+*                                  SMF30_Capacity_Adjustment_Ind.  The\n                                            57640+*                                  bit values of this field correspond\n                                            57641+*                                  to those described in\n                                            57642+*                                  RMCTZ_Capacity_Adjustment_Indication\n                                            57643+*                                  of the IRARMCTZ mapping macro (see\n                                            57644+*                                  Data Areas).                    @PMC\n 000000D2                                   57645+SMF30_Capacity_Flags          DS 0CL1 Processor capacity flags     @LVA 04-IFASMFR3\n                         00000080           57646+SMF30_Event_Driven_Intvl_Rec EQU X'80' When on, indicates that the      04-IFASMFR3\n                                            57647+*                                  current interval record was\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  128\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           57648+*                                  generated as a result of an\n                                            57649+*                                  event, rather than as a result\n                                            57650+*                                  of standard interval expiration\n                                            57651+*                                  based on time.                  @LVA\n                         00000040           57652+SMF30_RQSVSUS_Err            EQU X'40' When on, indicates that an       04-IFASMFR3\n                                            57653+*                                  error occurred while collecting\n                                            57654+*                                  the data for SMF30SUS following a\n                                            57655+*                                  change in processor capacity. If\n                                            57656+*                                  this bit is found to be on when the\n                                            57657+*                                  record is being written, an\n                                            57658+*                                  additional attempt to collect the\n                                            57659+*                                  data from SRM is made. If that\n                                            57660+*                                  attempt is successful, the data is\n                                            57661+*                                  filled in at that time and the\n                                            57662+*                                  SMF30PIN error bit will be off. @LVA\n                         00000020           57663+SMF30_Capacity_Data_err      EQU X'20'  When on, indicates that an      04-IFASMFR3\n                                            57664+*                                  error occurred while collecting\n                                            57665+*                                  the processor capacity data,\n                                            57666+*                                  therefore the following fields\n                                            57667+*                                  are unreliable:\n                                            57668+*                                  SMF30_RCTPCPUA_Actual\n                                            57669+*                                  SMF30_RCTPCPUA_Nominal\n                                            57670+*                                  SMF30_RCTPCPUA_scaling_factor\n                                            57671+*                                  SMF30_Capacity_Adjustment_Ind\n                                            57672+*                                  SMF30_Capacity_Change_Rsn       @LVA\n                         00000010           57673+SMF30_PCD_Rsvd_Exists         EQU X'10' This bit is set in records      04-IFASMFR3\n                                            57674+*                                  generated on systems running\n                                            57675+*                                  z/OS 1.7 through z/OS 1.9. It will\n                                            57676+*                                  remain off in records generated at\n                                            57677+*                                  systems running z/OS 1.10 and\n                                            57678+*                                  above.                          @POA\n                                            57679+*\n                                            57680+*\n                                            57681+*\n                                            57682+*        OPERATOR SECTION\n                                            57683+*\n                                            57684+*  COUNTS ARE INCREASED BY ONE WHEN THE MOUNTED VOLUME IS VERIFIED.\n                                            57685+*  IF AN INCORRECT VOLUME IS MOUNTED, THE COUNT IN NOT INCREASED\n                                            57686+*  EVEN THOUGH ANOTHER MOUNT MESSAGE IS ISSUED.\n                                            57687+*\n                                            57688+*\n 00000000                00000000 00000018  57689+SMF30OPS DSECT ,                       OPERATOR SECTION        @G744PJW 04-IFASMFR3\n 00000000                                   57690+SMF30PDM DS    F'0'   TCTPDASD         NUMBER OF NON-SPECIFIC DASD      04-IFASMFR3\n                                            57691+*                                      MOUNTS                  @G744PJW\n 00000004                                   57692+SMF30PRD DS    F'0'   TCTRDASD         NUMBER OF SPECIFIC DASD MOUNTS   04-IFASMFR3\n                                            57693+*                                                              @G742PJW\n 00000008                                   57694+SMF30PTM DS    F'0'   TCTPTAPE         NUMBER OF NON-SPECIFIC TAPE      04-IFASMFR3\n                                            57695+*                                      MOUNTS                  @G742PJW\n 0000000C                                   57696+SMF30TPR DS    F'0'   TCTRTAPE         NUMBER OF SPECIFIC TAPE MOUNTS   04-IFASMFR3\n                                            57697+*                                                              @G742PJW\n 00000010                                   57698+SMF30MTM DS    F'0'   TCTPMSS          NUMBER OF NON-SPECIFIC MSS       04-IFASMFR3\n                                            57699+*                                      MOUNTS. AS OF MVS/SP4.1, THIS\n                                            57700+*                                      FIELD IS NO LONGER VALID. THE\n                                            57701+*                                      DATA WILL ALWAYS BE ZEROS.\n                                            57702+*                                                              @G742PJW\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  129\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000014                                   57703+SMF30MSR DS    F'0'   TCTRMSS          NUMBER OF SPECIFIC MSS MOUNTS.   04-IFASMFR3\n                                            57704+*                                      AS OF MVS/SP4.1, THIS\n                                            57705+*                                      FIELD IS NO LONGER VALID. THE\n                                            57706+*                                      DATA WILL ALWAYS BE ZEROS.\n                                            57707+*                                                              @G742PJW\n                                            57708+*                                                                23@DPD\n                                            57709+*\n                                            57710+*        APPC/MVS Cumulative Resource Section                      @LMA\n                                            57711+*\n 00000000                00000000 00000028  57712+SMF30AR  DSECT ,                       APPC/MVS Cumulative Resource     04-IFASMFR3\n                                            57713+*                                      Section                     @LMA\n 00000000                                   57714+SMF30CN  DS    F'0'                    TOTAL NUMBER OF CONVERSATIONS    04-IFASMFR3\n                                            57715+*                                      ASSOCIATED WITH THE TRANSACTION\n                                            57716+*                                      PROGRAM (TP) ID, BOTH CURRENTLY\n                                            57717+*                                      ACTIVE AND DEALLOCATED.     @LMA\n 00000004                                   57718+SMF30CNA DS    F'0'                    TOTAL NUMBER OF CONVERSATIONS    04-IFASMFR3\n                                            57719+*                                      ALLOCATED.                  @LMA\n 00000008                                   57720+SMF30SEN DS    F'0'                    TOTAL NUMBER OF TIMES THE TP     04-IFASMFR3\n                                            57721+*                                      ISSUED A SEND VERB.         @LMA\n 0000000C                                   57722+SMF30DAT DS    CL8' '                  TOTAL AMOUNT OF DATA SENT BY     04-IFASMFR3\n                                            57723+*                                      THE TP.                     @LMA\n 00000014                                   57724+SMF30REC DS    F'0'                    TOTAL NUMBER OF TIMES THE TP     04-IFASMFR3\n                                            57725+*                                      ISSUED A RECIEVE VERB.      @LMA\n 00000018                                   57726+SMF30DAR DS    CL8' '                  TOTAL AMOUNT FO DATA RECIEVED    04-IFASMFR3\n                                            57727+*                                      BY THE TP.                  @LMA\n 00000020                                   57728+SMF30TAC DS    F'0'                    TOTAL NUMBER OF ACTIVE      @DPA 04-IFASMFR3\n                                            57729+*                                        CONVERSATIONS.            @DPA\n 00000024                                   57730+SMF30ATR DS    F'0'                    NUMBER OF APPC/MVS TRANSACTIONS  04-IFASMFR3\n                                            57731+*                                      SCHEDULED BY THE APPC/MVS\n                                            57732+*                                      TRANSACTION SCHEDULER(ASCH) @DPA\n                                            57733+*\n                                            57734+*        APPC/MVS Resource Section                                 @04A\n                                            57735+*\n 00000000                00000000 00000028  57736+SMF30DR  DSECT ,                       APPC/MVS Resource Section   @04A 04-IFASMFR3\n 00000000                                   57737+SMF30DC  DS    F'0'                    Number of conversations          04-IFASMFR3\n                                            57738+*                                      associated with the transaction\n                                            57739+*                                      program (TP) ID, both currently\n                                            57740+*                                      active and deallocated.     @04A\n 00000004                                   57741+SMF30DCA DS    F'0'                    Number of all                    04-IFASMFR3\n                                            57742+*                                      conversations allocated.    @04A\n 00000008                                   57743+SMF30DSC DS    F'0'                    Number of times the              04-IFASMFR3\n                                            57744+*                                      transaction program (TP) issued\n                                            57745+*                                      Send call.  Note: Due to the\n                                            57746+*                                      possibilty of an interval or\n                                            57747+*                                      step ending in the middle of a\n                                            57748+*                                      SEND call, this field may\n                                            57749+*                                      contain zero while SMF30DDS\n                                            57750+*                                      contains a non-zero value.  @04A\n 0000000C                                   57751+SMF30DDS DS    CL8' '                  Amount of data sent by the       04-IFASMFR3\n                                            57752+*                                      transaction program (TP).   @04A\n 00000014                                   57753+SMF30DRC DS    F'0'                    Number of times the              04-IFASMFR3\n                                            57754+*                                      transaction program (TP) issued\n                                            57755+*                                      a Receive call.  Note: Due to\n                                            57756+*                                      the possibilty of an interval or\n                                            57757+*                                      step ending in the middle of a\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  130\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           57758+*                                      RECEIVE call, this field may\n                                            57759+*                                      contain zero while SMF30DDR\n                                            57760+*                                      contains a non-zero value.  @04A\n 00000018                                   57761+SMF30DDR DS    CL8' '                  Amount of data received          04-IFASMFR3\n                                            57762+*                                      by the transaction program (TP).\n                                            57763+*                                                                  @04A\n 00000020                                   57764+SMF30DAC DS    F'0'                    Number of active                 04-IFASMFR3\n                                            57765+*                                      conversations.              @04A\n 00000024                                   57766+SMF30DTR DS    F'0'                    Number of APPC/MVS               04-IFASMFR3\n                                            57767+*                                      transactions programs scheduled\n                                            57768+*                                      by the APPC/MVS transaction\n                                            57769+*                                      scheduler (ASCH).           @04A\n                                            57770+*\n                                            57771+*        OpenMVS Process Section                                   @0OC\n                                            57772+*\n 00000000                00000000 00000060  57773+SMF30OP  DSECT ,                       OpenMVS Process Section     @0OC 04-IFASMFR3\n 00000000                                   57774+SMF30OPI DS    F'0'                    Process ID                  @LUA 04-IFASMFR3\n 00000004                                   57775+SMF30OPG DS    F'0'                    Process Group ID            @LUA 04-IFASMFR3\n 00000008                                   57776+SMF30OUI DS    F'0'                    Process User ID             @LUA 04-IFASMFR3\n 0000000C                                   57777+SMF30OUG DS    F'0'                    Process User Group ID       @LUA 04-IFASMFR3\n 00000010                                   57778+SMF30OSI DS    F'0'                    Process Session ID          @LUA 04-IFASMFR3\n 00000014                                   57779+SMF30OSC DS    F'0'                    Total CPU time accumulated by    04-IFASMFR3\n                                            57780+*                                      the syscalls Requested by the\n                                            57781+*                                      process (hundreths of a\n                                            57782+*                                      second)                     @PCC\n 00000018                                   57783+SMF30OST DS    F'0'                    Number of OpenMVS Syscalls       04-IFASMFR3\n                                            57784+*                                      Requested by the process    @PCC\n 0000001C                                   57785+SMF30ODR DS    F'0'                    Number of directory I/O blocks   04-IFASMFR3\n                                            57786+*                                      read by the process         @D1C\n 00000020                                   57787+SMF30OFR DS    F'0'                    Number of I/O blocks read        04-IFASMFR3\n                                            57788+*                                      for Standard files by the\n                                            57789+*                                      process                     @D1C\n 00000024                                   57790+SMF30OFW DS    F'0'                    Number of I/O blocks written     04-IFASMFR3\n                                            57791+*                                      for Standard files by the\n                                            57792+*                                      process                     @D1C\n 00000028                                   57793+SMF30OPR DS    F'0'                    Number of I/O blocks read        04-IFASMFR3\n                                            57794+*                                      for Pipe files by the\n                                            57795+*                                      process                     @D1C\n 0000002C                                   57796+SMF30OPW DS    F'0'                    Number of I/O blocks written     04-IFASMFR3\n                                            57797+*                                      for Pipe files by the\n                                            57798+*                                      process                     @D1C\n 00000030                                   57799+SMF30OSR DS    F'0'                    Number of I/O blocks read        04-IFASMFR3\n                                            57800+*                                      for Special files by the\n                                            57801+*                                      process                     @D1C\n 00000034                                   57802+SMF30OSW DS    F'0'                    Number of I/O blocks written     04-IFASMFR3\n                                            57803+*                                      for Special files by the\n                                            57804+*                                      process                     @D1C\n 00000038                                   57805+SMF30OLL DS    F'0'                    Number of path name Look calls   04-IFASMFR3\n                                            57806+*                                      to the logical file system  @LUA\n 0000003C                                   57807+SMF30OLP DS    F'0'                    Number of path name Look calls   04-IFASMFR3\n                                            57808+*                                      to the physical file system @LUA\n 00000040                                   57809+SMF30OGL DS    F'0'                    Number of path name Generation   04-IFASMFR3\n                                            57810+*                                      calls to the logical file system\n                                            57811+*                                                                  @LUA\n 00000044                                   57812+SMF30OGP DS    F'0'                    Number of path name Generation   04-IFASMFR3\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  131\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           57813+*                                      calls to the physical file\n                                            57814+*                                      system                      @LUA\n 00000048                                   57815+SMF30OPP DS    F'0'           OpenMVS parent process ID number     @L5A 04-IFASMFR3\n 0000004C                                   57816+SMF30OKR DS    F'0'           Number of I/O blocks read for Remote      04-IFASMFR3\n                                            57817+*                             socket by the process                @L5A\n 00000050                                   57818+SMF30OKW DS    F'0'           Number of I/O blocks written for          04-IFASMFR3\n                                            57819+*                             Remote socket by the process         @L3A\n 00000054                                   57820+SMF30OMS DS    F'0'           Number of bytes that message queues       04-IFASMFR3\n                                            57821+*                             sent                                 @L9A\n 00000058                                   57822+SMF30OMR DS    F'0'           Number of bytes that message queues       04-IFASMFR3\n                                            57823+*                             received                             @L9A\n 0000005C                                   57824+SMF30OSY DS    F'0'           Number of sync() function calls      @LCA 04-IFASMFR3\n                                            57825+*\n                                            57826+* Usage Data Section                                               @06A\n                                            57827+*\n 00000000                00000000 0000004C  57828+SMF30UD  DSECT                Usage Data Section                   @06A 04-IFASMFR3\n 00000000                                   57829+SMF30UPO DS    CL16           Product Owner or Vendor Name         @06A 04-IFASMFR3\n                                            57830+*                             (obtained from PRODOWNER option of   @06A\n                                            57831+*                             IFAUSAGE macro)                      @06A\n 00000010                                   57832+SMF30UPN DS    CL16           Product Name                         @06A 04-IFASMFR3\n                                            57833+*                             (obtained from PRODNAME option of    @06A\n                                            57834+*                             IFAUSAGE macro)                      @06A\n 00000020                                   57835+SMF30UPV DS    CL8            Product Version                      @06A 04-IFASMFR3\n                                            57836+*                             (obtained from PRODVERS option of    @06A\n                                            57837+*                             IFAUSAGE macro)                      @06A\n 00000028                                   57838+SMF30UPQ DS    CL8            Product Qualifer                     @06A 04-IFASMFR3\n                                            57839+*                             (obtained from PRODQUAL option of    @06A\n                                            57840+*                             IFAUSAGE macro)                      @06A\n 00000030                                   57841+SMF30UPI DS    CL8            Product ID Value                     @06A 04-IFASMFR3\n                                            57842+*                             (obtained from PRODID option of      @06A\n                                            57843+*                             IFAUSAGE macro)                      @06A\n 00000038                                   57844+SMF30UCT DS    F              Product CPU Time (.01 Seconds)       @06A 04-IFASMFR3\n 0000003C                                   57845+SMF30UCS DS    F              Product SRB Time (.01 Seconds)       @06A 04-IFASMFR3\n 00000040                                   57846+SMF30URD DS    CL8            Product 'Specific' Resource Data     @06A 04-IFASMFR3\n 00000048                                   57847+SMF30UDF DS    XL1            Data format of value in SMF30URD     @06A 04-IFASMFR3\n                                            57848+*                                      '0' - No Value              @06A\n                                            57849+*                                      '1' - CPU Time (STCK)       @06A\n                                            57850+*                                      '2' - Binary                @06A\n                                            57851+*                                      '3' - Long Floating Point   @06A\n 00000049                                   57852+SMF30UFG DS    XL1            Usage Entry Flags                    @06A 04-IFASMFR3\n                         00000080           57853+SMF30UUN EQU   X'80'          UNAUTHORIZED REGISTER Requested      @06A 04-IFASMFR3\n 0000004A                                   57854+         DS    XL2            Reserved                             @06A 04-IFASMFR3\n                                            57855+*\n                                            57856+*        ARM Element Section                                       @L3A\n                                            57857+*\n 00000000                00000000 0000004D  57858+SMF30RM  DSECT ,                       ARM Section                 @L3A 04-IFASMFR3\n 00000000                                   57859+SMF30RNM DS    CL16           Element Name                         @L3A 04-IFASMFR3\n 00000010                                   57860+SMF30RTP DS    CL8            Element Type                         @L3A 04-IFASMFR3\n 00000018                                   57861+SMF30RRG DS    CL16           Restart Group for Element            @L3A 04-IFASMFR3\n 00000028                                   57862+SMF30RSN DS    CL8            The system name for the system on    @L3A 04-IFASMFR3\n                                            57863+*                             which the element was initially      @L3A\n                                            57864+*                             started, blank, for the initial      @L3A\n                                            57865+*                             start.  The current system name is   @L3A\n                                            57866+*                             in the SMF30SYN field.               @L3A\n 00000030                                   57867+SMF30RGT DS    F -            Time (local) Element requested       @L3A 04-IFASMFR3\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  132\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           57868+*                             REGISTER Function, in hundredths of  @L3A\n                                            57869+*                             a second                             @L3A\n 00000034                                   57870+SMF30RGD DS    P -            Date Element requested REGISTER      @L3A 04-IFASMFR3\n                                            57871+*                             Function, in the form 0cyydddF       @L3A\n                                            57872+*                             (where 'F' is the sign)              @L3A\n 00000038                                   57873+SMF30RWT DS    F -            Time (local) Element requested       @L3A 04-IFASMFR3\n                                            57874+*                             WAITPRED function, in hundredths of  @L3A\n                                            57875+*                             a second                             @L3A\n                                            57876+*                             Note that this is the time that      @L3A\n                                            57877+*                             the function was requested, not      @L3A\n                                            57878+*                             satisfied.                           @L3A\n                                            57879+*                             0, if the element has not            @L3A\n                                            57880+*                             requested the function.              @L3A\n 0000003C                                   57881+SMF30RWD DS    P -            Date Element requested WAITPRED      @L3A 04-IFASMFR3\n                                            57882+*                             function, in the following format:   @L3A\n                                            57883+*                             0cyydddF (where 'F' is the sign)     @L3A\n                                            57884+*                             0, if the element has not            @L3A\n                                            57885+*                             requested the function.              @L3A\n 00000040                                   57886+SMF30RYT DS    F -            Time (local) Element was READY,      @L3A 04-IFASMFR3\n                                            57887+*                             in hundredths of a second            @L3A\n                                            57888+*                             0, if the element is not yet READY   @L3A\n 00000044                                   57889+SMF30RYD DS    P -            Date Element was READY, in the       @L3A 04-IFASMFR3\n                                            57890+*                             following format:  0cyydddF (where   @L3A\n                                            57891+*                             'F' is the sign)                     @L3A\n                                            57892+*                             0, if the element is not yet READY   @L3A\n 00000048                                   57893+SMF30RTT DS    F -            Time (local) Element was             @L3A 04-IFASMFR3\n                                            57894+*                             DEREGISTERED, in hundredths of a     @L3A\n                                            57895+*                             second                               @L3A\n                                            57896+*                             0, if the element is not yet         @L3A\n                                            57897+*                             DEREGISTERED or ended abnormally.    @L3A\n 0000004C                                   57898+SMF30RTD DS    P -            Date Element was DEREGISTERED, in    @L3A 04-IFASMFR3\n                                            57899+*                             the following format:  0cyydddF      @L3A\n                                            57900+*                             (where 'F' is the sign)              @L3A\n                                            57901+*                             0, if the element is not yet         @L3A\n                                            57902+*                             DEREGISTERED or ended abnormally.    @L3A\n                                            57903+*                                                                  @LFA\n                                            57904+*  Multisystem enclave Remote system data section.                 @LFA\n                                            57905+*                                                                  @LFA\n 00000000                00000000 00000014  57906+SMF30MSE DSECT ,              MultiSystem Enclave Remote System    @LFA 04-IFASMFR3\n                                            57907+*                             Data section.                        @LFA\n 00000000                                   57908+SMF30MKY DS    0CL12' '       Unique system key.                   @LFA 04-IFASMFR3\n 00000000                                   57909+SMF30MRS DS    CL8            System name.                         @LFA 04-IFASMFR3\n 00000008 00000000                          57910+SMF30MRA DC    F'0'           Adjustment factor for CPU rate.      @LFA 04-IFASMFR3\n                                            57911+*                             (Number of sixteenths of one CPU     @LFA\n                                            57912+*                             microsecond per CPU service unit)    @LFA\n 0000000C 00000000                          57913+SMF30MRD DC    F'0'           CPU Time used by dependent enclaves  @LFA 04-IFASMFR3\n                                            57914+*                             that executed on named system        @LFA\n                                            57915+*                             (in hundredths of a second).         @LFA\n 00000010 00000000                          57916+SMF30MRI DC    F'0'           CPU Time used by independent         @LFA 04-IFASMFR3\n                                            57917+*                             enclaves that executed on named      @LFA\n                                            57918+*                             system                               @LFA\n                                            57919+*                             (in hundredths of a second).         @LFA\n                                            57920+*\n                                            57921+* End of Type 30 Mapping ....                                      @LUA\n                                            57922+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  133\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           57923+*        IGWSMF SMF42_01=YES,SMF42_02=YES,SMF42_03=YES,SMF42_04=YES,   X\n                                                 +               SMF42_05=YES,SMF42_06=YES,SMF42_09=YES,SMF42_0A=YES,    X\n                                                 +               SMF42_0B=YES,SMF42_0F=YES,SMF42_0G=YES,SMF42_0H=YES,    X\n                                                 +               SMF42_0I=YES,SMF42_0J=YES,SMF42_0K=YES,SMF42_0L=YES,    X\n                                                 +               SMF42_0M=YES,SMF42_0N=YES,SMF42_0P=YES,SMF42_0Q=YES,    X\n                                                 +               DSECT=YES\n                                            57925+* %IGWSMF_1:;\n                                            57926+*/* START OF SPECIFICATIONS *******************************************\n                                            57927+*   $MAC(IGWSMF) COMP(DF104):                                         *\n                                            57928+*01* MACRO NAME: IGWSMF                                               *\n                                            57929+*01* DESCRIPTIVE NAME: SMF Record Type 42 Definition                  *\n                                            57930+*                                                                     *\n                                            57931+*                                                                     *\n                                            57932+*PROPRIETARY V3 STATEMENT                                             *\n                                            57933+*LICENSED MATERIALS - PROPERTY OF IBM                                 *\n                                            57934+*\"RESTRICTED MATERIALS OF IBM\"                                        *\n                                            57935+*5695-DF1                                                             *\n                                            57936+*COPYRIGHT 1989, 2008 IBM CORP.                                       *\n                                            57937+*END PROPRIETARY V3 STATEMENT                                         *\n                                            57938+*                                                                     *\n                                            57939+*    FUNCTION: Map the following SMF record type 42 subtypes:         *\n                                            57940+*                                                                     *\n                                            57941+*                                                                     *\n                                            57942+*      Subtype 1 - BMF totals section for analysis of overall BMF     *\n                                            57943+*                  performance.  One storage class summary section    *\n                                            57944+*                  for each storage class.                            *\n                                            57945+*                                                                     *\n                                            57946+*      Subtype 2 - One section for each cache control unit (3990-3)   *\n                                            57947+*                  having at least one SMS managed device attached.   *\n                                            57948+*                  One section for each SMS managed volume attached   *\n                                            57949+*                  to a 3990-3 control unit.                          *\n                                            57950+*                                                                     *\n                                            57951+*      Subtype 3 - For SMS Operational Services event audit records   *\n                                            57952+*                  written each time the SMS configuration changes    *\n                                            57953+*                  when 1) operator issues VARY SMS, or 2) ISMF       *\n                                            57954+*                  'ACTIVATE' or activate via SETSMS, or 3) ENF       *\n                                            57955+*                  event occurred after VARY of SMS managed volume.   *\n                                            57956+*                                                                     *\n                                            57957+*      Subtype 4 - A subtype 4 record will be written for    @OY66824 *\n                                            57958+*                  System Data Mover session statistics for a@OY66824 *\n                                            57959+*                  Concurrent Copy session or for an Extended@OY66824 *\n                                            57960+*                  Sequential Data Set when interfacing with @OY66824 *\n                                            57961+*                  the backup program.                       @OY66824 *\n                                            57962+*                                                                     *\n                                            57963+*      Subtype 5 - Storage Class Response Time Section.          @L1A *\n                                            57964+*                  Contains I/O statistics by storage class.     @L1A *\n                                            57965+*                                                                     *\n                                            57966+*      Subtype 6 - Data Set by Job section.                      @L1A *\n                                            57967+*                  Contains I/O statistics by data set.          @L1A *\n                                            57968+*                  If recorded at end of SMF interval, one       @L1A *\n                                            57969+*                  record contains data for all open data sets   @L1A *\n                                            57970+*                  in an address space.                          @L1A *\n                                            57971+*                  If recorded during Close, one record contains @L1A *\n                                            57972+*                  data for all concatenated data sets.          @L1A *\n                                            57973+*                                                                     *\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  134\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           57974+*                    ______________________________________      @L1A *\n                                            57975+*                   | SMF42 header                         |     @L1A *\n                                            57976+*                   |______________________________________      @L1A *\n                                            57977+*                   | SMF42 subtype 6 header section       |     @L1A *\n                                            57978+*                   |______________________________________      @L1A *\n                                            57979+*                   | SMF42 product section                |     @L1A *\n                                            57980+*                   |______________________________________      @L1A *\n                                            57981+*                   | SMF42 subtype 6 job header section   |     @L1A *\n                                            57982+*                   |______________________________________      @L1A *\n                                            57983+*                   | SMF42 subtype 6 DS #1 header section |     @L1A *\n                                            57984+*                   |______________________________________      @L1A *\n                                            57985+*                   | SMF42 subtype 6 DS #1 I/O stats      |     @L1A *\n                                            57986+*                   |______________________________________      @L1A *\n                                            57987+*                   | SMF42 subtype 6 DS #2 header section |     @L1A *\n                                            57988+*                   |______________________________________      @L1A *\n                                            57989+*                   | SMF42 subtype 6 DS #2 I/O stats      |     @L1A *\n                                            57990+*                   |______________________________________      @L1A *\n                                            57991+*                                                                     *\n                                            57992+*      Subtype  7 - Used by NFS                                  @10A *\n                                            57993+*                                                                     *\n                                            57994+*      Subtype  8 - Used by NFS                                  @10A *\n                                            57995+*                                                                     *\n                                            57996+*      Subtype  9 - A subtype 9 record will be written for       @P1C *\n                                            57997+*                   B37,D37 or E37 abends to document            @P1A *\n                                            57998+*                   information such as jobname, data set name,  @P1A *\n                                            57999+*                   volume serial number, number of extents      @P1A *\n                                            58000+*                   on the volume, secondary allocation amount   @P1A *\n                                            58001+*                   etc.                                         @P1A *\n                                            58002+*                                                                     *\n                                            58003+*      Subtype 10 - A subtype 10 record will be written at the   @23A *\n                                            58004+*                   time of volume selection failure because of  @23A *\n                                            58005+*                   insufficient space when allocate a data set. @23A *\n                                            58006+*                                                                     *\n                                            58007+*      Subtype 11 - A subtype 11 record will be written for      @07A *\n                                            58008+*                   System Data Mover session statistics for     @07A *\n                                            58009+*                   Extended Remote Copy (XRC) sessions when     @07A *\n                                            58010+*                   the global SMF interval expires.             @07A *\n                                            58011+*                                                                     *\n                                            58012+*      Subtype 12 - Available                                    @10A *\n                                            58013+*                                                                     *\n                                            58014+*      Subtype 13 - Available                                    @10A *\n                                            58015+*                                                                     *\n                                            58016+*      Subtype 14 - Available                                    @10A *\n                                            58017+*                                                                     *\n                                            58018+*      Subtype 15 - Storage class MSR summary                    @10A *\n                                            58019+*                   Below Bar and Above Bar (64 bit addressing)  @64A *\n                                            58020+*                                                                     *\n                                            58021+*      Subtype 16 - Data set MSR summary                         @10A *\n                                            58022+*                   Below Bar and Above Bar (64 bit addressing)  @64A *\n                                            58023+*                                                                     *\n                                            58024+*      Subtype 17 - Coupling facility lock structure summary     @10A *\n                                            58025+*                                                                     *\n                                            58026+*      Subtype 18 - Coupling facility cache partition summary    @10A *\n                                            58027+*                                                                     *\n                                            58028+*      Subtype 19 - Local Buffer Manager LRU Activity summary    @11A *\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  135\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           58029+*                   Below Bar and Above Bar (64 bit addressing)  @64A *\n                                            58030+*                                                                     *\n                                            58031+*      Subtype 20 - STOW Initialize (deletes all members in a    @L2A *\n                                            58032+*                     PDSE)                                      @L2A *\n                                            58033+*                                                                     *\n                                            58034+*      Subtype 21 - Member deletion                              @L2A *\n                                            58035+*                                                                     *\n                                            58036+*      Subtype 22 - DFSMSrmm Audit Information                   @MZA *\n                                            58037+*                                                                     *\n                                            58038+*      Subtype 23 - DFSMSrmm Security Information                @MZA *\n                                            58039+*                                                                     *\n                                            58040+*      Subtype 24 - Member Add or Replace                        @26A *\n                                            58041+*                                                                     *\n                                            58042+*      Subtype 25 - Member Rename                                @26A *\n                                            58043+*                                                                     *\n                                            58044+*    NOTES:                                                           *\n                                            58045+*                                                                     *\n                                            58046+*      DEPENDENCIES:                                                  *\n                                            58047+*      RESTRICTIONS: None                                             *\n                                            58048+*                                                                     *\n                                            58049+*    MACRO:                                                           *\n                                            58050+*                                                                     *\n                                            58051+*      PROCESSOR: PLX                                                 *\n                                            58052+*      DISTRIBUTION LIBRARY: PLSMACS                                  *\n                                            58053+*      ATTRIBUTES:                                                    *\n                                            58054+*                                                                     *\n                                            58055+*        This macro produces a PLAS structure which describes the     *\n                                            58056+*        format of the SMF record type 42.                            *\n                                            58057+*                                                                     *\n                                            58058+*    EXIT NORMAL:                                                     *\n                                            58059+*                                                                     *\n                                            58060+*      RETURN CODE: 0                                                 *\n                                            58061+*      No errors detected                                             *\n                                            58062+*                                                                     *\n                                            58063+*    EXIT ERRORS:                                                     *\n                                            58064+*                                                                     *\n                                            58065+*        No errors will be detected by this macro.                    *\n                                            58066+*                                                                     *\n                                            58067+*    EXTERNAL REFERENCES:                                             *\n                                            58068+*                                                                     *\n                                            58069+*      MACROS:                                                        *\n                                            58070+*        None                                                         *\n                                            58071+*                                                                     *\n                                            58072+***********************************************************************\n                                            58073+*                                                                     *\n                                            58074+*    CHANGE ACTIVITY:                                                 *\n                                            58075+*                                                                     *\n                                            58076+***********************************************************************\n                                            58077+*                                                                     *\n                                            58078+*   $L0=EVNTAUD,HDP3320,871124,STLRLF: SMF Event Audit Records        *\n                                            58079+*   $01=OY36584,HDP3320,901008,SJDAB: Make product sect. end word bdy *\n                                            58080+*   $02=OY48288,HDP3330,911022,SJPLMW: Change header to only include  *\n                                            58081+*                      the subtype triplets for the selected subtype  *\n                                            58082+*                      to be written with the SMF record. Fields in   *\n                                            58083+*                      subtype 1 were changed from EBCDIC 8 byte      *\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  136\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           58084+*                      fields to binary 4 byte fields. New fields     *\n                                            58085+*                      were added to subtype 3.                       *\n                                            58086+*   $L1=DCME,JDZ1110,920121,SJPLMW: Dynamic Cache Mgmt support        *\n                                            58087+*   $03=OY62455,JDZ1110,930517,SJPLMM: Macro not shipped w/110        *\n                                            58088+*   $04=OY66824,JDZ1110,930915,TUCKAD: Add subtype 4                  *\n                                            58089+*   $RT=I/O DELAY,HDZ11B0,931130,SJPLJB: I/O delay statistics         *\n                                            58090+*   $RT=IODELAY,HDZ11B0,931015,SJPLJB:  I/O Delay Statistics     @RTA *\n                                            58091+*   Duplicate symbol name                                     @OW00573*\n                                            58092+*   Stratis support                                           @OW00159*\n                                            58093+*   $07=OW08476,JDZ1110,940929,TUCKAD: Add Subtype 11             @07A*\n                                            58094+*   Changed 1Cl0008 to 1CL0008.                               @OW09203*\n                                            58095+*   $DM=RLS CMM,HDZ11C0,950106,      : Add Subtypes 15,16,17,18   @10A*\n                                            58096+*   $10=OW21970,HDZ11C0,08/06/96,SJPLMKD: Update sub-type 15,16,  @10A*\n                                            58097+*   17,18 to add thread stats and new locking fields.             @10A*\n                                            58098+*   $08=OW16041,HDZ11C0,10/04/95,SJPLRMS: Add bit in Subtype 2 to @08A*\n                                            58099+*   indicate the statistics are for D/T3990-6 enhanced mode.      @08A*\n                                            58100+*   $09=OW16125,HDZ11C0,10/04/95,SJPLRMS: Add GMT offset in sub-  @09A*\n                                            58101+*   type 6 to allow correct calculation of local time.            @09A*\n                                            58102+*   $P1=SMST42,HDZ11D0.103096,SJPLJAL: Add Subtype 9              @P1A*\n                                            58103+*   $P1=OW20866,HDZ11C0,06/06/96,SJPLJAB: Add Volume statistics   @P1A*\n                                            58104+*   to the Subtype 5 record and additional data set flags to the  @P1A*\n                                            58105+*   Subtype 6 record.                                             @P1A*\n                                            58106+*   $11=OW22419,HDZ11C0,10/03/96,SJPLMKD: Add sub-type 19 and     @11A*\n                                            58107+*                                         modify sub-type 18.     @11A*\n                                            58108+*   $P2=K140182,HDZ11D0,12/31/96,SJPLJAL: Remove fld: S42SGNME    @P2A*\n                                            58109+*   $12=OW26451,HDZ11D0,970418,SJPLMV: add two new fields to      @12A*\n                                            58110+*   subtype 6, maximum I/O response and service time by dataset   @12A*\n                                            58111+*   $13=OW30233,HDZ11D0,971103,SJPLGEC: CORRECT ASSEMBLY ERRORS   @13A*\n                                            58112+*   $14=OW28921,HDZ11C0,971210,TUCGEM: Add Planned outage         @14A*\n                                            58113+*   $15=OW32781,HDZ11D0,980414,SJPLGEC: Dup S42DSN label for      @15A*\n                                            58114+*                                       record type 6 and 9       @16A*\n                                            58115+*   $16=OW33202,HDZ11D0,980508,SJPLMKD: Dup S42SRH label for      @16A*\n                                            58116+*                                       record type 1             @16A*\n                                            58117+*   $17=OW35542,HDZ11D0,981020,SJPLJAL: MACRO CONTROL STATEMENT   @17A*\n                                            58118+*                                       INCORRECTLY COMMENTED OUT @17A*\n                                            58119+*   $18=OW38073,HDZ11E0,990309,SJPLRAV: BMF cache metrics         @18A*\n                                            58120+*   $19=OW34238,HDZ11E0,981203,SJPLMV:  Fibre Channel Support     @19A*\n                                            58121+*   $21=OW39785,HDZ11E0,990528,SJPLDLM: Update MMF for CDATA      @21A*\n                                            58122+*   $20=OW41407,HDZ11C0,990819,TUCRNC: Four digit device numbers  @20A*\n                                            58123+*   $23=AUTOMAT,HDZ11G0,000321,SJPLELA: Add Subtype 10 for record @23A*\n                                            58124+*       the info in allocation process when volume selection fails@23A*\n                                            58125+*   $L2=HDZ11G0,HDZ11G0,001214,SJPLREB: Subtype 20 for stow initialize\n                                            58126+*       and subtype 21 for member deletion.                       @L2A*\n                                            58127+*   $24=K170387,HDZ11G0,010213,SJPLELA: Add unit for space qnty   @24A*\n                                            58128+*   $22=OW48124,HDZ11C0,010209,TUCDRB: Remove assembler comment   @22A*\n                                            58129+*   $P5=K170794,HDZ11G0,010910,SHPLMKD: Add SMF support for >4k   @P5A*\n                                            58130+*                                       Correct Display Cache     @P5A*\n                                            58131+*                                       Sphere counts.            @P5A*\n                                            58132+*   $24=OW53524,HDZ11G0,020311,sjplreb: correct interface parms   @24A*\n                                            58133+*   $J1=OW54007,HDZ11F0,020321,SJPLJRC: Add UCB data in subtype 3 @J1A*\n                                            58134+*                                       sysroute of OW53933       @J1A*\n                                            58135+*   $64=OA12211,HDZ11K0,041005,SJPLPJS: Add above bar stats for   @64A*\n                                            58136+*                                       SMF42-19 records          @64A*\n                                            58137+*   $L3=MLS,HDZ1A10,060222,JCLee:       Add MLS support           @L3A*\n                                            58138+*   $MZ=V1R10  ,HDZ1A10,070502,MZAH   : DFSMSrmm subtypes         @MZA*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  137\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           58139+*   $65=HDZ1A10,070823,TUCRAT: Add SDM EAV SMF42-4 records        @65A*\n                                            58140+*   $25=HDZ1A10,071031,JASONCL: Remove * after S42VSMSF           @25A*\n                                            58141+*   $P6=HDZ1A10,080130,BPOOJA : Correct Spelling errors           @P6A*\n                                            58142+*   $P7=K1A2300,HDZ1A10,080222,JASONCL: MLS support in detail part@P7A*\n                                            58143+*   $26=OA25205,HDZ1A10,07/08/2008,sjplreb:                       @26A\n                                            58144+*      1. Add a new section to subtype 20 and 21 to report racf userid\n                                            58145+*      2. New subtype 24 for add/replace of a pds/pdse member\n                                            58146+*      3. New subtype 25 for rename of a pds/pdse member\n                                            58147+*   $27=OA25688,HDZ1A10,080530,SJPLMV: Flash Memory ehancement    @27A\n                                            58148+*   $28=OA31648,HDZ1190,02/16/2010,TTao: lcdlatch contention cnt  @28A\n                                            58149+*   $29=OA30300,HDZ1A10,090901,BPOOJA:  Add new field for castout @29A\n                                            58150+*                                       lock retry count          @29A\n                                            58151+* END OF SPECIFICATIONS **********************************************/\n                                            58152+* %GOTO IGWSMF_2;                         /*\n                                            58153+*\n                                            58154+*\n                                            58155+*\n                                            58156+*\n                                            58157+*   -----------------------------------------------------------------\n                                            58158+*     Header for SMF record type 42\n                                            58159+*   -----------------------------------------------------------------\n                                            58160+*\n                                            58161+*\n 00000000                00000000 00000024  58162+SMF42    DSECT ,                                                        03-IGWSMF\n 00000000                                   58163+SMF42BAS DS    0D        SMF42BAS is the basing expr.                   03-IGWSMF\n 00000000                                   58164+SMF42RCL DS    1FL2      Record Length                                  03-IGWSMF\n 00000002                                   58165+SMF42SGD DS    1FL2      Segment Descriptor (RDW) -- 0 if record is    X03-IGWSMF\n                                                 +                         not spanned\n 00000004                                   58166+SMF42FLG DS    0BL1      System indicator flags                         03-IGWSMF\n                         00000080           58167+SMF42FSI EQU   X'80'     When set=subsystem id follows system id        03-IGWSMF\n                         00000040           58168+SMF42FSU EQU   X'40'     When set = subtypes are used                   03-IGWSMF\n                         00000004           58169+SMF42FXA EQU   X'04'     When set = MVS/XA (SMF enters)                 03-IGWSMF\n                         00000002           58170+SMF42FS2 EQU   X'02'     When set = VS2 (SMF enters)                    03-IGWSMF\n                         00000001           58171+SMF42FS1 EQU   X'01'     When set = VS1 (SMF enters)                    03-IGWSMF\n 00000004                00000004 00000005  58172+         ORG   SMF42FLG+X'00000001'                                     03-IGWSMF\n 00000005                                   58173+SMF42RTY DS    1FL1      Record type: 42 (X'2A')                        03-IGWSMF\n 00000006                                   58174+SMF42TME DS    1FL4                                                     03-IGWSMF\n 0000000A                                   58175+SMF42DTE DS    1CL0004   Record written date (by SMF)                   03-IGWSMF\n 0000000E                                   58176+SMF42SID DS    1CL0004   System identification (by SMF)                 03-IGWSMF\n 00000012                                   58177+SMF42SSI DS    1CL0004   Subsystem Id                                   03-IGWSMF\n 00000016                                   58178+SMF42STY DS    1FL2      Record subtype                                 03-IGWSMF\n 00000018                                   58179+SMF42NT  DS    1FL2      Number of triplets (optional)                  03-IGWSMF\n 0000001A                                   58180+         DS    1FL2      Reserved (optional)                            03-IGWSMF\n                                            58181+*\n                                            58182+*   -----------------------------------------------------------------\n                                            58183+*    Product section triplet\n                                            58184+*   -----------------------------------------------------------------\n                                            58185+*\n                                            58186+*\n 0000001C                                   58187+SMF42OPS DS    1FL4      Offset to product section                      03-IGWSMF\n 00000020                                   58188+SMF42LPS DS    1FL2      Length of product section                      03-IGWSMF\n 00000022                                   58189+SMF42NPS DS    1FL2      Number of product sections                     03-IGWSMF\n                                            58190+*\n                                            58191+*   -----------------------------------------------------------------\n                                            58192+*    Header must end on word boundary\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  138\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           58193+*   -----------------------------------------------------------------\n                                            58194+*\n                                            58195+*\n 00000024                                   58196+SMF42END DS    0C        1st data section triplet                       03-IGWSMF\n                         00000024           58197+SMF42_LEN EQU  *-SMF42                                                  03-IGWSMF\n                                            58198+*\n                                            58199+*   -----------------------------------------------------------------\n                                            58200+*    SMF42 subtype header sections.\n                                            58201+*\n                                            58202+*    Only include the subtype triplet(s) for the selected subtype.\n                                            58203+*   -----------------------------------------------------------------\n                                            58204+*\n                                            58205+*\n                                            58206+*\n                                            58207+*\n                                            58208+*   -----------------------------------------------------------------\n                                            58209+*    SMF42 subtype 1 header section (BMF Statistics)\n                                            58210+*   -----------------------------------------------------------------\n                                            58211+*\n                                            58212+*\n 00000000                00000000 00000010  58213+SMF42S1  DSECT ,                                                        03-IGWSMF\n 00000000                                   58214+SMF42BMO DS    1FL4      Offset to BMF totals section                   03-IGWSMF\n 00000004                                   58215+SMF42BML DS    1FL2      Length of BMF totals section                   03-IGWSMF\n 00000006                                   58216+SMF42BMN DS    1FL2      Number of BMF totals sections                  03-IGWSMF\n 00000008                                   58217+SMF42SCO DS    1FL4      Offset to storage class summary section        03-IGWSMF\n 0000000C                                   58218+SMF42SCL DS    1FL2      Length of storage class summary section        03-IGWSMF\n 0000000E                                   58219+SMF42SCN DS    1FL2      Number of storage class summary sections       03-IGWSMF\n                         00000010           58220+SMF42L1  EQU   16        Length of subtype 1 header section             03-IGWSMF\n                         00000010           58221+SMF42S1_LEN EQU *-SMF42S1                                               03-IGWSMF\n                                            58222+*\n                                            58223+*\n                                            58224+*\n                                            58225+*\n                                            58226+*\n                                            58227+*   -----------------------------------------------------------------\n                                            58228+*    SMF42 subtype 2 header section (Cache summary)\n                                            58229+*   -----------------------------------------------------------------\n                                            58230+*\n                                            58231+*\n 00000000                00000000 00000010  58232+SMF42S2  DSECT ,                                                        03-IGWSMF\n 00000000                                   58233+SMF42CUO DS    1FL4      Offset to control unit cache section           03-IGWSMF\n 00000004                                   58234+SMF42CUL DS    1FL2      Length of control unit cache section           03-IGWSMF\n 00000006                                   58235+SMF42CUN DS    1FL2      Number of control unit cache sections          03-IGWSMF\n 00000008                                   58236+SMF42VLO DS    1FL4      Offset to volume section                       03-IGWSMF\n 0000000C                                   58237+SMF42VLL DS    1FL2      Length of volume section                       03-IGWSMF\n 0000000E                                   58238+SMF42VLN DS    1FL2      Number of volume sections                      03-IGWSMF\n                         00000010           58239+SMF42L2  EQU   16        Length of subtype 2 header section             03-IGWSMF\n                         00000010           58240+SMF42S2_LEN EQU *-SMF42S2                                               03-IGWSMF\n                                            58241+*\n                                            58242+*\n                                            58243+*\n                                            58244+*\n                                            58245+*\n                                            58246+*   -----------------------------------------------------------------\n                                            58247+*    SMF42 subtype 3 header section (Config. audit)\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  139\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           58248+*   -----------------------------------------------------------------\n                                            58249+*\n                                            58250+*\n 00000000                00000000 00000008  58251+SMF42S3  DSECT ,                                                        03-IGWSMF\n 00000000                                   58252+SMF42EAO DS    1FL4      Offset to event audit section                  03-IGWSMF\n 00000004                                   58253+SMF42EAL DS    1FL2      Length of event audit section                  03-IGWSMF\n 00000006                                   58254+SMF42EAN DS    1FL2      Number of event audit sections                 03-IGWSMF\n                         00000008           58255+SMF42L3  EQU   8         Length of subtype 3 header section             03-IGWSMF\n                         00000008           58256+SMF42S3_LEN EQU *-SMF42S3                                               03-IGWSMF\n                                            58257+*\n                                            58258+*\n                                            58259+*\n                                            58260+*\n                                            58261+*\n                                            58262+*   -----------------------------------------------------------------\n                                            58263+*    SMF42 subtype 4 header section (System Data Mover statistics)\n                                            58264+*                   (Concurrent Copy Session (CC) statistics or\n                                            58265+*                   Extended Physical Data Set (EXT)         @OY66824\n                                            58266+*                   statistics)                              @OY66824\n                                            58267+*   -----------------------------------------------------------------\n                                            58268+*\n                                            58269+*\n 00000000                00000000 00000018  58270+SMF42S4 DSECT ,                                              @OY66824   03-IGWSMF\n 00000000                                   58271+SMF42CCO DS    1FL4      Offset to CC statistics             @OY66824   03-IGWSMF\n 00000004                                   58272+SMF42CCL DS    1FL2      Length of CC statistics             @OY66824   03-IGWSMF\n 00000006                                   58273+SMF42CCN DS    1FL2      Number of CC sessions               @OY66824   03-IGWSMF\n 00000008                                   58274+SMF42EXO DS    1FL4      Offset to EXT statistics            @OY66824   03-IGWSMF\n 0000000C                                   58275+SMF42EXL DS    1FL2      Length of EXT statistics            @OY66824   03-IGWSMF\n 0000000E                                   58276+SMF42EXN DS    1FL2      Number of EXT sessions              @OY66824   03-IGWSMF\n 00000010                                   58277+SMF42VCO DS    1FL4      Offset to VCC statistics                @65a   03-IGWSMF\n 00000014                                   58278+SMF42VCL DS    1FL2      Length of VCC statistics                @65a   03-IGWSMF\n 00000016                                   58279+SMF42VCN DS    1FL2      Number of VCC sessions                  @65a   03-IGWSMF\n                         00000018           58280+SMF42L4  EQU *-SMF42S4   Length of subtype 4 header section      @65C   03-IGWSMF\n                         00000018           58281+SMF42S4_LEN EQU *-SMF42S4                                    @OY66824   03-IGWSMF\n                                            58282+*\n                                            58283+*\n                                            58284+*\n                                            58285+*\n                                            58286+*\n                                            58287+*   -----------------------------------------------------------------\n                                            58288+*    SMF42 subtype 5 header section\n                                            58289+*     (Storage class response time statistics)\n                                            58290+*   -----------------------------------------------------------------\n                                            58291+*\n                                            58292+*\n 00000000                00000000 00000010  58293+SMF42S5  DSECT ,                                                        03-IGWSMF\n 00000000                                   58294+SMF42SRO DS    1FL4      Offset to storage class response time section  03-IGWSMF\n 00000004                                   58295+SMF42SRL DS    1FL2      Length of storage class response time section  03-IGWSMF\n 00000006                                   58296+SMF42SRN DS    1FL2      Number of storage class response time         X03-IGWSMF\n                                                 +                         sections\n 00000008                                   58297+SMF42VHO DS    1FL4      Offset to volume header section          @P1A  03-IGWSMF\n 0000000C                                   58298+SMF42VHL DS    1FL2      Length of volume header section          @P1A  03-IGWSMF\n 0000000E                                   58299+SMF42VHN DS    1FL2      Number of volume header sections (=1)    @P1A  03-IGWSMF\n                         00000010           58300+SMF42L5  EQU   *-SMF42S5 Length of subtype 5 header section       @P1C  03-IGWSMF\n                         00000010           58301+SMF42S5_LEN EQU *-SMF42S5                                               03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  140\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           58302+*\n                                            58303+*\n                                            58304+*\n                                            58305+*\n                                            58306+*\n                                            58307+*   -----------------------------------------------------------------\n                                            58308+*    SMF42 subtype 6 header section\n                                            58309+*     (job/dataset statistics)\n                                            58310+*   -----------------------------------------------------------------\n                                            58311+*\n                                            58312+*\n 00000000                00000000 00000008  58313+SMF42S6  DSECT ,                                                        03-IGWSMF\n 00000000                                   58314+SMF42JHO DS    1FL4      Offset to job header section                   03-IGWSMF\n 00000004                                   58315+SMF42JHL DS    1FL2      Length of job header section                   03-IGWSMF\n 00000006                                   58316+SMF42JHN DS    1FL2      Number of job header sections                  03-IGWSMF\n                         00000008           58317+SMF42L6  EQU   8         Length of subtype 6 header section             03-IGWSMF\n                         00000024           58318+SMF42LN  EQU   36        Length of beginning SMF42 header section       03-IGWSMF\n                         00000008           58319+SMF42S6_LEN EQU *-SMF42S6                                               03-IGWSMF\n                                            58320+*\n                                            58321+*\n                                            58322+*\n                                            58323+*\n                                            58324+*  ------------------------------------------------------------- @P1A\n                                            58325+*    SMF42 subtype 9 header section (B37/D37/E37 abend)          @P1A\n                                            58326+*  ------------------------------------------------------------- @P1A\n                                            58327+*\n 00000000                00000000 00000010  58328+SMF42S9  DSECT ,                                                 @P1A   03-IGWSMF\n 00000000                                   58329+SMF42ABO DS    1FL4      Offset to X37 abend section             @P1A   03-IGWSMF\n 00000004                                   58330+SMF42ABL DS    1FL2      Length of X37 abend section             @P1A   03-IGWSMF\n 00000006                                   58331+SMF42ABN DS    1FL2      Number of X37 abend sections (always 1) @P1A   03-IGWSMF\n 00000008                                   58332+SMF42SMO DS    1FL4      Offset to SMS data section              @P1A   03-IGWSMF\n 0000000C                                   58333+SMF42SML DS    1FL2      Length of SMS data section              @P1A   03-IGWSMF\n 0000000E                                   58334+SMF42SMN DS    1FL2      Number of SMS data sections (always 1)  @P1A   03-IGWSMF\n                         00000010           58335+SMF42L9  EQU   16        Length of subtype 9 header section      @P1A   03-IGWSMF\n                         00000010           58336+SMF42S9_LEN EQU *-SMF42S9                                               03-IGWSMF\n                                            58337+*\n                                            58338+*\n                                            58339+*\n                                            58340+*\n                                            58341+*   -----------------------------------------------------------------\n                                            58342+*    SMF42 subtype 10 header section                             @23A\n                                            58343+*    (Volume selection failure data)                             @23A\n                                            58344+*   -----------------------------------------------------------------\n                                            58345+*\n                                            58346+*\n 00000000                00000000 00000008  58347+SMF42SA  DSECT ,                                                 @23A   03-IGWSMF\n 00000000                                   58348+SMF42VSF DS    1FL4      Offset to Volume Selection Failure data @23A   03-IGWSMF\n 00000004                                   58349+SMF42VSL DS    1FL2      Length of Volume Selection Failure data @23A   03-IGWSMF\n 00000006                                   58350+SMF42VSN DS    1FL2      Number of Volume Selection Failure data @23A   03-IGWSMF\n                         00000008           58351+SMF42LA  EQU   8         Length of subtype 10 header section     @23A   03-IGWSMF\n                         00000008           58352+SMF42SA_LEN EQU *-SMF42SA                                        @23A   03-IGWSMF\n                                            58353+*\n                                            58354+*\n                                            58355+*\n                                            58356+*   -----------------------------------------------------------------\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  141\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           58357+*    SMF42 subtype 11 header section (Extended Remote Copy (XRC)\n                                            58358+*                                     Session Statistics)        @07A\n                                            58359+*   -----------------------------------------------------------------\n                                            58360+*\n                                            58361+*\n 00000000                00000000 00000008  58362+SMF42SB DSECT ,                                                  @07A   03-IGWSMF\n 00000000                                   58363+SMF42XRO DS    1FL4      Offset to XRC statistics                @07A   03-IGWSMF\n 00000004                                   58364+SMF42XRL DS    1FL2      Length of XRC statistics                @07A   03-IGWSMF\n 00000006                                   58365+SMF42XRN DS    1FL2      Number of XRC sessions                  @07A   03-IGWSMF\n                         00000008           58366+SMF42LB  EQU   8         Length of subtype 11 header section     @07A   03-IGWSMF\n                         00000008           58367+SMF42SB_LEN EQU *-SMF42SB                                        @07A   03-IGWSMF\n                                            58368+*\n                                            58369+*\n                                            58370+*\n                                            58371+* /*-----------------------------------------------------------------*/\n                                            58372+* /* SMF42 subtype 15 header section                                 */\n                                            58373+* /*  (Storage class response time summary)                          */\n                                            58374+* /*-----------------------------------------------------------------*/\n                                            58375+*\n                                            58376+*\n 00000000                00000000 00000020  58377+SMF42SF DSECT ,                                                         03-IGWSMF\n 00000000                                   58378+SMF42FC1 DS   1FL4                 Offset to SYSPLEX wide SC            03-IGWSMF\n                                            58379+*                                  summary data section           @10A\n 00000004                                   58380+SMF42FC2 DS   1FL2                 Length of SYSPLEX wide SC            03-IGWSMF\n                                            58381+*                                  summary data section           @10A\n 00000006                                   58382+SMF42FC3 DS   1FL2                 Number of SYSPLEX wide SC            03-IGWSMF\n                                            58383+*                                  summary data sections          @10A\n 00000008                                   58384+SMF42FC4 DS   1FL4                 Offset to SC/CF/SYS                  03-IGWSMF\n                                            58385+*                                  summary section                @10A\n 0000000C                                   58386+SMF42FC5 DS   1FL2                 Length of SC/CF/SYS                  03-IGWSMF\n                                            58387+*                                  summary section                @10A\n 0000000E                                   58388+SMF42FC6 DS   1FL2                 Number of SC/CF/SYS                  03-IGWSMF\n                                            58389+*                                  summary sections               @10A\n                                            58390+* /*-----------------------------------------------------------------*/\n                                            58391+*                                                                 @64A\n                                            58392+* The following are above bar buffer variables                    @64A\n                                            58393+*                                                                 @64A\n                                            58394+* /*-----------------------------------------------------------------*/\n                                            58395+*                                                                 @64A\n 00000010                                   58396+SMF2AFC1 DS   1FL4                 Offset to SYSPLEX wide SC      @64A  03-IGWSMF\n                                            58397+*                                  summary data section above bar @64A\n 00000014                                   58398+SMF2AFC2 DS   1FL2                 Length of SYSPLEX wide SC      @64A  03-IGWSMF\n                                            58399+*                                  summary data section above bar @64A\n 00000016                                   58400+SMF2AFC3 DS   1FL2                 Number of SYSPLEX wide SC      @64A  03-IGWSMF\n                                            58401+*                                  summary data sections abve bar @64A\n 00000018                                   58402+SMF2AFC4 DS   1FL4                 Offset to SC/CF/SYS            @64A  03-IGWSMF\n                                            58403+*                                  summary section  above bar     @64A\n 0000001C                                   58404+SMF2AFC5 DS   1FL2                 Length of SC/CF/SYS            @64A  03-IGWSMF\n                                            58405+*                                  summary section  above bar     @64A\n 0000001E                                   58406+SMF2AFC6 DS   1FL2                 Number of SC/CF/SYS            @64A  03-IGWSMF\n                                            58407+*                                  summary sections above bar     @64A\n                                            58408+*                                                                 @64A\n                                            58409+* DECLARE\n                         00000020           58410+SMF42LF EQU *-SMF42SF              Length of subtype 15 header          03-IGWSMF\n                                            58411+*                                          section                @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  142\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           58412+*\n                                            58413+*\n                                            58414+*\n                                            58415+* /*-----------------------------------------------------------------*/\n                                            58416+* /* SMF42 subtype 16 header section                                 */\n                                            58417+* /*  (Dataset response time summary)                                */\n                                            58418+* /*-----------------------------------------------------------------*/\n                                            58419+*\n 00000000                00000000 00000020  58420+SMF42SG DSECT ,                                                         03-IGWSMF\n 00000000                                   58421+SMF42GD1 DS    1FL4                Offset to SYSPLEX wide data set      03-IGWSMF\n                                            58422+*                                  summary data section          @10A\n 00000004                                   58423+SMF42GD2 DS    1FL2                Length of SYSPLEX wide data set      03-IGWSMF\n                                            58424+*                                  summary data section          @10A\n 00000006                                   58425+SMF42GD3 DS    1FL2                Number of SYSPLEX wide data set      03-IGWSMF\n                                            58426+*                                  summary data sections         @10A\n 00000008                                   58427+SMF42GD4 DS    1FL4                Offset to data set/CF/SYS            03-IGWSMF\n                                            58428+*                                  summary section               @10A\n 0000000C                                   58429+SMF42GD5 DS    1FL2                Length of data set/CF/SYS            03-IGWSMF\n                                            58430+*                                  summary section               @10A\n 0000000E                                   58431+SMF42GD6 DS    1FL2                Number of data set/CF/SYS            03-IGWSMF\n                                            58432+*                                  summary sections              @10A\n                                            58433+* /*-----------------------------------------------------------------*/\n                                            58434+*                                                                 @64A\n                                            58435+* The following are above bar buffer variables                    @64A\n                                            58436+*                                                                 @64A\n                                            58437+* /*-----------------------------------------------------------------*/\n                                            58438+*                                                                 @64A\n 00000010                                   58439+SMF2AGD1 DS    1FL4                Offset to SYSPLEX wide data    @64A  03-IGWSMF\n                                            58440+*                                  set summary data section       @64A\n 00000014                                   58441+SMF2AGD2 DS    1FL2                Length of SYSPLEX wide data    @64A  03-IGWSMF\n                                            58442+*                                  set summary data section       @64A\n 00000016                                   58443+SMF2AGD3 DS    1FL2                Number of SYSPLEX wide data    @64A  03-IGWSMF\n                                            58444+*                                  set summary data sections      @64A\n 00000018                                   58445+SMF2AGD4 DS    1FL4                Offset to data set/CF/SYS      @64A  03-IGWSMF\n                                            58446+*                                  summary section                @64A\n 0000001C                                   58447+SMF2AGD5 DS    1FL2                Length of data set/CF/SYS      @64A  03-IGWSMF\n                                            58448+*                                  summary section                @64A\n 0000001E                                   58449+SMF2AGD6 DS    1FL2                Number of data set/CF/SYS      @64A  03-IGWSMF\n                                            58450+*                                  summary sections               @64A\n                         00000020           58451+SMF42LG EQU *-SMF42SG              Length of subtype 16 header          03-IGWSMF\n                                            58452+*                                  section\n                                            58453+*\n                                            58454+*\n                                            58455+*\n                                            58456+* /*-----------------------------------------------------------------*/\n                                            58457+* /* SMF42 subtype 17 header section                                 */\n                                            58458+* /*  (Lock structure activity summary)                              */\n                                            58459+* /*-----------------------------------------------------------------*/\n                                            58460+*\n 00000000                00000000 00000010  58461+SMF42SH DSECT ,                                                         03-IGWSMF\n 00000000                                   58462+SMF42HL1 DS    1FL4                Offset to MVS SYS lock structure     03-IGWSMF\n                                            58463+*                                  activity totals section\n 00000004                                   58464+SMF42HL2 DS    1FL2                Length of MVS SYS lock structure     03-IGWSMF\n                                            58465+*                                  activity totals section\n 00000006                                   58466+SMF42HL3 DS    1FL2                Number of MVS SYS lock structure     03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  143\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           58467+*                                  activity totals sections\n 00000008                                   58468+SMF42HL4 DS    1FL4                Offset to lock structure             03-IGWSMF\n                                            58469+*                                  summary section\n 0000000C                                   58470+SMF42HL5 DS    1FL2                Length of lock structure             03-IGWSMF\n                                            58471+*                                  summary section\n 0000000E                                   58472+SMF42HL6 DS    1FL2                Number of lock structure             03-IGWSMF\n                                            58473+*                                  summary sections\n                         00000010           58474+SMF42LH EQU *-SMF42SH              Length of subtype 9 header           03-IGWSMF\n                                            58475+*                                          section\n                                            58476+*\n                                            58477+*\n                                            58478+*\n                                            58479+* /*-----------------------------------------------------------------*/\n                                            58480+* /* SMF42 subtype 18 header section                                 */\n                                            58481+* /*  (Coupling Facility Cache Partition summary)                    */\n                                            58482+* /*-----------------------------------------------------------------*/\n                                            58483+*\n 00000000                00000000 00000018  58484+SMF42SI DSECT ,                                                         03-IGWSMF\n 00000000                                   58485+SMF42IM1 DS    1FL4                Offset to CF cache partition         03-IGWSMF\n                                            58486+*                                  activity totals section\n 00000004                                   58487+SMF42IM2 DS    1FL2                Length of CF cache partition         03-IGWSMF\n                                            58488+*                                  activity totals section\n 00000006                                   58489+SMF42IM3 DS    1FL2                Number of CF cache partition         03-IGWSMF\n                                            58490+*                                  activity totals sections\n 00000008                                   58491+SMF42IM4 DS    1FL4                Offset to single cache partition     03-IGWSMF\n                                            58492+*                                  summary section\n 0000000C                                   58493+SMF42IM5 DS    1FL2                Length of single CF cache            03-IGWSMF\n                                            58494+*                                  partition summary section\n 0000000E                                   58495+SMF42IM6 DS    1FL2                Number of single CF cache            03-IGWSMF\n                                            58496+*                                  partition summary sections\n 00000010                                   58497+SMF42IM7 DS    1FL4                Offset to directory/element    @11A  03-IGWSMF\n                                            58498+*                                  ratio data summary section     @11A\n 00000014                                   58499+SMF42IM8 DS    1FL2                Length of directory/element    @11A  03-IGWSMF\n                                            58500+*                                  data summary section           @11A\n 00000016                                   58501+SMF42IM9 DS    1FL2                Number of directory/element    @11A  03-IGWSMF\n                                            58502+*                                  ratio sections                 @11A\n                         00000018           58503+SMF42LI EQU *-SMF42SI              Length of subtype 18 header          03-IGWSMF\n                                            58504+*                                  section\n                                            58505+*\n                                            58506+*\n                                            58507+*\n                                            58508+* --------------------------------------------------------------- @11A\n                                            58509+*    SMF42 subtype 19 header section                              @11A\n                                            58510+*     (Buffer Manager LRU activity)  (AB) = Above bar addressing  @11A\n                                            58511+* --------------------------------------------------------------- @11A\n                                            58512+*\n 00000000                00000000 00000020  58513+SMF42SJ DSECT ,                                                   @11A  03-IGWSMF\n 00000000                                   58514+SMF42JN1 DS    1FL4                Offset to Buffer Manager LRU   @11A  03-IGWSMF\n                                            58515+*                                  activity total section         @11A\n 00000004                                   58516+SMF42JN2 DS    1FL2                Length of Buffer Manager LRU   @11A  03-IGWSMF\n                                            58517+*                                  activity total section         @11A\n 00000006                                   58518+SMF42JN3 DS    1FL2                Number of Buffer Manager LRU   @11A  03-IGWSMF\n                                            58519+*                                  activity total sections.       @11A\n 00000008                                   58520+SMF42JN4 DS    1FL4                Offset to Buffer Manager LRU   @11A  03-IGWSMF\n                                            58521+*                                  activity section               @11A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  144\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000000C                                   58522+SMF42JN5 DS    1FL2                Length of Buffer Manager LRU   @11A  03-IGWSMF\n                                            58523+*                                  activity section               @11A\n 0000000E                                   58524+SMF42JN6 DS    1FL2                Number of Buffer Manager LRU   @11A  03-IGWSMF\n                                            58525+*                                  activity sections.             @11A\n                                            58526+*                                                                 @64A\n                                            58527+* --------------------------------------------------------------- @64A\n                                            58528+*                                                                 @64A\n                                            58529+* The following are above bar buffer variables                    @64A\n                                            58530+*                                                                 @64A\n                                            58531+* --------------------------------------------------------------- @64A\n                                            58532+*                                                                 @64A\n 00000010                                   58533+SMF2AJN1 DS    1FL4                Offset to Buffer Manager LRU   @64A  03-IGWSMF\n                                            58534+*                                  activity total section         @64A\n 00000014                                   58535+SMF2AJN2 DS    1FL2                Length of Buffer Manager LRU   @64A  03-IGWSMF\n                                            58536+*                                  activity total section         @64A\n 00000016                                   58537+SMF2AJN3 DS    1FL2                Number of Buffer Manager LRU   @64A  03-IGWSMF\n                                            58538+*                                  activity total sections        @64A\n 00000018                                   58539+SMF2AJN4 DS    1FL4                Offset to Buffer Manager LRU   @64A  03-IGWSMF\n                                            58540+*                                  activity section               @64A\n 0000001C                                   58541+SMF2AJN5 DS    1FL2                Length of Buffer Manager LRU   @64A  03-IGWSMF\n                                            58542+*                                  activity section               @64A\n 0000001E                                   58543+SMF2AJN6 DS    1FL2                Number of Buffer Manager LRU   @64A  03-IGWSMF\n                                            58544+*                                  activity sections              @64A\n                         00000020           58545+SMF42LJ EQU *-SMF42SJ              Length of subtype 19 header    @11A  03-IGWSMF\n                                            58546+*                                  section                        @11A\n                                            58547+*\n                         00000020           58548+SMF42LEN EQU *-SMF42                Length of beginning SMF42           03-IGWSMF\n                                            58549+*                                   header section\n                                            58550+*\n                                            58551+*\n                                            58552+*\n                                            58553+* --------------------------------------------------------------- @L2A\n                                            58554+*    SMF42 subtype 20 header section                              @L2A\n                                            58555+*     (STOW Initialize)                                           @L2A\n                                            58556+* --------------------------------------------------------------- @L2A\n                                            58557+*\n 00000000                00000000 00000010  58558+SMF42SK DSECT ,                                                   @L2A  03-IGWSMF\n 00000000                                   58559+SMF42KN1 DS    1FL4                Offset to STOW Initialize      @L2A  03-IGWSMF\n                                            58560+*                                   section                       @L2A\n 00000004                                   58561+SMF42KN2 DS    1FL2                Length of STOW Initialize      @L2A  03-IGWSMF\n                                            58562+*                                   section                       @L2A\n 00000006                                   58563+SMF42KN3 DS    1FL2                Number of STOW Initialize      @L2A  03-IGWSMF\n                                            58564+*                                   sections                      @L2A\n 00000008                                   58565+SMF42KN4 DS    1FL4                Offset to Additional Info      @26A  03-IGWSMF\n                                            58566+*                                   section                       @26A\n 0000000C                                   58567+SMF42KN5 DS    1FL2                Length of Additional Info      @26A  03-IGWSMF\n                                            58568+*                                   section                       @26A\n 0000000E                                   58569+SMF42KN6 DS    1FL2                Number of Additional Info      @26A  03-IGWSMF\n                                            58570+*                                   sections                      @26A\n                         00000010           58571+SMF42LK EQU *-SMF42SK              Length of subtype 20 header    @L2A  03-IGWSMF\n                                            58572+*                                   section                       @L2A\n                                            58573+*\n                                            58574+* --------------------------------------------------------------- @L2A\n                                            58575+*    SMF42 subtype 21 header section                              @L2A\n                                            58576+*     (Member Deletion)                                           @L2A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  145\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           58577+* --------------------------------------------------------------- @L2A\n 00000000                00000000 00000018  58578+SMF42SL DSECT ,                                                   @L2A  03-IGWSMF\n 00000000                                   58579+SMF42LN1 DS    1FL4                Offset to Member Delete        @L2A  03-IGWSMF\n                                            58580+*                                   header section                @L2A\n 00000004                                   58581+SMF42LN2 DS    1FL2                Length of Member delete        @L2A  03-IGWSMF\n                                            58582+*                                   header section                @L2A\n 00000006                                   58583+SMF42LN3 DS    1FL2                Number of Member delete        @L2A  03-IGWSMF\n                                            58584+*                                   header sections               @L2A\n 00000008                                   58585+SMF42LN4 DS    1FL4                Offset to Deleted alias names  @L2A  03-IGWSMF\n                                            58586+*                                   section                       @L2A\n 0000000C                                   58587+SMF42LN5 DS    1FL2                Length of Deleted alias names  @L2A  03-IGWSMF\n                                            58588+*                                   section                       @L2A\n 0000000E                                   58589+SMF42LN6 DS    1FL2                Number of Deleted alias names  @L2A  03-IGWSMF\n                                            58590+*                                   sections                      @L2A\n 00000010                                   58591+SMF42LN7 DS    1FL4                Offset to Additional Info      @26A  03-IGWSMF\n                                            58592+*                                   section                       @26A\n 00000014                                   58593+SMF42LN8 DS    1FL2                Length of Additional Info      @26A  03-IGWSMF\n                                            58594+*                                   section                       @26A\n 00000016                                   58595+SMF42LN9 DS    1FL2                Number of Additional Info      @26A  03-IGWSMF\n                                            58596+*                                   sections                      @26A\n                         00000018           58597+SMF42LL EQU *-SMF42SL              Length of subtype 21 header    @L2A  03-IGWSMF\n                                            58598+*                                  section                        @L2A\n                                            58599+*\n                                            58600+* --------------------------------------------------------------- @MZA\n                                            58601+*    SMF42 subtype 22 header section                              @MZA\n                                            58602+*     (DFSMSrmm Audit Information)                                @MZA\n                                            58603+* --------------------------------------------------------------- @MZA\n                                            58604+*                                                                 @MZA\n 00000000                00000000 00000010  58605+SMF42SM DSECT ,                                                   @MZA  03-IGWSMF\n 00000000                                   58606+SMF4222AUD DS    1FL4    Offset to audit section                  @MZA  03-IGWSMF\n 00000004                                   58607+SMF4222LAD DS    1FL2    Length of audit section                  @MZA  03-IGWSMF\n 00000006                                   58608+SMF4222NAD DS    1FL2    Number of audit sections                 @MZA  03-IGWSMF\n 00000008                                   58609+SMF4222REC DS    1FL4    Offset to record section                 @MZA  03-IGWSMF\n 0000000C                                   58610+SMF4222LRC DS    1FL2    Length of record section                 @MZA  03-IGWSMF\n 0000000E                                   58611+SMF4222NRC DS    1FL2    Number of record sections                @MZA  03-IGWSMF\n 00000010                                   58612+SMF4222END DS    0C      End of audit section                     @MZA  03-IGWSMF\n                         00000010           58613+SMF4222LEN EQU *-SMF42SM Length of subtype 22 header section      @MZA  03-IGWSMF\n                                            58614+*                                                                 @MZA\n                                            58615+*                                                                 @MZA\n                                            58616+* --------------------------------------------------------------- @MZA\n                                            58617+*    SMF42 subtype 23 header section                              @MZA\n                                            58618+*     (DFSMSrmm Security Information)                             @MZA\n                                            58619+* --------------------------------------------------------------- @MZA\n                                            58620+*                                                                 @MZA\n 00000000                00000000 00000008  58621+SMF42SN DSECT ,                                                   @MZA  03-IGWSMF\n 00000000                                   58622+SMF4223SEC DS    1FL4    Offset to security section               @MZA  03-IGWSMF\n 00000004                                   58623+SMF4223LSC DS    1FL2    Length of security section               @MZA  03-IGWSMF\n 00000006                                   58624+SMF4223NSC DS    1FL2    Number of security sections              @MZA  03-IGWSMF\n 00000008                                   58625+SMF4223END DS    0C      End of security section                  @MZA  03-IGWSMF\n                         00000008           58626+SMF4223LEN EQU *-SMF42SN Length of subtype 23 header section      @MZA  03-IGWSMF\n                                            58627+*                                                                 @MZA\n                                            58628+* --------------------------------------------------------------- @26A\n                                            58629+*    SMF42 subtype 24 header section                              @26A\n                                            58630+*     (Member Add or Replace)                                     @26A\n                                            58631+* --------------------------------------------------------------- @26A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  146\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000000                00000000 00000018  58632+SMF42SP DSECT ,                                                   @26A  03-IGWSMF\n 00000000                                   58633+SMF42PN1 DS    1FL4                Offset to Member add/replace   @26A  03-IGWSMF\n                                            58634+*                                   header section                @26A\n 00000004                                   58635+SMF42PN2 DS    1FL2                Length of Member add/replace   @26A  03-IGWSMF\n                                            58636+*                                   header section                @26A\n 00000006                                   58637+SMF42PN3 DS    1FL2                Number of Member add/replace   @26A  03-IGWSMF\n                                            58638+*                                   header sections               @26A\n 00000008                                   58639+SMF42PN4 DS    1FL4                Offset to alias names          @26A  03-IGWSMF\n                                            58640+*                                   section                       @26A\n 0000000C                                   58641+SMF42PN5 DS    1FL2                Length of alias names          @26A  03-IGWSMF\n                                            58642+*                                   section                       @26A\n 0000000E                                   58643+SMF42PN6 DS    1FL2                Number of alias names          @26A  03-IGWSMF\n                                            58644+*                                   sections                      @26A\n 00000010                                   58645+SMF42PN7 DS    1FL4                Offset to Additional Info      @26A  03-IGWSMF\n                                            58646+*                                   section                       @26A\n 00000014                                   58647+SMF42PN8 DS    1FL2                Length of Additional Info      @26A  03-IGWSMF\n                                            58648+*                                   section                       @26A\n 00000016                                   58649+SMF42PN9 DS    1FL2                Number of Additional Info      @26A  03-IGWSMF\n                                            58650+*                                   sections                      @26A\n                         00000018           58651+SMF42PL EQU *-SMF42SP              Length of subtype 24 header    @26A  03-IGWSMF\n                                            58652+*                                  section                        @26A\n                                            58653+* --------------------------------------------------------------- @26A\n                                            58654+*    SMF42 subtype 25 header section                              @26A\n                                            58655+*     (Member Rename)                                             @26A\n                                            58656+* --------------------------------------------------------------- @26A\n 00000000                00000000 00000018  58657+SMF42SQ DSECT ,                                                   @26A  03-IGWSMF\n 00000000                                   58658+SMF42QN1 DS    1FL4                Offset to Member rename        @26A  03-IGWSMF\n                                            58659+*                                   header section                @26A\n 00000004                                   58660+SMF42QN2 DS    1FL2                Length of Member rename        @26A  03-IGWSMF\n                                            58661+*                                   header section                @26A\n 00000006                                   58662+SMF42QN3 DS    1FL2                Number of Member rename        @26A  03-IGWSMF\n                                            58663+*                                   header sections               @26A\n 00000008                                   58664+SMF42QN4 DS    1FL4                Offset to old member name      @26A  03-IGWSMF\n                                            58665+*                                   section                       @26A\n 0000000C                                   58666+SMF42QN5 DS    1FL2                Length of old member name      @26A  03-IGWSMF\n                                            58667+*                                   section                       @26A\n 0000000E                                   58668+SMF42QN6 DS    1FL2                Number of old member name      @26A  03-IGWSMF\n                                            58669+*                                   sections                      @26A\n 00000010                                   58670+SMF42QN7 DS    1FL4                Offset to Additional Info      @26A  03-IGWSMF\n                                            58671+*                                   section                       @26A\n 00000014                                   58672+SMF42QN8 DS    1FL2                Length of Additional Info      @26A  03-IGWSMF\n                                            58673+*                                   section                       @26A\n 00000016                                   58674+SMF42QN9 DS    1FL2                Number of Additional Info      @26A  03-IGWSMF\n                                            58675+*                                   sections                      @26A\n                         00000018           58676+SMF42QL EQU *-SMF42SQ              Length of subtype 25 header    @26A  03-IGWSMF\n                                            58677+*                                  section                        @26A\n                                            58678+*                                                                 @MZA\n                                            58679+*   -----------------------------------------------------------------\n                                            58680+*     Product Section\n                                            58681+*   -----------------------------------------------------------------\n                                            58682+*\n                                            58683+*\n 00000000                00000000 00000028  58684+SMF42PRD DSECT ,                                                        03-IGWSMF\n 00000000                                   58685+SMF42PDL DS    1CL0008   Product Level                                  03-IGWSMF\n 00000008                                   58686+SMF42PDN DS    1CL0010   Product Name                                   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  147\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000012                                   58687+SMF42PSV DS    X         Subtype version number                  @P1A   03-IGWSMF\n 00000013                                   58688+         DS    1CL0001   Reserved                                @P1C   03-IGWSMF\n 00000014                                   58689+SMF42PTS DS    1CL0008   Interval Start or Open TOD                     03-IGWSMF\n 0000001C                                   58690+SMF42PTE DS    1CL0008   Interval End or Close TOD                      03-IGWSMF\n 00000024                                   58691+         DS    1CL0004   Reserved                                       03-IGWSMF\n                                            58692+*\n                                            58693+*   -----------------------------------------------------------------\n                                            58694+*    Product section must end on word boundary\n                                            58695+*   -----------------------------------------------------------------\n                                            58696+*\n                                            58697+*\n                         00000028           58698+SMF42PLN EQU   40        Length of Product Section                      03-IGWSMF\n                         00000001           58699+SMF42PVR EQU   1         Product Section Version                 @P1A   03-IGWSMF\n                         00000028           58700+SMF42PRD_LEN EQU *-SMF42PRD                                             03-IGWSMF\n                                            58701+*\n                                            58702+*\n                                            58703+*\n                                            58704+*\n                                            58705+*   -----------------------------------------------------------------\n                                            58706+*     Start of Buffer Management Facility Section\n                                            58707+*   -----------------------------------------------------------------\n                                            58708+*\n                                            58709+*\n                                            58710+*\n                                            58711+*   -----------------------------------------------------------------\n                                            58712+*    SMF type 42 subtype 1 (Buffer Manager Statistics, part 1)\n                                            58713+*   -----------------------------------------------------------------\n                                            58714+*\n                                            58715+*\n 00000000                00000000 00000024  58716+SMF4201A DSECT ,                                                        03-IGWSMF\n 00000000                                   58717+SMF42BMF DS    0CL0036   Description of BMF totals section              03-IGWSMF\n 00000000                                   58718+SMF42TNA DS    1FL4      Total number of storage classes                03-IGWSMF\n 00000004                                   58719+SMF42TMT DS    1FL4      Interval length (total time of measurement    X03-IGWSMF\n                                                 +                         period)\n 00000008                                   58720+SMF42TRT DS    1FL4      Total number of member data page reads         03-IGWSMF\n 0000000C                                   58721+SMF42TRH DS    1FL4      Total number of member data page read hits    X03-IGWSMF\n                                                 +                         (found in BMF)\n 00000010                                   58722+SMF42TDT DS    1FL4      Total number of directory data page reads      03-IGWSMF\n 00000014                                   58723+SMF42TDH DS    1FL4      Total number of directory data page read hits X03-IGWSMF\n                                                 +                         (found in BMF)\n 00000018                                   58724+SMF42BUF DS    1FL4      Total number of active BMF 4K buffers   @18A   03-IGWSMF\n 0000001C                                   58725+SMF42BMX DS    1FL4      High water mark of BMF buffers          @18A   03-IGWSMF\n 00000020                                   58726+SMF42LRU DS    1FL2      BMF LRU interval time                   @18A   03-IGWSMF\n 00000022                                   58727+SMF42UIC DS    1FL2      BMF LRU cycles before buffer cast out   @18A   03-IGWSMF\n                         00000024           58728+SMF4201A_LEN EQU *-SMF4201A                                             03-IGWSMF\n                                            58729+*\n                                            58730+*   -----------------------------------------------------------------\n                                            58731+*    SMF type 42 subtype 1 (Buffer Manager Statistics, part 2)\n                                            58732+*   -----------------------------------------------------------------\n                                            58733+*\n                                            58734+*\n 00000000                00000000 00000030  58735+SMF4201B DSECT ,                                                        03-IGWSMF\n 00000000                                   58736+SMF42SC  DS    0CL0048   Description of Stor Class Sum section @OW00573 03-IGWSMF\n 00000000                                   58737+SMF42PNA DS    0CL0032   Storage class name                             03-IGWSMF\n 00000000                                   58738+SMF42PNL DS    1FL2      Storage class name length                      03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  148\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000002                                   58739+SMF42PNN DS    1CL0030   Storage class name                             03-IGWSMF\n 00000020                                   58740+SMF42SRT DS    1FL4      Total number of member data page reads         03-IGWSMF\n 00000024                                   58741+SMF42SRH DS    1FL4      Total number of member data page read hits    X03-IGWSMF\n                                                 +                         (found in BMF)\n 00000028                                   58742+SMF42SDT DS    1FL4      Total number of directory data page reads      03-IGWSMF\n 0000002C                                   58743+SMF42SDH DS    1FL4      Total number of directory data page read hits X03-IGWSMF\n                                                 +                         (found in BMF)\n                         00000030           58744+SMF4201B_LEN EQU *-SMF4201B                                             03-IGWSMF\n                                            58745+*\n                                            58746+*\n                                            58747+*\n                                            58748+*\n                                            58749+*\n                                            58750+*   -----------------------------------------------------------------\n                                            58751+*     Start of Control Unit Cache Summary Section\n                                            58752+*   -----------------------------------------------------------------\n                                            58753+*\n                                            58754+*\n                                            58755+*\n                                            58756+*   -----------------------------------------------------------------\n                                            58757+*    SMF type 42 subtype 2 (Control Unit Cache Summary, part 1)\n                                            58758+*   -----------------------------------------------------------------\n                                            58759+*\n                                            58760+*\n 00000000                00000000 00000058  58761+SMF4202A DSECT ,                                                        03-IGWSMF\n 00000000                                   58762+SMF42CUC DS    0CL0088   Description of control unit cache section      03-IGWSMF\n 00000000                                   58763+SMF42HWS DS    0CL0032   Description of hardware status section         03-IGWSMF\n 00000000                                   58764+SMF42SCS DS    1BL1      Storage director caching status. Format as    X03-IGWSMF\n                                                 +                         follows: 000xxxxx = Caching is active         X\n                                                 +                         001xxxxx = Caching is pending active 010xxxxx X\n                                                 +                         = Internal subsystem error. Caching has       X\n                                                 +                         terminated 100xxxxx = Caching deactivated due X\n                                                 +                         to explicit host request 110xxxxx = Pending   X\n                                                 +                         off in process. Command to deactivate cache   X\n                                                 +                         received, destage still in progress 111xxxxx  X\n                                                 +                         = Pending off destage failed xxx1xxxx =       X\n                                                 +                         Subsystem storage disabled for maintenance\n                                            58765+*                        xxxxXXxx = Reserved xxxxxx1x = IML device not X\n                                                 +                         available xxxxxxx1 = Non-retentive data is    X\n                                                 +                         deactivated\n 00000001                                   58766+SMF42NCS DS    1BL1      Subsystem non-volatile storage status. Format X03-IGWSMF\n                                                 +                         as follows: 00xxxxxx = Non-volatile cache is  X\n                                                 +                         active 01xxxxxx = Internal subsystem error.   X\n                                                 +                         Non-volatile cache availability terminated    X\n                                                 +                         10xxxxxx = Non-volatile cache has been        X\n                                                 +                         deactivated due to explicit host system       X\n                                                 +                         request 11xxxxxx = Pending non-volatile       X\n                                                 +                         unavailable has been received, destage still  X\n                                                 +                         in progress xxXxxXXX = Reserved xxx1xxxx =    X\n                                                 +                         Non-volatile storage disabled for maintenance\n                                            58767+*                        xxxx1xxx = Non-volatile storage disabled due  X\n                                                 +                         to error\n 00000002                                   58768+SMF42CID DS    1FL2      Subsystem identifier                           03-IGWSMF\n 00000004                                   58769+SMF42CSS DS    1FL4      Configured subsystem storage capacity. F'-1'  X03-IGWSMF\n                                                 +                         = undetermined\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  149\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000008                                   58770+SMF42SSA DS    1FL4      Subsystem storage available for allocation as X03-IGWSMF\n                                                 +                         cache space\n 0000000C                                   58771+SMF42SAP DS    1FL4      Subsystem storage allocated for pinned data    03-IGWSMF\n 00000010                                   58772+SMF42SSU DS    1FL4      Subsystem storage unavailable due to          X03-IGWSMF\n                                                 +                         subsystem failures\n 00000014                                   58773+SMF42NSZ DS    1FL4      Configured non-volatile cache capacity. F'-1' X03-IGWSMF\n                                                 +                         = undetermined\n 00000018                                   58774+SMF42SPR DS    1FL4      Non-volatile cache allocated for pinned data   03-IGWSMF\n 0000001C                                   58775+SMF42SSF DS    1BL1      Subsystem Flags                         @08A   03-IGWSMF\n                         00000080           58776+SMF42ENH EQU   X'80'     Subsystem is D/T3990-6 enhanced mode    @08A   03-IGWSMF\n 0000001D                                   58777+         DS    1CL0003   Reserved                                @08C   03-IGWSMF\n 00000020                                   58778+SMF42SWS DS    0CL0056   Description of software status section         03-IGWSMF\n                                            58779+*\n                                            58780+*      ***************************************************************\n                                            58781+*      *                                                             *\n                                            58782+*      * Statistics gathered from LAST update period                 *\n                                            58783+*      *                                                             *\n                                            58784+*      ***************************************************************\n                                            58785+*\n                                            58786+*\n 00000020                                   58787+SMF42LCT DS    1FL4      I/O count for subsystem                        03-IGWSMF\n 00000024                                   58788+SMF42LFW DS    1FL4      Fast write wait count                          03-IGWSMF\n 00000028                                   58789+SMF42LRH DS    1FL4      Cache normal read hit percent                  03-IGWSMF\n 0000002C                                   58790+SMF42LWM DS    1FL4      Fast write waits per minute                    03-IGWSMF\n 00000030                                   58791+SMF42LTS DS    0CL0008   Time stamp                                     03-IGWSMF\n 00000030                                   58792+SMF42LYY DS    1FL2      Year                                           03-IGWSMF\n 00000032                                   58793+SMF42LDD DS    1FL2      Day                                            03-IGWSMF\n 00000034                                   58794+SMF42LTM DS    1FL4      Time: HH:MM:SS:TH (1 byte ea.)                 03-IGWSMF\n                                            58795+*\n                                            58796+*      ***************************************************************\n                                            58797+*      *                                                             *\n                                            58798+*      * Statistics gathered from CURRENT update period              *\n                                            58799+*      *                                                             *\n                                            58800+*      ***************************************************************\n                                            58801+*\n                                            58802+*\n 00000038                                   58803+SMF42CCT DS    1FL4      I/O count for subsystem                        03-IGWSMF\n 0000003C                                   58804+SMF42CFW DS    1FL4      Fast write wait count                          03-IGWSMF\n 00000040                                   58805+SMF42CRH DS    1FL4      Cache normal read hit percent                  03-IGWSMF\n 00000044                                   58806+SMF42CWM DS    1FL4      Fast write waits per minute                    03-IGWSMF\n 00000048                                   58807+SMF42CTS DS    0CL0008   Time stamp                                     03-IGWSMF\n 00000048                                   58808+SMF42CYY DS    1FL2      Year                                           03-IGWSMF\n 0000004A                                   58809+SMF42CDD DS    1FL2      Day                                            03-IGWSMF\n 0000004C                                   58810+SMF42CTM DS    1FL4      Time: HH:MM:SS:TH (1 byte ea.)                 03-IGWSMF\n                                            58811+*\n                                            58812+*      ***************************************************************\n                                            58813+*      *                                                             *\n                                            58814+*      * Statistical averages                                        *\n                                            58815+*      *                                                             *\n                                            58816+*      ***************************************************************\n                                            58817+*\n                                            58818+*\n 00000050                                   58819+SMF42AHR DS    1FL2      Average hit ratio                              03-IGWSMF\n 00000052                                   58820+SMF42AFW DS    1FL2      Average fast write waits per minute            03-IGWSMF\n 00000054                                   58821+         DS    1CL0004   Reserved                                       03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  150\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000058           58822+SMF4202A_LEN EQU *-SMF4202A                                             03-IGWSMF\n                                            58823+*\n                                            58824+*   -----------------------------------------------------------------\n                                            58825+*     Second part of Control Unit Cache Summary Section\n                                            58826+*   -----------------------------------------------------------------\n                                            58827+*\n                                            58828+*\n                                            58829+*\n                                            58830+*   -----------------------------------------------------------------\n                                            58831+*    SMF type 42 subtype 2 (Control Unit Cache Summary, part 2)\n                                            58832+*   -----------------------------------------------------------------\n                                            58833+*\n                                            58834+*\n 00000000                00000000 00000010  58835+SMF4202B DSECT ,                                                        03-IGWSMF\n 00000000                                   58836+SMF42VLS DS    0CL0016   Description of volume status section           03-IGWSMF\n 00000000                                   58837+SMF42VOL DS    1CL0006   Volume serial number                           03-IGWSMF\n 00000006                                   58838+         DS    1CL0002   Reserved                                       03-IGWSMF\n 00000008                                   58839+SMF42DEV DS    1FL4      Device number                                  03-IGWSMF\n 0000000C                                   58840+SMF42VST DS    0BL2      Device status flags                            03-IGWSMF\n 0000000C                                   58841+SMF42DB1 DS    1BL1      Device status flags, byte 1. Format as        X03-IGWSMF\n                                                 +                         follows: Bits 0-1 = Device Cache Status       X\n                                                 +                         00xxxxxx = Caching activated 01xxxxxx =       X\n                                                 +                         Unused 10xxxxxx = Deactivate pending by       X\n                                                 +                         explicit host request. Transfer of modified   X\n                                                 +                         data to DASD failed 11xxxxxx = Caching        X\n                                                 +                         deactivated unavailable Bits 2-3 = Fast write X\n                                                 +                         status xx00xxxx = Fast write activated        X\n                                                 +                         xx01xxxx = Unused xx10xxxx = Fast write       X\n                                                 +                         deactivate pending, transfer of data to DASD\n                                            58842+*                        failed xx11xxxx = Fast write deactivated Bits X\n                                                 +                         4-7 = Duplex pair flags xxxx1xxx = Primary of X\n                                                 +                         duplex pair xxxxx1xx = Secondary of duplex    X\n                                                 +                         pair xxxxxx00 = Duplex pair available         X\n                                                 +                         xxxxxx01 = Duplex pair pending (copy to       X\n                                                 +                         establish duplex pair in progress or failed)  X\n                                                 +                         xxxxxx10 = Failed duplex by command xxxxxx11  X\n                                                 +                         = Failed duplex by subsystem\n 0000000D                                   58843+SMF42DB2 DS    1BL1      Device status flags, byte 2. Format as        X03-IGWSMF\n                                                 +                         follows: 1xxxxxxx = Device is 'failed' of     X\n                                                 +                         failed duplex x1xxxxxx = Device has pinned    X\n                                                 +                         data xxXXXXXX = Channel connect address for   X\n                                                 +                         other device in duplex pair\n 0000000E                                   58844+         DS    1CL0002   Reserved                                       03-IGWSMF\n                         00000010           58845+SMF4202B_LEN EQU *-SMF4202B                                             03-IGWSMF\n                                            58846+*\n                                            58847+*\n                                            58848+*\n                                            58849+*\n                                            58850+*\n                                            58851+*   -----------------------------------------------------------------\n                                            58852+*     Start of Event Audit Section (Operational Services)\n                                            58853+*   -----------------------------------------------------------------\n                                            58854+*\n                                            58855+*\n                                            58856+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  151\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           58857+*   -----------------------------------------------------------------\n                                            58858+*    SMF type 42 subtype 3 (Event Audit Section)\n                                            58859+*   -----------------------------------------------------------------\n                                            58860+*\n                                            58861+*\n 00000000                00000000 000000C0  58862+SMF4203A DSECT ,                                                        03-IGWSMF\n 00000000                                   58863+SMF42EAS DS    0CL0192   Description of event audit section             03-IGWSMF\n 00000000                                   58864+SMF42EAC DS    1CL0008   Action which caused record to be created:     X03-IGWSMF\n                                                 +                         ACTIVATE, ENF, VARY SMS, or SAVEACDS\n 00000008                                   58865+SMF42ERC DS    1FL4      Return code from resulting event               03-IGWSMF\n 0000000C                                   58866+SMF42ERS DS    1FL4      Reason code from resulting event               03-IGWSMF\n                                            58867+*\n                                            58868+*      ***************************************************************\n                                            58869+*      *                                                             *\n                                            58870+*      * Fields filled in for ENF event                              *\n                                            58871+*      *                                                             *\n                                            58872+*      ***************************************************************\n                                            58873+*\n                                            58874+*\n 00000010                                   58875+SMF42EUA DS    1AL4      UCB address for device                         03-IGWSMF\n 00000014                                   58876+SMF42EVO DS    1CL0006   Volser for device                              03-IGWSMF\n 0000001A                                   58877+SMF42ESA DS    1FL1      UCBSTAT field                           @J1A   03-IGWSMF\n 0000001B                                   58878+         DS    1CL0001   Reserved                                @J1C   03-IGWSMF\n 0000001C                                   58879+SMF42EOS DS    1FL1      Old MVS volume status                          03-IGWSMF\n 0000001D                                   58880+SMF42ENS DS    1FL1      New MVS volume status                          03-IGWSMF\n 0000001E                                   58881+SMF42EFL DS    1FL2      UCBSFLS field                           @J1C   03-IGWSMF\n                                            58882+*\n                                            58883+*      ***************************************************************\n                                            58884+*      *                                                             *\n                                            58885+*      * Fields filled in for VARY SMS command                       *\n                                            58886+*      *                                                             *\n                                            58887+*      ***************************************************************\n                                            58888+*\n                                            58889+*\n 00000020                                   58890+SMF42ETY DS    1CL0008   Type of VARY request: STORGRP, LIBRARY,       X03-IGWSMF\n                                                 +                         DRIVE, or VOLUME\n 00000028                                   58891+SMF42ERN DS    0CL0032   VARY request name                              03-IGWSMF\n 00000028                                   58892+SMF42ENL DS    1FL2      Name length                                    03-IGWSMF\n 0000002A                                   58893+SMF42ENM DS    1CL0030   STORGRP name or LIBRARY name or DRIVE name     03-IGWSMF\n 00000048                                   58894+SMF42EVL DS    1CL0006   Volume serial                                  03-IGWSMF\n 0000004E                                   58895+         DS    1CL0002   Reserved                                       03-IGWSMF\n 00000050                                   58896+SMF42ESY DS    1CL0008   System name or '(ALL)'                         03-IGWSMF\n 00000058                                   58897+SMF42EST DS    1CL0012   Resulting status: ENABLE or ENABLE,NEW or     X03-IGWSMF\n                                                 +                         QUIESCE or QUIESCE,NEW or DISABLE or          X\n                                                 +                         DISABLE,NEW or ONLINE or OFFLINE\n 00000064                                   58898+         DS    1CL0004   Reserved                                       03-IGWSMF\n                                            58899+*\n                                            58900+*      ***************************************************************\n                                            58901+*      *                                                             *\n                                            58902+*      * Fields filled in for ACTIVATE command                       *\n                                            58903+*      *                                                             *\n                                            58904+*      ***************************************************************\n                                            58905+*\n                                            58906+*\n 00000068                                   58907+SMF42ESD DS    1CL0044   Source control data set name                   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  152\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000094                                   58908+SMF42EAD DS    1CL0044   Active control data set name                   03-IGWSMF\n                         000000C0           58909+SMF4203A_LEN EQU *-SMF4203A                                             03-IGWSMF\n                                            58910+*\n                                            58911+*\n                                            58912+*\n                                            58913+*\n                                            58914+*\n                                            58915+*\n                                            58916+*   -----------------------------------------------------------------\n                                            58917+*     Start of System Data Mover Session Statistics            @OY66824\n                                            58918+*   -----------------------------------------------------------------\n                                            58919+*\n                                            58920+*\n                                            58921+*   -----------------------------------------------------------------\n                                            58922+*    SMF type 42 subtype 4 (Concurrent Copy Session Statistics)@OY66824\n                                            58923+*   -----------------------------------------------------------------\n                                            58924+*\n                                            58925+*\n 00000000                00000000 00000040  58926+SMF4204C DSECT  ,        Concurrent Copy SDM Session Statistics@OY66824 03-IGWSMF\n 00000000                                   58927+S42CCID  DS    1FL4      Logical Session ID                    @OY66824 03-IGWSMF\n 00000004                                   58928+S42CCRQS DS    1CL0002   Request type, 'CC ' = Concurrent copy @OY66824 03-IGWSMF\n 00000006                                   58929+S42CCTS  DS    1CL0001   Termination status,                   @OY66824 03-IGWSMF\n                                            58930+*                        'N' = normal, 'A' = abnormal          @OY66824\n 00000007                                   58931+         DS    1CL0001   Reserved                              @OY66824 03-IGWSMF\n 00000008                                   58932+S42CCJNM DS    1CL0008   Invoking Jobname                      @OY66824 03-IGWSMF\n 00000010                                   58933+S42CCJNO DS    1CL0008   Invoking Job number                   @OY66824 03-IGWSMF\n 00000018                                   58934+S42CCSST DS    1CL0008   Session start TOD                     @OY66824 03-IGWSMF\n 00000020                                   58935+S42CCEIT DS    1CL0008   Initialization end TOD                @OY66824 03-IGWSMF\n 00000028                                   58936+S42CCSET DS    1CL0008   Session end TOD                       @OY66824 03-IGWSMF\n 00000030                                   58937+S42CCSSO DS    1FL4      Offset to first SSID header           @OY66824 03-IGWSMF\n 00000034                                   58938+S42CCSSN DS    1FL2      Number of SSIDs  for the session      @OY66824 03-IGWSMF\n 00000036                                   58939+S42CCSSL DS    1FL2      Length of  SSID header                @OY66824 03-IGWSMF\n 00000038                                   58940+         DS    1CL008    Reserved                              @OY66824 03-IGWSMF\n                         00000040           58941+SMF4204C_LEN EQU *-SMF4204C                                    @OY66824 03-IGWSMF\n                                            58942+*\n                                            58943+*   -----------------------------------------------------------------\n                                            58944+*    CC SSID Header Section (SMF42 subtype 4)                  @OY66824\n                                            58945+*   -----------------------------------------------------------------\n                                            58946+*\n                                            58947+*\n 00000000                00000000 00000018  58948+S42CSIDH DSECT ,                                               @OY66824 03-IGWSMF\n 00000000                                   58949+S42CSNXT DS    1FL4      Offset to next SSID header            @OY66824 03-IGWSMF\n                                            58950+*                        (0 if last SSID)                      @OY66824\n 00000004                                   58951+S42CSID  DS    1FL2      SSID                                  @OY66824 03-IGWSMF\n 00000006                                   58952+S42CSIDP DS    1FL1      Controller session ID                 @OY66824 03-IGWSMF\n 00000007                                   58953+         DS    1CL0001   Reserved                              @OY66824 03-IGWSMF\n 00000008                                   58954+S42CSMSF DS    1FL4      Maximum track threshold reached in    @OY66824 03-IGWSMF\n                                            58955+*                        storage control buffers               @OY66824\n 0000000C                                   58956+S42CSVLO DS    1FL4      Offset to first volume                @OY66824 03-IGWSMF\n 00000010                                   58957+S42CSVLN DS    1FL2      Number of volumes                     @OY66824 03-IGWSMF\n 00000012                                   58958+S42CSVLL DS    1FL2      Length of volume section              @OY66824 03-IGWSMF\n 00000014                                   58959+         DS    1CL004    Reserved                              @OY66824 03-IGWSMF\n                         00000018           58960+S42CSIDH_LEN EQU *-S42CSIDH                                    @OY66824 03-IGWSMF\n                                            58961+*\n                                            58962+*   -----------------------------------------------------------------\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  153\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           58963+*    CC Volume section (SMF42 subtype 4)                       @OY66824\n                                            58964+*   -----------------------------------------------------------------\n                                            58965+*\n                                            58966+*\n 00000000                00000000 00000024  58967+S42CVL   DSECT ,                                               @OY66824 03-IGWSMF\n 00000000                                   58968+S42CVLNX DS    1FL4      Offset to next volume (0 if last      @OY66824 03-IGWSMF\n                                            58969+*                        volume)                               @OY66824\n 00000004                                   58970+S42CVLSR DS    1CL0006   Volume Serial                         @OY66824 03-IGWSMF\n 0000000A                                   58971+         DS    1CL0002   Reserved                              @OY66824 03-IGWSMF\n 0000000C                                   58972+S42CVLDV DS    1CL0001   Device type  (UCBTBYT4)               @OY66824 03-IGWSMF\n 0000000D                                   58973+S42CVLUA DS    1CL0003   Unit address (UCBNAME)                @OY66824 03-IGWSMF\n 00000010                                   58974+S42CVLTK DS    1FL4      Number of tracks to be processed on   @OY66824 03-IGWSMF\n                                            58975+*                        vol                                   @OY66824\n 00000014                                   58976+S42CVLRD DS    1FL4      Number of tracks read directly from   @OY66824 03-IGWSMF\n                                            58977+*                        DASD                                  @OY66824\n 00000018                                   58978+S42CVLRS DS    1FL4      Number of tracks read from the        @OY66824 03-IGWSMF\n                                            58979+*                        storage control buffers               @OY66824\n 0000001C                                   58980+S42CVLEP DS    1FL4      Number of EXCPs                       @OY66824 03-IGWSMF\n 00000020                                   58981+S42CVLUX DS    1CL0004   Unit address (UCBNAME) extended           @20C 03-IGWSMF\n                         00000024           58982+S42CVL_LEN EQU *-S42CVL                                        @OY66824 03-IGWSMF\n                                            58983+*\n                                            58984+*\n                                            58985+*   -----------------------------------------------------------------\n                                            58986+*    SMF type 42 subtype 4 (Extended Sequential Data Set       @OY66824\n                                            58987+*                           session statistics)                @OY66824\n                                            58988+*   -----------------------------------------------------------------\n                                            58989+*\n                                            58990+*\n 00000000                00000000 00000048  58991+SMF4204E DSECT  ,        Extended Sequential Data Set SMD      @OY66824 03-IGWSMF\n                                            58992+*                        Session Statistics                    @OY66824\n 00000000                                   58993+S42EXID  DS    1FL4      Logical Session ID                    @OY66824 03-IGWSMF\n 00000004                                   58994+S42EXRQS DS    1CL0003   Request type, 'EXT' = Extended        @OY66824 03-IGWSMF\n                                            58995+*                        Sequential Data Set                   @OY66824\n 00000007                                   58996+         DS    1CL0001   Reserved                              @OY66824 03-IGWSMF\n 00000008                                   58997+S42EXJNM DS    1CL0008   Invoking Jobname                      @OY66824 03-IGWSMF\n 00000010                                   58998+S42EXJNO DS    1CL0008   Invoking Job number                   @OY66824 03-IGWSMF\n 00000018                                   58999+S42EXSTM DS    1CL0008   Session start TOD                     @OY66824 03-IGWSMF\n 00000020                                   59000+S42EXETM DS    1CL0008   Session end TOD                       @OW09203 03-IGWSMF\n 00000028                                   59001+S42EXTS  DS    1CL0001   Termination status,                   @OY66824 03-IGWSMF\n                                            59002+*                        'N' = normal, 'A' = abnormal          @OY66824\n 00000029                                   59003+         DS    1CL0003   Reserved                              @OY66824 03-IGWSMF\n 0000002C                                   59004+S42EVLRT DS    1FL8      Number of tracks read                 @OY66824 03-IGWSMF\n 00000034                                   59005+S42EVLWT DS    1FL8      Number of tracks written              @OY66824 03-IGWSMF\n 0000003C                                   59006+         DS    1CL00012  Reserved                              @OY66824 03-IGWSMF\n                         00000048           59007+SMF4204E_LEN EQU *-SMF4204E                                    @OY66824 03-IGWSMF\n                                            59008+*\n                                            59009+*   -----------------------------------------------------------------\n                                            59010+*  SMF type 42 subtype 4 (EAV Concurrent Copy Session Statistics)  @65A\n                                            59011+*   -----------------------------------------------------------------\n                                            59012+*\n                                            59013+*\n 00000000                00000000 00000058  59014+SMF4204V DSECT  ,        Virtual Concurrent Copy SDM Session Stats @65A 03-IGWSMF\n 00000000                                   59015+S42VCID  DS    1FL4      VCC Logical Session ID                    @65A 03-IGWSMF\n 00000004                                   59016+S42VCRQS DS    1CL0003   Request type, 'VCC' =                     @65A 03-IGWSMF\n                                            59017+*                                      Virtual Concurrent copy     @65A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  154\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000007                                   59018+S42VCTS  DS    1CL0001   Termination status,                       @65A 03-IGWSMF\n                                            59019+*                        'N' = normal, 'A' = abnormal              @65A\n 00000008                                   59020+S42VCJNM DS    1CL0008   Invoking Jobname                          @65A 03-IGWSMF\n 00000010                                   59021+S42VCJNO DS    1CL0008   Invoking Job number                       @65A 03-IGWSMF\n 00000018                                   59022+S42VCSST DS    1CL0008   Session start TOD                         @65A 03-IGWSMF\n 00000020                                   59023+S42VCEIT DS    1CL0008   Initialization end TOD                    @65A 03-IGWSMF\n 00000028                                   59024+S42VCSET DS    1CL0008   Session end TOD                           @65A 03-IGWSMF\n 00000030                                   59025+S42VCCTK DS    1FL8      Total number of tracks processed using cc @65A 03-IGWSMF\n 00000038                                   59026+S42VCVTK DS    1FL8     Total number of tracks processed using vcc @65A 03-IGWSMF\n 00000040                                   59027+S42VCDSP DS    1FL8     Total number of tracks stored in dataspace @65A 03-IGWSMF\n 00000048                                   59028+S42VCSSO DS    1FL4      Offset to first SSID header               @65A 03-IGWSMF\n 0000004C                                   59029+S42VCSSN DS    1FL2      Number of SSIDs  for the session          @65A 03-IGWSMF\n 0000004E                                   59030+S42VCSSL DS    1FL2      Length of  SSID header                    @65A 03-IGWSMF\n 00000050                                   59031+         DS    1CL008    Reserved                                  @65A 03-IGWSMF\n                         00000058           59032+SMF4204V_LEN EQU *-SMF4204V                                        @65A 03-IGWSMF\n                                            59033+*\n                                            59034+*   -----------------------------------------------------------------\n                                            59035+*    CC SSID Header Section (SMF42 subtype 4)                      @65A\n                                            59036+*   -----------------------------------------------------------------\n                                            59037+*\n                                            59038+*\n 00000000                00000000 00000020  59039+S42VSIDH DSECT ,                                                   @65A 03-IGWSMF\n 00000000                                   59040+S42VSNXT DS    1FL4      Offset to next SSID header                @65A 03-IGWSMF\n                                            59041+*                        (0 if last SSID)                          @65A\n 00000004                                   59042+S42VSID  DS    1FL2      SSID                                      @65A 03-IGWSMF\n 00000006                                   59043+S42VSIDP DS    1FL1      Controller session ID                     @65A 03-IGWSMF\n 00000007                                   59044+         DS    1CL0001   Reserved                                  @65A 03-IGWSMF\n 00000008                                   59045+S42VSMSF DS    1FL4      Maximum track threshold reached in        @65A 03-IGWSMF\n                                            59046+*                        storage control buffers                   @65A\n 0000000C                                   59047+         DS    1CL0008   Reserved                                  @25C 03-IGWSMF\n 00000014                                   59048+S42VSVLO DS    1FL4      Offset to first volume                    @65A 03-IGWSMF\n 00000018                                   59049+S42VSVLN DS    1FL2      Number of volumes                         @65A 03-IGWSMF\n 0000001A                                   59050+S42VSVLL DS    1FL2      Length of volume section                  @65A 03-IGWSMF\n 0000001C                                   59051+         DS    1CL004    Reserved                                  @65A 03-IGWSMF\n                         00000020           59052+S42VSIDH_LEN EQU *-S42VSIDH                                        @65A 03-IGWSMF\n                                            59053+*\n                                            59054+*   -----------------------------------------------------------------\n                                            59055+*   EAV CC Volume section (SMF42 subtype 4)                        @65A\n                                            59056+*   -----------------------------------------------------------------\n                                            59057+*\n                                            59058+*\n 00000000                00000000 0000002C  59059+S42VVL   DSECT ,                                                   @65A 03-IGWSMF\n 00000000                                   59060+S42VVLNX DS    1FL4      Offset to next volume (0 if last          @65A 03-IGWSMF\n                                            59061+*                        volume)                                   @65A\n 00000004                                   59062+S42VVLSR DS    1CL0006   Volume Serial                             @65A 03-IGWSMF\n 0000000A                                   59063+         DS    1CL0002   Reserved                                  @65A 03-IGWSMF\n 0000000C                                   59064+S42VVLDV DS    1CL0001   Device type  (UCBTBYT4)                   @65A 03-IGWSMF\n 0000000D                                   59065+S42VVLUA DS    1CL0003   Unit address (UCBNAME)                    @65A 03-IGWSMF\n 00000010                                   59066+S42VVCTK DS    1FL4      Number of tracks processed on volume      @65A 03-IGWSMF\n                                            59067+*                        using CC                                  @65A\n 00000014                                   59068+S42VVVTK DS    1FL4      Number of tracks to be processed on       @65A 03-IGWSMF\n                                            59069+*                        volume using vcc                          @65A\n 00000018                                   59070+S42VVVRD DS    1FL4      Number of tracks processed on volume      @65A 03-IGWSMF\n                                            59071+*                        using vcc                                 @65A\n 0000001C                                   59072+S42VVLRD DS    1FL4      Number of tracks read directly from       @65A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  155\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           59073+*                        DASD                                      @65A\n 00000020                                   59074+S42VVLRS DS    1FL4      Number of tracks read from the            @65A 03-IGWSMF\n                                            59075+*                        storage control buffers                   @65A\n 00000024                                   59076+S42VVLEP DS    1FL4      Number of EXCPs                           @65A 03-IGWSMF\n 00000028                                   59077+S42VVLUX DS    1CL0004   Unit address (UCBNAME) extended           @65A 03-IGWSMF\n                         0000002C           59078+S42VVL_LEN EQU *-S42VVL                                            @65A 03-IGWSMF\n                                            59079+*\n                                            59080+*\n                                            59081+*\n                                            59082+*\n                                            59083+*\n                                            59084+*   -----------------------------------------------------------------\n                                            59085+*    Storage Class Response Time Section (SMF42 subtype 5)\n                                            59086+*   -----------------------------------------------------------------\n                                            59087+*\n                                            59088+*\n 00000000                00000000 00000060  59089+SMF4205A DSECT ,                                                        03-IGWSMF\n 00000000                                   59090+S42SCNAM DS    0CL0032   Storage class name                             03-IGWSMF\n 00000000                                   59091+S42SCRNL DS    1FL2      Storage class name length                      03-IGWSMF\n 00000002                                   59092+S42SCRNN DS    1CL0030   Storage class name                             03-IGWSMF\n 00000020                                   59093+S42SCIO  DS    0CL0064   Description of I/O Stats              @27C     03-IGWSMF\n 00000020                                   59094+S42SCIOR DS    1FL4      Response time                                  03-IGWSMF\n 00000024                                   59095+S42SCIOC DS    1FL4      Avg I/O connect time                           03-IGWSMF\n 00000028                                   59096+S42SCIOP DS    1FL4      Avg I/O pending time                           03-IGWSMF\n 0000002C                                   59097+S42SCIOD DS    1FL4      Avg I/O disconnect time                        03-IGWSMF\n 00000030                                   59098+S42SCIOQ DS    1FL4      Avg cntl unit queue time                       03-IGWSMF\n 00000034                                   59099+S42SCION DS    1FL4      Total number of I/Os                           03-IGWSMF\n                                            59100+*\n                                            59101+*      ***************************************************************\n                                            59102+*      *                                                             *\n                                            59103+*      * 3990 Control unit cache statistics\n                                            59104+*      *                                                             *\n                                            59105+*      ***************************************************************\n                                            59106+*\n                                            59107+*\n 00000038                                   59108+S42SCCND DS    1FL4      No. of cache candidates                        03-IGWSMF\n 0000003C                                   59109+S42SCHIT DS    1FL4      No. of cache hits                              03-IGWSMF\n 00000040                                   59110+S42SCWCN DS    1FL4      No. of write candidates                        03-IGWSMF\n 00000044                                   59111+S42SCWHI DS    1FL4      No. of write hits                              03-IGWSMF\n 00000048                                   59112+S42SCSEQ DS    1FL4      No. of sequential I/Os            @OW00573     03-IGWSMF\n 0000004C                                   59113+S42SCRLC DS    1FL4      No. of RLC I/O's                  @OW00573     03-IGWSMF\n 00000050                                   59114+S42SCICL DS    1FL4      No. of ILC I/O's                  @OW00573     03-IGWSMF\n 00000054                                   59115+S42SCDAO DS    1FL4      Average I/O device-active-only time   @19C     03-IGWSMF\n                                            59116+*\n                                            59117+*      ***************************************************************\n                                            59118+*      *                                                             *\n                                            59119+*      * THESE ARE AN EXTENSION OF THE I/O STATISTICS            @27A*\n                                            59120+*      *                                                             *\n                                            59121+*      ***************************************************************\n                                            59122+*\n                                            59123+*\n 00000058                                   59124+S42SCIO_EXT  DS 0CL8     DESCRIPTION OF I/O STATS - EXTENSION  @27A     03-IGWSMF\n 00000058                                   59125+S42SCRDD DS    1FL4      AVG READ DISCONNECT                   @27A     03-IGWSMF\n 0000005C                                   59126+S42SCRDT DS    1FL4      TOTAL NUMBER OF READ I/OS             @27A     03-IGWSMF\n                         00000060           59127+SMF4205A_LEN EQU *-SMF4205A                                             03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  156\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           59128+*   -----------------------------------------------------------@P1A\n                                            59129+*    Volume Statistics Header section (SMF Subtype 5)          @P1A\n                                            59130+*      Note that offsets to component sections are zero        @P1A\n                                            59131+*      if there are no statistics for the component            @P1A\n                                            59132+*   -----------------------------------------------------------@P1A\n                                            59133+*                                                              @P1A\n 00000000                00000000 00000030  59134+SMF4205B DSECT ,                                               @P1A     03-IGWSMF\n 00000000                                   59135+S42VTNXT DS    1FL4      Offset to next volume                 @P1A     03-IGWSMF\n 00000004                                   59136+S42VTSER DS    CL6       Volume serial                         @P1A     03-IGWSMF\n 0000000A                                   59137+S42VTADR DS    1FL2      Device address                        @P1A     03-IGWSMF\n 0000000C                                   59138+S42VTFL1 DS    1FL1      Flags                                 @P1A     03-IGWSMF\n                         00000080           59139+S42VTONL EQU   X'80'     Device online                         @P1A     03-IGWSMF\n                         00000040           59140+S42VTSMS EQU   X'40'     SMS volume                            @P1A     03-IGWSMF\n 0000000D                                   59141+         DS    CL7       Reserved                              @P1A     03-IGWSMF\n 00000014                                   59142+S42VTUNC DS    1FL4      I/O count, unknown data set           @P1A     03-IGWSMF\n 00000018                                   59143+S42VTVDO DS    1FL4      Offset to VTOC Data component section @P1A     03-IGWSMF\n 0000001C                                   59144+S42VTVDL DS    1FL2      Length of VTOC Data component section @P1A     03-IGWSMF\n 0000001E                                   59145+         DS    1FL2      Reserved                              @P1A     03-IGWSMF\n 00000020                                   59146+S42VTVXO DS    1FL4      Offset to VTOC Index section          @P1A     03-IGWSMF\n 00000024                                   59147+S42VTVXL DS    1FL2      Length of VTOC Index section          @P1A     03-IGWSMF\n 00000026                                   59148+         DS    1FL2      Reserved                              @P1A     03-IGWSMF\n 00000028                                   59149+S42VTVVO DS    1FL4      Offset to VVDS section                @P1A     03-IGWSMF\n 0000002C                                   59150+S42VTVVL DS    1FL2      Length of VVDS section                @P1A     03-IGWSMF\n 0000002E                                   59151+         DS    1FL2      Reserved                              @P1A     03-IGWSMF\n                         00000030           59152+SMF4205B_LEN EQU *-SMF4205B                                    @P1A     03-IGWSMF\n                                            59153+*   -----------------------------------------------------------@P1A\n                                            59154+*    VTOC data component (Subtype 5)                           @P1A\n                                            59155+*   -----------------------------------------------------------@P1A\n                                            59156+*                                                              @P1A\n 00000000                00000000 00000040  59157+SMF4205C DSECT ,                                               @P1A     03-IGWSMF\n 00000000                                   59158+S42VDIOR DS    1FL4      Response time                         @P1A     03-IGWSMF\n 00000004                                   59159+S42VDIOC DS    1FL4      Avg I/O connect time                  @P1A     03-IGWSMF\n 00000008                                   59160+S42VDIOP DS    1FL4      Avg I/O pending time                  @P1A     03-IGWSMF\n 0000000C                                   59161+S42VDIOD DS    1FL4      Avg I/O disconnect time               @P1A     03-IGWSMF\n 00000010                                   59162+S42VDIOQ DS    1FL4      Avg cntl unit queue time              @P1A     03-IGWSMF\n 00000014                                   59163+S42VDION DS    1FL4      Total number of I/Os                  @P1A     03-IGWSMF\n 00000018                                   59164+S42VDCND DS    1FL4      No. of cache candidates               @P1A     03-IGWSMF\n 0000001C                                   59165+S42VDHIT DS    1FL4      No. of cache hits                     @P1A     03-IGWSMF\n 00000020                                   59166+S42VDWCN DS    1FL4      No. of write candidates               @P1A     03-IGWSMF\n 00000024                                   59167+S42VDWHI DS    1FL4      No. of write hits                     @P1A     03-IGWSMF\n 00000028                                   59168+S42VDSEQ DS    1FL4      No. of sequential I/Os                @P1A     03-IGWSMF\n 0000002C                                   59169+S42VDRLC DS    1FL4      No. of RLC I/O's                      @P1A     03-IGWSMF\n 00000030                                   59170+S42VDICL DS    1FL4      No. of ICL I/O's                      @P1A     03-IGWSMF\n 00000034                                   59171+S42VDDAO DS    1FL4      Average I/O device-active-only time   @19C     03-IGWSMF\n 00000038                                   59172+S42VDIO_EXT  DS 0CL8     Description of VVD I/O Stats - Ext    @27A     03-IGWSMF\n 00000038                                   59173+S42VDRDD DS    1FL4      Avg read disconnect                   @27A     03-IGWSMF\n 0000003C                                   59174+S42VDRDT DS    1FL4      Total number of read I/Os             @27A     03-IGWSMF\n                                            59175+*                                                              @P1A\n                                            59176+*                                                              @P1A\n                         00000040           59177+SMF4205C_LEN EQU *-SMF4205C                                    @P1A     03-IGWSMF\n                                            59178+*   -----------------------------------------------------------@P1A\n                                            59179+*    VTOC index component (Subtype 5)                          @P1A\n                                            59180+*   -----------------------------------------------------------@P1A\n                                            59181+*                                                              @P1A\n 00000000                00000000 00000040  59182+SMF4205D DSECT ,                                               @P1A     03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  157\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000000                                   59183+S42VXIOR DS    1FL4      Response time                         @P1A     03-IGWSMF\n 00000004                                   59184+S42VXIOC DS    1FL4      Avg I/O connect time                  @P1A     03-IGWSMF\n 00000008                                   59185+S42VXIOP DS    1FL4      Avg I/O pending time                  @P1A     03-IGWSMF\n 0000000C                                   59186+S42VXIOD DS    1FL4      Avg I/O disconnect time               @P1A     03-IGWSMF\n 00000010                                   59187+S42VXIOQ DS    1FL4      Avg cntl unit queue time              @P1A     03-IGWSMF\n 00000014                                   59188+S42VXION DS    1FL4      Total number of I/Os                  @P1A     03-IGWSMF\n 00000018                                   59189+S42VXCND DS    1FL4      No. of cache candidates               @P1A     03-IGWSMF\n 0000001C                                   59190+S42VXHIT DS    1FL4      No. of cache hits                     @P1A     03-IGWSMF\n 00000020                                   59191+S42VXWCN DS    1FL4      No. of write candidates               @P1A     03-IGWSMF\n 00000024                                   59192+S42VXWHI DS    1FL4      No. of write hits                     @P1A     03-IGWSMF\n 00000028                                   59193+S42VXSEQ DS    1FL4      No. of sequential I/Os                @P1A     03-IGWSMF\n 0000002C                                   59194+S42VXRLC DS    1FL4      No. of RLC I/O's                      @P1A     03-IGWSMF\n 00000030                                   59195+S42VXICL DS    1FL4      No. of ICL I/O's                      @P1A     03-IGWSMF\n 00000034                                   59196+S42VXDAO DS    1FL4      Average I/O device-active-only time   @19C     03-IGWSMF\n 00000038                                   59197+S42VXIO_EXT  DS 0CL8     Description of VVX I/O Stats - Ext    @27A     03-IGWSMF\n 00000038                                   59198+S42VXRDD DS    1FL4      Avg read disconnect                   @27A     03-IGWSMF\n 0000003C                                   59199+S42VXRDT DS    1FL4      Total number of read I/Os             @27A     03-IGWSMF\n                                            59200+*                                                              @P1A\n                                            59201+*                                                              @P1A\n                         00000040           59202+SMF4205D_LEN EQU *-SMF4205D                                    @P1A     03-IGWSMF\n                                            59203+*   -----------------------------------------------------------@P1A\n                                            59204+*    VVDS component (Subtype 5)                                @P1A\n                                            59205+*   -----------------------------------------------------------@P1A\n                                            59206+*                                                              @P1A\n 00000000                00000000 00000040  59207+SMF4205E DSECT ,                                               @P1A     03-IGWSMF\n 00000000                                   59208+S42VVIOR DS    1FL4      Response time                         @P1A     03-IGWSMF\n 00000004                                   59209+S42VVIOC DS    1FL4      Avg I/O connect time                  @P1A     03-IGWSMF\n 00000008                                   59210+S42VVIOP DS    1FL4      Avg I/O pending time                  @P1A     03-IGWSMF\n 0000000C                                   59211+S42VVIOD DS    1FL4      Avg I/O disconnect time               @P1A     03-IGWSMF\n 00000010                                   59212+S42VVIOQ DS    1FL4      Avg cntl unit queue time              @P1A     03-IGWSMF\n 00000014                                   59213+S42VVION DS    1FL4      Total number of I/Os                  @P1A     03-IGWSMF\n 00000018                                   59214+S42VVCND DS    1FL4      No. of cache candidates               @P1A     03-IGWSMF\n 0000001C                                   59215+S42VVHIT DS    1FL4      No. of cache hits                     @P1A     03-IGWSMF\n 00000020                                   59216+S42VVWCN DS    1FL4      No. of write candidates               @P1A     03-IGWSMF\n 00000024                                   59217+S42VVWHI DS    1FL4      No. of write hits                     @P1A     03-IGWSMF\n 00000028                                   59218+S42VVSEQ DS    1FL4      No. of sequential I/Os                @P1A     03-IGWSMF\n 0000002C                                   59219+S42VVRLC DS    1FL4      No. of RLC I/O's                      @P1A     03-IGWSMF\n 00000030                                   59220+S42VVICL DS    1FL4      No. of ICL I/O's                      @P1A     03-IGWSMF\n 00000034                                   59221+S42VVDAO DS    1FL4      Average I/O device-active-only time   @19C     03-IGWSMF\n 00000038                                   59222+S42VVIO_EXT  DS 0CL8     Description of VVS I/O Stats - Ext    @27A     03-IGWSMF\n 00000038                                   59223+S42VVRDD DS    1FL4      Avg read disconnect                   @27A     03-IGWSMF\n 0000003C                                   59224+S42VVRDT DS    1FL4      Total number of read I/Os             @27A     03-IGWSMF\n                                            59225+*                                                              @P1A\n                                            59226+*                                                              @P1A\n                         00000040           59227+SMF4205E_LEN EQU *-SMF4205E                                    @P1A     03-IGWSMF\n                                            59228+*\n                                            59229+*\n                                            59230+*\n                                            59231+*\n                                            59232+*\n                                            59233+*   -----------------------------------------------------------------\n                                            59234+*    Job section - Data set statistics (SMF42 subtype 6)\n                                            59235+*   -----------------------------------------------------------------\n                                            59236+*\n                                            59237+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  158\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000000                00000000 00000040  59238+SMF4206A DSECT ,                                                        03-IGWSMF\n 00000000                                   59239+S42JDJNM DS    1CL0008   Job name                                       03-IGWSMF\n 00000008                                   59240+S42JDRST DS    1FL4      Time, in hundreds of a second, reader         X03-IGWSMF\n                                                 +                         recognized the JOB card for this job\n 0000000C                                   59241+S42JDRSD DS    1CL0004   Date reader recognized the JOB card for this  X03-IGWSMF\n                                                 +                         job, in the form 0cyydddF, where F is the     X\n                                                 +                         sign\n 00000010                                   59242+S42JDUID DS    1CL0008   User identification (taken from common exit   X03-IGWSMF\n                                                 +                         parameter area)\n 00000018                                   59243+S42JDDSO DS    1FL4      Offset to first data set hdr                   03-IGWSMF\n 0000001C                                   59244+S42JDDSL DS    1FL2      Length of DS header sec                        03-IGWSMF\n 0000001E                                   59245+S42JDCOD DS    1FL1      0=Close, 1=Interval record                     03-IGWSMF\n 0000001F                                   59246+         DS    1CL0001   Reserved                                       03-IGWSMF\n 00000020                                   59247+S42JDPGN DS    1FL2      Job performance group number                   03-IGWSMF\n 00000022                                   59248+S42JDIOL DS    1FL2      Length of Data Set I/O section                 03-IGWSMF\n 00000024                                   59249+S42JDAML DS    1FL2      Length of AM section               @OW00573    03-IGWSMF\n 00000026                                   59250+         DS    1CL0002   Reserved                               @09A    03-IGWSMF\n 00000028                                   59251+S42JDGMO DS    1FL4      GMT Offset represented in 1.048576 sec @09A    03-IGWSMF\n 0000002C                                   59252+S42JDWSC DS    1CL8      Workload Manager Service Class name    @P1A    03-IGWSMF\n 00000034                                   59253+S42JDWLD DS    1CL8      Workload Manager Workload name         @P1A    03-IGWSMF\n 0000003C                                   59254+         DS    1CL0004   Reserved                               @09A    03-IGWSMF\n                         00000040           59255+SMF4206A_LEN EQU *-SMF4206A                                             03-IGWSMF\n                                            59256+*\n                                            59257+*   -----------------------------------------------------------------\n                                            59258+*    Data set header section (SMF42 subtype 6)\n                                            59259+*   -----------------------------------------------------------------\n                                            59260+*\n                                            59261+*\n 00000000                00000000 00000058  59262+S42DSH   DSECT ,                                                        03-IGWSMF\n 00000000                                   59263+S42DSNXT DS    1FL4      Offset to next DS header                       03-IGWSMF\n 00000004                                   59264+S42DSN   DS    1CL0044   Data set name                                  03-IGWSMF\n 00000030                                   59265+S42DSTYP DS    1CL0001   Reserved                                       03-IGWSMF\n 00000031                                   59266+S42DSCOD DS    0BL1      Entry descriptor flags                         03-IGWSMF\n                         00000080           59267+S42FIRST EQU   X'80'     1st DS entry since Open                        03-IGWSMF\n 00000031                00000031 00000032  59268+         ORG   S42DSCOD+X'00000001'                                     03-IGWSMF\n 00000032                                   59269+S42DSFL1 DS    X         Data set descriptor flags               @P1A   03-IGWSMF\n                         00000080           59270+S42DSVBU EQU   X'80'     VSAM buffer flags          @            @P1A   03-IGWSMF\n                         000000C0           59271+S42DSGSR EQU   X'C0'       GSR                                   @P1A   03-IGWSMF\n                         00000080           59272+S42DSLSR EQU   X'80'       LSR                                   @P1A   03-IGWSMF\n                         00000040           59273+S42DSRLS EQU   X'40'       RLS                                   @P1A   03-IGWSMF\n                         00000000           59274+S42DSNSR EQU   X'00'       NSR                                   @P1A   03-IGWSMF\n                         00000010           59275+S42DSEXC EQU   X'10'     Open for EXCP processing                @P1A   03-IGWSMF\n                         00000008           59276+S42DSFXD EQU   X'08'     Non-VSAM fixed length records           @P1A   03-IGWSMF\n                         00000004           59277+S42DSPL  EQU   X'04'     Program library                         @P1A   03-IGWSMF\n                         00000002           59278+S42DSEF  EQU   X'02'     Extended format                         @P1A   03-IGWSMF\n                         00000001           59279+S42DSEFC EQU   X'01'     Compressed format                       @P1A   03-IGWSMF\n 00000033                                   59280+         DS    X         Reserved                                @P1C   03-IGWSMF\n 00000034                                   59281+S42DSIOO DS    1FL4      Offset to I/O section                          03-IGWSMF\n 00000038                                   59282+S42DSAMO DS    1FL4      Offset to AM  section               @OW00159   03-IGWSMF\n 0000003C                                   59283+S42DSVOL DS    1CL0006   VOLSER                              @OW00159   03-IGWSMF\n 00000042                                   59284+S42DSDEV DS    1CL0002   Device number                       @OW00159   03-IGWSMF\n 00000044                                   59285+S42DSSC  DS    1CL0008   Storage class name                  @OW00159   03-IGWSMF\n 0000004C                                   59286+S42DSBSZ DS    1FL4      block size                          @OW00159   03-IGWSMF\n 00000050                                   59287+S42DSTRP DS    H         Number of stripes                       @P1A   03-IGWSMF\n 00000052                                   59288+         DS    CL6       Reserved                                @P1A   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  159\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000058           59289+S42DSH_LEN EQU *-S42DSH                                                 03-IGWSMF\n                                            59290+*\n                                            59291+*   -----------------------------------------------------------------\n                                            59292+*    Data set I/O statistics (SMF42 subtype 6)\n                                            59293+*\n                                            59294+*    I/O response/service time components are recorded\n                                            59295+*    in multiples of 128 micro-seconds.\n                                            59296+*    The length of these statistics must be identical\n                                            59297+*    with the length of DSSBSTAT in the DSSB.\n                                            59298+*   -----------------------------------------------------------------\n                                            59299+*\n                                            59300+*\n 00000000                00000000 00000048  59301+S42DSIO  DSECT ,                                                        03-IGWSMF\n 00000000                                   59302+S42DSIOR DS    1FL4      Response time                                  03-IGWSMF\n 00000004                                   59303+S42DSIOC DS    1FL4      Avg I/O connect time                           03-IGWSMF\n 00000008                                   59304+S42DSIOP DS    1FL4      Avg I/O pending time                           03-IGWSMF\n 0000000C                                   59305+S42DSIOD DS    1FL4      Avg I/O disconnect time                        03-IGWSMF\n 00000010                                   59306+S42DSIOQ DS    1FL4      Avg cntl unit queue time                       03-IGWSMF\n 00000014                                   59307+S42DSION DS    1FL4      Total number of I/Os                           03-IGWSMF\n                                            59308+*\n                                            59309+*      ***************************************************************\n                                            59310+*      *                                                             *\n                                            59311+*      * 3990 Control unit cache statistics\n                                            59312+*      *                                                             *\n                                            59313+*      ***************************************************************\n                                            59314+*\n                                            59315+*\n 00000018                                   59316+S42DSCND DS    1FL4      No. of cache candidates                        03-IGWSMF\n 0000001C                                   59317+S42DSHTS DS    1FL4      No. of cache hits                              03-IGWSMF\n 00000020                                   59318+S42DSWCN DS    1FL4      No. of write candidates                        03-IGWSMF\n 00000024                                   59319+S42DSWHI DS    1FL4      No. of write hits                              03-IGWSMF\n 00000028                                   59320+S42DSSEQ DS    1FL4      No. of sequential I/Os            @OW00573     03-IGWSMF\n 0000002C                                   59321+S42DSRLC DS    1FL4      No. of RLC I/O's                  @OW00573     03-IGWSMF\n 00000030                                   59322+S42DSICL DS    1FL4      No. of ILC I/O's                  @OW00573     03-IGWSMF\n 00000034                                   59323+S42DSDAO DS    1FL4      Average I/O device-active-only time   @19C     03-IGWSMF\n                                            59324+*\n                                            59325+*  Following two fields are not part of DSSSBSTAT\n                                            59326+*\n 00000038                                   59327+S42DSMAX DS    0D                                                 @12A  03-IGWSMF\n 00000038                                   59328+S42DSMXR DS    1FL4      maximum dataset I/O response time        @12A  03-IGWSMF\n 0000003C                                   59329+S42DSMXS DS    1FL4      maximum dataset service time             @12A  03-IGWSMF\n                                            59330+*\n                                            59331+*      ***************************************************************\n                                            59332+*      *                                                             *\n                                            59333+*      * EXTENSION OF DATA SET I/O STATISTICS                    @27A*\n                                            59334+*      *                                                             *\n                                            59335+*      ***************************************************************\n                                            59336+*\n                                            59337+*\n 00000040                                   59338+S42DSIO_EXT  DS 0CL8     DESCRIPTION OF I/O STATS - EXT          @27A   03-IGWSMF\n 00000040                                   59339+S42DSRDD DS    1FL4      AVG READ DISCONNECT                     @27A   03-IGWSMF\n 00000044                                   59340+S42DSRDT DS    1FL4      TOTAL NUMBER OF READ I/OS               @27A   03-IGWSMF\n                         00000048           59341+S42DSIO_LEN EQU *-S42DSIO                                               03-IGWSMF\n                                            59342+*\n                                            59343+*      *                                                             *\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  160\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           59344+*      *                                                             *\n                                            59345+*\n 00000000                00000000 00000030  59346+S42DSAM  DSECT ,                                              @OW00159  03-IGWSMF\n 00000000                                   59347+S42AMSRB DS    1FL4                Sequential read no. of blocks  @RTA  03-IGWSMF\n 00000004                                   59348+S42AMSRR DS    1FL4                Sequential read I/O delay      @RTA  03-IGWSMF\n 00000008                                   59349+S42AMSWB DS    1FL4                Sequential write no. of blocks @RTA  03-IGWSMF\n 0000000C                                   59350+S42AMSWR DS    1FL4                Sequential write I/O delay     @RTA  03-IGWSMF\n 00000010                                   59351+S42AMDRB DS    1FL4                Direct read no. of blocks      @RTA  03-IGWSMF\n 00000014                                   59352+S42AMDRR DS    1FL4                Direct read I/O total delay    @RTA  03-IGWSMF\n 00000018                                   59353+S42AMDWB DS    1FL4                Direct write no. of blocks     @RTA  03-IGWSMF\n 0000001C                                   59354+S42AMDWR DS    1FL4                Direct write total I/O delay   @RTA  03-IGWSMF\n 00000020                                   59355+S42AMZRB DS    1FL4                No. of directory reads         @RTA  03-IGWSMF\n 00000024                                   59356+S42AMZRR DS    1FL4                Directory read I/O delay       @RTA  03-IGWSMF\n 00000028                                   59357+S42AMZWB DS    1FL4                No. of directory writes        @RTA  03-IGWSMF\n 0000002C                                   59358+S42AMZWR DS    1FL4                Directory write I/O delay      @RTA  03-IGWSMF\n                         00000030           59359+S42DSAM_LEN EQU *-S42DSAM                                         @RTA  03-IGWSMF\n                                            59360+*\n                                            59361+*\n                                            59362+*\n                                            59363+*\n                                            59364+*   -------------------------------------------------------------- @P1A\n                                            59365+*     SMF type 42 subtype 9 (X37 ABEND record, part 1)             @P1A\n                                            59366+*   -------------------------------------------------------------- @P1A\n                                            59367+*\n                                            59368+*\n 00000000                00000000 0000006C  59369+SMF4209A DSECT ,                                                   @P1A 03-IGWSMF\n 00000000                                   59370+SMF09X37 DS    0CL0102             Descripton of X37 ABEND section @P1A 03-IGWSMF\n 00000000                                   59371+S42ASYID DS    1CL0004             System ID                       @P1A 03-IGWSMF\n 00000004                                   59372+S42JOBN  DS    1CL0008             Job name                        @P1A 03-IGWSMF\n 0000000C                                   59373+S42RDST  DS    1BL0004             Reader start time               @P1A 03-IGWSMF\n 00000010                                   59374+S42RDSD  DS    1PL0004             Reader start date(packed)       @P1A 03-IGWSMF\n 00000014                                   59375+S42AAUID DS    1CL0008             User identification             @P1A 03-IGWSMF\n 0000001C                                   59376+S42ASTPN DS    1BL0001             Step number                     @P1A 03-IGWSMF\n 0000001D                                   59377+S42FLAGS DS    1BL0001             Flags                           @P1A 03-IGWSMF\n                         00000080           59378+S42B37   EQU   X'80'               1... .... B37 Abend             @P1A 03-IGWSMF\n                         00000040           59379+S42D37   EQU   X'40'               .1.. .... D37 Abend             @P1A 03-IGWSMF\n                         00000020           59380+S42E37   EQU   X'20'               ..1. .... E37 Abend             @P1A 03-IGWSMF\n 0000001E                                   59381+         DS    1CL0004             Reserved                        @P1A 03-IGWSMF\n 00000022                                   59382+S42DSORG DS    1BL0002             Data set organization           @P1A 03-IGWSMF\n 00000024                                   59383+S42ADISP DS    1BL0001             Disp                            @P1A 03-IGWSMF\n 00000025                                   59384+S42DSNME DS    1CL0044             Data set name                   @15C 03-IGWSMF\n 00000051                                   59385+S42VOLSR DS    1CL0006             Volser of current volume        @P1A 03-IGWSMF\n 00000057                                   59386+S42UCBTP DS    1BL0004             UCB type field of current vol   @P1A 03-IGWSMF\n 0000005B                                   59387+S42NEXT  DS    1FL1                Number of extents for data set  @P1A 03-IGWSMF\n                                            59388+*                                    on current volume             @P1A\n 0000005C                                   59389+S42TNTRK DS    1FL4                Total tracks allocated for      @P1A 03-IGWSMF\n                                            59390+*                                    data set on current volume    @P1A\n 00000060                                   59391+S42ASSAT DS    1BL0004             Secondary allocation amount     @P1A 03-IGWSMF\n 00000064                                   59392+S42ADRLH DS    1BL0003             Average data block length if    @P1A 03-IGWSMF\n                                            59393+*                                    specified                     @P1A\n 00000067                                   59394+         DS    1CL0005             Reserved                        @P1A 03-IGWSMF\n                         0000006C           59395+SMF4209A_LEN EQU *-SMF4209A        Length of subtype 9 part 1      @P1A 03-IGWSMF\n                                            59396+*                                                                  @P1A\n                                            59397+*  --------------------------------------------------------------  @P1A\n                                            59398+*    SMF type 42 subtype 9 (X37 ABEND record, part 2 SMS info)     @P1A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  161\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           59399+*  --------------------------------------------------------------  @P1A\n                                            59400+*                                                                  @P1A\n 00000000                00000000 0000005A  59401+SMF4209B DSECT ,                                                   @P1A 03-IGWSMF\n 00000000                                   59402+S4209SMS DS    0CL0120             Description of SMS section      @P1A 03-IGWSMF\n                                            59403+*                                                                1 @P2D\n 00000000                                   59404+S42MCNME DS    1CL0030             Management class name           @P1A 03-IGWSMF\n 0000001E                                   59405+S42SCNME DS    1CL0030             Storage class name              @P1A 03-IGWSMF\n 0000003C                                   59406+S42DCNME DS    1CL0030             Data class name                 @P1A 03-IGWSMF\n                         0000005A           59407+SMF4209B_LEN EQU *-SMF4209B                                        @13C 03-IGWSMF\n                                            59408+*                                                                  @P1A\n                                            59409+*                                                                  @P1A\n                                            59410+*\n                                            59411+*\n                                            59412+*   -----------------------------------------------------------------\n                                            59413+*     Volume Selection Failure Record (VTOC/Data Set Services)     @23A\n                                            59414+*   -----------------------------------------------------------------\n                                            59415+*\n                                            59416+*\n                                            59417+*\n                                            59418+*   -----------------------------------------------------------------\n                                            59419+*    SMF type 42 subtype 10 (Volume Selection Section)             @23A\n                                            59420+*   -----------------------------------------------------------------\n                                            59421+*\n                                            59422+*\n 00000000                00000000 00000292  59423+SMF420AA  DSECT ,                                                  @23A 03-IGWSMF\n 00000000                                   59424+SMF42VSS  DS   0CL0658   Description of Volume selection section   @24C 03-IGWSMF\n 00000000                                   59425+SMF42JBN  DS   1CL0008   JOBNAME                                   @23A 03-IGWSMF\n 00000008                                   59426+SMF42PGN  DS   1CL0008   Program name                              @23A 03-IGWSMF\n 00000010                                   59427+SMF42STN  DS   1CL0008   Step name                                 @23A 03-IGWSMF\n 00000018                                   59428+SMF42DDN  DS   1CL0008   DD name                                   @23A 03-IGWSMF\n 00000020                                   59429+SMF42DSN  DS   1CL0044   Data Set name                             @23A 03-IGWSMF\n 0000004C                                   59430+SMF42SPQ  DS   0CL0006   Space Quantity attribute                  @24A 03-IGWSMF\n 0000004C                                   59431+SMF42RSP  DS   1FL4      Requested space quantity                  @23A 03-IGWSMF\n 00000050                                   59432+SMF42UNT  DS   1CL0002   Unit of Requested space quantity          @24A 03-IGWSMF\n 00000052                                   59433+SMF42VDC  DS   0CL0032   Data Class                                @23A 03-IGWSMF\n 00000052                                   59434+SMF42DCL  DS   1FL2      Length of DC                              @23A 03-IGWSMF\n 00000054                                   59435+SMF42DCN  DS   1CL0030   Data Class name                           @23A 03-IGWSMF\n 00000072                                   59436+SMF42VMC  DS   0CL0032   Management Class                          @23A 03-IGWSMF\n 00000072                                   59437+SMF42MCL  DS   1FL2      Length of MC                              @23A 03-IGWSMF\n 00000074                                   59438+SMF42MCN  DS   1CL0030   Management Class name                     @23A 03-IGWSMF\n 00000092                                   59439+SMF42VSC  DS   0CL0032   Storage Class                             @23A 03-IGWSMF\n 00000092                                   59440+SMF42SLN  DS   1FL2      Length of SC                              @23A 03-IGWSMF\n 00000094                                   59441+SMF42SNM  DS   1CL0030   storage class name                        @23A 03-IGWSMF\n 000000B2                                   59442+SMF42SGS  DS   CL0480    List of Storage groups 15 entries*32bytes @23A 03-IGWSMF\n                         00000292           59443+SMF420AA_LEN EQU *-SMF420AA                                        @23A 03-IGWSMF\n                                            59444+*                                                                  @23A\n                                            59445+*                                                                  @23A\n                                            59446+*\n                                            59447+*\n                                            59448+*   -----------------------------------------------------------------\n                                            59449+*     Start of Extended Remote Copy (XRC) Session Statistics       @07A\n                                            59450+*   -----------------------------------------------------------------\n                                            59451+*\n                                            59452+*\n                                            59453+*   -----------------------------------------------------------------\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  162\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           59454+*    SMF type 42 subtype 11 (Extended Remote Copy (XRC)            @07A\n                                            59455+*                            Session Statistics)                   @07A\n                                            59456+*   -----------------------------------------------------------------\n                                            59457+*\n                                            59458+*\n 00000000                00000000 00000020  59459+SMF420BA DSECT  ,        XRC Session Statistics                    @07A 03-IGWSMF\n 00000000                                   59460+S42XRID  DS    1CL0008   Logical Session ID                        @07A 03-IGWSMF\n 00000008                                   59461+S42XRTYP DS    1CL0008   Session type                              @07A 03-IGWSMF\n 00000010                                   59462+S42XRSSO DS    1FL4      Offset to first SSID data section         @07A 03-IGWSMF\n 00000014                                   59463+S42XRSSN DS    1FL2      Number of SSIDs  for the session          @07A 03-IGWSMF\n 00000016                                   59464+S42XRSSL DS    1FL2      Length of  SSID data section              @07A 03-IGWSMF\n 00000018                                   59465+S42XRVLO DS    1FL4      Offset to first volume data SECTION       @14A 03-IGWSMF\n 0000001C                                   59466+S42XRVLN DS    1FL2      Number of volume data SECTIONS            @14A 03-IGWSMF\n 0000001E                                   59467+S42XRVLL DS    1FL2      Length of volume data                     @14C 03-IGWSMF\n                         00000020           59468+SMF420BA_LEN EQU *-SMF420BA                                        @07A 03-IGWSMF\n                                            59469+*\n                                            59470+*   -----------------------------------------------------------------\n                                            59471+*   XRC SSID Data Section (SMF42 subtype 11)                       @07A\n                                            59472+*   -----------------------------------------------------------------\n                                            59473+*\n                                            59474+*\n 00000000                00000000 0000002C  59475+S42XRSSD DSECT ,                                                   @07A 03-IGWSMF\n 00000000                                   59476+S42XRSNX DS    1FL4      Offset to next SSID data section          @07A 03-IGWSMF\n                                            59477+*                        (0 if last SSID)                          @07A\n 00000004                                   59478+S42XRSID DS    1FL2      SSID                                      @07A 03-IGWSMF\n 00000006                                   59479+S42XRIDP DS    1FL1      Controller session ID                     @07A 03-IGWSMF\n 00000007                                   59480+         DS    1CL0001   Reserved                                  @07A 03-IGWSMF\n 00000008                                   59481+S42XRVSH DS    1FL4      Number of volumes being shadowed               03-IGWSMF\n                                            59482+*                        for this SSID. Includes utility devices   @14C\n 0000000C                                   59483+S42XRTPR DS    1FL4      Total number of primary data mover        @07A 03-IGWSMF\n                                            59484+*                        reads                                     @07A\n 00000010                                   59485+S42XRNWD DS    1FL4      Number of primary data mover reads        @07A 03-IGWSMF\n                                            59486+*                        with data                                 @07A\n 00000014                                   59487+S42XRNND DS    1FL4      Number of primary data mover reads        @07A 03-IGWSMF\n                                            59488+*                        with no data                              @07A\n 00000018                                   59489+S42XRNLR DS    1FL4      Number of primary data mover reads        @07A 03-IGWSMF\n                                            59490+*                        left to be read                           @07A\n 0000001C                                   59491+S42XRNFW DS    1FL4      Number of format writes                   @07A 03-IGWSMF\n 00000020                                   59492+S42XRNUW DS    1FL4      Number of update writes                   @07A 03-IGWSMF\n 00000024                                   59493+S42XRARS DS    1FL4      Average record size                       @07A 03-IGWSMF\n 00000028                                   59494+         DS    1CL004    Reserved                                  @07A 03-IGWSMF\n                         0000002C           59495+S42XRSSD_LEN EQU *-S42XRSSD                                        @07A 03-IGWSMF\n                                            59496+*                                                                  @14A\n                                            59497+*   ----------------------------------------------------------------\n                                            59498+*   XRC Volume Data Section (SMF42 subtype 11)\n                                            59499+*   Information on XRC primary and secondary volumes.              @14A\n                                            59500+*   -----------------------------------------------------------------\n                                            59501+*                                                                  @14A\n                                            59502+*                                                                  @14A\n 00000000                00000000 00000034  59503+S42XRVLD DSECT ,                                                   @14A 03-IGWSMF\n 00000000                                   59504+S42XRVLX DS    1FL4      Offset to next volume data section,            03-IGWSMF\n                                            59505+*                        (0 if last volume)                        @14A\n 00000004                                   59506+S42XRVLV DS    1CL0006   Volser                                    @14A 03-IGWSMF\n 0000000A                                   59507+S42XRVAV DS    1CL0006   Other volser in pair                      @14A 03-IGWSMF\n 00000010                                   59508+S42XRVPS DS    1CL0001   'P' if primary volume                          03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  163\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           59509+*                        'S' if secondary volume                   @14A\n                                            59510+*                        'U' if utility volume                     @14A\n 00000011                                   59511+         DS    1CL0001   Reserved                                  @22A 03-IGWSMF\n 00000012                                   59512+S42XRVSS DS    1FL2      SSID associated with volume               @14A 03-IGWSMF\n 00000014                                   59513+S42XRVPR DS    1FL4      Total number data mover reads if               03-IGWSMF\n                                            59514+*                        primary. Total number data mover\n                                            59515+*                        writes if secondary.                      @14A\n 00000018                                   59516+S42XRVWD DS    1FL4      Number of data mover reads with                03-IGWSMF\n                                            59517+*                        data if primary.  Always 0 for\n                                            59518+*                        secondary.                                @14A\n 0000001C                                   59519+S42XRVND DS    1FL4      Number of primary data mover                   03-IGWSMF\n                                            59520+*                        reads with no data.  Always 0 for\n                                            59521+*                        secondary.                                @14A\n 00000020                                   59522+S42XRVFW DS    1FL4      Number of format writes                   @14A 03-IGWSMF\n 00000024                                   59523+S42XRVUW DS    1FL4      Number of update writes                   @14A 03-IGWSMF\n 00000028                                   59524+S42XRVRS DS    1FL4      Average record size                       @14A 03-IGWSMF\n 0000002C                                   59525+S42XRVRW DS    1FL4      Number of read tracks if primary.              03-IGWSMF\n                                            59526+*                        Number of write tracks if SECONDARY       @14A\n 00000030                                   59527+         DS    1CL0004   Reserved                                  @14A 03-IGWSMF\n                         00000034           59528+S42XRVLD_LEN EQU *-S42XRVLD                                        @14A 03-IGWSMF\n                                            59529+*\n                                            59530+*\n                                            59531+*   -----------------------------------------------------------------\n                                            59532+*    STORAGE CLASS MGR SUMMARY (SMF42 SUBTYPE 15)\n                                            59533+*   -----------------------------------------------------------------\n 00000000                00000000 00000518  59534+SMF420FA DSECT ,                                                 @10A   03-IGWSMF\n 00000000                                   59535+SMF42FA1 DS   0CL1280                SYSPLEX WIDE SUMMARY        @10A   03-IGWSMF\n 00000000                                   59536+SMF42FAA DS   1FL4                   INTERVAL LENGTH. THIS IS THE       03-IGWSMF\n                                            59537+*                                    TOTAL TIME OF THE MEASUREMENT\n                                            59538+*                                    PERIOD. (IN SECONDS)        @10A\n 00000004                                   59539+SMF42F00 DS   CL12                   INDICATES IF DFSMS GREATER  @P5A   03-IGWSMF\n                                            59540+*                                    THAN 4K CF CACHING IS ACTIVE@P5A\n                                            59541+*                                    VALUES ARE GT4KACTIVE OR    @P5A\n                                            59542+*                                    GT4KNOTACT                  @P5A\n 00000010                                   59543+SMF42FAB DS   1FL2                   LENGTH OF THE STORAGE CLASS        03-IGWSMF\n                                            59544+*                                    NAME                        @10A\n 00000012                                   59545+SMF42FAC DS   CL30                   STORAGE CLASS NAME          @10A   03-IGWSMF\n                                            59546+*\n 00000030                                   59547+SMF42F01 DS   1FL2                   CACHESETNAME LENGTH         @10A   03-IGWSMF\n 00000032                                   59548+SMF42FAD DS   CL30                   CACHESET NAME               @10A   03-IGWSMF\n                                            59549+*\n 00000050                                   59550+SMF42FAE DS   1FL4                   NUMBER OF LOCK REQUESTS            03-IGWSMF\n                                            59551+*                                    PROCESSED                   @10A\n 00000054                                   59552+SMF42FAF DS   1FL4                   NUMBER OF TRUE CONTENTION          03-IGWSMF\n                                            59553+*                                    LOCK REQUESTS               @10A\n 00000058                                   59554+SMF42FAG DS   1FL4                   NUMBER OF FALSE CONTENTION         03-IGWSMF\n                                            59555+*                                    LOCK REQUESTS               @10A\n 0000005C                                   59556+SMF42F02 DS   1FL2                   SMSDIRECTWEIGHT             @10A   03-IGWSMF\n 0000005E                                   59557+SMF42F12 DS   1FL2                   SMSSEQUENTIALWEIGHT         @10A   03-IGWSMF\n 00000060                                   59558+SMF42FAH DS   CL16                   RESERVED                    @10A   03-IGWSMF\n                                            59559+*                                                                @10A\n 00000070                                   59560+SMF42FA2 DS   0CL336                 DIRECT ACCESS SECTION       @10A   03-IGWSMF\n                                            59561+*\n 00000070                                   59562+SMF42FA3 DS   0CL168                 NORMAL DIRECT ACCESS SUMMARY       03-IGWSMF\n                                            59563+*                                    SECTION                     @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  164\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000070                                   59564+SMF42FCA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            59565+*                                    NUMBER                      @10A\n 00000074                                   59566+SMF42FCB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            59567+*                                                                @10A\n 00000078                                   59568+SMF42FCC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59569+*                                    NRI - NO READ INTEGRITY\n                                            59570+*                                                                @10A\n 0000007C                                   59571+SMF42FCD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59572+*                                    CONSISTENT READS   @10A\n                                            59573+*\n 00000080                                   59574+SMF42FCE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            59575+*                                                                @10A\n 00000084                                   59576+SMF42FCF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            59577+*                                                                @10A\n 00000088                                   59578+SMF42FCG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            59579+*                                                                @10A\n 0000008C                                   59580+SMF42FCH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            59581+*                                                                @10A\n                                            59582+*\n 00000090                                   59583+SMF42FCI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            59584+*                                                                @10A\n 00000094                                   59585+SMF42FCJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            59586+*                                                                @10A\n 00000098                                   59587+SMF42FCK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            59588+*                                                                @10A\n 0000009C                                   59589+SMF42FCL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            59590+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            59591+*\n 000000A0                                   59592+SMF42FCM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            59593+*                                                                @10A\n 000000A4                                   59594+SMF42FCN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 000000A8                                   59595+SMF42FCO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 000000AC                                   59596+SMF42FCP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 000000B0                                   59597+SMF42FCQ DS   2F                     NUMBER OF BYTES XFERED INTO THE    03-IGWSMF\n                                            59598+*                                    DFSMS CACHE STRUCTURE       @10A\n 000000B8                                   59599+SMF42FCR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            59600+*                                    TO DASD.                    @10A\n 000000BC                                   59601+SMF42FCS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            59602+*                                    TO DASD.                    @10A\n 000000C0                                   59603+SMF42FCT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59604+*                                    DASD FOR THE READ   REQUESTS @10A\n                                            59605+*                                                                @10A\n 000000C8                                   59606+SMF42FCU DS   2F                     NUMBER OF                          03-IGWSMF\n                                            59607+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            59608+*                                                                @10A\n 000000D0                                   59609+SMF42FCV DS   CL16                   RESERVED                           03-IGWSMF\n                                            59610+*                                                                @10A\n 000000E0                                   59611+SMF42FCW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            59612+*                                    REQUESTS IN THIS\n                                            59613+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            59614+*                                    IN milli-seconds)           @21A\n                                            59615+*\n 000000E8                                   59616+SMF42FCX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            59617+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            59618+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  165\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           59619+*                                                                @10A\n 000000EC                                   59620+SMF42FCY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            59621+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            59622+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            59623+*                                    TRANSFERRED/4K)             @10A\n 000000F0                                   59624+SMF42FCZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000000F8                                   59625+SMF42FC7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                         000000A8           59626+SMF42FA3_LEN  EQU *-SMF42FA3                                            03-IGWSMF\n                                            59627+*\n 00000118                                   59628+SMF42FA4 DS   0CL168                 RE-DO DURING DIRECT ACCESS         03-IGWSMF\n                                            59629+*                                    SECTION                     @10A\n 00000118                                   59630+SMF42FDA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            59631+*                                    NUMBER                      @10A\n 0000011C                                   59632+SMF42FDB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            59633+*                                                                @10A\n 00000120                                   59634+SMF42FDC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59635+*                                    NRI - NO READ INTEGRITY\n                                            59636+*                                                                @10A\n 00000124                                   59637+SMF42FDD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59638+*                                    CONSISTENT READS   @10A\n                                            59639+*\n 00000128                                   59640+SMF42FDE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            59641+*                                                                @10A\n 0000012C                                   59642+SMF42FDF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            59643+*                                                                @10A\n 00000130                                   59644+SMF42FDG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            59645+*                                                                @10A\n 00000134                                   59646+SMF42FDH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            59647+*                                                                @10A\n                                            59648+*\n 00000138                                   59649+SMF42FDI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            59650+*                                                                @10A\n 0000013C                                   59651+SMF42FDJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            59652+*                                                                @10A\n 00000140                                   59653+SMF42FDK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            59654+*                                                                @10A\n 00000144                                   59655+SMF42FDL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            59656+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            59657+*\n 00000148                                   59658+SMF42FDM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            59659+*                                                                @10A\n 0000014C                                   59660+SMF42FDN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000150                                   59661+SMF42FDO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 00000154                                   59662+SMF42FDP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000158                                   59663+SMF42FDQ DS   2F                     NUMBER OF BYTES XFERED INTO THE    03-IGWSMF\n                                            59664+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            59665+*                                                                @10A\n 00000160                                   59666+SMF42FDR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            59667+*                                    TO DASD.                    @10A\n 00000164                                   59668+SMF42FDS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            59669+*                                    TO DASD.                    @10A\n 00000168                                   59670+SMF42FDT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59671+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            59672+*                                                                @10A\n 00000170                                   59673+SMF42FDU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  166\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           59674+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            59675+*                                                                @10A\n 00000178                                   59676+SMF42FDV DS   CL16                   RESERVED                           03-IGWSMF\n                                            59677+*                                                                @10A\n 00000188                                   59678+SMF42FDW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            59679+*                                    REQUESTS IN THIS\n                                            59680+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            59681+*                                    IN milli-seconds)           @21A\n                                            59682+*\n 00000190                                   59683+SMF42FDX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            59684+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            59685+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            59686+*                                                                @10A\n 00000194                                   59687+SMF42FDY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            59688+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            59689+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            59690+*                                    TRANSFERRED/4K)             @10A\n 00000198                                   59691+SMF42FDZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000001A0                                   59692+SMF42FD7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                         000000A8           59693+SMF42FA4_LEN  EQU *-SMF42FA4                                            03-IGWSMF\n                                            59694+*\n 000001C0                                   59695+SMF42FA5 DS   0CL672                 SEQUENTIAL ACCESS SUMMARY SECTION  03-IGWSMF\n                                            59696+*                                                                @10A\n 000001C0                                   59697+SMF42FA6 DS   0CL168                 NORMAL SEQUENTIAL ACCESS SECTION   03-IGWSMF\n                                            59698+*                                                                @10A\n 000001C0                                   59699+SMF42FEA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            59700+*                                    NUMBER                      @10A\n 000001C4                                   59701+SMF42FEB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            59702+*                                                                @10A\n 000001C8                                   59703+SMF42FEC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59704+*                                    NRI - NO READ INTEGRITY\n                                            59705+*                                                                @10A\n 000001CC                                   59706+SMF42FED DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59707+*                                    CONSISTENT READS   @10A\n                                            59708+*\n 000001D0                                   59709+SMF42FEE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            59710+*                                                                @10A\n 000001D4                                   59711+SMF42FEF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            59712+*                                                                @10A\n 000001D8                                   59713+SMF42FEG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            59714+*                                                                @10A\n 000001DC                                   59715+SMF42FEH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            59716+*                                                                @10A\n                                            59717+*\n 000001E0                                   59718+SMF42FEI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            59719+*                                                                @10A\n 000001E4                                   59720+SMF42FEJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            59721+*                                                                @10A\n 000001E8                                   59722+SMF42FEK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            59723+*                                                                @10A\n 000001EC                                   59724+SMF42FEL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            59725+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            59726+*\n 000001F0                                   59727+SMF42FEM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            59728+*                                                                @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  167\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000001F4                                   59729+SMF42FEN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 000001F8                                   59730+SMF42FEO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 000001FC                                   59731+SMF42FEP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000200                                   59732+SMF42FEQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            59733+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            59734+*                                                                @10A\n 00000208                                   59735+SMF42FER DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            59736+*                                    TO DASD.                    @10A\n 0000020C                                   59737+SMF42FES DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            59738+*                                    TO DASD.                    @10A\n 00000210                                   59739+SMF42FET DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59740+*                                    DASD FOR THE READ   REQUESTS @10A\n                                            59741+*                                                                @10A\n 00000218                                   59742+SMF42FEU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59743+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            59744+*                                                                @10A\n 00000220                                   59745+SMF42FEV DS   CL16                   RESERVED                           03-IGWSMF\n                                            59746+*                                                                @10A\n 00000230                                   59747+SMF42FEW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            59748+*                                    REQUESTS IN THIS\n                                            59749+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            59750+*                                    IN milli-seconds)           @21A\n                                            59751+*\n 00000238                                   59752+SMF42FEX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            59753+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            59754+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            59755+*                                                                @10A\n 0000023C                                   59756+SMF42FEY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            59757+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            59758+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            59759+*                                    TRANSFERRED/4K)             @10A\n 00000240                                   59760+SMF42FEZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000248                                   59761+SMF42FE7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                         000000A8           59762+SMF42FA6_LEN  EQU *-SMF42FA6                                            03-IGWSMF\n                                            59763+*\n 00000268                                   59764+SMF42FA7 DS   0CL168                 RE-DO DURING SEQUENTIAL ACCESS     03-IGWSMF\n                                            59765+*                                    SECTION                     @10A\n 00000268                                   59766+SMF42FFA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            59767+*                                    NUMBER                      @10A\n 0000026C                                   59768+SMF42FFB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            59769+*                                                                @10A\n 00000270                                   59770+SMF42FFC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59771+*                                    NRI - NO READ INTEGRITY\n                                            59772+*                                                                @10A\n 00000274                                   59773+SMF42FFD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59774+*                                    CONSISTENT READS   @10A\n                                            59775+*\n 00000278                                   59776+SMF42FFE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            59777+*                                                                @10A\n 0000027C                                   59778+SMF42FFF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            59779+*                                                                @10A\n 00000280                                   59780+SMF42FFG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            59781+*                                                                @10A\n 00000284                                   59782+SMF42FFH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            59783+*                                                                @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  168\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           59784+*\n 00000288                                   59785+SMF42FFI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            59786+*                                                                @10A\n 0000028C                                   59787+SMF42FFJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            59788+*                                                                @10A\n 00000290                                   59789+SMF42FFK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            59790+*                                                                @10A\n 00000294                                   59791+SMF42FFL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            59792+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            59793+*\n 00000298                                   59794+SMF42FFM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            59795+*                                                                @10A\n 0000029C                                   59796+SMF42FFN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 000002A0                                   59797+SMF42FFO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 000002A4                                   59798+SMF42FFP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 000002A8                                   59799+SMF42FFQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            59800+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            59801+*                                                                @10A\n 000002B0                                   59802+SMF42FFR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            59803+*                                    TO DASD.                    @10A\n 000002B4                                   59804+SMF42FFS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            59805+*                                    TO DASD.                    @10A\n 000002B8                                   59806+SMF42FFT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59807+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            59808+*                                                                @10A\n 000002C0                                   59809+SMF42FFU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59810+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            59811+*                                                                @10A\n 000002C8                                   59812+SMF42FFV DS   CL16                   RESERVED                           03-IGWSMF\n                                            59813+*                                                                @10A\n 000002D8                                   59814+SMF42FFW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            59815+*                                    REQUESTS IN THIS\n                                            59816+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            59817+*                                    IN milli-seconds)           @21A\n                                            59818+*\n 000002E0                                   59819+SMF42FFX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            59820+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            59821+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            59822+*                                                                @10A\n 000002E4                                   59823+SMF42FFY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            59824+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            59825+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            59826+*                                    TRANSFERRED/4K)             @10A\n 000002E8                                   59827+SMF42FFZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000002F0                                   59828+SMF42FF7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                         000000A8           59829+SMF42FA7_LEN  EQU *-SMF42FA7                                            03-IGWSMF\n                                            59830+*\n 00000310                                   59831+SMF42FA8 DS   0CL168                 READ-A-HEAD SEQUENTIAL ACCESS      03-IGWSMF\n                                            59832+*                                    SECTION                     @10A\n 00000310                                   59833+SMF42FGA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            59834+*                                    NUMBER                      @10A\n 00000314                                   59835+SMF42FGB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            59836+*                                                                @10A\n 00000318                                   59837+SMF42FGC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59838+*                                    NRI - NO READ INTEGRITY\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  169\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           59839+*                                                                @10A\n 0000031C                                   59840+SMF42FGD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59841+*                                    CONSISTENT READS   @10A\n                                            59842+*\n 00000320                                   59843+SMF42FGE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            59844+*                                                                @10A\n 00000324                                   59845+SMF42FGF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            59846+*                                                                @10A\n 00000328                                   59847+SMF42FGG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            59848+*                                                                @10A\n 0000032C                                   59849+SMF42FGH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            59850+*                                                                @10A\n                                            59851+*\n 00000330                                   59852+SMF42FGI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            59853+*                                                                @10A\n 00000334                                   59854+SMF42FGJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            59855+*                                                                @10A\n 00000338                                   59856+SMF42FGK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            59857+*                                                                @10A\n 0000033C                                   59858+SMF42FGL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            59859+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            59860+*\n 00000340                                   59861+SMF42FGM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            59862+*                                                                @10A\n 00000344                                   59863+SMF42FGN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000348                                   59864+SMF42FGO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 0000034C                                   59865+SMF42FGP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000350                                   59866+SMF42FGQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            59867+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            59868+*                                                                @10A\n 00000358                                   59869+SMF42FGR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            59870+*                                    TO DASD.                    @10A\n 0000035C                                   59871+SMF42FGS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            59872+*                                    TO DASD.                    @10A\n 00000360                                   59873+SMF42FGT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59874+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            59875+*                                                                @10A\n 00000368                                   59876+SMF42FGU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59877+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            59878+*                                                                @10A\n 00000370                                   59879+SMF42FGV DS   CL16                   RESERVED                           03-IGWSMF\n                                            59880+*                                                                @10A\n 00000380                                   59881+SMF42FGW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            59882+*                                    REQUESTS IN THIS\n                                            59883+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            59884+*                                    IN milli-seconds)           @21A\n                                            59885+*\n 00000388                                   59886+SMF42FGX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            59887+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            59888+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            59889+*                                                                @10A\n 0000038C                                   59890+SMF42FGY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            59891+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            59892+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            59893+*                                    TRANSFERRED/4K)             @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  170\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000390                                   59894+SMF42FGZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000398                                   59895+SMF42FG7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                         000000A8           59896+SMF42FA8_LEN  EQU *-SMF42FA8                                            03-IGWSMF\n                                            59897+*\n 000003B8                                   59898+SMF42FA9 DS   0CL168                 PRE-FORMAT SEQUENTIAL ACCESS       03-IGWSMF\n                                            59899+*                                    SECTION                     @10A\n 000003B8                                   59900+SMF42FHA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            59901+*                                    NUMBER                      @10A\n 000003BC                                   59902+SMF42FHB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            59903+*                                                                @10A\n 000003C0                                   59904+SMF42FHC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59905+*                                    NRI - NO READ INTEGRITY\n                                            59906+*                                                                @10A\n 000003C4                                   59907+SMF42FHD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            59908+*                                    CONSISTENT READS   @10A\n                                            59909+*\n 000003C8                                   59910+SMF42FHE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            59911+*                                                                @10A\n 000003CC                                   59912+SMF42FHF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            59913+*                                                                @10A\n 000003D0                                   59914+SMF42FHG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            59915+*                                                                @10A\n 000003D4                                   59916+SMF42FHH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            59917+*                                                                @10A\n                                            59918+*\n 000003D8                                   59919+SMF42FHI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            59920+*                                                                @10A\n 000003DC                                   59921+SMF42FHJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            59922+*                                                                @10A\n 000003E0                                   59923+SMF42FHK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            59924+*                                                                @10A\n 000003E4                                   59925+SMF42FHL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            59926+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            59927+*\n 000003E8                                   59928+SMF42FHM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            59929+*                                                                @10A\n 000003EC                                   59930+SMF42FHN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 000003F0                                   59931+SMF42FHO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 000003F4                                   59932+SMF42FHP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 000003F8                                   59933+SMF42FHQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            59934+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            59935+*                                                                @10A\n 00000400                                   59936+SMF42FHR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            59937+*                                    TO DASD.                    @10A\n 00000404                                   59938+SMF42FHS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            59939+*                                    TO DASD.                    @10A\n 00000408                                   59940+SMF42FHT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59941+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            59942+*                                                                @10A\n 00000410                                   59943+SMF42FHU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            59944+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            59945+*                                                                @10A\n 00000418                                   59946+SMF42FHV DS   CL16                   RESERVED                           03-IGWSMF\n                                            59947+*                                                                @10A\n 00000428                                   59948+SMF42FHW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  171\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           59949+*                                    REQUESTS IN THIS\n                                            59950+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            59951+*                                    IN milli-seconds)           @21A\n                                            59952+*\n 00000430                                   59953+SMF42FHX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            59954+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            59955+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            59956+*                                                                @10A\n 00000434                                   59957+SMF42FHY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            59958+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            59959+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            59960+*                                    TRANSFERRED/4K)             @10A\n 00000438                                   59961+SMF42FHZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000440                                   59962+SMF42FH7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                         000000A8           59963+SMF42FA9_LEN  EQU *-SMF42FA9                                            03-IGWSMF\n                         000002A0           59964+SMF42FA5_LEN  EQU *-SMF42FA5                                            03-IGWSMF\n                                            59965+*\n 00000460                                   59966+SMF42FX1 DS   0CL128                 LOCKING STATISTICS SUMMARY  @10A   03-IGWSMF\n 00000460                                   59967+SMF42FOA DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            59968+*                                    REQUESTS                    @10A\n                                            59969+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000464                                   59970+SMF42FOB DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            59971+*                                    REQUESTS THAT CAUSE TRUE    @10A\n                                            59972+*                                    CONTENTION                  @10A\n 00000468                                   59973+SMF42FOC DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            59974+*                                    REQUESTS THAT CAUSE FALSE   @10A\n                                            59975+*                                    CONTENTION                  @10A\n 0000046C                                   59976+SMF42FOD DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            59977+*                                    RELEASE REQUESTS            @10A\n 00000470                                   59978+SMF42FOE DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n                                            59979+*                                    LOCK REQUESTS               @10A\n 00000474                                   59980+SMF42FOF DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n                                            59981+*                                    RELEASE LOCK REQUESTS       @10A\n 00000478                                   59982+SMF42FOG DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000480                                   59983+SMF42FOH DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59984+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            59985+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000484                                   59986+SMF42FOI DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59987+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            59988+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 00000488                                   59989+SMF42FOJ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59990+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            59991+*                                    THAT CAUSE FALSE CONTENTION @10A\n 0000048C                                   59992+SMF42FOK DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59993+*                                    CLASS_1 (DIWA) RELEASE      @10A\n                                            59994+*                                    LOCK REQUESTS               @10A\n 00000490                                   59995+SMF42FOL DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59996+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            59997+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000494                                   59998+SMF42FOM DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            59999+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            60000+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 00000498                                   60001+SMF42FON DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            60002+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            60003+*                                    THAT CAUSE FALSE CONTENTION @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  172\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000049C                                   60004+SMF42FOO DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            60005+*                                    CLASS_2 (UPGRADE) RELEASE   @10A\n                                            60006+*                                    LOCK REQUESTS               @10A\n 000004A0                                   60007+SMF42FOP DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            60008+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            60009+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000004A4                                   60010+SMF42FOQ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            60011+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            60012+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000004A8                                   60013+SMF42FOR DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            60014+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            60015+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000004AC                                   60016+SMF42FOS DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            60017+*                                    CLASS_3 (PREFORMAT) RELEASE @10A\n                                            60018+*                                    LOCK REQUESTS               @10A\n 000004B0                                   60019+SMF42FOT DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n                                            60020+*                                    LOCK REQUESTS               @10A\n                                            60021+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000004B4                                   60022+SMF42FOU DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            60023+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000004B8                                   60024+SMF42FOV DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            60025+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000004BC                                   60026+SMF42FOW DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n                                            60027+*                                    RELEASE LOCK REQUESTS       @10A\n 000004C0                                   60028+SMF42FOX DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            60029+*                                                                @10A\n                                            60030+*                                                                @10A\n                         00000080           60031+SMF42FX1_LEN  EQU *-SMF42FX1                                     @10A   03-IGWSMF\n                                            60032+*                                                                @10A\n 000004E0                                   60033+SMF42FX2 DS   0CL32                  THREAD LEVEL STATISTICS     @10A   03-IGWSMF\n 000004E0                                   60034+SMF42FPR DS   2F                     TOTAL TIME ALL THREAD       @64C   03-IGWSMF\n                                            60035+*                                    REQUESTS                    @10A\n 000004E8                                   60036+SMF42FPS DS   1FL4                   TOTAL NUMBER OF ALL THREAD  @10A   03-IGWSMF\n                                            60037+*                                    REQUESTS                    @10A\n 000004EC                                   60038+SMF42FPT DS   1FL4                   RESERVED                    @10A   03-IGWSMF\n 000004F0                                   60039+SMF42FPU DS   1FL4                   AVERAGE RESPONSE TIME FOR   @10A   03-IGWSMF\n                                            60040+*                                    ALL OF THE THREAD REQUESTS  @10A\n                                            60041+*                                    IN THE INTERVAL             @10A\n                                            60042+*                                    (TOTAL TIME/NUMBER OF       @10A\n                                            60043+*                                     THREAD REQUESTS)           @10A\n 000004F4                                   60044+SMF42FPV DS   1FL4                   NORMALIZED RESPONSE TIME    @10A   03-IGWSMF\n                                            60045+*                                    FOR ALL OF THE THREAD       @10A\n                                            60046+*                                    REQUESTS IN THE INTERVAL    @10A\n                                            60047+*                                    (TOTAL TIME/NUMBER OF BYTES @10A\n                                            60048+*                                     TRANSFERRED/4K)            @10A\n 000004F8                                   60049+SMF42FPW DS   CL8                    RESERVED                    @10A   03-IGWSMF\n                                            60050+*                                                                @10A\n                         00000020           60051+SMF42FX2_LEN  EQU *-SMF42FX2                                     @10A   03-IGWSMF\n 00000500                                   60052+SMF42FAI DS   CL16                   Lock Structure name         @L3C   03-IGWSMF\n 00000510                                   60053+SMF42FAJ DS   CL8                    Lock Set                    @L3A   03-IGWSMF\n                         00000518           60054+SMF420FA_LEN  EQU *-SMF420FA                                     @10A   03-IGWSMF\n                                            60055+*                                                                @10A\n 00000000                00000000 00000548  60056+SMF420FB DSECT ,                                                        03-IGWSMF\n 00000000                                   60057+SMF42F1A DS   0CL1328                SC/SYS/CF CLASS SUMMARY            03-IGWSMF\n                                            60058+*                                    SECTION                     @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  173\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000000                                   60059+SMF42FBA DS   1FL4                   INTERVAL LENGTH. THIS IS THE       03-IGWSMF\n                                            60060+*                                    TOTAL TIME OF THE MEASUREMENT\n                                            60061+*                                    PERIOD. (IN SECONDS)        @10A\n 00000004                                   60062+SMF42F03 DS   CL12                   INDICATES IF DFSMS GREATER  @P5A   03-IGWSMF\n                                            60063+*                                    THAN 4K CF CACHING IS ACTIVE@P5A\n                                            60064+*                                    VALUES ARE GT4KACTIVE OR    @P5A\n                                            60065+*                                    GT4KNOTACT                  @P5A\n 00000010                                   60066+SMF42FBB DS   1FL2                   LENGTH OF THE STORAGE CLASS        03-IGWSMF\n                                            60067+*                                    NAME                        @10A\n 00000012                                   60068+SMF42FBC DS   CL30                   STORAGE CLASS NAME          @10A   03-IGWSMF\n                                            60069+*\n 00000030                                   60070+SMF42F04 DS   1FL2                   CACHESETNAMELENGTH                 03-IGWSMF\n 00000032                                   60071+SMF42FBD DS   CL30                   CACHESETNAME                @10A   03-IGWSMF\n                                            60072+*\n 00000050                                   60073+SMF42FBE DS   CL8                    MVS SYSTEM NAME             @10A   03-IGWSMF\n 00000058                                   60074+SMF42F05 DS   CL8                    RESERVED                    @10A   03-IGWSMF\n                                            60075+*\n 00000060                                   60076+SMF42FBF DS   CL2                    RESERVED                    @10A   03-IGWSMF\n 00000062                                   60077+SMF42FBG DS   CL30                   DFP CACHE STRUCTURE  NAME   @10A   03-IGWSMF\n 00000080                                   60078+SMF42FBH DS   1FL4                   NUMBER OF LOCK REQUESTS            03-IGWSMF\n                                            60079+*                                    PROCESSED (not used)        @21A\n 00000084                                   60080+SMF42FBI DS   1FL4                   NUMBER OF TRUE CONTENTION          03-IGWSMF\n                                            60081+*                                    LOCK REQUESTS (not used)    @21A\n 00000088                                   60082+SMF42FBJ DS   1FL4                   NUMBER OF FALSE CONTENTION         03-IGWSMF\n                                            60083+*                                    LOCK REQUESTS (not used)    @21A\n 0000008C                                   60084+SMF42FB2 DS   1FL2                   SMSDIRECTWEIGHT             @10A   03-IGWSMF\n 0000008E                                   60085+SMF42FB3 DS   1FL2                   SMSSEQUENTIALWEIGHT         @10A   03-IGWSMF\n 00000090                                   60086+SMF42FBL DS   CL16                   RESERVED                    @10A   03-IGWSMF\n                                            60087+*\n 000000A0                                   60088+SMF42F1B DS   0CL336                 DIRECT ACCESS SUMMARY SECTION      03-IGWSMF\n                                            60089+*                                                                @10A\n 000000A0                                   60090+SMF42F1C DS   0CL168                 NORMAL DIRECT ACCESS SUMMARY       03-IGWSMF\n                                            60091+*                                    SECTION                     @10A\n 000000A0                                   60092+SMF42FIA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            60093+*                                    NUMBER                      @10A\n 000000A4                                   60094+SMF42FIB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            60095+*                                                                @10A\n 000000A8                                   60096+SMF42FIC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            60097+*                                    NRI - NO READ INTEGRITY\n                                            60098+*                                                                @10A\n 000000AC                                   60099+SMF42FID DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            60100+*                                    CONSISTENT READS   @10A\n                                            60101+*\n 000000B0                                   60102+SMF42FIE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            60103+*                                                                @10A\n 000000B4                                   60104+SMF42FIF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            60105+*                                                                @10A\n 000000B8                                   60106+SMF42FIG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            60107+*                                                                @10A\n 000000BC                                   60108+SMF42FIH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            60109+*                                                                @10A\n                                            60110+*\n 000000C0                                   60111+SMF42FII DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            60112+*                                                                @10A\n 000000C4                                   60113+SMF42FIJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  174\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           60114+*                                                                @10A\n 000000C8                                   60115+SMF42FIK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            60116+*                                                                @10A\n 000000CC                                   60117+SMF42FIL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            60118+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            60119+*\n 000000D0                                   60120+SMF42FIM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            60121+*                                                                @10A\n 000000D4                                   60122+SMF42FIN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 000000D8                                   60123+SMF42FIO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 000000DC                                   60124+SMF42FIP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 000000E0                                   60125+SMF42FIQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            60126+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            60127+*                                                                @10A\n 000000E8                                   60128+SMF42FIR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            60129+*                                    TO DASD.                    @10A\n 000000EC                                   60130+SMF42FIS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            60131+*                                    TO DASD.                    @10A\n 000000F0                                   60132+SMF42FIT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            60133+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            60134+*                                                                @10A\n 000000F8                                   60135+SMF42FIU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            60136+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            60137+*                                                                @10A\n 00000100                                   60138+SMF42FIV DS   CL16                   RESERVED                           03-IGWSMF\n                                            60139+*                                                                @10A\n 00000110                                   60140+SMF42FIW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            60141+*                                    REQUESTS IN THIS\n                                            60142+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            60143+*                                    IN milli-seconds)           @21A\n                                            60144+*\n 00000118                                   60145+SMF42FIX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            60146+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            60147+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            60148+*                                                                @10A\n 0000011C                                   60149+SMF42FIY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            60150+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            60151+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            60152+*                                    TRANSFERRED/4K)             @10A\n 00000120                                   60153+SMF42FIZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000128                                   60154+SMF42FI7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                         000000A8           60155+SMF42F1C_LEN  EQU *-SMF42F1C                                     @10A   03-IGWSMF\n                                            60156+*\n 00000148                                   60157+SMF42F1D DS   0CL168                 RE-DO DURING DIRECT ACCESS         03-IGWSMF\n                                            60158+*                                    SECTION                     @10A\n 00000148                                   60159+SMF42FJA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            60160+*                                    NUMBER                      @10A\n 0000014C                                   60161+SMF42FJB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            60162+*                                                                @10A\n 00000150                                   60163+SMF42FJC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            60164+*                                    NRI - NO READ INTEGRITY\n                                            60165+*                                                                @10A\n 00000154                                   60166+SMF42FJD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            60167+*                                    CONSISTENT READS   @10A\n                                            60168+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  175\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000158                                   60169+SMF42FJE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            60170+*                                                                @10A\n 0000015C                                   60171+SMF42FJF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            60172+*                                                                @10A\n 00000160                                   60173+SMF42FJG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            60174+*                                                                @10A\n 00000164                                   60175+SMF42FJH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            60176+*                                                                @10A\n                                            60177+*\n 00000168                                   60178+SMF42FJI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            60179+*                                                                @10A\n 0000016C                                   60180+SMF42FJJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            60181+*                                                                @10A\n 00000170                                   60182+SMF42FJK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            60183+*                                                                @10A\n 00000174                                   60184+SMF42FJL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            60185+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            60186+*\n 00000178                                   60187+SMF42FJM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            60188+*                                                                @10A\n 0000017C                                   60189+SMF42FJN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000180                                   60190+SMF42FJO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 00000184                                   60191+SMF42FJP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000188                                   60192+SMF42FJQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            60193+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            60194+*                                                                @10A\n 00000190                                   60195+SMF42FJR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            60196+*                                    TO DASD.                    @10A\n 00000194                                   60197+SMF42FJS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            60198+*                                    TO DASD.                    @10A\n 00000198                                   60199+SMF42FJT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            60200+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            60201+*                                                                @10A\n 000001A0                                   60202+SMF42FJU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            60203+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            60204+*                                                                @10A\n 000001A8                                   60205+SMF42FJV DS   CL16                   RESERVED                           03-IGWSMF\n                                            60206+*                                                                @10A\n 000001B8                                   60207+SMF42FJW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            60208+*                                    REQUESTS IN THIS\n                                            60209+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            60210+*                                    IN milli-seconds)           @21A\n                                            60211+*\n 000001C0                                   60212+SMF42FJX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            60213+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            60214+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            60215+*                                                                @10A\n 000001C4                                   60216+SMF42FJY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            60217+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            60218+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            60219+*                                    TRANSFERRED/4K)             @10A\n 000001C8                                   60220+SMF42FJZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000001D0                                   60221+SMF42FJ7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                         000000A8           60222+SMF42F1D_LEN  EQU *-SMF42F1D                                     @10A   03-IGWSMF\n                         00000150           60223+SMF42F1B_LEN  EQU *-SMF42F1B                                     @10A   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  176\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           60224+*\n 000001F0                                   60225+SMF42F1E DS   0CL672                 SEQUENTIAL ACCESS SUMMARY SECTION  03-IGWSMF\n                                            60226+*                                                                @10A\n 000001F0                                   60227+SMF42F1F DS   0CL168                 NORMAL SEQUENTIAL ACCESS SECTION   03-IGWSMF\n                                            60228+*                                                                @10A\n 000001F0                                   60229+SMF42FKA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            60230+*                                    NUMBER                      @10A\n 000001F4                                   60231+SMF42FKB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            60232+*                                                                @10A\n 000001F8                                   60233+SMF42FKC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            60234+*                                    NRI - NO READ INTEGRITY\n                                            60235+*                                                                @10A\n 000001FC                                   60236+SMF42FKD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            60237+*                                    CONSISTENT READS   @10A\n                                            60238+*\n 00000200                                   60239+SMF42FKE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            60240+*                                                                @10A\n 00000204                                   60241+SMF42FKF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            60242+*                                                                @10A\n 00000208                                   60243+SMF42FKG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            60244+*                                                                @10A\n 0000020C                                   60245+SMF42FKH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            60246+*                                                                @10A\n                                            60247+*\n 00000210                                   60248+SMF42FKI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            60249+*                                                                @10A\n 00000214                                   60250+SMF42FKJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            60251+*                                                                @10A\n 00000218                                   60252+SMF42FKK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            60253+*                                                                @10A\n 0000021C                                   60254+SMF42FKL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            60255+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            60256+*\n 00000220                                   60257+SMF42FKM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            60258+*                                                                @10A\n 00000224                                   60259+SMF42FKN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000228                                   60260+SMF42FKO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 0000022C                                   60261+SMF42FKP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000230                                   60262+SMF42FKQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            60263+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            60264+*                                                                @10A\n 00000238                                   60265+SMF42FKR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            60266+*                                    TO DASD.                    @10A\n 0000023C                                   60267+SMF42FKS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            60268+*                                    TO DASD.                    @10A\n 00000240                                   60269+SMF42FKT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            60270+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            60271+*                                                                @10A\n 00000248                                   60272+SMF42FKU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            60273+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            60274+*                                                                @10A\n 00000250                                   60275+SMF42FKV DS   CL16                   RESERVED                           03-IGWSMF\n                                            60276+*                                                                @10A\n 00000260                                   60277+SMF42FKW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            60278+*                                    REQUESTS IN THIS\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  177\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           60279+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            60280+*                                    IN milli-seconds)           @21A\n                                            60281+*\n 00000268                                   60282+SMF42FKX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            60283+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            60284+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            60285+*                                                                @10A\n 0000026C                                   60286+SMF42FKY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            60287+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            60288+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            60289+*                                    TRANSFERRED/4K)             @10A\n 00000270                                   60290+SMF42FKZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000278                                   60291+SMF42FK7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                         000000A8           60292+SMF42F1F_LEN  EQU *-SMF42F1F                                     @10A   03-IGWSMF\n                                            60293+*\n 00000298                                   60294+SMF42F1G DS   0CL168                 RE-DO DURING SEQUENTIAL ACCESS     03-IGWSMF\n                                            60295+*                                    SECTION                     @10A\n 00000298                                   60296+SMF42FLA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            60297+*                                    NUMBER                      @10A\n 0000029C                                   60298+SMF42FLB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            60299+*                                                                @10A\n 000002A0                                   60300+SMF42FLC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            60301+*                                    NRI - NO READ INTEGRITY\n                                            60302+*                                                                @10A\n 000002A4                                   60303+SMF42FLD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            60304+*                                    CONSISTENT READS   @10A\n                                            60305+*\n 000002A8                                   60306+SMF42FLE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            60307+*                                                                @10A\n 000002AC                                   60308+SMF42FLF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            60309+*                                                                @10A\n 000002B0                                   60310+SMF42FL6 DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            60311+*                                                                @10A\n 000002B4                                   60312+SMF42FLH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            60313+*                                                                @10A\n                                            60314+*\n 000002B8                                   60315+SMF42FLI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            60316+*                                                                @10A\n 000002BC                                   60317+SMF42FLJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            60318+*                                                                @10A\n 000002C0                                   60319+SMF42FLK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            60320+*                                                                @10A\n 000002C4                                   60321+SMF42FLL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            60322+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            60323+*\n 000002C8                                   60324+SMF42FLM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            60325+*                                                                @10A\n 000002CC                                   60326+SMF42FLN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 000002D0                                   60327+SMF42FLO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 000002D4                                   60328+SMF42FLP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 000002D8                                   60329+SMF42FLQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            60330+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            60331+*                                                                @10A\n 000002E0                                   60332+SMF42FLR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            60333+*                                    TO DASD.                    @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  178\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000002E4                                   60334+SMF42FLS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            60335+*                                    TO DASD.                    @10A\n 000002E8                                   60336+SMF42FLT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            60337+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            60338+*                                                                @10A\n 000002F0                                   60339+SMF42FLU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            60340+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            60341+*                                                                @10A\n 000002F8                                   60342+SMF42FLV DS   CL16                   RESERVED                           03-IGWSMF\n                                            60343+*                                                                @10A\n 00000308                                   60344+SMF42FLW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            60345+*                                    REQUESTS IN THIS\n                                            60346+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            60347+*                                    IN milli-seconds)           @21A\n                                            60348+*\n 00000310                                   60349+SMF42FLX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            60350+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            60351+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            60352+*                                                                @10A\n 00000314                                   60353+SMF42FLY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            60354+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            60355+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            60356+*                                    TRANSFERRED/4K)             @10A\n 00000318                                   60357+SMF42FLZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000320                                   60358+SMF42FL7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                         000000A8           60359+SMF42F1G_LEN  EQU *-SMF42F1G                                     @10A   03-IGWSMF\n                                            60360+*\n 00000340                                   60361+SMF42F1H DS   0CL168                 READ-A-HEAD SEQUENTIAL ACCESS      03-IGWSMF\n                                            60362+*                                    SECTION                     @10A\n 00000340                                   60363+SMF42FMA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            60364+*                                    NUMBER                      @10A\n 00000344                                   60365+SMF42FMB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            60366+*                                                                @10A\n 00000348                                   60367+SMF42FMC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            60368+*                                    NRI - NO READ INTEGRITY\n                                            60369+*                                                                @10A\n 0000034C                                   60370+SMF42FMD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            60371+*                                    CONSISTENT READS   @10A\n                                            60372+*\n 00000350                                   60373+SMF42FME DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            60374+*                                                                @10A\n 00000354                                   60375+SMF42FMF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            60376+*                                                                @10A\n 00000358                                   60377+SMF42FMG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            60378+*                                                                @10A\n 0000035C                                   60379+SMF42FMH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            60380+*                                                                @10A\n                                            60381+*\n 00000360                                   60382+SMF42FMI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            60383+*                                                                @10A\n 00000364                                   60384+SMF42FMJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            60385+*                                                                @10A\n 00000368                                   60386+SMF42FMK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            60387+*                                                                @10A\n 0000036C                                   60388+SMF42FML DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  179\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           60389+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            60390+*\n 00000370                                   60391+SMF42FMM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            60392+*                                                                @10A\n 00000374                                   60393+SMF42FMN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000378                                   60394+SMF42FMO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 0000037C                                   60395+SMF42FMP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000380                                   60396+SMF42FMQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            60397+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            60398+*                                                                @10A\n 00000388                                   60399+SMF42FMR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            60400+*                                    TO DASD.                    @10A\n 0000038C                                   60401+SMF42FMS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            60402+*                                    TO DASD.                    @10A\n 00000390                                   60403+SMF42FMT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            60404+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            60405+*                                                                @10A\n 00000398                                   60406+SMF42FMU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            60407+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            60408+*                                                                @10A\n 000003A0                                   60409+SMF42FMV DS   CL16                   RESERVED                           03-IGWSMF\n                                            60410+*                                                                @10A\n 000003B0                                   60411+SMF42FMW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            60412+*                                    REQUESTS IN THIS\n                                            60413+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            60414+*                                    IN milli-seconds)           @21A\n                                            60415+*\n 000003B8                                   60416+SMF42FMX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            60417+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            60418+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            60419+*                                                                @10A\n 000003BC                                   60420+SMF42FMY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            60421+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            60422+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            60423+*                                    TRANSFERRED/4K)             @10A\n 000003C0                                   60424+SMF42FMZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000003C8                                   60425+SMF42FM7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                         000000A8           60426+SMF42F1H_LEN  EQU *-SMF42F1H                                     @10A   03-IGWSMF\n                                            60427+*\n 000003E8                                   60428+SMF42F1I DS   0CL168                 PRE-FORMAT SEQUENTIAL ACCESS       03-IGWSMF\n                                            60429+*                                    SECTION                     @10A\n 000003E8                                   60430+SMF42FNA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            60431+*                                    NUMBER                      @10A\n 000003EC                                   60432+SMF42FNB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            60433+*                                                                @10A\n 000003F0                                   60434+SMF42FNC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            60435+*                                    NRI - NO READ INTEGRITY\n                                            60436+*                                                                @10A\n 000003F4                                   60437+SMF42FND DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            60438+*                                    CONSISTENT READS   @10A\n                                            60439+*\n 000003F8                                   60440+SMF42FNE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            60441+*                                                                @10A\n 000003FC                                   60442+SMF42FNF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            60443+*                                                                @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  180\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000400                                   60444+SMF42FNG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            60445+*                                                                @10A\n 00000404                                   60446+SMF42FNH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            60447+*                                                                @10A\n                                            60448+*\n 00000408                                   60449+SMF42FNI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            60450+*                                                                @10A\n 0000040C                                   60451+SMF42FNJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            60452+*                                                                @10A\n 00000410                                   60453+SMF42FNK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            60454+*                                                                @10A\n 00000414                                   60455+SMF42FNL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            60456+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            60457+*\n 00000418                                   60458+SMF42FNM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            60459+*                                                                @10A\n 0000041C                                   60460+SMF42FNN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000420                                   60461+SMF42FNO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 00000424                                   60462+SMF42FNP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000428                                   60463+SMF42FNQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            60464+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            60465+*                                                                @10A\n 00000430                                   60466+SMF42FNR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            60467+*                                    TO DASD.                    @10A\n 00000434                                   60468+SMF42FNS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            60469+*                                    TO DASD.                    @10A\n 00000438                                   60470+SMF42FNT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            60471+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            60472+*                                                                @10A\n 00000440                                   60473+SMF42FNU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            60474+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            60475+*                                                                @10A\n 00000448                                   60476+SMF42FNV DS   CL16                   RESERVED                           03-IGWSMF\n                                            60477+*                                                                @10A\n 00000458                                   60478+SMF42FNW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            60479+*                                    REQUESTS IN THIS\n                                            60480+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            60481+*                                    IN milli-seconds)           @21A\n                                            60482+*\n 00000460                                   60483+SMF42FNX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            60484+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            60485+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            60486+*                                                                @10A\n 00000464                                   60487+SMF42FNY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            60488+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            60489+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            60490+*                                    TRANSFERRED/4K)             @10A\n 00000468                                   60491+SMF42FNZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000470                                   60492+SMF42FN7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                         000000A8           60493+SMF42F1I_LEN  EQU *-SMF42F1I                                     @10A   03-IGWSMF\n                         000002A0           60494+SMF42F1E_LEN  EQU *-SMF42F1E                                     @10A   03-IGWSMF\n                                            60495+*\n 00000490                                   60496+SMF42FX3 DS   0CL128                 LOCKING STATISTICS SUMMARY  @10A   03-IGWSMF\n 00000490                                   60497+SMF42FRA DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            60498+*                                    REQUESTS                    @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  181\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           60499+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000494                                   60500+SMF42FRB DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            60501+*                                    REQUESTS THAT CAUSE TRUE    @10A\n                                            60502+*                                    CONTENTION                  @10A\n 00000498                                   60503+SMF42FRC DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            60504+*                                    REQUESTS THAT CAUSE FALSE   @10A\n                                            60505+*                                    CONTENTION                  @10A\n 0000049C                                   60506+SMF42FRD DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            60507+*                                    RELEASE REQUESTS            @10A\n 000004A0                                   60508+SMF42FRE DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n                                            60509+*                                    LOCK REQUESTS               @10A\n 000004A4                                   60510+SMF42FRF DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n                                            60511+*                                    RELEASE LOCK REQUESTS       @10A\n 000004A8                                   60512+SMF42FRG DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000004B0                                   60513+SMF42FRH DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            60514+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            60515+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000004B4                                   60516+SMF42FRI DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            60517+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            60518+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000004B8                                   60519+SMF42FRJ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            60520+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            60521+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000004BC                                   60522+SMF42FRK DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            60523+*                                    CLASS_1 (DIWA) RELEASE      @10A\n                                            60524+*                                    LOCK REQUESTS               @10A\n 000004C0                                   60525+SMF42FRL DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            60526+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            60527+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000004C4                                   60528+SMF42FRM DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            60529+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            60530+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000004C8                                   60531+SMF42FRN DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            60532+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            60533+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000004CC                                   60534+SMF42FRO DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            60535+*                                    CLASS_2 (UPGRADE) RELEASE   @10A\n                                            60536+*                                    LOCK REQUESTS               @10A\n 000004D0                                   60537+SMF42FRP DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            60538+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            60539+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000004D4                                   60540+SMF42FRQ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            60541+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            60542+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000004D8                                   60543+SMF42FRR DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            60544+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            60545+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000004DC                                   60546+SMF42FRS DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            60547+*                                    CLASS_3 (PREFORMAT) RELEASE @10A\n                                            60548+*                                    LOCK REQUESTS               @10A\n 000004E0                                   60549+SMF42FRT DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n                                            60550+*                                    LOCK REQUESTS               @10A\n                                            60551+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000004E4                                   60552+SMF42FRU DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            60553+*                                    THAT CAUSE TRUE CONTENTION  @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  182\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000004E8                                   60554+SMF42FRV DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            60555+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000004EC                                   60556+SMF42FRW DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n                                            60557+*                                    RELEASE LOCK REQUESTS       @10A\n 000004F0                                   60558+SMF42FRX DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            60559+*                                                                @10A\n                                            60560+*                                                                @10A\n                         00000080           60561+SMF42FX3_LEN  EQU *-SMF42FX3                                     @10A   03-IGWSMF\n                                            60562+*                                                                @10A\n 00000510                                   60563+SMF42FX4 DS   0CL32                  THREAD LEVEL STATISTICS     @10A   03-IGWSMF\n 00000510                                   60564+SMF42FQR DS   2F                     TOTAL TIME ALL THREAD       @64C   03-IGWSMF\n                                            60565+*                                    REQUESTS                    @10A\n 00000518                                   60566+SMF42FQS DS   1FL4                   TOTAL NUMBER OF ALL THREAD  @10A   03-IGWSMF\n                                            60567+*                                    REQUESTS                    @10A\n 0000051C                                   60568+SMF42FQT DS   1FL4                   RESERVED                    @10A   03-IGWSMF\n 00000520                                   60569+SMF42FQU DS   1FL4                   AVERAGE RESPONSE TIME FOR   @10A   03-IGWSMF\n                                            60570+*                                    ALL OF THE THREAD REQUESTS  @10A\n                                            60571+*                                    IN THE INTERVAL             @10A\n                                            60572+*                                    (TOTAL TIME/NUMBER OF       @10A\n                                            60573+*                                     THREAD REQUESTS)           @10A\n 00000524                                   60574+SMF42FQV DS   1FL4                   NORMALIZED RESPONSE TIME    @10A   03-IGWSMF\n                                            60575+*                                    FOR ALL OF THE THREAD       @10A\n                                            60576+*                                    REQUESTS IN THE INTERVAL    @10A\n                                            60577+*                                    (TOTAL TIME/NUMBER OF BYTES @10A\n                                            60578+*                                     TRANSFERRED/4K)            @10A\n 00000528                                   60579+SMF42FQW DS   CL8                    RESERVED                    @10A   03-IGWSMF\n                                            60580+*                                                                @10A\n                         00000020           60581+SMF42FX4_LEN  EQU *-SMF42FX4                                     @10A   03-IGWSMF\n 00000530                                   60582+SMF42FBM DS   CL16                   Lock Structure name         @P7A   03-IGWSMF\n 00000540                                   60583+SMF42FBN DS   CL8                    Lock Set                    @P7A   03-IGWSMF\n                         00000548           60584+SMF420FB_LEN  EQU *-SMF420FB                                     @10A   03-IGWSMF\n                                            60585+*\n                                            60586+* The following sections are for above bar buffers                @64A\n                                            60587+*\n 00000000                00000000 00000518  60588+SMF2A0FA DSECT ,                ABOVE BAR BUFFERS                 @64A  03-IGWSMF\n                                            60589+*\n 00000000                                   60590+SMF2AFA1 DS   0CL1280           SYSPLEX WIDE SUMMARY              @64A  03-IGWSMF\n                                            60591+*\n 00000000                                   60592+SMF2AFAA DS   1FL4              INTERVAL LENGTH. THIS IS THE            03-IGWSMF\n                                            60593+*                               TOTAL TIME OF THE MEASUREMENT\n                                            60594+*                               PERIOD. (IN SECONDS)              @64A\n                                            60595+*\n 00000004                                   60596+SMF2AF00 DS   CL12              INDICATES IF DFSMS GREATER        @64A  03-IGWSMF\n                                            60597+*                               THAN 4K CF CACHING IS ACTIVE      @64A\n                                            60598+*                               VALUES ARE GT4KACTIVE OR          @64A\n                                            60599+*                               GT4KNOTACT                        @64A\n                                            60600+*\n 00000010                                   60601+SMF2AFAB DS   1FL2              LENGTH OF THE STORAGE CLASS NAME  @64A  03-IGWSMF\n                                            60602+*\n 00000012                                   60603+SMF2AFAC DS   CL30              STORAGE CLASS NAME                @64A  03-IGWSMF\n                                            60604+*\n 00000030                                   60605+SMF2AF01 DS   1FL2              CACHE SET NAME LENGTH             @64A  03-IGWSMF\n                                            60606+*\n 00000032                                   60607+SMF2AFAD DS   CL30              CACHE SET NAME                    @64A  03-IGWSMF\n                                            60608+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  183\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000050                                   60609+SMF2AFAE DS   1FL4              NUMBER OF LOCK REQUESTS PROCESSED @64A  03-IGWSMF\n                                            60610+*\n 00000054                                   60611+SMF2AFAF DS   1FL4              NUMBER OF TRUE CONTENTION               03-IGWSMF\n                                            60612+*                               LOCK REQUESTS                     @64A\n                                            60613+*\n 00000058                                   60614+SMF2AFAG DS   1FL4              NUMBER OF FALSE CONTENTION              03-IGWSMF\n                                            60615+*                               LOCK REQUESTS                     @64A\n                                            60616+*\n 0000005C                                   60617+SMF2AF02 DS   1FL2              SMS DIRECT WEIGHT                 @64A  03-IGWSMF\n                                            60618+*\n 0000005E                                   60619+SMF2AF12 DS   1FL2              SMS SEQUENTIAL WEIGHT             @64A  03-IGWSMF\n                                            60620+*\n 00000060                                   60621+SMF2AFAH DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            60622+*                                                                 @64A\n 00000070                                   60623+SMF2AFA2 DS   0CL336            DIRECT ACCESS SECTION             @64A  03-IGWSMF\n                                            60624+*\n 00000070                                   60625+SMF2AFA3 DS   0CL168            NORMAL DIRECT ACCESS SUMMARY            03-IGWSMF\n                                            60626+*                               SECTION                           @64A\n                                            60627+*                                                                 @64A\n 00000070                                   60628+SMF2AFCA DS   1FL4              COUPLE FACILITY CACHE PARTITION         03-IGWSMF\n                                            60629+*                               NUMBER                            @64A\n                                            60630+*                                                                 @64A\n 00000074                                   60631+SMF2AFCB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n                                            60632+*\n 00000078                                   60633+SMF2AFCC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60634+*                               NRI - NO READ INTEGRITY           @64A\n                                            60635+*\n 0000007C                                   60636+SMF2AFCD DS   1FL4              TOTAL NUMBER OF READ REQUESTS -         03-IGWSMF\n                                            60637+*                               CONSISTENT READS                  @64A\n                                            60638+*\n 00000080                                   60639+SMF2AFCE DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            60640+*\n 00000084                                   60641+SMF2AFCF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n                                            60642+*\n 00000088                                   60643+SMF2AFCG DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            60644+*\n 0000008C                                   60645+SMF2AFCH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n                                            60646+*\n 00000090                                   60647+SMF2AFCI DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n                                            60648+*\n 00000094                                   60649+SMF2AFCJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            60650+*\n 00000098                                   60651+SMF2AFCK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            60652+*\n 0000009C                                   60653+SMF2AFCL DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n                                            60654+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            60655+*\n 000000A0                                   60656+SMF2AFCM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n                                            60657+*\n 000000A4                                   60658+SMF2AFCN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            60659+*\n 000000A8                                   60660+SMF2AFCO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            60661+*\n 000000AC                                   60662+SMF2AFCP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            60663+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  184\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000000B0                                   60664+SMF2AFCQ DS   2F                NUMBER OF BYTES XFERED INTO THE   @64A  03-IGWSMF\n                                            60665+*                               DFSMS CACHE STRUCTURE             @64A\n                                            60666+*\n 000000B8                                   60667+SMF2AFCR DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60668+*                               TO DASD                           @64A\n                                            60669+*\n 000000BC                                   60670+SMF2AFCS DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60671+*                               TO DASD                           @64A\n                                            60672+*\n 000000C0                                   60673+SMF2AFCT DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60674+*                               DASD FOR THE READ   REQUESTS      @64A\n                                            60675+*\n 000000C8                                   60676+SMF2AFCU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60677+*                               DASD FOR THE WRITE REQUESTS       @64A\n                                            60678+*\n 000000D0                                   60679+SMF2AFCV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            60680+*\n 000000E0                                   60681+SMF2AFCW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            60682+*                               REQUESTS IN THIS INTERVAL. (VALUE @64A\n                                            60683+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            60684+*\n 000000E8                                   60685+SMF2AFCX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            60686+*                               THE REQUESTS IN THIS INTERVAL.    @64A\n                                            60687+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n                                            60688+*\n 000000EC                                   60689+SMF2AFCY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n                                            60690+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n                                            60691+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            60692+*                                TRANSFERRED/4K)                  @64A\n                                            60693+*\n 000000F0                                   60694+SMF2AFCZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            60695+*\n 000000F8                                   60696+SMF2AFC7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            60697+*\n                         000000A8           60698+SMF2AFA3_LEN  EQU *-SMF2AFA3                                      @64A  03-IGWSMF\n                                            60699+*\n                                            60700+*\n 00000118                                   60701+SMF2AFA4 DS   0CL168            RE-DO DURING DIRECT ACCESS SECTION@64A  03-IGWSMF\n                                            60702+*\n 00000118                                   60703+SMF2AFDA DS   1FL4              COUPLE FACILITY CACHE PARTITION   @64A  03-IGWSMF\n                                            60704+*                               NUMBER                            @64A\n 0000011C                                   60705+SMF2AFDB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n                                            60706+*\n 00000120                                   60707+SMF2AFDC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60708+*                               NRI - NO READ INTEGRITY           @64A\n                                            60709+*\n 00000124                                   60710+SMF2AFDD DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60711+*                               CONSISTENT READS                  @64A\n                                            60712+*\n 00000128                                   60713+SMF2AFDE DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            60714+*\n 0000012C                                   60715+SMF2AFDF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n                                            60716+*\n 00000130                                   60717+SMF2AFDG DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            60718+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  185\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000134                                   60719+SMF2AFDH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n                                            60720+*\n 00000138                                   60721+SMF2AFDI DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n                                            60722+*\n 0000013C                                   60723+SMF2AFDJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            60724+*\n 00000140                                   60725+SMF2AFDK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            60726+*\n 00000144                                   60727+SMF2AFDL DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n                                            60728+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            60729+*\n 00000148                                   60730+SMF2AFDM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n                                            60731+*\n 0000014C                                   60732+SMF2AFDN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            60733+*\n 00000150                                   60734+SMF2AFDO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            60735+*\n 00000154                                   60736+SMF2AFDP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            60737+*\n 00000158                                   60738+SMF2AFDQ DS   2F                NUMBER OF BYTES XFERED INTO THE   @64A  03-IGWSMF\n                                            60739+*                               DFSMS CACHE STRUCTURE             @64A\n                                            60740+*\n 00000160                                   60741+SMF2AFDR DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60742+*                               TO DASD                           @64A\n                                            60743+*\n 00000164                                   60744+SMF2AFDS DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60745+*                               TO DASD                           @64A\n                                            60746+*\n 00000168                                   60747+SMF2AFDT DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60748+*                               DASD FOR THE READ  REQUESTS       @64A\n                                            60749+*\n 00000170                                   60750+SMF2AFDU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60751+*                               DASD FOR THE WRITE REQUESTS       @64A\n                                            60752+*\n 00000178                                   60753+SMF2AFDV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            60754+*\n 00000188                                   60755+SMF2AFDW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            60756+*                               REQUESTS IN THIS INTERVAL. (VALUE @64A\n                                            60757+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            60758+*\n 00000190                                   60759+SMF2AFDX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            60760+*                               THE REQUESTS IN THIS INTERVAL.    @64A\n                                            60761+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n                                            60762+*\n 00000194                                   60763+SMF2AFDY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n                                            60764+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n                                            60765+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            60766+*                               TRANSFERRED/4K)                   @64A\n                                            60767+*\n 00000198                                   60768+SMF2AFDZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            60769+*\n 000001A0                                   60770+SMF2AFD7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            60771+*\n                         000000A8           60772+SMF2AFA4_LEN  EQU *-SMF2AFA4                                      @64A  03-IGWSMF\n                                            60773+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  186\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           60774+*\n 000001C0                                   60775+SMF2AFA5 DS   0CL672            SEQUENTIAL ACCESS SUMMARY SECTION @64A  03-IGWSMF\n                                            60776+*\n 000001C0                                   60777+SMF2AFA6 DS   0CL168            NORMAL SEQUENTIAL ACCESS SECTION  @64A  03-IGWSMF\n                                            60778+*\n 000001C0                                   60779+SMF2AFEA DS   1FL4              COUPLE FACILITY CACHE PARTITION   @64A  03-IGWSMF\n                                            60780+*                               NUMBER                            @64A\n                                            60781+*\n 000001C4                                   60782+SMF2AFEB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n                                            60783+*\n 000001C8                                   60784+SMF2AFEC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60785+*                               NRI - NO READ INTEGRITY           @64A\n                                            60786+*\n 000001CC                                   60787+SMF2AFED DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60788+*                               CONSISTENT READS                  @64A\n                                            60789+*\n 000001D0                                   60790+SMF2AFEE DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            60791+*\n 000001D4                                   60792+SMF2AFEF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n                                            60793+*\n 000001D8                                   60794+SMF2AFEG DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            60795+*\n 000001DC                                   60796+SMF2AFEH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n                                            60797+*\n 000001E0                                   60798+SMF2AFEI DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n                                            60799+*\n 000001E4                                   60800+SMF2AFEJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            60801+*\n 000001E8                                   60802+SMF2AFEK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            60803+*\n 000001EC                                   60804+SMF2AFEL DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n                                            60805+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            60806+*\n 000001F0                                   60807+SMF2AFEM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n                                            60808+*\n 000001F4                                   60809+SMF2AFEN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            60810+*\n 000001F8                                   60811+SMF2AFEO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            60812+*\n 000001FC                                   60813+SMF2AFEP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            60814+*\n 00000200                                   60815+SMF2AFEQ DS   2F                NUMBER OF BYTES XFERRED INTO THE  @64A  03-IGWSMF\n                                            60816+*                               DFSMS CACHE STRUCTURE             @64A\n                                            60817+*\n 00000208                                   60818+SMF2AFER DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60819+*                               TO DASD                           @64A\n                                            60820+*\n 0000020C                                   60821+SMF2AFES DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60822+*                               TO DASD                           @64A\n                                            60823+*\n 00000210                                   60824+SMF2AFET DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60825+*                               DASD FOR THE READ   REQUESTS      @64A\n                                            60826+*\n 00000218                                   60827+SMF2AFEU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60828+*                               DASD FOR THE WRITE REQUESTS       @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  187\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           60829+*\n 00000220                                   60830+SMF2AFEV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            60831+*\n 00000230                                   60832+SMF2AFEW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            60833+*                               REQUESTS IN THIS INTERVAL (VALUE  @64A\n                                            60834+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            60835+*\n 00000238                                   60836+SMF2AFEX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            60837+*                               THE REQUESTS IN THIS INTERVAL     @64A\n                                            60838+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n                                            60839+*\n 0000023C                                   60840+SMF2AFEY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n                                            60841+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n                                            60842+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            60843+*                               TRANSFERRED/4K)                   @64A\n                                            60844+*\n 00000240                                   60845+SMF2AFEZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            60846+*\n 00000248                                   60847+SMF2AFE7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            60848+*\n                         000000A8           60849+SMF2AFA6_LEN  EQU *-SMF2AFA6                                      @64A  03-IGWSMF\n                                            60850+*\n                                            60851+*\n 00000268                                   60852+SMF2AFA7 DS   0CL168            RE-DO DURING SEQUENTIAL ACCESS    @64A  03-IGWSMF\n                                            60853+*                               SECTION                           @64A\n                                            60854+*\n 00000268                                   60855+SMF2AFFA DS   1FL4              COUPLE FACILITY CACHE PARTITION   @64A  03-IGWSMF\n                                            60856+*                               NUMBER                            @64A\n                                            60857+*\n 0000026C                                   60858+SMF2AFFB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n                                            60859+*\n 00000270                                   60860+SMF2AFFC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60861+*                               NRI - NO READ INTEGRITY           @64A\n                                            60862+*\n 00000274                                   60863+SMF2AFFD DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60864+*                               CONSISTENT READS                  @64A\n                                            60865+*\n 00000278                                   60866+SMF2AFFE DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            60867+*\n 0000027C                                   60868+SMF2AFFF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n                                            60869+*\n 00000280                                   60870+SMF2AFFG DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            60871+*\n 00000284                                   60872+SMF2AFFH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n                                            60873+*\n 00000288                                   60874+SMF2AFFI DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n                                            60875+*\n 0000028C                                   60876+SMF2AFFJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            60877+*\n 00000290                                   60878+SMF2AFFK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            60879+*\n 00000294                                   60880+SMF2AFFL DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n                                            60881+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            60882+*\n 00000298                                   60883+SMF2AFFM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  188\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           60884+*\n 0000029C                                   60885+SMF2AFFN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            60886+*\n 000002A0                                   60887+SMF2AFFO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            60888+*\n 000002A4                                   60889+SMF2AFFP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            60890+*\n 000002A8                                   60891+SMF2AFFQ DS   2F                NUMBER OF BYTES XFERRED INTO THE  @64A  03-IGWSMF\n                                            60892+*                               DFSMS CACHE STRUCTURE             @64A\n                                            60893+*\n 000002B0                                   60894+SMF2AFFR DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60895+*                               TO DASD                           @64A\n                                            60896+*\n 000002B4                                   60897+SMF2AFFS DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS       03-IGWSMF\n                                            60898+*                               TO DASD                           @64A\n                                            60899+*\n 000002B8                                   60900+SMF2AFFT DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60901+*                               DASD FOR THE READ  REQUESTS       @64A\n                                            60902+*\n 000002C0                                   60903+SMF2AFFU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60904+*                               DASD FOR THE WRITE REQUESTS       @64A\n                                            60905+*\n 000002C8                                   60906+SMF2AFFV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            60907+*\n 000002D8                                   60908+SMF2AFFW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            60909+*                               REQUESTS IN THIS INTERVAL (VALUE  @64A\n                                            60910+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            60911+*\n 000002E0                                   60912+SMF2AFFX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            60913+*                               THE REQUESTS IN THIS INTERVAL.    @64A\n                                            60914+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n                                            60915+*\n 000002E4                                   60916+SMF2AFFY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n                                            60917+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n                                            60918+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            60919+*                               TRANSFERRED/4K)                   @64A\n                                            60920+*\n 000002E8                                   60921+SMF2AFFZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            60922+*\n 000002F0                                   60923+SMF2AFF7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            60924+*\n                         000000A8           60925+SMF2AFA7_LEN  EQU *-SMF2AFA7                                      @64A  03-IGWSMF\n                                            60926+*\n                                            60927+*\n 00000310                                   60928+SMF2AFA8 DS   0CL168            READ-A-HEAD SEQUENTIAL ACCESS     @64A  03-IGWSMF\n                                            60929+*                               SECTION                           @64A\n                                            60930+*\n 00000310                                   60931+SMF2AFGA DS   1FL4              COUPLE FACILITY CACHE PARTITION   @64A  03-IGWSMF\n                                            60932+*                               NUMBER                            @64A\n                                            60933+*\n 00000314                                   60934+SMF2AFGB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n                                            60935+*\n 00000318                                   60936+SMF2AFGC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60937+*                               NRI - NO READ INTEGRITY           @64A\n                                            60938+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  189\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000031C                                   60939+SMF2AFGD DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            60940+*                               CONSISTENT READS                  @64A\n                                            60941+*\n 00000320                                   60942+SMF2AFGE DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            60943+*\n 00000324                                   60944+SMF2AFGF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n                                            60945+*\n 00000328                                   60946+SMF2AFGG DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            60947+*\n 0000032C                                   60948+SMF2AFGH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n                                            60949+*\n 00000330                                   60950+SMF2AFGI DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n                                            60951+*\n 00000334                                   60952+SMF2AFGJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            60953+*\n 00000338                                   60954+SMF2AFGK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            60955+*\n 0000033C                                   60956+SMF2AFGL DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n                                            60957+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            60958+*\n 00000340                                   60959+SMF2AFGM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n                                            60960+*\n 00000344                                   60961+SMF2AFGN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            60962+*\n 00000348                                   60963+SMF2AFGO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            60964+*\n 0000034C                                   60965+SMF2AFGP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            60966+*\n 00000350                                   60967+SMF2AFGQ DS   2F                NUMBER OF BYTES XFERRED INTO THE  @64A  03-IGWSMF\n                                            60968+*                               DFSMS CACHE STRUCTURE             @64A\n                                            60969+*\n 00000358                                   60970+SMF2AFGR DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60971+*                               TO DASD                           @64A\n                                            60972+*\n 0000035C                                   60973+SMF2AFGS DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS @64A  03-IGWSMF\n                                            60974+*                               TO DASD                           @64A\n                                            60975+*\n 00000360                                   60976+SMF2AFGT DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60977+*                               DASD FOR THE READ  REQUESTS       @64A\n                                            60978+*\n 00000368                                   60979+SMF2AFGU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            60980+*                               DASD FOR THE WRITE REQUESTS       @64A\n                                            60981+*\n 00000370                                   60982+SMF2AFGV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            60983+*\n 00000380                                   60984+SMF2AFGW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            60985+*                               REQUESTS IN THIS INTERVAL (VALUE  @64A\n                                            60986+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            60987+*\n 00000388                                   60988+SMF2AFGX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            60989+*                               THE REQUESTS IN THIS INTERVAL.    @64A\n                                            60990+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n                                            60991+*\n 0000038C                                   60992+SMF2AFGY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n                                            60993+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  190\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           60994+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            60995+*                               TRANSFERRED/4K)                   @64A\n                                            60996+*\n 00000390                                   60997+SMF2AFGZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            60998+*\n 00000398                                   60999+SMF2AFG7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            61000+*\n                         000000A8           61001+SMF2AFA8_LEN  EQU *-SMF2AFA8                                      @64A  03-IGWSMF\n                                            61002+*\n                                            61003+*\n 000003B8                                   61004+SMF2AFA9 DS   0CL168            PRE-FORMAT SEQUENTIAL ACCESS      @64A  03-IGWSMF\n                                            61005+*                               SECTION                           @64A\n                                            61006+*\n 000003B8                                   61007+SMF2AFHA DS   1FL4              COUPLE FACILITY CACHE PARTITION   @64A  03-IGWSMF\n                                            61008+*                               NUMBER                            @64A\n                                            61009+*\n 000003BC                                   61010+SMF2AFHB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n                                            61011+*\n 000003C0                                   61012+SMF2AFHC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            61013+*                               NRI - NO READ INTEGRITY           @64A\n                                            61014+*\n 000003C4                                   61015+SMF2AFHD DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            61016+*                               CONSISTENT READS                  @64A\n                                            61017+*\n 000003C8                                   61018+SMF2AFHE DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            61019+*\n 000003CC                                   61020+SMF2AFHF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n                                            61021+*\n 000003D0                                   61022+SMF2AFHG DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            61023+*\n 000003D4                                   61024+SMF2AFHH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n                                            61025+*\n 000003D8                                   61026+SMF2AFHI DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n                                            61027+*\n 000003DC                                   61028+SMF2AFHJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            61029+*\n 000003E0                                   61030+SMF2AFHK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            61031+*\n 000003E4                                   61032+SMF2AFHL DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n                                            61033+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            61034+*\n 000003E8                                   61035+SMF2AFHM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n                                            61036+*\n 000003EC                                   61037+SMF2AFHN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            61038+*\n 000003F0                                   61039+SMF2AFHO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            61040+*\n 000003F4                                   61041+SMF2AFHP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            61042+*\n 000003F8                                   61043+SMF2AFHQ DS   2F                NUMBER OF BYTES XFERRED INTO THE  @64A  03-IGWSMF\n                                            61044+*                               DFSMS CACHE STRUCTURE             @64A\n                                            61045+*\n 00000400                                   61046+SMF2AFHR DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            61047+*                               TO DASD                           @64A\n                                            61048+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  191\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000404                                   61049+SMF2AFHS DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS @64A  03-IGWSMF\n                                            61050+*                               TO DASD                           @64A\n                                            61051+*\n 00000408                                   61052+SMF2AFHT DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            61053+*                               DASD FOR THE READ  REQUESTS       @64A\n                                            61054+*\n 00000410                                   61055+SMF2AFHU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            61056+*                               DASD FOR THE WRITE REQUESTS       @64A\n                                            61057+*\n 00000418                                   61058+SMF2AFHV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            61059+*\n 00000428                                   61060+SMF2AFHW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            61061+*                               REQUESTS IN THIS INTERVAL (VALUE  @64A\n                                            61062+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            61063+*\n 00000430                                   61064+SMF2AFHX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            61065+*                               THE REQUESTS IN THIS INTERVAL.    @64A\n                                            61066+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n                                            61067+*\n 00000434                                   61068+SMF2AFHY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n                                            61069+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n                                            61070+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            61071+*                               TRANSFERRED/4K)                   @64A\n                                            61072+*\n 00000438                                   61073+SMF2AFHZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            61074+*\n 00000440                                   61075+SMF2AFH7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            61076+*\n                         000000A8           61077+SMF2AFA9_LEN  EQU *-SMF2AFA9                                      @64A  03-IGWSMF\n                                            61078+*\n                         000002A0           61079+SMF2AFA5_LEN  EQU *-SMF2AFA5                                      @64A  03-IGWSMF\n                                            61080+*\n                                            61081+*\n 00000460                                   61082+SMF2AFX1 DS   0CL128            LOCKING STATISTICS SUMMARY        @64A  03-IGWSMF\n                                            61083+*\n 00000460                                   61084+SMF2AFOA DS   1FL4              NUMBER OF RECORD LOCK             @64A  03-IGWSMF\n                                            61085+*                               REQUESTS                          @64A\n                                            61086+*                               (OBTAIN/ALTER/PROMOTE)            @64A\n                                            61087+*\n 00000464                                   61088+SMF2AFOB DS   1FL4              NUMBER OF RECORD LOCK             @64A  03-IGWSMF\n                                            61089+*                               REQUESTS THAT CAUSE TRUE          @64A\n                                            61090+*                               CONTENTION                        @64A\n                                            61091+*\n 00000468                                   61092+SMF2AFOC DS   1FL4              NUMBER OF RECORD LOCK             @64A  03-IGWSMF\n                                            61093+*                               REQUESTS THAT CAUSE FALSE         @64A\n                                            61094+*                               CONTENTION                        @64A\n                                            61095+*\n 0000046C                                   61096+SMF2AFOD DS   1FL4              NUMBER OF RECORD LOCK             @64A  03-IGWSMF\n                                            61097+*                               RELEASE REQUESTS                  @64A\n                                            61098+*\n 00000470                                   61099+SMF2AFOE DS   1FL4              NUMBER OF COMPONENT_1 TYPE        @64A  03-IGWSMF\n                                            61100+*                               LOCK REQUESTS                     @64A\n                                            61101+*\n 00000474                                   61102+SMF2AFOF DS   1FL4              NUMBER OF COMPONENT_1 TYPE        @64A  03-IGWSMF\n                                            61103+*                               RELEASE LOCK REQUESTS             @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  192\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           61104+*\n 00000478                                   61105+SMF2AFOG DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            61106+*\n 00000480                                   61107+SMF2AFOH DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61108+*                               CLASS_1 (DIWA) LOCKS              @64A\n                                            61109+*                               (OBTAIN/ALTER/PROMOTE)            @64A\n                                            61110+*\n 00000484                                   61111+SMF2AFOI DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61112+*                               CLASS_1 (DIWA) LOCKS              @64A\n                                            61113+*                               THAT CAUSE TRUE CONTENTION        @64A\n                                            61114+*\n 00000488                                   61115+SMF2AFOJ DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61116+*                               CLASS_1 (DIWA) LOCKS              @64A\n                                            61117+*                               THAT CAUSE FALSE CONTENTION       @64A\n                                            61118+*\n 0000048C                                   61119+SMF2AFOK DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61120+*                               CLASS_1 (DIWA) RELEASE            @64A\n                                            61121+*                               LOCK REQUESTS                     @64A\n                                            61122+*\n 00000490                                   61123+SMF2AFOL DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61124+*                               CLASS_2 (UPGRADE) LOCKS           @64A\n                                            61125+*                               (OBTAIN/ALTER/PROMOTE)            @64A\n                                            61126+*\n 00000494                                   61127+SMF2AFOM DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61128+*                               CLASS_2 (UPGRADE) LOCKS           @64A\n                                            61129+*                               THAT CAUSE TRUE CONTENTION        @64A\n                                            61130+*\n 00000498                                   61131+SMF2AFON DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61132+*                               CLASS_2 (UPGRADE) LOCKS           @64A\n                                            61133+*                               THAT CAUSE FALSE CONTENTION       @64A\n                                            61134+*\n 0000049C                                   61135+SMF2AFOO DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61136+*                               CLASS_2 (UPGRADE) RELEASE         @64A\n                                            61137+*                               LOCK REQUESTS                     @64A\n                                            61138+*\n 000004A0                                   61139+SMF2AFOP DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61140+*                               CLASS_3 (PREFORMAT) LOCKS         @64A\n                                            61141+*                               (OBTAIN/ALTER/PROMOTE)            @64A\n                                            61142+*\n 000004A4                                   61143+SMF2AFOQ DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61144+*                               CLASS_3 (PREFORMAT) LOCKS         @64A\n                                            61145+*                               THAT CAUSE TRUE CONTENTION        @64A\n                                            61146+*\n 000004A8                                   61147+SMF2AFOR DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61148+*                               CLASS_3 (PREFORMAT) LOCKS         @64A\n                                            61149+*                               THAT CAUSE FALSE CONTENTION       @64A\n                                            61150+*\n 000004AC                                   61151+SMF2AFOS DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61152+*                               CLASS_3 (PREFORMAT) RELEASE       @64A\n                                            61153+*                               LOCK REQUESTS                     @64A\n                                            61154+*\n 000004B0                                   61155+SMF2AFOT DS   1FL4              NUMBER OF COMPONENT_2             @64A  03-IGWSMF\n                                            61156+*                               LOCK REQUESTS                     @64A\n                                            61157+*                               (OBTAIN/ALTER/PROMOTE)            @64A\n                                            61158+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  193\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000004B4                                   61159+SMF2AFOU DS   1FL4              NUMBER OF COMPONENT_2 LOCKS       @64A  03-IGWSMF\n                                            61160+*                               THAT CAUSE TRUE CONTENTION        @64A\n                                            61161+*\n 000004B8                                   61162+SMF2AFOV DS   1FL4              NUMBER OF COMPONENT_2 LOCKS       @64A  03-IGWSMF\n                                            61163+*                               THAT CAUSE FALSE CONTENTION       @64A\n                                            61164+*\n 000004BC                                   61165+SMF2AFOW DS   1FL4              NUMBER OF COMPONENT_2             @64A  03-IGWSMF\n                                            61166+*                               RELEASE LOCK REQUESTS             @64A\n                                            61167+*\n 000004C0                                   61168+SMF2AFOX DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            61169+*\n                         00000080           61170+SMF2AFX1_LEN  EQU *-SMF2AFX1                                      @64A  03-IGWSMF\n                                            61171+*\n                                            61172+*\n 000004E0                                   61173+SMF2AFX2 DS   0CL32             THREAD LEVEL STATISTICS           @64A  03-IGWSMF\n                                            61174+*\n 000004E0                                   61175+SMF2AFPR DS   2F                TOTAL TIME ALL THREAD             @64A  03-IGWSMF\n                                            61176+*                               REQUESTS                          @64A\n                                            61177+*\n 000004E8                                   61178+SMF2AFPS DS   1FL4              TOTAL NUMBER OF ALL THREAD        @64A  03-IGWSMF\n                                            61179+*                               REQUESTS                          @64A\n                                            61180+*\n 000004EC                                   61181+SMF2AFPT DS   1FL4              RESERVED                          @64A  03-IGWSMF\n                                            61182+*\n 000004F0                                   61183+SMF2AFPU DS   1FL4              AVERAGE RESPONSE TIME FOR         @64A  03-IGWSMF\n                                            61184+*                               ALL OF THE THREAD REQUESTS        @64A\n                                            61185+*                               IN THE INTERVAL                   @64A\n                                            61186+*                               (TOTAL TIME/NUMBER OF             @64A\n                                            61187+*                               THREAD REQUESTS)                  @64A\n                                            61188+*\n 000004F4                                   61189+SMF2AFPV DS   1FL4              NORMALIZED RESPONSE TIME          @64A  03-IGWSMF\n                                            61190+*                               FOR ALL OF THE THREAD             @64A\n                                            61191+*                               REQUESTS IN THE INTERVAL          @64A\n                                            61192+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            61193+*                               TRANSFERRED/4K)                   @64A\n                                            61194+*\n 000004F8                                   61195+SMF2AFPW DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            61196+*\n                         00000020           61197+SMF2AFX2_LEN  EQU *-SMF2AFX2                                      @64A  03-IGWSMF\n 00000500                                   61198+SMF2AFAI DS   CL16              Lock Structure name               @L3C  03-IGWSMF\n 00000510                                   61199+SMF2AFAJ DS   CL8               Lock Set                          @L3A  03-IGWSMF\n                                            61200+*\n                         00000518           61201+SMF2A0FA_LEN  EQU *-SMF2A0FA                                      @64A  03-IGWSMF\n                                            61202+*\n                                            61203+*\n 00000000                00000000 00000548  61204+SMF2A0FB DSECT ,                                                  @64A  03-IGWSMF\n                                            61205+*\n 00000000                                   61206+SMF2AF1A DS   0CL1328           SC/SYS/CF CLASS SUMMARY SECTION   @64A  03-IGWSMF\n                                            61207+*\n 00000000                                   61208+SMF2AFBA DS   1FL4              INTERVAL LENGTH. THIS IS THE      @64A  03-IGWSMF\n                                            61209+*                               TOTAL TIME OF THE MEASUREMENT     @64A\n                                            61210+*                               PERIOD. (IN SECONDS)              @64A\n                                            61211+*\n 00000004                                   61212+SMF2AF03 DS   CL12              INDICATES IF DFSMS GREATER        @64A  03-IGWSMF\n                                            61213+*                               THAN 4K CF CACHING IS ACTIVE      @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  194\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           61214+*                               VALUES ARE GT4KACTIVE OR          @64A\n                                            61215+*                               GT4KNOTACT                        @64A\n                                            61216+*\n 00000010                                   61217+SMF2AFBB DS   1FL2              LENGTH OF THE STORAGE CLASS NAME  @64A  03-IGWSMF\n                                            61218+*\n 00000012                                   61219+SMF2AFBC DS   CL30              STORAGE CLASS NAME                @64A  03-IGWSMF\n                                            61220+*\n 00000030                                   61221+SMF2AF04 DS   1FL2              CACHE SET NAME LENGTH             @64A  03-IGWSMF\n                                            61222+*\n 00000032                                   61223+SMF2AFBD DS   CL30              CACHE SET NAME                    @64A  03-IGWSMF\n                                            61224+*\n 00000050                                   61225+SMF2AFBE DS   CL8               MVS SYSTEM NAME                   @64A  03-IGWSMF\n                                            61226+*\n 00000058                                   61227+SMF2AF05 DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            61228+*\n 00000060                                   61229+SMF2AFBF DS   CL2               RESERVED                          @64A  03-IGWSMF\n                                            61230+*\n 00000062                                   61231+SMF2AFBG DS   CL30              DFP CACHE STRUCTURE  NAME         @64A  03-IGWSMF\n                                            61232+*\n 00000080                                   61233+SMF2AFBH DS   1FL4              NUMBER OF LOCK REQUESTS           @64A  03-IGWSMF\n                                            61234+*                               PROCESSED (not used)              @64A\n                                            61235+*\n 00000084                                   61236+SMF2AFBI DS   1FL4              NUMBER OF TRUE CONTENTION         @64A  03-IGWSMF\n                                            61237+*                               LOCK REQUESTS (not used)          @64A\n                                            61238+*\n 00000088                                   61239+SMF2AFBJ DS   1FL4              NUMBER OF FALSE CONTENTION        @64A  03-IGWSMF\n                                            61240+*                               LOCK REQUESTS (not used)          @64A\n                                            61241+*\n 0000008C                                   61242+SMF2AFB2 DS   1FL2              SMS DIRECT WEIGHT                 @64A  03-IGWSMF\n                                            61243+*\n 0000008E                                   61244+SMF2AFB3 DS   1FL2              SMS SEQUENTIAL WEIGHT             @64A  03-IGWSMF\n                                            61245+*\n 00000090                                   61246+SMF2AFBL DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            61247+*\n                                            61248+*\n 000000A0                                   61249+SMF2AF1B DS   0CL336            DIRECT ACCESS SUMMARY SECTION     @64A  03-IGWSMF\n                                            61250+*\n 000000A0                                   61251+SMF2AF1C DS   0CL168            NORMAL DIRECT ACCESS SUMMARY      @64A  03-IGWSMF\n                                            61252+*                               SECTION                           @64A\n                                            61253+*\n 000000A0                                   61254+SMF2AFIA DS   1FL4              COUPLE FACILITY CACHE PARTITION   @64A  03-IGWSMF\n                                            61255+*                               NUMBER                            @64A\n                                            61256+*\n 000000A4                                   61257+SMF2AFIB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n                                            61258+*\n 000000A8                                   61259+SMF2AFIC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            61260+*                               NRI - NO READ INTEGRITY           @64A\n                                            61261+*\n 000000AC                                   61262+SMF2AFID DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            61263+*                               CONSISTENT READS                  @64A\n                                            61264+*\n 000000B0                                   61265+SMF2AFIE DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            61266+*\n 000000B4                                   61267+SMF2AFIF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n                                            61268+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  195\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000000B8                                   61269+SMF2AFIG DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            61270+*\n 000000BC                                   61271+SMF2AFIH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n                                            61272+*\n 000000C0                                   61273+SMF2AFII DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n                                            61274+*\n 000000C4                                   61275+SMF2AFIJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            61276+*\n 000000C8                                   61277+SMF2AFIK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            61278+*\n 000000CC                                   61279+SMF2AFIL DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n                                            61280+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            61281+*\n 000000D0                                   61282+SMF2AFIM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n                                            61283+*\n 000000D4                                   61284+SMF2AFIN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            61285+*\n 000000D8                                   61286+SMF2AFIO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            61287+*\n 000000DC                                   61288+SMF2AFIP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            61289+*\n 000000E0                                   61290+SMF2AFIQ DS   2F                NUMBER OF BYTES XFERRED INTO THE  @64A  03-IGWSMF\n                                            61291+*                               DFSMS CACHE STRUCTURE             @64A\n                                            61292+*\n 000000E8                                   61293+SMF2AFIR DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            61294+*                               TO DASD                           @64A\n                                            61295+*\n 000000EC                                   61296+SMF2AFIS DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS @64A  03-IGWSMF\n                                            61297+*                               TO DASD                           @64A\n                                            61298+*\n 000000F0                                   61299+SMF2AFIT DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            61300+*                               DASD FOR THE READ  REQUESTS       @64A\n                                            61301+*\n 000000F8                                   61302+SMF2AFIU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            61303+*                               DASD FOR THE WRITE REQUESTS       @64A\n                                            61304+*\n 00000100                                   61305+SMF2AFIV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            61306+*\n 00000110                                   61307+SMF2AFIW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            61308+*                               REQUESTS IN THIS INTERVAL (VALUE  @64A\n                                            61309+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            61310+*\n 00000118                                   61311+SMF2AFIX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            61312+*                               THE REQUESTS IN THIS INTERVAL.    @64A\n                                            61313+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n                                            61314+*\n 0000011C                                   61315+SMF2AFIY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n                                            61316+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n                                            61317+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            61318+*                               TRANSFERRED/4K)                   @64A\n                                            61319+*\n 00000120                                   61320+SMF2AFIZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            61321+*\n 00000128                                   61322+SMF2AFI7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            61323+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  196\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        000000A8           61324+SMF2AF1C_LEN  EQU *-SMF2AF1C                                      @64A  03-IGWSMF\n                                            61325+*\n                                            61326+*\n 00000148                                   61327+SMF2AF1D DS   0CL168            RE-DO DURING DIRECT ACCESS SECTION@64A  03-IGWSMF\n                                            61328+*\n 00000148                                   61329+SMF2AFJA DS   1FL4              COUPLE FACILITY CACHE PARTITION   @64A  03-IGWSMF\n                                            61330+*                               NUMBER                            @64A\n                                            61331+*\n 0000014C                                   61332+SMF2AFJB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n                                            61333+*\n 00000150                                   61334+SMF2AFJC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            61335+*                               NRI - NO READ INTEGRITY           @64A\n                                            61336+*\n 00000154                                   61337+SMF2AFJD DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            61338+*                               CONSISTENT READS                  @64A\n                                            61339+*\n 00000158                                   61340+SMF2AFJE DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            61341+*\n 0000015C                                   61342+SMF2AFJF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n                                            61343+*\n 00000160                                   61344+SMF2AFJG DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            61345+*\n 00000164                                   61346+SMF2AFJH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n                                            61347+*\n 00000168                                   61348+SMF2AFJI DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n                                            61349+*\n 0000016C                                   61350+SMF2AFJJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            61351+*\n 00000170                                   61352+SMF2AFJK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            61353+*\n 00000174                                   61354+SMF2AFJL DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n                                            61355+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            61356+*\n 00000178                                   61357+SMF2AFJM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n                                            61358+*\n 0000017C                                   61359+SMF2AFJN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            61360+*\n 00000180                                   61361+SMF2AFJO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            61362+*\n 00000184                                   61363+SMF2AFJP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            61364+*\n 00000188                                   61365+SMF2AFJQ DS   2F                NUMBER OF BYTES XFERRED INTO THE  @64A  03-IGWSMF\n                                            61366+*                               DFSMS CACHE STRUCTURE             @64A\n                                            61367+*\n 00000190                                   61368+SMF2AFJR DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            61369+*                               TO DASD                           @64A\n                                            61370+*\n 00000194                                   61371+SMF2AFJS DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS @64A  03-IGWSMF\n                                            61372+*                               TO DASD                           @64A\n                                            61373+*\n 00000198                                   61374+SMF2AFJT DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            61375+*                               DASD FOR THE READ  REQUESTS       @64A\n                                            61376+*\n 000001A0                                   61377+SMF2AFJU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            61378+*                               DASD FOR THE WRITE REQUESTS       @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  197\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           61379+*\n 000001A8                                   61380+SMF2AFJV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            61381+*\n 000001B8                                   61382+SMF2AFJW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            61383+*                               REQUESTS IN THIS INTERVAL (VALUE  @64A\n                                            61384+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            61385+*\n 000001C0                                   61386+SMF2AFJX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            61387+*                               THE REQUESTS IN THIS INTERVAL.    @64A\n                                            61388+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n                                            61389+*\n 000001C4                                   61390+SMF2AFJY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n                                            61391+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n                                            61392+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            61393+*                               TRANSFERRED/4K)                   @64A\n                                            61394+*\n 000001C8                                   61395+SMF2AFJZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            61396+*\n 000001D0                                   61397+SMF2AFJ7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            61398+*\n                         000000A8           61399+SMF2AF1D_LEN  EQU *-SMF2AF1D                                      @64A  03-IGWSMF\n                                            61400+*\n                         00000150           61401+SMF2AF1B_LEN  EQU *-SMF2AF1B                                      @64A  03-IGWSMF\n                                            61402+*\n                                            61403+*\n 000001F0                                   61404+SMF2AF1E DS   0CL672            SEQUENTIAL ACCESS SUMMARY SECTION @64A  03-IGWSMF\n                                            61405+*\n 000001F0                                   61406+SMF2AF1F DS   0CL168            NORMAL SEQUENTIAL ACCESS SECTION  @64A  03-IGWSMF\n                                            61407+*\n 000001F0                                   61408+SMF2AFKA DS   1FL4              COUPLE FACILITY CACHE PARTITION   @64A  03-IGWSMF\n                                            61409+*                               NUMBER                            @64A\n                                            61410+*\n 000001F4                                   61411+SMF2AFKB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n                                            61412+*\n 000001F8                                   61413+SMF2AFKC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            61414+*                               NRI - NO READ INTEGRITY           @64A\n                                            61415+*\n 000001FC                                   61416+SMF2AFKD DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            61417+*                               CONSISTENT READS                  @64A\n                                            61418+*\n 00000200                                   61419+SMF2AFKE DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            61420+*\n 00000204                                   61421+SMF2AFKF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n                                            61422+*\n 00000208                                   61423+SMF2AFKG DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            61424+*\n 0000020C                                   61425+SMF2AFKH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n                                            61426+*\n 00000210                                   61427+SMF2AFKI DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n                                            61428+*\n 00000214                                   61429+SMF2AFKJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            61430+*\n 00000218                                   61431+SMF2AFKK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            61432+*\n 0000021C                                   61433+SMF2AFKL DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  198\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           61434+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            61435+*\n 00000220                                   61436+SMF2AFKM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n                                            61437+*\n 00000224                                   61438+SMF2AFKN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            61439+*\n 00000228                                   61440+SMF2AFKO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            61441+*\n 0000022C                                   61442+SMF2AFKP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            61443+*\n 00000230                                   61444+SMF2AFKQ DS   2F                NUMBER OF BYTES XFERRED INTO THE  @64A  03-IGWSMF\n                                            61445+*                               DFSMS CACHE STRUCTURE             @64A\n                                            61446+*\n 00000238                                   61447+SMF2AFKR DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            61448+*                               TO DASD                           @64A\n                                            61449+*\n 0000023C                                   61450+SMF2AFKS DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS @64A  03-IGWSMF\n                                            61451+*                               TO DASD                           @64A\n                                            61452+*\n 00000240                                   61453+SMF2AFKT DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            61454+*                               DASD FOR THE READ  REQUESTS       @64A\n                                            61455+*\n 00000248                                   61456+SMF2AFKU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            61457+*                               DASD FOR THE WRITE REQUESTS       @64A\n                                            61458+*\n 00000250                                   61459+SMF2AFKV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            61460+*\n 00000260                                   61461+SMF2AFKW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            61462+*                               REQUESTS IN THIS INTERVAL (VALUE  @64A\n                                            61463+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            61464+*\n 00000268                                   61465+SMF2AFKX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            61466+*                               THE REQUESTS IN THIS INTERVAL.    @64A\n                                            61467+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n                                            61468+*\n 0000026C                                   61469+SMF2AFKY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n                                            61470+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n                                            61471+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            61472+*                               TRANSFERRED/4K)                   @64A\n                                            61473+*\n 00000270                                   61474+SMF2AFKZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            61475+*\n 00000278                                   61476+SMF2AFK7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            61477+*\n                         000000A8           61478+SMF2AF1F_LEN  EQU *-SMF2AF1F                                      @64A  03-IGWSMF\n                                            61479+*\n                                            61480+*\n 00000298                                   61481+SMF2AF1G DS   0CL168            RE-DO DURING SEQUENTIAL ACCESS    @64A  03-IGWSMF\n                                            61482+*                               SECTION                           @64A\n                                            61483+*\n 00000298                                   61484+SMF2AFLA DS   1FL4              COUPLE FACILITY CACHE PARTITION   @64A  03-IGWSMF\n                                            61485+*                               NUMBER                            @64A\n                                            61486+*\n 0000029C                                   61487+SMF2AFLB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n                                            61488+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  199\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000002A0                                   61489+SMF2AFLC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            61490+*                               NRI - NO READ INTEGRITY           @64A\n                                            61491+*\n 000002A4                                   61492+SMF2AFLD DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            61493+*                               CONSISTENT READS                  @64A\n                                            61494+*\n 000002A8                                   61495+SMF2AFLE DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            61496+*\n 000002AC                                   61497+SMF2AFLF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n                                            61498+*\n 000002B0                                   61499+SMF2AFL6 DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            61500+*\n 000002B4                                   61501+SMF2AFLH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n                                            61502+*\n 000002B8                                   61503+SMF2AFLI DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n                                            61504+*\n 000002BC                                   61505+SMF2AFLJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            61506+*\n 000002C0                                   61507+SMF2AFLK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            61508+*\n 000002C4                                   61509+SMF2AFLL DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n                                            61510+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            61511+*\n 000002C8                                   61512+SMF2AFLM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n                                            61513+*\n 000002CC                                   61514+SMF2AFLN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            61515+*\n 000002D0                                   61516+SMF2AFLO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            61517+*\n 000002D4                                   61518+SMF2AFLP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            61519+*\n 000002D8                                   61520+SMF2AFLQ DS   2F                NUMBER OF BYTES XFERRED INTO THE  @64A  03-IGWSMF\n                                            61521+*                               DFSMS CACHE STRUCTURE             @64A\n                                            61522+*\n 000002E0                                   61523+SMF2AFLR DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            61524+*                               TO DASD                           @64A\n                                            61525+*\n 000002E4                                   61526+SMF2AFLS DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS @64A  03-IGWSMF\n                                            61527+*                               TO DASD                           @64A\n                                            61528+*\n 000002E8                                   61529+SMF2AFLT DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            61530+*                               DASD FOR THE READ  REQUESTS       @64A\n                                            61531+*\n 000002F0                                   61532+SMF2AFLU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            61533+*                               DASD FOR THE WRITE REQUESTS       @64A\n                                            61534+*\n 000002F8                                   61535+SMF2AFLV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            61536+*\n 00000308                                   61537+SMF2AFLW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            61538+*                               REQUESTS IN THIS INTERVAL (VALUE  @64A\n                                            61539+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            61540+*\n 00000310                                   61541+SMF2AFLX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            61542+*                               THE REQUESTS IN THIS INTERVAL.    @64A\n                                            61543+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  200\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           61544+*\n 00000314                                   61545+SMF2AFLY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n                                            61546+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n                                            61547+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            61548+*                               TRANSFERRED/4K)                   @64A\n                                            61549+*\n 00000318                                   61550+SMF2AFLZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            61551+*\n 00000320                                   61552+SMF2AFL7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            61553+*\n                         000000A8           61554+SMF2AF1G_LEN  EQU *-SMF2AF1G                                      @64A  03-IGWSMF\n                                            61555+*\n                                            61556+*\n 00000340                                   61557+SMF2AF1H DS   0CL168            READ-A-HEAD SEQUENTIAL ACCESS     @64A  03-IGWSMF\n                                            61558+*                               SECTION                           @64A\n                                            61559+*\n 00000340                                   61560+SMF2AFMA DS   1FL4              COUPLE FACILITY CACHE PARTITION   @64A  03-IGWSMF\n                                            61561+*                               NUMBER                            @64A\n                                            61562+*\n 00000344                                   61563+SMF2AFMB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n                                            61564+*\n 00000348                                   61565+SMF2AFMC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            61566+*                               NRI - NO READ INTEGRITY           @64A\n                                            61567+*\n 0000034C                                   61568+SMF2AFMD DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            61569+*                               CONSISTENT READS                  @64A\n                                            61570+*\n 00000350                                   61571+SMF2AFME DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            61572+*\n 00000354                                   61573+SMF2AFMF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n                                            61574+*\n 00000358                                   61575+SMF2AFMG DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            61576+*\n 0000035C                                   61577+SMF2AFMH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n                                            61578+*\n 00000360                                   61579+SMF2AFMI DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n                                            61580+*\n 00000364                                   61581+SMF2AFMJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            61582+*\n 00000368                                   61583+SMF2AFMK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            61584+*\n 0000036C                                   61585+SMF2AFML DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n                                            61586+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            61587+*\n 00000370                                   61588+SMF2AFMM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n                                            61589+*\n 00000374                                   61590+SMF2AFMN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            61591+*\n 00000378                                   61592+SMF2AFMO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            61593+*\n 0000037C                                   61594+SMF2AFMP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            61595+*\n 00000380                                   61596+SMF2AFMQ DS   2F                NUMBER OF BYTES XFERRED INTO THE  @64A  03-IGWSMF\n                                            61597+*                               DFSMS CACHE STRUCTURE             @64A\n                                            61598+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  201\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000388                                   61599+SMF2AFMR DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            61600+*                               TO DASD                           @64A\n                                            61601+*\n 0000038C                                   61602+SMF2AFMS DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS @64A  03-IGWSMF\n                                            61603+*                               TO DASD                           @64A\n                                            61604+*\n 00000390                                   61605+SMF2AFMT DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            61606+*                               DASD FOR THE READ  REQUESTS       @64A\n                                            61607+*\n 00000398                                   61608+SMF2AFMU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            61609+*                               DASD FOR THE WRITE REQUESTS       @64A\n                                            61610+*\n 000003A0                                   61611+SMF2AFMV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            61612+*\n 000003B0                                   61613+SMF2AFMW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            61614+*                               REQUESTS IN THIS INTERVAL (VALUE  @64A\n                                            61615+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            61616+*\n 000003B8                                   61617+SMF2AFMX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            61618+*                               THE REQUESTS IN THIS INTERVAL.    @64A\n                                            61619+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n                                            61620+*\n 000003BC                                   61621+SMF2AFMY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n                                            61622+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n                                            61623+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            61624+*                               TRANSFERRED/4K)                   @64A\n                                            61625+*\n 000003C0                                   61626+SMF2AFMZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            61627+*\n 000003C8                                   61628+SMF2AFM7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            61629+*\n                         000000A8           61630+SMF2AF1H_LEN  EQU *-SMF2AF1H                                            03-IGWSMF\n                                            61631+*\n                                            61632+*\n 000003E8                                   61633+SMF2AF1I DS   0CL168            PRE-FORMAT SEQUENTIAL ACCESS      @64A  03-IGWSMF\n                                            61634+*                               SECTION                           @64A\n                                            61635+*\n 000003E8                                   61636+SMF2AFNA DS   1FL4              COUPLE FACILITY CACHE PARTITION   @64A  03-IGWSMF\n                                            61637+*                               NUMBER                            @64A\n                                            61638+*\n 000003EC                                   61639+SMF2AFNB DS   1FL4              TOTAL NUMBER OF REQUESTS          @64A  03-IGWSMF\n                                            61640+*\n 000003F0                                   61641+SMF2AFNC DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            61642+*                               NRI - NO READ INTEGRITY           @64A\n                                            61643+*\n 000003F4                                   61644+SMF2AFND DS   1FL4              TOTAL NUMBER OF READ REQUESTS -   @64A  03-IGWSMF\n                                            61645+*                               CONSISTENT READS                  @64A\n                                            61646+*\n 000003F8                                   61647+SMF2AFNE DS   1FL4              TOTAL NUMBER OF WRITE REQUESTS    @64A  03-IGWSMF\n                                            61648+*\n 000003FC                                   61649+SMF2AFNF DS   1FL4              NUMBER OF BMF REQUESTS            @64A  03-IGWSMF\n                                            61650+*\n 00000400                                   61651+SMF2AFNG DS   1FL4              NUMBER OF BMF READ REQUESTS       @64A  03-IGWSMF\n                                            61652+*\n 00000404                                   61653+SMF2AFNH DS   1FL4              NUMBER OF BMF WRITE REQUESTS      @64A  03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  202\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           61654+*\n 00000408                                   61655+SMF2AFNI DS   1FL4              NUMBER OF BMF READ HITS           @64A  03-IGWSMF\n                                            61656+*\n 0000040C                                   61657+SMF2AFNJ DS   1FL4              NUMBER OF BMF VALID READ HITS     @64A  03-IGWSMF\n                                            61658+*\n 00000410                                   61659+SMF2AFNK DS   1FL4              NUMBER OF BMF FALSE INVALIDS      @64A  03-IGWSMF\n                                            61660+*\n 00000414                                   61661+SMF2AFNL DS   1FL4              NUMBER OF REQUESTS PROCESSED BY   @64A  03-IGWSMF\n                                            61662+*                               THE SYSPLEX CACHE MANAGER         @64A\n                                            61663+*\n 00000418                                   61664+SMF2AFNM DS   1FL4              NUMBER OF CF READ REQUESTS        @64A  03-IGWSMF\n                                            61665+*\n 0000041C                                   61666+SMF2AFNN DS   1FL4              NUMBER OF CF WRITE REQUESTS       @64A  03-IGWSMF\n                                            61667+*\n 00000420                                   61668+SMF2AFNO DS   1FL4              NUMBER OF CF READ HITS            @64A  03-IGWSMF\n                                            61669+*\n 00000424                                   61670+SMF2AFNP DS   1FL4              NUMBER OF CF READ CASTINS         @64A  03-IGWSMF\n                                            61671+*\n 00000428                                   61672+SMF2AFNQ DS   2F                NUMBER OF BYTES XFERRED INTO THE  @64A  03-IGWSMF\n                                            61673+*                               DFSMS CACHE STRUCTURE             @64A\n                                            61674+*\n 00000430                                   61675+SMF2AFNR DS   1FL4              NUMBER OF READ  REAL I/O REQUESTS @64A  03-IGWSMF\n                                            61676+*                               TO DASD                           @64A\n                                            61677+*\n 00000434                                   61678+SMF2AFNS DS   1FL4              NUMBER OF WRITE REAL I/O REQUESTS @64A  03-IGWSMF\n                                            61679+*                               TO DASD                           @64A\n                                            61680+*\n 00000438                                   61681+SMF2AFNT DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            61682+*                               DASD FOR THE READ  REQUESTS       @64A\n                                            61683+*\n 00000440                                   61684+SMF2AFNU DS   2F                NUMBER OF BYTES TRANSFERRED TO    @64A  03-IGWSMF\n                                            61685+*                               DASD FOR THE WRITE REQUESTS       @64A\n                                            61686+*\n 00000448                                   61687+SMF2AFNV DS   CL16              RESERVED                          @64A  03-IGWSMF\n                                            61688+*\n 00000458                                   61689+SMF2AFNW DS   2F                TOTAL AMOUNT OF TIME FOR ALL THE  @64A  03-IGWSMF\n                                            61690+*                               REQUESTS IN THIS INTERVAL (VALUE  @64A\n                                            61691+*                               IS EXPRESSED IN MILLI-SECONDS)    @64A\n                                            61692+*\n 00000460                                   61693+SMF2AFNX DS   1FL4              AVERAGE RESPONSE TIME FOR ALL OF  @64A  03-IGWSMF\n                                            61694+*                               THE REQUESTS IN THIS INTERVAL.    @64A\n                                            61695+*                               (TOTAL TIME/NUMBER OF REQUESTS)   @64A\n                                            61696+*\n 00000464                                   61697+SMF2AFNY DS   1FL4              NORMALIZED RESPONSE TIME FOR ALL  @64A  03-IGWSMF\n                                            61698+*                               OF THE REQUESTS IN THIS INTERVAL  @64A\n                                            61699+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            61700+*                               TRANSFERRED/4K)                   @64A\n                                            61701+*\n 00000468                                   61702+SMF2AFNZ DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            61703+*\n 00000470                                   61704+SMF2AFN7 DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            61705+*\n                         000000A8           61706+SMF2AF1I_LEN  EQU *-SMF2AF1I                                      @64A  03-IGWSMF\n                                            61707+*\n                         000002A0           61708+SMF2AF1E_LEN  EQU *-SMF2AF1E                                      @64A  03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  203\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           61709+*\n                                            61710+*\n 00000490                                   61711+SMF2AFX3 DS   0CL128            LOCKING STATISTICS SUMMARY        @64A  03-IGWSMF\n                                            61712+*\n 00000490                                   61713+SMF2AFRA DS   1FL4              NUMBER OF RECORD LOCK             @64A  03-IGWSMF\n                                            61714+*                               REQUESTS                          @64A\n                                            61715+*                               (OBTAIN/ALTER/PROMOTE)            @64A\n                                            61716+*\n 00000494                                   61717+SMF2AFRB DS   1FL4              NUMBER OF RECORD LOCK             @64A  03-IGWSMF\n                                            61718+*                               REQUESTS THAT CAUSE TRUE          @64A\n                                            61719+*                               CONTENTION                        @64A\n                                            61720+*\n 00000498                                   61721+SMF2AFRC DS   1FL4              NUMBER OF RECORD LOCK             @64A  03-IGWSMF\n                                            61722+*                               REQUESTS THAT CAUSE FALSE         @64A\n                                            61723+*                               CONTENTION                        @64A\n                                            61724+*\n 0000049C                                   61725+SMF2AFRD DS   1FL4              NUMBER OF RECORD LOCK             @64A  03-IGWSMF\n                                            61726+*                               RELEASE REQUESTS                  @64A\n                                            61727+*\n 000004A0                                   61728+SMF2AFRE DS   1FL4              NUMBER OF COMPONENT_1 TYPE        @64A  03-IGWSMF\n                                            61729+*                               LOCK REQUESTS                     @64A\n                                            61730+*\n 000004A4                                   61731+SMF2AFRF DS   1FL4              NUMBER OF COMPONENT_1 TYPE        @64A  03-IGWSMF\n                                            61732+*                               RELEASE LOCK REQUESTS             @64A\n                                            61733+*\n 000004A8                                   61734+SMF2AFRG DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            61735+*\n 000004B0                                   61736+SMF2AFRH DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61737+*                               CLASS_1 (DIWA) LOCKS              @64A\n                                            61738+*                               (OBTAIN/ALTER/PROMOTE)            @64A\n                                            61739+*\n 000004B4                                   61740+SMF2AFRI DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61741+*                               CLASS_1 (DIWA) LOCKS              @64A\n                                            61742+*                               THAT CAUSE TRUE CONTENTION        @64A\n                                            61743+*\n 000004B8                                   61744+SMF2AFRJ DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61745+*                               CLASS_1 (DIWA) LOCKS              @64A\n                                            61746+*                               THAT CAUSE FALSE CONTENTION       @64A\n                                            61747+*\n 000004BC                                   61748+SMF2AFRK DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61749+*                               CLASS_1 (DIWA) RELEASE            @64A\n                                            61750+*                               LOCK REQUESTS                     @64A\n                                            61751+*\n 000004C0                                   61752+SMF2AFRL DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61753+*                               CLASS_2 (UPGRADE) LOCKS           @64A\n                                            61754+*                               (OBTAIN/ALTER/PROMOTE)            @64A\n                                            61755+*\n 000004C4                                   61756+SMF2AFRM DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61757+*                               CLASS_2 (UPGRADE) LOCKS           @64A\n                                            61758+*                               THAT CAUSE TRUE CONTENTION        @64A\n                                            61759+*\n 000004C8                                   61760+SMF2AFRN DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61761+*                               CLASS_2 (UPGRADE) LOCKS           @64A\n                                            61762+*                               THAT CAUSE FALSE CONTENTION       @64A\n                                            61763+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  204\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000004CC                                   61764+SMF2AFRO DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61765+*                               CLASS_2 (UPGRADE) RELEASE         @64A\n                                            61766+*                               LOCK REQUESTS                     @64A\n                                            61767+*\n 000004D0                                   61768+SMF2AFRP DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61769+*                               CLASS_3 (PREFORMAT) LOCKS         @64A\n                                            61770+*                               (OBTAIN/ALTER/PROMOTE)            @64A\n                                            61771+*\n 000004D4                                   61772+SMF2AFRQ DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61773+*                               CLASS_3 (PREFORMAT) LOCKS         @64A\n                                            61774+*                               THAT CAUSE TRUE CONTENTION        @64A\n                                            61775+*\n 000004D8                                   61776+SMF2AFRR DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61777+*                               CLASS_3 (PREFORMAT) LOCKS         @64A\n                                            61778+*                               THAT CAUSE FALSE CONTENTION       @64A\n                                            61779+*\n 000004DC                                   61780+SMF2AFRS DS   1FL4              NUMBER OF COMPONENT_1             @64A  03-IGWSMF\n                                            61781+*                               CLASS_3 (PREFORMAT) RELEASE       @64A\n                                            61782+*                               LOCK REQUESTS                     @64A\n                                            61783+*\n 000004E0                                   61784+SMF2AFRT DS   1FL4              NUMBER OF COMPONENT_2             @64A  03-IGWSMF\n                                            61785+*                               LOCK REQUESTS                     @64A\n                                            61786+*                               (OBTAIN/ALTER/PROMOTE)            @64A\n                                            61787+*\n 000004E4                                   61788+SMF2AFRU DS   1FL4              NUMBER OF COMPONENT_2 LOCKS       @64A  03-IGWSMF\n                                            61789+*                               THAT CAUSE TRUE CONTENTION        @64A\n                                            61790+*\n 000004E8                                   61791+SMF2AFRV DS   1FL4              NUMBER OF COMPONENT_2 LOCKS       @64A  03-IGWSMF\n                                            61792+*                               THAT CAUSE FALSE CONTENTION       @64A\n                                            61793+*\n 000004EC                                   61794+SMF2AFRW DS   1FL4              NUMBER OF COMPONENT_2             @64A  03-IGWSMF\n                                            61795+*                               RELEASE LOCK REQUESTS             @64A\n                                            61796+*\n 000004F0                                   61797+SMF2AFRX DS   CL32              RESERVED                          @64A  03-IGWSMF\n                                            61798+*\n                         00000080           61799+SMF2AFX3_LEN  EQU *-SMF2AFX3                                      @64A  03-IGWSMF\n                                            61800+*\n                                            61801+*\n 00000510                                   61802+SMF2AFX4 DS   0CL32             THREAD LEVEL STATISTICS           @64A  03-IGWSMF\n                                            61803+*\n 00000510                                   61804+SMF2AFQR DS   2F                TOTAL TIME ALL THREAD REQUESTS    @64A  03-IGWSMF\n                                            61805+*\n 00000518                                   61806+SMF2AFQS DS   1FL4              TOTAL NUMBER OF ALL THREAD        @64A  03-IGWSMF\n                                            61807+*                               REQUESTS                          @64A\n                                            61808+*\n 0000051C                                   61809+SMF2AFQT DS   1FL4              RESERVED                          @64A  03-IGWSMF\n                                            61810+*\n 00000520                                   61811+SMF2AFQU DS   1FL4              AVERAGE RESPONSE TIME FOR         @64A  03-IGWSMF\n                                            61812+*                               ALL OF THE THREAD REQUESTS        @64A\n                                            61813+*                               IN THE INTERVAL                   @64A\n                                            61814+*                               (TOTAL TIME/NUMBER OF             @64A\n                                            61815+*                               THREAD REQUESTS)                  @64A\n                                            61816+*\n 00000524                                   61817+SMF2AFQV DS   1FL4              NORMALIZED RESPONSE TIME          @64A  03-IGWSMF\n                                            61818+*                               FOR ALL OF THE THREAD             @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  205\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           61819+*                               REQUESTS IN THE INTERVAL          @64A\n                                            61820+*                               (TOTAL TIME/NUMBER OF BYTES       @64A\n                                            61821+*                               TRANSFERRED/4K)                   @64A\n                                            61822+*\n 00000528                                   61823+SMF2AFQW DS   CL8               RESERVED                          @64A  03-IGWSMF\n                                            61824+*\n                         00000020           61825+SMF2AFX4_LEN  EQU *-SMF2AFX4                                      @64A  03-IGWSMF\n 00000530                                   61826+SMF2AFBM DS   CL16                   Lock Structure name         @P7A   03-IGWSMF\n 00000540                                   61827+SMF2AFBN DS   CL8                    Lock Set                    @P7A   03-IGWSMF\n                                            61828+*\n                         00000548           61829+SMF2A0FB_LEN  EQU *-SMF2A0FB                                      @64A  03-IGWSMF\n                                            61830+*\n                                            61831+*\n                                            61832+*   -----------------------------------------------------------------\n                                            61833+*    CF DATASET RESPONSE TIME SUMMARY (SMF42 SUBTYPE 16)\n                                            61834+*   -----------------------------------------------------------------\n 00000000                00000000 000005D0  61835+SMF420GA DSECT ,                                                        03-IGWSMF\n 00000000                                   61836+SMF42GA1 DS   0CL1472                SYSPLEX WIDE SUMMARY        @21A   03-IGWSMF\n 00000000                                   61837+SMF42GAA DS   1FL4                   INTERVAL LENGTH. THIS IS THE       03-IGWSMF\n                                            61838+*                                    TOTAL TIME OF THE MEASUREMENT\n                                            61839+*                                    PERIOD. (IN SECONDS)        @10A\n 00000004                                   61840+SMF42A00 DS   CL12                   RESERVED                    @MDK   03-IGWSMF\n                                            61841+*\n 00000010                                   61842+SMF42GAB DS   CL44                   DATA SET NAME               @10A   03-IGWSMF\n 0000003C                                   61843+SMF42A01 DS   1FL4                   RESERVED                    @10A   03-IGWSMF\n                                            61844+*\n 00000040                                   61845+SMF42GAC DS   CL44                   VSAM SPHERE NAME            @10A   03-IGWSMF\n 0000006C                                   61846+SMF42A02 DS   1FL4                   RESERVED                    @10A   03-IGWSMF\n                                            61847+*\n 00000070                                   61848+SMF42GAD DS   1FL2                   LENGTH OF THE STORAGE CLASS        03-IGWSMF\n                                            61849+*                                    NAME                        @10A\n 00000072                                   61850+SMF42GAE DS   CL30                   STORAGE CLASS NAME          @10A   03-IGWSMF\n                                            61851+*\n 00000090                                   61852+SMF42A03 DS   1FL2                   CACHESETNAME LENGTH         @10A   03-IGWSMF\n 00000092                                   61853+SMF42GAF DS   CL30                   CACHESET NAME               @10A   03-IGWSMF\n                                            61854+*\n 000000B0                                   61855+SMF42GAG DS   CL2                    RESERVED                    @10A   03-IGWSMF\n 000000B2                                   61856+SMF42GAH DS   CL30                   DFP CACHE STRUCTURE NAME    @10A   03-IGWSMF\n                                            61857+*\n 000000D0                                   61858+SMF42GAI DS   1FL4                   INDICATOR OF COMPONENT BEING       03-IGWSMF\n                                            61859+*                                    PROCESSED                   @10A\n                         80000000           61860+SMF42GAI0 EQU   X'80000000'          DATA COMPONENT              @10A   03-IGWSMF\n                         40000000           61861+SMF42GAI1 EQU   X'40000000'          INDEX COMPONENT             @10A   03-IGWSMF\n                                            61862+*                                                                @10A\n 000000D4                                   61863+SMF42GAJ DS   CL12                   INDICATES DFSMS GREATER     @P5A   03-IGWSMF\n                                            61864+*                                    THAN 4K CF CACHING STATUS   @P5A\n                                            61865+*                                    VALUES ARE ALL, NONE,       @P5A\n                                            61866+*                                    UPDATESONLY, GT4KNOTACT     @P5A\n 000000E0                                   61867+SMF42GAK DS   1FL4                   NUMBER OF LOCK REQUESTS            03-IGWSMF\n                                            61868+*                                    PROCESSED                   @10A\n 000000E4                                   61869+SMF42GAL DS   1FL4                   NUMBER OF TRUE CONTENTION          03-IGWSMF\n                                            61870+*                                    LOCK REQUESTS               @10A\n 000000E8                                   61871+SMF42GAM DS   1FL4                   NUMBER OF FALSE CONTENTION         03-IGWSMF\n                                            61872+*                                    LOCK REQUESTS               @10A\n 000000EC                                   61873+SMF42GZ1 DS   1FL2                   SMSDIRECTWEIGHT             @10A   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  206\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000000EE                                   61874+SMF42GZ2 DS   1FL2                   SMSSEQUENTIALWEIGHT         @10A   03-IGWSMF\n                                            61875+*\n 000000F0                                   61876+SMF42GAN DS   CL8              IN DFSMS 1.4   WLM SERV CLASS NAME@10A   03-IGWSMF\n 000000F8                                   61877+SMF42GAO DS   CL8              IN DFSMS 1.4   WLM REPORT CLS NAME@10A   03-IGWSMF\n                                            61878+*\n 00000100                                   61879+SMF42GAP DS   CL16                   SMS DATACLASS NAME          @P5A   03-IGWSMF\n                                            61880+*\n 00000110                                   61881+SMF42GA2 DS   0CL336                 DIRECT ACCESS SUMMARY SECTION      03-IGWSMF\n                                            61882+*                                                                @10A\n 00000110                                   61883+SMF42GA3 DS   0CL168                 NORMAL DIRECT ACCESS SUMMARY       03-IGWSMF\n                                            61884+*                                    SECTION                     @10A\n 00000110                                   61885+SMF42GCA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            61886+*                                    NUMBER                      @10A\n 00000114                                   61887+SMF42GCB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            61888+*                                                                @10A\n 00000118                                   61889+SMF42GCC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61890+*                                    NRI - NO READ INTEGRITY\n                                            61891+*                                                                @10A\n 0000011C                                   61892+SMF42GCD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61893+*                                    CONSISTENT READS   @10A\n                                            61894+*\n 00000120                                   61895+SMF42GCE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            61896+*                                                                @10A\n 00000124                                   61897+SMF42GCF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            61898+*                                                                @10A\n 00000128                                   61899+SMF42GCG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            61900+*                                                                @10A\n 0000012C                                   61901+SMF42GCH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            61902+*                                                                @10A\n                                            61903+*\n 00000130                                   61904+SMF42GCI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            61905+*                                                                @10A\n 00000134                                   61906+SMF42GCJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            61907+*                                                                @10A\n 00000138                                   61908+SMF42GCK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            61909+*                                                                @10A\n 0000013C                                   61910+SMF42GCL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            61911+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            61912+*\n 00000140                                   61913+SMF42GCM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            61914+*                                                                @10A\n 00000144                                   61915+SMF42GCN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000148                                   61916+SMF42GCO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 0000014C                                   61917+SMF42GCP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000150                                   61918+SMF42GCQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            61919+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            61920+*                                                                @10A\n 00000158                                   61921+SMF42GCR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            61922+*                                    TO DASD.                    @10A\n 0000015C                                   61923+SMF42GCS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            61924+*                                    TO DASD.                    @10A\n 00000160                                   61925+SMF42GCT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            61926+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            61927+*                                                                @10A\n 00000168                                   61928+SMF42GCU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  207\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           61929+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            61930+*                                                                @10A\n 00000170                                   61931+SMF42GCV DS   CL16                   RESERVED                           03-IGWSMF\n                                            61932+*                                                                @10A\n 00000180                                   61933+SMF42GCW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            61934+*                                    REQUESTS IN THIS\n                                            61935+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            61936+*                                    IN milli-seconds)           @21A\n                                            61937+*\n 00000188                                   61938+SMF42GCX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            61939+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            61940+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            61941+*                                                                @10A\n 0000018C                                   61942+SMF42GCY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            61943+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            61944+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            61945+*                                    TRANSFERRED/4K)             @10A\n 00000190                                   61946+SMF42GCZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000198                                   61947+SMF42GC7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            61948+*\n                         000000A8           61949+SMF42GA3_LEN  EQU *-SMF42GA3                                     @10A   03-IGWSMF\n                                            61950+*\n 000001B8                                   61951+SMF42GA4 DS   0CL168                 RE-DO DURING DIRECT ACCESS         03-IGWSMF\n                                            61952+*                                    SECTION                     @10A\n 000001B8                                   61953+SMF42GDA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            61954+*                                    NUMBER                      @10A\n 000001BC                                   61955+SMF42GDB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            61956+*                                                                @10A\n 000001C0                                   61957+SMF42GDC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61958+*                                    NRI - NO READ INTEGRITY\n                                            61959+*                                                                @10A\n 000001C4                                   61960+SMF42GDD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            61961+*                                    CONSISTENT READS   @10A\n                                            61962+*\n 000001C8                                   61963+SMF42GDE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            61964+*                                                                @10A\n 000001CC                                   61965+SMF42GDF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            61966+*                                                                @10A\n 000001D0                                   61967+SMF42GDG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            61968+*                                                                @10A\n 000001D4                                   61969+SMF42GDH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            61970+*                                                                @10A\n                                            61971+*\n 000001D8                                   61972+SMF42GDI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            61973+*                                                                @10A\n 000001DC                                   61974+SMF42GDJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            61975+*                                                                @10A\n 000001E0                                   61976+SMF42GDK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            61977+*                                                                @10A\n 000001E4                                   61978+SMF42GDL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            61979+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            61980+*\n 000001E8                                   61981+SMF42GDM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            61982+*                                                                @10A\n 000001EC                                   61983+SMF42GDN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  208\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000001F0                                   61984+SMF42GDO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 000001F4                                   61985+SMF42GDP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 000001F8                                   61986+SMF42GDQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            61987+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            61988+*                                                                @10A\n 00000200                                   61989+SMF42GDR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            61990+*                                    TO DASD.                    @10A\n 00000204                                   61991+SMF42GDS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            61992+*                                    TO DASD.                    @10A\n 00000208                                   61993+SMF42GDT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            61994+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            61995+*                                                                @10A\n 00000210                                   61996+SMF42GDU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            61997+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            61998+*                                                                @10A\n 00000218                                   61999+SMF42GDV DS   CL16                   RESERVED                           03-IGWSMF\n                                            62000+*                                                                @10A\n 00000228                                   62001+SMF42GDW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            62002+*                                    REQUESTS IN THIS\n                                            62003+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            62004+*                                    IN milli-seconds)           @21A\n                                            62005+*\n 00000230                                   62006+SMF42GDX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            62007+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            62008+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            62009+*                                                                @10A\n 00000234                                   62010+SMF42GDY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            62011+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            62012+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            62013+*                                    TRANSFERRED/4K)             @10A\n 00000238                                   62014+SMF42GDZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000240                                   62015+SMF42GD7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            62016+*\n                         000000A8           62017+SMF42GA4_LEN  EQU *-SMF42GA4                                     @10A   03-IGWSMF\n                         00000150           62018+SMF42GA2_LEN  EQU *-SMF42GA2                                     @10A   03-IGWSMF\n                                            62019+*\n 00000260                                   62020+SMF42GA5 DS   0CL800                 SEQUENTIAL ACCESS SUMMARY SECTION  03-IGWSMF\n                                            62021+*                                                                @10A\n 00000260                                   62022+SMF42GA6 DS   0CL168                 NORMAL SEQUENTIAL ACCESS SECTION   03-IGWSMF\n                                            62023+*                                                                @10A\n 00000260                                   62024+SMF42GEA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            62025+*                                    NUMBER                      @10A\n 00000264                                   62026+SMF42GEB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            62027+*                                                                @10A\n 00000268                                   62028+SMF42GEC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62029+*                                    NRI - NO READ INTEGRITY\n                                            62030+*                                                                @10A\n 0000026C                                   62031+SMF42GED DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62032+*                                    CONSISTENT READS   @10A\n                                            62033+*\n 00000270                                   62034+SMF42GEE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            62035+*                                                                @10A\n 00000274                                   62036+SMF42GEF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            62037+*                                                                @10A\n 00000278                                   62038+SMF42GEG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  209\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           62039+*                                                                @10A\n 0000027C                                   62040+SMF42GEH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            62041+*                                                                @10A\n                                            62042+*\n 00000280                                   62043+SMF42GEI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            62044+*                                                                @10A\n 00000284                                   62045+SMF42GEJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            62046+*                                                                @10A\n 00000288                                   62047+SMF42GEK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            62048+*                                                                @10A\n 0000028C                                   62049+SMF42GEL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            62050+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            62051+*\n 00000290                                   62052+SMF42GEM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            62053+*                                                                @10A\n 00000294                                   62054+SMF42GEN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000298                                   62055+SMF42GEO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 0000029C                                   62056+SMF42GEP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 000002A0                                   62057+SMF42GEQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            62058+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            62059+*                                                                @10A\n 000002A8                                   62060+SMF42GER DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            62061+*                                    TO DASD.                    @10A\n 000002AC                                   62062+SMF42GES DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            62063+*                                    TO DASD.                    @10A\n 000002B0                                   62064+SMF42GET DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62065+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            62066+*                                                                @10A\n 000002B8                                   62067+SMF42GEU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62068+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            62069+*                                                                @10A\n 000002C0                                   62070+SMF42GEV DS   CL16                   RESERVED                           03-IGWSMF\n                                            62071+*                                                                @10A\n 000002D0                                   62072+SMF42GEW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            62073+*                                    REQUESTS IN THIS\n                                            62074+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            62075+*                                    IN milli-seconds)           @21A\n                                            62076+*\n 000002D8                                   62077+SMF42GEX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            62078+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            62079+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            62080+*                                                                @10A\n 000002DC                                   62081+SMF42GEY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            62082+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            62083+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            62084+*                                    TRANSFERRED/4K)             @10A\n                                            62085+*\n 000002E0                                   62086+SMF42GEZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000002E8                                   62087+SMF42GE7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            62088+*\n                         000000A8           62089+SMF42GA6_LEN  EQU *-SMF42GA6                                            03-IGWSMF\n                                            62090+*\n 00000308                                   62091+SMF42GA7 DS   0CL168                 RE-DO DURING SEQUENTIAL ACCESS     03-IGWSMF\n                                            62092+*                                    SECTION                     @10A\n 00000308                                   62093+SMF42GFA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  210\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           62094+*                                    NUMBER                      @10A\n 0000030C                                   62095+SMF42GFB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            62096+*                                                                @10A\n 00000310                                   62097+SMF42GFC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62098+*                                    NRI - NO READ INTEGRITY\n                                            62099+*                                                                @10A\n 00000314                                   62100+SMF42GFD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62101+*                                    CONSISTENT READS   @10A\n                                            62102+*\n 00000318                                   62103+SMF42GFE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            62104+*                                                                @10A\n 0000031C                                   62105+SMF42GFF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            62106+*                                                                @10A\n 00000320                                   62107+SMF42GFG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            62108+*                                                                @10A\n 00000324                                   62109+SMF42GFH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            62110+*                                                                @10A\n                                            62111+*\n 00000328                                   62112+SMF42GFI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            62113+*                                                                @10A\n 0000032C                                   62114+SMF42GFJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            62115+*                                                                @10A\n 00000330                                   62116+SMF42GFK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            62117+*                                                                @10A\n 00000334                                   62118+SMF42GFL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            62119+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            62120+*\n 00000338                                   62121+SMF42GFM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            62122+*                                                                @10A\n 0000033C                                   62123+SMF42GFN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000340                                   62124+SMF42GFO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 00000344                                   62125+SMF42GFP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000348                                   62126+SMF42GFQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            62127+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            62128+*                                                                @10A\n 00000350                                   62129+SMF42GFR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            62130+*                                    TO DASD.                    @10A\n 00000354                                   62131+SMF42GFS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            62132+*                                    TO DASD.                    @10A\n 00000358                                   62133+SMF42GFT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62134+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            62135+*                                                                @10A\n 00000360                                   62136+SMF42GFU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62137+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            62138+*                                                                @10A\n 00000368                                   62139+SMF42GFV DS   CL16                   RESERVED                           03-IGWSMF\n                                            62140+*                                                                @10A\n 00000378                                   62141+SMF42GFW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            62142+*                                    REQUESTS IN THIS\n                                            62143+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            62144+*                                    IN milli-seconds)           @21A\n                                            62145+*\n 00000380                                   62146+SMF42GFX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            62147+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            62148+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  211\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           62149+*                                                                @10A\n 00000384                                   62150+SMF42GFY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            62151+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            62152+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            62153+*                                    TRANSFERRED/4K)             @10A\n                                            62154+*\n 00000388                                   62155+SMF42GFZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000390                                   62156+SMF42GF7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            62157+*\n                         000000A8           62158+SMF42GA7_LEN  EQU *-SMF42GA7                                            03-IGWSMF\n                                            62159+*\n 000003B0                                   62160+SMF42GA8 DS   0CL168                 READ-A-HEAD SEQUENTIAL ACCESS      03-IGWSMF\n                                            62161+*                                    SECTION                     @10A\n 000003B0                                   62162+SMF42GGA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            62163+*                                    NUMBER                      @10A\n 000003B4                                   62164+SMF42GGB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            62165+*                                                                @10A\n 000003B8                                   62166+SMF42GGC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62167+*                                    NRI - NO READ INTEGRITY\n                                            62168+*                                                                @10A\n 000003BC                                   62169+SMF42GGD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62170+*                                    CONSISTENT READS   @10A\n                                            62171+*\n 000003C0                                   62172+SMF42GGE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            62173+*                                                                @10A\n 000003C4                                   62174+SMF42GGF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            62175+*                                                                @10A\n 000003C8                                   62176+SMF42GGG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            62177+*                                                                @10A\n 000003CC                                   62178+SMF42GGH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            62179+*                                                                @10A\n                                            62180+*\n 000003D0                                   62181+SMF42GGI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            62182+*                                                                @10A\n 000003D4                                   62183+SMF42GGJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            62184+*                                                                @10A\n 000003D8                                   62185+SMF42GGK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            62186+*                                                                @10A\n 000003DC                                   62187+SMF42GGL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            62188+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            62189+*\n 000003E0                                   62190+SMF42GGM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            62191+*                                                                @10A\n 000003E4                                   62192+SMF42GGN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 000003E8                                   62193+SMF42GGO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 000003EC                                   62194+SMF42GGP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 000003F0                                   62195+SMF42GGQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            62196+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            62197+*                                                                @10A\n 000003F8                                   62198+SMF42GGR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            62199+*                                    TO DASD.                    @10A\n 000003FC                                   62200+SMF42GGS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            62201+*                                    TO DASD.                    @10A\n 00000400                                   62202+SMF42GGT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62203+*                                    DASD FOR THE READ  REQUESTS @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  212\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           62204+*                                                                @10A\n 00000408                                   62205+SMF42GGU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62206+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            62207+*                                                                @10A\n 00000410                                   62208+SMF42GGV DS   CL16                   RESERVED                           03-IGWSMF\n                                            62209+*                                                                @10A\n 00000420                                   62210+SMF42GGW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            62211+*                                    REQUESTS IN THIS\n                                            62212+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            62213+*                                    IN milli-seconds)           @21A\n                                            62214+*\n 00000428                                   62215+SMF42GGX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            62216+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            62217+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            62218+*                                                                @10A\n 0000042C                                   62219+SMF42GGY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            62220+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            62221+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            62222+*                                    TRANSFERRED/4K)             @10A\n                                            62223+*\n 00000430                                   62224+SMF42GGZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000438                                   62225+SMF42GG7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            62226+*\n                         000000A8           62227+SMF42GA8_LEN  EQU *-SMF42GA8                                            03-IGWSMF\n                                            62228+*\n 00000458                                   62229+SMF42GA9 DS   0CL168                 PRE-FORMAT SEQUENTIAL ACCESS       03-IGWSMF\n                                            62230+*                                    SECTION                     @10A\n 00000458                                   62231+SMF42GHA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            62232+*                                    NUMBER                      @10A\n 0000045C                                   62233+SMF42GHB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            62234+*                                                                @10A\n 00000460                                   62235+SMF42GHC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62236+*                                    NRI - NO READ INTEGRITY\n                                            62237+*                                                                @10A\n 00000464                                   62238+SMF42GHD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62239+*                                    CONSISTENT READS   @10A\n                                            62240+*\n 00000468                                   62241+SMF42GHE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            62242+*                                                                @10A\n 0000046C                                   62243+SMF42GHF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            62244+*                                                                @10A\n 00000470                                   62245+SMF42GHG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            62246+*                                                                @10A\n 00000474                                   62247+SMF42GHH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            62248+*                                                                @10A\n                                            62249+*\n 00000478                                   62250+SMF42GHI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            62251+*                                                                @10A\n 0000047C                                   62252+SMF42GHJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            62253+*                                                                @10A\n 00000480                                   62254+SMF42GHK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            62255+*                                                                @10A\n 00000484                                   62256+SMF42GHL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            62257+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            62258+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  213\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000488                                   62259+SMF42GHM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            62260+*                                                                @10A\n 0000048C                                   62261+SMF42GHN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000490                                   62262+SMF42GHO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 00000494                                   62263+SMF42GHP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000498                                   62264+SMF42GHQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            62265+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            62266+*                                                                @10A\n 000004A0                                   62267+SMF42GHR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            62268+*                                    TO DASD.                    @10A\n 000004A4                                   62269+SMF42GHS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            62270+*                                    TO DASD.                    @10A\n 000004A8                                   62271+SMF42GHT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62272+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            62273+*                                                                @10A\n 000004B0                                   62274+SMF42GHU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62275+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            62276+*                                                                @10A\n 000004B8                                   62277+SMF42GHV DS   CL16                   RESERVED                           03-IGWSMF\n                                            62278+*                                                                @10A\n 000004C8                                   62279+SMF42GHW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            62280+*                                    REQUESTS IN THIS\n                                            62281+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            62282+*                                    IN milli-seconds)           @21A\n                                            62283+*\n 000004D0                                   62284+SMF42GHX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            62285+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            62286+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            62287+*                                                                @10A\n 000004D4                                   62288+SMF42GHY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            62289+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            62290+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            62291+*                                    TRANSFERRED/4K)             @10A\n                                            62292+*\n 000004D8                                   62293+SMF42GHZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000004E0                                   62294+SMF42GH7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            62295+*\n                         000000A8           62296+SMF42GA9_LEN  EQU *-SMF42GA9                                            03-IGWSMF\n                         000002A0           62297+SMF42GA5_LEN  EQU *-SMF42GA5                                            03-IGWSMF\n                                            62298+*\n 00000500                                   62299+SMF42FX5 DS   0CL128                 LOCKING STATISTICS SUMMARY  @10A   03-IGWSMF\n 00000500                                   62300+SMF42GPA DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            62301+*                                    REQUESTS                    @10A\n                                            62302+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000504                                   62303+SMF42GPB DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            62304+*                                    REQUESTS THAT CAUSE TRUE    @10A\n                                            62305+*                                    CONTENTION                  @10A\n 00000508                                   62306+SMF42GPC DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            62307+*                                    REQUESTS THAT CAUSE FALSE   @10A\n                                            62308+*                                    CONTENTION                  @10A\n 0000050C                                   62309+SMF42GPD DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            62310+*                                    RELEASE REQUESTS            @10A\n 00000510                                   62311+SMF42GPE DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n                                            62312+*                                    LOCK REQUESTS               @10A\n 00000514                                   62313+SMF42GPF DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  214\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           62314+*                                    RELEASE LOCK REQUESTS       @10A\n 00000518                                   62315+SMF42GPG DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000520                                   62316+SMF42GPH DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62317+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            62318+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000524                                   62319+SMF42GPI DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62320+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            62321+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 00000528                                   62322+SMF42GPJ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62323+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            62324+*                                    THAT CAUSE FALSE CONTENTION @10A\n 0000052C                                   62325+SMF42GPK DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62326+*                                    CLASS_1 (DIWA) RELEASE      @10A\n                                            62327+*                                    LOCK REQUESTS               @10A\n 00000530                                   62328+SMF42GPL DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62329+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            62330+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000534                                   62331+SMF42GPM DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62332+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            62333+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 00000538                                   62334+SMF42GPN DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62335+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            62336+*                                    THAT CAUSE FALSE CONTENTION @10A\n 0000053C                                   62337+SMF42GPO DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62338+*                                    CLASS_2 (UPGRADE) RELEASE   @10A\n                                            62339+*                                    LOCK REQUESTS               @10A\n 00000540                                   62340+SMF42GPP DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62341+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            62342+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000544                                   62343+SMF42GPQ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62344+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            62345+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 00000548                                   62346+SMF42GPR DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62347+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            62348+*                                    THAT CAUSE FALSE CONTENTION @10A\n 0000054C                                   62349+SMF42GPS DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62350+*                                    CLASS_3 (PREFORMAT) RELEASE @10A\n                                            62351+*                                    LOCK REQUESTS               @10A\n 00000550                                   62352+SMF42GPT DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n                                            62353+*                                    LOCK REQUESTS               @10A\n                                            62354+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000554                                   62355+SMF42GPU DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            62356+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 00000558                                   62357+SMF42GPV DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            62358+*                                    THAT CAUSE FALSE CONTENTION @10A\n 0000055C                                   62359+SMF42GPW DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n                                            62360+*                                    RELEASE LOCK REQUESTS       @10A\n 00000560                                   62361+SMF42GPX DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            62362+*                                                                @10A\n                         00000080           62363+SMF42FX5_LEN  EQU *-SMF42FX5                                     @10A   03-IGWSMF\n                                            62364+*\n 00000580                                   62365+SMF42FX7 DS   0CL64                  DATASET BMF LRU STATS       @21A   03-IGWSMF\n 00000580                                   62366+SMF42GRA DS   1FL4                   NUMBER OF REDOS             @21A   03-IGWSMF\n 00000584                                   62367+SMF42GRB DS   1FL4                   NUMBER OF RECURSIVE REDOS   @21A   03-IGWSMF\n 00000588                                   62368+SMF42GRC DS   1FL4                   NUMBER OF BMF WRITES        @21A   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  215\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000058C                                   62369+SMF42GRD DS   1FL4                   NUMBER OF SCM READ REQUESTS @21A   03-IGWSMF\n 00000590                                   62370+SMF42GRE DS   1FL4                   NUMBER OF SCM READ REQUESTS @21A   03-IGWSMF\n                                            62371+*                                    THAT ENCOUNTERED CASTOUT    @21A\n                                            62372+*                                    LOCK CONTENTION             @21A\n 00000594                                   62373+SMF42GRG DS   1FL4                   REDO PERCENT                @21A   03-IGWSMF\n 00000598                                   62374+SMF42GRH DS   1FL4                   RECURSIVE REDO PERCENT      @21A   03-IGWSMF\n 0000059C                                   62375+SMF42GRI DS   1FL4                   SCM CASTOUT LOCK PERCENT    @21A   03-IGWSMF\n 000005A0                                   62376+SMF42GRF DS   CL8                    RESERVED                    @28C   03-IGWSMF\n 000005A8                                   62377+SMF42GRW DS   1FL4                   LCDLATCH CONTENTION COUNT   @28A   03-IGWSMF\n 000005AC                                   62378+SMF42GRJ DS   1FL4                   TOTAL NUMBER OF CF READ     @29C   03-IGWSMF\n                                            62379+*                                    REQUESTS WHICH ENCOUNTERED  @29A\n                                            62380+*                                    RETRIES FOR CAST OUT LOCKS  @29A\n 000005B0                                   62381+SMF42GRK DS   CL16                   RESERVED                    @21A   03-IGWSMF\n                                            62382+*                                                                @21A\n                         00000040           62383+SMF42FX7_LEN  EQU *-SMF42FX7                                     @21A   03-IGWSMF\n 000005C0                                   62384+SMF42GAQ DS   CL16                   LOCK STRUCTURE NAME         @L3A   03-IGWSMF\n                                            62385+*                                                                @L3A\n                         000005D0           62386+SMF420GA_LEN  EQU *-SMF420GA                                     @10A   03-IGWSMF\n                                            62387+*\n 00000000                00000000 000005E0  62388+SMF420GB DSECT ,                                                        03-IGWSMF\n 00000000                                   62389+SMF42G1A DS   0CL1488                DATA SET/MVS SYSTEM SUMMARY @21A   03-IGWSMF\n                                            62390+*                                    SECTION                     @21C\n 00000000                                   62391+SMF42GBA DS   1FL4                   INTERVAL LENGTH. THIS IS THE       03-IGWSMF\n                                            62392+*                                    TOTAL TIME OF THE MEASUREMENT\n                                            62393+*                                    PERIOD. (IN SECONDS)        @10A\n 00000004                                   62394+SMF42A05 DS   CL12                   RESERVED                    @10A   03-IGWSMF\n                                            62395+*\n 00000010                                   62396+SMF42GBB DS   CL44                   DATA SET NAME               @10A   03-IGWSMF\n 0000003C                                   62397+SMF42A06 DS   1FL4                   RESERVED                    @10A   03-IGWSMF\n                                            62398+*\n 00000040                                   62399+SMF42GBC DS   CL44                   VSAM SPHERE NAME            @10A   03-IGWSMF\n 0000006C                                   62400+SMF42A07 DS   1FL4                   RESERVED                    @10A   03-IGWSMF\n                                            62401+*\n 00000070                                   62402+SMF42GBD DS   1FL2                   LENGTH OF THE STORAGE CLASS        03-IGWSMF\n                                            62403+*                                    NAME                        @10A\n 00000072                                   62404+SMF42GBE DS   CL30                   STORAGE CLASS NAME          @10A   03-IGWSMF\n                                            62405+*\n 00000090                                   62406+SMF42A08 DS   1FL2                   CACHESETNAME LENGTH         @10A   03-IGWSMF\n 00000092                                   62407+SMF42GBF DS   CL30                   CACHESET NAME               @10A   03-IGWSMF\n                                            62408+*\n 000000B0                                   62409+SMF42A12 DS   1FL2                   RESERVED                    @10A   03-IGWSMF\n 000000B2                                   62410+SMF42GBG DS   CL30                   DFP CACHE STRUCTURE NAME    @10A   03-IGWSMF\n                                            62411+*\n 000000D0                                   62412+SMF42GBH DS   CL8                    MVS SYSTEM NAME             @10A   03-IGWSMF\n 000000D8                                   62413+SMF42A11 DS   CL8                    RESERVED                    @10A   03-IGWSMF\n                                            62414+*\n 000000E0                                   62415+SMF42GBI DS   1FL4                   INDICATOR OF COMPONENT BEING       03-IGWSMF\n                                            62416+*                                    PROCESSED                   @10A\n                         80000000           62417+SMF42GBI0 EQU   X'80000000'          DATA COMPONENT              @10A   03-IGWSMF\n                         40000000           62418+SMF42GBI1 EQU   X'40000000'          INDEX COMPONENT             @10A   03-IGWSMF\n 000000E4                                   62419+SMF42A09 DS   CL12                   INDICATES DFSMS GREATER     @P5A   03-IGWSMF\n                                            62420+*                                    THAN 4K CF CACHING STATUS   @P5A\n                                            62421+*                                    VALUES ARE ALL, NONE,       @P5A\n                                            62422+*                                    UPDATESONLY, GT4KNOTACT     @P5A\n 000000F0                                   62423+SMF42GBK DS   1FL4                   NUMBER OF LOCK REQUESTS            03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  216\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           62424+*                                    PROCESSED                   @10A\n 000000F4                                   62425+SMF42GBL DS   1FL4                   NUMBER OF TRUE CONTENTION          03-IGWSMF\n                                            62426+*                                    LOCK REQUESTS               @10A\n 000000F8                                   62427+SMF42GBM DS   1FL4                   NUMBER OF FALSE CONTENTION         03-IGWSMF\n                                            62428+*                                    LOCK REQUESTS               @10A\n 000000FC                                   62429+SMF42GZ8 DS   1FL2                   SMSDIRECTWEIGHT             @10A   03-IGWSMF\n 000000FE                                   62430+SMF42GZ9 DS   1FL2                   SMSSEQUENTIALWEIGHT         @10A   03-IGWSMF\n                                            62431+*\n 00000100                                   62432+SMF42GBN DS   CL8              IN DFSMS 1.4   WLM SERV CLASS NAME@10A   03-IGWSMF\n 00000108                                   62433+SMF42GBO DS   CL8              IN DFSMS 1.4   WLM REPORT CLS NAME@10A   03-IGWSMF\n                                            62434+*\n 00000110                                   62435+SMF42GBP DS   CL16                   SMS DATACLASS NAME          @P5A   03-IGWSMF\n                                            62436+*\n 00000120                                   62437+SMF42G1B DS   0CL336                 DIRECT ACCESS SUMMARY SECTION      03-IGWSMF\n                                            62438+*                                                                @10A\n 00000120                                   62439+SMF42G1C DS   0CL168                 NORMAL DIRECT ACCESS SUMMARY       03-IGWSMF\n                                            62440+*                                    SECTION                     @10A\n 00000120                                   62441+SMF42GIA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            62442+*                                    NUMBER                      @10A\n 00000124                                   62443+SMF42GIB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            62444+*                                                                @10A\n 00000128                                   62445+SMF42GIC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62446+*                                    NRI - NO READ INTEGRITY\n                                            62447+*                                                                @10A\n 0000012C                                   62448+SMF42GID DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62449+*                                    CONSISTENT READS   @10A\n                                            62450+*\n 00000130                                   62451+SMF42GIE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            62452+*                                                                @10A\n 00000134                                   62453+SMF42GIF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            62454+*                                                                @10A\n 00000138                                   62455+SMF42GIG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            62456+*                                                                @10A\n 0000013C                                   62457+SMF42GIH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            62458+*                                                                @10A\n                                            62459+*\n 00000140                                   62460+SMF42GII DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            62461+*                                                                @10A\n 00000144                                   62462+SMF42GIJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            62463+*                                                                @10A\n 00000148                                   62464+SMF42GIK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            62465+*                                                                @10A\n 0000014C                                   62466+SMF42GIL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            62467+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            62468+*\n 00000150                                   62469+SMF42GIM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            62470+*                                                                @10A\n 00000154                                   62471+SMF42GIN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000158                                   62472+SMF42GIO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 0000015C                                   62473+SMF42GIP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000160                                   62474+SMF42GIQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            62475+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            62476+*                                                                @10A\n 00000168                                   62477+SMF42GIR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            62478+*                                    TO DASD.                    @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  217\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000016C                                   62479+SMF42GIS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            62480+*                                    TO DASD.                    @10A\n 00000170                                   62481+SMF42GIT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62482+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            62483+*                                                                @10A\n 00000178                                   62484+SMF42GIU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62485+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            62486+*                                                                @10A\n 00000180                                   62487+SMF42GIV DS   CL16                   RESERVED                           03-IGWSMF\n                                            62488+*                                                                @10A\n 00000190                                   62489+SMF42GIW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            62490+*                                    REQUESTS IN THIS\n                                            62491+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            62492+*                                    IN milli-seconds)           @21A\n                                            62493+*\n 00000198                                   62494+SMF42GIX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            62495+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            62496+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            62497+*                                                                @10A\n 0000019C                                   62498+SMF42GIY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            62499+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            62500+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            62501+*                                    TRANSFERRED/4K)             @10A\n                                            62502+*\n 000001A0                                   62503+SMF42GIZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000001A8                                   62504+SMF42GI7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            62505+*\n                         000000A8           62506+SMF42G1C_LEN  EQU *-SMF42G1C                                     @10A   03-IGWSMF\n                                            62507+*\n 000001C8                                   62508+SMF42G1D DS   0CL168                 RE-DO DURING DIRECT ACCESS         03-IGWSMF\n                                            62509+*                                    SECTION                     @10A\n 000001C8                                   62510+SMF42GJA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            62511+*                                    NUMBER                      @10A\n 000001CC                                   62512+SMF42GJB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            62513+*                                                                @10A\n 000001D0                                   62514+SMF42GJC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62515+*                                    NRI - NO READ INTEGRITY\n                                            62516+*                                                                @10A\n 000001D4                                   62517+SMF42GJD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62518+*                                    CONSISTENT READS   @10A\n                                            62519+*\n 000001D8                                   62520+SMF42GJE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            62521+*                                                                @10A\n 000001DC                                   62522+SMF42GJF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            62523+*                                                                @10A\n 000001E0                                   62524+SMF42GJG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            62525+*                                                                @10A\n 000001E4                                   62526+SMF42GJH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            62527+*                                                                @10A\n                                            62528+*\n 000001E8                                   62529+SMF42GJI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            62530+*                                                                @10A\n 000001EC                                   62531+SMF42GJJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            62532+*                                                                @10A\n 000001F0                                   62533+SMF42GJK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  218\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           62534+*                                                                @10A\n 000001F4                                   62535+SMF42GJL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            62536+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            62537+*\n 000001F8                                   62538+SMF42GJM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            62539+*                                                                @10A\n 000001FC                                   62540+SMF42GJN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000200                                   62541+SMF42GJO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 00000204                                   62542+SMF42GJP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000208                                   62543+SMF42GJQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            62544+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            62545+*                                                                @10A\n 00000210                                   62546+SMF42GJR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            62547+*                                    TO DASD.                    @10A\n 00000214                                   62548+SMF42GJS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            62549+*                                    TO DASD.                    @10A\n 00000218                                   62550+SMF42GJT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62551+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            62552+*                                                                @10A\n 00000220                                   62553+SMF42GJU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62554+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            62555+*                                                                @10A\n 00000228                                   62556+SMF42GJV DS   CL16                   RESERVED                           03-IGWSMF\n                                            62557+*                                                                @10A\n 00000238                                   62558+SMF42GJW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            62559+*                                    REQUESTS IN THIS\n                                            62560+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            62561+*                                    IN milli-seconds)           @21A\n                                            62562+*\n 00000240                                   62563+SMF42GJX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            62564+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            62565+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            62566+*                                                                @10A\n 00000244                                   62567+SMF42GJY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            62568+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            62569+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            62570+*                                    TRANSFERRED/4K)             @10A\n                                            62571+*\n 00000248                                   62572+SMF42GJZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000250                                   62573+SMF42GJ7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            62574+*\n                         000000A8           62575+SMF42G1D_LEN  EQU *-SMF42G1D                                     @10A   03-IGWSMF\n                         00000150           62576+SMF42G1B_LEN  EQU *-SMF42G1B                                     @10A   03-IGWSMF\n                                            62577+*\n 00000270                                   62578+SMF42G1E DS   0CL800                 SEQUENTIAL ACCESS SUMMARY SECTION  03-IGWSMF\n                                            62579+*                                                                @10A\n 00000270                                   62580+SMF42G1F DS   0CL168                 NORMAL SEQUENTIAL ACCESS SECTION   03-IGWSMF\n                                            62581+*                                                                @10A\n 00000270                                   62582+SMF42GKA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            62583+*                                    NUMBER                      @10A\n 00000274                                   62584+SMF42GKB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            62585+*                                                                @10A\n 00000278                                   62586+SMF42GKC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62587+*                                    NRI - NO READ INTEGRITY\n                                            62588+*                                                                @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  219\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000027C                                   62589+SMF42GKD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62590+*                                    CONSISTENT READS   @10A\n                                            62591+*\n 00000280                                   62592+SMF42GKE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            62593+*                                                                @10A\n 00000284                                   62594+SMF42GKF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            62595+*                                                                @10A\n 00000288                                   62596+SMF42GKG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            62597+*                                                                @10A\n 0000028C                                   62598+SMF42GKH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            62599+*                                                                @10A\n                                            62600+*\n 00000290                                   62601+SMF42GKI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            62602+*                                                                @10A\n 00000294                                   62603+SMF42GKJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            62604+*                                                                @10A\n 00000298                                   62605+SMF42GKK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            62606+*                                                                @10A\n 0000029C                                   62607+SMF42GKL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            62608+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            62609+*\n 000002A0                                   62610+SMF42GKM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            62611+*                                                                @10A\n 000002A4                                   62612+SMF42GKN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 000002A8                                   62613+SMF42GKO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 000002AC                                   62614+SMF42GKP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 000002B0                                   62615+SMF42GKQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            62616+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            62617+*                                                                @10A\n 000002B8                                   62618+SMF42GKR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            62619+*                                    TO DASD.                    @10A\n 000002BC                                   62620+SMF42GKS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            62621+*                                    TO DASD.                    @10A\n 000002C0                                   62622+SMF42GKT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62623+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            62624+*                                                                @10A\n 000002C8                                   62625+SMF42GKU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62626+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            62627+*                                                                @10A\n 000002D0                                   62628+SMF42GKV DS   CL16                   RESERVED                           03-IGWSMF\n                                            62629+*                                                                @10A\n 000002E0                                   62630+SMF42GKW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            62631+*                                    REQUESTS IN THIS\n                                            62632+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            62633+*                                    IN milli-seconds)           @21A\n                                            62634+*\n 000002E8                                   62635+SMF42GKX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            62636+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            62637+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            62638+*                                                                @10A\n 000002EC                                   62639+SMF42GKY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            62640+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            62641+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            62642+*                                    TRANSFERRED/4K)             @10A\n                                            62643+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  220\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000002F0                                   62644+SMF42GKZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000002F8                                   62645+SMF42GK7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            62646+*\n                         000000A8           62647+SMF42G1F_LEN  EQU *-SMF42G1F                                     @10A   03-IGWSMF\n                                            62648+*\n 00000318                                   62649+SMF42G1G DS   0CL168                 RE-DO DURING SEQUENTIAL ACCESS     03-IGWSMF\n                                            62650+*                                    SECTION                     @10A\n 00000318                                   62651+SMF42GLA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            62652+*                                    NUMBER                      @10A\n 0000031C                                   62653+SMF42GLB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            62654+*                                                                @10A\n 00000320                                   62655+SMF42GLC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62656+*                                    NRI - NO READ INTEGRITY\n                                            62657+*                                                                @10A\n 00000324                                   62658+SMF42GLD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62659+*                                    CONSISTENT READS   @10A\n                                            62660+*\n 00000328                                   62661+SMF42GLE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            62662+*                                                                @10A\n 0000032C                                   62663+SMF42GLF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            62664+*                                                                @10A\n 00000330                                   62665+SMF42GLG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            62666+*                                                                @10A\n 00000334                                   62667+SMF42GLH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            62668+*                                                                @10A\n                                            62669+*\n 00000338                                   62670+SMF42GLI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            62671+*                                                                @10A\n 0000033C                                   62672+SMF42GLJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            62673+*                                                                @10A\n 00000340                                   62674+SMF42GLK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            62675+*                                                                @10A\n 00000344                                   62676+SMF42GLL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            62677+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            62678+*\n 00000348                                   62679+SMF42GLM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            62680+*                                                                @10A\n 0000034C                                   62681+SMF42GLN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 00000350                                   62682+SMF42GLO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 00000354                                   62683+SMF42GLP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000358                                   62684+SMF42GLQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            62685+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            62686+*                                                                @10A\n 00000360                                   62687+SMF42GLR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            62688+*                                    TO DASD.                    @10A\n 00000364                                   62689+SMF42GLS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            62690+*                                    TO DASD.                    @10A\n 00000368                                   62691+SMF42GLT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62692+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            62693+*                                                                @10A\n 00000370                                   62694+SMF42GLU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62695+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            62696+*                                                                @10A\n 00000378                                   62697+SMF42GLV DS   CL16                   RESERVED                           03-IGWSMF\n                                            62698+*                                                                @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  221\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000388                                   62699+SMF42GLW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            62700+*                                    REQUESTS IN THIS\n                                            62701+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            62702+*                                    IN milli-seconds)           @21A\n                                            62703+*\n 00000390                                   62704+SMF42GLX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            62705+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            62706+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            62707+*                                                                @10A\n 00000394                                   62708+SMF42GLY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            62709+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            62710+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            62711+*                                    TRANSFERRED/4K)             @10A\n                                            62712+*\n 00000398                                   62713+SMF42GLZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000003A0                                   62714+SMF42GL7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            62715+*\n                         000000A8           62716+SMF42G1G_LEN  EQU *-SMF42G1G                                     @10A   03-IGWSMF\n                                            62717+*\n 000003C0                                   62718+SMF42G1H DS   0CL168                 READ-A-HEAD SEQUENTIAL ACCESS      03-IGWSMF\n                                            62719+*                                    SECTION                     @10A\n 000003C0                                   62720+SMF42GMA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            62721+*                                    NUMBER                      @10A\n 000003C4                                   62722+SMF42GMB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            62723+*                                                                @10A\n 000003C8                                   62724+SMF42GMC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62725+*                                    NRI - NO READ INTEGRITY\n                                            62726+*                                                                @10A\n 000003CC                                   62727+SMF42GMD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62728+*                                    CONSISTENT READS   @10A\n                                            62729+*\n 000003D0                                   62730+SMF42GME DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            62731+*                                                                @10A\n 000003D4                                   62732+SMF42GMF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            62733+*                                                                @10A\n 000003D8                                   62734+SMF42GMG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            62735+*                                                                @10A\n 000003DC                                   62736+SMF42GMH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            62737+*                                                                @10A\n                                            62738+*\n 000003E0                                   62739+SMF42GMI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n                                            62740+*                                                                @10A\n 000003E4                                   62741+SMF42GMJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            62742+*                                                                @10A\n 000003E8                                   62743+SMF42GMK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            62744+*                                                                @10A\n 000003EC                                   62745+SMF42GML DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            62746+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            62747+*\n 000003F0                                   62748+SMF42GMM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            62749+*                                                                @10A\n 000003F4                                   62750+SMF42GMN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 000003F8                                   62751+SMF42GMO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 000003FC                                   62752+SMF42GMP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 00000400                                   62753+SMF42GMQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  222\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           62754+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            62755+*                                                                @10A\n 00000408                                   62756+SMF42GMR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            62757+*                                    TO DASD.                    @10A\n 0000040C                                   62758+SMF42GMS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            62759+*                                    TO DASD.                    @10A\n 00000410                                   62760+SMF42GMT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62761+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            62762+*                                                                @10A\n 00000418                                   62763+SMF42GMU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62764+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            62765+*                                                                @10A\n 00000420                                   62766+SMF42GMV DS   CL16                   RESERVED                           03-IGWSMF\n                                            62767+*                                                                @10A\n 00000430                                   62768+SMF42GMW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            62769+*                                    REQUESTS IN THIS\n                                            62770+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            62771+*                                    IN milli-seconds)           @21A\n                                            62772+*\n 00000438                                   62773+SMF42GMX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            62774+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            62775+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            62776+*                                                                @10A\n 0000043C                                   62777+SMF42GMY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            62778+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            62779+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            62780+*                                    TRANSFERRED/4K)             @10A\n                                            62781+*\n 00000440                                   62782+SMF42GMZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000448                                   62783+SMF42GM7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            62784+*\n                         000000A8           62785+SMF42G1H_LEN  EQU *-SMF42G1H                                     @10A   03-IGWSMF\n                                            62786+*\n 00000468                                   62787+SMF42G1I DS   0CL168                 PRE-FORMAT SEQUENTIAL ACCESS       03-IGWSMF\n                                            62788+*                                    SECTION                     @10A\n 00000468                                   62789+SMF42GNA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            62790+*                                    NUMBER                      @10A\n 0000046C                                   62791+SMF42GNB DS   1FL4                   TOTAL NUMBER OF REQUESTS           03-IGWSMF\n                                            62792+*                                                                @10A\n 00000470                                   62793+SMF42GNC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62794+*                                    NRI - NO READ INTEGRITY\n                                            62795+*                                                                @10A\n 00000474                                   62796+SMF42GND DS   1FL4                   TOTAL NUMBER OF READ REQUESTS -    03-IGWSMF\n                                            62797+*                                    CONSISTENT READS   @10A\n                                            62798+*\n 00000478                                   62799+SMF42GNE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS     03-IGWSMF\n                                            62800+*                                                                @10A\n 0000047C                                   62801+SMF42GNF DS   1FL4                   NUMBER OF BMF REQUESTS             03-IGWSMF\n                                            62802+*                                                                @10A\n 00000480                                   62803+SMF42GNG DS   1FL4                   NUMBER OF BMF READ REQUESTS        03-IGWSMF\n                                            62804+*                                                                @10A\n 00000484                                   62805+SMF42GNH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS       03-IGWSMF\n                                            62806+*                                                                @10A\n                                            62807+*\n 00000488                                   62808+SMF42GNI DS   1FL4                   NUMBER OF BMF READ HITS            03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  223\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           62809+*                                                                @10A\n 0000048C                                   62810+SMF42GNJ DS   1FL4                   NUMBER OF BMF VALID READ HITS      03-IGWSMF\n                                            62811+*                                                                @10A\n 00000490                                   62812+SMF42GNK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS       03-IGWSMF\n                                            62813+*                                                                @10A\n 00000494                                   62814+SMF42GNL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            62815+*                                    THE SYSPLEX CACHE MANAGER   @10A\n                                            62816+*\n 00000498                                   62817+SMF42GNM DS   1FL4                   NUMBER OF CF READ REQUESTS         03-IGWSMF\n                                            62818+*                                                                @10A\n 0000049C                                   62819+SMF42GNN DS   1FL4                   NUMBER OF CF WRITE REQUESTS @10A   03-IGWSMF\n 000004A0                                   62820+SMF42GNO DS   1FL4                   NUMBER OF CF READ HITS      @10A   03-IGWSMF\n 000004A4                                   62821+SMF42GNP DS   1FL4                   NUMBER OF CF READ CASTINS   @10A   03-IGWSMF\n 000004A8                                   62822+SMF42GNQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            62823+*                                    DFSMS CACHE STRUCTURE       @10A\n                                            62824+*                                                                @10A\n 000004B0                                   62825+SMF42GNR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            62826+*                                    TO DASD.                    @10A\n 000004B4                                   62827+SMF42GNS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            62828+*                                    TO DASD.                    @10A\n 000004B8                                   62829+SMF42GNT DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62830+*                                    DASD FOR THE READ  REQUESTS @10A\n                                            62831+*                                                                @10A\n 000004C0                                   62832+SMF42GNU DS   2F                     NUMBER OF BYTES TRANSFERRED TO     03-IGWSMF\n                                            62833+*                                    DASD FOR THE WRITE REQUESTS @10A\n                                            62834+*                                                                @10A\n 000004C8                                   62835+SMF42GNV DS   CL16                   RESERVED                           03-IGWSMF\n                                            62836+*                                                                @10A\n 000004D8                                   62837+SMF42GNW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            62838+*                                    REQUESTS IN THIS\n                                            62839+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            62840+*                                    IN milli-seconds)           @21A\n                                            62841+*\n 000004E0                                   62842+SMF42GNX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            62843+*                                    THE REQUESTS IN THIS INTERVAL.\n                                            62844+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            62845+*                                                                @10A\n 000004E4                                   62846+SMF42GNY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            62847+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            62848+*                                    (TOTAL TIME/NUMBER OF BYTES\n                                            62849+*                                    TRANSFERRED/4K)             @10A\n                                            62850+*\n 000004E8                                   62851+SMF42GNZ DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000004F0                                   62852+SMF42GN7 DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            62853+*\n                         000000A8           62854+SMF42G1I_LEN  EQU *-SMF42G1I                                     @10A   03-IGWSMF\n                         000002A0           62855+SMF42G1E_LEN  EQU *-SMF42G1E                                     @10A   03-IGWSMF\n                                            62856+*                                                                @10A\n                                            62857+*                                                                @10A\n 00000510                                   62858+SMF42GX6 DS   0CL128                 LOCKING STATISTICS SUMMARY  @10A   03-IGWSMF\n 00000510                                   62859+SMF42GQA DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            62860+*                                    REQUESTS                    @10A\n                                            62861+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000514                                   62862+SMF42GQB DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            62863+*                                    REQUESTS THAT CAUSE TRUE    @10A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  224\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           62864+*                                    CONTENTION                  @10A\n 00000518                                   62865+SMF42GQC DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            62866+*                                    REQUESTS THAT CAUSE FALSE   @10A\n                                            62867+*                                    CONTENTION                  @10A\n 0000051C                                   62868+SMF42GQD DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            62869+*                                    RELEASE REQUESTS            @10A\n 00000520                                   62870+SMF42GQE DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n                                            62871+*                                    LOCK REQUESTS               @10A\n 00000524                                   62872+SMF42GQF DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n                                            62873+*                                    RELEASE LOCK REQUESTS       @10A\n 00000528                                   62874+SMF42GQG DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 00000530                                   62875+SMF42GQH DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62876+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            62877+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000534                                   62878+SMF42GQI DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62879+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            62880+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 00000538                                   62881+SMF42GQJ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62882+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            62883+*                                    THAT CAUSE FALSE CONTENTION @10A\n 0000053C                                   62884+SMF42GQK DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62885+*                                    CLASS_1 (DIWA) RELEASE      @10A\n                                            62886+*                                    LOCK REQUESTS               @10A\n 00000540                                   62887+SMF42GQL DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62888+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            62889+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000544                                   62890+SMF42GQM DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62891+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            62892+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 00000548                                   62893+SMF42GQN DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62894+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            62895+*                                    THAT CAUSE FALSE CONTENTION @10A\n 0000054C                                   62896+SMF42GQO DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62897+*                                    CLASS_2 (UPGRADE) RELEASE   @10A\n                                            62898+*                                    LOCK REQUESTS               @10A\n 00000550                                   62899+SMF42GQP DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62900+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            62901+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000554                                   62902+SMF42GQQ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62903+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            62904+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 00000558                                   62905+SMF42GQR DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62906+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            62907+*                                    THAT CAUSE FALSE CONTENTION @10A\n 0000055C                                   62908+SMF42GQS DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            62909+*                                    CLASS_3 (PREFORMAT) RELEASE @10A\n                                            62910+*                                    LOCK REQUESTS               @10A\n 00000560                                   62911+SMF42GQT DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n                                            62912+*                                    LOCK REQUESTS               @10A\n                                            62913+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000564                                   62914+SMF42GQU DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            62915+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 00000568                                   62916+SMF42GQV DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            62917+*                                    THAT CAUSE FALSE CONTENTION @10A\n 0000056C                                   62918+SMF42GQW DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  225\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           62919+*                                    RELEASE LOCK REQUESTS       @10A\n 00000570                                   62920+SMF42GQX DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            62921+*                                                                @10A\n                         00000080           62922+SMF42GX6_LEN  EQU *-SMF42GX6                                     @10A   03-IGWSMF\n                                            62923+*\n 00000590                                   62924+SMF42FX8 DS   0CL64                  DATASET BMF LRU STATS       @21A   03-IGWSMF\n 00000590                                   62925+SMF42GRL DS   1FL4                   NUMBER OF REDOS             @21A   03-IGWSMF\n 00000594                                   62926+SMF42GRM DS   1FL4                   NUMBER OF RECURSIVE REDOS   @21A   03-IGWSMF\n 00000598                                   62927+SMF42GRN DS   1FL4                   NUMBER OF BMF WRITES        @21A   03-IGWSMF\n 0000059C                                   62928+SMF42GRO DS   1FL4                   NUMBER OF SCM READ REQUESTS @21A   03-IGWSMF\n 000005A0                                   62929+SMF42GRP DS   1FL4                   NUMBER OF SCM READ REQUESTS @21A   03-IGWSMF\n                                            62930+*                                    THAT ENCOUNTERED CASTOUT    @21A\n                                            62931+*                                    LOCK CONTENTION             @21A\n 000005A4                                   62932+SMF42GRR DS   1FL4                   REDO PERCENT                @21A   03-IGWSMF\n 000005A8                                   62933+SMF42GRS DS   1FL4                   RECURSIVE REDO PERCENT      @21A   03-IGWSMF\n 000005AC                                   62934+SMF42GRT DS   1FL4                   SCM CASTOUT LOCK PERCENT    @21A   03-IGWSMF\n 000005B0                                   62935+SMF42GRQ DS   CL12                   RESERVED                    @21A   03-IGWSMF\n 000005BC                                   62936+SMF42GRU DS   1FL4                   Total number of CF read     @29C   03-IGWSMF\n                                            62937+*                                    requests which encountered  @29A\n                                            62938+*                                    retries for cast out locks  @29A\n                                            62939+*                                    for this interval           @29A\n 000005C0                                   62940+SMF42GRV DS   CL16                   RESERVED                    @21A   03-IGWSMF\n                                            62941+*                                                                @21A\n                         00000040           62942+SMF42FX8_LEN  EQU *-SMF42FX8                                     @21A   03-IGWSMF\n 000005D0                                   62943+SMF42GBQ DS   CL16                   LOCK STRUCTURE NAME         @P7A   03-IGWSMF\n                         000005E0           62944+SMF420GB_LEN  EQU *-SMF420GB                                     @10A   03-IGWSMF\n                                            62945+*                                                                @10A\n                                            62946+*\n                                            62947+* ABOVE BAR VARIABLES BELOW                                        @64A\n                                            62948+*                                                                  @64A\n 00000000                00000000 000005D0  62949+SMF2A0GA DSECT ,                                                   @64A 03-IGWSMF\n 00000000                                   62950+SMF2AGA1 DS   0CL1472                SYSPLEX WIDE SUMMARY          @64A 03-IGWSMF\n 00000000                                   62951+SMF2AGAA DS   1FL4                   INTERVAL LENGTH. THIS IS THE  @64A 03-IGWSMF\n                                            62952+*                                    TOTAL TIME OF THE MEASUREMENT @64A\n                                            62953+*                                    PERIOD. (IN SECONDS)          @64A\n 00000004                                   62954+SMF2AA00 DS   CL12                   RESERVED                      @64A 03-IGWSMF\n                                            62955+*                                                                  @64A\n 00000010                                   62956+SMF2AGAB DS   CL44                   DATA SET NAME                 @64A 03-IGWSMF\n 0000003C                                   62957+SMF2AA01 DS   1FL4                   RESERVED                      @64A 03-IGWSMF\n                                            62958+*                                                                  @64A\n 00000040                                   62959+SMF2AGAC DS   CL44                   VSAM SPHERE NAME              @64A 03-IGWSMF\n 0000006C                                   62960+SMF2AA02 DS   1FL4                   RESERVED                      @64A 03-IGWSMF\n                                            62961+*                                                                  @64A\n 00000070                                   62962+SMF2AGAD DS   1FL2                   LENGTH OF THE STORAGE CLASS   @64A 03-IGWSMF\n                                            62963+*                                    NAME                          @64A\n 00000072                                   62964+SMF2AGAE DS   CL30                   STORAGE CLASS NAME            @64A 03-IGWSMF\n                                            62965+*                                                                  @64A\n 00000090                                   62966+SMF2AA03 DS   1FL2                   CACHESETNAME LENGTH           @64A 03-IGWSMF\n 00000092                                   62967+SMF2AGAF DS   CL30                   CACHESET NAME                 @64A 03-IGWSMF\n                                            62968+*                                                                  @64A\n 000000B0                                   62969+SMF2AGAG DS   CL2                    RESERVED                      @64A 03-IGWSMF\n 000000B2                                   62970+SMF2AGAH DS   CL30                   DFP CACHE STRUCTURE NAME      @64A 03-IGWSMF\n                                            62971+*                                                                  @64A\n 000000D0                                   62972+SMF2AGAI DS   1FL4                   INDICATOR OF COMPONENT BEING  @64A 03-IGWSMF\n                                            62973+*                                    PROCESSED                     @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  226\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        80000000           62974+SMF2AGAI0 EQU   X'80000000'          DATA COMPONENT                @64A 03-IGWSMF\n                         40000000           62975+SMF2AGAI1 EQU   X'40000000'          INDEX COMPONENT               @64A 03-IGWSMF\n                                            62976+*                                                                  @64A\n 000000D4                                   62977+SMF2AGAJ DS   CL12                   INDICATES DFSMS GREATER       @64A 03-IGWSMF\n                                            62978+*                                    THAN 4K CF CACHING STATUS     @64A\n                                            62979+*                                    VALUES ARE ALL, NONE,         @64A\n                                            62980+*                                    UPDATESONLY, GT4KNOTACT       @64A\n 000000E0                                   62981+SMF2AGAK DS   1FL4                   NUMBER OF LOCK REQUESTS       @64A 03-IGWSMF\n                                            62982+*                                    PROCESSED                     @64A\n 000000E4                                   62983+SMF2AGAL DS   1FL4                   NUMBER OF TRUE CONTENTION     @64A 03-IGWSMF\n                                            62984+*                                    LOCK REQUESTS                 @64A\n 000000E8                                   62985+SMF2AGAM DS   1FL4                   NUMBER OF FALSE CONTENTION    @64A 03-IGWSMF\n                                            62986+*                                    LOCK REQUESTS                 @64A\n 000000EC                                   62987+SMF2AGZ1 DS   1FL2                   SMSDIRECTWEIGHT               @64A 03-IGWSMF\n 000000EE                                   62988+SMF2AGZ2 DS   1FL2                   SMSSEQUENTIALWEIGHT           @64A 03-IGWSMF\n                                            62989+*                                                                  @64A\n 000000F0                                   62990+SMF2AGAN DS   CL8              IN DFSMS 1.4   WLM SERV CLASS NAME  @64A 03-IGWSMF\n 000000F8                                   62991+SMF2AGAO DS   CL8              IN DFSMS 1.4   WLM REPORT CLS NAME  @64A 03-IGWSMF\n                                            62992+*                                                                  @64A\n 00000100                                   62993+SMF2AGAP DS   CL16                   SMS DATACLASS NAME            @64A 03-IGWSMF\n                                            62994+*                                                                  @64A\n 00000110                                   62995+SMF2AGA2 DS   0CL336                 DIRECT ACCESS SUMMARY SECTION @64A 03-IGWSMF\n                                            62996+*                                                                  @64A\n 00000110                                   62997+SMF2AGA3 DS   0CL168                 NORMAL DIRECT ACCESS SUMMARY  @64A 03-IGWSMF\n                                            62998+*                                    SECTION                       @64A\n 00000110                                   62999+SMF2AGCA DS   1FL4                   COUPLE FACILITY CACHE         @64A 03-IGWSMF\n                                            63000+*                                    PARTITION NUMBER              @64A\n 00000114                                   63001+SMF2AGCB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n                                            63002+*                                                                  @64A\n 00000118                                   63003+SMF2AGCC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63004+*                                    NRI - NO READ INTEGRITY       @64A\n                                            63005+*                                                                  @64A\n 0000011C                                   63006+SMF2AGCD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63007+*                                    CONSISTENT READS              @64A\n                                            63008+*                                                                  @64A\n 00000120                                   63009+SMF2AGCE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            63010+*                                                                  @64A\n 00000124                                   63011+SMF2AGCF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n                                            63012+*                                                                  @64A\n 00000128                                   63013+SMF2AGCG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            63014+*                                                                  @64A\n 0000012C                                   63015+SMF2AGCH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            63016+*                                                                  @64A\n                                            63017+*                                                                  @64A\n 00000130                                   63018+SMF2AGCI DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            63019+*                                                                  @64A\n 00000134                                   63020+SMF2AGCJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            63021+*                                                                  @64A\n 00000138                                   63022+SMF2AGCK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            63023+*                                                                  @64A\n 0000013C                                   63024+SMF2AGCL DS   1FL4                   NUMBER OF REQUESTS PROCESSED  @64A 03-IGWSMF\n                                            63025+*                                    BY THE SYSPLEX CACHE MANAGER  @64A\n                                            63026+*                                                                  @64A\n 00000140                                   63027+SMF2AGCM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            63028+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  227\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000144                                   63029+SMF2AGCN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 00000148                                   63030+SMF2AGCO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 0000014C                                   63031+SMF2AGCP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 00000150                                   63032+SMF2AGCQ DS   2F                     NUMBER OF BYTES XFERRED INTO  @64A 03-IGWSMF\n                                            63033+*                                    THE DFSMS CACHE STRUCTURE     @64A\n                                            63034+*                                                                  @64A\n 00000158                                   63035+SMF2AGCR DS   1FL4                   NUMBER OF READ  REAL I/O      @64A 03-IGWSMF\n                                            63036+*                                    REQUESTS TO DASD.             @64A\n 0000015C                                   63037+SMF2AGCS DS   1FL4                   NUMBER OF WRITE REAL I/O      @64A 03-IGWSMF\n                                            63038+*                                    REQUESTS TO DASD.             @64A\n 00000160                                   63039+SMF2AGCT DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63040+*                                    DASD FOR THE READ  REQUESTS   @64A\n                                            63041+*                                                                  @64A\n 00000168                                   63042+SMF2AGCU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63043+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            63044+*                                                                  @64A\n 00000170                                   63045+SMF2AGCV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            63046+*                                                                  @64A\n 00000180                                   63047+SMF2AGCW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL  @64A 03-IGWSMF\n                                            63048+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            63049+*                                    (THE VALUE IS EXPRESSED       @64A\n                                            63050+*                                    IN milli-seconds)             @64A\n                                            63051+*                                                                  @64A\n 00000188                                   63052+SMF2AGCX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL @64A 03-IGWSMF\n                                            63053+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            63054+*                                    (TOTAL TIME/NUMBER OF REQUESTS@64A\n                                            63055+*                                                                  @64A\n 0000018C                                   63056+SMF2AGCY DS   1FL4                   NORMALIZED RESPONSE TIME FOR  @64A 03-IGWSMF\n                                            63057+*                                    ALL OF THE REQUESTS IN THIS   @64A\n                                            63058+*                                    INTERVAL.                     @64A\n                                            63059+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n                                            63060+*                                    TRANSFERRED/4K)               @64A\n 00000190                                   63061+SMF2AGCZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 00000198                                   63062+SMF2AGC7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            63063+*                                                                  @64A\n                         000000A8           63064+SMF2AGA3_LEN  EQU *-SMF2AGA3                                       @64A 03-IGWSMF\n                                            63065+*                                                                  @64A\n 000001B8                                   63066+SMF2AGA4 DS   0CL168                 RE-DO DURING DIRECT ACCESS    @64A 03-IGWSMF\n                                            63067+*                                    SECTION                       @64A\n 000001B8                                   63068+SMF2AGDA DS   1FL4                   COUPLE FACILITY CACHE         @64A 03-IGWSMF\n                                            63069+*                                    PARTITION NUMBER              @64A\n 000001BC                                   63070+SMF2AGDB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n                                            63071+*                                                                  @64A\n 000001C0                                   63072+SMF2AGDC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63073+*                                    NRI - NO READ INTEGRITY       @64A\n                                            63074+*                                                                  @64A\n 000001C4                                   63075+SMF2AGDD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63076+*                                    CONSISTENT READS   @10A       @64A\n                                            63077+*                                                                  @64A\n 000001C8                                   63078+SMF2AGDE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            63079+*                                                                  @64A\n 000001CC                                   63080+SMF2AGDF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n                                            63081+*                                                                  @64A\n 000001D0                                   63082+SMF2AGDG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            63083+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  228\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000001D4                                   63084+SMF2AGDH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            63085+*                                                                  @64A\n                                            63086+*                                                                  @64A\n 000001D8                                   63087+SMF2AGDI DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            63088+*                                                                  @64A\n 000001DC                                   63089+SMF2AGDJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            63090+*                                                                  @64A\n 000001E0                                   63091+SMF2AGDK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            63092+*                                                                  @64A\n 000001E4                                   63093+SMF2AGDL DS   1FL4                   NUMBER OF REQUESTS PROCESSED  @64A 03-IGWSMF\n                                            63094+*                                    BY THE SYSPLEX CACHE MANAGER  @64A\n                                            63095+*                                                                  @64A\n 000001E8                                   63096+SMF2AGDM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            63097+*                                                                  @64A\n 000001EC                                   63098+SMF2AGDN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 000001F0                                   63099+SMF2AGDO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 000001F4                                   63100+SMF2AGDP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 000001F8                                   63101+SMF2AGDQ DS   2F                     NUMBER OF BYTES XFERRED INTO  @64A 03-IGWSMF\n                                            63102+*                                    THE DFSMS CACHE STRUCTURE     @64A\n                                            63103+*                                                                  @64A\n 00000200                                   63104+SMF2AGDR DS   1FL4                   NUMBER OF READ  REAL I/O      @64A 03-IGWSMF\n                                            63105+*                                    REQUESTS TO DASD.             @64A\n 00000204                                   63106+SMF2AGDS DS   1FL4                   NUMBER OF WRITE REAL I/O      @64A 03-IGWSMF\n                                            63107+*                                    REQUESTS TO DASD.             @64A\n 00000208                                   63108+SMF2AGDT DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63109+*                                    DASD FOR THE READ REQUESTS    @64A\n                                            63110+*                                                                  @64A\n 00000210                                   63111+SMF2AGDU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63112+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            63113+*                                                                  @64A\n 00000218                                   63114+SMF2AGDV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            63115+*                                                                  @64A\n 00000228                                   63116+SMF2AGDW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL  @64A 03-IGWSMF\n                                            63117+*                                    THE REQUESTS IN THIS INTERVAL @64A\n                                            63118+*                                    (THE VALUE IS EXPRESSED       @64A\n                                            63119+*                                    IN milli-seconds)             @64A\n                                            63120+*                                                                  @64A\n 00000230                                   63121+SMF2AGDX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL @64A 03-IGWSMF\n                                            63122+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            63123+*                                    (TOTAL TIME/NUMBER OF REQUESTS@64A\n                                            63124+*                                                                  @64A\n 00000234                                   63125+SMF2AGDY DS   1FL4                   NORMALIZED RESPONSE TIME FOR  @64A 03-IGWSMF\n                                            63126+*                                    ALL OF THE REQUESTS IN THIS   @64A\n                                            63127+*                                    INTERVAL                      @64A\n                                            63128+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n                                            63129+*                                    TRANSFERRED/4K)               @64A\n 00000238                                   63130+SMF2AGDZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 00000240                                   63131+SMF2AGD7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            63132+*                                                                  @64A\n                         000000A8           63133+SMF2AGA4_LEN  EQU *-SMF2AGA4                                       @64A 03-IGWSMF\n                         00000150           63134+SMF2AGA2_LEN  EQU *-SMF2AGA2                                       @64A 03-IGWSMF\n                                            63135+*                                                                  @64A\n 00000260                                   63136+SMF2AGA5 DS   0CL800                 SEQUENTIAL ACCESS SUMMARY     @64A 03-IGWSMF\n                                            63137+*                                    SECTION                       @64A\n                                            63138+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  229\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000260                                   63139+SMF2AGA6 DS   0CL168                 NORMAL SEQUENTIAL ACCESS      @64A 03-IGWSMF\n                                            63140+*                                    SECTION                       @64A\n                                            63141+*                                                                  @64A\n 00000260                                   63142+SMF2AGEA DS   1FL4                   COUPLE FACILITY CACHE         @64A 03-IGWSMF\n                                            63143+*                                    PARTITION NUMBER              @64A\n 00000264                                   63144+SMF2AGEB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n                                            63145+*                                                                  @64A\n 00000268                                   63146+SMF2AGEC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63147+*                                    NRI - NO READ INTEGRITY       @64A\n                                            63148+*                                                                  @64A\n 0000026C                                   63149+SMF2AGED DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63150+*                                    CONSISTENT READS              @64A\n                                            63151+*                                                                  @64A\n 00000270                                   63152+SMF2AGEE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            63153+*                                                                  @64A\n 00000274                                   63154+SMF2AGEF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n                                            63155+*                                                                  @64A\n 00000278                                   63156+SMF2AGEG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            63157+*                                                                  @64A\n 0000027C                                   63158+SMF2AGEH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            63159+*                                                                  @64A\n 00000280                                   63160+SMF2AGEI DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            63161+*                                                                  @64A\n 00000284                                   63162+SMF2AGEJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            63163+*                                                                  @64A\n 00000288                                   63164+SMF2AGEK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            63165+*                                                                  @64A\n 0000028C                                   63166+SMF2AGEL DS   1FL4                   NUMBER OF REQUESTS PROCESSED  @64A 03-IGWSMF\n                                            63167+*                                    BY THE SYSPLEX CACHE MANAGER  @64A\n                                            63168+*                                                                  @64A\n 00000290                                   63169+SMF2AGEM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            63170+*                                                                  @64A\n 00000294                                   63171+SMF2AGEN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 00000298                                   63172+SMF2AGEO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 0000029C                                   63173+SMF2AGEP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 000002A0                                   63174+SMF2AGEQ DS   2F                     NUMBER OF BYTES XFERRED INTO  @64A 03-IGWSMF\n                                            63175+*                                    THE DFSMS CACHE STRUCTURE     @64A\n                                            63176+*                                                                  @64A\n 000002A8                                   63177+SMF2AGER DS   1FL4                   NUMBER OF READ  REAL I/O      @64A 03-IGWSMF\n                                            63178+*                                    REQUESTS TO DASD.             @64A\n 000002AC                                   63179+SMF2AGES DS   1FL4                   NUMBER OF WRITE REAL I/O      @64A 03-IGWSMF\n                                            63180+*                                    REQUESTS TO DASD.             @64A\n 000002B0                                   63181+SMF2AGET DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63182+*                                    DASD FOR THE READ  REQUESTS   @64A\n                                            63183+*                                                                  @64A\n 000002B8                                   63184+SMF2AGEU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63185+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            63186+*                                                                  @64A\n 000002C0                                   63187+SMF2AGEV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            63188+*                                                                  @64A\n 000002D0                                   63189+SMF2AGEW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL  @64A 03-IGWSMF\n                                            63190+*                                    THE REQUESTS IN THIS INTERVAL @64A\n                                            63191+*                                    (THE VALUE IS EXPRESSED       @64A\n                                            63192+*                                    IN milli-seconds)             @64A\n                                            63193+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  230\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000002D8                                   63194+SMF2AGEX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL @64A 03-IGWSMF\n                                            63195+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            63196+*                                    (TOTAL TIME/NUMBER OF REQUESTS@64A\n                                            63197+*                                                                  @64A\n 000002DC                                   63198+SMF2AGEY DS   1FL4                   NORMALIZED RESPONSE TIME FOR  @64A 03-IGWSMF\n                                            63199+*                                    ALL OF THE REQUESTS IN THIS   @64A\n                                            63200+*                                    INTERVAL                      @64A\n                                            63201+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n                                            63202+*                                    TRANSFERRED/4K)               @64A\n                                            63203+*                                                                  @64A\n 000002E0                                   63204+SMF2AGEZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 000002E8                                   63205+SMF2AGE7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            63206+*                                                                  @64A\n                         000000A8           63207+SMF2AGA6_LEN  EQU *-SMF2AGA6                                       @64A 03-IGWSMF\n                                            63208+*                                                                  @64A\n 00000308                                   63209+SMF2AGA7 DS   0CL168                 RE-DO DURING SEQUENTIAL       @64A 03-IGWSMF\n                                            63210+*                                    ACCESS SECTION                @64A\n 00000308                                   63211+SMF2AGFA DS   1FL4                   COUPLE FACILITY CACHE         @64A 03-IGWSMF\n                                            63212+*                                    PARTITION NUMBER              @64A\n 0000030C                                   63213+SMF2AGFB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n                                            63214+*                                                                  @64A\n 00000310                                   63215+SMF2AGFC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63216+*                                    NRI - NO READ INTEGRITY       @64A\n                                            63217+*                                                                  @64A\n 00000314                                   63218+SMF2AGFD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63219+*                                    CONSISTENT READS              @64A\n                                            63220+*                                                                  @64A\n 00000318                                   63221+SMF2AGFE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            63222+*                                                                  @64A\n 0000031C                                   63223+SMF2AGFF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n                                            63224+*                                                                  @64A\n 00000320                                   63225+SMF2AGFG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            63226+*                                                                  @64A\n 00000324                                   63227+SMF2AGFH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            63228+*                                                                  @64A\n                                            63229+*                                                                  @64A\n 00000328                                   63230+SMF2AGFI DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            63231+*                                                                  @64A\n 0000032C                                   63232+SMF2AGFJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            63233+*                                                                  @64A\n 00000330                                   63234+SMF2AGFK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            63235+*                                                                  @64A\n 00000334                                   63236+SMF2AGFL DS   1FL4                   NUMBER OF REQUESTS PROCESSED  @64A 03-IGWSMF\n                                            63237+*                                    BY THE SYSPLEX CACHE MANAGER  @64A\n                                            63238+*                                                                  @64A\n 00000338                                   63239+SMF2AGFM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            63240+*                                                                  @64A\n 0000033C                                   63241+SMF2AGFN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 00000340                                   63242+SMF2AGFO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 00000344                                   63243+SMF2AGFP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 00000348                                   63244+SMF2AGFQ DS   2F                     NUMBER OF BYTES XFERRED INTO  @64A 03-IGWSMF\n                                            63245+*                                    THE DFSMS CACHE STRUCTURE     @64A\n                                            63246+*                                                                  @64A\n 00000350                                   63247+SMF2AGFR DS   1FL4                   NUMBER OF READ  REAL I/O      @64A 03-IGWSMF\n                                            63248+*                                    REQUESTS TO DASD.             @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  231\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000354                                   63249+SMF2AGFS DS   1FL4                   NUMBER OF WRITE REAL I/O      @64A 03-IGWSMF\n                                            63250+*                                    REQUESTS TO DASD.             @64A\n 00000358                                   63251+SMF2AGFT DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63252+*                                    DASD FOR THE READ  REQUESTS   @64A\n                                            63253+*                                                                  @64A\n 00000360                                   63254+SMF2AGFU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63255+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            63256+*                                                                  @64A\n 00000368                                   63257+SMF2AGFV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            63258+*                                                                  @64A\n 00000378                                   63259+SMF2AGFW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL  @64A 03-IGWSMF\n                                            63260+*                                    THE REQUESTS IN THIS INTERVAL @64A\n                                            63261+*                                    (THE VALUE IS EXPRESSED       @64A\n                                            63262+*                                    IN milli-seconds)             @64A\n                                            63263+*                                                                  @64A\n 00000380                                   63264+SMF2AGFX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL @64A 03-IGWSMF\n                                            63265+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            63266+*                                    (TOTAL TIME/NUMBER OF REQUESTS@64A\n                                            63267+*                                                                  @64A\n 00000384                                   63268+SMF2AGFY DS   1FL4                   NORMALIZED RESPONSE TIME FOR  @64A 03-IGWSMF\n                                            63269+*                                    ALL OF THE REQUESTS IN THIS   @64A\n                                            63270+*                                    INTERVAL                      @64A\n                                            63271+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n                                            63272+*                                    TRANSFERRED/4K)               @64A\n                                            63273+*                                                                  @64A\n 00000388                                   63274+SMF2AGFZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 00000390                                   63275+SMF2AGF7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            63276+*                                                                  @64A\n                         000000A8           63277+SMF2AGA7_LEN  EQU *-SMF2AGA7                                       @64A 03-IGWSMF\n                                            63278+*                                                                  @64A\n 000003B0                                   63279+SMF2AGA8 DS   0CL168                 READ-A-HEAD SEQUENTIAL ACCESS @64A 03-IGWSMF\n                                            63280+*                                    SECTION                       @64A\n 000003B0                                   63281+SMF2AGGA DS   1FL4                   COUPLE FACILITY CACHE         @64A 03-IGWSMF\n                                            63282+*                                    PARTITION NUMBER              @64A\n 000003B4                                   63283+SMF2AGGB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n                                            63284+*                                                                  @64A\n 000003B8                                   63285+SMF2AGGC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63286+*                                    NRI - NO READ INTEGRITY       @64A\n                                            63287+*                                                                  @64A\n 000003BC                                   63288+SMF2AGGD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63289+*                                    CONSISTENT READS   @10A       @64A\n                                            63290+*                                                                  @64A\n 000003C0                                   63291+SMF2AGGE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            63292+*                                                                  @64A\n 000003C4                                   63293+SMF2AGGF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n                                            63294+*                                                                  @64A\n 000003C8                                   63295+SMF2AGGG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            63296+*                                                                  @64A\n 000003CC                                   63297+SMF2AGGH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            63298+*                                                                  @64A\n                                            63299+*                                                                  @64A\n 000003D0                                   63300+SMF2AGGI DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            63301+*                                                                  @64A\n 000003D4                                   63302+SMF2AGGJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            63303+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  232\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000003D8                                   63304+SMF2AGGK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            63305+*                                                                  @64A\n 000003DC                                   63306+SMF2AGGL DS   1FL4                   NUMBER OF REQUESTS PROCESSED  @64A 03-IGWSMF\n                                            63307+*                                    BY THE SYSPLEX CACHE MANAGER  @64A\n                                            63308+*                                                                  @64A\n 000003E0                                   63309+SMF2AGGM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            63310+*                                                                  @64A\n 000003E4                                   63311+SMF2AGGN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 000003E8                                   63312+SMF2AGGO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 000003EC                                   63313+SMF2AGGP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 000003F0                                   63314+SMF2AGGQ DS   2F                     NUMBER OF BYTES XFERRED INTO  @64A 03-IGWSMF\n                                            63315+*                                    THE DFSMS CACHE STRUCTURE     @64A\n                                            63316+*                                                                  @64A\n 000003F8                                   63317+SMF2AGGR DS   1FL4                   NUMBER OF READ  REAL I/O      @64A 03-IGWSMF\n                                            63318+*                                    REQUESTS TO DASD.             @64A\n 000003FC                                   63319+SMF2AGGS DS   1FL4                   NUMBER OF WRITE REAL I/O      @64A 03-IGWSMF\n                                            63320+*                                    REQUESTS TO DASD.             @64A\n 00000400                                   63321+SMF2AGGT DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63322+*                                    DASD FOR THE READ  REQUESTS   @64A\n                                            63323+*                                                                  @64A\n 00000408                                   63324+SMF2AGGU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63325+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            63326+*                                                                  @64A\n 00000410                                   63327+SMF2AGGV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            63328+*                                                                  @64A\n 00000420                                   63329+SMF2AGGW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL  @64A 03-IGWSMF\n                                            63330+*                                    THE REQUESTS IN THIS INTERVAL @64A\n                                            63331+*                                    (THE VALUE IS EXPRESSED       @64A\n                                            63332+*                                    IN milli-seconds)             @64A\n                                            63333+*                                                                  @64A\n 00000428                                   63334+SMF2AGGX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL @64A 03-IGWSMF\n                                            63335+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            63336+*                                    (TOTAL TIME/NUMBER OF REQUESTS@64A\n                                            63337+*                                                                  @64A\n 0000042C                                   63338+SMF2AGGY DS   1FL4                   NORMALIZED RESPONSE TIME FOR  @64A 03-IGWSMF\n                                            63339+*                                    ALL OF THE REQUESTS IN THIS   @64A\n                                            63340+*                                    INTERVAL                      @64A\n                                            63341+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n                                            63342+*                                    TRANSFERRED/4K)               @64A\n                                            63343+*                                                                  @64A\n 00000430                                   63344+SMF2AGGZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 00000438                                   63345+SMF2AGG7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            63346+*                                                                  @64A\n                         000000A8           63347+SMF2AGA8_LEN  EQU *-SMF2AGA8                                       @64A 03-IGWSMF\n                                            63348+*                                                                  @64A\n 00000458                                   63349+SMF2AGA9 DS   0CL168                 PRE-FORMAT SEQUENTIAL ACCESS  @64A 03-IGWSMF\n                                            63350+*                                    SECTION                       @64A\n 00000458                                   63351+SMF2AGHA DS   1FL4                   COUPLE FACILITY CACHE         @64A 03-IGWSMF\n                                            63352+*                                    PARTITION NUMBER              @64A\n 0000045C                                   63353+SMF2AGHB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n                                            63354+*                                                                  @64A\n 00000460                                   63355+SMF2AGHC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63356+*                                    NRI - NO READ INTEGRITY       @64A\n                                            63357+*                                                                  @64A\n 00000464                                   63358+SMF2AGHD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  233\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           63359+*                                    CONSISTENT READS              @64A\n                                            63360+*                                                                  @64A\n 00000468                                   63361+SMF2AGHE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            63362+*                                                                  @64A\n 0000046C                                   63363+SMF2AGHF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n                                            63364+*                                                                  @64A\n 00000470                                   63365+SMF2AGHG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            63366+*                                                                  @64A\n 00000474                                   63367+SMF2AGHH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            63368+*                                                                  @64A\n                                            63369+*                                                                  @64A\n 00000478                                   63370+SMF2AGHI DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            63371+*                                                                  @64A\n 0000047C                                   63372+SMF2AGHJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            63373+*                                                                  @64A\n 00000480                                   63374+SMF2AGHK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            63375+*                                                                  @64A\n 00000484                                   63376+SMF2AGHL DS   1FL4                   NUMBER OF REQUESTS PROCESSED  @64A 03-IGWSMF\n                                            63377+*                                    BY THE SYSPLEX CACHE MANAGER  @64A\n                                            63378+*                                                                  @64A\n 00000488                                   63379+SMF2AGHM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            63380+*                                                                  @64A\n 0000048C                                   63381+SMF2AGHN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 00000490                                   63382+SMF2AGHO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 00000494                                   63383+SMF2AGHP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 00000498                                   63384+SMF2AGHQ DS   2F                     NUMBER OF BYTES XFERRED INTO  @64A 03-IGWSMF\n                                            63385+*                                    THE DFSMS CACHE STRUCTURE     @64A\n                                            63386+*                                                                  @64A\n 000004A0                                   63387+SMF2AGHR DS   1FL4                   NUMBER OF READ  REAL I/O      @64A 03-IGWSMF\n                                            63388+*                                    REQUESTS TO DASD.             @64A\n 000004A4                                   63389+SMF2AGHS DS   1FL4                   NUMBER OF WRITE REAL I/O      @64A 03-IGWSMF\n                                            63390+*                                    REQUESTS TO DASD.             @64A\n 000004A8                                   63391+SMF2AGHT DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63392+*                                    DASD FOR THE READ  REQUESTS   @64A\n                                            63393+*                                                                  @64A\n 000004B0                                   63394+SMF2AGHU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63395+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            63396+*                                                                  @64A\n 000004B8                                   63397+SMF2AGHV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            63398+*                                                                  @64A\n 000004C8                                   63399+SMF2AGHW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL  @64A 03-IGWSMF\n                                            63400+*                                    THE REQUESTS IN THIS INTERVAL @64A\n                                            63401+*                                    (THE VALUE IS EXPRESSED       @64A\n                                            63402+*                                    IN milli-seconds)             @64A\n                                            63403+*                                                                  @64A\n 000004D0                                   63404+SMF2AGHX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL @64A 03-IGWSMF\n                                            63405+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            63406+*                                    (TOTAL TIME/NUMBER OF REQUESTS@64A\n                                            63407+*                                                                  @64A\n 000004D4                                   63408+SMF2AGHY DS   1FL4                   NORMALIZED RESPONSE TIME FOR  @64A 03-IGWSMF\n                                            63409+*                                    ALL OF THE REQUESTS IN THIS   @64A\n                                            63410+*                                    INTERVAL                      @64A\n                                            63411+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n                                            63412+*                                    TRANSFERRED/4K)               @64A\n                                            63413+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  234\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000004D8                                   63414+SMF2AGHZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 000004E0                                   63415+SMF2AGH7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            63416+*                                                                  @64A\n                         000000A8           63417+SMF2AGA9_LEN  EQU *-SMF2AGA9                                       @64A 03-IGWSMF\n                         000002A0           63418+SMF2AGA5_LEN  EQU *-SMF2AGA5                                       @64A 03-IGWSMF\n                                            63419+*                                                                  @64A\n 00000500                                   63420+SMF2AFX5 DS   0CL128                 LOCKING STATISTICS SUMMARY    @64A 03-IGWSMF\n 00000500                                   63421+SMF2AGPA DS   1FL4                   NUMBER OF RECORD LOCK         @64A 03-IGWSMF\n                                            63422+*                                    REQUESTS                      @64A\n                                            63423+*                                    (OBTAIN/ALTER/PROMOTE)        @64A\n 00000504                                   63424+SMF2AGPB DS   1FL4                   NUMBER OF RECORD LOCK         @64A 03-IGWSMF\n                                            63425+*                                    REQUESTS THAT CAUSE TRUE      @64A\n                                            63426+*                                    CONTENTION                    @64A\n 00000508                                   63427+SMF2AGPC DS   1FL4                   NUMBER OF RECORD LOCK         @64A 03-IGWSMF\n                                            63428+*                                    REQUESTS THAT CAUSE FALSE     @64A\n                                            63429+*                                    CONTENTION                    @64A\n 0000050C                                   63430+SMF2AGPD DS   1FL4                   NUMBER OF RECORD LOCK         @64A 03-IGWSMF\n                                            63431+*                                    RELEASE REQUESTS              @64A\n 00000510                                   63432+SMF2AGPE DS   1FL4                   NUMBER OF COMPONENT_1 TYPE    @64A 03-IGWSMF\n                                            63433+*                                    LOCK REQUESTS                 @64A\n 00000514                                   63434+SMF2AGPF DS   1FL4                   NUMBER OF COMPONENT_1 TYPE    @64A 03-IGWSMF\n                                            63435+*                                    RELEASE LOCK REQUESTS         @64A\n 00000518                                   63436+SMF2AGPG DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 00000520                                   63437+SMF2AGPH DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63438+*                                    CLASS_1 (DIWA) LOCKS          @64A\n                                            63439+*                                    (OBTAIN/ALTER/PROMOTE)        @64A\n 00000524                                   63440+SMF2AGPI DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63441+*                                    CLASS_1 (DIWA) LOCKS          @64A\n                                            63442+*                                    THAT CAUSE TRUE CONTENTION    @64A\n 00000528                                   63443+SMF2AGPJ DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63444+*                                    CLASS_1 (DIWA) LOCKS          @64A\n                                            63445+*                                    THAT CAUSE FALSE CONTENTION   @64A\n 0000052C                                   63446+SMF2AGPK DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63447+*                                    CLASS_1 (DIWA) RELEASE        @64A\n                                            63448+*                                    LOCK REQUESTS                 @64A\n 00000530                                   63449+SMF2AGPL DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63450+*                                    CLASS_2 (UPGRADE) LOCKS       @64A\n                                            63451+*                                    (OBTAIN/ALTER/PROMOTE)        @64A\n 00000534                                   63452+SMF2AGPM DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63453+*                                    CLASS_2 (UPGRADE) LOCKS       @64A\n                                            63454+*                                    THAT CAUSE TRUE CONTENTION    @64A\n 00000538                                   63455+SMF2AGPN DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63456+*                                    CLASS_2 (UPGRADE) LOCKS       @64A\n                                            63457+*                                    THAT CAUSE FALSE CONTENTION   @64A\n 0000053C                                   63458+SMF2AGPO DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63459+*                                    CLASS_2 (UPGRADE) RELEASE     @64A\n                                            63460+*                                    LOCK REQUESTS                 @64A\n 00000540                                   63461+SMF2AGPP DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63462+*                                    CLASS_3 (PREFORMAT) LOCKS     @64A\n                                            63463+*                                    (OBTAIN/ALTER/PROMOTE)        @64A\n 00000544                                   63464+SMF2AGPQ DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63465+*                                    CLASS_3 (PREFORMAT) LOCKS     @64A\n                                            63466+*                                    THAT CAUSE TRUE CONTENTION    @64A\n 00000548                                   63467+SMF2AGPR DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63468+*                                    CLASS_3 (PREFORMAT) LOCKS     @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  235\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           63469+*                                    THAT CAUSE FALSE CONTENTION   @64A\n 0000054C                                   63470+SMF2AGPS DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63471+*                                    CLASS_3 (PREFORMAT) RELEASE   @64A\n                                            63472+*                                    LOCK REQUESTS                 @64A\n 00000550                                   63473+SMF2AGPT DS   1FL4                   NUMBER OF COMPONENT_2         @64A 03-IGWSMF\n                                            63474+*                                    LOCK REQUESTS                 @64A\n                                            63475+*                                    (OBTAIN/ALTER/PROMOTE)        @64A\n 00000554                                   63476+SMF2AGPU DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS   @64A 03-IGWSMF\n                                            63477+*                                    THAT CAUSE TRUE CONTENTION    @64A\n 00000558                                   63478+SMF2AGPV DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS   @64A 03-IGWSMF\n                                            63479+*                                    THAT CAUSE FALSE CONTENTION   @64A\n 0000055C                                   63480+SMF2AGPW DS   1FL4                   NUMBER OF COMPONENT_2         @64A 03-IGWSMF\n                                            63481+*                                    RELEASE LOCK REQUESTS         @64A\n 00000560                                   63482+SMF2AGPX DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            63483+*                                                                  @64A\n                         00000080           63484+SMF2AFX5_LEN  EQU *-SMF2AFX5                                       @64A 03-IGWSMF\n                                            63485+*                                                                  @64A\n 00000580                                   63486+SMF2AFX7 DS   0CL64                  DATASET BMF LRU STATS         @64A 03-IGWSMF\n 00000580                                   63487+SMF2AGRA DS   1FL4                   NUMBER OF REDOS               @64A 03-IGWSMF\n 00000584                                   63488+SMF2AGRB DS   1FL4                   NUMBER OF RECURSIVE REDOS     @64A 03-IGWSMF\n 00000588                                   63489+SMF2AGRC DS   1FL4                   NUMBER OF BMF WRITES          @64A 03-IGWSMF\n 0000058C                                   63490+SMF2AGRD DS   1FL4                   NUMBER OF SCM READ REQUESTS   @64A 03-IGWSMF\n 00000590                                   63491+SMF2AGRE DS   1FL4                   NUMBER OF SCM READ REQUESTS   @64A 03-IGWSMF\n                                            63492+*                                    THAT ENCOUNTERED CASTOUT      @64A\n                                            63493+*                                    LOCK CONTENTION               @64A\n 00000594                                   63494+SMF2AGRG DS   1FL4                   REDO PERCENT                  @64A 03-IGWSMF\n 00000598                                   63495+SMF2AGRH DS   1FL4                   RECURSIVE REDO PERCENT        @64A 03-IGWSMF\n 0000059C                                   63496+SMF2AGRI DS   1FL4                   SCM CASTOUT LOCK PERCENT      @64A 03-IGWSMF\n 000005A0                                   63497+SMF2AGRF DS   CL8                    RESERVED                      @28C 03-IGWSMF\n 000005A8                                   63498+SMF2AGRW DS   1FL4                   LCDLATCH CONTENTION COUNT     @28A 03-IGWSMF\n 000005AC                                   63499+SMF2AGRJ DS   1FL4                   TOTAL NUMBER OF CF READ       @29C 03-IGWSMF\n                                            63500+*                                    REQUESTS WHICH ENCOUNTERED    @29A\n                                            63501+*                                    RETRIES FOR CAST OUT LOCK     @29A\n 000005B0                                   63502+SMF2AGRK DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            63503+*                                                                  @64A\n                         00000040           63504+SMF2AFX7_LEN  EQU *-SMF2AFX7                                       @64A 03-IGWSMF\n 000005C0                                   63505+SMF2AGAQ DS   CL16                   LOCK STRUCTURE NAME           @L3A 03-IGWSMF\n                         000005D0           63506+SMF2A0GA_LEN  EQU *-SMF2A0GA                                       @64A 03-IGWSMF\n                                            63507+*                                                                  @64A\n 00000000                00000000 000005E0  63508+SMF2A0GB DSECT ,                                                   @64A 03-IGWSMF\n 00000000                                   63509+SMF2AG1A DS   0CL1488                DATA SET/MVS SYSTEM SUMMARY   @64A 03-IGWSMF\n                                            63510+*                                    SECTION                       @64A\n 00000000                                   63511+SMF2AGBA DS   1FL4                   INTERVAL LENGTH. THIS IS THE  @64A 03-IGWSMF\n                                            63512+*                                    TOTAL TIME OF THE MEASUREMENT @64A\n                                            63513+*                                    PERIOD. (IN SECONDS)          @64A\n 00000004                                   63514+SMF2AA05 DS   CL12                   RESERVED                      @64A 03-IGWSMF\n                                            63515+*                                                                  @64A\n 00000010                                   63516+SMF2AGBB DS   CL44                   DATA SET NAME                 @64A 03-IGWSMF\n 0000003C                                   63517+SMF2AA06 DS   1FL4                   RESERVED                      @64A 03-IGWSMF\n                                            63518+*                                                                  @64A\n 00000040                                   63519+SMF2AGBC DS   CL44                   VSAM SPHERE NAME              @64A 03-IGWSMF\n 0000006C                                   63520+SMF2AA07 DS   1FL4                   RESERVED                      @64A 03-IGWSMF\n                                            63521+*                                                                  @64A\n 00000070                                   63522+SMF2AGBD DS   1FL2                   LENGTH OF THE STORAGE CLASS   @64A 03-IGWSMF\n                                            63523+*                                    NAME                          @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  236\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000072                                   63524+SMF2AGBE DS   CL30                   STORAGE CLASS NAME            @64A 03-IGWSMF\n                                            63525+*                                                                  @64A\n 00000090                                   63526+SMF2AA08 DS   1FL2                   CACHESETNAME LENGTH           @64A 03-IGWSMF\n 00000092                                   63527+SMF2AGBF DS   CL30                   CACHESET NAME                 @64A 03-IGWSMF\n                                            63528+*                                                                  @64A\n 000000B0                                   63529+SMF2AA12 DS   1FL2                   RESERVED                      @64A 03-IGWSMF\n 000000B2                                   63530+SMF2AGBG DS   CL30                   DFP CACHE STRUCTURE NAME      @64A 03-IGWSMF\n                                            63531+*                                                                  @64A\n 000000D0                                   63532+SMF2AGBH DS   CL8                    MVS SYSTEM NAME               @64A 03-IGWSMF\n 000000D8                                   63533+SMF2AA11 DS   CL8                    RESERVED                      @64A 03-IGWSMF\n                                            63534+*                                                                  @64A\n 000000E0                                   63535+SMF2AGBI DS   1FL4                   INDICATOR OF COMPONENT BEING  @64A 03-IGWSMF\n                                            63536+*                                    PROCESSED                     @64A\n                         80000000           63537+SMF2AGBI0 EQU   X'80000000'          DATA COMPONENT                @64A 03-IGWSMF\n                         40000000           63538+SMF2AGBI1 EQU   X'40000000'          INDEX COMPONENT               @64A 03-IGWSMF\n 000000E4                                   63539+SMF2AA09 DS   CL12                   INDICATES DFSMS GREATER       @64A 03-IGWSMF\n                                            63540+*                                    THAN 4K CF CACHING STATUS     @64A\n                                            63541+*                                    VALUES ARE ALL, NONE,         @64A\n                                            63542+*                                    UPDATESONLY, GT4KNOTACT       @64A\n 000000F0                                   63543+SMF2AGBK DS   1FL4                   NUMBER OF LOCK REQUESTS       @64A 03-IGWSMF\n                                            63544+*                                    PROCESSED                     @64A\n 000000F4                                   63545+SMF2AGBL DS   1FL4                   NUMBER OF TRUE CONTENTION     @64A 03-IGWSMF\n                                            63546+*                                    LOCK REQUESTS                 @64A\n 000000F8                                   63547+SMF2AGBM DS   1FL4                   NUMBER OF FALSE CONTENTION    @64A 03-IGWSMF\n                                            63548+*                                    LOCK REQUESTS                 @64A\n 000000FC                                   63549+SMF2AGZ8 DS   1FL2                   SMSDIRECTWEIGHT               @64A 03-IGWSMF\n 000000FE                                   63550+SMF2AGZ9 DS   1FL2                   SMSSEQUENTIALWEIGHT           @64A 03-IGWSMF\n                                            63551+*                                                                  @64A\n 00000100                                   63552+SMF2AGBN DS   CL8              IN DFSMS 1.4   WLM SERV CLASS NAME  @64A 03-IGWSMF\n 00000108                                   63553+SMF2AGBO DS   CL8              IN DFSMS 1.4   WLM REPORT CLS NAME  @64A 03-IGWSMF\n                                            63554+*                                                                  @64A\n 00000110                                   63555+SMF2AGBP DS   CL16                   SMS DATACLASS NAME            @64A 03-IGWSMF\n                                            63556+*                                                                  @64A\n 00000120                                   63557+SMF2AG1B DS   0CL336                 DIRECT ACCESS SUMMARY SECTION @64A 03-IGWSMF\n                                            63558+*                                                                  @64A\n 00000120                                   63559+SMF2AG1C DS   0CL168                 NORMAL DIRECT ACCESS SUMMARY  @64A 03-IGWSMF\n                                            63560+*                                    SECTION                       @64A\n 00000120                                   63561+SMF2AGIA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            63562+*                                    NUMBER                        @64A\n 00000124                                   63563+SMF2AGIB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n                                            63564+*                                                                  @64A\n 00000128                                   63565+SMF2AGIC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63566+*                                    NRI - NO READ INTEGRITY       @64A\n                                            63567+*                                                                  @64A\n 0000012C                                   63568+SMF2AGID DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63569+*                                    CONSISTENT READS              @64A\n                                            63570+*                                                                  @64A\n 00000130                                   63571+SMF2AGIE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            63572+*                                                                  @64A\n 00000134                                   63573+SMF2AGIF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n                                            63574+*                                                                  @64A\n 00000138                                   63575+SMF2AGIG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            63576+*                                                                  @64A\n 0000013C                                   63577+SMF2AGIH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            63578+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  237\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           63579+*                                                                  @64A\n 00000140                                   63580+SMF2AGII DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            63581+*                                                                  @64A\n 00000144                                   63582+SMF2AGIJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            63583+*                                                                  @64A\n 00000148                                   63584+SMF2AGIK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            63585+*                                                                  @64A\n 0000014C                                   63586+SMF2AGIL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            63587+*                                    THE SYSPLEX CACHE MANAGER     @64A\n                                            63588+*                                                                  @64A\n 00000150                                   63589+SMF2AGIM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            63590+*                                                                  @64A\n 00000154                                   63591+SMF2AGIN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 00000158                                   63592+SMF2AGIO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 0000015C                                   63593+SMF2AGIP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 00000160                                   63594+SMF2AGIQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            63595+*                                    DFSMS CACHE STRUCTURE         @64A\n                                            63596+*                                                                  @64A\n 00000168                                   63597+SMF2AGIR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            63598+*                                    TO DASD.                      @64A\n 0000016C                                   63599+SMF2AGIS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            63600+*                                    TO DASD.                      @64A\n 00000170                                   63601+SMF2AGIT DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63602+*                                    DASD FOR THE READ  REQUESTS   @64A\n                                            63603+*                                                                  @64A\n 00000178                                   63604+SMF2AGIU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63605+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            63606+*                                                                  @64A\n 00000180                                   63607+SMF2AGIV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            63608+*                                                                  @64A\n 00000190                                   63609+SMF2AGIW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            63610+*                                    REQUESTS IN THIS              @64A\n                                            63611+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            63612+*                                    IN milli-seconds)             @64A\n                                            63613+*                                                                  @64A\n 00000198                                   63614+SMF2AGIX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            63615+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            63616+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            63617+*                                                                  @64A\n 0000019C                                   63618+SMF2AGIY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            63619+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            63620+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n                                            63621+*                                    TRANSFERRED/4K)               @64A\n                                            63622+*                                                                  @64A\n 000001A0                                   63623+SMF2AGIZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 000001A8                                   63624+SMF2AGI7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            63625+*                                                                  @64A\n                         000000A8           63626+SMF2AG1C_LEN  EQU *-SMF2AG1C                                       @64A 03-IGWSMF\n                                            63627+*                                                                  @64A\n 000001C8                                   63628+SMF2AG1D DS   0CL168                 RE-DO DURING DIRECT ACCESS    @64A 03-IGWSMF\n                                            63629+*                                    SECTION                       @64A\n 000001C8                                   63630+SMF2AGJA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            63631+*                                    NUMBER                        @64A\n 000001CC                                   63632+SMF2AGJB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n                                            63633+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  238\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000001D0                                   63634+SMF2AGJC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63635+*                                    NRI - NO READ INTEGRITY       @64A\n                                            63636+*                                                                  @64A\n 000001D4                                   63637+SMF2AGJD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63638+*                                    CONSISTENT READS              @64A\n                                            63639+*                                                                  @64A\n 000001D8                                   63640+SMF2AGJE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            63641+*                                                                  @64A\n 000001DC                                   63642+SMF2AGJF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n                                            63643+*                                                                  @64A\n 000001E0                                   63644+SMF2AGJG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            63645+*                                                                  @64A\n 000001E4                                   63646+SMF2AGJH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            63647+*                                                                  @64A\n                                            63648+*                                                                  @64A\n 000001E8                                   63649+SMF2AGJI DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            63650+*                                                                  @64A\n 000001EC                                   63651+SMF2AGJJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            63652+*                                                                  @64A\n 000001F0                                   63653+SMF2AGJK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            63654+*                                                                  @64A\n 000001F4                                   63655+SMF2AGJL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            63656+*                                    THE SYSPLEX CACHE MANAGER     @64A\n                                            63657+*                                                                  @64A\n 000001F8                                   63658+SMF2AGJM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            63659+*                                                                  @64A\n 000001FC                                   63660+SMF2AGJN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 00000200                                   63661+SMF2AGJO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 00000204                                   63662+SMF2AGJP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 00000208                                   63663+SMF2AGJQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            63664+*                                    DFSMS CACHE STRUCTURE         @64A\n                                            63665+*                                                                  @64A\n 00000210                                   63666+SMF2AGJR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            63667+*                                    TO DASD.                      @64A\n 00000214                                   63668+SMF2AGJS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            63669+*                                    TO DASD.                      @64A\n 00000218                                   63670+SMF2AGJT DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63671+*                                    DASD FOR THE READ  REQUESTS   @64A\n                                            63672+*                                                                  @64A\n 00000220                                   63673+SMF2AGJU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63674+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            63675+*                                                                  @64A\n 00000228                                   63676+SMF2AGJV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            63677+*                                                                  @64A\n 00000238                                   63678+SMF2AGJW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            63679+*                                    REQUESTS IN THIS              @64A\n                                            63680+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            63681+*                                    IN milli-seconds)             @64A\n                                            63682+*                                                                  @64A\n 00000240                                   63683+SMF2AGJX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            63684+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            63685+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            63686+*                                                                  @64A\n 00000244                                   63687+SMF2AGJY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            63688+*                                    OF THE REQUESTS IN THIS INTERVAL\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  239\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           63689+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n                                            63690+*                                    TRANSFERRED/4K)               @64A\n                                            63691+*                                                                  @64A\n 00000248                                   63692+SMF2AGJZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 00000250                                   63693+SMF2AGJ7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            63694+*                                                                  @64A\n                         000000A8           63695+SMF2AG1D_LEN  EQU *-SMF2AG1D                                       @64A 03-IGWSMF\n                         00000150           63696+SMF2AG1B_LEN  EQU *-SMF2AG1B                                       @64A 03-IGWSMF\n                                            63697+*                                                                  @64A\n 00000270                                   63698+SMF2AG1E DS   0CL800                 SEQUENTIAL ACCESS SUMMARY SECTION  03-IGWSMF\n                                            63699+*                                                                  @64A\n 00000270                                   63700+SMF2AG1F DS   0CL168                 NORMAL SEQUENTIAL ACCESS SECTION   03-IGWSMF\n                                            63701+*                                                                  @64A\n 00000270                                   63702+SMF2AGKA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            63703+*                                    NUMBER                        @64A\n 00000274                                   63704+SMF2AGKB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n                                            63705+*                                                                  @64A\n 00000278                                   63706+SMF2AGKC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63707+*                                    NRI - NO READ INTEGRITY       @64A\n                                            63708+*                                                                  @64A\n 0000027C                                   63709+SMF2AGKD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63710+*                                    CONSISTENT READS              @64A\n                                            63711+*                                                                  @64A\n 00000280                                   63712+SMF2AGKE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            63713+*                                                                  @64A\n 00000284                                   63714+SMF2AGKF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n                                            63715+*                                                                  @64A\n 00000288                                   63716+SMF2AGKG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            63717+*                                                                  @64A\n 0000028C                                   63718+SMF2AGKH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            63719+*                                                                  @64A\n                                            63720+*                                                                  @64A\n 00000290                                   63721+SMF2AGKI DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            63722+*                                                                  @64A\n 00000294                                   63723+SMF2AGKJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            63724+*                                                                  @64A\n 00000298                                   63725+SMF2AGKK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            63726+*                                                                  @64A\n 0000029C                                   63727+SMF2AGKL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            63728+*                                    THE SYSPLEX CACHE MANAGER     @64A\n                                            63729+*                                                                  @64A\n 000002A0                                   63730+SMF2AGKM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            63731+*                                                                  @64A\n 000002A4                                   63732+SMF2AGKN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 000002A8                                   63733+SMF2AGKO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 000002AC                                   63734+SMF2AGKP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 000002B0                                   63735+SMF2AGKQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            63736+*                                    DFSMS CACHE STRUCTURE         @64A\n                                            63737+*                                                                  @64A\n 000002B8                                   63738+SMF2AGKR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            63739+*                                    TO DASD.                      @64A\n 000002BC                                   63740+SMF2AGKS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            63741+*                                    TO DASD.                      @64A\n 000002C0                                   63742+SMF2AGKT DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63743+*                                    DASD FOR THE READ  REQUESTS   @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  240\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           63744+*                                                                  @64A\n 000002C8                                   63745+SMF2AGKU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63746+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            63747+*                                                                  @64A\n 000002D0                                   63748+SMF2AGKV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            63749+*                                                                  @64A\n 000002E0                                   63750+SMF2AGKW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            63751+*                                    REQUESTS IN THIS              @64A\n                                            63752+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            63753+*                                    IN milli-seconds)             @64A\n                                            63754+*                                                                  @64A\n 000002E8                                   63755+SMF2AGKX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            63756+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            63757+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            63758+*                                                                  @64A\n 000002EC                                   63759+SMF2AGKY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            63760+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            63761+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n                                            63762+*                                    TRANSFERRED/4K)               @64A\n                                            63763+*                                                                  @64A\n 000002F0                                   63764+SMF2AGKZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 000002F8                                   63765+SMF2AGK7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            63766+*                                                                  @64A\n                         000000A8           63767+SMF2AG1F_LEN  EQU *-SMF2AG1F                                       @64A 03-IGWSMF\n                                            63768+*                                                                  @64A\n 00000318                                   63769+SMF2AG1G DS   0CL168                 RE-DO DURING SEQUENTIAL ACCESS@64A 03-IGWSMF\n                                            63770+*                                    SECTION                       @64A\n 00000318                                   63771+SMF2AGLA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            63772+*                                    NUMBER                        @64A\n 0000031C                                   63773+SMF2AGLB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n                                            63774+*                                                                  @64A\n 00000320                                   63775+SMF2AGLC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63776+*                                    NRI - NO READ INTEGRITY       @64A\n                                            63777+*                                                                  @64A\n 00000324                                   63778+SMF2AGLD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63779+*                                    CONSISTENT READS              @64A\n                                            63780+*                                                                  @64A\n 00000328                                   63781+SMF2AGLE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            63782+*                                                                  @64A\n 0000032C                                   63783+SMF2AGLF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n                                            63784+*                                                                  @64A\n 00000330                                   63785+SMF2AGLG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            63786+*                                                                  @64A\n 00000334                                   63787+SMF2AGLH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            63788+*                                                                  @64A\n                                            63789+*                                                                  @64A\n 00000338                                   63790+SMF2AGLI DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            63791+*                                                                  @64A\n 0000033C                                   63792+SMF2AGLJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            63793+*                                                                  @64A\n 00000340                                   63794+SMF2AGLK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            63795+*                                                                  @64A\n 00000344                                   63796+SMF2AGLL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            63797+*                                    THE SYSPLEX CACHE MANAGER     @64A\n                                            63798+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  241\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000348                                   63799+SMF2AGLM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            63800+*                                                                  @64A\n 0000034C                                   63801+SMF2AGLN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 00000350                                   63802+SMF2AGLO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 00000354                                   63803+SMF2AGLP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 00000358                                   63804+SMF2AGLQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            63805+*                                    DFSMS CACHE STRUCTURE         @64A\n                                            63806+*                                                                  @64A\n 00000360                                   63807+SMF2AGLR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            63808+*                                    TO DASD.                      @64A\n 00000364                                   63809+SMF2AGLS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            63810+*                                    TO DASD.                      @64A\n 00000368                                   63811+SMF2AGLT DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63812+*                                    DASD FOR THE READ  REQUESTS   @64A\n                                            63813+*                                                                  @64A\n 00000370                                   63814+SMF2AGLU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63815+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            63816+*                                                                  @64A\n 00000378                                   63817+SMF2AGLV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            63818+*                                                                  @64A\n 00000388                                   63819+SMF2AGLW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            63820+*                                    REQUESTS IN THIS              @64A\n                                            63821+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            63822+*                                    IN milli-seconds)             @64A\n                                            63823+*                                                                  @64A\n 00000390                                   63824+SMF2AGLX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            63825+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            63826+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            63827+*                                                                  @64A\n 00000394                                   63828+SMF2AGLY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            63829+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            63830+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n                                            63831+*                                    TRANSFERRED/4K)               @64A\n                                            63832+*                                                                  @64A\n 00000398                                   63833+SMF2AGLZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 000003A0                                   63834+SMF2AGL7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            63835+*                                                                  @64A\n                         000000A8           63836+SMF2AG1G_LEN  EQU *-SMF2AG1G                                       @64A 03-IGWSMF\n                                            63837+*                                                                  @64A\n 000003C0                                   63838+SMF2AG1H DS   0CL168                 READ-A-HEAD SEQUENTIAL ACCESS @64A 03-IGWSMF\n                                            63839+*                                    SECTION                       @64A\n 000003C0                                   63840+SMF2AGMA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            63841+*                                    NUMBER                        @64A\n 000003C4                                   63842+SMF2AGMB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n                                            63843+*                                                                  @64A\n 000003C8                                   63844+SMF2AGMC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63845+*                                    NRI - NO READ INTEGRITY       @64A\n                                            63846+*                                                                  @64A\n 000003CC                                   63847+SMF2AGMD DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63848+*                                    CONSISTENT READS              @64A\n                                            63849+*                                                                  @64A\n 000003D0                                   63850+SMF2AGME DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            63851+*                                                                  @64A\n 000003D4                                   63852+SMF2AGMF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n                                            63853+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  242\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000003D8                                   63854+SMF2AGMG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            63855+*                                                                  @64A\n 000003DC                                   63856+SMF2AGMH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            63857+*                                                                  @64A\n                                            63858+*                                                                  @64A\n 000003E0                                   63859+SMF2AGMI DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            63860+*                                                                  @64A\n 000003E4                                   63861+SMF2AGMJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            63862+*                                                                  @64A\n 000003E8                                   63863+SMF2AGMK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            63864+*                                                                  @64A\n 000003EC                                   63865+SMF2AGML DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            63866+*                                    THE SYSPLEX CACHE MANAGER     @64A\n                                            63867+*                                                                  @64A\n 000003F0                                   63868+SMF2AGMM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            63869+*                                                                  @64A\n 000003F4                                   63870+SMF2AGMN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 000003F8                                   63871+SMF2AGMO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 000003FC                                   63872+SMF2AGMP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 00000400                                   63873+SMF2AGMQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            63874+*                                    DFSMS CACHE STRUCTURE         @64A\n                                            63875+*                                                                  @64A\n 00000408                                   63876+SMF2AGMR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            63877+*                                    TO DASD.                      @64A\n 0000040C                                   63878+SMF2AGMS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            63879+*                                    TO DASD.                      @64A\n 00000410                                   63880+SMF2AGMT DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63881+*                                    DASD FOR THE READ  REQUESTS   @64A\n                                            63882+*                                                                  @64A\n 00000418                                   63883+SMF2AGMU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63884+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            63885+*                                                                  @64A\n 00000420                                   63886+SMF2AGMV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            63887+*                                                                  @64A\n 00000430                                   63888+SMF2AGMW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            63889+*                                    REQUESTS IN THIS              @64A\n                                            63890+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            63891+*                                    IN milli-seconds)             @64A\n                                            63892+*                                                                  @64A\n 00000438                                   63893+SMF2AGMX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL @64A 03-IGWSMF\n                                            63894+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n                                            63895+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            63896+*                                                                  @64A\n 0000043C                                   63897+SMF2AGMY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            63898+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            63899+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n                                            63900+*                                    TRANSFERRED/4K)               @64A\n                                            63901+*                                                                  @64A\n 00000440                                   63902+SMF2AGMZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 00000448                                   63903+SMF2AGM7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            63904+*                                                                  @64A\n                         000000A8           63905+SMF2AG1H_LEN  EQU *-SMF2AG1H                                       @64A 03-IGWSMF\n                                            63906+*                                                                  @64A\n 00000468                                   63907+SMF2AG1I DS   0CL168                 PRE-FORMAT SEQUENTIAL ACCESS  @64A 03-IGWSMF\n                                            63908+*                                    SECTION                       @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  243\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000468                                   63909+SMF2AGNA DS   1FL4                   COUPLE FACILITY CACHE PARTITION    03-IGWSMF\n                                            63910+*                                    NUMBER                        @64A\n 0000046C                                   63911+SMF2AGNB DS   1FL4                   TOTAL NUMBER OF REQUESTS      @64A 03-IGWSMF\n                                            63912+*                                                                  @64A\n 00000470                                   63913+SMF2AGNC DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63914+*                                    NRI - NO READ INTEGRITY       @64A\n                                            63915+*                                                                  @64A\n 00000474                                   63916+SMF2AGND DS   1FL4                   TOTAL NUMBER OF READ REQUESTS @64A 03-IGWSMF\n                                            63917+*                                    CONSISTENT READS   @10A       @64A\n                                            63918+*                                                                  @64A\n 00000478                                   63919+SMF2AGNE DS   1FL4                   TOTAL NUMBER OF WRITE REQUESTS@64A 03-IGWSMF\n                                            63920+*                                                                  @64A\n 0000047C                                   63921+SMF2AGNF DS   1FL4                   NUMBER OF BMF REQUESTS        @64A 03-IGWSMF\n                                            63922+*                                                                  @64A\n 00000480                                   63923+SMF2AGNG DS   1FL4                   NUMBER OF BMF READ REQUESTS   @64A 03-IGWSMF\n                                            63924+*                                                                  @64A\n 00000484                                   63925+SMF2AGNH DS   1FL4                   NUMBER OF BMF WRITE REQUESTS  @64A 03-IGWSMF\n                                            63926+*                                                                  @64A\n                                            63927+*                                                                  @64A\n 00000488                                   63928+SMF2AGNI DS   1FL4                   NUMBER OF BMF READ HITS       @64A 03-IGWSMF\n                                            63929+*                                                                  @64A\n 0000048C                                   63930+SMF2AGNJ DS   1FL4                   NUMBER OF BMF VALID READ HITS @64A 03-IGWSMF\n                                            63931+*                                                                  @64A\n 00000490                                   63932+SMF2AGNK DS   1FL4                   NUMBER OF BMF FALSE INVALIDS  @64A 03-IGWSMF\n                                            63933+*                                                                  @64A\n 00000494                                   63934+SMF2AGNL DS   1FL4                   NUMBER OF REQUESTS PROCESSED BY    03-IGWSMF\n                                            63935+*                                    THE SYSPLEX CACHE MANAGER     @64A\n                                            63936+*                                                                  @64A\n 00000498                                   63937+SMF2AGNM DS   1FL4                   NUMBER OF CF READ REQUESTS    @64A 03-IGWSMF\n                                            63938+*                                                                  @64A\n 0000049C                                   63939+SMF2AGNN DS   1FL4                   NUMBER OF CF WRITE REQUESTS   @64A 03-IGWSMF\n 000004A0                                   63940+SMF2AGNO DS   1FL4                   NUMBER OF CF READ HITS        @64A 03-IGWSMF\n 000004A4                                   63941+SMF2AGNP DS   1FL4                   NUMBER OF CF READ CASTINS     @64A 03-IGWSMF\n 000004A8                                   63942+SMF2AGNQ DS   2F                     NUMBER OF BYTES XFERRED INTO THE   03-IGWSMF\n                                            63943+*                                    DFSMS CACHE STRUCTURE         @64A\n                                            63944+*                                                                  @64A\n 000004B0                                   63945+SMF2AGNR DS   1FL4                   NUMBER OF READ  REAL I/O REQUESTS  03-IGWSMF\n                                            63946+*                                    TO DASD.                      @64A\n 000004B4                                   63947+SMF2AGNS DS   1FL4                   NUMBER OF WRITE REAL I/O REQUESTS  03-IGWSMF\n                                            63948+*                                    TO DASD.                      @64A\n 000004B8                                   63949+SMF2AGNT DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63950+*                                    DASD FOR THE READ  REQUESTS   @64A\n                                            63951+*                                                                  @64A\n 000004C0                                   63952+SMF2AGNU DS   2F                     NUMBER OF BYTES TRANSFERRED TO@64A 03-IGWSMF\n                                            63953+*                                    DASD FOR THE WRITE REQUESTS   @64A\n                                            63954+*                                                                  @64A\n 000004C8                                   63955+SMF2AGNV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            63956+*                                                                  @64A\n 000004D8                                   63957+SMF2AGNW DS   2F                     TOTAL AMOUNT OF TIME FOR ALL THE   03-IGWSMF\n                                            63958+*                                    REQUESTS IN THIS              @64A\n                                            63959+*                                    INTERVAL. (THE VALUE IS EXPRESSED\n                                            63960+*                                    IN milli-seconds)             @64A\n                                            63961+*                                                                  @64A\n 000004E0                                   63962+SMF2AGNX DS   1FL4                   AVERAGE RESPONSE TIME FOR ALL OF   03-IGWSMF\n                                            63963+*                                    THE REQUESTS IN THIS INTERVAL.@64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  244\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           63964+*                                    (TOTAL TIME/NUMBER OF REQUESTS)\n                                            63965+*                                                                  @64A\n 000004E4                                   63966+SMF2AGNY DS   1FL4                   NORMALIZED RESPONSE TIME FOR ALL   03-IGWSMF\n                                            63967+*                                    OF THE REQUESTS IN THIS INTERVAL\n                                            63968+*                                    (TOTAL TIME/NUMBER OF BYTES   @64A\n                                            63969+*                                    TRANSFERRED/4K)               @64A\n                                            63970+*                                                                  @64A\n 000004E8                                   63971+SMF2AGNZ DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 000004F0                                   63972+SMF2AGN7 DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            63973+*                                                                  @64A\n                         000000A8           63974+SMF2AG1I_LEN  EQU *-SMF2AG1I                                       @64A 03-IGWSMF\n                         000002A0           63975+SMF2AG1E_LEN  EQU *-SMF2AG1E                                       @64A 03-IGWSMF\n                                            63976+*                                                                  @64A\n                                            63977+*                                                                  @64A\n 00000510                                   63978+SMF2AGX6 DS   0CL128                 LOCKING STATISTICS SUMMARY    @64A 03-IGWSMF\n 00000510                                   63979+SMF2AGQA DS   1FL4                   NUMBER OF RECORD LOCK         @64A 03-IGWSMF\n                                            63980+*                                    REQUESTS                      @64A\n                                            63981+*                                    (OBTAIN/ALTER/PROMOTE)        @64A\n 00000514                                   63982+SMF2AGQB DS   1FL4                   NUMBER OF RECORD LOCK         @64A 03-IGWSMF\n                                            63983+*                                    REQUESTS THAT CAUSE TRUE      @64A\n                                            63984+*                                    CONTENTION                    @64A\n 00000518                                   63985+SMF2AGQC DS   1FL4                   NUMBER OF RECORD LOCK         @64A 03-IGWSMF\n                                            63986+*                                    REQUESTS THAT CAUSE FALSE     @64A\n                                            63987+*                                    CONTENTION                    @64A\n 0000051C                                   63988+SMF2AGQD DS   1FL4                   NUMBER OF RECORD LOCK         @64A 03-IGWSMF\n                                            63989+*                                    RELEASE REQUESTS              @64A\n 00000520                                   63990+SMF2AGQE DS   1FL4                   NUMBER OF COMPONENT_1 TYPE    @64A 03-IGWSMF\n                                            63991+*                                    LOCK REQUESTS                 @64A\n 00000524                                   63992+SMF2AGQF DS   1FL4                   NUMBER OF COMPONENT_1 TYPE    @64A 03-IGWSMF\n                                            63993+*                                    RELEASE LOCK REQUESTS         @64A\n 00000528                                   63994+SMF2AGQG DS   CL8                    RESERVED                      @64A 03-IGWSMF\n 00000530                                   63995+SMF2AGQH DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63996+*                                    CLASS_1 (DIWA) LOCKS          @64A\n                                            63997+*                                    (OBTAIN/ALTER/PROMOTE)        @64A\n 00000534                                   63998+SMF2AGQI DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            63999+*                                    CLASS_1 (DIWA) LOCKS          @64A\n                                            64000+*                                    THAT CAUSE TRUE CONTENTION    @64A\n 00000538                                   64001+SMF2AGQJ DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            64002+*                                    CLASS_1 (DIWA) LOCKS          @64A\n                                            64003+*                                    THAT CAUSE FALSE CONTENTION   @64A\n 0000053C                                   64004+SMF2AGQK DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            64005+*                                    CLASS_1 (DIWA) RELEASE        @64A\n                                            64006+*                                    LOCK REQUESTS                 @64A\n 00000540                                   64007+SMF2AGQL DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            64008+*                                    CLASS_2 (UPGRADE) LOCKS       @64A\n                                            64009+*                                    (OBTAIN/ALTER/PROMOTE)        @64A\n 00000544                                   64010+SMF2AGQM DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            64011+*                                    CLASS_2 (UPGRADE) LOCKS       @64A\n                                            64012+*                                    THAT CAUSE TRUE CONTENTION    @64A\n 00000548                                   64013+SMF2AGQN DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            64014+*                                    CLASS_2 (UPGRADE) LOCKS       @64A\n                                            64015+*                                    THAT CAUSE FALSE CONTENTION   @64A\n 0000054C                                   64016+SMF2AGQO DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            64017+*                                    CLASS_2 (UPGRADE) RELEASE     @64A\n                                            64018+*                                    LOCK REQUESTS                 @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  245\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000550                                   64019+SMF2AGQP DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            64020+*                                    CLASS_3 (PREFORMAT) LOCKS     @64A\n                                            64021+*                                    (OBTAIN/ALTER/PROMOTE)        @64A\n 00000554                                   64022+SMF2AGQQ DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            64023+*                                    CLASS_3 (PREFORMAT) LOCKS     @64A\n                                            64024+*                                    THAT CAUSE TRUE CONTENTION    @64A\n 00000558                                   64025+SMF2AGQR DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            64026+*                                    CLASS_3 (PREFORMAT) LOCKS     @64A\n                                            64027+*                                    THAT CAUSE FALSE CONTENTION   @64A\n 0000055C                                   64028+SMF2AGQS DS   1FL4                   NUMBER OF COMPONENT_1         @64A 03-IGWSMF\n                                            64029+*                                    CLASS_3 (PREFORMAT) RELEASE   @64A\n                                            64030+*                                    LOCK REQUESTS                 @64A\n 00000560                                   64031+SMF2AGQT DS   1FL4                   NUMBER OF COMPONENT_2         @64A 03-IGWSMF\n                                            64032+*                                    LOCK REQUESTS                 @64A\n                                            64033+*                                    (OBTAIN/ALTER/PROMOTE)        @64A\n 00000564                                   64034+SMF2AGQU DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS   @64A 03-IGWSMF\n                                            64035+*                                    THAT CAUSE TRUE CONTENTION    @64A\n 00000568                                   64036+SMF2AGQV DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS   @64A 03-IGWSMF\n                                            64037+*                                    THAT CAUSE FALSE CONTENTION   @64A\n 0000056C                                   64038+SMF2AGQW DS   1FL4                   NUMBER OF COMPONENT_2         @64A 03-IGWSMF\n                                            64039+*                                    RELEASE LOCK REQUESTS         @64A\n 00000570                                   64040+SMF2AGQX DS   CL32                   RESERVED                      @64A 03-IGWSMF\n                                            64041+*                                                                  @64A\n                         00000080           64042+SMF2AGX6_LEN  EQU *-SMF2AGX6                                       @64A 03-IGWSMF\n                                            64043+*                                                                  @64A\n 00000590                                   64044+SMF2AFX8 DS   0CL64                  DATASET BMF LRU STATS         @64A 03-IGWSMF\n 00000590                                   64045+SMF2AGRL DS   1FL4                   NUMBER OF REDOS               @64A 03-IGWSMF\n 00000594                                   64046+SMF2AGRM DS   1FL4                   NUMBER OF RECURSIVE REDOS     @64A 03-IGWSMF\n 00000598                                   64047+SMF2AGRN DS   1FL4                   NUMBER OF BMF WRITES          @64A 03-IGWSMF\n 0000059C                                   64048+SMF2AGRO DS   1FL4                   NUMBER OF SCM READ REQUESTS   @64A 03-IGWSMF\n 000005A0                                   64049+SMF2AGRP DS   1FL4                   NUMBER OF SCM READ REQUESTS   @64A 03-IGWSMF\n                                            64050+*                                    THAT ENCOUNTERED CASTOUT      @64A\n                                            64051+*                                    LOCK CONTENTION               @64A\n 000005A4                                   64052+SMF2AGRR DS   1FL4                   REDO PERCENT                  @64A 03-IGWSMF\n 000005A8                                   64053+SMF2AGRS DS   1FL4                   RECURSIVE REDO PERCENT        @64A 03-IGWSMF\n 000005AC                                   64054+SMF2AGRT DS   1FL4                   SCM CASTOUT LOCK PERCENT      @64A 03-IGWSMF\n 000005B0                                   64055+SMF2AGRQ DS   CL12                   RESERVED                      @64A 03-IGWSMF\n 000005BC                                   64056+SMF2AGRU DS   1FL4                   Total number of CF read       @29C 03-IGWSMF\n                                            64057+*                                    requests which encountered    @29A\n                                            64058+*                                    retries for cast out locks    @29A\n                                            64059+*                                    for this interval             @29A\n 000005C0                                   64060+SMF2AGRV DS   CL16                   RESERVED                      @64A 03-IGWSMF\n                                            64061+*                                                                  @64A\n                                            64062+*                                                                  @64A\n                         00000040           64063+SMF2AFX8_LEN  EQU *-SMF2AFX8                                       @64A 03-IGWSMF\n 000005D0                                   64064+SMF2AGBQ DS   CL16                   LOCK STRUCTURE NAME           @P7A 03-IGWSMF\n                         000005E0           64065+SMF2A0GB_LEN  EQU *-SMF2A0GB                                       @64A 03-IGWSMF\n                                            64066+*                                                                  @64A\n                                            64067+*\n                                            64068+*   -----------------------------------------------------------------\n                                            64069+*    LOCK STRUCTURE ACTIVITY SUMMARY (SMF42 SUBTYPE 17)\n                                            64070+*   -----------------------------------------------------------------\n                                            64071+*   -----------------------------------------------------------------\n                                            64072+*    LOCK ACTIVITY ACROSS THE SYSPLEX FOR THE LOCK STRUCTURE\n                                            64073+*   -----------------------------------------------------------------\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  246\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000000                00000000 00000120  64074+SMF420HA DSECT ,                                                        03-IGWSMF\n                                            64075+*\n 00000000                                   64076+SMF42HA1 DS   0CL288                 LOCK STRUCTURE SUMMARY             03-IGWSMF\n                                            64077+*                                    SECTION                     @10A\n 00000000                                   64078+SMF42HAA DS   1FL4                   INTERVAL LENGTH. THIS IS THE       03-IGWSMF\n                                            64079+*                                    TOTAL TIME OF THE MEASUREMENT\n                                            64080+*                                    PERIOD. (IN SECONDS)        @10A\n 00000004                                   64081+SMF42H00 DS   CL12                   RESERVED                    @10A   03-IGWSMF\n                                            64082+*\n 00000010                                   64083+SMF42HAB DS   CL16                   DFP LAF NAME                @10A   03-IGWSMF\n 00000020                                   64084+SMF42H01 DS   CL16                   RESERVED                    @10A   03-IGWSMF\n                                            64085+*   -----------------------------------------------------------------\n                                            64086+*    LOCKS PROCESSED DURING VSAM/RLS READ/WRITE REQUESTS\n                                            64087+*   -----------------------------------------------------------------\n 00000030                                   64088+SMF42HAC DS   1FL4                   NUMBER OF LOCK REQUESTS            03-IGWSMF\n                                            64089+*                                                                @10A\n                                            64090+*                                    NOW CONTAINS ZEROS          @10A\n 00000034                                   64091+SMF42HAD DS   1FL4                   NUMBER OF TRUE CONTENTION          03-IGWSMF\n                                            64092+*                                    LOCK REQUESTS               @10A\n                                            64093+*                                    NOW CONTAINS ZEROS          @10A\n 00000038                                   64094+SMF42HAE DS   1FL4                   NUMBER OF FALSE CONTENTION         03-IGWSMF\n                                            64095+*                                    LOCK REQUESTS               @10A\n                                            64096+*                                    NOW CONTAINS ZEROS          @10A\n 0000003C                                   64097+SMF42HAF DS   1FL4                   RESERVED                           03-IGWSMF\n                                            64098+*\n 00000040                                   64099+SMF42HAG DS   CL32                   RESERVED                           03-IGWSMF\n                                            64100+*   -----------------------------------------------------------------\n                                            64101+*    LOCKS PROCESSED WHICH ARE NOT ASSOCIATED WITH SPECIFIC READ/WRITE/\n                                            64102+*   -----------------------------------------------------------------\n 00000060                                   64103+SMF42HAH DS   1FL4                   NUMBER OF LOCK REQUESTS            03-IGWSMF\n                                            64104+*                                                                @10A\n                                            64105+*                                    NOW CONTAINS ZEROS          @10A\n 00000064                                   64106+SMF42HAI DS   1FL4                   NUMBER OF TRUE CONTENTION          03-IGWSMF\n                                            64107+*                                    LOCK REQUESTS               @10A\n                                            64108+*                                    NOW CONTAINS ZEROS          @10A\n 00000068                                   64109+SMF42HAJ DS   1FL4                   NUMBER OF FALSE CONTENTION         03-IGWSMF\n                                            64110+*                                    LOCK REQUESTS               @10A\n                                            64111+*                                    NOW CONTAINS ZEROS          @10A\n 0000006C                                   64112+SMF42HAK DS   1FL4                   RESERVED                           03-IGWSMF\n                                            64113+*\n 00000070                                   64114+SMF42HAL DS   CL32                   RESERVED                           03-IGWSMF\n 00000090                                   64115+SMF42HCA DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            64116+*                                    REQUESTS                    @10A\n                                            64117+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000094                                   64118+SMF42HCB DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            64119+*                                    REQUESTS THAT CAUSE TRUE    @10A\n                                            64120+*                                    CONTENTION                  @10A\n 00000098                                   64121+SMF42HCC DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            64122+*                                    REQUESTS THAT CAUSE FALSE   @10A\n                                            64123+*                                    CONTENTION                  @10A\n 0000009C                                   64124+SMF42HCD DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            64125+*                                    RELEASE REQUESTS            @10A\n 000000A0                                   64126+SMF42HCE DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n                                            64127+*                                    LOCK REQUESTS               @10A\n 000000A4                                   64128+SMF42HCF DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  247\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           64129+*                                    RELEASE LOCK REQUESTS       @10A\n 000000A8                                   64130+SMF42HCG DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000000B0                                   64131+SMF42HCH DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            64132+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            64133+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000000B4                                   64134+SMF42HCI DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            64135+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            64136+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000000B8                                   64137+SMF42HCJ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            64138+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            64139+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000000BC                                   64140+SMF42HCK DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            64141+*                                    CLASS_1 (DIWA) RELEASE      @10A\n                                            64142+*                                    LOCK REQUESTS               @10A\n 000000C0                                   64143+SMF42HCL DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            64144+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            64145+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000000C4                                   64146+SMF42HCM DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            64147+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            64148+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000000C8                                   64149+SMF42HCN DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            64150+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            64151+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000000CC                                   64152+SMF42HCO DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            64153+*                                    CLASS_2 (UPGRADE) RELEASE   @10A\n                                            64154+*                                    LOCK REQUESTS               @10A\n 000000D0                                   64155+SMF42HCP DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            64156+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            64157+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000000D4                                   64158+SMF42HCQ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            64159+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            64160+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000000D8                                   64161+SMF42HCR DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            64162+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            64163+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000000DC                                   64164+SMF42HCS DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            64165+*                                    CLASS_3 (PREFORMAT) RELEASE @10A\n                                            64166+*                                    LOCK REQUESTS               @10A\n 000000E0                                   64167+SMF42HCT DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n                                            64168+*                                    LOCK REQUESTS               @10A\n                                            64169+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000000E4                                   64170+SMF42HCU DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            64171+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000000E8                                   64172+SMF42HCV DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            64173+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000000EC                                   64174+SMF42HCW DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n                                            64175+*                                    RELEASE LOCK REQUESTS       @10A\n 000000F0                                   64176+SMF42HCX DS   1FL4                   NUMBER OF SPECIAL LOCK      @10A   03-IGWSMF\n                                            64177+*                                    REQUESTS                    @10A\n 000000F4                                   64178+SMF42HCY DS   CL12                   RESERVED                    @10A   03-IGWSMF\n 00000100                                   64179+SMF42HCZ DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            64180+*                                                                @10A\n                         00000120           64181+SMF420HA_LEN EQU *-SMF420HA                                             03-IGWSMF\n                                            64182+*   -----------------------------------------------------------------\n                                            64183+*    LOCK ACTIVITY ON ONE MVS SYSTEM IN THE SYSPLEX\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  248\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           64184+*   -----------------------------------------------------------------\n 00000000                00000000 00000120  64185+SMF420HB DSECT ,                                                        03-IGWSMF\n 00000000                                   64186+SMF42HA2 DS   0CL288                 MVS SYSTEM/LAF ACTIVITY            03-IGWSMF\n                                            64187+*                                    TOTALS SECTION              @10A\n 00000000                                   64188+SMF42HBA DS   1FL4                   INTERVAL LENGTH. THIS IS THE       03-IGWSMF\n                                            64189+*                                    TOTAL TIME OF THE MEASUREMENT\n                                            64190+*                                    PERIOD. (IN SECONDS)        @10A\n 00000004                                   64191+SMF42H02 DS   CL12                   RESERVED                    @10A   03-IGWSMF\n                                            64192+*\n 00000010                                   64193+SMF42HBB DS   CL16                   DFP LAF NAME                @10A   03-IGWSMF\n                                            64194+*\n 00000020                                   64195+SMF42HBC DS   CL8                    MVS SYSTEM NAME             @10A   03-IGWSMF\n 00000028                                   64196+SMF42H03 DS   CL8                    RESERVED                    @10A   03-IGWSMF\n                                            64197+*   -----------------------------------------------------------------\n                                            64198+*    LOCKS PROCESSED DURING VSAM/RLS READ/WRITE REQUESTS\n                                            64199+*   -----------------------------------------------------------------\n 00000030                                   64200+SMF42HBD DS   1FL4                   NUMBER OF LOCK REQUESTS            03-IGWSMF\n                                            64201+*                                    PROCESSED BY THIS MVS SYSTEM@10A\n 00000034                                   64202+SMF42HBE DS   1FL4                   NUMBER OF TRUE CONTENTION          03-IGWSMF\n                                            64203+*                                    LOCK REQUESTS               @10A\n 00000038                                   64204+SMF42HBF DS   1FL4                   NUMBER OF FALSE CONTENTION         03-IGWSMF\n                                            64205+*                                    LOCK REQUESTS               @10A\n 0000003C                                   64206+SMF42HBG DS   1FL4                   RESERVED                           03-IGWSMF\n                                            64207+*\n 00000040                                   64208+SMF42HBH DS   CL32                   RESERVED                           03-IGWSMF\n                                            64209+*   -----------------------------------------------------------------\n                                            64210+*    LOCKS PROCESSED WHICH ARE NOT ASSOCIATED WITH SPECIFIC READ/WRITE/\n                                            64211+*   -----------------------------------------------------------------\n 00000060                                   64212+SMF42HBI DS   1FL4                   NUMBER OF LOCK REQUESTS            03-IGWSMF\n                                            64213+*                                    PROCESSED BY THIS MVS SYSTEM@10A\n 00000064                                   64214+SMF42HBJ DS   1FL4                   NUMBER OF TRUE CONTENTION          03-IGWSMF\n                                            64215+*                                    LOCK REQUESTS               @10A\n 00000068                                   64216+SMF42HBK DS   1FL4                   NUMBER OF FALSE CONTENTION         03-IGWSMF\n                                            64217+*                                    LOCK REQUESTS               @10A\n 0000006C                                   64218+SMF42HBL DS   1FL4                   RESERVED                           03-IGWSMF\n                                            64219+*\n 00000070                                   64220+SMF42HBM DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            64221+*                                                                @10A\n 00000090                                   64222+SMF42HDA DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            64223+*                                    REQUESTS                    @10A\n                                            64224+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 00000094                                   64225+SMF42HDB DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            64226+*                                    REQUESTS THAT CAUSE TRUE    @10A\n                                            64227+*                                    CONTENTION                  @10A\n 00000098                                   64228+SMF42HDC DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            64229+*                                    REQUESTS THAT CAUSE FALSE   @10A\n                                            64230+*                                    CONTENTION                  @10A\n 0000009C                                   64231+SMF42HDD DS   1FL4                   NUMBER OF RECORD LOCK       @10A   03-IGWSMF\n                                            64232+*                                    RELEASE REQUESTS            @10A\n 000000A0                                   64233+SMF42HDE DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n                                            64234+*                                    LOCK REQUESTS               @10A\n 000000A4                                   64235+SMF42HDF DS   1FL4                   NUMBER OF COMPONENT_1 TYPE  @10A   03-IGWSMF\n                                            64236+*                                    RELEASE LOCK REQUESTS       @10A\n 000000A8                                   64237+SMF42HDG DS   CL8                    RESERVED                    @10A   03-IGWSMF\n 000000B0                                   64238+SMF42HDH DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  249\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           64239+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            64240+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000000B4                                   64241+SMF42HDI DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            64242+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            64243+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000000B8                                   64244+SMF42HDJ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            64245+*                                    CLASS_1 (DIWA) LOCKS        @10A\n                                            64246+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000000BC                                   64247+SMF42HDK DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            64248+*                                    CLASS_1 (DIWA) RELEASE      @10A\n                                            64249+*                                    LOCK REQUESTS               @10A\n 000000C0                                   64250+SMF42HDL DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            64251+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            64252+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000000C4                                   64253+SMF42HDM DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            64254+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            64255+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000000C8                                   64256+SMF42HDN DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            64257+*                                    CLASS_2 (UPGRADE) LOCKS     @10A\n                                            64258+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000000CC                                   64259+SMF42HDO DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            64260+*                                    CLASS_2 (UPGRADE) RELEASE   @10A\n                                            64261+*                                    LOCK REQUESTS               @10A\n 000000D0                                   64262+SMF42HDP DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            64263+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            64264+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000000D4                                   64265+SMF42HDQ DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            64266+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            64267+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000000D8                                   64268+SMF42HDR DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            64269+*                                    CLASS_3 (PREFORMAT) LOCKS   @10A\n                                            64270+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000000DC                                   64271+SMF42HDS DS   1FL4                   NUMBER OF COMPONENT_1       @10A   03-IGWSMF\n                                            64272+*                                    CLASS_3 (PREFORMAT) RELEASE @10A\n                                            64273+*                                    LOCK REQUESTS               @10A\n 000000E0                                   64274+SMF42HDT DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n                                            64275+*                                    LOCK REQUESTS               @10A\n                                            64276+*                                    (OBTAIN/ALTER/PROMOTE)      @10A\n 000000E4                                   64277+SMF42HDU DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            64278+*                                    THAT CAUSE TRUE CONTENTION  @10A\n 000000E8                                   64279+SMF42HDV DS   1FL4                   NUMBER OF COMPONENT_2 LOCKS @10A   03-IGWSMF\n                                            64280+*                                    THAT CAUSE FALSE CONTENTION @10A\n 000000EC                                   64281+SMF42HDW DS   1FL4                   NUMBER OF COMPONENT_2       @10A   03-IGWSMF\n                                            64282+*                                    RELEASE LOCK REQUESTS       @10A\n 000000F0                                   64283+SMF42HDX DS   1FL4                   NUMBER OF SPECIAL LOCK      @10A   03-IGWSMF\n                                            64284+*                                    REQUESTS                    @10A\n 000000F4                                   64285+SMF42HDY DS   CL12                   RESERVED                    @10A   03-IGWSMF\n 00000100                                   64286+SMF42HDZ DS   CL32                   RESERVED                    @10A   03-IGWSMF\n                                            64287+*                                                                @10A\n                         00000120           64288+SMF420HB_LEN EQU *-SMF420HB                                             03-IGWSMF\n                                            64289+*\n                                            64290+*   -----------------------------------------------------------------\n                                            64291+*    COUPLING FACILITY CACHE PARTITION SUMMARY (SMF42 SUBTYPE 18)\n                                            64292+*    DATA FOR THIS PARTITION ACROSS ALL CACHE STRUCTURES.\n                                            64293+*   -----------------------------------------------------------------\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  250\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000000                00000000 000000C4  64294+SMF420IA DSECT ,                                                        03-IGWSMF\n 00000000                                   64295+SMF42IA1 DS   0D              CF CACHE PARTITION TOTALS                 03-IGWSMF\n                                            64296+*                                    SECTION                       @10A\n 00000000                                   64297+SMF42IAC DS   0CL196                 CACHE BUFFER POOLS                 03-IGWSMF\n                                            64298+*                                     THERE ARE 23 POOLS:\n                                            64299+*                                     11 SEQUENTIAL, 11 DIRECT,\n                                            64300+*                                     AND 1 DEFAULT\n                                            64301+*                                     THERE IS A SEPARATE SECTION FOR\n                                            64302+*                                     EACH PARTITION.  THIS MEANS THAT\n                                            64303+*                                     THERE WILL BE A MINIMUM OF 23\n                                            64304+*                                     TOTALS SECTIONS AND 23 SUMMARY\n                                            64305+*                                     SECTIONS.\n 00000000                                   64306+SMF42IAA DS    1FL4                   INTERVAL LENGTH. THIS IS THE      03-IGWSMF\n                                            64307+*                                     TOTAL TIME OF THE MEASUREMENT\n                                            64308+*                                     PERIOD. (IN SECONDS)         @10A\n 00000004                                   64309+SMF42I00 DS    CL12                   RESERVED                     @10A 03-IGWSMF\n                                            64310+*\n 00000010                                   64311+SMF42IAB DS    CL32                   RESERVED                     @10A 03-IGWSMF\n                                            64312+*\n 00000030                                   64313+SMF42IBG DS    CL16                   PARTITION TYPE               @10A 03-IGWSMF\n                                            64314+*                                     'SEQUENTIAL' DATA ONLY       @10A\n                                            64315+*                                     'DIRECT' DATA ONLY           @10A\n                                            64316+*                                     'COMBINED' DATA              @10A\n                                            64317+*\n 00000040                                   64318+SMF42IBH DS    1FL4                   SMS SPECIFIED CACHE WEIGHT   @10A 03-IGWSMF\n 00000044                                   64319+SMF42I01 DS    CL12                   PARTITIONNAMEWORD            @10A 03-IGWSMF\n 00000050                                   64320+SMF42IAD DS    1FL4                   COUPLE FACILITY CACHE             03-IGWSMF\n                                            64321+*                                     PARTITION NUMBER             @10A\n 00000054                                   64322+SMF42IAE DS    1FL4                   STATUS CONDITIONS            @10A 03-IGWSMF\n 00000058                                   64323+SMF42IAF DS    1FL4                   READ HIT COUNTER             @10A 03-IGWSMF\n 0000005C                                   64324+SMF42IAG DS    1FL4                   READ MISS DIRECTORY HIT           03-IGWSMF\n                                            64325+*                                     COUNTER                      @10A\n 00000060                                   64326+SMF42IAH DS    1FL4                   READ MISS ASSIGN SUPP             03-IGWSMF\n                                            64327+*                                     COUNTER                      @10A\n 00000064                                   64328+SMF42IAI DS    1FL4                   READ MISS, NAME ASSIGNED          03-IGWSMF\n                                            64329+*                                     COUNTER                      @10A\n 00000068                                   64330+SMF42IAJ DS    1FL4                   READ MISS TARGET STORAGE          03-IGWSMF\n                                            64331+*                                     CLASS FULL COUNTER           @10A\n 0000006C                                   64332+SMF42IAK DS    1FL4                   WRITE HIT CHANGE BIT 0            03-IGWSMF\n                                            64333+*                                     COUNTER                      @10A\n 00000070                                   64334+SMF42IAL DS    1FL4                   WRITE HIT CHANGE BIT 1            03-IGWSMF\n                                            64335+*                                     COUNTER                      @10A\n 00000074                                   64336+SMF42IAM DS    1FL4                   WRITE MISS NOT REGISTERED         03-IGWSMF\n                                            64337+*                                     COUNTER                      @10A\n 00000078                                   64338+SMF42IAN DS    1FL4                   WRITE MISS INVALID STATE          03-IGWSMF\n                                            64339+*                                     COUNTER                      @10A\n 0000007C                                   64340+SMF42IAO DS    1FL4                   WRITE MISS TARGET STORAGE CLASS   03-IGWSMF\n                                            64341+*                                     FULL COUNTER                 @10A\n 00000080                                   64342+SMF42IAP DS    1FL4                   DIRECTORY ENTRY RECLAIM           03-IGWSMF\n                                            64343+*                                     COUNTER                      @10A\n 00000084                                   64344+SMF42IAQ DS    1FL4                   DATA TABLE ENTRY RECLAIM          03-IGWSMF\n                                            64345+*                                     COUNTER                      @10A\n 00000088                                   64346+SMF42IAR DS    1FL4                   XI FOR DIRECTORY RECLAIM          03-IGWSMF\n                                            64347+*                                     COUNTER                      @10A\n 0000008C                                   64348+SMF42IAS DS    1FL4                   XI FOR WRITE COUNTER         @10A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  251\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000090                                   64349+SMF42IAT DS    1FL4                   XI FOR NAME INVALIDATION          03-IGWSMF\n                                            64350+*                                     COUNTER                      @10A\n 00000094                                   64351+SMF42IAU DS    1FL4                   XI FOR COMPLEMENT INVALIDATION    03-IGWSMF\n                                            64352+*                                     COUNTER                      @10A\n 00000098                                   64353+SMF42IAV DS    1FL4                   CASTOUT COUNTER              @10A 03-IGWSMF\n 0000009C                                   64354+SMF42IAW DS    1FL4                   REFERENCE SIGNAL MISS             03-IGWSMF\n                                            64355+*                                     COUNTER                      @10A\n 000000A0                                   64356+SMF42IAX DS    1FL4                   TARGET STORAGE CLASS FULL         03-IGWSMF\n                                            64357+*                                     COUNTER                      @10A\n 000000A4                                   64358+SMF42IAY DS    1FL4                   DIRECTORY ENTRY COUNTER      @10A 03-IGWSMF\n 000000A8                                   64359+SMF42IAZ DS    1FL4                   DATA AREA ELEMENT COUNTER    @10A 03-IGWSMF\n 000000AC                                   64360+SMF42IBA DS    1FL4                   TOTAL CHANGED COUNTER        @10A 03-IGWSMF\n 000000B0                                   64361+SMF42IBB DS    1FL4                   DATA AREA COUNTER            @10A 03-IGWSMF\n 000000B4                                   64362+SMF42IBC DS    1FL4                   COMPLETED REFERENCE LISTS         03-IGWSMF\n                                            64363+*                                     COUNTER                      @10A\n 000000B8                                   64364+SMF42IBD DS    1FL4                   PARTIALLY COMPLETED REFERENCE     03-IGWSMF\n                                            64365+*                                     LIST COUNTER                 @10A\n 000000BC                                   64366+SMF42IBE DS    1FL4                   XI FOR LCEN REPLACEMENT           03-IGWSMF\n                                            64367+*                                     COUNTER                      @10A\n 000000C0                                   64368+SMF42IBF DS    1FL4                   WRITE UNCHANGED WITH XI           03-IGWSMF\n                         000000C4           64369+SMF420IA_LEN EQU *-SMF420IA                                             03-IGWSMF\n                                            64370+*                                     COUNTER                      @10A\n                                            64371+*   -----------------------------------------------------------------\n                                            64372+*    COUPLING FACILITY CACHE PARTITION SUMMARY (SMF42 SUBTYPE 18)\n                                            64373+*    DATA FOR THIS PARTITION FOR A SINGLE CACHE STRUCTURE\n                                            64374+*   -----------------------------------------------------------------\n 00000000                00000000 000000C4  64375+SMF420IC DSECT ,                                                        03-IGWSMF\n 00000000                                   64376+SMF42IC1 DS    0D                     CF CACHE PARTITION SUMMARY        03-IGWSMF\n                                            64377+*                                     SECTION                      @10A\n 00000000                                   64378+SMF42ICC DS    0CL196                 CACHE BUFFER POOLS                03-IGWSMF\n                                            64379+*                                     THERE ARE 23 POOLS:\n                                            64380+*                                     11 SEQUENTIAL, 11 DIRECT,\n                                            64381+*                                     AND 1 DEFAULT\n                                            64382+*                                     THERE IS A SEPARATE SECTION FOR\n                                            64383+*                                     EACH PARTITION.  THIS MEANS THAT\n                                            64384+*                                     THERE WILL BE A MINIMUM OF 23\n                                            64385+*                                     TOTALS SECTIONS AND 23 SUMMARY\n                                            64386+*                                     SECTIONS.\n 00000000                                   64387+SMF42ICA DS    1FL4                   INTERVAL LENGTH. THIS IS THE      03-IGWSMF\n                                            64388+*                                     TOTAL TIME OF THE MEASUREMENT\n                                            64389+*                                     PERIOD. (IN SECONDS)         @10A\n 00000004                                   64390+SMF42I02 DS    CL12                   RESERVED                     @10A 03-IGWSMF\n                                            64391+*\n 00000010                                   64392+SMF42I04 DS    1FL2                   RESERVED                     @10A 03-IGWSMF\n 00000012                                   64393+SMF42ICB DS    CL30                   CACHE STRUCTURE NAME         @10A 03-IGWSMF\n                                            64394+*\n 00000030                                   64395+SMF42IDG DS    CL16                   PARTITION TYPE               @10A 03-IGWSMF\n                                            64396+*                                     'SEQUENTIAL' DATA ONLY       @10A\n                                            64397+*                                     'DIRECT' DATA ONLY           @10A\n                                            64398+*                                     'COMBINED' DATA              @10A\n                                            64399+*\n 00000040                                   64400+SMF42IDH DS    1F                     SMS SPECIFIED CACHE WEIGHT   @10A 03-IGWSMF\n 00000044                                   64401+SMF42I03 DS    CL12                   RESERVED                     @10A 03-IGWSMF\n                                            64402+*\n 00000050                                   64403+SMF42ICD DS    1FL4                   COUPLE FACILITY CACHE             03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  252\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           64404+*                                     PARTITION NUMBER             @10A\n 00000054                                   64405+SMF42ICE DS    1FL4                   STATUS CONDITIONS            @10A 03-IGWSMF\n 00000058                                   64406+SMF42ICF DS    1FL4                   READ HIT COUNTER             @10A 03-IGWSMF\n 0000005C                                   64407+SMF42ICG DS    1FL4                   READ MISS DIRECTORY HIT           03-IGWSMF\n                                            64408+*                                     COUNTER                      @10A\n 00000060                                   64409+SMF42ICH DS    1FL4                   READ MISS ASSIGN SUPP             03-IGWSMF\n                                            64410+*                                     COUNTER                      @10A\n 00000064                                   64411+SMF42ICI DS    1FL4                   READ MISS, NAME ASSIGNED          03-IGWSMF\n                                            64412+*                                     COUNTER                      @10A\n 00000068                                   64413+SMF42ICJ DS    1FL4                   READ MISS TARGET STORAGE          03-IGWSMF\n                                            64414+*                                     CLASS FULL COUNTER           @10A\n 0000006C                                   64415+SMF42ICK DS    1FL4                   WRITE HIT CHANGE BIT 0            03-IGWSMF\n                                            64416+*                                     COUNTER                      @10A\n 00000070                                   64417+SMF42ICL DS    1FL4                   WRITE HIT CHANGE BIT 1            03-IGWSMF\n                                            64418+*                                     COUNTER                      @10A\n 00000074                                   64419+SMF42ICM DS    1FL4                   WRITE MISS NOT REGISTERED         03-IGWSMF\n                                            64420+*                                     COUNTER                      @10A\n 00000078                                   64421+SMF42ICN DS    1FL4                   WRITE MISS INVALID STATE          03-IGWSMF\n                                            64422+*                                     COUNTER                      @10A\n 0000007C                                   64423+SMF42ICO DS    1FL4                   WRITE MISS TARGET STORAGE CLASS   03-IGWSMF\n                                            64424+*                                     FULL COUNTER                 @10A\n 00000080                                   64425+SMF42ICP DS    1FL4                   DIRECTORY ENTRY RECLAIM           03-IGWSMF\n                                            64426+*                                     COUNTER                      @10A\n 00000084                                   64427+SMF42ICQ DS    1FL4                   DATA TABLE ENTRY RECLAIM          03-IGWSMF\n                                            64428+*                                     COUNTER                      @10A\n 00000088                                   64429+SMF42ICR DS    1FL4                   XI FOR DIRECTORY RECLAIM          03-IGWSMF\n                                            64430+*                                     COUNTER                      @10A\n 0000008C                                   64431+SMF42ICS DS    1FL4                   XI FOR WRITE COUNTER         @10A 03-IGWSMF\n 00000090                                   64432+SMF42ICT DS    1FL4                   XI FOR NAME INVALIDATION          03-IGWSMF\n                                            64433+*                                     COUNTER                      @10A\n 00000094                                   64434+SMF42ICU DS    1FL4                   XI FOR COMPLEMENT INVALIDATION    03-IGWSMF\n                                            64435+*                                     COUNTER                      @10A\n 00000098                                   64436+SMF42ICV DS    1FL4                   CASTOUT COUNTER              @10A 03-IGWSMF\n 0000009C                                   64437+SMF42ICW DS    1FL4                   REFERENCE SIGNAL MISS             03-IGWSMF\n                                            64438+*                                     COUNTER                      @10A\n 000000A0                                   64439+SMF42ICX DS    1FL4                   TARGET STORAGE CLASS FULL         03-IGWSMF\n                                            64440+*                                     COUNTER                      @10A\n 000000A4                                   64441+SMF42ICY DS    1FL4                   DIRECTORY ENTRY COUNTER      @10A 03-IGWSMF\n 000000A8                                   64442+SMF42ICZ DS    1FL4                   DATA AREA ELEMENT COUNTER    @10A 03-IGWSMF\n 000000AC                                   64443+SMF42IDA DS    1FL4                   TOTAL CHANGED COUNTER        @10A 03-IGWSMF\n 000000B0                                   64444+SMF42IDB DS    1FL4                   DATA AREA COUNTER            @10A 03-IGWSMF\n 000000B4                                   64445+SMF42IDC DS    1FL4                   COMPLETED REFERENCE LISTS         03-IGWSMF\n                                            64446+*                                     COUNTER                      @10A\n 000000B8                                   64447+SMF42IDD DS    1FL4                   PARTIALLY COMPLETED REFERENCE     03-IGWSMF\n                                            64448+*                                     LIST COUNTER                 @10A\n 000000BC                                   64449+SMF42IDE DS    1FL4                   XI FOR LCEN REPLACEMENT           03-IGWSMF\n                                            64450+*                                     COUNTER                      @10A\n 000000C0                                   64451+SMF42IDF DS    1FL4                   WRITE UNCHANGED WITH XI           03-IGWSMF\n                                            64452+*                                     COUNTER                      @10A\n                                            64453+*\n                         000000C4           64454+SMF420IC_LEN EQU *-SMF420IC                                             03-IGWSMF\n                                            64455+* -------------------------------------------------------------------\n                                            64456+*    Coupling Facility Cache Partition Summary (SMF42 subtype 18)\n                                            64457+*    Directory/Element ratio data for this cache structure\n                                            64458+* -------------------------------------------------------------------\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  253\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000000                00000000 00000050  64459+SMF420IE DSECT ,                                                   @11A 03-IGWSMF\n 00000000                                   64460+SMF42IE1 DS    0CL80                 CF Cache Directory/element    @11A 03-IGWSMF\n                                            64461+*                                    ratio section                 @11A\n 00000000                                   64462+SMF42IEA DS    1FL4                  Interval length               @11A 03-IGWSMF\n 00000004                                   64463+SMF42I06 DS    CL12                  reserved                      @11A 03-IGWSMF\n 00000010                                   64464+SMF42I07 DS    CL2                   reserved                      @11A 03-IGWSMF\n 00000012                                   64465+SMF42IEB DS    CL30                  DFSMS cache structure name    @11A 03-IGWSMF\n 00000030                                   64466+SMF42IEC DS    1FL4                  Number of times the           @11A 03-IGWSMF\n                                            64467+*                                    directory portion of the      @11A\n                                            64468+*                                    dir/ele ratio changes         @11A\n 00000034                                   64469+SMF42IED DS    1FL4                  Number of times the           @11A 03-IGWSMF\n                                            64470+*                                    Element   portion of the      @11A\n                                            64471+*                                    dir/ele ratio changes         @11A\n 00000038                                   64472+SMF42IEE DS    1FL4                  Low  ratio value in this      @11A 03-IGWSMF\n                                            64473+*                                    interval - directory part     @11A\n 0000003C                                   64474+SMF42IEF DS    1FL4                  Low  ratio value in this      @11A 03-IGWSMF\n                                            64475+*                                    interval - Element   part     @11A\n 00000040                                   64476+SMF42IEG DS    1FL4                  High ratio value in this      @11A 03-IGWSMF\n                                            64477+*                                    interval - directory part     @11A\n 00000044                                   64478+SMF42IEH DS    1FL4                  High ratio value in this      @11A 03-IGWSMF\n                                            64479+*                                    interval - Element   part     @11A\n 00000048                                   64480+SMF42IEI DS    1FL4                  Current ratio value in this   @11A 03-IGWSMF\n                                            64481+*                                    interval - directory part     @11A\n 0000004C                                   64482+SMF42IEJ DS    1FL4                  Current ratio value in this   @11A 03-IGWSMF\n                                            64483+*                                    interval - element part       @11A\n                         00000050           64484+SMF420IE_LEN EQU *-SMF420IE          Length of section             @11A 03-IGWSMF\n                                            64485+*\n                                            64486+* --------------------------------------------------------------   @11A\n                                            64487+*    Coupling Facility Local Buffer Manager (SMF42 subtype 19)     @11A\n                                            64488+*    Local Buffer Manager LRU Statistics Summary. sysplex totals   @11A\n                                            64489+* --------------------------------------------------------------   @11A\n 00000000                00000000 000005C0  64490+SMF420JA DSECT ,                                                   @11A 03-IGWSMF\n 00000000                                   64491+SMF42JA1 DS    0D                       sysplex totals section     @11A 03-IGWSMF\n                                            64492+*                                                                  @11A\n 00000000                                   64493+SMF42JAC DS    0CL1384                                             @11A 03-IGWSMF\n                                            64494+*                                                                  @11A\n 00000000                                   64495+SMF42JNA DS    1FL4                Interval length. This is the    @11A 03-IGWSMF\n                                            64496+*                                  total time of the measurement   @11A\n                                            64497+*                                  period. (in seconds) total      @11A\n 00000004                                   64498+SMF42J00 DS    CL12                reserved                        @11A 03-IGWSMF\n                                            64499+*                                                                  @11A\n 00000010                                   64500+SMF42JNB DS    CL16                reserved                        @11A 03-IGWSMF\n 00000020                                   64501+SMF42JND DS    CL8                 Reserved                        @11A 03-IGWSMF\n                                            64502+*                                                                  @11A\n 00000028                                   64503+SMF42JNE DS    2F                                                  @64C 03-IGWSMF\n                                            64504+*                                  Average Cpu time for all        @11A\n                                            64505+*                                  systems in the sysplex.  This   @11A\n                                            64506+*                                  is the amount of CPU time       @11A\n                                            64507+*                                  (on average) that each system   @11A\n                                            64508+*                                  consumed while processing the   @11A\n                                            64509+*                                  Local Buffer Manager LRU        @11A\n                                            64510+*                                  algorithm.                      @11A\n                                            64511+*                                                                  @11A\n 00000030                                   64512+SMF42JNF DS    2F                                                  @64C 03-IGWSMF\n                                            64513+*                                  Total CPU time for this         @11A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  254\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           64514+*                                  record (in milli-seconds)       @11A\n                                            64515+*                                  (sysplex totals)                @11A\n                                            64516+*                                                                  @11A\n 00000038                                   64517+SMF42JN0 DS    CL4                 Reserved                        @21A 03-IGWSMF\n 0000003C                                   64518+SMF42JN7 DS    1FL4                Total number of write           @21A 03-IGWSMF\n                                            64519+*                                  requests                        @21A\n                                            64520+*                                  (sysplex totals)                @21A\n 00000040                                   64521+SMF42JNG DS    1FL4                Average number of buffer        @11A 03-IGWSMF\n                                            64522+*                                  manager LRU intervals           @11A\n                                            64523+*                                  processed during this period.   @11A\n                                            64524+*                                  (sysplex totals)                @11A\n                                            64525+*                                                                  @11A\n 00000044                                   64526+SMF42JNH DS    1FL4                Total number of buffer          @11A 03-IGWSMF\n                                            64527+*                                  manager LRU intervals           @11A\n                                            64528+*                                  processed during this period.   @11A\n                                            64529+*                                  (across the sysplex)            @11A\n                                            64530+*                                                                  @11A\n 00000048                                   64531+SMF42JNI DS    1FL4                Average                         @11A 03-IGWSMF\n                                            64532+*                                  Number of buffer manager        @11A\n                                            64533+*                                  LRU intervals processed         @11A\n                                            64534+*                                  where BMF was over the goal     @11A\n                                            64535+*                                  and normal algorithms were      @11A\n                                            64536+*                                  bypassed to reclaim buffers.    @11A\n                                            64537+*                                                                  @11A\n 0000004C                                   64538+SMF42JNJ DS    1FL4                Total                           @11A 03-IGWSMF\n                                            64539+*                                  Number of buffer manager        @11A\n                                            64540+*                                  LRU intervals processed         @11A\n                                            64541+*                                  where BMF was over the goal     @11A\n                                            64542+*                                  and normal algorithms were      @11A\n                                            64543+*                                  bypassed to reclaim buffers.    @11A\n                                            64544+*                                  (across the sysplex)            @11A\n                                            64545+*                                                                  @11A\n 00000050                                   64546+SMF42JNK DS    1FL4                Avg. number of times that       @11A 03-IGWSMF\n                                            64547+*                                  BMF was called on this          @11A\n                                            64548+*                                  interval.                       @11A\n                                            64549+*                                                                  @11A\n 00000054                                   64550+SMF42JNL DS    1FL4                Total number of times that      @11A 03-IGWSMF\n                                            64551+*                                  BMF was called on this          @11A\n                                            64552+*                                  interval(across the sysplex)    @11A\n                                            64553+*                                                                  @11A\n 00000058                                   64554+SMF42JNM DS    1FL4                Average number of BMF           @11A 03-IGWSMF\n                                            64555+*                                  hits during this interval.      @11A\n                                            64556+*                                  (sysplex totals)                @11A\n                                            64557+*                                                                  @11A\n 0000005C                                   64558+SMF42JNN DS    1FL4                Total number of BMF             @11A 03-IGWSMF\n                                            64559+*                                  hits during this interval.      @11A\n                                            64560+*                                  (sysplex totals)                @11A\n                                            64561+*                                                                  @11A\n 00000060                                   64562+SMF42JNO DS    1FL4                Buffer manager number of        @11A 03-IGWSMF\n                                            64563+*                                  'hits' Current percentage       @11A\n                                            64564+*                                  during this interval.           @11A\n                                            64565+*                                  (sysplex totals)                @11A\n                                            64566+*                                                                  @11A\n 00000064                                   64567+SMF42JNP DS    1FL4                Buffer manager number of        @11A 03-IGWSMF\n                                            64568+*                                  'hits' low percentage during    @11A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  255\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           64569+*                                  this interval.                  @11A\n                                            64570+*                                  (sysplex totals)                @11A\n                                            64571+*                                                                  @11A\n 00000068                                   64572+SMF42JNQ DS    1FL4                Buffer manager number of        @11A 03-IGWSMF\n                                            64573+*                                  'hits' high percentage during   @11A\n                                            64574+*                                  this interval.                  @11A\n                                            64575+*                                  (sysplex totals)                @11A\n                                            64576+*                                                                  @11A\n 0000006C                                   64577+SMF42JNR DS    1FL4                Buffer manager average          @11A 03-IGWSMF\n                                            64578+*                                  'hits' during this interval.    @11A\n                                            64579+*                                  (across the sysplex)            @11A\n                                            64580+*                                                                  @11A\n 00000070                                   64581+SMF42JNS DS    1FL4                Avg. Sysplex Cache manager      @11A 03-IGWSMF\n                                            64582+*                                  number of 'hits' during this    @11A\n                                            64583+*                                  interval.                       @11A\n                                            64584+*                                  (Across the sysplex)            @11A\n                                            64585+*                                                                  @11A\n 00000074                                   64586+SMF42JNT DS    1FL4                Tot Sysplex Cache manager       @11A 03-IGWSMF\n                                            64587+*                                  number of 'hits' during this    @11A\n                                            64588+*                                  interval.                       @11A\n                                            64589+*                                  (Across the sysplex)            @11A\n                                            64590+*                                                                  @11A\n 00000078                                   64591+SMF42JNU DS    1FL4                Sysplex Cache manager hits      @11A 03-IGWSMF\n                                            64592+*                                  current percentage              @11A\n                                            64593+*                                  during this interval            @11A\n                                            64594+*                                  (across the sysplex)            @11A\n                                            64595+*                                                                  @11A\n 0000007C                                   64596+SMF42JNV DS    1FL4                Sysplex Cache manager hits      @11A 03-IGWSMF\n                                            64597+*                                  low percentage during this      @11A\n                                            64598+*                                  interval.                       @11A\n                                            64599+*                                  (across the sysplex)            @11A\n                                            64600+*                                                                  @11A\n 00000080                                   64601+SMF42JNW DS    1FL4                Sysplex Cache manager hits      @11A 03-IGWSMF\n                                            64602+*                                  high percentage during this     @11A\n                                            64603+*                                  interval.                       @11A\n                                            64604+*                                  (across the sysplex)            @11A\n 00000084                                   64605+SMF42JNX DS    1FL4                Sysplex Cache manager hits      @11A 03-IGWSMF\n                                            64606+*                                  average percentage during       @11A\n                                            64607+*                                  this interval.                  @11A\n                                            64608+*                                  (across the sysplex)            @11A\n                                            64609+*                                                                  @11A\n 00000088                                   64610+SMF42JNY DS    1FL4                Avg. DASD number of 'hits'      @11A 03-IGWSMF\n                                            64611+*                                  during this interval            @11A\n                                            64612+*                                  (across the sysplex)            @11A\n                                            64613+*                                                                  @11A\n 0000008C                                   64614+SMF42JNZ DS    1FL4                Tot DASD number of 'hits'       @11A 03-IGWSMF\n                                            64615+*                                  during this interval            @11A\n                                            64616+*                                  (across the sysplex)            @11A\n                                            64617+*                                                                  @11A\n 00000090                                   64618+SMF42JOA DS    1FL4                DASD 'hits' current             @11A 03-IGWSMF\n                                            64619+*                                  percentage during this          @11A\n                                            64620+*                                  interval (across the sysplex)   @11A\n                                            64621+*                                                                  @11A\n 00000094                                   64622+SMF42JOB DS    1FL4                DASD 'hits' low percentage      @11A 03-IGWSMF\n                                            64623+*                                  during this interval            @11A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  256\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           64624+*                                  (across the sysplex)            @11A\n                                            64625+*                                                                  @11A\n 00000098                                   64626+SMF42JOC DS    1FL4                DASD 'hits' high percentage     @11A 03-IGWSMF\n                                            64627+*                                  during this interval            @11A\n                                            64628+*                                  (across the sysplex)            @11A\n                                            64629+*                                                                  @11A\n 0000009C                                   64630+SMF42JOD DS    1FL4                Average                         @11A 03-IGWSMF\n                                            64631+*                                  DASD average 'hits' during      @11A\n                                            64632+*                                  this interval                   @11A\n                                            64633+*                                  (across the sysplex             @11A\n                                            64634+*                                                                  @11A\n 000000A0                                   64635+SMF42JOE DS    CL512               Sysplex average                 @11A 03-IGWSMF\n                                            64636+*                                  Buffer pool count array.        @11A\n                                            64637+*                                  This is a 16 entry array with   @11A\n                                            64638+*                                  each entry 32 bytes long.  The  @11A\n                                            64639+*                                  first entry is for the 2K       @11A\n                                            64640+*                                  storage pool, the second entry  @11A\n                                            64641+*                                  is for the 4K storage pool.     @11A\n                                            64642+*                                  The format is described below.  @11A\n                                            64643+*                                  (sysplex totals)                @11A\n                                            64644+*                                  Each Entry is mapped by         @11A\n                                            64645+*                                  dsect SMF420JB                  @11A\n                                            64646+*                                                                  @11A\n 000002A0                                   64647+SMF42JRI DS    CL512               Sysplex wide totals -           @11A 03-IGWSMF\n                                            64648+*                                  Buffer pool count array.        @11A\n                                            64649+*                                  This is a 16 entry array with   @11A\n                                            64650+*                                  each entry 32 bytes long.  The  @11A\n                                            64651+*                                  first entry is for the 2K       @11A\n                                            64652+*                                  storage pool, the second entry  @11A\n                                            64653+*                                  is for the 4K storage pool.     @11A\n                                            64654+*                                  The format is described below.  @11A\n                                            64655+*                                  (sysplex totals)                @11A\n                                            64656+*                                  Each Entry is mapped by         @11A\n                                            64657+*                                  DSECT SMF420JC                  @11A\n                                            64658+*                                  Average                         @11A\n 000004A0                                   64659+SMF42JON DS    1FL4                Buffer size goal (in mega-      @11A 03-IGWSMF\n                                            64660+*                                  bytes) - low value              @11A\n                                            64661+*                                  (sysplex totals)                @11A\n                                            64662+*                                                                  @11A\n                                            64663+*                                  Total                           @11A\n 000004A4                                   64664+SMF42JOO DS    1FL4                Buffer size goal (in mega-      @11A 03-IGWSMF\n                                            64665+*                                  bytes) - low value              @11A\n                                            64666+*                                  (sysplex totals)                @11A\n                                            64667+*                                                                  @11A\n                                            64668+*                                  Average                         @11A\n 000004A8                                   64669+SMF42JOP DS    1FL4                Buffer size goal (in mega-      @11A 03-IGWSMF\n                                            64670+*                                  bytes) - high value.            @11A\n                                            64671+*                                  (sysplex totals)                @11A\n                                            64672+*                                                                  @11A\n                                            64673+*                                  Total                           @11A\n 000004AC                                   64674+SMF42JOQ DS    1FL4                Buffer size goal (in mega-      @11A 03-IGWSMF\n                                            64675+*                                  bytes) - high value.            @11A\n                                            64676+*                                  (sysplex totals)                @11A\n                                            64677+*                                                                  @11A\n                                            64678+*                                  Average                         @11A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  257\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000004B0                                   64679+SMF42JOR DS    1FL4                Buffer size goal (in mega-      @11A 03-IGWSMF\n                                            64680+*                                  bytes) - current value.         @11A\n                                            64681+*                                  (sysplex totals)                @11A\n                                            64682+*                                                                  @11A\n                                            64683+*                                  Total                           @11A\n 000004B4                                   64684+SMF42JOS DS    1FL4                Buffer size goal (in mega-      @11A 03-IGWSMF\n                                            64685+*                                  bytes) - current value.         @11A\n                                            64686+*                                  (sysplex totals)                @11A\n                                            64687+*                                                                  @11A\n                                            64688+*                                  Total                           @11A\n 000004B8                                   64689+SMF42JOT DS    1FL4                Buffer size goal (in mega-      @11A 03-IGWSMF\n                                            64690+*                                  bytes) - Average value.         @11A\n                                            64691+*                                  (sysplex totals)                @11A\n                                            64692+*                                                                  @11A\n 000004BC                                   64693+SMF42JOU DS    1FL4                reserved                        @11A 03-IGWSMF\n                                            64694+*                                                                  @11A\n                                            64695+*                                  Average                         @11A\n 000004C0                                   64696+SMF42JOV DS    1FL4                Buffer size calculated          @11A 03-IGWSMF\n                                            64697+*                                  (in megabytes) - low value      @11A\n                                            64698+*                                  (across the sysplex)            @11A\n                                            64699+*                                                                  @11A\n                                            64700+*                                  Total                           @11A\n 000004C4                                   64701+SMF42JOW DS    1FL4                Buffer size calculated          @11A 03-IGWSMF\n                                            64702+*                                  (in megabytes) - low value      @11A\n                                            64703+*                                  (across the sysplex)            @11A\n                                            64704+*                                                                  @11A\n                                            64705+*                                  Average                         @11A\n 000004C8                                   64706+SMF42JOX DS    1FL4                Buffer size calculated          @11A 03-IGWSMF\n                                            64707+*                                  (in megabytes) - high value     @11A\n                                            64708+*                                  (across the sysplex)            @11A\n                                            64709+*                                                                  @11A\n                                            64710+*                                  Total                           @11A\n 000004CC                                   64711+SMF42JOY DS    1FL4                Buffer size calculated          @11A 03-IGWSMF\n                                            64712+*                                  (in megabytes) - high value     @11A\n                                            64713+*                                  (across the sysplex)            @11A\n                                            64714+*                                                                  @11A\n                                            64715+*                                  Average                         @11A\n 000004D0                                   64716+SMF42JOZ DS    1FL4                Buffer size calculated          @11A 03-IGWSMF\n                                            64717+*                                  (in megabytes) - current value  @11A\n                                            64718+*                                  (sysplex totals)                @11A\n                                            64719+*                                                                  @11A\n                                            64720+*                                  Total                           @11A\n 000004D4                                   64721+SMF42JRA DS    1FL4                Buffer size calculated          @11A 03-IGWSMF\n                                            64722+*                                  (in megabytes) - current value  @11A\n                                            64723+*                                  (sysplex totals)                @11A\n                                            64724+*                                                                  @11A\n                                            64725+*                                  Total                           @11A\n 000004D8                                   64726+SMF42JRB DS    1FL4                Buffer size calculated          @11A 03-IGWSMF\n                                            64727+*                                  (in megabytes) - Average value  @11A\n                                            64728+*                                  (sysplex totals)                @11A\n                                            64729+*                                                                  @11A\n 000004DC                                   64730+SMF42JRC DS    1FL4                Total number of CF read         @29C 03-IGWSMF\n                                            64731+*                                  requests which encountered      @29A\n                                            64732+*                                  retries for cast out locks      @29A\n                                            64733+*                                  for this interval (across       @29A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  258\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           64734+*                                  the sysplex)                    @29A\n                                            64735+*                                                                  @11A\n 000004E0                                   64736+SMF42JRD DS    CL8                 Reserved                        @11A 03-IGWSMF\n                                            64737+*                                                                  @11A\n                                            64738+*                                  Average                         @11A\n 000004E8                                   64739+SMF42JRE DS    CL64                Calculated megabytes            @11A 03-IGWSMF\n                                            64740+*                                  distribution array.  this is a  @11A\n                                            64741+*                                  16 entry array which contains   @11A\n                                            64742+*                                  the number of times the cal-    @11A\n                                            64743+*                                  culated value occurred within   @11A\n                                            64744+*                                  a 100mb span.  Entry 1= 0-99m,  @11A\n                                            64745+*                                  entry 2 = 100-100m... entry     @11A\n                                            64746+*                                  (across the sysplex)            @11A\n                                            64747+*                                  The entry is mapped by          @11A\n                                            64748+*                                  DSECT SMF420JD                  @11A\n                                            64749+*                                                                  @11A\n                                            64750+*                                  Total                           @11A\n 00000528                                   64751+SMF42JRG DS    CL64                Calculated megabytes            @11A 03-IGWSMF\n                                            64752+*                                  distribution array.  this is a  @11A\n                                            64753+*                                  16 entry array which contains   @11A\n                                            64754+*                                  the number of times the cal-    @11A\n                                            64755+*                                  culated value occurred within   @11A\n                                            64756+*                                  a 100mb span.  Entry 1= 0-99m,  @11A\n                                            64757+*                                  entry 2 = 100-100m... entry     @11A\n                                            64758+*                                  (across the sysplex)            @11A\n                                            64759+*                                  The entry is mapped by          @11A\n                                            64760+*                                  DSECT SMF420JE                  @11A\n                                            64761+*                                                                  @11A\n                                            64762+*  asdf  smf42jta-smf42jub moves to here\n                                            64763+*                                                                  @21A\n                                            64764+* Additional statistics for RMF                                    @21A\n                                            64765+*                                                                  @21A\n 00000568                                   64766+SMF42JTA DS    1FL4                  Avg. number of scm read reques@21A 03-IGWSMF\n                                            64767+*                                    which encountered castout lock@21A\n                                            64768+*                                    contention during this interva@21A\n                                            64769+*                                    (across the sysplex)          @21A\n 0000056C                                   64770+SMF42JTB DS    1FL4                  Total number of scm read reque@21A 03-IGWSMF\n                                            64771+*                                    which encountercastout lock   @21A\n                                            64772+*                                    contention during this interva@21A\n                                            64773+*                                    (across the sysplex)          @21A\n 00000570                                   64774+SMF42JTC DS    1FL4                  Avg. number of scm read reques@21A 03-IGWSMF\n                                            64775+*                                    during this interval          @21A\n                                            64776+*                                    (across the sysplex)          @21A\n 00000574                                   64777+SMF42JTD DS    1FL4                  Total number of scm read reque@21A 03-IGWSMF\n                                            64778+*                                    during this interval          @21A\n                                            64779+*                                    (across the sysplex)          @21A\n 00000578                                   64780+SMF42JTE DS    1FL4                  SCM read requests which       @21A 03-IGWSMF\n                                            64781+*                                    encountered castout lock      @21A\n                                            64782+*                                    contention current percentage @21A\n                                            64783+*                                    during this interval          @21A\n                                            64784+*                                    (across the sysplex)          @21A\n 0000057C                                   64785+SMF42JTF DS    1FL4                  SCM read requests which       @21A 03-IGWSMF\n                                            64786+*                                    encountered castout lock      @21A\n                                            64787+*                                    contention low percentage duri@21A\n                                            64788+*                                    this interval                 @21A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  259\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           64789+*                                    (across the sysplex)          @21A\n 00000580                                   64790+SMF42JTG DS    1FL4                  SCM read requests which       @21A 03-IGWSMF\n                                            64791+*                                    encountered castout lock      @21A\n                                            64792+*                                    contention high percentage    @21A\n                                            64793+*                                    during this interval          @21A\n                                            64794+*                                    (across the sysplex)          @21A\n 00000584                                   64795+SMF42JTH DS    1FL4                  SCM read requests which       @21A 03-IGWSMF\n                                            64796+*                                    encountered castout lock      @21A\n                                            64797+*                                    contention average percentage @21A\n                                            64798+*                                    during this interval          @21A\n                                            64799+*                                    (across the sysplex)          @21A\n 00000588                                   64800+SMF42JTI DS    1FL4                  Avg. number of redos          @21A 03-IGWSMF\n                                            64801+*                                    during this interval          @21A\n                                            64802+*                                    (across the sysplex)          @21A\n 0000058C                                   64803+SMF42JTJ DS    1FL4                  Total number of redos         @21A 03-IGWSMF\n                                            64804+*                                    during this interval          @21A\n                                            64805+*                                    (across the sysplex)          @21A\n 00000590                                   64806+SMF42JTK DS    1FL4                  Avg. number of recursive redos@21A 03-IGWSMF\n                                            64807+*                                    during this interval          @21A\n                                            64808+*                                    (across the sysplex)          @21A\n 00000594                                   64809+SMF42JTL DS    1FL4                  Total number of recursive redo@21A 03-IGWSMF\n                                            64810+*                                    during this interval          @21A\n                                            64811+*                                    (across the sysplex)          @21A\n 00000598                                   64812+SMF42JTM DS    1FL4                  Redos current percentage      @21A 03-IGWSMF\n                                            64813+*                                    during this interval          @21A\n                                            64814+*                                    (across the sysplex)          @21A\n 0000059C                                   64815+SMF42JTN DS    1FL4                  Redos low percentage          @21A 03-IGWSMF\n                                            64816+*                                    during this interval          @21A\n                                            64817+*                                    (across the sysplex)          @21A\n 000005A0                                   64818+SMF42JTO DS    1FL4                  Redos high percentage         @21A 03-IGWSMF\n                                            64819+*                                    during this interval          @21A\n                                            64820+*                                    (across the sysplex)          @21A\n 000005A4                                   64821+SMF42JTP DS    1FL4                  Redos average percentage      @21A 03-IGWSMF\n                                            64822+*                                    during this interval          @21A\n                                            64823+*                                    (across the sysplex)          @21A\n 000005A8                                   64824+SMF42JTQ DS    1FL4                  Recursive Redos               @21A 03-IGWSMF\n                                            64825+*                                    current percentage during     @21A\n                                            64826+*                                    this interval                 @21A\n                                            64827+*                                    (across the sysplex)          @21A\n 000005AC                                   64828+SMF42JTR DS    1FL4                  Recursive Redos               @21A 03-IGWSMF\n                                            64829+*                                    low percentage during         @21A\n                                            64830+*                                    this interval                 @21A\n                                            64831+*                                    (across the sysplex)          @21A\n 000005B0                                   64832+SMF42JTS DS    1FL4                  Recursive Redos               @21A 03-IGWSMF\n                                            64833+*                                    high percentage during        @21A\n                                            64834+*                                    this interval                 @21A\n                                            64835+*                                    (across the sysplex)          @21A\n 000005B4                                   64836+SMF42JTT DS    1FL4                  Recursive Redos               @21A 03-IGWSMF\n                                            64837+*                                    average percentage during     @21A\n                                            64838+*                                    this interval                 @21A\n                                            64839+*                                    (across the sysplex)          @21A\n 000005B8                                   64840+SMF42JUA DS    1FL4                  Avg. number of                @21A 03-IGWSMF\n                                            64841+*                                    Number of buffer manager      @21A\n                                            64842+*                                    LRU intervals processed       @21A\n                                            64843+*                                    where BMF was over the goal   @21A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  260\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           64844+*                                    accelerated the aging, but    @21A\n                                            64845+*                                    did not go into panic mode.   @21A\n                                            64846+*                                    (across the sysplex)          @21A\n 000005BC                                   64847+SMF42JUB DS    1FL4                  Total number of               @21A 03-IGWSMF\n                                            64848+*                                    Number of buffer manager      @21A\n                                            64849+*                                    LRU intervals processed       @21A\n                                            64850+*                                    where BMF was over the goal   @21A\n                                            64851+*                                    accelerated the aging, but    @21A\n                                            64852+*                                    did not go into panic mode.   @21A\n                                            64853+*                                    (across the sysplex)          @21A\n                                            64854+*                                                                  @PJS\n                                            64855+*                                                                  @11A\n                                            64856+*                                                                  @11A\n                                            64857+* --------------------------------------------------------------   @11A\n                                            64858+*  Coupling Facility Local Buffer Manager (SMF42 subtype 19)       @11A\n                                            64859+*  Local Buffer Manager LRU Statistics Summary. single system      @11A\n                                            64860+* --------------------------------------------------------------   @11A\n 00000000                00000000 00000374  64861+SMF420PA DSECT ,                                                   @11A 03-IGWSMF\n 00000000                                   64862+SMF42PA1 DS    0D                                                  @11A 03-IGWSMF\n                                            64863+*                                                                  @11A\n 00000000                                   64864+SMF42PAC DS    0CL800                                              @11A 03-IGWSMF\n                                            64865+*                                                                  @11A\n 00000000                                   64866+SMF42JPA DS    1FL4                Interval length. This is the    @11A 03-IGWSMF\n                                            64867+*                                  total time of the measurement   @11A\n                                            64868+*                                  period. (in seconds) total      @11A\n                                            64869+*                                                                  @11A\n 00000004                                   64870+SMF42J01 DS    CL12                Reserved                        @11A 03-IGWSMF\n                                            64871+*                                                                  @11A\n 00000010                                   64872+SMF42JPB DS    CL8                 MVS system name.                @11A 03-IGWSMF\n 00000018                                   64873+SMF42JPC DS    CL8                 Reserved                        @11A 03-IGWSMF\n 00000020                                   64874+SMF42JPD DS    CL8                 Reserved                        @11A 03-IGWSMF\n                                            64875+*                                                                  @11A\n 00000028                                   64876+SMF42JPE DS    CL8                 Average CPU time spent by       @11A 03-IGWSMF\n                                            64877+*                                  BMF LRU processing during       @11A\n                                            64878+*                                  each cycle (in milli-seconds)   @11A\n                                            64879+*                                                                  @11A\n 00000030                                   64880+SMF42JPF DS    CL8                 Total CPU time for this         @11A 03-IGWSMF\n                                            64881+*                                  record (in milli-seconds)       @11A\n                                            64882+*                                                                  @11A\n 00000038                                   64883+SMF42JP1 DS    CL12                Reserved                        @21A 03-IGWSMF\n 00000044                                   64884+SMF42JP6 DS    1FL4                Total number of write           @21A 03-IGWSMF\n                                            64885+*                                  requests                        @21A\n 00000048                                   64886+SMF42JPG DS    1FL4                Number of buffer manager        @11A 03-IGWSMF\n                                            64887+*                                  LRU intervals processed         @11A\n                                            64888+*                                  during this period.             @11A\n                                            64889+*                                                                  @11A\n 0000004C                                   64890+SMF42JPH DS    1FL4                Number of buffer manager        @11A 03-IGWSMF\n                                            64891+*                                  LRU intervals processed         @11A\n                                            64892+*                                  where BMF was over the goal     @11A\n                                            64893+*                                  and normal algorithms were      @11A\n                                            64894+*                                  bypassed to reclaim buffers.    @11A\n                                            64895+*                                                                  @11A\n 00000050                                   64896+SMF42JPI DS    1FL4                Total number of times that BMF  @11A 03-IGWSMF\n                                            64897+*                                  was called in this interval     @11A\n                                            64898+*                                                                  @11A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  261\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000054                                   64899+SMF42JP2 DS    1FL4                Number of buffer manager        @21A 03-IGWSMF\n                                            64900+*                                  LRU intervals processed         @21A\n                                            64901+*                                  where BMF was over the goal,    @21A\n                                            64902+*                                  accelerated the aging, but      @21A\n                                            64903+*                                  did not go into panic mode.     @21A\n 00000058                                   64904+SMF42JPJ DS    1FL4                Buffer manager number of        @11A 03-IGWSMF\n                                            64905+*                                  hits during this interval.      @11A\n 0000005C                                   64906+SMF42JPK DS    1FL4                Buffer manager number of        @11A 03-IGWSMF\n                                            64907+*                                  'hits' current percentage       @11A\n                                            64908+*                                  during this interval. Value     @11A\n                                            64909+*                                  for the last LRU cycle before   @11A\n                                            64910+*                                  the SMF record was processed    @11A\n                                            64911+*                                                                  @11A\n 00000060                                   64912+SMF42JPL DS    1FL4                Buffer manager number of        @11A 03-IGWSMF\n                                            64913+*                                  'hits' low percentage during    @11A\n                                            64914+*                                  this interval.                  @11A\n                                            64915+*                                                                  @11A\n 00000064                                   64916+SMF42JPM DS    1FL4                Buffer manager number of        @11A 03-IGWSMF\n                                            64917+*                                  'hits' high percentage during   @11A\n                                            64918+*                                  this interval.                  @11A\n                                            64919+*                                                                  @11A\n 00000068                                   64920+SMF42JPN DS    1FL4                Buffer manager average          @11A 03-IGWSMF\n                                            64921+*                                  'hits' during this interval.    @11A\n                                            64922+*                                                                  @11A\n 0000006C                                   64923+SMF42JP3 DS    CL12                Reserved                        @11A 03-IGWSMF\n                                            64924+*                                                                  @11A\n 00000078                                   64925+SMF42JPO DS    1FL4                Sysplex Cache manager           @11A 03-IGWSMF\n                                            64926+*                                  number of 'hits' during this    @11A\n                                            64927+*                                  interval.                       @11A\n                                            64928+*                                                                  @11A\n 0000007C                                   64929+SMF42JPP DS    1FL4                Sysplex cache manager num       @11A 03-IGWSMF\n                                            64930+*                                  of 'hits' current percentage    @11A\n                                            64931+*                                  during this interval. Value     @11A\n                                            64932+*                                  for the last LRU cycle before   @11A\n                                            64933+*                                  the SMF record was processed    @11A\n                                            64934+*                                                                  @11A\n 00000080                                   64935+SMF42JPQ DS    1FL4                Sysplex Cache manager hits      @11A 03-IGWSMF\n                                            64936+*                                  low percentage during this      @11A\n                                            64937+*                                  interval.                       @11A\n                                            64938+*                                                                  @11A\n 00000084                                   64939+SMF42JPR DS    1FL4                Sysplex Cache manager hits      @11A 03-IGWSMF\n                                            64940+*                                  high percentage during this     @11A\n                                            64941+*                                  interval.                       @11A\n                                            64942+*                                                                  @11A\n 00000088                                   64943+SMF42JPS DS    1FL4                Sysplex Cache manager hits      @11A 03-IGWSMF\n                                            64944+*                                  average percentage during this  @11A\n                                            64945+*                                  interval.                       @11A\n                                            64946+*                                                                  @11A\n 0000008C                                   64947+SMF42JP4 DS    CL12                Reserved                        @11A 03-IGWSMF\n                                            64948+*                                                                  @11A\n 00000098                                   64949+SMF42JPT DS    1FL4                DASD number of 'hits'           @11A 03-IGWSMF\n                                            64950+*                                  during this interval            @11A\n 0000009C                                   64951+SMF42JPU DS    1FL4                DASD number                     @11A 03-IGWSMF\n                                            64952+*                                  of 'hits' current percentage    @11A\n                                            64953+*                                  during this interval. Value     @11A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  262\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           64954+*                                  for the last LRU cycle before   @11A\n                                            64955+*                                  the SMF record was processed    @11A\n                                            64956+*                                                                  @11A\n 000000A0                                   64957+SMF42JPV DS    1FL4                DASD 'hits' low percentage      @11A 03-IGWSMF\n                                            64958+*                                  during this interval            @11A\n                                            64959+*                                                                  @11A\n 000000A4                                   64960+SMF42JPW DS    1FL4                DASD 'hits' high percentage     @11A 03-IGWSMF\n                                            64961+*                                  during this interval            @11A\n                                            64962+*                                                                  @11A\n 000000A8                                   64963+SMF42JPX DS    1FL4                DASD average 'hits' during      @11A 03-IGWSMF\n                                            64964+*                                  this interval                   @11A\n                                            64965+*                                                                  @11A\n 000000AC                                   64966+SMF42JP5 DS    CL12                Reserved                        @11A 03-IGWSMF\n                                            64967+*                                                                  @11A\n 000000B8                                   64968+SMF42JPY DS    CL512               Buffer pool count array.        @11A 03-IGWSMF\n                                            64969+*                                  This is a 16 entry array with   @11A\n                                            64970+*                                  each entry 16 bytes long.  The  @11A\n                                            64971+*                                  first entry is for the 2K       @11A\n                                            64972+*                                  storage pool, the second entry  @11A\n                                            64973+*                                  is for the 4K storage pool.     @11A\n                                            64974+*                                  The format is described below.  @11A\n                                            64975+*                                  The entry is mapped by          @11A\n                                            64976+*                                  DSECT SMF420JF                  @11A\n                                            64977+*                                                                  @11A\n 000002B8                                   64978+SMF42JQG DS    1FL4                Buffer size goal (in mega-      @11A 03-IGWSMF\n                                            64979+*                                  bytes) - low value              @11A\n                                            64980+*                                                                  @11A\n 000002BC                                   64981+SMF42JQH DS    1FL4                Buffer size goal (in mega-      @11A 03-IGWSMF\n                                            64982+*                                  bytes) - high value.            @11A\n                                            64983+*                                                                  @11A\n 000002C0                                   64984+SMF42JQI DS    1FL4                Buffer size goal (in mega-      @11A 03-IGWSMF\n                                            64985+*                                  bytes) - current value.         @11A\n                                            64986+*                                                                  @11A\n 000002C4                                   64987+SMF42JQJ DS    1FL4                Buffer size goal (in mega-      @11A 03-IGWSMF\n                                            64988+*                                  bytes) - average value.         @11A\n                                            64989+*                                                                  @11A\n 000002C8                                   64990+SMF42JQK DS    1FL4                Buffer size calculated          @11A 03-IGWSMF\n                                            64991+*                                  (in megabytes) - low value      @11A\n                                            64992+*                                                                  @11A\n 000002CC                                   64993+SMF42JQL DS    1FL4                Buffer size calculated          @11A 03-IGWSMF\n                                            64994+*                                  (in megabytes) - high value     @11A\n                                            64995+*                                                                  @11A\n 000002D0                                   64996+SMF42JQM DS    1FL4                Buffer size calculated          @11A 03-IGWSMF\n                                            64997+*                                  (in megabytes) - current value  @11A\n                                            64998+*                                                                  @11A\n 000002D4                                   64999+SMF42JQN DS    1FL4                Buffer size calculated          @11A 03-IGWSMF\n                                            65000+*                                  (in megabytes) - average value  @11A\n                                            65001+*                                                                  @11A\n 000002D8                                   65002+SMF42JQ2 DS    1FL4                Total number of CF read         @29A 03-IGWSMF\n                                            65003+*                                  requests which encountered      @29A\n                                            65004+*                                  retries for cast out locks      @29A\n                                            65005+*                                  for this interval               @29A\n 000002DC                                   65006+SMF42JQ3 DS    CL4                 Reserved                        @29C 03-IGWSMF\n                                            65007+*                                                                  @11A\n 000002E0                                   65008+SMF42JQO DS    CL64                Calculated megabytes            @11A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  263\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           65009+*                                  distribution array.  this is a  @11A\n                                            65010+*                                  16 entry array which contains   @11A\n                                            65011+*                                  the number of times the cal-    @11A\n                                            65012+*                                  culated value occurred within   @11A\n                                            65013+*                                  a 100mb span.  Entry 1= 0-99m,  @11A\n                                            65014+*                                  entry 2 = 100-199m... entry     @11A\n                                            65015+*                                  The entry is mapped by          @11A\n                                            65016+*                                  DSECT SMF420JG                  @11A\n                                            65017+*                                                                  @11A\n                                            65018+*  asdf  smf42jsa to smf42jsp moves to here\n                                            65019+*                                                                  @21A\n                                            65020+* Additional statistics for RMF                                    @21A\n                                            65021+*                                                                  @21A\n 00000320                                   65022+SMF42JSA DS    1FL4                 Number of SCM Read requests    @21A 03-IGWSMF\n                                            65023+*                                   which encountered castout      @21A\n                                            65024+*                                   contention during this interva @21A\n                                            65025+*                                                                  @21A\n 00000324                                   65026+SMF42JSB DS    1FL4                 Number of SCM Read requests    @21A 03-IGWSMF\n                                            65027+*                                   during this interval           @21A\n                                            65028+*                                                                  @21A\n 00000328                                   65029+SMF42JSC DS    1FL4                 Current percentage of SCM read @21A 03-IGWSMF\n                                            65030+*                                   request which encountered cast @21A\n                                            65031+*                                   contention during this interva @21A\n                                            65032+*                                   Value for the last LRU cycle   @21A\n                                            65033+*                                   before the SMF record was      @21A\n                                            65034+*                                   processed                      @21A\n                                            65035+*                                                                  @21A\n 0000032C                                   65036+SMF42JSD DS    1FL4                 Low percentage during this     @21A 03-IGWSMF\n                                            65037+*                                   interval for SMF42JSC          @21A\n                                            65038+*                                                                  @21A\n 00000330                                   65039+SMF42JSE DS    1FL4                 High percentage during this    @21A 03-IGWSMF\n                                            65040+*                                   interval for SMF42JSC          @21A\n                                            65041+*                                                                  @21A\n 00000334                                   65042+SMF42JSF DS    1FL4                 Average percentage during this @21A 03-IGWSMF\n                                            65043+*                                   interval for SMF42JSC          @21A\n                                            65044+*                                                                  @21A\n 00000338                                   65045+SMF42JSG DS    1FL4                 Number of Redos during         @21A 03-IGWSMF\n                                            65046+*                                   this interval.                 @21A\n                                            65047+*                                                                  @21A\n 0000033C                                   65048+SMF42JSH DS    1FL4                 Current percentage of Redos    @21A 03-IGWSMF\n                                            65049+*                                   during this interval.          @21A\n                                            65050+*                                   Value for the last LRU cycle   @21A\n                                            65051+*                                   before the SMF record was      @21A\n                                            65052+*                                   processed                      @21A\n                                            65053+*                                                                  @21A\n 00000340                                   65054+SMF42JSI DS    1FL4                 Low percentage during this     @21A 03-IGWSMF\n                                            65055+*                                   interval for SMF42JSH          @21A\n                                            65056+*                                                                  @21A\n 00000344                                   65057+SMF42JSJ DS    1FL4                 High percentage during this    @21A 03-IGWSMF\n                                            65058+*                                   interval for SMF42JSH          @21A\n                                            65059+*                                                                  @21A\n 00000348                                   65060+SMF42JSK DS    1FL4                 Average percentage during      @21A 03-IGWSMF\n                                            65061+*                                   this interval for SMF42JSH     @21A\n                                            65062+*                                                                  @21A\n 0000034C                                   65063+SMF42JSL DS    1FL4                 Number of Recursive Redos duri @21A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  264\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           65064+*                                   this interval                  @21A\n                                            65065+*                                                                  @21A\n 00000350                                   65066+SMF42JSM DS    1FL4                 Current percentage of          @21A 03-IGWSMF\n                                            65067+*                                   Recursive Redos during this    @21A\n                                            65068+*                                   interval. Value for the last L @21A\n                                            65069+*                                   cycle before the SMF record wa @21A\n                                            65070+*                                   processed                      @21A\n                                            65071+*                                                                  @21A\n 00000354                                   65072+SMF42JSN DS    1FL4                 Low percentage during this     @21A 03-IGWSMF\n                                            65073+*                                   interval for SMF42JSM          @21A\n                                            65074+*                                                                  @21A\n 00000358                                   65075+SMF42JSO DS    1FL4                 High percentage during this    @21A 03-IGWSMF\n                                            65076+*                                   interval for SMF42JSM          @21A\n                                            65077+*                                                                  @21A\n 0000035C                                   65078+SMF42JSP DS    1FL4                 Average percentage during this @21A 03-IGWSMF\n                                            65079+*                                   interval for SMF42JSM          @21A\n                                            65080+*                                                                  @11A\n 00000360                                   65081+SMF42JUC DS    1FL4                  Total number of fixed pages   @PJS 03-IGWSMF\n                                            65082+*                                    Low Amount                    @PJS\n                                            65083+*                                                                  @PJS\n 00000364                                   65084+SMF42JUD DS    1FL4                  Total number of fixed pages   @PJS 03-IGWSMF\n                                            65085+*                                    High Amount                   @PJS\n                                            65086+*                                                                  @PJS\n 00000368                                   65087+SMF42JUE DS    1FL4                  Total number of fixed pages   @PJS 03-IGWSMF\n                                            65088+*                                    Avg Amount                    @PJS\n                                            65089+*                                                                  @PJS\n 0000036C                                   65090+SMF42JUF DS    1FL4                  Fixed Storage Amount          @PJS 03-IGWSMF\n                                            65091+*                                                                  @PJS\n 00000370                                   65092+SMF42JUG DS    1FL4                  Real Storage Percentage       @PJS 03-IGWSMF\n                                            65093+*                                                                  @11A\n                                            65094+* --------------------------------------------------------------   @11A\n                                            65095+* Start  --- Buffer Pool Count Array Element -  AVERAGE            @11A\n                                            65096+* --------------------------------------------------------------   @11A\n 00000000                00000000 00000020  65097+SMF420JB DSECT ,                    entry mapping                  @11A 03-IGWSMF\n                                            65098+*                                   Average                        @11A\n 00000000                                   65099+SMF42JOF DS    1FL4                 Low value of the number of     @11A 03-IGWSMF\n                                            65100+*                                   BMF buffers for this pool      @11A\n                                            65101+*                                   during this interval.          @11A\n                                            65102+*                                   (sysplex totals)               @11A\n                                            65103+*                                                                  @11A\n                                            65104+*                                   Average                        @11A\n 00000004                                   65105+SMF42JOG DS    1FL4                 High value of the number of    @11A 03-IGWSMF\n                                            65106+*                                   BMF buffers for this pool      @11A\n                                            65107+*                                   during this interval.          @11A\n                                            65108+*                                   (sysplex totals)               @11A\n                                            65109+*                                                                  @11A\n                                            65110+*                                   Average current                @11A\n 00000008                                   65111+SMF42JOH DS    1FL4                 value of the number of         @11A 03-IGWSMF\n                                            65112+*                                   BMF buffers for this pool      @11A\n                                            65113+*                                   during this interval.          @11A\n                                            65114+*                                   (sysplex totals)               @11A\n                                            65115+*                                                                  @11A\n 0000000C                                   65116+SMF42JOI DS    1FL4                 Reserved                       @11A 03-IGWSMF\n                                            65117+*                                                                  @11A\n                                            65118+*                                   Average                        @11A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  265\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000010                                   65119+SMF42JOJ DS    1FL4                 Low value of the number of     @11A 03-IGWSMF\n                                            65120+*                                   extents for this pool          @11A\n                                            65121+*                                   during this interval.          @11A\n                                            65122+*                                   (sysplex totals)               @11A\n                                            65123+*                                                                  @11A\n                                            65124+*                                   Average                        @11A\n 00000014                                   65125+SMF42JOK DS    1FL4                 High value of the number of    @11A 03-IGWSMF\n                                            65126+*                                   extents for this pool          @11A\n                                            65127+*                                   during this interval.          @11A\n                                            65128+*                                   (sysplex totals)               @11A\n                                            65129+*                                                                  @11A\n                                            65130+*                                   Average current                @11A\n 00000018                                   65131+SMF42JOL DS    1FL4                 value of the number of         @11A 03-IGWSMF\n                                            65132+*                                   extents for this pool          @11A\n                                            65133+*                                   during this interval.          @11A\n                                            65134+*                                   (sysplex totals)               @11A\n                                            65135+*                                                                  @11A\n 0000001C                                   65136+SMF42JOM DS    1FL4                 Reserved                       @11A 03-IGWSMF\n                                            65137+*                                                                  @11A\n                         00000020           65138+SMF420JB_LEN EQU *-SMF420JB         Length of single entry         @11A 03-IGWSMF\n                                            65139+* --------------------------------------------------------------   @11A\n                                            65140+* End    --- Buffer Pool Count Array Element -  AVERAGE            @11A\n                                            65141+* --------------------------------------------------------------   @11A\n                                            65142+*                                                                  @11A\n                                            65143+* --------------------------------------------------------------   @11A\n                                            65144+* Start  --- Buffer Pool Count Array Element - sysplex totals      @11A\n                                            65145+* --------------------------------------------------------------   @11A\n 00000000                00000000 00000020  65146+SMF420JC DSECT ,                    entry mapping                  @11A 03-IGWSMF\n                                            65147+*                                   sysplex wide totals            @11A\n                                            65148+*                                                                  @11A\n 00000000                                   65149+SMF42JRJ DS    1FL4                 Low value of the number of     @11A 03-IGWSMF\n                                            65150+*                                   BMF buffers for this pool      @11A\n                                            65151+*                                   during this interval.          @11A\n                                            65152+*                                   (sysplex totals)               @11A\n                                            65153+*                                                                  @11A\n 00000004                                   65154+SMF42JRK DS    1FL4                 High value of the number of    @11A 03-IGWSMF\n                                            65155+*                                   BMF buffers for this pool      @11A\n                                            65156+*                                   during this interval.          @11A\n                                            65157+*                                   (sysplex totals)               @11A\n                                            65158+*                                                                  @11A\n 00000008                                   65159+SMF42JRL DS    1FL4                 value of the number of         @11A 03-IGWSMF\n                                            65160+*                                   BMF buffers for this pool      @11A\n                                            65161+*                                   during this interval.          @11A\n                                            65162+*                                   (sysplex totals)               @11A\n                                            65163+*                                                                  @11A\n 0000000C                                   65164+SMF42JRM DS    1FL4                 reserved                       @11A 03-IGWSMF\n                                            65165+*                                                                  @11A\n 00000010                                   65166+SMF42JRN DS    1FL4                 Low value of the number of     @11A 03-IGWSMF\n                                            65167+*                                   extents for this pool          @11A\n                                            65168+*                                   during this interval.          @11A\n                                            65169+*                                   (sysplex totals)               @11A\n                                            65170+*                                                                  @11A\n 00000014                                   65171+SMF42JRO DS    1FL4                 High value of the number of    @11A 03-IGWSMF\n                                            65172+*                                   extents for this pool          @11A\n                                            65173+*                                   during this interval.          @11A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  266\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           65174+*                                   (sysplex totals)               @11A\n                                            65175+*                                                                  @11A\n                                            65176+*                                   current                        @11A\n 00000018                                   65177+SMF42JRP DS    1FL4                 value of the number of         @11A 03-IGWSMF\n                                            65178+*                                   extents for this pool          @11A\n                                            65179+*                                   during this interval.          @11A\n                                            65180+*                                   (sysplex totals)               @11A\n                                            65181+*                                                                  @11A\n 0000001C                                   65182+SMF42JRQ DS    1FL4                 reserved                       @11A 03-IGWSMF\n                                            65183+*                                                                  @11A\n                                            65184+* --------------------------------------------------------------   @11A\n                                            65185+* End    --- Buffer Pool Count Array Element - sysplex totals      @11A\n                                            65186+* --------------------------------------------------------------   @11A\n                                            65187+*                                                                  @11A\n                                            65188+* --------------------------------------------------------------   @11A\n                                            65189+* Start --  Buffer Manager Calculated Distribution Array - Avg.    @11A\n                                            65190+* --------------------------------------------------------------   @11A\n 00000000                00000000 00000004  65191+SMF420JD DSECT ,                                                   @11A 03-IGWSMF\n                                            65192+*                                   Average                        @11A\n 00000000                                   65193+SMF42JRF DS    1FL4                 Number of times calculated     @11A 03-IGWSMF\n                                            65194+*                                   value was within this range    @11A\n                                            65195+*                                   (across the sysplex)           @11A\n                                            65196+*                                                                  @11A\n                                            65197+*                                                                  @11A\n                                            65198+* --------------------------------------------------------------   @11A\n                                            65199+* End   --  Buffer Manager Calculated Distribution Array - Avg.    @11A\n                                            65200+* --------------------------------------------------------------   @11A\n                                            65201+*                                                                  @11A\n                                            65202+* --------------------------------------------------------------   @11A\n                                            65203+* Start --  Buffer Manager Calculated Distribution Array - Total   @11A\n                                            65204+* --------------------------------------------------------------   @11A\n 00000000                00000000 00000004  65205+SMF420JE DSECT ,                                                   @11A 03-IGWSMF\n                                            65206+*                                   Total                          @11A\n 00000000                                   65207+SMF42JRH DS    1FL4                 Number of times calculated     @11A 03-IGWSMF\n                                            65208+*                                   value was within this range    @11A\n                                            65209+*                                   (across the sysplex)           @11A\n                                            65210+*                                                                  @11A\n                                            65211+* --------------------------------------------------------------   @11A\n                                            65212+* End   --  Buffer Manager Calculated Distribution Array - Total   @11A\n                                            65213+* --------------------------------------------------------------   @11A\n                                            65214+*  asdf  smf42jta to smf42jub moved from here\n                                            65215+* --------------------------------------------------------------   @11A\n                                            65216+* Start  --- Buffer Pool Count Array Element - single system       @11A\n                                            65217+* --------------------------------------------------------------   @11A\n 00000000                00000000 00000020  65218+SMF420JF DSECT ,                    entry mapping                  @11A 03-IGWSMF\n                                            65219+*                                   single system                  @11A\n                                            65220+*                                                                  @11A\n 00000000                                   65221+SMF42JPZ DS    1FL4                 Low value of the number of     @11A 03-IGWSMF\n                                            65222+*                                   BMF buffers for this pool      @11A\n                                            65223+*                                   during this interval.          @11A\n                                            65224+*                                                                  @11A\n 00000004                                   65225+SMF42JQA DS    1FL4                 High value of the number of    @11A 03-IGWSMF\n                                            65226+*                                   BMF buffers for this pool      @11A\n                                            65227+*                                   during this interval.          @11A\n                                            65228+*                                                                  @11A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  267\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           65229+*                                   current                        @11A\n 00000008                                   65230+SMF42JQB DS    1FL4                 value of the number of         @11A 03-IGWSMF\n                                            65231+*                                   BMF buffers for this pool      @11A\n                                            65232+*                                   during this interval.          @11A\n                                            65233+*                                                                  @11A\n 0000000C                                   65234+SMF42JQ6 DS    1FL4                 reserved                       @11A 03-IGWSMF\n                                            65235+*                                                                  @11A\n 00000010                                   65236+SMF42JQC DS    1FL4                 Low value of the number of     @11A 03-IGWSMF\n                                            65237+*                                   extents for this pool          @11A\n                                            65238+*                                   during this interval.          @11A\n                                            65239+*                                                                  @11A\n 00000014                                   65240+SMF42JQD DS    1FL4                 High value of the number of    @11A 03-IGWSMF\n                                            65241+*                                   extents for this pool          @11A\n                                            65242+*                                   during this interval.          @11A\n                                            65243+*                                                                  @11A\n                                            65244+*                                   current                        @11A\n 00000018                                   65245+SMF42JQF DS    1FL4                 value of the number of         @11A 03-IGWSMF\n                                            65246+*                                   extents for this pool          @11A\n                                            65247+*                                   during this interval.          @11A\n                                            65248+*                                                                  @11A\n 0000001C                                   65249+SMF42JQ7 DS    1FL4                 reserved                       @11A 03-IGWSMF\n                                            65250+*                                                                  @11A\n                                            65251+*                                                                  @11A\n                                            65252+* --------------------------------------------------------------   @11A\n                                            65253+* End    --- Buffer Pool Count Array Element - single system       @11A\n                                            65254+* --------------------------------------------------------------   @11A\n                                            65255+*                                                                  @11A\n                                            65256+* --------------------------------------------------------------   @11A\n                                            65257+* Start --  Buffer Manager Calculated Distribution Array           @11A\n                                            65258+* --------------------------------------------------------------   @11A\n 00000000                00000000 00000004  65259+SMF420JG DSECT ,                                                   @11A 03-IGWSMF\n                                            65260+*                                   SINGLE SYSTEM                  @11A\n                                            65261+*                                                                  @11A\n 00000000                                   65262+SMF42JQP DS    1FL4                 Number of times calculated     @11A 03-IGWSMF\n                                            65263+*                                   value was within this range    @11A\n                                            65264+*                                   (across the sysplex)           @11A\n                                            65265+*                                                                  @11A\n                                            65266+* --------------------------------------------------------------   @11A\n                                            65267+* End   --  Buffer Manager Calculated Distribution Array           @11A\n                                            65268+* --------------------------------------------------------------   @11A\n                                            65269+*                                                                  @11A\n                                            65270+*  asdf  smf42jsa to smf42jsp moved from here\n                                            65271+*  The following sections are for above bar buffers                @64A\n                                            65272+*                                                                  @64A\n 00000000                00000000 000005C0  65273+SMF2A0JA DSECT ,                                                   @64A 03-IGWSMF\n                                            65274+*                                                                  @64A\n 00000000                                   65275+SMF2AJA1 DS    0D                  Sysplex Totals Section          @64A 03-IGWSMF\n                                            65276+*                                                                  @64A\n 00000000                                   65277+SMF2AJAC DS    0CL1384                                             @64A 03-IGWSMF\n                                            65278+*                                                                  @64A\n 00000000                                   65279+SMF2AJNA DS    1FL4                Interval Length. This is the    @64A 03-IGWSMF\n                                            65280+*                                  Total Time of the Measurement   @64A\n                                            65281+*                                  Period  (in seconds) Total      @64A\n                                            65282+*                                                                  @64A\n 00000004                                   65283+SMF2AJ00 DS    CL12                Reserved                        @64A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  268\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           65284+*                                                                  @64A\n 00000010                                   65285+SMF2AJNB DS    CL16                Reserved                        @64A 03-IGWSMF\n                                            65286+*                                                                  @64A\n 00000020                                   65287+SMF2AJND DS    CL8                 Reserved                        @64A 03-IGWSMF\n                                            65288+*                                                                  @64A\n 00000028                                   65289+SMF2AJNE DS    2F                  Average CPU Time for all        @64A 03-IGWSMF\n                                            65290+*                                  Systems in the Sysplex.  This   @64A\n                                            65291+*                                  is the Amount of CPU Time       @64A\n                                            65292+*                                  (On Average) That Each System   @64A\n                                            65293+*                                  Consumed While Processing the   @64A\n                                            65294+*                                  Local Buffer Manager LRU        @64A\n                                            65295+*                                  algorithm                       @64A\n                                            65296+*                                                                  @64A\n 00000030                                   65297+SMF2AJNF DS    2F                  Total CPU Time for This         @64A 03-IGWSMF\n                                            65298+*                                  Record (in milli-seconds)       @64A\n                                            65299+*                                  (Sysplex Totals)                @64A\n                                            65300+*                                                                  @64A\n 00000038                                   65301+SMF2AJN0 DS    CL4                 Reserved                        @64A 03-IGWSMF\n                                            65302+*                                                                  @64A\n 0000003C                                   65303+SMF2AJN7 DS    1FL4                Total Number of Write Requests  @64A 03-IGWSMF\n                                            65304+*                                  (Sysplex Totals)                @64A\n                                            65305+*                                                                  @64A\n 00000040                                   65306+SMF2AJNG DS    1FL4                Average Number of Buffer        @64A 03-IGWSMF\n                                            65307+*                                  Manager LRU Intervals           @64A\n                                            65308+*                                  Processed During This Period.   @64A\n                                            65309+*                                  (Sysplex Totals)                @64A\n                                            65310+*                                                                  @64A\n 00000044                                   65311+SMF2AJNH DS    1FL4                Total Number of Buffer          @64A 03-IGWSMF\n                                            65312+*                                  Manager LRU Intervals           @64A\n                                            65313+*                                  Processed During This Period    @64A\n                                            65314+*                                  (Across the Sysplex)            @64A\n                                            65315+*                                                                  @64A\n 00000048                                   65316+SMF2AJNI DS    1FL4                Average Number of Buffer        @64A 03-IGWSMF\n                                            65317+*                                  Manager LRU Intervals Processed @64A\n                                            65318+*                                  Where BMF was Over the Goal     @64A\n                                            65319+*                                  And Normal Algorithms Were      @64A\n                                            65320+*                                  Bypassed to Reclaim Buffers     @64A\n                                            65321+*                                                                  @64A\n 0000004C                                   65322+SMF2AJNJ DS    1FL4                Total Number of Buffer Manager  @64A 03-IGWSMF\n                                            65323+*                                  LRU Intervals Processed         @64A\n                                            65324+*                                  Where BMF was Over the Goal     @64A\n                                            65325+*                                  And Normal Algorithms Were      @64A\n                                            65326+*                                  Bypassed to Reclaim Buffers     @64A\n                                            65327+*                                  (Across the Sysplex)            @64A\n                                            65328+*                                                                  @64A\n 00000050                                   65329+SMF2AJNK DS    1FL4                Average Number of Times That    @64A 03-IGWSMF\n                                            65330+*                                  BMF was Called on This Interval @64A\n                                            65331+*                                                                  @64A\n 00000054                                   65332+SMF2AJNL DS    1FL4                Total Number of Times That      @64A 03-IGWSMF\n                                            65333+*                                  BMF was Called on This Interval @64A\n                                            65334+*                                  (Across the Sysplex)            @64A\n                                            65335+*                                                                  @64A\n 00000058                                   65336+SMF2AJNM DS    1FL4                Average Number of BMF           @64A 03-IGWSMF\n                                            65337+*                                  Hits During This Interval       @64A\n                                            65338+*                                  (Sysplex Totals)                @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  269\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           65339+*                                                                  @64A\n 0000005C                                   65340+SMF2AJNN DS    1FL4                Total Number of BMF             @64A 03-IGWSMF\n                                            65341+*                                  Hits During This Interval       @64A\n                                            65342+*                                  (Sysplex Totals)                @64A\n                                            65343+*                                                                  @64A\n 00000060                                   65344+SMF2AJNO DS    1FL4                Buffer Manager Number of        @64A 03-IGWSMF\n                                            65345+*                                  'Hits' Current Percentage       @64A\n                                            65346+*                                  During This Interval            @64A\n                                            65347+*                                  (Sysplex Totals)                @64A\n                                            65348+*                                                                  @64A\n 00000064                                   65349+SMF2AJNP DS    1FL4                Buffer Manager Number of        @64A 03-IGWSMF\n                                            65350+*                                  'Hits' Low Percentage During    @64A\n                                            65351+*                                  This Interval                   @64A\n                                            65352+*                                  (Sysplex Totals)                @64A\n                                            65353+*                                                                  @64A\n 00000068                                   65354+SMF2AJNQ DS    1FL4                Buffer Manager Number of        @64A 03-IGWSMF\n                                            65355+*                                  'Hits' High Percentage During   @64A\n                                            65356+*                                  This Interval                   @64A\n                                            65357+*                                  (Sysplex Totals)                @64A\n                                            65358+*                                                                  @64A\n 0000006C                                   65359+SMF2AJNR DS    1FL4                Buffer Manager Average          @64A 03-IGWSMF\n                                            65360+*                                  'Hits' During This Interval     @64A\n                                            65361+*                                  (Across the Sysplex)            @64A\n                                            65362+*                                                                  @64A\n 00000070                                   65363+SMF2AJNS DS    1FL4                Average Sysplex Cache Manager   @64A 03-IGWSMF\n                                            65364+*                                  Number of 'Hits' During This    @64A\n                                            65365+*                                  Interval                        @64A\n                                            65366+*                                  (Across the Sysplex)            @64A\n                                            65367+*                                                                  @64A\n 00000074                                   65368+SMF2AJNT DS    1FL4                Total Sysplex Cache Manager     @64A 03-IGWSMF\n                                            65369+*                                  Number of 'Hits' During This    @64A\n                                            65370+*                                  Interval                        @64A\n                                            65371+*                                  (Across the Sysplex)            @64A\n                                            65372+*                                                                  @64A\n 00000078                                   65373+SMF2AJNU DS    1FL4                Sysplex Cache Manager Hits      @64A 03-IGWSMF\n                                            65374+*                                  Current Percentage              @64A\n                                            65375+*                                  During This Interval            @64A\n                                            65376+*                                  (Across the Sysplex)            @64A\n                                            65377+*                                                                  @64A\n 0000007C                                   65378+SMF2AJNV DS    1FL4                Sysplex Cache Manager Hits      @64A 03-IGWSMF\n                                            65379+*                                  Low Percentage During This      @64A\n                                            65380+*                                  Interval                        @64A\n                                            65381+*                                  (Across the Sysplex)            @64A\n                                            65382+*                                                                  @64A\n 00000080                                   65383+SMF2AJNW DS    1FL4                Sysplex Cache Manager Hits      @64A 03-IGWSMF\n                                            65384+*                                  High Percentage During This     @64A\n                                            65385+*                                  Interval                        @64A\n                                            65386+*                                  (Across the Sysplex)            @64A\n                                            65387+*                                                                  @64A\n 00000084                                   65388+SMF2AJNX DS    1FL4                Sysplex Cache Manager Hits      @64A 03-IGWSMF\n                                            65389+*                                  Average Percentage During       @64A\n                                            65390+*                                  This Interval                   @64A\n                                            65391+*                                  (Across the Sysplex)            @64A\n                                            65392+*                                                                  @64A\n 00000088                                   65393+SMF2AJNY DS    1FL4                Average DASD Number of 'Hits'   @64A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  270\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           65394+*                                  During This Interval            @64A\n                                            65395+*                                  (Across the Sysplex)            @64A\n                                            65396+*                                                                  @64A\n 0000008C                                   65397+SMF2AJNZ DS    1FL4                Total DASD Number of 'Hits'     @64A 03-IGWSMF\n                                            65398+*                                  During This Interval            @64A\n                                            65399+*                                  (Across the Sysplex)            @64A\n                                            65400+*                                                                  @64A\n 00000090                                   65401+SMF2AJOA DS    1FL4                DASD 'Hits' Current Percentage  @64A 03-IGWSMF\n                                            65402+*                                  During This Interval            @64A\n                                            65403+*                                  (Across the Sysplex)            @64A\n                                            65404+*                                                                  @64A\n 00000094                                   65405+SMF2AJOB DS    1FL4                DASD 'Hits' Low Percentage      @64A 03-IGWSMF\n                                            65406+*                                  During This Interval            @64A\n                                            65407+*                                  (Across the Sysplex)            @64A\n                                            65408+*                                                                  @64A\n 00000098                                   65409+SMF2AJOC DS    1FL4                DASD 'Hits' High Percentage     @64A 03-IGWSMF\n                                            65410+*                                  During This Interval            @64A\n                                            65411+*                                  (Across the Sysplex)            @64A\n                                            65412+*                                                                  @64A\n 0000009C                                   65413+SMF2AJOD DS    1FL4                DASD Average 'Hits'             @64A 03-IGWSMF\n                                            65414+*                                  During This Interval            @64A\n                                            65415+*                                  (Across the Sysplex)            @64A\n                                            65416+*                                                                  @64A\n 000000A0                                   65417+SMF2AJOE DS    CL512               Sysplex Average -               @64A 03-IGWSMF\n                                            65418+*                                  Buffer Pool Count Array         @64A\n                                            65419+*                                  This is a 16 Entry Array With   @64A\n                                            65420+*                                  Each Entry 32 Bytes Long.  The  @64A\n                                            65421+*                                  First Entry is for the 2K       @64A\n                                            65422+*                                  Storage Pool, the Second Entry  @64A\n                                            65423+*                                  Is for the 4K Storage Pool.     @64A\n                                            65424+*                                  The Format is Described Below.  @64A\n                                            65425+*                                  (Sysplex Totals)                @64A\n                                            65426+*                                  Each Entry is Mapped by         @64A\n                                            65427+*                                  DSECT SMF2A0JB                  @64A\n                                            65428+*                                                                  @64A\n 000002A0                                   65429+SMF2AJRI DS    CL512               Sysplex Wide Totals -           @64A 03-IGWSMF\n                                            65430+*                                  Buffer Pool Count Array         @64A\n                                            65431+*                                  This is a 16 Entry Array With   @64A\n                                            65432+*                                  Each Entry 32 Bytes Long.  The  @64A\n                                            65433+*                                  First Entry is for the 2K       @64A\n                                            65434+*                                  Storage Pool, the Second Entry  @64A\n                                            65435+*                                  Is for the 4K Storage Pool.     @64A\n                                            65436+*                                  The Format is Described Below.  @64A\n                                            65437+*                                  (Sysplex Totals)                @64A\n                                            65438+*                                  Each Entry is Mapped by         @64A\n                                            65439+*                                  DSECT SMF2A0JC                  @64A\n                                            65440+*                                                                  @64A\n 000004A0                                   65441+SMF2AJON DS    1FL4                Average Buffer Size Goal        @64A 03-IGWSMF\n                                            65442+*                                  (in megabytes) - Low Value      @64A\n                                            65443+*                                  (Sysplex Totals)                @64A\n                                            65444+*                                                                  @64A\n 000004A4                                   65445+SMF2AJOO DS    1FL4                Total Buffer Size Goal          @64A 03-IGWSMF\n                                            65446+*                                  (in megabytes) - Low Value      @64A\n                                            65447+*                                  (Sysplex Totals)                @64A\n                                            65448+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  271\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000004A8                                   65449+SMF2AJOP DS    1FL4                Average Buffer Size Goal        @64A 03-IGWSMF\n                                            65450+*                                  (in megabytes) - High Value     @64A\n                                            65451+*                                  (Sysplex Totals)                @64A\n                                            65452+*                                                                  @64A\n 000004AC                                   65453+SMF2AJOQ DS    1FL4                Total Buffer Size Goal          @64A 03-IGWSMF\n                                            65454+*                                  (in megabytes) - High Value     @64A\n                                            65455+*                                  (Sysplex Totals)                @64A\n                                            65456+*                                                                  @64A\n 000004B0                                   65457+SMF2AJOR DS    1FL4                Average Buffer Size Goal        @64A 03-IGWSMF\n                                            65458+*                                  (in megabytes) - Current Value  @64A\n                                            65459+*                                  (Sysplex Totals)                @64A\n                                            65460+*                                                                  @64A\n 000004B4                                   65461+SMF2AJOS DS    1FL4                Total Buffer Size Goal          @64A 03-IGWSMF\n                                            65462+*                                  (in megabytes) - Current Value  @64A\n                                            65463+*                                  (Sysplex Totals)                @64A\n                                            65464+*                                                                  @64A\n 000004B8                                   65465+SMF2AJOT DS    1FL4                Total Buffer Size Goal          @64A 03-IGWSMF\n                                            65466+*                                  (in megabytes) - Average Value  @64A\n                                            65467+*                                  (Sysplex Totals)                @64A\n                                            65468+*                                                                  @64A\n 000004BC                                   65469+SMF2AJOU DS    1FL4                Reserved                        @64A 03-IGWSMF\n                                            65470+*                                                                  @64A\n 000004C0                                   65471+SMF2AJOV DS    1FL4                Average Buffer Size Calculated  @64A 03-IGWSMF\n                                            65472+*                                  (in megabytes) - Low Value      @64A\n                                            65473+*                                  (Across the Sysplex)            @64A\n                                            65474+*                                                                  @64A\n 000004C4                                   65475+SMF2AJOW DS    1FL4                Total Buffer Size Calculated    @64A 03-IGWSMF\n                                            65476+*                                  (in megabytes) - Low Value      @64A\n                                            65477+*                                  (Across the Sysplex)            @64A\n                                            65478+*                                                                  @64A\n 000004C8                                   65479+SMF2AJOX DS    1FL4                Average Buffer Size Calculated  @64A 03-IGWSMF\n                                            65480+*                                  (in megabytes) - High Value     @64A\n                                            65481+*                                  (Across the Sysplex)            @64A\n                                            65482+*                                                                  @64A\n 000004CC                                   65483+SMF2AJOY DS    1FL4                Total Buffer Size Calculated    @64A 03-IGWSMF\n                                            65484+*                                  (in megabytes) - High Value     @64A\n                                            65485+*                                  (Across the Sysplex)            @64A\n                                            65486+*                                                                  @64A\n 000004D0                                   65487+SMF2AJOZ DS    1FL4                Average Buffer Size Calculated  @64A 03-IGWSMF\n                                            65488+*                                  (in megabytes) - Current Value  @64A\n                                            65489+*                                  (Sysplex Totals)                @64A\n                                            65490+*                                                                  @64A\n 000004D4                                   65491+SMF2AJRA DS    1FL4                Total Buffer Size Calculated    @64A 03-IGWSMF\n                                            65492+*                                  (in megabytes) - Current Value  @64A\n                                            65493+*                                  (Sysplex Totals)                @64A\n                                            65494+*                                                                  @64A\n 000004D8                                   65495+SMF2AJRB DS    1FL4                Total Buffer Size Calculated    @64A 03-IGWSMF\n                                            65496+*                                  (in megabytes) - Average Value  @64A\n                                            65497+*                                  (Sysplex Totals)                @64A\n                                            65498+*                                                                  @64A\n 000004DC                                   65499+SMF2AJRC DS    1FL4                Total number of CF read         @29A 03-IGWSMF\n                                            65500+*                                  requests which encountered      @29A\n                                            65501+*                                  retries for cast out locks      @29A\n                                            65502+*                                  for this interval (across       @29A\n                                            65503+*                                  the sysplex)                    @29A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  272\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           65504+*                                                                  @64A\n 000004E0                                   65505+SMF2AJRD DS    CL8                 Reserved                        @64A 03-IGWSMF\n                                            65506+*                                                                  @64A\n 000004E8                                   65507+SMF2AJRE DS    CL64                Average Calculated Megabytes    @64A 03-IGWSMF\n                                            65508+*                                  Distribution Array.  This is a  @64A\n                                            65509+*                                  16 Entry Array Which Contains   @64A\n                                            65510+*                                  The Number of Times the Cal-    @64A\n                                            65511+*                                  culated Value Occurred Within   @64A\n                                            65512+*                                  A 100mb Span.  Entry 1= 0-99m,  @64A\n                                            65513+*                                  Entry 2 = 100-100m... Entry     @64A\n                                            65514+*                                  (Across the Sysplex)            @64A\n                                            65515+*                                  The Entry is Mapped by          @64A\n                                            65516+*                                  DSECT SMF2A0JD                  @64A\n                                            65517+*                                                                  @64A\n 00000528                                   65518+SMF2AJRG DS    CL64                Total Calculated Megabytes      @64A 03-IGWSMF\n                                            65519+*                                  Distribution Array.  This is a  @64A\n                                            65520+*                                  16 Entry Array Which Contains   @64A\n                                            65521+*                                  The Number of Times the Cal-    @64A\n                                            65522+*                                  culated Value Occurred Within   @64A\n                                            65523+*                                  A 100mb Span.  Entry 1= 0-99m,  @64A\n                                            65524+*                                  Entry 2 = 100-100m... Entry     @64A\n                                            65525+*                                  (Across the Sysplex)            @64A\n                                            65526+*                                  The Entry is Mapped by          @64A\n                                            65527+*                                  DSECT SMF2A0JE                  @64A\n                                            65528+*                                                                  @64A\n                                            65529+*  asdf  smf2ajta to smf2ajub moves to here\n                                            65530+*                                                                  @64A\n                                            65531+* Additional statistics for RMF                                    @64A\n                                            65532+*                                                                  @64A\n 00000568                                   65533+SMF2AJTA DS    1FL4                  Average Number of SCM Read    @64A 03-IGWSMF\n                                            65534+*                                    Requests Which Encountered    @64A\n                                            65535+*                                    Castout Lock Contention       @64A\n                                            65536+*                                    During This Interval          @64A\n                                            65537+*                                    (Across the Sysplex)          @64A\n                                            65538+*                                                                  @64A\n 0000056C                                   65539+SMF2AJTB DS    1FL4                  Total Number of SCM Read      @64A 03-IGWSMF\n                                            65540+*                                    Requests Which Encountered    @64A\n                                            65541+*                                    Castout Lock Contention       @64A\n                                            65542+*                                    During This Interval          @64A\n                                            65543+*                                    (Across the Sysplex)          @64A\n                                            65544+*                                                                  @64A\n 00000570                                   65545+SMF2AJTC DS    1FL4                  Average Number of SCM Read    @64A 03-IGWSMF\n                                            65546+*                                    Requests During This Interval @64A\n                                            65547+*                                    (Across the Sysplex)          @64A\n                                            65548+*                                                                  @64A\n 00000574                                   65549+SMF2AJTD DS    1FL4                  Total Number of SCM Read      @64A 03-IGWSMF\n                                            65550+*                                    Requests During This Interval @64A\n                                            65551+*                                    (across the sysplex)          @64A\n                                            65552+*                                                                  @64A\n 00000578                                   65553+SMF2AJTE DS    1FL4                  SCM Read Requests Which       @64A 03-IGWSMF\n                                            65554+*                                    Encountered Castout Lock      @64A\n                                            65555+*                                    Contention Current Percentage @64A\n                                            65556+*                                    During This Interval          @64A\n                                            65557+*                                    (Across the Sysplex)          @64A\n                                            65558+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  273\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000057C                                   65559+SMF2AJTF DS    1FL4                  SCM Read Requests Which       @64A 03-IGWSMF\n                                            65560+*                                    Encountered Castout Lock      @64A\n                                            65561+*                                    Contention Low Percentage     @64A\n                                            65562+*                                    During This Interval          @64A\n                                            65563+*                                    (Across the Sysplex)          @64A\n                                            65564+*                                                                  @64A\n 00000580                                   65565+SMF2AJTG DS    1FL4                  SCM Read Requests Which       @64A 03-IGWSMF\n                                            65566+*                                    Encountered Castout Lock      @64A\n                                            65567+*                                    Contention High Percentage    @64A\n                                            65568+*                                    During This Interval          @64A\n                                            65569+*                                    (Across the Sysplex)          @64A\n                                            65570+*                                                                  @64A\n 00000584                                   65571+SMF2AJTH DS    1FL4                  SCM Read Requests Which       @64A 03-IGWSMF\n                                            65572+*                                    Encountered Castout Lock      @64A\n                                            65573+*                                    Contention Average Percentage @64A\n                                            65574+*                                    During This Interval          @64A\n                                            65575+*                                    (Across the Sysplex)          @64A\n                                            65576+*                                                                  @64A\n 00000588                                   65577+SMF2AJTI DS    1FL4                  Average Number of Redos       @64A 03-IGWSMF\n                                            65578+*                                    During This Interval          @64A\n                                            65579+*                                    (Across the Sysplex)          @64A\n                                            65580+*                                                                  @64A\n 0000058C                                   65581+SMF2AJTJ DS    1FL4                  Total Number of Redos         @64A 03-IGWSMF\n                                            65582+*                                    During This Interval          @64A\n                                            65583+*                                    (Across the Sysplex)          @64A\n                                            65584+*                                                                  @64A\n 00000590                                   65585+SMF2AJTK DS    1FL4                  Average Number of Recursive   @64A 03-IGWSMF\n                                            65586+*                                    Redos During This Interval    @64A\n                                            65587+*                                    (Across the Sysplex)          @64A\n                                            65588+*                                                                  @64A\n 00000594                                   65589+SMF2AJTL DS    1FL4                  Total Number of Recursive     @64A 03-IGWSMF\n                                            65590+*                                    Redos During This Interval    @64A\n                                            65591+*                                    (Across the Sysplex)          @64A\n                                            65592+*                                                                  @64A\n 00000598                                   65593+SMF2AJTM DS    1FL4                  Redos Current Percentage      @64A 03-IGWSMF\n                                            65594+*                                    During This Interval          @64A\n                                            65595+*                                    (Across the Sysplex)          @64A\n                                            65596+*                                                                  @64A\n 0000059C                                   65597+SMF2AJTN DS    1FL4                  Redos Low Percentage          @64A 03-IGWSMF\n                                            65598+*                                    During This Interval          @64A\n                                            65599+*                                    (Across the Sysplex)          @64A\n                                            65600+*                                                                  @64A\n 000005A0                                   65601+SMF2AJTO DS    1FL4                  Redos High Percentage         @64A 03-IGWSMF\n                                            65602+*                                    During This Interval          @64A\n                                            65603+*                                    (Across the Sysplex)          @64A\n                                            65604+*                                                                  @64A\n 000005A4                                   65605+SMF2AJTP DS    1FL4                  Redos Average Percentage      @64A 03-IGWSMF\n                                            65606+*                                    During This Interval          @64A\n                                            65607+*                                    (Across the Sysplex)          @64A\n                                            65608+*                                                                  @64A\n 000005A8                                   65609+SMF2AJTQ DS    1FL4                  Recursive Redos               @64A 03-IGWSMF\n                                            65610+*                                    Current Percentage During     @64A\n                                            65611+*                                    This Interval                 @64A\n                                            65612+*                                    (Across the Sysplex)          @64A\n                                            65613+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  274\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000005AC                                   65614+SMF2AJTR DS    1FL4                  Recursive Redos               @64A 03-IGWSMF\n                                            65615+*                                    Low Percentage During         @64A\n                                            65616+*                                    This Interval                 @64A\n                                            65617+*                                    (Across the Sysplex)          @64A\n                                            65618+*                                                                  @64A\n 000005B0                                   65619+SMF2AJTS DS    1FL4                  Recursive Redos               @64A 03-IGWSMF\n                                            65620+*                                    High Percentage During        @64A\n                                            65621+*                                    This Interval                 @64A\n                                            65622+*                                    (Across the Sysplex)          @64A\n                                            65623+*                                                                  @64A\n 000005B4                                   65624+SMF2AJTT DS    1FL4                  Recursive Redos               @64A 03-IGWSMF\n                                            65625+*                                    Average Percentage During     @64A\n                                            65626+*                                    This Interval                 @64A\n                                            65627+*                                    (Across the Sysplex)          @64A\n                                            65628+*                                                                  @64A\n 000005B8                                   65629+SMF2AJUA DS    1FL4                  Average Number of             @64A 03-IGWSMF\n                                            65630+*                                    Number of Buffer Manager      @64A\n                                            65631+*                                    LRU Intervals Processed       @64A\n                                            65632+*                                    Where BMF was Over the Goal   @64A\n                                            65633+*                                    Accelerated the Aging, but    @64A\n                                            65634+*                                    Did not go into Panic Mode.   @64A\n                                            65635+*                                    (Across the Sysplex)          @64A\n                                            65636+*                                                                  @64A\n 000005BC                                   65637+SMF2AJUB DS    1FL4                  Total Number of               @64A 03-IGWSMF\n                                            65638+*                                    Number of Buffer Manager      @64A\n                                            65639+*                                    LRU Intervals Processed       @64A\n                                            65640+*                                    Where BMF was Over the Goal   @64A\n                                            65641+*                                    Accelerated the Aging, but    @64A\n                                            65642+*                                    Did not go into Panic Mode.   @64A\n                                            65643+*                                    (Across the Sysplex)          @64A\n                                            65644+*                                                                  @64A\n                                            65645+* --------------------------------------------------------------   @64A\n                                            65646+*  Coupling Facility Local Buffer Manager (SMF42 Subtype 19)       @64A\n                                            65647+*  Local Buffer Manager LRU Statistics Summary. Single System      @64A\n                                            65648+* --------------------------------------------------------------   @64A\n 00000000                00000000 00000394  65649+SMF2A0PA DSECT ,                                                   @64A 03-IGWSMF\n                                            65650+*                                                                  @64A\n 00000000                                   65651+SMF2APA1 DS    0D                                                  @64A 03-IGWSMF\n                                            65652+*                                                                  @64A\n 00000000                                   65653+SMF2APAC DS    0CL832                                              @64A 03-IGWSMF\n                                            65654+*                                                                  @64A\n 00000000                                   65655+SMF2AJPA DS    1FL4                Interval length. This is the    @64A 03-IGWSMF\n                                            65656+*                                  total time of the measurement   @64A\n                                            65657+*                                  period. (in seconds) total      @64A\n                                            65658+*                                                                  @64A\n 00000004                                   65659+SMF2AJ01 DS    CL12                Reserved                        @64A 03-IGWSMF\n                                            65660+*                                                                  @64A\n 00000010                                   65661+SMF2AJPB DS    CL8                 MVS system name.                @64A 03-IGWSMF\n                                            65662+*                                                                  @64A\n 00000018                                   65663+SMF2AJPC DS    CL8                 Reserved                        @64A 03-IGWSMF\n                                            65664+*                                                                  @64A\n 00000020                                   65665+SMF2AJPD DS    CL8                 Reserved                        @64A 03-IGWSMF\n                                            65666+*                                                                  @64A\n 00000028                                   65667+SMF2AJPE DS    CL8                 Average CPU time spent by       @64A 03-IGWSMF\n                                            65668+*                                  BMF LRU processing during       @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  275\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           65669+*                                  each cycle (in milli-seconds)   @64A\n                                            65670+*                                                                  @64A\n 00000030                                   65671+SMF2AJPF DS    CL8                 Total CPU time for this         @64A 03-IGWSMF\n                                            65672+*                                  record (in milli-seconds)       @64A\n                                            65673+*                                                                  @64A\n 00000038                                   65674+SMF2AJP1 DS    CL12                Reserved                        @64A 03-IGWSMF\n                                            65675+*                                                                  @64A\n 00000044                                   65676+SMF2AJP6 DS    1FL4                Total number of write requests  @64A 03-IGWSMF\n                                            65677+*                                                                  @64A\n 00000048                                   65678+SMF2AJPG DS    1FL4                Number of buffer manager        @64A 03-IGWSMF\n                                            65679+*                                  LRU intervals processed         @64A\n                                            65680+*                                  during this period.             @64A\n                                            65681+*                                                                  @64A\n 0000004C                                   65682+SMF2AJPH DS    1FL4                Number of buffer manager        @64A 03-IGWSMF\n                                            65683+*                                  LRU intervals processed         @64A\n                                            65684+*                                  where BMF was over the goal     @64A\n                                            65685+*                                  and normal algorithms were      @64A\n                                            65686+*                                  bypassed to reclaim buffers.    @64A\n                                            65687+*                                                                  @64A\n 00000050                                   65688+SMF2AJPI DS    1FL4                Total number of times that BMF  @64A 03-IGWSMF\n                                            65689+*                                  was called in this interval     @64A\n                                            65690+*                                                                  @64A\n 00000054                                   65691+SMF2AJP2 DS    1FL4                Number of buffer manager        @64A 03-IGWSMF\n                                            65692+*                                  LRU intervals processed         @64A\n                                            65693+*                                  where BMF was over the goal,    @64A\n                                            65694+*                                  accelerated the aging, but      @64A\n                                            65695+*                                  did not go into panic mode.     @64A\n                                            65696+*                                                                  @64A\n 00000058                                   65697+SMF2AJPJ DS    1FL4                Buffer manager number of        @64A 03-IGWSMF\n                                            65698+*                                  hits during this interval.      @64A\n                                            65699+*                                                                  @64A\n 0000005C                                   65700+SMF2AJPK DS    1FL4                Buffer manager number of        @64A 03-IGWSMF\n                                            65701+*                                  'hits' current percentage       @64A\n                                            65702+*                                  during this interval. Value     @64A\n                                            65703+*                                  for the last LRU cycle before   @64A\n                                            65704+*                                  the SMF record was processed    @64A\n                                            65705+*                                                                  @64A\n 00000060                                   65706+SMF2AJPL DS    1FL4                Buffer manager number of        @64A 03-IGWSMF\n                                            65707+*                                  'hits' low percentage during    @64A\n                                            65708+*                                  this interval.                  @64A\n                                            65709+*                                                                  @64A\n 00000064                                   65710+SMF2AJPM DS    1FL4                Buffer manager number of        @64A 03-IGWSMF\n                                            65711+*                                  'hits' high percentage during   @64A\n                                            65712+*                                  this interval.                  @64A\n                                            65713+*                                                                  @64A\n 00000068                                   65714+SMF2AJPN DS    1FL4                Buffer manager average          @64A 03-IGWSMF\n                                            65715+*                                  'hits' during this interval.    @64A\n                                            65716+*                                                                  @64A\n 0000006C                                   65717+SMF2AJP3 DS    CL12                Reserved                        @64A 03-IGWSMF\n                                            65718+*                                                                  @64A\n 00000078                                   65719+SMF2AJPO DS    1FL4                Sysplex Cache manager           @64A 03-IGWSMF\n                                            65720+*                                  number of 'hits' during this    @64A\n                                            65721+*                                  interval.                       @64A\n                                            65722+*                                                                  @64A\n 0000007C                                   65723+SMF2AJPP DS    1FL4                Sysplex cache manager num       @64A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  276\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           65724+*                                  of 'hits' current percentage    @64A\n                                            65725+*                                  during this interval. Value     @64A\n                                            65726+*                                  for the last LRU cycle before   @64A\n                                            65727+*                                  the SMF record was processed    @64A\n                                            65728+*                                                                  @64A\n 00000080                                   65729+SMF2AJPQ DS    1FL4                Sysplex Cache manager hits      @64A 03-IGWSMF\n                                            65730+*                                  low percentage during this      @64A\n                                            65731+*                                  interval.                       @64A\n                                            65732+*                                                                  @64A\n 00000084                                   65733+SMF2AJPR DS    1FL4                Sysplex Cache manager hits      @64A 03-IGWSMF\n                                            65734+*                                  high percentage during this     @64A\n                                            65735+*                                  interval.                       @64A\n                                            65736+*                                                                  @64A\n 00000088                                   65737+SMF2AJPS DS    1FL4                Sysplex Cache manager hits      @64A 03-IGWSMF\n                                            65738+*                                  average percentage during this  @64A\n                                            65739+*                                  interval.                       @64A\n                                            65740+*                                                                  @64A\n 0000008C                                   65741+SMF2AJP4 DS    CL12                Reserved                        @64A 03-IGWSMF\n                                            65742+*                                                                  @64A\n 00000098                                   65743+SMF2AJPT DS    1FL4                DASD number of 'hits'           @64A 03-IGWSMF\n                                            65744+*                                  during this interval            @64A\n                                            65745+*                                                                  @64A\n 0000009C                                   65746+SMF2AJPU DS    1FL4                DASD number                     @64A 03-IGWSMF\n                                            65747+*                                  of 'hits' current percentage    @64A\n                                            65748+*                                  during this interval. Value     @64A\n                                            65749+*                                  for the last LRU cycle before   @64A\n                                            65750+*                                  the SMF record was processed    @64A\n                                            65751+*                                                                  @64A\n 000000A0                                   65752+SMF2AJPV DS    1FL4                DASD 'hits' low percentage      @64A 03-IGWSMF\n                                            65753+*                                  during this interval            @64A\n                                            65754+*                                                                  @64A\n 000000A4                                   65755+SMF2AJPW DS    1FL4                DASD 'hits' high percentage     @64A 03-IGWSMF\n                                            65756+*                                  during this interval            @64A\n                                            65757+*                                                                  @64A\n 000000A8                                   65758+SMF2AJPX DS    1FL4                DASD average 'hits' during      @64A 03-IGWSMF\n                                            65759+*                                  this interval                   @64A\n                                            65760+*                                                                  @64A\n 000000AC                                   65761+SMF2AJP5 DS    CL12                Reserved                        @64A 03-IGWSMF\n                                            65762+*                                                                  @64A\n 000000B8                                   65763+SMF2AJPY DS    CL512               Buffer pool count array.        @64A 03-IGWSMF\n                                            65764+*                                  This is a 16 entry array with   @64A\n                                            65765+*                                  each entry 16 bytes long.  The  @64A\n                                            65766+*                                  first entry is for the 2K       @64A\n                                            65767+*                                  storage pool, the second entry  @64A\n                                            65768+*                                  is for the 4K storage pool.     @64A\n                                            65769+*                                  The format is described below.  @64A\n                                            65770+*                                  The entry is mapped by          @64A\n                                            65771+*                                  DSECT SMF2A0JF                  @64A\n                                            65772+*                                                                  @64A\n 000002B8                                   65773+SMF2AJQG DS    1FL8                Buffer size goal (in mega-      @64A 03-IGWSMF\n                                            65774+*                                  bytes) - low value              @64A\n                                            65775+*                                                                  @64A\n 000002C0                                   65776+SMF2AJQH DS    1FL8                Buffer size goal (in mega-      @64A 03-IGWSMF\n                                            65777+*                                  bytes) - high value.            @64A\n                                            65778+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  277\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000002C8                                   65779+SMF2AJQI DS    1FL8                Buffer size goal (in mega-      @64A 03-IGWSMF\n                                            65780+*                                  bytes) - current value.         @64A\n                                            65781+*                                                                  @64A\n 000002D0                                   65782+SMF2AJQJ DS    1FL8                Buffer size goal (in mega-      @64A 03-IGWSMF\n                                            65783+*                                  bytes) - average value.         @64A\n                                            65784+*                                                                  @64A\n 000002D8                                   65785+SMF2AJQK DS    1FL8                Buffer size calculated          @64A 03-IGWSMF\n                                            65786+*                                  (in megabytes) - low value      @64A\n                                            65787+*                                                                  @64A\n 000002E0                                   65788+SMF2AJQL DS    1FL8                Buffer size calculated          @64A 03-IGWSMF\n                                            65789+*                                  (in megabytes) - high value     @64A\n                                            65790+*                                                                  @64A\n 000002E8                                   65791+SMF2AJQM DS    1FL8                Buffer size calculated          @64A 03-IGWSMF\n                                            65792+*                                  (in megabytes) - current value  @64A\n                                            65793+*                                                                  @64A\n 000002F0                                   65794+SMF2AJQN DS    1FL8                Buffer size calculated          @64A 03-IGWSMF\n                                            65795+*                                  (in megabytes) - average value  @64A\n                                            65796+*                                                                  @64A\n 000002F8                                   65797+SMF2AJQ2 DS    1FL4                Total number of CF read         @29A 03-IGWSMF\n                                            65798+*                                  requests which encountered      @29A\n                                            65799+*                                  retries for cast out locks      @29A\n                                            65800+*                                  for this interval               @29A\n 000002FC                                   65801+SMF2AJQ3 DS    CL4                 Reserved                        @29C 03-IGWSMF\n                                            65802+*                                                                  @64A\n 00000300                                   65803+SMF2AJQO DS    CL64                Calculated megabytes            @64A 03-IGWSMF\n                                            65804+*                                  distribution array.  this is a  @64A\n                                            65805+*                                  16 entry array which contains   @64A\n                                            65806+*                                  the number of times the cal-    @64A\n                                            65807+*                                  culated value occurred within   @64A\n                                            65808+*                                  a 100mb span.  Entry 1= 0-99m,  @64A\n                                            65809+*                                  entry 2 = 100-199m... entry     @64A\n                                            65810+*                                  The entry is mapped by          @64A\n                                            65811+*                                  DSECT SMF2A0JG                  @64A\n                                            65812+*                                                                  @64A\n                                            65813+* asdf  smf2ajsa to smf2ajsp  moves to here\n                                            65814+* Additional Statistics for RMF                                    @64A\n                                            65815+*                                                                  @64A\n 00000340                                   65816+SMF2AJSA DS    1FL4                 Number of SCM Read Requests    @64A 03-IGWSMF\n                                            65817+*                                   Which Encountered Castout      @64A\n                                            65818+*                                   Contention During This Interval@64A\n                                            65819+*                                                                  @64A\n 00000344                                   65820+SMF2AJSB DS    1FL4                 Number of SCM Read Requests    @64A 03-IGWSMF\n                                            65821+*                                   During This Interval           @64A\n                                            65822+*                                                                  @64A\n 00000348                                   65823+SMF2AJSC DS    1FL4                 Current Percentage of SCM Read @64A 03-IGWSMF\n                                            65824+*                                   Requests Which Encountered     @64A\n                                            65825+*                                   Castout Contention During      @64A\n                                            65826+*                                   This Interval                  @64A\n                                            65827+*                                   Value for the Last LRU Cycle   @64A\n                                            65828+*                                   Before the SMF Record was      @64A\n                                            65829+*                                   Processed                      @64A\n                                            65830+*                                                                  @64A\n 0000034C                                   65831+SMF2AJSD DS    1FL4                 Low Percentage During This     @64A 03-IGWSMF\n                                            65832+*                                   Interval for SMF2AJSC          @64A\n                                            65833+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  278\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000350                                   65834+SMF2AJSE DS    1FL4                 High Percentage During This    @64A 03-IGWSMF\n                                            65835+*                                   Interval for SMF2AJSC          @64A\n                                            65836+*                                                                  @64A\n 00000354                                   65837+SMF2AJSF DS    1FL4                 Average Percentage During This @64A 03-IGWSMF\n                                            65838+*                                   Interval for SMF2AJSC          @64A\n                                            65839+*                                                                  @64A\n 00000358                                   65840+SMF2AJSG DS    1FL4                 Number of Redos During         @64A 03-IGWSMF\n                                            65841+*                                   This Interval                  @64A\n                                            65842+*                                                                  @64A\n 0000035C                                   65843+SMF2AJSH DS    1FL4                 Current Percentage of Redos    @64A 03-IGWSMF\n                                            65844+*                                   During This Interval.          @64A\n                                            65845+*                                   Value for the Last LRU Cycle   @64A\n                                            65846+*                                   Before the SMF Record was      @64A\n                                            65847+*                                   Processed                      @64A\n                                            65848+*                                                                  @64A\n 00000360                                   65849+SMF2AJSI DS    1FL4                 Low Percentage During This     @64A 03-IGWSMF\n                                            65850+*                                   Interval for SMF2AJSH          @64A\n                                            65851+*                                                                  @64A\n 00000364                                   65852+SMF2AJSJ DS    1FL4                 High Percentage During This    @64A 03-IGWSMF\n                                            65853+*                                   Interval for SMF2AJSH          @64A\n                                            65854+*                                                                  @64A\n 00000368                                   65855+SMF2AJSK DS    1FL4                 Average Percentage During      @64A 03-IGWSMF\n                                            65856+*                                   This Interval for SMF2AJSH     @64A\n                                            65857+*                                                                  @64A\n 0000036C                                   65858+SMF2AJSL DS    1FL4                 Number of Recursive Redos      @64A 03-IGWSMF\n                                            65859+*                                   During This Interval           @64A\n                                            65860+*                                                                  @64A\n 00000370                                   65861+SMF2AJSM DS    1FL4                 Current Percentage of          @64A 03-IGWSMF\n                                            65862+*                                   Recursive Redos During This    @64A\n                                            65863+*                                   Interval. Value for the Last   @64A\n                                            65864+*                                   LRU Cycle Before the SMF       @64A\n                                            65865+*                                   Record was Processed           @64A\n                                            65866+*                                                                  @64A\n 00000374                                   65867+SMF2AJSN DS    1FL4                 Low Percentage During This     @64A 03-IGWSMF\n                                            65868+*                                   Interval for SMF2AJSM          @64A\n                                            65869+*                                                                  @64A\n 00000378                                   65870+SMF2AJSO DS    1FL4                 High Percentage During This    @64A 03-IGWSMF\n                                            65871+*                                   Interval for SMF2AJSM          @64A\n                                            65872+*                                                                  @64A\n 0000037C                                   65873+SMF2AJSP DS    1FL4                 Average Percentage During This @64A 03-IGWSMF\n                                            65874+*                                   Interval for SMF2AJSM          @64A\n                                            65875+*                                                                  @64A\n 00000380                                   65876+SMF2AJUC DS    1FL4                  Total number of fixed pages   @PJS 03-IGWSMF\n                                            65877+*                                    Low Amount                    @PJS\n                                            65878+*                                                                  @PJS\n 00000384                                   65879+SMF2AJUD DS    1FL4                  Total number of fixed pages   @PJS 03-IGWSMF\n                                            65880+*                                    High Amount                   @PJS\n                                            65881+*                                                                  @PJS\n 00000388                                   65882+SMF2AJUE DS    1FL4                  Total number of fixed pages   @PJS 03-IGWSMF\n                                            65883+*                                    Avg Amount                    @PJS\n                                            65884+*                                                                  @PJS\n 0000038C                                   65885+SMF2AJUF DS    1FL4                  Fixed Storage Amount          @PJS 03-IGWSMF\n                                            65886+*                                                                  @PJS\n 00000390                                   65887+SMF2AJUG DS    1FL4                  Real Storage Percentage       @PJS 03-IGWSMF\n                                            65888+*                                                                  @PJS\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  279\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           65889+* --------------------------------------------------------------   @64A\n                                            65890+* Start  --- Buffer Pool Count Array Element -  AVERAGE            @64A\n                                            65891+* --------------------------------------------------------------   @64A\n 00000000                00000000 00000020  65892+SMF2A0JB DSECT ,                    Entry Mapping                  @64A 03-IGWSMF\n                                            65893+*                                                                  @64A\n 00000000                                   65894+SMF2AJOF DS    1FL4                 Average                        @64A 03-IGWSMF\n                                            65895+*                                   Low value of the number of     @64A\n                                            65896+*                                   BMF buffers for this pool      @64A\n                                            65897+*                                   during this interval.          @64A\n                                            65898+*                                   (sysplex totals)               @64A\n                                            65899+*                                                                  @64A\n 00000004                                   65900+SMF2AJOG DS    1FL4                 Average                        @64A 03-IGWSMF\n                                            65901+*                                   High value of the number of    @64A\n                                            65902+*                                   BMF buffers for this pool      @64A\n                                            65903+*                                   during this interval.          @64A\n                                            65904+*                                   (sysplex totals)               @64A\n                                            65905+*                                                                  @64A\n 00000008                                   65906+SMF2AJOH DS    1FL4                 Average current                @64A 03-IGWSMF\n                                            65907+*                                   value of the number of         @64A\n                                            65908+*                                   BMF buffers for this pool      @64A\n                                            65909+*                                   during this interval.          @64A\n                                            65910+*                                   (sysplex totals)               @64A\n                                            65911+*                                                                  @64A\n 0000000C                                   65912+SMF2AJOI DS    1FL4                 Reserved                       @64A 03-IGWSMF\n                                            65913+*                                                                  @64A\n 00000010                                   65914+SMF2AJOJ DS    1FL4                 Average                        @64A 03-IGWSMF\n                                            65915+*                                   Low value of the number of     @64A\n                                            65916+*                                   extents for this pool          @64A\n                                            65917+*                                   during this interval.          @64A\n                                            65918+*                                   (sysplex totals)               @64A\n                                            65919+*                                                                  @64A\n 00000014                                   65920+SMF2AJOK DS    1FL4                 Average                        @64A 03-IGWSMF\n                                            65921+*                                   High value of the number of    @64A\n                                            65922+*                                   extents for this pool          @64A\n                                            65923+*                                   during this interval.          @64A\n                                            65924+*                                   (sysplex totals)               @64A\n                                            65925+*                                                                  @64A\n 00000018                                   65926+SMF2AJOL DS    1FL4                 Average current                @64A 03-IGWSMF\n                                            65927+*                                   value of the number of         @64A\n                                            65928+*                                   extents for this pool          @64A\n                                            65929+*                                   during this interval.          @64A\n                                            65930+*                                   (sysplex totals)               @64A\n                                            65931+*                                                                  @64A\n 0000001C                                   65932+SMF2AJOM DS    1FL4                 Reserved                       @64A 03-IGWSMF\n                                            65933+*                                                                  @64A\n                         00000020           65934+SMF2A0JB_LEN EQU *-SMF2A0JB         Length of single entry         @64A 03-IGWSMF\n                                            65935+*                                                                  @64A\n                                            65936+* --------------------------------------------------------------   @64A\n                                            65937+* End    --- Buffer Pool Count Array Element -  AVERAGE            @64A\n                                            65938+* --------------------------------------------------------------   @64A\n                                            65939+*                                                                  @64A\n                                            65940+* --------------------------------------------------------------   @64A\n                                            65941+* Start  --- Buffer Pool Count Array Element - Sysplex Totals      @64A\n                                            65942+* --------------------------------------------------------------   @64A\n 00000000                00000000 00000020  65943+SMF2A0JC DSECT ,                    Entry Mapping                  @64A 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  280\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           65944+*                                   Sysplex Wide Totals            @64A\n                                            65945+*                                                                  @64A\n 00000000                                   65946+SMF2AJRJ DS    1FL4                 Low value of the number of     @64A 03-IGWSMF\n                                            65947+*                                   BMF buffers for this pool      @64A\n                                            65948+*                                   during this interval.          @64A\n                                            65949+*                                   (sysplex totals)               @64A\n                                            65950+*                                                                  @64A\n 00000004                                   65951+SMF2AJRK DS    1FL4                 High value of the number of    @64A 03-IGWSMF\n                                            65952+*                                   BMF buffers for this pool      @64A\n                                            65953+*                                   during this interval.          @64A\n                                            65954+*                                   (sysplex totals)               @64A\n                                            65955+*                                                                  @64A\n 00000008                                   65956+SMF2AJRL DS    1FL4                 Current value of the number of @64A 03-IGWSMF\n                                            65957+*                                   BMF buffers for this pool      @64A\n                                            65958+*                                   during this interval.          @64A\n                                            65959+*                                   (sysplex totals)               @64A\n                                            65960+*                                                                  @64A\n 0000000C                                   65961+SMF2AJRM DS    1FL4                 Reserved                       @64A 03-IGWSMF\n                                            65962+*                                                                  @64A\n 00000010                                   65963+SMF2AJRN DS    1FL4                 Low value of the number of     @64A 03-IGWSMF\n                                            65964+*                                   extents for this pool          @64A\n                                            65965+*                                   during this interval.          @64A\n                                            65966+*                                   (sysplex totals)               @64A\n                                            65967+*                                                                  @64A\n 00000014                                   65968+SMF2AJRO DS    1FL4                 High value of the number of    @64A 03-IGWSMF\n                                            65969+*                                   extents for this pool          @64A\n                                            65970+*                                   during this interval.          @64A\n                                            65971+*                                   (sysplex totals)               @64A\n                                            65972+*                                                                  @64A\n 00000018                                   65973+SMF2AJRP DS    1FL4                 Current value of the number of @64A 03-IGWSMF\n                                            65974+*                                   extents for this pool          @64A\n                                            65975+*                                   during this interval.          @64A\n                                            65976+*                                   (sysplex totals)               @64A\n                                            65977+*                                                                  @64A\n 0000001C                                   65978+SMF2AJRQ DS    1FL4                 Reserved                       @64A 03-IGWSMF\n                                            65979+*                                                                  @64A\n                                            65980+* --------------------------------------------------------------   @64A\n                                            65981+* End    --- Buffer Pool Count Array Element - sysplex totals      @64A\n                                            65982+* --------------------------------------------------------------   @64A\n                                            65983+*                                                                  @64A\n                                            65984+* --------------------------------------------------------------   @64A\n                                            65985+* Start --  Buffer Manager Calculated Distribution Array - Avg.    @64A\n                                            65986+* --------------------------------------------------------------   @64A\n 00000000                00000000 00000004  65987+SMF2A0JD DSECT ,                                                   @64A 03-IGWSMF\n                                            65988+*                                                                  @64A\n 00000000                                   65989+SMF2AJRF DS    1FL4                 Average                        @64A 03-IGWSMF\n                                            65990+*                                   Number of times calculated     @64A\n                                            65991+*                                   value was within this range    @64A\n                                            65992+*                                   (across the sysplex)           @64A\n                                            65993+*                                                                  @64A\n                                            65994+*                                                                  @64A\n                                            65995+* --------------------------------------------------------------   @64A\n                                            65996+* End   --  Buffer Manager Calculated Distribution Array - Avg.    @64A\n                                            65997+* --------------------------------------------------------------   @64A\n                                            65998+*                                                                  @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  281\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           65999+* --------------------------------------------------------------   @64A\n                                            66000+* Start --  Buffer Manager Calculated Distribution Array - Total   @64A\n                                            66001+* --------------------------------------------------------------   @64A\n 00000000                00000000 00000004  66002+SMF2A0JE DSECT ,                                                   @64A 03-IGWSMF\n                                            66003+*                                                                  @64A\n 00000000                                   66004+SMF2AJRH DS    1FL4                 Total                          @64A 03-IGWSMF\n                                            66005+*                                   Number of times calculated     @64A\n                                            66006+*                                   value was within this range    @64A\n                                            66007+*                                   (across the sysplex)           @64A\n                                            66008+*                                                                  @64A\n                                            66009+* --------------------------------------------------------------   @64A\n                                            66010+* End   --  Buffer Manager Calculated Distribution Array - Total   @64A\n                                            66011+* --------------------------------------------------------------   @64A\n                                            66012+*  asdf  smf2ajta to smf2ajub moved from here\n                                            66013+*                                                                  @64A\n                                            66014+* --------------------------------------------------------------   @64A\n                                            66015+* Start  --- Buffer Pool Count Array Element - Single System       @64A\n                                            66016+* --------------------------------------------------------------   @64A\n                                            66017+*                                                                  @64A\n 00000000                00000000 00000020  66018+SMF2A0JF DSECT ,                    Entry Mapping                  @64A 03-IGWSMF\n                                            66019+*                                   Single System                  @64A\n                                            66020+*                                                                  @64A\n 00000000                                   66021+SMF2AJPZ DS    1FL4                 Low Value of the Number of     @64A 03-IGWSMF\n                                            66022+*                                   BMF Buffers for This Pool      @64A\n                                            66023+*                                   During This Interval.          @64A\n                                            66024+*                                                                  @64A\n 00000004                                   66025+SMF2AJQA DS    1FL4                 High Value of the Number of    @64A 03-IGWSMF\n                                            66026+*                                   BMF Buffers for This Pool      @64A\n                                            66027+*                                   During this Interval.          @64A\n                                            66028+*                                                                  @64A\n 00000008                                   66029+SMF2AJQB DS    1FL4                 Current Value of the Number of @64A 03-IGWSMF\n                                            66030+*                                   BMF Buffers for This Pool      @64A\n                                            66031+*                                   During This Interval.          @64A\n                                            66032+*                                                                  @64A\n 0000000C                                   66033+SMF2AJQ6 DS    1FL4                 Reserved                       @64A 03-IGWSMF\n                                            66034+*                                                                  @64A\n 00000010                                   66035+SMF2AJQC DS    1FL4                 Low Value of the Number of     @64A 03-IGWSMF\n                                            66036+*                                   Extents for This Pool          @64A\n                                            66037+*                                   During This Interval.          @64A\n                                            66038+*                                                                  @64A\n 00000014                                   66039+SMF2AJQD DS    1FL4                 High Value of the Number of    @64A 03-IGWSMF\n                                            66040+*                                   Extents for This Pool          @64A\n                                            66041+*                                   During This Interval.          @64A\n                                            66042+*                                                                  @64A\n 00000018                                   66043+SMF2AJQF DS    1FL4                 Current Value of the Number of @64A 03-IGWSMF\n                                            66044+*                                   Extents for This Pool          @64A\n                                            66045+*                                   During This Interval.          @64A\n                                            66046+*                                                                  @64A\n 0000001C                                   66047+SMF2AJQ7 DS    1FL4                 Reserved                       @64A 03-IGWSMF\n                                            66048+*                                                                  @64A\n                                            66049+* --------------------------------------------------------------   @64A\n                                            66050+* End    --- Buffer Pool Count Array Element - Single System       @64A\n                                            66051+* --------------------------------------------------------------   @64A\n                                            66052+*                                                                  @64A\n                                            66053+* --------------------------------------------------------------   @64A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  282\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           66054+* Start --  Buffer Manager Calculated Distribution Array           @64A\n                                            66055+* --------------------------------------------------------------   @64A\n 00000000                00000000 00000004  66056+SMF2A0JG DSECT ,                                                   @64A 03-IGWSMF\n                                            66057+*                                   SINGLE SYSTEM                  @64A\n                                            66058+*                                                                  @64A\n 00000000                                   66059+SMF2AJQP DS    1FL4                 Number of Times Calculated     @64A 03-IGWSMF\n                                            66060+*                                   Value was Within This Range    @64A\n                                            66061+*                                   (Across the Sysplex)           @64A\n                                            66062+*                                                                  @64A\n                                            66063+* --------------------------------------------------------------   @64A\n                                            66064+* End   --  Buffer Manager Calculated Distribution Array           @64A\n                                            66065+* --------------------------------------------------------------   @64A\n                                            66066+*                                                                  @64A\n                                            66067+* asdf  smf2ajsa to smf2ajsp  moved from here\n                                            66068+*                                                                  @64A\n                                            66069+*\n                                            66070+*\n                                            66071+* -------------------------------------------------------------- @L2A\n                                            66072+*    STOW Initialize (SMF 42 subtype 20)                         @L2A\n                                            66073+*    job and data set information                                @L2A\n                                            66074+* -------------------------------------------------------------- @L2A\n                                            66075+*\n 00000000                00000000 0000004A  66076+SMF420KA DSECT ,                                                 @L2A   03-IGWSMF\n 00000000                                   66077+SMF42KJB DS    CL8                  Job name, started task       @L2A   03-IGWSMF\n                                            66078+*                                    control, or time sharing    @L2A\n                                            66079+*                                    user who issued the STOW    @L2A\n                                            66080+*                                    Initialize.                 @L2A\n 00000008                                   66081+SMF42KST DS    CL8                  Step name                    @L2A   03-IGWSMF\n 00000010                                   66082+SMF42KPR DS    CL8                  Proc name or blanks          @L2A   03-IGWSMF\n 00000018                                   66083+SMF42KDS DS    CL44                 Data set name                @L2A   03-IGWSMF\n 00000044                                   66084+SMF42KVS DS    CL6                  VOLSER                       @L2A   03-IGWSMF\n 00000000                00000000 00000050  66085+SMF420KB DSECT ,                    Additional Information       @26A   03-IGWSMF\n                                            66086+*    section B                                                   @26A\n                                            66087+*    This section follows immediately after SMF420KA section.    @26A\n                                            66088+*    This section will only be generated on systems where apar   @26A\n                                            66089+*    apar OA25068 is installed.                                  @26A\n 00000000                                   66090+SMF42KUI DS    CL80                userid token of the caller of @26A   03-IGWSMF\n                                            66091+*                                  STOW -- mapped by ICHRUTKN    @26A\n                                            66092+* -------------------------------------------------------------- @L2A\n                                            66093+*    Member Delete   (SMF 42 subtype 21)                         @L2A\n                                            66094+*    first tripple - job and data set information                @L2A\n                                            66095+* -------------------------------------------------------------- @L2A\n 00000000                00000000 0000008F  66096+SMF420LA DSECT ,                                                 @L2A   03-IGWSMF\n 00000000                                   66097+SMF42LJB DS    CL8                  Job name, started task       @L2A   03-IGWSMF\n                                            66098+*                                    control, or time sharing    @L2A\n                                            66099+*                                    user who issued the STOW    @L2A\n                                            66100+*                                    or DESERV Delete to delete  @L2A\n                                            66101+*                                    a PDS or PDSE member        @L2A\n 00000008                                   66102+SMF42LST DS    CL8                  Step name                    @L2A   03-IGWSMF\n 00000010                                   66103+SMF42LPR DS    CL8                  Proc name or blanks          @L2A   03-IGWSMF\n 00000018                                   66104+SMF42LDS DS    CL44                 Data set name                @L2A   03-IGWSMF\n 00000044                                   66105+SMF42LVS DS    CL6                  VOLSER                       @L2A   03-IGWSMF\n 0000004A                                   66106+SMF42LNL DS    H                    Length of the member name    @L2A   03-IGWSMF\n                                            66107+*                                    which was deleted (SMF42LMN)@L2A\n 0000004C                                   66108+SMF42LFL DS    1BL1                 Flags                        @L2A   03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  283\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000080           66109+SMF42LXA EQU   X'80'                Some aliases were excluded from     03-IGWSMF\n                                            66110+*                                    record because the record len\n                                            66111+*                                    would exceed the SMF max    @L2A\n 0000004D                                   66112+         DS    1CL3                 Reserved                     @L2A   03-IGWSMF\n 00000050                                   66113+SMF42LMN DS    CL63                 Member name that was         @L2A   03-IGWSMF\n                                            66114+*                                    deleted. Maximum length is  @L2A\n                                            66115+*                                    63. Actual length used is   @L2A\n                                            66116+*                                    determined by SMF42LNL.     @L2A\n                                            66117+* -------------------------------------------------------------- @L2A\n                                            66118+*    section B                                                   @26A\n                                            66119+*    Member Delete   (SMF 42 subtype 21)                         @L2A\n                                            66120+*    second triplet - alias names deleted in sympathy            @L2A\n                                            66121+* -------------------------------------------------------------- @L2A\n 00000000                00000000 00000002  66122+SMF420LB DSECT ,                                                 @L2A   03-IGWSMF\n 00000000                                   66123+SMF42LNA DS    H                    Number of (PDSE member)      @L2A   03-IGWSMF\n                                            66124+*                                    alias names which were also @L2A\n                                            66125+*                                    deleted because SMF42LMN is @L2A\n                                            66126+*                                    a primary name              @L2A\n 00000002                                   66127+SMF42LAA DS    0C                   alias name list array.       @L2A   03-IGWSMF\n                                            66128+*                                    contains SMF42LNA number of @L2A\n                                            66129+*                                    entries, each mapped by     @L2A\n                                            66130+*                                    SMF42LA0 dsect.             @L2A\n 00000000                00000000 00000041  66131+SMF42LA0 DSECT ,                    Alias name section           @L2A   03-IGWSMF\n 00000000                                   66132+SMF42LAL DS    H                    Length of the alias name that@L2A   03-IGWSMF\n                                            66133+*                                    SMF42LAN that was deleted   @L2A\n                                            66134+*                                    in sympathy                 @L2A\n 00000002                                   66135+SMF42LAN DS    CL63                 Alias name that was deleted  @L2A   03-IGWSMF\n                                            66136+*                                    in sympathy. Maximum length @L2A\n                                            66137+*                                    is 63, but the length used  @L2A\n                                            66138+*                                    is determined by SMF42LAL.  @L2A\n 00000000                00000000 00000050  66139+SMF420LC DSECT ,                    Additional Information       @26A   03-IGWSMF\n                                            66140+*    section C                                                   @26A\n                                            66141+*    this section follows immediately after SMF420LBs\n                                            66142+*    array of member names deleted in sympathy.\n                                            66143+*    If no member names deleted in sympathy then this\n                                            66144+*    section is located immediately after SMF420LA.  This section will\n                                            66145+*    only be generated on systems where apar OA25068 is installed.\n                                            66146+*    This section will always be generated even if it means not\n                                            66147+*    reporting on some of the aliases deleted in sympathy.       @26A\n 00000000                                   66148+SMF42LUI DS    CL80                 userid token of the caller of STOW  03-IGWSMF\n                                            66149+*                                   or DESERV --mapped by ICHRUTKN @26A\n                                            66150+* ---------------------------------------------------------------- @MZA\n                                            66151+*    DFSMSrmm Audit Information (SMF 42 subtype 22)                @MZA\n                                            66152+*    first triplet - audit section                                 @MZA\n                                            66153+* ---------------------------------------------------------------- @MZA\n 00000000                00000000 0000004C  66154+SMF420MA DSECT ,                                                   @MZA 03-IGWSMF\n 00000000                                   66155+SMF42MJBN      DS    1CL8           Job name                       @MZA 03-IGWSMF\n 00000008                                   66156+SMF42MRST      DS    1CL4           Reader start time              @MZA 03-IGWSMF\n 0000000C                                   66157+SMF42MRSD      DS    1CL4           Reader start date              @MZA 03-IGWSMF\n 00000010                                   66158+SMF42MUID      DS    1CL8           RACF user id                   @MZA 03-IGWSMF\n 00000018                                   66159+SMF42MACT      DS    1CL1           Activity type:                 @MZA 03-IGWSMF\n                                            66160+*                                   A - Record added               @MZA\n                                            66161+*                                   C - Record changed             @MZA\n                                            66162+*                                   D - Record deleted             @MZA\n 00000019                                   66163+SMF42MFG1      DS    1XL1           Flag 1                         @MZA 03-IGWSMF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  284\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000080           66164+SMF42MLIS      EQU   X'80'          Last in set                    @MZA 03-IGWSMF\n                         00000040           66165+SMF42MJRN      EQU   X'40'          Journal record available       @MZA 03-IGWSMF\n 0000001A                                   66166+SMF42MCVTSFLG  DS    1XL1           Virtual tape server flag       @MZA 03-IGWSMF\n 0000001B                                   66167+SMF42MCENABLE  DS    1XL1           Control record enable flag     @MZA 03-IGWSMF\n 0000001C                                   66168+SMF42MLDTO     DS    1DL8           Local time/date offset         @MZA 03-IGWSMF\n 00000024                                   66169+SMF42MCJNRECN  DS    1FL4           Journal record number          @MZA 03-IGWSMF\n 00000028                                   66170+SMF42MJNRECNUM DS    1FL4           Number of next jn rec written  @MZA 03-IGWSMF\n 0000002C                                   66171+SMF42MCUPDVSI  DS    1FL4           VSI when MCUPDACT set on       @MZA 03-IGWSMF\n 00000030                                   66172+SMF42MCVSICNT  DS    1FL4           VSI control count              @MZA 03-IGWSMF\n 00000034                                   66173+SMF42MCVRLCTK  DS    1CL8           VRSEL last change token        @MZA 03-IGWSMF\n 0000003C                                   66174+SMF42MCVRSCNT  DS    1FL4           Current VRS change counter     @MZA 03-IGWSMF\n 00000040                                   66175+SMF42MCVRSRUN  DS    1FL4           Last HSKP VRS change counter   @MZA 03-IGWSMF\n 00000044                                   66176+SMF42MCSYNCTS  DS    0CL8           Catsynch time stamp            @MZA 03-IGWSMF\n 00000044                                   66177+SMF42MCSYNCDT  DS    1FL4           Catsynch date                  @MZA 03-IGWSMF\n 00000048                                   66178+SMF42MCSYNCTM  DS    1FL4           Catsynch time                  @MZA 03-IGWSMF\n 0000004C                                   66179+SMF42MEND      DS    0F             1st data section end           @MZA 03-IGWSMF\n                         0000004C           66180+SMF420MA_LEN   EQU *-SMF420MA       Length of single entry         @MZA 03-IGWSMF\n                                            66181+* ---------------------------------------------------------------- @MZA\n                                            66182+*    DFSMSrmm Security Information (SMF 42 subtype 23)             @MZA\n                                            66183+*    first triplet - Security section                              @MZA\n                                            66184+* ---------------------------------------------------------------- @MZA\n 00000000                00000000 00000072  66185+SMF420NA DSECT ,                                                   @MZA 03-IGWSMF\n 00000000                                   66186+SMF42NJBN    DS    1CL8             Job name                       @MZA 03-IGWSMF\n 00000008                                   66187+SMF42NRST    DS    1CL4             Reader start time              @MZA 03-IGWSMF\n 0000000C                                   66188+SMF42NRSD    DS    1CL4             Reader start date              @MZA 03-IGWSMF\n 00000010                                   66189+SMF42NUIF    DS    1CL8             User identification            @MZA 03-IGWSMF\n 00000018                                   66190+SMF42NUID    DS    1CL8             RACF user id                   @MZA 03-IGWSMF\n 00000020                                   66191+SMF42NCGP    DS    1CL8             RACF connect group             @MZA 03-IGWSMF\n 00000028                                   66192+SMF42NVER    DS    1CL1             Record version identifier (2)  @MZA 03-IGWSMF\n 00000029                                   66193+SMF42NACT    DS    1CL1             Activity type:                 @MZA 03-IGWSMF\n                                            66194+*                                   C - Dataset create             @MZA\n                                            66195+*                                   E - Dataset extend             @MZA\n                                            66196+*                                   U - Dataset update             @MZA\n                                            66197+*                                   R - Dataset read access        @MZA\n                                            66198+*                                   D - Dataset delete             @MZA\n 0000002A                                   66199+SMF42NSTP    DS    1XL1             Security type                  @MZA 03-IGWSMF\n                                            66200+*                                      (classification number)     @MZA\n 0000002B                                   66201+             DS    1XL1             Reserved                       @MZA 03-IGWSMF\n 0000002C                                   66202+SMF42NDSN    DS    1CL44            Dataset name                   @MZA 03-IGWSMF\n 00000058                                   66203+SMF42NVOL    DS    1CL6             Volume serial number           @MZA 03-IGWSMF\n 0000005E                                   66204+SMF42NUNT    DS    1CL8             Device type                    @MZA 03-IGWSMF\n 00000066                                   66205+SMF42NDSQ    DS    1HL2             Dataset sequence number        @MZA 03-IGWSMF\n 00000068                                   66206+SMF42NVSQ    DS    1XL2             Volume sequence number         @MZA 03-IGWSMF\n 0000006A                                   66207+SMF42NLDTO   DS    1DL8             Local time/date offset         @MZA 03-IGWSMF\n 00000072                                   66208+SMF42NEND    DS    0C               1st data section end           @MZA 03-IGWSMF\n                         00000072           66209+SMF420NA_LEN EQU *-SMF420NA         Length of single entry         @MZA 03-IGWSMF\n                                            66210+*------------------------------------------------------------      @26A\n                                            66211+* Member Add or Replace (SMF 42 subtype 24)                        @26A\n                                            66212+* job and data set information                                     @26A\n                                            66213+*------------------------------------------------------------      @26A\n 00000000                00000000 0000008F  66214+SMF421PA DSECT ,                                                   @26A 03-IGWSMF\n 00000000                                   66215+SMF42PJB     DS    CL8              Job name, started task control, or  03-IGWSMF\n                                            66216+*                                    time sharing user who issued\n                                            66217+*                                    the STOW (add or replace) or\n                                            66218+*                                    DESERV PUT                    @26A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  285\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000008                                   66219+SMF42PST     DS    CL8              Step name                      @26A 03-IGWSMF\n 00000010                                   66220+SMF42PPR     DS    CL8              Proc name or blanks            @26A 03-IGWSMF\n 00000018                                   66221+SMF42PDS     DS    CL44             Data set name                  @26A 03-IGWSMF\n 00000044                                   66222+SMF42PVS     DS    CL6              VOLSER                         @26A 03-IGWSMF\n 0000004A                                   66223+SMF42PML     DS    H                Length of the member name which was 03-IGWSMF\n                                            66224+*                                   added or replaced (SMF42PMN)   @26A\n 0000004C                                   66225+SMF42PF1     DS    CL1              Flags                          @26A 03-IGWSMF\n                         00000080           66226+SMF42PXA     EQU   X'80'            Some aliases were excluded from     03-IGWSMF\n                                            66227+*                                    the record because the record len\n                                            66228+*                                    would have exceed the SMF max\n                                            66229+*                                    record length                 @26A\n                         00000040           66230+SMF42PAD     EQU   X'40'            on - member was added new      @26A 03-IGWSMF\n                                            66231+*                                   off - member replaced a prior  @26A\n                                            66232+*                                         version of the same name @26A\n 0000004D                                   66233+             DS    1CL3             Reserved                       @26A 03-IGWSMF\n 00000050                                   66234+SMF42PMN     DS    CL63             Member name that was added or       03-IGWSMF\n                                            66235+*                                    replaced                      @26A\n 00000000                00000000 00000002  66236+SMF420PB DSECT ,                                                   @26A 03-IGWSMF\n                                            66237+*------------------------------------------------------------      @26A\n                                            66238+* section B                                                        @26A\n                                            66239+* Member Add or Replace (SMF 42 subtype 24)                        @26A\n                                            66240+* alias names deleted in sympathy                                  @26A\n                                            66241+*------------------------------------------------------------      @26A\n 00000000                                   66242+SMF42P#A     DS    H                Number of alias names that were     03-IGWSMF\n                                            66243+*                                   deleted because SMF42PMN is\n                                            66244+*                                   a PDSE primary member name.    @26A\n 00000002                                   66245+SMF42PAA     DS    0C               Alias name array. contains SMF42P#A 03-IGWSMF\n                                            66246+*                                    number of entries, each mapped by\n                                            66247+*                                    SMF42PA0 structure.           @26A\n 00000000                00000000 00000041  66248+SMF42PA0 DSECT ,                    Alias name section             @26A 03-IGWSMF\n 00000000                                   66249+SMF42PAL     DS    H                Length of the alias name which was  03-IGWSMF\n                                            66250+*                                    deleted in sympathy.          @26A\n 00000002                                   66251+SMF42PAN DS    CL63                 Alias name that was deleted         03-IGWSMF\n                                            66252+*                                    in sympathy.  Maximum length\n                                            66253+*                                    is 63, but the length used is\n                                            66254+*                                    indicated by SMF42PAL        !@26A\n 00000000                00000000 00000050  66255+SMF420PC DSECT ,                    Additional Information         @26A 03-IGWSMF\n                                            66256+*    section C                                                     @26A\n                                            66257+*    this section follows immediately after SMF420PBs\n                                            66258+*    array of member names deleted in sympathy.\n                                            66259+*    If no member names deleted in sympathy then this\n                                            66260+*    section is located immediately after SMF421PA.  This section will\n                                            66261+*    only be generated on systems where apar OA25068 is installed.\n                                            66262+*    This section will always be generated even if it means not\n                                            66263+*    reporting on some of the aliases deleted in sympathy.         @26A\n 00000000                                   66264+SMF42PUI DS    CL80                 USERID token of caller of STOW or   03-IGWSMF\n                                            66265+*                                    DESERV -- mapped by ICHRUTKN. @26A\n                                            66266+*------------------------------------------------------------      @26A\n                                            66267+* Member Rename (SMF 42 subtype 25)                                @26A\n                                            66268+* job and data set information                                     @26A\n                                            66269+*------------------------------------------------------------      @26A\n 00000000                00000000 0000008B  66270+SMF420QA DSECT ,                                                   @26A 03-IGWSMF\n 00000000                                   66271+SMF42QJB     DS    CL8              Job name, started task control, or  03-IGWSMF\n                                            66272+*                                   time sharing user who issued the\n                                            66273+*                                   STOW change or DESERV rename   @26A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  286\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000008                                   66274+SMF42QST     DS    CL8              Step name                      @26A 03-IGWSMF\n 00000010                                   66275+SMF42QPR     DS    CL8              Proc name or blanks            @26A 03-IGWSMF\n 00000018                                   66276+SMF42QDS     DS    CL44             Data set name                  @26A 03-IGWSMF\n 00000044                                   66277+SMF42QVS     DS    CL6              VOLSER                         @26A 03-IGWSMF\n 0000004A                                   66278+SMF42QML     DS    H                Length of the member name after the 03-IGWSMF\n                                            66279+*                                    the rename         (SMF42QMN) @26A\n 0000004C                                   66280+SMF42QMN     DS    CL63             Member name after rename            03-IGWSMF\n                                            66281+*                                    (new name)                    @26A\n 00000000                00000000 00000041  66282+SMF420QB DSECT ,                                                   @26A 03-IGWSMF\n                                            66283+*------------------------------------------------------------      @26A\n                                            66284+* Section B -- Member Rename (SMF 42 subtype 25)                   @26A\n                                            66285+* Original member name section                                     @26A\n                                            66286+* this section follows immediately after SMF420QA                  @26A\n                                            66287+*------------------------------------------------------------      @26A\n 00000000                                   66288+SMF42QOL     DS    H                Length of the member name before    03-IGWSMF\n                                            66289+*                                    the rename         (SMF42QON) @26A\n 00000002                                   66290+SMF42QON     DS    CL63             Member name before rename      @26A 03-IGWSMF\n                                            66291+*                                    (original name)               @26A\n 00000000                00000000 00000050  66292+SMF420QC DSECT ,                                                   @26A 03-IGWSMF\n                                            66293+*------------------------------------------------------------      @26A\n                                            66294+* Section C -- Member Rename (SMF 42 subtype 25)                   @26A\n                                            66295+* Additional information section                                   @26A\n                                            66296+* this section follows immediately after SMF420QB.                 @26A\n                                            66297+*------------------------------------------------------------      @26A\n 00000000                00000000 00000050  66298+SMF420QC DSECT ,                    Additional Information         @26A 03-IGWSMF\n 00000000                                   66299+SMF42QUI DS    CL80                 USERID token of caller of STOW or   03-IGWSMF\n                                            66300+*                                    DESERV -- mapped by ICHRUTKN  @26A\n                                            66301+*        IFASMFR 04\n 00000000                00000000 000000D7  66302+SMF4     DSECT                                                          02-$$GLOBAL\n                                            66304+*%IFABGN1: ;\n                                            66305+* /*                                                                 */\n                                            66306+* /* METHOD OF ACCESS                                                */\n                                            66307+* /*  PL/S - USER DEFINES MACRO VARIABLE IFARXX WHERE XX=RECORD NUM  */\n                                            66308+* /*         DECLARE SMFXXPTR PTR(31) OR RESPECIFY FOR BASE          */\n                                            66309+* /*         INCLUDE MACRO FROM LIBRARY                              */\n                                            66310+* /*          EXAMPLE %IFAR08 = 'YES',           NOTE. THE COMMA REP-*/\n                                            66311+* /*                  DCL SMF08PTR PTR(31),      RESENTS A SEMI-COLON*/\n                                            66312+* /*                  %INCLUDE SYSLIB(IFASMFR),  BUT ISN'T TO AVIOD  */\n                                            66313+* /*                                             A DIAGNOSTIC.       */\n                                            66314+* /*                                                                 */\n                                            66315+* /*                                                                 */\n                                            66316+* /*         THIS MACRO PROCESSES RECORDS IN THE RANGE 00-06. IT     */\n                                            66317+* /*         ACTS AS A ROUTER TO OTHER MACROS TO PROCESS OTHER       */\n                                            66318+* /*         RECORDS AS FOLLOWS:                                     */\n                                            66319+* /*                                                                 */\n                                            66320+* /*             MACRO        RECORDS                                */\n                                            66321+* /*            ********      *******                                */\n                                            66322+* /*            IFASMFR1      07-19                                  */\n                                            66323+* /*            IFASMFR2      20-27                                  */\n                                            66324+* /*            IFASMFR3      28-36                                  */\n                                            66325+* /*            IFASMFR4      37-46                                  */\n                                            66326+* /*            IFASMFR5      47-54                                  */\n                                            66327+* /*            IFASMFR6      55-69                                  */\n                                            66328+* /*            IFASMFR9      80-84                              @07C*/\n                                            66329+* /*            IFASMFRA      85-103                             @07C*/\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  287\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           66330+* /*            IFASMFRB      104-113                                */\n                                            66331+* /*            IFASMFRC      114-123                                */\n                                            66332+* /*            IFASMFRD      124-127                                */\n                                            66333+*%GOTO IFABGN2;   /*\n                                            66334+*  THIS IS AN SMF MACRO WHICH CONTROLS THE BUILDING OF SMF RECORDS. THE\n                                            66335+*  REQUIRED FORMAT IS\n                                            66336+*\n                                            66337+*        IFASMFR  &RECTYPE\n                                            66338+*\n                                            66339+*  NOTE: VALUES FOR &RECTYPE MUST BE ENCLOSED IN PARENS(UNLESS ONLY 1).\n                                            66340+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  288\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           66342+* THIS RECORD IS WRITTEN AT NORMAL OR ABNORMAL TERMINATION OF A STEP.\n                                            66343+* RECORD LENGTH IS VARIABLE. MINIMUM OF 137.\n                                            66344+*\n 00000000                                   66345+         DS    0F        ALIGN TO FULL WORD BOUNDARY                    03-IFASMFR\n                         00000000           66346+SMFRCD4  EQU   *         HEADER SEGMENT                                 03-IFASMFR\n 00000000                                   66347+SMF4LEN  DS    BL2'0'    RECORD LENGTH                                  03-IFASMFR\n 00000002                                   66348+SMF4SEG  DS    BL2'0'    SEGMENT DESCRIPTOR                             03-IFASMFR\n 00000004 00                                66349+SMF4FLG  DC    BL1'0'    HEADER FLAG BYTE                               03-IFASMFR\n 00000005 00                                66350+SMF4RTY  DC    BL1'0'    RECORD TYPE 4                                  03-IFASMFR\n 00000006 00000000                          66351+SMF4TME  DC    BL4'0'    TOD USING FORMAT FROM TIME MACRO W/BIN. INTVL. 03-IFASMFR\n 0000000A 0000000C                          66352+SMF4DTE  DC    PL4'0000' DATE IN PACKED DECIMAL FORM: OOYYDDDF          03-IFASMFR\n 0000000E 40404040                          66353+SMF4SID  DC    CL4' '    SYSTEM IDENTIFICATION                   Y02901 03-IFASMFR\n 00000012 4040404040404040                  66354+SMF4JBN  DC    CL8' '    JOB NAME                                       03-IFASMFR\n 0000001A 00000000                          66355+SMF4RST  DC    BL4'0'    READER START TIME (IN 100THS SECONDS)          03-IFASMFR\n 0000001E 0000000C                          66356+SMF4RSD  DC    PL4'0000' READER START DATE                              03-IFASMFR\n 00000022 4040404040404040                  66357+SMF4UIF  DC    CL8' '    USER IDENTIFICATION FIELD                      03-IFASMFR\n 0000002A 00                                66358+SMF4STN  DC    BL1'0'    STEP NUMBER                                    03-IFASMFR\n 0000002B 00000000                          66359+SMF4SIT  DC    BL4'0'    STEP INITIATION TIME (IN 100THS SECONDS)       03-IFASMFR\n 0000002F 0000000C                          66360+SMF4STID DC    PL4'0000' STEP INITIATION DATE (PACKED DECIMAL FORMAT)   03-IFASMFR\n 00000033 00000000                          66361+SMF4NCI  DC    BL4'0'    NUMBER OF CARD IMAGES IN DD DATA OR DD *       03-IFASMFR\n                                            66362+*                        DATA SETS\n 00000037 0000                              66363+SMF4SCC  DC    BL2'0'    STEP COMPLETION CODE                  @G50FPRL 03-IFASMFR\n 00000039 00                                66364+SMF4PRTY DC    BL1'0'    PRIORITY AT WHICH STEP WAS DISPATCHED :        03-IFASMFR\n                                            66365+*                        ACTUAL PRIORITY=251-(15-USER PRIORITY)*16\n 0000003A 4040404040404040                  66366+SMF4PGMN DC    CL8' '    PROGRAM NAME                                   03-IFASMFR\n 00000042 4040404040404040                  66367+SMF4STMN DC    CL8' '    STEP NAME                                      03-IFASMFR\n 0000004A 0000                              66368+SMF4RSV5 DC    BL2'0'    RESERVED                                  @PVC 03-IFASMFR\n 0000004C 0000                              66369+SMF4SYST DC    BL2'0'    SYSTEM AREA USED(TOP OF PROVATE AREA)   Y02901 03-IFASMFR\n 0000004E 0000                              66370+SMF4H0ST DC    BL2'0'    STORAGE USED(VIRT OR REAL-SEE SMF4RIN)         03-IFASMFR\n                         0000004E           66371+SMF4STU  EQU   SMF4H0ST  (LOW OF PRIVATE AREA)                   Y02901 03-IFASMFR\n 00000050 0000                              66372+SMF4RV1  DC    BL2'0'    RESERVED                                  @PVC 03-IFASMFR\n 00000052 00000000                          66373+SMF4RSH0 DC    BL4'0'    REGION SIZE REQ(PRIVATE AREA 1K UNIT)     @PVM 03-IFASMFR\n                         00000052           66374+SMF4PRV  EQU   SMF4RSH0                                            @PVM 03-IFASMFR\n 00000056 00                                66375+SMF4SPK  DC    1BL1'0'   STORAGE PROTECT KEY                     A40791 03-IFASMFR\n 00000057 00                                66376+SMF4STI  DC    1BL1'0'   STEP TERMINATION INDICATOR                     03-IFASMFR\n                                            66377+*                        BIT0 - RESERVED\n                                            66378+*                        BIT1 - CANCELLED AT EXIT IEFUJV\n                                            66379+*                        BIT2 - CANCELLED AT EXIT IEFUJI\n                                            66380+*                        BIT3 - CANCELLED AT EXIT IEFUSI\n                                            66381+*                        BIT4 - CANCELLED AT EXIT IEFACTRT\n                                            66382+*                        BIT5 - STEP IS TO BE RESTARTED        @YL026WA\n                                            66383+*                        BIT6 - 0=NORMAL COMPLETION\n                                            66384+*                               1=ABEND\n                                            66385+*                        BIT7 - 1=STEP FLUSHED\n 00000058 0000                              66386+SMF4RV2  DC    BL2'0'    RESERVED                                A40791 03-IFASMFR\n 0000005A 00000000                          66387+SMF4AST  DC    BL4'0'    DEVICE ALLOC START TIME                 A40791 03-IFASMFR\n 0000005E 00000000                          66388+SMF4PPST DC    BL4'0'    PROBLEM PROGRAM START TIME              A40791 03-IFASMFR\n 00000062 00                                66389+SMF4RV3  DC    BL1'0'    RESERVED                              @YL026WA 03-IFASMFR\n 00000063 000000                            66390+SMF4SRBT DC    BL3'0'    STEP CPU TIME UNDER SRB(.01 SEC)      @YL026WA 03-IFASMFR\n 00000066 0000                              66391+SMF4RIN  DC    BL2'0'    RECORD INDICATORS                              03-IFASMFR\n                                            66392+*                        BIT0-3 RESERVED                           @DAC\n                                            66393+*                         4=1 FIELD SMF4SETM NOT VALID FOR SP410   @LAC\n                                            66394+*                            WHEN ACTJTIME >3 BYTES FOR TYPE 30    @DGA\n                                            66395+*                         5 =1 DEVICE DATA NOT RECORDED            @DAA\n                                            66396+*                         6 =1 POSSIBLE ERROR IN DEV ENTRY     @YM02618\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  289\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           66397+*                         7 =0 STOR IS VIRTUAL, =1 STOR IS REAL@YM02618\n                                            66398+*                         8-15 RESERVED                        @YM02618\n 00000068 0000                              66399+SMF4RLCT DC    BL2'0'    OFFSET TO RELOCATE SECTION                     03-IFASMFR\n 0000006A 0000                              66400+SMF4LENN DC    BL2'0'    LENGTH OF EXCP PORTION OF RECORD               03-IFASMFR\n                                            66401+*        FOR EACH DEVICE ASSIGNED TO EACH DATA SET THERE IS AN 8 BYTE\n                                            66402+*        ENTRY HAVING THE FOLLOWING FORMAT:\n                                            66403+*\n                                            66404+*     Note: Virtual I/O Devices are identified by the following:   @LYA\n                                            66405+*           Device Class 0                                         @LYA\n                                            66406+*           Unit Type 0                                            @LYA\n                                            66407+*           Device Number x'7FFF'                                  @LYA\n                                            66408+*\n 0000006C 00                                66409+SMF4DEVC DC    BL1'0'    DEVICE CLASS                                   03-IFASMFR\n 0000006D 00                                66410+SMF4UTYP DC    BL1'0'    UNIT TYPE                                      03-IFASMFR\n 0000006E 0000                              66411+SMF4CUAD DC    BL2'0'    Device Number                             @LYC 03-IFASMFR\n                                            66412+*                                                                 1@LYD\n 00000070 00000000                          66413+SMF4EXCP DC    BL4'0'    COUNT OF EXCP'S ISSUED FOR THE DEVICE AND      03-IFASMFR\n                                            66414+*                        DATA SET\n 00000074                00000074 0000006C  66415+         ORG   SMF4DEVC                                                 03-IFASMFR\n 0000006C 00                                66416+SMF4LNTH DC    BL1'0'    TOTAL LENGTH OF CPU AND ACCT. SECTION          03-IFASMFR\n 0000006D 000000                            66417+SMF4SETM DC    BL3'0'    RESERVED                                 @LAC  03-IFASMFR\n 00000070 00                                66418+SMF4NAF  DC    BL1'0'    NUMBER OF ACCOUNTING FIELDS                    03-IFASMFR\n 00000071                                   66419+SMF4ACTF DS    0C        EXEC STATEMENT ACCOUNTING FIELDS(VARIABLE)     03-IFASMFR\n                                            66420+*\n                                            66421+*        EACH ENTRY FOR AN ACCOUNTING FIELD CONTAINS THE LENGTH OF THE\n                                            66422+*        FIELD (1 BYTE,BINARY), FOLLOWED BY THE FIELD(EBCDIC).AN\n                                            66423+*        OMITTED FIELD IS REPRESENTED BY A LENGTH INDICATOR OF 0.\n                                            66424+*\n                                            66425+*        RELOCATE SECTION\n 00000071                                   66426+SMF4PGIN DS    BL4'0'    NUMBER OF PAGE-INS                             03-IFASMFR\n 00000075                                   66427+SMF4PGOT DS    BL4'0'    NUMBER OF PAGE-OUTS                            03-IFASMFR\n 00000079                                   66428+SMF4NSW  DS    BL4'0'    NUM OF SWAPS                            Y02901 03-IFASMFR\n                         00000079           66429+SMF4RGNS EQU   SMF4NSW                                           Y02901 03-IFASMFR\n 0000007D                                   66430+SMF4PSI  DS    BL4'0'    PAGES SWAPPED IN                        Y02901 03-IFASMFR\n                         0000007D           66431+SMF4SIN  EQU   SMF4PSI                                           Y02901 03-IFASMFR\n 00000081                                   66432+SMF4PSO  DS    BL4'0'    PAGES SWAPPED OUT                       Y02901 03-IFASMFR\n                         00000081           66433+SMF4SOUT EQU   SMF4PSO                                           Y02901 03-IFASMFR\n 00000085                                   66434+SMF4VPI  DS    BL4'0'    VAM PAGE INS                            Y02132 03-IFASMFR\n 00000089                                   66435+SMF4VPO  DS    BL4'0'    VAM PAGE OUTS                           Y02132 03-IFASMFR\n                                            66436+*        PERFORMANCE SECTION\n 0000008D                                   66437+SMF4SST  DS    BL4'0'              STEP SERVICE TIME           @YM07459 03-IFASMFR\n 00000091                                   66438+SMF4ACT  DS    BL4'0'              STEP ACTIVE TIME            @YM07459 03-IFASMFR\n 00000095                                   66439+SMF4PGNO DS    BL2'0'      Step performance group number:          @LZC 03-IFASMFR\n                                            66440+*                          - Valid only if workload management     @LZA\n                                            66441+*                            compatibility mode in effect.         @LZA\n                                            66442+*                          - Zero if workload management goal      @LZA\n                                            66443+*                            mode in effect when the Type 4        @LZA\n                                            66444+*                            record is generated.                  @LZA\n 00000097                                   66445+SMF4TRAN DS    BL4'0'      STEP TRANSACTION RESIDENCY TIME     @Z40FPPF 03-IFASMFR\n 0000009B                                   66446+SMF4CPM  DS    BL4'0'      CREAD PAGE MISS COUNT                   @DFC 03-IFASMFR\n 0000009F                                   66447+SMF4RCLM DS    BL4'0'      NUMBER OF VIO RECLAIMS              @Z40FPPF 03-IFASMFR\n 000000A3                                   66448+SMF4CPGN DS    BL4'0'      NUMBER OF COMMON PAGE-INS           @Z40FPPF 03-IFASMFR\n 000000A7                                   66449+SMF4HSPI DS    BL4'0'      HIPERSPACE PAGE IN COUNT                @LBC 03-IFASMFR\n 000000AB                                   66450+SMF4PGST DS    BL4'0'      NUMBER OF PAGES STOLEN FROM         @Z40FPPF 03-IFASMFR\n                                            66451+*                          THIS MEMORY                         @Z40FPPF\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  290\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000000AF                                   66452+SMF4PSEC DS    CL8         COUNT OF PAGE SECONDS               @Z40FPPF 03-IFASMFR\n 000000B7                                   66453+SMF4LPAI DS    BL4'0'      LPA PAGE INS                        @G50FPRL 03-IFASMFR\n 000000BB                                   66454+SMF4HSPO DS    BL4'0'      HIPERSPACE PAGE OUT COUNT               @LBC 03-IFASMFR\n 000000BF                                   66455+SMF4CPUS DS    BL4'0'      STEP CPU SERVICE                    @G50FPRL 03-IFASMFR\n 000000C3                                   66456+SMF4IOCS DS    BL4'0'      STEP I/O SERVICE                    @G50FPRL 03-IFASMFR\n 000000C7                                   66457+SMF4MSOS DS    BL4'0'      STEP MAIN STORAGE SERVICE           @G50FPRL 03-IFASMFR\n 000000CB                                   66458+SMF4SRBS DS    BL4'0'      STEP SRB SERVICE                    @G50FPRL 03-IFASMFR\n 000000CF                                   66459+SMF4RSV1 DS    CL8' '      RESERVED                            @YA15607 03-IFASMFR\n                                            66460+*        IFASMFR 05\n 00000000                00000000 00000091  66461+SMF5     DSECT                                                          02-$$GLOBAL\n                                            66463+*%IFABGN1: ;\n                                            66464+* /*                                                                 */\n                                            66465+* /* METHOD OF ACCESS                                                */\n                                            66466+* /*  PL/S - USER DEFINES MACRO VARIABLE IFARXX WHERE XX=RECORD NUM  */\n                                            66467+* /*         DECLARE SMFXXPTR PTR(31) OR RESPECIFY FOR BASE          */\n                                            66468+* /*         INCLUDE MACRO FROM LIBRARY                              */\n                                            66469+* /*          EXAMPLE %IFAR08 = 'YES',           NOTE. THE COMMA REP-*/\n                                            66470+* /*                  DCL SMF08PTR PTR(31),      RESENTS A SEMI-COLON*/\n                                            66471+* /*                  %INCLUDE SYSLIB(IFASMFR),  BUT ISN'T TO AVIOD  */\n                                            66472+* /*                                             A DIAGNOSTIC.       */\n                                            66473+* /*                                                                 */\n                                            66474+* /*                                                                 */\n                                            66475+* /*         THIS MACRO PROCESSES RECORDS IN THE RANGE 00-06. IT     */\n                                            66476+* /*         ACTS AS A ROUTER TO OTHER MACROS TO PROCESS OTHER       */\n                                            66477+* /*         RECORDS AS FOLLOWS:                                     */\n                                            66478+* /*                                                                 */\n                                            66479+* /*             MACRO        RECORDS                                */\n                                            66480+* /*            ********      *******                                */\n                                            66481+* /*            IFASMFR1      07-19                                  */\n                                            66482+* /*            IFASMFR2      20-27                                  */\n                                            66483+* /*            IFASMFR3      28-36                                  */\n                                            66484+* /*            IFASMFR4      37-46                                  */\n                                            66485+* /*            IFASMFR5      47-54                                  */\n                                            66486+* /*            IFASMFR6      55-69                                  */\n                                            66487+* /*            IFASMFR9      80-84                              @07C*/\n                                            66488+* /*            IFASMFRA      85-103                             @07C*/\n                                            66489+* /*            IFASMFRB      104-113                                */\n                                            66490+* /*            IFASMFRC      114-123                                */\n                                            66491+* /*            IFASMFRD      124-127                                */\n                                            66492+*%GOTO IFABGN2;   /*\n                                            66493+*  THIS IS AN SMF MACRO WHICH CONTROLS THE BUILDING OF SMF RECORDS. THE\n                                            66494+*  REQUIRED FORMAT IS\n                                            66495+*\n                                            66496+*        IFASMFR  &RECTYPE\n                                            66497+*\n                                            66498+*  NOTE: VALUES FOR &RECTYPE MUST BE ENCLOSED IN PARENS(UNLESS ONLY 1).\n                                            66499+*\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  291\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           66501+* THIS RECORD IS WRITTEN AT  NORMAL OR ABNORMAL TERMINATION OF A JOB.\n                                            66502+* RECORD LENGTH IS VARIABLE. MINIMUM OF 117.\n                                            66503+*\n 00000000                                   66504+         DS    0F        ALIGN TO FULL WORD BOUNDARY                    03-IFASMFR\n                         00000000           66505+SMFRCD5  EQU   *         HEADER SEGMENT                                 03-IFASMFR\n 00000000                                   66506+SMF5LEN  DS    BL2'0'    RECORD LENGTH                                  03-IFASMFR\n 00000002                                   66507+SMF5SEG  DS    BL2'0'    SEGMENT DESCRIPTOR                             03-IFASMFR\n 00000004 00                                66508+SMF5FLG  DC    BL1'0'    HEADER FLAG BYTE                               03-IFASMFR\n 00000005 00                                66509+SMF5RTY  DC    BL1'0'    RECORD TYPE 5                                  03-IFASMFR\n 00000006 00000000                          66510+SMF5TME  DC    BL4'0'    TOD USING FORMAT FROM TIME MACRO W/BIN. INTVL. 03-IFASMFR\n 0000000A 0000000C                          66511+SMF5DTE  DC    PL4'0000' DATE, PACKED DEC. FORM : OOYYDDDF(F IS A SIGN) 03-IFASMFR\n 0000000E 40404040                          66512+SMF5SID  DC    CL4' '    SYSTEM IDENTIFICATION                   Y02901 03-IFASMFR\n 00000012 4040404040404040                  66513+SMF5JBN  DC    CL8' '    JOB NAME                                       03-IFASMFR\n 0000001A 00000000                          66514+SMF5RST  DC    BL4'0'    READER START TIME FOR JOB (IN 100THS/SECONDS)  03-IFASMFR\n 0000001E 0000000C                          66515+SMF5RSD  DC    PL4'0000' READER START DATE,PACKED DECIMAL FORMAT        03-IFASMFR\n 00000022 4040404040404040                  66516+SMF5UIF  DC    CL8' '    USER IDENTIFICATION FIELD                      03-IFASMFR\n 0000002A 00                                66517+SMF5NST  DC    BL1'0'    NUMBER OF STEPS IN THE JOB                     03-IFASMFR\n 0000002B 00000000                          66518+SMF5JIT  DC    BL4'0'    JOB INITIATION TIME (IN 100THS/SECONDS)        03-IFASMFR\n 0000002F 0000000C                          66519+SMF5JID  DC    PL4'0000' JOB INITIATION DATE, PACKED DECIMAL FORMAT     03-IFASMFR\n 00000033 00000000                          66520+SMF5NCI  DC    BL4'0'    NUMBER OF CARD-IMAGE RECORDS IN DD DATA OR DD* 03-IFASMFR\n                                            66521+*                        DATA SETS\n 00000037 0000                              66522+SMF5JCC  DC    BL2'0'    JOB COMPLETION CODE                            03-IFASMFR\n 00000039 00                                66523+SMF5JPTY DC    BL1'0'    JOB PRIORITY                                   03-IFASMFR\n 0000003A 00000000                          66524+SMF5RSTT DC    BL4'0'    READER STOP TIME FOR JOB (IN 100THS/SECONDS)   03-IFASMFR\n 0000003E 0000000C                          66525+SMF5RSTD DC    PL4'0000' READER STOP DATE FOR JOB (IN PACKED DEC.FORM)  03-IFASMFR\n 00000042 00                                66526+SMF5JBTI DC    BL1'0'    JOB TERMINATION INDICATOR                      03-IFASMFR\n                                            66527+*                           0-FIELD SMF5JCPU NOT VALID FOR SP410 @LAC\n                                            66528+*                            WHEN ACTJTIME IS >3 BYTES           @DGA\n                                            66529+*                           1-CANCELLED AT EXIT IEFUJV\n                                            66530+*                           2-CANCELLED AT EXIT IEFUJI\n                                            66531+*                           3-CANCELLED AT EXIT IEFUSI\n                                            66532+*                           4-CANCELLED AT EXIT IEFACTRT\n                                            66533+*                           5-RESERVED\n                                            66534+*                           6-O=NORMAL COMPLETION\n                                            66535+*                             1=ABEND\n                                            66536+*                           7-RESERVED\n 00000043 00                                66537+SMF5SMCI DC    BL1'0'    RESV-FORMERLY SYSOUT CLASSES INDICATOR  Y02120 03-IFASMFR\n 00000044 00000000                          66538+SMF5TRAN DC    BL4'0'    TOTAL TRANSACTION RESIDENCY TIME      @ZM01380 03-IFASMFR\n 00000048 00                                66539+SMF5CKRE DC    BL1'0'    RESV                                           03-IFASMFR\n 00000049 00                                66540+SMF5RDCL DC    BL1'0'    READER DEVICE CLASS                            03-IFASMFR\n 0000004A 00                                66541+SMF5RUTY DC    BL1'0'    READER UNIT TYPE                               03-IFASMFR\n 0000004B 40                                66542+SMF5JICL DC    CL1' '    JOB INPUT CLASS                                03-IFASMFR\n 0000004C 00                                66543+SMF5SPK  DC    BL1'0'    STORAGE PROTECT KEY                     A40791 03-IFASMFR\n 0000004D 000000                            66544+SMF5SRBT DC    BL3'0'    JOB CPU TIME UNDER SRB(.01 SEC)       @YL026WA 03-IFASMFR\n 00000050                                   66545+SMF5TJS  DS    BL4'0'    TOTAL JOB SERVICE(SERVICE UNITS)        Y02133 03-IFASMFR\n 00000054                                   66546+SMF5TTAT DS    BL4'0'    TOTAL TRANSACTION ACTIVE TIME FOR JOB   Y02133 03-IFASMFR\n 00000058                                   66547+SMF5RV2  DS    BL4'0'    RESERVED                              @YL026WA 03-IFASMFR\n 0000005C 0000                              66548+SMF5PGNO DC    BL2'0'    Performance group number                  @LZC 03-IFASMFR\n                                            66549+*                          - Valid only if workload management     @LZA\n                                            66550+*                            compatibility mode in effect.         @LZA\n                                            66551+*                          - Zero if workload management goal      @LZA\n                                            66552+*                            mode in effect when the Type 5        @LZA\n                                            66553+*                            record is generated.                  @LZA\n 0000005E 4040                              66554+SMF5RV3  DC    CL2' '    RESERVED                              @YL026WA 03-IFASMFR\n 00000060 00                                66555+SMF5TLEN DC    BL1'0'    TOTAL LENGTH OF ACCT SECT OF RECORD @G50FPRL   03-IFASMFR\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  292\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000061 4040404040404040                  66556+SMF5PRGN DC    CL20' '   PROGRAMMER'S NAME                              03-IFASMFR\n 00000075 000000                            66557+SMF5JCPU DC    BL3'0'    RESERVED                                  @LAC 03-IFASMFR\n 00000078 00                                66558+SMF5ACTF DC    BL1'0'    NUMBER OF ACCOUNTING FIELDS                    03-IFASMFR\n 00000079                                   66559+SMF5JSAF DS    0C        JOB STATEMENT ACCOUNTING FIELDS(VARIABLE)      03-IFASMFR\n                                            66560+*\n                                            66561+*        EACH ENTRY FOR AN ACCOUNTING FIELD CONTAINS THE LENGTH OF THE\n                                            66562+*        FIELD(1 BYTE,BINARY),FOLLOWED BY THE FIELD (EBCDIC).AN OMITTED\n                                            66563+*        FIELD IS REPRESENTED BY A LENGTH INDICATOR OF 0.\n 00000079                                   66564+SMF5CPUS DS    BL4'0'    JOB CPU SERVICE                       @G50FPRL 03-IFASMFR\n 0000007D                                   66565+SMF5IOCS DS    BL4'0'    JOB I/O SERVICE                       @G50FPRL 03-IFASMFR\n 00000081                                   66566+SMF5MSOS DS    BL4'0'    JOB MAIN STORAGE SERVICE              @G50FPRL 03-IFASMFR\n 00000085                                   66567+SMF5SRBS DS    BL4'0'    JOB SRB SERVICE                       @G50FPRL 03-IFASMFR\n 00000089                                   66568+SMF5RSV1 DS    CL8' '    RESERVED                              @YA15607 03-IFASMFR\n                                            66569+*        IFASMFR 92\n                                            66571+*%IFABGN1: ;\n                                            66572+* /*                                                                 */\n                                            66573+* /* METHOD OF ACCESS                                                */\n                                            66574+* /*  PL/S - USER DEFINES MACRO VARIABLE IFARXX WHERE XX=RECORD NUM  */\n                                            66575+* /*         DECLARE SMFXXPTR PTR(31) OR RESPECIFY FOR BASE          */\n                                            66576+* /*         INCLUDE MACRO FROM LIBRARY                              */\n                                            66577+* /*          EXAMPLE %IFAR08 = 'YES',           NOTE. THE COMMA REP-*/\n                                            66578+* /*                  DCL SMF08PTR PTR(31),      RESENTS A SEMI-COLON*/\n                                            66579+* /*                  %INCLUDE SYSLIB(IFASMFR),  BUT ISN'T TO AVIOD  */\n                                            66580+* /*                                             A DIAGNOSTIC.       */\n                                            66581+* /*                                                                 */\n                                            66582+* /*                                                                 */\n                                            66583+* /*         THIS MACRO PROCESSES RECORDS IN THE RANGE 00-06. IT     */\n                                            66584+* /*         ACTS AS A ROUTER TO OTHER MACROS TO PROCESS OTHER       */\n                                            66585+* /*         RECORDS AS FOLLOWS:                                     */\n                                            66586+* /*                                                                 */\n                                            66587+* /*             MACRO        RECORDS                                */\n                                            66588+* /*            ********      *******                                */\n                                            66589+* /*            IFASMFR1      07-19                                  */\n                                            66590+* /*            IFASMFR2      20-27                                  */\n                                            66591+* /*            IFASMFR3      28-36                                  */\n                                            66592+* /*            IFASMFR4      37-46                                  */\n                                            66593+* /*            IFASMFR5      47-54                                  */\n                                            66594+* /*            IFASMFR6      55-69                                  */\n                                            66595+* /*            IFASMFR9      80-84                              @07C*/\n                                            66596+* /*            IFASMFRA      85-103                             @07C*/\n                                            66597+* /*            IFASMFRB      104-113                                */\n                                            66598+* /*            IFASMFRC      114-123                                */\n                                            66599+* /*            IFASMFRD      124-127                                */\n                                            66600+*%GOTO IFABGN2;   /*\n                                            66601+*  THIS IS AN SMF MACRO WHICH CONTROLS THE BUILDING OF SMF RECORDS. THE\n                                            66602+*  REQUIRED FORMAT IS\n                                            66603+*\n                                            66604+*        IFASMFR  &RECTYPE\n                                            66605+*\n                                            66606+*  NOTE: VALUES FOR &RECTYPE MUST BE ENCLOSED IN PARENS(UNLESS ONLY 1).\n                                            66607+*\n                                            66609+* MACRO NAME:  IFASMFRA                                            @M9C\n                                            66610+* DSECT NAME:  SMFRCD89                                            @M9A\n                                            66611+*              SMF89PR                                             @M9A\n                                            66612+*              SMF89SI                                             @M9A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  293\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           66613+*              SMF89UD                                             @M9A\n                                            66614+*              SMF89T2                                             @M9A\n                                            66615+*              SMFRCD90                                            @M9A\n                                            66616+*              SMF90PRH                                            @M9A\n                                            66617+*              SMF90T5                                             @M9A\n                                            66618+*              SMF90DSM                                            @M9A\n                                            66619+*              SMF90DSE                                            @M9A\n                                            66620+*              SMF90WCH                                            @M9A\n                                            66621+*              SMF90SUB                                            @M9A\n                                            66622+*              SMF90T6                                             @M9A\n                                            66623+*              SMF90T8                                             @M9A\n                                            66624+*              SMF90T1                                             @M9A\n                                            66625+*              SMF90T4                                             @M9A\n                                            66626+*              SMF90T3                                             @M9A\n                                            66627+*              SMF90T10                                            @M9A\n                                            66628+*              SMF90T11                                            @M9A\n                                            66629+*              SMF90T12                                            @M9A\n                                            66630+*              SMF90T14                                            @M9A\n                                            66631+*              SMF90T16                                            @M9A\n                                            66632+*              SMF90T17                                            @M9A\n                                            66633+*              SMF90T18                                            @M9A\n                                            66634+*              SMF90T19                                            @M9A\n                                            66635+*              SMF90T20                                            @M9A\n                                            66636+*              SMF90T21                                            @M9A\n                                            66637+*              SMF90T22                                            @M9A\n                                            66638+*              SMF90T33                                            @L6A\n                                            66639+*              SMF90T34                                            @L8A\n                                            66640+*\n                                            66641+* COMPONENT: Systems Management Facility (SC100)                   @M9A\n                                            66642+*01* PROPRIETARY STATEMENT=                                          *\n                                            66643+*  **PROPRIETARY_STATEMENT********************************************\n                                            66644+*                                                                    *\n                                            66645+*                                                                    *\n                                            66646+*   LICENSED MATERIALS - PROPERTY OF IBM                             *\n                                            66647+*   5694-A01 COPYRIGHT IBM CORP. 1977, 2010                          *\n                                            66648+*                                                                    *\n                                            66649+*   STATUS= HBB7770                                                  *\n                                            66650+*                                                                    *\n                                            66651+*  **END_OF_PROPRIETARY_STATEMENT*************************************\n                                            66652+* METHOD OF ACCESS:                                                @M9C\n                                            66653+* DESCRIPTIVE NAME:  SMF RECORDS 85-103                            @M9A\n                                            66654+* EYE CATCHER:                                                     @M9A\n                                            66655+* OFFSET:                                                          @M9A\n                                            66656+* LENGTH:                                                          @M9A\n                                            66657+* STORAGE ATTRIBUTES:                                              @M9A\n                                            66658+* MAIN STORAGE:                                                    @M9A\n                                            66659+* VIRTUAL STORAGE:                                                 @M9A\n                                            66660+* AUXILIARY STORAGE:                                               @M9A\n                                            66661+* SUBPOOL:                                                         @M9A\n                                            66662+* KEY:                                                             @M9A\n                                            66663+* DATA SPACE:                                                      @M9A\n                                            66664+* RESIDENCY:                                                       @M9A\n                                            66665+* SIZE:                                                            @M9A\n                                            66666+* CREATED BY:                                                      @M9A\n                                            66667+* POINTED TO BY:                                                   @M9A\n1         IXGBRMLT  - Browse Multi-block Output Mapping Macro                                                   Page  294\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           66668+* SERIALIZATION:                                                   @M9A\n                                            66669+* FUNCTION:                                                        @M9A\n                                            66670+* THIS DSECT DEFINES THE FORMAT FOR RECORD TYPE 92 WRITTEN         @D6A\n                                            66671+* BY THE O/MVS FILE SYSTEM                                         @D6A\n                                            66672+*                                                                  @D6A\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  295\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           66676+**/ BPXYSMFR_1:;\n                                            66677+*/****START OF SPECIFICATIONS******************************************\n                                            66678+*\n                                            66679+*    $MAC (BPXYSMFR) COMP(SCPX1) PROD(BPX):\n                                            66680+*\n                                            66681+*01* MACRO NAME: BPXYSMFR\n                                            66682+*\n                                            66683+*01* DSECT NAME: SMFRCD92\n                                            66684+*\n                                            66685+*01* DESCRIPTIVE NAME: OpenMVS File System SMF Record format\n                                            66686+*\n                                            66687+*02*   ACRONYM: SMFR\n                                            66688+**/\n                                            66689+*/*01* PROPRIETARY STATEMENT=                                        */\n                                            66690+*/***PROPRIETARY_STATEMENT********************************************/\n                                            66691+*/*                                                                  */\n                                            66692+*/*                                                                  */\n                                            66693+*/* LICENSED MATERIALS - PROPERTY OF IBM                             */\n                                            66694+*/* 5694-A01 (C) COPYRIGHT IBM CORP. 1993, 2005                      */\n                                            66695+*/*                                                                  */\n                                            66696+*/* STATUS= HBB7720                                                  */\n                                            66697+*/*                                                                  */\n                                            66698+*/***END_OF_PROPRIETARY_STATEMENT*************************************/\n                                            66699+*/*\n                                            66700+*\n                                            66701+*01* EXTERNAL CLASSIFICATION:  GUPI\n                                            66702+*01* END OF EXTERNAL CLASSIFICATION:\n                                            66703+*\n                                            66704+*01* FUNCTION:\n                                            66705+*\n                                            66706+*      The SMFRCD92 maps the structure of SMF record type 92 which\n                                            66707+*      is written at OpenMVS file open or close, file system\n                                            66708+*      mount, remount or unmount, file system suspend or resume,\n                                            66709+*      and file memory map or unmap.\n                                            66710+*\n                                            66711+*      This is a CBGEN part, see the notes below before changing.\n                                            66712+*\n                                            66713+*01* METHOD OF ACCESS:\n                                            66714+*\n                                            66715+*02*   PL/X:\n                                            66716+*\n                                            66717+*        %INCLUDE SYSLIB(BPXYSMFR)\n                                            66718+*        By default, the SMFRCD92 is based on SMF92PTR. If\n                                            66719+*        other basing is desired, use %SMFRBASE='BASED(XXXXXX)'.\n                                            66720+*        If %SMFRBASE='BASED(SMF92PTR)' is coded, a declare for\n                                            66721+*        SMF92PTR is also generated.\n                                            66722+*\n                                            66723+*01* SIZE:\n                                            66724+*            SMF92ESA -- X'0490' bytes\n                                            66725+*            SMF92DFL -- X'00CC' bytes\n                                            66726+*            SMFRCD92 -- X'0034' bytes\n                                            66727+*            SMF92SSS -- X'0014' bytes\n                                            66728+*            SMF92ID  -- X'0048' bytes\n                                            66729+*            SMF92FSM -- X'006C' bytes\n                                            66730+*            SMF92FSP -- X'0002' bytes\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  296\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           66731+*            SMF92FSS -- X'0051' bytes\n                                            66732+*            SMF92FSR -- X'0059' bytes\n                                            66733+*            SMF92FSU -- X'0094' bytes\n                                            66734+*            SMF92FSV -- X'0094' bytes\n                                            66735+*            SMF92FOP -- X'0018' bytes\n                                            66736+*            SMF92FCL -- X'0084' bytes\n                                            66737+*            SMF92MMP -- X'0018' bytes\n                                            66738+*            SMF92MUN -- X'0028' bytes\n                                            66739+*01*             SMFRCD92 -- X'0034' bytes\n                                            66740+*01*             SMF92SSS -- X'0014' bytes\n                                            66741+*01*             SMF92ID  -- X'0048' bytes\n                                            66742+*01*             SMF92FSM -- X'006C' bytes\n                                            66743+*01*             SMF92FSP -- X'0002' bytes\n                                            66744+*01*             SMF92FSS -- X'0050' bytes\n                                            66745+*01*             SMF92FSR -- X'0058' bytes\n                                            66746+*01*             SMF92FSU -- X'0094' bytes\n                                            66747+*01*             SMF92FOP -- X'0018' bytes\n                                            66748+*01*             SMF92FCL -- X'0044' bytes\n                                            66749+*01*             SMF92MMP -- X'0018' bytes\n                                            66750+*01*             SMF92MUN -- X'0028' bytes\n                                            66751+*\n                                            66752+*01* POINTED TO BY: SMF92PTR\n                                            66753+*\n                                            66754+*01* CREATED BY:\n                                            66755+*             Open file record            - BPXFSOPN\n                                            66756+*             Close file record           - BPXFSCLS\n                                            66757+*             Mount file System record    - BPXFSLIT and BPXFSMNT\n                                            66758+*             Unmount File System record  - BPXFSUMT\n                                            66759+*             Suspend File System record  - BPXFSQSE\n                                            66760+*             Resume File System record   - BPXFSUQS\n                                            66761+*             Mmap record                 - BPXGYVDA\n                                            66762+*             Munmap record               - BPXGYVDA\n                                            66763+*\n                                            66764+*01* DELETED BY: Caller of SMFEWTM\n                                            66765+*\n                                            66766+*01* STORAGE ATTRIBUTES:\n                                            66767+*02*   SUBPOOL:            N/A\n                                            66768+*02*   KEY:                N/A\n                                            66769+*02*   RESIDENCY:          N/A\n                                            66770+*\n                                            66771+*01* FREQUENCY: 1 per call to SMFEWTM\n                                            66772+*\n                                            66773+*01* SERIALIZATION: N/A\n                                            66774+*\n                                            66775+*01* DEPENDENCIES: None\n                                            66776+*\n                                            66777+*01* NOTES:  The assembly language portion of this macro is\n                                            66778+*            generated using the CBGEN tool - it is not\n                                            66779+*            to be edited manually.\n                                            66780+*\n                                            66781+*  To make a change in the development release:                   @01A\n                                            66782+*  -------------------------------------------\n                                            66783+*  1) Extract the BPXYSMFR.CBG part from CMVC.\n                                            66784+*  2) Make your changes to the PLX section only.\n                                            66785+*     The ASM section will be totally replaced in step 3.\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  297\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           66786+*  3) Generate a new executable macro through the TSO CBGEN panel.\n                                            66787+*     Do a test assemble of the generated macro.\n                                            66788+*  4) Transmit the new generated object as the new CBG part in CMVC.\n                                            66789+*     This is so the CMVC library object will have the current level\n                                            66790+*     of the ASM section.\n                                            66791+*     B390 will generate a new macro for the compile maclibs,\n                                            66792+*     i.e. B390.fmid.MACLIB.  This should match the one you generated,\n                                            66793+*     and transmitted as the .CBG part.\n                                            66794+*\n                                            66795+*01* COMPONENT: OpenMVS (SCPX1)\n                                            66796+*\n                                            66797+*01* DISTRIBUTION LIBRARY:  AMACLIB\n                                            66798+*\n                                            66799+*01* EYE-CATCHER: none\n                                            66800+*\n                                            66801+*01* CHANGE-ACTIVITY:\n                                            66802+*\n                                            66803+*      $L0=POSIXXF  HOM1110 921201 PDP1: OpenMVS Initial Release\n                                            66804+*      $P1=PL70342  HOM1110 920721 PDJT: Change Line Item Flag to XF\n                                            66805+*      $L1=D0AA006  HOM1120 930419 PDI6: OpenMVS Multi-Process Support\n                                            66806+*      $D1=DOAA009  HOM1120 930812 PDEA: Wellington NFS Server Support\n                                            66807+*                                        for Dcr A009.04\n                                            66808+*      $D2=DOAA002  HOM1120 930816 PDEA: (dcr A002.12) SMF support for\n                                            66809+*                                        socket\n                                            66810+*      $P2=POA0294  HOM1120 940201 PDEA: Change the version number\n                                            66811+*      $P2=PPF0001  HOM1130 940201 PDEA: Change the version number\n                                            66812+*      $P3=POA0421  HOM1120 940415 PDNU: SMF Accounting\n                                            66813+*      $P3=PPF0006  HOM1130 940415 PDNU: SMF Accounting\n                                            66814+*      $D3=DPFA065  HOM1130 940628 PDPB: A065.03 MMAP support\n                                            66815+*      $D4=DPFA052  HOM1130 940630 PDEA: A052.05 NFSC support\n                                            66816+*      $D5=DPFA091  HOM1130 941103 PDSV: DCR A091.02 Automountd/remount\n                                            66817+*      $D6=DUXA217  HBB6605 970411 PDSK: NFS Performance Items A217.12\n                                            66818+*      $D7=DCA0309  JBB6609 990410 PDRD: DCR A309 Support\n                                            66819+*      $P4=PYN0220  HBB7708 020301 PDFO: Bilingual fixup\n                                            66820+*      $D8=DDEA630  HBB7720 040316 PDJT: NFS V4\n                                            66821+*      $D9=ME06291  HBB7740 060322 PDFV: Subtype 14 Deletes  B033.00\n                                            66822+*      $01=OA24208  HBB7730 080209 PDJT: Subtype 15 Ext Security Attrs\n                                            66823+****END OF SPECIFICATIONS*********************************************/\n                                            66824+*% /*\n 00000000                00000000 00000034  66825+SMFRCD92 DSECT                                                          05-BPXYSMFR\n 00000000                                   66826+SMF92RPS DS    0CL52     Fixed record sections                          05-BPXYSMFR\n                                            66827+*\n                                            66828+*\n                                            66829+*    SMF Record Header Section\n                                            66830+*\n                                            66831+*\n                                            66832+*\n 00000000                                   66833+SMF92RHD DS    0CL28     Record header section                          05-BPXYSMFR\n 00000000                                   66834+SMF92LEN DS    H         Record length                                  05-BPXYSMFR\n 00000002                                   66835+SMF92SEG DS    H         Segment descriptor                             05-BPXYSMFR\n 00000004                                   66836+SMF92FLG DS    0B        Header flag byte                               05-BPXYSMFR\n                         00000080           66837+SMF92SSF EQU   X'80'     Bit 0 - Subsys ID after Sys ID                 05-BPXYSMFR\n                         00000040           66838+SMF92SBT EQU   X'40'     Bit 1 - Subtypes utilized                      05-BPXYSMFR\n 00000004                00000004 00000005  66839+         ORG   SMF92FLG+1                                               05-BPXYSMFR\n 00000005                                   66840+SMF92RTY DS    B         Record type - 92 ('5C'x)                       05-BPXYSMFR\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  298\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000006                                   66841+SMF92TME DS    FL4       Record written time                            05-BPXYSMFR\n 0000000A                                   66842+SMF92DTE DS    FL4       Record written date                            05-BPXYSMFR\n 0000000E                                   66843+SMF92SID DS    CL4       System identifier                              05-BPXYSMFR\n 00000012                                   66844+SMF92WID DS    CL4       Subsystem identifier                           05-BPXYSMFR\n 00000016                                   66845+SMF92STP DS    H         Record subtype                                 05-BPXYSMFR\n 00000018                                   66846+         DS    CL2       Reserved                                       05-BPXYSMFR\n 0000001A                                   66847+SMF92SDL DS    H         Length of self-defining section                05-BPXYSMFR\n                                            66848+*\n                                            66849+*\n                                            66850+*    Self Defining Section\n                                            66851+*\n                                            66852+*\n                                            66853+*\n 0000001C                                   66854+SMF92SDS DS    0CL24                                                    05-BPXYSMFR\n 0000001C                                   66855+SMF92SOF DS    F         Offset to subsystem section                    05-BPXYSMFR\n 00000020                                   66856+SMF92SLN DS    H         Length of subsystem section                    05-BPXYSMFR\n 00000022                                   66857+SMF92SON DS    H         Number of subsystem sections                   05-BPXYSMFR\n 00000024                                   66858+SMF92IOF DS    F         Offset of identification section               05-BPXYSMFR\n 00000028                                   66859+SMF92ILN DS    H         Length of identification section               05-BPXYSMFR\n 0000002A                                   66860+SMF92ION DS    H         Number of identification section               05-BPXYSMFR\n 0000002C                                   66861+SMF92DOF DS    F         Offset of data section                         05-BPXYSMFR\n 00000030                                   66862+SMF92DLN DS    H         Length of data section                         05-BPXYSMFR\n 00000032                                   66863+SMF92DON DS    H         Number of data sections                        05-BPXYSMFR\n                         00000034           66864+SMFRCD92_LEN EQU *-SMFRCD92                                             05-BPXYSMFR\n                                            66865+*\n                                            66866+*\n                                            66867+*    Subsystem Section\n                                            66868+*\n                                            66869+*\n                                            66870+*\n 00000000                00000000 00000014  66871+SMF92SSS DSECT                                                          05-BPXYSMFR\n 00000000                                   66872+SMF92TYP DS    H         Record subtype, 1 = File system mount, 2 =    X05-BPXYSMFR\n                                                 +                         File system suspend, 4 = File system resume,  X\n                                                 +                         5 = File system unmount, 6 = File system      X\n                                                 +                         remount, 7 = File system move, 10 = File      X\n                                                 +                         open, 11 = File close. 12 = Memmap. 13 =      X\n                                                 +                         Memunmap. 14 = File/directory delete\n 00000002                                   66873+SMF92RVN DS    CL2       Record version number                          05-BPXYSMFR\n 00000004                                   66874+SMF92PNM DS    CL8       Product name - OpenMVS                         05-BPXYSMFR\n 0000000C                                   66875+SMF92OSL DS    CL8       MVS product level                              05-BPXYSMFR\n                         00000014           66876+SMF92SSS_LEN EQU *-SMF92SSS                                             05-BPXYSMFR\n                                            66877+*\n                                            66878+*\n                                            66879+*    Identification Section\n                                            66880+*\n                                            66881+*\n                                            66882+*\n 00000000                00000000 00000048  66883+SMF92ID  DSECT                                                          05-BPXYSMFR\n 00000000                                   66884+SMF92JBN DS    CL8       JobName                                        05-BPXYSMFR\n 00000008                                   66885+SMF92RST DS    F         Reader start time                              05-BPXYSMFR\n 0000000C                                   66886+SMF92RSD DS    CL4       Reader start date                              05-BPXYSMFR\n 00000010                                   66887+SMF92STM DS    CL8       Step name                                      05-BPXYSMFR\n 00000018                                   66888+SMF92RGD DS    CL8       SAF group ID                                   05-BPXYSMFR\n 00000020                                   66889+SMF92RUD DS    CL8       SAF user ID                                    05-BPXYSMFR\n 00000028                                   66890+SMF92UID DS    F         OpenMVS real user ID                           05-BPXYSMFR\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  299\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000002C                                   66891+SMF92GID DS    F         OpenMVS real group ID                          05-BPXYSMFR\n 00000030                                   66892+SMF92PID DS    F         OpenMVS process ID                             05-BPXYSMFR\n 00000034                                   66893+SMF92PGD DS    F         OpenMVS process group ID                       05-BPXYSMFR\n 00000038                                   66894+SMF92SSD DS    F         OpenMVS session ID                             05-BPXYSMFR\n 0000003C                                   66895+SMF92API DS    F         OpenMVS anchor process ID                      05-BPXYSMFR\n 00000040                                   66896+SMF92APG DS    F         OpenMVS anchor proc grp ID                     05-BPXYSMFR\n 00000044                                   66897+SMF92ASG DS    F         OpenMVS anchor session ID                      05-BPXYSMFR\n                         00000048           66898+SMF92ID_LEN EQU *-SMF92ID                                               05-BPXYSMFR\n                                            66899+*\n                                            66900+*\n                                            66901+*    Data Section for File System Mount subtype (subtype 1)\n                                            66902+*\n                                            66903+*\n                                            66904+*\n 00000000                00000000 0000006C  66905+SMF92FSM DSECT                                                          05-BPXYSMFR\n 00000000                                   66906+SMF92MTM DS    BL8       Time of mount, STCK format                     05-BPXYSMFR\n 00000008                                   66907+SMF92MPF DS    F         Offset of path section                         05-BPXYSMFR\n 0000000C                                   66908+SMF92MFT DS    F         File system type from MntEntFSType field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000010                                   66909+SMF92MFM DS    F         File system mode from MntEntFSMode field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000014                                   66910+SMF92MDN DS    F         File system device number from MntEntFSDev    X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 00000018                                   66911+SMF92MDD DS    CL8       DDNAME specified on mount from MntEntFSDDName X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 00000020                                   66912+SMF92MTN DS    CL8       File system type name from MntEntFSTName      X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 00000028                                   66913+SMF92MFN DS    CL44      File system name from MntEntFSName field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000054                                   66914+SMF92MBL DS    F         File system block size                         05-BPXYSMFR\n 00000058                                   66915+SMF92MST DS    BL8       Total space in file system in block size      X05-BPXYSMFR\n                                                 +                         units\n 00000060                                   66916+SMF92MSU DS    BL8       Allocated space in file system in block size  X05-BPXYSMFR\n                                                 +                         units\n 00000068                                   66917+SMF92MFG DS    0B        Flag byte                                      05-BPXYSMFR\n                         00000080           66918+SMF92MAU EQU   X'80'     Mounted by Automounter                         05-BPXYSMFR\n                         00000040           66919+SMF92MAS EQU   X'40'     Asynchronous mount 1 = Yes, 0 = No             05-BPXYSMFR\n 00000068                00000068 00000069  66920+         ORG   SMF92MFG+1                                               05-BPXYSMFR\n 00000069                                   66921+SMF92MF2 DS    0B        Second Flag byte                               05-BPXYSMFR\n                         00000080           66922+SMF92MLU EQU   X'80'     Mounted localy                                 05-BPXYSMFR\n                         00000040           66923+SMF92MNU EQU   X'40'     Mounted remotely                               05-BPXYSMFR\n                         00000020           66924+SMF92MDO EQU   X'20'     HFS Sysplex client                             05-BPXYSMFR\n                         00000010           66925+SMF92MSN EQU   X'10'     Filesystem owner                               05-BPXYSMFR\n 00000069                00000069 0000006A  66926+         ORG   SMF92MF2+1                                               05-BPXYSMFR\n 0000006A                                   66927+         DS    CL2       Reserved                                       05-BPXYSMFR\n                         0000006C           66928+SMF92FSM_LEN EQU *-SMF92FSM                                             05-BPXYSMFR\n 00000000                00000000 00000002  66929+SMF92FSP DSECT                                                          05-BPXYSMFR\n 00000000                                   66930+SMF92PPL DS    H         Length of path name                            05-BPXYSMFR\n 00000002                                   66931+SMF92PPN DS    0C        Path name of directory where file system is   X05-BPXYSMFR\n                                                 +                         mounted. Maximum length=1024\n                         00000002           66932+SMF92FSP_LEN EQU *-SMF92FSP                                             05-BPXYSMFR\n                                            66933+*\n                                            66934+*\n                                            66935+*    Data Section for File System Suspend subtype (subtype 2)\n                                            66936+*        This subtype is written as a result of a quiesce syscall\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  300\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           66937+*\n                                            66938+*\n                                            66939+*\n 00000000                00000000 00000051  66940+SMF92FSS DSECT                                                          05-BPXYSMFR\n 00000000                                   66941+SMF92STS DS    BL8       Time of suspend, STCK format                   05-BPXYSMFR\n 00000008                                   66942+SMF92SFT DS    F         File system type from MntEntFSType field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 0000000C                                   66943+SMF92SFM DS    F         File system mode from MntEntFSMode field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000010                                   66944+SMF92SDN DS    F         File system device number from MntEntFSDev    X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 00000014                                   66945+SMF92SDD DS    CL8       DDNAME specified on mount from MntEntFSDDName X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 0000001C                                   66946+SMF92STN DS    CL8       File system type name from MntEntFSTName      X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 00000024                                   66947+SMF92SFN DS    CL44      File system name from MntEntFSName field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000050                                   66948+SMF92SFG DS    0B        Flag btye                                      05-BPXYSMFR\n                         00000080           66949+SMF92SLU EQU   X'80'     Mounted localy                                 05-BPXYSMFR\n                         00000040           66950+SMF92SNU EQU   X'40'     Mounted remotely                               05-BPXYSMFR\n                         00000020           66951+SMF92SDO EQU   X'20'     HFS Sysplex client                             05-BPXYSMFR\n                         00000010           66952+SMF92SSN EQU   X'10'     Filesystem owner                               05-BPXYSMFR\n 00000050                00000050 00000051  66953+         ORG   SMF92FSS+81                                              05-BPXYSMFR\n                         00000051           66954+SMF92FSS_LEN EQU *-SMF92FSS                                             05-BPXYSMFR\n                                            66955+*\n                                            66956+*\n                                            66957+*    Data Section for File System Resume subtype (subtype 4)\n                                            66958+*        This subtype is written as a result of an unquiesce syscall\n                                            66959+*\n                                            66960+*\n                                            66961+*\n 00000000                00000000 00000059  66962+SMF92FSR DSECT                                                          05-BPXYSMFR\n 00000000                                   66963+SMF92RTS DS    BL8       Time of suspend, STCK format                   05-BPXYSMFR\n 00000008                                   66964+SMF92RTR DS    BL8       Time of resume, STCK format                    05-BPXYSMFR\n 00000010                                   66965+SMF92RFT DS    F         File system type from MntEntFSType field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000014                                   66966+SMF92RFM DS    F         File system mode from MntEntFSMode field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000018                                   66967+SMF92RDN DS    F         File system device number from MntEntFSDev    X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 0000001C                                   66968+SMF92RDD DS    CL8       DDNAME specified on mount from MntEntFSDDName X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 00000024                                   66969+SMF92RTN DS    CL8       File system type name from MntEntFSTName      X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 0000002C                                   66970+SMF92RFN DS    CL44      File system name from MntEntFSName field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000058                                   66971+SMF92RFG DS    0B        Flag btye                                      05-BPXYSMFR\n                         00000080           66972+SMF92RLU EQU   X'80'     Mounted localy                                 05-BPXYSMFR\n                         00000040           66973+SMF92RNU EQU   X'40'     Mounted remotely                               05-BPXYSMFR\n                         00000020           66974+SMF92RDO EQU   X'20'     HFS Sysplex client                             05-BPXYSMFR\n                         00000010           66975+SMF92RSN EQU   X'10'     Filesystem owner                               05-BPXYSMFR\n 00000058                00000058 00000059  66976+         ORG   SMF92FSR+89                                              05-BPXYSMFR\n                         00000059           66977+SMF92FSR_LEN EQU *-SMF92FSR                                             05-BPXYSMFR\n                                            66978+*\n                                            66979+*\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  301\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           66980+*    Data Section for File System Unmount subtype (subtype 5)\n                                            66981+*    Data Section for File System Remount subtype (subtype 6)\n                                            66982+*    (Subtypes 5 & 6 differ only by the subtype numbers)\n                                            66983+*\n                                            66984+*\n                                            66985+*\n 00000000                00000000 00000094  66986+SMF92FSU DSECT                                                          05-BPXYSMFR\n 00000000                                   66987+SMF92UTM DS    BL8       Time of mount, STCK format                     05-BPXYSMFR\n 00000008                                   66988+SMF92UTU DS    BL8       Time of unmount, STCK format                   05-BPXYSMFR\n 00000010                                   66989+SMF92UFT DS    F         File system type from MntEntFSType field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000014                                   66990+SMF92UFM DS    F         File system mode from MntEntFSMode field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000018                                   66991+SMF92UDN DS    F         File system device number from MntEntFSDev    X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 0000001C                                   66992+SMF92UDD DS    CL8       DDNAME specified on mount from MntEntFSDDName X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 00000024                                   66993+SMF92UTN DS    CL8       File system type name from MntEntFSTName      X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 0000002C                                   66994+SMF92UFN DS    CL44      File system name from MntEntFSName field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000058                                   66995+SMF92UBL DS    F         File system block size                         05-BPXYSMFR\n 0000005C                                   66996+SMF92UST DS    BL8       Total space in file system in block size      X05-BPXYSMFR\n                                                 +                         units\n 00000064                                   66997+SMF92USU DS    BL8       Allocated space in file system in block size  X05-BPXYSMFR\n                                                 +                         units\n 0000006C                                   66998+SMF92USR DS    F         Reads                                          05-BPXYSMFR\n 00000070                                   66999+SMF92USW DS    F         Writes                                         05-BPXYSMFR\n 00000074                                   67000+SMF92UDI DS    F         Directory I/O blocks                           05-BPXYSMFR\n 00000078                                   67001+SMF92UIR DS    F         I/O blocks read                                05-BPXYSMFR\n 0000007C                                   67002+SMF92UIW DS    F         I/O blocks written                             05-BPXYSMFR\n 00000080                                   67003+SMF92UBR DS    BL8       Bytes read                                     05-BPXYSMFR\n 00000088                                   67004+SMF92UBW DS    BL8       Bytes written                                  05-BPXYSMFR\n 00000090                                   67005+SMF92UFG DS    0B        Flag byte                                      05-BPXYSMFR\n                         00000080           67006+SMF92UAU EQU   X'80'     Unmounted by Automounter                       05-BPXYSMFR\n 00000090                00000090 00000091  67007+         ORG   SMF92UFG+1                                               05-BPXYSMFR\n 00000091                                   67008+SMF92UF2 DS    0B        Second flag byte                               05-BPXYSMFR\n                         00000080           67009+SMF92ULU EQU   X'80'     Mounted localy                                 05-BPXYSMFR\n                         00000040           67010+SMF92UNU EQU   X'40'     Mounted remotely                               05-BPXYSMFR\n                         00000020           67011+SMF92UDO EQU   X'20'     HFS Sysplex client                             05-BPXYSMFR\n                         00000010           67012+SMF92USN EQU   X'10'     Filesystem owner                               05-BPXYSMFR\n 00000091                00000091 00000092  67013+         ORG   SMF92UF2+1                                               05-BPXYSMFR\n 00000092                                   67014+         DS    CL2       Reserved                                       05-BPXYSMFR\n                         00000094           67015+SMF92FSU_LEN EQU *-SMF92FSU                                             05-BPXYSMFR\n                                            67016+*\n                                            67017+*\n                                            67018+*   Data Section for Move File System subtype (subtype 7)\n                                            67019+*\n                                            67020+*\n                                            67021+*\n 00000000                00000000 00000094  67022+SMF92FSV DSECT                                                          05-BPXYSMFR\n 00000000                                   67023+SMF92VTV DS    BL8       Time of move, STCK format                      05-BPXYSMFR\n 00000008                                   67024+SMF92VTM DS    BL8       Time of mount, STCK format                     05-BPXYSMFR\n 00000010                                   67025+SMF92VFT DS    F         File system type from MntEntFSType field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  302\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000014                                   67026+SMF92VFM DS    F         File system mode from MntEntFSMode field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000018                                   67027+SMF92VDN DS    F         File system device number from MntEntFSDev    X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 0000001C                                   67028+SMF92VDD DS    CL8       DDNAME specified on mount from MntEntFSDDName X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 00000024                                   67029+SMF92VTN DS    CL8       File system type name from MntEntFSTName      X05-BPXYSMFR\n                                                 +                         field of BPXYMNTE\n 0000002C                                   67030+SMF92VNM DS    CL44      File system name from MntEntFSName field of   X05-BPXYSMFR\n                                                 +                         BPXYMNTE\n 00000058                                   67031+SMF92VBL DS    F         File system block size                         05-BPXYSMFR\n 0000005C                                   67032+SMF92VST DS    BL8       Total space in file system in block size      X05-BPXYSMFR\n                                                 +                         units\n 00000064                                   67033+SMF92VSU DS    BL8       Allocated space in file system in block size  X05-BPXYSMFR\n                                                 +                         units\n 0000006C                                   67034+SMF92VSR DS    F         Reads                                          05-BPXYSMFR\n 00000070                                   67035+SMF92VSW DS    F         Writes                                         05-BPXYSMFR\n 00000074                                   67036+SMF92VDI DS    F         Directory I/O blocks                           05-BPXYSMFR\n 00000078                                   67037+SMF92VIR DS    F         I/O blocks read                                05-BPXYSMFR\n 0000007C                                   67038+SMF92VIW DS    F         I/O blocks written                             05-BPXYSMFR\n 00000080                                   67039+SMF92VBR DS    BL8       Bytes read                                     05-BPXYSMFR\n 00000088                                   67040+SMF92VBW DS    BL8       Bytes written                                  05-BPXYSMFR\n 00000090                                   67041+SMF92VFG DS    0B        Flag byte - reason for move                    05-BPXYSMFR\n                         00000080           67042+SMF92VUI EQU   X'80'     User-initiated                                 05-BPXYSMFR\n                         00000040           67043+SMF92VRI EQU   X'40'     Recovery                                       05-BPXYSMFR\n 00000090                00000090 00000091  67044+         ORG   SMF92VFG+1                                               05-BPXYSMFR\n 00000091                                   67045+SMF92VOF DS    0B        Flag byte - old status                         05-BPXYSMFR\n                         00000080           67046+SMF92VOL EQU   X'80'     Mounted localy                                 05-BPXYSMFR\n                         00000040           67047+SMF92VON EQU   X'40'     Mounted remotely                               05-BPXYSMFR\n                         00000020           67048+SMF92VOD EQU   X'20'     HFS Sysplex client                             05-BPXYSMFR\n                         00000010           67049+SMF92VOS EQU   X'10'     Filesystem owner                               05-BPXYSMFR\n 00000091                00000091 00000092  67050+         ORG   SMF92VOF+1                                               05-BPXYSMFR\n 00000092                                   67051+SMF92VNF DS    0B        Flag byte - new status                         05-BPXYSMFR\n                         00000080           67052+SMF92VNL EQU   X'80'     Mounted localy                                 05-BPXYSMFR\n                         00000040           67053+SMF92VNN EQU   X'40'     Mounted remotely                               05-BPXYSMFR\n                         00000020           67054+SMF92VND EQU   X'20'     HFS Sysplex client                             05-BPXYSMFR\n                         00000010           67055+SMF92VNS EQU   X'10'     Filesystem owner                               05-BPXYSMFR\n 00000092                00000092 00000093  67056+         ORG   SMF92VNF+1                                               05-BPXYSMFR\n 00000093                                   67057+         DS    CL1       Reserved                                       05-BPXYSMFR\n                         00000094           67058+SMF92FSV_LEN EQU *-SMF92FSV                                             05-BPXYSMFR\n                                            67059+*\n                                            67060+*\n                                            67061+*    Data Section for File Open subtype (subtype 10)\n                                            67062+*\n                                            67063+*\n                                            67064+*\n 00000000                00000000 00000018  67065+SMF92FOP DSECT                                                          05-BPXYSMFR\n 00000000                                   67066+SMF92OTO DS    BL8       Open time - STCK format                        05-BPXYSMFR\n 00000008                                   67067+SMF92OTY DS    X         File Type as defined in BPXYFTYP               05-BPXYSMFR\n 00000009                                   67068+SMF92OFG DS    0B        record flag                                    05-BPXYSMFR\n                         00000080           67069+SMF92ONF EQU   X'80'     record generated by VNode interface service    05-BPXYSMFR\n                         00000040           67070+SMF92ONS EQU   X'40'     Network or local socket, 1 = network           05-BPXYSMFR\n                         00000020           67071+SMF92OCS EQU   X'20'     Client or server socket 1 = client             05-BPXYSMFR\n 00000009                00000009 0000000A  67072+         ORG   SMF92OFG+1                                               05-BPXYSMFR\n 0000000A                                   67073+         DS    CL2       Reserved                                       05-BPXYSMFR\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  303\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000000C                                   67074+SMF92OTK DS    BL4       Open file token (Matches close)                05-BPXYSMFR\n 00000010                                   67075+SMF92OIN DS    F         Inode number                                   05-BPXYSMFR\n 00000014                                   67076+SMF92ODN DS    F         Unique device number                           05-BPXYSMFR\n                         00000018           67077+SMF92FOP_LEN EQU *-SMF92FOP                                             05-BPXYSMFR\n                                            67078+*\n                                            67079+*\n                                            67080+*    Data Section for File Close subtype (subtype 11)\n                                            67081+*\n                                            67082+*\n                                            67083+*\n 00000000                00000000 00000084  67084+SMF92FCL DSECT                                                          05-BPXYSMFR\n 00000000                                   67085+SMF92CTO DS    BL8       Open time - STCK format                        05-BPXYSMFR\n 00000008                                   67086+SMF92CTC DS    BL8       Close time - STCK format                       05-BPXYSMFR\n 00000010                                   67087+SMF92CTY DS    X         File type as defined in BPXYFTYP               05-BPXYSMFR\n 00000011                                   67088+SMF92CFG DS    0B        record flag                                    05-BPXYSMFR\n                         00000080           67089+SMF92CNF EQU   X'80'     record generated by VNode interface service    05-BPXYSMFR\n                         00000040           67090+SMF92CNS EQU   X'40'     Network or local socket 1 = network            05-BPXYSMFR\n                         00000020           67091+SMF92CCS EQU   X'20'     Client or server socket 1 = server             05-BPXYSMFR\n                         00000010           67092+SMF92CFC EQU   X'10'     File was cached                                05-BPXYSMFR\n                         00000008           67093+SMF92CDR EQU   X'08'     File had Deny Read on it                       05-BPXYSMFR\n                         00000004           67094+SMF92CDW EQU   X'04'     File had Deny Write on it                      05-BPXYSMFR\n 00000011                00000011 00000012  67095+         ORG   SMF92CFG+1                                               05-BPXYSMFR\n 00000012                                   67096+         DS    CL2       Reserved                                       05-BPXYSMFR\n 00000014                                   67097+SMF92CTK DS    BL4       Open file token                                05-BPXYSMFR\n 00000018                                   67098+SMF92CIN DS    F         Inode number                                   05-BPXYSMFR\n 0000001C                                   67099+SMF92CDN DS    F         Unique device number                           05-BPXYSMFR\n 00000020                                   67100+SMF92CSR DS    F         Reads                                          05-BPXYSMFR\n 00000024                                   67101+SMF92CSW DS    F         Writes                                         05-BPXYSMFR\n 00000028                                   67102+SMF92CDI DS    F         Directory I/O blocks                           05-BPXYSMFR\n 0000002C                                   67103+SMF92CIR DS    F         I/O blocks read                                05-BPXYSMFR\n 00000030                                   67104+SMF92CIW DS    F         I/O blocks written                             05-BPXYSMFR\n 00000034                                   67105+SMF92CBR DS    BL8       Bytes read                                     05-BPXYSMFR\n 0000003C                                   67106+SMF92CBW DS    BL8       Bytes written                                  05-BPXYSMFR\n 00000044                                   67107+SMF92CPN DS    CL64      Pathname                                       05-BPXYSMFR\n                         00000084           67108+SMF92FCL_LEN EQU *-SMF92FCL                                             05-BPXYSMFR\n                                            67109+*\n                                            67110+*\n                                            67111+*    Data Section for mmap subtype (subtype 12)\n                                            67112+*\n                                            67113+*\n                                            67114+*\n 00000000                00000000 00000018  67115+SMF92MMP DSECT                                                          05-BPXYSMFR\n 00000000                                   67116+SMF92MTO DS    BL8       time of mmap - STCK format                     05-BPXYSMFR\n 00000008                                   67117+SMF92MSZ DS    F         Number of bytes being memory mapped            05-BPXYSMFR\n 0000000C                                   67118+SMF92MTK DS    F         mmap file token (matches token in munmap data X05-BPXYSMFR\n                                                 +                         section\n 00000010                                   67119+SMF92MIN DS    F         file serial number                             05-BPXYSMFR\n 00000014                                   67120+SMF92MMDN DS   F         file unique device number                      05-BPXYSMFR\n                         00000018           67121+SMF92MMP_LEN EQU *-SMF92MMP                                             05-BPXYSMFR\n                                            67122+*\n                                            67123+*\n                                            67124+*    Data Section for munmap subtype (subtype 13)\n                                            67125+*\n                                            67126+*\n                                            67127+*\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  304\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000000                00000000 00000028  67128+SMF92MUN DSECT                                                          05-BPXYSMFR\n 00000000                                   67129+SMF92MUTO DS   BL8       time of mmap - STCK format                     05-BPXYSMFR\n 00000008                                   67130+SMF92MUTC DS   BL8       time of munmap - STCK format                   05-BPXYSMFR\n 00000010                                   67131+SMF92MUSZ DS   F         number of bytes being memory mapped            05-BPXYSMFR\n 00000014                                   67132+SMF92MUTK DS   F         mmap file token (matches token in mmap data   X05-BPXYSMFR\n                                                 +                         section\n 00000018                                   67133+SMF92MUIN DS   F         file serial number                             05-BPXYSMFR\n 0000001C                                   67134+SMF92MUDN DS   F         file unique device number                      05-BPXYSMFR\n 00000020                                   67135+SMF92MUIR DS   F         I/O blocks read                                05-BPXYSMFR\n 00000024                                   67136+SMF92MUIW DS   F         I/O blocks written                             05-BPXYSMFR\n                         00000028           67137+SMF92MUN_LEN EQU *-SMF92MUN                                             05-BPXYSMFR\n                                            67138+*\n                                            67139+*\n                                            67140+*    Data Section for File Delete Subtype (Subtype 14)\n                                            67141+*\n                                            67142+*\n                                            67143+*\n 00000000                00000000 000000CC  67144+SMF92DFL DSECT                                                          05-BPXYSMFR\n 00000000                                   67145+SMF92D   DS    0CL136    Delete information                             05-BPXYSMFR\n 00000000                                   67146+SMF92DFT DS    BL8       Delete time - STCK format                      05-BPXYSMFR\n 00000008                                   67147+SMF92DTY DS    X         File Type as defined in BPXYFTYP               05-BPXYSMFR\n 00000009                                   67148+SMF92DFLG DS   0X        Flags                                          05-BPXYSMFR\n                         00000080           67149+SMF92DREN EQU  X'80'     Rename record                                  05-BPXYSMFR\n 00000009                00000009 0000000A  67150+         ORG   SMF92DFLG+1                                              05-BPXYSMFR\n 0000000A                                   67151+         DS    H         Reserved                                       05-BPXYSMFR\n 0000000C                                   67152+SMF92DIN DS    F         File serial number                             05-BPXYSMFR\n 00000010                                   67153+SMF92DINP DS   F         File serial number of parent                   05-BPXYSMFR\n 00000014                                   67154+SMF92DDN DS    F         File unique device number                      05-BPXYSMFR\n 00000018                                   67155+SMF92DFS DS    CL44      File System Name                               05-BPXYSMFR\n 00000044                                   67156+SMF92DNL DS    F         Length of name for delete                      05-BPXYSMFR\n 00000048                                   67157+SMF92DFN DS    CL64      Name deleted                                   05-BPXYSMFR\n 00000088                                   67158+SMF92DR  DS    0CL68     Rename information                             05-BPXYSMFR\n 00000088                                   67159+SMF92DNLR DS   F         Length of name for rename                      05-BPXYSMFR\n 0000008C                                   67160+SMF92DFNR DS   CL64      Name deleted                                   05-BPXYSMFR\n                         000000CC           67161+SMF92DFL_LEN EQU *-SMF92DFL                                             05-BPXYSMFR\n                                            67162+*\n                                            67163+*\n                                            67164+*    Data Section for Ext Security Attr Change (Subtype 15)\n                                            67165+*\n                                            67166+*\n                                            67167+*\n 00000000                00000000 00000490  67168+SMF92ESA DSECT                                                          05-BPXYSMFR\n 00000000                                   67169+SMF92ESA_BASE DS 0CL144  Fixed Length Secion                            05-BPXYSMFR\n 00000000                                   67170+SMF92ACT DS    BL8       Change Time - STCK format                      05-BPXYSMFR\n 00000008                                   67171+SMF92ATY DS    X         File Type. See BPXYFTYP                        05-BPXYSMFR\n 00000009                                   67172+SMF92AFLG DS   X         Flags                                          05-BPXYSMFR\n 0000000A                                   67173+         DS    H         Reserved                                       05-BPXYSMFR\n 0000000C                                   67174+SMF92AIN DS    F         File Ino number                                05-BPXYSMFR\n 00000010                                   67175+SMF92ADN DS    F         File's File System devno                       05-BPXYSMFR\n 00000014                                   67176+SMF92AFS DS    CL44      File System Name                               05-BPXYSMFR\n 00000040                                   67177+SMF92AOLDGENVAL DS 0BL4  File's original gen values - same as          X05-BPXYSMFR\n                                                 +                         st_GenValue from BPXYSTAT.\n 00000040                                   67178+         DS    BL3                                                      05-BPXYSMFR\n 00000043                                   67179+SMF92AOLDGENVALSECBYTE DS 0B                                            05-BPXYSMFR\n                         00000010           67180+SMF92AOLDSHARELIB EQU X'10' Shared Library                              05-BPXYSMFR\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  305\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000004           67181+SMF92AOLDAPFAUTH EQU X'04' Program is APF Auth                          05-BPXYSMFR\n                         00000002           67182+SMF92AOLDPROGCTL EQU X'02' Program Controlled                           05-BPXYSMFR\n 00000043                00000043 00000044  67183+         ORG   SMF92AOLDGENVAL+4                                        05-BPXYSMFR\n 00000044                                   67184+SMF92AOLDSECATTRSC DS 0CL4 File's original Security flags in character X05-BPXYSMFR\n                                                 +                         form: A, P, S.\n 00000044                                   67185+SMF92AOLDATTRCHAR DS CL1 '>' Delimiter                                  05-BPXYSMFR\n 00000045                                   67186+SMF92AOLDSHRLIBC DS CL1  =S if Shared Lib was on                        05-BPXYSMFR\n 00000046                                   67187+SMF92AOLDAPFAUTHC DS CL1 =A if APF Auth was on                          05-BPXYSMFR\n 00000047                                   67188+SMF92AOLDPGMCTLC DS CL1  =P if Program Ctl was on                       05-BPXYSMFR\n 00000048                                   67189+SMF92ANEWGENVAL DS 0BL4  New gen values after the change same as       X05-BPXYSMFR\n                                                 +                         st_GenValue from BPXYSTAT.\n 00000048                                   67190+         DS    BL3                                                      05-BPXYSMFR\n 0000004B                                   67191+SMF92ANEWGENVALSECBYTE DS 0B                                            05-BPXYSMFR\n                         00000010           67192+SMF92ANEWSHARELIB EQU X'10' Shared Library                              05-BPXYSMFR\n                         00000004           67193+SMF92ANEWAPFAUTH EQU X'04' Program is APF Auth                          05-BPXYSMFR\n                         00000002           67194+SMF92ANEWPROGCTL EQU X'02' Program Controlled                           05-BPXYSMFR\n 0000004B                0000004B 0000004C  67195+         ORG   SMF92ANEWGENVAL+4                                        05-BPXYSMFR\n 0000004C                                   67196+SMF92ANEWSECATTRSC DS 0CL4 File's new Security flags in character      X05-BPXYSMFR\n                                                 +                         form: A, P, S.\n 0000004C                                   67197+SMF92ANEWATTRCHAR DS CL1 '>' Delimiter                                  05-BPXYSMFR\n 0000004D                                   67198+SMF92ANEWSHRLIBC DS CL1  =S if Shared Lib is on                         05-BPXYSMFR\n 0000004E                                   67199+SMF92ANEWAPFAUTHC DS CL1 =A if APF Auth is on                           05-BPXYSMFR\n 0000004F                                   67200+SMF92ANEWPGMCTLC DS CL1  =P if Program Ctl is on                        05-BPXYSMFR\n 00000050                                   67201+SMF92AOWNUID DS F        File Owner UID                                 05-BPXYSMFR\n 00000054                                   67202+SMF92AOWNGID DS F        File Owner GID                                 05-BPXYSMFR\n 00000058                                   67203+SMF92ASECLABEL DS CL8    File SecLabel                                  05-BPXYSMFR\n 00000060                                   67204+SMF92AAUDITFID DS CL16   RACF's File Id - this is the same as the      X05-BPXYSMFR\n                                                 +                         XXXX_FILE_ID in the various RACF SMF Type 80  X\n                                                 +                         audit records.\n 00000070                                   67205+         DS    CL20      Reserved                                       05-BPXYSMFR\n 00000084                                   67206+SMF92ACWDRC DS F         getcwd Error Return Code                       05-BPXYSMFR\n 00000088                                   67207+SMF92ACWDRSN DS F        getcwd Error Reason Code - If the full        X05-BPXYSMFR\n                                                 +                         pathname of the file could not be determined  X\n                                                 +                         these fields contain the return and reason    X\n                                                 +                         codes of the error. In this case the SMF92APN X\n                                                 +                         field will contain the relative pathname as   X\n                                                 +                         entered by the user. SMF92APN is a full       X\n                                                 +                         pathname if SMF92ACwdRc=0.\n 0000008C                                   67208+SMF92APNL DS   F         File Pathname length                           05-BPXYSMFR\n 00000090                                   67209+SMF92APN DS    CL1024    File Pathname - the absolute pathname as      X05-BPXYSMFR\n                                                 +                         entered by the user or the getcwd() value for X\n                                                 +                         the current working directory concatenated    X\n                                                 +                         with the relative name that was entered by    X\n                                                 +                         the user.\n                                            67210+*\n                                            67211+*    *****************************************************************\n                                            67212+*    *                                                               *\n                                            67213+*    * The SubType 15 record is variable length and ends at the end  *\n                                            67214+*    * of the pathname string within the SMF92APN field.\n                                            67215+*    * Security Attribute Character Values - for SMF92AOldSecAttrsC  *\n                                            67216+*    * and SMF92ANewSecAttrsC\n                                            67217+*    *                                                               *\n                                            67218+*    *****************************************************************\n                                            67219+*\n                                            67220+*\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  306\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        000000C1           67221+SMF92#SECATTRAPFAUTH EQU C'A'                                           05-BPXYSMFR\n                         000000D7           67222+SMF92#SECATTRPGMCTL EQU C'P'                                            05-BPXYSMFR\n                         000000E2           67223+SMF92#SECATTRSHARLIB EQU C'S'                                           05-BPXYSMFR\n                         0000006E           67224+SMF92#SECATTRDELIM EQU C'>'                                             05-BPXYSMFR\n                                            67225+*\n                                            67226+*    Version Constants - SMF92RVN\n                                            67227+*\n                                            67228+*\n                         0000F0F2           67229+SMF92#VERSION02 EQU C'02' Record version 02                             05-BPXYSMFR\n                         0000F0F1           67230+SMF92#VERSION01 EQU C'01' Record version 01                             05-BPXYSMFR\n                         0000F0F2           67231+SMF92#VERSION EQU C'02'  Record version num                             05-BPXYSMFR\n                                            67232+*\n                                            67233+*    Subtype Values - SMF92TYP & SMF92STP\n                                            67234+*\n                                            67235+*\n                         00000001           67236+SMF92#MOUNT EQU 1        Mount subtype                                  05-BPXYSMFR\n                         00000002           67237+SMF92#SUSPEND EQU 2      Suspend subtype                                05-BPXYSMFR\n                         00000004           67238+SMF92#RESUME EQU 4       Resume subtype                                 05-BPXYSMFR\n                         00000005           67239+SMF92#UNMOUNT EQU 5      UnMount subtype                                05-BPXYSMFR\n                         00000006           67240+SMF92#REMOUNT EQU 6      ReMount subtype                                05-BPXYSMFR\n                         00000007           67241+SMF92#MOVE EQU 7         Move subtype                                   05-BPXYSMFR\n                         0000000A           67242+SMF92#OPEN EQU 10        Open subtype                                   05-BPXYSMFR\n                         0000000B           67243+SMF92#CLOSE EQU 11       Close subtype                                  05-BPXYSMFR\n                         0000000C           67244+SMF92#MMAP EQU 12        Memmap subtype                                 05-BPXYSMFR\n                         0000000D           67245+SMF92#MUNMAP EQU 13      Memunmap subtype                               05-BPXYSMFR\n                         0000000E           67246+SMF92#DELETE EQU 14      Delete subtype                                 05-BPXYSMFR\n                         0000000F           67247+SMF92#EXTSEC EQU 15      Ext Security                                   05-BPXYSMFR\n                         00000490           67248+SMF92ESA_LEN EQU *-SMF92ESA                                             05-BPXYSMFR\n                                            67249+*                                                                  @D6A\n                                            67250+*        ERBSMFR 79\n                                            67252+*                                */\n                                            67253+*%ERBBGN1: ;\n                                            67254+*/********************************************************************/\n                                            67255+*/*                                                                  */\n                                            67256+*/* MODULE-NAME = ERBSMFR                                            */\n                                            67257+*/*                                                                  */\n                                            67258+*/* DESCRIPTIVE NAME = RMF SMF Record Mapping                        */\n                                            67259+*/*                                                                  */\n                                            67260+*/* PROPRIETARY-STATEMENT =                                          */\n                                            67261+*/*                                                                  */\n                                            67262+*/*      Licensed Materials - Property of IBM                        */\n                                            67263+*/*      \"Restricted Materials of IBM\"                               */\n                                            67264+*/*      5694-A01 Copyright IBM Corp. 1997, 2007                     */\n                                            67265+*/*                                                                  */\n                                            67266+*/*      Status = z/OS V1R9 RMF (HRM7740)                            */\n                                            67267+*/*                                                                  */\n                                            67268+*/*                                                                  */\n                                            67269+*/* METHOD OF ACCESS =                                               */\n                                            67270+*/*                                                                  */\n                                            67271+*/*   PL/X =                                                         */\n                                            67272+*/*     %INCLUDE SYSLIB(ERBSMFR) semicolon                           */\n                                            67273+*/*                                                                  */\n                                            67274+*/*     NOTE: Macro variables must be set to '1' for each record     */\n                                            67275+*/*           type desired. They are named IFARXX where XX is        */\n                                            67276+*/*           the record number (70-79).                             */\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  307\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           67277+*/*                                                                  */\n                                            67278+*/*           For SMF records 70, 72 and 74 an additional            */\n                                            67279+*/*           variable IFAR70x, IFAR72x or IFA74x = 'YES'            */\n                                            67280+*/*           requests the subtype x. Default is subtype 1.          */\n                                            67281+*/*                                                                  */\n                                            67282+*/*           For SMF Records 78 and 89 additional switches          */\n                                            67283+*/*           IFAR78X, resp. IFAR79X must be set to one,             */\n                                            67284+*/*           where X is a subtype of SMF record 78 (1-3)            */\n                                            67285+*/*           or SMF record 79 (1-E). If SMF record 78,              */\n                                            67286+*/*           subtype 2, is to be included the additional macro      */\n                                            67287+*/*           variable IFAR78V must be set to '1' to request         */\n                                            67288+*/*           automatic inclusion of the necessary mapping           */\n                                            67289+*/*           ERBVSDAT.                                              */\n                                            67290+*/*                                                                  */\n                                            67291+*/*   ASSEMBLER =                                                    */\n                                            67292+*/*                                                                  */\n                                            67293+*/*     ERBSMFR (N1,N2,N3,...) Where N1,N2,N3 are the record types   */\n                                            67294+*/*                            desired in the range 70-79            */\n                                            67295+*/*     NOTE: If record type 78 and/or 79 is requested all           */\n                                            67296+*/*           subtypes will be mapped.                               */\n                                            67297+*/*                                                                  */\n                                            67298+*/* DISTRIBUTION LIBRARY = SYS1.MACLIB                               */\n                                            67299+*/*                                                                  */\n                                            67300+*/* CHANGE-ACTIVITY = see below                                      */\n                                            67301+*/*                                                                  */\n                                            67302+*/*  $N0=SMFFORMT,HRM3102,,FRS: SMF RECORD RESTRUCTURING         @N0A*/\n                                            67303+*/*  $Q1=MISC,HRM3402,,SHR: Enhancements for SMF record 78       @Q1A*/\n                                            67304+*/*  OZ87634 Enhancements for SMF record 78                  @ZA87634*/\n                                            67305+*/*  $Y1=MISC,HRM4420,,THE: New COPYRIGHT text and PLAS 1.4      @Y1A*/\n                                            67306+*/*  $A9=PGRC,JRM4422,,DPN: Change to SMF record 71              @A9A*/\n                                            67307+*/*  $B1=R430,HRM4430,,THE: Distribution lib in prolog           @B1A*/\n                                            67308+*/*  $J1=CRYPTO,OW49808,,GUB: New SMF Record 70 Subtype 2        @J1A*/\n                                            67309+*/*  $01=V1R8,HRM7730,,GUB: z/OS V1R8 RMF                        @01A*/\n                                            67310+*/*                                                                  */\n                                            67311+*/********************************************************************/\n                                            67312+*%GOTO ERBBGN2;                  /* ASSEMBLER PART\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  308\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           67315+**/\n                                            67316+*/*** START OF SPECIFICATIONS ****************************************\n                                            67317+*01* Proprietary Statement:                                          *\n                                            67319+*\n                                            67320+*        PROPRIETARY STATEMENT:\n                                            67321+*           Licensed Materials - Property of IBM\n                                            67322+*           \"Restricted Materials of IBM\"\n                                            67323+*           Copyright IBM Corp. 1977, 2011                        @51C\n                                            67324+*\n                                            67325+*           Status: z/OS V1R13 RMF (HRM7780)                      @51C\n                                            67326+*\n                                            67327+*       ?ERBCOPY1 Y1(1983);\n                                            67328+*/*                                                                  *\n                                            67329+*                                                                    *\n                                            67330+*   Macro Name: ERBSMF79                                             *\n                                            67331+*                                                                    *\n                                            67332+*   Descriptive Name: Mapping Macro for SMF record type 79           *\n                                            67333+*                     (Monitor II) with following subtypes:          *\n                                            67334+*                                                                    *\n                                            67335+*                       1 - Address Space State Data                 *\n                                            67336+*                       2 - Address Space Resource Data              *\n                                            67337+*                       3 - Storage/Processor (SRCS) Data            *\n                                            67338+*                       4 - Paging Activity                          *\n                                            67339+*                       5 - Address Space SRM Data                   *\n                                            67340+*                       6 - Reserve (SENQR) Data                     *\n                                            67341+*                       7 - Enqueue Contention (SENQ) Data           *\n                                            67342+*                       9 - Device Activity                          *\n                                            67343+*                      11 - Page Data Set Activity                   *\n                                            67344+*                      12 - Channel Path Activity                    *\n                                            67345+*                      14 - I/O Queuing Activity                     *\n                                            67346+*                      15 - IRLM Long Lock Detection                 *\n                                            67347+*                                                                    *\n                                            67348+*                                                                    *\n                                            67349+*   DSECT names: SMF79HDR, SMF79PRO, R79CHL,                         *\n                                            67350+*                R791ELEM,                                           *\n                                            67351+*                R792ELEM,                                           *\n                                            67352+*                R793,                                               *\n                                            67353+*                R794,                                               *\n                                            67354+*                R795ELEM,                                           *\n                                            67355+*                R796ELEM,                                           *\n                                            67356+*                R797ELEM,                                           *\n                                            67357+*                R798ELEM,                                           *\n                                            67358+*                R799ELEM,                                           *\n                                            67359+*                R79AELEM,                                           *\n                                            67360+*                R79BCNTL, R79BELEM,                                 *\n                                            67361+*                R79CCNTL, R79CCHNL                                  *\n                                            67362+*                R79DCS, R79DCPD, R79DDS,                            *\n                                            67363+*                R79EGD, R79ECS, R79ECPD, R79EDS                     *\n                                            67364+*                R79FIRLM                                        @F1A*\n                                            67365+*                                                                    *\n                                            67366+*                                                                    *\n                                            67367+*   Function: This macro maps the complete SMF record type 79        *\n                                            67368+*             The record consists of 5 parts:                        *\n                                            67369+*             1. The fixed portion of the SMF header.                *\n                                            67370+*                This mapping is invoked by calling macro ERBHDR.    *\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  309\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           67371+*             2. The individual header extension which               *\n                                            67372+*                contains offset/length/number triplets              *\n                                            67373+*                to address the record parts following the           *\n                                            67374+*                RMF product section.                                *\n                                            67375+*             3. The RMF product section.                            *\n                                            67376+*                This mapping is invoked by calling macro ERBPRO.    *\n                                            67377+*             4. The RMF data control section.                       *\n                                            67378+*             5. The RMF data sections.                              *\n                                            67379+*                                                                    *\n                                            67380+*   Notes: None                                                      *\n                                            67381+*                                                                    *\n                                            67382+*   Method of access: See below                                      *\n                                            67383+*                                                                    *\n                                            67384+*   BAL: ERBSMF79                                                    *\n                                            67385+*                                                                    *\n                                            67386+*   Created by: ERBPCTBL                                             *\n                                            67387+*                                                                    *\n                                            67388+*   Pointed to by: local pointer                                     *\n                                            67389+*                                                                    *\n                                            67390+*   Subpool and Key: Subpool MFSBSUBP                                *\n                                            67391+*                                                                    *\n                                            67392+*   Serialization: None                                              *\n                                            67393+*                                                                    *\n                                            67394+*   Size:  SMF79HDR   68                                             *\n                                            67395+*          SMF79PRO   52                                             *\n                                            67396+*          R79CHL    104                                             *\n                                            67397+*          R791ELEM  236                                         @31A*\n                                            67398+*          R792ELEM  224                                         @31C*\n                                            67399+*          R793      102                                     @WA56739*\n                                            67400+*          R794      108                                         @Y4C*\n                                            67401+*          R795ELEM   79                                         @C1C*\n                                            67402+*          R796ELEM   86                                         @C2C*\n                                            67403+*          R797ELEM   92                                             *\n                                            67404+*          R798ELEM   52                                             *\n                                            67405+*          R799ELEM  104                                         @01C*\n                                            67406+*          R79AELEM   64                                         @Y4C*\n                                            67407+*          R79BCNTL    4                                             *\n                                            67408+*          R79BELEM   98                                         @C2C*\n                                            67409+*          R79CCNTL   20                                             *\n                                            67410+*          R79CCHNL  108                                         @22C*\n                                            67411+*          R79DCS     12                                             *\n                                            67412+*          R79DCPD    12                                             *\n                                            67413+*          R79DDS     32                                             *\n                                            67414+*          R79EGD      8                                             *\n                                            67415+*          R79ECS     12                                             *\n                                            67416+*          R79ECPD    32                                         @Z1C*\n                                            67417+*          R79EDS     32                                         @I3C*\n                                            67418+*          R79FIRLM  103                                         @F1A*\n                                            67419+*                                                                    *\n                                            67420+*   Deleted by:                                                      *\n                                            67421+*                                                                    *\n                                            67422+*   Distribution Library: SYS1.MACLIB                                *\n                                            67423+*                                                                    *\n                                            67424+*   Change Activity: See below                                       *\n                                            67425+*                                                                    *\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  310\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           67426+*   $N0=MON1,HRM3102,,WBS: NEW FOR RMF 3.1                       @N0A*\n                                            67427+*   CHANGE DECLARE FOR R79ACIDX SO THE VALUE IS UNSIGNED     @ZA69833*\n                                            67428+*   REDEFINE R79IST                                          @ZA70287*\n                                            67429+*   $O1=4381,JRM3212,,SHR: 4381 - SUPPORT                        @O1A*\n                                            67430+*   $P1=SRM,HRM3302,,THE: SRM - SUPPORT  (SAD-STCPS)             @P1A*\n                                            67431+*   $P2=ES,HRM3302,,KLZ: CHANGED LAYOUT / EXTENDED STORAGE       @P2A*\n                                            67432+*   $P3=MON2,HRM3302,,FRY: CHANGED LAYOUT / DOMAIN REPORT        @P3A*\n                                            67433+*   $P4=3090,HRM3302,,WEY: 3090 support                          @P4A*\n                                            67434+*   $P5=3090,HRM3302,,MLN: 3090 support                          @P5A*\n                                            67435+*   $E1=3351P,HRM3302,,FLJ: Support for 3351P                    @E1A*\n                                            67436+*   $P6=ES,HRM3302,,KLZ: PTM   PA70089  / EXTENDED STORAGE       @P6A*\n                                            67437+*   $Q1=MISC,HRM3402,,MLN: Converted to global ENQ               @Q1A*\n                                            67438+*   $S1=TRQ,JRM3412,,WRC: Support for SP2.1.7 True Ready Queue   @S1A*\n                                            67439+*   $Q2=MIG,HRM3402,,HEN: R794MAGE is moved and changed to           *\n                                            67440+*                         fixed 31.                      OZ95298 @Q2A*\n                                            67441+*   NO CHANGE - RESHIPPED TO SUPERCEDE OZ95298               @ZA98025*\n                                            67442+*   $R0=220SUP,JRM3422,,WRC: SUPPORT FOR MVS SP2.2.0             @R0A*\n                                            67443+*   $U1=SGSUP,JRM3512,,KLZ: Storage Group support                @U1A*\n                                            67444+*   $U2=UCBDMC,JRM3512,,TJI: UCBDMC constraint relief            @U2A*\n                                            67445+*   $W1=SP310,HRM4410,,SOT: MVS SP 3.1.0 support                 @W1A*\n                                            67446+*   $W2=SP310,HRM4410,,PAE: IARXC return code handling           @W2A*\n                                            67447+*   $W3=LSCR,HRM4410,,BHL: Large systems constraint relief       @W3A*\n                                            67448+*   $W4=APAR,HRM4410,,SOT: Integration of APAR OY05739           @W4A*\n                                            67449+*   $W5=MISC,HRM4410,,PAE: ASCB frame count constraint relief    @W5A*\n                                            67450+*   $W6=MISC,JRM4411,,SHR: Clean up to reduce compiler messages  @W6A*\n                                            67451+*   $W7=SP310E,JRM4411,,PAE: MVS SP 3.1.0E Support               @W7A*\n                                            67452+*   $W8=SP310E,JRM4411,,PAE: Stor isolation for ESO hiperspaces  @W8A*\n                                            67453+*   $Y1=DMSR,HRM4420,,CLL: Model Type (SHARE SOMVSP87001)        @Y1A*\n                                            67454+*   $Y2=LJM,HRM4420,,LAH: Large Job Management Support           @Y2A*\n                                            67455+*   Expanded storage frame count constraint relief           @YA28328*\n                                            67456+*   Support for MVS/ESA Large Job Management SPE             @YA20560*\n                                            67457+*   $Z1=OY29112,HRM4420,,WRC: ESCA Basis                         @Z1A*\n                                            67458+*   $Z2=OY29112,HRM4420,,WRC: Serial & Switch Supprt             @Z2A*\n                                            67459+*   SHR: Include FLPA/EFLPA frames and real frame zero       @YA34458*\n                                            67460+*   $A1=APPC,JRM4421,,BAJU: APPC tolerating support              @A1A*\n                                            67461+*   $A2=WSET,JRM4421,,BB: Working Set Management / Block Paging  @A2A*\n                                            67462+*   $A3=WSET,JRM4421,,RTN: Working Set Management / Block Paging @A3A*\n                                            67463+*   $A9=MISC,JRM4422,,DPN: Recompile                             @A9A*\n                                            67464+*   RN:  Increases max number of channel paths per LCU to 8  @YA41310*\n                                            67465+*   GBO: Fix 0C9 calculating AVERAGE TRANSACTION TIME        @YA41781*\n                                            67466+*   PFU: Insert 4 Byte Field for EXCP count                  @YA42170*\n                                            67467+*   $B1=R430,HRM4430,,HOL: Modifies DISTLIB statement            @B1A*\n                                            67468+*   $B2=OMVS,HRM4430,,RPT: OPEN/MVS Toleration Support           @B2A*\n                                            67469+*   $BA=MIF,JRM4422,,BHL: ESCON Multiple Image Facility SPE      @BAA*\n                                            67470+*   LGO: INCLUDE CTC TYPES                                   @YA55031*\n                                            67471+*   $C1=WLM2,HRM4440,,HKH: WLM support, subtypes 1, 2, 5, 8      @C1A*\n                                            67472+*   $C2=4KUCB,HRM4440,,FF: Four Digit Device Numbers (>4K UCB)   @C2A*\n                                            67473+*   LAN: Increase max number of channel paths for 308X/4381  @YA61897*\n                                            67474+*   $C3=NEWCH,HRM5510,,FF: New channel support (OSA,ISC,Pacer)   @C3A*\n                                            67475+*   HUE: ABEND0C9 in ERBRDEV due to invalid data because     @YA66876*\n                                            67476+*        Mon I interval ended while ERBGDEV accessed EDDBB   @YA66876*\n                                            67477+*   HUE: correct incompatible change from @YA55031           @YA67090*\n                                            67478+*        may cause PP convertion errors (430 to 510), FF     @YA67090*\n                                            67479+*   FF:  KRO0397: 0C4 with Reason Code 10 in ERBGENQR        @WA02579*\n                                            67480+*   HUE: ABEND0C9 when dividing TCB time (from ASCBEJST)     @WA03326*\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  311\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           67481+*        by 1000 as result does not fit in 31 bit field      @WA03326*\n                                            67482+*        Equivalent to OW02302                               @WA03326*\n                                            67483+*   BHL: LPAR enhancements                                   @WA05435*\n                                            67484+* $D1=CAP,HRM5520,,JKE: Captured Storage support                 @D1A*\n                                            67485+* $D2=R79,HRM5520,,DK: SMF Record 79(1) Enhancement for SDSF     @D2A*\n                                            67486+* $D3=NEWISD,HRM5520,,FF: Integrated System Device           @WA10257*\n                                            67487+*   SUW: Add new Flag R799DTF - Device connect or pending or @WA15094*\n                                            67488+*                               disconnect time is invalid   @WA15094*\n                                            67489+* $E1=IPM,OW17898,,HBE: Enabling of M II reports                 @E1A*\n                                            67490+*   AJU: Corrects comment for R793DQ and R792EXCT+R791EXCT   @WA19913*\n                                            67491+* $E2=MISC,HRM6603,,HOL: Preemptable SRB support                 @E2A*\n                                            67492+* $F1=IRLM,HRM6604,,HOL: IMS Long Lock Report                    @F1A*\n                                            67493+* GUB: Additional field in 79.15 record                      @WA27252*\n                                            67494+* FDL: Add ORG for header adjustment (PMR16340)              @WA28830*\n                                            67495+* $G1=ACR,HRM6606,,PS: Channel Type Support                      @G1A*\n                                            67496+* $G2=PAV,HRM6606,,PS: PAV device support                        @G2A*\n                                            67497+* $H1=FICON,HRM6607,,PS:  Fibre Channel Support                  @H1A*\n                                            67498+* $I1=MISC,HRM7703,,FDL: Correct comments on R79xCL              @I1A*\n                                            67499+* $I2=TBIT,HRM7703,,SHR: Honors T-bit in SCHIB                   @I2A*\n                                            67500+*  PS: R79CCPTS to small for values bigger than 16MB         @WA39393*\n                                            67501+* SHR: PAV device support                                    @WA31701*\n                                            67502+* $I3=DCM,HRM7703,,SHR: Dynamic CHPID Management support         @I3A*\n                                            67503+* $I4=WLM,HRM7703,,HOL: SDSF Support                             @I4A*\n                                            67504+* $I5=BIT64,HRM7703,,VTH: 64 Bit real support                    @I5A*\n                                            67505+* $J1=GMI,HRM7705,,BEN: WLM Goal Mode Inhibitor removal          @J1A*\n                                            67506+* $J2=SDSF,HRM7705,,GUB: SDSF Support                            @J2A*\n                                            67507+* $J3=MISC,HRM7705,,GUB: New swap reason code                    @J3A*\n                                            67508+* GUB: Temporal affinity                                     @WA46622*\n                                            67509+* $J4=IQDIO,HRM7705,,PS:  iQDIO Support                          @J4A*\n                                            67510+* $J5=HYDRA,HRM7705,,PS:  Hydra 1.75 support                     @J5A*\n                                            67511+*  PS: IQDIO support Monitor II/III in I/O part              @WA50187*\n                                            67512+* $K1=XMP,HRM7708,,PS: T-Rex toleration                          @K1A*\n                                            67513+* $K2=MISC,HRM7708,,GUB: Swap data set removal                   @K2A*\n                                            67514+* $K3=XMP,HRM7708,,PS: T-Rex exploitation                        @K3A*\n                                            67515+* $K4=XMP,HRM7708,,PS: T-Rex Support 2-Gigabit change            @K4A*\n                                            67516+* FDL: Prepares for up to 65535 devices                      @WA55906*\n                                            67517+* FDL: Replaces R793 SMF record fields by 4-byte fields      @WA56739*\n                                            67518+* FDL: Subtype 255 reserved for ILOCK processing             @WA57131*\n                                            67519+*  PS: Changed comments for SMF73SMP and SMF73CSS            @OA04260*\n                                            67520+* $K5=IFA,OA05731,,WLR: IFA support                              @K5A*\n                                            67521+* $K6=PTERO,OA07950,,WLR: PTero support and IFA completion       @K6A*\n                                            67522+* $L1=PPS,OA09921,,WLR: Preferred Paths Support                  @L1A*\n                                            67523+* VTH: System Utility Processor (SUP) support                @OA13499*\n                                            67524+* $02=GT128,HRM7730,,GUB: >128G real storage support             @02A*\n                                            67525+*  PS: R79BRLEN now includes R79BELEM totally                @OA16748*\n                                            67526+* $01=HPV,OA12865,,PS: HyperPAV Support                          @01A*\n                                            67527+* RPE: New EXCP Count Field ( DoubleWord )                   @OA15850*\n                                            67528+* PMU: Change comment for R791TCPC                           @OA21046*\n                                            67529+* $21=WLMJ7Z,HRM7750,,VTH: WLM enqueue mgmt stage 3 support      @21A*\n                                            67530+* $22=FCX,OA21140,,GUB: zHPF support                             @22A*\n                                            67531+* $31=FITS,HRM7760,,GUB: Additional fields for zIIP and zAAP     @31A*\n                                            67532+* PMU: Adds new region type introduced with IMS APAR PK74078 @OA28931*\n                                            67533+* $51=SCM,HRM7780,,WLR: SCM Support                              @51A*\n                                            67534+* $52=MISC,HRM7780,,JKU: CICS Response Time Management           @52A*\n                                            67535+*                                                                    *\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  312\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           67536+****** END OF SPECIFICATIONS *****************************************\n                                            67537+*                                                                    */\n                                            67538+*        %GOTO PLSMACRO;\n                                            67539+*\n                                            67540+*/*\n-\n                                            67542+**********************  COMMON SMF HEADER  ****************************\n                                            67544+***** START OF SPECIFICATIONS *****************************************\n                                            67545+*                                                                     *\n                                            67546+*   MODULE-NAME = ERBHDR                                              *\n                                            67547+*                                                                     *\n                                            67548+*   DESCRIPTIVE-NAME = GENERAL MAPPING OF RMF SMF RECORD HEADER       *\n                                            67549+*                                                                     *\n                                            67551+*\n                                            67552+*        PROPRIETARY STATEMENT:\n                                            67553+*           Licensed Materials - Property of IBM\n                                            67554+*           \"Restricted Materials of IBM\"\n                                            67555+*           Copyright IBM Corp. 1977, 2011                        @51C\n                                            67556+*\n                                            67557+*           Status: z/OS V1R13 RMF (HRM7780)                      @51C\n                                            67558+*\n                                            67559+*\n                                            67560+*   FUNCTION : THIS MACRO MAPS THE GENERAL HEADER PART OF RMF         *\n                                            67561+*              SMF RECORDS DEPENDING ON THE MACRO CALL.               *\n                                            67562+*              IT IS CALLED BY MACRO ERBSMF                           *\n                                            67563+*                                    ERBSMF70                         *\n                                            67564+*                                       :                             *\n                                            67565+*                                    ERBSMF79                         *\n                                            67566+*                                                                     *\n                                            67567+*   MODULE-TYPE = BILINGUAL MAPPING MACRO                             *\n                                            67568+*                                                                     *\n                                            67569+*   METHOD OF INVOCATION = SEE BELOW                                  *\n                                            67570+*                                                                     *\n                                            67571+*      PLS - .QUESTION MARK.ERBHDR ATTRIBUT(ATTRIBUTES)               *\n                                            67572+*            .QUESTION MARK.ERBHDR TYPE(70) ATTRIBUT(ATTRIBUTES)      *\n                                            67573+*                                       :                             *\n                                            67574+*            .QUESTION MARK.ERBHDR TYPE(79) ATTRIBUT(ATTRIBUTES)      *\n                                            67575+*            WHERE ATTRIBUTES ARE ANY ACCEPTABLE PLS ATTRIBUTES       *\n                                            67576+*            FOR STRUCTURE DECLARATIONS.                              *\n                                            67577+*                                                                     *\n                                            67578+*      BAL - ERBHDR                                                   *\n                                            67579+*          - ERBHDR 70                                                *\n                                            67580+*                :                                                    *\n                                            67581+*          - ERBHDR 79                                                *\n                                            67582+*                                                                     *\n                                            67583+*   DISTRIBUTION LIBRARY: ARMFMAC1                                @B1A*\n                                            67584+*                                                                     *\n                                            67585+*   CHANGE-ACTIVITY = SEE BELOW                                       *\n                                            67586+* $N1=PP,HRM3102,,NEL: RMF 3.1 POST PROCESSOR ENHANCEMENTS            *\n                                            67587+* $P1=MISC,HRM3302,,CIH: MACRO COMMENTARY ENHANCEMENTS            @P1A*\n                                            67588+* $R0=220SUP,JRM3422,,WRC: Support for MVS/SP220                  @R0A*\n                                            67589+* $X0=OY11330,HRM4410,,WRC: Berryman support (PR/SM) BFY          @X0A*\n                                            67590+* $W1=SP310E,JRM4411,,PAE: MVS/ESA support                        @W1A*\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  313\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           67591+* $A1=SP420,JRM4421,,BGBO: MVS SP 4 support                       @A1A*\n                                            67592+* $B1=R430,HRM4430,,THE: Distribution lib in prolog               @B1A*\n                                            67593+* GBO: Cleanup of PADI-inconsistencies                        @WA05544*\n                                            67594+*                                                                     *\n                                            67595+****** END OF SPECIFICATIONS ******************************************\n 00000000                00000000 00000044  67596+SMF79HDR  DSECT                                                         05-ERBHDR\n 00000000                                   67597+SMF79HDC  DS    CL36     COMPLETE HEADER+PRODUCT SECTION TRIPL @WA05544 05-ERBHDR\n 00000024                00000024 00000000  67598+          ORG   SMF79HDC                                       @WA05544 05-ERBHDR\n 00000000                                   67599+SMF79LEN  DS    BL2      RECORD LENGTH                                  05-ERBHDR\n 00000002                                   67600+SMF79SEG  DS    BL2      SEGMENT DESCRIPTOR                             05-ERBHDR\n 00000004                                   67601+SMF79FLG  DS    BL1      HEADER FLAG BYTE                               05-ERBHDR\n                         00000080           67602+SMF79RRF  EQU   X'80'    NEW RECORD FORMAT                              05-ERBHDR\n                         00000040           67603+SMF79SUT  EQU   X'40'    SUBTYPES USED                             @R0A 05-ERBHDR\n                         00000010           67604+SMF79V4   EQU   X'10'    MVS/ESA Version 4                         @A1A 05-ERBHDR\n                         00000008           67605+SMF79ESA  EQU   X'08'    MVS/ESA VERSION                           @W1A 05-ERBHDR\n                         00000004           67606+SMF79VXA  EQU   X'04'    MVS/XA VERSION                            @R0A 05-ERBHDR\n                         00000002           67607+SMF79OS   EQU   X'02'    OPERATING SYSTEM IS OS/VS2                     05-ERBHDR\n                         00000001           67608+SMF79BFY  EQU   X'01'    System running in PR/SM mode              @J1C 05-ERBHDR\n 00000005                                   67609+SMF79RTY  DS    BL1      RECORD TYPE                                    05-ERBHDR\n 00000006                                   67610+SMF79TME  DS    BL4      TOD RECORD WRITTEN                             05-ERBHDR\n 0000000A                                   67611+SMF79DTE  DS    PL4      DATE RECORD WRITTEN                            05-ERBHDR\n 0000000E                                   67612+SMF79SID  DS    CL4      SYSTEM ID FROM INSTALLATION                    05-ERBHDR\n 00000012                                   67613+SMF79SSI  DS    CL4      SUBSYSTEM ID (RMF)                             05-ERBHDR\n 00000016                                   67614+SMF79STY  DS    BL2      SUBTYPE                                        05-ERBHDR\n 00000018                                   67615+SMF79TRN  DS    BL2      NUMBER OF TRIPLETS IN THIS RECORD              05-ERBHDR\n 0000001A                                   67616+          DS    BL2      RESERVED                                       05-ERBHDR\n 0000001C                                   67617+SMF79PRS  DS    BL4      OFFSET TO RMF PRODUCT SECTION                  05-ERBHDR\n 00000020                                   67618+SMF79PRL  DS    BL2      LENGTH OF RMF PRODUCT SECTION                  05-ERBHDR\n 00000022                                   67619+SMF79PRN  DS    BL2      NUMBER OF RMF PRODUCT SECTIONS                 05-ERBHDR\n-\n                                            67621+**********************  INDIVIDUAL HEADER EXTENSION  ******************\n 00000024                                   67622+SMF79MCS DS    F -                OFFSET TO MONITOR II CONTROL SECTION  04-ERBSMF79\n 00000028                                   67623+SMF79MCL DS    H -                LENGTH OF MONITOR II CONTROL SECTION  04-ERBSMF79\n 0000002A                                   67624+SMF79MCN DS    H -                NUMBER OF MONITOR II CONTROL SECTION  04-ERBSMF79\n 0000002C                                   67625+SMF79ASS DS    F -                OFFSET TO DATA SECTION                04-ERBSMF79\n 00000030                                   67626+SMF79ASL DS    H -                LENGTH OF DATA SECTION                04-ERBSMF79\n 00000032                                   67627+SMF79ASN DS    H -                NUMBER OF DATA SECTION                04-ERBSMF79\n 00000034                                   67628+SMF79DCS DS    F -                OFFSET TO DATA CONTROL SECTION        04-ERBSMF79\n 00000038                                   67629+SMF79DCL DS    H -                LENGTH OF DATA CONTROL SECTION        04-ERBSMF79\n 0000003A                                   67630+SMF79DCN DS    H -                NUMBER OF DATA CONTROL SECTION        04-ERBSMF79\n 0000003C                                   67631+SMF79QSS DS    F -                OFFSET TO I/O QUEUING GLBL.SECT. @P4A 04-ERBSMF79\n 00000040                                   67632+SMF79QSL DS    H -                LENGTH OF I/O QUEUING GLBL.SECT. @P4A 04-ERBSMF79\n 00000042                                   67633+SMF79QSN DS    H -                NUMBER OF I/O QUEUING GLBL.SECT. @P4A 04-ERBSMF79\n                         00000044           67634+SMF79ENX EQU   *                  End of ind. header extension @WA28830 04-ERBSMF79\n-\n                                            67636+**********************  Special 79.F Header Extension *****************\n 00000044                00000044 00000024  67637+         ORG   SMF79MCS                                            @F1A 04-ERBSMF79\n 00000024                                   67638+SMF79FHX DS    0XL8                                            @WA28830 04-ERBSMF79\n 00000024                                   67639+SMF79FPO DS    F                  Offset to IMS Long Lock Data Sct @F1A 04-ERBSMF79\n 00000028                                   67640+SMF79FPL DS    H                  Length of IMS Long Lock Data Sct @F1A 04-ERBSMF79\n 0000002A                                   67641+SMF79FPN DS    H                  Number of IMS Long Lock Data Sct @F1A 04-ERBSMF79\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  314\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        0000002C           67642+SMF79FNX EQU   *                  End of 79.F header extension @WA28830 04-ERBSMF79\n 0000002C                0000002C 00000044  67643+         ORG   SMF79ENX                                        @WA28830 04-ERBSMF79\n-\n                                            67645+**********************  COMMON SMF PRODUCT SECTION  *******************\n                                            67647+*\n                                            67648+**/  BLOCKANSWER SKIP COLUMN(2);\n                                            67649+*'/* START OF SPECIFICATIONS ****************************************/'\n                                            67650+*'/*01* PROPRIETARY STATEMENT=                                      */'\n                                            67651+*    ENDANSWER;\n                                            67652+*/*\n                                            67654+*\n                                            67655+*        PROPRIETARY STATEMENT:\n                                            67656+*           Licensed Materials - Property of IBM\n                                            67657+*           \"Restricted Materials of IBM\"\n                                            67658+*           Copyright IBM Corp. 1977, 2011                        @51C\n                                            67659+*\n                                            67660+*           Status: z/OS V1R13 RMF (HRM7780)                      @51C\n                                            67661+*\n                                            67662+**/  BLOCKANSWER SKIP COLUMN(2);\n                                            67663+*'      ?ERBCOPY1;                                                    '\n                                            67664+*'/*                                                                */'\n                                            67665+*'/*01* DESCRIPTIVE_NAME: General mapping of RMF Product Section    */'\n                                            67666+*'/*02*  ACRONYM:  PRO                                              */'\n                                            67667+*'/*                                                                */'\n                                            67668+*'/*01* MACRO-NAME:  ERBPRO                                         */'\n                                            67669+*'/*                                                                */'\n                                            67670+*'/*01* DSECT NAME:  SMFnnPRO, if record type specified             */'\n                                            67671+*'/*                 RMFPRO  , if record type omitted               */'\n                                            67672+*'/*                                                                */'\n                                            67673+*'/*01* COMPONENT:  Resource Measurement Facility (27404)           */'\n                                            67674+*'/*                                                                */'\n                                            67675+*'/*01* EYE-CATCHER:  N/A                                           */'\n                                            67676+*'/*02*  OFFSET:  N/A                                               */'\n                                            67677+*'/*02*  LENGTH:  N/A                                               */'\n                                            67678+*'/*                                                                */'\n                                            67679+*'/*01* STORAGE ATTRIBUTES:                                         */'\n                                            67680+*'/*02*  SUBPOOL:    same as SMF record mapping                     */'\n                                            67681+*'/*02*  KEY:        same as SMF record mapping                     */'\n                                            67682+*'/*02*  RESIDENCY:  same as SMF record mapping                     */'\n                                            67683+*'/*02*  MAIN STORAGE:      N/A                                     */'\n                                            67684+*'/*02*  AUXILIARY STORAGE: N/A                                     */'\n                                            67685+*'/*02*  VIRTUAL STORAGE:   N/A                                     */'\n                                            67686+*'/*                                                                */'\n                                            67687+*'/*01* SIZE: 104 bytes - common section                        @C1C*/'\n                                            67688+*'/*         + 16 bytes - split/reassembly control (static)     @C1C*/'\n                                            67689+*'/*         +  4 bytes * SMFHDR extension triplet -            @C1C*/'\n                                            67690+*'/*                      - split/reassembly (variable)         @C1C*/'\n                                            67691+*'/*                                                                */'\n                                            67692+*'/*01* CREATED BY: N/A                                             */'\n                                            67693+*'/*                                                                */'\n                                            67694+*'/*01* POINTED TO BY: N/A                                          */'\n                                            67695+*'/*                                                                */'\n                                            67696+*'/*01* SERIALIZATION:                                              */'\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  315\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           67697+*'/*     Not provided                                               */'\n                                            67698+*'/*                                                                */'\n                                            67699+*'/*01* FUNCTION:                                                   */'\n                                            67700+*'/*02*  This macro maps the RMF product section of RMFs            */'\n                                            67701+*'/*     SMF records depending on the macro call.                   */'\n                                            67702+*'/*     It is called by macro ERBSMF                               */'\n                                            67703+*'/*                           ERBSMF70                             */'\n                                            67704+*'/*                              :                                 */'\n                                            67705+*'/*                           ERBSMF79                             */'\n                                            67706+*'/*     NOTE:                                                      */'\n                                            67707+*'/*      When this data section is build in a NON-RMF environment, */'\n                                            67708+*'/*      all data are zero except:                             @G1A*/'\n                                            67709+*'/*         SMF74PRD = product name, e.g. CRR instead of RMF   @G1A*/'\n                                            67710+*'/*         SMF74IST = time (0hhmmssF),                        @G1A*/'\n                                            67711+*'/*                    time when the record is processed       @G1A*/'\n                                            67712+*'/*         SMF74DAT = date (0cyydddF),                        @G1A*/'\n                                            67713+*'/*                    date when the record is processed       @G1A*/'\n                                            67714+*'/*         SMF74SRL = SMF record level change number          @G1A*/'\n                                            67715+*'/*         SMF74IET = 8 TOKEN, 8 bytes TOD value              @G1A*/'\n                                            67716+*'/*                    TOD value when the record is processed  @G1A*/'\n                                            67717+*'/*                                                                */'\n                                            67718+*'/*01* METHOD OF ACCESS:                                           */'\n                                            67719+*'/*02*  ASM:                                                       */'\n                                            67720+*'/*      - ERBPRO                                                  */'\n                                            67721+*'/*      - ERBPRO 70                                               */'\n                                            67722+*'/*            :                                                   */'\n                                            67723+*'/*      - ERBPRO 79                                               */'\n                                            67724+*'/*                                                                */'\n                                            67725+*'/*02*  PL/X:                                                      */'\n                                            67726+*'/*      .question mark.ERBPRO ATTRIBUT(attributes)                */'\n                                            67727+*'/*      .question mark.ERBPRO TYPE(70) ATTRIBUT(attributes)       */'\n                                            67728+*'/*      :                                                         */'\n                                            67729+*'/*      .question mark.ERBPRO TYPE(79) ATTRIBUT(attributes)       */'\n                                            67730+*'/*                                                                */'\n                                            67731+*'/*      where attributes are any acceptable PL/X attributes       */'\n                                            67732+*'/*      for structure declarations.                               */'\n                                            67733+*'/*                                                                */'\n                                            67734+*'/*01* MODULE-TYPE: Bilingual mapping macro                        */'\n                                            67735+*'/*                                                                */'\n                                            67736+*'/*01* DELETED BY: N/A                                             */'\n                                            67737+*'/*                                                                */'\n                                            67738+*'/*01* FREQUENCY:  N/A                                             */'\n                                            67739+*'/*                                                                */'\n                                            67740+*'/*01* DEPENDENCIES: None                                          */'\n                                            67741+*'/*                                                                */'\n                                            67742+*'/*01* DISTRIBUTION LIBRARY: ARMFMAC1                              */'\n                                            67743+*'/*                                                                */'\n                                            67744+*'/*01* CHANGE ACTIVITY:                                            */'\n                                            67745+*'/* $N1=PP,HRM3102,,NEL: RMF 3.1 POST PROCESSOR ENHANCEMENTS       */'\n                                            67746+*'/* $O1=4381SP,JRM3212,,SHR: 4381 - SUPPORT                    @O1A*/'\n                                            67747+*'/* $O2=SOLVSP,JRM3212,,SHR: SOFTWARE LEVEL SUPPORT            @O2A*/'\n                                            67748+*'/* $P1=3090,HRM3302,,HEN: 3090 - SUPPORT                      @P1A*/'\n                                            67749+*'/* $P2=ES,HRM3302,,CIH: SP2.2 EXTENDED STORE                  @P2A*/'\n                                            67750+*'/* $Q1=MISC,HRM3402,,WEY: CSA FIXED FRAMES COUNT INTERFACE    @Q1A*/'\n                                            67751+*'/* $X0=OY11330,HRM4410,,WRC: PR/SM support                    @X0A*/'\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  316\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           67752+*'/* SMF Record Change Level Support                        @YA28449*/'\n                                            67753+*'/* $Z1=SERIAL,HRM4420,,WRC: Serial & switch                   @Z1A*/'\n                                            67754+*'/* $B1=SYNC,HRM4430,,GBO: Synchronize Measurements            @B1A*/'\n                                            67755+*'/* $C1=WLM,HRM4440,,HKH: WLM Support                          @C1A*/'\n                                            67756+*'/* $C2=SPLIT,HRM4440,,SCD: Split/Reassembly                   @C2A*/'\n                                            67757+*'/* $E1=CVT,HRM5530,,SUW: Report new product type OS/390 and       */'\n                                            67758+*'/*         software level. Will be added with APAR OW15873        */'\n                                            67759+*'/*         (OS/390 Release 1).                                @E1A*/'\n                                            67760+*'/* $G1=CACHE,HRM6606,,THE: 256 device support                 @G1A*/'\n                                            67761+*'/* $I1=BIT64,HRM7703,,GUB: 64 Bit real support                @I1A*/'\n                                            67762+*'/* $J1=MISC,HRM7705,,GUB: Comment changes for zSeries         @J1A*/'\n                                            67763+*'/* FDL: Prepares for up to 65535 devices                  @WA55906*/'\n                                            67764+*'/* $K1=MISC,HRM7708,,GUB: Allign and update comments          @K1A*/'\n                                            67765+*'/* $K2=IFA,OA05731,,WLR: IFA support                          @K2A*/'\n                                            67766+*'/* GUB: System Utility Processor (SUP) support            @OA13499*/'\n                                            67767+*'/* $11=LPS,HRM7740,,WLR: New function                         @11A*/'\n                                            67768+*'/* $21=COMM,HRM7750,,WLR: 64-bit Common Memory support        @21A*/'\n                                            67769+*'/* $22=ICN,HRM7750,,GUB: Dynamic CPU addition                 @22A*/'\n                                            67770+*'/*                                                                */'\n                                            67771+*'/* END OF SPECIFICATIONS ******************************************/'\n                                            67772+*    ENDANSWER;                     /*\n 00000000                00000000 00000068  67773+SMF79PRO DSECT                                                          05-ERBPRO\n 00000000                                   67774+SMF79MFV DS    CL2      RMF VERSION NUMBER, WITH INTRODUCTION OF   @O2C 05-ERBPRO\n                                            67775+*                       THE MVS SOFTWARE LEVEL THE FORMAT CHANGES  @O2A\n                                            67776+*                       TO PACKED 'VRLF'                           @O2A\n                                            67777+*                       ... V = VERSION NUMBER                     @O2A\n                                            67778+*                       ... R = RELEASE NUMBER                     @O2A\n                                            67779+*                       ... L = MODIFICATION LEVEL                 @O2A\n 00000002                                   67780+SMF79PRD DS    CL8      PRODUCT NAME                                    05-ERBPRO\n 0000000A                                   67781+SMF79IST DS    PL4      TOD MONITOR INTERVAL START: 0HHMMSSF            05-ERBPRO\n 0000000E                                   67782+SMF79DAT DS    PL4      DATE MONITOR INTERVAL START: 00YYDDDF           05-ERBPRO\n 00000012                                   67783+SMF79INT DS    PL4      DURATION OF MONITOR INTERVAL: MMSSTTTF          05-ERBPRO\n                                            67784+*\n 00000016                                   67785+SMF79MFL DS    BL2      RESERVED                                   @J1C 05-ERBPRO\n 00000018                                   67786+SMF79SAM DS    BL4      NUMBER OF SAMPLES                               05-ERBPRO\n 0000001C                                   67787+SMF79RV2 DS    BL2      RESERVED                                        05-ERBPRO\n 0000001E                                   67788+SMF79FLA DS    BL2      FLAGS                                           05-ERBPRO\n                         00000080           67789+SMF79CNV EQU   X'80'    DATA CONVERT.FROM VER.2                         05-ERBPRO\n                         00000040           67790+SMF79ISS EQU   X'40'    INVALID SAMPLES TO BE SKIPPED              @Q1A 05-ERBPRO\n                         00000020           67791+SMF79M3R EQU   X'20'    Record was written by RMF Monitor III      @B1A 05-ERBPRO\n                         00000010           67792+SMF79ISM EQU   X'10'    Interval was written under SMF control     @B1A 05-ERBPRO\n 00000020                                   67793+SMF79RLS DS    CL4      RESERVED                                   @J1C 05-ERBPRO\n 00000024                                   67794+SMF79CYC DS    PL4      CYCLE IN PACKED DECIMAL 000TTTTF                05-ERBPRO\n 00000028                                   67795+SMF79MVS DS    CL8      MVS software level (consists of an acronym @J1C 05-ERBPRO\n                                            67796+*                       and the version, release, and modification @J1C\n                                            67797+*                       level - ZVvvrrmm).                         @J1C\n 00000030                                   67798+SMF79IML DS    XL1      Indicates the type of processor complex    @J1C 05-ERBPRO\n                                            67799+*                       on which data measurements were taken      @J1C\n                                            67800+*                       X'03' = 9672, zSeries, z9              @OA13499\n 00000031                                   67801+SMF79PRF DS    BL1      PROCESSOR FLAGS                            @P2A 05-ERBPRO\n                         00000080           67802+SMF79QES EQU   X'80'    Equipped with Expanded Storage             @P2A 05-ERBPRO\n                         00000040           67803+SMF79CNE EQU   X'40'    Equipped with ESCON Channel                @Z1A 05-ERBPRO\n                         00000020           67804+SMF79DRC EQU   X'20'    ESCON Director in configuration            @Z1A 05-ERBPRO\n                         00000010           67805+SMF79EME EQU   X'10'    System in z/ARCH mode                      @I1A 05-ERBPRO\n                         00000008           67806+SMF79PRI EQU   X'08'    At least one zAAP is currently installed   @22C 05-ERBPRO\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  317\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000004           67807+SMF79PRP EQU   X'04'    At least one zIIP is currently installed   @22C 05-ERBPRO\n                         00000002           67808+SMF79PED EQU   X'02'    Enhanced DAT architecture available        @21C 05-ERBPRO\n 00000032                                   67809+SMF79PTN DS    BL1      PR/SM PARTITION NUMBER                     @Z1C 05-ERBPRO\n 00000033                                   67810+SMF79SRL DS    BL1      SMF record level                       @YA28449 05-ERBPRO\n 00000034                                   67811+SMF79IET DS    CL8      Interval expiration time token             @B1A 05-ERBPRO\n 0000003C                                   67812+SMF79LGO DS    CL8      Offset GMT to local time                   @C1A 05-ERBPRO\n 00000044                                   67813+SMF79RAO DS    BL4      Offset to reassembly area relative to      @C2A 05-ERBPRO\n                                            67814+*                       start of RMF product section               @C2A\n 00000048                                   67815+SMF79RAL DS    BL2      Length of reassembly area. Length depends  @C2A 05-ERBPRO\n                                            67816+*                       on the record type/subtype but is fix for  @C2A\n                                            67817+*                       a specific type/subtype                    @C2A\n 0000004A                                   67818+SMF79RAN DS    BL2      Number of reassembly area. Only 0 or 1 are @C2A 05-ERBPRO\n                                            67819+*                       valid. This field is used to indicate      @C2A\n                                            67820+*                       whether a SMF record is a broken record    @C2A\n                                            67821+*                       (0 = NOT broken, 1 = is a broken record).  @C2A\n                                            67822+*                       Offset and length are only valid if        @C2A\n                                            67823+*                       SMFxxRAN = 1. Reassembly area is only      @C2A\n                                            67824+*                       present in broken records                  @C2A\n 0000004C                                   67825+SMF79OIL DS    BL2      Original interval length                   @C2A 05-ERBPRO\n                                            67826+*                       (as defined in the session option or by    @C2A\n                                            67827+*                        SMF)                                      @C2A\n 0000004E                                   67828+SMF79SYN DS    BL2      SYNC value in seconds                      @C2A 05-ERBPRO\n 00000050                                   67829+SMF79GIE DS    CL8      Projected gathering interval end           @C2A 05-ERBPRO\n                                            67830+*                       (STCK format) GMT time                     @C2A\n 00000058                                   67831+SMF79XNM DS    CL8      Sysplex name                               @C1A 05-ERBPRO\n                                            67832+*                       (as defined in ECVTSPLX)                   @C1A\n 00000060                                   67833+SMF79SNM DS    CL8      System name for current system             @C1A 05-ERBPRO\n                                            67834+*                       (as defined in CVTSNAME)                   @C1A\n 00000000                00000000 00000010  67835+SMF79RHD DSECT                                                          05-ERBPRO\n 00000000                                   67836+SMF79RBR DS    BL2      Total number of broken records build from  @C2A 05-ERBPRO\n                                            67837+*                       the original large record                  @C2A\n 00000002                                   67838+SMF79RSQ DS    BL2      Sequence number of this broken record.     @C2A 05-ERBPRO\n                                            67839+*                       Every broken record build from the same    @C2A\n                                            67840+*                       large record must have a unique sequence   @C2A\n                                            67841+*                       number. Broken records with sequence       @C2A\n                                            67842+*                       numbers from 1 to SMFxxRBR must exist      @C2A\n 00000004                                   67843+SMF79RIO DS    BL4      Offset to first reassembly information     @C2A 05-ERBPRO\n                                            67844+*                       block relative to start of reassembly      @C2A\n                                            67845+*                       area header                                @C2A\n 00000008                                   67846+SMF79RIL DS    BL2      Length of reassembly information block     @C2A 05-ERBPRO\n 0000000A                                   67847+SMF79RIN DS    BL2      Number of reassembly information blocks    @C2A 05-ERBPRO\n                                            67848+*                       (same as SMFxxTRN in header section)       @C2A\n 0000000C                                   67849+         DS    BL4      Reserved                                   @C2A 05-ERBPRO\n 00000000                00000000 00000004  67850+SMF79RBL DSECT                                                          05-ERBPRO\n 00000000                                   67851+SMF79RNN DS    BL2      Total number of sections in the original   @C2A 05-ERBPRO\n                                            67852+*                       large record. This field contains          @C2A\n                                            67853+*                       information of how many sections of a      @C2A\n                                            67854+*                       specific type were contained in the        @C2A\n                                            67855+*                       original SMF record. This field is a copy  @C2A\n                                            67856+*                       of the number field of the triplet in the  @C2A\n                                            67857+*                       original (non broken) record               @C2A\n 00000002                                   67858+SMF79RPP DS    BL2      Position of the first of one or more       @C2A 05-ERBPRO\n                                            67859+*                       consecutive section(s) described by this   @C2A\n                                            67860+*                       block as in the original record. Values in @C2A\n                                            67861+*                       the range of 1 to SMFxxRNN are valid for   @C2A\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  318\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           67862+*                       correct processing. A value of 0 will skip @C2A\n                                            67863+*                       processing of this information block. This @C2A\n                                            67864+*                       field provides information where the       @C2A\n                                            67865+*                       sections that are part of this broken      @C2A\n                                            67866+*                       record were placed in the original record  @C2A\n                                            67867+*                       before the split took place. The actual    @C2A\n                                            67868+*                       number of consecutive sections contained   @C2A\n                                            67869+*                       in this record is available from the       @C2A\n                                            67870+*                       actual triplet in the header extension     @C2A\n-\n                                            67872+**********************  MONITOR II CONTROL SECTION  *******************\n 00000000                00000000 00000070  67873+R79CHL   DSECT                    COMMON RECORD 79 HEADER               04-ERBSMF79\n 00000000                                   67874+R79GTOD  DS    XL4 -              DATA GATHERER CALL TOD                04-ERBSMF79\n 00000004                                   67875+R79LF2   DS    XL1 -              FLAG BYTE                             04-ERBSMF79\n                         00000080           67876+R79PAR   EQU   X'80' -            NOT ENOUGH RELOCATE SECTION TO        04-ERBSMF79\n                         00000040           67877+R79SG    EQU   X'40' -            Report to be sorted by SG        @U1A 04-ERBSMF79\n                         00000020           67878+R79RSM   EQU   X'20' -            Invalid RSM data obtained        @W2A 04-ERBSMF79\n                         00000010           67879+R79GOAL  EQU   X'10' -            System is in GOAL mode           @C1A 04-ERBSMF79\n                         00000008           67880+R79TRXI  EQU   X'08' -            Invalid transaction data         @C1A 04-ERBSMF79\n                         00000004           67881+R79SRMC  EQU   X'04' -            SRM mode changed                 @C1A 04-ERBSMF79\n                         00000002           67882+R79INV   EQU   X'02' -            invalid data from Mon I      @YA66876 04-ERBSMF79\n                                            67883+*                                 (DEV PGSP IOQ)               @YA66876\n                                            67884+*                                 COMPLETE DATA GATHERING\n 00000005                                   67885+R79RV1   DS    XL1 -              RESERVED                              04-ERBSMF79\n 00000006                                   67886+R79SES   DS    CL2 -              SESSION NAME                          04-ERBSMF79\n 00000008                                   67887+R79RSV   DS    XL2 -              RESERVED                              04-ERBSMF79\n 0000000A                                   67888+R79USER  DS    XL2 -              USER FIELD                            04-ERBSMF79\n 0000000C                                   67889+R79RID   DS    CL8 -              MEASUREMENT NAME                      04-ERBSMF79\n 00000014                                   67890+R79CTXTL DS    XL2 -              LEN OF COMMAND TEXT                   04-ERBSMF79\n 00000016                                   67891+R79CTEXT DS    CL32 -             COMMAND TEXT                          04-ERBSMF79\n 00000036                                   67892+R79DTXTL DS    XL2 -              LEN OF DEFAULT DR TEXT                04-ERBSMF79\n 00000038                                   67893+R79DTEXT DS    CL32 -             DEFAULT DR TEXT                       04-ERBSMF79\n 00000058                                   67894+R79IST   DS    CL4 -              MONITOR I INTERVAL START TIME         04-ERBSMF79\n                                            67895+*                                 IN 0HHMMSSF FORMAT   @ZA70287\n 0000005C                                   67896+R79TSR   DS    XL2                Total number of small records    @W3A 04-ERBSMF79\n 0000005E                                   67897+         DS    XL2                Reserved for future use          @W3A 04-ERBSMF79\n 00000060                                   67898+R79TOT   DS    XL4                Total number of data sections in      04-ERBSMF79\n                                            67899+*                                 large record                     @W3A\n 00000064                                   67900+R79NXT   DS    XL4                Number of data sections in following  04-ERBSMF79\n                                            67901+*                                 small records                    @W3A\n 00000068                                   67902+R79IWMTK DS    CL8                Token returned from IWMRCOLL          04-ERBSMF79\n                                            67903+*                                 service                          @C1A\n                                            67904+*\n                                            67905+*\n                                            67906+*        RELOCATE BLOCK FOR SUBTYPE 1\n                                            67907+*\n 00000000                00000000 000000EC  67908+R791ELEM DSECT                    MAPPING OF ELEMENT                    04-ERBSMF79\n 00000000                                   67909+R791ASID DS    XL2                ADDRESS SPACE IDENTIFIER              04-ERBSMF79\n 00000002                                   67910+R791JBN  DS    CL8                NAME OF JOB                           04-ERBSMF79\n 0000000A                                   67911+R791DMN  DS    XL2                DOMAIN NUMBER                         04-ERBSMF79\n                                            67912+*                                 not applicable in GOAL mode      @C1C\n 0000000C                                   67913+R791NPG  DS    XL2                PERFORMANCE GROUP                     04-ERBSMF79\n                                            67914+*                                 not applicable in GOAL mode      @C1C\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  319\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000000E                                   67915+R791PGP  DS    XL2                PERFORMANCE GROUP PERIOD              04-ERBSMF79\n                                            67916+*                                 not applicable in GOAL mode      @C1C\n 00000010                                   67917+R791TTOD DS    XL4                REAL TIME INTO TRANSACTION       @J2C 04-ERBSMF79\n                                            67918+*                                 (MILLISECONDS)\n                                            67919+*\n 00000014                                   67920+R791CL   DS    CL2                CURRENT LOCATION                      04-ERBSMF79\n                                            67921+*\n                                            67922+*                              CONTENTS   MEANING\n                                            67923+*                              --------   -------\n                                            67924+*                                   IN  - IN STORAGE\n                                            67925+*                                   OT  - SWAPPED OUT AND READY\n                                            67926+*                                   LO  - LOGICALLY SWAPPED    @G537NLS\n                                            67927+*                                   NS  - NON-SWAPPABLE\n                                            67928+*                                   WM  - WAIT QUEUE/MSO\n                                            67929+*                                   WL  - WAIT QUEUE/LONG WAIT\n                                            67930+*                                   WT  - WAIT QUEUE/TERM WAIT\n                                            67931+*                                   WO  - WAIT QUEUE/other reasons @I1A\n                                            67932+*                                   DL  - TSO user delayed by SRM\n                                            67933+*                                         to meet response time\n                                            67934+*                                         objective                @I1A\n                                            67935+*                                   PR  - PRIVILEGED\n                                            67936+*                                   >>  - TRANSITIONING OUT\n                                            67937+*                                   <<  - TRANSITIONING IN\n 00000016                                   67938+R791TAS  DS    XL2                TYPE OF USER                          04-ERBSMF79\n                                            67939+*\n                                            67940+*                              CONTENTS   MEANING\n                                            67941+*                              --------   -------\n                                            67942+*                                   0 - BATCH\n                                            67943+*                                   1 - STARTED TASK\n                                            67944+*                                   2 - MOUNT TASK\n                                            67945+*                                   3 - TSO\n                                            67946+*                                   4 - ASCH                       @A1A\n                                            67947+*                                   5   OMVS                       @B2A\n 00000018                                   67948+R791SRC  DS    CL2                REASON LAST SWAP OUT                  04-ERBSMF79\n                                            67949+*\n                                            67950+*                              CONTENTS   MEANING\n                                            67951+*                              --------   -------\n                                            67952+*                                   TI - TERMINAL INPUT\n                                            67953+*                                   TO - TERMINAL OUTPUT\n                                            67954+*                                   LW - LONG WAIT\n                                            67955+*                                   XS - AUX STORAGE SHORT\n                                            67956+*                                   RS - REAL STORAGE SHORT\n                                            67957+*                                   DW - DETECTED WAIT\n                                            67958+*                                   RQ - REQUESTED SWAP\n                                            67959+*                                   NQ - CAP ENQ\n                                            67960+*                                   EX - CAP EXCHANGE\n                                            67961+*                                   US - CAP UNI-SWAP\n                                            67962+*                                   TS - TRANSITION SWAP       @ZA27329\n                                            67963+*                                   IC - Improve central storage usage\n                                            67964+*                                                                  @A3A\n                                            67965+*                                   IP - Improve system paging rate\n                                            67966+*                                                                  @A3A\n                                            67967+*                                   MR - Make room to swap in an\n                                            67968+*                                        out-too-long user         @A3A\n                                            67969+*                                   AW - APPC wait                 @A1A\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  320\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           67970+*                                   IW - OMVS input wait           @B2A\n                                            67971+*                                   OW - OMVS output wait          @B2A\n                                            67972+*                                   SR - In-real swap              @J3A\n                                            67973+*                                   00 - UNKNOWN\n                                            67974+*\n 0000001A                                   67975+R791DP   DS    XL2 -              DISPATCHER PRIORITY                   04-ERBSMF79\n 0000001C                                   67976+R791SEQN DS    XL2                RESERVED                         @S1C 04-ERBSMF79\n 0000001E                                   67977+R791RSV1 DS    XL2                Reserved since 4.1.0             @W5C 04-ERBSMF79\n 00000020                                   67978+R791RSV2 DS    XL2                Reserved since 4.1.0             @W5C 04-ERBSMF79\n 00000022                                   67979+R791SWC  DS    XL2                TRANSACTION SWAP COUNT                04-ERBSMF79\n 00000024                                   67980+R791SWMR DS    XL2                SRM WORKLOAD RECOM VALUE              04-ERBSMF79\n 00000026                                   67981+         DS    XL2                Reserved                         @A3C 04-ERBSMF79\n 00000028                                   67982+         DS    XL2                Reserved                         @A3C 04-ERBSMF79\n 0000002A                                   67983+R791WMS  DS    XL4                SRM SSERVICE FOR THE CURRENT          04-ERBSMF79\n                                            67984+*                                 TRANSACTION SINCE THE LAST SWAP IN\n 0000002E                                   67985+R791TCPU DS    XL4                Total CPU time consumed on behalf     04-ERBSMF79\n                                            67986+*                                 of this address space in milliseconds\n                                            67987+*                                 (ascbejst+ascbsrbt+assbasst).    @E2C\n                                            67988+*                                 Wraps after 4 Giga millisec  @WA02302\n 00000032                                   67989+         DS    XL2                Reserved                         @A3C 04-ERBSMF79\n 00000034                                   67990+         DS    XL2                Reserved                     @YA28328 04-ERBSMF79\n 00000036                                   67991+R791ESCT DS    XL4                Number of expanded storage frames     04-ERBSMF79\n                                            67992+*                                 used by job                  @YA28328\n 0000003A                                   67993+R791RSV3 DS    XL2                Reserved since 4.1.0             @W5C 04-ERBSMF79\n 0000003C                                   67994+R791PIN  DS    XL4                Page in count                    @W1A 04-ERBSMF79\n 00000040                                   67995+R791TRTM DS    XL4                Transaction residency time       @W1A 04-ERBSMF79\n 00000044                                   67996+R791FLG  DS    XL1                Flags                            @W1A 04-ERBSMF79\n                         00000080           67997+R791XM   EQU   X'80'              -- Cross memory address space    @W1A 04-ERBSMF79\n                         00000040           67998+R791PMON EQU   X'40'              On = data in R791CTAR is valid.       04-ERBSMF79\n                                            67999+*                                  Off = not valid.                @A3A\n                         00000020           68000+R791VALV EQU   X'20'              On = data in R791VAL is valid.        04-ERBSMF79\n                                            68001+*                                  Off = not valid.                @A3A\n                         00000010           68002+R791GOAL EQU   X'10'              On = system is in GOAL mode      @C1A 04-ERBSMF79\n                         00000008           68003+R791SRV  EQU   X'08'              On = this address space is a          04-ERBSMF79\n                                            68004+*                                 server address space             @C1A\n                                            68005+*                                  Off = GOAL specified for this\n                                            68006+*                                  address space is being honored\n                                            68007+*                                  by WLM                          @C1A\n                         00000004           68008+R791QSC  EQU   X'04'              On = address space has been           04-ERBSMF79\n                                            68009+*                                 quiesced by a RESET command      @C1A\n                         00000002           68010+R791TXME EQU   X'02'              Like RASDTRXNMGMTEXEMPT          @I4A 04-ERBSMF79\n                         00000001           68011+R791TAFF EQU   X'01'              On = address space has temporal       04-ERBSMF79\n                                            68012+*                                 affinities, same as RASDTAF  @WA46622\n 00000045                                   68013+R791FLG2 DS    XL1                Additional flags                 @I4C 04-ERBSMF79\n                         00000080           68014+R791CPRC EQU   X'80'              Same as RASDCPROTCPU             @I4A 04-ERBSMF79\n                         00000040           68015+R791CPRE EQU   X'40'              Same as RASDASPROTSTG            @I4A 04-ERBSMF79\n                         00000020           68016+R791CPRI EQU   X'20'              Same as RASDCPROTSTG             @I4A 04-ERBSMF79\n                         00000010           68017+R791CPUP EQU   X'10'              Same as RASDCPUPROTECTED         @I4A 04-ERBSMF79\n                         00000008           68018+R791STOP EQU   X'08'              Same as RASDSTGPROTECTED         @I4A 04-ERBSMF79\n                         00000004           68019+R791CRMP EQU   X'04'              The dispatch priority of the          04-ERBSMF79\n                                            68020+*                                 address space is currently\n                                            68021+*                                 promoted due to a chronic\n                                            68022+*                                 resource contention              @21A\n                         00000002           68023+R791TXMB EQU   X'02'              Like RASDTRXNMGMTBOTH            @52A 04-ERBSMF79\n 00000046                                   68024+R791FMCT DS    XL4                NUMBER OF REAL STORAGE FRAMES    @W5A 04-ERBSMF79\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  321\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000004A                                   68025+R791WSS  DS    XL4                WORKING SET AT LAST SWAP IN      @W5A 04-ERBSMF79\n 0000004E                                   68026+R791TWSS DS    XL4                SRM TARGET WORKING SET SIZE      @W5A 04-ERBSMF79\n 00000052                                   68027+R791ESHP DS    XL4                Number of hiperspace expanded storage 04-ERBSMF79\n                                            68028+*                                 pages used by job                @W7A\n 00000056                                   68029+R791ESVI DS    XL4                Number of VIO expanded storage        04-ERBSMF79\n                                            68030+*                                 pages used by job                @W7A\n 0000005A                                   68031+R791HIN  DS    XL4                Number of hiperspace page ins    @W8A 04-ERBSMF79\n 0000005E                                   68032+R791HRMS DS    XL4                Number of ESO hiperspace read         04-ERBSMF79\n                                            68033+*                                 misses by job                    @W8A\n 00000062                                   68034+R791BPIN DS    XL4                Number of blocked pages brought       04-ERBSMF79\n                                            68035+*                                  in from DASD                    @A3A\n 00000066                                   68036+R791PINE DS    XL4                Number of pages brought in from       04-ERBSMF79\n                                            68037+*                                  expanded storage                @A3A\n 0000006A                                   68038+R791BPNE DS    XL4                Number of blocked pages brought       04-ERBSMF79\n                                            68039+*                                  in from expanded storage        @A3A\n 0000006E                                   68040+R791CTAR DS    XL4                Central storage target number of      04-ERBSMF79\n                                            68041+*                                  frames                          @A3A\n 00000072                                   68042+R791VAL  DS    XL4                Recommendation value for WSM          04-ERBSMF79\n                                            68043+*                                  managed address spaces          @A3A\n 00000076                                   68044+R791SCL  DS    CL8                Service class name               @C1A 04-ERBSMF79\n 0000007E                                   68045+R791SCP  DS    BL2                Service class period             @C1A 04-ERBSMF79\n 00000080                                   68046+R791WKLD DS    CL8                Workload name                    @C1A 04-ERBSMF79\n 00000088                                   68047+R791RGRP DS    CL8                Resource group name              @C1A 04-ERBSMF79\n 00000090                                   68048+R791SPI  DS    XL4                Number of page-ins from               04-ERBSMF79\n                                            68049+*                                 auxiliary storage\n                                            68050+*                                 for shared page groups           @D1A\n 00000094                                   68051+R791CMNI DS    XL4                Number of common pages for current    04-ERBSMF79\n                                            68052+*                                 transaction (= R792CMNI)         @D2A\n 00000098                                   68053+R791PNV  DS    XL4                Number of non-vio pages for current   04-ERBSMF79\n                                            68054+*                                 transaction (= R792PNV)          @D2A\n 0000009C                                   68055+R791PVIO DS    XL4                Number of vio pages for current       04-ERBSMF79\n                                            68056+*                                 transaction (= R792PVIO)         @D2A\n 000000A0                                   68057+R791EXCT DS    XL4                EXCP count for                        04-ERBSMF79\n                                            68058+*                                 this step (= R792EXCT)           @D2A\n 000000A4                                   68059+R791TCPC DS    XL4                Total CPU time consumed in this       04-ERBSMF79\n                                            68060+*                                 address space in milliseconds\n                                            68061+*                                 (ascbejst+ascbsrbt           @OA21046\n                                            68062+*                                 +(assbphtm-assbphtm_base))   @OA21046\n 000000A8                                   68063+R791ASST DS    XL4                CPU time consumed by preemptible-     04-ERBSMF79\n                                            68064+*                                 class SRBs running on behalf of\n                                            68065+*                                 this address space in milliseconds\n                                            68066+*                                 (assbasst)                       @E2A\n 000000AC                                   68067+R791PHTM DS    XL4                CPU time consumed by preemptible-     04-ERBSMF79\n                                            68068+*                                 class SRBs running in this address\n                                            68069+*                                 space in milliseconds (assbphtm) @E2A\n 000000B0                                   68070+R791RCL  DS    CL8                Report class name                @I4A 04-ERBSMF79\n 000000B8                                   68071+R791MLIM DS    CL8                Address space memory limit            04-ERBSMF79\n                                            68072+*                                 in units of MB                   @J2A\n 000000C0                                   68073+R791TIFA DS    XL4                CPU time consumed on zAAPs (IFAs)     04-ERBSMF79\n                                            68074+*                                 (ASSB_TIME_ON_IFA)               @K6C\n 000000C4                                   68075+R791TCP  DS    XL4                CPU time consumed on standard CPs     04-ERBSMF79\n                                            68076+*                                 (ASSB_TIME_ON_CP). Only valid if\n                                            68077+*                                 zAAPs or zIIPs in configuration\n                                            68078+*                                                              @OA13499\n 000000C8                                   68079+R791TIFC DS    XL4                CPU time consumed on standard CPs by  04-ERBSMF79\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  322\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           68080+*                                 zAAP (IFA) eligible work\n                                            68081+*                                 (ASSB_TIME_IFA_ON_CP)            @K6C\n 000000CC                                   68082+R791NFFI DS    XL4                Normalization factor for zAAP time.   04-ERBSMF79\n                                            68083+*                                 Used to convert between real zAAP\n                                            68084+*                                 times and \"normalized\" zAAP times,\n                                            68085+*                                 i.e. the equivalent time on a\n                                            68086+*                                 standard CP. Multiply R791TIFA by\n                                            68087+*                                 this value and divide by 256 to\n                                            68088+*                                 calculate the normalized zAAP time.\n                                            68089+*                                                                  @K6A\n 000000D0                                   68090+R791TSUP DS    XL4                CPU time consumed on zIIPs            04-ERBSMF79\n                                            68091+*                                 (ASSB_TIME_ON_zIIP)          @OA13499\n 000000D4                                   68092+R791TSUC DS    XL4                CPU time consumed on standard CPs     04-ERBSMF79\n                                            68093+*                                 by zIIP eligible work\n                                            68094+*                                 (ASSB_TIME_zIIP_ON_CP)       @OA13499\n 000000D8                                   68095+R791NFFS DS    XL4                Normalization factor for zIIP time.   04-ERBSMF79\n                                            68096+*                                 Used to convert between real zIIP\n                                            68097+*                                 times and \"normalized\" zIIP times,\n                                            68098+*                                 i.e. the equivalent time on a\n                                            68099+*                                 standard CP. Multiply R791TSUP by\n                                            68100+*                                 this value and divide by 256 to\n                                            68101+*                                 calculate the normalized zIIP time.\n                                            68102+*                                                              @OA13499\n 000000DC                                   68103+R791EXCW DS    CL8                EXCP Count ( DoubleWord )    @OA15850 04-ERBSMF79\n 000000E4                                   68104+R791PHTA DS    XL4                zAAP-only equivalent of R791PHTM      04-ERBSMF79\n                                            68105+*                                 (ASSB_IFA_PHTM).\n                                            68106+*                                 This is normalized time          @31A\n 000000E8                                   68107+R791PHTI DS    XL4                zIIP-only equivalent of R791PHTM      04-ERBSMF79\n                                            68108+*                                 (ASSB_zIIP_PHTM).\n                                            68109+*                                 This is normalized time          @31A\n                         000000EC           68110+R791RLEN EQU   *-R791ELEM         LENGTH OF ONE RELOCATE BLOCK          04-ERBSMF79\n                         00000000           68111+R791FLEN EQU   0                  LENGTH OF ONE FIXED BLOCK             04-ERBSMF79\n                                            68112+*                                 WE ONLY HAVE RELOCATE BLOCKS\n                                            68113+*\n                                            68114+*        RELOCATE BLOCK FOR SUBTYPE 2\n                                            68115+*\n                                            68116+*\n 00000000                00000000 000000E0  68117+R792ELEM DSECT                    MAPPING OF ELEMENT                    04-ERBSMF79\n 00000000                                   68118+R792ASID DS    XL2                ASID ADDRESS SPACE IDENTIFIER         04-ERBSMF79\n 00000002                                   68119+R792JBN  DS    CL8                NAME OF JOB                           04-ERBSMF79\n 0000000A                                   68120+R792DMN  DS    XL2                DOMAIN NUMBER                         04-ERBSMF79\n                                            68121+*                                 not applicable in GOAL mode      @C1C\n 0000000C                                   68122+R792NPG  DS    XL2                PERFORMANCE GROUP                     04-ERBSMF79\n                                            68123+*                                 not applicable in GOAL mode      @C1C\n 0000000E                                   68124+R792CL   DS    CL2                CURRENT LOCATION                      04-ERBSMF79\n                                            68125+*\n                                            68126+*                              CONTENTS   MEANING\n                                            68127+*                              --------   -------\n                                            68128+*                                   IN  - IN STORAGE\n                                            68129+*                                   OT  - SWAPPED OUT AND READY\n                                            68130+*                                   LO  - LOGICALLY SWAPPED\n                                            68131+*                                   NS  - NON-SWAPPABLE\n                                            68132+*                                   WM  - WAIT QUEUE/MSO\n                                            68133+*                                   WL  - WAIT QUEUE/LONG WAIT\n                                            68134+*                                   WT  - WAIT QUEUE/TERM WAIT\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  323\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           68135+*                                   WO  - WAIT QUEUE/other reasons @I1A\n                                            68136+*                                   DL  - TSO user delayed by SRM\n                                            68137+*                                         to meet response time\n                                            68138+*                                         objective                @I1A\n                                            68139+*                                   PR  - PRIVILEGED\n                                            68140+*                                   >>  - TRANSITIONING OUT\n                                            68141+*                                   <<  - TRANSITIONING IN\n                                            68142+*\n                                            68143+*\n 00000010                                   68144+R792TAS  DS    XL2                TYPE OF USER                          04-ERBSMF79\n                                            68145+*\n                                            68146+*                              CONTENTS   MEANING\n                                            68147+*                              --------   -------\n                                            68148+*                                   0 - BATCH\n                                            68149+*                                   1 - STARTED TASK\n                                            68150+*                                   2 - MOUNT TASK\n                                            68151+*                                   3 - TSO\n                                            68152+*\n                                            68153+*                                   4 - ASCH                       @A1A\n                                            68154+*                                   5 - OMVS                       @B2A\n                                            68155+*\n 00000012                                   68156+R792TRC  DS    XL2                TRANSACTION COUNT                     04-ERBSMF79\n 00000014                                   68157+R792TTOD DS    XL4                TRANSACTION ELAPSED TIME,             04-ERBSMF79\n                                            68158+*                                 IN MILLISECONDS\n 00000018                                   68159+R792PRFX DS    XL4                NUMBER OF PRIVATE FIXED FRAMES        04-ERBSMF79\n 0000001C                                   68160+R792RSV1 DS    XL2                Reserved since 4.1.0             @W5C 04-ERBSMF79\n 0000001E                                   68161+R792SVAR DS    XL4                SRM SERVICE ABSORPTION RATE FOR STEP  04-ERBSMF79\n 00000022                                   68162+R792TCPU DS    XL4                TOTAL TCB TIME FOR STEP          @R0C 04-ERBSMF79\n                                            68163+*                                 IN MILLISECONDS.                 @R0A\n                                            68164+*                                 Wraps after 4 Giga millisec  @WA02302\n 00000026                                   68165+R792PSS  DS    0CL8               STEP PRODUCT OF FRAME IN MILLISECONDS 04-ERBSMF79\n 00000026                                   68166+R792PSS1 DS    XL4                HIGH ORDER WORD                       04-ERBSMF79\n 0000002A                                   68167+R792PSS2 DS    XL4                LOW ORDER WORD                        04-ERBSMF79\n 0000002E                                   68168+R792EJST DS    XL4                Total CPU time consumed on behalf     04-ERBSMF79\n                                            68169+*                                 of this address space in millisecs.\n                                            68170+*                                 (ascbejst+ascbsrbt+assbasst).    @E2C\n                                            68171+*                                 Wraps after 4 Giga millisec  @WA02302\n 00000032                                   68172+R792TSRM DS    XL4                TOTAL SRM SERVICE FOR STEP            04-ERBSMF79\n 00000036                                   68173+R792RTM  DS    XL4                RESIDENT TIME FOR STEP IN SECONDS     04-ERBSMF79\n 0000003A                                   68174+R792EXCP DS    XL2                EXCP COUNT FOR STEP                   04-ERBSMF79\n 0000003C                                   68175+R792CMNI DS    XL4                NUMBER OF COMMON PAGES FOR CURRENT    04-ERBSMF79\n                                            68176+*                                 TRANSACTION\n 00000040                                   68177+R792PNV  DS    XL4                NUMBER OF NON-VIO PAGES FOR CURRENT   04-ERBSMF79\n                                            68178+*                                 TRANSACTION\n 00000044                                   68179+R792PVIO DS    XL4                NUMBER OF VIO PAGES FOR CURRENT       04-ERBSMF79\n                                            68180+*                                 TRANSACTION\n 00000048                                   68181+R792FXBL DS    XL4                NUMBER OF FIXED FRAMES WHICH ARE      04-ERBSMF79\n                                            68182+*                                 LOCATED BELOW 16M REAL\n 0000004C                                   68183+R792PSWP DS    XL4                NUMBER OF PAGES SWAPPED IN FOR        04-ERBSMF79\n                                            68184+*                                 CURRENT TRANSACTION\n 00000050                                   68185+R792LPAI DS    XL4                NUMBER OF LPA PAGES SWAPPED IN FOR    04-ERBSMF79\n                                            68186+*                                 CURRENT TRANSACTION\n 00000054                                   68187+R792CSAI DS    XL4                NUMBER OF CSA PAGES SWAPPED IN FOR    04-ERBSMF79\n                                            68188+*                                 CURRENT TRANSACTION\n 00000058                                   68189+R792LSQA DS    XL4                NUMBER OF LSQA FIXED FRAMES           04-ERBSMF79\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  324\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000005C                                   68190+R792NLQF DS    XL4                NUMBER OF NON-LSQA FIXED FRAMES       04-ERBSMF79\n 00000060                                   68191+R792TDEV DS    XL4                TOTAL DEVICE CONNECT TIME IN          04-ERBSMF79\n                                            68192+*                                 MILLISECONDS\n 00000064                                   68193+R792RSV2 DS    XL2                Reserved since 4.1.0             @W5C 04-ERBSMF79\n 00000066                                   68194+R792PIN  DS    XL4                PAGE-IN COUNT                         04-ERBSMF79\n 0000006A                                   68195+R792TRTM DS    XL4                TRANSACTION RESIDENCY TIME            04-ERBSMF79\n 0000006E                                   68196+R792FLG  DS    XL1                FLAGS:                                04-ERBSMF79\n                         00000080           68197+R792XM   EQU   X'80'              -- CROSS MEMORY ADDRESS SPACE         04-ERBSMF79\n                         00000040           68198+R792RSM  EQU   X'40'              Invalid RSM data for address          04-ERBSMF79\n                                            68199+*                                      space obtained              @W2A\n                         00000020           68200+R792RSV3 EQU   X'20'              Reserved                         @C1A 04-ERBSMF79\n                         00000010           68201+R792GOAL EQU   X'10'              On = system is in GOAL mode      @C1A 04-ERBSMF79\n                         00000008           68202+R792SRV  EQU   X'08'              On = this address space is a          04-ERBSMF79\n                                            68203+*                                 server address space             @C1A\n                                            68204+*                                  Off = GOAL specified for this\n                                            68205+*                                  address space is being honored\n                                            68206+*                                  by WLM                          @C1A\n                         00000004           68207+R792QSC  EQU   X'04'              On = address space has been           04-ERBSMF79\n                                            68208+*                                 quiesced by a RESET command      @C1A\n                         00000002           68209+R792TXME EQU   X'02'              Like RASDTRXNMGMTEXEMPT          @J1A 04-ERBSMF79\n                         00000001           68210+R792TAFF EQU   X'01'              On = address space has temporal       04-ERBSMF79\n                                            68211+*                                 affinities, same as RASDTAF  @WA46622\n 0000006F                                   68212+R792FLG2 DS    XL1                Additional flags                 @J1C 04-ERBSMF79\n                         00000080           68213+R792CPRC EQU   X'80'              Same as RASDCPROTCPU             @J1A 04-ERBSMF79\n                         00000040           68214+R792CPRE EQU   X'40'              Same as RASDASPROTSTG            @J1A 04-ERBSMF79\n                         00000020           68215+R792CPRI EQU   X'20'              Same as RASDCPROTSTG             @J1A 04-ERBSMF79\n                         00000010           68216+R792CPUP EQU   X'10'              Same as RASDCPUPROTECTED         @J1A 04-ERBSMF79\n                         00000008           68217+R792STOP EQU   X'08'              Same as RASDSTGPROTECTED         @J1A 04-ERBSMF79\n                         00000004           68218+R792CRMP EQU   X'04'              The dispatch priority of the          04-ERBSMF79\n                                            68219+*                                 address space is currently\n                                            68220+*                                 promoted due to a chronic\n                                            68221+*                                 resource contention              @21A\n                         00000002           68222+R792TXMB EQU   X'02'              Like RASDTRXNMGMTBOTH            @52A 04-ERBSMF79\n 00000070                                   68223+R792LSQR DS    XL4                LSQA pages in real storage            04-ERBSMF79\n                                            68224+*                                      CNTFTN + CNTFRLSD           @W1A\n 00000074                                   68225+R792LSQE DS    XL4                LSQA pages in ext. storage            04-ERBSMF79\n                                            68226+*                                      CNTFTLSD - CNTFRLSD         @W1A\n 00000078                                   68227+R792ARS  DS    XL4                AVG NUM OF REAL FRAMES FOR STEP  @W5A 04-ERBSMF79\n 0000007C                                   68228+R792TWSS DS    XL4                SRM TARGET WORKING SET SIZE           04-ERBSMF79\n                                            68229+*                                 FOR THIS JOB                     @W5A\n 00000080                                   68230+R792PHSP DS    XL4                Number of hiperspace pages            04-ERBSMF79\n                                            68231+*                                 for current transaction          @W7A\n 00000084                                   68232+R792EXCT DS    XL4                New 4-byte EXCP count field  @YA42170 04-ERBSMF79\n 00000088                                   68233+R792SCL  DS    CL8                Service class name               @C1A 04-ERBSMF79\n 00000090                                   68234+R792SCP  DS    BL2                Service class period             @C1A 04-ERBSMF79\n 00000092                                   68235+R792WKLD DS    CL8                Workload name                    @C1A 04-ERBSMF79\n 0000009A                                   68236+R792RGRP DS    CL8                Resource group name              @C1A 04-ERBSMF79\n 000000A2                                   68237+         DS    XL2                RESERVED                              04-ERBSMF79\n 000000A4                                   68238+R792TCPC DS    XL4                Total CPU time consumed in this       04-ERBSMF79\n                                            68239+*                                 address space in milliseconds.\n                                            68240+*                                 (ascbejst+ascbsrbt+assbphtm)     @E2A\n 000000A8                                   68241+R792ASST DS    XL4                CPU time consumed by preemptible-     04-ERBSMF79\n                                            68242+*                                 class SRBs running on behalf of\n                                            68243+*                                 this address space in milliseconds.\n                                            68244+*                                 (assbasst)                       @E2A\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  325\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000000AC                                   68245+R792PHTM DS    XL4                CPU time consumed by preemptible-     04-ERBSMF79\n                                            68246+*                                 class SRBs running in this address\n                                            68247+*                                 space in milliseconds (assbphtm) @E2A\n                                            68248+*\n 000000B0                                   68249+R792FXAB DS    XL4                Number of fixed frames between        04-ERBSMF79\n                                            68250+*                                 16M and 2G (ESAME only)          @I5A\n                                            68251+*\n 000000B4                                   68252+R792TIFA DS    XL4                CPU time consumed on zAAPs (IFAs)     04-ERBSMF79\n                                            68253+*                                 (ASSB_TIME_ON_IFA)               @K6C\n 000000B8                                   68254+R792TCP  DS    XL4                CPU time consumed on standard CPs     04-ERBSMF79\n                                            68255+*                                 (ASSB_TIME_ON_CP). Only valid if\n                                            68256+*                                 zAAPs or zIIPs in configuration\n                                            68257+*                                                              @OA13499\n 000000BC                                   68258+R792TIFC DS    XL4                CPU time consumed on standard CPs by  04-ERBSMF79\n                                            68259+*                                 zAAP (IFA) eligible work\n                                            68260+*                                 (ASSB_TIME_IFA_ON_CP)            @K6C\n 000000C0                                   68261+R792NFFI DS    XL4                Normalization factor for IFA time.    04-ERBSMF79\n                                            68262+*                                 Used to convert between real IFA\n                                            68263+*                                 times and \"normalized\" IFA times,\n                                            68264+*                                 i.e. the equivalent time on a\n                                            68265+*                                 standard CP. Multiply R792TIFA by\n                                            68266+*                                 this value and divide by 256 to\n                                            68267+*                                 calculate the normalized IFA time.\n                                            68268+*                                                                  @K6A\n 000000C4                                   68269+R792TSUP DS    XL4                CPU time consumed on zIIPs            04-ERBSMF79\n                                            68270+*                                 (ASSB_TIME_ON_zIIP)          @OA13499\n 000000C8                                   68271+R792TSUC DS    XL4                CPU time consumed on standard CPs     04-ERBSMF79\n                                            68272+*                                 by zIIP eligible work\n                                            68273+*                                 (ASSB_TIME_zIIP_ON_CP)       @OA13499\n 000000CC                                   68274+R792NFFS DS    XL4                Normalization factor for zIIP time.   04-ERBSMF79\n                                            68275+*                                 Used to convert between real zIIP\n                                            68276+*                                 times and \"normalized\" zIIP times,\n                                            68277+*                                 i.e. the equivalent time on a\n                                            68278+*                                 standard CP. Multiply R792TSUP by\n                                            68279+*                                 this value and divide by 256 to\n                                            68280+*                                 calculate the normalized zIIP time.\n                                            68281+*                                                              @OA13499\n 000000D0                                   68282+R792EXCW DS    CL8                EXCP Count ( DoubleWord )    @OA15850 04-ERBSMF79\n 000000D8                                   68283+R792PHTA DS    XL4                zAAP-only equivalent of R792PHTM      04-ERBSMF79\n                                            68284+*                                 (ASSB_IFA_PHTM).\n                                            68285+*                                 This is normalized time          @31A\n 000000DC                                   68286+R792PHTI DS    XL4                zIIP-only equivalent of R792PHTM      04-ERBSMF79\n                                            68287+*                                 (ASSB_zIIP_PHTM).\n                                            68288+*                                 This is normalized time          @31A\n                         000000E0           68289+R792RLEN EQU   *-R792ELEM         LENGTH OF ONE RELOCATE BLOCK          04-ERBSMF79\n                         00000000           68290+R792FLEN EQU   0                  LENGTH OF ONE FIXED BLOCK             04-ERBSMF79\n                                            68291+*                                 WE ONLY HAVE RELOCATE BLOCKS\n                                            68292+*\n                                            68293+*        RELOCATE BLOCK FOR SUBTYPE 3\n                                            68294+*\n                                            68295+*\n 00000000                00000000 00000066  68296+R793     DSECT                    SCALAR RELOCATE SECTION               04-ERBSMF79\n 00000000                                   68297+R793RSV1 DS    XL2                Reserved since 4.1.0             @W5C 04-ERBSMF79\n 00000002                                   68298+R793CRI  DS    XL2                Current System UIC                    04-ERBSMF79\n                                            68299+*                                 (MCTCurSystemUIC)                @02C\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  326\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           68300+*                                                              @WA56739\n                                            68301+*        With apar OW56739 4-byte fields are appended to replace\n                                            68302+*        the 2-byte storage frame count fields. The old 2-byte\n                                            68303+*        fields still will be filled. They will contain value -1\n                                            68304+*        (x'FFFF') if a frame count is greater than 32767.\n                                            68305+*                                                              @WA56739\n 00000004                                   68306+R793SQA  DS    XL2                NUMBER OF FIXED SQA FRAMES            04-ERBSMF79\n                                            68307+*                                 (replaced by R793SQA4)       @WA56739\n 00000006                                   68308+R793CMNF DS    XL2                NUMBER OF COMMON (LPA+CSA)            04-ERBSMF79\n                                            68309+*                                 PAGEABLE AND FIXED FRAMES\n                                            68310+*                                 (replaced by R793CMN4)       @WA56739\n 00000008                                   68311+R793CMFF DS    XL2                NUMBER OF COMMON (LPA+CSA)            04-ERBSMF79\n                                            68312+*                                 FIXED FRAMES\n                                            68313+*                                 (replaced by R793CMF4)       @WA56739\n 0000000A                                   68314+R793PRFX DS    XL2                NUMBER OF PRIVATE FIXED FRAMES        04-ERBSMF79\n                                            68315+*                                 (LSQA+NON-LSQA)\n                                            68316+*                                 (replaced by R793PFX4)       @WA56739\n 0000000C                                   68317+R793CPUU DS    XL2                PROCESSOR UTILIZATION (0-101)         04-ERBSMF79\n 0000000E                                   68318+R793DQ   DS    XL2                LENGTH OF OUT WAIT QUEUE     @WA19913 04-ERBSMF79\n 00000010                                   68319+R793INC  DS    XL2                NUMBER OF ADDRESS SPACES IN STORAGE   04-ERBSMF79\n                                            68320+*                                 (SRM IN QUEUE)\n 00000012                                   68321+R793OUTU DS    XL2                NUMBER OF ADDRESS SPACES OUT OF       04-ERBSMF79\n                                            68322+*                                 STORAGE (SRM OUT QUEUE)\n 00000014                                   68323+R793LCU  DS    XL2                RESERVED                              04-ERBSMF79\n 00000016                                   68324+R793RSV4 DS    XL2                RESERVED LJM-SPE                 @Y2C 04-ERBSMF79\n 00000018                                   68325+R793LPAF DS    XL2                Number of total LPA frames   @YA34458 04-ERBSMF79\n                                            68326+*                                 (replaced by R793LPF4)       @WA56739\n 0000001A                                   68327+R793CSAF DS    XL2                Number of total CSA frames   @YA34458 04-ERBSMF79\n                                            68328+*                                 (replaced by R793CSF4)       @WA56739\n 0000001C                                   68329+R793LPFX DS    XL2                NUMBER OF LPA FIXED FRAMES            04-ERBSMF79\n                                            68330+*                                 (replaced by R793LFX4)       @WA56739\n 0000001E                                   68331+R793CSFX DS    XL2                NUMBER OF CSA FIXED FRAMES            04-ERBSMF79\n                                            68332+*                                 (replaced by R793CFX4)       @WA56739\n 00000020                                   68333+R793LSQA DS    XL2                NUMBER OF FIXED LSQA FRAMES           04-ERBSMF79\n                                            68334+*                                 (replaced by R793LSQ4)       @WA56739\n 00000022                                   68335+R793NLQF DS    XL2                NUMBER OF PRIVATE NON LSQA FIX FRAMES 04-ERBSMF79\n                                            68336+*                                 (replaced by R793NLF4)       @WA56739\n 00000024                                   68337+R793LOUT DS    XL2                NUMBER OF ADDRESS SPACES LOGICALLY    04-ERBSMF79\n                                            68338+*                                 SWAPPED OUT\n 00000026                                   68339+R793SQR  DS    XL4                SQA pages in real storage             04-ERBSMF79\n                                            68340+*                                      CTSQAF + CTRSQAF            @W1A\n 0000002A                                   68341+R793SQE  DS    XL4                SQA pages in ext. storage             04-ERBSMF79\n                                            68342+*                                      CTTSQAF - CTRSQAF           @W1A\n 0000002E                                   68343+R793LSQR DS    XL4                LSQA pages in real storage            04-ERBSMF79\n                                            68344+*                                      CTLSQAF + CTRLSQAF          @W1A\n 00000032                                   68345+R793LSQE DS    XL4                LSQA pages in ext. storage            04-ERBSMF79\n                                            68346+*                                      CTTLSQAF - CTRLSQAF         @W1A\n 00000036                                   68347+R793AFC  DS    XL4                NUMBER OF AVAILABLE FRAMES       @W5A 04-ERBSMF79\n 0000003A                                   68348+R793CUT  DS    XL4                MVS view of CPU utilization           04-ERBSMF79\n                                            68349+*                                 (interval - wait time) if Monitor I\n                                            68350+*                                 CPU gathering is active, otherwise\n                                            68351+*                                 CCVUTILP value at end of interval.\n                                            68352+*                                 (The interval length of the MVS\n                                            68353+*                                 view value is either 5 seconds or\n                                            68354+*                                 the Monitor I cycle time, if it is\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  327\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           68355+*                                 larger than 5 seconds.)      @WA05435\n                                            68356+*                                                              @WA56739\n 0000003E                                   68357+R793SQA4 DS    XL4                NUMBER OF FIXED SQA FRAMES   @WA56739 04-ERBSMF79\n                                            68358+*                                 (replaces R793SQA)           @WA56739\n 00000042                                   68359+R793CMN4 DS    XL4                NUMBER OF COMMON (LPA+CSA)   @WA56739 04-ERBSMF79\n                                            68360+*                                 PAGEABLE AND FIXED FRAMES    @WA56739\n                                            68361+*                                 (replaces R793CMN)           @WA56739\n 00000046                                   68362+R793CMF4 DS    XL4                NUMBER OF COMMON (LPA+CSA)   @WA56739 04-ERBSMF79\n                                            68363+*                                 FIXED FRAMES                 @WA56739\n                                            68364+*                                 (replaces R793CMFF)          @WA56739\n 0000004A                                   68365+R793PFX4 DS    XL4                NUMBER OF PRIVATE FIXED      @WA56739 04-ERBSMF79\n                                            68366+*                                 FRAMES (LSQA+NON-LSQA)       @WA56739\n                                            68367+*                                 (replaces R793PRFX)          @WA56739\n 0000004E                                   68368+R793LPF4 DS    XL4                Number of total LPA frames   @WA56739 04-ERBSMF79\n                                            68369+*                                 (replaces R793LPAF)          @WA56739\n 00000052                                   68370+R793CSF4 DS    XL4                Number of total CSA frames   @WA56739 04-ERBSMF79\n                                            68371+*                                 (replaces R793CSAF)          @WA56739\n 00000056                                   68372+R793LFX4 DS    XL4                NUMBER OF LPA FIXED FRAMES   @WA56739 04-ERBSMF79\n                                            68373+*                                 (replaces R793LPFX)          @WA56739\n 0000005A                                   68374+R793CFX4 DS    XL4                NUMBER OF CSA FIXED FRAMES   @WA56739 04-ERBSMF79\n                                            68375+*                                 (replaces by R793CSFX)       @WA56739\n 0000005E                                   68376+R793LSQ4 DS    XL4                NUMBER OF FIXED LSQA FRAMES  @WA56739 04-ERBSMF79\n                                            68377+*                                 (replaces R793LSQA)          @WA56739\n 00000062                                   68378+R793NLF4 DS    XL4                NUMBER OF PRIVATE NON LSQA   @WA56739 04-ERBSMF79\n                                            68379+*                                 FIXED FRAMES                 @WA56739\n                                            68380+*                                 (replaces R793NLQF)          @WA56739\n                         00000066           68381+R793RLEN EQU   *-R793             LENGTH OF ONE RELOCATE BLOCK          04-ERBSMF79\n                         00000000           68382+R793FLEN EQU   0                  LENGTH OF ONE FIXED BLOCK             04-ERBSMF79\n                                            68383+*                                 WE ONLY HAVE RELOCATE BLOCKS\n                                            68384+*\n                                            68385+*        RELOCATE BLOCK FOR SUBTYPE 4\n                                            68386+*\n                                            68387+*\n 00000000                00000000 0000006C  68388+R794     DSECT                    SCALAR RELOCATE SECTION               04-ERBSMF79\n 00000000                                   68389+R794CMNI DS    XL4                SYSTEM COMMON (LPA+CSA) PAGES IN      04-ERBSMF79\n 00000004                                   68390+R794CMNO DS    XL4                SYSTEM COMMON (CSA) PAGES OUT         04-ERBSMF79\n 00000008                                   68391+R794CMNR DS    XL4                SYSTEM COMMON (LPA+CSA) PAGES         04-ERBSMF79\n                                            68392+*                                 RECLAIMED, not used since rel 330\n 0000000C                                   68393+R794SWPO DS    XL4                NUMBER OF SWAPS (OUT)            @P1C 04-ERBSMF79\n 00000010                                   68394+R794PSPI DS    XL4                NUMBER OF PAGES SWAPPED IN            04-ERBSMF79\n 00000014                                   68395+R794PSPO DS    XL4                NUMBER OF PAGES SWAPPED OUT           04-ERBSMF79\n 00000018                                   68396+R794PRVI DS    XL4                NUMBER OF PRIVATE PAGES               04-ERBSMF79\n                                            68397+*                                 (VIO+NON-VIO) SWAPPED IN\n 0000001C                                   68398+R794PRVO DS    XL4                NUMBER OF PRIVATE PAGES               04-ERBSMF79\n                                            68399+*                                 (VIO+NON-VIO) SWAPPED OUT\n 00000020                                   68400+R794PRVR DS    XL4                NUMBER OF PRIVATE PAGES               04-ERBSMF79\n                                            68401+*                                 (VIO+NON-VIO) RECLAIMED\n                                            68402+*                                 not used since rel 330\n 00000024                                   68403+R794VIO  DS    XL4                NUMBER OF VIO PAGES (IN+OUT)          04-ERBSMF79\n 00000028                                   68404+R794RSV1 DS    XL2                Reserved since 4.1.0             @W5C 04-ERBSMF79\n 0000002A                                   68405+R794CRI  DS    XL2                Current System UIC                    04-ERBSMF79\n                                            68406+*                                 (MCTCurSystemUIC)                @02C\n 0000002C                                   68407+R794ACRI DS    XL2                AVERAGE OF HIGH UIC COUNT             04-ERBSMF79\n                                            68408+*                                 not used since rel 330\n 0000002E                                   68409+R794RV1  DS    XL2                RESERVED                              04-ERBSMF79\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  328\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000030                                   68410+R794LPAI DS    XL4                SYSTEM LPA PAGES IN          @G537NLS 04-ERBSMF79\n 00000034                                   68411+R794CSAI DS    XL4                SYSTEM CSA PAGES OUT         @G537NLS 04-ERBSMF79\n 00000038                                   68412+R794LPAR DS    XL4                SYSTEM LPA PAGES RECLAIMED   @G537NLS 04-ERBSMF79\n                                            68413+*                                 not used since rel 330\n 0000003C                                   68414+R794CSAR DS    XL4                SYSTEM CSA PAGES RECLAIMED   @G537NLS 04-ERBSMF79\n                                            68415+*                                 not used since rel 330\n 00000040                                   68416+R794RSV2 DS    XL2                Reserved since 4.1.0             @W5C 04-ERBSMF79\n 00000042                                   68417+         DS    XL2                UNUSED (Was Migation age)        @Q2C 04-ERBSMF79\n 00000044                                   68418+R794ERTE DS    XL4                NO. PAGES TO EXT. STORAGE        @P2A 04-ERBSMF79\n 00000048                                   68419+R794EVAL DS    XL4                NO. OF EXTENDED STORAGE SLOTS         04-ERBSMF79\n                                            68420+*                                 AVAIL. AND NOT IN USE            @P2A\n 0000004C                                   68421+R794ESSL DS    XL4                AVAILABLE FOR FUTURE USE         @P2A 04-ERBSMF79\n 00000050                                   68422+R794MRTE DS    XL4                NO. OF PAGES MIGRATED FROM            04-ERBSMF79\n                                            68423+*                                 EXT. STOR. TO AUX. STOR.         @P6A\n 00000054                                   68424+R794MAGE DS    XL4                Migration age                    @Q2M 04-ERBSMF79\n                                            68425+*                                                                  @P6D\n 00000058                                   68426+R794AFC  DS    XL4                NUMBER AVAILABLE FRAMES          @W5A 04-ERBSMF79\n 0000005C                                   68427+R794TWSS DS    XL4                TARGET WORKING SETSIZE FOR THE COMMON 04-ERBSMF79\n                                            68428+*                                 AREA                             @W5A\n 00000060                                   68429+R794HSP  DS    XL4                Number of hiperspace pages            04-ERBSMF79\n                                            68430+*                                 (In + Out)                       @W7A\n 00000064                                   68431+R794PPIA DS    XL4                Number of blocked pages paged in      04-ERBSMF79\n                                            68432+*                                 from AUX (private)               @A3A\n 00000068                                   68433+R794LPIA DS    XL4                Number of blocks paged in from        04-ERBSMF79\n                                            68434+*                                 AUX (private)                    @A3A\n                         0000006C           68435+R794RLEN EQU   *-R794             LENGTH OF ONE RELOCATE BLOCK          04-ERBSMF79\n                         00000000           68436+R794FLEN EQU   0                  LENGTH OF ONE FIXED BLOCK             04-ERBSMF79\n                                            68437+*                                 WE ONLY HAVE RELOCATE BLOCKS\n                                            68438+*\n                                            68439+*        RELOCATE BLOCK FOR SUBTYPE 5\n                                            68440+*\n 00000000                00000000 00000057  68441+R795ELEM DSECT                    MAPPING OF ELEMENT                    04-ERBSMF79\n 00000000                                   68442+R795ASID DS    XL2                ADDRESS SPACE IDENTIFIER              04-ERBSMF79\n 00000002                                   68443+R795JBN  DS    CL8                NAME OF JOB                           04-ERBSMF79\n 0000000A                                   68444+R795DMN  DS    XL2                DOMAIN NAME                           04-ERBSMF79\n                                            68445+*                                 not applicable in GOAL mode      @C1C\n 0000000C                                   68446+R795NPG  DS    XL2                PERFORMANCE GROUP                     04-ERBSMF79\n                                            68447+*                                 not applicable in GOAL mode      @C1C\n 0000000E                                   68448+R795PGP  DS    XL2                PERFORMANCE GROUP PERIOD              04-ERBSMF79\n                                            68449+*                                 not applicable in GOAL mode      @C1C\n 00000010                                   68450+R795TTOD DS    XL4                REAL TIME INTO TRANSACTION            04-ERBSMF79\n 00000014                                   68451+R795CL   DS    CL2                CURRENT LOCATION                      04-ERBSMF79\n                                            68452+*\n                                            68453+*                              CONTENTS   MEANING\n                                            68454+*                              --------   -------\n                                            68455+*                                   IN - SWAPPED IN\n                                            68456+*                                   OT - SWAPPED OUT AND READY\n                                            68457+*                                   LO - LOGICALLY SWAPPED OUT @G537NLS\n                                            68458+*                                   NS - NON-SWAPPABLE\n                                            68459+*                                   WM - WAIT QUEUE/MSO\n                                            68460+*                                   WL - WAIT QUEUE/LONG WAIT\n                                            68461+*                                   WT - WAIT QUEUE/TERM WAIT\n                                            68462+*                                   WO - WAIT QUEUE/other reasons  @I1A\n                                            68463+*                                   DL - TSO user delayed by SRM\n                                            68464+*                                        to meet response time\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  329\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           68465+*                                        objective                 @I1A\n                                            68466+*                                   PR - PRIVLEDGED\n                                            68467+*                                   >> - TRANSITIONING OUT\n                                            68468+*                                   << - TRANSITIONING IN\n000000016                                   68470+R795TAS  DS    XL2                TYPE OF USER                          04-ERBSMF79\n                                            68471+*\n                                            68472+*                              CONTENTS   MEANING\n                                            68473+*                              --------   -------\n                                            68474+*                                   0 - BATCH\n                                            68475+*                                   1 - STARTED TASK\n                                            68476+*                                   2 - MOUNT TASK\n                                            68477+*                                   3 - TSO\n                                            68478+*                                   4 - ASCH                       @A1A\n                                            68479+*                                   5 - OMVS                       @B2A\n000000018                                   68481+R795TROD DS    CL4                TRANSACTION RESIDENT TIME             04-ERBSMF79\n 0000001C                                   68482+R795TCNT DS    XL2                TRANSACTION COUNT                     04-ERBSMF79\n 0000001E                                   68483+R795SWC  DS    XL2                TRANSACTION SWAP COUNT                04-ERBSMF79\n 00000020                                   68484+R795CPUS DS    XL4                TOTAL PROCESSOR  SERVICE FOR          04-ERBSMF79\n                                            68485+*                                 TRANSACTION (ZERO WHEN ASID IS OUT\n                                            68486+*                                 OF STORAGE)\n 00000024                                   68487+R795MSOS DS    XL4                TOTAL MSO SERVICE FOR                 04-ERBSMF79\n                                            68488+*                                 TRANSACTION (ZERO WHEN ASID IS OUT\n                                            68489+*                                 OF STORAGE)\n 00000028                                   68490+R795IOCS DS    XL4                TOTAL IOC SERVICE FOR                 04-ERBSMF79\n                                            68491+*                                 TRANSACTION (ZERO WHEN ASID IS OUT\n                                            68492+*                                 OF STORAGE)\n 0000002C                                   68493+R795WMS  DS    XL4                TOTAL SERVICE FOR                     04-ERBSMF79\n                                            68494+*                                 TRANSACTION (ZERO WHEN ASID IS OUT\n                                            68495+*                                 OF STORAGE)\n 00000030                                   68496+R795TOTL DS    XL4                TOTAL SERVIC FOR SESSION              04-ERBSMF79\n                                            68497+*                                 (ZERO WHEN ASID IS OUT OF STORAGE)\n 00000034                                   68498+R795TOT  DS    XL4                TOTAL SERVICE FOR TRANSACTION         04-ERBSMF79\n                                            68499+*                                 SINCE LAST SWAP - IN\n 00000038                                   68500+R795SRBS DS    XL4                TOTAL SRB SERVICE FOR                 04-ERBSMF79\n                                            68501+*                                 TRANSACTION (ZERO WHEN ASID IS OUT\n                                            68502+*                                 OF STORAGE)\n 0000003C                                   68503+R795FLG  DS    XL1                Flags                            @C1A 04-ERBSMF79\n                         000000E0           68504+R795RSV1 EQU   X'E0'              Reserved                         @C1A 04-ERBSMF79\n                         00000010           68505+R795GOAL EQU   X'10'              On = system is in GOAL mode      @C1A 04-ERBSMF79\n                         00000008           68506+R795SRV  EQU   X'08'              On = this address space is a          04-ERBSMF79\n                                            68507+*                                 server address space             @C1A\n                                            68508+*                                  Off = GOAL specified for this\n                                            68509+*                                  address space is being honored\n                                            68510+*                                  by WLM                          @C1A\n                         00000004           68511+R795QSC  EQU   X'04'              On = address space has been           04-ERBSMF79\n                                            68512+*                                 quiesced by a RESET command      @C1A\n 0000003D                                   68513+R795SCL  DS    CL8                Service class name               @C1A 04-ERBSMF79\n 00000045                                   68514+R795SCP  DS    BL2                Service class period             @C1A 04-ERBSMF79\n 00000047                                   68515+R795WKLD DS    CL8                Workload name                    @C1A 04-ERBSMF79\n 0000004F                                   68516+R795RGRP DS    CL8                Resource group name              @C1A 04-ERBSMF79\n                         00000057           68517+R795RLEN EQU   *-R795ELEM         LENGTH OF ONE RELOCATE BLOCK          04-ERBSMF79\n                         00000000           68518+R795FLEN EQU   0                  LENGTH OF ONE FIXED BLOCK             04-ERBSMF79\n                                            68519+*                                 WE ONLY HAVE RELOCATE BLOCKS\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  330\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           68520+*\n                                            68521+*          RELOCATE BLOCK FOR SUBTYPE 6 - MONITOR 2                @L8A\n                                            68522+*          ENQUEUE RESERVE                                         @L8A\n                                            68523+*\n 00000000                00000000 00000056  68524+R796ELEM DSECT                    MAPPING OF ELEMENT               @L8A 04-ERBSMF79\n 00000000                                   68525+R796ASID DS    XL2                ADDRESS SPACE ID OF THE JOB WHICH@L8A 04-ERBSMF79\n                                            68526+*                                 ISSUED THE RESERVE\n 00000002                                   68527+R796MAJ  DS    CL8                MAJOR NAME OF THE RESOURCE       @L8A 04-ERBSMF79\n 0000000A                                   68528+R796MIN  DS    CL44               MINOR NAME OF THE RESOURCE       @L8A 04-ERBSMF79\n 00000036                                   68529+R796JBN  DS    CL8                NAME OF THE JOB IN WHICH THE     @L8A 04-ERBSMF79\n                                            68530+*                                 RESERVE WAS ISSUED\n 0000003E                                   68531+R796VOLS DS    CL6                VOLUME SERIAL OF THE VOLUME      @L8A 04-ERBSMF79\n                                            68532+*                                 AGAINST WHICH THE RESERVE WAS ISSUED\n 00000044                                   68533+R796UCB  DS    CL3                THE 3 DIGIT DEV NUMBER AGAINST   @C2C 04-ERBSMF79\n                                            68534+*                                 THE RESERVE WAS ISSUED, OR \"UCB\" @C2C\n                                            68535+*                                 IF UCBNAME = \"UCB\"               @C2A\n 00000047                                   68536+R796REQ  DS    CL2                TYPE AND STATUS OF REQUEST FOR   @L8A 04-ERBSMF79\n                                            68537+*                                 THE RESOURCEISSUED\n 00000049                                   68538+R796MINL DS    XL2                MINOR NAME LENGTH FOR REPORTING  @L8A 04-ERBSMF79\n 0000004B                                   68539+R796FLG  DS    XL1                DATA TYPE FLAGS                  @L8A 04-ERBSMF79\n                         00000080           68540+R796RESV EQU   X'80'              1... .... ON=DEVICE RESERVED BY       04-ERBSMF79\n                                            68541+*                                           THIS CPU               @L8A\n                         00000040           68542+R796TRUN EQU   X'40'              .1.. .... ON=MINOR NAME TRUNCATED     04-ERBSMF79\n                                            68543+*                                                                  @L8A\n                         00000020           68544+R796GLBL EQU   X'20'              ..1. .... ON=GLOBAL RESOURCE     @LCA 04-ERBSMF79\n                         00000010           68545+R796RESC EQU   X'10'              ...1 .... ON=RES REQU CONV TO         04-ERBSMF79\n                                            68546+*                                           GLOBAL ENQ             @Q1A\n                                            68547+*                                 .... XXXX RESERVED BITS          @L8A\n 0000004C                                   68548+R796SID  DS    CL8                SYSTEM ID OF THE JOB BY WHICH         04-ERBSMF79\n                                            68549+*                                 THE RESERVE WAS ISSUED\n 00000054                                   68550+R796DVN  DS    XL2                DEV NUMBER (BIN) FROM UCBCHAN    @C2A 04-ERBSMF79\n                                            68551+*                                 R796DVN moved into REL BLOCK @WA02579\n                         00000056           68552+R796RLEN EQU   *-R796ELEM         LENGTH OF ONE RELOCATE BLOCK          04-ERBSMF79\n                         00000000           68553+R796FLEN EQU   0                  LENGTH OF ONE FIXED BLOCK             04-ERBSMF79\n                                            68554+*                                 WE ONLY HAVE RELOCATE BLOCKS\n                                            68555+*\n                                            68556+*          RELOCATE BLOCK FOR SUBTYPE 7 - MONITOR 2                @L8A\n                                            68557+*          ENQUEUE REQUESTS                                        @L8A\n                                            68558+*                                                                  @L8A\n 00000000                00000000 0000005C  68559+R797ELEM DSECT                    MAPPING OF ELEMENT               @L8A 04-ERBSMF79\n 00000000                                   68560+R797MAJ  DS    CL8                MAJOR NAME OF THE RESOURCE       @L8A 04-ERBSMF79\n 00000008                                   68561+R797MIN  DS    CL44               MINOR NAME OF THE RESOURCE       @L8A 04-ERBSMF79\n 00000034                                   68562+R797FLG  DS    XL1                DATA TYPE FLAGS                  @L8A 04-ERBSMF79\n0                        00000080           68564+R797GDET EQU   X'80'              1... .... ON=DETAIL DATA, OFF=SUMMARY 04-ERBSMF79\n                                            68565+*                                           DATA                   @L8A\n                         00000040           68566+R797GMAJ EQU   X'40'              .1.. .... ON= MAJOR NAME IS           04-ERBSMF79\n                                            68567+*                                           SPECIFIED              @L8A\n                         00000020           68568+R797GMIN EQU   X'20'              ..1. .... ON= MINOR NAME IS           04-ERBSMF79\n                                            68569+*                                           SPECIFIED              @L8A\n                         00000010           68570+R797TRNC EQU   X'10'              ...1 .... ON=MINOR NAME               04-ERBSMF79\n                                            68571+*                                           TRUNCATED              @L8A\n                         00000008           68572+R797GLBL EQU   X'08'              .... 1... ON=GLOBAL RESOURCE     @LCA 04-ERBSMF79\n                                            68573+*                                                                  @L8A\n                         00000004           68574+R797ALLS EQU   X'04'              .... .1.. ON=RESOURCES IS HELD BY SYS 04-ERBSMF79\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  331\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           68575+*                                                                  @L8A\n                         00000002           68576+R797ALLE EQU   X'02'              .... ..1. ON=ALL EXL OWNED HELD       04-ERBSMF79\n                                            68577+*                                           BY SYS                 @L8A\n0                                           68579+*                                 .... ...X RESERVED BITS          @LLA\n 00000035                                   68580+R797MINL DS    XL4                MINOR NAME LENGTH FOR REPORTING       04-ERBSMF79\n                                            68581+*                                                                  @L8A\n 00000039                                   68582+R797OWN  DS    XL2                COUNT OF REQUESTS OWNING RESOURCE     04-ERBSMF79\n                                            68583+*                                                                  @L8A\n 0000003B                                   68584+R797EXCW DS    XL2                COUNT EXCL REQS WAITING FOR RESOURCE  04-ERBSMF79\n                                            68585+*                                                                  @L8A\n 0000003D                                   68586+R797SHRW DS    XL2                COUNT SHR REQS WAITING FOR RESOURCE   04-ERBSMF79\n                                            68587+*                                                                  @L8A\n 0000003F                                   68588+R797REQ  DS    CL2                TYPE AND STATUS OF REQUEST       @L8A 04-ERBSMF79\n                                            68589+*                                 FOR A RESOURCE\n 00000041                                   68590+R797JBN  DS    CL8                NAME OF JOB WHICH ISSUED THE ENQ @L8A 04-ERBSMF79\n 00000049                                   68591+R797ASID DS    CL2                ADDRESS SPACE ID OF THE JOB WHICH     04-ERBSMF79\n                                            68592+*                                 ISSUED THE ENQ\n 0000004B                                   68593+R797SCOP DS    CL4                SCOPE OF THE RESOURCE                 04-ERBSMF79\n 0000004F                                   68594+R797RES  DS    CL2                RESERVED                         @L8A 04-ERBSMF79\n 00000051                                   68595+R797SID  DS    CL8                SYSTEM ID OF JOB THAT ISSUED ENQ      04-ERBSMF79\n 00000059                                   68596+         DS    XL3                RESERVED FOR ALIGNMENT                04-ERBSMF79\n                         0000005C           68597+R797RLEN EQU   *-R797ELEM         LENGTH OF ONE RELOCATE BLOCK          04-ERBSMF79\n                         00000000           68598+R797FLEN EQU   0                  LENGTH OF ONE FIXED BLOCK             04-ERBSMF79\n                                            68599+*                                 WE ONLY HAVE RELOCATE BLOCKS\n                                            68600+*\n                                            68601+*           RELOCATE BLOCK FOR SUBTYPE 8 - MONITOR 2           @GM2EPDV\n                                            68602+*           TRANSACTION ANALYSIS                               @GM2EPDV\n                                            68603+*\n 00000000                00000000 00000040  68604+R798ELEM DSECT                    MAPPING OF ELEMENT           @GM2EPDV 04-ERBSMF79\n 00000000                                   68605+R798ICSI DS    CL2                ICS MEMBER NAME ID           @GM2EPDV 04-ERBSMF79\n 00000002                                   68606+R798IPSI DS    CL2                IPS MEMBER NAME ID           @GM2EPDV 04-ERBSMF79\n 00000004                                   68607+R798PGN  DS    XL2                PERFORMANCE GROUP NUMBER     @GM2EPDV 04-ERBSMF79\n 00000006                                   68608+R798PGP  DS    XL2                PERFORMANCE GROUP PERIOD     @GM2EPDV 04-ERBSMF79\n 00000008                                   68609+R798SYS  DS    CL4                SUBSYSTEM NAME               @GM2EPDV 04-ERBSMF79\n 0000000C                                   68610+R798TTX  DS    XL4                NUMBER OF ENDED TRANSACTIONS @GM2EPDV 04-ERBSMF79\n 00000010                                   68611+R798TTM  DS    XL4                ELAPSED TIME OF ENDED TRANS FOR PGP,  04-ERBSMF79\n                                            68612+*                                 IN 1024 MICROSECONDS         @GM2EPDV\n 00000014                                   68613+R798CLS  DS    CL10               TRANSACTION CLASS NAME       @GM2EPDV 04-ERBSMF79\n 0000001E                                   68614+R798USR  DS    CL10               USERID                       @GM2EPDV 04-ERBSMF79\n 00000028                                   68615+R798NAM  DS    CL10               TRANSACTION NAME             @GM2EPDV 04-ERBSMF79\n 00000032                                   68616+R798FL1  DS    XL1                DATA TYPE FLAGS              @GM2EPDV 04-ERBSMF79\n0                        00000080           68618+R798RPT  EQU   X'80'              1... .... ON=RPT PGN,        @GM2EPDV 04-ERBSMF79\n                                            68619+*                                           OFF=CONTROL PGN    @GM2EPDV\n                         00000040           68620+R798ACN  EQU   X'40'              .1.. .... ON=ACCTINFO USED       @R0A 04-ERBSMF79\n                                            68621+*                                 ..XX XXXX RESERVED BITS          @R0C\n 00000033                                   68622+         DS    XL5                RESERVED                         @C1C 04-ERBSMF79\n 00000038                                   68623+R798TET  DS    0D                 ELAPSED TIME OF ENDED TRANS FOR PGP,  04-ERBSMF79\n                                            68624+*                                 IN 1024 MICROSECONDS             @C1A\n 00000038                                   68625+R798TET1 DS    F                  R798TET - WORD 1                 @C1A 04-ERBSMF79\n 0000003C                                   68626+R798TET2 DS    F                  R798TET - WORD 2                 @C1A 04-ERBSMF79\n0                        00000040           68628+R798RLEN EQU   *-R798ELEM         LENGTH OF ONE RELOCATE BLOCK          04-ERBSMF79\n                         00000000           68629+R798FLEN EQU   0                  LENGTH OF ONE FIXED BLOCK             04-ERBSMF79\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  332\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           68630+*                                 WE ONLY HAVE RELOCATE BLOCKS\n-\n                                            68632+*\n                                            68633+*           RELOCATE BLOCK FOR SUBTYPE 9 - MONITOR 2\n                                            68634+*\n                                            68635+*           DEVICE DATA SECTION (ONE PER DEVICE)\n                                            68636+*\n 00000000                00000000 00000068  68637+R799ELEM DSECT          MAPPING OF ELEMENT                              04-ERBSMF79\n 00000000                                   68638+R799NUM  DS    PL2      DEVICE NUMBER IN THE RANGE X'0000' TO X'0FFF'   04-ERBSMF79\n 00000002                                   68639+R799LCU  DS    BL2      LOGICAL CONTROL UNIT GROUP NUMBER 0 TO 255      04-ERBSMF79\n 00000004                                   68640+R799RV0  DS    BL1      RESERVED                                        04-ERBSMF79\n 00000005                                   68641+R799CNF  DS    BL1      DEVICE FLAGS:                                   04-ERBSMF79\n                         00000080           68642+R799QUL  EQU   X'80'    1... ....   ON= IOS Q-LENGTH INVALID            04-ERBSMF79\n                         00000040           68643+R799LCD  EQU   X'40'    .1.. ....   ON= NO LCU INFORMATION              04-ERBSMF79\n                         00000020           68644+R799CMB  EQU   X'20'    ..1. ....   ON= CMB DATA INVALID                04-ERBSMF79\n                         00000010           68645+R799DTF  EQU   X'10'    ...1 ....   ON= DEVICE CONNECT OR PENDING OR    04-ERBSMF79\n                                            68646+*                                       DISCONNECT TIME IS INVALID\n                                            68647+*                                                              @WA15094\n                                            68648+*        EQU   X'08'    .... 1...   RESERVED\n                         00000004           68649+R799MXB  EQU   X'04'    .... .1..   ON= DEVICE IS MULTIPLE EXPOSURE     04-ERBSMF79\n                                            68650+*                                       DEVICE; THIS IS BASE EXPOSURE\n                         00000002           68651+R799VAC  EQU   X'02'    .... ..1.   ON= DATA RECORDED IS INVALID        04-ERBSMF79\n                                            68652+*                                       BECAUSE DEVICE WAS VARIED\n                                            68653+*                                       DURING INTERVAL\n                         00000001           68654+R799STA  EQU   X'01'    .... ...1   ON= DEVICE IS CURRENTLY ONLINE      04-ERBSMF79\n 00000006                                   68655+R799SER  DS    CL6      VOLUME SERIAL NUMBER OF MOUNTED VOLUME          04-ERBSMF79\n 0000000C                                   68656+R799TYP  DS    BL4      UNIT TYPE                                       04-ERBSMF79\n 00000010                                   68657+R799NUX  DS    BL4      Number of exposures (if multiple).              04-ERBSMF79\n                                            68658+*                       In case of a HyperPAV base device,\n                                            68659+*                       R799HPV = 1, number of accumulated\n                                            68660+*                       HyperPAV aliases                           @01C\n 00000014                                   68661+R799SSC  DS    BL4      START SUBCHANNEL (SSCH) COUNT                   04-ERBSMF79\n 00000018                                   68662+R799MEC  DS    BL4      MEASUREMENT EVENT COUNT (NUMBER OF SSCH         04-ERBSMF79\n                                            68663+*                       FOR WHICH CONNECT, PENDING, AND ACTIVE\n                                            68664+*                       TIMES WERE STORED)\n 0000001C                                   68665+R799CNN  DS    BL4      DEVICE CONNECT TIME                             04-ERBSMF79\n 00000020                                   68666+R799PEN  DS    BL4      FUNCTION PENDING TIME                           04-ERBSMF79\n 00000024                                   68667+R799ATV  DS    BL4      FUNCTION ACTIVE TIME                            04-ERBSMF79\n 00000028                                   68668+R799DIS  DS    BL4      DEVICE DISCONNECT TIME                          04-ERBSMF79\n 0000002C                                   68669+R799QUE  DS    BL4      NUMBER OF REQUESTS QUEUED IN IOS FOR            04-ERBSMF79\n                                            68670+*                       THIS DEVICE\n 00000030                                   68671+R799UTL  DS    BL4      NUMBER OF SAMPLES WHEN THE DEVICE WAS           04-ERBSMF79\n                                            68672+*                       RESERVED, BUT AN SSCH HAD NOT BEEN ISSUED\n 00000034                                   68673+R799RSV  DS    BL4      NUMBER OF SAMPLES DURING THE MEASUREMENT        04-ERBSMF79\n                                            68674+*                       INTERVAL THAT INDICATED THAT THE DEVICE\n                                            68675+*                       WAS RESERVED\n 00000038                                   68676+R799DSO  DS    BL4      reserved - do not use - variable name is        04-ERBSMF79\n                                            68677+*                       needed for conversion                      @U1C\n 0000003C                                   68678+R799ALC  DS    BL4      NUMBER OF SAMPLES DURING THE MEASUREMENT        04-ERBSMF79\n                                            68679+*                       INTERVAL THAT INDICATED THAT THE DEVICE\n                                            68680+*                       WAS ALLOCATED\n 00000040                                   68681+R799DVB  DS    BL4      device busy delay time                     @Z1C 04-ERBSMF79\n                                            68682+*                       (3090,9021,9121,9221 support)\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  333\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000044                                   68683+R799CUB  DS    BL4      No longer used                             @K1C 04-ERBSMF79\n 00000048                                   68684+R799ICT  DS    BL2      invalid sample count                       @Z1C 04-ERBSMF79\n                                            68685+*                       (3090,9021,9121,9221 support)\n 0000004A                                   68686+R799CNX  DS    BL1      Device flag extensions                     @G2A 04-ERBSMF79\n                         00000080           68687+R799PAV  EQU X'80'      1... .... =1 If base exposure of a Parallel     04-ERBSMF79\n                                            68688+*                                    Access Volume                 @G2A\n                         00000040           68689+R799NXC  EQU X'40'      .1.. .... =1 If number of alias exposures       04-ERBSMF79\n                                            68690+*                                    changed                       @G2A\n                         00000020           68691+R799NTF  EQU X'20'      ..1. .... =1 Timing facility not active    @I2A 04-ERBSMF79\n                         00000010           68692+R799ECM  EQU X'10'      ...1 .... =1 ECMB mode                     @K3A 04-ERBSMF79\n                         00000008           68693+R799STS  EQU X'08'      .... 1... =1 model dependent data not      @K1A 04-ERBSMF79\n                                            68694+*                                    available by STSCH            @K1A\n                         00000004           68695+R799FCM  EQU X'04'      .... .1.. =1 Initial command response      @K1A 04-ERBSMF79\n                                            68696+*                                    time available                @K1A\n                         00000002           68697+R799HPV  EQU X'02'      .... ..1. =1 HyperPAV base device          @01A 04-ERBSMF79\n 0000004B                                   68698+R799RES  DS    BL1      reserved                                   @G2C 04-ERBSMF79\n 0000004C                                   68699+R799SGN  DS    CL8      Storage Group Name                         @U1A 04-ERBSMF79\n 00000054                                   68700+R799NDA  DS    BL4      Total number of allocations in effect for the   04-ERBSMF79\n                                            68701+*                       device                                     @U2A\n 00000058                                   68702+R799DPB  DS    BL4      No longer used                             @K1C 04-ERBSMF79\n 0000005C                                   68703+R799CMR  DS    BL4      Command response time in units of          @K1C 04-ERBSMF79\n                                            68704+*                       128 microseconds                           @K1C\n 00000060                                   68705+R799PCT  DS    BL4      Number of unsuccessful PAV samples     @WA31701 04-ERBSMF79\n 00000064                                   68706+R799PSM  DS    BL4      Number of successful PAV samples           @01A 04-ERBSMF79\n                         00000068           68707+R799RLEN EQU   *-R799ELEM         LENGTH OF ONE RELOCATE BLOCK          04-ERBSMF79\n                         00000000           68708+R799FLEN EQU   0                  LENGTH OF ONE FIXED BLOCK             04-ERBSMF79\n                                            68709+*                                 WE ONLY HAVE RELOCATE BLOCKS\n                                            68710+*\n                                            68711+*           RELOCATE BLOCK FOR SUBTYPE A - MONITOR 2               @LBA\n                                            68712+*           DISPLAY DOMAIN DATA                                    @LBA\n                                            68713+*\n 00000000                00000000 00000040  68714+R79AELEM DSECT                    MAPPING OF ELEMENT               @LBA 04-ERBSMF79\n 00000000                                   68715+R79ATWSR DS    XL4                TIME WEIGHTED SERVICE RATE       @LBA 04-ERBSMF79\n 00000004                                   68716+         DS    XL2                Reserved                         @A3C 04-ERBSMF79\n 00000006                                   68717+R79ARUA  DS    XL2                AVERAGE NUMBER OF READY USERS    @LBA 04-ERBSMF79\n 00000008                                   68718+R79RSV5  DS    XL2                RESERVED LJM-SPE                 @Y2C 04-ERBSMF79\n 0000000A                                   68719+R79ACMPL DS    XL2                CURRENT MPL VALUE                @LBA 04-ERBSMF79\n 0000000C                                   68720+R79AOUTU DS    XL2                AVERAGE NUMBER OF USERS SWAPPED OUT   04-ERBSMF79\n 0000000E                                   68721+R79AINCU DS    XL2                AVERAGE NUMBER OF SWAPPED IN-USER     04-ERBSMF79\n 00000010                                   68722+         DS    XL2                Reserved                         @A3C 04-ERBSMF79\n 00000012                                   68723+R79ACIDX DS    XL2                CONTENTION INDEX                 @LBA 04-ERBSMF79\n 00000014                                   68724+R79ANSW  DS    XL2                NUMBER OF NON SWAPPABLE USERS         04-ERBSMF79\n 00000016                                   68725+R79ADMNO DS    XL1                DOMAIN NUMBER                    @LBA 04-ERBSMF79\n 00000017                                   68726+R79RESV1 DS    XL1                RESERVED. FORMER R79ADMLO        @P3C 04-ERBSMF79\n 00000018                                   68727+R79RESV2 DS    XL1                RESERVED. FORMER R79ADMHI        @P3C 04-ERBSMF79\n 00000019                                   68728+         DS    CL1                Reserved                         @A3C 04-ERBSMF79\n 0000001A                                   68729+R79AIPS  DS    CL2                CURRENT IPS                      @LBA 04-ERBSMF79\n 0000001C                                   68730+R79ACPU  DS    CL4                CPU SERVICE COEF.                @LBA 04-ERBSMF79\n 00000020                                   68731+R79AIOS  DS    CL4                I/O SERVICE COEF.                @LBA 04-ERBSMF79\n 00000024                                   68732+R79ARSV4 DS    CL4                RESERVED SINCE RMF 4.2.0         @Y2C 04-ERBSMF79\n 00000028                                   68733+R79ASRB  DS    CL4                SRB SERVICE COEF.                @LBA 04-ERBSMF79\n 0000002C                                   68734+R79ATWET DS    CL4                AVERAGE FIRST PERIOD TSO TRANSACTION  04-ERBSMF79\n                                            68735+*                                 RESPONSE TIME\n 00000030                                   68736+R79ADMLO DS    XL2                MIN MPL LEVEL                    @P3C 04-ERBSMF79\n 00000032                                   68737+R79ADMHI DS    XL2                MAX MPL LEVEL                    @P3A 04-ERBSMF79\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  334\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000034                                   68738+R79AMSO  DS    CL8                MAIN STORAGE SERVICE COEFICIENT  @Y2A 04-ERBSMF79\n 0000003C                                   68739+R79AIMPL DS    XL2                IN MPL Target                    @A3A 04-ERBSMF79\n 0000003E                                   68740+R79AOMPL DS    XL2                OUT MPL Target                   @A3A 04-ERBSMF79\n                         00000040           68741+R79ARLEN EQU   *-R79AELEM         LENGTH OF ONE RELOCATE BLOCK          04-ERBSMF79\n                         00000000           68742+R79AFLEN EQU   0                  LENGTH OF ONE FIXED BLOCK             04-ERBSMF79\n                                            68743+*                                 WE ONLY HAVE RELOCATE BLOCKS\n                                            68744+*\n                                            68745+*           RELOCATE BLOCK FOR SUBTYPE B - MONITOR 2               @LBA\n                                            68746+*           PAGE DATA SET ACTIVITY                                 @K2C\n                                            68747+*\n 00000000                00000000 00000004  68748+R79BCNTL DSECT                    MAPPING OF COMMON DATA ELEMENT   @LBA 04-ERBSMF79\n 00000000                                   68749+R79BETYP DS    CL1                TYPE OF DATA THAT FOLLOWS:       @K2C 04-ERBSMF79\n                                            68750+*                                 P - PAGE                         @K2C\n 00000001                                   68751+         DS    CL3                RESERVED                              04-ERBSMF79\n                         00000004           68752+R79BFLEN EQU   *-R79BCNTL         LENGTH OF FIXED SECTION               04-ERBSMF79\n-\n 00000000                00000000 00000062  68754+R79BELEM DSECT                    MAPPING OF ELEMENT               @LBA 04-ERBSMF79\n 00000000                                   68755+R79BSALC DS    XL4                SLOTS IN THIS DATA SET           @LBA 04-ERBSMF79\n 00000004                                   68756+R79BSAVL DS    XL4                SLOTS AVAILABLE                  @LBA 04-ERBSMF79\n 00000008                                   68757+R79BSLBD DS    XL4                NUMBER OF BAD SLOTS              @LBA 04-ERBSMF79\n 0000000C                                   68758+R79BSUSE DS    XL4                ASM IN USE COUNT                 @LBA 04-ERBSMF79\n 00000010                                   68759+R79BSIOS DS    XL4                I/O REQUESTS                     @LBA 04-ERBSMF79\n 00000014                                   68760+R79BREQS DS    XL4                PAGES TRANSFERRED                @LBA 04-ERBSMF79\n 00000018                                   68761+R79BFLG  DS    CL1                FLAGS                            @LBA 04-ERBSMF79\n0                        00000080           68763+R79BSBAD EQU   X'80'              1... .... BAD DATA SET INDICATOR      04-ERBSMF79\n                         00000040           68764+R79BPLPA EQU   X'40'              .1.. .... PLPA DATA SET               04-ERBSMF79\n                         00000020           68765+R79BCOMM EQU   X'20'              ..1. .... COMMON DATA SET             04-ERBSMF79\n                         00000010           68766+R79BDPLX EQU   X'10'              ...1 .... Reserved               @K2C 04-ERBSMF79\n                         00000008           68767+R79BLOCL EQU   X'08'              .... 1... LOCAL DATA SET              04-ERBSMF79\n                         00000004           68768+R79BPAGE EQU   X'04'              .... .1.. PAGE DATA                   04-ERBSMF79\n                         00000002           68769+R79BSWAP EQU   X'02'              .... ..1. Reserved               @K2C 04-ERBSMF79\n                         00000001           68770+R79BVIO  EQU   X'01'              .... ...1 DATASET ACCEPTS VIO PAGES   04-ERBSMF79\n000000019                                   68772+R79BDEV  DS    CL1                DEVICE TYPE CODE                 @LBA 04-ERBSMF79\n 0000001A                                   68773+R79BDADR DS    CL3                3 DIGIT DEV NUMBER OR \"UCB\",     @C2C 04-ERBSMF79\n                                            68774+*                                 IF UCBNAME=\"UCB\"                 @C2A\n 0000001D                                   68775+R79BVSER DS    CL6                VOLUME SERIAL                    @LBA 04-ERBSMF79\n 00000023                                   68776+R79BDSN  DS    CL44               DATA SET NAME                    @LBA 04-ERBSMF79\n 0000004F                                   68777+R79BFL2  DS    CL1                FLAGS                        @ZA57889 04-ERBSMF79\n                         00000080           68778+R79BMEXP EQU   X'80'              MULTIPLE EXPOSURE DEVICE     @ZA57889 04-ERBSMF79\n                         00000040           68779+R79BALCU EQU   X'40'              ALTERNATE CONTROL UNIT DEVICE    @E1A 04-ERBSMF79\n                         00000020           68780+R79BDNM  EQU   X'20'              INDICATES IF FIELD R79BDEVN CONTAINS  04-ERBSMF79\n                                            68781+*                                 A VALID DEVICE NAME              @Y1A\n                         00000010           68782+R79BSCM  EQU   X'10'              ...1 .... Reserved               @51A 04-ERBSMF79\n                                            68783+*                                                                  @Y1D\n 00000050                                   68784+R79BDEVN DS    CL8                DEVICE NAME                      @Y1A 04-ERBSMF79\n 00000058                                   68785+R79BCU   DS    CL8                CONTROL UNIT NAME                @Y1A 04-ERBSMF79\n 00000060                                   68786+R79BDVN  DS    XL2                DEV NUMBER (BIN) FROM UCBCHAN    @C2A 04-ERBSMF79\n                         00000062           68787+R79BRLEN EQU   *-R79BELEM         LENGTH OF RELOCATE SECTION   @OA16748 04-ERBSMF79\n-                                           68789+************** CHANNEL PATH CONTROL SECTION ***************************\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  335\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000000                00000000 00000014  68791+R79CCNTL DSECT                                                          04-ERBSMF79\n 00000000                                   68792+R79CSMP  DS    BL4                NUMBER OF SAMPLES, WEIGHTED BY SRM,   04-ERBSMF79\n                                            68793+*                                 only valid if R79CMCS = OFF @OA04260\n 00000004                                   68794+R79CFLAG DS    BL1                Flags                           @BAA  04-ERBSMF79\n                         00000080           68795+R79CCPMF EQU   X'80'              CPMF available                  @BAA  04-ERBSMF79\n                         00000040           68796+R79CCFGC EQU   X'40'              Configuration change            @E1A  04-ERBSMF79\n                         00000020           68797+R79CCMH  EQU   X'20'              DCM supported by the hardware   @I3A  04-ERBSMF79\n                         00000010           68798+R79CCMD  EQU   X'10'              Configuration contains DCM      @I3A  04-ERBSMF79\n                                            68799+*                                 managed channels                @H1A\n                         00000008           68800+R79CRNA  EQU   X'08'              RMF address space not active    @I3A  04-ERBSMF79\n                         00000004           68801+R79CMCS  EQU   X'04'              Hardware allows multiple        @K3A  04-ERBSMF79\n                                            68802+*                                 channel subsystems              @K3A\n                         00000002           68803+R79CECM  EQU   X'02'              Enhanced channel measurement    @22A  04-ERBSMF79\n                                            68804+*                                 facility available              @22A\n 00000005                                   68805+R79CCMI  DS    BL1                CPMF mode info                  @H1A  04-ERBSMF79\n                                            68806+*                                 0 - CPMF not active             @H1A\n                                            68807+*                                 1 - Compatibility mode          @H1A\n                                            68808+*                                 2 - Extended mode               @H1A\n 00000006                                   68809+         DS    CL2                Reserved for future use         @H1C  04-ERBSMF79\n 00000008                                   68810+R79CCFRC DS    BL4                CPMF restart count              @BAA  04-ERBSMF79\n 0000000C                                   68811+R79CCFSC DS    BL4                CPMF sample count               @BAA  04-ERBSMF79\n 00000010                                   68812+R79CCSS  DS    BL1                Channel SubSystem Id,           @K3A  04-ERBSMF79\n                                            68813+*                                 only valid if R79CMCS = ON  @OA04260\n 00000011                                   68814+         DS    CL3                Reserved for future use         @K3A  04-ERBSMF79\n                                            68815+*                                                                 @P1C\n                         00000014           68816+R79CFLEN EQU   *-R79CCNTL         LENGTH OF FIXED SECTION               04-ERBSMF79\n-                                           68818+*\n                                            68819+*              RELOCATE BLOCK FOR SUBTYPE C\n                                            68820+*\n                                            68821+************** CHANNEL PATH DATA SECTION ******************************\n 00000000                00000000 0000006C  68822+R79CCHNL DSECT                                                          04-ERBSMF79\n 00000000                                   68823+R79CCPID DS    BL1                CHANNEL PATH IDENTIFICATIONS          04-ERBSMF79\n                                            68824+*                                 THE RANGE OF VALUES IS 0 TO 111\n 00000001                                   68825+R79CFG2  DS    CL1                CHANNEL FLAGS                         04-ERBSMF79\n0                        000000C0           68827+R79CRV1  EQU   X'C0'              RESERVED                              04-ERBSMF79\n                         00000020           68828+R79CBL   EQU   X'20'              BLOCK MULTIPLEXER                     04-ERBSMF79\n                         00000010           68829+R79CBY   EQU   X'10'              BYTE MULTIPLEXER                      04-ERBSMF79\n                         00000008           68830+R79CCVC  EQU   X'08'              ES Conversion Channel           @Z1A  04-ERBSMF79\n                         00000004           68831+R79CCNC  EQU   X'04'              ES Connection Channel           @Z2A  04-ERBSMF79\n                         00000002           68832+R79CDOC  EQU   X'02'              ESCON Director on Chanel        @Z2A  04-ERBSMF79\n                         00000001           68833+R79CCC   EQU   X'01'              Channel to Channel          @YA67090  04-ERBSMF79\n 00000002                                   68834+R79CFG3  DS    BL1                Channel flags continued         @BAA  04-ERBSMF79\n                         00000080           68835+R79CSHR  EQU   X'80'              Channel path is shared between        04-ERBSMF79\n                                            68836+*                                 logical partitions.             @BAA\n                         00000040           68837+R79CNVL  EQU   X'40'              CPMF indication, this entry is        04-ERBSMF79\n                                            68838+*                                 invalid                         @BAA\n                                            68839+*                                 1 line deleted              @YA67090\n                         00000010           68840+R79CFXT  EQU   X'10'              Channel converter 3090          @C3A  04-ERBSMF79\n                         00000008           68841+R79CCPM  EQU   X'08'              Channel path is DCM managed     @I3A  04-ERBSMF79\n                         00000004           68842+R79CCDC  EQU   X'04'              Channel characteristics changed @K4A  04-ERBSMF79\n                         00000002           68843+R79CXCM  EQU   X'02'              Extended channel measurements         04-ERBSMF79\n                                            68844+*                                 supported                       @22A\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  336\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000003                                   68845+R79CCPD  DS    BL1                Channel path description.       @C3A  04-ERBSMF79\n                                            68846+*                                 For an explanation, you can     @G1C\n                                            68847+*                                 issue the command D M=CHP.      @G1C\n                                            68848+*                                                                9@G1D\n                                            68849+*                                                                 @C3A\n 00000004                                   68850+R79CBSY  DS    BL4                Number of samples in which the        04-ERBSMF79\n                                            68851+*                                 channel path was busy,\n                                            68852+*                                 weighted by SRM.                @BAC\n 00000008                                   68853+R79CPBY  DS    BL4                Partitions channel-path-busy          04-ERBSMF79\n                                            68854+*                                 time since last interval in\n                                            68855+*                                 units of 128 microsecs          @BAA\n 0000000C                                   68856+R79CCPTX DS    0BL4               Extended last time stamp    @WA39393  04-ERBSMF79\n 0000000C                                   68857+         DS    BL1                Overflow area               @WA39393  04-ERBSMF79\n 0000000D                                   68858+R79CCPTS DS    BL3                Last CPMB entry time stamp in         04-ERBSMF79\n                                            68859+*                                 units of 128 microsecs\n                                            68860+*                                 (be aware that this value wraps\n                                            68861+*                                 about every 35.79 minutes)      @BAA\n 00000010                                   68862+R79CACR  DS    CL5                Channel path acronym            @G1A  04-ERBSMF79\n 00000015                                   68863+R79CCMG  DS    BL1                CPMF Channel Measurement Group  @H1A  04-ERBSMF79\n 00000016                                   68864+R79CFG4  DS    BL1                Channel Path Flags              @H1C  04-ERBSMF79\n                         00000080           68865+R79CWD1  EQU   X'80'              CPMF Channel characteristics          04-ERBSMF79\n                                            68866+*                                 word 1 valid                    @J1C\n                         00000040           68867+R79CWD2  EQU   X'40'              CPMF Channel characteristics          04-ERBSMF79\n                                            68868+*                                 word 2 valid                    @J1C\n                         00000020           68869+R79CWD3  EQU   X'20'              CPMF Channel characteristics          04-ERBSMF79\n                                            68870+*                                 word 3 valid                    @J1C\n                         00000010           68871+R79CWD4  EQU   X'10'              CPMF Channel characteristics          04-ERBSMF79\n                                            68872+*                                 word 4 valid                    @J1C\n                         00000008           68873+R79CWD5  EQU   X'08'              CPMF Channel characteristics          04-ERBSMF79\n                                            68874+*                                 word 5 valid                    @J1C\n 00000017                                   68875+R79CCPP  DS    BL1                Channel path parameter          @I3C  04-ERBSMF79\n 00000018                                   68876+R79CCCM  DS    CL48               CPMF Channel Measurement        @H1A  04-ERBSMF79\n                                            68877+*                                 (extended mode)                 @H1A\n                                            68878+************** CHANNEL Measurement Group 1 ****************************\n 00000048                00000048 00000018  68879+         ORG   R79CCCM                                            @H1A  04-ERBSMF79\n 00000018                                   68880+R79CCM1  DS    0CL8               Channel data Measurement Group1 @H1A  04-ERBSMF79\n 00000018                                   68881+R79CTUT  DS    BL4                CPMF Total channel path busy    @H1A  04-ERBSMF79\n                                            68882+*                                 Time in units of                @H1A\n                                            68883+*                                 128 microseconds                @H1A\n 0000001C                                   68884+R79CPUT  DS    BL4                CPMF LPAR channel path busy     @H1A  04-ERBSMF79\n                                            68885+*                                 Time in units of                @H1A\n                                            68886+*                                 128 microseconds                @H1A\n 00000020                                   68887+         DS    CL40               Reserved                        @H1A  04-ERBSMF79\n                                            68888+************** CHANNEL Measurement Group 2 ****************************\n 00000048                00000048 00000018  68889+         ORG   R79CCCM                                            @H1A  04-ERBSMF79\n 00000018                                   68890+R79CCCC  DS    0CL20              CPMF Channel Characteristics    @H1A  04-ERBSMF79\n                                            68891+*                                 data                            @H1A\n 00000018                                   68892+R79CMBC  DS    BL4                CPMF Maximum Bus Cycles per     @H1A  04-ERBSMF79\n                                            68893+*                                 second (word 1)                 @J1C\n 0000001C                                   68894+R79CMCU  DS    BL4                CPMF Maximum Channel work Units @H1A  04-ERBSMF79\n                                            68895+*                                 per second (word 2)             @J1C\n 00000020                                   68896+R79CMWU  DS    BL4                CPMF Maximum Write data Units   @H1A  04-ERBSMF79\n                                            68897+*                                 per second (word 3)             @J1C\n 00000024                                   68898+R79CMRU  DS    BL4                CPMF Maximum Read data Units    @H1A  04-ERBSMF79\n                                            68899+*                                 per second (word 4)             @J1C\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  337\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000028                                   68900+R79CUS   DS    BL4                CPMF data Unit Size in bytes    @H1A  04-ERBSMF79\n                                            68901+*                                 (word 5)                        @J1C\n 0000002C                                   68902+R79CCCD  DS    0CL28              Channel Measurement Group 2     @H1A  04-ERBSMF79\n                                            68903+*                                 Data                            @H1A\n 0000002C                                   68904+R79CTBC  DS    BL4                CPMF Total Bus Cycles Count     @H1A  04-ERBSMF79\n 00000030                                   68905+R79CTUC  DS    BL4                CPMF Total channel work Unit    @H1A  04-ERBSMF79\n                                            68906+*                                 Count                           @H1A\n 00000034                                   68907+R79CPUC  DS    BL4                CPMF LPAR channel work Unit     @H1A  04-ERBSMF79\n                                            68908+*                                 Count                           @H1A\n 00000038                                   68909+R79CTWU  DS    BL4                CPMF Total Write data Units     @H1A  04-ERBSMF79\n 0000003C                                   68910+R79CPWU  DS    BL4                CPMF LPAR Write data Units      @H1A  04-ERBSMF79\n 00000040                                   68911+R79CTRU  DS    BL4                CPMF Total Read data Units      @H1A  04-ERBSMF79\n 00000044                                   68912+R79CPRU  DS    BL4                CPMF LPAR Read data Units       @H1A  04-ERBSMF79\n                                            68913+************** CHANNEL Measurement Group 3 ****************************\n 00000048                00000048 00000018  68914+         ORG   R79CCCM                                            @J4A  04-ERBSMF79\n 00000018                                   68915+R79CCC3  DS    0CL20              CPMF Channel Characteristics    @J4A  04-ERBSMF79\n                                            68916+*                                 data                            @J4A\n 00000018                                   68917+R79CPDU  DS    BL4                CPMF LPAR Data Unit size in     @J4A  04-ERBSMF79\n                                            68918+*                                 bytes (word 1)                  @J4A\n 0000001C                                   68919+R79CTDU  DS    BL4                CPMF Total Data Unit size in    @J4A  04-ERBSMF79\n                                            68920+*                                 bytes (word 2)                  @J4A\n 00000020                                   68921+R79CPUM  DS    BL4                CPMF LPAR Message sent unit     @J4A  04-ERBSMF79\n                                            68922+*                                 size (word 3)                   @J4A\n 00000024                                   68923+R79CTUM  DS    BL4                CPMF Total Message sent unit    @J4A  04-ERBSMF79\n                                            68924+*                                 size (word 4)                   @J4A\n 00000028                                   68925+         DS    CL4                Reserved                        @J4A  04-ERBSMF79\n 0000002C                                   68926+R79CCD3  DS    0CL28              Channel Measurement Group 3     @J4A  04-ERBSMF79\n                                            68927+*                                 Data                            @J4A\n 0000002C                                   68928+R79CPMS  DS    BL4                CPMF LPAR Message sent units    @J4A  04-ERBSMF79\n                                            68929+*                                 count                           @J4A\n 00000030                                   68930+R79CTMS  DS    BL4                CPMF Total Message sent units   @J4A  04-ERBSMF79\n                                            68931+*                                 count                           @J4A\n 00000034                                   68932+R79CPUS  DS    BL4                CPMF LPAR count of Unsuccessful @J4A  04-ERBSMF79\n                                            68933+*                                 attempts to send messages       @J4A\n 00000038                                   68934+R79CPUB  DS    BL4                CPMF LPAR count of Unsuccessful @J4A  04-ERBSMF79\n                                            68935+*                                 attempts to receive messages    @J4A\n                                            68936+*                                 due to unavailable Buffers      @J4A\n 0000003C                                   68937+R79CTUB  DS    BL4                CPMF Total count of             @J4A  04-ERBSMF79\n                                            68938+*                                 Unsuccessful attempts to        @J4A\n                                            68939+*                                 receive messages due to         @J4A\n                                            68940+*                                 unavailable Buffers             @J4A\n 00000040                                   68941+R79CPDS  DS    BL4                CPMF LPAR Data units Sent count @J4A  04-ERBSMF79\n 00000044                                   68942+R79CTDS  DS    BL4                CPMF Total Data units Sent      @J4A  04-ERBSMF79\n                                            68943+*                                 count                           @J4A\n 00000048                                   68944+R79CGEN  DS    BL1                Channel type generation         @J5A  04-ERBSMF79\n 00000049                                   68945+         DS    CL3                Reserved                              04-ERBSMF79\n 0000004C                                   68946+R79CCCMX DS    CL32               CPMF Extended channel           @22A  04-ERBSMF79\n                                            68947+*                                 measurement data. Only valid    @22A\n                                            68948+*                                 for measurement group 2.        @22A\n                                            68949+************** Extended channel measurement group 2 data ******** @22A\n 0000006C                0000006C 0000004C  68950+         ORG   R79CCCMX                                           @22A  04-ERBSMF79\n 0000004C                                   68951+R79CXCM2 DS    0CL32              Extended group 2 data           @22A  04-ERBSMF79\n 0000004C                                   68952+R79CXOC  DS    BL4                Total number of FICON command-  @22A  04-ERBSMF79\n                                            68953+*                                 mode operations (CPC) that have @22A\n                                            68954+*                                 been attempted by the channel.  @22A\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  338\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000050                                   68955+R79CXOD  DS    BL4                Total number of FICON command-  @22A  04-ERBSMF79\n                                            68956+*                                 mode operations (CPC) that      @22A\n                                            68957+*                                 could not be initiated by the   @22A\n                                            68958+*                                 channel due to a lack of        @22A\n                                            68959+*                                 available resources.            @22A\n 00000054                                   68960+R79CXOS  DS    BL8                Summation count of FICON        @22A  04-ERBSMF79\n                                            68961+*                                 command-mode operations (CPC).  @22A\n                                            68962+*                                 Each time the number of FICON   @22A\n                                            68963+*                                 command-mode operations is      @22A\n                                            68964+*                                 incremented, the number of      @22A\n                                            68965+*                                 FICON command-mode operations   @22A\n                                            68966+*                                 active at the channel,          @22A\n                                            68967+*                                 including the one being         @22A\n                                            68968+*                                 initiated, is added to this     @22A\n                                            68969+*                                 field.                          @22A\n 0000005C                                   68970+R79CXTC  DS    BL4                Total number of FICON transport @22A  04-ERBSMF79\n                                            68971+*                                 mode operations (CPC) that have @22A\n                                            68972+*                                 been attempted by the channel.  @22A\n                                            68973+*                                 Zero when no zHPF.              @22A\n 00000060                                   68974+R79CXTD  DS    BL4                Total number of FICON transport @22A  04-ERBSMF79\n                                            68975+*                                 mode operations (CPC) that      @22A\n                                            68976+*                                 could not be initiated by the   @22A\n                                            68977+*                                 channel due to a lack of        @22A\n                                            68978+*                                 available resources.            @22A\n                                            68979+*                                 Zero when no zHPF.              @22A\n 00000064                                   68980+R79CXTS  DS    BL8                Summation count of FICON        @22A  04-ERBSMF79\n                                            68981+*                                 transport-mode operations       @22A\n                                            68982+*                                 (CPC). Each time the number of  @22A\n                                            68983+*                                 FICON transport-mode operations @22A\n                                            68984+*                                 is incremented, the number of   @22A\n                                            68985+*                                 transport-mode operations       @22A\n                                            68986+*                                 active at the channel,          @22A\n                                            68987+*                                 including the one being         @22A\n                                            68988+*                                 initiated, is added to this     @22A\n                                            68989+*                                 field. Zero when no zHPF.       @22A\n0                        0000006C           68991+R79CRLEN EQU   *-R79CCHNL         LENGTH OF RELOCATE SECTION            04-ERBSMF79\n                                            68992+*\n                                            68993+*           RELOCATE BLOCK FOR SUBTYPE D - MONITOR 2\n                                            68994+*           I/O QUEUING SECTION (308X/LEAR)                        @P4C\n                                            68995+*\n                                            68996+***********************************************************************\n-                                           68998+**********************  I/O QUEUING CONFIGURATION CONTROL SECTION  ****\n 00000000                00000000 0000000C  68999+R79DCS   DSECT                                                          04-ERBSMF79\n 00000000                                   69000+R79DID1  DS    BL2      LOGICAL CONTROL UNIT IDENTIFIER            @P4C 04-ERBSMF79\n                                            69001+*                                                                  @P4D\n 00000002                                   69002+R79DNTR  DS    BL2      NUMBER OF DESCRIPTOR TRIPLETS                   04-ERBSMF79\n 00000004                                   69003+R79DCPDS DS    BL4      OFFSET TO CONFIGURATION DATA SECTION            04-ERBSMF79\n 00000008                                   69004+R79DCPDL DS    BL2      LENGTH OF CONFIGURATION DATA SECTION            04-ERBSMF79\n 0000000A                                   69005+R79DCPDN DS    BL2      NUMBER OF CONFIGURATION DATA SECTIONS           04-ERBSMF79\n                         00000008           69006+R79DCPDX EQU   8        NUMBER OF CONFIGURATION DATA SECTIONS  @YA61897 04-ERBSMF79\n                         0000006C           69007+R79DCSL  EQU   (*-R79DCS)+R79DCPDX*R79DCPDY LENGTH OF CONFIGURATION     04-ERBSMF79\n                                            69008+*                       CONTROL SECTION PLUS CONFIG DATA SECTIONS\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  339\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        0000008C           69009+R79DRLEN EQU   R79DCSL+R79DDSL  LENGTH OF A RELOCATE BLOCK              04-ERBSMF79\n                         00000000           69010+R79DFLEN EQU   0        LENGTH OF A FIXED BLOCK                         04-ERBSMF79\n                                            69011+*                       (WE ONLY HAVE RELOCATE BLOCKS)\n                         00000100           69012+R79DRMAX EQU   256      MAXIMUM NUMBER OF RELOCATE BLOCKS (MAXRB)       04-ERBSMF79\n-                                           69014+**********************  I/O QUEUING CONFIGURATION DATA SECTION  *******\n 00000000                00000000 0000000C  69015+R79DCPD  DSECT                                                          04-ERBSMF79\n 00000000                                   69016+R79DCPID DS    BL1      CHANNEL PATH IDENTIFIER                         04-ERBSMF79\n000000001                                   69018+R79DCPST DS    BL1      CHANNEL PATH STATUS                             04-ERBSMF79\n                         00000080           69019+R79DCPI  EQU   X'80'    CHANNEL PATH INSTALLED                          04-ERBSMF79\n                         00000040           69020+R79DCPO  EQU   X'40'    CHANNEL PATH ONLINE                             04-ERBSMF79\n                         00000020           69021+R79DCPV  EQU   X'20'    CHANNEL PATH VARIED                             04-ERBSMF79\n                         00000010           69022+R79DVPOF EQU   X'10'    PATH OFFLINE TO ALL DEVICES TO THE LCU     @P4A 04-ERBSMF79\n                         00000008           69023+R79DVP   EQU   X'08'    PATH CONNECTIVITY TO DEVICES OF THE LCU    @P4A 04-ERBSMF79\n                                            69024+*                       HAS MANIPULATED VIA VARY PATH              @P4A\n000000002                                   69026+R79DCUN  DS    BL2      NUMBER OF CONTROL UNITS ATTACHED                04-ERBSMF79\n 00000004                                   69027+R79DCU   DS    0BL8     CONTROL UNITS ATTACHED TO THIS CHANNEL PATH     04-ERBSMF79\n 00000004                                   69028+R79DCU1  DS    BL2      1ST CONTROL UNIT IDENTIFIER                     04-ERBSMF79\n 00000006                                   69029+R79DCU2  DS    BL2      2ND CONTROL UNIT IDENTIFIER                     04-ERBSMF79\n 00000008                                   69030+R79DCU3  DS    BL2      3RD CONTROL UNIT IDENTIFIER                     04-ERBSMF79\n 0000000A                                   69031+R79DCU4  DS    BL2      4TH CONTROL UNIT IDENTIFIER                     04-ERBSMF79\n                         0000000C           69032+R79DCPDY EQU   *-R79DCPD LENGTH OF CONFIGURATION DATA SECTION           04-ERBSMF79\n-                                           69034+**********************  I/O QUEUING DATA SECTION  ********************\n 00000000                00000000 00000020  69035+R79DDS   DSECT                                                          04-ERBSMF79\n 00000000                                   69036+         DS    BL1      RESERVED                                   @P4C 04-ERBSMF79\n000000001                                   69038+R79DDST  DS    BL1      DATA STATUS                                     04-ERBSMF79\n                         00000080           69039+R79DCPS  EQU   X'80'    1... .... ON= NO STCPS DATA AVAILABLE           04-ERBSMF79\n                         00000020           69040+R79DNHMA EQU   X'20'    ..1. .... ON= NO HARDWARE MEASUREMENTS     @O1A 04-ERBSMF79\n 00000002                                   69041+R79DICT  DS    BL2      COUNT OF SUCCESSIVE UNSUCCESSFUL SAMPLES        04-ERBSMF79\n                                            69042+*                       IF THIS COUNT DIFFERS FROM ZERO, THE\n                                            69043+*                       FOLLOWING FIELDS, BESIDES R79DABY, ARE\n                                            69044+*                       NOT SET UP\n 00000004                                   69045+R79DABY  DS    BL4      NUMBER OF SAMPLES WHEN ALL CHANNEL PATHS        04-ERBSMF79\n                                            69046+*                       IN THE LCU WERE BUSY, VALID ONLY IF\n                                            69047+*                       STCPS DATA AVAILABLE\n 00000008                                   69048+R79DTIS  DS    BL4      TOTAL NUMBER OF  INITIAL SELECTION ATTEMPTS     04-ERBSMF79\n 0000000C                                   69049+R79DSIS  DS    BL4      TOTAL NUMBER OF SUCCESSFUL SELECTION            04-ERBSMF79\n                                            69050+*                       ATTEMPTS\n 00000010                                   69051+R79DCUB  DS    BL4      TOTAL NUMBER OF UNSUCCESSFUL SELECTION          04-ERBSMF79\n                                            69052+*                       ATTEMPTS DUE TO CONTROL UNIT BUSY\n 00000014                                   69053+R79DDVB  DS    BL4      TOTAL NUMBER OF UNSUCCESSFUL SELECTION          04-ERBSMF79\n                                            69054+*                       ATTEMPTS DUE TO DEVICE BUSY\n 00000018                                   69055+R79DQUE  DS    BL4      TOTAL NUMBER OF REQUESTS QUEUED FOR THE LCU     04-ERBSMF79\n                                            69056+*                       (ACCUMULATED AT INITIAL SELECTION TIME)\n                                            69057+*                       THE FIELD R79DQUE IS NOT SET UP FOR I/O    @O1A\n                                            69058+*                       MEASUREMENT LEVEL X'02' LEAR PROCESSORS    @O1A\n 0000001C                                   69059+R79DID2  DS    BL2      LOGICAL CONTROL UNIT IDENTIFIER            @P4A 04-ERBSMF79\n 0000001E                                   69060+         DS    BL2      RESERVED                                   @P4A 04-ERBSMF79\n                         00000020           69061+R79DDSL  EQU   *-R79DDS LENGTH OF DATA SECTION                          04-ERBSMF79\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  340\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           69062+*                                                                  @P4A\n                                            69063+*           FIXED BLOCK FOR SUBTYPE E - MONITOR 2                  @P4A\n                                            69064+*           I/O QUEUING SECTION (3090,9021,9121,9221)              @P4A\n                                            69065+*                                                                  @P4A\n                                            69066+*******************************************************************@P4A\n-                                           69068+**********************  GLOBAL I/O QUEUING SECTION                 @P4A\n 00000000                00000000 00000008  69069+R79EGD   DSECT                                                     @P4A 04-ERBSMF79\n000000000                                   69071+R79EGFLG DS    BL1      GLOBAL IOQ STATUS                          @P4A 04-ERBSMF79\n                         00000080           69072+R79EGCMF EQU   X'80'    1... .... ON= DATA IS INVALID DUE TO FAILURE    04-ERBSMF79\n                                            69073+*                                     OF THE CHANNEL MEASUREMENT\n                                            69074+*                                     FACILITY                     @P4A\n                         00000040           69075+R79EGDIF EQU   X'40'    .1.. .... ON= DIAGNOSE INTERFACE FAILURE   @P4A 04-ERBSMF79\n                         00000020           69076+R79EGDIR EQU   X'20'    ..1. .... ON= ESCON Director in Config.    @Z2A 04-ERBSMF79\n                         00000010           69077+R79EGSSQ EQU   X'10'    ...1 .... ON= CHSC store secondary queue        04-ERBSMF79\n                                            69078+*                                     data not supported           @E1A\n                         00000008           69079+R79EGCMH EQU   X'08'    .... 1... ON= DCM is supported by hardware @I3A 04-ERBSMF79\n                         00000004           69080+R79EGCMD EQU   X'04'    .... .1.. ON= Configuration contains DCM   @I3A 04-ERBSMF79\n                                            69081+*                                 managed channels                 @I3A\n                         00000002           69082+R79EGCMR EQU   X'02'    .... ..1. ON= initial-command-response-    @K3A 04-ERBSMF79\n                                            69083+*                                 time supported                   @K3A\n                                            69084+*                       .... ...1 Reserved                         @K3C\n 00000001                                   69085+         DS    BL3      FOR ALIGNMENT ONLY                         @P4A 04-ERBSMF79\n 00000004                                   69086+         DS    BL4      No longer used                         @WA50187 04-ERBSMF79\n0                        00000008           69088+R79EFLEN EQU   *-R79EGD LENGTH OF A FIXED BLOCK                    @P4A 04-ERBSMF79\n-                                           69090+*                                                                  @P4A\n                                            69091+*           RELOCATE BLOCK FOR SUBTYPE E - MONITOR 2               @P4A\n                                            69092+*           I/O QUEUING SECTION (3090,9021,9121,9221)              @P4A\n                                            69093+*                                                                  @P4A\n                                            69094+*******************************************************************@P4A\n-                                           69096+**********************  I/O QUEUING CONFIGURATION CONTROL SECTION  @P4A\n 00000000                00000000 0000000C  69097+R79ECS   DSECT                                                     @P4A 04-ERBSMF79\n 00000000                                   69098+R79EID1  DS    BL2      LOGICAL CONTROL UNIT IDENTIFIER            @P4A 04-ERBSMF79\n 00000002                                   69099+R79ENTR  DS    BL2      NUMBER OF DESCRIPTOR TRIPLETS              @P4A 04-ERBSMF79\n 00000004                                   69100+R79ECPDS DS    BL4      OFFSET TO CONFIGURATION DATA SECTION       @P4A 04-ERBSMF79\n 00000008                                   69101+R79ECPDL DS    BL2      LENGTH OF CONFIGURATION DATA SECTION       @P4A 04-ERBSMF79\n 0000000A                                   69102+R79ECPDN DS    BL2      NUMBER OF CONFIGURATION DATA SECTIONS      @P4A 04-ERBSMF79\n                         00000008           69103+R79ECPDX EQU   8        NUMBER OF CONFIGURATION DATA SECTIONS  @YA41310 04-ERBSMF79\n                         0000018C           69104+R79ECSL  EQU   (*-R79ECS)+R79ECPDX*R79ECPDY LENGTH OF CONFIG.      @P4A 04-ERBSMF79\n                                            69105+*                       CONTROL SECTION PLUS CONFIG DATA SECTIONS  @P4A\n                         000001C4           69106+R79ERLEN EQU   R79ECSL+R79EDSL  LENGTH OF A RELOCATE BLOCK         @P4A 04-ERBSMF79\n                         00000100           69107+R79ERMAX EQU   256      MAXIMUM NUMBER OF RELOCATE BLOCKS (MAXRB)  @P4A 04-ERBSMF79\n-                                           69109+**********************  I/O QUEUING CONFIGURATION DATA SECTION  ***@P4A\n 00000000                00000000 00000030  69110+R79ECPD  DSECT                                                     @P4A 04-ERBSMF79\n 00000000                                   69111+R79ECPID DS    BL1      CHANNEL PATH IDENTIFIER                    @P4A 04-ERBSMF79\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  341\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000001                                   69113+R79ECPST DS    BL1      CHANNEL PATH STATUS                        @P4A 04-ERBSMF79\n                         00000080           69114+R79ECPI  EQU   X'80'    CHANNEL PATH INSTALLED                     @P4A 04-ERBSMF79\n                         00000040           69115+R79ECPO  EQU   X'40'    CHANNEL PATH ONLINE                        @P4A 04-ERBSMF79\n                         00000020           69116+R79ECPV  EQU   X'20'    CHANNEL PATH VARIED                        @P4A 04-ERBSMF79\n                         00000010           69117+R79EVPOF EQU   X'10'    PATH OFFLINE TO ALL DEVICES OF THE LCU     @P4A 04-ERBSMF79\n                         00000008           69118+R79EVP   EQU   X'08'    PATH CONNECTIVITY TO DEVICES OF THE LCU    @P4A 04-ERBSMF79\n                                            69119+*                       HAS MANIPULATED VIA VARY PATH              @P4A\n                         00000002           69120+R79ECPM  EQU   X'02'    Channel path is DCM managed                @I3A 04-ERBSMF79\n                         00000001           69121+R79ECPMR EQU   X'01'    CHPID manipulated, requiring data reset    @I3A 04-ERBSMF79\n000000002                                   69123+R79ECUN  DS    BL2      NUMBER OF CONTROL UNITS ATTACHED           @P4A 04-ERBSMF79\n 00000004                                   69124+R79ECU   DS    0BL8     CONTROL UNITS ATTACHED TO THIS CHANNEL P.  @P4A 04-ERBSMF79\n 00000004                                   69125+R79ECU1  DS    BL2      1ST CONTROL UNIT IDENTIFIER                @P4A 04-ERBSMF79\n 00000006                                   69126+R79ECU2  DS    BL2      2ND CONTROL UNIT IDENTIFIER                @P4A 04-ERBSMF79\n 00000008                                   69127+R79ECU3  DS    BL2      3RD CONTROL UNIT IDENTIFIER                @P4A 04-ERBSMF79\n 0000000A                                   69128+R79ECU4  DS    BL2      4TH CONTROL UNIT IDENTIFIER                @P4A 04-ERBSMF79\n 0000000C                                   69129+R79ECUB  DS    BL4      COUNT OF CU BUSY                           @P4A 04-ERBSMF79\n 00000010                                   69130+R79EPT   DS    BL4      COUNT OF OPERATIONS ACCEPTED               @P4A 04-ERBSMF79\n 00000014                                   69131+         DS    BL4      No longer used                         @WA50187 04-ERBSMF79\n 00000018                                   69132+R79EDPBC DS    BL4      Count of ESCON Director port busy          @Z2C 04-ERBSMF79\n 0000001C                                   69133+R79ECBT  DS    BL4      Control unit Busy delay Time in units of   @K3C 04-ERBSMF79\n                                            69134+*                       128 microseconds                           @K3A\n 00000020                                   69135+R79ECMR  DS    BL4      Initial CoMmand Response time in units of  @K3A 04-ERBSMF79\n                                            69136+*                       128 microseconds                           @K3A\n 00000024                                   69137+R79ESBS  DS    BL4      Switch busy count summation                @K3A 04-ERBSMF79\n 00000028                                   69138+         DS    CL4      Reserved for future use                    @K3A 04-ERBSMF79\n 0000002C                                   69139+R79ECPXF DS    BL1      Channel path extended flags                @K3A 04-ERBSMF79\n                         00000080           69140+R79ECPXM EQU   X'80'    1... .... 1= extended I/O-measurement-     @K3A 04-ERBSMF79\n                                            69141+*                       block data available                       @K3A\n 0000002D                                   69142+R79ECPAT DS    BL1      Path attributes:                           @L1A 04-ERBSMF79\n                                            69143+*                       0 = No attributes specified\n                                            69144+*                       1 = Preferred path\n                                            69145+*                       2 = Non-preferred path\n 0000002E                                   69146+         DS    CL2      Reserved for future use                    @L1C 04-ERBSMF79\n                         00000030           69147+R79ECPDY EQU   *-R79ECPD LENGTH OF CONFIGURATION DATA SECTION      @P4A 04-ERBSMF79\n-                                           69149+**********************  I/O QUEUING DATA SECTION  *****************@P4A\n 00000000                00000000 00000038  69150+R79EDS   DSECT                                                     @P4A 04-ERBSMF79\n 00000000                                   69151+R79EID2  DS    BL2      LOGICAL CONTROL UNIT IDENTIFIER            @P4A 04-ERBSMF79\n 00000002                                   69152+R79EDST  DS    BL1      DATA STATUS                                @P4A 04-ERBSMF79\n                                            69153+*        EQU   X'80'    RESERVED                                   @P4A\n                         00000040           69154+R79ENHMA EQU   X'40'    .1.. .... ON= NO HARDWARE MEASUREMENTS     @Z1C 04-ERBSMF79\n                         00000008           69155+R79ELDCM EQU   X'08'    .... 1... ON= LCU contains DCM managed     @I3A 04-ERBSMF79\n                                            69156+*                       channels                                   @I3A\n                         00000004           69157+R79ELPAT EQU   X'04'    .... .1.. ON= Path attributes are valid    @L1A 04-ERBSMF79\n 00000003                                   69158+         DS    BL1      RESERVED                                   @P4A 04-ERBSMF79\n 00000004                                   69159+R79EQSM  DS    BL4      QUEUED SUM ON THE CU-HDR QUEUE             @P4A 04-ERBSMF79\n 00000008                                   69160+R79EQCT  DS    BL4      COUNT OF ENTRIES PLACED ON THE CU-HDR Q.   @P4A 04-ERBSMF79\n 0000000C                                   69161+R79EMCMN DS    BL2      Min number of DCM managed channels used    @I3A 04-ERBSMF79\n 0000000E                                   69162+R79EMCMX DS    BL2      Max number of DCM managed channels used    @I3A 04-ERBSMF79\n 00000010                                   69163+R79EMCDF DS    BL2      Defined number of DCM managed channels     @I3A 04-ERBSMF79\n 00000012                                   69164+         DS    BL2      Reserved                                   @I3A 04-ERBSMF79\n 00000014                                   69165+R79EPTM  DS    BL4      Accumulated path taken count for DCM       @I3A 04-ERBSMF79\n                                            69166+*                       managed channels                           @I3A\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  342\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000018                                   69167+R79EDPBM DS    BL4      Accumulated director port busy count for   @I3A 04-ERBSMF79\n                                            69168+*                       DCM managed channels                       @I3A\n 0000001C                                   69169+R79ECUBM DS    BL4      Accumulated control unit busy count for    @I3A 04-ERBSMF79\n                                            69170+*                       DCM managed channels                       @I3A\n 00000020                                   69171+R79ECBTM DS    BL4      Accumulated control unit busy time for     @K3A 04-ERBSMF79\n                                            69172+*                       DCM managed channels                       @K3A\n 00000024                                   69173+R79ECMRM DS    BL4      Accumulated initial command response time  @K3A 04-ERBSMF79\n                                            69174+*                       for DCM managed channels                   @K3A\n 00000028                                   69175+R79ESBSM DS    BL4      Accumulated switch busy count summation    @K3A 04-ERBSMF79\n                                            69176+*                       for DCM managed channels                   @K3A\n 0000002C                                   69177+         DS    CL8      Reserved for future use                    @K3A 04-ERBSMF79\n 00000034                                   69178+R79ECSST DS    BL4      Channel subsystem wait time in             @K3A 04-ERBSMF79\n                                            69179+*                       units of 128 microsends                    @K3A\n                         00000038           69180+R79EDSL  EQU   *-R79EDS LENGTH OF DATA SECTION                     @P4A 04-ERBSMF79\n-                                           69182+**********************  IMS Long Lock Data Section *************** @F1A\n 00000000                00000000 0000006F  69183+R79FIRLM DSECT                                                     @F1A 04-ERBSMF79\n 00000000                                   69184+R79FISTN DS    CL16     IRLM Lock Structure Name                   @F1A 04-ERBSMF79\n 00000010                                   69185+R79FDLKC DS    BL4      Dead Lock Cycle Number                     @F1A 04-ERBSMF79\n 00000014                                   69186+R79FETYP DS    CL1      'B' = Blocker / 'W' = Waiter               @F1A 04-ERBSMF79\n 00000015                                   69187+R79FAVL  DS    CL3      Reserved                                   @F1A 04-ERBSMF79\n 00000018                                   69188+R79FWAIT DS    0C       Start of variable Section: Waiter data     @F1A 04-ERBSMF79\n 00000018                00000018 00000018  69189+         ORG   R79FWAIT                                            @F1A 04-ERBSMF79\n 00000018                                   69190+R79FBLKR DS    0C                                                  @F1A 04-ERBSMF79\n 00000018                                   69191+R79FIMSI DS    CL8      IMS Subsystem ID                           @F1A 04-ERBSMF79\n 00000020                                   69192+R79FPSTN DS    CL2      PST Number                                 @F1A 04-ERBSMF79\n 00000022                                   69193+R79FPSBN DS    CL8      PSB Name                                   @F1A 04-ERBSMF79\n 0000002A                                   69194+R79FRGTY DS    CL1      Region Type                                @F1A 04-ERBSMF79\n 0000002B                                   69195+R79FRCVT DS    CL16     Recovery Token                             @F1A 04-ERBSMF79\n 0000003B                                   69196+R79FCTID DS    CL8      CICS Task ID (If CICS)                     @F1A 04-ERBSMF79\n 00000043                                   69197+R79FLHTI DS    CL8      Lock Held Time-Duration                    @F1A 04-ERBSMF79\n 0000004B                                   69198+R79FLHCN DS    CL4      Max Lock Held-PSTLKHLD                     @F1A 04-ERBSMF79\n 0000004F                                   69199+R79FLKNA DS    CL16     Lock Name                                  @F1A 04-ERBSMF79\n 0000005F                                   69200+R79FTRNM DS    CL8      Transaction Name / Job Name            @WA27252 04-ERBSMF79\n 00000067                                   69201+R79FRSNA DS    CL8      Resource (DB/Area) Name                    @F1A 04-ERBSMF79\n                         0000006F           69202+R79FIRLL EQU   *-R79FIRLM   Length of data section                 @F1A 04-ERBSMF79\n-                        00000080           69204+R79FRBAT EQU   X'80'    Region type = BATCH                        @F1A 04-ERBSMF79\n                         00000040           69205+R79FRBMP EQU   X'40'    Region type = BMP                          @F1A 04-ERBSMF79\n                         00000020           69206+R79FRIFP EQU   X'20'    Region type = IFP                          @F1A 04-ERBSMF79\n                         00000010           69207+R79FRCIC EQU   X'10'    Region type = CICS                         @F1A 04-ERBSMF79\n                         00000008           69208+R79FRMPP EQU   X'08'    Region type = MPP                          @F1A 04-ERBSMF79\n                         00000004           69209+R79FRDBC EQU   X'04'    Region type = DBCTL                        @F1A 04-ERBSMF79\n                         00000002           69210+R79FRSYS EQU   X'02'    Region type = SYPST                    @OA28931 04-ERBSMF79\n                                            69211+******************* End IMS Long Lock Data Section *************** @F1A\n-                                           69213+*        ERBSMF70\n                                            69215+*/*** START OF SPECIFICATIONS ****************************************\n                                            69216+*                                                                    *\n                                            69217+*01* Proprietary Statement:                                          *\n                                            69219+*\n                                            69220+*        PROPRIETARY STATEMENT:\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  343\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           69221+*           Licensed Materials - Property of IBM\n                                            69222+*           \"Restricted Materials of IBM\"\n                                            69223+*           Copyright IBM Corp. 1977, 2011                        @51C\n                                            69224+*\n                                            69225+*           Status: z/OS V1R13 RMF (HRM7780)                      @51C\n                                            69226+*\n                                            69227+*       ?ERBCOPY1 Y1(1977);\n                                            69228+*/*                                                                  *\n                                            69229+*01* Macro Name: ERBSMF70                                            *\n                                            69230+*                                                                    *\n                                            69231+*01* Descriptive Name:  SMF record 70 subtype 1 and 2                *\n                                            69232+*02* Acronym: SMF70                                                  *\n                                            69233+*                                                                    *\n                                            69234+*01* DSECT Name:                                                     *\n                                            69235+*02* Subtype 1: SMF70HDR SMF70PRO SMF70CTL SMF70CPU                  *\n                                            69236+*02*            SMF70AID SMF70BCT SMF70BPD SMF70CIS                  *\n                                            69237+*02* Subtype 2: SMF70HDR SMF70PRO R702TYP3 R702TYP4                  *\n                                            69238+*               R702CCF                                              *\n                                            69239+*                                                                    *\n                                            69240+*01* Component: Resource Measurement Facility (27404)                *\n                                            69241+*                                                                    *\n                                            69242+*01* Eye-Catcher: None                                               *\n                                            69243+*02*  Offset: N/A                                                    *\n                                            69244+*02*  Length: N/A                                                    *\n                                            69245+*                                                                    *\n                                            69246+*01* Storage Attributes:                                             *\n                                            69247+*02*   Subpool: 1                                                    *\n                                            69248+*02*   Key: 0                                                        *\n                                            69249+*02*   Residency: Any                                                *\n                                            69250+*02*   Main Storage: N/A                                             *\n                                            69251+*02*   Auxiliary Storage: N/A                                        *\n                                            69252+*02*   Virtual Storage: N/A                                          *\n                                            69253+*                                                                    *\n                                            69254+*01* Function = This macro maps the complete SMF record type 70.     *\n                                            69255+*                                                                    *\n                                            69256+*              It has two subtypes:                                  *\n                                            69257+*                                                                    *\n                                            69258+*              - Subtype 1 is created by RMF if CPU activity         *\n                                            69259+*                measurements are activated.                         *\n                                            69260+*              - Subtype 2 is created by RMF if Crypto activity      *\n                                            69261+*                measurements are activated.                         *\n                                            69262+*                                                                    *\n                                            69263+*              The record consists of 4 parts:                       *\n                                            69264+*                                                                    *\n                                            69265+*              1. The fixed portion of the SMF header.               *\n                                            69266+*                 This mapping is invoked by calling ERBHDR macro.   *\n                                            69267+*              2. The individual header extension which contains     *\n                                            69268+*                 offset/length/number triplets to address the       *\n                                            69269+*                 record parts following the RMF product section.    *\n                                            69270+*              3. The RMF product section.                           *\n                                            69271+*                 This mapping is invoked by calling ERBPRO macro.   *\n                                            69272+*              4. The RMF data sections                              *\n                                            69273+*                                                                    *\n                                            69274+*01* Notes: None                                                     *\n                                            69275+*                                                                    *\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  344\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           69276+*01* Size:                                                           *\n                                            69277+*                                                                    *\n                                            69278+*    Subtype 1:                                                      *\n                                            69279+*                                                                    *\n                                            69280+*    - Common Header . . . . . . . . . :  36 bytes                   *\n                                            69281+*    - Header Extension  . . . . . . . :  40 bytes                   *\n                                            69282+*    - Product Section . . . . . . . . :  60 bytes                   *\n                                            69283+*    - CPU Control Section . . . . . . : 220 bytes           @OA29530*\n                                            69284+*    - CPU Data Section  . . . . . . . :  80 bytes               @41C*\n                                            69285+*    - ASID Data Section . . . . . . . : 788 bytes               @41C*\n                                            69286+*    - PR/SM Partition Data Section  . :  72 bytes               @I3C*\n                                            69287+*    - PR/SM LPD Data Section  . . . . :  80 bytes               @I3C*\n                                            69288+*    - CPU-identification Name Section :  24 bytes               @11C*\n                                            69289+*                                                                    *\n                                            69290+*    Subtype 2:                                                  @J1A*\n                                            69291+*                                                                    *\n                                            69292+*    - Common Header . . . . . . . . . :  36 bytes               @J1A*\n                                            69293+*    - Header Extension  . . . . . . . :  16 bytes               @J1A*\n                                            69294+*    - Product section . . . . . . . . :  60 bytes               @J1A*\n                                            69295+*    - Crypto Coprocessor data section :  48 bytes               @K1C*\n                                            69296+*    - Crypto Accelerator data section : 368 bytes           @OA31349*\n                                            69297+*    - ICSF Data Section . . . . . . . : 284 bytes           @OA28670*\n                                            69298+*                                                                    *\n                                            69299+*                                                                    *\n                                            69300+*01* Method of Access: see below:                                    *\n                                            69301+*                                                                    *\n                                            69302+*    BAL : ERBSMF70 type                                             *\n                                            69303+*          If the type is not specified, all subtypes are            *\n                                            69304+*          included.                                                 *\n                                            69305+*                                                                    *\n                                            69306+*    PL/X: %IFAR70n='YES' semicolon  n = subtype selected            *\n                                            69307+*          %INCLUDE SYSLIB(ERBSMF70) semicolon                       *\n                                            69308+*          If the preprocessor variable %IFAR70n is not set          *\n                                            69309+*          in the including module, subtype 1 is included.           *\n                                            69310+*                                                                    *\n                                            69311+*01* Pointed to by: SMF70PTR                                         *\n                                            69312+*                                                                    *\n                                            69313+*01* Serialization: None                                             *\n                                            69314+*                                                                    *\n                                            69315+*01* Created by:                                                     *\n                                            69316+*                                                                    *\n                                            69317+*02*    Subtype 1: ERBMFDCP                                          *\n                                            69318+*02*    Subtype 2: ERBMFDCY                                          *\n                                            69319+*                                                                    *\n                                            69320+*01* Deleted by: N/A                                                 *\n                                            69321+*                                                                    *\n                                            69322+*01* Module-Type: BILINGUAL MAPPING MACRO                            *\n                                            69323+*                                                                    *\n                                            69324+*01* Status: HRM7770                                             @41C*\n                                            69325+*                                                                    *\n                                            69326+*01*Dependencies: None                                               *\n                                            69327+*                                                                    *\n                                            69328+*01*Distribution Library: Sys1.Maclib                                *\n                                            69329+*                                                                    *\n                                            69330+*01* Change Activity = see below                                     *\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  345\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           69331+*                                                                    *\n                                            69332+*      $P1=MISC,HRM3302,,SHR: Alignment of record sections       @P1A*\n                                            69333+*      $Q1=NEWFUN,HRM3302,,WEY: SUPPORT FOR NEW FUNCTION         @Q1A*\n                                            69334+*      $E1=NEWFUN,HRM3302,,FLJ: SPE (E040201) SUPPORT            @E1A*\n                                            69335+*      CHANGE THE INVOCATION OF ERBCOPY1                     @ZA92372*\n                                            69336+*      CORRECT BIT SETTING FOR SMF70VON                      @ZA94355*\n                                            69337+*      $X0=OY11330,HRM4410,,WRC: Berryman support (PR/SM) BFY    @X0A*\n                                            69338+*      $X1=OY11330,HRM4410,,WRC: Fixes to PR/SM X0 level         @X1A*\n                                            69339+*      $A1=APPC,JRM4421,,BGBO: APPC tolerating support           @A1A*\n                                            69340+*      PAE: Support for Partition Effective Dispatch Time    @YA36668*\n                                            69341+*      $B1=R430,HRM4430,,THE: Distribution lib in prolog         @B1A*\n                                            69342+*      $B2=OMVS,HRM4430,,RPT: OPEN/MVS Toleration Support        @B2A*\n                                            69343+*      WBA: Fix different value of CPU BUSY TIME PERCENTAGE  @YA58838*\n                                            69344+*      WBA:VARY ONLINE for a processor in LPAR may show negative     *\n                                            69345+*          values in the LPAR report and/or cause 0C9 ABENDS @YA67002*\n                                            69346+*      $D1=R520,HRM5520,,GBO: Cleanup of PADI-inconsistencies    @D1A*\n                                            69347+*      SHR: Corrects processing for VARY activity            @WA27840*\n                                            69348+*      $H1=MISC,HRM6607,,FDL: Dynamic ICF expansion              @H1A*\n                                            69349+*      $H2=MISC,HRM6607,,FDL: CPU model info from IOSDSHID       @H2A*\n                                            69350+*      $I1=DIAG,HRM7703,,GUB: Diagnose 204 and 224 support       @I1A*\n                                            69351+*      $I2=STSI,HRM7703,,GUB: Concurrent CP upgrade              @I2A*\n                                            69352+*      $I3=LCLU,HRM7703,,HBE: LPAR Clustering                    @I3A*\n                                            69353+*      PS: License Manager enhancements                      @WA46477*\n                                            69354+*      $J1=CRYPTO,OW49808,,DAG: Crypto support                   @J1A*\n                                            69355+*      $J2=ICSF,OW49808,,DAG: ICSF support                       @J2A*\n                                            69356+*      PMU: SMF70CSF and SMF70ESF field descriptions changed @WA55906*\n                                            69357+*      $K1=XCRYPTO,OW56656,,VTH: PCIX crypto support             @K1A*\n                                            69358+*      $K2=IFA,OA05731,,WLR: IFA support                         @K2A*\n                                            69359+*      $L1=SCRT,HRM7720,,GUB: SCRT enhancements                  @L1A*\n                                            69360+*      $L2=GT16W2,HRM7720,,GUB: Greater 16 CPUs - Stage 2        @L2A*\n                                            69361+*      $L3=CSRSI,HRM7720,,GUB: Adds CPC physical model           @L3A*\n                                            69362+*      $L4=MISC,HRM7720,,GUB: Updates logical partition flags    @L4A*\n                                            69363+*      $L5=DANU,OA10346,,GUB: ICSF SHA-256 hashing support       @L5A*\n                                            69364+*      GUB: SCRT sysplex timer offset support                @OA11375*\n                                            69365+*      GUB: Save user partition ID in SMF70                  @OA10346*\n                                            69366+*      GUB: System Utility Processor (SUP) support           @OA13499*\n                                            69367+*      $01=GCAP,HRM7730,,VTH: Group Capacity support             @01A*\n                                            69368+*      $02=MISC,HRM7730,,GUB: Add CPC plant and sequence code    @02A*\n                                            69369+*      $11=ZHE,OA12774,,VTH: z10 and HiperDispatch support       @11A*\n                                            69370+*      $12=WLMBLW,OA18244,,GUB: Blocked workload support         @12A*\n                                            69371+*      $21=SHA512,HRM7750,,GUB: z10 SHA-512 support              @21A*\n                                            69372+*      $22=DOC,HRM7750,,GUB: Improves SMF70GJT description       @22A*\n                                            69373+*      GUB: Hiperdispatch improvements                       @OA24074*\n                                            69374+*      GUB: Infrastructure support for new function          @OA25078*\n                                            69375+*      GUB: Polarization indicator                           @OA21140*\n                                            69376+*      GUB: Considers parked CPUs for SMF70Qxx counts        @OA21140*\n                                            69377+*      GUB: Adds normalization factor for zIIP               @OA21140*\n                                            69378+*      $31=G64CPU,HRM7760,,GUB: Enhance PL/X declares            @31A*\n                                            69379+*      $32=STATS,HRM7760,,GUB: Additional SMF statistics         @32A*\n                                            69380+*      $33=DOC,HRM7760,,GUB: Format of SMF70UPI is binary        @33A*\n                                            69381+*      $34=GCAP2,HRM7760,,GUB: Group capacity enhancements       @34A*\n                                            69382+*      GUB: CEX3 crypto and AES support                      @OA28670*\n                                            69383+*      JKU: Infrastructure support for new function          @OA29310*\n                                            69384+*      JKU: Power-Save and Cycle-Steering Modes              @OA29530*\n                                            69385+*      RRe: SIGP measurement                                 @OA29820*\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  346\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           69386+*      $41=WEB,HRM7770,,RRe: WEB queue distribution              @41A*\n                                            69387+*      JKU: Crypto support for 4096-bit operations           @OA31349*\n                                            69388+*    $51=VMENH,HRM7780,,GUB: Enhanced CPU reporting for VM guest @51A*\n                                            69389+*      $52=SYSMGM,HRM7780,,RRe: Physical-System-Management Time  @52A*\n                                            69390+*      RRe: Improvements for Phyical Sys Mgmt Time Support   @OA36188*\n                                            69391+*                                                                    *\n                                            69392+****** END OF SPECIFICATIONS *****************************************\n                                            69393+*                                                                    */\n                                            69394+*        %GOTO PLS70;\n                                            69395+*/*\n                                            69396+*\n-\n0                                           69398+**********************  COMMON SMF HEADER  ****************************\n                                            69400+***** START OF SPECIFICATIONS *****************************************\n                                            69401+*                                                                     *\n                                            69402+*   MODULE-NAME = ERBHDR                                              *\n                                            69403+*                                                                     *\n                                            69404+*   DESCRIPTIVE-NAME = GENERAL MAPPING OF RMF SMF RECORD HEADER       *\n                                            69405+*                                                                     *\n                                            69407+*\n                                            69408+*        PROPRIETARY STATEMENT:\n                                            69409+*           Licensed Materials - Property of IBM\n                                            69410+*           \"Restricted Materials of IBM\"\n                                            69411+*           Copyright IBM Corp. 1977, 2011                        @51C\n                                            69412+*\n                                            69413+*           Status: z/OS V1R13 RMF (HRM7780)                      @51C\n                                            69414+*\n                                            69415+*\n                                            69416+*   FUNCTION : THIS MACRO MAPS THE GENERAL HEADER PART OF RMF         *\n                                            69417+*              SMF RECORDS DEPENDING ON THE MACRO CALL.               *\n                                            69418+*              IT IS CALLED BY MACRO ERBSMF                           *\n                                            69419+*                                    ERBSMF70                         *\n                                            69420+*                                       :                             *\n                                            69421+*                                    ERBSMF79                         *\n                                            69422+*                                                                     *\n                                            69423+*   MODULE-TYPE = BILINGUAL MAPPING MACRO                             *\n                                            69424+*                                                                     *\n                                            69425+*   METHOD OF INVOCATION = SEE BELOW                                  *\n                                            69426+*                                                                     *\n                                            69427+*      PLS - .QUESTION MARK.ERBHDR ATTRIBUT(ATTRIBUTES)               *\n                                            69428+*            .QUESTION MARK.ERBHDR TYPE(70) ATTRIBUT(ATTRIBUTES)      *\n                                            69429+*                                       :                             *\n                                            69430+*            .QUESTION MARK.ERBHDR TYPE(79) ATTRIBUT(ATTRIBUTES)      *\n                                            69431+*            WHERE ATTRIBUTES ARE ANY ACCEPTABLE PLS ATTRIBUTES       *\n                                            69432+*            FOR STRUCTURE DECLARATIONS.                              *\n                                            69433+*                                                                     *\n                                            69434+*      BAL - ERBHDR                                                   *\n                                            69435+*          - ERBHDR 70                                                *\n                                            69436+*                :                                                    *\n                                            69437+*          - ERBHDR 79                                                *\n                                            69438+*                                                                     *\n                                            69439+*   DISTRIBUTION LIBRARY: ARMFMAC1                                @B1A*\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  347\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           69440+*                                                                     *\n                                            69441+*   CHANGE-ACTIVITY = SEE BELOW                                       *\n                                            69442+* $N1=PP,HRM3102,,NEL: RMF 3.1 POST PROCESSOR ENHANCEMENTS            *\n                                            69443+* $P1=MISC,HRM3302,,CIH: MACRO COMMENTARY ENHANCEMENTS            @P1A*\n                                            69444+* $R0=220SUP,JRM3422,,WRC: Support for MVS/SP220                  @R0A*\n                                            69445+* $X0=OY11330,HRM4410,,WRC: Berryman support (PR/SM) BFY          @X0A*\n                                            69446+* $W1=SP310E,JRM4411,,PAE: MVS/ESA support                        @W1A*\n                                            69447+* $A1=SP420,JRM4421,,BGBO: MVS SP 4 support                       @A1A*\n                                            69448+* $B1=R430,HRM4430,,THE: Distribution lib in prolog               @B1A*\n                                            69449+* GBO: Cleanup of PADI-inconsistencies                        @WA05544*\n                                            69450+*                                                                     *\n                                            69451+****** END OF SPECIFICATIONS ******************************************\n 00000000                00000000 00000054  69452+SMF70HDR  DSECT                                                         04-ERBHDR\n 00000000                                   69453+SMF70HDC  DS    CL36     COMPLETE HEADER+PRODUCT SECTION TRIPL @WA05544 04-ERBHDR\n 00000024                00000024 00000000  69454+          ORG   SMF70HDC                                       @WA05544 04-ERBHDR\n 00000000                                   69455+SMF70LEN  DS    BL2      RECORD LENGTH                                  04-ERBHDR\n 00000002                                   69456+SMF70SEG  DS    BL2      SEGMENT DESCRIPTOR                             04-ERBHDR\n 00000004                                   69457+SMF70FLG  DS    BL1      HEADER FLAG BYTE                               04-ERBHDR\n                         00000080           69458+SMF70RRF  EQU   X'80'    NEW RECORD FORMAT                              04-ERBHDR\n                         00000040           69459+SMF70SUT  EQU   X'40'    SUBTYPES USED                             @R0A 04-ERBHDR\n                         00000010           69460+SMF70V4   EQU   X'10'    MVS/ESA Version 4                         @A1A 04-ERBHDR\n                         00000008           69461+SMF70ESA  EQU   X'08'    MVS/ESA VERSION                           @W1A 04-ERBHDR\n                         00000004           69462+SMF70VXA  EQU   X'04'    MVS/XA VERSION                            @R0A 04-ERBHDR\n                         00000002           69463+SMF70OS   EQU   X'02'    OPERATING SYSTEM IS OS/VS2                     04-ERBHDR\n                         00000001           69464+SMF70BFY  EQU   X'01'    System running in PR/SM mode              @J1C 04-ERBHDR\n 00000005                                   69465+SMF70RTY  DS    BL1      RECORD TYPE                                    04-ERBHDR\n 00000006                                   69466+SMF70TME  DS    BL4      TOD RECORD WRITTEN                             04-ERBHDR\n 0000000A                                   69467+SMF70DTE  DS    PL4      DATE RECORD WRITTEN                            04-ERBHDR\n 0000000E                                   69468+SMF70SID  DS    CL4      SYSTEM ID FROM INSTALLATION                    04-ERBHDR\n 00000012                                   69469+SMF70SSI  DS    CL4      SUBSYSTEM ID (RMF)                             04-ERBHDR\n 00000016                                   69470+SMF70STY  DS    BL2      SUBTYPE                                        04-ERBHDR\n 00000018                                   69471+SMF70TRN  DS    BL2      NUMBER OF TRIPLETS IN THIS RECORD              04-ERBHDR\n 0000001A                                   69472+          DS    BL2      RESERVED                                       04-ERBHDR\n 0000001C                                   69473+SMF70PRS  DS    BL4      OFFSET TO RMF PRODUCT SECTION                  04-ERBHDR\n 00000020                                   69474+SMF70PRL  DS    BL2      LENGTH OF RMF PRODUCT SECTION                  04-ERBHDR\n 00000022                                   69475+SMF70PRN  DS    BL2      NUMBER OF RMF PRODUCT SECTIONS                 04-ERBHDR\n-\n                                            69477+**********************  INDIVIDUAL HEADER EXTENSION  ******************\n-\n-\n                                            69480+**********************  Subtype 1  ******************************* @J1A\n-\n 00000024                                   69482+SMF70HDX DS    0CL40    TOTAL HEADER EXTENSION                     @D1A 03-ERBSMF70\n 00000024                                   69483+SMF70CCS DS    BL4      Offset to CPU Control section                   03-ERBSMF70\n 00000028                                   69484+SMF70CCL DS    BL2      Length of CPU Control section                   03-ERBSMF70\n 0000002A                                   69485+SMF70CCN DS    BL2      Number of CPU Control sections                  03-ERBSMF70\n 0000002C                                   69486+SMF70CPS DS    BL4      Offset to CPU Data section                      03-ERBSMF70\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  348\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000030                                   69487+SMF70CPL DS    BL2      Length of CPU Data section                      03-ERBSMF70\n 00000032                                   69488+SMF70CPN DS    BL2      Number of CPU Data sections                     03-ERBSMF70\n 00000034                                   69489+SMF70ASS DS    BL4      Offset to ASID Data section                     03-ERBSMF70\n 00000038                                   69490+SMF70ASL DS    BL2      Length of ASID Data section                     03-ERBSMF70\n 0000003A                                   69491+SMF70ASN DS    BL2      Number of ASID Data sections                    03-ERBSMF70\n 0000003C                                   69492+SMF70BCS DS    BL4      Offset to PR/SM Partition data sections         03-ERBSMF70\n 00000040                                   69493+SMF70BCL DS    BL2      Length of PR/SM Partition data section          03-ERBSMF70\n 00000042                                   69494+SMF70BCN DS    BL2      Number of PR/SM Partition data sections         03-ERBSMF70\n 00000044                                   69495+SMF70BVS DS    BL4      Offset to PR/SM Processor data sections         03-ERBSMF70\n 00000048                                   69496+SMF70BVL DS    BL2      Length of PR/SM Processor data section          03-ERBSMF70\n 0000004A                                   69497+SMF70BVN DS    BL2      Number of PR/SM Processor data sections         03-ERBSMF70\n 0000004C                                   69498+SMF70CNS DS    BL4      Offset to CPU-identification name section  @I1A 03-ERBSMF70\n 00000050                                   69499+SMF70CNL DS    BL2      Length of CPU-identification name section  @I1A 03-ERBSMF70\n 00000052                                   69500+SMF70CNN DS    BL2      Number of CPU-identification name sections @I1A 03-ERBSMF70\n-\n 00000054                00000054 00000024  69502+         ORG   SMF70CCS                                            @J1A 03-ERBSMF70\n                                            69503+**********************  Subtype 2  ******************************* @J1A\n-\n 00000024                                   69505+SMF702HX DS    0CL24    Total Header extension                     @J1A 03-ERBSMF70\n 00000024                                   69506+SMF7023S DS    BL4      Offset to crypto coprocessor section       @K1C 03-ERBSMF70\n 00000028                                   69507+SMF7023L DS    BL2      Length of crypto coprocessor section       @K1C 03-ERBSMF70\n 0000002A                                   69508+SMF7023N DS    BL2      Number of crypto coprocessor section       @K1C 03-ERBSMF70\n 0000002C                                   69509+SMF7024S DS    BL4      Offset to crypto accelerator section       @K1C 03-ERBSMF70\n 00000030                                   69510+SMF7024L DS    BL2      Length of crypto accelerator section       @K1C 03-ERBSMF70\n 00000032                                   69511+SMF7024N DS    BL2      Number of crypto accelerator section       @K1C 03-ERBSMF70\n 00000034                                   69512+SMF702CS DS    BL4      Offset to ICSF section                     @K1C 03-ERBSMF70\n 00000038                                   69513+SMF702CL DS    BL2      Length of ICSF section                     @K1C 03-ERBSMF70\n 0000003A                                   69514+SMF702CN DS    BL2      Number of ICSF section                     @K1C 03-ERBSMF70\n                                            69515+*\n-\n 0000003C                0000003C 00000024  69517+         ORG   SMF7023S                                            @J1A 03-ERBSMF70\n-\n                                            69519+**********************  COMMON RMF PRODUCT SECTION  *******************\n                                            69521+*\n                                            69522+**/  BLOCKANSWER SKIP COLUMN(2);\n                                            69523+*'/* START OF SPECIFICATIONS ****************************************/'\n                                            69524+*'/*01* PROPRIETARY STATEMENT=                                      */'\n                                            69525+*    ENDANSWER;\n                                            69526+*/*\n                                            69528+*\n                                            69529+*        PROPRIETARY STATEMENT:\n                                            69530+*           Licensed Materials - Property of IBM\n                                            69531+*           \"Restricted Materials of IBM\"\n                                            69532+*           Copyright IBM Corp. 1977, 2011                        @51C\n                                            69533+*\n                                            69534+*           Status: z/OS V1R13 RMF (HRM7780)                      @51C\n                                            69535+*\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  349\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           69536+**/  BLOCKANSWER SKIP COLUMN(2);\n                                            69537+*'      ?ERBCOPY1;                                                    '\n                                            69538+*'/*                                                                */'\n                                            69539+*'/*01* DESCRIPTIVE_NAME: General mapping of RMF Product Section    */'\n                                            69540+*'/*02*  ACRONYM:  PRO                                              */'\n                                            69541+*'/*                                                                */'\n                                            69542+*'/*01* MACRO-NAME:  ERBPRO                                         */'\n                                            69543+*'/*                                                                */'\n                                            69544+*'/*01* DSECT NAME:  SMFnnPRO, if record type specified             */'\n                                            69545+*'/*                 RMFPRO  , if record type omitted               */'\n                                            69546+*'/*                                                                */'\n                                            69547+*'/*01* COMPONENT:  Resource Measurement Facility (27404)           */'\n                                            69548+*'/*                                                                */'\n                                            69549+*'/*01* EYE-CATCHER:  N/A                                           */'\n                                            69550+*'/*02*  OFFSET:  N/A                                               */'\n                                            69551+*'/*02*  LENGTH:  N/A                                               */'\n                                            69552+*'/*                                                                */'\n                                            69553+*'/*01* STORAGE ATTRIBUTES:                                         */'\n                                            69554+*'/*02*  SUBPOOL:    same as SMF record mapping                     */'\n                                            69555+*'/*02*  KEY:        same as SMF record mapping                     */'\n                                            69556+*'/*02*  RESIDENCY:  same as SMF record mapping                     */'\n                                            69557+*'/*02*  MAIN STORAGE:      N/A                                     */'\n                                            69558+*'/*02*  AUXILIARY STORAGE: N/A                                     */'\n                                            69559+*'/*02*  VIRTUAL STORAGE:   N/A                                     */'\n                                            69560+*'/*                                                                */'\n                                            69561+*'/*01* SIZE: 104 bytes - common section                        @C1C*/'\n                                            69562+*'/*         + 16 bytes - split/reassembly control (static)     @C1C*/'\n                                            69563+*'/*         +  4 bytes * SMFHDR extension triplet -            @C1C*/'\n                                            69564+*'/*                      - split/reassembly (variable)         @C1C*/'\n                                            69565+*'/*                                                                */'\n                                            69566+*'/*01* CREATED BY: N/A                                             */'\n                                            69567+*'/*                                                                */'\n                                            69568+*'/*01* POINTED TO BY: N/A                                          */'\n                                            69569+*'/*                                                                */'\n                                            69570+*'/*01* SERIALIZATION:                                              */'\n                                            69571+*'/*     Not provided                                               */'\n                                            69572+*'/*                                                                */'\n                                            69573+*'/*01* FUNCTION:                                                   */'\n                                            69574+*'/*02*  This macro maps the RMF product section of RMFs            */'\n                                            69575+*'/*     SMF records depending on the macro call.                   */'\n                                            69576+*'/*     It is called by macro ERBSMF                               */'\n                                            69577+*'/*                           ERBSMF70                             */'\n                                            69578+*'/*                              :                                 */'\n                                            69579+*'/*                           ERBSMF79                             */'\n                                            69580+*'/*     NOTE:                                                      */'\n                                            69581+*'/*      When this data section is build in a NON-RMF environment, */'\n                                            69582+*'/*      all data are zero except:                             @G1A*/'\n                                            69583+*'/*         SMF74PRD = product name, e.g. CRR instead of RMF   @G1A*/'\n                                            69584+*'/*         SMF74IST = time (0hhmmssF),                        @G1A*/'\n                                            69585+*'/*                    time when the record is processed       @G1A*/'\n                                            69586+*'/*         SMF74DAT = date (0cyydddF),                        @G1A*/'\n                                            69587+*'/*                    date when the record is processed       @G1A*/'\n                                            69588+*'/*         SMF74SRL = SMF record level change number          @G1A*/'\n                                            69589+*'/*         SMF74IET = 8 TOKEN, 8 bytes TOD value              @G1A*/'\n                                            69590+*'/*                    TOD value when the record is processed  @G1A*/'\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  350\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           69591+*'/*                                                                */'\n                                            69592+*'/*01* METHOD OF ACCESS:                                           */'\n                                            69593+*'/*02*  ASM:                                                       */'\n                                            69594+*'/*      - ERBPRO                                                  */'\n                                            69595+*'/*      - ERBPRO 70                                               */'\n                                            69596+*'/*            :                                                   */'\n                                            69597+*'/*      - ERBPRO 79                                               */'\n                                            69598+*'/*                                                                */'\n                                            69599+*'/*02*  PL/X:                                                      */'\n                                            69600+*'/*      .question mark.ERBPRO ATTRIBUT(attributes)                */'\n                                            69601+*'/*      .question mark.ERBPRO TYPE(70) ATTRIBUT(attributes)       */'\n                                            69602+*'/*      :                                                         */'\n                                            69603+*'/*      .question mark.ERBPRO TYPE(79) ATTRIBUT(attributes)       */'\n                                            69604+*'/*                                                                */'\n                                            69605+*'/*      where attributes are any acceptable PL/X attributes       */'\n                                            69606+*'/*      for structure declarations.                               */'\n                                            69607+*'/*                                                                */'\n                                            69608+*'/*01* MODULE-TYPE: Bilingual mapping macro                        */'\n                                            69609+*'/*                                                                */'\n                                            69610+*'/*01* DELETED BY: N/A                                             */'\n                                            69611+*'/*                                                                */'\n                                            69612+*'/*01* FREQUENCY:  N/A                                             */'\n                                            69613+*'/*                                                                */'\n                                            69614+*'/*01* DEPENDENCIES: None                                          */'\n                                            69615+*'/*                                                                */'\n                                            69616+*'/*01* DISTRIBUTION LIBRARY: ARMFMAC1                              */'\n                                            69617+*'/*                                                                */'\n                                            69618+*'/*01* CHANGE ACTIVITY:                                            */'\n                                            69619+*'/* $N1=PP,HRM3102,,NEL: RMF 3.1 POST PROCESSOR ENHANCEMENTS       */'\n                                            69620+*'/* $O1=4381SP,JRM3212,,SHR: 4381 - SUPPORT                    @O1A*/'\n                                            69621+*'/* $O2=SOLVSP,JRM3212,,SHR: SOFTWARE LEVEL SUPPORT            @O2A*/'\n                                            69622+*'/* $P1=3090,HRM3302,,HEN: 3090 - SUPPORT                      @P1A*/'\n                                            69623+*'/* $P2=ES,HRM3302,,CIH: SP2.2 EXTENDED STORE                  @P2A*/'\n                                            69624+*'/* $Q1=MISC,HRM3402,,WEY: CSA FIXED FRAMES COUNT INTERFACE    @Q1A*/'\n                                            69625+*'/* $X0=OY11330,HRM4410,,WRC: PR/SM support                    @X0A*/'\n                                            69626+*'/* SMF Record Change Level Support                        @YA28449*/'\n                                            69627+*'/* $Z1=SERIAL,HRM4420,,WRC: Serial & switch                   @Z1A*/'\n                                            69628+*'/* $B1=SYNC,HRM4430,,GBO: Synchronize Measurements            @B1A*/'\n                                            69629+*'/* $C1=WLM,HRM4440,,HKH: WLM Support                          @C1A*/'\n                                            69630+*'/* $C2=SPLIT,HRM4440,,SCD: Split/Reassembly                   @C2A*/'\n                                            69631+*'/* $E1=CVT,HRM5530,,SUW: Report new product type OS/390 and       */'\n                                            69632+*'/*         software level. Will be added with APAR OW15873        */'\n                                            69633+*'/*         (OS/390 Release 1).                                @E1A*/'\n                                            69634+*'/* $G1=CACHE,HRM6606,,THE: 256 device support                 @G1A*/'\n                                            69635+*'/* $I1=BIT64,HRM7703,,GUB: 64 Bit real support                @I1A*/'\n                                            69636+*'/* $J1=MISC,HRM7705,,GUB: Comment changes for zSeries         @J1A*/'\n                                            69637+*'/* FDL: Prepares for up to 65535 devices                  @WA55906*/'\n                                            69638+*'/* $K1=MISC,HRM7708,,GUB: Allign and update comments          @K1A*/'\n                                            69639+*'/* $K2=IFA,OA05731,,WLR: IFA support                          @K2A*/'\n                                            69640+*'/* GUB: System Utility Processor (SUP) support            @OA13499*/'\n                                            69641+*'/* $11=LPS,HRM7740,,WLR: New function                         @11A*/'\n                                            69642+*'/* $21=COMM,HRM7750,,WLR: 64-bit Common Memory support        @21A*/'\n                                            69643+*'/* $22=ICN,HRM7750,,GUB: Dynamic CPU addition                 @22A*/'\n                                            69644+*'/*                                                                */'\n                                            69645+*'/* END OF SPECIFICATIONS ******************************************/'\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  351\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           69646+*    ENDANSWER;                     /*\n 00000000                00000000 00000068  69647+SMF70PRO DSECT                                                          04-ERBPRO\n 00000000                                   69648+SMF70MFV DS    CL2      RMF VERSION NUMBER, WITH INTRODUCTION OF   @O2C 04-ERBPRO\n                                            69649+*                       THE MVS SOFTWARE LEVEL THE FORMAT CHANGES  @O2A\n                                            69650+*                       TO PACKED 'VRLF'                           @O2A\n                                            69651+*                       ... V = VERSION NUMBER                     @O2A\n                                            69652+*                       ... R = RELEASE NUMBER                     @O2A\n                                            69653+*                       ... L = MODIFICATION LEVEL                 @O2A\n 00000002                                   69654+SMF70PRD DS    CL8      PRODUCT NAME                                    04-ERBPRO\n 0000000A                                   69655+SMF70IST DS    PL4      TOD MONITOR INTERVAL START: 0HHMMSSF            04-ERBPRO\n 0000000E                                   69656+SMF70DAT DS    PL4      DATE MONITOR INTERVAL START: 00YYDDDF           04-ERBPRO\n 00000012                                   69657+SMF70INT DS    PL4      DURATION OF MONITOR INTERVAL: MMSSTTTF          04-ERBPRO\n                                            69658+*\n 00000016                                   69659+SMF70MFL DS    BL2      RESERVED                                   @J1C 04-ERBPRO\n 00000018                                   69660+SMF70SAM DS    BL4      NUMBER OF SAMPLES                               04-ERBPRO\n 0000001C                                   69661+SMF70RV2 DS    BL2      RESERVED                                        04-ERBPRO\n 0000001E                                   69662+SMF70FLA DS    BL2      FLAGS                                           04-ERBPRO\n                         00000080           69663+SMF70CNV EQU   X'80'    DATA CONVERT.FROM VER.2                         04-ERBPRO\n                         00000040           69664+SMF70ISS EQU   X'40'    INVALID SAMPLES TO BE SKIPPED              @Q1A 04-ERBPRO\n                         00000020           69665+SMF70M3R EQU   X'20'    Record was written by RMF Monitor III      @B1A 04-ERBPRO\n                         00000010           69666+SMF70ISM EQU   X'10'    Interval was written under SMF control     @B1A 04-ERBPRO\n 00000020                                   69667+SMF70RLS DS    CL4      RESERVED                                   @J1C 04-ERBPRO\n 00000024                                   69668+SMF70CYC DS    PL4      CYCLE IN PACKED DECIMAL 000TTTTF                04-ERBPRO\n 00000028                                   69669+SMF70MVS DS    CL8      MVS software level (consists of an acronym @J1C 04-ERBPRO\n                                            69670+*                       and the version, release, and modification @J1C\n                                            69671+*                       level - ZVvvrrmm).                         @J1C\n 00000030                                   69672+SMF70IML DS    XL1      Indicates the type of processor complex    @J1C 04-ERBPRO\n                                            69673+*                       on which data measurements were taken      @J1C\n                                            69674+*                       X'03' = 9672, zSeries, z9              @OA13499\n 00000031                                   69675+SMF70PRF DS    BL1      PROCESSOR FLAGS                            @P2A 04-ERBPRO\n                         00000080           69676+SMF70QES EQU   X'80'    Equipped with Expanded Storage             @P2A 04-ERBPRO\n                         00000040           69677+SMF70CNE EQU   X'40'    Equipped with ESCON Channel                @Z1A 04-ERBPRO\n                         00000020           69678+SMF70DRC EQU   X'20'    ESCON Director in configuration            @Z1A 04-ERBPRO\n                         00000010           69679+SMF70EME EQU   X'10'    System in z/ARCH mode                      @I1A 04-ERBPRO\n                         00000008           69680+SMF70PRI EQU   X'08'    At least one zAAP is currently installed   @22C 04-ERBPRO\n                         00000004           69681+SMF70PRP EQU   X'04'    At least one zIIP is currently installed   @22C 04-ERBPRO\n                         00000002           69682+SMF70PED EQU   X'02'    Enhanced DAT architecture available        @21C 04-ERBPRO\n 00000032                                   69683+SMF70PTN DS    BL1      PR/SM PARTITION NUMBER                     @Z1C 04-ERBPRO\n 00000033                                   69684+SMF70SRL DS    BL1      SMF record level                       @YA28449 04-ERBPRO\n 00000034                                   69685+SMF70IET DS    CL8      Interval expiration time token             @B1A 04-ERBPRO\n 0000003C                                   69686+SMF70LGO DS    CL8      Offset GMT to local time                   @C1A 04-ERBPRO\n 00000044                                   69687+SMF70RAO DS    BL4      Offset to reassembly area relative to      @C2A 04-ERBPRO\n                                            69688+*                       start of RMF product section               @C2A\n 00000048                                   69689+SMF70RAL DS    BL2      Length of reassembly area. Length depends  @C2A 04-ERBPRO\n                                            69690+*                       on the record type/subtype but is fix for  @C2A\n                                            69691+*                       a specific type/subtype                    @C2A\n 0000004A                                   69692+SMF70RAN DS    BL2      Number of reassembly area. Only 0 or 1 are @C2A 04-ERBPRO\n                                            69693+*                       valid. This field is used to indicate      @C2A\n                                            69694+*                       whether a SMF record is a broken record    @C2A\n                                            69695+*                       (0 = NOT broken, 1 = is a broken record).  @C2A\n                                            69696+*                       Offset and length are only valid if        @C2A\n                                            69697+*                       SMFxxRAN = 1. Reassembly area is only      @C2A\n                                            69698+*                       present in broken records                  @C2A\n 0000004C                                   69699+SMF70OIL DS    BL2      Original interval length                   @C2A 04-ERBPRO\n                                            69700+*                       (as defined in the session option or by    @C2A\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  352\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           69701+*                        SMF)                                      @C2A\n 0000004E                                   69702+SMF70SYN DS    BL2      SYNC value in seconds                      @C2A 04-ERBPRO\n 00000050                                   69703+SMF70GIE DS    CL8      Projected gathering interval end           @C2A 04-ERBPRO\n                                            69704+*                       (STCK format) GMT time                     @C2A\n 00000058                                   69705+SMF70XNM DS    CL8      Sysplex name                               @C1A 04-ERBPRO\n                                            69706+*                       (as defined in ECVTSPLX)                   @C1A\n 00000060                                   69707+SMF70SNM DS    CL8      System name for current system             @C1A 04-ERBPRO\n                                            69708+*                       (as defined in CVTSNAME)                   @C1A\n 00000000                00000000 00000010  69709+SMF70RHD DSECT                                                          04-ERBPRO\n 00000000                                   69710+SMF70RBR DS    BL2      Total number of broken records build from  @C2A 04-ERBPRO\n                                            69711+*                       the original large record                  @C2A\n 00000002                                   69712+SMF70RSQ DS    BL2      Sequence number of this broken record.     @C2A 04-ERBPRO\n                                            69713+*                       Every broken record build from the same    @C2A\n                                            69714+*                       large record must have a unique sequence   @C2A\n                                            69715+*                       number. Broken records with sequence       @C2A\n                                            69716+*                       numbers from 1 to SMFxxRBR must exist      @C2A\n 00000004                                   69717+SMF70RIO DS    BL4      Offset to first reassembly information     @C2A 04-ERBPRO\n                                            69718+*                       block relative to start of reassembly      @C2A\n                                            69719+*                       area header                                @C2A\n 00000008                                   69720+SMF70RIL DS    BL2      Length of reassembly information block     @C2A 04-ERBPRO\n 0000000A                                   69721+SMF70RIN DS    BL2      Number of reassembly information blocks    @C2A 04-ERBPRO\n                                            69722+*                       (same as SMFxxTRN in header section)       @C2A\n 0000000C                                   69723+         DS    BL4      Reserved                                   @C2A 04-ERBPRO\n 00000000                00000000 00000004  69724+SMF70RBL DSECT                                                          04-ERBPRO\n 00000000                                   69725+SMF70RNN DS    BL2      Total number of sections in the original   @C2A 04-ERBPRO\n                                            69726+*                       large record. This field contains          @C2A\n                                            69727+*                       information of how many sections of a      @C2A\n                                            69728+*                       specific type were contained in the        @C2A\n                                            69729+*                       original SMF record. This field is a copy  @C2A\n                                            69730+*                       of the number field of the triplet in the  @C2A\n                                            69731+*                       original (non broken) record               @C2A\n 00000002                                   69732+SMF70RPP DS    BL2      Position of the first of one or more       @C2A 04-ERBPRO\n                                            69733+*                       consecutive section(s) described by this   @C2A\n                                            69734+*                       block as in the original record. Values in @C2A\n                                            69735+*                       the range of 1 to SMFxxRNN are valid for   @C2A\n                                            69736+*                       correct processing. A value of 0 will skip @C2A\n                                            69737+*                       processing of this information block. This @C2A\n                                            69738+*                       field provides information where the       @C2A\n                                            69739+*                       sections that are part of this broken      @C2A\n                                            69740+*                       record were placed in the original record  @C2A\n                                            69741+*                       before the split took place. The actual    @C2A\n                                            69742+*                       number of consecutive sections contained   @C2A\n                                            69743+*                       in this record is available from the       @C2A\n                                            69744+*                       actual triplet in the header extension     @C2A\n-\n                                            69746+**********************  Control Section for Subtype 1 ************ @J1A\n                                            69747+**********************  CPU CONTROL SECTION  **************************\n 00000000                00000000 000000DC  69748+SMF70CTL DSECT                                                          03-ERBSMF70\n 00000000                                   69749+SMF70MOD DS    CL2      CPU processor family                       @I2C 03-ERBSMF70\n 00000002                                   69750+SMF70VER DS    C        CPU version number                              03-ERBSMF70\n 00000003                                   69751+SMF70BNP DS    CL1      Number of physical processors assigned for      03-ERBSMF70\n                                            69752+*                       use by PR/SM\n 00000004                                   69753+SMF70INB DS    CL1      PR/SM indicator bits                            03-ERBSMF70\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  353\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000080           69754+SMF70DIF EQU   X'80'    PR/SM - Diagnose X'204' failure                 03-ERBSMF70\n                         00000040           69755+SMF70NPC EQU   X'40'    PR/SM - Number of phys procrs has changed       03-ERBSMF70\n                         00000020           69756+SMF70TSC EQU   X'20'    PR/SM - Dispatch interval value changed         03-ERBSMF70\n                         00000010           69757+SMF70PHY EQU   X'10'    PR/SM - An additional partition is presented    03-ERBSMF70\n                                            69758+*                       with the name \"PHYSICAL\".  This partition\n                                            69759+*                       includes all of the otherwise uncaptured\n                                            69760+*                       time which was used by LPAR but could not be\n                                            69761+*                       attrubuted to a specific logical partition\n                         00000008           69762+SMF70DGE EQU   X'08'    PR/SM - Diagnose X'204' extended data is        03-ERBSMF70\n                                            69763+*                       supported                                  @I3A\n                         00000004           69764+SMF70VMG EQU   X'04'    Simplified Diagnose X'204' data provided for    03-ERBSMF70\n                                            69765+*                       system running as z/VM guest. CPU consumption\n                                            69766+*                       by z/VM itself provided with partition data\n                                            69767+*                       section named \"PHYSICAL\"                   @51A\n 00000005                                   69768+SMF70STF DS    CL1      Control section flags                      @I2C 03-ERBSMF70\n                         00000080           69769+SMF70STS EQU   X'80'    Store-system-information facility          @I2A 03-ERBSMF70\n                                            69770+*                       installed\n                         00000040           69771+SMF70ADC EQU   X'40'    Physical CPU adjustment factor changed @WA46477 03-ERBSMF70\n                         00000020           69772+SMF70WUC EQU   X'20'    Service units available to MVS image            03-ERBSMF70\n                                            69773+*                       changed                                @WA46477\n                         00000010           69774+SMF70RCU EQU   X'10'    SMF70LAC is provided for systems running        03-ERBSMF70\n                                            69775+*                       in LPAR mode or as a VM guest. The value\n                                            69776+*                       does no longer include CPU wait times.     @L1A\n                         00000008           69777+SMF70HWV EQU   X'08'    SMF70MDL is the model-capacity identifier       03-ERBSMF70\n                                            69778+*                       and SMF70HWM is the physical model. If OFF,\n                                            69779+*                       SMF70MDL represents both model-capacity and\n                                            69780+*                       physical model.                            @L3A\n                         00000004           69781+SMF70PTC EQU   X'04'    CP promote slices (OPT parameter BLWLTRPCT)     03-ERBSMF70\n                                            69782+*                       changed                                    @12A\n                         00000002           69783+SMF70PLC EQU   X'02'    Swapped-in starvation threshold                 03-ERBSMF70\n                                            69784+*                       (OPT parameter BLWLINTHD) changed          @12A\n                         00000001           69785+SMF70GAV EQU   X'01'    SMF70GAU is valid                          @34A 03-ERBSMF70\n 00000006                                   69786+SMF70GTS DS    CL2      PR/SM - Dispatch interval                       03-ERBSMF70\n 00000008                                   69787+SMF70MDL DS    CL16     EBCDIC CPC model identifier.                    03-ERBSMF70\n                                            69788+*                       See Bit 4 of SMF70STF (SMF70HWV)           @L3C\n 00000018                                   69789+SMF70DSA DS    CL2      Number of Diagnose samples                 @I3A 03-ERBSMF70\n 0000001A                                   69790+SMF70IFA DS    BL2      zAAPs (IFAs) online at the end of the           03-ERBSMF70\n                                            69791+*                       interval                               @OA13499\n 0000001C                                   69792+SMF70CPA DS    CL4      Physical CPU adjustment factor (will be         03-ERBSMF70\n                                            69793+*                       used for converting CPU time to service\n                                            69794+*                       units)                                 @WA46477\n 00000020                                   69795+SMF70WLA DS    CL4      Millions of service units available to MVS      03-ERBSMF70\n                                            69796+*                       image when not running as VM guest. If running\n                                            69797+*                       as VM guest, capacity available to VM.     @J2C\n 00000024                                   69798+SMF70LAC DS    CL4      Long-term average CPU service in millions       03-ERBSMF70\n                                            69799+*                       of service units. For details, see RCTLACS\n                                            69800+*                       of IRARCT. Scope of the value depends on\n                                            69801+*                       Bit 3 of SMF70STF (SMF70RCU)               @L1C\n 00000028                                   69802+SMF70HOF DS    CL8      Hypervisor date/time offset in STCK format      03-ERBSMF70\n                                            69803+*                       (aka Sysplex timer offset)             @OA11375\n 00000030                                   69804+SMF70HWM DS    CL16     EBCDIC CPC physical model identifier. Valid     03-ERBSMF70\n                                            69805+*                       if Bit 4 of SMF70STF (SMF70HWV) is set     @L3A\n 00000040                                   69806+SMF70SUP DS    CL2      zIIPs online at end of the interval    @OA13499 03-ERBSMF70\n 00000042                                   69807+SMF70GJT DS    CL8      Time in STCK format when the partition          03-ERBSMF70\n                                            69808+*                       that wrote this record has joined or left a\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  354\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           69809+*                       capacity group (last change of group name).\n                                            69810+*                       Also set at IPL time when no member of a\n                                            69811+*                       capacity group.                            @22C\n 0000004A                                   69812+SMF70POM DS    CL4      EBCDIC plant code that identifies the plant     03-ERBSMF70\n                                            69813+*                       of manufacture for the configuration.\n                                            69814+*                       The plant code is left-justified with\n                                            69815+*                       trailing blank characters if necessary.    @02A\n 0000004E                                   69816+SMF70CSC DS    CL16     EBCDIC sequence code of the configuration.      03-ERBSMF70\n                                            69817+*                       The sequence code is right-justified with\n                                            69818+*                       leading EBCDIC zeroes if necessary.        @02A\n 0000005E                                   69819+SMF70HHF DS    CL1      Additional flags                       @OA24074 03-ERBSMF70\n                         00000080           69820+SMF70HHS EQU   X'80'    HiperDispatch supported                @OA24074 03-ERBSMF70\n                         00000040           69821+SMF70HHA EQU   X'40'    HiperDispatch is active                @OA24074 03-ERBSMF70\n                         00000020           69822+SMF70HHC EQU   X'20'    HiperDispatch status changed during             03-ERBSMF70\n                                            69823+*                       interval                               @OA24074\n 0000005F                                   69824+SMF70CR  DS    CL1      ZEP field 0                            @OA29310 03-ERBSMF70\n 00000060                                   69825+SMF70PMI DS    F        Accumulated number of blocked dispatchable      03-ERBSMF70\n                                            69826+*                       units per second that may get promoted in\n                                            69827+*                       their dispatch priority. To get the average\n                                            69828+*                       promote rate, divide SMF70PMI by SMF70SAM. @12A\n 00000064                                   69829+SMF70PMU DS    F        Number of blocked dispatchable units being      03-ERBSMF70\n                                            69830+*                       promoted during the interval               @12A\n 00000068                                   69831+SMF70PMW DS    F        Accumulated number of address spaces and        03-ERBSMF70\n                                            69832+*                       enclaves being blocked during the interval.\n                                            69833+*                       To get the average number of waiters for\n                                            69834+*                       promote, divide SMF70PMW by SMF70SAM.      @12A\n 0000006C                                   69835+SMF70PMP DS    F        Maximum number of address spaces and enclaves   03-ERBSMF70\n                                            69836+*                       found being blocked during the interval    @12A\n 00000070                                   69837+SMF70PMT DS    H        1/1000s of the CPU capacity for promote         03-ERBSMF70\n                                            69838+*                       slices (OPT parameter BLWLTRPCT)           @12A\n 00000072                                   69839+SMF70PML DS    H        Swapped-in starvation threshold. When an        03-ERBSMF70\n                                            69840+*                       address space or enclave has not received\n                                            69841+*                       CPU service within this time interval\n                                            69842+*                       although it has ready-to-run work, it is\n                                            69843+*                       considered being blocked (OPT parameter\n                                            69844+*                       BLWLINTHD)                                 @12A\n 00000074                                   69845+SMF70MPC DS    CL16     When non-zero, EBCDIC model permanent           03-ERBSMF70\n                                            69846+*                       capacity identifier of the configuration.\n                                            69847+*                       The identifier is left justified with\n                                            69848+*                       trailing blanks if necessary.              @11A\n 00000084                                   69849+SMF70MTC DS    CL16     When non-zero, EBCDIC model temporary           03-ERBSMF70\n                                            69850+*                       capacity identifier of the configuration.\n                                            69851+*                       The identifier is left justified with\n                                            69852+*                       trailing blanks if necessary.              @11A\n 00000094                                   69853+SMF70MCR DS    F        Model capacity rating. When non-zero,           03-ERBSMF70\n                                            69854+*                       this value is associated with the model\n                                            69855+*                       capacity as identified in field SMF70MDL.  @11A\n 00000098                                   69856+SMF70MPR DS    F        Model permanent capacity rating. When           03-ERBSMF70\n                                            69857+*                       non-zero, this value is associated with\n                                            69858+*                       the model permanent capacity as identified\n                                            69859+*                       in field SMF70MPC.                         @11A\n 0000009C                                   69860+SMF70MTR DS    F        Model temporary capacity rating. When           03-ERBSMF70\n                                            69861+*                       non-zero, this value is associated with\n                                            69862+*                       the model temporary capacity as identified\n                                            69863+*                       in field SMF70MTC.                         @11A\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  355\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000000A0                                   69864+SMF70ZEP DS    F        ZEP field 1                            @OA25078 03-ERBSMF70\n 000000A4                                   69865+SMF70ZER DS    CL8      ZEP field 2                            @OA25078 03-ERBSMF70\n 000000AC                                   69866+SMF70ZEE DS    CL8      ZEP field 3                            @OA25078 03-ERBSMF70\n 000000B4                                   69867+SMF70ZEC DS    CL8      ZEP field 4                            @OA25078 03-ERBSMF70\n 000000BC                                   69868+SMF70NRM DS    F        Normalization factor for zIIP. Multiply         03-ERBSMF70\n                                            69869+*                       zIIP time by this value and divide by 256\n                                            69870+*                       to get the equivalent time on a CP.    @OA21140\n 000000C0                                   69871+SMF70GAU DS    F        Long-term average of CPU service in millions    03-ERBSMF70\n                                            69872+*                       of service units which would be allowed by\n                                            69873+*                       the limit of the capacity group but is not\n                                            69874+*                       used by its members. If the value is negative,\n                                            69875+*                       this capacity group is capped.\n                                            69876+*                       Valid if Bit 7 of SMF70STF (SMF70GAV) set. @34A\n 000000C4                                   69877+SMF70ZEI DS    CL8      ZEP field 5                            @OA29310 03-ERBSMF70\n 000000CC                                   69878+SMF70NCR DS    F        Nominal model-capacity rating.                  03-ERBSMF70\n                                            69879+*                       When non-zero, this value is associated with\n                                            69880+*                       the nominal model capacity as identified in\n                                            69881+*                       field SMF70MDL. When field SMF70CAI contains\n                                            69882+*                       a value of 100, this value equals the value\n                                            69883+*                       in field SMF70MCR.                     @OA29530\n 000000D0                                   69884+SMF70NPR DS    F        Nominal permanent model-capacity rating.        03-ERBSMF70\n                                            69885+*                       When non-zero, this value is associated with\n                                            69886+*                       the nominal permanent model capacity as\n                                            69887+*                       identified in field SMF70MPC. When field\n                                            69888+*                       SMF70CAI contains a value of 100, this value\n                                            69889+*                       equals the value in field SMF70MPR.    @OA29530\n 000000D4                                   69890+SMF70NTR DS    F        Nominal temporary model-capacity rating.        03-ERBSMF70\n                                            69891+*                       When non-zero, this value is associated with\n                                            69892+*                       the nominal temporary model capacity as\n                                            69893+*                       identified in field SMF70MTC. When field\n                                            69894+*                       SMF70CAI contains a value of 100, this value\n                                            69895+*                       equals the value in field SMF70MTR.    @OA29530\n 000000D8                                   69896+SMF70CAI DS    BL1      Capacity-adjustment indication. When zero, the  03-ERBSMF70\n                                            69897+*                       indication is not reported. When in the range\n                                            69898+*                       1 to 99, some amount of reduction is indicated.\n                                            69899+*                       When 100, the machine is operating at its\n                                            69900+*                       normal capacity. Temporary capacity changes\n                                            69901+*                       that affect machine performance (for example,\n                                            69902+*                       CBU or OOCoD) are not included.        @OA29530\n 000000D9                                   69903+SMF70CCR DS    BL1      Capacity-change reason.                         03-ERBSMF70\n                                            69904+*                       Valid if SMF70CAI is non-zero. When 1, the\n                                            69905+*                       capacity change is due to the setting of a\n                                            69906+*                       manual control. When greater than 1, capacity\n                                            69907+*                       change is due to an internal machine condition\n                                            69908+*                       or exception condition external to the machine\n                                            69909+*                                                              @OA29530\n 000000DA                                   69910+         DS    CL2      Reserved                               @OA29530 03-ERBSMF70\n-\n                                            69912+**********************  CPU DATA SECTION  *****************************\n 00000000                00000000 00000050  69913+SMF70CPU DSECT                                                          03-ERBSMF70\n 00000000                                   69914+SMF70WAT DS    CL8      CPU wait time, where bit 51 = 1 microsecond     03-ERBSMF70\n 00000008                                   69915+SMF70CID DS    BL2      CPU identification                              03-ERBSMF70\n 0000000A                                   69916+SMF70CNF DS    BL1      Configuration activity indicator                03-ERBSMF70\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  356\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000008           69917+SMF70DCI EQU   8        Data available for a complete interval @WA27840 03-ERBSMF70\n                         00000004           69918+SMF70PAR EQU   4        CPU was varied during Postprocessor             03-ERBSMF70\n                                            69919+*                       duration interval\n                         00000002           69920+SMF70VAC EQU   2        Data invalid, CPU varied on or offline          03-ERBSMF70\n                         00000001           69921+SMF70STA EQU   1        CPU is online at end of interval                03-ERBSMF70\n 0000000B                                   69922+SMF70RV3 DS    BL1      Reserved                                        03-ERBSMF70\n 0000000C                                   69923+SMF70SER DS    CL3      CPU serial number (6 hexadecimal digits)        03-ERBSMF70\n 0000000F                                   69924+SMF70TYP DS    BL1      CPU type                                        03-ERBSMF70\n                                            69925+*                       0 = General purpose CP\n                                            69926+*                       1 = zAAP (IFA)                             @K2C\n                                            69927+*                       2 = zIIP                               @OA13499\n 00000010                                   69928+SMF70SLH DS    BL4      Number of entries to the I/O SLIH               03-ERBSMF70\n 00000014                                   69929+SMF70TPI DS    BL4      Number of TPI with CC=1                         03-ERBSMF70\n 00000018                                   69930+SMF70VFS DS    BL4      Number of samples when the vector bit           03-ERBSMF70\n                                            69931+*                       in the PSA image was turned on             @E1A\n 0000001C                                   69932+SMF70V   DS    BL1      Vector configuration                            03-ERBSMF70\n                         00000080           69933+SMF70VON EQU   X'80'    Vector was online                               03-ERBSMF70\n 0000001D                                   69934+SMF70CPM DS    CL3      Reserved                                   @I2C 03-ERBSMF70\n 00000020                                   69935+SMF70PAT DS    CL8      CPU parked time, bit 51 = 1 microsecond    @11C 03-ERBSMF70\n 00000028                                   69936+SMF70TCB DS    D        Number of TCB dispatches for this CPU      @32A 03-ERBSMF70\n 00000030                                   69937+SMF70SRB DS    D        Number of SRB dispatches for this CPU      @32A 03-ERBSMF70\n 00000038                                   69938+SMF70NIO DS    D        Number of I/Os for this CPU                @32A 03-ERBSMF70\n 00000040                                   69939+SMF70SIG DS    D        Total number of SIGPs for this CPU     @OA29820 03-ERBSMF70\n 00000048                                   69940+SMF70WTD DS    D        Wait dispatch count for this CPU           @41A 03-ERBSMF70\n                         00000000           69941+SMF70TCP EQU   0        General purpose CP                         @K2A 03-ERBSMF70\n                         00000001           69942+SMF70TIF EQU   1        zAAP (IFA)                                 @K2A 03-ERBSMF70\n                         00000002           69943+SMF70TSU EQU   2        zIIP                                   @OA13499 03-ERBSMF70\n-\n                                            69945+**********************  ASID DATA SECTION  ****************************\n 00000000                00000000 00000314  69946+SMF70AID DSECT                                                          03-ERBSMF70\n 00000000                                   69947+SMF70RMN DS    H        READY MINIMUM VALUE OVER INTERVAL               03-ERBSMF70\n 00000002                                   69948+SMF70RMM DS    H        READY MAXIMUM VALUE OVER INTERVAL               03-ERBSMF70\n 00000004                                   69949+SMF70RTT DS    F        READY TOTAL VALUE OVER INTERVAL                 03-ERBSMF70\n 00000008                                   69950+SMF70R00 DS    F        COUNT OF TIMES READY VALUE WAS 0                03-ERBSMF70\n 0000000C                                   69951+SMF70R01 DS    F        COUNT OF TIMES READY VALUE WAS 1                03-ERBSMF70\n 00000010                                   69952+SMF70R02 DS    F        COUNT OF TIMES READY VALUE WAS 2                03-ERBSMF70\n 00000014                                   69953+SMF70R03 DS    F        COUNT OF TIMES READY VALUE WAS 3                03-ERBSMF70\n 00000018                                   69954+SMF70R04 DS    F        COUNT OF TIMES READY VALUE WAS 4                03-ERBSMF70\n 0000001C                                   69955+SMF70R05 DS    F        COUNT OF TIMES READY VALUE WAS 5                03-ERBSMF70\n 00000020                                   69956+SMF70R06 DS    F        COUNT OF TIMES READY VALUE WAS 6                03-ERBSMF70\n 00000024                                   69957+SMF70R07 DS    F        COUNT OF TIMES READY VALUE WAS 7                03-ERBSMF70\n 00000028                                   69958+SMF70R08 DS    F        COUNT OF TIMES READY VALUE WAS 8                03-ERBSMF70\n 0000002C                                   69959+SMF70R09 DS    F        COUNT OF TIMES READY VALUE WAS 9                03-ERBSMF70\n 00000030                                   69960+SMF70R10 DS    F        COUNT OF TIMES READY VALUE WAS 10               03-ERBSMF70\n 00000034                                   69961+SMF70R11 DS    F        COUNT OF TIMES READY VALUE WAS 11               03-ERBSMF70\n 00000038                                   69962+SMF70R12 DS    F        COUNT OF TIMES READY VALUE WAS 12               03-ERBSMF70\n 0000003C                                   69963+SMF70R13 DS    F        COUNT OF TIMES READY VALUE WAS 13               03-ERBSMF70\n 00000040                                   69964+SMF70R14 DS    F        COUNT OF TIMES READY VALUE WAS 14               03-ERBSMF70\n 00000044                                   69965+SMF70R15 DS    F        COUNT OF TIMES READY VALUE WAS 14+              03-ERBSMF70\n 00000048                                   69966+SMF70IMN DS    H        IN USERS MINIMUM OVER INTERVAL                  03-ERBSMF70\n 0000004A                                   69967+SMF70IMM DS    H        IN USERS MAXIMUM OVER INTERVAL                  03-ERBSMF70\n 0000004C                                   69968+SMF70ITT DS    F        IN USERS TOTAL VALUE OVER INTERVAL              03-ERBSMF70\n 00000050                                   69969+SMF70I00 DS    F        COUNT OF TIMES IN USERS WAS 0                   03-ERBSMF70\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  357\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000054                                   69970+SMF70I01 DS    F        COUNT OF TIMES IN USERS WAS 1-2                 03-ERBSMF70\n 00000058                                   69971+SMF70I02 DS    F        COUNT OF TIMES IN USERS WAS 3-4                 03-ERBSMF70\n 0000005C                                   69972+SMF70I03 DS    F        COUNT OF TIMES IN USERS WAS 5-6                 03-ERBSMF70\n 00000060                                   69973+SMF70I04 DS    F        COUNT OF TIMES IN USERS WAS 7-8                 03-ERBSMF70\n 00000064                                   69974+SMF70I05 DS    F        COUNT OF TIMES IN USERS WAS 9-10                03-ERBSMF70\n 00000068                                   69975+SMF70I06 DS    F        COUNT OF TIMES IN USERS WAS 11-15               03-ERBSMF70\n 0000006C                                   69976+SMF70I07 DS    F        COUNT OF TIMES IN USERS WAS 16-20               03-ERBSMF70\n 00000070                                   69977+SMF70I08 DS    F        COUNT OF TIMES IN USERS WAS 21-25               03-ERBSMF70\n 00000074                                   69978+SMF70I09 DS    F        COUNT OF TIMES IN USERS WAS 26-30               03-ERBSMF70\n 00000078                                   69979+SMF70I10 DS    F        COUNT OF TIMES IN USERS WAS 31-35               03-ERBSMF70\n 0000007C                                   69980+SMF70I11 DS    F        COUNT OF TIMES IN USERS WAS 35+                 03-ERBSMF70\n 00000080                                   69981+SMF70OMN DS    H        OUT USERS MINIMUM OVER INTERVAL                 03-ERBSMF70\n 00000082                                   69982+SMF70OMM DS    H        OUT USERS MAXIMUM OVER INTERVAL                 03-ERBSMF70\n 00000084                                   69983+SMF70OTT DS    F        OUT USERS TOTAL VALUE OVER INTERVAL             03-ERBSMF70\n 00000088                                   69984+SMF70O00 DS    F        COUNT OF TIMES OUT USERS WAS 0                  03-ERBSMF70\n 0000008C                                   69985+SMF70O01 DS    F        COUNT OF TIMES OUT USERS WAS 1-2                03-ERBSMF70\n 00000090                                   69986+SMF70O02 DS    F        COUNT OF TIMES OUT USERS WAS 3-4                03-ERBSMF70\n 00000094                                   69987+SMF70O03 DS    F        COUNT OF TIMES OUT USERS WAS 5-6                03-ERBSMF70\n 00000098                                   69988+SMF70O04 DS    F        COUNT OF TIMES OUT USERS WAS 7-8                03-ERBSMF70\n 0000009C                                   69989+SMF70O05 DS    F        COUNT OF TIMES OUT USERS WAS 9-10               03-ERBSMF70\n 000000A0                                   69990+SMF70O06 DS    F        COUNT OF TIMES OUT USERS WAS 11-15              03-ERBSMF70\n 000000A4                                   69991+SMF70O07 DS    F        COUNT OF TIMES OUT USERS WAS 16-20              03-ERBSMF70\n 000000A8                                   69992+SMF70O08 DS    F        COUNT OF TIMES OUT USERS WAS 21-25              03-ERBSMF70\n 000000AC                                   69993+SMF70O09 DS    F        COUNT OF TIMES OUT USERS WAS 26-30              03-ERBSMF70\n 000000B0                                   69994+SMF70O10 DS    F        COUNT OF TIMES OUT USERS WAS 31-35              03-ERBSMF70\n 000000B4                                   69995+SMF70O11 DS    F        COUNT OF TIMES OUT USERS WAS 35+                03-ERBSMF70\n 000000B8                                   69996+SMF70WMN DS    H        WAIT USERS MINIMUM OVER INTERVAL                03-ERBSMF70\n 000000BA                                   69997+SMF70WMM DS    H        WAIT USERS MAXIMUM OVER INTERVAL                03-ERBSMF70\n 000000BC                                   69998+SMF70WTT DS    F        WAIT USERS TOTAL VALUE OVER INTERVAL            03-ERBSMF70\n 000000C0                                   69999+SMF70W00 DS    F        COUNT OF TIMES WAIT USERS WAS 0                 03-ERBSMF70\n 000000C4                                   70000+SMF70W01 DS    F        COUNT OF TIMES WAIT USERS WAS 1-2               03-ERBSMF70\n 000000C8                                   70001+SMF70W02 DS    F        COUNT OF TIMES WAIT USERS WAS 3-4               03-ERBSMF70\n 000000CC                                   70002+SMF70W03 DS    F        COUNT OF TIMES WAIT USERS WAS 5-6               03-ERBSMF70\n 000000D0                                   70003+SMF70W04 DS    F        COUNT OF TIMES WAIT USERS WAS 7-8               03-ERBSMF70\n 000000D4                                   70004+SMF70W05 DS    F        COUNT OF TIMES WAIT USERS WAS 9-10              03-ERBSMF70\n 000000D8                                   70005+SMF70W06 DS    F        COUNT OF TIMES WAIT USERS WAS 11-15             03-ERBSMF70\n 000000DC                                   70006+SMF70W07 DS    F        COUNT OF TIMES WAIT USERS WAS 16-20             03-ERBSMF70\n 000000E0                                   70007+SMF70W08 DS    F        COUNT OF TIMES WAIT USERS WAS 21-25             03-ERBSMF70\n 000000E4                                   70008+SMF70W09 DS    F        COUNT OF TIMES WAIT USERS WAS 26-30             03-ERBSMF70\n 000000E8                                   70009+SMF70W10 DS    F        COUNT OF TIMES WAIT USERS WAS 31-35             03-ERBSMF70\n 000000EC                                   70010+SMF70W11 DS    F        COUNT OF TIMES WAIT USERS WAS 35+               03-ERBSMF70\n 000000F0                                   70011+SMF70BMN DS    H        BATCH USERS MINIMUM OVER INTERVAL               03-ERBSMF70\n 000000F2                                   70012+SMF70BMM DS    H        BATCH USERS MAXIMUM OVER INTERVAL               03-ERBSMF70\n 000000F4                                   70013+SMF70BTT DS    F        BATCH USERS TOTAL VALUE OVER INTERVAL           03-ERBSMF70\n 000000F8                                   70014+SMF70B00 DS    F        COUNT OF TIMES BATCH USERS WAS 0                03-ERBSMF70\n 000000FC                                   70015+SMF70B01 DS    F        COUNT OF TIMES BATCH USERS WAS 1-2              03-ERBSMF70\n 00000100                                   70016+SMF70B02 DS    F        COUNT OF TIMES BATCH USERS WAS 3-4              03-ERBSMF70\n 00000104                                   70017+SMF70B03 DS    F        COUNT OF TIMES BATCH USERS WAS 5-6              03-ERBSMF70\n 00000108                                   70018+SMF70B04 DS    F        COUNT OF TIMES BATCH USERS WAS 7-8              03-ERBSMF70\n 0000010C                                   70019+SMF70B05 DS    F        COUNT OF TIMES BATCH USERS WAS 9-10             03-ERBSMF70\n 00000110                                   70020+SMF70B06 DS    F        COUNT OF TIMES BATCH USERS WAS 11-15            03-ERBSMF70\n 00000114                                   70021+SMF70B07 DS    F        COUNT OF TIMES BATCH USERS WAS 16-20            03-ERBSMF70\n 00000118                                   70022+SMF70B08 DS    F        COUNT OF TIMES BATCH USERS WAS 21-25            03-ERBSMF70\n 0000011C                                   70023+SMF70B09 DS    F        COUNT OF TIMES BATCH USERS WAS 26-30            03-ERBSMF70\n 00000120                                   70024+SMF70B10 DS    F        COUNT OF TIMES BATCH USERS WAS 31-35            03-ERBSMF70\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  358\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000124                                   70025+SMF70B11 DS    F        COUNT OF TIMES BATCH USERS WAS 35+              03-ERBSMF70\n 00000128                                   70026+SMF70SMN DS    H        STARTED USERS MINIMUM OVER INTERVAL             03-ERBSMF70\n 0000012A                                   70027+SMF70SMM DS    H        STARTED USERS MAXIMUM OVER INTERVAL             03-ERBSMF70\n 0000012C                                   70028+SMF70STT DS    F        STARTED USERS TOTAL VALUE OVER INTERVAL         03-ERBSMF70\n 00000130                                   70029+SMF70S00 DS    F        COUNT OF TIMES STARTED USERS WAS 0              03-ERBSMF70\n 00000134                                   70030+SMF70S01 DS    F        COUNT OF TIMES STARTED USERS WAS 1-2            03-ERBSMF70\n 00000138                                   70031+SMF70S02 DS    F        COUNT OF TIMES STARTED USERS WAS 3-4            03-ERBSMF70\n 0000013C                                   70032+SMF70S03 DS    F        COUNT OF TIMES STARTED USERS WAS 5-6            03-ERBSMF70\n 00000140                                   70033+SMF70S04 DS    F        COUNT OF TIMES STARTED USERS WAS 7-8            03-ERBSMF70\n 00000144                                   70034+SMF70S05 DS    F        COUNT OF TIMES STARTED USERS WAS 9-10           03-ERBSMF70\n 00000148                                   70035+SMF70S06 DS    F        COUNT OF TIMES STARTED USERS WAS 11-15          03-ERBSMF70\n 0000014C                                   70036+SMF70S07 DS    F        COUNT OF TIMES STARTED USERS WAS 16-20          03-ERBSMF70\n 00000150                                   70037+SMF70S08 DS    F        COUNT OF TIMES STARTED USERS WAS 21-25          03-ERBSMF70\n 00000154                                   70038+SMF70S09 DS    F        COUNT OF TIMES STARTED USERS WAS 26-30          03-ERBSMF70\n 00000158                                   70039+SMF70S10 DS    F        COUNT OF TIMES STARTED USERS WAS 31-35          03-ERBSMF70\n 0000015C                                   70040+SMF70S11 DS    F        COUNT OF TIMES STARTED USERS WAS 35+            03-ERBSMF70\n 00000160                                   70041+SMF70TMN DS    H        TSO USERS MINIMUM OVER INTERVAL                 03-ERBSMF70\n 00000162                                   70042+SMF70TMM DS    H        TSO USERS MAXIMUM OVER INTERVAL                 03-ERBSMF70\n 00000164                                   70043+SMF70TTT DS    F        TSO USERS TOTAL VALUE OVER INTERVAL             03-ERBSMF70\n 00000168                                   70044+SMF70T00 DS    F        COUNT OF TIMES TSO USERS WAS 0                  03-ERBSMF70\n 0000016C                                   70045+SMF70T01 DS    F        COUNT OF TIMES TSO USERS WAS 1-2                03-ERBSMF70\n 00000170                                   70046+SMF70T02 DS    F        COUNT OF TIMES TSO USERS WAS 3-4                03-ERBSMF70\n 00000174                                   70047+SMF70T03 DS    F        COUNT OF TIMES TSO USERS WAS 5-6                03-ERBSMF70\n 00000178                                   70048+SMF70T04 DS    F        COUNT OF TIMES TSO USERS WAS 7-8                03-ERBSMF70\n 0000017C                                   70049+SMF70T05 DS    F        COUNT OF TIMES TSO USERS WAS 9-10               03-ERBSMF70\n 00000180                                   70050+SMF70T06 DS    F        COUNT OF TIMES TSO USERS WAS 11-15              03-ERBSMF70\n 00000184                                   70051+SMF70T07 DS    F        COUNT OF TIMES TSO USERS WAS 16-20              03-ERBSMF70\n 00000188                                   70052+SMF70T08 DS    F        COUNT OF TIMES TSO USERS WAS 21-25              03-ERBSMF70\n 0000018C                                   70053+SMF70T09 DS    F        COUNT OF TIMES TSO USERS WAS 26-30              03-ERBSMF70\n 00000190                                   70054+SMF70T10 DS    F        COUNT OF TIMES TSO USERS WAS 31-35              03-ERBSMF70\n 00000194                                   70055+SMF70T11 DS    F        COUNT OF TIMES TSO USERS WAS 35+                03-ERBSMF70\n 00000198                                   70056+SMF70LMN DS    H        LOGICAL RDY USERS MINIMUM                       03-ERBSMF70\n 0000019A                                   70057+SMF70LMM DS    H        LOGICAL RDY USERS MAXIMUM                       03-ERBSMF70\n 0000019C                                   70058+SMF70LTT DS    F        LOGICAL RDY USERS TOTAL                         03-ERBSMF70\n 000001A0                                   70059+SMF70L00 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 0          03-ERBSMF70\n 000001A4                                   70060+SMF70L01 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 1-2        03-ERBSMF70\n 000001A8                                   70061+SMF70L02 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 3-4        03-ERBSMF70\n 000001AC                                   70062+SMF70L03 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 5-6        03-ERBSMF70\n 000001B0                                   70063+SMF70L04 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 7-8        03-ERBSMF70\n 000001B4                                   70064+SMF70L05 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 9-10       03-ERBSMF70\n 000001B8                                   70065+SMF70L06 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 11-15      03-ERBSMF70\n 000001BC                                   70066+SMF70L07 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 16-20      03-ERBSMF70\n 000001C0                                   70067+SMF70L08 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 21-25      03-ERBSMF70\n 000001C4                                   70068+SMF70L09 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 26-30      03-ERBSMF70\n 000001C8                                   70069+SMF70L10 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 31-35      03-ERBSMF70\n 000001CC                                   70070+SMF70L11 DS    F        COUNT OF TIMES LOGICAL RDY USERS WAS 35+        03-ERBSMF70\n 000001D0                                   70071+SMF70AMN DS    H        LOGICAL WAIT USERS MINIMUM                      03-ERBSMF70\n 000001D2                                   70072+SMF70AMM DS    H        LOGICAL WAIT USERS MAXIMUM                      03-ERBSMF70\n 000001D4                                   70073+SMF70ATT DS    F        LOGICAL WAIT USERS TOTAL                        03-ERBSMF70\n 000001D8                                   70074+SMF70A00 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 0         03-ERBSMF70\n 000001DC                                   70075+SMF70A01 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 1-2       03-ERBSMF70\n 000001E0                                   70076+SMF70A02 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 3-4       03-ERBSMF70\n 000001E4                                   70077+SMF70A03 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 5-6       03-ERBSMF70\n 000001E8                                   70078+SMF70A04 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 7-8       03-ERBSMF70\n 000001EC                                   70079+SMF70A05 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 9-10      03-ERBSMF70\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  359\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000001F0                                   70080+SMF70A06 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 11-15     03-ERBSMF70\n 000001F4                                   70081+SMF70A07 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 16-20     03-ERBSMF70\n 000001F8                                   70082+SMF70A08 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 21-25     03-ERBSMF70\n 000001FC                                   70083+SMF70A09 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 26-30     03-ERBSMF70\n 00000200                                   70084+SMF70A10 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 31-35     03-ERBSMF70\n 00000204                                   70085+SMF70A11 DS    F        COUNT OF TIMES LOGICAL WAIT USERS WAS 35+       03-ERBSMF70\n 00000208                                   70086+SMF70PMN DS    H        ASCH USERS MINIMUM                              03-ERBSMF70\n 0000020A                                   70087+SMF70PMM DS    H        ASCH USERS MAXIMUM                              03-ERBSMF70\n 0000020C                                   70088+SMF70PTT DS    F        ASCH USERS TOTAL                                03-ERBSMF70\n 00000210                                   70089+SMF70P00 DS    F        COUNT OF TIMES ASCH USERS WAS 0                 03-ERBSMF70\n 00000214                                   70090+SMF70P01 DS    F        COUNT OF TIMES ASCH USERS WAS 1-2               03-ERBSMF70\n 00000218                                   70091+SMF70P02 DS    F        COUNT OF TIMES ASCH USERS WAS 3-4               03-ERBSMF70\n 0000021C                                   70092+SMF70P03 DS    F        COUNT OF TIMES ASCH USERS WAS 5-6               03-ERBSMF70\n 00000220                                   70093+SMF70P04 DS    F        COUNT OF TIMES ASCH USERS WAS 7-8               03-ERBSMF70\n 00000224                                   70094+SMF70P05 DS    F        COUNT OF TIMES ASCH USERS WAS 9-10              03-ERBSMF70\n 00000228                                   70095+SMF70P06 DS    F        COUNT OF TIMES ASCH USERS WAS 11-15             03-ERBSMF70\n 0000022C                                   70096+SMF70P07 DS    F        COUNT OF TIMES ASCH USERS WAS 16-20             03-ERBSMF70\n 00000230                                   70097+SMF70P08 DS    F        COUNT OF TIMES ASCH USERS WAS 21-25             03-ERBSMF70\n 00000234                                   70098+SMF70P09 DS    F        COUNT OF TIMES ASCH USERS WAS 26-30             03-ERBSMF70\n 00000238                                   70099+SMF70P10 DS    F        COUNT OF TIMES ASCH USERS WAS 31-35             03-ERBSMF70\n 0000023C                                   70100+SMF70P11 DS    F        COUNT OF TIMES ASCH USERS WAS 35+               03-ERBSMF70\n 00000240                                   70101+SMF70XMN DS    H        OMVS USERS MINIMUM                              03-ERBSMF70\n 00000242                                   70102+SMF70XMM DS    H        OMVS USERS MAXIMUM                              03-ERBSMF70\n 00000244                                   70103+SMF70XTT DS    F        OMVS USERS TOTAL                                03-ERBSMF70\n 00000248                                   70104+SMF70X00 DS    F        COUNT OF TIMES OMVS USERS WAS 0                 03-ERBSMF70\n 0000024C                                   70105+SMF70X01 DS    F        COUNT OF TIMES OMVS USERS WAS 1-2               03-ERBSMF70\n 00000250                                   70106+SMF70X02 DS    F        COUNT OF TIMES OMVS USERS WAS 3-4               03-ERBSMF70\n 00000254                                   70107+SMF70X03 DS    F        COUNT OF TIMES OMVS USERS WAS 5-6               03-ERBSMF70\n 00000258                                   70108+SMF70X04 DS    F        COUNT OF TIMES OMVS USERS WAS 7-8               03-ERBSMF70\n 0000025C                                   70109+SMF70X05 DS    F        COUNT OF TIMES OMVS USERS WAS 9-10              03-ERBSMF70\n 00000260                                   70110+SMF70X06 DS    F        COUNT OF TIMES OMVS USERS WAS 11-15             03-ERBSMF70\n 00000264                                   70111+SMF70X07 DS    F        COUNT OF TIMES OMVS USERS WAS 16-20             03-ERBSMF70\n 00000268                                   70112+SMF70X08 DS    F        COUNT OF TIMES OMVS USERS WAS 21-25             03-ERBSMF70\n 0000026C                                   70113+SMF70X09 DS    F        COUNT OF TIMES OMVS USERS WAS 26-30             03-ERBSMF70\n 00000270                                   70114+SMF70X10 DS    F        COUNT OF TIMES OMVS USERS WAS 31-35             03-ERBSMF70\n 00000274                                   70115+SMF70X11 DS    F        COUNT OF TIMES OMVS USERS WAS 35+               03-ERBSMF70\n 00000278                                   70116+SMF70Q00 DS    F        Count of times In Ready was <= N while N is     03-ERBSMF70\n                                            70117+*                       the number of processors being online when\n                                            70118+*                       the sample was taken. With HiperDispatch\n                                            70119+*                       active and an SMF record level SMF70SRL >= 55\n                                            70120+*                       (x85), N is the number of processors being\n                                            70121+*                       online and not parked when the sample was\n                                            70122+*                       taken                                  @OA21140\n 0000027C                                   70123+SMF70Q01 DS    F        Count of times In Ready was N+1            @L2A 03-ERBSMF70\n 00000280                                   70124+SMF70Q02 DS    F        Count of times In Ready was N+2            @L2A 03-ERBSMF70\n 00000284                                   70125+SMF70Q03 DS    F        Count of times In Ready was N+3            @L2A 03-ERBSMF70\n 00000288                                   70126+SMF70Q04 DS    F        Count of times In Ready was N+4 or N+5     @L2A 03-ERBSMF70\n 0000028C                                   70127+SMF70Q05 DS    F        Count of times In Ready was N+6 to N+10    @L2A 03-ERBSMF70\n 00000290                                   70128+SMF70Q06 DS    F        Count of times In Ready was N+11 to N+15   @L2A 03-ERBSMF70\n 00000294                                   70129+SMF70Q07 DS    F        Count of times In Ready was N+16 to N+20   @L2A 03-ERBSMF70\n 00000298                                   70130+SMF70Q08 DS    F        Count of times In Ready was N+21 to N+30   @L2A 03-ERBSMF70\n 0000029C                                   70131+SMF70Q09 DS    F        Count of times In Ready was N+31 to N+40   @L2A 03-ERBSMF70\n 000002A0                                   70132+SMF70Q10 DS    F        Count of times In Ready was N+41 to N+60   @L2A 03-ERBSMF70\n 000002A4                                   70133+SMF70Q11 DS    F        Count of times In Ready was N+61 to N+80   @L2A 03-ERBSMF70\n 000002A8                                   70134+SMF70Q12 DS    F        Count of times In Ready was > N+80         @L2A 03-ERBSMF70\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  360\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           70135+*\n 000002AC                                   70136+SMF70SRM DS    F        Number of SRM samples for WEB calculation  @41A 03-ERBSMF70\n 000002B0                                   70137+SMF70CMN DS    F        General purpose processors minimum         @41A 03-ERBSMF70\n 000002B4                                   70138+SMF70CMM DS    F        General purpose processors maximum         @41A 03-ERBSMF70\n 000002B8                                   70139+SMF70CTT DS    F        General purpose processors total           @41A 03-ERBSMF70\n 000002BC                                   70140+SMF70DMN DS    F        AAP processors minimum                     @41A 03-ERBSMF70\n 000002C0                                   70141+SMF70DMM DS    F        AAP processors maximum                     @41A 03-ERBSMF70\n 000002C4                                   70142+SMF70DTT DS    F        AAP processors total                       @41A 03-ERBSMF70\n 000002C8                                   70143+SMF70EMN DS    F        IIP processors minimum                     @41A 03-ERBSMF70\n 000002CC                                   70144+SMF70EMM DS    F        IIP processors maximum                     @41A 03-ERBSMF70\n 000002D0                                   70145+SMF70ETT DS    F        IIP processors total                       @41A 03-ERBSMF70\n                                            70146+*\n 000002D4                                   70147+SMF70U00 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            70148+*                       was <= N,\n                                            70149+*                       N is the number of processors being online\n                                            70150+*                       and not parked when the sample was taken\n                                            70151+*                                                                  @41A\n 000002D8                                   70152+SMF70U01 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            70153+*                       was N+1                                    @41A\n 000002DC                                   70154+SMF70U02 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            70155+*                       was N+2                                    @41A\n 000002E0                                   70156+SMF70U03 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            70157+*                       was N+3                                    @41A\n 000002E4                                   70158+SMF70U04 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            70159+*                       was N+4 or N+5                             @41A\n 000002E8                                   70160+SMF70U05 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            70161+*                       was N+6 to N+10                            @41A\n 000002EC                                   70162+SMF70U06 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            70163+*                       was N+11 to N+15                           @41A\n 000002F0                                   70164+SMF70U07 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            70165+*                       was N+16 to N+20                           @41A\n 000002F4                                   70166+SMF70U08 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            70167+*                       was N+21 to N+30                           @41A\n 000002F8                                   70168+SMF70U09 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            70169+*                       was N+31 to N+40                           @41A\n 000002FC                                   70170+SMF70U10 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            70171+*                       was N+41 to N+60                           @41A\n 00000300                                   70172+SMF70U11 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            70173+*                       was N+61 to N+80                           @41A\n 00000304                                   70174+SMF70U12 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            70175+*                       was N+81 to N+100                          @41A\n 00000308                                   70176+SMF70U13 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            70177+*                       was N+101 to N+120                         @41A\n 0000030C                                   70178+SMF70U14 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            70179+*                       was N+121 to N+150                         @41A\n 00000310                                   70180+SMF70U15 DS    F        Count of times the number of work units         03-ERBSMF70\n                                            70181+*                       was > N+150                                @41A\n-\n                                            70183+**********  PR/SM PARTITION DATA SECTION     **************************\n 00000000                00000000 00000048  70184+SMF70BCT DSECT                                                          03-ERBSMF70\n 00000000                                   70185+SMF70BPC DS    0CL72                                               @I3C 03-ERBSMF70\n 00000000                                   70186+SMF70LPM DS    CL8      Logical Partition name                          03-ERBSMF70\n 00000008                                   70187+SMF70LPN DS    CL1      Logical Partition number                        03-ERBSMF70\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  361\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000009                                   70188+SMF70PFG DS    CL1      Partition flags                                 03-ERBSMF70\n                         00000080           70189+SMF70PDV EQU   X'80'    Partition deactivated during interval           03-ERBSMF70\n                         00000040           70190+SMF70NVC EQU   X'40'    Number of logical procrs has changed            03-ERBSMF70\n                         00000020           70191+SMF70NDC EQU   X'20'    Number of dedicated procrs has changed     @H1A 03-ERBSMF70\n                         00000010           70192+SMF70NSC EQU   X'10'    Number of shared procrs has changed        @H1A 03-ERBSMF70\n                         00000008           70193+SMF70WLM EQU   X'08'    WLM LPAR Management is active for this          03-ERBSMF70\n                                            70194+*                       partition                                  @I3A\n                         00000004           70195+SMF70WTF EQU   X'04'    Wait Time field is defined             @WA46477 03-ERBSMF70\n                         00000002           70196+SMF70MSC EQU   X'02'    Defined capacity limit has been changed    @K2C 03-ERBSMF70\n                         00000001           70197+SMF70MSF EQU   X'01'    No longer used                             @L4C 03-ERBSMF70\n 0000000A                                   70198+SMF70BDN DS    CL2      Number of logical CPUs assigned to this         03-ERBSMF70\n                                            70199+*                       partition. This count matches the number\n                                            70200+*                       of subsequent PR/SM data sections          @I3C\n 0000000C                                   70201+SMF70BDS DS    CL4      Start of data section block number              03-ERBSMF70\n 00000010                                   70202+SMF70BDA DS    CL4      Accumulated number of logical CPUs active for   03-ERBSMF70\n                                            70203+*                       this partition.                        @WA46477\n 00000014                                   70204+SMF70SPN DS    CL8      Name of the logical-partition cluster. Zeros    03-ERBSMF70\n                                            70205+*                       if this partition is no cluster member. For\n                                            70206+*                       z/OS, the LPAR cluster name is the sysplex\n                                            70207+*                       name. For any other logical partition, the\n                                            70208+*                       LPAR cluster name is the name provided in the\n                                            70209+*                       HMC definition of this logical partition.  @02C\n 0000001C                                   70210+SMF70STN DS    CL8      Name of the operating-system instance. Zeros    03-ERBSMF70\n                                            70211+*                       if no name declared for this partition.    @02C\n 00000024                                   70212+         DS    CL4      Reserved                                   @I3A 03-ERBSMF70\n 00000028                                   70213+SMF70CSF DS    CL4      Number of megabytes of central storage          03-ERBSMF70\n                                            70214+*                       currently online to this partition     @WA55906\n 0000002C                                   70215+         DS    CL4      Reserved                                   @I3A 03-ERBSMF70\n 00000030                                   70216+SMF70ESF DS    CL4      Number of megabytes of expanded storage         03-ERBSMF70\n                                            70217+*                       currently online to this partition     @WA55906\n 00000034                                   70218+SMF70MSU DS    CL4      Defined capacity limit (in millions             03-ERBSMF70\n                                            70219+*                       of service units) that a logical partition\n                                            70220+*                       may consume per unit time on average\n                                            70221+*                       (extended mode only)                   @WA46477\n 00000038                                   70222+SMF70PFL DS    CL2      Additional partition flags             @OA10346 03-ERBSMF70\n                         00008000           70223+SMF70UVF EQU   X'8000'  Content of SMF70UPI is valid           @OA10346 03-ERBSMF70\n                         00004000           70224+SMF70GRP EQU   X'4000'  Group flag. This partition is member            03-ERBSMF70\n                                            70225+*                       of a capacity group.                       @01A\n                         00002000           70226+SMF70PWF EQU   X'2000'  Polarization flag. This partition is            03-ERBSMF70\n                                            70227+*                       vertically polarized. That is, HiperDispatch\n                                            70228+*                       mode is active. The SMF70POW fields in the\n                                            70229+*                       logical processor data section are valid for\n                                            70230+*                       CPUs of this partition.                    @11A\n 0000003A                                   70231+SMF70UPI DS    BL1      User partition ID. Valid if bit 0          @33C 03-ERBSMF70\n                                            70232+*                       (SMF70UVF) of SMF70PFL is set          @OA10346\n 0000003B                                   70233+         DS    CL1      Reserved                                   @01C 03-ERBSMF70\n 0000003C                                   70234+SMF70GNM DS    CL8      Name of the capacity group this partition       03-ERBSMF70\n                                            70235+*                       belongs to. Valid if bit 1 (SMF70GRP) of\n                                            70236+*                       SMF70PFL is ON                             @01A\n 00000044                                   70237+SMF70GMU DS    CL4      Group maximum licensing units.                  03-ERBSMF70\n                                            70238+*                       The maximum number of processor licensing\n                                            70239+*                       units for the group of logical partitions\n                                            70240+*                       identified by having the same group name, of\n                                            70241+*                       which this partition is a member, and which\n                                            70242+*                       may be consumed per unit of time, on average.\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  362\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           70243+*                       Valid if bit 1 (SMF70GRP) of SMF70PFL is ON.\n                                            70244+*                                                                  @01A\n-\n                                            70246+*************  PR/SM LOGICAL PROCESSOR DATA SECTION  ******************\n 00000000                00000000 00000050  70247+SMF70BPD DSECT                                                          03-ERBSMF70\n 00000000                                   70248+SMF70PDT DS    CL8     Logical processor total dispatch time,           03-ERBSMF70\n                                            70249+*                      in microseconds\n                                            70250+*                      When associated with partition name *PHYSICAL*,\n                                            70251+*                      this field contains the accumulated number of\n                                            70252+*                      microseconds during which a physical CPU was\n                                            70253+*                      busy but the time could not be attributed to a\n                                            70254+*                      specific logical partition. This time includes\n                                            70255+*                      the time PR/SM was controlling the physical\n                                            70256+*                      processor (LPAR management time) as well as any\n                                            70257+*                      other time the processor was busy for any reason\n                                            70258+*                      such as managing coupling facility traffic. @52C\n                                            70259+*\n 00000008                                   70260+SMF70VPA DS    CL2     Logical processor address                        03-ERBSMF70\n 0000000A                                   70261+SMF70BPS DS    CL2     Processor relative share                         03-ERBSMF70\n 0000000C                                   70262+SMF70VPF DS    CL1     Logical processor flags                          03-ERBSMF70\n                         00000080           70263+SMF70WSA EQU   X'80'   Wait Completion state enabled                    03-ERBSMF70\n                         00000040           70264+SMF70WSC EQU   X'40'   Wait Completion state changed during interval    03-ERBSMF70\n                         00000020           70265+SMF70RSC EQU   X'20'   Relative share changed during interval           03-ERBSMF70\n                         00000010           70266+SMF70CAP EQU   X'10'   Partition Capping Flag.  Capped=yes in           03-ERBSMF70\n                                            70267+*                      logical partition controls\n                         00000008           70268+SMF70CPC EQU   X'08'   Partition Capping option changed during          03-ERBSMF70\n                                            70269+*                      the measurement interval\n                         00000004           70270+SMF70LPO EQU   X'04'   Logical processor varied online during           03-ERBSMF70\n                                            70271+*                      the measurement interval\n 0000000D                                   70272+SMF70POF DS    BL1     Polarization flags                      @OA21140 03-ERBSMF70\n                         000000C0           70273+SMF70POI EQU   X'C0'   Polarization indicator (2 bits)         @OA21140 03-ERBSMF70\n                                            70274+*                      00 = Horizontally polarized or          @OA21140\n                                            70275+*                           polarization not indicated         @OA21140\n                                            70276+*                      01 = Vertically polarized with          @OA21140\n                                            70277+*                           low entitlement                    @OA21140\n                                            70278+*                      10 = Vertically polarized with          @OA21140\n                                            70279+*                           medium entitilement                @OA21140\n                                            70280+*                      11 = Vertically polarized with          @OA21140\n                                            70281+*                           high entitlement                   @OA21140\n                         00000020           70282+SMF70POC EQU   X'20'   Polarization indication changed during  @OA21140 03-ERBSMF70\n                                            70283+*                      the interval                            @OA21140\n 0000000E                                   70284+SMF70CIX DS    BL2     Index to the CPU-identification name section     03-ERBSMF70\n                                            70285+*                      that contains the EBCDIC name corresponding\n                                            70286+*                      to the CPU type of the logical processor    @I1C\n 00000010                                   70287+SMF70EDT DS    CL8     Logical processor effective dispatch time,       03-ERBSMF70\n                                            70288+*                      in microseconds\n                                            70289+*                      When associated with partition name *PHYSICAL*,\n                                            70290+*                      this field contains the accumulated number of\n                                            70291+*                      microseconds during which a physical CPU was\n                                            70292+*                      busy but the time could not be attributed to a\n                                            70293+*                      specific logical partition or to LPAR management\n                                            70294+*                      of the physical processor. One example is time\n                                            70295+*                      managing coupling facility traffic. This field\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  363\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           70296+*                      is zero, if not supported by the hardware. LPAR\n                                            70297+*                      management time is the time from SMF70PDT\n                                            70298+*                      associated with partition name *PHYSICAL* less\n                                            70299+*                      the contents of this field.                 @52C\n                                            70300+*\n 00000018                                   70301+SMF70ACS DS    CL4     Accumulated processor actual share      @WA46477 03-ERBSMF70\n 0000001C                                   70302+SMF70MIS DS    CL2     Processor minimum share                     @I3A 03-ERBSMF70\n 0000001E                                   70303+SMF70MAS DS    CL2     Processor maximum share                     @I3A 03-ERBSMF70\n 00000020                                   70304+SMF70NSI DS    CL4     Number of Diagnose samples within the            03-ERBSMF70\n                                            70305+*                      specified minimum (+10%)                @WA46477\n 00000024                                   70306+SMF70NSA DS    CL4     Number of Diagnose samples within the            03-ERBSMF70\n                                            70307+*                      specified maximum (-10%)                @WA46477\n 00000028                                   70308+SMF70ONT DS    CL8     Logical processor online time               @I3A 03-ERBSMF70\n 00000030                                   70309+SMF70WST DS    CL8     Logical processor wait state time           @I3A 03-ERBSMF70\n 00000038                                   70310+SMF70PMA DS    CL4     Average pricing management adjustment weight     03-ERBSMF70\n                                            70311+*                                                              @WA46477\n 0000003C                                   70312+SMF70NSW DS    CL4     Number of Diagnose samples where WLM             03-ERBSMF70\n                                            70313+*                      considers to cap the set of logical CPUs\n                                            70314+*                      of type SMF70CIX within the logical partition\n                                            70315+*                      (see also SMF70NCA)                         @34C\n 00000040                                   70316+SMF70POW DS    CL4     Weight for the logical CPU when HiperDispatch    03-ERBSMF70\n                                            70317+*                      mode is active. See bit 2 (SMF70PWF) of\n                                            70318+*                      SMF70PFL. Multiplied by a factor of 4096\n                                            70319+*                      for more granularity. The value may be the\n                                            70320+*                      same or different for all shared CPUs of\n                                            70321+*                      type SMF70CIX.\n                                            70322+*                      This is an accumulated value. Divide by the\n                                            70323+*                      number of Diagnose samples SMF70DSA to get\n                                            70324+*                      the average weight value for the interval.  @11A\n 00000044                                   70325+SMF70NCA DS    F       Number of Diagnose samples where capping         03-ERBSMF70\n                                            70326+*                      actually limited the usage of processor\n                                            70327+*                      resources for the set of logical CPUs of\n                                            70328+*                      type SMF70CIX within the logical partition. @34A\n 00000048                                   70329+         DS    CL8     Reserved                                    @34C 03-ERBSMF70\n                                            70330+*************  CPU-IDENTIFICATION NAME SECTION ************************\n 00000000                00000000 00000018  70331+SMF70CIS DSECT                                                          03-ERBSMF70\n 00000000                                   70332+SMF70CIN DS    CL16    CPU-identification name                     @I1A 03-ERBSMF70\n 00000010                                   70333+SMF70CTN DS    BL2     Number of physical CPUs of this type             03-ERBSMF70\n                                            70334+*                      at interval end                             @11C\n 00000012                                   70335+         DS    CL2     Reserved                                @OA13499 03-ERBSMF70\n 00000014                                   70336+SMF70CAN DS    F       Accumulated number of physical CPUs.             03-ERBSMF70\n                                            70337+*                      Divide by SMF70DSA to get the average\n                                            70338+*                      number of physical CPUs of this type\n                                            70339+*                      applicable during the interval.             @11A\n-\n-\n                                            70342+**********************  Crypto Data Section for Subtype 2  ******* @J1A\n                                            70343+**************** Cryptographic Coprocessor Section ********************\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  364\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000000                00000000 00000030  70345+R702TYP3 DSECT                                                          03-ERBSMF70\n 00000000                                   70346+R7023AX  DS    CL1      Crypto processor index                     @J1A 03-ERBSMF70\n 00000001                                   70347+R7023CT  DS    CL1      Crypto processor type                      @J1A 03-ERBSMF70\n                                            70348+*                       3 = PCICC\n                                            70349+*                       5 = PCIXCC\n                                            70350+*                       7 = CEX2C\n                                            70351+*                       9 = CEX3C                              @OA28670\n 00000002                                   70352+         DS    CL6      Reserved                                   @J1A 03-ERBSMF70\n 00000008                                   70353+R7023SF  DS    CL8      Scaling factor for the indicating               03-ERBSMF70\n                                            70354+*                       crypto coprocessor\n                                            70355+*                       (long floating point)                      @K1C\n 00000010                                   70356+R7023T0  DS    CL8      Execution time of all operations on the         03-ERBSMF70\n                                            70357+*                       specified crypto coprocessor\n                                            70358+*                       (long floating point)                      @K1C\n 00000018                                   70359+R7023C0  DS    CL8      Execution number of all operations on the       03-ERBSMF70\n                                            70360+*                       specified crypto coprocessor\n                                            70361+*                       (long floating point)                      @K1C\n 00000020                                   70362+         DS    CL8      Reserved                                   @J1C 03-ERBSMF70\n 00000028                                   70363+R7023C1  DS    CL8      Execution number of RSA-key-genaration          03-ERBSMF70\n                                            70364+*                       (long floating point)                      @J1A\n-\n                                            70366+**************** Cryptographic Accelerator Section ********************\n-\n 00000000                00000000 00000170  70368+R702TYP4 DSECT                                                     @J1A 03-ERBSMF70\n 00000000                                   70369+R7024AX  DS    CL1      Crypto processor index                     @J1A 03-ERBSMF70\n 00000001                                   70370+R7024CT  DS    CL1      Crypto processor type                      @J1A 03-ERBSMF70\n                                            70371+*                       4 = PCICA\n                                            70372+*                       6 = CEX2A\n                                            70373+*                       8 = CEX3A                              @OA28670\n 00000002                                   70374+R7024MSK DS    CL1      Validity bit mask. Each bit position   @OA31349 03-ERBSMF70\n                                            70375+*                       represents the validity of a timer-\n                                            70376+*                       counter pair that measures the execution\n                                            70377+*                       time and number of operations on a\n                                            70378+*                       cryptographic accelerator card for a\n                                            70379+*                       certain type of RSA operations\n                         00000080           70380+R7021KM  EQU   X'80'    1024-bit ME-format RSA operations      @OA31349 03-ERBSMF70\n                         00000040           70381+R7022KM  EQU   X'40'    2048-bit ME-format RSA operations      @OA31349 03-ERBSMF70\n                         00000020           70382+R7021KC  EQU   X'20'    1024-bit CRT-format RSA operations     @OA31349 03-ERBSMF70\n                         00000010           70383+R7022KC  EQU   X'10'    2048-bit CRT-format RSA operations     @OA31349 03-ERBSMF70\n                         00000008           70384+R7023KM  EQU   X'08'    4096-bit ME-format RSA operations      @OA31349 03-ERBSMF70\n                         00000004           70385+R7023KC  EQU   X'04'    4096-bit CRT-format RSA operations     @OA31349 03-ERBSMF70\n 00000003                                   70386+         DS    CL1      Reserved                               @OA31349 03-ERBSMF70\n 00000004                                   70387+R7024EN  DS    CL4      Number of engines. This is the number of   @K1A 03-ERBSMF70\n                                            70388+*                       valid entries in the R7024TC array of      @K1A\n                                            70389+*                       timer and counter pairs.                   @K1A\n 00000008                                   70390+R7024SF  DS    CL8      Scaling factor for the indicating               03-ERBSMF70\n                                            70391+*                       cryptographic accelerator\n                                            70392+*                       (long floating point)                      @K1C\n 00000010                                   70393+R7024TC  DS    5CL64    Timers & counters for the cryptographic         03-ERBSMF70\n                                            70394+*                       accelerator                                @K1C\n 00000150                00000150 00000010  70395+         ORG   R7024TC                                             @J2A 03-ERBSMF70\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  365\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000010                                   70396+R7021MET DS    CL8      Execution time for 1024-bit ME-format           03-ERBSMF70\n                                            70397+*                       RSA operations (long floating point)       @J1A\n 00000018                                   70398+R7021MEC DS    CL8      Execution number for 1024-bit ME-format         03-ERBSMF70\n                                            70399+*                       RSA operations (long floating point)       @J1A\n 00000020                                   70400+R7022MET DS    CL8      Execution time for 2048-bit ME-format           03-ERBSMF70\n                                            70401+*                       RSA operations (long floating point)       @J1A\n 00000028                                   70402+R7022MEC DS    CL8      Execution number for 2048-bit ME-format         03-ERBSMF70\n                                            70403+*                       RSA operations (long floating point)       @J1A\n 00000030                                   70404+R7021CRT DS    CL8      Execution time for 1024-bit CRT-format          03-ERBSMF70\n                                            70405+*                       RSA operations (long floating point)       @J1A\n 00000038                                   70406+R7021CRC DS    CL8      Execution number for 1024-bit CRT-format        03-ERBSMF70\n                                            70407+*                       RSA operations (long floating point)       @J1A\n 00000040                                   70408+R7022CRT DS    CL8      Execution time for 2048-bit CRT-format          03-ERBSMF70\n                                            70409+*                       RSA operations (long floating point)       @J1A\n 00000048                                   70410+R7022CRC DS    CL8      Execution number for 2048-bit CRT-format        03-ERBSMF70\n                                            70411+*                       RSA operations (long floating point)       @J1A\n                         00000005           70412+R702NENG EQU   5        Max number of entries in the R7024TC array @K1C 03-ERBSMF70\n 00000050                00000050 00000150  70413+         ORG   R7024TC+R702NENG*L'R7024TC                      @OA31349 03-ERBSMF70\n 00000150                                   70414+R7023MET DS    CL8      Execution time for 4096-bit ME-format           03-ERBSMF70\n                                            70415+*                       RSA operations (long floating point)   @OA31349\n 00000158                                   70416+R7023MEC DS    CL8      Execution number for 4096-bit ME-format         03-ERBSMF70\n                                            70417+*                       RSA operations (long floating point)   @OA31349\n 00000160                                   70418+R7023CRT DS    CL8      Execution time for 4096-bit CRT-format          03-ERBSMF70\n                                            70419+*                       RSA operations (long floating point)   @OA31349\n 00000168                                   70420+R7023CRC DS    CL8      Execution number for 4096-bit CRT-format        03-ERBSMF70\n                                            70421+*                       RSA operations (long floating point)   @OA31349\n-\n                                            70423+*************** ICSF section  ********************************** @K1C**\n-\n 00000000                00000000 0000011C  70425+R702CCF  DSECT                                                     @J2A 03-ERBSMF70\n 00000000                                   70426+R702SNEC DS    CL8      Single DES: Number of calls                     03-ERBSMF70\n                                            70427+*                       to encipher (long floating point)          @J2A\n 00000008                                   70428+R702SNEB DS    CL8      Single DES: Number of bytes                     03-ERBSMF70\n                                            70429+*                       of data enciphered (long floating point)   @J2A\n 00000010                                   70430+R702SNEI DS    CL8      Single DES: Number of CMD instructions          03-ERBSMF70\n                                            70431+*                       used to encipher the data\n                                            70432+*                       (long floating point)                      @J2A\n 00000018                                   70433+R702TNEC DS    CL8      Triple DES: Number of calls                     03-ERBSMF70\n                                            70434+*                       to encipher (long floating point)          @J2A\n 00000020                                   70435+R702TNEB DS    CL8      Triple DES: Number of bytes                     03-ERBSMF70\n                                            70436+*                       of data enciphered (long floating point)   @J2A\n 00000028                                   70437+R702TNEI DS    CL8      Triple DES: Number of CMD instructions          03-ERBSMF70\n                                            70438+*                       used to encipher the data\n                                            70439+*                       (long floating point)                      @J2A\n 00000030                                   70440+R702SNDC DS    CL8      Single DES: Number of calls                     03-ERBSMF70\n                                            70441+*                       to decipher (long floating point)          @J2A\n 00000038                                   70442+R702SNDB DS    CL8      Single DES: Number of bytes                     03-ERBSMF70\n                                            70443+*                       of data deciphered (long floating point)   @J2A\n 00000040                                   70444+R702SNDI DS    CL8      Single DES: Number of CMD instructions          03-ERBSMF70\n                                            70445+*                       used to decipher the data\n                                            70446+*                       (long floating point)                      @J2A\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  366\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000048                                   70447+R702TNDC DS    CL8      Triple DES: Number of calls to decipher         03-ERBSMF70\n                                            70448+*                       (long floating point)                      @J2A\n 00000050                                   70449+R702TNDB DS    CL8      Triple DES: Number of bytes                     03-ERBSMF70\n                                            70450+*                       of data deciphered (long floating point)   @J2A\n 00000058                                   70451+R702TNDI DS    CL8      Triple DES: Number of CMD instructions          03-ERBSMF70\n                                            70452+*                       used to decipher the data\n                                            70453+*                       (long floating point)                      @J2A\n 00000060                                   70454+R702NMGC DS    CL8      Number of calls to MAC generate                 03-ERBSMF70\n                                            70455+*                       (long floating point)                      @J2A\n 00000068                                   70456+R702NMGB DS    CL8      Number of bytes of data MAC generated           03-ERBSMF70\n                                            70457+*                       (long floating point)                      @J2A\n 00000070                                   70458+R702NMGI DS    CL8      Number of PCMF instructions                     03-ERBSMF70\n                                            70459+*                       used to MAC generate (long floating point) @J2A\n 00000078                                   70460+R702NMVC DS    CL8      Number of calls to MAC verify                   03-ERBSMF70\n                                            70461+*                       (long floating point)                      @J2A\n 00000080                                   70462+R702NMVB DS    CL8      Number of bytes of data MAC verified            03-ERBSMF70\n                                            70463+*                       (long floating point)                      @J2A\n 00000088                                   70464+R702NMVI DS    CL8      Number of PCMF instructions                     03-ERBSMF70\n                                            70465+*                       used to MAC verify (long floating point)   @J2A\n 00000090                                   70466+R702NHAC DS    CL8      For SHA-1: Number of calls to hash              03-ERBSMF70\n                                            70467+*                       (long floating point)                      @L5C\n 00000098                                   70468+R702NHAB DS    CL8      For SHA-1: Number of bytes of data hashed       03-ERBSMF70\n                                            70469+*                       (long floating point)                      @L5C\n 000000A0                                   70470+R702NHAI DS    CL8      For SHA-1: Number of PCMF instructions          03-ERBSMF70\n                                            70471+*                       used to hash data (long floating point)    @L5C\n 000000A8                                   70472+R702NPTC DS    CL8      Number of calls to PIN translate                03-ERBSMF70\n                                            70473+*                       (long floating point)                      @J2A\n 000000B0                                   70474+R702NPVC DS    CL8      Number of calls to PIN verify                   03-ERBSMF70\n                                            70475+*                       (long floating point)                      @J2A\n 000000B8                                   70476+R702NH2C DS    CL8      For SHA-224 and SHA-256:                   @21C 03-ERBSMF70\n                                            70477+*                       Number of calls to hash\n                                            70478+*                       (long floating point)                      @L5A\n 000000C0                                   70479+R702NH2B DS    CL8      For SHA-224 and SHA-256:                   @21C 03-ERBSMF70\n                                            70480+*                       Number of bytes of data hashed\n                                            70481+*                       (long floating point)                      @L5A\n 000000C8                                   70482+R702NH2I DS    CL8      For SHA-224 and SHA-256:                   @21C 03-ERBSMF70\n                                            70483+*                       Number of PCMF instructions used to hash data\n                                            70484+*                       (long floating point)                      @L5A\n 000000D0                                   70485+R702NH5C DS    CL8      For SHA-384 and SHA-512:                        03-ERBSMF70\n                                            70486+*                       Number of calls to hash\n                                            70487+*                       (long floating point)                      @21A\n 000000D8                                   70488+R702NH5B DS    CL8      For SHA-384 and SHA-512:                        03-ERBSMF70\n                                            70489+*                       Number of bytes of data hashed\n                                            70490+*                       (long floating point)                      @21A\n 000000E0                                   70491+R702NH5I DS    CL8      For SHA-384 and SHA-512:                        03-ERBSMF70\n                                            70492+*                       Number of PCMF instructions used to hash data\n                                            70493+*                       (long floating point)                      @21A\n 000000E8                                   70494+R702CDLV DS    F        ICSF data level                        @OA28670 03-ERBSMF70\n 000000EC                                   70495+R702AESC DS    CL8      Number of AES encipher calls sent to a          03-ERBSMF70\n                                            70496+*                       coprocessor (long floating point).\n                                            70497+*                       Only valid if R702CDLV greater than 11 @OA28670\n 000000F4                                   70498+R702AESB DS    CL8      Number of bytes processed by the AES            03-ERBSMF70\n                                            70499+*                       encipher services handled by a coprocessor\n                                            70500+*                       (long floating point).\n                                            70501+*                       Only valid if R702CDLV greater than 11 @OA28670\n1         BPXYSMFR  - OpenMVS File System SMF Record format                                                     Page  367\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000000FC                                   70502+R702AESI DS    CL8      Number of operations required to complete       03-ERBSMF70\n                                            70503+*                       the AES encipher service calls to a\n                                            70504+*                       coprocessor (long floating point).\n                                            70505+*                       Only valid if R702CDLV greater than 11 @OA28670\n 00000104                                   70506+R702ASDC DS    CL8      Number of AES decipher calls sent to a          03-ERBSMF70\n                                            70507+*                       coprocessor (long floating point).\n                                            70508+*                       Only valid if R702CDLV greater than 11 @OA28670\n 0000010C                                   70509+R702ASDB DS    CL8      Number of bytes processed by the AES            03-ERBSMF70\n                                            70510+*                       decipher services handled by a coprocessor\n                                            70511+*                       (long floating point).\n                                            70512+*                       Only valid if R702CDLV greater than 11 @OA28670\n 00000114                                   70513+R702ASDI DS    CL8      Number of operations required to complete       03-ERBSMF70\n                                            70514+*                       the AES decipher service calls to a\n                                            70515+*                       coprocessor (long floating point).\n                                            70516+*                       Only valid if R702CDLV greater than 11 @OA28670\n                                            70517+*        ASASYMBP\n1         ASASYMBP  - ASASYMBM parameter area and symbol table                                                  Page  368\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           70520+**/ ASASYMBP_1:;\n                                            70521+*/* START OF SPECIFICATIONS *******************************************\n                                            70522+*\n                                            70523+*  **PROPRIETARY_STATEMENT********************************************\n                                            70524+***01* PROPRIETARY STATEMENT=                                        *\n                                            70525+*                                                                    *\n                                            70526+*                                                                    *\n                                            70527+*   LICENSED MATERIALS - PROPERTY OF IBM                             *\n                                            70528+*   THIS MACRO IS \"RESTRICTED MATERIALS OF IBM\"                      *\n                                            70529+*   5694-A01 (C) COPYRIGHT IBM CORP. 1994,2002                       *\n                                            70530+*                                                                    *\n                                            70531+*   STATUS= HBB7707                                                  *\n                                            70532+*                                                                    *\n                                            70533+*  **END_OF_PROPRIETARY_STATEMENT*************************************\n                                            70534+*\n                                            70535+*01* DESCRIPTIVE NAME:  ASASYMBM parameter area and symbol table\n                                            70536+*02*  ACRONYM:  SYMBP\n                                            70537+*\n                                            70538+*01* MACRO NAME:  ASASYMBP\n                                            70539+*\n                                            70540+*01* EXTERNAL CLASSIFICATION: GUPI\n                                            70541+*01* END OF EXTERNAL CLASSIFICATION:\n                                            70542+*\n                                            70543+*01* DSECT NAME:\n                                            70544+*     SYMBP\n                                            70545+*     SYMBT\n                                            70546+*     SYMBTE\n                                            70547+*\n                                            70548+*01* COMPONENT:  MVS Reuse (SCASA)\n                                            70549+*\n                                            70550+*01* EYE-CATCHER:  NONE\n                                            70551+*\n                                            70552+*01* STORAGE ATTRIBUTES:\n                                            70553+*02*  SUBPOOL:  Caller-supplied\n                                            70554+*02*  KEY:  Caller-supplied\n                                            70555+*02*  RESIDENCY:  Caller-supplied\n                                            70556+*\n                                            70557+*01* SIZE:  Variable\n                                            70558+*                SYMBP  -- X'001C' bytes\n                                            70559+*                SYMBT  -- X'0004' bytes\n                                            70560+*                          + one SYMBTE for each symbol indicated by\n                                            70561+*                            the SymbtNumberOfSymbols field.\n                                            70562+*                SYMBTE -- X'0010' bytes\n                                            70563+*01* CREATED BY:\n                                            70564+*     Caller and provided as input to ASASYMBM\n                                            70565+*\n                                            70566+*01* POINTED TO BY:\n                                            70567+*     Not applicable\n                                            70568+*\n                                            70569+*01* SERIALIZATION:\n                                            70570+*     None required\n                                            70571+*\n                                            70572+*01* FUNCTION:\n                                            70573+*02* Maps the data provided to ASASYMBM.\n                                            70574+*    A parameter area (SYMBP) is provided.\n1         ASASYMBP  - ASASYMBM parameter area and symbol table                                                  Page  369\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           70575+*    Optionally, the parameter area can point to a symbol table\n                                            70576+*    (SYMBT) which consists of the SYMBT header plus SYMBTE entries\n                                            70577+*    (which immediately follow the header, or are pointed to by\n                                            70578+*    a field which immediately follows the header).\n                                            70579+*\n                                            70580+*02* Return information is provided in the fullword pointed to by\n                                            70581+*    field SymbpReturnCode@. Possible values are:\n                                            70582+*03* 0\n                                            70583+*03*    Meaning: Successful Completion. All requested substitution\n                                            70584+*                was performed.\n                                            70585+*03*    Action:  None required.\n                                            70586+*\n                                            70587+*03* 4\n                                            70588+*03*    Meaning: Warning. When Substring was specified, a substring\n                                            70589+*                that exceeded the bounds of the substitution text,\n                                            70590+*                or a substring in which the length was specified\n                                            70591+*                as 0, was found.\n                                            70592+*                Substitution continues.\n                                            70593+*03*    Action:  None required.\n                                            70594+*\n                                            70595+*03* 8\n                                            70596+*03*    Meaning: Warning. Target buffer was too small to contain\n                                            70597+*                all of the substitution text.\n                                            70598+*03*    Action:  Specify a larger target buffer, or continue\n                                            70599+*                processing using the value returned in the fullword\n                                            70600+*                pointed to by field SymbpTargetLength@ to determine\n                                            70601+*                how much data was placed into the target buffer.\n                                            70602+*\n                                            70603+*03* 12\n                                            70604+*03*    Meaning: Error. When CheckNull was specified, a substitution\n                                            70605+*                text length of 0 was encountered when performing\n                                            70606+*                substitution. Substitution continues.\n                                            70607+*03*    Action:  None required. The system informs the program of the\n                                            70608+*                situation in which it was interested. It is up to\n                                            70609+*                the program to determine the necessary course of\n                                            70610+*                action.\n                                            70611+*\n                                            70612+*03* 16\n                                            70613+*03*    Meaning: Warning. When WarnNoSub was specified, the\n                                            70614+*                substitution process encountered no symbols for\n                                            70615+*                which to substitute.\n                                            70616+*                The substitution processing completed normally.\n                                            70617+*03*    Action:  None required.\n                                            70618+*\n                                            70619+*01* METHOD OF ACCESS:\n                                            70620+*02*  ASM:\n                                            70621+*      ASASYMBP\n                                            70622+*           DSECT=YES|NO  -- Request DSECT definition\n                                            70623+*           SYMBP=YES|NO|COND -- Request parameter area mapping\n                                            70624+*                            USING on SYMBP\n                                            70625+*           SYMBT=YES|NO|COND -- Request symbol table mapping\n                                            70626+*                            USING on SYMBT\n                                            70627+*           SYMBTE=YES|NO|COND -- Request symbol table entry mapping\n                                            70628+*                            USING on SYMBTE\n                                            70629+*     Default: DSECT=YES,SYMBP=YES,SYMBT=COND,SYMBTE=COND\n1         ASASYMBP  - ASASYMBM parameter area and symbol table                                                  Page  370\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                           70630+*     Notes: name=YES  => expand\n                                            70631+*            name=NO   => do not expand\n                                            70632+*            name=COND => expand only if DSECT=YES\n                                            70633+*\n                                            70634+*02*  PL/AS:\n                                            70635+*      %INCLUDE SYSLIB(ASASYMBP)\n                                            70636+*\n                                            70637+*01*  USAGE NOTES:\n                                            70638+*      Invoke ASASYMBM via\n                                            70639+*        Build symbparea to conform with the Symbp mapping.\n                                            70640+*        LINK EP=ASASYMBM,MF=(E,symbparea)\n                                            70641+*     or LINKX EP=ASASYMBM,MF=(E,symbparea)\n                                            70642+*          <<if reentrant and using LINKX, use the SF key as well>>\n                                            70643+*     or LOAD EP=ASASYMBM\n                                            70644+*        move entry point address to GPR 15\n                                            70645+*        CALL (15),MF=(E,symbparea)\n                                            70646+*\n                                            70647+*\n                                            70648+*01* DELETED BY:  Caller\n                                            70649+*\n                                            70650+*01* FREQUENCY:  Created for input to ASASYMBM\n                                            70651+*\n                                            70652+*01* DEPENDENCIES:  None\n                                            70653+*\n                                            70654+*01* DISTRIBUTION LIBRARY:  AMACLIB\n                                            70655+*\n                                            70656+*01* CHANGE ACTIVITY:\n                                            70657+*   $L0=CLONECBG ,HBB5520,930908,PD00XB: ASASYMBM parameter area\n                                            70658+*   $L1=CLONEASA ,HBB5520,930908,PD00XB: ASASYMBM parameter area\n                                            70659+*   $L2=CLONEASA ,HBB5520,930908,PD00XB: Substring, Check null\n                                            70660+*   $D1=DN70056  ,HBB5520,940506,PD00XB: Warn on no substitution\n                                            70661+*   $P1=PN70675  ,HBB5520,940520,PD00XB: Mixed case symbols\n                                            70662+*   $L3=MSYMB    ,HBB7707,010702,PD00XB: More symbols\n                                            70663+*\n                                            70664+* END OF SPECIFICATIONS *********************************************/\n                                            70665+*% /*\n 00000000                00000000 0000001C  70666+SYMBP    DSECT                                                          03-ASASYMBP\n 00000000                                   70667+SYMBPPATTERN@ DS 1AL4    Address of input pattern containing symbols   X03-ASASYMBP\n                                                 +                         to be resolved\n 00000004                00000004 00000000  70668+         ORG   SYMBPPATTERN@                                            03-ASASYMBP\n 00000000                                   70669+SYMBPPATTERNADDR DS 1AL4 Same as SymbpPattern@                          03-ASASYMBP\n 00000004                                   70670+SYMBPPATTERNLENGTH DS 1FL4 Length of input pattern                      03-ASASYMBP\n 00000008                                   70671+SYMBPTARGET@ DS 1AL4     Address of output target area. The target,    X03-ASASYMBP\n                                                 +                         for the length specified in the word pointed  X\n                                                 +                         to by SymbpTargetLength@, is initialized to   X\n                                                 +                         blanks before substitution processing begins.\n 0000000C                0000000C 00000008  70672+         ORG   SYMBPTARGET@                                             03-ASASYMBP\n 00000008                                   70673+SYMBPTARGETADDR DS 1AL4  Same as SymbpTarget@                           03-ASASYMBP\n 0000000C                                   70674+SYMBPTARGETLENGTH@ DS 1AL4 Address of input output fullword field      X03-ASASYMBP\n                                                 +                         containing length of target area. On input,   X\n                                                 +                         it contains the length provided. On output,   X\n                                                 +                         it contains the actual length of the target   X\n                                                 +                         resulting from the symbolic substitution.\n 00000010                00000010 0000000C  70675+         ORG   SYMBPTARGETLENGTH@                                       03-ASASYMBP\n 0000000C                                   70676+SYMBPTARGETLENGTHADDR DS 1AL4 Same as SymbpTargetLength                 03-ASASYMBP\n1         ASASYMBP  - ASASYMBM parameter area and symbol table                                                  Page  371\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000010                                   70677+SYMBPSYMBOLTABLE@ DS 1AL4 Address of symbol table mapped by SYMBT      X03-ASASYMBP\n                                                 +                         DSECT. If only the default set of symbols are X\n                                                 +                         wanted, and none of the functions indicated   X\n                                                 +                         by the flags in SymbtFlags are needed, then   X\n                                                 +                         this field should be 0.\n 00000014                00000014 00000010  70678+         ORG   SYMBPSYMBOLTABLE@                                        03-ASASYMBP\n 00000010                                   70679+SYMBPSYMBOLTABLEADDR DS 1AL4 Same as SymbpSymbolTable                   03-ASASYMBP\n 00000014                                   70680+SYMBPTIMESTAMP@ DS 1AL4  Address of 8-character area containing the    X03-ASASYMBP\n                                                 +                         time stamp to use. If this field is           X\n                                                 +                         hexadecimal zeroes, the system will obtain    X\n                                                 +                         the current time stamp for use in evaluating  X\n                                                 +                         symbolics related to time or date.\n 00000018                00000018 00000014  70681+         ORG   SYMBPTIMESTAMP@                                          03-ASASYMBP\n 00000014                                   70682+SYMBPTIMESTAMPADDR DS 1AL4 Same as SymbpTimeStamp@                      03-ASASYMBP\n 00000018                                   70683+SYMBPRETURNCODE@ DS 1FL4 Address of fullword which is to contain the   X03-ASASYMBP\n                                                 +                         return code\n 0000001C                0000001C 00000018  70684+         ORG   SYMBPRETURNCODE@                                         03-ASASYMBP\n 00000018                                   70685+SYMBPRETURNCODEADDR DS 1AL4 Same as SymbpReturnCode                     03-ASASYMBP\n                         0000001C           70686+SYMBP_LEN EQU  *-SYMBP                                                  03-ASASYMBP\n 00000000                00000000 00000004  70687+SYMBT    DSECT           Symbol table                                   03-ASASYMBP\n 00000000                                   70688+SYMBTHEADER DS 1CL0004                                                  03-ASASYMBP\n 00000004                00000004 00000000  70689+         ORG   SYMBTHEADER                                              03-ASASYMBP\n 00000000                                   70690+SYMBTFLAGS DS  1BL2                                                     03-ASASYMBP\n 00000002                00000002 00000000  70691+         ORG   SYMBTFLAGS                                               03-ASASYMBP\n 00000000                                   70692+SYMBTFLAG0 DS  1BL1      Byte 0 of SymbtFlags                           03-ASASYMBP\n 00000001                00000001 00000000  70693+         ORG   SYMBTFLAG0                                               03-ASASYMBP\n                         00000080           70694+SYMBTNODEFAULTSYMBOLS EQU X'80' Avoid using the default symbol set      03-ASASYMBP\n                         00000040           70695+SYMBTONLYSTATICSYMBOLS EQU X'40' Allow only static symbols              03-ASASYMBP\n                         00000020           70696+SYMBTTIMESTAMPISGMT EQU X'20' The input timestamp is GMT-time, not     X03-ASASYMBP\n                                                 +                         Local. Note that the value from STCK or       X\n                                                 +                         STCKSYNC is not GMT. It needs to be corrected X\n                                                 +                         by subtracting CVTLSO. This bit need not be   X\n                                                 +                         set as it is the default. Do not also specify X\n                                                 +                         SymbtTimeStampIsLocal or                      X\n                                                 +                         SymbtTimeStampIsStck.\n                         00000010           70697+SYMBTTIMESTAMPISLOCAL EQU X'10' The input timestamp is Local-Time, not X03-ASASYMBP\n                                                 +                         GMT. Do not also specify SymbtTimeStampIsGMT  X\n                                                 +                         or SymbtTimeStampIsStck.\n                         00000008           70698+SYMBTWARNSUBSTRINGS EQU X'08' When a substring problem is encountered, X03-ASASYMBP\n                                                 +                         produce a warning return code. The substring  X\n                                                 +                         is fixed irregardless.\n                         00000004           70699+SYMBTCHECKNULLSUBTEXT EQU X'04' The presence of null sub-text will be  X03-ASASYMBP\n                                                 +                         flagged via non-zero return code.\n                         00000002           70700+SYMBTPTRSAREOFFSETS EQU X'02' The pointer fields within the            X03-ASASYMBP\n                                                 +                         user-provided symbol area are offsets. The    X\n                                                 +                         processing code will add the offset and the   X\n                                                 +                         symbol area address to get the actual address X\n                                                 +                         of the operand. Note that this does not apply X\n                                                 +                         to field SymbteSymbolAreaAddr - it is always  X\n                                                 +                         a pointer. Note also that when bit            X\n                                                 +                         SymbtIndrectSymbolArea is on, the symbol area X\n                                                 +                         address is the address contained in           X\n                                                 +                         SymbteSymbolAreaAddr. When bit\n                                            70701+*                        SymbtIndirectSymbolArea is off, the symbol    X\n                                                 +                         area address is the address of                X\n1         ASASYMBP  - ASASYMBM parameter area and symbol table                                                  Page  372\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                                +                         SymbtTableEntries.\n                         00000001           70702+SYMBTONLYDYNAMICSYMBOLS EQU X'01' Allow only dynamic symbols. This     X03-ASASYMBP\n                                                 +                         should be used only when passing in as a user X\n                                                 +                         symbol table the static symbol table of       X\n                                                 +                         another system.\n 00000000                00000000 00000001  70703+         ORG   SYMBTFLAG0+X'00000001'                                   03-ASASYMBP\n 00000001                                   70704+SYMBTFLAG1 DS  1BL1      Byte 1 of SymbtFlags                           03-ASASYMBP\n 00000002                00000002 00000001  70705+         ORG   SYMBTFLAG1                                               03-ASASYMBP\n                         00000080           70706+SYMBTFLAG1RSV1 EQU X'80' Reserved. Must be zero. Do not use.            03-ASASYMBP\n                         00000040           70707+SYMBTTIMESTAMPISSTCK EQU X'40' The input timestamp is from the STCK    X03-ASASYMBP\n                                                 +                         instruction or the STCKSYNC service. Do not   X\n                                                 +                         also specify SymbtTimeStampIsGMT or           X\n                                                 +                         SymbtTimeStampIsLocal.\n                         00000020           70708+SYMBTWARNNOSUB EQU X'20' When no substitution at all has occurred,     X03-ASASYMBP\n                                                 +                         produce a warning return code.\n                         00000010           70709+SYMBTINDIRECTSYMBOLAREA EQU X'10' Indicates that the symbol area is    X03-ASASYMBP\n                                                 +                         not contiguous but rather is pointed to by    X\n                                                 +                         SymbteSymbolAreaAddr.\n                         00000008           70710+SYMBTMIXEDCASESYMBOLS EQU X'08' Indicates that the input may have      X03-ASASYMBP\n                                                 +                         non-uppercase symbols. The processing will    X\n                                                 +                         obtain an additional area to copy the input   X\n                                                 +                         pattern in order to make recognition of these X\n                                                 +                         symbols possible.\n                         00000007           70711+SYMBTFLAG1RSV3 EQU X'07' Unused. Must be zero.                          03-ASASYMBP\n 00000001                00000001 00000002  70712+         ORG   SYMBTFLAGS+X'00000002'                                   03-ASASYMBP\n 00000002                                   70713+SYMBTNUMBEROFSYMBOLS DS 1FL2 Number of entries in symbol table. Can be X03-ASASYMBP\n                                                 +                         0.\n 00000004                                   70714+SYMBTTABLEENTRIES DS 0C  Symbol table entries. One for each indicated  X03-ASASYMBP\n                                                 +                         by the NumberOfSymbols field. Mapped by       X\n                                                 +                         SYMBTE DSECT. Note that when                  X\n                                                 +                         SymbtIndirectSymbolArea is specified, this    X\n                                                 +                         area consists only of field                   X\n                                                 +                         SymbteSymbolAreaAddr. In that case, it is the X\n                                                 +                         area pointed to by that pointer that is       X\n                                                 +                         mapped by SYMBTE DSECT.\n                                            70715+*\n                                            70716+*    *****************************************************************\n                                            70717+*    *                                                               *\n                                            70718+*    * The static symbol table is pointed to by ECVTSYMT and is      *\n                                            70719+*    * mapped by the SYMBT DSECT. In the 4-bytes preceding this table*\n                                            70720+*    * is a fullword which specifies the length of the contiguous    *\n                                            70721+*    * area that follows which contains the table plus the symbol    *\n                                            70722+*    * names plus the substitution text values.                      *\n                                            70723+*    *                                                               *\n                                            70724+*    *****************************************************************\n                                            70725+*\n                                            70726+*\n                         00000008           70727+SYMBTMAXSTATICSYMBOLLENGTH EQU 8 The max length of a static symbol,    X03-ASASYMBP\n                                                 +                         not counting the \"&\" and the \".\"\n                         00000067           70728+SYMBTMAXSTATICENTRIESPREZOSR4 EQU 103 The max number of full-sized     X03-ASASYMBP\n                                                 +                         entries. This provides for the 5 MVS-defined  X\n                                                 +                         symbols plus 98 user-provided symbols\n                         000003A0           70729+SYMBTMAXSTATICENTRIESZOSR4 EQU 928 The max number of full-sized        X03-ASASYMBP\n                                                 +                         entries. This provides for the 5 MVS-defined  X\n                                                 +                         symbols plus 923 user-provided symbols\n1         ASASYMBP  - ASASYMBM parameter area and symbol table                                                  Page  373\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        000003A0           70730+SYMBTMAXSTATICENTRIES EQU 928 The max number of full-sized entries.    X03-ASASYMBP\n                                                 +                         This provides for the 5 MVS-defined symbols   X\n                                                 +                         plus 98 user-provided symbols\n                         00000009           70731+SYMBTMAXSTATICSUBTEXTLENGTH EQU 9 The max length of substitution text  X03-ASASYMBP\n                                                 +                         for a static symbol\n                         00000E19           70732+SYMBTMAXSTATICTABLESIZEPREZOSR4 EQU 3609 The max table size, taking    X03-ASASYMBP\n                                                 +                         into account that each symbol is preceded by  X\n                                                 +                         \"&\" and followed by \".\"\n                         00007F00           70733+SYMBTMAXSTATICTABLESIZEZOSR4 EQU 32512 The max table size, taking into X03-ASASYMBP\n                                                 +                         account that each symbol is preceded by \"&\"   X\n                                                 +                         and followed by \".\"\n                         00007F00           70734+SYMBTMAXSTATICTABLESIZE EQU 32512                                       03-ASASYMBP\n                         00000004           70735+SYMBT_LEN EQU  *-SYMBT                                                  03-ASASYMBP\n                                            70736+*\n                                            70737+*                                      The max table size taking into\n                                            70738+*                                      account that each symbol is\n                                            70739+*                                      preceded by \"&\" and followed\n                                            70740+*                                      by \".\"\n                                            70741+*\n 00000000                00000000 00000010  70742+SYMBTE   DSECT           Symbol table entry                             03-ASASYMBP\n 00000000                                   70743+SYMBTETABLEENTRIES DS 1CL0016 Symbol table entry. One such entry for   X03-ASASYMBP\n                                                 +                         each indicated by the SymbtNumberOfSymbols    X\n                                                 +                         field.\n 00000010                00000010 00000000  70744+         ORG   SYMBTETABLEENTRIES                                       03-ASASYMBP\n 00000000                                   70745+SYMBTESYMBOLPTR DS 1AL4  Address of symbol. Do not use when bit        X03-ASASYMBP\n                                                 +                         SymbtPtrsAreOffsets is on. Note that the      X\n                                                 +                         symbol must include the preceding \"&\" and the X\n                                                 +                         trailing \".\"\n 00000004                00000004 00000000  70746+         ORG   SYMBTESYMBOLPTR                                          03-ASASYMBP\n 00000000                                   70747+SYMBTESYMBOLOFFSET DS 1FL4 Offset to symbol from start of symbol area. X03-ASASYMBP\n                                                 +                         Only use if bit SymbtPtrsAreOffsets is on.    X\n                                                 +                         Note that the symbol must include the         X\n                                                 +                         preceding \"&\" and the trailing \".\"\n 00000004                00000004 00000000  70748+         ORG   SYMBTESYMBOLOFFSET                                       03-ASASYMBP\n 00000000                                   70749+SYMBTESYMBOLAREAADDR DS 1AL4 Address of symbol area when               X03-ASASYMBP\n                                                 +                         SymbtIndirectSymbolArea is set. In that case, X\n                                                 +                         this is the only word needed in the Symbte    X\n                                                 +                         area, and the area pointed to by this pointer X\n                                                 +                         is mapped by the \"regular\" SYMBTE DSECT (for  X\n                                                 +                         which SymbteSymbolAreaAddr is not relevant).\n 00000004                                   70750+SYMBTESYMBOLLENGTH DS 1FL4 Length of symbol (includes preceding \"&\"    X03-ASASYMBP\n                                                 +                         and trailing \".\")\n 00000008                                   70751+SYMBTESUBTEXTPTR DS 1AL4 Address of substitution text. Do not use when X03-ASASYMBP\n                                                 +                         bit SymbtPtrsAreOffsets is on.\n 0000000C                0000000C 00000008  70752+         ORG   SYMBTESUBTEXTPTR                                         03-ASASYMBP\n 00000008                                   70753+SYMBTESUBTEXTOFFSET DS 1FL4 Offset to substitution text from start of  X03-ASASYMBP\n                                                 +                         symbol area. Only use if bit                  X\n                                                 +                         SymbtPtrsAreOffsets is on.\n 0000000C                                   70754+SYMBTESUBTEXTLENGTH DS 1FL4 Length of substitution text                 03-ASASYMBP\n                         00000010           70755+SYMBTE_LEN EQU *-SYMBTE                                                 03-ASASYMBP\n 00000000                00000000 0000004A  70756+DIR      DSECT                     DIRECTORY DSECT                      02-$$GLOBAL\n 00000000                                   70757+DIRMEM   DS    CL8                 MEMBER NAME                          02-$$GLOBAL\n 00000008                                   70758+DIRTTR   DS    XL3                 TTR VALUE                            02-$$GLOBAL\n 0000000B                                   70759+DIRC     DS    C                   COMBINED FLAG BYTE                   02-$$GLOBAL\n                         00000080           70760+DIRCA    EQU   X'80'               ALIAS FLAG                           02-$$GLOBAL\n1         ASASYMBP  - ASASYMBM parameter area and symbol table                                                  Page  374\n   Active Usings: PSA,R0  TCB,R2  IHADCB,R6  SRBWORK,R8  SRBSECT,R9  DATAASMIF(X'FFF'),R11  ASM_SAVE,R13\n   CVAFFILT_MAP(X'808'),R13+X'7F8'  BFL_MAP(X'81C'),R13+X'7E4'  FCL_MAP(X'834'),R13+X'7CC'\n D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000060           70761+DIRCN    EQU   X'60'               TTRN MASK                            02-$$GLOBAL\n                         0000001F           70762+DIRCU    EQU   X'1F'               USER DATA MASK                       02-$$GLOBAL\n 0000000C                                   70763+DIRUSER  DS    CL62                USER DATA FIELD                      02-$$GLOBAL\n                                            70764+         POP  PRINT                                                     02-$$GLOBAL\n                                            70765+         PRINT GEN                                                      01-$$ASMIF\n0                                           70767+* event token dsect\n 00000000                00000000 00000010  70768+EVENT_TOKEN  DSECT                                                      01-$$ASMIF\n 00000000 00000000                          70769+EVENT_TOKEN_ASCB DC A(0)         ascb pointer                           01-$$ASMIF\n 00000004 00000000                          70770+EVENT_TOKEN_TCB  DC A(0)         tcb pointer                            01-$$ASMIF\n 00000008 00000000                          70771+EVENT_TOKEN_ECBP DC A(0)         ecb pointer                            01-$$ASMIF\n 0000000C 00000000                          70772+EVENT_TOKEN_ECB  DC A(0)         event ecb                              01-$$ASMIF\n0                                           70774+* event token dsect\n 00000000                00000000 00000010  70775+SHMEM_TOKEN  DSECT                                                      01-$$ASMIF\n 00000000 00000000                          70776+SHMEM_TOKEN_ASCB DC A(0)         ascb pointer                           01-$$ASMIF\n 00000004 00000000                          70777+SHMEM_TOKEN_ADDR DC A(0)         source address                         01-$$ASMIF\n 00000008 00000000                          70778+SHMEM_TOKEN_LGTH DC A(0)         source length                          01-$$ASMIF\n 0000000C 00000000                          70779+SHMEM_TOKEN_     DC A(0)         reserved                               01-$$ASMIF\n                                            70780+         PRINT NOGEN                                                    01-$$ASMIF\n                                            70781          END\n1                                                 Relocation Dictionary                                         Page  375\n-   Pos.Id   Rel.Id   Address  Type  Action                                                  HLASM R6.0  2012/11/30 08.23\n0  00000004 00000004 00001C44   A 4     +\n   00000004 00000006 0000044C   V 4    ST\n   00000004 00000007 0000165C   V 4    ST\n1                                          Macro and Copy Code Source Summary                                   Page  376\n- Con Source                                        Volume    Members                        HLASM R6.0  2012/11/30 08.23\n0     PRIMARY INPUT                                           ASM_CASE ASM_CASENTRY      ASM_DO   ASM_DOEXIT\n                                                              ASM_ELSE ASM_ELSEIF        ASM_ENDCASE       ASM_ENDDO\n                                                              ASM_ENDIF         ASM_ENDLOOP       ASM_ENDSEL\n                                                              ASM_ENDSRCH       ASM_EXITIF        ASM_IF   ASM_ITERATE\n                                                              ASM_LEAVE         ASM_NEXTWHEN      ASM_ORELSE\n                                                              ASM_OTHRWISE      ASM_SELECT        ASM_STRTSRCH\n                                                              ASM_TK_RENAME     ASM_WHEN B        BAL      BAS      BC\n                                                              BCT      BE       BH       BL       BM       BNE      BNH\n                                                              BNL      BNM      BNO      BNP      BNZ      BO       BP\n                                                              BXH      BXLE     BZ\n   L1 ESA.PRJ.CBTDSSN.ASM                           USER01    $$       $$ASMIF  $$DBASE  $$GLOBAL $$SETKEY $$SYSTEM\n                                                              $$SYSVAR BPXZOCVE BPXZOCVT BPXZOPNT CREGS    IHALLT\n   L2 SYS1.MACLIB                                   Z1DT11    ADREID0  ALESERV  ASASYMBP BPXYAIO  BPXYCID  BPXYIOCC\n                                                              BPXYMNTE BPXYOPNF BPXYOSMF BPXYPGPS BPXYPGTH BPXYPRLI\n                                                              BPXYRFIS BPXYSEL  BPXYSIGH BPXYSMFR BPXYSTAT BPXYTHLI\n                                                              BPXZOTCB CALL     CAMLST   CLOSE    CONVTOD  CSVDLCB  CVT\n                                                              DCB      DCBD     DELETE   DEQ      ENQ      ERBCOPY1\n                                                              ERBHDR   ERBPRO   ERBSMFR  ERBSMF70 ERBSMF79 EXTRACT\n                                                              FREEMAIN GETMAIN  IARVSERV IAZCHK   IAZCTKN  IAZFSCT\n                                                              IAZFSIP  IAZFSVT  IAZIDX   IAZJSAB  IAZJSPA  IAZRESPA\n                                                              IAZSSS2  ICHRUTKN IDARMRCD IDCDOUT  IEABRC   IEAMSCHD\n                                                              IEANTASM IEATDUMP IEESMCA  IEFJESCT IEFJFCBN IEFJSBVT\n                                                              IEFJSCVT IEFJSIPL IEFJSSIB IEFJSSOB IEFSJMRP IEFSJRC\n                                                              IEFSJREP IEFSSAL  IEFSSEN  IEFSSOBH IEFSSTS  IEFSSVS\n                                                              IEFTIOT1 IEFZB505 IEWPMAR  IEZCIB   IEZCOM   IEZDEB\n                                                              IEZJSCB  IFASMFR  IFASMFRA IFASMFR1 IFASMFR3 IFGSMF14\n                                                              IGVVSMD  IGWDES   IGWSMDE  IGWSMF   IHAACEE  IHAASCB\n                                                              IHAASSB  IHADCBE  IHAEPIE  IHAPCCAT IHAPSA   IHAPSAE\n                                                              IHARB    IHASDWA  IHASRB   IHASVT   IHATTE   IHAVRA\n                                                              IHBERMAC IHBINNRA IHBINNRR IHBOPLTX IHBSETR  IHB01\n                                                              IKJECT   IKJEFTSJ IKJEFTSV IKJPSCB  IKJTCB   IKJTSVT\n                                                              IKJUPT   IRACMCT  IRACPMB  IRARMCT  IRXSHVB  ISTDBIND\n                                                              ISTDNIB  ISTDPROC ISTDVCHR ISTFM5   ISTGAPPC ISTGLBAL\n                                                              ISTRPLEX ISTRPLFB ISTRPL6X ISTSLCNS ISTSLD   IWMPB\n                                                              IWMQCXIT IWMYCON  IXCYARAA IXCYARM  IXGANSAA IXGBRMLT\n                                                              IXGBRWSE IXGCONN  IXGWRITE LOAD     MODESET  OPEN\n                                                              PGSER    POST     QEDIT    RDJFCB   SCHEDULE SDUMPX\n                                                              SETLOCK  SPLEVEL  STIMER   STORAGE  SYSEVENT SYSSTATE\n                                                              TESTAUTH TIMEUSED TTIMER   VSMLIST  WAIT     WTO\n   L3 SYS1.MODGEN                                   Z1DT12    ADRUFO   CVAFFILT IARVRL   ICVAFBFL ICVAFPL  ICVFCL\n                                                              IECSDSL1 IEFJMR   IEFJSSWA IEFSSAG  IEFSSARB IEFSSCI\n                                                              IEFSSCS  IEFSSDA  IEFSSSO  IEFZB610 IEZBITS  IFGACB\n                                                              IFGACBVS IFGEXLST IFGEXLVS IFGRPL   IFGRPLVS IHAASVT\n                                                              IHAASXB  IHACDE   IHACSD   IHADECB  IHAECVT  IHALDA\n                                                              IHALLE   IHAPCCA  IHASCVT  IHASTCB  IHATBVT  IHATRVT\n                                                              IHAXTLST IKJRB    IRACCT   IRAICT   IRAMCT   OBTAIN\n   L5 ASM.AASMMAC2                                  Z1DSM1    ASMMCHKN ASMMDOPR ASMMGBLV ASMMGETC ASMMIFPR ASMMNAME\n                                                              ASMMPOPI ASMMPOPN ASMMPSHI ASMMPSHL ASMMPSHN ASMMREL\n                                                              ASMMSP   ASMMSTKI\n   L6 ASM.AASMMAC1                                  Z1DSM1    ASMAXITP\n   L7 TCPIP.SEZACMAC                                Z1DT12    DIAG     EZASMI   EZASMIP\n   L8 TCPIP.SEZANMAC                                Z1DT12    EZBCTHDR EZBYPTHA\n1                                                Dsect Cross Reference                                          Page  377\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2012/11/30 08.23\n0ACEE     000000C0  FFFFFFC8   20416\n ADREIB   0000002C  FFFFFF1A   54222\n ADRUFOB  00000018  FFFFFF0D   54841\n AIO      00000100  FFFFFF47   50851\n ANSAA    00000028  FFFFFF1E   53476\n ARAA     00000020  FFFFFFB0   25516\n ASCB     00000180  FFFFFFF3   10009\n ASM_BUFFER\n          00001000  FFFFFFFA    4335\n ASMDSECT 00000978  FFFFFFFD    3729\n ASSB     00000930  FFFFFFF1   11033\n ASVT     00000214  FFFFFFDA   15589\n ASXB     00000300  FFFFFFF2   10765\n AXP_HSIBlock\n          00000188  FFFFFF21   53179\n AXPAIL   00000024  FFFFFF22   53168\n AXPRIL   0000003C  FFFFFF24   53020\n AXPSIL   00000410  FFFFFF23   53141\n AXPXITP  0000001C  FFFFFF25   53003\n BFL_MAP  00000008  FFFFFF84   38497\n BFLE     0000000C  FFFFFF83   38524\n CCT      00000190  FFFFFFC6   21061\n CDENTRY  00000020  FFFFFFD6   18075\n CIBX     00000030  FFFFFF80   39090\n CID      00000028  FFFFFF48   50815\n CMCT     000000F0  FFFFFFC5   21489\n CMC2     00002000  FFFFFFC0   23109\n CMC2CMG2 00000014  FFFFFFBF   23191\n CMC2CMG3 00000014  FFFFFFBE   23247\n CPMB     00001000  FFFFFFC2   23030\n CPMB_CHP_ENTRY\n          00000008  FFFFFFC1   23080\n CPMX     00004000  FFFFFFB9   23552\n CPMXCMG2 00000040  FFFFFFB8   23641\n CPM2     00002000  FFFFFFBD   23298\n CPM2CMG1 0000001C  FFFFFFBC   23350\n CPM2CMG2 0000001C  FFFFFFBB   23456\n CPM2CMG3 0000001C  FFFFFFBA   23531\n CSD      00000200  FFFFFFB7   23838\n CTOKEN   00000050  FFFFFF53   47669\n CVAFFILT_MAP\n          00000044  FFFFFF82   38561\n CVT      00000500  FFFFFFF8    8441\n CVTVSTGX 00000050  FFFFFFF7    9558\n CVTXTNT1 0000000C  FFFFFFF6    9597\n CVTXTNT2 00000084  FFFFFFF5    9605\n DCBE     00000038  FFFFFFD3   18190\n DCUOUTH  000003D8  FFFFFF49   48833\n DDDUMM   00000000  FFFFFFFB    4333\n DEB      00000058  FFFFFF94   34552\n DEBACSMD 00000044  FFFFFF92   35203\n DEBDASD  00000010  FFFFFF93   35161\n DEBSUBNM 00000002  FFFFFF91   35407\n DEBXTN   00000054  FFFFFF90   35420\n DEB2XTN  000000EF  FFFFFF8F   35624\n1                                                Dsect Cross Reference                                          Page  378\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2012/11/30 08.23\n0DECB     00000030  FFFFFF8E   35751\n DESB     00000028  FFFFFF69   43493\n DESD     00000010  FFFFFF67   43528\n DESL     00000010  FFFFFF6A   43454\n DESN     00000002  FFFFFF68   43518\n DESP     00000068  FFFFFF6B   43309\n DESR     00000004  FFFFFF63   43632\n DESRCS   00000004  FFFFFF64   43618\n DESX     00000024  FFFFFF66   43563\n DIR      0000004A  FFFFFE51   70756\n DLCB     00000044  FFFFFF6E   42656\n DSCB     0000008C  FFFFFF89   38078\n DST      00000014  FFFFFF65   43597\n ECT      00000038  FFFFFFB6   24195\n ECVT     000003A0  FFFFFFEF   12189\n EIDDINFO 00000014  FFFFFF19   54271\n EIREC00  00000010  FFFFFF18   54284\n EIREC14  00000010  FFFFFF17   54335\n EIREC20  00000042  FFFFFF16   54345\n EIREC21  0000002C  FFFFFF14   54409\n EIREC22  00000066  FFFFFF13   54415\n EIREC23  00000351  FFFFFF12   54486\n EIREC24  00000053  FFFFFF11   54546\n EIREC26  000000BC  FFFFFF10   54562\n EIREC27  000000A8  FFFFFF0F   54587\n EIREC28  00000150  FFFFFF0E   54679\n EI20DSI  00000044  FFFFFF15   54384\n EPIE     00000140  FFFFFFEE   13071\n EVENT_TOKEN\n          00000010  FFFFFE50   70768\n EZASMGWA 00000008  FFFFFF4F   48176\n EZATASK  000000B0  FFFFFF4E   48248\n FCL_MAP  00000010  FFFFFF86   38445\n FM5ACCSE 00000002  FFFFFF9F   32749\n FM5ASI   00000001  FFFFFFA4   32703\n FM5CVCOR 00000001  FFFFFFA1   32728\n FM5DSSFM 00000004  FFFFFF9C   32791\n FM5LUOW1 00000002  FFFFFFA3   32715\n FM5LUOW2 00000008  FFFFFFA2   32724\n FM5PIPFM 00000004  FFFFFF9E   32767\n FM5PIPSM 00000004  FFFFFF9D   32773\n FM5SEQNM 00000009  FFFFFFA0   32735\n FRRAREA  000000B8  FFFFFFFE    3685\n FSIEA    000000BC  FFFFFF75   41276\n FSIED    00000018  FFFFFF76   41257\n FSIUDATA 0000000C  FFFFFF77   41246\n F2DSCB   0000008C  FFFFFF88   38346\n F3DSCB   0000008C  FFFFFF87   38409\n GTCNTL   00000034  FFFFFF4D   48327\n IAZCHK   00000080  FFFFFF7C   40128\n IAZFSCT  00000008  FFFFFF71   41710\n IAZFSIP  000000CC  FFFFFF78   40684\n IAZFSVT  0000000C  FFFFFF70   41752\n IAZIDX   00000020  FFFFFF79   40513\n IAZJSAB  00000080  FFFFFFB3   24579\n1                                                Dsect Cross Reference                                          Page  379\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2012/11/30 08.23\n0IAZJSPA  00000078  FFFFFF7B   40319\n IAZRESPA 0000003C  FFFFFF72   41646\n ICT      00000048  FFFFFFC4   21722\n IEFJFCBN 000000B0  FFFFFF8A   36846\n IEZCIB   00000018  FFFFFF81   38967\n IEZCOM   00000208  FFFFFF7F   39119\n IEZJSCB  0000017C  FFFFFFB2   24870\n IF_NAMEINDEX\n          00000020  FFFFFF02   55487\n IF_NAMEINDEXENTRY\n          00000018  FFFFFF03   55472\n IFGACB   0000004C  FFFFFFA6   31910\n IFGEXLEF 00000005  FFFFFFA9   29949\n IFGEXLST 00000030  FFFFFFAA   29844\n IFGRPL   00000070  FFFFFFA8   30009\n IHADCB   00000060  FFFFFF95   33984\n IOCC     00000004  FFFFFF0A   55122\n IOCDIRIOCTL\n          00000011  FFFFFF05   55441\n IOCMLSINFO\n          00000080  FFFFFF00   55517\n IOCN_IFREQ\n          00000020  FFFFFEFD   55689\n IOCN_RTMSGHDRTYPE\n          00000048  FFFFFEFF   55610\n IOCN_RTMSGTYPE\n          00000030  FFFFFEFE   55637\n IOCPOEATTR\n          00000060  FFFFFF01   55500\n IOCRTRSELECT\n          00000018  FFFFFF04   55456\n IOCSTACKINFO\n          00000018  FFFFFF07   55412\n IOCSTACKNAMESD\n          00000010  FFFFFF06   55425\n IOCUOCSBUFF\n          00000008  FFFFFF08   55386\n IOCUOFTE 0000000C  FFFFFF09   55375\n ISTDBIND 00000024  FFFFFF98   33119\n ISTDNIB  00000040  FFFFFF9B   32802\n ISTFM5   0000000A  FFFFFFA5   32656\n ISTRPL6X 00000070  FFFFFFA7   31358\n ISTSLCNS 00000010  FFFFFF96   33931\n ISTSLD   00000044  FFFFFF97   33819\n IXGANSAA 00000000  FFFFFF1F   53393\n IXGBRMHD 00000008  FFFFFF1D   53898\n IXGBRMLT 0000002C  FFFFFF1C   53922\n IXGBRMLT_LOGBLOCK\n          0000005E  FFFFFF1B   54046\n JESCT    00000080  FFFFFFE5   14837\n JESPEXT  00000098  FFFFFFE4   14955\n JMR      0000004C  FFFFFF73   41408\n JSBFCODG 00000002  FFFFFFDC   15411\n JSBTBL   0000000C  FFFFFFDD   15403\n JSBVT    00000010  FFFFFFDE   15384\n1                                                Dsect Cross Reference                                          Page  380\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2012/11/30 08.23\n0JSIPL    00000020  FFFFFFDB   15502\n JSPEXT   00000068  FFFFFF7A   40388\n LDA      000001F0  FFFFFFF0   11858\n LLE      0000000C  FFFFFFD5   18162\n LLT      00000035  FFFFFFED   13174\n MCT      00000388  FFFFFFC3   22051\n MNTE     000004CC  FFFFFF2D   52800\n MNTEH    00000020  FFFFFF2E   52781\n MNTENTAGGNAMEDSECT\n          00000000  FFFFFF2A   52923\n MNTENTPARMDATA\n          00000000  FFFFFF2C   52911\n MNTENTPFSEXCPSTATUSDSECT\n          00000000  FFFFFF28   52931\n MNTENTPFSNORMALSTATUSDSECT\n          00000000  FFFFFF29   52927\n MNTENTSYSLISTINFO\n          00000104  FFFFFF2B   52915\n NIBRPRM  0000001C  FFFFFF9A   33091\n NIBVECS  00000002  FFFFFF99   33107\n O_FLAGS  00000004  FFFFFF31   52598\n OCVE     00000010  FFFFFF40   51580\n OCVT     00000144  FFFFFF41   51562\n OPNT     0000031F  FFFFFF3F   51588\n OSMF     00000090  FFFFFF2F   52725\n OTCB     000001B0  FFFFFF45   51192\n OTCBCOPYONFORK\n          000000A8  FFFFFF44   51463\n OTCBFLAGS3WORD\n          00000004  FFFFFF42   51546\n OTCBRACGIDS\n          0000000C  FFFFFF43   51530\n PB       00000438  FFFFFFAF   27412\n PCCA     00000248  FFFFFFEC   13296\n PCCAVT   00000200  FFFFFFEB   13544\n PGPS     00000CA6  FFFFFF3E   51641\n PGTHA    0000001A  FFFFFF3D   51755\n PGTHB    00000030  FFFFFF3C   51791\n PGTHC    00000068  FFFFFF3B   51850\n PGTHD    00000406  FFFFFF3A   51923\n PGTHE    00000406  FFFFFF39   51929\n PGTHF    00000806  FFFFFF38   51935\n PGTHG    00000044  FFFFFF37   51943\n PGTHH    0000000C  FFFFFF36   51961\n PGTHJ    0000005C  FFFFFF35   51975\n PGTHK    00000048  FFFFFF34   52029\n PMAR     0000001E  FFFFFF5B   44530\n PMARA    00000007  FFFFFF58   44820\n PMARL    0000006A  FFFFFF5A   44664\n PMARR    00000017  FFFFFF59   44787\n PPT      00000020  FFFFFF51   48035\n PPT1     00000010  FFFFFF50   48051\n PRLI     00000070  FFFFFF32   52391\n PSA      00001000  FFFFFFD9   15757\n PSCB     00000068  FFFFFFB5   24349\n1                                                Dsect Cross Reference                                          Page  381\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2012/11/30 08.23\n0PTH_Ext2 00000014  FFFFFF4B   48573\n PTH_Ext3 00000008  FFFFFF4A   48584\n PTHDR_T  0000005C  FFFFFF4C   48494\n RBPRFX   00000110  FFFFFFD8   17294\n RFIM     00000010  FFFFFF26   52978\n RFIS     0000001C  FFFFFF27   52959\n RMCT     00000400  FFFFFFC7   20737\n R702CCF  0000011C  FFFFFE55   70425\n R702TYP3 00000030  FFFFFE57   70345\n R702TYP4 00000170  FFFFFE56   70368\n R79AELEM 00000040  FFFFFE6E   68714\n R79BCNTL 00000004  FFFFFE6D   68748\n R79BELEM 00000062  FFFFFE6C   68754\n R79CCHNL 0000006C  FFFFFE6A   68822\n R79CCNTL 00000014  FFFFFE6B   68791\n R79CHL   00000070  FFFFFE78   67873\n R79DCPD  0000000C  FFFFFE68   69015\n R79DCS   0000000C  FFFFFE69   68999\n R79DDS   00000020  FFFFFE67   69035\n R79ECPD  00000030  FFFFFE64   69110\n R79ECS   0000000C  FFFFFE65   69097\n R79EDS   00000038  FFFFFE63   69150\n R79EGD   00000008  FFFFFE66   69069\n R79FIRLM 0000006F  FFFFFE62   69183\n R791ELEM 000000EC  FFFFFE77   67908\n R792ELEM 000000E0  FFFFFE76   68117\n R793     00000066  FFFFFE75   68296\n R794     0000006C  FFFFFE74   68388\n R795ELEM 00000057  FFFFFE73   68441\n R796ELEM 00000056  FFFFFE72   68524\n R797ELEM 0000005C  FFFFFE71   68559\n R798ELEM 00000040  FFFFFE70   68604\n R799ELEM 00000068  FFFFFE6F   68637\n SCVTSECT 000000E0  FFFFFFF4    9750\n SDWA     00000298  FFFFFFD2   18568\n SDWANRC1 000000F0  FFFFFFCC   19643\n SDWANRC2 00000010  FFFFFFCB   19652\n SDWANRC3 000000F0  FFFFFFCA   19665\n SDWAPTRS 00000020  FFFFFFCD   19628\n SDWARC1  000001C8  FFFFFFD1   19253\n SDWARC2  00000010  FFFFFFD0   19498\n SDWARC3  00000020  FFFFFFCF   19510\n SDWARC4  00000168  FFFFFFCE   19572\n SEL      00000004  FFFFFFF9    4348\n SHMEM_TOKEN\n          00000010  FFFFFE4F   70775\n SHVBLOCK 00000020  FFFFFFAB   29713\n SIGEVENT 00000014  FFFFFF46   50963\n SJMRP    0000002C  FFFFFF74   41379\n SJRELIST 0000000C  FFFFFF7D   40011\n SJREP    00000030  FFFFFF7E   39985\n SMCABASE 000001F4  FFFFFF6D   42893\n SMDE     0000002C  FFFFFF62   44233\n SMDE_EXT_ATTR\n          00000024  FFFFFF5C   44389\n1                                                Dsect Cross Reference                                          Page  382\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2012/11/30 08.23\n0SMDE_FD  00000004  FFFFFF5E   44343\n SMDE_NAME\n          00000002  FFFFFF61   44304\n SMDE_NLST\n          00000004  FFFFFF60   44312\n SMDE_PNAME\n          00000002  FFFFFF5D   44351\n SMDE_TOKEN\n          00000020  FFFFFF5F   44326\n SMFRCD30 000000B0  FFFFFEFB   56226\n SMFRCD92 00000034  FFFFFE8B   66825\n SMF14    000001B4  FFFFFEFC   55733\n SMF2A0FA 00000518  FFFFFEB7   60588\n SMF2A0FB 00000548  FFFFFEB6   61204\n SMF2A0GA 000005D0  FFFFFEB3   62949\n SMF2A0GB 000005E0  FFFFFEB2   63508\n SMF2A0JA 000005C0  FFFFFEA4   65273\n SMF2A0JB 00000020  FFFFFEA2   65892\n SMF2A0JC 00000020  FFFFFEA1   65943\n SMF2A0JD 00000004  FFFFFEA0   65987\n SMF2A0JE 00000004  FFFFFE9F   66002\n SMF2A0JF 00000020  FFFFFE9E   66018\n SMF2A0JG 00000004  FFFFFE9D   66056\n SMF2A0PA 00000394  FFFFFEA3   65649\n SMF30ACS 00000001  FFFFFEF4   57052\n SMF30AR  00000028  FFFFFEF0   57712\n SMF30CAS 000000B0  FFFFFEF6   56733\n SMF30CMP 00000008  FFFFFEF7   56649\n SMF30DR  00000028  FFFFFEEF   57736\n SMF30EXP 0000001E  FFFFFEF5   57004\n SMF30ID  000000BA  FFFFFEF9   56427\n SMF30MSE 00000014  FFFFFEEB   57906\n SMF30OP  00000060  FFFFFEEE   57773\n SMF30OPS 00000018  FFFFFEF1   57689\n SMF30PRF 000000D2  FFFFFEF2   57309\n SMF30PSS 00000026  FFFFFEFA   56397\n SMF30RM  0000004D  FFFFFEEC   57858\n SMF30SAP 000000E8  FFFFFEF3   57060\n SMF30UD  0000004C  FFFFFEED   57828\n SMF30URA 0000004C  FFFFFEF8   56542\n SMF4     000000D7  FFFFFE8D   66302\n SMF42    00000024  FFFFFEEA   58162\n SMF42LA0 00000041  FFFFFE98   66131\n SMF42PA0 00000041  FFFFFE92   66248\n SMF42PRD 00000028  FFFFFED5   58684\n SMF42SA  00000008  FFFFFEE2   58347\n SMF42SB  00000008  FFFFFEE1   58362\n SMF42SF  00000020  FFFFFEE0   58377\n SMF42SG  00000020  FFFFFEDF   58420\n SMF42SH  00000010  FFFFFEDE   58461\n SMF42SI  00000018  FFFFFEDD   58484\n SMF42SJ  00000020  FFFFFEDC   58513\n SMF42SK  00000010  FFFFFEDB   58558\n SMF42SL  00000018  FFFFFEDA   58578\n SMF42SM  00000010  FFFFFED9   58605\n1                                                Dsect Cross Reference                                          Page  383\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2012/11/30 08.23\n0SMF42SN  00000008  FFFFFED8   58621\n SMF42SP  00000018  FFFFFED7   58632\n SMF42SQ  00000018  FFFFFED6   58657\n SMF42S1  00000010  FFFFFEE9   58213\n SMF42S2  00000010  FFFFFEE8   58232\n SMF42S3  00000008  FFFFFEE7   58251\n SMF42S4  00000018  FFFFFEE6   58270\n SMF42S5  00000010  FFFFFEE5   58293\n SMF42S6  00000008  FFFFFEE4   58313\n SMF42S9  00000010  FFFFFEE3   58328\n SMF420AA 00000292  FFFFFEBD   59423\n SMF420BA 00000020  FFFFFEBC   59459\n SMF420FA 00000518  FFFFFEB9   59534\n SMF420FB 00000548  FFFFFEB8   60056\n SMF420GA 000005D0  FFFFFEB5   61835\n SMF420GB 000005E0  FFFFFEB4   62388\n SMF420HA 00000120  FFFFFEB1   64074\n SMF420HB 00000120  FFFFFEB0   64185\n SMF420IA 000000C4  FFFFFEAF   64294\n SMF420IC 000000C4  FFFFFEAE   64375\n SMF420IE 00000050  FFFFFEAD   64459\n SMF420JA 000005C0  FFFFFEAC   64490\n SMF420JB 00000020  FFFFFEAA   65097\n SMF420JC 00000020  FFFFFEA9   65146\n SMF420JD 00000004  FFFFFEA8   65191\n SMF420JE 00000004  FFFFFEA7   65205\n SMF420JF 00000020  FFFFFEA6   65218\n SMF420JG 00000004  FFFFFEA5   65259\n SMF420KA 0000004A  FFFFFE9C   66076\n SMF420KB 00000050  FFFFFE9B   66085\n SMF420LA 0000008F  FFFFFE9A   66096\n SMF420LB 00000002  FFFFFE99   66122\n SMF420LC 00000050  FFFFFE97   66139\n SMF420MA 0000004C  FFFFFE96   66154\n SMF420NA 00000072  FFFFFE95   66185\n SMF420PA 00000374  FFFFFEAB   64861\n SMF420PB 00000002  FFFFFE93   66236\n SMF420PC 00000050  FFFFFE91   66255\n SMF420QA 0000008B  FFFFFE90   66270\n SMF420QB 00000041  FFFFFE8F   66282\n SMF420QC 00000050  FFFFFE8E   66292\n SMF4201A 00000024  FFFFFED4   58716\n SMF4201B 00000030  FFFFFED3   58735\n SMF4202A 00000058  FFFFFED2   58761\n SMF4202B 00000010  FFFFFED1   58835\n SMF4203A 000000C0  FFFFFED0   58862\n SMF4204C 00000040  FFFFFECF   58926\n SMF4204E 00000048  FFFFFECC   58991\n SMF4204V 00000058  FFFFFECB   59014\n SMF4205A 00000060  FFFFFEC8   59089\n SMF4205B 00000030  FFFFFEC7   59134\n SMF4205C 00000040  FFFFFEC6   59157\n SMF4205D 00000040  FFFFFEC5   59182\n SMF4205E 00000040  FFFFFEC4   59207\n SMF4206A 00000040  FFFFFEC3   59238\n1                                                Dsect Cross Reference                                          Page  384\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2012/11/30 08.23\n0SMF4209A 0000006C  FFFFFEBF   59369\n SMF4209B 0000005A  FFFFFEBE   59401\n SMF421PA 0000008F  FFFFFE94   66214\n SMF5     00000091  FFFFFE8C   66461\n SMF70AID 00000314  FFFFFE5B   69946\n SMF70BCT 00000048  FFFFFE5A   70184\n SMF70BPD 00000050  FFFFFE59   70247\n SMF70CIS 00000018  FFFFFE58   70331\n SMF70CPU 00000050  FFFFFE5C   69913\n SMF70CTL 000000DC  FFFFFE5D   69748\n SMF70HDR 00000054  FFFFFE61   69452\n SMF70PRO 00000068  FFFFFE60   69647\n SMF70RBL 00000004  FFFFFE5E   69724\n SMF70RHD 00000010  FFFFFE5F   69709\n SMF79HDR 00000044  FFFFFE7C   67596\n SMF79PRO 00000068  FFFFFE7B   67773\n SMF79RBL 00000004  FFFFFE79   67850\n SMF79RHD 00000010  FFFFFE7A   67835\n SMF92DFL 000000CC  FFFFFE7E   67144\n SMF92ESA 00000490  FFFFFE7D   67168\n SMF92FCL 00000084  FFFFFE81   67084\n SMF92FOP 00000018  FFFFFE82   67065\n SMF92FSM 0000006C  FFFFFE88   66905\n SMF92FSP 00000002  FFFFFE87   66929\n SMF92FSR 00000059  FFFFFE85   66962\n SMF92FSS 00000051  FFFFFE86   66940\n SMF92FSU 00000094  FFFFFE84   66986\n SMF92FSV 00000094  FFFFFE83   67022\n SMF92ID  00000048  FFFFFE89   66883\n SMF92MMP 00000018  FFFFFE80   67115\n SMF92MUN 00000028  FFFFFE7F   67128\n SMF92SSS 00000014  FFFFFE8A   66871\n SRBSECT  0000002C  FFFFFFD7   17988\n SRBWORK  00002080  FFFFFFFC    4310\n SSAGDMBK 00000002  FFFFFFE0   15270\n SSAGGMBK 00000002  FFFFFFDF   15276\n SSARB    0000003C  FFFFFFE1   15243\n SSCT     00000024  FFFFFFE6   14459\n SSIB     00000024  FFFFFF57   45016\n SSOB     0000001C  FFFFFF56   45242\n SSOBEXT  00000078  FFFFFF55   45276\n SSS2     00000428  FFFFFF54   46771\n SSTS     00000024  FFFFFF52   47863\n SSWA     00000009  FFFFFFE3   15113\n SSWAIFLD 00000001  FFFFFFE2   15129\n STAT     000000D8  FFFFFF30   52636\n STCB     000004A8  FFFFFFAC   28938\n SVT      00000600  FFFFFF6F   41869\n SYMBP    0000001C  FFFFFE54   70666\n SYMBT    00000004  FFFFFE53   70687\n SYMBTE   00000010  FFFFFE52   70742\n S42CSIDH 00000018  FFFFFECE   58948\n S42CVL   00000024  FFFFFECD   58967\n S42DSAM  00000030  FFFFFEC0   59346\n S42DSH   00000058  FFFFFEC2   59262\n1                                                Dsect Cross Reference                                          Page  385\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2012/11/30 08.23\n0S42DSIO  00000048  FFFFFEC1   59301\n S42VSIDH 00000020  FFFFFECA   59039\n S42VVL   0000002C  FFFFFEC9   59059\n S42XRSSD 0000002C  FFFFFEBB   59475\n S42XRVLD 00000034  FFFFFEBA   59503\n TBUF     00001000  FFFFFFE8   13981\n TBVT     00000058  FFFFFFE9   13897\n TCBFIX   00000178  FFFFFFAE   27979\n TCBXTNT2 00000020  FFFFFFAD   28770\n THLI     000000EC  FFFFFF33   52170\n TJDSECTD 0000003C  FFFFFF8C   36610\n TOKEN    00000050  FFFFFF20   53296\n TRVT     000000F0  FFFFFFEA   13661\n TSVT     00000128  FFFFFF8D   36216\n TTE      00000090  FFFFFFE7   14198\n TVDSECTD 0000003C  FFFFFF8B   36781\n UFOFUNCT 00000030  FFFFFF0C   54922\n UFOVOL   00000018  FFFFFF0B   55109\n UPT      00000038  FFFFFFB4   24448\n VRAMAP   00000002  FFFFFFC9   19818\n VRL      0000001C  FFFFFFFF    3636\n VSMD     00000008  FFFFFF6C   43276\n XTLST    00000010  FFFFFFD4   18180\n ZB505    0000001C  FFFFFFB1   25179\n1                                                      Using Map                                                Page  386\n-                                                                                            HLASM R6.0  2012/11/30 08.23\n   Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text\n           Count      Id           Type          Value    Range     Id        Disp    Stmt\n0  4306  00000978  FFFFFFFD USING  ORDINARY    00000000 00001000 FFFFFFD9   0 00224   7882 PSA,R0\n   4395  00000004  FFFFFFF9 USING  ORDINARY    00000000 00001000 FFFFFFFD   7 000CC   4458 ASMDSECT,R7\n   4413  00000036  00000004 USING  ORDINARY    00001C08 00000FFF 00000004  11 003A4   8101 (DATAASMIF,DATAASMIFEND),R11\n   4459  000000A2  00000004 DROP                                            7              R7\n   4460  000000A2  00000004 USING  ORDINARY    00000000 00001000 FFFFFFFD  13 008D8   4531 ASM_SAVE,R13\n   4497  000000FC  00000004 USING  ORDINARY    00000020 00001000 FFFFFFAE   2 0000C   4506 TCB,R2\n   4499  00000100  00000004 USING  ORDINARY    00000468 00001000 FFFFFFAC  14 00000   4500 TIOT1,R14\n   4507  0000011C  00000004 DROP                                           14              R14\n   4508  0000011C  00000004 USING  ORDINARY    00000040 00001000 FFFFFFD8  14 0001C   4525 RBBASIC,R14\n   4530  00000144  00000004 USING  ORDINARY    00000000 00001000 FFFFFFD6  15 00008   4531 CDENTRY,R15\n   4532  0000014A  00000004 DROP                                           14              R14\n   4532  0000014A  00000004 DROP                                           15              R15\n   4540  0000015A  00000004 DROP                                           13              R13\n   4542  0000015E  00000004 USING  ORDINARY    00000000 00001000 FFFFFFFD   7 00060   4547 ASMDSECT,R7\n   4548  00000174  00000004 DROP                                            7              R7\n   4549  00000174  00000004 USING  ORDINARY    00000000 00001000 FFFFFFFD  13 000CC   4591 ASM_SAVE,R13\n   4594  00000216  00000004 USING  ORDINARY    00000000 00001000 FFFFFFFD  13 008F4   8176 ASM_SAVE,R13\n   5611  00000C44  00000004 USING  ORDINARY    00000000 00001000 FFFFFF1D   3 00004   5627 IXGBRMHD,R3\n   5613  00000C48  00000004 USING  ORDINARY    00000000 00001000 FFFFFF1C   4 0002C   5631 IXGBRMLT,R4\n   5647  00000CA4  00000004 DROP                                            3              R3\n   5647  00000CA4  00000004 DROP                                            4              R4\n   5662  00000CA4  00000004 USING  ORDINARY    00000000 00001000 FFFFFF95   6 00030   5756 IHADCB,R6\n   5663  00000CA4  00000004 USING  ORDINARY    00000000 00001000 FFFFFF8A   5 00001   5720 IEFJFCBN,R5\n   5664  00000CA4  00000004 USING  DEPENDENT  +000007CC 00000834 FFFFFF86  13              FCL_MAP,ASM_VTOC_FCL\n   5665  00000CA4  00000004 USING  DEPENDENT  +000007E4 0000081C FFFFFF84  13              BFL_MAP,ASM_VTOC_BFL\n   5666  00000CA4  00000004 USING  DEPENDENT  +000007F8 00000808 FFFFFF82  13              CVAFFILT_MAP,ASM_VTOC_CVAFFILT\n   5739  00000D7A  00000004 USING  ORDINARY    00000000 00001000 FFFFFF85   2 00004   5743 FCLDSN,R2\n   5744  00000D8E  00000004 DROP                                            2              R2\n   5749  00000DA0  00000004 USING  ORDINARY    00000000 00001000 FFFFFF83   2 00008   5753 BFLE,R2\n   5754  00000DB0  00000004 DROP                                            2              R2\n   6208  00001138  00000004 USING  ORDINARY    00000000 00001000 FFFFFE50   4 00000        EVENT_TOKEN,R4\n   6249  0000118C  00000004 DROP                                            4              R4\n   6255  0000118C  00000004 USING  ORDINARY    00000000 00001000 FFFFFE50   4 00008   6257 EVENT_TOKEN,R4\n   6262  0000119C  00000004 DROP                                            4              R4\n   6658  00001318  00000004 USING  ORDINARY    00000000 00001000 FFFFFFD7   9 00028   6673 SRBSECT,R9\n   6660  0000131C  00000004 USING  ORDINARY    00000000 00001000 FFFFFFFC   8 00078   6782 SRBWORK,R8\n   6840  00001428  00000004 USING  ORDINARY    00000000 00001000 FFFFFFF3  12 0007C   6929 ASCB,R12\n   6844  00001432  00000004 USING  ORDINARY    00000000 00001000 FFFFFFFC   8 00084   7143 SRBWORK,R8\n   6930  000014B0  00000004 DROP                                           12              R12\n   7242  00001678  00000004 USING  ORDINARY    00000000 00001000 FFFFFE4F   2 00008   7289 SHMEM_TOKEN,R2\n   7243  00001678  00000004 USING  ORDINARY    00000000 00001000 FFFFFFFF   4 00018   7313 VRL,R4\n   7271  000016AE  00000004 USING  ORDINARY    00000000 00001000 FFFFFFF3   5 00150   7272 ASCB,R5\n   7273  000016B2  00000004 USING  ORDINARY    00000000 00001000 FFFFFFF1   5 00030   7281 ASSB,R5\n   7295  000016FA  00000004 USING  ORDINARY    00000000 00001000 FFFFFFF3   5 00150   7296 ASCB,R5\n   7297  000016FE  00000004 USING  ORDINARY    00000000 00001000 FFFFFFF1   5 00030   7305 ASSB,R5\n   7358  0000178C  00000004 DROP                                            4              R4\n   7358  0000178C  00000004 DROP                                            5              R5\n   7365  0000178C  00000004 USING  ORDINARY    00000000 00001000 FFFFFE4F   2 00000        SHMEM_TOKEN,R2\n   7366  0000178C  00000004 USING  ORDINARY    00000000 00001000 FFFFFFFF   4 00018   7410 VRL,R4\n   7457  0000184C  00000004 DROP                                            4              R4\n   7661  00001990  00000004 USING  ORDINARY    00000000 00001000 FFFFFF7F   4 00004   7780 COMLIST,R4\n   7662  00001990  00000004 USING  ORDINARY    00000000 00001000 FFFFFF81   5 00010   7768 CIBNEXT,R5\n   7788  00001A8E  00000004 DROP                                            4              R4\n1                                                      Using Map                                                Page  387\n-                                                                                            HLASM R6.0  2012/11/30 08.23\n   Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text\n           Count      Id           Type          Value    Range     Id        Disp    Stmt\n0  7789  00001A8E  00000004 DROP                                            5              R5\n   7834  00001AD2  00000004 USING  ORDINARY    00000020 00001000 FFFFFFAE   2 0007C   7836 TCB,R2\n   7881  00001B36  00000004 USING  ORDINARY    00000020 00001000 FFFFFFAE   2 0007C   7883 TCB,R2\n   8213  00001FAC  00000004 PUSH\n   8214  00001FAC  00000004 DROP                                           13              R13\n   8216  00001FAE  00000004 USING  ORDINARY    00000076 00001000 FFFFFFFD  15 00052   8218 ASM_TIMX+2,R15\n   8227  00001FC4  00000004 DROP                                           15              R15\n   8229  00001FC4  00000004 POP\n  15753  00000214  FFFFFFDA PUSH\n  15756  00000214  FFFFFFDA USING  ORDINARY    00000000 00001000 FFFFFFD9   0 00000        PSA,0\n  17151  00001000  FFFFFFD9 POP\n1                                   General Purpose Register Cross Reference                                    Page  388\n- Register  References (M=modified, B=branch, U=USING, D=DROP, N=index)                      HLASM R6.0  2012/11/30 08.23\n0    0(0)     4306U  4398M  4410   4411   4442M  4449M  4453M  4470M  4473   4481M  4484   4492M  4495   4541   4601   4621M  4622\n              4625M  4626   4630   4638   4657M  4658   4661M  4662   4663M  4664   4668   4702M  4703   4705M  4706   4710   4736M\n              4758M  4862M  4863   4887M  4888   4891M  4892   4895M  4896   4929M  4933   4934M  4935M  4936   5068   5131M  5167M\n              5208M  5229M  5265M  5269   5297M  5301   5333M  5337   5365M  5369   5425M  5429   5458M  5462   5505M  5509   5541M\n              5545   5553   5562M  5593M  5597   5645   5672M  5675M  5678M  5686M  5817M  5823M  5834M  5838M  5849   5963   5979M\n              5980M  6114M  6115M  6121M  6239M  6268   6287M  6288M  6381M  6425M  6425   6481M  6532M  6536M  6553M  6559M  6559\n              6569M  6652M  6735M  6742   6753M  6761M  6768   6774M  6809M  6917M  6924   6983M  6986M  7037M  7044   7137M  7137\n              7171M  7172M  7173   7174   7175   7208M  7209   7212M  7213   7216M  7217   7220M  7221   7289M  7290M  7291M  7292M\n              7293   7337   7436   7469M  7479M  7489M  7523M  7581M  7601M  7601   7611M  7645M  7694M  7695M  7695   7722M  7745\n              7747   7780M  7842M  7899M  7924   7935   7952   8217   8222M  8222   8225M 15756U\n     1(1)     4398   4399M  4399   4400M  4400   4401M  4401   4403   4407   4408   4410M  4411   4414   4430M  4448   4449   4452M\n              4453M  4471M  4471   4482M  4482   4493M  4493   4539M  4541   4601   4604M  4620M  4622   4623   4624   4626   4638\n              4645M  4656M  4658   4659   4660   4662   4664   4681M  4683M  4683   4690M  4701M  4703   4704   4706   4718M  4720M\n              4720   4742   4759M  4786M  4787   4788   4789   4790   4796   4797   4835M  4836   4837   4838   4839   4845   4846\n              4862M  4884M  4888   4892   4896   4897   4933   4934M  4935M  4936   4947M  4948M  4948   4961M  4962M  4962   4996M\n              4997   4997   4998   4999   5000   5001   5002   5003   5004   5005   5006   5007   5008   5009   5010   5011   5012\n              5014   5035M  5036   5036   5037   5038   5039   5040   5041   5042   5043   5044   5045   5046   5047   5048   5049\n              5051   5053   5115M  5116   5116   5117   5118   5119   5121   5122   5123   5124   5125   5125   5126M  5126   5133M\n              5133   5134   5153M  5154   5154   5155   5156   5158   5159   5160   5161   5161   5162M  5162   5169M  5169   5193M\n              5194   5194   5195   5196   5197   5199   5200   5201   5202   5202   5203M  5203   5237   5249M  5250   5250   5251\n              5252   5254   5255   5256   5258   5259   5259   5260M  5260   5267M  5267   5281M  5282   5282   5283   5284   5286\n              5287   5288   5290   5291   5291   5292M  5292   5299M  5299   5317M  5318   5318   5319   5320   5322   5323   5324\n              5326   5327   5327   5328M  5328   5335M  5335   5349M  5350   5350   5351   5352   5354   5355   5356   5358   5359\n              5359   5360M  5360   5367M  5367   5387M  5388   5388   5389   5390   5392   5398   5408M  5409   5409   5410   5411\n              5413   5414   5415   5417   5418   5419   5419   5420M  5420   5427M  5427   5441M  5442   5442   5443   5444   5446\n              5447   5448   5450   5451   5452   5452   5453M  5453   5460M  5460   5485M  5486   5486   5487   5488   5489   5490\n              5491   5493   5494   5495   5497   5498   5499   5499   5500M  5500   5507M  5507   5521M  5522   5522   5523   5524\n              5525   5526   5527   5529   5530   5531   5533   5534   5535   5535   5536M  5536   5543M  5543   5563M  5577M  5578\n              5578   5579   5580   5582   5583   5584   5586   5587   5587   5588M  5588   5595M  5595   5634M  5635N  5692   5693\n              5701M  5702   5703N  5704   5714M  5715   5728M  5729   5730   5741M  5742   5752M  5753   5755M  5755   5756M  5757\n              5764M  5765   5767   5769   5787M  5788   5800M  5801   5802   5804   5806   5815M  5816   5817   5818M  5818   5824M\n              5835M  5837   5838M  5886M  5888M  5901   5904   5905M  5907   5917M  5918   5930M  5932   5942M  5943   5963   5964M\n              5965M  5965   5977M  6070M  6071   6076   6077   6086M  6087   6088   6090   6092   6106M  6112M  6126M  6127M  6127\n              6135M  6140M  6141M  6141   6142M  6142   6146   6159M  6159   6163   6165   6187M  6188   6189   6191   6193   6216M\n              6217M  6218   6240M  6268   6286M  6346M  6348M  6348   6413   6414   6426M  6427M  6533M  6534   6536M  6560M  6561M\n              6570M  6589M  6591M  6591   6622M  6623M  6623N  6624   6625M  6625N  6626   6627   6643M  6645M  6645   6654M  6654\n              6656   6657   6679M  6680   6681   6687   6736M  6743   6751M  6762M  6769   6779M  6810M  6826M  6828M  6828   6843\n              6862M  6863   6864   6866   6872   6918M  6925   6954M  6956   6958   6959   6961   6962   6983M  6986M  7038M  7045\n              7050M  7051   7052   7054   7081M  7205M  7209   7213   7217   7221   7223   7224   7250M  7252M  7252   7261M  7265\n              7278M  7279   7280   7282   7288   7302M  7303   7304   7306   7312   7322M  7323   7323   7324   7325   7326   7327\n              7353M  7355M  7355   7374M  7376M  7376   7385M  7389   7394M  7395   7396   7398   7407M  7408   7409   7411   7422M\n              7423   7423   7424   7425   7426   7452M  7454M  7454   7504M  7506M  7506   7515M  7519   7524M  7545M  7547M  7547\n              7575M  7577M  7577   7602M  7603M  7612M  7631M  7633M  7633   7646M  7676M  7677N  7679N  7680   7681   7692M  7693M\n              7693   7723M  7747   7779M  7814M  7830M  7832M  7832   7849N  7850   7851M  7851   7852   7859M  7861M  7861   7877M\n              7879M  7879   7901M  7913M  7915M  7915   7924   7926   7935   7939   7943   7944M  7944   7952   7954   7958M  7958\n              7962M  8096   8217   8223M  8225M\n     2(2)     4406   4411   4429M  4496M  4497U  4538M  4541   4593M  4601   4603M  4604   4606M  4623   4631M  4638   4644M  4645\n              4647M  4659   4669M  4689M  4690   4692M  4704   4722M  4730M  4731M  4732M  4736   4744M  4752M  4753M  4754M  4758\n              4766M  4776M  4796   4818M  4826M  4845   4855M  4863M  4864   4866M  4875M  4885   4907M  4908M  4913M  4914   4916M\n              4921M  4933   4934   4936   4938M  5075M  5092M  5095M  5095   5180   5239   5307   5376M  5471   5634M  5636N  5646M\n              5667M  5669M  5669   5695M  5696   5738M  5739U  5744D  5748M  5749U  5754D  5836M  5838M  5858M  5868M  5875M  5886M\n              5955M  5963   5988M  5993M  5995   6016N  6020   6037M  6044M  6045M  6045   6052   6057M  6059   6060M  6065   6070N\n              6097M  6097   6200M  6248M  6261M  6268   6307M  6315M  6517   6518M  6535M  6570   6609M  6620M  6621   6666M  6667M\n              6668   6669M  6670M  6671   6672   6830M  7082M  7095M  7095   7124M  7169M  7170   7171   7234M  7242U  7258M  7260\n              7266M  7342M  7342   7343M  7347   7357M  7365U  7367M  7382M  7384   7441M  7441   7442M  7446   7456M  7512M  7514\n1                                   General Purpose Register Cross Reference                                    Page  389\n- Register  References (M=modified, B=branch, U=USING, D=DROP, N=index)                      HLASM R6.0  2012/11/30 08.23\n0             7534M  7534   7535M  7539   7612   7653M  7668M  7676   7713M  7714   7723   7746M  7747   7762M  7763M  7763   7774M\n              7775   7787M  7799M  7808M  7817M  7834U  7835M  7836M  7843   7865M  7881U  7882M  7883M  7900   7919M  7924   7925M\n              7925   7927M  7929M  7930   7931M  7935   7937M  7943   7945M  7945   7948M  7952   7953M  7960M  7963   7964M  8217\n              8218M  8223   8225M\n     3(3)     4406   4411   4429M  4447M  4538M  4541   4593M  4601   4603M  4624   4631M  4638   4644M  4660   4669M  4722M  4730M\n              4741M  4742   4744M  4752M  4759   4764M  4766M  4776M  4797   4818M  4826M  4846   4855M  4866M  4875M  4886   4907M\n              4908M  4916M  4930M  4938M  4950M  4964M  5075M  5092M  5184M  5184   5196   5216M  5216   5220   5220   5234M  5396M\n              5476M  5490   5526   5556M  5563   5568M  5609M  5611U  5612N  5632   5646M  5647D  5667M  5673M  5673   5681   5691M\n              5829M  5837M  5838M  5858M  5868M  5875M  5955M  5963   5988M  5994M  5999M  6001   6005M  6005   6006   6014   6015M\n              6015   6016   6020M  6021M  6022   6026   6030   6030   6037M  6061M  6069M  6069   6077   6091N  6094   6101   6131M\n              6174M  6178   6192N  6200M  6248M  6257M  6261M  6268   6307M  6315M  6386M  6517M  6575M  6609M  6685M  6830M  6870M\n              7058M  7169M  7176M  7176   7180M  7208   7234M  7266M  7286M  7310M  7313   7333M  7357M  7367M  7402M  7415M  7432M\n              7456M  7494M  7494   7495M  7524   7529M  7617M  7651M  7653M  7669M  7677   7746M  7747   7762M  7769   7773M  7774M\n              7787M  7799M  7807M  7808M  7817M  7837M  7838M  7838   7842   7848M  7849   7865M  7884M  7886M  7886   7890M  7891\n              7892   7901   7906M  7919M  7924   7926M  7927M  7928M  7928   7929M  7930   7931M  7935   7938M  7947M  7948M  7952\n              7964M  8096   8176   8217   8225M\n     4(4)     4406   4411   4429M  4447M  4538M  4541   4593M  4601   4631M  4638   4669M  4722M  4741M  4744M  4764M  4766M  4776M\n              4787   4818M  4826M  4836   4855M  4866M  4875M  4887   4907M  4908M  4916M  4930M  4938M  5075M  5092M  5098M  5098\n              5101   5103M  5104M  5105   5182M  5182   5186   5218M  5218   5221   5221   5225M  5229   5234M  5396M  5558M  5562\n              5568M  5608M  5612M  5612   5613U  5646M  5647D  5667M  5676M  5676   5682   5691M  5700M  5701   5705   5714   5728\n              5829M  5858M  5868M  5875M  5955M  5963   5988M  6037M  6062M  6099M  6102M  6103   6131M  6173M  6197M  6200M  6208U\n              6209M  6210N  6218   6230   6240   6248M  6249D  6255U  6256M  6261M  6262D  6268   6307M  6375M  6386M  6414M  6426\n              6428   6518   6535   6536M  6560   6562   6575M  6609M  6685M  6830M  6870M  7058M  7169M  7182M  7182   7186M  7211\n              7234M  7243U  7267M  7268   7268   7286M  7310M  7314   7315M  7327   7333M  7357M  7358D  7366U  7368M  7402M  7415M\n              7426   7432M  7456M  7457D  7529M  7595M  7602   7604   7617M  7651M  7653M  7661U  7683M  7683   7684M  7701M  7701\n              7702M  7746M  7747   7787M  7788D  7799M  7802   7805M  7808M  7817M  7837M  7848M  7852   7865M  7891M  7899   7906M\n              7919M  7924   7931M  7935   7948M  7952   7964M  8217   8225M\n     5(5)     4406   4411   4429M  4538M  4541   4593M  4601   4631M  4638   4669M  4722M  4744M  4766M  4776M  4818M  4855M  4866M\n              4875M  4889   4907M  4908M  4916M  4938M  5075M  5093M  5377M  5377   5380   5381   5622M  5625M  5633   5635   5646M\n              5663U  5667M  5679M  5679   5698M  5703   5858M  5868M  5875M  5955M  5963   5988M  6037M  6063M  6094   6095M  6095\n              6105M  6113   6172M  6174   6195M  6195   6200M  6209M  6217   6230   6239   6248M  6256M  6261M  6268   6307M  6534M\n              6536M  6609M  6830M  7169M  7188M  7188   7192M  7214   7234M  7270M  7271U  7272M  7273U  7294M  7295U  7296M  7297U\n              7357M  7358D  7456M  7653M  7662U  7688M  7703M  7703   7704M  7726M  7746M  7747   7749M  7749   7779   7782M  7782\n              7787M  7789D  7806M  7808M  7817M  7853M  7863   7865M  7907M  7917   7919M  7924   7931M  7935   7948M  7952   7964M\n              8217   8225M\n     6(6)     4406   4411   4429M  4538M  4541   4593M  4601   4631M  4638   4669M  4722M  4744M  4766M  4818M  4855M  4866M  4907M\n              4908M  4916M  4938M  5075M  5631M  5632M  5633M  5636   5646M  5662U  5693M  5698   5700   5715   5730   5816   5858M\n              5868M  5875M  5955M  5963   5988M  6037M  6200M  6210M  6211M  6211   6215M  6218M  6222M  6222   6226M  6248M  6261M\n              6268   6307M  6609M  6830M  6928M  6986M  7021   7169M  7194   7234M  7357M  7456M  7653M  7746M  7747   7787M  7817M\n              7865M  7919M  7924   7931M  7935   7948M  7952   7964M  8101   8217   8225M\n     7(7)     4395U  4406   4411   4414M  4415M  4415   4416M  4416   4429M  4433   4448M  4455   4457   4459D  4534   4538M  4541\n              4542U  4543   4545   4548D  4593M  4601   4631M  4638   4669M  4722M  4744M  4766M  4818M  4855M  4866M  4907M  4908M\n              4916M  4938M  5075M  5646M  5858M  5868M  5875M  5955M  5963   5988M  6037M  6200M  6248M  6261M  6268   6307M  6609M\n              6830M  6928M  6986M  7021   7139M  7142   7234M  7357M  7456M  7646   7653M  7746M  7747   7787M  7817M  7865M  7919M\n              7924   7931M  7935   7948M  7952   7964M  8217   8225M\n     8(8)     4406   4411   4421M  4421   4422M  4424M  4424   4429M  4538M  4541   4593M  4601   4631M  4638   4669M  4722M  4744M\n              4766M  4818M  4855M  4866M  4907M  4908M  4916M  4938M  5075M  5646M  5858M  5868M  5875M  5955M  5963   5988M  6037M\n              6200M  6248M  6261M  6268   6307M  6609M  6659M  6660U  6673   6830M  6843M  6844U  7234M  7357M  7456M  7653M  7746M\n              7747   7787M  7817M  7865M  7919M  7924   7931M  7935   7948M  7952   7964M  8217   8225M\n     9(9)     4406   4411   4429M  4538M  4541   4593M  4601   4631M  4638   4669M  4722M  4744M  4766M  4818M  4855M  4866M  4907M\n              4908M  4916M  4938M  5075M  5646M  5858M  5868M  5875M  5955M  5963   5988M  6037M  6200M  6248M  6261M  6268   6307M\n              6609M  6657M  6658U  6659   6751   6802M  6810   6830M  6842M  7155B  7234M  7357M  7456M  7653M  7746M  7747   7787M\n              7817M  7865M  7919M  7924   7931M  7935   7948M  7952   7964M  8217   8225M\n    10(A)     4406   4411   4429M  4538M  4541   4593M  4601   4631M  4638   4669M  4722M  4744M  4766M  4818M  4855M  4866M  4907M\n              4908M  4916M  4938M  5075M  5646M  5858M  5868M  5875M  5955M  5963   5988M  6037M  6200M  6248M  6261M  6268   6307M\n1                                   General Purpose Register Cross Reference                                    Page  390\n- Register  References (M=modified, B=branch, U=USING, D=DROP, N=index)                      HLASM R6.0  2012/11/30 08.23\n0             6609M  6830M  7136M  7138M  7234M  7357M  7456M  7653M  7746M  7747   7787M  7817M  7865M  7919M  7924   7931M  7935\n              7948M  7952   7964M  8217   8225M\n    11(B)     4406   4411   4412M  4413U  4429M  4538M  4541   4593M  4601   4631M  4638   4669M  4722M  4744M  4766M  4818M  4855M\n              4866M  4907M  4908M  4916M  4938M  5075M  5646M  5858M  5868M  5875M  5955M  5963   5988M  6037M  6200M  6248M  6261M\n              6268   6307M  6609M  6734   6740M  6760   6766M  6830M  6841M  6916   6922M  7036   7042M  7141M  7142M  7147M  7234M\n              7357M  7456M  7653M  7746M  7747   7787M  7817M  7865M  7919M  7924   7931M  7935   7948M  7952   7964M  8217   8225M\n              8890B  8891B\n    12(C)     4406   4411   4429M  4456   4538M  4541   4544   4593M  4601   4631M  4638   4669M  4722M  4744M  4766M  4818M  4855M\n              4866M  4907M  4908M  4916M  4938M  5075M  5646M  5858M  5868M  5875M  5955M  5963   5988M  6037M  6200M  6248M  6261M\n              6268   6307M  6609M  6735   6742M  6761   6768M  6830M  6840U  6845M  6917   6924M  6929M  6930D  6959   7037   7044M\n              7140M  7234M  7357M  7456M  7653M  7746M  7747   7787M  7817M  7865M  7919M  7924   7931M  7935   7948M  7952   7964M\n              8217   8225M\n    13(D)     4405   4406   4408   4411   4428   4429   4433M  4455   4457   4458M  4460U  4536M  4536   4537   4538   4540D  4541\n              4543   4545   4546M  4549U  4593M  4594U  4601   4631M  4638   4669M  4722M  4744M  4766M  4818M  4855M  4866M  4907M\n              4908M  4916M  4938M  5075M  5646M  5858M  5868M  5875M  5955M  5963   5988M  6037M  6200M  6248M  6261M  6268   6307M\n              6609M  6736   6738M  6739B  6741   6743M  6762   6764M  6765B  6767   6769M  6830M  6846M  6918   6920M  6921B  6923\n              6925M  7038   7040M  7041B  7043   7045M  7143M  7234M  7357M  7456M  7653M  7746M  7747   7787M  7817M  7865M  7919M\n              7924   7931M  7935   7948M  7952   7964M  8214D  8217   8225\n    14(E)     4405   4407M  4409B  4411   4423M  4428M  4430B  4444M  4445M  4445N  4446M  4446N  4447   4447M  4453M  4498M  4499U\n              4504M  4506M  4507D  4508U  4517M  4518M  4518   4532D  4537M  4539B  4541   4541   4593M  4601   4601   4605M  4627M\n              4631M  4638   4638   4646M  4665M  4669M  4691M  4707M  4722M  4738M  4739M  4739N  4740M  4740N  4741   4741M  4744M\n              4761M  4762M  4762N  4763M  4763N  4764   4764M  4766M  4790M  4791   4793M  4793N  4794   4818M  4839M  4840   4842M\n              4842N  4843   4855M  4866M  4885M  4888   4889M  4892   4893M  4896   4902M  4907M  4908M  4916M  4926M  4927M  4927N\n              4928M  4928N  4930   4930M  4938M  4951M  4965M  5013M  5014   5050M  5051   5052M  5053   5075M  5120M  5121   5132M\n              5157M  5158   5168M  5198M  5199   5209M  5231M  5232M  5232N  5233M  5233N  5234   5234M  5253M  5254   5257M  5258\n              5266M  5285M  5286   5289M  5290   5298M  5321M  5322   5325M  5326   5334M  5353M  5354   5357M  5358   5366M  5391M\n              5392   5393M  5394M  5394N  5395M  5395N  5396   5396M  5397M  5398   5412M  5413   5416M  5417   5426M  5445M  5446\n              5449M  5450   5459M  5492M  5493   5496M  5497   5506M  5528M  5529   5532M  5533   5542M  5565M  5566M  5566N  5567M\n              5567N  5568   5568M  5581M  5582   5585M  5586   5594M  5646M  5688M  5689M  5689N  5690M  5690N  5691   5691M  5826M\n              5827M  5827N  5828M  5828N  5829   5829M  5858M  5868M  5875M  5955M  5963   5963   5972M  5988M  6037M  6089M  6090\n              6091M  6092   6107M  6128M  6129M  6129   6130M  6130   6131   6131M  6139M  6152M  6190M  6191   6192M  6193   6200M\n              6248M  6261M  6268   6268   6307M  6383M  6384M  6384N  6385M  6385N  6386   6386M  6429M  6563M  6572M  6573M  6573N\n              6574M  6574N  6575   6575M  6609M  6682M  6683M  6683N  6684M  6684N  6685   6685M  6686M  6687   6737M  6738N  6739M\n              6763M  6764N  6765M  6830M  6842   6865M  6866   6867M  6868M  6868N  6869M  6869N  6870   6870M  6871M  6872   6919M\n              6920N  6921M  6965M  7039M  7040N  7041M  7053M  7054   7055M  7056M  7056N  7057M  7057N  7058   7058M  7146M  7160B\n              7206M  7209   7210M  7213   7214M  7217   7218M  7221   7222M  7223   7229M  7234M  7281M  7282   7283M  7284M  7284N\n              7285M  7285N  7286   7286M  7287M  7288   7305M  7306   7307M  7308M  7308N  7309M  7309N  7310   7310M  7311M  7312\n              7328M  7329M  7329N  7330M  7330N  7332M  7333   7333M  7357M  7397M  7398   7399M  7400M  7400N  7401M  7401N  7402\n              7402M  7410M  7411   7412M  7413M  7413N  7414M  7414N  7415   7415M  7427M  7428M  7428N  7429M  7429N  7431M  7432\n              7432M  7456M  7526M  7527M  7527N  7528M  7528N  7529   7529M  7605M  7614M  7615M  7615N  7616M  7616N  7617   7617M\n              7648M  7649M  7649N  7650M  7650N  7651   7651M  7653M  7678M  7678   7679   7689M  7731M  7746M  7747   7747   7767M\n              7774M  7787M  7801M  7802M  7803   7817M  7845M  7846M  7846N  7847M  7847N  7848   7848M  7865M  7903M  7904M  7904N\n              7905M  7905N  7906   7906M  7919M  7924   7924   7931M  7935   7935   7948M  7952   7952   7964M  8217   8225M  8226B\n    15(F)     4411   4443M  4450   4453M  4466M  4470   4477M  4481   4488M  4492   4525M  4526M  4526   4530U  4532D  4534M  4541\n              4553M  4554M  4555M  4556B  4601   4611M  4627B  4630   4638   4643M  4665B  4668   4686M  4707B  4710   4737M  4743\n              4760M  4765   4799M  4799   4803M  4803   4804M  4808M  4808   4812M  4816M  4817   4848M  4848   4852M  4852   4853M\n              4854   4865   4886M  4888   4890M  4892   4894M  4896   4899M  4901M  4901N  4902B  4903M  4904   4905M  4906   4915M\n              4915   4931M  4931   4937M  4937   4952M  4952   4954   4956M  4957   4958M  4959   4966M  4966   4968   4970M  4971\n              4972M  4973   5067   5069M  5069   5094M  5094   5127M  5128M  5128N  5129M  5129N  5130M  5130N  5132B  5135   5139M\n              5139   5163M  5164M  5164N  5165M  5165N  5166M  5166N  5168B  5170   5174M  5174   5204M  5205M  5205N  5206M  5206N\n              5207M  5207N  5209B  5230M  5235M  5235   5261M  5262M  5262N  5263M  5263N  5264M  5264N  5266B  5268   5293M  5294M\n              5294N  5295M  5295N  5296M  5296N  5298B  5300   5329M  5330M  5330N  5331M  5331N  5332M  5332N  5334B  5336   5361M\n              5362M  5362N  5363M  5363N  5364M  5364N  5366B  5368   5421M  5422M  5422N  5423M  5423N  5424M  5424N  5426B  5428\n              5454M  5455M  5455N  5456M  5456N  5457M  5457N  5459B  5461   5468   5470M  5470   5501M  5502M  5502N  5503M  5503N\n              5504M  5504N  5506B  5508   5537M  5538M  5538N  5539M  5539N  5540M  5540N  5542B  5544   5550   5564M  5589M  5590M\n1                                   General Purpose Register Cross Reference                                    Page  391\n- Register  References (M=modified, B=branch, U=USING, D=DROP, N=index)                      HLASM R6.0  2012/11/30 08.23\n0             5590N  5591M  5591N  5592M  5592N  5594B  5596   5601   5603M  5604   5640M  5642M  5642   5644   5687M  5717M  5717\n              5766M  5767   5768M  5769   5771M  5771   5773   5803M  5804   5805M  5806   5825M  5831M  5833M  5833   5851M  5853M\n              5855M  5855   5857   5887M  5954   5963   5978M  5978   5982M  5982   5986M  5987   6031M  6031   6035M  6036   6113M\n              6138M  6140   6150M  6150   6164M  6164   6165M  6169M  6170   6247M  6259M  6259   6260M  6268   6281M  6290   6299M\n              6338M  6382M  6398M  6398   6428M  6442M  6442   6494M  6494   6562M  6571M  6593M  6593   6653M  6699M  6699   6734M\n              6740   6741M  6752M  6753B  6760M  6766   6767M  6811M  6884M  6884   6916M  6922   6923M  6927M  6955M  6956   6957M\n              6958   6960M  6960   6961   6962   6963M  6964M  6964   6965B  6977   7016   7020   7036M  7042   7043M  7070M  7070\n              7083M  7124   7136   7144M  7145M  7145   7146B  7207M  7209   7211M  7213   7215M  7217   7219M  7221   7226M  7228M\n              7228N  7229B  7230M  7231   7232M  7233   7331M  7332   7337   7430M  7431   7436   7525M  7604M  7613M  7647M  7652M\n              7652   7735M  7735   7739M  7743M  7745   7747   7748M  7748   7753M  7768M  7769   7773   7774M  7786M  7786   7800M\n              7800   7802M  7804   7816M  7816   7844M  7853   7863M  7864   7885M  7885   7902M  7907   7917M  7918   7924   7935\n              7952   7961M  7963M  8215M  8216U  8217   8225M  8227D  9354M  9354\n1                                  Diagnostic Cross Reference and Assembler Summary                             Page  392\n-                                                                                            HLASM R6.0  2012/11/30 08.23\n0Statements Flagged\n0    52(L1:$$SYSTEM,51), 53(L1:$$SYSTEM,52), 54(L1:$$SYSTEM,53), 55(L1:$$SYSTEM,54), 56(L1:$$SYSTEM,55),\n     57(L1:$$SYSTEM,56), 58(L1:$$SYSTEM,57), 59(L1:$$SYSTEM,58), 60(L1:$$SYSTEM,59), 61(L1:$$SYSTEM,60),\n     62(L1:$$SYSTEM,61), 63(L1:$$SYSTEM,62), 64(L1:$$SYSTEM,63), 65(L1:$$SYSTEM,64), 66(L1:$$SYSTEM,65),\n     67(L1:$$SYSTEM,66), 68(L1:$$SYSTEM,67), 69(L1:$$SYSTEM,68), 6622(L1:$$ASMIF,1685), 7144(L1:$$ASMIF,1835),\n     7259(L1:$$SETKEY,25), 7383(L1:$$SETKEY,25), 7513(L1:$$SETKEY,25)\n\n      23 Statements Flagged in this Assembly        4 was Highest Severity Code\n0HIGH LEVEL ASSEMBLER, 5696-234, RELEASE 6.0, PTF UK75466\n0SYSTEM: z/OS 01.13.00              JOBNAME: COMPALL     STEPNAME: ASMIF      PROCSTEP: ASMA90\n0Data Sets Allocated for this Assembly\n  Con DDname   Data Set Name                                Volume  Member\n   P1 SYSIN    ESA.PRJ.CBTDSSN.ASM                          USER01  ASMIF\n   L1 SYSLIB   ESA.PRJ.CBTDSSN.ASM                          USER01\n   L2          SYS1.MACLIB                                  Z1DT11\n   L3          SYS1.MODGEN                                  Z1DT12\n   L4          CEE.SCEEMAC                                  Z1DT12\n   L5          ASM.AASMMAC2                                 Z1DSM1\n   L6          ASM.AASMMAC1                                 Z1DSM1\n   L7          TCPIP.SEZACMAC                               Z1DT12\n   L8          TCPIP.SEZANMAC                               Z1DT12\n      SYSADATA ESA.PRJ.CBTDSSN.ADATA                        USER05  ASMIF\n      SYSLIN   ESA.PRJ.CBTDSSN.OBJECT                       USER07  ASMIF\n      SYSPRINT ESA.PRJ.CBTDSSN.COMPLIST                     USER04  ASMIF\n      SYSTERM  ESA.COMPALL.JOB01181.D0000103.?\n\n  917204K allocated to Buffer Pool       Storage required   25572K\n       3 Primary Input Records Read       170320 Library Records Read                  0 Work File Reads\n       0 ASMAOPT Records Read              22296 Primary Print Records Written         0 Work File Writes\n     119 Object Records Written           116354 ADATA Records Written\n0Assembly Start Time: 08.23.50 Stop Time: 08.24.02 Processor Time: 00.00.00.9586\n Return Code 004\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CASMIF": {"ttr": 2731, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(CASMIF)'                      30.11.12 08:25:57\n0                                      * * * * *   P R O L O G   * * * * *\n    Compiler options. . . . . . . :AGGRCOPY(NOOVERLAP)             ANSIALIAS       ARCH(7)         ARGPARSE        NOASCII\n                                  :NOATTRIBUTE     ASSERT(RESTRICT)                BITFIELD(UNSIGNED)              CHARS(UNSIGNED)\n                                  :NOCOMPACT       NOCOMPRESS      CVFT            NODFP           DIGRAPH         DLL(CALLBACKANY)\n                                  :ENUMSIZE(SMALL) NOEVENTS        EXECOPS         EXH             NOEXPMAC        NOEXPORTALL\n                                  :NOFASTTEMPINC   FLAG(I)         NOGOFF          GONUMBER        HALT(16)\n                                  :NOHGPR(NOPRESERVE)              NOHOT           NOIGNERRNO      ILP32           NOINITAUTO\n                                  :NOINLRPT        NOLIBANSI       NOLIST          LONGNAME        NOMAKEDEP       NOMARGINS\n                                  :MAXMEM(2097152) MEMORY          NAMEMANGLING(zOSV1R2)           NESTINC(255)    OBJECT\n                                  :OBJECTMODEL(COMPAT)             NOOE            NOOFFSET        OPTIMIZE(2)     PLIST(HOST)\n                                  :NOPORT          NOPPONLY        PREFETCH        REDIR           NOREPORT        ROSTRING\n                                  :ROCONST         RTTI(ALL)       NOSEQUENCE      NOSHOWINC       NOSHOWMACROS    SOURCE\n                                  :SKIPSRC(SHOW)   SPILL(3600)     START           NOSTATICINLINE  STRICT\n                                  :NOSTRICT_INDUCTION              TARGET(LE,CURRENT)              TEMPLATEDEPTH(300)\n                                  :NOTEMPLATEREGISTRY              TEMPLATERECOMPILE               TERMINAL        TEST(HOOK)\n                                  :TMPLPARSE(NO)   TUNE(7)         UNROLL(AUTO)    UTF             NOWARN0X        NOWARN64\n                                  :NOWSIZEOF       NOXREF\n                                  :NOCICS\n                                  :NOCONVLIT\n                                  :NOCSECT\n                                  :DEBUG(FORMAT(ISD),LEVEL(0),HOOK(NOLINE,NOBLOCK,NOPATH,CALL,FUNC),NOSYMBOL)\n                                  :DEFINE(__OS390__=1,_POSIX_SOURCE=1,_XOPEN_SOURCE_EXTENDED=1,MU_STANDALONE=1,ISIS_PF_MU=1)\n                                  :FLOAT(HEX,FOLD,NOMAF,AFP(NOVOLATILE)) ROUND(Z)\n                                  :NOHALTONMSG\n                                  :INFO(LAN)\n                                  :INLINE(AUTO,NOREPORT,100,1000)\n                                  :NOIPA\n                                  :KEYWORD(bool,explicit,export,false,mutable,namespace,true,typename,using,restrict,__restrict__,\n                                   __restrict,_Pragma,__alignof__,__asm__,__attribute__,__const__,__extension__,__volatile__,\n                                   __inline__,__signed__,__typeof__,__I,_Complex,__complex__,__real__,__imag__)\n                                  :NOKEYWORD(char16_t,char32_t,decltype,static_assert,typeof)\n                                  :LANGLVL(ANONSTRUCT,ANONUNION,ANSIFOR,ANSISINIT,NOAUTOTYPEDEDUCTION,C99VLA,C99__FUNC__,\n                                   NOC99LONGLONG,NOC99PREPROCESSOR,NOCOMPATRVALUEBINDING,NODBCS,NODECLTYPE,NODELEGATINGCTORS,\n                                   DEPENDENTBASELOOKUP,NODOLLARINNAMES,EMPTYSTRUCT,NOEXTENDEDFRIEND,NOEXTENDEDINTEGERSAFE,\n                                   EXTERNTEMPLATE,ILLPTOM,IMPLICITINT,NOINLINENAMESPACE,LIBEXT,LONGLONG,NONEWEXCP,OFFSETNONPOD,\n                                   NOOLDDIGRAPH,OLDFRIEND,NOOLDMATH,NOOLDSTR,OLDTEMPACC,NOOLDTMPLALIGN,OLDTMPLSPEC,NOSTATIC_ASSERT,\n                                   NOTEMPSASLOCALS,NOTEXTAFTERENDIF,GNU_LABELVALUE,GNU_COMPUTEDGOTO,TRAILENUM,TYPEDEFCLASS,NOUCS,\n                                   VARARGMACROS,NOVARIADICTEMPLATES,GNU_INCLUDE_NEXT,ZEROEXTARRAY,NOC99COMPLEX,NOC99COMPLEXHEADER,\n                                   NOGNU_COMPLEX,GNU_SUFFIXIJ)\n                                  :LOCALE(DE_DE.IBM-273)\n                                  :NOLSEARCH\n                                  :OPTFILE(DD:OPTFILE)\n                                  :NORTCHECK\n                                  :SEARCH(//'CEE.SCEEH.+', //'CBC.SCLBH.+', CEE.SCEEH.+, CBC.SCLBH.+, DD:USERLIB)\n                                  :NOSERVICE\n                                  :NOSQL\n                                  :NOSUPPRESS\n                                  :TEMPINC(./tempinc)\n                                  :NOXPLINK(NOBACKCHAIN,NOCALLBACK,GUARD,OSCALL(UPSTACK),NOSTOREARGS)\n    Version Macros. . . . . . . . : __COMPILER_VER__=0x410D0000\n                                  : __LIBREL__=0x410D0000\n                                  : __TARGET_LIB__=0x410D0000\n    Source margins. . . . . . . . :\n      Varying length. . . . . . . : 1 - 32760\n      Fixed length. . . . . . . . : 1 - 32760\n    Sequence columns. . . . . . . :\n      Varying length. . . . . . . : none\n      Fixed length. . . . . . . . : none\n    Locale name . . . . . . . . . : DE_DE.IBM-273\n    Code set. . . . . . . . . . . : IBM-273\n    Listing name. . . . . . . . . : DD:SYSCPRT\n0                                 * * * * *   E N D   O F   P R O L O G   * * * * *\n-\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(CASMIF)'                      30.11.12 08:25:57\n-\n                                       * * * * *   S O U R C E   * * * * *\n0            1 |\n             2 | /*******************************************************************************\n             3 | * Copyright ISIS Papyrus Technologies Limited\n             4 | *-------------------------------------------------------------------------------\n             5 | * File:              $Source: /data/cvs/src/mvs/casmif.cpp,v $\n             6 | *-------------------------------------------------------------------------------\n             7 | * Description:\n             8 | *   ???\n             9 | *******************************************************************************/\n            10 |\n            11 | #include \"isisdef.h\"\n            12 | #include <stdlib.h>\n            13 | #include <string.h>\n            14 | #include <strings.h>\n            15 |\n            16 | #if  defined(OWN_STDIO) == 1\n            17 | #include \"stdio.hpp\"\n            18 | //#include \"crctable.hpp\"\n            19 | #include \"filesys.hpp\"\n            20 | #endif\n            21 |\n            22 | #include \"casmif.hpp\"\n            23 | #include \"mchain.hpp\"\n            24 | #include \"merror.hpp\"\n            25 | #include \"mvsbase.hpp\"\n            26 | #include \"mvstime.hpp\"\n            27 | #if defined(CICSAPPL) == 0 && defined(MU_STANDALONE) == 0  //szm20050810\n            28 | #include \"isismisc.hpp\"\n            29 | #endif\n            30 | #include \"misc.hpp\"\n            31 | #include \"msgmgr.hpp\"\n            32 | #ifndef OWN_STDIO\n            33 | #include <assert.h>\n            34 | #endif\n            35 |\n            36 | ISIS_EXT_ASM unsigned int ASMIF(void *);\n            37 | static pMvsInterface  _mvsInterface\u00c4\u00dc = \u00e40,0,0,0,0,0,0,0\u00fc;\n            38 | static pcsul          _tcb\u00c4\u00dc         = \u00e40,0,0,0,0,0,0,0\u00fc;\n            39 | //szm20081215 zIIP\n            40 | bool MvsInterface::zIIP = getenv(\"ISIS_ZIIP_SUPPORT\")?true:false;\n            41 | pcsul  MvsInterface::wlmEnclave = 0;\n            42 | //szm20081215 zIIP\n            43 |\n            44 | //ZA030610 always 8\n            45 | static int            MAX_TCB        = 8;\n            46 | static char CRITICAL_MAJOR\u00c4\u00dc = \"ASM__MVS\";\n            47 | static char CRITICAL_MINOR\u00c4\u00dc = \"ASM__MVS__CRITICAL\";\n            48 | static char MSG_MAJOR\u00c4\u00dc      = \"ASM__MSG\";\n            49 | static char MSG_MINOR\u00c4\u00dc      = \"OMSMSGMN\";\n            50 | static char ASM_MAJOR\u00c4\u00dc      = \"OMS     \";\n            51 | static char ASM_MSG\u00c4\u00dc        = \"ASM_MSG\";\n            52 | static char WAIT_MAJOR\u00c4\u00dc     = \"ASM_WAIT\";\n            53 | static char POST_MAJOR\u00c4\u00dc     = \"ASM_POST\";\n            54 | #ifndef sym_init\n            55 | #define sym_init -1\n            56 | #endif\n            57 |\n            58 | //20060418MessageTEXT * messagetext = NULL; //szm2041120\n            59 |\n            60 | static int _init_messagetext = initMessageText();\n            61 |\n            62 | int  GlobalTraceFlag = getenv(\"TRACE\") ? atoi(getenv(\"TRACE\")):0;\n            63 | int  GlobalCicsFlag  = 0;\n            64 | static char* MSGQ    = getenv(\"MSGQ\") ? getenv(\"MSGQ\"):\"SASO\";\n            65 | static int   MvsTimer_status = 0;\n            66 |\n            67 | static void btracef(const char * text)\n            68 |  \u00e4\n            69 |  printf(\" %s \u00d6n\",text);\n            70 |  \u00fc\n            71 |\n            72 |\n            73 | static int CompareAndSwap(pcsul &p1,pcsul p2,void *p3)\n            74 |  \u00e4\n            75 |  // if ( p1 == *p3 ) *p3 = p2\n            76 |  // else p1 = *p3\n            77 |  return 1;\n            78 |  \u00fc\n            79 |\n            80 | #if (MEM_SUPPORT)\n            81 | //\n            82 | //------------------------------------------------------------------------------\n            83 | //\n            84 |\n            85 | void * OwnRealloc(void *a, size_t size)\n            86 |  \u00e4\n            87 |  if ( size == 0 )\n            88 |   return NULL;\n            89 |  else if ( a == NULL )\n            90 |   return (OwnMalloc(size));\n            91 |  void * n = OwnMalloc(size);\n            92 |  if ( NOT n ) return NULL;\n            93 |  size_t oldsize =*((int *)a-2)-16;\n            94 |  assert(oldsize > 0);\n            95 |  if ( oldsize < size )\n            96 |   memcpy(n,a,oldsize);\n            97 |  else\n            98 |   memcpy(n,a,size);\n            99 |  OwnFree(a);\n           100 |  return n;\n           101 |  \u00fc\n           102 | #endif\n           103 | /*-----------------------------------------------------------------\n           104 | MvsInterface\n           105 | ------------------------------------------------------------------*/\n           106 |\n           107 | void MvsInterface::trace(char * t)\n           108 |  \u00e4\n           109 |  if ( GlobalTraceFlag && file )\n           110 |   fprintf(file,\"%s\u00d6n\",t);\n           111 |  \u00fc\n           112 |\n           113 | void MvsInterface::tracedump(char * t,void * bv,int  bl)\n           114 |  \u00e4\n           115 |  if ( GlobalTraceFlag )\n           116 |   \u00e4\n           117 |   if ( file )\n           118 |    fprintf(file,\"%s === %p\u00d6n\",t,bv);\n           119 |   char p\u00c4512\u00dc;\n           120 |   char * b = (char *)bv;\n           121 |   for(int o = 0;o<=bl;o+=16)\n           122 |    \u00e4\n           123 |    dump(p,o,b,bl);\n           124 |    fprintf(file,\"%s %s \u00d6n\",DatetoString(),p);\n           125 |    \u00fc\n           126 |   \u00fc\n           127 |  \u00fc\n           128 |\n           129 | void MvsInterface::extractOper(char * text)\n           130 |  \u00e4\n           131 |  mvsSTRING s(text), p1, p2, st;\n           132 |  s.parse(p1,\"=\",st,\" \",p2);\n           133 |  while ( st.lengthOf() )\n           134 |   \u00e4\n           135 |   char* c = strchr((char *)st,'=');\n           136 |   if ( c )\n           137 |    *c = 0;\n           138 |   else\n           139 |    c = \" 1\";\n           140 |   if ( strcmp(st,\"TRACE\") == 0)\n           141 |    GlobalTraceFlag = atoi(getenv(\"TRACE\"));\n           142 |   s = p1+p2;\n           143 |   s.parse(p1,\" =\",st,\" \",p2);\n           144 |   \u00fc\n           145 |  strcpy(text,s);\n           146 |  \u00fc\n           147 |\n           148 | /*-----------------------------------------------------------------\n           149 | MvsStcInterface\n           150 | ------------------------------------------------------------------*/\n           151 |\n           152 | char * function_name_table\u00c4\u00dc  = \u00e4\n           153 |  \"CLEANUP\",\n           154 |  \"GETTOKEN\",\n           155 |  \"CREATETOKEN\",\n           156 |  \"DELETETOKEN\",\n           157 |  \"ALLOCATEPAGES\",\n           158 |  \"FREEPAGES\",\n           159 |  \"ENQ\",\n           160 |  \"DEQ\",\n           161 |  \"SLEEP\",\n           162 |  \"GETECB\",\n           163 |  \"WAIT\",\n           164 |  \"POST\",\n           165 |  \"RESET\",\n           166 |  \"SELECT\",\n           167 |  \"CONNECTSHMEM\",\n           168 |  \"DISCONNECTSHMEM\",\n           169 |  \"OPER\",\n           170 |  \"WTO\",\n           171 |  \"MALLOC\",\n           172 |  \"FREE\",\n           173 |  \"SVC\",\n           174 |  \"ATTCHMVS\",\n           175 |  \"CLOCK\",\n           176 |  \"TIMEUSED\",    //szm0050301\n           177 |  \"TDUMP\",       //szm20050325\n           178 |  \"LOGGER\",\n           179 |  \"VTOC\",\n           180 |  \"SRB\",\n           181 |  \"WLM\",\n           182 |  \"OBTAIN\",\n           183 |  \"TESTAUTH\",\n           184 |  \"DIAGNOSE\",\n           185 |  \"VSMLIST\",\n           186 |  NULL\n           187 |  \u00fc;\n           188 |\n           189 |\n           190 | MvsInterface::MvsInterface()\n           191 |  \u00e4\n           192 |  srb = false;\n           193 |  jobname\u00c48\u00dc = programname\u00c48\u00dc = 0x00;\n           194 |  if ( GlobalTraceFlag && NOT GlobalCicsFlag )\n           195 |   \u00e4\n           196 |   file  = fopen(\"SYSPRINT\",\"w\");\n           197 |   \u00fc\n           198 |  else file = 0;\n           199 |  CASMIF(sym_init);\n           200 |  memcpy(jobname,pASM->asm_jobname,8);\n           201 |  memcpy(programname,pASM->asm_programname,8);\n           202 |  // TRACE(4,Msg(9503)<<\">MvsInterface\"<<jobname<<programname<<eol);\n           203 |  \u00fc\n           204 |\n           205 | MvsInterface::\u00dfMvsInterface()\n           206 |  \u00e4\n           207 |  if ( file ) fclose(file);\n           208 |  CASMIF(sym_cleanup);\n           209 |  pASM = 0;\n           210 |  TRACE(4,SMsg(9501)<<\"<MvsInterface\"<<eol);\n           211 |  \u00fc\n           212 |\n           213 | int MvsInterface::TCPCALL(int      function,\n           214 |              void *   p0,void *   p1,void *   p2,void * p3,\n           215 |              void *   p4,void *   p5,void *   p6,void * p7)\n           216 |  \u00e4\n           217 |  CASMIF(function,p0,p1,p2,p3,\n           218 |   p4,p5,p6,p7);\n           219 | #if 0\n           220 |  if ( rc == -1 )\n           221 |   \u00e4\n           222 |   CASMIF(sym_lasterror);\n           223 |   TRACE(1,Msg(9502)<<\">Socket errror\"<<int(rc)<<eol);\n           224 |   MsgEnq();\n           225 |   Msg(9511)<<function_name_table\u00c4function\u00dc\n           226 |   <<\" code:\"<<rc<<eol;\n           227 |   MsgDeq();\n           228 |   return -1;\n           229 |   \u00fc\n           230 | #endif\n           231 |  return rc;\n           232 |  \u00fc\n           233 |\n           234 | int MvsInterface::CASMIF(int      function,\n           235 |              void * p0,void * p1,void * p2,void *p3,\n           236 |              void * p4,void * p5,void * p6,void *p7)\n           237 |  \u00e4\n           238 |  if (function == sym_init)\n           239 |   \u00e4\n           240 |   pASM = (pasm)ASMIF(0);\n           241 |   assert(pASM);\n           242 |   pASM->asm_mvs = this;\n           243 |   \u00fc\n           244 |  else\n           245 |   \u00e4\n           246 |   pASM->asm_function_code = char(function);\n           247 |   pASM->asm_parms\u00c40\u00dc= p0;\n           248 |   pASM->asm_parms\u00c41\u00dc= p1;\n           249 |   pASM->asm_parms\u00c42\u00dc= p2;\n           250 |   pASM->asm_parms\u00c43\u00dc= p3;\n           251 |   pASM->asm_parms\u00c44\u00dc= p4;\n           252 |   pASM->asm_parms\u00c45\u00dc= p5;\n           253 |   pASM->asm_parms\u00c46\u00dc= p6;\n           254 |   pASM->asm_parms\u00c47\u00dc= p7;\n           255 |   ASMIF(pASM);\n           256 |   rc = int(pASM->asm_rc);\n           257 |   reason = int(pASM->asm_reason);\n           258 |   //szm20030616 no check for ENQ/DEQ\n           259 |   if ( function NEQ sym_sleep &&  function NEQ sym_wait && function NEQ sym_attachmvs\n           260 |    && function NEQ sym_svc &&  function NEQ sym_clock && function NEQ sym_logger && function NEQ sym\n           260 | _wlm\n           261 |    && function NEQ sym_srb   // no check for SRB\n           262 |    &&function NEQ sym_obtain)\n           263 |    check(rc,function,\" CASMIF \");\n           264 |   else\n           265 |    return (rc);\n           266 |   \u00fc\n           267 |  return (rc==0);\n           268 |  \u00fc\n           269 | int MvsInterface::check(int r,char *function,char * action)\n           270 |  \u00e4\n           271 |  char hex\u00c49\u00dc;\n           272 |  sprintf(hex,\"%8.8x\",reason);\n           273 |  if ( GlobalTraceFlag == 4 )\n           274 |   TRACE(4,SMsg(9505)<<\" Checking \"<<rc<<hex<<function<<action<<eol);\n           275 |  if ( r )\n           276 |   \u00e4\n           277 |   MsgEnq();\n           278 |   Msg(9510)<<function<<action<<r<<eol;\n           279 |   MsgDeq();\n           280 |   \u00fc\n           281 |  return r;\n           282 |  \u00fc\n           283 |\n           284 |\n           285 | int MvsInterface::check(int r,int function,char * action)\n           286 |  \u00e4\n           287 |\n           288 |  char hex\u00c49\u00dc;\n           289 |  sprintf(hex,\"%8.8x\",reason);\n           290 |  char hexrsn\u00c49\u00dc;\n           291 |  sprintf(hexrsn,\"%8.8x\",pASM->asm_bpx1_rsncode);\n           292 |  if ( GlobalTraceFlag == 4 )\n           293 |   TRACE(4,SMsg(9505)<<\" Checking \"<<int(rc)<<hex<<\n           294 |   function_name_table\u00c4function\u00dc<<action<<eol);\n           295 |  if ( r )\n           296 |   \u00e4\n           297 |   switch(function)\n           298 |    \u00e4\n           299 |    case sym_select:      if ( r < 0 )\n           300 |     \u00e4\n           301 |     MsgEnq();\n           302 |     Msg(9510)<<function_name_table\u00c4function\u00dc<<\n           303 |      hex<<hexrsn<<eol;\n           304 |     MsgDeq();\n           305 |     \u00fc\n           306 |               break;\n           307 |    case sym_enq:         if ( r == -1 ) break;\n           308 |    case sym_wait:        if ( r == -1 ) break;\n           309 |    case sym_gettoken:    if ( r == 4 ) break;\n           310 |    case sym_deletetoken: if ( r == 4 ) break;\n           311 |    case sym_disconnectshmem: if ( r == 4 ) break;\n           312 |    case sym_vtoc:        if ( r ==4 ) break;\n           313 |    default:\n           314 |     MsgEnq();\n           315 |     Msg(9510)<<function_name_table\u00c4function\u00dc<<\n           316 |      r<<hex<<eol;\n           317 |     MsgDeq();\n           318 |    \u00fc\n           319 |   \u00fc\n           320 |  return r;\n           321 |  \u00fc\n           322 |\n           323 |\n           324 | pcsul MvsInterface::GetTCB()\n           325 |  \u00e4\n           326 |  return (*(pcsul *)PSATOLD);\n           327 |  \u00fc\n           328 |\n           329 | pcsul MvsInterface::GetASCB()\n           330 |  \u00e4\n           331 |  return(*(pcsul *)PSAAOLD);\n           332 |  \u00fc\n           333 |\n           334 | int MvsInterface::CheckASCB(pcsul ascb)\n           335 |  \u00e4\n           336 |  return(NOT (memcmp(\"ASCB\",(char *)ascb,4)));\n           337 |  \u00fc\n           338 |\n           339 | pcsul MvsInterface::GetToken(char * n)\n           340 |  \u00e4\n           341 |  TRACE(4,SMsg(9502)<<\">GetToken\"<<n<<eol);\n           342 |  if ( n  &&  CASMIF(sym_gettoken,n,wt))\n           343 |   \u00e4\n           344 |   TRACEDUMP(4,SMsg(9501)<<\"<GetToken\"<<eol,(void *)wt,sizeof(*wt));\n           345 |   return ((pcsul)wt);\n           346 |   \u00fc\n           347 |  return ((pcsul)NULL);\n           348 |  \u00fc\n           349 |\n           350 | pcsul MvsInterface::CreateToken(char *n,pcsul * v)\n           351 |  \u00e4\n           352 |  TRACE(4,SMsg(9502)<<\">CreateToken\"<<n<<eol);\n           353 |  wt\u00c40\u00dc = v\u00c40\u00dc;\n           354 |  wt\u00c41\u00dc = v\u00c41\u00dc;\n           355 |  wt\u00c42\u00dc = v\u00c42\u00dc;\n           356 |  wt\u00c43\u00dc = v\u00c43\u00dc;\n           357 |  rc = 16;\n           358 |  if ( n )\n           359 |   \u00e4\n           360 |   CASMIF(sym_createtoken,n,wt);\n           361 |   if ( rc == 4 )\n           362 |    \u00e4\n           363 |    CASMIF(sym_deletetoken,n);\n           364 |    CASMIF(sym_createtoken,n,wt);\n           365 |    \u00fc\n           366 |   \u00fc\n           367 |  TRACEDUMP(4,SMsg(9501)<<\">CreateToken\"<<eol,(void *)wt,sizeof(*wt));\n           368 |  return (rc==0);\n           369 |  \u00fc\n           370 |\n           371 | void MvsInterface::DeleteToken(char *n)\n           372 |  \u00e4\n           373 |  TRACEDUMP(4,SMsg(9501)<<\">DeleteToken\"<<eol,(void *)n,strlen(n));\n           374 |  CASMIF(sym_deletetoken,n);\n           375 |  TRACE(4,SMsg(9501)<<\"<DeleteToken\"<<eol);\n           376 |  \u00fc\n           377 |\n           378 |\n           379 | int MvsInterface::WaitEcb(pcsul  ms,\n           380 |              void * pecb0,void * pecb1,void * pecb2,void * pecb3)\n           381 |  \u00e4\n           382 |  TRACEDUMP(4,SMsg(9503)<<\">WaitEcb\"<<rc<<ms<<eol,pecb0,20);\n           383 |  CASMIF(sym_wait,(void *)ms,pecb0,pecb1,pecb2,pecb3);\n           384 |  TRACE(4,SMsg(9502)<<\"<WaitEcb\"<<rc<<eol);\n           385 |  return rc;\n           386 |  \u00fc\n           387 |\n           388 | int MvsInterface::PostEcb(void * pecb,pcsul code)\n           389 |  \u00e4\n           390 |  TRACE(3,SMsg(9502)<<\">PostEcb\"<<code<<eol);\n           391 |  CASMIF(sym_post,pecb,(void *)code);\n           392 |  TRACEDUMP(3,SMsg(9502)<<\"<PostEcb\"<<rc<<eol,pecb,20);\n           393 |  return rc;\n           394 |  \u00fc\n           395 |\n           396 | int MvsInterface::Enq(char * n,int ms)\n           397 |  \u00e4\n           398 |  TRACE(4,SMsg(9503)<<\">Enq\"<<n<<ms<<eol);\n           399 |  CASMIF(sym_enq,ASM_MAJOR,n,(void *)strlen(n),(void *)ms);\n           400 |  TRACE(4,SMsg(9502)<<\"<Enq\"<<rc<<eol);\n           401 |  if ( rc == 0 ) return 1;\n           402 |  else if ( rc < 0 ) return 0;\n           403 |  else return -1;\n           404 |  \u00fc\n           405 |\n           406 | int MvsInterface::Deq(char * n)\n           407 |  \u00e4\n           408 |  TRACE(4,SMsg(9502)<<\">Deq\"<<n<<eol);\n           409 |  CASMIF(sym_deq,ASM_MAJOR,n,(void *)strlen(n));\n           410 |  TRACE(4,SMsg(9503)<<\"<Deq\"<<rc<<n<<eol);\n           411 |  return (rc==0);\n           412 |  \u00fc\n           413 |\n           414 |\n           415 | int MvsInterface::Svc(int n, void *p)\n           416 |  \u00e4\n           417 |  TRACE(4,SMsg(9502)<<\">Svc\"<<n<<eol);\n           418 |  CASMIF(sym_svc,(void *)n,(void *)p);\n           419 |  TRACE(4,SMsg(9503)<<\"<Svc\"<<rc<<n<<eol);\n           420 |  return (rc);\n           421 |  \u00fc\n           422 |\n           423 | int MvsInterface::AttachMvs(const char * module,const char * parms)\n           424 |  \u00e4\n           425 |  size_t l_module= strlen(module);\n           426 |  size_t l_parms = strlen(parms);\n           427 |  TRACE(4,SMsg(9503)<<\">AttachMvs\"<<module<<parms<<eol);\n           428 |  CASMIF(sym_attachmvs,(void *)&l_module,(void *)module,(void *)&l_parms,(void *)parms);\n           429 |  TRACE(4,SMsg(9503)<<\"<AttachMvs\"<<rc<<module<<eol);\n           430 |  return (rc);\n           431 |  \u00fc\n           432 |\n           433 | void MvsInterface::Clock(void * stck)\n           434 |  \u00e4\n           435 |  CASMIF(sym_clock,stck);\n           436 |  \u00fc\n           437 |\n           438 | //szm20050301\n           439 | void MvsInterface::Timeused(void * time) //szm20050301\n           440 |  \u00e4\n           441 |  CASMIF(sym_timeused,time);\n           442 |  \u00fc\n           443 |\n           444 | long long clock_mvs()\n           445 |  \u00e4\n           446 |  long long here;\n           447 |  mvs()->Timeused(&here);\n           448 |  return here;\n           449 |  \u00fc\n           450 | //szm20050301\n           451 | //szm20050325\n           452 | int MvsInterface::Tdump(const char * n,const char *d,int dd = 0)\n           453 |  \u00e4\n           454 |  return (CASMIF(sym_tdump,(void *)n,(void *)d,(void *)dd));\n           455 |  \u00fc\n           456 |\n           457 | int tdump(const char *n, const char *d,int dd)\n           458 |  \u00e4\n           459 |  return mvs()->Tdump(n,d,dd);\n           460 |  \u00fc\n           461 |\n           462 | //szm20071005 get back reason code\n           463 | int mvsReasonCode()\n           464 |  \u00e4\n           465 |  return mvs()->getReasonCode();\n           466 |  \u00fc\n           467 | //szm20071005 get back reason code\n           468 |\n           469 |\n           470 | //szm20050325\n           471 |\n           472 | //szm20051118 LOGGER\n           473 | //szm20080421\n           474 | int MvsInterface::LoggerOpen(const char * stream)\n           475 |  \u00e4\n           476 |  char zeros\u00c417\u00dc = \"\u00d60\u00d60\u00d60\u00d60\u00d60\u00d60\u00d60\u00d60\u00d60\u00d60\u00d60\u00d60\u00d60\u00d60\u00d60\u00d60\";\n           477 |  char token\u00c417\u00dc = \"                \";\n           478 |  memcpy(token,stream,(strlen(stream)<16?strlen(stream):16));\n           479 |  pcsul  p =NULL;\n           480 |\n           481 |  if (strcmp(stream,(const char *)(pASM->asm_streamname))==0)\n           482 |   \u00e4\n           483 |   if (memcmp(pASM->asm_streamtoken,zeros,16)==0)\n           484 |    \u00e4\n           485 |    if (p=GetToken(token))\n           486 |     memcpy(pASM->asm_streamtoken,(char *)p,16);\n           487 |    else\n           488 |     if (CASMIF(sym_logger,(void *)0,(void *)stream,(void *)strlen(stream))==0)\n           489 |      CreateToken(token,(pcsul *)(pASM->asm_streamtoken));\n           490 |     else\n           491 |      return 0;\n           492 |    \u00fc\n           493 |   return 1;\n           494 |   \u00fc\n           495 |\n           496 |  if (CASMIF(sym_logger,(void *)0,(void *)stream,(void *)strlen(stream))|=0);\n           497 |  return 0;\n           498 |\n           499 |  CreateToken(token,(pcsul *)(pASM->asm_streamtoken));\n           500 |  return 1;\n           501 |  \u00fc\n           502 | int MvsInterface::Logger(const char * stream,size_t l)\n           503 |  \u00e4\n           504 |  return (CASMIF(sym_logger,(void *)1,(void *)stream,(void *)(l?l:strlen(stream)))==0);\n           505 |  \u00fc\n           506 | //szm20060113\n           507 | int MvsInterface::BrowseLogger(const char * & addr,size_t *  & length,int direction,int all,char * d\n           507 | ate_time)\n           508 |  \u00e4\n           509 |   if (direction ==0) //szm20100717\n           510 |    direction = 2;\n           511 |  return (CASMIF(sym_logger,(void *)(direction),(void *)&addr,(void *)&length,(void *)all,(void *)dat\n           511 | e_time));\n           512 |  \u00fc\n           513 |\n           514 | //szm20080421\n           515 | int MvsInterface::LoggerClose()\n           516 |  \u00e4\n           517 |  //return (CASMIF(sym_logger,(void *)-1)); szm20080421\n           518 |  // never close the logger\n           519 |  return 1;\n           520 |  \u00fc\n           521 | //szm20051118 LOGGER\n           522 | //szm20051121 VTOC\n           523 | int MvsInterface::VtocOpen(const char * ddname,const char * mask,char *dscb)\n           524 |  \u00e4\n           525 |  char _mask\u00c446\u00dc;\n           526 |  char _ddname\u00c49\u00dc;\n           527 |  memcpy(_mask+1,mask,44);\n           528 |  _mask\u00c445\u00dc = 0;\n           529 |  if (strchr(_mask+1,' '))\n           530 |   *strchr(_mask+1,' ')= 0;\n           531 |  _mask\u00c40\u00dc = strlen(_mask+1);\n           532 |  memset(_ddname,' ',8);\n           533 |  _ddname\u00c48\u00dc = 0;\n           534 |  memcpy(_ddname,ddname,(strlen(ddname)<=8)?strlen(ddname):8);\n           535 |  CASMIF(sym_vtoc,(void *)0,(void *)_ddname,(void *)_mask,(void *)dscb);\n           536 |  return rc;\n           537 |  \u00fc\n           538 | int MvsInterface::Vtoc(char * dscb)\n           539 |  \u00e4\n           540 |  CASMIF(sym_vtoc,(void *)1,(void *)0,(void *)0,(void *)dscb);\n           541 |  return rc;\n           542 |  \u00fc\n           543 | int MvsInterface::VtocClose()\n           544 |  \u00e4\n           545 |  return (CASMIF(sym_vtoc,(void *)-1));\n           546 |  \u00fc\n           547 | //szm20051121 VTOC\n           548 |\n           549 | //szm20081119\n           550 | int MvsInterface::initEnclave()\n           551 |   \u00e4\n           552 |  \treturn wlmEnclave;\n           553 |   \u00fc\n           554 |\n           555 | int MvsInterface::Srb()\n           556 |  \u00e4\n           557 |  if (srb)\n           558 |   \u00e4\n           559 |  CASMIF(sym_srb);\n           560 |  srb = false;\n           561 |  //printf(\" exit from SRB:%p %p srbFlag:%d\u00d6n\",pASM,this,pASM->asm_srb_mode);\n           562 |   \u00fc\n           563 |  else\n           564 |   \u00e4\n           565 |   //printf(\" entry to SRB:%p %p srbFlag:%d\u00d6n\",pASM,this,pASM->asm_srb_mode);\n           566 |   srb = true;\n           567 |   CASMIF(sym_srb);\n           568 |   \u00fc\n           569 |  return rc;\n           570 |  \u00fc\n           571 |\n           572 |\n           573 | int MvsInterface::Wlm(const char * subsys,const char * subsysnm)\n           574 |  \u00e4\n           575 |  /*\n           576 |  if (CASMIF(sym_wlm,(void *)subsys,(void *)subsysnm)|=0)\n           577 |   \u00e4\n           578 |   printf(\" WLM function:%8.8s rc:%d(%8.8x) rsn:%d(%8.8x)\u00d6n\",\n           579 |    pASM->asm_wlm_macro,pASM->asm_wlm_retcode,pASM->asm_wlm_retcode,\n           580 |    pASM->asm_wlm_rsncode,pASM->asm_wlm_rsncode);\n           581 |   return 8;\n           582 |   \u00fc\n           583 |  */\n           584 |\n           585 |  return 0;\n           586 |  \u00fc\n           587 |\n           588 | int MvsInterface::Obtain(const char * dsn, const char * volser,char * dscb)\n           589 | \u00e4\n           590 |  return (CASMIF(sym_obtain,(void *)dsn,(void *)volser,(void *)dscb));\n           591 | \u00fc\n           592 |\n           593 | int MvsInterface::Testauth()\n           594 | \u00e4\n           595 |  return (CASMIF(sym_testauth));\n           596 | \u00fc\n           597 |\n           598 | int MvsInterface::Diagnose(int function,void * reply)\n           599 | \u00e4\n           600 |  return(CASMIF(sym_diagnose,(void *)function,reply));\n           601 | \u00fc\n           602 |\n           603 |\n           604 | int MvsInterface::Vsmlist(void * ascb,void * address, int length )\n           605 | \u00e4\n           606 |  return(CASMIF(sym_vsmlist,ascb,address,(void *)length));\n           607 | \u00fc\n           608 |\n           609 | void MvsInterface::Chap(pcsul t,int p)\n           610 |  \u00e4\n           611 |  TRACE(4,SMsg(9503)<<\">Chap\"<<t<<long(p)<<eol);\n           612 | #ifdef __SASC_\n           613 |  CHAP(p,&t);\n           614 | #endif\n           615 |  TRACE(4,SMsg(9501)<<\"<Chap\"<<eol);\n           616 |  \u00fc\n           617 |\n           618 | pcsul MvsInterface::Attach(char * pgm,char ** param,pcsul ecb)\n           619 |  \u00e4\n           620 |  TRACE(4,SMsg(9502)<<\">Attach\"<<pgm<<eol);\n           621 |  pcsul tcb = 0;\n           622 |  *(pcsul *)ecb = 0;\n           623 |  pcsul lparam\u00c416\u00dc;\n           624 |  int i;\n           625 |  for(i =0;i<16 && param\u00c4i\u00dc;i++)lparam\u00c4i\u00dc = (pcsul)(param\u00c4i\u00dc);\n           626 |  lparam\u00c4i\u00dc = lparam\u00c4i\u00dc ] 0x80000000;\n           627 |  check(rc,\"Attach\",\"ATTACH\");\n           628 |  TRACE(4,SMsg(9501)<<\"<Attach\"<<eol);\n           629 |  return tcb;\n           630 |  \u00fc\n           631 |\n           632 | void MvsInterface::Detach(pcsul tcb)\n           633 |  \u00e4\n           634 |  TRACE(4,SMsg(9502)<<\">Detach\"<<tcb<<eol);\n           635 |  check(rc,\"Deatch\",\"DETACH\");\n           636 |  TRACE(4,SMsg(9501)<<\"<Detach\"<<eol);\n           637 |  \u00fc\n           638 |\n           639 | void MvsInterface::Sleep(int ms)\n           640 |  \u00e4\n           641 |  TRACE(4,SMsg(9502)<<\">Sleep\"<<ms<<eol);\n           642 |  if (ms) CASMIF(sym_sleep,(void *)ms);\n           643 |  TRACE(4,SMsg(9501)<<\"<Sleep\"<<eol);\n           644 |  \u00fc\n           645 |\n           646 | int MvsInterface::Oper(char *to,const size_t length)\n           647 |  \u00e4\n           648 |  TRACE(4,SMsg(9501)<<\">Oper\"<<eol);\n           649 |  memset(to,0,length);\n           650 |  CASMIF(sym_oper,(void *)to,(void *)length);\n           651 |  if ( rc == 0 ) extractOper(to);\n           652 |  TRACE(4,SMsg(9503)<<\"<Oper\"<<to<<rc<<eol);\n           653 |  return rc;\n           654 |  \u00fc\n           655 |\n           656 | void MvsInterface::Wto(const char *text,const int desc)\n           657 |  \u00e4\n           658 |  if ( text == 0 ) return;\n           659 |  TRACE(4,SMsg(9502)<<\">Wto\"<<text<<eol);\n           660 |  char  t\u00c4128\u00dc;\n           661 |  memset(t,0,sizeof(t));\n           662 |  strncpy(t,text,sizeof(t)-1);\n           663 |  for(char * ct = t;*ct;ct++) if( *ct == '\u00d6n') *ct = ' ';\n           664 |  CASMIF(sym_wto,(void *)t,(void *)strlen(t),(void *)desc);\n           665 |  TRACE(4,SMsg(9501)<<\"<Wto\"<<eol);\n           666 |  \u00fc\n           667 |\n           668 | void * MvsInterface::Malloc(size_t size)\n           669 |  \u00e4\n           670 |  void * a = 0;\n           671 |  CASMIF(sym_malloc,(void *)size,(void *)&a);\n           672 |  check(rc,\"Malloc\",\"MALLOC\");\n           673 |  return a;\n           674 |  \u00fc\n           675 |\n           676 | void  MvsInterface::Free(void * a)\n           677 |  \u00e4\n           678 |  CASMIF(sym_free,(void *)a);\n           679 |  check(rc,\"Free\",\"FREE\");\n           680 |  return ;\n           681 |  \u00fc\n           682 |\n           683 |\n           684 | int MvsInterface::Select(pcsul numfds,\n           685 |              void *rfds,void *wfds,void *efds,void *time)\n           686 |  \u00e4\n           687 |  CASMIF(sym_select,(void *)numfds,rfds,wfds,efds,time);\n           688 |  TRACE(4,SMsg(9502)<<\"<Select\"<<rc<<eol);\n           689 |  return rc;\n           690 |  \u00fc\n           691 |\n           692 | /*-----------------------------------------------------------------\n           693 | COMMON functions\n           694 | ------------------------------------------------------------------*/\n           695 |\n           696 | int isCics()\u00e4 return GlobalCicsFlag;\u00fc\n           697 |\n           698 |\n           699 | MvsInterface * getTcbUser()\n           700 |  \u00e4\n           701 |  pcsul  p = * (pcsul  * )PSATOLD;\n           702 |  pasm pASM = ((pasm)*(pasm *)(p+TCBUSER));\n           703 |  if (pASM)\n           704 |   return((MvsInterface *)(pASM->asm_mvs));\n           705 |  else\n           706 |   return((MvsInterface * )NULL);\n           707 |  \u00fc\n           708 |\n           709 |\n           710 | MvsInterface * mvs()\n           711 |  \u00e4\n           712 |  int i = 0;\n           713 |  for(;i<MAX_TCB && _mvsInterface\u00c4i\u00dc;i++)\n           714 |   if (_tcb\u00c4i\u00dc == *(pcsul *)PSATOLD) break;\n           715 |  assert(i<MAX_TCB);\n           716 |  if (_mvsInterface\u00c4i\u00dc && _tcb\u00c4i\u00dc == *(pcsul *)PSATOLD)\n           717 |   return(_mvsInterface\u00c4i\u00dc);\n           718 |  _tcb\u00c4i\u00dc = *(pcsul *)PSATOLD;\n           719 |  return (_mvsInterface\u00c4i\u00dc = (MvsInterface*)new MvsInterface());\n           720 |  \u00fc\n           721 |\n           722 | int MsgEnq()\n           723 |  \u00e4\n           724 |  int rc = 0;\n           725 |  rc = ( ENQ(MSG_MAJOR,MSG_MINOR,E,8,STEP,NONE) == 0);\n           726 |  return rc;\n           727 |  \u00fc\n           728 |\n           729 | int MsgDeq()\n           730 |  \u00e4\n           731 |  int rc = 0;\n           732 |  rc = ( DEQ(MSG_MAJOR,MSG_MINOR,8,STEP,NONE) == 0);\n           733 |  return rc;\n           734 |  \u00fc\n           735 |\n           736 | //KV20030515\n           737 | SyncVar::SyncVar(pcsul w)\n           738 |  \u00e4\n           739 |  var  = 0;\n           740 |  wait = w;\n           741 |  ecb  = 0;\n           742 |  \u00fc\n           743 |\n           744 | SyncVar::SyncVar(const SyncVar & v)\n           745 |  \u00e4\n           746 |  var  = v.var;\n           747 |  wait = v.wait;\n           748 |  ecb = 0;\n           749 |  \u00fc\n           750 | SyncVar::\u00dfSyncVar()\n           751 |  \u00e4\n           752 |  if (ecb&WAITcode)\n           753 |   mvs()->PostEcb(&ecb,0);\n           754 |  \u00fc\n           755 | SyncVar& SyncVar::operator=(pcsul t)\n           756 |  \u00e4\n           757 |  // printf(\" %p TCB %s %d\u00d6n\",*(pcsul *)PSATOLD,\">operator\",t);\n           758 |  // btrace(&btracef);\n           759 |  for(;;)\n           760 |   \u00e4\n           761 |   // if ( p1 == *p3 ) *p3 = p2\n           762 |   // else p1 = *p3\n           763 |   pcsul x = var;\n           764 |   if (CompareAndSwap(x,t,&var)==0)\n           765 |    break;\n           766 |   \u00fc\n           767 |  mvs()->PostEcb(&ecb,t);\n           768 |  //printf(\" %p TCB %s %p\u00d6n\",*(pcsul *)PSATOLD,\"<operator\",var);\n           769 |  return(*this);\n           770 |  \u00fc\n           771 |\n           772 | SyncVar::operator int()\n           773 |  \u00e4\n           774 |  //printf(\" %p TCB %s %p\u00d6n\",*(pcsul *)PSATOLD,\"init()\",var);\n           775 |  return int(var);\n           776 |  \u00fc\n           777 |\n           778 | pcsul waitSyncVar(SyncVar &s)\n           779 |  \u00e4\n           780 |  //printf(\" %p TCB  %s %p\u00d6n\",*(pcsul *)PSATOLD,\">wait\",s.var);\n           781 |  //szm20040624 avoid dumplicate wait on ECB's (S301)\n           782 |  if (int(s.ecb)&0x80000000)\n           783 |   mvs()->Sleep(100);\n           784 |  else\n           785 |   if (mvs()->WaitEcb(s.wait,&s.ecb) <0)\n           786 |    return (-1);\n           787 |  // printf(\" %p TCB  %s %p\u00d6n\",*(pcsul *)PSATOLD,\"<wait\",s.var);\n           788 |  return(s.var);\n           789 |  \u00fc\n           790 | pcsul waitSyncVars(SyncVar &s1,SyncVar &s2)\n           791 |  \u00e4\n           792 |  //printf(\" %p TCB %s %p %p\u00d6n\",*(pcsul *)PSATOLD,\">waits\",s1.var, s2.var);\n           793 |  //szm20040624 avoid dumplicate wait on ECB's (S301)\n           794 |  if (int(s1.ecb)&0x80000000 ]] int(s2.ecb)&0x80000000)\n           795 |   mvs()->Sleep(100);\n           796 |  else\n           797 |   if\n           798 |    (mvs()->WaitEcb((s1.wait<s2.wait?s1.wait:s2.wait),&s1.ecb,&s2.ecb) < 0)\n           799 |    return (-1);\n           800 |  //printf(\" %p TCB %s %p %p\u00d6n\",*(pcsul *)PSATOLD,\"<waits\",s1.var, s2.var);\n           801 |  return(1);\n           802 |  \u00fc\n           803 |\n0                                   * * * * *   E N D   O F   S O U R C E   * * * * *\n-\n\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(CASMIF)'                      30.11.12 08:25:57\n0                                    * * * * *   I N C L U D E S   * * * * *\n     1  =  //'ESA.PRJ.CBTDSSN.HPP(ISISDEF)'\n     2  =  //'CEE.SCEEH.H(STDLIB)'\n     3  =  //'CEE.SCEEH.H(FEATURES)'\n     4  =  //'CEE.SCEEH.H(BUILTINS)'\n     5  =  //'CEE.SCEEH.H(STDDEF)'\n     6  =  //'CEE.SCEEH.H(STRING)'\n     7  =  //'CEE.SCEEH.H(STRINGS)'\n     8  =  //'CEE.SCEEH.SYS.H(TYPES)'\n     9  =  //'ESA.PRJ.CBTDSSN.HPP(CASMIF)'\n    10  =  //'ESA.PRJ.CBTDSSN.HPP(ASMIF)'\n    11  =  //'CEE.SCEEH.H(STDIO)'\n    12  =  //'ESA.PRJ.CBTDSSN.HPP(MCHAIN)'\n    13  =  //'ESA.PRJ.CBTDSSN.HPP(MVSBASE)'\n    14  =  //'ESA.PRJ.CBTDSSN.HPP(MERROR)'\n    15  =  //'ESA.PRJ.CBTDSSN.HPP(DSNAMEUT)'\n    16  =  //'CEE.SCEEH.H(ASSERT)'\n    17  =  //'ESA.PRJ.CBTDSSN.HPP(MVSTIME)'\n    18  =  //'CEE.SCEEH.H(TIME)'\n    19  =  //'ESA.PRJ.CBTDSSN.HPP(MISC)'\n    20  =  //'ESA.PRJ.CBTDSSN.HPP(MSGMGR)'\n    21  =  //'CEE.SCEEH.H(ASSERT)'\n-                                 * * * * *   E N D   O F   I N C L U D E S   * * * * *\n0\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(CASMIF)'                      30.11.12 08:25:57\n-                           * * * * *   M E S S A G E   S U M M A R Y   * * * * *\n0TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL\n                (U)       (S)         (E)        (W)          (I)\n     0           0         0           0          0            0\n0                    * * * * *   E N D   O F   M E S S A G E   S U M M A R Y   * * * * *\n0                        * * * * *   E N D   O F   C O M P I L A T I O N   * * * * *\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "COMPRESS": {"ttr": 2635, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "CRC32": {"ttr": 2639, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "DEFLATE": {"ttr": 2643, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "DSSCLAS": {"ttr": 2687, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(DSSCLAS)'                      30.11.12 08:25:24\n0                                      * * * * *   P R O L O G   * * * * *\n    Compiler options. . . . . . . :AGGRCOPY(NOOVERLAP)             ANSIALIAS       ARCH(7)         ARGPARSE        NOASCII\n                                  :NOATTRIBUTE     ASSERT(RESTRICT)                BITFIELD(UNSIGNED)              CHARS(UNSIGNED)\n                                  :NOCOMPACT       NOCOMPRESS      CVFT            NODFP           DIGRAPH         DLL(CALLBACKANY)\n                                  :ENUMSIZE(SMALL) NOEVENTS        EXECOPS         EXH             NOEXPMAC        NOEXPORTALL\n                                  :NOFASTTEMPINC   FLAG(I)         NOGOFF          GONUMBER        HALT(16)\n                                  :NOHGPR(NOPRESERVE)              NOHOT           NOIGNERRNO      ILP32           NOINITAUTO\n                                  :NOINLRPT        NOLIBANSI       NOLIST          LONGNAME        NOMAKEDEP       NOMARGINS\n                                  :MAXMEM(2097152) MEMORY          NAMEMANGLING(zOSV1R2)           NESTINC(255)    OBJECT\n                                  :OBJECTMODEL(COMPAT)             NOOE            NOOFFSET        OPTIMIZE(2)     PLIST(HOST)\n                                  :NOPORT          NOPPONLY        PREFETCH        REDIR           NOREPORT        ROSTRING\n                                  :ROCONST         RTTI(ALL)       NOSEQUENCE      NOSHOWINC       NOSHOWMACROS    SOURCE\n                                  :SKIPSRC(SHOW)   SPILL(3600)     START           NOSTATICINLINE  STRICT\n                                  :NOSTRICT_INDUCTION              TARGET(LE,CURRENT)              TEMPLATEDEPTH(300)\n                                  :NOTEMPLATEREGISTRY              TEMPLATERECOMPILE               TERMINAL        TEST(HOOK)\n                                  :TMPLPARSE(NO)   TUNE(7)         UNROLL(AUTO)    UTF             NOWARN0X        NOWARN64\n                                  :NOWSIZEOF       NOXREF\n                                  :NOCICS\n                                  :NOCONVLIT\n                                  :NOCSECT\n                                  :DEBUG(FORMAT(ISD),LEVEL(0),HOOK(NOLINE,NOBLOCK,NOPATH,CALL,FUNC),NOSYMBOL)\n                                  :DEFINE(__OS390__=1,_POSIX_SOURCE=1,_XOPEN_SOURCE_EXTENDED=1,MU_STANDALONE=1,ISIS_PF_MU=1)\n                                  :FLOAT(HEX,FOLD,NOMAF,AFP(NOVOLATILE)) ROUND(Z)\n                                  :NOHALTONMSG\n                                  :INFO(LAN)\n                                  :INLINE(AUTO,NOREPORT,100,1000)\n                                  :NOIPA\n                                  :KEYWORD(bool,explicit,export,false,mutable,namespace,true,typename,using,restrict,__restrict__,\n                                   __restrict,_Pragma,__alignof__,__asm__,__attribute__,__const__,__extension__,__volatile__,\n                                   __inline__,__signed__,__typeof__,__I,_Complex,__complex__,__real__,__imag__)\n                                  :NOKEYWORD(char16_t,char32_t,decltype,static_assert,typeof)\n                                  :LANGLVL(ANONSTRUCT,ANONUNION,ANSIFOR,ANSISINIT,NOAUTOTYPEDEDUCTION,C99VLA,C99__FUNC__,\n                                   NOC99LONGLONG,NOC99PREPROCESSOR,NOCOMPATRVALUEBINDING,NODBCS,NODECLTYPE,NODELEGATINGCTORS,\n                                   DEPENDENTBASELOOKUP,NODOLLARINNAMES,EMPTYSTRUCT,NOEXTENDEDFRIEND,NOEXTENDEDINTEGERSAFE,\n                                   EXTERNTEMPLATE,ILLPTOM,IMPLICITINT,NOINLINENAMESPACE,LIBEXT,LONGLONG,NONEWEXCP,OFFSETNONPOD,\n                                   NOOLDDIGRAPH,OLDFRIEND,NOOLDMATH,NOOLDSTR,OLDTEMPACC,NOOLDTMPLALIGN,OLDTMPLSPEC,NOSTATIC_ASSERT,\n                                   NOTEMPSASLOCALS,NOTEXTAFTERENDIF,GNU_LABELVALUE,GNU_COMPUTEDGOTO,TRAILENUM,TYPEDEFCLASS,NOUCS,\n                                   VARARGMACROS,NOVARIADICTEMPLATES,GNU_INCLUDE_NEXT,ZEROEXTARRAY,NOC99COMPLEX,NOC99COMPLEXHEADER,\n                                   NOGNU_COMPLEX,GNU_SUFFIXIJ)\n                                  :LOCALE(DE_DE.IBM-273)\n                                  :NOLSEARCH\n                                  :OPTFILE(DD:OPTFILE)\n                                  :NORTCHECK\n                                  :SEARCH(//'CEE.SCEEH.+', //'CBC.SCLBH.+', CEE.SCEEH.+, CBC.SCLBH.+, DD:USERLIB)\n                                  :NOSERVICE\n                                  :NOSQL\n                                  :NOSUPPRESS\n                                  :TEMPINC(./tempinc)\n                                  :NOXPLINK(NOBACKCHAIN,NOCALLBACK,GUARD,OSCALL(UPSTACK),NOSTOREARGS)\n    Version Macros. . . . . . . . : __COMPILER_VER__=0x410D0000\n                                  : __LIBREL__=0x410D0000\n                                  : __TARGET_LIB__=0x410D0000\n    Source margins. . . . . . . . :\n      Varying length. . . . . . . : 1 - 32760\n      Fixed length. . . . . . . . : 1 - 32760\n    Sequence columns. . . . . . . :\n      Varying length. . . . . . . : none\n      Fixed length. . . . . . . . : none\n    Locale name . . . . . . . . . : DE_DE.IBM-273\n    Code set. . . . . . . . . . . : IBM-273\n    Listing name. . . . . . . . . : DD:SYSCPRT\n0                                 * * * * *   E N D   O F   P R O L O G   * * * * *\n-\n15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(DSSCLAS)'                      30.11.12 08:25:24\n-\n                                       * * * * *   S O U R C E   * * * * *\n0            1 | #include \"isisdef.h\"\n             2 | #include <stdlib.h>\n             3 | #include <string.h>\n             4 | #include \"dssclas.hpp\"\n             5 | #include \"dssmain.hpp\"\n             6 | #include \"jobenv.hpp\"\n             7 |\n             8 |\n             9 | char \t\t\tDSS::ddnamelist\u00c448\u00dc;\n            10 | char \t\t\tDSS::pagenumber\u00c44\u00dc;\n            11 | address \tDSS::uim = NULL;\n            12 |\n            13 | DSSPARM * makeDSSPARM(size_t l,void * v)\n            14 | \u00e4\n            15 |  DSSPARM * rc = (DSSPARM *)malloc(l+2);\n            16 |  rc->length = short(l);\n            17 |  memcpy(rc->data,v,l);\n            18 |  return rc;\n            19 | \u00fc\n            20 |\n            21 |\n            22 | DSS::DSS(char * argv,DssJob * j)\n            23 | \u00e4\n            24 |         JOBENV::DEBUG(1,\"DSS construct\");\n            25 |         adrdssu = load(ADRDSSU);\n            26 |         dssparm\u00c40\u00dc = makeDSSPARM(strlen(argv),(address)argv);\n            27 |         memset(ddnamelist,0,sizeof(ddnamelist));\n            28 |         memcpy(ddnamelist+32,\"SYSIN   \",8);\n            29 |         memcpy(ddnamelist+40,\"SYSPRINT\",8);\n            30 |         dssparm\u00c41\u00dc = makeDSSPARM(sizeof(ddnamelist),(address)ddnamelist);\n            31 |         memcpy(pagenumber,\"0001\",4);\n            32 |         dssparm\u00c42\u00dc = makeDSSPARM(sizeof(pagenumber),(address)pagenumber);\n            33 |         uim        = (address)UIMASM;\n            34 | \t\t    uim        = address(0x80000000 +long(uim));\n            35 |         dssparm\u00c43\u00dc = makeDSSPARM(4,(address)&uim);\n            36 |         address pthis =(address) this;\n            37 |         dssparm\u00c44\u00dc = makeDSSPARM(4,(address)&pthis);\n            38 |         dssparm\u00c44\u00dc = (DSSPARM *)(0x80000000 +long(dssparm\u00c44\u00dc));\n            39 |         function   = invalid;\n            40 |         job        = j;\n            41 | \u00fc\n            42 |\n            43 | DSS::\u00dfDSS()\n            44 | \u00e4\n            45 |         JOBENV::DEBUG(1,\"DSS destruct\");\n            46 |         unload(ADRDSSU);\n            47 |         for(int i =0;i<5;i++)\n            48 |                 free(dssparm\u00c4i\u00dc);\n            49 |         exit(0);\n            50 | \u00fc\n            51 |\n            52 | int DSS::run(DssJob * j)\n            53 | \u00e4\n            54 |         JOBENV::DEBUG(1,\"DSS run\");\n            55 |         job = j;\n            56 |         return (call(adrdssu,dssparm));\n            57 | \u00fc\n            58 |\n            59 | adrdssu_address DSS::load(const char * name)\n            60 | \u00e4\n            61 | \t\t\t\tadrdssu_address rc = 0;\n            62 |         return rc;\n            63 | \u00fc\n            64 |\n            65 | void DSS::unload(const char * name)\n            66 | \u00e4\n            67 |\n            68 | \u00fc\n            69 |\n            70 | int DSS::call(address a,DSSPARM **p)\n            71 | \u00e4\n            72 | int rc = 0;\n            73 | \t\t\t\trc = UIMASM(dssparm\u00c40\u00dc,dssparm\u00c41\u00dc,dssparm\u00c42\u00dc,dssparm\u00c43\u00dc,dssparm\u00c44\u00dc);\n            74 |         return rc;\n            75 | \u00fc\n            76 |\n            77 |\n            78 | void DSS::exit(int rc)\n            79 | \u00e4\n            80 | \t\t\texit(rc);\n            81 | \u00fc\n            82 |\n0                                   * * * * *   E N D   O F   S O U R C E   * * * * *\n-\n\n15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(DSSCLAS)'                      30.11.12 08:25:24\n0                                    * * * * *   I N C L U D E S   * * * * *\n     1  =  //'ESA.PRJ.CBTDSSN.HPP(ISISDEF)'\n     2  =  //'CEE.SCEEH.H(STDLIB)'\n     3  =  //'CEE.SCEEH.H(FEATURES)'\n     4  =  //'CEE.SCEEH.H(BUILTINS)'\n     5  =  //'CEE.SCEEH.H(STDDEF)'\n     6  =  //'CEE.SCEEH.H(STRING)'\n     7  =  //'ESA.PRJ.CBTDSSN.HPP(DSSCLAS)'\n     8  =  //'ESA.PRJ.CBTDSSN.HPP(DSSMAIN)'\n     9  =  //'ESA.PRJ.CBTDSSN.HPP(MVSBASE)'\n    10  =  //'ESA.PRJ.CBTDSSN.HPP(MERROR)'\n    11  =  //'ESA.PRJ.CBTDSSN.HPP(DSNAMEUT)'\n    12  =  //'CEE.SCEEH.H(ASSERT)'\n    13  =  //'CEE.SCEEH.H(STDIO)'\n    14  =  //'CEE.SCEEH.SYS.H(TYPES)'\n    15  =  //'ESA.PRJ.CBTDSSN.HPP(JOBENV)'\n-                                 * * * * *   E N D   O F   I N C L U D E S   * * * * *\n0\n15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(DSSCLAS)'                      30.11.12 08:25:24\n-                           * * * * *   M E S S A G E   S U M M A R Y   * * * * *\n0TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL\n                (U)       (S)         (E)        (W)          (I)\n     0           0         0           0          0            0\n0                    * * * * *   E N D   O F   M E S S A G E   S U M M A R Y   * * * * *\n0                        * * * * *   E N D   O F   C O M P I L A T I O N   * * * * *\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSSFILE": {"ttr": 2691, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(DSSFILE)'                      30.11.12 08:25:26\n0                                      * * * * *   P R O L O G   * * * * *\n    Compiler options. . . . . . . :AGGRCOPY(NOOVERLAP)             ANSIALIAS       ARCH(7)         ARGPARSE        NOASCII\n                                  :NOATTRIBUTE     ASSERT(RESTRICT)                BITFIELD(UNSIGNED)              CHARS(UNSIGNED)\n                                  :NOCOMPACT       NOCOMPRESS      CVFT            NODFP           DIGRAPH         DLL(CALLBACKANY)\n                                  :ENUMSIZE(SMALL) NOEVENTS        EXECOPS         EXH             NOEXPMAC        NOEXPORTALL\n                                  :NOFASTTEMPINC   FLAG(I)         NOGOFF          GONUMBER        HALT(16)\n                                  :NOHGPR(NOPRESERVE)              NOHOT           NOIGNERRNO      ILP32           NOINITAUTO\n                                  :NOINLRPT        NOLIBANSI       NOLIST          LONGNAME        NOMAKEDEP       NOMARGINS\n                                  :MAXMEM(2097152) MEMORY          NAMEMANGLING(zOSV1R2)           NESTINC(255)    OBJECT\n                                  :OBJECTMODEL(COMPAT)             NOOE            NOOFFSET        OPTIMIZE(2)     PLIST(HOST)\n                                  :NOPORT          NOPPONLY        PREFETCH        REDIR           NOREPORT        ROSTRING\n                                  :ROCONST         RTTI(ALL)       NOSEQUENCE      NOSHOWINC       NOSHOWMACROS    SOURCE\n                                  :SKIPSRC(SHOW)   SPILL(3600)     START           NOSTATICINLINE  STRICT\n                                  :NOSTRICT_INDUCTION              TARGET(LE,CURRENT)              TEMPLATEDEPTH(300)\n                                  :NOTEMPLATEREGISTRY              TEMPLATERECOMPILE               TERMINAL        TEST(HOOK)\n                                  :TMPLPARSE(NO)   TUNE(7)         UNROLL(AUTO)    UTF             NOWARN0X        NOWARN64\n                                  :NOWSIZEOF       NOXREF\n                                  :NOCICS\n                                  :NOCONVLIT\n                                  :NOCSECT\n                                  :DEBUG(FORMAT(ISD),LEVEL(0),HOOK(NOLINE,NOBLOCK,NOPATH,CALL,FUNC),NOSYMBOL)\n                                  :DEFINE(__OS390__=1,_POSIX_SOURCE=1,_XOPEN_SOURCE_EXTENDED=1,MU_STANDALONE=1,ISIS_PF_MU=1)\n                                  :FLOAT(HEX,FOLD,NOMAF,AFP(NOVOLATILE)) ROUND(Z)\n                                  :NOHALTONMSG\n                                  :INFO(LAN)\n                                  :INLINE(AUTO,NOREPORT,100,1000)\n                                  :NOIPA\n                                  :KEYWORD(bool,explicit,export,false,mutable,namespace,true,typename,using,restrict,__restrict__,\n                                   __restrict,_Pragma,__alignof__,__asm__,__attribute__,__const__,__extension__,__volatile__,\n                                   __inline__,__signed__,__typeof__,__I,_Complex,__complex__,__real__,__imag__)\n                                  :NOKEYWORD(char16_t,char32_t,decltype,static_assert,typeof)\n                                  :LANGLVL(ANONSTRUCT,ANONUNION,ANSIFOR,ANSISINIT,NOAUTOTYPEDEDUCTION,C99VLA,C99__FUNC__,\n                                   NOC99LONGLONG,NOC99PREPROCESSOR,NOCOMPATRVALUEBINDING,NODBCS,NODECLTYPE,NODELEGATINGCTORS,\n                                   DEPENDENTBASELOOKUP,NODOLLARINNAMES,EMPTYSTRUCT,NOEXTENDEDFRIEND,NOEXTENDEDINTEGERSAFE,\n                                   EXTERNTEMPLATE,ILLPTOM,IMPLICITINT,NOINLINENAMESPACE,LIBEXT,LONGLONG,NONEWEXCP,OFFSETNONPOD,\n                                   NOOLDDIGRAPH,OLDFRIEND,NOOLDMATH,NOOLDSTR,OLDTEMPACC,NOOLDTMPLALIGN,OLDTMPLSPEC,NOSTATIC_ASSERT,\n                                   NOTEMPSASLOCALS,NOTEXTAFTERENDIF,GNU_LABELVALUE,GNU_COMPUTEDGOTO,TRAILENUM,TYPEDEFCLASS,NOUCS,\n                                   VARARGMACROS,NOVARIADICTEMPLATES,GNU_INCLUDE_NEXT,ZEROEXTARRAY,NOC99COMPLEX,NOC99COMPLEXHEADER,\n                                   NOGNU_COMPLEX,GNU_SUFFIXIJ)\n                                  :LOCALE(DE_DE.IBM-273)\n                                  :NOLSEARCH\n                                  :OPTFILE(DD:OPTFILE)\n                                  :NORTCHECK\n                                  :SEARCH(//'CEE.SCEEH.+', //'CBC.SCLBH.+', CEE.SCEEH.+, CBC.SCLBH.+, DD:USERLIB)\n                                  :NOSERVICE\n                                  :NOSQL\n                                  :NOSUPPRESS\n                                  :TEMPINC(./tempinc)\n                                  :NOXPLINK(NOBACKCHAIN,NOCALLBACK,GUARD,OSCALL(UPSTACK),NOSTOREARGS)\n    Version Macros. . . . . . . . : __COMPILER_VER__=0x410D0000\n                                  : __LIBREL__=0x410D0000\n                                  : __TARGET_LIB__=0x410D0000\n    Source margins. . . . . . . . :\n      Varying length. . . . . . . : 1 - 32760\n      Fixed length. . . . . . . . : 1 - 32760\n    Sequence columns. . . . . . . :\n      Varying length. . . . . . . : none\n      Fixed length. . . . . . . . : none\n    Locale name . . . . . . . . . : DE_DE.IBM-273\n    Code set. . . . . . . . . . . : IBM-273\n    Listing name. . . . . . . . . : DD:SYSCPRT\n0                                 * * * * *   E N D   O F   P R O L O G   * * * * *\n-\n15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(DSSFILE)'                      30.11.12 08:25:26\n-\n                                       * * * * *   S O U R C E   * * * * *\n0            1 | #include \"isisdef.h\"\n             2 | #include <stdio.h>\n             3 | #include <stdlib.h>\n             4 | #include <string.h>\n             5 | #include <errno.h>\n             6 | #include <stdio.h>\n             7 | #include <fcntl.h>\n             8 |\n             9 | #include <assert.h>\n            10 | #include <ctype.h>\n            11 | #include <sys/types.h>\n            12 | #include <sys/stat.h>\n            13 |\n            14 | #include <unistd.h>\n            15 | #ifndef O_BINARY\n            16 | #define O_BINARY 0\n            17 | #endif\n            18 | #include \"dssfile.hpp\"\n            19 | #include \"dssmain.hpp\"\n            20 | #include \"jobenv.hpp\"\n            21 | #include \"subtask.hpp\"\n            22 | #include \"msgmgr.hpp\"\n            23 | #include \"casmif.hpp\"\n            24 |\n            25 | int _edc_add_errno2 = setenv(\"_EDC_ADD_ERRNO2\",\"1\",1);\n            26 | static int compressMethod = (getenv(KEYWORD_COMPR)?\n            27 | \t\t\t\t\t\t\t\t\t\t\t\t\t\t atoi(getenv(KEYWORD_COMPR)):-1);\n            28 | static  size_t MAX_IOLENGTH  = (getenv(KEYWORD_MAXLENGTH))?atoi(getenv(KEYWORD_MAXLENGTH))*1024*1024\n            28 | :1024*1024*512;\n            29 |\n            30 | DSSFILE::DSSFILE(const char * n,DSSFILE_TYPE t,size_t max):\n            31 | mERROR(),\n            32 | fileName(n), type(t), buff_size(max)\n            33 | \t\u00e4\n            34 | \tfile    = NULL;\n            35 | \tcount = compressedCount = 0;\n            36 | \tseqNo = 0;\n            37 | \tbuff = (UCHAR *) malloc(max);\n            38 | \tif (buff == NULL)\n            39 | \t\tError(Msg(10000+1)<<short(max)<<eol,Abort);\n            40 | \tzStream = (z_streamp)malloc(sizeof(z_stream));\n            41 | \tmemset(zStream,0,sizeof(z_stream));\n            42 | \tfileName.strip();\n            43 | \tinit();\n            44 | \t\u00fc\n            45 |\n            46 | DSSFILE::\u00dfDSSFILE()\n            47 | \t\u00e4\n            48 | \tterm();\n            49 | \tif (zStream)\n            50 | \t\tfree(zStream);\n            51 | \tzStream = NULL;\n            52 | \tif (buff)\n            53 | \t\tfree(buff);\n            54 | \tbuff = NULL;\n            55 | \t\u00fc\n            56 |\n            57 | int DSSFILE::init()\n            58 | \t\u00e4\n            59 | \tchar _fileName\u00c41024\u00dc;\n            60 | \tchar _genFileName\u00c41024\u00dc;\n            61 | \tif (seqNo)\n            62 | \t\tsprintf(_fileName,\"%s.%d\",(char *)fileName,seqNo);\n            63 | \telse\n            64 | \t\tsprintf(_fileName,\"%s\",(char *)fileName);\n            65 | \tMsg(10000+13)<<_fileName<<eol;\n            66 | \tseqNo+=1;\n            67 |\n            68 | \tJOBENV::DEBUG(1,_fileName);\n            69 |\n            70 | \tint  flag = O_RDONLY;\n            71 | \tioLength = 0;\n            72 | \tmode_t mode = 0;\n            73 | \tmode =  S_IRUSR ] S_IWUSR ] S_IXUSR ]\n            74 | \t\tS_IRGRP ] S_IWGRP ] S_IXGRP ]\n            75 | \t\tS_IROTH ] S_IWOTH ] S_IXOTH;\n            76 | \tJOBENV::DEBUG(1,int(mode));\n            77 | \tif (type == DSSFILE_output)\n            78 | \t\t\u00e4\n            79 | \t\tflag = O_WRONLY+O_CREAT;\n            80 | \t\tfile = open(genOpenName(_fileName,_genFileName),flag+O_BINARY,flag,mode);\n            81 | \t\tif (file NEQ -1)\n            82 | \t\t\tclose(file);\n            83 | \t\tint rc= chmod(genOpenName(_fileName,_genFileName),mode);\n            84 | \t\tJOBENV::DEBUG(1,rc);\n            85 |\n            86 | \t\t\u00fc\n            87 | \tfile = open(genOpenName(_fileName,_genFileName),flag+O_BINARY,flag);\n            88 | \tif (file==-1&&seqNo>1&&type==DSSFILE_input)\n            89 | \t\treturn 0;\n            90 | \tif (file == -1)\n            91 | \t\t\u00e4\n            92 | \t\tperror(_fileName);\n            93 | \t\tError(Msg(10000+2)<<_fileName<<flag<<mode<<strerror(errno)<<eol,Abort);\n            94 | \t\t\u00fc\n            95 |\n            96 | \tif (type == DSSFILE_input)\n            97 | \t\t\u00e4\n            98 | \t\tif ( (fileF = fdopen(file,\"rb\")) == NULL)\n            99 | \t\t\t\u00e4\n           100 | \t\t\tperror(_fileName);\n           101 | \t\t\tError(Msg(10000+12)<<_fileName<<\"rb\"<<strerror(errno)<<eol,Abort);\n           102 | \t\t\t\u00fc\n           103 | \t\tzStream->next_in    = (Bytef*)buff;\n           104 | \t\tzStream->avail_in   = 0;\n           105 | \t\tif (seqNo==1)\n           106 | \t\t\t\u00e4\n           107 | \t\t\tif ((zRc = inflateInit(zStream)) NEQ Z_OK)\n           108 | \t\t\t\tError(Msg(10000+3)<<\"inflateInit\"<<zRc<<eol,Abort);\n           109 | \t\t\t\u00fc\n           110 | \t\telse\n           111 | \t\t\tif ((zRc = inflateReset(zStream)) NEQ Z_OK)\n           112 | \t\t\t\tError(Msg(10000+3)<<\"inflateReset\"<<zRc<<eol,Abort);\n           113 |\n           114 | \t\t\u00fc\n           115 | \telse\n           116 | \t\t\u00e4\n           117 | \t\tif ((fileF = fdopen(file,\"wb\")) == NULL)\n           118 | \t\t\t\u00e4\n           119 | \t\t\tperror(_fileName);\n           120 | \t\t\tError(Msg(10000+12)<<_fileName<<\"wb\"<<strerror(errno)<<eol,Abort);\n           121 | \t\t\t\u00fc\n           122 | \t\tzStream->next_out    = (Bytef*)buff;\n           123 | \t\tzStream->avail_out   = buff_size;\n           124 | \t\tif (seqNo==1)\n           125 | \t\t\t\u00e4\n           126 | \t\t\tif ((zRc =deflateInit(zStream,compressMethod)) NEQ Z_OK)\n           127 | \t\t\t\tError(Msg(10000+3)<<\"deflateInit\"<<zRc<<eol,Abort);\n           128 | \t\t\t\u00fc\n           129 | \t\telse\n           130 | \t\t\tif ((zRc =deflateReset(zStream)) NEQ Z_OK)\n           131 | \t\t\t\tError(Msg(10000+3)<<\"deflateReset\"<<zRc<<eol,Abort);\n           132 | \t\t\u00fc\n           133 | \treturn 1;\n           134 | \t\u00fc\n           135 |\n           136 | int DSSFILE::term()\n           137 | \t\u00e4\n           138 | \tJOBENV::DEBUG(1,\"term\");\n           139 | \tif(type ==DSSFILE_output&&fileF)\n           140 | \t\tflush();\n           141 | \tif (fileF)\n           142 | \t\tfclose(fileF);\n           143 | \tfileF = NULL;\n           144 | \treturn 1;\n           145 | \t\u00fc\n           146 |\n           147 | int DSSFILE::_put(void * b,size_t l,int flush)\n           148 | \t\u00e4\n           149 | \tif (iserror())\n           150 | \t\treturn 0;\n           151 | \tint send_size;\n           152 | \t//printf(\"Put%d\u00d6n\",l);\n           153 | \tif (flush==Z_NO_FLUSH)\n           154 | \t\t\u00e4\n           155 | \t\tzStream->next_in    = (Bytef*)b;\n           156 | \t\tzStream->avail_in   =  l;\n           157 | \t\tsend_size = buff_size;\n           158 | \t\t\u00fc\n           159 | \tok = 0;\n           160 | \twhile(NOT ok)\n           161 |     switch((zRc = deflate(zStream,flush)))\n           162 | \t\t\t\u00e4\n           163 | \t\t\tcase Z_NEED_DICT:\n           164 | \t\t\t\tError(Msg(10000+3)<<\"deflate\"<<zRc<<eol,Continue);\n           165 | \t\t\t\tok = -1;\n           166 | \t\t\t\tbreak;\n           167 | \t\t\tcase Z_STREAM_END:\n           168 | \t\t\t\tsend_size = buff_size - zStream->avail_out;\n           169 | \t\t\t\tif (send_size NEQ int(fwrite(buff,1,send_size,fileF)))\n           170 | \t\t\t\t\t\u00e4   ok = -1;\n           171 | \t\t\t\tError(Msg(10000+3)<<\"write\"<<errno<<eol,Abort);\n           172 | \t\t\t\t\t\u00fc\n           173 | \t\t\t\telse\n           174 | \t\t\t\t\t\u00e4\n           175 | \t\t\t\t\t//printf(\"Write Stream End%d\u00d6n\",send_size);\n           176 | \t\t\t\t\tioLength += l;\n           177 | \t\t\t\t\tcount += send_size;\n           178 | \t\t\t\t\tcompressedCount = zStream->total_out;\n           179 | \t\t\t\t\t\u00fc\n           180 | \t\t\t\tok = 1;\n           181 | \t\t\t\tbreak;\n           182 | \t\t\tcase Z_OK:\n           183 | \t\t\t\tif(zStream->avail_out == 0)\n           184 | \t\t\t\t\t\u00e4\n           185 | \t\t\t\t\tsend_size = buff_size - zStream->avail_out;\n           186 | \t\t\t\t\tif (send_size NEQ int(fwrite(buff,1,send_size,fileF)))\n           187 | \t\t\t\t\t\t\u00e4   ok = -1;\n           188 | \t\t\t\t\tError(Msg(10000+3)<<\"write\"<<errno<<eol,Abort);\n           189 | \t\t\t\t\t\t\u00fc\n           190 | \t\t\t\t\telse\n           191 | \t\t\t\t\t\t\u00e4\n           192 | \t\t\t\t\t\t//printf(\"Write %d\u00d6n\",send_size);\n           193 | \t\t\t\t\t\tioLength += l;\n           194 | \t\t\t\t\t\tzStream->next_out  = (Bytef*)buff;\n           195 | \t\t\t\t\t\tzStream->avail_out = buff_size;\n           196 | \t\t\t\t\t\tcount += send_size;\n           197 | \t\t\t\t\t\tcompressedCount = zStream->total_out;\n           198 | \t\t\t\t\t\t\u00fc\n           199 | \t\t\t\t\t\u00fc\n           200 | \t\t\t\tif(zStream->avail_in == 0&&l>0)\n           201 | \t\t\t\t\tok = 1;\n           202 | \t\t\t\tbreak;\n           203 | \t\t\tdefault:\n           204 | \t\t\t\tError(Msg(10000+3)<<\"deflate\"<<zRc<<eol,Continue);\n           205 | \t\t\t\tok = -1;\n           206 | \t\t\t\tbreak;\n           207 | \t\t\t\u00fc\n           208 | \tJOBENV::DEBUG(1,ioLength);\n           209 | \tif (ioLength>MAX_IOLENGTH&&l==4)\n           210 | \t\t\u00e4\n           211 | \t\tioLength = 0;\n           212 | \t\tterm();\n           213 | \t\tif (init()==0)\n           214 | \t\t\tError(Msg(10000+3)<<\"deflate\"<<zRc<<eol,Abort);\n           215 | \t\t\u00fc\n           216 | \treturn(ok>0?1:0);\n           217 | \t\u00fc\n           218 |\n           219 | int DSSFILE::_get(void *b,size_t l,int flush)\n           220 | \t\u00e4\n           221 | \tif (iserror()]]fileF==NULL)\n           222 | \t\treturn 0;\n           223 | \tint recv_size = -1;\n           224 | \tok = 0;\n           225 | \tzStream->next_out  = (Bytef*)b;\n           226 | \tzStream->avail_out = l;\n           227 | \t//printf(\"Get%d\u00d6n\",l);\n           228 | \twhile(NOT ok)\n           229 | \t\t\u00e4\n           230 | \t\tif (zStream->avail_in == 0 )\n           231 | \t\t\t\u00e4\n           232 | \t\t\trecv_size = fread(buff,1,buff_size,fileF);\n           233 | \t\t\t//printf(\"Read %d\u00d6n\",recv_size);\n           234 |\n           235 | \t\t\tif (recv_size < 0)\n           236 | \t\t\t\t\u00e4  ok = -1;\n           237 | \t\t\tError(Msg(10000+3)<<\"read\"<<errno<<eol,Continue);\n           238 | \t\t\t\t\u00fc\n           239 | \t\t\tzStream->avail_in = recv_size;\n           240 | \t\t\tzStream->next_in  =(Bytef*)buff;\n           241 | \t\t\tif (recv_size==0)\n           242 | \t\t\t\tflush=Z_FINISH;\n           243 | \t\t\t\u00fc\n           244 |     if (NOT ok) switch((zRc=inflate(zStream,flush)))\n           245 | \t\t\t\u00e4\n           246 | \t\t\t\t\t\t\t\tcase Z_NEED_DICT:\n           247 | \t\t\t\t\t\t\t\t\tError(Msg(10000+3)<<\"inflate\"<<zRc<<eol,Continue);\n           248 | \t\t\t\t\t\t\t\t\tok = -1;\n           249 | \t\t\t\t\t\t\t\t\tbreak;\n           250 | \t\t\t\t\t\t\t\tcase Z_STREAM_END:\n           251 | \t\t\t\t\t\t\t\tcase Z_BUF_ERROR:\n           252 | \t\t\t\t\t\t\t\tcase Z_OK:\n           253 | \t\t\t\t\t\t\t\t\tif (recv_size == 0 )\n           254 | \t\t\t\t\t\t\t\t\t\t\u00e4\n           255 | \t\t\t\t\t\t\t\t\t\tterm();\n           256 | \t\t\t\t\t\t\t\t\t\tBytef * _b = zStream->next_out;\n           257 | \t\t\t\t\t\t\t\t\t\tsize_t _l  = zStream->avail_out;\n           258 | \t\t\t\t\t\t\t\t\t\tif (init()==0)\n           259 | \t\t\t\t\t\t\t\t\t\t\treturn 0;\n           260 | \t\t\t\t\t\t\t\t\t\tzStream->next_out   = _b;\n           261 | \t\t\t\t\t\t\t\t\t\tzStream->avail_out  = _l;\n           262 | \t\t\t\t\t\t\t\t\t\t\u00fc\n           263 | \t\t\t\t\t\t\t\t\tif (zStream->avail_out == 0)\n           264 | \t\t\t\t\t\t\t\t\t\tok = 1;\n           265 | \t\t\t\t\t\t\t\t\tbreak;\n           266 | \t\t\t\t\t\t\t\tdefault:\n           267 | \t\t\t\t\t\t\t\t\tError(Msg(10000+3)<<\"inflate\"<<zRc<<eol,Continue);\n           268 | \t\t\t\t\t\t\t\t\tok = -1;\n           269 | \t\t\t\t\t\t\t\t\tbreak;\n           270 | \t\t\t\u00fc\n           271 | \t\t\u00fc\n           272 | \tcount +=l;\n           273 | \tcompressedCount = zStream->total_in;\n           274 | \treturn(ok>0?1:0);\n           275 | \t\u00fc\n           276 |\n           277 | int DSSFILE::put(void * b,size_t l)\n           278 | \t\u00e4\n           279 | \tif( _put((void *)&l,sizeof(size_t)) && _put(b,l))\n           280 | \t\treturn 1;\n           281 | \telse\n           282 | \t\treturn 0;\n           283 | \t\u00fc\n           284 |\n           285 | int DSSFILE::get(void *b)\n           286 | \t\u00e4\n           287 | \tsize_t l = 0;\n           288 | \tif (_get((void*)&l,sizeof(size_t)))\n           289 | \t\t\u00e4\n           290 | \t\tif ( _get(b,l))\n           291 | \t\t\treturn l;\n           292 | \t\t\u00fc\n           293 | \treturn 0;\n           294 | \t\u00fc\n           295 |\n           296 | int DSSFILE::flush()\n           297 | \t\u00e4\n           298 | \treturn(_put(0,0,Z_FINISH));\n           299 | \t\u00fc\n           300 |\n           301 | void DSSFILE::Error(char *,Error_Action a)\n           302 | \t\u00e4\n           303 | \tif (a == Continue)\n           304 | \t\treturn;\n           305 | \telse\n           306 | \t\t\u00e4\n           307 | \t\tMsg(10000+9999)<<eol;\n           308 | \t\tabort();\n           309 | \t\t\u00fc\n           310 | \t\u00fc\n0                                   * * * * *   E N D   O F   S O U R C E   * * * * *\n-\n\n15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(DSSFILE)'                      30.11.12 08:25:26\n0                                    * * * * *   I N C L U D E S   * * * * *\n     1  =  //'ESA.PRJ.CBTDSSN.HPP(ISISDEF)'\n     2  =  //'CEE.SCEEH.H(STDIO)'\n     3  =  //'CEE.SCEEH.H(FEATURES)'\n     4  =  //'CEE.SCEEH.SYS.H(TYPES)'\n     5  =  //'CEE.SCEEH.H(STDLIB)'\n     6  =  //'CEE.SCEEH.H(BUILTINS)'\n     7  =  //'CEE.SCEEH.H(STDDEF)'\n     8  =  //'CEE.SCEEH.H(STRING)'\n     9  =  //'CEE.SCEEH.H(ERRNO)'\n    10  =  //'CEE.SCEEH.H(FCNTL)'\n    11  =  //'CEE.SCEEH.SYS.H(MODES)'\n    12  =  //'CEE.SCEEH.H(ASSERT)'\n    13  =  //'CEE.SCEEH.H(CTYPE)'\n    14  =  //'CEE.SCEEH.SYS.H(STAT)'\n    15  =  //'CEE.SCEEH.SYS.H(MNTENT)'\n    16  =  //'CEE.SCEEH.SYS.H(STAT)'\n    17  =  //'CEE.SCEEH.H(UNISTD)'\n    18  =  //'CEE.SCEEH.H(INTTYPES)'\n    19  =  //'CEE.SCEEH.H(STDINT)'\n    20  =  //'ESA.PRJ.CBTDSSN.HPP(DSSFILE)'\n    21  =  //'ESA.PRJ.CBTDSSN.HPP(MVSBASE)'\n    22  =  //'ESA.PRJ.CBTDSSN.HPP(MERROR)'\n    23  =  //'ESA.PRJ.CBTDSSN.HPP(DSNAMEUT)'\n    24  =  //'CEE.SCEEH.H(ASSERT)'\n    25  =  //'ESA.PRJ.CBTDSSN.HPP(CASMIF)'\n    26  =  //'ESA.PRJ.CBTDSSN.HPP(ASMIF)'\n    27  =  //'ESA.PRJ.CBTDSSN.HPP(ZLIB)'\n    28  =  //'ESA.PRJ.CBTDSSN.HPP(ZCONF)'\n    29  =  //'ESA.PRJ.CBTDSSN.HPP(DSSMAIN)'\n    30  =  //'ESA.PRJ.CBTDSSN.HPP(JOBENV)'\n    31  =  //'ESA.PRJ.CBTDSSN.HPP(SUBTASK)'\n    32  =  //'ESA.PRJ.CBTDSSN.HPP(MSGMGR)'\n    33  =  //'ESA.PRJ.CBTDSSN.HPP(MISC)'\n    34  =  //'CEE.SCEEH.H(TIME)'\n-\n-\n-\n-\n-\n-                                 * * * * *   E N D   O F   I N C L U D E S   * * * * *\n0\n15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(DSSFILE)'                      30.11.12 08:25:26\n-                           * * * * *   M E S S A G E   S U M M A R Y   * * * * *\n0TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL\n                (U)       (S)         (E)        (W)          (I)\n     0           0         0           0          0            0\n0                    * * * * *   E N D   O F   M E S S A G E   S U M M A R Y   * * * * *\n0                        * * * * *   E N D   O F   C O M P I L A T I O N   * * * * *\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSSMAIN": {"ttr": 2695, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(DSSMAIN)'                      30.11.12 08:25:29\n0                                      * * * * *   P R O L O G   * * * * *\n    Compiler options. . . . . . . :AGGRCOPY(NOOVERLAP)             ANSIALIAS       ARCH(7)         ARGPARSE        NOASCII\n                                  :NOATTRIBUTE     ASSERT(RESTRICT)                BITFIELD(UNSIGNED)              CHARS(UNSIGNED)\n                                  :NOCOMPACT       NOCOMPRESS      CVFT            NODFP           DIGRAPH         DLL(CALLBACKANY)\n                                  :ENUMSIZE(SMALL) NOEVENTS        EXECOPS         EXH             NOEXPMAC        NOEXPORTALL\n                                  :NOFASTTEMPINC   FLAG(I)         NOGOFF          GONUMBER        HALT(16)\n                                  :NOHGPR(NOPRESERVE)              NOHOT           NOIGNERRNO      ILP32           NOINITAUTO\n                                  :NOINLRPT        NOLIBANSI       NOLIST          LONGNAME        NOMAKEDEP       NOMARGINS\n                                  :MAXMEM(2097152) MEMORY          NAMEMANGLING(zOSV1R2)           NESTINC(255)    OBJECT\n                                  :OBJECTMODEL(COMPAT)             NOOE            NOOFFSET        OPTIMIZE(2)     PLIST(HOST)\n                                  :NOPORT          NOPPONLY        PREFETCH        REDIR           NOREPORT        ROSTRING\n                                  :ROCONST         RTTI(ALL)       NOSEQUENCE      NOSHOWINC       NOSHOWMACROS    SOURCE\n                                  :SKIPSRC(SHOW)   SPILL(3600)     START           NOSTATICINLINE  STRICT\n                                  :NOSTRICT_INDUCTION              TARGET(LE,CURRENT)              TEMPLATEDEPTH(300)\n                                  :NOTEMPLATEREGISTRY              TEMPLATERECOMPILE               TERMINAL        TEST(HOOK)\n                                  :TMPLPARSE(NO)   TUNE(7)         UNROLL(AUTO)    UTF             NOWARN0X        NOWARN64\n                                  :NOWSIZEOF       NOXREF\n                                  :NOCICS\n                                  :NOCONVLIT\n                                  :NOCSECT\n                                  :DEBUG(FORMAT(ISD),LEVEL(0),HOOK(NOLINE,NOBLOCK,NOPATH,CALL,FUNC),NOSYMBOL)\n                                  :DEFINE(__OS390__=1,_POSIX_SOURCE=1,_XOPEN_SOURCE_EXTENDED=1,MU_STANDALONE=1,ISIS_PF_MU=1)\n                                  :FLOAT(HEX,FOLD,NOMAF,AFP(NOVOLATILE)) ROUND(Z)\n                                  :NOHALTONMSG\n                                  :INFO(LAN)\n                                  :INLINE(AUTO,NOREPORT,100,1000)\n                                  :NOIPA\n                                  :KEYWORD(bool,explicit,export,false,mutable,namespace,true,typename,using,restrict,__restrict__,\n                                   __restrict,_Pragma,__alignof__,__asm__,__attribute__,__const__,__extension__,__volatile__,\n                                   __inline__,__signed__,__typeof__,__I,_Complex,__complex__,__real__,__imag__)\n                                  :NOKEYWORD(char16_t,char32_t,decltype,static_assert,typeof)\n                                  :LANGLVL(ANONSTRUCT,ANONUNION,ANSIFOR,ANSISINIT,NOAUTOTYPEDEDUCTION,C99VLA,C99__FUNC__,\n                                   NOC99LONGLONG,NOC99PREPROCESSOR,NOCOMPATRVALUEBINDING,NODBCS,NODECLTYPE,NODELEGATINGCTORS,\n                                   DEPENDENTBASELOOKUP,NODOLLARINNAMES,EMPTYSTRUCT,NOEXTENDEDFRIEND,NOEXTENDEDINTEGERSAFE,\n                                   EXTERNTEMPLATE,ILLPTOM,IMPLICITINT,NOINLINENAMESPACE,LIBEXT,LONGLONG,NONEWEXCP,OFFSETNONPOD,\n                                   NOOLDDIGRAPH,OLDFRIEND,NOOLDMATH,NOOLDSTR,OLDTEMPACC,NOOLDTMPLALIGN,OLDTMPLSPEC,NOSTATIC_ASSERT,\n                                   NOTEMPSASLOCALS,NOTEXTAFTERENDIF,GNU_LABELVALUE,GNU_COMPUTEDGOTO,TRAILENUM,TYPEDEFCLASS,NOUCS,\n                                   VARARGMACROS,NOVARIADICTEMPLATES,GNU_INCLUDE_NEXT,ZEROEXTARRAY,NOC99COMPLEX,NOC99COMPLEXHEADER,\n                                   NOGNU_COMPLEX,GNU_SUFFIXIJ)\n                                  :LOCALE(DE_DE.IBM-273)\n                                  :NOLSEARCH\n                                  :OPTFILE(DD:OPTFILE)\n                                  :NORTCHECK\n                                  :SEARCH(//'CEE.SCEEH.+', //'CBC.SCLBH.+', CEE.SCEEH.+, CBC.SCLBH.+, DD:USERLIB)\n                                  :NOSERVICE\n                                  :NOSQL\n                                  :NOSUPPRESS\n                                  :TEMPINC(./tempinc)\n                                  :NOXPLINK(NOBACKCHAIN,NOCALLBACK,GUARD,OSCALL(UPSTACK),NOSTOREARGS)\n    Version Macros. . . . . . . . : __COMPILER_VER__=0x410D0000\n                                  : __LIBREL__=0x410D0000\n                                  : __TARGET_LIB__=0x410D0000\n    Source margins. . . . . . . . :\n      Varying length. . . . . . . : 1 - 32760\n      Fixed length. . . . . . . . : 1 - 32760\n    Sequence columns. . . . . . . :\n      Varying length. . . . . . . : none\n      Fixed length. . . . . . . . : none\n    Locale name . . . . . . . . . : DE_DE.IBM-273\n    Code set. . . . . . . . . . . : IBM-273\n    Listing name. . . . . . . . . : DD:SYSCPRT\n0                                 * * * * *   E N D   O F   P R O L O G   * * * * *\n-\n15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(DSSMAIN)'                      30.11.12 08:25:29\n-\n                                       * * * * *   S O U R C E   * * * * *\n0            1 | #pragma runopts(POSIX(ON),ANYHEAP(,,ANY),ALL31(ON),HEAP(,,ANY),STACK(,,ANY),STORAGE(NONE,NONE,NONE))\n             2 | #include \"isisdef.h\"\n             3 | #include <stdio.h>\n             4 | #include <stdlib.h>\n             5 | #include <string.h>\n             6 | #include <strings.h>\n             7 | #include <fcntl.h>\n             8 |\n             9 | #include <unistd.h>\n            10 |\n            11 | #include \"msgmgr.hpp\"\n            12 | #include \"mvsbase.hpp\"\n            13 | #include \"mchain.hpp\"\n            14 | #include \"merror.hpp\"\n            15 | #include \"rarcsql.hpp\"\n            16 | #include \"dssclas.hpp\"\n            17 | #include \"dssmain.hpp\"\n            18 | #include \"dssdb.hpp\"\n            19 | #include \"dssfile.hpp\"\n            20 | #include \"jobenv.hpp\"\n            21 | #include \"adreib.hpp\"\n            22 | #include \"adrufob.hpp\"\n            23 | #include \"eirec21.hpp\"\n            24 | #include \"eirec23.hpp\"\n            25 | #include \"misc.hpp\"\n            26 | //#include \"isismisc.hpp\"\n            27 |\n            28 | typedef struct adreib _adreib;\n            29 | typedef struct adrufob ADRUFOB;\n            30 | typedef struct eirec21  EIREC21;\n            31 | typedef struct eirec23  EIREC23;\n            32 |\n            33 | const char * ADRDSSU              = \"ADRDSSU \";\n            34 | const char * KEYWORD_INCLUDE_MARK = \"/*include*/\";\n            35 | const char * KEYWORD_DUMP         = \"DUMP\";\n            36 | const char * KEYWORD_RESTORE      = \"RESTORE\";\n            37 | const char * KEYWORD_DB_PLAN      = \"PLAN\";\n            38 | const char * KEYWORD_DB_SUBSYS    = \"SUBSYS\";\n            39 | const char * KEYWORD_PREFIX       = \"PREFIX\";\n            40 | const char * KEYWORD_SYSIN        = \"SYSIN\";\n            41 | const char * KEYWORD_ADR012I      = \"ADR012I\";\n            42 | const char * KEYWORD_DEBUG        = \"DEBUG\";\n            43 | const char * KEYWORD_TRACE        = \"TRACE\";\n            44 | const char * KEYWORD_COMPR        = \"COMPR\";\n            45 | const char * KEYWORD_REFDT        = \"REFDT\";\n            46 | const char * KEYWORD_SQLFILE      = \"SQL\";\n            47 | const char * KEYWORD_DIRECT       = \"DIRECT\";\n            48 | const char * KEYWORD_MAXLENGTH    = \"MAXLENGTH\";\n            49 | const char * KEYWORD_USEDB2\t  \t\t= \"USEDB2\";\n            50 | const char * KEYWORD_USEDB2_FILE  = \"DB2OUT\";\n            51 | const char * KEYWORD_ADRDSSU      = \"ADRDSSU\";\n            52 |\n            53 | static DSS *          dss = NULL;\n            54 | static mCHAIN    *    input      = new mCHAIN();\n            55 | static CHAINITER *    inputIter  = new CHAINITER(*input);\n            56 | static int            inputEof   = 0;\n            57 | static mCHAIN    *    msgChain   = new mCHAIN();\n            58 | static CHAINITER *    msgIter    = new CHAINITER(*input);\n            59 | static char           buff\u00c4DSSFILE_MAX_BUFFER\u00dc;\n            60 | static FILE      *    trace      = NULL;\n            61 | static char  date\u00c412\u00dc;\n            62 | static char  dateToIBM\u00c412\u00dc;\n            63 |\n            64 | static bool backspaceFlag = false;\n            65 | static int  backspaceLength = 0;\n            66 | static int   direct = 0;\n            67 |\n            68 | static bool adrdssu = false;\n            69 |\n            70 | #define _VERSION_  \"V7R0M0\"\n            71 |\n            72 | int main(int argc,char *argv\u00c4\u00dc)\n            73 | \u00e4\n            74 | \tchar _genFileName\u00c41024\u00dc;\n            75 | \tint rc = 0;\n            76 | \tmessagetext = new MessageTEXT();\n            77 | \tjobEnv  = new JOBENV(argv\u00c40\u00dc);\n            78 | \tDssJob * job = new DssJob();\n            79 | \tdss = new DSS(argv\u00c41\u00dc,job);\n            80 | \tformatTime(date,sizeof(date),\"%d.%m.%Y\");\n            81 | \tJOBENV::DEBUG(1,date);\n            82 | \tMsg(5500)<<argv\u00c40\u00dc<<_VERSION_<<__DATE__<<eol; //szm20060419\n            83 | \tmCHAIN * includes    = new mCHAIN();\n            84 | \tchar     buff\u00c4256\u00dc;\n            85 | \tif (getenv(KEYWORD_TRACE))\n            86 | \t\u00e4\n            87 | \t\ttrace = fopen(genOpenName(getenv(KEYWORD_TRACE),_genFileName),\"w\");\n            88 | \t\u00fc\n            89 | \tFILE *   sysin = fopen(genOpenName(KEYWORD_SYSIN,_genFileName),\"r\");\n            90 | \tif (NOT sysin)\n            91 | \t\tJOBENV::Error(Msg(10000+110)<<KEYWORD_SYSIN<<eol,JOBENV::Abort);\n            92 | \tif (getenv(KEYWORD_ADRDSSU))\n            93 | \t\tadrdssu = atoi(getenv(KEYWORD_ADRDSSU));\n            94 | \telse\n            95 | \t\tadrdssu = false;\n            96 | \twhile(fgets(buff,sizeof(buff)-1,sysin))\n            97 | \t\u00e4\n            98 | \t\tif ( strchr(buff,'\u00d6n') )\n            99 | \t\t\t*strchr(buff,'\u00d6n') = 0;\n           100 | \t\tchainE * rec = new chainE(buff);\n           101 | \t\tMsg(10000+112)<<buff<<eol;\n           102 | \t\tinput->addlast(rec);\n           103 | \t\tmvsSTRING parse(rec->chainEid);\n           104 | \t\tparse.strip();\n           105 | \t\tif ( dss->function == DSS::invalid )\n           106 | \t\t\u00e4\n           107 | \t\t\tif (memcmpi((const char *)parse,KEYWORD_DUMP,strlen(KEYWORD_DUMP))==0)\n           108 | \t\t\t\tdss->function = DSS::dump;\n           109 | \t\t\telse if (memcmpi((const char *)parse,KEYWORD_RESTORE,strlen(KEYWORD_RESTORE))==0)\n           110 | \t\t\t\tdss->function = DSS::restore;\n           111 | \t\t\u00fc\n           112 | \t\telse if(strstr((char *)parse,KEYWORD_INCLUDE_MARK) && dss->function == DSS::restore)\n           113 | \t\t\u00e4\n           114 | \t\t\tmvsSTRING inc, rest;\n           115 | \t\t\tparse.parse(inc,\" \",rest);\n           116 | \t\t\tinc.strip();\n           117 | \t\t\tMsg(10000+113)<<inc<<eol;\n           118 | \t\t\tincludes->addlast(new chainE((char *)inc));\n           119 | \t\t\u00fc\n           120 | \t\telse if(strstr((char *)parse,KEYWORD_REFDT) && dss->function == DSS::restore)\n           121 | \t\t\u00e4\n           122 | \t\t\tmvsSTRING dt = strchr(strstr((char *)parse,KEYWORD_REFDT),' ');\n           123 | \t\t\tmvsSTRING oper, dateS, rest;\n           124 | \t\t\tdt.strip();\n           125 | \t\t\tdt.parse(oper,\" \",dateS,\")\",rest);\n           126 | \t\t\tdateS.strip();\n           127 | \t\t\tstrcpy(date,(char *)dateS);\n           128 | \t\t\tmemcpy(dateToIBM,DatetoIBM(date),sizeof(dateToIBM));\n           129 | \t\t\tMsg(10000+116)<<date<<dateToIBM<<eol;\n           130 | \t\t\u00fc\n           131 | \t\u00fc\n           132 | \tfclose(sysin);\n           133 | \tsysin = NULL;\n           134 | \tFILE * _fd = fopen(genOpenName(KEYWORD_DIRECT,_genFileName),\"r\");\n           135 | \tif (_fd) fclose(_fd);\n           136 | \tif (_fd)\n           137 | \t\tsysin = fopen(genOpenName(KEYWORD_DIRECT,_genFileName),\"r\");\n           138 | \tif (sysin)\n           139 | \t\u00e4\n           140 | \t\twhile(fgets(buff,sizeof(buff)-1,sysin))\n           141 | \t\t\u00e4\n           142 | \t\t\tif ( strchr(buff,'\u00d6n') )\n           143 | \t\t\t\t*strchr(buff,'\u00d6n') = 0;\n           144 | \t\t\tif ( strchr(buff,' ') )\n           145 | \t\t\t\t*strchr(buff,' ') = 0;\n           146 | \t\t\tdirect = 1;\n           147 | \t\t\tMsg(10000+126)<<buff<<eol;\n           148 | \t\t\tDssJob::dssJobs.addlast(new DssJob(buff));\n           149 | \t\t\u00fc\n           150 | \t\tfclose(sysin);\n           151 | \t\u00fc\n           152 |\n           153 | \tsysin = NULL;\n           154 | \tint qrc = 0;\n           155 | \tswitch(dss->function)\n           156 | \t\u00e4\n           157 | \tcase DSS::dump:\n           158 | \t\tMsg(10000+114)<<eol;\n           159 | \t\tinputIter->reset();\n           160 | \t\trc = dss->run(job);\n           161 | \t\tbreak;\n           162 | \tcase DSS::restore:\n           163 | \t\tMsg(10000+115)<<eol;\n           164 | \t\t\u00e4\n           165 | \t\t\tif (direct==0)\n           166 | \t\t\t\u00e4\n           167 | \t\t\t\tif ((qrc = dss->getJob()->query(includes,date)) < 0)\n           168 | \t\t\t\t\tJOBENV::Error(Msg(10000+111)<<eol,JOBENV::Abort);\n           169 | \t\t\t\u00fc\n           170 | \t\t\tif ( NOT DssJob::allOnline() )\n           171 | \t\t\t\tJOBENV::Error(Msg(10000+118)<<eol,JOBENV::Abort);\n           172 | \t\t\tCHAINITER iter(DssJob::dssJobs);\n           173 | \t\t\tDssJob * toRestore = (DssJob*)iter.next();\n           174 | \t\t\tif (direct==0 &&(toRestore==NULL ]] qrc == 0))\n           175 | \t\t\t\u00e4\n           176 | \t\t\t\tJOBENV::Error(Msg(10000+117)<<eol,JOBENV::Continue);\n           177 | \t\t\t\trc = 4;\n           178 | \t\t\t\u00fc\n           179 | \t\t\twhile(toRestore)\n           180 | \t\t\t\u00e4\n           181 | \t\t\t\tinputEof = 0;\n           182 | \t\t\t\tinputIter->reset();\n           183 | \t\t\t\trc ]= dss->run(toRestore);\n           184 | \t\t\t\ttoRestore = (DssJob*)iter.next();\n           185 | \t\t\t\u00fc\n           186 | \t\t\u00fc\n           187 | \t\tbreak;\n           188 | \tcase DSS::invalid:\n           189 | \tdefault:\n           190 | \t\tJOBENV::Error(Msg(10000+111)<<eol,JOBENV::Abort);\n           191 | \t\tbreak;\n           192 | \t\u00fc\n           193 | \tMsg(10000+119)<<rc<<eol;\n           194 | \t//printf(\" DSSN ended with rc:%d\u00d6n\",rc);\n           195 | \t_exit(rc);\n           196 | \tdelete job;\n           197 | \tdelete includes;\n           198 | \tdelete dss;\n           199 | \t_exit(rc);\n           200 | \t//return rc;\n           201 | \u00fc\n           202 |\n           203 | char * options\u00c4\u00dc =\n           204 | \u00e4\n           205 | \t\"Function StartUp\",\n           206 | \t\"Sysin Record\",\n           207 | \t\"Printing SYSPRINT\",\n           208 | \t\"Reading Physical Tape\",\n           209 | \t\"Reading Logical Tape\",\n           210 | \t\"Writing Logical Tape\",\n           211 | \t\"Writing Physical Tape\",\n           212 | \t\"Reading Disk Track\",\n           213 | \t\"Writing Disk Track\",\n           214 | \t\"Reading Utility Sysprint\",\n           215 | \t\"Writing Utility Sysprint\",\n           216 | \t\"Writing WTO\",\n           217 | \t\"Writing WTOR\",\n           218 | \t\"Presenting ADRUFO\",\n           219 | \t\"Function Ending\",\n           220 | \t\"Presenting WTOR response\",\n           221 | \t\"OPEN Tape volume verification\",\n           222 | \t\"OPEN Tape volume nonspecific\",\n           223 | \t\"Insert Logical VSAM\",\n           224 | \t\"Output TAPE error\",\n           225 | \t\"Volume Notification\",\n           226 | \t\"Dataset Verification\",\n           227 | \t\"Bypass Verification\",\n           228 | \t\"Dataset processed\",\n           229 | \t\"Concurrent Copy\",\n           230 | \t\"Backspace\",\n           231 | \t\"Dump Volume\",\n           232 | \t\"Physical Dataset Processed\"\n           233 | \u00fc;\n           234 |\n           235 | extern \"C\"\n           236 | int UIM(void  * eib)\n           237 | \u00e4\n           238 | \tstatic DSSFILE  * dssFile  = NULL;\n           239 | \tstatic int dssStart        = 1;\n           240 |\n           241 | \t_adreib  * adreib  = (_adreib *)eib;\n           242 | \tdss                = (DSS *)(adreib->eiuseptr);\n           243 | \tDssJob *  job      = dss->getJob();\n           244 | \tJOBENV::DEBUG(1,\"UIM entry:\",options\u00c4adreib->eioption\u00dc);\n           245 | \tadreib->eiretcod = eirc_ok; //set default o.k.\n           246 | \tadreib->eixalow0 = 0xff; // allow all kind of actions ( replace delete etc.\n           247 | \tif (adrdssu)\n           248 | \t\u00e4\n           249 | \t\u00fc\n           250 | \telse\n           251 | \t\u00e4\n           252 | \t\tswitch(adreib->eioption)\n           253 | \t\t\u00e4\n           254 | \t\tcase eiop00:\n           255 | \t\t\t\u00e4\n           256 | \t\t\t\tif (dssStart)\n           257 | \t\t\t\t\u00e4\n           258 | \t\t\t\t\tdssStart = 0;\n           259 | \t\t\t\t\tMsg(10000+130)<<\"V7R0M0\"<<__DATE__<<eol;\n           260 | \t\t\t\t\u00fc\n           261 | \t\t\t\telse\n           262 | \t\t\t\t\u00e4\n           263 | \t\t\t\t\tif (dss->function == DSS::dump)\n           264 | \t\t\t\t\t\tdssFile = new DSSFILE(job->getDatasetName(),DSSFILE_output);\n           265 | \t\t\t\t\telse\n           266 | \t\t\t\t\t\tdssFile = new DSSFILE(job->getDatasetName(),DSSFILE_input);\n           267 | \t\t\t\t\tif(NOT dssFile ]] dssFile->iserror())\n           268 | \t\t\t\t\t\tJOBENV::Error(Msg(10000+111)<<eol,JOBENV::Abort);\n           269 | \t\t\t\t\u00fc\n           270 | \t\t\t\u00fc\n           271 | \t\t\tadreib->eiretcod =  eirc_ok;\n           272 | \t\t\tbreak;\n           273 | \t\tcase eiop01:\n           274 | \t\t\tif (NOT inputEof)\n           275 | \t\t\t\u00e4\n           276 | \t\t\t\tchainE  * rec = inputIter->next();\n           277 | \t\t\t\tif ( rec)\n           278 | \t\t\t\t\u00e4\n           279 | \t\t\t\t\tadreib->eirecptr = int(rec->chainEid);\n           280 | \t\t\t\t\tadreib->eireclen = strlen(rec->chainEid);\n           281 | \t\t\t\t\tchar * c = NULL;\n           282 | \t\t\t\t\tif ((c = strstr((char *)adreib->eirecptr,KEYWORD_INCLUDE_MARK)))\n           283 | \t\t\t\t\t\tmemset(c,' ',strlen(KEYWORD_INCLUDE_MARK));\n           284 | \t\t\t\t\telse if (strstr((char *)adreib->eirecptr,KEYWORD_REFDT) && dss->function == DSS::restore)\n           285 | \t\t\t\t\t\u00e4\n           286 | \t\t\t\t\t\tchar * dt = strchr(strstr((char *)adreib->eirecptr,KEYWORD_REFDT),' ');\n           287 | \t\t\t\t\t\tmemcpy(dt+4,dateToIBM,strlen(date));\n           288 | \t\t\t\t\t\u00fc\n           289 | \t\t\t\t\tJOBENV::DEBUG(1,(char *)adreib->eirecptr);\n           290 | \t\t\t\t\tadreib->eiretcod = eirc_insert;\n           291 | \t\t\t\t\u00fc\n           292 | \t\t\t\telse\n           293 | \t\t\t\t\u00e4\n           294 | \t\t\t\t\tinputEof = 1;\n           295 | \t\t\t\t\tif (adreib->eireclen)\n           296 | \t\t\t\t\t\tadreib->eiretcod =  eirc_delete;\n           297 | \t\t\t\t\telse\n           298 | \t\t\t\t\t\tadreib->eiretcod =  eirc_disconnect;\n           299 | \t\t\t\t\u00fc\n           300 | \t\t\t\u00fc\n           301 | \t\t\telse if (adreib->eireclen)\n           302 | \t\t\t\tadreib->eiretcod =  eirc_delete;\n           303 | \t\t\telse\n           304 | \t\t\t\tadreib->eiretcod =  eirc_disconnect;\n           305 | \t\t\tbreak;\n           306 | \t\tcase eiop02:\n           307 | \t\t\tif (0)\n           308 | \t\t\t\t//if (memcmpi(KEYWORD_ADR012I,(char *)adreib->eirecptr,strlen(KEYWORD_ADR012I)) == 0)\n           309 | \t\t\t\u00e4\n           310 | \t\t\t\tif (msgIter == NULL)\n           311 | \t\t\t\t\tmsgIter = new CHAINITER(*msgChain);\n           312 | \t\t\t\tchainE * next = msgIter->next();\n           313 | \t\t\t\tif (next == NULL)\n           314 | \t\t\t\t\u00e4\n           315 | \t\t\t\t\tdelete msgIter;\n           316 | \t\t\t\t\tadreib->eiretcod = eirc_ok;\n           317 | \t\t\t\t\u00fc\n           318 | \t\t\t\telse\n           319 | \t\t\t\t\u00e4\n           320 | \t\t\t\t\tadreib->eirecptr = int(next->chainEid);\n           321 | \t\t\t\t\tadreib->eireclen = next->chainEidl;\n           322 | \t\t\t\t\tadreib->eiretcod = eirc_insert;\n           323 | \t\t\t\t\u00fc\n           324 | \t\t\t\u00fc\n           325 | \t\t\telse\n           326 | \t\t\t\tif (dss->function == DSS::dump &&\n           327 | \t\t\t\t\tjob->joblog.len+adreib->eireclen < sizeof(job->joblog.arr))\n           328 | \t\t\t\t\u00e4\n           329 | \t\t\t\t\tmemcpy(job->joblog.arr+job->joblog.len,(char *)adreib->eirecptr,\n           330 | \t\t\t\t\t\tadreib->eireclen);\n           331 | \t\t\t\t\tjob->joblog.len += adreib->eireclen;\n           332 | \t\t\t\t\tjob->joblog.arr\u00c4job->joblog.len++\u00dc = 0;\n           333 | \t\t\t\t\u00fc\n           334 | \t\t\t\tadreib->eiretcod = eirc_ok;\n           335 | \t\t\t\tbreak;\n           336 | \t\tcase eiop03:\n           337 | \t\t\t\u00e4\n           338 | \t\t\t\tif (backspaceFlag)\n           339 | \t\t\t\t\u00e4\n           340 | \t\t\t\t\t//JOBENV::DEBUG(1,\"backspace Physical Tape Record\");\n           341 | \t\t\t\t\tadreib->eirecptr = int(buff);\n           342 | \t\t\t\t\tadreib->eireclen = backspaceLength;\n           343 | \t\t\t\t\tadreib->eiretcod = eirc_insert;\n           344 | \t\t\t\t\tbackspaceFlag = false;\n           345 | \t\t\t\t\u00fc\n           346 | \t\t\t\telse\n           347 | \t\t\t\t\u00e4\n           348 | \t\t\t\t\tsize_t l = dssFile->get(buff);\n           349 | \t\t\t\t\tif (l)\n           350 | \t\t\t\t\t\u00e4\n           351 | \t\t\t\t\t\tbackspaceLength = l;\n           352 | \t\t\t\t\t\t//JOBENV::DEBUG(1,l);\n           353 | \t\t\t\t\t\t// fwrite(buff,1,l,trace);\n           354 | \t\t\t\t\t\tadreib->eirecptr = int(buff);\n           355 | \t\t\t\t\t\tadreib->eireclen = l;\n           356 | \t\t\t\t\t\tadreib->eiretcod = eirc_insert;\n           357 | \t\t\t\t\t\u00fc\n           358 | \t\t\t\t\telse\n           359 | \t\t\t\t\t\tadreib->eiretcod = eirc_disconnect;\n           360 | \t\t\t\t\u00fc\n           361 | \t\t\t\u00fc\n           362 | \t\t\tbreak;\n           363 | \t\tcase eiop06:\n           364 | \t\t\tif (dssFile->put((char *)adreib->eirecptr,adreib->eireclen))\n           365 | \t\t\t\tadreib->eiretcod = eirc_delete;\n           366 | \t\t\telse\n           367 | \t\t\t\tadreib->eiretcod = eirc_disconnect;\n           368 | \t\t\tbreak;\n           369 | \t\tcase eiop13:\n           370 | \t\t\t\u00e4\n           371 | \t\t\t\tADRUFOB * adrufob =(ADRUFOB *)adreib->eirecptr;\n           372 | \t\t\t\tadrufob->ufaiflgs &= (255-ufuimch);\n           373 | \t\t\t\tadrufob->ufaiflgs ]= (ufnoin+ufnoout);\n           374 | \t\t\t\tadreib->eiretcod = eirc_modified;\n           375 | \t\t\t\u00fc\n           376 | \t\t\tbreak;\n           377 | \t\tcase eiop14:\n           378 | \t\t\t\u00e4\n           379 | \t\t\t\tif (dss->function == DSS::dump)\n           380 | \t\t\t\t\tjob->insert();\n           381 | \t\t\t\tif (dssFile)\n           382 | \t\t\t\t\tdelete dssFile;\n           383 | \t\t\t\tdssFile = NULL;\n           384 | \t\t\t\u00fc\n           385 | \t\t\tadreib->eiretcod =  eirc_ok;\n           386 | \t\t\tbreak;\n           387 | \t\tcase eiop21:\n           388 | \t\t\tadreib->eiretcod =  eirc_ok;\n           389 | \t\t\tif (dss->function==DSS::restore)\n           390 | \t\t\t\u00e4\n           391 | \t\t\t\tEIREC21 * rec21 = (EIREC21 *)(adreib->eirecptr);\n           392 | \t\t\t\tif (direct==0&&job->doWeNeed((char *)rec21->ei21dsn)==0)\n           393 | \t\t\t\t\u00e4\n           394 | \t\t\t\t\tMsg(10000+125)<<mvsSTRING((char *)rec21->ei21dsn,sizeof(rec21->ei21dsn))<<eol;\n           395 | \t\t\t\t\tadreib->eiretcod =  eirc_end_dataset;\n           396 | \t\t\t\t\u00fc\n           397 | \t\t\t\telse\n           398 | \t\t\t\t\tMsg(10000+124)<<mvsSTRING((char *)rec21->ei21dsn,sizeof(rec21->ei21dsn))<<eol;\n           399 | \t\t\t\u00fc\n           400 | \t\t\tbreak;\n           401 | \t\tcase eiop23:\n           402 | \t\t\tif (dss->function == DSS::dump)\n           403 | \t\t\t\u00e4\n           404 | \t\t\t\tEIREC23 * rec23 = (EIREC23 *)(adreib->eirecptr);\n           405 | \t\t\t\tif(rec23->ei23vol_ && memcmp(rec23->e23bytes,nulls,8))\n           406 | \t\t\t\t\tnew DssDataset(job,\n           407 | \t\t\t\t\tmvsSTRING((char *)rec23->ei23dsn,sizeof(rec23->ei23dsn)),\n           408 | \t\t\t\t\tmvsSTRING((char *)rec23->ei23vser,6*rec23->ei23vol_),\n           409 | \t\t\t\t\tint(*(int *)(&rec23->e23sdsrg)));\n           410 | \t\t\t\u00fc\n           411 | \t\t\tadreib->eiretcod = eirc_ok;\n           412 | \t\t\tbreak;\n           413 | \t\tcase eiop25:\n           414 | \t\t\tbackspaceFlag = true;\n           415 | \t\t\tadreib->eiretcod =  eirc_ok;\n           416 | \t\t\tbreak;\n           417 | \t\tdefault:\n           418 | \t\t\tadreib->eiretcod =  eirc_ok;\n           419 | \t\t\tbreak;\n           420 | \t\t\u00fc\n           421 | \t\u00fc\n           422 | \tif (adreib->eirecptr&&adreib->eireclen>0)\n           423 | \t\u00e4\n           424 | \t\tif (trace)\n           425 | \t\t\tfwrite((char *)adreib->eirecptr,1,adreib->eireclen,trace);\n           426 | \t\tJOBENV::DEBUG(1,\"dump:\",(char *)adreib->eirecptr,adreib->eireclen);\n           427 | \t\u00fc\n           428 | \tJOBENV::DEBUG(3,\"UIM exit:\",adreib->eiretcod);\n           429 | \treturn int(adreib->eiretcod);\n           430 | \u00fc\n           431 |\n           432 | extern \"C\" int DBError(char * s)\n           433 | \u00e4\n           434 | \tMsg(10000+9704)<<s<<eol;\n           435 | \treturn 1;\n           436 | \u00fc\n           437 |\n0                                   * * * * *   E N D   O F   S O U R C E   * * * * *\n-\n\n15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(DSSMAIN)'                      30.11.12 08:25:29\n0                                    * * * * *   I N C L U D E S   * * * * *\n     1  =  //'ESA.PRJ.CBTDSSN.HPP(ISISDEF)'\n     2  =  //'CEE.SCEEH.H(STDIO)'\n     3  =  //'CEE.SCEEH.H(FEATURES)'\n     4  =  //'CEE.SCEEH.SYS.H(TYPES)'\n     5  =  //'CEE.SCEEH.H(STDLIB)'\n     6  =  //'CEE.SCEEH.H(BUILTINS)'\n     7  =  //'CEE.SCEEH.H(STDDEF)'\n     8  =  //'CEE.SCEEH.H(STRING)'\n     9  =  //'CEE.SCEEH.H(STRINGS)'\n    10  =  //'CEE.SCEEH.H(FCNTL)'\n    11  =  //'CEE.SCEEH.SYS.H(MODES)'\n    12  =  //'CEE.SCEEH.H(UNISTD)'\n    13  =  //'CEE.SCEEH.H(INTTYPES)'\n    14  =  //'CEE.SCEEH.H(STDINT)'\n    15  =  //'ESA.PRJ.CBTDSSN.HPP(MSGMGR)'\n    16  =  //'ESA.PRJ.CBTDSSN.HPP(MVSBASE)'\n    17  =  //'ESA.PRJ.CBTDSSN.HPP(MERROR)'\n    18  =  //'ESA.PRJ.CBTDSSN.HPP(DSNAMEUT)'\n    19  =  //'CEE.SCEEH.H(ASSERT)'\n    20  =  //'ESA.PRJ.CBTDSSN.HPP(MISC)'\n    21  =  //'CEE.SCEEH.H(TIME)'\n    22  =  //'ESA.PRJ.CBTDSSN.HPP(MCHAIN)'\n    23  =  //'ESA.PRJ.CBTDSSN.HPP(RARCSQL)'\n    24  =  //'ESA.PRJ.CBTDSSN.HPP(DSSCLAS)'\n    25  =  //'ESA.PRJ.CBTDSSN.HPP(DSSMAIN)'\n    26  =  //'ESA.PRJ.CBTDSSN.HPP(DSSDB)'\n    27  =  //'ESA.PRJ.CBTDSSN.HPP(JOBENV)'\n    28  =  //'ESA.PRJ.CBTDSSN.HPP(DSSFILE)'\n    29  =  //'ESA.PRJ.CBTDSSN.HPP(CASMIF)'\n    30  =  //'ESA.PRJ.CBTDSSN.HPP(ASMIF)'\n    31  =  //'ESA.PRJ.CBTDSSN.HPP(ZLIB)'\n    32  =  //'ESA.PRJ.CBTDSSN.HPP(ZCONF)'\n    33  =  //'ESA.PRJ.CBTDSSN.HPP(ADREIB)'\n    34  =  //'ESA.PRJ.CBTDSSN.HPP(ADRUFOB)'\n    35  =  //'ESA.PRJ.CBTDSSN.HPP(EIREC21)'\n    36  =  //'ESA.PRJ.CBTDSSN.HPP(EIREC23)'\n-\n-\n-\n-\n-\n-                                 * * * * *   E N D   O F   I N C L U D E S   * * * * *\n0\n15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(DSSMAIN)'                      30.11.12 08:25:29\n-                           * * * * *   M E S S A G E   S U M M A R Y   * * * * *\n0TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL\n                (U)       (S)         (E)        (W)          (I)\n     0           0         0           0          0            0\n0                    * * * * *   E N D   O F   M E S S A G E   S U M M A R Y   * * * * *\n0                        * * * * *   E N D   O F   C O M P I L A T I O N   * * * * *\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSSUIM": {"ttr": 97, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "1                                         High Level Assembler Option Summary                   (PTF UK75466)   Page    1\n-                                                                                            HLASM R6.0  2012/11/21 12.23\n0  No Overriding ASMAOPT Parameters\n   Overriding Parameters-  OBJECT,NODECK,LIST,TERM,NOXREF\n   No Process Statements\n\n\n   Options for this Assembly\n0  NOADATA\n     ALIGN\n     ASA\n     BATCH\n     CODEPAGE(047C)\n   NOCOMPAT\n   NODBCS\n 3 NODECK\n     DXREF\n     ESD\n   NOEXIT\n     FLAG(0,ALIGN,CONT,EXLITW,NOIMPLEN,NOPAGE0,PUSH,RECORD,NOSUBSTR,USING0)\n   NOFOLD\n   NOGOFF\n   NOINFO\n     LANGUAGE(EN)\n   NOLIBMAC\n     LINECOUNT(60)\n 3   LIST(121)\n     MACHINE(,NOLIST)\n     MXREF(SOURCE)\n 3   OBJECT\n     OPTABLE(UNI,NOLIST)\n   NOPCONTROL\n   NOPESTOP\n   NOPROFILE\n   NORA2\n   NORENT\n     RLD\n     RXREF\n     SECTALGN(8)\n     SIZE(MAX)\n   NOSUPRWARN\n     SYSPARM()\n 3   TERM(WIDE)\n   NOTEST\n     THREAD\n   NOTRANSLATE\n     TYPECHECK(MAGNITUDE,REGISTER)\n     USING(NOLIMIT,MAP,WARN(15))\n   NOWORKFILE\n 3 NOXREF\n\n   No Overriding DD Names\n1                                              External Symbol Dictionary                                       Page    2\n-Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                            HLASM R6.0  2012/11/21 12.23\n0UIMASM_   SD 00000001 00000000 000000F2             06\n CEESTART  ER 00000002\n UIM       ER 00000003\n1                                                                                                               Page    3\n   Active Usings: None\n0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 12.23\n0000000                00000 000F2     1 UIMASM_  CSECT\n                                       2 UIMASM_  AMODE 31\n                                       3 UIMASM_  RMODE ANY\n                                       4          PRINT ON,GEN\n0                                      6          CREGS USING\n ** ASMA057E Undefined operation code - CREGS\n ** ASMA435I Record 6 in ESA.PRJ.CBTDSSN.ASM(DSSUIM) on volume: USER01\n                                       7 *IMASM   EDCPRLG BASE=NONE\n                                       8 UIMASM   EDCPRLG BASE=NONE\n ** ASMA017W Undefined keyword parameter; default to positional, including keyword - EDCPR/BASE\n ** ASMA435I Record 177 in CEE.SCEEMAC(EDCPRLG) on volume: Z1DT12\n                                       9+***--------------------------------------------------------------------\n 000000                00000 00080    10+IHB0001DS DSECT                                                         01-EDCPR\n 000000                               11+         DS    D                                                        01-EDCPR\n 000008                               12+         DS    CL(120+0)                                                01-EDCPR\n 000080                00080 00000    13+         ORG   IHB0001DS                                                01-EDCPR\n 000000                               14+         DS    CL(120+8)                                                01-EDCPR\n 000080                00080 00080    15+         ORG                                                            01-EDCPR\n 000080                               16+         DS    0D                                                       01-EDCPR\n                       00078          17+IHB0001LG EQU   *-IHB0001DS-8                                           01-EDCPR\n 000000                00000 000F2    18+UIMASM_  CSECT                                                          01-EDCPR\n                                      19+*--------------------------------------------------------------\n 000000                               20+         DS    0H                                                       01-EDCPR\n                  R:F  00000          21+         USING *,15                                                     01-EDCPR\n 000000 47F0 F040            00040    22+UIMASM   B     IHB0001B       branch around prologue's constant areas   01-EDCPR\n                                      23+* PPA1 constant area\n 000004 14                            24+         DC    AL1(IHB0001N+4-*)   offset to the name                   01-EDCPR\n 000005 CE                            25+         DC    X'CE' .             CEE signature                        01-EDCPR\n 000006 A0                            26+         DC    X'A0' .             CEE flags (ext proc, has DSA)        01-EDCPR\n 000007 10                            27+         DC    AL1(0+0+16)      .  member flags                         01-EDCPR\n 000008 0000001C                      28+         DC    AL4(IHB0001P) .       A(PPA2)                            01-EDCPR\n 00000C 00000000                      29+         DC    AL4(0) .              A(PPA3) or zero                    01-EDCPR\n 000010 00000078                      30+         DC    AL4(IHB0001LG)        total DSA length                   01-EDCPR\n 000014 0006                          31+IHB0001N DC    AL2(6)      .       length of name                       01-EDCPR\n 000016 E4C9D4C1E2D4                  32+         DC    C'UIMASM'           untruncated name                     01-EDCPR\n                                      33+*--------------------------------------------------------------\n                                      34+         EXTRN CEESTART                                                 01-EDCPR\n                                      35+*---------------------------------------------------------------\n                                      36+* PPA2 constant area\n 00001C                               37+IHB0001P DS    0F                  force fwrd alignment                 01-EDCPR\n 00001C 03                            38+         DC    X'03' .             member identifier (C)                01-EDCPR\n 00001D 00                            39+         DC    X'00' .             member subid                         01-EDCPR\n 00001E 33                            40+         DC    X'33'     .         plistfmt/runenv (nibbles)            01-EDCPR\n 00001F 00                            41+         DC    X'00' .             CEE control block level              01-EDCPR\n 000020 00000000                      42+         DC    AL4(CEESTART)                                            01-EDCPR\n 000024 00000000                      43+         DC    AL4(0)                A(PPA4) or zero                    01-EDCPR\n 000028 0000002C                      44+         DC    AL4(IHB0001T) .       A(time stamp) or zero              01-EDCPR\n                                      45+*\n                                      46+* Time stamp area\n 00002C                               47+IHB0001T DS    0F                                                       01-EDCPR\n 00002C F2F0F1F2                      48+         DC    CL4'2012'  .        yyyy                            @P1A 01-EDCPR\n 000030 F1F1F2F1                      49+         DC    CL4'1121'   .       mmdd                                 01-EDCPR\n 000034 F1F2F2F3F0F0                  50+         DC    CL6'122300'     .   hhmmss                               01-EDCPR\n 00003A F0F1                          51+         DC    CL2'01' .           version                              01-EDCPR\n1                                                                                                               Page    4\n   Active Usings: UIMASM_,R15\n0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 12.23\n000003C F0F1F0F0                      52+         DC    CL4'0100' .         release / modif level                01-EDCPR\n                                      53+*\n 000040                               54+IHB0001B DS    0H                                                       01-EDCPR\n                                      55+***--------------------------------------------------------------------\n 000040 90EC D00C            0000C    56+         STM   14,12,12(13) .      save Caller's registers              01-EDCPR\n                                      57+***--------------------------------------------------------------------\n 000044 5820 D04C            0004C    58+         L     2,76(,13)           get current NAB                      01-EDCPR\n 000048 5800 F010            00010    59+         L     0,16(,15)           size of DSA                          01-EDCPR\n 00004C 1E02                          60+         ALR   0,2                 old NAB + DSA size = new NAB         01-EDCPR\n 00004E 5500 C00C            0000C    61+         CL    0,12(,12)           check for stack overflow             01-EDCPR\n 000052 47D0 F05C            0005C    62+         BNH   *+10                branch if enough space               01-EDCPR\n 000056 58F0 C074            00074    63+         L     15,116(,12)         load overflow rtn entry address      01-EDCPR\n 00005A 05EF                          64+         BALR  14,15               invoke overflow routine              01-EDCPR\n                                      65+* at this point R0 has the new NAB, R2 has the newly acquired address\n 00005C 58F0 D048            00048    66+         L     15,72(,13)                                               01-EDCPR\n 000060 90F0 2048            00048    67+         STM   15,0,72(2)                                               01-EDCPR\n 000064 9210 2000      00000          68+         MVI   0(2),X'10'                                               01-EDCPR\n 000068 50D0 2004            00004    69+         ST    13,4(,2)            back chain DSA                       01-EDCPR\n 00006C 18D2                          70+         LR    13,2                activate this DSA                    01-EDCPR\n                                      71+***--------------------------------------------------------------------\n                                      72+         DROP  15                                                       01-EDCPR\n 00006E 0530                          73+         BALR  3,0                                                      01-EDCPR\n                  R:3  00070          74+         USING *,3                                                      01-EDCPR\n                                      75+***--------------------------------------------------------------------\n0                                     77 *------------------------------------------------------------------*\n                                      78 * Get UIM address                                                  *\n                                      79 *------------------------------------------------------------------*\n 000070 0000 0000 0000       00000    80          LARL  R15,=V(UIM)          Load the Vcon for printf ==> R15\n ** ASMA044E Undefined symbol - R15\n ** ASMA029E Incorrect register specification - R15\n ** ASMA435I Record 13 in ESA.PRJ.CBTDSSN.ASM(DSSUIM) on volume: USER01\n 000076 0000                          81          BALR  R14,R15              Call UIM\n ** ASMA044E Undefined symbol - R14\n ** ASMA029E Incorrect register specification - R14\n ** ASMA044E Undefined symbol - R15\n ** ASMA029E Incorrect register specification - R15\n ** ASMA435I Record 14 in ESA.PRJ.CBTDSSN.ASM(DSSUIM) on volume: USER01\n0                                     83 *        EDCEPIL ,                          RETURN\n                                      84          EDCEPIL ,                          RETURN\n 000078 58D0 D004            00004    85+         L     13,4(,13)          address of caller's save area         01-EDCEP\n 00007C 58E0 D00C            0000C    86+         L     14,12(,13)         restore R14                           01-EDCEP\n 000080 982C D01C            0001C    87+         LM    2,12,28(13)        restore R2 - R12                      01-EDCEP\n 000084 051E                          88+         BALR  1,14               return                                01-EDCEP\n 000086 00000000                      89+         DC    AL4(UIMASM)                                              01-EDCEP\n0000090                               91          LTORG\n 000090 00000000                      92                =V(UIM)\n0                                     94          ADREID0\n1                                                                                                               Page    5\n   Active Usings: UIMASM_+X'70',R3\n0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 12.23\n0                                     96+*%SKPEID0:;\n                                      97+*@EJECT;\n                                      98+* /* *************************************************************** */\n                                      99+* /*                                                                 */\n                                     100+* /* $MAC(ADREID0)  COMP(DF175) PROD(5694-A01): DFSMSdss         @P0A*/\n                                     101+* /*                                                                 */\n                                     102+* /*   MACRO NAME:  ADREID0                                          */\n                                     103+* /*                                                                 */\n                                     104+* /*   DESCRIPTIVE NAME:  EXIT IDENTIFICATION BLOCK                  */\n                                     105+* /*                                                                 */\n                                     106+* /*******************************************************************/\n                                     107+* /*PROPRIETARY V3 STATEMENT                                         */\n                                     108+* /*LICENSED MATERIALS - PROPERTY OF IBM                             */\n                                     109+* /*\"RESTRICTED MATERIALS OF IBM\"                                    */\n                                     110+* /*5694-A01                                                         */\n                                     111+* /*COPYRIGHT 1992,2011  IBM CORP.                                   */\n                                     112+* /*END PROPRIETARY V3 STATEMENT                                     */\n                                     113+* /*******************************************************************/\n                                     114+* /* LICENSED MATERIALS - PROPERTY OF IBM.                           */\n                                     115+* /*-----------------------------------------------------------------*/\n                                     116+* /*                                                                 */\n                                     117+* /*   STATUS:  VERSION  1  RELEASE  13  LEVEL  0                @DMC*/\n                                     118+* /*                                                                 */\n                                     119+* /*   FUNCTION:                                                     */\n                                     120+* /*              THE EXIT IDENTIFICATION BLOCK IS INITIALIZED       */\n                                     121+* /*    BY DFDSS PRIOR TO CALLING THE USER INTERACTION MODULE        */\n                                     122+* /*    AND ACTS AS THE INTERFACE BETWEEN DFDSS THE USER INTERACTION */\n                                     123+* /*    MODULE EXITS.                                                */\n                                     124+* /*                                                                 */\n                                     125+* /*******************************************************************/\n                                     126+* /*   Note:  Because this macro is published in the books and       */\n                                     127+* /*   shipped to customers, it is important to not disclose         */\n                                     128+* /*   internal information in the comments on the individual field  */\n                                     129+* /*   names below.  Also, all comments should be in upper case (to  */\n                                     130+* /*   maintain a consistent style for the pubs).                    */\n                                     131+* /*******************************************************************/\n                                     132+* /*                                                                 */\n                                     133+* /*   INVOCATION:  PLS -- INCLUDE ADREID0                           */\n                                     134+* /*                BAL -- ADREID0                                   */\n                                     135+* /*                                                                 */\n                                     136+* /*   CHANGE ACTIVITY:  NEW MACRO                               @V21*/\n                                     137+* /*   ADD UIM EXITS 16, 17, 18 AND 19.                         @V22G*/\n                                     138+* /*   IMPLEMENT PL02135 FIX                                 @V23N253*/\n                                     139+* /*       PL02135      09/03/86   MAPPING PROBLEM           @LA02135*/\n                                     140+* /*   ADD NEW FLAG WORD                        3/25/87      @LA09760*/\n                                     141+* /*   CORRECT ASSEMBLER EIXERR EQUATE TO MATCH PLS          @V23N298*/\n                                     142+* /*   ADD SUPPORT FOR UIM-20                         KUI0280 @V24AEG*/\n                                     143+* /*   ADDED SUPPORT FOR UIM-21, 22, AND 23                      @V25*/\n                                     144+* /*   CHANGED EI22BCAT FLAG TO EI22BMIG FLAG       07/07/88   @DS007*/\n                                     145+* /*   ADD EIXWNGOK TO INFORM UIM THAT ALL WARNINGS 12/28/89 @LA54862*/\n                                     146+* /*     WERE NOT FATAL                                              */\n                                     147+* /*   ADD EIREC14 TO MAP THE RECORD FOR EXIT 14    07/05/90 @LA65381*/\n                                     148+* /*   VRRDS DATASET SUPPORT                         10APR91 @LA82401*/\n                                     149+* /*   MAINTENANCE ROLL-UP                           14JUN91 @NA00267*/\n                                     150+* /*   EI22LIKE BIT ADDED FOR RESTORE/COPY TO LIKE DEVICE    @LA71949*/\n1                                                                                                               Page    6\n   Active Usings: UIMASM_+X'70',R3\n0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 12.23\n0                                    151+* /*                IN AN SMS ENVIRONMENT            18JUN91 @LA71949*/\n                                     152+* /*   EI22EXTR BIT ADDED FOR RESTORE TO THE SAME VOLUME     @NA06820*/\n                                     153+* /*   ADDED SUPPORT FOR UIM-24                                  @V26*/\n                                     154+* /*                THAT IS BEING EXTENT REDUCED     05NOV91 @NA06820*/\n                                     155+* /*   VOLSLST, EXITRECL CONSTANTS ADDED             06NOV91 @NA08383*/\n                                     156+* /*   ADDED EIREC00 (FWD FIT OF PN05364)            05JAN93 @OY57120*/\n                                     157+* /*   MODIFIED TO SUPPORT OY60302 SECURITY APAR     19JAN93 @OY60302*/\n                                     158+* /*   MADE EI22SFLG SOURCE DSET FLAGS AVAILABLE     06AUG93 @OY62462*/\n                                     159+* /* $L4=BWO,HDZ11B0,20SEP93,TPCDDR: BACKUP WHILE OPEN SUPPORT   @L4A*/\n                                     160+* /*   CHANGES FOR PARTIAL/INCOMPLETE RECALL         26JAN94 @OW01655*/\n                                     161+* /* $RLS=HDZ11C0,26JUL94,TPCJT: SDSH/RLS support for V1.3.0     @RLS*/\n                                     162+* /*   SUPERCEDE OUT OW01655-Phase 1 Partial RECALL  22JUL94 @OW06093*/\n                                     163+* /*   Design change to inform UIM when track is bad 16AUG94 @OW07425*/\n                                     164+* /* $RLS=HDZ11C0,23FEB95,TPCJT: SDSH/RLS support for V1.3.0     @RLS*/\n                                     165+* /* AX cell support for PDSs                        05Apr95 @K131935*/\n                                     166+* /*   Pass DS byte count in option 23 for PSE       24FEB95 @OW11555*/\n                                     167+* /*   MSGIEV167 during assemble (KJT0057)           05SEP95 @OW15420*/\n                                     168+* /*   CHANGES TO SUPPORT DSSXMAPI                   14AUG95 @OW13783*/\n                                     169+* /* RECOMPILE FOR AE OW14125/OW13783                18OCT95 @OW16394*/\n                                     170+* /* AE FIX FOR OW16394 - RESHIP, NO CODE CHANGE     24OCT95 @OW16551*/\n                                     171+* /*   DEFINE NEW EI22IMS AND EI22BWOE FIELDS FOR    14NOV95 @OW15980*/\n                                     172+* /*   IMS BWO SUPPORT FOR DFSMS 1.C.0               18MAR96 @OW15980*/\n                                     173+* /* Define EI00SENQ to prevent lockout with hsm     04Jun96 @OW20023*/\n                                     174+* /* $RLSCDS=HDZ11D0,09Jul96,TPCMAH: RLS hsm CDS     09Jul96  @RLSCDS*/\n                                     175+* /* ADD EIDDOF1, EIDDOF2 FOR XMAPI                  12AUG96 @OW21750*/\n                                     176+* /* AE FIX FOR OW21750. ADD EIXTWERR FOR XMAPI      26AUG96 @OW22314*/\n                                     177+* /* ADD EIXTRERR FOR XMAPI                          18SEP96 @OW22673*/\n                                     178+* /* APPLICATION INTERFACE EXTENSIONS.               12MAR97 @OW25343*/\n                                     179+* /* ADD EI00NONF TO EIREC00 FOR NO IGWNOTIF CALL    11JUL97 @OW28223*/\n                                     180+* /* REMOVE EIDDOF1, EIDDOF2 AND ADD EIXTRC32        31MAY98 @OW33495*/\n                                     181+* /* PASS DCB@ & WRITING TRAILER FLAG IN EXIT 6      01AUG98 @OW34887*/\n                                     182+* /* PASS WTO PLIST DURING XMAPI EIOP11              16DEC98 @OW36779*/\n                                     183+* /* RECOMPILE FOR AE OW36779                        18DEC98 @OW36834*/\n                                     184+* /* $FSM=HDZ11F0,22JAN99,TPCGN: Fast Second Migrate 22JAN99     @FSM*/\n                                     185+* /* ADD EI00NOLK TO EIREC00 FOR NO ADRLOCK ENQ/DEQ  25JAN00 @OW42942*/\n                                     186+* /* ADD EI22DB2 BIT TO EXIT 22 FOR API EXTENSION    16JUN00 @OW45048*/\n                                     187+* /* $ALF=HDZ11H0,15JUL02,TPCYLD: APPLICATION LEVEL FAST         @ALF*/\n                                     188+* /*  REPLICATION SUPPORT - ADDED EI00NENQ EI00BSEC EI00SVOL     @ALF*/\n                                     189+* /* Add 'Output Volume Close' call to exit 26       04DEC02 @OW57536*/\n                                     190+* /*   - add EI26VCLO                                04DEC02 @OW57536*/\n                                     191+* /* Corrected misplaced comments                    25SEP03 @OA05056*/\n                                     192+* /* $IBC=HDZ1180,15MAR05,TPCRSG: IMS BWO SUPPORT FOR            @IBC*/\n                                     193+* /*      LOGICAL DATA SET COPY                                  @IBC*/\n                                     194+* /* $PDC=HDZ11L0,02JUN05,TPCANW: Physical Data Set Copy         @PDC*/\n                                     195+* /* ADDED CANDIDATE WITH SPACE BIT FOR E27/E20 NEEDS TO BE  @K180227*/\n                                     196+* /*   WHEN VVRCANSP IS ON TO INDICATE THAT THE EI27DRBA     @K180227*/\n                                     197+* /*   SHOULD NOT BE CONSIDERED TO BE PART OF THE EI27DSHA   @K180227*/\n                                     198+* /* ADDED E27TRACF BIT TO PLX WAS IN ASM BUT NOT IN PLX     @K180278*/\n                                     199+* /* ADDED COMMENT REGARDING THE EXIT 27 ESDS BITS           @K180512*/\n                                     200+* /* REMOVED CANDIDATE WITH SPACE INDICATORS       10JAN06   @K180724*/\n                                     201+* /* MOVED E27TRACF OUT OF EXIT 23 AND INTO EXIT27 25MAY06   @OA16588*/\n                                     202+* /*      (ONLY WRONG IN THE PL/X)                           @OA16588*/\n                                     203+* /* FIX ASSEMBLER SO IT COMPILES (NO FIELD CHANGES) 18JUL06 @OA17350*/\n                                     204+* /* $TPE=K190406,06NOV06,TPCANW: TAPE ENCRYPTION SUPPORT        @TPE*/\n                                     205+* /* $P0=K1A1264,HDZ1A10,18DEC07,TPCCK: Restore F9 info          @P0A*/\n1                                                                                                               Page    7\n   Active Usings: UIMASM_+X'70',R3\n0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 12.23\n0                                    206+* /* $XES=OA22125,13MAY08,TPCJPE: JAG 3 XMEM SUPPORT             @XES*/\n                                     207+* /* $E2=EAVR2,HDZ1B10,29AUG08,TPCJPE: EAVR2 CODE SUPPORT        @E2A*/\n                                     208+* /* $CE=K1C0001,HDZ1C10,09JAN09,TPCRSG: CA Reclaim Enablement   @CEA*/\n                                     209+* /* FIXING BAD DECLARES IN EXIT 28                  01JUN09 @OA29235*/\n                                     210+* /* FIXING BAD DECLARES IN EXIT 28 (CA Reclaim)     01JUL09 @K1C0372*/\n                                     211+* /* $P1=K1C1182,HDZ1C10,22DEC09,TPCANW: Max Exit DCL        @K1C1182*/\n                                     212+* /* $DM=K1D0020,HDZ1D10,16FEB10,TPCANW: EXIT 29                 @DMA*/\n                                     213+* /* $P2= OA37260 D10 09AUG11 TPCRSG : zOSMF support             @P2A*/\n                                     214+* /*                                                                 */\n                                     215+* /*   CHANGE DATE: 09AUG11                                      @P2C*/\n                                     216+* /*                                                                 */\n                                     217+* /* *************************************************************** */\n                                     218+*%GOTO PLSEID0;           /* GO TO THE PLS VERSION */\n 000094 C5C9C4C2                     219+ADREIBID DC    C'EIDB'              /* BLOCK IDENTIFIER              */ 01-ADREI\n 000098                              220+ADREIB@  DS    F'0'                                                     01-ADREI\n 00009C 0000                         221+EIOP00   DC    X'0000'              /* FUNCTION STARTUP ENTRY        */ 01-ADREI\n 00009E 0001                         222+EIOP01   DC    X'0001'              /* READING SYSIN RECORD          */ 01-ADREI\n 0000A0 0002                         223+EIOP02   DC    X'0002'              /* PRINTING SYSPRINT RECORD      */ 01-ADREI\n 0000A2 0003                         224+EIOP03   DC    X'0003'              /* READING TAPE BLOCK RECORD     */ 01-ADREI\n 0000A4 0004                         225+EIOP04   DC    X'0004'              /* READING TAPE LOGICAL RECORD   */ 01-ADREI\n 0000A6 0005                         226+EIOP05   DC    X'0005'              /* WRITING TAPE LOGICAL RECORD   */ 01-ADREI\n 0000A8 0006                         227+EIOP06   DC    X'0006'              /* WRITING TAPE BLOCK RECORD     */ 01-ADREI\n 0000AA 0007                         228+EIOP07   DC    X'0007'              /* READING DISK TRACK            */ 01-ADREI\n 0000AC 0008                         229+EIOP08   DC    X'0008'              /* WRITING DISK TRACK            */ 01-ADREI\n 0000AE 0009                         230+EIOP09   DC    X'0009'              /* READING UTILITY SYSPRINT      */ 01-ADREI\n 0000B0 000A                         231+EIOP10   DC    X'000A'              /* WRITING UTILITY SYSPRINT      */ 01-ADREI\n 0000B2 000B                         232+EIOP11   DC    X'000B'              /* WRITING WTO MESSAGE           */ 01-ADREI\n 0000B4 000C                         233+EIOP12   DC    X'000C'              /* WRITING WTOR MESSAGE          */ 01-ADREI\n 0000B6 000D                         234+EIOP13   DC    X'000D'              /* PRESENTING ADRUFO RECORD      */ 01-ADREI\n 0000B8 000E                         235+EIOP14   DC    X'000E'              /* FUNCTION TERMINATION ENTRY    */ 01-ADREI\n 0000BA 000F                         236+EIOP15   DC    X'000F'              /* PRESENTING WTOR RESPONSE      */ 01-ADREI\n 0000BC 0010                         237+EIOP16   DC    X'0010'              /* TAPE VOL SEC/VERIFY       @V22*/ 01-ADREI\n 0000BE 0011                         238+EIOP17   DC    X'0011'              /* TAPE VOL MOUNT(NON-SPEC)  @V22*/ 01-ADREI\n 0000C0 0012                         239+EIOP18   DC    X'0012'              /* INSERT RESTORE RECORD     @V22*/ 01-ADREI\n 0000C2 0013                         240+EIOP19   DC    X'0013'              /* OUTPUT TAPE ERROR         @V22*/ 01-ADREI\n 0000C4 0014                         241+EIOP20   DC    X'0014'              /* VOLUME NOTIFICATION       @V24*/ 01-ADREI\n 0000C6 0015                         242+EIOP21   DC    X'0015'              /* DATA SET VERIFICATION     @V25*/ 01-ADREI\n 0000C8 0016                         243+EIOP22   DC    X'0016'              /* BYPASS VERIFICATION       @V25*/ 01-ADREI\n 0000CA 0017                         244+EIOP23   DC    X'0017'              /* DS PROCESSED NOTIFICATION @V25*/ 01-ADREI\n 0000CC 02C4                         245+VOLSLST  DC    X'02C4'              /* MAX SIZE OF VOLSER LIST          01-ADREI\n                                     246+*                                      FOR EIREC23 (118 * 6) @NA08383*/\n 0000CE 0018                         247+EIOP24   DC    X'0018'          /* CONCURRENT COPY INIT COMPLETE @V26*/ 01-ADREI\n 0000D0 0019                         248+EIOP25   DC    X'0019'              /* BACKSPACE INPUT TAPE  @OW13783*/ 01-ADREI\n 0000D2 001A                         249+EIOP26   DC    X'001A'              /* VOLUME OPEN FOR O/P   @OW15980*/ 01-ADREI\n 0000D4 001B                         250+EIOP27   DC    X'001B'              /* PHYSICAL DS PROCESSED     @PDC*/ 01-ADREI\n 0000D6 001C                         251+EIOP28   DC    X'001C'              /* TARGET ALLOCATION         @E2C*/ 01-ADREI\n 0000D8 001D                         252+EIOP29   DC    X'001D'              /* Reserved                  @P2C*/ 01-ADREI\n 0000DA 001D                         253+EIMAXOP  DC    X'001D'              /* MAX VALID EXIT NUMBER     @DMC*/ 01-ADREI\n 0000DC 0030                         254+EXITRECL DC    X'0030'              /* EXIT RECORD LENGTH    @NA08383*/ 01-ADREI\n 0000DE 0000                         255+EIRC00   DC    X'0000'              /* CONTINUE NORMAL PROCESSING    */ 01-ADREI\n 0000E0 0004                         256+EIRC04   DC    X'0004'              /* RECORD REPLACED               */ 01-ADREI\n 0000E2 0008                         257+EIRC08   DC    X'0008'              /* INSERT RECORD                 */ 01-ADREI\n 0000E4 000C                         258+EIRC12   DC    X'000C'              /* DELETE RECORD                 */ 01-ADREI\n 0000E6 0010                         259+EIRC16   DC    X'0010'              /* RECORD MODIFIED               */ 01-ADREI\n 0000E8 0014                         260+EIRC20   DC    X'0014'              /* DISCONNECT EXIT               */ 01-ADREI\n1                                                                                                               Page    8\n   Active Usings: UIMASM_+X'70',R3\n0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 12.23\n00000EA 0018                         261+EIRC24   DC    X'0018'              /* SELECT USER STATISTICAL RECS  */ 01-ADREI\n 0000EC 001C                         262+EIRC28   DC    X'001C'              /* WTOR RESPONSE                 */ 01-ADREI\n 0000EE 0020                         263+EIRC32   DC    X'0020'              /* TERMINATE FUNCTION        @V22*/ 01-ADREI\n 0000F0 0024                         264+EIRC36   DC    X'0024'              /* TERMINATE DATA SET ONLY   @V25*/ 01-ADREI\n 000000                00000 0002C   265+ADREIB   DSECT                                                          01-ADREI\n 000000                              266+EIDLLEN  DS    H                    /* LENGTH OF ADREIB - 2      @V22*/ 01-ADREI\n 000002                              267+EIID     DS    CL4                  /* BLOCK IDENTIFIER EBCDIC \"EID0\"*/ 01-ADREI\n 000006                              268+EITSKID  DS    FL4                  /* TASK ID NUM OF CALLER @LA02135*/ 01-ADREI\n 00000A                              269+EIXALLOW DS    0XL4                 /* USER EXIT ALLOWANCE OPTIONS   */ 01-ADREI\n 00000A                              270+EIXALOW0 DS    X                    /* ALLOWANCE OPTIONS BYTE 1      */ 01-ADREI\n                       00080         271+EIXREP   EQU   X'80'                /* ALLOW REPLACE OF RECORD       */ 01-ADREI\n                       00040         272+EIXINS   EQU   X'40'                /* ALLOW INSERT OF RECORD        */ 01-ADREI\n                       00020         273+EIXDEL   EQU   X'20'                /* ALLOW DELETE OF RECORD        */ 01-ADREI\n                       00010         274+EIXMOD   EQU   X'10'                /* ALLOW MODIFICATION OF RECORD  */ 01-ADREI\n                       00008         275+EIXDIS   EQU   X'08'                /* ALLOW DISCONNECT OF EXIT      */ 01-ADREI\n                       00004         276+EIXWTOR  EQU   X'04'                /* ALLOW WTOR RESPONSE           */ 01-ADREI\n                       00002         277+EIXSTAT  EQU   X'02'                /* ALLOW SELECTION OF USER STATS */ 01-ADREI\n                       00001         278+EIXTERM  EQU   X'01'                /* ALLOW TERMINATION OF FUNC @V22*/ 01-ADREI\n 00000B                              279+EIXALOW1 DS    X                    /* ALLOWANCE OPTIONS BYTE 2      */ 01-ADREI\n                       00080         280+EIXTDSET EQU   X'80'                /* ALLOW DATA SET TERMINATION@V25*/ 01-ADREI\n 00000C                              281+EIXALOW2 DS    X                    /* ALLOWANCE OPTIONS BYTE 3      */ 01-ADREI\n 00000D                              282+EIXALOW3 DS    X                    /* ALLOWANCE OPTIONS BYTE 4      */ 01-ADREI\n                       00080         283+EIXERR   EQU   X'80'                /* DIS-ALLOWED OPTION    @V23N298*/ 01-ADREI\n 00000E                              284+EIOPTION DS    H                    /* PROCESSING OPTION             */ 01-ADREI\n 000010                              285+EIRETCOD DS    H                    /* EXIT RETURN CODE              */ 01-ADREI\n 000012                              286+EIRECALN DS    FL4                  /* RECORD AREA LENGTH    @LA02135*/ 01-ADREI\n 000016                              287+EIRECLEN DS    FL4                  /* ORIGINAL RECORD LEN   @LA02135*/ 01-ADREI\n 00001A                              288+EIRECPTR DS    FL4                  /* ORIGINAL RECORD ADDR  @LA02135*/ 01-ADREI\n 00001E                              289+EIUSEPTR DS    FL4                  /* USER DATA AREA PTR    @V23N253*/ 01-ADREI\n 000022                              290+EIDDID   DS    0FL4                 /* EIOP06 DDN/VOLID PTR  @OW36779*/ 01-ADREI\n 000022                              291+EIXMWPL  DS    FL4                  /* EIOP11 WTO PLIST PTR  @OW36779*/ 01-ADREI\n 000026                              292+EIXFLAGS DS    0XL4                 /* OTHER FLAGS           @LA09760*/ 01-ADREI\n 000026                              293+EIXFLAG0 DS    X                    /* FLAG BYTE 0           @LA09760*/ 01-ADREI\n                       00080         294+EIXABEND EQU   X'80'                /* ABEND MESSAGE FLAG    @LA09760*/ 01-ADREI\n                       00040         295+EIXNTERR EQU   X'40'                /* NON-TAPE ERR MSG FLAG @LA09760*/ 01-ADREI\n                       00020         296+EIXWNGOK EQU   X'20'                /* WARNINGS ARE OK  FLAG @LA54862*/ 01-ADREI\n                       00010         297+EIXTRKER EQU   X'10'                /* track is in error     @OW07425*/ 01-ADREI\n 000027                              298+EIXFLAG1 DS    X                    /* FLAG BYTE 1           @LA09760*/ 01-ADREI\n                       00080         299+EIXTRC32 EQU   X'80'                /* UIM SET EIRETCOD 32   @OW33495*/ 01-ADREI\n                       00020         300+EIXTDUMS EQU   X'20'                /* DUMMY SOURCE TAPE     @OW13783*/ 01-ADREI\n                       00010         301+EIXTDUMT EQU   X'10'                /* DUMMY TARGET TAPE     @OW13783*/ 01-ADREI\n                       00008         302+EIXTISXM EQU   X'08'                /* APPL USING XMAPI      @OW13783*/ 01-ADREI\n                       00004         303+EIXDASYS EQU   X'04'                /* XMAPI ALLOCATION ERR  @OW21750*/ 01-ADREI\n                       00002         304+EIXTWERR EQU   X'02'                /* XMAPI TAPE WRITE ERR  @OW22314*/ 01-ADREI\n                       00001         305+EIXTRERR EQU   X'01'                /* XMAPI TAPE READ ERR   @OW22673*/ 01-ADREI\n 000028                              306+EIXFLAG2 DS    X                    /* FLAG BYTE 2           @LA09760*/ 01-ADREI\n 000029                              307+EIXFLAG3 DS    X                    /* FLAG BYTE 3           @LA09760*/ 01-ADREI\n 00002C                              308+         DS    0F                   /* FORCE WORD BOUNDARY           */ 01-ADREI\n                       0002C         309+EIDBLEN  EQU   *-ADREIB             /* LENGTH OF THE EIB BLOCK       */ 01-ADREI\n                                     310+*/********************************************************************/\n                                     311+*/* RECORD PRESENTED BY EXIT 06 (WRITE PHYSICAL TAPE):       @OW34887*/\n                                     312+*/* EIDDINFO IS BASED ON (EIDDID).                           @OW34887*/\n                                     313+*/********************************************************************/\n 000000                00000 00014   314+EIDDINFO DSECT                                                          01-ADREI\n 000000                              315+EIDDNAME DS    CL8                  /* DDNAME LEFT-JUSTIFIED  @V22AEG*/ 01-ADREI\n1                                                                                                               Page    9\n   Active Usings: UIMASM_+X'70',R3\n0D-Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 12.23\n0000008                              316+EIVOLID  DS    CL6                  /* VOLUME SERIAL NO.      @V22AEG*/ 01-ADREI\n 00000E                              317+EIRETC   DS    XL1                  /* RETURN CODE            @V22AEG*/ 01-ADREI\n 00000F                              318+EI06FLGS DS    XL1                  /* EXIT 06 FLAGS         @OW34887*/ 01-ADREI\n                       00080         319+EI06FTRL EQU   X'80'                /* RESERVED FOR HSM USE  @OW34887*/ 01-ADREI\n                       00040         320+EI06THWE EQU   X'40'                /* RESERVED FOR HSM USE      @TPE*/ 01-ADREI\n                                     321+*                                   /* OUTPUT DEVICE ENCRYPTS    @TPE*/\n 000010                              322+EI06DCB@ DS    AL4                  /* RESERVED FOR HSM USE  @OW34887*/ 01-ADREI\n                                     323+*        DS    CL4                  /* RESERVED              @OW34887*/\n                                     324+*/********************************************************************/\n                                     325+*/* RECORD PRESENTED BY EXIT 00 (FUNCTION STARTUP):          @OY57120*/\n                                     326+*/********************************************************************/\n 000000                00000 00010   327+EIREC00  DSECT                      /*                       @OY57120*/ 01-ADREI\n 000000                              328+EI00SBPL DS    XL1                  /* SHARED SUBPOOL NUMBER @OY57120*/ 01-ADREI\n 000001                              329+EI00FLGS DS    XL1                  /* startup flags         @OW20023*/ 01-ADREI\n                       00080         330+EI00SENQ EQU   X'80'                /* short VTOC enqueue    @OW20023*/ 01-ADREI\n                       00040         331+EI00NONF EQU   X'40'                /* 1 = Don't allow IGWNOTIF call,   01-ADREI\n                                     332+*                                    0 = Allow IGWNOTIF call @OW28223*/\n                       00020         333+EI00NOLK EQU   X'20'                /* 1= NO ADRLOCK ENQ/DEQ @OW42942*/ 01-ADREI\n                       00010         334+EI00NENQ EQU   X'10'                /* 1= NO INPUT VOLUME               01-ADREI\n                                     335+*                                      SERIALIZATION.\n                                     336+*                                      VALID DURING PHYSICAL COPY AND\n                                     337+*                                      DUMP FUNCTION STARTUPS    @ALF*/\n                       00008         338+EI00BSEC EQU   X'08'                /* 1= BYPASS SECURITY VERIFICATION. 01-ADREI\n                                     339+*                                      VALID DURING COPY FULL/TRACKS,\n                                     340+*                                      DUMP FULL/TRACKS, AND RESTORE\n                                     341+*                                      FULL/TRACKS FUNCTION STARTUPS\n                                     342+*                                                                @ALF*/\n                       00004         343+EI00MVOLRECOV EQU X'04'             /* 1=CALLER IS PERFORMING A MULTI   01-ADREI\n                                     344+*                                      VOLUME RECOVERY USING PHYSICAL\n                                     345+*                                      DATA SET RESTORE AND IT IS\n                                     346+*                                      ACCEPTABLE FOR DFSMSDSS TO\n                                     347+*                                      SCRATCH PREALLOCATED TARGET\n                                     348+*                                      DATA SETS THAT ARE NOT THE\n                                     349+*                                      CORRECT SIZE              @PDC*/\n                       00002         350+EI00BSER EQU   X'02'                /* 1=BYPASS SERIALIZATION OF THE    01-ADREI\n                                     351+*                                      DATA SETS BEING RESTORED DURING\n                                     352+*                                      A PHYSICAL DATA SET RESTORE\n                                     353+*                                      OPERATION                 @PDC*/\n                                     354+*        EQU   X'01'                /* UNUSED                    @PDC*/\n 000002                              355+EI00SVOL DS    CL6                  /* SOURCE VOLSER. VALID DURING      01-ADREI\n                                     356+*                                      COPY FULL/TRACKS, DUMP\n                                     357+*                                      FULL/TRACKS, AND RESTORE\n                                     358+*                                      FULL/TRACKS FUNCTION STARTUPS.\n                                     359+*                                      FOR RESTORE, THIS FIELD CONTAINS\n                                     360+*                                      VOLSER OF THE INPUT VOLUME\n                                     361+*                                      WHERE THE DUMP DATA SET\n                                     362+*                                      RESIDES                   @ALF*/\n 000008                              363+EI00FLG2 DS    XL1                  /* 2ND FLAG AREA             @XES*/ 01-ADREI\n                       00080         364+EI00SWNCRYPT EQU X'80'              /* SOFTWARE ENCRYPTION WAS   @XES*/ 01-ADREI\n                                     365+*                                   /* REQUESTED (RSA OR         @XES*/\n                                     366+*                                   /* KEYPASSWORD WAS           @XES*/\n                                     367+*                                   /* SPECIFIED)                @XES*/\n                       00040         368+EI00CANSFE   EQU X'40'              /* CANCEL SOFTWARE ENCRYPT   @XES*/ 01-ADREI\n                       00020         369+EI00MIXDEV   EQU X'20'              /* MIXTURE OF DEVICES PERFORMING    01-ADREI\n                                     370+*                                      AND NOT PERFORMING HARDWARE\n1                                                                                                               Page   10\n   Active Usings: UIMASM_+X'70',R3\n0D-Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 12.23\n0                                    371+*                                      ENCRYPTION                @XES*/\n                                     372+*       EQU    X'1F'                /* RESERVED                  @XES*/\n 000009                              373+         DS    CL7                  /* RESERVED                  @XES*/ 01-ADREI\n                                     374+*/********************************************************************/\n                                     375+*/* THE FOLLOWING MAPS THE RECORD PRESENTED BY EXIT 14:      @LA65381*/\n                                     376+*/* DSS MESSAGE NUMBER ASSOCIATED WITH NON ZERO RETCODE      @LA65381*/\n                                     377+*/********************************************************************/\n 000000                00000 00010   378+EIREC14  DSECT                                                          01-ADREI\n 000000                              379+EI14RC   DS    CL4                  /* DSS RETURN CODE       @LA65381*/ 01-ADREI\n 000004                              380+EI14MESS DS    0CL4                 /* DSS MESSAGE           @LA65381*/ 01-ADREI\n 000004                              381+EI14MNUM DS    CL3                  /*  MESSAGE NUMBER       @LA65381*/ 01-ADREI\n 000007                              382+EI14MTYP DS    CL1                  /*  MESSAGE TYPE         @LA65381*/ 01-ADREI\n 000008                              383+EI14CPUT DS    CL8                  /* DSS CPU TIME          @OW13783*/ 01-ADREI\n                                     384+*/********************************************************************/\n                                     385+*/* THE FOLLOWING MAPS THE RECORD PRESENTED BY EXIT 20: VOLUME   @V24*/\n                                     386+*/* NOTIFICATION EXIT.                                           @V24*/\n                                     387+*/********************************************************************/\n 000000                00000 00042   388+EIREC20  DSECT                                                          01-ADREI\n 000000                              389+EI20DSN  DS    CL44                 /* DATA SET NAME/CLUSTER NAME       01-ADREI\n                                     390+*                                                                @V24*/\n 00002C                              391+EI20FLGS DS    XL1                  /* SOME FLAGS:               @V24*/ 01-ADREI\n                       00080         392+EI20VSAM EQU   X'80'                /* 1=DATA SET IS VSAM               01-ADREI\n                                     393+*                                      0=DATA SET IS NONVSAM     @V24*/\n                       00040         394+EI20RACF EQU   X'40'                /* 1=DATA SET IS PROTECTED BY A     01-ADREI\n                                     395+*                                      DISCRETE RACF PROFILE     @V24*/\n                       00020         396+EI20LVOL EQU   X'20'                /* 1=LAST VOLUME INDICATOR          01-ADREI\n                                     397+*                                      ON FOR NON-VSAM DATA SET  @PDC*/\n                       00010         398+E20F9ATT EQU   X'10'                /* F9 ATTRS LOST FLAG        @P0A*/ 01-ADREI\n                                     399+*        EQU   X'0F'                /* RESERVED                  @P0C*/\n 00002D                              400+         DS    CL1                  /* RESERVED                  @V24*/ 01-ADREI\n 00002E                              401+EI20DA#  DS    XL1                  /* NUMBER OF DATA COMPONENTS @V24*/ 01-ADREI\n 00002F                              402+EI20IX#  DS    XL1                  /* NUMBER OF INDEX COMPONENTS       01-ADREI\n                                     403+*                                      (0 IF NONVSAM)            @V24*/\n 000030                              404+EI20DA@  DS    AL4                  /* POINTER TO DATA COMPONENT        01-ADREI\n                                     405+*                                      INFO FOR VSAM/DATA SET\n                                     406+*                                      INFO FOR NONVSAM          @V24*/\n 000034                              407+EI20IX@  DS    AL4                  /* POINTER TO INDEX COMPONENT       01-ADREI\n                                     408+*                                      INFO FOR VSAM/0 FOR NONVSAM\n                                     409+*                                                                @V24*/\n                                     410+*                                   /* THE EI20SCNT, EI20DSHA,\n                                     411+*                                      AND EI20ISHA FIELDS ARE\n                                     412+*                                      PROVIDED WHEN PROCESSING\n                                     413+*                                      THE FIRST VOLUME OF A MULTI\n                                     414+*                                      VOLUME DATA SET           @PDC*/\n 000038                              415+EI20SCNT DS    XL2                  /* TOTAL STRIPE COUNT FOR           01-ADREI\n                                     416+*                                      THIS VSAM DATA SET.\n 00003A                              417+EI20DSHA DS    XL4                  /* VSAM DATA COMPONENT              01-ADREI\n                                     418+*                                      HIGH ALLOCATED RBA        @PDC*/\n 00003E                              419+EI20ISHA DS    XL4                  /* VSAM INDEX COMPONENT             01-ADREI\n                                     420+*                                      HIGH ALLOCATED RBA        @PDC*/\n                                     421+*/********************************************************************/\n                                     422+*/* FOR A NONVSAM DATA SET, EI20DA@ WILL POINT TO A SINGLE       @V24*/\n                                     423+*/* EI20DSI STRUCTURE.  FOR A VSAM CLUSTER, EI20DA@ POINTS TO AN @V24*/\n                                     424+*/* ARRAY OF STRUCTURES (ONE FOR EACH DATA COMPONENT), AND       @V24*/\n                                     425+*/* EI20IX@ POINTS TO A SIMILAR ARRAY FOR THE INDEX COMPONENTS   @V24*/\n1                                                                                                               Page   11\n   Active Usings: UIMASM_+X'70',R3\n0D-Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 12.23\n0                                    426+*/********************************************************************/\n 000000                00000 00044   427+EI20DSI  DSECT                      /* DATA SET INFO             @V24*/ 01-ADREI\n 000000                              428+EI20CON  DS    CL44                 /* COMPONENT NAME (BLANKS FOR       01-ADREI\n                                     429+*                                      NONVSAM)                  @V24*/\n 00002C                              430+EI20NVOL DS    XL2                  /* # OF VOLUMES IN DS        @V24*/ 01-ADREI\n 00002E                              431+         DS    CL2                  /* RESERVED                  @V24*/ 01-ADREI\n 000030                              432+EI20VLI  DS    0CL12                /* VOLUME INFORMATION (REPEAT FOR   01-ADREI\n                                     433+*                                      EACH VOLUME               @V24*/\n 000030                              434+EI20VOL  DS    CL6                  /* VOLSER                    @V24*/ 01-ADREI\n 000036                              435+E20DSTP# DS    XL2                  /* DATA COMPONENT STRIPE            01-ADREI\n                                     436+*                                      NUMBER                    @PDC*/\n 000038                              437+EI20RBA  DS    FL4                  /* RBA TOKEN                        01-ADREI\n                                     438+*                                                                @V24*/\n                                     439+*                                   /* THE EI20DRBA FIELD IS\n                                     440+*                                      CALCULATED BY SUBTRACTING\n                                     441+*                                      THE HIGH RBA FIELDS\n                                     442+*                                      FROM THE LOW RBA FIELDS.  @PDC*/\n 00003C                              443+EI20DRBA DS    XL4                  /* NUMBER OF RBAS PROCESSED         01-ADREI\n                                     444+*                                      FOR THE THIS COMPONENT    @PDC*/\n 000040                              445+EI20VLSQ DS    XL2                  /* VOLUME SEQUENCE NUMBER           01-ADREI\n                                     446+*                                      FOR THE DATA SET          @PDC*/\n 000042                              447+         DS    CL2                  /* PADDING (UNUSED)          @PDC*/ 01-ADREI\n                                     448+*/********************************************************************/\n                                     449+*/* THE FOLLOWING MAPS THE RECORD PRESENTED BY EXIT 21:          @V25*/\n                                     450+*/*    DATA SET VERIFICATION EXIT                                @V25*/\n                                     451+*/********************************************************************/\n 000000                00000 0002C   452+EIREC21  DSECT                                                /* @V25*/ 01-ADREI\n 000000                              453+EI21DSN  DS    CL44                 /* DATA SET/CLUSTER NAME     @V25*/ 01-ADREI\n                                     454+*/********************************************************************/\n                                     455+*/* THE FOLLOWING MAPS THE RECORD PRESENTED BY EXIT 22:          @V25*/\n                                     456+*/*    BYPASS VERIFICATION EXIT                                  @V25*/\n                                     457+*/********************************************************************/\n 000000                00000 00066   458+EIREC22  DSECT                                                /* @V25*/ 01-ADREI\n 000000                              459+EI22DSN  DS    CL44                 /* DATA SET/CLUSTER NAME     @V25*/ 01-ADREI\n 00002C                              460+EI22FLGS DS    XL1                  /* EXIT 22 FLAGS:            @V25*/ 01-ADREI\n                       00080         461+EI22BSER EQU   X'80'                /* 1=BYPASS                         01-ADREI\n                                     462+*                                        SERIALIZATION           @V25*/\n                       00040         463+EI22BSEC EQU   X'40'                /* 1=BYPASS DATASET LEVEL, STORCLAS 01-ADREI\n                                     464+*                                        AND MGMTCLAS SECURITY CHECKS.\n                                     465+*                                        ALSO BYPASS JES3 INTEGRITY\n                                     466+*                                        CHECKS AND DO NOT CREATE\n                                     467+*                                        DISCRETE DATASET PROFILES.\n                                     468+*                                                            @OY60302*/\n                       00020         469+EI22BMIG EQU   X'20'                /* 1=TOLERATE MIGRATED VOLSERS      01-ADREI\n                                     470+*                                        FOR NONVSAM DATA SETS @DS007*/\n                                     471+*               /* SWAPPING POSITIONS OF EI22NSYS & EI22SIRS @OW01655*/\n                       00010         472+EI22NSYS EQU   X'10'                /* 1=NO SYSDSN, GET ADRDSN, BWODSN  01-ADREI\n                                     473+*                                       AND SYSVSAM ENQUEUES    @L4A */\n                       00008         474+EI22LIKE EQU   X'08'                /* 1=RESTORE/COPY TO SAME           01-ADREI\n                                     475+*                                        DEVICE              @NA06820*/\n                       00004         476+EI22EXTR EQU   X'04'                /* 1=RESTORE TO SAME VOLUME BEING   01-ADREI\n                                     477+*                                        EXTENT REDUCED      @NA06820*/\n                       00002         478+EI22SIRS EQU   X'02'                /* SET INCMPLT RECALL    @OW01655   01-ADREI\n                                     479+*                                        SWAPPED W/ EI22NSYS @OW01655*/\n                       00001         480+EI22DB2  EQU   X'01'                /* 1 = DB2 RENAME        @OW45048*/ 01-ADREI\n1                                                                                                               Page   12\n   Active Usings: UIMASM_+X'70',R3\n0D-Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 12.23\n0                                    481+*                                                                    */\n                                     482+*/********************************************************************/\n                                     483+*/* THE FOLLOWING WERE REMOVED FROM THE MAP OF THE RECORD    @OY62462*/\n                                     484+*/*   PRESENTED TO EXIT 22 BUT ARE NOW RETURNED TO USE       @OY62462*/\n                                     485+*/********************************************************************/\n 00002D                              486+EI22SFLG DS    0CL5                 /* SOURCE DATA SET FLAGS @OY62462*/ 01-ADREI\n 00002D                              487+E22SSMSF DS    CL1                  /* SOURCE SMS FLAGS              */ 01-ADREI\n                                     488+*                                   /*                       @OY62462*/\n 00002E                              489+E22SDSRG DS    CL2                  /* SOURCE DATA SET ORG           */ 01-ADREI\n                                     490+*                                   /*                       @OY62462*/\n 000030                              491+E22SVFLG DS    XL2                  /* VSAM DATA SET FLAGS:  @OY62462*/ 01-ADREI\n                       00080         492+E22SESDS EQU   X'80'                /* 1=ESDS DATA SET       @OY62462*/ 01-ADREI\n                       00040         493+E22SKSDS EQU   X'40'                /* 1=KSDS DATA SET       @OY62462*/ 01-ADREI\n                       00020         494+E22SKRDS EQU   X'20'                /* 1=KRDS DATA SET       @OY62462*/ 01-ADREI\n                       00010         495+E22SLDS  EQU   X'10'                /* 1=LINEAR DATA SET     @OY62462*/ 01-ADREI\n                       00008         496+E22SRRDS EQU   X'08'                /* 1=RRDS DATA SET       @OY62462*/ 01-ADREI\n                       00004         497+E22SPSSI EQU   X'04'                /* 1=PAGE/SWAP/STGINDEX, ETC.    */ 01-ADREI\n                                     498+*                                   /* UNSUPPORTED DATA SETS @OY62462*/\n                       00002         499+E22SVVDS EQU   X'02'                /* 1=VVDS DATA SET       @OY62462*/ 01-ADREI\n                       00001         500+E22SBCS  EQU   X'01'                /* 1=BCS DATA SET        @OY62462*/ 01-ADREI\n                       00080         501+E22SAIX  EQU   X'80'                /* 1=AIX DATA SET        @OY62462*/ 01-ADREI\n                       00040         502+E22SVRRD EQU   X'40'                /* 1=VRRDS DATASET       @OY62462*/ 01-ADREI\n                                     503+*        EQU   X'3F'                /* RESERVED              @OY62462*/\n 000032                              504+EI22FLG2 DS    XL1                  /* MORE EXIT 22 FLAGS        @RLS*/ 01-ADREI\n                       00080         505+EI22RSET EQU   X'80'                /* RESET DS CHANGED FLAG     @RLS*/ 01-ADREI\n                       00040         506+EI22SSYS EQU   X'40'                /* GET SHARED SYSDSN ENQ     @RLS*/ 01-ADREI\n                       00020         507+EI22RRB  EQU   X'20'                /* MARK TGT RECOVERY REQ'D   @RLS*/ 01-ADREI\n                       00010         508+EI22LINF EQU   X'10'                /* LOG INFO PASSED, SEE      @RLS*/ 01-ADREI\n                                     509+*                                   /* EI22LPRM AND EI22LSID     @RLS*/\n                       00008         510+EI22BWOP EQU   X'08'                /* BWO_ALLOWED PASSED, SEE   @RLS*/ 01-ADREI\n                                     511+*                                   /* EI22BWOA                  @RLS*/\n                       00004         512+EI22IMS  EQU   X'04'                /* TYPE=TYPEIMS PROCESS  @OW15980*/ 01-ADREI\n                       00002         513+EI22BWOE EQU   X'02'                /* ENQ ON BWODSN ONLY,   @OW15980*/ 01-ADREI\n                                     514+*                                   /* NO ADR OR SYS ENQ'S   @OW15980*/\n                                     515+*        EQU   X'01'                /* UNUSED                @OW45048*/\n 000033                              516+EI22LPRM DS    CL1                  /* LOG PARAMETER FOR TGT     @RLS*/ 01-ADREI\n 000034                              517+EI22LSID DS    CL26                 /* LOG STREAM ID FOR TGT     @RLS*/ 01-ADREI\n 00004E                              518+EI22FLG3 DS    XL1                  /* MORE EXIT 22 FLAGS        @RLS*/ 01-ADREI\n                       000F0         519+EI22BWOA EQU   X'F0'                /* BWO_ALLOWED               @RLS*/ 01-ADREI\n                       00008         520+EI22BRLS EQU   X'08'                /* bypass RLS quiesce     @RLSCDS*/ 01-ADREI\n                       00004         521+EI22SFSM EQU   X'04'                /* Set reconnectable flag    @FSM*/ 01-ADREI\n                                     522+*        EQU   X'03'                /* UNUSED                 @RLSCDS*/\n 00004F                              523+         DS    CL23                 /* AVAILABLE                 @RLS*/ 01-ADREI\n                                     524+*                                                                    */\n                                     525+*/********************************************************************/\n                                     526+*/* THE FOLLOWING MAPS THE RECORD PRESENTED BY EXIT 23:          @V25*/\n                                     527+*/*    DATA SET PROCESSED NOTIFICATION EXIT                      @V25*/\n                                     528+*/********************************************************************/\n 000000                00000 00351   529+EIREC23  DSECT                                                /* @V25*/ 01-ADREI\n 000000                              530+EI23DSN  DS    CL44                 /* DATA SET/CLUSTER NAME     @V25*/ 01-ADREI\n 00002C                              531+EI23NEWN DS    CL44                 /* NEW DATA SET/CLUSTER NAME @V25*/ 01-ADREI\n 000058                              532+EI23DSRC DS    XL2                  /* RETURN CODE FOR DATA SET         01-ADREI\n                                     533+*                                      PROCESSING                @V25*/\n 00005A                              534+EI23SFLG DS    0CL5                 /* SOURCE DATA SET FLAGS     @V25*/ 01-ADREI\n 00005A                              535+E23SSMSF DS    CL1                  /* SOURCE SMS FLAGS                 01-ADREI\n1                                                                                                               Page   13\n   Active Usings: UIMASM_+X'70',R3\n0D-Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 12.23\n0                                    536+*                                                                @V25*/\n 00005B                              537+E23SDSRG DS    CL2                  /* SOURCE DATA SET ORG              01-ADREI\n                                     538+*                                                                @V25*/\n 00005D                              539+E23SVFLG DS    XL2                  /* VSAM DATA SET FLAGS:      @V25*/ 01-ADREI\n                       00080         540+E23SESDS EQU   X'80'                /* 1=ESDS DATA SET           @V25*/ 01-ADREI\n                       00040         541+E23SKSDS EQU   X'40'                /* 1=KSDS DATA SET           @V25*/ 01-ADREI\n                       00020         542+E23SKRDS EQU   X'20'                /* 1=KRDS DATA SET           @V25*/ 01-ADREI\n                       00010         543+E23SLDS  EQU   X'10'                /* 1=LINEAR DATA SET         @V25*/ 01-ADREI\n                       00008         544+E23SRRDS EQU   X'08'                /* 1=RRDS DATA SET           @V25*/ 01-ADREI\n                       00004         545+E23SPSSI EQU   X'04'                /* 1=PAGE/SWAP/STGINDEX, ETC.       01-ADREI\n                                     546+*                                        UNSUPPORTED DATA SETS   @V25*/\n                       00002         547+E23SVVDS EQU   X'02'                /* 1=VVDS DATA SET           @V25*/ 01-ADREI\n                       00001         548+E23SBCS  EQU   X'01'                /* 1=BCS DATA SET            @V25*/ 01-ADREI\n                       00040         549+E23BCSEL EQU   X'40'                /* 1=VRRDS DATA SET      @LA82401*/ 01-ADREI\n                       00020         550+E23SVRRD EQU   X'20'                /* 1=VRRDS DATA SET      @LA82401*/ 01-ADREI\n                       00010         551+EI23RRB  EQU   X'10'                /* RECOVERY REQUIRED         @RLS*/ 01-ADREI\n                                     552+*        EQU   X'0F'                /* UNUSED                    @RLS*/\n 00005F                              553+EI23TFLG DS    0CL5                 /* TARGET DATA SET FLAGS     @V25*/ 01-ADREI\n 00005F                              554+E23TSMSF DS    CL1                  /* TARGET SMS FLAGS                 01-ADREI\n                                     555+*                                                                @V25*/\n 000060                              556+E23TDSRG DS    CL2                  /* TARGET DATA SET ORG              01-ADREI\n                                     557+*                                                                @V25*/\n 000062                              558+E23TVFLG DS    XL2                  /* VSAM DATA SET FLAGS:      @V25*/ 01-ADREI\n                       00080         559+E23TESDS EQU   X'80'                /* 1=ESDS DATA SET           @V25*/ 01-ADREI\n                       00040         560+E23TKSDS EQU   X'40'                /* 1=KSDS DATA SET           @V25*/ 01-ADREI\n                       00020         561+E23TKRDS EQU   X'20'                /* 1=KRDS DATA SET           @V25*/ 01-ADREI\n                       00010         562+E23TLDS  EQU   X'10'                /* 1=LINEAR DATA SET         @V25*/ 01-ADREI\n                       00008         563+E23TRRDS EQU   X'08'                /* 1=RRDS DATA SET           @V25*/ 01-ADREI\n                       00004         564+E23TPSSI EQU   X'04'                /* 1=PAGE/SWAP/STGINDEX, ETC.       01-ADREI\n                                     565+*                                        UNSUPPORTED DATA SETS   @V25*/\n                       00002         566+E23TVVDS EQU   X'02'                /* 1=VVDS DATA SET           @V25*/ 01-ADREI\n                       00001         567+E23TBCS  EQU   X'01'                /* 1=BCS DATA SET            @V25*/ 01-ADREI\n                       00080         568+E23TAIX  EQU   X'80'                /* 1=AIX DATA SET        @LA82401*/ 01-ADREI\n                       00040         569+E23TVRRD EQU   X'40'                /* 1=VRRDS DATA SET      @LA82401*/ 01-ADREI\n                                     570+*        EQU   X'3F'                /* RESERVED              @LA82401*/\n 000064                              571+EI23RLST DS    0CL16                /* RLS TIME STAMPS           @RLS*/ 01-ADREI\n 000064                              572+EI23GMT  DS    CL8                  /* RLS GMT TIME STAMP        @RLS*/ 01-ADREI\n 00006C                              573+EI23LOC  DS    CL8                  /* RLS LOCAL TIME STAMP      @RLS*/ 01-ADREI\n 000074                              574+E23BYTES DS    CL8                  /* TOTAL TRACK BYTES RESTORED,      01-ADREI\n                                     575+*                                         COPIED, OR DUMPED  @OW25343*/\n 00007C                              576+E23FLGS  DS    XL1                  /* MISC FLAGS            @OW11555*/ 01-ADREI\n                       00080         577+E23BSET  EQU   X'80'                /* 1=E23BYTES SET        @OW11555*/ 01-ADREI\n                       00040         578+E23BPDS  EQU   X'40'                /* PDS IS BROKEN         @K131935*/ 01-ADREI\n                       00020         579+E23BPSE  EQU   X'20'                /* E23BYTES IS FOR PSE   @OW25343*/ 01-ADREI\n                       00010         580+E23F9ATT EQU   X'10'                /* F9 ATTRIBUTES NOT RESTD   @P0A*/ 01-ADREI\n 00007D                              581+EI23DEVT DS    CL6                  /* REQUIRED DEVICE TYPE  @K131935*/ 01-ADREI\n 000083                              582+         DS    CL9                  /* AVAILABLE             @K131935*/ 01-ADREI\n 00008C                              583+EI23VOL# DS    XL1                  /* NUMBER OF VOLUMES         @V25*/ 01-ADREI\n 00008D                              584+EI23VSER DS    118XL6               /* VOLSER ARRAY              @V25*/ 01-ADREI\n                                     585+*/********************************************************************/\n                                     586+*/* THE FOLLOWING MAPS THE RECORD PRESENTED BY EXIT 24:          @V26*/\n                                     587+*/*     CONCURRENT COPY INITIALIZATION COMPLETE                  @V26*/\n                                     588+*/********************************************************************/\n 000000                00000 00053   589+EIREC24  DSECT                            /*                     @V26*/ 01-ADREI\n 000000                              590+EI24RTCD DS    H                          /* RETURN CODE         @V26*/ 01-ADREI\n1                                                                                                               Page   14\n   Active Usings: UIMASM_+X'70',R3\n0D-Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 12.23\n0000002                              591+EI24RSCD DS    H                          /* REASON CODE         @V26*/ 01-ADREI\n 000004                              592+         DS    F                          /* RESERVED            @V26*/ 01-ADREI\n 000008                              593+EI24VOL  DS    CL6                        /* VOLUME SERIAL       @V26*/ 01-ADREI\n 00000E                              594+EI24DSN  DS    CL44                       /* DATA SET NAME       @V26*/ 01-ADREI\n 00003A                              595+EI24FLGS DS    XL1                        /* FLAGS               @RLS*/ 01-ADREI\n                       00080         596+EI24RSET EQU   X'80'                     /* DS CHANGE FLAG RESET @RLS*/ 01-ADREI\n                       00040         597+E24SAIX  EQU   X'40'                      /* 1=AIX DATA SET      @IBC*/ 01-ADREI\n                       00020         598+E24BCSEL EQU   X'20'                      /* 1=BASE CLUS SELECTD @IBC*/ 01-ADREI\n                                     599+*        EQU   X'1F'                      /* UNUSED              @IBC*/\n 00003B                              600+         DS    CL24                       /* AVAILABLE           @RLS*/ 01-ADREI\n                                     601+*/********************************************************************/\n                                     602+*/* THE FOLLOWING MAPS THE RECORD PRESENTED BY EXIT 26:      @OW15980*/\n                                     603+*/*    DUMP OUTPUT VOLUME MOUNT NOTIFICATION EXIT            @OW15980*/\n                                     604+*/********************************************************************/\n 000000                00000 000BC   605+EIREC26  DSECT                            /*                     @V26*/ 01-ADREI\n 000000                              606+EI26TYPE DS    XL4                     /* EXIT TYPE          @OW15980*/ 01-ADREI\n                       00080         607+EI26VOL  EQU   X'80'           /* OUTPUT VOLUME NOTIFICATION @OW15980*/ 01-ADREI\n                       00040         608+EI26TERM EQU   X'40'           /* OUTPUT VOLUME TERMINATED   @OW15980*/ 01-ADREI\n                       00020         609+EI26R0CE EQU   X'20'           /* BWO R0 COUNT ERROR         @OW15980*/ 01-ADREI\n                       00010         610+EI26VCLO EQU   X'10'           /* output volume close - only            01-ADREI\n                                     611+*                                 for DASD outputs during\n                                     612+*                                 logical dump operations    @OW57536*/\n                       00008         613+EI26THWE EQU   X'08'           /* TAPE DEVICE WILL BE                   01-ADREI\n                                     614+*                                 ENCRYPTING DATA IN HARDWARE    @TPE*/\n 000004                              615+EI26DSN  DS    CL64            /* DSNAME IF EI26R0CE = '1'B  @OW15980*/ 01-ADREI\n 000044                              616+EI26DSNL DS    AL1             /* LENGTH OF DSNAME           @OW15980*/ 01-ADREI\n 000045                              617+         DS    AL3             /* RESERVED FOR ALIGNMENT     @OW15980*/ 01-ADREI\n 000048                              618+EI26DDN  DS    CL8             /* output dd name if EI26VOL,            01-ADREI\n                                     619+*                                 EI26TERM, or EI26VCLO set  @OW57536*/\n 000050                              620+EI26VSER DS    CL6             /* VOLSER - present if EI26VOL,          01-ADREI\n                                     621+*                                 EI26TERM, or EI26VCLO set  @OW57536*/\n 000056                              622+         DS    CL2             /* RESERVED FOR ALIGNMENT     @OW15980*/ 01-ADREI\n 000058                              623+EI26VTRC DS    XL4             /* return code for volume                01-ADREI\n                                     624+*                                 term and volume close      @OW57536*/\n 00005C                              625+         DS    CL96            /* RESERVED FOR EXPANSION     @OW15980*/ 01-ADREI\n                                     626+*/********************************************************************/\n                                     627+*/* THE FOLLOWING MAPS THE RECORD PRESENTED BY EXIT 27:          @PDC*/\n                                     628+*/*    PHYSICAL DATA SET PROCESSED NOTIFICATION EXIT             @PDC*/\n                                     629+*/********************************************************************/\n 000000                00000 000A8   630+EIREC27  DSECT                                                /* @PDC*/ 01-ADREI\n 000000                              631+EI27DSN  DS    CL44                 /* DATA SET/CLUSTER NAME     @PDC*/ 01-ADREI\n 00002C                              632+EI27NEWN DS    CL44                 /* NEW DATA SET/CLUSTER NAME @PDC*/ 01-ADREI\n 000058                              633+EI27DSRC DS    XL2                  /* RETURN CODE FOR DATA SET         01-ADREI\n                                     634+*                                      PROCESSING                @PDC*/\n 00005A                              635+EI27SFLG DS    0CL5                 /* SOURCE DATA SET FLAGS     @PDC*/ 01-ADREI\n 00005A                              636+E27SSMSF DS    CL1                  /* SOURCE SMS FLAGS                 01-ADREI\n                                     637+*                                                                @PDC*/\n 00005B                              638+E27SDSRG DS    CL2                  /* SOURCE DATA SET ORG              01-ADREI\n                                     639+*                                                                @PDC*/\n 00005D                              640+E27SVFLG DS    XL2                  /* VSAM DATA SET FLAGS:      @PDC*/ 01-ADREI\n                       08000         641+E27SESDS EQU   X'8000'              /* 1=ESDS DATA SET           @PDC*/ 01-ADREI\n                                     642+*                                   /* FOR PHYSICAL DATA SET COPY\n                                     643+*                                      IF THE SOURCE DATA SET IS A\n                                     644+*                                      KSDS AND THE VOLUME BEING\n                                     645+*                                      PROCESSED IS NOT THE PRIMARY\n1                                                                                                               Page   15\n   Active Usings: UIMASM_+X'70',R3\n0D-Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 12.23\n0                                    646+*                                      VOLUME AND THE INDEX FOR THAT\n                                     647+*                                      KSDS DOES NOT RESIDE ON THE\n                                     648+*                                      CURRENT VOLUME BEING PROCESSED,\n                                     649+*                                      THIS BIT MAY BE ON BECAUSE\n                                     650+*                                      IT APPEARS TO BE A ESDS\n                                     651+*                                                            @OA17350*/\n                       04000         652+E27SKSDS EQU   X'4000'              /* 1=KSDS DATA SET           @PDC*/ 01-ADREI\n                       02000         653+E27SKRDS EQU   X'2000'              /* 1=KRDS DATA SET           @PDC*/ 01-ADREI\n                       01000         654+E27SLDS  EQU   X'1000'              /* 1=LINEAR DATA SET         @PDC*/ 01-ADREI\n                       00800         655+E27SRRDS EQU   X'0800'              /* 1=RRDS DATA SET           @PDC*/ 01-ADREI\n                       00400         656+E27SPSSI EQU   X'0400'              /* 1=PAGE/SWAP/STGINDEX, ETC.       01-ADREI\n                                     657+*                                        UNSUPPORTED DATA SETS   @PDC*/\n                       00200         658+E27SVVDS EQU   X'0200'              /* 1=VVDS DATA SET           @PDC*/ 01-ADREI\n                       00100         659+E27SBCS  EQU   X'0100'              /* 1=BCS DATA SET            @PDC*/ 01-ADREI\n                       00080         660+E27SAIX  EQU   X'0080'                                                  01-ADREI\n                       00040         661+E27SVVRD EQU   X'0040'              /* 1=VRRDS DATA SET          @PDC*/ 01-ADREI\n                                     662+*        EQU   X'003F'              /* RESERVED                  @PDC*/\n 00005F                              663+EI27TFLG DS    0CL5                 /* TARGET DATA SET FLAGS     @PDC*/ 01-ADREI\n 00005F                              664+E27TSMSF DS    CL1                  /* TARGET SMS FLAGS                 01-ADREI\n                                     665+*                                                                @PDC*/\n 000060                              666+E27TDSRG DS    CL2                  /* TARGET DATA SET ORG              01-ADREI\n                                     667+*                                                                @PDC*/\n 000062                              668+E27TVFLG DS    XL2                  /* VSAM DATA SET FLAGS:      @PDC*/ 01-ADREI\n                       08000         669+E27TESDS EQU   X'8000'              /* 1=ESDS DATA SET           @PDC*/ 01-ADREI\n                                     670+*                                   /* FOR PHYSICAL DATA SET COPY\n                                     671+*                                      IF THE SOURCE DATA SET IS A\n                                     672+*                                      KSDS AND THE VOLUME BEING\n                                     673+*                                      PROCESSED IS NOT THE PRIMARY\n                                     674+*                                      VOLUME AND THE INDEX FOR THAT\n                                     675+*                                      KSDS DOES NOT RESIDE ON THE\n                                     676+*                                      CURRENT VOLUME BEING PROCESSED,\n                                     677+*                                      THIS BIT MAY BE ON BECAUSE\n                                     678+*                                      IT APPEARS TO BE A ESDS\n                                     679+*                                                            @OA17350*/\n                       04000         680+E27TKSDS EQU   X'4000'              /* 1=KSDS DATA SET           @PDC*/ 01-ADREI\n                       02000         681+E27TKRDS EQU   X'2000'              /* 1=KRDS DATA SET           @PDC*/ 01-ADREI\n                       01000         682+E27TLDS  EQU   X'1000'              /* 1=LINEAR DATA SET         @PDC*/ 01-ADREI\n                       00800         683+E27TRRDS EQU   X'0800'              /* 1=RRDS DATA SET           @PDC*/ 01-ADREI\n                       00400         684+E27TPSSI EQU   X'0400'              /* 1=PAGE/SWAP/STGINDEX, ETC.       01-ADREI\n                                     685+*                                        UNSUPPORTED DATA SETS   @PDC*/\n                       00200         686+E27TVVDS EQU   X'0200'              /* 1=VVDS DATA SET           @PDC*/ 01-ADREI\n                       00100         687+E27TBCS  EQU   X'0100'              /* 1=BCS DATA SET            @PDC*/ 01-ADREI\n                       00080         688+E27TAIX  EQU   X'0080'              /* 1=AIX DATA SET            @PDC*/ 01-ADREI\n                       00040         689+E27TVRRD EQU   X'0040'              /* 1=VRRDS DATA SET          @PDC*/ 01-ADREI\n                       00020         690+E27TRACF EQU   X'0020'              /* 1=DATA SET IS PROTECTED BY       01-ADREI\n                                     691+*                                      DISCRETE RACF PROFILE     @PDC*/\n                                     692+*        EQU   X'001F'              /* RESERVED                  @PDC*/\n 000064                              693+EI27TRKS DS    CL8                  /* TOTAL TRACKS COPIED       @PDC*/ 01-ADREI\n 00006C                              694+EI27SVOL DS    CL6                  /* SOURCE VOLUME SERIAL      @PDC*/ 01-ADREI\n 000072                              695+EI27TVOL DS    CL6                  /* TARGET VOLUME SERIAL      @PDC*/ 01-ADREI\n 000078                              696+E27FLGS  DS    XL1                  /* MISC FLAGS                @PDC*/ 01-ADREI\n                       00080         697+EI27LVOL EQU   X'80'                /* LAST VOLUME INDICATOR            01-ADREI\n                                     698+*                                      FROM THE SOURCE DATA SET  @PDC*/\n                       00040         699+E27F9ATT EQU   X'40'                /* F9 ATTRS LOST FLAG        @P0A*/ 01-ADREI\n 000079                              700+         DS    XL1                  /* RESERVED                  @PDC*/ 01-ADREI\n1                                                                                                               Page   16\n   Active Usings: UIMASM_+X'70',R3\n0D-Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 12.23\n000007A                              701+EI27VLSQ DS    H                    /* VOLUME SEQUENCE NUMBER           01-ADREI\n                                     702+*                                      FROM THE SOURCE DATA SET  @PDC*/\n 00007C                              703+EI27DSHA DS    F                    /* VSAM DATA COMPONENT HIGH         01-ADREI\n                                     704+*                                      ALLOCATED RBA COUNT       @PDC*/\n 000080                              705+EI27ISHA DS    F                    /* VSAM INDEX COMPONENT HIGH        01-ADREI\n                                     706+*                                      ALLOCATED RBA COUNT       @PDC*/\n 000084                              707+EI27SCNT DS    H                    /* VSAM DATA SET STRIPE             01-ADREI\n                                     708+*                                      COUNT. PROVIDED WHEN  @OA17350*/\n                                     709+*                                      PROCESSING FIRST VOLUME OF\n                                     710+*                                      MULTIVOLUME DATA SET.     @PDC*/\n 000086                              711+E27DSTP# DS    H                    /* DATA COMPONENT STRIPE            01-ADREI\n                                     712+*                                      NUMBER                    @PDC*/\n 000088                              713+EI27DRBA DS    F                    /* RBAS PROCESSED FOR THE           01-ADREI\n                                     714+*                                      DATA COMPONENT            @PDC*/\n 00008C                              715+EI27IRBA DS    F                    /* RBAS PROCESSED FOR THE           01-ADREI\n                                     716+*                                      INDEX COMPONENT           @PDC*/\n 000090                              717+         DS    CL24                 /* AVAILABLE                 @PDC*/ 01-ADREI\n                                     718+*/********************************************************************/\n                                     719+*/* THE FOLLOWING MAPS THE RECORD PRESENTED BY EXIT 28:          @E2A*/\n                                     720+*/*    TARGET DATA SET ALLOCATION NOTIFICATION EXIT              @E2A*/\n                                     721+*/********************************************************************/\n 000000                00000 00150   722+EIREC28  DSECT                                                /* @E2A*/ 01-ADREI\n 000000                              723+EI28PARMS1  DS    XL4               /* EXIT 28 PARMS FIELD 1            01-ADREI\n                                     724+*                                      ANY FIELD SET ON INDICATES\n                                     725+*                                      THAT FIELD HAS BEEN SPECIFIED\n                                     726+*                                      TO BE USED FOR THIS EXIT  @E2A*/\n                      000000         727+EI28EATTRP  EQU   X'80000000'       /* EATTR VALUE PASSED    @OA29235*/ 01-ADREI\n                      000000         728+EI28F9DSCBP EQU   X'40000000'       /* F9 DSCB PASSED        @OA29235*/ 01-ADREI\n                      000000         729+EI28CREDTP  EQU   X'20000000'       /* CREATION DATE PASSED  @OA29235*/ 01-ADREI\n                      000000         730+EI28RCAP    EQU   X'10000000'       /* CA RECLAIM VAL PASSED @K1C0372*/ 01-ADREI\n                                     731+*           EQU   X'0FFFFFFF'       /* UNUSED                @K1C0372*/\n 000004                              732+EI28PARMS2  DS    XL4               /* EXIT 28 PARMS FIELD 2     @E2A*/ 01-ADREI\n                                     733+*           EQU   X'FFFFFFFF'       /* UNUSED                @OA29235*/\n 000008                              734+EI28TGTDSN  DS    XL44              /* TARGET DATA SET NAME      @E2A*/ 01-ADREI\n 000034                              735+EI28SRCDSN  DS    XL44              /* SOURCE DATA SET NAME      @E2A*/ 01-ADREI\n 000060                              736+EI28F9DSCB  DS    XL140             /* FORMAT 9 DSCB             @E2A*/ 01-ADREI\n 0000EC                              737+EI28FIELDS1 DS    XL1               /* EXIT 28 FIELDS 1                 01-ADREI\n                                     738+*                                      FLAG BYTE FOR BIT FIELDS  @E2A*/\n                       000C0         739+EI28EATTR   EQU   X'C0'             /* EATTR VALUE TO BE USED FOR       01-ADREI\n                                     740+*                                      TARGET DATASET ALLOCATION\n                                     741+*                                                            @OA29235*/\n                       00020         742+EI28RCA     EQU   X'20'             /* CA RECLAIM ATTR TO BE USED FOR   01-ADREI\n                                     743+*                                      TARGET DATASET ALLOC  @K1C0372*/\n                       00000         744+EI28EATTR_NS EQU  X'00'             /*  '00'B = NS (DEFAULT VALUE USED) 01-ADREI\n                                     745+*                                                            @OA29235*/\n                       00040         746+EI28EATTR_NO EQU  X'40'             /*  '01'B = NO           @OA29235*/ 01-ADREI\n                       00080         747+EI28EATTR_OPT EQU X'80'             /*  '10'B = OPT          @OA29235*/ 01-ADREI\n                                     748+*           EQU   X'3F'             /* UNUSED                @OA29235*/\n 0000ED                              749+EI28CREDT   DS    XL3               /* CREATION DATE (DS1CREDT)  @E2A*/ 01-ADREI\n 0000F0                              750+            DS    CL92              /* SPACE FOR EXPANSION       @E2A*/ 01-ADREI\n                                     751          ADRUFO\n                                     752+*%SKPUFO:;\n                                     753+*@EJECT;\n                                     754+* /* *************************************************************** */\n                                     755+* /*                                                                 */\n1                                                                                                               Page   17\n   Active Usings: UIMASM_+X'70',R3\n0D-Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 12.23\n0                                    756+* /* $MAC(ADRUFO)  COMP(DF175) PROD(5694-A01): DFSMSdss          @LVC*/\n                                     757+* /*                                                                 */\n                                     758+* /*   MACRO NAME = ADRUFO                                           */\n                                     759+* /*                                                                 */\n                                     760+* /*   DESCRIPTIVE NAME = ADRDSSU USER FUNCTION OPTIONS              */\n                                     761+* /*                      PARAMETER LIST                             */\n                                     762+* /*                                                                 */\n                                     763+* /*******************************************************************/\n                                     764+* /*******************************************************************/\n                                     765+* /*******************************************************************/\n                                     766+* /*                                                                 */\n                                     767+* /*   STATUS:  VERSION  1  RELEASE  12  LEVEL  0                @FRC*/\n                                     768+* /*                                                                 */\n                                     769+*/*******************************************************************/\n                                     770+*/*PROPRIETARY V3 STATEMENT                                         */\n                                     771+*/*LICENSED MATERIALS - PROPERTY OF IBM                             */\n                                     772+*/*\"RESTRICTED MATERIALS OF IBM\"                                    */\n                                     773+*/*5694-A01                                                         */\n                                     774+*/*COPYRIGHT 1980, 2010  IBM CORP.                                  */\n                                     775+*/*END PROPRIETARY V3 STATEMENT                                     */\n                                     776+*/*******************************************************************/\n                                     777+* /*-------------------------------------------------------- @LA52968*/\n                                     778+* /*   ALTHOUGH PROVIDED IN A GENERAL INTERFACE LIBRARY,     @LA52968*/\n                                     779+* /*   ADRUFO IS NOT TO BE USED AS A GENERAL PROGRAMMING     @LA52968*/\n                                     780+* /*   INTERFACE.  REFER TO PRODUCT DOCUMENTATION TO         @LA52968*/\n                                     781+* /*   DETERMINE INTENDED USAGE.                             @LA52968*/\n                                     782+* /*-------------------------------------------------------- @LA52968*/\n                                     783+* /*                                                                 */\n                                     784+* /*   FUNCTION =                                                    */\n                                     785+* /*      THE USER FUNCTION OPTIONS PARAMETER LIST (UFO) IS THE      */\n                                     786+* /*      COMMUNICATIONS LINK BETWEEN THE USER INSTALLATION EXIT     */\n                                     787+* /*      AND DFSMSdss. DFSMSdss FILLS THE FIELDS IN THIS LIST USING */\n                                     788+* /*      THE OPTIONS SPECIFIED IN THE USER'S CONTROL STATEMENTS     */\n                                     789+* /*      AND PASSES IT TO THE EXIT FOR EACH FUNCTION(UFOFUNCT).     */\n                                     790+* /*      THE EXIT ROUTINE MAY CHANGE ANY (OR NONE) OF THE OPTIONS   */\n                                     791+* /*      AND PASS BACK THE CHANGED/UNCHANGED LIST. DFSMSdss WILL    */\n                                     792+* /*      USE THE CHANGED INFORMATION TO OVERRIDE THAT FROM EACH     */\n                                     793+* /*      CONTROL STATEMENT IMMEDIATELY BEFORE IT SCHEDULES THE      */\n                                     794+* /*      FUNCTIONAL TASK. DFSMSdss WILL PRINT A MESSAGE FOR EACH    */\n                                     795+* /*      OPTION CHANGED BY THE EXIT ROUTINE.                        */\n                                     796+* /*                                                                 */\n                                     797+* /*      THE LIST IS ALSO PASSED AT THE BEGINNING OF EXECUTION OF   */\n                                     798+* /*      DFSMSdss(UFOPARM). DFSMSdss WILL PRINT A MESSAGE IF ANY    */\n                                     799+* /*      OF THE SIGNIFICANT PARAMETERS ARE CHANGED.                 */\n                                     800+* /*                                                                 */\n                                     801+* /*      THE HEADER PORTION OF THE BLOCK CONTAINS CONTROL FLAGS     */\n                                     802+* /*      FOR THE APPLICATION INTERFACE.                         @V21*/\n                                     803+* /*                                                                 */\n                                     804+* /*   INVOCATION = PLS -- INCLUDE ADRUFO                            */\n                                     805+* /*                BAL --                                           */\n                                     806+* /*                                                                 */\n                                     807+* /*   CHANGE ACTIVITY =                                             */\n                                     808+* /*     UFOINSOP, UFOERASE ADDED                             @REL11 */\n                                     809+* /*     UFNORUN,UFOWAITS,UFOWAITR,UFO2ENQE,UFO2ENQS,UFO2ENQN,   @R20*/\n                                     810+* /*     UFO1REPL,UFOFRAGI ADDED                                 @R20*/\n1                                                                                                               Page   18\n   Active Usings: UIMASM_+X'70',R3\n0D-Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 12.23\n0                                    811+* /*     UFOCLEAR REMOVED                                        @R20*/\n                                     812+* /*     UFO2DEL ADDED                                           @R20*/\n                                     813+* /*     UFO2CTLG,UFO2UNC AND UFOIACPY ADDED                     @R21*/\n                                     814+* /*     UFO2RECT,UFO2RBLK,UFO3FORC,UFOMNGAS,UFOMNSQT,           @V21*/\n                                     815+* /*     UFOMNTUS,UFO3FLGS,UFOPARAM,UFAIINV,UFUIMAL,             @V21*/\n                                     816+* /*     UFOUIMCH,UFSTOP,UFSYSIN,UFSYSPR,UFNOIN,UFNOOUT ADDED    @V21*/\n                                     817+* /*     UFAI31B,UFXABUFF  ADDED                              @V22JJW*/\n                                     818+* /*     COPY OPTIMIZE SUPPORT                                @V22BLE*/\n                                     819+* /*     VERSION 2 RELEASE 3.0 SUPPORT ADDED                     @V23*/\n                                     820+* /*     UFOTGTAL ADDED FOR TARGET ALLOCATION                    @V23*/\n                                     821+* /*     VERSION 2 RELEASE 4.0 SUPPORT ADDED                     @V24*/\n                                     822+* /*     UFOPROCK ADDED FOR PROCESS OPTIONS        10/11/88   @V25EPR*/\n                                     823+* /*     UFWKUNIT AND UFWRKVOL ADDED FOR WORKUNIT/WORKVOL    @LA46326*/\n                                     824+* /*     PARAMETERS                                          @LA46326*/\n                                     825+* /*     ADDED WARNING FOR CDPI REQUIREMENTS    NOV 13, 1989 @LA52968*/\n                                     826+* /*     ADDED BYPASS RACF FACILITY CLASS CHECK    14 SEP 90 @LA64541*/\n                                     827+* /*       FLAG, UFBYFCCK                          14 SEP 90 @LA64541*/\n                                     828+* /*     AE for PL64094                                      @LA73771*/\n                                     829+* /*     MAINTENANCE ROLL-UP                       14 JUN 91 @NA00267*/\n                                     830+* /*     UFOT0IND ADDED FOR CONCURRENT COPY SUPPORT  18JUL91     @V26*/\n                                     831+* /*     UFORIOPC ADDED FOR CONCURRENT COPY SUPPORT  18JUL91     @V26*/\n                                     832+* /*     ADDED UFO2VALD FOR 'VALIDATE' KEYWORD       10JUN92 @KEJ0135*/\n                                     833+* /*     DELETED UFOMNGAS (NOW RESERVED FIELD)       15DEC92 @OY59458*/\n                                     834+* /*     MODIFIED TO SUPPORT OY60602 SECURITY APAR   19JAN93 @OY60602*/\n                                     835+* /*     UFOMKMV ADDED FOR MAKEMULTI                 14FEB94 @OW02973*/\n                                     836+* /*     UFOFLEAV ADDED FOR CLOSE WITH LEAVE OPTION  14SEP94 @OW08175*/\n                                     837+* /*     ADD BUILDSA                                 08DEC95 @OW14835*/\n                                     838+* /*     VOLCOUNT support                            27FEB96 @OW18380*/\n                                     839+* /* $FST=HDZ11D0,10JUL96,TPCMAH: ABARS filestacking 10JUL96     @FST*/\n                                     840+* /* $EPC=HDZ11D0,15OCT96,TPCJKS: Enh. Prot. Checkpointed DS     @EPC*/\n                                     841+* /* $MSF=HDZ11D0,09JAN97,TPCHCW:Multivolume selection/filtering @MSF*/\n                                     842+* /* $RLV=HDZ11D0,04/10/97,TPCPRB: RELEASE LOGICAL & VSAM-EF     @RLV*/\n                                     843+* /* DUMPCONDITIONING SUPPORT                        03AUG00 @OW45674*/\n                                     844+* /* Added UFOCVRBK flag                             17MAY01 @OW50538*/\n                                     845+* /* $64R=HDZ11H0,02JUL01,TPCCFM: 64-bit Real Storage support    @64R*/\n                                     846+* /*   Added UFPZB64R for storage backed in 64 bit real storage, @64R*/\n                                     847+* /*   renamed UFOT0IND to UFO4FLGS, increased UFOFUNCT by       @64R*/\n                                     848+* /*   20 bytes, increased UFOPARM by 16 bytes                   @64R*/\n                                     849+* /* FLASHCOPY NOCOPY/WITHDRAW (OW50446)             03DEC01 @OW52270*/\n                                     850+* /* $ALF=HDZ11H0,15JUL02,TPCYLD: Appl Level Fast Replication -  @ALF*/\n                                     851+* /*   defined UFO5FLGS, UFOFRREQ, UFOFRPRF, and UFOFRNO         @ALF*/\n                                     852+* /* $DLF=OW57347,27MAY03,TPCYLD: Data Set FlashCopy             @DLF*/\n                                     853+* /* $RPU=HDZ11J0,28JUL03,TPCANW: REPLACEUnconditional support   @RPU*/\n                                     854+* /*   defined UFO5REPU                                          @RPU*/\n                                     855+* /* $FPP=OA06196,27APR04,TPCJRS: Add FCTOPPRCP keyword          @FPP*/\n                                     856+* /* $DDE=OA13300,15OCT05,TPCANW: DUMP ENCRYPTION SUPPORT        @DDE*/\n                                     857+* /* $FC2=OA12748,07DEC05,TPCYLD: FlashCopy V2 Package,          @FC2*/\n                                     858+* /*   defined UFFUCGCR, UFOFCN2C, FCOFCFRZ, UFOFCINC,           @FC2*/\n                                     859+* /*   UFOFCINL, UFOFCVFR, UFOFCVFN, UFOFCWTS, UFOFCWTR          @FC2*/\n                                     860+* /* $P3=EAV,HDZ1A10,13NOV06,TPCCK: K1A0190 fix typo             @P3A*/\n                                     861+* /* $LV=HDZ1A10,04APR07,TPCJRL: EXTENDED ADDRESS VOLUME SUPPORT @LVA*/\n                                     862+* /*   defined UFFUCONS, UFODBTRC, UFOMAXTM                      @LVA*/\n                                     863+* /* $VC=VCC,HDZ1A10,31MAY07,TPCYLD: EAV Virtual Concurrent Copy @VCA*/\n                                     864+* /*   defined UFO7CCAR UFO7CCVR UFO7CCCR UFO7CCAP UFO7CCVP      @VCA*/\n                                     865+* /*   UFO7CCCP                                                  @VCA*/\n1                                                                                                               Page   19\n   Active Usings: UIMASM_+X'70',R3\n0D-Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 12.23\n0                                    866+* /* $P4=EAV,HDZ1A10,05JUN07,TPCYLD: K1A0739 correct typo        @P4A*/\n                                     867+* /* $P5=EAV,HDZ1A10,30JUL07,TPCYLD: K1A0855 correct typo        @P5A*/\n                                     868+* /* $DN=HDZ1A10,06AUG07,TPCJRS: DUMP NEWNAMEU SUPPORT - K1A1190 @DNA*/\n                                     869+* /* $P6=EAV,HDZ1A10,05SEP07,TPCJRL: K1A1139 CONSOLIDATE change  @P6A*/\n                                     870+* /* $P7=EAV,HDZ1A10,07SEP07,TPCCK: K1A1260 CGCREATED change     @P7A*/\n                                     871+* /* $SFC=OA15791,13NOV07,TPCYLD: Space Efficient FlashCopy SPE  @SFC*/\n                                     872+* /*   defined UFO7FLGS, UFOFCSEF                                @SFC*/\n                                     873+* /* $PM=OA24811,15NOV08,TPCJRS: Preserve Mirror                 @PMA*/\n                                     874+* /* $BS=K1C0125,HDZ1C10,01MAY09,TPCRSG: BSAM IO SUPPORT         @BSA*/\n                                     875+* /* $FR=K1C0210,HDZ1C10,20MAY09,TPCJRS: DSS Fast Reverse        @FRA*/\n                                     876+* /*   Restore                                                   @FRA*/\n                                     877+* /*                                                                 */\n                                     878+* /* CHANGE DATE: 20MAY09                                        @FRC*/\n                                     879+* /*                                                                 */\n                                     880+* /* *************************************************************** */\n                                     881+* %GOTO PLSUFO;           /* GO TO THE PLS VERSION */\n 00014C                              882+ADRUFO@  DS    F                    UFO BASING POINTER           @V21   01-ADRUF\n 000000                00000 00018   883+ADRUFOB  DSECT                      UFO PARM LIST            @V23N703   01-ADRUF\n 000000                              884+UFOHDR   DS    0CL20                HEADER OF UFO PARM LIST             01-ADRUF\n 000000                              885+UFID     DS    CL4                  IDENTIFIER OF EBCDIC \"UFO \"         01-ADRUF\n 000004                              886+UFLEN    DS    H                    LENGTH OF PARM LIST                 01-ADRUF\n 000006                              887+UFBDYOFF DS    H                    OFFSET TO UFOFUNCT OR UFOPARM       01-ADRUF\n 000008                              888+UFVOLI@  DS    AL4                  ADDR OF INPUT VOLUME LIST OR 0      01-ADRUF\n                                     889+*                                   (DESCRIBED BY UFOVENT)\n 00000C                              890+UFVOLO@  DS    AL4                  ADDR OF OUTPUT VOLUME LIST OR 0     01-ADRUF\n                                     891+*                                   (DESCRIBED BY UFOVENT)\n 000010                              892+UFFUNCT  DS    0CL2                 FUNCTION BEING PERFORMED            01-ADRUF\n                                     893+*                                   '0000'X = PARM CHANGE ENTRY\n                                     894+*                                   IF ANY BITS ARE ON IN THESE TWO\n                                     895+*                                   BYTES, IT IS A FUNCTION ENTRY\n                                     896+*                                   (THIS FIELD MUST BE KEPT IN\n                                     897+*                                    SYNCHRONIZATION WITH FBMAJOR\n                                     898+*                                    IN ADRFUNCB)             @V23DTK\n 000010                              899+UFFUNCT1 DS    CL1                  FUNCTION BYTE 1                     01-ADRUF\n                       00080         900+UFFUDEF  EQU   X'80'                DEFRAG OPERATION                    01-ADRUF\n                       00040         901+UFFUCOPY EQU   X'40'                COPY OPERATION                      01-ADRUF\n                       00020         902+UFFUREST EQU   X'20'                RESTORE OPERATION                   01-ADRUF\n                       00010         903+UFFUDUMP EQU   X'10'                DUMP OPERATION                      01-ADRUF\n                       00008         904+UFFUPRT  EQU   X'08'                PRINT OPERATION                     01-ADRUF\n                       00004         905+UFFUCPYD EQU   X'04'                COPYDUMP OPERATION                  01-ADRUF\n                                     906+*                                   RESERVED                     @V21\n                       00001         907+UFFUCOMP EQU   X'01'                COMPRESS OPERATION           @V21   01-ADRUF\n 000011                              908+UFFUNCT2 DS    CL1                  FUNCTION BYTE TWO            @V21   01-ADRUF\n                       00080         909+UFFURLSE EQU   X'80'                RELEASE OPERATION            @V21   01-ADRUF\n                       00040         910+UFFUCONV EQU   X'40'                CONVERTV OPERATION           @V24   01-ADRUF\n                       00020         911+UFFUBLSA EQU   X'20'                BUILDSA  OPERATION       @OW14835   01-ADRUF\n                                     912+*                                   RESERVED                       @FC2\n                       00008         913+UFFUCGCR EQU   X'08'                CGCREATED OPERATION            @P7C 01-ADRUF\n                       00004         914+UFFUCONS EQU   X'04'                CONSOLIDATE OPERATION          @P6C 01-ADRUF\n 000012                              915+UFFIND   DS    CL1                  FUNCTIONAL INDICATORS               01-ADRUF\n                       00080         916+UFFIFULL EQU   X'80'                FULL VOLUME REQUEST                 01-ADRUF\n                                     917+*                                   (DUMP, RESTORE, COPY & DEFRAG)\n                       00040         918+UFFIPART EQU   X'40'                PARTIAL (TRACKS) REQUEST            01-ADRUF\n                                     919+*                                   (DUMP, RESTORE, COPY, DEFRAG\n                                     920+*                                   & PRINT)\n1                                                                                                               Page   20\n   Active Usings: UIMASM_+X'70',R3\n0D-Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 12.23\n0                      00020         921+UFFIFILT EQU   X'20'                REQUEST BY FILTER/DSNAME            01-ADRUF\n                                     922+*                                   (DUMP, RESTORE & PRINT)\n                       00010         923+UFFIPRTV EQU   X'10'                PRINT VTOC                          01-ADRUF\n                                     924+*                                   (PRINT)\n                       00008         925+UFFLOGCL EQU   X'08'                LOGICAL PROCESSING FOR COPY,   @RLV 01-ADRUF\n                                     926+*                                   DUMP, OR RELEASE: EITHER NO    @RLV\n                                     927+*                                   INPUT VOLS SPECIFIED (CATALOG  @RLV\n                                     928+*                                   FILTERING) OR 1 OF FOLLOWING:  @RLV\n                                     929+*                                     LOGINDDNAME, LOGINDYNAM,     @RLV\n                                     930+*                                     LOGDDNAME, LOGDYNAM.         @RLV\n 000013                              931+UFAIFLGS DS    CL1                  APPLICATION INTERFACE FLAGS    @V21 01-ADRUF\n                       00080         932+UFAIINV  EQU   X'80'                INVOKED BY APPL. INTERFACE     @V21 01-ADRUF\n                       00040         933+UFUIMAL  EQU   X'40'                ADRUIM NOT TO BE GIVEN CONTROL @V21 01-ADRUF\n                       00020         934+UFUIMCH  EQU   X'20'                DO NOT ALLOW UIM TO MODIFY     @V21 01-ADRUF\n                                     935+*                                   OPTIONS, VALUES                @V21\n                       00010         936+UFSTOP   EQU   X'10'                TERMINATE OPERATION ( SAME AS  @V21 01-ADRUF\n                                     937+*                                   RETURN CODE 8 FROM ADRUIXIT)   @V21\n                       00008         938+UFSYSIN  EQU   X'08'                SYSIN OR ALTERNATE NOT PRESENT @V21 01-ADRUF\n                                     939+*                                   ALLOWED IF UFPARAM=XX1000XX    @V21\n                       00004         940+UFSYSPR  EQU   X'04'                SYSPRINT/ALTERNATE NOT PRESENT @V21 01-ADRUF\n                                     941+*                                   ALLOWED IF UFPARAM=XX1000XX    @V21\n                       00002         942+UFNOIN   EQU   X'02'                NO INPUT TAPE - FOR RESTORE    @V21 01-ADRUF\n                                     943+*                                   ONLY                           @V21\n                       00001         944+UFNOOUT  EQU   X'01'                NO OUTPUT TAPE - FOR DUMP ONLY @V21 01-ADRUF\n 000014                              945+UFFLAGS  DS    CL1                  FLAGS                      @LA64541 01-ADRUF\n                       00080         946+UFBYFCCK EQU   X'80'                1=BYPASS FACILITY CLASS CHECKS      01-ADRUF\n                                     947+*                                     IF USER AUTHORIZED       @LA64541\n                       00040         948+UFSAFOK  EQU   X'40'                1=IT IS OK TO USE THE SAF INTERFACE 01-ADRUF\n                                     949+*                                     AT THE HIGHEST SUPPORTED LEVEL\n                                     950+*                                                              @OY60602\n                       00020         951+UFFREWCL EQU   X'20'                1=Rewind on close              @FST 01-ADRUF\n                       00010         952+UFIGCTNN EQU   X'10'                1=IGNORE CATALOG ENTRIES FOR NEW    01-ADRUF\n                                     953+*                                   NAMED DATA SET, VALID ONLY FOR\n                                     954+*                                   LOGICAL DUMP                   @DNA\n                       00008         955+UFFCFRRT EQU   X'08'                1=RETRY FLASHCOPY WITHOUT FAST      01-ADRUF\n                                     956+*                                   REVERSE RESTORE OPTION         @FRA\n                       00004         957+UFBYFRVF EQU   X'04'                1=BYPASS CHECKING FOR EXISTING      01-ADRUF\n                                     958+*                                   FC RELATIONS DURING FAST REVERSE\n                                     959+*                                   RESTORE OPERATION              @FRA\n                                     960+*        EQU   X'03'                reserved                       @FRC\n 000015                              961+         DS    CL3                  RESERVED                   @LA64541 01-ADRUF\n-                                    963+*FOFUNCT DS    0CL4                 LIST OF OPTIONS FOR FUNCTION.\n 000000                00000 00030   964+UFOFUNCT DSECT                      LIST OF OPTIONS FOR FUNC.   @V22BLE 01-ADRUF\n                                     965+*                                   PRESENT IF ANY BITS ARE ON     @P5C\n                                     966+*                                   UFFUNCT\n                                     967+*                                   POINTED TO BY THE ADDRESS OF\n                                     968+*                                   UFOHDR + UFBDYOFF\n 000000                              969+UFO1FLGS DS    CL1                  1ST SET OF OPTION FLAGS             01-ADRUF\n                                     970+*                                   (REPRESENT KEYWORDS)\n                       00080         971+UFO1COMP EQU   X'80'                1=COMPRESS (DUMP)                   01-ADRUF\n                       00040         972+UFO1CVOL EQU   X'40'                1=COPYVOLID (RESTORE & COPY)        01-ADRUF\n                       00020         973+UFO1PURG EQU   X'20'                1=PURGE                             01-ADRUF\n                                     974+*                                   (DUMP, COPY & RESTORE)\n1                                                                                                               Page   21\n   Active Usings: UIMASM_+X'70',R3\n0D-Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 12.23\n0                      00010         975+UFO1RESE EQU   X'10'                1=RESET (DUMP)                      01-ADRUF\n                       00008         976+UFO1WRCK EQU   X'08'                1=WRITECHECK (COPY,RESTORE)         01-ADRUF\n                       00004         977+UFO1ALD  EQU   X'04'                1=ALLDATA (COPY,FULL DUMP,          01-ADRUF\n                                     978+*                                   FILTER/DSNAME DUMP)\n                       00002         979+UFO1ALDL EQU   X'02'                (COPY,FULL DUMP,                    01-ADRUF\n                                     980+*                                   FILTER/DSNAME DUMP)\n                                     981+*                                   BIT IS ONLY MEANINGFUL IF UFO1ALD\n                                     982+*                                   IS 1.\n                                     983+*                                   1=ALLDATA(LIST)\n                                     984+*                                   0=ALLDATA(*)\n                                     985+*                                   BIT MAY NOT BE SET ON BY THE EXIT\n                                     986+*                                   BUT MAY BE RESET TO CHANGE\n                                     987+*                                   ALLDATA(LIST) TO ALLDATA(*)\n                       00001         988+UFO1ALLE EQU   X'01'                1=ALLEXCP (COPY,FULL DUMP,          01-ADRUF\n                                     989+*                                   FILTER/DSNAME DUMP)\n 000001                              990+UFO2FLGS DS    CL1                  2ND SET OF OPTION FLAGS             01-ADRUF\n                                     991+*                                   (REPRESENT KEYWORDS)\n                       00080         992+UFO2DYNQ EQU   X'80'                DYNALLOC,                           01-ADRUF\n                                     993+*                                   0 = USE ENQ TO HOLD DATASET,\n                                     994+*                                   1 = USE DYNAMIC ALLOCATION TO HOLD\n                                     995+*                                   DATASET\n                                     996+*                                   (DUMP, DEFRAG, PRINT & RESTORE)\n                       00040         997+UFO2ENQE EQU   X'40'                ENQ EXCLUSIVE                  @R20 01-ADRUF\n                                     998+*                                   DUMP, RESTORE, PRINT           @R20\n                       00020         999+UFO2ENQS EQU   X'20'                ENQ SHARED IF EXCL FAILS       @R20 01-ADRUF\n                                    1000+*                                   DUMP, RESTORE, PRINT           @R20\n                       00010        1001+UFO2ENQN EQU   X'10'                DO NOT ENQ IF EXCL & SHR FAIL  @R20 01-ADRUF\n                                    1002+*                                   DUMP, RESTORE, PRINT           @R20\n                       00008        1003+UFO2DEL  EQU   X'08'                DELETE AFTER DATASET DUMP      @R20 01-ADRUF\n                       00004        1004+UFO2CTLG EQU   X'04'                CATALOG DATA SETS DURING A     @V21 01-ADRUF\n                                    1005+*                                   DATA SET RESTORE, COPY         @V21\n                       00004        1006+UFO2RECT EQU   UFO2CTLG             RECATALOG FOR                  @V21 01-ADRUF\n                                    1007+*                                   DATA SET RESTORE, COPY         @V21\n                       00002        1008+UFO2UNC  EQU   X'02'                UNCATALOG DATA SETS AFTER A    @V21 01-ADRUF\n                                    1009+*                                   DATA SET DUMP, COPY            @V21\n                       00001        1010+UFO2VALD EQU   X'01'                VALIDATE - LOGICAL DUMP    @KEJ0135 01-ADRUF\n 000002                             1011+UFDUOPTM DS    AL1                  OPTIMIZE VALUE  (DUMP/COPY) @V22BLE 01-ADRUF\n                                    1012+*                                   (1, 2, 3, OR 4) @V22BLE\n 000003                             1013+UFOINSOP DS    CL1                  INSTALLATION OPTIONS      @REL11    01-ADRUF\n                       00080        1014+UFOERASE EQU   X'80'                ERASE DASD TRACKS         @REL11    01-ADRUF\n                       00040        1015+UFOIACPY EQU   X'40'                DUMP MUST PRODUCE ALL OUTPUT COPIES 01-ADRUF\n                                    1016+*                                   OR NONE AT ALL IF = 1          @R21\n                       00020        1017+UFOBLDIX EQU   X'20'                INVOKE ICKDSF TO REBLD INDEX@V23DTK 01-ADRUF\n                       00010        1018+UFORACLG EQU   X'10'                RACFLOG=YES SPECIFIED OR       @V23 01-ADRUF\n                                    1019+*                                   FORCE RACF LOGGING             @V23\n                       00008        1020+UFOBK32K EQU   X'08'                TAPE BLK SIZE = 32K        @LA30041 01-ADRUF\n                       00004        1021+UFOARBA  EQU   X'04'                1=AUTORELBLKA SPECIFIED    @LA71950 01-ADRUF\n                       00002        1022+UFOMKMV  EQU   X'02'                1=MAKEMULTI SPECIFIED      @OW02973 01-ADRUF\n                       00001        1023+UFOFLEAV EQU   X'01'                1=CLOSE LEAVE FLAG         @OW08175 01-ADRUF\n 000004                             1024+UFOFRAGI DS    AL4                  FRAGMENTATION INDEX(DEFRAG)    @R20 01-ADRUF\n                                    1025+*                                   9,90,900=900, 09=90, 009=9     @R20\n 000008                             1026+UFOVCFLG DS    CL1                  VOLCOUNT FLAGS             @OW18380 01-ADRUF\n                       00080        1027+UFOVCCUR EQU   X'80'                1 = VOLCOUNT(*)            @OW18380 01-ADRUF\n                       00040        1028+UFOVCSRC EQU   X'40'                1 = VOLCOUNT(SRC)          @OW18380 01-ADRUF\n                       00020        1029+UFOVCNUM EQU   X'20'                1 = VOLCOUNT(N(nn))        @OW18380 01-ADRUF\n1                                                                                                               Page   22\n   Active Usings: UIMASM_+X'70',R3\n0D-Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 12.23\n0                      00010        1030+UFOVCANY EQU   X'10'                1 = VOLCOUNT(ANY)          @OW18380 01-ADRUF\n                       00008        1031+UFOSMALL EQU   X'08'                1 = SELECTMULTI(ALL)           @MSF 01-ADRUF\n                       00004        1032+UFOSMANY EQU   X'04'                1 = SELECTMULTI(ANY)           @MSF 01-ADRUF\n                       00002        1033+UFOSM1ST EQU   X'02'                1 = SELECTMULTI(FIRST)         @MSF 01-ADRUF\n                       00001        1034+UFOCPFRC EQU   X'01'                1 = FORCECP keyword            @EPC 01-ADRUF\n 000009                             1035+UFOVCVAL DS    AL1                  VALUE FOR N VOLUMES        @OW18380 01-ADRUF\n 00000A                             1036+UFOCPDAY DS    AL1                  DAYS value for FORCECP         @EPC 01-ADRUF\n 00000B                             1037+         DS    CL1                  RESERVED                       @EPC 01-ADRUF\n 00000C                             1038+UFOMNSQT DS    F                    MINIMUM SECONDARY ALLOCATION   @V21 01-ADRUF\n                                    1039+*                                   (MINSECQTY) FOR RELEASE        @RLV\n 000010                             1040+UFOMNTUS DS    F                    MINIMUM UNUSED TRACKS          @RLV 01-ADRUF\n                                    1041+*                                   (MINTRACKSUNUSED) FOR RELEASE  @RLV\n 000014                             1042+UFO3FLGS DS    CL1                  3RD SET OF OPTION FLAGS        @V21 01-ADRUF\n                       00080        1043+UFO3FORC EQU   X'80'                FORCE                          @V21 01-ADRUF\n                                    1044+*                                   RESTORE , COPY                 @V21\n                       00040        1045+UFO3REPL EQU   X'40'                1=REPLACE(DATASET RESTORE,COPY)@V21 01-ADRUF\n                       00020        1046+UFOFRBLK EQU   X'20'                1 = FORCE REBLOCKING OF        @V21 01-ADRUF\n                                    1047+*                                       DATA SETS (COPY, RESTORE)  @V24\n                       00010        1048+UFODRBLK EQU   X'10'                1 = DISABLE REBLOCKING OF      @V21 01-ADRUF\n                                    1049+*                                       DATA SETS (COPY, RESTORE)  @V24\n                       00008        1050+UFOALLMU EQU   X'08'                1 = ALLMULTI (COPY, DUMP WITH  @V23 01-ADRUF\n                                    1051+*                                   LOGINDDNAME/LOGINDYNAM)        @V23\n                       00004        1052+UFOSPHER EQU   X'04'                1=PERFORM SPHERE PROCESSING    @V24 01-ADRUF\n                       00002        1053+UFONOSMS EQU   X'02'                1=NULLSTORCLAS SPECIFIED       @V24 01-ADRUF\n                       00001        1054+UFONMGMT EQU   X'01'                1=NULLMGMTCLAS SPECIFIED       @V24 01-ADRUF\n 000015                             1055+UFOWAITS DS    AL1                  WAIT TIME IN SECONDS BETWEEN   @R20 01-ADRUF\n                                    1056+*                                   RESERVE OR ENQ RETRIES(ALL)    @R20\n 000016                             1057+UFOWAITR DS    AL1                  NUMBER OF RETRIES ON RESERVE   @R20 01-ADRUF\n                                    1058+*                                   OR ENQ FAILURES(ALL COMMANDS)  @R20\n 000017                             1059+UFOTGTAL DS    CL1                  TGTALLOC FLAGS                 @V23 01-ADRUF\n                       00080        1060+UFOTGTCY EQU   X'80'                1 = CYLINDER                   @V23 01-ADRUF\n                       00040        1061+UFOTGTTR EQU   X'40'                1 = TRACK                      @V23 01-ADRUF\n                       00020        1062+UFOTGTBL EQU   X'20'                1 = BLOCK                      @V23 01-ADRUF\n                       00010        1063+UFOTGTSR EQU   X'10'                1 = SOURCE                     @V23 01-ADRUF\n 000018                             1064+UFOPROCK DS    CL1                  PROCESS KEYWORD OPTIONS     @V25EPR 01-ADRUF\n                                    1065+*                                   (FIELD MUST BE KEPT IN      @V25EPR\n                                    1066+*                                   SYNCH WITH FBPROCKW)        @V25EPR\n                       00080        1067+UFOPRUND EQU   X'80'                1 = PROCESS UNDEF DSORG     @V25EPR 01-ADRUF\n                       00040        1068+UFOPRSYS EQU   X'40'                1 = PROCESS SYS1 DATASETS   @V25EPR 01-ADRUF\n                                    1069+*                                                                  @V26\n 000019                             1070+UFO4FLGS DS    CL1                  FOURTH SET OF OPTION FLAGS     @DLF 01-ADRUF\n                       00080        1071+UFOT0REQ EQU   X'80'                CONCURRENT COPY REQUESTED      @V26 01-ADRUF\n                       00040        1072+UFODCOND EQU   X'40'                DUMPCONDITIONING           @OW45674 01-ADRUF\n                       00020        1073+UFOCVRBK EQU   X'20'                CICSVRBACKUP               @OW50538 01-ADRUF\n                       00010        1074+UFOFCNC  EQU   X'10'                FLASHCOPY NOCOPY           @OW52270 01-ADRUF\n                       00008        1075+UFOFCWD  EQU   X'08'                FLASHCOPY WITHDRAW         @OW52270 01-ADRUF\n                       00004        1076+UFOFC2PP EQU   X'04'                ALLOW FC TO PPRC PRIMARY       @FPP 01-ADRUF\n                       00002        1077+UFOFCN2C EQU   X'02'                FLASHCOPY NOCOPY TO COPY       @FC2 01-ADRUF\n                       00001        1078+UFOFCFRZ EQU   X'01'                FLASHCOPY CG FREEZE            @FC2 01-ADRUF\n                                    1079+*                                                                  @V26\n 00001A                             1080+UFORIOPC DS    AL2                  READ I/O PACING                @V26 01-ADRUF\n                                    1081+*                                                                  @DLF\n 00001C                             1082+UFO5FLGS DS    CL1                  FIFTH OPTIONS FLAGS BYTE       @DLF 01-ADRUF\n                                    1083+*                                   (R1H0 AND ABOVE)               @DLF\n                       00080        1084+UFOFRREQ EQU   X'80'                FASTREPLICATION(REQUIRED)      @DLF 01-ADRUF\n1                                                                                                               Page   23\n   Active Usings: UIMASM_+X'70',R3\n0D-Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 12.23\n0                      00040        1085+UFOFRPRF EQU   X'40'                FASTREPLICATION(PREFERRED)     @DLF 01-ADRUF\n                       00020        1086+UFOFRNO  EQU   X'20'                FASTREPLICATION(NONE)          @DLF 01-ADRUF\n                       00010        1087+UFO5REPU EQU   X'10'                REPLACEUNCONDITIONAL           @RPU 01-ADRUF\n                       00008        1088+UFOFCINC EQU   X'08'                FLASHCOPY INCREMENTAL          @FC2 01-ADRUF\n                       00004        1089+UFOFCINL EQU   X'04'                FLASHCOPY INCREMENTAL LAST     @FC2 01-ADRUF\n                       00002        1090+UFOFCVFR EQU   X'02'                FLASHCOPY VERIFY(REVERSE)      @FC2 01-ADRUF\n                       00001        1091+UFOFCVFN EQU   X'01'                FLASHCOPY VERIFY(NOREVERSE)    @FC2 01-ADRUF\n                                    1092+*                                                                  @DLF\n 00001D                             1093+UFO6FLGS DS    CL1                  SIXTH OPTIONS FLAGS BYTE       @DLF 01-ADRUF\n                       00080        1094+UFOFRMSM EQU   X'80'                DEBUG(FRMSG(MININIMAL))        @DLF 01-ADRUF\n                       00040        1095+UFOFRMSS EQU   X'40'                DEBUG(FRMSG(SUMMARIZED))       @DLF 01-ADRUF\n                       00020        1096+UFOFRMSD EQU   X'20'                DEBUG(FRMSG(DETAILED))         @DLF 01-ADRUF\n                       00010        1097+UFOHCOMP EQU   X'10'                HWCOMPRESS                     @DDE 01-ADRUF\n                       00008        1098+UFODBTRC EQU   X'08'                DEBUG(TRACE)                   @LVA 01-ADRUF\n                                    1099+*                                                                  @DLF\n 00001E                             1100+UFOFCWTS DS    CL1                  FCWAIT TIME IN SECONDS         @FC2 01-ADRUF\n 00001F                             1101+UFOFCWTR DS    CL1                  FCWAIT MAX RETRY COUNT         @FC2 01-ADRUF\n                                    1102+*                                                                  @VCA\n 000020                             1103+UFO7FLGS DS    CL1                  SEVENTH OPTIONS FLAGS BYTE     @VCA 01-ADRUF\n                       00080        1104+UFOFCSEF EQU   X'80'                FCSETGTOK(FAILRELATION)        @SFC 01-ADRUF\n                                    1105+*                                   RESERVED\n                       00020        1106+UFO7CCAR EQU   X'20'                CONCURRENT(ANYREQ)             @VCA 01-ADRUF\n                       00010        1107+UFO7CCVR EQU   X'10'                CONCURRENT(VIRTUALREQ)         @VCA 01-ADRUF\n                       00008        1108+UFO7CCCR EQU   X'08'                CONCURRENT(CACHEREQ)           @VCA 01-ADRUF\n                       00004        1109+UFO7CCAP EQU   X'04'                CONCURRENT(ANYPREF)            @VCA 01-ADRUF\n                       00002        1110+UFO7CCVP EQU   X'02'                CONCURRENT(VIRTUALPREF)        @VCA 01-ADRUF\n                       00001        1111+UFO7CCCP EQU   X'01'                CONCURRENT(CACHEPREF)          @VCA 01-ADRUF\n                                    1112+*                                                                  @VCA\n 000021                             1113+UFO8FLGS DS    CL1                  EIGHT OPTIONS FLAGS BYTE       @PMA 01-ADRUF\n                       00080        1114+UFOPMREQ EQU   X'80'                FCTOPPRCP(PRESMIRREQ)          @PMA 01-ADRUF\n                       00040        1115+UFOPMPRE EQU   X'40'                FCTOPPRCP(PRESMIRPREF)         @PMA 01-ADRUF\n                       00020        1116+UFOPMNON EQU   X'20'                FCTOPPRCP(PRESMIRNONE)         @PMA 01-ADRUF\n                       00010        1117+UFOFCFRR EQU   X'10'                FCFASTREVERSERESTORE           @FRA 01-ADRUF\n                       00008        1118+UFOFCFVR EQU   X'08'                FCFULLVOLUMERELATION           @FRA 01-ADRUF\n                                    1119+*\n 000022                             1120+UFOMAXTM DS    CL2                  MAXTIME NUMBER OF MINUTES      @LVA 01-ADRUF\n 000024                             1121+         DS    CL12                 RESERVED                       @LVA 01-ADRUF\n-000030                00030 00000  1123+         ORG   UFO1FLGS                                        @V22BLE  01-ADRUF\n 000000                             1124+UFOPARM  DS    0CL4                 EXECUTE CARD PARAMETER OPTION       01-ADRUF\n                                    1125+*                                   LIST. PRESENT IF ALL BITS IN\n                                    1126+*                                   UFFUNCT ARE ZERO.\n                                    1127+*                                   POINTED TO BY THE ADDRESS OF\n                                    1128+*                                   UFOHDR + UFBDYOFF\n 000000                             1129+UFSERPAR DS    CL1                  SERIAL / PARALLEL                   01-ADRUF\n                       00080        1130+UFFORSER EQU   X'80'                IGNORE ALL PARALLEL COMMANDS IN     01-ADRUF\n                                    1131+*                                   THE COMMAND STREAM (FORCE THEM\n                                    1132+*                                   TO SERIAL)\n                       00040        1133+UFDEFPAR EQU   X'40'                DEFAULT TO PARALLEL AT BEGINNING    01-ADRUF\n                                    1134+*                                   OF COMMAND PROCESSING.\n                                    1135+*                                   IGNORED IF UFFORSER IS 1.\n 000001                             1136+UFXAFLAG DS    CL1                  CONTROL FLAGS FOR XA MODE  @V22JJW  01-ADRUF\n                                    1137+*\n                       00080        1138+UFXABUFF EQU   X'80'                                           @V22JJW  01-ADRUF\n1                                                                                                               Page   24\n   Active Usings: UIMASM_+X'70',R3\n0D-Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 12.23\n0                      00040        1139+UFAI31B  EQU   X'40'                AI BUFFER ABOVE 16M REQSTD @V22JJW  01-ADRUF\n                       00020        1140+UFPZB64R EQU   X'20'                64 BIT REAL ADDRESSING        @64R  01-ADRUF\n                                    1141+*\n 000002                             1142+UFWKUNIT DS    CL8                  WORKUNIT PARAMETER        @LA46326  01-ADRUF\n 00000A                             1143+UFWKVOL  DS    CL6                  WORKVOL PARAMETER         @LA46326  01-ADRUF\n 000010                             1144+UFOPFLG1 DS    CL1                  PARM FLAG BYTE 1              @BSA  01-ADRUF\n                                    1145+*                                                                 @BSA\n                       00080        1146+UFOUEXCP EQU   X'80'                1 = USE EXCP FOR DUMP OUTPUT  @BSA  01-ADRUF\n                                    1147+*                                       RESTORE INPUT AND         @BSA\n                                    1148+*                                       COPYDUMP                  @BSA\n 000011                             1149+         DS    CL15                 RESERVED                      @BSC  01-ADRUF\n-000000                00000 00018  1151+UFOVOL   DSECT                      VOLUME LIST HEADER.                 01-ADRUF\n                                    1152+*                                   POINTED TO BY UFVOLI@/UFVOLO@.\n 000000                             1153+UFOVHDR  DS    0CL4                 VOLUME LIST HEADER                  01-ADRUF\n 000000                             1154+UFOVCNT  DS    H                    COUNT OF VOLUME LIST ENTRIES        01-ADRUF\n 000002                             1155+         DS    CL2                  RESERVED                            01-ADRUF\n 000004                             1156+UFOVENT  DS    0CL20                VOLUME LIST ENTRY                   01-ADRUF\n 000004                             1157+UFOVUCB@ DS    AL4                  ADDR OF UCB OR 0                    01-ADRUF\n 000008                             1158+UFODDNAM DS    CL8                  DDNAME OR BLANK                     01-ADRUF\n 000010                             1159+UFOVOLID DS    CL6                  VOLUME SERIAL OR BLANK              01-ADRUF\n 000016                             1160+         DS    CL2                  RESERVED                            01-ADRUF\n0                                   1162          END\n1                                                 Relocation Dictionary                                         Page   25\n-   Pos.Id   Rel.Id   Address  Type  Action                                                  HLASM R6.0  2012/11/21 12.23\n0  00000001 00000001 00000008   A 4     +\n   00000001 00000001 00000028   A 4     +\n   00000001 00000001 00000086   A 4     +\n   00000001 00000002 00000020   A 4     +\n   00000001 00000003 00000090   V 4    ST\n1                                          Macro and Copy Code Source Summary                                   Page   26\n- Con Source                                        Volume    Members                        HLASM R6.0  2012/11/21 12.23\n0  L2 SYS1.MACLIB                                   Z1DT11    ADREID0\n   L3 SYS1.MODGEN                                   Z1DT12    ADRUFO\n   L4 CEE.SCEEMAC                                   Z1DT12    EDCEPIL  EDCPRLG\n1                                                Dsect Cross Reference                                          Page   27\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2012/11/21 12.23\n0ADREIB   0000002C  FFFFFFFE     265\n ADRUFOB  00000018  FFFFFFF1     883\n EIDDINFO 00000014  FFFFFFFD     314\n EIREC00  00000010  FFFFFFFC     327\n EIREC14  00000010  FFFFFFFB     378\n EIREC20  00000042  FFFFFFFA     388\n EIREC21  0000002C  FFFFFFF8     452\n EIREC22  00000066  FFFFFFF7     458\n EIREC23  00000351  FFFFFFF6     529\n EIREC24  00000053  FFFFFFF5     589\n EIREC26  000000BC  FFFFFFF4     605\n EIREC27  000000A8  FFFFFFF3     630\n EIREC28  00000150  FFFFFFF2     722\n EI20DSI  00000044  FFFFFFF9     427\n IHB0001DS\n          00000080  FFFFFFFF      10\n UFOFUNCT 00000030  FFFFFFF0     964\n UFOVOL   00000018  FFFFFFEF    1151\n1                                                      Using Map                                                Page   28\n-                                                                                            HLASM R6.0  2012/11/21 12.23\n   Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text\n           Count      Id           Type          Value    Range     Id        Disp    Stmt\n0    21  00000000  00000001 USING  ORDINARY    00000000 00001000 00000001  15 0005C     62 *,15\n     72  0000006E  00000001 DROP                                           15              15\n     74  00000070  00000001 USING  ORDINARY    00000070 00001000 00000001   3 00000        *,3\n1                                   General Purpose Register Cross Reference                                    Page   29\n- Register  References (M=modified, B=branch, U=USING, D=DROP, N=index)                      HLASM R6.0  2012/11/21 12.23\n0    0(0)      56    59M   60M   61    67\n     1(1)      56    88M\n     2(2)      56    58M   60    67    68    69    70    87M\n     3(3)      56    73M   74U   87M\n     4(4)      56    87M\n     5(5)      56    87M\n     6(6)      56    87M\n     7(7)      56    87M\n     8(8)      56    87M\n     9(9)      56    87M\n    10(A)      56    87M\n    11(B)      56    87M\n    12(C)      56    61    63    87M\n    13(D)      56    58    66    69    70M   85M   85    86    87\n    14(E)      56    64M   86M   88B\n    15(F)      21U   56    59    63M   64B   66M   67    72D\n1                                  Diagnostic Cross Reference and Assembler Summary                             Page   30\n-                                                                                            HLASM R6.0  2012/11/21 12.23\n0Statements Flagged\n0    6(P1,6), 8(L4:EDCPRLG,177), 80(P1,13), 81(P1,14)\n\n       4 Statements Flagged in this Assembly        8 was Highest Severity Code\n0HIGH LEVEL ASSEMBLER, 5696-234, RELEASE 6.0, PTF UK75466\n0SYSTEM: z/OS 01.13.00              JOBNAME: ESACOMP     STEPNAME: DSSUIM     PROCSTEP: ASMA90\n0Data Sets Allocated for this Assembly\n  Con DDname   Data Set Name                                Volume  Member\n   P1 SYSIN    ESA.PRJ.CBTDSSN.ASM                          USER01  DSSUIM\n   L1 SYSLIB   ESA.PRJ.CBTDSSN.ASM                          USER01\n   L2          SYS1.MACLIB                                  Z1DT11\n   L3          SYS1.MODGEN                                  Z1DT12\n   L4          CEE.SCEEMAC                                  Z1DT12\n      SYSLIN   ESA.PRJ.CBTDSSN.OBJECT                       USER07  DSSUIM\n      SYSPRINT ESA.PRJ.CBTDSSN.COMPLIST                     USER04  DSSUIM\n      SYSTERM  ESA.ESACOMP.JOB05983.D0000189.?\n\n  922744K allocated to Buffer Pool       Storage required     436K\n      24 Primary Input Records Read         1284 Library Records Read                  0 Work File Reads\n       0 ASMAOPT Records Read               1369 Primary Print Records Written         0 Work File Writes\n       9 Object Records Written                0 ADATA Records Written\n0Assembly Start Time: 12.23.54 Stop Time: 12.23.54 Processor Time: 00.00.00.0098\n Return Code 008\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "EBCDICUT": {"ttr": 2699, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n15694A01 V1.13 z/OS XL C++            //'ESA.PRJ.CBTDSSN.CPP(EBCDICUT)'                      30.11.12 08:25:33\n0                                      * * * * *   P R O L O G   * * * * *\n    Compiler options. . . . . . . :AGGRCOPY(NOOVERLAP)             ANSIALIAS       ARCH(7)         ARGPARSE        NOASCII\n                                  :NOATTRIBUTE     ASSERT(RESTRICT)                BITFIELD(UNSIGNED)              CHARS(UNSIGNED)\n                                  :NOCOMPACT       NOCOMPRESS      CVFT            NODFP           DIGRAPH         DLL(CALLBACKANY)\n                                  :ENUMSIZE(SMALL) NOEVENTS        EXECOPS         EXH             NOEXPMAC        NOEXPORTALL\n                                  :NOFASTTEMPINC   FLAG(I)         NOGOFF          GONUMBER        HALT(16)\n                                  :NOHGPR(NOPRESERVE)              NOHOT           NOIGNERRNO      ILP32           NOINITAUTO\n                                  :NOINLRPT        NOLIBANSI       NOLIST          LONGNAME        NOMAKEDEP       NOMARGINS\n                                  :MAXMEM(2097152) MEMORY          NAMEMANGLING(zOSV1R2)           NESTINC(255)    OBJECT\n                                  :OBJECTMODEL(COMPAT)             NOOE            NOOFFSET        OPTIMIZE(2)     PLIST(HOST)\n                                  :NOPORT          NOPPONLY        PREFETCH        REDIR           NOREPORT        ROSTRING\n                                  :ROCONST         RTTI(ALL)       NOSEQUENCE      NOSHOWINC       NOSHOWMACROS    SOURCE\n                                  :SKIPSRC(SHOW)   SPILL(3600)     START           NOSTATICINLINE  STRICT\n                                  :NOSTRICT_INDUCTION              TARGET(LE,CURRENT)              TEMPLATEDEPTH(300)\n                                  :NOTEMPLATEREGISTRY              TEMPLATERECOMPILE               TERMINAL        TEST(HOOK)\n                                  :TMPLPARSE(NO)   TUNE(7)         UNROLL(AUTO)    UTF             NOWARN0X        NOWARN64\n                                  :NOWSIZEOF       NOXREF\n                                  :NOCICS\n                                  :NOCONVLIT\n                                  :NOCSECT\n                                  :DEBUG(FORMAT(ISD),LEVEL(0),HOOK(NOLINE,NOBLOCK,NOPATH,CALL,FUNC),NOSYMBOL)\n                                  :DEFINE(__OS390__=1,_POSIX_SOURCE=1,_XOPEN_SOURCE_EXTENDED=1,MU_STANDALONE=1,ISIS_PF_MU=1)\n                                  :FLOAT(HEX,FOLD,NOMAF,AFP(NOVOLATILE)) ROUND(Z)\n                                  :NOHALTONMSG\n                                  :INFO(LAN)\n                                  :INLINE(AUTO,NOREPORT,100,1000)\n                                  :NOIPA\n                                  :KEYWORD(bool,explicit,export,false,mutable,namespace,true,typename,using,restrict,__restrict__,\n                                   __restrict,_Pragma,__alignof__,__asm__,__attribute__,__const__,__extension__,__volatile__,\n                                   __inline__,__signed__,__typeof__,__I,_Complex,__complex__,__real__,__imag__)\n                                  :NOKEYWORD(char16_t,char32_t,decltype,static_assert,typeof)\n                                  :LANGLVL(ANONSTRUCT,ANONUNION,ANSIFOR,ANSISINIT,NOAUTOTYPEDEDUCTION,C99VLA,C99__FUNC__,\n                                   NOC99LONGLONG,NOC99PREPROCESSOR,NOCOMPATRVALUEBINDING,NODBCS,NODECLTYPE,NODELEGATINGCTORS,\n                                   DEPENDENTBASELOOKUP,NODOLLARINNAMES,EMPTYSTRUCT,NOEXTENDEDFRIEND,NOEXTENDEDINTEGERSAFE,\n                                   EXTERNTEMPLATE,ILLPTOM,IMPLICITINT,NOINLINENAMESPACE,LIBEXT,LONGLONG,NONEWEXCP,OFFSETNONPOD,\n                                   NOOLDDIGRAPH,OLDFRIEND,NOOLDMATH,NOOLDSTR,OLDTEMPACC,NOOLDTMPLALIGN,OLDTMPLSPEC,NOSTATIC_ASSERT,\n                                   NOTEMPSASLOCALS,NOTEXTAFTERENDIF,GNU_LABELVALUE,GNU_COMPUTEDGOTO,TRAILENUM,TYPEDEFCLASS,NOUCS,\n                                   VARARGMACROS,NOVARIADICTEMPLATES,GNU_INCLUDE_NEXT,ZEROEXTARRAY,NOC99COMPLEX,NOC99COMPLEXHEADER,\n                                   NOGNU_COMPLEX,GNU_SUFFIXIJ)\n                                  :LOCALE(DE_DE.IBM-273)\n                                  :NOLSEARCH\n                                  :OPTFILE(DD:OPTFILE)\n                                  :NORTCHECK\n                                  :SEARCH(//'CEE.SCEEH.+', //'CBC.SCLBH.+', CEE.SCEEH.+, CBC.SCLBH.+, DD:USERLIB)\n                                  :NOSERVICE\n                                  :NOSQL\n                                  :NOSUPPRESS\n                                  :TEMPINC(./tempinc)\n                                  :NOXPLINK(NOBACKCHAIN,NOCALLBACK,GUARD,OSCALL(UPSTACK),NOSTOREARGS)\n    Version Macros. . . . . . . . : __COMPILER_VER__=0x410D0000\n                                  : __LIBREL__=0x410D0000\n                                  : __TARGET_LIB__=0x410D0000\n    Source margins. . . . . . . . :\n      Varying length. . . . . . . : 1 - 32760\n      Fixed length. . . . . . . . : 1 - 32760\n    Sequence columns. . . . . . . :\n      Varying length. . . . . . . : none\n      Fixed length. . . . . . . . : none\n    Locale name . . . . . . . . . : DE_DE.IBM-273\n    Code set. . . . . . . . . . . : IBM-273\n    Listing name. . . . . . . . . : DD:SYSCPRT\n0                                 * * * * *   E N D   O F   P R O L O G   * * * * *\n-\n15694A01 V1.13 z/OS XL C++            //'ESA.PRJ.CBTDSSN.CPP(EBCDICUT)'                      30.11.12 08:25:33\n-\n                                       * * * * *   S O U R C E   * * * * *\n0            1 | /*******************************************************************************\n             2 | * Copyright ISIS Papyrus Technologies Limited\n             3 | *-------------------------------------------------------------------------------\n             4 | * File:              $Source: /data/cvs/src/isislib/ebcdicut.cpp,v $\n             5 | *-------------------------------------------------------------------------------\n             6 | * Description:\n             7 | *   Definitions for ascii/ebcdic conversion\n             8 | *******************************************************************************/\n             9 | #define ISIS_DONT_USE_PCSDLL\n            10 | #include \"isisdef.h\"\n            11 | // EBCDIC->ASCII table (273->850)\n            12 | extern const unsigned char isis_etoa\u00c4256\u00dc =\n            13 | \u00e4\n            14 |   0x00, 0x01, 0x02, 0x03, 0x9F, 0x09, 0xB0, 0x7F,\n            15 |   0xB1, 0xB2, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,\n            16 |   0x10, 0x11, 0x12, 0x13, 0xB4, 0x0A, 0x08, 0xBA,\n            17 |   0x18, 0x19, 0xBB, 0xBC, 0x1C, 0x1D, 0x1E, 0x1F,\n            18 |   0xBF, 0xC0, 0xC1, 0xC2, 0xC3, 0x0A, 0x17, 0x1B,\n            19 |   0xC4, 0xC5, 0xC8, 0xC9, 0xCA, 0x05, 0x06, 0x07,\n            20 |   0xCB, 0xCC, 0x16, 0xCD, 0xCE, 0xD5, 0xD9, 0x04,\n            21 |   0xDA, 0xDB, 0xDC, 0xDF, 0x14, 0x15, 0xF2, 0x1A,\n            22 |   0x20, 0xFF, 0x83, 0x7B, 0x85, 0xA0, 0xC6, 0x86,\n            23 |   0x87, 0xA4, 0x8E, 0x2E, 0x3C, 0x28, 0x2B, 0x21,\n            24 |   0x26, 0x82, 0x88, 0x89, 0x8A, 0xA1, 0x8C, 0x8B,\n            25 |   0x8D, 0x7E, 0x9A, 0x24, 0x2A, 0x29, 0x3B, 0x5E,\n            26 |   0x2D, 0x2F, 0xB6, 0x5B, 0xB7, 0xB5, 0xC7, 0x8F,\n            27 |   0x80, 0xA5, 0x94, 0x2C, 0x25, 0x5F, 0x3E, 0x3F,\n            28 |   0x9B, 0x90, 0xD2, 0xD3, 0xD4, 0xD6, 0xD7, 0xD8,\n            29 |   0xDE, 0x60, 0x3A, 0x23, 0xF5, 0x27, 0x3D, 0x22,\n            30 |   0x9D, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n            31 |   0x68, 0x69, 0xAE, 0xAF, 0xD0, 0xEC, 0xE7, 0xF1,\n            32 |   0xF8, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70,\n            33 |   0x71, 0x72, 0xA6, 0xA7, 0x91, 0xF7, 0x92, 0xCF,\n            34 |   0xE6, 0xE1, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78,\n            35 |   0x79, 0x7A, 0xAD, 0xA8, 0xD1, 0xED, 0xE8, 0xA9,\n            36 |   0xBD, 0x9C, 0xBE, 0xFA, 0xB8, 0x40, 0xF4, 0xAC,\n            37 |   0xAB, 0xF3, 0xAA, 0x7C, 0xEE, 0xF9, 0xEF, 0x9E,\n            38 |   0x84, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,\n            39 |   0x48, 0x49, 0xF0, 0x93, 0xDD, 0x95, 0xA2, 0xE4,\n            40 |   0x81, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50,\n            41 |   0x51, 0x52, 0xFB, 0x96, 0x7D, 0x97, 0xA3, 0x98,\n            42 |   0x5C, 0xF6, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58,\n            43 |   0x59, 0x5A, 0xFD, 0xE2, 0x5C, 0xE3, 0xE0, 0xE5,\n            44 |   0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,\n            45 |   0x38, 0x39, 0xFC, 0xEA, 0x5D, 0xEB, 0xE9, 0xFE\n            46 | \u00fc ;\n            47 |\n            48 | // ASCII->EBCDIC table (850->273)\n            49 | extern const unsigned char isis_atoe\u00c4256\u00dc =\n            50 | \u00e4\n            51 |   0x00, 0x01, 0x02, 0x03, 0x37, 0x2D, 0x2E, 0x2F,\n            52 |   0x16, 0x05, 0x15, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,\n            53 |   0x10, 0x11, 0x12, 0x13, 0x3C, 0x3D, 0x32, 0x26,\n            54 |   0x18, 0x19, 0x3F, 0x27, 0x1C, 0x1D, 0x1E, 0x1F,\n            55 |   0x40, 0x4F, 0x7F, 0x7B, 0x5B, 0x6C, 0x50, 0x7D,\n            56 |   0x4D, 0x5D, 0x5C, 0x4E, 0x6B, 0x60, 0x4B, 0x61,\n            57 |   0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,\n            58 |   0xF8, 0xF9, 0x7A, 0x5E, 0x4C, 0x7E, 0x6E, 0x6F,\n            59 |   0xB5, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7,\n            60 |   0xC8, 0xC9, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6,\n            61 |   0xD7, 0xD8, 0xD9, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6,\n            62 |   0xE7, 0xE8, 0xE9, 0x63, 0xEC, 0xFC, 0x5F, 0x6D,\n            63 |   0x79, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,\n            64 |   0x88, 0x89, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96,\n            65 |   0x97, 0x98, 0x99, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6,\n            66 |   0xA7, 0xA8, 0xA9, 0x43, 0xBB, 0xDC, 0x59, 0x07,\n            67 |   0x68, 0xD0, 0x51, 0x42, 0xC0, 0x44, 0x47, 0x48,\n            68 |   0x52, 0x53, 0x54, 0x57, 0x56, 0x58, 0x4A, 0x67,\n            69 |   0x71, 0x9C, 0x9E, 0xCB, 0x6A, 0xCD, 0xDB, 0xDD,\n            70 |   0xDF, 0xE0, 0x5A, 0x70, 0xB1, 0x80, 0xBF, 0x04,\n            71 |   0x45, 0x55, 0xCE, 0xDE, 0x49, 0x69, 0x9A, 0x9B,\n            72 |   0xAB, 0xAF, 0xBA, 0xB8, 0xB7, 0xAA, 0x8A, 0x8B,\n            73 |   0x06, 0x08, 0x09, 0x0A, 0x14, 0x65, 0x62, 0x64,\n            74 |   0xB4, 0x15, 0x17, 0x1A, 0x1B, 0xB0, 0xB2, 0x20,\n            75 |   0x21, 0x22, 0x23, 0x24, 0x28, 0x29, 0x46, 0x66,\n            76 |   0x2A, 0x2B, 0x2C, 0x30, 0x31, 0x33, 0x34, 0x9F,\n            77 |   0x8C, 0xAC, 0x72, 0x73, 0x74, 0x35, 0x75, 0x76,\n            78 |   0x77, 0x36, 0x38, 0x39, 0x3A, 0xCC, 0x78, 0x3B,\n            79 |   0xEE, 0xA1, 0xEB, 0xED, 0xCF, 0xEF, 0xA0, 0x8E,\n            80 |   0xAE, 0xFE, 0xFB, 0xFD, 0x8D, 0xAD, 0xBC, 0xBE,\n            81 |   0xCA, 0x8F, 0x3E, 0xB9, 0xB6, 0x7C, 0xE1, 0x9D,\n            82 |   0x90, 0xBD, 0xB3, 0xDA, 0xFA, 0xEA, 0xFF, 0x41\n            83 | \u00fc ;\n            84 |\n            85 | // EBCDIC->ASCII table (273->ISO8859-1)\n            86 | extern const unsigned char isis_etoa_ISO8859_1\u00c4256\u00dc =\n            87 | \u00e4\n            88 |    0x00, 0x01, 0x02, 0x03, 0x9C, 0x09, 0x86, 0x7F,\n            89 |    0x97, 0x8D, 0x8E, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,\n            90 |    0x10, 0x11, 0x12, 0x13, 0x9D, 0x0A, 0x08, 0x87,\n            91 |    0x18, 0x19, 0x92, 0x8F, 0x1C, 0x1D, 0x1E, 0x1F,\n            92 |    0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x17, 0x1B,\n            93 |    0x88, 0x89, 0x8A, 0x8B, 0x8C, 0x05, 0x06, 0x07,\n            94 |    0x90, 0x91, 0x16, 0x93, 0x94, 0x95, 0x96, 0x04,\n            95 |    0x98, 0x99, 0x9A, 0x9B, 0x14, 0x15, 0x9E, 0x1A,\n            96 |    0x20, 0xA0, 0xE2, 0x7B, 0xE0, 0xE1, 0xE3, 0xE5,\n            97 |    0xE7, 0xF1, 0xC4, 0x2E, 0x3C, 0x28, 0x2B, 0x21,\n            98 |    0x26, 0xE9, 0xEA, 0xEB, 0xE8, 0xED, 0xEE, 0xEF,\n            99 |    0xEC, 0x7E, 0xDC, 0x24, 0x2A, 0x29, 0x3B, 0x5E,\n           100 |    0x2D, 0x2F, 0xC2, 0x5B, 0xC0, 0xC1, 0xC3, 0xC5,\n           101 |    0xC7, 0xD1, 0xF6, 0x2C, 0x25, 0x5F, 0x3E, 0x3F,\n           102 |    0xF8, 0xC9, 0xCA, 0xCB, 0xC8, 0xCD, 0xCE, 0xCF,\n           103 |    0xCC, 0x60, 0x3A, 0x23, 0xA7, 0x27, 0x3D, 0x22,\n           104 |    0xD8, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n           105 |    0x68, 0x69, 0xAB, 0xBB, 0xF0, 0xFD, 0xFE, 0xB1,\n           106 |    0xB0, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70,\n           107 |    0x71, 0x72, 0xAA, 0xBA, 0xE6, 0xB8, 0xC6, 0xA4,\n           108 |    0xB5, 0xDF, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78,\n           109 |    0x79, 0x7A, 0xA1, 0xBF, 0xD0, 0xDD, 0xDE, 0xAE,\n           110 |    0xA2, 0xA3, 0xA5, 0xB7, 0xA9, 0x40, 0xB6, 0xBC,\n           111 |    0xBD, 0xBE, 0xAC, 0x7C, 0xAF, 0xA8, 0xB4, 0xD7,\n           112 |    0xE4, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47,\n           113 |    0x48, 0x49, 0xAD, 0xF4, 0xA6, 0xF2, 0xF3, 0xF5,\n           114 |    0xFC, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50,\n           115 |    0x51, 0x52, 0xB9, 0xFB, 0x7D, 0xF9, 0xFA, 0xFF,\n           116 |    0xD6, 0xF7, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58,\n           117 |    0x59, 0x5A, 0xB2, 0xD4, 0x5C, 0xD2, 0xD3, 0xD5,\n           118 |    0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37,\n           119 |    0x38, 0x39, 0xB3, 0xDB, 0x5D, 0xD9, 0xDA, 0x9F\n           120 | \u00fc ;\n           121 |\n           122 | // ASCII->EBCDIC table (ISO8859-1->273)\n           123 | extern const unsigned char isis_atoe_ISO8859_1\u00c4256\u00dc =\n           124 | \u00e4\n           125 |   0x00, 0x01, 0x02, 0x03, 0x37, 0x2D, 0x2E, 0x2F,\n           126 |   0x16, 0x05, 0x15, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,\n           127 |   0x10, 0x11, 0x12, 0x13, 0x3C, 0x3D, 0x32, 0x26,\n           128 |   0x18, 0x19, 0x3F, 0x27, 0x1C, 0x1D, 0x1E, 0x1F,\n           129 |   0x40, 0x4F, 0x7F, 0x7B, 0x5B, 0x6C, 0x50, 0x7D,\n           130 |   0x4D, 0x5D, 0x5C, 0x4E, 0x6B, 0x60, 0x4B, 0x61,\n           131 |   0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF7,\n           132 |   0xF8, 0xF9, 0x7A, 0x5E, 0x4C, 0x7E, 0x6E, 0x6F,\n           133 |   0xB5, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7,\n           134 |   0xC8, 0xC9, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6,\n           135 |   0xD7, 0xD8, 0xD9, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6,\n           136 |   0xE7, 0xE8, 0xE9, 0x63, 0xEC, 0xFC, 0x5F, 0x6D,\n           137 |   0x79, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,\n           138 |   0x88, 0x89, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96,\n           139 |   0x97, 0x98, 0x99, 0xA2, 0xA3, 0xA4, 0xA5, 0xA6,\n           140 |   0xA7, 0xA8, 0xA9, 0x43, 0xBB, 0xDC, 0x59, 0x07,\n           141 |   0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x06, 0x17,\n           142 |   0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x09, 0x0A, 0x1B,\n           143 |   0x30, 0x31, 0x1A, 0x33, 0x34, 0x35, 0x36, 0x08,\n           144 |   0x38, 0x39, 0x3A, 0x3B, 0x04, 0x14, 0x3E, 0xFF,\n           145 |   0x41, 0xAA, 0xB0, 0xB1, 0x9F, 0xB2, 0xCC, 0x7C,\n           146 |   0xBD, 0xB4, 0x9A, 0x8A, 0xBA, 0xCA, 0xAF, 0xBC,\n           147 |   0x90, 0x8F, 0xEA, 0xFA, 0xBE, 0xA0, 0xB6, 0xB3,\n           148 |   0x9D, 0xDA, 0x9B, 0x8B, 0xB7, 0xB8, 0xB9, 0xAB,\n           149 |   0x64, 0x65, 0x62, 0x66, 0x4A, 0x67, 0x9E, 0x68,\n           150 |   0x74, 0x71, 0x72, 0x73, 0x78, 0x75, 0x76, 0x77,\n           151 |   0xAC, 0x69, 0xED, 0xEE, 0xEB, 0xEF, 0xE0, 0xBF,\n           152 |   0x80, 0xFD, 0xFE, 0xFB, 0x5A, 0xAD, 0xAE, 0xA1,\n           153 |   0x44, 0x45, 0x42, 0x46, 0xC0, 0x47, 0x9C, 0x48,\n           154 |   0x54, 0x51, 0x52, 0x53, 0x58, 0x55, 0x56, 0x57,\n           155 |   0x8C, 0x49, 0xCD, 0xCE, 0xCB, 0xCF, 0x6A, 0xE1,\n           156 |   0x70, 0xDD, 0xDE, 0xDB, 0xD0, 0x8D, 0x8E, 0xDF\n           157 | \u00fc ;\n           158 |\n0                                   * * * * *   E N D   O F   S O U R C E   * * * * *\n-\n\n15694A01 V1.13 z/OS XL C++            //'ESA.PRJ.CBTDSSN.CPP(EBCDICUT)'                      30.11.12 08:25:33\n0                                    * * * * *   I N C L U D E S   * * * * *\n     1  =  //'ESA.PRJ.CBTDSSN.HPP(ISISDEF)'\n0                                 * * * * *   E N D   O F   I N C L U D E S   * * * * *\n0\n15694A01 V1.13 z/OS XL C++            //'ESA.PRJ.CBTDSSN.CPP(EBCDICUT)'                      30.11.12 08:25:33\n-                           * * * * *   M E S S A G E   S U M M A R Y   * * * * *\n0TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL\n                (U)       (S)         (E)        (W)          (I)\n     0           0         0           0          0            0\n0                    * * * * *   E N D   O F   M E S S A G E   S U M M A R Y   * * * * *\n0                        * * * * *   E N D   O F   C O M P I L A T I O N   * * * * *\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GDSSDB": {"ttr": 2735, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(GDSSDB)'                      30.11.12 08:26:06\n0                                      * * * * *   P R O L O G   * * * * *\n    Compiler options. . . . . . . :AGGRCOPY(NOOVERLAP)             ANSIALIAS       ARCH(7)         ARGPARSE        NOASCII\n                                  :NOATTRIBUTE     ASSERT(RESTRICT)                BITFIELD(UNSIGNED)              CHARS(UNSIGNED)\n                                  :NOCOMPACT       NOCOMPRESS      CVFT            NODFP           DIGRAPH         DLL(CALLBACKANY)\n                                  :ENUMSIZE(SMALL) NOEVENTS        EXECOPS         EXH             NOEXPMAC        NOEXPORTALL\n                                  :NOFASTTEMPINC   FLAG(I)         NOGOFF          GONUMBER        HALT(16)\n                                  :NOHGPR(NOPRESERVE)              NOHOT           NOIGNERRNO      ILP32           NOINITAUTO\n                                  :NOINLRPT        NOLIBANSI       NOLIST          LONGNAME        NOMAKEDEP       NOMARGINS\n                                  :MAXMEM(2097152) MEMORY          NAMEMANGLING(zOSV1R2)           NESTINC(255)    OBJECT\n                                  :OBJECTMODEL(COMPAT)             NOOE            NOOFFSET        OPTIMIZE(2)     PLIST(HOST)\n                                  :NOPORT          NOPPONLY        PREFETCH        REDIR           NOREPORT        ROSTRING\n                                  :ROCONST         RTTI(ALL)       NOSEQUENCE      NOSHOWINC       NOSHOWMACROS    SOURCE\n                                  :SKIPSRC(SHOW)   SPILL(3600)     START           NOSTATICINLINE  STRICT\n                                  :NOSTRICT_INDUCTION              TARGET(LE,CURRENT)              TEMPLATEDEPTH(300)\n                                  :NOTEMPLATEREGISTRY              TEMPLATERECOMPILE               TERMINAL        TEST(HOOK)\n                                  :TMPLPARSE(NO)   TUNE(7)         UNROLL(AUTO)    UTF             NOWARN0X        NOWARN64\n                                  :NOWSIZEOF       NOXREF\n                                  :NOCICS\n                                  :NOCONVLIT\n                                  :NOCSECT\n                                  :DEBUG(FORMAT(ISD),LEVEL(0),HOOK(NOLINE,NOBLOCK,NOPATH,CALL,FUNC),NOSYMBOL)\n                                  :DEFINE(__OS390__=1,_POSIX_SOURCE=1,_XOPEN_SOURCE_EXTENDED=1,MU_STANDALONE=1,ISIS_PF_MU=1)\n                                  :FLOAT(HEX,FOLD,NOMAF,AFP(NOVOLATILE)) ROUND(Z)\n                                  :NOHALTONMSG\n                                  :INFO(LAN)\n                                  :INLINE(AUTO,NOREPORT,100,1000)\n                                  :NOIPA\n                                  :KEYWORD(bool,explicit,export,false,mutable,namespace,true,typename,using,restrict,__restrict__,\n                                   __restrict,_Pragma,__alignof__,__asm__,__attribute__,__const__,__extension__,__volatile__,\n                                   __inline__,__signed__,__typeof__,__I,_Complex,__complex__,__real__,__imag__)\n                                  :NOKEYWORD(char16_t,char32_t,decltype,static_assert,typeof)\n                                  :LANGLVL(ANONSTRUCT,ANONUNION,ANSIFOR,ANSISINIT,NOAUTOTYPEDEDUCTION,C99VLA,C99__FUNC__,\n                                   NOC99LONGLONG,NOC99PREPROCESSOR,NOCOMPATRVALUEBINDING,NODBCS,NODECLTYPE,NODELEGATINGCTORS,\n                                   DEPENDENTBASELOOKUP,NODOLLARINNAMES,EMPTYSTRUCT,NOEXTENDEDFRIEND,NOEXTENDEDINTEGERSAFE,\n                                   EXTERNTEMPLATE,ILLPTOM,IMPLICITINT,NOINLINENAMESPACE,LIBEXT,LONGLONG,NONEWEXCP,OFFSETNONPOD,\n                                   NOOLDDIGRAPH,OLDFRIEND,NOOLDMATH,NOOLDSTR,OLDTEMPACC,NOOLDTMPLALIGN,OLDTMPLSPEC,NOSTATIC_ASSERT,\n                                   NOTEMPSASLOCALS,NOTEXTAFTERENDIF,GNU_LABELVALUE,GNU_COMPUTEDGOTO,TRAILENUM,TYPEDEFCLASS,NOUCS,\n                                   VARARGMACROS,NOVARIADICTEMPLATES,GNU_INCLUDE_NEXT,ZEROEXTARRAY,NOC99COMPLEX,NOC99COMPLEXHEADER,\n                                   NOGNU_COMPLEX,GNU_SUFFIXIJ)\n                                  :LOCALE(DE_DE.IBM-273)\n                                  :NOLSEARCH\n                                  :OPTFILE(DD:OPTFILE)\n                                  :NORTCHECK\n                                  :SEARCH(//'CEE.SCEEH.+', //'CBC.SCLBH.+', CEE.SCEEH.+, CBC.SCLBH.+, DD:USERLIB)\n                                  :NOSERVICE\n                                  :NOSQL\n                                  :NOSUPPRESS\n                                  :TEMPINC(./tempinc)\n                                  :NOXPLINK(NOBACKCHAIN,NOCALLBACK,GUARD,OSCALL(UPSTACK),NOSTOREARGS)\n    Version Macros. . . . . . . . : __COMPILER_VER__=0x410D0000\n                                  : __LIBREL__=0x410D0000\n                                  : __TARGET_LIB__=0x410D0000\n    Source margins. . . . . . . . :\n      Varying length. . . . . . . : 1 - 32760\n      Fixed length. . . . . . . . : 1 - 32760\n    Sequence columns. . . . . . . :\n      Varying length. . . . . . . : none\n      Fixed length. . . . . . . . : none\n    Locale name . . . . . . . . . : DE_DE.IBM-273\n    Code set. . . . . . . . . . . : IBM-273\n    Listing name. . . . . . . . . : DD:SYSCPRT\n0                                 * * * * *   E N D   O F   P R O L O G   * * * * *\n-\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(GDSSDB)'                      30.11.12 08:26:06\n-\n                                       * * * * *   S O U R C E   * * * * *\n0            1 | ??=pragma filetag(\"IBM-273\")\n             2 | ??=pragma nomargins nosequence\n             3 |\n             4 |\n             5 |\n             6 |\n             7 |\n             8 |\n             9 |\n            10 |\n            11 |\n            12 |\n            13 |\n            14 |\n            15 |\n            16 |\n            17 |\n            18 |\n            19 |\n            20 |\n            21 |\n            22 |\n            23 |\n            24 |\n            25 |\n            26 |\n            27 |\n            28 |\n            29 | #include <string.h>\n            30 | #include <stddef.h>\n            31 | extern \"OS\" void DSNHLI(void *);\n            32 | typedef struct\n            33 |               \u00e4 short   SQLPLLEN;\n            34 |                 short   SQLFLAGS;\n            35 |                 short   SQLCTYPE;\n            36 |                 char    SQLPROGN??(8??);\n            37 |                 unsigned short SQLTIMES??(4??);\n            38 |                 short   SQLSECTN;\n            39 |                 char   *SQLCODEP;\n            40 |                 char   *SQLVPARM;\n            41 |                 char   *SQLAPARM;\n            42 |                 short   SQLSTNM7;\n            43 |                 short   SQLSTYPE;\n            44 |                 long    SQLSTNUM;\n            45 |                 unsigned long SQLRSRVD??(5??);\n            46 |               \u00fc SQLPLIST;\n            47 | typedef struct\n            48 |               \u00e4 short    SQLTYPE;\n            49 |                 short    SQLLEN;\n            50 |                 char    *SQLADDR;\n            51 |                 char    *SQLIND;\n            52 |                 short    SQLNAMLEN;\n            53 |                 char     SQLNAMDATA??(30??);\n            54 |               \u00fc SQLELTS;\n            55 | typedef SQLELTS     *SQLELTS_PTR;\n            56 | typedef struct\n            57 |               \u00e4 long          SQLLONGLEN;\n            58 |                 unsigned long RESERVED;\n            59 |                 char         *SQLDATALEN;\n            60 |                 short         SQLNAMLEN;\n            61 |                 char          SQLNAMDATA??(30??);\n            62 |               \u00fc SQLELTS2;\n            63 | typedef struct\n            64 |     \u00e4 char   SQLDAID??(8??);\n            65 |       long   SQLDABC;\n            66 |       short  SQLN;\n            67 |       short  SQLD;\n            68 |       char  SQLPVELT??( sizeof(SQLELTS) ??);\n            69 |     \u00fc SQLPVARS;\n            70 | typedef SQLPVARS *SQLPVARS_PTR;\n            71 | char    SQLTEMP??( 129 ??) ;\n            72 | long    DSNTEMP ;\n            73 | long    DSNNROWS ;\n            74 | char    DSNPNM??( 387 ??) ;\n            75 | #define SQL_FILE_READ 2\n            76 | #define SQL_FILE_CREATE 8\n            77 | #define SQL_FILE_OVERWRITE 16\n            78 | #define SQL_FILE_APPEND 32\n            79 | class mERROR;\n            80 |\n            81 | class mERRORPSTACK \u00e4\n            82 | private:\n            83 |    long int ip;\n            84 |    long int max;\n            85 |    mERROR * * sp;\n            86 | public:\n            87 |    mERRORPSTACK(long int size=256);\n            88 |    void push(mERROR * value);\n            89 |    mERROR * examine();\n            90 |    int    callNextHandler(int);\n            91 |    mERROR * pop();\n            92 |    void  reset();\n            93 |   \u00dfmERRORPSTACK();\n            94 |\n            95 | \u00fc;\n            96 |\n            97 |\n            98 | class mERROR\n            99 | \u00e4\n           100 | protected:\n           101 |    char err;\n           102 |    int (* handler)(int);\n           103 | enum ERROR_ACTION\u00e4Warning, Abort\u00fc;\n           104 | public:\n           105 |\n           106 | static int max_rc;\n           107 |\n           108 | friend class mERRORPSTACK;\n           109 |    mERROR();\n           110 |    mERROR(int (*)(int) );\n           111 | \t virtual \u00dfmERROR()\u00e4\u00fc;\n           112 |    long int iserror()\u00e4return err;\u00fc\n           113 |    int  markerror(int code = 1)\n           114 |    \u00e4\n           115 |     err = 1;\n           116 |     if (handler) return (handler(code));\n           117 |     else return 0;\n           118 |    \u00fc\n           119 |    void clearerror()\u00e4err = 0;\u00fc\n           120 |    void setmERRORHandler(int (*h)(int))\u00e4handler = h;\u00fc\n           121 |    int error(char *,ERROR_ACTION);\n           122 | \u00fc;\n           123 |\n           124 | extern mERRORPSTACK mErrorPStack;\n           125 |\n           126 |\n           127 |\n           128 |\n           129 |\n           130 |\n           131 |\n           132 |\n           133 |\n           134 |\n           135 |\n           136 |\n           137 | extern \"C\"\n           138 | char * genOpenName(const char *name, char *nm);\n           139 |\n           140 |\n           141 |\n           142 |                    #pragma nomargins nosequence\n           143 |                    #pragma checkout(suspend)\n           144 |\n           145 |\n           146 |\n           147 |   extern \"C\" \u00e4\n           148 |\n           149 |\n           150 |                    #pragma nomargins nosequence\n           151 |                    #pragma checkout(suspend)\n           152 |\n           153 |\n           154 |\n           155 |\n           156 | extern \"C\" \u00e4\n           157 |\n           158 |\n           159 |\n           160 |\n           161 |\n           162 |\n           163 |\n           164 |\n           165 |\n           166 |\n           167 |\n           168 |\n           169 |\n           170 |\n           171 |\n           172 |\n           173 |\n           174 |\n           175 |\n           176 |\n           177 |\n           178 |\n           179 |\n           180 |\n           181 |\n           182 |\n           183 |\n           184 |\n           185 |\n           186 |\n           187 |\n           188 |\n           189 |\n           190 |\n           191 |\n           192 |\n           193 |\n           194 |\n           195 |\n           196 |\n           197 |\n           198 |\n           199 |\n           200 |\n           201 |\n           202 |\n           203 |\n           204 |\n           205 |\n           206 |\n           207 |\n           208 |\n           209 |\n           210 |\n           211 |\n           212 |\n           213 |\n           214 |\n           215 |\n           216 |\n           217 |\n           218 |\n           219 |\n           220 |\n           221 |\n           222 |\n           223 |\n           224 |\n           225 |\n           226 |\n           227 |\n           228 |\n           229 |\n           230 |\n           231 |\n           232 |\n           233 |\n           234 |\n           235 |\n           236 |\n           237 |\n           238 |\n           239 |\n           240 |\n           241 |\n           242 |\n           243 |\n           244 |\n           245 |\n           246 |\n           247 |\n           248 |\n           249 |\n           250 |\n           251 |\n           252 |\n           253 |\n           254 |\n           255 |\n           256 |\n           257 |\n           258 |\n           259 |\n           260 |\n           261 |\n           262 |\n           263 |\n           264 |\n           265 |\n           266 |\n           267 |\n           268 |\n           269 |\n           270 |\n           271 |\n           272 |\n           273 |\n           274 |\n           275 |\n           276 |\n           277 |\n           278 |\n           279 |\n           280 |\n           281 |\n           282 |\n           283 |\n           284 |\n           285 |\n           286 |\n           287 |\n           288 |\n           289 |\n           290 |\n           291 |\n           292 |\n           293 |\n           294 |\n           295 |\n           296 |\n           297 |\n           298 |\n           299 |\n           300 |\n           301 |\n           302 |\n           303 |\n           304 |\n           305 |\n           306 |\n           307 |\n           308 |\n           309 |\n           310 |\n           311 |\n           312 |\n           313 |\n           314 |\n           315 |\n           316 |\n           317 |\n           318 |\n           319 |\n           320 |\n           321 |\n           322 |\n           323 |\n           324 |\n           325 |\n           326 |\n           327 |\n           328 |\n           329 |\n           330 |\n           331 |\n           332 |\n           333 |\n           334 |\n           335 |\n           336 |\n           337 |\n           338 |\n           339 |\n           340 |\n           341 |\n           342 |\n           343 |\n           344 |\n           345 |\n           346 |\n           347 |\n           348 |\n           349 |\n           350 |\n           351 |\n           352 |\n           353 |\n           354 |\n           355 |\n           356 |\n           357 |\n           358 |\n           359 |\n           360 |\n           361 |\n           362 |\n           363 |\n           364 |\n           365 |\n           366 |\n           367 |\n           368 |\n           369 |\n           370 |\n           371 |\n           372 |\n           373 |\n           374 |\n           375 |\n           376 |\n           377 |\n           378 |\n           379 |\n           380 |\n           381 |\n           382 |\n           383 |\n           384 |\n           385 | \u00fc\n           386 |\n           387 |                    #pragma checkout(resume)\n           388 |                    #pragma nomargins nosequence\n           389 |                    #pragma checkout(suspend)\n           390 |\n           391 |\n           392 |\n           393 |\n           394 |\n           395 |\n           396 |\n           397 |\n           398 |\n           399 |\n           400 |\n           401 |\n           402 |\n           403 |\n           404 |\n           405 |                    #pragma nomargins nosequence\n           406 |                    #pragma checkout(suspend)\n           407 |\n           408 |\n           409 |\n           410 |    extern \"C\" \u00e4\n           411 |\n           412 |    typedef  int ptrdiff_t;\n           413 |\n           414 |        typedef unsigned int size_t;\n           415 |\n           416 |\n           417 |\n           418 |\n           419 |\n           420 |    \u00fc\n           421 |\n           422 |                    #pragma checkout(resume)\n           423 |\n           424 |   extern \"C\" \u00e4\n           425 |\n           426 |\n           427 |\n           428 |\n           429 |\n           430 |         extern \"builtin\"\n           431 |\n           432 |         int     __clcl (void*, void*, unsigned int*,\n           433 |                         unsigned int*, unsigned char);\n           434 |\n           435 |\n           436 |\n           437 |\n           438 |         extern \"builtin\"\n           439 |\n           440 |         int     __stck (unsigned long long *);\n           441 |\n           442 |\n           443 |\n           444 |\n           445 |         extern \"builtin\"\n           446 |\n           447 |         int     __stcke (void *);\n           448 |\n           449 |\n           450 |\n           451 |\n           452 |         #pragma pack (1)\n           453 |\n           454 |           typedef struct __stcke_tod \u00e4\n           455 |             unsigned char      c;\n           456 |             unsigned long long slice;\n           457 |             unsigned int       i;\n           458 |           \u00fc __stcke_tod_t;\n           459 |\n           460 |           typedef struct __stcke_tag \u00e4\n           461 |             unsigned char  zeros;\n           462 |             __stcke_tod_t  tod;\n           463 |             unsigned short p_field;\n           464 |           \u00fc __stcke_t;\n           465 |         #pragma pack (reset)\n           466 |\n           467 |\n           468 |\n           469 |\n           470 |\n           471 |         extern \"builtin\" \u00e4\n           472 |\n           473 |         void  __tr (unsigned char*, const unsigned char*,              \u00d6\n           474 |        unsigned char);\n           475 |\n           476 |       \u00fc\n           477 |\n           478 |         extern \"builtin\" \u00e4\n           479 |\n           480 |         int  __ed (unsigned char*, unsigned char*, unsigned char);\n           481 |         int  __edmk (unsigned char*, unsigned char*,                   \u00d6\n           482 |    unsigned char, unsigned char**);\n           483 |         int  __trt (unsigned char*, const unsigned char*,              \u00d6\n           484 |        unsigned char, unsigned char*, unsigned char**);\n           485 |         int  __nc (unsigned char*, unsigned char*, unsigned char);\n           486 |         int  __oc (unsigned char*, unsigned char*, unsigned char);\n           487 |         int  __xc (unsigned char*, unsigned char*, unsigned char);\n           488 |         void __pack (unsigned char*, unsigned char,                    \u00d6\n           489 |   unsigned char*, unsigned char);\n           490 |         void __unpk (unsigned char*, unsigned char,                    \u00d6\n           491 |   unsigned char*, unsigned char);\n           492 |\n           493 |       \u00fc\n           494 |\n           495 |         long double  __fmaddl (long double, long double, long double);\n           496 |\n           497 |\n           498 |\n           499 |\n           500 |\n           501 |\n           502 |\n           503 |\n           504 |\n           505 |\n           506 |\n           507 |\n           508 |\n           509 |\n           510 |\n           511 |\n           512 |\n           513 |\n           514 |\n           515 |\n           516 |\n           517 |\n           518 |\n           519 |\n           520 |\n           521 |\n           522 |       extern \"builtin\" \u00e4\n           523 |\n           524 |         int    __lper (float*, float);\n           525 |         int    __lpdr (double*, double);\n           526 |         int    __lner (float*, float);\n           527 |         int    __lndr (double*, double);\n           528 |         float  __sqer (float);\n           529 |         double __sqdr (double);\n           530 |\n           531 |       \u00fc\n           532 |\n           533 |\n           534 |\n           535 |\n           536 |\n           537 |\n           538 |       extern \"builtin\" \u00e4\n           539 |\n           540 |         float       __fier (float);\n           541 |         double      __fidr (double);\n           542 |         long double __fixr (long double);\n           543 |         int         __cfer (int*, int, float);\n           544 |         int         __cfdr (int*, int, double);\n           545 |         int         __cfxr (int*, int, long double);\n           546 |         int         __lpxr (long double*, long double);\n           547 |         int         __lnxr (long double*, long double);\n           548 |         long double __sqxr (long double);\n           549 |\n           550 |       \u00fc\n           551 |\n           552 |\n           553 |\n           554 |\n           555 |\n           556 |\n           557 |\n           558 |\n           559 |\n           560 |\n           561 |       extern \"builtin\" \u00e4\n           562 |\n           563 |         int __thder (double*, float);\n           564 |         int __thdr  (double*, double);\n           565 |         int __tbedr (float*, int, double);\n           566 |         int __tbdr  (double*, int, double);\n           567 |\n           568 |       \u00fc\n           569 |\n           570 |\n           571 |\n           572 |\n           573 |       extern \"builtin\" \u00e4\n           574 |\n           575 |         unsigned short __lrvh  (unsigned short*);\n           576 |         unsigned int   __lrv   (unsigned int*);\n           577 |         void  __strvh (unsigned short, unsigned short*);\n           578 |         void  __strv  (unsigned int, unsigned int*);\n           579 |\n           580 |       \u00fc\n           581 |\n           582 |\n           583 |\n           584 |\n           585 |\n           586 |\n           587 |\n           588 |\n           589 |\n           590 |\n           591 |\n           592 |\n           593 |\n           594 |       extern \"builtin\" \u00e4\n           595 |\n           596 |         int  __cvb(char *op2);\n           597 |         void __cvd(int op1, char *op2);\n           598 |         int  __zap(unsigned char *op1, unsigned char len1,\n           599 |                    unsigned char *op2, unsigned char len2);\n           600 |\n           601 |\n           602 |\n           603 |\n           604 |\n           605 |           int __clcle(char *op1, unsigned long op1_len, unsigned char o\u00d6\n           606 | p2,\n           607 |                       char *op3, unsigned long op3_len);\n           608 |           int __mvcle(char *op1, unsigned long op1_len, unsigned char o\u00d6\n           609 | p2,\n           610 |                       char *op3, unsigned long op3_len);\n           611 |\n           612 |\n           613 |\n           614 |\n           615 |\n           616 |           int __tre(char *op1, unsigned long op1_len,\n           617 |                     char *op2, unsigned char test_char);\n           618 |\n           619 |\n           620 |             long long __cvbg(char *op2);\n           621 |             void      __cvdg(long long op1, char *op2);\n           622 |\n           623 |\n           624 |\n           625 |\n           626 |\n           627 |\n           628 |\n           629 |\n           630 |\n           631 |\n           632 |       \u00fc\n           633 |\n           634 |\n           635 |\n           636 |\n           637 |\n           638 |\n           639 |\n           640 |\n           641 |\n           642 |\n           643 |\n           644 |\n           645 |\n           646 |\n           647 |\n           648 |\n           649 |\n           650 |\n           651 |\n           652 |\n           653 |\n           654 |\n           655 |\n           656 |\n           657 |\n           658 |\n           659 |\n           660 |\n           661 |\n           662 |\n           663 |\n           664 |\n           665 |\n           666 |\n           667 |\n           668 |\n           669 |\n           670 |\n           671 |\n           672 |\n           673 |         typedef union \u00e4\n           674 |             struct __dword \u00e4\n           675 |                 unsigned int __high_word;\n           676 |                 unsigned int __low_word;\n           677 |             \u00fc __s_dword;\n           678 |             unsigned long long __dword;\n           679 |         \u00fc __plo_entry_t;\n           680 |\n           681 |         typedef union \u00e4\n           682 |             unsigned long long   __val;\n           683 |             unsigned long long * __ptr;\n           684 |         \u00fc __plo_ull_ullptr_t;\n           685 |\n           686 |         typedef union \u00e4\n           687 |             unsigned int       * __uint_ptr;\n           688 |             unsigned long long * __ull_ptr;\n           689 |         \u00fc __plo_uintptr_ullptr_t;\n           690 |\n           691 |         typedef __plo_ull_ullptr_t __plo_plist\u00c418\u00dc;\n           692 |\n           693 |\n           694 |\n           695 |\n           696 |\n           697 |\n           698 |\n           699 |           extern \"builtin\" \u00e4\n           700 |\n           701 |           int __plo_CL     (void *lock,\n           702 |                             unsigned int *op1c, unsigned int *op2,\n           703 |                             unsigned int *op3, unsigned int *op4);\n           704 |           int __plo_CS     (void *lock,\n           705 |                             unsigned int *op1c, unsigned int op1r,\n           706 |                             unsigned int *op2);\n           707 |           int __plo_DCS    (void *lock,\n           708 |                             unsigned int *op1c, unsigned int op1r,\n           709 |                             unsigned int *op2,\n           710 |                             unsigned int *op3c, unsigned int op3r,\n           711 |                             unsigned int *op4);\n           712 |           int __plo_CSST   (void *lock,\n           713 |                             unsigned int *op1c, unsigned int op1r,\n           714 |                             unsigned int *op2,\n           715 |                             unsigned int op3, unsigned int *op4);\n           716 |           int __plo_CSDST  (void *lock,\n           717 |                             unsigned int *op1c, unsigned int op1r,\n           718 |                             unsigned int *op2, void *param_list);\n           719 |           int __plo_CSTST  (void *lock,\n           720 |                             unsigned int *op1c, unsigned int op1r,\n           721 |                             unsigned int *op2, void *param_list);\n           722 |\n           723 |         \u00fc\n           724 |\n           725 |\n           726 |\n           727 |\n           728 |\n           729 |\n           730 |\n           731 |\n           732 |\n           733 |\n           734 |\n           735 |\n           736 |\n           737 |\n           738 |\n           739 |\n           740 |   \u00fc\n           741 |\n           742 |                    #pragma checkout(resume)\n           743 |\n           744 |\n           745 |     typedef struct __div_t\n           746 |       \u00e4\n           747 |       int quot;\n           748 |       int rem;\n           749 |       \u00fc div_t;\n           750 |\n           751 |     typedef struct __ldiv_t\n           752 |       \u00e4\n           753 |       long int quot;\n           754 |       long int rem;\n           755 |       \u00fc ldiv_t;\n           756 |\n           757 |    typedef struct \u00e4\n           758 |                long long quot;\n           759 |                long long rem;\n           760 |    \u00fc lldiv_t;\n           761 |\n           762 |        typedef struct \u00e4\n           763 |                  long  __uheap_size;\n           764 |                  long  __uheap_bytes_alloc;\n           765 |                  long  __uheap_bytes_free;\n           766 |        \u00fc hreport_t;\n           767 |\n           768 |\n           769 |\n           770 |\n           771 |\n           772 |       extern \"builtin\"\n           773 |       void **_Gtab(int);\n           774 |\n           775 |       extern \"builtin\"\n           776 |       const void *_gtca(void);\n           777 |\n           778 |\n           779 |\n           780 |\n           781 |\n           782 |\n           783 |\n           784 |\n           785 |       long long int strtoll(const char * restrict, char * * restrict, i\u00d6\n           786 | nt);\n           787 |       unsigned long long int strtoull(const char * restrict, char * * r\u00d6\n           788 | estrict, int);\n           789 |         #pragma map (strtoll,   \"\u00d6174\u00d6174STRLL\")\n           790 |         #pragma map (strtoull,  \"\u00d6174\u00d6174STRULL\")\n           791 |\n           792 |     double   atof (const char *);\n           793 |     int      atoi (const char *);\n           794 |     long int atol (const char *);\n           795 |     double   strtod (const char * restrict, char * * restrict);\n           796 |     long int strtol (const char * restrict, char * * restrict,\n           797 |                       int);\n           798 |     unsigned long int strtoul (const char * restrict,\n           799 |                                 char * * restrict, int);\n           800 |     int      rand (void);\n           801 |     void     srand (unsigned int);\n           802 |         long long int strtoll (const char * restrict,\n           803 |                                 char * * restrict, int);\n           804 |         unsigned long long int strtoull (const char * restrict,\n           805 |                                           char * * restrict, int);\n           806 |\n           807 |\n           808 |\n           809 |\n           810 |       void *   calloc (size_t, size_t);\n           811 |       void     free (void *);\n           812 |       void *   malloc (size_t);\n           813 |       void *   realloc (void *, size_t);\n           814 |\n           815 |\n           816 |\n           817 |     extern \"builtin\"\n           818 |     int       __abs (int);\n           819 |\n           820 |\n           821 |\n           822 |      #pragma map (__getenv,        \"\u00d6174\u00d6174GETENV\")\n           823 |\n           824 |\n           825 |\n           826 |     void     abort (void);\n           827 |     int      atexit (void (*)(void));\n           828 |     void     exit (int);\n           829 |     char *   getenv (const char *);\n           830 |     char *   __getenv (const char *);\n           831 |     int      system (const char *);\n           832 |     void *   bsearch (const void *, const void *,\n           833 |                       size_t, size_t,\n           834 |                       int (*)(const void *,\n           835 |                                     const void *));\n           836 |     void     qsort (void *, size_t, size_t,\n           837 |                     int (*)(const void *,\n           838 |                                   const void *));\n           839 |\n           840 |     int unatexit(void (*)(void));\n           841 |\n           842 |\n           843 |         int      __heaprpt(hreport_t *);\n           844 |\n           845 |     extern \"C++\" \u00e4\n           846 |       inline int abs (int x) \u00e4 return __abs(x); \u00fc\n           847 |     \u00fc\n           848 |\n           849 |\n           850 |\n           851 |\n           852 |\n           853 |\n           854 |     div_t    div (int, int);\n           855 |     long int labs (long int);\n           856 |     ldiv_t   ldiv (long int, long int);\n           857 |     int      mblen (const char *, size_t);\n           858 |     int      mbtowc (wchar_t * restrict,\n           859 |                       const char * restrict, size_t);\n           860 |     int      wctomb (char *, wchar_t);\n           861 |     size_t   mbstowcs (wchar_t * restrict,\n           862 |                         const char * restrict, size_t);\n           863 |     size_t   wcstombs (char * restrict,\n           864 |                         const wchar_t * restrict, size_t);\n           865 |\n           866 |\n           867 |       long long llabs(long long );\n           868 |       lldiv_t lldiv(long long , long long );\n           869 |\n           870 |\n           871 |\n           872 |\n           873 |\n           874 |\n           875 |\n           876 |\n           877 |\n           878 |\n           879 |\n           880 |       void (*  fetch (const char *))();\n           881 |       void (*  fetchep (void (*)()))();\n           882 |       int    release (void (*)());\n           883 |\n           884 |\n           885 |         inline int fortrc (void)\n           886 |           \u00e4  return (*( (int *)((char *)_gtca() + 568) ))/4; \u00fc\n           887 |\n           888 |\n           889 |\n           890 |       #pragma map (rpmatch, \"\u00d6174\u00d6174RPMTCH\")\n           891 |       #pragma map (csid,    \"\u00d6174\u00d6174CSID\")\n           892 |       #pragma map (wcsid,   \"\u00d6174\u00d6174WCSID\")\n           893 |\n           894 |       int __librel (void);\n           895 |         int clearenv (void);\n           896 |       int rpmatch(const char *);\n           897 |       int csid(const char *);\n           898 |       int wcsid(const wchar_t);\n           899 |\n           900 |\n           901 |       typedef unsigned int cs_t;\n           902 |\n           903 |       typedef union \u00e4\n           904 |         struct \u00e4\n           905 |           unsigned int first_word;\n           906 |           unsigned int second_word;\n           907 |         \u00fc double_word;\n           908 |         double alignment_dummy;\n           909 |       \u00fc cds_t;\n           910 |\n           911 |         extern \"builtin\"\n           912 |\n           913 |       int     __cs (cs_t *, cs_t *, cs_t);\n           914 |       int     (cs) (cs_t *, cs_t *, cs_t);\n           915 |\n           916 |         extern \"builtin\"\n           917 |\n           918 |         int     __cs1 (void *, void *, void *);\n           919 |\n           920 |\n           921 |\n           922 |\n           923 |         extern \"builtin\"\n           924 |\n           925 |       int     __cds (cds_t *, cds_t *, cds_t);\n           926 |       int     (cds) (cds_t *, cds_t *, cds_t);\n           927 |\n           928 |         extern \"builtin\"\n           929 |\n           930 |         int     __cds1 (void *, void *, void *);\n           931 |\n           932 |\n           933 |\n           934 |\n           935 |\n           936 |\n           937 |\n           938 |\n           939 |\n           940 |\n           941 |\n           942 |\n           943 |     #pragma map(__EnvnA, \"\u00d6174\u00d6174ENVNA\")\n           944 |\n           945 |     char *** __EnvnA(void);\n           946 |     char *** __Envn(void);\n           947 |\n           948 |\n           949 |\n           950 |\n           951 |\n           952 |\n           953 |\n           954 |\n           955 |             extern \"builtin\"\n           956 |             void *__alloca(unsigned int x);\n           957 |\n           958 |\n           959 |\n           960 |\n           961 |\n           962 |\n           963 |\n           964 |\n           965 |\n           966 |\n           967 |\n           968 |\n           969 |\n           970 |\n           971 |\n           972 |\n           973 |\n           974 |\n           975 |\n           976 |\n           977 |         double       drand48(void);\n           978 |         double       erand48(unsigned short int \u00c43\u00dc);\n           979 |         long int     jrand48(unsigned short int \u00c43\u00dc);\n           980 |         void         lcong48(unsigned short int \u00c47\u00dc);\n           981 |         long int     lrand48(void);\n           982 |         long int     mrand48(void);\n           983 |         long int     nrand48(unsigned short int \u00c43\u00dc);\n           984 |           int          putenv(const char *);\n           985 |         unsigned short int  *seed48(unsigned short int \u00c43\u00dc);\n           986 |         void         srand48(long int);\n           987 |           void         setkey(const char *);\n           988 |\n           989 |\n           990 |\n           991 |\n           992 |\n           993 |\n           994 |\n           995 |\n           996 |\n           997 |\n           998 |         long         a64l(const char *);\n           999 |         char        *ecvt(double, int, int * restrict,\n          1000 |                                        int * restrict);\n          1001 |         char        *fcvt(double, int, int * restrict,\n          1002 |                                        int * restrict);\n          1003 |         char        *gcvt(double, int, char *);\n          1004 |         int          getsubopt(char **, char *const *, char **);\n          1005 |         char        *initstate(unsigned, char *, size_t);\n          1006 |         char        *l64a(long);\n          1007 |         int          mkstemp(char *);\n          1008 |         char        *mktemp(char *);\n          1009 |         long         random(void);\n          1010 |         char        *realpath(const char * restrict,\n          1011 |                                     char * restrict);\n          1012 |         char        *setstate(const char *);\n          1013 |         void         srandom(unsigned);\n          1014 |            int          ttyslot(void);\n          1015 |            void        *valloc(size_t);\n          1016 |           int          grantpt(int);\n          1017 |           char        *ptsname(int);\n          1018 |           int          unlockpt(int);\n          1019 |\n          1020 |\n          1021 |\n          1022 |\n          1023 |        int rand_r(unsigned int *);\n          1024 |\n          1025 |\n          1026 |\n          1027 |\n          1028 |     int __discarddata(void *, size_t);\n          1029 |\n          1030 |\n          1031 |\n          1032 |           int setenv (const char *, const char *, int);\n          1033 |\n          1034 |\n          1035 |\n          1036 |\n          1037 |\n          1038 |\n          1039 |\n          1040 |\n          1041 |\n          1042 |   \u00fc\n          1043 |\n          1044 |\n          1045 |   extern \"C++\" \u00e4\n          1046 |         inline long abs (long x) \u00e4 return labs(x); \u00fc\n          1047 |         inline ldiv_t div (long x, long y)\n          1048 |         \u00e4 return ldiv(x,y); \u00fc\n          1049 |   \u00fc\n          1050 |\n          1051 |\n          1052 |                    #pragma checkout(resume)\n          1053 |\n          1054 |\n          1055 |                    #pragma nomargins nosequence\n          1056 |                    #pragma checkout(suspend)\n          1057 |\n          1058 |\n          1059 |\n          1060 |\n          1061 |\n          1062 |\n          1063 |                    #pragma nomargins nosequence\n          1064 |                    #pragma checkout(suspend)\n          1065 |\n          1066 |\n          1067 |\n          1068 |     extern \"C\" \u00e4\n          1069 |\n          1070 |\n          1071 |\n          1072 |                    #pragma nomargins nosequence\n          1073 |                    #pragma checkout(suspend)\n          1074 |\n          1075 |\n          1076 |\n          1077 |\n          1078 |\n          1079 |\n          1080 |     extern \"C\" \u00e4\n          1081 |\n          1082 |\n          1083 |\n          1084 |\n          1085 |\n          1086 |\n          1087 |\n          1088 |\n          1089 |           typedef unsigned int dev_t ;\n          1090 |\n          1091 |\n          1092 |\n          1093 |\n          1094 |              typedef int gid_t;\n          1095 |\n          1096 |\n          1097 |\n          1098 |\n          1099 |           typedef unsigned int  ino_t ;\n          1100 |\n          1101 |\n          1102 |\n          1103 |           typedef int mode_t ;\n          1104 |\n          1105 |\n          1106 |\n          1107 |\n          1108 |           typedef int nlink_t ;\n          1109 |\n          1110 |\n          1111 |\n          1112 |\n          1113 |\n          1114 |             typedef  int off_t ;\n          1115 |\n          1116 |\n          1117 |            typedef long long off64_t;\n          1118 |\n          1119 |\n          1120 |           typedef signed int pid_t ;\n          1121 |\n          1122 |\n          1123 |\n          1124 |\n          1125 |             typedef signed int ssize_t ;\n          1126 |\n          1127 |\n          1128 |\n          1129 |\n          1130 |              typedef int uid_t;\n          1131 |\n          1132 |\n          1133 |\n          1134 |\n          1135 |\n          1136 |\n          1137 |\n          1138 |           typedef long time_t ;\n          1139 |\n          1140 |\n          1141 |\n          1142 |           typedef unsigned long clock_t;\n          1143 |\n          1144 |\n          1145 |\n          1146 |           typedef struct \u00e4\n          1147 |                      unsigned int   __sigs_0;\n          1148 |                      unsigned int   __sigs_1;\n          1149 |                   \u00fc sigset_t ;\n          1150 |\n          1151 |\n          1152 |\n          1153 |           typedef unsigned char cc_t;\n          1154 |\n          1155 |\n          1156 |\n          1157 |           typedef unsigned int speed_t ;\n          1158 |\n          1159 |\n          1160 |\n          1161 |           typedef unsigned int tcflag_t ;\n          1162 |\n          1163 |\n          1164 |\n          1165 |\n          1166 |\n          1167 |\n          1168 |\n          1169 |           typedef unsigned int mtm_t ;\n          1170 |\n          1171 |\n          1172 |\n          1173 |\n          1174 |           typedef unsigned int rdev_t ;\n          1175 |\n          1176 |\n          1177 |\n          1178 |\n          1179 |           typedef char tid_t\u00c48\u00dc;\n          1180 |\n          1181 |\n          1182 |             typedef struct \u00e4\n          1183 |                       char __\u00c40x08\u00dc;\n          1184 |             \u00fc __osenv_token;\n          1185 |\n          1186 |\n          1187 |\n          1188 |\n          1189 |\n          1190 |\n          1191 |\n          1192 |           typedef struct \u00e4\n          1193 |                      char __\u00c40x08\u00dc;\n          1194 |           \u00fc pthread_t;\n          1195 |\n          1196 |           typedef  struct \u00e4\n          1197 |                       char __\u00c40x58\u00dc;\n          1198 |           \u00fc pthread_attr_t;\n          1199 |\n          1200 |              typedef struct \u00e4\n          1201 |                         unsigned long __m;\n          1202 |              \u00fc pthread_mutex_t;\n          1203 |\n          1204 |           typedef struct \u00e4\n          1205 |                      char __\u00c40x04\u00dc;\n          1206 |           \u00fc pthread_mutexattr_t;\n          1207 |\n          1208 |                 typedef struct \u00e4\n          1209 |                      char __\u00c40x04\u00dc;\n          1210 |                 \u00fc pthread_cond_t;\n          1211 |\n          1212 |           typedef struct \u00e4\n          1213 |                      char __\u00c40x04\u00dc;\n          1214 |           \u00fc pthread_condattr_t;\n          1215 |\n          1216 |           typedef struct \u00e4\n          1217 |                      char __\u00c40x04\u00dc;\n          1218 |           \u00fc pthread_key_t;\n          1219 |\n          1220 |           typedef int pthread_once_t;\n          1221 |\n          1222 |              typedef struct \u00e4\n          1223 |                         char __\u00c40x04\u00dc;\n          1224 |               \u00fc pthread_rwlockattr_t;\n          1225 |\n          1226 |              typedef struct \u00e4\n          1227 |                         char __\u00c40x04\u00dc;\n          1228 |               \u00fc pthread_rwlock_t;\n          1229 |\n          1230 |\n          1231 |\n          1232 |\n          1233 |\n          1234 |\n          1235 |\n          1236 |          typedef long key_t;\n          1237 |\n          1238 |\n          1239 |\n          1240 |\n          1241 |\n          1242 |\n          1243 |\n          1244 |          typedef int id_t;\n          1245 |\n          1246 |          typedef unsigned int  useconds_t;\n          1247 |\n          1248 |\n          1249 |          typedef unsigned char sa_family_t;\n          1250 |\n          1251 |\n          1252 |\n          1253 |          typedef unsigned short in_port_t;\n          1254 |\n          1255 |\n          1256 |             typedef long mcontext_t\u00c440\u00dc;\n          1257 |\n          1258 |\n          1259 |\n          1260 |\n          1261 |\n          1262 |           typedef  unsigned char  u_char;\n          1263 |\n          1264 |           typedef  unsigned int   u_int;\n          1265 |\n          1266 |           typedef  unsigned short ushort;\n          1267 |\n          1268 |           typedef  unsigned short u_short;\n          1269 |\n          1270 |           typedef  unsigned long  u_long;\n          1271 |\n          1272 |\n          1273 |\n          1274 |\n          1275 |\n          1276 |          typedef unsigned long in_addr_t;\n          1277 |\n          1278 |          typedef in_addr_t ip_addr_t;\n          1279 |\n          1280 |\n          1281 |          typedef  char *    caddr_t;\n          1282 |\n          1283 |\n          1284 |\n          1285 |\n          1286 |\n          1287 |\n          1288 |          typedef signed long blkcnt_t;\n          1289 |\n          1290 |          typedef signed int    blksize_t;\n          1291 |\n          1292 |          typedef unsigned long fsblkcnt_t;\n          1293 |\n          1294 |          typedef unsigned int  fsfilcnt_t;\n          1295 |\n          1296 |\n          1297 |          typedef signed int    suseconds_t;\n          1298 |\n          1299 |\n          1300 |\n          1301 |\n          1302 |\n          1303 |\n          1304 |\n          1305 |   \u00fc\n          1306 |\n          1307 |                    #pragma checkout(resume)\n          1308 |\n          1309 |\n          1310 |\n          1311 |\n          1312 |      struct __file;\n          1313 |      typedef int _GETCFUNC(struct __file *);\n          1314 |      typedef int _PUTCFUNC(int, struct __file *);\n          1315 |      struct __file\n          1316 |         \u00e4\n          1317 |         unsigned char  *__bufPtr;\n          1318 |         long int        __countIn;\n          1319 |         long int        __countOut;\n          1320 |         _GETCFUNC      *__fcbgetc;\n          1321 |         _PUTCFUNC      *__fcbputc;\n          1322 |         unsigned int    __cntlinterpret : 1;\n          1323 |         unsigned int    __fcb_ascii : 1;\n          1324 |         unsigned int    __fcb_orientation : 2;\n          1325 |         \u00fc;\n          1326 |\n          1327 |      struct __ffile\n          1328 |        \u00e4\n          1329 |        struct __file *__fp;\n          1330 |        \u00fc;\n          1331 |\n          1332 |      typedef struct __ffile *__FILEP;\n          1333 |\n          1334 |\n          1335 |      typedef struct __ffile FILE;\n          1336 |\n          1337 |   struct __fpos_t \u00e4\n          1338 |     long int __fpos_elem\u00c48\u00dc;\n          1339 |     \u00fc;\n          1340 |\n          1341 |   typedef struct __fpos_t fpos_t;\n          1342 |\n          1343 |\n          1344 |\n          1345 |\n          1346 |\n          1347 |\n          1348 |       typedef char  *___valist;\n          1349 |     typedef ___valist  va_list;\n          1350 |\n          1351 |\n          1352 |\n          1353 |\n          1354 |\n          1355 |\n          1356 |\n          1357 |\n          1358 |\n          1359 |\n          1360 |      typedef const unsigned short *__cusp;\n          1361 |\n          1362 |\n          1363 |\n          1364 |\n          1365 |\n          1366 |\n          1367 |\n          1368 |\n          1369 |\n          1370 |       #pragma map (vprintf, \"\u00d6174\u00d6174VPRNT\")\n          1371 |       #pragma map (vfprintf, \"\u00d6174\u00d6174VFPRT\")\n          1372 |         #pragma map (vsprintf, \"\u00d6174\u00d6174VSPRT\")\n          1373 |\n          1374 |\n          1375 |\n          1376 |\n          1377 |     void     clearerr (FILE *);\n          1378 |     int      fclose (FILE *);\n          1379 |     int      feof (FILE *);\n          1380 |     int      ferror (FILE *);\n          1381 |     int      fflush (FILE *);\n          1382 |     int      fgetc (FILE *);\n          1383 |     int      fgetpos (FILE * restrict, fpos_t * restrict);\n          1384 |     char    *fgets (char * restrict, int, FILE * restrict);\n          1385 |     FILE    *fopen (const char * restrict,\n          1386 |                     const char * restrict);\n          1387 |     int      fprintf (FILE * restrict,\n          1388 |                        const char * restrict, ...);\n          1389 |     int      fputc (int, FILE *);\n          1390 |     int      fputs (const char * restrict, FILE * restrict);\n          1391 |     size_t   fread (void * restrict, size_t,\n          1392 |                     size_t, FILE * restrict);\n          1393 |     FILE    *freopen (const char * restrict,\n          1394 |                       const char * restrict, FILE * restrict);\n          1395 |     int      fscanf (FILE * restrict,\n          1396 |                       const char * restrict, ...);\n          1397 |     int      fseek (FILE *, long int, int);\n          1398 |     int      fsetpos (FILE *, const fpos_t *);\n          1399 |     long int ftell (FILE *);\n          1400 |    size_t   fwrite (const void * restrict, size_t, size_t,\n          1401 |                      FILE * restrict);\n          1402 |     int      getc (FILE *);\n          1403 |     int      getchar (void);\n          1404 |     char    *gets (char *);\n          1405 |     void     perror (const char *);\n          1406 |     int      printf (const char * restrict, ...);\n          1407 |     int      putc (int, FILE *);\n          1408 |     int      putchar (int);\n          1409 |     int      puts (const char *);\n          1410 |     int      remove (const char *);\n          1411 |     int      rename (const char *, const char *);\n          1412 |     void     rewind (FILE *);\n          1413 |     int      scanf (const char * restrict, ...);\n          1414 |     void     setbuf (FILE * restrict, char * restrict);\n          1415 |     int      setvbuf (FILE * restrict, char * restrict,\n          1416 |                       int, size_t);\n          1417 |       int      sprintf (char * restrict,\n          1418 |                          const char * restrict, ...);\n          1419 |     int      sscanf (const char * restrict,\n          1420 |                      const char * restrict, ...);\n          1421 |     FILE    *tmpfile (void);\n          1422 |     char    *tmpnam (char *);\n          1423 |     int      ungetc (int, FILE *);\n          1424 |     int      vfprintf (FILE * restrict,\n          1425 |                         const char * restrict, ___valist);\n          1426 |     int      vprintf (const char * restrict, ___valist);\n          1427 |     int      vsprintf (char * restrict,\n          1428 |                         const char * restrict, ___valist);\n          1429 |\n          1430 |\n          1431 |          off_t ftello(FILE *);\n          1432 |          int fseeko(FILE *, off_t, int);\n          1433 |\n          1434 |\n          1435 |\n          1436 |\n          1437 |\n          1438 |\n          1439 |\n          1440 |\n          1441 |       struct __S99struc\n          1442 |         \u00e4\n          1443 |              unsigned char __S99RBLN;\n          1444 |              unsigned char __S99VERB;\n          1445 |              unsigned short __S99FLAG1;\n          1446 |              unsigned short __S99ERROR;\n          1447 |              unsigned short __S99INFO;\n          1448 |              void *__S99TXTPP;\n          1449 |              void *__S99S99X;\n          1450 |              unsigned int   __S99FLAG2;\n          1451 |         \u00fc;\n          1452 |\n          1453 |       typedef struct __S99struc __S99parms;\n          1454 |\n          1455 |\n          1456 |     struct __S99rbx\n          1457 |           \u00e4\n          1458 |         char           __S99EID\u00c46\u00dc;\n          1459 |         unsigned char  __S99EVER;\n          1460 |         unsigned char  __S99EOPTS;\n          1461 |         unsigned char  __S99ESUBP;\n          1462 |         unsigned char  __S99EKEY;\n          1463 |         unsigned char  __S99EMGSV;\n          1464 |         unsigned char  __S99ENMSG;\n          1465 |         void *__S99ECPPL;\n          1466 |         char           __reserved;\n          1467 |         char           __S99ERES;\n          1468 |         unsigned char  __S99ERCO;\n          1469 |         unsigned char  __S99ERCF;\n          1470 |         int            __S99EWRC;\n          1471 |         void *__S99EMSGP;\n          1472 |         unsigned short __S99EERR;\n          1473 |         unsigned short __S99EINFO;\n          1474 |         int            __reserv2;\n          1475 |         \u00fc;\n          1476 |\n          1477 |      typedef struct __S99rbx  __S99rbx_t;\n          1478 |\n          1479 |      struct  __S99emparms \u00e4\n          1480 |         unsigned char  __EMFUNCT;\n          1481 |         unsigned char  __EMIDNUM;\n          1482 |         unsigned char  __EMNMSGBK;\n          1483 |         unsigned char  __filler1;\n          1484 |         void *__EMS99RBP;\n          1485 |         int            __EMRETCOD;\n          1486 |         void *__EMCPPLP;\n          1487 |         void *__EMBUFP;\n          1488 |         int            __reserv1;\n          1489 |         int            __reserv2;\n          1490 |         \u00fc;\n          1491 |\n          1492 |        typedef struct __S99emparms  __S99emparms_t;\n          1493 |\n          1494 |\n          1495 |\n          1496 |     typedef enum \u00e4\n          1497 |        __disk       =  0,\n          1498 |        __terminal   =  1,\n          1499 |        __printer    =  2,\n          1500 |        __tape       =  3,\n          1501 |        __tdq        =  5,\n          1502 |        __dummy      =  6,\n          1503 |\n          1504 |        __msgfile    =  7,\n          1505 |\n          1506 |        __memory     =  8,\n          1507 |        __hfs        =  9,\n          1508 |        __hiperspace = 10,\n          1509 |\n          1510 |        __msgrtn     = 11,\n          1511 |\n          1512 |        __other      = 0xff\n          1513 |     \u00fc __device_t;\n          1514 |\n          1515 |\n          1516 |\n          1517 |\n          1518 |\n          1519 |\n          1520 |\n          1521 |\n          1522 |     struct __fileData \u00e4\n          1523 |          unsigned int   __recfmF   :    1,\n          1524 |                         __recfmV   :    1,\n          1525 |                         __recfmU   :    1,\n          1526 |                         __recfmS   :    1,\n          1527 |                         __recfmBlk :    1,\n          1528 |                         __recfmASA :    1,\n          1529 |                         __recfmM   :    1,\n          1530 |                         __dsorgPO  :    1,\n          1531 |                         __dsorgPDSmem : 1,\n          1532 |                         __dsorgPDSdir : 1,\n          1533 |                         __dsorgPS  :    1,\n          1534 |                         __dsorgConcat : 1,\n          1535 |                         __dsorgMem :    1,\n          1536 |                         __dsorgHiper  : 1,\n          1537 |                         __dsorgTemp:    1,\n          1538 |                         __dsorgVSAM:    1,\n          1539 |\n          1540 |                         __dsorgHFS :    1,\n          1541 |\n          1542 |                         __openmode :    2,\n          1543 |                         __modeflag :    4,\n          1544 |                         __dsorgPDSE :   1,\n          1545 |\n          1546 |                         __vsamRLS :     3,\n          1547 |                         __vsamEA  :     1,\n          1548 |                         __recfmB  :     1,\n          1549 |                         __reserve2 :    3;\n          1550 |\n          1551 |          __device_t     __device;\n          1552 |          unsigned long  __blksize,\n          1553 |                         __maxreclen;\n          1554 |          union \u00e4\n          1555 |            struct \u00e4\n          1556 |              unsigned short __vsam_type;\n          1557 |              unsigned long  __vsam_keylen;\n          1558 |              unsigned long  __vsam_RKP;\n          1559 |            \u00fc __vsam;\n          1560 |            struct \u00e4\n          1561 |              unsigned short __disk_vsam_type;\n          1562 |              unsigned char  __disk_access_method;\n          1563 |              unsigned char  __disk_noseek_to_seek;\n          1564 |              long           __disk_reserve\u00c42\u00dc;\n          1565 |            \u00fc __disk;\n          1566 |          \u00fc __device_specific;\n          1567 |          char *         __dsname;\n          1568 |          void *         __reserve4;\n          1569 |     \u00fc;\n          1570 |\n          1571 |     typedef struct __fileData fldata_t;\n          1572 |\n          1573 |\n          1574 |\n          1575 |\n          1576 |\n          1577 |\n          1578 |\n          1579 |\n          1580 |\n          1581 |\n          1582 |\n          1583 |\n          1584 |\n          1585 |\n          1586 |\n          1587 |\n          1588 |\n          1589 |\n          1590 |\n          1591 |\n          1592 |\n          1593 |\n          1594 |\n          1595 |\n          1596 |\n          1597 |\n          1598 |       int    svc99 (__S99parms *);\n          1599 |       int    flocate (FILE *, const void *, size_t, int);\n          1600 |       int    fdelrec (FILE *);\n          1601 |       size_t fupdate (const void *, size_t, FILE *);\n          1602 |       int    clrmemf (int);\n          1603 |       int    fldata (FILE *, char *, fldata_t *);\n          1604 |\n          1605 |\n          1606 |\n          1607 |\n          1608 |\n          1609 |\n          1610 |\n          1611 |\n          1612 |     typedef struct \u00e4\n          1613 |               unsigned int  __fill,\n          1614 |                             __recnum;\n          1615 |     \u00fc __rrds_key_type;\n          1616 |\n          1617 |\n          1618 |       typedef struct __amrctype \u00e4\n          1619 |\n          1620 |        union \u00e4\n          1621 |                int __error;\n          1622 |           struct \u00e4\n          1623 |             unsigned short __syscode,\n          1624 |                            __rc;\n          1625 |           \u00fc __abend;\n          1626 |           struct \u00e4\n          1627 |              unsigned char __fdbk_fill,\n          1628 |                            __rc,\n          1629 |                            __ftncd,\n          1630 |                            __fdbk;\n          1631 |           \u00fc __feedback;\n          1632 |           struct \u00e4\n          1633 |              unsigned short __svc99_info,\n          1634 |                             __svc99_error;\n          1635 |           \u00fc __alloc;\n          1636 |        \u00fc __code;\n          1637 |        unsigned int  __RBA;\n          1638 |        unsigned int      __last_op;\n          1639 |        struct \u00e4\n          1640 |         unsigned int   __len_fill;\n          1641 |         unsigned int   __len;\n          1642 |         char           __str\u00c4120\u00dc;\n          1643 |         unsigned int   __parmr0;\n          1644 |         unsigned int   __parmr1;\n          1645 |         unsigned int   __fill2\u00c42\u00dc;\n          1646 |         char           __str2\u00c464\u00dc;\n          1647 |\n          1648 |        \u00fc __msg;\n          1649 |\n          1650 |        unsigned char        __rplfdbwd\u00c44\u00dc;\n          1651 |        unsigned long long   __XRBA;\n          1652 |\n          1653 |        unsigned char        __amrc_noseek_to_seek;\n          1654 |\n          1655 |        char                 __amrc_pad\u00c423\u00dc;\n          1656 |\n          1657 |     \u00fc __amrc_type;\n          1658 |\n          1659 |\n          1660 |     typedef __amrc_type *__amrc_ptr;\n          1661 |\n          1662 |\n          1663 |     typedef struct __amrc2type \u00e4\n          1664 |              int       __error2;\n          1665 |\n          1666 |         FILE          *__fileptr;\n          1667 |              int       __reserved\u00c46\u00dc;\n          1668 |     \u00fc __amrc2_type;\n          1669 |\n          1670 |\n          1671 |     typedef __amrc2_type *__amrc2_ptr;\n          1672 |\n          1673 |\n          1674 |\n          1675 |\n          1676 |\n          1677 |\n          1678 |\n          1679 |\n          1680 |\n          1681 |\n          1682 |\n          1683 |\n          1684 |\n          1685 |\n          1686 |\n          1687 |\n          1688 |\n          1689 |\n          1690 |\n          1691 |\n          1692 |\n          1693 |\n          1694 |\n          1695 |         FILE *fdopen(int, const char *);\n          1696 |         int fileno(FILE *);\n          1697 |         char *ctermid(char *);\n          1698 |\n          1699 |\n          1700 |\n          1701 |\n          1702 |\n          1703 |\n          1704 |\n          1705 |\n          1706 |\n          1707 |\n          1708 |\n          1709 |\n          1710 |\n          1711 |\n          1712 |\n          1713 |          char *cuserid(char *);\n          1714 |\n          1715 |\n          1716 |           int          getopt(int, char * const \u00c4\u00dc, const char *);\n          1717 |\n          1718 |\n          1719 |          int getw(FILE *);\n          1720 |          int putw(int, FILE *);\n          1721 |\n          1722 |        extern char *optarg;\n          1723 |        extern int optind, opterr, optopt;\n          1724 |\n          1725 |\n          1726 |\n          1727 |\n          1728 |\n          1729 |\n          1730 |\n          1731 |\n          1732 |\n          1733 |\n          1734 |\n          1735 |\n          1736 |\n          1737 |        int pclose(FILE *);\n          1738 |        FILE *popen(const char *, const char *);\n          1739 |        char  *tempnam(const char *, const char *);\n          1740 |\n          1741 |\n          1742 |\n          1743 |\n          1744 |\n          1745 |\n          1746 |\n          1747 |\n          1748 |\n          1749 |\n          1750 |\n          1751 |\n          1752 |      #pragma map (__snprtf,  \"\u00d6174\u00d6174SNPRTF\")\n          1753 |\n          1754 |    int __snprtf(char *restrict, size_t, const char *restrict, ...);\n          1755 |\n          1756 |\n          1757 |\n          1758 |     \u00fc\n          1759 |\n          1760 |                    #pragma checkout(resume)\n          1761 |\n          1762 |\n          1763 |   extern \"C\" \u00e4\n          1764 |\n          1765 |\n          1766 |   void  __abort(void);\n          1767 |   void  assert(int);\n          1768 |\n          1769 |\n          1770 |\n          1771 |\n          1772 |   \u00fc\n          1773 |\n          1774 |\n          1775 |\n          1776 | extern \"C\" \u00e4\n          1777 |\n          1778 |\n          1779 |\n          1780 |\n          1781 |\n          1782 |\n          1783 |       inline __FILEP* const * __gtab_filep(int e)       \u00e4 return (__FIL\u00d6\n          1784 | EP* const *)_Gtab(e); \u00fc\n          1785 |\n          1786 |\n          1787 |\n          1788 |\n          1789 | \u00fc\n          1790 |                    #pragma checkout(resume)\n          1791 |\n          1792 |\n          1793 |\n          1794 |\n          1795 |\n          1796 |\n          1797 |\n          1798 | enum genOpenNameType\n          1799 | \u00e4  sas_hfs,\n          1800 |    ibm_hfs,\n          1801 |    sas_ddn,\n          1802 |    ibm_ddn,\n          1803 |    sas_dsn,\n          1804 |    ibm_dsn,\n          1805 |    ont_dsn,\n          1806 |    ont_ddn,\n          1807 |    ont_mem,\n          1808 |    ont_unknown,\n          1809 |    genOpenNameType_int = -1\n          1810 | \u00fc;\n          1811 |\n          1812 | genOpenNameType genOpenType(const char *);\n          1813 | char * stripMemberName(const char *name, char* nm);\n          1814 | char * onlyMemberName(const char *name, char* nm);\n          1815 |\n          1816 |\n          1817 |\n          1818 | unsigned short  Ushort(int i);\n          1819 | unsigned short  Ushort(short s);\n          1820 | unsigned short  Ushort(char c);\n          1821 |\n          1822 |\n          1823 |\n          1824 |\n          1825 |\n          1826 |\n          1827 | void * memcpyp(void * target , const void * source, size_t tsize, size_\u00d6\n          1828 | t ssize, int pad);\n          1829 |\n          1830 |\n          1831 |\n          1832 |\n          1833 |\n          1834 |\n          1835 |\n          1836 |\n          1837 |\n          1838 |\n          1839 | enum ALIGNTYPE\u00e4aLEFT=1, aRIGHT=3, aCENTER=2, aASIS=0, ALINGNTYPE_int = \u00d6\n          1840 | -1 \u00fc;\n          1841 | enum CAPSTYPE\u00e4cUPPER=3, cLOWER=4, cWORD=2, cASIS=0, CAPSTYPE_int = -1\u00fc;\n          1842 | enum FIELDTYPE\u00e4\n          1843 |                       fCHAR =0,\n          1844 |                       fALPHANUMERIC=1,\n          1845 |                       fALPHABETIC=2,\n          1846 |                       fNUMERIC= 3,\n          1847 |                       fSLLTAG = 20,\n          1848 |                       fLOGICAL=4 ,fHEXA=16,\n          1849 |                       fBINARY=17 ,fDATE=5 ,fFTIME=6, fLISTBOX = 19,\n          1850 |                       FIELDTYPE_int = -1\u00fc;\n          1851 |\n          1852 |\n          1853 |\n          1854 |\n          1855 | class FORMAT\n          1856 | \u00e4\n          1857 |    protected:\n          1858 |    public:\n          1859 |    ALIGNTYPE falign;\n          1860 |    CAPSTYPE fcaps;\n          1861 |   FORMAT() :  fcaps(cUPPER),\n          1862 |     falign(aLEFT)\u00e4\u00fc\n          1863 |\n          1864 |   FORMAT(ALIGNTYPE a ,CAPSTYPE c=cASIS )\n          1865 |   \u00e4\n          1866 |\n          1867 |     falign = a;\n          1868 |       fcaps = c;\n          1869 |   \u00fc\n          1870 |   \u00dfFORMAT()\u00e4\u00fc\n          1871 | \u00fc;\n          1872 |\n          1873 |\n          1874 |\n          1875 |\n          1876 |\n          1877 | extern FORMAT F_alcu;\n          1878 | extern FORMAT F_alcw;\n          1879 | extern FORMAT F_arcu;\n          1880 |\n          1881 |\n          1882 |\n          1883 | struct str \u00e4\n          1884 | enum status \u00e4 _VALID, _INVALID, status_int = -1 \u00fc;\n          1885 | enum length \u00e4 FIX, VARIABLE \u00fc;\n          1886 | char  * c;\n          1887 | char  * lls;\n          1888 | long int     l;\n          1889 | status type;\n          1890 | length ltype;\n          1891 | str()\u00e4 c = lls = 0; l = 0; type = _VALID; ltype = VARIABLE; \u00fc\n          1892 |       \u00fc;\n          1893 |\n          1894 |\n          1895 |\n          1896 |\n          1897 | class sLL;\n          1898 |\n          1899 | class mvsSTRING \u00e4\n          1900 |    protected:\n          1901 |    str st;\n          1902 |    public:\n          1903 |    static char parseSepCh;\n          1904 |    mvsSTRING();\n          1905 |    mvsSTRING(const char *);\n          1906 |    mvsSTRING(const mvsSTRING &);\n          1907 |    mvsSTRING(const char *,long int l );\n          1908 |    mvsSTRING(const char , const long int l);\n          1909 |\n          1910 | \t\tvirtual \u00dfmvsSTRING();\n          1911 |\n          1912 |   virtual mvsSTRING& operator=(const char * );\n          1913 |   virtual mvsSTRING& operator=(const mvsSTRING &);\n          1914 | \t\tvirtual mvsSTRING& operator=(const sLL &);\n          1915 |\n          1916 |   virtual operator char *() const\n          1917 |   \u00e4\n          1918 |   if ( st.type == str::_VALID )\n          1919 |       return st.c;\n          1920 |\n          1921 |    return st.c;\n          1922 |    \u00fc\n          1923 |    virtual operator unsigned char *() const\n          1924 |   \u00e4\n          1925 |   if ( st.type == str::_VALID )\n          1926 |       return (unsigned char *)st.c;\n          1927 |\n          1928 |    return (unsigned char *)st.c;\n          1929 |    \u00fc\n          1930 |    virtual operator const char *() const\n          1931 |    \u00e4\n          1932 |     return (const char *)st.c;\n          1933 |    \u00fc\n          1934 |    virtual operator const unsigned char *() const\n          1935 |    \u00e4\n          1936 |     return (const unsigned char *)st.c;\n          1937 |    \u00fc\n          1938 |    friend long int operator==(const mvsSTRING & , const mvsSTRING &);\n          1939 |    friend long int operator|=(const mvsSTRING & , const mvsSTRING &);\n          1940 |    friend mvsSTRING operator+(const mvsSTRING & , const mvsSTRING &);\n          1941 |\n          1942 |    mvsSTRING& operator+=(const mvsSTRING&);\n          1943 |    void operator<<(long int );\n          1944 |    void operator>>(long int );\n          1945 |\n          1946 |    virtual char& operator\u00c4\u00dc(int);\n          1947 |    virtual char& byte(int);\n          1948 |    mvsSTRING operator()(const long int , long int );\n          1949 |\n          1950 |    long int hashcode();\n          1951 |   char * nameOf();\n          1952 |    long int  lengthOf() const\u00e4return st.l;\u00fc\n          1953 |    long int toint()\n          1954 |           \u00e4 long int ret = 0;\n          1955 |              if ( st.l >= sizeof(long int) )\n          1956 |                      ret = * (long int *)(st.c);\n          1957 |            else if ( st.l == sizeof(short) )\n          1958 |               ret = * (short *)(st.c);\n          1959 |            else if ( st.l == 1)\n          1960 |               ret = *st.c;\n          1961 |          return ret ;\n          1962 |        \u00fc\n          1963 |    void fromint(long int i)\n          1964 |        \u00e4\n          1965 |              if ( st.l >= sizeof(long int) )\n          1966 |                       *(long int *)(st.c) = i;\n          1967 |            else if ( st.l == sizeof(short) )\n          1968 |               *(short *)(st.c) = (short )i;\n          1969 |            else if ( st.l == 1)\n          1970 |           *st.c =(char) i;\n          1971 |        \u00fc\n          1972 |   void changeAll(char ,char );\n          1973 |   void align(ALIGNTYPE );\n          1974 |   void caps(CAPSTYPE);\n          1975 |   mvsSTRING & strip();\n          1976 |   int  isEmpty();\n          1977 |   mvsSTRING& stripmvsSTRING();\n          1978 |     mvsSTRING& format(FORMAT *);\n          1979 |   void parse(mvsSTRING&, char, mvsSTRING&);\n          1980 |   void parse(mvsSTRING&, char, mvsSTRING&, char ,mvsSTRING &);\n          1981 |   void parse(mvsSTRING&, char *,mvsSTRING&);\n          1982 |   void parse(mvsSTRING&, char *, mvsSTRING&, char *,mvsSTRING &);\n          1983 |   void split(mvsSTRING&, char *, mvsSTRING&,char *,mvsSTRING &);\n          1984 | \tvoid split(mvsSTRING&, char *, mvsSTRING&,char *,mvsSTRING &,char *,mv\u00d6\n          1985 | sSTRING &);\n          1986 | \tvoid split(mvsSTRING&, char *, mvsSTRING&,char *,mvsSTRING &,char *,mv\u00d6\n          1987 | sSTRING &,char *,mvsSTRING&);\n          1988 | \tvoid parse(mvsSTRING&, char *, mvsSTRING&, char *,mvsSTRING &,char *,m\u00d6\n          1989 | vsSTRING &);\n          1990 | \tvoid dump(const char * ,int);\n          1991 |   char * getLlmvsSTRING();\n          1992 | \u00fc;\n          1993 |\n          1994 | \textern mvsSTRING nullstring;\n          1995 |\n          1996 |\n          1997 |\n          1998 | extern mvsSTRING nullmvsSTRING;\n          1999 |\n          2000 |\n          2001 |\n          2002 | class LLC_mvsSTRING : public mvsSTRING\n          2003 | \u00e4\n          2004 |    short codev;\n          2005 |   public:\n          2006 |   LLC_mvsSTRING():mvsSTRING(), codev(0)\u00e4\u00fc\n          2007 |   LLC_mvsSTRING(char * s):mvsSTRING(),codev(0)\n          2008 |     \u00e4\n          2009 |      short l = *(short*) s;\n          2010 |      if ( l >= 4 )\n          2011 |\n          2012 | \t\t\t\t\u00e4\n          2013 | \t\t\t\tmvsSTRING x = mvsSTRING(s+4,l-4);\n          2014 | \t\t\t\tmvsSTRING::operator=(x);\n          2015 | \t\t\t\tcodev = *(short *)(s+2);\n          2016 | \t\t\t\t\u00fc\n          2017 |     \u00fc\n          2018 |    LLC_mvsSTRING(long int c):mvsSTRING() , codev(c)\u00e4\u00fc\n          2019 |   \u00dfLLC_mvsSTRING()\u00e4\u00fc\n          2020 |    long int   code(void)\u00e4return codev;\u00fc\n          2021 |  operator long int()\n          2022 |        \u00e4 long int ret = 0;\n          2023 |           if ( st.l == sizeof(long int) )\n          2024 |                   ret = * (long int *)(st.c);\n          2025 |          else if ( st.l == sizeof(short) )\n          2026 |             ret = * (short *)(st.c);\n          2027 |        else if ( st.l == 1)\n          2028 |             ret = *st.c;\n          2029 |        return ret ;\n          2030 |     \u00fc\n          2031 | \u00fc;\n          2032 |\n          2033 |\n          2034 |\n          2035 |\n          2036 | mvsSTRING patternchng(mvsSTRING input , mvsSTRING mask,\n          2037 |   mvsSTRING (*function)(mvsSTRING));\n          2038 |\n          2039 |\n          2040 |\n          2041 |\n          2042 |\n          2043 |\n          2044 |\n          2045 | class mvsSTRING;\n          2046 | class mERROR;\n          2047 |\n          2048 |\n          2049 |\n          2050 |\n          2051 |\n          2052 |\n          2053 |\n          2054 |\n          2055 | class mvsSTRING;\n          2056 | class mERROR;\n          2057 |\n          2058 | class INT3\n          2059 | \u00e4\n          2060 | private :\n          2061 |    long v;\n          2062 | public:\n          2063 |    INT3(long u)\u00e4 v = u;\u00fc\n          2064 |    operator long()\u00e4return v;\u00fc\n          2065 |    INT3 & operator=(long u)\u00e4 v = u;return *this;\u00fc\n          2066 |\n          2067 | \u00fc;\n          2068 |\n          2069 |\n          2070 |\n          2071 |\n          2072 |\n          2073 |\n          2074 |\n          2075 |\n          2076 |\n          2077 | enum sLLUsage \u00e4 sLLinput , sLLoutput , sLLoutputVar\u00fc ;\n          2078 |\n          2079 |\n          2080 |\n          2081 |\n          2082 |\n          2083 | enum sLLType   \u00e4sLLt0 = 0, sLLt1 = 1  ,sLLt2 = 2 , sLLt3 = 3 , sLLt4 = \u00d6\n          2084 | 4 \u00fc;\n          2085 | enum sLLStatus \u00e4sLLOk = 0, sLLUf = 1  ,sLLOf = 2\u00fc;\n          2086 |\n          2087 | class sLL;\n          2088 |\n          2089 |\n          2090 | class sLLskip\u00e4\n          2091 | private:\n          2092 |    int i;\n          2093 | public:\n          2094 |    sLLskip(int v):i(v)\u00e4\u00fc\n          2095 |    operator int()\u00e4return i;\u00fc\n          2096 | \u00fc;\n          2097 |\n          2098 | class sLL:public  mERROR\n          2099 | \u00e4\n          2100 |\n          2101 | protected:\n          2102 |\n          2103 |       int length;\n          2104 |       int offset;\n          2105 |       int llength;\n          2106 |       int allocl;\n          2107 |       int storedl;\n          2108 |\n          2109 |       sLL * base;\n          2110 |       sLL * child;\n          2111 |\n          2112 |\n          2113 |       char * start;\n          2114 |       char * cursor;\n          2115 |       sLLType type;\n          2116 |       sLLStatus status;\n          2117 |       char   dummy;\n          2118 | \t\t\tmvsSTRING  string;\n          2119 | protected:\n          2120 |       sLLUsage usage;\n          2121 |\n          2122 | protected:\n          2123 |\n          2124 |     void init(sLL *,int,sLLType);\n          2125 |     int storeOk(int);\n          2126 |\n          2127 | public:\n          2128 |\n          2129 |\n          2130 |\n          2131 |\n          2132 |\n          2133 |     sLL (sLLType = sLLt2,\n          2134 |             sLLUsage = sLLoutput,int=1024 );\n          2135 |     sLL (sLL * , int ,\n          2136 |             sLLType = sLLt2);\n          2137 |     sLL (sLL * ,char *,\n          2138 |             sLLType = sLLt2);\n          2139 |     sLL (char *,\n          2140 |             sLLType = sLLt2);\n          2141 |       sLL (char *,\n          2142 |                    int );\n          2143 |\n          2144 |\n          2145 |     sLL (const sLL &);\n          2146 |\n          2147 |     virtual \u00dfsLL ();\n          2148 |\n          2149 |     virtual sLL & operator=(sLL &);\n          2150 |\n          2151 |\n          2152 |\n          2153 |\n          2154 |\n          2155 |       operator int();\n          2156 |\n          2157 |\n          2158 |     char & operator\u00c4\u00dc(int);\n          2159 |\n          2160 | \t\t\tint   getLength() const\n          2161 | \t\t\t\t\u00e4\n          2162 | \t\t\t\tif ( usage == sLLinput ) return length;\n          2163 | \t\t\t\telse return storedl;\n          2164 | \t\t\t\t\u00fc\n          2165 |\n          2166 | \t\t\tchar * getStart() const\n          2167 | \t\t\t\t\u00e4 return start; \u00fc\n          2168 |\n          2169 |     sLL * getBase();\n          2170 |     int   getOffset();\n          2171 |     sLL * getChild();\n          2172 |\n          2173 |\n          2174 |     int   getFullLength();\n          2175 |     int   getRemainderLength();\n          2176 |     int   getStoredLength();\n          2177 |\n          2178 |     char * getCursor();\n          2179 | \t\t\tmvsSTRING  getString();\n          2180 |     void  setChild(sLL*);\n          2181 |     void  setBase(sLL *);\n          2182 |\n          2183 |\n          2184 |     void   setLength();\n          2185 |     virtual void resetCursor();\n          2186 |\n          2187 |     char * goCursor(int);\n          2188 |     void   setUsage(sLLUsage);\n          2189 |\n          2190 |\n          2191 |\n          2192 |\n          2193 |\n          2194 |     sLL * next();\n          2195 |     sLL * iterate(sLLType,int = 0);\n          2196 |     void remove(sLL& );\n          2197 |\n          2198 |\n          2199 |\n          2200 |\n          2201 |\n          2202 |\n          2203 |     sLL& operator>>(int&);\n          2204 |     sLL& operator>>(short&);\n          2205 |     sLL& operator>>(unsigned short&);\n          2206 |     sLL& operator>>(char &);\n          2207 |     sLL& operator>>(char * &);\n          2208 |     sLL& operator>>(mvsSTRING &);\n          2209 |     sLL& operator>>(sLL &);\n          2210 |     sLL& operator>>(INT3 &);\n          2211 |     sLL& operator>>(sLLskip &);\n          2212 |\n          2213 |\n          2214 |\n          2215 |\n          2216 |     sLL& operator<<(int);\n          2217 |     sLL& operator<<(short);\n          2218 |     sLL& operator<<(unsigned short);\n          2219 |     sLL& operator<<(char );\n          2220 |     sLL& operator<<(char *);\n          2221 |     sLL& operator<<(mvsSTRING &);\n          2222 |     sLL& operator<<(sLL& );\n          2223 |     sLL& operator<<(INT3 &);\n          2224 |     sLL& operator<<(sLLskip &);\n          2225 |     sLL& store(char *,int);\n          2226 |\n          2227 |\n          2228 |\n          2229 |\n          2230 |\n          2231 |\n          2232 |    int write(void *);\n          2233 |    friend sLL * readsLL(void *,sLLType);\n          2234 | \t\t\tvirtual void dump(const char *,int);\n          2235 |\n          2236 | \u00fc;\n          2237 |\n          2238 | class sLLTag: public sLL\n          2239 | \u00e4\n          2240 | private:\n          2241 |    short      code;\n          2242 |    char       * name;\n          2243 |    short      searchcode;\n          2244 |    void       init(short);\n          2245 | public:\n          2246 |    sLLTag();\n          2247 |    sLLTag(short);\n          2248 |\n          2249 |    sLLTag(char *);\n          2250 |    sLLTag(sLL * , char *);\n          2251 |    sLLTag(const sLLTag &);\n          2252 |\n          2253 |    \u00dfsLLTag()\u00e4\u00fc\n          2254 | \t\tsLLTag& operator=(sLLTag&);\n          2255 |\n          2256 |    short      getCode()\u00e4 return code;\u00fc\n          2257 |    char *     getName()\u00e4 return name ;\u00fc\n          2258 |    sLLTag *   search(short=0);\n          2259 |    void       resetCursor();\n          2260 |    void       remove(sLLTag &);\n          2261 |    sLLTag *   update(sLLTag& );\n          2262 |    sLLTag *   next();\n          2263 |    sLLTag *   iterate();\n          2264 | \t virtual void dump(const char *,int);\n          2265 | \u00fc;\n          2266 |\n          2267 |\n          2268 |\n          2269 |\n          2270 |\n          2271 |\n          2272 |\n          2273 |\n          2274 |\n          2275 |\n          2276 |\n          2277 |\n          2278 |\n          2279 |\n          2280 |\n          2281 |\n          2282 |\n          2283 |\n          2284 |\n          2285 |                    #pragma nomargins nosequence\n          2286 |                    #pragma checkout(suspend)\n          2287 |\n          2288 |\n          2289 |\n          2290 |     extern \"C\" \u00e4\n          2291 |\n          2292 |\n          2293 |\n          2294 |\n          2295 |\n          2296 |\n          2297 |\n          2298 |         struct timespec\n          2299 |             \u00e4\n          2300 |             time_t tv_sec;\n          2301 |             long   tv_nsec;\n          2302 |             \u00fc;\n          2303 |\n          2304 |\n          2305 |\n          2306 |\n          2307 |\n          2308 |\n          2309 |   struct tm\n          2310 |      \u00e4\n          2311 |      int tm_sec;\n          2312 |      int tm_min;\n          2313 |      int tm_hour;\n          2314 |      int tm_mday;\n          2315 |      int tm_mon;\n          2316 |      int tm_year;\n          2317 |      int tm_wday;\n          2318 |      int tm_yday;\n          2319 |      int tm_isdst;\n          2320 |      \u00fc;\n          2321 |\n          2322 |     #pragma map(clock,\"\u00d6174\u00d6174OCLCK\")\n          2323 |\n          2324 |\n          2325 |\n          2326 |\n          2327 |\n          2328 |\n          2329 |\n          2330 |\n          2331 |\n          2332 |      clock_t     clock (void);\n          2333 |      double      difftime (time_t, time_t);\n          2334 |      time_t      mktime (struct tm *);\n          2335 |      time_t      time (time_t *);\n          2336 |      char       *asctime (const struct tm *);\n          2337 |      char       *ctime (const time_t *);\n          2338 |      struct tm  *gmtime (const time_t *);\n          2339 |      struct tm  *localtime (const time_t *);\n          2340 |      size_t      strftime (char * restrict, size_t,\n          2341 |                            const char * restrict,\n          2342 |                            const struct tm * restrict);\n          2343 |      void        __tzset(void);\n          2344 |\n          2345 |\n          2346 |       char    *strptime(const char *restrict, const char *restrict,\n          2347 |                         struct tm *restrict);\n          2348 |\n          2349 |\n          2350 |     inline char *ctime(const time_t *t) \u00e4return(asctime(localtime(t)));\u00fc\n          2351 |        inline double difftime (time_t t1, time_t t0)\n          2352 |                               \u00e4return((double)((t1) - (t0)));\u00fc\n          2353 |\n          2354 |\n          2355 |\n          2356 |\n          2357 |\n          2358 |\n          2359 |\n          2360 |\n          2361 |\n          2362 |          void tzset(void);\n          2363 |\n          2364 |       extern char *tzname\u00c42\u00dc;\n          2365 |\n          2366 |\n          2367 |\n          2368 |       #pragma map(__TzznA, \"\u00d6174\u00d6174TZZNA\")\n          2369 |\n          2370 |       char  *(*__TzznA(void))\u00c42\u00dc;\n          2371 |       char  *(*__Tzzn(void))\u00c42\u00dc;\n          2372 |\n          2373 |\n          2374 |\n          2375 |\n          2376 |\n          2377 |\n          2378 |\n          2379 |\n          2380 |\n          2381 |\n          2382 |       extern int daylight;\n          2383 |       extern long int timezone;\n          2384 |\n          2385 |\n          2386 |\n          2387 |\n          2388 |         long int *__tzone(void);\n          2389 |         int *__dlght(void);\n          2390 |\n          2391 |\n          2392 |\n          2393 |       extern int   getdate_err;\n          2394 |\n          2395 |\n          2396 |         struct tm *getdate(const char *);\n          2397 |\n          2398 |         int *__gderr(void);\n          2399 |\n          2400 |\n          2401 |\n          2402 |     char * asctime_r(const struct tm *restrict, char *restrict);\n          2403 |     char * ctime_r(const time_t *, char*);\n          2404 |     struct tm * gmtime_r(const time_t *restrict, struct tm *restrict);\n          2405 |     struct tm * localtime_r(const time_t *restrict, struct tm *restrict\u00d6\n          2406 | );\n          2407 |\n          2408 |\n          2409 |\n          2410 |\n          2411 |\n          2412 |\n          2413 |\n          2414 |\n          2415 |\n          2416 |\n          2417 |\n          2418 |\n          2419 |\n          2420 |\n          2421 |              \u00fc\n          2422 |\n          2423 |\n          2424 |                    #pragma checkout(resume)\n          2425 |\n          2426 |\n          2427 |\n          2428 |\n          2429 | unsigned long cvb(unsigned long,unsigned long = 8);\n          2430 | unsigned long cvd(unsigned long);\n          2431 | void    formatTime(char *,int,char *);\n          2432 |\n          2433 | int dump(FILE *,char *, char *,  int );\n          2434 | int dump(FILE *,char *, void * , int );\n          2435 | int dump(char *,int, char *, int);\n          2436 |\n          2437 | int  fromInt(char *,long ,int  = sizeof(long));\n          2438 | long toInt(char *,int);\n          2439 | long toInt(unsigned char *,int);\n          2440 | int  roundToInt(double);\n          2441 |\n          2442 | int   Char2Hex(char *);\n          2443 | char * Hex2Char(char );\n          2444 | int   isnull(char *,int = 0 );\n          2445 |\n          2446 |\n          2447 |\n          2448 | char*   getTimeStemp();\n          2449 | int     DatetoTm(tm&,char *);\n          2450 | char *  DatetoString(tm, char *);\n          2451 |\n          2452 | void  getUniqueKEY(char *);\n          2453 | void  getUniqueLongKEY(char *);\n          2454 | char*   DatetoString();\n          2455 | char *\tDatetoIBM(char * from);\n          2456 |\n          2457 |\n          2458 |\n          2459 |\n          2460 |\n          2461 |\n          2462 |\n          2463 | int   strcmpiList(const char *,const char *\u00c4\u00dc,int &);\n          2464 |\n          2465 | char *strrev(char *s);\n          2466 |\n          2467 | mvsSTRING makemvsSTRING(char *,int);\n          2468 |\n          2469 |   int stcpma(char * ,const char * );\n          2470 |   void * memcpyp(void *,const void*,size_t,size_t,int);\n          2471 |\n          2472 |\n          2473 |\n          2474 | char * Astrupr(char *, int);\n          2475 | char * ConvertmvsSTRINGToAscii( char *, int);\n          2476 | char aup(char);\n          2477 |\n          2478 | void  swab( char *,char *, int);\n          2479 | char *  StrDup(char *);\n          2480 |\n          2481 | char   bit_rotate(unsigned char);\n          2482 | mvsSTRING makemvsSTRING(char *,int);\n          2483 | extern char __test__ ;\n          2484 |\n          2485 | extern unsigned char ETOA\u00c4256\u00dc;\n          2486 | extern unsigned char ATOE\u00c4256\u00dc;\n          2487 |\n          2488 | inline int ffixed(FILE * f)\n          2489 | \u00e4\n          2490 |       fldata_t ft;\n          2491 |       char fn\u00c4256\u00dc;\n          2492 |       if (fldata(f,fn,&ft) == 0)\n          2493 |          return (ft.__recfmF);\n          2494 |       else\n          2495 | \t\t\t\treturn 0;\n          2496 | \u00fc\n          2497 |\n          2498 | inline void  strerror_r(int err, char *errmsg, int size)\n          2499 | \u00e4\n          2500 |     const char* msg=strerror(err);\n          2501 |     if(strlen(msg)>size-1)\n          2502 |     \u00e4\n          2503 |         strncpy(errmsg,msg,size-1);\n          2504 |         errmsg\u00c4size-1\u00dc='\u00d60';\n          2505 |     \u00fc\n          2506 |     else\n          2507 |     \u00e4\n          2508 |         strcpy(errmsg,msg);\n          2509 |     \u00fc\n          2510 | \u00fc\n          2511 |\n          2512 |\n          2513 |\n          2514 | namespace isis_ns_mvs\n          2515 | \t\u00e4\n          2516 |\n          2517 |\n          2518 |\n          2519 |\n          2520 | \tenum MSGETypes\u00e4msgundef = 0, msgint    = 1,\n          2521 | \t\tmsgshort = 2, msgcharp  = 3,\n          2522 | \t\tmsgchar  = 4,  msgmvsSTRING = 5\u00fc;\n          2523 |\n          2524 |\n          2525 | \tenum MSGEForm\u00e4msgfundef = 0, msgfd = 1, msgfs = 2, msgfx =3 , msgfc = \u00d6\n          2526 | 4\u00fc;\n          2527 | \tclass MSGE\n          2528 | \t\t\u00e4\n          2529 | \t\tprivate:\n          2530 | \t\t\tint         length;\n          2531 | \t\t\tMSGEForm    form;\n          2532 | \t\t\tMSGETypes   type;\n          2533 | \t\t\tchar *      to;\n          2534 | \t\t\tunion\u00e4\n          2535 | \t\t\t\tchar     mchar;\n          2536 | \t\t\t\tint      mint;\n          2537 | \t\t\t\tshort    mshort;\n          2538 | \t\t\t\tchar   * mcharp;\n          2539 | \t\t\t\tmvsSTRING * mmvsSTRING;\n          2540 | \t\t\t\t\u00fc;\n          2541 | \t\tpublic:\n          2542 | \t\t\tMSGE();\n          2543 | \t\t\tMSGE(int i,int l=sizeof(int), MSGEForm f = msgfd);\n          2544 | \t\t\tMSGE(short s,int l = sizeof(short), MSGEForm f= msgfd);\n          2545 | \t\t\tMSGE(char * c,int l = 0, MSGEForm f = msgfs);\n          2546 | \t\t\tMSGE(const mvsSTRING &s,int l = 0,MSGEForm f = msgfs );\n          2547 | \t\t\tMSGE(char c);\n          2548 |\n          2549 | \t\t\t\u00dfMSGE()\n          2550 | \t\t\t\t\u00e4\n          2551 | \t\t\t\tif ( type == msgmvsSTRING) delete mmvsSTRING;\n          2552 | \t\t\t\tif ( to ) delete \u00c4\u00dc to;\n          2553 | \t\t\t\t\u00fc\n          2554 | \t\t\tchar * format();\n          2555 | \t\t\u00fc;\n          2556 |\n          2557 |\n          2558 | \tclass EOL\u00e4\n          2559 | \t\t\u00fc;\n          2560 | \tconst EOL eol=EOL();\n          2561 |\n          2562 | \tMSGE * tCHARp(char * ,int  = 0);\n          2563 |\n          2564 | \tMSGE * tINT(int ,int = sizeof(int));\n          2565 |\n          2566 | \tMSGE * tSHORT(int ,int  = sizeof(short));\n          2567 |\n          2568 | \tMSGE * tmvsSTRING(mvsSTRING & ,int  = 0);\n          2569 |\n          2570 | \tMSGE * tHEX(int  ,int = (sizeof(int)*2) );\n          2571 |\n          2572 | \tMSGE * tHEX(char * , int);\n          2573 |\n          2574 |\n          2575 |\n          2576 |\n          2577 | \tenum FLAG_VALUE\u00e4 FLAG_TEXT = 5, FLAG_IO = 4\u00fc;\n          2578 |\n          2579 | \ttypedef   struct  ENTRY\n          2580 | \t\t\u00e4\n          2581 | \t\tchar * name     ;\n          2582 | \t\tchar flag       ;\n          2583 | \t\tint  xcoord     ;\n          2584 | \t\tint  ycoord     ;\n          2585 | \t\tint  length     ;\n          2586 | \t\tchar attrib     ;\n          2587 | \t\tint  access     ;\n          2588 | \t\tchar fieldtype  ;\n          2589 | \t\tchar align      ;\n          2590 | \t\tchar caps       ;\n          2591 | \t\tchar * defvalue ;\n          2592 | \t\t\u00fc\n          2593 | \tentry               ;\n          2594 |\n          2595 |\n          2596 |\n          2597 |\n          2598 |\n          2599 | \ttypedef   struct  SELECTION\n          2600 | \t\t\u00e4\n          2601 | \t\tchar * line     ;\n          2602 | \t\tint  access     ;\n          2603 | \t\t\u00fc\n          2604 | \tselection           ;\n          2605 | \tstruct et\n          2606 | \t\t\u00e4\n          2607 | \t\tchar *   cid ;\n          2608 | \t\tchar * * ett;\n          2609 | \t\t\u00fc ;\n          2610 |\n          2611 |\n          2612 |\n          2613 |\n          2614 |\n          2615 | \tstruct TEXTENTRY\n          2616 | \t\t\u00e4\n          2617 | \t\tint i;\n          2618 | \t\tchar * t;\n          2619 | \t\t\u00fc;\n          2620 |\n          2621 |\n          2622 | \tclass  MessageTEXT\n          2623 | \t\t\u00e4\n          2624 | \t\tprivate:\n          2625 | \t\t\tchar timestemp;\n          2626 | \t\t\tint (*printfv)(char *);\n          2627 | \t\t\tchar * msgfilename;\n          2628 | \t\t\tbool   logger;\n          2629 | \t\t\tbool   onlylogger;\n          2630 | \t\t\tFILE  * msgfile;\n          2631 | \t\t\tTEXTENTRY *  vector;\n          2632 | \t\t\tMSGE * v\u00c48\u00dc;\n          2633 | \t\t\tint    vi;\n          2634 | \t\t\tint    number;\n          2635 | \t\t\tchar   deflt\u00c4256\u00dc;\n          2636 |\n          2637 | \t\tpublic:\n          2638 | \t\t\tMessageTEXT(char * = 0,char * = 0);\n          2639 | \t\t\t\u00dfMessageTEXT();\n          2640 | \t\t\tMessageTEXT& operator<<(char *);\n          2641 | \t\t\tMessageTEXT& operator<<(const mvsSTRING &);\n          2642 |\n          2643 | \t\t\tMessageTEXT& operator<<(int );\n          2644 | \t\t\tchar *       operator<<(const EOL);\n          2645 | \t\t\tMessageTEXT& operator<<(void *);\n          2646 | \t\t\tchar * getText(int);\n          2647 | \t\t\tint    copyText(int, char *, int);\n          2648 | \t\t\tchar * print(char *);\n          2649 | \t\t\tvoid   resetPrintFv()\u00e4 printfv = 0;\u00fc\n          2650 | \t\tvoid   setPrintFv(int (*pfv)(char *))\u00e4 printfv= pfv;\u00fc\n          2651 | \tvoid   setLogger(const char *);\n          2652 | \tvoid   setOnlyLogger(const char * l)\n          2653 | \t\t\u00e4\n          2654 | \t\tsetLogger(l);\n          2655 | \t\tonlylogger = logger;\n          2656 | \t\t\u00fc\n          2657 | \tvoid   setFILE(FILE *);\n          2658 | \tFILE*  getFILE()\u00e4return msgfile;\u00fc\n          2659 | void   setFileName(char *);\n          2660 | void   setTimeStempFlag(char c = 1)\u00e4timestemp = c;\u00fc\n          2661 | char   getTimeStempFlag()\u00e4 return timestemp;\u00fc\n          2662 | void   setNumber(int n);\n          2663 | \t\t\u00fc;\n          2664 |\n          2665 | \textern \"C\" typedef void * (*EXT_C_fp)();\n          2666 |\n          2667 |\n          2668 | \tclass ExternalTEXT\n          2669 | \t\t\u00e4\n          2670 | \t\tprivate:\n          2671 | \t\t\tEXT_C_fp fp;\n          2672 | \t\t\tchar   language;\n          2673 | \t\t\tchar   modulname\u00c48\u00dc;\n          2674 | \t\t\tvoid * text ;\n          2675 | \t\t\tvoid init(char * name);\n          2676 | \t\tpublic:\n          2677 | \t\t\tExternalTEXT(char * name,char lang);\n          2678 | \t\t\tExternalTEXT(char * name);\n          2679 |\n          2680 |\n          2681 | \t\t\tint         MSGTEXT(int id, char * buff,int len);\n          2682 | \t\t\tchar      * HelpText(char * hid);\n          2683 | \t\t\tentry     * EntryText(char * hid);\n          2684 | \t\t\tselection * SelectionText(char * hid);\n          2685 | \t\t\u00fc;\n          2686 |\n          2687 | \textern ExternalTEXT * externaltext;\n          2688 |\n          2689 |\n          2690 |\n          2691 | \textern  MessageTEXT * messagetext;\n          2692 | \tint initMessageText();\n          2693 |\n          2694 | \tint     Error(int , ...);\n          2695 | \tchar *  Message(int , ...);\n          2696 | \tchar *  getErrorText();\n          2697 | \tchar *  getMessageText();\n          2698 | \tMessageTEXT& Err(int);\n          2699 | \tMessageTEXT& Msg(int);\n          2700 |\n          2701 | \t\u00fc\n          2702 |\n          2703 | using namespace isis_ns_mvs;\n          2704 |\n          2705 |\n          2706 |\n          2707 |\n          2708 |\n          2709 |\n          2710 |\n          2711 |\n          2712 | extern \"OS\" int  SQLASM(void);\n          2713 |\n          2714 | extern \"OS\" int  DSNALI(...);\n          2715 | extern \"OS\" int  DSNTIAR(...);\n          2716 | extern \"OS\" void DSNHLI(void *);\n          2717 |\n          2718 | const int data_dim = 30;\n          2719 | const int data_len = 72;\n          2720 |\n          2721 |\n          2722 | typedef struct varchar\n          2723 | \u00e4\n          2724 |   short len;\n          2725 |   char  value\u00c44096\u00dc;\n          2726 | \u00fc VARCHAR;\n          2727 |\n          2728 | typedef struct\n          2729 |  \u00e4\n          2730 |   short error_len;\n          2731 |   char error_text\u00c4data_dim\u00dc\u00c4data_len\u00dc;\n          2732 |  \u00fc ERROR_MESSAGE;\n          2733 |\n          2734 | enum  CallType\u00e4Connect,\n          2735 |        Disconnect,\n          2736 |        Commit,\n          2737 |        Rollback,\n          2738 |        Prepare,\n          2739 |        Open,\n          2740 |        Close,\n          2741 |        Execute\u00fc;\n          2742 |\n          2743 |\n          2744 |\n          2745 |\n          2746 |\n          2747 |\n          2748 |\n          2749 |\n          2750 |\n          2751 |\n          2752 |\n          2753 |\n          2754 | class ARCHSQL:public mERROR\n          2755 | \u00e4\n          2756 | private:\n          2757 |   int rc;\n          2758 |   void * tecb,* secb,* ribptr,* eibptr;\n          2759 |   long retcode , reasoncode;\n          2760 |   char function\u00c413\u00dc;\n          2761 |   char ssnm\u00c45\u00dc;\n          2762 |   char plan\u00c49\u00dc;\n          2763 |   char reuse\u00c49\u00dc;\n          2764 |   char collection\u00c419\u00dc;\n          2765 |   char correlation_id\u00c413\u00dc;\n          2766 |   char accounting_token\u00c423\u00dc;\n          2767 |   char accounting_interval\u00c47\u00dc;\n          2768 |   int  rrs;\n          2769 |   int status;\n          2770 |   ERROR_MESSAGE error_message;\n          2771 |   void * loadlist\u00c48\u00dc;\n          2772 | public:\n          2773 |   ARCHSQL();\n          2774 |   \u00dfARCHSQL();\n          2775 |   int call(CallType);\n          2776 |   void setDynamicSQL(char *);\n          2777 |   void * getLoadlist()\u00e4 return loadlist\u00c40\u00dc;\u00fc\n          2778 |   void setSubSystem(char *n)\u00e4memcpy(ssnm,n,4);ssnm\u00c44\u00dc = 0;\u00fc\n          2779 |   void setPlan(char * p)\u00e4memcpyp(plan,p,8,strlen(p),' '); plan\u00c48\u00dc = 0;\u00fc\n          2780 |   void setCollection(char * p)\u00e4memcpyp(collection,p,8,strlen(p),' '); c\u00d6\n          2781 | ollection\u00c48\u00dc = 0;\u00fc\n          2782 |   void setPlanName(char *n)\u00e4memcpy(plan,n,8);plan\u00c48\u00dc = 0;\u00fc\n          2783 | \u00fc;\n          2784 |\n          2785 | void  getUniqueKey(char *);\n          2786 | void  getUniqueKEY(char *);\n          2787 |\n          2788 |\n          2789 |\n          2790 |\n          2791 |\n          2792 |\n          2793 |\n          2794 |\n          2795 | struct chainE \u00e4\n          2796 |\n          2797 | \tchainE * prev ;\n          2798 | \tchainE * next ;\n          2799 | \tchar * chainEid   ;\n          2800 | \tint    chainEidl  ;\n          2801 |\n          2802 | \tchainE()\u00e4chainEid = 0; chainEidl = 0; prev = next = 0;\u00fc\n          2803 |\n          2804 | \tchainE(char * i,int l =0)\n          2805 | \t\u00e4\n          2806 | \t\tif (i)\n          2807 | \t\t\u00e4\n          2808 | \t\t\tif ( l ) chainEidl = l; else chainEidl =int(strlen(i));\n          2809 | \t\t\tchainEid = new char\u00c4chainEidl+1\u00dc; memcpy(chainEid,i,chainEidl+1);\n          2810 | \t\t\u00fc\n          2811 | \t\telse chainEid =0;\n          2812 | \t\tprev=next=0;\n          2813 | \t\u00fc\n          2814 |\n          2815 | \tchainE(const char * i,int l =0)\n          2816 | \t\u00e4\n          2817 | \t\tif (i)\n          2818 | \t\t\u00e4\n          2819 | \t\t\tif ( l ) chainEidl = l; else chainEidl =int(strlen(i));\n          2820 | \t\t\tchainEid = new char\u00c4chainEidl+1\u00dc; memcpy(chainEid,i,chainEidl+1);\n          2821 | \t\t\u00fc\n          2822 | \t\telse chainEid =0;\n          2823 | \t\tprev=next=0;\n          2824 | \t\u00fc\n          2825 |\n          2826 | \tchainE(const mvsSTRING * s)\n          2827 | \t\u00e4\n          2828 | \t\tif (s)\n          2829 | \t\t\u00e4\n          2830 | \t\t\tchainEidl = int((mvsSTRING *)s->lengthOf());\n          2831 | \t\t\tchainEid = new char\u00c4chainEidl+1\u00dc;\n          2832 | \t\t\tmemcpy(chainEid,(char *)mvsSTRING(*s),chainEidl+1);\n          2833 | \t\t\u00fc\n          2834 | \t\telse chainEid =0;\n          2835 | \t\tprev=next=0;\n          2836 | \t\u00fc\n          2837 | \tvirtual \u00dfchainE()\n          2838 | \t\u00e4\n          2839 | \t\tdelete chainEid ;\n          2840 | \t\u00fc\n          2841 | \tvirtual void print()\u00e4\u00fc\n          2842 | \u00fc;\n          2843 |\n          2844 |\n          2845 | class mCHAIN \u00e4\n          2846 |\n          2847 | protected:\n          2848 | \tchainE * first;\n          2849 | \tchainE * last ;\n          2850 |\n          2851 | \tchainE * pgo;\n          2852 | \tlong int    counter;\n          2853 | public:\n          2854 | \tfriend class CHAINITER ;\n          2855 |\n          2856 | \tmCHAIN()\n          2857 | \t\u00e4\n          2858 |\n          2859 | \t\tfirst = last = pgo = 0; counter = 0;\n          2860 | \t\u00fc\n          2861 |\n          2862 | \tmCHAIN(chainE * nc)\n          2863 | \t\u00e4\n          2864 | \t\tpgo = 0;\n          2865 | \t\tfirst = nc ; last = nc ;\n          2866 | \t\tcounter = 1;\n          2867 | \t\u00fc\n          2868 |\n          2869 | \tvirtual \u00dfmCHAIN();\n          2870 | \tvirtual   long int    add(chainE * nc,chainE * c,long int code = 1);\n          2871 | \tvirtual long int addfirst(chainE * nc )\n          2872 | \t\u00e4 return add(nc,first,-1) ; \u00fc\n          2873 | \tvirtual long int addlast(chainE * nc )\n          2874 | \t\u00e4 return add(nc,last,+1) ; \u00fc\n          2875 | \tvirtual long int before(chainE * nc , chainE * c)\n          2876 | \t\u00e4return add(nc,c,-1);\u00fc\n          2877 | \tvirtual long int after(chainE * nc , chainE * c)\n          2878 | \t\u00e4return add(nc,c,+1);\u00fc\n          2879 | \tvirtual long int del(chainE * c);\n          2880 | \tvirtual void swap(chainE * a , chainE * b);\n          2881 |\n          2882 |\n          2883 |\n          2884 | \tvirtual chainE* goNext();\n          2885 | \tvirtual chainE* goPrev();\n          2886 | \tvirtual chainE* goFirst();\n          2887 | \tvirtual chainE* goLast();\n          2888 | \tvirtual chainE* go(int);\n          2889 | \tvirtual chainE * searchEQ(const char * id,size_t =0);\n          2890 | \tvirtual chainE * search(const char * id,size_t =0);\n          2891 | \tvirtual chainE * search(const mvsSTRING &);\n          2892 | \tvirtual chainE * search(char *id,size_t length =0)\u00e4 return search((con\u00d6\n          2893 | st char *)id,length);\u00fc\n          2894 | \tvirtual chainE * search(mvsSTRING &s)\u00e4 return search((const mvsSTRING&\u00d6\n          2895 | )s);\u00fc\n          2896 |\n          2897 | \tvirtual void sort(long int direction);\n          2898 | \tvirtual void print_all_ids();\n          2899 | \tvirtual void print();\n          2900 | \tfriend int idcmp(chainE* , chainE*);\n          2901 | \u00fc;\n          2902 |\n          2903 | enum SORTEDTYPE\u00e4UNIQUE =0 ,NOUNIQUE =1 \u00fc;\n          2904 |\n          2905 | class SORTEDmCHAIN:public mCHAIN\n          2906 | \u00e4\n          2907 | private:\n          2908 | \tSORTEDTYPE unique;\n          2909 | public:\n          2910 | \tSORTEDmCHAIN(SORTEDTYPE st = UNIQUE):\n          2911 | \t\t\tmCHAIN(), unique(st)\u00e4\u00fc;\n          2912 | \t\t\tSORTEDmCHAIN(chainE *nc, SORTEDTYPE st = UNIQUE)\n          2913 | \t\t\t\t:mCHAIN(nc), unique(st)\u00e4\u00fc;\n          2914 | \t\t\tlong int add(chainE * nc,chainE * = 0,long int = 0);\n          2915 | \t\t\tvirtual \u00dfSORTEDmCHAIN()\u00e4\u00fc\n          2916 | \u00fc;\n          2917 |\n          2918 | class mSTACK:public mCHAIN\n          2919 | \u00e4\n          2920 | private:\n          2921 | public:\n          2922 | \tmSTACK():mCHAIN()\u00e4\u00fc\n          2923 | \tmSTACK(chainE * nc):mCHAIN(nc)\u00e4\u00fc\n          2924 |\n          2925 | \tvirtual long int push(chainE * nc)\u00e4return addlast(nc);\u00fc\n          2926 | \tvirtual chainE * examine(int i = 0 )\n          2927 | \t\u00e4\n          2928 | \t\tif ( i >= 0 ) return last;\n          2929 | \t\ti = -i;\n          2930 | \t\tif ( counter-i < 0 ) return 0;\n          2931 | \t\treturn go(counter-i);\n          2932 |\n          2933 | \t\u00fc\n          2934 | \tvirtual chainE * pop()\u00e4chainE * r = last; if (last) del(last);return r\u00d6\n          2935 | ;\u00fc\n          2936 | \u00fc;\n          2937 |\n          2938 | class mHASH:public mCHAIN\n          2939 | \u00e4\n          2940 | private:\n          2941 | \tchainE * * table;\n          2942 | \tint    hash;\n          2943 | \tint\t\tpi;\n          2944 | public:\n          2945 | \tmHASH(int h = 1023);\n          2946 | \t\u00dfmHASH();\n          2947 | \tlong int add(chainE *);\n          2948 | \tlong int del(chainE *);\n          2949 | \tchainE * next();\n          2950 | \tchainE * search(chainE *);\n          2951 | private:\n          2952 | \tsize_t  hashCode(chainE *c)\n          2953 | \t\u00e4\n          2954 | \t\tint r = 0;\n          2955 | \t\tif (c->chainEid)\n          2956 | \t\t\tfor (int i = c->chainEidl;i;i--)\n          2957 | \t\t\t\tr = (r<<1) \u00ac (c->chainEid\u00c4i-1\u00dc) ;\n          2958 | \t\treturn size_t(r<0 ? -r:r);\n          2959 | \t\u00fc\n          2960 | \u00fc;\n          2961 |\n          2962 | class CHAINITER\u00e4\n          2963 | private:\n          2964 | \tmCHAIN * c;\n          2965 | \tchainE * a;\n          2966 | public:\n          2967 | \tCHAINITER(mCHAIN &ch) \u00e4c = &ch ; a = (c->first ? c->first:0) ; \u00fc\n          2968 | \tCHAINITER(mCHAIN *ch) \u00e4c =  ch ; a = (c->first ? c->first:0) ; \u00fc\n          2969 | \t\u00dfCHAINITER()\u00e4\u00fc\n          2970 | \tchainE * next() \u00e4\n          2971 |\n          2972 | \t\tchainE * r = a ;\n          2973 | \t\tif ( a == 0 ) a =c->first ;\n          2974 | \t\telse a = a->next ;\n          2975 | \t\treturn r;\n          2976 | \t\u00fc\n          2977 | \tchainE * operator()()\u00e4 return next(); \u00fc\n          2978 | \tvoid reset() \u00e4 a = (c ? c->first:0);\u00fc\n          2979 | \u00fc;\n          2980 |\n          2981 | int idcmp(chainE* , chainE*);\n          2982 |\n          2983 |\n          2984 |\n          2985 |\n          2986 |\n          2987 |\n          2988 |\n          2989 |\n          2990 |\n          2991 |\n          2992 | class JOBENV\n          2993 | \u00e4\n          2994 | public:\n          2995 | enum JOBENV_ACTION\n          2996 | \u00e4\n          2997 | \tAbort,\n          2998 |    Continue\n          2999 | \u00fc;\n          3000 | public:\n          3001 |     mvsSTRING jobName;\n          3002 |     mvsSTRING jobId;\n          3003 |     mvsSTRING stepName;\n          3004 |     mvsSTRING procStepName;\n          3005 |     mvsSTRING program;\n          3006 | \t\tmvsSTRING programRb;\n          3007 |     static int  debug;\n          3008 | public:\n          3009 |     JOBENV(char *);\n          3010 |     \u00dfJOBENV()\u00e4\u00fc\n          3011 |     void print();\n          3012 |     void static Error(char *,JOBENV_ACTION);\n          3013 |     int  static DEBUG(int,char*);\n          3014 |     int  static DEBUG(int,char*,int);\n          3015 |     int  static DEBUG(int,size_t);\n          3016 |     int  static DEBUG(int,char*,char*);\n          3017 |     int  static DEBUG(int,char*,char*,char*);\n          3018 |     int  static DEBUG(int,char*,char*,char*,char*);\n          3019 |     int  static DEBUG(int,char*,char *,int);\n          3020 | \u00fc;\n          3021 |\n          3022 | extern JOBENV * jobEnv;\n          3023 |\n          3024 |\n          3025 |\n          3026 | const short  eiop00  = 0;\n          3027 | const short  eiop01  = 1;\n          3028 | const short  eiop02  = 2;\n          3029 | const short  eiop03  = 3;\n          3030 | const short  eiop04  = 4;\n          3031 | const short  eiop05  = 5;\n          3032 | const short  eiop06  = 6;\n          3033 | const short  eiop07  = 7;\n          3034 | const short  eiop08  = 8;\n          3035 | const short  eiop09  = 9;\n          3036 | const short  eiop10  =10;\n          3037 | const short  eiop11  =11;\n          3038 | const short  eiop12  =12;\n          3039 | const short  eiop13  =13;\n          3040 | const short  eiop14  =14;\n          3041 | const short  eiop15  =15;\n          3042 | const short  eiop16  =16;\n          3043 | const short  eiop17  =17;\n          3044 | const short  eiop18  =18;\n          3045 | const short  eiop19  =19;\n          3046 | const short  eiop20  =20;\n          3047 | const short  eiop21  =21;\n          3048 | const short  eiop22  =22;\n          3049 | const short  eiop23  =23;\n          3050 | const short  eiop24  =24;\n          3051 | const short  eiop25  =25;\n          3052 | const short  eiop26  =26;\n          3053 |\n          3054 | const int eirc_ok    = 0;\n          3055 | const int eirc_replace    = 4;\n          3056 | const int eirc_insert    = 8;\n          3057 | const int eirc_delete    = 12;\n          3058 | const int eirc_modified  = 16;\n          3059 | const int eirc_disconnect  = 20;\n          3060 | const int eirc_disconnect_after = 24;\n          3061 | const int eirc_wtor        = 28;\n          3062 | const int eirc_end_function= 32;\n          3063 | const int eirc_end_dataset = 36;\n          3064 |\n          3065 |\n          3066 | extern const char * ADRDSSU;\n          3067 | extern const char * KEYWORD_INCLUDE_MARK;\n          3068 | extern const char * KEYWORD_DUMP;\n          3069 | extern const char * KEYWORD_RESTORE;\n          3070 | extern const char * KEYWORD_DB_PLAN;\n          3071 | extern const char * KEYWORD_DB_SUBSYS;\n          3072 | extern const char * KEYWORD_PREFIX;\n          3073 | extern const char * KEYWORD_SYSIN;\n          3074 | extern const char * KEYWORD_ADR012I;\n          3075 | extern const char * KEYWORD_DEBUG;\n          3076 | extern const char * KEYWORD_COMPR;\n          3077 | extern const char * KEYWORD_REFDT;\n          3078 | extern const char * KEYWORD_SQLFILE;\n          3079 | extern const char * KEYWORD_DIRECT;\n          3080 | extern const char * KEYWORD_MAXLENGTH;\n          3081 | extern const char * KEYWORD_USEDB2;\n          3082 | extern const char * KEYWORD_USEDB2_FILE;\n          3083 |\n          3084 |\n          3085 |\n          3086 |\n          3087 |\n          3088 |\n          3089 | extern \"OS\" int UIMASM(...);\n          3090 |\n          3091 |\n          3092 |\n          3093 |\n          3094 |\n          3095 |\n          3096 |\n          3097 |\n          3098 |\n          3099 |\n          3100 |\n          3101 |\n          3102 |\n          3103 |\n          3104 |\n          3105 |\n          3106 |\n          3107 |\n          3108 |\n          3109 |\n          3110 | const  unsigned PSATOLD = 0x21c;\n          3111 | const  unsigned PSAAOLD = 0x224;\n          3112 | const  unsigned TCBFSA  = 0x70/4;\n          3113 | const  unsigned TCBUSER = 0xA8;\n          3114 | const  unsigned tcbuser = 0xa8;\n          3115 | const  unsigned SAVEr1  = 0x18/4;\n          3116 | static unsigned POSTcode = 0x40000000;\n          3117 | static unsigned WAITcode = 0x80000000;\n          3118 |\n          3119 | class SUBTASK;\n          3120 | class JOBENV;\n          3121 |\n          3122 |\n          3123 | typedef void       (*SUBTASK_FUNCTION)(void*);\n          3124 | typedef void       * addressP;\n          3125 | inline addressP getASCB()\u00e4return(*(addressP*)PSAAOLD);\u00fc\n          3126 | inline addressP getTCB()\u00e4return (*(addressP *)PSATOLD);\u00fc\n          3127 |\n          3128 |\n          3129 | enum SUBTASK_STATUS\n          3130 | \u00e4\n          3131 |     Reset,\n          3132 |     Started,\n          3133 |     WaitingForWork,\n          3134 |     WaitingForMain,\n          3135 |     Working,\n          3136 |     Stopping\n          3137 | \u00fc;\n          3138 | typedef struct PROGRAM_ARGUMENTS \u00e4\n          3139 |   short  arg_l;\n          3140 |   char   arg_v\u00c41024\u00dc;\n          3141 |   \u00fc programArguments;\n          3142 |\n          3143 |  class SUBTASK: public mERROR\n          3144 | \u00e4\n          3145 | private:\n          3146 |   char * dll;\n          3147 | protected:\n          3148 |   MessageTEXT * messageText;\n          3149 |   JOBENV *      jobEnv;\n          3150 |   void * TCB;\n          3151 |   unsigned ECB;\n          3152 |   unsigned StopECB;\n          3153 |   unsigned WorkECB;\n          3154 |   unsigned MainECB;\n          3155 |   unsigned SuspendECB;\n          3156 |   unsigned *  ecblist\u00c42\u00dc;\n          3157 |    void(* address)(void);\n          3158 |   void (*subrun)();\n          3159 |   int R15 ;\n          3160 |   SUBTASK_FUNCTION functions\u00c44\u00dc;\n          3161 |   void  * arg\u00c44\u00dc;\n          3162 |   int subtask_rc;\n          3163 |   int suspendflag;\n          3164 |   SUBTASK_STATUS status;\n          3165 |   char   name\u00c49\u00dc;\n          3166 |   char   subtaskposted;\n          3167 |   char   first_start;\n          3168 |   int    timeout;\n          3169 | public:\n          3170 |   friend void run();\n          3171 |   SUBTASK();\n          3172 |   SUBTASK(char *);\n          3173 |   SUBTASK(addressP,SUBTASK_FUNCTION,char*);\n          3174 |   SUBTASK(int,char * *,char *,char *);\n          3175 |   virtual \u00dfSUBTASK();\n          3176 |   virtual int    attach();\n          3177 |   virtual int    detach();\n          3178 |   virtual int    callAsync(int);\n          3179 |   virtual int    callSync(int);\n          3180 |   virtual int    waitForSubtask();\n          3181 |   virtual int    waitForEndOfSubtask();\n          3182 |   virtual void   start();\n          3183 |   virtual void   stop();\n          3184 |   virtual void   chap(int);\n          3185 |   virtual void   exit(int);\n          3186 |   virtual int    isTerminated()\u00e4 return (ECB&0x7fffffff);\u00fc\n          3187 |   SUBTASK_STATUS askStatus()\u00e4return status;\u00fc\n          3188 |   MessageTEXT * getMessageText()\u00e4return messageText;\u00fc\n          3189 |   JOBENV      * getJobEnv()\u00e4return jobEnv;\u00fc\n          3190 |   addressP      getParam()\u00e4return(addressP(argV));\u00fc\n          3191 |   addressP      getTCB()\u00e4return(addressP(TCB));\u00fc\n          3192 |   int           getTimeout()\u00e4return timeout;\u00fc\n          3193 |   char *        getDllName()\u00e4 return dll;\u00fc\n          3194 |   void          setDllName(char *d)\u00e4 dll = d;\u00fc\n          3195 |   char * *  argV;\n          3196 |   int       argC;\n          3197 |\n          3198 | static addressP GetTCB()\u00e4return (*(addressP *)PSATOLD);\u00fc\n          3199 | static addressP GetASCB()\u00e4return(*(addressP*)PSAAOLD);\u00fc\n          3200 |\n          3201 | protected:\n          3202 |   int    checkR15(char *);\n          3203 |   void   init(char *);\n          3204 |   void   error(char *);\n          3205 | \u00fc;\n          3206 |\n          3207 |  class DLL_SUBTASK\n          3208 | \u00e4\n          3209 | private:\n          3210 | public:\n          3211 |   SUBTASK * subtask;\n          3212 |   DLL_SUBTASK(int,char * *,char *,char * = \"SUBRUN \");\n          3213 |   \u00dfDLL_SUBTASK();\n          3214 |   void      start()\u00e4subtask->start();\u00fc\n          3215 |   void      stop()\u00e4subtask->stop();\u00fc\n          3216 |   int       detach()\u00e4return(subtask->detach());\u00fc\n          3217 |   addressP  getTCB()\u00e4return(subtask->getTCB());\u00fc\n          3218 | \u00fc;\n          3219 |\n          3220 |  class MAIN_SUBTASK:public SUBTASK\n          3221 | \u00e4\n          3222 | private:\n          3223 | mvsSTRING startmvsSTRING;\n          3224 |  void * plist\u00c41\u00dc;\n          3225 | programArguments   argument;\n          3226 | programArguments * argumentP;\n          3227 | public:\n          3228 |  MAIN_SUBTASK();\n          3229 |  MAIN_SUBTASK(int,char * *,char *);\n          3230 |  MAIN_SUBTASK(programArguments *,char * );\n          3231 |  virtual int  attach();\n          3232 | \u00fc;\n          3233 |\n          3234 |                    #pragma nomargins nosequence\n          3235 |                    #pragma checkout(suspend)\n          3236 |\n          3237 |\n          3238 |\n          3239 |     extern \"C\" \u00e4\n          3240 |\n          3241 |\n          3242 |\n          3243 |\n          3244 |\n          3245 |\n          3246 |\n          3247 |\n          3248 |                    #pragma nomargins nosequence\n          3249 |                    #pragma checkout(suspend)\n          3250 |\n          3251 |\n          3252 |\n          3253 |     extern \"C\" \u00e4\n          3254 |\n          3255 |\n          3256 |\n          3257 |\n          3258 |\n          3259 |\n          3260 |\n          3261 |\n          3262 |\n          3263 |\n          3264 |\n          3265 |\n          3266 |\n          3267 |\n          3268 |\n          3269 |\n          3270 |\n          3271 |\n          3272 |\n          3273 |\n          3274 |\n          3275 |\n          3276 |\n          3277 |\n          3278 |\n          3279 |\n          3280 |\n          3281 |\n          3282 |\n          3283 |\n          3284 |\n          3285 |\n          3286 |\n          3287 |\n          3288 |\n          3289 |\n          3290 |\n          3291 |\n          3292 |\n          3293 |\n          3294 |   \u00fc\n          3295 |\n          3296 |                    #pragma checkout(resume)\n          3297 |\n          3298 |\n          3299 |\n          3300 |\n          3301 |\n          3302 |\n          3303 |\n          3304 |\n          3305 |\n          3306 |\n          3307 |\n          3308 |\n          3309 |\n          3310 |\n          3311 |\n          3312 |\n          3313 |\n          3314 |\n          3315 |\n          3316 |\n          3317 |\n          3318 |\n          3319 |       struct flock \u00e4\n          3320 |             short l_type;\n          3321 |             short l_whence;\n          3322 |                int   l_rsrvd1;\n          3323 |             off_t l_start;\n          3324 |                int   l_rsrvd2;\n          3325 |             off_t l_len;\n          3326 |             pid_t l_pid;\n          3327 |       \u00fc;\n          3328 |\n          3329 |\n          3330 |\n          3331 |\n          3332 |         int creat(const char *, mode_t) ;\n          3333 |         int fcntl(int, int, ... );\n          3334 |         int open(const char *, int, ... );\n          3335 |\n          3336 |\n          3337 |\n          3338 |\n          3339 |\n          3340 |\n          3341 |\n          3342 |\n          3343 |\n          3344 |\n          3345 |\n          3346 |      \u00fc\n          3347 |\n          3348 |                    #pragma checkout(resume)\n          3349 |                    #pragma nomargins nosequence\n          3350 |                    #pragma checkout(suspend)\n          3351 |\n          3352 |\n          3353 |\n          3354 |   extern \"C\" \u00e4\n          3355 |\n          3356 |\n          3357 |\n          3358 |\n          3359 |\n          3360 |\n          3361 |\n          3362 |\n          3363 |\n          3364 |\n          3365 |\n          3366 |\n          3367 |\n          3368 |\n          3369 |\n          3370 |\n          3371 |\n          3372 |\n          3373 |\n          3374 |\n          3375 |\n          3376 |\n          3377 |\n          3378 |\n          3379 |\n          3380 |\n          3381 |\n          3382 |\n          3383 |\n          3384 |\n          3385 |\n          3386 |\n          3387 |\n          3388 |\n          3389 |\n          3390 |\n          3391 |\n          3392 |\n          3393 |\n          3394 |\n          3395 |\n          3396 |\n          3397 |\n          3398 |\n          3399 |\n          3400 |\n          3401 |\n          3402 |\n          3403 |\n          3404 |\n          3405 |\n          3406 |\n          3407 |\n          3408 |\n          3409 |\n          3410 |\n          3411 |\n          3412 |\n          3413 |\n          3414 |\n          3415 |\n          3416 |\n          3417 |\n          3418 |\n          3419 |\n          3420 |\n          3421 |\n          3422 |\n          3423 |                #pragma map (getlogin, \"\u00d6174\u00d6174GETLG2\")\n          3424 |\n          3425 |\n          3426 |          #pragma map (__getlogin1, \"\u00d6174\u00d6174GETLOG\")\n          3427 |          #pragma map (__pid_affinity,\"\u00d6174\u00d6174PID\u00d6174AF\")\n          3428 |\n          3429 |           #pragma map(__login_applid,\"\u00d6174\u00d6174LOGNAP\")\n          3430 |          #pragma map(__certificate,\"\u00d6174\u00d6174CERTIF\")\n          3431 |\n          3432 |            void _exit(int);\n          3433 |            int   access(const char *, int );\n          3434 |            int   __certificate(int, int, char *, ...);\n          3435 |            unsigned int alarm(unsigned int);\n          3436 |            int   chdir(const char *);\n          3437 |            int   chown(const char *, uid_t, gid_t);\n          3438 |            int   close(int);\n          3439 |            char *ctermid(char *);\n          3440 |            int   dup(int);\n          3441 |            int   dup2(int, int);\n          3442 |            int   execl(const char *, const char *, ... );\n          3443 |            int   execle(const char *, const char *, ... );\n          3444 |            int   execlp(const char *, const char *, ... );\n          3445 |            int   execv(const char *, char *const \u00c4\u00dc);\n          3446 |            int   execve(const char *, char *const \u00c4\u00dc, char * const \u00c4\u00dc);\n          3447 |            int   execvp(const char *, char *const \u00c4\u00dc );\n          3448 |            pid_t fork(void);\n          3449 |            long  fpathconf(int, int);\n          3450 |            char *getcwd(char *, size_t);\n          3451 |            gid_t getegid(void);\n          3452 |            uid_t geteuid(void);\n          3453 |            gid_t getgid(void);\n          3454 |            int   getgroups(int, gid_t \u00c4\u00dc);\n          3455 |              int   getgroupsbyname(char \u00c4\u00dc, int, gid_t \u00c4\u00dc);\n          3456 |              int   __osenv(int, int, __osenv_token *);\n          3457 |            char *__getlogin1(void);\n          3458 |            char *getlogin(void);\n          3459 |            pid_t getpgrp(void);\n          3460 |            pid_t getpid(void);\n          3461 |            pid_t getppid(void);\n          3462 |            uid_t getuid(void);\n          3463 |            int   isatty(int);\n          3464 |            int   link(const char *, const char *);\n          3465 |            int __login(int, int, int, void *, int, char *,\n          3466 |                          int, char *, int);\n          3467 |            off_t lseek(int, off_t, int);\n          3468 |            long  pathconf(const char *, int);\n          3469 |            int   pause(void);\n          3470 |            int   __pid_affinity(int, pid_t, pid_t, int);\n          3471 |            int   pipe(int \u00c42\u00dc);\n          3472 |            ssize_t read(int, void *, size_t);\n          3473 |            int   rmdir(const char *);\n          3474 |            int   setgid(gid_t);\n          3475 |            int   setpgid(pid_t, pid_t);\n          3476 |            pid_t setsid(void);\n          3477 |            int   setuid(uid_t);\n          3478 |            unsigned int sleep(unsigned int );\n          3479 |            long  sysconf(int);\n          3480 |            pid_t tcgetpgrp(int);\n          3481 |            int   tcsetpgrp(int, pid_t);\n          3482 |            char *ttyname(int);\n          3483 |            int   unlink(const char *);\n          3484 |            ssize_t write(int, const void *, size_t);\n          3485 |\n          3486 |          int __login_applid(int, int, int, void *, int, char *, int, ch\u00d6\n          3487 | ar *, int, const char *);\n          3488 |\n          3489 |\n          3490 |\n          3491 |\n          3492 |\n          3493 |\n          3494 |\n          3495 |\n          3496 |\n          3497 |\n          3498 |\n          3499 |\n          3500 |\n          3501 |\n          3502 |\n          3503 |\n          3504 |            int   fchown(int , uid_t, gid_t);\n          3505 |            int   fsync(int);\n          3506 |            int   ftruncate(int, off_t);\n          3507 |            int   readlink(const char *, char *, size_t );\n          3508 |            int   setegid(gid_t);\n          3509 |            int   seteuid(uid_t);\n          3510 |            int   symlink(const char *, const char *);\n          3511 |              int   extlink_np(const char *, const char *);\n          3512 |\n          3513 |\n          3514 |\n          3515 |\n          3516 |\n          3517 |\n          3518 |\n          3519 |\n          3520 |\n          3521 |\n          3522 |\n          3523 |\n          3524 |\n          3525 |\n          3526 |\n          3527 |\n          3528 |\n          3529 |\n          3530 |\n          3531 |\n          3532 |\n          3533 |\n          3534 |\n          3535 |\n          3536 |\n          3537 |\n          3538 |\n          3539 |\n          3540 |\n          3541 |\n          3542 |\n          3543 |\n          3544 |\n          3545 |\n          3546 |           extern char *optarg;\n          3547 |           extern int optind, opterr, optopt;\n          3548 |\n          3549 |\n          3550 |\n          3551 |\n          3552 |\n          3553 |\n          3554 |\n          3555 |\n          3556 |\n          3557 |\n          3558 |\n          3559 |\n          3560 |\n          3561 |\n          3562 |\n          3563 |\n          3564 |\n          3565 |\n          3566 |\n          3567 |\n          3568 |\n          3569 |\n          3570 |\n          3571 |\n          3572 |\n          3573 |\n          3574 |\n          3575 |\n          3576 |\n          3577 |\n          3578 |\n          3579 |\n          3580 |\n          3581 |              void         __cnvblk(char \u00c4\u00dc, char \u00c4\u00dc, int);\n          3582 |                int          chroot(const char *);\n          3583 |              char        *crypt(const char *, const char *);\n          3584 |              void         encrypt(char \u00c464\u00dc, int);\n          3585 |              int          nice(int);\n          3586 |            extern char **__opargf(void);\n          3587 |            extern int  *__operrf(void);\n          3588 |            extern int  *__opindf(void);\n          3589 |            extern int  *__opoptf(void);\n          3590 |            size_t       confstr(int, char *, size_t);\n          3591 |              char        *cuserid(char *);\n          3592 |            int          getopt(int, char * const \u00c4\u00dc, const char *);\n          3593 |              char        *getpass(const char *);\n          3594 |            void         swab(const void *restrict,\n          3595 |                                    void *restrict, ssize_t);\n          3596 |\n          3597 |\n          3598 |\n          3599 |\n          3600 |\n          3601 |\n          3602 |                    #pragma nomargins nosequence\n          3603 |                    #pragma checkout(suspend)\n          3604 |\n          3605 |\n          3606 |\n          3607 |     extern \"C\" \u00e4\n          3608 |\n          3609 |\n          3610 |\n          3611 |\n          3612 |                    #pragma nomargins nosequence\n          3613 |                    #pragma checkout(suspend)\n          3614 |\n          3615 |\n          3616 |\n          3617 |     extern \"C\" \u00e4\n          3618 |\n          3619 |\n          3620 |\n          3621 |\n          3622 |\n          3623 |\n          3624 |        typedef    signed  char   int8_t;\n          3625 |        typedef    signed  short  int16_t;\n          3626 |        typedef    signed  int    int32_t;\n          3627 |\n          3628 |\n          3629 |        typedef signed long long  int64_t;\n          3630 |\n          3631 |\n          3632 |\n          3633 |\n          3634 |        typedef  unsigned  char  uint8_t;\n          3635 |\n          3636 |\n          3637 |        typedef  unsigned  short uint16_t;\n          3638 |\n          3639 |\n          3640 |        typedef  unsigned  int   uint32_t;\n          3641 |\n          3642 |        typedef unsigned long long uint64_t;\n          3643 |\n          3644 |        typedef    signed long    intptr_t;\n          3645 |        typedef  unsigned long   uintptr_t;\n          3646 |\n          3647 |\n          3648 |\n          3649 |     \u00fc\n          3650 |\n          3651 |                    #pragma checkout(resume)\n          3652 |\n          3653 |\n          3654 |\n          3655 |\n          3656 |     \u00fc\n          3657 |\n          3658 |                    #pragma checkout(resume)\n          3659 |\n          3660 |\n          3661 |\n          3662 |\n          3663 |\n          3664 |\n          3665 |\n          3666 |\n          3667 |\n          3668 |\n          3669 |\n          3670 |\n          3671 |\n          3672 |\n          3673 |\n          3674 |\n          3675 |\n          3676 |\n          3677 |\n          3678 |\n          3679 |\n          3680 |\n          3681 |\n          3682 |\n          3683 |\n          3684 |\n          3685 |\n          3686 |              int          fchdir(int);\n          3687 |                int          getdtablesize(void);\n          3688 |              pid_t        getpgid(pid_t);\n          3689 |              pid_t        getsid(pid_t);\n          3690 |              char        *getwd(char *);\n          3691 |              int          lchown(const char *, uid_t, gid_t);\n          3692 |              int          setregid(gid_t, gid_t);\n          3693 |              int          setreuid(uid_t, uid_t);\n          3694 |              void         sync(void);\n          3695 |              int          truncate(const char *, off_t);\n          3696 |              useconds_t    ualarm(useconds_t, useconds_t);\n          3697 |              int          brk(void *);\n          3698 |              int          getpagesize(void);\n          3699 |                void        *sbrk(intptr_t);\n          3700 |            int          lockf(int, int, off_t);\n          3701 |            pid_t        setpgrp(void);\n          3702 |            int          usleep(useconds_t);\n          3703 |            pid_t        vfork(void);\n          3704 |\n          3705 |\n          3706 |\n          3707 |\n          3708 |\n          3709 |\n          3710 |\n          3711 |\n          3712 |\n          3713 |\n          3714 |\n          3715 |       int getlogin_r(char *, size_t );\n          3716 |       int ttyname_r(int, char *, size_t );\n          3717 |\n          3718 |\n          3719 |       ssize_t pread(int, void *, size_t, off_t);\n          3720 |\n          3721 |       ssize_t pwrite(int, const void *, size_t, off_t);\n          3722 |\n          3723 |\n          3724 |\n          3725 |\n          3726 |\n          3727 |\n          3728 |\n          3729 |\n          3730 |\n          3731 |\n          3732 |\n          3733 |\n          3734 |\n          3735 |\n          3736 |\n          3737 |\n          3738 |\n          3739 |\n          3740 |\n          3741 |\n          3742 |       int          __atoe(char *);\n          3743 |       int          __atoe_l(char *, int);\n          3744 |       int          __check_resource_auth_np(char *, char *, char *,\n          3745 |                                             char *, char *, int);\n          3746 |       int          __convert_id_np( int, char *, char *, char *);\n          3747 |       int          __etoa(char *);\n          3748 |       int          __etoa_l(char *, int);\n          3749 |       int          __isPosixOn(void);\n          3750 |       int          __openMvsRel(void);\n          3751 |       int          __openVmRel(void);\n          3752 |       int          __smf_record(int, int, int, char *);\n          3753 |       int          __wsinit(void (*)());\n          3754 |\n          3755 |     int __smf_record2(int, int, int, char *, unsigned int);\n          3756 |\n          3757 |\n          3758 |\n          3759 |\n          3760 |\n          3761 |\n          3762 |\n          3763 |\n          3764 |           long         gethostid(void);\n          3765 |           int          gethostname(char *, size_t);\n          3766 |\n          3767 |\n          3768 |\n          3769 |\n          3770 |\n          3771 |\n          3772 |\n          3773 |\n          3774 |\n          3775 |\n          3776 |\n          3777 |\n          3778 |\n          3779 |\n          3780 |\n          3781 |\n          3782 |       int __must_stay_clean(int);\n          3783 |\n          3784 |\n          3785 |\n          3786 |   \u00fc\n          3787 |\n          3788 |                    #pragma checkout(resume)\n          3789 |                    #pragma nomargins nosequence\n          3790 |                    #pragma checkout(suspend)\n          3791 |\n          3792 |\n          3793 |\n          3794 |     extern \"C\" \u00e4\n          3795 |\n          3796 |\n          3797 |\n          3798 |\n          3799 |\n          3800 |\n          3801 |\n          3802 |\n          3803 |\n          3804 |     int __errno2(void);\n          3805 |     int *__err2ad(void);\n          3806 |\n          3807 |\n          3808 |\n          3809 |\n          3810 |\n          3811 |\n          3812 |\n          3813 |\n          3814 |\n          3815 |\n          3816 |\n          3817 |\n          3818 |\n          3819 |\n          3820 |\n          3821 |            extern int errno;\n          3822 |            extern int *__errno(void);\n          3823 |\n          3824 |\n          3825 |\n          3826 |\n          3827 |\n          3828 |\n          3829 |\n          3830 |\n          3831 |\n          3832 |\n          3833 |\n          3834 |\n          3835 |\n          3836 |\n          3837 |\n          3838 |\n          3839 |\n          3840 |\n          3841 |\n          3842 |\n          3843 |\n          3844 |\n          3845 |\n          3846 |\n          3847 |\n          3848 |\n          3849 |\n          3850 |\n          3851 |\n          3852 |\n          3853 |\n          3854 |\n          3855 |\n          3856 |\n          3857 |\n          3858 |\n          3859 |\n          3860 |\n          3861 |\n          3862 |\n          3863 |\n          3864 |\n          3865 |\n          3866 |\n          3867 |\n          3868 |\n          3869 |\n          3870 |\n          3871 |\n          3872 |\n          3873 |\n          3874 |\n          3875 |\n          3876 |\n          3877 |\n          3878 |\n          3879 |\n          3880 |\n          3881 |\n          3882 |\n          3883 |\n          3884 |\n          3885 |\n          3886 |\n          3887 |\n          3888 |\n          3889 |\n          3890 |\n          3891 |\n          3892 |\n          3893 |\n          3894 |\n          3895 |\n          3896 |\n          3897 |\n          3898 |\n          3899 |\n          3900 |\n          3901 |\n          3902 |\n          3903 |\n          3904 |\n          3905 |\n          3906 |\n          3907 |\n          3908 |\n          3909 |\n          3910 |\n          3911 |\n          3912 |\n          3913 |\n          3914 |\n          3915 |\n          3916 |\n          3917 |\n          3918 |\n          3919 |\n          3920 |\n          3921 |\n          3922 |\n          3923 |\n          3924 |\n          3925 |\n          3926 |\n          3927 |\n          3928 |\n          3929 |\n          3930 |\n          3931 |\n          3932 |\n          3933 |\n          3934 |\n          3935 |\n          3936 |\n          3937 |\n          3938 |\n          3939 |\n          3940 |\n          3941 |\n          3942 |\n          3943 |\n          3944 |\n          3945 |\n          3946 |\n          3947 |\n          3948 |\n          3949 |\n          3950 |\n          3951 |\n          3952 |\n          3953 |\n          3954 |\n          3955 |\n          3956 |\n          3957 |\n          3958 |\n          3959 |\n          3960 |\n          3961 |\n          3962 |\n          3963 |\n          3964 |\n          3965 |\n          3966 |\n          3967 |\n          3968 |\n          3969 |\n          3970 |\n          3971 |\n          3972 |\n          3973 |\n          3974 |\n          3975 |   \u00fc\n          3976 |\n          3977 |                    #pragma checkout(resume)\n          3978 |                    #pragma nomargins nosequence\n          3979 |                    #pragma checkout(suspend)\n          3980 |\n          3981 |\n          3982 |\n          3983 |    extern \"C\" \u00e4\n          3984 |\n          3985 |\n          3986 |\n          3987 |\n          3988 |\n          3989 |\n          3990 |\n          3991 |\n          3992 |\n          3993 |\n          3994 |\n          3995 |\n          3996 |\n          3997 |\n          3998 |\n          3999 |\n          4000 |\n          4001 |\n          4002 |\n          4003 |\n          4004 |           int  bcmp (const void *, const void *, size_t);\n          4005 |           void bcopy (const void *, void *, size_t);\n          4006 |           void bzero (void *, size_t);\n          4007 |           int ffs (int);\n          4008 |           char * index  (const char *, int);\n          4009 |           char * rindex (const char *, int);\n          4010 |           int  strcasecmp (const char *, const char *);\n          4011 |           int  strncasecmp (const char *, const char *, size_t);\n          4012 |\n          4013 |\n          4014 |\n          4015 |\n          4016 |\n          4017 |          extern \"builtin\"  \u00e4\n          4018 |\n          4019 |          void * __memcpy (void *, const void *, size_t);\n          4020 |          int    __memcmp (const void *, const void *, size_t);\n          4021 |          void * __memset (void *, int, size_t);\n          4022 |          char * __strchr (const char *, int);\n          4023 |          char * __strrchr (const char *, int);\n          4024 |\n          4025 |          \u00fc\n          4026 |\n          4027 |\n          4028 |\n          4029 |\n          4030 |\n          4031 |\n          4032 |   \u00fc\n          4033 |\n          4034 |                    #pragma checkout(resume)\n          4035 |\n          4036 |\n          4037 |\n          4038 |\n          4039 |\n          4040 |\n          4041 |\n          4042 |\n          4043 |\n          4044 | static const char fullQuery\u00c4\u00dc =\n          4045 | \" SELECT * FROM DSSDATASETS A \"\n          4046 | \" WHERE ( %m% ) AND \"\n          4047 | \" ( DATE(KEY) <= DATE('%d%') ) AND \"\n          4048 | \" ( \"\n          4049 | \" A.KEY =  \"\n          4050 | \" (SELECT MAX(B.KEY) FROM DSSDATASETS B WHERE A.DATASET = B.DATASET  \"\n          4051 | \" AND DATE(B.KEY) <= DATE('%d%') ) \"\n          4052 | \" ) \" ;\n          4053 |\n          4054 |\n          4055 | /***$$$\n          4056 | EXEC SQL BEGIN DECLARE SECTION\n          4057 | $$$***/\n          4058 |\n          4059 |\n          4060 |\n          4061 |\n          4062 |\n          4063 |\n          4064 |\n          4065 |\n          4066 |\n          4067 |\n          4068 |\n          4069 |\n          4070 |\n          4071 |\n          4072 |\n          4073 |\n          4074 |\n          4075 |\n          4076 | typedef struct _TIMESTAMP\n          4077 | \u00e4\n          4078 |   short len;\n          4079 |   char  arr\u00c428\u00dc;\n          4080 | \u00fc TIMESTAMP;\n          4081 |\n          4082 | struct _DssDatasetRecord\n          4083 | \u00e4\n          4084 |    struct \u00e4 short len; char arr \u00c4 28 \u00dc ; \u00fc key;\n          4085 |    struct \u00e4 short len; char arr \u00c4 28 \u00dc ; \u00fc job;\n          4086 |    struct \u00e4 short len; char arr \u00c4 45 \u00dc ; \u00fc dataset;\n          4087 |    struct \u00e4 short len; char arr \u00c4 37 \u00dc ; \u00fc volumes;\n          4088 |    long int type;\n          4089 |    long int recordsize;\n          4090 | \u00fc DssDatasetRecord;\n          4091 |\n          4092 | class TcbARCHSQL:public chainE\n          4093 | \u00e4\n          4094 | private:\n          4095 |    ARCHSQL * archsql;\n          4096 | public:\n          4097 |    TcbARCHSQL(char * t,ARCHSQL * a):chainE(t),archsql(a)\n          4098 |    \u00e4\u00fc\n          4099 |    ARCHSQL * get()\u00e4return archsql;\u00fc\n          4100 | \u00fc;\n          4101 |\n          4102 | static char * initDynamicSql();\n          4103 |\n          4104 | class SQLINTERFACE:\n          4105 |  public  mERROR\n          4106 | \u00e4\n          4107 | protected:\n          4108 |  static char * plan;\n          4109 |  static char * subsystem;\n          4110 |  static mCHAIN  tasks;\n          4111 |  static ERROR_MESSAGE * error_message;\n          4112 | protected:\n          4113 |  static char * dSql;\n          4114 | public:\n          4115 | \tstatic bool useDB2;\n          4116 | \tstatic FILE * fileDB2;\n          4117 | public:\n          4118 |  SQLINTERFACE();\n          4119 |    \u00dfSQLINTERFACE();\n          4120 |    void diag(char *);\n          4121 |    int  commit();\n          4122 |    enum Error_Action\u00e4 Abort, Continue\u00fc;\n          4123 |    void Error(char *,Error_Action);\n          4124 |    ARCHSQL * connectDB();\n          4125 |    void tryToConnect();\n          4126 | \u00fc;\n          4127 |\n          4128 | class DssJob:\n          4129 |  public SQLINTERFACE,\n          4130 |  public mCHAIN,\n          4131 |  public CHAINITER,\n          4132 |  public chainE\n          4133 | \u00e4\n          4134 | private:\n          4135 |    struct \u00e4 short len; char arr \u00c4 28 \u00dc ; \u00fc t;\n          4136 |    struct \u00e4 short len; char arr \u00c4 28 \u00dc ; \u00fc record_key;\n          4137 |    struct \u00e4 short len; char arr \u00c4 28 \u00dc ; \u00fc record_job;\n          4138 |    struct \u00e4 short len; char arr \u00c4 45 \u00dc ; \u00fc record_dataset;\n          4139 |    struct \u00e4 short len; char arr \u00c4 37 \u00dc ; \u00fc record_volumes;\n          4140 |    long int record_type;\n          4141 |    long int record_size;\n          4142 | public:\n          4143 |    struct \u00e4 short len; char arr \u00c4 28 \u00dc ; \u00fc timestamp;\n          4144 |    struct \u00e4 short len; char arr \u00c4 9 \u00dc ; \u00fc jobName;\n          4145 |    struct \u00e4 short len; char arr \u00c4 9 \u00dc ; \u00fc jobNumber;\n          4146 |    struct \u00e4 short len; char arr \u00c4 9 \u00dc ; \u00fc program;\n          4147 |    struct \u00e4 short len; char arr \u00c4 255 \u00dc ; \u00fc dataset;\n          4148 |    long int datasetcount;\n          4149 |    struct \u00e4 short len; char arr \u00c4 30000 \u00dc ; \u00fc joblog;\n          4150 |    struct \u00e4 short len; char arr \u00c4 32000 \u00dc ; \u00fc dynamicSql;\n          4151 | public:\n          4152 |   static mCHAIN dssJobs;\n          4153 |   static int    allOnline();\n          4154 |   int    doWeNeed(const char *);\n          4155 | public:\n          4156 |  DssJob();\n          4157 |  DssJob(TIMESTAMP&);\n          4158 |  DssJob(const char *);\n          4159 |  virtual \u00dfDssJob();\n          4160 |  int insert();\n          4161 |  int query(mCHAIN*,char * =0);\n          4162 |  char * getDatasetName()\n          4163 | \u00e4\n          4164 |   return ((char *)dataset.arr);\n          4165 | \u00fc\n          4166 | private:\n          4167 |  void init();\n          4168 | \u00fc;\n          4169 |\n          4170 | class DssDataset:\n          4171 |  public SQLINTERFACE,\n          4172 |  public chainE\n          4173 | \u00e4\n          4174 | private:\n          4175 |  DssJob * job;\n          4176 | public:\n          4177 |    struct \u00e4 short len; char arr \u00c4 28 \u00dc ; \u00fc timestamp;\n          4178 |    struct \u00e4 short len; char arr \u00c4 45 \u00dc ; \u00fc dataset;\n          4179 |    struct \u00e4 short len; char arr \u00c4 37 \u00dc ; \u00fc volumes;\n          4180 |    long int type;\n          4181 |    long int recordsize;\n          4182 | public:\n          4183 |  DssDataset(DssJob *,char *,char *,int = 0,int =0);\n          4184 |  int compare(const char *n)\n          4185 |    \u00e4\n          4186 |    for(int i =0;i<45&&dataset.arr\u00c4i\u00dc&&dataset.arr\u00c4i\u00dc-' '&&n\u00c4i\u00dc&&n\u00c4i\u00dc-' \u00d6\n          4187 | ';i++)\n          4188 |      if (dataset.arr\u00c4i\u00dc - n\u00c4i\u00dc) return 0;\n          4189 |    return 1;\n          4190 |    \u00fc\n          4191 |    virtual \u00dfDssDataset();\n          4192 |    int insert();\n          4193 | \u00fc;\n          4194 |\n          4195 | /***$$$\n          4196 | EXEC SQL END DECLARE SECTION\n          4197 | $$$***/\n          4198 |\n          4199 | /***$$$\n          4200 | EXEC SQL INCLUDE SQLDA\n          4201 | $$$***/\n          4202 | #ifndef  SQLDASIZE                 /* Permit duplicate Includes      */\n          4203 |  /**/\n          4204 |  struct sqlvar\n          4205 |         \u00e4 short  sqltype;\n          4206 |           short  sqllen;\n          4207 |           char  *sqldata;\n          4208 |           short *sqlind;\n          4209 |           struct sqlname\n          4210 |                 \u00e4 short  length;\n          4211 |                   char   data??(30??);\n          4212 |                 \u00fc sqlname;\n          4213 |         \u00fc;\n          4214 |  /**/\n          4215 |  struct sqlvar2\n          4216 |         \u00e4 struct\n          4217 |                 \u00e4 long   sqllonglen;\n          4218 |          unsigned long   reserved;\n          4219 |                 \u00fc len;\n          4220 |           char  *sqldatalen;\n          4221 |           struct sqldistinct_type\n          4222 |                 \u00e4 short  length;\n          4223 |                   char   data??(30??);\n          4224 |                 \u00fc sqldatatype_name;\n          4225 |         \u00fc;\n          4226 |  /**/\n          4227 |  struct sqlda\n          4228 |         \u00e4 char   sqldaid??(8??);\n          4229 |           long   sqldabc;\n          4230 |           short  sqln;\n          4231 |           short  sqld;\n          4232 |           struct sqlvar sqlvar??(1??);\n          4233 |     \u00fc;\n          4234 |  /**/\n          4235 | /*********************************************************************/\n          4236 | /* Macros for using the sqlvar2 fields.                              */\n          4237 | /*********************************************************************/\n          4238 |  /**/\n          4239 | /*********************************************************************/\n          4240 | /*   '2' in the 7th byte of sqldaid indicates a doubled number of    */\n          4241 | /*       sqlvar entries.                                             */\n          4242 | /*   '3' in the 7th byte of sqldaid indicates a tripled number of    */\n          4243 | /*       sqlvar entries.                                             */\n          4244 | /*********************************************************************/\n          4245 | #define   SQLDOUBLED  '2'\n          4246 | #define   SQLTRIPLED  '3'\n          4247 | #define   SQLSINGLED  ' '\n          4248 |  /**/\n          4249 | /*********************************************************************/\n          4250 | /* GETSQLDOUBLED(daptr) returns 1 if the SQLDA pointed to by         */\n          4251 | /* daptr has been doubled, or 0 if it has not been doubled.          */\n          4252 | /*********************************************************************/\n          4253 | #define GETSQLDOUBLED(daptr) \u00d6\n          4254 |     (((daptr)->sqldaid??(6??) == ( char) SQLDOUBLED) ? \u00d6\n          4255 |     (1)         : \u00d6\n          4256 |     (0)           )\n          4257 |  /**/\n          4258 | /*********************************************************************/\n          4259 | /* GETSQLTRIPLED(daptr) returns 1 if the SQLDA pointed to by         */\n          4260 | /* daptr has been tripled, or 0 if it has not been tripled.          */\n          4261 | /*********************************************************************/\n          4262 | #define GETSQLTRIPLED(daptr) \u00d6\n          4263 |     (((daptr)->sqldaid??(6??) == ( char) SQLTRIPLED) ? \u00d6\n          4264 |     (1)         : \u00d6\n          4265 |     (0)           )\n          4266 |  /**/\n          4267 | /*********************************************************************/\n          4268 | /* SETSQLDOUBLED(daptr, SQLDOUBLED) sets the 7th byte of sqldaid     */\n          4269 | /* to '2'.                                                         */\n          4270 | /* SETSQLDOUBLED(daptr, SQLSINGLED) sets the 7th byte of sqldaid     */\n          4271 | /* to be a ' '.                                                    */\n          4272 | /*********************************************************************/\n          4273 | #define SETSQLDOUBLED(daptr, newvalue) \u00d6\n          4274 |     (((daptr)->sqldaid??(6??) = (newvalue)))\n          4275 |  /**/\n          4276 | /*********************************************************************/\n          4277 | /* SETSQLTRIPLED(daptr) sets the 7th byte of sqldaid                 */\n          4278 | /* to '3'.                                                         */\n          4279 | /*********************************************************************/\n          4280 | #define SETSQLTRIPLED(daptr) \u00d6\n          4281 |     (((daptr)->sqldaid??(6??) = (SQLTRIPLED)))\n          4282 |  /**/\n          4283 | /*********************************************************************/\n          4284 | /* GETSQLDALONGLEN(daptr,n) returns the data length of the nth       */\n          4285 | /* entry in the sqlda pointed to by daptr. Use this only if the      */\n          4286 | /* sqlda was doubled or tripled and the nth SQLVAR entry has a       */\n          4287 | /* LOB datatype.                                                     */\n          4288 | /*********************************************************************/\n          4289 | #define GETSQLDALONGLEN(daptr,n)    (    \u00d6\n          4290 |     (long) (((struct sqlvar2 *) &((daptr)->sqlvar??((n) + \u00d6\n          4291 |            ((daptr)->sqld)??))) \u00d6\n          4292 |             ->len.sqllonglen))\n          4293 |  /**/\n          4294 | /*********************************************************************/\n          4295 | /* SETSQLDALONGLEN(daptr,n,len) sets the sqllonglen field of the     */\n          4296 | /* sqlda pointed to by daptr to len for the nth entry. Use this only */\n          4297 | /* if the sqlda was doubled or tripled and the nth SQLVAR entry has  */\n          4298 | /* a LOB datatype.                                                   */\n          4299 | /*********************************************************************/\n          4300 | #define SETSQLDALONGLEN(daptr,n,length)  \u00e4 \u00d6\n          4301 |     struct sqlvar2     *var2ptr; \u00d6\n          4302 |     var2ptr = (struct sqlvar2 *) \u00d6\n          4303 |         &((daptr)->sqlvar??((n) + ((daptr)->sqld)??)); \u00d6\n          4304 |     var2ptr->len.sqllonglen  =  (long ) (length); \u00d6\n          4305 |     \u00fc\n          4306 |  /**/\n          4307 | /*********************************************************************/\n          4308 | /* GETSQLDALENPTR(daptr,n) returns a pointer to the data length for  */\n          4309 | /* the nth entry in the sqlda pointed to by daptr. Unlike the inline */\n          4310 | /* value (union sql8bytelen len), which is 8 bytes, the sqldatalen   */\n          4311 | /* pointer field returns a pointer to a long (4 byte) integer.       */\n          4312 | /* If the SQLDATALEN pointer is zero, a NULL pointer is be returned. */\n          4313 | /*                                                                   */\n          4314 | /* NOTE: Use this only if the sqlda has been doubled or tripled.     */\n          4315 | /*********************************************************************/\n          4316 | #define GETSQLDALENPTR(daptr,n) (   \u00d6\n          4317 |     (((struct sqlvar2 *) &(daptr)->sqlvar??((n) + (daptr)->sqld??)) \u00d6\n          4318 |                            ->sqldatalen == NULL) ? \u00d6\n          4319 |     ((long *) NULL ) : \u00d6\n          4320 |     ((long *) ((struct sqlvar2 *) \u00d6\n          4321 |         &(daptr)->sqlvar??((n) + (daptr)->sqld??)) \u00d6\n          4322 |                                     ->sqldatalen ) )\n          4323 |  /**/\n          4324 | /*********************************************************************/\n          4325 | /* SETSQLDALENPTR(daptr,n,ptr) sets a pointer to the data length for */\n          4326 | /* the nth entry in the sqlda pointed to by daptr.                   */\n          4327 | /* Use this only if the sqlda has been doubled or tripled.           */\n          4328 | /*********************************************************************/\n          4329 | #define SETSQLDALENPTR(daptr,n,ptr)  \u00e4  \u00d6\n          4330 |     struct sqlvar2 *var2ptr;    \u00d6\n          4331 |     var2ptr = (struct sqlvar2 *) \u00d6\n          4332 |         &((daptr)->sqlvar??((n) + ((daptr)->sqld)??)); \u00d6\n          4333 |     var2ptr->sqldatalen  = (char *) ptr; \u00d6\n          4334 |     \u00fc\n          4335 |  /**/\n          4336 | #define SQLDASIZE(n) \u00d6\n          4337 |    ( sizeof(struct sqlda) + ((n)-1) * sizeof(struct sqlvar) )\n          4338 | #endif /* SQLDASIZE */\n          4339 |\n          4340 | /***$$$\n          4341 | EXEC SQL INCLUDE SQLCA\n          4342 | $$$***/\n          4343 | #ifndef SQLCODE\n          4344 | struct sqlca\n          4345 |   \u00e4 unsigned  char     sqlcaid??(8??);\n          4346 |               long     sqlcabc;\n          4347 |               long     sqlcode;\n          4348 |               short    sqlerrml;\n          4349 |     unsigned  char     sqlerrmc??(70??);\n          4350 |     unsigned  char     sqlerrp??(8??);\n          4351 |               long     sqlerrd??(6??);\n          4352 |     unsigned  char     sqlwarn??(11??);\n          4353 |     unsigned  char     sqlstate??(5??);\n          4354 |             \u00fc ;\n          4355 | #define SQLCODE  sqlca.sqlcode\n          4356 | #define SQLWARN0 sqlca.sqlwarn??(0??)\n          4357 | #define SQLWARN1 sqlca.sqlwarn??(1??)\n          4358 | #define SQLWARN2 sqlca.sqlwarn??(2??)\n          4359 | #define SQLWARN3 sqlca.sqlwarn??(3??)\n          4360 | #define SQLWARN4 sqlca.sqlwarn??(4??)\n          4361 | #define SQLWARN5 sqlca.sqlwarn??(5??)\n          4362 | #define SQLWARN6 sqlca.sqlwarn??(6??)\n          4363 | #define SQLWARN7 sqlca.sqlwarn??(7??)\n          4364 | #define SQLWARN8 sqlca.sqlwarn??(8??)\n          4365 | #define SQLWARN9 sqlca.sqlwarn??(9??)\n          4366 | #define SQLWARNA sqlca.sqlwarn??(10??)\n          4367 | #define SQLSTATE sqlca.sqlstate\n          4368 | #endif\n          4369 | struct sqlca sqlca;\n          4370 |\n          4371 | static bool _useDB2()\n          4372 | \u00e4\n          4373 | if (getenv(KEYWORD_USEDB2) && strcasecmp(getenv(KEYWORD_USEDB2),\"NO\") =\u00d6\n          4374 | = 0)\n          4375 | \u00e4\n          4376 |     char w\u00c4128\u00dc;\n          4377 |     SQLINTERFACE::fileDB2 = fopen(genOpenName(KEYWORD_USEDB2_FILE,w),\"w\u00d6\n          4378 | \");\n          4379 |     Msg(10000+1003)<<eol;\n          4380 |     return false;\n          4381 | \u00fc\n          4382 | else\n          4383 |     return true;\n          4384 | \u00fc\n          4385 |\n          4386 | char *      SQLINTERFACE::plan        = strdup(getenv(KEYWORD_DB_PLAN));\n          4387 | char *      SQLINTERFACE::subsystem   = strdup(getenv(KEYWORD_DB_SUBSYS\u00d6\n          4388 | ));\n          4389 | char *      SQLINTERFACE::dSql        = initDynamicSql();\n          4390 | mCHAIN      DssJob::dssJobs;\n          4391 | mCHAIN      SQLINTERFACE::tasks;\n          4392 | bool        SQLINTERFACE::useDB2     = _useDB2();\n          4393 | FILE *      SQLINTERFACE::fileDB2    =  0;\n          4394 |\n          4395 |\n          4396 |\n          4397 | ERROR_MESSAGE * SQLINTERFACE::error_message = new ERROR_MESSAGE();\n          4398 | SQLINTERFACE::SQLINTERFACE():mERROR()\n          4399 | \u00e4\n          4400 |   tryToConnect();\n          4401 | \u00fc\n          4402 |\n          4403 | void SQLINTERFACE::tryToConnect()\n          4404 | \u00e4\n          4405 |\n          4406 |\n          4407 |   char t\u00c412\u00dc;\n          4408 |   sprintf(t,\"%p\",getTCB());\n          4409 |   if (tasks.search(t) == 0)\n          4410 |       tasks.addlast(new TcbARCHSQL(t,connectDB()));\n          4411 |       JOBENV::DEBUG(1,t);\n          4412 | \u00fc\n          4413 |\n          4414 | ARCHSQL * SQLINTERFACE::connectDB()\n          4415 | \u00e4\n          4416 |       ARCHSQL * archsql = new ARCHSQL();\n          4417 |       if (useDB2)\n          4418 |       \u00e4\n          4419 |       if (subsystem==0) return 0;\n          4420 |       ARCHSQL * archsql = new ARCHSQL();\n          4421 |       archsql->setSubSystem(subsystem);\n          4422 |       char _plan\u00c4\u00dc = \"        \";\n          4423 |       memcpy(_plan,plan,strlen(plan));\n          4424 |       archsql->setPlan(_plan);\n          4425 |       if (| archsql->call(Connect))\n          4426 |        markerror();\n          4427 |       \u00fc\n          4428 |       else\n          4429 |       ARCHSQL * archsql = (ARCHSQL*)1;\n          4430 |       error_message->error_len = short(data_dim*data_len);\n          4431 |       if (useDB2)\n          4432 |       Msg(10000+1000)<<subsystem<<plan<<tHEX(int(getTCB()))<<eol;\n          4433 |       return archsql;\n          4434 | \u00fc\n          4435 |\n          4436 | SQLINTERFACE::\u00dfSQLINTERFACE()\n          4437 | \u00e4\n          4438 | \u00fc\n          4439 |\n          4440 | void SQLINTERFACE::diag(char *t)\n          4441 | \u00e4\n          4442 |  if (useDB2)\n          4443 |  \u00e4\n          4444 |  Msg(10000+1001)<<t<<SQLCODE<<(char *)(sqlca.sqlerrmc)<<eol;\n          4445 |  int rc = DSNTIAR(&sqlca,error_message,&data_len);\n          4446 |  if ( rc )\n          4447 |   Msg(10000+9707)<<long(rc)<<eol;\n          4448 |  else\n          4449 |  \u00e4\n          4450 |    for(int i = 0;i<data_dim;i++)\n          4451 |    if (| mvsSTRING(error_message->error_text\u00c4i\u00dc,data_len).isEmpty())\n          4452 |       Msg(10000+9708)<<mvsSTRING(error_message->error_text\u00c4i\u00dc,data_len)\u00d6\n          4453 | <<eol;\n          4454 |  \u00fc\n          4455 |  \u00fc\n          4456 |\n          4457 |  Msg(100000+9709)<<\"diag\"<<eol;\n          4458 | \u00fc\n          4459 |\n          4460 | int SQLINTERFACE::commit()\n          4461 | \u00e4\n          4462 | tryToConnect();\n          4463 | if (useDB2)\n          4464 | \u00e4\n          4465 |\n          4466 | /***$$$\n          4467 |   EXEC SQL COMMIT\n          4468 | $$$***/\n          4469 |   \u00e4\n          4470 |   SQLPLIST SQLPLIST1 =\n          4471 |   \u00e464, 4, 150,\n          4472 |    \u00e4'\u00d6x44','\u00d6x53','\u00d6x53','\u00d6x44','\u00d6x42','\u00d6x20','\u00d6x20','\u00d6x20'\u00fc,\n          4473 |    0, 0, 0, 0, 0, 0, 0, 0, 1208, 310, 4239, 0, 0, 0, 0, 0\u00fc;\n          4474 |   SQLELTS_PTR SQLELTS_PTR1;\n          4475 |   SQLPLIST1.SQLCODEP = (char *) &sqlca;\n          4476 |   SQLPLIST1.SQLTIMES??( 0 ??) = 0x1951;\n          4477 |   SQLPLIST1.SQLTIMES??( 1 ??) = 0x8331;\n          4478 |   SQLPLIST1.SQLTIMES??( 2 ??) = 0x0BFC;\n          4479 |   SQLPLIST1.SQLTIMES??( 3 ??) = 0x4B14;\n          4480 |   DSNHLI ( (unsigned int * ) &SQLPLIST1);\n          4481 |   \u00fc\n          4482 |\n          4483 | \u00fc\n          4484 |   return 1;\n          4485 | \u00fc\n          4486 |\n          4487 | void SQLINTERFACE::Error(char * t,Error_Action a)\n          4488 | \u00e4\n          4489 |\n          4490 |\n          4491 |  Msg(100000+9709)<<\"error\"<<eol;\n          4492 |\n          4493 | \u00fc\n          4494 |\n          4495 | static char * initDynamicSql()\n          4496 | \u00e4\n          4497 |   char b\u00c432000\u00dc;\n          4498 |   char _genFileName\u00c41024\u00dc;\n          4499 |   size_t o = 0;\n          4500 |   FILE * sqlFile = 0;\n          4501 |   if (SQLINTERFACE::useDB2 && access(KEYWORD_SQLFILE,0x04)==0)\n          4502 |   sqlFile=  fopen(genOpenName(KEYWORD_SQLFILE,_genFileName),\"r\");\n          4503 |   if (sqlFile)\n          4504 |   while(fgets(b+o,sizeof(b)-o,sqlFile))\n          4505 |   \u00e4\n          4506 |     o = strchr(b+o,'\u00d6n')-b;\n          4507 |     if (o>0) *(b+o) = 0;\n          4508 |       else\n          4509 |     break;\n          4510 |   \u00fc\n          4511 |   if (sqlFile)\n          4512 |     fclose(sqlFile);\n          4513 |   else\n          4514 |     strcpy(b,fullQuery);\n          4515 |   JOBENV::DEBUG(1,(char *)b);\n          4516 |   char * rb = new char\u00c4strlen(b)+1\u00dc;\n          4517 |   strcpy(rb,b);\n          4518 |   return (rb);\n          4519 | \u00fc\n          4520 |\n          4521 |\n          4522 |\n          4523 |\n          4524 |\n          4525 | DssJob::DssJob():\n          4526 | SQLINTERFACE(),\n          4527 | chainE(\"\"),\n          4528 | mCHAIN(),\n          4529 | CHAINITER(this)\n          4530 | \u00e4\n          4531 | char _genFileName\u00c41024\u00dc;\n          4532 | FILE * f = fopen(genOpenName(KEYWORD_DIRECT,_genFileName),\"r\");\n          4533 | if (f==0)\n          4534 | \u00e4\n          4535 |    init();\n          4536 | \u00fc\n          4537 | else\n          4538 | \t\t fclose(f);\n          4539 |\n          4540 | \u00fc\n          4541 |\n          4542 | DssJob::DssJob(const char * d):\n          4543 | SQLINTERFACE(),\n          4544 | chainE(\"\"),\n          4545 | mCHAIN(),\n          4546 | CHAINITER(this)\n          4547 | \u00e4\n          4548 | char _genFileName\u00c41024\u00dc;\n          4549 | FILE * f = fopen(genOpenName(KEYWORD_DIRECT,_genFileName),\"r\");\n          4550 | if (f==0)\n          4551 | \u00e4\n          4552 |    init();\n          4553 | \u00fc\n          4554 | else\n          4555 | \t fclose(f);\n          4556 |  strcpy(dataset.arr,d);\n          4557 |  dataset.len = strlen(d);\n          4558 | \u00fc\n          4559 | DssJob::DssJob(TIMESTAMP& ts):\n          4560 | SQLINTERFACE(),\n          4561 | chainE(ts.arr),\n          4562 | mCHAIN(),\n          4563 | CHAINITER(this)\n          4564 | \u00e4\n          4565 |  init();\n          4566 |  memcpy(t.arr,ts.arr,ts.len);\n          4567 |  t.len = ts.len;\n          4568 |  if (useDB2)\n          4569 |  \u00e4\n          4570 |\n          4571 | /***$$$\n          4572 |  EXEC SQL WHENEVER SQLERROR GOTO SQLERROR\n          4573 | $$$***/\n          4574 |\n          4575 |\n          4576 | /***$$$\n          4577 |  EXEC SQL SELECT KEY, JOBNAME, JOBNUMBER, DATASET\n          4578 |  INTO\n          4579 |  :timestamp,\n          4580 |  :jobName,\n          4581 |  :jobNumber,\n          4582 |  :dataset\n          4583 |  FROM DSSJOBS WHERE KEY = :t\n          4584 | $$$***/\n          4585 |   \u00e4\n          4586 |   SQLPLIST SQLPLIST3 =\n          4587 |   \u00e464, 17412, 30,\n          4588 |    \u00e4'\u00d6x44','\u00d6x53','\u00d6x53','\u00d6x44','\u00d6x42','\u00d6x20','\u00d6x20','\u00d6x20'\u00fc,\n          4589 |    0, 0, 0, 0, 2, 0, 0, 0, 1208, 231, 4328, 0, 0, 0, 0, 0\u00fc;\n          4590 |   SQLELTS_PTR SQLELTS_PTR3;\n          4591 |   struct\n          4592 |      \u00e4 char   SQLDAID??(8??);\n          4593 |        long   SQLDABC;\n          4594 |        short  SQLN;\n          4595 |        short  SQLD;\n          4596 |        char  SQLPVELT??( (sizeof(SQLELTS) * 1) ??);\n          4597 |      \u00fc SQLPVARS3;\n          4598 |   struct\n          4599 |      \u00e4 char   SQLDAID??(8??);\n          4600 |        long   SQLDABC;\n          4601 |        short  SQLN;\n          4602 |        short  SQLD;\n          4603 |        char  SQLAVELT??( (sizeof(SQLELTS) * 4) ??);\n          4604 |      \u00fc SQLAVARS3;\n          4605 |   SQLELTS_PTR3 = (SQLELTS *) &SQLPVARS3.SQLPVELT;\n          4606 |   SQLELTS_PTR3->SQLTYPE = 448;\n          4607 |   SQLELTS_PTR3->SQLLEN  = 28;\n          4608 |   SQLELTS_PTR3->SQLADDR = (char *)\n          4609 |   &( t );\n          4610 |   SQLELTS_PTR3->SQLIND  = NULL;\n          4611 |   SQLELTS_PTR3->SQLNAMLEN  = 0;\n          4612 |   strcpy(SQLPVARS3.SQLDAID, \"\u00d6xE2\u00d6xD8\u00d6xD3\u00d6xC4\u00d6xC1\u00d6x40\u00d6x40\u00d6x08\");\n          4613 |   SQLPVARS3.SQLDABC = 60;\n          4614 |   SQLPVARS3.SQLN    = 1;\n          4615 |   SQLPVARS3.SQLD    = 1;\n          4616 |   SQLPLIST3.SQLVPARM = (char *) &SQLPVARS3.SQLDAID;\n          4617 |   SQLELTS_PTR3 = (SQLELTS *) &SQLAVARS3.SQLAVELT;\n          4618 |   SQLELTS_PTR3->SQLTYPE = 448;\n          4619 |   SQLELTS_PTR3->SQLLEN  = 28;\n          4620 |   SQLELTS_PTR3->SQLADDR = (char *)\n          4621 |   &( timestamp );\n          4622 |   SQLELTS_PTR3->SQLIND  = NULL;\n          4623 |   SQLELTS_PTR3->SQLNAMLEN  = 0;\n          4624 |   SQLELTS_PTR3 = SQLELTS_PTR3 + 1;\n          4625 |   SQLELTS_PTR3->SQLTYPE = 448;\n          4626 |   SQLELTS_PTR3->SQLLEN  = 9;\n          4627 |   SQLELTS_PTR3->SQLADDR = (char *)\n          4628 |   &( jobName );\n          4629 |   SQLELTS_PTR3->SQLIND  = NULL;\n          4630 |   SQLELTS_PTR3->SQLNAMLEN  = 0;\n          4631 |   SQLELTS_PTR3 = SQLELTS_PTR3 + 1;\n          4632 |   SQLELTS_PTR3->SQLTYPE = 448;\n          4633 |   SQLELTS_PTR3->SQLLEN  = 9;\n          4634 |   SQLELTS_PTR3->SQLADDR = (char *)\n          4635 |   &( jobNumber );\n          4636 |   SQLELTS_PTR3->SQLIND  = NULL;\n          4637 |   SQLELTS_PTR3->SQLNAMLEN  = 0;\n          4638 |   SQLELTS_PTR3 = SQLELTS_PTR3 + 1;\n          4639 |   SQLELTS_PTR3->SQLTYPE = 448;\n          4640 |   SQLELTS_PTR3->SQLLEN  = 255;\n          4641 |   SQLELTS_PTR3->SQLADDR = (char *)\n          4642 |   &( dataset );\n          4643 |   SQLELTS_PTR3->SQLIND  = NULL;\n          4644 |   SQLELTS_PTR3->SQLNAMLEN  = 0;\n          4645 |   strcpy(SQLAVARS3.SQLDAID, \"\u00d6xE2\u00d6xD8\u00d6xD3\u00d6xC4\u00d6xC1\u00d6x40\u00d6x40\u00d6x08\");\n          4646 |   SQLAVARS3.SQLDABC = 192;\n          4647 |   SQLAVARS3.SQLN    = 4;\n          4648 |   SQLAVARS3.SQLD    = 4;\n          4649 |   SQLPLIST3.SQLAPARM = (char *) &SQLAVARS3.SQLDAID;\n          4650 |   SQLPLIST3.SQLCODEP = (char *) &sqlca;\n          4651 |   SQLPLIST3.SQLTIMES??( 0 ??) = 0x1951;\n          4652 |   SQLPLIST3.SQLTIMES??( 1 ??) = 0x8331;\n          4653 |   SQLPLIST3.SQLTIMES??( 2 ??) = 0x0BFC;\n          4654 |   SQLPLIST3.SQLTIMES??( 3 ??) = 0x4B14;\n          4655 |   DSNHLI ( (unsigned int * ) &SQLPLIST3);\n          4656 |   \u00fc\n          4657 |   if (SQLCODE < 0) goto  SQLERROR;\n          4658 |\n          4659 |  if (SQLCODE == 100)\n          4660 |     markerror();\n          4661 |  \u00fc\n          4662 |  char * c;\n          4663 |  dataset.arr\u00c4sizeof(dataset.arr)-1\u00dc = 0;\n          4664 |  if ((c = strchr(dataset.arr,' ')))\n          4665 |      *c = 0;\n          4666 |  return;\n          4667 | SQLERROR:\n          4668 |   diag(\"SELECT\");\n          4669 |   markerror();\n          4670 | \u00fc\n          4671 |\n          4672 |\n          4673 | DssJob::\u00dfDssJob()\n          4674 | \u00e4\n          4675 | \u00fc\n          4676 |\n          4677 | void DssJob::init()\n          4678 | \u00e4\n          4679 |    memset(&timestamp,0,sizeof(timestamp));\n          4680 |    \u00e4 jobName.len = short((((sizeof(jobName.arr))>(strlen((char *)jobEnv\u00d6\n          4681 | ->jobName)))?(strlen((char *)jobEnv->jobName)):(sizeof(jobName.arr))));\u00d6\n          4682 |  strncpy(jobName.arr,(char *)jobEnv->jobName,jobName.len); \u00fc;\n          4683 |    \u00e4 jobNumber.len = short((((sizeof(jobNumber.arr))>(strlen((char *)jo\u00d6\n          4684 | bEnv->jobId)))?(strlen((char *)jobEnv->jobId)):(sizeof(jobNumber.arr)))\u00d6\n          4685 | ); strncpy(jobNumber.arr,(char *)jobEnv->jobId,jobNumber.len); \u00fc;\n          4686 |    \u00e4 program.len = short((((sizeof(program.arr))>(strlen((char *)jobEnv\u00d6\n          4687 | ->program)))?(strlen((char *)jobEnv->program)):(sizeof(program.arr))));\u00d6\n          4688 |  strncpy(program.arr,(char *)jobEnv->program,program.len); \u00fc;\n          4689 |    datasetcount = 0;\n          4690 |    memset(&joblog,0,sizeof(joblog));\n          4691 |    tryToConnect();\n          4692 |    if (useDB2)\n          4693 |    \u00e4\n          4694 |\n          4695 | /***$$$\n          4696 |    EXEC SQL SET :timestamp = CURRENT TIMESTAMP\n          4697 | $$$***/\n          4698 |   \u00e4\n          4699 |   SQLPLIST SQLPLIST4 =\n          4700 |   \u00e464, 1028, 30,\n          4701 |    \u00e4'\u00d6x44','\u00d6x53','\u00d6x53','\u00d6x44','\u00d6x42','\u00d6x20','\u00d6x20','\u00d6x20'\u00fc,\n          4702 |    0, 0, 0, 0, 3, 0, 0, 0, 1208, 746, 4370, 0, 0, 0, 0, 0\u00fc;\n          4703 |   SQLELTS_PTR SQLELTS_PTR4;\n          4704 |   struct\n          4705 |      \u00e4 char   SQLDAID??(8??);\n          4706 |        long   SQLDABC;\n          4707 |        short  SQLN;\n          4708 |        short  SQLD;\n          4709 |        char  SQLAVELT??( (sizeof(SQLELTS) * 1) ??);\n          4710 |      \u00fc SQLAVARS4;\n          4711 |   SQLELTS_PTR4 = (SQLELTS *) &SQLAVARS4.SQLAVELT;\n          4712 |   SQLELTS_PTR4->SQLTYPE = 448;\n          4713 |   SQLELTS_PTR4->SQLLEN  = 28;\n          4714 |   SQLELTS_PTR4->SQLADDR = (char *)\n          4715 |   &( timestamp );\n          4716 |   SQLELTS_PTR4->SQLIND  = NULL;\n          4717 |   SQLELTS_PTR4->SQLNAMLEN  = 0;\n          4718 |   strcpy(SQLAVARS4.SQLDAID, \"\u00d6xE2\u00d6xD8\u00d6xD3\u00d6xC4\u00d6xC1\u00d6x40\u00d6x40\u00d6x08\");\n          4719 |   SQLAVARS4.SQLDABC = 60;\n          4720 |   SQLAVARS4.SQLN    = 1;\n          4721 |   SQLAVARS4.SQLD    = 1;\n          4722 |   SQLPLIST4.SQLAPARM = (char *) &SQLAVARS4.SQLDAID;\n          4723 |   SQLPLIST4.SQLCODEP = (char *) &sqlca;\n          4724 |   SQLPLIST4.SQLTIMES??( 0 ??) = 0x1951;\n          4725 |   SQLPLIST4.SQLTIMES??( 1 ??) = 0x8331;\n          4726 |   SQLPLIST4.SQLTIMES??( 2 ??) = 0x0BFC;\n          4727 |   SQLPLIST4.SQLTIMES??( 3 ??) = 0x4B14;\n          4728 |   DSNHLI ( (unsigned int * ) &SQLPLIST4);\n          4729 |   \u00fc\n          4730 |   if (SQLCODE < 0) goto  SQLERROR;\n          4731 |\n          4732 |    SQLERROR:\n          4733 |    if (SQLCODE) diag(\"SET\");\n          4734 |    \u00fc\n          4735 |    else\n          4736 |    \u00e4\n          4737 |    time_t temp;\n          4738 |    struct tm *timeptr;\n          4739 |    temp = time(0);\n          4740 |    timeptr = localtime(&temp);\n          4741 |    timestamp.len = strftime(timestamp.arr,sizeof(timestamp.arr)-1,\"%Y-%\u00d6\n          4742 | m-%d-%H.%M.%S\", timeptr);\n          4743 |    \u00fc\n          4744 |    mvsSTRING _dataset;\n          4745 |    _dataset = mvsSTRING(getenv(KEYWORD_PREFIX)) + \"/\" +\n          4746 |              jobEnv->jobName + jobEnv->jobId +\n          4747 |              mvsSTRING(timestamp.arr,timestamp.len);\n          4748 |    dataset.len = short(_dataset.lengthOf());\n          4749 |    JOBENV::DEBUG(1,(char *)_dataset);\n          4750 |    memcpy(dataset.arr,(char *)_dataset,dataset.len+1);\n          4751 | \u00fc\n          4752 |\n          4753 | int DssJob::insert()\n          4754 | \u00e4\n          4755 |    CHAINITER::reset();\n          4756 |    DssDataset * ds;\n          4757 |    DssDataset * dp;\n          4758 |    tryToConnect();\n          4759 |    if (useDB2)\n          4760 |    \u00e4\n          4761 |\n          4762 | /***$$$\n          4763 |    EXEC SQL WHENEVER SQLERROR GOTO SQLERROR\n          4764 | $$$***/\n          4765 |\n          4766 |\n          4767 | /***$$$\n          4768 |    EXEC SQL INSERT INTO DSSJOBS\n          4769 |     VALUES(:timestamp,\n          4770 |            :jobName, :jobNumber, :program, :dataset, :joblog)\n          4771 | $$$***/\n          4772 |   \u00e4\n          4773 |   SQLPLIST SQLPLIST6 =\n          4774 |   \u00e464, 16388, 30,\n          4775 |    \u00e4'\u00d6x44','\u00d6x53','\u00d6x53','\u00d6x44','\u00d6x42','\u00d6x20','\u00d6x20','\u00d6x20'\u00fc,\n          4776 |    0, 0, 0, 0, 4, 0, 0, 0, 1208, 232, 4401, 0, 0, 0, 0, 0\u00fc;\n          4777 |   SQLELTS_PTR SQLELTS_PTR6;\n          4778 |   struct\n          4779 |      \u00e4 char   SQLDAID??(8??);\n          4780 |        long   SQLDABC;\n          4781 |        short  SQLN;\n          4782 |        short  SQLD;\n          4783 |        char  SQLPVELT??( (sizeof(SQLELTS) * 6) ??);\n          4784 |      \u00fc SQLPVARS6;\n          4785 |   SQLELTS_PTR6 = (SQLELTS *) &SQLPVARS6.SQLPVELT;\n          4786 |   SQLELTS_PTR6->SQLTYPE = 448;\n          4787 |   SQLELTS_PTR6->SQLLEN  = 28;\n          4788 |   SQLELTS_PTR6->SQLADDR = (char *)\n          4789 |   &( timestamp );\n          4790 |   SQLELTS_PTR6->SQLIND  = NULL;\n          4791 |   SQLELTS_PTR6->SQLNAMLEN  = 0;\n          4792 |   SQLELTS_PTR6 = SQLELTS_PTR6 + 1;\n          4793 |   SQLELTS_PTR6->SQLTYPE = 448;\n          4794 |   SQLELTS_PTR6->SQLLEN  = 9;\n          4795 |   SQLELTS_PTR6->SQLADDR = (char *)\n          4796 |   &( jobName );\n          4797 |   SQLELTS_PTR6->SQLIND  = NULL;\n          4798 |   SQLELTS_PTR6->SQLNAMLEN  = 0;\n          4799 |   SQLELTS_PTR6 = SQLELTS_PTR6 + 1;\n          4800 |   SQLELTS_PTR6->SQLTYPE = 448;\n          4801 |   SQLELTS_PTR6->SQLLEN  = 9;\n          4802 |   SQLELTS_PTR6->SQLADDR = (char *)\n          4803 |   &( jobNumber );\n          4804 |   SQLELTS_PTR6->SQLIND  = NULL;\n          4805 |   SQLELTS_PTR6->SQLNAMLEN  = 0;\n          4806 |   SQLELTS_PTR6 = SQLELTS_PTR6 + 1;\n          4807 |   SQLELTS_PTR6->SQLTYPE = 448;\n          4808 |   SQLELTS_PTR6->SQLLEN  = 9;\n          4809 |   SQLELTS_PTR6->SQLADDR = (char *)\n          4810 |   &( program );\n          4811 |   SQLELTS_PTR6->SQLIND  = NULL;\n          4812 |   SQLELTS_PTR6->SQLNAMLEN  = 0;\n          4813 |   SQLELTS_PTR6 = SQLELTS_PTR6 + 1;\n          4814 |   SQLELTS_PTR6->SQLTYPE = 448;\n          4815 |   SQLELTS_PTR6->SQLLEN  = 255;\n          4816 |   SQLELTS_PTR6->SQLADDR = (char *)\n          4817 |   &( dataset );\n          4818 |   SQLELTS_PTR6->SQLIND  = NULL;\n          4819 |   SQLELTS_PTR6->SQLNAMLEN  = 0;\n          4820 |   SQLELTS_PTR6 = SQLELTS_PTR6 + 1;\n          4821 |   SQLELTS_PTR6->SQLTYPE = 448;\n          4822 |   SQLELTS_PTR6->SQLLEN  = 30000;\n          4823 |   SQLELTS_PTR6->SQLADDR = (char *)\n          4824 |   &( joblog );\n          4825 |   SQLELTS_PTR6->SQLIND  = NULL;\n          4826 |   SQLELTS_PTR6->SQLNAMLEN  = 0;\n          4827 |   strcpy(SQLPVARS6.SQLDAID, \"\u00d6xE2\u00d6xD8\u00d6xD3\u00d6xC4\u00d6xC1\u00d6x40\u00d6x40\u00d6x08\");\n          4828 |   SQLPVARS6.SQLDABC = 280;\n          4829 |   SQLPVARS6.SQLN    = 6;\n          4830 |   SQLPVARS6.SQLD    = 6;\n          4831 |   SQLPLIST6.SQLVPARM = (char *) &SQLPVARS6.SQLDAID;\n          4832 |   SQLPLIST6.SQLCODEP = (char *) &sqlca;\n          4833 |   SQLPLIST6.SQLTIMES??( 0 ??) = 0x1951;\n          4834 |   SQLPLIST6.SQLTIMES??( 1 ??) = 0x8331;\n          4835 |   SQLPLIST6.SQLTIMES??( 2 ??) = 0x0BFC;\n          4836 |   SQLPLIST6.SQLTIMES??( 3 ??) = 0x4B14;\n          4837 |   DSNHLI ( (unsigned int * ) &SQLPLIST6);\n          4838 |   \u00fc\n          4839 |   if (SQLCODE < 0) goto  SQLERROR;\n          4840 |\n          4841 |    \u00fc\n          4842 |    else\n          4843 |    \u00e4\n          4844 |      if (fileDB2)\n          4845 |      fprintf(fileDB2,\"insert into DSSJOBS:\u00d6n\");\n          4846 |      if (fileDB2) fprintf(fileDB2,\" %s:%*.*s\u00d6n\",\"jobName\",jobName.len,j\u00d6\n          4847 | obName.len,jobName.arr);;\n          4848 |      if (fileDB2) fprintf(fileDB2,\" %s:%*.*s\u00d6n\",\"jobNumber\",jobNumber.l\u00d6\n          4849 | en,jobNumber.len,jobNumber.arr);;\n          4850 |      if (fileDB2) fprintf(fileDB2,\" %s:%*.*s\u00d6n\",\"program\",program.len,p\u00d6\n          4851 | rogram.len,program.arr);;\n          4852 |      if (fileDB2) fprintf(fileDB2,\" %s:%*.*s\u00d6n\",\"dataset\",dataset.len,d\u00d6\n          4853 | ataset.len,dataset.arr);;\n          4854 |      if (fileDB2) fprintf(fileDB2,\" %s:%*.*s\u00d6n\",\"joblog\",joblog.len,job\u00d6\n          4855 | log.len,joblog.arr);;\n          4856 |     \u00fc\n          4857 |\n          4858 |    ds = (DssDataset *)CHAINITER::next();\n          4859 |    while(ds)\n          4860 |    \u00e4\n          4861 |     if(| ds->insert())\n          4862 |      Error(Msg(10000+1002)<<ds->dataset.arr<<eol,Abort);\n          4863 |      dp = ds;\n          4864 |      ds = (DssDataset *)CHAINITER::next();\n          4865 |      mCHAIN::del(dp);\n          4866 |      delete dp;\n          4867 |    \u00fc\n          4868 |   commit();\n          4869 |   return 1;\n          4870 | SQLERROR:\n          4871 |   diag(\"INSERT INTO DSSJOBS\");\n          4872 |   markerror();\n          4873 |   return 0;\n          4874 | \u00fc\n          4875 |\n          4876 | static char today\u00c412\u00dc;\n          4877 |\n          4878 | int DssJob::query(mCHAIN *m,char * date)\n          4879 | \u00e4\n          4880 |    if (useDB2==false)\n          4881 | \treturn 0;\n          4882 |    CHAINITER iter(*m);\n          4883 |    mvsSTRING like(\" \");\n          4884 |    chainE * mask = iter.next();\n          4885 |    if ( date == 0 )\n          4886 |    \u00e4\n          4887 |      date = today;\n          4888 |      formatTime(today,sizeof(today),\"%d.%m.%Y\");\n          4889 |      JOBENV::DEBUG(1,(char *)date);\n          4890 |    \u00fc\n          4891 |    int likeFlag = 0;\n          4892 |    while(mask)\n          4893 |    \u00e4\n          4894 |       int i, j;\n          4895 |       for(i=0, j=0;mask->chainEid\u00c4i\u00dc;i++)\n          4896 |       \u00e4\n          4897 |          if(mask->chainEid\u00c4i\u00dc |= '*')\n          4898 |             mask->chainEid\u00c4j++\u00dc = mask->chainEid\u00c4i\u00dc;\n          4899 |          else if (mask->chainEid\u00c4i+1\u00dc |= '*')\n          4900 |          \u00e4\n          4901 |             mask->chainEid\u00c4j++\u00dc = '%';\n          4902 |             likeFlag = 1;\n          4903 |          \u00fc\n          4904 |        \u00fc\n          4905 |        if (mask->chainEid\u00c4j-1\u00dc |= '%')\n          4906 |            mask->chainEid\u00c4j++\u00dc = '%';\n          4907 |       mask->chainEid\u00c4j\u00dc = 0;\n          4908 |       like = like + \"A.DATASET LIKE '\"+mvsSTRING(mask->chainEid)+\"' \";\n          4909 |       if (mask->next)\n          4910 |          like = like + \" OR \";\n          4911 |       mask = iter.next();\n          4912 |    \u00fc\n          4913 |    JOBENV::DEBUG(1,(char *)like);\n          4914 |      \u00e4\n          4915 |      char * p\u00c48\u00dc;\n          4916 |      Msg(10000+122)<<dSql<<eol;\n          4917 |      size_t l = strlen(dSql);\n          4918 |      int j = 0;\n          4919 |      for(int i = 0;i<l&&j<8;i++)\n          4920 |        if (dSql\u00c4i\u00dc=='%' && dSql\u00c4i+2\u00dc == '%')\n          4921 |          \u00e4\n          4922 |          switch (dSql\u00c4i+1\u00dc)\n          4923 |            \u00e4\n          4924 |            case 'M':\n          4925 |            case 'm': p\u00c4j++\u00dc = like;\n          4926 |              break;\n          4927 |            case 'D':\n          4928 |            case 'd': p\u00c4j++\u00dc = date;\n          4929 |              break;\n          4930 |            default :\n          4931 |              JOBENV::Error(Msg(10000+121)<<dSql\u00c4i\u00dc<<eol,JOBENV::Abort);\n          4932 |            \u00fc\n          4933 |            dSql\u00c4i+1\u00dc = 's';\n          4934 |          strcpy(dSql+i+2,dSql+i+3);\n          4935 |          l -= 2;\n          4936 |          \u00fc\n          4937 |        switch(j)\n          4938 |          \u00e4\n          4939 |          default:\n          4940 |          case 0:\n          4941 |          strcpy(dynamicSql.arr,dSql);\n          4942 |          break;\n          4943 |          case 1:\n          4944 |          sprintf(dynamicSql.arr,dSql,p\u00c40\u00dc);\n          4945 |          break;\n          4946 |          case 2:\n          4947 |          sprintf(dynamicSql.arr,dSql,p\u00c40\u00dc,p\u00c41\u00dc);\n          4948 |          break;\n          4949 |          case 3:\n          4950 |          sprintf(dynamicSql.arr,dSql,p\u00c40\u00dc,p\u00c41\u00dc,p\u00c42\u00dc);\n          4951 |          break;\n          4952 |          case 4:\n          4953 |          sprintf(dynamicSql.arr,dSql,p\u00c40\u00dc,p\u00c41\u00dc,p\u00c42\u00dc,p\u00c43\u00dc);\n          4954 |          break;\n          4955 |          case 5:\n          4956 |          sprintf(dynamicSql.arr,dSql,p\u00c40\u00dc,p\u00c41\u00dc,p\u00c42\u00dc,p\u00c43\u00dc,p\u00c44\u00dc);\n          4957 |          break;\n          4958 |          case 6:\n          4959 |          sprintf(dynamicSql.arr,dSql,p\u00c40\u00dc,p\u00c41\u00dc,p\u00c42\u00dc,p\u00c43\u00dc,p\u00c44\u00dc,\n          4960 |            p\u00c45\u00dc);\n          4961 |          break;\n          4962 |          case 7:\n          4963 |          sprintf(dynamicSql.arr,dSql,p\u00c40\u00dc,p\u00c41\u00dc,p\u00c42\u00dc,p\u00c43\u00dc,p\u00c44\u00dc,\n          4964 |            p\u00c45\u00dc,p\u00c46\u00dc);\n          4965 |          break;\n          4966 |          \u00fc\n          4967 |      \u00fc\n          4968 |    JOBENV::DEBUG(1,(char *)dynamicSql.arr);\n          4969 |    Msg(10000+123)<<dynamicSql.arr<<eol;\n          4970 |    dynamicSql.len =short(strlen(dynamicSql.arr));\n          4971 |    tryToConnect();\n          4972 | \t DssJob * job = 0;\n          4973 |    int fetchCount = 0;\n          4974 |\n          4975 | /***$$$\n          4976 |    EXEC SQL WHENEVER SQLERROR GOTO SQLERROR\n          4977 | $$$***/\n          4978 |\n          4979 |\n          4980 | /***$$$\n          4981 |    EXEC SQL PREPARE FULL_QUERY FROM :dynamicSql\n          4982 | $$$***/\n          4983 |   \u00e4\n          4984 |   SQLPLIST SQLPLIST8 =\n          4985 |   \u00e464, 16388, 35,\n          4986 |    \u00e4'\u00d6x44','\u00d6x53','\u00d6x53','\u00d6x44','\u00d6x42','\u00d6x20','\u00d6x20','\u00d6x20'\u00fc,\n          4987 |    0, 0, 0, 0, 1, 0, 0, 0, 1208, 14, 4538, 0, 0, 0, 0, 0\u00fc;\n          4988 |   SQLELTS_PTR SQLELTS_PTR8;\n          4989 |   struct\n          4990 |      \u00e4 char   SQLDAID??(8??);\n          4991 |        long   SQLDABC;\n          4992 |        short  SQLN;\n          4993 |        short  SQLD;\n          4994 |        char  SQLPVELT??( (sizeof(SQLELTS) * 2) ??);\n          4995 |      \u00fc SQLPVARS8;\n          4996 |   SQLELTS_PTR8 = (SQLELTS *) &SQLPVARS8.SQLPVELT;\n          4997 |   SQLELTS_PTR8->SQLTYPE = 452;\n          4998 |   SQLELTS_PTR8->SQLLEN  = 0;\n          4999 |   SQLELTS_PTR8->SQLADDR = 0;\n          5000 |   SQLELTS_PTR8->SQLNAMLEN  = 0;\n          5001 |   SQLELTS_PTR8 = SQLELTS_PTR8 + 1;\n          5002 |   SQLELTS_PTR8->SQLTYPE = 448;\n          5003 |   SQLELTS_PTR8->SQLLEN  = 32000;\n          5004 |   SQLELTS_PTR8->SQLADDR = (char *)\n          5005 |   &( dynamicSql );\n          5006 |   SQLELTS_PTR8->SQLIND  = NULL;\n          5007 |   SQLELTS_PTR8->SQLNAMLEN  = 0;\n          5008 |   strcpy(SQLPVARS8.SQLDAID, \"\u00d6xE2\u00d6xD8\u00d6xD3\u00d6xC4\u00d6xC1\u00d6x40\u00d6x40\u00d6x08\");\n          5009 |   SQLPVARS8.SQLDABC = 104;\n          5010 |   SQLPVARS8.SQLN    = 2;\n          5011 |   SQLPVARS8.SQLD    = 2;\n          5012 |   SQLPLIST8.SQLVPARM = (char *) &SQLPVARS8.SQLDAID;\n          5013 |   SQLPLIST8.SQLCODEP = (char *) &sqlca;\n          5014 |   SQLPLIST8.SQLTIMES??( 0 ??) = 0x1951;\n          5015 |   SQLPLIST8.SQLTIMES??( 1 ??) = 0x8331;\n          5016 |   SQLPLIST8.SQLTIMES??( 2 ??) = 0x0BFC;\n          5017 |   SQLPLIST8.SQLTIMES??( 3 ??) = 0x4B14;\n          5018 |   DSNHLI ( (unsigned int * ) &SQLPLIST8);\n          5019 |   \u00fc\n          5020 |   if (SQLCODE < 0) goto  SQLERROR;\n          5021 |\n          5022 |\n          5023 | /***$$$\n          5024 |    EXEC SQL DECLARE C_FULL_QUERY CURSOR FOR FULL_QUERY\n          5025 | $$$***/\n          5026 |\n          5027 |\n          5028 | /***$$$\n          5029 |    EXEC SQL OPEN C_FULL_QUERY\n          5030 | $$$***/\n          5031 |   \u00e4\n          5032 |   SQLPLIST SQLPLIST10 =\n          5033 |   \u00e464, 4, 50,\n          5034 |    \u00e4'\u00d6x44','\u00d6x53','\u00d6x53','\u00d6x44','\u00d6x42','\u00d6x20','\u00d6x20','\u00d6x20'\u00fc,\n          5035 |    0, 0, 0, 0, 1, 0, 0, 0, 1208, 3, 4540, 0, 0, 0, 0, 0\u00fc;\n          5036 |   SQLELTS_PTR SQLELTS_PTR10;\n          5037 |   SQLPLIST10.SQLCODEP = (char *) &sqlca;\n          5038 |   SQLPLIST10.SQLTIMES??( 0 ??) = 0x1951;\n          5039 |   SQLPLIST10.SQLTIMES??( 1 ??) = 0x8331;\n          5040 |   SQLPLIST10.SQLTIMES??( 2 ??) = 0x0BFC;\n          5041 |   SQLPLIST10.SQLTIMES??( 3 ??) = 0x4B14;\n          5042 |   DSNHLI ( (unsigned int * ) &SQLPLIST10);\n          5043 |   \u00fc\n          5044 |   if (SQLCODE < 0) goto  SQLERROR;\n          5045 |\n          5046 |\n          5047 |    for (;;)\n          5048 |    \u00e4\n          5049 |\n          5050 | /***$$$\n          5051 |       EXEC SQL FETCH C_FULL_QUERY INTO\n          5052 |       :record_key,\n          5053 |       :record_job,\n          5054 |       :record_dataset,\n          5055 |       :record_volumes,\n          5056 |       :record_size\n          5057 | $$$***/\n          5058 |   \u00e4\n          5059 |   SQLPLIST SQLPLIST11 =\n          5060 |   \u00e464, 1028, 30,\n          5061 |    \u00e4'\u00d6x44','\u00d6x53','\u00d6x53','\u00d6x44','\u00d6x42','\u00d6x20','\u00d6x20','\u00d6x20'\u00fc,\n          5062 |    0, 0, 0, 0, 1, 0, 0, 0, 1208, 4, 4544, 0, 0, 0, 0, 0\u00fc;\n          5063 |   SQLELTS_PTR SQLELTS_PTR11;\n          5064 |   struct\n          5065 |      \u00e4 char   SQLDAID??(8??);\n          5066 |        long   SQLDABC;\n          5067 |        short  SQLN;\n          5068 |        short  SQLD;\n          5069 |        char  SQLAVELT??( (sizeof(SQLELTS) * 5) ??);\n          5070 |      \u00fc SQLAVARS11;\n          5071 |   SQLELTS_PTR11 = (SQLELTS *) &SQLAVARS11.SQLAVELT;\n          5072 |   SQLELTS_PTR11->SQLTYPE = 448;\n          5073 |   SQLELTS_PTR11->SQLLEN  = 28;\n          5074 |   SQLELTS_PTR11->SQLADDR = (char *)\n          5075 |   &( record_key );\n          5076 |   SQLELTS_PTR11->SQLIND  = NULL;\n          5077 |   SQLELTS_PTR11->SQLNAMLEN  = 0;\n          5078 |   SQLELTS_PTR11 = SQLELTS_PTR11 + 1;\n          5079 |   SQLELTS_PTR11->SQLTYPE = 448;\n          5080 |   SQLELTS_PTR11->SQLLEN  = 28;\n          5081 |   SQLELTS_PTR11->SQLADDR = (char *)\n          5082 |   &( record_job );\n          5083 |   SQLELTS_PTR11->SQLIND  = NULL;\n          5084 |   SQLELTS_PTR11->SQLNAMLEN  = 0;\n          5085 |   SQLELTS_PTR11 = SQLELTS_PTR11 + 1;\n          5086 |   SQLELTS_PTR11->SQLTYPE = 448;\n          5087 |   SQLELTS_PTR11->SQLLEN  = 45;\n          5088 |   SQLELTS_PTR11->SQLADDR = (char *)\n          5089 |   &( record_dataset );\n          5090 |   SQLELTS_PTR11->SQLIND  = NULL;\n          5091 |   SQLELTS_PTR11->SQLNAMLEN  = 0;\n          5092 |   SQLELTS_PTR11 = SQLELTS_PTR11 + 1;\n          5093 |   SQLELTS_PTR11->SQLTYPE = 448;\n          5094 |   SQLELTS_PTR11->SQLLEN  = 37;\n          5095 |   SQLELTS_PTR11->SQLADDR = (char *)\n          5096 |   &( record_volumes );\n          5097 |   SQLELTS_PTR11->SQLIND  = NULL;\n          5098 |   SQLELTS_PTR11->SQLNAMLEN  = 0;\n          5099 |   SQLELTS_PTR11 = SQLELTS_PTR11 + 1;\n          5100 |   SQLELTS_PTR11->SQLTYPE = 496;\n          5101 |   SQLELTS_PTR11->SQLLEN  = 4;\n          5102 |   SQLELTS_PTR11->SQLADDR = (char *)\n          5103 |   &( record_size );\n          5104 |   SQLELTS_PTR11->SQLIND  = NULL;\n          5105 |   SQLELTS_PTR11->SQLNAMLEN  = 0;\n          5106 |   strcpy(SQLAVARS11.SQLDAID, \"\u00d6xE2\u00d6xD8\u00d6xD3\u00d6xC4\u00d6xC1\u00d6x40\u00d6x40\u00d6x08\");\n          5107 |   SQLAVARS11.SQLDABC = 236;\n          5108 |   SQLAVARS11.SQLN    = 5;\n          5109 |   SQLAVARS11.SQLD    = 5;\n          5110 |   SQLPLIST11.SQLAPARM = (char *) &SQLAVARS11.SQLDAID;\n          5111 |   SQLPLIST11.SQLCODEP = (char *) &sqlca;\n          5112 |   SQLPLIST11.SQLTIMES??( 0 ??) = 0x1951;\n          5113 |   SQLPLIST11.SQLTIMES??( 1 ??) = 0x8331;\n          5114 |   SQLPLIST11.SQLTIMES??( 2 ??) = 0x0BFC;\n          5115 |   SQLPLIST11.SQLTIMES??( 3 ??) = 0x4B14;\n          5116 |   DSNHLI ( (unsigned int * ) &SQLPLIST11);\n          5117 |   \u00fc\n          5118 |   if (SQLCODE < 0) goto  SQLERROR;\n          5119 |\n          5120 |       if (SQLCODE == 100) break;\n          5121 |\n          5122 |         if (job == 0 ]]\n          5123 |          memcmp(job->timestamp.arr,record_job.arr,job->timestamp.len))\n          5124 |     \u00e4\n          5125 |          job = new DssJob((TIMESTAMP&)record_job);\n          5126 |          dssJobs.addlast(job);\n          5127 |          fetchCount++;\n          5128 |         \u00fc\n          5129 |         DssDataset * dataset = new DssDataset(job,\n          5130 |                                         record_dataset.arr,\n          5131 |                                         record_volumes.arr,\n          5132 |                                         record_type,\n          5133 |                                         record_size);\n          5134 |    \u00fc\n          5135 |\n          5136 | /***$$$\n          5137 |    EXEC SQL CLOSE C_FULL_QUERY\n          5138 | $$$***/\n          5139 |   \u00e4\n          5140 |   SQLPLIST SQLPLIST12 =\n          5141 |   \u00e464, 4, 45,\n          5142 |    \u00e4'\u00d6x44','\u00d6x53','\u00d6x53','\u00d6x44','\u00d6x42','\u00d6x20','\u00d6x20','\u00d6x20'\u00fc,\n          5143 |    0, 0, 0, 0, 1, 0, 0, 0, 1208, 5, 4565, 0, 0, 0, 0, 0\u00fc;\n          5144 |   SQLELTS_PTR SQLELTS_PTR12;\n          5145 |   SQLPLIST12.SQLCODEP = (char *) &sqlca;\n          5146 |   SQLPLIST12.SQLTIMES??( 0 ??) = 0x1951;\n          5147 |   SQLPLIST12.SQLTIMES??( 1 ??) = 0x8331;\n          5148 |   SQLPLIST12.SQLTIMES??( 2 ??) = 0x0BFC;\n          5149 |   SQLPLIST12.SQLTIMES??( 3 ??) = 0x4B14;\n          5150 |   DSNHLI ( (unsigned int * ) &SQLPLIST12);\n          5151 |   \u00fc\n          5152 |   if (SQLCODE < 0) goto  SQLERROR;\n          5153 |\n          5154 |    return fetchCount;\n          5155 | SQLERROR:\n          5156 |    diag(\"FULL QUERY\");\n          5157 |    markerror();\n          5158 |    return -1;\n          5159 | \u00fc\n          5160 |\n          5161 | int DssJob::doWeNeed(const char * d)\n          5162 |   \u00e4\n          5163 |   CHAINITER iter(this);\n          5164 |   DssDataset * ds =(DssDataset *)iter.next();\n          5165 |   while (ds)\n          5166 |     \u00e4\n          5167 |     if (ds->compare(d))\n          5168 |       return 1;\n          5169 |     ds =(DssDataset *)iter.next();\n          5170 |     \u00fc\n          5171 |   return 0;\n          5172 |   \u00fc\n          5173 |\n          5174 | int DssJob::allOnline()\n          5175 | \u00e4\n          5176 |  char _genFileName\u00c41024\u00dc;\n          5177 |   FILE *   restore = fopen(genOpenName(\"RESTORE\",_genFileName),\"wb\");\n          5178 |   if (| restore)\n          5179 |      JOBENV::Error(Msg(10000+110)<<\"RESTORE\"<<eol,JOBENV::Abort);\n          5180 |   int rc = 1;\n          5181 |   CHAINITER iter(dssJobs);\n          5182 |   DssJob * job = (DssJob*)iter.next();\n          5183 |   while (job)\n          5184 |   \u00e4\n          5185 |     int file = open(genOpenName(job->getDatasetName(),_genFileName),0x0\u00d6\n          5186 | 2+0);\n          5187 |     if (file < 0)\n          5188 |     \u00e4\n          5189 |        rc = 0;\n          5190 |        JOBENV::Error(Msg(10000+120)<<job->getDatasetName()<<strerror((*\u00d6\n          5191 | __errno()))\n          5192 |          <<eol,JOBENV::Continue);\n          5193 |        fprintf(restore,\"%s\u00d6n\",job->getDatasetName());\n          5194 |     \u00fc\n          5195 |     else\n          5196 |        close(file);\n          5197 |     job = (DssJob*)iter.next();\n          5198 |   \u00fc\n          5199 |   fclose(restore);\n          5200 |   return rc;\n          5201 | \u00fc\n          5202 |\n          5203 |\n          5204 |\n          5205 |\n          5206 |\n          5207 |\n          5208 | DssDataset::DssDataset(DssJob* j,char *n,char *v,int t,int s):\n          5209 | SQLINTERFACE(),\n          5210 | chainE(n),\n          5211 | job(j)\n          5212 | \u00e4\n          5213 |    job->addlast(this);\n          5214 |    dataset.len = (((strlen(n))>(sizeof(dataset.arr)))?(sizeof(dataset.a\u00d6\n          5215 | rr)):(strlen(n)));\n          5216 |    strncpy(dataset.arr,n,dataset.len);\n          5217 |    dataset.arr\u00c4dataset.len\u00dc = 0;\n          5218 |\n          5219 |    volumes.len = (((strlen(v))>(sizeof(volumes.arr)-1))?(sizeof(volumes\u00d6\n          5220 | .arr)-1):(strlen(v)));\n          5221 |    strncpy(volumes.arr,v,volumes.len);\n          5222 |    volumes.arr\u00c4volumes.len\u00dc = 0;\n          5223 |    type = t;\n          5224 |    recordsize = s;\n          5225 |    JOBENV::DEBUG(1,\"Dataset construct\",n,v);\n          5226 | \u00fc\n          5227 |\n          5228 | DssDataset::\u00dfDssDataset()\n          5229 | \u00e4\n          5230 | \u00fc\n          5231 |\n          5232 | int DssDataset::insert()\n          5233 | \u00e4\n          5234 |    tryToConnect();\n          5235 |    memcpy(timestamp.arr,job->timestamp.arr,job->timestamp.len+1);\n          5236 |    timestamp.len = job->timestamp.len;\n          5237 |    JOBENV::DEBUG(1,\"Dataset insert:\",dataset.arr);\n          5238 |    if (useDB2)\n          5239 |    \u00e4\n          5240 |\n          5241 | /***$$$\n          5242 |    EXEC SQL WHENEVER SQLERROR GOTO SQLERROR\n          5243 | $$$***/\n          5244 |\n          5245 |\n          5246 | /***$$$\n          5247 |    EXEC SQL INSERT INTO DSSDATASETS\n          5248 |    VALUES(CURRENT TIMESTAMP,\n          5249 |    :timestamp,\n          5250 |    :dataset,\n          5251 |    :volumes,\n          5252 |    :type,\n          5253 |    :recordsize)\n          5254 | $$$***/\n          5255 |   \u00e4\n          5256 |   SQLPLIST SQLPLIST14 =\n          5257 |   \u00e464, 16388, 30,\n          5258 |    \u00e4'\u00d6x44','\u00d6x53','\u00d6x53','\u00d6x44','\u00d6x42','\u00d6x20','\u00d6x20','\u00d6x20'\u00fc,\n          5259 |    0, 0, 0, 0, 5, 0, 0, 0, 1208, 232, 4653, 0, 0, 0, 0, 0\u00fc;\n          5260 |   SQLELTS_PTR SQLELTS_PTR14;\n          5261 |   struct\n          5262 |      \u00e4 char   SQLDAID??(8??);\n          5263 |        long   SQLDABC;\n          5264 |        short  SQLN;\n          5265 |        short  SQLD;\n          5266 |        char  SQLPVELT??( (sizeof(SQLELTS) * 5) ??);\n          5267 |      \u00fc SQLPVARS14;\n          5268 |   SQLELTS_PTR14 = (SQLELTS *) &SQLPVARS14.SQLPVELT;\n          5269 |   SQLELTS_PTR14->SQLTYPE = 448;\n          5270 |   SQLELTS_PTR14->SQLLEN  = 28;\n          5271 |   SQLELTS_PTR14->SQLADDR = (char *)\n          5272 |   &( timestamp );\n          5273 |   SQLELTS_PTR14->SQLIND  = NULL;\n          5274 |   SQLELTS_PTR14->SQLNAMLEN  = 0;\n          5275 |   SQLELTS_PTR14 = SQLELTS_PTR14 + 1;\n          5276 |   SQLELTS_PTR14->SQLTYPE = 448;\n          5277 |   SQLELTS_PTR14->SQLLEN  = 255;\n          5278 |   SQLELTS_PTR14->SQLADDR = (char *)\n          5279 |   &( dataset );\n          5280 |   SQLELTS_PTR14->SQLIND  = NULL;\n          5281 |   SQLELTS_PTR14->SQLNAMLEN  = 0;\n          5282 |   SQLELTS_PTR14 = SQLELTS_PTR14 + 1;\n          5283 |   SQLELTS_PTR14->SQLTYPE = 448;\n          5284 |   SQLELTS_PTR14->SQLLEN  = 37;\n          5285 |   SQLELTS_PTR14->SQLADDR = (char *)\n          5286 |   &( volumes );\n          5287 |   SQLELTS_PTR14->SQLIND  = NULL;\n          5288 |   SQLELTS_PTR14->SQLNAMLEN  = 0;\n          5289 |   SQLELTS_PTR14 = SQLELTS_PTR14 + 1;\n          5290 |   SQLELTS_PTR14->SQLTYPE = 496;\n          5291 |   SQLELTS_PTR14->SQLLEN  = 4;\n          5292 |   SQLELTS_PTR14->SQLADDR = (char *)\n          5293 |   &( type );\n          5294 |   SQLELTS_PTR14->SQLIND  = NULL;\n          5295 |   SQLELTS_PTR14->SQLNAMLEN  = 0;\n          5296 |   SQLELTS_PTR14 = SQLELTS_PTR14 + 1;\n          5297 |   SQLELTS_PTR14->SQLTYPE = 496;\n          5298 |   SQLELTS_PTR14->SQLLEN  = 4;\n          5299 |   SQLELTS_PTR14->SQLADDR = (char *)\n          5300 |   &( DssDatasetRecord.recordsize );\n          5301 |   SQLELTS_PTR14->SQLIND  = NULL;\n          5302 |   SQLELTS_PTR14->SQLNAMLEN  = 0;\n          5303 |   strcpy(SQLPVARS14.SQLDAID, \"\u00d6xE2\u00d6xD8\u00d6xD3\u00d6xC4\u00d6xC1\u00d6x40\u00d6x40\u00d6x08\");\n          5304 |   SQLPVARS14.SQLDABC = 236;\n          5305 |   SQLPVARS14.SQLN    = 5;\n          5306 |   SQLPVARS14.SQLD    = 5;\n          5307 |   SQLPLIST14.SQLVPARM = (char *) &SQLPVARS14.SQLDAID;\n          5308 |   SQLPLIST14.SQLCODEP = (char *) &sqlca;\n          5309 |   SQLPLIST14.SQLTIMES??( 0 ??) = 0x1951;\n          5310 |   SQLPLIST14.SQLTIMES??( 1 ??) = 0x8331;\n          5311 |   SQLPLIST14.SQLTIMES??( 2 ??) = 0x0BFC;\n          5312 |   SQLPLIST14.SQLTIMES??( 3 ??) = 0x4B14;\n          5313 |   DSNHLI ( (unsigned int * ) &SQLPLIST14);\n          5314 |   \u00fc\n          5315 |   if (SQLCODE < 0) goto  SQLERROR;\n          5316 |\n          5317 |    \u00fc\n          5318 |    else\n          5319 |    \u00e4\n          5320 |    if (SQLINTERFACE::fileDB2)\n          5321 |    fprintf(SQLINTERFACE::fileDB2,\"insert into DSSDATASETS:\u00d6n\");\n          5322 |    if (fileDB2) fprintf(fileDB2,\" %s:%*.*s\u00d6n\",\"timestamp\",timestamp.len\u00d6\n          5323 | ,timestamp.len,timestamp.arr);;\n          5324 |    if (fileDB2) fprintf(fileDB2,\" %s:%*.*s\u00d6n\",\"dataset\",dataset.len,dat\u00d6\n          5325 | aset.len,dataset.arr);;\n          5326 |    if (fileDB2) fprintf(fileDB2,\" %s:%*.*s\u00d6n\",\"volumes\",volumes.len,vol\u00d6\n          5327 | umes.len,volumes.arr);;\n          5328 |    if (fileDB2)\n          5329 |    fprintf(SQLINTERFACE::fileDB2,\" type:%d\u00d6n size:%d\u00d6n\",type,recordsize\u00d6\n          5330 | );\n          5331 |    \u00fc\n          5332 |   return 1;\n          5333 | SQLERROR:\n          5334 |   diag(\"INSERT INTO DSSDATASETS\");\n          5335 |   markerror();\n          5336 |   return 0;\n          5337 | \u00fc\n          5338 |\n          5339 |\n0                                   * * * * *   E N D   O F   S O U R C E   * * * * *\n-\n\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(GDSSDB)'                      30.11.12 08:26:06\n0                                    * * * * *   I N C L U D E S   * * * * *\n     1  =  //'CEE.SCEEH.H(STRING)'\n     2  =  //'CEE.SCEEH.H(FEATURES)'\n     3  =  //'CEE.SCEEH.H(STDDEF)'\n0                                 * * * * *   E N D   O F   I N C L U D E S   * * * * *\n0\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(GDSSDB)'                      30.11.12 08:26:06\n-                           * * * * *   M E S S A G E   S U M M A R Y   * * * * *\n0TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL\n                (U)       (S)         (E)        (W)          (I)\n     0           0         0           0          0            0\n0                    * * * * *   E N D   O F   M E S S A G E   S U M M A R Y   * * * * *\n0                        * * * * *   E N D   O F   C O M P I L A T I O N   * * * * *\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GZIO": {"ttr": 2647, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "INFBLOC": {"ttr": 1499, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "INFBLOCK": {"ttr": 2651, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "INFCODE": {"ttr": 1503, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "INFCODES": {"ttr": 2655, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "INFFAST": {"ttr": 2659, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "INFLATE": {"ttr": 2663, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "INFTREE": {"ttr": 1515, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "INFTREES": {"ttr": 2667, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "INFUTIL": {"ttr": 2671, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "JOBENV": {"ttr": 2707, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(JOBENV)'                      30.11.12 08:25:38\n0                                      * * * * *   P R O L O G   * * * * *\n    Compiler options. . . . . . . :AGGRCOPY(NOOVERLAP)             ANSIALIAS       ARCH(7)         ARGPARSE        NOASCII\n                                  :NOATTRIBUTE     ASSERT(RESTRICT)                BITFIELD(UNSIGNED)              CHARS(UNSIGNED)\n                                  :NOCOMPACT       NOCOMPRESS      CVFT            NODFP           DIGRAPH         DLL(CALLBACKANY)\n                                  :ENUMSIZE(SMALL) NOEVENTS        EXECOPS         EXH             NOEXPMAC        NOEXPORTALL\n                                  :NOFASTTEMPINC   FLAG(I)         NOGOFF          GONUMBER        HALT(16)\n                                  :NOHGPR(NOPRESERVE)              NOHOT           NOIGNERRNO      ILP32           NOINITAUTO\n                                  :NOINLRPT        NOLIBANSI       NOLIST          LONGNAME        NOMAKEDEP       NOMARGINS\n                                  :MAXMEM(2097152) MEMORY          NAMEMANGLING(zOSV1R2)           NESTINC(255)    OBJECT\n                                  :OBJECTMODEL(COMPAT)             NOOE            NOOFFSET        OPTIMIZE(2)     PLIST(HOST)\n                                  :NOPORT          NOPPONLY        PREFETCH        REDIR           NOREPORT        ROSTRING\n                                  :ROCONST         RTTI(ALL)       NOSEQUENCE      NOSHOWINC       NOSHOWMACROS    SOURCE\n                                  :SKIPSRC(SHOW)   SPILL(3600)     START           NOSTATICINLINE  STRICT\n                                  :NOSTRICT_INDUCTION              TARGET(LE,CURRENT)              TEMPLATEDEPTH(300)\n                                  :NOTEMPLATEREGISTRY              TEMPLATERECOMPILE               TERMINAL        TEST(HOOK)\n                                  :TMPLPARSE(NO)   TUNE(7)         UNROLL(AUTO)    UTF             NOWARN0X        NOWARN64\n                                  :NOWSIZEOF       NOXREF\n                                  :NOCICS\n                                  :NOCONVLIT\n                                  :NOCSECT\n                                  :DEBUG(FORMAT(ISD),LEVEL(0),HOOK(NOLINE,NOBLOCK,NOPATH,CALL,FUNC),NOSYMBOL)\n                                  :DEFINE(__OS390__=1,_POSIX_SOURCE=1,_XOPEN_SOURCE_EXTENDED=1,MU_STANDALONE=1,ISIS_PF_MU=1)\n                                  :FLOAT(HEX,FOLD,NOMAF,AFP(NOVOLATILE)) ROUND(Z)\n                                  :NOHALTONMSG\n                                  :INFO(LAN)\n                                  :INLINE(AUTO,NOREPORT,100,1000)\n                                  :NOIPA\n                                  :KEYWORD(bool,explicit,export,false,mutable,namespace,true,typename,using,restrict,__restrict__,\n                                   __restrict,_Pragma,__alignof__,__asm__,__attribute__,__const__,__extension__,__volatile__,\n                                   __inline__,__signed__,__typeof__,__I,_Complex,__complex__,__real__,__imag__)\n                                  :NOKEYWORD(char16_t,char32_t,decltype,static_assert,typeof)\n                                  :LANGLVL(ANONSTRUCT,ANONUNION,ANSIFOR,ANSISINIT,NOAUTOTYPEDEDUCTION,C99VLA,C99__FUNC__,\n                                   NOC99LONGLONG,NOC99PREPROCESSOR,NOCOMPATRVALUEBINDING,NODBCS,NODECLTYPE,NODELEGATINGCTORS,\n                                   DEPENDENTBASELOOKUP,NODOLLARINNAMES,EMPTYSTRUCT,NOEXTENDEDFRIEND,NOEXTENDEDINTEGERSAFE,\n                                   EXTERNTEMPLATE,ILLPTOM,IMPLICITINT,NOINLINENAMESPACE,LIBEXT,LONGLONG,NONEWEXCP,OFFSETNONPOD,\n                                   NOOLDDIGRAPH,OLDFRIEND,NOOLDMATH,NOOLDSTR,OLDTEMPACC,NOOLDTMPLALIGN,OLDTMPLSPEC,NOSTATIC_ASSERT,\n                                   NOTEMPSASLOCALS,NOTEXTAFTERENDIF,GNU_LABELVALUE,GNU_COMPUTEDGOTO,TRAILENUM,TYPEDEFCLASS,NOUCS,\n                                   VARARGMACROS,NOVARIADICTEMPLATES,GNU_INCLUDE_NEXT,ZEROEXTARRAY,NOC99COMPLEX,NOC99COMPLEXHEADER,\n                                   NOGNU_COMPLEX,GNU_SUFFIXIJ)\n                                  :LOCALE(DE_DE.IBM-273)\n                                  :NOLSEARCH\n                                  :OPTFILE(DD:OPTFILE)\n                                  :NORTCHECK\n                                  :SEARCH(//'CEE.SCEEH.+', //'CBC.SCLBH.+', CEE.SCEEH.+, CBC.SCLBH.+, DD:USERLIB)\n                                  :NOSERVICE\n                                  :NOSQL\n                                  :NOSUPPRESS\n                                  :TEMPINC(./tempinc)\n                                  :NOXPLINK(NOBACKCHAIN,NOCALLBACK,GUARD,OSCALL(UPSTACK),NOSTOREARGS)\n    Version Macros. . . . . . . . : __COMPILER_VER__=0x410D0000\n                                  : __LIBREL__=0x410D0000\n                                  : __TARGET_LIB__=0x410D0000\n    Source margins. . . . . . . . :\n      Varying length. . . . . . . : 1 - 32760\n      Fixed length. . . . . . . . : 1 - 32760\n    Sequence columns. . . . . . . :\n      Varying length. . . . . . . : none\n      Fixed length. . . . . . . . : none\n    Locale name . . . . . . . . . : DE_DE.IBM-273\n    Code set. . . . . . . . . . . : IBM-273\n    Listing name. . . . . . . . . : DD:SYSCPRT\n0                                 * * * * *   E N D   O F   P R O L O G   * * * * *\n-\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(JOBENV)'                      30.11.12 08:25:38\n-\n                                       * * * * *   S O U R C E   * * * * *\n0            1 | /*******************************************************************************\n             2 | * Copyright ISIS Papyrus Technologies Limited\n             3 | *-------------------------------------------------------------------------------\n             4 | * File:              $Source: /data/cvs/src/mvs/jobenv.cpp,v $\n             5 | *-------------------------------------------------------------------------------\n             6 | * Description:\n             7 | *   ???\n             8 | *******************************************************************************/\n             9 |\n            10 | #include \"isisdef.h\"\n            11 | #include <stdlib.h>\n            12 | #include <string.h>\n            13 | #include <strings.h>\n            14 | #if defined(MU_STANDALONE) == 0\n            15 | #include \"isismisc.hpp\" //szm20050810\n            16 | #endif\n            17 | #include \"jobenv.hpp\"\n            18 | #include \"msgmgr.hpp\"\n            19 | #include \"misc.hpp\"\n            20 | #include \"tiot1.hpp\"\n            21 | #include \"ikjrb.hpp\"\n            22 | #include \"ihacde.hpp\"\n            23 | #include \"psa.hpp\"\n            24 | #include \"tcbfix.hpp\"\n            25 | #include \"iezjscb.hpp\"\n            26 | #include \"ssib.hpp\"\n            27 | #include \"tiot1ds.hpp\"\n            28 |\n            29 | int JOBENV::debug = 0;\n            30 | char * KEYWORD_DEBUG = \"DEBUG\";\n            31 | JOBENV * jobEnv = NULL;\n            32 |\n            33 |\n            34 | JOBENV::JOBENV(char * argv0)\n            35 | \u00e4\n            36 |   program        = argv0;\n            37 |\n            38 |   psa    *  psaP    = (psa *)NULL;\n            39 |   tcbfix *  tcbfixP = (tcbfix*)psaP->psatold;\n            40 |             tcbfixP = (tcbfix*)((char *)tcbfixP-sizeof(tcbfixP->tcbfrs));\n            41 |   tiot1ds *  tiot1P  = (tiot1ds*)tcbfixP->tcbtio;\n            42 |   iezjscb*  iezjscbP= (iezjscb*)((tcbfixP->tcbjscb._tcbjscbb)&0x00ffffff);\n            43 |   iezjscbP       = (iezjscb*)iezjscbP->jscbact;\n            44 |   ssib  *  ssibP = (ssib *)iezjscbP->jscbssib;\n            45 |\n            46 | \trbprfx * rbprfxP = (rbprfx *)tcbfixP->tcbrbp;\n            47 | \trbprfxP        = (rbprfx *)((char *)rbprfxP -64); //RB prefix 64 bytes\n            48 | \tint ok = 1;\n            49 | \twhile (ok&&(rbprfxP->xstab1&rbftp))\n            50 | \t\t\u00e4\n            51 | \t\t  if (rbprfxP->xstab2&rbtcbnxt)\n            52 | \t\t\t\tok = 0;\n            53 | \t\t\trbprfxP = (rbprfx *)(rbprfxP->xrblnka);\n            54 | \t\t\trbprfxP = (rbprfx *)((char *)rbprfxP -64); //RB prefix 64 bytes\n            55 | \t\t\u00fc\n            56 | \tif (ok)\n            57 | \t\t\u00e4\n            58 | \t\t cdentry * cdentryP = (cdentry *)(rbprfxP->rbcde1);\n            59 | \t\t programRb = mvsSTRING((char *)cdentryP->cdname,8);\n            60 | \t\t\u00fc\n            61 | \telse\n            62 | \t\tprogramRb = \"\";\n            63 |\n            64 |   jobName        = mvsSTRING((char *)tiot1P->tiocnjob,8);\n            65 |   stepName       = mvsSTRING((char *)tiot1P->tiocpstn,8);\n            66 |   procStepName   = mvsSTRING((char *)tiot1P->tiocpstn,8);\n            67 |   jobId          = mvsSTRING((char *)ssibP->ssibjbid,8);\n            68 |\n            69 |   jobName.strip();\n            70 |   jobId.strip();\n            71 |   stepName.strip();\n            72 |   procStepName.strip();\n            73 |   program.strip();\n            74 |\n            75 |   if (getenv(KEYWORD_DEBUG))\n            76 |     debug = atoi(getenv(KEYWORD_DEBUG));\n            77 |   else\n            78 |     debug = 0;\n            79 | \u00fc\n            80 |\n            81 | void JOBENV::print()\n            82 | \u00e4\n            83 |   Msg(400)<<jobName<<jobId<<program<<eol;\n            84 | \u00fc\n            85 |\n            86 | void JOBENV::Error(char *,JOBENV_ACTION a)\n            87 | \u00e4\n            88 |  if (a == Abort)\n            89 |  \u00e4\n            90 |     Msg(500)<<eol;\n            91 |     abort();\n            92 |  \u00fc\n            93 |\n            94 | \u00fc\n            95 | int  JOBENV::DEBUG(int l,char* p0)\n            96 | \u00e4\n            97 |   if (l>debug) return 0;\n            98 |     Msg(101)<<p0<<eol;\n            99 |   return 1;\n           100 | \u00fc\n           101 |\n           102 | int  JOBENV::DEBUG(int l,size_t p0)\n           103 | \u00e4\n           104 |   if (l>debug) return 0;\n           105 |     Msg(101)<<int(p0)<<eol;\n           106 |   return 1;\n           107 | \u00fc\n           108 |\n           109 | int  JOBENV::DEBUG(int l,char* p0,char* p1)\n           110 | \u00e4\n           111 |   if (l>debug) return 0;\n           112 |     Msg(102)<<p0<<p1<<eol;\n           113 |   return 1;\n           114 | \u00fc\n           115 |\n           116 |\n           117 | int  JOBENV::DEBUG(int l,char* p0,int p1)\n           118 | \u00e4\n           119 |   if (l>debug) return 0;\n           120 |     Msg(102)<<p0<<p1<<eol;\n           121 |   return 1;\n           122 | \u00fc\n           123 |\n           124 | int  JOBENV::DEBUG(int l,char* p0,char* p1,char* p2)\n           125 | \u00e4\n           126 |   if (l>debug) return 0;\n           127 |     Msg(103)<<p0<<p1<<p2<<eol;\n           128 |   return 1;\n           129 | \u00fc\n           130 |\n           131 |\n           132 | int  JOBENV::DEBUG(int l,char* p0,char* p1,char* p2,char *p3)\n           133 | \u00e4\n           134 |   if (l>debug) return 0;\n           135 |     Msg(103)<<p0<<p1<<p2<<p3<<eol;\n           136 |   return 1;\n           137 | \u00fc\n           138 |\n           139 | int  JOBENV::DEBUG(int l,char* t,char* d,int dl)\n           140 | \u00e4\n           141 |  if (l>debug) return 0;\n           142 |  dump(messagetext->getFILE()?messagetext->getFILE():stdout,t,d,dl);\n           143 |   return 1;\n           144 | \u00fc\n0                                   * * * * *   E N D   O F   S O U R C E   * * * * *\n-\n\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(JOBENV)'                      30.11.12 08:25:38\n0                                    * * * * *   I N C L U D E S   * * * * *\n     1  =  //'ESA.PRJ.CBTDSSN.HPP(ISISDEF)'\n     2  =  //'CEE.SCEEH.H(STDLIB)'\n     3  =  //'CEE.SCEEH.H(FEATURES)'\n     4  =  //'CEE.SCEEH.H(BUILTINS)'\n     5  =  //'CEE.SCEEH.H(STDDEF)'\n     6  =  //'CEE.SCEEH.H(STRING)'\n     7  =  //'CEE.SCEEH.H(STRINGS)'\n     8  =  //'CEE.SCEEH.SYS.H(TYPES)'\n     9  =  //'ESA.PRJ.CBTDSSN.HPP(JOBENV)'\n    10  =  //'ESA.PRJ.CBTDSSN.HPP(MVSBASE)'\n    11  =  //'ESA.PRJ.CBTDSSN.HPP(MERROR)'\n    12  =  //'ESA.PRJ.CBTDSSN.HPP(DSNAMEUT)'\n    13  =  //'CEE.SCEEH.H(ASSERT)'\n    14  =  //'CEE.SCEEH.H(STDIO)'\n    15  =  //'ESA.PRJ.CBTDSSN.HPP(MSGMGR)'\n    16  =  //'ESA.PRJ.CBTDSSN.HPP(MISC)'\n    17  =  //'CEE.SCEEH.H(TIME)'\n    18  =  //'ESA.PRJ.CBTDSSN.HPP(TIOT1)'\n    19  =  //'ESA.PRJ.CBTDSSN.HPP(IKJRB)'\n    20  =  //'ESA.PRJ.CBTDSSN.HPP(IHACDE)'\n    21  =  //'ESA.PRJ.CBTDSSN.HPP(PSA)'\n    22  =  //'ESA.PRJ.CBTDSSN.HPP(TCBFIX)'\n    23  =  //'ESA.PRJ.CBTDSSN.HPP(IEZJSCB)'\n    24  =  //'ESA.PRJ.CBTDSSN.HPP(SSIB)'\n    25  =  //'ESA.PRJ.CBTDSSN.HPP(TIOT1DS)'\n0\"//'ESA.PRJ.CBTDSSN.HPP(TIOT1DS)'\", line 3.8: CCN6451 (I) Using #pragma pack(1), the C++ compiler may generate a different class\n layout than the C compiler generates. Use #pragma pack(1:C_Compat) to get the C compiler's behavior.\n-                                 * * * * *   E N D   O F   I N C L U D E S   * * * * *\n0\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(JOBENV)'                      30.11.12 08:25:38\n-                           * * * * *   M E S S A G E   S U M M A R Y   * * * * *\n0TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL\n                (U)       (S)         (E)        (W)          (I)\n     1           0         0           0          0            1\n0                    * * * * *   E N D   O F   M E S S A G E   S U M M A R Y   * * * * *\n0                        * * * * *   E N D   O F   C O M P I L A T I O N   * * * * *\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MCHAIN": {"ttr": 2711, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(MCHAIN)'                      30.11.12 08:25:41\n0                                      * * * * *   P R O L O G   * * * * *\n    Compiler options. . . . . . . :AGGRCOPY(NOOVERLAP)             ANSIALIAS       ARCH(7)         ARGPARSE        NOASCII\n                                  :NOATTRIBUTE     ASSERT(RESTRICT)                BITFIELD(UNSIGNED)              CHARS(UNSIGNED)\n                                  :NOCOMPACT       NOCOMPRESS      CVFT            NODFP           DIGRAPH         DLL(CALLBACKANY)\n                                  :ENUMSIZE(SMALL) NOEVENTS        EXECOPS         EXH             NOEXPMAC        NOEXPORTALL\n                                  :NOFASTTEMPINC   FLAG(I)         NOGOFF          GONUMBER        HALT(16)\n                                  :NOHGPR(NOPRESERVE)              NOHOT           NOIGNERRNO      ILP32           NOINITAUTO\n                                  :NOINLRPT        NOLIBANSI       NOLIST          LONGNAME        NOMAKEDEP       NOMARGINS\n                                  :MAXMEM(2097152) MEMORY          NAMEMANGLING(zOSV1R2)           NESTINC(255)    OBJECT\n                                  :OBJECTMODEL(COMPAT)             NOOE            NOOFFSET        OPTIMIZE(2)     PLIST(HOST)\n                                  :NOPORT          NOPPONLY        PREFETCH        REDIR           NOREPORT        ROSTRING\n                                  :ROCONST         RTTI(ALL)       NOSEQUENCE      NOSHOWINC       NOSHOWMACROS    SOURCE\n                                  :SKIPSRC(SHOW)   SPILL(3600)     START           NOSTATICINLINE  STRICT\n                                  :NOSTRICT_INDUCTION              TARGET(LE,CURRENT)              TEMPLATEDEPTH(300)\n                                  :NOTEMPLATEREGISTRY              TEMPLATERECOMPILE               TERMINAL        TEST(HOOK)\n                                  :TMPLPARSE(NO)   TUNE(7)         UNROLL(AUTO)    UTF             NOWARN0X        NOWARN64\n                                  :NOWSIZEOF       NOXREF\n                                  :NOCICS\n                                  :NOCONVLIT\n                                  :NOCSECT\n                                  :DEBUG(FORMAT(ISD),LEVEL(0),HOOK(NOLINE,NOBLOCK,NOPATH,CALL,FUNC),NOSYMBOL)\n                                  :DEFINE(__OS390__=1,_POSIX_SOURCE=1,_XOPEN_SOURCE_EXTENDED=1,MU_STANDALONE=1,ISIS_PF_MU=1)\n                                  :FLOAT(HEX,FOLD,NOMAF,AFP(NOVOLATILE)) ROUND(Z)\n                                  :NOHALTONMSG\n                                  :INFO(LAN)\n                                  :INLINE(AUTO,NOREPORT,100,1000)\n                                  :NOIPA\n                                  :KEYWORD(bool,explicit,export,false,mutable,namespace,true,typename,using,restrict,__restrict__,\n                                   __restrict,_Pragma,__alignof__,__asm__,__attribute__,__const__,__extension__,__volatile__,\n                                   __inline__,__signed__,__typeof__,__I,_Complex,__complex__,__real__,__imag__)\n                                  :NOKEYWORD(char16_t,char32_t,decltype,static_assert,typeof)\n                                  :LANGLVL(ANONSTRUCT,ANONUNION,ANSIFOR,ANSISINIT,NOAUTOTYPEDEDUCTION,C99VLA,C99__FUNC__,\n                                   NOC99LONGLONG,NOC99PREPROCESSOR,NOCOMPATRVALUEBINDING,NODBCS,NODECLTYPE,NODELEGATINGCTORS,\n                                   DEPENDENTBASELOOKUP,NODOLLARINNAMES,EMPTYSTRUCT,NOEXTENDEDFRIEND,NOEXTENDEDINTEGERSAFE,\n                                   EXTERNTEMPLATE,ILLPTOM,IMPLICITINT,NOINLINENAMESPACE,LIBEXT,LONGLONG,NONEWEXCP,OFFSETNONPOD,\n                                   NOOLDDIGRAPH,OLDFRIEND,NOOLDMATH,NOOLDSTR,OLDTEMPACC,NOOLDTMPLALIGN,OLDTMPLSPEC,NOSTATIC_ASSERT,\n                                   NOTEMPSASLOCALS,NOTEXTAFTERENDIF,GNU_LABELVALUE,GNU_COMPUTEDGOTO,TRAILENUM,TYPEDEFCLASS,NOUCS,\n                                   VARARGMACROS,NOVARIADICTEMPLATES,GNU_INCLUDE_NEXT,ZEROEXTARRAY,NOC99COMPLEX,NOC99COMPLEXHEADER,\n                                   NOGNU_COMPLEX,GNU_SUFFIXIJ)\n                                  :LOCALE(DE_DE.IBM-273)\n                                  :NOLSEARCH\n                                  :OPTFILE(DD:OPTFILE)\n                                  :NORTCHECK\n                                  :SEARCH(//'CEE.SCEEH.+', //'CBC.SCLBH.+', CEE.SCEEH.+, CBC.SCLBH.+, DD:USERLIB)\n                                  :NOSERVICE\n                                  :NOSQL\n                                  :NOSUPPRESS\n                                  :TEMPINC(./tempinc)\n                                  :NOXPLINK(NOBACKCHAIN,NOCALLBACK,GUARD,OSCALL(UPSTACK),NOSTOREARGS)\n    Version Macros. . . . . . . . : __COMPILER_VER__=0x410D0000\n                                  : __LIBREL__=0x410D0000\n                                  : __TARGET_LIB__=0x410D0000\n    Source margins. . . . . . . . :\n      Varying length. . . . . . . : 1 - 32760\n      Fixed length. . . . . . . . : 1 - 32760\n    Sequence columns. . . . . . . :\n      Varying length. . . . . . . : none\n      Fixed length. . . . . . . . : none\n    Locale name . . . . . . . . . : DE_DE.IBM-273\n    Code set. . . . . . . . . . . : IBM-273\n    Listing name. . . . . . . . . : DD:SYSCPRT\n0                                 * * * * *   E N D   O F   P R O L O G   * * * * *\n-\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(MCHAIN)'                      30.11.12 08:25:41\n-\n                                       * * * * *   S O U R C E   * * * * *\n0            1 | /*******************************************************************************\n             2 | * Copyright ISIS Papyrus Technologies Limited\n             3 | *-------------------------------------------------------------------------------\n             4 | * File:              $Source: /data/cvs/src/mvs/mchain.cpp,v $\n             5 | *-------------------------------------------------------------------------------\n             6 | * Description:\n             7 | *   ???\n             8 | *******************************************************************************/\n             9 | #include \"isisdef.h\"\n            10 | #include <stdlib.h>\n            11 | #include <string.h>\n            12 | #include <strings.h>\n            13 | #include \"mchain.hpp\"\n            14 | #ifdef OWN_STDIO\n            15 | #include \"stdio.hpp\"\n            16 | #else\n            17 | #include <stdio.h>\n            18 | #ifndef MU_STANDALONE\n            19 | #include \"xfile.hpp\"\n            20 | #endif\n            21 | #endif\n            22 |\n            23 | /*--------------------------------------------------------------+\n            24 | | mCHAIN global class                                       |\n            25 | |                                                              |\n            26 | |                                                              |\n            27 | +--------------------------------------------------------------*/\n            28 |\n            29 | mCHAIN::\u00dfmCHAIN()\n            30 | \u00e4\n            31 | \tchainE * pa , * pp;\n            32 | \tpa = first;\n            33 | \twhile ( pa )\n            34 | \t\u00e4\n            35 | \t\tpp = pa;\n            36 | \t\tpa = pa->next;\n            37 | \t\tdelete pp;\n            38 | \t\u00fc\n            39 |\n            40 | \u00fc\n            41 |\n            42 | long int mCHAIN::add(chainE * nc,chainE * c,long int code )\n            43 | \u00e4\n            44 | \tcounter++;\n            45 | \tif ( first == 0) first = last = nc ;\n            46 | \tif ( c )\n            47 | \t\u00e4\n            48 | \t\tif ( code < 0 )\n            49 | \t\t\u00e4\n            50 | \t\t\tif ( first == c)\n            51 | \t\t\t\u00e4\n            52 | \t\t\t\tfirst = nc ;\n            53 | \t\t\t\tnc->prev = NULL;\n            54 | \t\t\t\u00fc\n            55 | \t\t\telse\n            56 | \t\t\t\tnc ->prev = c->prev ;\n            57 | \t\t\tnc ->next = c ;\n            58 | \t\t\tc->prev = nc ;\n            59 | \t\t\tif ( nc->prev) nc->prev->next = nc ;\n            60 | \t\t\u00fc\n            61 | \t\telse if ( code > 0)\n            62 | \t\t\u00e4\n            63 | \t\t\tif ( last == c)\n            64 | \t\t\t\u00e4\n            65 | \t\t\t\tlast = nc ;\n            66 | \t\t\t\tnc->next = NULL;\n            67 | \t\t\t\u00fc\n            68 | \t\t\telse\n            69 | \t\t\t\tnc->next = c ->next ;\n            70 | \t\t\tnc->prev = c ;\n            71 | \t\t\tc->next = nc ;\n            72 | \t\t\tif ( nc->next) nc->next->prev = nc ;\n            73 | \t\t\u00fc\n            74 | \t\telse\n            75 | \t\t\u00e4\n            76 | \t\t\tdelete \u00c4\u00dc c->chainEid ;\n            77 | \t\t\tc->chainEidl = nc->chainEidl;\n            78 | \t\t\tc ->chainEid = new char\u00c4nc->chainEidl+1\u00dc ;\n            79 | \t\t\tmemcpy(c->chainEid,nc->chainEid,c->chainEidl+1) ;\n            80 | \t\t\tcounter --;\n            81 | \t\t\u00fc\n            82 | \t\u00fc\n            83 | \treturn counter ;\n            84 | \u00fc\n            85 |\n            86 | long int mCHAIN::del(chainE * c)\n            87 | \u00e4\n            88 | \tif ( c == first ) first = c->next ;\n            89 | \tif ( c == last ) last = c->prev ;\n            90 |\n            91 | \tif ( c->prev) c->prev->next = c->next ;\n            92 | \tif ( c->next) c->next->prev = c->prev ;\n            93 | \treturn --counter ;\n            94 | \u00fc\n            95 |\n            96 | void mCHAIN::swap(chainE * a , chainE * b)\n            97 | \u00e4\n            98 | \tif ( a->next NEQ b ]] b->prev NEQ a ]] a == 0 ]] b == 0)\n            99 | \t\treturn ;\n           100 |\n           101 | \tif ( first == a ) first = b ;\n           102 |\n           103 | \tif ( last == b) last = a ;\n           104 |\n           105 | \tif ( a->prev ) a->prev->next = b ;\n           106 | \tif ( b->next ) b->next->prev = a ;\n           107 |\n           108 | \tb->prev = a->prev ;\n           109 | \ta->next = b->next ;\n           110 | \tb->next = a;\n           111 | \ta->prev = b ;\n           112 | \u00fc\n           113 |\n           114 |\n           115 | chainE* mCHAIN::goNext()\n           116 | \u00e4\n           117 | \tif ( pgo )\n           118 | \t\tpgo = pgo->next;\n           119 | \treturn pgo;\n           120 |\n           121 | \u00fc\n           122 |\n           123 | chainE* mCHAIN::goPrev()\n           124 | \u00e4\n           125 | \tif ( pgo)\n           126 | \t\tpgo = pgo->prev;\n           127 | \treturn pgo;\n           128 | \u00fc\n           129 | chainE* mCHAIN::goFirst()\n           130 | \u00e4\n           131 | \tpgo = first;\n           132 | \treturn pgo;\n           133 | \u00fc\n           134 | chainE* mCHAIN::goLast()\n           135 | \u00e4\n           136 | \tpgo = last;\n           137 | \treturn pgo;\n           138 | \u00fc\n           139 |\n           140 | chainE* mCHAIN::go(int n)\n           141 | \u00e4\n           142 | \tpgo = first;\n           143 | \twhile ((--n)>0 && pgo)\n           144 | \t\u00e4\n           145 | \t\tpgo = pgo->next;\n           146 | \t\u00fc\n           147 | \treturn pgo;\n           148 | \u00fc\n           149 |\n           150 |\n           151 |\n           152 | chainE * mCHAIN::search(const char * id,size_t length)\n           153 | \u00e4\n           154 | \tif (length==0)\n           155 | \t\tlength=strlen(id);\n           156 | \tfor( chainE * c = first ; c ; c = c->next)\n           157 | \t\tif (id && length >= c->chainEidl && memcmp(id,c->chainEid,c->chainEidl) == 0) return c;\n           158 | \treturn 0;\n           159 | \u00fc\n           160 |\n           161 | chainE * mCHAIN::searchEQ(const char * id,size_t length)\n           162 | \u00e4\n           163 | \tif (length==0)\n           164 | \t\tlength=strlen(id);\n           165 | \tfor( chainE * c = first ; c ; c = c->next)\n           166 | \t\tif (id &&  strcmp(id,c->chainEid) == 0) return c;\n           167 | \treturn 0;\n           168 | \u00fc\n           169 |\n           170 | chainE * mCHAIN::search(const mvsSTRING & s)\n           171 | \u00e4\n           172 | \tint sl = s.lengthOf();\n           173 | \tfor(chainE * c = first; c ; c = c->next)\n           174 | \t\tif ( sl == c->chainEidl && memcmp((char*)s,c->chainEid,sl) == 0)\n           175 | \t\t\treturn c;\n           176 | \treturn 0;\n           177 | \u00fc\n           178 |\n           179 | void mCHAIN::sort(long int direction = 1)\n           180 | \u00e4\n           181 | \tlong int ind  = 1 ;\n           182 | \tchainE   * a ;\n           183 |\n           184 | \twhile(ind)\n           185 | \t\u00e4 ind = 0;\n           186 |\n           187 | \tfor(a = first ; a && a->next;)\n           188 | \t\u00e4\n           189 |\n           190 | \t\tif ( idcmp(a,a->next)*direction > 0)\n           191 | \t\t\u00e4 ind = 1;\n           192 | \t\tswap(a,a->next);\u00fc\n           193 | \t\ta = a->next ;\n           194 | \t\u00fc\n           195 | \t\u00fc\n           196 | \u00fc\n           197 |\n           198 | void mCHAIN::print_all_ids()\n           199 | \u00e4\n           200 | \tCHAINITER iter(*this);\n           201 | \tchainE * c ;\n           202 | \twhile ( (c = iter()) NEQ 0)\n           203 | \t\tputs(c->chainEid);\n           204 | \u00fc\n           205 |\n           206 |\n           207 | void mCHAIN::print()\n           208 | \u00e4\n           209 | \tCHAINITER iter(*this);\n           210 | \tchainE * c ;\n           211 | \twhile ( (c = iter()) NEQ 0)\n           212 | \t\tc->print();\n           213 | \u00fc\n           214 |\n           215 | long int SORTEDmCHAIN::add(chainE *nc,chainE *,long int)\n           216 | \u00e4\n           217 | \tif ( first == 0)\u00e4counter = 1; first = last = nc ;\u00fc\n           218 | \telse\n           219 | \t\u00e4\n           220 | \t\tint comp;\n           221 | \t\tint h = counter;\n           222 | \t\tint l = 1;\n           223 | \t\tint m ;\n           224 | \t\tchainE * a;\n           225 | \t\twhile (h>l)\n           226 | \t\t\u00e4\n           227 | \t\t\tm = l+(h-l)/2;\n           228 | \t\t\ta = go(m);\n           229 | \t\t\tcomp = idcmp(nc,a);\n           230 | \t\t\tif ( comp > 0 )  l = m+1;\n           231 | \t\t\telse if ( comp < 0 ) h= m-1;\n           232 | \t\t\telse if ( comp == 0 )\n           233 | \t\t\t\treturn 0;\n           234 | \t\t\t// return mCHAIN::add(nc,a,int(unique));\n           235 | \t\t\u00fc\n           236 | \t\ta = go(l);\n           237 | \t\tcomp= idcmp(nc,a);\n           238 | \t\tif ( comp )\n           239 | \t\t\treturn mCHAIN::add(nc,a,comp?comp:unique);\n           240 | \t\telse return 0;\n           241 |\n           242 | \t\u00fc\n           243 | \treturn counter;\n           244 | \u00fc\n           245 |\n           246 |\n           247 | mHASH::mHASH(int h):mCHAIN()\n           248 | \u00e4\n           249 | \tpi = 0;\n           250 | \thash\t= h;\n           251 | \ttable =(chainE * *)malloc(h*sizeof(chainE *));\n           252 | \tmemset(table,0,h*sizeof(chainE *));\n           253 | \u00fc\n           254 |\n           255 | mHASH::\u00dfmHASH()\n           256 | \u00e4\n           257 | \tif (table)\n           258 | \t\u00e4\n           259 | \t\tfor(int i =0;i<hash;i++)\n           260 | \t\t\twhile(table\u00c4i\u00dc)\n           261 | \t\t\t\u00e4\n           262 | \t\t\t\tpgo = table\u00c4i\u00dc;\n           263 | \t\t\t\ttable\u00c4i\u00dc= table\u00c4i\u00dc->next;\n           264 | \t\t\t\tdelete pgo;\n           265 | \t\t\t\u00fc\n           266 | \t\t\tfree(table);\n           267 | \t\t\ttable = NULL;\n           268 | \t\u00fc\n           269 | \u00fc\n           270 |\n           271 | long int mHASH::add(chainE * c)\n           272 | \u00e4\n           273 | \tint i = hashCode(c)%hash;\n           274 | \tif (table\u00c4i\u00dc)\n           275 | \t\u00e4\n           276 | \t\tc->next=table\u00c4i\u00dc;\n           277 | \t\tc->prev = NULL;\n           278 | \t\ttable\u00c4i\u00dc->prev=c;\n           279 | \t\ttable\u00c4i\u00dc = c;\n           280 | \t\u00fc\n           281 | \telse\n           282 | \t\ttable\u00c4i\u00dc = c;\n           283 | \treturn i;\n           284 | \u00fc\n           285 |\n           286 | chainE * mHASH::search(chainE *c)\n           287 | \u00e4\n           288 | \tint i = hashCode(c)%hash;\n           289 | \tchainE *n = table\u00c4i\u00dc;\n           290 | \twhile(n)\n           291 | \t\tif(idcmp(c,n)==0)\n           292 | \t\t\tbreak;\n           293 | \t\telse\n           294 | \t\t\tn = n->next;\n           295 | \treturn n;\n           296 | \u00fc\n           297 |\n           298 | long int mHASH::del(chainE * c)\n           299 | \u00e4\n           300 | \tint i = hashCode(c)%hash;\n           301 | \tif (c->prev)\n           302 | \t\tc->prev->next = c->next;\n           303 | \tif (c->next)\n           304 | \t\tc->next->prev= c->prev;\n           305 | \tif (c==table\u00c4i\u00dc)\n           306 | \t\u00e4\n           307 | \t\tif (table\u00c4i\u00dc = c->next)\n           308 | \t\t\ttable\u00c4i\u00dc->prev = NULL;\n           309 | \t\u00fc\n           310 | \treturn i;\n           311 | \u00fc\n           312 |\n           313 | chainE * mHASH::next()\n           314 | \u00e4\n           315 | \tif (pgo)\n           316 | \t\tpgo = pgo->next;\n           317 | \tfor(;pgo==NULL&&pi<hash;pi++)\n           318 | \t\tpgo=table\u00c4pi\u00dc;\n           319 | \tif(pgo==NULL)\n           320 | \t\tpi = 0;\n           321 | \treturn pgo;\n           322 | \u00fc\n           323 |\n           324 | int idcmp(chainE * a, chainE * b)\n           325 | \u00e4\n           326 | \tint comp;\n           327 | \tif ( a == 0 && b == 0) return 0;\n           328 | \telse if ( a == 0) return -1;\n           329 | \telse if ( b == 0) return 1;\n           330 |\n           331 | \tif ( a->chainEidl == b->chainEidl)\n           332 | \t\treturn memcmp(a->chainEid,b->chainEid,a->chainEidl);\n           333 | \telse\n           334 | \t\tif ( a->chainEidl < b->chainEidl)\n           335 | \t\t\u00e4comp = memcmp(a->chainEid,b->chainEid,a->chainEidl); return comp?comp :-1;\u00fc\n           336 | \t\tcomp = memcmp(a->chainEid,b->chainEid,b->chainEidl);\n           337 | \t\treturn comp ? comp : +1;\n           338 | \u00fc\n0                                   * * * * *   E N D   O F   S O U R C E   * * * * *\n-\n\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(MCHAIN)'                      30.11.12 08:25:41\n0                                    * * * * *   I N C L U D E S   * * * * *\n     1  =  //'ESA.PRJ.CBTDSSN.HPP(ISISDEF)'\n     2  =  //'CEE.SCEEH.H(STDLIB)'\n     3  =  //'CEE.SCEEH.H(FEATURES)'\n     4  =  //'CEE.SCEEH.H(BUILTINS)'\n     5  =  //'CEE.SCEEH.H(STDDEF)'\n     6  =  //'CEE.SCEEH.H(STRING)'\n     7  =  //'CEE.SCEEH.H(STRINGS)'\n     8  =  //'CEE.SCEEH.SYS.H(TYPES)'\n     9  =  //'ESA.PRJ.CBTDSSN.HPP(MCHAIN)'\n    10  =  //'ESA.PRJ.CBTDSSN.HPP(MVSBASE)'\n    11  =  //'ESA.PRJ.CBTDSSN.HPP(MERROR)'\n    12  =  //'ESA.PRJ.CBTDSSN.HPP(DSNAMEUT)'\n    13  =  //'CEE.SCEEH.H(ASSERT)'\n    14  =  //'CEE.SCEEH.H(STDIO)'\n-                                 * * * * *   E N D   O F   I N C L U D E S   * * * * *\n0\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(MCHAIN)'                      30.11.12 08:25:41\n-                           * * * * *   M E S S A G E   S U M M A R Y   * * * * *\n0TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL\n                (U)       (S)         (E)        (W)          (I)\n     0           0         0           0          0            0\n0                    * * * * *   E N D   O F   M E S S A G E   S U M M A R Y   * * * * *\n0                        * * * * *   E N D   O F   C O M P I L A T I O N   * * * * *\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MERROR": {"ttr": 2715, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(MERROR)'                      30.11.12 08:25:43\n0                                      * * * * *   P R O L O G   * * * * *\n    Compiler options. . . . . . . :AGGRCOPY(NOOVERLAP)             ANSIALIAS       ARCH(7)         ARGPARSE        NOASCII\n                                  :NOATTRIBUTE     ASSERT(RESTRICT)                BITFIELD(UNSIGNED)              CHARS(UNSIGNED)\n                                  :NOCOMPACT       NOCOMPRESS      CVFT            NODFP           DIGRAPH         DLL(CALLBACKANY)\n                                  :ENUMSIZE(SMALL) NOEVENTS        EXECOPS         EXH             NOEXPMAC        NOEXPORTALL\n                                  :NOFASTTEMPINC   FLAG(I)         NOGOFF          GONUMBER        HALT(16)\n                                  :NOHGPR(NOPRESERVE)              NOHOT           NOIGNERRNO      ILP32           NOINITAUTO\n                                  :NOINLRPT        NOLIBANSI       NOLIST          LONGNAME        NOMAKEDEP       NOMARGINS\n                                  :MAXMEM(2097152) MEMORY          NAMEMANGLING(zOSV1R2)           NESTINC(255)    OBJECT\n                                  :OBJECTMODEL(COMPAT)             NOOE            NOOFFSET        OPTIMIZE(2)     PLIST(HOST)\n                                  :NOPORT          NOPPONLY        PREFETCH        REDIR           NOREPORT        ROSTRING\n                                  :ROCONST         RTTI(ALL)       NOSEQUENCE      NOSHOWINC       NOSHOWMACROS    SOURCE\n                                  :SKIPSRC(SHOW)   SPILL(3600)     START           NOSTATICINLINE  STRICT\n                                  :NOSTRICT_INDUCTION              TARGET(LE,CURRENT)              TEMPLATEDEPTH(300)\n                                  :NOTEMPLATEREGISTRY              TEMPLATERECOMPILE               TERMINAL        TEST(HOOK)\n                                  :TMPLPARSE(NO)   TUNE(7)         UNROLL(AUTO)    UTF             NOWARN0X        NOWARN64\n                                  :NOWSIZEOF       NOXREF\n                                  :NOCICS\n                                  :NOCONVLIT\n                                  :NOCSECT\n                                  :DEBUG(FORMAT(ISD),LEVEL(0),HOOK(NOLINE,NOBLOCK,NOPATH,CALL,FUNC),NOSYMBOL)\n                                  :DEFINE(__OS390__=1,_POSIX_SOURCE=1,_XOPEN_SOURCE_EXTENDED=1,MU_STANDALONE=1,ISIS_PF_MU=1)\n                                  :FLOAT(HEX,FOLD,NOMAF,AFP(NOVOLATILE)) ROUND(Z)\n                                  :NOHALTONMSG\n                                  :INFO(LAN)\n                                  :INLINE(AUTO,NOREPORT,100,1000)\n                                  :NOIPA\n                                  :KEYWORD(bool,explicit,export,false,mutable,namespace,true,typename,using,restrict,__restrict__,\n                                   __restrict,_Pragma,__alignof__,__asm__,__attribute__,__const__,__extension__,__volatile__,\n                                   __inline__,__signed__,__typeof__,__I,_Complex,__complex__,__real__,__imag__)\n                                  :NOKEYWORD(char16_t,char32_t,decltype,static_assert,typeof)\n                                  :LANGLVL(ANONSTRUCT,ANONUNION,ANSIFOR,ANSISINIT,NOAUTOTYPEDEDUCTION,C99VLA,C99__FUNC__,\n                                   NOC99LONGLONG,NOC99PREPROCESSOR,NOCOMPATRVALUEBINDING,NODBCS,NODECLTYPE,NODELEGATINGCTORS,\n                                   DEPENDENTBASELOOKUP,NODOLLARINNAMES,EMPTYSTRUCT,NOEXTENDEDFRIEND,NOEXTENDEDINTEGERSAFE,\n                                   EXTERNTEMPLATE,ILLPTOM,IMPLICITINT,NOINLINENAMESPACE,LIBEXT,LONGLONG,NONEWEXCP,OFFSETNONPOD,\n                                   NOOLDDIGRAPH,OLDFRIEND,NOOLDMATH,NOOLDSTR,OLDTEMPACC,NOOLDTMPLALIGN,OLDTMPLSPEC,NOSTATIC_ASSERT,\n                                   NOTEMPSASLOCALS,NOTEXTAFTERENDIF,GNU_LABELVALUE,GNU_COMPUTEDGOTO,TRAILENUM,TYPEDEFCLASS,NOUCS,\n                                   VARARGMACROS,NOVARIADICTEMPLATES,GNU_INCLUDE_NEXT,ZEROEXTARRAY,NOC99COMPLEX,NOC99COMPLEXHEADER,\n                                   NOGNU_COMPLEX,GNU_SUFFIXIJ)\n                                  :LOCALE(DE_DE.IBM-273)\n                                  :NOLSEARCH\n                                  :OPTFILE(DD:OPTFILE)\n                                  :NORTCHECK\n                                  :SEARCH(//'CEE.SCEEH.+', //'CBC.SCLBH.+', CEE.SCEEH.+, CBC.SCLBH.+, DD:USERLIB)\n                                  :NOSERVICE\n                                  :NOSQL\n                                  :NOSUPPRESS\n                                  :TEMPINC(./tempinc)\n                                  :NOXPLINK(NOBACKCHAIN,NOCALLBACK,GUARD,OSCALL(UPSTACK),NOSTOREARGS)\n    Version Macros. . . . . . . . : __COMPILER_VER__=0x410D0000\n                                  : __LIBREL__=0x410D0000\n                                  : __TARGET_LIB__=0x410D0000\n    Source margins. . . . . . . . :\n      Varying length. . . . . . . : 1 - 32760\n      Fixed length. . . . . . . . : 1 - 32760\n    Sequence columns. . . . . . . :\n      Varying length. . . . . . . : none\n      Fixed length. . . . . . . . : none\n    Locale name . . . . . . . . . : DE_DE.IBM-273\n    Code set. . . . . . . . . . . : IBM-273\n    Listing name. . . . . . . . . : DD:SYSCPRT\n0                                 * * * * *   E N D   O F   P R O L O G   * * * * *\n-\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(MERROR)'                      30.11.12 08:25:43\n-\n                                       * * * * *   S O U R C E   * * * * *\n0            1 | /*******************************************************************************\n             2 | * Copyright ISIS Papyrus Technologies Limited\n             3 | *-------------------------------------------------------------------------------\n             4 | * File:              $Source: /data/cvs/src/mvs/merror.cpp,v $\n             5 | *-------------------------------------------------------------------------------\n             6 | * Description:\n             7 | *   ???\n             8 | *******************************************************************************/\n             9 |\n            10 |\n            11 | #include \"isisdef.h\"\n            12 | #include <stdlib.h>\n            13 | #include \"merror.hpp\"\n            14 | #include <assert.h>\n            15 |\n            16 | #ifndef mERRORP\n            17 | #define mERRORP mERROR *\n            18 | #endif\n            19 |\n            20 | mERRORPSTACK mErrorPStack(512);\n            21 |\n            22 | mERRORPSTACK::mERRORPSTACK(long int size)\n            23 | \u00e4\n            24 |    ip = 0; max = size;\n            25 |    sp = new mERRORP\u00c4size\u00dc ;\n            26 |\n            27 | \u00fc\n            28 |\n            29 | void mERRORPSTACK::push(mERRORP value)\n            30 | \u00e4\n            31 |   assert( ip < max);\n            32 |   sp\u00c4ip++\u00dc = value;\n            33 | \u00fc\n            34 |\n            35 | mERRORP mERRORPSTACK::examine()\n            36 | \u00e4\n            37 |    return( ip ? sp\u00c4ip-1\u00dc : (mERRORP ) 0 );\n            38 | \u00fc\n            39 |\n            40 | int mERRORPSTACK::callNextHandler(int)\n            41 | \u00e4\n            42 | //for(int i=ip-1;i>=0;i--)\n            43 | //if ( sp\u00c4i\u00dc && sp\u00c4i\u00dc->handler) return (sp\u00c4i\u00dc->handler)(code);\n            44 |   return 0;\n            45 | \u00fc\n            46 |\n            47 | mERRORP mERRORPSTACK::pop()\n            48 | \u00e4\n            49 |   if (ip>0) return sp\u00c4--ip\u00dc;\n            50 |   else return (mERRORP) 0 ;\n            51 |\n            52 | \u00fc\n            53 | void  mERRORPSTACK::reset()\n            54 |\n            55 | \u00e4\n            56 |   ip = 0;\n            57 | \u00fc\n            58 |\n            59 | mERRORPSTACK::\u00dfmERRORPSTACK()\n            60 | \u00e4\n            61 |  delete \u00c4\u00dc sp;\n            62 | \u00fc\n            63 |\n            64 |\n            65 | int mERROR::max_rc = 0;\n            66 |\n            67 |\n            68 | mERROR::mERROR()\n            69 | \u00e4\n            70 |     err = 0;\n            71 |     handler =0;\n            72 | //  mErrorPStack.push(this);\n            73 | \u00fc\n            74 |\n            75 | mERROR::mERROR(int (*h)(int) )\n            76 | \u00e4\n            77 |      err = 0;\n            78 |      handler = h;\n            79 | //   mErrorPStack.push(this);\n            80 | \u00fc\n            81 |\n            82 |\n            83 | int mERROR::error(char *,ERROR_ACTION a)\n            84 |  \u00e4\n            85 |   switch(a)\n            86 |     \u00e4\n            87 |      case Warning:\n            88 |     \t\t max_rc = 4;\n            89 |           return 0;\n            90 |        case Abort:\n            91 |           exit(8);\n            92 |        default:\n            93 |           exit(8);\n            94 |     \u00fc\n            95 |     return 0;\n            96 | \u00fc\n0                                   * * * * *   E N D   O F   S O U R C E   * * * * *\n-\n\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(MERROR)'                      30.11.12 08:25:43\n0                                    * * * * *   I N C L U D E S   * * * * *\n     1  =  //'ESA.PRJ.CBTDSSN.HPP(ISISDEF)'\n     2  =  //'CEE.SCEEH.H(STDLIB)'\n     3  =  //'CEE.SCEEH.H(FEATURES)'\n     4  =  //'CEE.SCEEH.H(BUILTINS)'\n     5  =  //'CEE.SCEEH.H(STDDEF)'\n     6  =  //'ESA.PRJ.CBTDSSN.HPP(MERROR)'\n     7  =  //'CEE.SCEEH.H(ASSERT)'\n     8  =  //'CEE.SCEEH.H(STDIO)'\n     9  =  //'CEE.SCEEH.SYS.H(TYPES)'\n0                                 * * * * *   E N D   O F   I N C L U D E S   * * * * *\n0\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(MERROR)'                      30.11.12 08:25:43\n-                           * * * * *   M E S S A G E   S U M M A R Y   * * * * *\n0TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL\n                (U)       (S)         (E)        (W)          (I)\n     0           0         0           0          0            0\n0                    * * * * *   E N D   O F   M E S S A G E   S U M M A R Y   * * * * *\n0                        * * * * *   E N D   O F   C O M P I L A T I O N   * * * * *\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MISC": {"ttr": 2719, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n15694A01 V1.13 z/OS XL C++                //'ESA.PRJ.CBTDSSN.CPP(MISC)'                      30.11.12 08:25:46\n0                                      * * * * *   P R O L O G   * * * * *\n    Compiler options. . . . . . . :AGGRCOPY(NOOVERLAP)             ANSIALIAS       ARCH(7)         ARGPARSE        NOASCII\n                                  :NOATTRIBUTE     ASSERT(RESTRICT)                BITFIELD(UNSIGNED)              CHARS(UNSIGNED)\n                                  :NOCOMPACT       NOCOMPRESS      CVFT            NODFP           DIGRAPH         DLL(CALLBACKANY)\n                                  :ENUMSIZE(SMALL) NOEVENTS        EXECOPS         EXH             NOEXPMAC        NOEXPORTALL\n                                  :NOFASTTEMPINC   FLAG(I)         NOGOFF          GONUMBER        HALT(16)\n                                  :NOHGPR(NOPRESERVE)              NOHOT           NOIGNERRNO      ILP32           NOINITAUTO\n                                  :NOINLRPT        NOLIBANSI       NOLIST          LONGNAME        NOMAKEDEP       NOMARGINS\n                                  :MAXMEM(2097152) MEMORY          NAMEMANGLING(zOSV1R2)           NESTINC(255)    OBJECT\n                                  :OBJECTMODEL(COMPAT)             NOOE            NOOFFSET        OPTIMIZE(2)     PLIST(HOST)\n                                  :NOPORT          NOPPONLY        PREFETCH        REDIR           NOREPORT        ROSTRING\n                                  :ROCONST         RTTI(ALL)       NOSEQUENCE      NOSHOWINC       NOSHOWMACROS    SOURCE\n                                  :SKIPSRC(SHOW)   SPILL(3600)     START           NOSTATICINLINE  STRICT\n                                  :NOSTRICT_INDUCTION              TARGET(LE,CURRENT)              TEMPLATEDEPTH(300)\n                                  :NOTEMPLATEREGISTRY              TEMPLATERECOMPILE               TERMINAL        TEST(HOOK)\n                                  :TMPLPARSE(NO)   TUNE(7)         UNROLL(AUTO)    UTF             NOWARN0X        NOWARN64\n                                  :NOWSIZEOF       NOXREF\n                                  :NOCICS\n                                  :NOCONVLIT\n                                  :NOCSECT\n                                  :DEBUG(FORMAT(ISD),LEVEL(0),HOOK(NOLINE,NOBLOCK,NOPATH,CALL,FUNC),NOSYMBOL)\n                                  :DEFINE(__OS390__=1,_POSIX_SOURCE=1,_XOPEN_SOURCE_EXTENDED=1,MU_STANDALONE=1,ISIS_PF_MU=1)\n                                  :FLOAT(HEX,FOLD,NOMAF,AFP(NOVOLATILE)) ROUND(Z)\n                                  :NOHALTONMSG\n                                  :INFO(LAN)\n                                  :INLINE(AUTO,NOREPORT,100,1000)\n                                  :NOIPA\n                                  :KEYWORD(bool,explicit,export,false,mutable,namespace,true,typename,using,restrict,__restrict__,\n                                   __restrict,_Pragma,__alignof__,__asm__,__attribute__,__const__,__extension__,__volatile__,\n                                   __inline__,__signed__,__typeof__,__I,_Complex,__complex__,__real__,__imag__)\n                                  :NOKEYWORD(char16_t,char32_t,decltype,static_assert,typeof)\n                                  :LANGLVL(ANONSTRUCT,ANONUNION,ANSIFOR,ANSISINIT,NOAUTOTYPEDEDUCTION,C99VLA,C99__FUNC__,\n                                   NOC99LONGLONG,NOC99PREPROCESSOR,NOCOMPATRVALUEBINDING,NODBCS,NODECLTYPE,NODELEGATINGCTORS,\n                                   DEPENDENTBASELOOKUP,NODOLLARINNAMES,EMPTYSTRUCT,NOEXTENDEDFRIEND,NOEXTENDEDINTEGERSAFE,\n                                   EXTERNTEMPLATE,ILLPTOM,IMPLICITINT,NOINLINENAMESPACE,LIBEXT,LONGLONG,NONEWEXCP,OFFSETNONPOD,\n                                   NOOLDDIGRAPH,OLDFRIEND,NOOLDMATH,NOOLDSTR,OLDTEMPACC,NOOLDTMPLALIGN,OLDTMPLSPEC,NOSTATIC_ASSERT,\n                                   NOTEMPSASLOCALS,NOTEXTAFTERENDIF,GNU_LABELVALUE,GNU_COMPUTEDGOTO,TRAILENUM,TYPEDEFCLASS,NOUCS,\n                                   VARARGMACROS,NOVARIADICTEMPLATES,GNU_INCLUDE_NEXT,ZEROEXTARRAY,NOC99COMPLEX,NOC99COMPLEXHEADER,\n                                   NOGNU_COMPLEX,GNU_SUFFIXIJ)\n                                  :LOCALE(DE_DE.IBM-273)\n                                  :NOLSEARCH\n                                  :OPTFILE(DD:OPTFILE)\n                                  :NORTCHECK\n                                  :SEARCH(//'CEE.SCEEH.+', //'CBC.SCLBH.+', CEE.SCEEH.+, CBC.SCLBH.+, DD:USERLIB)\n                                  :NOSERVICE\n                                  :NOSQL\n                                  :NOSUPPRESS\n                                  :TEMPINC(./tempinc)\n                                  :NOXPLINK(NOBACKCHAIN,NOCALLBACK,GUARD,OSCALL(UPSTACK),NOSTOREARGS)\n    Version Macros. . . . . . . . : __COMPILER_VER__=0x410D0000\n                                  : __LIBREL__=0x410D0000\n                                  : __TARGET_LIB__=0x410D0000\n    Source margins. . . . . . . . :\n      Varying length. . . . . . . : 1 - 32760\n      Fixed length. . . . . . . . : 1 - 32760\n    Sequence columns. . . . . . . :\n      Varying length. . . . . . . : none\n      Fixed length. . . . . . . . : none\n    Locale name . . . . . . . . . : DE_DE.IBM-273\n    Code set. . . . . . . . . . . : IBM-273\n    Listing name. . . . . . . . . : DD:SYSCPRT\n0                                 * * * * *   E N D   O F   P R O L O G   * * * * *\n-\n15694A01 V1.13 z/OS XL C++                //'ESA.PRJ.CBTDSSN.CPP(MISC)'                      30.11.12 08:25:46\n-\n                                       * * * * *   S O U R C E   * * * * *\n0            1 | /*******************************************************************************\n             2 | * Copyright ISIS Papyrus Technologies Limited\n             3 | *-------------------------------------------------------------------------------\n             4 | * File:              $Source: /data/cvs/src/mvs/misc.cpp,v $\n             5 | *-------------------------------------------------------------------------------\n             6 | * Description:\n             7 | *   ???\n             8 | *******************************************************************************/\n             9 |\n            10 | #include \"isisdef.h\"\n            11 | #include <stdlib.h>\n            12 | #include <string.h>\n            13 | #include <strings.h>\n            14 |\n            15 | //#include \"pcsdll.hpp\"\n            16 | #ifdef    OWN_STDIO\n            17 | #include \"stdio.hpp\"\n            18 | #else\n            19 | #include <stdio.h>\n            20 | #endif\n            21 |\n            22 | #include <stdlib.h>\n            23 | #include <time.h>\n            24 | #include <math.h>\n            25 | #include \"mvsbase.hpp\"\n            26 | #if defined(MU_STANDALONE) == 0\n            27 | #include \"ebcdicut.hpp\"\n            28 | #else\n            29 | #include \"mvsebcdi.hpp\"\n            30 | #endif\n            31 | #include \"misc.hpp\"\n            32 | #include \"mvsbase.hpp\"\n            33 | #ifdef CALL_PROJECT\n            34 | #include \"project.hpp\"\n            35 | #endif\n            36 |\n            37 | //#if defined(ISIS_PF_MI) == 1 && defined(ISIS_DEBUG) == 1 //szm20050316 debug flag, off from stdio\n            38 | #if (defined(ISIS_PF_MI) == 1 ]] defined(ISIS_PF_MU) == 1) && defined(ISIS_DEBUG) == 1 //szm20050316\n            38 |  debug flag, off from stdio\n            39 | int _isis_pf_mi_debug = 1;\n            40 | #endif\n            41 | #if defined(ISIS_PF_HOST) ]] defined (ISIS_PF_MU)\n            42 |   #if defined(OWN_STDIO) == 0\n            43 |       #include <assert.h>\n            44 |   #endif\n            45 |   #include <ctype.h>\n            46 |   #include <regex.h>\n            47 |   #include <locale.h>\n            48 |   #include <sys/time.h> //ZA040225\n            49 |   #include \"casmif.hpp\" //ENQ DEQ\n            50 |   #include <unistd.h>\n            51 | #endif\n            52 |\n            53 | #ifndef MU_STANDALONE\n            54 | #include \"systems.hpp\" //KV20040915 for stricmp\n            55 | #else\n            56 | #include <strings.h>\n            57 | #ifndef stricmp\n            58 |     #define stricmp strcmpi\n            59 | #endif\n            60 | #ifndef strcmpi\n            61 | #define strcmpi strcasecmp\n            62 | #endif\n            63 | #define MVSBatch() 1\n            64 | #endif\n            65 |\n            66 | #define UKEY_MAJOR \"STRTUKEY\"\n            67 | #define UKEY_MINOR \"ISIS_UKEY\"\n            68 | static unsigned char tUK\u00c4\u00dc =\n            69 |      \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\u00d6\n            70 |          \"0123456789#$\"\u00d6\n            71 |          \"abcdefghijklmnopqrstuvwxyz\";\n            72 |\n            73 |\n            74 | void formatTime(char * to,int l,char * format)\n            75 | \u00e4\n            76 |    time_t t;\n            77 |    struct tm * tmp;\n            78 |    time(&t);\n            79 |    tmp = localtime(&t);\n            80 |    strftime(to,l-1,format,tmp);\n            81 | \u00fc\n            82 |\n            83 | char *strrev(char *s)  //szm 20020927\n            84 | \u00e4\n            85 |     if (s==NULL]]strlen(s)==0) return s;\n            86 |     char c;\n            87 |     int i , j;\n            88 |     for(i =0, j =strlen(s)-1; i<j;i++,j--)\n            89 |     \u00e4\n            90 |       c    =  s\u00c4i\u00dc;\n            91 |       s\u00c4i\u00dc =  s\u00c4j\u00dc;\n            92 |       s\u00c4j\u00dc = c;\n            93 |     \u00fc\n            94 |     return(s);\n            95 | \u00fc\n            96 |\n            97 |\n            98 | unsigned long cvb(unsigned long f , unsigned long length)\n            99 |  \u00e4\n           100 |   unsigned long r = 0;\n           101 |     unsigned long m = 1;\n           102 |     for(int i = 0;f && i<length;i++)\n           103 |     \u00e4\n           104 |      r += (f&0x0000000fL)*m;\n           105 |        m *= 10;\n           106 |        f = f>>4;\n           107 |     \u00fc\n           108 |     return r;\n           109 | \u00fc\n           110 |\n           111 |\n           112 | unsigned long cvd(unsigned long f)\n           113 | \u00e4\n           114 |  unsigned long r = 0;\n           115 |    for ( int i = 0;f && i<8;i++)\n           116 |    \u00e4\n           117 |     r ]= ((f%10)<<(i*4));\n           118 |       f = f/10;\n           119 |    \u00fc\n           120 |    return r;\n           121 | \u00fc\n           122 |\n           123 |\n           124 | //KV20050725 dump functions moved to isislib/isismisc.cpp\n           125 | //SZM20050810 If it is CICSAPPL , there is no isismisc\n           126 | //SZM20090629 If standalone  , there is no isismisc\n           127 | //#if defined(ISIS_PF_MU) == 0 ]] defined(MU_STANDALONE) == 0\n           128 | #if defined(CICSAPPL)   ]] defined(MU_STANDALONE)\n           129 | int dump(FILE * dumpf,char * id,void * from,int l)\n           130 | \u00e4\n           131 |     return (dump(dumpf,id,(char *)from,l));\n           132 | \u00fc\n           133 | int dump(FILE *f,char * id,char * p,int l)\n           134 | \u00e4\n           135 |     int i , o;\n           136 |     fprintf(f,\"%s\u00d6n\u00d6n\",id);\n           137 |\n           138 |     for(o = 0;o <((l/16)+1)*16;o+=16)\n           139 |     \u00e4\n           140 |         fprintf(f,\"%4.4lx:\",o);\n           141 |         for(i = o;i<o+16;i++)\n           142 |         \u00e4\n           143 |             if ( i < l )\n           144 |             \u00e4\n           145 |                 fprintf(f,\"%2.2x\",p\u00c4i\u00dc& 0xFF );\n           146 |                 if (i%4 == 3) fprintf(f,\" \");\n           147 |\n           148 |             \u00fc\n           149 |\n           150 |             else\n           151 |             \u00e4\n           152 |                 if ( i%4 == 3) fprintf(f,\" \");\n           153 |                 fprintf(f,\" \");\n           154 |             \u00fc\n           155 |         \u00fc\n           156 |         fprintf(f,\" \");\n           157 |\n           158 |         for(i = o;i<o+16;i++)\n           159 |         \u00e4\n           160 |             if ( i < l )\n           161 |                 fprintf(f,\"%c\",i_isprint(p\u00c4i\u00dc)? p\u00c4i\u00dc:'.');\n           162 |             else fprintf(f,\" \");\n           163 |         \u00fc\n           164 |         fprintf(f,\" \");\n           165 |\n           166 |         // print ebcdic -> ascii  converted chars on ascii platforms,\n           167 |         //        ascii -> ebcdic converted chars on ebcdic platforms\n           168 |         for(i = o;i<o+16;i++)\n           169 |         \u00e4\n           170 |             if ( i < l )\n           171 |             \u00e4\n           172 | #if ' ' == 0x20\n           173 |                 char c=etoa(p\u00c4i\u00dc);\n           174 | #else\n           175 |                 char c=atoe(p\u00c4i\u00dc);\n           176 | #endif\n           177 |                 fprintf(f,\"%c\",i_isprint(c) ? c : '.');\n           178 |             \u00fc\n           179 |         \u00fc\n           180 |         fprintf(f,\"\u00d6n\");\n           181 |     \u00fc\n           182 |     return l;\n           183 | \u00fc\n           184 |\n           185 | int dump(char *f,int o,char * p,int l)\n           186 | \u00e4\n           187 |     int i;\n           188 |\n           189 |     sprintf(f,\"%4.4lx:\",o);\n           190 |     f+=strlen(f);\n           191 |     for(i = o;i<o+16;i++)\n           192 |     \u00e4\n           193 |         if ( i < l )\n           194 |         \u00e4\n           195 |             sprintf(f,\"%2.2x\",p\u00c4i\u00dc& 0xFF );\n           196 |             f+=strlen(f);\n           197 |             if (i%4 == 3)\n           198 |             \u00e4\n           199 |                 sprintf(f,\" \");f+=strlen(f);\n           200 |             \u00fc\n           201 |\n           202 |         \u00fc\n           203 |\n           204 |         else\n           205 |         \u00e4\n           206 |             if ( i%4 == 3)\n           207 |             \u00e4\n           208 |                 sprintf(f,\" \"); f+=strlen(f);\n           209 |             \u00fc\n           210 |             sprintf(f,\" \");f+=strlen(f);\n           211 |         \u00fc\n           212 |     \u00fc\n           213 |     sprintf(f,\" \");\n           214 |     f+=strlen(f);\n           215 |     for(i = o;i<o+16;i++)\n           216 |     \u00e4\n           217 |         if ( i < l )\n           218 |             sprintf(f,\"%c\",i_isprint(p\u00c4i\u00dc)? p\u00c4i\u00dc:'.');\n           219 |         else sprintf(f,\" \");\n           220 |         f+=strlen(f);\n           221 |     \u00fc\n           222 |     sprintf(f,\" \");\n           223 |     f+=strlen(f);\n           224 |\n           225 |     // print ebcdic -> ascii  converted chars on ascii platforms,\n           226 |     //        ascii -> ebcdic converted chars on ebcdic platforms\n           227 |     for(i = o;i<o+16;i++)\n           228 |     \u00e4\n           229 |         if ( i < l ) \u00e4\n           230 | #if ' ' == 0x20\n           231 |             char c=etoa(p\u00c4i\u00dc);\n           232 | #else\n           233 |             char c=atoe(p\u00c4i\u00dc);\n           234 | #endif\n           235 |             sprintf(f,\"%c\",i_isprint(c) ? c : '.');\n           236 |             f+=strlen(f);\n           237 |         \u00fc\n           238 |     \u00fc\n           239 |     sprintf(f,\"\u00d6n\");\n           240 |\n           241 |     return l;\n           242 | \u00fc\n           243 |\n           244 |\n           245 | long toInt(unsigned char  * p, int l)\n           246 | \u00e4\n           247 |     char  t\u00c44\u00dc;\n           248 |     memset(t,'\u00d600',4);\n           249 |     if ( l > 4) l =l%4;\n           250 |     int i;\n           251 | #if defined(ISIS_PF_HOST) ]] defined(ISIS_PF_MU)\n           252 |     for(i=3;l;l--,i--) t\u00c4i\u00dc = p\u00c4l-1\u00dc;\n           253 |     return int(*(int *)t);\n           254 | #else\n           255 |     int ll = l;\n           256 |     for(i=0;l;i++,l--) t\u00c4i\u00dc = p\u00c4l-1\u00dc;\n           257 |     if( ll == 1) return int(*(UCHAR*)t) ;\n           258 |     else if ( ll == 2) return short(*(short*)t);\n           259 |     else  return long(*(long *)t);\n           260 | #endif\n           261 | \u00fc\n           262 |\n           263 | long toInt(char  * p, int l)\n           264 |   \u00e4\n           265 |   return(toInt((unsigned char *)p,l));\n           266 |   \u00fc\n           267 |\n           268 |\n           269 | int fromInt(char  * to,long v,unsigned int  l)\n           270 |   \u00e4\n           271 |   return fromInt(to,v,int(l));\n           272 |   \u00fc\n           273 |\n           274 | int fromInt(char  * to,long v,int l )\n           275 | \u00e4\n           276 |\n           277 |  //assert(l<=sizeof( long)); ?????\n           278 | #if defined(ISIS_PF_HOST) ]] defined(ISIS_PF_MU)\n           279 |     memcpy(to,((char * )&v)+(sizeof( int)-l),l);\n           280 | #else\n           281 |     char * t = (char *)&v;\n           282 |     for(int i = l;i;i--)to\u00c4i-1\u00dc = *(t++);\n           283 | #endif\n           284 |     return (l>=sizeof(long));\n           285 | \u00fc\n           286 |\n           287 | int Char2Hex(char * c)\n           288 | \u00e4\n           289 |    int v = 0;\n           290 |    for(int i = 2;i; i--)\n           291 |    \u00e4    v<<=4;\n           292 |       if ( *c >= '0' && *c <= '9' ) v += *c-'0';\n           293 |       else if ( *c >= 'A' && *c <= 'F' ) v += *c-'A'+10;\n           294 |       else if ( *c >= 'a' && *c <= 'f' ) v += *c-'a'+10;\n           295 |       c++;\n           296 |    \u00fc\n           297 |    return v;\n           298 | \u00fc\n           299 |\n           300 | char * Hex2Char(char c)\n           301 | \u00e4\n           302 |    static char r\u00c43\u00dc;\n           303 |    memset(r,null,sizeof(r));\n           304 |    int v = (c&0xf0)>>4;\n           305 |    if ( v >= 0 && v <= 9 ) r\u00c40\u00dc = char('0'+v);\n           306 |    else r\u00c40\u00dc = char('A'+v-10);\n           307 |    v = (c&0x0f);\n           308 |    if ( v >= 0 && v <= 9 ) r\u00c41\u00dc = char('0'+v);\n           309 |    else r\u00c41\u00dc = char('A'+v-10);   return r;\n           310 | \u00fc\n           311 |\n           312 | int isnull(char * s,int l)\n           313 | \u00e4\n           314 |  if ( l == 0 ) l = int(strlen(s));\n           315 |  for(l;l>0;l--)if ( s\u00c4l-1\u00dc  ) return 0;\n           316 |  return 1;\n           317 | \u00fc\n           318 |\n           319 | int roundToInt(double f)\n           320 | \u00e4\n           321 |    double w;\n           322 |    if ( modf(f,&w) >= 0.5 ) return (int(f)+1);\n           323 |    else return int(f);\n           324 | \u00fc\n           325 |\n           326 |\n           327 | static char ts\u00c430\u00dc;\n           328 | char  * getTimeStemp()\n           329 | \u00e4\n           330 |\n           331 |   formatTime(ts,sizeof(ts),\"%Y:%m:%d %H:%M:%S\");\n           332 |   return ts;\n           333 | \u00fc\n           334 |\n           335 | static char *days\u00c47\u00dc  =\u00e4 \"Mon\", \"Tue\", \"Wen\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"\u00fc;\n           336 | static char *ldays\u00c47\u00dc =\u00e4 \"Monday\",\n           337 |              \"Tuesday\",\n           338 |              \"Wednesday\",\n           339 |              \"Thursday\",\n           340 |              \"Friday\",\n           341 |              \"Saturday\",\n           342 |              \"Sunday\" \u00fc;\n           343 | static char *month\u00c412\u00dc = \u00e4 \"Jan\", \"Feb\", \"Mar\",\n           344 |              \"Apr\", \"May\", \"Jun\",\n           345 |              \"Jul\", \"Aug\", \"Sep\",\n           346 |              \"Oct\", \"Nov\", \"Dec\"\u00fc;\n           347 |\n           348 | int DatetoTm(tm & t, char * st)\n           349 | \u00e4\n           350 |   char * term = \",:- \";\n           351 |   char * c;\n           352 |   char * day = strtok(st,term);\n           353 |\n           354 |   int i = 0;\n           355 |   for(i = 7;i;i--)if ( stricmp(days\u00c4i-1\u00dc,day) == 0 ) break;\n           356 |   if ( i == 0 )\n           357 |    for(i = 7;i;i--)if (strcmp(ldays\u00c4i-1\u00dc,day) == 0 ) break;\n           358 |\n           359 |   t.tm_wday = i-1;\n           360 |\n           361 |   c = strtok(0,term);\n           362 |   if ( isdigit(*c) )\n           363 |   \u00e4\n           364 |     t.tm_mday = atoi(c);\n           365 |     c = strtok(0,term);\n           366 |     for( i = 12;i;i--) if ( stricmp(month\u00c4i-1\u00dc,c) == 0 ) break ;\n           367 |     t.tm_mon = i;\n           368 |     i = atoi(strtok(0,term));\n           369 |     t.tm_year = i>1900? i-1900 : i;\n           370 |     t.tm_hour = atoi(strtok(0,term));\n           371 |     t.tm_min = atoi(strtok(0,term));\n           372 |     t.tm_sec = atoi(strtok(0,term));\n           373 |     t.tm_yday = 0;\n           374 |    \u00fc\n           375 |    else\n           376 |    \u00e4\n           377 |     for( i = 12;i;i--) if ( stricmp(month\u00c4i-1\u00dc,c) == 0 ) break ;\n           378 |     t.tm_mon = i;\n           379 |     t.tm_mday = atoi(strtok(0,term));\n           380 |     t.tm_hour = atoi(strtok(0,term));\n           381 |     t.tm_min = atoi(strtok(0,term));\n           382 |     t.tm_sec = atoi(strtok(0,term));\n           383 |     t.tm_year = atoi(strtok(0,term));    t.tm_yday = 0;\n           384 |   \u00fc\n           385 |   return 0;\n           386 | \u00fc\n           387 |\n           388 | char * DatetoString()\n           389 | \u00e4\n           390 |   static char dmvsSTRING\u00c464\u00dc;\n           391 |   time_t now;\n           392 |   time(&now);\n           393 |   strcpy(dmvsSTRING,asctime(gmtime(&now)));\n           394 |   strcpy(dmvsSTRING+strlen(dmvsSTRING)-1,\" GMT\");\n           395 |   return dmvsSTRING;\n           396 | \u00fc\n           397 |\n           398 | char * DatetoString(tm t,char * st)\n           399 | \u00e4\n           400 |   strcpy(st,asctime(&t));\n           401 |   strcpy(st+strlen(st)-1,\" GMT\");\n           402 |   return st;\u00fc\n           403 | #endif\n           404 | //#endif //ifndef ISIS_PF_MU\n           405 |\n           406 |  static char dateInIBM\u00c413\u00dc;\n           407 |\n           408 |  void formatIBMTime(char * to,int l,char * format)\n           409 | \u00e4\n           410 |    time_t t;\n           411 |    struct tm * tmp;\n           412 |    time(&t);\n           413 |    tmp = localtime(&t);\n           414 |    strftime(to,l-1,format,tmp);\n           415 | \u00fc\n           416 |\n           417 |  char * DatetoIBM(char * from)\n           418 |  \u00e4\n           419 |    memset(dateInIBM,0,sizeof(dateInIBM));\n           420 |    char today\u00c412\u00dc;\n           421 |    if ( from == NULL)\n           422 |    \u00e4\n           423 |       from = today;\n           424 |       formatIBMTime(today,sizeof(today),\"%d.%m.%Y\");\n           425 |    \u00fc\n           426 |    int mv\u00c412\u00dc = \u00e4 31,28,31,30,31,30,31,31,30,31,30,31\u00fc;\n           427 |    mvsSTRING d, m, y;\n           428 |    mvsSTRING date(from);\n           429 |    date.parse(d,\".\",m,\".\",y);\n           430 |    int id = atoi(d);\n           431 |    int im = atoi(m);\n           432 |    int iy = atoi(y);\n           433 |    if ( id > 31 ]] im < 1 ]] im > 12 )\n           434 |      return (char *)NULL;\n           435 |\n           436 |    int leapyear ;\n           437 |    if ((iy%4) ]] ((iy%100) == 0  && (iy%400))) leapyear = 0 ;\n           438 |      else leapyear = 1;\n           439 |    int dd = 0;\n           440 |    for(int i = 0;i < (im-1);i++)dd += mv\u00c4i\u00dc;\n           441 |    if ( leapyear && im > 2) dd++;\n           442 |    dd +=id;\n           443 |    if (iy < 100) iy += 2000;\n           444 |    sprintf(dateInIBM,\"%d     \",iy*1000+dd);\n           445 |    return (dateInIBM);\n           446 |  \u00fc\n           447 |\n           448 | void getUniqueKEY(char * t)\n           449 | \u00e4\n           450 |\n           451 |\n           452 |   char _dummy=0, stck\u00c49\u00dc;\n           453 |\n           454 |   mvs()->Clock(stck); //szm20040914\n           455 |   int  i, w1 , w2;\n           456 |   _dummy = 0;\n           457 |\n           458 |   w1 = *(int *)(stck-1);\n           459 |   w2 = *(int *)(stck+3);\n           460 |   for (i = 0;i<5;i++)\n           461 |   \u00e4\n           462 |   t\u00c4i\u00dc = tUK\u00c4w1&0x1f\u00dc; w1 = w1>>5;\n           463 |   \u00fc\n           464 |   for (i = 5;i<10;i++)\n           465 |   \u00e4\n           466 |   t\u00c4i\u00dc = tUK\u00c4w2&0x1f\u00dc; w2 = w2>>5;\n           467 |   \u00fc\n           468 |   t\u00c410\u00dc = _dummy;\n           469 |\n           470 | \u00fc\n           471 |\n           472 | void getUniqueLongKEY(char * t)\n           473 | \u00e4\n           474 |   char _dummy, stck\u00c49\u00dc;\n           475 |\n           476 |   mvs()->Clock(stck); //szm20040914\n           477 |   int w1 = *(int *)(stck);\n           478 |   int w2 = *(int *)(stck+4);\n           479 |   sprintf(t,\"%8.8x%8.8x\",w1,w2);\n           480 |   t\u00c416\u00dc = 0;\n           481 | \u00fc\n           482 |\n           483 |\n           484 | //KV20040824 still needed?\n           485 | //char * StrTok(char * mvsSTRING,char * termtokens)\n           486 | //\u00e4\n           487 | //  char * c = strtok(mvsSTRING,termtokens);\n           488 | //  return ( c ? c :\"\");\n           489 | //\u00fc\n           490 |\n           491 | int strcmpiList(const char * comp,const char *list\u00c4\u00dc)\n           492 | \u00e4\n           493 |    for (int i = 0;list\u00c4i\u00dc;i++)\n           494 |    if ( stricmp(comp,list\u00c4i\u00dc) == 0)\n           495 |    return 0;\n           496 |    return 1;\n           497 | \u00fc\n           498 |\n           499 | int strcmpiList(const char * comp,const char *list\u00c4\u00dc,int & i)\n           500 | \u00e4\n           501 |    for ( i = 0;list\u00c4i\u00dc;i++)\n           502 |    if ( stricmp(comp,list\u00c4i\u00dc) == 0)\n           503 |     return 0;\n           504 |    return 1;\n           505 | \u00fc\n           506 |\n           507 | //KV20040825 strnicmp replaced by strnicmp\n           508 | #if 0\n           509 | int strnicmp(const char * s1,const char * s2,int l)\n           510 | \u00e4\n           511 |    for(int i = 0; i<l; i++)\n           512 |    if ( tolower(s1\u00c4i\u00dc) - tolower(s2\u00c4i\u00dc) )\n           513 |    return (tolower(s1\u00c4i\u00dc) - tolower(s2\u00c4i\u00dc));\n           514 |    return 0;\n           515 | \u00fc\n           516 | #endif\n           517 |\n           518 | int stcpma(char * mvsSTRING ,const char * pattern)\n           519 | \u00e4\n           520 |    regex_t    preg;\n           521 |    size_t     nmatch = 1;\n           522 |    regmatch_t pmatch\u00c41\u00dc;\n           523 |    int rc = 0;\n           524 |    if ( strlen(pattern) == 0 ]] strcmp(pattern,\"*\") == 0)\n           525 |     return 1;\n           526 |    //char patt\u00c416\u00dc;\n           527 |    char patt\u00c4512\u00dc; //ZA060607 for VSAM\n           528 |    char * p = patt;\n           529 |    int j = strlen(pattern);\n           530 |    int k = j - 1; //index of last nonzero char\n           531 | \tbool usepattern = false;//ToDo36320\n           532 |    for(int i = 0;i<=j;i++)\n           533 |    \u00e4\n           534 |    \t  char c = pattern\u00c4i\u00dc;\n           535 |       if (c == '*' ]] c == '?')\n           536 | \t\t\u00e4\n           537 |           *p++= '.';\n           538 | \t\t\tusepattern = true; //ToDo36320\n           539 | \t\t\u00fc\n           540 |       else if (c == '.' ]] c == '$')\n           541 |       \u00e4\n           542 |       \tif (i < k) //not last char\n           543 |       \t\u00e4\n           544 |       \t\t*p++= '\u00d6xe0'; // backslash\n           545 |       \t\t*p++= c; //no special character\n           546 |       \t\u00fc\n           547 |       \telse\n           548 |       \t    *p++= c; //last char, remains special\n           549 |       \u00fc\n           550 |         else\n           551 |         *p++ = c;\n           552 |    \u00fc\n           553 | \tif (usepattern)//ToDo36320\n           554 | \t\u00e4\n           555 |    if (regcomp(&preg,patt,REG_EXTENDED))\n           556 |     return 0;\n           557 |    else\n           558 |    \u00e4\n           559 |     rc = NOT regexec(&preg,mvsSTRING, nmatch, pmatch, 0);\n           560 |       regfree(&preg);\n           561 |       return rc;\n           562 |    \u00fc\n           563 | \u00fc\n           564 | \telse //ToDo36320\n           565 | \t\u00e4\n           566 | \t\tchar * copy = strdup(mvsSTRING);\n           567 | \t\tif (strchr(copy,' '))\n           568 | \t\t\t* strchr(copy,' ') = 0;\n           569 | \t\tint rc = | strcmp(copy,pattern);\n           570 | \t\tfree(copy);\n           571 | \t\treturn (rc);//ToDo36320\n           572 | \t\u00fc\n           573 | \u00fc\n           574 |\n           575 | mvsSTRING makemvsSTRING(char * s,int l)\n           576 | \u00e4\n           577 |  for(l--;l;l--)\n           578 |  if ( s\u00c4l-1\u00dc NEQ ' ')  break;\n           579 |  s\u00c4l\u00dc = null;\n           580 |  return mvsSTRING(s);\n           581 | \u00fc\n           582 | char * StrDup(char * o)\n           583 | \u00e4\n           584 |   char * rs =(char *)0;\n           585 |   if ( o == (char *)0 ) return rs;\n           586 |   rs = new char\u00c4strlen(o)+1\u00dc;\n           587 |   strcpy(rs,o);\n           588 |   return rs;\n           589 | \u00fc\n           590 |\n           591 | #ifndef ISIS_PF_MU\n           592 | #if defined(CICSAPPL)\n           593 | char bit_rotate(unsigned char from)\n           594 |  \u00e4\n           595 |  static unsigned char rtab\u00c4256\u00dc =\n           596 |  \u00e4\n           597 |     0x00, 0x80, 0x40, 0xc0, 0x20, 0xA0, 0x60, 0xe0,\n           598 |     0x10, 0x90, 0x50, 0xd0, 0x30, 0xb0, 0x70, 0xf0,  // 0x00 bis 0x0f\n           599 |     0x08, 0x88, 0x48, 0xc8, 0x28, 0xA8, 0x68, 0xe8,\n           600 |     0x18, 0x98, 0x58, 0xd8, 0x38, 0xb8, 0x78, 0xf8,  // 0x10 bis 0x1f\n           601 |     0x04, 0x84, 0x44, 0xc4, 0x24, 0xA4, 0x64, 0xe4,\n           602 |     0x14, 0x94, 0x54, 0xd4, 0x34, 0xb4, 0x74, 0xf4,  // 0x20 bis 0x2f\n           603 |     0x0c, 0x8c, 0x4c, 0xcc, 0x2c, 0xAc, 0x6c, 0xec,\n           604 |     0x1c, 0x9c, 0x5c, 0xdc, 0x3c, 0xbc, 0x7c, 0xfc,  // 0x30 bis 0x3f\n           605 |     0x02, 0x82, 0x42, 0xc2, 0x22, 0xA2, 0x62, 0xe2,\n           606 |     0x12, 0x92, 0x52, 0xd2, 0x32, 0xb2, 0x72, 0xf2,  // 0x40 bis 0x4f\n           607 |     0x0a, 0x8a, 0x4a, 0xca, 0x2a, 0xAa, 0x6a, 0xea,\n           608 |     0x1a, 0x9a, 0x5a, 0xda, 0x3a, 0xba, 0x7a, 0xfa,  // 0x50 bis 0x5f\n           609 |     0x06, 0x86, 0x46, 0xc6, 0x26, 0xA6, 0x66, 0xe6,\n           610 |     0x16, 0x96, 0x56, 0xd6, 0x36, 0xb6, 0x76, 0xf6,  // 0x60 bis 0x6f\n           611 |     0x0e, 0x8e, 0x4e, 0xce, 0x2e, 0xAe, 0x6e, 0xee,\n           612 |     0x1e, 0x9e, 0x5e, 0xde, 0x3e, 0xbe, 0x7e, 0xfe,  // 0x70 bis 0x7f\n           613 |     0x01, 0x81, 0x41, 0xc1, 0x21, 0xA1, 0x61, 0xe1,\n           614 |     0x11, 0x91, 0x51, 0xd1, 0x31, 0xb1, 0x71, 0xf1,  // 0x80 bis 0x8f\n           615 |     0x09, 0x89, 0x49, 0xc9, 0x29, 0xA9, 0x69, 0xe9,\n           616 |     0x19, 0x99, 0x59, 0xd9, 0x39, 0xb9, 0x79, 0xf9,  // 0x90 bis 0x9f\n           617 |     0x05, 0x85, 0x45, 0xc5, 0x25, 0xA5, 0x65, 0xe5,\n           618 |     0x15, 0x95, 0x55, 0xd5, 0x35, 0xb5, 0x75, 0xf5,  // 0xa0 bis 0xaf\n           619 |     0x0d, 0x8d, 0x4d, 0xcd, 0x2d, 0xAd, 0x6d, 0xed,\n           620 |     0x1d, 0x9d, 0x5d, 0xdd, 0x3d, 0xbd, 0x7d, 0xfd,  // 0xb0 bis 0xbf\n           621 |     0x03, 0x83, 0x43, 0xc3, 0x23, 0xA3, 0x63, 0xe3,\n           622 |     0x13, 0x93, 0x53, 0xd3, 0x33, 0xb3, 0x73, 0xf3,  // 0xc0 bis 0xcf\n           623 |     0x0b, 0x8b, 0x4b, 0xcb, 0x2b, 0xAb, 0x6b, 0xeb,\n           624 |     0x1b, 0x9b, 0x5b, 0xdb, 0x3b, 0xbb, 0x7b, 0xfb,  // 0xd0 bis 0xdf\n           625 |     0x07, 0x87, 0x47, 0xc7, 0x27, 0xA7, 0x67, 0xe7,\n           626 |     0x17, 0x97, 0x57, 0xd7, 0x37, 0xb7, 0x77, 0xf7,  // 0xe0 bis 0xef\n           627 |     0x0f, 0x8f, 0x4f, 0xcf, 0x2f, 0xAf, 0x6f, 0xef,\n           628 |     0x1f, 0x9f, 0x5f, 0xdf, 0x3f, 0xbf, 0x7f, 0xff,  // 0xf0 bis 0xff\n           629 |  \u00fc;\n           630 |    return rtab\u00c4from\u00dc;\n           631 | \u00fc\n           632 | #endif\n           633 | #endif //ifndef ISIS_PF_MU\n           634 |\n           635 | /*\n           636 | void swab(char *source, char *target,int len) //ZA030918 Metacode needs it\n           637 | \u00e4\n           638 |    int ii;\n           639 |    for (ii=0; ii<len; ii=ii+2)\n           640 |    \u00e4\n           641 |       target\u00c4ii\u00dc = source\u00c4ii+1\u00dc;\n           642 |       target\u00c4ii+1\u00dc = source\u00c4ii\u00dc;\n           643 |    \u00fc\n           644 |    if(ungerade(len))\n           645 |    \u00e4 target\u00c4len\u00dc=source\u00c4len\u00dc;\n           646 |      target\u00c4len+1\u00dc='\u00d60'; \u00fc\n           647 |    else target\u00c4len\u00dc = '\u00d60';\n           648 |    return;\n           649 | \u00fc\n           650 | */\n           651 |\n           652 |\n           653 | void swab(char *source, char *target,int len) //ZA030924 Metacode needs it\n           654 | \u00e4\n           655 |    int ii;\n           656 |    for (ii=0; ii<len-1; ii=ii+2)\n           657 |    \u00e4\n           658 |       target\u00c4ii\u00dc = source\u00c4ii+1\u00dc;\n           659 |       target\u00c4ii+1\u00dc = source\u00c4ii\u00dc;\n           660 |    \u00fc\n           661 |    return;\n           662 | \u00fc\n           663 |\n           664 | /*\n           665 | unsigned int ungerade(int len)\n           666 | \u00e4\n           667 |    if (len%2) return TRUE;\n           668 |       else return FALSE;\n           669 | \u00fc\n           670 | */\n           671 |\n           672 | #ifndef __TEST__\n           673 | #define __TEST__ 1\n           674 | #endif\n           675 |\n           676 | char __test__ = __TEST__ ;\n0                                   * * * * *   E N D   O F   S O U R C E   * * * * *\n-\n\n15694A01 V1.13 z/OS XL C++                //'ESA.PRJ.CBTDSSN.CPP(MISC)'                      30.11.12 08:25:46\n0                                    * * * * *   I N C L U D E S   * * * * *\n     1  =  //'ESA.PRJ.CBTDSSN.HPP(ISISDEF)'\n     2  =  //'CEE.SCEEH.H(STDLIB)'\n     3  =  //'CEE.SCEEH.H(FEATURES)'\n     4  =  //'CEE.SCEEH.H(BUILTINS)'\n     5  =  //'CEE.SCEEH.H(STDDEF)'\n     6  =  //'CEE.SCEEH.H(STRING)'\n     7  =  //'CEE.SCEEH.H(STRINGS)'\n     8  =  //'CEE.SCEEH.SYS.H(TYPES)'\n     9  =  //'CEE.SCEEH.H(STDIO)'\n    10  =  //'CEE.SCEEH.H(TIME)'\n    11  =  //'CEE.SCEEH.H(MATH)'\n    12  =  //'ESA.PRJ.CBTDSSN.HPP(MVSBASE)'\n    13  =  //'ESA.PRJ.CBTDSSN.HPP(MERROR)'\n    14  =  //'ESA.PRJ.CBTDSSN.HPP(DSNAMEUT)'\n    15  =  //'CEE.SCEEH.H(ASSERT)'\n    16  =  //'ESA.PRJ.CBTDSSN.HPP(MVSEBCDI)'\n    17  =  //'ESA.PRJ.CBTDSSN.HPP(MISC)'\n    18  =  //'CEE.SCEEH.H(ASSERT)'\n    19  =  //'CEE.SCEEH.H(CTYPE)'\n    20  =  //'CEE.SCEEH.H(REGEX)'\n    21  =  //'CEE.SCEEH.H(LOCALE)'\n    22  =  //'CEE.SCEEH.SYS.H(TIME)'\n    23  =  //'ESA.PRJ.CBTDSSN.HPP(CASMIF)'\n    24  =  //'ESA.PRJ.CBTDSSN.HPP(ASMIF)'\n    25  =  //'CEE.SCEEH.H(UNISTD)'\n    26  =  //'CEE.SCEEH.H(INTTYPES)'\n    27  =  //'CEE.SCEEH.H(STDINT)'\n-                                 * * * * *   E N D   O F   I N C L U D E S   * * * * *\n0\n15694A01 V1.13 z/OS XL C++                //'ESA.PRJ.CBTDSSN.CPP(MISC)'                      30.11.12 08:25:46\n-                           * * * * *   M E S S A G E   S U M M A R Y   * * * * *\n0TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL\n                (U)       (S)         (E)        (W)          (I)\n     0           0         0           0          0            0\n0                    * * * * *   E N D   O F   M E S S A G E   S U M M A R Y   * * * * *\n0                        * * * * *   E N D   O F   C O M P I L A T I O N   * * * * *\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MSGMGR": {"ttr": 2723, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(MSGMGR)'                      30.11.12 08:25:49\n0                                      * * * * *   P R O L O G   * * * * *\n    Compiler options. . . . . . . :AGGRCOPY(NOOVERLAP)             ANSIALIAS       ARCH(7)         ARGPARSE        NOASCII\n                                  :NOATTRIBUTE     ASSERT(RESTRICT)                BITFIELD(UNSIGNED)              CHARS(UNSIGNED)\n                                  :NOCOMPACT       NOCOMPRESS      CVFT            NODFP           DIGRAPH         DLL(CALLBACKANY)\n                                  :ENUMSIZE(SMALL) NOEVENTS        EXECOPS         EXH             NOEXPMAC        NOEXPORTALL\n                                  :NOFASTTEMPINC   FLAG(I)         NOGOFF          GONUMBER        HALT(16)\n                                  :NOHGPR(NOPRESERVE)              NOHOT           NOIGNERRNO      ILP32           NOINITAUTO\n                                  :NOINLRPT        NOLIBANSI       NOLIST          LONGNAME        NOMAKEDEP       NOMARGINS\n                                  :MAXMEM(2097152) MEMORY          NAMEMANGLING(zOSV1R2)           NESTINC(255)    OBJECT\n                                  :OBJECTMODEL(COMPAT)             NOOE            NOOFFSET        OPTIMIZE(2)     PLIST(HOST)\n                                  :NOPORT          NOPPONLY        PREFETCH        REDIR           NOREPORT        ROSTRING\n                                  :ROCONST         RTTI(ALL)       NOSEQUENCE      NOSHOWINC       NOSHOWMACROS    SOURCE\n                                  :SKIPSRC(SHOW)   SPILL(3600)     START           NOSTATICINLINE  STRICT\n                                  :NOSTRICT_INDUCTION              TARGET(LE,CURRENT)              TEMPLATEDEPTH(300)\n                                  :NOTEMPLATEREGISTRY              TEMPLATERECOMPILE               TERMINAL        TEST(HOOK)\n                                  :TMPLPARSE(NO)   TUNE(7)         UNROLL(AUTO)    UTF             NOWARN0X        NOWARN64\n                                  :NOWSIZEOF       NOXREF\n                                  :NOCICS\n                                  :NOCONVLIT\n                                  :NOCSECT\n                                  :DEBUG(FORMAT(ISD),LEVEL(0),HOOK(NOLINE,NOBLOCK,NOPATH,CALL,FUNC),NOSYMBOL)\n                                  :DEFINE(__OS390__=1,_POSIX_SOURCE=1,_XOPEN_SOURCE_EXTENDED=1,MU_STANDALONE=1,ISIS_PF_MU=1)\n                                  :FLOAT(HEX,FOLD,NOMAF,AFP(NOVOLATILE)) ROUND(Z)\n                                  :NOHALTONMSG\n                                  :INFO(LAN)\n                                  :INLINE(AUTO,NOREPORT,100,1000)\n                                  :NOIPA\n                                  :KEYWORD(bool,explicit,export,false,mutable,namespace,true,typename,using,restrict,__restrict__,\n                                   __restrict,_Pragma,__alignof__,__asm__,__attribute__,__const__,__extension__,__volatile__,\n                                   __inline__,__signed__,__typeof__,__I,_Complex,__complex__,__real__,__imag__)\n                                  :NOKEYWORD(char16_t,char32_t,decltype,static_assert,typeof)\n                                  :LANGLVL(ANONSTRUCT,ANONUNION,ANSIFOR,ANSISINIT,NOAUTOTYPEDEDUCTION,C99VLA,C99__FUNC__,\n                                   NOC99LONGLONG,NOC99PREPROCESSOR,NOCOMPATRVALUEBINDING,NODBCS,NODECLTYPE,NODELEGATINGCTORS,\n                                   DEPENDENTBASELOOKUP,NODOLLARINNAMES,EMPTYSTRUCT,NOEXTENDEDFRIEND,NOEXTENDEDINTEGERSAFE,\n                                   EXTERNTEMPLATE,ILLPTOM,IMPLICITINT,NOINLINENAMESPACE,LIBEXT,LONGLONG,NONEWEXCP,OFFSETNONPOD,\n                                   NOOLDDIGRAPH,OLDFRIEND,NOOLDMATH,NOOLDSTR,OLDTEMPACC,NOOLDTMPLALIGN,OLDTMPLSPEC,NOSTATIC_ASSERT,\n                                   NOTEMPSASLOCALS,NOTEXTAFTERENDIF,GNU_LABELVALUE,GNU_COMPUTEDGOTO,TRAILENUM,TYPEDEFCLASS,NOUCS,\n                                   VARARGMACROS,NOVARIADICTEMPLATES,GNU_INCLUDE_NEXT,ZEROEXTARRAY,NOC99COMPLEX,NOC99COMPLEXHEADER,\n                                   NOGNU_COMPLEX,GNU_SUFFIXIJ)\n                                  :LOCALE(DE_DE.IBM-273)\n                                  :NOLSEARCH\n                                  :OPTFILE(DD:OPTFILE)\n                                  :NORTCHECK\n                                  :SEARCH(//'CEE.SCEEH.+', //'CBC.SCLBH.+', CEE.SCEEH.+, CBC.SCLBH.+, DD:USERLIB)\n                                  :NOSERVICE\n                                  :NOSQL\n                                  :NOSUPPRESS\n                                  :TEMPINC(./tempinc)\n                                  :NOXPLINK(NOBACKCHAIN,NOCALLBACK,GUARD,OSCALL(UPSTACK),NOSTOREARGS)\n    Version Macros. . . . . . . . : __COMPILER_VER__=0x410D0000\n                                  : __LIBREL__=0x410D0000\n                                  : __TARGET_LIB__=0x410D0000\n    Source margins. . . . . . . . :\n      Varying length. . . . . . . : 1 - 32760\n      Fixed length. . . . . . . . : 1 - 32760\n    Sequence columns. . . . . . . :\n      Varying length. . . . . . . : none\n      Fixed length. . . . . . . . : none\n    Locale name . . . . . . . . . : DE_DE.IBM-273\n    Code set. . . . . . . . . . . : IBM-273\n    Listing name. . . . . . . . . : DD:SYSCPRT\n0                                 * * * * *   E N D   O F   P R O L O G   * * * * *\n-\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(MSGMGR)'                      30.11.12 08:25:49\n-\n                                       * * * * *   S O U R C E   * * * * *\n0            1 | /*******************************************************************************\n             2 | * Copyright ISIS Papyrus Technologies Limited\n             3 | *-------------------------------------------------------------------------------\n             4 | * File:              $Source: /data/cvs/src/mvs/msgmgr.cpp,v $\n             5 | *-------------------------------------------------------------------------------\n             6 | * Description:\n             7 | *   ???\n             8 | *******************************************************************************/\n             9 |\n            10 | #ifdef ISIS_PF_MU\n            11 | #pragma csect(CODE,\"msgmgrmC\")\n            12 | #pragma csect(STATIC,\"msgmgrmS\")\n            13 | #pragma csect(TEST,\"msgmgrmT\")\n            14 | #endif\n            15 | #include \"isisdef.h\"\n            16 | #include <stdlib.h>\n            17 | #include <string.h>\n            18 | #include <strings.h>\n            19 | #ifdef OWN_STDIO\n            20 | #include \"stdio.hpp\"\n            21 | //#include \"iqvprj.hpp\"\n            22 | #endif\n            23 | #include \"mvsbase.hpp\"\n            24 | #include \"casmif.hpp\"\n            25 | #if defined(CICSAPPL) == 0 && defined(MU_STANDALONE) == 0\n            26 | #include \"isismisc.hpp\"\n            27 | #endif\n            28 | #include \"misc.hpp\"\n            29 | #include \"msgmgr.hpp\"\n            30 | #ifdef PANEL_ID\n            31 | #include \"panel.hpp\"\n            32 | #include \"cicbase.hpp\"\n            33 | #endif\n            34 | #include <dll.h>\n            35 | #include <stdlib.h>\n            36 | #include <stdio.h>\n            37 | #include <stdarg.h>\n            38 |\n            39 |\n            40 | namespace isis_ns_mvs\n            41 | \t\u00e4\n            42 | \t//KV20040216 protection exception in pas dll\n            43 | \t//???MessageTEXT * messagetext   = new MessageTEXT();\n            44 | \tMessageTEXT * messagetext   = 0;\n            45 | \tExternalTEXT * externaltext = 0;  //szm20060322\n            46 | \t/*--------------------------------------------------------------+\n            47 |\n            48 | \tMSGE rouines                                                 ]\n            49 | \t+--------------------------------------------------------------*/\n            50 |\n            51 |\n            52 |\n            53 | //#define ERROR_BUFF 512 szm20060504\n            54 | #define ERROR_BUFF 4096\n            55 | \tstatic char g_ebb\u00c4 ERROR_BUFF \u00dc;\n            56 | \tstatic char g_ebb_flag = 0;\n            57 |\n            58 |\n            59 | \tvoid * TEXTVER();\n            60 | \tMSGE * tCHARp(char * c ,int l)\n            61 | \t\t\u00e4 return new MSGE(c,l);\u00fc\n            62 | \tMSGE * tINT(int i,int l )\n            63 | \t\t\u00e4 return new MSGE(i,l); \u00fc\n            64 | \tMSGE * tSHORT(int i,int l )\n            65 | \t\t\u00e4 return new MSGE(i, l);\u00fc\n            66 | \tMSGE * tmvsSTRING( mvsSTRING & s,int l )\n            67 | \t\t\u00e4 return new MSGE(s,l); \u00fc\n            68 | \tMSGE * tHEX(int i ,int  l  )\n            69 | \t\t\u00e4 return new MSGE(i,l,msgfx);\u00fc\n            70 | \tMSGE * tHEX(char * c, int l)\n            71 | \t\t\u00e4 return new MSGE(c,l,msgfx);\u00fc\n            72 |\n            73 | \tMSGE::MSGE():length(0), type(msgundef),to(NULL)\u00e4\u00fc\n            74 | MSGE::MSGE(int i,int l, MSGEForm f):to(NULL)\n            75 | \t\u00e4\n            76 | \tmint = i;length = l; type = msgint;form = f;\n            77 | \t\u00fc\n            78 | MSGE::MSGE(short s,int l, MSGEForm f):to(NULL)\n            79 | \t\u00e4\n            80 | \tmshort = s; length = l; type = msgshort;form = f;\n            81 | \t\u00fc\n            82 | MSGE::MSGE(char * c,int l, MSGEForm f):to(NULL)\n            83 | \t\u00e4\n            84 | \tmcharp = c; if ( l == 0) l = int(strlen(c)); length = l;\n            85 | \ttype = msgcharp;\n            86 | \tform = f;\n            87 | \t\u00fc\n            88 | MSGE::MSGE(const mvsSTRING &s,int l,MSGEForm f):to(NULL)\n            89 | \t\u00e4\n            90 | \tmmvsSTRING = new mvsSTRING(s);\n            91 | \tif ( l == 0) l = int(mvsSTRING(s).lengthOf());\n            92 | \tlength = l;\n            93 | \ttype = msgmvsSTRING;\n            94 | \tform = f;\n            95 | \t\u00fc\n            96 | MSGE:: MSGE(char c):to(NULL)\n            97 | \t\u00e4\n            98 | \tmchar = c;\n            99 | \tlength = 1;\n           100 | \ttype = msgchar;\n           101 | \tform = msgfc;\n           102 | \t\u00fc\n           103 |\n           104 |\n           105 |\n           106 |\n           107 | /*--------------------------------------------------------------+\n           108 | ]                                                               ]\n           109 | ]  MSGE format                                                  ]\n           110 | ]                                                               ]\n           111 | +--------------------------------------------------------------*/\n           112 |\n           113 |\n           114 | char * MSGE::format()\n           115 | \t\u00e4\n           116 | \tchar * f;\n           117 | \tto = new char\u00c42*length+1\u00dc;//szm20050907 heap demage in uprun\n           118 |\n           119 |\n           120 | \tswitch(form)\n           121 | \t\t\u00e4\n           122 | \t\tcase msgfc: f = \"%c\";\n           123 | \t\t\tbreak;\n           124 | \t\tcase msgfd: f = \"%*d\";\n           125 | \t\t\tbreak;\n           126 | \t\tcase msgfs: f = \"%*s\";\n           127 | \t\t\tbreak;\n           128 | \t\tcase msgfx: f = \"x\u00d6\"%0*x\u00d6\"\";\n           129 | \t\t\tbreak;\n           130 | \t\t\u00fc\n           131 |\n           132 | \tswitch ( type)\n           133 | \t\t\u00e4\n           134 | \t\tcase msgshort:sprintf(to,f,length,mshort);\n           135 | \t\t\tbreak;\n           136 | \t\tcase msgint  :sprintf(to,f,length,mint);\n           137 | \t\t\tbreak;\n           138 | \t\tcase msgcharp:sprintf(to,f,length,mcharp);\n           139 | \t\t\tbreak;\n           140 | \t\tcase msgmvsSTRING: sprintf(to,f,length,(char * )(*mmvsSTRING));\n           141 | \t\t\tbreak;\n           142 | \t\tcase msgchar: sprintf(to,f,mchar);\n           143 | \t\t\tbreak;\n           144 | \t\t\u00fc\n           145 | \treturn to;\n           146 | \t\u00fc\n           147 |\n           148 |\n           149 | /*--------------------------------------------------------------+\n           150 | ]                                                               ]\n           151 | ]  TEXT class                                                   ]\n           152 | ]                                                               ]\n           153 | +--------------------------------------------------------------*/\n           154 |\n           155 |\n           156 | static TEXTENTRY Textvector\u00c4\u00dc =\n           157 | \t\u00e4\n           158 | #define  MESSAGE_TEXT\n           159 | #define t( a , b ) \u00e4 a , b \u00fc ,\n           160 | #include \"msgtext.hpp\"\n           161 | #undef t\n           162 | #undef   MESSAGE_TEXT\n           163 | \t\t\u00e40,0\u00fc\n           164 | \t\u00fc;\n           165 |\n           166 | int initMessageText()\n           167 |\n           168 | \t\t\u00e4\n           169 | \t\tif (messagetext==NULL)\n           170 | \t\t\tmessagetext = new MessageTEXT();\n           171 | \t\treturn 0;\n           172 | \t\t\u00fc\n           173 |\n           174 | MessageTEXT::MessageTEXT(char * fn ,char * logstream)\n           175 | \t\u00e4\n           176 | \tif ( fn)\n           177 | \t\t\u00e4\n           178 | \t\tmsgfilename = new char\u00c4strlen(fn)+1\u00dc;\n           179 | \t\tstrcpy(msgfilename,fn);\n           180 | \t\t\u00fc\n           181 | \telse msgfilename = 0;\n           182 | \tonlylogger = false;\n           183 | \tlogger = false; //szm20060410 init logger\n           184 | \tif (logstream)\n           185 | \t\t\u00e4\n           186 | \t\tif (mvs()->LoggerOpen(logstream))\n           187 | \t\t\tlogger = true;\n           188 | \t\telse\n           189 | \t\t\tlogger = false;\n           190 | \t\t\u00fc\n           191 | \tmsgfile = NULL; //szm20040602\n           192 | \tvector = Textvector;\n           193 | \tprintfv = 0;\n           194 | \ttimestemp = 1;\n           195 | \t\u00fc\n           196 |\n           197 | void MessageTEXT::setFileName(char * fn)\n           198 | \t\u00e4\n           199 | \tif ( fn)\n           200 | \t\t\u00e4\n           201 | \t\tmsgfilename = new char\u00c4strlen(fn)+1\u00dc;\n           202 | \t\tstrcpy(msgfilename,fn);\n           203 | \t\t\u00fc\n           204 | \telse msgfilename = 0;\n           205 | \t\u00fc\n           206 |\n           207 | void MessageTEXT::setLogger(const char *logstream)\n           208 | \t\u00e4\n           209 | \tif (logstream)\n           210 | \t\t\u00e4\n           211 | \t\tif (mvs()->LoggerOpen(logstream))\n           212 | \t\t\tlogger = true;\n           213 | \t\telse\n           214 | \t\t\tlogger = false;\n           215 | \t\t\u00fc\n           216 | \t\u00fc\n           217 |\n           218 | MessageTEXT::\u00dfMessageTEXT()\n           219 | \t\u00e4\n           220 | \tif (msgfile) fclose(msgfile); //szm20040602\n           221 | \tif (logger)  mvs()->LoggerClose();\n           222 | \tlogger = false;\n           223 | \tdelete \u00c4\u00dc msgfilename;\n           224 | \t\u00fc\n           225 |\n           226 | char * MessageTEXT::getText(int i)\n           227 | \t\u00e4\n           228 | \t// printf(\"Message %d \u00d6n\",i);\n           229 |\n           230 | \tTEXTENTRY * te = Textvector;\n           231 | \twhile (te->t && (te->i > 0)  )\n           232 | \t\t\u00e4\n           233 | \t\tif ( te->i == i )\n           234 | \t\t\t\u00e4\n           235 | \t\t\t//      printf(\"%s\u00d6n\",te->t);\n           236 | \t\t\treturn te->t;\n           237 | \t\t\t\u00fc\n           238 | \t\tte++;\n           239 | \t\t\u00fc\n           240 | \t// printf(\"Undefined message %d\u00d6n\",i );\n           241 | \tsprintf(deflt,\"Undefined message %d\u00d6n\",i );\n           242 | \treturn deflt;\n           243 |\n           244 | \t\u00fc\n           245 |\n           246 | int MessageTEXT::copyText(int i,char * to,int l)\n           247 | \t\u00e4\n           248 | \tchar   tm\u00c4ERROR_BUFF\u00dc;\n           249 | \tchar * from = getText(i);\n           250 | \tif (messagetext->getTimeStempFlag() )\n           251 | \t\t\u00e4\n           252 | \t\tchar tt\u00c432\u00dc;\n           253 | \t\tchar fm\u00c4\u00dc = \"%Y:%m:%d %H:%M:%S \";\n           254 | \t\tformatTime(tt,sizeof(tt),fm);\n           255 | \t\tstrcpy(tm,tt);\n           256 | \t\tstrcat(tm,from);\n           257 | \t\tfrom = tm;\n           258 | \t\t\u00fc\n           259 |\n           260 | \tint lf = strlen(from);\n           261 | \tif ( lf <= l)\n           262 | \t\tstrcpy(to,from);\n           263 | \telse\n           264 | \t\t\u00e4\n           265 | \t\tmemcpy(to,from,l-1);\n           266 | \t\tto\u00c4l-1\u00dc  = null;\n           267 | \t\t\u00fc\n           268 | \treturn ( l -lf );\n           269 | \t\u00fc\n           270 |\n           271 | char * MessageTEXT::print(char * t)\n           272 | \t\u00e4\n           273 | \tif (|onlylogger)\n           274 | \t\t\u00e4\n           275 | \t\tif ( msgfilename)\n           276 | \t\t\t\u00e4\n           277 | \t\t\tif (msgfile == NULL)\n           278 | \t\t\t\tmsgfile = fopen(msgfilename,\"wt,type=record\"); //szm20040907\n           279 | \t\t\tif (msgfile)\n           280 | \t\t\t\t\u00e4\n           281 |\n           282 | \t\t\t\t//fprintf(msgfile,\"%s\u00d6n\",t); szm20050710\n           283 | \t\t\t\tfputs(t,msgfile);\n           284 | \t\t\t\tfflush(msgfile);\n           285 | \t\t\t\t//fclose(msgfile); //szm20040602\n           286 | \t\t\t\t\u00fc\n           287 | \t\t\t\u00fc\n           288 | \t\tif ( printfv ) printfv(t);\n           289 | \t\telse\n           290 | \t\t\tputs(t);\n           291 | \t\t\u00fc\n           292 | \tif (logger)\n           293 | \t\tmvs()->Logger(t);\n           294 | \treturn t;\n           295 | \t\u00fc\n           296 |\n           297 | void MessageTEXT::setNumber(int n)\n           298 | \t\u00e4\n           299 | \tnumber = n;\n           300 | \tvi = 0;\n           301 | \tfor (int i=0;i<8;i++)v\u00c4i\u00dc = 0;\n           302 | \t\u00fc\n           303 |\n           304 |\n           305 | MessageTEXT&  MessageTEXT::operator<<(int i)\n           306 | \t\u00e4\n           307 | \tv\u00c4vi++\u00dc = tINT(i);\n           308 | \treturn * this;\n           309 | \t\u00fc\n           310 | #if 0   //szm20030513\n           311 | MessageTEXT&  MessageTEXT::operator<<(short i)\n           312 | \t\u00e4\n           313 | \tv\u00c4vi++\u00dc = tSHORT(i);\n           314 | \treturn * this;\n           315 | \t\u00fc\n           316 | #endif\n           317 | MessageTEXT&  MessageTEXT::operator<<(char *c)\n           318 | \t\u00e4\n           319 | \tv\u00c4vi++\u00dc = tCHARp(c);\n           320 | \treturn * this;\n           321 | \t\u00fc\n           322 |\n           323 | MessageTEXT&  MessageTEXT::operator<<(const mvsSTRING& s)\n           324 | \t\u00e4\n           325 | \tmvsSTRING temp = s;\n           326 | \tv\u00c4vi++\u00dc = tmvsSTRING(temp);\n           327 | \treturn * this;\n           328 | \t\u00fc\n           329 |\n           330 | MessageTEXT&  MessageTEXT::operator<<(void * p)\n           331 | \t\u00e4\n           332 | \tv\u00c4vi++\u00dc = tHEX((char *)p,8);\n           333 | \treturn * this;\n           334 | \t\u00fc\n           335 | char * MessageTEXT::operator<<(const EOL eol)\n           336 | \t\u00e4\n           337 | \tchar ebb\u00c4 ERROR_BUFF \u00dc;\n           338 | \tchar *iv\u00c48\u00dc;\n           339 | \tchar format\u00c4ERROR_BUFF\u00dc;\n           340 |\n           341 | \tint i;\n           342 | \tmemset(ebb,null,sizeof(ebb));\n           343 | \tcopyText(number,format,ERROR_BUFF);\n           344 |\n           345 | \tfor(i = 0;i<8;i++)\n           346 | \t\t\u00e4\n           347 | \t\tiv\u00c4i\u00dc = 0;\n           348 | \t\tMSGE * msge = v\u00c4i\u00dc;\n           349 | \t\tif ( msge == 0 ) break;\n           350 | \t\tiv \u00c4i\u00dc = msge->format();\n           351 | \t\t\u00fc\n           352 |\n           353 | \tswitch(i)\n           354 | \t\t\u00e4\n           355 | \t\tcase 0 : sprintf(ebb,format);\n           356 | \t\t\tbreak;\n           357 | \t\tcase 1 : sprintf(ebb,format,iv\u00c40\u00dc);\n           358 | \t\t\tbreak;\n           359 | \t\tcase 2 : sprintf(ebb,format,iv\u00c40\u00dc,iv\u00c41\u00dc);\n           360 | \t\t\tbreak;\n           361 | \t\tcase 3 : sprintf(ebb,format,iv\u00c40\u00dc,iv\u00c41\u00dc,iv\u00c42\u00dc);\n           362 | \t\t\tbreak;\n           363 | \t\tcase 4 : sprintf(ebb,format,iv\u00c40\u00dc,iv\u00c41\u00dc,iv\u00c42\u00dc,iv\u00c43\u00dc);\n           364 | \t\t\tbreak;\n           365 | \t\tcase 5 : sprintf(ebb,format,iv\u00c40\u00dc,iv\u00c41\u00dc,iv\u00c42\u00dc,iv\u00c43\u00dc,iv\u00c44\u00dc);\n           366 | \t\t\tbreak;\n           367 | \t\tcase 6 : sprintf(ebb,format,iv\u00c40\u00dc,iv\u00c41\u00dc,iv\u00c42\u00dc,iv\u00c43\u00dc,iv\u00c44\u00dc,iv\u00c45\u00dc);\n           368 | \t\t\tbreak;\n           369 | \t\tcase 7 : sprintf(ebb,format,iv\u00c40\u00dc,iv\u00c41\u00dc,iv\u00c42\u00dc,iv\u00c43\u00dc,iv\u00c44\u00dc,iv\u00c45\u00dc,iv\u00c46\u00dc);\n           370 | \t\t\tbreak;\n           371 | \t\tdefault: sprintf(ebb,format);              break;\n           372 | \t\t\u00fc\n           373 |\n           374 | \tprint(ebb);\n           375 | \tstrcpy(g_ebb,ebb);\n           376 | \tfor( i = 0;i<8;i++)\n           377 | \t\t\u00e4\n           378 |\n           379 | \t\tif ( v\u00c4i\u00dc )\n           380 | \t\t\t\u00e4 delete v\u00c4i\u00dc ; v\u00c4i\u00dc = 0;\u00fc\n           381 | \t\telse break;\n           382 | \t\t\u00fc\n           383 | #ifdef  PANEL_ID\n           384 | \tPanelSetMessageUncond(\n           385 | \t\tmessagetext->getTimeStempFlag() ? g_ebb+19 :  g_ebb ) ;\n           386 | \tcicsbase->err(g_ebb);\n           387 | #endif\n           388 | \tg_ebb_flag = 1;\n           389 | \treturn g_ebb;\n           390 | \t\u00fc\n           391 |\n           392 |\n           393 | /*--------------------------------------------------------------+\n           394 | ]  Text formatting                                              ]\n           395 | ]                                                               ]\n           396 | ]                                                               ]\n           397 | +--------------------------------------------------------------*/\n           398 |\n           399 |\n           400 |\n           401 |\n           402 | MessageTEXT& Err(int number)\n           403 | \t\u00e4\n           404 | \tif (messagetext==NULL)\n           405 | \t\tmessagetext = new MessageTEXT();\n           406 | \tmessagetext->setNumber(number);\n           407 | \treturn (*messagetext);\n           408 | \t\u00fc\n           409 | MessageTEXT& Msg(int number)\n           410 | \t\u00e4\n           411 | \tif (messagetext==NULL)\n           412 | \t\tmessagetext = new MessageTEXT();\n           413 | \tmessagetext->setNumber(number);\n           414 | \treturn (*messagetext);\n           415 | \t\u00fc\n           416 |\n           417 | int   Error(int number , ...   )\n           418 | \t\u00e4\n           419 | \tchar ebb\u00c4 ERROR_BUFF \u00dc;\n           420 | \tchar *iv\u00c48\u00dc;\n           421 | \tMSGE *mv\u00c48\u00dc;\n           422 | \tchar format\u00c4ERROR_BUFF\u00dc;\n           423 |\n           424 | \tmemset(ebb,null,sizeof(ebb));\n           425 | \tva_list ap;\n           426 | \tva_start(ap, number);\n           427 |\n           428 | \tmessagetext->copyText(number,format,ERROR_BUFF);\n           429 |\n           430 | \tint i;\n           431 | \tfor(i = 0;i<8;i++)\n           432 | \t\t\u00e4\n           433 | \t\tiv\u00c4i\u00dc = 0;\n           434 | \t\tmv\u00c4i\u00dc = 0;\n           435 | \t\tMSGE * msge = (MSGE *)(va_arg(ap,void *));\n           436 | \t\tif ( msge == 0 ) break;\n           437 | \t\tiv \u00c4i\u00dc = msge->format();\n           438 | \t\tmv \u00c4i\u00dc = msge;\n           439 | \t\t\u00fc\n           440 |\n           441 | \tswitch(i)\n           442 | \t\t\u00e4\n           443 | \t\tcase 0 : sprintf(ebb,format);\n           444 | \t\t\tbreak;\n           445 | \t\tcase 1 : sprintf(ebb,format,iv\u00c40\u00dc);\n           446 | \t\t\tbreak;\n           447 | \t\tcase 2 : sprintf(ebb,format,iv\u00c40\u00dc,iv\u00c41\u00dc);\n           448 | \t\t\tbreak;\n           449 | \t\tcase 3 : sprintf(ebb,format,iv\u00c40\u00dc,iv\u00c41\u00dc,iv\u00c42\u00dc);\n           450 | \t\t\tbreak;\n           451 | \t\tcase 4 : sprintf(ebb,format,iv\u00c40\u00dc,iv\u00c41\u00dc,iv\u00c42\u00dc,iv\u00c43\u00dc);\n           452 | \t\t\tbreak;\n           453 | \t\tcase 5 : sprintf(ebb,format,iv\u00c40\u00dc,iv\u00c41\u00dc,iv\u00c42\u00dc,iv\u00c43\u00dc,iv\u00c44\u00dc);\n           454 | \t\t\tbreak;\n           455 | \t\tcase 6 : sprintf(ebb,format,iv\u00c40\u00dc,iv\u00c41\u00dc,iv\u00c42\u00dc,iv\u00c43\u00dc,iv\u00c44\u00dc,iv\u00c45\u00dc);\n           456 | \t\t\tbreak;\n           457 | \t\tcase 7 : sprintf(ebb,format,iv\u00c40\u00dc,iv\u00c41\u00dc,iv\u00c42\u00dc,iv\u00c43\u00dc,iv\u00c44\u00dc,iv\u00c45\u00dc,iv\u00c46\u00dc);\n           458 | \t\t\tbreak;\n           459 | \t\tdefault: sprintf(ebb,format);               break;\n           460 | \t\t\u00fc\n           461 |\n           462 | \tmessagetext->print(ebb);\n           463 | \tstrcpy(g_ebb,ebb);\n           464 | \tfor( i = 0;i<8;i++)\n           465 | \t\t\u00e4\n           466 | \t\tif ( mv\u00c4i\u00dc ) delete mv\u00c4i\u00dc ;\n           467 | \t\telse break;\n           468 | \t\t\u00fc\n           469 | #ifdef  PANEL_ID\n           470 | \tPanelSetMessageUncond(\n           471 | \t\tmessagetext->getTimeStempFlag() ? g_ebb+19 :  g_ebb ) ;\n           472 | \tcicsbase->err(g_ebb);\n           473 | #endif\n           474 | \tg_ebb_flag = 1;\n           475 | \treturn 0;\n           476 | \t\u00fc\n           477 |\n           478 |\n           479 | char *  Message(int number , ...   )\n           480 | \t\u00e4\n           481 | \tchar ebb\u00c4 ERROR_BUFF \u00dc;\n           482 | \tchar *iv\u00c48\u00dc;\n           483 | \tMSGE *mv\u00c48\u00dc;\n           484 | \tchar format\u00c4ERROR_BUFF\u00dc;\n           485 |\n           486 | \tmemset(ebb,null,sizeof(ebb));\n           487 | \tva_list ap;\n           488 | \tva_start(ap, number);\n           489 |\n           490 | \tmessagetext->copyText(number,format,ERROR_BUFF);\n           491 |\n           492 | \tint i;\n           493 | \tfor( i = 0;i<8;i++)\n           494 | \t\t\u00e4\n           495 | \t\tiv\u00c4i\u00dc = 0;\n           496 | \t\tmv\u00c4i\u00dc = 0;\n           497 | \t\tMSGE * msge = (MSGE *)(va_arg(ap,void *));\n           498 | \t\tif ( msge == 0 ) break;\n           499 | \t\tiv \u00c4i\u00dc = msge->format();\n           500 | \t\tmv \u00c4i\u00dc = msge;\n           501 | \t\t\u00fc\n           502 |\n           503 | \tswitch(i)\n           504 | \t\t\u00e4\n           505 | \t\tcase 0 : sprintf(ebb,format);\n           506 | \t\t\tbreak;\n           507 | \t\tcase 1 : sprintf(ebb,format,iv\u00c40\u00dc);\n           508 | \t\t\tbreak;\n           509 | \t\tcase 2 : sprintf(ebb,format,iv\u00c40\u00dc,iv\u00c41\u00dc);\n           510 | \t\t\tbreak;\n           511 | \t\tcase 3 : sprintf(ebb,format,iv\u00c40\u00dc,iv\u00c41\u00dc,iv\u00c42\u00dc);\n           512 | \t\t\tbreak;\n           513 | \t\tcase 4 : sprintf(ebb,format,iv\u00c40\u00dc,iv\u00c41\u00dc,iv\u00c42\u00dc,iv\u00c43\u00dc);\n           514 | \t\t\tbreak;\n           515 | \t\tcase 5 : sprintf(ebb,format,iv\u00c40\u00dc,iv\u00c41\u00dc,iv\u00c42\u00dc,iv\u00c43\u00dc,iv\u00c44\u00dc);\n           516 | \t\t\tbreak;\n           517 | \t\tcase 6 : sprintf(ebb,format,iv\u00c40\u00dc,iv\u00c41\u00dc,iv\u00c42\u00dc,iv\u00c43\u00dc,iv\u00c44\u00dc,iv\u00c45\u00dc);\n           518 | \t\t\tbreak;\n           519 | \t\tcase 7 : sprintf(ebb,format,iv\u00c40\u00dc,iv\u00c41\u00dc,iv\u00c42\u00dc,iv\u00c43\u00dc,iv\u00c44\u00dc,iv\u00c45\u00dc,iv\u00c46\u00dc);\n           520 | \t\t\tbreak;\n           521 | \t\tdefault: sprintf(ebb,format);               break;\n           522 | \t\t\u00fc\n           523 |\n           524 |\n           525 | \tstrcpy(g_ebb,ebb);\n           526 | \tfor( i = 0;i<8;i++)\n           527 | \t\t\u00e4\n           528 | \t\tif ( mv\u00c4i\u00dc ) delete mv\u00c4i\u00dc ;\n           529 | \t\telse break;\n           530 | \t\t\u00fc\n           531 | #ifdef  PANEL_ID\n           532 | \tPanelSetMessageUncond(\n           533 | \t\tmessagetext->getTimeStempFlag() ? g_ebb+19 :  g_ebb ) ;\n           534 | \tcicsbase->log(g_ebb);\n           535 | #endif\n           536 | \tg_ebb_flag = 1;\n           537 | \treturn g_ebb;\n           538 | \t\u00fc\n           539 |\n           540 |\n           541 | char * getErrorText()\n           542 | \t\u00e4\n           543 | \tif ( g_ebb_flag == 0 ) return 0;\n           544 | \tg_ebb_flag = 0;\n           545 | \tif (messagetext->getTimeStempFlag()) return g_ebb+19;\n           546 | \telse return g_ebb ;\n           547 | \t\u00fc\n           548 |\n           549 | char * getMessageText()\n           550 | \t\u00e4\n           551 | \tif (messagetext->getTimeStempFlag()) return g_ebb+19;\n           552 | \telse return g_ebb ;\n           553 | \t\u00fc\n           554 |\n           555 | ExternalTEXT::ExternalTEXT(char * name ):language('E')\n           556 | \t\u00e4init(name);\u00fc\n           557 | ExternalTEXT::ExternalTEXT(char * name, char lang ):language(lang)\n           558 | \t\u00e4init(name);\u00fc\n           559 |\n           560 | void ExternalTEXT::init(char * name)\n           561 | \t\u00e4\n           562 | \tmodulname\u00c40\u00dc = language==' ' ? 'E':language;\n           563 | \tstrcpy(modulname+1,name);\n           564 | \tdllhandle * handle = dllload(modulname);\n           565 | \t//fp = (void *(*)())dllqueryfn(handle,\"_dynamn\");\n           566 | \tfp = (EXT_C_fp)dllqueryfn(handle,\"_dynamn\");\n           567 | \tif (fp == 0)\n           568 | \t\t\u00e4\n           569 | \t\tchar _b\u00c4128\u00dc;\n           570 | \t\tsprintf(_b,\"unable to load the '%s' text module \u00d6n handle:%p function:%p d\u00d6n\",modulname,handle,fp)\n           570 | ;\n           571 | \t\tputs(_b);\n           572 | \t\tabort();\n           573 | \t\t\u00fc\n           574 | \ttext = fp();\n           575 | \t\u00fc\n           576 |\n           577 | int ExternalTEXT::MSGTEXT(int id, char * buff,int len)\n           578 | \t\u00e4\n           579 | \tif (text)\n           580 | \t\tfor ( et * etp = (et *) text;etp->ett;etp++)\n           581 | \t\t\t\u00e4 if ( id == atoi(etp->cid) )\n           582 | \t\t\t\u00e4\n           583 | \t\t\tstrncpy(buff,*(etp->ett),len-1);\n           584 | \t\t\t*(buff+len-1) = 0;\n           585 | \t\t\treturn 1;\n           586 | \t\t\t\u00fc\n           587 | \t\t\t\u00fc\n           588 | \t\t*buff = 0;\n           589 | \t\treturn 0;\n           590 | \t\u00fc\n           591 |\n           592 | char * ExternalTEXT::HelpText(char * hid)\n           593 | \t\u00e4\n           594 | \tif (text)\n           595 | \t\tfor ( et * etp = (et *) text;etp->ett;etp++)\n           596 | \t\t\tif ( strcmp(hid,etp->cid) == 0 )\n           597 | \t\t\t\treturn *(etp->ett);\n           598 | \treturn 0;\n           599 | \t\u00fc\n           600 |\n           601 | selection* ExternalTEXT::SelectionText(char * hid)\n           602 | \t\u00e4\n           603 | \tif (text)\n           604 | \t\tfor ( et * etp = (et *) text;etp->ett;etp++)\n           605 | \t\t\tif ( strcmp(hid,etp->cid) == 0 )\n           606 | \t\t\t\treturn (selection *)(etp->ett);\n           607 | \treturn 0;\n           608 | \t\u00fc\n           609 |\n           610 | entry * ExternalTEXT::EntryText(char * hid)\n           611 | \t\u00e4\n           612 | \tif (text)\n           613 | \t\tfor ( et * etp = (et *) text;etp->ett;etp++)\n           614 | \t\t\tif ( strcmp(hid,etp->cid) == 0 )\n           615 | \t\t\t\treturn (entry *)(etp->ett);\n           616 | \treturn 0;\n           617 | \t\u00fc\n           618 |\n           619 | \t\u00fc //namespace isis_ns_mvs\n0                                   * * * * *   E N D   O F   S O U R C E   * * * * *\n-\n\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(MSGMGR)'                      30.11.12 08:25:49\n0                                    * * * * *   I N C L U D E S   * * * * *\n     1  =  //'ESA.PRJ.CBTDSSN.HPP(ISISDEF)'\n     2  =  //'CEE.SCEEH.H(STDLIB)'\n     3  =  //'CEE.SCEEH.H(FEATURES)'\n     4  =  //'CEE.SCEEH.H(BUILTINS)'\n     5  =  //'CEE.SCEEH.H(STDDEF)'\n     6  =  //'CEE.SCEEH.H(STRING)'\n     7  =  //'CEE.SCEEH.H(STRINGS)'\n     8  =  //'CEE.SCEEH.SYS.H(TYPES)'\n     9  =  //'ESA.PRJ.CBTDSSN.HPP(MVSBASE)'\n    10  =  //'ESA.PRJ.CBTDSSN.HPP(MERROR)'\n    11  =  //'ESA.PRJ.CBTDSSN.HPP(DSNAMEUT)'\n    12  =  //'CEE.SCEEH.H(ASSERT)'\n    13  =  //'CEE.SCEEH.H(STDIO)'\n    14  =  //'ESA.PRJ.CBTDSSN.HPP(CASMIF)'\n    15  =  //'ESA.PRJ.CBTDSSN.HPP(ASMIF)'\n    16  =  //'ESA.PRJ.CBTDSSN.HPP(MISC)'\n    17  =  //'CEE.SCEEH.H(TIME)'\n    18  =  //'ESA.PRJ.CBTDSSN.HPP(MSGMGR)'\n    19  =  //'CEE.SCEEH.H(DLL)'\n    20  =  //'CEE.SCEEH.H(STDARG)'\n    21  =  //'ESA.PRJ.CBTDSSN.HPP(MSGTEXT)'\n-                                 * * * * *   E N D   O F   I N C L U D E S   * * * * *\n0\n15694A01 V1.13 z/OS XL C++              //'ESA.PRJ.CBTDSSN.CPP(MSGMGR)'                      30.11.12 08:25:49\n-                           * * * * *   M E S S A G E   S U M M A R Y   * * * * *\n0TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL\n                (U)       (S)         (E)        (W)          (I)\n     0           0         0           0          0            0\n0                    * * * * *   E N D   O F   M E S S A G E   S U M M A R Y   * * * * *\n0                        * * * * *   E N D   O F   C O M P I L A T I O N   * * * * *\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MVSBASE": {"ttr": 2727, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(MVSBASE)'                      30.11.12 08:25:52\n0                                      * * * * *   P R O L O G   * * * * *\n    Compiler options. . . . . . . :AGGRCOPY(NOOVERLAP)             ANSIALIAS       ARCH(7)         ARGPARSE        NOASCII\n                                  :NOATTRIBUTE     ASSERT(RESTRICT)                BITFIELD(UNSIGNED)              CHARS(UNSIGNED)\n                                  :NOCOMPACT       NOCOMPRESS      CVFT            NODFP           DIGRAPH         DLL(CALLBACKANY)\n                                  :ENUMSIZE(SMALL) NOEVENTS        EXECOPS         EXH             NOEXPMAC        NOEXPORTALL\n                                  :NOFASTTEMPINC   FLAG(I)         NOGOFF          GONUMBER        HALT(16)\n                                  :NOHGPR(NOPRESERVE)              NOHOT           NOIGNERRNO      ILP32           NOINITAUTO\n                                  :NOINLRPT        NOLIBANSI       NOLIST          LONGNAME        NOMAKEDEP       NOMARGINS\n                                  :MAXMEM(2097152) MEMORY          NAMEMANGLING(zOSV1R2)           NESTINC(255)    OBJECT\n                                  :OBJECTMODEL(COMPAT)             NOOE            NOOFFSET        OPTIMIZE(2)     PLIST(HOST)\n                                  :NOPORT          NOPPONLY        PREFETCH        REDIR           NOREPORT        ROSTRING\n                                  :ROCONST         RTTI(ALL)       NOSEQUENCE      NOSHOWINC       NOSHOWMACROS    SOURCE\n                                  :SKIPSRC(SHOW)   SPILL(3600)     START           NOSTATICINLINE  STRICT\n                                  :NOSTRICT_INDUCTION              TARGET(LE,CURRENT)              TEMPLATEDEPTH(300)\n                                  :NOTEMPLATEREGISTRY              TEMPLATERECOMPILE               TERMINAL        TEST(HOOK)\n                                  :TMPLPARSE(NO)   TUNE(7)         UNROLL(AUTO)    UTF             NOWARN0X        NOWARN64\n                                  :NOWSIZEOF       NOXREF\n                                  :NOCICS\n                                  :NOCONVLIT\n                                  :NOCSECT\n                                  :DEBUG(FORMAT(ISD),LEVEL(0),HOOK(NOLINE,NOBLOCK,NOPATH,CALL,FUNC),NOSYMBOL)\n                                  :DEFINE(__OS390__=1,_POSIX_SOURCE=1,_XOPEN_SOURCE_EXTENDED=1,MU_STANDALONE=1,ISIS_PF_MU=1)\n                                  :FLOAT(HEX,FOLD,NOMAF,AFP(NOVOLATILE)) ROUND(Z)\n                                  :NOHALTONMSG\n                                  :INFO(LAN)\n                                  :INLINE(AUTO,NOREPORT,100,1000)\n                                  :NOIPA\n                                  :KEYWORD(bool,explicit,export,false,mutable,namespace,true,typename,using,restrict,__restrict__,\n                                   __restrict,_Pragma,__alignof__,__asm__,__attribute__,__const__,__extension__,__volatile__,\n                                   __inline__,__signed__,__typeof__,__I,_Complex,__complex__,__real__,__imag__)\n                                  :NOKEYWORD(char16_t,char32_t,decltype,static_assert,typeof)\n                                  :LANGLVL(ANONSTRUCT,ANONUNION,ANSIFOR,ANSISINIT,NOAUTOTYPEDEDUCTION,C99VLA,C99__FUNC__,\n                                   NOC99LONGLONG,NOC99PREPROCESSOR,NOCOMPATRVALUEBINDING,NODBCS,NODECLTYPE,NODELEGATINGCTORS,\n                                   DEPENDENTBASELOOKUP,NODOLLARINNAMES,EMPTYSTRUCT,NOEXTENDEDFRIEND,NOEXTENDEDINTEGERSAFE,\n                                   EXTERNTEMPLATE,ILLPTOM,IMPLICITINT,NOINLINENAMESPACE,LIBEXT,LONGLONG,NONEWEXCP,OFFSETNONPOD,\n                                   NOOLDDIGRAPH,OLDFRIEND,NOOLDMATH,NOOLDSTR,OLDTEMPACC,NOOLDTMPLALIGN,OLDTMPLSPEC,NOSTATIC_ASSERT,\n                                   NOTEMPSASLOCALS,NOTEXTAFTERENDIF,GNU_LABELVALUE,GNU_COMPUTEDGOTO,TRAILENUM,TYPEDEFCLASS,NOUCS,\n                                   VARARGMACROS,NOVARIADICTEMPLATES,GNU_INCLUDE_NEXT,ZEROEXTARRAY,NOC99COMPLEX,NOC99COMPLEXHEADER,\n                                   NOGNU_COMPLEX,GNU_SUFFIXIJ)\n                                  :LOCALE(DE_DE.IBM-273)\n                                  :NOLSEARCH\n                                  :OPTFILE(DD:OPTFILE)\n                                  :NORTCHECK\n                                  :SEARCH(//'CEE.SCEEH.+', //'CBC.SCLBH.+', CEE.SCEEH.+, CBC.SCLBH.+, DD:USERLIB)\n                                  :NOSERVICE\n                                  :NOSQL\n                                  :NOSUPPRESS\n                                  :TEMPINC(./tempinc)\n                                  :NOXPLINK(NOBACKCHAIN,NOCALLBACK,GUARD,OSCALL(UPSTACK),NOSTOREARGS)\n    Version Macros. . . . . . . . : __COMPILER_VER__=0x410D0000\n                                  : __LIBREL__=0x410D0000\n                                  : __TARGET_LIB__=0x410D0000\n    Source margins. . . . . . . . :\n      Varying length. . . . . . . : 1 - 32760\n      Fixed length. . . . . . . . : 1 - 32760\n    Sequence columns. . . . . . . :\n      Varying length. . . . . . . : none\n      Fixed length. . . . . . . . : none\n    Locale name . . . . . . . . . : DE_DE.IBM-273\n    Code set. . . . . . . . . . . : IBM-273\n    Listing name. . . . . . . . . : DD:SYSCPRT\n0                                 * * * * *   E N D   O F   P R O L O G   * * * * *\n-\n15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(MVSBASE)'                      30.11.12 08:25:52\n-\n                                       * * * * *   S O U R C E   * * * * *\n0            1 |\n             2 | /*******************************************************************************\n             3 | * Copyright ISIS Papyrus Technologies Limited\n             4 | *-------------------------------------------------------------------------------\n             5 | * File:              $Source: /data/cvs/src/mvs/mvsbase.cpp,v $\n             6 | *-------------------------------------------------------------------------------\n             7 | * Description:\n             8 | *   ???\n             9 | *******************************************************************************/\n            10 |\n            11 |\n            12 | #include \"isisdef.h\"\n            13 | #include <stdlib.h>\n            14 | #include <string.h>\n            15 | #include <strings.h>\n            16 | #ifndef MU_STANDALONE\n            17 | #include \"pcsdll.hpp\"\n            18 | #include \"systems.hpp\" //szm20041028\n            19 | #else\n            20 | \t#ifndef stricmp\n            21 |     #define stricmp strcmpi\n            22 | \t#endif\n            23 | \t#ifndef strcmpi\n            24 | \t\t#define strcmpi strcasecmp\n            25 | \t#endif\n            26 | \t#define MVSBatch() 1\n            27 | \t#ifndef PCS_MAX_PATH\n            28 | \t\t#define PCS_MAX_PATH 1024\n            29 | \t#endif\n            30 | #endif\n            31 |\n            32 | #include \"mvsbase.hpp\"\n            33 | #if defined(CICSAPPL) == 0 && defined(MU_STANDALONE) == 0 //szm20050810\n            34 | #include \"isismisc.hpp\"\n            35 | #endif\n            36 | #include \"misc.hpp\"\n            37 | #ifdef CALL_TAG\n            38 | #include \"pphctags.hpp\"\n            39 | #endif\n            40 | #ifdef OWN_STDIO\n            41 | #include \"stdio.hpp\"\n            42 | #else\n            43 | #include <assert.h>\n            44 | #include <stdio.h>\n            45 | #endif\n            46 |\n            47 | #include <stdlib.h>\n            48 | #include <strings.h>\n            49 | #include <ctype.h>\n            50 | #include <new.h>\n            51 |\n            52 | #if defined(ISIS_PF_HOST) ]] defined(ISIS_PF_MU)\n            53 |\n            54 | #include \"ibmdebug.hpp\"\n            55 | #if defined(ISIS_PF_MI) ]] defined (ISIS_PF_MU)\n            56 | #include <ctest.h>\n            57 | #endif\n            58 | #endif\n            59 |\n            60 | #define MVSBASE  0\n            61 | char mvsSTRING::parseSepCh=0 ; //szm20061218 mvsSTRING parse escape ch is null|||||||\n            62 |\n            63 | mvsSTRING nullstring(\"\"); //szm20050629\n            64 |\n            65 | //KV20050203 why not for ms,mu ??\n            66 | //#if defined(ISIS_PF_MS)==0 && defined(ISIS_PF_MU)==0\n            67 | void * memcpyp(void * target , const void * source, size_t tsize, size_t ssize, int pad)\n            68 | \t\u00e4\n            69 | \tif ( target == 0 ]] source == 0 ]] tsize <= 0) return NULL;\n            70 | \tif( tsize<=ssize)\n            71 | \t\tmemcpy(target,source,tsize);\n            72 | \telse\n            73 | \t\t\u00e4\n            74 | \t\tmemcpy(target,source,ssize);\n            75 | \t\tfor(;ssize<tsize;ssize++) *((char *)target+ssize) = char(pad);\n            76 | \t\t\u00fc\n            77 | \treturn target;\n            78 | \t\u00fc\n            79 |\n            80 | static const char * SAS_HFS = \"hfs\";\n            81 | static const char * IBM_HFS = \"///\";\n            82 | static const char * SAS_DSN = \"dsn\";\n            83 | static const char * IBM_DSN = \"//\";\n            84 | static const char * SAS_DDN = \"ddn\";\n            85 | static const char * IBM_DDN  = \"dd\";\n            86 | static const char * IBM_DDN_SLASH = \"//dd\";\n            87 | static const char * _MEM     = \"mem\"; //szm0040909\n            88 | static const char * IBM_OMS  = \"oms\"; //szm20080215 ToDo 17339\n            89 | static const char * IBM_HTTP = \"http\"; //szm20090709\n            90 | static const char * IBM_HTTPS = \"https\"; //szm20090709\n            91 |\n            92 |\n            93 | genOpenNameType genOpenType(const char *name)\n            94 | \t\u00e4\n            95 | \tchar  nm\u00c4256\u00dc;\n            96 | \tchar  np\u00c4256\u00dc;\n            97 | \tchar  pf\u00c432\u00dc;\n            98 | \tmemset(pf,0,sizeof(pf));\n            99 | \tgenOpenNameType t = ont_unknown;\n           100 |\n           101 | \tif (name == 0 ]] strlen(name) > sizeof(nm))\n           102 | \t\treturn(t);\n           103 |\n           104 | \tstrcpy(np,name);\n           105 | \tchar * n = (char *)np;\n           106 | \tchar * c = NULL;\n           107 | \tif ((c = strchr(n,int(':'))) NEQ NULL)\n           108 | \t\t\u00e4\n           109 | \t\t*c = 0;\n           110 | \t\tstrcpy(pf,n);\n           111 | \t\tn  =  c+1;\n           112 | \t\t\u00fc\n           113 | \tif (stricmp(pf,IBM_OMS))  //szm20080215 ToDo 17339\n           114 | \t\t\u00e4                       //szm20080215 ToDo 17339\n           115 | \t\tif (stricmp(pf,SAS_HFS) == 0) t = sas_hfs;\n           116 | \t\telse if (stricmp(pf,_MEM) == 0) t = ont_mem;   //szm0040909\n           117 | \t\telse if (stricmp(pf,IBM_DDN) == 0 ]] stricmp(pf,IBM_DDN_SLASH) == 0) t = ibm_ddn;\n           118 | \t\telse  if (stricmp(pf,SAS_DDN) == 0) t = sas_ddn;\n           119 | \t\telse if (stricmp(pf,SAS_DSN) == 0) t = sas_dsn;\n           120 |     else if (stricmp(pf,IBM_HTTP) == 0]]stricmp(pf,IBM_HTTPS) == 0) t = ibm_hfs; //szm20090709\n           121 | \t\telse\n           122 | \t\t\t\u00e4\n           123 |       if (strncasecmp   (np,IBM_HFS,strlen(IBM_HFS)) == 0 ]] (np\u00c40\u00dc == '/' && np\u00c41\u00dc-'/') ]](np\u00c40\u00dc ==\n           123 |  '.' && np\u00c41\u00dc=='/'))//szm20090709\n           124 | \t\t\t\tt = ibm_hfs;\n           125 | \t\t\telse if (strncasecmp   (np,IBM_DSN,strlen(IBM_DSN)) == 0) t = ibm_dsn;\n           126 | \t\t\t//KV20050419 in mvsbatch execution dataset names and ddnames don't need prefix\n           127 | \t\t\t// in unix execution such names are interpreted as unix file names\n           128 | \t\t\telse if(MVSBatch())\n           129 | \t\t\t\t\u00e4\n           130 | \t\t\t\tif (*n == '\"' ]] *n =='\u00d6'') t = ibm_dsn;\n           131 | \t\t\t\telse if (strchr(n,'(') && (strchr(n,'(')-n) <= 8 ) t = ont_ddn;\n           132 | \t\t\t\telse if (strchr(n,'.')) t = ont_dsn;\n           133 | \t\t\t\telse if (strlen(n) <= 8) t = ont_ddn;\n           134 | \t\t\t\telse if (strlen(n) <=18 && strchr(n,'(') && strchr(n,')')) t = ont_ddn;\n           135 | \t\t\t\telse\n           136 | \t\t\t\t\tt = ont_unknown;\n           137 | \t\t\t\t\u00fc\n           138 | \t\t\telse\n           139 | \t\t\t\t\u00e4\n           140 | \t\t\t\tt=ibm_hfs;\n           141 | \t\t\t\t\u00fc\n           142 | \t\t\t\u00fc\n           143 | \t\t\u00fc //szm20080215 ToDo 17339\n           144 | #if defined(ISIS_PF_MI) ]] defined(ISIS_PF_MU) //ZA030711\n           145 | \t//  HOST_IBM_TRACE_sd(name,t);\n           146 | #endif\n           147 | \treturn t;\n           148 | \t\u00fc\n           149 |\n           150 |\n           151 | //KV20060329 buffer nm to avoid static variable\n           152 | char * onlyMemberName(const char * n, char* nm)\n           153 | \t\u00e4\n           154 | \tmvsSTRING s(n), p0, p1, p2;\n           155 | \ts.parse(p0,\"(\",p1,\")\",p2);\n           156 | \tstrcpy(nm,(char *)(p1));\n           157 | \treturn nm;\n           158 | \t\u00fc\n           159 |\n           160 | //KV20060329 buffer nm to avoid static variable\n           161 | char * stripMemberName(const char * n, char* nm)\n           162 | \t\u00e4\n           163 | \tmvsSTRING s(n), p0, p1, p2;\n           164 | \ts.parse(p0,\"(\",p1,\")\",p2);\n           165 | \tstrcpy(nm,(char *)(p0+p2));\n           166 | \treturn nm;\n           167 | \t\u00fc\n           168 |\n           169 | //KV20060329 buffer nm to avoid static variable\n           170 | ISIS_EXT_C\n           171 | char * genOpenName(const char *name,char *nm)\n           172 | \t\u00e4\n           173 | \tchar  np\u00c4256\u00dc;\n           174 | \tchar  pf\u00c432\u00dc;\n           175 | \tmemset(pf,0,sizeof(pf));\n           176 | \tgenOpenNameType t = ont_unknown;\n           177 |\n           178 | \tif (name == 0 ]] strlen(name) > PCS_MAX_PATH-1)\n           179 | \t\treturn(\"??invalid name??\");\n           180 |\n           181 | \tif (*name-'\"' && *name-'\u00d6'')\n           182 | \t\t\u00e4\n           183 | \t\tstrcpy(np,name);\n           184 | \t\t\u00fc\n           185 | \telse\n           186 | \t\t\u00e4\n           187 | \t\tstrcpy(np,name+1);\n           188 | \t\t//KV20030714: avoid deleting ending qoutes for //'datat.set.name'\n           189 | \t\tif (np\u00c4strlen(np)-1\u00dc == '\"' ]] np\u00c4strlen(np)-1\u00dc == '\u00d6'')\n           190 | \t\t\tnp\u00c4strlen(np)-1\u00dc  = 0;\n           191 | \t\t\u00fc\n           192 | \tfor(int i =strlen(np)-1;i>=0&&np\u00c4i\u00dc==' ';i--)np\u00c4i\u00dc=0;\n           193 | \tt = genOpenType(np);\n           194 |\n           195 | \tchar * n = (char *)np;\n           196 | \tchar * c = NULL;\n           197 | \tif ((c = strchr(n,int(':'))) NEQ NULL)\n           198 | \t\t\u00e4\n           199 | \t\t*c = 0;\n           200 | \t\tstrcpy(pf,n);\n           201 | \t\tn  =  c+1;\n           202 | \t\t\u00fc\n           203 |\n           204 | #if defined(ISIS_PF_MI) ]] defined(ISIS_PF_MU) // IBM or UNIX (not SAS)szm20031030\n           205 | \tif (strcmp(\"(*)\",n+strlen(n)-3)==0) //szm 20100628 zOS 1.11 fopen difference\n           206 | \t\t*(n+strlen(n)-3) = 0;       //szm 20100628 zOS 1.11 fopen difference\n           207 | \tswitch(t)\n           208 | \t\t\u00e4\n           209 | \t\tcase ont_mem:         //szm0040909\n           210 | \t\t\tsprintf(nm,\"mem:%s\",n);\n           211 | \t\t\tbreak;\n           212 | \t\tcase ibm_dsn:\n           213 | \t\t\tif (*(n+2) - '\u00d6'')\n           214 | \t\t\t\tsprintf(nm,\"//'%s'\",n+2);\n           215 | \t\t\telse\n           216 | \t\t\t\tstrcpy(nm,n);\n           217 | \t\t\tbreak;\n           218 | \t\tcase sas_dsn:\n           219 | \t\tcase ont_dsn:\n           220 | \t\t\tif (*n - '\u00d6'')\n           221 | \t\t\t\tsprintf(nm,\"//'%s'\",n);\n           222 | \t\t\telse\n           223 | \t\t\t\tsprintf(nm,\"//%s\",n);\n           224 | \t\t\tbreak;\n           225 | \t\tcase ibm_ddn:\n           226 | \t\tcase sas_ddn:\n           227 | \t\tcase ont_ddn:\n           228 | \t\t\tsprintf(nm,\"//dd:%s\",n);\n           229 | \t\t\tbreak;\n           230 | \t\tcase sas_hfs:\n           231 | \t\t\tsprintf(nm,\"%s\",n);\n           232 | \t\t\tbreak;\n           233 | \t\tcase ibm_hfs:\n           234 | \t\tcase ont_unknown:\n           235 | \t\t\tsprintf(nm,\"%s\",n);\n           236 | \t\t\tbreak;\n           237 | \t\t\u00fc\n           238 | #else\n           239 | \tswitch(t)\n           240 | \t\t\u00e4\n           241 | \t\tcase ont_mem:         //szm0040909\n           242 | \t\t\tsprintf(nm,\"mem:%s\",n);\n           243 | \t\t\tbreak;\n           244 | \t\tcase ibm_dsn:\n           245 | \t\tcase sas_dsn:\n           246 | \t\tcase ont_dsn:\n           247 | \t\t\tsprintf(nm,\"dsn:%s\",n);\n           248 | \t\t\tbreak;\n           249 | \t\tcase ibm_ddn:\n           250 | \t\tcase sas_ddn:\n           251 | \t\tcase ont_ddn:\n           252 | \t\t\tsprintf(nm,\"ddn:%s\",n);\n           253 | \t\t\tbreak;\n           254 | \t\tcase ibm_hfs:\n           255 | \t\t\tsprintf(nm,\"hfs:%s\",nm+3);\n           256 | \t\t\tbreak;\n           257 | \t\tcase sas_hfs:\n           258 | \t\t\tsprintf(nm,\"hfs:%s\",n);\n           259 | \t\t\tbreak;\n           260 | \t\tcase ont_unknown:\n           261 | \t\t\tsprintf(nm,\"%s\",n);\n           262 | \t\t\tbreak;\n           263 | \t\t\u00fc\n           264 | #endif\n           265 | #if defined(ISIS_PF_MI) ]] defined(ISIS_PF_MU)\n           266 | \tHOST_IBM_TRACE_sss(name,nm,n);\n           267 | #endif\n           268 | \treturn (nm);\n           269 | \t\u00fc\n           270 |\n           271 | USHORT  Ushort(int i)\n           272 | \t\u00e4 return ((unsigned short)i);\u00fc\n           273 | USHORT  Ushort(short s)\n           274 | \t\u00e4 return ((unsigned short)s);\u00fc\n           275 | USHORT  Ushort(char c)\n           276 | \t\u00e4 return ((unsigned short)c);\u00fc\n           277 |\n           278 |\n           279 | /*--------------------------------------------------------------+\n           280 | ]  mvsSTRING global class                                          ]\n           281 | ]                                                               ]\n           282 | ]                                                               ]\n           283 | +--------------------------------------------------------------*/\n           284 |\n           285 | /*\n           286 | FORMAT F_alcu(aLEFT,cUPPER);\n           287 | FORMAT F_alcw(aLEFT,cWORD);\n           288 | FORMAT F_arcu(aRIGHT,cUPPER);\n           289 | */\n           290 |\n           291 | mvsSTRING::mvsSTRING()\n           292 | \t\u00e4\n           293 | \tst.l = 1;\n           294 | \tst.c = new char\u00c41\u00dc;\n           295 | \tst.type = str::_VALID;\n           296 | \tst.ltype = str::VARIABLE;\n           297 | \t*st.c = null;\u00fc\n           298 | mvsSTRING::mvsSTRING(const char * y)\n           299 | \t\u00e4\n           300 | \tchar * x = (y ? (char *) y : \"\");\n           301 | \tst.l = (long int ) strlen(x);\n           302 | \tst.c = new char\u00c4st.l+1\u00dc;\n           303 | \tst.type = str::_VALID;\n           304 | \tst.ltype = str::VARIABLE;\n           305 | \tstrcpy(st.c,x);\n           306 | \t\u00fc\n           307 | mvsSTRING::mvsSTRING(const mvsSTRING & x )\n           308 | \t\u00e4\n           309 | \tst.l = x.st.l;\n           310 | \tst.c = new char\u00c4st.l+1\u00dc;\n           311 | \tst.type = x.st.type ;\n           312 | \tst.ltype = x.st.ltype ;\n           313 | \tmemcpy(st.c,x.st.c,st.l+1);\n           314 | \t\u00fc\n           315 | mvsSTRING::mvsSTRING(const char * y,long int xl )\n           316 | \t\u00e4\n           317 | \tchar * x = y ? (char *) y : \"\";\n           318 | \tst.l = xl;\n           319 | \tst.c = new char\u00c4st.l+1\u00dc;\n           320 | \tif ( memchr(x,xl+1,0) ) st.type = str::_INVALID ;\n           321 | \telse     \u00e4  st.type = str::_VALID ; st.c\u00c4st.l\u00dc = 0; \u00fc\n           322 | \tmemcpy(st.c,x,xl);\n           323 | \t\u00fc\n           324 | mvsSTRING::mvsSTRING(const char def ,const long int xl )\n           325 | \t\u00e4\n           326 | \tst.ltype = str::FIX ;\n           327 | \tst.type  = str::_VALID;\n           328 | \tst.l = xl;\n           329 | \tst.c = new char\u00c4st.l+1\u00dc;\n           330 | \tmemset(st.c,def,st.l);\n           331 | \tst.c\u00c4st.l\u00dc = 0;\n           332 | \t\u00fc\n           333 | mvsSTRING::\u00dfmvsSTRING()\n           334 | \t\u00e4\n           335 | \tif ( st.c) delete \u00c4\u00dc st.c;\n           336 | \tif ( st.lls) delete \u00c4\u00dc st.lls;\n           337 | \t\u00fc\n           338 |\n           339 | mvsSTRING& mvsSTRING::operator=(const char * y )\n           340 | \t\u00e4\n           341 | \tchar * x = (y ? (char *)y : \"\");\n           342 | \tif ( x NEQ st.c)\n           343 | \t\t\u00e4 if ( st.ltype == str::VARIABLE )\n           344 | \t\t\u00e4\n           345 | \t\tchar * sv = st.c;\n           346 | \t\tst.l = (long int ) strlen(x);\n           347 | \t\tst.c = new char \u00c4st.l+1\u00dc;\n           348 | \t\tstrcpy(st.c,x);\n           349 | \t\tif ( st.type == str::_VALID ]] st.type == str::_INVALID)\n           350 | \t\t\tdelete \u00c4\u00dc sv;\n           351 | \t\tst.type = str::_VALID;\n           352 | \t\t\u00fc\n           353 | \t\telse\n           354 | \t\t\t\u00e4\n           355 | \t\t\tlong int l =(strlen(x)<= st.l ? strlen(x) : st.l);\n           356 | \t\t\tmemcpy(st.c,x,l);\n           357 | \t\t\tmemset(st.c+l,' ',st.l-l);\n           358 | \t\t\u00fc\n           359 | \t\t\u00fc\n           360 | \treturn * this ;\n           361 | \t\u00fc\n           362 | mvsSTRING& mvsSTRING::operator=(const mvsSTRING &x)\n           363 | \t\u00e4\n           364 | \tif (x.st.c NEQ st.c)\n           365 | \t\tif (st.ltype == str::VARIABLE )\n           366 | \t\t\t\u00e4\n           367 | \t\t\tchar * sv = st.c;\n           368 | \t\t\tst.l = x.st.l;\n           369 | \t\t\tst.c = new char\u00c4st.l+1\u00dc;\n           370 | \t\t\tmemcpy(st.c,x.st.c,st.l+1);\n           371 | \t\t\tif ( st.type == str::_VALID ]] st.type == str::_INVALID)\n           372 | \t\t\t\tdelete \u00c4\u00dc sv ;\n           373 | \t\t\t//   st.type = x.st.type;     don't assign fix type\n           374 | \t\t\t\u00fc\n           375 | \t\telse\n           376 | \t\t\t\u00e4\n           377 | \t\t\tst.ltype =str::FIX ;\n           378 | \t\t\tlong int l =(x.st.l<= st.l ? x.st.l : st.l);\n           379 | \t\t\tmemcpy(st.c,x.st.c,l);\n           380 | \t\t\tmemset(st.c+l,' ',st.l-l);\n           381 | \t\t\t\u00fc\n           382 | \t\treturn * this;\n           383 | \t\u00fc\n           384 |\n           385 | mvsSTRING & mvsSTRING::operator=(const sLL & s)\n           386 | \t\u00e4\n           387 | \tchar * sv = st.c;\n           388 | \tst.ltype = str::VARIABLE;\n           389 | \tst.l = s.getLength();\n           390 | \tst.c = new char\u00c4st.l\u00dc;\n           391 | \tmemcpy(st.c,s.getStart(),st.l);\n           392 | \tdelete \u00c4\u00dc sv;\n           393 | \treturn *this;\n           394 | \t\u00fc\n           395 |\n           396 | long int operator==(const mvsSTRING & x, const mvsSTRING &y)\n           397 | \t\u00e4\n           398 | \tif (x.st.type == str::_VALID && y.st.type == str::_VALID)\n           399 | \t\treturn (strcmp(x.st.c,y.st.c) == 0);\n           400 | \telse if ( x.st.l == y.st.l)\n           401 | \t\treturn( memcmp(x.st.c,y.st.c,x.st.l) == 0 );\n           402 | \telse return 0;\n           403 | \t\u00fc\n           404 | long int operator |=(const mvsSTRING & x, const mvsSTRING &y)\n           405 | \t\u00e4\n           406 | \treturn ( NOT( x == y) );\n           407 | \t\u00fc\n           408 |\n           409 | mvsSTRING operator+(const mvsSTRING& s1, const mvsSTRING& s2)\n           410 | \t\u00e4\n           411 | \tmvsSTRING r = s1;\n           412 | \tr+=s2;\n           413 | \treturn r;\n           414 | \t\u00fc\n           415 | /*\n           416 | mvsSTRING mvsSTRING::operator+(const mvsSTRING & x)\n           417 | \u00e4\n           418 | if ( &x == 0) return * this;\n           419 | mvsSTRING r;\n           420 | r.st.l = st.l + x.st.l;\n           421 | r.st.c = new char \u00c4 r.st.l+1\u00dc;\n           422 | memcpy(r.st.c,st.c,st.l);\n           423 | memcpy(r.st.c+st.l,x.st.c,x.st.l+1);\n           424 | if (st.type == str::_VALID && x.st.type == str::_VALID)\n           425 | r.st.type = str::_VALID ;\n           426 | else r.st.type = str::_INVALID ;\n           427 | return r;\n           428 | \u00fc\n           429 | */\n           430 |\n           431 | mvsSTRING& mvsSTRING::operator+=(const mvsSTRING& x )\n           432 | \t\u00e4\n           433 | \tif ( &x == 0 ) return * this;\n           434 | \tif ( st.ltype == str::VARIABLE )\n           435 | \t\t\u00e4\n           436 | \t\tchar * save = st.c;\n           437 | \t\tlong int savel = st.l;\n           438 | \t\tst.l += x.st.l;\n           439 | \t\tst.c  = new char \u00c4st.l+1\u00dc;\n           440 | \t\tmemcpy(st.c,save,savel);\n           441 | \t\tmemcpy(st.c+savel,x.st.c,x.st.l+1);\n           442 | \t\tif ( st.type == str::_VALID ]] st.type == str::_INVALID)\n           443 | \t\t\tdelete \u00c4\u00dc save;\n           444 | \t\tif ( st.type NEQ str::_VALID ]] x.st.type NEQ str::_VALID)\n           445 | \t\t\tst.type = str::_INVALID ;\n           446 | \t\t\u00fc\n           447 | \telse perror(\" unable to add to a fix mvsSTRING\");\n           448 | \treturn * this ;\n           449 | \t\u00fc\n           450 |\n           451 | char& mvsSTRING::operator\u00c4\u00dc(int index)\n           452 | \t\u00e4\n           453 | \tif ( index < 0 ]] index > st.l)\n           454 | \t\t\u00e4perror(\" _INVALID index for \u00c4\u00dc operator \"); return st.c\u00c40\u00dc;\u00fc;\n           455 | \treturn st.c\u00c4index\u00dc;\n           456 | \t\u00fc\n           457 |\n           458 | char& mvsSTRING::byte(int index)\n           459 | \t\u00e4\n           460 | \tif ( index < 0 ]] index > st.l)\n           461 | \t\t\u00e4perror(\" _INVALID index for \u00c4\u00dc operator \"); return st.c\u00c40\u00dc;\u00fc;\n           462 | \treturn st.c\u00c4index\u00dc;\n           463 | \t\u00fc\n           464 |\n           465 |\n           466 | mvsSTRING mvsSTRING::operator()(const long int o,  long int l = 1 )\n           467 | \t\u00e4\n           468 | \tif ( o < 0 ]] o+l > st.l ]]  l < 0 )\n           469 | \t\t\u00e4perror(\" _INVALID STRING operation\");return * this ;\u00fc\n           470 | \treturn mvsSTRING((const char *)(st.c+o),l);\n           471 | \t\u00fc\n           472 |\n           473 | void mvsSTRING::operator<<(long int l)\n           474 | \t\u00e4\n           475 | \tif ( l <= 0 ]] l >= st.l) return ;\n           476 | \tchar * c = st.c;\n           477 | \tfor(long int i = 0;i<st.l;i++)\n           478 | \t\tif (i+l<st.l)\n           479 | \t\t\t\u00e4*(c+i) = *(c+i+l); *(c+i+l) = ' ';\u00fc\n           480 | \t\telse *(c+i) = ' ';\n           481 | \t\treturn ;\n           482 | \t\u00fc\n           483 |\n           484 | void mvsSTRING::operator>>(long int l)\n           485 | \t\u00e4\n           486 | \tif ( l <= 0 ]] l >= st.l) return ;\n           487 | \tchar * c = st.c;\n           488 | \tfor(long int i = st.l-1;i;i--)\n           489 | \t\tif (i-l>=0)\n           490 | \t\t\t\u00e4*(c+i)= *(c+i-l); *(c+i-l) = ' '; \u00fc\n           491 | \t\telse *(c+i) = ' ';\n           492 | \t\treturn ;\n           493 | \t\u00fc\n           494 |\n           495 | long int mvsSTRING::hashcode()\n           496 | \t\u00e4\n           497 | \tlong int r = 0;\n           498 | \tfor (long int i = st.l ;i;i--)\n           499 | \t\tr = (r<<1) \u00ac (st.c\u00c4i\u00dc) ;\n           500 | \treturn (r<0 ? -r:r);\n           501 | \t\u00fc\n           502 | char * mvsSTRING::nameOf()\n           503 | \t\u00e4\n           504 | \treturn \"mvsSTRING\" ;\n           505 | \t\u00fc\n           506 |\n           507 | /*\n           508 | long int    mvsSTRING::lengthOf()\n           509 | \u00e4\n           510 | return st.l;\n           511 | \u00fc;\n           512 | */\n           513 |\n           514 | void mvsSTRING::changeAll(char f,char t)\n           515 | \t\u00e4\n           516 | \tfor(char * c =st.c;*c;c++) if ( *c == f) *c = t;\n           517 | \t\u00fc\n           518 |\n           519 | void mvsSTRING::align(ALIGNTYPE falign)\n           520 | \t\u00e4\n           521 | \tlong int i , is , iz ;\n           522 | \tif ( st.type NEQ str::_VALID ) return ;\n           523 | \tswitch(falign)\n           524 | \t\t\u00e4\n           525 | \t\tcase aLEFT  :\n           526 | \t\t\tfor( i =0;i<st.l;i++)\n           527 | \t\t\t\tif (st.c\u00c4i\u00dc NEQ ' ') break ;\n           528 | \t\t\t*this<<i;\n           529 | \t\t\tbreak ;\n           530 | \t\tcase aRIGHT :\n           531 | \t\t\tfor( i=st.l-1;i;i--)\n           532 | \t\t\t\tif (st.c\u00c4i\u00dc NEQ ' ') break ;\n           533 | \t\t\t*this>>(st.l-1-i);\n           534 | \t\t\tbreak ;\n           535 | \t\tcase aCENTER:\n           536 | \t\t\tfor( is =0;is<st.l;is++)\n           537 | \t\t\t\tif (st.c\u00c4is\u00dc NEQ ' ') break ;\n           538 | \t\t\tfor( iz=st.l-1;iz;iz--)\n           539 | \t\t\t\tif (st.c\u00c4iz\u00dc NEQ ' ') break ;\n           540 | \t\t\tif ( is >= iz ) break ;\n           541 | \t\t\ti = (st.l-(iz-is))/2;\n           542 | \t\t\tif (i < is ) *this<<(is-i);\n           543 | \t\t\telse if( i>is) *this>>(i-is);\n           544 | \t\t\tbreak ;\n           545 | \t\tcase aASIS   :\n           546 | \t\tdefault :\n           547 | \t\t\treturn ;\n           548 | \t\t\u00fc\n           549 | \t\u00fc\n           550 | void mvsSTRING::caps(CAPSTYPE fcaps)\n           551 | \t\u00e4\n           552 | \tlong int i = st.l-1;\n           553 | \tif ( i <0 ]] st.type NEQ str::_VALID ) return ;\n           554 | \tlong int flag = 1;\n           555 | \tswitch(fcaps)\n           556 | \t\t\u00e4\n           557 | \t\tcase cUPPER :\n           558 | \t\t\twhile (i+1) st.c\u00c4i\u00dc = (char )toupper(st.c\u00c4i--\u00dc);\n           559 | \t\t\tbreak ;\n           560 | \t\tcase cLOWER :\n           561 | \t\t\twhile (i+1) st.c\u00c4i\u00dc = (char )tolower(st.c\u00c4i--\u00dc);\n           562 | \t\t\tbreak ;\n           563 | \t\tcase cWORD:\n           564 | \t\t\tfor(i=0;i<st.l;i++)\n           565 | \t\t\t\t\u00e4 if ( st.c\u00c4i\u00dc == ' ' ) flag = 1 ;\n           566 | \t\t\t\telse if (flag) \u00e4 flag = 0; st.c\u00c4i\u00dc =(char ) toupper(st.c\u00c4i\u00dc);\u00fc\n           567 | \t\t\t\telse st.c\u00c4i\u00dc = (char )tolower(st.c\u00c4i\u00dc); \u00fc\n           568 | \t\t\tbreak ;\n           569 | \t\tcase cASIS   :\n           570 | \t\tdefault :\n           571 | \t\t\treturn ;\n           572 | \t\t\u00fc\n           573 | \t\u00fc\n           574 |\n           575 | mvsSTRING& mvsSTRING::strip()\n           576 | \t\u00e4\n           577 | #if defined(ISIS_PF_HOST) ]] defined(ISIS_PF_MU)\n           578 | \tchar linefeed = '\u00d6x15';\n           579 | \tchar horizontaltab = '\u00d6x05';\n           580 | #else\n           581 | \tchar linefeed  = '\u00d6x0a';\n           582 | \tchar horizontaltab = '\u00d6x09';\n           583 | #endif\n           584 | \tlong int is , iz ;\n           585 | \tif ( st.type NEQ str::_VALID ]]\n           586 | \t\tst.ltype == str::FIX ) return *this;\n           587 | \tfor( is =0;is<st.l;is++)\n           588 | \t\tif (st.c\u00c4is\u00dc NEQ ' ') break ;\n           589 | \tfor( iz=st.l-1;iz;iz--)\n           590 | \t\tif (st.c\u00c4iz\u00dc NEQ ' ' && st.c\u00c4iz\u00dc NEQ linefeed && st.c\u00c4iz\u00dc NEQ horizontaltab) break ;\n           591 | \tif ( is > iz ) *this = \"\";\n           592 | \telse \u00e4 st.c\u00c4iz+1\u00dc = 0; st.ltype = str::VARIABLE ;\n           593 | \tif (is) *this = (char *)&(st.c\u00c4is\u00dc);\n           594 | \telse\n           595 | \t\t\u00e4\n           596 | \t\tchar * temp = new char\u00c4strlen(st.c)+1\u00dc;\n           597 | \t\tstrcpy(temp,st.c);\n           598 | \t\t* this = temp ;\n           599 | \t\tdelete \u00c4\u00dc temp;\n           600 | \t\t\u00fc\n           601 | \t\t\u00fc\n           602 | \treturn * this;\n           603 | \t\u00fc\n           604 |\n           605 | int mvsSTRING::isEmpty()\n           606 | \t\u00e4\n           607 | \tif ( st.l == 0 ) return 1;\n           608 | \tmvsSTRING t = *this;\n           609 | \tt.st.ltype = str::VARIABLE;\n           610 | \tt.strip();\n           611 | \tif ( t.lengthOf() == 0) return 1;\n           612 | \treturn 0;\n           613 | \t\u00fc\n           614 |\n           615 | mvsSTRING& mvsSTRING::stripmvsSTRING()\n           616 | \t\u00e4\n           617 | \tst.ltype = str::VARIABLE;\n           618 | \tstrip();\n           619 | \treturn *this;\n           620 | \t\u00fc\n           621 | void mvsSTRING::parse(mvsSTRING& s , char c, mvsSTRING &rest )\n           622 | \t\u00e4\n           623 |\n           624 | \tchar *p = NULL;\n           625 | \tbool off =false;\n           626 | \tfor(int i=0;p==NULL&&i<lengthOf();i++)\n           627 | \t\t\u00e4\n           628 | \t\tif (st.c\u00c4i\u00dc == parseSepCh && st.c\u00c4i+1\u00dc|=parseSepCh)\n           629 | \t\t\toff=|off;\n           630 | \t\tif (|off&&st.c\u00c4i\u00dc==c)\n           631 | \t\t\tp = st.c+i;\n           632 | \t\t\u00fc\n           633 | \tif ( p ) \u00e4 *p = '\u00d6x00'; rest = p+1; s = st.c ; *p = c; \u00fc\n           634 | \telse\n           635 | \t\t\u00e4\n           636 | \t\ts = st.c;\n           637 | \t\trest = \"\";\n           638 | \t\t\u00fc\n           639 |\n           640 | \t\u00fc\n           641 | void mvsSTRING::parse(mvsSTRING& s , char * c, mvsSTRING & rest)\n           642 | \t\u00e4\n           643 | \tchar * p = NULL;\n           644 | \tbool off =false;\n           645 | \tfor(int i=0;p==NULL&&i<lengthOf();i++)\n           646 | \t\t\u00e4\n           647 | \t\tif (st.c\u00c4i\u00dc == parseSepCh && st.c\u00c4i+1\u00dc|=parseSepCh)\n           648 | \t\t\toff=|off;\n           649 | \t\tif (|off&&memcmp(st.c+i,c,strlen(c))==0)\n           650 | \t\t\tp = st.c+i;\n           651 | \t\t\u00fc\n           652 |\n           653 | \tif ( p)\n           654 | \t\t\u00e4\n           655 | \t\t//KV20051205 if s==*this or rest == *this then st.c might be deleted in assignment operator\n           656 | \t\t// -> p must not be used after assignment\n           657 | \t\tmvsSTRING tmp(st.c,p-st.c);\n           658 | \t\trest = p+strlen(c);\n           659 | \t\ts = tmp;\n           660 | \t\t\u00fc\n           661 | \telse\n           662 | \t\t\u00e4\n           663 | \t\ts = *this;\n           664 | \t\trest = \"\";\n           665 | \t\t\u00fc\n           666 | \t\u00fc\n           667 |\n           668 | void mvsSTRING::parse(mvsSTRING& s1,char c1, mvsSTRING& s2, char c2,mvsSTRING& rest)\n           669 | \t\u00e4\n           670 | \tmvsSTRING re;\n           671 | \tchar * p = NULL;\n           672 | \tbool off =false;\n           673 | \tfor(int i=0;p==NULL&&i<lengthOf();i++)\n           674 | \t\t\u00e4\n           675 | \t\tif (st.c\u00c4i\u00dc == parseSepCh && st.c\u00c4i+1\u00dc|=parseSepCh)\n           676 | \t\t\toff|=off;\n           677 | \t\tif (|off&&st.c\u00c4i\u00dc==c1)\n           678 | \t\t\tp = st.c+i;\n           679 | \t\t\u00fc\n           680 |\n           681 | \tif (p)\n           682 | \t\t\u00e4\n           683 | \t\tparse(s1,c1,re);\n           684 |\n           685 | \t\tre.parse(s2,c2,rest);\n           686 | \t\t\u00fc\n           687 | \telse \u00e4 s1 = st.c; s2 = \"\"; rest = \"\"; \u00fc\n           688 |\n           689 | \t\u00fc\n           690 |\n           691 | void mvsSTRING::parse(mvsSTRING&s10, char * c1,\n           692 | \t\t\t\t\t\t\t\t\t\t\tmvsSTRING&s20, char * c2, mvsSTRING&s30)\n           693 | \t\u00e4\n           694 | \tmvsSTRING rest;\n           695 | \tmvsSTRING s1 = \"\";\n           696 | \tmvsSTRING s2 = \"\";\n           697 | \tmvsSTRING s3 = \"\";\n           698 | \tthis->parse(s1,c1,rest);\n           699 | \tif ( NOT rest.isEmpty() )\n           700 | \t\t\u00e4\n           701 | \t\trest.parse(s2,c2,s3);\n           702 | \t\t\u00fc\n           703 | \ts10 = s1;\n           704 | \ts20 = s2;\n           705 | \ts30 = s3;\n           706 |\n           707 | \t\u00fc\n           708 |\n           709 | void mvsSTRING::split(mvsSTRING&s10, char * c1,\n           710 | \t\t\t\t\t\t\t\t\t\t\tmvsSTRING&s20, char * c2, mvsSTRING&s30)\n           711 | \t\u00e4\n           712 | \tmvsSTRING rest;\n           713 | \tmvsSTRING s1 = \"\";\n           714 | \tmvsSTRING s2 = \"\";\n           715 | \tmvsSTRING s3 = \"\";\n           716 | \tstrip();\n           717 | \tparse(s1,c1,rest);\n           718 | \tif ( NOT rest.isEmpty() )\n           719 | \t\t\u00e4\n           720 | \t\trest.strip();\n           721 | \t\trest.parse(s2,c2,s3);\n           722 | \t\t\u00fc\n           723 | \ts10 = s1.strip();\n           724 | \ts20 = s2.strip();\n           725 | \ts30 = s3.strip();\n           726 |\n           727 | \t\u00fc\n           728 | void mvsSTRING::split(mvsSTRING&s10, char * c1,\n           729 | \t\t\t\t\t\t\t\t\t\t\tmvsSTRING&s20, char * c2, mvsSTRING&s30,\n           730 | \t\t\t\t\t\t\t\t\t\t\tchar * c3, mvsSTRING&s40)\n           731 | \t\u00e4\n           732 | \tparse(s10,c1,s20,c2,s30,c3,s40);\n           733 | \t\u00fc\n           734 |\n           735 | void mvsSTRING::split(mvsSTRING&s10, char * c1,\n           736 | \t\t\t\t\t\t\t\t\t\t\tmvsSTRING&s20, char * c2, mvsSTRING&s30,\n           737 | \t\t\t\t\t\t\t\t\t\t\tchar * c3, mvsSTRING&s40,\n           738 | \t\t\t\t\t\t\t\t\t\t\tchar * c4, mvsSTRING&s50)\n           739 |\n           740 | \t\u00e4\n           741 | \tmvsSTRING rest;\n           742 | \tmvsSTRING s1 = \"\";\n           743 | \tmvsSTRING s2 = \"\";\n           744 | \tmvsSTRING s3 = \"\";\n           745 | \tmvsSTRING s4 = \"\";\n           746 | \tmvsSTRING s5 = \"\";\n           747 |\n           748 | \tthis->parse(s1,c1,rest);\n           749 | \tif ( NOT rest.isEmpty() )\n           750 | \t\t\u00e4\n           751 | \t\trest.parse(s2,c2,s3,c3,s4,c4,s5);\n           752 | \t\t\u00fc\n           753 | \ts10 = s1.strip();\n           754 | \ts20 = s2.strip();\n           755 | \ts30 = s3.strip();\n           756 | \ts40 = s4.strip();\n           757 |   s50 = s5.strip();\n           758 | \t\u00fc\n           759 |\n           760 | void mvsSTRING::parse(mvsSTRING&s10, char * c1,\n           761 | \t\t\t\t\t\t\t\t\t\t\tmvsSTRING&s20, char * c2,\n           762 | \t\t\t\t\t\t\t\t\t\t\tmvsSTRING&s30, char * c3, mvsSTRING&s40)\n           763 | \t\u00e4\n           764 | \tmvsSTRING rest;\n           765 | \tmvsSTRING s1 = \"\";\n           766 | \tmvsSTRING s2 = \"\";\n           767 | \tmvsSTRING s3 = \"\";\n           768 | \tmvsSTRING s4 = \"\";\n           769 | \tthis->parse(s1,c1,rest);\n           770 | \tif ( NOT rest.isEmpty() )\n           771 | \t\t\u00e4\n           772 | \t\trest.parse(s2,c2,s3,c3,s4);\n           773 | \t\t\u00fc\n           774 | \ts10 = s1.strip();\n           775 | \ts20 = s2.strip();\n           776 | \ts30 = s3.strip();\n           777 | \ts40 = s4.strip();\n           778 | \t\u00fc\n           779 |\n           780 | void mvsSTRING::dump(const char * f,int l)\n           781 | \t\u00e4\n           782 | #if 0\n           783 | \tchar * use = \"mvsSTRING\";\n           784 | \t// if ( 0 ) //( __test__ )\n           785 | \t// ::dump((FILE *)f,use,st.c,st.l);\n           786 | \tchar _d\u00c41024\u00dc;\n           787 | \tsprintf(_d,\" File:%s Line:%d %s: %*s (%d %d %d) \u00d6n\",f,l,use,st.l,st.c,st.l,st.ltype,st.type);\n           788 | \tputs(_d);\n           789 | #endif\n           790 | \t\u00fc\n           791 |\n           792 | mvsSTRING& mvsSTRING::format(FORMAT * f)\n           793 | \t\u00e4\n           794 | \tcaps(f->fcaps);\n           795 | \talign(f->falign);\n           796 | \treturn * this ;\n           797 | \t\u00fc\n           798 |\n           799 | char * mvsSTRING::getLlmvsSTRING()\n           800 | \t\u00e4\n           801 | \tst.lls = new char\u00c4st.l+2\u00dc;\n           802 | \t*(short*)st.lls = short(st.l);\n           803 | \tmemcpy(st.lls+2,st.c,st.l);\n           804 | \treturn st.lls;\n           805 | \t\u00fc\n           806 |\n           807 |\n           808 |\n           809 |\n           810 | #if 0\n           811 |\n           812 | mvsSTRING patternchng(mvsSTRING  input,char *  mask,\n           813 | \t\t\t\t\t\t\t\t\t\t\tmvsSTRING  (*f)(mvsSTRING ))\n           814 | \t\u00e4\n           815 | \tchar * mv\u00c432\u00dc;\n           816 | \tlong int mflag = 1, mi = 0 ;\n           817 | \tlong int ml = strlen(mask);\n           818 | \tlong int i  , j ;\n           819 |\n           820 | \tfor(i=0;i<ml;i++)\n           821 | \t\t\u00e4  if ( *(mask+i) == '*' )\n           822 | \t\t\u00e4 *(mask+i ) = 0 ;\n           823 | \tmv\u00c4mi++\u00dc   = 0 ;\n           824 | \tmflag = 1;\n           825 | \t\t\u00fc\n           826 | \t\telse\n           827 | \t\t\tif (mflag)\n           828 | \t\t\t\t\u00e4 mflag = 0;\n           829 | \tmv\u00c4mi++\u00dc = mask+i ; \u00fc\n           830 | \t\t\u00fc\n           831 |\n           832 |\n           833 | \tlong int start = 0, stop = 0, offset = 0;\n           834 | \tmvsSTRING outputstr(\" \",0);\n           835 | \tmvsSTRING r = input ;\n           836 | \tchar * s ;\n           837 |\n           838 |\n           839 | \tfor(i=0;i<strlen(input);i++)\n           840 | \t\t\u00e4\n           841 | \t\tfor(j=0;j<mi;j++)\n           842 | \t\t\tif ( j == 0)\n           843 | \t\t\t\t\u00e4 if ( mv\u00c40\u00dc == 0)\n           844 | \t\t\t\t\u00e4 start = i ;  stop = strlen(input) ; \u00fc\n           845 | \t\t\t\telse if ( ( s = strstr(((char *)input)+i,mv\u00c40\u00dc) ) NEQ 0)\n           846 | \t\t\t\t\t\u00e4 start  = s - (char *)input ;  stop= start+strlen(mv\u00c40\u00dc);\n           847 | \t\toffset =stop-start ; \u00fc\n           848 | \t\t\t\telse \u00e4 stop = 0 ;break; \u00fc\n           849 | \t\t\t\t\u00fc\n           850 | \t\t\telse\n           851 |\n           852 | \t\t\t\t\u00e4\n           853 | \t\t\t\tif (  mv\u00c4j\u00dc == 0 ) \u00e4 stop =  strlen(input) ; continue ;\u00fc\n           854 |\n           855 | \t\t\t\telse if ( ( s = strstr((char *)input+start+offset,mv\u00c4j\u00dc)) NEQ 0 )\n           856 | \t\t\t\t\tstop = s-input+strlen(mv\u00c4j\u00dc);\n           857 | \t\t\t\telse \u00e4 stop = 0; break;\u00fc\n           858 | \t\t\t\t\u00fc\n           859 |\n           860 |\n           861 |\n           862 |\n           863 |\n           864 | \t\t\tif ( start < stop)\n           865 |\n           866 | \t\t\t\t\u00e4  outputstr  = outputstr + input(i,start-i);\n           867 | \t\t\tmvsSTRING t((char *)input+start,stop-start);\n           868 | \t\t\tr = input+stop;\n           869 | \t\t\toutputstr = outputstr + f(t) ;\n           870 | \t\t\ti =stop ;\n           871 | \t\t\tstart = stop = offset = 0;\n           872 | \t\t\t\t\u00fc\n           873 | \t\t\u00fc\n           874 | \toutputstr = outputstr+r;\n           875 | \treturn outputstr ;\n           876 |\n           877 | \t\u00fc\n           878 | #endif\n           879 |\n           880 |\n           881 | //#include <stdlib.h>\n           882 |\n           883 |\n           884 |\n           885 | sLLType  sLLTypeTable\u00c4\u00dc = \u00e4 sLLt0, sLLt1, sLLt2, sLLt3, sLLt4, sLLt0\u00fc;\n           886 |\n           887 | // Construtors:\n           888 | // default output\n           889 | //\n           890 |\n           891 |\n           892 | sLL::sLL(sLLType st , sLLUsage su,int l):mERROR()\n           893 | \t\u00e4\n           894 | \ttype = st;\n           895 | \tusage = su;\n           896 | \tstatus = sLLOk;\n           897 | \tallocl = 0;\n           898 |\n           899 | \tbase = child = (sLL*)0;\n           900 | \tllength = int(type);\n           901 |\n           902 | \tif ( usage NEQ sLLinput )\n           903 | \t\t\u00e4\n           904 | \t\tallocl = l;\n           905 | \t\tstart = new char \u00c4l\u00dc;\n           906 | \t\tstoredl = offset = llength;\n           907 | \t\tcursor = start+offset;\n           908 | \t\tlength = l;\n           909 | \t\tfromInt(start,length,llength);\n           910 | \t\t\u00fc\n           911 | \t\u00fc\n           912 |\n           913 | //\n           914 | // From a base sLL\n           915 | //\n           916 |\n           917 | sLL ::sLL (sLL  * b,int o,sLLType st):mERROR()\n           918 | \t\u00e4\n           919 | \tinit(b,o,st);\n           920 | \t\u00fc\n           921 |\n           922 | //\n           923 | // From a base SLL with offset\n           924 | //\n           925 |\n           926 | sLL::sLL(sLL * b,char  * s,\n           927 | \t\t\t\t sLLType st):mERROR()\n           928 | \t\u00e4\n           929 | \tinit(b,s-(b->start),st);\n           930 | \t\u00fc\n           931 |\n           932 | //\n           933 | // From a mvsSTRING\n           934 | //\n           935 |\n           936 | sLL ::sLL (char  * s,sLLType  st):mERROR()\n           937 | \t\u00e4\n           938 | \tallocl = 0;\n           939 | \tusage = sLLinput ;\n           940 | \ttype = st;\n           941 | \tstatus = sLLOk;\n           942 |\n           943 | \tbase = child =(sLL*)0;\n           944 | \tstoredl = llength = offset = int(st);\n           945 |\n           946 | \tlength = int(toInt(s,llength));\n           947 | \tstart = s;\n           948 | \tcursor = start+offset;\n           949 |\n           950 | \t\u00fc\n           951 |\n           952 | sLL :: sLL(char  * s, int ix):mERROR()\n           953 | \t\u00e4\n           954 | \tsLLType st = sLLTypeTable\u00c4ix\u00dc;\n           955 | \tusage = sLLinput ;\n           956 | \ttype = st;\n           957 | \tstatus = sLLOk;\n           958 |\n           959 | \tbase = child =(sLL*)0;\n           960 | \tstoredl =  llength = offset = int(st);\n           961 |\n           962 | \tlength = int(toInt(s,llength));\n           963 | \tstart = s;\n           964 | \tcursor = start+offset;\n           965 | \t\u00fc\n           966 |\n           967 | //\n           968 | // Copy constructor\n           969 | //\n           970 |\n           971 | sLL ::sLL (const sLL & f):mERROR()\n           972 | \t\u00e4\n           973 | \tallocl = f.allocl;\n           974 | \ttype   = f.type;\n           975 | \tusage  = f.usage;\n           976 | \tstatus = f.status;\n           977 |\n           978 | \tif ( usage NEQ sLLinput)\n           979 | \t\tstart = new char \u00c4f.allocl\u00dc;\n           980 | \telse\n           981 | \t\tstart = new char \u00c4f.length\u00dc;\n           982 |\n           983 | \tlength = f.length;\n           984 | \toffset = f.offset;\n           985 | \tllength = f.llength;\n           986 | \tstoredl = f.storedl;\n           987 | \tbase = NULL ;\n           988 | \tcursor = start+(f.cursor-f.start);\n           989 | \tmemcpy(start,f.start,length);\n           990 | \t\u00fc\n           991 |\n           992 | // Destructor\n           993 |\n           994 | sLL::\u00dfsLL()\n           995 | \t\u00e4\n           996 | \tif ( allocl ) delete \u00c4\u00dc start;\n           997 | \t\u00fc\n           998 |\n           999 | //\n          1000 | // Assignemnt operator\n          1001 | //\n          1002 |\n          1003 | sLL & sLL ::operator=(sLL  & from)\n          1004 | \t\u00e4\n          1005 | \tif ( &from == this ) return *this;\n          1006 |\n          1007 | \tif (allocl )\n          1008 | \t\t\u00e4\n          1009 | \t\tdelete \u00c4\u00dc start ;\n          1010 | \t\t\u00fc\n          1011 | \terr = from.err;\n          1012 | \tallocl = from.allocl ? from.allocl : from.length;\n          1013 | \tstart = new char \u00c4allocl\u00dc;\n          1014 | \tlength = from.length;\n          1015 |\n          1016 | \tusage = from.usage;\n          1017 | \ttype  = from.type;\n          1018 | \tstatus = from.status;\n          1019 | \tllength = from.llength;\n          1020 | \toffset = from.offset;\n          1021 | \tstoredl= from.storedl;\n          1022 | \tcursor = start+(from.cursor-from.start);\n          1023 |\n          1024 | \tbase = from.base;\n          1025 | \tchild = from.child;\n          1026 |\n          1027 | \tmemcpy(start,from.start,length);\n          1028 | \treturn * this;\n          1029 | \t\u00fc\n          1030 |\n          1031 | sLL::operator int()\n          1032 | \t\u00e4\n          1033 | \tif ( status == sLLOk && NOT iserror() )\n          1034 | \t\t\u00e4\n          1035 | \t\tif (usage == sLLinput) return  getRemainderLength() ;\n          1036 | \t\telse return storeOk(1);\n          1037 | \t\t\u00fc\n          1038 |\n          1039 | \telse\n          1040 | \t\treturn 0;\n          1041 | \t\u00fc\n          1042 |\n          1043 | char  & sLL::operator\u00c4\u00dc(int o)\n          1044 | \t\u00e4\n          1045 | \tif ( offset < length )\n          1046 | \t\treturn start\u00c4o\u00dc;\n          1047 |\n          1048 | \tstatus = sLLOf; markerror();\n          1049 | \treturn dummy;\n          1050 | \t\u00fc\n          1051 |\n          1052 | //\n          1053 | // Iterate on base - child structure\n          1054 | //\n          1055 |\n          1056 | sLL *sLL::iterate(sLLType st,int resetf)\n          1057 | \t\u00e4\n          1058 | \tsetUsage(sLLinput);\n          1059 | \tif ( resetf ) resetCursor();\n          1060 | \tchild = new sLL(this,cursor,st);\n          1061 | \tif (child->iserror()) return NULL;\n          1062 | \treturn child;\n          1063 | \t\u00fc\n          1064 |\n          1065 | //\n          1066 | // Get back the next child\n          1067 | //\n          1068 |\n          1069 | sLL  *sLL ::next()\n          1070 | \t\u00e4\n          1071 |\n          1072 | \tif ( child == 0 ]] iserror() )\n          1073 | \t\treturn (sLL *)0;\n          1074 | \tint    l  = child->getFullLength();\n          1075 | \tdelete child;\n          1076 |\n          1077 | \tif ( goCursor(l+type) )\n          1078 | \t\t\u00e4\n          1079 | \t\tcursor-=type;\n          1080 | \t\tchild = new sLL(this,cursor,type);\n          1081 | \t\treturn child;\n          1082 | \t\t\u00fc\n          1083 | \telse\n          1084 | \t\t\u00e4\n          1085 | \t\tchild = 0;\n          1086 | \t\treturn NULL;\n          1087 | \t\t\u00fc\n          1088 | \t\u00fc\n          1089 | void sLL::remove(sLL& o)\n          1090 | \t\u00e4\n          1091 |\n          1092 | \tsLL s(type,sLLoutputVar,storedl);\n          1093 | \tsLL * si = iterate(type);\n          1094 | \twhile ( si )\n          1095 | \t\t\u00e4\n          1096 | \t\tif ( si->getStart() NEQ o.getStart() )\n          1097 | \t\t\ts<<(*si);\n          1098 | \t\tsi = next();\n          1099 | \t\t\u00fc\n          1100 | \t*this = s;\n          1101 | \t\u00fc\n          1102 |\n          1103 | // Get info\n          1104 |\n          1105 |\n          1106 | sLL   * sLL ::getBase()\u00e4 return base;\u00fc\n          1107 | int     sLL ::getOffset()\u00e4 return offset;\u00fc\n          1108 | int     sLL ::getFullLength()\u00e4 return length;\u00fc\n          1109 | int     sLL ::getStoredLength()\u00e4 return storedl;\u00fc\n          1110 | int     sLL ::getRemainderLength()\n          1111 | \t\u00e4 if (status == sLLOk )\n          1112 | \treturn (length - (cursor - start) ) ;\n          1113 | return 0;\n          1114 | \t\u00fc\n          1115 | char  * sLL ::getCursor()\u00e4 return cursor;\u00fc\n          1116 | sLL   * sLL ::getChild()\u00e4 return child;\u00fc\n          1117 | void    sLL ::setBase(sLL *b)\u00e4 base = b;\u00fc\n          1118 | void    sLL ::setChild(sLL *c)\u00e4 child = c;\u00fc\n          1119 | void    sLL ::setUsage(sLLUsage u)\n          1120 | \t\u00e4\n          1121 | \tif ( u == usage ) return;\n          1122 |\n          1123 | \tif ( u == sLLinput )\n          1124 | \t\t\u00e4\n          1125 | \t\tsetLength();\n          1126 | \t\tlength = storedl;\n          1127 | \t\tresetCursor();\n          1128 | \t\t\u00fc\n          1129 | \telse\n          1130 | \t\t\u00e4\n          1131 | \t\tcursor = start+length;\n          1132 | \t\t\u00fc\n          1133 | \tstatus = sLLOk;\n          1134 | \tclearerror();\n          1135 | \tusage = u;\n          1136 | \t\u00fc\n          1137 | // Cursor\n          1138 |\n          1139 | void sLL::resetCursor()\n          1140 | \t\u00e4\n          1141 | \tstatus = sLLOk;\n          1142 | \tclearerror();\n          1143 | \tcursor = start+llength;\n          1144 | \tif ( usage NEQ sLLinput ) setLength();\n          1145 |\n          1146 | \t\u00fc\n          1147 |\n          1148 | char  * sLL::goCursor(int v)\n          1149 | \t\u00e4\n          1150 | \tchar * c = cursor+v;\n          1151 | \tif ( iserror() ]] status NEQ sLLOk ) return 0;\n          1152 | \tif ( (c-start) <= length && (c-start ) >= llength )\n          1153 | \t\t\u00e4\n          1154 | \t\tcursor = c;\n          1155 | \t\tif ( usage NEQ sLLinput) setLength();\n          1156 | \t\treturn cursor ;\n          1157 | \t\t\u00fc\n          1158 | \telse\n          1159 | \t\t\u00e4\n          1160 | \t\tstatus = sLLUf;\n          1161 | \t\tcursor = start +length;\n          1162 | \t\tmarkerror();\n          1163 | \t\treturn 0;\n          1164 | \t\t\u00fc\n          1165 | \t\u00fc\n          1166 |\n          1167 | void sLL::setLength()\n          1168 | \t\u00e4\n          1169 | \tstoredl = cursor-start;\n          1170 | \tfromInt(start,cursor-start,int(type));\n          1171 | \t\u00fc\n          1172 |\n          1173 | sLL& sLL::operator >>(int& i)\n          1174 | \t\u00e4\n          1175 | \tsetUsage(sLLinput);\n          1176 | \ti = int(toInt(cursor,sizeof(int)));\n          1177 | \tgoCursor(sizeof( int));\n          1178 | \treturn *this;\n          1179 | \t\u00fc\n          1180 |\n          1181 | sLL& sLL::operator>>(unsigned short& s )\n          1182 | \t\u00e4\n          1183 | \tsetUsage(sLLinput);\n          1184 | \ts =(unsigned short) toInt(cursor,sizeof(short));\n          1185 | \tgoCursor(sizeof(short));\n          1186 | \treturn *this;\n          1187 | \t\u00fc\n          1188 |\n          1189 | sLL& sLL::operator>>(short& s )\n          1190 | \t\u00e4\n          1191 | \tsetUsage(sLLinput);\n          1192 | \ts = short(toInt(cursor,sizeof(short)));\n          1193 | \tgoCursor(sizeof(short));\n          1194 | \treturn *this;\n          1195 | \t\u00fc\n          1196 |\n          1197 |\n          1198 | sLL& sLL::operator>>(char  & c)\n          1199 | \t\u00e4\n          1200 | \tsetUsage(sLLinput);\n          1201 | \tc = *cursor;\n          1202 | \tgoCursor(1);\n          1203 | \treturn *this;\n          1204 | \t\u00fc\n          1205 |\n          1206 | sLL& sLL::operator >>(char * & s)\n          1207 | \t\u00e4\n          1208 | \tsetUsage(sLLinput);\n          1209 | \ts =  cursor;\n          1210 | \treturn * this;\n          1211 | \t\u00fc\n          1212 |\n          1213 | sLL& sLL::operator>>(mvsSTRING & s)\n          1214 | \t\u00e4\n          1215 | \tsetUsage(sLLinput);\n          1216 | \ts = mvsSTRING(cursor,getRemainderLength());\n          1217 | \tgoCursor(getRemainderLength());\n          1218 | \treturn * this;\n          1219 | \t\u00fc\n          1220 |\n          1221 | sLL& sLL::operator >>(sLL& s)\n          1222 | \t\u00e4\n          1223 | \tsetUsage(sLLinput);\n          1224 | \tsLL ns(cursor,s.type);\n          1225 | \ts = ns;\n          1226 | \tgoCursor(s.length);\n          1227 |\n          1228 | \treturn * this;\n          1229 | \t\u00fc\n          1230 |\n          1231 | sLL& sLL::operator>>(INT3 & s)\n          1232 | \t\u00e4\n          1233 | \tsetUsage(sLLinput);\n          1234 | \ts = int(toInt(cursor,3));\n          1235 | \tgoCursor(3);\n          1236 | \treturn *this;\n          1237 | \t\u00fc\n          1238 |\n          1239 | sLL& sLL::operator>>(sLLskip & s)\n          1240 | \t\u00e4\n          1241 | \tsetUsage(sLLinput);\n          1242 | \tgoCursor(int(s));\n          1243 | \treturn *this;\n          1244 |\n          1245 | \t\u00fc\n          1246 |\n          1247 | sLL& sLL::operator<<(int i)\n          1248 | \t\u00e4\n          1249 | \tif ( storeOk(sizeof(int)) )\n          1250 |\n          1251 | \t\t\u00e4\n          1252 | \t\tfromInt(cursor,i,sizeof(i));\n          1253 | \t\tgoCursor(sizeof(int));\n          1254 | \t\t\u00fc\n          1255 | \treturn *this;\n          1256 | \t\u00fc\n          1257 |\n          1258 | sLL& sLL::operator<<(short i)\n          1259 | \t\u00e4\n          1260 | \tif ( storeOk(sizeof(short)) )\n          1261 |\n          1262 | \t\t\u00e4\n          1263 | \t\tfromInt(cursor,i,sizeof(i));\n          1264 | \t\tgoCursor(sizeof(short));\n          1265 | \t\t\u00fc\n          1266 | \treturn *this;\n          1267 | \t\u00fc\n          1268 |\n          1269 | sLL& sLL::operator<<(unsigned short i)\n          1270 | \t\u00e4\n          1271 | \tif ( storeOk(sizeof(short)) )\n          1272 |\n          1273 | \t\t\u00e4\n          1274 | \t\tfromInt(cursor,short(i),sizeof(i));\n          1275 | \t\tgoCursor(sizeof(short));\n          1276 | \t\t\u00fc\n          1277 | \treturn *this;\n          1278 | \t\u00fc\n          1279 |\n          1280 | sLL& sLL::operator<<(char  c)\n          1281 | \t\u00e4\n          1282 | \tif (storeOk(1))\n          1283 | \t\t\u00e4\n          1284 | \t\t*cursor=c;\n          1285 | \t\tgoCursor(1);\n          1286 | \t\t\u00fc\n          1287 | \treturn *this;\n          1288 | \t\u00fc\n          1289 |\n          1290 | sLL& sLL::operator<<(char  * str)\n          1291 | \t\u00e4\n          1292 | \tint l = strlen(str);\n          1293 | \tif ( storeOk(l) )\n          1294 | \t\t\u00e4\n          1295 | \t\tmemcpy(cursor,str,l);\n          1296 | \t\tgoCursor(l);\n          1297 | \t\t\u00fc\n          1298 | \treturn * this;\n          1299 | \t\u00fc\n          1300 |\n          1301 | sLL& sLL::operator<<(mvsSTRING & s)\n          1302 | \t\u00e4\n          1303 | \tint l = s.lengthOf();\n          1304 | \tif (storeOk(l) )\n          1305 | \t\t\u00e4\n          1306 | \t\tmemcpy(cursor,(char *)(s),l);\n          1307 | \t\tgoCursor(l);\n          1308 | \t\t\u00fc\n          1309 | \treturn * this;\n          1310 | \t\u00fc\n          1311 | sLL& sLL::operator<<(sLL & s)\n          1312 | \t\u00e4\n          1313 | \tint l = s.getLength();\n          1314 | \tif ( storeOk(l) )\n          1315 | \t\t\u00e4\n          1316 | \t\tmemcpy(cursor,s.getStart(),l);\n          1317 | \t\tgoCursor(l);\n          1318 | \t\t\u00fc\n          1319 | \treturn * this;\n          1320 | \t\u00fc\n          1321 |\n          1322 | sLL& sLL::operator<<(INT3& i)\n          1323 | \t\u00e4\n          1324 | \tif (storeOk(3)  )\n          1325 | \t\t\u00e4\n          1326 | \t\tfromInt(cursor,int(i),3);\n          1327 | \t\tgoCursor(3);\n          1328 | \t\t\u00fc\n          1329 | \treturn * this;\n          1330 | \t\u00fc\n          1331 |\n          1332 | sLL& sLL::operator<<(sLLskip& s)\n          1333 | \t\u00e4\n          1334 | \tif ( storeOk(int(s))  )\n          1335 | \t\t\u00e4\n          1336 | \t\tmemset(cursor,null,int(s));\n          1337 | \t\tgoCursor(int(s));\n          1338 | \t\t\u00fc\n          1339 | \treturn *this;\n          1340 | \t\u00fc\n          1341 |\n          1342 | sLL& sLL::store(char  * p,int l)\n          1343 | \t\u00e4\n          1344 | \tif ( l <= 0 ) return *this;\n          1345 | \tif ( storeOk(l) )\n          1346 | \t\t\u00e4\n          1347 | \t\tmemcpy(cursor,p,l);\n          1348 | \t\tgoCursor(l);\n          1349 | \t\t\u00fc\n          1350 | \treturn * this;\n          1351 | \t\u00fc\n          1352 |\n          1353 | //szm20050629\n          1354 | mvsSTRING sLL::getString()\n          1355 | \t\u00e4\n          1356 | \tif ( *(getCursor()+getRemainderLength()) == '\u00d6x00' )\n          1357 | \t\tstring = getCursor();\n          1358 | \telse\n          1359 | \t\t\u00e4\n          1360 | \t\tchar * c = new char\u00c4getRemainderLength()+1\u00dc;\n          1361 | \t\tc\u00c4getRemainderLength()\u00dc = null;\n          1362 | \t\tmemcpy(c,getCursor(),getRemainderLength());\n          1363 | \t\tstring = c;\n          1364 | \t\tdelete \u00c4\u00dc c;\n          1365 | \t\t\u00fc\n          1366 | \treturn string;\n          1367 | \t\u00fc\n          1368 | //szm20050629\n          1369 |\n          1370 | //\n          1371 | // Utilies\n          1372 | //\n          1373 |\n          1374 | void sLL::init(sLL * b,int o,sLLType st)\n          1375 | \t\u00e4\n          1376 | \ttype  = st;\n          1377 | \tusage = sLLinput;\n          1378 | \tstatus = sLLOk;\n          1379 | \tallocl = 0;\n          1380 | \tbase  = b;\n          1381 | \tchild = 0;\n          1382 | \tstart = (b->start)+o;\n          1383 |\n          1384 | \toffset = llength = int(st);\n          1385 | \tcursor = start+offset;\n          1386 | \tb->setChild(this);\n          1387 | \tif ( usage == sLLinput  ]] b  )\n          1388 | \t\tstoredl = length = int(toInt (start,llength));\n          1389 | \telse\n          1390 | \t\tstoredl = length = llength ;\n          1391 | \t\u00fc\n          1392 |\n          1393 | int sLL::storeOk(int l)\n          1394 | \t\u00e4\n          1395 | #if defined(OWN_STDIO) == 0\n          1396 | \tassert ( l >= 0 );\n          1397 | #endif\n          1398 | \tint r;\n          1399 | \tif ( usage == sLLinput )\n          1400 | \t\t\u00e4\n          1401 | \t\tcursor = start+length;\n          1402 | \t\tusage = sLLoutputVar;\n          1403 | \t\t\u00fc\n          1404 | \telse\n          1405 | \t\t\u00e4\n          1406 | \t\tr = allocl -(cursor-start);\n          1407 | \t\tif ( r >= l ) return 1;\n          1408 | \t\tif ( usage == sLLoutput )\n          1409 | \t\t\t\u00e4\n          1410 | \t\t\tstatus = sLLOf;\n          1411 | \t\t\treturn 0;\n          1412 | \t\t\t\u00fc\n          1413 | \t\t\u00fc\n          1414 | \tr =l+(cursor-start);\n          1415 | \tchar * n = new char \u00c4r\u00dc;\n          1416 |\n          1417 | \tint o = cursor-start;\n          1418 | \tmemcpy(n,start,o);\n          1419 | \tif ( allocl )\n          1420 | \t\tdelete \u00c4\u00dc start;\n          1421 | \tlength = allocl = r;\n          1422 | \tstart = n;\n          1423 | \tcursor = n+o;\n          1424 | \treturn 1;\n          1425 | \t\u00fc\n          1426 |\n          1427 | //\n          1428 | //\n          1429 | //\n          1430 |\n          1431 | void sLL::dump(const char *f,int ln)\n          1432 | \t\u00e4\n          1433 | #if 0\n          1434 | \tchar * use = (usage == sLLinput) ? \"Input\" : \"Output\" ;\n          1435 | \tint l   = (usage == sLLinput) ? length : storedl;\n          1436 | \tchar b\u00c41024\u00dc;\n          1437 | \tsprintf(b,\" File:%s Line:%d %s %d \u00d6n\",f,ln,use,l\n          1438 | \t\t);\n          1439 | \tputs(b);\n          1440 | \tstring.dump(f,ln);\n          1441 | #endif\n          1442 | \t\u00fc\n          1443 |\n          1444 |\n          1445 | int sLL::write(void * f)\n          1446 | \t\u00e4\n          1447 | \treturn fwrite(start,1,getLength(),(FILE *)f);\n          1448 | \t\u00fc\n          1449 |\n          1450 | sLL * readsLL(void* f,sLLType t)\n          1451 | \t\u00e4\n          1452 | \tint l;\n          1453 | \tchar lx\u00c44\u00dc;\n          1454 |\n          1455 | \tif ( fread(lx,1,int(t),(FILE *)f) )\n          1456 | \t\t\u00e4\n          1457 |\n          1458 | \t\tl = int(toInt(lx,int(t)));\n          1459 | \t\tchar * b = new char \u00c4l\u00dc;\n          1460 | \t\tmemcpy(b,lx,int(t));\n          1461 | \t\tsLL * ret = NULL;\n          1462 | \t\tif ( fread(b+int(t),1,l-int(t),(FILE *)f) )\n          1463 | \t\t\t\u00e4\n          1464 | \t\t\tsLL buff(b,t);\n          1465 | \t\t\tret = new sLL(buff);\n          1466 | \t\t\t\u00fc\n          1467 | \t\tdelete \u00c4\u00dcb;\n          1468 | \t\treturn ret;\n          1469 |\n          1470 | \t\t\u00fc\n          1471 | \telse return NULL;\n          1472 | \t\u00fc\n          1473 |\n          1474 | //--------------------------------------------------------------------\n          1475 | //--------------------------------------------------------------------\n          1476 | //--------------------------------------------------------------------\n          1477 |\n          1478 | /*\n          1479 | sLLTag class fix type sLLt2 ( two bytes length)\n          1480 | short code\n          1481 | ...\n          1482 | */\n          1483 |\n          1484 | void sLLTag::init(short c )\n          1485 | \t\u00e4\n          1486 | \t//printf(\"code :%d\u00d6n\",c);\n          1487 | \tcode = c ;\n          1488 | \tsearchcode = 0;\n          1489 | #ifdef CALL_TAG\n          1490 | \tname = TagCatalog\u00c4code\u00dc ?(char *)(TagCatalog\u00c4code\u00dc->name) :  \"???\";\n          1491 | #endif\n          1492 | \t//  printf(\"%s\u00d6n\",name);\n          1493 | \t\u00fc\n          1494 |\n          1495 | sLLTag::sLLTag():sLL(sLLt2,sLLoutputVar)\n          1496 | \t\u00e4\n          1497 | \tinit(0);\n          1498 | \t(*this)<<short(0);\n          1499 | \t\u00fc\n          1500 |\n          1501 | sLLTag::sLLTag(short c)\n          1502 | #ifdef CALL_TAG\n          1503 | :sLL(sLLt2,sLLoutputVar,TagCatalog\u00c4c\u00dc->maxlength+5)\n          1504 | #endif\n          1505 | \t\u00e4\n          1506 | \tinit(c);\n          1507 | \t(*this)<<c;\n          1508 | \t\u00fc\n          1509 |\n          1510 | sLLTag::sLLTag(char * s):sLL(s)\n          1511 | \t\u00e4\n          1512 | \t(*this)>>code;\n          1513 | \tinit(code);\n          1514 | \t\u00fc\n          1515 |\n          1516 | sLLTag::sLLTag(const sLLTag & s):sLL(s)\n          1517 | \t\u00e4\n          1518 | \tcode = s.code;\n          1519 | \tname = s.name;\n          1520 | \tsearchcode = s.searchcode;\n          1521 | \t\u00fc\n          1522 |\n          1523 | sLLTag::sLLTag(sLL * b,char  * s):sLL(b,s,sLLt2)\n          1524 | \t\u00e4\n          1525 | \t(*this)>>code;\n          1526 | \tinit(code);\n          1527 | \t\u00fc\n          1528 |\n          1529 | sLLTag& sLLTag::operator=(sLLTag&  from)\n          1530 | \t\u00e4\n          1531 |\n          1532 | \tif ( &from == this ) return *this;\n          1533 | \tthis->sLL::operator=(from);\n          1534 | \tcode   = from.code;\n          1535 | \tname   = from.name;\n          1536 | \tsearchcode = from.searchcode;\n          1537 | \treturn *this;\n          1538 | \t\u00fc\n          1539 |\n          1540 | sLLTag * sLLTag::search(short c)\n          1541 | \t\u00e4\n          1542 | \tsLLTag * s ;\n          1543 | \tsetUsage(sLLinput);\n          1544 | \tif ( c )\n          1545 | \t\t\u00e4\n          1546 | \t\tsearchcode = c;\n          1547 | \t\tresetCursor();\n          1548 | \t\ts = iterate();\n          1549 | \t\t\u00fc\n          1550 | \telse s = next();\n          1551 | \twhile( s && searchcode NEQ s->getCode() )\n          1552 | \t\t\u00e4\n          1553 | \t\ts = next();\n          1554 | \t\t\u00fc\n          1555 |\n          1556 | \tstatus = sLLOk;\n          1557 | \tclearerror();\n          1558 | \treturn (s);\n          1559 | \t\u00fc\n          1560 |\n          1561 | sLLTag * sLLTag::update(sLLTag & f )\n          1562 | \t\u00e4\n          1563 |\n          1564 | \tsLLTag * s = search(f.code);\n          1565 | \tif ( s )\n          1566 | \t\t\u00e4\n          1567 | \t\tremove(*s);\n          1568 | \t\t\u00fc\n          1569 | \t(*this)<<f;\n          1570 | \treturn s;\n          1571 | \t\u00fc\n          1572 |\n          1573 | void sLLTag::resetCursor()\n          1574 | \t\u00e4\n          1575 | \tsLL::resetCursor();\n          1576 | \tgoCursor(sizeof(short));\n          1577 | \t\u00fc\n          1578 |\n          1579 |\n          1580 | void sLLTag::remove(sLLTag& o)\n          1581 | \t\u00e4\n          1582 |\n          1583 | \tsLLTag s(code);\n          1584 | \tresetCursor();\n          1585 | \tsLLTag * si = iterate();\n          1586 | \twhile ( si )\n          1587 | \t\t\u00e4\n          1588 | \t\tif ( si->getStart() NEQ o.getStart() )\n          1589 | \t\t\ts<<(*si);\n          1590 | \t\tsi = next();\n          1591 | \t\t\u00fc\n          1592 | \t*this = s;\n          1593 | \t\u00fc\n          1594 |\n          1595 |\n          1596 | sLLTag *sLLTag::iterate()\n          1597 | \t\u00e4\n          1598 |\n          1599 | \tchild = new sLLTag(this,cursor);\n          1600 | \tif (child->iserror()) return NULL;\n          1601 | \t//child->dump(__FILE__,__LINE__);\n          1602 | \treturn ((sLLTag *)child);\n          1603 | \t\u00fc\n          1604 |\n          1605 | //\n          1606 | // Get back the next child\n          1607 | //\n          1608 |\n          1609 | sLLTag * sLLTag::next()\n          1610 | \t\u00e4\n          1611 |\n          1612 | \tif ( child == 0 ]] iserror() )\n          1613 | \t\treturn (sLLTag *)0;\n          1614 | \tint l  = child->getFullLength();\n          1615 | \tdelete child;\n          1616 |\n          1617 | \tif ( goCursor(l+type) )\n          1618 | \t\t\u00e4\n          1619 | \t\tcursor-=type;\n          1620 | \t\tchild = new sLLTag(this,cursor);\n          1621 | \t\t//child->dump(__FILE__,__LINE__);\n          1622 | \t\treturn ((sLLTag *)child);\n          1623 | \t\t\u00fc\n          1624 | \telse\n          1625 | \t\t\u00e4\n          1626 | \t\tchild = 0;\n          1627 | \t\treturn NULL;\n          1628 | \t\t\u00fc\n          1629 | \t\u00fc\n          1630 |\n          1631 | void sLLTag::dump(const char *f,int ln)\n          1632 | \t\u00e4\n          1633 | #if 0\n          1634 | \tchar b\u00c41024\u00dc;\n          1635 | \tsprintf(b,\" File:%s Line:%d Name:%s Code:%d \u00d6n\",f,ln,name,code);\n          1636 | \tputs(b);\n          1637 | \tsLL::dump(\"\",0);\n          1638 | #endif\n          1639 | \t\u00fc\n0                                   * * * * *   E N D   O F   S O U R C E   * * * * *\n-\n\n15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(MVSBASE)'                      30.11.12 08:25:52\n0                                    * * * * *   I N C L U D E S   * * * * *\n     1  =  //'ESA.PRJ.CBTDSSN.HPP(ISISDEF)'\n     2  =  //'CEE.SCEEH.H(STDLIB)'\n     3  =  //'CEE.SCEEH.H(FEATURES)'\n     4  =  //'CEE.SCEEH.H(BUILTINS)'\n     5  =  //'CEE.SCEEH.H(STDDEF)'\n     6  =  //'CEE.SCEEH.H(STRING)'\n     7  =  //'CEE.SCEEH.H(STRINGS)'\n     8  =  //'CEE.SCEEH.SYS.H(TYPES)'\n     9  =  //'ESA.PRJ.CBTDSSN.HPP(MVSBASE)'\n    10  =  //'ESA.PRJ.CBTDSSN.HPP(MERROR)'\n    11  =  //'ESA.PRJ.CBTDSSN.HPP(DSNAMEUT)'\n    12  =  //'CEE.SCEEH.H(ASSERT)'\n    13  =  //'CEE.SCEEH.H(STDIO)'\n    14  =  //'ESA.PRJ.CBTDSSN.HPP(MISC)'\n    15  =  //'CEE.SCEEH.H(TIME)'\n    16  =  //'CEE.SCEEH.H(ASSERT)'\n    17  =  //'CEE.SCEEH.H(CTYPE)'\n    18  =  //'CEE.SCEEH.H(NEW)'\n    19  =  //'CEE.SCEEH(NEW)'\n    20  =  //'CEE.SCEEH(EXCEPTIO)'\n    21  =  //'CEE.SCEEH(XSTDDEF)'\n    22  =  //'CEE.SCEEH.H(YVALS)'\n    23  =  //'CEE.SCEEH(CSTDDEF)'\n    24  =  //'ESA.PRJ.CBTDSSN.HPP(IBMDEBUG)'\n    25  =  //'CEE.SCEEH.H(CTEST)'\n-                                 * * * * *   E N D   O F   I N C L U D E S   * * * * *\n0\n15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(MVSBASE)'                      30.11.12 08:25:52\n-                           * * * * *   M E S S A G E   S U M M A R Y   * * * * *\n0TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL\n                (U)       (S)         (E)        (W)          (I)\n     0           0         0           0          0            0\n0                    * * * * *   E N D   O F   M E S S A G E   S U M M A R Y   * * * * *\n0                        * * * * *   E N D   O F   C O M P I L A T I O N   * * * * *\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RARCSQL": {"ttr": 2703, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(RARCSQL)'                      30.11.12 08:25:35\n0                                      * * * * *   P R O L O G   * * * * *\n    Compiler options. . . . . . . :AGGRCOPY(NOOVERLAP)             ANSIALIAS       ARCH(7)         ARGPARSE        NOASCII\n                                  :NOATTRIBUTE     ASSERT(RESTRICT)                BITFIELD(UNSIGNED)              CHARS(UNSIGNED)\n                                  :NOCOMPACT       NOCOMPRESS      CVFT            NODFP           DIGRAPH         DLL(CALLBACKANY)\n                                  :ENUMSIZE(SMALL) NOEVENTS        EXECOPS         EXH             NOEXPMAC        NOEXPORTALL\n                                  :NOFASTTEMPINC   FLAG(I)         NOGOFF          GONUMBER        HALT(16)\n                                  :NOHGPR(NOPRESERVE)              NOHOT           NOIGNERRNO      ILP32           NOINITAUTO\n                                  :NOINLRPT        NOLIBANSI       NOLIST          LONGNAME        NOMAKEDEP       NOMARGINS\n                                  :MAXMEM(2097152) MEMORY          NAMEMANGLING(zOSV1R2)           NESTINC(255)    OBJECT\n                                  :OBJECTMODEL(COMPAT)             NOOE            NOOFFSET        OPTIMIZE(2)     PLIST(HOST)\n                                  :NOPORT          NOPPONLY        PREFETCH        REDIR           NOREPORT        ROSTRING\n                                  :ROCONST         RTTI(ALL)       NOSEQUENCE      NOSHOWINC       NOSHOWMACROS    SOURCE\n                                  :SKIPSRC(SHOW)   SPILL(3600)     START           NOSTATICINLINE  STRICT\n                                  :NOSTRICT_INDUCTION              TARGET(LE,CURRENT)              TEMPLATEDEPTH(300)\n                                  :NOTEMPLATEREGISTRY              TEMPLATERECOMPILE               TERMINAL        TEST(HOOK)\n                                  :TMPLPARSE(NO)   TUNE(7)         UNROLL(AUTO)    UTF             NOWARN0X        NOWARN64\n                                  :NOWSIZEOF       NOXREF\n                                  :NOCICS\n                                  :NOCONVLIT\n                                  :NOCSECT\n                                  :DEBUG(FORMAT(ISD),LEVEL(0),HOOK(NOLINE,NOBLOCK,NOPATH,CALL,FUNC),NOSYMBOL)\n                                  :DEFINE(__OS390__=1,_POSIX_SOURCE=1,_XOPEN_SOURCE_EXTENDED=1,MU_STANDALONE=1,ISIS_PF_MU=1)\n                                  :FLOAT(HEX,FOLD,NOMAF,AFP(NOVOLATILE)) ROUND(Z)\n                                  :NOHALTONMSG\n                                  :INFO(LAN)\n                                  :INLINE(AUTO,NOREPORT,100,1000)\n                                  :NOIPA\n                                  :KEYWORD(bool,explicit,export,false,mutable,namespace,true,typename,using,restrict,__restrict__,\n                                   __restrict,_Pragma,__alignof__,__asm__,__attribute__,__const__,__extension__,__volatile__,\n                                   __inline__,__signed__,__typeof__,__I,_Complex,__complex__,__real__,__imag__)\n                                  :NOKEYWORD(char16_t,char32_t,decltype,static_assert,typeof)\n                                  :LANGLVL(ANONSTRUCT,ANONUNION,ANSIFOR,ANSISINIT,NOAUTOTYPEDEDUCTION,C99VLA,C99__FUNC__,\n                                   NOC99LONGLONG,NOC99PREPROCESSOR,NOCOMPATRVALUEBINDING,NODBCS,NODECLTYPE,NODELEGATINGCTORS,\n                                   DEPENDENTBASELOOKUP,NODOLLARINNAMES,EMPTYSTRUCT,NOEXTENDEDFRIEND,NOEXTENDEDINTEGERSAFE,\n                                   EXTERNTEMPLATE,ILLPTOM,IMPLICITINT,NOINLINENAMESPACE,LIBEXT,LONGLONG,NONEWEXCP,OFFSETNONPOD,\n                                   NOOLDDIGRAPH,OLDFRIEND,NOOLDMATH,NOOLDSTR,OLDTEMPACC,NOOLDTMPLALIGN,OLDTMPLSPEC,NOSTATIC_ASSERT,\n                                   NOTEMPSASLOCALS,NOTEXTAFTERENDIF,GNU_LABELVALUE,GNU_COMPUTEDGOTO,TRAILENUM,TYPEDEFCLASS,NOUCS,\n                                   VARARGMACROS,NOVARIADICTEMPLATES,GNU_INCLUDE_NEXT,ZEROEXTARRAY,NOC99COMPLEX,NOC99COMPLEXHEADER,\n                                   NOGNU_COMPLEX,GNU_SUFFIXIJ)\n                                  :LOCALE(DE_DE.IBM-273)\n                                  :NOLSEARCH\n                                  :OPTFILE(DD:OPTFILE)\n                                  :NORTCHECK\n                                  :SEARCH(//'CEE.SCEEH.+', //'CBC.SCLBH.+', CEE.SCEEH.+, CBC.SCLBH.+, DD:USERLIB)\n                                  :NOSERVICE\n                                  :NOSQL\n                                  :NOSUPPRESS\n                                  :TEMPINC(./tempinc)\n                                  :NOXPLINK(NOBACKCHAIN,NOCALLBACK,GUARD,OSCALL(UPSTACK),NOSTOREARGS)\n    Version Macros. . . . . . . . : __COMPILER_VER__=0x410D0000\n                                  : __LIBREL__=0x410D0000\n                                  : __TARGET_LIB__=0x410D0000\n    Source margins. . . . . . . . :\n      Varying length. . . . . . . : 1 - 32760\n      Fixed length. . . . . . . . : 1 - 32760\n    Sequence columns. . . . . . . :\n      Varying length. . . . . . . : none\n      Fixed length. . . . . . . . : none\n    Locale name . . . . . . . . . : DE_DE.IBM-273\n    Code set. . . . . . . . . . . : IBM-273\n    Listing name. . . . . . . . . : DD:SYSCPRT\n0                                 * * * * *   E N D   O F   P R O L O G   * * * * *\n-\n15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(RARCSQL)'                      30.11.12 08:25:35\n-\n                                       * * * * *   S O U R C E   * * * * *\n0            1 | #include \"isisdef.h\"\n             2 | #include <unistd.h>\n             3 | #include <stdlib.h>\n             4 | #include <string.h>\n             5 | #include <strings.h>\n             6 | #include \"rarcsql.hpp\"\n             7 | #include \"jobenv.hpp\"\n             8 | #include \"casmif.hpp\"\n             9 | #include <sys/time.h>\n            10 |\n            11 | ISIS_EXT_C typedef int  (* ppdberror)(char *); //szm20050413\n            12 | ppdberror  pdberror;                           //szm20050413\n            13 |\n            14 | extern \"C\" int locDBError(char *)\n            15 | \u00e4\n            16 | \t return 0;\n            17 | \u00fc\n            18 |\n            19 | #ifndef unsigned\n            20 | #define unsigned\n            21 | #endif\n            22 |\n            23 |\n            24 | static char bhex\u00c424\u00dc;\n            25 |\n            26 | char * hex(int v,int l)\n            27 | \u00e4\n            28 |  sprintf(bhex,\"%*.*x\u00d6n\",2*l,2*l,v);\n            29 |  return bhex;\n            30 | \u00fc\n            31 |\n            32 | typedef struct\n            33 |               \u00e4 short   SQLPLLEN;\n            34 |                 short   SQLFLAGS;\n            35 |                 short   SQLCTYPE;\n            36 |                 char    SQLPROGN\u00c48\u00dc;\n            37 |                 short   SQLTIMES\u00c44\u00dc;\n            38 |                 short   SQLSECTN;\n            39 |                 char   *SQLCODEP;\n            40 |                 char   *SQLVPARM;\n            41 |                 char   *SQLAPARM;\n            42 |                 short   SQLSTNUM;\n            43 |                 short   SQLSTYPE;\n            44 |               \u00fc SQLPLIST;\n            45 | typedef struct\n            46 |               \u00e4 short    SQLTYPE;\n            47 |                 short    SQLLEN;\n            48 |                 char    *SQLADDR;\n            49 |                 char    *SQLIND;\n            50 |               \u00fc SQLELTS;\n            51 | typedef SQLELTS     *SQLELTS_PTR;\n            52 | char    SQLTEMP\u00c4 19 \u00dc ;\n            53 | char    DSNPNM\u00c4 57 \u00dc ;\n            54 |\n            55 | /***$$$\n            56 |   EXEC SQL INCLUDE SQLCA\n            57 | $$$***/\n            58 | #ifndef SQLCODE\n            59 | struct sqlca\n            60 |   \u00e4 unsigned  char     sqlcaid\u00c48\u00dc;\n            61 |               long     sqlcabc;\n            62 |               long     sqlcode;\n            63 |               short    sqlerrml;\n            64 |     unsigned  char     sqlerrmc\u00c470\u00dc;\n            65 |     unsigned  char     sqlerrp\u00c48\u00dc;\n            66 |               long     sqlerrd\u00c46\u00dc;\n            67 |     unsigned  char     sqlwarn\u00c411\u00dc;\n            68 |     unsigned  char     sqlstate\u00c45\u00dc;\n            69 |             \u00fc ;\n            70 | #define SQLCODE  sqlca.sqlcode\n            71 | #define SQLWARN0 sqlca.sqlwarn\u00c40\u00dc\n            72 | #define SQLWARN1 sqlca.sqlwarn\u00c41\u00dc\n            73 | #define SQLWARN2 sqlca.sqlwarn\u00c42\u00dc\n            74 | #define SQLWARN3 sqlca.sqlwarn\u00c43\u00dc\n            75 | #define SQLWARN4 sqlca.sqlwarn\u00c44\u00dc\n            76 | #define SQLWARN5 sqlca.sqlwarn\u00c45\u00dc\n            77 | #define SQLWARN6 sqlca.sqlwarn\u00c46\u00dc\n            78 | #define SQLWARN7 sqlca.sqlwarn\u00c47\u00dc\n            79 | #define SQLWARN8 sqlca.sqlwarn\u00c48\u00dc\n            80 | #define SQLWARN9 sqlca.sqlwarn\u00c49\u00dc\n            81 | #define SQLWARNA sqlca.sqlwarn\u00c410\u00dc\n            82 | #define SQLSTATE sqlca.sqlstate\n            83 | #endif\n            84 | struct sqlca sqlca;\n            85 |\n            86 |\n            87 | /***$$$\n            88 |   EXEC SQL INCLUDE SQLDA\n            89 | $$$***/\n            90 | #ifndef SQLDASIZE\n            91 | struct sqlda\n            92 |    \u00e4  unsigned char   sqldaid\u00c48\u00dc;\n            93 |                long   sqldabc;\n            94 |                short  sqln;\n            95 |                short  sqld;\n            96 |                struct sqlvar\n            97 |                   \u00e4 short          sqltype;\n            98 |                     short          sqllen;\n            99 |                     unsigned char *sqldata;\n           100 |                     short         *sqlind;\n           101 |                     struct sqlname\n           102 |                        \u00e4 short         length;\n           103 |                          unsigned char data\u00c430\u00dc;\n           104 |                        \u00fc sqlname;\n           105 |                   \u00fc sqlvar\u00c41\u00dc;\n           106 |             \u00fc ;\n           107 | #define SQLDASIZE(n) \u00d6\n           108 |    ( sizeof( sqlda) + ((n)-1) * sizeof( sqlvar) )\n           109 | #endif\n           110 |\n           111 |\n           112 | /***$$$\n           113 |   EXEC SQL BEGIN DECLARE SECTION\n           114 | $$$***/\n           115 |\n           116 |\n           117 |   struct \u00e4\n           118 |   short len;\n           119 |   char  value\u00c4512\u00dc;\n           120 |   \u00fc prepare;\n           121 |\n           122 |\n           123 | /***$$$\n           124 |   EXEC SQL END DECLARE SECTION\n           125 | $$$***/\n           126 |\n           127 |\n           128 |\n           129 |\n           130 | const char * IDENTIFY           = \"IDENTIFY          \";\n           131 | const char * SIGNON             = \"SIGNON            \";\n           132 | const char * CREATE_THREAD      = \"CREATE THREAD     \";\n           133 | const char * TERMINATE_THREAD   = \"TERMINATE THREAD  \";\n           134 | const char * TERMINATE_IDENTIFY = \"TERMINATE IDENTIFY\";\n           135 | const char * CONNECT            = \"CONNECT           \";\n           136 |\n           137 | ARCHSQL::ARCHSQL()\n           138 | \u00e4\n           139 |   status = 0;\n           140 |   secb = tecb = 0;\n           141 |   ribptr = 0;\n           142 |   eibptr = 0;\n           143 |\n           144 |   memset(ssnm,' ',4);\n           145 |   memset(plan,' ',8);\n           146 |   memset(collection,' ',sizeof(collection));\n           147 |   memset(reuse,' ',sizeof(reuse));  //That makes it INITIAL\n           148 |   messagetext = new MessageTEXT(0); //ZA030519\n           149 |   JOBENV job(\"RARCSQL\");\n           150 |   memset(correlation_id,' ',sizeof(correlation_id));\n           151 |   strcpy(correlation_id,job.jobId);\n           152 |   memset(accounting_token,' ',sizeof(accounting_token));\n           153 |   sprintf(accounting_token,\"%s%s\",(char *)job.jobName,(char*)job.jobId); //ZA090713\n           154 |   memset(accounting_interval,' ',sizeof(accounting_interval));\n           155 |   if (pdberror==NULL)     //szm20050413\n           156 | \t\t\tpdberror=locDBError;\n           157 | \t// first call initializes list of load module entry points\n           158 |   rrs = SQLASM();\n           159 | \u00fc\n           160 |\n           161 | ARCHSQL::\u00dfARCHSQL()\n           162 | \u00e4\n           163 |   if ( status )\n           164 |   call(Disconnect);\n           165 |   // second call clears list of load module entry points\n           166 |   SQLASM();\n           167 | \u00fc\n           168 |\n           169 | int ARCHSQL::call(CallType t)\n           170 | \u00e4\n           171 |   int msg = 0;\n           172 |   retcode = reasoncode = 0;\n           173 |   switch(t)\n           174 |   \u00e4\n           175 |   case Connect:\n           176 |     if (rrs)\n           177 |     \u00e4\n           178 |       rc = DSNALI(IDENTIFY,\n           179 |             &ssnm\u00c40\u00dc,\n           180 |             &ribptr,&eibptr,&tecb,&secb,\n           181 |             &retcode,&reasoncode);\n           182 | \t\t\tif (rc<0) //szm20050829 second connect returns -1 or -2 if parm error\n           183 | \t\t\t\t\u00e4\n           184 | \t\t\t\tif (rc == -1)\n           185 | \t\t\t\t\treturn 1;\n           186 | \t\t\t\telse\n           187 | \t\t\t\t\tassert(\"SSQLASM parm error\"|=0);\n           188 | \t\t\t\t\u00fc\n           189 |       if ( retcode NEQ 0)\n           190 |       \u00e4\n           191 |       \t//ZA030519 97.. message numbers changed to 98.. message numbers\n           192 |         pdberror(Msg(9821)<<IDENTIFY<<\n           193 |         //#ifdef ISIS_PF_HOST_IBM //ZA050715\n           194 |         #if defined(ISIS_PF_MI) ]] defined(ISIS_PF_MU)\n           195 |         (int)retcode<<hex(reasoncode,4)<<eol);\n           196 |         #else\n           197 |         long(retcode)<<hex(reasoncode,4)<<eol);\n           198 |         #endif\n           199 |         return 0;\n           200 |       \u00fc\n           201 |     \u00fc\n           202 |     else\n           203 |     \u00e4\n           204 |       rc = DSNALI(CONNECT,\n           205 |             &ssnm\u00c40\u00dc,\n           206 |             &tecb,&secb,&ribptr,&retcode,&reasoncode);\n           207 | \t\t\tif (rc<0) //szm20050829 second connect returns -1 or -2 if parm error\n           208 | \t\t\t\u00e4\n           209 | \t\t\t\tif (rc == -1)\n           210 | \t\t\t\t\treturn 1;\n           211 | \t\t\t\telse\n           212 | \t\t\t\t\tassert(\"SSQLASM parm error\"|=0);\n           213 | \t\t\t\u00fc\n           214 |       if ( retcode NEQ 0)\n           215 |       \u00e4\n           216 |         if (retcode NEQ 200 ]] reasoncode NEQ 0x00c10201u)\n           217 |         \u00e4\n           218 |         //#ifdef ISIS_PF_HOST_IBM //ZA050715\n           219 |         #if defined(ISIS_PF_MI) ]] defined(ISIS_PF_MU)\n           220 |         pdberror(Msg(9801)<<(int)retcode<<hex(reasoncode,4)<<eol);\n           221 |         #else\n           222 |         pdberror(Msg(9801)<<long(retcode)<<hex(reasoncode,4)<<eol);\n           223 |         #endif\n           224 |         return 0;\n           225 |       \u00fc\n           226 |       else //ZA050304 already connected\n           227 |       \u00e4\n           228 |         status = 1;\n           229 |         break;\n           230 |       \u00fc\n           231 |      \u00fc\n           232 |    \u00fc\n           233 |   case Open:\n           234 |   if (rrs)\n           235 |   \u00e4\n           236 |       rc = DSNALI(SIGNON,\n           237 |             &correlation_id\u00c40\u00dc,\n           238 |             &accounting_token\u00c40\u00dc,\n           239 |             &accounting_interval\u00c40\u00dc,\n           240 |             &retcode,&reasoncode);\n           241 |\n           242 |       if ( retcode NEQ 0)\n           243 |       \u00e4\n           244 |         pdberror(Msg(9821)<<SIGNON<<\n           245 |         //#ifdef ISIS_PF_HOST_IBM //ZA050715\n           246 |         #if defined(ISIS_PF_MI) ]] defined(ISIS_PF_MU)\n           247 |         (int)retcode<<hex(reasoncode,4)<<eol);\n           248 |         #else\n           249 |         long(retcode)<<hex(reasoncode,4)<<eol);\n           250 |         #endif\n           251 |         return 0;\n           252 |       \u00fc\n           253 |       if (collection\u00c40\u00dc NEQ ' ' && collection\u00c40\u00dc NEQ  0)\n           254 |         plan\u00c40\u00dc = '?';\n           255 |       rc = DSNALI(CREATE_THREAD,\n           256 |             &plan\u00c40\u00dc,\n           257 |             &collection\u00c40\u00dc,\n           258 |             &reuse\u00c40\u00dc, //ToDo: 25777 Citibank\n           259 |             &retcode,&reasoncode);\n           260 |\n           261 |       if ( retcode NEQ 0)\n           262 |       \u00e4\n           263 |         pdberror(Msg(9821)<<CREATE_THREAD<<\n           264 |         //#ifdef ISIS_PF_HOST_IBM //ZA050715\n           265 |         #if defined(ISIS_PF_MI) ]] defined(ISIS_PF_MU)\n           266 |         (int)retcode<<hex(reasoncode,4)<<eol);\n           267 |         #else\n           268 |         long(retcode)<<hex(reasoncode,4)<<eol);\n           269 |         #endif\n           270 |         return 0;\n           271 |       \u00fc\n           272 |   \u00fc\n           273 |   else\n           274 |   \u00e4\n           275 |     rc = DSNALI(\"OPEN        \",\n           276 |           &ssnm\u00c40\u00dc,\n           277 |           &plan\u00c40\u00dc,\n           278 |           &retcode,&reasoncode);\n           279 |\n           280 |     if ( retcode NEQ 0 )\n           281 |     \u00e4\n           282 |       //#ifdef ISIS_PF_HOST_IBM //ZA050715\n           283 |       #if defined(ISIS_PF_MI) ]] defined(ISIS_PF_MU)\n           284 |       pdberror(Msg(9811)<<(int)retcode<<hex(reasoncode,4)<<eol);\n           285 |       #else\n           286 |       pdberror(Msg(9811)<<long(retcode)<<hex(reasoncode,4)<<eol);\n           287 |       #endif\n           288 |       return 0;\n           289 |     \u00fc\n           290 |   \u00fc\n           291 |   status = 1;\n           292 |   break;\n           293 |   case Close:\n           294 |     if (rrs)\n           295 |     \u00e4\n           296 |       rc = DSNALI(TERMINATE_THREAD,\n           297 |             &retcode,&reasoncode);\n           298 |\n           299 |       if ( retcode NEQ 0)\n           300 |       \u00e4\n           301 |         pdberror(Msg(9821)<<TERMINATE_THREAD<<\n           302 |         //#ifdef ISIS_PF_HOST_IBM //ZA050715\n           303 |         #if defined(ISIS_PF_MI) ]] defined(ISIS_PF_MU)\n           304 |         (int)retcode<<hex(reasoncode,4)<<eol);\n           305 |         #else\n           306 |         long(retcode)<<hex(reasoncode,4)<<eol);\n           307 |         #endif\n           308 |         return 0;\n           309 |       \u00fc\n           310 |     \u00fc\n           311 |     else\n           312 |     \u00e4\n           313 |       rc = DSNALI(\"CLOSE       \",\n           314 |             \"SYNC\",\n           315 |             &retcode,&reasoncode);\n           316 |\n           317 | \t\t\tif ( retcode NEQ 0)\n           318 |       \u00e4\n           319 |         //#ifdef ISIS_PF_HOST_IBM //ZA050715\n           320 |         #if defined(ISIS_PF_MI) ]] defined(ISIS_PF_MU)\n           321 |         pdberror(Msg(9812)<<(int)retcode<<hex(reasoncode,4)<<eol);\n           322 |         #else\n           323 |         pdberror(Msg(9812)<<long(retcode)<<hex(reasoncode,4)<<eol);\n           324 |         #endif\n           325 |         return 0;\n           326 |       \u00fc\n           327 |     \u00fc\n           328 | /***$$$\n           329 |     EXEC SQL WHENEVER SQLERROR   GOTO SQLERROR\n           330 | $$$***/\n           331 |\n           332 |\n           333 | /***$$$\n           334 |     EXEC SQL WHENEVER SQLWARNING GOTO SQLWARNING\n           335 | $$$***/\n           336 |\n           337 |\n           338 | /***$$$\n           339 |     EXEC SQL WHENEVER NOT FOUND GOTO SQLNOTFOUND\n           340 | $$$***/\n           341 |\n           342 |    status = 1;\n           343 |    break;\n           344 |   case Disconnect:\n           345 |   if (rrs)\n           346 |   \u00e4\n           347 |       rc = DSNALI(TERMINATE_IDENTIFY,\n           348 |             &retcode,&reasoncode);\n           349 |\n           350 |       if ( retcode NEQ 0)\n           351 |       \u00e4\n           352 |         pdberror(Msg(9821)<<TERMINATE_IDENTIFY<<\n           353 |         //#ifdef ISIS_PF_HOST_IBM //ZA050715\n           354 |         #if defined(ISIS_PF_MI) ]] defined(ISIS_PF_MU)\n           355 |         (int)retcode<<hex(reasoncode,4)<<eol);\n           356 |         #else\n           357 |         long(retcode)<<hex(reasoncode,4)<<eol);\n           358 |         #endif\n           359 |         return 0;\n           360 |      \u00fc\n           361 |   \u00fc\n           362 |   else\n           363 |   \u00e4\n           364 |     rc = DSNALI(\"DISCONNECT  \",\n           365 |           &retcode,&reasoncode);\n           366 |\n           367 | \t\tif (retcode && (NOT ( retcode == 4 && reasoncode == 0x00c10824u)) )\n           368 |     \u00e4\n           369 |       //#ifdef ISIS_PF_HOST_IBM //ZA050715\n           370 |       #if defined(ISIS_PF_MI) ]] defined(ISIS_PF_MU)\n           371 |       pdberror(Msg(9802)<<(int)retcode<<(int)reasoncode<<eol);\n           372 |       #else\n           373 |       pdberror(Msg(9802)<<long(retcode)<<long(reasoncode)<<eol);\n           374 |       #endif\n           375 |       return 0;\n           376 |     \u00fc\n           377 |     status = 0;\n           378 |    \u00fc\n           379 |    status = 0;\n           380 |    return 1;\n           381 |     break;\n           382 |   case Prepare:\n           383 |\n           384 | /***$$$\n           385 |     EXEC SQL PREPARE S1 FROM :prepare\n           386 | $$$***/\n           387 |   \u00e4\n           388 |   SQLPLIST SQLPLIST4 =\n           389 |   //\u00e440, 8192, 35, \"ARCHSQL \", 0, 0, 0, 0,\n           390 |   \u00e440, 8192, 35, \"ARCHSQL\", 0, 0, 0, 0,\n           391 |    1, 0, 0, 0, 70, 14\u00fc;\n           392 |   SQLELTS_PTR SQLELTS_PTR4;\n           393 |   SQLPLIST4.SQLVPARM = (char *) &prepare;\n           394 |   SQLPLIST4.SQLCODEP = (char *) &sqlca;\n           395 |   SQLPLIST4.SQLTIMES\u00c4 0 \u00dc = 0x15EC;\n           396 |   SQLPLIST4.SQLTIMES\u00c4 1 \u00dc = 0xE8EE;\n           397 |   SQLPLIST4.SQLTIMES\u00c4 2 \u00dc = 0x0228;\n           398 |   SQLPLIST4.SQLTIMES\u00c4 3 \u00dc = 0x99B4;\n           399 |   DSNHLI ( (unsigned int * ) &SQLPLIST4);\n           400 |   \u00fc\n           401 |   if (SQLCODE < 0) goto  SQLERROR;\n           402 |   if (SQLCODE > 0 && SQLCODE NEQ 100 ]]\n           403 |       SQLWARN0 == 'W') goto SQLWARNING;\n           404 |   if (SQLCODE == 100)  goto  SQLNOTFOUND;\n           405 |\n           406 |     status = 1;\n           407 |     break;\n           408 |   case Execute:\n           409 |\n           410 | /***$$$\n           411 |     EXEC SQL EXECUTE S1\n           412 | $$$***/\n           413 |   \u00e4\n           414 |   SQLPLIST SQLPLIST5 =\n           415 |   //\u00e440, 0, 30, \"ARCHSQL \", 0, 0, 0, 0,\n           416 |   \u00e440, 0, 30, \"ARCHSQL\", 0, 0, 0, 0,\n           417 |    1, 0, 0, 0, 74, 15\u00fc;\n           418 |   SQLELTS_PTR SQLELTS_PTR5;\n           419 |   SQLPLIST5.SQLCODEP = (char *) &sqlca;\n           420 |   SQLPLIST5.SQLTIMES\u00c4 0 \u00dc = 0x15EC;\n           421 |   SQLPLIST5.SQLTIMES\u00c4 1 \u00dc = 0xE8EE;\n           422 |   SQLPLIST5.SQLTIMES\u00c4 2 \u00dc = 0x0228;\n           423 |   SQLPLIST5.SQLTIMES\u00c4 3 \u00dc = 0x99B4;\n           424 |   DSNHLI ( (unsigned int * ) &SQLPLIST5);\n           425 |   \u00fc\n           426 |   if (SQLCODE < 0) goto  SQLERROR;\n           427 |   if (SQLCODE > 0 && SQLCODE NEQ 100 ]]\n           428 |       SQLWARN0 == 'W') goto SQLWARNING;\n           429 |   if (SQLCODE == 100)  goto  SQLNOTFOUND;\n           430 |\n           431 |     status = 1;\n           432 |     break;\n           433 |   case Commit:\n           434 |\n           435 | /***$$$\n           436 |     EXEC SQL COMMIT\n           437 | $$$***/\n           438 |   \u00e4\n           439 |   SQLPLIST SQLPLIST6 =\n           440 |   //\u00e440, 0, 150, \"ARCHSQL \", 0, 0, 0, 0,\n           441 |   \u00e440, 0, 150, \"ARCHSQL\", 0, 0, 0, 0,\n           442 |    0, 0, 0, 0, 78, 310\u00fc;\n           443 |   SQLELTS_PTR SQLELTS_PTR6;\n           444 |   SQLPLIST6.SQLCODEP = (char *) &sqlca;\n           445 |   SQLPLIST6.SQLTIMES\u00c4 0 \u00dc = 0x15EC;\n           446 |   SQLPLIST6.SQLTIMES\u00c4 1 \u00dc = 0xE8EE;\n           447 |   SQLPLIST6.SQLTIMES\u00c4 2 \u00dc = 0x0228;\n           448 |   SQLPLIST6.SQLTIMES\u00c4 3 \u00dc = 0x99B4;\n           449 |   DSNHLI ( (unsigned int * ) &SQLPLIST6);\n           450 |   \u00fc\n           451 |   if (SQLCODE < 0) goto  SQLERROR;\n           452 |   if (SQLCODE > 0 && SQLCODE NEQ 100 ]]\n           453 |       SQLWARN0 == 'W') goto SQLWARNING;\n           454 |   if (SQLCODE == 100)  goto  SQLNOTFOUND;\n           455 |\n           456 |     status = 1;\n           457 |     break;\n           458 |   case Rollback:\n           459 |\n           460 | /***$$$\n           461 |     EXEC SQL ROLLBACK\n           462 | $$$***/\n           463 |   \u00e4\n           464 |   SQLPLIST SQLPLIST7 =\n           465 |   //\u00e440, 0, 155, \"ARCHSQL \", 0, 0, 0, 0,\n           466 |   \u00e440, 0, 155, \"ARCHSQL\", 0, 0, 0, 0,\n           467 |    0, 0, 0, 0, 82, 277\u00fc;\n           468 |   SQLELTS_PTR SQLELTS_PTR7;\n           469 |   SQLPLIST7.SQLCODEP = (char *) &sqlca;\n           470 |   SQLPLIST7.SQLTIMES\u00c4 0 \u00dc = 0x15EC;\n           471 |   SQLPLIST7.SQLTIMES\u00c4 1 \u00dc = 0xE8EE;\n           472 |   SQLPLIST7.SQLTIMES\u00c4 2 \u00dc = 0x0228;\n           473 |   SQLPLIST7.SQLTIMES\u00c4 3 \u00dc = 0x99B4;\n           474 |   DSNHLI ( (unsigned int * ) &SQLPLIST7);\n           475 |   \u00fc\n           476 |   if (SQLCODE < 0) goto  SQLERROR;\n           477 |   if (SQLCODE > 0 && SQLCODE NEQ 100 ]]\n           478 |       SQLWARN0 == 'W') goto SQLWARNING;\n           479 |   if (SQLCODE == 100)  goto  SQLNOTFOUND;\n           480 |\n           481 |     status = 1;\n           482 |     break;\n           483 |   default :\n           484 |     status = 0;\n           485 |     break;\n           486 |    \u00fc\n           487 |   return status;\n           488 |   SQLERROR: msg = 9804;\n           489 |   //   err = ERROR;\n           490 |        goto common;\n           491 |   SQLWARNING: msg = 9805;\n           492 |   //   err = WARNING;\n           493 |        goto common;\n           494 |   SQLNOTFOUND: msg = 9806;\n           495 |   //   err = WARNING;\n           496 |   common:\n           497 |     //#ifdef ISIS_PF_HOST_IBM //ZA050715\n           498 |     #if defined(ISIS_PF_MI) ]] defined(ISIS_PF_MU)\n           499 |     pdberror(Msg(msg)<<(int)SQLCODE<<eol);\n           500 |     #else\n           501 |     pdberror(Msg(msg)<<SQLCODE<<eol);\n           502 |     #endif\n           503 |     rc = DSNTIAR(&sqlca,&error_message,&data_len);\n           504 |     if ( rc )\n           505 |       //#ifdef ISIS_PF_HOST_IBM //ZA050715\n           506 |       #if defined(ISIS_PF_MI) ]] defined(ISIS_PF_MU)\n           507 |       pdberror(Msg(9807)<<(int)rc<<eol);\n           508 |       #else\n           509 |       pdberror(Msg(9807)<<long(rc)<<eol);\n           510 |       #endif\n           511 |     else\n           512 |     \u00e4\n           513 |       for(int i = 0;i<data_dim;i++)\n           514 |       pdberror(Msg(9808)<<mvsSTRING(error_message.error_text\u00c4i\u00dc,data_len)<<eol);\n           515 |     \u00fc\n           516 |   return status;\n           517 | \u00fc\n           518 |\n           519 | void ARCHSQL::setDynamicSQL(char * s)\n           520 | \u00e4\n           521 |   prepare.len = strlen(s);\n           522 |   strcpy(prepare.value,s);\n           523 | \u00fc\n           524 |\n           525 | //KV20050216 moved from isismisc.cpp\n           526 | static unsigned char tUK\u00c4\u00dc =\n           527 |      \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\u00d6\n           528 |          \"0123456789#$\"\u00d6\n           529 |          \"abcdefghijklmnopqrstuvwxyz\";\n           530 | #define UKEY_MAJOR \"STRTUKEY\"\n           531 | #define UKEY_MINOR \"ISIS_UKEY\"\n           532 |\n           533 | void getUniqueKey(char * t)\n           534 | \u00e4\n           535 |   char _dummy=0;                     //HL??\n           536 |   struct timeval tv;\n           537 |   struct timezone tz;\n           538 |   int i;\n           539 |   ENQ(UKEY_MAJOR,UKEY_MINOR,E,8,STEP,NONE);\n           540 | #if defined(MU_STANDALONE) == 0\n           541 |   PCSSleep(1);\n           542 | #else\n           543 | \tsleep(1);\n           544 | #endif\n           545 |   i = gettimeofday(&tv,&tz);\n           546 |   DEQ(UKEY_MAJOR,UKEY_MINOR,8,STEP,NONE);\n           547 |   memcpy((void*)t,(void*)&tv.tv_sec,4);\n           548 |   memcpy((void*)&t\u00c44\u00dc,(void*)&tv.tv_usec,4);\n           549 |   for (i = 0;i<8;i++)\n           550 |     if (NOT t\u00c4i\u00dc)\n           551 |       t\u00c4i\u00dc = 64; //change nulls to EBCDIC blanks\n           552 |   t\u00c48\u00dc = _dummy;\n           553 |\n           554 | \u00fc\n0                                   * * * * *   E N D   O F   S O U R C E   * * * * *\n-\n\n15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(RARCSQL)'                      30.11.12 08:25:35\n0                                    * * * * *   I N C L U D E S   * * * * *\n     1  =  //'ESA.PRJ.CBTDSSN.HPP(ISISDEF)'\n     2  =  //'CEE.SCEEH.H(UNISTD)'\n     3  =  //'CEE.SCEEH.H(FEATURES)'\n     4  =  //'CEE.SCEEH.SYS.H(TYPES)'\n     5  =  //'CEE.SCEEH.H(INTTYPES)'\n     6  =  //'CEE.SCEEH.H(STDINT)'\n     7  =  //'CEE.SCEEH.H(STDLIB)'\n     8  =  //'CEE.SCEEH.H(BUILTINS)'\n     9  =  //'CEE.SCEEH.H(STDDEF)'\n    10  =  //'CEE.SCEEH.H(STRING)'\n    11  =  //'CEE.SCEEH.H(STRINGS)'\n    12  =  //'ESA.PRJ.CBTDSSN.HPP(RARCSQL)'\n    13  =  //'ESA.PRJ.CBTDSSN.HPP(MVSBASE)'\n    14  =  //'ESA.PRJ.CBTDSSN.HPP(MERROR)'\n    15  =  //'ESA.PRJ.CBTDSSN.HPP(DSNAMEUT)'\n    16  =  //'CEE.SCEEH.H(ASSERT)'\n    17  =  //'CEE.SCEEH.H(STDIO)'\n    18  =  //'ESA.PRJ.CBTDSSN.HPP(MSGMGR)'\n    19  =  //'ESA.PRJ.CBTDSSN.HPP(MISC)'\n    20  =  //'CEE.SCEEH.H(TIME)'\n    21  =  //'ESA.PRJ.CBTDSSN.HPP(JOBENV)'\n    22  =  //'ESA.PRJ.CBTDSSN.HPP(CASMIF)'\n    23  =  //'ESA.PRJ.CBTDSSN.HPP(ASMIF)'\n    24  =  //'CEE.SCEEH.SYS.H(TIME)'\n-                                 * * * * *   E N D   O F   I N C L U D E S   * * * * *\n0\n15694A01 V1.13 z/OS XL C++             //'ESA.PRJ.CBTDSSN.CPP(RARCSQL)'                      30.11.12 08:25:35\n-                           * * * * *   M E S S A G E   S U M M A R Y   * * * * *\n0TOTAL   UNRECOVERABLE  SEVERE       ERROR     WARNING    INFORMATIONAL\n                (U)       (S)         (E)        (W)          (I)\n     0           0         0           0          0            0\n0                    * * * * *   E N D   O F   M E S S A G E   S U M M A R Y   * * * * *\n0                        * * * * *   E N D   O F   C O M P I L A T I O N   * * * * *\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RSQLASM": {"ttr": 193, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "1                                         High Level Assembler Option Summary                   (PTF UK75466)   Page    1\n-                                                                                            HLASM R6.0  2012/11/21 13.01\n0  No Overriding ASMAOPT Parameters\n   Overriding Parameters-  OBJECT,NODECK,LIST,TERM,NOXREF\n   No Process Statements\n\n\n   Options for this Assembly\n0  NOADATA\n     ALIGN\n     ASA\n     BATCH\n     CODEPAGE(047C)\n   NOCOMPAT\n   NODBCS\n 3 NODECK\n     DXREF\n     ESD\n   NOEXIT\n     FLAG(0,ALIGN,CONT,EXLITW,NOIMPLEN,NOPAGE0,PUSH,RECORD,NOSUBSTR,USING0)\n   NOFOLD\n   NOGOFF\n   NOINFO\n     LANGUAGE(EN)\n   NOLIBMAC\n     LINECOUNT(60)\n 3   LIST(121)\n     MACHINE(,NOLIST)\n     MXREF(SOURCE)\n 3   OBJECT\n     OPTABLE(UNI,NOLIST)\n   NOPCONTROL\n   NOPESTOP\n   NOPROFILE\n   NORA2\n   NORENT\n     RLD\n     RXREF\n     SECTALGN(8)\n     SIZE(MAX)\n   NOSUPRWARN\n     SYSPARM()\n 3   TERM(WIDE)\n   NOTEST\n     THREAD\n   NOTRANSLATE\n     TYPECHECK(MAGNITUDE,REGISTER)\n     USING(NOLIMIT,MAP,WARN(15))\n   NOWORKFILE\n 3 NOXREF\n\n   No Overriding DD Names\n1                                              External Symbol Dictionary                                       Page    2\n-Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                            HLASM R6.0  2012/11/21 13.01\n0          PC 00000001 00000000 00000000             00\n DSNALI    SD 00000002 00000000 0000006C             06\n DSNHLI    SD 00000003 00000070 0000006C             06\n DSNTIAR   SD 00000004 000000E0 0000006C             06\n SQLASM    SD 00000005 00000150 0000025C             06\n1                                                                                                               Page    3\n   Active Usings: None\n0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 13.01\n0                                      1          PRINT    GEN\n1         SQLASM SQL SAS/C interface module                                                                     Page    4\n   Active Usings: None\n0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 13.01\n0                                      3 *        CREGS USING\n                                       4          CREGS USING\n                       00000           5+R0       EQU   0                                                        01-CREGS\n                       00001           6+R1       EQU   1                                                        01-CREGS\n                       00002           7+R2       EQU   2                                                        01-CREGS\n                       00003           8+R3       EQU   3                                                        01-CREGS\n                       00004           9+R4       EQU   4                                                        01-CREGS\n                       00005          10+R5       EQU   5                                                        01-CREGS\n                       00006          11+R6       EQU   6                                                        01-CREGS\n                       00007          12+R7       EQU   7                                                        01-CREGS\n                       00008          13+R8       EQU   8                                                        01-CREGS\n                       00009          14+R9       EQU   9                                                        01-CREGS\n                       0000A          15+R10      EQU   10                                                       01-CREGS\n                       0000B          16+R11      EQU   11                                                       01-CREGS\n                       0000C          17+R12      EQU   12                                                       01-CREGS\n                       0000C          18+RCRAB    EQU   R12                CRAB POINTER                          01-CREGS\n                                      19+         USING CRAB,RCRAB                                               01-CREGS\n ** ASMA044E Undefined symbol - CRAB\n ** ASMA435I Record 18 in ESA.PRJ.CBTDSSN.ASM(CREGS) on volume: USER01\n                       0000D          20+R13      EQU   13                                                       01-CREGS\n                       0000D          21+RDSA     EQU   R13                DSA POINTER                           01-CREGS\n                                      22+         USING DSA,RDSA                                                 01-CREGS\n ** ASMA044E Undefined symbol - DSA\n ** ASMA435I Record 23 in ESA.PRJ.CBTDSSN.ASM(CREGS) on volume: USER01\n                       0000E          23+R14      EQU   14                                                       01-CREGS\n                       0000F          24+R15      EQU   15                                                       01-CREGS\n                       00000          25+FR0      EQU   0                                                        01-CREGS\n                       00002          26+FR2      EQU   2                                                        01-CREGS\n                       00004          27+FR4      EQU   4                                                        01-CREGS\n                       00006          28+FR6      EQU   6                                                        01-CREGS\n                                      29 *        IEANTASM\n                                      30          IEANTASM\n                                      31+*** START OF SPECIFICATIONS ******************************************\n                                      32+****PROPRIETARY_STATEMENT*********************************************\n                                      33+*01* PROPRIETARY-STATEMENT********************************************\n                                      34+*                                                                    *\n                                      35+* LICENSED MATERIALS - PROPERTY OF IBM                               *\n                                      36+* THIS MACRO IS \"RESTRICTED MATERIALS OF IBM\"                        *\n                                      37+* 5694-A01 (C) COPYRIGHT IBM CORP. 1991,2002                         *\n                                      38+*                                                                    *\n                                      39+*****END_OF_PROPRIETARY_STATEMENT*************************************\n                                      40+*                                                                    *\n                                      41+*01* Status: HBB7706                                                 *\n                                      42+*                                                                    *\n                                      43+*01* Descriptive Name: Name/Token Service Assembler Declares         *\n                                      44+*02*  Acronym: N/A                                                   *\n                                      45+*                                                                    *\n                                      46+*01* Macro-name: IEANTASM                                            *\n                                      47+*                                                                    *\n                                      48+*01* DSECT-name: N/A                                                 *\n                                      49+*                                                                    *\n                                      50+*01* Component: Supervisor Control (SC1C5)                           *\n                                      51+*                                                                    *\n                                      52+*01* External Classification: GUPI                                   *\n                                      53+*01* End of External Classification:                                 *\n1         SQLASM SQL SAS/C interface module                                                                     Page    5\n   Active Usings: None\n0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 13.01\n0                                     54+*                                                                    *\n                                      55+*01* Eye-catcher: N/A                                                *\n                                      56+*02* Offset: N/A                                                     *\n                                      57+*02* Length: N/A                                                     *\n                                      58+*                                                                    *\n                                      59+*01* Storage-attributes: N/A                                         *\n                                      60+*02* Main-Storage: N/A                                               *\n                                      61+*02* Virtual-Storage: N/A                                            *\n                                      62+*02* Auxiliary-Storage: N/A                                          *\n                                      63+*02* Subpool: N/A                                                    *\n                                      64+*02* Key: N/A                                                        *\n                                      65+*02* Data-space: N/A                                                 *\n                                      66+*02* Residency: N/A                                                  *\n                                      67+*                                                                    *\n                                      68+*01* Size: N/A                                                       *\n                                      69+*                                                                    *\n                                      70+*01* Created-by: N/A                                                 *\n                                      71+*                                                                    *\n                                      72+*01* Pointed-to-by: N/A                                              *\n                                      73+*                                                                    *\n                                      74+*01* Serialization: N/A                                              *\n                                      75+*                                                                    *\n                                      76+*                                                                    *\n                                      77+*01* Function:                                                       *\n                                      78+*02* IEANTASM defines types, related constants, and external entry   *\n                                      79+*    declarations for the use of Name Token/Services from 390        *\n                                      80+*    Assembly Language                                               *\n                                      81+*                                                                    *\n                                      82+*01* Method-of-access:                                               *\n                                      83+*02* Include IEANTASM                                                *\n                                      84+*                                                                    *\n                                      85+*01* Notes:                                                          *\n                                      86+*    The Name/Token services do not use a null character to          *\n                                      87+*    terminate strings. All of the services expect name and token    *\n                                      88+*    data to be a fixed-length 16-byte type. Name data cannot        *\n                                      89+*    begin with or be composed entirely of null characters. However, *\n                                      90+*    token data may be any valid hex or EBCDIC string including      *\n                                      91+*    null characters.                                                *\n                                      92+*                                                                    *\n                                      93+*01* Change-Activity:                                                *\n                                      94+*    $L0=TOKEN,   JBB4422, 910308, PD16JV: Name/Token Support        *\n                                      95+*    $P1=PKI0261, JBB4422, 910517, PD16JV: Authorized levels         *\n                                      96+*    $P2=PKI0302, JBB4422, 910621, PD16JV: Copyright info            *\n                                      97+*    $P3=PKB0276, HBB4430, 920108, PD16CU: Convert to a macro        *\n                                      98+*    $L1=R69885   HBB7703, 991010, PD00XB: Checkpoint support        *\n                                      99+*                                                                    *\n                                     100+*** END OF SPECIFICATIONS ********************************************\n                                     101+*\n                                     102+**********************************************************************\n                                     103+*      Fixed Service Parameter and Return Code Defines               *\n                                     104+**********************************************************************\n                                     105+*\n                                     106+**********************************************************************\n                                     107+*                   Name/Token Level Constants                       *\n                                     108+**********************************************************************\n1         SQLASM SQL SAS/C interface module                                                                     Page    6\n   Active Usings: None\n0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 13.01\n0                      00001         109+IEANT_TASK_LEVEL       EQU     1                                        01-IEANT\n                       00002         110+IEANT_HOME_LEVEL       EQU     2                                        01-IEANT\n                       00003         111+IEANT_PRIMARY_LEVEL    EQU     3                                        01-IEANT\n                       00004         112+IEANT_SYSTEM_LEVEL     EQU     4                                        01-IEANT\n                       0000B         113+IEANT_TASKAUTH_LEVEL   EQU     11                              /*@P1A*/ 01-IEANT\n                       0000C         114+IEANT_HOMEAUTH_LEVEL   EQU     12                              /*@P1A*/ 01-IEANT\n                       0000D         115+IEANT_PRIMARYAUTH_LEVEL EQU    13                              /*@P1A*/ 01-IEANT\n                                     116+*\n                                     117+**********************************************************************\n                                     118+*                     Name/Token Persistence                         *\n                                     119+**********************************************************************\n                       00000         120+IEANT_NOPERSIST        EQU     0                                        01-IEANT\n                       00001         121+IEANT_PERSIST          EQU     1                                        01-IEANT\n                                     122+*\n                                     123+**********************************************************************\n                                     124+*                     Name/Token Checkpoint                          *\n                                     125+**********************************************************************\n                       00000         126+IEANT_NOCHECKPOINT     EQU     0                                  @L1A  01-IEANT\n                       00002         127+IEANT_CHECKPOINTOK     EQU     2                                  @L1A  01-IEANT\n                                     128+*\n                                     129+**********************************************************************\n                                     130+*                      Service Return Codes                          *\n                                     131+**********************************************************************\n                       00000         132+IEANT_OK               EQU     0                                        01-IEANT\n                       00004         133+IEANT_DUP_NAME         EQU     4                                        01-IEANT\n                       00004         134+IEANT_NOT_FOUND        EQU     4                                        01-IEANT\n                       00008         135+IEANT_24BITMODE        EQU     8                                        01-IEANT\n                       00010         136+IEANT_NOT_AUTH         EQU     16                                       01-IEANT\n                       00014         137+IEANT_SRB_MODE         EQU     20                                       01-IEANT\n                       00018         138+IEANT_LOCK_HELD        EQU     24                                       01-IEANT\n                       0001C         139+IEANT_LEVEL_INVALID    EQU     28                                       01-IEANT\n                       00020         140+IEANT_NAME_INVALID     EQU     32                                       01-IEANT\n                       00024         141+IEANT_PERSIST_INVALID  EQU     36                                       01-IEANT\n                       00028         142+IEANT_AR_INVALID       EQU     40                                       01-IEANT\n                       0002C         143+IEANT_NOT_AMODE64      EQU     44                                       01-IEANT\n                       00040         144+IEANT_UNEXPECTED_ERR   EQU     64                                       01-IEANT\n                                     145+*\n                                     146+**********************************************************************\n                                     147+*   End of Name/Token Services Include                               *\n                                     148+**********************************************************************\n                                     149          MACRO\n                                     150 &LABEL   STUB &INDEX=0,&LOAD=\n                                     151          LCLC &LNAME\n                                     152          AIF  ('&LOAD' EQ '').SETDEF\n                                     153 &LNAME   SETC '&LOAD'\n                                     154          AGO  .SETOK\n                                     155 .SETDEF  ANOP\n                                     156 &LNAME   SETC '&LABEL'\n                                     157 .SETOK   ANOP\n                                     158 &LABEL   CSECT\n                                     159 &LABEL   AMODE 31\n                                     160 &LABEL   RMODE ANY\n                                     161          AIF   ('&SYSPARM' EQ 'ISIS_PF_HOST_IBM').IBMP\n                                     162          AIF   ('&SYSPARM' EQ 'IBM').IBMP\n                                     163 *label.E CENTRY DSA=DSALEN,\n1         SQLASM SQL SAS/C interface module                                                                     Page    7\n   Active Usings: None\n0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 13.01\n0                                    164                INDEP=NO,\n                                     165                BASE=R9\n                                     166 &LABEL.E CENTRY DSA=DSALEN,\n                                     167                INDEP=NO,\n                                     168                BASE=R9\n                                     169          AGO   .LOK\n                                     170 .IBMP    ANOP\n                                     171 *label.E edcprlg basereg=r9,dsalen=dsalen\n                                     172 &LABEL.E EDCPRLG BASEREG=R9,DSALEN=DSALEN\n                                     173 .LOK     ANOP\n                                     174          L     R7,=A(LEVEL)       get const darr\n                                     175          USING LEVEL,R7           base on const\n                                     176          LR    R2,R1              save pointer\n                                     177          L     R15,X'10'           CVT\n                                     178          L     R15,X'220'(,R15)     CSR table address\n                                     179          L     R15,X'14'(,R15)      offset\n                                     180          L     R15,X'08'(,R15)      IEANTRNT\n                                     181 *        CALL  (15),(LEVEL,tokenname,TOKENDATA,RETCODE),               *\n                                                        MF=(E,CALLLIST)\n                                     182          CALL  (15),(LEVEL,TOKENNAME,TOKENDATA,RETCODE),               *\n                                                        MF=(E,CALLLIST)\n                                     183          CHI   R15,4               check code\n                                     184          JL    OK&SYSNDX        if retrieve ok\n                                     185 *        LOAD  EP=&Lname           load again\n                                     186          LOAD  EP=&LNAME           load again\n                                     187          LR    R15,R0              into r15\n                                     188          J     DOC&SYSNDX          jump to call\n                                     189 OK&SYSNDX DS   0H\n                                     190          L   R15,TOKENDATA+&INDEX get proper addr\n                                     191 DOC&SYSNDX DS  0H\n                                     192          LR    R1,R2               back pointer\n                                     193          BASR  R14,R15             call it\n                                     194          AIF   ('&SYSPARM' EQ 'ISIS_PF_HOST_IBM').IBME\n                                     195          AIF   ('&SYSPARM' EQ 'IBM').IBME\n                                     196 *        cexit rc=(15)\n                                     197          CEXIT RC=(15)\n                                     198          AGO   .LOK1\n                                     199 .IBME    ANOP\n                                     200 *        edcepil\n                                     201          EDCEPIL\n                                     202 .LOK1    ANOP\n                                     203          LTORG\n                                     204          MEND\n0                                    206          MACRO\n                                     207 &LABEL   RSQL\n                                     208          AIF   ('&SYSPARM' EQ 'ISIS_PF_HOST_IBM').RXXX\n                                     209          AIF   ('&SYSPARM' EQ 'IBM').RXXX\n                                     210 *SQLA    CENTRY DSA=DSALEN,\n                                     211                INDEP=NO,\n                                     212                BASE=R9\n                                     213 SQLA     CENTRY DSA=DSALEN,\n                                     214                INDEP=NO,\n                                     215                BASE=R9\n                                     216          AGO   .RLOK\n1         SQLASM SQL SAS/C interface module                                                                     Page    8\n   Active Usings: None\n0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 13.01\n0                                    217 .RXXX    ANOP\n                                     218 *        EDCPRLG BASEREG=R9,DSALEN=DSALEN\n                                     219          EDCPRLG BASEREG=R9,DSALEN=DSALEN\n                                     220 .RLOK    ANOP\n                                     221          L     R7,=A(LEVEL)       get const darr\n                                     222          L     R15,X'10'           CVT\n                                     223          L     R15,X'220'(,R15)    CSR table address\n                                     224          L     R15,X'14'(,R15)     offset\n                                     225          L     R15,X'08'(,R15)     IEANTRNT\n                                     226 *        CALL  (15),(LEVEL,tokenname,TOKENDATA,RETCODE),MF=(E,CALLLIST)\n                                     227          CALL  (15),(LEVEL,TOKENNAME,TOKENDATA,RETCODE),MF=(E,CALLLIST)\n                                     228          CHI   R15,4               check code\n                                     229          JE    LOAD                if new token\n                                     230          JL    DELETE              if already exits, delete\n                                     231          J     ERRTKN              name/token err\n                                     232 DELETE   OC    TOKENDATA+12(4),TOKENDATA+13 test for RRS\n                                     233          BZ    DNORRS              DELETE NORRS\n                                     234 *        delete ep=userrs          delete userrs\n                                     235          DELETE EP=USERRS          delete userrs\n                                     236 *        delete ep=dsnhlir         delete dsnhlir\n                                     237          DELETE EP=DSNHLIR         delete dsnhlir\n                                     238 *        delete ep=dsnrli          delete dsnrli\n                                     239          DELETE EP=DSNRLI          delete dsnrli\n                                     240          B     DCLEAR\n                                     241 DNORRS   DS    0H\n                                     242 *        delete ep=dsnhlir\n                                     243          DELETE EP=DSNHLI2\n                                     244 *        delete ep=dsnrli\n                                     245          DELETE EP=DSNALI\n                                     246 DCLEAR   DS    0H                  clear addresses\n                                     247          L     R15,X'10'           CVT\n                                     248          L     R15,X'220'(,R15)     CSR table address\n                                     249          L     R15,X'14'(,R15)       offset\n                                     250          L     R15,X'0C'(,R15)       IEANTDL delete token\n                                     251 *        CALL  (15),(LEVEL,tokenname,RETCODE),MF=(E,CALLLIST)\n                                     252          CALL  (15),(LEVEL,TOKENNAME,RETCODE),MF=(E,CALLLIST)\n                                     253          CHI   R15,4               check code\n                                     254          BH    ERRTKN              name/token error\n                                     255          B     RETRN\n                                     256 LOAD     DS    0H\n                                     257 *        LOAD  EP=DSNTIAR          get addr\n                                     258          LOAD  EP=DSNTIAR          get addr\n                                     259          ST    R0,TOKENDATA+8      save addr\n                                     260          MVI   TOKENDATA+12,1      assume RRS\n                                     261          XC    LOADLIST(LOADLISTL),LOADLIST clear list\n                                     262 *        load  ep=userrs,erret=norrs,sf=(e,loadlist)\n                                     263          LOAD  EP=USERRS,ERRET=NORRS,SF=(E,LOADLIST)\n                                     264 *        load  ep=dsnrli\n                                     265          LOAD  EP=DSNRLI\n                                     266          ST    R0,TOKENDATA        save addr\n                                     267          LOAD  EP=DSNHLIR          get addr\n                                     268          ST    R0,TOKENDATA+4      save addr\n                                     269          LA    R15,4               indicate rrs\n                                     270          B     CTOKEN              branch to create token\n                                     271 NORRS    XC    TOKENDATA+12(4),TOKENDATA+12 use CAF\n1         SQLASM SQL SAS/C interface module                                                                     Page    9\n   Active Usings: None\n0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 13.01\n0                                    272          LOAD  EP=DSNALI           get addr\n                                     273          ST    R0,TOKENDATA        save addr\n                                     274 *        LOAD  EP=DSNHLI2          get addr\n                                     275          LOAD  EP=DSNHLI2          get addr\n                                     276          ST    R0,TOKENDATA+4      save addr\n                                     277          SR    R15,R15             no RRS\n                                     278 CTOKEN   LR    R5,R15              save rc\n                                     279          L     R15,X'10'           CVT\n                                     280          L     R15,X'220'(,R15)    CSR table address\n                                     281          L     R15,X'14'(,R15)     offset\n                                     282          L     R15,X'04'(,R15)     IEANTCR\n                                     283 *        CALL  (15),(LEVEL,tokenname,tokendata,PERSIST,RETCODE),       *\n                                                        MF=(E,CALLLIST)\n                                     284          CALL  (15),(LEVEL,TOKENNAME,TOKENDATA,PERSIST,RETCODE),       *\n                                                        MF=(E,CALLLIST)\n                                     285          LTR   R15,R15             check code\n                                     286          JNZ   ERRTKN              name token error\n                                     287          LR    R15,R5              back rc\n                                     288          J     RETRN               jump out\n                                     289          LTORG\n                                     290 LEVEL    DC    A(IEANT_HOME_LEVEL)     Home level\n                                     291 PERSIST  DC    A(IEANT_NOPERSIST)      Persist option\n                                     292 TOKENNAME DC   CL16'TOKEN_ISIS_DB2CAF' Token name\n                                     293 ERRTKN   LR    R5,R15              get reason\n                                     294 *        ABEND X'0ABC',DUMP,,user,REASON=(r5)\n                                     295          ABEND X'0ABC',DUMP,,USER,REASON=(R5)\n                                     296          SPACE 1\n                                     297 *--------------------------------------------------------------------*\n                                     298 * RETURN point                                                       *\n                                     299 *--------------------------------------------------------------------*\n                                     300 RETRN    DS    0H\n                                     301          AIF   ('&SYSPARM' EQ 'ISIS_PF_HOST_IBM').RRIBM\n                                     302          AIF   ('&SYSPARM' EQ 'IBM').RRIBM\n                                     303 *EXIT    CEXIT RC=(15)\n                                     304 EXIT     CEXIT RC=(15)\n                                     305          AGO   .RRLOK\n                                     306 .RRIBM   ANOP\n                                     307 *exit    edcepil\n                                     308 EXIT     EDCEPIL\n                                     309 .RRLOK   ANOP\n                                     310          MEND\n0                                    312 *--------------------------------------------------------------------*\n                                     313 *RSQLASM : ASM stub routine to provide access to the SQL functions   *\n                                     314 *          from the SAS/C or IBM modules CAF or RRS                  *\n                                     315 *                                                                    *\n                                     316 * Entry points :                                                     *\n                                     317 *         SQLASM standard init entry point                           *\n                                     318 *         - if TOKEN_ISIS_DB2CAF exits it is a delete call           *\n                                     319 *          delete the modulules , delete token                       *\n                                     320 *         - if not exists                                            *\n                                     321 *         build module list                                          *\n                                     322 *         create a name/token pair                                   *\n                                     323 * The program tries to load the DSNRL interface, andif it can        *\n                                     324 *     set a flag to indicate the use of the RRS                      *\n1         SQLASM SQL SAS/C interface module                                                                     Page   10\n   Active Usings: None\n0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 13.01\n0                                    325 * RRS entry points:                                                  *\n                                     326 *         DSNRLI  standard SQL entry point to call the DSNRLI module *\n                                     327 *         DSNHLIR SQL call entry point                               *\n                                     328 * CAF entry points:                                                  *\n                                     329 *         DSNHLI2 standard SQL entry point to call the DSNHLI module *\n                                     330 *         DSNALI standard SQL entry to call the DSNALI module        *\n                                     331 * Common :                                                           *\n                                     332 *         DSNTIAR to call the standard SQL message edit nodule       *\n                                     333 *                                                                    *\n                                     334 * Calling: The module is called via the standard MVS convention :    *\n                                     335 *          +The TOKEN_ISIS_DB2CAF  token                             *\n                                     336 *            +0 DSNALI or DSNRLI address                             *\n                                     337 *            +4 DSNHLI2 or DSNHLIR address                           *\n                                     338 *            +8 DSNTIAR address                                      *\n                                     339 *            +c RRS or CAF flag                                      *\n                                     340 * Processing:                                                        *\n                                     341 * Return : The module returns the primary return code in R15         *\n                                     342 *                                                                    *\n                                     343 * AMODE  : 31                                                        *\n                                     344 * RMODE  : ANY                                                       *\n                                     345 * rent/reus                                                          *\n                                     346 *--------------------------------------------------------------------*\n                                     347 DSNALI   STUB  INDEX=0            stub DSNALI\n 000000                00000 0006C   348+DSNALI   CSECT                                                          01-00158\n                                     349+DSNALI   AMODE 31                                                       01-00159\n                                     350+DSNALI   RMODE ANY                                                      01-00160\n                                     351+*label.E CENTRY DSA=DSALEN,\n                                     352+               INDEP=NO,                                                01-00164\n ** ASMA057E Undefined operation code - 00164/INDEP=NO,\n ** ASMA435I Record 22 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n                                     353+               BASE=R9                                                  01-00165\n ** ASMA057E Undefined operation code - 00165/BASE=R9\n ** ASMA435I Record 23 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n                                     354+DSNALIE  CENTRY DSA=DSALEN,                                             01-00166\n ** ASMA057E Undefined operation code - 00166/CENTRY\n ** ASMA435I Record 24 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n                                     355+               INDEP=NO,                                                01-00167\n ** ASMA057E Undefined operation code - 00167/INDEP=NO,\n ** ASMA435I Record 25 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n                                     356+               BASE=R9                                                  01-00168\n ** ASMA057E Undefined operation code - 00168/BASE=R9\n ** ASMA435I Record 26 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n 000000 0000 0000            00000   357+         L     R7,=A(LEVEL)       get const darr                        01-00174\n ** ASMA307E No active USING for operand =A(LEVEL)\n ** ASMA435I Record 32 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n                  R:7  0033C         358+         USING LEVEL,R7           base on const                         01-00175\n 000004 1821                         359+         LR    R2,R1              save pointer                          01-00176\n 000006 58F0 0010            00010   360+         L     R15,X'10'           CVT                                  01-00177\n 00000A 58F0 F220            00220   361+         L     R15,X'220'(,R15)     CSR table address                   01-00178\n 00000E 58F0 F014            00014   362+         L     R15,X'14'(,R15)      offset                              01-00179\n 000012 58F0 F008            00008   363+         L     R15,X'08'(,R15)      IEANTRNT                            01-00180\n                                     364+*        CALL  (15),(LEVEL,tokenname,TOKENDATA,RETCODE),               X\n                                        +               MF=(E,CALLLIST)\n 000016                              367+         DS    0H                                                       02-CALL\n 000016 4110 703C            00378   372+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBIN\n1         SQLASM SQL SAS/C interface module                                                                     Page   11\n   Active Usings: LEVEL,R7\n0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 13.01\n000001A 4100 7000            0033C   373+         LA    0,LEVEL            PICKUP  PARAMETER                     03-IHBOP\n 00001E 5000 1000            00000   374+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOP\n 000022 4100 7008            00344   375+         LA    0,TOKENNAME        PICKUP  PARAMETER                     03-IHBOP\n 000026 5000 1004            00004   376+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOP\n 00002A 4100 705C            00398   377+         LA    0,TOKENDATA        PICKUP  PARAMETER                     03-IHBOP\n 00002E 5000 1008            00008   378+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOP\n 000032 4100 706C            003A8   379+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOP\n 000036 5000 100C            0000C   380+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 03-IHBOP\n 00003A 05EF                         381+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 00003C A7FE 0004            00004   382+         CHI   R15,4               check code                           01-00183\n 000040 A744 000F            0005E   383+         JL    OK0003           if retrieve ok                          01-00184\n                                     384+*        LOAD  EP=&Lname           load again\n 000044                              387+         CNOP  0,4                                                 @L2P 02-LOAD\n 000044 0000 0000            00000   388+         BAS   15,LOAD2_0010      BRANCH AROUND CONSTANT(S)             02-LOAD\n ** ASMA307E No active USING for operand LOAD2_0010\n ** ASMA435I Record 128 in SYS1.MACLIB(LOAD) on volume: Z1DT11\n 000048                              389+LD2_0010    DS 0H                                                       02-LOAD\n 000048 C4E2D5C1D3C94040             390+LE2_0010    DC CL8'DSNALI'        ENTRY POINT NAME                      02-LOAD\n 000050                              391+LOAD2_0010    DS 0H                                                     02-LOAD\n 000050 4100 F000            00000   392+         LA    0,LE2_0010-LD2_0010(,15)         ADDR OF PARAMETER       02-LOAD\n 000054 1B11                         393+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 000056 0A08                         394+         SVC   8                                                        02-LOAD\n 000058 18F0                         395+         LR    R15,R0              into r15                             01-00187\n 00005A A7F4 0004            00062   396+         J     DOC0003             jump to call                         01-00188\n 00005E                              397+OK0003    DS   0H                                                       01-00189\n 00005E 58F0 705C            00398   398+         L   R15,TOKENDATA+0      get proper addr                       01-00190\n 000062                              399+DOC0003    DS  0H                                                       01-00191\n 000062 1812                         400+         LR    R1,R2               back pointer                         01-00192\n 000064 0DEF                         401+         BASR  R14,R15             call it                              01-00193\n                                     402+*        cexit rc=(15)\n                                     403+         CEXIT RC=(15)                                                  01-00197\n ** ASMA057E Undefined operation code - 00197/CEXIT\n ** ASMA435I Record 57 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n 000068                              404+         LTORG                                                          01-00203\n 000068 0000033C                     405                =A(LEVEL)\n                                     406 DSNHLI   STUB  INDEX=4,LOAD=DSNHLI2 stub DSNHLI2\n 000070                00070 0006C   407+DSNHLI   CSECT                                                          01-00158\n                                     408+DSNHLI   AMODE 31                                                       01-00159\n                                     409+DSNHLI   RMODE ANY                                                      01-00160\n                                     410+*label.E CENTRY DSA=DSALEN,\n                                     411+               INDEP=NO,                                                01-00164\n ** ASMA057E Undefined operation code - 00164/INDEP=NO,\n ** ASMA435I Record 22 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n                                     412+               BASE=R9                                                  01-00165\n ** ASMA057E Undefined operation code - 00165/BASE=R9\n ** ASMA435I Record 23 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n                                     413+DSNHLIE  CENTRY DSA=DSALEN,                                             01-00166\n ** ASMA057E Undefined operation code - 00166/CENTRY\n ** ASMA435I Record 24 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n                                     414+               INDEP=NO,                                                01-00167\n ** ASMA057E Undefined operation code - 00167/INDEP=NO,\n ** ASMA435I Record 25 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n                                     415+               BASE=R9                                                  01-00168\n ** ASMA057E Undefined operation code - 00168/BASE=R9\n1         SQLASM SQL SAS/C interface module                                                                     Page   12\n   Active Usings: LEVEL,R7\n0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 13.01\n0** ASMA435I Record 26 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n 000070 0000 0000            00000   416+         L     R7,=A(LEVEL)       get const darr                        01-00174\n ** ASMA307E No active USING for operand =A(LEVEL)\n ** ASMA435I Record 32 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n                  R:7  0033C         417+         USING LEVEL,R7           base on const                         01-00175\n 000074 1821                         418+         LR    R2,R1              save pointer                          01-00176\n 000076 58F0 0010            00010   419+         L     R15,X'10'           CVT                                  01-00177\n 00007A 58F0 F220            00220   420+         L     R15,X'220'(,R15)     CSR table address                   01-00178\n 00007E 58F0 F014            00014   421+         L     R15,X'14'(,R15)      offset                              01-00179\n 000082 58F0 F008            00008   422+         L     R15,X'08'(,R15)      IEANTRNT                            01-00180\n                                     423+*        CALL  (15),(LEVEL,tokenname,TOKENDATA,RETCODE),               X\n                                        +               MF=(E,CALLLIST)\n 000086                              426+         DS    0H                                                       02-CALL\n 000086 4110 703C            00378   431+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBIN\n 00008A 4100 7000            0033C   432+         LA    0,LEVEL            PICKUP  PARAMETER                     03-IHBOP\n 00008E 5000 1000            00000   433+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOP\n 000092 4100 7008            00344   434+         LA    0,TOKENNAME        PICKUP  PARAMETER                     03-IHBOP\n 000096 5000 1004            00004   435+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOP\n 00009A 4100 705C            00398   436+         LA    0,TOKENDATA        PICKUP  PARAMETER                     03-IHBOP\n 00009E 5000 1008            00008   437+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOP\n 0000A2 4100 706C            003A8   438+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOP\n 0000A6 5000 100C            0000C   439+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 03-IHBOP\n 0000AA 05EF                         440+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 0000AC A7FE 0004            00004   441+         CHI   R15,4               check code                           01-00183\n 0000B0 A744 000F            000CE   442+         JL    OK0012           if retrieve ok                          01-00184\n                                     443+*        LOAD  EP=&Lname           load again\n 0000B4                              446+         CNOP  0,4                                                 @L2P 02-LOAD\n 0000B4 0000 0000            00000   447+         BAS   15,LOAD2_0019      BRANCH AROUND CONSTANT(S)             02-LOAD\n ** ASMA307E No active USING for operand LOAD2_0019\n ** ASMA435I Record 128 in SYS1.MACLIB(LOAD) on volume: Z1DT11\n 0000B8                              448+LD2_0019    DS 0H                                                       02-LOAD\n 0000B8 C4E2D5C8D3C9F240             449+LE2_0019    DC CL8'DSNHLI2'       ENTRY POINT NAME                      02-LOAD\n 0000C0                              450+LOAD2_0019    DS 0H                                                     02-LOAD\n 0000C0 4100 F000            00000   451+         LA    0,LE2_0019-LD2_0019(,15)         ADDR OF PARAMETER       02-LOAD\n 0000C4 1B11                         452+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 0000C6 0A08                         453+         SVC   8                                                        02-LOAD\n 0000C8 18F0                         454+         LR    R15,R0              into r15                             01-00187\n 0000CA A7F4 0004            000D2   455+         J     DOC0012             jump to call                         01-00188\n 0000CE                              456+OK0012    DS   0H                                                       01-00189\n 0000CE 58F0 7060            0039C   457+         L   R15,TOKENDATA+4      get proper addr                       01-00190\n 0000D2                              458+DOC0012    DS  0H                                                       01-00191\n 0000D2 1812                         459+         LR    R1,R2               back pointer                         01-00192\n 0000D4 0DEF                         460+         BASR  R14,R15             call it                              01-00193\n                                     461+*        cexit rc=(15)\n                                     462+         CEXIT RC=(15)                                                  01-00197\n ** ASMA057E Undefined operation code - 00197/CEXIT\n ** ASMA435I Record 57 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n 0000D8                              463+         LTORG                                                          01-00203\n 0000D8 0000033C                     464                =A(LEVEL)\n                                     465 DSNTIAR  STUB  INDEX=8            stub dsntiar\n 0000E0                000E0 0006C   466+DSNTIAR  CSECT                                                          01-00158\n                                     467+DSNTIAR  AMODE 31                                                       01-00159\n                                     468+DSNTIAR  RMODE ANY                                                      01-00160\n                                     469+*label.E CENTRY DSA=DSALEN,\n                                     470+               INDEP=NO,                                                01-00164\n1         SQLASM SQL SAS/C interface module                                                                     Page   13\n   Active Usings: LEVEL,R7\n0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 13.01\n0** ASMA057E Undefined operation code - 00164/INDEP=NO,\n ** ASMA435I Record 22 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n                                     471+               BASE=R9                                                  01-00165\n ** ASMA057E Undefined operation code - 00165/BASE=R9\n ** ASMA435I Record 23 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n                                     472+DSNTIARE CENTRY DSA=DSALEN,                                             01-00166\n ** ASMA057E Undefined operation code - 00166/CENTRY\n ** ASMA435I Record 24 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n                                     473+               INDEP=NO,                                                01-00167\n ** ASMA057E Undefined operation code - 00167/INDEP=NO,\n ** ASMA435I Record 25 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n                                     474+               BASE=R9                                                  01-00168\n ** ASMA057E Undefined operation code - 00168/BASE=R9\n ** ASMA435I Record 26 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n 0000E0 0000 0000            00000   475+         L     R7,=A(LEVEL)       get const darr                        01-00174\n ** ASMA307E No active USING for operand =A(LEVEL)\n ** ASMA435I Record 32 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n                  R:7  0033C         476+         USING LEVEL,R7           base on const                         01-00175\n 0000E4 1821                         477+         LR    R2,R1              save pointer                          01-00176\n 0000E6 58F0 0010            00010   478+         L     R15,X'10'           CVT                                  01-00177\n 0000EA 58F0 F220            00220   479+         L     R15,X'220'(,R15)     CSR table address                   01-00178\n 0000EE 58F0 F014            00014   480+         L     R15,X'14'(,R15)      offset                              01-00179\n 0000F2 58F0 F008            00008   481+         L     R15,X'08'(,R15)      IEANTRNT                            01-00180\n                                     482+*        CALL  (15),(LEVEL,tokenname,TOKENDATA,RETCODE),               X\n                                        +               MF=(E,CALLLIST)\n 0000F6                              485+         DS    0H                                                       02-CALL\n 0000F6 4110 703C            00378   490+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBIN\n 0000FA 4100 7000            0033C   491+         LA    0,LEVEL            PICKUP  PARAMETER                     03-IHBOP\n 0000FE 5000 1000            00000   492+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOP\n 000102 4100 7008            00344   493+         LA    0,TOKENNAME        PICKUP  PARAMETER                     03-IHBOP\n 000106 5000 1004            00004   494+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOP\n 00010A 4100 705C            00398   495+         LA    0,TOKENDATA        PICKUP  PARAMETER                     03-IHBOP\n 00010E 5000 1008            00008   496+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOP\n 000112 4100 706C            003A8   497+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOP\n 000116 5000 100C            0000C   498+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 03-IHBOP\n 00011A 05EF                         499+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 00011C A7FE 0004            00004   500+         CHI   R15,4               check code                           01-00183\n 000120 A744 000F            0013E   501+         JL    OK0021           if retrieve ok                          01-00184\n                                     502+*        LOAD  EP=&Lname           load again\n 000124                              505+         CNOP  0,4                                                 @L2P 02-LOAD\n 000124 0000 0000            00000   506+         BAS   15,LOAD2_0028      BRANCH AROUND CONSTANT(S)             02-LOAD\n ** ASMA307E No active USING for operand LOAD2_0028\n ** ASMA435I Record 128 in SYS1.MACLIB(LOAD) on volume: Z1DT11\n 000128                              507+LD2_0028    DS 0H                                                       02-LOAD\n 000128 C4E2D5E3C9C1D940             508+LE2_0028    DC CL8'DSNTIAR'       ENTRY POINT NAME                      02-LOAD\n 000130                              509+LOAD2_0028    DS 0H                                                     02-LOAD\n 000130 4100 F000            00000   510+         LA    0,LE2_0028-LD2_0028(,15)         ADDR OF PARAMETER       02-LOAD\n 000134 1B11                         511+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 000136 0A08                         512+         SVC   8                                                        02-LOAD\n 000138 18F0                         513+         LR    R15,R0              into r15                             01-00187\n 00013A A7F4 0004            00142   514+         J     DOC0021             jump to call                         01-00188\n 00013E                              515+OK0021    DS   0H                                                       01-00189\n 00013E 58F0 7064            003A0   516+         L   R15,TOKENDATA+8      get proper addr                       01-00190\n 000142                              517+DOC0021    DS  0H                                                       01-00191\n 000142 1812                         518+         LR    R1,R2               back pointer                         01-00192\n1         SQLASM SQL SAS/C interface module                                                                     Page   14\n   Active Usings: LEVEL,R7\n0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 13.01\n0000144 0DEF                         519+         BASR  R14,R15             call it                              01-00193\n                                     520+*        cexit rc=(15)\n                                     521+         CEXIT RC=(15)                                                  01-00197\n ** ASMA057E Undefined operation code - 00197/CEXIT\n ** ASMA435I Record 57 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n 000148                              522+         LTORG                                                          01-00203\n 000148 0000033C                     523                =A(LEVEL)\n 000150                00150 0025C   524 SQLASM   CSECT\n                                     525 SQLASM   AMODE 31\n                                     526 SQLASM   RMODE ANY\n                                     527          RSQL\n                                     528+*SQLA    CENTRY DSA=DSALEN,\n                                     529+               INDEP=NO,                                                01-00211\n ** ASMA057E Undefined operation code - 00211/INDEP=NO,\n ** ASMA435I Record 71 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n                                     530+               BASE=R9                                                  01-00212\n ** ASMA057E Undefined operation code - 00212/BASE=R9\n ** ASMA435I Record 72 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n                                     531+SQLA     CENTRY DSA=DSALEN,                                             01-00213\n ** ASMA057E Undefined operation code - 00213/CENTRY\n ** ASMA435I Record 73 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n                                     532+               INDEP=NO,                                                01-00214\n ** ASMA057E Undefined operation code - 00214/INDEP=NO,\n ** ASMA435I Record 74 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n                                     533+               BASE=R9                                                  01-00215\n ** ASMA057E Undefined operation code - 00215/BASE=R9\n ** ASMA435I Record 75 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n 000150 0000 0000            00000   534+         L     R7,=A(LEVEL)       get const darr                        01-00221\n ** ASMA034E Operand =A(LEVEL) beyond active USING range by -4 bytes\n ** ASMA435I Record 81 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n 000154 58F0 0010            00010   535+         L     R15,X'10'           CVT                                  01-00222\n 000158 58F0 F220            00220   536+         L     R15,X'220'(,R15)    CSR table address                    01-00223\n 00015C 58F0 F014            00014   537+         L     R15,X'14'(,R15)     offset                               01-00224\n 000160 58F0 F008            00008   538+         L     R15,X'08'(,R15)     IEANTRNT                             01-00225\n                                     539+*        CALL  (15),(LEVEL,tokenname,TOKENDATA,RETCODE),MF=(E,CALLLIST)\n 000164                              542+         DS    0H                                                       02-CALL\n 000164 4110 703C            00378   547+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBIN\n 000168 4100 7000            0033C   548+         LA    0,LEVEL            PICKUP  PARAMETER                     03-IHBOP\n 00016C 5000 1000            00000   549+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOP\n 000170 4100 7008            00344   550+         LA    0,TOKENNAME        PICKUP  PARAMETER                     03-IHBOP\n 000174 5000 1004            00004   551+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOP\n 000178 4100 705C            00398   552+         LA    0,TOKENDATA        PICKUP  PARAMETER                     03-IHBOP\n 00017C 5000 1008            00008   553+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOP\n 000180 4100 706C            003A8   554+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOP\n 000184 5000 100C            0000C   555+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 03-IHBOP\n 000188 05EF                         556+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 00018A A7FE 0004            00004   557+         CHI   R15,4               check code                           01-00228\n 00018E A784 004D            00228   558+         JE    LOAD                if new token                         01-00229\n 000192 A744 0004            0019A   559+         JL    DELETE              if already exits, delete             01-00230\n 000196 A7F4 00DF            00354   560+         J     ERRTKN              name/token err                       01-00231\n 00019A D603 7068 7069 003A4 003A5   561+DELETE   OC    TOKENDATA+12(4),TOKENDATA+13 test for RRS                01-00232\n 0001A0 0000 0000            00000   562+         BZ    DNORRS              DELETE NORRS                         01-00233\n ** ASMA034E Operand DNORRS beyond active USING range by -362 bytes\n ** ASMA435I Record 93 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n                                     563+*        delete ep=userrs          delete userrs\n1         SQLASM SQL SAS/C interface module                                                                     Page   15\n   Active Usings: LEVEL,R7\n0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 13.01\n00001A4 0000 0000            00000   565+         BAL   0,*+12                            LOAD ADDR OF EP SYMBOL 02-DELET\n ** ASMA034E Operand *+12 beyond active USING range by -396 bytes\n ** ASMA435I Record 21 in SYS1.MACLIB(DELETE) on volume: Z1DT11\n 0001A8 E4E2C5D9D9E24040             566+         DC    CL8'USERRS'                       EP SYMBOL              02-DELET\n 0001B0 0A09                         567+         SVC   9                                 ISSUE DELETE SVC       02-DELET\n                                     568+*        delete ep=dsnhlir         delete dsnhlir\n 0001B2 0000 0000            00000   570+         BAL   0,*+12                            LOAD ADDR OF EP SYMBOL 02-DELET\n ** ASMA034E Operand *+12 beyond active USING range by -382 bytes\n ** ASMA435I Record 21 in SYS1.MACLIB(DELETE) on volume: Z1DT11\n 0001B6 C4E2D5C8D3C9D940             571+         DC    CL8'DSNHLIR'                      EP SYMBOL              02-DELET\n 0001BE 0A09                         572+         SVC   9                                 ISSUE DELETE SVC       02-DELET\n                                     573+*        delete ep=dsnrli          delete dsnrli\n 0001C0 0000 0000            00000   575+         BAL   0,*+12                            LOAD ADDR OF EP SYMBOL 02-DELET\n ** ASMA034E Operand *+12 beyond active USING range by -368 bytes\n ** ASMA435I Record 21 in SYS1.MACLIB(DELETE) on volume: Z1DT11\n 0001C4 C4E2D5D9D3C94040             576+         DC    CL8'DSNRLI'                       EP SYMBOL              02-DELET\n 0001CC 0A09                         577+         SVC   9                                 ISSUE DELETE SVC       02-DELET\n 0001CE 0000 0000            00000   578+         B     DCLEAR                                                   01-00240\n ** ASMA034E Operand DCLEAR beyond active USING range by -334 bytes\n ** ASMA435I Record 100 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n 0001D2                              579+DNORRS   DS    0H                                                       01-00241\n                                     580+*        delete ep=dsnhlir\n 0001D2 0000 0000            00000   582+         BAL   0,*+12                            LOAD ADDR OF EP SYMBOL 02-DELET\n ** ASMA034E Operand *+12 beyond active USING range by -350 bytes\n ** ASMA435I Record 21 in SYS1.MACLIB(DELETE) on volume: Z1DT11\n 0001D6 C4E2D5C8D3C9F240             583+         DC    CL8'DSNHLI2'                      EP SYMBOL              02-DELET\n 0001DE 0A09                         584+         SVC   9                                 ISSUE DELETE SVC       02-DELET\n                                     585+*        delete ep=dsnrli\n 0001E0 0000 0000            00000   587+         BAL   0,*+12                            LOAD ADDR OF EP SYMBOL 02-DELET\n ** ASMA034E Operand *+12 beyond active USING range by -336 bytes\n ** ASMA435I Record 21 in SYS1.MACLIB(DELETE) on volume: Z1DT11\n 0001E4 C4E2D5C1D3C94040             588+         DC    CL8'DSNALI'                       EP SYMBOL              02-DELET\n 0001EC 0A09                         589+         SVC   9                                 ISSUE DELETE SVC       02-DELET\n 0001EE                              590+DCLEAR   DS    0H                  clear addresses                      01-00246\n 0001EE 58F0 0010            00010   591+         L     R15,X'10'           CVT                                  01-00247\n 0001F2 58F0 F220            00220   592+         L     R15,X'220'(,R15)     CSR table address                   01-00248\n 0001F6 58F0 F014            00014   593+         L     R15,X'14'(,R15)       offset                             01-00249\n 0001FA 58F0 F00C            0000C   594+         L     R15,X'0C'(,R15)       IEANTDL delete token               01-00250\n                                     595+*        CALL  (15),(LEVEL,tokenname,RETCODE),MF=(E,CALLLIST)\n 0001FE                              598+         DS    0H                                                       02-CALL\n 0001FE 4110 703C            00378   603+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBIN\n 000202 4100 7000            0033C   604+         LA    0,LEVEL            PICKUP  PARAMETER                     03-IHBOP\n 000206 5000 1000            00000   605+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOP\n 00020A 4100 7008            00344   606+         LA    0,TOKENNAME        PICKUP  PARAMETER                     03-IHBOP\n 00020E 5000 1004            00004   607+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOP\n 000212 4100 706C            003A8   608+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOP\n 000216 5000 1008            00008   609+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOP\n 00021A 05EF                         610+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 00021C A7FE 0004            00004   611+         CHI   R15,4               check code                           01-00253\n 000220 4720 7018            00354   612+         BH    ERRTKN              name/token error                     01-00254\n 000224 47F0 702C            00368   613+         B     RETRN                                                    01-00255\n 000228                              614+LOAD     DS    0H                                                       01-00256\n                                     615+*        LOAD  EP=DSNTIAR          get addr\n 000228                              618+         CNOP  0,4                                                 @L2P 02-LOAD\n 000228 0000 0000            00000   619+         BAS   15,LOAD2_0048      BRANCH AROUND CONSTANT(S)             02-LOAD\n1         SQLASM SQL SAS/C interface module                                                                     Page   16\n   Active Usings: LEVEL,R7\n0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 13.01\n0** ASMA034E Operand LOAD2_0048 beyond active USING range by -264 bytes\n ** ASMA435I Record 128 in SYS1.MACLIB(LOAD) on volume: Z1DT11\n 00022C                              620+LD2_0048    DS 0H                                                       02-LOAD\n 00022C C4E2D5E3C9C1D940             621+LE2_0048    DC CL8'DSNTIAR'       ENTRY POINT NAME                      02-LOAD\n 000234                              622+LOAD2_0048    DS 0H                                                     02-LOAD\n 000234 4100 F000            00000   623+         LA    0,LE2_0048-LD2_0048(,15)         ADDR OF PARAMETER       02-LOAD\n 000238 1B11                         624+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 00023A 0A08                         625+         SVC   8                                                        02-LOAD\n 00023C 5000 7064            003A0   626+         ST    R0,TOKENDATA+8      save addr                            01-00259\n 000240 9201 7068      003A4         627+         MVI   TOKENDATA+12,1      assume RRS                           01-00260\n 000244 D70F 702C 702C 00368 00368   628+         XC    LOADLIST(LOADLISTL),LOADLIST clear list                  01-00261\n                                     629+*        load  ep=userrs,erret=norrs,sf=(e,loadlist)\n 00024A 0700                         634+         CNOP  0,4                                            @ZA64577  03-IHBIN\n 00024C 4110 702C            00368   635+         LA    1,LOADLIST         LOAD SUPV PARM LIST ADDR    @G381P2A  03-IHBIN\n 000250 0000 0000            00000   636+         LA    0,*+8              LOAD EP ADDR IN REG 0       @G381P2A  03-IHBIN\n ** ASMA034E Operand *+8 beyond active USING range by -228 bytes\n ** ASMA435I Record 240 in SYS1.MACLIB(IHBINNRX) on volume: Z1DT11\n 000254 0000 0000            00000   637+         B     *+12               BRANCH AROUND EP            @G381P2A  03-IHBIN\n ** ASMA034E Operand *+12 beyond active USING range by -220 bytes\n ** ASMA435I Record 241 in SYS1.MACLIB(IHBINNRX) on volume: Z1DT11\n 000258 E4E2C5D9D9E24040             638+         DC    CL8'USERRS'        EP SYMBOL                   @G381P2A  03-IHBIN\n 000260 5000 1000            00000   639+         ST    0,0(0,1)           STORE EP ADDR IN SUPV PARMLIST        03-IHBIN\n 000264 9620 100A      0000A         640+         OI    10(1),X'20'        TURN ON RETURN REQUESTED BIT          03-IHBIN\n 000268 41F0 0009            00009   641+         LA    15,9            LOAD EXTENDED SVC ROUTING CODE @G381P2A  02-LOAD\n 00026C 0A7A                         642+         SVC   122                ISSUE EXTENDED SVC          @G381P2A  02-LOAD\n 00026E 12FF                         643+         LTR   15,15              RETURN CODE TEST                      02-LOAD\n 000270 0000 0000            00000   644+         BNZ   NORRS            GO TO ERROR ROUTINE                @P1A 02-LOAD\n ** ASMA034E Operand NORRS beyond active USING range by -144 bytes\n ** ASMA435I Record 99 in SYS1.MACLIB(LOAD) on volume: Z1DT11\n                                     645+*        load  ep=dsnrli\n 000274                              648+         CNOP  0,4                                                 @L2P 02-LOAD\n 000274 0000 0000            00000   649+         BAS   15,LOAD2_0054      BRANCH AROUND CONSTANT(S)             02-LOAD\n ** ASMA034E Operand LOAD2_0054 beyond active USING range by -188 bytes\n ** ASMA435I Record 128 in SYS1.MACLIB(LOAD) on volume: Z1DT11\n 000278                              650+LD2_0054    DS 0H                                                       02-LOAD\n 000278 C4E2D5D9D3C94040             651+LE2_0054    DC CL8'DSNRLI'        ENTRY POINT NAME                      02-LOAD\n 000280                              652+LOAD2_0054    DS 0H                                                     02-LOAD\n 000280 4100 F000            00000   653+         LA    0,LE2_0054-LD2_0054(,15)         ADDR OF PARAMETER       02-LOAD\n 000284 1B11                         654+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 000286 0A08                         655+         SVC   8                                                        02-LOAD\n 000288 5000 705C            00398   656+         ST    R0,TOKENDATA        save addr                            01-00266\n 00028C                              659+         CNOP  0,4                                                 @L2P 02-LOAD\n 00028C 0000 0000            00000   660+         BAS   15,LOAD2_0056      BRANCH AROUND CONSTANT(S)             02-LOAD\n ** ASMA034E Operand LOAD2_0056 beyond active USING range by -164 bytes\n ** ASMA435I Record 128 in SYS1.MACLIB(LOAD) on volume: Z1DT11\n 000290                              661+LD2_0056    DS 0H                                                       02-LOAD\n 000290 C4E2D5C8D3C9D940             662+LE2_0056    DC CL8'DSNHLIR'       ENTRY POINT NAME                      02-LOAD\n 000298                              663+LOAD2_0056    DS 0H                                                     02-LOAD\n 000298 4100 F000            00000   664+         LA    0,LE2_0056-LD2_0056(,15)         ADDR OF PARAMETER       02-LOAD\n 00029C 1B11                         665+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 00029E 0A08                         666+         SVC   8                                                        02-LOAD\n 0002A0 5000 7060            0039C   667+         ST    R0,TOKENDATA+4      save addr                            01-00268\n 0002A4 41F0 0004            00004   668+         LA    R15,4               indicate rrs                         01-00269\n 0002A8 0000 0000            00000   669+         B     CTOKEN              branch to create token               01-00270\n1         SQLASM SQL SAS/C interface module                                                                     Page   17\n   Active Usings: LEVEL,R7\n0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 13.01\n0** ASMA034E Operand CTOKEN beyond active USING range by -86 bytes\n ** ASMA435I Record 130 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n 0002AC D703 7068 7068 003A4 003A4   670+NORRS    XC    TOKENDATA+12(4),TOKENDATA+12 use CAF                     01-00271\n 0002B2 0700                         673+         CNOP  0,4                                                 @L2P 02-LOAD\n 0002B4 0000 0000            00000   674+         BAS   15,LOAD2_0058      BRANCH AROUND CONSTANT(S)             02-LOAD\n ** ASMA034E Operand LOAD2_0058 beyond active USING range by -124 bytes\n ** ASMA435I Record 128 in SYS1.MACLIB(LOAD) on volume: Z1DT11\n 0002B8                              675+LD2_0058    DS 0H                                                       02-LOAD\n 0002B8 C4E2D5C1D3C94040             676+LE2_0058    DC CL8'DSNALI'        ENTRY POINT NAME                      02-LOAD\n 0002C0                              677+LOAD2_0058    DS 0H                                                     02-LOAD\n 0002C0 4100 F000            00000   678+         LA    0,LE2_0058-LD2_0058(,15)         ADDR OF PARAMETER       02-LOAD\n 0002C4 1B11                         679+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 0002C6 0A08                         680+         SVC   8                                                        02-LOAD\n 0002C8 5000 705C            00398   681+         ST    R0,TOKENDATA        save addr                            01-00273\n                                     682+*        LOAD  EP=DSNHLI2          get addr\n 0002CC                              685+         CNOP  0,4                                                 @L2P 02-LOAD\n 0002CC 0000 0000            00000   686+         BAS   15,LOAD2_0060      BRANCH AROUND CONSTANT(S)             02-LOAD\n ** ASMA034E Operand LOAD2_0060 beyond active USING range by -100 bytes\n ** ASMA435I Record 128 in SYS1.MACLIB(LOAD) on volume: Z1DT11\n 0002D0                              687+LD2_0060    DS 0H                                                       02-LOAD\n 0002D0 C4E2D5C8D3C9F240             688+LE2_0060    DC CL8'DSNHLI2'       ENTRY POINT NAME                      02-LOAD\n 0002D8                              689+LOAD2_0060    DS 0H                                                     02-LOAD\n 0002D8 4100 F000            00000   690+         LA    0,LE2_0060-LD2_0060(,15)         ADDR OF PARAMETER       02-LOAD\n 0002DC 1B11                         691+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 0002DE 0A08                         692+         SVC   8                                                        02-LOAD\n 0002E0 5000 7060            0039C   693+         ST    R0,TOKENDATA+4      save addr                            01-00276\n 0002E4 1BFF                         694+         SR    R15,R15             no RRS                               01-00277\n 0002E6 185F                         695+CTOKEN   LR    R5,R15              save rc                              01-00278\n 0002E8 58F0 0010            00010   696+         L     R15,X'10'           CVT                                  01-00279\n 0002EC 58F0 F220            00220   697+         L     R15,X'220'(,R15)    CSR table address                    01-00280\n 0002F0 58F0 F014            00014   698+         L     R15,X'14'(,R15)     offset                               01-00281\n 0002F4 58F0 F004            00004   699+         L     R15,X'04'(,R15)     IEANTCR                              01-00282\n                                     700+*        CALL  (15),(LEVEL,tokenname,tokendata,PERSIST,RETCODE),       X\n                                        +               MF=(E,CALLLIST)\n 0002F8                              703+         DS    0H                                                       02-CALL\n 0002F8 4110 703C            00378   708+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBIN\n 0002FC 4100 7000            0033C   709+         LA    0,LEVEL            PICKUP  PARAMETER                     03-IHBOP\n 000300 5000 1000            00000   710+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOP\n 000304 4100 7008            00344   711+         LA    0,TOKENNAME        PICKUP  PARAMETER                     03-IHBOP\n 000308 5000 1004            00004   712+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOP\n 00030C 4100 705C            00398   713+         LA    0,TOKENDATA        PICKUP  PARAMETER                     03-IHBOP\n 000310 5000 1008            00008   714+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOP\n 000314 4100 7004            00340   715+         LA    0,PERSIST          PICKUP  PARAMETER                     03-IHBOP\n 000318 5000 100C            0000C   716+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 03-IHBOP\n 00031C 4100 706C            003A8   717+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOP\n 000320 5000 1010            00010   718+         ST    0,16(0,1)                         STORE INTO PARAM. LIST 03-IHBOP\n 000324 05EF                         719+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 000326 12FF                         720+         LTR   R15,R15             check code                           01-00285\n 000328 A774 0016            00354   721+         JNZ   ERRTKN              name token error                     01-00286\n 00032C 18F5                         722+         LR    R15,R5              back rc                              01-00287\n 00032E A7F4 001D            00368   723+         J     RETRN               jump out                             01-00288\n 000338                              724+         LTORG                                                          01-00289\n 000338 0000033C                     725                =A(LEVEL)\n 00033C 00000002                     726+LEVEL    DC    A(IEANT_HOME_LEVEL)     Home level                       01-00290\n 000340 00000000                     727+PERSIST  DC    A(IEANT_NOPERSIST)      Persist option                   01-00291\n1         SQLASM SQL SAS/C interface module                                                                     Page   18\n   Active Usings: LEVEL,R7\n0  Loc  Object Code    Addr1 Addr2  Stmt   Source Statement                                  HLASM R6.0  2012/11/21 13.01\n0000344 E3D6D2C5D56DC9E2             728+TOKENNAME DC   CL16'TOKEN_ISIS_DB2CAF' Token name                       01-00292\n 000354 185F                         729+ERRTKN   LR    R5,R15              get reason                           01-00293\n                                     730+*        ABEND X'0ABC',DUMP,,user,REASON=(r5)\n 000356                              733+         DS    0H                                                       02-ABEND\n 000356 4110 0ABC            00ABC   736+         LA    1,X'0ABC'                         LOAD PARAMETER REG 1   03-IHBIN\n 00035A 18F5                         737+         LR    15,R5              LOAD REG15 WITH REASON CODE  @G860P1F 02-ABEND\n 00035C 4100 0084            00084   738+         LA    0,132(0,0)         DUMP/STEP/DUMPOPTS/REASON    @G860P1F 02-ABEND\n 000360 8900 0018            00018   739+         SLL   0,24(0)            SHIFT TO HIGH ORDER                   02-ABEND\n 000364 1610                         740+         OR    1,0                OR IN WITH COMPCODE                   02-ABEND\n 000366 0A0D                         741+         SVC   13                 LINK TO ABEND ROUTINE                 02-ABEND\n0                                    743+*--------------------------------------------------------------------*\n                                     744+* RETURN point                                                       *\n                                     745+*--------------------------------------------------------------------*\n 000368                              746+RETRN    DS    0H                                                       01-00300\n                                     747+*EXIT    CEXIT RC=(15)\n                                     748+EXIT     CEXIT RC=(15)                                                  01-00304\n ** ASMA057E Undefined operation code - 00304/CEXIT\n ** ASMA435I Record 166 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n 000368                              749          LTORG\n                                     750          COPY DSA                  DSA forc SAS/C\n ** ASMA060S COPY code not found - DSA\n ** ASMA435I Record 217 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n                                     751 *oadlist load sf=l                 load list form\n                                     752 LOADLIST LOAD SF=L                 load list form\n 000368                              756+         CNOP  0,4                                            @G381P2A  02-IHBIN\n 000368 00000000                     757+LOADLIST DC    A(0)               ADDRESS OF EP OR DE PARAMETER         02-IHBIN\n 00036C 00000000                     758+         DC    AL4(0)             DCB ADDRESS PARAMETER       @G381P2A  02-IHBIN\n 000370 00                           759+         DC    AL1(0)             PARAMETER LIST FORMAT NUMBER          02-IHBIN\n 000371 00                           760+         DC    AL1(0)             RESERVED                    @G381P2A  02-IHBIN\n 000372 00                           761+         DC    B'00000000'                                   OPTIONS    02-IHBIN\n 000373 00                           762+         DC    B'00000000'                         OPTIONS        @L2C  02-IHBIN\n 000374 00000000                     763+         DC    A(0)               EXPLICIT LOAD, LOADPT, EXTINFO  @L1C  02-IHBIN\n                       00010         764 LOADLISTL EQU *-LOADLIST           list length\n 000378 0000000000000000             765 CALLLIST  DC   8A(0)               call list form\n                       00020         766 CALLLISTL EQU  *-CALLLIST          cal list length\n 000398 0000000000000000             767 TOKENDATA DC   4A(0)               token data\n 0003A8 00000000                     768 RETCODE  DC    A(0)                    Return code\n                                     769 DSALEN   EQU   *-DSA               DSECT length\n ** ASMA044E Undefined symbol - DSA\n ** ASMA435I Record 225 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n                                     770          COPY CRAB                 CRANB for SAS/C\n ** ASMA060S COPY code not found - CRAB\n ** ASMA435I Record 226 in ESA.PRJ.CBTDSSN.ASM(RSQLASM) on volume: USER01\n                                     771          END\n1                                                 Relocation Dictionary                                         Page   19\n-   Pos.Id   Rel.Id   Address  Type  Action                                                  HLASM R6.0  2012/11/21 13.01\n0  00000002 00000005 00000068   A 4     +\n   00000003 00000005 000000D8   A 4     +\n   00000004 00000005 00000148   A 4     +\n   00000005 00000005 00000338   A 4     +\n1                                          Macro and Copy Code Source Summary                                   Page   20\n- Con Source                                        Volume    Members                        HLASM R6.0  2012/11/21 13.01\n0     PRIMARY INPUT                                           RSQL     STUB\n   L1 ESA.PRJ.CBTDSSN.ASM                           USER01    CREGS\n   L2 SYS1.MACLIB                                   Z1DT11    ABEND    CALL     DELETE   IEANTASM IHBINNRR IHBINNRX\n                                                              IHBOPLTX LOAD     SYSSTATE\n1                                                      Using Map                                                Page   21\n-                                                                                            HLASM R6.0  2012/11/21 13.01\n   Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text\n           Count      Id           Type          Value    Range     Id        Disp    Stmt\n0   358  00000004  00000002 USING  ORDINARY    0000033C 00001000 00000005   7 0006C    398 LEVEL,R7\n    417  00000074  00000003 USING  ORDINARY    0000033C 00001000 00000005   7 0006C    457 LEVEL,R7\n    476  000000E4  00000004 USING  ORDINARY    0000033C 00001000 00000005   7 0006C    717 LEVEL,R7\n1                                   General Purpose Register Cross Reference                                    Page   22\n- Register  References (M=modified, B=branch, U=USING, D=DROP, N=index)                      HLASM R6.0  2012/11/21 13.01\n0    0(0)     373M  374   375M  376   377M  378   379M  380   392M  395   432M  433   434M  435   436M  437   438M  439\n              451M  454   491M  492   493M  494   495M  496   497M  498   510M  513   548M  549   550M  551   552M  553\n              554M  555   565M  570M  575M  582M  587M  604M  605   606M  607   608M  609   623M  626   636M  639   653M\n              656   664M  667   678M  681   690M  693   709M  710   711M  712   713M  714   715M  716   717M  718   738M\n              739M  740\n     1(1)     359   372M  374   376   378   380   393M  393   400M  418   431M  433   435   437   439   452M  452   459M\n              477   490M  492   494   496   498   511M  511   518M  547M  549   551   553   555   603M  605   607   609\n              624M  624   635M  639   640   654M  654   665M  665   679M  679   691M  691   708M  710   712   714   716\n              718   736M  740M\n     2(2)     359M  400   418M  459   477M  518\n     3(3)    (no references identified)\n     4(4)    (no references identified)\n     5(5)     695M  722   729M  737\n     6(6)    (no references identified)\n     7(7)     357M  358U  416M  417U  475M  476U  534M\n     8(8)    (no references identified)\n     9(9)    (no references identified)\n    10(A)    (no references identified)\n    11(B)    (no references identified)\n    12(C)    (no references identified)\n    13(D)    (no references identified)\n    14(E)     381M  401M  440M  460M  499M  519M  556M  610M  719M\n    15(F)     360M  361M  361   362M  362   363M  363   381B  382   388M  392   395M  398M  401B  419M  420M  420   421M\n              421   422M  422   440B  441   447M  451   454M  457M  460B  478M  479M  479   480M  480   481M  481   499B\n              500   506M  510   513M  516M  519B  535M  536M  536   537M  537   538M  538   556B  557   591M  592M  592\n              593M  593   594M  594   610B  611   619M  623   641M  643M  643   649M  653   660M  664   668M  674M  678\n              686M  690   694M  694   695   696M  697M  697   698M  698   699M  699   719B  720M  720   722M  729   737M\n1                                  Diagnostic Cross Reference and Assembler Summary                             Page   23\n-                                                                                            HLASM R6.0  2012/11/21 13.01\n0Statements Flagged\n0    19(L1:CREGS,18), 22(L1:CREGS,23), 352(P1,22), 353(P1,23), 354(P1,24), 355(P1,25), 356(P1,26), 357(P1,32),\n     388(L2:LOAD,128), 403(P1,57), 411(P1,22), 412(P1,23), 413(P1,24), 414(P1,25), 415(P1,26), 416(P1,32),\n     447(L2:LOAD,128), 462(P1,57), 470(P1,22), 471(P1,23), 472(P1,24), 473(P1,25), 474(P1,26), 475(P1,32),\n     506(L2:LOAD,128), 521(P1,57), 529(P1,71), 530(P1,72), 531(P1,73), 532(P1,74), 533(P1,75), 534(P1,81), 562(P1,93),\n     565(L2:DELETE,21), 570(L2:DELETE,21), 575(L2:DELETE,21), 578(P1,100), 582(L2:DELETE,21), 587(L2:DELETE,21),\n     619(L2:LOAD,128), 636(L2:IHBINNRX,240), 637(L2:IHBINNRX,241), 644(L2:LOAD,99), 649(L2:LOAD,128), 660(L2:LOAD,128),\n     669(P1,130), 674(L2:LOAD,128), 686(L2:LOAD,128), 748(P1,166), 750(P1,217), 769(P1,225), 770(P1,226)\n\n      52 Statements Flagged in this Assembly       12 was Highest Severity Code\n0HIGH LEVEL ASSEMBLER, 5696-234, RELEASE 6.0, PTF UK75466\n0SYSTEM: z/OS 01.13.00              JOBNAME: ESACOMP     STEPNAME: RSQLASM    PROCSTEP: ASMA90\n0Data Sets Allocated for this Assembly\n  Con DDname   Data Set Name                                Volume  Member\n   P1 SYSIN    ESA.PRJ.CBTDSSN.ASM                          USER01  RSQLASM\n   L1 SYSLIB   ESA.PRJ.CBTDSSN.ASM                          USER01\n   L2          SYS1.MACLIB                                  Z1DT11\n   L3          SYS1.MODGEN                                  Z1DT12\n   L4          CEE.SCEEMAC                                  Z1DT12\n   L5          ASM.AASMMAC2                                 Z1DSM1\n   L6          ASM.AASMMAC1                                 Z1DSM1\n      SYSLIN   ESA.PRJ.CBTDSSN.OBJECT                       USER07  RSQLASM\n      SYSPRINT ESA.PRJ.CBTDSSN.COMPLIST                     USER04  RSQLASM\n      SYSTERM  ESA.ESACOMP.JOB05985.D0000190.?\n\n  922744K allocated to Buffer Pool       Storage required     416K\n     227 Primary Input Records Read         2431 Library Records Read                  0 Work File Reads\n       0 ASMAOPT Records Read                999 Primary Print Records Written         0 Work File Writes\n      25 Object Records Written                0 ADATA Records Written\n0Assembly Start Time: 13.01.07 Stop Time: 13.01.08 Processor Time: 00.00.00.0226\n Return Code 012\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SSQLASM": {"ttr": 2625, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "1                                         High Level Assembler Option Summary                   (PTF UK75466)   Page    1\n-                                                                                            HLASM R6.0  2012/11/30 08.23\n0  No Overriding ASMAOPT Parameters\n   Overriding Parameters-  OBJECT,NODECK,LIST,TERM,NOXREF,GOFF,FLAG(PAGE0),ADATA\n   No Process Statements\n\n ** ASMA434N GOFF/XOBJECT option specified, option LIST(133) will be used\n\n   Options for this Assembly\n03   ADATA\n     ALIGN\n     ASA\n     BATCH\n     CODEPAGE(047C)\n   NOCOMPAT\n   NODBCS\n 3 NODECK\n     DXREF\n     ESD\n   NOEXIT\n 3   FLAG(0,ALIGN,CONT,EXLITW,NOIMPLEN,PAGE0,PUSH,RECORD,NOSUBSTR,USING0)\n   NOFOLD\n 3   GOFF(NOADATA)\n   NOINFO\n     LANGUAGE(EN)\n   NOLIBMAC\n     LINECOUNT(60)\n 3   LIST(133)\n     MACHINE(,NOLIST)\n     MXREF(SOURCE)\n 3   OBJECT\n     OPTABLE(UNI,NOLIST)\n   NOPCONTROL\n   NOPESTOP\n   NOPROFILE\n   NORA2\n   NORENT\n     RLD\n     RXREF\n     SECTALGN(8)\n     SIZE(MAX)\n   NOSUPRWARN\n     SYSPARM()\n 3   TERM(WIDE)\n   NOTEST\n     THREAD\n   NOTRANSLATE\n     TYPECHECK(MAGNITUDE,REGISTER)\n     USING(NOLIMIT,MAP,WARN(15))\n   NOWORKFILE\n 3 NOXREF\n\n   No Overriding DD Names\n1                                              External Symbol Dictionary                                       Page    2\n-Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                            HLASM R6.0  2012/11/30 08.23\n0          SD 00000001\n B_IDRL    ED 00000002                    00000001\n B_PRV     ED 00000003                    00000001\n B_TEXT    ED 00000004 00000000 00000000  00000001   00\n DSNALI    SD 00000005\n B_IDRL    ED 00000006                    00000005\n B_PRV     ED 00000007                    00000005\n B_TEXT    ED 00000008 00000000 000002BF  00000005   06\n DSNALI    LD 00000009 00000000           00000008   06\n CEESTART  ER 0000000A                    00000005\n DSNHLI    SD 0000000B\n B_IDRL    ED 0000000C                    0000000B\n B_PRV     ED 0000000D                    0000000B\n B_TEXT    ED 0000000E 000002C0 00000144  0000000B   06\n DSNHLI    LD 0000000F 000002C0           0000000E   06\n DSNTIAR   SD 00000010\n B_IDRL    ED 00000011                    00000010\n B_PRV     ED 00000012                    00000010\n B_TEXT    ED 00000013 00000408 00000144  00000010   06\n DSNTIAR   LD 00000014 00000408           00000013   06\n SQLASM    SD 00000015\n B_IDRL    ED 00000016                    00000015\n B_PRV     ED 00000017                    00000015\n B_TEXT    ED 00000018 00000550 000002C8  00000015   06\n SQLASM    LD 00000019 00000550           00000018   06\n1                                                                                                               Page    3\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                               1 *30/03/06 addr in r5\n                                                2 *30/03/06 load RRS or CAF module\n                                                3          PRINT    GEN\n1         SQLASM SQL IBM interface module                                                                       Page    4\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                               5 *        CREGS USING\n                                                6          CREGS USING\n                         00000000               7+R0       EQU   0                                                        01-CREGS\n                         00000001               8+R1       EQU   1                                                        01-CREGS\n                         00000002               9+R2       EQU   2                                                        01-CREGS\n                         00000003              10+R3       EQU   3                                                        01-CREGS\n                         00000004              11+R4       EQU   4                                                        01-CREGS\n                         00000005              12+R5       EQU   5                                                        01-CREGS\n                         00000006              13+R6       EQU   6                                                        01-CREGS\n                         00000007              14+R7       EQU   7                                                        01-CREGS\n                         00000008              15+R8       EQU   8                                                        01-CREGS\n                         00000009              16+R9       EQU   9                                                        01-CREGS\n                         0000000A              17+R10      EQU   10                                                       01-CREGS\n                         0000000B              18+R11      EQU   11                                                       01-CREGS\n                         0000000C              19+R12      EQU   12                                                       01-CREGS\n                         0000000D              20+R13      EQU   13                                                       01-CREGS\n                         0000000D              21+RDSA     EQU   R13                DSA POINTER                           01-CREGS\n                     R:D 00000000              22+         USING DSA,R13                                                  01-CREGS\n                         0000000E              23+R14      EQU   14                                                       01-CREGS\n                         0000000F              24+R15      EQU   15                                                       01-CREGS\n                         00000000              25+FR0      EQU   0                                                        01-CREGS\n                         00000002              26+FR2      EQU   2                                                        01-CREGS\n                         00000004              27+FR4      EQU   4                                                        01-CREGS\n                         00000006              28+FR6      EQU   6                                                        01-CREGS\n                                               29 *        IEANTASM\n                                               30          IEANTASM\n                                               31+*** START OF SPECIFICATIONS ******************************************\n                                               32+****PROPRIETARY_STATEMENT*********************************************\n                                               33+*01* PROPRIETARY-STATEMENT********************************************\n                                               34+*                                                                    *\n                                               35+* LICENSED MATERIALS - PROPERTY OF IBM                               *\n                                               36+* THIS MACRO IS \"RESTRICTED MATERIALS OF IBM\"                        *\n                                               37+* 5694-A01 (C) COPYRIGHT IBM CORP. 1991,2002                         *\n                                               38+*                                                                    *\n                                               39+*****END_OF_PROPRIETARY_STATEMENT*************************************\n                                               40+*                                                                    *\n                                               41+*01* Status: HBB7706                                                 *\n                                               42+*                                                                    *\n                                               43+*01* Descriptive Name: Name/Token Service Assembler Declares         *\n                                               44+*02*  Acronym: N/A                                                   *\n                                               45+*                                                                    *\n                                               46+*01* Macro-name: IEANTASM                                            *\n                                               47+*                                                                    *\n                                               48+*01* DSECT-name: N/A                                                 *\n                                               49+*                                                                    *\n                                               50+*01* Component: Supervisor Control (SC1C5)                           *\n                                               51+*                                                                    *\n                                               52+*01* External Classification: GUPI                                   *\n                                               53+*01* End of External Classification:                                 *\n                                               54+*                                                                    *\n                                               55+*01* Eye-catcher: N/A                                                *\n                                               56+*02* Offset: N/A                                                     *\n                                               57+*02* Length: N/A                                                     *\n                                               58+*                                                                    *\n                                               59+*01* Storage-attributes: N/A                                         *\n1         SQLASM SQL IBM interface module                                                                       Page    5\n   Active Usings: DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                              60+*02* Main-Storage: N/A                                               *\n                                               61+*02* Virtual-Storage: N/A                                            *\n                                               62+*02* Auxiliary-Storage: N/A                                          *\n                                               63+*02* Subpool: N/A                                                    *\n                                               64+*02* Key: N/A                                                        *\n                                               65+*02* Data-space: N/A                                                 *\n                                               66+*02* Residency: N/A                                                  *\n                                               67+*                                                                    *\n                                               68+*01* Size: N/A                                                       *\n                                               69+*                                                                    *\n                                               70+*01* Created-by: N/A                                                 *\n                                               71+*                                                                    *\n                                               72+*01* Pointed-to-by: N/A                                              *\n                                               73+*                                                                    *\n                                               74+*01* Serialization: N/A                                              *\n                                               75+*                                                                    *\n                                               76+*                                                                    *\n                                               77+*01* Function:                                                       *\n                                               78+*02* IEANTASM defines types, related constants, and external entry   *\n                                               79+*    declarations for the use of Name Token/Services from 390        *\n                                               80+*    Assembly Language                                               *\n                                               81+*                                                                    *\n                                               82+*01* Method-of-access:                                               *\n                                               83+*02* Include IEANTASM                                                *\n                                               84+*                                                                    *\n                                               85+*01* Notes:                                                          *\n                                               86+*    The Name/Token services do not use a null character to          *\n                                               87+*    terminate strings. All of the services expect name and token    *\n                                               88+*    data to be a fixed-length 16-byte type. Name data cannot        *\n                                               89+*    begin with or be composed entirely of null characters. However, *\n                                               90+*    token data may be any valid hex or EBCDIC string including      *\n                                               91+*    null characters.                                                *\n                                               92+*                                                                    *\n                                               93+*01* Change-Activity:                                                *\n                                               94+*    $L0=TOKEN,   JBB4422, 910308, PD16JV: Name/Token Support        *\n                                               95+*    $P1=PKI0261, JBB4422, 910517, PD16JV: Authorized levels         *\n                                               96+*    $P2=PKI0302, JBB4422, 910621, PD16JV: Copyright info            *\n                                               97+*    $P3=PKB0276, HBB4430, 920108, PD16CU: Convert to a macro        *\n                                               98+*    $L1=R69885   HBB7703, 991010, PD00XB: Checkpoint support        *\n                                               99+*                                                                    *\n                                              100+*** END OF SPECIFICATIONS ********************************************\n                                              101+*\n                                              102+**********************************************************************\n                                              103+*      Fixed Service Parameter and Return Code Defines               *\n                                              104+**********************************************************************\n                                              105+*\n                                              106+**********************************************************************\n                                              107+*                   Name/Token Level Constants                       *\n                                              108+**********************************************************************\n                         00000001             109+IEANT_TASK_LEVEL       EQU     1                                        01-IEANTASM\n                         00000002             110+IEANT_HOME_LEVEL       EQU     2                                        01-IEANTASM\n                         00000003             111+IEANT_PRIMARY_LEVEL    EQU     3                                        01-IEANTASM\n                         00000004             112+IEANT_SYSTEM_LEVEL     EQU     4                                        01-IEANTASM\n                         0000000B             113+IEANT_TASKAUTH_LEVEL   EQU     11                              /*@P1A*/ 01-IEANTASM\n                         0000000C             114+IEANT_HOMEAUTH_LEVEL   EQU     12                              /*@P1A*/ 01-IEANTASM\n1         SQLASM SQL IBM interface module                                                                       Page    6\n   Active Usings: DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        0000000D             115+IEANT_PRIMARYAUTH_LEVEL EQU    13                              /*@P1A*/ 01-IEANTASM\n                                              116+*\n                                              117+**********************************************************************\n                                              118+*                     Name/Token Persistence                         *\n                                              119+**********************************************************************\n                         00000000             120+IEANT_NOPERSIST        EQU     0                                        01-IEANTASM\n                         00000001             121+IEANT_PERSIST          EQU     1                                        01-IEANTASM\n                                              122+*\n                                              123+**********************************************************************\n                                              124+*                     Name/Token Checkpoint                          *\n                                              125+**********************************************************************\n                         00000000             126+IEANT_NOCHECKPOINT     EQU     0                                  @L1A  01-IEANTASM\n                         00000002             127+IEANT_CHECKPOINTOK     EQU     2                                  @L1A  01-IEANTASM\n                                              128+*\n                                              129+**********************************************************************\n                                              130+*                      Service Return Codes                          *\n                                              131+**********************************************************************\n                         00000000             132+IEANT_OK               EQU     0                                        01-IEANTASM\n                         00000004             133+IEANT_DUP_NAME         EQU     4                                        01-IEANTASM\n                         00000004             134+IEANT_NOT_FOUND        EQU     4                                        01-IEANTASM\n                         00000008             135+IEANT_24BITMODE        EQU     8                                        01-IEANTASM\n                         00000010             136+IEANT_NOT_AUTH         EQU     16                                       01-IEANTASM\n                         00000014             137+IEANT_SRB_MODE         EQU     20                                       01-IEANTASM\n                         00000018             138+IEANT_LOCK_HELD        EQU     24                                       01-IEANTASM\n                         0000001C             139+IEANT_LEVEL_INVALID    EQU     28                                       01-IEANTASM\n                         00000020             140+IEANT_NAME_INVALID     EQU     32                                       01-IEANTASM\n                         00000024             141+IEANT_PERSIST_INVALID  EQU     36                                       01-IEANTASM\n                         00000028             142+IEANT_AR_INVALID       EQU     40                                       01-IEANTASM\n                         0000002C             143+IEANT_NOT_AMODE64      EQU     44                                       01-IEANTASM\n                         00000040             144+IEANT_UNEXPECTED_ERR   EQU     64                                       01-IEANTASM\n                                              145+*\n                                              146+**********************************************************************\n                                              147+*   End of Name/Token Services Include                               *\n                                              148+**********************************************************************\n                                              149          MACRO\n                                              150 &LABEL   STUB &INDEX=0,&LOAD=\n                                              151          LCLC &LNAME,&LRRS\n                                              152          AIF  ('&LOAD' EQ '').SETDEF\n                                              153 &LNAME   SETC '&LOAD'\n                                              154          AGO  .SETOK\n                                              155 .SETDEF  ANOP\n                                              156 &LNAME   SETC '&LABEL'\n                                              157 .SETOK   AIF   ('&LNAME' NE 'DSNALI').NALI\n                                              158 &LRRS    SETC  'DSNRLI'\n                                              159          AGO   .RRSOK\n                                              160 .NALI    AIF   ('&LNAME' NE 'DSNHLI2').NHLI\n                                              161 &LRRS    SETC  'DSNHLIR'\n                                              162          AGO   .RRSOK\n                                              163 .NHLI    ANOP\n                                              164 &LRRS    SETC  'DSNTIAR'\n                                              165 .RRSOK   ANOP\n                                              166 &LABEL   CSECT\n                                              167 &LABEL   AMODE 31\n                                              168 &LABEL   RMODE ANY\n                                              169 *label.E edcprlg basereg=r9,dsalen=dsalen\n1         SQLASM SQL IBM interface module                                                                       Page    7\n   Active Usings: DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                             170 &LABEL.E EDCPRLG BASEREG=R9,DSALEN=DSALEN\n                                              171 .LOK     ANOP\n                                              172          L     R7,=A(LEVEL)       get const darr\n                                              173          USING LEVEL,R7           base on const\n                                              174          LR    R2,R1              save pointer\n                                              175          L     R15,X'10'           CVT\n                                              176          L     R15,X'220'(,R15)     CSR table address\n                                              177          L     R15,X'14'(,R15)      offset\n                                              178          L     R15,X'08'(,R15)      IEANTRNT\n                                              179 *        CALL  (15),(LEVEL,tokenname,TOKENDATA,RETCODE),               *\n                                                                 MF=(E,CALLLIST)\n                                              180          CALL  (15),(LEVEL,TOKENNAME,TOKENDATA,RETCODE),               *\n                                                                 MF=(E,CALLLIST)\n                                              181          CHI   R15,4               check code\n                                              182          JL    OK&SYSNDX           if retrieve ok\n                                              183          XC    LOADLIST(LOADLISTL),LOADLIST clear list\n                                              184 *        load  ep=userrs,erret=norrs&sysndx,sf=(e,loadlist)\n                                              185          LOAD  EP=USERRS,ERRET=NORRS&SYSNDX,SF=(E,LOADLIST)\n                                              186 *        load  ep=&LRRS\n                                              187          LOAD  EP=&LRRS\n                                              188          LR    R5,R0               get addr\n                                              189          J     DOC&SYSNDX\n                                              190 NORRS&SYSNDX DS 0H\n                                              191 *30/03/06 addr in r5\n                                              192 *        load  ep=&LNAME\n                                              193          LOAD  EP=&LNAME\n                                              194          LR    R5,R0               into r5\n                                              195          J     DOC&SYSNDX          jump to call\n                                              196 OK&SYSNDX DS   0H\n                                              197           L   R15,TOKENDATA+&INDEX get proper addr\n                                              198           LR  R5,R15               save here\n                                              199 DOC&SYSNDX DS  0H\n                                              200          AIF   ('&LABEL' NE 'DSNALI').NODSNALI\n                                              201          ICM   R3,15,0(R2)         get fists parm\n                                              202          JZ    NOPARM&SYSNDX       jump if no parm\n                                              203          MVC   CALLCODE,0(R3)      save call code\n                                              204          CLC   =C'IDENTIFY',0(R3)  RRS IDENTIFY (i.e connect)\n                                              205          JE    CONN&SYSNDX         connect request\n                                              206          CLC   =C'CONNECT',0(R3)   CAF connect request\n                                              207          JNE   GOON&SYSNDX         if not CAF connect\n                                              208 CONN&SYSNDX  DS 0H\n                                              209          BAS   R14,RETR&SYSNDX     call to retrieve token\n                                              210          LTR   R15,R15             test code\n                                              211          JZ    ALREADY&SYSNDX      jump if already\n                                              212 * start to connect\n                                              213          LR    R1,R2               back pointer\n                                              214          LR    R15,R5              back module addr\n                                              215          BASR  R14,R15             call it to connect\n                                              216          LTR   R15,R15             test rc\n                                              217          JNZ   RET&SYSNDX          jump if not o.k.\n                                              218 * connection was o.k, so create token\n                                              219          BAS   R14,CREA&SYSNDX     create token\n                                              220          LTR   R15,R15             check code\n                                              221          JNZ   ERRTKN&SYSNDX       name token error\n                                              222          J     RET&SYSNDX\n1         SQLASM SQL IBM interface module                                                                       Page    8\n   Active Usings: DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                             223 NOPARM&SYSNDX DS 0H\n                                              224          L     R15,=F'-2'         parm error\n                                              225          J     RET&SYSNDX         jump out\n                                              226 ERRTKN&SYSNDX DS 0H\n                                              227          L     R15,=F'-3'         token error\n                                              228          J     RET&SYSNDX         jump out\n                                              229 ALREADY&SYSNDX L R15,=F'-1'       already connectedo\n                                              230          J     RET&SYSNDX         jump out\n                                              231 .NODSNALI  ANOP\n                                              232 GOON&SYSNDX DS 0H\n                                              233          LR    R1,R2               back pointer\n                                              234          LR    R15,R5              back module addr\n                                              235          BASR  R14,R15             call it\n                                              236          AIF   ('&LABEL' NE 'DSNALI').NODSNAL1\n                                              237          LR    R5,R15              save rc\n                                              238          CLC   =C'TERMINATE',CALLCODE terminate RRS\n                                              239          JE    DELDO&SYSNDX        jump if it is\n                                              240          CLC   =C'DISCONN',CALLCODE terminate CAF\n                                              241          JNE   RET&SYSNDX\n                                              242 DELDO&SYSNDX DS 0H\n                                              243          BAS   R14,DELTK&SYSNDX    call to delete\n                                              244          CHI   R15,4               check code\n                                              245          JH    ERRT&SYSNDX         name/token error\n                                              246          LR    R15,R5              back\n                                              247 .NODSNAL1 ANOP\n                                              248 RET&SYSNDX DS  0H\n                                              249 *        edcepil\n                                              250          EDCEPIL\n                                              251          AIF   ('&LABEL' NE 'DSNALI').NODSNAL2\n                                              252 RETR&SYSNDX BAKR R14,0\n                                              253          L     R15,X'10'           CVT\n                                              254          L     R15,X'220'(,R15)    CSR table address\n                                              255          L     R15,X'14'(,R15)     offset\n                                              256          L     R15,X'08'(,R15)     IEANTRNT\n                                              257 *        CALL  (15),(CONN_LEVEL,CONN_TOKENNAME,TOKENDATA,RETCODE),     *\n                                                                 MF=(E,CALLLIST)\n                                              258          CALL  (15),(CONN_LEVEL,CONN_TOKENNAME,TOKENDATA,RETCODE),     *\n                                                                 MF=(E,CALLLIST)\n                                              259          PR    ,\n                                              260 DELTK&SYSNDX BAKR R14,0\n                                              261          L     R15,X'10'           CVT\n                                              262          L     R15,X'220'(,R15)     CSR table address\n                                              263          L     R15,X'14'(,R15)       offset\n                                              264          L     R15,X'0C'(,R15)       IEANTDL delete token\n                                              265 *        CALL  (15),(conn_LEVEL,conn_tokenname,RETCODE),MF=(E,CALLLIST)\n                                              266          CALL  (15),(CONN_LEVEL,CONN_TOKENNAME,RETCODE),MF=(E,CALLLIST)\n                                              267          PR    ,\n                                              268 CREA&SYSNDX BAKR R14,0             in stack\n                                              269          L     R15,X'10'           CVT\n                                              270          L     R15,X'220'(,R15)    CSR table address\n                                              271          L     R15,X'14'(,R15)     offset\n                                              272          L     R15,X'04'(,R15)     IEANTCR\n                                              273 *        CALL  (15),(conn_level,conn_tokenname,tokendata,              *\n                                                                 NOPERSIST,RETCODE),MF=(E,CALLLIST)\n                                              274          CALL  (15),(CONN_LEVEL,CONN_TOKENNAME,TOKENDATA,              *\n1         SQLASM SQL IBM interface module                                                                       Page    9\n   Active Usings: DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                                                NOPERSIST,RETCODE),MF=(E,CALLLIST)\n                                              275          PR    ,\n                                              276 ERRT&SYSNDX LR R5,R15              get code\n                                              277 *        ABEND (R5),DUMP,,SYSTEM,REASON=(R3)\n                                              278          ABEND (R5),DUMP,,SYSTEM,REASON=(R3)\n                                              279 .NODSNAL2 ANOP\n                                              280          LTORG\n                                              281          MEND\n                                              282          MACRO\n                                              283 &LABEL   RSQL\n                                              284 *        EDCPRLG BASEREG=R9,DSALEN=DSALEN\n                                              285          EDCPRLG BASEREG=R9,DSALEN=DSALEN\n                                              286 .RLOK    ANOP\n                                              287          L     R7,=A(LEVEL)       get const darr\n                                              288          L     R15,X'10'           CVT\n                                              289          L     R15,X'220'(,R15)    CSR table address\n                                              290          L     R15,X'14'(,R15)     offset\n                                              291          L     R15,X'08'(,R15)     IEANTRNT\n                                              292 *        CALL  (15),(LEVEL,tokenname,TOKENDATA,RETCODE),MF=(E,CALLLIST)\n                                              293          CALL  (15),(LEVEL,TOKENNAME,TOKENDATA,RETCODE),MF=(E,CALLLIST)\n                                              294          CHI   R15,4               check code\n                                              295          JE    LOAD                if new token\n                                              296 *        JL    DELETE              if already exits, delete\n                                              297          JH    ERRTKN              name/token err\n                                              298 * already exists, check if rrs was\n                                              299          SR    R15,R15             no rrs\n                                              300          OC    TOKENDATA+12(4),TOKENDATA+12 test for RRS\n                                              301          JZ    RETRN               no rrs\n                                              302          LA    R15,4               indicate rrs\n                                              303          J     RETRN               if already exits, o.k.\n                                              304 DELETE   OC    TOKENDATA+12(4),TOKENDATA+12 test for RRS\n                                              305          BZ    DNORRS              DELETE NORRS\n                                              306 *        delete ep=userrs          delete userrs\n                                              307          DELETE EP=USERRS          delete userrs\n                                              308 *        delete ep=dsnhlir         delete dsnhlir\n                                              309          DELETE EP=DSNHLIR         delete dsnhlir\n                                              310 *        delete ep=dsnrli          delete dsnrli\n                                              311          DELETE EP=DSNRLI          delete dsnrli\n                                              312          B     DCLEAR\n                                              313 DNORRS   DS    0H\n                                              314 *        delete ep=dsnhli2\n                                              315          DELETE EP=DSNHLI2\n                                              316 *        delete ep=dsnali\n                                              317          DELETE EP=DSNALI\n                                              318 DCLEAR   DS    0H                  clear addresses\n                                              319          L     R15,X'10'           CVT\n                                              320          L     R15,X'220'(,R15)     CSR table address\n                                              321          L     R15,X'14'(,R15)       offset\n                                              322          L     R15,X'0C'(,R15)       IEANTDL delete token\n                                              323 *        CALL  (15),(LEVEL,tokenname,RETCODE),MF=(E,CALLLIST)\n                                              324          CALL  (15),(LEVEL,TOKENNAME,RETCODE),MF=(E,CALLLIST)\n                                              325          CHI   R15,4               check code\n                                              326          BH    ERRTKN              name/token error\n                                              327          B     RETRN\n                                              328 LOAD     DS    0H\n1         SQLASM SQL IBM interface module                                                                       Page   10\n   Active Usings: DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                             329 *        LOAD  EP=DSNTIAR          get addr\n                                              330          LOAD  EP=DSNTIAR          get addr\n                                              331          ST    R0,TOKENDATA+8      save addr\n                                              332          MVI   TOKENDATA+12,1      assume RRS\n                                              333          XC    LOADLIST(LOADLISTL),LOADLIST clear list\n                                              334 *        load  ep=userrs,erret=norrs,sf=(e,loadlist)\n                                              335          LOAD  EP=USERRS,ERRET=NORRS,SF=(E,LOADLIST)\n                                              336 *        load  ep=dsnrli\n                                              337          LOAD  EP=DSNRLI\n                                              338          ST    R0,TOKENDATA        save addr\n                                              339          LOAD  EP=DSNHLIR          get addr\n                                              340          ST    R0,TOKENDATA+4      save addr\n                                              341          LA    R15,4               indicate rrs\n                                              342          B     CTOKEN              branch to create token\n                                              343 NORRS    XC    TOKENDATA+12(4),TOKENDATA+12 use CAF\n                                              344          LOAD  EP=DSNALI           get addr\n                                              345          ST    R0,TOKENDATA        save addr\n                                              346 *        LOAD  EP=DSNHLI2          get addr\n                                              347          LOAD  EP=DSNHLI2          get addr\n                                              348          ST    R0,TOKENDATA+4      save addr\n                                              349          SR    R15,R15             no RRS\n                                              350 CTOKEN   LR    R5,R15              save rc\n                                              351          L     R15,X'10'           CVT\n                                              352          L     R15,X'220'(,R15)    CSR table address\n                                              353          L     R15,X'14'(,R15)     offset\n                                              354          L     R15,X'04'(,R15)     IEANTCR\n                                              355 *        CALL  (15),(LEVEL,tokenname,tokendata,nopersist,RETCODE),     *\n                                                                 MF=(E,CALLLIST)\n                                              356          CALL  (15),(LEVEL,TOKENNAME,TOKENDATA,NOPERSIST,RETCODE),     *\n                                                                 MF=(E,CALLLIST)\n                                              357          LTR   R15,R15             check code\n                                              358          JNZ   ERRTKN              name token error\n                                              359          LR    R15,R5              back rc\n                                              360          J     RETRN               jump out\n                                              361          LTORG\n                                              362 LEVEL    DC    A(IEANT_TASK_LEVEL)      Task level\n                                              363 *LEVEL    DC    A(IEANT_HOME_LEVEL)     Home level\n                                              364 NOPERSIST DC   A(IEANT_NOPERSIST)      nopersist option\n                                              365 TOKENNAME DC   CL16'ISIS_DB2CAF_TOKEN' Token name\n                                              366 CONN_LEVEL DC  A(IEANT_TASK_LEVEL)      task level\n                                              367 CONN_TOKENNAME DC   CL16'ISIS_DBCONN_TOKEN' Token name\n                                              368 ERRTKN   LR    R5,R15              get code\n                                              369 *        ABEND (R5),DUMP,,SYSTEM,REASON=(R3)\n                                              370          ABEND (R5),DUMP,,SYSTEM,REASON=(R3)\n                                              371          SPACE 1\n                                              372 *--------------------------------------------------------------------*\n                                              373 * RETURN point                                                       *\n                                              374 *--------------------------------------------------------------------*\n                                              375 RETRN    DS    0H\n                                              376 *exit    edcepil\n                                              377 EXIT     EDCEPIL\n                                              378 .RRLOK   ANOP\n                                              379          MEND\n0                                             381 *--------------------------------------------------------------------*\n1         SQLASM SQL IBM interface module                                                                       Page   11\n   Active Usings: DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                             382 *RSQLASM : ASM stub routine to provide access to the SQL functions   *\n                                              383 *          from the SASC/C modules with CAF and RRS                  *\n                                              384 *                                                                    *\n                                              385 * Entry points :                                                     *\n                                              386 *         SQLASM standard init entry point                           *\n                                              387 *         if the address =0 then                                     *\n                                              388 *         load the DSN.. modules and store the address list          *\n                                              389 *         in the C address list                                      *\n                                              390 *         if the address <>0 then                                    *\n                                              391 *         delete the DSN.. modules and set the address list to zero  *\n                                              392 *         in the C address list                                      *\n                                              393 * The program tries to load the DSNRL interface, andif it can        *\n                                              394 *     set a flag to indicate the use of the RRS                      *\n                                              395 * RRS entry points:                                                  *\n                                              396 *         DSNRLI  standard SQL entry point to call the DSNRLI module *\n                                              397 *         DSNHLIR SQL call entry point                               *\n                                              398 * CAF entry points:                                                  *\n                                              399 *         DSNHLI2 standard SQL entry point to call the DSNHLI module *\n                                              400 *         DSNALI standard SQL entry to call the DSNALI module        *\n                                              401 * Common :                                                           *\n                                              402 *         DSNTIAR to call the standard SQL message edit nodule       *\n                                              403 *                                                                    *\n                                              404 *                                                                    *\n                                              405 * Calling: The module is called via the standard MVS convention :    *\n                                              406 *          R1 points to the parameters list :                        *\n                                              407 *          +0  address list pointer                                  *\n                                              408 *            +0 DSNALI or DSNRLI address                             *\n                                              409 *            +4 DSNHLI2 or DSNHLIR address                           *\n                                              410 *            +8 DSNTIAR address                                      *\n                                              411 *            +c RRS or CAF flag                                      *\n                                              412 * Processing:                                                        *\n                                              413 * Return : The module returns the primary return code in R15         *\n                                              414 *                                                                    *\n                                              415 * AMODE  : 31                                                        *\n                                              416 * RMODE  : ANY                                                       *\n                                              417 * rent/reus                                                          *\n                                              418 *--------------------------------------------------------------------*\n                                              419 DSNALI   STUB  INDEX=0            stub DSNALI\n 00000000                00000000 000002BF    420+DSNALI   CSECT                                                          01-\n                                              421+DSNALI   AMODE 31                                                       01-\n                                              422+DSNALI   RMODE ANY                                                      01-\n                                              423+*label.E edcprlg basereg=r9,dsalen=dsalen\n                                              425+***--------------------------------------------------------------------\n 00000000                00000000 000000E0    426+IHB0004DS DSECT                                                         02-EDCPRLG\n 00000000                                     427+         DS    D                                                        02-EDCPRLG\n 00000008                                     428+         DS    CL(120+0)                                                02-EDCPRLG\n 00000080                00000080 00000000    429+         ORG   IHB0004DS                                                02-EDCPRLG\n 00000000                                     430+         DS    CL(DSALEN+8)                                             02-EDCPRLG\n 000000DC                000000DC 000000DC    431+         ORG                                                            02-EDCPRLG\n 000000E0                                     432+         DS    0D                                                       02-EDCPRLG\n                         000000D8             433+IHB0004LG EQU   *-IHB0004DS-8                                           02-EDCPRLG\n 00000000                00000000 000002BF    434+DSNALI   CSECT                                                          02-EDCPRLG\n                                              435+*--------------------------------------------------------------\n 00000000                                     436+         DS    0H                                                       02-EDCPRLG\n                     R:F 00000000             437+         USING *,15                                                     02-EDCPRLG\n1         SQLASM SQL IBM interface module                                                                       Page   12\n   Active Usings: DSA,R13  DSNALI,R15\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000000 47F0 F044               00000044    438+DSNALIE  B     IHB0004B       branch around prologue's constant areas   02-EDCPRLG\n                                              439+* PPA1 constant area\n 00000004 14                                  440+         DC    AL1(IHB0004N+4-*)   offset to the name                   02-EDCPRLG\n 00000005 CE                                  441+         DC    X'CE' .             CEE signature                        02-EDCPRLG\n 00000006 A0                                  442+         DC    X'A0' .             CEE flags (ext proc, has DSA)        02-EDCPRLG\n 00000007 10                                  443+         DC    AL1(0+0+16)      .  member flags                         02-EDCPRLG\n 00000008 00000020                            444+         DC    AL4(IHB0004P) .       A(PPA2)                            02-EDCPRLG\n 0000000C 00000000                            445+         DC    AL4(0) .              A(PPA3) or zero                    02-EDCPRLG\n 00000010 000000D8                            446+         DC    AL4(IHB0004LG)        total DSA length                   02-EDCPRLG\n 00000014 0007                                447+IHB0004N DC    AL2(7)      .       length of name                       02-EDCPRLG\n 00000016 C4E2D5C1D3C9C5                      448+         DC    C'DSNALIE'          untruncated name                     02-EDCPRLG\n                                              449+*--------------------------------------------------------------\n                                              450+         EXTRN CEESTART                                                 02-EDCPRLG\n                                              451+*---------------------------------------------------------------\n                                              452+* PPA2 constant area\n 00000020                                     453+IHB0004P DS    0F                  force fwrd alignment                 02-EDCPRLG\n 00000020 03                                  454+         DC    X'03' .             member identifier (C)                02-EDCPRLG\n 00000021 00                                  455+         DC    X'00' .             member subid                         02-EDCPRLG\n 00000022 33                                  456+         DC    X'33'     .         plistfmt/runenv (nibbles)            02-EDCPRLG\n 00000023 00                                  457+         DC    X'00' .             CEE control block level              02-EDCPRLG\n 00000024 00000000                            458+         DC    AL4(CEESTART)                                            02-EDCPRLG\n 00000028 00000000                            459+         DC    AL4(0)                A(PPA4) or zero                    02-EDCPRLG\n 0000002C 00000030                            460+         DC    AL4(IHB0004T) .       A(time stamp) or zero              02-EDCPRLG\n                                              461+*\n                                              462+* Time stamp area\n 00000030                                     463+IHB0004T DS    0F                                                       02-EDCPRLG\n 00000030 F2F0F1F2                            464+         DC    CL4'2012'  .        yyyy                            @P1A 02-EDCPRLG\n 00000034 F1F1F3F0                            465+         DC    CL4'1130'   .       mmdd                                 02-EDCPRLG\n 00000038 F0F8F2F3F0F0                        466+         DC    CL6'082300'     .   hhmmss                               02-EDCPRLG\n 0000003E F0F1                                467+         DC    CL2'01' .           version                              02-EDCPRLG\n 00000040 F0F1F0F0                            468+         DC    CL4'0100' .         release / modif level                02-EDCPRLG\n                                              469+*\n 00000044                                     470+IHB0004B DS    0H                                                       02-EDCPRLG\n                                              471+***--------------------------------------------------------------------\n 00000044 90EC D00C               0000000C    472+         STM   14,12,12(13) .      save Caller's registers              02-EDCPRLG\n                                              473+***--------------------------------------------------------------------\n 00000048 5820 D04C               0000004C    474+         L     2,76(,13)           get current NAB                      02-EDCPRLG\n 0000004C 5800 F010               00000010    475+         L     0,16(,15)           size of DSA                          02-EDCPRLG\n 00000050 1E02                                476+         ALR   0,2                 old NAB + DSA size = new NAB         02-EDCPRLG\n 00000052 5500 C00C               0000000C    477+         CL    0,12(,12)           check for stack overflow             02-EDCPRLG\n 00000056 47D0 F060               00000060    478+         BNH   *+10                branch if enough space               02-EDCPRLG\n 0000005A 58F0 C074               00000074    479+         L     15,116(,12)         load overflow rtn entry address      02-EDCPRLG\n 0000005E 05EF                                480+         BALR  14,15               invoke overflow routine              02-EDCPRLG\n                                              481+* at this point R0 has the new NAB, R2 has the newly acquired address\n 00000060 58F0 D048               00000048    482+         L     15,72(,13)                                               02-EDCPRLG\n 00000064 90F0 2048               00000048    483+         STM   15,0,72(2)                                               02-EDCPRLG\n 00000068 9210 2000      00000000             484+         MVI   0(2),X'10'                                               02-EDCPRLG\n 0000006C 50D0 2004               00000004    485+         ST    13,4(,2)            back chain DSA                       02-EDCPRLG\n 00000070 18D2                                486+         LR    13,2                activate this DSA                    02-EDCPRLG\n                                              487+***--------------------------------------------------------------------\n                                              488+         DROP  15                                                       02-EDCPRLG\n 00000072 0590                                489+         BALR  R9,0                                                     02-EDCPRLG\n                     R:9 00000074             490+         USING *,R9                                                     02-EDCPRLG\n                                              491+***--------------------------------------------------------------------\n 00000074 5870 9224               00000298    492+         L     R7,=A(LEVEL)       get const darr                        01-\n1         SQLASM SQL IBM interface module                                                                       Page   13\n   Active Usings: LEVEL,R7  DSNALI+X'74',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                    R:7 000007BC             493+         USING LEVEL,R7           base on const                         01-\n 00000078 1821                                494+         LR    R2,R1              save pointer                          01-\n 0000007A 58F0 0010               00000010    495+         L     R15,X'10'           CVT                                  01-\n ** ASMA309W Operand X'10' resolved to a displacement with no base register\n ** ASMA435I Record 35 in ESA.PRJ.CBTDSSN.ASM(SSQLASM) on volume: USER01\n 0000007E 58F0 F220               00000220    496+         L     R15,X'220'(,R15)     CSR table address                   01-\n 00000082 58F0 F014               00000014    497+         L     R15,X'14'(,R15)      offset                              01-\n 00000086 58F0 F008               00000008    498+         L     R15,X'08'(,R15)      IEANTRNT                            01-\n                                              499+*        CALL  (15),(LEVEL,tokenname,TOKENDATA,RETCODE),               X\n                                                 +               MF=(E,CALLLIST)\n 0000008A                                     502+         DS    0H                                                       02-CALL\n 0000008A 4110 D090               00000090    507+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBINNRR\n 0000008E 4100 7000               000007BC    508+         LA    0,LEVEL            PICKUP  PARAMETER                     03-IHBOPLTX\n 00000092 5000 1000               00000000    509+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000096 4100 7008               000007C4    510+         LA    0,TOKENNAME        PICKUP  PARAMETER                     03-IHBOPLTX\n 0000009A 5000 1004               00000004    511+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000009E 4100 D0B0               000000B0    512+         LA    0,TOKENDATA        PICKUP  PARAMETER                     03-IHBOPLTX\n 000000A2 5000 1008               00000008    513+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 000000A6 4100 D0C0               000000C0    514+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOPLTX\n 000000AA 5000 100C               0000000C    515+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 000000AE 05EF                                516+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 000000B0 A7FE 0004               00000004    517+         CHI   R15,4               check code                           01-\n 000000B4 A744 0035               0000011E    518+         JL    OK0003              if retrieve ok                       01-\n 000000B8 D70F D080 D080 00000080 00000080    519+         XC    LOADLIST(LOADLISTL),LOADLIST clear list                  01-\n                                              520+*        load  ep=userrs,erret=norrs&sysndx,sf=(e,loadlist)\n 000000BE 0700                                525+         CNOP  0,4                                            @ZA64577  03-IHBINNRX\n 000000C0 4110 D080               00000080    526+         LA    1,LOADLIST         LOAD SUPV PARM LIST ADDR    @G381P2A  03-IHBINNRX\n 000000C4 4100 9058               000000CC    527+         LA    0,*+8              LOAD EP ADDR IN REG 0       @G381P2A  03-IHBINNRX\n 000000C8 47F0 9060               000000D4    528+         B     *+12               BRANCH AROUND EP            @G381P2A  03-IHBINNRX\n 000000CC E4E2C5D9D9E24040                    529+         DC    CL8'USERRS'        EP SYMBOL                   @G381P2A  03-IHBINNRX\n 000000D4 5000 1000               00000000    530+         ST    0,0(0,1)           STORE EP ADDR IN SUPV PARMLIST        03-IHBINNRX\n 000000D8 9620 100A      0000000A             531+         OI    10(1),X'20'        TURN ON RETURN REQUESTED BIT          03-IHBINNRX\n 000000DC 41F0 0009               00000009    532+         LA    15,9            LOAD EXTENDED SVC ROUTING CODE @G381P2A  02-LOAD\n 000000E0 0A7A                                533+         SVC   122                ISSUE EXTENDED SVC          @G381P2A  02-LOAD\n 000000E2 12FF                                534+         LTR   15,15              RETURN CODE TEST                      02-LOAD\n 000000E4 4770 908E               00000102    535+         BNZ   NORRS0003        GO TO ERROR ROUTINE                @P1A 02-LOAD\n                                              536+*        load  ep=&LRRS\n 000000E8                                     539+         CNOP  0,4                                                 @L2P 02-LOAD\n 000000E8 4DF0 9080               000000F4    540+         BAS   15,LOAD2_0015      BRANCH AROUND CONSTANT(S)             02-LOAD\n 000000EC                                     541+LD2_0015    DS 0H                                                       02-LOAD\n 000000EC C4E2D5D9D3C94040                    542+LE2_0015    DC CL8'DSNRLI'        ENTRY POINT NAME                      02-LOAD\n 000000F4                                     543+LOAD2_0015    DS 0H                                                     02-LOAD\n 000000F4 4100 F000               00000000    544+         LA    0,LE2_0015-LD2_0015(,15)         ADDR OF PARAMETER       02-LOAD\n 000000F8 1B11                                545+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 000000FA 0A08                                546+         SVC   8                                                        02-LOAD\n 000000FC 1850                                547+         LR    R5,R0               get addr                             01-\n 000000FE A7F4 0013               00000124    548+         J     DOC0003                                                  01-\n 00000102                                     549+NORRS0003    DS 0H                                                      01-\n                                              550+*30/03/06 addr in r5\n                                              551+*        load  ep=&LNAME\n 00000102 0700                                554+         CNOP  0,4                                                 @L2P 02-LOAD\n 00000104 4DF0 909C               00000110    555+         BAS   15,LOAD2_0017      BRANCH AROUND CONSTANT(S)             02-LOAD\n 00000108                                     556+LD2_0017    DS 0H                                                       02-LOAD\n 00000108 C4E2D5C1D3C94040                    557+LE2_0017    DC CL8'DSNALI'        ENTRY POINT NAME                      02-LOAD\n 00000110                                     558+LOAD2_0017    DS 0H                                                     02-LOAD\n1         SQLASM SQL IBM interface module                                                                       Page   14\n   Active Usings: LEVEL,R7  DSNALI+X'74',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000110 4100 F000               00000000    559+         LA    0,LE2_0017-LD2_0017(,15)         ADDR OF PARAMETER       02-LOAD\n 00000114 1B11                                560+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 00000116 0A08                                561+         SVC   8                                                        02-LOAD\n 00000118 1850                                562+         LR    R5,R0               into r5                              01-\n 0000011A A7F4 0005               00000124    563+         J     DOC0003             jump to call                         01-\n 0000011E                                     564+OK0003    DS   0H                                                       01-\n 0000011E 58F0 D0B0               000000B0    565+          L   R15,TOKENDATA+0      get proper addr                      01-\n 00000122 185F                                566+          LR  R5,R15               save here                            01-\n 00000124                                     567+DOC0003    DS  0H                                                       01-\n 00000124 BF3F 2000               00000000    568+         ICM   R3,15,0(R2)         get fists parm                       01-\n 00000128 A784 0021               0000016A    569+         JZ    NOPARM0003          jump if no parm                      01-\n 0000012C D20F D0C4 3000 000000C4 00000000    570+         MVC   CALLCODE,0(R3)      save call code                       01-\n 00000132 D507 921C 3000 00000290 00000000    571+         CLC   =C'IDENTIFY',0(R3)  RRS IDENTIFY (i.e connect)           01-\n 00000138 A784 0007               00000146    572+         JE    CONN0003            connect request                      01-\n 0000013C D506 9234 3000 000002A8 00000000    573+         CLC   =C'CONNECT',0(R3)   CAF connect request                  01-\n 00000142 A774 0020               00000182    574+         JNE   GOON0003            if not CAF connect                   01-\n 00000146                                     575+CONN0003     DS 0H                                                      01-\n 00000146 4DE0 914A               000001BE    576+         BAS   R14,RETR0003        call to retrieve token               01-\n 0000014A 12FF                                577+         LTR   R15,R15             test code                            01-\n 0000014C A784 0017               0000017A    578+         JZ    ALREADY0003         jump if already                      01-\n                                              579+* start to connect\n 00000150 1812                                580+         LR    R1,R2               back pointer                         01-\n 00000152 18F5                                581+         LR    R15,R5              back module addr                     01-\n 00000154 0DEF                                582+         BASR  R14,R15             call it to connect                   01-\n 00000156 12FF                                583+         LTR   R15,R15             test rc                              01-\n 00000158 A774 002A               000001AC    584+         JNZ   RET0003             jump if not o.k.                     01-\n                                              585+* connection was o.k, so create token\n 0000015C 4DE0 91BA               0000022E    586+         BAS   R14,CREA0003        create token                         01-\n 00000160 12FF                                587+         LTR   R15,R15             check code                           01-\n 00000162 A774 0008               00000172    588+         JNZ   ERRTKN0003          name token error                     01-\n 00000166 A7F4 0023               000001AC    589+         J     RET0003                                                  01-\n 0000016A                                     590+NOPARM0003    DS 0H                                                     01-\n 0000016A 58F0 9228               0000029C    591+         L     R15,=F'-2'         parm error                            01-\n 0000016E A7F4 001F               000001AC    592+         J     RET0003            jump out                              01-\n 00000172                                     593+ERRTKN0003    DS 0H                                                     01-\n 00000172 58F0 922C               000002A0    594+         L     R15,=F'-3'         token error                           01-\n 00000176 A7F4 001B               000001AC    595+         J     RET0003            jump out                              01-\n 0000017A 58F0 9230               000002A4    596+ALREADY0003    L R15,=F'-1'       already connectedo                    01-\n 0000017E A7F4 0017               000001AC    597+         J     RET0003            jump out                              01-\n 00000182                                     598+GOON0003    DS 0H                                                       01-\n 00000182 1812                                599+         LR    R1,R2               back pointer                         01-\n 00000184 18F5                                600+         LR    R15,R5              back module addr                     01-\n 00000186 0DEF                                601+         BASR  R14,R15             call it                              01-\n 00000188 185F                                602+         LR    R5,R15              save rc                              01-\n 0000018A D508 923B D0C4 000002AF 000000C4    603+         CLC   =C'TERMINATE',CALLCODE terminate RRS                     01-\n 00000190 A784 0007               0000019E    604+         JE    DELDO0003           jump if it is                        01-\n 00000194 D506 9244 D0C4 000002B8 000000C4    605+         CLC   =C'DISCONN',CALLCODE terminate CAF                       01-\n 0000019A A774 0009               000001AC    606+         JNE   RET0003                                                  01-\n 0000019E                                     607+DELDO0003    DS 0H                                                      01-\n 0000019E 4DE0 9186               000001FA    608+         BAS   R14,DELTK0003       call to delete                       01-\n 000001A2 A7FE 0004               00000004    609+         CHI   R15,4               check code                           01-\n 000001A6 A724 0066               00000272    610+         JH    ERRT0003            name/token error                     01-\n 000001AA 18F5                                611+         LR    R15,R5              back                                 01-\n 000001AC                                     612+RET0003    DS  0H                                                       01-\n                                              613+*        edcepil\n1         SQLASM SQL IBM interface module                                                                       Page   15\n   Active Usings: LEVEL,R7  DSNALI+X'74',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000001AC 58D0 D004               00000004    615+         L     13,4(,13)          address of caller's save area         02-EDCEPIL\n 000001B0 58E0 D00C               0000000C    616+         L     14,12(,13)         restore R14                           02-EDCEPIL\n 000001B4 982C D01C               0000001C    617+         LM    2,12,28(13)        restore R2 - R12                      02-EDCEPIL\n 000001B8 051E                                618+         BALR  1,14               return                                02-EDCEPIL\n 000001BA 00000000                            619+         DC    AL4(DSNALIE)                                             02-EDCEPIL\n 000001BE B240 00E0                           620+RETR0003    BAKR R14,0                                                  01-\n 000001C2 58F0 0010               00000010    621+         L     R15,X'10'           CVT                                  01-\n ** ASMA309W Operand X'10' resolved to a displacement with no base register\n ** ASMA435I Record 115 in ESA.PRJ.CBTDSSN.ASM(SSQLASM) on volume: USER01\n 000001C6 58F0 F220               00000220    622+         L     R15,X'220'(,R15)    CSR table address                    01-\n 000001CA 58F0 F014               00000014    623+         L     R15,X'14'(,R15)     offset                               01-\n 000001CE 58F0 F008               00000008    624+         L     R15,X'08'(,R15)     IEANTRNT                             01-\n                                              625+*        CALL  (15),(CONN_LEVEL,CONN_TOKENNAME,TOKENDATA,RETCODE),     X\n                                                 +               MF=(E,CALLLIST)\n 000001D2                                     628+         DS    0H                                                       02-CALL\n 000001D2 4110 D090               00000090    633+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBINNRR\n 000001D6 4100 7018               000007D4    634+         LA    0,CONN_LEVEL       PICKUP  PARAMETER                     03-IHBOPLTX\n 000001DA 5000 1000               00000000    635+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 000001DE 4100 701C               000007D8    636+         LA    0,CONN_TOKENNAME   PICKUP  PARAMETER                     03-IHBOPLTX\n 000001E2 5000 1004               00000004    637+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 000001E6 4100 D0B0               000000B0    638+         LA    0,TOKENDATA        PICKUP  PARAMETER                     03-IHBOPLTX\n 000001EA 5000 1008               00000008    639+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 000001EE 4100 D0C0               000000C0    640+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOPLTX\n 000001F2 5000 100C               0000000C    641+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 000001F6 05EF                                642+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 000001F8 0101                                643+         PR    ,                                                        01-\n 000001FA B240 00E0                           644+DELTK0003    BAKR R14,0                                                 01-\n 000001FE 58F0 0010               00000010    645+         L     R15,X'10'           CVT                                  01-\n ** ASMA309W Operand X'10' resolved to a displacement with no base register\n ** ASMA435I Record 125 in ESA.PRJ.CBTDSSN.ASM(SSQLASM) on volume: USER01\n 00000202 58F0 F220               00000220    646+         L     R15,X'220'(,R15)     CSR table address                   01-\n 00000206 58F0 F014               00000014    647+         L     R15,X'14'(,R15)       offset                             01-\n 0000020A 58F0 F00C               0000000C    648+         L     R15,X'0C'(,R15)       IEANTDL delete token               01-\n                                              649+*        CALL  (15),(conn_LEVEL,conn_tokenname,RETCODE),MF=(E,CALLLIST)\n 0000020E                                     652+         DS    0H                                                       02-CALL\n 0000020E 4110 D090               00000090    657+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBINNRR\n 00000212 4100 7018               000007D4    658+         LA    0,CONN_LEVEL       PICKUP  PARAMETER                     03-IHBOPLTX\n 00000216 5000 1000               00000000    659+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000021A 4100 701C               000007D8    660+         LA    0,CONN_TOKENNAME   PICKUP  PARAMETER                     03-IHBOPLTX\n 0000021E 5000 1004               00000004    661+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000222 4100 D0C0               000000C0    662+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOPLTX\n 00000226 5000 1008               00000008    663+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000022A 05EF                                664+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 0000022C 0101                                665+         PR    ,                                                        01-\n 0000022E B240 00E0                           666+CREA0003    BAKR R14,0             in stack                             01-\n 00000232 58F0 0010               00000010    667+         L     R15,X'10'           CVT                                  01-\n ** ASMA309W Operand X'10' resolved to a displacement with no base register\n ** ASMA435I Record 133 in ESA.PRJ.CBTDSSN.ASM(SSQLASM) on volume: USER01\n 00000236 58F0 F220               00000220    668+         L     R15,X'220'(,R15)    CSR table address                    01-\n 0000023A 58F0 F014               00000014    669+         L     R15,X'14'(,R15)     offset                               01-\n 0000023E 58F0 F004               00000004    670+         L     R15,X'04'(,R15)     IEANTCR                              01-\n                                              671+*        CALL  (15),(conn_level,conn_tokenname,tokendata,              X\n                                                 +               NOPERSIST,RETCODE),MF=(E,CALLLIST)\n 00000242                                     674+         DS    0H                                                       02-CALL\n 00000242 4110 D090               00000090    679+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBINNRR\n1         SQLASM SQL IBM interface module                                                                       Page   16\n   Active Usings: LEVEL,R7  DSNALI+X'74',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000246 4100 7018               000007D4    680+         LA    0,CONN_LEVEL       PICKUP  PARAMETER                     03-IHBOPLTX\n 0000024A 5000 1000               00000000    681+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000024E 4100 701C               000007D8    682+         LA    0,CONN_TOKENNAME   PICKUP  PARAMETER                     03-IHBOPLTX\n 00000252 5000 1004               00000004    683+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000256 4100 D0B0               000000B0    684+         LA    0,TOKENDATA        PICKUP  PARAMETER                     03-IHBOPLTX\n 0000025A 5000 1008               00000008    685+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000025E 4100 7004               000007C0    686+         LA    0,NOPERSIST        PICKUP  PARAMETER                     03-IHBOPLTX\n 00000262 5000 100C               0000000C    687+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000266 4100 D0C0               000000C0    688+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOPLTX\n 0000026A 5000 1010               00000010    689+         ST    0,16(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000026E 05EF                                690+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 00000270 0101                                691+         PR    ,                                                        01-\n 00000272 185F                                692+ERRT0003    LR R5,R15              get code                             01-\n                                              693+*        ABEND (R5),DUMP,,SYSTEM,REASON=(R3)\n 00000274                                     696+         DS    0H                                                       02-ABEND\n 00000274 1815                                699+         LR    1,R5                              LOAD PARAMETER REG 1   03-IHBINNRR\n 00000276 8910 0014               00000014    700+         SLL   1,20(0)            SHIFT OFF HIGH ORDER 20 BITS @G860P1F 02-ABEND\n 0000027A 8810 0008               00000008    701+         SRL   1,8(0)             CODE IN SYSTEM POSITION               02-ABEND\n 0000027E 18F3                                702+         LR    15,R3              LOAD REG15 WITH REASON CODE  @G860P1F 02-ABEND\n 00000280 4100 0084               00000084    703+         LA    0,132(0,0)         DUMP/STEP/DUMPOPTS/REASON    @G860P1F 02-ABEND\n 00000284 8900 0018               00000018    704+         SLL   0,24(0)            SHIFT TO HIGH ORDER                   02-ABEND\n 00000288 1610                                705+         OR    1,0                OR IN WITH COMPCODE                   02-ABEND\n 0000028A 0A0D                                706+         SVC   13                 LINK TO ABEND ROUTINE                 02-ABEND\n 00000290                                     707+         LTORG                                                          01-\n 00000290 C9C4C5D5E3C9C6E8                    708                =C'IDENTIFY'\n 00000298 000007BC                            709                =A(LEVEL)\n 0000029C FFFFFFFE                            710                =F'-2'\n 000002A0 FFFFFFFD                            711                =F'-3'\n 000002A4 FFFFFFFF                            712                =F'-1'\n 000002A8 C3D6D5D5C5C3E3                      713                =C'CONNECT'\n 000002AF E3C5D9D4C9D5C1E3                    714                =C'TERMINATE'\n 000002B8 C4C9E2C3D6D5D5                      715                =C'DISCONN'\n                                              716 DSNHLI   STUB  INDEX=4,LOAD=DSNHLI2 stub DSNHLI2\n 000002C0                000002C0 00000144    717+DSNHLI   CSECT                                                          01-\n                                              718+DSNHLI   AMODE 31                                                       01-\n                                              719+DSNHLI   RMODE ANY                                                      01-\n                                              720+*label.E edcprlg basereg=r9,dsalen=dsalen\n                                              722+***--------------------------------------------------------------------\n 00000000                00000000 000000E0    723+IHB0043DS DSECT                                                         02-EDCPRLG\n 00000000                                     724+         DS    D                                                        02-EDCPRLG\n 00000008                                     725+         DS    CL(120+0)                                                02-EDCPRLG\n 00000080                00000080 00000000    726+         ORG   IHB0043DS                                                02-EDCPRLG\n 00000000                                     727+         DS    CL(DSALEN+8)                                             02-EDCPRLG\n 000000DC                000000DC 000000DC    728+         ORG                                                            02-EDCPRLG\n 000000E0                                     729+         DS    0D                                                       02-EDCPRLG\n                         000000D8             730+IHB0043LG EQU   *-IHB0043DS-8                                           02-EDCPRLG\n 000002C0                000002C0 00000144    731+DSNHLI   CSECT                                                          02-EDCPRLG\n                                              732+*--------------------------------------------------------------\n 000002C0                                     733+         DS    0H                                                       02-EDCPRLG\n                     R:F 000002C0             734+         USING *,15                                                     02-EDCPRLG\n 000002C0 47F0 F044               00000304    735+DSNHLIE  B     IHB0043B       branch around prologue's constant areas   02-EDCPRLG\n                                              736+* PPA1 constant area\n 000002C4 14                                  737+         DC    AL1(IHB0043N+4-*)   offset to the name                   02-EDCPRLG\n 000002C5 CE                                  738+         DC    X'CE' .             CEE signature                        02-EDCPRLG\n 000002C6 A0                                  739+         DC    X'A0' .             CEE flags (ext proc, has DSA)        02-EDCPRLG\n1         SQLASM SQL IBM interface module                                                                       Page   17\n   Active Usings: LEVEL,R7  DSNALI+X'74',R9  DSA,R13  DSNHLI,R15\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000002C7 10                                  740+         DC    AL1(0+0+16)      .  member flags                         02-EDCPRLG\n 000002C8 000002E0                            741+         DC    AL4(IHB0043P) .       A(PPA2)                            02-EDCPRLG\n 000002CC 00000000                            742+         DC    AL4(0) .              A(PPA3) or zero                    02-EDCPRLG\n 000002D0 000000D8                            743+         DC    AL4(IHB0043LG)        total DSA length                   02-EDCPRLG\n 000002D4 0007                                744+IHB0043N DC    AL2(7)      .       length of name                       02-EDCPRLG\n 000002D6 C4E2D5C8D3C9C5                      745+         DC    C'DSNHLIE'          untruncated name                     02-EDCPRLG\n                                              746+*--------------------------------------------------------------\n                                              747+* PPA2 constant area\n 000002E0                                     748+IHB0043P DS    0F                  force fwrd alignment                 02-EDCPRLG\n 000002E0 03                                  749+         DC    X'03' .             member identifier (C)                02-EDCPRLG\n 000002E1 00                                  750+         DC    X'00' .             member subid                         02-EDCPRLG\n 000002E2 33                                  751+         DC    X'33'     .         plistfmt/runenv (nibbles)            02-EDCPRLG\n 000002E3 00                                  752+         DC    X'00' .             CEE control block level              02-EDCPRLG\n 000002E4 00000000                            753+         DC    AL4(CEESTART)                                            02-EDCPRLG\n 000002E8 00000000                            754+         DC    AL4(0)                A(PPA4) or zero                    02-EDCPRLG\n 000002EC 000002F0                            755+         DC    AL4(IHB0043T) .       A(time stamp) or zero              02-EDCPRLG\n                                              756+*\n                                              757+* Time stamp area\n 000002F0                                     758+IHB0043T DS    0F                                                       02-EDCPRLG\n 000002F0 F2F0F1F2                            759+         DC    CL4'2012'  .        yyyy                            @P1A 02-EDCPRLG\n 000002F4 F1F1F3F0                            760+         DC    CL4'1130'   .       mmdd                                 02-EDCPRLG\n 000002F8 F0F8F2F3F0F0                        761+         DC    CL6'082300'     .   hhmmss                               02-EDCPRLG\n 000002FE F0F1                                762+         DC    CL2'01' .           version                              02-EDCPRLG\n 00000300 F0F1F0F0                            763+         DC    CL4'0100' .         release / modif level                02-EDCPRLG\n                                              764+*\n 00000304                                     765+IHB0043B DS    0H                                                       02-EDCPRLG\n                                              766+***--------------------------------------------------------------------\n 00000304 90EC D00C               0000000C    767+         STM   14,12,12(13) .      save Caller's registers              02-EDCPRLG\n                                              768+***--------------------------------------------------------------------\n 00000308 5820 D04C               0000004C    769+         L     2,76(,13)           get current NAB                      02-EDCPRLG\n 0000030C 5800 F010               00000010    770+         L     0,16(,15)           size of DSA                          02-EDCPRLG\n 00000310 1E02                                771+         ALR   0,2                 old NAB + DSA size = new NAB         02-EDCPRLG\n 00000312 5500 C00C               0000000C    772+         CL    0,12(,12)           check for stack overflow             02-EDCPRLG\n 00000316 47D0 F060               00000320    773+         BNH   *+10                branch if enough space               02-EDCPRLG\n 0000031A 58F0 C074               00000074    774+         L     15,116(,12)         load overflow rtn entry address      02-EDCPRLG\n 0000031E 05EF                                775+         BALR  14,15               invoke overflow routine              02-EDCPRLG\n                                              776+* at this point R0 has the new NAB, R2 has the newly acquired address\n 00000320 58F0 D048               00000048    777+         L     15,72(,13)                                               02-EDCPRLG\n 00000324 90F0 2048               00000048    778+         STM   15,0,72(2)                                               02-EDCPRLG\n 00000328 9210 2000      00000000             779+         MVI   0(2),X'10'                                               02-EDCPRLG\n 0000032C 50D0 2004               00000004    780+         ST    13,4(,2)            back chain DSA                       02-EDCPRLG\n 00000330 18D2                                781+         LR    13,2                activate this DSA                    02-EDCPRLG\n                                              782+***--------------------------------------------------------------------\n                                              783+         DROP  15                                                       02-EDCPRLG\n 00000332 0590                                784+         BALR  R9,0                                                     02-EDCPRLG\n                     R:9 00000334             785+         USING *,R9                                                     02-EDCPRLG\n                                              786+***--------------------------------------------------------------------\n 00000334 5870 90CC               00000400    787+         L     R7,=A(LEVEL)       get const darr                        01-\n                     R:7 000007BC             788+         USING LEVEL,R7           base on const                         01-\n 00000338 1821                                789+         LR    R2,R1              save pointer                          01-\n 0000033A 58F0 0010               00000010    790+         L     R15,X'10'           CVT                                  01-\n ** ASMA309W Operand X'10' resolved to a displacement with no base register\n ** ASMA435I Record 35 in ESA.PRJ.CBTDSSN.ASM(SSQLASM) on volume: USER01\n 0000033E 58F0 F220               00000220    791+         L     R15,X'220'(,R15)     CSR table address                   01-\n 00000342 58F0 F014               00000014    792+         L     R15,X'14'(,R15)      offset                              01-\n1         SQLASM SQL IBM interface module                                                                       Page   18\n   Active Usings: LEVEL,R7  DSNHLI+X'74',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000346 58F0 F008               00000008    793+         L     R15,X'08'(,R15)      IEANTRNT                            01-\n                                              794+*        CALL  (15),(LEVEL,tokenname,TOKENDATA,RETCODE),               X\n                                                 +               MF=(E,CALLLIST)\n 0000034A                                     797+         DS    0H                                                       02-CALL\n 0000034A 4110 D090               00000090    802+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBINNRR\n 0000034E 4100 7000               000007BC    803+         LA    0,LEVEL            PICKUP  PARAMETER                     03-IHBOPLTX\n 00000352 5000 1000               00000000    804+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000356 4100 7008               000007C4    805+         LA    0,TOKENNAME        PICKUP  PARAMETER                     03-IHBOPLTX\n 0000035A 5000 1004               00000004    806+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000035E 4100 D0B0               000000B0    807+         LA    0,TOKENDATA        PICKUP  PARAMETER                     03-IHBOPLTX\n 00000362 5000 1008               00000008    808+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000366 4100 D0C0               000000C0    809+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOPLTX\n 0000036A 5000 100C               0000000C    810+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000036E 05EF                                811+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 00000370 A7FE 0004               00000004    812+         CHI   R15,4               check code                           01-\n 00000374 A744 0035               000003DE    813+         JL    OK0042              if retrieve ok                       01-\n 00000378 D70F D080 D080 00000080 00000080    814+         XC    LOADLIST(LOADLISTL),LOADLIST clear list                  01-\n                                              815+*        load  ep=userrs,erret=norrs&sysndx,sf=(e,loadlist)\n 0000037E 0700                                820+         CNOP  0,4                                            @ZA64577  03-IHBINNRX\n 00000380 4110 D080               00000080    821+         LA    1,LOADLIST         LOAD SUPV PARM LIST ADDR    @G381P2A  03-IHBINNRX\n 00000384 4100 9058               0000038C    822+         LA    0,*+8              LOAD EP ADDR IN REG 0       @G381P2A  03-IHBINNRX\n 00000388 47F0 9060               00000394    823+         B     *+12               BRANCH AROUND EP            @G381P2A  03-IHBINNRX\n 0000038C E4E2C5D9D9E24040                    824+         DC    CL8'USERRS'        EP SYMBOL                   @G381P2A  03-IHBINNRX\n 00000394 5000 1000               00000000    825+         ST    0,0(0,1)           STORE EP ADDR IN SUPV PARMLIST        03-IHBINNRX\n 00000398 9620 100A      0000000A             826+         OI    10(1),X'20'        TURN ON RETURN REQUESTED BIT          03-IHBINNRX\n 0000039C 41F0 0009               00000009    827+         LA    15,9            LOAD EXTENDED SVC ROUTING CODE @G381P2A  02-LOAD\n 000003A0 0A7A                                828+         SVC   122                ISSUE EXTENDED SVC          @G381P2A  02-LOAD\n 000003A2 12FF                                829+         LTR   15,15              RETURN CODE TEST                      02-LOAD\n 000003A4 4770 908E               000003C2    830+         BNZ   NORRS0042        GO TO ERROR ROUTINE                @P1A 02-LOAD\n                                              831+*        load  ep=&LRRS\n 000003A8                                     834+         CNOP  0,4                                                 @L2P 02-LOAD\n 000003A8 4DF0 9080               000003B4    835+         BAS   15,LOAD2_0054      BRANCH AROUND CONSTANT(S)             02-LOAD\n 000003AC                                     836+LD2_0054    DS 0H                                                       02-LOAD\n 000003AC C4E2D5C8D3C9D940                    837+LE2_0054    DC CL8'DSNHLIR'       ENTRY POINT NAME                      02-LOAD\n 000003B4                                     838+LOAD2_0054    DS 0H                                                     02-LOAD\n 000003B4 4100 F000               00000000    839+         LA    0,LE2_0054-LD2_0054(,15)         ADDR OF PARAMETER       02-LOAD\n 000003B8 1B11                                840+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 000003BA 0A08                                841+         SVC   8                                                        02-LOAD\n 000003BC 1850                                842+         LR    R5,R0               get addr                             01-\n 000003BE A7F4 0013               000003E4    843+         J     DOC0042                                                  01-\n 000003C2                                     844+NORRS0042    DS 0H                                                      01-\n                                              845+*30/03/06 addr in r5\n                                              846+*        load  ep=&LNAME\n 000003C2 0700                                849+         CNOP  0,4                                                 @L2P 02-LOAD\n 000003C4 4DF0 909C               000003D0    850+         BAS   15,LOAD2_0056      BRANCH AROUND CONSTANT(S)             02-LOAD\n 000003C8                                     851+LD2_0056    DS 0H                                                       02-LOAD\n 000003C8 C4E2D5C8D3C9F240                    852+LE2_0056    DC CL8'DSNHLI2'       ENTRY POINT NAME                      02-LOAD\n 000003D0                                     853+LOAD2_0056    DS 0H                                                     02-LOAD\n 000003D0 4100 F000               00000000    854+         LA    0,LE2_0056-LD2_0056(,15)         ADDR OF PARAMETER       02-LOAD\n 000003D4 1B11                                855+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 000003D6 0A08                                856+         SVC   8                                                        02-LOAD\n 000003D8 1850                                857+         LR    R5,R0               into r5                              01-\n 000003DA A7F4 0005               000003E4    858+         J     DOC0042             jump to call                         01-\n 000003DE                                     859+OK0042    DS   0H                                                       01-\n 000003DE 58F0 D0B4               000000B4    860+          L   R15,TOKENDATA+4      get proper addr                      01-\n1         SQLASM SQL IBM interface module                                                                       Page   19\n   Active Usings: LEVEL,R7  DSNHLI+X'74',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000003E2 185F                                861+          LR  R5,R15               save here                            01-\n 000003E4                                     862+DOC0042    DS  0H                                                       01-\n 000003E4                                     863+GOON0042    DS 0H                                                       01-\n 000003E4 1812                                864+         LR    R1,R2               back pointer                         01-\n 000003E6 18F5                                865+         LR    R15,R5              back module addr                     01-\n 000003E8 0DEF                                866+         BASR  R14,R15             call it                              01-\n 000003EA                                     867+RET0042    DS  0H                                                       01-\n                                              868+*        edcepil\n 000003EA 58D0 D004               00000004    870+         L     13,4(,13)          address of caller's save area         02-EDCEPIL\n 000003EE 58E0 D00C               0000000C    871+         L     14,12(,13)         restore R14                           02-EDCEPIL\n 000003F2 982C D01C               0000001C    872+         LM    2,12,28(13)        restore R2 - R12                      02-EDCEPIL\n 000003F6 051E                                873+         BALR  1,14               return                                02-EDCEPIL\n 000003F8 000002C0                            874+         DC    AL4(DSNHLIE)                                             02-EDCEPIL\n 00000400                                     875+         LTORG                                                          01-\n 00000400 000007BC                            876                =A(LEVEL)\n                                              877 DSNTIAR  STUB  INDEX=8            stub dsntiar\n 00000408                00000408 00000144    878+DSNTIAR  CSECT                                                          01-\n                                              879+DSNTIAR  AMODE 31                                                       01-\n                                              880+DSNTIAR  RMODE ANY                                                      01-\n                                              881+*label.E edcprlg basereg=r9,dsalen=dsalen\n                                              883+***--------------------------------------------------------------------\n 00000000                00000000 000000E0    884+IHB0060DS DSECT                                                         02-EDCPRLG\n 00000000                                     885+         DS    D                                                        02-EDCPRLG\n 00000008                                     886+         DS    CL(120+0)                                                02-EDCPRLG\n 00000080                00000080 00000000    887+         ORG   IHB0060DS                                                02-EDCPRLG\n 00000000                                     888+         DS    CL(DSALEN+8)                                             02-EDCPRLG\n 000000DC                000000DC 000000DC    889+         ORG                                                            02-EDCPRLG\n 000000E0                                     890+         DS    0D                                                       02-EDCPRLG\n                         000000D8             891+IHB0060LG EQU   *-IHB0060DS-8                                           02-EDCPRLG\n 00000408                00000408 00000144    892+DSNTIAR  CSECT                                                          02-EDCPRLG\n                                              893+*--------------------------------------------------------------\n 00000408                                     894+         DS    0H                                                       02-EDCPRLG\n                     R:F 00000408             895+         USING *,15                                                     02-EDCPRLG\n 00000408 47F0 F044               0000044C    896+DSNTIARE B     IHB0060B       branch around prologue's constant areas   02-EDCPRLG\n                                              897+* PPA1 constant area\n 0000040C 14                                  898+         DC    AL1(IHB0060N+4-*)   offset to the name                   02-EDCPRLG\n 0000040D CE                                  899+         DC    X'CE' .             CEE signature                        02-EDCPRLG\n 0000040E A0                                  900+         DC    X'A0' .             CEE flags (ext proc, has DSA)        02-EDCPRLG\n 0000040F 10                                  901+         DC    AL1(0+0+16)      .  member flags                         02-EDCPRLG\n 00000410 00000428                            902+         DC    AL4(IHB0060P) .       A(PPA2)                            02-EDCPRLG\n 00000414 00000000                            903+         DC    AL4(0) .              A(PPA3) or zero                    02-EDCPRLG\n 00000418 000000D8                            904+         DC    AL4(IHB0060LG)        total DSA length                   02-EDCPRLG\n 0000041C 0008                                905+IHB0060N DC    AL2(8)      .       length of name                       02-EDCPRLG\n 0000041E C4E2D5E3C9C1D9C5                    906+         DC    C'DSNTIARE'         untruncated name                     02-EDCPRLG\n                                              907+*--------------------------------------------------------------\n                                              908+* PPA2 constant area\n 00000428                                     909+IHB0060P DS    0F                  force fwrd alignment                 02-EDCPRLG\n 00000428 03                                  910+         DC    X'03' .             member identifier (C)                02-EDCPRLG\n 00000429 00                                  911+         DC    X'00' .             member subid                         02-EDCPRLG\n 0000042A 33                                  912+         DC    X'33'     .         plistfmt/runenv (nibbles)            02-EDCPRLG\n 0000042B 00                                  913+         DC    X'00' .             CEE control block level              02-EDCPRLG\n 0000042C 00000000                            914+         DC    AL4(CEESTART)                                            02-EDCPRLG\n 00000430 00000000                            915+         DC    AL4(0)                A(PPA4) or zero                    02-EDCPRLG\n 00000434 00000438                            916+         DC    AL4(IHB0060T) .       A(time stamp) or zero              02-EDCPRLG\n                                              917+*\n1         SQLASM SQL IBM interface module                                                                       Page   20\n   Active Usings: LEVEL,R7  DSNHLI+X'74',R9  DSA,R13  DSNTIAR,R15\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                             918+* Time stamp area\n 00000438                                     919+IHB0060T DS    0F                                                       02-EDCPRLG\n 00000438 F2F0F1F2                            920+         DC    CL4'2012'  .        yyyy                            @P1A 02-EDCPRLG\n 0000043C F1F1F3F0                            921+         DC    CL4'1130'   .       mmdd                                 02-EDCPRLG\n 00000440 F0F8F2F3F0F0                        922+         DC    CL6'082300'     .   hhmmss                               02-EDCPRLG\n 00000446 F0F1                                923+         DC    CL2'01' .           version                              02-EDCPRLG\n 00000448 F0F1F0F0                            924+         DC    CL4'0100' .         release / modif level                02-EDCPRLG\n                                              925+*\n 0000044C                                     926+IHB0060B DS    0H                                                       02-EDCPRLG\n                                              927+***--------------------------------------------------------------------\n 0000044C 90EC D00C               0000000C    928+         STM   14,12,12(13) .      save Caller's registers              02-EDCPRLG\n                                              929+***--------------------------------------------------------------------\n 00000450 5820 D04C               0000004C    930+         L     2,76(,13)           get current NAB                      02-EDCPRLG\n 00000454 5800 F010               00000010    931+         L     0,16(,15)           size of DSA                          02-EDCPRLG\n 00000458 1E02                                932+         ALR   0,2                 old NAB + DSA size = new NAB         02-EDCPRLG\n 0000045A 5500 C00C               0000000C    933+         CL    0,12(,12)           check for stack overflow             02-EDCPRLG\n 0000045E 47D0 F060               00000468    934+         BNH   *+10                branch if enough space               02-EDCPRLG\n 00000462 58F0 C074               00000074    935+         L     15,116(,12)         load overflow rtn entry address      02-EDCPRLG\n 00000466 05EF                                936+         BALR  14,15               invoke overflow routine              02-EDCPRLG\n                                              937+* at this point R0 has the new NAB, R2 has the newly acquired address\n 00000468 58F0 D048               00000048    938+         L     15,72(,13)                                               02-EDCPRLG\n 0000046C 90F0 2048               00000048    939+         STM   15,0,72(2)                                               02-EDCPRLG\n 00000470 9210 2000      00000000             940+         MVI   0(2),X'10'                                               02-EDCPRLG\n 00000474 50D0 2004               00000004    941+         ST    13,4(,2)            back chain DSA                       02-EDCPRLG\n 00000478 18D2                                942+         LR    13,2                activate this DSA                    02-EDCPRLG\n                                              943+***--------------------------------------------------------------------\n                                              944+         DROP  15                                                       02-EDCPRLG\n 0000047A 0590                                945+         BALR  R9,0                                                     02-EDCPRLG\n                     R:9 0000047C             946+         USING *,R9                                                     02-EDCPRLG\n                                              947+***--------------------------------------------------------------------\n 0000047C 5870 90CC               00000548    948+         L     R7,=A(LEVEL)       get const darr                        01-\n                     R:7 000007BC             949+         USING LEVEL,R7           base on const                         01-\n 00000480 1821                                950+         LR    R2,R1              save pointer                          01-\n 00000482 58F0 0010               00000010    951+         L     R15,X'10'           CVT                                  01-\n ** ASMA309W Operand X'10' resolved to a displacement with no base register\n ** ASMA435I Record 35 in ESA.PRJ.CBTDSSN.ASM(SSQLASM) on volume: USER01\n 00000486 58F0 F220               00000220    952+         L     R15,X'220'(,R15)     CSR table address                   01-\n 0000048A 58F0 F014               00000014    953+         L     R15,X'14'(,R15)      offset                              01-\n 0000048E 58F0 F008               00000008    954+         L     R15,X'08'(,R15)      IEANTRNT                            01-\n                                              955+*        CALL  (15),(LEVEL,tokenname,TOKENDATA,RETCODE),               X\n                                                 +               MF=(E,CALLLIST)\n 00000492                                     958+         DS    0H                                                       02-CALL\n 00000492 4110 D090               00000090    963+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBINNRR\n 00000496 4100 7000               000007BC    964+         LA    0,LEVEL            PICKUP  PARAMETER                     03-IHBOPLTX\n 0000049A 5000 1000               00000000    965+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000049E 4100 7008               000007C4    966+         LA    0,TOKENNAME        PICKUP  PARAMETER                     03-IHBOPLTX\n 000004A2 5000 1004               00000004    967+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 000004A6 4100 D0B0               000000B0    968+         LA    0,TOKENDATA        PICKUP  PARAMETER                     03-IHBOPLTX\n 000004AA 5000 1008               00000008    969+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 000004AE 4100 D0C0               000000C0    970+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOPLTX\n 000004B2 5000 100C               0000000C    971+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 000004B6 05EF                                972+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 000004B8 A7FE 0004               00000004    973+         CHI   R15,4               check code                           01-\n 000004BC A744 0035               00000526    974+         JL    OK0059              if retrieve ok                       01-\n 000004C0 D70F D080 D080 00000080 00000080    975+         XC    LOADLIST(LOADLISTL),LOADLIST clear list                  01-\n1         SQLASM SQL IBM interface module                                                                       Page   21\n   Active Usings: LEVEL,R7  DSNTIAR+X'74',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                             976+*        load  ep=userrs,erret=norrs&sysndx,sf=(e,loadlist)\n 000004C6 0700                                981+         CNOP  0,4                                            @ZA64577  03-IHBINNRX\n 000004C8 4110 D080               00000080    982+         LA    1,LOADLIST         LOAD SUPV PARM LIST ADDR    @G381P2A  03-IHBINNRX\n 000004CC 4100 9058               000004D4    983+         LA    0,*+8              LOAD EP ADDR IN REG 0       @G381P2A  03-IHBINNRX\n 000004D0 47F0 9060               000004DC    984+         B     *+12               BRANCH AROUND EP            @G381P2A  03-IHBINNRX\n 000004D4 E4E2C5D9D9E24040                    985+         DC    CL8'USERRS'        EP SYMBOL                   @G381P2A  03-IHBINNRX\n 000004DC 5000 1000               00000000    986+         ST    0,0(0,1)           STORE EP ADDR IN SUPV PARMLIST        03-IHBINNRX\n 000004E0 9620 100A      0000000A             987+         OI    10(1),X'20'        TURN ON RETURN REQUESTED BIT          03-IHBINNRX\n 000004E4 41F0 0009               00000009    988+         LA    15,9            LOAD EXTENDED SVC ROUTING CODE @G381P2A  02-LOAD\n 000004E8 0A7A                                989+         SVC   122                ISSUE EXTENDED SVC          @G381P2A  02-LOAD\n 000004EA 12FF                                990+         LTR   15,15              RETURN CODE TEST                      02-LOAD\n 000004EC 4770 908E               0000050A    991+         BNZ   NORRS0059        GO TO ERROR ROUTINE                @P1A 02-LOAD\n                                              992+*        load  ep=&LRRS\n 000004F0                                     995+         CNOP  0,4                                                 @L2P 02-LOAD\n 000004F0 4DF0 9080               000004FC    996+         BAS   15,LOAD2_0071      BRANCH AROUND CONSTANT(S)             02-LOAD\n 000004F4                                     997+LD2_0071    DS 0H                                                       02-LOAD\n 000004F4 C4E2D5E3C9C1D940                    998+LE2_0071    DC CL8'DSNTIAR'       ENTRY POINT NAME                      02-LOAD\n 000004FC                                     999+LOAD2_0071    DS 0H                                                     02-LOAD\n 000004FC 4100 F000               00000000   1000+         LA    0,LE2_0071-LD2_0071(,15)         ADDR OF PARAMETER       02-LOAD\n 00000500 1B11                               1001+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 00000502 0A08                               1002+         SVC   8                                                        02-LOAD\n 00000504 1850                               1003+         LR    R5,R0               get addr                             01-\n 00000506 A7F4 0013               0000052C   1004+         J     DOC0059                                                  01-\n 0000050A                                    1005+NORRS0059    DS 0H                                                      01-\n                                             1006+*30/03/06 addr in r5\n                                             1007+*        load  ep=&LNAME\n 0000050A 0700                               1010+         CNOP  0,4                                                 @L2P 02-LOAD\n 0000050C 4DF0 909C               00000518   1011+         BAS   15,LOAD2_0073      BRANCH AROUND CONSTANT(S)             02-LOAD\n 00000510                                    1012+LD2_0073    DS 0H                                                       02-LOAD\n 00000510 C4E2D5E3C9C1D940                   1013+LE2_0073    DC CL8'DSNTIAR'       ENTRY POINT NAME                      02-LOAD\n 00000518                                    1014+LOAD2_0073    DS 0H                                                     02-LOAD\n 00000518 4100 F000               00000000   1015+         LA    0,LE2_0073-LD2_0073(,15)         ADDR OF PARAMETER       02-LOAD\n 0000051C 1B11                               1016+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 0000051E 0A08                               1017+         SVC   8                                                        02-LOAD\n 00000520 1850                               1018+         LR    R5,R0               into r5                              01-\n 00000522 A7F4 0005               0000052C   1019+         J     DOC0059             jump to call                         01-\n 00000526                                    1020+OK0059    DS   0H                                                       01-\n 00000526 58F0 D0B8               000000B8   1021+          L   R15,TOKENDATA+8      get proper addr                      01-\n 0000052A 185F                               1022+          LR  R5,R15               save here                            01-\n 0000052C                                    1023+DOC0059    DS  0H                                                       01-\n 0000052C                                    1024+GOON0059    DS 0H                                                       01-\n 0000052C 1812                               1025+         LR    R1,R2               back pointer                         01-\n 0000052E 18F5                               1026+         LR    R15,R5              back module addr                     01-\n 00000530 0DEF                               1027+         BASR  R14,R15             call it                              01-\n 00000532                                    1028+RET0059    DS  0H                                                       01-\n                                             1029+*        edcepil\n 00000532 58D0 D004               00000004   1031+         L     13,4(,13)          address of caller's save area         02-EDCEPIL\n 00000536 58E0 D00C               0000000C   1032+         L     14,12(,13)         restore R14                           02-EDCEPIL\n 0000053A 982C D01C               0000001C   1033+         LM    2,12,28(13)        restore R2 - R12                      02-EDCEPIL\n 0000053E 051E                               1034+         BALR  1,14               return                                02-EDCEPIL\n 00000540 00000408                           1035+         DC    AL4(DSNTIARE)                                            02-EDCEPIL\n 00000548                                    1036+         LTORG                                                          01-\n 00000548 000007BC                           1037                =A(LEVEL)\n 00000550                00000550 000002C8   1038 SQLASM   CSECT\n                                             1039 SQLASM   AMODE 31\n1         SQLASM SQL IBM interface module                                                                       Page   22\n   Active Usings: LEVEL,R7  DSNTIAR+X'74',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            1040 SQLASM   RMODE ANY\n                                             1041          RSQL\n                                             1042+*        EDCPRLG BASEREG=R9,DSALEN=DSALEN\n                                             1044+***--------------------------------------------------------------------\n 00000000                00000000 000000E0   1045+IHB0077DS DSECT                                                         02-EDCPRLG\n 00000000                                    1046+         DS    D                                                        02-EDCPRLG\n 00000008                                    1047+         DS    CL(120+0)                                                02-EDCPRLG\n 00000080                00000080 00000000   1048+         ORG   IHB0077DS                                                02-EDCPRLG\n 00000000                                    1049+         DS    CL(DSALEN+8)                                             02-EDCPRLG\n 000000DC                000000DC 000000DC   1050+         ORG                                                            02-EDCPRLG\n 000000E0                                    1051+         DS    0D                                                       02-EDCPRLG\n                         000000D8            1052+IHB0077LG EQU   *-IHB0077DS-8                                           02-EDCPRLG\n 00000550                00000550 000002C8   1053+SQLASM   CSECT                                                          02-EDCPRLG\n                                             1054+*--------------------------------------------------------------\n 00000550                                    1055+         DS    0H                                                       02-EDCPRLG\n                     R:F 00000550            1056+         USING *,15                                                     02-EDCPRLG\n ** ASMA303W Multiple address resolutions may result from this USING and the USING on statement number 949\n ** ASMA435I Record 103 in CEE.SCEEMAC(EDCPRLG) on volume: Z1DT12\n 00000550 47F0 F040               00000590   1057+         B     IHB0077B       branch around prologue's constant areas   02-EDCPRLG\n                                             1058+* PPA1 constant area\n 00000554 14                                 1059+         DC    AL1(IHB0077N+4-*)   offset to the name                   02-EDCPRLG\n 00000555 CE                                 1060+         DC    X'CE' .             CEE signature                        02-EDCPRLG\n 00000556 A0                                 1061+         DC    X'A0' .             CEE flags (ext proc, has DSA)        02-EDCPRLG\n 00000557 10                                 1062+         DC    AL1(0+0+16)      .  member flags                         02-EDCPRLG\n 00000558 0000056C                           1063+         DC    AL4(IHB0077P) .       A(PPA2)                            02-EDCPRLG\n 0000055C 00000000                           1064+         DC    AL4(0) .              A(PPA3) or zero                    02-EDCPRLG\n 00000560 000000D8                           1065+         DC    AL4(IHB0077LG)        total DSA length                   02-EDCPRLG\n 00000564 0006                               1066+IHB0077N DC    AL2(6)      .       length of name                       02-EDCPRLG\n 00000566 E2D8D3C1E2D4                       1067+         DC    C'SQLASM'           untruncated name                     02-EDCPRLG\n                                             1068+*--------------------------------------------------------------\n                                             1069+* PPA2 constant area\n 0000056C                                    1070+IHB0077P DS    0F                  force fwrd alignment                 02-EDCPRLG\n 0000056C 03                                 1071+         DC    X'03' .             member identifier (C)                02-EDCPRLG\n 0000056D 00                                 1072+         DC    X'00' .             member subid                         02-EDCPRLG\n 0000056E 33                                 1073+         DC    X'33'     .         plistfmt/runenv (nibbles)            02-EDCPRLG\n 0000056F 00                                 1074+         DC    X'00' .             CEE control block level              02-EDCPRLG\n 00000570 00000000                           1075+         DC    AL4(CEESTART)                                            02-EDCPRLG\n 00000574 00000000                           1076+         DC    AL4(0)                A(PPA4) or zero                    02-EDCPRLG\n 00000578 0000057C                           1077+         DC    AL4(IHB0077T) .       A(time stamp) or zero              02-EDCPRLG\n                                             1078+*\n                                             1079+* Time stamp area\n 0000057C                                    1080+IHB0077T DS    0F                                                       02-EDCPRLG\n 0000057C F2F0F1F2                           1081+         DC    CL4'2012'  .        yyyy                            @P1A 02-EDCPRLG\n 00000580 F1F1F3F0                           1082+         DC    CL4'1130'   .       mmdd                                 02-EDCPRLG\n 00000584 F0F8F2F3F0F0                       1083+         DC    CL6'082300'     .   hhmmss                               02-EDCPRLG\n 0000058A F0F1                               1084+         DC    CL2'01' .           version                              02-EDCPRLG\n 0000058C F0F1F0F0                           1085+         DC    CL4'0100' .         release / modif level                02-EDCPRLG\n                                             1086+*\n 00000590                                    1087+IHB0077B DS    0H                                                       02-EDCPRLG\n                                             1088+***--------------------------------------------------------------------\n 00000590 90EC D00C               0000000C   1089+         STM   14,12,12(13) .      save Caller's registers              02-EDCPRLG\n                                             1090+***--------------------------------------------------------------------\n 00000594 5820 D04C               0000004C   1091+         L     2,76(,13)           get current NAB                      02-EDCPRLG\n 00000598 5800 F010               00000010   1092+         L     0,16(,15)           size of DSA                          02-EDCPRLG\n 0000059C 1E02                               1093+         ALR   0,2                 old NAB + DSA size = new NAB         02-EDCPRLG\n1         SQLASM SQL IBM interface module                                                                       Page   23\n   Active Usings: LEVEL,R7  DSNTIAR+X'74',R9  DSA,R13  SQLASM,R15\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000059E 5500 C00C               0000000C   1094+         CL    0,12(,12)           check for stack overflow             02-EDCPRLG\n 000005A2 47D0 F05C               000005AC   1095+         BNH   *+10                branch if enough space               02-EDCPRLG\n 000005A6 58F0 C074               00000074   1096+         L     15,116(,12)         load overflow rtn entry address      02-EDCPRLG\n 000005AA 05EF                               1097+         BALR  14,15               invoke overflow routine              02-EDCPRLG\n                                             1098+* at this point R0 has the new NAB, R2 has the newly acquired address\n 000005AC 58F0 D048               00000048   1099+         L     15,72(,13)                                               02-EDCPRLG\n 000005B0 90F0 2048               00000048   1100+         STM   15,0,72(2)                                               02-EDCPRLG\n 000005B4 9210 2000      00000000            1101+         MVI   0(2),X'10'                                               02-EDCPRLG\n 000005B8 50D0 2004               00000004   1102+         ST    13,4(,2)            back chain DSA                       02-EDCPRLG\n 000005BC 18D2                               1103+         LR    13,2                activate this DSA                    02-EDCPRLG\n                                             1104+***--------------------------------------------------------------------\n                                             1105+         DROP  15                                                       02-EDCPRLG\n 000005BE 0590                               1106+         BALR  R9,0                                                     02-EDCPRLG\n                     R:9 000005C0            1107+         USING *,R9                                                     02-EDCPRLG\n ** ASMA303W Multiple address resolutions may result from this USING and the USING on statement number 949\n ** ASMA435I Record 174 in CEE.SCEEMAC(EDCPRLG) on volume: Z1DT12\n                                             1108+***--------------------------------------------------------------------\n 000005C0 5870 91F8               000007B8   1109+         L     R7,=A(LEVEL)       get const darr                        01-\n 000005C4 58F0 0010               00000010   1110+         L     R15,X'10'           CVT                                  01-\n ** ASMA309W Operand X'10' resolved to a displacement with no base register\n ** ASMA435I Record 154 in ESA.PRJ.CBTDSSN.ASM(SSQLASM) on volume: USER01\n 000005C8 58F0 F220               00000220   1111+         L     R15,X'220'(,R15)    CSR table address                    01-\n 000005CC 58F0 F014               00000014   1112+         L     R15,X'14'(,R15)     offset                               01-\n 000005D0 58F0 F008               00000008   1113+         L     R15,X'08'(,R15)     IEANTRNT                             01-\n                                             1114+*        CALL  (15),(LEVEL,tokenname,TOKENDATA,RETCODE),MF=(E,CALLLIST)\n 000005D4                                    1117+         DS    0H                                                       02-CALL\n 000005D4 4110 D090               00000090   1122+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBINNRR\n 000005D8 4100 7000               000007BC   1123+         LA    0,LEVEL            PICKUP  PARAMETER                     03-IHBOPLTX\n 000005DC 5000 1000               00000000   1124+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 000005E0 4100 7008               000007C4   1125+         LA    0,TOKENNAME        PICKUP  PARAMETER                     03-IHBOPLTX\n 000005E4 5000 1004               00000004   1126+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 000005E8 4100 D0B0               000000B0   1127+         LA    0,TOKENDATA        PICKUP  PARAMETER                     03-IHBOPLTX\n 000005EC 5000 1008               00000008   1128+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 000005F0 4100 D0C0               000000C0   1129+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOPLTX\n 000005F4 5000 100C               0000000C   1130+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 000005F8 05EF                               1131+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 000005FA A7FE 0004               00000004   1132+         CHI   R15,4               check code                           01-\n 000005FE A784 0055               000006A8   1133+         JE    LOAD                if new token                         01-\n                                             1134+*        JL    DELETE              if already exits, delete\n 00000602 A724 00F3               000007E8   1135+         JH    ERRTKN              name/token err                       01-\n                                             1136+* already exists, check if rrs was\n 00000606 1BFF                               1137+         SR    R15,R15             no rrs                               01-\n 00000608 D603 D0BC D0BC 000000BC 000000BC   1138+         OC    TOKENDATA+12(4),TOKENDATA+12 test for RRS                01-\n 0000060E A784 00FA               00000802   1139+         JZ    RETRN               no rrs                               01-\n 00000612 41F0 0004               00000004   1140+         LA    R15,4               indicate rrs                         01-\n 00000616 A7F4 00F6               00000802   1141+         J     RETRN               if already exits, o.k.               01-\n 0000061A D603 D0BC D0BC 000000BC 000000BC   1142+DELETE   OC    TOKENDATA+12(4),TOKENDATA+12 test for RRS                01-\n 00000620 4780 9092               00000652   1143+         BZ    DNORRS              DELETE NORRS                         01-\n                                             1144+*        delete ep=userrs          delete userrs\n 00000624 4500 9070               00000630   1146+         BAL   0,*+12                            LOAD ADDR OF EP SYMBOL 02-DELETE\n 00000628 E4E2C5D9D9E24040                   1147+         DC    CL8'USERRS'                       EP SYMBOL              02-DELETE\n 00000630 0A09                               1148+         SVC   9                                 ISSUE DELETE SVC       02-DELETE\n                                             1149+*        delete ep=dsnhlir         delete dsnhlir\n 00000632 4500 907E               0000063E   1151+         BAL   0,*+12                            LOAD ADDR OF EP SYMBOL 02-DELETE\n 00000636 C4E2D5C8D3C9D940                   1152+         DC    CL8'DSNHLIR'                      EP SYMBOL              02-DELETE\n1         SQLASM SQL IBM interface module                                                                       Page   24\n   Active Usings: LEVEL,R7  SQLASM+X'70',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000063E 0A09                               1153+         SVC   9                                 ISSUE DELETE SVC       02-DELETE\n                                             1154+*        delete ep=dsnrli          delete dsnrli\n 00000640 4500 908C               0000064C   1156+         BAL   0,*+12                            LOAD ADDR OF EP SYMBOL 02-DELETE\n 00000644 C4E2D5D9D3C94040                   1157+         DC    CL8'DSNRLI'                       EP SYMBOL              02-DELETE\n 0000064C 0A09                               1158+         SVC   9                                 ISSUE DELETE SVC       02-DELETE\n 0000064E 47F0 90AE               0000066E   1159+         B     DCLEAR                                                   01-\n 00000652                                    1160+DNORRS   DS    0H                                                       01-\n                                             1161+*        delete ep=dsnhli2\n 00000652 4500 909E               0000065E   1163+         BAL   0,*+12                            LOAD ADDR OF EP SYMBOL 02-DELETE\n 00000656 C4E2D5C8D3C9F240                   1164+         DC    CL8'DSNHLI2'                      EP SYMBOL              02-DELETE\n 0000065E 0A09                               1165+         SVC   9                                 ISSUE DELETE SVC       02-DELETE\n                                             1166+*        delete ep=dsnali\n 00000660 4500 90AC               0000066C   1168+         BAL   0,*+12                            LOAD ADDR OF EP SYMBOL 02-DELETE\n 00000664 C4E2D5C1D3C94040                   1169+         DC    CL8'DSNALI'                       EP SYMBOL              02-DELETE\n 0000066C 0A09                               1170+         SVC   9                                 ISSUE DELETE SVC       02-DELETE\n 0000066E                                    1171+DCLEAR   DS    0H                  clear addresses                      01-\n 0000066E 58F0 0010               00000010   1172+         L     R15,X'10'           CVT                                  01-\n ** ASMA309W Operand X'10' resolved to a displacement with no base register\n ** ASMA435I Record 185 in ESA.PRJ.CBTDSSN.ASM(SSQLASM) on volume: USER01\n 00000672 58F0 F220               00000220   1173+         L     R15,X'220'(,R15)     CSR table address                   01-\n 00000676 58F0 F014               00000014   1174+         L     R15,X'14'(,R15)       offset                             01-\n 0000067A 58F0 F00C               0000000C   1175+         L     R15,X'0C'(,R15)       IEANTDL delete token               01-\n                                             1176+*        CALL  (15),(LEVEL,tokenname,RETCODE),MF=(E,CALLLIST)\n 0000067E                                    1179+         DS    0H                                                       02-CALL\n 0000067E 4110 D090               00000090   1184+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBINNRR\n 00000682 4100 7000               000007BC   1185+         LA    0,LEVEL            PICKUP  PARAMETER                     03-IHBOPLTX\n 00000686 5000 1000               00000000   1186+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000068A 4100 7008               000007C4   1187+         LA    0,TOKENNAME        PICKUP  PARAMETER                     03-IHBOPLTX\n 0000068E 5000 1004               00000004   1188+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000692 4100 D0C0               000000C0   1189+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOPLTX\n 00000696 5000 1008               00000008   1190+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000069A 05EF                               1191+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 0000069C A7FE 0004               00000004   1192+         CHI   R15,4               check code                           01-\n 000006A0 4720 702C               000007E8   1193+         BH    ERRTKN              name/token error                     01-\n 000006A4 47F0 7046               00000802   1194+         B     RETRN                                                    01-\n 000006A8                                    1195+LOAD     DS    0H                                                       01-\n                                             1196+*        LOAD  EP=DSNTIAR          get addr\n 000006A8                                    1199+         CNOP  0,4                                                 @L2P 02-LOAD\n 000006A8 4DF0 90F4               000006B4   1200+         BAS   15,LOAD2_0095      BRANCH AROUND CONSTANT(S)             02-LOAD\n 000006AC                                    1201+LD2_0095    DS 0H                                                       02-LOAD\n 000006AC C4E2D5E3C9C1D940                   1202+LE2_0095    DC CL8'DSNTIAR'       ENTRY POINT NAME                      02-LOAD\n 000006B4                                    1203+LOAD2_0095    DS 0H                                                     02-LOAD\n 000006B4 4100 F000               00000000   1204+         LA    0,LE2_0095-LD2_0095(,15)         ADDR OF PARAMETER       02-LOAD\n 000006B8 1B11                               1205+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 000006BA 0A08                               1206+         SVC   8                                                        02-LOAD\n 000006BC 5000 D0B8               000000B8   1207+         ST    R0,TOKENDATA+8      save addr                            01-\n 000006C0 9201 D0BC      000000BC            1208+         MVI   TOKENDATA+12,1      assume RRS                           01-\n 000006C4 D70F D080 D080 00000080 00000080   1209+         XC    LOADLIST(LOADLISTL),LOADLIST clear list                  01-\n                                             1210+*        load  ep=userrs,erret=norrs,sf=(e,loadlist)\n 000006CA 0700                               1215+         CNOP  0,4                                            @ZA64577  03-IHBINNRX\n 000006CC 4110 D080               00000080   1216+         LA    1,LOADLIST         LOAD SUPV PARM LIST ADDR    @G381P2A  03-IHBINNRX\n 000006D0 4100 9118               000006D8   1217+         LA    0,*+8              LOAD EP ADDR IN REG 0       @G381P2A  03-IHBINNRX\n 000006D4 47F0 9120               000006E0   1218+         B     *+12               BRANCH AROUND EP            @G381P2A  03-IHBINNRX\n 000006D8 E4E2C5D9D9E24040                   1219+         DC    CL8'USERRS'        EP SYMBOL                   @G381P2A  03-IHBINNRX\n 000006E0 5000 1000               00000000   1220+         ST    0,0(0,1)           STORE EP ADDR IN SUPV PARMLIST        03-IHBINNRX\n1         SQLASM SQL IBM interface module                                                                       Page   25\n   Active Usings: LEVEL,R7  SQLASM+X'70',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000006E4 9620 100A      0000000A            1221+         OI    10(1),X'20'        TURN ON RETURN REQUESTED BIT          03-IHBINNRX\n 000006E8 41F0 0009               00000009   1222+         LA    15,9            LOAD EXTENDED SVC ROUTING CODE @G381P2A  02-LOAD\n 000006EC 0A7A                               1223+         SVC   122                ISSUE EXTENDED SVC          @G381P2A  02-LOAD\n 000006EE 12FF                               1224+         LTR   15,15              RETURN CODE TEST                      02-LOAD\n 000006F0 4770 916C               0000072C   1225+         BNZ   NORRS            GO TO ERROR ROUTINE                @P1A 02-LOAD\n                                             1226+*        load  ep=dsnrli\n 000006F4                                    1229+         CNOP  0,4                                                 @L2P 02-LOAD\n 000006F4 4DF0 9140               00000700   1230+         BAS   15,LOAD2_0101      BRANCH AROUND CONSTANT(S)             02-LOAD\n 000006F8                                    1231+LD2_0101    DS 0H                                                       02-LOAD\n 000006F8 C4E2D5D9D3C94040                   1232+LE2_0101    DC CL8'DSNRLI'        ENTRY POINT NAME                      02-LOAD\n 00000700                                    1233+LOAD2_0101    DS 0H                                                     02-LOAD\n 00000700 4100 F000               00000000   1234+         LA    0,LE2_0101-LD2_0101(,15)         ADDR OF PARAMETER       02-LOAD\n 00000704 1B11                               1235+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 00000706 0A08                               1236+         SVC   8                                                        02-LOAD\n 00000708 5000 D0B0               000000B0   1237+         ST    R0,TOKENDATA        save addr                            01-\n 0000070C                                    1240+         CNOP  0,4                                                 @L2P 02-LOAD\n 0000070C 4DF0 9158               00000718   1241+         BAS   15,LOAD2_0103      BRANCH AROUND CONSTANT(S)             02-LOAD\n 00000710                                    1242+LD2_0103    DS 0H                                                       02-LOAD\n 00000710 C4E2D5C8D3C9D940                   1243+LE2_0103    DC CL8'DSNHLIR'       ENTRY POINT NAME                      02-LOAD\n 00000718                                    1244+LOAD2_0103    DS 0H                                                     02-LOAD\n 00000718 4100 F000               00000000   1245+         LA    0,LE2_0103-LD2_0103(,15)         ADDR OF PARAMETER       02-LOAD\n 0000071C 1B11                               1246+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 0000071E 0A08                               1247+         SVC   8                                                        02-LOAD\n 00000720 5000 D0B4               000000B4   1248+         ST    R0,TOKENDATA+4      save addr                            01-\n 00000724 41F0 0004               00000004   1249+         LA    R15,4               indicate rrs                         01-\n 00000728 47F0 91A6               00000766   1250+         B     CTOKEN              branch to create token               01-\n 0000072C D703 D0BC D0BC 000000BC 000000BC   1251+NORRS    XC    TOKENDATA+12(4),TOKENDATA+12 use CAF                     01-\n 00000732 0700                               1254+         CNOP  0,4                                                 @L2P 02-LOAD\n 00000734 4DF0 9180               00000740   1255+         BAS   15,LOAD2_0105      BRANCH AROUND CONSTANT(S)             02-LOAD\n 00000738                                    1256+LD2_0105    DS 0H                                                       02-LOAD\n 00000738 C4E2D5C1D3C94040                   1257+LE2_0105    DC CL8'DSNALI'        ENTRY POINT NAME                      02-LOAD\n 00000740                                    1258+LOAD2_0105    DS 0H                                                     02-LOAD\n 00000740 4100 F000               00000000   1259+         LA    0,LE2_0105-LD2_0105(,15)         ADDR OF PARAMETER       02-LOAD\n 00000744 1B11                               1260+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 00000746 0A08                               1261+         SVC   8                                                        02-LOAD\n 00000748 5000 D0B0               000000B0   1262+         ST    R0,TOKENDATA        save addr                            01-\n                                             1263+*        LOAD  EP=DSNHLI2          get addr\n 0000074C                                    1266+         CNOP  0,4                                                 @L2P 02-LOAD\n 0000074C 4DF0 9198               00000758   1267+         BAS   15,LOAD2_0107      BRANCH AROUND CONSTANT(S)             02-LOAD\n 00000750                                    1268+LD2_0107    DS 0H                                                       02-LOAD\n 00000750 C4E2D5C8D3C9F240                   1269+LE2_0107    DC CL8'DSNHLI2'       ENTRY POINT NAME                      02-LOAD\n 00000758                                    1270+LOAD2_0107    DS 0H                                                     02-LOAD\n 00000758 4100 F000               00000000   1271+         LA    0,LE2_0107-LD2_0107(,15)         ADDR OF PARAMETER       02-LOAD\n 0000075C 1B11                               1272+         SR    1,1                SHOW NO DCB PRESENT                   02-LOAD\n 0000075E 0A08                               1273+         SVC   8                                                        02-LOAD\n 00000760 5000 D0B4               000000B4   1274+         ST    R0,TOKENDATA+4      save addr                            01-\n 00000764 1BFF                               1275+         SR    R15,R15             no RRS                               01-\n 00000766 185F                               1276+CTOKEN   LR    R5,R15              save rc                              01-\n 00000768 58F0 0010               00000010   1277+         L     R15,X'10'           CVT                                  01-\n ** ASMA309W Operand X'10' resolved to a displacement with no base register\n ** ASMA435I Record 217 in ESA.PRJ.CBTDSSN.ASM(SSQLASM) on volume: USER01\n 0000076C 58F0 F220               00000220   1278+         L     R15,X'220'(,R15)    CSR table address                    01-\n 00000770 58F0 F014               00000014   1279+         L     R15,X'14'(,R15)     offset                               01-\n 00000774 58F0 F004               00000004   1280+         L     R15,X'04'(,R15)     IEANTCR                              01-\n                                             1281+*        CALL  (15),(LEVEL,tokenname,tokendata,nopersist,RETCODE),     X\n1         SQLASM SQL IBM interface module                                                                       Page   26\n   Active Usings: LEVEL,R7  SQLASM+X'70',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                                +               MF=(E,CALLLIST)\n 00000778                                    1284+         DS    0H                                                       02-CALL\n 00000778 4110 D090               00000090   1289+         LA    1,CALLLIST                        LOAD PARAMETER REG 1   04-IHBINNRR\n 0000077C 4100 7000               000007BC   1290+         LA    0,LEVEL            PICKUP  PARAMETER                     03-IHBOPLTX\n 00000780 5000 1000               00000000   1291+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000784 4100 7008               000007C4   1292+         LA    0,TOKENNAME        PICKUP  PARAMETER                     03-IHBOPLTX\n 00000788 5000 1004               00000004   1293+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000078C 4100 D0B0               000000B0   1294+         LA    0,TOKENDATA        PICKUP  PARAMETER                     03-IHBOPLTX\n 00000790 5000 1008               00000008   1295+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 03-IHBOPLTX\n 00000794 4100 7004               000007C0   1296+         LA    0,NOPERSIST        PICKUP  PARAMETER                     03-IHBOPLTX\n 00000798 5000 100C               0000000C   1297+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 0000079C 4100 D0C0               000000C0   1298+         LA    0,RETCODE          PICKUP  PARAMETER                     03-IHBOPLTX\n 000007A0 5000 1010               00000010   1299+         ST    0,16(0,1)                         STORE INTO PARAM. LIST 03-IHBOPLTX\n 000007A4 05EF                               1300+         BALR  14,15                             BRANCH TO ENTRY POINT  02-CALL\n 000007A6 12FF                               1301+         LTR   R15,R15             check code                           01-\n 000007A8 A774 0020               000007E8   1302+         JNZ   ERRTKN              name token error                     01-\n 000007AC 18F5                               1303+         LR    R15,R5              back rc                              01-\n 000007AE A7F4 002A               00000802   1304+         J     RETRN               jump out                             01-\n 000007B8                                    1305+         LTORG                                                          01-\n 000007B8 000007BC                           1306                =A(LEVEL)\n 000007BC 00000001                           1307+LEVEL    DC    A(IEANT_TASK_LEVEL)      Task level                      01-\n                                             1308+*LEVEL    DC    A(IEANT_HOME_LEVEL)     Home level\n 000007C0 00000000                           1309+NOPERSIST DC   A(IEANT_NOPERSIST)      nopersist option                 01-\n 000007C4 C9E2C9E26DC4C2F2                   1310+TOKENNAME DC   CL16'ISIS_DB2CAF_TOKEN' Token name                       01-\n 000007D4 00000001                           1311+CONN_LEVEL DC  A(IEANT_TASK_LEVEL)      task level                      01-\n 000007D8 C9E2C9E26DC4C2C3                   1312+CONN_TOKENNAME DC   CL16'ISIS_DBCONN_TOKEN' Token name                  01-\n 000007E8 185F                               1313+ERRTKN   LR    R5,R15              get code                             01-\n                                             1314+*        ABEND (R5),DUMP,,SYSTEM,REASON=(R3)\n 000007EA                                    1317+         DS    0H                                                       02-ABEND\n 000007EA 1815                               1320+         LR    1,R5                              LOAD PARAMETER REG 1   03-IHBINNRR\n 000007EC 8910 0014               00000014   1321+         SLL   1,20(0)            SHIFT OFF HIGH ORDER 20 BITS @G860P1F 02-ABEND\n 000007F0 8810 0008               00000008   1322+         SRL   1,8(0)             CODE IN SYSTEM POSITION               02-ABEND\n 000007F4 18F3                               1323+         LR    15,R3              LOAD REG15 WITH REASON CODE  @G860P1F 02-ABEND\n 000007F6 4100 0084               00000084   1324+         LA    0,132(0,0)         DUMP/STEP/DUMPOPTS/REASON    @G860P1F 02-ABEND\n 000007FA 8900 0018               00000018   1325+         SLL   0,24(0)            SHIFT TO HIGH ORDER                   02-ABEND\n 000007FE 1610                               1326+         OR    1,0                OR IN WITH COMPCODE                   02-ABEND\n 00000800 0A0D                               1327+         SVC   13                 LINK TO ABEND ROUTINE                 02-ABEND\n0                                            1329+*--------------------------------------------------------------------*\n                                             1330+* RETURN point                                                       *\n                                             1331+*--------------------------------------------------------------------*\n 00000802                                    1332+RETRN    DS    0H                                                       01-\n                                             1333+*exit    edcepil\n 00000802 58D0 D004               00000004   1335+EXIT     L     13,4(,13)          address of caller's save area         02-EDCEPIL\n 00000806 58E0 D00C               0000000C   1336+         L     14,12(,13)         restore R14                           02-EDCEPIL\n 0000080A 982C D01C               0000001C   1337+         LM    2,12,28(13)        restore R2 - R12                      02-EDCEPIL\n 0000080E 051E                               1338+         BALR  1,14               return                                02-EDCEPIL\n 00000810 00000550                           1339+         DC    AL4(SQLASM)                                              02-EDCEPIL\n 00000818                                    1340          LTORG\n                                             1341 DSA      CEEDSA SECTYPE=OS         DSA\n                                             1342+*\n                                             1343+**********************************************************************\n                                             1344+*   D Y N A M I C   S T O R A G E   A R E A    ( D S A )             *\n                                             1345+**********************************************************************\n                                             1346+*\n1         SQLASM SQL IBM interface module                                                                       Page   27\n   Active Usings: LEVEL,R7  SQLASM+X'70',R9  DSA,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            1347+*\n 00000000                00000000 000000D4   1348+DSA      DSECT 0D         SECTYPE=OS, &LABEL is Provided                01-CEEDSA\n 00000000                                    1349+CEEDSA   DS    0D         Just keep the same label for formulae         01-CEEDSA\n                                             1350+*\n 00000000                                    1351+CEEDSAFLAGS DS XL2                  DSA flags                           01-CEEDSA\n                         00001000            1352+CEEDSALNGC EQU X'1000'                C library DSA                     01-CEEDSA\n                         00000800            1353+CEEDSALNGP EQU X'0800'                PL/I library DSA                  01-CEEDSA\n                         00000008            1354+CEEDSAEXIT EQU X'0008'                An Exit DSA                       01-CEEDSA\n 00000002                                    1355+CEEDSAMEMD DS  XL2                  Member defined                      01-CEEDSA\n 00000004                                    1356+CEEDSABKC DS   A                    Addr of DSA of caller               01-CEEDSA\n 00000008                                    1357+CEEDSAFWC DS   A                    Addr of DSA of last called rtn      01-CEEDSA\n 0000000C                                    1358+CEEDSAR14 DS   F                    Save area for register 14           01-CEEDSA\n 00000010                                    1359+CEEDSAR15 DS   F                    Save area for register 15           01-CEEDSA\n 00000014                                    1360+CEEDSAR0 DS    F                    Save area for register 0            01-CEEDSA\n 00000018                                    1361+CEEDSAR1 DS    F                    Save area for register 1            01-CEEDSA\n 0000001C                                    1362+CEEDSAR2 DS    F                    Save area for register 2            01-CEEDSA\n 00000020                                    1363+CEEDSAR3 DS    F                    Save area for register 3            01-CEEDSA\n 00000024                                    1364+CEEDSAR4 DS    F                    Save area for register 4            01-CEEDSA\n 00000028                                    1365+CEEDSAR5 DS    F                    Save area for register 5            01-CEEDSA\n 0000002C                                    1366+CEEDSAR6 DS    F                    Save area for register 6            01-CEEDSA\n 00000030                                    1367+CEEDSAR7 DS    F                    Save area for register 7            01-CEEDSA\n 00000034                                    1368+CEEDSAR8 DS    F                    Save area for register 8            01-CEEDSA\n 00000038                                    1369+CEEDSAR9 DS    F                    Save area for register 9            01-CEEDSA\n 0000003C                                    1370+CEEDSAR10 DS   F                    Save area for register 10           01-CEEDSA\n 00000040                                    1371+CEEDSAR11 DS   F                    Save area for register 11           01-CEEDSA\n 00000044                                    1372+CEEDSAR12 DS   F                    Save area for register 12           01-CEEDSA\n 00000048                                    1373+CEEDSALWS DS   A                    Addr of PL/I Language Working Space 01-CEEDSA\n 0000004C                                    1374+CEEDSANAB DS   A                    Addr of next available byte         01-CEEDSA\n 00000050                                    1375+CEEDSAPNAB DS  A                    Addr of end-of-prolog NAB           01-CEEDSA\n 00000054                                    1376+           DS  4F                                                       01-CEEDSA\n 00000064                                    1377+CEEDSATRAN DS  0A                   HPL TxArea or                       01-CEEDSA\n 00000064                                    1378+CEEDSARENT DS  A                    Program reentry address-IPAT        01-CEEDSA\n 00000068                                    1379+CEEDSACILC DS  A                    C to Fortran ILC save area          01-CEEDSA\n 0000006C                                    1380+CEEDSAMODE DS  A                    Return address of module that       01-CEEDSA\n                                             1381+*                                   caused the last mode switch\n 00000070                                    1382+           DS  2F                                                       01-CEEDSA\n 00000078                                    1383+CEEDSARMR  DS  A                    Addr of language specific           01-CEEDSA\n                                             1384+*                                   exception handler\n                                             1385+*\n 0000007C                                    1386+           DS  F                    Reserved                            01-CEEDSA\n 00000080                                    1387+CEEDSAAUTO DS  0D                   Automatic storage starts here       01-CEEDSA\n 00000080                                    1388+CEEDSAEND  DS  0D                   End of DSA                          01-CEEDSA\n                         00000080            1389+CEEDSASZ EQU   CEEDSAEND-CEEDSA     Size of DSA                         01-CEEDSA\n                         00000000            1390+CEEDSA_STDCEEDSA  EQU   X'0000'     flag values of standard CEE DSA     01-CEEDSA\n                                             1391+*\n                                             1392+*\n                                             1393+*\n 00000080                00000000 000000D4   1394+DSA      DSECT  ,              &LABEL is Provided                       01-CEEDSA\n                                             1395 *oadlist load sf=l                 load list form\n                                             1396 LOADLIST LOAD SF=L                 load list form\n 00000080                                    1400+         CNOP  0,4                                            @G381P2A  02-IHBINNRX\n 00000080 00000000                           1401+LOADLIST DC    A(0)               ADDRESS OF EP OR DE PARAMETER         02-IHBINNRX\n 00000084 00000000                           1402+         DC    AL4(0)             DCB ADDRESS PARAMETER       @G381P2A  02-IHBINNRX\n 00000088 00                                 1403+         DC    AL1(0)             PARAMETER LIST FORMAT NUMBER          02-IHBINNRX\n 00000089 00                                 1404+         DC    AL1(0)             RESERVED                    @G381P2A  02-IHBINNRX\n1         SQLASM SQL IBM interface module                                                                       Page   28\n   Active Usings: LEVEL,R7  SQLASM+X'70',R9  DSA,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000008A 00                                 1405+         DC    B'00000000'                                   OPTIONS    02-IHBINNRX\n 0000008B 00                                 1406+         DC    B'00000000'                         OPTIONS        @L2C  02-IHBINNRX\n 0000008C 00000000                           1407+         DC    A(0)               EXPLICIT LOAD, LOADPT, EXTINFO  @L1C  02-IHBINNRX\n                         00000010            1408 LOADLISTL EQU *-LOADLIST           list length\n 00000090 0000000000000000                   1409 CALLLIST  DC   8A(0)               call list form\n                         00000020            1410 CALLLISTL EQU  *-CALLLIST          cal list length\n 000000B0 0000000000000000                   1411 TOKENDATA DC   4A(0)               token data\n 000000C0 00000000                           1412 RETCODE  DC    A(0)                    Return code\n 000000C4 4040404040404040                   1413 CALLCODE DC    CL16' '             save callcode here\n                         000000D4            1414 DSALEN   EQU   *-DSA               DSECT length\n                                             1415          END\n1                                                 Relocation Dictionary                                         Page   29\n-   Pos.Id   Rel.Id   Address  Type  Action                                                  HLASM R6.0  2012/11/30 08.23\n0  00000008 00000008 00000008   A 4     +\n   00000008 00000008 0000002C   A 4     +\n   00000008 00000008 000001BA   A 4     +\n   00000008 0000000A 00000024   A 4     +\n   00000008 00000018 00000298   A 4     +\n   0000000E 0000000A 000002E4   A 4     +\n   0000000E 0000000E 000002C8   A 4     +\n   0000000E 0000000E 000002EC   A 4     +\n   0000000E 0000000E 000003F8   A 4     +\n   0000000E 00000018 00000400   A 4     +\n   00000013 0000000A 0000042C   A 4     +\n   00000013 00000013 00000410   A 4     +\n   00000013 00000013 00000434   A 4     +\n   00000013 00000013 00000540   A 4     +\n   00000013 00000018 00000548   A 4     +\n   00000018 0000000A 00000570   A 4     +\n   00000018 00000018 00000558   A 4     +\n   00000018 00000018 00000578   A 4     +\n   00000018 00000018 000007B8   A 4     +\n   00000018 00000018 00000810   A 4     +\n1                                          Macro and Copy Code Source Summary                                   Page   30\n- Con Source                                        Volume    Members                        HLASM R6.0  2012/11/30 08.23\n0     PRIMARY INPUT                                           RSQL     STUB\n   L1 ESA.PRJ.CBTDSSN.ASM                           USER01    CREGS\n   L2 SYS1.MACLIB                                   Z1DT11    ABEND    CALL     DELETE   IEANTASM IHBINNRR IHBINNRX\n                                                              IHBOPLTX LOAD     SYSSTATE\n   L4 CEE.SCEEMAC                                   Z1DT12    CEEDSA   EDCEPIL  EDCPRLG\n1                                                Dsect Cross Reference                                          Page   31\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2012/11/30 08.23\n0DSA      00000080  FFFFFFFB    1348\n IHB0004DS\n          000000E0  FFFFFFFF     426\n IHB0043DS\n          000000E0  FFFFFFFE     723\n IHB0060DS\n          000000E0  FFFFFFFD     884\n IHB0077DS\n          000000E0  FFFFFFFC    1045\n1                                                      Using Map                                                Page   32\n-                                                                                            HLASM R6.0  2012/11/30 08.23\n   Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text\n           Count      Id           Type          Value    Range     Id        Disp    Stmt\n0    22  00000000  00000004 USING  ORDINARY    00000000 00001000 FFFFFFFB  13 000C4   1298 DSA,R13\n    437  00000000  00000008 USING  ORDINARY    00000000 00001000 00000008  15 00060    478 *,15\n    488  00000072  00000008 DROP                                           15              15\n    490  00000074  00000008 USING  ORDINARY    00000074 00001000 00000008   9 00244    608 *,R9\n    493  00000078  00000008 USING  ORDINARY    000007BC 00001000 00000018   7 0001C    686 LEVEL,R7\n    734  000002C0  0000000E USING  ORDINARY    000002C0 00001000 0000000E  15 00060    773 *,15\n    783  00000332  0000000E DROP                                           15              15\n    785  00000334  0000000E USING  ORDINARY    00000334 00001000 0000000E   9 000CC    850 *,R9\n    788  00000338  0000000E USING  ORDINARY    000007BC 00001000 00000018   7 00008    805 LEVEL,R7\n    895  00000408  00000013 USING  ORDINARY    00000408 00001000 00000013  15 00060    934 *,15\n    944  0000047A  00000013 DROP                                           15              15\n    946  0000047C  00000013 USING  ORDINARY    0000047C 00001000 00000013   9 000CC   1011 *,R9\n    949  00000480  00000013 USING  ORDINARY    000007BC 00001000 00000018   7 00046   1296 LEVEL,R7\n   1056  00000550  00000018 USING  ORDINARY    00000550 00001000 00000018  15 0005C   1095 *,15\n   1105  000005BE  00000018 DROP                                           15              15\n   1107  000005C0  00000018 USING  ORDINARY    000005C0 00001000 00000018   9 001F8   1267 *,R9\n1                                   General Purpose Register Cross Reference                                    Page   33\n- Register  References (M=modified, B=branch, U=USING, D=DROP, N=index)                      HLASM R6.0  2012/11/30 08.23\n0    0(0)     472   475M  476M  477   483   508M  509   510M  511   512M  513   514M  515   527M  530   544M  547   559M  562   620\n              634M  635   636M  637   638M  639   640M  641   644   658M  659   660M  661   662M  663   666   680M  681   682M  683\n              684M  685   686M  687   688M  689   703M  704M  705   767   770M  771M  772   778   803M  804   805M  806   807M  808\n              809M  810   822M  825   839M  842   854M  857   928   931M  932M  933   939   964M  965   966M  967   968M  969   970M\n              971   983M  986  1000M 1003  1015M 1018  1089  1092M 1093M 1094  1100  1123M 1124  1125M 1126  1127M 1128  1129M 1130\n             1146M 1151M 1156M 1163M 1168M 1185M 1186  1187M 1188  1189M 1190  1204M 1207  1217M 1220  1234M 1237  1245M 1248  1259M\n             1262  1271M 1274  1290M 1291  1292M 1293  1294M 1295  1296M 1297  1298M 1299  1324M 1325M 1326\n     1(1)     472   494   507M  509   511   513   515   526M  530   531   545M  545   560M  560   580M  599M  618M  620   633M  635\n              637   639   641   644   657M  659   661   663   666   679M  681   683   685   687   689   699M  700M  701M  705M  767\n              789   802M  804   806   808   810   821M  825   826   840M  840   855M  855   864M  873M  928   950   963M  965   967\n              969   971   982M  986   987  1001M 1001  1016M 1016  1025M 1034M 1089  1122M 1124  1126  1128  1130  1184M 1186  1188\n             1190  1205M 1205  1216M 1220  1221  1235M 1235  1246M 1246  1260M 1260  1272M 1272  1289M 1291  1293  1295  1297  1299\n             1320M 1321M 1322M 1326M 1338M\n     2(2)     472   474M  476   483   484   485   486   494M  568   580   599   617M  620   643M  644   665M  666   691M  767   769M\n              771   778   779   780   781   789M  864   872M  928   930M  932   939   940   941   942   950M 1025  1033M 1089  1091M\n             1093  1100  1101  1102  1103  1337M\n     3(3)     472   568M  570   571   573   617M  620   643M  644   665M  666   691M  702   767   872M  928  1033M 1089  1323  1337M\n     4(4)     472   617M  620   643M  644   665M  666   691M  767   872M  928  1033M 1089  1337M\n     5(5)     472   547M  562M  566M  581   600   602M  611   617M  620   643M  644   665M  666   691M  692M  699   767   842M  857M\n              861M  865   872M  928  1003M 1018M 1022M 1026  1033M 1089  1276M 1303  1313M 1320  1337M\n     6(6)     472   617M  620   643M  644   665M  666   691M  767   872M  928  1033M 1089  1337M\n     7(7)     472   492M  493U  617M  620   643M  644   665M  666   691M  767   787M  788U  872M  928   948M  949U 1033M 1089  1109M\n             1337M\n     8(8)     472   617M  620   643M  644   665M  666   691M  767   872M  928  1033M 1089  1337M\n     9(9)     472   489M  490U  617M  620   643M  644   665M  666   691M  767   784M  785U  872M  928   945M  946U 1033M 1089  1106M\n             1107U 1337M\n    10(A)     472   617M  620   643M  644   665M  666   691M  767   872M  928  1033M 1089  1337M\n    11(B)     472   617M  620   643M  644   665M  666   691M  767   872M  928  1033M 1089  1337M\n    12(C)     472   477   479   617M  620   643M  644   665M  666   691M  767   772   774   872M  928   933   935  1033M 1089  1094\n             1096  1337M\n    13(D)      22U  472   474   482   485   486M  615M  615   616   617   620   643M  644   665M  666   691M  767   769   777   780\n              781M  870M  870   871   872   928   930   938   941   942M 1031M 1031  1032  1033  1089  1091  1099  1102  1103M 1335M\n             1335  1336  1337\n    14(E)     472   480M  516M  576M  582M  586M  601M  608M  616M  618B  620   620   642M  643M  644   644   664M  665M  666   666\n              690M  691M  767   775M  811M  866M  871M  873B  928   936M  972M 1027M 1032M 1034B 1089  1097M 1131M 1191M 1300M 1336M\n             1338B\n    15(F)     437U  472   475   479M  480B  482M  483   488D  495M  496M  496   497M  497   498M  498   516B  517   532M  534M  534\n              540M  544   555M  559   565M  566   577M  577   581M  582B  583M  583   587M  587   591M  594M  596M  600M  601B  602\n              609   611M  620   621M  622M  622   623M  623   624M  624   642B  644   645M  646M  646   647M  647   648M  648   664B\n              666   667M  668M  668   669M  669   670M  670   690B  692   702M  734U  767   770   774M  775B  777M  778   783D  790M\n              791M  791   792M  792   793M  793   811B  812   827M  829M  829   835M  839   850M  854   860M  861   865M  866B  895U\n              928   931   935M  936B  938M  939   944D  951M  952M  952   953M  953   954M  954   972B  973   988M  990M  990   996M\n             1000  1011M 1015  1021M 1022  1026M 1027B 1056U 1089  1092  1096M 1097B 1099M 1100  1105D 1110M 1111M 1111  1112M 1112\n             1113M 1113  1131B 1132  1137M 1137  1140M 1172M 1173M 1173  1174M 1174  1175M 1175  1191B 1192  1200M 1204  1222M 1224M\n             1224  1230M 1234  1241M 1245  1249M 1255M 1259  1267M 1271  1275M 1275  1276  1277M 1278M 1278  1279M 1279  1280M 1280\n             1300B 1301M 1301  1303M 1313  1323M\n1                                  Diagnostic Cross Reference and Assembler Summary                             Page   34\n-                                                                                            HLASM R6.0  2012/11/30 08.23\n0Statements Flagged\n0    495(P1,35), 621(P1,115), 645(P1,125), 667(P1,133), 790(P1,35), 951(P1,35), 1056(L4:EDCPRLG,103),\n     1107(L4:EDCPRLG,174), 1110(P1,154), 1172(P1,185), 1277(P1,217)\n\n      11 Statements Flagged in this Assembly        4 was Highest Severity Code\n0HIGH LEVEL ASSEMBLER, 5696-234, RELEASE 6.0, PTF UK75466\n0SYSTEM: z/OS 01.13.00              JOBNAME: COMPALL     STEPNAME: SSQLASM    PROCSTEP: ASMA90\n0Data Sets Allocated for this Assembly\n  Con DDname   Data Set Name                                Volume  Member\n   P1 SYSIN    ESA.PRJ.CBTDSSN.ASM                          USER01  SSQLASM\n   L1 SYSLIB   ESA.PRJ.CBTDSSN.ASM                          USER01\n   L2          SYS1.MACLIB                                  Z1DT11\n   L3          SYS1.MODGEN                                  Z1DT12\n   L4          CEE.SCEEMAC                                  Z1DT12\n   L5          ASM.AASMMAC2                                 Z1DSM1\n   L6          ASM.AASMMAC1                                 Z1DSM1\n   L7          TCPIP.SEZACMAC                               Z1DT12\n   L8          TCPIP.SEZANMAC                               Z1DT12\n      SYSADATA ESA.PRJ.CBTDSSN.ADATA                        USER05  SSQLASM\n      SYSLIN   ESA.PRJ.CBTDSSN.OBJECT                       USER07  SSQLASM\n      SYSPRINT ESA.PRJ.CBTDSSN.COMPLIST                     USER04  SSQLASM\n      SYSTERM  ESA.COMPALL.JOB01181.D0000102.?\n\n  917204K allocated to Buffer Pool       Storage required     540K\n     305 Primary Input Records Read         2816 Library Records Read                  0 Work File Reads\n       0 ASMAOPT Records Read               1629 Primary Print Records Written         0 Work File Writes\n      69 Object Records Written             2666 ADATA Records Written\n0Assembly Start Time: 08.23.50 Stop Time: 08.23.50 Processor Time: 00.00.00.0311\n Return Code 004\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TREES": {"ttr": 2675, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "UIMASM": {"ttr": 2623, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "1                                         High Level Assembler Option Summary                   (PTF UK75466)   Page    1\n-                                                                                            HLASM R6.0  2012/11/30 08.23\n0  No Overriding ASMAOPT Parameters\n   Overriding Parameters-  OBJECT,NODECK,LIST,TERM,NOXREF,GOFF,FLAG(PAGE0),ADATA\n   No Process Statements\n\n ** ASMA434N GOFF/XOBJECT option specified, option LIST(133) will be used\n\n   Options for this Assembly\n03   ADATA\n     ALIGN\n     ASA\n     BATCH\n     CODEPAGE(047C)\n   NOCOMPAT\n   NODBCS\n 3 NODECK\n     DXREF\n     ESD\n   NOEXIT\n 3   FLAG(0,ALIGN,CONT,EXLITW,NOIMPLEN,PAGE0,PUSH,RECORD,NOSUBSTR,USING0)\n   NOFOLD\n 3   GOFF(NOADATA)\n   NOINFO\n     LANGUAGE(EN)\n   NOLIBMAC\n     LINECOUNT(60)\n 3   LIST(133)\n     MACHINE(,NOLIST)\n     MXREF(SOURCE)\n 3   OBJECT\n     OPTABLE(UNI,NOLIST)\n   NOPCONTROL\n   NOPESTOP\n   NOPROFILE\n   NORA2\n   NORENT\n     RLD\n     RXREF\n     SECTALGN(8)\n     SIZE(MAX)\n   NOSUPRWARN\n     SYSPARM()\n 3   TERM(WIDE)\n   NOTEST\n     THREAD\n   NOTRANSLATE\n     TYPECHECK(MAGNITUDE,REGISTER)\n     USING(NOLIMIT,MAP,WARN(15))\n   NOWORKFILE\n 3 NOXREF\n\n   No Overriding DD Names\n1                                              External Symbol Dictionary                                       Page    2\n-Symbol   Type   Id     Address  Length   Owner Id Flags Alias-of                            HLASM R6.0  2012/11/30 08.23\n0          SD 00000001\n B_IDRL    ED 00000002                    00000001\n B_PRV     ED 00000003                    00000001\n B_TEXT    ED 00000004 00000000 00000000  00000001   00\n UIMASM    SD 00000005\n B_IDRL    ED 00000006                    00000005\n B_PRV     ED 00000007                    00000005\n B_TEXT    ED 00000008 00000000 00000234  00000005   07\n UIMASM    LD 00000009 00000000           00000008   07\n CEESTART  ER 0000000A                    00000005\n UIM       ER 0000000B                    00000005\n1          UIMASM DFDSS OMVS exit                                                                               Page    3\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                               2 *********************************************************************** 00020000\n                                                3 *                                                                     * 00030000\n                                                4 * UIMASM exit  dump/restore to HFS drives                             * 00040037\n                                                5 *                                                                     * 00050000\n                                                6 *********************************************************************** 00090000\n                         00000000               7 R0       EQU   0                                                        00100000\n                         00000001               8 R1       EQU   1                                                        00110000\n                         00000002               9 R2       EQU   2                                                        00120000\n                         00000003              10 R3       EQU   3                                                        00130000\n                         00000004              11 R4       EQU   4                                                        00140000\n                         00000005              12 R5       EQU   5                                                        00150000\n                         00000006              13 R6       EQU   6                                                        00160000\n                         00000007              14 R7       EQU   7                                                        00170000\n                         00000008              15 R8       EQU   8                                                        00180000\n                         00000009              16 R9       EQU   9                                                        00190000\n                         0000000A              17 R10      EQU   10                                                       00200000\n                         0000000B              18 R11      EQU   11                                                       00210000\n                         0000000C              19 R12      EQU   12                                                       00220000\n                         0000000D              20 R13      EQU   13                                                       00230000\n                         0000000E              21 R14      EQU   14                                                       00240000\n                         0000000F              22 R15      EQU   15                                                       00250000\n                                               23         PRINT ON,GEN\n                                               24         BPX1EQUS\n                         00000034              25+BPX1ACC   EQU             52  access                                    01-BPX1EQUS\n                         000003CC              26+BPX1ACK   EQU            972  auth_check_rsrc_np                        01-BPX1EQUS\n                         000001FC              27+BPX1ACP   EQU            508  accept                                    01-BPX1EQUS\n                         000003DC              28+BPX1AIO   EQU            988  asyncio                                   01-BPX1EQUS\n                         000000E0              29+BPX1ALR   EQU            224  alarm                                     01-BPX1EQUS\n                         00000424              30+BPX1ANR   EQU           1060  accept_and_recv                           01-BPX1EQUS\n                         00000440              31+BPX1ASP   EQU           1088  aio_suspend                               01-BPX1EQUS\n                         0000029C              32+BPX1ATM   EQU            668  attach_execmvs                            01-BPX1EQUS\n                         00000298              33+BPX1ATX   EQU            664  attach_exec                               01-BPX1EQUS\n                         00000200              34+BPX1BND   EQU            512  bind                                      01-BPX1EQUS\n                         000001E0              35+BPX1CCA   EQU            480  cond_cancel                               01-BPX1EQUS\n                         000003F4              36+BPX1CCS   EQU           1012  console_np                                01-BPX1EQUS\n                         00000054              37+BPX1CHA   EQU             84  chaudit                                   01-BPX1EQUS\n                         00000038              38+BPX1CHD   EQU             56  chdir                                     01-BPX1EQUS\n                         0000003C              39+BPX1CHM   EQU             60  chmod                                     01-BPX1EQUS\n                         00000040              40+BPX1CHO   EQU             64  chown                                     01-BPX1EQUS\n                         000002FC              41+BPX1CHP   EQU            764  chpriority                                01-BPX1EQUS\n                         000001F4              42+BPX1CHR   EQU            500  chattr                                    01-BPX1EQUS\n                         000003C8              43+BPX1CID   EQU            968  convert_id_np                             01-BPX1EQUS\n                         00000044              44+BPX1CLD   EQU             68  closedir                                  01-BPX1EQUS\n                         00000048              45+BPX1CLO   EQU             72  close                                     01-BPX1EQUS\n                         00000204              46+BPX1CON   EQU            516  connect                                   01-BPX1EQUS\n                         000001E4              47+BPX1CPO   EQU            484  cond_post                                 01-BPX1EQUS\n                         00000368              48+BPX1CRT   EQU            872  chroot                                    01-BPX1EQUS\n                         000001E8              49+BPX1CSE   EQU            488  cond_setup                                01-BPX1EQUS\n                         000001EC              50+BPX1CTW   EQU            492  cond_timed_wait                           01-BPX1EQUS\n                         000001F0              51+BPX1CWA   EQU            496  cond_wait                                 01-BPX1EQUS\n                         00000378              52+BPX1DEL   EQU            888  deletehfs                                 01-BPX1EQUS\n                         000003C0              53+BPX1ENV   EQU            960  oe_env_np                                 01-BPX1EQUS\n                         000000E4              54+BPX1EXC   EQU            228  exec                                      01-BPX1EQUS\n                         000000E8              55+BPX1EXI   EQU            232  _exit                                     01-BPX1EQUS\n                         000000EC              56+BPX1EXM   EQU            236  execmvs                                   01-BPX1EQUS\n1          UIMASM DFDSS OMVS exit                                                                               Page    4\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        000000C8              57+BPX1EXT   EQU            200  extlink_np                                01-BPX1EQUS\n                         0000008C              58+BPX1FCA   EQU            140  fchaudit                                  01-BPX1EQUS\n                         00000354              59+BPX1FCD   EQU            852  fchdir                                    01-BPX1EQUS\n                         00000058              60+BPX1FCM   EQU             88  fchmod                                    01-BPX1EQUS\n                         0000005C              61+BPX1FCO   EQU             92  fchown                                    01-BPX1EQUS\n                         000001F8              62+BPX1FCR   EQU            504  fchattr                                   01-BPX1EQUS\n                         00000060              63+BPX1FCT   EQU             96  fcntl                                     01-BPX1EQUS\n                         00000064              64+BPX1FPC   EQU            100  fpathconf                                 01-BPX1EQUS\n                         000000F0              65+BPX1FRK   EQU            240  fork                                      01-BPX1EQUS\n                         00000068              66+BPX1FST   EQU            104  fstat                                     01-BPX1EQUS\n                         0000006C              67+BPX1FSY   EQU            108  fsync                                     01-BPX1EQUS\n                         00000070              68+BPX1FTR   EQU            112  ftruncate                                 01-BPX1EQUS\n                         00000350              69+BPX1FTV   EQU            848  FstatVfs                                  01-BPX1EQUS\n                         00000400              70+BPX1GCL   EQU          1024  getclientid                                01-BPX1EQUS\n                         00000074              71+BPX1GCW   EQU            116  getcwd                                    01-BPX1EQUS\n                         000000F4              72+BPX1GEG   EQU            244  getegid                                   01-BPX1EQUS\n                         0000035C              73+BPX1GEP   EQU            860  getpgid                                   01-BPX1EQUS\n                         00000360              74+BPX1GES   EQU            864  getsid                                    01-BPX1EQUS\n                         000002E0              75+BPX1GET   EQU            736  w_getipc                                  01-BPX1EQUS\n                         000000F8              76+BPX1GEU   EQU            248  geteuid                                   01-BPX1EQUS\n                         00000304              77+BPX1GGE   EQU            772  getgrent                                  01-BPX1EQUS\n                         000000FC              78+BPX1GGI   EQU            252  getgrgid                                  01-BPX1EQUS\n                         00000100              79+BPX1GGN   EQU            256  getgrnam                                  01-BPX1EQUS\n                         00000104              80+BPX1GGR   EQU            260  getgroups                                 01-BPX1EQUS\n                         00000108              81+BPX1GID   EQU            264  getgid                                    01-BPX1EQUS\n                         00000404              82+BPX1GIV   EQU           1028  givesocket                                01-BPX1EQUS\n                         0000010C              83+BPX1GLG   EQU            268  getlogin                                  01-BPX1EQUS\n                         0000004C              84+BPX1GMN   EQU             76  w_getmntent                               01-BPX1EQUS\n                         0000020C              85+BPX1GNM   EQU            524  getpeername                               01-BPX1EQUS\n                         00000308              86+BPX1GPE   EQU            776  getpwent                                  01-BPX1EQUS\n                         00000110              87+BPX1GPG   EQU            272  getpgrp                                   01-BPX1EQUS\n                         00000114              88+BPX1GPI   EQU            276  getpid                                    01-BPX1EQUS\n                         00000118              89+BPX1GPN   EQU            280  getpwnam                                  01-BPX1EQUS\n                         0000011C              90+BPX1GPP   EQU            284  getppid                                   01-BPX1EQUS\n                         000001AC              91+BPX1GPS   EQU            428  w_getpsent                                01-BPX1EQUS\n                         00000394              92+BPX1GPT   EQU            916  grantpt                                   01-BPX1EQUS\n                         00000120              93+BPX1GPU   EQU            288  getpwuid                                  01-BPX1EQUS\n                         000002E8              94+BPX1GPY   EQU            744  getpriority                               01-BPX1EQUS\n                         00000334              95+BPX1GRL   EQU            820  getrlimit                                 01-BPX1EQUS\n                         00000338              96+BPX1GRU   EQU            824  getrusage                                 01-BPX1EQUS\n                         00000420              97+BPX1GTH   EQU           1056  __getthent                                01-BPX1EQUS\n                         000002F0              98+BPX1GTR   EQU            752  getitimer                                 01-BPX1EQUS\n                         00000124              99+BPX1GUG   EQU            292  getugrps                                  01-BPX1EQUS\n                         00000128             100+BPX1GUI   EQU            296  getuid                                    01-BPX1EQUS\n                         000003A8             101+BPX1GWD   EQU            936  getwd                                     01-BPX1EQUS\n                         00000208             102+BPX1HST   EQU            520  gethostid                                 01-BPX1EQUS\n                         00000078             103+BPX1IOC   EQU            120  w_ioctl                                   01-BPX1EQUS\n                         0000018C             104+BPX1IPT   EQU            396  MvsIptAffinity                            01-BPX1EQUS\n                         0000000C             105+BPX1ITY   EQU             12  isatty                                    01-BPX1EQUS\n                         00000134             106+BPX1KIL   EQU            308  kill                                      01-BPX1EQUS\n                         00000340             107+BPX1LCO   EQU            832  lchown                                    01-BPX1EQUS\n                         0000007C             108+BPX1LNK   EQU            124  link                                      01-BPX1EQUS\n                         00000370             109+BPX1LOD   EQU            880  loadhfs                                   01-BPX1EQUS\n                         00000080             110+BPX1LSK   EQU            128  lseek                                     01-BPX1EQUS\n                         00000214             111+BPX1LSN   EQU            532  listen                                    01-BPX1EQUS\n1          UIMASM DFDSS OMVS exit                                                                               Page    5\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000084             112+BPX1LST   EQU            132  lstat                                     01-BPX1EQUS\n                         000002D0             113+BPX1MAT   EQU            720  shmat                                     01-BPX1EQUS\n                         000002D4             114+BPX1MCT   EQU            724  shmctl                                    01-BPX1EQUS\n                         000002D8             115+BPX1MDT   EQU            728  shmdt                                     01-BPX1EQUS\n                         000002DC             116+BPX1MGT   EQU            732  shmget                                    01-BPX1EQUS\n                         00000088             117+BPX1MKD   EQU            136  mkdir                                     01-BPX1EQUS\n                         00000090             118+BPX1MKN   EQU            144  mknod                                     01-BPX1EQUS\n                         0000031C             119+BPX1MMP   EQU            796  mmap                                      01-BPX1EQUS\n                         00000094             120+BPX1MNT   EQU            148  mount                                     01-BPX1EQUS\n                         000002B0             121+BPX1MP    EQU            688  MVSpause                                  01-BPX1EQUS\n                         00000198             122+BPX1MPC   EQU            408  mvsprocclp                                01-BPX1EQUS\n                         000002A8             123+BPX1MPI   EQU            680  MVSpauseInit                              01-BPX1EQUS\n                         00000320             124+BPX1MPR   EQU            800  mprotect                                  01-BPX1EQUS\n                         00000150             125+BPX1MSD   EQU            336  mvsunsigsetup                             01-BPX1EQUS\n                         00000138             126+BPX1MSS   EQU            312  mvssigsetup                               01-BPX1EQUS\n                         00000324             127+BPX1MSY   EQU            804  msync                                     01-BPX1EQUS\n                         00000328             128+BPX1MUN   EQU            808  munmap                                    01-BPX1EQUS\n                         000002EC             129+BPX1NIC   EQU            748  nice                                      01-BPX1EQUS\n                         00000098             130+BPX1OPD   EQU            152  opendir                                   01-BPX1EQUS\n                         0000009C             131+BPX1OPN   EQU            156  open                                      01-BPX1EQUS\n                         00000210             132+BPX1OPT   EQU            528  getsockopt                                01-BPX1EQUS\n                         00000430             133+BPX1PAF   EQU           1072  __pid_affinity                            01-BPX1EQUS\n                         0000013C             134+BPX1PAS   EQU            316  pause                                     01-BPX1EQUS\n                         000000A0             135+BPX1PCF   EQU            160  pathconf                                  01-BPX1EQUS\n                         00000300             136+BPX1PCT   EQU            768  pfsctl                                    01-BPX1EQUS\n                         000003D8             137+BPX1PIO   EQU            984  w_pioctl                                  01-BPX1EQUS\n                         000000A4             138+BPX1PIP   EQU            164  pipe                                      01-BPX1EQUS\n                         000003A4             139+BPX1POL   EQU            932  poll                                      01-BPX1EQUS\n                         000001CC             140+BPX1PSI   EQU            460  pthread_setintr                           01-BPX1EQUS\n                         000001D8             141+BPX1PST   EQU            472  pthread_setintrtype                       01-BPX1EQUS\n                         000001C0             142+BPX1PTB   EQU            448  pthread_cancel                            01-BPX1EQUS\n                         000001B0             143+BPX1PTC   EQU            432  pthread_create                            01-BPX1EQUS\n                         000001BC             144+BPX1PTD   EQU            444  pthread_detach                            01-BPX1EQUS\n                         000001DC             145+BPX1PTI   EQU            476  pthread_testintr                          01-BPX1EQUS\n                         000001B8             146+BPX1PTJ   EQU            440  pthread_join                              01-BPX1EQUS\n                         000001D0             147+BPX1PTK   EQU            464  pthread_kill                              01-BPX1EQUS\n                         0000019C             148+BPX1PTQ   EQU            412  pthread_quiesc                            01-BPX1EQUS\n                         00000140             149+BPX1PTR   EQU            320  ptrace                                    01-BPX1EQUS\n                         000001C4             150+BPX1PTS   EQU            452  pthread_self                              01-BPX1EQUS\n                         000003F8             151+BPX1PTT   EQU           1016  pthread_tag_np                            01-BPX1EQUS\n                         000001B4             152+BPX1PTX   EQU            436  pthread_xandg                             01-BPX1EQUS\n                         00000314             153+BPX1PWD   EQU            788  __passwd                                  01-BPX1EQUS\n                         000002B4             154+BPX1QCT   EQU            692  msgctl                                    01-BPX1EQUS\n                         000003B4             155+BPX1QDB   EQU            948  querydub                                  01-BPX1EQUS\n                         000002B8             156+BPX1QGT   EQU            696  msgget                                    01-BPX1EQUS\n                         000002BC             157+BPX1QRC   EQU            700  msgrcv                                    01-BPX1EQUS\n                         00000184             158+BPX1QSE   EQU            388  quiesce                                   01-BPX1EQUS\n                         000002C0             159+BPX1QSN   EQU            704  msgsnd                                    01-BPX1EQUS\n                         0000021C             160+BPX1RCV   EQU            540  recv                                      01-BPX1EQUS\n                         000000A8             161+BPX1RDD   EQU            168  readdir                                   01-BPX1EQUS\n                         000000AC             162+BPX1RDL   EQU            172  readlink                                  01-BPX1EQUS\n                         00000218             163+BPX1RDV   EQU            536  readv                                     01-BPX1EQUS\n                         000003AC             164+BPX1RDX   EQU            940  read_extlink                              01-BPX1EQUS\n                         00000358             165+BPX1RD2   EQU            856  readdir2                                  01-BPX1EQUS\n                         000000B0             166+BPX1RED   EQU            176  read                                      01-BPX1EQUS\n1          UIMASM DFDSS OMVS exit                                                                               Page    6\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000258             167+BPXB1REL  EQU            600  v_rel                                     01-BPX1EQUS\n                         000000B4             168+BPX1REN   EQU            180  rename                                    01-BPX1EQUS\n                         00000220             169+BPX1RFM   EQU            544  recvfrom                                  01-BPX1EQUS\n                         000000BC             170+BPX1RMD   EQU            188  rmdir                                     01-BPX1EQUS\n                         00000008             171+BPX1RMG   EQU              8  resource                                  01-BPX1EQUS\n                         00000224             172+BPX1RMS   EQU            548  recvmsg                                   01-BPX1EQUS\n                         00000374             173+BPX1RPH   EQU            884  realpath                                  01-BPX1EQUS\n                         000000B8             174+BPX1RWD   EQU            184  rewinddir                                 01-BPX1EQUS\n                         0000043C             175+BPX1SA2   EQU           1084  __sigactionset                            01-BPX1EQUS\n                         000002C4             176+BPX1SCT   EQU            708  semctl                                    01-BPX1EQUS\n                         0000012C             177+BPX1SDD   EQU            300  set_dub_default                           01-BPX1EQUS\n                         00000414             178+BPX1SEC   EQU           1044  __security                                01-BPX1EQUS\n                         000001A8             179+BPX1SEG   EQU            424  setegid                                   01-BPX1EQUS\n                         00000228             180+BPX1SEL   EQU            552  select                                    01-BPX1EQUS\n                         000001A4             181+BPX1SEU   EQU            420  seteuid                                   01-BPX1EQUS\n                         00000428             182+BPX1SF    EQU           1064  send_file PConly                          01-BPX1EQUS\n                         0000030C             183+BPX1SGE   EQU            780  setgrent                                  01-BPX1EQUS\n                         00000148             184+BPX1SGI   EQU            328  setgid                                    01-BPX1EQUS\n                         00000318             185+BPX1SGR   EQU            792  setgroups                                 01-BPX1EQUS\n                         000002C8             186+BPX1SGT   EQU            712  semget                                    01-BPX1EQUS\n                         0000023C             187+BPX1SHT   EQU            572  shutdown                                  01-BPX1EQUS\n                         00000144             188+BPX1SIA   EQU            324  sigaction                                 01-BPX1EQUS\n                         000003EC             189+BPX1SIN   EQU           1004  server_init                               01-BPX1EQUS\n                         00000154             190+BPX1SIP   EQU            340  sigpending                                01-BPX1EQUS\n                         0000042C             191+BPX1SLK   EQU           1068  __shm_lock                                01-BPX1EQUS\n                         00000158             192+BPX1SLP   EQU            344  sleep                                     01-BPX1EQUS\n                         0000040C             193+BPX1SMF   EQU           1036  __smf_record                              01-BPX1EQUS\n                         00000230             194+BPX1SMS   EQU            560  sendmsg                                   01-BPX1EQUS\n                         0000022C             195+BPX1SND   EQU            556  send                                      01-BPX1EQUS\n                         00000240             196+BPX1SOC   EQU            576  socket_pair                               01-BPX1EQUS\n                         000002CC             197+BPX1SOP   EQU            716  semop                                     01-BPX1EQUS\n                         000001A0             198+BPX1SPB   EQU            416  sigputback                                01-BPX1EQUS\n                         00000310             199+BPX1SPE   EQU            784  setpwent                                  01-BPX1EQUS\n                         0000015C             200+BPX1SPG   EQU            348  setpgid                                   01-BPX1EQUS\n                         00000160             201+BPX1SPM   EQU            352  sigprocmask                               01-BPX1EQUS\n                         000002F8             202+BPX1SPN   EQU            760  spawn                                     01-BPX1EQUS\n                         00000238             203+BPX1SPR   EQU            568  setpeer                                   01-BPX1EQUS\n                         000003F0             204+BPX1SPW   EQU           1008  server_pwu                                01-BPX1EQUS\n                         000002E4             205+BPX1SPY   EQU            740  setpriority                               01-BPX1EQUS\n                         00000380             206+BPX1SRG   EQU            896  setregid                                  01-BPX1EQUS\n                         00000330             207+BPX1SRL   EQU            816  setrlimit                                 01-BPX1EQUS\n                         0000037C             208+BPX1SRU   EQU            892  setreuid                                  01-BPX1EQUS\n                         00000438             209+BPX1SRX   EQU           1080  srx_np                                    01-BPX1EQUS\n                         00000164             210+BPX1SSI   EQU            356  setsid                                    01-BPX1EQUS\n                         00000168             211+BPX1SSU   EQU            360  sigsuspend                                01-BPX1EQUS\n                         000000C0             212+BPX1STA   EQU            192  stat                                      01-BPX1EQUS\n                         00000434             213+BPX1STE   EQU           1076  set_timer_event                           01-BPX1EQUS\n                         00000050             214+BPX1STF   EQU             80  w_statfs                                  01-BPX1EQUS\n                         000002AC             215+BPX1STL   EQU            684  set_limits                                01-BPX1EQUS\n                         00000234             216+BPX1STO   EQU            564  sendto                                    01-BPX1EQUS\n                         000002F4             217+BPX1STR   EQU            756  setitimer                                 01-BPX1EQUS\n                         0000034C             218+BPX1STV   EQU            844  StatVfs                                   01-BPX1EQUS\n                         00000448             219+BPX1STW   EQU           1096  sigtimedwait                              01-BPX1EQUS\n                         0000016C             220+BPX1SUI   EQU            364  setuid                                    01-BPX1EQUS\n                         000001D4             221+BPX1SWT   EQU            468  sigwait                                   01-BPX1EQUS\n1          UIMASM DFDSS OMVS exit                                                                               Page    7\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000170             222+BPX1SYC   EQU            368  sysconf                                   01-BPX1EQUS\n                         000000C4             223+BPX1SYM   EQU            196  symlink                                   01-BPX1EQUS\n                         00000364             224+BPX1SYN   EQU            868  sync                                      01-BPX1EQUS\n                         00000408             225+BPX1TAK   EQU           1032  takesocket                                01-BPX1EQUS\n                         00000018             226+BPX1TDR   EQU             24  tcdrain                                   01-BPX1EQUS\n                         00000014             227+BPX1TFH   EQU             20  tcflush                                   01-BPX1EQUS\n                         0000001C             228+BPX1TFW   EQU             28  tcflow                                    01-BPX1EQUS\n                         00000020             229+BPX1TGA   EQU             32  tcgetattr                                 01-BPX1EQUS\n                         00000384             230+BPX1TGC   EQU            900  tcgetcp                                   01-BPX1EQUS\n                         00000024             231+BPX1TGP   EQU             36  tcgetpgrp                                 01-BPX1EQUS\n                         00000390             232+BPX1TGS   EQU            912  tcgetsid                                  01-BPX1EQUS\n                         00000174             233+BPX1TIM   EQU            372  times                                     01-BPX1EQUS\n                         000003C4             234+BPX1TLS   EQU            964  tsk_lvl_sec_np                            01-BPX1EQUS\n                         0000033C             235+BPX1TRU   EQU            828  truncate                                  01-BPX1EQUS\n                         00000028             236+BPX1TSA   EQU             40  tcsetattr                                 01-BPX1EQUS\n                         0000002C             237+BPX1TSB   EQU             44  tcsendbreak                               01-BPX1EQUS\n                         00000388             238+BPX1TSC   EQU            904  tcsetcp                                   01-BPX1EQUS\n                         00000030             239+BPX1TSP   EQU             48  tcsetpgrp                                 01-BPX1EQUS\n                         0000038C             240+BPX1TST   EQU            908  tcsettables                               01-BPX1EQUS\n                                              241         BPXYCONS\n                                              242+** BPXYCONS: Syscall constants\n                                              243+**  Used By: Many syscalls\n                         00100000             244+DFLT_ARG_MAX         EQU   1048576  Constant for default ARG_MAX  @EGC  01-BPXYCONS\n                         00000006             245+DFLT_CHILD_MAX       EQU   6    Constant for default CHILD_MAX          01-BPXYCONS\n                                              246+*                               (_POSIX_CHILD_MAX)\n                         00000064             247+DFLT_CLK_TCK         EQU   100  Constant for default CLK_TCK            01-BPXYCONS\n                                              248+*                               (100 ticks per second)\n                         00001FFF             249+DFLT_NGROUPS_MAX     EQU   8191 Constant for default NGROUPS_MAX        01-BPXYCONS\n                                              250+*                               (RACF Maximum value)\n                         00000010             251+DFLT_OPEN_MAX        EQU   16   Constant for default OPEN_MAX           01-BPXYCONS\n                                              252+*                               (_POSIX_OPEN_MAX)\n                         00000009             253+DFLT_TZNAME_MAX      EQU   9    Constant for default TZNAME_MAX         01-BPXYCONS\n                         00000001             254+DFLT_JOB_CONTROL     EQU   1    Constant for default JOB_CONTROL        01-BPXYCONS\n                         00000001             255+DFLT_SAVED_IDS       EQU   1    Constant for default SAVED_IDS          01-BPXYCONS\n                         00030961             256+DFLT_VERSION         EQU   199009  Constant for default VERSION         01-BPXYCONS\n                         00000032             257+DFLT_THREAD_TASKS_MAX_NP  EQU  50  Constant default THREAD_TASKS_MAX_NP 01-BPXYCONS\n                         00000008             258+DFLT_USERIDLEN_MAX   EQU   8    Max characters for a userid       @DKA  01-BPXYCONS\n                         00000008             259+DFLT_PASSWDLEN_MAX   EQU   8    Max characters for a password     @DKA  01-BPXYCONS\n                         00000064             260+DFLT_PASSWDPHRLEN_MAX EQU  100 Max characters for password phrase @EBA  01-BPXYCONS\n                         00000001             261+DFLT_2_CHAR_TERM     EQU   1    Constant default SC_2_CHAR_TERM  @P1A   01-BPXYCONS\n0                                             263+* items from sysconf()\n                         00000001             264+SC_ARG_MAX           EQU   1    Constant for querying ARG_MAX           01-BPXYCONS\n                         00000002             265+SC_CHILD_MAX         EQU   2    Constant for querying CHILD_MAX         01-BPXYCONS\n                         00000003             266+SC_CLK_TCK           EQU   3    Constant for querying CLK_TCK           01-BPXYCONS\n                         00000004             267+SC_JOB_CONTROL       EQU   4    Constant for querying JOB_CONTROL       01-BPXYCONS\n                         00000005             268+SC_NGROUPS_MAX       EQU   5    Constant for querying NGROUPS_MAX       01-BPXYCONS\n                         00000006             269+SC_OPEN_MAX          EQU   6    Constant for querying OPEN_MAX          01-BPXYCONS\n                         00000007             270+SC_SAVED_IDS         EQU   7    Constant for querying SAVED_IDS         01-BPXYCONS\n                         00000009             271+SC_TZNAME_MAX        EQU   9    Constant for querying TZNAME_MAX        01-BPXYCONS\n                         0000000A             272+SC_VERSION           EQU   10   Constant for querying VERSION           01-BPXYCONS\n                         0000000B             273+SC_THREAD_TASKS_MAX_NP EQU 11   Constant to query THREAD_TASKS_MAX_NP   01-BPXYCONS\n                         0000000C             274+SC_2_CHAR_TERM       EQU   12   Constant for querying VERSION    @P1A   01-BPXYCONS\n                         0000000D             275+SC_THREADS_MAX_NP    EQU   13   Constant to query THREADS_MAX_NP @D5A   01-BPXYCONS\n                         0000000E             276+SC_MMAP_MEM_MAX_NP   EQU   14   Constant to query MMAP_MEM_MAX_NP@DAA   01-BPXYCONS\n1          UIMASM DFDSS OMVS exit                                                                               Page    8\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        0000000F             277+SC_TTY_GROUP         EQU   15   Constant to query TTY GROUP      @PEA   01-BPXYCONS\n                         00000010             278+SC_PAGESIZE          EQU   16   Constant to query Page Size      @D2A   01-BPXYCONS\n                         00000010             279+SC_PAGE_SIZE         EQU   16   Constant to query Page Size      @D2A   01-BPXYCONS\n0                                             281+* wait function code                                             @DCA\n                         00000001             282+#WAIT3               EQU   1    wait3() function code            @DCA   01-BPXYCONS\n                         00000002             283+#WAITID              EQU   2    waitid() function code           @DCA   01-BPXYCONS\n0                                             285+* items from waitf()\n                         00000001             286+WNOHANG              EQU   1    Wait, do not suspend execution          01-BPXYCONS\n                         00000002             287+WUNTRACED            EQU   2    Wait, return status of stopped child    01-BPXYCONS\n                         00000004             288+WCONTINUED           EQU   4    Wait, return status of continued child  01-BPXYCONS\n                                              289+*                                                                @DCA\n                         00000008             290+WEXITED              EQU   8    Wait for process that have exited       01-BPXYCONS\n                                              291+*                                                                @DCA\n                         00000010             292+WSTOPPED             EQU  16    Wait, return status of stopped child    01-BPXYCONS\n                                              293+*                                                                @DCA\n                         00000020             294+WNOWAIT              EQU  32    Wait, return status of a child without  01-BPXYCONS\n                                              295+*                               changing the state.  The child can be\n                                              296+*                               waited for again.                @DCA\n0                                             298+* waitid() id type options                                       @DCA\n                         00000000             299+P_PID                EQU   0    Wait for the child with a process ID    01-BPXYCONS\n                                              300+*                                                                @DCA\n                         00000001             301+P_PGID               EQU   1    Wait for any child with a process       01-BPXYCONS\n                                              302+*                               group ID                         @DCA\n                         00000002             303+P_ALL                EQU   2    Wait for any child               @DCA   01-BPXYCONS\n0                                             305+* BPX1PTX Options\n                         00000000             306+PTEXITTHREAD         EQU   0    Pthread exit                            01-BPXYCONS\n                         00000001             307+PTGETNEWTHREAD       EQU   1    Pthread get new                         01-BPXYCONS\n                         00000002             308+PTFAILIFLASTTHREAD   EQU   2    Pthread fail if last thread      @D4A   01-BPXYCONS\n0                        00000001             310+QUIESCE_TERM         EQU   1    Quiesce threads type = term      @D3A   01-BPXYCONS\n                         00000002             311+QUIESCE_FORCE        EQU   2    Quiesce threads type = force     @D3A   01-BPXYCONS\n                         00000003             312+QUIESCE_QUERY        EQU   3    Alias of pthread_query           @P4C   01-BPXYCONS\n                         00000003             313+PTHREAD_QUERY        EQU   3    Quiesce threads type = query     @P4A   01-BPXYCONS\n                         00000004             314+QUIESCE_FREEZE       EQU   4    Quiesce threads type = freeze    @D6A   01-BPXYCONS\n                         00000005             315+QUIESCE_UNFREEZE     EQU   5    Quiesce threads type = unfreeze  @D6A   01-BPXYCONS\n                         00000006             316+FREEZE_THIS_THREAD   EQU   6    Quiesce threads type = freezeme  @D6A   01-BPXYCONS\n                                              317+* Skip 7 because of collision with BPXZCONS Freeze_Force\n                         00000008             318+FREEZE_EXIT          EQU   8    Quiesce threads type = freeze_exit      01-BPXYCONS\n                         00000009             319+QUIESCE_SRB          EQU   9    Quiesce threads type = SRBs      @DGA   01-BPXYCONS\n                                              320+* Skip 10 and 11 due to collision with BPXZCONS Freeze/Unfreeze Fast\n                                              321+*                                                                @P6A\n0                        00000000             323+PTHREAD_INTR_ENABLE#       EQU 0  Cancel request type = enabled         01-BPXYCONS\n                         00000001             324+PTHREAD_INTR_DISABLE#      EQU 1  Cancel request type = disabled        01-BPXYCONS\n                         00000000             325+PTHREAD_INTR_CONTROLLED#   EQU 0  Cancel request type = controlled      01-BPXYCONS\n                         00000001             326+PTHREAD_INTR_ASYNCHRONOUS# EQU 1  Cancel request type = Asynchronous    01-BPXYCONS\n0                        00000000             328+STDIN_FILENO         EQU   0    Standard input value, file descriptor   01-BPXYCONS\n                         00000001             329+STDOUT_FILENO        EQU   1    Standard output value, file descriptor  01-BPXYCONS\n                         00000002             330+STDERR_FILENO        EQU   2    Standard error value, file descriptor   01-BPXYCONS\n1          UIMASM DFDSS OMVS exit                                                                               Page    9\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000000             332+DUBTHREAD            EQU   0    Dub a thread default setting     @L1A   01-BPXYCONS\n                         00000001             333+DUBPROCESS           EQU   1    Dub a process default setting    @L1A   01-BPXYCONS\n                         00000002             334+DUBTASKACEE          EQU   2    Dub a task ACEE setting          @02A   01-BPXYCONS\n                         00000004             335+DUBPROCESSDEFER      EQU   4    Dub a process - but defer dub    @04A   01-BPXYCONS\n                         00000008             336+DUBNOSIGNALS         EQU   8    Dub a process - no signals       @DWA   01-BPXYCONS\n                         00000010             337+DUBJOBPERM           EQU   16   Dub as a permanent Job           @DYA   01-BPXYCONS\n                         00000020             338+DUBNOJSTUNDUB        EQU   32   Dub process such that jobstep does not  01-BPXYCONS\n                                              339+*                                                                @DYA\n                         00000040             340+DUBABENDCALLS        EQU   64   Dub process such that system calls      01-BPXYCONS\n                                              341+*                               abend during a shutdown/restart window\n                                              342+*                                                                @DYA\n                         00000080             343+DUBUNIQUEACEE        EQU   128                                   @07A   01-BPXYCONS\n                         00000100             344+DUBFAILNOTREADY      EQU   256  Fail dub if kernel is not up     @F1A   01-BPXYCONS\n0                        00000001             346+STL_MAX_TASKS        EQU   1    Replace MaxThreadTask only       @D7A   01-BPXYCONS\n                         00000002             347+STL_MAX_THREADS      EQU   2    Replace MaxThreads only          @D7A   01-BPXYCONS\n                         00000003             348+STL_SET_BOTH         EQU   3    Replace both limits              @D7A   01-BPXYCONS\n0                        00000014             350+NICE_ZERO            EQU   20   Default Process Scheduling Priority     01-BPXYCONS\n0                        00000001             352+PRIO_PROCESS         EQU   1    Looking for a specific process ID       01-BPXYCONS\n                         00000002             353+PRIO_PGRP            EQU   2    Looking for processes in a process grp  01-BPXYCONS\n                         00000003             354+PRIO_USER            EQU   3    Looking for processes for a user ID     01-BPXYCONS\n0                        00000001             356+CPRIO_ABSOLUTE       EQU   1    Priority value is an absolute value     01-BPXYCONS\n                         00000002             357+CPRIO_RELATIVE       EQU   2    Priority value is a relative value      01-BPXYCONS\n0                                             359+*   Define equates for memory map\n                         00000001             360+PROT_READ            EQU   1    Mapped data can be read          @DAA   01-BPXYCONS\n                         00000002             361+PROT_WRITE           EQU   2    Mapped data can be written       @DAA   01-BPXYCONS\n                         00000004             362+PROT_NONE            EQU   4    Mapped data cannot be accessed   @DAA   01-BPXYCONS\n                         00000008             363+PROT_EXEC            EQU   8    Mapped data can be executed (treated    01-BPXYCONS\n                                              364+*                               as PROT_READ)                    @DAA\n0                        00000001             366+MAP_PRIVATE          EQU   1    Changes to the mapped data are private  01-BPXYCONS\n                         00000002             367+MAP_SHARED           EQU   2    Changes to the mapped data are shared   01-BPXYCONS\n                         00000004             368+MAP_FIXED            EQU   4    Interpret map address exactly    @DAA   01-BPXYCONS\n                         00000008             369+MAP_MEGA             EQU   8    Use megabyte allocations         @D4A   01-BPXYCONS\n0                        00000001             371+MS_SYNC              EQU   1    Performs synchronous writes      @DAA   01-BPXYCONS\n                         00000002             372+MS_ASYNC             EQU   2    Performs asynchronous writes     @DAA   01-BPXYCONS\n                         00000004             373+MS_INVALIDATE        EQU   4    Invalidate the cached memory mapped     01-BPXYCONS\n                                              374+*                               pages                            @DAA\n0                                             376+*   Define equates for spawn                                   @D9A\n                         FFFFFFFF             377+SPAWN_FDCLOSED       EQU  -1    Do not inherit this file desc  @D9A     01-BPXYCONS\n0                        00000004             379+RLIMIT_CORE          EQU   4    Limit size of core dump          @DBA   01-BPXYCONS\n                         00000000             380+RLIMIT_CPU           EQU   0    Limit CPU time per process       @DBA   01-BPXYCONS\n                         00000001             381+RLIMIT_FSIZE         EQU   1    Limit file size                  @DBA   01-BPXYCONS\n                         00000006             382+RLIMIT_NOFILE        EQU   6    Limit number of open files       @DBA   01-BPXYCONS\n                         00000005             383+RLIMIT_AS            EQU   5    Limit address space size         @DBA   01-BPXYCONS\n                         00000007             384+RLIMIT_MEMLIMIT      EQU   7    Limit storage above the bar      @E0A   01-BPXYCONS\n0                        7FFFFFFF             386+RLIM_INFINITY        EQU   2147483647 No limit value             @DBA   01-BPXYCONS\n1          UIMASM DFDSS OMVS exit                                                                               Page   10\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000000             388+RUSAGE_SELF          EQU   0    Rusage for current process       @DBA   01-BPXYCONS\n                         FFFFFFFF             389+RUSAGE_CHILDREN      EQU  -1    Rusage for terminated children   @DBA   01-BPXYCONS\n0                                             391+*   Define equates for querydub output status\n                         00000001             392+QDB_DUBBED_FIRST     EQU   1    Task has already been dubbed.           01-BPXYCONS\n                                              393+*                               This task and this RB caused the\n                                              394+*                               dub.                             @DCA\n                         00000002             395+QDB_DUBBED           EQU   2    Task has already been dubbed.           01-BPXYCONS\n                                              396+*                               Other task or other RB caused\n                                              397+*                               the dub                          @DCA\n                         00000004             398+QDB_DUB_MAY_FAIL     EQU   4    Task has not been dubbed, but may       01-BPXYCONS\n                                              399+*                               fail if attempted.  Most likely\n                                              400+*                               reason for failure will be a missing\n                                              401+*                               or incomplete user security profile,\n                                              402+*                               or OMVS segment not defined      @DCA\n                         00000008             403+QDB_DUB_OKAY         EQU   8    Task has not been dubbed, and should    01-BPXYCONS\n                                              404+*                               succeed if attempted             @DCA\n                         00000010             405+QDB_DUB_AS_PROCESS   EQU   16   Task has not been dubbed, but its       01-BPXYCONS\n                                              406+*                               address space has. New task will dub\n                                              407+*                               as another process within the address\n                                              408+*                               space                            @DCA\n                         00000020             409+QDB_DUB_AS_THREAD    EQU   32   Task has not been dubbed, but its       01-BPXYCONS\n                                              410+*                               address space has. New task will dub as\n                                              411+*                               a thread within the process      @DCA\n0                                             413+*   Define equates for oe_env_np syscall function codes\n                         00000001             414+ENQWAIT_PROCESS      EQU   1    Examine/Change ENQ wait interruption    01-BPXYCONS\n                                              415+*                               state                            @P6A\n                         00000002             416+FREEZE_EXIT_REG      EQU   2    Register/deregister an exit             01-BPXYCONS\n                                              417+*                               for pthread_quiesce(freeze_exit) @P6A\n                         00000003             418+MVS_USERID           EQU   3    Retrieve MVS userid of invoker   @P7A   01-BPXYCONS\n                         00000004             419+ENV_TOGGLE_SEC       EQU   4    Toggle btw task/process security @P7A   01-BPXYCONS\n                         00000005             420+DFP_CLEANUP_EXIT_REG EQU   5    Register DFP Close cleanup exit  @01A   01-BPXYCONS\n                         00000006             421+BPXK_PARAMETER       EQU   6    Env Vars to Kernel               @P9A   01-BPXYCONS\n                         00000007             422+ENV_STOR_SERVICE     EQU   7    Swappable or Non-Swappable              01-BPXYCONS\n                                              423+*                               address space                    @DJA\n                         00000008             424+QUICK_FREEZE_EXIT_REG EQU  8    Register/deregister an exit for         01-BPXYCONS\n                                              425+*                               fast pthread_quiesce_and_get     @DUA\n                         00000009             426+SHUTDOWN_REG         EQU  9     Register/block for shutdown             01-BPXYCONS\n                                              427+*                               processing                       @DXA\n                         0000000A             428+WRITE_DOWN           EQU  10    Query/Alter write_down state of an      01-BPXYCONS\n                                              429+*                               ACEE (MLS support)               @E5A\n                         0000000B             430+PIDXFER_QUERY        EQU  11    Query if process image is a result of   01-BPXYCONS\n                                              431+*                               a PIDXFER                        @DXA\n                         0000000C             432+QUERY_MODE           EQU  12    Query AMODE/RMODE/AMODE capability of   01-BPXYCONS\n                                              433+*                               target proess                    @E1A\n                         0000000D             434+MUST_STAY_CLEAN      EQU  13    ENABLE/QUERY Must Stay Clean state of   01-BPXYCONS\n                                              435+*                               the invoking process             @E9A\n0                                             437+*   Define equates for possible options of ENV_STOR_SERVICE\n                                              438+*   For future additions, make equates multiples of 2\n                                              439+*                                                               4@PED\n                         00000001             440+BPX_SWAP         EQU   1    Make the address space swappable     @PEC   01-BPXYCONS\n                         00000002             441+BPX_NONSWAP      EQU   2    Make the address space non-swappable        01-BPXYCONS\n                                              442+*                                                                @PEC\n1          UIMASM DFDSS OMVS exit                                                                               Page   11\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                             444+*                                                                @E9A\n                                              445+*   Define equates for possible options of MUST_STAY_CLEAN       @E9A\n                                              446+* @E9A\n                         00000000             447+MSC_QUERY        EQU   0    Query current Must Stay Clean state  @E9A   01-BPXYCONS\n                         00000001             448+MSC_ENABLE       EQU   1    Enable Must Stay Clean state         @E9A   01-BPXYCONS\n                                              449+*                                                                @E9A\n                                              450+*   Define possible output for MSC_QUERY option                  @E9A\n                                              451+* @E9A\n                         00000000             452+MSC_DISABLED     EQU   0     Query result: disabled              @E9A   01-BPXYCONS\n                         00000001             453+MSC_ENABLED      EQU   1     Query result: enabled even accoss Job      01-BPXYCONS\n                                              454+*                            Step termination                    @E9A\n                         00000002             455+MSC_ENABLED_COND EQU   2     Query result: enabled conditionally,       01-BPXYCONS\n                                              456+*                            Job Step termination will disable   @E9A\n                                              457+*\n                                              458+*   Define equates for all possible options for WRITE_DOWN function\n                                              459+*   code of BPX1ENV\n                                              460+*\n                         00000000             461+WD_OUERY         EQU   0     Query write_down                    @E5A   01-BPXYCONS\n                         00000001             462+WD_ACTIVATE      EQU   1     Activate write_down                 @E5A   01-BPXYCONS\n                         00000002             463+WD_INACTIVATE    EQU   2     Inactivate write_down               @E5A   01-BPXYCONS\n                         00000003             464+WD_RESET         EQU   3     Reset write_down to default         @E5A   01-BPXYCONS\n                                              465+*\n                         00000001             466+WD_SCOPE_AS      EQU   1     Target ACEE is AS                   @E5A   01-BPXYCONS\n                         00000002             467+WD_SCOPE_THD     EQU   2     Target ACEE is task                 @E5A   01-BPXYCONS\n                                              468+*\n                         00000001             469+WD_IS_ACTIVE     EQU   1     Query result: active                @E5A   01-BPXYCONS\n                         00000000             470+WD_IS_INACTIVE   EQU   0     Query result: inactive              @E5A   01-BPXYCONS\n                                              471+*\n                                              472+*   Define equates for QUERY_MODE return values                  @E1A\n                                              473+*                                                                @E1A\n                         00000001             474+BIT24_MODE           EQU   1    24 bit AMODE, RMODE or AMODE cap.@E1A   01-BPXYCONS\n                         00000002             475+BIT31_MODE           EQU   2    31 bit AMODE, RMODE or AMODE cap.@E1A   01-BPXYCONS\n                         00000003             476+BIT64_MODE           EQU   3    64 bit AMODE, RMODE or AMODE cap.@E1A   01-BPXYCONS\n                         00000004             477+AMODE_INITIALIZING   EQU   4    AMODE for process not known yet  @PNA   01-BPXYCONS\n0                                             479+*   Define equates for possible options of ENV_SHUTDOWN_REG\n                                              480+*                                                                @DYA\n                         00000001             481+ENV_REGISTERBLOCK     EQU  1   Register to Block Shutdown        @DYA   01-BPXYCONS\n                         00000002             482+ENV_REGISTERPERMP     EQU  2   Register as a Permanent job/proc  @DYA   01-BPXYCONS\n                         00000003             483+ENV_DEREGISTERBLOCK   EQU  3   Dereg as a blocking job/proc      @DYA   01-BPXYCONS\n                         00000004             484+ENV_DEREGISTERPERM    EQU  4   Dereg as a permanent job/proc     @DYA   01-BPXYCONS\n                         00000005             485+ENV_REGISTERNOTIFY    EQU  5   Register as a notify job/proc     @DYA   01-BPXYCONS\n                         00000006             486+ENV_DEREGISTERNOTIFY  EQU  6   Dereg as a notify job/proc        @DYA   01-BPXYCONS\n                         00000001             487+ENV_REGISTERJOB       EQU  1   Register Job                      @DYA   01-BPXYCONS\n                         00000002             488+ENV_REGISTERPROC      EQU  2   Register Process                  @DYA   01-BPXYCONS\n                                              489+*                                                                @DYA\n0                                             491+*   Define equates for PIDXFER_QUERY return values               @DXA\n                                              492+*                                                                @DXA\n                         00000001             493+PIDXFER_YES          EQU   1    Process was PIDXFERed            @DXA   01-BPXYCONS\n                         00000002             494+PIDXFER_NO           EQU   2    Process was not PIDXFERed        @DXC   01-BPXYCONS\n0                                             496+*   Define equates for versions of OSMF on BPXESMF syscall\n                         00000001             497+OSMF_VER_HOM1110     EQU   1    Version 1 of OSMF, for HOM1110   @P5A   01-BPXYCONS\n                         00000002             498+OSMF_VER_HOM1120     EQU   2    Version 2 of OSMF, for HOM1120   @P5A   01-BPXYCONS\n1          UIMASM DFDSS OMVS exit                                                                               Page   12\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000003             499+OSMF_VER_HOM1130     EQU   3    Version 3 of OSMF, for HOM1130   @P5A   01-BPXYCONS\n0                                             501+*   Define equates for task ecurity syscall function codes\n                         00000001             502+TLS_CREATE_THREAD_SEC# EQU 1    Build Task Security              @P7A   01-BPXYCONS\n                         00000002             503+TLS_DELETE_THREAD_SEC# EQU 2    Delete Task Security             @P7A   01-BPXYCONS\n                         00000003             504+TLS_TASK_ACEE#         EQU 3    set posix identity from task ACEE@DYA   01-BPXYCONS\n                         00000004             505+TLS_TASK_ACEE_USP#     EQU 4    User passed ACEE/USP pair        @E6A   01-BPXYCONS\n                         00000005             506+TLS_DAEMON_THREAD_SEC# EQU 5    Build unauthenticated Security   @E8A   01-BPXYCONS\n                         00000001             507+TLS_IDENTITY_USERID#   EQU 1    User identity: 1-8 char userid   @P7A   01-BPXYCONS\n                         00000002             508+TLS_IDENTITY_UID#      EQU 2    User identity: 4-byte uid        @P7A   01-BPXYCONS\n                         00000004             509+TLS_IDENTITY_CERT#     EQU 4    User identity: CERT structure    @PFA   01-BPXYCONS\n0                                             511+*   Define equates for __Security syscall\n                                              512+*   __Security function code\n                         00000001             513+SECURITY_CREATE#       EQU 1    Create new security environment  @DKA   01-BPXYCONS\n                         00000002             514+SECURITY_CERTREG#      EQU 2    Register certificate with caller @DOA   01-BPXYCONS\n                         00000003             515+SECURITY_CERTDEREG#    EQU 3    DeReg certificate from caller    @DOA   01-BPXYCONS\n                         00000004             516+SECURITY_CERTAUTH#     EQU 4    Authorize certificate from caller@E3A   01-BPXYCONS\n                                              517+*   __Security user identity\n                         00000001             518+SECURITY_USERID#       EQU 1    User identity is 1-8 char userid @DKA   01-BPXYCONS\n                         00000002             519+SECURITY_CERTIFICATE#  EQU 2    User identity is a certificate   @DKA   01-BPXYCONS\n0                                             521+*   Define equates for convert_id_np (BPX1CID) syscall function codes\n                         00000001             522+CID_GET_UUID#          EQU 1    Retrieve UUID                    @P8A   01-BPXYCONS\n                         00000002             523+CID_GET_USERID#        EQU 2    Retrieve userid                  @P8A   01-BPXYCONS\n0                                             525+*   Define equates for __pid_affinity (BPX1PAF) syscall function codes\n                         00000001             526+PAF_ADD_PID#           EQU 1    Add PID to affinity list         @DMA   01-BPXYCONS\n                         00000002             527+PAF_DELETE_PID#        EQU 2    Delete PID from affinity list    @DMA   01-BPXYCONS\n0                                             529+* Define equates for auth_check_resource_np  syscall access types\n                         00000001             530+ACK_READ#              EQU 1    Test READ access                 @P8A   01-BPXYCONS\n                         00000002             531+ACK_UPDATE#            EQU 2    Test UPDATE access               @P8A   01-BPXYCONS\n                         00000003             532+ACK_CONTROL#           EQU 3    Test CONTROL access              @P8A   01-BPXYCONS\n                         00000004             533+ACK_ALTER#             EQU 4    Test ALTER access                @P8A   01-BPXYCONS\n0                                             535+*   The high order two bytes of the reason codes returned by\n                                              536+*   OpenMVS services contains a value that is used to qualify\n                                              537+*   the contents of the low order two bytes. If the contents of\n                                              538+*   the high-order two bytes are within the range of #CMID_LO to\n                                              539+*   #CMID_HI, the error represented by the reason code is defined\n                                              540+*   by OpenMVS. If the contents of the high order two bytes lie\n                                              541+*   outside the range, the error represented by the reason code\n                                              542+*   is not an OpenMVS reason code.\n                         00000000             543+#CMID_LOW            EQU   0000   Low range                             01-BPXYCONS\n                         000020FF             544+#CMID_HI             EQU   8447   High range                            01-BPXYCONS\n                                              545+*   Define equates for console cmd\n                         000045BA             546+CC_MAX_MSG_LENGTH       EQU 17850 Max Wto string length for SUs   @DIC  01-BPXYCONS\n                         00004574             547+CC_MAX_MSG_LENGTH_NONSU EQU 17780 Max Wto string length for nonSU @DIC  01-BPXYCONS\n                         00000080             548+CC_MODIFY_BUFFER_LENGTH EQU 128  Length of Modify Buffer          @PAC  01-BPXYCONS\n                         00000001             549+CONSOLE_MODIFY          EQU   1  Service interrupted by Modify    @PAC  01-BPXYCONS\n                         00000002             550+CONSOLE_STOP            EQU   2  Service interrupted by Stop      @PAC  01-BPXYCONS\n                                              551+*   Define equates for server_init syscall ManagerType parameter\n                         00000001             552+SRV_WORKMGR             EQU   1  Work Manager services requested  @DGA  01-BPXYCONS\n                         00000002             553+SRV_QUEUEMGR            EQU   2  Queue Mgr services requested     @DGA  01-BPXYCONS\n1          UIMASM DFDSS OMVS exit                                                                               Page   13\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000004             554+SRV_SERVERMGR           EQU   4  Server Mgr services requested    @DGA  01-BPXYCONS\n                         00000008             555+SRV_SERVERMGRDYNAMIC    EQU   8  Server Mgr With Dynamic mngt     @DSA  01-BPXYCONS\n                                              556+*   Define equates for server_pwu syscall FcnCode parameter\n                         00000001             557+SRV_PUT_NEWWRK          EQU   1  Put new work function requested  @DGA  01-BPXYCONS\n                         00000002             558+SRV_PUT_SUBWRK          EQU   2  Put sub work function requested  @DGA  01-BPXYCONS\n                         00000004             559+SRV_TRANSFER_WRK        EQU   4  Transfer work function requested @DGA  01-BPXYCONS\n                         00000008             560+SRV_GET_WRK             EQU   8  Get work function requested      @DGA  01-BPXYCONS\n                         00000010             561+SRV_REFRESH_WRK         EQU  16  Refresh work fcn requested       @DGA  01-BPXYCONS\n                         00000020             562+SRV_END_WRK             EQU  32  End work function requested      @DGA  01-BPXYCONS\n                         00000040             563+SRV_DEL_ENC             EQU  64  Delete Enclave Fcn requested     @DGA  01-BPXYCONS\n                         00000080             564+SRV_DISCONNECT          EQU 128  Disconnect from WLM              @PBA  01-BPXYCONS\n                         00000100             565+SRV_DISCONNECT_COND     EQU 256  Disconnect conditional from WLM  @PCA  01-BPXYCONS\n                                              566+*                       EQU 512  Reserved for internal use        @PGA\n                                              567+*                                See BPXZCONS                     @PGA\n                                              568+*   Define equates for BPX1SLK syscall LockFcnCode parameter\n                         00000001             569+SLK_OBTAIN              EQU   1  Obtain function request          @DZA  01-BPXYCONS\n                         00000002             570+SLK_OBTAIN_COND         EQU   2  Obtain conditional function req  @DZA  01-BPXYCONS\n                         00000004             571+SLK_INIT                EQU   4  Initialization function request  @DZA  01-BPXYCONS\n                         00000008             572+SLK_DESTROY             EQU   8  Destroy function request         @DZA  01-BPXYCONS\n                         00000010             573+SLK_RELEASE             EQU  16  Release function request         @DZA  01-BPXYCONS\n                                              574+*   Define equates for BPX1SLK syscall LockReqType parameter\n                         00000001             575+SLK_NORMAL              EQU   1  Normal request type              @DZA  01-BPXYCONS\n                         00000002             576+SLK_ERRORCHECK          EQU   2  Errorcheck request type          @DZA  01-BPXYCONS\n                         00000004             577+SLK_RECURSIVE           EQU   4  Recursive request type           @DZA  01-BPXYCONS\n                                              578+*   Define equates for BPX1SLK syscall LockType parameter\n                         00000001             579+SLK_EXCLUSIVE           EQU   1  Exclusive lock type              @DZA  01-BPXYCONS\n                         00000002             580+SLK_SHARED              EQU   2  Shared lock type                 @DZA  01-BPXYCONS\n                                              581+*\n                                              582+* Constants for BPX1PCT pfsctl\n                                              583+*\n                                              584+*  Constants for BPXVRCAC - LFS Cache                             @DHA\n                         80000007             585+PC#ADDFILE              EQU X'80000007' Filecache cmd '80000007'x @PDC  01-BPXYCONS\n                         80000008             586+PC#DELETEFILE           EQU X'80000008' Filecache cmd '80000008'x @PDC  01-BPXYCONS\n                         8000000A             587+PC#PURGECACHE           EQU X'8000000A' Filecache cmd '8000000A'x @PDC  01-BPXYCONS\n                         80000009             588+PC#REFRESHCACHE         EQU X'80000009' Filecache cmd '80000009'x @PDC  01-BPXYCONS\n                         8000000B             589+PC#SHUTDOWNFILESYS      EQU X'8000000B' Soft Shutdown '8000000B'x @DVA  01-BPXYCONS\n                         8000000C             590+PC#PfsRecycle           EQU X'8000000C' Shutdown PFS for recycle        01-BPXYCONS\n                         8000000D             591+PC#PfsRestart           EQU X'8000000D' Restart the PFS                 01-BPXYCONS\n                                              592+*\n                         C0000006             593+PC#SETIBMASYIO          EQU X'C0000006' SetIbm AsyncIO 'C0000006'x@PDC  01-BPXYCONS\n                         C0000005             594+PC#SETIBMOPTCMD         EQU X'C0000005' SetIBMOpt TCP  'C0000005'x@PDC  01-BPXYCONS\n                         C000000B             595+PC#ERRORTEXT            EQU X'C000000B' Get error text 'C000000B'x@DNA  01-BPXYCONS\n                                              596+*                                                     -1073741813 @DNA\n                         C000000E             597+PC#SYSNAMES             EQU X'C000000E' Get sysnames   'C000000C'x@PxA  01-BPXYCONS\n                         C000000F             598+PC#TDNAMES              EQU X'C000000F' GET CINET TDNAMES         @03A  01-BPXYCONS\n                         C0000010             599+PC#HFSSTATS             EQU X'C0000010' GET HFS Stats             @PKA  01-BPXYCONS\n                         C0000011             600+PC#BRLMSRVR             EQU X'C0000011' GET brlm server name      @PKA  01-BPXYCONS\n                         80000012             601+PC#SFSDIAG              EQU X'80000012' Shared-FS Diagnose        @DTA  01-BPXYCONS\n                         C0000013             602+PC#USERSIGNAL           EQU X'C0000013' Set Lost Locks Signal(@05)@06A  01-BPXYCONS\n                         C0000014             603+PC#DIRGETHOST           EQU X'C0000014' Directed GetHost          @06A  01-BPXYCONS\n                         C0000015             604+PC#SHUTTINGDOWNFS       EQU X'C0000015' File system shutdown      @E7A  01-BPXYCONS\n                         C0000016             605+PC#RECYCLEDONE          EQU X'C0000016' recycle is complete       @EDA  01-BPXYCONS\n                                              606+*  PC#GetVnodeToken - Allocate Vde & insert an open\n                         80000017             607+PC#GETVNODETOKEN        EQU X'80000017'                           @F2A  01-BPXYCONS\n                                              608+*         inet6_is_srcaddr() function                             @F3A\n1          UIMASM DFDSS OMVS exit                                                                               Page   14\n   Active Usings: None\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        C0000018             609+PC#ISSRCADDR            EQU X'C0000018' inet6_is_srcaddr          @F3A  01-BPXYCONS\n                                              610+*  PC#ErrorText Subfunctions   - Request type:\n                         00000000             611+PC#ETDESC               EQU X'0000'     Get description text      @DNA  01-BPXYCONS\n                         00000001             612+PC#ETACTION             EQU X'0001'     Get action text           @DNA  01-BPXYCONS\n                         00000002             613+PC#ETMODNAME            EQU X'0002'     Get module name           @DNA  01-BPXYCONS\n                                              614+*  PC#ErrorText Error code type\n                         00000000             615+PC#ETREASON             EQU X'0000'     Reason code input         @DNA  01-BPXYCONS\n                         00000001             616+PC#ETERRNO              EQU X'0001'     Errno code input          @DNA  01-BPXYCONS\n                                              617+*  PC#ShuttingDownFS args\n                         00000001             618+PC#TYPEFILESYS          EQU X'00000001' shutdown=filesys          @E7A  01-BPXYCONS\n                         00000002             619+PC#TYPEFILEOWNER        EQU X'00000002' shutdown=fileowner        @E7A  01-BPXYCONS\n                         00000003             620+PC#TYPEOMVS             EQU X'00000003' omvs shutdown             @E7A  01-BPXYCONS\n                                              621+*\n                                              622+* Constants for BPX1LOD  - HFS load - options                     @EFC\n                                              623+*\n                         80000000             624+LOD_ERROR_ST_EXLINK     EQU X'80000000'  Error if sticky/ext lnk  @DRA  01-BPXYCONS\n                         40000000             625+LOD_IGNORE_STICKY       EQU X'40000000'  Skip sticky check        @DRA  01-BPXYCONS\n                                              626+*\n                                              627+*\n                                              628+* Constants for BPX1LDX  - extended HFS load - options            @EFC\n                                              629+*                          and directed load returned parameters\n                                              630+*\n                         20000000             631+LOD_DIRECTED            EQU X'20000000'  Directed loadhfs         @ECA  01-BPXYCONS\n                                              632+*\n 00000000                00000000 00000018    633+DIRECTEDLOADRETURNEDPARMS   DSECT ,                               @ECA  01-BPXYCONS\n 00000000                                     634+DIRECTEDLOADMODULELENGTH64  DS  FD Directed Load Mod Len AMODE64  @ECA  01-BPXYCONS\n 00000008                00000008 00000000    635+                            ORG DIRECTEDLOADMODULELENGTH64        @ECA  01-BPXYCONS\n 00000000                                     636+                            DS  F                                 @ECA  01-BPXYCONS\n 00000004                                     637+DIRECTEDLOADMODULELENGTH    DS  F  Directed Load Mod Len AMODE31  @ECA  01-BPXYCONS\n                                              638+*\n 00000008                                     639+DIRECTEDLOADMODULESTART64   DS  AD Directed Load Mod Start AMODE64@ECA  01-BPXYCONS\n 00000010                00000010 00000008    640+                            ORG DIRECTEDLOADMODULESTART64         @ECA  01-BPXYCONS\n 00000008                                     641+                            DS  F                                 @ECA  01-BPXYCONS\n 0000000C                                     642+DIRECTEDLOADMODULESTART     DS  A  Directed Load Mod Start AMODE31@ECA  01-BPXYCONS\n                                              643+*\n 00000010                                     644+DIRECTEDLOADMODULEENTRYPT64 DS  AD Directed Load Mod Entry AMODE64@ECA  01-BPXYCONS\n 00000018                00000018 00000010    645+                            ORG DIRECTEDLOADMODULEENTRYPT64       @ECA  01-BPXYCONS\n 00000010                                     646+                            DS  F                                 @ECA  01-BPXYCONS\n 00000014                                     647+DIRECTEDLOADMODULEENTRYPT   DS  A  Directed Load Mod Entry AMODE31@ECA  01-BPXYCONS\n                                              648+*\n                                              649+* Constants for BPX1DSD                                           @DPA\n                                              650+*\n                         00000001             651+SW_SIGDLV_ENABLE#       EQU 1                                     @DPA  01-BPXYCONS\n                         00000002             652+SW_SIGDLV_DISABLE#      EQU 2                                     @DPA  01-BPXYCONS\n                                              653+*\n                                              654+*   Define equates for BPX1OSE syscall function_code parameter\n                         00000001             655+OSENV_GET               EQU   1  get function                     @DQA  01-BPXYCONS\n                         00000002             656+OSENV_SET               EQU   2  set function                     @DQA  01-BPXYCONS\n                         00000004             657+OSENV_UNSET             EQU   4  unset function                   @DQA  01-BPXYCONS\n                         00000008             658+OSENV_PERSIST           EQU   8  persist function                 @DQA  01-BPXYCONS\n                         00000010             659+OSENV_UNPERSIST         EQU   16 unpersist function               @DQA  01-BPXYCONS\n                                              660+*   Define equates for BPX1OSE syscall Request_Flags parameter\n                         00000001             661+OSENV_WLM               EQU   1  WLM Enclave membership           @DQA  01-BPXYCONS\n                         00000002             662+OSENV_SECURITY          EQU   2  pthread security environment     @DQA  01-BPXYCONS\n                                              663+*\n1          UIMASM DFDSS OMVS exit                                                                               Page   15\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                             664+*   Define equates for BPX1PQG syscall RequestType parameter\n                         00000002             665+THDQ_FREEZE             EQU   2  Freezes the threads identified in      01-BPXYCONS\n                                              666+*                                the THDQ Data List array (BPXYTHDQ)\n                                              667+*                                                                 @DUA\n                         00000008             668+THDQ_UNFREEZE_ALL       EQU   8  Unfreezes all threads that are frozen  01-BPXYCONS\n                                              669+*                                in the caller process            @DUA\n                         00000001             670+THDQ_GET_STATE          EQU   1  Retrieves the state data for the       01-BPXYCONS\n                                              671+*                                threads identified in the THDQ data\n                                              672+*                                list array or for all threads.\n                                              673+*                                This value can only be specified with\n                                              674+*                                THDQ_FREEZE                      @DUA\n                                              675+*\n                                              676+** BPXYCONS End\n-\n                                              678         BPXYSIGH\n                                              679+** BPXYSIGH: Component signal definition\n                                              680+**  Used By: KIL SIA SPM\n                                              681+*********************************************************************\n                                              682+* Signals with default action ABNORMAL TERMINATION\n                         00000001             683+SIGHUP#    EQU   1   Hangup detected on controlling terminal            01-BPXYSIGH\n                         00000002             684+SIGINT#    EQU   2   Interactive attention                              01-BPXYSIGH\n                         00000003             685+SIGABRT#   EQU   3   Abnormal termination                               01-BPXYSIGH\n                         00000004             686+SIGILL#    EQU   4   Detection of an incorrect hardware instruction     01-BPXYSIGH\n                         00000005             687+SIGPOLL#   EQU   5   Pollable event                                     01-BPXYSIGH\n                         00000006             688+SIGURG#    EQU   6   High bandwidth data is available at a socket       01-BPXYSIGH\n                         00000008             689+SIGFPE#    EQU   8   Erroneous arithmetic operation, such as division   01-BPXYSIGH\n                                              690+*                    by zero of an operation resulting in overflow\n                         00000009             691+SIGKILL#   EQU   9   Termination (cannot be caught or ignored)          01-BPXYSIGH\n                         0000000A             692+SIGBUS#    EQU  10   Bus error                                          01-BPXYSIGH\n                         0000000B             693+SIGSEGV#   EQU  11   Detection of an incorrect memory reference         01-BPXYSIGH\n                         0000000C             694+SIGSYS#    EQU  12   Bad System Call                                    01-BPXYSIGH\n                         0000000D             695+SIGPIPE#   EQU  13   Write on a pipe with no readers                    01-BPXYSIGH\n                         0000000E             696+SIGALRM#   EQU  14   Timeout                                            01-BPXYSIGH\n                         0000000F             697+SIGTERM#   EQU  15   Termination                                        01-BPXYSIGH\n                         00000010             698+SIGUSR1#   EQU  16   Reserved as application-defined signal 1           01-BPXYSIGH\n                         00000011             699+SIGUSR2#   EQU  17   Reserved as application-defined signal 2           01-BPXYSIGH\n                         00000012             700+SIGABND#   EQU  18   Abend                                              01-BPXYSIGH\n                         00000018             701+SIGQUIT#   EQU  24   Interactive termination                            01-BPXYSIGH\n                         0000001A             702+SIGTRAP#   EQU  26   Trap used by the ptrace call                       01-BPXYSIGH\n                         0000001D             703+SIGXCPU#   EQU  29   CPU time limit exceeded                            01-BPXYSIGH\n                         0000001E             704+SIGXFSZ#   EQU  30   File size limit exceeded                           01-BPXYSIGH\n                         0000001F             705+SIGVTALRM# EQU  31   Virtual timer expired                              01-BPXYSIGH\n                         00000020             706+SIGPROF#   EQU  32   Profiling timer expired                            01-BPXYSIGH\n                         00000021             707+SIGDANGER# EQU  33   Shutdown Imminent                           @D9A   01-BPXYSIGH\n                         00000026             708+SIGDCE#    EQU  38   Reserved for exclusive use by DCE                  01-BPXYSIGH\n                                              709+* Signals with default action of CONTINUE\n                                              710+* Signals with default action IGNORE THE SIGNAL\n                         00000000             711+SIGNULL#   EQU   0   Null - no signal sent                              01-BPXYSIGH\n                         00000014             712+SIGCHLD#   EQU  20   Child process terminated or stopped                01-BPXYSIGH\n                         00000017             713+SIGIO#     EQU  23   Completion of input or output                      01-BPXYSIGH\n                         0000001B             714+SIGIOER#   EQU  27   Input or Output Error                              01-BPXYSIGH\n                         0000001C             715+SIGWINCH#  EQU  28   Change size of window                              01-BPXYSIGH\n                         00000025             716+SIGTRACE#  EQU  37   Trace the target process                    @DBA   01-BPXYSIGH\n1          UIMASM DFDSS OMVS exit                                                                               Page   16\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000027             717+SIGDUMP#   EQU  39   Take a SYSMDUMP                             @D8A   01-BPXYSIGH\n                                              718+* Signals with default action STOP\n                         00000007             719+SIGSTOP#   EQU   7   Stop (cannot be caught or ignored)                 01-BPXYSIGH\n                         00000015             720+SIGTTIN#   EQU  21   Read from a control terminal attempted by a        01-BPXYSIGH\n                                              721+*                    member of a background process group\n                         00000016             722+SIGTTOU#   EQU  22   Write from a control terminal attempted by a       01-BPXYSIGH\n                                              723+*                    member of a background process group\n                         00000019             724+SIGTSTP#   EQU  25   Interactive stop                                   01-BPXYSIGH\n                         00000022             725+SIGTHSTOP# EQU  34   Thread stop (cannot be caught or blocked or        01-BPXYSIGH\n                                              726+*                    ignored)                                  @DAA\n                                              727+* Signals with default action CONTINUE IF IT IS CURRENTLY STOPPED,\n                                              728+*                             OTHERWISE IGNORE THE SIGNAL\n                         00000013             729+SIGCONT#   EQU  19   Continue if stopped                                01-BPXYSIGH\n                         00000023             730+SIGTHCONT# EQU  35   Thread continue (cannot be caught or blocked or    01-BPXYSIGH\n                                              731+*                    ignored)                                  @DAA\n                                              732+*********************************************************************\n                                              733+** Equates   that define sa_handler values on Sigaction()      @P1C *\n                                              734+*********************************************************************\n                         00000000             735+SIG_DFL#   EQU   0   Default signal action                              01-BPXYSIGH\n                         00000001             736+SIG_IGN#   EQU   1   Ignore signal action                               01-BPXYSIGH\n                                              737+*********************************************************************\n                                              738+** Constants that define sa_flags   values on Sigaction()      @P1C *\n                                              739+*********************************************************************\n                         00000000             740+SA_FLAGS_DFT#  EQU X'00000000'  Default sa_flags                        01-BPXYSIGH\n                         80000000             741+SA_NOCLDSTOP#  EQU X'80000000'  No SIGCHLD when children stop           01-BPXYSIGH\n                         40000000             742+SA_OLD_STYLE#  EQU X'40000000'  Old style signal() function             01-BPXYSIGH\n                         20000000             743+SA_ONSTACK#    EQU X'20000000'  Deliver on alternate stack     @D5A     01-BPXYSIGH\n                         10000000             744+SA_RESETHAND#  EQU X'10000000'  Reset action on delivery       @D5A     01-BPXYSIGH\n                         08000000             745+SA_RESTART#    EQU X'08000000'  Restart interruptible funcs    @D5A     01-BPXYSIGH\n                         04000000             746+SA_SIGINFO#    EQU X'04000000'  Pass siginfo to catcher        @D5A     01-BPXYSIGH\n                         02000000             747+SA_NOCLDWAIT#  EQU X'02000000'  Don't create zombie on exit    @D5A     01-BPXYSIGH\n                         01000000             748+SA_NODEFER#    EQU X'01000000'  Don't block signal on delivery @D5A     01-BPXYSIGH\n                         00000001             749+SA_IGNORE#     EQU X'00000001'  Act as though sa_handler contained      01-BPXYSIGH\n                                              750+*                               SIG_IGN#                       @P4A\n                                              751+*********************************************************************\n                                              752+** Constants that define how parameter on sigprocmask()        @P1C *\n                                              753+*********************************************************************\n                         00000000             754+SIG_BLOCK#      EQU    0  Block signals set on in New_signal_mask       01-BPXYSIGH\n                         00000001             755+SIG_UNBLOCK#    EQU    1  Unblock signals set on in New_signal_mask     01-BPXYSIGH\n                         00000002             756+SIG_SETMASK#    EQU    2  Set signal mask to New_signal_mask            01-BPXYSIGH\n                                              757+*********************************************************************\n                                              758+** Constants that define the lower two bytes of the Signal_Options  *\n                                              759+** on the BPX1KIL and BPX1PTK syscalls.  If a signal generated with *\n                                              760+** one or more of these flags is handled by the Signal Interface    *\n                                              761+** Routine, the flags will appear in the PpsdKilOpts field upon     *\n                                              762+** delivery of said signal.                                     @D5A*\n                                              763+** When the lower two bytes contain x'1000' (SIG_CONSCANCEL#) the   *\n                                              764+** upper two bytes will contain the SIGCNCL type qualifier      @D7A*\n                                              765+*********************************************************************\n                         00000000             766+SIG_FLAGS_DFT#     EQU  X'0000' Default options                 @D5A    01-BPXYSIGH\n                         00008000             767+SIG_PTRACEBYPASS#  EQU  X'8000' Bypass ptrace processing        @D5A    01-BPXYSIGH\n                         00004000             768+SIG_KERNSICODE#    EQU  X'4000' OpenMVS kernel set si_code      @D5A    01-BPXYSIGH\n                         00002000             769+SIG_APPLSICODE#    EQU  X'2000' Application set si_code         @D5A    01-BPXYSIGH\n                         00001000             770+SIG_CONSCANCEL#    EQU  X'1000' Console (MODIFY) cancel thread  @D7A    01-BPXYSIGH\n                                              771+*********************************************************************\n1          UIMASM DFDSS OMVS exit                                                                               Page   17\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                             772+** Constants that define si_codes which are passed in the upper two *\n                                              773+** bytes of the Signal_Options on the BPX1KIL and BPX1PTK syscalls  *\n                                              774+** If a signal generated with a si_code is handled by the Signal    *\n                                              775+** Interface Routine the si_code will appear in the PpsdKilData     *\n                                              776+** field upon delivery of said signal.                          @D5A*\n                                              777+*********************************************************************\n                         0000000B             778+ILL_ILLOPC#     EQU   11  Illegal opcode                        @D5A    01-BPXYSIGH\n                         0000000C             779+ILL_ILLOPN#     EQU   12  Illegal operand                       @D5A    01-BPXYSIGH\n                         0000000D             780+ILL_ILLADR#     EQU   13  Illegal addressing mode               @D5A    01-BPXYSIGH\n                         0000000E             781+ILL_ILLTRP#     EQU   14  Illegal trap                          @D5A    01-BPXYSIGH\n                         0000000F             782+ILL_PRVOPC#     EQU   15  Privileged opcode                     @D5A    01-BPXYSIGH\n                         00000010             783+ILL_PRVREG#     EQU   16  Privileged register                   @D5A    01-BPXYSIGH\n                         00000011             784+ILL_COPROC#     EQU   17  Coprocessor error                     @D5A    01-BPXYSIGH\n                         00000012             785+ILL_BADSTK#     EQU   18  Internal stack error                  @D5A    01-BPXYSIGH\n                         00000013             786+ILL_EXECUTE#    EQU   19  Execute exception                     @D6A    01-BPXYSIGH\n                         00000014             787+ILL_ILLSPEC#    EQU   20  Specification exception               @D6A    01-BPXYSIGH\n                                              788+*********************************************************************\n                         0000001F             789+FPE_INTDIV#     EQU   31  Integer divide by zero                @D5A    01-BPXYSIGH\n                         00000020             790+FPE_INTOVF#     EQU   32  Integer overflow                      @D5A    01-BPXYSIGH\n                         00000021             791+FPE_FLTDIV#     EQU   33  Floating point divide by zero         @D5A    01-BPXYSIGH\n                         00000022             792+FPE_FLTOVF#     EQU   34  Floating point overflow               @D5A    01-BPXYSIGH\n                         00000023             793+FPE_FLTUND#     EQU   35  Floating point underflow              @D5A    01-BPXYSIGH\n                         00000024             794+FPE_FLTRES#     EQU   36  Floating point inexact result         @D5A    01-BPXYSIGH\n                         00000025             795+FPE_FLTINV#     EQU   37  Invalid floating point operation      @D5A    01-BPXYSIGH\n                         00000026             796+FPE_FLTSUB#     EQU   38  Subscript out of range                @D5A    01-BPXYSIGH\n                         00000027             797+FPE_FLTSIG#     EQU   39  Floating point significance exception @D6A    01-BPXYSIGH\n                         00000028             798+FPE_DECDATA#    EQU   40  Decimal data exception                @D6A    01-BPXYSIGH\n                         00000029             799+FPE_DECDIV#     EQU   41  Decimal divide by zero                @D6A    01-BPXYSIGH\n                         0000002A             800+FPE_DECOVF#     EQU   42  Decimal overflow                      @D6A    01-BPXYSIGH\n                         0000002B             801+FPE_UNKWN#      EQU   43  Undetermined exception                @D6A    01-BPXYSIGH\n                                              802+*********************************************************************\n                         00000033             803+SEGV_MAPERR#    EQU   51  Address not mapped to object          @D5A    01-BPXYSIGH\n                         00000034             804+SEGV_ACCERR#    EQU   52  Invalid permissions for mapped object @D5A    01-BPXYSIGH\n                         00000035             805+SEGV_PROTECT#   EQU   53  Invalid key access                    @D6A    01-BPXYSIGH\n                         00000036             806+SEGV_ADDRESS#   EQU   54  Invalid address                       @D6A    01-BPXYSIGH\n                                              807+*********************************************************************\n                         00000047             808+BUS_ADRALN#     EQU   71  Invalid address alignment             @D5A    01-BPXYSIGH\n                         00000048             809+BUS_ADRERR#     EQU   72  Non-existent physical address         @D5A    01-BPXYSIGH\n                         00000049             810+BUS_OBJERR#     EQU   73  Object specific hardware error        @D5A    01-BPXYSIGH\n                                              811+*********************************************************************\n                         0000005B             812+TRAP_BRKPT#     EQU   91  Process breakpoint                    @D5A    01-BPXYSIGH\n                         0000005C             813+TRAP_TRACE#     EQU   92  Process trace trap                    @D5A    01-BPXYSIGH\n                                              814+*********************************************************************\n                         00000065             815+CLD_EXITED#     EQU  101  Child has exited                      @D5A    01-BPXYSIGH\n                         00000066             816+CLD_KILLED#     EQU  102  Child was killed                      @D5A    01-BPXYSIGH\n                         00000067             817+CLD_DUMPED#     EQU  103  Child was terminated abnormally       @D5A    01-BPXYSIGH\n                         00000068             818+CLD_TRAPPED#    EQU  104  Traced child has trapped              @D5A    01-BPXYSIGH\n                         00000069             819+CLD_STOPPED#    EQU  105  Child has stopped                     @D5A    01-BPXYSIGH\n                         0000006A             820+CLD_CONTINUED#  EQU  106  Stopped child was continued           @D5A    01-BPXYSIGH\n                                              821+*********************************************************************\n                         0000006F             822+POLL_IN#        EQU  111  Data input available                  @D5A    01-BPXYSIGH\n                         00000070             823+POLL_OUT#       EQU  112  Output buffers available              @D5A    01-BPXYSIGH\n                         00000071             824+POLL_MSG#       EQU  113  Input message available               @D5A    01-BPXYSIGH\n                         00000072             825+POLL_ERR#       EQU  114  I/O error                             @D5A    01-BPXYSIGH\n                         00000073             826+POLL_PRI#       EQU  115  High priority input available         @D5A    01-BPXYSIGH\n1          UIMASM DFDSS OMVS exit                                                                               Page   18\n   Active Usings: None\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000074             827+POLL_HUP#       EQU  116  Device disconnected                   @D5A    01-BPXYSIGH\n                                              828+*********************************************************************\n                         000000AA             829+ABND_REAL#      EQU  170  Abend Real                            @P5A    01-BPXYSIGH\n                                              830+*********************************************************************\n                         000000AF             831+SI_ASYNCIO#     EQU  175  Completion of an asynchronous I/O     @P6A    01-BPXYSIGH\n                         000000B0             832+SI_QUEUE#       EQU  176  Signal sent by sigqueue()             @P6A    01-BPXYSIGH\n                                              833+*********************************************************************\n                                              834+** Equate for BPX1STW (sigtimedwait) syscall that when specified    *\n                                              835+** for the \"Seconds\" parameter indicates not to timeout while       *\n                                              836+** waiting for signal(s).                                           *\n                                              837+*********************************************************************\n                         7FFFFFFF             838+SIG#NO_TIMEOUT  EQU  X'7FFFFFFF'                                @P6A    01-BPXYSIGH\n                                              839+** BPXYSIGH End\n-\n                                              841 *********************************************************************** 00020000\n                                              842 * UIMASM exit  IBM part                                               * 00040037\n                                              843 *                                                                     * 00050000\n                                              844 * Called from the DSSOMVS module wit UIM style parm list              * 00060037\n                                              845 * The module loads/start the ADRDSSU and gets back the control via    * 00070037\n                                              846 * UIM exit and call further the UIM function in C                     * 00080000\n                                              847 *********************************************************************** 00090000\n                                              848 *IMASM   ceeentry ppa=ceeppa,nab=yes,main=no,base=(r11),               *\n                                                                 AUTO=WORKSIZE\n                                              849 UIMASM   XATTR LINKAGE(OS)\n                                              850 *UIM      XATTR LINKAGE(OS)\n                                              851 *UIMASM    XATTR LINKAGE(XPLINK)\n                                              852 UIMASM   CEEENTRY PPA=CEEPPA,NAB=YES,MAIN=NO,BASE=(R11),               *\n                                                                 AUTO=WORKSIZE\n 00000000                00000000 00000234    853+UIMASM  CSECT ,                                                         01-CEEENTRY\n                                              854+UIMASM  RMODE ANY                                                 @D2A  01-CEEENTRY\n                                              855+UIMASM  AMODE ANY                                                 @D2A  01-CEEENTRY\n                                              856+           ENTRY UIMASM                                                 01-CEEENTRY\n                                              857+         PUSH  USING                                                    01-CEEENTRY\n                                              858+         DROP  ,                                                  @02A  01-CEEENTRY\n                     R:F 00000000             859+         USING *,15                                                     01-CEEENTRY\n 00000000 47F0 F014               00000014    860+         B     CEEZ0004                                                 01-CEEENTRY\n 00000004 00C3C5C5                            861+         DC    X'00C3C5C5'                                              01-CEEENTRY\n                         000001B8             862+CEEY0004    EQU ((WORKSIZE+7)/8)*8                                     X01-CEEENTRY\n                                                 +                                  . Size of automatic storage.    @P1A\n 00000008 000001B8                            863+         DC    A(CEEY0004)        . Size of automatic storage.    @P1C  01-CEEENTRY\n 0000000C 000001A4                            864+         DC    A(CEEPPA-UIMASM)   . Address of PPA for this program     01-CEEENTRY\n 00000010 47F0 F001               00000001    865+         B     1(,15)                                                   01-CEEENTRY\n                         00000014             866+CEEZ0004    EQU *                                                       01-CEEENTRY\n 00000014 90EC D00C               0000000C    867+         STM   14,12,CEEDSAR14-CEEDSA(13)                               01-CEEENTRY\n 00000018 5810 D04C               0000004C    868+         L     1,CEEDSANAB-CEEDSA(,13)  Get the current NAB             01-CEEENTRY\n 0000001C A502 0000               00000000    869+         IILH  0,CEEY0004/65536        Load high half of AUTO size@P1A  01-CEEENTRY\n 00000020 A503 01B8               000001B8    870+         IILL  0,CEEY0004-(CEEY0004/65536*65536)       and low    @P1A  01-CEEENTRY\n 00000024 1E01                                871+         ALR   0,1                     Compute new value.               01-CEEENTRY\n 00000026 5500 C00C               0000000C    872+         CL    0,CEECAAEOS-CEECAA(,12)  Compare with EOS.               01-CEEENTRY\n 0000002A A7D4 0006               00000036    873+         JNH   CEEX0004                                           @P1C  01-CEEENTRY\n 0000002E 58F0 C2BC               000002BC    874+         L     15,CEECAAGETS-CEECAA(,12) Get address overflow routine   01-CEEENTRY\n 00000032 05EF                                875+         BALR  14,15                   Get another stack segment.       01-CEEENTRY\n 00000034 181F                                876+         LR    1,15                                                     01-CEEENTRY\n1          UIMASM DFDSS OMVS exit                                                                               Page   19\n   Active Usings (1):UIMASM,R15\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                        00000036             877+CEEX0004    EQU *                                                       01-CEEENTRY\n 00000036 50D0 1004               00000004    878+         ST    13,CEEDSABKC-CEEDSA(,1)  Set back chain.                 01-CEEENTRY\n 0000003A 5000 104C               0000004C    879+         ST    0,CEEDSANAB-CEEDSA(,1)   Set new NAB value               01-CEEENTRY\n 0000003E D701 1000 1000 00000000 00000000    880+         XC    CEEDSAFLAGS-CEEDSA(,1),CEEDSAFLAGS-CEEDSA(1) . Clear     01-CEEENTRY\n 00000044 5010 D008               00000008    881+         ST    1,CEEDSAFWC-CEEDSA(,13)  Set forward chain.              01-CEEENTRY\n 00000048 18D1                                882+         LR    13,1                    Set save area address            01-CEEENTRY\n                                              883+         POP   USING                   Clear any temporary usings @P1M  01-CEEENTRY\n                     R:D 00000000             884+         USING CEEDSA,13               Addresability to SF     V1R2M0   01-CEEENTRY\n 0000004A D203 D048 C280 00000048 00000280    885+         MVC   CEEDSALWS,CEECAALWS-CEECAA(12) Get LWS addr     V1R2M0   01-CEEENTRY\n 00000050 581D 0004               00000004    886+         L     1,4(13)                 get previous save.               01-CEEENTRY\n 00000054 5810 1018               00000018    887+         L     1,24(,1)                restore original R1              01-CEEENTRY\n 00000058 C0B0 FFFF FFD4          00000000    888+         LARL  R11,UIMASM               Load EP into 1st base reg @P1C  01-CEEENTRY\n                     R:B 00000000             889+         USING UIMASM,R11                                         @P1M  01-CEEENTRY\n                     R:D 00000000             890          USING WORK,R13           base on work area\n                     R:0 00000000             891          USING PSA,R0             base on PSA\n 0000005E 900F D108               00000108    892          STM   R0,R15,ENTRYREGS   back entry regs\n 00000062 5010 D0DC               000000DC    893          ST    R1,EPARM           save entry parm list\n 00000066 D213 D0C8 1000 000000C8 00000000    894          MVC   PARMLIST(20),0(R1) copy parm list\n                                              895 * set default dub to DUBTASKACEE\n 0000006C 58E0 0010               00000010    896          L     R14,FLCCVT         get CVT common vector table\n 00000070 58EE 0220               00000220    897          L     R14,544(R14)       get CSRTABLE\n 00000074 58EE 0018               00000018    898          L     R14,24(R14)        CSR slot list\n 00000078 58F0 E12C               0000012C    899          L     R15,BPX1SDD(,R14)  get BPX1SDD address\n                                              900 *        CALL  (15),(=A(DUBTASKACEE),                                  *\n                                                                 RETURN_VALUE,RETURN_CODE,REASON_CODE),VL,               *\n                                                                 MF=(E,CALL_S1DD)\n                                              901          CALL  (15),(=A(DUBTASKACEE),                                  *\n                                                                 RETURN_VALUE,RETURN_CODE,REASON_CODE),VL,               *\n                                                                 MF=(E,CALL_S1DD)\n 0000007C                                     903+         DS    0H                                                       01-CALL\n 0000007C 4110 D1A0               000001A0    908+         LA    1,CALL_S1DD                       LOAD PARAMETER REG 1   03-IHBINNRR\n 00000080 4100 B228               00000228    909+         LA    0,=A(DUBTASKACEE)  PICKUP  PARAMETER                     02-IHBOPLTX\n 00000084 5000 1000               00000000    910+         ST    0,0(0,1)                          STORE INTO PARAM. LIST 02-IHBOPLTX\n 00000088 4100 D194               00000194    911+         LA    0,RETURN_VALUE     PICKUP  PARAMETER                     02-IHBOPLTX\n 0000008C 5000 1004               00000004    912+         ST    0,4(0,1)                          STORE INTO PARAM. LIST 02-IHBOPLTX\n 00000090 4100 D198               00000198    913+         LA    0,RETURN_CODE      PICKUP  PARAMETER                     02-IHBOPLTX\n 00000094 5000 1008               00000008    914+         ST    0,8(0,1)                          STORE INTO PARAM. LIST 02-IHBOPLTX\n 00000098 4100 D19C               0000019C    915+         LA    0,REASON_CODE      PICKUP  PARAMETER                     02-IHBOPLTX\n 0000009C 5000 100C               0000000C    916+         ST    0,12(0,1)                         STORE INTO PARAM. LIST 02-IHBOPLTX\n 000000A0 9680 100C      0000000C             917+         OI    12(1),X'80'                SET LAST WORD BIT ON @G860P40 02-IHBOPLTX\n 000000A4 05EF                                918+         BALR  14,15                             BRANCH TO ENTRY POINT  01-CALL\n 000000A6 BF0F D194               00000194    919          ICM   R0,15,RETURN_VALUE    get reurn value\n 000000AA A784 0005               000000B4    920          JZ    DUBOK                 jump if it was o.k\n 000000AE 0000\n 000000B0 00000000                            921          DC    A(0)                  dump from here\n 000000B4                                     922 DUBOK    DS    0H\n                                              923 *        load  eploc=epadrdssu       load adrdssu\n                                              924          LOAD  EPLOC=EPADRDSSU       load adrdssu\n 000000B4 4100 B1F4               000001F4    926+         LA    0,EPADRDSSU        LOAD PARAMETER INTO REG 0             01-LOAD\n 000000B8 1B11                                927+         SR    1,1                SHOW NO DCB PRESENT                   01-LOAD\n 000000BA 0A08                                928+         SVC   8                                                        01-LOAD\n 000000BC 12FF                                929          LTR   R15,R15            test return\n 000000BE A774 002F               0000011C    930          JNZ   ERR_LOAD           if not o.k.\n 000000C2 5000 D0F0               000000F0    931          ST    R0,ADRDSSU         save addr\n1          UIMASM DFDSS OMVS exit                                                                               Page   20\n   Active Usings: PSA,R0  UIMASM,R11  WORK,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000000C6 D201 D0E2 B230 000000E2 00000230    933          MVC   DSSCUIM,=AL2(DSSCUIML) set length\n 000000CC 4110 B14C               0000014C    934          LA    R1,UIMEXIT         get uim exit address\n 000000D0 5010 D0E4               000000E4    935          ST    R1,DSSCUIMA        save exit address\n 000000D4 9680 D0E4      000000E4             936          OI    DSSCUIMA,X'80'     indicate 31 bit mode\n 000000D8 4110 D0E2               000000E2    937          LA    R1,DSSCUIM         get UIM exit address pointer\n 000000DC 5010 D0D4               000000D4    938          ST    R1,PARMLIST+12     set in parmlist\n0000000E0 5810 D0D8               000000D8    940          L     R1,PARMLIST+16     get user area address\n 000000E4 D203 D100 1002 00000100 00000002    941          MVC   USERAREA,2(R1)     save userarea\n 000000EA D201 D0EA B232 000000EA 00000232    942          MVC   DSSCDATA,=AL2(DSSCDATAL) set length\n 000000F0 4110 D0EA               000000EA    943          LA    R1,DSSCDATA        get exit parm pointer\n 000000F4 5010 D0D8               000000D8    944          ST    R1,PARMLIST+16     save in parmlist\n 000000F8 9680 D0D8      000000D8             945          OI    PARMLIST+16,X'80'  high order bit in parmlist\n 000000FC 50D0 D0EC               000000EC    946          ST    R13,DSSCDATAA      save work area address\n 00000100 4DE0 B108               00000108    947          BAS   R14,CALLDSS        call DSS\n 00000104 A7F4 001A               00000138    948          J     RET                call return\n000000108 B240 00E0                           950 CALLDSS  BAKR  R14,0              all in stack\n 0000010C 4110 D0C8               000000C8    951          LA    R1,PARMLIST        get parmlist address\n 00000110 58F0 D0F0               000000F0    952          L     R15,ADRDSSU        get module address\n 00000114 41D0 D080               00000080    953          LA    R13,CALLSAVE       new save are\n 00000118 0DEF                                954          BASR  R14,R15            call adrdssu module\n 0000011A 0101                                955          PR    ,                  return back\n 0000011C                                     956 ERR_LOAD DS 0H\n                                              957 *rr_load  CALL  CEEMOUT,(unable,ceedest),VL,MF=(E,CALLMOUT)\n                                              958 *ERR_LOAD  CALL  CEEMOUT,(UNABLE,CEEDEST),VL,MF=(E,CALLMOUT)\n                                              959          ABEND 001,DUMP,,SYSTEM,REASON=0001\n 0000011C                                     961+         DS    0H                                                       01-ABEND\n 0000011C 4110 0001               00000001    964+         LA    1,001                             LOAD PARAMETER REG 1   02-IHBINNRR\n 00000120 8910 000C               0000000C    965+         SLL   1,12(0)            CODE IN SYSTEM POSITION               01-ABEND\n 00000124 41F0 0001               00000001    966+         LA    15,0001            LOAD REG15 WITH REASON CODE  @G860P1F 01-ABEND\n 00000128 4100 0084               00000084    967+         LA    0,132(0,0)         DUMP/STEP/DUMPOPTS/REASON    @G860P1F 01-ABEND\n 0000012C 8900 0018               00000018    968+         SLL   0,24(0)            SHIFT TO HIGH ORDER                   01-ABEND\n 00000130 1610                                969+         OR    1,0                OR IN WITH COMPCODE                   01-ABEND\n 00000132 0A0D                                970+         SVC   13                 LINK TO ABEND ROUTINE                 01-ABEND\n 00000134 41F0 0008               00000008    971          LA    R15,8              get code\n                                              972 *ET      ceeterm rc=(r15)         epilog\n                                              973 RET      CEETERM RC=(R15)         epilog\n 00000138                                     974+RET      DS   0H                                                        01-CEETERM\n 00000138 18FF                                975+         LR  15,R15         . Load reason code.                         01-CEETERM\n 0000013A 5800 B22C               0000022C    976+         L   0,=A(0)           . Load modifier                          01-CEETERM\n 0000013E 58DD 0004               00000004    977+         L   13,4(13)             Get previous save area                01-CEETERM\n 00000142 58E0 D00C               0000000C    978+         L   14,12(,13)           Reload return address                 01-CEETERM\n 00000146 981C D018               00000018    979+         LM  1,12,24(13)          Restore reg 1 through 12              01-CEETERM\n 0000014A 07FE                                980+         BR  14                   Return to caller                      01-CEETERM\n                     R:A 00000000             981          USING ADREIB,R10         base on UIM exit parm list\n 0000014C 90EC D00C               0000000C    982 UIMEXIT  STM   R14,R12,12(R13)     save regs\n 00000150 58BF 00B8               000000B8    983          L     R11,UIMASMA-UIMEXIT(R15) back base\n 00000154 58A0 1000               00000000    984          L     R10,0(,R1)         get UIM parm address\n 00000158 180D                                985          LR    R0,R13             new save area address here\n 0000015A BFDF A01E               0000001E    986          ICM   R13,15,EIUSEPTR    back r13 from\n 0000015E 5000 D104               00000104    987          ST    R0,NEWSAVE         save new save address\n 00000162 5010 D148               00000148    988          ST    R1,UIMPARM         save UIM parm\n 00000166 D203 A01E D100 0000001E 00000100    989          MVC   EIUSEPTR,USERAREA  set user area\n 0000016C 182A                                990          LR    R2,R10             save UFO base\n1          UIMASM DFDSS OMVS exit                                                                               Page   21\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000016E 183D                                991          LR    R3,R13             save save area\n 00000170 4DE0 B18A               0000018A    992          BAS   R14,CALLBACK       callback routinr\n 00000174 18A2                                993          LR    R10,R2             back UFO\n 00000176 18D3                                994          LR    R13,R3             back save\n 00000178 BEDF A01E               0000001E    995          STCM  R13,R15,EIUSEPTR   set back our pointer\n 0000017C 58D0 D104               00000104    996          L     R13,NEWSAVE        save new save address\n 00000180 50FD 0010               00000010    997          ST    R15,16(R13)         store code\n 00000184 98EC D00C               0000000C    998          LM    R14,R12,12(R13)     back regs\n 00000188 0B0E                                999          BSM   0,R14              back from the routine\n 0000018A 90EC D14C               0000014C   1000 CALLBACK STM   R14,R12,CALLREGS   all in save area\n 0000018E 984F D118               00000118   1001          LM    R4,R15,ENTRYREGS+4*4   back entry regs\n 00000192 58F0 B1FC               000001FC   1002          L     R15,UIM            get UIM address\n 00000196 5810 D148               00000148   1003          L     R1,UIMPARM         get UIM address\n 0000019A 05EF                               1004          BALR  R14,R15            call it\n 0000019C 98EC D14C               0000014C   1005          LM    R14,R12,CALLREGS   back all\n 000001A0 0B0E                               1006          BSM   0,R14              back all\n                                             1007 *eeppa   ceeppa  ,                prolog area\n                                             1008 CEEPPA   CEEPPA  ,                prolog area\n                                             1009+*/******************************************************************/\n                                             1010+*/*                                                                */\n                                             1011+*/* Licensed Materials - Property of IBM                           */\n                                             1012+*/*                                                                */\n                                             1013+*/* 5694-A01 5688-198                                              */\n                                             1014+*/*                                                                */\n                                             1015+*/* Copyright IBM Corp. 1991, 2009                                 */\n                                             1016+*/*                                                                */\n                                             1017+*/* Status = HLE7760                                               */\n                                             1018+*/*                                                                */\n                                             1019+*/******************************************************************/\n                                             1020+*\n                                             1021+**********************************************************************\n                                             1022+*        P R O G R A M  P R O L O G  A R E A 1   ( P P A 1)          *\n                                             1023+**********************************************************************\n                                             1024+*\n 000001A4                                    1025+PPA10018    DS    0F                                                    01-CEEPPA\n 000001A4                                    1026+CEEPPA   DS    0F                                                       01-CEEPPA\n 000001A4 1E                                 1027+         DC    AL1(PPANL0018-*) Offset to the entry name length         01-CEEPPA\n 000001A5 CE                                 1028+         DC    X'CE'            LE/370  Indicator.                      01-CEEPPA\n 000001A6 A0                                 1029+         DC    B'10100000'                             . PPA flags      01-CEEPPA\n                                             1030+*                     Bit 0   0 = Internal Procedure\n                                             1031+*                             1 = External Procedure\n                                             1032+*                     Bit 1   0 = Primary Entry Point\n                                             1033+*                             1 = Secondary Entry Point\n                                             1034+*                     Bit 2   0 = Block doesn't have a DSA\n                                             1035+*                             1 = Block has a DSA\n                                             1036+*                     Bit 3   0 = compiled object\n                                             1037+*                             1 = library object\n                                             1038+*                     Bit 4   0 = sampling interrupts to library\n                                             1039+*                             1 = sampling interrupts to code\n                                             1040+*                     Bit 5   0 = not an exit DSA\n                                             1041+*                             1 = Exit DSA\n                                             1042+*                     Bit 6   0 = own exception model\n                                             1043+*                             1 = inherited (callers) exception model\n                                             1044+*                     Bit 7       Reserved\n 000001A7 00                                 1045+         DC    X'00'            Member flags                            01-CEEPPA\n1          UIMASM DFDSS OMVS exit                                                                               Page   22\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000001A8 000001CC                           1046+         DC    A(PPA20018)      Addr of Compile Unit Block (PPA2)       01-CEEPPA\n 000001AC 00000000                           1047+         DC    A(0)             Blk Debug Info                          01-CEEPPA\n 000001B0 00000000                           1048+         DC    A(0)             Data Descriptors for this entry point   01-CEEPPA\n 000001B4 00000000                           1049+         DC    A(0)             GPR save bit mask      X'10'      @D2A  01-CEEPPA\n 000001B8 00000000                           1050+         DC    A(0)             Member PPA1 word       X'14'      @D2A  01-CEEPPA\n 000001BC 00000000                           1051+         DC    A(0)                             Offset X'18'      @D2A  01-CEEPPA\n                                             1052+* Language Environment flags (16bits)           Offset X'1C'      @D2A\n 000001C0 00                                 1053+         DC    B'00000000'                                        @D2A  01-CEEPPA\n                                             1054+*                 Bit 0-1 00 = Old code entry performs full save  @D2A\n                                             1055+*                         01 = Old code performs partial save     @D2A\n                                             1056+*                         10 = Old code performs partial save+R12 @D2A\n                                             1057+*                 Bit 2   0  = Allow asynchronous exceptions      @D2A\n                                             1058+*                         1  = Defer asynchronous exceptions      @D2A\n                                             1059+*                 Bit 3   0  = Word 0 of SA not initialized       @D2A\n                                             1060+*                         1  = Word 0 of SA initialized           @D2A\n                                             1061+*                 Bit 4   0  = Code is nonexternal glue           @D2A\n                                             1062+*                         1  = Code is external glue              @D2A\n                                             1063+*                 Bit 5   0  = Real return addr saved in SA at    @D2A\n                                             1064+*                              offset '0C'X                       @D2A\n                                             1065+*                         1  = Real return addr saved in linkage  @D2A\n                                             1066+*                              area                               @D2A\n                                             1067+*                 Bit 6   0  = Storage argument area start        @D2A\n                                             1068+*                              indeterminate                      @D2A\n                                             1069+*                         1  = Storage argument area start valid  @D2A\n                                             1070+*                 Bit 7   0  = R12 must contain CAA address upon  @D2A\n                                             1071+*                              old code entry                     @D2A\n                                             1072+*                         1  = R12 not defined upon old code entry@D2A\n 000001C1 00                                 1073+         DC    B'00000000'                                        @D2A  01-CEEPPA\n                                             1074+*                 Bit 8   0  = Not vararg routine                 @D2A\n                                             1075+*                         1  = Vararg routine                     @D2A\n                                             1076+*                 Bit 9   0  = Asynchronous interrupts unsupported@D2A\n                                             1077+*                         1  = Asynchronous interrupts supported  @D2A\n                                             1078+*                 Bit 10  0  = No module service level            @D2A\n                                             1079+*                         1  = Module service level applied       @D2A\n                                             1080+*                 Bit 11-15  = Reserved                           @D2A\n 000001C2                                    1081+         DS    0H                                                       01-CEEPPA\n 000001C2 0006                               1082+PPANL0018 DC   AL2(6)        .  Length of Entry Point Name              01-CEEPPA\n 000001C4 E4C9D4C1E2D4                       1083+         DC    CL6'UIMASM'   .  Entry Point Name                        01-CEEPPA\n 000001CA                                    1084+         DS    0H                                                       01-CEEPPA\n                                             1085+*\n                                             1086+**********************************************************************\n                                             1087+*        P R O G R A M  P R O L O G  A R E A 2   ( P P A 2)          *\n                                             1088+**********************************************************************\n                                             1089+*\n                                             1090+         EXTRN CEESTART                                                 01-CEEPPA\n 000001CC                                    1091+PPA20018    DS    0F                                                    01-CEEPPA\n 000001CC 0F                                 1092+         DC    AL1(15)          Member ID                               01-CEEPPA\n 000001CD 00                                 1093+         DC    AL1(0)           Sub ID                                  01-CEEPPA\n 000001CE 00                                 1094+         DC    AL1(0)           Member defined                          01-CEEPPA\n 000001CF 01                                 1095+         DC    AL1(1)           Level of PPAx control blocks            01-CEEPPA\n 000001D0 00000000                           1096+PPA2S0018   DC    A(CEESTART)      A(CEESTART for this load module)     01-CEEPPA\n 000001D4 00000000                           1097+         DC    A(0)             A(Compile Debug Information (CDI) )     01-CEEPPA\n 000001D8 00000014                           1098+         DC    A(CEETIMES-PPA20018)   A(Offset to time stamp)           01-CEEPPA\n 000001DC 00000000                           1099+PPA2M0018   DC    A(UIMASM)      . A(first entry point in comp. unit)   01-CEEPPA\n                                             1100+*\n1          UIMASM DFDSS OMVS exit                                                                               Page   23\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0  Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            1101+**********************************************************************\n                                             1102+*                 T I M E    S T A M P                               *\n                                             1103+**********************************************************************\n                                             1104+*\n                                             1105+*        Time Stamp\n                                             1106+*,Time Stamp = 2012/11/30 08:23:00                                      01-CEEPPA\n                                             1107+*,Version 1 Release 1 Modification 0                                    01-CEEPPA\n 000001E0                                    1108+CEETIMES DS    0F                                                       01-CEEPPA\n 000001E0 F2F0F1F2                           1109+         DC    CL4'2012'          Year                                  01-CEEPPA\n 000001E4 F1F1                               1110+         DC    CL2'11'            Month                                 01-CEEPPA\n 000001E6 F3F0                               1111+         DC    CL2'30'            Day                                   01-CEEPPA\n 000001E8 F0F8                               1112+         DC    CL2'08'            Hours                                 01-CEEPPA\n 000001EA F2F3                               1113+         DC    CL2'23'            Minutes                               01-CEEPPA\n 000001EC F0F0                               1114+         DC    CL2'00'            Seconds                               01-CEEPPA\n 000001EE F140                               1115+         DC    CL2'1'             Version                               01-CEEPPA\n 000001F0 F140                               1116+         DC    CL2'1'             Release                               01-CEEPPA\n 000001F2 F040                               1117+         DC    CL2'0'             Modification                          01-CEEPPA\n 000001F4 C1C4D9C4E2E2E440                   1118 EPADRDSSU DC   CL8'ADRDSSU'       module address\n 000001FC 00000000                           1119 UIM      DC    V(UIM)             UIM function pointer\n 00000200 00000002                           1120 CEEDEST  DC    A(2)               message dest code\n 00000204 00000000                           1121 UIMASMA  DC    A(UIMASM)          module start address\n 00000208 0000                               1122 UNABLE   DC    Y(UNABLEME-UNABLEME) length\n 0000020A 40A4958182938540                   1123 UNABLEM  DC    C' unable to load ADRDSSU'\n                         00000221            1124 UNABLEME EQU  *\n 00000228                                    1125          LTORG\n 00000228 00000002                           1126                =A(DUBTASKACEE)\n 0000022C 00000000                           1127                =A(0)\n 00000230 0004                               1128                =AL2(DSSCUIML)\n 00000232 0004                               1129                =AL2(DSSCDATAL)\n 00000000                00000000 000001B4   1130 WORK     DSECT\n 00000000                00000000 00000080   1131          ORG  *+CEEDSASZ         space for fix part of DSA\n 00000080 0000000000000000                   1132 CALLSAVE  DC  18A(0)             call save area\n 000000C8 0000000000000000                   1133 PARMLIST DC    5A(0)             parmlist with 5 entries\n 000000DC 00000000                           1134 EPARM    DC    A(0)              entry parm\n 000000E0 0700                               1135          CNOP  2,4               align half word\n 000000E2 0004                               1136 DSSCUIM  DC    AL2(DSSCUIML)     length\n 000000E4 00000000                           1137 DSSCUIMA DC    AL4(0)            MODULE address\n                         00000004            1138 DSSCUIML EQU   *-DSSCUIMA        length def\n 000000E8 0700                               1139          CNOP  2,4               align half word\n 000000EA 0004                               1140 DSSCDATA  DC   AL2(DSSCDATAL)    length\n 000000EC 00000000                           1141 DSSCDATAA DC   AL4(0)            address\n                         00000004            1142 DSSCDATAL EQU  *-DSSCDATAA       length\n 000000F0 00000000                           1143 ADRDSSU  DC    A(0)              adrdssu address\n                                             1144 *ALLMOUT CALL  ,(,,),VL,MF=L     3-argument parameter list\n                                             1145 CALLMOUT CALL  ,(,,),VL,MF=L     3-argument parameter list\n 000000F4                                    1149+CALLMOUT DS    0F                                                       02-IHBOPLTX\n 000000F4 00000000                           1150+         DC    A(0)                              PROB. PROG. PARAMETER  02-IHBOPLTX\n 000000F8 00000000                           1151+         DC    A(0)                              PROB. PROG. PARAMETER  02-IHBOPLTX\n 000000FC 80                                 1152+         DC    B'10000000'                       SET VL SWITCH BIT      02-IHBOPLTX\n 000000FD 000000                             1153+         DC    AL3(0)                            PROB. PROG. PARAMETER  02-IHBOPLTX\n 00000100 00000000                           1154 USERAREA  DC  A(0)               user area pointer\n 00000104 00000000                           1155 NEWSAVE   DC  A(0)               secondary save\n 00000108 0000000000000000                   1156 ENTRYREGS DC  16A(0)             entry regs from C/C++\n 00000148 00000000                           1157 UIMPARM  DC    A(0)              UIM parm\n 0000014C 0000000000000000                   1158 CALLREGS  DC  18A(0)             call save area\n1          UIMASM DFDSS OMVS exit                                                                               Page   24\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000194 00000000                           1159 RETURN_VALUE DC A(0)             return value\n 00000198 00000000                           1160 RETURN_CODE  DC A(0)             return code\n 0000019C 00000000                           1161 REASON_CODE  DC A(0)             reason code\n                                             1162 CALL_S1DD CALL ,(,,,,),VL,MF=L\n 000001A0                                    1166+CALL_S1DD DS   0F                                                       02-IHBOPLTX\n 000001A0 00000000                           1167+         DC    A(0)                              PROB. PROG. PARAMETER  02-IHBOPLTX\n 000001A4 00000000                           1168+         DC    A(0)                              PROB. PROG. PARAMETER  02-IHBOPLTX\n 000001A8 00000000                           1169+         DC    A(0)                              PROB. PROG. PARAMETER  02-IHBOPLTX\n 000001AC 00000000                           1170+         DC    A(0)                              PROB. PROG. PARAMETER  02-IHBOPLTX\n 000001B0 80                                 1171+         DC    B'10000000'                       SET VL SWITCH BIT      02-IHBOPLTX\n 000001B1 000000                             1172+         DC    AL3(0)                            PROB. PROG. PARAMETER  02-IHBOPLTX\n                         000001B4            1173 WORKSIZE EQU  *-WORK             work area size\n                                             1174 *        ceecaa ,\n                                             1175          CEECAA ,\n                                             1176+***********************************************************************\n                                             1177+*  C O M M O N   A N C H O R   A R E A   ( C A A )                    *\n                                             1178+***********************************************************************\n                                             1179+*\n                                             1181+***********************************************************************\n                                             1182+***********************************************************************\n                         00000004            1183+LEPTRLEN EQU    4                                                       02-CEEDNUT\n                                             1184+*\n 00000000                00000000 00000400   1185+CEECAA   DSECT    ,                 CAA mapping                         01-CEECAA\n 00000000                                    1186+CEECAAFLAG0 DS    X                 CAA Flags                           01-CEECAA\n                         00000002            1187+CEECAAXHDL  EQU   X'02'              Bypass exception handling          01-CEECAA\n                                             1188+*           EQU   X'FD'              Reserved\n 00000001                                    1189+            DS    X                 Reserved                            01-CEECAA\n                         00000020            1190+CEECAADBGINIT EQU X'20'              Debugger is initialized            01-CEECAA\n 00000002                                    1191+CEECAALANGP DS    X                 PL/I compatibility flags            01-CEECAA\n                         00000008            1192+CEECAATHFN  EQU   X'08'              If set, NO PL/I FINISH             01-CEECAA\n                                             1193+*                                    on-unit active\n                                             1194+*           EQU   X'F7'               Reserved\n 00000003                                    1195+            DS    XL5               Reserved                            01-CEECAA\n 00000008                                    1196+CEECAABOS   DS    A                 Start of current storage segment    01-CEECAA\n 0000000C                                    1197+CEECAAEOS   DS    A                 End of current storage segment      01-CEECAA\n 00000010                                    1198+            DS    XL52              Reserved                            01-CEECAA\n 00000044                                    1199+CEECAATORC  DS    F                 Thread level return code            01-CEECAA\n 00000048                                    1200+            DS    XL44              Reserved                 @CM0419C   01-CEECAA\n 00000074                                    1201+CEECAATOVF  DS    A                 Stack overflow routine   @CM0419A   01-CEECAA\n 00000078                                    1202+            DS    XL168             Reserved                 @CM0419A   01-CEECAA\n 00000120                                    1203+CEECAAATTN  DS    A                 Addr of LE/370 attention handler    01-CEECAA\n                                             1204+*\n 00000124                                    1205+            DS    XL56              Reserved                            01-CEECAA\n 0000015C                                    1206+CEECAAHLLEXIT DS  A                 Set by CEEBINT for user hook exit   01-CEECAA\n 00000160                                    1207+            DS    XL56              Reserved                            01-CEECAA\n 00000198                                    1208+CEECAAHOOK  DS    XL12              Code to pass control                01-CEECAA\n 000001A4                                    1209+CEECAADIMA  DS    A                 A(debugger entry)                   01-CEECAA\n                                             1210+*\n 000001A8                                    1211+CEECAAHOOKS DS    0CL68             Hook control words for debugger@G3C 01-CEECAA\n 000001A8                                    1212+CEECAAALLOC DS    XL4               ALLOCATE descr. built               01-CEECAA\n 000001AC                                    1213+CEECAASTATE DS    XL4               New statement begins                01-CEECAA\n 000001B0                                    1214+CEECAAENTRY DS    XL4               Block entry                         01-CEECAA\n 000001B4                                    1215+CEECAAEXIT  DS    XL4               Block exit                          01-CEECAA\n 000001B8                                    1216+CEECAAMEXIT DS    XL4               Multiple block exit                 01-CEECAA\n 000001BC                                    1217+CEECAAPATHS DS    0CL32             PATH hooks                          01-CEECAA\n1          UIMASM DFDSS OMVS exit                                                                               Page   25\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000001BC                                    1218+CEECAALABEL DS    XL4               At a label constant                 01-CEECAA\n 000001C0                                    1219+CEECAABCALL DS    XL4               Before CALL                         01-CEECAA\n 000001C4                                    1220+CEECAAACALL DS    XL4               After CALL                          01-CEECAA\n 000001C8                                    1221+CEECAADO    DS    XL4               DO block starting                   01-CEECAA\n 000001CC                                    1222+CEECAAIFTRUE  DS   XL4              True part of IF                     01-CEECAA\n 000001D0                                    1223+CEECAAIFFALSE DS   XL4              False part of IF                    01-CEECAA\n 000001D4                                    1224+CEECAAWHEN    DS   XL4              WHEN group starting                 01-CEECAA\n 000001D8                                    1225+CEECAAOTHER   DS   XL4              OTHERWISE group                     01-CEECAA\n 000001DC                                    1226+CEECAACGOTO   DS   XL4              GOTO hook for C                     01-CEECAA\n 000001E0                                    1227+CEECAARSVDH1  DS   XL4              Reserved hook                       01-CEECAA\n 000001E4                                    1228+CEECAARSVDH2  DS   XL4              Reserved hook                       01-CEECAA\n 000001E8                                    1229+CEECAAMULTEVT DS   XL4              Multiple Event Hook            @G3C 01-CEECAA\n                                             1230+*\n 000001EC                                    1231+CEECAAMEVMASK DS   XL4              Multiple Event Hook Mask       @G3A 01-CEECAA\n 000001F0                                    1232+CEECAACGENE DS    A                 Reserved                            01-CEECAA\n 000001F4                                    1233+CEECAACRENT DS    A                 C/370 writable static               01-CEECAA\n 000001F8                                    1234+CEECAACFLTINIT DS XL8               Used to covert fixed to float       01-CEECAA\n 00000200                                    1235+CEECAACPRMS DS    A                 Parms passed to IBMLIIA             01-CEECAA\n 00000204                                    1236+CEECAAC_RTL          DS   0F        Combination of 24 unique C/370 @DJC 01-CEECAA\n                                             1237+*                                   trc types & 8 common trc types\n 00000204                                    1238+CEECAAC_RTL_1        DS    X        C/370 RTL unique trace options @DJA 01-CEECAA\n                                             1239+*                                                                  @DJA\n 00000205                                    1240+CEECAAC_RTL_2        DS    X        C/370 RTL unique trace options @DJA 01-CEECAA\n                                             1241+*                                                                  @DJA\n 00000206                                    1242+CEECAAC_RTL_3        DS    X        C/370 RTL unique trace options @DJA 01-CEECAA\n                                             1243+*                    EQU   X'80'    Reserved                       @DJA\n                         00000040            1244+CEECAA_SIGNALS_L     EQU   X'40'    Low-level signals              @DJA 01-CEECAA\n                         00000020            1245+CEECAA_LOW_IO        EQU   X'20'    Low-level I/O                  @DJA 01-CEECAA\n                         00000010            1246+CEECAA_INITTERM_L    EQU   X'10'    Low-level init/term            @DJA 01-CEECAA\n                                             1247+*                    EQU   X'08'    Reserved                       @DJA\n                         00000004            1248+CEECAA_SIGNALS_H     EQU   X'04'    High-level signals             @DJA 01-CEECAA\n                         00000002            1249+CEECAA_HIGH_IO       EQU   X'02'    High-level I/O                 @DJA 01-CEECAA\n                         00000001            1250+CEECAA_INITTERM_H    EQU   X'01'    High-level init/term           @DJA 01-CEECAA\n                                             1251+*                                                                  @DJA\n 00000207                                    1252+CEECAAC_COMTRACE     DS    X        Common RTL trace options       @DJA 01-CEECAA\n                                             1253+*                    EQU   X'80'    Reserved                       @DJA\n                                             1254+*                    EQU   X'40'    Reserved                       @DJA\n                         00000020            1255+CEECAA_RTLXPLI       EQU   X'20'    RTL XPLINK trace               @DJA 01-CEECAA\n                         00000010            1256+CEECAA_RTLCICS       EQU   X'10'    RTL CICS   trace               @DJA 01-CEECAA\n                         00000008            1257+CEECAA_RTLALLOC      EQU   X'08'    RTL Alloc  trace               @DJA 01-CEECAA\n                         00000004            1258+CEECAA_RTLCOUNT      EQU   X'04'    RTL Function counting          @DJA 01-CEECAA\n                         00000002            1259+CEECAA_RTLLOCKS      EQU   X'02'    RTL or user locking            @DJA 01-CEECAA\n                         00000001            1260+CEECAA_RTLFUNC       EQU   X'01'    RTL function entry/exit        @DJA 01-CEECAA\n                                             1261+*\n 00000208                                    1262+CEECAACTHD  DS    A                                                     01-CEECAA\n 0000020C                                    1263+CEECAACURRFECB DS A                                                     01-CEECAA\n 00000210                                    1264+CEECAAEDCV  DS    A                 C/370 vector table                  01-CEECAA\n 00000214                                    1265+CEECAACPCB  DS    A                                                     01-CEECAA\n 00000218                                    1266+CEECAACEDB  DS    A                 C/370 CEDB                          01-CEECAA\n 0000021C                                    1267+            DS    XL3                                                   01-CEECAA\n 0000021F                                    1268+CEECAASPCFLAG3 DS X                                                     01-CEECAA\n 00000220                                    1269+CEECAACIO   DS    A                 Address oc cio                      01-CEECAA\n 00000224                                    1270+CEECAAFDSETFD DS  F                 Used by FD_* macros                 01-CEECAA\n 00000228                                    1271+CEECAAFCBMUTEXOK DS XL2                                                 01-CEECAA\n 0000022A                                    1272+            DS    XL2                                                   01-CEECAA\n1          UIMASM DFDSS OMVS exit                                                                               Page   26\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000022C                                    1273+CEECAATC16  DS    F                                                     01-CEECAA\n 00000230                                    1274+CEECAATC17  DS    F                                                     01-CEECAA\n 00000234                                    1275+CEECAAEDCOV DS    A                 C/370 Open Libvec                   01-CEECAA\n 00000238                                    1276+CEECAACTOFSV DS   F                                                     01-CEECAA\n 0000023C                                    1277+CEECAATRTSPACE DS A                 C/370 Open Libvec                   01-CEECAA\n 00000240                                    1278+            DS    XL24                                                  01-CEECAA\n 00000258                                    1279+CEECAA_TCASRV DS  0CL36             TCA Service Rtn Vector              01-CEECAA\n 00000258                                    1280+CEECAA_TCASRV_USERWORD  DS A                                            01-CEECAA\n 0000025C                                    1281+CEECAA_TCASRV_WORKAREA  DS A                                            01-CEECAA\n 00000260                                    1282+CEECAA_TCASRV_GETMAIN   DS A                                            01-CEECAA\n 00000264                                    1283+CEECAA_TCASRV_FREEMAIN  DS A                                            01-CEECAA\n 00000268                                    1284+CEECAA_TCASRV_LOAD      DS A                                            01-CEECAA\n 0000026C                                    1285+CEECAA_TCASRV_DELETE    DS A                                            01-CEECAA\n 00000270                                    1286+CEECAA_TCASRV_EXCEPTION DS A                                            01-CEECAA\n 00000274                                    1287+CEECAA_TCASRV_ATTENTION DS A                                            01-CEECAA\n 00000278                                    1288+CEECAA_TCASRV_MESSAGE   DS A                                            01-CEECAA\n 0000027C                                    1289+            DS    XL4               Reserved                            01-CEECAA\n 00000280                                    1290+CEECAALWS   DS    A                 Addr of PL/I Language Working Space 01-CEECAA\n 00000284                                    1291+CEECAASAVR  DS    A                 Register save            @CM0419A   01-CEECAA\n 00000288                                    1292+            DS    XL36              Reserved                       @P6C 01-CEECAA\n                                             1293+*\n 000002AC                                    1294+CEECAASYSTM DS    X                 Underlying Operating System@MF0072A 01-CEECAA\n                         00000000            1295+CEECAASYUND EQU   X'00'               undefined                @MF0072A 01-CEECAA\n                         00000001            1296+CEECAASYUNS EQU   X'01'               unsupported              @MF0072A 01-CEECAA\n                         00000002            1297+CEECAASYVM  EQU   X'02'               VM                       @MF0072A 01-CEECAA\n                         00000003            1298+CEECAASYMVS EQU   X'03'               MVS                      @MF0072A 01-CEECAA\n 000002AD                                    1299+CEECAAHRDWR DS    X                 Underlying Hardware        @MF0072A 01-CEECAA\n                         00000000            1300+CEECAAHWUND EQU   X'00'               undefined                @MF0072A 01-CEECAA\n                         00000001            1301+CEECAAHWUNS EQU   X'01'               unsupported              @MF0072A 01-CEECAA\n                         00000002            1302+CEECAAHW370 EQU   X'02'               System / 370 non-XA      @MF0072A 01-CEECAA\n                         00000003            1303+CEECAAHWXA  EQU   X'03'               System / 370 XA          @MF0072A 01-CEECAA\n                         00000004            1304+CEECAAHWESA EQU   X'04'               System / 370 ESA         @MF0072A 01-CEECAA\n 000002AE                                    1305+CEECAASBSYS DS    X                 Underlying Subsystem       @MF0072A 01-CEECAA\n                         00000000            1306+CEECAASSUND EQU   X'00'               undefined                @MF0072A 01-CEECAA\n                         00000001            1307+CEECAASSUNS EQU   X'01'               unsupported              @MF0072A 01-CEECAA\n                         00000002            1308+CEECAASSNON EQU   X'02'               no subsystem             @MF0072A 01-CEECAA\n                         00000003            1309+CEECAASSTSO EQU   X'03'               TSO                      @MF0072A 01-CEECAA\n                         00000005            1310+CEECAASSCIC EQU   X'05'               CICS                     @MF0072A 01-CEECAA\n 000002AF                                    1311+CEECAAFLAG2 DS    X                                            @MF0072A 01-CEECAA\n                         00000080            1312+CEECAABIMODAL EQU X'80'             Bimodal addressing         @MF0072A 01-CEECAA\n                         00000040            1313+CEECAA_VECTOR EQU X'40'             vector hardware available  @MF0072A 01-CEECAA\n                         00000020            1314+CEECAATIP     EQU X'20'             Thread termination in progress      01-CEECAA\n                         00000010            1315+CEECAA_THREAD_INITIAL EQU X'10'     if on, indicates this is the IPT    01-CEECAA\n                         00000008            1316+CEECAA_TRACE_ACTIVE   EQU X'08'     If on, library trace is active      01-CEECAA\n                                             1317+*                                    (TRACE runtime option was set)\n                         00000004            1318+CEECAA_ALTSTK_ACTIVE  EQU X'04'     If on, alt stack active    @KCG0034 01-CEECAA\n                         00000002            1319+CEECAA_ENQ_WAIT_INTERRUPTABLE EQU X'02' PL/I doing Exclusive   KN80230  01-CEECAA\n                                             1320+*                                       file in Multitasking   KN80230\n                         00000001            1321+CEECAA_USRSTK_ACTIVE  EQU X'01'     If on, context switching user stack 01-CEECAA\n                                             1322+*                                       is active              PQ04250\n                                             1323+*\n 000002B0                                    1324+CEECAALEVEL DS    X                 LE/370 level identifier             01-CEECAA\n                         00000019            1325+CEL_LEVEL_IDENTIFIER EQU X'19'                                     @DUC 01-CEECAA\n 000002B1                                    1326+CEECAA_PM   DS    X                 PROGRAM MASK               @NX0166C 01-CEECAA\n 000002B2                                    1327+CEECAA_INVAR DS   XL2               At same offset in 31 & 64 mode @G3C 01-CEECAA\n1          UIMASM DFDSS OMVS exit                                                                               Page   27\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000002B4                                    1328+CEECAAGETLS DS    A                 ADDR OF LE/370 LIBRARY STACK MGR    01-CEECAA\n 000002B8                                    1329+CEECAACELV  DS    A                 Addr of LE/370 LIBVEC               01-CEECAA\n 000002BC                                    1330+CEECAAGETS  DS    A                 Addr of LE/370 get stack stg rtn    01-CEECAA\n 000002C0                                    1331+CEECAALBOS  DS    A                 Start of library stack stg seg      01-CEECAA\n 000002C4                                    1332+CEECAALEOS  DS    A                 End of library stack stg seg        01-CEECAA\n 000002C8                                    1333+CEECAALNAB  DS    A                 Next available byte of lib stg      01-CEECAA\n 000002CC                                    1334+CEECAADMC   DS    A                 Addr of ESPIE Devil-May-Care rtn    01-CEECAA\n 000002D0                                    1335+CEECAAABCODE DS   0F                Most recent ABEND completion CDE    01-CEECAA\n 000002D0                                    1336+CEECAACD    DS    XL4               Most recent CAASHAB abend code      01-CEECAA\n 000002D4                                    1337+CEECAARSNCODE DS  0F                Most recent ABEDN reason Code       01-CEECAA\n 000002D4                                    1338+CEECAARS    DS    XL4               Most recent CAASHAB reason code     01-CEECAA\n 000002D8                                    1339+CEECAAERR   DS    A                 Addr of the current CIB             01-CEECAA\n 000002DC                                    1340+CEECAAGETSX DS    A                 Addr of LE/370 stack stg extender   01-CEECAA\n 000002E0                                    1341+CEECAADDSA  DS    A                 Addr of the dummy DSA               01-CEECAA\n 000002E4                                    1342+CEECAASECTSIZ DS  F                 Vector Section Size                 01-CEECAA\n 000002E8                                    1343+CEECAAPARTSUM DS  F                 Vector Partial Sum Number           01-CEECAA\n 000002EC                                    1344+CEECAASSEXPNT DS  F                 Log of Vector Section Size          01-CEECAA\n 000002F0                                    1345+CEECAAEDB   DS    A                 address of the EDB                  01-CEECAA\n 000002F4                                    1346+CEECAAPCB   DS    A                 address of the PCB                  01-CEECAA\n                                             1347+* ---------------------------------------------------------------------\n                                             1348+* - THE FOLLOWING TWO FIELDS ARE USED FOR VALIDATION OF THE CAA.      -\n                                             1349+* ---------------------------------------------------------------------\n 000002F8                                    1350+CEECAAEYEPTR DS   A                 addr of CAA eyecatcher              01-CEECAA\n 000002FC                                    1351+CEECAAPTR   DS    A                 addr of this CAA                    01-CEECAA\n 00000300                                    1352+CEECAAGETS1 DS    A                 DSA alloc - R13 not DSA addr        01-CEECAA\n 00000304                                    1353+CEECAASHAB  DS    A                 ABEND shunt routine address         01-CEECAA\n 00000308                                    1354+CEECAAPRGCK DS    A                 pgm interrupt code for CAADMC       01-CEECAA\n 0000030C                                    1355+CEECAAFLAG1 DS    X                 CAA Flag 1                          01-CEECAA\n                         00000080            1356+CEECAASORT  EQU   B'10000000'       Call to DFSORT is active            01-CEECAA\n                         00000040            1357+CEECAA_USE_OLD_STK  EQU  B'01000000'  use old stack               @P5A  01-CEECAA\n                         00000020            1358+CEECAA_CICS_EXT_REG EQU  B'00100000'  CICS extended regs active   @DQA  01-CEECAA\n                         00000010            1359+CEECAASHAB_RECOVER_IN_ESTAE_MODE EQU B'00010000'                 @DYA   01-CEECAA\n                                             1360+*                                   LE ESTAE should set up to    @DYA\n                                             1361+*                                   retry at the CEECAASHAB      @DYA\n                                             1362+*                                   address in the same mode and @DYA\n                                             1363+*                                   key as when the LE ESTAE was @DYA\n                                             1364+*                                   established.                 @DYA\n                         00000008            1365+CEECAASHAB_IGNORED               EQU B'00001000'                 @DYA   01-CEECAA\n                                             1366+*                                   Set when CEECAASHAB ignored  @DYA\n                         00000004            1367+CEECAA_FETCH_RELES_IN_PROGRESS   EQU B'00000100'                 @E1A   01-CEECAA\n 0000030D                                    1368+CEECAASHAB_KEY    DS  X             IPK result when abend shunt  @DYA   01-CEECAA\n                                             1369+*                                   routine is established       @DYA\n 0000030E                                    1370+            DS    CL2               reserved                     @DYC   01-CEECAA\n 00000310                                    1371+CEECAAURC   DS    F                 Thread level return code.           01-CEECAA\n 00000314                                    1372+CEECAARSRV1 DS    4A                                                    01-CEECAA\n                                             1373+* ---------------------------------------------------------------------\n                                             1374+* - THE FOLLOWING FIELD CONTAINS THE PRE-INIT COMPATABILITY           -\n                                             1375+* - CONTROL BLOCK ADDRESS.                                            -\n                                             1376+* ---------------------------------------------------------------------\n 00000324                                    1377+CEECAAPICICB DS   A                 Addr of pre-init compatability cb   01-CEECAA\n 00000328                                    1378+CEECAARSRV2  DS   A                                                     01-CEECAA\n                                             1379+* ---------------------------------------------------------------------\n 0000032C                                    1380+CEECAAGOSMR  DS   H                 Go Some More. used TRAV multiple    01-CEECAA\n 0000032E                                    1381+             DS   H                 skip.                               01-CEECAA\n                                             1382+* ---------------------------------------------------------------------\n1          UIMASM DFDSS OMVS exit                                                                               Page   28\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000330                                    1383+CEECAALEOV   DS   A                 Addr of LE/OpenMVS LIBVEC           01-CEECAA\n 00000334                                    1384+CEECAA_SIGSCTR        DS  F         SIGSAFE Counter            @C54544  01-CEECAA\n                                             1385+*\n 00000338                                    1386+CEECAA_SIGSFLG        DS  XL4       SIGSAFE Flags              @C54544  01-CEECAA\n                                             1387+*\n                                             1388+*                     First byte                                   @P4A\n                                             1389+*\n                         00000080            1390+CEECAA_SIGPUTBACK     EQU X'80'     Signal Putback                      01-CEECAA\n                         00000040            1391+CEECAA_SA_RESTART     EQU X'40'     SA_Restart processing needed        01-CEECAA\n                                             1392+*                     EQU X'20'     <unused>\n                         00000010            1393+CEECAA_SIGSAFE        EQU X'10'     Indicates that synchronous          01-CEECAA\n                                             1394+*                                    signals are safe to be delivered\n                                             1395+*                                    regardless of where the interrupt\n                                             1396+*                                    occurred\n                         00000008            1397+CEECAA_CANCELSAFE     EQU X'08'     Indicates that synchronous @CM0565A 01-CEECAA\n                                             1398+*                                    cancels are safe to be    @CM0565A\n                                             1399+*                                    delivered regardless of   @CM0565A\n                                             1400+*                                    where the interrupt       @CM0565A\n                                             1401+*                                    occurred                  @CM0565A\n                         00000004            1402+CEECAA_SIGRESYNCH     EQU X'04'     One or more synchronous signals     01-CEECAA\n                                             1403+*                                    may have been recently put back\n                                             1404+*                                    last time a signal was resolicited\n                                             1405+*                                    when returning to non-XPLINK\n                                             1406+*                                    user code\n                         00000002            1407+CEECAA_FRZ_UNSAFE     EQU X'02'     This thread is in an unsafe state   01-CEECAA\n                                             1408+*                                   to be frozen (set by members)\n                         00000001            1409+CEECAA_NOAPPREGS      EQU X'01'     User Application registers may      01-CEECAA\n                                             1410+*                                   be saved in a nonstandard place\n                                             1411+*                                                                  @DFA\n                                             1412+*                     Second byte                                  @P4A\n                                             1413+*\n                         00000080            1414+CEECAA_EINTR_RSOL     EQU   X'80'   Secondary signal resolicit          01-CEECAA\n                                             1415+*                                   in progress after EINTR\n                                             1416+*                                   from inner function            @P4A\n                         00000040            1417+CEECAA_EINTR_PUTB     EQU   X'40'   Secondary resolicited signal        01-CEECAA\n                                             1418+*                                   has been put back              @P4A\n                         00000020            1419+CEECAA_EINTR_REST     EQU   X'20'   User catcher returned after         01-CEECAA\n                                             1420+*                                   catching secondary\n                                             1421+*                                   resolicited signal with\n                                             1422+*                                   SA_RESTART in effect           @P4A\n                         00000010            1423+CEECAA_EINTR_SIGG     EQU   X'10'   \"Stray\" signal interrupted          01-CEECAA\n                                             1424+*                                   CEEOSIGG while secondary\n                                             1425+*                                   signal resolicitation\n                                             1426+*                                   was in progress                @P4A\n                                             1427+*                     EQU   X'08'   Reserved                       @P4A\n                                             1428+*                     EQU   X'04'   Reserved                       @P4A\n                                             1429+*                     EQU   X'02'   Reserved                       @P4A\n                                             1430+*                     EQU   X'01'   Reserved                       @P4A\n                                             1431+*\n                                             1432+*                     (16 unused bits)                             @P4C\n                                             1433+*\n 0000033C                                    1434+CEECAATHDID           DS  CL8       Posix thread id                     01-CEECAA\n 00000344                                    1435+CEECAA_DCRENT         DS  A         CRENT anchor for DCE                01-CEECAA\n 00000348                                    1436+CEECAA_DANCHOR        DS  A         DCE anchor per thread               01-CEECAA\n 0000034C                                    1437+CEECAA_CTOC           DS  A         TOC anchor for CRENT                01-CEECAA\n1          UIMASM DFDSS OMVS exit                                                                               Page   29\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000350                                    1438+CEECAARCB             DS  A         A(RCB)                              01-CEECAA\n 00000354                                    1439+CEECAACICSRSN         DS  A         CICS reason code from member        01-CEECAA\n                                             1440+*                                   language\n 00000358                                    1441+CEECAAMEMBR           DS  A         Addr of thread-level member list    01-CEECAA\n 0000035C                                    1442+CEECAA_SIGNAL_STATUS  DS  A         Signal stat for terminating thd     01-CEECAA\n 00000360                                    1443+CEECAA_HCOM_REG7      DS 0A         Saved Reg7  from HCOM               01-CEECAA\n 00000360                                    1444+CEECAA_HCOM_REG14     DS  A         Saved Reg14 from HCOM   @CH0092A    01-CEECAA\n 00000364                                    1445+CEECAA_STACKFLOOR     DS  A         Lowest usable addr in HP stack      01-CEECAA\n 00000368                                    1446+CEECAAHPGETS          DS  A         HP stack extension rtn              01-CEECAA\n 0000036C                                    1447+CEECAAEDCHPXV         DS  A         C/C++ XPLINK libvec                 01-CEECAA\n 00000370                                    1448+CEECAAFOR1            DS  A         Reserved for FORTRAN                01-CEECAA\n 00000374                                    1449+CEECAAFOR2            DS  A         Reserved for FORTRAN                01-CEECAA\n 00000378                                    1450+CEECAATHREADHEAPID    DS  A         Thread heapid         @NX0093A      01-CEECAA\n 0000037C                                    1451+CEECAA_SYS_RTNCODE    DS  F         Sys (kernel) return code @CM1752    01-CEECAA\n 00000380                                    1452+CEECAA_SYS_RSNCODE    DS  F         Sys (kernel) reason code @CM1752    01-CEECAA\n 00000384                                    1453+CEECAAGETFN           DS  A         Address of WSA swap routine         01-CEECAA\n 00000388                                    1454+CEECAA_LER4           DS  CL8       Reserved for expansion LE 1.4       01-CEECAA\n                                             1455+********************************************************************\n                                             1456+*    LE V1R5M0 EXTERNAL CONTROL BLOCK SECTION                      *\n                                             1457+*      - any external control block fields should be added         *\n                                             1458+*        in this section.  Extra reserved space was added          *\n                                             1459+*        with the intention of at end of project the excess        *\n                                             1460+*        reserved space will be removed and all external fields    *\n                                             1461+*        will be shifted.                                          *\n                                             1462+********************************************************************\n 00000390                                    1463+CEECAASIGNGPTR        DS  A         Pointer to 'signam' external        01-CEECAA\n                                             1464+*                                   variable in a C application\n 00000394                                    1465+CEECAASIGNG           DS  F         value of sign of lgamma()           01-CEECAA\n                                             1466+*                                    -1 - negative sign\n                                             1467+*                                     0 - zero\n                                             1468+*                                    +1 - positive sign\n 00000398                                    1469+CEECAA_FORDBG         DS  A         Ptr to AFHDBHIM -        @N80095A   01-CEECAA\n                                             1470+*                                   FORTRAN hook interface   @N80095A\n 0000039C                                    1471+CEECAAAB_STATUS       DS  X         validity flags           KN80120    01-CEECAA\n                         00000080            1472+CEECAAAB_GR0_VALID    EQU X'80'     CEECAAAB_GR0 is valid    KN80120    01-CEECAA\n                         00000040            1473+CEECAAAB_ICD1_VALID   EQU X'40'     CEECAAAB_ICD1 is valid   KN80120    01-CEECAA\n                         00000020            1474+CEECAAAB_ABCC_VALID   EQU X'20'     CEECAAAB_ABCC is valid   KN80120    01-CEECAA\n                         00000010            1475+CEECAAAB_CRC_VALID    EQU X'10'     CEECAAAB_CRC is valid    KN80120    01-CEECAA\n                         00000008            1476+CEECAAAB_GR15_VALID   EQU X'08'     CEECAAAB_GR15 is valid   KN80120    01-CEECAA\n 0000039D                                    1477+CEECAA_STACKDIRECTION DS  X         Stack Direction                     01-CEECAA\n                         00000000            1478+CEECAASTACK_UP        EQU X'00'     Up                                  01-CEECAA\n                         00000001            1479+CEECAASTACK_DOWN      EQU X'01'     Down (XPLINK)                       01-CEECAA\n 0000039E                                    1480+                      DS  XL2       RESERVED                 KN80120    01-CEECAA\n 000003A0                                    1481+CEECAAAB_GR0          DS  A         Reg 0                    KN80120    01-CEECAA\n 000003A4                                    1482+CEECAAAB_ICD1         DS  A         SDWAICD1                 KN80120    01-CEECAA\n 000003A8                                    1483+CEECAAAB_ABCC         DS  A         SDWAABCC                 KN80120    01-CEECAA\n 000003AC                                    1484+CEECAAAB_CRC          DS  A         SDWACRC                  KN80120    01-CEECAA\n                         000002D4            1485+CEECAAAB_GR15         EQU CEECAARS  reg 15                   KN80120    01-CEECAA\n 000003B0                                    1486+CEECAAAGTS            DS  A         C compiler stk inc       KN00102    01-CEECAA\n 000003B4                                    1487+CEECAA_LER5N1         DS  CL4       reserved for expansion   KCG0088    01-CEECAA\n 000003B8                                    1488+CEECAAHERP            DS  A         A(CEEHERP)               KCG0061    01-CEECAA\n 000003BC                                    1489+CEECAAUSTKBOS         DS  A         Start of user stack seg  PQ04250    01-CEECAA\n 000003C0                                    1490+CEECAAUSTKEOS         DS  A         End of user stack seg    PQ04250    01-CEECAA\n 000003C4                                    1491+CEECAAUSERRTN@        DS  A         A(UserRtn) for pthread     @01A     01-CEECAA\n 000003C8                                    1492+CEECAAUDHOOK          DS  XL8       hook swapping xplink       @DBA     01-CEECAA\n1          UIMASM DFDSS OMVS exit                                                                               Page   30\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            1493+*                     DS  BL8       reserved                   @DBA\n                                             1494+*CEECAAUDHOOKSW        DS  BL4       hook switch                @DBA\n                                             1495+*                      DS  BL4       reserved                   @DBA\n                                             1496+*                      DS  XL6       reserved                   @DBA\n 000003D0                                    1497+CEECAACEL_HPXV_B      DS  A         Address of XPLink compat   @DCC     01-CEECAA\n                                             1498+*                                    vector for Base library   @DCA\n 000003D4                                    1499+CEECAACEL_HPXV_M      DS  A         Address of XPLink compat   @DCA     01-CEECAA\n                                             1500+*                                    vector for Math library   @DCA\n 000003D8                                    1501+CEECAACEL_HPXV_L      DS  A         Address of XPLink          @DCC     01-CEECAA\n                                             1502+*                                    compat vector for         @DCA\n                                             1503+*                                    Locale library            @DCA\n 000003DC                                    1504+CEECAACEL_HPXV_O      DS  A         Address of XPLink          @DDA     01-CEECAA\n                                             1505+*                                    compat vector for         @DDA\n                                             1506+*                                    Open library              @DDA\n 000003E0                                    1507+CEECAACEL4VEC3        DS  A         Address of Vec3 LibVec     @DHA     01-CEECAA\n 000003E4                                    1508+CEECAA_CEEDLLF          DS A        Addr of newest CEEDLLF.  Not   @P6M 01-CEECAA\n                                             1509+*                                   same offset as in 64bit.       @P6M\n 000003E8                                    1510+CEECAA_SAVSTACK       DS  A         Saved Stack pointer used for   @DPA 01-CEECAA\n                                             1511+*                                     OS_NOSTACK linkage           @DPA\n 000003EC                                    1512+                      DS  XL4       Reserved                       @DSC 01-CEECAA\n 000003F0                                    1513+CEECAA_USER_WORD      DS  F         CAA user word                  @DVC 01-CEECAA\n 000003F4                                    1514+CEECAA_SAVSTACK_ASYNC DS  A         Zero or address of 4-byte field@DPA 01-CEECAA\n                                             1515+*                                   where the stack pointer can be @DPA\n                                             1516+*                                   saved. When the stack pointer  @DPA\n                                             1517+*                                   is saved here, asynchronous    @DPA\n                                             1518+*                                   signals will be accepted.      @DPA\n 000003F8                                    1519+                      DS  A         Reserved for COBOL             @DZA 01-CEECAA\n 000003FC                                    1520+                      DS  XL4       Available                      @DZA 01-CEECAA\n                         00000094            1521+CEECELVGTUN EQU  148                Offset to Get user nab service.     01-CEECAA\n                                             1522 *        ceedsa ,\n                                             1523          CEEDSA ,\n                                             1524+*\n                                             1525+**********************************************************************\n                                             1526+*   D Y N A M I C   S T O R A G E   A R E A    ( D S A )             *\n                                             1527+**********************************************************************\n                                             1528+*\n 00000000                00000000 000000DE   1529+CEEDSA   DSECT 0D         Default DSECT NAME for SECTYPE=ALL            01-CEEDSA\n                                             1530+*\n 00000000                                    1531+CEEDSAFLAGS DS XL2                  DSA flags                           01-CEEDSA\n                         00001000            1532+CEEDSALNGC EQU X'1000'                C library DSA                     01-CEEDSA\n                         00000800            1533+CEEDSALNGP EQU X'0800'                PL/I library DSA                  01-CEEDSA\n                         00000008            1534+CEEDSAEXIT EQU X'0008'                An Exit DSA                       01-CEEDSA\n 00000002                                    1535+CEEDSAMEMD DS  XL2                  Member defined                      01-CEEDSA\n 00000004                                    1536+CEEDSABKC DS   A                    Addr of DSA of caller               01-CEEDSA\n 00000008                                    1537+CEEDSAFWC DS   A                    Addr of DSA of last called rtn      01-CEEDSA\n 0000000C                                    1538+CEEDSAR14 DS   F                    Save area for register 14           01-CEEDSA\n 00000010                                    1539+CEEDSAR15 DS   F                    Save area for register 15           01-CEEDSA\n 00000014                                    1540+CEEDSAR0 DS    F                    Save area for register 0            01-CEEDSA\n 00000018                                    1541+CEEDSAR1 DS    F                    Save area for register 1            01-CEEDSA\n 0000001C                                    1542+CEEDSAR2 DS    F                    Save area for register 2            01-CEEDSA\n 00000020                                    1543+CEEDSAR3 DS    F                    Save area for register 3            01-CEEDSA\n 00000024                                    1544+CEEDSAR4 DS    F                    Save area for register 4            01-CEEDSA\n 00000028                                    1545+CEEDSAR5 DS    F                    Save area for register 5            01-CEEDSA\n 0000002C                                    1546+CEEDSAR6 DS    F                    Save area for register 6            01-CEEDSA\n 00000030                                    1547+CEEDSAR7 DS    F                    Save area for register 7            01-CEEDSA\n1          UIMASM DFDSS OMVS exit                                                                               Page   31\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000034                                    1548+CEEDSAR8 DS    F                    Save area for register 8            01-CEEDSA\n 00000038                                    1549+CEEDSAR9 DS    F                    Save area for register 9            01-CEEDSA\n 0000003C                                    1550+CEEDSAR10 DS   F                    Save area for register 10           01-CEEDSA\n 00000040                                    1551+CEEDSAR11 DS   F                    Save area for register 11           01-CEEDSA\n 00000044                                    1552+CEEDSAR12 DS   F                    Save area for register 12           01-CEEDSA\n 00000048                                    1553+CEEDSALWS DS   A                    Addr of PL/I Language Working Space 01-CEEDSA\n 0000004C                                    1554+CEEDSANAB DS   A                    Addr of next available byte         01-CEEDSA\n 00000050                                    1555+CEEDSAPNAB DS  A                    Addr of end-of-prolog NAB           01-CEEDSA\n 00000054                                    1556+           DS  4F                                                       01-CEEDSA\n 00000064                                    1557+CEEDSATRAN DS  0A                   HPL TxArea or                       01-CEEDSA\n 00000064                                    1558+CEEDSARENT DS  A                    Program reentry address-IPAT        01-CEEDSA\n 00000068                                    1559+CEEDSACILC DS  A                    C to Fortran ILC save area          01-CEEDSA\n 0000006C                                    1560+CEEDSAMODE DS  A                    Return address of module that       01-CEEDSA\n                                             1561+*                                   caused the last mode switch\n 00000070                                    1562+           DS  2F                                                       01-CEEDSA\n 00000078                                    1563+CEEDSARMR  DS  A                    Addr of language specific           01-CEEDSA\n                                             1564+*                                   exception handler\n                                             1565+*\n 0000007C                                    1566+           DS  F                    Reserved                            01-CEEDSA\n 00000080                                    1567+CEEDSAAUTO DS  0D                   Automatic storage starts here       01-CEEDSA\n 00000080                                    1568+CEEDSAEND  DS  0D                   End of DSA                          01-CEEDSA\n                         00000080            1569+CEEDSASZ EQU   CEEDSAEND-CEEDSA     Size of DSA                         01-CEEDSA\n                         00000000            1570+CEEDSA_STDCEEDSA  EQU   X'0000'     flag values of standard CEE DSA     01-CEEDSA\n                                             1571+*\n                                             1572+*\n                                             1573+*\n                                             1574+*\n                                             1575+**********************************************************************\n                                             1576+*   X P L I N K   D Y N A M I C   S T O R A G E   A R E A            *\n                                             1577+**********************************************************************\n                                             1578+*\n 00000000                00000000 00000840   1579+CEEDSAHP DSECT 0D         Default DSECT NAME for SECTYPE=ALL            01-CEEDSA\n                                             1581+***********************************************************************\n                                             1582+***********************************************************************\n                                             1583+*\n 00000000                                    1584+CEEDSAHP_BIAS  DS XL2048             BIAS -- DO NOT USE                 01-CEEDSA\n                         00000800            1585+CEEDSAHPBIASSZ EQU *-CEEDSAHP_BIAS   Size of Down Stack Bias            01-CEEDSA\n 00000800                                    1586+CEEDSAHP_FIXED DS 0X                 Start of fixed part                01-CEEDSA\n 00000800                                    1587+CEEDSAHP4TO15 DS 12F                 Save area for regs 4-15            01-CEEDSA\n 00000830                00000830 00000800   1588+            ORG CEEDSAHP_FIXED                                          01-CEEDSA\n 00000800                                    1589+CEEDSAHP4TO7  DS 4F                  Save area for regs 4-7             01-CEEDSA\n 00000810                00000810 00000800   1590+            ORG CEEDSAHP_FIXED                                          01-CEEDSA\n 00000800                                    1591+CEEDSAHPR4  DS F                     Save area for register 4           01-CEEDSA\n 00000804                                    1592+CEEDSAHPR5  DS F                     Save area for register 5           01-CEEDSA\n 00000808                                    1593+CEEDSAHPR6  DS F                     Save area for register 6           01-CEEDSA\n 0000080C                                    1594+CEEDSAHPR7  DS F                     Save area for register 7           01-CEEDSA\n 00000810                                    1595+CEEDSAHP8TO15 DS 8F                  Save area for regs 8-15            01-CEEDSA\n 00000830                00000830 00000810   1596+            ORG CEEDSAHP8TO15                                           01-CEEDSA\n 00000810                                    1597+CEEDSAHPR8  DS F                     Save area for register 8           01-CEEDSA\n 00000814                                    1598+CEEDSAHPR9  DS F                     Save area for register 9           01-CEEDSA\n 00000818                                    1599+CEEDSAHPR10 DS F                     Save area for register 10          01-CEEDSA\n 0000081C                                    1600+CEEDSAHPR11 DS F                     Save area for register 11          01-CEEDSA\n 00000820                                    1601+CEEDSAHPR12 DS F                     Save area for register 12          01-CEEDSA\n 00000824                                    1602+CEEDSAHPR13 DS F                     Save area for register 13          01-CEEDSA\n 00000828                                    1603+CEEDSAHPR14 DS F                     Save area for register 14          01-CEEDSA\n1          UIMASM DFDSS OMVS exit                                                                               Page   32\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000082C                                    1604+CEEDSAHPR15 DS F                     Save area for register 15          01-CEEDSA\n 00000830                                    1605+            DS F                     Reserved for LE use                01-CEEDSA\n 00000834                                    1606+CEEDSAHPMBRUSE DS F                  Reserved for LE Member use         01-CEEDSA\n 00000838                                    1607+CEEDSAHPTRAN DS A                    Addr of transition area            01-CEEDSA\n 0000083C                                    1608+CEEDSAHP_ARG_PRE DS 0A               Argument prefix area               01-CEEDSA\n 0000083C                                    1609+CEEDSAHPRENT     DS A                or Program reentry addr-IPAT       01-CEEDSA\n                         00000040            1610+CEEDSAHPSZ  EQU *-CEEDSAHP_FIXED     Size of fixed DSA                  01-CEEDSA\n 00000840                                    1611+CEEDSAHP_ARGLIST DS 0X               Start of Vary length arg list      01-CEEDSA\n                                             1612+*\n                                             1613+*\n 00000080                00000000 000000DE   1614+CEEDSA   DSECT  ,                                                       01-CEEDSA\n                                             1615 *        ADREID0\n                                             1616          ADREID0\n1          UIMASM DFDSS OMVS exit                                                                               Page   33\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            1618+*%SKPEID0:;\n                                             1619+*@EJECT;\n                                             1620+* /* *************************************************************** */\n                                             1621+* /*                                                                 */\n                                             1622+* /* $MAC(ADREID0)  COMP(DF175) PROD(5694-A01): DFSMSdss         @P0A*/\n                                             1623+* /*                                                                 */\n                                             1624+* /*   MACRO NAME:  ADREID0                                          */\n                                             1625+* /*                                                                 */\n                                             1626+* /*   DESCRIPTIVE NAME:  EXIT IDENTIFICATION BLOCK                  */\n                                             1627+* /*                                                                 */\n                                             1628+* /*******************************************************************/\n                                             1629+* /*PROPRIETARY V3 STATEMENT                                         */\n                                             1630+* /*LICENSED MATERIALS - PROPERTY OF IBM                             */\n                                             1631+* /*\"RESTRICTED MATERIALS OF IBM\"                                    */\n                                             1632+* /*5694-A01                                                         */\n                                             1633+* /*COPYRIGHT 1992,2011  IBM CORP.                                   */\n                                             1634+* /*END PROPRIETARY V3 STATEMENT                                     */\n                                             1635+* /*******************************************************************/\n                                             1636+* /* LICENSED MATERIALS - PROPERTY OF IBM.                           */\n                                             1637+* /*-----------------------------------------------------------------*/\n                                             1638+* /*                                                                 */\n                                             1639+* /*   STATUS:  VERSION  1  RELEASE  13  LEVEL  0                @DMC*/\n                                             1640+* /*                                                                 */\n                                             1641+* /*   FUNCTION:                                                     */\n                                             1642+* /*              THE EXIT IDENTIFICATION BLOCK IS INITIALIZED       */\n                                             1643+* /*    BY DFDSS PRIOR TO CALLING THE USER INTERACTION MODULE        */\n                                             1644+* /*    AND ACTS AS THE INTERFACE BETWEEN DFDSS THE USER INTERACTION */\n                                             1645+* /*    MODULE EXITS.                                                */\n                                             1646+* /*                                                                 */\n                                             1647+* /*******************************************************************/\n                                             1648+* /*   Note:  Because this macro is published in the books and       */\n                                             1649+* /*   shipped to customers, it is important to not disclose         */\n                                             1650+* /*   internal information in the comments on the individual field  */\n                                             1651+* /*   names below.  Also, all comments should be in upper case (to  */\n                                             1652+* /*   maintain a consistent style for the pubs).                    */\n                                             1653+* /*******************************************************************/\n                                             1654+* /*                                                                 */\n                                             1655+* /*   INVOCATION:  PLS -- INCLUDE ADREID0                           */\n                                             1656+* /*                BAL -- ADREID0                                   */\n                                             1657+* /*                                                                 */\n                                             1658+* /*   CHANGE ACTIVITY:  NEW MACRO                               @V21*/\n                                             1659+* /*   ADD UIM EXITS 16, 17, 18 AND 19.                         @V22G*/\n                                             1660+* /*   IMPLEMENT PL02135 FIX                                 @V23N253*/\n                                             1661+* /*       PL02135      09/03/86   MAPPING PROBLEM           @LA02135*/\n                                             1662+* /*   ADD NEW FLAG WORD                        3/25/87      @LA09760*/\n                                             1663+* /*   CORRECT ASSEMBLER EIXERR EQUATE TO MATCH PLS          @V23N298*/\n                                             1664+* /*   ADD SUPPORT FOR UIM-20                         KUI0280 @V24AEG*/\n                                             1665+* /*   ADDED SUPPORT FOR UIM-21, 22, AND 23                      @V25*/\n                                             1666+* /*   CHANGED EI22BCAT FLAG TO EI22BMIG FLAG       07/07/88   @DS007*/\n                                             1667+* /*   ADD EIXWNGOK TO INFORM UIM THAT ALL WARNINGS 12/28/89 @LA54862*/\n                                             1668+* /*     WERE NOT FATAL                                              */\n                                             1669+* /*   ADD EIREC14 TO MAP THE RECORD FOR EXIT 14    07/05/90 @LA65381*/\n                                             1670+* /*   VRRDS DATASET SUPPORT                         10APR91 @LA82401*/\n                                             1671+* /*   MAINTENANCE ROLL-UP                           14JUN91 @NA00267*/\n                                             1672+* /*   EI22LIKE BIT ADDED FOR RESTORE/COPY TO LIKE DEVICE    @LA71949*/\n1          UIMASM DFDSS OMVS exit                                                                               Page   34\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            1673+* /*                IN AN SMS ENVIRONMENT            18JUN91 @LA71949*/\n                                             1674+* /*   EI22EXTR BIT ADDED FOR RESTORE TO THE SAME VOLUME     @NA06820*/\n                                             1675+* /*   ADDED SUPPORT FOR UIM-24                                  @V26*/\n                                             1676+* /*                THAT IS BEING EXTENT REDUCED     05NOV91 @NA06820*/\n                                             1677+* /*   VOLSLST, EXITRECL CONSTANTS ADDED             06NOV91 @NA08383*/\n                                             1678+* /*   ADDED EIREC00 (FWD FIT OF PN05364)            05JAN93 @OY57120*/\n                                             1679+* /*   MODIFIED TO SUPPORT OY60302 SECURITY APAR     19JAN93 @OY60302*/\n                                             1680+* /*   MADE EI22SFLG SOURCE DSET FLAGS AVAILABLE     06AUG93 @OY62462*/\n                                             1681+* /* $L4=BWO,HDZ11B0,20SEP93,TPCDDR: BACKUP WHILE OPEN SUPPORT   @L4A*/\n                                             1682+* /*   CHANGES FOR PARTIAL/INCOMPLETE RECALL         26JAN94 @OW01655*/\n                                             1683+* /* $RLS=HDZ11C0,26JUL94,TPCJT: SDSH/RLS support for V1.3.0     @RLS*/\n                                             1684+* /*   SUPERCEDE OUT OW01655-Phase 1 Partial RECALL  22JUL94 @OW06093*/\n                                             1685+* /*   Design change to inform UIM when track is bad 16AUG94 @OW07425*/\n                                             1686+* /* $RLS=HDZ11C0,23FEB95,TPCJT: SDSH/RLS support for V1.3.0     @RLS*/\n                                             1687+* /* AX cell support for PDSs                        05Apr95 @K131935*/\n                                             1688+* /*   Pass DS byte count in option 23 for PSE       24FEB95 @OW11555*/\n                                             1689+* /*   MSGIEV167 during assemble (KJT0057)           05SEP95 @OW15420*/\n                                             1690+* /*   CHANGES TO SUPPORT DSSXMAPI                   14AUG95 @OW13783*/\n                                             1691+* /* RECOMPILE FOR AE OW14125/OW13783                18OCT95 @OW16394*/\n                                             1692+* /* AE FIX FOR OW16394 - RESHIP, NO CODE CHANGE     24OCT95 @OW16551*/\n                                             1693+* /*   DEFINE NEW EI22IMS AND EI22BWOE FIELDS FOR    14NOV95 @OW15980*/\n                                             1694+* /*   IMS BWO SUPPORT FOR DFSMS 1.C.0               18MAR96 @OW15980*/\n                                             1695+* /* Define EI00SENQ to prevent lockout with hsm     04Jun96 @OW20023*/\n                                             1696+* /* $RLSCDS=HDZ11D0,09Jul96,TPCMAH: RLS hsm CDS     09Jul96  @RLSCDS*/\n                                             1697+* /* ADD EIDDOF1, EIDDOF2 FOR XMAPI                  12AUG96 @OW21750*/\n                                             1698+* /* AE FIX FOR OW21750. ADD EIXTWERR FOR XMAPI      26AUG96 @OW22314*/\n                                             1699+* /* ADD EIXTRERR FOR XMAPI                          18SEP96 @OW22673*/\n                                             1700+* /* APPLICATION INTERFACE EXTENSIONS.               12MAR97 @OW25343*/\n                                             1701+* /* ADD EI00NONF TO EIREC00 FOR NO IGWNOTIF CALL    11JUL97 @OW28223*/\n                                             1702+* /* REMOVE EIDDOF1, EIDDOF2 AND ADD EIXTRC32        31MAY98 @OW33495*/\n                                             1703+* /* PASS DCB@ & WRITING TRAILER FLAG IN EXIT 6      01AUG98 @OW34887*/\n                                             1704+* /* PASS WTO PLIST DURING XMAPI EIOP11              16DEC98 @OW36779*/\n                                             1705+* /* RECOMPILE FOR AE OW36779                        18DEC98 @OW36834*/\n                                             1706+* /* $FSM=HDZ11F0,22JAN99,TPCGN: Fast Second Migrate 22JAN99     @FSM*/\n                                             1707+* /* ADD EI00NOLK TO EIREC00 FOR NO ADRLOCK ENQ/DEQ  25JAN00 @OW42942*/\n                                             1708+* /* ADD EI22DB2 BIT TO EXIT 22 FOR API EXTENSION    16JUN00 @OW45048*/\n                                             1709+* /* $ALF=HDZ11H0,15JUL02,TPCYLD: APPLICATION LEVEL FAST         @ALF*/\n                                             1710+* /*  REPLICATION SUPPORT - ADDED EI00NENQ EI00BSEC EI00SVOL     @ALF*/\n                                             1711+* /* Add 'Output Volume Close' call to exit 26       04DEC02 @OW57536*/\n                                             1712+* /*   - add EI26VCLO                                04DEC02 @OW57536*/\n                                             1713+* /* Corrected misplaced comments                    25SEP03 @OA05056*/\n                                             1714+* /* $IBC=HDZ1180,15MAR05,TPCRSG: IMS BWO SUPPORT FOR            @IBC*/\n                                             1715+* /*      LOGICAL DATA SET COPY                                  @IBC*/\n                                             1716+* /* $PDC=HDZ11L0,02JUN05,TPCANW: Physical Data Set Copy         @PDC*/\n                                             1717+* /* ADDED CANDIDATE WITH SPACE BIT FOR E27/E20 NEEDS TO BE  @K180227*/\n                                             1718+* /*   WHEN VVRCANSP IS ON TO INDICATE THAT THE EI27DRBA     @K180227*/\n                                             1719+* /*   SHOULD NOT BE CONSIDERED TO BE PART OF THE EI27DSHA   @K180227*/\n                                             1720+* /* ADDED E27TRACF BIT TO PLX WAS IN ASM BUT NOT IN PLX     @K180278*/\n                                             1721+* /* ADDED COMMENT REGARDING THE EXIT 27 ESDS BITS           @K180512*/\n                                             1722+* /* REMOVED CANDIDATE WITH SPACE INDICATORS       10JAN06   @K180724*/\n                                             1723+* /* MOVED E27TRACF OUT OF EXIT 23 AND INTO EXIT27 25MAY06   @OA16588*/\n                                             1724+* /*      (ONLY WRONG IN THE PL/X)                           @OA16588*/\n                                             1725+* /* FIX ASSEMBLER SO IT COMPILES (NO FIELD CHANGES) 18JUL06 @OA17350*/\n                                             1726+* /* $TPE=K190406,06NOV06,TPCANW: TAPE ENCRYPTION SUPPORT        @TPE*/\n                                             1727+* /* $P0=K1A1264,HDZ1A10,18DEC07,TPCCK: Restore F9 info          @P0A*/\n1          UIMASM DFDSS OMVS exit                                                                               Page   35\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            1728+* /* $XES=OA22125,13MAY08,TPCJPE: JAG 3 XMEM SUPPORT             @XES*/\n                                             1729+* /* $E2=EAVR2,HDZ1B10,29AUG08,TPCJPE: EAVR2 CODE SUPPORT        @E2A*/\n                                             1730+* /* $CE=K1C0001,HDZ1C10,09JAN09,TPCRSG: CA Reclaim Enablement   @CEA*/\n                                             1731+* /* FIXING BAD DECLARES IN EXIT 28                  01JUN09 @OA29235*/\n                                             1732+* /* FIXING BAD DECLARES IN EXIT 28 (CA Reclaim)     01JUL09 @K1C0372*/\n                                             1733+* /* $P1=K1C1182,HDZ1C10,22DEC09,TPCANW: Max Exit DCL        @K1C1182*/\n                                             1734+* /* $DM=K1D0020,HDZ1D10,16FEB10,TPCANW: EXIT 29                 @DMA*/\n                                             1735+* /* $P2= OA37260 D10 09AUG11 TPCRSG : zOSMF support             @P2A*/\n                                             1736+* /*                                                                 */\n                                             1737+* /*   CHANGE DATE: 09AUG11                                      @P2C*/\n                                             1738+* /*                                                                 */\n                                             1739+* /* *************************************************************** */\n                                             1740+*%GOTO PLSEID0;           /* GO TO THE PLS VERSION */\n 00000080 C5C9C4C2                           1741+ADREIBID DC    C'EIDB'              /* BLOCK IDENTIFIER              */ 01-ADREID0\n 00000084                                    1742+ADREIB@  DS    F'0'                                                     01-ADREID0\n 00000088 0000                               1743+EIOP00   DC    X'0000'              /* FUNCTION STARTUP ENTRY        */ 01-ADREID0\n 0000008A 0001                               1744+EIOP01   DC    X'0001'              /* READING SYSIN RECORD          */ 01-ADREID0\n 0000008C 0002                               1745+EIOP02   DC    X'0002'              /* PRINTING SYSPRINT RECORD      */ 01-ADREID0\n 0000008E 0003                               1746+EIOP03   DC    X'0003'              /* READING TAPE BLOCK RECORD     */ 01-ADREID0\n 00000090 0004                               1747+EIOP04   DC    X'0004'              /* READING TAPE LOGICAL RECORD   */ 01-ADREID0\n 00000092 0005                               1748+EIOP05   DC    X'0005'              /* WRITING TAPE LOGICAL RECORD   */ 01-ADREID0\n 00000094 0006                               1749+EIOP06   DC    X'0006'              /* WRITING TAPE BLOCK RECORD     */ 01-ADREID0\n 00000096 0007                               1750+EIOP07   DC    X'0007'              /* READING DISK TRACK            */ 01-ADREID0\n 00000098 0008                               1751+EIOP08   DC    X'0008'              /* WRITING DISK TRACK            */ 01-ADREID0\n 0000009A 0009                               1752+EIOP09   DC    X'0009'              /* READING UTILITY SYSPRINT      */ 01-ADREID0\n 0000009C 000A                               1753+EIOP10   DC    X'000A'              /* WRITING UTILITY SYSPRINT      */ 01-ADREID0\n 0000009E 000B                               1754+EIOP11   DC    X'000B'              /* WRITING WTO MESSAGE           */ 01-ADREID0\n 000000A0 000C                               1755+EIOP12   DC    X'000C'              /* WRITING WTOR MESSAGE          */ 01-ADREID0\n 000000A2 000D                               1756+EIOP13   DC    X'000D'              /* PRESENTING ADRUFO RECORD      */ 01-ADREID0\n 000000A4 000E                               1757+EIOP14   DC    X'000E'              /* FUNCTION TERMINATION ENTRY    */ 01-ADREID0\n 000000A6 000F                               1758+EIOP15   DC    X'000F'              /* PRESENTING WTOR RESPONSE      */ 01-ADREID0\n 000000A8 0010                               1759+EIOP16   DC    X'0010'              /* TAPE VOL SEC/VERIFY       @V22*/ 01-ADREID0\n 000000AA 0011                               1760+EIOP17   DC    X'0011'              /* TAPE VOL MOUNT(NON-SPEC)  @V22*/ 01-ADREID0\n 000000AC 0012                               1761+EIOP18   DC    X'0012'              /* INSERT RESTORE RECORD     @V22*/ 01-ADREID0\n 000000AE 0013                               1762+EIOP19   DC    X'0013'              /* OUTPUT TAPE ERROR         @V22*/ 01-ADREID0\n 000000B0 0014                               1763+EIOP20   DC    X'0014'              /* VOLUME NOTIFICATION       @V24*/ 01-ADREID0\n 000000B2 0015                               1764+EIOP21   DC    X'0015'              /* DATA SET VERIFICATION     @V25*/ 01-ADREID0\n 000000B4 0016                               1765+EIOP22   DC    X'0016'              /* BYPASS VERIFICATION       @V25*/ 01-ADREID0\n 000000B6 0017                               1766+EIOP23   DC    X'0017'              /* DS PROCESSED NOTIFICATION @V25*/ 01-ADREID0\n 000000B8 02C4                               1767+VOLSLST  DC    X'02C4'              /* MAX SIZE OF VOLSER LIST          01-ADREID0\n                                             1768+*                                      FOR EIREC23 (118 * 6) @NA08383*/\n 000000BA 0018                               1769+EIOP24   DC    X'0018'          /* CONCURRENT COPY INIT COMPLETE @V26*/ 01-ADREID0\n 000000BC 0019                               1770+EIOP25   DC    X'0019'              /* BACKSPACE INPUT TAPE  @OW13783*/ 01-ADREID0\n 000000BE 001A                               1771+EIOP26   DC    X'001A'              /* VOLUME OPEN FOR O/P   @OW15980*/ 01-ADREID0\n 000000C0 001B                               1772+EIOP27   DC    X'001B'              /* PHYSICAL DS PROCESSED     @PDC*/ 01-ADREID0\n 000000C2 001C                               1773+EIOP28   DC    X'001C'              /* TARGET ALLOCATION         @E2C*/ 01-ADREID0\n 000000C4 001D                               1774+EIOP29   DC    X'001D'              /* Reserved                  @P2C*/ 01-ADREID0\n 000000C6 001D                               1775+EIMAXOP  DC    X'001D'              /* MAX VALID EXIT NUMBER     @DMC*/ 01-ADREID0\n 000000C8 0030                               1776+EXITRECL DC    X'0030'              /* EXIT RECORD LENGTH    @NA08383*/ 01-ADREID0\n 000000CA 0000                               1777+EIRC00   DC    X'0000'              /* CONTINUE NORMAL PROCESSING    */ 01-ADREID0\n 000000CC 0004                               1778+EIRC04   DC    X'0004'              /* RECORD REPLACED               */ 01-ADREID0\n 000000CE 0008                               1779+EIRC08   DC    X'0008'              /* INSERT RECORD                 */ 01-ADREID0\n 000000D0 000C                               1780+EIRC12   DC    X'000C'              /* DELETE RECORD                 */ 01-ADREID0\n 000000D2 0010                               1781+EIRC16   DC    X'0010'              /* RECORD MODIFIED               */ 01-ADREID0\n 000000D4 0014                               1782+EIRC20   DC    X'0014'              /* DISCONNECT EXIT               */ 01-ADREID0\n1          UIMASM DFDSS OMVS exit                                                                               Page   36\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0000000D6 0018                               1783+EIRC24   DC    X'0018'              /* SELECT USER STATISTICAL RECS  */ 01-ADREID0\n 000000D8 001C                               1784+EIRC28   DC    X'001C'              /* WTOR RESPONSE                 */ 01-ADREID0\n 000000DA 0020                               1785+EIRC32   DC    X'0020'              /* TERMINATE FUNCTION        @V22*/ 01-ADREID0\n 000000DC 0024                               1786+EIRC36   DC    X'0024'              /* TERMINATE DATA SET ONLY   @V25*/ 01-ADREID0\n 00000000                00000000 0000002C   1787+ADREIB   DSECT                                                          01-ADREID0\n 00000000                                    1788+EIDLLEN  DS    H                    /* LENGTH OF ADREIB - 2      @V22*/ 01-ADREID0\n 00000002                                    1789+EIID     DS    CL4                  /* BLOCK IDENTIFIER EBCDIC \"EID0\"*/ 01-ADREID0\n 00000006                                    1790+EITSKID  DS    FL4                  /* TASK ID NUM OF CALLER @LA02135*/ 01-ADREID0\n 0000000A                                    1791+EIXALLOW DS    0XL4                 /* USER EXIT ALLOWANCE OPTIONS   */ 01-ADREID0\n 0000000A                                    1792+EIXALOW0 DS    X                    /* ALLOWANCE OPTIONS BYTE 1      */ 01-ADREID0\n                         00000080            1793+EIXREP   EQU   X'80'                /* ALLOW REPLACE OF RECORD       */ 01-ADREID0\n                         00000040            1794+EIXINS   EQU   X'40'                /* ALLOW INSERT OF RECORD        */ 01-ADREID0\n                         00000020            1795+EIXDEL   EQU   X'20'                /* ALLOW DELETE OF RECORD        */ 01-ADREID0\n                         00000010            1796+EIXMOD   EQU   X'10'                /* ALLOW MODIFICATION OF RECORD  */ 01-ADREID0\n                         00000008            1797+EIXDIS   EQU   X'08'                /* ALLOW DISCONNECT OF EXIT      */ 01-ADREID0\n                         00000004            1798+EIXWTOR  EQU   X'04'                /* ALLOW WTOR RESPONSE           */ 01-ADREID0\n                         00000002            1799+EIXSTAT  EQU   X'02'                /* ALLOW SELECTION OF USER STATS */ 01-ADREID0\n                         00000001            1800+EIXTERM  EQU   X'01'                /* ALLOW TERMINATION OF FUNC @V22*/ 01-ADREID0\n 0000000B                                    1801+EIXALOW1 DS    X                    /* ALLOWANCE OPTIONS BYTE 2      */ 01-ADREID0\n                         00000080            1802+EIXTDSET EQU   X'80'                /* ALLOW DATA SET TERMINATION@V25*/ 01-ADREID0\n 0000000C                                    1803+EIXALOW2 DS    X                    /* ALLOWANCE OPTIONS BYTE 3      */ 01-ADREID0\n 0000000D                                    1804+EIXALOW3 DS    X                    /* ALLOWANCE OPTIONS BYTE 4      */ 01-ADREID0\n                         00000080            1805+EIXERR   EQU   X'80'                /* DIS-ALLOWED OPTION    @V23N298*/ 01-ADREID0\n 0000000E                                    1806+EIOPTION DS    H                    /* PROCESSING OPTION             */ 01-ADREID0\n 00000010                                    1807+EIRETCOD DS    H                    /* EXIT RETURN CODE              */ 01-ADREID0\n 00000012                                    1808+EIRECALN DS    FL4                  /* RECORD AREA LENGTH    @LA02135*/ 01-ADREID0\n 00000016                                    1809+EIRECLEN DS    FL4                  /* ORIGINAL RECORD LEN   @LA02135*/ 01-ADREID0\n 0000001A                                    1810+EIRECPTR DS    FL4                  /* ORIGINAL RECORD ADDR  @LA02135*/ 01-ADREID0\n 0000001E                                    1811+EIUSEPTR DS    FL4                  /* USER DATA AREA PTR    @V23N253*/ 01-ADREID0\n 00000022                                    1812+EIDDID   DS    0FL4                 /* EIOP06 DDN/VOLID PTR  @OW36779*/ 01-ADREID0\n 00000022                                    1813+EIXMWPL  DS    FL4                  /* EIOP11 WTO PLIST PTR  @OW36779*/ 01-ADREID0\n 00000026                                    1814+EIXFLAGS DS    0XL4                 /* OTHER FLAGS           @LA09760*/ 01-ADREID0\n 00000026                                    1815+EIXFLAG0 DS    X                    /* FLAG BYTE 0           @LA09760*/ 01-ADREID0\n                         00000080            1816+EIXABEND EQU   X'80'                /* ABEND MESSAGE FLAG    @LA09760*/ 01-ADREID0\n                         00000040            1817+EIXNTERR EQU   X'40'                /* NON-TAPE ERR MSG FLAG @LA09760*/ 01-ADREID0\n                         00000020            1818+EIXWNGOK EQU   X'20'                /* WARNINGS ARE OK  FLAG @LA54862*/ 01-ADREID0\n                         00000010            1819+EIXTRKER EQU   X'10'                /* track is in error     @OW07425*/ 01-ADREID0\n 00000027                                    1820+EIXFLAG1 DS    X                    /* FLAG BYTE 1           @LA09760*/ 01-ADREID0\n                         00000080            1821+EIXTRC32 EQU   X'80'                /* UIM SET EIRETCOD 32   @OW33495*/ 01-ADREID0\n                         00000020            1822+EIXTDUMS EQU   X'20'                /* DUMMY SOURCE TAPE     @OW13783*/ 01-ADREID0\n                         00000010            1823+EIXTDUMT EQU   X'10'                /* DUMMY TARGET TAPE     @OW13783*/ 01-ADREID0\n                         00000008            1824+EIXTISXM EQU   X'08'                /* APPL USING XMAPI      @OW13783*/ 01-ADREID0\n                         00000004            1825+EIXDASYS EQU   X'04'                /* XMAPI ALLOCATION ERR  @OW21750*/ 01-ADREID0\n                         00000002            1826+EIXTWERR EQU   X'02'                /* XMAPI TAPE WRITE ERR  @OW22314*/ 01-ADREID0\n                         00000001            1827+EIXTRERR EQU   X'01'                /* XMAPI TAPE READ ERR   @OW22673*/ 01-ADREID0\n 00000028                                    1828+EIXFLAG2 DS    X                    /* FLAG BYTE 2           @LA09760*/ 01-ADREID0\n 00000029                                    1829+EIXFLAG3 DS    X                    /* FLAG BYTE 3           @LA09760*/ 01-ADREID0\n 0000002C                                    1830+         DS    0F                   /* FORCE WORD BOUNDARY           */ 01-ADREID0\n                         0000002C            1831+EIDBLEN  EQU   *-ADREIB             /* LENGTH OF THE EIB BLOCK       */ 01-ADREID0\n                                             1832+*/********************************************************************/\n                                             1833+*/* RECORD PRESENTED BY EXIT 06 (WRITE PHYSICAL TAPE):       @OW34887*/\n                                             1834+*/* EIDDINFO IS BASED ON (EIDDID).                           @OW34887*/\n                                             1835+*/********************************************************************/\n 00000000                00000000 00000014   1836+EIDDINFO DSECT                                                          01-ADREID0\n 00000000                                    1837+EIDDNAME DS    CL8                  /* DDNAME LEFT-JUSTIFIED  @V22AEG*/ 01-ADREID0\n1          UIMASM DFDSS OMVS exit                                                                               Page   37\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000008                                    1838+EIVOLID  DS    CL6                  /* VOLUME SERIAL NO.      @V22AEG*/ 01-ADREID0\n 0000000E                                    1839+EIRETC   DS    XL1                  /* RETURN CODE            @V22AEG*/ 01-ADREID0\n 0000000F                                    1840+EI06FLGS DS    XL1                  /* EXIT 06 FLAGS         @OW34887*/ 01-ADREID0\n                         00000080            1841+EI06FTRL EQU   X'80'                /* RESERVED FOR HSM USE  @OW34887*/ 01-ADREID0\n                         00000040            1842+EI06THWE EQU   X'40'                /* RESERVED FOR HSM USE      @TPE*/ 01-ADREID0\n                                             1843+*                                   /* OUTPUT DEVICE ENCRYPTS    @TPE*/\n 00000010                                    1844+EI06DCB@ DS    AL4                  /* RESERVED FOR HSM USE  @OW34887*/ 01-ADREID0\n                                             1845+*        DS    CL4                  /* RESERVED              @OW34887*/\n                                             1846+*/********************************************************************/\n                                             1847+*/* RECORD PRESENTED BY EXIT 00 (FUNCTION STARTUP):          @OY57120*/\n                                             1848+*/********************************************************************/\n 00000000                00000000 00000010   1849+EIREC00  DSECT                      /*                       @OY57120*/ 01-ADREID0\n 00000000                                    1850+EI00SBPL DS    XL1                  /* SHARED SUBPOOL NUMBER @OY57120*/ 01-ADREID0\n 00000001                                    1851+EI00FLGS DS    XL1                  /* startup flags         @OW20023*/ 01-ADREID0\n                         00000080            1852+EI00SENQ EQU   X'80'                /* short VTOC enqueue    @OW20023*/ 01-ADREID0\n                         00000040            1853+EI00NONF EQU   X'40'                /* 1 = Don't allow IGWNOTIF call,   01-ADREID0\n                                             1854+*                                    0 = Allow IGWNOTIF call @OW28223*/\n                         00000020            1855+EI00NOLK EQU   X'20'                /* 1= NO ADRLOCK ENQ/DEQ @OW42942*/ 01-ADREID0\n                         00000010            1856+EI00NENQ EQU   X'10'                /* 1= NO INPUT VOLUME               01-ADREID0\n                                             1857+*                                      SERIALIZATION.\n                                             1858+*                                      VALID DURING PHYSICAL COPY AND\n                                             1859+*                                      DUMP FUNCTION STARTUPS    @ALF*/\n                         00000008            1860+EI00BSEC EQU   X'08'                /* 1= BYPASS SECURITY VERIFICATION. 01-ADREID0\n                                             1861+*                                      VALID DURING COPY FULL/TRACKS,\n                                             1862+*                                      DUMP FULL/TRACKS, AND RESTORE\n                                             1863+*                                      FULL/TRACKS FUNCTION STARTUPS\n                                             1864+*                                                                @ALF*/\n                         00000004            1865+EI00MVOLRECOV EQU X'04'             /* 1=CALLER IS PERFORMING A MULTI   01-ADREID0\n                                             1866+*                                      VOLUME RECOVERY USING PHYSICAL\n                                             1867+*                                      DATA SET RESTORE AND IT IS\n                                             1868+*                                      ACCEPTABLE FOR DFSMSDSS TO\n                                             1869+*                                      SCRATCH PREALLOCATED TARGET\n                                             1870+*                                      DATA SETS THAT ARE NOT THE\n                                             1871+*                                      CORRECT SIZE              @PDC*/\n                         00000002            1872+EI00BSER EQU   X'02'                /* 1=BYPASS SERIALIZATION OF THE    01-ADREID0\n                                             1873+*                                      DATA SETS BEING RESTORED DURING\n                                             1874+*                                      A PHYSICAL DATA SET RESTORE\n                                             1875+*                                      OPERATION                 @PDC*/\n                                             1876+*        EQU   X'01'                /* UNUSED                    @PDC*/\n 00000002                                    1877+EI00SVOL DS    CL6                  /* SOURCE VOLSER. VALID DURING      01-ADREID0\n                                             1878+*                                      COPY FULL/TRACKS, DUMP\n                                             1879+*                                      FULL/TRACKS, AND RESTORE\n                                             1880+*                                      FULL/TRACKS FUNCTION STARTUPS.\n                                             1881+*                                      FOR RESTORE, THIS FIELD CONTAINS\n                                             1882+*                                      VOLSER OF THE INPUT VOLUME\n                                             1883+*                                      WHERE THE DUMP DATA SET\n                                             1884+*                                      RESIDES                   @ALF*/\n 00000008                                    1885+EI00FLG2 DS    XL1                  /* 2ND FLAG AREA             @XES*/ 01-ADREID0\n                         00000080            1886+EI00SWNCRYPT EQU X'80'              /* SOFTWARE ENCRYPTION WAS   @XES*/ 01-ADREID0\n                                             1887+*                                   /* REQUESTED (RSA OR         @XES*/\n                                             1888+*                                   /* KEYPASSWORD WAS           @XES*/\n                                             1889+*                                   /* SPECIFIED)                @XES*/\n                         00000040            1890+EI00CANSFE   EQU X'40'              /* CANCEL SOFTWARE ENCRYPT   @XES*/ 01-ADREID0\n                         00000020            1891+EI00MIXDEV   EQU X'20'              /* MIXTURE OF DEVICES PERFORMING    01-ADREID0\n                                             1892+*                                      AND NOT PERFORMING HARDWARE\n1          UIMASM DFDSS OMVS exit                                                                               Page   38\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            1893+*                                      ENCRYPTION                @XES*/\n                                             1894+*       EQU    X'1F'                /* RESERVED                  @XES*/\n 00000009                                    1895+         DS    CL7                  /* RESERVED                  @XES*/ 01-ADREID0\n                                             1896+*/********************************************************************/\n                                             1897+*/* THE FOLLOWING MAPS THE RECORD PRESENTED BY EXIT 14:      @LA65381*/\n                                             1898+*/* DSS MESSAGE NUMBER ASSOCIATED WITH NON ZERO RETCODE      @LA65381*/\n                                             1899+*/********************************************************************/\n 00000000                00000000 00000010   1900+EIREC14  DSECT                                                          01-ADREID0\n 00000000                                    1901+EI14RC   DS    CL4                  /* DSS RETURN CODE       @LA65381*/ 01-ADREID0\n 00000004                                    1902+EI14MESS DS    0CL4                 /* DSS MESSAGE           @LA65381*/ 01-ADREID0\n 00000004                                    1903+EI14MNUM DS    CL3                  /*  MESSAGE NUMBER       @LA65381*/ 01-ADREID0\n 00000007                                    1904+EI14MTYP DS    CL1                  /*  MESSAGE TYPE         @LA65381*/ 01-ADREID0\n 00000008                                    1905+EI14CPUT DS    CL8                  /* DSS CPU TIME          @OW13783*/ 01-ADREID0\n                                             1906+*/********************************************************************/\n                                             1907+*/* THE FOLLOWING MAPS THE RECORD PRESENTED BY EXIT 20: VOLUME   @V24*/\n                                             1908+*/* NOTIFICATION EXIT.                                           @V24*/\n                                             1909+*/********************************************************************/\n 00000000                00000000 00000042   1910+EIREC20  DSECT                                                          01-ADREID0\n 00000000                                    1911+EI20DSN  DS    CL44                 /* DATA SET NAME/CLUSTER NAME       01-ADREID0\n                                             1912+*                                                                @V24*/\n 0000002C                                    1913+EI20FLGS DS    XL1                  /* SOME FLAGS:               @V24*/ 01-ADREID0\n                         00000080            1914+EI20VSAM EQU   X'80'                /* 1=DATA SET IS VSAM               01-ADREID0\n                                             1915+*                                      0=DATA SET IS NONVSAM     @V24*/\n                         00000040            1916+EI20RACF EQU   X'40'                /* 1=DATA SET IS PROTECTED BY A     01-ADREID0\n                                             1917+*                                      DISCRETE RACF PROFILE     @V24*/\n                         00000020            1918+EI20LVOL EQU   X'20'                /* 1=LAST VOLUME INDICATOR          01-ADREID0\n                                             1919+*                                      ON FOR NON-VSAM DATA SET  @PDC*/\n                         00000010            1920+E20F9ATT EQU   X'10'                /* F9 ATTRS LOST FLAG        @P0A*/ 01-ADREID0\n                                             1921+*        EQU   X'0F'                /* RESERVED                  @P0C*/\n 0000002D                                    1922+         DS    CL1                  /* RESERVED                  @V24*/ 01-ADREID0\n 0000002E                                    1923+EI20DA#  DS    XL1                  /* NUMBER OF DATA COMPONENTS @V24*/ 01-ADREID0\n 0000002F                                    1924+EI20IX#  DS    XL1                  /* NUMBER OF INDEX COMPONENTS       01-ADREID0\n                                             1925+*                                      (0 IF NONVSAM)            @V24*/\n 00000030                                    1926+EI20DA@  DS    AL4                  /* POINTER TO DATA COMPONENT        01-ADREID0\n                                             1927+*                                      INFO FOR VSAM/DATA SET\n                                             1928+*                                      INFO FOR NONVSAM          @V24*/\n 00000034                                    1929+EI20IX@  DS    AL4                  /* POINTER TO INDEX COMPONENT       01-ADREID0\n                                             1930+*                                      INFO FOR VSAM/0 FOR NONVSAM\n                                             1931+*                                                                @V24*/\n                                             1932+*                                   /* THE EI20SCNT, EI20DSHA,\n                                             1933+*                                      AND EI20ISHA FIELDS ARE\n                                             1934+*                                      PROVIDED WHEN PROCESSING\n                                             1935+*                                      THE FIRST VOLUME OF A MULTI\n                                             1936+*                                      VOLUME DATA SET           @PDC*/\n 00000038                                    1937+EI20SCNT DS    XL2                  /* TOTAL STRIPE COUNT FOR           01-ADREID0\n                                             1938+*                                      THIS VSAM DATA SET.\n 0000003A                                    1939+EI20DSHA DS    XL4                  /* VSAM DATA COMPONENT              01-ADREID0\n                                             1940+*                                      HIGH ALLOCATED RBA        @PDC*/\n 0000003E                                    1941+EI20ISHA DS    XL4                  /* VSAM INDEX COMPONENT             01-ADREID0\n                                             1942+*                                      HIGH ALLOCATED RBA        @PDC*/\n                                             1943+*/********************************************************************/\n                                             1944+*/* FOR A NONVSAM DATA SET, EI20DA@ WILL POINT TO A SINGLE       @V24*/\n                                             1945+*/* EI20DSI STRUCTURE.  FOR A VSAM CLUSTER, EI20DA@ POINTS TO AN @V24*/\n                                             1946+*/* ARRAY OF STRUCTURES (ONE FOR EACH DATA COMPONENT), AND       @V24*/\n                                             1947+*/* EI20IX@ POINTS TO A SIMILAR ARRAY FOR THE INDEX COMPONENTS   @V24*/\n1          UIMASM DFDSS OMVS exit                                                                               Page   39\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            1948+*/********************************************************************/\n 00000000                00000000 00000044   1949+EI20DSI  DSECT                      /* DATA SET INFO             @V24*/ 01-ADREID0\n 00000000                                    1950+EI20CON  DS    CL44                 /* COMPONENT NAME (BLANKS FOR       01-ADREID0\n                                             1951+*                                      NONVSAM)                  @V24*/\n 0000002C                                    1952+EI20NVOL DS    XL2                  /* # OF VOLUMES IN DS        @V24*/ 01-ADREID0\n 0000002E                                    1953+         DS    CL2                  /* RESERVED                  @V24*/ 01-ADREID0\n 00000030                                    1954+EI20VLI  DS    0CL12                /* VOLUME INFORMATION (REPEAT FOR   01-ADREID0\n                                             1955+*                                      EACH VOLUME               @V24*/\n 00000030                                    1956+EI20VOL  DS    CL6                  /* VOLSER                    @V24*/ 01-ADREID0\n 00000036                                    1957+E20DSTP# DS    XL2                  /* DATA COMPONENT STRIPE            01-ADREID0\n                                             1958+*                                      NUMBER                    @PDC*/\n 00000038                                    1959+EI20RBA  DS    FL4                  /* RBA TOKEN                        01-ADREID0\n                                             1960+*                                                                @V24*/\n                                             1961+*                                   /* THE EI20DRBA FIELD IS\n                                             1962+*                                      CALCULATED BY SUBTRACTING\n                                             1963+*                                      THE HIGH RBA FIELDS\n                                             1964+*                                      FROM THE LOW RBA FIELDS.  @PDC*/\n 0000003C                                    1965+EI20DRBA DS    XL4                  /* NUMBER OF RBAS PROCESSED         01-ADREID0\n                                             1966+*                                      FOR THE THIS COMPONENT    @PDC*/\n 00000040                                    1967+EI20VLSQ DS    XL2                  /* VOLUME SEQUENCE NUMBER           01-ADREID0\n                                             1968+*                                      FOR THE DATA SET          @PDC*/\n 00000042                                    1969+         DS    CL2                  /* PADDING (UNUSED)          @PDC*/ 01-ADREID0\n                                             1970+*/********************************************************************/\n                                             1971+*/* THE FOLLOWING MAPS THE RECORD PRESENTED BY EXIT 21:          @V25*/\n                                             1972+*/*    DATA SET VERIFICATION EXIT                                @V25*/\n                                             1973+*/********************************************************************/\n 00000000                00000000 0000002C   1974+EIREC21  DSECT                                                /* @V25*/ 01-ADREID0\n 00000000                                    1975+EI21DSN  DS    CL44                 /* DATA SET/CLUSTER NAME     @V25*/ 01-ADREID0\n                                             1976+*/********************************************************************/\n                                             1977+*/* THE FOLLOWING MAPS THE RECORD PRESENTED BY EXIT 22:          @V25*/\n                                             1978+*/*    BYPASS VERIFICATION EXIT                                  @V25*/\n                                             1979+*/********************************************************************/\n 00000000                00000000 00000066   1980+EIREC22  DSECT                                                /* @V25*/ 01-ADREID0\n 00000000                                    1981+EI22DSN  DS    CL44                 /* DATA SET/CLUSTER NAME     @V25*/ 01-ADREID0\n 0000002C                                    1982+EI22FLGS DS    XL1                  /* EXIT 22 FLAGS:            @V25*/ 01-ADREID0\n                         00000080            1983+EI22BSER EQU   X'80'                /* 1=BYPASS                         01-ADREID0\n                                             1984+*                                        SERIALIZATION           @V25*/\n                         00000040            1985+EI22BSEC EQU   X'40'                /* 1=BYPASS DATASET LEVEL, STORCLAS 01-ADREID0\n                                             1986+*                                        AND MGMTCLAS SECURITY CHECKS.\n                                             1987+*                                        ALSO BYPASS JES3 INTEGRITY\n                                             1988+*                                        CHECKS AND DO NOT CREATE\n                                             1989+*                                        DISCRETE DATASET PROFILES.\n                                             1990+*                                                            @OY60302*/\n                         00000020            1991+EI22BMIG EQU   X'20'                /* 1=TOLERATE MIGRATED VOLSERS      01-ADREID0\n                                             1992+*                                        FOR NONVSAM DATA SETS @DS007*/\n                                             1993+*               /* SWAPPING POSITIONS OF EI22NSYS & EI22SIRS @OW01655*/\n                         00000010            1994+EI22NSYS EQU   X'10'                /* 1=NO SYSDSN, GET ADRDSN, BWODSN  01-ADREID0\n                                             1995+*                                       AND SYSVSAM ENQUEUES    @L4A */\n                         00000008            1996+EI22LIKE EQU   X'08'                /* 1=RESTORE/COPY TO SAME           01-ADREID0\n                                             1997+*                                        DEVICE              @NA06820*/\n                         00000004            1998+EI22EXTR EQU   X'04'                /* 1=RESTORE TO SAME VOLUME BEING   01-ADREID0\n                                             1999+*                                        EXTENT REDUCED      @NA06820*/\n                         00000002            2000+EI22SIRS EQU   X'02'                /* SET INCMPLT RECALL    @OW01655   01-ADREID0\n                                             2001+*                                        SWAPPED W/ EI22NSYS @OW01655*/\n                         00000001            2002+EI22DB2  EQU   X'01'                /* 1 = DB2 RENAME        @OW45048*/ 01-ADREID0\n1          UIMASM DFDSS OMVS exit                                                                               Page   40\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            2003+*                                                                    */\n                                             2004+*/********************************************************************/\n                                             2005+*/* THE FOLLOWING WERE REMOVED FROM THE MAP OF THE RECORD    @OY62462*/\n                                             2006+*/*   PRESENTED TO EXIT 22 BUT ARE NOW RETURNED TO USE       @OY62462*/\n                                             2007+*/********************************************************************/\n 0000002D                                    2008+EI22SFLG DS    0CL5                 /* SOURCE DATA SET FLAGS @OY62462*/ 01-ADREID0\n 0000002D                                    2009+E22SSMSF DS    CL1                  /* SOURCE SMS FLAGS              */ 01-ADREID0\n                                             2010+*                                   /*                       @OY62462*/\n 0000002E                                    2011+E22SDSRG DS    CL2                  /* SOURCE DATA SET ORG           */ 01-ADREID0\n                                             2012+*                                   /*                       @OY62462*/\n 00000030                                    2013+E22SVFLG DS    XL2                  /* VSAM DATA SET FLAGS:  @OY62462*/ 01-ADREID0\n                         00000080            2014+E22SESDS EQU   X'80'                /* 1=ESDS DATA SET       @OY62462*/ 01-ADREID0\n                         00000040            2015+E22SKSDS EQU   X'40'                /* 1=KSDS DATA SET       @OY62462*/ 01-ADREID0\n                         00000020            2016+E22SKRDS EQU   X'20'                /* 1=KRDS DATA SET       @OY62462*/ 01-ADREID0\n                         00000010            2017+E22SLDS  EQU   X'10'                /* 1=LINEAR DATA SET     @OY62462*/ 01-ADREID0\n                         00000008            2018+E22SRRDS EQU   X'08'                /* 1=RRDS DATA SET       @OY62462*/ 01-ADREID0\n                         00000004            2019+E22SPSSI EQU   X'04'                /* 1=PAGE/SWAP/STGINDEX, ETC.    */ 01-ADREID0\n                                             2020+*                                   /* UNSUPPORTED DATA SETS @OY62462*/\n                         00000002            2021+E22SVVDS EQU   X'02'                /* 1=VVDS DATA SET       @OY62462*/ 01-ADREID0\n                         00000001            2022+E22SBCS  EQU   X'01'                /* 1=BCS DATA SET        @OY62462*/ 01-ADREID0\n                         00000080            2023+E22SAIX  EQU   X'80'                /* 1=AIX DATA SET        @OY62462*/ 01-ADREID0\n                         00000040            2024+E22SVRRD EQU   X'40'                /* 1=VRRDS DATASET       @OY62462*/ 01-ADREID0\n                                             2025+*        EQU   X'3F'                /* RESERVED              @OY62462*/\n 00000032                                    2026+EI22FLG2 DS    XL1                  /* MORE EXIT 22 FLAGS        @RLS*/ 01-ADREID0\n                         00000080            2027+EI22RSET EQU   X'80'                /* RESET DS CHANGED FLAG     @RLS*/ 01-ADREID0\n                         00000040            2028+EI22SSYS EQU   X'40'                /* GET SHARED SYSDSN ENQ     @RLS*/ 01-ADREID0\n                         00000020            2029+EI22RRB  EQU   X'20'                /* MARK TGT RECOVERY REQ'D   @RLS*/ 01-ADREID0\n                         00000010            2030+EI22LINF EQU   X'10'                /* LOG INFO PASSED, SEE      @RLS*/ 01-ADREID0\n                                             2031+*                                   /* EI22LPRM AND EI22LSID     @RLS*/\n                         00000008            2032+EI22BWOP EQU   X'08'                /* BWO_ALLOWED PASSED, SEE   @RLS*/ 01-ADREID0\n                                             2033+*                                   /* EI22BWOA                  @RLS*/\n                         00000004            2034+EI22IMS  EQU   X'04'                /* TYPE=TYPEIMS PROCESS  @OW15980*/ 01-ADREID0\n                         00000002            2035+EI22BWOE EQU   X'02'                /* ENQ ON BWODSN ONLY,   @OW15980*/ 01-ADREID0\n                                             2036+*                                   /* NO ADR OR SYS ENQ'S   @OW15980*/\n                                             2037+*        EQU   X'01'                /* UNUSED                @OW45048*/\n 00000033                                    2038+EI22LPRM DS    CL1                  /* LOG PARAMETER FOR TGT     @RLS*/ 01-ADREID0\n 00000034                                    2039+EI22LSID DS    CL26                 /* LOG STREAM ID FOR TGT     @RLS*/ 01-ADREID0\n 0000004E                                    2040+EI22FLG3 DS    XL1                  /* MORE EXIT 22 FLAGS        @RLS*/ 01-ADREID0\n                         000000F0            2041+EI22BWOA EQU   X'F0'                /* BWO_ALLOWED               @RLS*/ 01-ADREID0\n                         00000008            2042+EI22BRLS EQU   X'08'                /* bypass RLS quiesce     @RLSCDS*/ 01-ADREID0\n                         00000004            2043+EI22SFSM EQU   X'04'                /* Set reconnectable flag    @FSM*/ 01-ADREID0\n                                             2044+*        EQU   X'03'                /* UNUSED                 @RLSCDS*/\n 0000004F                                    2045+         DS    CL23                 /* AVAILABLE                 @RLS*/ 01-ADREID0\n                                             2046+*                                                                    */\n                                             2047+*/********************************************************************/\n                                             2048+*/* THE FOLLOWING MAPS THE RECORD PRESENTED BY EXIT 23:          @V25*/\n                                             2049+*/*    DATA SET PROCESSED NOTIFICATION EXIT                      @V25*/\n                                             2050+*/********************************************************************/\n 00000000                00000000 00000351   2051+EIREC23  DSECT                                                /* @V25*/ 01-ADREID0\n 00000000                                    2052+EI23DSN  DS    CL44                 /* DATA SET/CLUSTER NAME     @V25*/ 01-ADREID0\n 0000002C                                    2053+EI23NEWN DS    CL44                 /* NEW DATA SET/CLUSTER NAME @V25*/ 01-ADREID0\n 00000058                                    2054+EI23DSRC DS    XL2                  /* RETURN CODE FOR DATA SET         01-ADREID0\n                                             2055+*                                      PROCESSING                @V25*/\n 0000005A                                    2056+EI23SFLG DS    0CL5                 /* SOURCE DATA SET FLAGS     @V25*/ 01-ADREID0\n 0000005A                                    2057+E23SSMSF DS    CL1                  /* SOURCE SMS FLAGS                 01-ADREID0\n1          UIMASM DFDSS OMVS exit                                                                               Page   41\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            2058+*                                                                @V25*/\n 0000005B                                    2059+E23SDSRG DS    CL2                  /* SOURCE DATA SET ORG              01-ADREID0\n                                             2060+*                                                                @V25*/\n 0000005D                                    2061+E23SVFLG DS    XL2                  /* VSAM DATA SET FLAGS:      @V25*/ 01-ADREID0\n                         00000080            2062+E23SESDS EQU   X'80'                /* 1=ESDS DATA SET           @V25*/ 01-ADREID0\n                         00000040            2063+E23SKSDS EQU   X'40'                /* 1=KSDS DATA SET           @V25*/ 01-ADREID0\n                         00000020            2064+E23SKRDS EQU   X'20'                /* 1=KRDS DATA SET           @V25*/ 01-ADREID0\n                         00000010            2065+E23SLDS  EQU   X'10'                /* 1=LINEAR DATA SET         @V25*/ 01-ADREID0\n                         00000008            2066+E23SRRDS EQU   X'08'                /* 1=RRDS DATA SET           @V25*/ 01-ADREID0\n                         00000004            2067+E23SPSSI EQU   X'04'                /* 1=PAGE/SWAP/STGINDEX, ETC.       01-ADREID0\n                                             2068+*                                        UNSUPPORTED DATA SETS   @V25*/\n                         00000002            2069+E23SVVDS EQU   X'02'                /* 1=VVDS DATA SET           @V25*/ 01-ADREID0\n                         00000001            2070+E23SBCS  EQU   X'01'                /* 1=BCS DATA SET            @V25*/ 01-ADREID0\n                         00000040            2071+E23BCSEL EQU   X'40'                /* 1=VRRDS DATA SET      @LA82401*/ 01-ADREID0\n                         00000020            2072+E23SVRRD EQU   X'20'                /* 1=VRRDS DATA SET      @LA82401*/ 01-ADREID0\n                         00000010            2073+EI23RRB  EQU   X'10'                /* RECOVERY REQUIRED         @RLS*/ 01-ADREID0\n                                             2074+*        EQU   X'0F'                /* UNUSED                    @RLS*/\n 0000005F                                    2075+EI23TFLG DS    0CL5                 /* TARGET DATA SET FLAGS     @V25*/ 01-ADREID0\n 0000005F                                    2076+E23TSMSF DS    CL1                  /* TARGET SMS FLAGS                 01-ADREID0\n                                             2077+*                                                                @V25*/\n 00000060                                    2078+E23TDSRG DS    CL2                  /* TARGET DATA SET ORG              01-ADREID0\n                                             2079+*                                                                @V25*/\n 00000062                                    2080+E23TVFLG DS    XL2                  /* VSAM DATA SET FLAGS:      @V25*/ 01-ADREID0\n                         00000080            2081+E23TESDS EQU   X'80'                /* 1=ESDS DATA SET           @V25*/ 01-ADREID0\n                         00000040            2082+E23TKSDS EQU   X'40'                /* 1=KSDS DATA SET           @V25*/ 01-ADREID0\n                         00000020            2083+E23TKRDS EQU   X'20'                /* 1=KRDS DATA SET           @V25*/ 01-ADREID0\n                         00000010            2084+E23TLDS  EQU   X'10'                /* 1=LINEAR DATA SET         @V25*/ 01-ADREID0\n                         00000008            2085+E23TRRDS EQU   X'08'                /* 1=RRDS DATA SET           @V25*/ 01-ADREID0\n                         00000004            2086+E23TPSSI EQU   X'04'                /* 1=PAGE/SWAP/STGINDEX, ETC.       01-ADREID0\n                                             2087+*                                        UNSUPPORTED DATA SETS   @V25*/\n                         00000002            2088+E23TVVDS EQU   X'02'                /* 1=VVDS DATA SET           @V25*/ 01-ADREID0\n                         00000001            2089+E23TBCS  EQU   X'01'                /* 1=BCS DATA SET            @V25*/ 01-ADREID0\n                         00000080            2090+E23TAIX  EQU   X'80'                /* 1=AIX DATA SET        @LA82401*/ 01-ADREID0\n                         00000040            2091+E23TVRRD EQU   X'40'                /* 1=VRRDS DATA SET      @LA82401*/ 01-ADREID0\n                                             2092+*        EQU   X'3F'                /* RESERVED              @LA82401*/\n 00000064                                    2093+EI23RLST DS    0CL16                /* RLS TIME STAMPS           @RLS*/ 01-ADREID0\n 00000064                                    2094+EI23GMT  DS    CL8                  /* RLS GMT TIME STAMP        @RLS*/ 01-ADREID0\n 0000006C                                    2095+EI23LOC  DS    CL8                  /* RLS LOCAL TIME STAMP      @RLS*/ 01-ADREID0\n 00000074                                    2096+E23BYTES DS    CL8                  /* TOTAL TRACK BYTES RESTORED,      01-ADREID0\n                                             2097+*                                         COPIED, OR DUMPED  @OW25343*/\n 0000007C                                    2098+E23FLGS  DS    XL1                  /* MISC FLAGS            @OW11555*/ 01-ADREID0\n                         00000080            2099+E23BSET  EQU   X'80'                /* 1=E23BYTES SET        @OW11555*/ 01-ADREID0\n                         00000040            2100+E23BPDS  EQU   X'40'                /* PDS IS BROKEN         @K131935*/ 01-ADREID0\n                         00000020            2101+E23BPSE  EQU   X'20'                /* E23BYTES IS FOR PSE   @OW25343*/ 01-ADREID0\n                         00000010            2102+E23F9ATT EQU   X'10'                /* F9 ATTRIBUTES NOT RESTD   @P0A*/ 01-ADREID0\n 0000007D                                    2103+EI23DEVT DS    CL6                  /* REQUIRED DEVICE TYPE  @K131935*/ 01-ADREID0\n 00000083                                    2104+         DS    CL9                  /* AVAILABLE             @K131935*/ 01-ADREID0\n 0000008C                                    2105+EI23VOL# DS    XL1                  /* NUMBER OF VOLUMES         @V25*/ 01-ADREID0\n 0000008D                                    2106+EI23VSER DS    118XL6               /* VOLSER ARRAY              @V25*/ 01-ADREID0\n                                             2107+*/********************************************************************/\n                                             2108+*/* THE FOLLOWING MAPS THE RECORD PRESENTED BY EXIT 24:          @V26*/\n                                             2109+*/*     CONCURRENT COPY INITIALIZATION COMPLETE                  @V26*/\n                                             2110+*/********************************************************************/\n 00000000                00000000 00000053   2111+EIREC24  DSECT                            /*                     @V26*/ 01-ADREID0\n 00000000                                    2112+EI24RTCD DS    H                          /* RETURN CODE         @V26*/ 01-ADREID0\n1          UIMASM DFDSS OMVS exit                                                                               Page   42\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n000000002                                    2113+EI24RSCD DS    H                          /* REASON CODE         @V26*/ 01-ADREID0\n 00000004                                    2114+         DS    F                          /* RESERVED            @V26*/ 01-ADREID0\n 00000008                                    2115+EI24VOL  DS    CL6                        /* VOLUME SERIAL       @V26*/ 01-ADREID0\n 0000000E                                    2116+EI24DSN  DS    CL44                       /* DATA SET NAME       @V26*/ 01-ADREID0\n 0000003A                                    2117+EI24FLGS DS    XL1                        /* FLAGS               @RLS*/ 01-ADREID0\n                         00000080            2118+EI24RSET EQU   X'80'                     /* DS CHANGE FLAG RESET @RLS*/ 01-ADREID0\n                         00000040            2119+E24SAIX  EQU   X'40'                      /* 1=AIX DATA SET      @IBC*/ 01-ADREID0\n                         00000020            2120+E24BCSEL EQU   X'20'                      /* 1=BASE CLUS SELECTD @IBC*/ 01-ADREID0\n                                             2121+*        EQU   X'1F'                      /* UNUSED              @IBC*/\n 0000003B                                    2122+         DS    CL24                       /* AVAILABLE           @RLS*/ 01-ADREID0\n                                             2123+*/********************************************************************/\n                                             2124+*/* THE FOLLOWING MAPS THE RECORD PRESENTED BY EXIT 26:      @OW15980*/\n                                             2125+*/*    DUMP OUTPUT VOLUME MOUNT NOTIFICATION EXIT            @OW15980*/\n                                             2126+*/********************************************************************/\n 00000000                00000000 000000BC   2127+EIREC26  DSECT                            /*                     @V26*/ 01-ADREID0\n 00000000                                    2128+EI26TYPE DS    XL4                     /* EXIT TYPE          @OW15980*/ 01-ADREID0\n                         00000080            2129+EI26VOL  EQU   X'80'           /* OUTPUT VOLUME NOTIFICATION @OW15980*/ 01-ADREID0\n                         00000040            2130+EI26TERM EQU   X'40'           /* OUTPUT VOLUME TERMINATED   @OW15980*/ 01-ADREID0\n                         00000020            2131+EI26R0CE EQU   X'20'           /* BWO R0 COUNT ERROR         @OW15980*/ 01-ADREID0\n                         00000010            2132+EI26VCLO EQU   X'10'           /* output volume close - only            01-ADREID0\n                                             2133+*                                 for DASD outputs during\n                                             2134+*                                 logical dump operations    @OW57536*/\n                         00000008            2135+EI26THWE EQU   X'08'           /* TAPE DEVICE WILL BE                   01-ADREID0\n                                             2136+*                                 ENCRYPTING DATA IN HARDWARE    @TPE*/\n 00000004                                    2137+EI26DSN  DS    CL64            /* DSNAME IF EI26R0CE = '1'B  @OW15980*/ 01-ADREID0\n 00000044                                    2138+EI26DSNL DS    AL1             /* LENGTH OF DSNAME           @OW15980*/ 01-ADREID0\n 00000045                                    2139+         DS    AL3             /* RESERVED FOR ALIGNMENT     @OW15980*/ 01-ADREID0\n 00000048                                    2140+EI26DDN  DS    CL8             /* output dd name if EI26VOL,            01-ADREID0\n                                             2141+*                                 EI26TERM, or EI26VCLO set  @OW57536*/\n 00000050                                    2142+EI26VSER DS    CL6             /* VOLSER - present if EI26VOL,          01-ADREID0\n                                             2143+*                                 EI26TERM, or EI26VCLO set  @OW57536*/\n 00000056                                    2144+         DS    CL2             /* RESERVED FOR ALIGNMENT     @OW15980*/ 01-ADREID0\n 00000058                                    2145+EI26VTRC DS    XL4             /* return code for volume                01-ADREID0\n                                             2146+*                                 term and volume close      @OW57536*/\n 0000005C                                    2147+         DS    CL96            /* RESERVED FOR EXPANSION     @OW15980*/ 01-ADREID0\n                                             2148+*/********************************************************************/\n                                             2149+*/* THE FOLLOWING MAPS THE RECORD PRESENTED BY EXIT 27:          @PDC*/\n                                             2150+*/*    PHYSICAL DATA SET PROCESSED NOTIFICATION EXIT             @PDC*/\n                                             2151+*/********************************************************************/\n 00000000                00000000 000000A8   2152+EIREC27  DSECT                                                /* @PDC*/ 01-ADREID0\n 00000000                                    2153+EI27DSN  DS    CL44                 /* DATA SET/CLUSTER NAME     @PDC*/ 01-ADREID0\n 0000002C                                    2154+EI27NEWN DS    CL44                 /* NEW DATA SET/CLUSTER NAME @PDC*/ 01-ADREID0\n 00000058                                    2155+EI27DSRC DS    XL2                  /* RETURN CODE FOR DATA SET         01-ADREID0\n                                             2156+*                                      PROCESSING                @PDC*/\n 0000005A                                    2157+EI27SFLG DS    0CL5                 /* SOURCE DATA SET FLAGS     @PDC*/ 01-ADREID0\n 0000005A                                    2158+E27SSMSF DS    CL1                  /* SOURCE SMS FLAGS                 01-ADREID0\n                                             2159+*                                                                @PDC*/\n 0000005B                                    2160+E27SDSRG DS    CL2                  /* SOURCE DATA SET ORG              01-ADREID0\n                                             2161+*                                                                @PDC*/\n 0000005D                                    2162+E27SVFLG DS    XL2                  /* VSAM DATA SET FLAGS:      @PDC*/ 01-ADREID0\n                         00008000            2163+E27SESDS EQU   X'8000'              /* 1=ESDS DATA SET           @PDC*/ 01-ADREID0\n                                             2164+*                                   /* FOR PHYSICAL DATA SET COPY\n                                             2165+*                                      IF THE SOURCE DATA SET IS A\n                                             2166+*                                      KSDS AND THE VOLUME BEING\n                                             2167+*                                      PROCESSED IS NOT THE PRIMARY\n1          UIMASM DFDSS OMVS exit                                                                               Page   43\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n0                                            2168+*                                      VOLUME AND THE INDEX FOR THAT\n                                             2169+*                                      KSDS DOES NOT RESIDE ON THE\n                                             2170+*                                      CURRENT VOLUME BEING PROCESSED,\n                                             2171+*                                      THIS BIT MAY BE ON BECAUSE\n                                             2172+*                                      IT APPEARS TO BE A ESDS\n                                             2173+*                                                            @OA17350*/\n                         00004000            2174+E27SKSDS EQU   X'4000'              /* 1=KSDS DATA SET           @PDC*/ 01-ADREID0\n                         00002000            2175+E27SKRDS EQU   X'2000'              /* 1=KRDS DATA SET           @PDC*/ 01-ADREID0\n                         00001000            2176+E27SLDS  EQU   X'1000'              /* 1=LINEAR DATA SET         @PDC*/ 01-ADREID0\n                         00000800            2177+E27SRRDS EQU   X'0800'              /* 1=RRDS DATA SET           @PDC*/ 01-ADREID0\n                         00000400            2178+E27SPSSI EQU   X'0400'              /* 1=PAGE/SWAP/STGINDEX, ETC.       01-ADREID0\n                                             2179+*                                        UNSUPPORTED DATA SETS   @PDC*/\n                         00000200            2180+E27SVVDS EQU   X'0200'              /* 1=VVDS DATA SET           @PDC*/ 01-ADREID0\n                         00000100            2181+E27SBCS  EQU   X'0100'              /* 1=BCS DATA SET            @PDC*/ 01-ADREID0\n                         00000080            2182+E27SAIX  EQU   X'0080'                                                  01-ADREID0\n                         00000040            2183+E27SVVRD EQU   X'0040'              /* 1=VRRDS DATA SET          @PDC*/ 01-ADREID0\n                                             2184+*        EQU   X'003F'              /* RESERVED                  @PDC*/\n 0000005F                                    2185+EI27TFLG DS    0CL5                 /* TARGET DATA SET FLAGS     @PDC*/ 01-ADREID0\n 0000005F                                    2186+E27TSMSF DS    CL1                  /* TARGET SMS FLAGS                 01-ADREID0\n                                             2187+*                                                                @PDC*/\n 00000060                                    2188+E27TDSRG DS    CL2                  /* TARGET DATA SET ORG              01-ADREID0\n                                             2189+*                                                                @PDC*/\n 00000062                                    2190+E27TVFLG DS    XL2                  /* VSAM DATA SET FLAGS:      @PDC*/ 01-ADREID0\n                         00008000            2191+E27TESDS EQU   X'8000'              /* 1=ESDS DATA SET           @PDC*/ 01-ADREID0\n                                             2192+*                                   /* FOR PHYSICAL DATA SET COPY\n                                             2193+*                                      IF THE SOURCE DATA SET IS A\n                                             2194+*                                      KSDS AND THE VOLUME BEING\n                                             2195+*                                      PROCESSED IS NOT THE PRIMARY\n                                             2196+*                                      VOLUME AND THE INDEX FOR THAT\n                                             2197+*                                      KSDS DOES NOT RESIDE ON THE\n                                             2198+*                                      CURRENT VOLUME BEING PROCESSED,\n                                             2199+*                                      THIS BIT MAY BE ON BECAUSE\n                                             2200+*                                      IT APPEARS TO BE A ESDS\n                                             2201+*                                                            @OA17350*/\n                         00004000            2202+E27TKSDS EQU   X'4000'              /* 1=KSDS DATA SET           @PDC*/ 01-ADREID0\n                         00002000            2203+E27TKRDS EQU   X'2000'              /* 1=KRDS DATA SET           @PDC*/ 01-ADREID0\n                         00001000            2204+E27TLDS  EQU   X'1000'              /* 1=LINEAR DATA SET         @PDC*/ 01-ADREID0\n                         00000800            2205+E27TRRDS EQU   X'0800'              /* 1=RRDS DATA SET           @PDC*/ 01-ADREID0\n                         00000400            2206+E27TPSSI EQU   X'0400'              /* 1=PAGE/SWAP/STGINDEX, ETC.       01-ADREID0\n                                             2207+*                                        UNSUPPORTED DATA SETS   @PDC*/\n                         00000200            2208+E27TVVDS EQU   X'0200'              /* 1=VVDS DATA SET           @PDC*/ 01-ADREID0\n                         00000100            2209+E27TBCS  EQU   X'0100'              /* 1=BCS DATA SET            @PDC*/ 01-ADREID0\n                         00000080            2210+E27TAIX  EQU   X'0080'              /* 1=AIX DATA SET            @PDC*/ 01-ADREID0\n                         00000040            2211+E27TVRRD EQU   X'0040'              /* 1=VRRDS DATA SET          @PDC*/ 01-ADREID0\n                         00000020            2212+E27TRACF EQU   X'0020'              /* 1=DATA SET IS PROTECTED BY       01-ADREID0\n                                             2213+*                                      DISCRETE RACF PROFILE     @PDC*/\n                                             2214+*        EQU   X'001F'              /* RESERVED                  @PDC*/\n 00000064                                    2215+EI27TRKS DS    CL8                  /* TOTAL TRACKS COPIED       @PDC*/ 01-ADREID0\n 0000006C                                    2216+EI27SVOL DS    CL6                  /* SOURCE VOLUME SERIAL      @PDC*/ 01-ADREID0\n 00000072                                    2217+EI27TVOL DS    CL6                  /* TARGET VOLUME SERIAL      @PDC*/ 01-ADREID0\n 00000078                                    2218+E27FLGS  DS    XL1                  /* MISC FLAGS                @PDC*/ 01-ADREID0\n                         00000080            2219+EI27LVOL EQU   X'80'                /* LAST VOLUME INDICATOR            01-ADREID0\n                                             2220+*                                      FROM THE SOURCE DATA SET  @PDC*/\n                         00000040            2221+E27F9ATT EQU   X'40'                /* F9 ATTRS LOST FLAG        @P0A*/ 01-ADREID0\n 00000079                                    2222+         DS    XL1                  /* RESERVED                  @PDC*/ 01-ADREID0\n1          UIMASM DFDSS OMVS exit                                                                               Page   44\n   Active Usings: PSA,R0  ADREIB,R10  UIMASM,R11  WORK,R13\n0D-Loc    Object Code      Addr1    Addr2    Stmt  Source Statement                          HLASM R6.0  2012/11/30 08.23\n00000007A                                    2223+EI27VLSQ DS    H                    /* VOLUME SEQUENCE NUMBER           01-ADREID0\n                                             2224+*                                      FROM THE SOURCE DATA SET  @PDC*/\n 0000007C                                    2225+EI27DSHA DS    F                    /* VSAM DATA COMPONENT HIGH         01-ADREID0\n                                             2226+*                                      ALLOCATED RBA COUNT       @PDC*/\n 00000080                                    2227+EI27ISHA DS    F                    /* VSAM INDEX COMPONENT HIGH        01-ADREID0\n                                             2228+*                                      ALLOCATED RBA COUNT       @PDC*/\n 00000084                                    2229+EI27SCNT DS    H                    /* VSAM DATA SET STRIPE             01-ADREID0\n                                             2230+*                                      COUNT. PROVIDED WHEN  @OA17350*/\n                                             2231+*                                      PROCESSING FIRST VOLUME OF\n                                             2232+*                                      MULTIVOLUME DATA SET.     @PDC*/\n 00000086                                    2233+E27DSTP# DS    H                    /* DATA COMPONENT STRIPE            01-ADREID0\n                                             2234+*                                      NUMBER                    @PDC*/\n 00000088                                    2235+EI27DRBA DS    F                    /* RBAS PROCESSED FOR THE           01-ADREID0\n                                             2236+*                                      DATA COMPONENT            @PDC*/\n 0000008C                                    2237+EI27IRBA DS    F                    /* RBAS PROCESSED FOR THE           01-ADREID0\n                                             2238+*                                      INDEX COMPONENT           @PDC*/\n 00000090                                    2239+         DS    CL24                 /* AVAILABLE                 @PDC*/ 01-ADREID0\n                                             2240+*/********************************************************************/\n                                             2241+*/* THE FOLLOWING MAPS THE RECORD PRESENTED BY EXIT 28:          @E2A*/\n                                             2242+*/*    TARGET DATA SET ALLOCATION NOTIFICATION EXIT              @E2A*/\n                                             2243+*/********************************************************************/\n 00000000                00000000 0000014C   2244+EIREC28  DSECT                                                /* @E2A*/ 01-ADREID0\n 00000000                                    2245+EI28PARMS1  DS    XL4               /* EXIT 28 PARMS FIELD 1            01-ADREID0\n                                             2246+*                                      ANY FIELD SET ON INDICATES\n                                             2247+*                                      THAT FIELD HAS BEEN SPECIFIED\n                                             2248+*                                      TO BE USED FOR THIS EXIT  @E2A*/\n                         80000000            2249+EI28EATTRP  EQU   X'80000000'       /* EATTR VALUE PASSED    @OA29235*/ 01-ADREID0\n                         40000000            2250+EI28F9DSCBP EQU   X'40000000'       /* F9 DSCB PASSED        @OA29235*/ 01-ADREID0\n                         20000000            2251+EI28CREDTP  EQU   X'20000000'       /* CREATION DATE PASSED  @OA29235*/ 01-ADREID0\n                         10000000            2252+EI28RCAP    EQU   X'10000000'       /* CA RECLAIM VAL PASSED @K1C0372*/ 01-ADREID0\n                                             2253+*           EQU   X'0FFFFFFF'       /* UNUSED                @K1C0372*/\n 00000004                                    2254+EI28PARMS2  DS    XL4               /* EXIT 28 PARMS FIELD 2     @E2A*/ 01-ADREID0\n                                             2255+*           EQU   X'FFFFFFFF'       /* UNUSED                @OA29235*/\n 00000008                                    2256+EI28TGTDSN  DS    XL44              /* TARGET DATA SET NAME      @E2A*/ 01-ADREID0\n 00000034                                    2257+EI28SRCDSN  DS    XL44              /* SOURCE DATA SET NAME      @E2A*/ 01-ADREID0\n 00000060                                    2258+EI28F9DSCB  DS    XL140             /* FORMAT 9 DSCB             @E2A*/ 01-ADREID0\n 000000EC                                    2259+EI28FIELDS1 DS    XL1               /* EXIT 28 FIELDS 1                 01-ADREID0\n                                             2260+*                                      FLAG BYTE FOR BIT FIELDS  @E2A*/\n                         000000C0            2261+EI28EATTR   EQU   X'C0'             /* EATTR VALUE TO BE USED FOR       01-ADREID0\n                                             2262+*                                      TARGET DATASET ALLOCATION\n                                             2263+*                                                            @OA29235*/\n                         00000020            2264+EI28RCA     EQU   X'20'             /* CA RECLAIM ATTR TO BE USED FOR   01-ADREID0\n                                             2265+*                                      TARGET DATASET ALLOC  @K1C0372*/\n                         00000000            2266+EI28EATTR_NS EQU  X'00'             /*  '00'B = NS (DEFAULT VALUE USED) 01-ADREID0\n                                             2267+*                                                            @OA29235*/\n                         00000040            2268+EI28EATTR_NO EQU  X'40'             /*  '01'B = NO           @OA29235*/ 01-ADREID0\n                         00000080            2269+EI28EATTR_OPT EQU X'80'             /*  '10'B = OPT          @OA29235*/ 01-ADREID0\n                                             2270+*           EQU   X'3F'             /* UNUSED                @OA29235*/\n 000000ED                                    2271+EI28CREDT   DS    XL3               /* CREATION DATE (DS1CREDT)  @E2A*/ 01-ADREID0\n 000000F0                                    2272+            DS    CL92              /* SPACE FOR EXPANSION       @E2A*/ 01-ADREID0\n                                             2273          PRINT OFF,NOGEN\n                                             2471+         PRINT OFF                                                      01-CVT\n                                             3804+         PRINT OFF                                                      01-IHAPSA\n1                                                 Relocation Dictionary                                         Page   45\n-   Pos.Id   Rel.Id   Address  Type  Action                                                  HLASM R6.0  2012/11/30 08.23\n0  00000008 00000008 000001A8   A 4     +\n   00000008 00000008 000001DC   A 4     +\n   00000008 00000008 00000204   A 4     +\n   00000008 0000000A 000001D0   A 4     +\n   00000008 0000000B 000001FC   V 4    ST\n1                                          Macro and Copy Code Source Summary                                   Page   46\n- Con Source                                        Volume    Members                        HLASM R6.0  2012/11/30 08.23\n0  L1 ESA.PRJ.CBTDSSN.ASM                           USER01    BPX1EQUS\n   L2 SYS1.MACLIB                                   Z1DT11    ABEND    ADREID0  BPXYCONS BPXYSIGH CALL     CVT\n                                                              IHAPSA   IHAPSAE  IHBINNRR IHBOPLTX LOAD     SYSSTATE\n   L4 CEE.SCEEMAC                                   Z1DT12    CEECAA   CEEDNUT  CEEDSA   CEEENTRY CEEPPA   CEETERM\n1                                                Dsect Cross Reference                                          Page   47\n-Dsect     Length      Id       Defn                                                         HLASM R6.0  2012/11/30 08.23\n0ADREIB   0000002C  FFFFFFFA    1787\n CEECAA   00000400  FFFFFFFD    1185\n CEEDSA   000000DE  FFFFFFFC    1529\n CEEDSAHP 00000840  FFFFFFFB    1579\n CVT      00000500  FFFFFFED    2476\n CVTVSTGX 00000050  FFFFFFEC    3593\n CVTXTNT1 0000000C  FFFFFFEB    3632\n CVTXTNT2 00000084  FFFFFFEA    3640\n DIRECTEDLOADRETURNEDPARMS\n          00000018  FFFFFFFF     633\n EIDDINFO 00000014  FFFFFFF9    1836\n EIREC00  00000010  FFFFFFF8    1849\n EIREC14  00000010  FFFFFFF7    1900\n EIREC20  00000042  FFFFFFF6    1910\n EIREC21  0000002C  FFFFFFF4    1974\n EIREC22  00000066  FFFFFFF3    1980\n EIREC23  00000351  FFFFFFF2    2051\n EIREC24  00000053  FFFFFFF1    2111\n EIREC26  000000BC  FFFFFFF0    2127\n EIREC27  000000A8  FFFFFFEF    2152\n EIREC28  0000014C  FFFFFFEE    2244\n EI20DSI  00000044  FFFFFFF5    1949\n PSA      00001000  FFFFFFE9    3807\n WORK     000001B4  FFFFFFFE    1130\n1                                                      Using Map                                                Page   48\n-                                                                                            HLASM R6.0  2012/11/30 08.23\n   Stmt  -----Location----- Action ----------------Using----------------- Reg Max     Last Label and Using Text\n           Count      Id           Type          Value    Range     Id        Disp    Stmt\n0   857  00000000  00000008 PUSH\n    858  00000000  00000008 DROP                                           **\n    859  00000000  00000008 USING  ORDINARY    00000000 00001000 00000008  15 00014    860 *,15\n    883  0000004A  00000008 POP\n    884  0000004A  00000008 USING  ORDINARY    00000000 00001000 FFFFFFFC  13 00048    885 CEEDSA,13\n    889  0000005E  00000008 USING  ORDINARY    00000000 00001000 00000008  11 00232   1002 UIMASM,R11\n    890  0000005E  00000008 USING  ORDINARY    00000000 00001000 FFFFFFFE  13 001A0   1005 WORK,R13\n    891  0000005E  00000008 USING  ORDINARY    00000000 00001000 FFFFFFE9   0 00010    896 PSA,R0\n    981  0000014C  00000008 USING  ORDINARY    00000000 00001000 FFFFFFFA  10 0001E    995 ADREIB,R10\n   3803  00000084  FFFFFFEA PUSH\n   3806  00000084  FFFFFFEA USING  ORDINARY    00000000 00001000 FFFFFFE9   0 00000        PSA,0\n   5201  00001000  FFFFFFE9 POP\n1                                   General Purpose Register Cross Reference                                    Page   49\n- Register  References (M=modified, B=branch, U=USING, D=DROP, N=index)                      HLASM R6.0  2012/11/30 08.23\n0    0(0)     867   869M  870M  871M  872   879   891U  892   909M  910   911M  912   913M  914   915M  916   919M  926M  931   950\n              967M  968M  969   976M  982   985M  987   998M 1000  1005M 3806U\n     1(1)     867   868M  871   876M  878   879   880   880   881   882   886M  887M  887   892   893   894   908M  910   912   914\n              916   917   927M  927   934M  935   937M  938   940M  941   943M  944   950   951M  964M  965M  969M  979M  982   984\n              988   998M 1000  1003M 1005M\n     2(2)     867   892   950   955M  979M  982   990M  993   998M 1000  1005M\n     3(3)     867   892   950   955M  979M  982   991M  994   998M 1000  1005M\n     4(4)     867   892   950   955M  979M  982   998M 1000  1001M 1005M\n     5(5)     867   892   950   955M  979M  982   998M 1000  1001M 1005M\n     6(6)     867   892   950   955M  979M  982   998M 1000  1001M 1005M\n     7(7)     867   892   950   955M  979M  982   998M 1000  1001M 1005M\n     8(8)     867   892   950   955M  979M  982   998M 1000  1001M 1005M\n     9(9)     867   892   950   955M  979M  982   998M 1000  1001M 1005M\n    10(A)     867   892   950   955M  979M  981U  982   984M  990   993M  998M 1000  1001M 1005M\n    11(B)     867   888M  889U  892   950   955M  979M  982   983M  998M 1000  1001M 1005M 2925B 2926B\n    12(C)     867   872   874   885   892   950   955M  979M  982   998M 1000  1001M 1005M\n    13(D)     867   868   878   881   882M  884U  886N  890U  892   946   950   953M  955M  977M  977N  978   979   982   985   986M\n              991   994M  995   996M  997N  998  1001M\n    14(E)     867   875M  892   896M  897M  897N  898M  898N  899   918M  947M  950   950   954M  955M  978M  980B  982   992M  998M\n              999B 1000  1001M 1004M 1005M 1006B\n    15(F)     859U  865   867   874M  875B  876   892   899M  918B  929M  929   950   952M  954B  966M  971M  975M  975   982   983N\n              997   998M 1000  1001M 1002M 1004B 1005M 3389M 3389\n1                                  Diagnostic Cross Reference and Assembler Summary                             Page   50\n-                                                                                            HLASM R6.0  2012/11/30 08.23\n0     No Statements Flagged in this Assembly\n HIGH LEVEL ASSEMBLER, 5696-234, RELEASE 6.0, PTF UK75466\n0SYSTEM: z/OS 01.13.00              JOBNAME: COMPALL     STEPNAME: UIMASM     PROCSTEP: ASMA90\n0Data Sets Allocated for this Assembly\n  Con DDname   Data Set Name                                Volume  Member\n   P1 SYSIN    ESA.PRJ.CBTDSSN.ASM                          USER01  UIMASM\n   L1 SYSLIB   ESA.PRJ.CBTDSSN.ASM                          USER01\n   L2          SYS1.MACLIB                                  Z1DT11\n   L3          SYS1.MODGEN                                  Z1DT12\n   L4          CEE.SCEEMAC                                  Z1DT12\n   L5          ASM.AASMMAC2                                 Z1DSM1\n   L6          ASM.AASMMAC1                                 Z1DSM1\n   L7          TCPIP.SEZACMAC                               Z1DT12\n   L8          TCPIP.SEZANMAC                               Z1DT12\n      SYSADATA ESA.PRJ.CBTDSSN.ADATA                        USER05  UIMASM\n      SYSLIN   ESA.PRJ.CBTDSSN.OBJECT                       USER07  UIMASM\n      SYSPRINT ESA.PRJ.CBTDSSN.COMPLIST                     USER04  UIMASM\n      SYSTERM  ESA.COMPALL.JOB01181.D0000101.?\n\n  917204K allocated to Buffer Pool       Storage required    1936K\n     168 Primary Input Records Read         9572 Library Records Read                  0 Work File Reads\n       0 ASMAOPT Records Read               2526 Primary Print Records Written         0 Work File Writes\n      26 Object Records Written            10618 ADATA Records Written\n0Assembly Start Time: 08.23.48 Stop Time: 08.23.49 Processor Time: 00.00.00.0684\n Return Code 002\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "UNCOMPR": {"ttr": 2683, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "ZUTIL": {"ttr": 2679, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT880/CBT.V500.FILE880.PDS/COMPLIST.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT880/CBT.V500.FILE880.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}